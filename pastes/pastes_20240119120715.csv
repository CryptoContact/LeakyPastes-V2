id,title,username,language,date,content
HNbFrbKT,data816,TestGuy1,JSON,Friday 19th of January 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'ddd284374cc3e36dec0b2e9eb1e1f196c4ea549eb69a9086bb037cd7e817a550c5cbc0042dc157d1ec41d2dcd3459d224dcde44732c952ad552641d4de3bc422eb366f5931519a829631751f4b422f14b4536f836b33530cddf494899012df1e09558aef5eb78434405cf0ed84f2cdabab121a7d80ab7ef6db1e84da985c07aa',
  otherdata: [
    'c8b2343da4a14d6e5dbb79193ec17a7b',
    'e01aa7138f67661b141b8c240b8b3eed',
    'e97fc8878e5da1b82316c916e54d6950',
    '2ae8bd5b0d9e4f7d4d1e3bc0fe0817e7',
    'b1de8613e08fc828891b3e16c27b7895',
    '901537388a024f7f472953ef6e8b9ce3',
    'd16302298811b707d6a32885655419b2',
    '87be386a5f12b0835c9a487ac4984502'
  ]
}"
jmV1EDzG,[1d] Pet Simulator 99! AutoFarm Script,Project-WD,Lua,Friday 19th of January 2024 05:58:19 AM CDT,"-- üÜïUpdate (20/01/2024)
-- AUTO FARM | ADMIN BYPASS | AUTO HATCH | AUTO OBBY & MORE
-- Scriptüìù: Paste into your executor
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
c0D7Di4D,Round Gauge,TimmyChannel,C#,Friday 19th of January 2024 05:56:31 AM CDT,"public partial class RoundGauge : UserControl
	{
		private double angle;
		private double minValue;
		private double maxValue;

		public RoundGauge()
		{
			InitializeComponent();
			angle = 0;
			DisplayedValue.Text = Value.ToString();
			CalculateAngle();
			UpdateVisibleArc();
		}

		public static readonly DependencyProperty ValueProperty =
		DependencyProperty.Register(""Value"", typeof(double), typeof(RoundGauge), new PropertyMetadata(0.0, OnValueChanged));

		public double Value
		{
			get { return (double)GetValue(ValueProperty); }
			set { SetValue(ValueProperty, value); }
		}

		private static void OnValueChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
		{
			RoundGauge roundGauge = (RoundGauge)d;
			double newValue = (double)e.NewValue;
			if (newValue < roundGauge.MinValue) roundGauge.MinValue = roundGauge.Value;
			if (newValue > roundGauge.MaxValue) roundGauge.MaxValue = roundGauge.Value;
			roundGauge.DisplayedValue.Text = newValue.ToString();
			roundGauge.CalculateAngle();
			roundGauge.UpdateVisibleArc();
		}
		public double MinValue { get => minValue; set => minValue = value; }
		public double MaxValue { get => maxValue; set => maxValue = value; }
		private void CalculateAngle()
		{
			double valueRange = maxValue - minValue;
			double normalizedValue = (Value - minValue) / valueRange;

			angle = normalizedValue * 360;
		}
		private void UpdateVisibleArc()
		{
			GaugeCanvas.Children.Clear();

			var clipGeometry = CreateClipGeometry();
			var gradientStops = CreateGradientStops();
			var startPoint = CalculateStartPoint();
			var endPoint = CalculateEndPoint();
			var gradEndPoint = CalculateGradEndPoint();
			var donutRing = CreateDonutRing(clipGeometry, gradientStops, startPoint, gradEndPoint);
			var circlesPoint = CalculateCirclesPoint(endPoint);
			var circle1 = CreateCircle(circlesPoint, 7, new SolidColorBrush(Color.FromRgb(217, 217, 217)));
			var circle2 = CreateCircle(circlesPoint, 10, new SolidColorBrush(Color.FromRgb(187, 112, 0)));
			var circle3 = CreateCircle(circlesPoint, 12, new SolidColorBrush(Color.FromArgb(51, 187, 112, 0)));
			var circle4 = CreateCircleWithBlur(circlesPoint, 14, new SolidColorBrush(Color.FromArgb(51, 187, 112, 0)));

			if (angle == 360)
			{
				GaugeCanvas.Children.Add(donutRing);
				GaugeCanvas.Children.Add(circle4);
				GaugeCanvas.Children.Add(circle3);
				GaugeCanvas.Children.Add(circle2);
				GaugeCanvas.Children.Add(circle1);
				return;
			}

			var visibleArc = CreateVisibleArc(startPoint, endPoint);
			donutRing.Clip = visibleArc.Data;

			GaugeCanvas.Children.Add(donutRing);
			GaugeCanvas.Children.Add(circle4);
			GaugeCanvas.Children.Add(circle3);
			GaugeCanvas.Children.Add(circle2);
			GaugeCanvas.Children.Add(circle1);
		}

		private PathGeometry CreateClipGeometry()
		{
			var clipGeometry = new PathGeometry();
			var outerCircleGeometry = new EllipseGeometry(new Rect(0, 0, ActualWidth, ActualHeight));
			var innerCircleGeometry = new EllipseGeometry(new Rect(ActualWidth * 0.05, ActualHeight * 0.05, ActualWidth * 0.9, ActualHeight * 0.9));
			clipGeometry.AddGeometry(outerCircleGeometry);
			clipGeometry.AddGeometry(innerCircleGeometry);
			return clipGeometry;
		}

		private GradientStopCollection CreateGradientStops()
		{
			var gradientStops = new GradientStopCollection
			{
				new GradientStop(Color.FromRgb(187, 112, 0), 0),
				new GradientStop(Color.FromRgb(43, 41, 48), 0.6)
			};
			return gradientStops;
		}

		private Point CalculateStartPoint()
		{
			var startAngle = (0 - 210) * Math.PI / 180;
			var startPoint = new Point(ActualWidth / 2 + Math.Cos(startAngle) * ActualWidth / 2, ActualHeight / 2 + Math.Sin(startAngle) * ActualHeight / 2);
			return startPoint;
		}

		private Point CalculateEndPoint()
		{
			var endAngle = (angle + 150) * Math.PI / 180;
			var endPoint = new Point(ActualWidth / 2 + Math.Cos(endAngle) * ActualWidth / 2, ActualHeight / 2 + Math.Sin(endAngle) * ActualHeight / 2);
			return endPoint;
		}

		private Point CalculateGradEndPoint()
		{
			var gradAngle = (angle - 210) * Math.PI / 180;
			var value1 = Math.Sin(gradAngle);
			var value2 = Math.Cos(gradAngle);
			var normalizedCos = (value2 + 1) * 0.5;
			var normalizedSin = (value1 + 1) * 0.5;
			var endGradAngle = Math.Atan2(normalizedSin - 0.5, normalizedCos - 0.5) + Math.PI;
			var x2 = 0.5 + 0.5 * Math.Cos(endGradAngle);
			var y2 = 0.5 + 0.5 * Math.Sin(endGradAngle);
			var gradEndPoint = new Point(x2, y2);
			return gradEndPoint;
		}

		private Path CreateDonutRing(PathGeometry clipGeometry, GradientStopCollection gradientStops, Point startPoint, Point gradEndPoint)
		{
			var gradAngle = (angle - 210) * Math.PI / 180;
			var value1 = Math.Sin(gradAngle);
			var value2 = Math.Cos(gradAngle);
			var normalizedCos = (value2 + 1) * 0.5;
			var normalizedSin = (value1 + 1) * 0.5;
			var donutRing = new Path
			{
				Fill = new LinearGradientBrush(gradientStops)
				{
					StartPoint = new Point(normalizedCos, normalizedSin),
					EndPoint = gradEndPoint,
				},
				Data = clipGeometry
			};
			return donutRing;
		}

		private Point CalculateCirclesPoint(Point endPoint)
		{
			var offset = 8;
			var circlesPoint = new Point();

			if (angle <= 30 || angle >= 300)
			{
				double t = Math.Min(Math.Max((angle - 30) / (360 - 30), 0), 1);
				circlesPoint.X = endPoint.X + offset * (1 - t);
				circlesPoint.Y = endPoint.Y - offset * t;
			}
			else if (angle > 30 && angle <= 120)
			{
				double t = Math.Min(Math.Max((angle - 30) / (120 - 30), 0), 1);
				circlesPoint.X = endPoint.X + offset * (1 - t);
				circlesPoint.Y = endPoint.Y + offset * t;
			}
			else if (angle > 120 - offset && angle <= 210)
			{
				double t = Math.Min(Math.Max((angle - (120 - offset)) / (210 - (120 - offset)), 0), 1);
				circlesPoint.X = endPoint.X - offset * t;
				circlesPoint.Y = endPoint.Y + offset * (1 - t);
			}
			else if (angle > 210 - offset && angle < 300)
			{
				double t = Math.Min(Math.Max((angle - (210 - offset)) / (300 - (210 - offset)), 0), 1);
				circlesPoint.X = endPoint.X - offset * (1 - t);
				circlesPoint.Y = endPoint.Y - offset * t;
			}
			return circlesPoint;
		}

		private Path CreateCircle(Point center, double radius, SolidColorBrush fill)
		{
			var circle = new Path
			{
				Data = new EllipseGeometry(new Rect(new Point(center.X - radius, center.Y - radius), new Size(radius * 2, radius * 2))),
				Fill = fill,
			};
			return circle;
		}

		private Path CreateCircleWithBlur(Point center, double radius, SolidColorBrush fill)
		{
			var circle = new Path
			{
				Data = new EllipseGeometry(new Rect(new Point(center.X - radius, center.Y - radius), new Size(radius * 2, radius * 2))),
				Fill = fill,
				Effect = new BlurEffect
				{
					Radius = 10,
					KernelType = KernelType.Gaussian
				}
			};
			return circle;
		}

		private Path CreateVisibleArc(Point startPoint, Point endPoint)
		{
			var visibleArc = new Path
			{
				Fill = Brushes.Red,
				Data = new PathGeometry
				{
					Figures = new PathFigureCollection
					{
						new PathFigure(new Point(ActualWidth / 2, ActualHeight / 2),
							new List<PathSegment>
							{
								new LineSegment(endPoint, true),
								new ArcSegment(startPoint, new Size(ActualWidth / 2, ActualHeight / 2), 0, angle>=180, SweepDirection.Counterclockwise, true),
								new LineSegment(new Point(ActualWidth / 2, ActualHeight / 2), true)
							},
						true)
					}
				}
			};
			return visibleArc;
		}

	}
}"
qCYEpWqi,WhatsApp: +86 19911539281 Buy fake City Guilds Level certificate.,jf123123,Bash,Friday 19th of January 2024 05:52:40 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

Where can I make the City Guilds Level 3 NVQ diploma? Buy fake City Guilds Level certificate, How to get a City Guilds Level 3 NVQ certificate? Order fake City Guilds Level Engineering Maintenance Mechanical certificate, Buy fake City Guilds certificate diploma, Obtain the latest version of the third-level NVQ certificate sample of the city guild, order a City and Guilds of London Institute certificate. https://www.diploma888.com/sample/city-guilds-certificate/
"
shQcZQ45,How to buy fake University of Texas at Dallas degree?,jf123123,C,Friday 19th of January 2024 05:47:08 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

How to buy fake University of Texas at Dallas degree? Order fake University of Texas at Dallas (UTD) diploma online. Where to obtain replacement University of Texas at Dallas certificate? Fake UTD degree certificate for sale, Make the UT Dallas Academic transcript, Purchase a fake Texas degree. https://www.diploma888.com/sample/utd-degree/

The University of Texas at Dallas is a public research university located in Richardson, Texas, in the center of the Dallas-Fort Worth Metroplex. The University is home to nearly 30,000 students with close to 30% pursuing graduate degrees. buy fake degree, buy fake diploma, fake cetificate, How to buy fake USA diploma?

"
6Q6uSyZP,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Friday 19th of January 2024 05:44:15 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

609335"
kUKcrnhh,WhatsApp: +86 19911539281  Fake WGU certificate for sale.,jf123123,Bash,Friday 19th of January 2024 05:41:37 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information.

How to buy fake Western Governors University (WGU) degree? Where to obtain replacement Western Governors University diploma? Fake WGU certificate for sale, Make the WGU Academic transcript, Order fake WGU degree certificate, Buy a WGU diploma sample, Purchase a fake USA diploma.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

"
QG2U4T7F,WhatsApp: +86 19911539281 Order fake UWO diploma online.,jf123123,Bash,Friday 19th of January 2024 05:35:21 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information. https://www.diploma888.com/sample/uwo-degree/

Buy fake University Western Ontario degree, Order fake UWO diploma online, Fake University Western Ontario certificate for sale, Where to order fake University Western Ontario degree certificate? Buy a UWO diploma sample in Ontario, How to buy fake University Western Ontario degree? Purchase a fake Canada diploma.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

"
LQq9VvHn,"""Chattingan di Terminal dengan Netcut: Panduan Sederhana""",paperline27,Bash,Friday 19th of January 2024 05:24:54 AM CDT,"
[ install ]
apt install netcat-openbsd
[ temenmu ]
#nc -l 9090
[ kamu ]
#nc ip-wifimu 9090  ;contoh>> nc 192.168.0.111 9090

=√ó=
:untuk mengirim pesan cukup dengan enter
:keep secure & keep ethical hacking
:happy hacking !!!
"
Q4WW872Y,Untitled,AppiChudilko,JavaScript,Friday 19th of January 2024 05:17:47 AM CDT,"class MetroGraph {
    constructor() {
        this.stations = {};
    }

    addStation(stationName) {
        this.stations[stationName] = {};
    }

    addConnection(stationA, stationB, time) {
        this.stations[stationA][stationB] = time;
        this.stations[stationB][stationA] = time;
    }

    dijkstraWithMultiplePaths(startStation, endStation, numberOfPaths = 3) {
        const paths = [];

        for (let pathNumber = 0; pathNumber < numberOfPaths; pathNumber++) {
            const distances = {};
            const visited = {};
            const path = {};

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –∏ –ø—É—Ç–∏
            for (const station in this.stations) {
                distances[station] = Infinity;
                visited[station] = false;
                path[station] = null;
            }

            distances[startStation] = 0;

            // –®–∞–≥–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –î–µ–π–∫—Å—Ç—Ä—ã
            while (true) {
                let currentStation = null;
                let currentDistance = Infinity;

                // –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–ø–æ—Å–µ—â–µ–Ω–Ω—É—é —Å—Ç–∞–Ω—Ü–∏—é
                for (const station in this.stations) {
                    if (!visited[station] && distances[station] < currentDistance) {
                        currentStation = station;
                        currentDistance = distances[station];
                    }
                }

                // –ï—Å–ª–∏ –≤—Å–µ —Å—Ç–∞–Ω—Ü–∏–∏ –ø–æ—Å–µ—â–µ–Ω—ã, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                if (currentStation === null) break;

                // –ü–æ—Å–µ—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞–Ω—Ü–∏—é
                visited[currentStation] = true;

                // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –¥–æ —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç–∞–Ω—Ü–∏–π
                for (const neighborStation in this.stations[currentStation]) {
                    const timeToNeighbor = this.stations[currentStation][neighborStation];
                    const totalDistance = distances[currentStation] + timeToNeighbor;

                    if (totalDistance < distances[neighborStation]) {
                        distances[neighborStation] = totalDistance;
                        path[neighborStation] = currentStation;
                    }
                }
            }

            // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏
            const pathResult = [endStation];
            let current = endStation;

            while (current !== startStation) {
                const prevStation = path[current];
                pathResult.unshift(prevStation);
                current = prevStation;
            }

            paths.push({
                distance: distances[endStation],
                path: pathResult,
            });
        }

        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—É—Ç–µ–π –ø–æ –¥–ª–∏–Ω–µ
        paths.sort((a, b) => a.distance - b.distance);

        return paths;
    }

    dijkstra(startStation, endStation) {
        const distances = {};
        const visited = {};
        const path = {};

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –∏ –ø—É—Ç–∏
        for (const station in this.stations) {
            distances[station] = Infinity;
            visited[station] = false;
            path[station] = null;
        }

        distances[startStation] = 0;

        // –®–∞–≥–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –î–µ–π–∫—Å—Ç—Ä—ã
        while (true) {
            let currentStation = null;
            let currentDistance = Infinity;

            // –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–ø–æ—Å–µ—â–µ–Ω–Ω—É—é —Å—Ç–∞–Ω—Ü–∏—é
            for (const station in this.stations) {
                if (!visited[station] && distances[station] < currentDistance) {
                    currentStation = station;
                    currentDistance = distances[station];
                }
            }

            // –ï—Å–ª–∏ –≤—Å–µ —Å—Ç–∞–Ω—Ü–∏–∏ –ø–æ—Å–µ—â–µ–Ω—ã, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
            if (currentStation === null) break;

            // –ü–æ—Å–µ—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞–Ω—Ü–∏—é
            visited[currentStation] = true;

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –¥–æ —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç–∞–Ω—Ü–∏–π
            for (const neighborStation in this.stations[currentStation]) {
                const timeToNeighbor = this.stations[currentStation][neighborStation];
                const totalDistance = distances[currentStation] + timeToNeighbor;

                if (totalDistance < distances[neighborStation]) {
                    distances[neighborStation] = totalDistance;
                    path[neighborStation] = currentStation;
                }
            }
        }

        // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏
        const pathResult = [endStation];
        let current = endStation;

        while (current !== startStation) {
            const prevStation = path[current];
            pathResult.unshift(prevStation);
            current = prevStation;
        }

        return {
            distance: distances[endStation],
            path: pathResult,
        };
    }
}


// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const metro = new MetroGraph();

metro.addStation(""A"");
metro.addStation(""B"");
metro.addStation(""C"");
metro.addStation(""D"");

metro.addConnection(""A"", ""B"", 5);
metro.addConnection(""B"", ""C"", 3);
metro.addConnection(""C"", ""D"", 7);
metro.addConnection(""A"", ""D"", 20);

const result = metro.dijkstraWithMultiplePaths(""A"", ""D"");

console.log(""Result:"", result);
"
9DG4bNw8,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Friday 19th of January 2024 05:06:38 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_449050.pdf
 
Working as of
19 January 2024"
kTK4mEyT,mcadiff.py,zydeco,Python,Friday 19th of January 2024 04:40:17 AM CDT,"import mcworldlib as mc
import deepdiff
import re
from sys import argv

#argv = [None, 'world/region/r.0.0.original.mca', 'world/region/r.0.0.mca']

name1 = argv[1]
name2 = argv[2]
file1 = mc.anvil.load_region(name1)
file2 = mc.anvil.load_region(name2)

chunks1 = set(file1.keys())
chunks2 = set(file2.keys())
if chunks1 != chunks2:
    print(""Chunks missing:"")
    removed = (chunks1-chunks2)
    added = (chunks2-chunks1)
    if len(removed) > 0:
        print(f""-{removed}"")
    if len(added) > 0:
        print(f""+{added}"")

def chunkdiff(chunk1, chunk2):
    keys1 = chunk1.keys()
    keys2 = chunk2.keys()
    if keys1 != keys2:
        removed = set(keys1) - set(keys2)
        added = set(keys2) - set(keys1)
        if len(removed) > 0:
            print(f""-{removed}"")
        if len(added) > 0:
            print(f""+{added}"")
    for key in keys1:
        k1 = chunk1[key]
        k2 = chunk2[key]
        if k1 != k2:
            diff = deepdiff.DeepDiff(k1, k2)
            for path in diff.affected_paths:
                changed = diff['values_changed'][path]
                printable_path = re.sub('^root', key, path)
                print(f""-{printable_path} = {changed['old_value']}"")
                print(f""+{printable_path} = {changed['new_value']}"")
    return None

for chunk in set.intersection(chunks1, chunks2):
    chunk1 = file1[chunk]
    chunk2 = file2[chunk]
    if chunk1 != chunk2:
        print(f""in chunk {chunk}:"")
        chunkdiff(chunk1, chunk2)
"
vuriKiys,h8g8 is not the best,max2201111,Python,Friday 19th of January 2024 04:39:57 AM CDT,"import chess
import time
import threading

positions_count = 0
stop_thread = False

def count_pieces(board):
    """"""Spoƒç√≠t√° a vr√°t√≠ poƒçet figurek na ≈°achovnici.""""""
    count = 0
    for square in chess.SQUARES:
        if board.piece_at(square):
            count += 1
    return count

def update_positions_count_and_time():
    global positions_count, start_time
    while not stop_thread:
        elapsed_time = time.time() - start_time
        formatted_time = format_time(elapsed_time)
        print(f""\rProhledan√Ωch pozic: {positions_count} ƒåas: {formatted_time}"", end='')
        time.sleep(1)

def format_time(seconds):
    """"""P≈ôevede sekundy na form√°t %dd %hh %mm %ss.""""""
    days, seconds = divmod(seconds, 86400)
    hours, seconds = divmod(seconds, 3600)
    minutes, seconds = divmod(seconds, 60)
    return f""{int(days)}d {int(hours):02d}h {int(minutes):02d}m {int(seconds):02d}s""

def evaluate_board(board, depth):
    global positions_count
    positions_count += 1
    if board.is_checkmate():
        return 10000 - depth
    if board.is_stalemate() or board.can_claim_draw():
        return 0
    return None

def negamax(board, depth, alpha, beta, color, move_history):
    evaluated = evaluate_board(board, depth)
    if evaluated is not None:
        return color * evaluated
    
    if depth == 0 or board.is_game_over():
        return count_pieces(board)

    max_eval = float('-inf')
    for move in board.legal_moves:
        board.push(move)
        move_history.append(board.fen())
        eval = -negamax(board, depth - 1, -beta, -alpha, -color, move_history)
        board.pop()
        move_history.pop()
        if eval > max_eval:
            max_eval = eval
        alpha = max(alpha, eval)
        if alpha >= beta:
            break

    return max_eval

def find_best_move(board, depth):
    best_move = None
    best_value = float('-inf')
    alpha = float('-inf')
    beta = float('inf')
    color = 1 if board.turn else -1
    move_history = [board.fen()]

    for move in board.legal_moves:
        board.push(move)
        move_history.append(board.fen())
        board_value = -negamax(board, depth - 1, -beta, -alpha, -color, move_history)
        board.pop()
        move_history.pop()
        if board_value > best_value:
            best_value = board_value
            best_move = move

    return best_move, move_history

start_position = ""8/3k4/8/8/8/8/1K1p4/8 w - - 0 1""
start_position = ""8/3k4/8/8/8/8/1K1p4/8 w - - 0 1""
start_position = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""

board = chess.Board(start_position)
depth = 13

start_time = time.time()
print(""Poƒç√°teƒçn√≠ pozice:"")
print(board)
print()

positions_count_thread = threading.Thread(target=update_positions_count_and_time, daemon=True)
positions_count_thread.start()

best_move, move_history = find_best_move(board, depth)
stop_thread = True

print(""\nHistorie tah≈Ø od nejlep≈°√≠ho k poƒç√°teƒçn√≠mu:"")
for fen in move_history:
    print(chess.Board(fen))
    print()

if best_move is not None:
    print(f""Nejlep≈°√≠ tah je: {best_move.uci()}"")
else:
    print(""≈Ω√°dn√Ω dal≈°√≠ leg√°ln√≠ tah nen√≠ mo≈æn√Ω."")

print(""\nKonec hry"")"
qZFdH3ML,–°–ü–†–ò–ù–¢ ‚Ññ 5 | –ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã | –£—Ä–æ–∫ 8: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏–∑ <algorithm> 1/2,chevengur,C++,Friday 19th of January 2024 04:27:56 AM CDT,"#include <algorithm>
#include <iostream>
#include <numeric>
#include <sstream>
#include <vector>

using namespace std;

// —Ñ—É–Ω–∫—Ü–∏—è, –∑–∞–ø–∏—Å—ã–≤–∞—é—â–∞—è —ç–ª–µ–º–µ–Ω—Ç—ã –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫—É
template <typename It>
string PrintRangeToString(It range_begin, It range_end) {
    ostringstream out;
    for (auto it = range_begin; it != range_end; ++it) {
        out << *it << "" "";
    }
    out << endl;
    return out.str();
}

template <typename It>
vector<string> GetPermutations(It range_begin, It range_end){
    vector<string> result;
    sort(range_begin, range_end);

    do{
        result.push_back(PrintRangeToString(range_begin, range_end));
    }while(next_permutation(range_begin, range_end));

    return result;
}

int main() {
    vector<int> permutation(3);
    iota(permutation.begin(), permutation.end(), 1);

    auto result = GetPermutations(permutation.begin(), permutation.end());
    for (const auto& s : result) {
        cout << s;
    }

    return 0;
}
"
JKe8ce2T,swap phones,petar_bonov,HTML,Friday 19th of January 2024 04:25:58 AM CDT,"–ø–æ–¥ <div class=""candidate-search candidate-search-1""> –∏ candidate-search-2 / –Ω–∞–¥ <h3></h3>

<div class=""swap-phones"" title=""Swap phones""><a href=""#""><i class=""head-icon icon-swap""></i></a></div>

–ø–æ–¥ <div class=""candidate-search candidate-search-3"">

<div class=""swap-phones empty""></div>"
cHASGJNF,Reverse_Linked_list,naren_paste,Python,Friday 19th of January 2024 04:20:21 AM CDT,"class ListNode:
    def __init__(self, value=0, next=None):
        self.value = value
        self.next = next

def reverse_linked_list(head, k):
    current = head
    prev = None
    next_node = None
    count = 0

    # Count the number of nodes in the current group
    temp = head
    while temp is not None and count < k:
        temp = temp.next
        count += 1

    # If the number of nodes in the group is less than k, no need to reverse
    if count < k:
        return head

    # Reverse the nodes in the current group
    while count > 0:
        next_node = current.next
        current.next = prev
        prev = current
        current = next_node
        count -= 1

    # Recursively reverse the rest of the linked list
    if next_node is not None:
        head.next = reverse_linked_list(next_node, k)

    return prev

def print_linked_list(head):
    current = head
    while current is not None:
        print(current.value, end="" -> "")
        current = current.next
    print(""None"")

# Example usage:
# Create a linked list: 1 -> 2 -> 3 -> 4 -> 5
head = ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5)))))

# Reverse in groups of k = 3
new_head = reverse_linked_list(head, 3)

# Print the reversed linked list
print_linked_list(new_head)
"
PYkQQmSx,ENGINE CONTROLS,JaMaNi133,Lua,Friday 19th of January 2024 03:32:49 AM CDT,"--pastebin get PYkQQmSx startup.lua

monitor = peripheral.wrap(""monitor_0"")
speedControllesWater = [peripheral.wrap(""Create_RotationSpeedController_1""),
	peripheral.wrap(""Create_RotationSpeedController_2""),
	peripheral.wrap(""Create_RotationSpeedController_0""),
	peripheral.wrap(""Create_RotationSpeedController_3""),
	peripheral.wrap(""Create_RotationSpeedController_4""),
	peripheral.wrap(""Create_RotationSpeedController_5"")]

speedControllesLava = [peripheral.wrap(""Create_RotationSpeedController_0""),
	peripheral.wrap(""Create_RotationSpeedController_1""),
	peripheral.wrap(""Create_RotationSpeedController_2""),
	peripheral.wrap(""Create_RotationSpeedController_3""),
	peripheral.wrap(""Create_RotationSpeedController_4""),
	peripheral.wrap(""Create_RotationSpeedController_5"")]

clutchesOutput = peripheral.wrap(""clutch"")

lavaOff = 0.000000001
lavaLow = 10
lavaOn  = 64

waterOff = 0.000000001
waterLow = 10
waterOn  = 64

monitor.setBackgroundColor(colors.black)
monitor.clear()
 
 
function loop()
    --loop
    
    
end
 
 
    
function generalUpdate()
    while true do
        loop()
        sleep(0.01)
    end
end
 
function respondMonitorTouched()
    while true do
        event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
    end
end
sleep(15)
parallel.waitForAny(respondMonitorTouched,generalUpdate)"
QP3fjjjt,shaders_release.h as of 2024-01-19,Kitomas,C,Friday 19th of January 2024 03:27:26 AM CDT,"// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_RELEASE_H_
# define SHADERS_RELEASE_H_
# define VAR_color ""n""
# define VAR_position ""v""

const char *testfrag_glsl =
 ""#version 330 core\n""
 ""layout(location=0) out vec4 n;""
 ""void main()""
 ""{""
   ""n=vec4(1,0,1,1);""
 ""}"";

const char *testvert_glsl =
 ""#version 330 core\n""
 ""layout(location=0) in vec4 v;""
 ""void main()""
 ""{""
   ""gl_Position=v;""
 ""}"";

#endif // SHADERS_RELEASE_H_
"
WgyZdUM0,shaders_debug.h as of 2024-01-19,Kitomas,C,Friday 19th of January 2024 03:25:38 AM CDT,"// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_DEBUG_H_
# define SHADERS_DEBUG_H_

const char *testfrag_glsl =
 ""#version 330 core\n""
 ""layout(location=0) out vec4 color;""
 ""void main()""
 ""{""
   ""color=vec4(1,0,1,1);""
 ""}"";

const char *testvert_glsl =
 ""#version 330 core\n""
 ""layout(location=0) in vec4 position;""
 ""void main()""
 ""{""
   ""gl_Position=position;""
 ""}"";

#endif // SHADERS_DEBUG_H_
"
r4exa6xG,shaders.hpp as of 2024-01-19,Kitomas,C++,Friday 19th of January 2024 03:24:30 AM CDT,"#ifndef _SHADERS_H
#define _SHADERS_H




#ifdef _DEBUG
# define VAR_color ""color""
# define VAR_position ""position""

#include ""shaders_debug.h""
#else
#include ""shaders_release.h""
#endif /* _DEBUG */




#endif /* _SHADERS_H */
"
bnW6kHbZ,minifyShaders.py as of 2024-01-19,Kitomas,Python,Friday 19th of January 2024 03:21:32 AM CDT,"#!/usr/bin/env python3
if __name__ != ""__main__"": exit(0)
from time import time
from os import walk as folderIterate, system as cmd
from os.path import isdir, exists, join as pathJoin
from sys import argv

#1st argument is one of these build modes
#2nd argument is the output file name
#the rest are input file names
build_modes = {
    ""-release"" : """",
    ""-debug""   : ""--no-renaming""
}


def getFilesInFolderRecursively(rootIn):
    paths = ''
    if not exists(rootIn): return None
    if not isdir(rootIn): return False
    for root, dirs, files in folderIterate(rootIn,topdown=True):
        for fi in files:
            paths += pathJoin(root,fi)+' '
    return paths


if len(argv) < 4: exit()

if not argv[1].lower() in build_modes:
    print(""Error: \""{}\"" is not a valid build mode!"".format(argv[1]))
    exit(1)

flags, paths  =  build_modes[argv[1]], ''

#(starting at 3 because argv[2] is the OUTPUT file, not input)
for i in range(3,len(argv)):
    paths += getFilesInFolderRecursively(argv[i])
    
    if type(paths) == bool:
        print(""Error: \""{}\"" is a file, not a folder!"".format(argv[i]))
        exit(1)
    elif paths == None:
        print(""Error: \""{}\"" does not exist!"".format(argv[i]))
        exit(1)
    elif type(paths) != str:
        print(""Error: paths returned unknown type"")
        exit(1)
    
if paths != '':
    cmd(""shader_minifier.exe {} -o {} {}"".format(flags, argv[2], paths))
    "
2XWraJ8d,7,raya_petkovaa,Python,Friday 19th of January 2024 02:39:01 AM CDT,"fuel_type = input()
fuel_litres_in_tank = float(input())
 
if fuel_type not in ('Diesel', 'Gasoline', 'Gas'):
    print(f'Invalid fuel!')
else:
    if fuel_litres_in_tank >= 25:
        print(f'You have enough {fuel_type.lower()}.')
    else:
        print(f'Fill your tank with {fuel_type.lower()}!')"
TibkKTgz,sail_up,smartcomputing123,Bash,Friday 19th of January 2024 02:12:07 AM CDT,"user@MSI:~/example-app$ ./vendor/bin/sail up
[+] Building 0.0s (0/0)                                                                                  docker:default
[+] Running 10/9
 ‚úî Network example-app_sail               Created                                                                  0.1s
 ‚úî Volume ""example-app_sail-mysql""        Created                                                                  0.0s
 ‚úî Volume ""example-app_sail-redis""        Created                                                                  0.0s
 ‚úî Volume ""example-app_sail-meilisearch""  Created                                                                  0.0s
 ‚úî Container example-app-meilisearch-1    Created                                                                  0.1s
 ‚úî Container example-app-redis-1          Created                                                                  0.1s
 ‚úî Container example-app-selenium-1       Created                                                                  0.1s
 ‚úî Container example-app-mailpit-1        Created                                                                  0.1s
 ‚úî Container example-app-mysql-1          Created                                                                  0.1s
 ‚úî Container example-app-laravel.test-1   Created                                                                  0.0s
Attaching to example-app-laravel.test-1, example-app-mailpit-1, example-app-meilisearch-1, example-app-mysql-1, example-app-redis-1, example-app-selenium-1
example-app-selenium-1      | 2024-01-17 05:01:19,942 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing
example-app-selenium-1      | 2024-01-17 05:01:19,947 INFO RPC interface 'supervisor' initialized
example-app-selenium-1      | 2024-01-17 05:01:19,948 CRIT Server 'unix_http_server' running without any HTTP authentication checking
example-app-selenium-1      | 2024-01-17 05:01:19,948 INFO supervisord started with pid 8
example-app-mailpit-1       | INFO[2024/01/17 05:01:19] [smtpd] starting on [::]:1025
example-app-mailpit-1       | INFO[2024/01/17 05:01:19] [http] starting on [::]:8025
example-app-mailpit-1       | INFO[2024/01/17 05:01:19] [http] accessible via http://localhost:8025/
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 * Redis version=7.2.4, bits=64, commit=00000000, modified=0, pid=1, just started
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.377 * monotonic clock: POSIX clock_gettime
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.377 * Running mode=standalone, port=6379.
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.378 * Server initialized
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.378 * Ready to accept connections tcp
example-app-mysql-1         | [Entrypoint] MySQL Docker Image 8.0.32-1.2.11-server
example-app-mysql-1         | [Entrypoint] Initializing database
example-app-mysql-1         | 2024-01-17T05:01:20.561452Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
example-app-mysql-1         | 2024-01-17T05:01:20.561511Z 0 [System] [MY-013169] [Server] /usr/sbin/mysqld (mysqld 8.0.32) initializing of server in progress as process 17
example-app-mysql-1         | 2024-01-17T05:01:20.568037Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
example-app-selenium-1      | 2024-01-17 05:01:20,951 INFO spawned: 'xvfb' with pid 9
example-app-selenium-1      | 2024-01-17 05:01:20,953 INFO spawned: 'vnc' with pid 10
example-app-selenium-1      | 2024-01-17 05:01:20,954 INFO spawned: 'novnc' with pid 11
example-app-selenium-1      | 2024-01-17 05:01:20,956 INFO spawned: 'selenium-standalone' with pid 12
example-app-selenium-1      | Setting up SE_NODE_GRID_URL...
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: novnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: selenium-standalone entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | Selenium Grid Standalone configuration:
example-app-selenium-1      | [network]
example-app-selenium-1      | relax-checks = true
example-app-selenium-1      |
example-app-selenium-1      | [node]
example-app-selenium-1      | session-timeout = ""300""
example-app-selenium-1      | override-max-sessions = false
example-app-selenium-1      | detect-drivers = false
example-app-selenium-1      | drain-after-session-count = 0
example-app-selenium-1      | max-sessions = 1
example-app-selenium-1      |
example-app-selenium-1      | [[node.driver-configuration]]
example-app-selenium-1      | display-name = ""chrome""
example-app-selenium-1      | stereotype = '{""browserName"": ""chrome"", ""browserVersion"": ""120.0"", ""platformName"": ""Linux"", ""goog:chromeOptions"": {""binary"": ""/usr/bin/google-chrome""}}'
example-app-selenium-1      | max-sessions = 1
example-app-selenium-1      |
example-app-selenium-1      | Starting Selenium Grid Standalone...
example-app-selenium-1      | Tracing is disabled
example-app-laravel.test-1  | 2024-01-17 05:01:21,337 INFO Set uid to user 0 succeeded
example-app-laravel.test-1  | 2024-01-17 05:01:21,339 INFO supervisord started with pid 1
example-app-selenium-1      | 05:01:21.488 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding
example-app-selenium-1      | 05:01:21.497 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing
example-app-mysql-1         | 2024-01-17T05:01:21.568051Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
example-app-meilisearch-1   |
example-app-meilisearch-1   | 888b     d888          d8b 888 d8b                                            888
example-app-meilisearch-1   | 8888b   d8888          Y8P 888 Y8P                                            888
example-app-meilisearch-1   | 88888b.d88888              888                                                888
example-app-meilisearch-1   | 888Y88888P888  .d88b.  888 888 888 .d8888b   .d88b.   8888b.  888d888 .d8888b 88888b.
example-app-meilisearch-1   | 888 Y888P 888 d8P  Y8b 888 888 888 88K      d8P  Y8b     ""88b 888P""  d88P""    888 ""88b
example-app-meilisearch-1   | 888  Y8P  888 88888888 888 888 888 ""Y8888b. 88888888 .d888888 888    888      888  888
example-app-meilisearch-1   | 888   ""   888 Y8b.     888 888 888      X88 Y8b.     888  888 888    Y88b.    888  888
example-app-meilisearch-1   | 888       888  ""Y8888  888 888 888  88888P'  ""Y8888  ""Y888888 888     ""Y8888P 888  888
example-app-meilisearch-1   |
example-app-meilisearch-1   | Config file path: ""none""
example-app-meilisearch-1   | Database path:            ""./data.ms""
example-app-meilisearch-1   | Server listening on:      ""http://0.0.0.0:7700""
example-app-meilisearch-1   | Environment:              ""development""
example-app-meilisearch-1   | Commit SHA:               ""a6fa0b97ecb5ac75ee0e180a956e4a066eda5f39""
example-app-meilisearch-1   | Commit date:              ""2024-01-15T09:37:31+00:00""
example-app-meilisearch-1   | Package version:  ""1.6.0""
example-app-meilisearch-1   |
example-app-meilisearch-1   | Thank you for using Meilisearch!
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   | We collect anonymized analytics to improve our product and your experience. To learn more, including how to turn off analytics, visit our dedicated documentation page: https://www.meilisearch.com/docs/learn/what_is_meilisearch/telemetry
example-app-meilisearch-1   |
example-app-meilisearch-1   | Anonymous telemetry:      ""Enabled""
example-app-meilisearch-1   | Instance UID:             ""e8bd85a7-82cb-4884-890e-843888405127""
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   |  No master key was found. The server will accept unidentified requests.
example-app-meilisearch-1   |
example-app-meilisearch-1   |  A master key of at least 16 bytes will be required when switching to a production environment.
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   | We generated a new secure master key for you (you can safely use this token):
example-app-meilisearch-1   |
example-app-meilisearch-1   | >> --master-key YrGhkiXfe3vHBeDazaxriT8DW-3EoTlyI3irKvAXlYw <<
example-app-meilisearch-1   |
example-app-meilisearch-1   | Restart Meilisearch with the argument above to use this new and secure master key.
example-app-meilisearch-1   |
example-app-meilisearch-1   | Check out Meilisearch Cloud!      https://www.meilisearch.com/cloud?utm_campaign=oss&utm_source=engine&utm_medium=cli
example-app-meilisearch-1   | Documentation:                    https://www.meilisearch.com/docs
example-app-meilisearch-1   | Source code:                      https://github.com/meilisearch/meilisearch
example-app-meilisearch-1   | Discord:                  https://discord.meilisearch.com
example-app-meilisearch-1   |
example-app-meilisearch-1   | [2024-01-17T05:01:21Z INFO  actix_server::builder] starting 10 workers
example-app-meilisearch-1   | [2024-01-17T05:01:21Z INFO  actix_server::server] Actix runtime found; starting in Actix runtime
example-app-selenium-1      | 05:01:22.263 INFO [NodeOptions.getSessionFactories] - Detected 20 available processors
example-app-selenium-1      | 05:01:22.292 INFO [NodeOptions.report] - Adding chrome for {""browserName"": ""chrome"",""browserVersion"": ""120.0"",""goog:chromeOptions"": {""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome""},""platformName"": ""linux"",""se:noVncPort"": 7900,""se:vncEnabled"": true} 1 times
example-app-selenium-1      | 05:01:22.305 INFO [Node.<init>] - Binding additional locator mechanisms: relative
example-app-selenium-1      | 05:01:22.318 INFO [GridModel.setAvailability] - Switching Node 8fbda06e-e606-43c7-aac2-d0aa4e50b744 (uri: http://172.18.0.2:4444) from DOWN to UP
example-app-selenium-1      | 05:01:22.319 INFO [LocalDistributor.add] - Added node 8fbda06e-e606-43c7-aac2-d0aa4e50b744 at http://172.18.0.2:4444. Health check every 120s
example-app-laravel.test-1  | 2024-01-17 05:01:22,342 INFO spawned: 'php' with pid 16
example-app-selenium-1      | 05:01:22.566 INFO [Standalone.execute] - Started Selenium Standalone 4.16.1 (revision 9b4c83354e): http://172.18.0.2:4444
example-app-laravel.test-1  | 2024-01-17 05:01:23,344 INFO success: php entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
example-app-mysql-1         | 2024-01-17T05:01:23.373898Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.
example-app-laravel.test-1  |
example-app-laravel.test-1  |    INFO  Server running on [http://0.0.0.0:80].
example-app-laravel.test-1  |
example-app-laravel.test-1  |   Press Ctrl+C to stop the server
example-app-laravel.test-1  |
example-app-mysql-1         | [Entrypoint] Database initialized
example-app-mysql-1         | 2024-01-17T05:01:27.174660Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
example-app-mysql-1         | 2024-01-17T05:01:27.176031Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.32) starting as process 60
example-app-mysql-1         | 2024-01-17T05:01:27.216550Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
example-app-mysql-1         | 2024-01-17T05:01:27.627325Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
example-app-mysql-1         | 2024-01-17T05:01:27.886488Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
example-app-mysql-1         | 2024-01-17T05:01:27.886522Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
example-app-mysql-1         | 2024-01-17T05:01:27.901016Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Socket: /var/run/mysqld/mysqlx.sock
example-app-mysql-1         | 2024-01-17T05:01:27.903794Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.32'  socket: '/var/lib/mysql/mysql.sock'  port: 0  MySQL Community Server - GPL.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/leapseconds' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/tzdata.zi' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/zone1970.tab' as time zone. Skipping it.
example-app-mysql-1         |
example-app-mysql-1         | [Entrypoint] running /docker-entrypoint-initdb.d/10-create-testing-database.sh
example-app-mysql-1         | mysql: [Warning] Using a password on the command line interface can be insecure.
example-app-mysql-1         |
example-app-mysql-1         | 2024-01-17T05:01:29.182746Z 15 [System] [MY-013172] [Server] Received SHUTDOWN from user root. Shutting down mysqld (Version: 8.0.32).
example-app-mysql-1         | 2024-01-17T05:01:30.843522Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.32)  MySQL Community Server - GPL.
example-app-mysql-1         | [Entrypoint] Server shut down
example-app-mysql-1         |
example-app-mysql-1         | [Entrypoint] MySQL init process done. Ready for start up.
example-app-mysql-1         |
example-app-mysql-1         | [Entrypoint] Starting MySQL 8.0.32-1.2.11-server
example-app-mysql-1         | 2024-01-17T05:01:31.399090Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
example-app-mysql-1         | 2024-01-17T05:01:31.400063Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.32) starting as process 1
example-app-mysql-1         | 2024-01-17T05:01:31.405284Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
example-app-mysql-1         | 2024-01-17T05:01:31.519698Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
example-app-mysql-1         | 2024-01-17T05:01:31.629835Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
example-app-mysql-1         | 2024-01-17T05:01:31.629869Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
example-app-mysql-1         | 2024-01-17T05:01:31.643235Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock
example-app-mysql-1         | 2024-01-17T05:01:31.643349Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.32'  socket: '/var/lib/mysql/mysql.sock'  port: 3306  MySQL Community Server - GPL.
example-app-meilisearch-1   | [2024-01-17T05:01:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000448
example-app-laravel.test-1  |   2024-01-17 05:01:55 ................................................... ~ 0s
example-app-laravel.test-1  |   2024-01-17 05:01:55 /favicon.ico ...................................... ~ 0s
example-app-meilisearch-1   | [2024-01-17T05:02:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000119
example-app-meilisearch-1   | [2024-01-17T05:02:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000098
example-app-meilisearch-1   | [2024-01-17T05:03:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000169
example-app-meilisearch-1   | [2024-01-17T05:03:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000105
example-app-meilisearch-1   | [2024-01-17T05:04:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000127
example-app-meilisearch-1   | [2024-01-17T05:04:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000157
example-app-meilisearch-1   | [2024-01-17T05:05:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000106
"
t9EPkeL4,curl_s_laravel_build_example,smartcomputing123,Bash,Friday 19th of January 2024 02:09:15 AM CDT,"user@MSI:~$ curl -s https://laravel.build/example-app | bash
latest: Pulling from laravelsail/php83-composer
Digest: sha256:bf8d87c943cacab0e04ead85e8c1db440e345fd1456714f736786ef4d18ba7b7
Status: Image is up to date for laravelsail/php83-composer:latest
   WARN  TTY mode requires /dev/tty to be read/writable.

    Creating a ""laravel/laravel"" project at ""./example-app""
    Installing laravel/laravel (v10.3.2)
      - Downloading laravel/laravel (v10.3.2)
      - Installing laravel/laravel (v10.3.2): Extracting archive
    Created project in /opt/example-app
    > @php -r ""file_exists('.env') || copy('.env.example', '.env');""
    Loading composer repositories with package information
    Updating dependencies
    Lock file operations: 111 installs, 0 updates, 0 removals
      - Locking brick/math (0.11.0)
  - Locking carbonphp/carbon-doctrine-types (2.1.0)
  - Locking dflydev/dot-access-data (v3.0.2)
  - Locking doctrine/inflector (2.0.9)
  - Locking doctrine/lexer (3.0.0)
  - Locking dragonmantank/cron-expression (v3.3.3)
  - Locking egulias/email-validator (4.0.2)
      - Locking fakerphp/faker (v1.23.1)
  - Locking filp/whoops (2.15.4)
  - Locking fruitcake/php-cors (v1.3.0)
      - Locking graham-campbell/result-type (v1.1.2)
      - Locking guzzlehttp/guzzle (7.8.1)
      - Locking guzzlehttp/promises (2.0.2)
  - Locking guzzlehttp/psr7 (2.6.2)
  - Locking guzzlehttp/uri-template (v1.0.3)
  - Locking hamcrest/hamcrest-php (v2.0.1)
  - Locking laravel/framework (v10.41.0)
  - Locking laravel/pint (v1.13.9)
  - Locking laravel/prompts (v0.1.15)
  - Locking laravel/sail (v1.27.1)
  - Locking laravel/sanctum (v3.3.3)
  - Locking laravel/serializable-closure (v1.3.3)
  - Locking laravel/tinker (v2.9.0)
  - Locking league/commonmark (2.4.1)
  - Locking league/config (v1.2.0)
  - Locking league/flysystem (3.23.0)
  - Locking league/flysystem-local (3.23.0)
  - Locking league/mime-type-detection (1.14.0)
  - Locking mockery/mockery (1.6.7)
  - Locking monolog/monolog (3.5.0)
  - Locking myclabs/deep-copy (1.11.1)
  - Locking nesbot/carbon (2.72.1)
  - Locking nette/schema (v1.2.5)
  - Locking nette/utils (v4.0.3)
  - Locking nikic/php-parser (v5.0.0)
  - Locking nunomaduro/collision (v7.10.0)
  - Locking nunomaduro/termwind (v1.15.1)
  - Locking phar-io/manifest (2.0.3)
  - Locking phar-io/version (3.2.1)
  - Locking phpoption/phpoption (1.9.2)
  - Locking phpunit/php-code-coverage (10.1.11)
  - Locking phpunit/php-file-iterator (4.1.0)
      - Locking phpunit/php-invoker (4.0.0)
  - Locking phpunit/php-text-template (3.0.1)
  - Locking phpunit/php-timer (6.0.0)
  - Locking phpunit/phpunit (10.5.7)
      - Locking psr/clock (1.0.0)
      - Locking psr/container (2.0.2)
      - Locking psr/event-dispatcher (1.0.0)
      - Locking psr/http-client (1.0.3)
      - Locking psr/http-factory (1.0.2)
  - Locking psr/http-message (2.0)
  - Locking psr/log (3.0.0)
  - Locking psr/simple-cache (3.0.0)
  - Locking psy/psysh (v0.12.0)
  - Locking ralouphie/getallheaders (3.0.3)
  - Locking ramsey/collection (2.0.0)
  - Locking ramsey/uuid (4.7.5)
  - Locking sebastian/cli-parser (2.0.0)
  - Locking sebastian/code-unit (2.0.0)
  - Locking sebastian/code-unit-reverse-lookup (3.0.0)
  - Locking sebastian/comparator (5.0.1)
  - Locking sebastian/complexity (3.2.0)
  - Locking sebastian/diff (5.1.0)
  - Locking sebastian/environment (6.0.1)
  - Locking sebastian/exporter (5.1.1)
  - Locking sebastian/global-state (6.0.1)
  - Locking sebastian/lines-of-code (2.0.2)
  - Locking sebastian/object-enumerator (5.0.0)
  - Locking sebastian/object-reflector (3.0.0)
  - Locking sebastian/recursion-context (5.0.0)
  - Locking sebastian/type (4.0.0)
  - Locking sebastian/version (4.0.1)
  - Locking spatie/backtrace (1.5.3)
  - Locking spatie/flare-client-php (1.4.3)
  - Locking spatie/ignition (1.12.0)
  - Locking spatie/laravel-ignition (2.4.1)
  - Locking symfony/console (v6.4.2)
  - Locking symfony/css-selector (v7.0.0)
  - Locking symfony/deprecation-contracts (v3.4.0)
  - Locking symfony/error-handler (v6.4.0)
  - Locking symfony/event-dispatcher (v7.0.2)
  - Locking symfony/event-dispatcher-contracts (v3.4.0)
  - Locking symfony/finder (v6.4.0)
  - Locking symfony/http-foundation (v6.4.2)
  - Locking symfony/http-kernel (v6.4.2)
  - Locking symfony/mailer (v6.4.2)
  - Locking symfony/mime (v6.4.0)
  - Locking symfony/polyfill-ctype (v1.28.0)
      - Locking symfony/polyfill-intl-grapheme (v1.28.0)
  - Locking symfony/polyfill-intl-idn (v1.28.0)
  - Locking symfony/polyfill-intl-normalizer (v1.28.0)
  - Locking symfony/polyfill-mbstring (v1.28.0)
      - Locking symfony/polyfill-php72 (v1.28.0)
      - Locking symfony/polyfill-php80 (v1.28.0)
      - Locking symfony/polyfill-php83 (v1.28.0)
      - Locking symfony/polyfill-uuid (v1.28.0)
      - Locking symfony/process (v6.4.2)
  - Locking symfony/routing (v6.4.2)
  - Locking symfony/service-contracts (v3.4.1)
  - Locking symfony/string (v7.0.2)
  - Locking symfony/translation (v6.4.2)
  - Locking symfony/translation-contracts (v3.4.1)
  - Locking symfony/uid (v6.4.0)
  - Locking symfony/var-dumper (v6.4.2)
  - Locking symfony/yaml (v7.0.0)
  - Locking theseer/tokenizer (1.2.2)
  - Locking tijsverkoyen/css-to-inline-styles (v2.2.7)
  - Locking vlucas/phpdotenv (v5.6.0)
  - Locking voku/portable-ascii (2.0.1)
  - Locking webmozart/assert (1.11.0)
    Writing lock file
Installing dependencies from lock file (including require-dev)
    Package operations: 111 installs, 0 updates, 0 removals
      - Downloading doctrine/inflector (2.0.9)
      - Downloading doctrine/lexer (3.0.0)
      - Downloading webmozart/assert (1.11.0)
      - Downloading dragonmantank/cron-expression (v3.3.3)
      - Downloading fakerphp/faker (v1.23.1)
      - Downloading symfony/polyfill-php83 (v1.28.0)
      - Downloading symfony/http-foundation (v6.4.2)
      - Downloading fruitcake/php-cors (v1.3.0)
      - Downloading psr/http-message (2.0)
      - Downloading psr/http-client (1.0.3)
      - Downloading ralouphie/getallheaders (3.0.3)
      - Downloading psr/http-factory (1.0.2)
      - Downloading guzzlehttp/psr7 (2.6.2)
      - Downloading guzzlehttp/promises (2.0.2)
      - Downloading guzzlehttp/guzzle (7.8.1)
      - Downloading guzzlehttp/uri-template (v1.0.3)
      - Downloading laravel/pint (v1.13.9)
      - Downloading symfony/string (v7.0.2)
      - Downloading symfony/service-contracts (v3.4.1)
      - Downloading symfony/console (v6.4.2)
      - Downloading phpoption/phpoption (1.9.2)
      - Downloading graham-campbell/result-type (v1.1.2)
      - Downloading vlucas/phpdotenv (v5.6.0)
      - Downloading symfony/css-selector (v7.0.0)
      - Downloading tijsverkoyen/css-to-inline-styles (v2.2.7)
  - Downloading symfony/var-dumper (v6.4.2)
      - Downloading symfony/polyfill-uuid (v1.28.0)
      - Downloading symfony/uid (v6.4.0)
      - Downloading symfony/routing (v6.4.2)
      - Downloading symfony/process (v6.4.2)
      - Downloading symfony/polyfill-php72 (v1.28.0)
      - Downloading symfony/polyfill-intl-idn (v1.28.0)
      - Downloading symfony/mime (v6.4.0)
      - Downloading psr/event-dispatcher (1.0.0)
      - Downloading symfony/event-dispatcher-contracts (v3.4.0)
      - Downloading symfony/event-dispatcher (v7.0.2)
      - Downloading psr/log (3.0.0)
      - Downloading egulias/email-validator (4.0.2)
      - Downloading symfony/mailer (v6.4.2)
      - Downloading symfony/error-handler (v6.4.0)
      - Downloading symfony/http-kernel (v6.4.2)
      - Downloading ramsey/collection (2.0.0)
      - Downloading brick/math (0.11.0)
      - Downloading ramsey/uuid (4.7.5)
      - Downloading nunomaduro/termwind (v1.15.1)
      - Downloading symfony/translation-contracts (v3.4.1)
      - Downloading symfony/translation (v6.4.2)
      - Downloading carbonphp/carbon-doctrine-types (2.1.0)
      - Downloading monolog/monolog (3.5.0)
      - Downloading league/mime-type-detection (1.14.0)
      - Downloading league/flysystem (3.23.0)
      - Downloading league/flysystem-local (3.23.0)
      - Downloading nette/utils (v4.0.3)
      - Downloading nette/schema (v1.2.5)
      - Downloading dflydev/dot-access-data (v3.0.2)
      - Downloading league/config (v1.2.0)
  - Downloading league/commonmark (2.4.1)
      - Downloading laravel/serializable-closure (v1.3.3)
      - Downloading laravel/prompts (v0.1.15)
      - Downloading laravel/framework (v10.41.0)
      - Downloading symfony/yaml (v7.0.0)
      - Downloading laravel/sail (v1.27.1)
      - Downloading laravel/sanctum (v3.3.3)
      - Downloading nikic/php-parser (v5.0.0)
      - Downloading psy/psysh (v0.12.0)
      - Downloading laravel/tinker (v2.9.0)
      - Downloading hamcrest/hamcrest-php (v2.0.1)
      - Downloading mockery/mockery (1.6.7)
      - Downloading filp/whoops (2.15.4)
      - Downloading nunomaduro/collision (v7.10.0)
      - Downloading sebastian/version (4.0.1)
      - Downloading sebastian/type (4.0.0)
      - Downloading sebastian/recursion-context (5.0.0)
      - Downloading sebastian/object-reflector (3.0.0)
      - Downloading sebastian/object-enumerator (5.0.0)
      - Downloading sebastian/global-state (6.0.1)
      - Downloading sebastian/exporter (5.1.1)
      - Downloading sebastian/environment (6.0.1)
      - Downloading sebastian/diff (5.1.0)
      - Downloading sebastian/comparator (5.0.1)
      - Downloading sebastian/code-unit (2.0.0)
      - Downloading sebastian/cli-parser (2.0.0)
      - Downloading phpunit/php-timer (6.0.0)
      - Downloading phpunit/php-text-template (3.0.1)
      - Downloading phpunit/php-invoker (4.0.0)
      - Downloading phpunit/php-file-iterator (4.1.0)
      - Downloading sebastian/lines-of-code (2.0.2)
      - Downloading sebastian/complexity (3.2.0)
      - Downloading sebastian/code-unit-reverse-lookup (3.0.0)
      - Downloading phpunit/php-code-coverage (10.1.11)
      - Downloading phpunit/phpunit (10.5.7)
      - Downloading spatie/backtrace (1.5.3)
      - Downloading spatie/flare-client-php (1.4.3)
      - Downloading spatie/ignition (1.12.0)
      - Downloading spatie/laravel-ignition (2.4.1)
      - Installing doctrine/inflector (2.0.9): Extracting archive
      - Installing doctrine/lexer (3.0.0): Extracting archive
      - Installing symfony/polyfill-ctype (v1.28.0): Extracting archive
      - Installing webmozart/assert (1.11.0): Extracting archive
      - Installing dragonmantank/cron-expression (v3.3.3): Extracting archive
      - Installing symfony/deprecation-contracts (v3.4.0): Extracting archive
      - Installing psr/container (2.0.2): Extracting archive
      - Installing fakerphp/faker (v1.23.1): Extracting archive
      - Installing symfony/polyfill-php80 (v1.28.0): Extracting archive
      - Installing symfony/polyfill-php83 (v1.28.0): Extracting archive
      - Installing symfony/polyfill-mbstring (v1.28.0): Extracting archive
      - Installing symfony/http-foundation (v6.4.2): Extracting archive
      - Installing fruitcake/php-cors (v1.3.0): Extracting archive
      - Installing psr/http-message (2.0): Extracting archive
      - Installing psr/http-client (1.0.3): Extracting archive
      - Installing ralouphie/getallheaders (3.0.3): Extracting archive
      - Installing psr/http-factory (1.0.2): Extracting archive
      - Installing guzzlehttp/psr7 (2.6.2): Extracting archive
      - Installing guzzlehttp/promises (2.0.2): Extracting archive
      - Installing guzzlehttp/guzzle (7.8.1): Extracting archive
      - Installing guzzlehttp/uri-template (v1.0.3): Extracting archive
      - Installing laravel/pint (v1.13.9): Extracting archive
      - Installing symfony/polyfill-intl-normalizer (v1.28.0): Extracting archive
      - Installing symfony/polyfill-intl-grapheme (v1.28.0): Extracting archive
      - Installing symfony/string (v7.0.2): Extracting archive
      - Installing symfony/service-contracts (v3.4.1): Extracting archive
      - Installing symfony/console (v6.4.2): Extracting archive
      - Installing voku/portable-ascii (2.0.1): Extracting archive
      - Installing phpoption/phpoption (1.9.2): Extracting archive
      - Installing graham-campbell/result-type (v1.1.2): Extracting archive
      - Installing vlucas/phpdotenv (v5.6.0): Extracting archive
      - Installing symfony/css-selector (v7.0.0): Extracting archive
      - Installing tijsverkoyen/css-to-inline-styles (v2.2.7): Extracting archive
      - Installing symfony/var-dumper (v6.4.2): Extracting archive
      - Installing symfony/polyfill-uuid (v1.28.0): Extracting archive
      - Installing symfony/uid (v6.4.0): Extracting archive
      - Installing symfony/routing (v6.4.2): Extracting archive
      - Installing symfony/process (v6.4.2): Extracting archive
      - Installing symfony/polyfill-php72 (v1.28.0): Extracting archive
      - Installing symfony/polyfill-intl-idn (v1.28.0): Extracting archive
      - Installing symfony/mime (v6.4.0): Extracting archive
      - Installing psr/event-dispatcher (1.0.0): Extracting archive
      - Installing symfony/event-dispatcher-contracts (v3.4.0): Extracting archive
      - Installing symfony/event-dispatcher (v7.0.2): Extracting archive
      - Installing psr/log (3.0.0): Extracting archive
      - Installing egulias/email-validator (4.0.2): Extracting archive
      - Installing symfony/mailer (v6.4.2): Extracting archive
      - Installing symfony/error-handler (v6.4.0): Extracting archive
      - Installing symfony/http-kernel (v6.4.2): Extracting archive
      - Installing symfony/finder (v6.4.0): Extracting archive
      - Installing ramsey/collection (2.0.0): Extracting archive
      - Installing brick/math (0.11.0): Extracting archive
      - Installing ramsey/uuid (4.7.5): Extracting archive
      - Installing psr/simple-cache (3.0.0): Extracting archive
      - Installing nunomaduro/termwind (v1.15.1): Extracting archive
      - Installing symfony/translation-contracts (v3.4.1): Extracting archive
      - Installing symfony/translation (v6.4.2): Extracting archive
      - Installing psr/clock (1.0.0): Extracting archive
      - Installing carbonphp/carbon-doctrine-types (2.1.0): Extracting archive
      - Installing nesbot/carbon (2.72.1): Extracting archive
      - Installing monolog/monolog (3.5.0): Extracting archive
      - Installing league/mime-type-detection (1.14.0): Extracting archive
      - Installing league/flysystem (3.23.0): Extracting archive
      - Installing league/flysystem-local (3.23.0): Extracting archive
      - Installing nette/utils (v4.0.3): Extracting archive
      - Installing nette/schema (v1.2.5): Extracting archive
      - Installing dflydev/dot-access-data (v3.0.2): Extracting archive
      - Installing league/config (v1.2.0): Extracting archive
      - Installing league/commonmark (2.4.1): Extracting archive
      - Installing laravel/serializable-closure (v1.3.3): Extracting archive
      - Installing laravel/prompts (v0.1.15): Extracting archive
      - Installing laravel/framework (v10.41.0): Extracting archive
      - Installing symfony/yaml (v7.0.0): Extracting archive
      - Installing laravel/sail (v1.27.1): Extracting archive
      - Installing laravel/sanctum (v3.3.3): Extracting archive
      - Installing nikic/php-parser (v5.0.0): Extracting archive
      - Installing psy/psysh (v0.12.0): Extracting archive
      - Installing laravel/tinker (v2.9.0): Extracting archive
      - Installing hamcrest/hamcrest-php (v2.0.1): Extracting archive
      - Installing mockery/mockery (1.6.7): Extracting archive
      - Installing filp/whoops (2.15.4): Extracting archive
      - Installing nunomaduro/collision (v7.10.0): Extracting archive
      - Installing sebastian/version (4.0.1): Extracting archive
      - Installing sebastian/type (4.0.0): Extracting archive
      - Installing sebastian/recursion-context (5.0.0): Extracting archive
      - Installing sebastian/object-reflector (3.0.0): Extracting archive
      - Installing sebastian/object-enumerator (5.0.0): Extracting archive
      - Installing sebastian/global-state (6.0.1): Extracting archive
      - Installing sebastian/exporter (5.1.1): Extracting archive
      - Installing sebastian/environment (6.0.1): Extracting archive
      - Installing sebastian/diff (5.1.0): Extracting archive
      - Installing sebastian/comparator (5.0.1): Extracting archive
      - Installing sebastian/code-unit (2.0.0): Extracting archive
      - Installing sebastian/cli-parser (2.0.0): Extracting archive
      - Installing phpunit/php-timer (6.0.0): Extracting archive
      - Installing phpunit/php-text-template (3.0.1): Extracting archive
      - Installing phpunit/php-invoker (4.0.0): Extracting archive
      - Installing phpunit/php-file-iterator (4.1.0): Extracting archive
      - Installing theseer/tokenizer (1.2.2): Extracting archive
      - Installing sebastian/lines-of-code (2.0.2): Extracting archive
      - Installing sebastian/complexity (3.2.0): Extracting archive
      - Installing sebastian/code-unit-reverse-lookup (3.0.0): Extracting archive
      - Installing phpunit/php-code-coverage (10.1.11): Extracting archive
      - Installing phar-io/version (3.2.1): Extracting archive
      - Installing phar-io/manifest (2.0.3): Extracting archive
      - Installing myclabs/deep-copy (1.11.1): Extracting archive
      - Installing phpunit/phpunit (10.5.7): Extracting archive
      - Installing spatie/backtrace (1.5.3): Extracting archive
      - Installing spatie/flare-client-php (1.4.3): Extracting archive
      - Installing spatie/ignition (1.12.0): Extracting archive
      - Installing spatie/laravel-ignition (2.4.1): Extracting archive
    55 package suggestions were added by new dependencies, use `composer suggest` to see details.
    Generating optimized autoload files
    > Illuminate\Foundation\ComposerScripts::postAutoloadDump
    > @php artisan package:discover --ansi

   INFO  Discovering packages.

      laravel/sail     ..........................................................     DONE
  laravel/sanctum     .......................................................     DONE
  laravel/tinker     ........................................................     DONE
      nesbot/carbon     .........................................................     DONE
  nunomaduro/collision     ..................................................     DONE
  nunomaduro/termwind     ...................................................     DONE
  spatie/laravel-ignition     ...............................................     DONE

    83 packages you are using are looking for funding.
Use the `composer fund` command to find out more!
    > @php artisan vendor:publish --tag=laravel-assets --ansi --force

   INFO  No publishable resources for tag [laravel-assets].

    No security vulnerability advisories found.
    > @php artisan key:generate --ansi

   INFO  Application key set successfully.

   INFO  Application ready in [example-app]. Build something amazing.

Sail scaffolding installed successfully.
   WARN  TTY mode requires /dev/tty to be read/writable.

[+] Pulling 65/5
 ‚úî mailpit 3 layers [‚£ø‚£ø‚£ø]      0B/0B      Pulled                                                                 423.8s
 ‚úî selenium 38 layers [‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø]      0B/0B      Pulled                            429.6s
 ‚úî meilisearch 6 layers [‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø]      0B/0B      Pulled                                                          270.6s
 ‚úî mysql 7 layers [‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø]      0B/0B      Pulled                                                               423.5s
 ‚úî redis 6 layers [‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø]      0B/0B      Pulled                                                                435.7s
[+] Building 949.8s (16/16) FINISHED                                                                     docker:default
 => [laravel.test internal] load build definition from Dockerfile                                                  0.1s
 => => transferring dockerfile: 3.21kB                                                                             0.0s
 => [laravel.test internal] load .dockerignore                                                                     0.1s
 => => transferring context: 2B                                                                                    0.0s
 => [laravel.test internal] load metadata for docker.io/library/ubuntu:22.04                                       4.6s
 => [laravel.test  1/11] FROM docker.io/library/ubuntu:22.04@sha256:dcd7ed8cfc7fd38ad9f7bf550263e626982e5daa7be0  15.5s
 => => resolve docker.io/library/ubuntu:22.04@sha256:dcd7ed8cfc7fd38ad9f7bf550263e626982e5daa7be0b2d5132130a478ec  0.0s
 => => sha256:dcd7ed8cfc7fd38ad9f7bf550263e626982e5daa7be0b2d5132130a478ecda9b 1.13kB / 1.13kB                     0.0s
 => => sha256:cb2af41f42b9c9bc9bcdc7cf1735e3c4b3d95b2137be86fd940373471a34c8b0 424B / 424B                         0.0s
 => => sha256:e34e831650c1bb0be9b6f61c6755749cb8ea2053ba91c6cda27fded9e089811f 2.30kB / 2.30kB                     0.0s
 => => sha256:29202e855b2021a2d7f92800619ed5f5e8ac402e267cfbb3d29a791feb13c1ee 29.55MB / 29.55MB                  14.4s
 => => extracting sha256:29202e855b2021a2d7f92800619ed5f5e8ac402e267cfbb3d29a791feb13c1ee                          1.0s
 => [laravel.test internal] load build context                                                                     0.0s
 => => transferring context: 847B                                                                                  0.0s
 => [laravel.test  2/11] WORKDIR /var/www/html                                                                     0.2s
 => [laravel.test  3/11] RUN ln -snf /usr/share/zoneinfo/UTC /etc/localtime && echo UTC > /etc/timezone            0.3s
 => [laravel.test  4/11] RUN apt-get update     && mkdir -p /etc/apt/keyrings     && apt-get install -y gnupg g  922.1s
 => [laravel.test  5/11] RUN setcap ""cap_net_bind_service=+ep"" /usr/bin/php8.3                                     0.4s
 => [laravel.test  6/11] RUN groupadd --force -g 1001 sail                                                         0.4s
 => [laravel.test  7/11] RUN useradd -ms /bin/bash --no-user-group -g 1001 -u 1337 sail                            0.5s
 => [laravel.test  8/11] COPY start-container /usr/local/bin/start-container                                       0.0s
 => [laravel.test  9/11] COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf                             0.0s
 => [laravel.test 10/11] COPY php.ini /etc/php/8.3/cli/conf.d/99-sail.ini                                          0.0s
 => [laravel.test 11/11] RUN chmod +x /usr/local/bin/start-container                                               0.4s
 => [laravel.test] exporting to image                                                                              5.1s
 => => exporting layers                                                                                            5.0s
 => => writing image sha256:7056770414b945f682a2f012a999b70f26e3f9d7c83c6478a7fa332259064c9f                       0.0s
 => => naming to sail-8.3/app                                                                                      0.0s

Please provide your password so we can make some final adjustments to your application's permissions.

[sudo] password for user:

Thank you! We hope you build something incredible. Dive in with: cd example-app && ./vendor/bin/sail up"
3c76V7nv,Express wrong route errors,IRONFIST001,JSON,Friday 19th of January 2024 01:51:20 AM CDT,"            schemaName: 'Number',       
            defaultOptions: {},
            _checkRequired: [Function (anonymous)],
            checkRequired: [Function (anonymous)]
          },        
          Error: [class MongooseError extends Error] {      
            messages: [Object],
            Messages: [Object],
            DocumentNotFoundError: [class DocumentNotFoundError extends MongooseError],
            CastError: [class CastError extends MongooseError],
            ValidationError: [class ValidationError extends MongooseError],     
            ValidatorError: [class ValidatorError extends MongooseError],       
            VersionError: [class VersionError extends MongooseError],
            ParallelSaveError: [class ParallelSaveError extends MongooseError], 
            OverwriteModelError: [class OverwriteModelError extends MongooseError],
            MissingSchemaError: [class MissingSchemaError extends MongooseError],
            MongooseServerSelectionError: [class MongooseServerSelectionError extends MongooseError],
            DivergentArrayError: [class DivergentArrayError extends MongooseError],
            StrictModeError: [class StrictModeError extends MongooseError],     
            StrictPopulateError: [class StrictPopulateError extends MongooseError]
          },        
          MongooseError: [class MongooseError extends Error] {
            messages: [Object],
            Messages: [Object],
            DocumentNotFoundError: [class DocumentNotFoundError extends MongooseError],
            CastError: [class CastError extends MongooseError],
            ValidationError: [class ValidationError extends MongooseError],     
            ValidatorError: [class ValidatorError extends MongooseError],       
            VersionError: [class VersionError extends MongooseError],
            ParallelSaveError: [class ParallelSaveError extends MongooseError], 
            OverwriteModelError: [class OverwriteModelError extends MongooseError],
            MissingSchemaError: [class MissingSchemaError extends MongooseError],
            MongooseServerSelectionError: [class MongooseServerSelectionError extends MongooseError],
            DivergentArrayError: [class DivergentArrayError extends MongooseError],
            StrictModeError: [class StrictModeError extends MongooseError],     
            StrictPopulateError: [class StrictPopulateError extends MongooseError]
          },        
          now: [Function: now],
          CastError: [class CastError extends MongooseError],
          SchemaTypeOptions: [class SchemaTypeOptions],     
          mongo: {  
            BSON: [Getter],
            Binary: [Getter],
            BSONRegExp: [Getter],       
            BSONSymbol: [Getter],       
            BSONType: [Getter],
            Code: [Getter],
            DBRef: [Getter],
            Decimal128: [Getter],       
            Double: [Getter],
            Int32: [Getter],
            Long: [Getter],
            MaxKey: [Getter],
            MinKey: [Getter],
            ObjectId: [Getter],
            Timestamp: [Getter],        
            UUID: [Getter],
            MongoBulkWriteError: [Getter],
            ClientEncryption: [Getter], 
            ChangeStreamCursor: [Getter],
            MongoAPIError: [Getter],    
            MongoAWSError: [Getter],    
            MongoAzureError: [Getter],  
            MongoBatchReExecutionError: [Getter],
            MongoChangeStreamError: [Getter],
            MongoCompatibilityError: [Getter],
            MongoCursorExhaustedError: [Getter],
            MongoCursorInUseError: [Getter],
            MongoDecompressionError: [Getter],
            MongoDriverError: [Getter], 
            MongoError: [Getter],       
            MongoExpiredSessionError: [Getter],
            MongoGridFSChunkError: [Getter],
            MongoGridFSStreamError: [Getter],
            MongoInvalidArgumentError: [Getter],
            MongoKerberosError: [Getter],
            MongoMissingCredentialsError: [Getter],
            MongoMissingDependencyError:
 [Getter],
            MongoNetworkError: [Getter],
            MongoNetworkTimeoutError: [Getter],
            MongoNotConnectedError: [Getter],
            MongoParseError: [Getter],  
            MongoRuntimeError: [Getter],
            MongoServerClosedError: [Getter],
            MongoServerError: [Getter], 
            MongoServerSelectionError: [Getter],
            MongoSystemError: [Getter], 
            MongoTailableCursorError: [Getter],
            MongoTopologyClosedError: [Getter],
            MongoTransactionError: [Getter],
            MongoUnexpectedServerResponseError: [Getter],   
            MongoWriteConcernError: [Getter],
            AbstractCursor: [Getter],   
            Admin: [Getter],
            AggregationCursor: [Getter],
            CancellationToken: [Getter],
            ChangeStream: [Getter],     
            ClientSession: [Getter],    
            Collection: [Getter],       
            Db: [Getter],
            FindCursor: [Getter],       
            GridFSBucket: [Getter],     
            GridFSBucketReadStream: [Getter],
            GridFSBucketWriteStream: [Getter],
            ListCollectionsCursor: [Getter],
            ListIndexesCursor: [Getter],
            MongoClient: [Getter],      
            OrderedBulkOperation: [Getter],
            UnorderedBulkOperation: [Getter],
            BatchType: [Getter],        
            AutoEncryptionLoggerLevel: [Getter],
            GSSAPICanonicalizationValue:
 [Getter],
            AuthMechanism: [Getter],    
            Compressor: [Getter],       
            CURSOR_FLAGS: [Getter],     
            MongoErrorLabel: [Getter],  
            ExplainVerbosity: [Getter], 
            ServerApiVersion: [Getter], 
            ReturnDocument: [Getter],   
            ProfilingLevel: [Getter],   
            ReadConcernLevel: [Getter], 
            ReadPreferenceMode: [Getter],
            ServerType: [Getter],       
            TopologyType: [Getter],     
            ReadConcern: [Getter],      
            ReadPreference: [Getter],   
            WriteConcern: [Getter],     
            CommandFailedEvent: [Getter],
            CommandStartedEvent: [Getter],
            CommandSucceededEvent: [Getter],
            ConnectionCheckedInEvent: [Getter],
            ConnectionCheckedOutEvent: [Getter],
            ConnectionCheckOutFailedEvent: [Getter],        
            ConnectionCheckOutStartedEvent: [Getter],       
            ConnectionClosedEvent: [Getter],
            ConnectionCreatedEvent: [Getter],
            ConnectionPoolClearedEvent: [Getter],
            ConnectionPoolClosedEvent: [Getter],
            ConnectionPoolCreatedEvent: [Getter],
            ConnectionPoolMonitoringEvent: [Getter],        
            ConnectionPoolReadyEvent: [Getter],
            ConnectionReadyEvent: [Getter],
            ServerClosedEvent: [Getter],
            ServerDescriptionChangedEvent: [Getter],        
            ServerHeartbeatFailedEvent: [Getter],
            ServerHeartbeatStartedEvent:
 [Getter],
            ServerHeartbeatSucceededEvent: [Getter],        
            ServerOpeningEvent: [Getter],
            TopologyClosedEvent: [Getter],
            TopologyDescriptionChangedEvent: [Getter],      
            TopologyOpeningEvent: [Getter],
            SrvPollingEvent: [Getter],  
            MongoCryptAzureKMSRequestError: [Getter],       
            MongoCryptCreateDataKeyError: [Getter],
            MongoCryptCreateEncryptedCollectionError: [Getter],
            MongoCryptError: [Getter],  
            MongoCryptInvalidArgumentError: [Getter],       
            MongoCryptKMSRequestNetworkTimeoutError: [Getter]
          },        
          mquery: [Function: Query] {   
            permissions: [Object],      
            _isPermitted: [Function (anonymous)],
            canMerge: [Function (anonymous)],
            setGlobalTraceFunction: [Function (anonymous)], 
            utils: [Object],
            env: [Object],
            Collection: [class NodeCollection extends Collection],
            BaseCollection: [Function]  
          },        
          sanitizeFilter: [Function: sanitizeFilter],       
          trusted: [Function: trusted], 
          skipMiddlewareFunction: [Function: skipWrappedFunction],
          overwriteMiddlewareResult: [Function: overwriteResult]
        },
        collections: { products: [Circular *5] },
        models: { Product: [Circular *2] },
        config: {}, 
        replica: false,
        options: null,
        otherDbs: [],
        relatedDbs: {},
        states: [Object: null prototype] {
          '0': 'disconnected',
          '1': 'connected',
          '2': 'connecting',
          '3': 'disconnecting',
          '99': 'uninitialized',        
          disconnected: 0,
          connected:
 1,
          connecting: 2,
          disconnecting: 3,
          uninitialized: 99
        },
        _readyState:
 1,
        _closeCalled: undefined,        
        _hasOpened: true,
        plugins: [],
        id: 0,      
        _queue: [], 
        _listening: false,
        _connectionOptions: { driverInfo: { name: 'Mongoose', version: '8.0.4' } },
        '$dbName': 'Ecommerce_Backend', 
        _connectionString: 'mongodb+srv://rahullalwani:rahul102002@ecommerce.8lybr5j.mongodb.net/?retryWrites=true',    
        client: <ref *4> MongoClient {  
          _events: [Object: null prototype] {
            topologyDescriptionChanged: [Function (anonymous)]
          },        
          _eventsCount: 1,
          _maxListeners: 0,
          mongoLogger: MongoLogger {    
            error: [Function: bound log],
            warn: [Function: bound log],
            info: [Function: bound log],
            debug: [Function: bound log],
            trace: [Function: bound log],
            componentSeverities: [Object],
            maxDocumentLength: 1000,    
            logDestination: [Object]    
          },        
          s: {      
            url: 'mongodb+srv://rahullalwani:rahul102002@ecommerce.8lybr5j.mongodb.net/?retryWrites=true',
            bsonOptions: [Object],      
            namespace: [MongoDBNamespace],
            hasBeenClosed: false,       
            sessionPool: [ServerSessionPool],
            activeSessions: Set(0) {},  
            options:
 [Getter],
            readConcern: [Getter],      
            writeConcern: [Getter],     
            readPreference: [Getter],   
            isMongoClient: [Getter]     
          },        
          connectionLock: undefined,    
          topology: Topology {
            _events: [Object: null prototype],
            _eventsCount: 26,
            _maxListeners: undefined,   
            client: [Circular *4],      
            selectServerAsync: [Function (anonymous)],      
            s: [Object],
            [Symbol(kCapture)]: false,  
            [Symbol(waitQueue)]: [List] 
          },        
          [Symbol(kCapture)]: false,    
          [Symbol(options)]: [Object: null prototype] {     
            hosts: [Array],
            credentials: [MongoCredentials],
            compressors: [Array],       
            connectTimeoutMS: 30000,    
            directConnection: false,    
            driverInfo: [Object],       
            enableUtf8Validation: true, 
            forceServerObjectId: false, 
            heartbeatFrequencyMS: 10000,
            loadBalanced: false,        
            localThresholdMS: 15,       
            maxConnecting: 2,
            maxIdleTimeMS: 0,
            maxPoolSize: 100,
            minPoolSize: 0,
            minHeartbeatFrequencyMS: 500,
            monitorCommands: false,     
            noDelay:
 true,
            pkFactory: [Object],        
            raw: false,
            readPreference: [ReadPreference],
            retryReads: true,
            retryWrites: true,
            serverSelectionTimeoutMS: 30000,
            socketTimeoutMS: 0,
            srvMaxHosts: 0,
            srvServiceName: 'mongodb',  
            waitQueueTimeoutMS: 0,      
            zlibCompressionLevel: 0,    
            dbName: 'test',
            userSpecifiedAuthSource: false,
            userSpecifiedReplicaSet: false,
            srvHost: 'ecommerce.8lybr5j.mongodb.net',       
            tls: true,
            mongoLoggerOptions: [Object],
            metadata: [Object],
            replicaSet: 'atlas-ozqfoq-shard-0',
            [Symbol(@@mdb.enableMongoLogger)]: false        
          }
        },
        '$initialConnection': Promise { [Circular *3] },    
        db: Db {    
          s: {      
            options:
 [Object],
            readPreference: [ReadPreference],
            bsonOptions: [Object],      
            pkFactory: [Object],        
            readConcern: undefined,     
            writeConcern: undefined,    
            namespace: [MongoDBNamespace]
          },        
          client: <ref *4> MongoClient {
            _events: [Object: null prototype],
            _eventsCount: 1,
            _maxListeners: 0,
            mongoLogger: [MongoLogger], 
            s: [Object],
            connectionLock: undefined,  
            topology: [Topology],       
            [Symbol(kCapture)]: false,  
            [Symbol(options)]: [Object: null prototype]     
          }
        },
        host: 'ac-u44yps1-shard-00-00.8lybr5j.mongodb.net', 
        port: 27017,
        name: 'Ecommerce_Backend'       
      },
      queue: [],    
      buffer: false,
      emitter: EventEmitter {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,       
        [Symbol(kCapture)]: false       
      }
    },
    Query: [Function (anonymous)] {     
      base: {       
        toConstructor: [Function: toConstructor],
        setOptions: [Function (anonymous)],
        collection: [Function: collection],
        collation: [Function (anonymous)],
        '$where': [Function (anonymous)],
        where: [Function (anonymous)],  
        equals: [Function: equals],     
        eq: [Function: eq],
        or: [Function: or],
        nor: [Function: nor],
        and: [Function: and],
        gt: [Function (anonymous)],     
        gte: [Function (anonymous)],    
        lt: [Function (anonymous)],     
        lte: [Function (anonymous)],    
        ne: [Function (anonymous)],     
        in: [Function (anonymous)],     
        nin: [Function (anonymous)],    
        all: [Function (anonymous)],    
        regex: [Function (anonymous)],  
        size: [Function (anonymous)],   
        maxDistance: [Function (anonymous)],
        minDistance: [Function (anonymous)],
        mod: [Function (anonymous)],    
        exists: [Function (anonymous)], 
        elemMatch: [Function (anonymous)],
        within: [Function: within],     
        box: [Function (anonymous)],    
        polygon: [Function (anonymous)],
        circle: [Function (anonymous)], 
        near: [Function: near],
        intersects: [Function: intersects],
        geometry: [Function: geometry], 
        select: [Function: select],     
        slice: [Function (anonymous)],  
        sort: [Function (anonymous)],   
        limit: [Function (anonymous)],  
        skip: [Function (anonymous)],   
        batchSize: [Function (anonymous)],
        comment: [Function (anonymous)],
        maxTimeMS: [Function (anonymous)],
        maxTime: [Function (anonymous)],
        hint: [Function (anonymous)],   
        j: [Function: j],
        slaveOk: [Function (anonymous)],
        setReadPreference: [Function (anonymous)],
        read: [Function (anonymous)],   
        r: [Function (anonymous)],      
        readConcern: [Function (anonymous)],
        tailable: [Function (anonymous)],
        w: [Function: writeConcern],    
        writeConcern: [Function: writeConcern],
        wTimeout: [Function: wtimeout], 
        wtimeout: [Function: wtimeout], 
        merge: [Function (anonymous)],  
        find: [Function (anonymous)],   
        _find: [AsyncFunction: _find],  
unction: selected],
        selectedInclusively: [Function: selectedInclusively],
        selectedExclusively: [Function: selectedExclusively],
        _mergeUpdate: [Function (anonymous)],
        _optionsForExec: [Function (anonymous)],
        _fieldsForExec: [Function (anonymous)],
        _updateForExec: [Function (anonymous)],
        _ensurePath: [Function (anonymous)],
        _validate: [Function (anonymous)]
      }
    },
    '$init': Promise { undefined, catch: [Function (anonymous)] },
    '$caught': true,    [Symbol(mongoose#Model)]: true
  }
}"
FM5v5879,C#_3_local_max_element,Legiomax,C#,Friday 19th of January 2024 01:37:32 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int lowRangeArray = 0;
            int highRangeArray = 30;
            int lowRangeRandom = 0;
            int highRangeRandom = 10;

            int rangeArray = random.Next(lowRangeArray, highRangeArray);
            int[] numbers = new int[rangeArray];

            int leftBorderArrayIndex = lowRangeArray;
            int rightBorderArrayIndex = rangeArray - 1;

            bool hasLocalMaxElement = false;

            if (rangeArray == 0)
            {
                Console.WriteLine(""–ú–∞—Å—Å–∏–≤ –Ω—É–ª–µ–≤–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞\n–ó–¥–µ—Å—å –Ω–µ—á–µ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å, —É—Ö–æ–¥–∏"");
            }
            else
            {
                for (int i = 0; i < rangeArray; i++)
                {
                    numbers[i] = random.Next(lowRangeRandom, highRangeRandom);
                }

                Console.WriteLine(""–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞\n"");

                for (int i = 0; i < rangeArray; i++)
                {
                    Console.Write(numbers[i] + "" "");
                }

                if (rangeArray == 1)
                {
                    Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[0]}"");
                }
                else
                {
                    if (numbers[leftBorderArrayIndex] > numbers[leftBorderArrayIndex + 1])
                    {
                        Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[leftBorderArrayIndex]}"");
                        hasLocalMaxElement = true;
                    }

                    for (int i = leftBorderArrayIndex + 1; i < rightBorderArrayIndex; i++)
                    {
                        if (numbers[i - 1] < numbers[i] && numbers[i + 1] < numbers[i])
                        {
                            Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                    }

                    if (numbers[rightBorderArrayIndex] > numbers[rightBorderArrayIndex - 1])
                    {
                        Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[rightBorderArrayIndex]}"");
                        hasLocalMaxElement = true;
                    }

                    if (hasLocalMaxElement is false)
                    {
                        Console.WriteLine(""\n–õ–æ–∫–∞–ª—å–Ω—ã—Ö –º–∞–∫—Å–∏–º—É–º–æ–≤ –Ω–µ—Ç"");
                    }
                }
            }
            Console.ReadKey();
        }
    }
}
"
LgC7Jtq7,Untitled,vladislav_larionov,JSON,Friday 19th of January 2024 12:31:10 AM CDT,"{
  ""GIN2"": {
    ""INFO"": {
      ""ReqPPPInfo"": {
        ""parameterName"": ""%"",
        ""RRights"": {
          ""name"": [
            ""GIN_PPPINFO""
          ]
        }
      }
    },
    ""META-INF"": {
      ""ENTRY"": [
        {
          ""name"": ""PI"",
          ""value"": ""FSGMOBILEPOST""
        },
        {
          ""name"": ""DOMAIN"",
          ""value"": ""WINPOST""
        },
        {
          ""name"": ""TERMINAL"",
          ""value"": ""67500075""
        },
        {
          ""name"": ""VERSION"",
          ""value"": ""24.2.0.1""
        },
        {
          ""name"": ""REQ_ID"",
          ""value"": ""67500075_30b02e12-73fd-415a-a371-13b121c8f24e""
        },
        {
          ""name"": ""termID"",
          ""value"": ""PETROV""
        },
        {
          ""name"": ""TOKENU"",
          ""value"": ""BLG_675000_PETROV""
        },
        {
          ""name"": ""TOKENP"",
          ""value"": ""356A192B7913B04C5457********************""
        }
      ]
    }
  }
}"
u14K6ey1,Nigerian scammers [19-1-1/2024],bombaires,AIMMS,Thursday 18th of January 2024 11:58:11 PM CDT,"<a href=""mailto:www.europeancommissionn@gmail.com"">www.europeancommissionn@gmail.com</a>
<a href=""mailto:www.europeancommissionn+18722@gmail.com"">www.europeancommissionn+18722@gmail.com</a>
<a href=""mailto:www.europeancommissionn+1038@gmail.com"">www.europeancommissionn+1038@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5413@gmail.com"">www.europeancommissionn+5413@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25379@gmail.com"">www.europeancommissionn+25379@gmail.com</a>
<a href=""mailto:www.europeancommissionn+30547@gmail.com"">www.europeancommissionn+30547@gmail.com</a>
<a href=""mailto:www.europeancommissionn+14674@gmail.com"">www.europeancommissionn+14674@gmail.com</a>
<a href=""mailto:www.europeancommissionn+11556@gmail.com"">www.europeancommissionn+11556@gmail.com</a>
<a href=""mailto:www.europeancommissionn+6767@gmail.com"">www.europeancommissionn+6767@gmail.com</a>
<a href=""mailto:www.europeancommissionn+1427@gmail.com"">www.europeancommissionn+1427@gmail.com</a>
<a href=""mailto:www.europeancommissionn+15742@gmail.com"">www.europeancommissionn+15742@gmail.com</a>
<a href=""mailto:www.europeancommissionn+8081@gmail.com"">www.europeancommissionn+8081@gmail.com</a>
<a href=""mailto:www.europeancommissionn+4963@gmail.com"">www.europeancommissionn+4963@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27713@gmail.com"">www.europeancommissionn+27713@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27631@gmail.com"">www.europeancommissionn+27631@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29309@gmail.com"">www.europeancommissionn+29309@gmail.com</a>
<a href=""mailto:www.europeancommissionn+19245@gmail.com"">www.europeancommissionn+19245@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17305@gmail.com"">www.europeancommissionn+17305@gmail.com</a>
<a href=""mailto:www.europeancommissionn+32589@gmail.com"">www.europeancommissionn+32589@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5415@gmail.com"">www.europeancommissionn+5415@gmail.com</a>
<a href=""mailto:www.europeancommissionn+26968@gmail.com"">www.europeancommissionn+26968@gmail.com</a>
<a href=""mailto:www.europeancommissionn+6314@gmail.com"">www.europeancommissionn+6314@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25292@gmail.com"">www.europeancommissionn+25292@gmail.com</a>
<a href=""mailto:www.europeancommissionn+15520@gmail.com"">www.europeancommissionn+15520@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9415@gmail.com"">www.europeancommissionn+9415@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3388@gmail.com"">www.europeancommissionn+3388@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13864@gmail.com"">www.europeancommissionn+13864@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9967@gmail.com"">www.europeancommissionn+9967@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16001@gmail.com"">www.europeancommissionn+16001@gmail.com</a>
<a href=""mailto:www.europeancommissionn+10327@gmail.com"">www.europeancommissionn+10327@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27811@gmail.com"">www.europeancommissionn+27811@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17590@gmail.com"">www.europeancommissionn+17590@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27360@gmail.com"">www.europeancommissionn+27360@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31020@gmail.com"">www.europeancommissionn+31020@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13640@gmail.com"">www.europeancommissionn+13640@gmail.com</a>
<a href=""mailto:www.europeancommissionn+12945@gmail.com"">www.europeancommissionn+12945@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25799@gmail.com"">www.europeancommissionn+25799@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13308@gmail.com"">www.europeancommissionn+13308@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31245@gmail.com"">www.europeancommissionn+31245@gmail.com</a>
<a href=""mailto:www.europeancommissionn+19123@gmail.com"">www.europeancommissionn+19123@gmail.com</a>
<a href=""mailto:www.europeancommissionn+18305@gmail.com"">www.europeancommissionn+18305@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31940@gmail.com"">www.europeancommissionn+31940@gmail.com</a>
<a href=""mailto:www.europeancommissionn+28677@gmail.com"">www.europeancommissionn+28677@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17899@gmail.com"">www.europeancommissionn+17899@gmail.com</a>
<a href=""mailto:www.europeancommissionn+6697@gmail.com"">www.europeancommissionn+6697@gmail.com</a>
<a href=""mailto:www.europeancommissionn+4298@gmail.com"">www.europeancommissionn+4298@gmail.com</a>
<a href=""mailto:www.europeancommissionn+511@gmail.com"">www.europeancommissionn+511@gmail.com</a>
<a href=""mailto:www.europeancommissionn+24402@gmail.com"">www.europeancommissionn+24402@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13737@gmail.com"">www.europeancommissionn+13737@gmail.com</a>
<a href=""mailto:www.europeancommissionn+14033@gmail.com"">www.europeancommissionn+14033@gmail.com</a>
<a href=""mailto:www.europeancommissionn+32344@gmail.com"">www.europeancommissionn+32344@gmail.com</a>
<a href=""mailto:www.europeancommissionn+139@gmail.com"">www.europeancommissionn+139@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3187@gmail.com"">www.europeancommissionn+3187@gmail.com</a>
<a href=""mailto:www.europeancommissionn+8092@gmail.com"">www.europeancommissionn+8092@gmail.com</a>
<a href=""mailto:www.europeancommissionn+30691@gmail.com"">www.europeancommissionn+30691@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3974@gmail.com"">www.europeancommissionn+3974@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13@gmail.com"">www.europeancommissionn+13@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23892@gmail.com"">www.europeancommissionn+23892@gmail.com</a>
<a href=""mailto:www.europeancommissionn+19916@gmail.com"">www.europeancommissionn+19916@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16105@gmail.com"">www.europeancommissionn+16105@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23844@gmail.com"">www.europeancommissionn+23844@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3079@gmail.com"">www.europeancommissionn+3079@gmail.com</a>
<a href=""mailto:www.europeancommissionn+20265@gmail.com"">www.europeancommissionn+20265@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23118@gmail.com"">www.europeancommissionn+23118@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16448@gmail.com"">www.europeancommissionn+16448@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23768@gmail.com"">www.europeancommissionn+23768@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21852@gmail.com"">www.europeancommissionn+21852@gmail.com</a>
<a href=""mailto:www.europeancommissionn+11691@gmail.com"">www.europeancommissionn+11691@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13724@gmail.com"">www.europeancommissionn+13724@gmail.com</a>
<a href=""mailto:www.europeancommissionn+24958@gmail.com"">www.europeancommissionn+24958@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16767@gmail.com"">www.europeancommissionn+16767@gmail.com</a>
<a href=""mailto:www.europeancommissionn+4941@gmail.com"">www.europeancommissionn+4941@gmail.com</a>
<a href=""mailto:www.europeancommissionn+2120@gmail.com"">www.europeancommissionn+2120@gmail.com</a>
<a href=""mailto:www.europeancommissionn+12752@gmail.com"">www.europeancommissionn+12752@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29136@gmail.com"">www.europeancommissionn+29136@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25145@gmail.com"">www.europeancommissionn+25145@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25577@gmail.com"">www.europeancommissionn+25577@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29388@gmail.com"">www.europeancommissionn+29388@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21203@gmail.com"">www.europeancommissionn+21203@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25456@gmail.com"">www.europeancommissionn+25456@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13805@gmail.com"">www.europeancommissionn+13805@gmail.com</a>
<a href=""mailto:www.europeancommissionn+22447@gmail.com"">www.europeancommissionn+22447@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31984@gmail.com"">www.europeancommissionn+31984@gmail.com</a>
<a href=""mailto:www.europeancommissionn+1176@gmail.com"">www.europeancommissionn+1176@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5337@gmail.com"">www.europeancommissionn+5337@gmail.com</a>
<a href=""mailto:www.europeancommissionn+7029@gmail.com"">www.europeancommissionn+7029@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3715@gmail.com"">www.europeancommissionn+3715@gmail.com</a>
<a href=""mailto:www.europeancommissionn+26885@gmail.com"">www.europeancommissionn+26885@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5588@gmail.com"">www.europeancommissionn+5588@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9511@gmail.com"">www.europeancommissionn+9511@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9285@gmail.com"">www.europeancommissionn+9285@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25927@gmail.com"">www.europeancommissionn+25927@gmail.com</a>
<a href=""mailto:www.europeancommissionn+22651@gmail.com"">www.europeancommissionn+22651@gmail.com</a>
<a href=""mailto:www.europeancommissionn+22419@gmail.com"">www.europeancommissionn+22419@gmail.com</a>
<a href=""mailto:www.europeancommissionn+30462@gmail.com"">www.europeancommissionn+30462@gmail.com</a>
<a href=""mailto:www.europeancommissionn+11643@gmail.com"">www.europeancommissionn+11643@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21444@gmail.com"">www.europeancommissionn+21444@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17041@gmail.com"">www.europeancommissionn+17041@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29942@gmail.com"">www.europeancommissionn+29942@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21978@gmail.com"">www.europeancommissionn+21978@gmail.com</a>
<a href=""mailto:www.europeancommissionn+14260@gmail.com"">www.europeancommissionn+14260@gmail.com</a>"
CWJjpTbj,Untitled,desperatenuf,Python,Thursday 18th of January 2024 11:39:16 PM CDT,"import discord
from discord.ext import commands
from discord.ui import Button, View, Modal
import time
import asyncio

intents = discord.Intents.all()
bot = commands.Bot(command_prefix=""!"", intents=intents)

# Keep track of whether the bot is waiting for an image in a dictionary
verification_in_progress = {}
selfie_role_id = 1197762897116409927 # to replace
staff_role_id = 1197763009976733818 # to replace

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')

class CancelButton(Button):
    def __init__(self):
        super().__init__(label=""Cancel"", style=discord.ButtonStyle.red)

    async def callback(self, interaction: discord.Interaction):
        await interaction.message.edit(view=None)
        async for msg in interaction.channel.history(limit=10):
            if msg.author == bot.user:
                await msg.delete()
                break
        del verification_in_progress[interaction.user.id]
        await interaction.response.send_message(""Successfully cancelled!"", ephemeral=True)

class AcceptButton(discord.ui.Button):
    def __init__(self, user: discord.Member, msg: discord.Message):
        super().__init__(label=""Accept"", style=discord.ButtonStyle.green)
        self.user = user
        self.message = msg
	

    async def callback(self, interaction: discord.Interaction):
        guild_id = 1113932756620161118  # replace with your specific server ID
        guild = bot.get_guild(guild_id)
        member = guild.get_member(self.user.id)
        role = discord.utils.get(member.guild.roles, name='Verified')

        if role is not None:
            await member.add_roles(role)
        else:
            print(f""Role not found."")

        # Add the accepted role
        ac = discord.Embed(
            title=""Selfie Verification Status"",
            description=""<a:check:1127352286952300584> Your verification has been accepted. You now have access to post in selfies."",
            color=0x3cb371
        )
        ac.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127396561052250223/2550322.png?width=640&height=640"")

        await self.message.author.send(embed=ac)
        await interaction.message.edit(view=None)
        await interaction.message.delete()

        # Archive the verification
        archive_channel_id = 1197763535237812275  # Replace with your archive channel ID
        archive_channel = bot.get_channel(archive_channel_id)
        archive_embed = discord.Embed(
            title=""Verification Accepted"",
            description=f""{self.message.author.mention}'s verification was accepted by {interaction.user.mention}. <:staff:1124227406455128205>"",
            color=0x00ff00
        )
        archive_embed.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127400646384042044/5261648.png?width=640&height=640"")
        await archive_channel.send(embed=archive_embed)


class DenyButton(discord.ui.Button):
    def __init__(self, user: discord.Member, msg: discord.Message):
        super().__init__(label=""Deny"", style=discord.ButtonStyle.red)
        self.user = user
        self.message = msg

    async def callback(self, interaction: discord.Interaction):
        deny_modal = DenyModal(message=self.message)
        await interaction.response.send_modal(deny_modal)
    
        # await interaction.message.edit(view=None)
        # await interaction.message.delete()

class DenyModal(Modal):
    def __init__(self, message: discord.Message):
        super().__init__(title=""Reason for denial"", timeout=1000, custom_id=""DenyModal"")
        self.message = message

    reason = discord.ui.TextInput(label=""Reason for denial"", style=discord.TextStyle.long,
                                  placeholder=""Enter your reason for denial here."", required=True,
                                  max_length=300)

    async def on_submit(self, interaction: discord.Interaction):
        denyreason = discord.Embed(
            color=0xfc9d9a,
            title=""Selfie Verification Status"",
            description=f""<a:error:1115150970104590437> Your verification has been denied!  \n <:pencil:1139139299124711474> **Reason:** `{self.reason.value}`""
        )
        denyreason.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127396950694703134/red-x-cross-x-transparent-background-free-png.png?width=500&height=500"")
        await self.message.author.send(embed=denyreason)

        await interaction.message.delete()

        # Archive the verification
        archive_channel_id = 1139147443062177812 # Replace with your archive channel ID
        archive_channel = bot.get_channel(archive_channel_id)
        archive_embed = discord.Embed(
            title=""Verification Denied"",
            description=f""{self.message.author.mention}'s verification was denied by {interaction.user.mention}. <:staff:1124227406455128205> \n**Reason for denial:** *{self.reason.value}*"",
            color=0xfc9d9a
        )
    
        archive_embed.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127400404431413258/2538049.png?width=640&height=640"")
        await archive_channel.send(embed=archive_embed)
        await interaction.response.send_message('Verification complete. Thanks!', ephemeral=True)

@bot.event
async def on_message(message):
    if message.author == bot.user:  # Ignore messages from the bot itself
        return

    if isinstance(message.channel, discord.DMChannel):  # Check if the message is a DM
        if message.author.id in verification_in_progress:
            # If the bot is waiting for an image from the user, process the image
            attachment = message.attachments[0] if message.attachments else None

            if attachment:
                try:
                    guild = bot.get_guild(1113932756620161118)
                    member = guild.get_member(message.author.id)
                    selfie_url = attachment.url

                    # Create an embed to send the image URL
                    embed = discord.Embed(title=f""Picture from {message.author}"", color=0x00ff00)
                    embed.set_image(url=selfie_url)

                    # Forward selfie to a review channel
                    review_channel_id = 1197763535237812275
                    review_channel = bot.get_channel(review_channel_id)
                    modembed = discord.Embed(
                        description=f""**Selfie by user:** {message.author.mention} **/** `{message.author.id}` \n\n __**Selfie Verification Image**__: "",
                        color=0xB2CAFF
                    )
                    modembed.set_author(icon_url=""https://media.discordapp.net/attachments/1114580796322353232/1127400180854030376/4497128.png?width=640&height=640"", name=""Selfie Verification"")
                    modembed.set_image(url=f""{selfie_url}"")

                    accept_button = AcceptButton(user=member, msg=message)
                    deny_button = DenyButton(user=member, msg=message)
                    view = View(timeout=None)
                    view.add_item(accept_button)
                    view.add_item(deny_button)

            
                    await review_channel.send(f""<@&{staff_role_id}>"",embed=modembed, view=view)

                    embed1 = discord.Embed(title=""Selfie Verification"",
                                        description=""\u200e\nYour selfie has been submitted for verification"",
                                        color=0x00ff00)
                    embed1.set_thumbnail(url=""https://media.discordapp.net/attachments/927190003061256224/958981230332895253/unknown.png?width=640&height=640"")
                    await message.author.send(embed=embed1)

                    # Remove the waiting status for the user
                    del verification_in_progress[message.author.id]
                except asyncio.TimeoutError:
                    await message.author.send(""Verification timeout. Please try again."")
            else:
                await message.channel.send(""No image found. Please send an image."")

        else:
            # Check if the message has any content other than attachments
            if message.content.strip():
                todays_date = str(int(time.time()))
                date_formatted = '<t:{}:d>'.format(todays_date)

                cancel_button = CancelButton()
                cancel_view = View()
                cancel_view.add_item(cancel_button)
                prompt = discord.Embed(title=""Selfie Verification"",
                                    description=""Do you want to verify for access to post in selfies? <:MouseClickOutline256:1116576417128402974> \n\n Please take a selfie with a paper that says **'Socialize Discord'**, your **Discord Username**, and **{}**. Send it here! \n\n **Verification Rules** \n\n- Do not sumbit nsfw content or any other images on this. \n- Do not contact staff members to ask about verification, this bot will tell you the status of your verification. \n- Do not abuse this bot in any form, you will be punished and dealt with accordingly. \n- Posting nsfw / sexual content with the verified role will get you removed from the server."".format(date_formatted),
                                    color=0xff0048,
                                    )
                prompt.set_thumbnail(url=""https://media.discordapp.net/attachments/1119615099880091691/1127690745315332198/1672211.png?width=640&height=640"")
                # Respond with a greeting and the ""Cancel"" option
                await message.channel.send(embed=prompt, view=cancel_view)

                # Set waiting status for the user
                verification_in_progress[message.author.id] = True
    
    await bot.process_commands(message)

class VerifyButton(Button):
    def __init__(self):
        super().__init__(label=""Verify"", style=discord.ButtonStyle.blurple)

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.send_message(""**DM the bot to start the verification process!**"", ephemeral=True)

@bot.command()
async def verify(ctx):
    # Replace SPECIFIC_USER_ID with the desired user's ID
    SPECIFIC_USER_ID = 127199835651702784 # Replace with the desired user's ID

    # Check if the author's ID is not the desired user's ID
    if ctx.author.id != SPECIFIC_USER_ID:
        await ctx.send(""You do not have permission to run this command."")
        return

    verify_view = View(timeout=None)
    
    verify_button = VerifyButton()
    verify_view.add_item(verify_button)
    embed = discord.Embed(title=""Want Access to Post in Selfies?"",
                      description=""\u200e\n<:pencil:1139139299124711474>  **Looking to post in <#1139142308193894470>?** <:MouseClickOutline256:1116576417128402974> **Click** the **Button** below!\n\n<:ArrowDown:1139133485542559774>  **Verified members will receive the role** <:ArrowDown:1139133485542559774>"",
                      colour=0xffffff)
    embed.set_image(url=""https://i.imgur.com/ZyFysmR.png"")
    embed.set_thumbnail(url=""https://i.imgur.com/6j3pGqW.png"")
    await ctx.send(embed=embed, view=verify_view)

@bot.group()
async def selfie(ctx):
    if ctx.invoked_subcommand is None:
        await ctx.send(""**Invalid selfie command passed. Use `add` or `remove`.**"")

@selfie.command()
async def add(ctx, member: discord.Member = None):
    if not member:  # If member is not provided
        await ctx.send(""<a:error:1115150970104590437> **Please mention a user to add the role to**"")
        return

    if not any(role.id == staff_role_id for role in ctx.author.roles):
        await ctx.send(""<a:error:1115150970104590437> **You do not have permission to use this command**"")
        return

    selfie_role = ctx.guild.get_role(selfie_role_id)
    if selfie_role in member.roles:
        await ctx.send(f""<a:error:1115150970104590437> **{member.mention} already has the Selfie role!**"")
    else:
        await member.add_roles(selfie_role)
        await ctx.send(f""<a:check:1127352286952300584> **Verified role added to {member.mention}!**"")

@selfie.command()
async def remove(ctx, member: discord.Member = None):
    if not member:  # If member is not provided
        await ctx.send(""<a:error:1115150970104590437> **Please mention a user to remove the role from**"")
        return

    if not any(role.id == staff_role_id for role in ctx.author.roles):
        await ctx.send(""<a:error:1115150970104590437> **You do not have permission to use this command**"")
        return

    selfie_role = ctx.guild.get_role(selfie_role_id)
    if selfie_role in member.roles:
        await member.remove_roles(selfie_role)
        await ctx.send(f""<a:check:1127352286952300584> **Verified role removed from {member.mention}**"")
    else:
        await ctx.send(f""<a:error:1115150970104590437> {member.mention} **doesn't have the Selfie role**"")

# Run the bot
bot.run('MTE5NjA2MjkzMTUyNDI2ODA1Mg.Gqzlta.isq3VffQ0t4Gk1ZX8r7qBmY5VtKXyLtZ7-93Ow')"
ZLvBPfwk,shinfaxi,Gamenator,SQF,Thursday 18th of January 2024 11:23:58 PM CDT,"Activation:
Blufor
Activation 
Type:Present
Condition:
this && ((vehicle player in thisList) && {vehicle player iskindof ""Plane""})

On Activation:
[thisTrigger] spawn {  
_i=10000;   
params [""_trigger""];   
private _pos = p1 modelToWorld [0,2,1.6];    
private _missile = createVehicle [""vn_sa2_ammo"", [0,0,0], [], 0, ""none""];    
_missile enableSimulation true;    
_missile setPosASLW _pos;    
_missile setVectorDirAndUp [[0,0,1], [1,0,0]];   
sleep 20;   
   
       
  if (( getposatl vehicle player) select 2 > 500) then{   
    
    
  for ""_i"" from 0 to 4 do{  
   if (( getposatl vehicle player) select 2 > 500) then{  
    private _oldPos = getPosATL vehicle player; 
    private _newPos = _oldPos vectorAdd [0,0,600];  
    private _position = vehicle player getRelPos [900,200];
    _position set [2, _newpos];
    _missileDir = _position vectorFromTo getPosATL vehicle player;    
    _missile = createVehicle [""ammo_Missile_rim162"", _position , [], 0, ""CAN_COLLIDE""];    
    _missile setVectorDirAndUp [_missileDir, [0,0,-1]];    
    
    [_missile, vehicle player] spawn {    
    params [""_missile"", ""_tgt""];    
    sleep 0.1;    
    _missile setMissileTarget _tgt;    
          };    
    sleep 4;  
    }else{break;};  
  };  
  sleep 7;   
   
    }else{};     
    
   
}"
wXnrEzDX,zip extractor,koupuh,Python,Thursday 18th of January 2024 10:55:40 PM CDT,"import zipfile 
import py7zr
import os
from os import path as opath

def getUnique(path, i = 0):
    newname = path + str(i) if i > 0 else path
    
    if opath.exists(newname):
        getUnique(path, i+1)

    return newname
                
def rzip(path_to_zips_dir, output_path=None):
    for dirpath, dirpaths, filepaths in os.walk(path_to_zips_dir):
        for x in filepaths:
            name = opath.basename(x).casefold()
            if name == '.zip' or name == '.7z':
                continue

            if name.endswith('.zip') or name.endswith('.7z'):
                zipclass = zipfile.ZipFile if name.endswith('.zip') else py7zr.SevenZipFile
                with zipclass(opath.join(dirpath,x), 'r') as zf:
                    name = opath.splitext(opath.basename(zf.filename))[0]
                    if output_path is None:
                        newout = getUnique(opath.join(dirpath, name))
                    else:
                        newout = getUnique(opath.join(output_path, name))
                    
                    zf.extractall(newout)
                    rzip(newout)

                
if __name__ == '__main__':
    import sys
    rzip( sys.argv[1], sys.argv[2] )

"
HzkH5R0v,Annilape Filter,name8888less,JavaScript,Thursday 18th of January 2024 10:42:30 PM CDT,"javascript:$.getScript(""https://cdn.jsdelivr.net/gh/name8888less/sgpokemap-addons@main/annihilape-pvp-filter.js"", function(data, textStatus, jqxhr) {});
"
VRL19v3C,indication asterik,delta_88,Bash,Thursday 18th of January 2024 10:41:42 PM CDT,"[general]
country=fr              ; default location
 
[us]
description = United States / North America
ringcadence = 2000,4000
dial = 350+440
busy = 480+620/500,0/500
ring = 440+480/2000,0/4000
congestion = 480+620/250,0/250
callwaiting = 440/300,0/10000
dialrecall = !350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,350+440
record = 1400/500,0/15000
info = !950/330,!1400/330,!1800/330,0
stutter = !350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,350+440
 
[fr]
Description = France"
5Z1cfQLe,Binary search [C++],R3v3rs3r,C,Thursday 18th of January 2024 10:39:58 PM CDT,"#include<iostream>
using namespace std;

int binSearch(int arr[], int l, int r, int x) {
    while (l <= r) {
        int m = l + (r - l) / 2;
        if (arr[m] == x)
        {
            return m;
        }
        if (arr[m] < x) {
            l = m + 1;
        } else {
            r = m - 1;
        }    
    }
    return false;
}

int main() {
    int arr[10], x, res;
    cout<<""Enter array elements: ""<<endl;
    for (int i=0; i<10; i++) {
        cin>>arr[i];
    }
    cout<<""\nEnter element to search: "", cin>>x;
    if (res=binSearch(arr, 0, 9, x), res) {
        cout<<""\nElement found at index: ""<<res;
    } else {
        cout<<""\nElement not found!"";
    }
}"
DNmukKET,C#_3_local_max_element,Legiomax,C#,Thursday 18th of January 2024 10:30:43 PM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int lowRangeArray = 0;
            int highRangeArray = 30;
            int lowRangeRandom = 0;
            int highRangeRandom = 10;

            int rangeArray = random.Next(lowRangeArray, highRangeArray);
            int[] numbers = new int[rangeArray];

            int leftBorderArrayIndex = lowRangeArray;
            int rightBorderArrayIndex = rangeArray - 1;

            bool hasLocalMaxElement = false;

            if (rangeArray == 0)
            {
                Console.WriteLine(""–ú–∞—Å—Å–∏–≤ –Ω—É–ª–µ–≤–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞\n–ó–¥–µ—Å—å –Ω–µ—á–µ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å, —É—Ö–æ–¥–∏"");
            }
            else
            {
                for (int i = 0; i < rangeArray; i++)
                {
                    numbers[i] = random.Next(lowRangeRandom, highRangeRandom);
                }

                Console.WriteLine(""–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞\n"");

                for (int i = 0; i < rangeArray; i++)
                {
                    Console.Write(numbers[i] + "" "");
                }

                if(rangeArray == 1)
                {
                    Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[0]}"");
                }
                else
                {
                    for (int i = 0; i < rangeArray; i++)
                    {
                        if (i == leftBorderArrayIndex && numbers[i] > numbers[i + 1])
                        {
                            Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                        else if (i == rightBorderArrayIndex && numbers[i] > numbers[i - 1])
                        {
                            Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                        else if (leftBorderArrayIndex < i && i < rightBorderArrayIndex &&
                            numbers[i - 1] < numbers[i] &&
                            numbers[i + 1] < numbers[i])
                        {
                            Console.Write($""\n–õ–æ–∫–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                    }

                    if (hasLocalMaxElement is false)
                    {
                        Console.WriteLine(""\n–õ–æ–∫–∞–ª—å–Ω—ã—Ö –º–∞–∫—Å–∏–º—É–º–æ–≤ –Ω–µ—Ç"");
                    }
                }
            }
            Console.ReadKey();
        }
    }
}
"
zDuC1SP1,Untitled,benn-1956,Lua,Thursday 18th of January 2024 10:26:25 PM CDT,"waitingForFuel = false
 
function searchInv(itemName)
 
    for slot = 1, 16, 1 do
        local slotData = turtle.getItemDetail(slot)
        -- Check if there is a item
        if slotData ~= nil then
          if slotData.name == itemName then
            return slot
          end
        end
    end
    -- Scan complete no fuel found
    return nil 
end
 
function CheckFuel()
    local fuelLvl = turtle.getFuelLevel()
    if fuelLvl < 100 then 
        waitingForFuel = true
        print(""Fuel Is Low..."")
        print(""<<<Insert Fuel>>>"")
    end
    while (waitingForFuel == true) do
        local itemSearch = searchInv(""minecraft:coal"")
        if itemSearch ~= nil then 
            local selectedslot = turtle.getItemDetail(itemSearch)
            turtle.select(itemSearch)
            turtle.refuel(selectedslot.count)
            waitingForFuel = false
        end
        sleep(0.05)
    end
end

CheckFuel()"
3CBFaYzW,News Jan18 24,Newscaster_Ned,Email,Thursday 18th of January 2024 10:11:26 PM CDT,".‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé1‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé2‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé3‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äél‚Äée‚Äét‚Äée‚Äé.‚Äé

W‚Äée‚Äél‚Äél‚Äé ‚ÄéI‚Äé ‚Äéh‚Äéa‚Äév‚Äée‚Äé ‚Äéa‚Äé ‚Äéf‚Äée‚Äée‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äéw‚Äée‚Äé'‚Äér‚Äée‚Äé ‚Äég‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äé ‚Äéc‚Äéh‚Äée‚Äée‚Äér‚Äéf‚Äéu‚Äél‚Äé ‚Äés‚Äét‚Äéu‚Äéf‚Äéf‚Äé.‚Äé

H‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚ÄéP‚Äéa‚Äés‚Äés‚Äée‚Äés‚Äé ‚ÄéP‚Äée‚Äél‚Äéo‚Äés‚Äéi‚Äé-‚ÄéS‚Äéc‚Äéh‚Äéu‚Äém‚Äée‚Äér‚Äé ‚ÄéS‚Äéh‚Äéo‚Äér‚Äét‚Äé-‚ÄéT‚Äée‚Äér‚Äém‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚ÄéE‚Äéx‚Äét‚Äée‚Äén‚Äés‚Äéi‚Äéo‚Äén‚Äé

B‚Äéo‚Äér‚Äéd‚Äée‚Äér‚Äé ‚ÄéS‚Äée‚Äéc‚Äéu‚Äér‚Äéi‚Äét‚Äéy‚Äé ‚ÄéP‚Äéa‚Äéc‚Äék‚Äéa‚Äég‚Äée‚Äé ‚ÄéA‚Äéb‚Äéa‚Äén‚Äéd‚Äéo‚Äén‚Äée‚Äéd‚Äé,‚Äé ‚ÄéS‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé ‚ÄéT‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé ‚ÄéP‚Äéu‚Äés‚Äéh‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚ÄéM‚Äéa‚Äér‚Äéc‚Äéh‚Äé

L‚Äéa‚Äés‚Äét‚Äé-‚ÄéM‚Äéi‚Äén‚Äéu‚Äét‚Äée‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äé ‚ÄéD‚Äér‚Äéa‚Äém‚Äéa‚Äé:‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äés‚Äéo‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚ÄéT‚Äér‚Äéo‚Äéu‚Äéb‚Äél‚Äée‚Äé?‚Äé
N‚Äée‚Äéw‚Äél‚Äéy‚Äé-‚Äée‚Äél‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚ÄéU‚Äé.‚ÄéS‚Äé.‚Äé ‚ÄéH‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚ÄéS‚Äép‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äé ‚ÄéM‚Äéi‚Äék‚Äée‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äés‚Äéo‚Äén‚Äé ‚Äéh‚Äéo‚Äél‚Äéd‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äég‚Äéa‚Äév‚Äée‚Äél‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéH‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚ÄéC‚Äéh‚Äéa‚Äém‚Äéb‚Äée‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚ÄéW‚Äéa‚Äés‚Äéh‚Äéi‚Äén‚Äég‚Äét‚Äéo‚Äén‚Äé,‚Äé ‚ÄéD‚Äé.‚ÄéC‚Äé.‚Äé,‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéU‚Äén‚Äéi‚Äét‚Äée‚Äéd‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äés‚Äé,‚Äé ‚Äéo‚Äén‚Äé ‚ÄéO‚Äéc‚Äét‚Äé.‚Äé ‚Äé2‚Äé5‚Äé,‚Äé ‚Äé2‚Äé0‚Äé2‚Äé3‚Äé.‚Äé ‚ÄéL‚Äéo‚Äéu‚Äéi‚Äés‚Äéi‚Äéa‚Äén‚Äéa‚Äé ‚ÄéR‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé ‚ÄéM‚Äéi‚Äék‚Äée‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äés‚Äéo‚Äén‚Äé,‚Äé ‚Äév‚Äéi‚Äéc‚Äée‚Äé ‚Äéc‚Äéh‚Äéa‚Äéi‚Äér‚Äém‚Äéa‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéU‚Äé.‚ÄéS‚Äé.‚Äé ‚ÄéH‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚ÄéR‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚Äéc‚Äéo‚Äén‚Äéf‚Äée‚Äér‚Äée‚Äén‚Äéc‚Äée‚Äé,‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äée‚Äél‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äén‚Äée‚Äéw‚Äé ‚ÄéH‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚Äés‚Äép‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äé ‚Äéf‚Äéu‚Äél‚Äél‚Äé ‚Äéc‚Äéh‚Äéa‚Äém‚Äéb‚Äée‚Äér‚Äé ‚Äév‚Äéo‚Äét‚Äée‚Äé ‚ÄéW‚Äée‚Äéd‚Äén‚Äée‚Äés‚Äéd‚Äéa‚Äéy‚Äé,‚Äé ‚Äéb‚Äér‚Äéi‚Äén‚Äég‚Äéi‚Äén‚Äég‚Äé ‚Äéw‚Äée‚Äée‚Äék‚Äés‚Äé ‚Äé‚Ä¶‚Äé
T‚Äéh‚Äée‚Äé ‚ÄéH‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚Äép‚Äéa‚Äés‚Äés‚Äée‚Äéd‚Äé ‚Äéa‚Äé ‚Äés‚Äéh‚Äéo‚Äér‚Äét‚Äé-‚Äét‚Äée‚Äér‚Äém‚Äé ‚Äés‚Äép‚Äée‚Äén‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äée‚Äéx‚Äét‚Äée‚Äén‚Äés‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äén‚Äél‚Äéy‚Äé ‚Äéh‚Äéo‚Äéu‚Äér‚Äés‚Äé ‚Äéa‚Äéf‚Äét‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äéi‚Äél‚Äél‚Äé ‚Äéc‚Äél‚Äée‚Äéa‚Äér‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéS‚Äée‚Äén‚Äéa‚Äét‚Äée‚Äé,‚Äé ‚Äép‚Äéu‚Äés‚Äéh‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äén‚Äée‚Äéx‚Äét‚Äé ‚Äés‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé ‚Äét‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚ÄéM‚Äéa‚Äér‚Äéc‚Äéh‚Äé.‚Äé

H‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚ÄéP‚Äéa‚Äés‚Äés‚Äée‚Äés‚Äé ‚ÄéP‚Äée‚Äél‚Äéo‚Äés‚Äéi‚Äé-‚ÄéS‚Äéc‚Äéh‚Äéu‚Äém‚Äée‚Äér‚Äé ‚ÄéC‚ÄéR‚Äé,‚Äé ‚ÄéA‚Äév‚Äée‚Äér‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéS‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé ‚ÄéF‚Äée‚Äéa‚Äér‚Äés‚Äé ‚ÄéU‚Äén‚Äét‚Äéi‚Äél‚Äé ‚ÄéM‚Äéa‚Äér‚Äéc‚Äéh‚Äé
2‚Äé,‚Äé8‚Äé3‚Äé7‚Äé
S‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äéd‚Äée‚Äér‚Äé:‚Äé ‚ÄéB‚Äél‚Äéi‚Äén‚Äék‚Äée‚Äén‚Äé ‚ÄéT‚Äée‚Äél‚Äél‚Äés‚Äé ‚ÄéN‚Äée‚Äét‚Äéa‚Äén‚Äéy‚Äéa‚Äéh‚Äéu‚Äé ‚ÄéI‚Äés‚Äér‚Äéa‚Äée‚Äél‚Äé ‚ÄéC‚Äéa‚Äén‚Äé'‚Äét‚Äé ‚ÄéD‚Äée‚Äéf‚Äée‚Äéa‚Äét‚Äé ‚ÄéH‚Äéa‚Äém‚Äéa‚Äés‚Äé
S‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äéd‚Äée‚Äér‚Äé:‚Äé ‚ÄéB‚Äél‚Äéi‚Äén‚Äék‚Äée‚Äén‚Äé ‚ÄéT‚Äée‚Äél‚Äél‚Äés‚Äé ‚ÄéN‚Äée‚Äét‚Äéa‚Äén‚Äéy‚Äéa‚Äéh‚Äéu‚Äé ‚ÄéI‚Äés‚Äér‚Äéa‚Äée‚Äél‚Äé ‚ÄéC‚Äéa‚Äén‚Äé'‚Äét‚Äé ‚ÄéD‚Äée‚Äéf‚Äée‚Äéa‚Äét‚Äé ‚ÄéH‚Äéa‚Äém‚Äéa‚Äés‚Äé
5‚Äé,‚Äé5‚Äé8‚Äé0‚Äé
H‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚ÄéC‚Äéo‚Äém‚Äém‚Äéi‚Äét‚Äét‚Äée‚Äée‚Äé ‚ÄéR‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚ÄéU‚Äén‚Äéa‚Äén‚Äéi‚Äém‚Äéo‚Äéu‚Äés‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äép‚Äép‚Äéo‚Äér‚Äét‚Äé ‚ÄéM‚Äéa‚Äéy‚Äéo‚Äér‚Äék‚Äéa‚Äés‚Äé ‚ÄéI‚Äém‚Äép‚Äée‚Äéa‚Äéc‚Äéh‚Äém‚Äée‚Äén‚Äét‚Äé
H‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚ÄéC‚Äéo‚Äém‚Äém‚Äéi‚Äét‚Äét‚Äée‚Äée‚Äé ‚ÄéR‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚ÄéU‚Äén‚Äéa‚Äén‚Äéi‚Äém‚Äéo‚Äéu‚Äés‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äép‚Äép‚Äéo‚Äér‚Äét‚Äé ‚ÄéM‚Äéa‚Äéy‚Äéo‚Äér‚Äék‚Äéa‚Äés‚Äé ‚ÄéI‚Äém‚Äép‚Äée‚Äéa‚Äéc‚Äéh‚Äém‚Äée‚Äén‚Äét‚Äé
2‚Äé2‚Äé7‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé ‚Äé‚Äî‚Äé ‚ÄéK‚Äée‚Äém‚Äép‚Äé ‚ÄéD‚Äéi‚Äés‚Äém‚Äéi‚Äés‚Äés‚Äée‚Äés‚Äé ‚ÄéM‚ÄéT‚ÄéG‚Äé ‚ÄéR‚Äée‚Äéq‚Äéu‚Äée‚Äés‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚ÄéC‚Äér‚Äéi‚Äém‚Äéi‚Äén‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚ÄéP‚Äér‚Äéo‚Äéb‚Äée‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äés‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé ‚Äé‚Äî‚Äé ‚ÄéK‚Äée‚Äém‚Äép‚Äé ‚ÄéD‚Äéi‚Äés‚Äém‚Äéi‚Äés‚Äés‚Äée‚Äés‚Äé ‚ÄéM‚ÄéT‚ÄéG‚Äé ‚ÄéR‚Äée‚Äéq‚Äéu‚Äée‚Äés‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚ÄéC‚Äér‚Äéi‚Äém‚Äéi‚Äén‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚ÄéP‚Äér‚Äéo‚Äéb‚Äée‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äés‚Äé
5‚Äé,‚Äé9‚Äé1‚Äé9‚Äé
M‚Äéa‚Äéi‚Äén‚Äée‚Äé ‚ÄéB‚Äéi‚Äél‚Äél‚Äé ‚ÄéA‚Äél‚Äél‚Äéo‚Äéw‚Äés‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéT‚Äéa‚Äék‚Äée‚Äé ‚ÄéK‚Äéi‚Äéd‚Äés‚Äé ‚ÄéA‚Äéw‚Äéa‚Äéy‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚ÄéP‚Äéa‚Äér‚Äée‚Äén‚Äét‚Äés‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéR‚Äée‚Äés‚Äéi‚Äés‚Äét‚Äé ‚ÄéT‚Äér‚Äéa‚Äén‚Äés‚Äéi‚Äén‚Äég‚Äé
M‚Äéa‚Äéi‚Äén‚Äée‚Äé ‚ÄéB‚Äéi‚Äél‚Äél‚Äé ‚ÄéA‚Äél‚Äél‚Äéo‚Äéw‚Äés‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéT‚Äéa‚Äék‚Äée‚Äé ‚ÄéK‚Äéi‚Äéd‚Äés‚Äé ‚ÄéA‚Äéw‚Äéa‚Äéy‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚ÄéP‚Äéa‚Äér‚Äée‚Äén‚Äét‚Äés‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéR‚Äée‚Äés‚Äéi‚Äés‚Äét‚Äé ‚ÄéT‚Äér‚Äéa‚Äén‚Äés‚Äéi‚Äén‚Äég‚Äé
8‚Äé8‚Äé4‚Äé
B‚Äél‚Äéa‚Äéc‚Äék‚ÄéR‚Äéo‚Äéc‚Äék‚Äé ‚ÄéC‚Äéh‚Äéi‚Äée‚Äéf‚Äé ‚ÄéW‚Äéa‚Äér‚Äén‚Äés‚Äé ‚Äéa‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéo‚Äér‚Äéy‚Äé ‚ÄéP‚Äéo‚Äés‚Äée‚Äés‚Äé ‚ÄéC‚Äéh‚Äéa‚Äél‚Äél‚Äée‚Äén‚Äég‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéE‚Äéu‚Äér‚Äéo‚Äép‚Äée‚Äé
B‚Äél‚Äéa‚Äéc‚Äék‚ÄéR‚Äéo‚Äéc‚Äék‚Äé ‚ÄéC‚Äéh‚Äéi‚Äée‚Äéf‚Äé ‚ÄéW‚Äéa‚Äér‚Äén‚Äés‚Äé ‚Äéa‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéo‚Äér‚Äéy‚Äé ‚ÄéP‚Äéo‚Äés‚Äée‚Äés‚Äé ‚ÄéC‚Äéh‚Äéa‚Äél‚Äél‚Äée‚Äén‚Äég‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéE‚Äéu‚Äér‚Äéo‚Äép‚Äée‚Äé
6‚Äé,‚Äé4‚Äé9‚Äé5‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéG‚ÄéA‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äég‚Äée‚Äé ‚ÄéS‚Äéc‚Äéh‚Äée‚Äéd‚Äéu‚Äél‚Äée‚Äés‚Äé ‚ÄéH‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äén‚Äé ‚ÄéA‚Äél‚Äél‚Äée‚Äég‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéF‚Äéa‚Äén‚Äéi‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äés‚Äé ‚ÄéM‚Äéi‚Äés‚Äéc‚Äéo‚Äén‚Äéd‚Äéu‚Äéc‚Äét‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéG‚ÄéA‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äég‚Äée‚Äé ‚ÄéS‚Äéc‚Äéh‚Äée‚Äéd‚Äéu‚Äél‚Äée‚Äés‚Äé ‚ÄéH‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äén‚Äé ‚ÄéA‚Äél‚Äél‚Äée‚Äég‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéF‚Äéa‚Äén‚Äéi‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äés‚Äé ‚ÄéM‚Äéi‚Äés‚Äéc‚Äéo‚Äén‚Äéd‚Äéu‚Äéc‚Äét‚Äé
3‚Äé,‚Äé9‚Äé4‚Äé6‚Äé
W‚Äéh‚Äéy‚Äé ‚ÄéC‚Äéo‚Äél‚Äéd‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äés‚Äé ‚Äéa‚Äé ‚ÄéT‚Äée‚Äés‚Äél‚Äéa‚Äé ‚Äé-‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéE‚Äév‚Äée‚Äér‚Äéy‚Äé ‚ÄéO‚Äét‚Äéh‚Äée‚Äér‚Äé ‚ÄéE‚ÄéV‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéM‚Äéa‚Äér‚Äék‚Äée‚Äét‚Äé
W‚Äéh‚Äéy‚Äé ‚ÄéC‚Äéo‚Äél‚Äéd‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äés‚Äé ‚Äéa‚Äé ‚ÄéT‚Äée‚Äés‚Äél‚Äéa‚Äé ‚Äé-‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéE‚Äév‚Äée‚Äér‚Äéy‚Äé ‚ÄéO‚Äét‚Äéh‚Äée‚Äér‚Äé ‚ÄéE‚ÄéV‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéM‚Äéa‚Äér‚Äék‚Äée‚Äét‚Äé
8‚Äé7‚Äé3‚Äé
H‚Äéo‚Äél‚Äéd‚Äée‚Äér‚Äé:‚Äé ‚Äé'‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äéc‚Äéy‚Äé ‚ÄéC‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚ÄéE‚Äén‚Äéd‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéD‚Äéo‚Äén‚Äéa‚Äél‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé'‚Äé
H‚Äéo‚Äél‚Äéd‚Äée‚Äér‚Äé:‚Äé ‚Äé'‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äéc‚Äéy‚Äé ‚ÄéC‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚ÄéE‚Äén‚Äéd‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéD‚Äéo‚Äén‚Äéa‚Äél‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé'‚Äé
4‚Äé8‚Äé
C‚Äéy‚Äég‚Äén‚Äéa‚Äél‚Äé ‚ÄéP‚Äéo‚Äél‚Äél‚Äé:‚Äé ‚ÄéR‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äé'‚ÄéT‚Äéa‚Äép‚Äé ‚Äéi‚Äén‚Äét‚Äéo‚Äé'‚Äé ‚ÄéA‚Äén‚Äég‚Äée‚Äér‚Äé ‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéI‚Äél‚Äél‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéM‚Äéi‚Äég‚Äér‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé
C‚Äéy‚Äég‚Äén‚Äéa‚Äél‚Äé ‚ÄéP‚Äéo‚Äél‚Äél‚Äé:‚Äé ‚ÄéR‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äé'‚ÄéT‚Äéa‚Äép‚Äé ‚Äéi‚Äén‚Äét‚Äéo‚Äé'‚Äé ‚ÄéA‚Äén‚Äég‚Äée‚Äér‚Äé ‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéI‚Äél‚Äél‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéM‚Äéi‚Äég‚Äér‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé

U‚ÄéK‚Äé:‚Äé ‚ÄéM‚Äéu‚Äéd‚Äés‚Äéh‚Äéa‚Äér‚Äék‚Äé ‚ÄéE‚Äés‚Äéc‚Äéo‚Äér‚Äét‚Äé ‚ÄéS‚Äém‚Äéa‚Äés‚Äéh‚Äée‚Äés‚Äé ‚ÄéH‚Äée‚Äér‚Äé ‚ÄéN‚Äée‚Äéw‚Äéb‚Äéo‚Äér‚Äén‚Äé ‚ÄéN‚Äéi‚Äég‚Äél‚Äée‚Äét‚Äé'‚Äés‚Äé ‚ÄéS‚Äék‚Äéu‚Äél‚Äél‚Äé ‚Äéi‚Äén‚Äé ‚ÄéF‚Äéi‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéR‚Äéa‚Äég‚Äée‚Äé.‚Äé

W‚Äéh‚Äéy‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéy‚Äéo‚Äéu‚Äé ‚Äéc‚Äér‚Äée‚Äéa‚Äét‚Äée‚Äé ‚Äés‚Äéu‚Äéc‚Äéh‚Äé ‚Äéa‚Äé ‚Äéf‚Äér‚Äée‚Äéa‚Äék‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéi‚Äér‚Äés‚Äét‚Äé ‚Äép‚Äél‚Äéa‚Äéc‚Äée‚Äé,‚Äé ‚Äéb‚Äéi‚Äét‚Äéc‚Äéh‚Äé?‚Äé


S‚Äéo‚Äéu‚Äét‚Äéh‚Äé ‚ÄéA‚Äél‚Äéa‚Äéb‚Äéa‚Äém‚Äéa‚Äé ‚ÄéA‚Äéu‚Äét‚Äéh‚Äéo‚Äér‚Äéi‚Äét‚Äéi‚Äée‚Äés‚Äé ‚ÄéC‚Äéa‚Äép‚Äét‚Äéu‚Äér‚Äée‚Äé ‚ÄéN‚Äée‚Äég‚Äér‚Äéo‚Äéi‚Äéd‚Äée‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äée‚Äéd‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚ÄéW‚Äéo‚Äém‚Äéa‚Äén‚Äé.‚Äé


S‚Äéo‚Äém‚Äéa‚Äél‚Äéi‚Äé ‚ÄéN‚Äée‚Äég‚Äér‚Äéo‚Äé ‚ÄéC‚Äéo‚Äép‚Äé ‚ÄéR‚Äée‚Äé-‚ÄéA‚Äép‚Äép‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚ÄéC‚Äéo‚Äéu‚Äér‚Äét‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äéi‚Äén‚Äég‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚ÄéW‚Äéo‚Äém‚Äéa‚Äén‚Äé.‚Äé


S‚Äéh‚Äér‚Äée‚Äév‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé ‚ÄéN‚Äéi‚Äég‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéR‚Äéa‚Äép‚Äéi‚Äén‚Äég‚Äé ‚Äé1‚Äé0‚Äé-‚ÄéY‚Äée‚Äéa‚Äér‚Äé-‚ÄéO‚Äél‚Äéd‚Äé.‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé.‚Äé

T‚Äéh‚Äéu‚Äé ‚Äé1‚Äé8‚Äé ‚Äé|‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé
7‚Äé0‚Äé¬∞‚Äé
2‚Äé%‚Äé
S‚ÄéW‚Äé
1‚Äé4‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
A‚Äéb‚Äéu‚Äén‚Äéd‚Äéa‚Äén‚Äét‚Äé ‚Äés‚Äéu‚Äén‚Äés‚Äéh‚Äéi‚Äén‚Äée‚Äé.‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äé ‚Äén‚Äée‚Äéa‚Äér‚Äé ‚Äé7‚Äé0‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéS‚ÄéW‚Äé ‚Äéa‚Äét‚Äé ‚Äé1‚Äé0‚Äé ‚Äét‚Äéo‚Äé ‚Äé2‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
5‚Äé0‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
4‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
S‚Äéu‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
7‚Äé:‚Äé2‚Äé6‚Äé ‚Äéa‚Äém‚Äé
S‚Äéu‚Äén‚Äés‚Äée‚Äét‚Äé
5‚Äé:‚Äé5‚Äé5‚Äé ‚Äép‚Äém‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé1‚Äé8‚Äé ‚Äé|‚Äé ‚ÄéN‚Äéi‚Äég‚Äéh‚Äét‚Äé
3‚Äé4‚Äé¬∞‚Äé
3‚Äé%‚Äé
N‚Äé
2‚Äé5‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
C‚Äél‚Äée‚Äéa‚Äér‚Äé ‚Äés‚Äék‚Äéi‚Äée‚Äés‚Äé.‚Äé ‚ÄéB‚Äée‚Äéc‚Äéo‚Äém‚Äéi‚Äén‚Äég‚Äé ‚Äéw‚Äéi‚Äén‚Äéd‚Äéy‚Äé ‚Äél‚Äéa‚Äét‚Äée‚Äé.‚Äé ‚ÄéL‚Äéo‚Äéw‚Äé ‚Äé3‚Äé4‚ÄéF‚Äé.‚Äé ‚ÄéN‚Äé ‚Äéw‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚Äéa‚Äét‚Äé ‚Äé5‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé,‚Äé ‚Äéi‚Äén‚Äéc‚Äér‚Äée‚Äéa‚Äés‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚Äé2‚Äé5‚Äé ‚Äét‚Äéo‚Äé ‚Äé3‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äée‚Äér‚Äé ‚Äéw‚Äéi‚Äén‚Äéd‚Äé ‚Äég‚Äéu‚Äés‚Äét‚Äés‚Äé ‚Äép‚Äéo‚Äés‚Äés‚Äéi‚Äéb‚Äél‚Äée‚Äé.‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
7‚Äé1‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
0‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
M‚Äéo‚Äéo‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
1‚Äé2‚Äé:‚Äé1‚Äé6‚Äé ‚Äép‚Äém‚Äé
W‚Äéa‚Äéx‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚Äéi‚Äéb‚Äéb‚Äéo‚Äéu‚Äés‚Äé
M‚Äéo‚Äéo‚Äén‚Äés‚Äée‚Äét‚Äé
1‚Äé2‚Äé:‚Äé5‚Äé6‚Äé ‚Äéa‚Äém‚Äé
F‚Äér‚Äéi‚Äé ‚Äé1‚Äé9‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé/‚ÄéW‚Äéi‚Äén‚Äéd‚Äé
4‚Äé7‚Äé¬∞‚Äé
/‚Äé2‚Äé4‚Äé¬∞‚Äé
1‚Äé%‚Äé
N‚ÄéN‚ÄéE‚Äé ‚Äé2‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé2‚Äé0‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
4‚Äé6‚Äé¬∞‚Äé
/‚Äé3‚Äé3‚Äé¬∞‚Äé
0‚Äé%‚Äé
N‚ÄéE‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äé ‚Äé2‚Äé1‚Äé
P‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
4‚Äé7‚Äé¬∞‚Äé
/‚Äé4‚Äé4‚Äé¬∞‚Äé
6‚Äé5‚Äé%‚Äé
E‚ÄéN‚ÄéE‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé2‚Äé2‚Äé
T‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
6‚Äé4‚Äé¬∞‚Äé
/‚Äé5‚Äé5‚Äé¬∞‚Äé
8‚Äé7‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé3‚Äé
T‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
6‚Äé9‚Äé¬∞‚Äé
/‚Äé5‚Äé5‚Äé¬∞‚Äé
7‚Äé9‚Äé%‚Äé
E‚Äé ‚Äé7‚Äé ‚Äém‚Äép‚Äéh‚Äé
W‚Äée‚Äéd‚Äé ‚Äé2‚Äé4‚Äé
T‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
6‚Äé7‚Äé¬∞‚Äé
/‚Äé4‚Äé8‚Äé¬∞‚Äé
6‚Äé9‚Äé%‚Äé
N‚Äé ‚Äé9‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé2‚Äé5‚Äé
A‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
6‚Äé5‚Äé¬∞‚Äé
/‚Äé4‚Äé6‚Äé¬∞‚Äé
3‚Äé6‚Äé%‚Äé
N‚ÄéN‚ÄéW‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
F‚Äér‚Äéi‚Äé ‚Äé2‚Äé6‚Äé
S‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
6‚Äé3‚Äé¬∞‚Äé
/‚Äé4‚Äé3‚Äé¬∞‚Äé
4‚Äé8‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé2‚Äé7‚Äé
A‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
6‚Äé0‚Äé¬∞‚Äé
/‚Äé3‚Äé9‚Äé¬∞‚Äé
5‚Äé1‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé3‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äé ‚Äé2‚Äé8‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
6‚Äé1‚Äé¬∞‚Äé
/‚Äé3‚Äé9‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé
N‚ÄéN‚ÄéW‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé2‚Äé9‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
6‚Äé3‚Äé¬∞‚Äé
/‚Äé4‚Äé1‚Äé¬∞‚Äé
2‚Äé0‚Äé%‚Äé
W‚ÄéN‚ÄéW‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé3‚Äé0‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
6‚Äé4‚Äé¬∞‚Äé
/‚Äé4‚Äé1‚Äé¬∞‚Äé
1‚Äé3‚Äé%‚Äé
N‚ÄéW‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
W‚Äée‚Äéd‚Äé ‚Äé3‚Äé1‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
6‚Äé4‚Äé¬∞‚Äé
/‚Äé4‚Äé4‚Äé¬∞‚Äé
8‚Äé%‚Äé
S‚Äé ‚Äé9‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé0‚Äé1‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
6‚Äé6‚Äé¬∞‚Äé
/‚Äé4‚Äé5‚Äé¬∞‚Äé
2‚Äé2‚Äé%‚Äé
S‚ÄéW‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

C‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äét‚Äé ‚Äét‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé:‚Äé ‚ÄéL‚Äée‚Äét‚Äé ‚Äéi‚Äét‚Äé ‚Äég‚Äéo‚Äé!‚Äé ‚ÄéJ‚Äéu‚Äés‚Äét‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äél‚Äée‚Äét‚Äé ‚Äéi‚Äét‚Äé ‚Äég‚Äéo‚Äé!‚Äé ‚Äéü•∂

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

T‚Äéi‚Äéb‚Äée‚Äét‚Äé
T‚Äéi‚Äéb‚Äée‚Äét‚Äé,‚Äé ‚Äéa‚Äél‚Äés‚Äéo‚Äé ‚Äék‚Äén‚Äéo‚Äéw‚Äén‚Äé ‚Äéa‚Äés‚Äé ‚ÄéN‚Äéo‚Äér‚Äét‚Äéh‚Äé ‚ÄéM‚Äéy‚Äéa‚Äén‚Äém‚Äéa‚Äér‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äég‚Äéo‚Äéo‚Äék‚Äé-‚Äéi‚Äén‚Äéf‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äér‚Äée‚Äég‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéP‚Äée‚Äéo‚Äép‚Äél‚Äée‚Äé'‚Äés‚Äé ‚ÄéR‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéC‚Äéh‚Äéi‚Äén‚Äéa‚Äé.‚Äé ‚ÄéT‚Äéi‚Äéb‚Äée‚Äét‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äém‚Äée‚Äér‚Äél‚Äéy‚Äé ‚Äél‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äéa‚Äé ‚Äér‚Äée‚Äél‚Äéi‚Äég‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äén‚Äéu‚Äét‚Äéc‚Äéa‚Äés‚Äée‚Äé ‚Äéc‚Äéa‚Äél‚Äél‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äé""‚ÄéD‚Äéa‚Äél‚Äéa‚Äéi‚Äé ‚ÄéL‚Äéa‚Äém‚Äéa‚Äé""‚Äé,‚Äé ‚Äéu‚Äén‚Äét‚Äéi‚Äél‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéM‚Äéa‚Äéo‚Äéi‚Äés‚Äét‚Äés‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äéd‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚ÄéC‚Äéh‚Äéi‚Äén‚Äéa‚Äé ‚Äéw‚Äéa‚Äés‚Äén‚Äé'‚Äét‚Äé ‚Äéb‚Äéi‚Äég‚Äé ‚Äée‚Äén‚Äéo‚Äéu‚Äég‚Äéh‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéi‚Äén‚Äév‚Äéa‚Äéd‚Äée‚Äéd‚Äé.‚Äé ‚ÄéT‚Äéo‚Äéd‚Äéa‚Äéy‚Äé,‚Äé ‚ÄéT‚Äéi‚Äéb‚Äée‚Äét‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äép‚Äél‚Äéa‚Äéc‚Äée‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéf‚Äér‚Äée‚Äée‚Äéd‚Äéo‚Äém‚Äé-‚Äél‚Äéo‚Äév‚Äée‚Äér‚Äés‚Äé ‚Äés‚Äéu‚Äép‚Äép‚Äéo‚Äér‚Äét‚Äé ‚Äéy‚Äée‚Äét‚Äé ‚Äér‚Äée‚Äéf‚Äéu‚Äés‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äéa‚Äéc‚Äét‚Äéu‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéh‚Äée‚Äél‚Äép‚Äé,‚Äé ‚Äéd‚Äéu‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äéi‚Äér‚Äé ‚Äéa‚Äéd‚Äéd‚Äéi‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äéc‚Äéh‚Äée‚Äéa‚Äép‚Äé,‚Äé ‚Äép‚Äéo‚Äéi‚Äés‚Äéo‚Äén‚Äée‚Äéd‚Äé ‚Äép‚Äér‚Äéo‚Äéd‚Äéu‚Äéc‚Äét‚Äés‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚ÄéC‚Äéh‚Äéi‚Äén‚Äée‚Äés‚Äée‚Äé ‚Äés‚Äéw‚Äée‚Äéa‚Äét‚Äés‚Äéh‚Äéo‚Äép‚Äés‚Äé.‚Äé ‚ÄéD‚Äée‚Äés‚Äép‚Äéi‚Äét‚Äée‚Äé ‚Äéb‚Äéu‚Äér‚Äén‚Äéi‚Äén‚Äég‚Äé ‚Äém‚Äéo‚Äén‚Äék‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äér‚Äéi‚Äéo‚Äét‚Äés‚Äé,‚Äé ‚ÄéC‚Äéh‚Äéi‚Äén‚Äéa‚Äé ‚Äéc‚Äél‚Äéa‚Äéi‚Äém‚Äés‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéi‚Äét‚Äé ‚Äéd‚Äéi‚Äéd‚Äé ‚Äém‚Äéo‚Äér‚Äée‚Äé ‚Äég‚Äéo‚Äéo‚Äéd‚Äé ‚Äét‚Äéh‚Äéa‚Äén‚Äé ‚Äéh‚Äéa‚Äér‚Äém‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé""‚Äéa‚Äéd‚Äév‚Äéa‚Äén‚Äéc‚Äée‚Äéd‚Äé""‚Äé ‚ÄéT‚Äéi‚Äéb‚Äée‚Äét‚Äéa‚Äén‚Äé ‚Äép‚Äée‚Äéo‚Äép‚Äél‚Äée‚Äé.‚Äé

(‚Äé(‚Äé ‚ÄéS‚Äée‚Äél‚Äéf‚Äé-‚ÄéI‚Äém‚Äém‚Äéo‚Äél‚Äéa‚Äét‚Äée‚Äé ‚Äé)‚Äé)‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéT‚Äéi‚Äém‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äél‚Äéa‚Äét‚Äée‚Äés‚Äét‚Äé ‚Äék‚Äék‚Äék‚Äéu‚Äéo‚Äét‚Äée‚Äés‚Äé.‚Äé ‚Äé#‚ÄéI‚ÄéR‚ÄéC‚Äé3‚Äé0‚Äé:‚Äé

[‚Äé0‚Äé7‚Äé:‚Äé4‚Äé3‚Äé]‚Äé ‚Äé<‚Äé+‚ÄéD‚Äéa‚Äér‚Äén‚Äé>‚Äé ‚Äéw‚Äéa‚Äéi‚Äét‚Äés‚Äé,‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äév‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚Äéw‚Äéa‚Äén‚Äét‚Äé ‚Äéo‚Äép‚Äée‚Äén‚Äé ‚Äéb‚Äéo‚Äér‚Äéd‚Äée‚Äér‚Äés‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé0‚Äé3‚Äé]‚Äé ‚Äé<‚Äé@‚Äéo‚Äél‚Äéu‚Äés‚Äé>‚Äé ‚Äé<‚Äé+‚Äél‚Äéu‚Äél‚Äéd‚Äéa‚Äén‚Äég‚Äés‚Äé>‚Äé ‚ÄéI‚Äém‚Äéa‚Äég‚Äéi‚Äén‚Äée‚Äé ‚Äét‚Äéa‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äép‚Äéo‚Äél‚Äél‚Äés‚Äé ‚Äés‚Äée‚Äér‚Äéi‚Äéo‚Äéu‚Äés‚Äél‚Äéy‚Äé ‚Äéi‚Äén‚Äé ‚Äé2‚Äé0‚Äé2‚Äé4‚Äé ‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé3‚Äé3‚Äé]‚Äé ‚Äé<‚Äé+‚Äén‚Äéo‚Äém‚Äé1‚Äé>‚Äé ‚Äéh‚Äét‚Äét‚Äép‚Äés‚Äé:‚Äé/‚Äé/‚Äén‚Äéo‚Äét‚Äét‚Äéh‚Äée‚Äéb‚Äée‚Äée‚Äé.‚Äéc‚Äéo‚Äém‚Äé/‚Äéa‚Äér‚Äét‚Äéi‚Äéc‚Äél‚Äée‚Äé/‚Äéo‚Äék‚Äél‚Äéa‚Äéh‚Äéo‚Äém‚Äéa‚Äé-‚Äél‚Äéa‚Äéw‚Äém‚Äéa‚Äék‚Äée‚Äér‚Äés‚Äé-‚Äél‚Äée‚Äég‚Äéi‚Äés‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé-‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé-‚Äér‚Äée‚Äéq‚Äéu‚Äéi‚Äér‚Äée‚Äé-‚Äés‚Äét‚Äéu‚Äéd‚Äée‚Äén‚Äét‚Äés‚Äé-‚Äéd‚Äér‚Äée‚Äés‚Äés‚Äée‚Äéd‚Äé-‚Äéa‚Äés‚Äé-‚Äéf‚Äéu‚Äér‚Äér‚Äéi‚Äée‚Äés‚Äé-‚Äét‚Äéo‚Äé-‚Äéb‚Äée‚Äé-‚Äér‚Äée‚Äém‚Äéo‚Äév‚Äée‚Äéd‚Äé-‚Äéb‚Äéy‚Äé-‚Äéa‚Äén‚Äéi‚Äém‚Äéa‚Äél‚Äé-‚Äéc‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé3‚Äé3‚Äé]‚Äé ‚Äé<‚Äé+‚Äéc‚Äén‚Äér‚Äé>‚Äé ‚Äé[‚Äé ‚ÄéO‚Äék‚Äél‚Äéa‚Äéh‚Äéo‚Äém‚Äéa‚Äé ‚Äél‚Äéa‚Äéw‚Äém‚Äéa‚Äék‚Äée‚Äér‚Äé'‚Äés‚Äé ‚Äén‚Äée‚Äéw‚Äé ‚Äéb‚Äéi‚Äél‚Äél‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äér‚Äée‚Äéq‚Äéu‚Äéi‚Äér‚Äée‚Äé ‚Äés‚Äét‚Äéu‚Äéd‚Äée‚Äén‚Äét‚Äés‚Äé ‚Äéd‚Äér‚Äée‚Äés‚Äés‚Äée‚Äéd‚Äé ‚Äéa‚Äés‚Äé ‚Äéf‚Äéu‚Äér‚Äér‚Äéi‚Äée‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äée‚Äé ‚Äér‚Äée‚Äém‚Äéo‚Äév‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äéa‚Äén‚Äéi‚Äém‚Äéa‚Äél‚Äé ‚Äéc‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äé ‚Äé|‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äée‚Äée‚Äé ‚Äé]‚Äé ‚Äé-‚Äé ‚Äén‚Äéo‚Äét‚Äét‚Äéh‚Äée‚Äéb‚Äée‚Äée‚Äé.‚Äéc‚Äéo‚Äém‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé3‚Äé4‚Äé]‚Äé ‚Äé<‚Äé@‚Äéo‚Äél‚Äéu‚Äés‚Äé>‚Äé ‚Äéa‚Äén‚Äéi‚Äém‚Äéa‚Äél‚Äé ‚Äéc‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äé ‚Äél‚Äéo‚Äél‚Äé.‚Äé ‚Äé ‚Äéc‚Äél‚Äéo‚Äéw‚Äén‚Äé ‚Äéw‚Äéo‚Äér‚Äél‚Äéd‚Äé
‚Äé0‚Äé3‚Äé[‚Äé0‚Äé8‚Äé:‚Äé4‚Äé0‚Äé]‚Äé ‚Äé*‚Äé ‚Äém‚Äéi‚Äén‚Äén‚Äéi‚Äée‚Äém‚Äée‚Äé ‚Äé(‚Äés‚Äéi‚Äéd‚Äé4‚Äé9‚Äé3‚Äé9‚Äé8‚Äé0‚Äé@‚Äéi‚Äéd‚Äé-‚Äé4‚Äé9‚Äé3‚Äé9‚Äé8‚Äé0‚Äé.‚Äéi‚Äél‚Äék‚Äél‚Äée‚Äéy‚Äé.‚Äéi‚Äér‚Äéc‚Äéc‚Äél‚Äéo‚Äéu‚Äéd‚Äé.‚Äéc‚Äéo‚Äém‚Äé)‚Äé ‚Äéh‚Äéa‚Äés‚Äé ‚Äéj‚Äéo‚Äéi‚Äén‚Äée‚Äéd‚Äé ‚Äé#‚ÄéI‚ÄéR‚ÄéC‚Äé3‚Äé0‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé4‚Äé0‚Äé]‚Äé ‚Äé<‚Äé@‚ÄéA‚Äéu‚Äéd‚Äéa‚Äés‚Äéi‚Äét‚Äéy‚Äé>‚Äé ‚Äéh‚Äéa‚Äéh‚Äéa‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé4‚Äé0‚Äé]‚Äé ‚Äé<‚Äé@‚ÄéA‚Äéu‚Äéd‚Äéa‚Äés‚Äéi‚Äét‚Äéy‚Äé>‚Äé ‚Äég‚Äéj‚Äé ‚Äéo‚Äék‚Äél‚Äéa‚Äéh‚Äéo‚Äém‚Äéa‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé4‚Äé]‚Äé ‚Äé<‚Äé+‚Äéw‚Äéo‚Äér‚Äét‚Äéh‚Äél‚Äée‚Äés‚Äés‚Äé>‚Äé ‚ÄéM‚Äéy‚Äé ‚Äég‚Äér‚Äéo‚Äéi‚Äén‚Äé ‚Äéi‚Äés‚Äé ‚Äéi‚Äét‚Äéc‚Äéh‚Äéy‚Äé,‚Äé ‚Äéi‚Äés‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äén‚Äéo‚Äér‚Äém‚Äéa‚Äél‚Äé?‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé5‚Äé]‚Äé ‚Äé<‚Äé+‚ÄéD‚Äéa‚Äér‚Äén‚Äé>‚Äé ‚Äéh‚Äéa‚Äéh‚Äéa‚Äé ‚Äég‚Äéo‚Äéo‚Äéd‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé5‚Äé]‚Äé ‚Äé<‚Äé+‚ÄéD‚Äéa‚Äér‚Äén‚Äé>‚Äé ‚Äéw‚Äéa‚Äén‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äée‚Äé ‚Äéa‚Äén‚Äé ‚Äéa‚Äén‚Äéi‚Äém‚Äéa‚Äél‚Äé,‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äét‚Äér‚Äée‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äél‚Äéi‚Äék‚Äée‚Äé ‚Äéo‚Äén‚Äée‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé5‚Äé]‚Äé ‚Äé<‚Äé+‚ÄéD‚Äéa‚Äér‚Äén‚Äé>‚Äé ‚Äéb‚Äéu‚Äét‚Äé ‚Äés‚Äéh‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äét‚Äéa‚Äék‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äém‚Äé ‚Äét‚Äéo‚Äé ‚Äém‚Äée‚Äén‚Äét‚Äéa‚Äél‚Äé ‚Äéh‚Äéo‚Äés‚Äép‚Äéi‚Äét‚Äéa‚Äél‚Äé ‚Äét‚Äéh‚Äéo‚Äéu‚Äég‚Äéh‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé5‚Äé]‚Äé ‚Äé<‚Äé+‚Äén‚Äéo‚Äém‚Äé1‚Äé>‚Äé ‚Äéi‚Äé ‚Äét‚Äéh‚Äéi‚Äén‚Äék‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé ‚Äés‚Äéh‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äét‚Äéa‚Äék‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äém‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéo‚Äéu‚Äén‚Äéd‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé5‚Äé]‚Äé ‚Äé<‚Äé+‚Äén‚Äéo‚Äém‚Äé1‚Äé>‚Äé ‚Äén‚Äéo‚Äéw‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéu‚Äé ‚Äém‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéi‚Äét‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé7‚Äé]‚Äé ‚Äé<‚Äé+‚ÄéD‚Äéa‚Äér‚Äén‚Äé>‚Äé ‚Äéc‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äén‚Äée‚Äéu‚Äét‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äém‚Äé ‚Äéo‚Äén‚Äéc‚Äée‚Äé ‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äét‚Äéo‚Äéo‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé7‚Äé]‚Äé ‚Äé<‚Äé@‚Äéo‚Äél‚Äéu‚Äés‚Äé>‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äéc‚Äéu‚Äér‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äéw‚Äéh‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé ‚Äém‚Äée‚Äéa‚Äén‚Äé ‚Äéb‚Äéy‚Äé ‚Äé""‚Äéd‚Äér‚Äée‚Äés‚Äés‚Äée‚Äéd‚Äé ‚Äéa‚Äés‚Äé ‚Äéf‚Äéu‚Äér‚Äér‚Äéi‚Äée‚Äés‚Äé""‚Äé ‚Äéb‚Äée‚Äéc‚Äéa‚Äéu‚Äés‚Äée‚Äé ‚ÄéI‚Äé ‚Äéb‚Äée‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé'‚Äér‚Äée‚Äé ‚Äén‚Äéo‚Äét‚Äé ‚Äéc‚Äéo‚Äém‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äéo‚Äés‚Äée‚Äé ‚Äés‚Äéu‚Äéi‚Äét‚Äés‚Äé
[‚Äé0‚Äé8‚Äé:‚Äé5‚Äé7‚Äé]‚Äé ‚Äé<‚Äé@‚ÄéA‚Äéu‚Äéd‚Äéa‚Äés‚Äéi‚Äét‚Äéy‚Äé>‚Äé ‚Äéo‚Äél‚Äéu‚Äés‚Äé:‚Äé ‚Äét‚Äéy‚Äép‚Äéi‚Äéc‚Äéa‚Äél‚Äé ‚Äér‚Äée‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé,‚Äé ‚Äéc‚Äér‚Äée‚Äéa‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äép‚Äér‚Äéo‚Äéb‚Äél‚Äée‚Äém‚Äés‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéd‚Äéo‚Äén‚Äét‚Äé ‚Äée‚Äéx‚Äéi‚Äés‚Äét‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äén‚Äé ‚Äém‚Äéa‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äél‚Äée‚Äés‚Äéi‚Äés‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

C‚Äéh‚Äél‚Äéa‚Äém‚Äéy‚Äés‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéa‚Äé,‚Äé ‚Äéa‚Äél‚Äés‚Äéo‚Äé ‚Äék‚Äén‚Äéo‚Äéw‚Äén‚Äé ‚Äéa‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äée‚Äég‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äés‚Äéc‚Äéa‚Äél‚Äél‚Äéo‚Äép‚Äé,‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äés‚Äém‚Äéa‚Äél‚Äél‚Äé ‚Äéb‚Äéi‚Äé-‚Äév‚Äéa‚Äél‚Äév‚Äée‚Äé ‚Äém‚Äéo‚Äél‚Äél‚Äéu‚Äés‚Äéc‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äéc‚Äéa‚Äél‚Äél‚Äéo‚Äép‚Äé ‚Äéf‚Äéa‚Äém‚Äéi‚Äél‚Äéy‚Äé,‚Äé ‚ÄéP‚Äée‚Äéc‚Äét‚Äéi‚Äén‚Äéi‚Äéd‚Äéa‚Äée‚Äé.‚Äé ‚ÄéI‚Äét‚Äé ‚Äéo‚Äéc‚Äéc‚Äéu‚Äér‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéN‚Äéo‚Äér‚Äét‚Äéh‚Äé ‚ÄéS‚Äée‚Äéa‚Äé,‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéE‚Äén‚Äég‚Äél‚Äéi‚Äés‚Äéh‚Äé ‚ÄéC‚Äéh‚Äéa‚Äén‚Äén‚Äée‚Äél‚Äé,‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äén‚Äéo‚Äér‚Äét‚Äéh‚Äée‚Äéa‚Äés‚Äét‚Äée‚Äér‚Äén‚Äé ‚ÄéA‚Äét‚Äél‚Äéa‚Äén‚Äét‚Äéi‚Äéc‚Äé ‚ÄéO‚Äéc‚Äée‚Äéa‚Äén‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéR‚Äée‚Äéd‚Äé ‚ÄéS‚Äée‚Äéa‚Äé,‚Äé ‚Äél‚Äéi‚Äév‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äét‚Äé ‚Äéd‚Äée‚Äép‚Äét‚Äéh‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äéu‚Äép‚Äé ‚Äét‚Äéo‚Äé ‚Äéa‚Äér‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äé1‚Äé0‚Äé0‚Äé ‚Äém‚Äé ‚Äéa‚Äél‚Äéo‚Äén‚Äég‚Äé ‚Äéc‚Äéo‚Äéa‚Äés‚Äét‚Äéa‚Äél‚Äé ‚Äér‚Äéo‚Äéc‚Äék‚Äéy‚Äé ‚Äéa‚Äér‚Äée‚Äéa‚Äés‚Äé.‚Äé ‚ÄéI‚Äét‚Äé ‚Äét‚Äéy‚Äép‚Äéi‚Äéc‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äél‚Äéi‚Äév‚Äée‚Äés‚Äé ‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äé ‚Äéb‚Äéo‚Äéu‚Äél‚Äéd‚Äée‚Äér‚Äés‚Äé ‚Äéo‚Äér‚Äé ‚Äéa‚Äém‚Äéo‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéh‚Äéo‚Äél‚Äéd‚Äéf‚Äéa‚Äés‚Äét‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äés‚Äée‚Äéa‚Äéw‚Äée‚Äée‚Äéd‚Äés‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äés‚Äéh‚Äée‚Äél‚Äél‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéC‚Äéh‚Äél‚Äéa‚Äém‚Äéy‚Äés‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéa‚Äé ‚Äéc‚Äéo‚Äém‚Äée‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äé ‚Äér‚Äéa‚Äén‚Äég‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéc‚Äéo‚Äél‚Äéo‚Äéu‚Äér‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äée‚Äég‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äép‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äén‚Äés‚Äé ‚Äéi‚Äén‚Äéc‚Äél‚Äéu‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äéw‚Äéh‚Äéi‚Äét‚Äée‚Äé,‚Äé ‚Äép‚Äéi‚Äén‚Äék‚Äé,‚Äé ‚Äér‚Äée‚Äéd‚Äé,‚Äé ‚Äéo‚Äér‚Äéa‚Äén‚Äég‚Äée‚Äé,‚Äé ‚Äéy‚Äée‚Äél‚Äél‚Äéo‚Äéw‚Äé,‚Äé ‚Äéo‚Äér‚Äé ‚Äép‚Äéu‚Äér‚Äép‚Äél‚Äée‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéa‚Äén‚Äéy‚Äét‚Äéh‚Äéi‚Äén‚Äég‚Äé ‚Äéi‚Äén‚Äé ‚Äéb‚Äée‚Äét‚Äéw‚Äée‚Äée‚Äén‚Äé.‚Äé ‚ÄéB‚Äéo‚Äét‚Äéh‚Äé ‚Äév‚Äéa‚Äél‚Äév‚Äée‚Äés‚Äé ‚Äéa‚Äér‚Äée‚Äé ‚Äéc‚Äéo‚Äén‚Äév‚Äée‚Äéx‚Äé,‚Äé ‚Äér‚Äéo‚Äéu‚Äén‚Äéd‚Äée‚Äéd‚Äé ‚Äéo‚Äér‚Äé ‚Äéo‚Äév‚Äéa‚Äél‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äéy‚Äém‚Äém‚Äée‚Äét‚Äér‚Äéi‚Äéc‚Äéa‚Äél‚Äé ‚Äée‚Äéx‚Äéc‚Äée‚Äép‚Äét‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚Äée‚Äéi‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äés‚Äéi‚Äéd‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéu‚Äém‚Äéb‚Äéo‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äés‚Äéh‚Äée‚Äél‚Äél‚Äé ‚Äéd‚Äéo‚Äée‚Äés‚Äé ‚Äén‚Äéo‚Äét‚Äé ‚Äéu‚Äés‚Äéu‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äée‚Äéx‚Äéc‚Äée‚Äée‚Äéd‚Äé ‚Äé6‚Äé ‚Äéc‚Äém‚Äé ‚Äéi‚Äén‚Äé ‚Äél‚Äée‚Äén‚Äég‚Äét‚Äéh‚Äé.‚Äé ‚ÄéT‚Äéh‚Äéi‚Äés‚Äé ‚ÄéC‚Äé.‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéa‚Äé ‚Äés‚Äéh‚Äée‚Äél‚Äél‚Äé,‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äél‚Äée‚Äéf‚Äét‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äér‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äév‚Äéa‚Äél‚Äév‚Äée‚Äés‚Äé ‚Äés‚Äéh‚Äéo‚Äéw‚Äén‚Äé,‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äéo‚Äér‚Äéi‚Äég‚Äéi‚Äén‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéf‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéA‚Äéd‚Äér‚Äéi‚Äéa‚Äét‚Äéi‚Äéc‚Äé ‚ÄéS‚Äée‚Äéa‚Äé ‚Äén‚Äée‚Äéa‚Äér‚Äé ‚ÄéI‚Äét‚Äéa‚Äél‚Äéy‚Äé.‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

W‚Äée‚Äél‚Äél‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äég‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚Äég‚Äéo‚Äé ‚Äéw‚Äéa‚Äét‚Äéc‚Äéh‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äé ‚Äék‚Äéi‚Äéd‚Äés‚Äé ‚Äéa‚Äét‚Äé ‚Äéa‚Äé ‚Äéd‚Äéa‚Äéy‚Äéc‚Äéa‚Äér‚Äée‚Äé ‚Äéc‚Äée‚Äén‚Äét‚Äée‚Äér‚Äé.‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äég‚Äér‚Äée‚Äéa‚Äét‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äék‚Äéi‚Äéd‚Äés‚Äé.‚Äé"
76SAdRgt,Untitled,benjaminvr,JavaScript,Thursday 18th of January 2024 09:05:23 PM CDT,"/* eslint-disable no-extend-native */

// Dienen geschreven te worden middels function(){} syntax om de correcte ""this"" te kunnen gebruiken
// Bij een arrow function zal ""this"" anders wijzen naar window
const LoadExtensionMethods = () => {
    Array.prototype.last = function(){
        return this[this.length - 1];
    }

    Element.prototype.getInclusiveHeight = function(extraHeight=0){
        const list = [
            'margin-top',
            'margin-bottom',
            'border-top',
            'border-bottom',
            'padding-top',
            'padding-bottom',
            'height'
        ]
    
        const style = window.getComputedStyle(this)
        return list.map(k => parseInt(style.getPropertyValue(k), 10))
                   .reduce((prev, cur) => prev + cur)
                   + extraHeight;
    }
}

export default LoadExtensionMethods;"
g38vHG6A,Untitled,tinchoeze27,C#,Thursday 18th of January 2024 08:56:10 PM CDT,"@page ""/""
@using MonitorizacionApi.Web.Data
@using MonitorizacionApi.Web.Data.Dtos
@using MonitorizacionApi.Web.Models
@using RestSharp
@using System.Dynamic
@inject IApisBases _api

@if (isLoading)
{
    <div class=""loading"" style=""display: @(isLoading ? ""block"" : ""none"")"">
        <img src=""/loading.gif"" alt=""Loading..."" />
    </div>
}
else
{

    @if (estadoApis != null && estadoApis.Count > 0)
    {
        <div class=""d-flex align-items-center"">
            <p class=""m-0"">Actualizar cada</p>
            <select class=""form-control m-2"" style=""max-width: 50px;"" @bind=""selectedOption"" @oninput=""HandleSelectChange"">
                @foreach (var option in options)
                {
                    <option value=""@option.Value"">@option.Text</option>
                }
            </select>
            <p class=""m-0"">segundos</p>
        </div>

        <table class=""table"">
            <thead>
                <tr>
                    <th style=""width: 200px; text-align:center"">API</th>
                    <th style=""width: 200px; text-align:center"">URL</th>
                    <th style=""width: 100px;text-align:center"">Tecnologia</th>
                    <th style=""width: 75px;text-align:center"">Estado</th>
                    <th style=""width: 700px;text-align:center"">Error</th>
                    <th style=""width: auto;text-align:center"">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in estadoApis)
                {
                    <tr>
                        <td>@item.Nombre</td>
                        <td>@item.Url</td>
                        <td style=""background-color: @(item.Tecnologia == ""Net Core"" ? ""Purple"" : ""Pink""); color:white; text-align:center;"">@item.Tecnologia</td>
                        <td style=""background-color: @(item.Estado == ""Online"" ? ""green"" : ""red""); color:white; text-align:center;"">@item.Estado</td>
                        <td>@item.Error</td>
                        <td style=""text-align:center"">
                            <button class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#modalDev"" @onclick=@(async ()=> await MostrarModalDesarrolladores(item.Id))>Desarrolladores</button>
                            <button class=""btn btn-info"">Endpoints</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>    
        
    }


}

@if(mostrarListadoProgramadores)
{
    <div class=""modal fade"" id=""modalDev"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-centered"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Desarrolladores</h5>
                    <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close"" @onclick=@(async ()=> await CerrarModalDesarrolladores())></button>
                </div>
                <div class=""modal-body"">
                    @if (isLoadingModalDev)
                    {
                        <div class=""loading"" style=""display: @(isLoadingModalDev ? ""block"" : ""none"")"">
                            <img src=""/loading.gif"" alt=""Loading..."" />
                        </div>
                    }
                    else
                    {

                        @if (listadoProgramadores != null && listadoProgramadores.Count > 0)
                        {
                            <ol>
                                @foreach (var item in listadoProgramadores)
                                {

                                    <li>
                                        @item.Nombre
                                    </li>

                                }
                            </ol>
                        }
                        else
                        {
                            <p>No se encontraron datos.</p>
                        }

                    }
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"" @onclick=@(async ()=> await CerrarModalDesarrolladores())>Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    private bool isLoading;
    private bool isLoadingModalDev;
    private List<ApiDto> estadoApis;
    private List<DesarrolladoresDto> listadoProgramadores;
    private int IdApi = 0;
    private string selectedOption = ""5"";
    private int selectedOptionInt;
    private bool mostrarListadoProgramadores = false;
    private System.Threading.Timer? timer;

    protected override async Task OnInitializedAsync()
    {
        await GetApis();
        IniciarTemporizador();
    }

    private void HandleSelectChange(ChangeEventArgs e)
    {
        selectedOption = e.Value.ToString();
        selectedOptionInt = int.Parse(selectedOption);
        // Reinicia el temporizador con el nuevo intervalo
        ReiniciarTemporizador();
    }

    private void IniciarTemporizador()
    {
        timer = new System.Threading.Timer(async (state) =>
        {
            verificarEstados();
            InvokeAsync(StateHasChanged);
        }, null, 0, selectedOptionInt * 1000);
    }

    private void DetenerTemporizador()
    {
        timer?.Change(System.Threading.Timeout.Infinite, System.Threading.Timeout.Infinite);
    }

    private void ReiniciarTemporizador()
    {
        DetenerTemporizador();
        IniciarTemporizador();
    }

    List<SelectOptionSeconds> options = new List<SelectOptionSeconds>
    {
        new SelectOptionSeconds { Value = ""5"", Text = ""5"" },
        new SelectOptionSeconds { Value = ""10"", Text = ""10"" },
        new SelectOptionSeconds { Value = ""15"", Text = ""15"" },
        new SelectOptionSeconds { Value = ""30"", Text = ""30"" }
    };

    private async Task verificarEstados()
    {
        isLoading = true; // Agregar esta l√≠nea
        await InvokeAsync(StateHasChanged);

        foreach (var item in estadoApis.ToList())
        {
            await CargarDatosItem(item);
        }

        isLoading = false;
        await InvokeAsync(StateHasChanged);


    }

    private async Task GetApis()
    {
        estadoApis = await _api.GetApisList();       
    }

    private async Task CargarDatosItem(ApiDto item)
    {
        // L√≥gica de carga de datos para el item
        var url = item.UrlDesarrollo;
        var client = new RestClient(url);
        var request = new RestRequest(url, Method.Get);
        RestResponse response = new RestResponse();
        response = await client.ExecuteAsync(request);

        item.Nombre.ToUpper();
        item.Url = url;
        item.Tecnologia = item.IdTecnologiaNavigation.Descripcion;
        item.Entorno = item.IdEntornoNavigation.Descripcion;

        if (response.IsSuccessful)
        {
            item.Estado = ""Online"";
            item.Error = """";
        }
        else
        {
            item.Estado = ""Offline"";
            item.Error = $""{response.StatusCode} - {response.ErrorException} - {response.Content}"";
        }
    }

    private async Task MostrarModalDesarrolladores(int idapi)
    {
        mostrarListadoProgramadores = true;
        isLoadingModalDev = true;
        StateHasChanged();
        listadoProgramadores = await _api.GetDesarrolladoresPorApi(idapi);        
        isLoadingModalDev = false;
        StateHasChanged();
    }

    private async Task CerrarModalDesarrolladores()
    {
        mostrarListadoProgramadores = false;
        isLoadingModalDev = false;
        StateHasChanged();
    }
}"
1gEAUfme,l2jrusacis argu trade packets,tensador125,Java,Thursday 18th of January 2024 08:52:31 PM CDT,"### Eclipse Workspace Patch 1.0
#P l2jruacis
diff --git java/net/sf/l2j/gameserver/model/trade/TradeItem.java java/net/sf/l2j/gameserver/model/trade/TradeItem.java
index c982471..d68878e 100644
--- java/net/sf/l2j/gameserver/model/trade/TradeItem.java
+++ java/net/sf/l2j/gameserver/model/trade/TradeItem.java
@@ -11,11 +11,13 @@
 	private int _count;
 	private int _quantity;
 	private int _price;
+    private int _augmentationId;
 	
 	public TradeItem(ItemInstance item, int count, int price)
 	{
 		_objectId = item.getObjectId();
 		_item = item.getItem();
+		_augmentationId = item.isAugmented() ? item.getAugmentation().getId() : 0;
 		_enchant = item.getEnchantLevel();
 		_count = count;
 		_quantity = count;
@@ -57,6 +59,11 @@
 		return _item;
 	}
 	
+	public int getAugmentationId() 
+	{	        
+	return _augmentationId;
+	}	
+	
 	public int getEnchant()
 	{
 		return _enchant;
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
index ee7f491..28330b2 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
@@ -52,11 +52,22 @@
 			writeD(item.getItem().getItemId());
 			writeD(availableCount);
 			writeH(item.getItem().getType2());
-			writeH(0x00);
+            int _augorg = 0;
+            int _aug = 0;
+            int _aug2 = 0;
+            int _aug3 = 0;
+            if (item.getAugmentationId() > 0) 
+            {
+                _augorg = item.getAugmentationId();    
+                _aug = _augorg>>16;
+                _aug2 = _aug;
+                _aug3 = _augorg-(_aug<<16);
+            }                
+                writeH(_aug2);
 			writeD(item.getItem().getBodyPart());
 			writeH(item.getEnchant());
 			writeH(0x00);
-			writeH(0x00);
+			writeH(_aug3);
 		}
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
index 63e6d4f..ef44ba1 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
@@ -23,10 +23,21 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_quantity);
 		writeH(_item.getItem().getType2());
-		writeH(0x00); // ?
+        int _augorg = 0;
+        int _aug = 0;
+        int _aug2 = 0;
+        int _aug3 = 0;
+        if (_item.getAugmentationId() > 0) 
+        {
+            _augorg = _item.getAugmentationId();    
+            _aug = _augorg>>16;
+            _aug2 = _aug;
+            _aug3 = _augorg-(_aug<<16);
+        }                
+            writeH(_aug2);
 		writeD(_item.getItem().getBodyPart());
 		writeH(_item.getEnchant());
 		writeH(0x00); // ?
-		writeH(0x00); // ?
+		writeH(_aug3);
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
index 9674b15..2cfda90 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
@@ -25,11 +25,22 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_quantity);
 		writeH(_item.getItem().getType2());
-		writeH(0x00); // ?
+        int _augorg = 0;
+        int _aug = 0;
+        int _aug2 = 0;
+        int _aug3 = 0;
+        if (_item.getAugmentationId() > 0) {
+            _augorg = _item.getAugmentationId();    
+            _aug = _augorg>>16;
+            _aug2 = _aug;
+            _aug3 = _augorg-(_aug<<16);
+        }
+        
+            writeH(_aug2);
 		
 		writeD(_item.getItem().getBodyPart());
 		writeH(_item.getEnchant());
 		writeH(0x00); // ?
-		writeH(0x00);
+		writeH(_aug3);
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
index 3810b76..e0a516a 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
@@ -35,11 +35,28 @@
 			writeD(temp.getItemId());
 			writeD(temp.getCount());
 			writeH(item.getType2());
+	           int _augorg = 0;
+	           int _aug = 0;
+	           int _aug2 = 0;
+	           int _aug3 = 0;
+	           if (temp.isAugmented()) {
+	               _augorg = temp.getAugmentation().getId();    
+	               _aug = _augorg>>16;
+	               _aug2 = _aug;
+	               _aug3 = _augorg-(_aug<<16);
+	           }
+	           if (temp.isAugmented())
+	               writeH(_aug2);
+	           if (temp.isAugmented() == false)
 			writeH(temp.getCustomType1());
 			writeD(item.getBodyPart());
 			writeH(temp.getEnchantLevel());
 			writeH(temp.getCustomType2());
-			writeH(temp.getAugmentation() == null ? 0x00 : temp.getAugmentation().getId());
+	           if (temp.isAugmented())
+	               writeH(_aug3);
+	               if (temp.isAugmented() == false)
+	            	   writeH(0x00);
+	            	   
 		}
 	}
 }
\ No newline at end of file
"
bcQSxpxT,l2jmega argu trade packets,tensador125,Java,Thursday 18th of January 2024 08:51:04 PM CDT,"### Eclipse Workspace Patch 1.0
#P L2jMega_gameserver2
diff --git java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java
index 4b25019..ae2240e 100644
--- java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java
+++ java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java
@@ -10,11 +10,13 @@
 	private int _enchant;
 	private int _count;
 	private int _price;
+	private int _augmentationId;
 	
 	public TradeItem(ItemInstance item, int count, int price)
 	{
 		_objectId = item.getObjectId();
 		_item = item.getItem();
+		_augmentationId = item.isAugmented() ? item.getAugmentation().getAugmentationId() : 0;
 		_enchant = item.getEnchantLevel();
 		_count = count;
 		_price = price;
@@ -38,6 +40,12 @@
 		_price = price;
 	}
 	
+	public int getAugmentationId() 
+	{	        
+	return _augmentationId;
+	}
+	
+	
 	public void setObjectId(int objectId)
 	{
 		_objectId = objectId;
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
index c2af70d..c22d514 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
@@ -51,11 +51,22 @@
 			writeD(item.getItem().getItemId());
 			writeD(availableCount);
 			writeH(item.getItem().getType2());
-			writeH(0x00);
+	           int _augorg = 0;
+	           int _aug = 0;
+	           int _aug2 = 0;
+	           int _aug3 = 0;
+	           if (item.getAugmentationId() > 0) 
+	           {
+	               _augorg = item.getAugmentationId();    
+	               _aug = _augorg>>16;
+	               _aug2 = _aug;
+	               _aug3 = _augorg-(_aug<<16);
+	           }                
+	               writeH(_aug2);
 			writeD(item.getItem().getBodyPart());
 			writeH(item.getEnchant());
 			writeH(0x00);
-			writeH(0x00);
+			writeH(_aug3);
 		}
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
index eb4d155..023fb3d 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
@@ -26,11 +26,22 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_item.getCount());
 		writeH(_item.getItem().getType2()); // item type2
-		writeH(0x00); // ?
+	       int _augorg = 0;
+	       int _aug = 0;
+	       int _aug2 = 0;
+	       int _aug3 = 0;
+	       if (_item.getAugmentationId() > 0) 
+	       {
+	           _augorg = _item.getAugmentationId();    
+	           _aug = _augorg>>16;
+	           _aug2 = _aug;
+	           _aug3 = _augorg-(_aug<<16);
+	       }                
+	           writeH(_aug2);
 		
 		writeD(_item.getItem().getBodyPart()); // rev 415 slot 0006-lr.ear 0008-neck 0030-lr.finger 0040-head 0080-?? 0100-l.hand 0200-gloves 0400-chest 0800-pants 1000-feet 2000-?? 4000-r.hand 8000-r.hand
 		writeH(_item.getEnchant()); // enchant level
-		writeH(0x00); // ?
+		writeH(_aug3);
 		writeH(0x00);
 	}
 }
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
index 19e583e..425c842 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
@@ -26,11 +26,22 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_item.getCount());
 		writeH(_item.getItem().getType2()); // item type2
-		writeH(0x00); // ?
+        int _augorg = 0;
+        int _aug = 0;
+        int _aug2 = 0;
+        int _aug3 = 0;
+        if (_item.getAugmentationId() > 0) {
+            _augorg = _item.getAugmentationId();    
+            _aug = _augorg>>16;
+            _aug2 = _aug;
+            _aug3 = _augorg-(_aug<<16);
+        }
+        
+            writeH(_aug2);
 		
 		writeD(_item.getItem().getBodyPart()); // slot
 		writeH(_item.getEnchant()); // enchant level
 		writeH(0x00); // ?
-		writeH(0x00);
+		writeH(_aug3);
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
index 20969d8..1b84a34 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
@@ -40,11 +40,27 @@
 			writeD(temp.getItemId());
 			writeD(temp.getCount());
 			writeH(item.getType2());
+	           int _augorg = 0;
+	           int _aug = 0;
+	           int _aug2 = 0;
+	           int _aug3 = 0;
+	           if (temp.isAugmented()) {
+	               _augorg = temp.getAugmentation().getAugmentationId();    
+	               _aug = _augorg>>16;
+	               _aug2 = _aug;
+	               _aug3 = _augorg-(_aug<<16);
+	           }
+	           if (temp.isAugmented())
+	               writeH(_aug2);
+	           if (temp.isAugmented() == false)
 			writeH(temp.getCustomType1());
 			writeD(item.getBodyPart());
 			writeH(temp.getEnchantLevel());
 			writeH(temp.getCustomType2());
-			writeH(0x00);
+	           if (temp.isAugmented())
+	               writeH(_aug3);
+	               if (temp.isAugmented() == false)
+	            	   writeH(0x00);
 		}
 	}
 }
\ No newline at end of file
"
JArpt7jJ,PHP index response,rezadfx,PHP,Thursday 18th of January 2024 07:29:58 PM CDT,"<?php

function generateRandomMaze() {
    $rows = 50;
    $cols = 50;

    $maze = array_fill(0, $rows, array_fill(0, $cols, 1));

    $start = [0, rand(1, $cols - 2)];
    $end = [$rows - 1, rand(1, $cols - 2)];

    generatePath($maze, $start[0], $start[1], $end[0], $end[1]);

    return $maze;
}

function generatePath(&$maze, $currentRow, $currentCol, $endRow, $endCol) {
    $directions = [[-1, 0], [1, 0], [0, -1], [0, 1]]; // Up, Down, Left, Right
    shuffle($directions);

    foreach ($directions as $dir) {
        $newRow = $currentRow + 2 * $dir[0];
        $newCol = $currentCol + 2 * $dir[1];

        if ($newRow >= 0 && $newRow < count($maze) && $newCol >= 0 && $newCol < count($maze[0]) && $maze[$newRow][$newCol] == 1) {
            $maze[$currentRow + $dir[0]][$currentCol + $dir[1]] = 0;
            $maze[$newRow][$newCol] = 0;

            generatePath($maze, $newRow, $newCol, $endRow, $endCol);
        }
    }
}

$requestPath = $_SERVER['REQUEST_URI'];
$responseCode = crc32($requestPath);

if ($requestPath === ""/"") {

    $randomMaze = generateRandomMaze();
    $response = [
        'requested_path' => $requestPath,
        'code' => $responseCode,
        'status_code' => 200,
        'message' => 'Random Maze',
        'maze' => $randomMaze
    ];
} else {
    $response = [
        'requested_path' => $requestPath,
        'code' => $responseCode,
        'status_code' => 404,
        'message' => 'Path Not Found Or Restricted'
    ];
}

header('Content-Type: application/json');

echo json_encode($response);

?>"
ZGw3pkvD,NGINX json config,rezadfx,JSON,Thursday 18th of January 2024 07:20:06 PM CDT,"server {
        listen 80;
        listen [::]:80;
        server_name REPLACE_IT_WITH_YOUR_HOST;
        if ($host = REPLACE_IT_WITH_YOUR_HOST) {
                return 301 https://$host$request_uri;
        }
        return 404;
}

server {
        listen       1001 proxy_protocol;
        listen       1002 http2 proxy_protocol;

        server_name REPLACE_IT_WITH_YOUR_HOST;

        root         /var/www/html;

        set_real_ip_from 127.0.0.1;

        location / {
                default_type application/json;
                set $random_response_code 1;
                rewrite ^ /index.php last;
        }
        location ~ \.php$ {
        fastcgi_pass   unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
        add_header     Strict-Transport-Security ""max-age=63072000"" always;
    }
}
"
PcEzsrm4,08.OnTimeForTheExam/OPTIMIZED,IvanITD,C#,Thursday 18th of January 2024 07:06:41 PM CDT,"int examHour = int.Parse(Console.ReadLine());
int examMinutes = int.Parse(Console.ReadLine());
int arrivalHour = int.Parse(Console.ReadLine());
int arrivalMinutes = int.Parse(Console.ReadLine());

int examToMinute = examHour * 60 + examMinutes;
int arrivalToMinutes = arrivalHour * 60 + arrivalMinutes;

int totalTime = Math.Abs(examToMinute - arrivalToMinutes);
int hours = totalTime / 60;
int minutes = totalTime % 60;

if (examToMinute < arrivalToMinutes)
{
    Console.WriteLine(""Late"");
    Console.WriteLine(hours == 0 ? $""{minutes} minutes after the start"" : $""{hours}:{minutes:D2} hours after the start"");
}
else if (examToMinute == arrivalToMinutes)
{
    Console.WriteLine(""On time"");
}
else if (totalTime <= 30)
{
    Console.WriteLine(""On time"");
    Console.WriteLine($""{minutes} minutes before the start"");
}
else
{
    Console.WriteLine(""Early"");
    Console.WriteLine(hours == 0 ? $""{minutes} minutes before the start"" : $""{hours}:{minutes:D2} hours before the start"");
}
"
LrfnS3vJ,08.OnTimeForTheExam,IvanITD,C#,Thursday 18th of January 2024 06:52:13 PM CDT,"int examHour = int.Parse(Console.ReadLine());
int examMinutes = int.Parse(Console.ReadLine());
int arivalHour = int.Parse(Console.ReadLine());
int arivalMinutes = int.Parse(Console.ReadLine());


int examToMinute = examHour * 60;
int arivalToMinutes = arivalHour * 60;

int totalExamMinuteTime = examToMinute + examMinutes;
int totalArivalMinuteTime = arivalToMinutes + arivalMinutes;

int totalTime = Math.Abs(totalExamMinuteTime - totalArivalMinuteTime);

int hour = totalTime / 60;
int minutes = totalTime % 60;

if (totalExamMinuteTime < totalArivalMinuteTime) // If the student is late
{
    Console.WriteLine(""Late"");
    if (hour == 0)
    {
        Console.WriteLine($""{minutes} minutes after the start"");
    }
    else
    {
        Console.WriteLine($""{hour}:{minutes:D2} hours after the start"");
    }
}
else if (totalExamMinuteTime == totalArivalMinuteTime) // If the student is on time
{
    Console.WriteLine(""On time"");
    
}
else if (totalTime <= 30)
{
    Console.WriteLine(""On time"");
    Console.WriteLine($""{minutes} minutes before the start"");
}
else if (totalExamMinuteTime > totalArivalMinuteTime || totalTime > 30) // If the student is early
{
    Console.WriteLine(""Early"");
    if (hour == 0)
    {
        Console.WriteLine($""{minutes} minutes before the start"");
    }
    else
    {
        Console.WriteLine($""{hour}:{minutes:D2} hours before the start"");
    }
}



"
p4AB6ki2,cc_harvest_turtle,jkw010,Lua,Thursday 18th of January 2024 06:45:53 PM CDT,"
local turns = {
	right = 0,
	left = 1
}

-- place turtle in corner of farm such that its first turn should be right
local cur_dir = turns.right

function change_dir()
	if cur_dir == turns.right then
		cur_dir = turns.left
	else
		cur_dir = turns.right
	end
end

-- requires item in slot that can't place down
function harvest()
	print(""harvesting..."")
	turtle.placeDown()
end

function turn()
	if cur_dir == turns.right then
		turtle.turnRight()
		if turtle.forward() then
			change_dir()
		end
		turtle.turnRight()
	else
		turtle.turnLeft()
		if turtle.forward() then
			change_dir()
		end
		turtle.turnLeft()
	end
end

function isBlockInFront()
    return turtle.detect()
end

function run()
    while true do

			while not isBlockInFront() do
				turtle.forward()
				harvest()
			end

			turn()
			harvest()

    end
end

-- Start the traversal
run()
"
HXCjAS2i,2024-01-18_stats.json,rdp_snitch,JSON,Thursday 18th of January 2024 06:18:06 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 162,
    ""117.145.27.42"": 18,
    ""208.53.61.115"": 6,
    ""185.106.176.8"": 24,
    ""150.223.46.21"": 3,
    ""203.56.40.167"": 21,
    ""106.58.166.180"": 9,
    ""74.105.22.131"": 48,
    ""118.193.44.118"": 3,
    ""36.111.174.56"": 27,
    ""124.67.254.109"": 21,
    ""43.134.33.208"": 9,
    ""216.202.197.116"": 48,
    ""106.75.20.182"": 6,
    ""106.75.123.252"": 12,
    ""194.165.17.21"": 60,
    ""150.223.62.190"": 6,
    ""104.234.53.203"": 3,
    ""42.51.13.226"": 9,
    ""110.40.34.231"": 39,
    ""36.91.222.100"": 6,
    ""172.81.216.105"": 3,
    ""111.161.41.132"": 15,
    ""218.90.120.19"": 12,
    ""222.219.129.74"": 6,
    ""43.243.136.202"": 48,
    ""213.97.250.153"": 45,
    ""106.58.217.61"": 9,
    ""124.67.115.210"": 9,
    ""106.58.217.149"": 9,
    ""14.18.41.26"": 6,
    ""103.245.195.202"": 12,
    ""113.108.8.125"": 12,
    ""95.130.227.198"": 9,
    ""222.219.240.13"": 18,
    ""45.87.212.182"": 6,
    ""113.31.157.54"": 6,
    ""115.236.75.10"": 21,
    ""80.235.52.92"": 9,
    ""140.246.149.76"": 3,
    ""117.33.174.14"": 15,
    ""122.227.146.74"": 9,
    ""175.120.134.80"": 12,
    ""106.58.215.167"": 6,
    ""203.57.39.224"": 9,
    ""58.218.204.183"": 18,
    ""62.6.252.50"": 3,
    ""194.165.16.11"": 6,
    ""106.58.164.95"": 9,
    ""106.75.6.46"": 9,
    ""203.57.46.218"": 3,
    ""52.80.19.192"": 9,
    ""185.196.220.41"": 9,
    ""125.88.211.59"": 3,
    ""193.142.146.227"": 9,
    ""183.134.89.41"": 3,
    ""106.58.221.13"": 3,
    ""150.223.79.15"": 9,
    ""45.227.254.55"": 6,
    ""58.247.112.34"": 9,
    ""150.223.66.55"": 12,
    ""120.48.64.252"": 6,
    ""205.210.31.162"": 9,
    ""62.204.41.199"": 9,
    ""106.75.245.66"": 3,
    ""167.94.138.125"": 3,
    ""103.184.47.83"": 3,
    ""175.120.134.93"": 12,
    ""119.96.169.74"": 12,
    ""113.31.31.153"": 3,
    ""120.202.49.41"": 6,
    ""106.58.165.88"": 6,
    ""61.171.113.104"": 6,
    ""87.251.75.145"": 9,
    ""1.82.238.130"": 6,
    ""150.223.35.239"": 9,
    ""106.58.178.111"": 9,
    ""1.117.40.238"": 9,
    ""175.4.26.179"": 12,
    ""27.128.239.46"": 9,
    ""109.69.7.157"": 12,
    ""150.223.13.195"": 6,
    ""203.56.4.242"": 3,
    ""201.80.184.90"": 3,
    ""140.246.215.173"": 15,
    ""103.215.81.133"": 15,
    ""185.170.144.3"": 6,
    ""125.230.232.229"": 9,
    ""103.240.84.186"": 12,
    ""106.225.199.92"": 12,
    ""150.223.76.57"": 9,
    ""43.133.56.30"": 9,
    ""42.193.192.91"": 6,
    ""195.97.20.99"": 3,
    ""106.58.210.135"": 9,
    ""198.235.24.44"": 9,
    ""121.5.74.35"": 18,
    ""167.248.133.39"": 3,
    ""81.69.247.8"": 6,
    ""45.141.26.152"": 6,
    ""150.223.32.106"": 6,
    ""194.165.16.73"": 12,
    ""50.116.32.84"": 12,
    ""81.70.142.203"": 3,
    ""142.93.95.8"": 3,
    ""134.175.53.186"": 3,
    ""106.58.184.58"": 9,
    ""162.142.125.212"": 3,
    ""194.165.16.10"": 6,
    ""182.61.55.68"": 3,
    ""196.190.117.7"": 3,
    ""139.59.185.252"": 3,
    ""43.134.83.223"": 3,
    ""209.52.157.13"": 6,
    ""152.32.245.170"": 3,
    ""205.210.31.88"": 9,
    ""42.51.39.209"": 3,
    ""101.32.116.25"": 3,
    ""106.58.219.212"": 3,
    ""49.233.212.94"": 3,
    ""106.55.54.44"": 3,
    ""94.232.45.92"": 9,
    ""106.75.254.159"": 3,
    ""104.234.53.221"": 3,
    ""123.56.20.194"": 6,
    ""106.225.199.24"": 3,
    ""45.141.26.228"": 3,
    ""87.251.75.64"": 3,
    ""79.129.23.188"": 3,
    ""150.223.56.176"": 3,
    ""106.58.212.195"": 3,
    ""106.58.212.201"": 3,
    ""103.44.237.12"": 3,
    ""43.134.0.225"": 9,
    ""106.58.178.2"": 3,
    ""27.8.44.19"": 12,
    ""205.210.31.197"": 9,
    ""45.141.26.223"": 3,
    ""61.171.106.140"": 6,
    ""222.93.104.67"": 3,
    ""45.141.26.68"": 3
  },
  ""asn"": {
    ""AS51167"": 162,
    ""AS9808"": 24,
    ""AS17341"": 6,
    ""AS42960"": 24,
    ""AS58519"": 144,
    ""AS4134"": 204,
    ""AS701"": 48,
    ""AS135377"": 6,
    ""AS4837"": 72,
    ""AS132203"": 33,
    ""AS3356"": 48,
    ""AS23724"": 27,
    ""AS48721"": 84,
    ""AS206092"": 6,
    ""AS56005"": 12,
    ""AS38283"": 39,
    ""AS7713"": 6,
    ""AS45090"": 54,
    ""AS4808"": 48,
    ""AS3352"": 45,
    ""AS9541"": 12,
    ""AS35682"": 9,
    ""AS9009"": 6,
    ""AS17621"": 21,
    ""AS3249"": 9,
    ""AS134768"": 21,
    ""AS9318"": 24,
    ""AS2856"": 3,
    ""AS55960"": 9,
    ""AS208046"": 18,
    ""AS58466"": 3,
    ""AS58461"": 3,
    ""AS267784"": 6,
    ""AS38365"": 9,
    ""AS396982"": 36,
    ""AS59425"": 9,
    ""AS398324"": 9,
    ""AS146817"": 3,
    ""AS58563"": 12,
    ""AS4812"": 12,
    ""AS208091"": 12,
    ""AS63838"": 12,
    ""AS21183"": 12,
    ""AS28573"": 3,
    ""AS55933"": 15,
    ""AS197414"": 6,
    ""AS3462"": 9,
    ""AS134238"": 15,
    ""AS3329"": 3,
    ""AS142299"": 15,
    ""AS63949"": 12,
    ""AS14061"": 6,
    ""AS24757"": 3,
    ""AS852"": 6,
    ""AS212482"": 9,
    ""AS37963"": 6,
    ""AS6799"": 3,
    ""AS4816"": 3
  },
  ""isp"": {
    ""Contabo GmbH"": 162,
    ""China Mobile communications corporation"": 24,
    ""C7 Data Centers"": 6,
    ""VH-GLOBAL"": 24,
    ""Cloud Computing Corporation"": 144,
    ""Chinanet"": 201,
    ""Verizon Business"": 48,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""CNC Group CHINA169 Neimeng Province Network"": 30,
    ""Shenzhen Tencent Computer Systems Company Limited"": 39,
    ""Level 3 Communications"": 48,
    ""UCLOUD"": 39,
    ""Flyservers S.A."": 90,
    ""Velcom"": 6,
    ""China Unicom Henan Province network"": 12,
    ""CHINANET SiChuan Telecom Internet Data Center"": 39,
    ""PT Telekomunikasi Indonesia"": 6,
    ""China Unicom Tianjin Province Network"": 15,
    ""China Unicom Beijing Province Network"": 48,
    ""Telefonica de Espana SAU"": 45,
    ""CHINANET Guangdong province network"": 6,
    ""Cyber Internet Services (Private) Limited"": 12,
    ""Best Internet Solution XK"": 9,
    ""M247 Europe SRL"": 6,
    ""Telia Eesti AS"": 9,
    ""CHINANET SHAANXI province Cloud Base network"": 21,
    ""SK Broadband Co Ltd"": 24,
    ""British Telecommunications PLC"": 3,
    ""Beijing Guanghuan Xinwang Digital"": 9,
    ""ColocationX Ltd."": 18,
    ""China Telecom"": 3,
    ""CNC Group CHINA169 Shanghai Province Network"": 9,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 9,
    ""Google LLC"": 36,
    ""Horizon LLC"": 9,
    ""Censys, Inc."": 9,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""CHINANET Hubei province network"": 12,
    ""CNC Group CHINA169 Tianjin Province network"": 3,
    ""China Telecom (Group)"": 15,
    ""Xhost Internet Solutions LP"": 27,
    ""China Internet Network Information Center"": 33,
    ""Hengyang"": 12,
    ""Vodafone Network"": 12,
    ""Claro NXT Telecomunicacoes Ltda"": 3,
    ""Cloudie Limited"": 15,
    ""Chunghwa Telecom Co., Ltd."": 9,
    ""China Unicom CHINA169 Network"": 12,
    ""CHINANET Jiangx province IDC network"": 15,
    ""Aceville Pte.ltd"": 12,
    ""HOL"": 3,
    ""CLOUDFOREST CO., LTD"": 15,
    ""Akamai Technologies, Inc."": 12,
    ""EuroNet Internet"": 3,
    ""DigitalOcean, LLC"": 3,
    ""Ethiotelecom"": 3,
    ""DIGITALOCEAN"": 3,
    ""TELUS Communications Inc"": 6,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""OTEnet"": 3,
    ""China Unicom Chongqing Province Network"": 12
  },
  ""org"": {
    ""Contabo GmbH"": 162,
    ""China Mobile"": 24,
    ""VegaDigital Solutions"": 6,
    ""VH Global Limited"": 24,
    ""Chinanet SD"": 81,
    ""Chinanet FJ"": 36,
    ""Chinanet YN"": 114,
    ""Verizon Business"": 48,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet ZJ"": 27,
    ""Unknown"": 120,
    ""Tencent Cloud Computing"": 21,
    ""Fort Wayne Internet, LLC"": 48,
    ""Shanghai UCloud Information Technology Company Limited"": 39,
    ""Flyservers S.A"": 84,
    ""ONTAR-40 (Velcom INC)"": 6,
    ""Henan Telcom Union Technology Co., LTD"": 12,
    ""Chengdu Giant Times Technology Co., Ltd"": 39,
    ""Telekomunikasi Indonesia"": 6,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 12,
    ""Chinanet JS"": 33,
    ""Beijing yunchuang communication Technology Co."": 48,
    ""RIMA (Red IP Multi Acceso)"": 45,
    ""Chinanet GD"": 18,
    ""Cyber Internet Services Pakistan"": 12,
    ""Best Internet Solution XK"": 9,
    ""M247 LTD"": 6,
    ""Hangzhou xiaoshan public transportation co., LTD"": 21,
    ""Chinanet SN"": 21,
    ""Ningbo chaoji mamawangluojishu ltd"": 9,
    ""SK Broadband Co Ltd"": 24,
    ""Btnet"": 3,
    ""AWS EC2 (cn-north-1)"": 9,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""UAB Host Baltic"": 6,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Horizon LLC"": 9,
    ""Censys, Inc"": 3,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Chinanet HB"": 12,
    ""BeiJing QianJingShiJi Co., Ltd."": 3,
    ""Chinanet SH"": 12,
    ""Xhost Internet Solutions"": 12,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 39,
    ""Chinanet HN"": 12,
    ""Chinanet HE"": 9,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 3,
    ""Netads Online Limited"": 15,
    ""Xhostis"": 6,
    ""Chunghwa Telecom Co. Ltd."": 9,
    ""Chinanet JX"": 15,
    ""Koumakis Emm. S.A."": 3,
    ""Censys, Inc."": 3,
    ""Cloudforest CO., LTD"": 15,
    ""Linode"": 12,
    ""Online Breedband B.V."": 3,
    ""DigitalOcean, LLC"": 6,
    ""Censys Inc"": 3,
    ""Colliers Macaulay Nicolls Inc"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Dmitriy Panchenko"": 9,
    ""Aliyun Computing Co., LTD"": 6,
    ""OTEnet S.A."": 3,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 3
  },
  ""regionName"": {
    ""England"": 168,
    ""Guangdong"": 81,
    ""Utah"": 6,
    ""Central and Western District"": 42,
    ""Shandong"": 81,
    ""Fujian"": 45,
    ""Yunnan"": 114,
    ""New Jersey"": 48,
    ""Zhejiang"": 60,
    ""Inner Mongolia"": 21,
    ""North West"": 30,
    ""Indiana"": 48,
    ""Beijing"": 141,
    ""Kaunas"": 84,
    ""New York"": 6,
    ""Henan"": 12,
    ""Sichuan"": 39,
    ""Jakarta"": 6,
    ""Shanghai"": 24,
    ""Tianjin"": 18,
    ""Jiangsu"": 33,
    ""Madrid"": 45,
    ""Sindh"": 12,
    ""Tashkent"": 9,
    ""Hesse"": 6,
    ""Harjumaa"": 9,
    ""Shanxi"": 15,
    ""Gyeongsangbuk-do"": 24,
    ""Virginia"": 9,
    ""North Holland"": 27,
    ""Vilnius"": 6,
    ""California"": 39,
    ""Moscow"": 9,
    ""Michigan"": 9,
    ""Hubei"": 15,
    ""Shaanxi"": 6,
    ""Hunan"": 12,
    ""Hebei"": 9,
    ""Tirana"": 12,
    ""Minas Gerais"": 3,
    ""Taichung City"": 9,
    ""Jiangxi"": 15,
    ""Attica"": 3,
    ""Bangkok"": 18,
    ""Georgia"": 12,
    ""Addis Ababa"": 3,
    ""Ontario"": 6,
    ""Central Singapore"": 3,
    ""Perm Krai"": 9,
    ""Thessaly"": 3,
    ""Chongqing"": 12
  },
  ""country"": {
    ""United Kingdom"": 168,
    ""China"": 753,
    ""United States"": 177,
    ""Hong Kong"": 42,
    ""Singapore"": 33,
    ""Lithuania"": 90,
    ""Indonesia"": 6,
    ""Spain"": 45,
    ""Pakistan"": 12,
    ""Uzbekistan"": 9,
    ""Germany"": 6,
    ""Estonia"": 9,
    ""South Korea"": 24,
    ""The Netherlands"": 27,
    ""Russia"": 18,
    ""Albania"": 12,
    ""Brazil"": 3,
    ""Taiwan"": 9,
    ""Greece"": 6,
    ""Thailand"": 18,
    ""Ethiopia"": 3,
    ""Canada"": 6
  },
  ""account"": {
    ""hello"": 195,
    ""142.93.8.59"": 1104,
    ""(empty)"": 21,
    ""Test"": 48,
    ""Domain"": 33,
    ""lFznKxGEz"": 3,
    ""gVpEKd"": 3,
    ""sjbBwa"": 3,
    ""Administr"": 18,
    ""user"": 3,
    ""aJnzGFiaa"": 3,
    ""CUOjAv"": 3,
    ""jBCDBw"": 3,
    ""5r0knkai"": 12,
    ""beio"": 3,
    ""Administrator"": 3,
    ""HhNsQOAfO"": 3,
    ""tqDlHo"": 3,
    ""CaTHKy"": 3,
    ""ZomdsQfGQ"": 3,
    ""BTqWBB"": 3,
    ""ABsDLA"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1476
  },
  ""client_build"": {
    ""Unknown"": 1476
  },
  ""client_name"": {
    ""Unknown"": 1476
  },
  ""ip_type"": {
    ""hosting"": 435,
    ""mobile"": 51,
    ""Unknown"": 909,
    ""proxy"": 69,
    ""hosting & proxy"": 12
  }
}"
MgbNV0sU,2024-01-18_stats.json,rdp_snitch,JSON,Thursday 18th of January 2024 06:16:10 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 108,
    ""117.145.27.42"": 12,
    ""208.53.61.115"": 4,
    ""185.106.176.8"": 16,
    ""150.223.46.21"": 2,
    ""203.56.40.167"": 14,
    ""106.58.166.180"": 6,
    ""74.105.22.131"": 32,
    ""118.193.44.118"": 2,
    ""36.111.174.56"": 18,
    ""124.67.254.109"": 14,
    ""43.134.33.208"": 6,
    ""216.202.197.116"": 32,
    ""106.75.20.182"": 4,
    ""106.75.123.252"": 8,
    ""194.165.17.21"": 40,
    ""150.223.62.190"": 4,
    ""104.234.53.203"": 2,
    ""42.51.13.226"": 6,
    ""110.40.34.231"": 26,
    ""36.91.222.100"": 4,
    ""172.81.216.105"": 2,
    ""111.161.41.132"": 10,
    ""218.90.120.19"": 8,
    ""222.219.129.74"": 4,
    ""43.243.136.202"": 32,
    ""213.97.250.153"": 30,
    ""106.58.217.61"": 6,
    ""124.67.115.210"": 6,
    ""106.58.217.149"": 6,
    ""14.18.41.26"": 4,
    ""103.245.195.202"": 8,
    ""113.108.8.125"": 8,
    ""95.130.227.198"": 6,
    ""222.219.240.13"": 12,
    ""45.87.212.182"": 4,
    ""113.31.157.54"": 4,
    ""115.236.75.10"": 14,
    ""80.235.52.92"": 6,
    ""140.246.149.76"": 2,
    ""117.33.174.14"": 10,
    ""122.227.146.74"": 6,
    ""175.120.134.80"": 8,
    ""106.58.215.167"": 4,
    ""203.57.39.224"": 6,
    ""58.218.204.183"": 12,
    ""62.6.252.50"": 2,
    ""194.165.16.11"": 4,
    ""106.58.164.95"": 6,
    ""106.75.6.46"": 6,
    ""203.57.46.218"": 2,
    ""52.80.19.192"": 6,
    ""185.196.220.41"": 6,
    ""125.88.211.59"": 2,
    ""193.142.146.227"": 6,
    ""183.134.89.41"": 2,
    ""106.58.221.13"": 2,
    ""150.223.79.15"": 6,
    ""45.227.254.55"": 4,
    ""58.247.112.34"": 6,
    ""150.223.66.55"": 8,
    ""120.48.64.252"": 4,
    ""205.210.31.162"": 6,
    ""62.204.41.199"": 6,
    ""106.75.245.66"": 2,
    ""167.94.138.125"": 2,
    ""103.184.47.83"": 2,
    ""175.120.134.93"": 8,
    ""119.96.169.74"": 8,
    ""113.31.31.153"": 2,
    ""120.202.49.41"": 4,
    ""106.58.165.88"": 4,
    ""61.171.113.104"": 4,
    ""87.251.75.145"": 6,
    ""1.82.238.130"": 4,
    ""150.223.35.239"": 6,
    ""106.58.178.111"": 6,
    ""1.117.40.238"": 6,
    ""175.4.26.179"": 8,
    ""27.128.239.46"": 6,
    ""109.69.7.157"": 8,
    ""150.223.13.195"": 4,
    ""203.56.4.242"": 2,
    ""201.80.184.90"": 2,
    ""140.246.215.173"": 10,
    ""103.215.81.133"": 10,
    ""185.170.144.3"": 4,
    ""125.230.232.229"": 6,
    ""103.240.84.186"": 8,
    ""106.225.199.92"": 8,
    ""150.223.76.57"": 6,
    ""43.133.56.30"": 6,
    ""42.193.192.91"": 4,
    ""195.97.20.99"": 2,
    ""106.58.210.135"": 6,
    ""198.235.24.44"": 6,
    ""121.5.74.35"": 12,
    ""167.248.133.39"": 2,
    ""81.69.247.8"": 4,
    ""45.141.26.152"": 4,
    ""150.223.32.106"": 4,
    ""194.165.16.73"": 8,
    ""50.116.32.84"": 8,
    ""81.70.142.203"": 2,
    ""142.93.95.8"": 2,
    ""134.175.53.186"": 2,
    ""106.58.184.58"": 6,
    ""162.142.125.212"": 2,
    ""194.165.16.10"": 4,
    ""182.61.55.68"": 2,
    ""196.190.117.7"": 2,
    ""139.59.185.252"": 2,
    ""43.134.83.223"": 2,
    ""209.52.157.13"": 4,
    ""152.32.245.170"": 2,
    ""205.210.31.88"": 6,
    ""42.51.39.209"": 2,
    ""101.32.116.25"": 2,
    ""106.58.219.212"": 2,
    ""49.233.212.94"": 2,
    ""106.55.54.44"": 2,
    ""94.232.45.92"": 6,
    ""106.75.254.159"": 2,
    ""104.234.53.221"": 2,
    ""123.56.20.194"": 4,
    ""106.225.199.24"": 2,
    ""45.141.26.228"": 2,
    ""87.251.75.64"": 2,
    ""79.129.23.188"": 2,
    ""150.223.56.176"": 2,
    ""106.58.212.195"": 2,
    ""106.58.212.201"": 2,
    ""103.44.237.12"": 2,
    ""43.134.0.225"": 6,
    ""106.58.178.2"": 2,
    ""27.8.44.19"": 8,
    ""205.210.31.197"": 6,
    ""45.141.26.223"": 2,
    ""61.171.106.140"": 4,
    ""222.93.104.67"": 2,
    ""45.141.26.68"": 2
  },
  ""asn"": {
    ""AS51167"": 108,
    ""AS9808"": 16,
    ""AS17341"": 4,
    ""AS42960"": 16,
    ""AS58519"": 96,
    ""AS4134"": 136,
    ""AS701"": 32,
    ""AS135377"": 4,
    ""AS4837"": 48,
    ""AS132203"": 22,
    ""AS3356"": 32,
    ""AS23724"": 18,
    ""AS48721"": 56,
    ""AS206092"": 4,
    ""AS56005"": 8,
    ""AS38283"": 26,
    ""AS7713"": 4,
    ""AS45090"": 36,
    ""AS4808"": 32,
    ""AS3352"": 30,
    ""AS9541"": 8,
    ""AS35682"": 6,
    ""AS9009"": 4,
    ""AS17621"": 14,
    ""AS3249"": 6,
    ""AS134768"": 14,
    ""AS9318"": 16,
    ""AS2856"": 2,
    ""AS55960"": 6,
    ""AS208046"": 12,
    ""AS58466"": 2,
    ""AS58461"": 2,
    ""AS267784"": 4,
    ""AS38365"": 6,
    ""AS396982"": 24,
    ""AS59425"": 6,
    ""AS398324"": 6,
    ""AS146817"": 2,
    ""AS58563"": 8,
    ""AS4812"": 8,
    ""AS208091"": 8,
    ""AS63838"": 8,
    ""AS21183"": 8,
    ""AS28573"": 2,
    ""AS55933"": 10,
    ""AS197414"": 4,
    ""AS3462"": 6,
    ""AS134238"": 10,
    ""AS3329"": 2,
    ""AS142299"": 10,
    ""AS63949"": 8,
    ""AS14061"": 4,
    ""AS24757"": 2,
    ""AS852"": 4,
    ""AS212482"": 6,
    ""AS37963"": 4,
    ""AS6799"": 2,
    ""AS4816"": 2
  },
  ""isp"": {
    ""Contabo GmbH"": 108,
    ""China Mobile communications corporation"": 16,
    ""C7 Data Centers"": 4,
    ""VH-GLOBAL"": 16,
    ""Cloud Computing Corporation"": 96,
    ""Chinanet"": 134,
    ""Verizon Business"": 32,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""CNC Group CHINA169 Neimeng Province Network"": 20,
    ""Shenzhen Tencent Computer Systems Company Limited"": 26,
    ""Level 3 Communications"": 32,
    ""UCLOUD"": 26,
    ""Flyservers S.A."": 60,
    ""Velcom"": 4,
    ""China Unicom Henan Province network"": 8,
    ""CHINANET SiChuan Telecom Internet Data Center"": 26,
    ""PT Telekomunikasi Indonesia"": 4,
    ""China Unicom Tianjin Province Network"": 10,
    ""China Unicom Beijing Province Network"": 32,
    ""Telefonica de Espana SAU"": 30,
    ""CHINANET Guangdong province network"": 4,
    ""Cyber Internet Services (Private) Limited"": 8,
    ""Best Internet Solution XK"": 6,
    ""M247 Europe SRL"": 4,
    ""Telia Eesti AS"": 6,
    ""CHINANET SHAANXI province Cloud Base network"": 14,
    ""SK Broadband Co Ltd"": 16,
    ""British Telecommunications PLC"": 2,
    ""Beijing Guanghuan Xinwang Digital"": 6,
    ""ColocationX Ltd."": 12,
    ""China Telecom"": 2,
    ""CNC Group CHINA169 Shanghai Province Network"": 6,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Google LLC"": 24,
    ""Horizon LLC"": 6,
    ""Censys, Inc."": 6,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""CHINANET Hubei province network"": 8,
    ""CNC Group CHINA169 Tianjin Province network"": 2,
    ""China Telecom (Group)"": 10,
    ""Xhost Internet Solutions LP"": 18,
    ""China Internet Network Information Center"": 22,
    ""Hengyang"": 8,
    ""Vodafone Network"": 8,
    ""Claro NXT Telecomunicacoes Ltda"": 2,
    ""Cloudie Limited"": 10,
    ""Chunghwa Telecom Co., Ltd."": 6,
    ""China Unicom CHINA169 Network"": 8,
    ""CHINANET Jiangx province IDC network"": 10,
    ""Aceville Pte.ltd"": 8,
    ""HOL"": 2,
    ""CLOUDFOREST CO., LTD"": 10,
    ""Akamai Technologies, Inc."": 8,
    ""EuroNet Internet"": 2,
    ""DigitalOcean, LLC"": 2,
    ""Ethiotelecom"": 2,
    ""DIGITALOCEAN"": 2,
    ""TELUS Communications Inc"": 4,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""OTEnet"": 2,
    ""China Unicom Chongqing Province Network"": 8
  },
  ""org"": {
    ""Contabo GmbH"": 108,
    ""China Mobile"": 16,
    ""VegaDigital Solutions"": 4,
    ""VH Global Limited"": 16,
    ""Chinanet SD"": 54,
    ""Chinanet FJ"": 24,
    ""Chinanet YN"": 76,
    ""Verizon Business"": 32,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet ZJ"": 18,
    ""Unknown"": 80,
    ""Tencent Cloud Computing"": 14,
    ""Fort Wayne Internet, LLC"": 32,
    ""Shanghai UCloud Information Technology Company Limited"": 26,
    ""Flyservers S.A"": 56,
    ""ONTAR-40 (Velcom INC)"": 4,
    ""Henan Telcom Union Technology Co., LTD"": 8,
    ""Chengdu Giant Times Technology Co., Ltd"": 26,
    ""Telekomunikasi Indonesia"": 4,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 8,
    ""Chinanet JS"": 22,
    ""Beijing yunchuang communication Technology Co."": 32,
    ""RIMA (Red IP Multi Acceso)"": 30,
    ""Chinanet GD"": 12,
    ""Cyber Internet Services Pakistan"": 8,
    ""Best Internet Solution XK"": 6,
    ""M247 LTD"": 4,
    ""Hangzhou xiaoshan public transportation co., LTD"": 14,
    ""Chinanet SN"": 14,
    ""Ningbo chaoji mamawangluojishu ltd"": 6,
    ""SK Broadband Co Ltd"": 16,
    ""Btnet"": 2,
    ""AWS EC2 (cn-north-1)"": 6,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""UAB Host Baltic"": 4,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Horizon LLC"": 6,
    ""Censys, Inc"": 2,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Chinanet HB"": 8,
    ""BeiJing QianJingShiJi Co., Ltd."": 2,
    ""Chinanet SH"": 8,
    ""Xhost Internet Solutions"": 8,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 26,
    ""Chinanet HN"": 8,
    ""Chinanet HE"": 6,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 2,
    ""Netads Online Limited"": 10,
    ""Xhostis"": 4,
    ""Chunghwa Telecom Co. Ltd."": 6,
    ""Chinanet JX"": 10,
    ""Koumakis Emm. S.A."": 2,
    ""Censys, Inc."": 2,
    ""Cloudforest CO., LTD"": 10,
    ""Linode"": 8,
    ""Online Breedband B.V."": 2,
    ""DigitalOcean, LLC"": 4,
    ""Censys Inc"": 2,
    ""Colliers Macaulay Nicolls Inc"": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Dmitriy Panchenko"": 6,
    ""Aliyun Computing Co., LTD"": 4,
    ""OTEnet S.A."": 2,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 2
  },
  ""regionName"": {
    ""England"": 112,
    ""Guangdong"": 54,
    ""Utah"": 4,
    ""Central and Western District"": 28,
    ""Shandong"": 54,
    ""Fujian"": 30,
    ""Yunnan"": 76,
    ""New Jersey"": 32,
    ""Zhejiang"": 40,
    ""Inner Mongolia"": 14,
    ""North West"": 20,
    ""Indiana"": 32,
    ""Beijing"": 94,
    ""Kaunas"": 56,
    ""New York"": 4,
    ""Henan"": 8,
    ""Sichuan"": 26,
    ""Jakarta"": 4,
    ""Shanghai"": 16,
    ""Tianjin"": 12,
    ""Jiangsu"": 22,
    ""Madrid"": 30,
    ""Sindh"": 8,
    ""Tashkent"": 6,
    ""Hesse"": 4,
    ""Harjumaa"": 6,
    ""Shanxi"": 10,
    ""Gyeongsangbuk-do"": 16,
    ""Virginia"": 6,
    ""North Holland"": 18,
    ""Vilnius"": 4,
    ""California"": 26,
    ""Moscow"": 6,
    ""Michigan"": 6,
    ""Hubei"": 10,
    ""Shaanxi"": 4,
    ""Hunan"": 8,
    ""Hebei"": 6,
    ""Tirana"": 8,
    ""Minas Gerais"": 2,
    ""Taichung City"": 6,
    ""Jiangxi"": 10,
    ""Attica"": 2,
    ""Bangkok"": 12,
    ""Georgia"": 8,
    ""Addis Ababa"": 2,
    ""Ontario"": 4,
    ""Central Singapore"": 2,
    ""Perm Krai"": 6,
    ""Thessaly"": 2,
    ""Chongqing"": 8
  },
  ""country"": {
    ""United Kingdom"": 112,
    ""China"": 502,
    ""United States"": 118,
    ""Hong Kong"": 28,
    ""Singapore"": 22,
    ""Lithuania"": 60,
    ""Indonesia"": 4,
    ""Spain"": 30,
    ""Pakistan"": 8,
    ""Uzbekistan"": 6,
    ""Germany"": 4,
    ""Estonia"": 6,
    ""South Korea"": 16,
    ""The Netherlands"": 18,
    ""Russia"": 12,
    ""Albania"": 8,
    ""Brazil"": 2,
    ""Taiwan"": 6,
    ""Greece"": 4,
    ""Thailand"": 12,
    ""Ethiopia"": 2,
    ""Canada"": 4
  },
  ""account"": {
    ""hello"": 130,
    ""142.93.8.59"": 736,
    ""(empty)"": 14,
    ""Test"": 32,
    ""Domain"": 22,
    ""lFznKxGEz"": 2,
    ""gVpEKd"": 2,
    ""sjbBwa"": 2,
    ""Administr"": 12,
    ""user"": 2,
    ""aJnzGFiaa"": 2,
    ""CUOjAv"": 2,
    ""jBCDBw"": 2,
    ""5r0knkai"": 8,
    ""beio"": 2,
    ""Administrator"": 2,
    ""HhNsQOAfO"": 2,
    ""tqDlHo"": 2,
    ""CaTHKy"": 2,
    ""ZomdsQfGQ"": 2,
    ""BTqWBB"": 2,
    ""ABsDLA"": 2
  },
  ""keyboard"": {
    ""Unknown"": 984
  },
  ""client_build"": {
    ""Unknown"": 984
  },
  ""client_name"": {
    ""Unknown"": 984
  },
  ""ip_type"": {
    ""hosting"": 290,
    ""mobile"": 34,
    ""Unknown"": 606,
    ""proxy"": 46,
    ""hosting & proxy"": 8
  }
}"
CysNpeMZ,2024-01-18_stats.json,rdp_snitch,JSON,Thursday 18th of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 54,
    ""117.145.27.42"": 6,
    ""208.53.61.115"": 2,
    ""185.106.176.8"": 8,
    ""150.223.46.21"": 1,
    ""203.56.40.167"": 7,
    ""106.58.166.180"": 3,
    ""74.105.22.131"": 16,
    ""118.193.44.118"": 1,
    ""36.111.174.56"": 9,
    ""124.67.254.109"": 7,
    ""43.134.33.208"": 3,
    ""216.202.197.116"": 16,
    ""106.75.20.182"": 2,
    ""106.75.123.252"": 4,
    ""194.165.17.21"": 20,
    ""150.223.62.190"": 2,
    ""104.234.53.203"": 1,
    ""42.51.13.226"": 3,
    ""110.40.34.231"": 13,
    ""36.91.222.100"": 2,
    ""172.81.216.105"": 1,
    ""111.161.41.132"": 5,
    ""218.90.120.19"": 4,
    ""222.219.129.74"": 2,
    ""43.243.136.202"": 16,
    ""213.97.250.153"": 15,
    ""106.58.217.61"": 3,
    ""124.67.115.210"": 3,
    ""106.58.217.149"": 3,
    ""14.18.41.26"": 2,
    ""103.245.195.202"": 4,
    ""113.108.8.125"": 4,
    ""95.130.227.198"": 3,
    ""222.219.240.13"": 6,
    ""45.87.212.182"": 2,
    ""113.31.157.54"": 2,
    ""115.236.75.10"": 7,
    ""80.235.52.92"": 3,
    ""140.246.149.76"": 1,
    ""117.33.174.14"": 5,
    ""122.227.146.74"": 3,
    ""175.120.134.80"": 4,
    ""106.58.215.167"": 2,
    ""203.57.39.224"": 3,
    ""58.218.204.183"": 6,
    ""62.6.252.50"": 1,
    ""194.165.16.11"": 2,
    ""106.58.164.95"": 3,
    ""106.75.6.46"": 3,
    ""203.57.46.218"": 1,
    ""52.80.19.192"": 3,
    ""185.196.220.41"": 3,
    ""125.88.211.59"": 1,
    ""193.142.146.227"": 3,
    ""183.134.89.41"": 1,
    ""106.58.221.13"": 1,
    ""150.223.79.15"": 3,
    ""45.227.254.55"": 2,
    ""58.247.112.34"": 3,
    ""150.223.66.55"": 4,
    ""120.48.64.252"": 2,
    ""205.210.31.162"": 3,
    ""62.204.41.199"": 3,
    ""106.75.245.66"": 1,
    ""167.94.138.125"": 1,
    ""103.184.47.83"": 1,
    ""175.120.134.93"": 4,
    ""119.96.169.74"": 4,
    ""113.31.31.153"": 1,
    ""120.202.49.41"": 2,
    ""106.58.165.88"": 2,
    ""61.171.113.104"": 2,
    ""87.251.75.145"": 3,
    ""1.82.238.130"": 2,
    ""150.223.35.239"": 3,
    ""106.58.178.111"": 3,
    ""1.117.40.238"": 3,
    ""175.4.26.179"": 4,
    ""27.128.239.46"": 3,
    ""109.69.7.157"": 4,
    ""150.223.13.195"": 2,
    ""203.56.4.242"": 1,
    ""201.80.184.90"": 1,
    ""140.246.215.173"": 5,
    ""103.215.81.133"": 5,
    ""185.170.144.3"": 2,
    ""125.230.232.229"": 3,
    ""103.240.84.186"": 4,
    ""106.225.199.92"": 4,
    ""150.223.76.57"": 3,
    ""43.133.56.30"": 3,
    ""42.193.192.91"": 2,
    ""195.97.20.99"": 1,
    ""106.58.210.135"": 3,
    ""198.235.24.44"": 3,
    ""121.5.74.35"": 6,
    ""167.248.133.39"": 1,
    ""81.69.247.8"": 2,
    ""45.141.26.152"": 2,
    ""150.223.32.106"": 2,
    ""194.165.16.73"": 4,
    ""50.116.32.84"": 4,
    ""81.70.142.203"": 1,
    ""142.93.95.8"": 1,
    ""134.175.53.186"": 1,
    ""106.58.184.58"": 3,
    ""162.142.125.212"": 1,
    ""194.165.16.10"": 2,
    ""182.61.55.68"": 1,
    ""196.190.117.7"": 1,
    ""139.59.185.252"": 1,
    ""43.134.83.223"": 1,
    ""209.52.157.13"": 2,
    ""152.32.245.170"": 1,
    ""205.210.31.88"": 3,
    ""42.51.39.209"": 1,
    ""101.32.116.25"": 1,
    ""106.58.219.212"": 1,
    ""49.233.212.94"": 1,
    ""106.55.54.44"": 1,
    ""94.232.45.92"": 3,
    ""106.75.254.159"": 1,
    ""104.234.53.221"": 1,
    ""123.56.20.194"": 2,
    ""106.225.199.24"": 1,
    ""45.141.26.228"": 1,
    ""87.251.75.64"": 1,
    ""79.129.23.188"": 1,
    ""150.223.56.176"": 1,
    ""106.58.212.195"": 1,
    ""106.58.212.201"": 1,
    ""103.44.237.12"": 1,
    ""43.134.0.225"": 3,
    ""106.58.178.2"": 1,
    ""27.8.44.19"": 4,
    ""205.210.31.197"": 3,
    ""45.141.26.223"": 1,
    ""61.171.106.140"": 2,
    ""222.93.104.67"": 1,
    ""45.141.26.68"": 1
  },
  ""asn"": {
    ""AS51167"": 54,
    ""AS9808"": 8,
    ""AS17341"": 2,
    ""AS42960"": 8,
    ""AS58519"": 48,
    ""AS4134"": 68,
    ""AS701"": 16,
    ""AS135377"": 2,
    ""AS4837"": 24,
    ""AS132203"": 11,
    ""AS3356"": 16,
    ""AS23724"": 9,
    ""AS48721"": 28,
    ""AS206092"": 2,
    ""AS56005"": 4,
    ""AS38283"": 13,
    ""AS7713"": 2,
    ""AS45090"": 18,
    ""AS4808"": 16,
    ""AS3352"": 15,
    ""AS9541"": 4,
    ""AS35682"": 3,
    ""AS9009"": 2,
    ""AS17621"": 7,
    ""AS3249"": 3,
    ""AS134768"": 7,
    ""AS9318"": 8,
    ""AS2856"": 1,
    ""AS55960"": 3,
    ""AS208046"": 6,
    ""AS58466"": 1,
    ""AS58461"": 1,
    ""AS267784"": 2,
    ""AS38365"": 3,
    ""AS396982"": 12,
    ""AS59425"": 3,
    ""AS398324"": 3,
    ""AS146817"": 1,
    ""AS58563"": 4,
    ""AS4812"": 4,
    ""AS208091"": 4,
    ""AS63838"": 4,
    ""AS21183"": 4,
    ""AS28573"": 1,
    ""AS55933"": 5,
    ""AS197414"": 2,
    ""AS3462"": 3,
    ""AS134238"": 5,
    ""AS3329"": 1,
    ""AS142299"": 5,
    ""AS63949"": 4,
    ""AS14061"": 2,
    ""AS24757"": 1,
    ""AS852"": 2,
    ""AS212482"": 3,
    ""AS37963"": 2,
    ""AS6799"": 1,
    ""AS4816"": 1
  },
  ""isp"": {
    ""Contabo GmbH"": 54,
    ""China Mobile communications corporation"": 8,
    ""C7 Data Centers"": 2,
    ""VH-GLOBAL"": 8,
    ""Cloud Computing Corporation"": 48,
    ""Chinanet"": 67,
    ""Verizon Business"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 10,
    ""Shenzhen Tencent Computer Systems Company Limited"": 13,
    ""Level 3 Communications"": 16,
    ""UCLOUD"": 13,
    ""Flyservers S.A."": 30,
    ""Velcom"": 2,
    ""China Unicom Henan Province network"": 4,
    ""CHINANET SiChuan Telecom Internet Data Center"": 13,
    ""PT Telekomunikasi Indonesia"": 2,
    ""China Unicom Tianjin Province Network"": 5,
    ""China Unicom Beijing Province Network"": 16,
    ""Telefonica de Espana SAU"": 15,
    ""CHINANET Guangdong province network"": 2,
    ""Cyber Internet Services (Private) Limited"": 4,
    ""Best Internet Solution XK"": 3,
    ""M247 Europe SRL"": 2,
    ""Telia Eesti AS"": 3,
    ""CHINANET SHAANXI province Cloud Base network"": 7,
    ""SK Broadband Co Ltd"": 8,
    ""British Telecommunications PLC"": 1,
    ""Beijing Guanghuan Xinwang Digital"": 3,
    ""ColocationX Ltd."": 6,
    ""China Telecom"": 1,
    ""CNC Group CHINA169 Shanghai Province Network"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""Google LLC"": 12,
    ""Horizon LLC"": 3,
    ""Censys, Inc."": 3,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""CHINANET Hubei province network"": 4,
    ""CNC Group CHINA169 Tianjin Province network"": 1,
    ""China Telecom (Group)"": 5,
    ""Xhost Internet Solutions LP"": 9,
    ""China Internet Network Information Center"": 11,
    ""Hengyang"": 4,
    ""Vodafone Network"": 4,
    ""Claro NXT Telecomunicacoes Ltda"": 1,
    ""Cloudie Limited"": 5,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""China Unicom CHINA169 Network"": 4,
    ""CHINANET Jiangx province IDC network"": 5,
    ""Aceville Pte.ltd"": 4,
    ""HOL"": 1,
    ""CLOUDFOREST CO., LTD"": 5,
    ""Akamai Technologies, Inc."": 4,
    ""EuroNet Internet"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Ethiotelecom"": 1,
    ""DIGITALOCEAN"": 1,
    ""TELUS Communications Inc"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""OTEnet"": 1,
    ""China Unicom Chongqing Province Network"": 4
  },
  ""org"": {
    ""Contabo GmbH"": 54,
    ""China Mobile"": 8,
    ""VegaDigital Solutions"": 2,
    ""VH Global Limited"": 8,
    ""Chinanet SD"": 27,
    ""Chinanet FJ"": 12,
    ""Chinanet YN"": 38,
    ""Verizon Business"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet ZJ"": 9,
    ""Unknown"": 40,
    ""Tencent Cloud Computing"": 7,
    ""Fort Wayne Internet, LLC"": 16,
    ""Shanghai UCloud Information Technology Company Limited"": 13,
    ""Flyservers S.A"": 28,
    ""ONTAR-40 (Velcom INC)"": 2,
    ""Henan Telcom Union Technology Co., LTD"": 4,
    ""Chengdu Giant Times Technology Co., Ltd"": 13,
    ""Telekomunikasi Indonesia"": 2,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 4,
    ""Chinanet JS"": 11,
    ""Beijing yunchuang communication Technology Co."": 16,
    ""RIMA (Red IP Multi Acceso)"": 15,
    ""Chinanet GD"": 6,
    ""Cyber Internet Services Pakistan"": 4,
    ""Best Internet Solution XK"": 3,
    ""M247 LTD"": 2,
    ""Hangzhou xiaoshan public transportation co., LTD"": 7,
    ""Chinanet SN"": 7,
    ""Ningbo chaoji mamawangluojishu ltd"": 3,
    ""SK Broadband Co Ltd"": 8,
    ""Btnet"": 1,
    ""AWS EC2 (cn-north-1)"": 3,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""UAB Host Baltic"": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 3,
    ""Censys, Inc"": 1,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Chinanet HB"": 4,
    ""BeiJing QianJingShiJi Co., Ltd."": 1,
    ""Chinanet SH"": 4,
    ""Xhost Internet Solutions"": 4,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 13,
    ""Chinanet HN"": 4,
    ""Chinanet HE"": 3,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 1,
    ""Netads Online Limited"": 5,
    ""Xhostis"": 2,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Chinanet JX"": 5,
    ""Koumakis Emm. S.A."": 1,
    ""Censys, Inc."": 1,
    ""Cloudforest CO., LTD"": 5,
    ""Linode"": 4,
    ""Online Breedband B.V."": 1,
    ""DigitalOcean, LLC"": 2,
    ""Censys Inc"": 1,
    ""Colliers Macaulay Nicolls Inc"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Dmitriy Panchenko"": 3,
    ""Aliyun Computing Co., LTD"": 2,
    ""OTEnet S.A."": 1,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 1
  },
  ""regionName"": {
    ""England"": 56,
    ""Guangdong"": 27,
    ""Utah"": 2,
    ""Central and Western District"": 14,
    ""Shandong"": 27,
    ""Fujian"": 15,
    ""Yunnan"": 38,
    ""New Jersey"": 16,
    ""Zhejiang"": 20,
    ""Inner Mongolia"": 7,
    ""North West"": 10,
    ""Indiana"": 16,
    ""Beijing"": 47,
    ""Kaunas"": 28,
    ""New York"": 2,
    ""Henan"": 4,
    ""Sichuan"": 13,
    ""Jakarta"": 2,
    ""Shanghai"": 8,
    ""Tianjin"": 6,
    ""Jiangsu"": 11,
    ""Madrid"": 15,
    ""Sindh"": 4,
    ""Tashkent"": 3,
    ""Hesse"": 2,
    ""Harjumaa"": 3,
    ""Shanxi"": 5,
    ""Gyeongsangbuk-do"": 8,
    ""Virginia"": 3,
    ""North Holland"": 9,
    ""Vilnius"": 2,
    ""California"": 13,
    ""Moscow"": 3,
    ""Michigan"": 3,
    ""Hubei"": 5,
    ""Shaanxi"": 2,
    ""Hunan"": 4,
    ""Hebei"": 3,
    ""Tirana"": 4,
    ""Minas Gerais"": 1,
    ""Taichung City"": 3,
    ""Jiangxi"": 5,
    ""Attica"": 1,
    ""Bangkok"": 6,
    ""Georgia"": 4,
    ""Addis Ababa"": 1,
    ""Ontario"": 2,
    ""Central Singapore"": 1,
    ""Perm Krai"": 3,
    ""Thessaly"": 1,
    ""Chongqing"": 4
  },
  ""country"": {
    ""United Kingdom"": 56,
    ""China"": 251,
    ""United States"": 59,
    ""Hong Kong"": 14,
    ""Singapore"": 11,
    ""Lithuania"": 30,
    ""Indonesia"": 2,
    ""Spain"": 15,
    ""Pakistan"": 4,
    ""Uzbekistan"": 3,
    ""Germany"": 2,
    ""Estonia"": 3,
    ""South Korea"": 8,
    ""The Netherlands"": 9,
    ""Russia"": 6,
    ""Albania"": 4,
    ""Brazil"": 1,
    ""Taiwan"": 3,
    ""Greece"": 2,
    ""Thailand"": 6,
    ""Ethiopia"": 1,
    ""Canada"": 2
  },
  ""account"": {
    ""hello"": 65,
    ""142.93.8.59"": 368,
    ""(empty)"": 7,
    ""Test"": 16,
    ""Domain"": 11,
    ""lFznKxGEz"": 1,
    ""gVpEKd"": 1,
    ""sjbBwa"": 1,
    ""Administr"": 6,
    ""user"": 1,
    ""aJnzGFiaa"": 1,
    ""CUOjAv"": 1,
    ""jBCDBw"": 1,
    ""5r0knkai"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""HhNsQOAfO"": 1,
    ""tqDlHo"": 1,
    ""CaTHKy"": 1,
    ""ZomdsQfGQ"": 1,
    ""BTqWBB"": 1,
    ""ABsDLA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 492
  },
  ""client_build"": {
    ""Unknown"": 492
  },
  ""client_name"": {
    ""Unknown"": 492
  },
  ""ip_type"": {
    ""hosting"": 145,
    ""mobile"": 17,
    ""Unknown"": 303,
    ""proxy"": 23,
    ""hosting & proxy"": 4
  }
}"
Qdw8jUjc,Google Appscript format batchs of  tabs within a Google Sheet,cedroid,JavaScript,Thursday 18th of January 2024 05:47:25 PM CDT,"/*
The success of the entire script, especially the formatting, hinges on the correct setup of the getColumnFormats() function. It's essential that the column names and their corresponding formats in this function accurately reflect the actual data structure in your sheets for the script to work effectively.

The script below is based on a google sheet that contains hotel reservations data but the column order and the cell formatting was not correct, the issue was happening with hundreds of tabs within the same sheet, modify the script according to your needs:

1. processSheets()
This is the main function that initiates the processing of all sheets in the active spreadsheet. It performs several key tasks:

- Retrieves all the sheets in the spreadsheet.
- Creates or accesses the 'Formatting Logs' sheet for tracking progress.
- Processes each sheet (up to 30 at a time for resource management).
- Logs the processing status (success or error) for each sheet.
- Displays a notification summarizing the number of sheets successfully processed and those with errors.

2. processSingleSheet(sheet, columnFormats)
Processes an individual sheet by:

- Checking if the sheet has any columns and rows.
- Sorting the columns alphabetically based on headers.
- Writing the sorted data back to the sheet.
- Applying formatting to each column based on predefined rules.
- Returning the status of processing (success or error with notes).

3. applyFormat(range, formatInfo)
- Applies formatting to a given range in a sheet. It uses the format information specified in the formatInfo parameter. The function switches between different types of data (date, text, number, currency) and applies the corresponding format.

4. logStatus(logSheet, sheet, status)
- Logs the processing status of each sheet in the 'Formatting Logs' sheet. It records the sheet name, a hyperlink to the sheet, the timestamp of processing, and notes on the status (success or error).

5. setupLogSheet(logSheet)
- Sets up the initial headers in the 'Formatting Logs' sheet for tracking. Headers include ""Sheet Name"", ""Hyperlink"", ""Timestamp"", ""Status"", and ""Status Notes"".

6. isSheetProcessed(logSheet, sheetName)
- Checks if a sheet has already been processed successfully. It prevents reprocessing of sheets that are already formatted.

7. getColumnFormats()
- Crucial for the entire script, this function returns a hardcoded object mapping column names to their respective data types and formats. It is essential that the user manually matches these names and formats with the actual column names present in the sheets. Failure to correctly match these will result in improper or failed formatting. The formats for each type of data (like date, text, number, currency) need to be predefined here.

If you need a test spreadsheet you can generate one using the script that I have written here: https://pastebin.com/nbhP4WxB


*/

function processSheets() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheets = ss.getSheets();
  var columnFormats = getColumnFormats();

  // Create or get the 'Formatting Logs' sheet
  var logSheet = ss.getSheetByName(""Formatting Logs"") || ss.insertSheet(""Formatting Logs"");
  // Set up log sheet headers
  setupLogSheet(logSheet);

  var processedCount = 0;
  var errorCount = 0;
  var successCount = 0;

  // Process each sheet
  sheets.forEach(function(sheet) {
    if (sheet.getName() !== ""Formatting Logs"" && !isSheetProcessed(logSheet, sheet.getName())) {
      var status = processSingleSheet(sheet, columnFormats);
      logStatus(logSheet, sheet, status);

      if (status.error) {
        errorCount++;
      } else {
        successCount++;
      }

      processedCount++;
      if (processedCount >= 30) {
        // Stop processing after 30 sheets
        return;
      }
    }
  });

  // Show notification after processing
  SpreadsheetApp.getUi().alert(
    'Processing completed. ' +
    'Success: ' + successCount + ', ' +
    'Errors: ' + errorCount
  );
}

function processSingleSheet(sheet, columnFormats) {
  var status = { error: false, notes: [] };
  var lastColumn = sheet.getLastColumn();
  var lastRow = sheet.getLastRow();

  // Check if the sheet has columns and rows
  if (lastColumn === 0 || lastRow === 0) {
    status.error = true;
    status.notes.push(""No columns or rows found in sheet."");
    return status;
  }

  // Get headers and sort them along with their data
  var headers = sheet.getRange(1, 1, 1, lastColumn).getValues()[0];
  var data = sheet.getRange(2, 1, lastRow - 1, lastColumn).getValues();

  // Create a combined array of headers and data for sorting
  var combined = headers.map(function(header, index) {
    return [header].concat(data.map(function(row) {
      return row[index];
    }));
  });

  // Sort the combined array alphabetically based on headers
  combined.sort(function(a, b) {
    return a[0].localeCompare(b[0]);
  });

  // Write the sorted data back to the sheet
  for (var col = 0; col < combined.length; col++) {
    sheet.getRange(1, col + 1, lastRow).setValues(combined[col].map(function(cell, index) {
      return [cell];
    }));
  }

  // Apply formats to the sorted columns and check for errors
  combined.forEach(function(column, index) {
    var header = column[0];
    if (columnFormats[header]) {
      try {
        var range = sheet.getRange(2, index + 1, lastRow - 1);
        applyFormat(range, columnFormats[header]);
      } catch (e) {
        status.error = true;
        status.notes.push(""Error in column: "" + header + "" - "" + e.message);
      }
    }
  });

  // Return processing status
  return status;
}

function applyFormat(range, formatInfo) {
  // Apply format based on type and specific format rules
  switch (formatInfo.type) {
    case ""date"":
      range.setNumberFormat(formatInfo.format);
      break;
    case ""text"":
      // Text formatting can be added here
      break;
    case ""number"":
      range.setNumberFormat(formatInfo.format);
      break;
    case ""currency"":
      range.setNumberFormat(formatInfo.format);
      break;
    // Add more cases as needed
  }
}

function logStatus(logSheet, sheet, status) {
  var timeStamp = new Date();
  var sheetUrl = sheet.getParent().getUrl() + ""#gid="" + sheet.getSheetId();
  var statusText = status.error ? ""Error"" : ""Success"";
  var notesText = status.notes.join(""\n"");

  // Append log entry
  logSheet.appendRow([sheet.getName(), sheetUrl, timeStamp, statusText, notesText]);
}

function setupLogSheet(logSheet) {
  // Setup headers for the log sheet
  logSheet.getRange(""A1:E1"").setValues([[""Sheet Name"", ""Hyperlink"", ""Timestamp"", ""Status"", ""Status Notes""]]);
}

function isSheetProcessed(logSheet, sheetName) {
  // Check if the sheet is already processed
  var data = logSheet.getDataRange().getValues();
  for (var i = 1; i < data.length; i++) {
    if (data[i][0] === sheetName && data[i][3] === ""Success"") {
      return true;
    }
  }
  return false;
}

function getColumnFormats() {
  // Hardcoded column names and their formats
  return {
    ""Date"": { type: ""date"", format: ""MM/dd/yyyy"" },
    ""Name"": { type: ""text"", format: ""none"" },
    ""Room"": { type: ""number"", format: ""0"" },
    ""Price"": { type: ""currency"", format: ""$#,##0.00"" },
    ""Check-in"": { type: ""date"", format: ""MM/dd/yyyy"" },
    ""Check-out"": { type: ""date"", format: ""MM/dd/yyyy"" },
    // Add more column formats as needed
  };
}
"
