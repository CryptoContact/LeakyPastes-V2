id,title,username,language,date,content
bgff4gx8,2024-02-11_stats.json,rdp_snitch,JSON,Sunday 11th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""185.122.204.179"": 1,
    ""194.165.16.76"": 4,
    ""162.142.125.225"": 1,
    ""45.87.212.180"": 4,
    ""98.159.37.156"": 1,
    ""45.227.254.8"": 2,
    ""172.105.73.247"": 4,
    ""205.210.31.248"": 3,
    ""45.227.254.9"": 3,
    ""87.251.75.64"": 1,
    ""87.251.75.145"": 3,
    ""179.60.150.59"": 1,
    ""35.208.127.221"": 1,
    ""212.70.149.142"": 3,
    ""196.190.117.7"": 2,
    ""185.170.144.3"": 2,
    ""194.165.16.72"": 4,
    ""198.235.24.83"": 3,
    ""106.116.169.71"": 1,
    ""167.94.146.55"": 1,
    ""167.248.133.50"": 1,
    ""123.212.240.162"": 1,
    ""120.240.145.8"": 1,
    ""80.106.161.88"": 1,
    ""152.32.235.78"": 1,
    ""205.210.31.8"": 3,
    ""95.138.193.228"": 1,
    ""20.163.18.235"": 1,
    ""185.161.248.19"": 1,
    ""79.242.10.88"": 1,
    ""138.199.6.244"": 1,
    ""45.227.254.26"": 2,
    ""173.239.218.73"": 1,
    ""173.239.214.81"": 1,
    ""94.232.45.92"": 3,
    ""167.94.145.51"": 1,
    ""202.134.162.47"": 2,
    ""122.185.131.197"": 1,
    ""198.235.24.219"": 3
  },
  ""asn"": {
    ""AS57523"": 1,
    ""AS48721"": 8,
    ""AS398324"": 2,
    ""AS9009"": 4,
    ""AS62240"": 3,
    ""AS267784"": 7,
    ""AS63949"": 4,
    ""AS396982"": 12,
    ""AS208091"": 4,
    ""AS211179"": 1,
    ""AS15169"": 1,
    ""AS204428"": 3,
    ""AS24757"": 2,
    ""AS197414"": 2,
    ""AS4134"": 1,
    ""AS398705"": 2,
    ""AS9318"": 1,
    ""AS56040"": 1,
    ""AS6799"": 1,
    ""AS135377"": 1,
    ""AS29278"": 1,
    ""AS8075"": 1,
    ""AS49202"": 1,
    ""AS3320"": 1,
    ""AS212238"": 1,
    ""AS212482"": 3,
    ""AS132296"": 2,
    ""AS9498"": 1
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 1,
    ""Flyservers S.A."": 15,
    ""Censys, Inc."": 4,
    ""M247 Europe SRL"": 4,
    ""LogicWeb Inc."": 3,
    ""Akamai Technologies"": 4,
    ""Google LLC"": 13,
    ""Xhost Internet Solutions LP"": 9,
    ""Veraton Projects LTD"": 1,
    ""SS-Net"": 3,
    ""Ethiotelecom"": 2,
    ""Chinanet"": 1,
    ""SK Broadband Co Ltd"": 1,
    ""China Mobile communications corporation"": 1,
    ""Ote SA (Hellenic Telecommunications Organisation)"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Deninet KFT"": 1,
    ""Microsoft Corporation"": 1,
    ""Kisara LLC"": 1,
    ""Deutsche Telekom AG"": 1,
    ""Datacamp Limited"": 1,
    ""Seven Star Digital Network Private Limited"": 2,
    ""Bharti Airtel Limited"": 1
  },
  ""org"": {
    ""Starcrecium Limited"": 1,
    ""Flyservers S.A"": 8,
    ""Censys Inc"": 1,
    ""M247 LTD"": 4,
    ""Dedicated Servers"": 1,
    ""UAB Host Baltic"": 7,
    ""Linode"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 4,
    ""Maxwell Group LTD"": 1,
    ""Google Cloud (us-central1)"": 1,
    ""4Media Ltd"": 3,
    ""Unknown"": 2,
    ""Xhostis"": 2,
    ""Chinanet HE"": 1,
    ""Censys, Inc."": 3,
    ""broadNnet"": 1,
    ""China Mobile"": 1,
    ""Ote SA"": 1,
    ""Ucloud Information Technology"": 1,
    ""VPS4You Kft."": 1,
    ""Microsoft Azure Cloud (westus3)"": 1,
    ""Kisara LLC"": 1,
    ""Deutsche Telekom AG"": 1,
    ""Cdnext ZUR"": 1,
    ""NSQ-VENTURE"": 2,
    ""Dmitriy Panchenko"": 3,
    ""7 STAR Dot Com Pvt. Ltd"": 2,
    ""Bharti Airtel Limited"": 1
  },
  ""regionName"": {
    ""Moscow"": 2,
    ""Kaunas"": 8,
    ""Michigan"": 2,
    ""Hesse"": 10,
    ""California"": 15,
    ""Vilnius"": 7,
    ""North Holland"": 6,
    ""Distrito Federal"": 1,
    ""Iowa"": 1,
    ""Plovdiv"": 3,
    ""Addis Ababa"": 2,
    ""Hebei"": 1,
    ""Gyeonggi-do"": 1,
    ""Guangdong"": 1,
    ""Central Macedonia"": 1,
    ""Gy\u0151r-Moson-Sopron"": 1,
    ""Arizona"": 1,
    ""Lower Saxony"": 1,
    ""Zurich"": 1,
    ""New Jersey"": 1,
    ""Perm Krai"": 3,
    ""Maharashtra"": 3
  },
  ""country"": {
    ""Russia"": 5,
    ""Lithuania"": 15,
    ""United States"": 20,
    ""Germany"": 11,
    ""The Netherlands"": 6,
    ""Venezuela"": 1,
    ""Bulgaria"": 3,
    ""Ethiopia"": 2,
    ""China"": 2,
    ""South Korea"": 1,
    ""Greece"": 1,
    ""Hungary"": 1,
    ""Switzerland"": 1,
    ""India"": 3
  },
  ""account"": {
    ""Administr"": 12,
    ""Test"": 18,
    ""(empty)"": 15,
    ""UOzgQb"": 1,
    ""CBLYUfnSU"": 1,
    ""XyWkOb"": 1,
    ""Domain"": 6,
    ""hello"": 8,
    ""LHsMRBoxt"": 1,
    ""HIHEIO"": 1,
    ""NXuOxU"": 1,
    ""Administrator"": 1,
    ""HHljdBmDR"": 1,
    ""AUEWUM"": 1,
    ""sVHbbI"": 1,
    ""AtoHHSiPC"": 1,
    ""GpUNBQ"": 1,
    ""aknzKR"": 1
  },
  ""keyboard"": {
    ""Unknown"": 72
  },
  ""client_build"": {
    ""Unknown"": 72
  },
  ""client_name"": {
    ""Unknown"": 72
  },
  ""ip_type"": {
    ""Unknown"": 40,
    ""hosting & proxy"": 8,
    ""hosting"": 20,
    ""mobile"": 1,
    ""proxy"": 3
  }
}"
gGTwE9W4,Untitled,Hitrandil,Java,Sunday 11th of February 2024 05:47:38 PM CDT,"package clients;

import java.util.List;
import java.util.Scanner;
import mua.message.Message;
import mua.message.MessageFragment;
import mua.message.header.IMessageHeader;
import utils.ASCIICharSequence;

/** MessageDecode */
public class MessageDecode {

  /**
   * Tests message decoding
   *
   * <p>Reads a message from stdin and emits its fragments on the stdout.
   *
   * <p>Every fragment should be emitted as, for example:
   *
   * <pre>{@code
   * Fragment
   *   Raw headers:
   *     Raw type = from, value = Luca Prigioniero <prigioniero@di.unimi.it>
   *     Raw type = to, value = ""Massimo prof. Santini"" <santini@di.unimi.it>, info@unimi.it
   *     Raw type = subject, value = Oggetto semplice
   *     Raw type = date, value = Wed, 6 Dec 2023 12:30:20 +0100
   *     Raw type = mime-version, value = 1.0
   *     Raw type = content-type, value = multipart/alternative; boundary=frontier
   *   Raw body:
   *     This is a message with multiple parts in MIME format.
   * }</pre>
   *
   * @param args not used.
   */
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    StringBuilder codedMessage = new StringBuilder();
    StringBuilder print = new StringBuilder();
    while (scanner.hasNextLine()) {
      codedMessage.append(scanner.nextLine());
      codedMessage.append(""\n"");
    }
    Message message = Message.decode(ASCIICharSequence.of(codedMessage.toString()));

    List<MessageFragment> fragments = message.getFragments();
    for (MessageFragment fragment : fragments) {
      print.append(""Fragment\n"");
      if(!fragment.getHeaders().isEmpty()){
        print.append(""\tRaw headers:\n"");
        for (IMessageHeader<?> header : fragment.getHeaders()) {
          print.append(""\t\tRaw type = "").append(header.type()).append("", value = "").append(header.value()).append(""\n"");
        }
      }
      if(fragment.getBody().isPresent()){
        print.append(""\tRaw body:\n"");
        print.append(""\t\t"").append(fragment.getBody().get()).append(""\n"");
      }

    }
    System.out.println(print.toString());
  }
}
"
yzmwVYAd,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Sunday 11th of February 2024 05:38:43 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_134764.pdf
 
Working as of
11 February 2024"
6TyutV14,Untitled,Hitrandil,Java,Sunday 11th of February 2024 05:30:46 PM CDT," @Override
    public ASCIICharSequence encode() {
        StringBuilder stringBuilder = new StringBuilder();

        if (fragments.size() == 1)
            appendSingleFragment(stringBuilder);
        else
            appendMultipleFragments(stringBuilder);

        return ASCIICharSequence.of(stringBuilder.toString());
    }//codice rifattorizzato con l'ausilio di GPT3.5

    private void appendSingleFragment(StringBuilder stringBuilder) {
        MessageFragment singleFragment = fragments.get(0);

        stringBuilder.append(singleFragment.encodeHeaders()).append(""\n"");
        addContentType(singleFragment.getBody(), stringBuilder);
        stringBuilder.append(""\n"").append(singleFragment.encodeBody());
    }

    private void appendMultipleFragments(StringBuilder stringBuilder) {
        int count = 0;

        for (MessageFragment fragment : fragments) {
            if (count == 0) {
                appendFirstFragment(stringBuilder, fragment);
            } else {
                appendSubsequentFragment(stringBuilder, fragment);
            }
            count++;
        }

        stringBuilder.delete(stringBuilder.length() - 1, stringBuilder.length());
        stringBuilder.append(""--"");
    }

    private void appendFirstFragment(StringBuilder stringBuilder, MessageFragment fragment) {
        MessageFragment firstFragmentHeader = new MessageFragment(fragment.getHeaders());
        MessageFragment firstFragmentBody = null;

        if (fragment.getBody().isPresent()) {
            firstFragmentBody = new MessageFragment(new ArrayList<>(), fragment.getBody().get());
        }

        stringBuilder.append(firstFragmentHeader.encode()).append(""\n"");
        stringBuilder.append(new MimeVersionHeader().encode()).append(""\n"");
        stringBuilder.append(new ContentTypeHeader(new ContentType(ContentType.ContentTypeTextEnum.MULTIPART_ALTERNATIVE, ""frontier"")).encode()).append(""\n"");
        stringBuilder.append(""\nThis is a message with multiple parts in MIME format.\n"");

        if (firstFragmentBody != null) {
            stringBuilder.append(""--frontier\n"");
            addContentType(fragment.getBody(), stringBuilder);
            stringBuilder.append(firstFragmentBody.encode());
        }
    }

    private void appendSubsequentFragment(StringBuilder stringBuilder, MessageFragment fragment) {
        stringBuilder.append(""\n--frontier\n"");
        addContentType(fragment.getBody(), stringBuilder);
        stringBuilder.append(fragment.encode()).append(""\n--frontier\n"");
    }"
DV41HDx7,Untitled,sissou123,CSS,Sunday 11th of February 2024 05:28:11 PM CDT,"CSS - The Complete Guide 2024 (incl. Flexbox, Grid & Sass)
Learn CSS for the first time or brush up your CSS skills and dive in even deeper. EVERY web developer has to know CSS. 
What you'll learn
Learn why CSS is amazing, not something to be afraid of!
Use basic as well as advanced CSS features
Flexbox, grid, animations, transitions, fonts, media queries and much more - it's all included! 
for more:http://rapid-cut.com/bono
"
4KiANELy,01. La Flecha del Castigo | Afiliación,Athenea-Owl,HTML,Sunday 11th of February 2024 05:19:48 PM CDT,"---------01. LA FLECHA DEL CASTIGO | AFILICIÓN | PARA FORO MODERNBB----------

<center><div class=""athepa1""><div class=""athepa1i"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)"">La Flecha del Castigo</div><div class=""athepa1l""><a href=""LINK"">Foro</a><a href=""LINK"">Reglamento</a><a href=""LINK"">Afiliaciones</a></div><div class=""athepa1s""><i class=""fas fa-book""></i> Ambientación </div><div class=""athepa1t"">
<b>L</b>orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, <i>quis nostrud exercitation</i> ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."" <a href=""/"">Leer más...</a>

</div><div class=""athepa1s""><i class=""fas fa-users-cog""></i> Administración </div><div class=""athepa1ta"">
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
</div><div class=""athepa1s""><i class=""fas fa-stop""></i> Botones </div><div class=""athepa1tb"">
<b>T</b>us botones aquí...
</div></div><div class=""athec1""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png""/><br/>Athenea</a></div></center>

<style>.athepa1{--1fondo: #1F2126;--1borde: #090A0D;--1titulo: #fff;--1textos: #734D8C;--1textoc: #5F6A73;} .athepa1{width: 600px;height: auto;background-color: var(--1fondo);border: 50px solid var(--1borde);} .athepa1i{width: 500px;height: 200px;background-position: center;background-size: cover;font-family: 'Kings';font-size: 50px;padding-top: 17%;text-shadow: 4px 0px 10px var(--1textos);color: var(--1titulo);} .athepa1l{background-color: var(--1fondo);width: 100%;height: 50px;text-align: center;justify-content: space-around;display: flex;text-decoration: none;} .athepa1l a{color: var(--1titulo);position: relative;top: 30%;font-family: calibri;font-size: 10px;text-transform: uppercase;background-color: var(--1textos);width: 100px;height: 20px;letter-spacing: 2px;padding: 2px;text-decoration: none;} .athepa1s{background-color: var(--1textos);width: 100%;height: 50px;text-align: left;font-family: 'Kings';font-size: 20px;padding-top: 3%;letter-spacing: 4px;padding-left: 5%;color: var(--1titulo);} .athepa1t, .athepa1tb{text-align: justify;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);} .athepa1t b, .athepa1tb b{font-family: 'Kings';font-size: 25px;color: var(--1textos);font-style: italic;text-transform: capitalize;width: 25px;height: 25px;display: inline-block;border-left: 4px solid var(--1textos);padding: 4px;margin-right: 4px;} .athepa1a{width: 100px;height: 100px;border: 4px solid var(--1textos);margin: 4px;background-position: center;background-size: cover;} .athepa1ta{text-align: center;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);display: flex;justify-content: space-around;} .athepa1a a{background-color: var(--1textos);color: var(--1titulo);padding: 2px;position: relative;top: 60%;text-align: center;width: 100%;height: 22px;display: block;font-family: 'Kings';font-size: 12px;text-transform: capitalize;letter-spacing: 1px;text-decoration: none;} .athepa1a a b{font-family: calibri;font-size: 8px;text-transform: uppercase;font-weight: normal;background-color: var(--1borde);display: block;width: 106%;position: relative;left: -2px;height: 100%;} .athepa1t a{color: var(--1textos);font-style: italic;border-left: 2px solid var(--1textos);padding-left: 4px;font-weight: bold;text-decoration: none;} .athepa1t i{color: var(--1textos);font-weight: bold;} .athepa1tb i{color: var(--1textos);font-weight: bold;} .athepa1l a:hover{text-decoration: none!important;} .athepa1a a:hover{text-decoration: none!important;} .athec1{width: 100px;height: 25px;} .athec1 a{font-family: calibri;text-align: center;text-transform: lowercase;font-size: 10px;letter-spacing: 2px;text-decoration: none;} .athec1 a:hover{text-decoration: none!important;} .athec1 img{width:25px;height: 25px;} .athepa1t a:hover{text-decoration: none!important;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_BoaCiPQ.woff2) format('woff2');unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_PoaA.woff2) format('woff2');unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;}</style><link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous"">



---------01. LA FLECHA DEL CASTIGO | AFILICIÓN | PARA FORO PHPBB----------

<center><div class=""athepa1""><div class=""athepa1i"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)"">La Flecha del Castigo</div><div class=""athepa1l""><a href=""LINK"">Foro</a><a href=""LINK"">Reglamento</a><a href=""LINK"">Afiliaciones</a></div><div class=""athepa1s""><i class=""fas fa-book""></i> Ambientación </div><div class=""athepa1t"">
<b>L</b>orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, <i>quis nostrud exercitation</i> ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."" <a href=""/"">Leer más...</a>

</div><div class=""athepa1s""><i class=""fas fa-users-cog""></i> Administración </div><div class=""athepa1ta"">
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
</div><div class=""athepa1s""><i class=""fas fa-stop""></i> Botones </div><div class=""athepa1tb"">
<b>T</b>us botones aquí...
</div></div><div class=""athec1""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png""/><br/>Athenea</a></center>

<link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous"">
<style>.athepa1{--1fondo: #1F2126;--1borde: #090A0D;--1titulo: #fff;--1textos: #734D8C;--1textoc: #5F6A73;} .athepa1{width: 500px;height: auto;background-color: var(--1fondo);border: 50px solid var(--1borde);} .athepa1i{width: 500px;height: 100px;background-position: center;background-size: cover;font-family: 'Kings';font-size: 50px;padding-top: 17%;text-shadow: 4px 0px 10px var(--1textos);color: var(--1titulo);} .athepa1l{background-color: var(--1fondo);width: 100%;height: 50px;text-align: center;justify-content: space-around;display: flex;} .athepa1l a{color: var(--1titulo);position: relative;top: 30%;font-family: calibri;font-size: 10px;text-transform: uppercase;background-color: var(--1textos);width: 100px;height: 20px;letter-spacing: 2px;padding: 2px;text-decoration: none;} .athepa1s{background-color: var(--1textos);width: 95%;height: 30px;text-align: left;font-family: 'Kings';font-size: 20px;padding-top: 3%;letter-spacing: 4px;padding-left: 5%;color: var(--1titulo);} .athepa1t, .athepa1tb{text-align: justify;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);} .athepa1t b, .athepa1tb b{font-family: 'Kings';font-size: 25px;color: var(--1textos);font-style: italic;text-transform: capitalize;width: 25px;height: 25px;display: inline-block;border-left: 4px solid var(--1textos);padding: 4px;margin-right: 4px;} .athepa1a{width: 100px;height: 100px;border: 4px solid var(--1textos);margin: 4px;background-position: center;background-size: cover;} .athepa1ta{text-align: center;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);display: flex;justify-content: space-around;} .athepa1a a{background-color: var(--1textos);color: var(--1titulo);padding: 2px;position: relative;top: 60%;text-align: center;width: 100%;height: 22px;display: block;font-family: 'Kings';font-size: 12px;text-transform: capitalize;letter-spacing: 1px;text-decoration: none;} .athepa1a a b{font-family: calibri;font-size: 8px;text-transform: uppercase;font-weight: normal;background-color: var(--1borde);display: block;width: 106%;position: relative;left: -5px;height: 100%;} .athepa1t a{color: var(--1textos);font-style: italic;border-left: 2px solid var(--1textos);padding-left: 4px;font-weight: bold;text-decoration: none;} .athepa1t i{color: var(--1textos);font-weight: bold;} .athepa1tb i{color: var(--1textos);font-weight: bold;} .athepa1l a:hover{text-decoration: none!important;} .athepa1a a:hover{text-decoration: none!important;} .athec1{width: 100px;height: 25px;} .athec1 a{font-family: calibri;text-align: center;text-transform: lowercase;font-size: 10px;letter-spacing: 2px;text-decoration: none;} .athec1 a:hover{text-decoration: none!important;} .athec1 img{width:25px;height: 25px;} .athepa1t a:hover{text-decoration: none!important;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_BoaCiPQ.woff2) format('woff2');unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_PoaA.woff2) format('woff2');unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;}</style>"
BTN0TbiN,bac-test_antrenament-10-2021-sub3-1,madidino,C++,Sunday 11th of February 2024 04:32:18 PM CDT,"#include <iostream>

using namespace std;


int armonie(int x,int y)
{
    int sx=x+1;int sy=y+1;
    int i;
    for(i=2;i<=x/2;i++)
    {
        if(x%i==0)
        {
            sx=sx+i;
        }
    }
    for(i=2;i<=y/2;i++)
    {
        if(y%i==0)
        {
            sy=sy+i;
        }
    }
    if(sx>sy)
    {
        sx=sx+sy;
        sy=sx-sy;
        sx=sx-sy;
    }
    if(x+y>sx && x+y<sy)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
int main()
{
   cout<<armonie(8,12);
    return 0;
}
"
mJGdacJC,bac-test_antrenament-10-2021-sub3-3,madidino,C++,Sunday 11th of February 2024 04:31:12 PM CDT,"#include <iostream>
#include<fstream>
using namespace std;

int main()
{
    ifstream fin(""bac.txt"");
    int n;
    fin>>n;
    int x;
    int k=1;
    while(fin>>x)
    {
        if(x<n)
        {
            k++;
        }
    }
    cout<<k;
    fin.close();
    return 0;"
3WrGtsZH,Untitled,TheStraying11,Lua,Sunday 11th of February 2024 03:12:18 PM CDT,"local pd = peripheral.wrap(""left"")
local di = peripheral.wrap(""right"")
local integrator = peripheral.wrap(""top"")

local args = {...}

local home = {
    x = -5670,
    y = 3675,
    z = 70
}
local p1 = pd.getPlayerPos(args[1])
local p2

if #args == 2 then
    p2 = pd.getPlayerPos(args[2])
else
    p2 = {x = tonumber(args[2]), y = tonumber(args[3]), z = tonumber(args[4])}
end

local function waitForAction()
    while not di.isActionDone() do
        os.sleep(0.5)
    end
end

local function droneDo(action, x, y, z, x2, y2, z2)
    di.addArea(x, y, z, x2, y2, z2)
    di.setAction(action)
    waitForAction()
    di.clearArea()
end

integrator.setOutput('right', true)
os.sleep(0.1)
integrator.setOutput('right', false)
droneDo('teleport', p1.x, p1.y, p1.z)
droneDo('entity_import', p1.x, p1.y, p1.z)
droneDo('teleport', p2.x, p2.y, p2.z)
droneDo('entity_export', p2.x, p2.y, p2.z)
droneDo('teleport', home.x, home.y, home.z)
droneDo('suicide', home.x, home.y, home.z)"
Fdy6vwqN,module Fc,AdminArchon,Python,Sunday 11th of February 2024 02:36:31 PM CDT,"#from deep_translator import GoogleTranslator
#from pathlib import Path
from random import choice, randint
import math

#def Traduire(text)->str:
    #translated = GoogleTranslator(source='en', target='fr').translate(text=text)
    #if translated == ""Enfant de Dragon"":
    #    translated = ""Sangdragon""
    #return translated
    
def Pieds_en_metres(valeur):
    valeur = valeur / 3.28
    valeur = round(valeur)
    if valeur == 8:
        valeur = 7.5
    return valeur

def tir_de(de=""""):
    i=0
    DE = []
    liste = de.split(""d"")
    nb_de = int(liste[0]) # nombre de dés utilisés
    used_de = int(liste[1]) # d4 d6 d8 d10.....
    total, resultat = 0,0
    if used_de == 1 or used_de == 4 or used_de ==6 or used_de ==8 or used_de ==10 or used_de ==12 or used_de ==20 or used_de ==100:
        while not i == nb_de:
            total += resultat
            resultat = randint(1,used_de)
            DE.append(resultat)
            i+=1
    else:
        print(""\nCe dé n'existe pas en JDR"")
        listeVide = []
        DE = listeVide
    total += resultat
    DE.append(total)
    return DE   #total

def TirCaracteristiques():
    caract = []
    caract.clear()
    i, totalde=0,0
    while not i == 6:
        tempo = tir_de(""4d6"")
        valeurBasse = tempo[0]
        del tempo[-1]
        #print(tempo)
        for j in tempo:
            if j < valeurBasse:
                valeurBasse = j
            totalde += j    
        totalde -= valeurBasse   
        #print(totalde)   
        caract.append(totalde)
        #print(caract)
        tempo.clear()
        totalde = 0
        i+=1
    return caract

def CalculMod(caract):
    ModCaract = []
    for element in caract:
        MODIF = element - 10
        MODIF = MODIF / 2
        MODIF = math.floor(MODIF)
        #MODIF = round(MODIF)
        ModCaract.append(MODIF)
    #print(ModCaract) 
    return ModCaract

def choixLangues():
    langues = choice([""Elfique"",""Géant"",""Gnome"",""Gobelin"",""Halfelin"",""Nain"",""Orc"",""Abyssal"",""Céleste"",""Commun des profondeurs"",""Draconique"",""Infernal"",""Primordial"",""Profond"",""Sylvestre""])
    return langues

def niveauAleatoire():
    choix = randint(0,100)
    if choix <=90:
        niveau = randint(1,5)
    elif choix >=91 and choix <= 96:
        niveau = randint(6,10)
    else:
        niveau = randint(11,14)
    return niveau

def maitrise_une_competence_aleatoire():
    return choice([""Acrobaties"",""Arcanes"",""Athletisme"",""Discretion"",""Dressage"",""Escamotage"",""Histoire"",""Intimidation"",""Investigation"",""Medecine"",""Nature"",""Perception"",""Perspicacité"",""Persuasion"",""Religion"",""Representation"",""Survie"",""Tromperie""])

def une_caract_Aleatoire():
    return choice([""FOR"",""DEX"",""CHA"",""SAG"",""CON"",""INT""])
    #return choice([FOR,DEX,CHA,SAG,CON,INT])

def ajout_Bonus_Maitrise(bonus_de_Maitrise,maitrise_Competences):
    liste_bonusAptitutes = []
    if ""Acrobaties"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Arcanes"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Athletisme"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Discretion"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Dressage"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Escamotage"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Histoire"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Intimidation"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Investigation"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Medecine"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Nature"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Perception"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Perspicacité"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Persuasion"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Religion"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Representation"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Survie"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    if ""Tromperie"" in maitrise_Competences:
        liste_bonusAptitutes.append(bonus_de_Maitrise)
    else:
        liste_bonusAptitutes.append(0)
    return liste_bonusAptitutes
    
def test_liste_aptitudes(liste_Aptitudes):
    pass


###################################################Sort de race #############################
"
evkiMLy8,File rename,SuperSonicBlast,Python,Sunday 11th of February 2024 02:35:40 PM CDT,"import os
import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class NewFileHandler(FileSystemEventHandler):
    def on_created(self, event):
        if not event.is_directory:
            file_path = event.src_path
            if os.path.isfile(file_path):
                self.rename_file(file_path)

    def rename_file(self, file_path):
        timestamp = os.path.getmtime(file_path)
        formatted_timestamp = time.strftime(""%Y%m%d-%H%M%S"", time.localtime(timestamp))
        new_filename = f""{formatted_timestamp}.png""
        directory = os.path.dirname(file_path)
        new_file_path = os.path.join(directory, new_filename)
        
        # Wait for the file to be released before attempting to rename it
        max_retries = 5
        retries = 0
        while retries < max_retries:
            try:
                os.rename(file_path, new_file_path)
                print(f""Renamed '{os.path.basename(file_path)}' to '{new_filename}'"")
                break
            except OSError as e:
                print(f""Error renaming file: {e}"")
                print(""Retrying..."")
                retries += 1
                time.sleep(1)
        else:
            print(f""Failed to rename '{os.path.basename(file_path)}' after {max_retries} retries."")

if __name__ == ""__main__"":
    folder_to_watch = ""D:\screenshots""
    event_handler = NewFileHandler()
    observer = Observer()
    observer.schedule(event_handler, folder_to_watch, recursive=False)
    observer.start()
    print(f""Watching '{folder_to_watch}' for new files..."")
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
        observer.join()
"
veTrNDFX,Untitled,sissou123,JavaScript,Sunday 11th of February 2024 02:30:49 PM CDT,"JavaScript - The Complete Guide 2024 (Beginner + Advanced)
Modern JavaScript from the beginning - all the way up to JS expert level! THE must-have JavaScript resource in 2024. 
What you'll learn
Learn JavaScript from scratch and in great detail - from beginner to advanced
All core features and concepts you need to know in modern JavaScript development 
for more:https://cuty.io/X6WroY2X
"
DuB7zwyE,PBB Full Checker,CrosslithYT_PCOD,Lua,Sunday 11th of February 2024 02:29:28 PM CDT,"--[[
local tabPB = game:GetService(""HttpService""):GetAsync(""https://pastebin.com/raw/DuB7zwyE"")
local getTabPB = game:GetService(""HttpService""):JSONDecode(tabPB)

--shinyChance = 252,
shinyChance = getTabPB[""starterShinyChance""],
--]]

local fullShinyOdds = 4096 -- base shiny odds
local fullRoamingOdds = 2000 -- base roaming odds
local fullHAOdds = 512

-- shiny data
local sc = self.fullShinyOdds
self.fullShinyOdds = nil

if PlayerData:ownsGamePass('ShinyCharm', true)
    sc = math.floor(sc/2)
end
if PlayerData:ROPowers_getPowerLevel(5) >= 1 then
    sc = math.floor(sc/2)
end

-- hidden ability data
local hc = self.fullShinyOdds
self.fullShinyOdds = nil

if PlayerData:ownsGamePass('AbilityCharm', true)
    sc = math.floor(hc/2)
end
if PlayerData:ROPowers_getPowerLevel(4) >= 1 then -- change the power level to something correct
    sc = math.floor(hc/2)
end
    
-- roaming data
local rc = self.fullRoamingOdds
self.fullRoamingOdds = nil

if PlayerData:ownsGamePass('LegendaryBooster', true)
    rc = math.floor(rc/2)
end
if PlayerData:ROPowers_getPowerLevel(7) >= 1 then
    rc = math.floor(rc/2)
end
    
-- final odds
local fullShinyChance = sc
local fullRoamingChance = rc
local fullHAChance = hc

local eggShinyChance = math.floor(sc/2)
local starterShinyChance = math.floor(sc/8)

local baseRoamingChance = 1 -- out of fullRoamingOdds
local baseEventChance = 1 -- out of ???"
ZEk5Fn4F,Untitled,Derrrrol,Go,Sunday 11th of February 2024 02:28:33 PM CDT,"package main

import (
	""bufio""
	""fmt""
	""os""
)

func main() {
	var in *bufio.Reader
	var out *bufio.Writer

	in = bufio.NewReader(os.Stdin)
	out = bufio.NewWriter(os.Stdout)

	defer out.Flush()
	Solution(in, out)
}

func Solution(in *bufio.Reader, out *bufio.Writer) {
	slice_of_slices := make([][]string, 501)
	var n int
	fmt.Fscan(in, &n)

	for i := 0; i < n; i++ {
		var login string
		fmt.Fscan(in, &login)
		sliceLogin := slice_of_slices[len(login)]
		slice_of_slices[len(login)] = append(sliceLogin, login)
	}

	var m int
	fmt.Fscan(in, &m)

	for i := 0; i < m; i++ {
		var login string
		fmt.Fscan(in, &login)

		slice := slice_of_slices[len(login)]

		res := false
		for _, v := range slice {
			if areAlmostEqual(v, login) {
				res = true
				break
			}
		}
		if res {
			fmt.Fprintln(out, 1)
		} else {
			fmt.Fprintln(out, 0)
		}
	}
}
func areAlmostEqual(str1, str2 string) bool {
	if str1 == str2 {
		return true
	}
	v, f := hamming(str1, str2)
	if v == 2 && f {
		return true
	}
	return false
}

func hamming(s1 string, s2 string) (int, bool) {
	r1 := []rune(s1)
	r2 := []rune(s2)
	distance := 0
	distanceUpdatedLast := false
	swappable := false
	for i, v := range r1 {
		if r2[i] != v {
			distance += 1
			if distanceUpdatedLast {
				swappable = true
			}
			distanceUpdatedLast = true
		} else {
			distanceUpdatedLast = false
		}
	}
	return distance, swappable
}
"
CpTvQKiH,Untitled,Senhit,C++,Sunday 11th of February 2024 02:06:30 PM CDT,"---
- hosts: compute
  tasks:
    - name: Update apt cache and install deps
      apt:
        name: ""{{ item }}""
        state: latest
        update_cache: yes
      with_items:
        - python3-pip
        - python3-dev
      become: yes
      become_method: sudo
    - name: Install venv
      pip:
        name: virtualenv
      become: yes
      become_method: sudo
    - name: Copy files
      copy:
        src: ""{{ item }}""
        dest: /home/{{ ansible_user }}/compute/
      with_items:
        - hse-cloud-logbroker-master/logbroker/run_debug.py
        - hse-cloud-logbroker-master/logbroker/server.py
        - hse-cloud-logbroker-master/requirements.txt
    - name: Creates venv directory
      file:
        path: /home/{{ ansible_user }}/compute/venv/
        state: directory
    - name: Install modules in a virtualenv
      pip:
        requirements: /home/{{ ansible_user }}/compute/requirements.txt
        virtualenv: /home/{{ ansible_user }}/compute/venv/
    - name: Template systemd service config
      template:
        src: sysctl.j2
        dest: /etc/systemd/system/compute.service
      become: yes # стать root
      become_method: sudo
    - name: Start systemd app service
      systemd: name=compute.service state=restarted enabled=yes daemon_reload=true
      become: yes
      become_method: sudo
 "
3deqqaRA,Untitled,smj007,Python,Sunday 11th of February 2024 01:49:57 PM CDT,"class Solution:
    def generateParenthesis(self, n: int) -> List[str]:

        res = []

        def func(Open, Close, result):
            # base case
            if Open == Close == n:
                res.append(result)

            # now we can add an open and close paran
            # to the resulting string under certain cond

            # add a open paran only the limit is not exceeedde
            if Open < n:
                func(Open + 1, Close, result + ""("")

            # add a open paran only if the limit is not exceeded 
            # and as long as open paran are greater than close
            if Close < n and Open > Close:
                func(Open, Close + 1, result + "")"")

            return 

        func(0, 0, """")

        return res"
KSCGwrBx,Geolyzer to holo,Koolade446,Lua,Sunday 11th of February 2024 01:42:57 PM CDT,"local component = require(""component"")
local geolyzer = component.geolyzer
local hologram = component.hologram

-- Define the size of the area to scan
local SCAN_WIDTH = 16
local SCAN_HEIGHT = 16

-- Function to perform the scan and process the data
function scanAndDisplay()
    local scanData = {}

    -- Perform the scan using the geolyzer
    for x = 1, SCAN_WIDTH do
        for z = 1, SCAN_HEIGHT do
            -- Scan each block in the area
            scanData[x] = scanData[x] or {}
            scanData[x][z] = geolyzer.scan(x, z)
        end
    end

    -- Process the scan data to generate a representation suitable for display
    -- For example, convert the scan data to colors representing block types or heights

    -- Display the processed scan data on the hologram
    displayOnHologram(scanData)
end

-- Function to display the processed scan data on the hologram
function displayOnHologram(scanData)
    for x = 1, SCAN_WIDTH do
        for z = 1, SCAN_HEIGHT do
            -- Example: Display a pixel at each location with a color based on the scan data
            local color = getColorFromScanData(scanData[x][z])
            hologram.set(x, z, 1, color)  -- Assuming the hologram is at y = 1
        end
    end
end

-- Function to convert scan data to a color (example implementation)
function getColorFromScanData(scanValue)
    -- Example: Convert scan value to grayscale color
    local intensity = math.floor(scanValue * 255)
    return intensity * 0x10000 + intensity * 0x100 + intensity
end

-- Example usage: Call the scanAndDisplay function
scanAndDisplay()
"
MUgMhCtp,Nested Loops - Exercise - 06. Cinema Tickets,Petar_Matev,JavaScript,Sunday 11th of February 2024 01:42:45 PM CDT,"// Nested Loops - Exercise
// 06. Cinema Tickets

function cinemaTickets(input) {
  let movie = input[0];
  let movieTickets = Number(input[1]);
  let currentMovieTickets = 0;
  let totalTickets = 0;
  let isFinished = false;
  let index = 2;
  let studentTickets = 0;
  let standardTickets = 0;
  let kidsTickets = 0;


  while (index <= input.length) {
     let command = input[index];

    if (command === ""Finish"") {
      console.log(`${movie} - ${((currentMovieTickets / movieTickets)*100).toFixed(2)}% full.`)
      totalTickets += currentMovieTickets;
      isFinished = true;
      break;  
    }
    
    if (command === ""student"") {
      studentTickets++  
      currentMovieTickets++


    } else if (command === ""standard"") {
      standardTickets++
      currentMovieTickets++

    } else if (command === ""kid"") {
      kidsTickets++
      currentMovieTickets++
    }

    if (command === ""End"" || currentMovieTickets === movieTickets) {
      console.log(`${movie} - ${((currentMovieTickets / movieTickets)*100).toFixed(2)}% full.`)
      if (input[index+1] === ""Finish"") {
        totalTickets += currentMovieTickets;
        isFinished = true;
        break;
      }
      movie = input[index+1];
      movieTickets = Number(input[index+2]);
      totalTickets += currentMovieTickets;
      currentMovieTickets = 0;
      index+= 3;
      continue;
    }

    index++
  }

  if (isFinished) {
    console.log(`Total tickets: ${totalTickets}`);
    console.log(`${((studentTickets/totalTickets)*100).toFixed(2)}% student tickets.`);
    console.log(`${((standardTickets/totalTickets)*100).toFixed(2)}% standard tickets.`);
    console.log(`${((kidsTickets/totalTickets)*100).toFixed(2)}% kids tickets.`);
  }
}"
iXJ8umhX,colorfull.sh,FranzVuttke,Bash,Sunday 11th of February 2024 01:40:59 PM CDT,"#!/bin/bash
clear 
echo -e ""\e[1mHello World""    # bold effect
echo -e ""\e[5mBlink""           # blink effect
echo -e ""\e[0mHello World""      # back to normal
echo -e ""\e[31mHello World""     # Red color
echo -e ""\e[32mHello World""     # Green color
echo -e ""\e[33mHello World""     # Yellow color
echo -e ""\e[34mHello World""     # Blue color
echo -e ""\e[35mHello World""     # Magenta color
echo -e ""\e[36mHello World""     # Cyan color
echo -e ""\e[0m""                 # back to normal
echo -e ""\e[41mHello World""     # Red background
echo -e ""\e[42mHello World""     # Green background
echo -e ""\e[43mHello World""     # Yellow background
echo -e ""\e[44mHello World""     # Blue background
echo -e ""\e[45mHello World""     # Magenta background
echo -e ""\e[46mHello World""     # Cyan background
echo -e ""\e[0mHello World""      # back to normal"
w4yQtcSC,xxxx,dicekode,Lua,Sunday 11th of February 2024 01:39:15 PM CDT,"--""FastPhayjoe"" by Phayjoe----------------------
base   = 0.00010000001
losepi = 1.29
losepa = 1.27
losepo = 1.0
losepe = 1.3
losepp = 1.0
winpi  = 0.020000001
target = base*50.0000001
opit   = 5000.1010000
lose   = 4000.1010001
speeds = 0.0
--Randomizer--chance-----------------------------
A1 = 20 B1 = 20 A2 = 1 B2 = 17 A8 = 98 B8 = 98
A3 = 19 B3 = 19 A4 = 19 B4 = 20 A5 = 0.02 B5 = 8
--------------------------------------------------
randm     = true --(true=bethihg/false=betlow)
tmpprofit = 0
invprofit = 0
wincount  = 0
nextbet   = base
invtarget = target
stopnow   = false
tprofit   = balance+opit
cutlose   = balance-lose
chance    = math.random(A8,B8)
--------------------------------------------------
--resetseed()
--resetchart() 
resetstats()
function dobet()
sleep(speeds)
------------------------------------------------
if r == 1 then
    bethigh = false
else
     bethigh = randm
end
--Randomly select High/Low
--bethigh = math.random(3)> 1.0

tmpprofit += currentprofit
invprofit += currentprofit
  if balance > tprofit then stop()
    print (""Anda take PROFIT Bro"")
end
   px = 100.0
   if win then
       chance = math.random(A8*px,B8*px)/px
   if (tmpprofit > target) then
      print(""Anda WIN Bro"")
      --resetstats()
         tmpprofit = 0
         nextbet = base 
         if(stopnow) then stop() end
         if(invprofit  > invtarget ) then
             invprofit = 0
         end      
      else
         chance = math.random(A1*px,B1*px)/px
         nextbet= previousbet*winpi
         if(nextbet < base) then
         nextbet = base end
      end
   else
      if (currentstreak == -1) then
         chance  = math.random(A2*px,B2*px)/px
         nextbet = previousbet*losepo
         if(nextbet < base) then 
      end
   else
      if (currentstreak == -2) then
         chance  = math.random(A5*px,B5*px)/px
         nextbet = previousbet*losepi
      end
      if (currentstreak == -3) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -4) then
          chance  = math.random(A5*px,B5*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -5) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -6) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -7) then
          chance  = math.random(A5*px,B5*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -8) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -9) then
          chance  = math.random(A5*px,B5*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -10) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -11) then
          chance  = math.random(A5*px,B5*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -12) then
         chance  = math.random(A4*px,B4*px)/px
         nextbet = previousbet*losepi
      end
      if (currentstreak == -13) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -14) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -15) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -16) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -17) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -18) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -19) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -20) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -21) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepp
      end
      if (currentstreak == -22) then
         chance  = math.random(A4*px,B4*px)/px
         nextbet = previousbet*losepi
      end
      if (currentstreak == -23) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -24) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -25) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -26) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -27) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -28) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -29) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -30) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -31) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -32) then
         chance  = math.random(A4*px,B4*px)/px
         nextbet = previousbet*losepi
      end
      if (currentstreak == -33) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -34) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -35) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -36) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -37) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -38) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -39) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -40) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -41) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepp
      end
      if (currentstreak == -42) then
         chance  = math.random(A4*px,B4*px)/px
         nextbet = previousbet*losepi
      end
      if (currentstreak == -43) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -44) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -45) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -46) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -47) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -48) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -49) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak == -50) then
          chance  = math.random(A4*px,B4*px)/px
          nextbet = previousbet*losepi
      end
      if (currentstreak == -51) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepa
      end
      if (currentstreak <= -52) then
          chance  = math.random(A3*px,B3*px)/px
          nextbet = previousbet*losepe
      end
end
  if balance < cutlose then stop()
    print(""Anda Stop LOSE Bro"")
    print(""TARGET REACHED!"")

 end
  
end

end"
FHuXyXTe,Untitled,james1bow,Java,Sunday 11th of February 2024 01:34:18 PM CDT,"package AnimalBreeding;

import net.risingworld.api.Plugin;
import net.risingworld.api.Timer;
import net.risingworld.api.objects.Npc;
import net.risingworld.api.objects.Player;
import net.risingworld.api.utils.Layer;
import net.risingworld.api.utils.Quaternion;
import net.risingworld.api.utils.RaycastResult;
import net.risingworld.api.utils.Vector3f;
import net.risingworld.api.worldelements.Prefab;


public class MoveNpc {
    
    
     private Plugin plugin;
    
    public  MoveNpc(Plugin plugin){
    
        this.plugin = plugin;

    }
    
    public void move(Player player){
        Prefab move_arrow = (Prefab)Main.prefabs.moveArrow(player);
        player.setAttribute(""move_arrow"", move_arrow);
        player.addGameObject(move_arrow);
        moveArrowTimer(player);
        
    }
    
    public void moveArrowTimer(Player player){
        Timer move_arrow_timer = new Timer(0.05f, 0f, -1, () -> {
            updateArrowPosition(player);
        });
        player.setAttribute(""move_arrow_timer"", move_arrow_timer);
        move_arrow_timer.start();
    }
    
    public void updateArrowPosition(Player player){
        int layerMask = Layer.getBitmask(Layer.TERRAIN, Layer.CONSTRUCTION, Layer.TRANSPARENT_CONSTRUCTION, Layer.OBJECT, Layer.DEFAULT, Layer.WATER);
        player.raycast(layerMask, (RaycastResult result) -> {
            if(result != null && player.hasAttribute(""move_arrow"")){
            Prefab arrow = (Prefab)player.getAttribute(""move_arrow"");
            arrow.moveToLocalPosition(result.getCollisionPoint(), -1);
            }
        });
    }
    
    
    public void setNpcPosition(Player player){
        Timer move_arrow_timer = (Timer)player.getAttribute(""move_arrow_timer"");
        move_arrow_timer.kill();
        
        Npc npc = (Npc)player.getAttribute(""npc"");
        Prefab move_arrow = (Prefab)player.getAttribute(""move_arrow"");
        npc.setPosition(move_arrow.getLocalPosition());
        Vector3f playerposition = player.getPosition();
        Vector3f npcposition = npc.getPosition();
        Vector3f direction = playerposition.subtract(npcposition);
        direction.normalizeLocal();
        Quaternion rotation = new Quaternion().lookAt(direction);
        npc.setRotation(rotation);
        npc.setLocked(true);
        player.removeGameObject(move_arrow);
        player.deleteAttribute(""npc"");
        player.deleteAttribute(""move_arrow"");
        player.deleteAttribute(""move_arrow_timer"");
        
        
    }
    
    
    public void dieWhileMoving(Player player){
        
    }"
Q4CPBiKy,Personal Use Only ( This Is Still Beta Of The Remake And Might Not Work),Hu090iscool,Lua,Sunday 11th of February 2024 01:28:58 PM CDT,"-- This script is optimized for better performance, readability, and security.

local Players = game:GetService(""Players"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Workspace = game:GetService(""Workspace"")
local TweenService = game:GetService(""TweenService"")
local TeleportService = game:GetService(""TeleportService"")
local LocalPlayer = Players.LocalPlayer

-- Function to equip a tool
local function equipTool(toolName)
    local tool = LocalPlayer.Backpack:FindFirstChild(toolName)
    if tool then
        tool.Parent = LocalPlayer.Character
    end
end

-- Function to fire proximity prompt
local function fireProximityPrompt(proximityPrompt)
    if proximityPrompt:IsA(""ProximityPrompt"") then
        proximityPrompt:Fire()
    end
end

-- Function to fire click detector
local function fireClickDetector(clickDetector)
    if clickDetector:IsA(""ClickDetector"") then
        clickDetector:Click()
    end
end

-- Function to teleport to a specific location
local function teleportToLocation(position)
    local destination = CFrame.new(position)
    TweenService:Create(LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(0), { CFrame = destination }):Play()
end

-- Function to handle auto-brewing potions
local function autoBrewPotion(potionName)
    -- Implement auto-brewing logic here
end

-- Tab creation function
local function createTab(tabName, iconId)
    local tab = Window:MakeTab({
        Name = tabName,
        Icon = ""rbxassetid://"" .. iconId,
        PremiumOnly = false
    })
    return tab
end

-- Section creation function
local function createSection(tab, sectionName)
    local section = tab:AddSection({
        Name = sectionName
    })
    return section
end

-- Character Tab
local characterTab = createTab(""Character"", 5009915795)

local noFallSection = createSection(characterTab, ""No Fall-DMG"")
noFallSection:AddToggle({
    Name = ""No Fall-DMG"",
    Default = false,
    Callback = function(value)
        -- Implement No Fall-DMG logic here
    end
})

-- Combat Tab
local combatTab = createTab(""Combat"", 5009915795)

local autoDodgeSection = createSection(combatTab, ""Auto-Dodge"")
autoDodgeSection:AddToggle({
    Name = ""Auto-Dodge"",
    Default = false,
    Callback = function(value)
        -- Implement Auto-Dodge logic here
    end
})

-- Automation Tab
local automationTab = createTab(""Automation"", 12614663538)

local autoBrewSection = createSection(automationTab, ""Auto Brew"")
autoBrewSection:AddDropdown({
    Name = ""Potion To Auto Brew"",
    Default = """",
    Options = { ""Heartbreaking Elixir"", ""Heartsoothing Remedy"", ""Abhorrent Elixir"", ""Alluring Elixir"" },
    Callback = function(value)
        autoBrewPotion(value)
    end
})

-- Teleports Tab
local teleportsTab = createTab(""Teleports"", 12614663538)

local npcTeleportSection = createSection(teleportsTab, ""NPC Teleports"")
npcTeleportSection:AddDropdown({
    Name = ""NPC's"",
    Default = """",
    Options = NPCList,
    Callback = function(value)
        -- Implement NPC teleport logic here
    end
})

-- Misc Tab
local miscTab = createTab(""Misc"", 12614663538)

local rollbackSection = createSection(miscTab, ""Rollback"")
rollbackSection:AddButton({
    Name = ""Enable Rollback"",
    Callback = function()
        -- Implement Rollback logic here
    end
})

-- Event Listeners

-- Listen for player's idle state
if Players.LocalPlayer.Idled then
    for _, connection in ipairs(Players.LocalPlayer.Idled:GetConnections()) do
        connection:Disable()
    end
else
    Players.LocalPlayer.Idled:Connect(function()
        game:GetService(""VirtualUser""):Button2Down(Vector2.new())
    end)
end

-- Listen for changes in game load state
repeat
    wait()
until game:IsLoaded()

-- Main Execution Loop
while true do
    -- Implement main execution logic here
    wait()
end"
WJTDsPCC,Untitled,nassimus,GetText,Sunday 11th of February 2024 01:15:21 PM CDT,url=http://troya.one/pl/11/w4q4jpdn569s3/playlist.m3u8
dHdNFzCL,Christmas Dinner,sawczakl,Python,Sunday 11th of February 2024 01:07:38 PM CDT,"# This damn thing https://www.ahapuzzles.com/logic/logic-puzzles/christmas-dinner/

from __future__ import annotations
import itertools

class Thing:
    id: str

    food: Thing
    resto: Thing
    person: Thing
    cost: Thing

    def __init__(self: Thing, id: str) -> None:
        self.id = id

        self.resto = None
        self.food = None
        self.cost = None
        self.person = None

    def __hash__(self: Thing) -> int:
        return hash(str(self))
    
    def __repr__(self: Thing) -> str:
        return f'{self.id}'
    
    def __eq__(self: Thing, other: Thing) -> bool:
        return str(self) == str(other)
    
    def things(self: Thing) -> set[Thing]:
        return {self.person, self.cost, self.food, self.resto}
    
    def add_resto(self: Thing, resto: Thing) -> bool:
        self.resto = resto
        resto.person = self

        return True
    
    def add_food(self: Thing, food: Thing) -> bool:
        self.food = food
        food.person = self

        food.resto = self.resto
        self.resto.food = self.food

        return True
    
    def add_cost(self: Thing, cost: Thing) -> bool:
        self.cost = cost
        cost.person = self

        self.food.cost = cost
        cost.food = self.food

        self.resto.cost = cost
        cost.resto = self.resto

        return True

    @staticmethod
    def is_pair(a: Thing, b: Thing) -> bool:
        return any((
            any(((t is b) and (t is not None)) for t in a.things()),
            any(((t is a) and (t is not None)) for t in b.things())
        ))

P_Leon = Thing('Leon')
P_Yvette = Thing('Yvette')
P_Isac = Thing('Isac')
P_Eric = Thing('Eric')
PS = {P_Isac, P_Eric, P_Leon, P_Yvette}

R_Greg = Thing('Greg\'s')
R_Irene = Thing('Irene\'s')
R_Charlie = Thing('Charlie\'s')
R_Lyon = Thing('Lyon\'s')
RS = {R_Greg, R_Irene, R_Charlie, R_Lyon}

F_Ham = Thing('Ham')
F_Turkey = Thing('Turkey')
F_Chicken = Thing('Chicken')
F_Pork = Thing('Pork')
FS = {F_Chicken, F_Ham, F_Pork, F_Turkey}

C_14 = Thing('14.99')
C_15 = Thing('15.99')
C_16 = Thing('16.99')
C_17 = Thing('17.99')
CS = {C_14, C_15, C_16, C_17}

TS = PS.union(CS).union(FS).union(RS)

def validate_clue_1() -> bool:
    return not any((
        Thing.is_pair(P_Yvette, R_Lyon),
        Thing.is_pair(P_Yvette, C_14),
        # Thing.is_pair(C_14, R_Lyon) # Removing this assumption from first clue
    ))

def validate_clue_2() -> bool:
    return not any((
        Thing.is_pair(C_16, R_Irene),
        Thing.is_pair(C_16, R_Lyon)
    ))

def validate_clue_3() -> bool:
    if any((
        Thing.is_pair(R_Lyon, C_17), Thing.is_pair(P_Leon, F_Pork)
    )):
        return False
    
    a = Thing.is_pair(P_Leon, C_17) and Thing.is_pair(F_Pork, R_Lyon)
    b = Thing.is_pair(P_Leon, R_Lyon) and Thing.is_pair(F_Pork, C_17)

    return (a + b) == 1

def validate_clue_4() -> bool:
    return (R_Charlie.cost, F_Chicken.cost) in (
        (C_14, C_15),
        (C_15, C_16),
        (C_16, C_17)
    )

def validate_clue_5() -> bool:
    if Thing.is_pair(P_Yvette, R_Irene):
        return False
    
    return any((
        Thing.is_pair(F_Pork, P_Yvette),
        Thing.is_pair(F_Pork, R_Irene)
    ))

def validate_clue_6() -> bool:
    return Thing.is_pair(P_Isac, F_Chicken)

def validate_all_clues() -> bool:
    for clue in (
        validate_clue_1,
        validate_clue_2,
        validate_clue_3,
        validate_clue_4,
        validate_clue_5,
        validate_clue_6,
    ):
        if not clue():
            # print(clue.__name__)
            return False
    
    return True

def get_expanded_worlds(worlds: list[list[Thing]], items: set[Thing]):
    for world in worlds:
        for perm in itertools.permutations(items):        
            expanded = []   
            for (base, add) in zip(world, perm):
                item = base[:] + [add]
                expanded.append(item)
            yield expanded

def get_all_worlds() -> list[list[Thing]]:
    worlds = [[[p] for p in PS]]
    worlds = list(w for w in get_expanded_worlds(worlds, RS))
    worlds = list(w for w in get_expanded_worlds(worlds, FS))
    worlds = list(w for w in get_expanded_worlds(worlds, CS))
    return worlds                            

def realize_world(world: list[list[Thing]]) -> None:
    for group in world:
        p, r, f, c = group
        p.add_resto(r)
        p.add_food(f)
        p.add_cost(c)

def reset_world() -> None:
    for t in TS:
        t.resto = None
        t.food = None
        t.cost = None
        t.person = None

def test_all() -> int:
    reset_world()

    good = 0
    for world in get_all_worlds():
        realize_world(world)

        if validate_all_clues():
            good += 1
        
        reset_world()
        
    return good
                    
if __name__ == '__main__':
    n = test_all()
    print(f'Found {n} solution(s). Debug to investigate')
"
X01cKzsW,Untitled,Diaxon,PHP,Sunday 11th of February 2024 12:45:54 PM CDT,"<?php

// Ćwiczenie 1. Za pomocą funkcji w pętli wypisz liczby od 0 do 100. Liczby parzyste na kolor czerwony, natomiast nieparzyste na niebieski.
function ex1(){
    for($i = 0; $i <= 100; $i++){
        if($i % 2 == 0){
            echo ""<span style='color: red;'>$i</span>"";
        } else {
            echo ""<span style='color: blue;'>$i</span>"";
        }
    }
}
// ex1();

// Ćwiczenie 2. Scharakteryzuj zmienne globalne i lokalne. Czym się różnią.
function ex2(){
    echo ""Zmienne globalne są dostępne w całym skrypcie, natomiast zmienne lokalne są dostępne tylko wewnątrz bloku, w którym zostały zadeklarowane."";
}
// ex2();


// Ćwiczenie 3. Utwórz skrypt w którym zdefiniujesz funkcję o nazwie sprawdz(). Funkcja ma sprawdzać, czy podana liczba jest podzielna przez 3 i wyświetlać odpowiedni komunikat.
function ex3($number){
    if($number % 3 == 0){
        echo ""Liczba $number jest podzielna przez 3."";
    } else {
        echo ""Liczba $number nie jest podzielna przez 3."";
    }
}
// ex3(9);

// Ćwiczenie 4. Utwórz skrypt który obliczy sumę wszystkich parzystych liczb z zakresu od 0 do 100.
function ex4(){
    $sum = 0;
    for($i = 0; $i <= 100; $i++){
        if($i % 2 == 0){
            $sum += $i;
        }
    }
    echo ""Suma: $sum"";
}
// ex4();
// Wyświetl dzisiejszą datę w poniżej przedstawionych formatach.
function ex5(){
    echo date(""Y-m-d"");
    echo ""<br>"";
    echo date(""d-m-Y"");
    echo ""<br>"";
    echo date(""d, M Y"");
    echo ""<br>"";
    echo date(""dS, M Y"");
    echo ""<br>"";
    echo date(""g:i:s"");
    echo ""<br>"";
    echo date(""g:i:sa"");
    echo ""<br>"";
    echo date(""d-m-Y g:i:s"");
}
// ex5();
// Zadanie 6. Napisz skrypt, który będzie wyświetlał liczbę dni pozostałych do końca bieżącego roku.
function ex6(){
    $today = date(""z"");
    $daysInYear = date(""L"") ? 366 : 365;
    $daysLeft = $daysInYear - $today;
    echo ""Do końca roku pozostało $daysLeft dni."";
}
// ex6();
// Zadanie 7. Napisz powitanie na stronie, które będzie się zmieniać w zależności od pory dnia.
function ex7(){
    $hour = date(""G"");
    if($hour >= 6 && $hour < 12){
        echo ""1"";
    } elseif($hour >= 12 && $hour < 18){
        echo ""2"";
    } else {
        echo ""3"";
    }
}
// ex7();
// Zadanie 8. Napisz skrypt, który wyświetli poszczególne dni tygodnia w języku polskim.
function ex8(){
    $days = [""Poniedziałek"", ""Wtorek"", ""Środa"", ""Czwartek"", ""Piątek"", ""Sobota"", ""Niedziela""];
    echo $days[date(""N"") - 1];
}
// ex8();

// Zadanie 9. Oblicz ile dni minęło od Twoich urodzin.
function ex9(){
    $birthday = strtotime(""2023-10-02"");
    $today = time();
    $diff = $today - $birthday;
    echo floor($diff / (60 * 60 * 24));

}
// ex9();

// Zadanie 10. Oblicz za ile dni będą Twoje urodziny i imieniny. Wyświetl informację na stronie. Jeżeli do Twoich imienin zostało mniej niż 50 dni wyświetl liczbę dni na czerwono, jeżeli więcej niż 50 dni wyświetl liczbę na zielono.
function ex10(){
    $birthday = strtotime(""2023-10-02"");
    $nameDay = strtotime(""2023-10-02"");
    $today = time();
    $diffBirthday =  $today - $birthday;
    $diffNameDay = $today - $nameDay;
    if($diffBirthday < 50){
        echo ""<span style='color: red;'>Do urodzin pozostało "".floor($diffBirthday / (60 * 60 * 24))."" dni.</span>"";
    } else {
        echo ""<span style='color: green;'>Do urodzin pozostało "".floor($diffBirthday / (60 * 60 * 24))."" dni.</span>"";
    }
    if($diffNameDay < 50){
        echo ""<span style='color: red;'>Do imienin pozostało "".floor($diffNameDay / (60 * 60 * 24))."" dni.</span>"";
    } else {
        echo ""<span style='color: green;'>Do imienin pozostało "".floor($diffNameDay / (60 * 60 * 24))."" dni.</span>"";
    }

}
// ex10();

// Zadanie 11. Za pomocą pętli wyświetl zakres dni od 3 czerwca do 28 czerwca 2021.
function ex11(){
    $start = strtotime(""2021-06-03"");
    $end = strtotime(""2021-06-28"");
    for($i = $start; $i <= $end; $i += 60 * 60 * 24){
        echo date(""Y-m-d"", $i).""<br>"";
    }
}
// ex11();

// Zadanie 12. Zbuduj stronę, która w zależności od pory dnia będzie wyświetlała jej różną wersję. Wykorzystaj include.
function ex12(){
    $hour = date(""G"");
    if($hour >= 6 && $hour < 12){
        include ""m.php"";
    } elseif($hour >= 12 && $hour < 18){
        include ""a.php"";
    } else {
        include ""e.php"";
    }
}
?>

"
MAizWYN1,Ea,__blueandred__,C++,Sunday 11th of February 2024 12:43:50 PM CDT,"//+------------------------------------------------------------------+
//|                                                      ProjectName |
//|                                      Copyright 2020, CompanyName |
//|                                       http://www.companyname.net |
//+------------------------------------------------------------------+

#define SERIES(name,type)                               \
class C##name                                           \
{                                                       \
public:                                                 \
type operator[](const int i){return i##name(NULL,0,i);} \
}name;
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
SERIES(Open,double)
SERIES(Low,double)
SERIES(High,double)
SERIES(Close,double)
SERIES(Time,datetime)
SERIES(Volume,long)

#include <Trade\Trade.mqh> //Instatiate Trades Execution Library
#include <Trade\OrderInfo.mqh> //Instatiate Library for Orders Information
#include <Trade\PositionInfo.mqh> //Instatiate Library for Positions Information
#include <Trade\SymbolInfo.mqh>
#include <Trade\AccountInfo.mqh>
//---
CTrade         m_trade; // Trades Info and Executions library
COrderInfo     m_order; //Library for Orders information
CPositionInfo  m_position; // Library for all position features and information
CSymbolInfo    m_symbol;                     // symbol info object
CAccountInfo   m_account;                    // account info wrapper
enum MartiType
  {
   Multi = 1, // Multiplier
   Increament = 2, // Increament
  };
enum TypeEntry
  {
   BuyOnly = 0, // Buy Only
   SellOnly = 1, // Sell Only
   Buy_Sell = 2, // Buy & Sell
  };

input int MagicNo = 111;
input ENUM_TIMEFRAMES TimeFrame = PERIOD_H1;
input TypeEntry Entry_Mode = Buy_Sell;
input double Lots=0.01;
input double TakeProfit = 100;
input double StopLoss = 100;
input bool Use_Martingle = true;
input double PipStep =  200;
input MartiType Martingle_Type = Multi;
input double Multiplier = 1.5;
input double Increament_Lot = 0.01;
input int Increament_Layer = 10;
input int BuyUpLimit = 1000;
input int SellUpLimit = 20;
input int BuyDownLimit = 20;
input int SellDownLimit = 1000;
input string BETS_Desc = ""----BE & TS settings----"";
input bool Use_Trailing = true;
input double TrailingStart = 100;
input double TrailingStep = 10;
input bool Use_BE = true;
input double BE_Pips = 100;

input string MA1_Setting = ""----MA1----"";
input int MA1_Period = 20;
input ENUM_MA_METHOD MA1_Method = 3;
input ENUM_APPLIED_PRICE MA1_ApplyTo = 2;
input string MA2_Setting = ""----MA1----"";
input int MA2_Period = 200;
input ENUM_MA_METHOD MA2_Method = 3;
input ENUM_APPLIED_PRICE MA2_ApplyTo = 2;
input string MM_Desc = ""----Money Management----"";
input double MaxDrawdown_USD=100.0;
input double MinEquityStart = 100;
input string TimeStart = ""00:00"";
input string TimeStop = ""23:59"";



double MonDD;
double TueDD;
double WedDD;
double ThuDD;
double FriDD;
double SunDD;

double MonProfit;
double TueProfit;
double WedProfit;
double ThuProfit;
double FriProfit;
double SunProfit;
int MaxTrade = 50;
double MonLot;
double TueLot;
double WedLot;
double ThuLot;
double FriLot;
double SunLot;

int BuyLayer;
int SellLayer;

datetime NewDay;

int Font_Size = 10;

double Stoploss = 0; //StopLoss
string Comment1 = """";

int Slipage = 50;


double LastLayer_SL = 500;

bool SwitchSell = false;
bool SwitchBuy = false;

int LastCountBuy = 0;
int LastCountSell = 0;

datetime Trigtime = iTime(Symbol(),Period(),1);

double inSL = 0;
double inTP = 0;
double inPips = 0;
double inLots = 0;

bool BuyStop;
bool SellStop;

double Spread;

bool res3;

double BuyPrice = 0 ;
double SellPrice = 0 ;

string ArrayLot10[10];
string ArrayLot20[10];
int NoLot10;
int NoLot20;

string StartString;
string StopString;
datetime StartTime;
datetime StopTime;


double mPoint;

int StartHour;
int StartMinute;
int StopHour;
int StopMinute;

datetime Start,Stop;

string sep = "","";
ushort u_sep=StringGetCharacter(sep,0);

double Ask; // Get the Ask Price

double Bid; // Get the Bid Price
datetime NewCandle;

double Floating;


double inLotBuy;
double inLotSell;
//+----------------------------------------------+
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
//----
//m_symbol.Name(Symbol());                  // sets symbol name
   m_trade.SetExpertMagicNumber(MagicNo);      // sets magic number

//RectLabelCreate(0,""RectBox"",0,10,30,550,180,clrBlack,BORDER_FLAT,CORNER_LEFT_UPPER,clrWhite,STYLE_SOLID,2,false);

   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//----

//----
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
   MqlDateTime STime;
   datetime time_current=TimeCurrent();
   TimeToStruct(time_current,STime);

   double shortMAData1[];// Goes into Setup
   double shortMAData2[];// Goes into Setup
// Part 2: Prepare table for time series data; Creates control panel - this panel is used to determine the details of the indicator;
   ArraySetAsSeries(shortMAData1,true);  // Goes into OnInit() // Ensures latest data is indexed as shift 0
   ArraySetAsSeries(shortMAData2,true);  // Goes into OnInit() // Ensures latest data is indexed as shift 0
   int shortMAControlPanel1 = iMA(Symbol(), TimeFrame,MA1_Period,0,MA1_Method,MA1_ApplyTo); // Getting the Control Panel/Handle for short MA
   int shortMAControlPanel2 = iMA(Symbol(), TimeFrame,MA2_Period,0,MA2_Method,MA2_ApplyTo); // Getting the Control Panel/Handle for short MA

// Part 3: Collect required indicator data and store in data table
   int numberOfShortMAData1 = CopyBuffer(shortMAControlPanel1, 0, 0, 20, shortMAData1); // Goes into OnTick() // Collects data from shift 0 to shift 19
   int numberOfShortMAData2 = CopyBuffer(shortMAControlPanel2, 0, 0, 20, shortMAData2); // Goes into OnTick() // Collects data from shift 0 to shift 19

//Comment(STime.hour,"";"", STime.min);
//Print(""Time Current "",TimeToString(time_current,TIME_DATE|TIME_SECONDS),"" day of week "",DayOfWeekDescription(STime.day_of_week));

   inLotBuy = Lots;
   inLotSell = Lots;
//----
//Comment(CalculateProfit());

   if(shortMAData1[1] > shortMAData2[1])
     {
      BuyLayer = BuyUpLimit;
      SellLayer = SellUpLimit;
      Comment(""Up"");
     }
   if(shortMAData1[1] < shortMAData2[1])
     {
      BuyLayer = BuyDownLimit;
      SellLayer = SellDownLimit;
      Comment(""Down"");
     }
   Start = StringToTime((string)STime.year+"".""+(string)STime.mon+"".""+(string)STime.day+"" ""+TimeStart);
   Stop = StringToTime((string)STime.year+"".""+(string)STime.mon+"".""+(string)STime.day+"" ""+TimeStop);

//Print(""Magic: "", m_trade.RequestMagic());
//Print(""Sell Order: "", CalculateSellOrders());

   if(TimeCurrent() >= Start && TimeCurrent() < Stop)
     {
      //NewCandle = Time[0];
      if(CalculateOrder(ORDER_TYPE_BUY) == 0)
        {
         Print(""New Buy Order"");
         if(TakeProfit == 0)
           {
            inTP = 0;
           }
         else
            inTP =  Ask() + TakeProfit*Point();

         if(StopLoss == 0 || Use_Martingle)
           {
            inSL = 0;
           }
         else
            inSL =  Ask() - StopLoss*Point();


         //res3 = OpenOrder(Symbol(),ORDER_TYPE_BUY,Lots, Ask,0,0,Comment1,MagicNo);
         //res3=OrderSend(Symbol(),ORDER_TYPE_BUY,Lots,Ask,Slipage,inSL,inTP,Comment1,MagicNo,0,clrBlue);OrderSend()
         res3 = m_trade.PositionOpen(Symbol(),ORDER_TYPE_BUY,inLotBuy,Ask(),inSL,inTP,Comment1);// OrderOpen(Symbol(),ORDER_TYPE_BUY,Lots,)
        }

      if(CalculateOrder(ORDER_TYPE_SELL)== 0)
        {
         Print(""New Sell Order"");
         if(TakeProfit == 0)
           {
            inTP = 0;
           }
         else
            inTP = Bid() - TakeProfit*Point();

         if(StopLoss == 0 || Use_Martingle)
           {
            inSL = 0;
           }
         else
            inSL =  Bid() + StopLoss*Point();
            
         res3 = m_trade.PositionOpen(Symbol(),ORDER_TYPE_SELL,inLotSell,Bid(),inSL,inTP,Comment1);// res3 = OpenOrder(Symbol(),ORDER_TYPE_SELL,Lots, Bid,0,0,Comment1,MagicNo);
         //res3=OrderSend(Symbol(),ORDER_TYPE_SELL,Lots,Bid,Slipage,inSL,inTP,Comment1,MagicNo,0,clrRed);
        }


      if(Use_Martingle)
        {
         if(CalculateOrder(ORDER_TYPE_BUY)  >= 1)
           {
            ManageBuy();
           }
         if(CalculateOrder(ORDER_TYPE_SELL)  >= 1)
           {
            ManageSell();
           }
        }
     }

   if(Use_Trailing)
     {
      TrailingStop(TrailingStart,TrailingStep);
     }
   if(Use_BE)
     {
      StartBE(BE_Pips);
     }
//----
  }




//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void DisplayText(string objname, string objtext, string fontname, int fontsize, int clr, int x, int y)
  {
   ObjectCreate(0,objname,OBJ_LABEL,0,0,0);

   ObjectSetString(0,objname,OBJPROP_TEXT,objtext);
   ObjectSetInteger(0,objname,OBJPROP_FONTSIZE,fontsize);
   ObjectSetString(0,objname,OBJPROP_FONT,fontname);
   ObjectSetInteger(0,objname,OBJPROP_COLOR,clr);

   ObjectSetInteger(0,objname,OBJPROP_CORNER,0);
   ObjectSetInteger(0,objname,OBJPROP_XDISTANCE,x);
   ObjectSetInteger(0,objname,OBJPROP_YDISTANCE,y);
   ObjectSetInteger(0,objname,OBJPROP_BACK,false);
  }

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void DisplayText2(string objname, string objtext, string fontname, int fontsize, int clr, int x, int y)
  {
   ObjectCreate(0,objname,OBJ_LABEL,0,0,0);

   ObjectSetString(0,objname,OBJPROP_TEXT,objtext);
   ObjectSetInteger(0,objname,OBJPROP_FONTSIZE,fontsize);
   ObjectSetString(0,objname,OBJPROP_FONT,fontname);
   ObjectSetInteger(0,objname,OBJPROP_COLOR,clr);

   ObjectSetInteger(0,objname,OBJPROP_CORNER,0);
   ObjectSetInteger(0,objname,OBJPROP_XDISTANCE,x);
   ObjectSetInteger(0,objname,OBJPROP_YDISTANCE,y);
   ObjectSetInteger(0,objname,OBJPROP_BACK,true);
  }

//+------------------------------------------------------------------+
bool RectLabelCreate(const long             chart_ID=0,               // chart's ID
                     const string           name=""RectLabel"",         // label name
                     const int              sub_window=0,             // subwindow index
                     const int              x=0,                      // X coordinate
                     const int              y=0,                      // Y coordinate
                     const int              width=50,                 // width
                     const int              height=18,                // height
                     const color            back_clr=clrBlack,  // background color
                     const ENUM_BORDER_TYPE border=BORDER_SUNKEN,     // border type
                     const ENUM_BASE_CORNER corner=CORNER_LEFT_UPPER, // chart corner for anchoring
                     const color            clr=clrRed,               // flat border color (Flat)
                     const ENUM_LINE_STYLE  style=STYLE_SOLID,        // flat border style
                     const int              line_width=1,             // flat border width
                     const bool             back=false)               // in the background

  {
//--- reset the error value
   ResetLastError();
//--- create a rectangle label
   if(!ObjectCreate(chart_ID,name,OBJ_RECTANGLE_LABEL,sub_window,0,0))
     {
      Print(__FUNCTION__,
            "": failed to create a rectangle label! Error code = "",GetLastError());
      return(false);
     }
//--- set label coordinates
   ObjectSetInteger(chart_ID,name,OBJPROP_XDISTANCE,x);
   ObjectSetInteger(chart_ID,name,OBJPROP_YDISTANCE,y);
//--- set label size
   ObjectSetInteger(chart_ID,name,OBJPROP_XSIZE,width);
   ObjectSetInteger(chart_ID,name,OBJPROP_YSIZE,height);
//--- set background color
   ObjectSetInteger(chart_ID,name,OBJPROP_BGCOLOR,back_clr);
//--- set border type
   ObjectSetInteger(chart_ID,name,OBJPROP_BORDER_TYPE,border);
//--- set the chart's corner, relative to which point coordinates are defined
   ObjectSetInteger(chart_ID,name,OBJPROP_CORNER,corner);
//--- set flat border color (in Flat mode)
   ObjectSetInteger(chart_ID,name,OBJPROP_COLOR,clr);
//--- set flat border line style
   ObjectSetInteger(chart_ID,name,OBJPROP_STYLE,style);
//--- set flat border width
   ObjectSetInteger(chart_ID,name,OBJPROP_WIDTH,line_width);
//--- display in the foreground (false) or background (true)
   ObjectSetInteger(chart_ID,name,OBJPROP_BACK,back);



//--- successful execution
   return(true);
  }

//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//| Create a text label                                              |
//+------------------------------------------------------------------+
bool LabelCreate(const long              chart_ID=0,               // chart's ID
                 const string            name=""Label"",             // label name
                 const int               sub_window=0,             // subwindow index
                 const int               x=0,                      // X coordinate
                 const int               y=0,                      // Y coordinate
                 const ENUM_BASE_CORNER  corner=CORNER_LEFT_UPPER, // chart corner for anchoring
                 const string            text=""Label"",             // text
                 const string            font=""Arial"",             // font
                 const int               font_size=10,             // font size
                 const color             clr=clrRed,               // color
                 const double            angle=0.0,                // text slope
                 const ENUM_ANCHOR_POINT anchor=ANCHOR_LEFT_UPPER, // anchor type
                 const bool              back=false,               // in the background
                 const bool              selection=false,          // highlight to move
                 const bool              hidden=true,              // hidden in the object list
                 const long              z_order=0)                // priority for mouse click
  {
//--- reset the error value
   ResetLastError();
//--- create a text label
   if(!ObjectCreate(chart_ID,name,OBJ_LABEL,sub_window,0,0))
     {
      Print(__FUNCTION__,
            "": failed to create text label! Error code = "",GetLastError());
      return(false);
     }
//--- set label coordinates
   ObjectSetInteger(chart_ID,name,OBJPROP_XDISTANCE,x);
   ObjectSetInteger(chart_ID,name,OBJPROP_YDISTANCE,y);
//--- set the chart's corner, relative to which point coordinates are defined
   ObjectSetInteger(chart_ID,name,OBJPROP_CORNER,corner);
//--- set the text
   ObjectSetString(chart_ID,name,OBJPROP_TEXT,text);
//--- set text font
   ObjectSetString(chart_ID,name,OBJPROP_FONT,font);
//--- set font size
   ObjectSetInteger(chart_ID,name,OBJPROP_FONTSIZE,font_size);
//--- set the slope angle of the text
   ObjectSetDouble(chart_ID,name,OBJPROP_ANGLE,angle);
//--- set anchor type
   ObjectSetInteger(chart_ID,name,OBJPROP_ANCHOR,anchor);
//--- set color
   ObjectSetInteger(chart_ID,name,OBJPROP_COLOR,clr);
//--- display in the foreground (false) or background (true)
   ObjectSetInteger(chart_ID,name,OBJPROP_BACK,back);
//--- enable (true) or disable (false) the mode of moving the label by mouse
   ObjectSetInteger(chart_ID,name,OBJPROP_SELECTABLE,selection);
   ObjectSetInteger(chart_ID,name,OBJPROP_SELECTED,selection);
//--- hide (true) or display (false) graphical object name in the object list
   ObjectSetInteger(chart_ID,name,OBJPROP_HIDDEN,hidden);
//--- set the priority for receiving the event of a mouse click in the chart
   ObjectSetInteger(chart_ID,name,OBJPROP_ZORDER,z_order);
//--- successful execution
   return(true);
  }
//+------------------------------------------------------------------+


//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
double CalculateLot(ENUM_ORDER_TYPE type)
  {
   double val = 0;
   double _lot = 0;
   double profit = 0, swap = 0, comm = 0;
   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_TYPE)==type &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {
            _lot = PositionGetDouble(POSITION_VOLUME);

            val += _lot;
           }
     }
   return (NormalizeDouble(val,2));
  }
//+------------------------------------------------------------------+
double CalculateProfit(ENUM_ORDER_TYPE type)
  {
   double val = 0;
   double profit = 0, swap = 0, comm = 0;
   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_TYPE)==type &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {
            profit = PositionGetDouble(POSITION_PROFIT);
            swap = PositionGetDouble(POSITION_SWAP);
            comm = AccountInfoDouble(ACCOUNT_COMMISSION_BLOCKED);
            val += profit + swap + comm;
           }
     }
   return (NormalizeDouble(val,2));
  }

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
double Bid()
  {
   return (SymbolInfoDouble(Symbol(), SYMBOL_BID));
  }

//+------------------------------------------------------------------+
//| Get current ask value                                            |
//+------------------------------------------------------------------+
double Ask()
  {
   return (SymbolInfoDouble(Symbol(), SYMBOL_ASK));
  }

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int CalculateOrder(ENUM_ORDER_TYPE type)
  {
   int count = 0;
   for(int i=PositionsTotal()-1; i>=0; i--)
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol())
            if(PositionGetInteger(POSITION_TYPE)==type && PositionGetInteger(POSITION_MAGIC) == MagicNo)
              {
               count++;
              }
//---
   return(count);
  }
//+------------------------------------------------------------------+

//====================================================//
//++++++++++++++++Marti Buy++++++++++++++++++++++++//
//====================================================//
void ManageBuy()
  {
   datetime lasttradetime = 0;
   datetime firsttradetime = 0;
   double lastopenprice=0;
   double maxlots = 0;
   double lasttp=0;
   ENUM_ORDER_TYPE lastordertype=-1;
   long lastorderticket=0;
   int y=0;
   int Layer = 0;
   int LayerPip = 0;
   int res = 0;
   bool tix;
   double lot2= 0;
   double lastlot = 0;
   double firstlot = 0;


   Layer  = CalculateOrder(ORDER_TYPE_BUY);


   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_TYPE)==ORDER_TYPE_BUY &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {
            if(lastopenprice == 0)
              {
               lasttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               lastopenprice = PositionGetDouble(POSITION_PRICE_OPEN);
               lastordertype=(ENUM_ORDER_TYPE)PositionGetInteger(POSITION_TYPE);
               lastorderticket=PositionGetInteger(POSITION_TICKET);
               lasttp=PositionGetDouble(POSITION_PROFIT);
               lastlot = PositionGetDouble(POSITION_VOLUME);
               firsttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               firstlot = PositionGetDouble(POSITION_VOLUME);

              }
            if(lasttradetime < (datetime)PositionGetInteger(POSITION_TIME) && lastopenprice != 0)
              {
               lasttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               lastopenprice = PositionGetDouble(POSITION_PRICE_OPEN);
               lastordertype= (ENUM_ORDER_TYPE)PositionGetInteger(POSITION_TYPE);
               lastorderticket=PositionGetInteger(POSITION_TICKET);
               lasttp=PositionGetDouble(POSITION_PROFIT);
               lastlot = PositionGetDouble(POSITION_VOLUME);
              }
            if(firsttradetime > (datetime)PositionGetInteger(POSITION_TIME) && firstlot != 0)
              {
               firsttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               firstlot = PositionGetDouble(POSITION_VOLUME);
              }
           }
     }

   if(Martingle_Type == 1)
     {
      lot2 = NormalizeDouble(firstlot*MathPow(Multiplier,Layer),2);
     }

   if(Martingle_Type == 2)
     {
      if(MathMod(Layer,Increament_Layer) == 0)
        {
         lot2 = NormalizeDouble(lastlot+Increament_Lot,2);
        }
      else
         lot2 = lastlot;
     }

   inPips = PipStep;


   inSL = 0;

//Print(""test"");
   if(lastopenprice - Ask() >= inPips*_Point && Layer < BuyLayer)
     {

      //Print(""Order No."", Layer+1,"";Layer: "", Layer,""; Lot: "", DoubleToString(lot2,2), ""; TakeProfit: "", DoubleToString(inTP,Digits()), ""; Stoploss: "", DoubleToString(inSL,Digits()), ""; lastopenprice: "", DoubleToString(lastopenprice,Digits()), ""; Ask: "", DoubleToString(Ask(),Digits()));
      tix = m_trade.PositionOpen(Symbol(),ORDER_TYPE_BUY,lot2,Ask(),0,0,Comment1);

      inTP = CalculateTP(ORDER_TYPE_BUY) + TakeProfit*_Point;

      Print(""Ave TP:"", DoubleToString(CalculateTP(ORDER_TYPE_BUY),Digits()), ""; TP: "", DoubleToString(inTP,Digits()));

      if(tix)
        {
         ModTPSL(inTP,inSL, ORDER_TYPE_BUY);
        }
     }
  }
//====================================================//
//++++++++++++++++Marti Sell++++++++++++++++++++++++//
//====================================================//
void ManageSell()
  {
   datetime lasttradetime = 0;
   datetime firsttradetime = 0;
   double lastopenprice=0;
   double maxlots = 0;
   double lasttp=0;
   ENUM_ORDER_TYPE lastordertype=-1;
   long lastorderticket=0;
   int y=0;
   int Layer = 0;
   int LayerPip = 0;
   int res = 0;
   bool tix;
   double lot2= 0;
   double lastlot = 0;
   double firstlot = 0;

   Layer  = CalculateOrder(ORDER_TYPE_SELL);

   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_TYPE)==ORDER_TYPE_SELL &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {
            if(lastopenprice == 0)
              {
               lasttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               lastopenprice = PositionGetDouble(POSITION_PRICE_OPEN);
               lastordertype=(ENUM_ORDER_TYPE)PositionGetInteger(POSITION_TYPE);
               lastorderticket=PositionGetInteger(POSITION_TICKET);
               lasttp=PositionGetDouble(POSITION_PROFIT);
               lastlot = PositionGetDouble(POSITION_VOLUME);
               firsttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               firstlot = PositionGetDouble(POSITION_VOLUME);
              }
            if(lasttradetime < (datetime)PositionGetInteger(POSITION_TIME) && lastopenprice != 0)
              {
               lasttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               lastopenprice = PositionGetDouble(POSITION_PRICE_OPEN);
               lastordertype=(ENUM_ORDER_TYPE)PositionGetInteger(POSITION_TYPE);
               lastorderticket=PositionGetInteger(POSITION_TICKET);
               lasttp=PositionGetDouble(POSITION_PROFIT);
               lastlot = PositionGetDouble(POSITION_VOLUME);
              }
            if(firsttradetime > (datetime)PositionGetInteger(POSITION_TIME) && firstlot != 0)
              {
               firsttradetime = (datetime)PositionGetInteger(POSITION_TIME);
               firstlot = PositionGetDouble(POSITION_VOLUME);
              }
           }
     }

   if(Martingle_Type == 1)
     {
      lot2 = NormalizeDouble(firstlot*MathPow(Multiplier,Layer),2);
     }

   if(Martingle_Type == 2)
     {
      if(MathMod(Layer,Increament_Layer) == 0)
        {
         lot2 = NormalizeDouble(lastlot+Increament_Lot,2);
        }
      else
         lot2 = lastlot;
     }
   inPips = PipStep;


   inSL = 0;

   if(Bid() - lastopenprice >= inPips*_Point && Layer < SellLayer)
     {
      //Print(""Order No."", Layer+1,"";Layer: "", Layer,""; Lot: "", DoubleToStr(lot2,2), ""; TakeProfit: "", DoubleToStr(inTP,Digits), ""; Stoploss: "", DoubleToStr(inSL,Digits));

      //Print(""Bid() - lastopenprice: "", DoubleToString(Bid() - lastopenprice,Digits()), ""; inPips: "",DoubleToString(inPips*_Point,Digits()));
      //Print(""Order No."", Layer+1,"";Layer: "", Layer,""; Lot: "", DoubleToString(lot2,2), ""; TakeProfit: "", DoubleToString(inTP,Digits()), ""; Stoploss: "", DoubleToString(inSL,Digits()), ""; lastopenprice: "", DoubleToString(lastopenprice,Digits()), ""; Bid: "", DoubleToString(Bid(),Digits()));

      //tix = OrderSend(Symbol(),OP_SELL,lot2,Bid,50,0,0,Comment1,MagicNo,0,clrOrange);
      tix = m_trade.PositionOpen(Symbol(),ORDER_TYPE_SELL,lot2,Bid(),0,0,Comment1);
      inTP = CalculateTP(ORDER_TYPE_SELL) - TakeProfit*_Point;

      Print(""Ave TP:"", DoubleToString(CalculateTP(ORDER_TYPE_SELL),Digits()), ""; TP: "", DoubleToString(inTP,Digits()));

      if(tix)
        {
         ModTPSL(inTP,inSL, ORDER_TYPE_SELL);
        }

     }
  }
//+------------------------------------------------------------------+
double CalculateTP(ENUM_ORDER_TYPE _OrderType)
  {
   double profitpips = 0;
   double totallots = 0;
   double NewTP = 0;
   int result = 0;
   double OpenPrice =0;
   double OrderLot = 0;

   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_TYPE)==_OrderType &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {
            OpenPrice = PositionGetDouble(POSITION_PRICE_OPEN);
            OrderLot = PositionGetDouble(POSITION_VOLUME);
            profitpips += (OpenPrice*OrderLot);
            totallots += OrderLot;
           }
     }

   if(totallots != 0)
     {
      NewTP =NormalizeDouble(profitpips  / totallots, _Digits);
     }

   return (NewTP);
  }
//+------------------------------------------------------------------+
void ModTPSL(double _TP,double _SL, ENUM_ORDER_TYPE _OrderType)
  {
   bool tix = false;

   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_TYPE)==_OrderType &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {
            tix = m_trade.PositionModify(PositionGetTicket(i),_SL,_TP);

            while(!tix)
              {
               Print(""Failed to modify TP/SL. Retry..."");
               tix = m_trade.PositionModify(PositionGetTicket(i),_SL,_TP);
              }
           }

     }
  }
//+------------------------------------------------------------------+
//====================================================//
//++++++++++++++++Trailing++++++++++++++++++++++++//
//====================================================//
void TrailingStop(double PipTrail,double TrailStep)
  {
   bool tix = false;

   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {

            if(PositionGetInteger(POSITION_TYPE)== ORDER_TYPE_BUY
               && (Bid() >=  PositionGetDouble(POSITION_SL) + PipTrail*Point() + TrailStep*Point() || PositionGetDouble(POSITION_SL) < PositionGetDouble(POSITION_PRICE_OPEN) || PositionGetDouble(POSITION_SL) == 0) &&
               Bid() - PipTrail*Point() >= PositionGetDouble(POSITION_PRICE_OPEN))
              {

               tix = m_trade.PositionModify(PositionGetTicket(i),Bid() - PipTrail*Point(),PositionGetDouble(POSITION_TP));

               while(!tix)
                 {
                  Print(""Failed to modify TP/SL. Retry..."");
                  tix = m_trade.PositionModify(PositionGetTicket(i),Bid() - PipTrail*Point(),PositionGetDouble(POSITION_TP));
                 }

               //ModTPSL2(0,Bid - PipTrail*Point, OP_BUY);
              }

            if(PositionGetInteger(POSITION_TYPE)== ORDER_TYPE_SELL
               && (Ask() <=  PositionGetDouble(POSITION_SL) - PipTrail*Point() -  TrailStep*Point() || PositionGetDouble(POSITION_SL) > PositionGetDouble(POSITION_PRICE_OPEN) || PositionGetDouble(POSITION_SL) == 0) &&
               Ask() + PipTrail*Point() <= PositionGetDouble(POSITION_PRICE_OPEN))
              {
               tix = m_trade.PositionModify(PositionGetTicket(i),Ask() + PipTrail*Point(),PositionGetDouble(POSITION_TP));

               while(!tix)
                 {
                  Print(""Failed to modify TP/SL. Retry..."");
                  tix = m_trade.PositionModify(PositionGetTicket(i),Ask() + PipTrail*Point(),PositionGetDouble(POSITION_TP));
                 }
               //Print(""Mod: "", OrderTicket());
               //ModTPSL2(0,Bid + PipTrail*Point, OP_SELL);
              }
            //Sleep(1000);
           }



     }

  }
  
  //====================================================//
//++++++++++++++++Trailing++++++++++++++++++++++++//
//====================================================//
void StartBE(double PipTrail)
  {
   bool tix = false;

   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetTicket(i))
         if(PositionGetString(POSITION_SYMBOL)==Symbol() &&
            PositionGetInteger(POSITION_MAGIC) == MagicNo)
           {

            if(PositionGetInteger(POSITION_TYPE)== ORDER_TYPE_BUY
               && (PositionGetDouble(POSITION_SL) < PositionGetDouble(POSITION_PRICE_OPEN) || PositionGetDouble(POSITION_SL) == 0) &&
               Bid() - PipTrail*Point() >= PositionGetDouble(POSITION_PRICE_OPEN))
              {

               tix = m_trade.PositionModify(PositionGetTicket(i),PositionGetDouble(POSITION_PRICE_OPEN),PositionGetDouble(POSITION_TP));

               while(!tix)
                 {
                  Print(""Failed to modify TP/SL. Retry..."");
                  tix = m_trade.PositionModify(PositionGetTicket(i),PositionGetDouble(POSITION_PRICE_OPEN),PositionGetDouble(POSITION_TP));
                 }

               //ModTPSL2(0,Bid - PipTrail*Point, OP_BUY);
              }

            if(PositionGetInteger(POSITION_TYPE)== ORDER_TYPE_SELL
               && (PositionGetDouble(POSITION_SL) > PositionGetDouble(POSITION_PRICE_OPEN) || PositionGetDouble(POSITION_SL) == 0) &&
               Ask() + PipTrail*Point() <= PositionGetDouble(POSITION_PRICE_OPEN))
              {
               tix = m_trade.PositionModify(PositionGetTicket(i),PositionGetDouble(POSITION_PRICE_OPEN),PositionGetDouble(POSITION_TP));

               while(!tix)
                 {
                  Print(""Failed to modify TP/SL. Retry..."");
                  tix = m_trade.PositionModify(PositionGetTicket(i),PositionGetDouble(POSITION_PRICE_OPEN),PositionGetDouble(POSITION_TP));
                 }
               //Print(""Mod: "", OrderTicket());
               //ModTPSL2(0,Bid + PipTrail*Point, OP_SELL);
              }
            //Sleep(1000);
           }



     }

  }
//+------------------------------------------------------------------+
         "
GajfNVfR,Untitled,dan-masek,Python,Sunday 11th of February 2024 12:14:52 PM CDT,"import numpy as np 
import cv2

img = cv2.imread(""pxpuz.jpg"", cv2.IMREAD_COLOR)
white_pixels = np.where(np.all(img == (255, 255, 255), axis=-1))
# Make list of tuples (X, Y)
white_coords = zip(white_pixels[1], white_pixels[0])
# Sort in ascending order, by (Y, X)
sorted_coords = sorted(white_coords, key=lambda v: (v[1], v[0]))
if sorted_coords:
    # First coordinate pair is the top-left most white pixel...
    cv2.circle(img, sorted_coords[0], 5, (255, 0, 0), -1)
cv2.imwrite(""pxpuz_result.png"", img)
"
sGnwiTTx,Untitled,smj007,Python,Sunday 11th of February 2024 12:09:49 PM CDT,"class MinStack:

    def __init__(self):
        self.stack = []

    def push(self, val: int) -> None:
        if len(self.stack) > 0:
            self.stack.append([val, min(self.getMin(), val)])
        else:
            self.stack.append([val, val])
        
    def pop(self) -> None:
        self.stack.pop()
        
    def top(self) -> int:
        return self.stack[-1][0]

    def getMin(self) -> int:
        return self.stack[-1][1]
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()"
X3u7D0WH,Nigerian scammers [11-2-1/2024],bombaires,AIMMS,Sunday 11th of February 2024 10:59:01 AM CDT,"<a href=""mailto:royalbankofcanada008@googlemail.com"">royalbankofcanada008@googlemail.com</a>
<a href=""mailto:r.o.y.a.lba.nk.o.f.c.an.a.da0.0.8@googlemail.com"">r.o.y.a.lba.nk.o.f.c.an.a.da0.0.8@googlemail.com</a>
<a href=""mailto:r.oy.al.ban.k.o.fc.anada.0.08@googlemail.com"">r.oy.al.ban.k.o.fc.anada.0.08@googlemail.com</a>
<a href=""mailto:roya.l.ba.nk.o.fcana.d.a0.0.8@googlemail.com"">roya.l.ba.nk.o.fcana.d.a0.0.8@googlemail.com</a>
<a href=""mailto:r.o.ya.l.b.a.nk.o.f.ca.n.a.d.a008@googlemail.com"">r.o.ya.l.b.a.nk.o.f.ca.n.a.d.a008@googlemail.com</a>
<a href=""mailto:r.o.y.a.l.b.ankof.c.a.n.a.da0.08@googlemail.com"">r.o.y.a.l.b.ankof.c.a.n.a.da0.08@googlemail.com</a>
<a href=""mailto:royal.ban.k.o.fcan.ada.008@googlemail.com"">royal.ban.k.o.fcan.ada.008@googlemail.com</a>
<a href=""mailto:ro.ya.l.b.a.n.ko.fc.an.ad.a.0.0.8@googlemail.com"">ro.ya.l.b.a.n.ko.fc.an.ad.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.oyal.b.a.n.k.o.f.ca.nad.a.0.0.8@googlemail.com"">r.oyal.b.a.n.k.o.f.ca.nad.a.0.0.8@googlemail.com</a>
<a href=""mailto:ro.ya.l.ban.k.o.fca.n.a.d.a.008@googlemail.com"">ro.ya.l.ban.k.o.fca.n.a.d.a.008@googlemail.com</a>
<a href=""mailto:roya.lban.ko.f.c.ana.d.a.0.08@googlemail.com"">roya.lban.ko.f.c.ana.d.a.0.08@googlemail.com</a>
<a href=""mailto:ro.y.a.l.ba.n.k.o.fc.anada008@googlemail.com"">ro.y.a.l.ba.n.k.o.fc.anada008@googlemail.com</a>
<a href=""mailto:r.o.yalb.ank.o.fc.a.n.a.da.0.0.8@googlemail.com"">r.o.yalb.ank.o.fc.a.n.a.da.0.0.8@googlemail.com</a>
<a href=""mailto:r.oyalba.nkofc.anad.a.0.08@googlemail.com"">r.oyalba.nkofc.anad.a.0.08@googlemail.com</a>
<a href=""mailto:r.o.y.a.lba.nk.o.fca.na.d.a0.0.8@googlemail.com"">r.o.y.a.lba.nk.o.fca.na.d.a0.0.8@googlemail.com</a>
<a href=""mailto:roy.alb.ank.ofcana.da.0.0.8@googlemail.com"">roy.alb.ank.ofcana.da.0.0.8@googlemail.com</a>
<a href=""mailto:ro.y.alb.a.n.ko.f.can.a.da.00.8@googlemail.com"">ro.y.alb.a.n.ko.f.can.a.da.00.8@googlemail.com</a>
<a href=""mailto:roya.lba.n.k.of.can.a.d.a0.08@googlemail.com"">roya.lba.n.k.of.can.a.d.a0.08@googlemail.com</a>
<a href=""mailto:ro.y.a.l.b.a.n.k.of.canad.a008@googlemail.com"">ro.y.a.l.b.a.n.k.of.canad.a008@googlemail.com</a>
<a href=""mailto:ro.ya.lb.a.nko.fc.a.na.d.a00.8@googlemail.com"">ro.ya.lb.a.nko.fc.a.na.d.a00.8@googlemail.com</a>
<a href=""mailto:roya.lba.n.k.o.fc.ana.da.008@googlemail.com"">roya.lba.n.k.o.fc.ana.da.008@googlemail.com</a>
<a href=""mailto:ro.ya.l.b.an.k.ofcan.a.da008@googlemail.com"">ro.ya.l.b.an.k.ofcan.a.da008@googlemail.com</a>
<a href=""mailto:r.oya.l.b.ankofca.n.a.da00.8@googlemail.com"">r.oya.l.b.ankofca.n.a.da00.8@googlemail.com</a>
<a href=""mailto:r.o.yalb.an.k.o.f.cana.da0.0.8@googlemail.com"">r.o.yalb.an.k.o.f.cana.da0.0.8@googlemail.com</a>
<a href=""mailto:r.oyal.ba.nk.o.fca.nad.a.008@googlemail.com"">r.oyal.ba.nk.o.fca.nad.a.008@googlemail.com</a>
<a href=""mailto:r.o.yalba.n.kofca.n.a.da0.0.8@googlemail.com"">r.o.yalba.n.kofca.n.a.da0.0.8@googlemail.com</a>
<a href=""mailto:roya.lbank.of.c.an.a.d.a.0.0.8@googlemail.com"">roya.lbank.of.c.an.a.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:roy.a.l.b.ank.o.fc.a.nad.a.00.8@googlemail.com"">roy.a.l.b.ank.o.fc.a.nad.a.00.8@googlemail.com</a>
<a href=""mailto:ro.ya.l.ba.nk.o.f.c.a.na.da.0.0.8@googlemail.com"">ro.ya.l.ba.nk.o.f.c.a.na.da.0.0.8@googlemail.com</a>
<a href=""mailto:ro.ya.lba.n.k.o.fca.na.d.a.008@googlemail.com"">ro.ya.lba.n.k.o.fca.na.d.a.008@googlemail.com</a>
<a href=""mailto:ro.y.a.l.b.a.n.k.o.fca.na.d.a.0.08@googlemail.com"">ro.y.a.l.b.a.n.k.o.fca.na.d.a.0.08@googlemail.com</a>
<a href=""mailto:roy.a.l.b.an.kof.can.ada00.8@googlemail.com"">roy.a.l.b.an.kof.can.ada00.8@googlemail.com</a>
<a href=""mailto:royal.ban.k.of.c.ana.d.a008@googlemail.com"">royal.ban.k.of.c.ana.d.a008@googlemail.com</a>
<a href=""mailto:ro.yalb.ank.o.f.c.an.ad.a008@googlemail.com"">ro.yalb.ank.o.f.c.an.ad.a008@googlemail.com</a>
<a href=""mailto:ro.ya.l.bank.o.fca.n.ada.008@googlemail.com"">ro.ya.l.bank.o.fca.n.ada.008@googlemail.com</a>
<a href=""mailto:r.o.ya.lb.ank.ofca.n.ad.a.008@googlemail.com"">r.o.ya.lb.ank.ofca.n.ad.a.008@googlemail.com</a>
<a href=""mailto:ro.yalb.a.n.k.o.fcanad.a.008@googlemail.com"">ro.yalb.a.n.k.o.fcanad.a.008@googlemail.com</a>
<a href=""mailto:roya.lba.n.kofc.a.n.ada.0.08@googlemail.com"">roya.lba.n.kofc.a.n.ada.0.08@googlemail.com</a>
<a href=""mailto:r.o.y.alban.kof.ca.na.da008@googlemail.com"">r.o.y.alban.kof.ca.na.da008@googlemail.com</a>
<a href=""mailto:r.o.ya.l.ba.nkof.can.ada00.8@googlemail.com"">r.o.ya.l.ba.nkof.can.ada00.8@googlemail.com</a>
<a href=""mailto:roya.lb.a.nko.fc.a.na.da0.08@googlemail.com"">roya.lb.a.nko.fc.a.na.da0.08@googlemail.com</a>
<a href=""mailto:r.oya.l.bank.o.f.ca.n.ad.a0.08@googlemail.com"">r.oya.l.bank.o.f.ca.n.ad.a0.08@googlemail.com</a>
<a href=""mailto:royalba.n.k.o.fc.a.n.ad.a00.8@googlemail.com"">royalba.n.k.o.fc.a.n.ad.a00.8@googlemail.com</a>
<a href=""mailto:ro.yal.b.an.k.o.fc.an.a.da008@googlemail.com"">ro.yal.b.an.k.o.fc.an.a.da008@googlemail.com</a>
<a href=""mailto:ro.yal.b.a.nkof.c.a.n.a.da.0.0.8@googlemail.com"">ro.yal.b.a.nkof.c.a.n.a.da.0.0.8@googlemail.com</a>
<a href=""mailto:r.oy.a.l.ban.ko.fca.n.ada00.8@googlemail.com"">r.oy.a.l.ban.ko.fca.n.ada00.8@googlemail.com</a>
<a href=""mailto:roy.a.lb.ank.of.c.ana.da0.0.8@googlemail.com"">roy.a.lb.ank.of.c.ana.da0.0.8@googlemail.com</a>
<a href=""mailto:royalbank.of.can.a.d.a.00.8@googlemail.com"">royalbank.of.can.a.d.a.00.8@googlemail.com</a>
<a href=""mailto:ro.ya.l.ba.nkofc.an.ada.0.08@googlemail.com"">ro.ya.l.ba.nkofc.an.ada.0.08@googlemail.com</a>
<a href=""mailto:r.oy.a.l.bankofca.nad.a008@googlemail.com"">r.oy.a.l.bankofca.nad.a008@googlemail.com</a>
<a href=""mailto:r.o.y.alba.nk.of.ca.nada.0.08@googlemail.com"">r.o.y.alba.nk.of.ca.nada.0.08@googlemail.com</a>
<a href=""mailto:ro.ya.l.b.ank.of.c.an.a.da.008@googlemail.com"">ro.ya.l.b.ank.of.c.an.a.da.008@googlemail.com</a>
<a href=""mailto:ro.y.al.b.an.k.ofca.n.ada00.8@googlemail.com"">ro.y.al.b.an.k.ofca.n.ada00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.lban.k.ofcan.a.d.a0.08@googlemail.com"">r.oy.a.lban.k.ofcan.a.d.a0.08@googlemail.com</a>
<a href=""mailto:ro.y.al.b.a.n.kof.c.ana.d.a008@googlemail.com"">ro.y.al.b.a.n.kof.c.ana.d.a008@googlemail.com</a>
<a href=""mailto:r.oya.lb.an.k.of.ca.n.a.d.a0.0.8@googlemail.com"">r.oya.lb.an.k.of.ca.n.a.d.a0.0.8@googlemail.com</a>
<a href=""mailto:ro.y.a.lba.n.ko.fcanad.a00.8@googlemail.com"">ro.y.a.lba.n.ko.fcanad.a00.8@googlemail.com</a>
<a href=""mailto:royalb.an.k.of.ca.n.a.d.a00.8@googlemail.com"">royalb.an.k.of.ca.n.a.d.a00.8@googlemail.com</a>
<a href=""mailto:r.oy.albanko.fc.a.nada.0.08@googlemail.com"">r.oy.albanko.fc.a.nada.0.08@googlemail.com</a>
<a href=""mailto:r.oyal.ba.n.k.o.fcana.da00.8@googlemail.com"">r.oyal.ba.n.k.o.fcana.da00.8@googlemail.com</a>
<a href=""mailto:r.o.ya.l.ba.nko.f.can.ad.a00.8@googlemail.com"">r.o.ya.l.ba.nko.f.can.ad.a00.8@googlemail.com</a>
<a href=""mailto:ro.ya.l.b.a.n.k.of.can.a.d.a.0.0.8@googlemail.com"">ro.ya.l.b.a.n.k.of.can.a.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.oyal.ban.k.o.f.ca.nada.00.8@googlemail.com"">r.oyal.ban.k.o.f.ca.nada.00.8@googlemail.com</a>
<a href=""mailto:r.oy.al.ba.n.kof.cana.da.00.8@googlemail.com"">r.oy.al.ba.n.kof.cana.da.00.8@googlemail.com</a>
<a href=""mailto:ro.ya.lb.an.ko.fc.anada.00.8@googlemail.com"">ro.ya.lb.an.ko.fc.anada.00.8@googlemail.com</a>
<a href=""mailto:ro.yalbankofca.n.ad.a.008@googlemail.com"">ro.yalbankofca.n.ad.a.008@googlemail.com</a>
<a href=""mailto:r.o.yalb.ank.o.fc.a.nada.00.8@googlemail.com"">r.o.yalb.ank.o.fc.a.nada.00.8@googlemail.com</a>
<a href=""mailto:r.o.ya.lba.n.k.of.c.a.n.a.d.a0.0.8@googlemail.com"">r.o.ya.lba.n.k.of.c.a.n.a.d.a0.0.8@googlemail.com</a>
<a href=""mailto:ro.y.al.ba.n.kof.c.anad.a.008@googlemail.com"">ro.y.al.ba.n.kof.c.anad.a.008@googlemail.com</a>
<a href=""mailto:r.o.y.a.l.b.an.k.o.fcana.da008@googlemail.com"">r.o.y.a.l.b.an.k.o.fcana.da008@googlemail.com</a>
<a href=""mailto:ro.yal.ba.nk.o.f.c.an.a.d.a0.08@googlemail.com"">ro.yal.ba.nk.o.f.c.an.a.d.a0.08@googlemail.com</a>
<a href=""mailto:r.o.yalba.n.kof.c.anad.a00.8@googlemail.com"">r.o.yalba.n.kof.c.anad.a00.8@googlemail.com</a>
<a href=""mailto:roya.l.banko.fc.ana.d.a0.08@googlemail.com"">roya.l.banko.fc.ana.d.a0.08@googlemail.com</a>
<a href=""mailto:roy.a.l.ba.nk.o.f.canad.a0.08@googlemail.com"">roy.a.l.ba.nk.o.f.canad.a0.08@googlemail.com</a>
<a href=""mailto:royal.bank.of.ca.n.a.d.a00.8@googlemail.com"">royal.bank.of.ca.n.a.d.a00.8@googlemail.com</a>
<a href=""mailto:r.oya.lban.k.of.can.a.d.a00.8@googlemail.com"">r.oya.lban.k.of.can.a.d.a00.8@googlemail.com</a>
<a href=""mailto:roy.alb.ank.of.c.a.n.a.da.00.8@googlemail.com"">roy.alb.ank.of.c.a.n.a.da.00.8@googlemail.com</a>
<a href=""mailto:ro.y.a.lb.an.k.o.f.c.an.ad.a.00.8@googlemail.com"">ro.y.a.lb.an.k.o.f.c.an.ad.a.00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.lb.a.nk.ofc.a.n.ada.008@googlemail.com"">r.oy.a.lb.a.nk.ofc.a.n.ada.008@googlemail.com</a>
<a href=""mailto:r.o.yal.b.ank.of.ca.n.a.da00.8@googlemail.com"">r.o.yal.b.ank.of.ca.n.a.da00.8@googlemail.com</a>
<a href=""mailto:royal.b.an.kofc.ana.d.a.00.8@googlemail.com"">royal.b.an.kofc.ana.d.a.00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.lb.a.n.k.ofc.ana.da008@googlemail.com"">r.oy.a.lb.a.n.k.ofc.ana.da008@googlemail.com</a>
<a href=""mailto:r.oy.alba.n.k.o.f.c.a.na.da00.8@googlemail.com"">r.oy.alba.n.k.o.f.c.a.na.da00.8@googlemail.com</a>
<a href=""mailto:ro.yalba.nko.f.c.an.ad.a008@googlemail.com"">ro.yalba.nko.f.c.an.ad.a008@googlemail.com</a>
<a href=""mailto:r.o.y.alb.ankofcan.ad.a0.08@googlemail.com"">r.o.y.alb.ankofcan.ad.a0.08@googlemail.com</a>
<a href=""mailto:r.o.yalb.a.nkof.canad.a.008@googlemail.com"">r.o.yalb.a.nkof.canad.a.008@googlemail.com</a>
<a href=""mailto:roy.alb.a.nk.o.fc.ana.d.a.00.8@googlemail.com"">roy.alb.a.nk.o.fc.ana.d.a.00.8@googlemail.com</a>
<a href=""mailto:royal.b.an.ko.f.can.a.da0.08@googlemail.com"">royal.b.an.ko.f.can.a.da0.08@googlemail.com</a>
<a href=""mailto:royalb.an.ko.f.ca.n.a.d.a0.08@googlemail.com"">royalb.an.ko.f.ca.n.a.d.a0.08@googlemail.com</a>
<a href=""mailto:r.o.ya.lb.an.kofc.a.nada.008@googlemail.com"">r.o.ya.lb.an.kofc.a.nada.008@googlemail.com</a>
<a href=""mailto:r.oyalb.a.n.kofc.a.n.a.d.a.0.08@googlemail.com"">r.oyalb.a.n.kofc.a.n.a.d.a.0.08@googlemail.com</a>
<a href=""mailto:roy.a.l.b.a.nk.of.c.a.na.d.a.008@googlemail.com"">roy.a.l.b.a.nk.of.c.a.na.d.a.008@googlemail.com</a>
<a href=""mailto:r.o.yal.bank.of.c.a.n.ada.008@googlemail.com"">r.o.yal.bank.of.c.a.n.ada.008@googlemail.com</a>
<a href=""mailto:r.o.ya.l.b.ankofca.n.a.d.a.008@googlemail.com"">r.o.ya.l.b.ankofca.n.a.d.a.008@googlemail.com</a>
<a href=""mailto:ro.ya.lb.an.ko.f.c.a.na.d.a.00.8@googlemail.com"">ro.ya.lb.an.ko.f.c.a.na.d.a.00.8@googlemail.com</a>
<a href=""mailto:r.o.y.a.l.ba.n.kofc.anada00.8@googlemail.com"">r.o.y.a.l.ba.n.kofc.anada00.8@googlemail.com</a>
<a href=""mailto:ro.y.al.b.anko.fc.a.n.a.da008@googlemail.com"">ro.y.al.b.anko.fc.a.n.a.da008@googlemail.com</a>
<a href=""mailto:roy.al.b.a.nko.fca.na.da0.0.8@googlemail.com"">roy.al.b.a.nko.fca.na.da0.0.8@googlemail.com</a>
<a href=""mailto:roya.lban.k.o.f.c.anada.0.08@googlemail.com"">roya.lban.k.o.f.c.anada.0.08@googlemail.com</a>
<a href=""mailto:r.oy.al.b.a.nk.of.ca.na.da.0.08@googlemail.com"">r.oy.al.b.a.nk.of.ca.na.da.0.08@googlemail.com</a>
<a href=""mailto:r.o.yal.bank.o.fcanad.a.0.08@googlemail.com"">r.o.yal.bank.o.fcanad.a.0.08@googlemail.com</a>
<a href=""mailto:r.oy.a.l.ba.n.k.o.fc.a.n.ada008@googlemail.com"">r.oy.a.l.ba.n.k.o.fc.a.n.ada008@googlemail.com</a>
<a href=""mailto:r.oy.a.l.b.a.n.kofcan.ad.a0.0.8@googlemail.com"">r.oy.a.l.b.a.n.kofcan.ad.a0.0.8@googlemail.com</a>
<a href=""mailto:royal.ba.n.k.o.f.c.ana.da008@googlemail.com"">royal.ba.n.k.o.f.c.ana.da008@googlemail.com</a>
<a href=""mailto:ro.y.alb.an.k.o.f.c.ana.da.0.08@googlemail.com"">ro.y.alb.an.k.o.f.c.ana.da.0.08@googlemail.com</a>
<a href=""mailto:ro.yal.b.anko.fcan.a.da008@googlemail.com"">ro.yal.b.anko.fcan.a.da008@googlemail.com</a>
<a href=""mailto:roya.l.b.a.n.k.ofc.an.a.d.a.00.8@googlemail.com"">roya.l.b.a.n.k.ofc.an.a.d.a.00.8@googlemail.com</a>
<a href=""mailto:r.oy.alb.ank.o.fc.a.n.a.da.00.8@googlemail.com"">r.oy.alb.ank.o.fc.a.n.a.da.00.8@googlemail.com</a>
<a href=""mailto:r.o.ya.l.b.an.ko.fca.na.d.a.0.0.8@googlemail.com"">r.o.ya.l.b.an.ko.fca.na.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.o.yal.ba.nko.f.c.a.n.a.da.0.08@googlemail.com"">r.o.yal.ba.nko.f.c.a.n.a.da.0.08@googlemail.com</a>
<a href=""mailto:ro.ya.lba.n.k.of.c.a.nada008@googlemail.com"">ro.ya.lba.n.k.of.c.a.nada008@googlemail.com</a>
<a href=""mailto:r.o.yal.b.an.kof.c.a.nada.00.8@googlemail.com"">r.o.yal.b.an.kof.c.a.nada.00.8@googlemail.com</a>
<a href=""mailto:r.oy.al.ban.ko.f.c.a.n.a.d.a.00.8@googlemail.com"">r.oy.al.ban.ko.f.c.a.n.a.d.a.00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.lb.an.k.o.fc.an.a.da.00.8@googlemail.com"">r.oy.a.lb.an.k.o.fc.an.a.da.00.8@googlemail.com</a>
<a href=""mailto:r.o.ya.l.b.ankofcan.ad.a0.08@googlemail.com"">r.o.ya.l.b.ankofcan.ad.a0.08@googlemail.com</a>
<a href=""mailto:ro.y.a.l.b.ank.ofc.a.na.d.a.00.8@googlemail.com"">ro.y.a.l.b.ank.ofc.a.na.d.a.00.8@googlemail.com</a>
<a href=""mailto:ro.y.a.l.b.anko.f.can.a.da.0.08@googlemail.com"">ro.y.a.l.b.anko.f.can.a.da.0.08@googlemail.com</a>
<a href=""mailto:r.o.yalb.an.k.o.f.c.a.na.da00.8@googlemail.com"">r.o.yalb.an.k.o.f.c.a.na.da00.8@googlemail.com</a>
<a href=""mailto:roy.al.banko.f.can.ad.a.00.8@googlemail.com"">roy.al.banko.f.can.ad.a.00.8@googlemail.com</a>
<a href=""mailto:ro.y.a.l.ba.nk.of.c.anada.0.08@googlemail.com"">ro.y.a.l.ba.nk.of.c.anada.0.08@googlemail.com</a>
<a href=""mailto:roy.a.lb.a.n.k.o.fc.anada0.08@googlemail.com"">roy.a.lb.a.n.k.o.fc.anada0.08@googlemail.com</a>
<a href=""mailto:r.oya.l.b.a.n.k.ofcan.a.d.a.0.0.8@googlemail.com"">r.oya.l.b.a.n.k.ofcan.a.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.o.y.a.lba.nkofca.n.a.d.a.0.0.8@googlemail.com"">r.o.y.a.lba.nkofca.n.a.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.o.y.al.ba.n.ko.fc.an.a.da.00.8@googlemail.com"">r.o.y.al.ba.n.ko.fc.an.a.da.00.8@googlemail.com</a>
<a href=""mailto:ro.yal.bank.o.f.ca.n.ada.008@googlemail.com"">ro.yal.bank.o.f.ca.n.ada.008@googlemail.com</a>
<a href=""mailto:royal.ba.n.ko.fcana.da.0.08@googlemail.com"">royal.ba.n.ko.fcana.da.0.08@googlemail.com</a>
<a href=""mailto:ro.y.al.bank.o.fca.n.a.da.00.8@googlemail.com"">ro.y.al.bank.o.fca.n.a.da.00.8@googlemail.com</a>
<a href=""mailto:r.o.ya.lb.an.k.o.fc.anada0.0.8@googlemail.com"">r.o.ya.lb.an.k.o.fc.anada0.0.8@googlemail.com</a>
<a href=""mailto:royalba.nk.ofca.na.d.a0.08@googlemail.com"">royalba.nk.ofca.na.d.a0.08@googlemail.com</a>
<a href=""mailto:roya.lba.nk.o.f.c.a.n.ad.a.0.08@googlemail.com"">roya.lba.nk.o.f.c.a.n.ad.a.0.08@googlemail.com</a>
<a href=""mailto:r.oy.a.lba.nk.of.cana.da.00.8@googlemail.com"">r.oy.a.lba.nk.of.cana.da.00.8@googlemail.com</a>
<a href=""mailto:r.o.ya.l.banko.fcan.ad.a0.0.8@googlemail.com"">r.o.ya.l.banko.fcan.ad.a0.0.8@googlemail.com</a>
<a href=""mailto:roy.alb.an.k.o.f.ca.nada0.08@googlemail.com"">roy.alb.an.k.o.f.ca.nada0.08@googlemail.com</a>
<a href=""mailto:ro.y.a.lb.an.ko.fca.n.ada0.08@googlemail.com"">ro.y.a.lb.an.ko.fca.n.ada0.08@googlemail.com</a>
<a href=""mailto:roya.lba.n.k.o.fca.na.d.a.0.0.8@googlemail.com"">roya.lba.n.k.o.fca.na.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.o.y.alb.ank.o.f.c.a.n.ad.a00.8@googlemail.com"">r.o.y.alb.ank.o.f.c.a.n.ad.a00.8@googlemail.com</a>
<a href=""mailto:ro.yal.bank.of.c.an.a.da0.08@googlemail.com"">ro.yal.bank.of.c.an.a.da0.08@googlemail.com</a>
<a href=""mailto:roya.lba.n.kof.c.a.na.da00.8@googlemail.com"">roya.lba.n.kof.c.a.na.da00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.lba.n.k.ofc.a.nada0.0.8@googlemail.com"">r.oy.a.lba.n.k.ofc.a.nada0.0.8@googlemail.com</a>
<a href=""mailto:r.o.y.alban.k.o.fca.n.ada.008@googlemail.com"">r.o.y.alban.k.o.fca.n.ada.008@googlemail.com</a>
<a href=""mailto:ro.y.alba.nk.ofc.a.na.da.008@googlemail.com"">ro.y.alba.nk.ofc.a.na.da.008@googlemail.com</a>
<a href=""mailto:r.oy.al.b.a.nko.f.can.a.da.008@googlemail.com"">r.oy.al.b.a.nko.f.can.a.da.008@googlemail.com</a>
<a href=""mailto:ro.y.alba.nkof.cana.d.a0.08@googlemail.com"">ro.y.alba.nkof.cana.d.a0.08@googlemail.com</a>
<a href=""mailto:r.o.ya.lbank.o.fc.a.na.d.a.0.0.8@googlemail.com"">r.o.ya.lbank.o.fc.a.na.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.oyal.b.a.nk.of.c.ana.d.a.00.8@googlemail.com"">r.oyal.b.a.nk.of.c.ana.d.a.00.8@googlemail.com</a>
<a href=""mailto:ro.y.a.lb.anko.fc.a.na.d.a00.8@googlemail.com"">ro.y.a.lb.anko.fc.a.na.d.a00.8@googlemail.com</a>
<a href=""mailto:roy.a.lb.a.nko.f.ca.na.d.a00.8@googlemail.com"">roy.a.lb.a.nko.f.ca.na.d.a00.8@googlemail.com</a>
<a href=""mailto:ro.y.al.b.a.n.kofcan.a.d.a0.08@googlemail.com"">ro.y.al.b.a.n.kofcan.a.d.a0.08@googlemail.com</a>
<a href=""mailto:r.oy.a.l.ba.n.k.o.fcan.ada.00.8@googlemail.com"">r.oy.a.l.ba.n.k.o.fcan.ada.00.8@googlemail.com</a>
<a href=""mailto:r.o.y.a.l.b.a.nk.ofc.ana.da.0.0.8@googlemail.com"">r.o.y.a.l.b.a.nk.ofc.ana.da.0.0.8@googlemail.com</a>
<a href=""mailto:ro.ya.lban.ko.fcana.da00.8@googlemail.com"">ro.ya.lban.ko.fcana.da00.8@googlemail.com</a>
<a href=""mailto:ro.y.a.l.ban.k.of.ca.na.da0.08@googlemail.com"">ro.y.a.l.ban.k.of.ca.na.da0.08@googlemail.com</a>
<a href=""mailto:r.oy.a.lb.an.k.of.ca.n.a.d.a0.08@googlemail.com"">r.oy.a.lb.an.k.of.ca.n.a.d.a0.08@googlemail.com</a>
<a href=""mailto:ro.yalban.k.ofc.an.ad.a.0.08@googlemail.com"">ro.yalban.k.ofc.an.ad.a.0.08@googlemail.com</a>
<a href=""mailto:r.oy.albank.ofcana.d.a.0.0.8@googlemail.com"">r.oy.albank.ofcana.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.oy.a.l.ba.n.ko.f.c.a.n.a.d.a.0.0.8@googlemail.com"">r.oy.a.l.ba.n.ko.f.c.a.n.a.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:ro.yalba.nkof.c.an.a.da0.08@googlemail.com"">ro.yalba.nkof.c.an.a.da0.08@googlemail.com</a>
<a href=""mailto:ro.y.a.l.b.a.nk.o.f.ca.na.d.a.00.8@googlemail.com"">ro.y.a.l.b.a.nk.o.f.ca.na.d.a.00.8@googlemail.com</a>
<a href=""mailto:r.oyalba.nk.of.c.an.a.da.008@googlemail.com"">r.oyalba.nk.of.c.an.a.da.008@googlemail.com</a>
<a href=""mailto:ro.ya.lba.n.kofca.n.a.d.a0.08@googlemail.com"">ro.ya.lba.n.kofca.n.a.d.a0.08@googlemail.com</a>
<a href=""mailto:roya.lb.a.n.kofc.anad.a.008@googlemail.com"">roya.lb.a.n.kofc.anad.a.008@googlemail.com</a>
<a href=""mailto:roy.a.lbankof.cana.da.0.08@googlemail.com"">roy.a.lbankof.cana.da.0.08@googlemail.com</a>
<a href=""mailto:roy.alb.ankof.cana.d.a.0.0.8@googlemail.com"">roy.alb.ankof.cana.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:ro.y.al.b.a.nk.o.fcan.ad.a.0.08@googlemail.com"">ro.y.al.b.a.nk.o.fcan.ad.a.0.08@googlemail.com</a>
<a href=""mailto:r.oy.a.l.b.a.n.k.o.f.c.an.ada.00.8@googlemail.com"">r.oy.a.l.b.a.n.k.o.f.c.an.ada.00.8@googlemail.com</a>
<a href=""mailto:r.oyalb.ank.ofcanada.00.8@googlemail.com"">r.oyalb.ank.ofcanada.00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.lb.a.n.k.ofcan.ada.00.8@googlemail.com"">r.oy.a.lb.a.n.k.ofcan.ada.00.8@googlemail.com</a>
<a href=""mailto:roy.a.lban.ko.f.c.a.na.d.a.0.08@googlemail.com"">roy.a.lban.ko.f.c.a.na.d.a.0.08@googlemail.com</a>
<a href=""mailto:royal.b.a.n.k.o.fc.a.n.ada.00.8@googlemail.com"">royal.b.a.n.k.o.fc.a.n.ada.00.8@googlemail.com</a>
<a href=""mailto:ro.ya.l.ban.k.of.can.a.da0.08@googlemail.com"">ro.ya.l.ban.k.of.can.a.da0.08@googlemail.com</a>
<a href=""mailto:r.o.yalba.n.k.of.can.ada008@googlemail.com"">r.o.yalba.n.k.of.can.ada008@googlemail.com</a>
<a href=""mailto:r.o.y.alb.ankofcan.a.da0.0.8@googlemail.com"">r.o.y.alb.ankofcan.a.da0.0.8@googlemail.com</a>
<a href=""mailto:r.o.ya.l.ba.n.ko.f.cana.d.a.008@googlemail.com"">r.o.ya.l.ba.n.ko.f.cana.d.a.008@googlemail.com</a>
<a href=""mailto:royal.b.an.kofc.a.n.ada.008@googlemail.com"">royal.b.an.kofc.a.n.ada.008@googlemail.com</a>
<a href=""mailto:r.oya.lb.an.kofc.a.n.a.da0.0.8@googlemail.com"">r.oya.lb.an.kofc.a.n.a.da0.0.8@googlemail.com</a>
<a href=""mailto:ro.y.a.lb.a.n.ko.f.ca.n.ad.a.0.08@googlemail.com"">ro.y.a.lb.a.n.ko.f.ca.n.ad.a.0.08@googlemail.com</a>
<a href=""mailto:r.o.y.al.ba.nk.o.f.ca.n.a.d.a00.8@googlemail.com"">r.o.y.al.ba.nk.o.f.ca.n.a.d.a00.8@googlemail.com</a>
<a href=""mailto:roy.alb.a.nk.o.fcan.a.d.a0.08@googlemail.com"">roy.alb.a.nk.o.fcan.a.d.a0.08@googlemail.com</a>
<a href=""mailto:r.o.y.a.l.ba.n.ko.fca.n.ada00.8@googlemail.com"">r.o.y.a.l.ba.n.ko.fca.n.ada00.8@googlemail.com</a>
<a href=""mailto:ro.yal.b.an.kof.ca.na.da00.8@googlemail.com"">ro.yal.b.an.kof.ca.na.da00.8@googlemail.com</a>
<a href=""mailto:ro.y.a.l.b.a.n.k.o.f.c.a.nada0.0.8@googlemail.com"">ro.y.a.l.b.a.n.k.o.f.c.a.nada0.0.8@googlemail.com</a>
<a href=""mailto:roy.a.l.banko.f.can.a.da.0.0.8@googlemail.com"">roy.a.l.banko.f.can.a.da.0.0.8@googlemail.com</a>
<a href=""mailto:r.oyalb.anko.f.c.a.nada008@googlemail.com"">r.oyalb.anko.f.c.a.nada008@googlemail.com</a>
<a href=""mailto:roya.l.b.a.nkof.can.a.da.00.8@googlemail.com"">roya.l.b.a.nkof.can.a.da.00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.l.ba.nko.f.can.a.d.a00.8@googlemail.com"">r.oy.a.l.ba.nko.f.can.a.d.a00.8@googlemail.com</a>
<a href=""mailto:ro.y.alb.anko.fcan.ada00.8@googlemail.com"">ro.y.alb.anko.fcan.ada00.8@googlemail.com</a>
<a href=""mailto:roya.lban.k.of.canada00.8@googlemail.com"">roya.lban.k.of.canada00.8@googlemail.com</a>
<a href=""mailto:roy.alba.n.k.of.ca.nad.a.0.08@googlemail.com"">roy.alba.n.k.of.ca.nad.a.0.08@googlemail.com</a>
<a href=""mailto:r.oyalb.an.k.ofcan.a.da.00.8@googlemail.com"">r.oyalb.an.k.ofcan.a.da.00.8@googlemail.com</a>
<a href=""mailto:r.o.ya.lb.an.kof.c.a.n.a.da.008@googlemail.com"">r.o.ya.lb.an.kof.c.a.n.a.da.008@googlemail.com</a>
<a href=""mailto:ro.y.alban.k.o.fca.n.a.d.a.0.0.8@googlemail.com"">ro.y.alban.k.o.fca.n.a.d.a.0.0.8@googlemail.com</a>
<a href=""mailto:r.oy.a.l.ba.nk.o.fcana.da0.0.8@googlemail.com"">r.oy.a.l.ba.nk.o.fcana.da0.0.8@googlemail.com</a>
<a href=""mailto:r.oy.alba.nk.of.ca.nada.00.8@googlemail.com"">r.oy.alba.nk.of.ca.nada.00.8@googlemail.com</a>
<a href=""mailto:r.o.y.al.banko.f.ca.nada.0.08@googlemail.com"">r.o.y.al.banko.f.ca.nada.0.08@googlemail.com</a>
<a href=""mailto:ro.yal.bankofcana.da.0.08@googlemail.com"">ro.yal.bankofcana.da.0.08@googlemail.com</a>
<a href=""mailto:r.oya.l.b.an.k.of.c.a.na.d.a.00.8@googlemail.com"">r.oya.l.b.an.k.of.c.a.na.d.a.00.8@googlemail.com</a>
<a href=""mailto:r.oy.a.l.b.a.nkofc.anada.0.0.8@googlemail.com"">r.oy.a.l.b.a.nkofc.anada.0.0.8@googlemail.com</a>
<a href=""mailto:r.o.y.a.lba.nko.fcanada008@googlemail.com"">r.o.y.a.lba.nko.fcanada008@googlemail.com</a>
<a href=""mailto:ro.ya.l.ban.k.o.fc.a.nada.0.0.8@googlemail.com"">ro.ya.l.ban.k.o.fc.a.nada.0.0.8@googlemail.com</a>
<a href=""mailto:r.oya.lban.k.ofc.ana.da.008@googlemail.com"">r.oya.lban.k.ofc.ana.da.008@googlemail.com</a>
<a href=""mailto:r.o.yalb.a.nk.ofc.a.na.d.a.008@googlemail.com"">r.o.yalb.a.nk.ofc.a.na.d.a.008@googlemail.com</a>
<a href=""mailto:una.uk_compensation@yahoo.co.uk"">una.uk_compensation@yahoo.co.uk</a>
<a href=""mailto:bernnadlauwers@googlemail.com"">bernnadlauwers@googlemail.com</a>
<a href=""mailto:b.er.n.n.a.dla.u.we.r.s@googlemail.com"">b.er.n.n.a.dla.u.we.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnnadla.uwe.r.s@googlemail.com"">b.e.rnnadla.uwe.r.s@googlemail.com</a>
<a href=""mailto:be.rnna.dl.a.uw.e.rs@googlemail.com"">be.rnna.dl.a.uw.e.rs@googlemail.com</a>
<a href=""mailto:b.ernn.adla.u.w.er.s@googlemail.com"">b.ernn.adla.u.w.er.s@googlemail.com</a>
<a href=""mailto:ber.nn.adl.au.w.e.r.s@googlemail.com"">ber.nn.adl.au.w.e.r.s@googlemail.com</a>
<a href=""mailto:bern.na.dla.u.w.e.rs@googlemail.com"">bern.na.dla.u.w.e.rs@googlemail.com</a>
<a href=""mailto:be.rnna.dla.uw.e.rs@googlemail.com"">be.rnna.dla.uw.e.rs@googlemail.com</a>
<a href=""mailto:ber.n.na.d.lauwe.r.s@googlemail.com"">ber.n.na.d.lauwe.r.s@googlemail.com</a>
<a href=""mailto:be.r.nn.a.dl.a.uwe.r.s@googlemail.com"">be.r.nn.a.dl.a.uwe.r.s@googlemail.com</a>
<a href=""mailto:be.rnn.a.dl.a.u.we.r.s@googlemail.com"">be.rnn.a.dl.a.u.we.r.s@googlemail.com</a>
<a href=""mailto:be.r.nna.dla.u.w.ers@googlemail.com"">be.r.nna.dla.u.w.ers@googlemail.com</a>
<a href=""mailto:be.r.n.nad.la.uw.e.r.s@googlemail.com"">be.r.n.nad.la.uw.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnnadlau.wer.s@googlemail.com"">b.e.rnnadlau.wer.s@googlemail.com</a>
<a href=""mailto:b.ern.nad.l.a.uwers@googlemail.com"">b.ern.nad.l.a.uwers@googlemail.com</a>
<a href=""mailto:b.ernnadla.u.we.rs@googlemail.com"">b.ernnadla.u.we.rs@googlemail.com</a>
<a href=""mailto:b.e.r.nn.adlauw.e.r.s@googlemail.com"">b.e.r.nn.adlauw.e.r.s@googlemail.com</a>
<a href=""mailto:be.rnna.d.la.uw.e.r.s@googlemail.com"">be.rnna.d.la.uw.e.r.s@googlemail.com</a>
<a href=""mailto:b.er.nnad.l.au.we.rs@googlemail.com"">b.er.nnad.l.au.we.rs@googlemail.com</a>
<a href=""mailto:b.ern.n.adla.u.we.rs@googlemail.com"">b.ern.n.adla.u.we.rs@googlemail.com</a>
<a href=""mailto:b.er.nn.ad.l.a.uw.e.rs@googlemail.com"">b.er.nn.ad.l.a.uw.e.rs@googlemail.com</a>
<a href=""mailto:be.rn.na.dlau.wer.s@googlemail.com"">be.rn.na.dlau.wer.s@googlemail.com</a>
<a href=""mailto:be.rnn.a.d.lauwe.r.s@googlemail.com"">be.rnn.a.d.lauwe.r.s@googlemail.com</a>
<a href=""mailto:b.e.r.n.nadl.auw.e.r.s@googlemail.com"">b.e.r.n.nadl.auw.e.r.s@googlemail.com</a>
<a href=""mailto:ber.n.nadlau.w.er.s@googlemail.com"">ber.n.nadlau.w.er.s@googlemail.com</a>
<a href=""mailto:b.e.rn.na.dl.au.w.ers@googlemail.com"">b.e.rn.na.dl.au.w.ers@googlemail.com</a>
<a href=""mailto:be.rn.n.a.dl.au.w.e.rs@googlemail.com"">be.rn.n.a.dl.au.w.e.rs@googlemail.com</a>
<a href=""mailto:be.rn.n.a.dlauwers@googlemail.com"">be.rn.n.a.dlauwers@googlemail.com</a>
<a href=""mailto:be.rnn.ad.la.uwers@googlemail.com"">be.rnn.ad.la.uwers@googlemail.com</a>
<a href=""mailto:be.rnnad.l.au.we.rs@googlemail.com"">be.rnnad.l.au.we.rs@googlemail.com</a>
<a href=""mailto:be.rn.n.a.d.lau.we.r.s@googlemail.com"">be.rn.n.a.d.lau.we.r.s@googlemail.com</a>
<a href=""mailto:bern.n.a.d.lau.we.rs@googlemail.com"">bern.n.a.d.lau.we.rs@googlemail.com</a>
<a href=""mailto:bern.n.a.d.l.au.w.e.rs@googlemail.com"">bern.n.a.d.l.au.w.e.rs@googlemail.com</a>
<a href=""mailto:b.e.r.nnadl.au.w.e.rs@googlemail.com"">b.e.r.nnadl.au.w.e.rs@googlemail.com</a>
<a href=""mailto:be.r.n.na.dl.au.wer.s@googlemail.com"">be.r.n.na.dl.au.wer.s@googlemail.com</a>
<a href=""mailto:b.e.rnna.dl.auwe.rs@googlemail.com"">b.e.rnna.dl.auwe.rs@googlemail.com</a>
<a href=""mailto:be.r.n.na.d.l.auw.e.rs@googlemail.com"">be.r.n.na.d.l.auw.e.rs@googlemail.com</a>
<a href=""mailto:ber.n.n.ad.lauwe.rs@googlemail.com"">ber.n.n.ad.lauwe.rs@googlemail.com</a>
<a href=""mailto:be.r.n.n.ad.l.auw.e.rs@googlemail.com"">be.r.n.n.ad.l.auw.e.rs@googlemail.com</a>
<a href=""mailto:be.r.nn.ad.l.auw.ers@googlemail.com"">be.r.nn.ad.l.auw.ers@googlemail.com</a>
<a href=""mailto:be.r.n.n.adla.u.wer.s@googlemail.com"">be.r.n.n.adla.u.wer.s@googlemail.com</a>
<a href=""mailto:b.e.r.n.n.adl.a.uw.ers@googlemail.com"">b.e.r.n.n.adl.a.uw.ers@googlemail.com</a>
<a href=""mailto:b.e.r.n.nadl.au.wer.s@googlemail.com"">b.e.r.n.nadl.au.wer.s@googlemail.com</a>
<a href=""mailto:be.r.n.n.ad.lauw.e.rs@googlemail.com"">be.r.n.n.ad.lauw.e.rs@googlemail.com</a>
<a href=""mailto:bern.nad.la.uwers@googlemail.com"">bern.nad.la.uwers@googlemail.com</a>
<a href=""mailto:bern.na.d.la.u.wer.s@googlemail.com"">bern.na.d.la.u.wer.s@googlemail.com</a>
<a href=""mailto:ber.n.na.d.l.auw.er.s@googlemail.com"">ber.n.na.d.l.auw.er.s@googlemail.com</a>
<a href=""mailto:be.rn.na.d.l.au.w.e.rs@googlemail.com"">be.rn.na.d.l.au.w.e.rs@googlemail.com</a>
<a href=""mailto:be.r.nnadl.auwers@googlemail.com"">be.r.nnadl.auwers@googlemail.com</a>
<a href=""mailto:b.ern.n.adl.a.uwe.r.s@googlemail.com"">b.ern.n.adl.a.uwe.r.s@googlemail.com</a>
<a href=""mailto:b.e.r.nn.a.dl.a.uw.er.s@googlemail.com"">b.e.r.nn.a.dl.a.uw.er.s@googlemail.com</a>
<a href=""mailto:ber.nna.d.l.au.we.r.s@googlemail.com"">ber.nna.d.l.au.we.r.s@googlemail.com</a>
<a href=""mailto:b.e.r.n.na.dl.auw.er.s@googlemail.com"">b.e.r.n.na.dl.auw.er.s@googlemail.com</a>
<a href=""mailto:b.e.rn.na.dl.a.u.wers@googlemail.com"">b.e.rn.na.dl.a.u.wers@googlemail.com</a>
<a href=""mailto:bern.n.ad.la.uwers@googlemail.com"">bern.n.ad.la.uwers@googlemail.com</a>
<a href=""mailto:b.er.n.n.a.d.lau.wers@googlemail.com"">b.er.n.n.a.d.lau.wers@googlemail.com</a>
<a href=""mailto:be.r.nna.d.l.au.wer.s@googlemail.com"">be.r.nna.d.l.au.wer.s@googlemail.com</a>
<a href=""mailto:b.er.nnadl.au.we.rs@googlemail.com"">b.er.nnadl.au.we.rs@googlemail.com</a>
<a href=""mailto:ber.n.nadla.u.we.r.s@googlemail.com"">ber.n.nadla.u.we.r.s@googlemail.com</a>
<a href=""mailto:b.er.nn.ad.l.a.u.w.ers@googlemail.com"">b.er.nn.ad.l.a.u.w.ers@googlemail.com</a>
<a href=""mailto:be.rnn.a.d.l.a.u.w.er.s@googlemail.com"">be.rnn.a.d.l.a.u.w.er.s@googlemail.com</a>
<a href=""mailto:b.e.rnn.a.dlauwer.s@googlemail.com"">b.e.rnn.a.dlauwer.s@googlemail.com</a>
<a href=""mailto:bernna.d.l.auwe.rs@googlemail.com"">bernna.d.l.auwe.rs@googlemail.com</a>
<a href=""mailto:ber.n.na.d.lau.w.e.r.s@googlemail.com"">ber.n.na.d.lau.w.e.r.s@googlemail.com</a>
<a href=""mailto:be.r.nnad.l.auw.ers@googlemail.com"">be.r.nnad.l.auw.ers@googlemail.com</a>
<a href=""mailto:bernna.d.lau.w.ers@googlemail.com"">bernna.d.lau.w.ers@googlemail.com</a>
<a href=""mailto:ber.n.na.d.l.a.uwe.r.s@googlemail.com"">ber.n.na.d.l.a.uwe.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnnadlauw.ers@googlemail.com"">b.e.rnnadlauw.ers@googlemail.com</a>
<a href=""mailto:be.r.n.nad.la.uwer.s@googlemail.com"">be.r.n.nad.la.uwer.s@googlemail.com</a>
<a href=""mailto:be.rn.n.a.dl.au.w.e.r.s@googlemail.com"">be.rn.n.a.dl.au.w.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnn.adl.a.u.w.er.s@googlemail.com"">b.e.rnn.adl.a.u.w.er.s@googlemail.com</a>
<a href=""mailto:b.ernn.adl.a.uwe.rs@googlemail.com"">b.ernn.adl.a.uwe.rs@googlemail.com</a>
<a href=""mailto:be.r.n.nadla.uw.e.r.s@googlemail.com"">be.r.n.nadla.uw.e.r.s@googlemail.com</a>
<a href=""mailto:b.er.n.nadla.u.w.e.rs@googlemail.com"">b.er.n.nadla.u.w.e.rs@googlemail.com</a>
<a href=""mailto:b.e.r.nn.a.dl.au.wers@googlemail.com"">b.e.r.nn.a.dl.au.wers@googlemail.com</a>
<a href=""mailto:be.r.n.n.a.d.l.a.u.w.e.r.s@googlemail.com"">be.r.n.n.a.d.l.a.u.w.e.r.s@googlemail.com</a>
<a href=""mailto:bernn.a.dl.auw.e.r.s@googlemail.com"">bernn.a.dl.auw.e.r.s@googlemail.com</a>
<a href=""mailto:ber.nn.ad.l.a.u.w.er.s@googlemail.com"">ber.nn.ad.l.a.u.w.er.s@googlemail.com</a>
<a href=""mailto:bernna.dl.auwer.s@googlemail.com"">bernna.dl.auwer.s@googlemail.com</a>
<a href=""mailto:b.e.rn.n.ad.la.u.we.rs@googlemail.com"">b.e.rn.n.ad.la.u.we.rs@googlemail.com</a>
<a href=""mailto:b.ernna.dl.au.we.rs@googlemail.com"">b.ernna.dl.au.we.rs@googlemail.com</a>
<a href=""mailto:b.e.rnnadl.auwers@googlemail.com"">b.e.rnnadl.auwers@googlemail.com</a>
<a href=""mailto:ber.nn.a.d.l.a.u.w.er.s@googlemail.com"">ber.nn.a.d.l.a.u.w.er.s@googlemail.com</a>
<a href=""mailto:ber.nn.a.d.lauw.er.s@googlemail.com"">ber.nn.a.d.lauw.er.s@googlemail.com</a>
<a href=""mailto:bernna.dl.a.uwe.rs@googlemail.com"">bernna.dl.a.uwe.rs@googlemail.com</a>
<a href=""mailto:ber.nna.dl.auwe.rs@googlemail.com"">ber.nna.dl.auwe.rs@googlemail.com</a>
<a href=""mailto:b.e.rn.na.dla.uw.er.s@googlemail.com"">b.e.rn.na.dla.uw.er.s@googlemail.com</a>
<a href=""mailto:b.ern.n.a.dl.au.w.ers@googlemail.com"">b.ern.n.a.dl.au.w.ers@googlemail.com</a>
<a href=""mailto:b.ernnad.l.a.u.w.e.r.s@googlemail.com"">b.ernnad.l.a.u.w.e.r.s@googlemail.com</a>
<a href=""mailto:b.er.nnad.lauwers@googlemail.com"">b.er.nnad.lauwers@googlemail.com</a>
<a href=""mailto:b.ern.na.d.la.u.w.ers@googlemail.com"">b.ern.na.d.la.u.w.ers@googlemail.com</a>
<a href=""mailto:b.e.r.n.na.d.la.uwer.s@googlemail.com"">b.e.r.n.na.d.la.uwer.s@googlemail.com</a>
<a href=""mailto:be.rnn.ad.l.au.w.e.r.s@googlemail.com"">be.rnn.ad.l.au.w.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnnadl.a.u.wers@googlemail.com"">b.e.rnnadl.a.u.wers@googlemail.com</a>
<a href=""mailto:b.e.rn.n.a.dl.auwe.rs@googlemail.com"">b.e.rn.n.a.dl.auwe.rs@googlemail.com</a>
<a href=""mailto:be.rnnadl.a.u.we.r.s@googlemail.com"">be.rnnadl.a.u.we.r.s@googlemail.com</a>
<a href=""mailto:b.ernn.a.d.l.au.we.rs@googlemail.com"">b.ernn.a.d.l.au.we.rs@googlemail.com</a>
<a href=""mailto:b.er.n.nadlau.we.r.s@googlemail.com"">b.er.n.nadlau.we.r.s@googlemail.com</a>
<a href=""mailto:b.ern.nad.l.auw.er.s@googlemail.com"">b.ern.nad.l.auw.er.s@googlemail.com</a>
<a href=""mailto:ber.nnad.l.a.uwe.rs@googlemail.com"">ber.nnad.l.a.uwe.rs@googlemail.com</a>
<a href=""mailto:b.e.r.nnadlauw.er.s@googlemail.com"">b.e.r.nnadlauw.er.s@googlemail.com</a>
<a href=""mailto:bernn.ad.lauw.e.r.s@googlemail.com"">bernn.ad.lauw.e.r.s@googlemail.com</a>
<a href=""mailto:b.er.nnadl.a.uwe.rs@googlemail.com"">b.er.nnadl.a.uwe.rs@googlemail.com</a>
<a href=""mailto:be.rnn.a.d.lau.w.e.rs@googlemail.com"">be.rnn.a.d.lau.w.e.rs@googlemail.com</a>
<a href=""mailto:b.er.nn.ad.lau.w.er.s@googlemail.com"">b.er.nn.ad.lau.w.er.s@googlemail.com</a>
<a href=""mailto:b.e.r.n.nad.lauwer.s@googlemail.com"">b.e.r.n.nad.lauwer.s@googlemail.com</a>
<a href=""mailto:ber.nn.a.dlau.we.r.s@googlemail.com"">ber.nn.a.dlau.we.r.s@googlemail.com</a>
<a href=""mailto:b.e.rn.n.a.d.lau.wer.s@googlemail.com"">b.e.rn.n.a.d.lau.wer.s@googlemail.com</a>
<a href=""mailto:b.e.rnna.d.l.auwe.r.s@googlemail.com"">b.e.rnna.d.l.auwe.r.s@googlemail.com</a>
<a href=""mailto:bern.n.ad.l.a.uw.e.rs@googlemail.com"">bern.n.ad.l.a.uw.e.rs@googlemail.com</a>
<a href=""mailto:b.e.rnn.a.dl.au.wer.s@googlemail.com"">b.e.rnn.a.dl.au.wer.s@googlemail.com</a>
<a href=""mailto:b.ern.n.a.d.lauwer.s@googlemail.com"">b.ern.n.a.d.lauwer.s@googlemail.com</a>
<a href=""mailto:b.ernna.dl.a.u.wer.s@googlemail.com"">b.ernna.dl.a.u.wer.s@googlemail.com</a>
<a href=""mailto:b.er.n.n.a.d.l.a.uw.er.s@googlemail.com"">b.er.n.n.a.d.l.a.uw.er.s@googlemail.com</a>
<a href=""mailto:b.e.rn.na.dlau.w.ers@googlemail.com"">b.e.rn.na.dlau.w.ers@googlemail.com</a>
<a href=""mailto:b.er.n.n.a.d.la.u.wers@googlemail.com"">b.er.n.n.a.d.la.u.wers@googlemail.com</a>
<a href=""mailto:ber.nnadla.u.we.rs@googlemail.com"">ber.nnadla.u.we.rs@googlemail.com</a>
<a href=""mailto:be.r.n.na.dla.u.wers@googlemail.com"">be.r.n.na.dla.u.wers@googlemail.com</a>
<a href=""mailto:b.e.r.nna.dla.uw.ers@googlemail.com"">b.e.r.nna.dla.uw.ers@googlemail.com</a>
<a href=""mailto:b.er.nnadla.u.wer.s@googlemail.com"">b.er.nnadla.u.wer.s@googlemail.com</a>
<a href=""mailto:ber.n.na.d.la.u.we.r.s@googlemail.com"">ber.n.na.d.la.u.we.r.s@googlemail.com</a>
<a href=""mailto:be.rnn.ad.lau.w.e.r.s@googlemail.com"">be.rnn.ad.lau.w.e.r.s@googlemail.com</a>
<a href=""mailto:be.rn.nad.l.auw.ers@googlemail.com"">be.rn.nad.l.auw.ers@googlemail.com</a>
<a href=""mailto:b.e.rn.nadl.au.we.rs@googlemail.com"">b.e.rn.nadl.au.we.rs@googlemail.com</a>
<a href=""mailto:be.r.n.n.a.dl.a.uwer.s@googlemail.com"">be.r.n.n.a.dl.a.uwer.s@googlemail.com</a>
<a href=""mailto:be.rnn.a.dl.au.w.e.r.s@googlemail.com"">be.rnn.a.dl.au.w.e.r.s@googlemail.com</a>
<a href=""mailto:ber.nn.adlauw.e.r.s@googlemail.com"">ber.nn.adlauw.e.r.s@googlemail.com</a>
<a href=""mailto:be.rnn.a.dlauw.er.s@googlemail.com"">be.rnn.a.dlauw.er.s@googlemail.com</a>
<a href=""mailto:bernn.ad.lau.w.e.r.s@googlemail.com"">bernn.ad.lau.w.e.r.s@googlemail.com</a>
<a href=""mailto:bern.nad.l.a.uw.er.s@googlemail.com"">bern.nad.l.a.uw.er.s@googlemail.com</a>
<a href=""mailto:be.rn.na.d.lau.we.rs@googlemail.com"">be.rn.na.d.lau.we.rs@googlemail.com</a>
<a href=""mailto:b.e.r.nn.adl.a.u.wer.s@googlemail.com"">b.e.r.nn.adl.a.u.wer.s@googlemail.com</a>
<a href=""mailto:bern.n.a.d.l.auwe.rs@googlemail.com"">bern.n.a.d.l.auwe.rs@googlemail.com</a>
<a href=""mailto:be.r.nn.a.d.l.auw.e.r.s@googlemail.com"">be.r.nn.a.d.l.auw.e.r.s@googlemail.com</a>
<a href=""mailto:ber.n.n.a.d.l.au.w.ers@googlemail.com"">ber.n.n.a.d.l.au.w.ers@googlemail.com</a>
<a href=""mailto:b.ernnad.l.auw.e.rs@googlemail.com"">b.ernnad.l.auw.e.rs@googlemail.com</a>
<a href=""mailto:b.er.nnadlauw.e.r.s@googlemail.com"">b.er.nnadlauw.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnna.d.lau.w.ers@googlemail.com"">b.e.rnna.d.lau.w.ers@googlemail.com</a>
<a href=""mailto:bernn.ad.la.uwe.r.s@googlemail.com"">bernn.ad.la.uwe.r.s@googlemail.com</a>
<a href=""mailto:b.er.n.na.dl.a.u.wers@googlemail.com"">b.er.n.na.dl.a.u.wers@googlemail.com</a>
<a href=""mailto:ber.n.n.a.d.lauwe.rs@googlemail.com"">ber.n.n.a.d.lauwe.rs@googlemail.com</a>
<a href=""mailto:b.er.n.na.d.l.auw.ers@googlemail.com"">b.er.n.na.d.l.auw.ers@googlemail.com</a>
<a href=""mailto:b.er.n.nad.la.uw.e.r.s@googlemail.com"">b.er.n.nad.la.uw.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.rn.na.dlau.wer.s@googlemail.com"">b.e.rn.na.dlau.wer.s@googlemail.com</a>
<a href=""mailto:b.ern.n.adlauw.ers@googlemail.com"">b.ern.n.adlauw.ers@googlemail.com</a>
<a href=""mailto:b.ern.n.adl.au.wers@googlemail.com"">b.ern.n.adl.au.wers@googlemail.com</a>
<a href=""mailto:ber.n.nadl.au.we.r.s@googlemail.com"">ber.n.nadl.au.we.r.s@googlemail.com</a>
<a href=""mailto:bernna.d.la.uwer.s@googlemail.com"">bernna.d.la.uwer.s@googlemail.com</a>
<a href=""mailto:be.r.nn.ad.l.a.u.we.r.s@googlemail.com"">be.r.nn.ad.l.a.u.we.r.s@googlemail.com</a>
<a href=""mailto:be.rnn.a.dlauwe.rs@googlemail.com"">be.rnn.a.dlauwe.rs@googlemail.com</a>
<a href=""mailto:b.e.r.nn.ad.l.a.u.w.e.rs@googlemail.com"">b.e.r.nn.ad.l.a.u.w.e.rs@googlemail.com</a>
<a href=""mailto:b.e.rn.n.a.dlau.w.er.s@googlemail.com"">b.e.rn.n.a.dlau.w.er.s@googlemail.com</a>
<a href=""mailto:be.r.nn.a.dl.auw.e.r.s@googlemail.com"">be.r.nn.a.dl.auw.e.r.s@googlemail.com</a>
<a href=""mailto:b.er.n.n.adl.a.u.w.e.rs@googlemail.com"">b.er.n.n.adl.a.u.w.e.rs@googlemail.com</a>
<a href=""mailto:b.ern.n.ad.l.auwer.s@googlemail.com"">b.ern.n.ad.l.auwer.s@googlemail.com</a>
<a href=""mailto:be.r.n.na.d.l.au.we.rs@googlemail.com"">be.r.n.na.d.l.au.we.rs@googlemail.com</a>
<a href=""mailto:b.er.n.na.d.la.u.w.e.rs@googlemail.com"">b.er.n.na.d.la.u.w.e.rs@googlemail.com</a>
<a href=""mailto:b.ernn.a.d.lau.w.ers@googlemail.com"">b.ernn.a.d.lau.w.ers@googlemail.com</a>
<a href=""mailto:b.e.r.n.n.adl.au.w.e.rs@googlemail.com"">b.e.r.n.n.adl.au.w.e.rs@googlemail.com</a>
<a href=""mailto:b.ern.nad.l.a.uw.e.r.s@googlemail.com"">b.ern.nad.l.a.uw.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnn.a.dl.au.we.r.s@googlemail.com"">b.e.rnn.a.dl.au.we.r.s@googlemail.com</a>
<a href=""mailto:be.r.nnad.l.auwer.s@googlemail.com"">be.r.nnad.l.auwer.s@googlemail.com</a>
<a href=""mailto:b.ern.na.dla.u.w.e.r.s@googlemail.com"">b.ern.na.dla.u.w.e.r.s@googlemail.com</a>
<a href=""mailto:be.rn.n.adlau.w.e.rs@googlemail.com"">be.rn.n.adlau.w.e.rs@googlemail.com</a>
<a href=""mailto:b.e.rnnad.l.au.we.r.s@googlemail.com"">b.e.rnnad.l.au.we.r.s@googlemail.com</a>
<a href=""mailto:be.r.nn.a.dla.uwers@googlemail.com"">be.r.nn.a.dla.uwers@googlemail.com</a>
<a href=""mailto:b.e.rnna.d.lauwe.r.s@googlemail.com"">b.e.rnna.d.lauwe.r.s@googlemail.com</a>
<a href=""mailto:be.r.n.na.d.l.a.uwers@googlemail.com"">be.r.n.na.d.l.a.uwers@googlemail.com</a>
<a href=""mailto:b.ernn.a.dla.uwers@googlemail.com"">b.ernn.a.dla.uwers@googlemail.com</a>
<a href=""mailto:bern.nadlauwers@googlemail.com"">bern.nadlauwers@googlemail.com</a>
<a href=""mailto:b.e.rnna.dlau.wers@googlemail.com"">b.e.rnna.dlau.wers@googlemail.com</a>
<a href=""mailto:be.rnn.a.dlau.wers@googlemail.com"">be.rnn.a.dlau.wers@googlemail.com</a>
<a href=""mailto:be.r.nn.ad.l.auwer.s@googlemail.com"">be.r.nn.ad.l.auwer.s@googlemail.com</a>
<a href=""mailto:b.e.rn.n.a.d.l.a.uwer.s@googlemail.com"">b.e.rn.n.a.d.l.a.uwer.s@googlemail.com</a>
<a href=""mailto:b.ernnadla.u.wers@googlemail.com"">b.ernnadla.u.wers@googlemail.com</a>
<a href=""mailto:be.rnna.d.l.a.u.w.e.rs@googlemail.com"">be.rnna.d.l.a.u.w.e.rs@googlemail.com</a>
<a href=""mailto:b.e.r.n.nad.l.a.uw.ers@googlemail.com"">b.e.r.n.nad.l.a.uw.ers@googlemail.com</a>
<a href=""mailto:ber.n.n.adl.au.we.rs@googlemail.com"">ber.n.n.adl.au.we.rs@googlemail.com</a>
<a href=""mailto:b.er.n.n.adlauw.er.s@googlemail.com"">b.er.n.n.adlauw.er.s@googlemail.com</a>
<a href=""mailto:b.ernnadla.uwers@googlemail.com"">b.ernnadla.uwers@googlemail.com</a>
<a href=""mailto:be.rn.na.d.l.auwer.s@googlemail.com"">be.rn.na.d.l.auwer.s@googlemail.com</a>
<a href=""mailto:b.er.n.n.ad.la.u.w.er.s@googlemail.com"">b.er.n.n.ad.la.u.w.er.s@googlemail.com</a>
<a href=""mailto:b.e.r.n.n.a.d.l.auwe.rs@googlemail.com"">b.e.r.n.n.a.d.l.auwe.rs@googlemail.com</a>
<a href=""mailto:ber.n.nadlau.wer.s@googlemail.com"">ber.n.nadlau.wer.s@googlemail.com</a>
<a href=""mailto:ber.n.n.a.d.la.uw.er.s@googlemail.com"">ber.n.n.a.d.la.uw.er.s@googlemail.com</a>
<a href=""mailto:b.e.rnna.d.l.au.w.e.r.s@googlemail.com"">b.e.rnna.d.l.au.w.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.r.nna.d.lauw.e.r.s@googlemail.com"">b.e.r.nna.d.lauw.e.r.s@googlemail.com</a>
<a href=""mailto:b.e.rnna.d.l.auwers@googlemail.com"">b.e.rnna.d.l.auwers@googlemail.com</a>
<a href=""mailto:be.r.nn.ad.lauw.er.s@googlemail.com"">be.r.nn.ad.lauw.er.s@googlemail.com</a>
<a href=""mailto:b.er.nn.a.dla.u.w.e.rs@googlemail.com"">b.er.nn.a.dla.u.w.e.rs@googlemail.com</a>
<a href=""mailto:b.er.nn.a.dla.uw.ers@googlemail.com"">b.er.nn.a.dla.uw.ers@googlemail.com</a>
<a href=""mailto:be.r.n.na.dl.a.u.wers@googlemail.com"">be.r.n.na.dl.a.u.wers@googlemail.com</a>
<a href=""mailto:b.e.rn.n.adla.uwe.r.s@googlemail.com"">b.e.rn.n.adla.uwe.r.s@googlemail.com</a>
<a href=""mailto:ber.n.n.ad.la.u.we.r.s@googlemail.com"">ber.n.n.ad.la.u.we.r.s@googlemail.com</a>
<a href=""mailto:b.er.nn.a.dl.auw.ers@googlemail.com"">b.er.nn.a.dl.auw.ers@googlemail.com</a>
<a href=""mailto:ber.n.n.a.dla.uwe.r.s@googlemail.com"">ber.n.n.a.dla.uwe.r.s@googlemail.com</a>
<a href=""mailto:b.e.rn.n.ad.l.au.w.er.s@googlemail.com"">b.e.rn.n.ad.l.au.w.er.s@googlemail.com</a>
<a href=""mailto:b.er.n.n.a.dlau.w.e.rs@googlemail.com"">b.er.n.n.a.dlau.w.e.rs@googlemail.com</a>
<a href=""mailto:be.rnna.dl.a.u.wer.s@googlemail.com"">be.rnna.dl.a.u.wer.s@googlemail.com</a>
<a href=""mailto:b.e.r.nna.dla.u.w.e.rs@googlemail.com"">b.e.r.nna.dla.u.w.e.rs@googlemail.com</a>
<a href=""mailto:b.e.rn.n.a.dlau.w.ers@googlemail.com"">b.e.rn.n.a.dlau.w.ers@googlemail.com</a>"
AMnVxkh9,"СПРИНТ № 5 | Стек, очередь, дек | Урок 2: Стек 1/3",chevengur,C++,Sunday 11th of February 2024 10:53:48 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

template <typename It>
void PrintRange(It range_begin, It range_end) {
    for (auto it = range_begin; it != range_end; ++it) {
        cout << *it << "" ""s;
    }
    cout << endl;
}

template <typename Type>
class Stack {
public:
    void Push(const Type& element) {
        elements_.push_back(element);
    }
    void Pop() {
        elements_.pop_back();
    }
    const Type& Peek() const {
        return elements_.back();
    }
    Type& Peek() {
        return elements_.back();
    }
    void Print() const {
        PrintRange(elements_.begin(), elements_.end());
    }
    uint64_t Size() const {
        return elements_.size();
    }
    bool IsEmpty() const {
        return elements_.empty();
    }

private:
    vector<Type> elements_;
};


int main() {
    Stack<int> stack;
    for (uint32_t i = 0; i < 10; ++i) {
        stack.Push(i);
        stack.Print();
    }
    while (!stack.IsEmpty()) {
        stack.Pop();
        stack.Print();
    }
}"
6AT75Mwx,Untitled,opencard,Python,Sunday 11th of February 2024 10:47:46 AM CDT,bbbggcfddddffgGHdd3333
8NLQ46Qh,Untitled,s-sols,CSS,Sunday 11th of February 2024 10:33:23 AM CDT,"body.seraph-accel-js-lzl-ing {
	--hdr-height: 70px;
}

body.seraph-accel-js-lzl-ing .page-header-place-holder {
	height: var(--hdr-height) !important;
}

body.seraph-accel-js-lzl-ing.primary-nav-rendering .page-navigation {
	opacity: 1 !important;
	visibility: visible !important;
	overflow: visible !important;
}

body.seraph-accel-js-lzl-ing .page-navigation .menu__container > .menu-item:first-of-type {
	margin-left: 20.0711px !important;
}

body.seraph-accel-js-lzl-ing .page-navigation .menu__container > .menu-item:nth-of-type(2) {
	margin-right: 211px !important;
}

body.seraph-accel-js-lzl-ing .page-header .page-header-inner {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
}

@media (min-width: 1200px) and (max-width: 1296px) {
	body.seraph-accel-js-lzl-ing {
		--hdr-height: 140px;
	}

	body.seraph-accel-js-lzl-ing .page-header .header-wrap {
		height: var(--hdr-height);
		align-items: center;
	}

	body.seraph-accel-js-lzl-ing .page-header .header-wrap .header-center {
		height: var(--hdr-height);
	}
}

@media (max-width: 1199px) {
	body.seraph-accel-js-lzl-ing #page-open-mobile-menu {
		display: flex !important;
	}

	body.seraph-accel-js-lzl-ing #page-navigation {
		display: none !important;
	}

	body.seraph-accel-js-lzl-ing .branding__logo {
		width: var(--minimog-tablet-branding-size);
	}
}

@media (max-width: 543px) {
	body.seraph-accel-js-lzl-ing {
		--hdr-height: 50px;
	}

	body.seraph-accel-js-lzl-ing .branding__logo {
		width: var(--minimog-mobile-branding-size);
	}

	body.seraph-accel-js-lzl-ing .page-header .header-wrap {
		min-height: var(--hdr-height) !important;
	}
}
"
6nPKpLDm,02. Santa's Gifts,Spocoman,JavaScript,Sunday 11th of February 2024 10:16:21 AM CDT,"function santasGifts(input) {
    let commandNumbers = Number(input[0]);
 
    let houses = input[1].split(' ');

    let index = 0;

    for (let i = 2; i < commandNumbers + 2; i++) {           
        let currentIndex = index;

        let command = input[i].split(' ');

        if (command[0] == ""Forward"" || command[0] == ""Back"") {
            let steps = Number(command[1]);
            currentIndex += (command[0] == ""Forward"" ? steps : -steps);
            if (currentIndex >= 0 && currentIndex < houses.length) {
                index = currentIndex;
                houses.splice(index, 1);
            }
        } else if (command[0] == ""Gift"") {
            currentIndex = Number(command[1]);
            if (currentIndex >= 0 && currentIndex < houses.length) {
                index = currentIndex;
                houses.splice(index, 0, command[2]);
            }
        } else if (command[0] == ""Swap"") {
            let index1 = houses.indexOf(command[1]),
                index2 = houses.indexOf(command[2]);

            if (index1 != -1 && index2 != -1) {
                let value = houses[index1];
                houses[index1] = houses[index2];
                houses[index2] = value;
            }     
        }
    }

    console.log(`Position: ${index}`);

    if (houses.length > 0) {
        console.log(houses.join("", ""));
    }
    return;
}"
n4K20pwW,craft core,copperTones,Lua,Sunday 11th of February 2024 09:51:30 AM CDT,"recipes = {
	{
		machine=""factorizer"",
		inp={{""iron_ingot"", 9}},
		out={{""iron_block"", 1}},
		time=1,
		batch=7
	},
	{
		machine=""factorizer"",
		inp={{""gold_ingot"", 9}},
		out={{""gold_block"", 1}},
		time=1,
		batch=7
	},
	{
		machine=""factorizer"",
		inp={{""redstone_dust"", 9}},
		out={{""redstone_block"", 1}},
		time=1,
		batch=7
	},
	{
		machine=""miniaturizer2"",
		inp={
			{""iron_block"", 1},
			{""redstone_dust"", 2},
		},
		out={{""wallbreakable"", 16}},
		time=10,
		batch=1
	},
	{
		machine=""miniaturizer"",
		inp={
			{""obsidian"", 20},
			{""obsidian"", 6},
			{""redstone_block"", 1},
			{""redstone_dust"", 1},
		},
		out={{""ender_pearl"", 1}},
		time=10,
		batch=1
	},
	{
		machine=""miniaturizer"",
		inp={
			{""wallbreakable"", 20},
			{""wallbreakable"", 6},
			{""gold_block"", 1},
			{""ender_pearl"", 1},
		},
		out={{""machine/2"", 1}},
		time=60,
		batch=1
	},
	{
		machine=""miniaturizer"",
		inp={
			{""wallbreakable"", 20},
			{""glitched3"", 6},
			{""blockcasing"", 1},
			{""ender_pearl"", 1},
		},
		out={{""machine/4"", 1}},
		time=60,
		batch=1
	},
	{
		machine=""miniaturizer"",
		inp={
			{""wallbreakable"", 20},
			{""glitched4"", 6},
			{""blockcasing"", 1},
			{""ender_pearl"", 1},
		},
		out={{""machine/5"", 1}},
		time=60,
		batch=1
	},
	{
		machine=""machine3maker"",
		inp={
			{""machine/2"", 4},
			{""wallbreakable"", 4},
			{""blockcasing"", 1},
		},
		out={{""machine/3"", 1}},
		time=12,
		batch=10
	},
	{
		machine=""poopjector"",
		inp={{""machine/4"", 1}},
		out={{""glitched4"", 1}},
		time=12,
		batch=10
	},
	{
		machine=""poopjector"",
		inp={{""machine/3"", 1}},
		out={{""glitched3"", 1}},
		time=12,
		batch=10
	},
}
gives = {}
for i,rp in ipairs(recipes) do
	for _,it in ipairs(rp.out) do
		rp.out[it[1]] = (rp.out[it[1]] or 0) + it[2]
		if gives[it[1]] then
			print(""redup "", it[1])
		end
		gives[it[1]] = i
	end
end

queue, machine = {{""machine/2"", 1, state=""U""}}, {}
resc, inv = {
	iron_ingot=10000,
	gold_ingot=10000,
	redstone_dust=10000,
	obsidian=10000,
	blockcasing=43,
}, {}

function delete(a)
	if a.parent and a.parent.state == ""G"" then
		a.parent.child_ct = a.parent.child_ct - 1
	end
	queue[#queue] = nil
end

--[[
function wait_delete(m)
	if not machine[m] then
		return
	end

	local a = machine[m]
	if a.etime > time then
		print(""WAIT"", a.etime - time, m)
		time = a.etime
	end
	for _,it in ipairs(a.rp.out) do
		resc[it[1]@] = resc[it[1]@] + it[2]*a.count
	end
	resc[a[1]@] = resc[a[1]@] - a[2]
	inv[a[1]@] = inv[a[1]@] + a[2]

	if a.parent and a.parent.state == ""G"" then
		a.parent.child_ct = a.parent.child_ct - 1
	end
	machine[m] = nil
end
--]]

time = 0
while #queue > 0 do
	local q = queue[#queue]

	if q.state == ""U"" then
		-- default value
		resc[q[1]] = resc[q[1]] or 0
		inv[q[1]] = inv[q[1]] or 0
		if resc[q[1]] >= q[2] then
			-- resc enough -> del
			resc[q[1]] = resc[q[1]] - q[2]
			inv[q[1]] = inv[q[1]] + q[2]
			delete(q)
			print(""FIND IN INV"")
		elseif resc[q[1]] ~= 0 then
			-- resc partial -> recount
			ct = resc[q[1]]
			resc[q[1]] = 0
			inv[q[1]] = inv[q[1]] + ct
			q[2] = q[2] - ct
			print(""PARTIAL IN INV"")
		else
			rp = recipes[gives[q[1]]]
			q.count = math.ceil(q[2]/rp.out[q[1]])
			for _,it in ipairs(rp.inp) do
				queue[#queue+1] = {it[1], it[2]*q.count, state=""U"", parent=q}
			end
			q.rp = rp
			q.child_ct = #rp.inp
			q.state = ""G""
		end

	elseif q.state == ""G"" then
		--[[
		TODO: figure out a better algorithm
		that implements a multithreading-like
		approach, *and* is smart about materials
		for m,a in pairs(machine) do
			if a.parent == q then
				wait_delete(m)
			end
		end
		assert(q.child_ct == 0, ""recipie missing dependents at top of stack"")
		local rp = q.rp
		for _,it in ipairs(rp.inp) do
			inv[it[1]@] = inv[it[1]@] - it[2]*q.count
		end
		if machine[rp.machine] then
			wait_delete(rp.machine)
		end
		q.etime = time + rp.time*q.count
		q.state = ""C""
		machine[rp.machine] = q
		queue[#queue] = nil
		--]]
		assert(q.child_ct == 0, ""recipie missing dependents at top of stack"")
		local rp = q.rp
		for _,it in ipairs(rp.inp) do
			inv[it[1]] = inv[it[1]] - it[2]*q.count
		end
		print(""WAIT"", rp.time*q.count, m)
		time = time + rp.time*q.count
		for _,it in ipairs(rp.out) do
			resc[it[1]] = resc[it[1]] + it[2]*q.count
		end
		resc[q[1]] = resc[q[1]] - q[2]
		inv[q[1]] = inv[q[1]] + q[2]
		delete(q)

		else
			print(""Unknown state"", q.state)
			break
		end

	print()
	for _,q in ipairs(queue) do
		s = """"
		for k,v in pairs(q) do
			s = (""%s, %s=%s""):format(s, k, v)
		end
		print(s:sub(3))
	end
	print()
	for k,v in pairs(resc) do
		if v ~= 0 then
			print(k.."" x""..v)
		end
	end
	print()
	for k,v in pairs(inv) do
		if v ~= 0 then
			print(k.."" x""..v)
		end
	end
	print(""---"")
end

for m,a in pairs(machine) do
	wait_delete(m)
end

print(""TOTAL TIME"", time)"
PNyheeEL,Untitled,mantha_raghava,Java,Sunday 11th of February 2024 09:44:37 AM CDT,"import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner s=new Scanner(System.in);
        long t=s.nextLong();
        while(t-->0){
            String str1=s.next();
            String str2=s.next();
            int n=str1.length();
            int m=str2.length();
            //power array
            long mod=(long)1e9+7;
            long pow[]=new long[Math.max(n,m)];
            long p=1;
            pow[0]=1;
            for(int i=1;i<Math.max(n,m);i++){
                pow[i]=(pow[i-1]*p)%mod;
            }
            //pha and phb
            long pha[]=new long[n];
            long phb[]=new long[m];
            pha[0]=(int)str1.charAt(0);
            for(int i=1;i<n;i++){
                pha[i]=(pha[i-1]+((int)str1.charAt(i))*pow[i])%mod;
            }
            phb[0]=(int)str2.charAt(0);
            for(int i=1;i<m;i++){
                phb[i]=(phb[i-1]+((int)str2.charAt(i))*pow[i])%mod;
            }
            // System.out.prlongln(Arrays.toString(pha));
            // System.out.prlongln(Arrays.toString(phb));
            // querys
            long q=s.nextLong();
            while(q-->0){
                int i=s.nextInt();
                int j=s.nextInt();
                int k=s.nextInt();
                int l=s.nextInt();
                long ha=(pha[j]-(i==0?0:pha[i-1])+mod)%mod;
                long hb=(phb[l]-(k==0?0:phb[k-1])+mod)%mod;
                if(i>k) hb=(hb*pow[i-k])%mod;
                else ha=(ha*pow[k-i])%mod;
                // System.out.prlongln(ha+"" ""+hb);
                if(ha==hb){
                    System.out.println(""Yes"");
                }
                else{  
                    System.out.println(""No"");
                }
            }
        }
    }
}
    
"
heCk1Nr4,Untitled,sissou123,HTML,Sunday 11th of February 2024 09:40:11 AM CDT,"HTML5 and CSS3 Fundamentals
Build your very own website with HTML5 from scratch using HTML5 and CSS3 - designed for complete beginners 
What you'll learn
Know how to use Html tags and build with the most common ones.
Learn the use of attributes and common settings.
Create CSS stylesheets that control your site design and set them up on your project site. 
 
for more:https://cuty.io/HgAvZbwVk
"
4Gp0CJi2,Salary,MladenKarachanov,Java,Sunday 11th of February 2024 08:53:54 AM CDT,"package forLoop;

import java.util.Scanner;

public class _06_Salary {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int tabs = Integer.parseInt(scanner.nextLine());
        int salary = Integer.parseInt(scanner.nextLine());

        boolean isLostSalary = false;

        for (int i = 0; i < tabs; i++) {
            String site = scanner.nextLine();

            switch (site) {
                case ""Facebook"":
                    salary -= 150;
                    break;
                case ""Instagram"":
                    salary -= 100;
                    break;
                case ""Reddit"":
                    salary -= 50;
                    break;
            }

            if (salary <= 0) {
                isLostSalary = true;
                break;
            }
        }

        if (isLostSalary) {
            System.out.println(""You have lost your salary."");
        } else {
            System.out.println(salary);
        }
    }
}"
zx93sEc8,webserver.py,DrAungWinHtut,Python,Sunday 11th of February 2024 08:36:11 AM CDT,"from flask import Flask,redirect,url_for,render_template

app = Flask(__name__)


@app.route('/')
def home():    
    return render_template('home.html')

@app.route('/info/')
def info():
    file = open('info.html','r')
    content = file.read()
    file.close()
    return content

@app.route('/lib/')
def lib():
    return render_template('lib.html',data=['aung','win','htut'])


@app.route('/admin/')
def admin():
    return redirect(url_for('home'))





if __name__ == '__main__':
    app.run()"
p9cJYGLx,Untitled,maxx0110,Bash,Sunday 11th of February 2024 08:23:05 AM CDT,"#!/bin/bash

# Set the battery threshold (in percentage)
threshold=25

while true; do
    # Get the current battery level
    battery_level=$(acpi -b | grep -P -o '[0-9]+(?=%)')

    # Check if the battery level is below the threshold
    if [ ""$battery_level"" -lt ""$threshold"" ]; then
        # Send a notification
        dunstify ""Battery Low"" ""Battery level is ${battery_level}%"" -u critical
    fi

    # Sleep for 5 minutes before checking again
    sleep 60
done"
YWN7d9X8,02. Santa's Gifts,Spocoman,C#,Sunday 11th of February 2024 08:22:39 AM CDT,"using System;
using System.Linq;
using System.Collections.Generic;

namespace SantasGifts
{
    class Program   
    {
        static void Main(string[] args)
        {
            int commandNumbers = int.Parse(Console.ReadLine());

            var houses = Console.ReadLine().Split().ToList();

            int index = 0;

            for (int i = 0; i < commandNumbers; i++)
            {           
                int currentIndex = index;

                var command = Console.ReadLine().Split().ToList();

                if (command[0] == ""Forward"" || command[0] == ""Back"")
                {
                    int steps = int.Parse(command[1]);
                    currentIndex += (command[0] == ""Forward"" ? steps : -steps);
                    if(currentIndex >= 0 && currentIndex < houses.Count) 
                    {
                        index = currentIndex;
                        houses.RemoveAt(index);
                    }
                }
                else if (command[0] == ""Gift"")
                {
                    currentIndex = int.Parse(command[1]);
                    if (currentIndex >= 0 && currentIndex < houses.Count)
                    {
                        index = currentIndex;
                        houses.Insert(index, command[2]);
                    }
                }
                else if (command[0] == ""Swap"")
                {
                    int index1 = houses.IndexOf(command[1]),
                        index2 = houses.IndexOf(command[2]);

                    if (index1 != -1 && index2 != -1)
                    {
                        string value = houses[index1];
                        houses[index1] = houses[index2];
                        houses[index2] = value;
                    }     
                }
            }

            Console.WriteLine($""Position: {index}"");

            if (houses.Count() > 0)
            {
                Console.WriteLine(string.Join("", "", houses));
            }
        }
    }
}"
yrfqB6Yx,src/index.js,bahGodam99,JavaScript,Sunday 11th of February 2024 08:00:29 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"" />
    <link rel=""icon"" href=""%PUBLIC_URL%/favicon.ico"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"" />
    <meta name=""theme-color"" content=""#000000"" />
    <meta
      name=""description""
      content=""Web site created using create-react-app""
    />
    <link rel=""apple-touch-icon"" href=""%PUBLIC_URL%/logo192.png"" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json"" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike ""/favicon.ico"" or ""favicon.ico"", ""%PUBLIC_URL%/favicon.ico"" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->

    <!-- React Developer Tools -->
    <!-- <script src=""http://localhost:3000/""></script> -->
    <title>React App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id=""root""></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>
"
RDDRvG0F,StudentsAndGrades,PIBogdanov,C,Sunday 11th of February 2024 07:57:54 AM CDT,"#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <Windows.h>
#include <conio.h>

#pragma warning(disable : 4996)

#define minStudetsPerGroup 2
#define maxStudentsPerGroup 20

#define maxAllowedCharacters 40

#define minSubjectCount 1
#define maxSubjectsCount 20

#define minGrade 2
#define maxGrade 6

unsigned short inputTheStudentsInTheGroupCount();

unsigned short inputTheSubjectsCount();

void inputStudentNames(char[][maxAllowedCharacters], unsigned short);

void inputNamesForTheSubjects(char[][maxAllowedCharacters], unsigned short);

void removeNewlineCharacterIfItExists(char[]);

void inputGrades(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

bool isValidGrade(float);

void printAllStudentInfo(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void mainMenu(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void searchForAStudent(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void inputAStudentName(char[][maxAllowedCharacters], char[maxAllowedCharacters], unsigned short);

void printStudentInfo(char[][maxAllowedCharacters], char[maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void searchForAGrade(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

bool isTheStudentNameInTheGroup(char[][maxAllowedCharacters], char[], unsigned short);

void inputAGrade(float[][maxSubjectsCount], float, unsigned short, unsigned short);

bool checkTheStudentsIfTheyHaveTheInputtedGradeForASearch(float[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount);

unsigned short studentsWithThisGradeCount(float[][maxSubjectsCount], float, unsigned short, unsigned short);

void printStudentsWithThisGrade(char[][maxAllowedCharacters], char[][maxSubjectsCount], float, unsigned short, unsigned short);

void pressTheEnterKeyToContinue();

void isCursorVisible(bool);

void clearTheInputBuffer();

int main()
{
	isCursorVisible(false);

	unsigned short studentsInTheGroupCount = inputTheStudentsInTheGroupCount();

	printf(""\n\n"");

	unsigned short subjectsCount = inputTheSubjectsCount();

	clearTheInputBuffer();

	printf(""\n\n"");

	char studentNames[maxStudentsPerGroup][maxAllowedCharacters];

	printf(""Input names for the students:\n\n"");

	inputStudentNames(studentNames, studentsInTheGroupCount);

	printf(""\n\n"");

	char subjectNames[maxSubjectsCount][maxAllowedCharacters];

	printf(""Input names for the subjects:\n\n"");

	inputNamesForTheSubjects(subjectNames, subjectsCount);

	printf(""\n\n"");

	float grades[maxStudentsPerGroup][maxSubjectsCount];

	printf(""Input grades for each subject for the students:\n\n"");

	inputGrades(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount);

	system(""cls"");

	//printAllStudentInfo(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount); // For debugging

	clearTheInputBuffer();

	mainMenu(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount);

	return 0;
}

unsigned short inputTheStudentsInTheGroupCount()
{
	unsigned short studentsInTheGroupCount;

	studentsInTheGroupCountInput:
	printf(""How many students does the group have? [%d : %d]\n"", minStudetsPerGroup, maxStudentsPerGroup);
	printf(""The students count is: "");
	scanf(""%hu"", &studentsInTheGroupCount);

	if ( (studentsInTheGroupCount < minStudetsPerGroup) || (studentsInTheGroupCount > maxStudentsPerGroup) )
	{
		printf(""\n\nInvalid input!\n\n"");

		goto studentsInTheGroupCountInput;
	}

	return studentsInTheGroupCount;
}

unsigned short inputTheSubjectsCount()
{
	unsigned short subjectsCount;

	subjectsCountInput:
	printf(""How many subjects does the group have? [%d : %d]\n"", minSubjectCount, maxSubjectsCount);
	printf(""The subjects count is: "");
	scanf(""%hu"", &subjectsCount);

	if ( (subjectsCount < minSubjectCount) || (subjectsCount > maxSubjectsCount) )
	{
		printf(""\n\nInvalid input!\n\n"");

		goto subjectsCountInput;
	}

	return subjectsCount;
}

void inputStudentNames(char studentNames[][maxAllowedCharacters], unsigned short studentsInTheGroupCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount;)
	{
		printf(""Student %s%hu: "", ((i + 1) < 10) ? "" "" : """", i + 1);

		if (fgets(studentNames[i], maxAllowedCharacters, stdin) != NULL)
		{
			removeNewlineCharacterIfItExists(studentNames[i]);

			i++;
		}

		else
		{
			printf(""\n\nToo many inputted characters! The max value of characters is %hu. Input a new name.\n\n"", maxAllowedCharacters);
		}
	}
}

void inputNamesForTheSubjects(char subjectNames[][maxAllowedCharacters], unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < subjectsCount;)
	{
		printf(""Subject %s%hu: "", ((i + 1) < 10) ? "" "" : """", i + 1);

		if (fgets(subjectNames[i], maxAllowedCharacters, stdin) != NULL)
		{
			removeNewlineCharacterIfItExists(subjectNames[i]);

			i++;
		}

		else
		{
			printf(""\n\nToo many inputted characters! The max value of characters is %hu. Input a new name.\n\n"", maxAllowedCharacters);
		}
	}
}

void removeNewlineCharacterIfItExists(char currentName[])
{
	size_t nameLength = strlen(currentName);

	if ( (nameLength > 0) && (currentName[nameLength - 1] == '\n') )
	{
		currentName[nameLength - 1] = '\0';
	}
}

void inputGrades(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++) 
	{
		printf(""%s's grades:\n\n"", studentNames[i]);

		for (unsigned short j = 0; j < subjectsCount; j++) 
		{
			do 
			{
				printf(""%s: "", subjectNames[j]);
				scanf(""%f"", &grades[i][j]);

				if (!isValidGrade(grades[i][j])) 
				{
					printf(""\n\nInvalid grade! Input a new grade!\n\n"");
				}
			} while (!isValidGrade(grades[i][j]));
		}

		printf(""\n\n"");
	}
}

bool isValidGrade(float grade) 
{
	return (grade >= minGrade) && (grade <= maxGrade);
}

void printAllStudentInfo(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++) 
	{
		printf(""Student %hu: %s\n\n"", i + 1, studentNames[i]);

		for (unsigned short j = 0; j < subjectsCount; j++) 
		{
			printf(""%s: %.2f\n"", subjectNames[i], grades[i][j]);
		}

		if (i < (studentsInTheGroupCount - 1))
		{
			printf(""\n\n"");
		}
	}
}

void mainMenu(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	bool isTrue = false;

	char choice;

	while (!isTrue)
	{
		system(""cls"");

		printf(""Main Menu:\n\n\n"");

		printf(""1. Search a student\n\n"");
		printf(""2. Search a grade\n\n"");
		printf(""3. Exit\n\n\n"");

		printf(""Your choice is: "");
		scanf(""%c"", &choice);

		switch (choice)
		{
			case '1': searchForAStudent(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount); break;

			case '2': searchForAGrade(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount); break;

			case '3': isTrue = true;
		}
	}
}

void searchForAStudent(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	system(""cls"");

	clearTheInputBuffer();

	char studentName[maxAllowedCharacters];

	inputAStudentName(studentNames, studentName, studentsInTheGroupCount);

	printStudentInfo(studentNames, studentName, subjectNames, grades, studentsInTheGroupCount, subjectsCount);

	pressTheEnterKeyToContinue();
}

void inputAStudentName(char studentNames[][maxAllowedCharacters], char studentName[maxAllowedCharacters], unsigned short studentsInTheGroupCount)
{
	bool isFound = false;

	while (!isFound)
	{
		printf(""Input the name of the student you want to search: "");

		if (fgets(studentName, maxAllowedCharacters, stdin) != NULL)
		{
			removeNewlineCharacterIfItExists(studentName);

			if (!isTheStudentNameInTheGroup(studentNames, studentName, studentsInTheGroupCount))
			{
				printf(""\n\nA student with this name hasn't been found. Please input a different name.\n\n\n"");
			}

			else
			{
				printf(""\n\nA student with this name has been found. Here's their information:\n\n\n"");

				isFound = true;
			}
		}

		else
		{
			printf(""\n\nToo many inputted characters! The max value of characters is %hu. Input a new name.\n\n\n"", maxAllowedCharacters);
		}
	}
}

void printStudentInfo(char studentNames[][maxAllowedCharacters], char studentName[maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++)
	{
		if (!strcmp(studentNames[i], studentName))
		{
			printf(""Student %hu: %s\n\n"", i + 1, studentNames[i]);

			for (unsigned short j = 0; j < subjectsCount; j++)
			{
				printf(""%s: %.2f\n"", subjectNames[j], grades[i][j]);
			}

			break;
		}
	}
}

void searchForAGrade(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	system(""cls"");

	clearTheInputBuffer();

	float grade = 0.0f;

	inputAGrade(studentNames, grade, studentsInTheGroupCount, subjectsCount);

	printStudentsWithThisGrade(studentNames, subjectNames, grade, studentsInTheGroupCount, subjectsCount);

	pressTheEnterKeyToContinue();
}

bool isTheStudentNameInTheGroup(char studentNames[][maxAllowedCharacters], char studentName[], unsigned short studentsInTheGroupCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++) 
	{
		if (!strcmp(studentNames[i], studentName))
		{
			return true;
		}
	}

	return false;
}

void inputAGrade(float grades[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	bool isFound = false;

	while ( (!isFound) && (!isValidGrade(grade)) )
	{
		printf(""Input a grade you want to search: "");
		scanf(""%f"", &grade);

		if (!isValidGrade)
		{
			printf(""\n\nIvalid input! Input a new grade.\n\n\n"");
		}

		else
		{
			if (!checkTheStudentsIfTheyHaveTheInputtedGradeForASearch(grades, grade, studentsInTheGroupCount, subjectsCount))
			{
				printf(""\n\nThere's no student with this grade. Please input a different grade.\n\n\n"");
			}

			else
			{
				unsigned short studentsWithThatGradeCount = studentsWithThisGradeCount(grades, grade, studentsInTheGroupCount, subjectsCount);

				printf(""\n\nThere %s %hu student%s with the grade %.2f. Here %s their information:\n\n\n"", (studentsWithThatGradeCount == 1) ? ""is"" : ""are"", studentsWithThatGradeCount, (studentsWithThatGradeCount == 1) ? """" : ""s"", grade, (studentsWithThatGradeCount == 1) ? ""is"" : ""are"");

				isFound = true;
			}
		}
	}
}

bool checkTheStudentsIfTheyHaveTheInputtedGradeForASearch(float grades[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	float tolerance = 0.1f;

	for (unsigned short i = 0; i < studentsInTheGroupCount; i++)
	{
		for (unsigned short j = 0; j < subjectsCount; j++)
		{
			if (fabs(grades[i][j] - grade) < tolerance)
			{
				return true;
			}
		}
	}

	return false;
}

unsigned short studentsWithThisGradeCount(float grades[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	unsigned short studentsWithThatGradeCount = 0;

	for (unsigned short i = 0; i < studentsInTheGroupCount; i++)
	{
		for (unsigned short j = 0; j < subjectsCount; j++)
		{
			if (grades[i][j] == grade)
			{
				studentsWithThatGradeCount++;
			}
		}
	}

	return studentsWithThatGradeCount;
}

void printStudentsWithThisGrade(char studentNames[][maxAllowedCharacters], char subjectNames[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{

}

void pressTheEnterKeyToContinue()
{
	printf(""\n\n\nPress \""ENTER\"" to go back to the Main Menu"");

	while (_getch() != 13); // ""\r"" - The ""ENTER / RETURN"" key
}

void isCursorVisible(bool isVisible)
{
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);

	CONSOLE_CURSOR_INFO cursorInfo;
	GetConsoleCursorInfo(consoleHandle, &cursorInfo);

	cursorInfo.bVisible = isVisible;
	SetConsoleCursorInfo(consoleHandle, &cursorInfo);
}

void clearTheInputBuffer()
{
	char character = getchar();

	while ( (character != '\n') && (character != EOF) );
}

Input:
12
2
Aikut Shakir
Aleksandra Kolarova
Antonia Sasheva
Asen Popov
Daniel Slavchev
Dilai Hasan
Dimitar Marinov
Ivan Grivnev
Ivan Karnalov
Kostadin Shishmanov
Petar Bogdanov
Petar Denizov
Math
BPE
4
4
5
5
4
6
5
6
5
5
4
4
4
5
3
4
4
3
3
3
6
6
4
5"
zkw2nGY7,StudentsAndGrades,PIBogdanov,C,Sunday 11th of February 2024 07:56:41 AM CDT,"#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <Windows.h>
#include <conio.h>

#pragma warning(disable : 4996)

#define minStudetsPerGroup 2
#define maxStudentsPerGroup 20

#define maxAllowedCharacters 40

#define minSubjectCount 1
#define maxSubjectsCount 20

#define minGrade 2
#define maxGrade 6

unsigned short inputTheStudentsInTheGroupCount();

unsigned short inputTheSubjectsCount();

void inputStudentNames(char[][maxAllowedCharacters], unsigned short);

void inputNamesForTheSubjects(char[][maxAllowedCharacters], unsigned short);

void removeNewlineCharacterIfItExists(char[]);

void inputGrades(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

bool isValidGrade(float);

void printAllStudentInfo(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void mainMenu(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void searchForAStudent(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void inputAStudentName(char[][maxAllowedCharacters], char[maxAllowedCharacters], unsigned short);

void printStudentInfo(char[][maxAllowedCharacters], char[maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

void searchForAGrade(char[][maxAllowedCharacters], char[][maxAllowedCharacters], float[][maxSubjectsCount], unsigned short, unsigned short);

bool isTheStudentNameInTheGroup(char[][maxAllowedCharacters], char[], unsigned short);

void inputAGrade(float[][maxSubjectsCount], float, unsigned short, unsigned short);

bool checkTheStudentsIfTheyHaveTheInputtedGradeForASearch(float[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount);

unsigned short studentsWithThisGradeCount(float[][maxSubjectsCount], float, unsigned short, unsigned short);

void printStudentsWithThisGrade(char[][maxAllowedCharacters], char[][maxSubjectsCount], float, unsigned short, unsigned short);

void pressTheEnterKeyToContinue();

void isCursorVisible(bool);

void clearTheInputBuffer();

int main()
{
	isCursorVisible(false);

	unsigned short studentsInTheGroupCount = inputTheStudentsInTheGroupCount();

	printf(""\n\n"");

	unsigned short subjectsCount = inputTheSubjectsCount();

	clearTheInputBuffer();

	printf(""\n\n"");

	char studentNames[maxStudentsPerGroup][maxAllowedCharacters];

	printf(""Input names for the students:\n\n"");

	inputStudentNames(studentNames, studentsInTheGroupCount);

	printf(""\n\n"");

	char subjectNames[maxSubjectsCount][maxAllowedCharacters];

	printf(""Input names for the subjects:\n\n"");

	inputNamesForTheSubjects(subjectNames, subjectsCount);

	printf(""\n\n"");

	float grades[maxStudentsPerGroup][maxSubjectsCount];

	printf(""Input grades for each subject for the students:\n\n"");

	inputGrades(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount);

	system(""cls"");

	//printAllStudentInfo(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount); // For debugging

	clearTheInputBuffer();

	mainMenu(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount);

	return 0;
}

unsigned short inputTheStudentsInTheGroupCount()
{
	unsigned short studentsInTheGroupCount;

	studentsInTheGroupCountInput:
	printf(""How many students does the group have? [%d : %d]\n"", minStudetsPerGroup, maxStudentsPerGroup);
	printf(""The students count is: "");
	scanf(""%hu"", &studentsInTheGroupCount);

	if ( (studentsInTheGroupCount < minStudetsPerGroup) || (studentsInTheGroupCount > maxStudentsPerGroup) )
	{
		printf(""\n\nInvalid input!\n\n"");

		goto studentsInTheGroupCountInput;
	}

	return studentsInTheGroupCount;
}

unsigned short inputTheSubjectsCount()
{
	unsigned short subjectsCount;

	subjectsCountInput:
	printf(""How many subjects does the group have? [%d : %d]\n"", minSubjectCount, maxSubjectsCount);
	printf(""The subjects count is: "");
	scanf(""%hu"", &subjectsCount);

	if ( (subjectsCount < minSubjectCount) || (subjectsCount > maxSubjectsCount) )
	{
		printf(""\n\nInvalid input!\n\n"");

		goto subjectsCountInput;
	}

	return subjectsCount;
}

void inputStudentNames(char studentNames[][maxAllowedCharacters], unsigned short studentsInTheGroupCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount;)
	{
		printf(""Student %s%hu: "", ((i + 1) < 10) ? "" "" : """", i + 1);

		if (fgets(studentNames[i], maxAllowedCharacters, stdin) != NULL)
		{
			removeNewlineCharacterIfItExists(studentNames[i]);

			i++;
		}

		else
		{
			printf(""\n\nToo many inputted characters! The max value of characters is %hu. Input a new name.\n\n"", maxAllowedCharacters);
		}
	}
}

void inputNamesForTheSubjects(char subjectNames[][maxAllowedCharacters], unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < subjectsCount;)
	{
		printf(""Subject %s%hu: "", ((i + 1) < 10) ? "" "" : """", i + 1);

		if (fgets(subjectNames[i], maxAllowedCharacters, stdin) != NULL)
		{
			removeNewlineCharacterIfItExists(subjectNames[i]);

			i++;
		}

		else
		{
			printf(""\n\nToo many inputted characters! The max value of characters is %hu. Input a new name.\n\n"", maxAllowedCharacters);
		}
	}
}

void removeNewlineCharacterIfItExists(char currentName[])
{
	size_t nameLength = strlen(currentName);

	if ( (nameLength > 0) && (currentName[nameLength - 1] == '\n') )
	{
		currentName[nameLength - 1] = '\0';
	}
}

void inputGrades(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++) 
	{
		printf(""%s's grades:\n\n"", studentNames[i]);

		for (unsigned short j = 0; j < subjectsCount; j++) 
		{
			do 
			{
				printf(""%s: "", subjectNames[j]);
				scanf(""%f"", &grades[i][j]);

				if (!isValidGrade(grades[i][j])) 
				{
					printf(""\n\nInvalid grade! Input a new grade!\n\n"");
				}
			} while (!isValidGrade(grades[i][j]));
		}

		printf(""\n\n"");
	}
}

bool isValidGrade(float grade) 
{
	return (grade >= minGrade) && (grade <= maxGrade);
}

void printAllStudentInfo(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++) 
	{
		printf(""Student %hu: %s\n\n"", i + 1, studentNames[i]);

		for (unsigned short j = 0; j < subjectsCount; j++) 
		{
			printf(""%s: %.2f\n"", subjectNames[i], grades[i][j]);
		}

		if (i < (studentsInTheGroupCount - 1))
		{
			printf(""\n\n"");
		}
	}
}

void mainMenu(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	bool isTrue = false;

	char choice;

	while (!isTrue)
	{
		system(""cls"");

		printf(""Main Menu:\n\n\n"");

		printf(""1. Search a student\n\n"");
		printf(""2. Search a grade\n\n"");
		printf(""3. Exit\n\n\n"");

		printf(""Your choice is: "");
		scanf(""%c"", &choice);

		switch (choice)
		{
			case '1': searchForAStudent(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount); break;

			case '2': searchForAGrade(studentNames, subjectNames, grades, studentsInTheGroupCount, subjectsCount); break;

			case '3': isTrue = true;
		}
	}
}

void searchForAStudent(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	system(""cls"");

	clearTheInputBuffer();

	char studentName[maxAllowedCharacters];

	inputAStudentName(studentNames, studentName, studentsInTheGroupCount);

	printStudentInfo(studentNames, studentName, subjectNames, grades, studentsInTheGroupCount, subjectsCount);

	pressTheEnterKeyToContinue();
}

void inputAStudentName(char studentNames[][maxAllowedCharacters], char studentName[maxAllowedCharacters], unsigned short studentsInTheGroupCount)
{
	bool isFound = false;

	while (!isFound)
	{
		printf(""Input the name of the student you want to search: "");

		if (fgets(studentName, maxAllowedCharacters, stdin) != NULL)
		{
			removeNewlineCharacterIfItExists(studentName);

			if (!isTheStudentNameInTheGroup(studentNames, studentName, studentsInTheGroupCount))
			{
				printf(""\n\nA student with this name hasn't been found. Please input a different name.\n\n\n"");
			}

			else
			{
				printf(""\n\nA student with this name has been found. Here's their information:\n\n\n"");

				isFound = true;
			}
		}

		else
		{
			printf(""\n\nToo many inputted characters! The max value of characters is %hu. Input a new name.\n\n\n"", maxAllowedCharacters);
		}
	}
}

void printStudentInfo(char studentNames[][maxAllowedCharacters], char studentName[maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++)
	{
		if (!strcmp(studentNames[i], studentName))
		{
			printf(""Student %hu: %s\n\n"", i + 1, studentNames[i]);

			for (unsigned short j = 0; j < subjectsCount; j++)
			{
				printf(""%s: %.2f\n"", subjectNames[j], grades[i][j]);
			}

			break;
		}
	}
}

void searchForAGrade(char studentNames[][maxAllowedCharacters], char subjectNames[][maxAllowedCharacters], float grades[][maxSubjectsCount], unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	system(""cls"");

	clearTheInputBuffer();

	float grade = 0.0f;

	inputAGrade(studentNames, grade, studentsInTheGroupCount, subjectsCount);

	printStudentsWithThisGrade(studentNames, subjectNames, grade, studentsInTheGroupCount, subjectsCount);

	pressTheEnterKeyToContinue();
}

bool isTheStudentNameInTheGroup(char studentNames[][maxAllowedCharacters], char studentName[], unsigned short studentsInTheGroupCount)
{
	for (unsigned short i = 0; i < studentsInTheGroupCount; i++) 
	{
		if (!strcmp(studentNames[i], studentName))
		{
			return true;
		}
	}

	return false;
}

void inputAGrade(float grades[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	bool isFound = false;

	while ( (!isFound) && (!isValidGrade(grade)) )
	{
		printf(""Input a grade you want to search: "");
		scanf(""%f"", &grade);

		if (!isValidGrade)
		{
			printf(""\n\nIvalid input! Input a new grade.\n\n\n"");
		}

		else
		{
			if (!checkTheStudentsIfTheyHaveTheInputtedGradeForASearch(grades, grade, studentsInTheGroupCount, subjectsCount))
			{
				printf(""\n\nThere's no student with this grade. Please input a different grade.\n\n\n"");
			}

			else
			{
				unsigned short studentsWithThatGradeCount = studentsWithThisGradeCount(grades, grade, studentsInTheGroupCount, subjectsCount);

				printf(""\n\nThere %s %hu student%s with the grade %.2f. Here %s their information:\n\n\n"", (studentsWithThatGradeCount == 1) ? ""is"" : ""are"", studentsWithThatGradeCount, (studentsWithThatGradeCount == 1) ? """" : ""s"", grade, (studentsWithThatGradeCount == 1) ? ""is"" : ""are"");

				isFound = true;
			}
		}
	}
}

bool checkTheStudentsIfTheyHaveTheInputtedGradeForASearch(float grades[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	float tolerance = 0.1f;

	for (unsigned short i = 0; i < studentsInTheGroupCount; i++)
	{
		for (unsigned short j = 0; j < subjectsCount; j++)
		{
			if (fabs(grades[i][j] - grade) < tolerance)
			{
				return true;
			}
		}
	}

	return false;
}

unsigned short studentsWithThisGradeCount(float grades[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{
	unsigned short studentsWithThatGradeCount = 0;

	for (unsigned short i = 0; i < studentsInTheGroupCount; i++)
	{
		for (unsigned short j = 0; j < subjectsCount; j++)
		{
			if (grades[i][j] == grade)
			{
				studentsWithThatGradeCount++;
			}
		}
	}

	return studentsWithThatGradeCount;
}

void printStudentsWithThisGrade(char studentNames[][maxAllowedCharacters], char subjectNames[][maxSubjectsCount], float grade, unsigned short studentsInTheGroupCount, unsigned short subjectsCount)
{

}

void pressTheEnterKeyToContinue()
{
	printf(""\n\n\nPress \""ENTER\"" to go back to the Main Menu"");

	while (_getch() != 13); // ""\r"" - The ""ENTER / RETURN"" key
}

void isCursorVisible(bool isVisible)
{
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);

	CONSOLE_CURSOR_INFO cursorInfo;
	GetConsoleCursorInfo(consoleHandle, &cursorInfo);

	cursorInfo.bVisible = isVisible;
	SetConsoleCursorInfo(consoleHandle, &cursorInfo);
}

void clearTheInputBuffer()
{
	char character = getchar();

	while ( (character != '\n') && (character != EOF) );
}"
hpb72WN9,Algoritmi lezione 7,fcamuso,C++,Sunday 11th of February 2024 07:47:56 AM CDT,"#include <iostream>

using namespace std;

int trova_minimo(int v[], int sx, int dx)
{
  int min_sx=-1, min_dx = -1;

  if (sx==dx) //un elemento solo
  {
    return v[sx];
  }
  else
    if (sx + 1 == dx ) //due elementi
    {
      if (v[sx]<v[dx])
        return v[sx];
      else
        return v[dx];
    }
    else
    {
      int mediano = sx +(dx - sx)/2;
      //cout << sx << "" "" << mediano << endl;
      min_sx = trova_minimo(v, sx, mediano);

      //cout << mediano+1 << "" "" << dx << endl;
      min_dx = trova_minimo(v, mediano+1, dx);
    }

    if (min_sx<min_dx)
      return min_sx;
    else
      return min_dx;
}


int main()
{
    int v[]={18,6,2,20,1,40,7,8,12,60};
    cout << trova_minimo(v, 0, 9);
    return 0;
}

"
6HRfSCvJ,flasktest.py,DrAungWinHtut,Python,Sunday 11th of February 2024 07:47:38 AM CDT,"#pip install flask
from flask import Flask

app = Flask(__name__)

# http://127.0.0.1:5000         /
# http://www.eg.com             /
# http://www.eg.com/info        /info
# http://www.eg.com/admin       /admin
def readFile(fname):
    with open(fname,'r') as file:
        page = file.read()
    return page



@app.route('/')
def homepage():    
    return readFile('home.html')


@app.route('/info')
def info():
    return readFile('info.html')


@app.route('/lib')
def lib():
    return readFile('lib.html')

if __name__ == '__main__':
    app.run()

















"
7bxPS0QW,Untitled,turegum,Python,Sunday 11th of February 2024 07:41:04 AM CDT,"import sys

f = sys.stdin

line =  f.readline().split()
n = int(line[0])
s = float(line[1])
a = [float(x) for x in f.readline().split()]

def generate_subsets_sums(numbers):
    subset_sums = {0}
    for number in numbers:
        new_sums = set()
        for existing_sum in subset_sums:
            new_sums.add(existing_sum + number)
        subset_sums.update(new_sums)
    return subset_sums
 
def is_subset_sum_possible(numbers, target_sum, tolerance=1e-6):
    # Делим на 2 части 
    mid = len(numbers) // 2
    left_half, right_half = numbers[:mid], numbers[mid:]
 
    # Генерируем все подмножества сумм для левой и правой частей
    left_sums = generate_subsets_sums(left_half)
    right_sums = generate_subsets_sums(right_half)
 
    # Проводим попарное сравнение элементов из левого и правого множеств
    for left_sum in left_sums:
        complement = target_sum - left_sum
        if any(abs(complement - right_sum) <= tolerance for right_sum in right_sums):
            return True
    return False
 
print(is_subset_sum_possible(a, s))"
L8a2SMeW,aantalWarn.js V14 V2,jensie1996,JavaScript,Sunday 11th of February 2024 07:21:45 AM CDT,"const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');
const warnSchema = require('../schemas/warn-schema');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('aantalwarn')
        .setDescription('Aantal Warns van een gebruiker!')
        .setDefaultMemberPermissions(PermissionFlagsBits.KickMembers)
        .addUserOption(option =>
            option.setName('user')
                .setDescription('Geef een gebruiker op')
                .setRequired(true)),
    async execute(client, interaction) {

        // Member ophalen.
        // Met getUser krijg je enkel de user gegevens wij moeten alles krijgen van de volledige member.
        const member = interaction.options.getMember('user') || interaction.member;

        // Warns ophalen via DB.
        const data = await warnSchema.findOne({ ""userID"": member.id });

        let aantalWarns = data.warnAantal;

        // Op interactie antwoorden.
        interaction.reply(`**${member.user.tag}** heeft ${aantalWarns} Warn(s).`);
    }
};"
EsDfDt9L,delwarn.js V14 V2,jensie1996,JavaScript,Sunday 11th of February 2024 07:18:51 AM CDT,"module.exports = {
    data: new SlashCommandBuilder()
        .setName('delwarn')
        .setDescription('Haal een waarschuwin weg bij een gebruiker!')
        .setDefaultMemberPermissions(PermissionFlagsBits.KickMembers)
        .addUserOption(option =>
            option.setName('user')
                .setDescription('Geef een gebruiker op')
                .setRequired(true))
        .addIntegerOption(option =>
            option.setName('aantal')
                .setDescription('Selecteer een aantal')
                .setRequired(true)
                .addChoices(
                    { name: 'Warns weghalen', value: 0 },
                    { name: '1 Warn', value: 1 },
                    { name: '2 Warns', value: 2 },
                    { name: '3 Warns', value: 3 }
                )),
    async execute(client, interaction) {

        // ...
		
    }
};"
ywV7TnbC,02. Santa's Gifts,Spocoman,C++,Sunday 11th of February 2024 07:16:49 AM CDT,"#include <iostream>
#include <string>
#include <sstream>
#include <vector>

using namespace std;

vector<string> split(string& str) {
    vector<string> v;
    istringstream ss(str);
    string s;
    while (ss >> s) {
        v.push_back(s);
    }
    return v;
}

int getIndex(vector<string>& v, string s) {
    for (int i = 0; i < v.size(); i++) {
        if (v[i] == s) {
            return i;
        }
    }
    return -1;
}

int main() {
    int commandNumbers, index = 0;
    cin >> commandNumbers;
    cin.ignore();

    string line;
    getline(cin, line);

    vector<string> command, houses = split(line);

    for (int i = 0; i < commandNumbers; i++) {
        int currentIndex = index;

        getline(cin, line);
        command = split(line);

        if (command[0] == ""Forward"" || command[0] == ""Back"") {
            int steps = stoi(command[1]);
            currentIndex += (command[0] == ""Forward"" ? steps : -steps);
            if (currentIndex >= 0 && currentIndex < houses.size()) {
                index = currentIndex;
                houses.erase(houses.begin() + index);
            }
        }
        else if (command[0] == ""Gift"") {
            currentIndex = stoi(command[1]);
            if (currentIndex >= 0 && currentIndex < houses.size()) {
                index = currentIndex;
                houses.insert(houses.begin() + index, command[2]);
            }
        }
        else {
            int index1 = getIndex(houses, command[1]),
                index2 = getIndex(houses, command[2]);

            if (index1 != -1 && index2 != -1) {
                string value = houses[index1];
                houses[index1] = houses[index2];
                houses[index2] = value;
            }
        }
    }

    cout << ""Position: "" << index << endl;

    if (!houses.empty()) {
        for (int i = 0; i < houses.size(); i++) {
            cout << houses[i] << (i != houses.size() - 1 ? "", "" : """");
        }
    }

    cout << endl;
    return 0;
}"
Fjz3NPaS,warn.js V14 V2,jensie1996,JavaScript,Sunday 11th of February 2024 07:14:33 AM CDT,"module.exports = {
    data: new SlashCommandBuilder()
        .setName('warn')
        .setDescription('Warn een gebruiker!')
        .setDefaultMemberPermissions(PermissionFlagsBits.KickMembers)
        .addUserOption(option =>
            option.setName('user')
                .setDescription('Geef een gebruiker op')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('reden')
                .setDescription('Geef een reden op')
                .setRequired(true)),
    async execute(client, interaction) {

        // ...
		
    }
};"
