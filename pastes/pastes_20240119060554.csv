id,title,username,language,date,content
u14K6ey1,Nigerian scammers [19-1-1/2024],bombaires,AIMMS,Thursday 18th of January 2024 11:58:11 PM CDT,"<a href=""mailto:www.europeancommissionn@gmail.com"">www.europeancommissionn@gmail.com</a>
<a href=""mailto:www.europeancommissionn+18722@gmail.com"">www.europeancommissionn+18722@gmail.com</a>
<a href=""mailto:www.europeancommissionn+1038@gmail.com"">www.europeancommissionn+1038@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5413@gmail.com"">www.europeancommissionn+5413@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25379@gmail.com"">www.europeancommissionn+25379@gmail.com</a>
<a href=""mailto:www.europeancommissionn+30547@gmail.com"">www.europeancommissionn+30547@gmail.com</a>
<a href=""mailto:www.europeancommissionn+14674@gmail.com"">www.europeancommissionn+14674@gmail.com</a>
<a href=""mailto:www.europeancommissionn+11556@gmail.com"">www.europeancommissionn+11556@gmail.com</a>
<a href=""mailto:www.europeancommissionn+6767@gmail.com"">www.europeancommissionn+6767@gmail.com</a>
<a href=""mailto:www.europeancommissionn+1427@gmail.com"">www.europeancommissionn+1427@gmail.com</a>
<a href=""mailto:www.europeancommissionn+15742@gmail.com"">www.europeancommissionn+15742@gmail.com</a>
<a href=""mailto:www.europeancommissionn+8081@gmail.com"">www.europeancommissionn+8081@gmail.com</a>
<a href=""mailto:www.europeancommissionn+4963@gmail.com"">www.europeancommissionn+4963@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27713@gmail.com"">www.europeancommissionn+27713@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27631@gmail.com"">www.europeancommissionn+27631@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29309@gmail.com"">www.europeancommissionn+29309@gmail.com</a>
<a href=""mailto:www.europeancommissionn+19245@gmail.com"">www.europeancommissionn+19245@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17305@gmail.com"">www.europeancommissionn+17305@gmail.com</a>
<a href=""mailto:www.europeancommissionn+32589@gmail.com"">www.europeancommissionn+32589@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5415@gmail.com"">www.europeancommissionn+5415@gmail.com</a>
<a href=""mailto:www.europeancommissionn+26968@gmail.com"">www.europeancommissionn+26968@gmail.com</a>
<a href=""mailto:www.europeancommissionn+6314@gmail.com"">www.europeancommissionn+6314@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25292@gmail.com"">www.europeancommissionn+25292@gmail.com</a>
<a href=""mailto:www.europeancommissionn+15520@gmail.com"">www.europeancommissionn+15520@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9415@gmail.com"">www.europeancommissionn+9415@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3388@gmail.com"">www.europeancommissionn+3388@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13864@gmail.com"">www.europeancommissionn+13864@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9967@gmail.com"">www.europeancommissionn+9967@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16001@gmail.com"">www.europeancommissionn+16001@gmail.com</a>
<a href=""mailto:www.europeancommissionn+10327@gmail.com"">www.europeancommissionn+10327@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27811@gmail.com"">www.europeancommissionn+27811@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17590@gmail.com"">www.europeancommissionn+17590@gmail.com</a>
<a href=""mailto:www.europeancommissionn+27360@gmail.com"">www.europeancommissionn+27360@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31020@gmail.com"">www.europeancommissionn+31020@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13640@gmail.com"">www.europeancommissionn+13640@gmail.com</a>
<a href=""mailto:www.europeancommissionn+12945@gmail.com"">www.europeancommissionn+12945@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25799@gmail.com"">www.europeancommissionn+25799@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13308@gmail.com"">www.europeancommissionn+13308@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31245@gmail.com"">www.europeancommissionn+31245@gmail.com</a>
<a href=""mailto:www.europeancommissionn+19123@gmail.com"">www.europeancommissionn+19123@gmail.com</a>
<a href=""mailto:www.europeancommissionn+18305@gmail.com"">www.europeancommissionn+18305@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31940@gmail.com"">www.europeancommissionn+31940@gmail.com</a>
<a href=""mailto:www.europeancommissionn+28677@gmail.com"">www.europeancommissionn+28677@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17899@gmail.com"">www.europeancommissionn+17899@gmail.com</a>
<a href=""mailto:www.europeancommissionn+6697@gmail.com"">www.europeancommissionn+6697@gmail.com</a>
<a href=""mailto:www.europeancommissionn+4298@gmail.com"">www.europeancommissionn+4298@gmail.com</a>
<a href=""mailto:www.europeancommissionn+511@gmail.com"">www.europeancommissionn+511@gmail.com</a>
<a href=""mailto:www.europeancommissionn+24402@gmail.com"">www.europeancommissionn+24402@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13737@gmail.com"">www.europeancommissionn+13737@gmail.com</a>
<a href=""mailto:www.europeancommissionn+14033@gmail.com"">www.europeancommissionn+14033@gmail.com</a>
<a href=""mailto:www.europeancommissionn+32344@gmail.com"">www.europeancommissionn+32344@gmail.com</a>
<a href=""mailto:www.europeancommissionn+139@gmail.com"">www.europeancommissionn+139@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3187@gmail.com"">www.europeancommissionn+3187@gmail.com</a>
<a href=""mailto:www.europeancommissionn+8092@gmail.com"">www.europeancommissionn+8092@gmail.com</a>
<a href=""mailto:www.europeancommissionn+30691@gmail.com"">www.europeancommissionn+30691@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3974@gmail.com"">www.europeancommissionn+3974@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13@gmail.com"">www.europeancommissionn+13@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23892@gmail.com"">www.europeancommissionn+23892@gmail.com</a>
<a href=""mailto:www.europeancommissionn+19916@gmail.com"">www.europeancommissionn+19916@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16105@gmail.com"">www.europeancommissionn+16105@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23844@gmail.com"">www.europeancommissionn+23844@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3079@gmail.com"">www.europeancommissionn+3079@gmail.com</a>
<a href=""mailto:www.europeancommissionn+20265@gmail.com"">www.europeancommissionn+20265@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23118@gmail.com"">www.europeancommissionn+23118@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16448@gmail.com"">www.europeancommissionn+16448@gmail.com</a>
<a href=""mailto:www.europeancommissionn+23768@gmail.com"">www.europeancommissionn+23768@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21852@gmail.com"">www.europeancommissionn+21852@gmail.com</a>
<a href=""mailto:www.europeancommissionn+11691@gmail.com"">www.europeancommissionn+11691@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13724@gmail.com"">www.europeancommissionn+13724@gmail.com</a>
<a href=""mailto:www.europeancommissionn+24958@gmail.com"">www.europeancommissionn+24958@gmail.com</a>
<a href=""mailto:www.europeancommissionn+16767@gmail.com"">www.europeancommissionn+16767@gmail.com</a>
<a href=""mailto:www.europeancommissionn+4941@gmail.com"">www.europeancommissionn+4941@gmail.com</a>
<a href=""mailto:www.europeancommissionn+2120@gmail.com"">www.europeancommissionn+2120@gmail.com</a>
<a href=""mailto:www.europeancommissionn+12752@gmail.com"">www.europeancommissionn+12752@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29136@gmail.com"">www.europeancommissionn+29136@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25145@gmail.com"">www.europeancommissionn+25145@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25577@gmail.com"">www.europeancommissionn+25577@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29388@gmail.com"">www.europeancommissionn+29388@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21203@gmail.com"">www.europeancommissionn+21203@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25456@gmail.com"">www.europeancommissionn+25456@gmail.com</a>
<a href=""mailto:www.europeancommissionn+13805@gmail.com"">www.europeancommissionn+13805@gmail.com</a>
<a href=""mailto:www.europeancommissionn+22447@gmail.com"">www.europeancommissionn+22447@gmail.com</a>
<a href=""mailto:www.europeancommissionn+31984@gmail.com"">www.europeancommissionn+31984@gmail.com</a>
<a href=""mailto:www.europeancommissionn+1176@gmail.com"">www.europeancommissionn+1176@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5337@gmail.com"">www.europeancommissionn+5337@gmail.com</a>
<a href=""mailto:www.europeancommissionn+7029@gmail.com"">www.europeancommissionn+7029@gmail.com</a>
<a href=""mailto:www.europeancommissionn+3715@gmail.com"">www.europeancommissionn+3715@gmail.com</a>
<a href=""mailto:www.europeancommissionn+26885@gmail.com"">www.europeancommissionn+26885@gmail.com</a>
<a href=""mailto:www.europeancommissionn+5588@gmail.com"">www.europeancommissionn+5588@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9511@gmail.com"">www.europeancommissionn+9511@gmail.com</a>
<a href=""mailto:www.europeancommissionn+9285@gmail.com"">www.europeancommissionn+9285@gmail.com</a>
<a href=""mailto:www.europeancommissionn+25927@gmail.com"">www.europeancommissionn+25927@gmail.com</a>
<a href=""mailto:www.europeancommissionn+22651@gmail.com"">www.europeancommissionn+22651@gmail.com</a>
<a href=""mailto:www.europeancommissionn+22419@gmail.com"">www.europeancommissionn+22419@gmail.com</a>
<a href=""mailto:www.europeancommissionn+30462@gmail.com"">www.europeancommissionn+30462@gmail.com</a>
<a href=""mailto:www.europeancommissionn+11643@gmail.com"">www.europeancommissionn+11643@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21444@gmail.com"">www.europeancommissionn+21444@gmail.com</a>
<a href=""mailto:www.europeancommissionn+17041@gmail.com"">www.europeancommissionn+17041@gmail.com</a>
<a href=""mailto:www.europeancommissionn+29942@gmail.com"">www.europeancommissionn+29942@gmail.com</a>
<a href=""mailto:www.europeancommissionn+21978@gmail.com"">www.europeancommissionn+21978@gmail.com</a>
<a href=""mailto:www.europeancommissionn+14260@gmail.com"">www.europeancommissionn+14260@gmail.com</a>"
qCVhUeRZ,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Thursday 18th of January 2024 11:44:06 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

548577"
CWJjpTbj,Untitled,desperatenuf,Python,Thursday 18th of January 2024 11:39:16 PM CDT,"import discord
from discord.ext import commands
from discord.ui import Button, View, Modal
import time
import asyncio

intents = discord.Intents.all()
bot = commands.Bot(command_prefix=""!"", intents=intents)

# Keep track of whether the bot is waiting for an image in a dictionary
verification_in_progress = {}
selfie_role_id = 1197762897116409927 # to replace
staff_role_id = 1197763009976733818 # to replace

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')

class CancelButton(Button):
    def __init__(self):
        super().__init__(label=""Cancel"", style=discord.ButtonStyle.red)

    async def callback(self, interaction: discord.Interaction):
        await interaction.message.edit(view=None)
        async for msg in interaction.channel.history(limit=10):
            if msg.author == bot.user:
                await msg.delete()
                break
        del verification_in_progress[interaction.user.id]
        await interaction.response.send_message(""Successfully cancelled!"", ephemeral=True)

class AcceptButton(discord.ui.Button):
    def __init__(self, user: discord.Member, msg: discord.Message):
        super().__init__(label=""Accept"", style=discord.ButtonStyle.green)
        self.user = user
        self.message = msg
	

    async def callback(self, interaction: discord.Interaction):
        guild_id = 1113932756620161118  # replace with your specific server ID
        guild = bot.get_guild(guild_id)
        member = guild.get_member(self.user.id)
        role = discord.utils.get(member.guild.roles, name='Verified')

        if role is not None:
            await member.add_roles(role)
        else:
            print(f""Role not found."")

        # Add the accepted role
        ac = discord.Embed(
            title=""Selfie Verification Status"",
            description=""<a:check:1127352286952300584> Your verification has been accepted. You now have access to post in selfies."",
            color=0x3cb371
        )
        ac.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127396561052250223/2550322.png?width=640&height=640"")

        await self.message.author.send(embed=ac)
        await interaction.message.edit(view=None)
        await interaction.message.delete()

        # Archive the verification
        archive_channel_id = 1197763535237812275  # Replace with your archive channel ID
        archive_channel = bot.get_channel(archive_channel_id)
        archive_embed = discord.Embed(
            title=""Verification Accepted"",
            description=f""{self.message.author.mention}'s verification was accepted by {interaction.user.mention}. <:staff:1124227406455128205>"",
            color=0x00ff00
        )
        archive_embed.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127400646384042044/5261648.png?width=640&height=640"")
        await archive_channel.send(embed=archive_embed)


class DenyButton(discord.ui.Button):
    def __init__(self, user: discord.Member, msg: discord.Message):
        super().__init__(label=""Deny"", style=discord.ButtonStyle.red)
        self.user = user
        self.message = msg

    async def callback(self, interaction: discord.Interaction):
        deny_modal = DenyModal(message=self.message)
        await interaction.response.send_modal(deny_modal)
    
        # await interaction.message.edit(view=None)
        # await interaction.message.delete()

class DenyModal(Modal):
    def __init__(self, message: discord.Message):
        super().__init__(title=""Reason for denial"", timeout=1000, custom_id=""DenyModal"")
        self.message = message

    reason = discord.ui.TextInput(label=""Reason for denial"", style=discord.TextStyle.long,
                                  placeholder=""Enter your reason for denial here."", required=True,
                                  max_length=300)

    async def on_submit(self, interaction: discord.Interaction):
        denyreason = discord.Embed(
            color=0xfc9d9a,
            title=""Selfie Verification Status"",
            description=f""<a:error:1115150970104590437> Your verification has been denied!  \n <:pencil:1139139299124711474> **Reason:** `{self.reason.value}`""
        )
        denyreason.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127396950694703134/red-x-cross-x-transparent-background-free-png.png?width=500&height=500"")
        await self.message.author.send(embed=denyreason)

        await interaction.message.delete()

        # Archive the verification
        archive_channel_id = 1139147443062177812 # Replace with your archive channel ID
        archive_channel = bot.get_channel(archive_channel_id)
        archive_embed = discord.Embed(
            title=""Verification Denied"",
            description=f""{self.message.author.mention}'s verification was denied by {interaction.user.mention}. <:staff:1124227406455128205> \n**Reason for denial:** *{self.reason.value}*"",
            color=0xfc9d9a
        )
    
        archive_embed.set_thumbnail(url=""https://media.discordapp.net/attachments/1114580796322353232/1127400404431413258/2538049.png?width=640&height=640"")
        await archive_channel.send(embed=archive_embed)
        await interaction.response.send_message('Verification complete. Thanks!', ephemeral=True)

@bot.event
async def on_message(message):
    if message.author == bot.user:  # Ignore messages from the bot itself
        return

    if isinstance(message.channel, discord.DMChannel):  # Check if the message is a DM
        if message.author.id in verification_in_progress:
            # If the bot is waiting for an image from the user, process the image
            attachment = message.attachments[0] if message.attachments else None

            if attachment:
                try:
                    guild = bot.get_guild(1113932756620161118)
                    member = guild.get_member(message.author.id)
                    selfie_url = attachment.url

                    # Create an embed to send the image URL
                    embed = discord.Embed(title=f""Picture from {message.author}"", color=0x00ff00)
                    embed.set_image(url=selfie_url)

                    # Forward selfie to a review channel
                    review_channel_id = 1197763535237812275
                    review_channel = bot.get_channel(review_channel_id)
                    modembed = discord.Embed(
                        description=f""**Selfie by user:** {message.author.mention} **/** `{message.author.id}` \n\n __**Selfie Verification Image**__: "",
                        color=0xB2CAFF
                    )
                    modembed.set_author(icon_url=""https://media.discordapp.net/attachments/1114580796322353232/1127400180854030376/4497128.png?width=640&height=640"", name=""Selfie Verification"")
                    modembed.set_image(url=f""{selfie_url}"")

                    accept_button = AcceptButton(user=member, msg=message)
                    deny_button = DenyButton(user=member, msg=message)
                    view = View(timeout=None)
                    view.add_item(accept_button)
                    view.add_item(deny_button)

            
                    await review_channel.send(f""<@&{staff_role_id}>"",embed=modembed, view=view)

                    embed1 = discord.Embed(title=""Selfie Verification"",
                                        description=""\u200e\nYour selfie has been submitted for verification"",
                                        color=0x00ff00)
                    embed1.set_thumbnail(url=""https://media.discordapp.net/attachments/927190003061256224/958981230332895253/unknown.png?width=640&height=640"")
                    await message.author.send(embed=embed1)

                    # Remove the waiting status for the user
                    del verification_in_progress[message.author.id]
                except asyncio.TimeoutError:
                    await message.author.send(""Verification timeout. Please try again."")
            else:
                await message.channel.send(""No image found. Please send an image."")

        else:
            # Check if the message has any content other than attachments
            if message.content.strip():
                todays_date = str(int(time.time()))
                date_formatted = '<t:{}:d>'.format(todays_date)

                cancel_button = CancelButton()
                cancel_view = View()
                cancel_view.add_item(cancel_button)
                prompt = discord.Embed(title=""Selfie Verification"",
                                    description=""Do you want to verify for access to post in selfies? <:MouseClickOutline256:1116576417128402974> \n\n Please take a selfie with a paper that says **'Socialize Discord'**, your **Discord Username**, and **{}**. Send it here! \n\n **Verification Rules** \n\n- Do not sumbit nsfw content or any other images on this. \n- Do not contact staff members to ask about verification, this bot will tell you the status of your verification. \n- Do not abuse this bot in any form, you will be punished and dealt with accordingly. \n- Posting nsfw / sexual content with the verified role will get you removed from the server."".format(date_formatted),
                                    color=0xff0048,
                                    )
                prompt.set_thumbnail(url=""https://media.discordapp.net/attachments/1119615099880091691/1127690745315332198/1672211.png?width=640&height=640"")
                # Respond with a greeting and the ""Cancel"" option
                await message.channel.send(embed=prompt, view=cancel_view)

                # Set waiting status for the user
                verification_in_progress[message.author.id] = True
    
    await bot.process_commands(message)

class VerifyButton(Button):
    def __init__(self):
        super().__init__(label=""Verify"", style=discord.ButtonStyle.blurple)

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.send_message(""**DM the bot to start the verification process!**"", ephemeral=True)

@bot.command()
async def verify(ctx):
    # Replace SPECIFIC_USER_ID with the desired user's ID
    SPECIFIC_USER_ID = 127199835651702784 # Replace with the desired user's ID

    # Check if the author's ID is not the desired user's ID
    if ctx.author.id != SPECIFIC_USER_ID:
        await ctx.send(""You do not have permission to run this command."")
        return

    verify_view = View(timeout=None)
    
    verify_button = VerifyButton()
    verify_view.add_item(verify_button)
    embed = discord.Embed(title=""Want Access to Post in Selfies?"",
                      description=""\u200e\n<:pencil:1139139299124711474>  **Looking to post in <#1139142308193894470>?** <:MouseClickOutline256:1116576417128402974> **Click** the **Button** below!\n\n<:ArrowDown:1139133485542559774>  **Verified members will receive the role** <:ArrowDown:1139133485542559774>"",
                      colour=0xffffff)
    embed.set_image(url=""https://i.imgur.com/ZyFysmR.png"")
    embed.set_thumbnail(url=""https://i.imgur.com/6j3pGqW.png"")
    await ctx.send(embed=embed, view=verify_view)

@bot.group()
async def selfie(ctx):
    if ctx.invoked_subcommand is None:
        await ctx.send(""**Invalid selfie command passed. Use `add` or `remove`.**"")

@selfie.command()
async def add(ctx, member: discord.Member = None):
    if not member:  # If member is not provided
        await ctx.send(""<a:error:1115150970104590437> **Please mention a user to add the role to**"")
        return

    if not any(role.id == staff_role_id for role in ctx.author.roles):
        await ctx.send(""<a:error:1115150970104590437> **You do not have permission to use this command**"")
        return

    selfie_role = ctx.guild.get_role(selfie_role_id)
    if selfie_role in member.roles:
        await ctx.send(f""<a:error:1115150970104590437> **{member.mention} already has the Selfie role!**"")
    else:
        await member.add_roles(selfie_role)
        await ctx.send(f""<a:check:1127352286952300584> **Verified role added to {member.mention}!**"")

@selfie.command()
async def remove(ctx, member: discord.Member = None):
    if not member:  # If member is not provided
        await ctx.send(""<a:error:1115150970104590437> **Please mention a user to remove the role from**"")
        return

    if not any(role.id == staff_role_id for role in ctx.author.roles):
        await ctx.send(""<a:error:1115150970104590437> **You do not have permission to use this command**"")
        return

    selfie_role = ctx.guild.get_role(selfie_role_id)
    if selfie_role in member.roles:
        await member.remove_roles(selfie_role)
        await ctx.send(f""<a:check:1127352286952300584> **Verified role removed from {member.mention}**"")
    else:
        await ctx.send(f""<a:error:1115150970104590437> {member.mention} **doesn't have the Selfie role**"")

# Run the bot
bot.run('MTE5NjA2MjkzMTUyNDI2ODA1Mg.Gqzlta.isq3VffQ0t4Gk1ZX8r7qBmY5VtKXyLtZ7-93Ow')"
ZLvBPfwk,shinfaxi,Gamenator,SQF,Thursday 18th of January 2024 11:23:58 PM CDT,"Activation:
Blufor
Activation 
Type:Present
Condition:
this && ((vehicle player in thisList) && {vehicle player iskindof ""Plane""})

On Activation:
[thisTrigger] spawn {  
_i=10000;   
params [""_trigger""];   
private _pos = p1 modelToWorld [0,2,1.6];    
private _missile = createVehicle [""vn_sa2_ammo"", [0,0,0], [], 0, ""none""];    
_missile enableSimulation true;    
_missile setPosASLW _pos;    
_missile setVectorDirAndUp [[0,0,1], [1,0,0]];   
sleep 20;   
   
       
  if (( getposatl vehicle player) select 2 > 500) then{   
    
    
  for ""_i"" from 0 to 4 do{  
   if (( getposatl vehicle player) select 2 > 500) then{  
    private _oldPos = getPosATL vehicle player; 
    private _newPos = _oldPos vectorAdd [0,0,600];  
    private _position = vehicle player getRelPos [900,200];
    _position set [2, _newpos];
    _missileDir = _position vectorFromTo getPosATL vehicle player;    
    _missile = createVehicle [""ammo_Missile_rim162"", _position , [], 0, ""CAN_COLLIDE""];    
    _missile setVectorDirAndUp [_missileDir, [0,0,-1]];    
    
    [_missile, vehicle player] spawn {    
    params [""_missile"", ""_tgt""];    
    sleep 0.1;    
    _missile setMissileTarget _tgt;    
          };    
    sleep 4;  
    }else{break;};  
  };  
  sleep 7;   
   
    }else{};     
    
   
}"
KX9WzaW6,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Thursday 18th of January 2024 11:06:33 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_226000.pdf
 
Working as of
19 January 2024"
wXnrEzDX,zip extractor,koupuh,Python,Thursday 18th of January 2024 10:55:40 PM CDT,"import zipfile 
import py7zr
import os
from os import path as opath

def getUnique(path, i = 0):
    newname = path + str(i) if i > 0 else path
    
    if opath.exists(newname):
        getUnique(path, i+1)

    return newname
                
def rzip(path_to_zips_dir, output_path=None):
    for dirpath, dirpaths, filepaths in os.walk(path_to_zips_dir):
        for x in filepaths:
            name = opath.basename(x).casefold()
            if name == '.zip' or name == '.7z':
                continue

            if name.endswith('.zip') or name.endswith('.7z'):
                zipclass = zipfile.ZipFile if name.endswith('.zip') else py7zr.SevenZipFile
                with zipclass(opath.join(dirpath,x), 'r') as zf:
                    name = opath.splitext(opath.basename(zf.filename))[0]
                    if output_path is None:
                        newout = getUnique(opath.join(dirpath, name))
                    else:
                        newout = getUnique(opath.join(output_path, name))
                    
                    zf.extractall(newout)
                    rzip(newout)

                
if __name__ == '__main__':
    import sys
    rzip( sys.argv[1], sys.argv[2] )

"
HzkH5R0v,Annilape Filter,name8888less,JavaScript,Thursday 18th of January 2024 10:42:30 PM CDT,"javascript:$.getScript(""https://cdn.jsdelivr.net/gh/name8888less/sgpokemap-addons@main/annihilape-pvp-filter.js"", function(data, textStatus, jqxhr) {});
"
VRL19v3C,indication asterik,delta_88,Bash,Thursday 18th of January 2024 10:41:42 PM CDT,"[general]
country=fr              ; default location
 
[us]
description = United States / North America
ringcadence = 2000,4000
dial = 350+440
busy = 480+620/500,0/500
ring = 440+480/2000,0/4000
congestion = 480+620/250,0/250
callwaiting = 440/300,0/10000
dialrecall = !350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,350+440
record = 1400/500,0/15000
info = !950/330,!1400/330,!1800/330,0
stutter = !350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,!350+440/100,!0/100,350+440
 
[fr]
Description = France"
5Z1cfQLe,Binary search [C++],R3v3rs3r,C,Thursday 18th of January 2024 10:39:58 PM CDT,"#include<iostream>
using namespace std;

int binSearch(int arr[], int l, int r, int x) {
    while (l <= r) {
        int m = l + (r - l) / 2;
        if (arr[m] == x)
        {
            return m;
        }
        if (arr[m] < x) {
            l = m + 1;
        } else {
            r = m - 1;
        }    
    }
    return false;
}

int main() {
    int arr[10], x, res;
    cout<<""Enter array elements: ""<<endl;
    for (int i=0; i<10; i++) {
        cin>>arr[i];
    }
    cout<<""\nEnter element to search: "", cin>>x;
    if (res=binSearch(arr, 0, 9, x), res) {
        cout<<""\nElement found at index: ""<<res;
    } else {
        cout<<""\nElement not found!"";
    }
}"
DNmukKET,C#_3_local_max_element,Legiomax,C#,Thursday 18th of January 2024 10:30:43 PM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int lowRangeArray = 0;
            int highRangeArray = 30;
            int lowRangeRandom = 0;
            int highRangeRandom = 10;

            int rangeArray = random.Next(lowRangeArray, highRangeArray);
            int[] numbers = new int[rangeArray];

            int leftBorderArrayIndex = lowRangeArray;
            int rightBorderArrayIndex = rangeArray - 1;

            bool hasLocalMaxElement = false;

            if (rangeArray == 0)
            {
                Console.WriteLine(""Массив нулевого размера\nЗдесь нечего смотреть, уходи"");
            }
            else
            {
                for (int i = 0; i < rangeArray; i++)
                {
                    numbers[i] = random.Next(lowRangeRandom, highRangeRandom);
                }

                Console.WriteLine(""Исходная матрица\n"");

                for (int i = 0; i < rangeArray; i++)
                {
                    Console.Write(numbers[i] + "" "");
                }

                if(rangeArray == 1)
                {
                    Console.Write($""\nЛокальный максимум - {numbers[0]}"");
                }
                else
                {
                    for (int i = 0; i < rangeArray; i++)
                    {
                        if (i == leftBorderArrayIndex && numbers[i] > numbers[i + 1])
                        {
                            Console.Write($""\nЛокальный максимум - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                        else if (i == rightBorderArrayIndex && numbers[i] > numbers[i - 1])
                        {
                            Console.Write($""\nЛокальный максимум - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                        else if (leftBorderArrayIndex < i && i < rightBorderArrayIndex &&
                            numbers[i - 1] < numbers[i] &&
                            numbers[i + 1] < numbers[i])
                        {
                            Console.Write($""\nЛокальный максимум - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                    }

                    if (hasLocalMaxElement is false)
                    {
                        Console.WriteLine(""\nЛокальных максимумов нет"");
                    }
                }
            }
            Console.ReadKey();
        }
    }
}
"
zDuC1SP1,Untitled,benn-1956,Lua,Thursday 18th of January 2024 10:26:25 PM CDT,"waitingForFuel = false
 
function searchInv(itemName)
 
    for slot = 1, 16, 1 do
        local slotData = turtle.getItemDetail(slot)
        -- Check if there is a item
        if slotData ~= nil then
          if slotData.name == itemName then
            return slot
          end
        end
    end
    -- Scan complete no fuel found
    return nil 
end
 
function CheckFuel()
    local fuelLvl = turtle.getFuelLevel()
    if fuelLvl < 100 then 
        waitingForFuel = true
        print(""Fuel Is Low..."")
        print(""<<<Insert Fuel>>>"")
    end
    while (waitingForFuel == true) do
        local itemSearch = searchInv(""minecraft:coal"")
        if itemSearch ~= nil then 
            local selectedslot = turtle.getItemDetail(itemSearch)
            turtle.select(itemSearch)
            turtle.refuel(selectedslot.count)
            waitingForFuel = false
        end
        sleep(0.05)
    end
end

CheckFuel()"
3CBFaYzW,News Jan18 24,Newscaster_Ned,Email,Thursday 18th of January 2024 10:11:26 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎I‎ ‎h‎a‎v‎e‎ ‎a‎ ‎f‎e‎e‎l‎i‎n‎g‎ ‎w‎e‎'‎r‎e‎ ‎g‎o‎n‎n‎a‎ ‎g‎e‎t‎ ‎s‎o‎m‎e‎ ‎c‎h‎e‎e‎r‎f‎u‎l‎ ‎s‎t‎u‎f‎f‎.‎

H‎o‎u‎s‎e‎ ‎P‎a‎s‎s‎e‎s‎ ‎P‎e‎l‎o‎s‎i‎-‎S‎c‎h‎u‎m‎e‎r‎ ‎S‎h‎o‎r‎t‎-‎T‎e‎r‎m‎ ‎S‎p‎e‎n‎d‎i‎n‎g‎ ‎E‎x‎t‎e‎n‎s‎i‎o‎n‎

B‎o‎r‎d‎e‎r‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎P‎a‎c‎k‎a‎g‎e‎ ‎A‎b‎a‎n‎d‎o‎n‎e‎d‎,‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎T‎h‎r‎e‎a‎t‎ ‎P‎u‎s‎h‎e‎d‎ ‎t‎o‎ ‎M‎a‎r‎c‎h‎

L‎a‎s‎t‎-‎M‎i‎n‎u‎t‎e‎ ‎V‎o‎t‎e‎ ‎D‎r‎a‎m‎a‎:‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎i‎n‎ ‎T‎r‎o‎u‎b‎l‎e‎?‎
N‎e‎w‎l‎y‎-‎e‎l‎e‎c‎t‎e‎d‎ ‎U‎.‎S‎.‎ ‎H‎o‎u‎s‎e‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎h‎o‎l‎d‎s‎ ‎t‎h‎e‎ ‎g‎a‎v‎e‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎C‎h‎a‎m‎b‎e‎r‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎.‎C‎.‎,‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎,‎ ‎o‎n‎ ‎O‎c‎t‎.‎ ‎2‎5‎,‎ ‎2‎0‎2‎3‎.‎ ‎L‎o‎u‎i‎s‎i‎a‎n‎a‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎R‎e‎p‎.‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎,‎ ‎v‎i‎c‎e‎ ‎c‎h‎a‎i‎r‎m‎a‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎c‎o‎n‎f‎e‎r‎e‎n‎c‎e‎,‎ ‎w‎a‎s‎ ‎e‎l‎e‎c‎t‎e‎d‎ ‎t‎h‎e‎ ‎n‎e‎w‎ ‎H‎o‎u‎s‎e‎ ‎s‎p‎e‎a‎k‎e‎r‎ ‎i‎n‎ ‎a‎ ‎f‎u‎l‎l‎ ‎c‎h‎a‎m‎b‎e‎r‎ ‎v‎o‎t‎e‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎,‎ ‎b‎r‎i‎n‎g‎i‎n‎g‎ ‎w‎e‎e‎k‎s‎ ‎…‎
T‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎p‎a‎s‎s‎e‎d‎ ‎a‎ ‎s‎h‎o‎r‎t‎-‎t‎e‎r‎m‎ ‎s‎p‎e‎n‎d‎i‎n‎g‎ ‎e‎x‎t‎e‎n‎s‎i‎o‎n‎ ‎o‎n‎l‎y‎ ‎h‎o‎u‎r‎s‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎b‎i‎l‎l‎ ‎c‎l‎e‎a‎r‎e‎d‎ ‎t‎h‎e‎ ‎S‎e‎n‎a‎t‎e‎,‎ ‎p‎u‎s‎h‎i‎n‎g‎ ‎t‎h‎e‎ ‎n‎e‎x‎t‎ ‎s‎h‎u‎t‎d‎o‎w‎n‎ ‎t‎h‎r‎e‎a‎t‎ ‎t‎o‎ ‎M‎a‎r‎c‎h‎.‎

H‎o‎u‎s‎e‎ ‎P‎a‎s‎s‎e‎s‎ ‎P‎e‎l‎o‎s‎i‎-‎S‎c‎h‎u‎m‎e‎r‎ ‎C‎R‎,‎ ‎A‎v‎e‎r‎t‎i‎n‎g‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎F‎e‎a‎r‎s‎ ‎U‎n‎t‎i‎l‎ ‎M‎a‎r‎c‎h‎
2‎,‎8‎3‎7‎
S‎u‎r‎r‎e‎n‎d‎e‎r‎:‎ ‎B‎l‎i‎n‎k‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎a‎n‎'‎t‎ ‎D‎e‎f‎e‎a‎t‎ ‎H‎a‎m‎a‎s‎
S‎u‎r‎r‎e‎n‎d‎e‎r‎:‎ ‎B‎l‎i‎n‎k‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎a‎n‎'‎t‎ ‎D‎e‎f‎e‎a‎t‎ ‎H‎a‎m‎a‎s‎
5‎,‎5‎8‎0‎
H‎o‎u‎s‎e‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎U‎n‎a‎n‎i‎m‎o‎u‎s‎l‎y‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎
H‎o‎u‎s‎e‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎U‎n‎a‎n‎i‎m‎o‎u‎s‎l‎y‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎
2‎2‎7‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎K‎e‎m‎p‎ ‎D‎i‎s‎m‎i‎s‎s‎e‎s‎ ‎M‎T‎G‎ ‎R‎e‎q‎u‎e‎s‎t‎ ‎t‎o‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎l‎y‎ ‎P‎r‎o‎b‎e‎ ‎W‎i‎l‎l‎i‎s‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎K‎e‎m‎p‎ ‎D‎i‎s‎m‎i‎s‎s‎e‎s‎ ‎M‎T‎G‎ ‎R‎e‎q‎u‎e‎s‎t‎ ‎t‎o‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎l‎y‎ ‎P‎r‎o‎b‎e‎ ‎W‎i‎l‎l‎i‎s‎
5‎,‎9‎1‎9‎
M‎a‎i‎n‎e‎ ‎B‎i‎l‎l‎ ‎A‎l‎l‎o‎w‎s‎ ‎S‎t‎a‎t‎e‎ ‎t‎o‎ ‎T‎a‎k‎e‎ ‎K‎i‎d‎s‎ ‎A‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎P‎a‎r‎e‎n‎t‎s‎ ‎W‎h‎o‎ ‎R‎e‎s‎i‎s‎t‎ ‎T‎r‎a‎n‎s‎i‎n‎g‎
M‎a‎i‎n‎e‎ ‎B‎i‎l‎l‎ ‎A‎l‎l‎o‎w‎s‎ ‎S‎t‎a‎t‎e‎ ‎t‎o‎ ‎T‎a‎k‎e‎ ‎K‎i‎d‎s‎ ‎A‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎P‎a‎r‎e‎n‎t‎s‎ ‎W‎h‎o‎ ‎R‎e‎s‎i‎s‎t‎ ‎T‎r‎a‎n‎s‎i‎n‎g‎
8‎8‎4‎
B‎l‎a‎c‎k‎R‎o‎c‎k‎ ‎C‎h‎i‎e‎f‎ ‎W‎a‎r‎n‎s‎ ‎a‎ ‎T‎r‎u‎m‎p‎ ‎V‎i‎c‎t‎o‎r‎y‎ ‎P‎o‎s‎e‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎ ‎t‎o‎ ‎E‎u‎r‎o‎p‎e‎
B‎l‎a‎c‎k‎R‎o‎c‎k‎ ‎C‎h‎i‎e‎f‎ ‎W‎a‎r‎n‎s‎ ‎a‎ ‎T‎r‎u‎m‎p‎ ‎V‎i‎c‎t‎o‎r‎y‎ ‎P‎o‎s‎e‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎ ‎t‎o‎ ‎E‎u‎r‎o‎p‎e‎
6‎,‎4‎9‎5‎
R‎e‎p‎o‎r‎t‎:‎ ‎G‎A‎ ‎J‎u‎d‎g‎e‎ ‎S‎c‎h‎e‎d‎u‎l‎e‎s‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎o‎n‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎ ‎M‎i‎s‎c‎o‎n‎d‎u‎c‎t‎
R‎e‎p‎o‎r‎t‎:‎ ‎G‎A‎ ‎J‎u‎d‎g‎e‎ ‎S‎c‎h‎e‎d‎u‎l‎e‎s‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎o‎n‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎ ‎M‎i‎s‎c‎o‎n‎d‎u‎c‎t‎
3‎,‎9‎4‎6‎
W‎h‎y‎ ‎C‎o‎l‎d‎ ‎W‎e‎a‎t‎h‎e‎r‎ ‎K‎i‎l‎l‎s‎ ‎a‎ ‎T‎e‎s‎l‎a‎ ‎-‎ ‎a‎n‎d‎ ‎E‎v‎e‎r‎y‎ ‎O‎t‎h‎e‎r‎ ‎E‎V‎ ‎o‎n‎ ‎t‎h‎e‎ ‎M‎a‎r‎k‎e‎t‎
W‎h‎y‎ ‎C‎o‎l‎d‎ ‎W‎e‎a‎t‎h‎e‎r‎ ‎K‎i‎l‎l‎s‎ ‎a‎ ‎T‎e‎s‎l‎a‎ ‎-‎ ‎a‎n‎d‎ ‎E‎v‎e‎r‎y‎ ‎O‎t‎h‎e‎r‎ ‎E‎V‎ ‎o‎n‎ ‎t‎h‎e‎ ‎M‎a‎r‎k‎e‎t‎
8‎7‎3‎
H‎o‎l‎d‎e‎r‎:‎ ‎'‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎ ‎C‎o‎u‎l‎d‎ ‎E‎n‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎'‎
H‎o‎l‎d‎e‎r‎:‎ ‎'‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎ ‎C‎o‎u‎l‎d‎ ‎E‎n‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎'‎
4‎8‎
C‎y‎g‎n‎a‎l‎ ‎P‎o‎l‎l‎:‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎S‎h‎o‎u‎l‎d‎ ‎'‎T‎a‎p‎ ‎i‎n‎t‎o‎'‎ ‎A‎n‎g‎e‎r‎ ‎o‎v‎e‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎
C‎y‎g‎n‎a‎l‎ ‎P‎o‎l‎l‎:‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎S‎h‎o‎u‎l‎d‎ ‎'‎T‎a‎p‎ ‎i‎n‎t‎o‎'‎ ‎A‎n‎g‎e‎r‎ ‎o‎v‎e‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎

U‎K‎:‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎E‎s‎c‎o‎r‎t‎ ‎S‎m‎a‎s‎h‎e‎s‎ ‎H‎e‎r‎ ‎N‎e‎w‎b‎o‎r‎n‎ ‎N‎i‎g‎l‎e‎t‎'‎s‎ ‎S‎k‎u‎l‎l‎ ‎i‎n‎ ‎F‎i‎t‎ ‎o‎f‎ ‎R‎a‎g‎e‎.‎

W‎h‎y‎ ‎w‎o‎u‎l‎d‎ ‎y‎o‎u‎ ‎c‎r‎e‎a‎t‎e‎ ‎s‎u‎c‎h‎ ‎a‎ ‎f‎r‎e‎a‎k‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎p‎l‎a‎c‎e‎,‎ ‎b‎i‎t‎c‎h‎?‎


S‎o‎u‎t‎h‎ ‎A‎l‎a‎b‎a‎m‎a‎ ‎A‎u‎t‎h‎o‎r‎i‎t‎i‎e‎s‎ ‎C‎a‎p‎t‎u‎r‎e‎ ‎N‎e‎g‎r‎o‎i‎d‎e‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎.‎


S‎o‎m‎a‎l‎i‎ ‎N‎e‎g‎r‎o‎ ‎C‎o‎p‎ ‎R‎e‎-‎A‎p‎p‎e‎a‎r‎s‎ ‎i‎n‎ ‎C‎o‎u‎r‎t‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎.‎


S‎h‎r‎e‎v‎e‎p‎o‎r‎t‎ ‎N‎i‎g‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎1‎0‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎h‎u‎ ‎1‎8‎ ‎|‎ ‎D‎a‎y‎
7‎0‎°‎
2‎%‎
S‎W‎
1‎4‎
 ‎
m‎p‎h‎
A‎b‎u‎n‎d‎a‎n‎t‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎7‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎0‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎5‎5‎ ‎p‎m‎
T‎h‎u‎ ‎1‎8‎ ‎|‎ ‎N‎i‎g‎h‎t‎
3‎4‎°‎
3‎%‎
N‎
2‎5‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎B‎e‎c‎o‎m‎i‎n‎g‎ ‎w‎i‎n‎d‎y‎ ‎l‎a‎t‎e‎.‎ ‎L‎o‎w‎ ‎3‎4‎F‎.‎ ‎N‎ ‎w‎i‎n‎d‎s‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎,‎ ‎i‎n‎c‎r‎e‎a‎s‎i‎n‎g‎ ‎t‎o‎ ‎2‎5‎ ‎t‎o‎ ‎3‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎2‎:‎1‎6‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎5‎6‎ ‎a‎m‎
F‎r‎i‎ ‎1‎9‎
S‎u‎n‎n‎y‎/‎W‎i‎n‎d‎
4‎7‎°‎
/‎2‎4‎°‎
1‎%‎
N‎N‎E‎ ‎2‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
4‎6‎°‎
/‎3‎3‎°‎
0‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎1‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
4‎7‎°‎
/‎4‎4‎°‎
6‎5‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎2‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎4‎°‎
/‎5‎5‎°‎
8‎7‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎3‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎9‎°‎
/‎5‎5‎°‎
7‎9‎%‎
E‎ ‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎4‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎7‎°‎
/‎4‎8‎°‎
6‎9‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎5‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎5‎°‎
/‎4‎6‎°‎
3‎6‎%‎
N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎6‎
S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎3‎°‎
4‎8‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎7‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎0‎°‎
/‎3‎9‎°‎
5‎1‎%‎
N‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎9‎°‎
2‎4‎%‎
N‎N‎W‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎3‎°‎
/‎4‎1‎°‎
2‎0‎%‎
W‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎1‎°‎
1‎3‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎4‎°‎
8‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎5‎°‎
2‎2‎%‎
S‎W‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎L‎e‎t‎ ‎i‎t‎ ‎g‎o‎!‎ ‎J‎u‎s‎t‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎l‎e‎t‎ ‎i‎t‎ ‎g‎o‎!‎ ‎🥶

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎i‎b‎e‎t‎
T‎i‎b‎e‎t‎,‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎N‎o‎r‎t‎h‎ ‎M‎y‎a‎n‎m‎a‎r‎ ‎i‎s‎ ‎a‎ ‎g‎o‎o‎k‎-‎i‎n‎f‎e‎s‎t‎e‎d‎ ‎r‎e‎g‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎e‎o‎p‎l‎e‎'‎s‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎ ‎o‎f‎ ‎C‎h‎i‎n‎a‎.‎ ‎T‎i‎b‎e‎t‎ ‎w‎a‎s‎ ‎f‎o‎r‎m‎e‎r‎l‎y‎ ‎l‎e‎d‎ ‎b‎y‎ ‎a‎ ‎r‎e‎l‎i‎g‎i‎o‎u‎s‎ ‎n‎u‎t‎c‎a‎s‎e‎ ‎c‎a‎l‎l‎e‎d‎ ‎t‎h‎e‎ ‎""‎D‎a‎l‎a‎i‎ ‎L‎a‎m‎a‎""‎,‎ ‎u‎n‎t‎i‎l‎ ‎t‎h‎e‎ ‎M‎a‎o‎i‎s‎t‎s‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎h‎a‎t‎ ‎C‎h‎i‎n‎a‎ ‎w‎a‎s‎n‎'‎t‎ ‎b‎i‎g‎ ‎e‎n‎o‎u‎g‎h‎,‎ ‎a‎n‎d‎ ‎i‎n‎v‎a‎d‎e‎d‎.‎ ‎T‎o‎d‎a‎y‎,‎ ‎T‎i‎b‎e‎t‎ ‎i‎s‎ ‎a‎ ‎p‎l‎a‎c‎e‎ ‎t‎h‎a‎t‎ ‎f‎r‎e‎e‎d‎o‎m‎-‎l‎o‎v‎e‎r‎s‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎y‎e‎t‎ ‎r‎e‎f‎u‎s‎e‎ ‎t‎o‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎h‎e‎l‎p‎,‎ ‎d‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎i‎r‎ ‎a‎d‎d‎i‎c‎t‎i‎o‎n‎ ‎t‎o‎ ‎c‎h‎e‎a‎p‎,‎ ‎p‎o‎i‎s‎o‎n‎e‎d‎ ‎p‎r‎o‎d‎u‎c‎t‎s‎ ‎f‎r‎o‎m‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎s‎w‎e‎a‎t‎s‎h‎o‎p‎s‎.‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎b‎u‎r‎n‎i‎n‎g‎ ‎m‎o‎n‎k‎s‎ ‎a‎n‎d‎ ‎r‎i‎o‎t‎s‎,‎ ‎C‎h‎i‎n‎a‎ ‎c‎l‎a‎i‎m‎s‎ ‎t‎h‎a‎t‎ ‎i‎t‎ ‎d‎i‎d‎ ‎m‎o‎r‎e‎ ‎g‎o‎o‎d‎ ‎t‎h‎a‎n‎ ‎h‎a‎r‎m‎ ‎a‎n‎d‎ ‎""‎a‎d‎v‎a‎n‎c‎e‎d‎""‎ ‎T‎i‎b‎e‎t‎a‎n‎ ‎p‎e‎o‎p‎l‎e‎.‎

(‎(‎ ‎S‎e‎l‎f‎-‎I‎m‎m‎o‎l‎a‎t‎e‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎s‎t‎ ‎k‎k‎k‎u‎o‎t‎e‎s‎.‎ ‎#‎I‎R‎C‎3‎0‎:‎

[‎0‎7‎:‎4‎3‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎w‎a‎i‎t‎s‎,‎ ‎h‎i‎s‎ ‎v‎o‎t‎e‎r‎s‎ ‎w‎a‎n‎t‎ ‎o‎p‎e‎n‎ ‎b‎o‎r‎d‎e‎r‎s‎
[‎0‎8‎:‎0‎3‎]‎ ‎<‎@‎o‎l‎u‎s‎>‎ ‎<‎+‎l‎u‎l‎d‎a‎n‎g‎s‎>‎ ‎I‎m‎a‎g‎i‎n‎e‎ ‎t‎a‎k‎i‎n‎g‎ ‎p‎o‎l‎l‎s‎ ‎s‎e‎r‎i‎o‎u‎s‎l‎y‎ ‎i‎n‎ ‎2‎0‎2‎4‎ ‎
[‎0‎8‎:‎3‎3‎]‎ ‎<‎+‎n‎o‎m‎1‎>‎ ‎h‎t‎t‎p‎s‎:‎/‎/‎n‎o‎t‎t‎h‎e‎b‎e‎e‎.‎c‎o‎m‎/‎a‎r‎t‎i‎c‎l‎e‎/‎o‎k‎l‎a‎h‎o‎m‎a‎-‎l‎a‎w‎m‎a‎k‎e‎r‎s‎-‎l‎e‎g‎i‎s‎l‎a‎t‎i‎o‎n‎-‎w‎o‎u‎l‎d‎-‎r‎e‎q‎u‎i‎r‎e‎-‎s‎t‎u‎d‎e‎n‎t‎s‎-‎d‎r‎e‎s‎s‎e‎d‎-‎a‎s‎-‎f‎u‎r‎r‎i‎e‎s‎-‎t‎o‎-‎b‎e‎-‎r‎e‎m‎o‎v‎e‎d‎-‎b‎y‎-‎a‎n‎i‎m‎a‎l‎-‎c‎o‎n‎t‎r‎o‎l‎
[‎0‎8‎:‎3‎3‎]‎ ‎<‎+‎c‎n‎r‎>‎ ‎[‎ ‎O‎k‎l‎a‎h‎o‎m‎a‎ ‎l‎a‎w‎m‎a‎k‎e‎r‎'‎s‎ ‎n‎e‎w‎ ‎b‎i‎l‎l‎ ‎w‎o‎u‎l‎d‎ ‎r‎e‎q‎u‎i‎r‎e‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎ ‎d‎r‎e‎s‎s‎e‎d‎ ‎a‎s‎ ‎f‎u‎r‎r‎i‎e‎s‎ ‎t‎o‎ ‎b‎e‎ ‎r‎e‎m‎o‎v‎e‎d‎ ‎b‎y‎ ‎a‎n‎i‎m‎a‎l‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎|‎ ‎N‎o‎t‎ ‎t‎h‎e‎ ‎B‎e‎e‎ ‎]‎ ‎-‎ ‎n‎o‎t‎t‎h‎e‎b‎e‎e‎.‎c‎o‎m‎
[‎0‎8‎:‎3‎4‎]‎ ‎<‎@‎o‎l‎u‎s‎>‎ ‎a‎n‎i‎m‎a‎l‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎l‎o‎l‎.‎ ‎ ‎c‎l‎o‎w‎n‎ ‎w‎o‎r‎l‎d‎
‎0‎3‎[‎0‎8‎:‎4‎0‎]‎ ‎*‎ ‎m‎i‎n‎n‎i‎e‎m‎e‎ ‎(‎s‎i‎d‎4‎9‎3‎9‎8‎0‎@‎i‎d‎-‎4‎9‎3‎9‎8‎0‎.‎i‎l‎k‎l‎e‎y‎.‎i‎r‎c‎c‎l‎o‎u‎d‎.‎c‎o‎m‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎I‎R‎C‎3‎0‎
[‎0‎8‎:‎4‎0‎]‎ ‎<‎@‎A‎u‎d‎a‎s‎i‎t‎y‎>‎ ‎h‎a‎h‎a‎
[‎0‎8‎:‎4‎0‎]‎ ‎<‎@‎A‎u‎d‎a‎s‎i‎t‎y‎>‎ ‎g‎j‎ ‎o‎k‎l‎a‎h‎o‎m‎a‎
[‎0‎8‎:‎5‎4‎]‎ ‎<‎+‎w‎o‎r‎t‎h‎l‎e‎s‎s‎>‎ ‎M‎y‎ ‎g‎r‎o‎i‎n‎ ‎i‎s‎ ‎i‎t‎c‎h‎y‎,‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎n‎o‎r‎m‎a‎l‎?‎
[‎0‎8‎:‎5‎5‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎h‎a‎h‎a‎ ‎g‎o‎o‎d‎
[‎0‎8‎:‎5‎5‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎w‎a‎n‎t‎ ‎t‎o‎ ‎b‎e‎ ‎a‎n‎ ‎a‎n‎i‎m‎a‎l‎,‎ ‎g‎e‎t‎ ‎t‎r‎e‎a‎t‎e‎d‎ ‎l‎i‎k‎e‎ ‎o‎n‎e‎
[‎0‎8‎:‎5‎5‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎b‎u‎t‎ ‎s‎h‎o‎u‎l‎d‎ ‎t‎a‎k‎e‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎m‎e‎n‎t‎a‎l‎ ‎h‎o‎s‎p‎i‎t‎a‎l‎ ‎t‎h‎o‎u‎g‎h‎
[‎0‎8‎:‎5‎5‎]‎ ‎<‎+‎n‎o‎m‎1‎>‎ ‎i‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎e‎y‎ ‎s‎h‎o‎u‎l‎d‎ ‎t‎a‎k‎e‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎o‎u‎n‎d‎
[‎0‎8‎:‎5‎5‎]‎ ‎<‎+‎n‎o‎m‎1‎>‎ ‎n‎o‎w‎ ‎t‎h‎a‎t‎ ‎u‎ ‎m‎e‎n‎t‎i‎o‎n‎ ‎i‎t‎
[‎0‎8‎:‎5‎7‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎c‎o‎u‎l‎d‎ ‎n‎e‎u‎t‎e‎r‎ ‎t‎h‎e‎m‎ ‎o‎n‎c‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎p‎o‎u‎n‎d‎ ‎t‎o‎o‎
[‎0‎8‎:‎5‎7‎]‎ ‎<‎@‎o‎l‎u‎s‎>‎ ‎I‎'‎m‎ ‎c‎u‎r‎i‎o‎u‎s‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎m‎e‎a‎n‎ ‎b‎y‎ ‎""‎d‎r‎e‎s‎s‎e‎d‎ ‎a‎s‎ ‎f‎u‎r‎r‎i‎e‎s‎""‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎I‎ ‎b‎e‎t‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎n‎o‎t‎ ‎c‎o‎m‎i‎n‎g‎ ‎t‎o‎ ‎s‎c‎h‎o‎o‎l‎ ‎i‎n‎ ‎t‎h‎o‎s‎e‎ ‎s‎u‎i‎t‎s‎
[‎0‎8‎:‎5‎7‎]‎ ‎<‎@‎A‎u‎d‎a‎s‎i‎t‎y‎>‎ ‎o‎l‎u‎s‎:‎ ‎t‎y‎p‎i‎c‎a‎l‎ ‎r‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎,‎ ‎c‎r‎e‎a‎t‎i‎n‎g‎ ‎p‎r‎o‎b‎l‎e‎m‎s‎ ‎t‎h‎a‎t‎ ‎d‎o‎n‎t‎ ‎e‎x‎i‎s‎t‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎m‎a‎k‎i‎n‎g‎ ‎l‎e‎s‎i‎s‎l‎a‎t‎i‎o‎n‎ ‎o‎n‎ ‎t‎h‎a‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎h‎l‎a‎m‎y‎s‎ ‎v‎a‎r‎i‎a‎,‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎v‎a‎r‎i‎e‎g‎a‎t‎e‎d‎ ‎s‎c‎a‎l‎l‎o‎p‎,‎ ‎i‎s‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎b‎i‎-‎v‎a‎l‎v‎e‎ ‎m‎o‎l‎l‎u‎s‎c‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎c‎a‎l‎l‎o‎p‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎P‎e‎c‎t‎i‎n‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎o‎c‎c‎u‎r‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎N‎o‎r‎t‎h‎ ‎S‎e‎a‎,‎ ‎t‎h‎e‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎C‎h‎a‎n‎n‎e‎l‎,‎ ‎t‎h‎e‎ ‎n‎o‎r‎t‎h‎e‎a‎s‎t‎e‎r‎n‎ ‎A‎t‎l‎a‎n‎t‎i‎c‎ ‎O‎c‎e‎a‎n‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎R‎e‎d‎ ‎S‎e‎a‎,‎ ‎l‎i‎v‎i‎n‎g‎ ‎a‎t‎ ‎d‎e‎p‎t‎h‎s‎ ‎o‎f‎ ‎u‎p‎ ‎t‎o‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎0‎0‎ ‎m‎ ‎a‎l‎o‎n‎g‎ ‎c‎o‎a‎s‎t‎a‎l‎ ‎r‎o‎c‎k‎y‎ ‎a‎r‎e‎a‎s‎.‎ ‎I‎t‎ ‎t‎y‎p‎i‎c‎a‎l‎l‎y‎ ‎l‎i‎v‎e‎s‎ ‎u‎n‎d‎e‎r‎ ‎b‎o‎u‎l‎d‎e‎r‎s‎ ‎o‎r‎ ‎a‎m‎o‎n‎g‎ ‎t‎h‎e‎ ‎h‎o‎l‎d‎f‎a‎s‎t‎s‎ ‎o‎f‎ ‎s‎e‎a‎w‎e‎e‎d‎s‎.‎ ‎T‎h‎e‎ ‎s‎h‎e‎l‎l‎ ‎o‎f‎ ‎C‎h‎l‎a‎m‎y‎s‎ ‎v‎a‎r‎i‎a‎ ‎c‎o‎m‎e‎s‎ ‎i‎n‎ ‎a‎ ‎r‎a‎n‎g‎e‎ ‎o‎f‎ ‎c‎o‎l‎o‎u‎r‎s‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎e‎g‎a‎t‎e‎d‎ ‎p‎a‎t‎t‎e‎r‎n‎s‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎w‎h‎i‎t‎e‎,‎ ‎p‎i‎n‎k‎,‎ ‎r‎e‎d‎,‎ ‎o‎r‎a‎n‎g‎e‎,‎ ‎y‎e‎l‎l‎o‎w‎,‎ ‎o‎r‎ ‎p‎u‎r‎p‎l‎e‎,‎ ‎a‎n‎d‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎i‎n‎ ‎b‎e‎t‎w‎e‎e‎n‎.‎ ‎B‎o‎t‎h‎ ‎v‎a‎l‎v‎e‎s‎ ‎a‎r‎e‎ ‎c‎o‎n‎v‎e‎x‎,‎ ‎r‎o‎u‎n‎d‎e‎d‎ ‎o‎r‎ ‎o‎v‎a‎l‎,‎ ‎a‎n‎d‎ ‎s‎y‎m‎m‎e‎t‎r‎i‎c‎a‎l‎ ‎e‎x‎c‎e‎p‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎e‎a‎r‎s‎ ‎o‎n‎ ‎e‎i‎t‎h‎e‎r‎ ‎s‎i‎d‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎u‎m‎b‎o‎.‎ ‎T‎h‎e‎ ‎s‎h‎e‎l‎l‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎e‎x‎c‎e‎e‎d‎ ‎6‎ ‎c‎m‎ ‎i‎n‎ ‎l‎e‎n‎g‎t‎h‎.‎ ‎T‎h‎i‎s‎ ‎C‎.‎ ‎v‎a‎r‎i‎a‎ ‎s‎h‎e‎l‎l‎,‎ ‎w‎i‎t‎h‎ ‎l‎e‎f‎t‎ ‎a‎n‎d‎ ‎r‎i‎g‎h‎t‎ ‎v‎a‎l‎v‎e‎s‎ ‎s‎h‎o‎w‎n‎,‎ ‎w‎a‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎d‎r‎i‎a‎t‎i‎c‎ ‎S‎e‎a‎ ‎n‎e‎a‎r‎ ‎I‎t‎a‎l‎y‎.‎

.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎w‎a‎t‎c‎h‎ ‎s‎o‎m‎e‎ ‎k‎i‎d‎s‎ ‎a‎t‎ ‎a‎ ‎d‎a‎y‎c‎a‎r‎e‎ ‎c‎e‎n‎t‎e‎r‎.‎ ‎I‎'‎m‎ ‎g‎r‎e‎a‎t‎ ‎w‎i‎t‎h‎ ‎k‎i‎d‎s‎.‎"
76SAdRgt,Untitled,benjaminvr,JavaScript,Thursday 18th of January 2024 09:05:23 PM CDT,"/* eslint-disable no-extend-native */

// Dienen geschreven te worden middels function(){} syntax om de correcte ""this"" te kunnen gebruiken
// Bij een arrow function zal ""this"" anders wijzen naar window
const LoadExtensionMethods = () => {
    Array.prototype.last = function(){
        return this[this.length - 1];
    }

    Element.prototype.getInclusiveHeight = function(extraHeight=0){
        const list = [
            'margin-top',
            'margin-bottom',
            'border-top',
            'border-bottom',
            'padding-top',
            'padding-bottom',
            'height'
        ]
    
        const style = window.getComputedStyle(this)
        return list.map(k => parseInt(style.getPropertyValue(k), 10))
                   .reduce((prev, cur) => prev + cur)
                   + extraHeight;
    }
}

export default LoadExtensionMethods;"
g38vHG6A,Untitled,tinchoeze27,C#,Thursday 18th of January 2024 08:56:10 PM CDT,"@page ""/""
@using MonitorizacionApi.Web.Data
@using MonitorizacionApi.Web.Data.Dtos
@using MonitorizacionApi.Web.Models
@using RestSharp
@using System.Dynamic
@inject IApisBases _api

@if (isLoading)
{
    <div class=""loading"" style=""display: @(isLoading ? ""block"" : ""none"")"">
        <img src=""/loading.gif"" alt=""Loading..."" />
    </div>
}
else
{

    @if (estadoApis != null && estadoApis.Count > 0)
    {
        <div class=""d-flex align-items-center"">
            <p class=""m-0"">Actualizar cada</p>
            <select class=""form-control m-2"" style=""max-width: 50px;"" @bind=""selectedOption"" @oninput=""HandleSelectChange"">
                @foreach (var option in options)
                {
                    <option value=""@option.Value"">@option.Text</option>
                }
            </select>
            <p class=""m-0"">segundos</p>
        </div>

        <table class=""table"">
            <thead>
                <tr>
                    <th style=""width: 200px; text-align:center"">API</th>
                    <th style=""width: 200px; text-align:center"">URL</th>
                    <th style=""width: 100px;text-align:center"">Tecnologia</th>
                    <th style=""width: 75px;text-align:center"">Estado</th>
                    <th style=""width: 700px;text-align:center"">Error</th>
                    <th style=""width: auto;text-align:center"">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in estadoApis)
                {
                    <tr>
                        <td>@item.Nombre</td>
                        <td>@item.Url</td>
                        <td style=""background-color: @(item.Tecnologia == ""Net Core"" ? ""Purple"" : ""Pink""); color:white; text-align:center;"">@item.Tecnologia</td>
                        <td style=""background-color: @(item.Estado == ""Online"" ? ""green"" : ""red""); color:white; text-align:center;"">@item.Estado</td>
                        <td>@item.Error</td>
                        <td style=""text-align:center"">
                            <button class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#modalDev"" @onclick=@(async ()=> await MostrarModalDesarrolladores(item.Id))>Desarrolladores</button>
                            <button class=""btn btn-info"">Endpoints</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>    
        
    }


}

@if(mostrarListadoProgramadores)
{
    <div class=""modal fade"" id=""modalDev"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-centered"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Desarrolladores</h5>
                    <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close"" @onclick=@(async ()=> await CerrarModalDesarrolladores())></button>
                </div>
                <div class=""modal-body"">
                    @if (isLoadingModalDev)
                    {
                        <div class=""loading"" style=""display: @(isLoadingModalDev ? ""block"" : ""none"")"">
                            <img src=""/loading.gif"" alt=""Loading..."" />
                        </div>
                    }
                    else
                    {

                        @if (listadoProgramadores != null && listadoProgramadores.Count > 0)
                        {
                            <ol>
                                @foreach (var item in listadoProgramadores)
                                {

                                    <li>
                                        @item.Nombre
                                    </li>

                                }
                            </ol>
                        }
                        else
                        {
                            <p>No se encontraron datos.</p>
                        }

                    }
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"" @onclick=@(async ()=> await CerrarModalDesarrolladores())>Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    private bool isLoading;
    private bool isLoadingModalDev;
    private List<ApiDto> estadoApis;
    private List<DesarrolladoresDto> listadoProgramadores;
    private int IdApi = 0;
    private string selectedOption = ""5"";
    private int selectedOptionInt;
    private bool mostrarListadoProgramadores = false;
    private System.Threading.Timer? timer;

    protected override async Task OnInitializedAsync()
    {
        await GetApis();
        IniciarTemporizador();
    }

    private void HandleSelectChange(ChangeEventArgs e)
    {
        selectedOption = e.Value.ToString();
        selectedOptionInt = int.Parse(selectedOption);
        // Reinicia el temporizador con el nuevo intervalo
        ReiniciarTemporizador();
    }

    private void IniciarTemporizador()
    {
        timer = new System.Threading.Timer(async (state) =>
        {
            verificarEstados();
            InvokeAsync(StateHasChanged);
        }, null, 0, selectedOptionInt * 1000);
    }

    private void DetenerTemporizador()
    {
        timer?.Change(System.Threading.Timeout.Infinite, System.Threading.Timeout.Infinite);
    }

    private void ReiniciarTemporizador()
    {
        DetenerTemporizador();
        IniciarTemporizador();
    }

    List<SelectOptionSeconds> options = new List<SelectOptionSeconds>
    {
        new SelectOptionSeconds { Value = ""5"", Text = ""5"" },
        new SelectOptionSeconds { Value = ""10"", Text = ""10"" },
        new SelectOptionSeconds { Value = ""15"", Text = ""15"" },
        new SelectOptionSeconds { Value = ""30"", Text = ""30"" }
    };

    private async Task verificarEstados()
    {
        isLoading = true; // Agregar esta línea
        await InvokeAsync(StateHasChanged);

        foreach (var item in estadoApis.ToList())
        {
            await CargarDatosItem(item);
        }

        isLoading = false;
        await InvokeAsync(StateHasChanged);


    }

    private async Task GetApis()
    {
        estadoApis = await _api.GetApisList();       
    }

    private async Task CargarDatosItem(ApiDto item)
    {
        // Lógica de carga de datos para el item
        var url = item.UrlDesarrollo;
        var client = new RestClient(url);
        var request = new RestRequest(url, Method.Get);
        RestResponse response = new RestResponse();
        response = await client.ExecuteAsync(request);

        item.Nombre.ToUpper();
        item.Url = url;
        item.Tecnologia = item.IdTecnologiaNavigation.Descripcion;
        item.Entorno = item.IdEntornoNavigation.Descripcion;

        if (response.IsSuccessful)
        {
            item.Estado = ""Online"";
            item.Error = """";
        }
        else
        {
            item.Estado = ""Offline"";
            item.Error = $""{response.StatusCode} - {response.ErrorException} - {response.Content}"";
        }
    }

    private async Task MostrarModalDesarrolladores(int idapi)
    {
        mostrarListadoProgramadores = true;
        isLoadingModalDev = true;
        StateHasChanged();
        listadoProgramadores = await _api.GetDesarrolladoresPorApi(idapi);        
        isLoadingModalDev = false;
        StateHasChanged();
    }

    private async Task CerrarModalDesarrolladores()
    {
        mostrarListadoProgramadores = false;
        isLoadingModalDev = false;
        StateHasChanged();
    }
}"
1gEAUfme,l2jrusacis argu trade packets,tensador125,Java,Thursday 18th of January 2024 08:52:31 PM CDT,"### Eclipse Workspace Patch 1.0
#P l2jruacis
diff --git java/net/sf/l2j/gameserver/model/trade/TradeItem.java java/net/sf/l2j/gameserver/model/trade/TradeItem.java
index c982471..d68878e 100644
--- java/net/sf/l2j/gameserver/model/trade/TradeItem.java
+++ java/net/sf/l2j/gameserver/model/trade/TradeItem.java
@@ -11,11 +11,13 @@
 	private int _count;
 	private int _quantity;
 	private int _price;
+    private int _augmentationId;
 	
 	public TradeItem(ItemInstance item, int count, int price)
 	{
 		_objectId = item.getObjectId();
 		_item = item.getItem();
+		_augmentationId = item.isAugmented() ? item.getAugmentation().getId() : 0;
 		_enchant = item.getEnchantLevel();
 		_count = count;
 		_quantity = count;
@@ -57,6 +59,11 @@
 		return _item;
 	}
 	
+	public int getAugmentationId() 
+	{	        
+	return _augmentationId;
+	}	
+	
 	public int getEnchant()
 	{
 		return _enchant;
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
index ee7f491..28330b2 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
@@ -52,11 +52,22 @@
 			writeD(item.getItem().getItemId());
 			writeD(availableCount);
 			writeH(item.getItem().getType2());
-			writeH(0x00);
+            int _augorg = 0;
+            int _aug = 0;
+            int _aug2 = 0;
+            int _aug3 = 0;
+            if (item.getAugmentationId() > 0) 
+            {
+                _augorg = item.getAugmentationId();    
+                _aug = _augorg>>16;
+                _aug2 = _aug;
+                _aug3 = _augorg-(_aug<<16);
+            }                
+                writeH(_aug2);
 			writeD(item.getItem().getBodyPart());
 			writeH(item.getEnchant());
 			writeH(0x00);
-			writeH(0x00);
+			writeH(_aug3);
 		}
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
index 63e6d4f..ef44ba1 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
@@ -23,10 +23,21 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_quantity);
 		writeH(_item.getItem().getType2());
-		writeH(0x00); // ?
+        int _augorg = 0;
+        int _aug = 0;
+        int _aug2 = 0;
+        int _aug3 = 0;
+        if (_item.getAugmentationId() > 0) 
+        {
+            _augorg = _item.getAugmentationId();    
+            _aug = _augorg>>16;
+            _aug2 = _aug;
+            _aug3 = _augorg-(_aug<<16);
+        }                
+            writeH(_aug2);
 		writeD(_item.getItem().getBodyPart());
 		writeH(_item.getEnchant());
 		writeH(0x00); // ?
-		writeH(0x00); // ?
+		writeH(_aug3);
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
index 9674b15..2cfda90 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
@@ -25,11 +25,22 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_quantity);
 		writeH(_item.getItem().getType2());
-		writeH(0x00); // ?
+        int _augorg = 0;
+        int _aug = 0;
+        int _aug2 = 0;
+        int _aug3 = 0;
+        if (_item.getAugmentationId() > 0) {
+            _augorg = _item.getAugmentationId();    
+            _aug = _augorg>>16;
+            _aug2 = _aug;
+            _aug3 = _augorg-(_aug<<16);
+        }
+        
+            writeH(_aug2);
 		
 		writeD(_item.getItem().getBodyPart());
 		writeH(_item.getEnchant());
 		writeH(0x00); // ?
-		writeH(0x00);
+		writeH(_aug3);
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
index 3810b76..e0a516a 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
@@ -35,11 +35,28 @@
 			writeD(temp.getItemId());
 			writeD(temp.getCount());
 			writeH(item.getType2());
+	           int _augorg = 0;
+	           int _aug = 0;
+	           int _aug2 = 0;
+	           int _aug3 = 0;
+	           if (temp.isAugmented()) {
+	               _augorg = temp.getAugmentation().getId();    
+	               _aug = _augorg>>16;
+	               _aug2 = _aug;
+	               _aug3 = _augorg-(_aug<<16);
+	           }
+	           if (temp.isAugmented())
+	               writeH(_aug2);
+	           if (temp.isAugmented() == false)
 			writeH(temp.getCustomType1());
 			writeD(item.getBodyPart());
 			writeH(temp.getEnchantLevel());
 			writeH(temp.getCustomType2());
-			writeH(temp.getAugmentation() == null ? 0x00 : temp.getAugmentation().getId());
+	           if (temp.isAugmented())
+	               writeH(_aug3);
+	               if (temp.isAugmented() == false)
+	            	   writeH(0x00);
+	            	   
 		}
 	}
 }
\ No newline at end of file
"
bcQSxpxT,l2jmega argu trade packets,tensador125,Java,Thursday 18th of January 2024 08:51:04 PM CDT,"### Eclipse Workspace Patch 1.0
#P L2jMega_gameserver2
diff --git java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java
index 4b25019..ae2240e 100644
--- java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java
+++ java/net/sf/l2j/gameserver/model/tradelist/TradeItem.java
@@ -10,11 +10,13 @@
 	private int _enchant;
 	private int _count;
 	private int _price;
+	private int _augmentationId;
 	
 	public TradeItem(ItemInstance item, int count, int price)
 	{
 		_objectId = item.getObjectId();
 		_item = item.getItem();
+		_augmentationId = item.isAugmented() ? item.getAugmentation().getAugmentationId() : 0;
 		_enchant = item.getEnchantLevel();
 		_count = count;
 		_price = price;
@@ -38,6 +40,12 @@
 		_price = price;
 	}
 	
+	public int getAugmentationId() 
+	{	        
+	return _augmentationId;
+	}
+	
+	
 	public void setObjectId(int objectId)
 	{
 		_objectId = objectId;
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
index c2af70d..c22d514 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeItemUpdate.java
@@ -51,11 +51,22 @@
 			writeD(item.getItem().getItemId());
 			writeD(availableCount);
 			writeH(item.getItem().getType2());
-			writeH(0x00);
+	           int _augorg = 0;
+	           int _aug = 0;
+	           int _aug2 = 0;
+	           int _aug3 = 0;
+	           if (item.getAugmentationId() > 0) 
+	           {
+	               _augorg = item.getAugmentationId();    
+	               _aug = _augorg>>16;
+	               _aug2 = _aug;
+	               _aug3 = _augorg-(_aug<<16);
+	           }                
+	               writeH(_aug2);
 			writeD(item.getItem().getBodyPart());
 			writeH(item.getEnchant());
 			writeH(0x00);
-			writeH(0x00);
+			writeH(_aug3);
 		}
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
index eb4d155..023fb3d 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOtherAdd.java
@@ -26,11 +26,22 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_item.getCount());
 		writeH(_item.getItem().getType2()); // item type2
-		writeH(0x00); // ?
+	       int _augorg = 0;
+	       int _aug = 0;
+	       int _aug2 = 0;
+	       int _aug3 = 0;
+	       if (_item.getAugmentationId() > 0) 
+	       {
+	           _augorg = _item.getAugmentationId();    
+	           _aug = _augorg>>16;
+	           _aug2 = _aug;
+	           _aug3 = _augorg-(_aug<<16);
+	       }                
+	           writeH(_aug2);
 		
 		writeD(_item.getItem().getBodyPart()); // rev 415 slot 0006-lr.ear 0008-neck 0030-lr.finger 0040-head 0080-?? 0100-l.hand 0200-gloves 0400-chest 0800-pants 1000-feet 2000-?? 4000-r.hand 8000-r.hand
 		writeH(_item.getEnchant()); // enchant level
-		writeH(0x00); // ?
+		writeH(_aug3);
 		writeH(0x00);
 	}
 }
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
index 19e583e..425c842 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeOwnAdd.java
@@ -26,11 +26,22 @@
 		writeD(_item.getItem().getItemId());
 		writeD(_item.getCount());
 		writeH(_item.getItem().getType2()); // item type2
-		writeH(0x00); // ?
+        int _augorg = 0;
+        int _aug = 0;
+        int _aug2 = 0;
+        int _aug3 = 0;
+        if (_item.getAugmentationId() > 0) {
+            _augorg = _item.getAugmentationId();    
+            _aug = _augorg>>16;
+            _aug2 = _aug;
+            _aug3 = _augorg-(_aug<<16);
+        }
+        
+            writeH(_aug2);
 		
 		writeD(_item.getItem().getBodyPart()); // slot
 		writeH(_item.getEnchant()); // enchant level
 		writeH(0x00); // ?
-		writeH(0x00);
+		writeH(_aug3);
 	}
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
index 20969d8..1b84a34 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/TradeStart.java
@@ -40,11 +40,27 @@
 			writeD(temp.getItemId());
 			writeD(temp.getCount());
 			writeH(item.getType2());
+	           int _augorg = 0;
+	           int _aug = 0;
+	           int _aug2 = 0;
+	           int _aug3 = 0;
+	           if (temp.isAugmented()) {
+	               _augorg = temp.getAugmentation().getAugmentationId();    
+	               _aug = _augorg>>16;
+	               _aug2 = _aug;
+	               _aug3 = _augorg-(_aug<<16);
+	           }
+	           if (temp.isAugmented())
+	               writeH(_aug2);
+	           if (temp.isAugmented() == false)
 			writeH(temp.getCustomType1());
 			writeD(item.getBodyPart());
 			writeH(temp.getEnchantLevel());
 			writeH(temp.getCustomType2());
-			writeH(0x00);
+	           if (temp.isAugmented())
+	               writeH(_aug3);
+	               if (temp.isAugmented() == false)
+	            	   writeH(0x00);
 		}
 	}
 }
\ No newline at end of file
"
JArpt7jJ,PHP index response,rezadfx,PHP,Thursday 18th of January 2024 07:29:58 PM CDT,"<?php

function generateRandomMaze() {
    $rows = 50;
    $cols = 50;

    $maze = array_fill(0, $rows, array_fill(0, $cols, 1));

    $start = [0, rand(1, $cols - 2)];
    $end = [$rows - 1, rand(1, $cols - 2)];

    generatePath($maze, $start[0], $start[1], $end[0], $end[1]);

    return $maze;
}

function generatePath(&$maze, $currentRow, $currentCol, $endRow, $endCol) {
    $directions = [[-1, 0], [1, 0], [0, -1], [0, 1]]; // Up, Down, Left, Right
    shuffle($directions);

    foreach ($directions as $dir) {
        $newRow = $currentRow + 2 * $dir[0];
        $newCol = $currentCol + 2 * $dir[1];

        if ($newRow >= 0 && $newRow < count($maze) && $newCol >= 0 && $newCol < count($maze[0]) && $maze[$newRow][$newCol] == 1) {
            $maze[$currentRow + $dir[0]][$currentCol + $dir[1]] = 0;
            $maze[$newRow][$newCol] = 0;

            generatePath($maze, $newRow, $newCol, $endRow, $endCol);
        }
    }
}

$requestPath = $_SERVER['REQUEST_URI'];
$responseCode = crc32($requestPath);

if ($requestPath === ""/"") {

    $randomMaze = generateRandomMaze();
    $response = [
        'requested_path' => $requestPath,
        'code' => $responseCode,
        'status_code' => 200,
        'message' => 'Random Maze',
        'maze' => $randomMaze
    ];
} else {
    $response = [
        'requested_path' => $requestPath,
        'code' => $responseCode,
        'status_code' => 404,
        'message' => 'Path Not Found Or Restricted'
    ];
}

header('Content-Type: application/json');

echo json_encode($response);

?>"
ZGw3pkvD,NGINX json config,rezadfx,JSON,Thursday 18th of January 2024 07:20:06 PM CDT,"server {
        listen 80;
        listen [::]:80;
        server_name REPLACE_IT_WITH_YOUR_HOST;
        if ($host = REPLACE_IT_WITH_YOUR_HOST) {
                return 301 https://$host$request_uri;
        }
        return 404;
}

server {
        listen       1001 proxy_protocol;
        listen       1002 http2 proxy_protocol;

        server_name REPLACE_IT_WITH_YOUR_HOST;

        root         /var/www/html;

        set_real_ip_from 127.0.0.1;

        location / {
                default_type application/json;
                set $random_response_code 1;
                rewrite ^ /index.php last;
        }
        location ~ \.php$ {
        fastcgi_pass   unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
        add_header     Strict-Transport-Security ""max-age=63072000"" always;
    }
}
"
PcEzsrm4,08.OnTimeForTheExam/OPTIMIZED,IvanITD,C#,Thursday 18th of January 2024 07:06:41 PM CDT,"int examHour = int.Parse(Console.ReadLine());
int examMinutes = int.Parse(Console.ReadLine());
int arrivalHour = int.Parse(Console.ReadLine());
int arrivalMinutes = int.Parse(Console.ReadLine());

int examToMinute = examHour * 60 + examMinutes;
int arrivalToMinutes = arrivalHour * 60 + arrivalMinutes;

int totalTime = Math.Abs(examToMinute - arrivalToMinutes);
int hours = totalTime / 60;
int minutes = totalTime % 60;

if (examToMinute < arrivalToMinutes)
{
    Console.WriteLine(""Late"");
    Console.WriteLine(hours == 0 ? $""{minutes} minutes after the start"" : $""{hours}:{minutes:D2} hours after the start"");
}
else if (examToMinute == arrivalToMinutes)
{
    Console.WriteLine(""On time"");
}
else if (totalTime <= 30)
{
    Console.WriteLine(""On time"");
    Console.WriteLine($""{minutes} minutes before the start"");
}
else
{
    Console.WriteLine(""Early"");
    Console.WriteLine(hours == 0 ? $""{minutes} minutes before the start"" : $""{hours}:{minutes:D2} hours before the start"");
}
"
LrfnS3vJ,08.OnTimeForTheExam,IvanITD,C#,Thursday 18th of January 2024 06:52:13 PM CDT,"int examHour = int.Parse(Console.ReadLine());
int examMinutes = int.Parse(Console.ReadLine());
int arivalHour = int.Parse(Console.ReadLine());
int arivalMinutes = int.Parse(Console.ReadLine());


int examToMinute = examHour * 60;
int arivalToMinutes = arivalHour * 60;

int totalExamMinuteTime = examToMinute + examMinutes;
int totalArivalMinuteTime = arivalToMinutes + arivalMinutes;

int totalTime = Math.Abs(totalExamMinuteTime - totalArivalMinuteTime);

int hour = totalTime / 60;
int minutes = totalTime % 60;

if (totalExamMinuteTime < totalArivalMinuteTime) // If the student is late
{
    Console.WriteLine(""Late"");
    if (hour == 0)
    {
        Console.WriteLine($""{minutes} minutes after the start"");
    }
    else
    {
        Console.WriteLine($""{hour}:{minutes:D2} hours after the start"");
    }
}
else if (totalExamMinuteTime == totalArivalMinuteTime) // If the student is on time
{
    Console.WriteLine(""On time"");
    
}
else if (totalTime <= 30)
{
    Console.WriteLine(""On time"");
    Console.WriteLine($""{minutes} minutes before the start"");
}
else if (totalExamMinuteTime > totalArivalMinuteTime || totalTime > 30) // If the student is early
{
    Console.WriteLine(""Early"");
    if (hour == 0)
    {
        Console.WriteLine($""{minutes} minutes before the start"");
    }
    else
    {
        Console.WriteLine($""{hour}:{minutes:D2} hours before the start"");
    }
}



"
p4AB6ki2,cc_harvest_turtle,jkw010,Lua,Thursday 18th of January 2024 06:45:53 PM CDT,"
local turns = {
	right = 0,
	left = 1
}

-- place turtle in corner of farm such that its first turn should be right
local cur_dir = turns.right

function change_dir()
	if cur_dir == turns.right then
		cur_dir = turns.left
	else
		cur_dir = turns.right
	end
end

-- requires item in slot that can't place down
function harvest()
	print(""harvesting..."")
	turtle.placeDown()
end

function turn()
	if cur_dir == turns.right then
		turtle.turnRight()
		if turtle.forward() then
			change_dir()
		end
		turtle.turnRight()
	else
		turtle.turnLeft()
		if turtle.forward() then
			change_dir()
		end
		turtle.turnLeft()
	end
end

function isBlockInFront()
    return turtle.detect()
end

function run()
    while true do

			while not isBlockInFront() do
				turtle.forward()
				harvest()
			end

			turn()
			harvest()

    end
end

-- Start the traversal
run()
"
HXCjAS2i,2024-01-18_stats.json,rdp_snitch,JSON,Thursday 18th of January 2024 06:18:06 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 162,
    ""117.145.27.42"": 18,
    ""208.53.61.115"": 6,
    ""185.106.176.8"": 24,
    ""150.223.46.21"": 3,
    ""203.56.40.167"": 21,
    ""106.58.166.180"": 9,
    ""74.105.22.131"": 48,
    ""118.193.44.118"": 3,
    ""36.111.174.56"": 27,
    ""124.67.254.109"": 21,
    ""43.134.33.208"": 9,
    ""216.202.197.116"": 48,
    ""106.75.20.182"": 6,
    ""106.75.123.252"": 12,
    ""194.165.17.21"": 60,
    ""150.223.62.190"": 6,
    ""104.234.53.203"": 3,
    ""42.51.13.226"": 9,
    ""110.40.34.231"": 39,
    ""36.91.222.100"": 6,
    ""172.81.216.105"": 3,
    ""111.161.41.132"": 15,
    ""218.90.120.19"": 12,
    ""222.219.129.74"": 6,
    ""43.243.136.202"": 48,
    ""213.97.250.153"": 45,
    ""106.58.217.61"": 9,
    ""124.67.115.210"": 9,
    ""106.58.217.149"": 9,
    ""14.18.41.26"": 6,
    ""103.245.195.202"": 12,
    ""113.108.8.125"": 12,
    ""95.130.227.198"": 9,
    ""222.219.240.13"": 18,
    ""45.87.212.182"": 6,
    ""113.31.157.54"": 6,
    ""115.236.75.10"": 21,
    ""80.235.52.92"": 9,
    ""140.246.149.76"": 3,
    ""117.33.174.14"": 15,
    ""122.227.146.74"": 9,
    ""175.120.134.80"": 12,
    ""106.58.215.167"": 6,
    ""203.57.39.224"": 9,
    ""58.218.204.183"": 18,
    ""62.6.252.50"": 3,
    ""194.165.16.11"": 6,
    ""106.58.164.95"": 9,
    ""106.75.6.46"": 9,
    ""203.57.46.218"": 3,
    ""52.80.19.192"": 9,
    ""185.196.220.41"": 9,
    ""125.88.211.59"": 3,
    ""193.142.146.227"": 9,
    ""183.134.89.41"": 3,
    ""106.58.221.13"": 3,
    ""150.223.79.15"": 9,
    ""45.227.254.55"": 6,
    ""58.247.112.34"": 9,
    ""150.223.66.55"": 12,
    ""120.48.64.252"": 6,
    ""205.210.31.162"": 9,
    ""62.204.41.199"": 9,
    ""106.75.245.66"": 3,
    ""167.94.138.125"": 3,
    ""103.184.47.83"": 3,
    ""175.120.134.93"": 12,
    ""119.96.169.74"": 12,
    ""113.31.31.153"": 3,
    ""120.202.49.41"": 6,
    ""106.58.165.88"": 6,
    ""61.171.113.104"": 6,
    ""87.251.75.145"": 9,
    ""1.82.238.130"": 6,
    ""150.223.35.239"": 9,
    ""106.58.178.111"": 9,
    ""1.117.40.238"": 9,
    ""175.4.26.179"": 12,
    ""27.128.239.46"": 9,
    ""109.69.7.157"": 12,
    ""150.223.13.195"": 6,
    ""203.56.4.242"": 3,
    ""201.80.184.90"": 3,
    ""140.246.215.173"": 15,
    ""103.215.81.133"": 15,
    ""185.170.144.3"": 6,
    ""125.230.232.229"": 9,
    ""103.240.84.186"": 12,
    ""106.225.199.92"": 12,
    ""150.223.76.57"": 9,
    ""43.133.56.30"": 9,
    ""42.193.192.91"": 6,
    ""195.97.20.99"": 3,
    ""106.58.210.135"": 9,
    ""198.235.24.44"": 9,
    ""121.5.74.35"": 18,
    ""167.248.133.39"": 3,
    ""81.69.247.8"": 6,
    ""45.141.26.152"": 6,
    ""150.223.32.106"": 6,
    ""194.165.16.73"": 12,
    ""50.116.32.84"": 12,
    ""81.70.142.203"": 3,
    ""142.93.95.8"": 3,
    ""134.175.53.186"": 3,
    ""106.58.184.58"": 9,
    ""162.142.125.212"": 3,
    ""194.165.16.10"": 6,
    ""182.61.55.68"": 3,
    ""196.190.117.7"": 3,
    ""139.59.185.252"": 3,
    ""43.134.83.223"": 3,
    ""209.52.157.13"": 6,
    ""152.32.245.170"": 3,
    ""205.210.31.88"": 9,
    ""42.51.39.209"": 3,
    ""101.32.116.25"": 3,
    ""106.58.219.212"": 3,
    ""49.233.212.94"": 3,
    ""106.55.54.44"": 3,
    ""94.232.45.92"": 9,
    ""106.75.254.159"": 3,
    ""104.234.53.221"": 3,
    ""123.56.20.194"": 6,
    ""106.225.199.24"": 3,
    ""45.141.26.228"": 3,
    ""87.251.75.64"": 3,
    ""79.129.23.188"": 3,
    ""150.223.56.176"": 3,
    ""106.58.212.195"": 3,
    ""106.58.212.201"": 3,
    ""103.44.237.12"": 3,
    ""43.134.0.225"": 9,
    ""106.58.178.2"": 3,
    ""27.8.44.19"": 12,
    ""205.210.31.197"": 9,
    ""45.141.26.223"": 3,
    ""61.171.106.140"": 6,
    ""222.93.104.67"": 3,
    ""45.141.26.68"": 3
  },
  ""asn"": {
    ""AS51167"": 162,
    ""AS9808"": 24,
    ""AS17341"": 6,
    ""AS42960"": 24,
    ""AS58519"": 144,
    ""AS4134"": 204,
    ""AS701"": 48,
    ""AS135377"": 6,
    ""AS4837"": 72,
    ""AS132203"": 33,
    ""AS3356"": 48,
    ""AS23724"": 27,
    ""AS48721"": 84,
    ""AS206092"": 6,
    ""AS56005"": 12,
    ""AS38283"": 39,
    ""AS7713"": 6,
    ""AS45090"": 54,
    ""AS4808"": 48,
    ""AS3352"": 45,
    ""AS9541"": 12,
    ""AS35682"": 9,
    ""AS9009"": 6,
    ""AS17621"": 21,
    ""AS3249"": 9,
    ""AS134768"": 21,
    ""AS9318"": 24,
    ""AS2856"": 3,
    ""AS55960"": 9,
    ""AS208046"": 18,
    ""AS58466"": 3,
    ""AS58461"": 3,
    ""AS267784"": 6,
    ""AS38365"": 9,
    ""AS396982"": 36,
    ""AS59425"": 9,
    ""AS398324"": 9,
    ""AS146817"": 3,
    ""AS58563"": 12,
    ""AS4812"": 12,
    ""AS208091"": 12,
    ""AS63838"": 12,
    ""AS21183"": 12,
    ""AS28573"": 3,
    ""AS55933"": 15,
    ""AS197414"": 6,
    ""AS3462"": 9,
    ""AS134238"": 15,
    ""AS3329"": 3,
    ""AS142299"": 15,
    ""AS63949"": 12,
    ""AS14061"": 6,
    ""AS24757"": 3,
    ""AS852"": 6,
    ""AS212482"": 9,
    ""AS37963"": 6,
    ""AS6799"": 3,
    ""AS4816"": 3
  },
  ""isp"": {
    ""Contabo GmbH"": 162,
    ""China Mobile communications corporation"": 24,
    ""C7 Data Centers"": 6,
    ""VH-GLOBAL"": 24,
    ""Cloud Computing Corporation"": 144,
    ""Chinanet"": 201,
    ""Verizon Business"": 48,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""CNC Group CHINA169 Neimeng Province Network"": 30,
    ""Shenzhen Tencent Computer Systems Company Limited"": 39,
    ""Level 3 Communications"": 48,
    ""UCLOUD"": 39,
    ""Flyservers S.A."": 90,
    ""Velcom"": 6,
    ""China Unicom Henan Province network"": 12,
    ""CHINANET SiChuan Telecom Internet Data Center"": 39,
    ""PT Telekomunikasi Indonesia"": 6,
    ""China Unicom Tianjin Province Network"": 15,
    ""China Unicom Beijing Province Network"": 48,
    ""Telefonica de Espana SAU"": 45,
    ""CHINANET Guangdong province network"": 6,
    ""Cyber Internet Services (Private) Limited"": 12,
    ""Best Internet Solution XK"": 9,
    ""M247 Europe SRL"": 6,
    ""Telia Eesti AS"": 9,
    ""CHINANET SHAANXI province Cloud Base network"": 21,
    ""SK Broadband Co Ltd"": 24,
    ""British Telecommunications PLC"": 3,
    ""Beijing Guanghuan Xinwang Digital"": 9,
    ""ColocationX Ltd."": 18,
    ""China Telecom"": 3,
    ""CNC Group CHINA169 Shanghai Province Network"": 9,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 9,
    ""Google LLC"": 36,
    ""Horizon LLC"": 9,
    ""Censys, Inc."": 9,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""CHINANET Hubei province network"": 12,
    ""CNC Group CHINA169 Tianjin Province network"": 3,
    ""China Telecom (Group)"": 15,
    ""Xhost Internet Solutions LP"": 27,
    ""China Internet Network Information Center"": 33,
    ""Hengyang"": 12,
    ""Vodafone Network"": 12,
    ""Claro NXT Telecomunicacoes Ltda"": 3,
    ""Cloudie Limited"": 15,
    ""Chunghwa Telecom Co., Ltd."": 9,
    ""China Unicom CHINA169 Network"": 12,
    ""CHINANET Jiangx province IDC network"": 15,
    ""Aceville Pte.ltd"": 12,
    ""HOL"": 3,
    ""CLOUDFOREST CO., LTD"": 15,
    ""Akamai Technologies, Inc."": 12,
    ""EuroNet Internet"": 3,
    ""DigitalOcean, LLC"": 3,
    ""Ethiotelecom"": 3,
    ""DIGITALOCEAN"": 3,
    ""TELUS Communications Inc"": 6,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""OTEnet"": 3,
    ""China Unicom Chongqing Province Network"": 12
  },
  ""org"": {
    ""Contabo GmbH"": 162,
    ""China Mobile"": 24,
    ""VegaDigital Solutions"": 6,
    ""VH Global Limited"": 24,
    ""Chinanet SD"": 81,
    ""Chinanet FJ"": 36,
    ""Chinanet YN"": 114,
    ""Verizon Business"": 48,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet ZJ"": 27,
    ""Unknown"": 120,
    ""Tencent Cloud Computing"": 21,
    ""Fort Wayne Internet, LLC"": 48,
    ""Shanghai UCloud Information Technology Company Limited"": 39,
    ""Flyservers S.A"": 84,
    ""ONTAR-40 (Velcom INC)"": 6,
    ""Henan Telcom Union Technology Co., LTD"": 12,
    ""Chengdu Giant Times Technology Co., Ltd"": 39,
    ""Telekomunikasi Indonesia"": 6,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 12,
    ""Chinanet JS"": 33,
    ""Beijing yunchuang communication Technology Co."": 48,
    ""RIMA (Red IP Multi Acceso)"": 45,
    ""Chinanet GD"": 18,
    ""Cyber Internet Services Pakistan"": 12,
    ""Best Internet Solution XK"": 9,
    ""M247 LTD"": 6,
    ""Hangzhou xiaoshan public transportation co., LTD"": 21,
    ""Chinanet SN"": 21,
    ""Ningbo chaoji mamawangluojishu ltd"": 9,
    ""SK Broadband Co Ltd"": 24,
    ""Btnet"": 3,
    ""AWS EC2 (cn-north-1)"": 9,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""UAB Host Baltic"": 6,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Horizon LLC"": 9,
    ""Censys, Inc"": 3,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Chinanet HB"": 12,
    ""BeiJing QianJingShiJi Co., Ltd."": 3,
    ""Chinanet SH"": 12,
    ""Xhost Internet Solutions"": 12,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 39,
    ""Chinanet HN"": 12,
    ""Chinanet HE"": 9,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 3,
    ""Netads Online Limited"": 15,
    ""Xhostis"": 6,
    ""Chunghwa Telecom Co. Ltd."": 9,
    ""Chinanet JX"": 15,
    ""Koumakis Emm. S.A."": 3,
    ""Censys, Inc."": 3,
    ""Cloudforest CO., LTD"": 15,
    ""Linode"": 12,
    ""Online Breedband B.V."": 3,
    ""DigitalOcean, LLC"": 6,
    ""Censys Inc"": 3,
    ""Colliers Macaulay Nicolls Inc"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Dmitriy Panchenko"": 9,
    ""Aliyun Computing Co., LTD"": 6,
    ""OTEnet S.A."": 3,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 3
  },
  ""regionName"": {
    ""England"": 168,
    ""Guangdong"": 81,
    ""Utah"": 6,
    ""Central and Western District"": 42,
    ""Shandong"": 81,
    ""Fujian"": 45,
    ""Yunnan"": 114,
    ""New Jersey"": 48,
    ""Zhejiang"": 60,
    ""Inner Mongolia"": 21,
    ""North West"": 30,
    ""Indiana"": 48,
    ""Beijing"": 141,
    ""Kaunas"": 84,
    ""New York"": 6,
    ""Henan"": 12,
    ""Sichuan"": 39,
    ""Jakarta"": 6,
    ""Shanghai"": 24,
    ""Tianjin"": 18,
    ""Jiangsu"": 33,
    ""Madrid"": 45,
    ""Sindh"": 12,
    ""Tashkent"": 9,
    ""Hesse"": 6,
    ""Harjumaa"": 9,
    ""Shanxi"": 15,
    ""Gyeongsangbuk-do"": 24,
    ""Virginia"": 9,
    ""North Holland"": 27,
    ""Vilnius"": 6,
    ""California"": 39,
    ""Moscow"": 9,
    ""Michigan"": 9,
    ""Hubei"": 15,
    ""Shaanxi"": 6,
    ""Hunan"": 12,
    ""Hebei"": 9,
    ""Tirana"": 12,
    ""Minas Gerais"": 3,
    ""Taichung City"": 9,
    ""Jiangxi"": 15,
    ""Attica"": 3,
    ""Bangkok"": 18,
    ""Georgia"": 12,
    ""Addis Ababa"": 3,
    ""Ontario"": 6,
    ""Central Singapore"": 3,
    ""Perm Krai"": 9,
    ""Thessaly"": 3,
    ""Chongqing"": 12
  },
  ""country"": {
    ""United Kingdom"": 168,
    ""China"": 753,
    ""United States"": 177,
    ""Hong Kong"": 42,
    ""Singapore"": 33,
    ""Lithuania"": 90,
    ""Indonesia"": 6,
    ""Spain"": 45,
    ""Pakistan"": 12,
    ""Uzbekistan"": 9,
    ""Germany"": 6,
    ""Estonia"": 9,
    ""South Korea"": 24,
    ""The Netherlands"": 27,
    ""Russia"": 18,
    ""Albania"": 12,
    ""Brazil"": 3,
    ""Taiwan"": 9,
    ""Greece"": 6,
    ""Thailand"": 18,
    ""Ethiopia"": 3,
    ""Canada"": 6
  },
  ""account"": {
    ""hello"": 195,
    ""142.93.8.59"": 1104,
    ""(empty)"": 21,
    ""Test"": 48,
    ""Domain"": 33,
    ""lFznKxGEz"": 3,
    ""gVpEKd"": 3,
    ""sjbBwa"": 3,
    ""Administr"": 18,
    ""user"": 3,
    ""aJnzGFiaa"": 3,
    ""CUOjAv"": 3,
    ""jBCDBw"": 3,
    ""5r0knkai"": 12,
    ""beio"": 3,
    ""Administrator"": 3,
    ""HhNsQOAfO"": 3,
    ""tqDlHo"": 3,
    ""CaTHKy"": 3,
    ""ZomdsQfGQ"": 3,
    ""BTqWBB"": 3,
    ""ABsDLA"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1476
  },
  ""client_build"": {
    ""Unknown"": 1476
  },
  ""client_name"": {
    ""Unknown"": 1476
  },
  ""ip_type"": {
    ""hosting"": 435,
    ""mobile"": 51,
    ""Unknown"": 909,
    ""proxy"": 69,
    ""hosting & proxy"": 12
  }
}"
MgbNV0sU,2024-01-18_stats.json,rdp_snitch,JSON,Thursday 18th of January 2024 06:16:10 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 108,
    ""117.145.27.42"": 12,
    ""208.53.61.115"": 4,
    ""185.106.176.8"": 16,
    ""150.223.46.21"": 2,
    ""203.56.40.167"": 14,
    ""106.58.166.180"": 6,
    ""74.105.22.131"": 32,
    ""118.193.44.118"": 2,
    ""36.111.174.56"": 18,
    ""124.67.254.109"": 14,
    ""43.134.33.208"": 6,
    ""216.202.197.116"": 32,
    ""106.75.20.182"": 4,
    ""106.75.123.252"": 8,
    ""194.165.17.21"": 40,
    ""150.223.62.190"": 4,
    ""104.234.53.203"": 2,
    ""42.51.13.226"": 6,
    ""110.40.34.231"": 26,
    ""36.91.222.100"": 4,
    ""172.81.216.105"": 2,
    ""111.161.41.132"": 10,
    ""218.90.120.19"": 8,
    ""222.219.129.74"": 4,
    ""43.243.136.202"": 32,
    ""213.97.250.153"": 30,
    ""106.58.217.61"": 6,
    ""124.67.115.210"": 6,
    ""106.58.217.149"": 6,
    ""14.18.41.26"": 4,
    ""103.245.195.202"": 8,
    ""113.108.8.125"": 8,
    ""95.130.227.198"": 6,
    ""222.219.240.13"": 12,
    ""45.87.212.182"": 4,
    ""113.31.157.54"": 4,
    ""115.236.75.10"": 14,
    ""80.235.52.92"": 6,
    ""140.246.149.76"": 2,
    ""117.33.174.14"": 10,
    ""122.227.146.74"": 6,
    ""175.120.134.80"": 8,
    ""106.58.215.167"": 4,
    ""203.57.39.224"": 6,
    ""58.218.204.183"": 12,
    ""62.6.252.50"": 2,
    ""194.165.16.11"": 4,
    ""106.58.164.95"": 6,
    ""106.75.6.46"": 6,
    ""203.57.46.218"": 2,
    ""52.80.19.192"": 6,
    ""185.196.220.41"": 6,
    ""125.88.211.59"": 2,
    ""193.142.146.227"": 6,
    ""183.134.89.41"": 2,
    ""106.58.221.13"": 2,
    ""150.223.79.15"": 6,
    ""45.227.254.55"": 4,
    ""58.247.112.34"": 6,
    ""150.223.66.55"": 8,
    ""120.48.64.252"": 4,
    ""205.210.31.162"": 6,
    ""62.204.41.199"": 6,
    ""106.75.245.66"": 2,
    ""167.94.138.125"": 2,
    ""103.184.47.83"": 2,
    ""175.120.134.93"": 8,
    ""119.96.169.74"": 8,
    ""113.31.31.153"": 2,
    ""120.202.49.41"": 4,
    ""106.58.165.88"": 4,
    ""61.171.113.104"": 4,
    ""87.251.75.145"": 6,
    ""1.82.238.130"": 4,
    ""150.223.35.239"": 6,
    ""106.58.178.111"": 6,
    ""1.117.40.238"": 6,
    ""175.4.26.179"": 8,
    ""27.128.239.46"": 6,
    ""109.69.7.157"": 8,
    ""150.223.13.195"": 4,
    ""203.56.4.242"": 2,
    ""201.80.184.90"": 2,
    ""140.246.215.173"": 10,
    ""103.215.81.133"": 10,
    ""185.170.144.3"": 4,
    ""125.230.232.229"": 6,
    ""103.240.84.186"": 8,
    ""106.225.199.92"": 8,
    ""150.223.76.57"": 6,
    ""43.133.56.30"": 6,
    ""42.193.192.91"": 4,
    ""195.97.20.99"": 2,
    ""106.58.210.135"": 6,
    ""198.235.24.44"": 6,
    ""121.5.74.35"": 12,
    ""167.248.133.39"": 2,
    ""81.69.247.8"": 4,
    ""45.141.26.152"": 4,
    ""150.223.32.106"": 4,
    ""194.165.16.73"": 8,
    ""50.116.32.84"": 8,
    ""81.70.142.203"": 2,
    ""142.93.95.8"": 2,
    ""134.175.53.186"": 2,
    ""106.58.184.58"": 6,
    ""162.142.125.212"": 2,
    ""194.165.16.10"": 4,
    ""182.61.55.68"": 2,
    ""196.190.117.7"": 2,
    ""139.59.185.252"": 2,
    ""43.134.83.223"": 2,
    ""209.52.157.13"": 4,
    ""152.32.245.170"": 2,
    ""205.210.31.88"": 6,
    ""42.51.39.209"": 2,
    ""101.32.116.25"": 2,
    ""106.58.219.212"": 2,
    ""49.233.212.94"": 2,
    ""106.55.54.44"": 2,
    ""94.232.45.92"": 6,
    ""106.75.254.159"": 2,
    ""104.234.53.221"": 2,
    ""123.56.20.194"": 4,
    ""106.225.199.24"": 2,
    ""45.141.26.228"": 2,
    ""87.251.75.64"": 2,
    ""79.129.23.188"": 2,
    ""150.223.56.176"": 2,
    ""106.58.212.195"": 2,
    ""106.58.212.201"": 2,
    ""103.44.237.12"": 2,
    ""43.134.0.225"": 6,
    ""106.58.178.2"": 2,
    ""27.8.44.19"": 8,
    ""205.210.31.197"": 6,
    ""45.141.26.223"": 2,
    ""61.171.106.140"": 4,
    ""222.93.104.67"": 2,
    ""45.141.26.68"": 2
  },
  ""asn"": {
    ""AS51167"": 108,
    ""AS9808"": 16,
    ""AS17341"": 4,
    ""AS42960"": 16,
    ""AS58519"": 96,
    ""AS4134"": 136,
    ""AS701"": 32,
    ""AS135377"": 4,
    ""AS4837"": 48,
    ""AS132203"": 22,
    ""AS3356"": 32,
    ""AS23724"": 18,
    ""AS48721"": 56,
    ""AS206092"": 4,
    ""AS56005"": 8,
    ""AS38283"": 26,
    ""AS7713"": 4,
    ""AS45090"": 36,
    ""AS4808"": 32,
    ""AS3352"": 30,
    ""AS9541"": 8,
    ""AS35682"": 6,
    ""AS9009"": 4,
    ""AS17621"": 14,
    ""AS3249"": 6,
    ""AS134768"": 14,
    ""AS9318"": 16,
    ""AS2856"": 2,
    ""AS55960"": 6,
    ""AS208046"": 12,
    ""AS58466"": 2,
    ""AS58461"": 2,
    ""AS267784"": 4,
    ""AS38365"": 6,
    ""AS396982"": 24,
    ""AS59425"": 6,
    ""AS398324"": 6,
    ""AS146817"": 2,
    ""AS58563"": 8,
    ""AS4812"": 8,
    ""AS208091"": 8,
    ""AS63838"": 8,
    ""AS21183"": 8,
    ""AS28573"": 2,
    ""AS55933"": 10,
    ""AS197414"": 4,
    ""AS3462"": 6,
    ""AS134238"": 10,
    ""AS3329"": 2,
    ""AS142299"": 10,
    ""AS63949"": 8,
    ""AS14061"": 4,
    ""AS24757"": 2,
    ""AS852"": 4,
    ""AS212482"": 6,
    ""AS37963"": 4,
    ""AS6799"": 2,
    ""AS4816"": 2
  },
  ""isp"": {
    ""Contabo GmbH"": 108,
    ""China Mobile communications corporation"": 16,
    ""C7 Data Centers"": 4,
    ""VH-GLOBAL"": 16,
    ""Cloud Computing Corporation"": 96,
    ""Chinanet"": 134,
    ""Verizon Business"": 32,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""CNC Group CHINA169 Neimeng Province Network"": 20,
    ""Shenzhen Tencent Computer Systems Company Limited"": 26,
    ""Level 3 Communications"": 32,
    ""UCLOUD"": 26,
    ""Flyservers S.A."": 60,
    ""Velcom"": 4,
    ""China Unicom Henan Province network"": 8,
    ""CHINANET SiChuan Telecom Internet Data Center"": 26,
    ""PT Telekomunikasi Indonesia"": 4,
    ""China Unicom Tianjin Province Network"": 10,
    ""China Unicom Beijing Province Network"": 32,
    ""Telefonica de Espana SAU"": 30,
    ""CHINANET Guangdong province network"": 4,
    ""Cyber Internet Services (Private) Limited"": 8,
    ""Best Internet Solution XK"": 6,
    ""M247 Europe SRL"": 4,
    ""Telia Eesti AS"": 6,
    ""CHINANET SHAANXI province Cloud Base network"": 14,
    ""SK Broadband Co Ltd"": 16,
    ""British Telecommunications PLC"": 2,
    ""Beijing Guanghuan Xinwang Digital"": 6,
    ""ColocationX Ltd."": 12,
    ""China Telecom"": 2,
    ""CNC Group CHINA169 Shanghai Province Network"": 6,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Google LLC"": 24,
    ""Horizon LLC"": 6,
    ""Censys, Inc."": 6,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""CHINANET Hubei province network"": 8,
    ""CNC Group CHINA169 Tianjin Province network"": 2,
    ""China Telecom (Group)"": 10,
    ""Xhost Internet Solutions LP"": 18,
    ""China Internet Network Information Center"": 22,
    ""Hengyang"": 8,
    ""Vodafone Network"": 8,
    ""Claro NXT Telecomunicacoes Ltda"": 2,
    ""Cloudie Limited"": 10,
    ""Chunghwa Telecom Co., Ltd."": 6,
    ""China Unicom CHINA169 Network"": 8,
    ""CHINANET Jiangx province IDC network"": 10,
    ""Aceville Pte.ltd"": 8,
    ""HOL"": 2,
    ""CLOUDFOREST CO., LTD"": 10,
    ""Akamai Technologies, Inc."": 8,
    ""EuroNet Internet"": 2,
    ""DigitalOcean, LLC"": 2,
    ""Ethiotelecom"": 2,
    ""DIGITALOCEAN"": 2,
    ""TELUS Communications Inc"": 4,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""OTEnet"": 2,
    ""China Unicom Chongqing Province Network"": 8
  },
  ""org"": {
    ""Contabo GmbH"": 108,
    ""China Mobile"": 16,
    ""VegaDigital Solutions"": 4,
    ""VH Global Limited"": 16,
    ""Chinanet SD"": 54,
    ""Chinanet FJ"": 24,
    ""Chinanet YN"": 76,
    ""Verizon Business"": 32,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet ZJ"": 18,
    ""Unknown"": 80,
    ""Tencent Cloud Computing"": 14,
    ""Fort Wayne Internet, LLC"": 32,
    ""Shanghai UCloud Information Technology Company Limited"": 26,
    ""Flyservers S.A"": 56,
    ""ONTAR-40 (Velcom INC)"": 4,
    ""Henan Telcom Union Technology Co., LTD"": 8,
    ""Chengdu Giant Times Technology Co., Ltd"": 26,
    ""Telekomunikasi Indonesia"": 4,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 8,
    ""Chinanet JS"": 22,
    ""Beijing yunchuang communication Technology Co."": 32,
    ""RIMA (Red IP Multi Acceso)"": 30,
    ""Chinanet GD"": 12,
    ""Cyber Internet Services Pakistan"": 8,
    ""Best Internet Solution XK"": 6,
    ""M247 LTD"": 4,
    ""Hangzhou xiaoshan public transportation co., LTD"": 14,
    ""Chinanet SN"": 14,
    ""Ningbo chaoji mamawangluojishu ltd"": 6,
    ""SK Broadband Co Ltd"": 16,
    ""Btnet"": 2,
    ""AWS EC2 (cn-north-1)"": 6,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""UAB Host Baltic"": 4,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Horizon LLC"": 6,
    ""Censys, Inc"": 2,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Chinanet HB"": 8,
    ""BeiJing QianJingShiJi Co., Ltd."": 2,
    ""Chinanet SH"": 8,
    ""Xhost Internet Solutions"": 8,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 26,
    ""Chinanet HN"": 8,
    ""Chinanet HE"": 6,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 2,
    ""Netads Online Limited"": 10,
    ""Xhostis"": 4,
    ""Chunghwa Telecom Co. Ltd."": 6,
    ""Chinanet JX"": 10,
    ""Koumakis Emm. S.A."": 2,
    ""Censys, Inc."": 2,
    ""Cloudforest CO., LTD"": 10,
    ""Linode"": 8,
    ""Online Breedband B.V."": 2,
    ""DigitalOcean, LLC"": 4,
    ""Censys Inc"": 2,
    ""Colliers Macaulay Nicolls Inc"": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Dmitriy Panchenko"": 6,
    ""Aliyun Computing Co., LTD"": 4,
    ""OTEnet S.A."": 2,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 2
  },
  ""regionName"": {
    ""England"": 112,
    ""Guangdong"": 54,
    ""Utah"": 4,
    ""Central and Western District"": 28,
    ""Shandong"": 54,
    ""Fujian"": 30,
    ""Yunnan"": 76,
    ""New Jersey"": 32,
    ""Zhejiang"": 40,
    ""Inner Mongolia"": 14,
    ""North West"": 20,
    ""Indiana"": 32,
    ""Beijing"": 94,
    ""Kaunas"": 56,
    ""New York"": 4,
    ""Henan"": 8,
    ""Sichuan"": 26,
    ""Jakarta"": 4,
    ""Shanghai"": 16,
    ""Tianjin"": 12,
    ""Jiangsu"": 22,
    ""Madrid"": 30,
    ""Sindh"": 8,
    ""Tashkent"": 6,
    ""Hesse"": 4,
    ""Harjumaa"": 6,
    ""Shanxi"": 10,
    ""Gyeongsangbuk-do"": 16,
    ""Virginia"": 6,
    ""North Holland"": 18,
    ""Vilnius"": 4,
    ""California"": 26,
    ""Moscow"": 6,
    ""Michigan"": 6,
    ""Hubei"": 10,
    ""Shaanxi"": 4,
    ""Hunan"": 8,
    ""Hebei"": 6,
    ""Tirana"": 8,
    ""Minas Gerais"": 2,
    ""Taichung City"": 6,
    ""Jiangxi"": 10,
    ""Attica"": 2,
    ""Bangkok"": 12,
    ""Georgia"": 8,
    ""Addis Ababa"": 2,
    ""Ontario"": 4,
    ""Central Singapore"": 2,
    ""Perm Krai"": 6,
    ""Thessaly"": 2,
    ""Chongqing"": 8
  },
  ""country"": {
    ""United Kingdom"": 112,
    ""China"": 502,
    ""United States"": 118,
    ""Hong Kong"": 28,
    ""Singapore"": 22,
    ""Lithuania"": 60,
    ""Indonesia"": 4,
    ""Spain"": 30,
    ""Pakistan"": 8,
    ""Uzbekistan"": 6,
    ""Germany"": 4,
    ""Estonia"": 6,
    ""South Korea"": 16,
    ""The Netherlands"": 18,
    ""Russia"": 12,
    ""Albania"": 8,
    ""Brazil"": 2,
    ""Taiwan"": 6,
    ""Greece"": 4,
    ""Thailand"": 12,
    ""Ethiopia"": 2,
    ""Canada"": 4
  },
  ""account"": {
    ""hello"": 130,
    ""142.93.8.59"": 736,
    ""(empty)"": 14,
    ""Test"": 32,
    ""Domain"": 22,
    ""lFznKxGEz"": 2,
    ""gVpEKd"": 2,
    ""sjbBwa"": 2,
    ""Administr"": 12,
    ""user"": 2,
    ""aJnzGFiaa"": 2,
    ""CUOjAv"": 2,
    ""jBCDBw"": 2,
    ""5r0knkai"": 8,
    ""beio"": 2,
    ""Administrator"": 2,
    ""HhNsQOAfO"": 2,
    ""tqDlHo"": 2,
    ""CaTHKy"": 2,
    ""ZomdsQfGQ"": 2,
    ""BTqWBB"": 2,
    ""ABsDLA"": 2
  },
  ""keyboard"": {
    ""Unknown"": 984
  },
  ""client_build"": {
    ""Unknown"": 984
  },
  ""client_name"": {
    ""Unknown"": 984
  },
  ""ip_type"": {
    ""hosting"": 290,
    ""mobile"": 34,
    ""Unknown"": 606,
    ""proxy"": 46,
    ""hosting & proxy"": 8
  }
}"
CysNpeMZ,2024-01-18_stats.json,rdp_snitch,JSON,Thursday 18th of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 54,
    ""117.145.27.42"": 6,
    ""208.53.61.115"": 2,
    ""185.106.176.8"": 8,
    ""150.223.46.21"": 1,
    ""203.56.40.167"": 7,
    ""106.58.166.180"": 3,
    ""74.105.22.131"": 16,
    ""118.193.44.118"": 1,
    ""36.111.174.56"": 9,
    ""124.67.254.109"": 7,
    ""43.134.33.208"": 3,
    ""216.202.197.116"": 16,
    ""106.75.20.182"": 2,
    ""106.75.123.252"": 4,
    ""194.165.17.21"": 20,
    ""150.223.62.190"": 2,
    ""104.234.53.203"": 1,
    ""42.51.13.226"": 3,
    ""110.40.34.231"": 13,
    ""36.91.222.100"": 2,
    ""172.81.216.105"": 1,
    ""111.161.41.132"": 5,
    ""218.90.120.19"": 4,
    ""222.219.129.74"": 2,
    ""43.243.136.202"": 16,
    ""213.97.250.153"": 15,
    ""106.58.217.61"": 3,
    ""124.67.115.210"": 3,
    ""106.58.217.149"": 3,
    ""14.18.41.26"": 2,
    ""103.245.195.202"": 4,
    ""113.108.8.125"": 4,
    ""95.130.227.198"": 3,
    ""222.219.240.13"": 6,
    ""45.87.212.182"": 2,
    ""113.31.157.54"": 2,
    ""115.236.75.10"": 7,
    ""80.235.52.92"": 3,
    ""140.246.149.76"": 1,
    ""117.33.174.14"": 5,
    ""122.227.146.74"": 3,
    ""175.120.134.80"": 4,
    ""106.58.215.167"": 2,
    ""203.57.39.224"": 3,
    ""58.218.204.183"": 6,
    ""62.6.252.50"": 1,
    ""194.165.16.11"": 2,
    ""106.58.164.95"": 3,
    ""106.75.6.46"": 3,
    ""203.57.46.218"": 1,
    ""52.80.19.192"": 3,
    ""185.196.220.41"": 3,
    ""125.88.211.59"": 1,
    ""193.142.146.227"": 3,
    ""183.134.89.41"": 1,
    ""106.58.221.13"": 1,
    ""150.223.79.15"": 3,
    ""45.227.254.55"": 2,
    ""58.247.112.34"": 3,
    ""150.223.66.55"": 4,
    ""120.48.64.252"": 2,
    ""205.210.31.162"": 3,
    ""62.204.41.199"": 3,
    ""106.75.245.66"": 1,
    ""167.94.138.125"": 1,
    ""103.184.47.83"": 1,
    ""175.120.134.93"": 4,
    ""119.96.169.74"": 4,
    ""113.31.31.153"": 1,
    ""120.202.49.41"": 2,
    ""106.58.165.88"": 2,
    ""61.171.113.104"": 2,
    ""87.251.75.145"": 3,
    ""1.82.238.130"": 2,
    ""150.223.35.239"": 3,
    ""106.58.178.111"": 3,
    ""1.117.40.238"": 3,
    ""175.4.26.179"": 4,
    ""27.128.239.46"": 3,
    ""109.69.7.157"": 4,
    ""150.223.13.195"": 2,
    ""203.56.4.242"": 1,
    ""201.80.184.90"": 1,
    ""140.246.215.173"": 5,
    ""103.215.81.133"": 5,
    ""185.170.144.3"": 2,
    ""125.230.232.229"": 3,
    ""103.240.84.186"": 4,
    ""106.225.199.92"": 4,
    ""150.223.76.57"": 3,
    ""43.133.56.30"": 3,
    ""42.193.192.91"": 2,
    ""195.97.20.99"": 1,
    ""106.58.210.135"": 3,
    ""198.235.24.44"": 3,
    ""121.5.74.35"": 6,
    ""167.248.133.39"": 1,
    ""81.69.247.8"": 2,
    ""45.141.26.152"": 2,
    ""150.223.32.106"": 2,
    ""194.165.16.73"": 4,
    ""50.116.32.84"": 4,
    ""81.70.142.203"": 1,
    ""142.93.95.8"": 1,
    ""134.175.53.186"": 1,
    ""106.58.184.58"": 3,
    ""162.142.125.212"": 1,
    ""194.165.16.10"": 2,
    ""182.61.55.68"": 1,
    ""196.190.117.7"": 1,
    ""139.59.185.252"": 1,
    ""43.134.83.223"": 1,
    ""209.52.157.13"": 2,
    ""152.32.245.170"": 1,
    ""205.210.31.88"": 3,
    ""42.51.39.209"": 1,
    ""101.32.116.25"": 1,
    ""106.58.219.212"": 1,
    ""49.233.212.94"": 1,
    ""106.55.54.44"": 1,
    ""94.232.45.92"": 3,
    ""106.75.254.159"": 1,
    ""104.234.53.221"": 1,
    ""123.56.20.194"": 2,
    ""106.225.199.24"": 1,
    ""45.141.26.228"": 1,
    ""87.251.75.64"": 1,
    ""79.129.23.188"": 1,
    ""150.223.56.176"": 1,
    ""106.58.212.195"": 1,
    ""106.58.212.201"": 1,
    ""103.44.237.12"": 1,
    ""43.134.0.225"": 3,
    ""106.58.178.2"": 1,
    ""27.8.44.19"": 4,
    ""205.210.31.197"": 3,
    ""45.141.26.223"": 1,
    ""61.171.106.140"": 2,
    ""222.93.104.67"": 1,
    ""45.141.26.68"": 1
  },
  ""asn"": {
    ""AS51167"": 54,
    ""AS9808"": 8,
    ""AS17341"": 2,
    ""AS42960"": 8,
    ""AS58519"": 48,
    ""AS4134"": 68,
    ""AS701"": 16,
    ""AS135377"": 2,
    ""AS4837"": 24,
    ""AS132203"": 11,
    ""AS3356"": 16,
    ""AS23724"": 9,
    ""AS48721"": 28,
    ""AS206092"": 2,
    ""AS56005"": 4,
    ""AS38283"": 13,
    ""AS7713"": 2,
    ""AS45090"": 18,
    ""AS4808"": 16,
    ""AS3352"": 15,
    ""AS9541"": 4,
    ""AS35682"": 3,
    ""AS9009"": 2,
    ""AS17621"": 7,
    ""AS3249"": 3,
    ""AS134768"": 7,
    ""AS9318"": 8,
    ""AS2856"": 1,
    ""AS55960"": 3,
    ""AS208046"": 6,
    ""AS58466"": 1,
    ""AS58461"": 1,
    ""AS267784"": 2,
    ""AS38365"": 3,
    ""AS396982"": 12,
    ""AS59425"": 3,
    ""AS398324"": 3,
    ""AS146817"": 1,
    ""AS58563"": 4,
    ""AS4812"": 4,
    ""AS208091"": 4,
    ""AS63838"": 4,
    ""AS21183"": 4,
    ""AS28573"": 1,
    ""AS55933"": 5,
    ""AS197414"": 2,
    ""AS3462"": 3,
    ""AS134238"": 5,
    ""AS3329"": 1,
    ""AS142299"": 5,
    ""AS63949"": 4,
    ""AS14061"": 2,
    ""AS24757"": 1,
    ""AS852"": 2,
    ""AS212482"": 3,
    ""AS37963"": 2,
    ""AS6799"": 1,
    ""AS4816"": 1
  },
  ""isp"": {
    ""Contabo GmbH"": 54,
    ""China Mobile communications corporation"": 8,
    ""C7 Data Centers"": 2,
    ""VH-GLOBAL"": 8,
    ""Cloud Computing Corporation"": 48,
    ""Chinanet"": 67,
    ""Verizon Business"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 10,
    ""Shenzhen Tencent Computer Systems Company Limited"": 13,
    ""Level 3 Communications"": 16,
    ""UCLOUD"": 13,
    ""Flyservers S.A."": 30,
    ""Velcom"": 2,
    ""China Unicom Henan Province network"": 4,
    ""CHINANET SiChuan Telecom Internet Data Center"": 13,
    ""PT Telekomunikasi Indonesia"": 2,
    ""China Unicom Tianjin Province Network"": 5,
    ""China Unicom Beijing Province Network"": 16,
    ""Telefonica de Espana SAU"": 15,
    ""CHINANET Guangdong province network"": 2,
    ""Cyber Internet Services (Private) Limited"": 4,
    ""Best Internet Solution XK"": 3,
    ""M247 Europe SRL"": 2,
    ""Telia Eesti AS"": 3,
    ""CHINANET SHAANXI province Cloud Base network"": 7,
    ""SK Broadband Co Ltd"": 8,
    ""British Telecommunications PLC"": 1,
    ""Beijing Guanghuan Xinwang Digital"": 3,
    ""ColocationX Ltd."": 6,
    ""China Telecom"": 1,
    ""CNC Group CHINA169 Shanghai Province Network"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""Google LLC"": 12,
    ""Horizon LLC"": 3,
    ""Censys, Inc."": 3,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""CHINANET Hubei province network"": 4,
    ""CNC Group CHINA169 Tianjin Province network"": 1,
    ""China Telecom (Group)"": 5,
    ""Xhost Internet Solutions LP"": 9,
    ""China Internet Network Information Center"": 11,
    ""Hengyang"": 4,
    ""Vodafone Network"": 4,
    ""Claro NXT Telecomunicacoes Ltda"": 1,
    ""Cloudie Limited"": 5,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""China Unicom CHINA169 Network"": 4,
    ""CHINANET Jiangx province IDC network"": 5,
    ""Aceville Pte.ltd"": 4,
    ""HOL"": 1,
    ""CLOUDFOREST CO., LTD"": 5,
    ""Akamai Technologies, Inc."": 4,
    ""EuroNet Internet"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Ethiotelecom"": 1,
    ""DIGITALOCEAN"": 1,
    ""TELUS Communications Inc"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""OTEnet"": 1,
    ""China Unicom Chongqing Province Network"": 4
  },
  ""org"": {
    ""Contabo GmbH"": 54,
    ""China Mobile"": 8,
    ""VegaDigital Solutions"": 2,
    ""VH Global Limited"": 8,
    ""Chinanet SD"": 27,
    ""Chinanet FJ"": 12,
    ""Chinanet YN"": 38,
    ""Verizon Business"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet ZJ"": 9,
    ""Unknown"": 40,
    ""Tencent Cloud Computing"": 7,
    ""Fort Wayne Internet, LLC"": 16,
    ""Shanghai UCloud Information Technology Company Limited"": 13,
    ""Flyservers S.A"": 28,
    ""ONTAR-40 (Velcom INC)"": 2,
    ""Henan Telcom Union Technology Co., LTD"": 4,
    ""Chengdu Giant Times Technology Co., Ltd"": 13,
    ""Telekomunikasi Indonesia"": 2,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 4,
    ""Chinanet JS"": 11,
    ""Beijing yunchuang communication Technology Co."": 16,
    ""RIMA (Red IP Multi Acceso)"": 15,
    ""Chinanet GD"": 6,
    ""Cyber Internet Services Pakistan"": 4,
    ""Best Internet Solution XK"": 3,
    ""M247 LTD"": 2,
    ""Hangzhou xiaoshan public transportation co., LTD"": 7,
    ""Chinanet SN"": 7,
    ""Ningbo chaoji mamawangluojishu ltd"": 3,
    ""SK Broadband Co Ltd"": 8,
    ""Btnet"": 1,
    ""AWS EC2 (cn-north-1)"": 3,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""UAB Host Baltic"": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 3,
    ""Censys, Inc"": 1,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Chinanet HB"": 4,
    ""BeiJing QianJingShiJi Co., Ltd."": 1,
    ""Chinanet SH"": 4,
    ""Xhost Internet Solutions"": 4,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 13,
    ""Chinanet HN"": 4,
    ""Chinanet HE"": 3,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 1,
    ""Netads Online Limited"": 5,
    ""Xhostis"": 2,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Chinanet JX"": 5,
    ""Koumakis Emm. S.A."": 1,
    ""Censys, Inc."": 1,
    ""Cloudforest CO., LTD"": 5,
    ""Linode"": 4,
    ""Online Breedband B.V."": 1,
    ""DigitalOcean, LLC"": 2,
    ""Censys Inc"": 1,
    ""Colliers Macaulay Nicolls Inc"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Dmitriy Panchenko"": 3,
    ""Aliyun Computing Co., LTD"": 2,
    ""OTEnet S.A."": 1,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 1
  },
  ""regionName"": {
    ""England"": 56,
    ""Guangdong"": 27,
    ""Utah"": 2,
    ""Central and Western District"": 14,
    ""Shandong"": 27,
    ""Fujian"": 15,
    ""Yunnan"": 38,
    ""New Jersey"": 16,
    ""Zhejiang"": 20,
    ""Inner Mongolia"": 7,
    ""North West"": 10,
    ""Indiana"": 16,
    ""Beijing"": 47,
    ""Kaunas"": 28,
    ""New York"": 2,
    ""Henan"": 4,
    ""Sichuan"": 13,
    ""Jakarta"": 2,
    ""Shanghai"": 8,
    ""Tianjin"": 6,
    ""Jiangsu"": 11,
    ""Madrid"": 15,
    ""Sindh"": 4,
    ""Tashkent"": 3,
    ""Hesse"": 2,
    ""Harjumaa"": 3,
    ""Shanxi"": 5,
    ""Gyeongsangbuk-do"": 8,
    ""Virginia"": 3,
    ""North Holland"": 9,
    ""Vilnius"": 2,
    ""California"": 13,
    ""Moscow"": 3,
    ""Michigan"": 3,
    ""Hubei"": 5,
    ""Shaanxi"": 2,
    ""Hunan"": 4,
    ""Hebei"": 3,
    ""Tirana"": 4,
    ""Minas Gerais"": 1,
    ""Taichung City"": 3,
    ""Jiangxi"": 5,
    ""Attica"": 1,
    ""Bangkok"": 6,
    ""Georgia"": 4,
    ""Addis Ababa"": 1,
    ""Ontario"": 2,
    ""Central Singapore"": 1,
    ""Perm Krai"": 3,
    ""Thessaly"": 1,
    ""Chongqing"": 4
  },
  ""country"": {
    ""United Kingdom"": 56,
    ""China"": 251,
    ""United States"": 59,
    ""Hong Kong"": 14,
    ""Singapore"": 11,
    ""Lithuania"": 30,
    ""Indonesia"": 2,
    ""Spain"": 15,
    ""Pakistan"": 4,
    ""Uzbekistan"": 3,
    ""Germany"": 2,
    ""Estonia"": 3,
    ""South Korea"": 8,
    ""The Netherlands"": 9,
    ""Russia"": 6,
    ""Albania"": 4,
    ""Brazil"": 1,
    ""Taiwan"": 3,
    ""Greece"": 2,
    ""Thailand"": 6,
    ""Ethiopia"": 1,
    ""Canada"": 2
  },
  ""account"": {
    ""hello"": 65,
    ""142.93.8.59"": 368,
    ""(empty)"": 7,
    ""Test"": 16,
    ""Domain"": 11,
    ""lFznKxGEz"": 1,
    ""gVpEKd"": 1,
    ""sjbBwa"": 1,
    ""Administr"": 6,
    ""user"": 1,
    ""aJnzGFiaa"": 1,
    ""CUOjAv"": 1,
    ""jBCDBw"": 1,
    ""5r0knkai"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""HhNsQOAfO"": 1,
    ""tqDlHo"": 1,
    ""CaTHKy"": 1,
    ""ZomdsQfGQ"": 1,
    ""BTqWBB"": 1,
    ""ABsDLA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 492
  },
  ""client_build"": {
    ""Unknown"": 492
  },
  ""client_name"": {
    ""Unknown"": 492
  },
  ""ip_type"": {
    ""hosting"": 145,
    ""mobile"": 17,
    ""Unknown"": 303,
    ""proxy"": 23,
    ""hosting & proxy"": 4
  }
}"
Qdw8jUjc,Google Appscript format batchs of  tabs within a Google Sheet,cedroid,JavaScript,Thursday 18th of January 2024 05:47:25 PM CDT,"/*
The success of the entire script, especially the formatting, hinges on the correct setup of the getColumnFormats() function. It's essential that the column names and their corresponding formats in this function accurately reflect the actual data structure in your sheets for the script to work effectively.

The script below is based on a google sheet that contains hotel reservations data but the column order and the cell formatting was not correct, the issue was happening with hundreds of tabs within the same sheet, modify the script according to your needs:

1. processSheets()
This is the main function that initiates the processing of all sheets in the active spreadsheet. It performs several key tasks:

- Retrieves all the sheets in the spreadsheet.
- Creates or accesses the 'Formatting Logs' sheet for tracking progress.
- Processes each sheet (up to 30 at a time for resource management).
- Logs the processing status (success or error) for each sheet.
- Displays a notification summarizing the number of sheets successfully processed and those with errors.

2. processSingleSheet(sheet, columnFormats)
Processes an individual sheet by:

- Checking if the sheet has any columns and rows.
- Sorting the columns alphabetically based on headers.
- Writing the sorted data back to the sheet.
- Applying formatting to each column based on predefined rules.
- Returning the status of processing (success or error with notes).

3. applyFormat(range, formatInfo)
- Applies formatting to a given range in a sheet. It uses the format information specified in the formatInfo parameter. The function switches between different types of data (date, text, number, currency) and applies the corresponding format.

4. logStatus(logSheet, sheet, status)
- Logs the processing status of each sheet in the 'Formatting Logs' sheet. It records the sheet name, a hyperlink to the sheet, the timestamp of processing, and notes on the status (success or error).

5. setupLogSheet(logSheet)
- Sets up the initial headers in the 'Formatting Logs' sheet for tracking. Headers include ""Sheet Name"", ""Hyperlink"", ""Timestamp"", ""Status"", and ""Status Notes"".

6. isSheetProcessed(logSheet, sheetName)
- Checks if a sheet has already been processed successfully. It prevents reprocessing of sheets that are already formatted.

7. getColumnFormats()
- Crucial for the entire script, this function returns a hardcoded object mapping column names to their respective data types and formats. It is essential that the user manually matches these names and formats with the actual column names present in the sheets. Failure to correctly match these will result in improper or failed formatting. The formats for each type of data (like date, text, number, currency) need to be predefined here.

If you need a test spreadsheet you can generate one using the script that I have written here: https://pastebin.com/nbhP4WxB


*/

function processSheets() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheets = ss.getSheets();
  var columnFormats = getColumnFormats();

  // Create or get the 'Formatting Logs' sheet
  var logSheet = ss.getSheetByName(""Formatting Logs"") || ss.insertSheet(""Formatting Logs"");
  // Set up log sheet headers
  setupLogSheet(logSheet);

  var processedCount = 0;
  var errorCount = 0;
  var successCount = 0;

  // Process each sheet
  sheets.forEach(function(sheet) {
    if (sheet.getName() !== ""Formatting Logs"" && !isSheetProcessed(logSheet, sheet.getName())) {
      var status = processSingleSheet(sheet, columnFormats);
      logStatus(logSheet, sheet, status);

      if (status.error) {
        errorCount++;
      } else {
        successCount++;
      }

      processedCount++;
      if (processedCount >= 30) {
        // Stop processing after 30 sheets
        return;
      }
    }
  });

  // Show notification after processing
  SpreadsheetApp.getUi().alert(
    'Processing completed. ' +
    'Success: ' + successCount + ', ' +
    'Errors: ' + errorCount
  );
}

function processSingleSheet(sheet, columnFormats) {
  var status = { error: false, notes: [] };
  var lastColumn = sheet.getLastColumn();
  var lastRow = sheet.getLastRow();

  // Check if the sheet has columns and rows
  if (lastColumn === 0 || lastRow === 0) {
    status.error = true;
    status.notes.push(""No columns or rows found in sheet."");
    return status;
  }

  // Get headers and sort them along with their data
  var headers = sheet.getRange(1, 1, 1, lastColumn).getValues()[0];
  var data = sheet.getRange(2, 1, lastRow - 1, lastColumn).getValues();

  // Create a combined array of headers and data for sorting
  var combined = headers.map(function(header, index) {
    return [header].concat(data.map(function(row) {
      return row[index];
    }));
  });

  // Sort the combined array alphabetically based on headers
  combined.sort(function(a, b) {
    return a[0].localeCompare(b[0]);
  });

  // Write the sorted data back to the sheet
  for (var col = 0; col < combined.length; col++) {
    sheet.getRange(1, col + 1, lastRow).setValues(combined[col].map(function(cell, index) {
      return [cell];
    }));
  }

  // Apply formats to the sorted columns and check for errors
  combined.forEach(function(column, index) {
    var header = column[0];
    if (columnFormats[header]) {
      try {
        var range = sheet.getRange(2, index + 1, lastRow - 1);
        applyFormat(range, columnFormats[header]);
      } catch (e) {
        status.error = true;
        status.notes.push(""Error in column: "" + header + "" - "" + e.message);
      }
    }
  });

  // Return processing status
  return status;
}

function applyFormat(range, formatInfo) {
  // Apply format based on type and specific format rules
  switch (formatInfo.type) {
    case ""date"":
      range.setNumberFormat(formatInfo.format);
      break;
    case ""text"":
      // Text formatting can be added here
      break;
    case ""number"":
      range.setNumberFormat(formatInfo.format);
      break;
    case ""currency"":
      range.setNumberFormat(formatInfo.format);
      break;
    // Add more cases as needed
  }
}

function logStatus(logSheet, sheet, status) {
  var timeStamp = new Date();
  var sheetUrl = sheet.getParent().getUrl() + ""#gid="" + sheet.getSheetId();
  var statusText = status.error ? ""Error"" : ""Success"";
  var notesText = status.notes.join(""\n"");

  // Append log entry
  logSheet.appendRow([sheet.getName(), sheetUrl, timeStamp, statusText, notesText]);
}

function setupLogSheet(logSheet) {
  // Setup headers for the log sheet
  logSheet.getRange(""A1:E1"").setValues([[""Sheet Name"", ""Hyperlink"", ""Timestamp"", ""Status"", ""Status Notes""]]);
}

function isSheetProcessed(logSheet, sheetName) {
  // Check if the sheet is already processed
  var data = logSheet.getDataRange().getValues();
  for (var i = 1; i < data.length; i++) {
    if (data[i][0] === sheetName && data[i][3] === ""Success"") {
      return true;
    }
  }
  return false;
}

function getColumnFormats() {
  // Hardcoded column names and their formats
  return {
    ""Date"": { type: ""date"", format: ""MM/dd/yyyy"" },
    ""Name"": { type: ""text"", format: ""none"" },
    ""Room"": { type: ""number"", format: ""0"" },
    ""Price"": { type: ""currency"", format: ""$#,##0.00"" },
    ""Check-in"": { type: ""date"", format: ""MM/dd/yyyy"" },
    ""Check-out"": { type: ""date"", format: ""MM/dd/yyyy"" },
    // Add more column formats as needed
  };
}
"
RGGDTBbt,barrel,DyingSleeper,Lua,Thursday 18th of January 2024 05:30:27 PM CDT,"rot = 0
while true do
	turtle.select(1)
	repeat
		for i = 1,8 do
			turtle.select(i)
			state = turtle.suck()
			if not state then break end
		end
	until true

	if rot % 2 == 0 then
		turtle.turnRight()
	else
		turtle.turnLeft()
	end
	rot = rot + 1
	repeat
		for i = 1,16 do
			name = turtle.getItemDetail(i)
			if name then
				if name.name == ""minecraft:barrel"" then
					turtle.select(i)
					break
				end
			end
		end
		turtle.place()
	until true
	if rot % 2 == 0 then
		turtle.turnRight()
	else
		turtle.turnLeft()
	end
	rot = rot + 1
	
	assert(turtle.dig())
	
	if rot % 2 == 0 then
		turtle.turnRight()
	else
		turtle.turnLeft()
	end
	rot = rot + 1
	repeat
		for i = 1,16 do
			turtle.select(i)
			state = turtle.dropDown()
			if not state then break end
		end
	until true
end"
nbhP4WxB,Google Apps Script generate fake data in multiple tabs,cedroid,JavaScript,Thursday 18th of January 2024 05:23:45 PM CDT,"/*
This script is ideal for demonstration purposes, showing how to automate the creation of multiple sheets with randomized data and manage sheets within a Google Spreadsheet programmatically used only to populate google sheets with random data in multiple tabs.

""createSampleSheets""
This function creates 20 new sheets in your current Google Sheets document. Each sheet is named ""SampleSheet"" followed by a number (1 through 20). The sheets are populated with shuffled columns and fake data, simulating hotel reservation information. The columns include ""Date"", ""Name"", ""Room"", ""Price"", ""Check-in"", and ""Check-out"".

Shuffling Columns: The column headers are shuffled in each sheet to create variability.
Fake Data Generation: Each column is filled with appropriate fake data. Dates are randomly generated between November 2023 and February 2024. Names are randomly generated as ""Guest"" followed by a number. Room numbers and prices are also randomly generated.

""shuffleArray""
This utility function takes an array and shuffles its elements in a random order. It's used in createSampleSheets to randomize the order of column headers in each new sheet.

""generateFakeData""
This function generates fake data appropriate to the type of data each column represents. For date-related columns (""Date"", ""Check-in"", and ""Check-out""), it creates random dates within a specified range (November 2023 to February 2024). For the ""Name"" column, it generates a guest name. For ""Room"", it produces a random room number, and for ""Price"", a random price value is generated.

""deleteAllSheetsExceptFirst""
This function deletes all sheets in the active Google Spreadsheet, except for the first sheet. This is particularly useful for cleaning up after testing or demonstrations, but should be used with caution to avoid unintentional deletion of important data.
*/

function createSampleSheets() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();

  // Define the column names
  var columnNames = [""Date"", ""Name"", ""Room"", ""Price"", ""Check-in"", ""Check-out""];

  // Create 20 sample sheets, you can generate more or less
  for (var i = 0; i < 20; i++) {
    var sheetName = ""SampleSheet"" + (i + 1);
    var sheet = ss.insertSheet(sheetName);

    // Shuffle the column names for each sheet
    var shuffledColumns = shuffleArray(columnNames.slice()); // Create a copy and shuffle it

    // Set the column names
    sheet.getRange(1, 1, 1, shuffledColumns.length).setValues([shuffledColumns]);

    // Fill with fake data
    for (var row = 2; row <= 21; row++) {
      for (var col = 1; col <= shuffledColumns.length; col++) {
        var fakeData = generateFakeData(shuffledColumns[col - 1]);
        sheet.getRange(row, col).setValue(fakeData);
      }
    }
  }
}

function shuffleArray(array) {
  for (var i = array.length - 1; i > 0; i--) {
    var j = Math.floor(Math.random() * (i + 1));
    var temp = array[i];
    array[i] = array[j];
    array[j] = temp;
  }
  return array;
}


function generateFakeData(columnName) {
  // Generate fake data based on the column name
  switch (columnName) {
    case ""Date"":
    case ""Check-in"":
    case ""Check-out"":
      // Generate a random date between November 2023 and February 2024
      var startDate = new Date(2023, 10, 1); // November 1, 2023
      var endDate = new Date(2024, 1, 28);   // February 28, 2024
      var randomDate = new Date(startDate.getTime() + Math.random() * (endDate.getTime() - startDate.getTime()));
      return Utilities.formatDate(randomDate, Session.getScriptTimeZone(), ""MM/dd/yyyy"");
    case ""Name"":
      return ""Guest "" + Math.floor(Math.random() * 100);
    case ""Room"":
      return Math.floor(Math.random() * 500) + 1; // Random room number
    case ""Price"":
      return (Math.random() * 300 + 50).toFixed(2); // Random price between 50 and 350
    default:
      return ""Unknown"";
  }
}

function deleteAllSheetsExceptFirst() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheets = ss.getSheets();

  // Loop through sheets and delete all except the first one
  for (var i = sheets.length - 1; i > 0; i--) {
    ss.deleteSheet(sheets[i]);
  }
}
"
5kQKim66,emacs configuration,pintcat,Lisp,Thursday 18th of January 2024 05:17:56 PM CDT,"(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq indent-line-function 'insert-tab)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(completions-common-part ((t (:foreground ""royalblue2""))))
 '(custom-button-pressed-unraised ((t (:inherit custom-button-unraised :foreground ""magenta""))))
 '(custom-comment-tag ((t (:foreground ""royalblue2""))))
 '(custom-state ((t (:foreground ""olivedrab""))))
 '(custom-variable-obsolete ((t (:foreground ""dodgerblue""))))
 '(custom-variable-tag ((t (:foreground ""dodgerblue"" :weight bold))))
 '(escape-glyph ((t (:foreground ""chocolate""))))
 '(font-lock-builtin-face ((t (:foreground ""green""))))
 '(font-lock-comment-face ((t (:foreground ""brightred""))))
 '(font-lock-function-name-face ((t (:foreground ""royalblue1""))))
 '(font-lock-keyword-face ((t (:foreground ""mediumorchid""))))
 '(font-lock-string-face ((t (:foreground ""violetred2""))))
 '(font-lock-variable-name-face ((t (:foreground ""orange""))))
 '(homoglyph ((t (:foreground ""chocolate""))))
 '(link ((t (:foreground ""royalblue2"" :underline t))))
 '(link-visited ((t (:inherit link :foreground ""magenta2""))))
 '(minibuffer-prompt ((t (:foreground ""dodgerblue""))))
 '(nobreak-hyphen ((t (:foreground ""chocolate""))))
 '(tool-bar ((t (:foreground ""black"" :box (:line-width (1 . 1) :style released-button))))))
"
1m8BZeHW,Untitled,f0f077,Python,Thursday 18th of January 2024 05:01:02 PM CDT,"Algorithms and Data Structures in Python (INTERVIEW Q&A)
A guide to implement data structures, graph algorithms and sorting algorithms from scratch with interview questions!
This course is about data structures, algorithms and graphs. We are going to implement the problems in Python programming language. I highly recommend typing out these data structures and algorithms several times on your own in order to get a good grasp of it.
for more:https://cuty.io/JiLNKcG32"
2TXiLVKV,Untitled,f0f077,Python,Thursday 18th of January 2024 04:55:03 PM CDT,"LEETCODE In Python: Algorithms Coding Interview Questions
Practice data structure and algorithms questions for interviews at FAANG companies like Google, Facebook, Apple & Amazon
LeetCode is essentially a huge repository of real interview questions asked by the most popular tech companies ( Google, Amazon, Facebook, Microsoft, and more ).

The problem with LeetCode is also its advantage, IT'S HUGE, so huge in fact that interviewers from the most popular companies often directly ask questions they find on LeetCode, So it's hard to navigate through the huge amount of problems to find those that really matter, 
for more:https://cuty.io/NYCz9vGMj"
cx1eVjzW,Count Puppeteer,ngatmuri,JavaScript,Thursday 18th of January 2024 04:51:42 PM CDT,"
const puppeteer = require('puppeteer');

(async () => {
    const browser = await puppeteer.launch();
    const page = await browser.newPage();
    await page.goto('URL_HALAMAN');

    let commentCount = 1;

    while (true) {
        // Ganti 'SELECTOR_INPUT' dengan selector input komentar
        await page.type('SELECTOR_INPUT', `Ini komentar ke-${commentCount}`);
        
        // Ganti 'SELECTOR_SUBMIT_BUTTON' dengan selector tombol submit
        await page.click('SELECTOR_SUBMIT_BUTTON');

        commentCount++;
        // Tambahkan delay atau kondisi berhenti jika perlu
    }

    await browser.close();
})();
```

Kamu bisa menyesuaikan kode di atas sesuai dengan struktur halaman web dan aksi yang diperlukan. Juga, pastikan untuk menambahkan delay atau kondisi berhenti untuk menghindari posting komentar terlalu cepat atau tanpa henti."
RBDBRBZQ,07.HotelRoom,IvanITD,C#,Thursday 18th of January 2024 04:40:27 PM CDT,"using System.Reflection;

string month = Console.ReadLine();
int overnightStayCount = int.Parse(Console.ReadLine());

double studio = 0.00;
double apartment = 0.00;

if (month == ""May"" || month == ""October"")
{
    studio = 50;
    studio *= overnightStayCount; // Price per night!
    apartment = 65;
    apartment *= overnightStayCount; // Price per night!


    if (overnightStayCount > 14)
    {
        studio -= (studio * 0.30); // За повече от 14 дни нощувки, намаление с 30%
        apartment -= (apartment * 0.10); // За повече от 14 дни нощувки, намаление с 10%, без значение от месеца!
    }
    else if(overnightStayCount > 7)
    {
        studio -= (studio * 0.05); // За повече от 7 дни нощувка, намаление с 5%
    }
     
}
else if (month == ""June"" || month == ""September"")
{
    studio = 75.20;
    studio *= overnightStayCount; // Price per night!
    apartment = 68.70;
    apartment *= overnightStayCount; // Price per night!

    if (overnightStayCount > 14)
    {
        studio -= (studio * 0.20); // За повече от 14 дни нощувки, намаление с 20%
        apartment -= (apartment * 0.10); // За повече от 14 дни нощувки, намаление с 10%, без значение от месеца!
    }
}
else if (month == ""July"" || month == ""August"")
{
    studio = 76;
    studio *= overnightStayCount; // Price per night!
    apartment = 77;
    apartment *= overnightStayCount; // Price per night!

    if (overnightStayCount > 14)
    {
        apartment -= (apartment * 0.10); // За повече от 14 дни нощувки, намаление с 10%, без значение от месеца!
    }
}

Console.WriteLine($""Apartment: {apartment:F2} lv."");
Console.WriteLine($""Studio: {studio:F2} lv."");"
8vqY0q3x,06.OperationsBetweenNumbers,IvanITD,C#,Thursday 18th of January 2024 04:39:34 PM CDT,"int N1 = int.Parse(Console.ReadLine());
int N2 = int.Parse(Console.ReadLine());
char symbol = char.Parse(Console.ReadLine());

double result = 0.00;

if (symbol == '+')
{
    result = N1 + N2;
    if (result % 2 == 0)
    {
        Console.WriteLine($""{N1} + {N2} = {result} - even"");
    }
    else
    {
        Console.WriteLine($""{N1} + {N2} = {result} - odd"");
    }
}
else if (symbol == '-')
{
    result = N1 - N2;
    if (result % 2 == 0)
    {
        Console.WriteLine($""{N1} - {N2} = {result} - even"");
    }
    else
    {
        Console.WriteLine($""{N1} - {N2} = {result} - odd"");
    }
}
else if (symbol == '*')
{
    result = N1 * N2;
    if (result % 2 == 0)
    {
        Console.WriteLine($""{N1} * {N2} = {result} - even"");
    }
    else
    {
        Console.WriteLine($""{N1} * {N2} = {result} - odd"");
    }
}
else if (symbol == '/')
{
    if (N1 == 0 || N2 == 0)
    {
        Console.WriteLine($""Cannot divide {N1} by zero"");
    }
    else
    {
        result = (double)N1 / N2;
        Console.WriteLine($""{N1} / {N2} = {result:F2}"");
    }
}
else if (symbol == '%')
{
    if (N1 == 0 || N2 == 0)
    {
        Console.WriteLine($""Cannot divide {N1} by zero"");
    }
    else
    {
        result = N1 % N2;
        Console.WriteLine($""{N1} % {N2} = {result}"");
    }
}
"
AaZ0npyV,Untitled,f0f077,Python,Thursday 18th of January 2024 04:33:18 PM CDT,"Data Structures and Algorithms Python: The Complete Bootcamp
DSA Basics To Advanced: Learn, Analyze, Implement Data Structures and Algorithms using Python With Interview Questions

Throughout the course, we will explore the most important Data Structures and Algorithms topics step-by-step:

1. Essential Concepts
Big O Notation
Memory
Logarithms
Recursion
for more:https://dz-linkk.com/xsy5R9"
Y3mtAGCX,Waschmaschinen-Meldung,gerd_r,JavaScript,Thursday 18th of January 2024 04:32:27 PM CDT,"[
    {
        ""id"": ""15fd152cd56064c5"",
        ""type"": ""comment"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Statusmeldung - Waschmaschine"",
        ""info"": """",
        ""x"": 150,
        ""y"": 40,
        ""wires"": []
    },
    {
        ""id"": ""c7967f83a2ec368c"",
        ""type"": ""server-state-changed"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Waschmaschine"",
        ""server"": ""b2e4926a.65b1d"",
        ""version"": 5,
        ""outputs"": 1,
        ""exposeAsEntityConfig"": """",
        ""entityId"": ""sensor.steckdose_waschmaschine_energy_power"",
        ""entityIdType"": ""exact"",
        ""outputInitially"": false,
        ""stateType"": ""str"",
        ""ifState"": """",
        ""ifStateType"": ""num"",
        ""ifStateOperator"": ""is"",
        ""outputOnlyOnStateChange"": false,
        ""for"": """",
        ""forType"": ""num"",
        ""forUnits"": ""seconds"",
        ""ignorePrevStateNull"": true,
        ""ignorePrevStateUnknown"": true,
        ""ignorePrevStateUnavailable"": true,
        ""ignoreCurrentStateUnknown"": true,
        ""ignoreCurrentStateUnavailable"": true,
        ""outputProperties"": [
            {
                ""property"": ""payload"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""entityState""
            },
            {
                ""property"": ""data"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""eventData""
            },
            {
                ""property"": ""topic"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""triggerId""
            }
        ],
        ""x"": 100,
        ""y"": 80,
        ""wires"": [
            [
                ""118cf302b8737aec""
            ]
        ]
    },
    {
        ""id"": ""393e9ae62c2cee2e"",
        ""type"": ""change"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Sende Stop-Signal"",
        ""rules"": [
            {
                ""t"": ""set"",
                ""p"": ""payload"",
                ""pt"": ""msg"",
                ""to"": ""STOP"",
                ""tot"": ""str""
            }
        ],
        ""action"": """",
        ""property"": """",
        ""from"": """",
        ""to"": """",
        ""reg"": false,
        ""x"": 510,
        ""y"": 100,
        ""wires"": [
            [
                ""8a2cc0a9b0fc527f""
            ]
        ]
    },
    {
        ""id"": ""81612be05b9b5581"",
        ""type"": ""trigger"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": """",
        ""op1"": """",
        ""op2"": ""0"",
        ""op1type"": ""nul"",
        ""op2type"": ""num"",
        ""duration"": ""5"",
        ""extend"": false,
        ""overrideDelay"": false,
        ""units"": ""min"",
        ""reset"": ""STOP"",
        ""bytopic"": ""all"",
        ""topic"": ""topic"",
        ""outputs"": 1,
        ""x"": 490,
        ""y"": 140,
        ""wires"": [
            [
                ""bb07d968206be2d9""
            ]
        ]
    },
    {
        ""id"": ""118cf302b8737aec"",
        ""type"": ""switch"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Power-Switch"",
        ""property"": ""payload"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""gt"",
                ""v"": ""3"",
                ""vt"": ""num""
            },
            {
                ""t"": ""lte"",
                ""v"": ""3"",
                ""vt"": ""num""
            }
        ],
        ""checkall"": ""false"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 280,
        ""y"": 80,
        ""wires"": [
            [
                ""6624e79336e179e6""
            ],
            [
                ""8a2cc0a9b0fc527f""
            ]
        ]
    },
    {
        ""id"": ""be6cdbe7eb3be976"",
        ""type"": ""power-monitor"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Waschmaschine"",
        ""startthreshold"": ""1"",
        ""stopthreshold"": ""0"",
        ""startafter"": 1,
        ""stopafter"": 1,
        ""energydecimals"": 4,
        ""emitidle"": false,
        ""x"": 760,
        ""y"": 80,
        ""wires"": [
            [
                ""6946c87e56581e8f""
            ]
        ]
    },
    {
        ""id"": ""6946c87e56581e8f"",
        ""type"": ""switch"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""PM - Event"",
        ""property"": ""payload.event"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""start"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""running"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""stop"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 3,
        ""x"": 930,
        ""y"": 80,
        ""wires"": [
            [
                ""d3ec410545ca357f"",
                ""b84fc34da1e9cf18"",
                ""7b6b4d39651d9133""
            ],
            [],
            [
                ""d3ec410545ca357f"",
                ""b84fc34da1e9cf18"",
                ""7b6b4d39651d9133""
            ]
        ]
    },
    {
        ""id"": ""6624e79336e179e6"",
        ""type"": ""junction"",
        ""z"": ""847cebbc0f5b04cd"",
        ""x"": 400,
        ""y"": 80,
        ""wires"": [
            [
                ""393e9ae62c2cee2e"",
                ""bb07d968206be2d9""
            ]
        ]
    },
    {
        ""id"": ""8a2cc0a9b0fc527f"",
        ""type"": ""junction"",
        ""z"": ""847cebbc0f5b04cd"",
        ""x"": 380,
        ""y"": 140,
        ""wires"": [
            [
                ""81612be05b9b5581""
            ]
        ]
    },
    {
        ""id"": ""bb07d968206be2d9"",
        ""type"": ""junction"",
        ""z"": ""847cebbc0f5b04cd"",
        ""x"": 660,
        ""y"": 80,
        ""wires"": [
            [
                ""be6cdbe7eb3be976""
            ]
        ]
    },
    {
        ""id"": ""b2e4926a.65b1d"",
        ""type"": ""server"",
        ""name"": ""Home Assistant"",
        ""version"": 5,
        ""addon"": false,
        ""rejectUnauthorizedCerts"": true,
        ""ha_boolean"": ""y|yes|true|on|home|open"",
        ""connectionDelay"": true,
        ""cacheJson"": true,
        ""heartbeat"": true,
        ""heartbeatInterval"": ""30"",
        ""areaSelector"": ""friendlyName"",
        ""deviceSelector"": ""friendlyName"",
        ""entitySelector"": ""friendlyName"",
        ""statusSeparator"": ""at: "",
        ""statusYear"": ""hidden"",
        ""statusMonth"": ""short"",
        ""statusDay"": ""numeric"",
        ""statusHourCycle"": ""h23"",
        ""statusTimeFormat"": ""h:m:s"",
        ""enableGlobalContextStore"": true
    }
]"
yJxVSMSX,Untitled,f0f077,Python,Thursday 18th of January 2024 04:30:03 PM CDT,"Python for Data Structures, Algorithms, and Interviews!
Get a kick start on your career and ace your coding interviews!
This course will teach you everything you need to know to get a great job in the software technology field, including:

Creating a great resume
Creating LinkedIn and GitHub profiles for recruiters to find
Building and leveraging a network for job opportunities
for more:https://dz-linkk.com/codWkK"
YinrDkU1,Mekanism fission reactor script,Terminator_NL,Lua,Thursday 18th of January 2024 03:54:41 PM CDT,"-- This function is required because the handle
-- to the fusion reactor can return nil after creation
function attempt(fun_name, if_true_do, if_false_do)
    reactor = peripheral.find(""fissionReactorLogicAdapter"")
    if reactor == nil then
        return false
    end
    
    if reactor[fun_name] == nil then
        return if_false_do()
    end
    result = reactor[fun_name]() 
    return if_true_do(result)
end


while not peripheral.find(""fissionReactorLogicAdapter"") do
    sleep(1)
    print(""Waiting for reactor to come online..."")
end

term.clear()
term.setCursorPos(1,1)
print(""Script is active."")

-- Steam percentage
target_level = 0.9

-- Coolant percentage
min_coolant = 0.9

while true do
    -- We assume the worst possible state
    steam_level = attempt(""getHeatedCoolantFilledPercentage"", function(level) return level end, function() return 0 end)
    coolant_level = attempt(""getCoolantFilledPercentage"", function(level) return level end, function() return 0 end)
    damage_level = attempt(""getDamagePercent"", function(damage) return damage end, function() return 100 end)
    waste_level = attempt(""getWasteFilledPercentage"",function(level) return level end, function() return 100 end)
    redstone_allowed = rs.getInput(""front"")
    
    should_run = steam_level < target_level and waste_level <= 0 and redstone_allowed and coolant_level > min_coolant and damage_level <= 0

    current_state = attempt(""getStatus"", function(status) return status end, function() return true end)
    
    term.setCursorPos(1,2)
    term.clearLine()
    if current_state ~= should_run then
        if should_run then
            attempt(""activate"", function(v) return nil end, function() return nil end)
            term.write(""Switched reactor status: on"")
        else
            attempt(""scram"", function(v) return nil end, function() return nil end)
            term.write(""Switched reactor status: off"")
        end
    else
        term.write(""Reactor is currently "" .. (current_state and ""running"" or ""stopped""))
    end
    sleep(1)
end
"
dLt2r1Yn,Untitled,Niko_Crawford,C#,Thursday 18th of January 2024 03:39:03 PM CDT,"// lazo start
            { DataName.YouDeletedLeader, ""{0} снял вас с поста лидера фракции"" },
            { DataName.YouGivedBanHammer, ""Вы получили банхаммер до {0}. Причина: {1}. До новых встреч!"" },
            { DataName.AdminReviveYou, ""Administrator {0} te je digao/oziveo."" },
            { DataName.AdminTeleportYou, ""Administrator {0} vas je teleportovao do sebe."" },
            { DataName.AdminSendYouToDemorgan, ""Отправил Вас в деморган на {0} {1}. Причина: {2}"" },
            { DataName.AdminReleasedYouFromDemorgan, ""Выпустил Вас из деморгана. Приятной игры и больше не нарушайте! :)"" },
            { DataName.AdminSendYouToSpawn, ""Телепортировал вас на спавн"" },
            { DataName.FuelPriceOfLiter, ""Цена за литр: {0}$"" },
            { DataName.ReportAnswer, ""odgovor na report"" },
            { DataName.PairAnimation, ""Парная анимация"" },
            { DataName.AirDrop, ""Груз"" },
            { DataName.HeliCrash, ""Крушение вертолета"" },
            { DataName.StartSoon, ""Скоро начнётся!"" },
            { DataName.AfterTenMinutes, ""za 10 minuta!"" },
            { DataName.HeliEventCoolMsgText, ""Над {0} пролетит {1} вертолёт, который передает сигнал бедствия."" },
            { DataName.TheState, ""drzava"" },
            { DataName.Race, ""Гонка"" },
            { DataName.ChallengeToRace, ""Вызов на гонку"" },
            { DataName.Win, ""Победа!"" },
            { DataName.Lose, ""Поражение :("" },
            { DataName.Hospital, ""Bolnica"" },
            { DataName.Healing, ""Lecenje"" },
            { DataName.Fine, ""Kazna"" },
            { DataName.SuccessPayment, ""Успешная оплата"" },
            { DataName.Fail, ""Отказ!"" },
            { DataName.YouPaidFine, ""Вы оплатили штраф в размере {0}$ за {1}"" },
            { DataName.PaidYourFine, ""{0} оплатил штраф в размере {1}$ за {2}"" },
            { DataName.YouDeclinePaidFine, ""Вы отказались платить штраф в размере {0}$ за {1}"" },
            { DataName.DeclinePaidYourFine, ""{0} отказался платить штраф в размере {1}$ за {2}"" },
            { DataName.Wasted, ""WASTED"" },
            { DataName.Arrest, ""Uhapsi"" },
            { DataName.ArrestYou, ""Игрок ({0}) посадил Вас на {1} минут"" },
            { DataName.YouArrest, ""Вы посадили игрока ({0}) на {1} минут"" },
            { DataName.Documents, ""Документы"" },
            { DataName.YouOfferGunLicence, ""Вы предложили купить лицензию на оружие игроку ({0}) за ${1}"" },
            { DataName.HandsUp, ""Поднять руки"" },
            { DataName.OfferYouHandsUp, ""Игрок ({0}) заставляет вас поднять руки. Вы желаете подчиниться требованиям и поднять руки? Y/N - принять/отклонить"" },
            { DataName.YouOfferHandsUp, ""Вы заставляете игрока ({0}) поднять руки."" },
            { DataName.Successfully, ""Uspesno"" },
            { DataName.CallingEmployee, ""Вызов сотрудника"" },
            { DataName.Capture, ""Капт"" },
            { DataName.Realtor, ""Риэлтор"" },
            { DataName.BuyInfo, ""Покупка информации"" },
            { DataName.RentTent, ""Аренда палатки"" },
            { DataName.Mechanic, ""Механик"" },
            { DataName.Faction, ""Organizacija"" },
            { DataName.Organization, ""Organizacija"" },
            { DataName.System, ""Система"" },
            { DataName.Family, ""Familija"" },
            { DataName.RewardForOnline, ""Награда за онлайн"" },
            { DataName.CreateFamily, ""Создание семьи"" },
            { DataName.ClearFamily, ""Семья распущена!"" },
            { DataName.SuccessFamilyCreate, ""Поздравляем Вас с регистрацией собственной семьи - {0}!"" },
            { DataName.SuccessClearFamily, ""Вы распустили семью, деньги были выданы на руки."" },
            { DataName.MatWar, ""MATSWAR"" },
            { DataName.WarForMats, ""Война за материалы!"" },
            { DataName.MatWarStartIn, ""В 20:00 начнется война за материалы! Фракции, приготовьтесь!"" },
            { DataName.GiveAdminAccessToAdmins, ""{0} ({1}) выдал {2} админ. права 1 уровня"" },
            { DataName.TakeAdminAccessToAdmins, ""{0} ({1}) снял с {2} админ. права"" },
            { DataName.GiveAdminRankToAdmins, ""{0} ({1}) выдал {2} {3} уровень админ. прав"" },
            { DataName.GiveVipToAdmins, ""{0} ({1}) выставил {2} статус {3} на {4} дней."" },
            { DataName.GiveLeaderToAdmins, ""{0} ({1}) выдал лидерку({2}) {3} ({4})"" }, // 2 - faction id, 3 - target name, 4 - target id
            { DataName.RequestGiveLeaderAcceptToAdmins, ""{0} ({1}) подтвердил запрос выдачи лидерки администратора {2}"" },
            { DataName.RequestGiveLeaderToAdmins, ""{0} выдал лидерку({1}) {2} ({3})"" },
            { DataName.TakeLeaderToAdmins, ""{0} ({1}) снял лидерку {2} ({3})"" },
            { DataName.DelPlayerWorkToAdmins, ""{0} ({1}) уволил с работы {2} ({3})"" },
            { DataName.DelPlayerFactionToAdmin, ""{0} ({1}) выкинул из фракции {2} ({3})"" },
            { DataName.SBanAlwaysToAdmins, ""{0} забанил игрока {1}({2}) без лишнего шума навсегда. Причина: {3}"" },
            { DataName.SBanTimeToAdmins, ""{0} забанил игрока {1}({2}) без лишнего шума на {3} дней. Причина: {4}"" },
            { DataName.KillPlayerToAdmins, ""{0} ({1}) убил игрока {2} ({3})"" },
            { DataName.RevivePlayerToAdmins, ""{0} ({1}) возродил игрока {2} ({3})"" },
            { DataName.SetHpToAdmins, ""{0} ({1}) выставил HP({2}) {3} ({4})"" },
            { DataName.TpMeToAdmins, ""{0} ({1}) телепортировал к себе {2} ({3})"" },
            { DataName.RequestGlobalAcceptToAdmins, ""{0} ({1}) подтвердил запрос на global({2})"" },
            { DataName.DelPlayerFactionToAdmins, ""{0} ({1}) уволил из фракции {2}"" },
            { DataName.SendCreatorToAdmins, ""{0} ({1}) отправил в creator {2} ({3})"" },
            { DataName.RequestSendCreatorAcceptToAdmins, ""{0} ({1}) подтвердил запрос смены внешности от администратора {2}"" },
            { DataName.RequestSendCreatorToAdmins, ""{0} отправил в creator {1} ({2})"" },
            { DataName.ChangeNameToAdmins, ""{0} ({1}) изменил имя {2} на {3}"" },
            { DataName.RequestChangeNameAcceptToAdmins, ""{0} ({1}) подтвердил запрос изменения администратора {2}"" },
            { DataName.RequestChangeNameToAdmins, ""{0} изменил имя {1} на {2}"" },
            { DataName.ChangeNameInOfflineToAdmins, ""{0} ({1}) изменил имя {2} на {3} в оффлайне"" },
            { DataName.RequestChangeNameInOfflineToAdmins, ""{0} изменил имя {1} на {2} в оффлайне"" },
            { DataName.TpToAdmins, ""{0} ({1}) телепортировался к {2} ({3})"" },
            { DataName.TpMeVehToAdmins, ""{0} ({1}) телепортировал машину к себе {2} ({3})"" },
            { DataName.TpVehWidthIdToAdmins, ""{0} ({1}) телепортировался к машине {2} ({3})"" },
            { DataName.TpVehWidthNumberToAdmins, ""{0} ({1}) телепортировался к машине {2} (ID: {3}; Number: {4})"" },
            { DataName.ChangeVehDimensionToAdmins, ""{0} ({1}) изменил dimension машины {2} ({3}) на {4}."" },
            { DataName.CheckDonateToAdmins, ""{0} ({1}) узнал количество RB у {2} ({3}) - {4}"" },
            { DataName.CheckVipToAdmins, ""{0} ({1}) узнал VIP-статус {2} ({3}) - {4}"" },
            { DataName.CheckLoginToAdmins, ""{0} ({1}) проверил логин {2} ({3}) - {4}"" },
            { DataName.BanLoginInOfflineIsOnlineToAdmins, ""{0} ({1}) в оффлайне забанил логин({2}) {3} ({4}) по причине {5}"" },
            { DataName.BanLoginInOfflineToAdmins, ""{0} ({1}) в оффлайне забанил логин({2}) по причине {3}"" },
            { DataName.UnBanLoginToAdmins, ""{0} ({1}) разбанил логин({2}"" },
            { DataName.GiveArmorToAdmins, ""{0} ({1}) выдал Armor({2}) {3} ({4})"" },
            { DataName.CheckGMToAdmins, ""{0} ({1}) проверил на GM {2} ({3})"" },
            { DataName.SlapToAdmins, ""{0} ({1}) подкинул {2} ({3})"" },
            { DataName.CheckMoneyToAdmins, ""{0} ({1}) проверил денежные средства {2} ({3})"" },
            { DataName.FreezeToAdmins, ""{0} ({1}) заморозил {2} ({3})"" },
            { DataName.UnFreezeToAdmins, ""{0} ({1}) разморозил {2} ({3})"" },
            { DataName.GiveGunToAdmins, ""{0} ({1}) выдал оружие ({2}|{3}) {4} ({5})"" }, // 2 - weapon name, 3 - weapon serial
            { DataName.GiveCarCouponToAdmins, ""{0} ({1}) выдал купон на машину ({2}) {3} ({4})"" },
            { DataName.TakeAllGunsToAdmins, ""{0} ({1}) забрал все оружия {2} ({3})"" },
            { DataName.CheckLastDeathDataToAdmins, ""{0} ({1}) проверил данные последней смерти {2} ({3})"" },
            { DataName.StartSpecToAdmins, ""{0} ({1}) начал слежение {2} ({3})"" },
            { DataName.EndSpecToAdmins, ""{0} ({1}) вышел из режима слежения"" },
            { DataName.GiveAmmoToAdmins, ""{0} ({1}) выдал патроны ({2}|{3}) {4} ({5})"" },
            { DataName.SetPlayerDimensionToAdmins, ""{0} ({1}) выставил Dimension({2}) {3} ({4})"" },
            { DataName.SpawnAllVehiclesToAdmins, ""{0} ({1}) отправил все машины на спавн ({2} шт."" },
            { DataName.SpawnVehicleToAdmins, ""{0} ({1}) отправил машину на спавн ({2})"" },
            { DataName.RepairVehicleToAdmins, ""{0} ({1}) починил машину ({2})"" },
            { DataName.RepairVehicleByIdToAdmins, ""{0} ({1}) je popravio vozilo ID ({2})"" },
            { DataName.CheckOfflineStatsToAdmins, ""{0} ({1}) je proverio offline /stats {2}"" },
            { DataName.CheckStatsToAdmins, ""{0} ({1}) je proverio /stats {2} ({3})"" },
            { DataName.CheckAdminListToAdmins, ""{0} ({1}) проверяет список администрации в сети"" },
            { DataName.CheckMediaListToAdmins, ""{0} ({1}) проверяет список медиа в сети"" },
            { DataName.UnWantedAdminToAdmins, ""{0} ({1}) je skinuo wanted {2} ({3})"" },
            { DataName.GiveAllLicencesToAdmins, ""{0} ({1}) je dao komplet dozvola igracu {2} ({3})"" },
            { DataName.TpCoordsToAdmins, ""{0} ({1}) se teleportovao do kordinate {2} {3} {4}"" },
            { DataName.FuelFillToAdmins, ""{0} ({1}) заправил машину ({2},{3}л)"" }, // 2 - vehicle id, 3 - fuel
            { DataName.GivePlayerLevelToAdmins, ""{0} ({1}) выдал {2} ({3}) {4} уровней"" },
            { DataName.DeleteAdminVehicleToAdmins, ""{0} ({1}) удалил админ-машину ({2})"" },
            { DataName.DeleteAllAdminVehiclesToAdmins, ""{0} ({1}) удалил все админ-машины"" },
            { DataName.DeleteAllOwnedAdminVehiclesToAdmins, ""{0} ({1}) удалил все свои админ-машины"" },
            { DataName.SpawnPlayerToAdmins, ""{0} ({1}) отправил на спавн {2} ({3})"" },
            { DataName.UpHealthToAdmins, ""{0} ({1}) повысил себе здоровье"" },
            { DataName.CreateVehicleToAdmins, ""{0} ({1}) создал машину({2},{3})"" }, // 2 - veh name, 3 - veh id
            { DataName.CreateManyVehiclesToAdmins, ""{0} ({1}) создал {2} машин({3})"" },
            { DataName.CheckVehicleOwnerToAdmins, ""{0} ({1}) проверяет владельца машины {2} ({3})"" },
            { DataName.ChangeWeatherToAdmins, ""{0} ({1}) je promenio vreme u ({2})"" },
            { DataName.ChangeGameTimeToAdmins, ""{0} ({1}) установил игровое время({2} {3} {4})"" }, // 2 - hour, 3 - minutes, 4 - seconds
            { DataName.FlipVehicleToAdmins, ""{0} ({1}) перевернул машину {2} ({3})"" },
            { DataName.CheckNickHistoryToAdmins, ""{0} ({1}) проверяет историю изменения имён {2} ({3})"" },
            { DataName.CheckNickHistoryByUIDToAdmins, ""{0} ({1}) проверяет историю изменения имён по UUID {2}"" },
            { DataName.ClearFactionToAdmins, ""{0} ({1}) очистил фракцию {2}"" },
            { DataName.TpHomeToAdmins, ""{0} ({1}) телепортировался к дому {2}"" },
            { DataName.TpBusinessToAdmins, ""{0} ({1}) телепортировался к бизнесу {2}"" },
            { DataName.AdminSMSToPlayer, ""{0} Administrator {1} ({2}): {3}"" },
            { DataName.LeaveFromSpecToPlayer, ""Prestao si specati."" },
            { DataName.GovMemberPhone, "" Телефон для связи: {0}"" },
            { DataName.YouUnBanInCapureAndBizWar, ""Administrator {0} ti je omogucio zauzimanje i BizWar."" },
            { DataName.YouLoadIPL, ""Вы подгрузили IPL: {0}"" },
            { DataName.YouUnLoadIPL, ""Вы выгрузили IPL: {0}"" },
            { DataName.YouEnableEffect, ""Omogucio si efekat: {0}"" },
            { DataName.YouDisableEffect, ""Onemogucio si efekat: {0}"" },
            { DataName.YouCanResetDeliveryPoint, ""Если вдруг вы сбили точку доставки, то напишите в чат /mypoint"" },
            { DataName.YouCanResetVehiclePoint, ""Если вдруг вы сбили координаты машины, то напишите в чат /mypoint"" },
            { DataName.ChangeVipAddDays, ""Так как у Вас уже был VIP статус, то вместо его замены Вам было начислено дополнительно {0} дней использования!"" },
            { DataName.YouNotSetPromoOnReg, ""~r~Вы не указывали промокод или реф.код при регистрации, но всё еще можете активировать любой из промокодов через телефон (M -> Подарок)."" },
            { DataName.PlayerOwnedBusiness, ""Игрок владеет бизнесом {0} (ID:{1})"" },
            { DataName.PlayerOwnedHouse, ""Игрок имеет недвижимость (ID{0}) стоимостью ${1} класса '{2}'"" },
            { DataName.PlayerLivingInHouse, ""Игрок заселен в дом (ID{0}) к {1} стоимостью ${2} класса '{3}'"" },
            { DataName.YouGiveToYou, ""Вы выдали себе {0}!"" },
            { DataName.TaxEnabled, ""Списывание налогов включено!"" },
            { DataName.TaxDisabled, ""Списывание налогов выключено!"" },
            { DataName.YouRefillBisinessProducts, ""~r~Вы полностью пополнили склад бизнеса!"" },
            { DataName.CantFindStock, ""~r~Склада такой фракции нет"" },
            { DataName.Mats, ""materijali"" },
            { DataName.Drugs, ""narkotici"" },
            { DataName.MedKits, ""kit za prvu pomoc"" },
            { DataName.Money, ""novac"" },
            { DataName.WarForMatsInProgress, ""~r~Война за маты уже идёт"" },
            { DataName.VMZNotInProgress, ""~r~ВЗМ еще не начат, он должен быть запущен."" },
            { DataName.SuccessHousePrice, ""~r~Вы успешно установили цену для домов - {0}"" },
            { DataName.SuccessHouseClearOwner, ""~r~Вы успешно очистили владельца у недвижимости {0}"" },
            { DataName.MustFactionVehicleForChange, ""Вы должны сидеть в машине фракции, которую хотите изменить"" },
            { DataName.SuccessChangeTunForFactionVeh, ""Вы изменили тюнинг этой машины для фракции."" },
            { DataName.SuccessChangeDataForFactionVeh, ""Вы изменили данные этой машины для фракции."" },
            { DataName.TruckerRadio, ""~y~[Рация дальнобойщиков] "" },
            { DataName.SilentSay, ""[Шепот] "" },
            { DataName.RewartLimit, ""Награда не может превышать выставленный лимит {0}."" },
            { DataName.CantEditReport, ""Report ne moze da se uredjuje."" },
            { DataName.YourReport, ""~o~Vase pitanje: {0}"" },
            { DataName.AdminAnswer, ""{0} Administrator {1} ({2}): {3}"" },
            { DataName.NeedNearSafe, ""~r~[Ошибка] ~w~Вы должны быть возле сейфа."" },
            { DataName.HeliCrashChatMessage, ""~o~[HeliCrash] Через 10 минут над {0} пролетит {1} вертолёт, который передает сигнал бедствия."" },
            { DataName.TankRoyaleEndWithoutWinner, ""~o~[Tank Royale] Мероприятие было завершено без победителя."" },
            { DataName.TankRoyaleLeftTanks, ""~o~[Tank Royale] В игре осталось {0} танков!"" },
            { DataName.TankRoyaleWinner, ""~o~[Tank Royale] Победитель {0} выжил с {1}HP и получил {2}$."" },
            { DataName.GandEndDelivery, ""Сдача машины: !{{#00FF00}}{0}$ ~w~были отправлены в общак банды и еще столько же тебе в карман. ({1} {2})"" },
            { DataName.FamilyEndDelivery, ""Сдача фургона: !{{#00FF00}}{0}$ ~w~были отправлены в общак группировки и еще столько же тебе в карман. ({1} {2})"" },
            { DataName.SetWantedToFaction, ""!{{#FF8C00}}[F] {0} объявил в розыск {1}. Причина: {2}"" },
            { DataName.YouCollectAllBearGiveItGranny, ""Вы собрали всех Мишек, отдайте их Бабушке Granny!"" },
            { DataName.YouCollectHalfBearSetWaypointToNext, ""Вы собрали 1/2 Мишек. Остался последний Мишка. На карте отмечено следующее примерное расположение последнего Мишки!"" },
            { DataName.InPhone, ""[U telefonu] {0}: {1}"" },
            { DataName.SomebodyTryHackCityHallDoorToFaction, ""Кто-то пытается взломать дверь в хранилище мэрии."" },
            { DataName.HouseSafeTryHackToFaction, ""Сейф №{0} по адресу {1} пытаются взломать."" },
            { DataName.OpenStockToFaction, ""{0} ({1}) je otvorio skladiste."" },
            { DataName.CloseStockToFaction, ""{0} ({1}) je zatvorio/la skladiste."" },
            { DataName.OpenSecondStockToFaction, ""{0} ({1}) открыл склад №2."" },
            { DataName.CloseSecondStockToFaction, ""{0} ({1}) закрыл склад №2."" },
            { DataName.PlayerLeaveFromFaction, ""{0} ({1}) уволился по собственному желанию."" },
            { DataName.FinePlayerToFaction, ""{0} оштрафовал {1} на {2}$. Причина: {3}"" },
            { DataName.ArrestPlayerToFaction, ""{0} посадил в КПЗ {1} ({2})"" },
            { DataName.UnArrestPlayerToFaction, ""{0} выпустил из КПЗ {1}"" },
            { DataName.SetVehicleWantedToFaction, ""{0} объявил транспортное средство [{1}] в розыск. Причина: {2}"" },
            { DataName.StartStreamToFaction, ""{0} ({1}) начал прямой эфир."" },
            { DataName.EndStreamToFaction, ""{0} ({1}) закончил прямой эфир."" },
            { DataName.AcceptCallFromHouseToFaction, ""{0} принял вызов из дома №{1}."" },
            { DataName.AcceptCallFromVehicleSirenToFaction, ""{0} принял вызов сигнализации машины №{1}."" },
            { DataName.AcceptCallFromSafeHackToFaction, ""{0} принял вызов по ограблению сейфа."" },
            { DataName.EnableCraftWeapon, ""{0} ({1}) разрешил крафт оружия."" },
            { DataName.DisableCraftWeapon, ""{0} ({1}) запретил крафт оружия."" },
            { DataName.EnableExtremeSituation, ""{0} объявил режим ЧП!!!"" },
            { DataName.DisableExtremeSituation, ""{1} отключил режим ЧП."" },
            { DataName.PutInStock, ""положил на склад"" },
            { DataName.TakeFromStork, ""взял со склада"" },
            { DataName.ActionDrinkBeerMan, ""бахнул пивка"" },
            { DataName.ActionDrinkBeerWoman, ""бахнула пивка"" },
            { DataName.ActionDrinkBottleMan, ""выпил бутылку {0}"" },
            { DataName.ActionDrinkBottleWoman, ""выпила бутылку {0}"" },
            { DataName.ActionDrinkMan, ""выпил {0}"" },
            { DataName.ActionDrinkWoman, ""выпила {0}"" },
            { DataName.ActionEatMan, ""je pojeo {0}"" },
            { DataName.ActionEatWoman, ""je pojela {0}"" },
            { DataName.ActionDrugsVariationOneMan, ""хапнул шмальца"" },
            { DataName.ActionDrugsVariationOneWoman, ""хапнула шмальца"" },
            { DataName.ActionDrugsVariationTwoMan, ""сделал хапку"" },
            { DataName.ActionDrugsVariationTwoWoman, ""сделала хапку"" },
            { DataName.ActionCocaineVariationOneMan, ""нюхнул дорожку"" },
            { DataName.ActionCocaineVariationOneWoman, ""нюхнула дорожку"" },
            { DataName.ActionCocaineVariationTwoMan, ""вмазал дорожку"" },
            { DataName.ActionCocaineVariationTwoWoman, ""вмазал дорожку"" },
            { DataName.ActionTakeItemMan, ""достал {0}"" },
            { DataName.ActionTakeItemWoman, ""достала {0}"" },
            { DataName.Microphone, ""mikrofon"" },
            { DataName.ActionBongVariationOneMan, ""задымил бонг"" },
            { DataName.ActionBongVariationOneWoman, ""задымила бонг"" },
            { DataName.ActionBongVariationTwoMan, ""сделал затяжику из бонга"" },
            { DataName.ActionBongVariationTwoWoman, ""сделала затяжику из бонга"" },
            { DataName.ActionUseMan, ""использовал {0}"" },
            { DataName.ActionUseWoman, ""использовала {0}"" },
            { DataName.ActionThrowMan, ""выбросил {0}"" },
            { DataName.ActionThrowWoman, ""выбросила {0}"" },
            { DataName.ActionPutMan, ""поставил {0}"" },
            { DataName.ActionPutWoman, ""поставила {0}"" },
            { DataName.ActionTransferMan, ""передал {0}"" },
            { DataName.ActionTransferWoman, ""передала {0}"" },
            { DataName.ActionRefillVehicleMan, ""je napunio vozilo"" },
            { DataName.ActionRefillVehicleWoman, ""je napunila vozilo"" },
            { DataName.ActionSeatBeltEnableMan, ""пристегнул ремень безопасности"" },
            { DataName.ActionSeatBeltEnableWoman, ""пристегнула ремень безопасности"" },
            { DataName.ActionSeatBeltDisableMan, ""отстегнул ремень безопасности"" },
            { DataName.ActionSeatBeltDisableWoman, ""отстегнула ремень безопасности"" },
            { DataName.ActionOpenVehTrunkMan, ""открыл багажник"" },
            { DataName.ActionOpenVehTrunkWoman, ""открыла багажник"" },
            { DataName.ActionCloseVehTrunkMan, ""закрыл багажник"" },
            { DataName.ActionCloseVehTrunkWoman, ""закрыла багажник"" },
            { DataName.ActionSeatInVehTrunkMan, ""залез в багажник"" },
            { DataName.ActionSeatInVehTrunkWoman, ""залезла в багажник"" },
            { DataName.ActionPullFromVehTrunkMan, ""вытащил {0} из багажника"" },
            { DataName.ActionPullFromVehTrunkWoman, ""вытащила {0} из багажника"" },
            { DataName.ActionChangeNumbers, ""меняет номера"" },
            { DataName.ActionLeaveFromVehTrunkMan, ""вылез из багажника"" },
            { DataName.ActionLeaveFromVehTrunkWoman, ""вылезла из багажника"" },
            { DataName.ActionOffEngineMan, ""je ugasio vozilo"" },
            { DataName.ActionOffEngineWoman, ""je ugasila vozilo"" },
            { DataName.ActionOnEngineMan, ""je upalio vozilo"" },
            { DataName.ActionOnEngineWoman, ""je upalila vozilo"" },
            { DataName.ActionHideItemMan, ""spremio {0}"" },
            { DataName.ActionHideItemWoman, ""spremila {0}"" },
            { DataName.ActionFinePlayerMan, ""выписал штраф для {{name}}"" },
            { DataName.ActionFinePlayerWoman, ""выписала штраф для {{name}}"" },
            { DataName.ActionArrestPlayerMan, ""поместил {{name}} в КПЗ"" },
            { DataName.ActionArrestPlayerWoman, ""поместила {{name}} в КПЗ"" },
            { DataName.ActionRemoveFromPrisonMan, ""освободил {{name}} из КПЗ"" },
            { DataName.ActionRemoveFromPrisonWoman, ""освободила {{name}} из КПЗ"" },
            { DataName.ActionFollowMan, ""je povukao {{name}} za sobom"" },
            { DataName.ActionFollowWoman, ""je povukla {{name}} za sobom"" },
            { DataName.ActionUnFollowMan, ""je pustio {{name}}"" },
            { DataName.ActionUnFollowWoman, ""je pustila {{name}}"" },
            { DataName.ActionPutInVehMan, ""открыл дверь и усадил {{name}} в машину"" },
            { DataName.ActionPutInVehWoman, ""открыла дверь и усадил {{name}} в машину"" },
            { DataName.ActionRemoveFromVehMan, ""открыл дверь и вытащил {{name}} из машины"" },
            { DataName.ActionRemoveFromVehWoman, ""открыла дверь и вытащил {{name}} из машины"" },
            { DataName.ActionOnSearchNotFoundMan, ""хорошенько обшарив {{name}}, ничего не нашёл"" },
            { DataName.ActionOnSearchNotFoundWoman, ""хорошенько обшарив {{name}}, ничего не нашла"" },
            { DataName.ActionOnSearchMoneyMan, ""хорошенько обшарив {{name}}, нашёл ${0}"" },
            { DataName.ActionOnSearchMoneyWoman, ""хорошенько обшарив {{name}}, нашла ${0}"" },
            { DataName.ActionStealWeaponMan, ""выкрал оружие у {{name}}"" },
            { DataName.ActionStealWeaponWoman, ""выкрала оружие у {{name}}"" },
            { DataName.ActionRemoveBagFromPlayerMan, ""снял мешок с {{name}}"" },
            { DataName.ActionRemoveBagFromPlayerWoman, ""сняла мешок с {{name}}"" },
            { DataName.ActionRemoveMaskFromPlayerMan, ""сорвал маску с {{name}}"" },
            { DataName.ActionRemoveMaskFromPlayerWoman, ""сорвала маску с {{name}}"" },
            { DataName.ActionEquipMaskOnPlayerMan, ""надел мешок на {{name}}"" },
            { DataName.ActionEquipMaskOnPlayerWoman, ""надела мешок на {{name}}"" },
            { DataName.ActionHandsUpMan, ""поднял руки"" },
            { DataName.ActionHandsUpWoman, ""подняла руки"" },
            { DataName.ActionAnyNotFound, ""Ничего нет при себе"" },
            { DataName.ActionManyMoneyFound, ""При себе большое количество денег"" },
            { DataName.ActionLittleMoneyFound, ""При себе ${0}"" },
            { DataName.ActionPetDeliverBall, ""Питомец принёс мячик."" },
            { DataName.ActionFeedPetMan, ""покормил питомца"" },
            { DataName.ActionFeedPetWoman, ""покормила питомца"" },
            { DataName.ActionPickItemMan, ""поднял {0}"" },
            { DataName.ActionPickItemWoman, ""подняла {0}"" },
            { DataName.ActionPickPartItemMan, ""поднял часть {0}"" },
            { DataName.ActionPickPartItemWoman, ""подняла часть {0}"" },
            { DataName.ActionWinMoneyMan, ""выиграл «{0}{1}!{{#d4d4d4}}» в количестве {2}$ из {3}."" }, // 0 - color, 1 - name, 2 - amount, 3 - case name
            { DataName.ActionWinMoneyWoman, ""выиграла «{0}{1}!{{#d4d4d4}}» в количестве {2}$ из {3}."" },
            { DataName.ActionWinDonateMan, ""выиграл «{0}{1}!{{#d4d4d4}}» в количестве {2}RB из {3}."" },
            { DataName.ActionWinDonateWoman, ""выиграла «{0}{1}!{{#d4d4d4}}» в количестве {2}RB из {3}."" },
            { DataName.ActionWinMan, ""выиграл «{0}{1}!{{#d4d4d4}}» из {2}."" },
            { DataName.ActionWinWoman, ""выиграла «{0}{1}!{{#d4d4d4}}» из {2}."" },
            { DataName.AdminLoginToAdmins, ""!{#FFB833}[A] {0} авторизовался ({1} lvl)"" },
            { DataName.RequestGiveLeaderDeleteToAdmins, ""Запрос на выдачу лидерки для {0} ({1}) удалён в связи с {2}."" },
            { DataName.RequestChangeSkinDeleteToAdmins, ""Запрос на смену внешности для {0} ({1}) удалён в связи с {2}."" },
            { DataName.TryOfflineRemoveHighAdminToAdmins, ""{0} ({1}) попытался снять {2} (offline), который имеет выше уровень администратора."" },
            { DataName.TryRemoveHighAdminToAdmins, ""{0} ({1}) попытался снять {2} ({3}), который имеет выше уровень администратора."" },
            { DataName.RequestSendSetLeaderToAdmins, ""Запрос от {0} ({1}) на выдачу лидерки({2}) для {3} ({4}). Чтобы подтвердить действие - введите: /setleader {4} {2}"" }, // This is not an error, it's just that there are repeated arguments
            { DataName.BanWordToAdmins, ""{0} ({1}) был снят системой за причину в наказании: {2}"" },
            { DataName.PunishCountBanToAdmins, ""{0} ({1}) был снят системой безопасности за превышение лимита наказаний"" },
            { DataName.TryBanMaxLevelAdminToAdmins, ""{0} ({1}) попытался забанить {2} ({3})."" },
            { DataName.BanAdminAndBanTooToAdmins, ""{0} ({1}) забанил {2} ({3}) и был забанен системой."" },
            { DataName.TryHardBanMaxLevelAdminToAdmins, ""{0} ({1}) попытался забанить хардом {2} ({3})."" },
            { DataName.HardBanAdminAndBanTooToAdmins, ""{0} ({1}) забанил хардом {2} ({3}) и был забанен системой."" },
            { DataName.TryBanOfflineToAdmins, ""{0} ({1}) попытался забанить {2} {3} (offline)."" },
            { DataName.BanOfflineAdminAndBanTooToAdmins, ""{0} ({1}) забанил {2} в оффлайне и был забанен системой."" },
            { DataName.UnBanToAdmins, ""{0} ({1}) снял бан {2}"" },
            { DataName.UnBanHardToAdmins, ""{0} ({1}) снял хардбан {2}"" },
            { DataName.UnBanIpToAdmins, ""{0} ({1}) разблокировал IP адрес: {2}"" },
            { DataName.TryKickHighAdminToAdmins, ""{0} ({1}) попытался кикнуть {2} ({3}), который имеет выше уровень администратора."" },
            { DataName.SilentKickToAdmins, ""{0} кикнул игрока {1} ({2}) без лишнего шума."" },
            { DataName.TryWarnHighAdminToAdmins, ""{0} ({1}) попытался предупредить {2} ({3}), который имеет выше уровень администратора."" },
            { DataName.ASMS, ""{0} ({1}) для {2} ({3}): {4}"" },
            { DataName.BanWordForGlobalToAdmins, ""{0} ({1}) был снят системой за причину в глобале: {2}"" },
            { DataName.RequestGlobalToAdmins, ""Запрос от {0} ({1}) на global({2}). Чтобы подтвердить действие - введите: /accept {3}"" },
            { DataName.RequestSendSendCreatorToAdmins, ""Запрос от {0} ({1}) на смену внешности {2}. Чтобы подтвердить действие - введите: /sendcreator {3}"" },
            { DataName.RequestSendChangeNameToAdmins, ""Запрос от {0} ({1}) на смену имени {2} -> {3}. Чтобы подтвердить действие - введите: /setname {2} {3}"" },
            { DataName.RequestSendChangeNameOffToAdmins, ""Запрос от {0} ({1}) на смену имени {2} -> {3}. Чтобы подтвердить действие - введите: /setnameoff {2} {3}"" },
            { DataName.StartWFMToAdminsMan, ""{0} запустил ВЗМ"" }, // War For Mats
            { DataName.StartWFMToAdminsWoman, ""{0} запустила ВЗМ"" },
            { DataName.CancelWFMToAdminsMan, ""{0} закончил ВЗМ"" },
            { DataName.CancelWFMToAdminsWoman, ""{0} закончила ВЗМ"" },
            { DataName.TryOfflineClearHighAdminToAdmins, ""{0} ({1}) попытался очистить {2} (offline), который имеет выше уровень администратора."" },
            { DataName.UnBanCaptureAndBizWarToAdmins, ""{0} ({1}) разблокировал в системах capture и bizwar персонажа {2} ({3})"" },
            { DataName.TryOfflineBanHighAdminToAdmins, ""{0} ({1}) попытался забанить {2} (offline), который имеет выше уровень администратора."" },
            { DataName.TryWriteGovBanWordToAdmins, ""{0} ({1}) попытался написать в гос.связь: {2}"" },
            { DataName.CreateRefCodeToAdmins, ""Игрок {0} ({1}) создал реф. код: {2}"" },
            { DataName.WriteActionToAdmins, ""Игрок {0} ({1}) написал в action: {2}"" },
            { DataName.PermSilentBanToAdmins, ""{0} пожизненно забанил игрока {1} без лишнего шума. Причина: {2}"" },
            { DataName.SilentBanToAdmins, ""{0} забанил игрока {1} на {2}д без лишнего шума. Причина: {3}"" }, // 2 - days
            { DataName.AnswerToAdmins, ""{0}({1}) для {2}({3}): {4}"" },
            { DataName.DisableSafeZoneToAdmins, ""{0} ({1}) выключил возможность драться и получать урон в зоне #{2}"" },
            { DataName.EnableSafeZoneToAdmins, ""{0} ({1}) включил возможность драться и получать урон в зоне #{2}"" },
            { DataName.InvokeCaptureToAdmins, ""{0} ({1}) из {2} спровоцировал capture за территорию {3}."" },
            { DataName.AdminDisconnectToAdmins, ""{0} отключился ({1} lvl)"" },

            // PUNISH IN CHAT TO ALL IF ENABLE
            { DataName.PunishmentMute, ""{0} выдал мут игроку {1} ({2}) на {3} {4}. Причина: {5}"" },
            { DataName.PunishmentUnMute, ""{0} снял мут с игрока {1} ({2})"" },
            { DataName.PunishmentOffMute, ""{0} выдал мут игроку {1} в оффлайне на {2} {3}. Причина: {4}"" },
            { DataName.PunishmentOffUnMute, ""{0} снял мут с игрока {1} в оффлайне."" },
            { DataName.PunishmentPermBan, ""{0} заблокировал персонажа {1}({2}) навсегда. Причина: {3}"" },
            { DataName.PunishmentBan, ""{0} заблокировал персонажа {1}({2}) на {3} дней. Причина: {4}."" },
            { DataName.PunishmentPermHardBan, ""{0} выдал пожизненный банхаммер игроку {1}({2}). Причина: {3}"" },
            { DataName.PunishmentHardBan, ""{0} выдал банхаммер игроку {1}({2}) на {3} дней. Причина: {4}"" },
            { DataName.PunishmentPermOffHardBan, ""{0} выдал пожизненный банхаммер игроку {1} в оффлайне. Причина: {2}"" },
            { DataName.PunishmentOffHardBan, ""{0} выдал банхаммер игроку {1} в оффлайне на {2} дней. Причина: {3}"" },
            { DataName.PunishmentPermOffBan, ""{0} заблокировал персонажа {1} в оффлайне навсегда. Причина: {2}"" },
            { DataName.PunishmentOffBan, ""{0} заблокировал персонажа {1} в оффлайне на {2} дней. Причина: {3}"" },
            { DataName.PunishmentKick, ""{0} кикнул игрока {1}({2}). Причина: {3}"" },
            { DataName.PunishmentWarn, ""{0} выдал предупреждение игроку {1}({2}). | {3}/3. Причина: {4}"" },
            { DataName.PunishmentDemorgan, ""{0} посадил в деморган {1}({2}) на {3} {4}. Причина: {5}"" },
            { DataName.PunishmentUnDemorgan, ""{0} выпустил из деморгана {1} ({2})"" },
            { DataName.PunishmentClear, ""{0} полностью обнулил персонажа {1}. Причина: {2}"" },
            { DataName.PunishmentPermBanCapureAndBizWar, ""{0} ограничил доступ к системам capture и bizwar персонажу {1}({2}) навсегда. Причина: {3}"" },
            { DataName.PunishmentPermOffBanCapureAndBizWar, ""{0} ограничил доступ к системам capture и bizwar персонажу {1} в оффлайне навсегда. Причина: {2}"" },
            { DataName.PunishmentOffDemorgan, ""{0} посадил в деморган {1} в оффлайне на {2} {3}. Причина: {4}"" },
            { DataName.PunishmentOffUnDemorgan, ""{0} выпустил из деморгана {1} в оффлайне"" },
            { DataName.PunishmentOffWarn, ""{0} выдал предупреждение игроку {1} в оффлайне | {2}/3. Причина: {3}"" },
            { DataName.PunishmentRageBan, ""{0} отпритонил игрока {1}({2})"" },

            { DataName.BanBySystemForAdminBan, ""Забанен системой за бан администратора {0}"" },
            { DataName.Attack, ""Нападение"" },
            { DataName.YourAttacked, ""На вас напали!"" },
            { DataName.War, ""Война"" },
            { DataName.Draw, ""Ничья"" },
            { DataName.YouPlayInDraw, ""Вы сыграли в ничью"" },
            { DataName.YouLoseTerritory, ""Вы проиграли войну и потеряли территорию :("" },
            { DataName.YouWinTerritory, ""Вы победили! Территория переходит под ваш контроль, поздравляем!"" },
            { DataName.YouWinDefenceTerritory, ""Вы удержали территорию! Поздравляем!"" },
            { DataName.YouLoseAttackTerritory, ""Вы проиграли! Территория остаётся у стороны защиты."" },
            // lazo end"
eqjmFr6h,Password validator,ifigazsi,Python,Thursday 18th of January 2024 03:15:12 PM CDT,"#### ITERATION 1 ####
import string

password = ""dfshtj54aA""
lowercase = {x for x in string.ascii_lowercase}
uppercase = {x for x in string.ascii_uppercase}
numbers = {str(x) for x in range(0, 10)}

length_ok = len(password) > 7
lowercase_ok = len(lowercase.intersection(password)) > 0
uppercase_ok = len(uppercase.intersection(password)) > 0
number_ok = len(numbers.intersection(password)) > 0

if length_ok and lowercase_ok and uppercase_ok and number_ok:
    print(""Password ok"")
else:
    print(""Password not ok"")

#### ITERATION 2 ####

password = ""dfshtj54aA""
lowercase_ok = len(set(string.ascii_lowercase).intersection(password)) > 0
uppercase_ok = len(set(string.ascii_uppercase).intersection(password)) > 0
number_ok = len({str(x) for x in range(0, 10)}.intersection(password)) > 0
result = ""Password ok"" if (len(password) > 7) + lowercase_ok + uppercase_ok + number_ok == 4 else ""Password not ok""
print(result)


#### ITERATION 3 aka VALLIONXD ####

password = ""dfshtjd4aDa""
lowercase_ok = any(c.islower() for c in password)
uppercase_ok = any(c.isupper() for c in password)
number_ok = any(c.isdigit() for c in password)
result = ""Password ok"" if (len(password) > 7) + lowercase_ok + uppercase_ok + number_ok == 4 else ""Password not ok""
print(result)


#### ITERATION 4 QUITE UGLY ####

password = ""dfshtjdaGa""
pwd = [ord(c) for c in password]
print(""Password ok"" if (len(pwd) > 7) and (47 < min(pwd) < 58) and (96 < max(pwd) < 123)
        and any(c.isupper() for c in password) else ""Password not ok"")
"
a15eQi3b,2048 game! (fixed),Sergey_Schcelov,C++,Thursday 18th of January 2024 02:55:24 PM CDT,"#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <ctime>

using namespace std;


int sum = 0;

int up(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[j][i] == 0 && arr[j+1][i] != 0){
                    swap(arr[j][i], arr[j+1][i]);
                }
            }
        }
    }
    for (int j = 0; j < 4; j++) {
        for (int i = 0; i < 3; ++i) {
            if (arr[i][j] == arr[i+1][j]) {
                arr[i][j] += arr[i+1][j];
                sum += arr[i][j];
                arr[i+1][j] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[j][i] == 0 && arr[j+1][i] != 0){
                    swap(arr[j][i], arr[j+1][i]);
                }
            }
        }
    }
}

int down(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[j][i] == 0 && arr[j-1][i] != 0){
                    swap(arr[j][i], arr[j-1][i]);
                }
            }
        }
    }
    for (int j = 0; j < 4; j++) {
        for (int i = 3; i > 0; --i) {
            if (arr[i][j] == arr[i-1][j]) {
                arr[i][j] += arr[i-1][j];
                sum += arr[i][j];
                arr[i-1][j] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[j][i] == 0 && arr[j-1][i] != 0){
                    swap(arr[j][i], arr[j-1][i]);
                }
            }
        }
    }
}

int left(vector<vector<int>>& arr){
    cout << ""PROVERKA\n"";
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[i][j] == 0 && arr[i][j+1] != 0){
                    cout << arr[i][j] << ' ' << arr[i][j+1] << ' ' << i << ' ' << j << ""\n   "";
                    swap(arr[i][j], arr[i][j+1]);
                }
            }
        }
    }
    cout << '\n';
    for (int j = 0; j < 4; j++) {
        for (int i = 0; i < 3; ++i) {
            if (arr[j][i] == arr[j][i+1]) {
                arr[j][i] += arr[j][i + 1];
                sum += arr[j][i];
                arr[j][i + 1] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[i][j] == 0 && arr[i][j+1] != 0){
                    swap(arr[i][j], arr[i][j+1]);
                }
            }
        }
    }
}

int right(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[i][j] == 0 && arr[i][j-1] != 0){
                    swap(arr[i][j], arr[i][j-1]);
                }
            }
        }
    }
    for (int j = 0; j < 4; j++) {
        for (int i = 3; i > 0; --i) {
            if (arr[j][i] == arr[j][i-1]) {
                arr[j][i] += arr[j][i - 1];
                sum += arr[j][i];
                arr[j][i - 1] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[i][j] == 0 && arr[i][j-1] != 0){
                    swap(arr[i][j], arr[i][j-1]);
                }
            }
        }
    }
}

int do_we_have_free_place(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (arr[i][j] == 0)
                return true;
        }
    }
    return false;
}

int is_not_finish(vector<vector<int>>& arr){
    for (int i = 0; i < 3; ++i) {
        if (arr[0][i] == arr[0][i+1])
            return true;
        if (arr[i][0] == arr[i+1][0])
            return true;
        if (arr[2-i][0] == arr[3-i][0])
            return true;
        if (arr[0][2-i] == arr[0][3-i])
            return true;
    }
    for (int i = 1; i < 3; ++i) {
        for (int j = 1; j < 3; ++j) {
            if (arr[i][j] == arr[i-1][j])
                return true;
            if (arr[i][j] == arr[i+1][j])
                return true;
            if (arr[i][j] == arr[i][j-1])
                return true;
            if (arr[i][j] == arr[i][j+1])
                return true;
        }
    }
    if (do_we_have_free_place(arr))
        return true;
    return false;
}

int getRandomNumber(int min, int max)
{
    static const double fraction = 1.0 / (static_cast<double>(RAND_MAX) + 1.0);
    return static_cast<int>(rand() * fraction * (max - min + 1) + min);
}

int random_2_or_4(){
    int returner = getRandomNumber(1,2);
    if (returner == 1)
        returner = 4;
    return returner;
}
void poyavlenie(vector<vector<int>>& arr){
    int sum_free = 0;
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (arr[i][j] == 0)
                sum_free++;
        }
    }
    int random_number = getRandomNumber(0,sum_free);
    int nulls = 0;
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (arr[i][j] == 0)
                nulls++;
            if (nulls == random_number){
                arr[i][j] = random_2_or_4();
                return;
            }
        }
    }
}

int main() {
    srand(static_cast<unsigned int>(time(0)));
    cout << ""Welcome to 2048 game!"" << ""\n"" << ""If you want to know the rules of the game then write 'rules' or write anything else."" << ""\n"";
    string begin;
    cin >> begin;
    if (begin == ""rules"" || begin == ""Rules"" || begin == ""RULES"")
        cout << ""Basically, 2048 game presents with a 4×4 grid. When you start the game, there will be two “tiles” on the grid, each displaying the number 2 or 4.\n You hit the arrow keys (or W,A,S,D) on your keyboard to move the tiles around — and also to generate new tiles, which will also be valued at 2 or 4.\n"";
    cout << ""Write anything when you are ready.\n"";
    string anything;
    cin >> anything;
    cout << ""Management:\nUp - w or W\nDown - s or S\nRight - d or D\nLeft - a or A\nLet's gooooooooooooooo!!!\n"";
    vector<vector<int>> tablo(4,{0,0,0,0});
    poyavlenie(tablo);
    poyavlenie(tablo);
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            cout << tablo[i][j] << "" "";
        }
        cout << ""\n"";
    }

    while (is_not_finish(tablo)){
        string xod;
        cin >> xod;
        if (xod == ""W"" || xod == ""w"")
            up(tablo);
        else if (xod == ""D"" || xod == ""d"")
            right(tablo);
        else if (xod == ""A"" || xod == ""a"")
            left(tablo);
        else if (xod == ""S"" || xod == ""s"")
            down(tablo);
        else{
            cout << ""Please, enter normal keys.\n"";
            continue;
        }
        poyavlenie(tablo);

        for (int i = 0; i < 4; ++i) {
            for (int j = 0; j < 4; ++j) {
                cout << tablo[i][j] << "" "";
            }
            cout << ""\n"";
        }
        cout << ""Score: "" << sum << ""\n"";
    }
    cout << ""Good game, Well play!)))"";
}"
LdskszKW,Ultimate Beneficial Owner,wooptoo,Python,Thursday 18th of January 2024 02:54:13 PM CDT,"""""""
* Every company has a shareholding structure (a.k.a. beneficial owners).
* Beneficial owner can be either a individual person or another company.
* Beneficial owner is characterized by % percentage in ownership.
* Shareholding structures can be multi-layered (see examples below)
* Ownership is transitive, so if person X owns 100% of company A which
  owns 100% of company B, then, effectively, person X owns 100% of company B
* Your goal is to write code that finds all ultimate (direct & indirect)
  individual beneficial owners of a company & calculates their percentages of ownership.

---------------------------------------
Example 1:
- Input (beneficial owners):
           C
        /      \
     I1(40%)  I2(60%)

- Output (ultimate beneficial owners):
  I1 (40%), I2 (60%)
---------------------------------------
Example 2:
- Input (beneficial owners):
           C
        /      \
     C1(50%)  I1(50%)
     /    \
 I2(50%)  I3(50%)

- Output (ultimate beneficial owners):
  I1 (50%), I2 (25%), I3 (25%)
---------------------------------------
Example 3:
- Input (beneficial owners):
               C
            /      \
        C1(50%)  I1(50%)
        /    \
    C2(40%)  I1(60%)
    /     \
I2(10%) I3(90%)

- Output (ultimate beneficial owners):
  I1 (80%), I2 (2%), I3 (18%)
---------------------------------------
""""""


# Direct beneficial owner (aka shareholder) of a company.
# In case of corporate owner, ""registration_number"" field contains company identifier.
# In case of individual owner, ""registration_number"" is None.
# Ownership is a float [0, 1]
BeneficialOwner = tuple[
    str, str | None, float
]  # (name, registration_number, ownership)


# Ultimate beneficial owner of a company. Always an individual.
# Ownership is a float [0, 1]
UltimateBeneficialOwner = tuple[str, float]  # (name, ownership)


class BusinessRegisterClient:
    """"""
    A client that contains business register integration implementation.
    It has a method ""get_beneficial_owners()"" that returns a list of direct owners
    of a given company based on its registration number.
    """"""

    def get_beneficial_owners(
        self, registration_number: str
    ) -> list[BeneficialOwner]:
        # 3rd party API call
        # ASSUME IT'S ALREADY IMPLEMENTED
        ...


class UBOCalculator:
    """"""
    A class that finds a set of ultimate beneficial owners of a given company.
    """"""

    def __init__(self, br_client: BusinessRegisterClient):
        self.br_client = br_client

    def get_ultimate_beneficial_owners(
        self, registration_number: str
    ) -> set[UltimateBeneficialOwner]:
        # YOUR CODE GOES HERE
        ...
"
kJywKh38,shell_gpt-warp-issue,pastywhiteacct,Bash,Thursday 18th of January 2024 02:15:16 PM CDT,"# Shell-GPT integration ZSH v0.1
_sgpt_zsh() {
if [[ -n ""$BUFFER"" ]]; then
    _sgpt_prev_cmd=$BUFFER
    BUFFER+=""X ""
    zle -I && zle redisplay
    BUFFER=$(sgpt --shell <<< ""$_sgpt_prev_cmd"")
    zle end-of-line
fi
}
zle -N _sgpt_zsh
bindkey '^l' _sgpt_zsh
# Shell-GPT integration ZSH v0.1"
v6dK5qb3,sql-like.sql,Talilo,MySQL,Thursday 18th of January 2024 01:47:42 PM CDT,"-- https://learnsql.com.br/blog/como-usar-um-coringa-sql/
-- create
CREATE TABLE Tarefas (
  Id INTEGER PRIMARY KEY AUTO_INCREMENT,
  titulo TEXT NOT NULL,
  texto TEXT NOT NULL
);

-- insert
INSERT INTO Tarefas VALUES ( 0,'Cursps', 'fazer curso de hardware');
INSERT INTO Tarefas VALUES ( 0,'Cursos', 'fazer curso de SO');

-- fetch 
SELECT * FROM Tarefas where texto like ""%so"";
"
uQ79FXF1,Python Chat-GPT_Alexa v2,Manu-J,Python,Thursday 18th of January 2024 01:47:10 PM CDT,"import speech_recognition as sr
import pyttsx3
import pywhatkit
import datetime
import re
import webbrowser
import urllib.parse
import requests

listener = sr.Recognizer()
engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[2].id)

def talk(text):
    """"""Fonction pour faire parler l'assistant""""""
    engine.say(text)
    engine.runAndWait()

def take_command():
    """"""Fonction pour enregistrer la commande vocale""""""
    try:
        with sr.Microphone() as source:
            print('En écoute...')
            voice = listener.listen(source)
            # Reconnaissance vocale avec le modèle français
            command = listener.recognize_google(voice, language='fr-FR')
            command = command.lower()
            print(f'Commande reconnue : {command}')
            # Remplacement de ""alexa"" par une chaîne vide
            if 'alexa' in command:
                command = command.replace('alexa', '')
                print(f'Modification de la commande : {command}')
    except sr.UnknownValueError:
        print(""La reconnaissance vocale n'a pas pu comprendre l'audio."")
        return """"
    except sr.RequestError as e:
        print(f""Erreur lors de la requête à l'API de reconnaissance vocale : {e}"")
        return """"
    return command

def get_ip_address():
    """"""Fonction pour obtenir l'adresse IP à partir de l'API ipify""""""
    try:
        response = requests.get('https://api.ipify.org?format=json')
        data = response.json()
        ip_address = data.get('ip', 'Impossible de récupérer l\'adresse IP')
        return ip_address
    except Exception as e:
        print(f'Erreur lors de la récupération de l\'adresse IP : {e}')
        return 'Erreur'

def run_alexa():
    """"""Fonction principale de l'assistant""""""
    while True:
        command = take_command()
        if 'stop' in command:
            talk('Arrêt de l\'assistant. Au revoir !')
            break
        elif command:
            print(f'Traitement de la commande : {command}')
            if 'joue' in command:
                song = command.replace('joue', '')
                talk(f'En train de jouer {song}')
                pywhatkit.playonyt(song)
            elif 'heure' in command:
                time = datetime.datetime.now().strftime('%H:%M')
                talk(f'Il est actuellement {time}')
            elif 'calcul' in command:
                # Utilisation d'une expression régulière pour extraire les chiffres et l'opérateur
                match = re.search(r'\d+(\.\d+)?\s*([\+\-\*/x])\s*\d+(\.\d+)?', command)
                if match:
                    num1 = float(match.group(0).split(match.group(2))[0])
                    num2 = float(match.group(0).split(match.group(2))[1])
                    operator = match.group(2)

                    # Logique du calcul en fonction de l'opérateur
                    if operator in ['+', 'plus']:
                        result = num1 + num2
                    elif operator in ['-', 'moins']:
                        result = num1 - num2
                    elif operator in ['*', 'x', 'fois']:
                        result = num1 * num2
                    elif operator in ['/', 'divisé par']:
                        if num2 != 0:
                            result = num1 / num2
                        else:
                            talk('Division par zéro. Impossible de calculer.')
                            continue

                    # Vérifier si le résultat est un nombre entier
                    if result.is_integer():
                        result = int(result)

                    talk(f'Le résultat est {result}')
                else:
                    talk('Je n\'ai pas compris la commande de calcul.')
            elif 'recherche sur google' in command or 'cherche sur google' in command:
                # Extraire la partie de la commande après ""recherche google sur"" ou ""cherche sur google""
                search_query = re.sub(r'(recherche|cherche) sur google', '', command, flags=re.IGNORECASE).strip()
                if search_query:
                    # Formater la requête correctement avant de l'ajouter à l'URL
                    formatted_query = urllib.parse.quote(search_query)
                    url = f'https://www.google.com/search?q={formatted_query}'
                    webbrowser.open(url)
                    talk(f'Voici les résultats de la recherche Google pour {search_query}.')
                else:
                    talk('Je n\'ai pas compris la requête de recherche Google.')
            elif 'adresse ip' in command:
                # Appel à l'API pour obtenir l'adresse IP
                ip_address = get_ip_address()
                talk(f'Votre adresse IP est {ip_address}')
                print(f'Adresse IP : {ip_address}')
            else:
                talk('Commande non reconnue. Veuillez réessayer.')

if __name__ == ""__main__"":
    run_alexa()
"
MrxREvCR,Sort Frames by Audio Level,MD-Wade,Python,Thursday 18th of January 2024 01:02:14 PM CDT,"import tkinter as tk
from tkinter import filedialog

import numpy as np
from moviepy.video.compositing.concatenate import concatenate_videoclips
from moviepy.video.io.VideoFileClip import VideoFileClip


def browse_for_video_file():
    root = tk.Tk()
    root.withdraw()
    return filedialog.askopenfilename()

video = VideoFileClip(browse_for_video_file())

def calculate_audio_level(frame_audio):
    return np.mean(np.sqrt((frame_audio**2).sum(axis=1)))

frames_audio_levels = []
for frame_time in np.arange(0, video.duration, 1.0 / video.fps):
    frame = video.get_frame(frame_time)
    frame_audio_segment = video.audio.subclip(frame_time, frame_time + 1.0 / video.fps).to_soundarray(fps=22050)
    audio_level = calculate_audio_level(frame_audio_segment)
    frames_audio_levels.append((frame, audio_level, frame_time))
    print(f""Frame time: {frame_time}, audio level: {audio_level}"")

frames_audio_levels.sort(key=lambda x: x[1])

new_clips = []
for i, (_, _, frame_time) in enumerate(frames_audio_levels):
    if i != len(frames_audio_levels) - 2:
        clip = video.subclip(frame_time, frame_time + 1.0 / video.fps).set_start(i * 1.0 / video.fps)
        new_clips.append(clip)
        print(f""Processed clip {i+1}/{len(frames_audio_levels)}"")

final_clip = concatenate_videoclips(new_clips)
final_clip.write_videofile(""rearranged_video.mp4"")"
VknNMfXe,PATR Tunel,varli_ketanpl,C++,Thursday 18th of January 2024 12:43:22 PM CDT,"#include <LiquidCrystal.h>
#include <Arduino_FreeRTOS.h>
#include <semphr.h>
#include ""timers.h""

#define IN1 30
#define IN2 32

#define OUT1 40
#define OUT2 42

#define MAX 3

#define LED 24
#define BUTTON 26

#define SMOKEPIN 22

LiquidCrystal lcd(12, 11, 9, 8, 7, 6);

int carIn[] = { IN1, IN2 };
int carOut[] = { OUT1, OUT2 };

int carCount = 0;

bool full = false;
bool fire = false;
bool panick = false;
bool stopped = false;

void onEntrance(int* entrance);
void onExit(int* exit);

void printCarCount();
void printError();

void check(int* temp);

void panickEvent(int* temp);

void fireEvent(int* temp);

void setup() {
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.noCursor();

  for (int i = 0; i < 2; i++) {
    pinMode(carIn[i], INPUT);
    pinMode(carOut[i], INPUT);
  }

  pinMode(LED, OUTPUT);
  pinMode(BUTTON, INPUT);

  lcd.setCursor(0, 0);
  lcd.print(""Car count:"");
  printCarCount();

  xTaskCreate(onEntrance, ""intrare1"", 128, &carIn[0], 1, NULL);
  xTaskCreate(onEntrance, ""intrare2"", 128, &carIn[1], 1, NULL);

  xTaskCreate(onExit, ""iesire1"", 128, &carOut[0], 1, NULL);
  xTaskCreate(onExit, ""iesire2"", 128, &carOut[1], 1, NULL);

  xTaskCreate(check, ""check"", 128, NULL, 1, NULL);

  xTaskCreate(panickEvent, ""panick"", 128, NULL, 1, NULL);
  xTaskCreate(fireEvent, ""fire"", 128, NULL, 1, NULL);
}

void loop() {
}

void onEntrance(int* entrance) {
  while (true) {
    int sensorData = digitalRead(*entrance);

    if (digitalRead(*entrance) == HIGH) {
      if (!stopped) {
        while (digitalRead(*entrance) == HIGH) {}
        carCount++;
        Serial.println(""Am intrat"");
        if (carCount == MAX) {
          full = true;
          digitalWrite(LED, HIGH);
        }

        printCarCount();
      } else {
        printError();
        delay(1000);
        printCarCount();
      }
    }
  }
}

void printError() {
  lcd.clear();
  lcd.setCursor(0, 0);

  if (full) {
    lcd.print(""Tunel plin!"");
    Serial.println(""Tunel plin!"");
  } else if (panick) {
    lcd.print(""Mod de panica activat!"");
    lcd.setCursor(0, 1);
    lcd.print(""Nu se intra!"");
    Serial.println(""Mod de panica activat! Nu se intra in tunel!"");
  } else {
    lcd.print(""Foc detectat!"");
    lcd.setCursor(0, 1);
    lcd.print(""Nu se intra!"");
    Serial.println(""Foc detectat! Nu se intra!"");
  }
}

void onExit(int* exit) {
  while (true) {
    if (digitalRead(*exit) == HIGH) {
      while (digitalRead(*exit) == HIGH) {}
      carCount--;
      Serial.println(""Am iesit"");
      if (carCount < MAX && full) {
        digitalWrite(LED, LOW);
        full = false;
      }

      printCarCount();
    }
  }
}

void printCarCount() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(""Numar masini:"");
  lcd.setCursor(0, 1);
  lcd.print(carCount);
  Serial.print(""Numar masini: "");
  Serial.println(carCount);
}

void check(int* temp) {
  while (true) {
    stopped = full | fire | panick;
    delay(100);
  }
}

void panickEvent(int* temp) {
  while (true) {
    int x = digitalRead(BUTTON);

    if (x == HIGH) {
      panick = true;

      digitalWrite(LED, HIGH);

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(""Buton de panica"");
      lcd.setCursor(0, 1);
      lcd.print(""apasat!"");
      delay(2000);
      printCarCount();
      Serial.println(""Buton de panica apasat!"");
    }
  }
}

void fireEvent(int* temp) {
  while (true) {
    int x = digitalRead(SMOKEPIN);

    if (x == LOW) {
      fire = true;

      digitalWrite(LED, HIGH);

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(""Foc detectat!"");
      delay(2000);
      printCarCount();
    }
  }
}"
D2PAN5Jv,Adobe Stopper - Powershell command,atuburapaler,PowerShell,Thursday 18th of January 2024 12:25:02 PM CDT,"# Stop adobe services
Get-Service -DisplayName Adobe* | Stop-Service -Force -Confirm:$false

# Stop adobe processes
$Processes = Get-Process * | Where-Object { $_.CompanyName -match ""Adobe"" -or $_.Path -match ""Adobe"" }

Foreach ($Process in $Processes) {
    Stop-Process $Process -Force -ErrorAction SilentlyContinue
}"
bxkJRDj1,05.Journey,IvanITD,C#,Thursday 18th of January 2024 12:24:20 PM CDT,"double budget = double.Parse(Console.ReadLine());
string twoSeason = Console.ReadLine();

string destination = """";
string vacationType = """";
double percentFromBudget = 0.00;

if (twoSeason == ""summer"")
{
    if (budget <= 100)
    {
        destination = ""Bulgaria"";
        vacationType = ""Camp"";
        percentFromBudget = budget - (budget * 0.30);
    }
    else if (budget <= 1000)
    {
        destination = ""Balkans"";
        vacationType = ""Camp"";
        percentFromBudget = budget - (budget * 0.40);
    }
    else if (budget > 1000)
    {
        destination = ""Europe"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.90);
    }
}
else if (twoSeason == ""winter"")
{
    if (budget <= 100)
    {
        destination = ""Bulgaria"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.70);
    }
    else if (budget <= 1000)
    {
        destination = ""Balkans"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.80);
    }
    else if (budget > 1000)
    {
        destination = ""Europe"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.90);
    }
}

Console.WriteLine($""Somewhere in {destination} \n{vacationType} - {budget - percentFromBudget:F2}"");"
AhY7qgKj,04.FishingBoat,IvanITD,C#,Thursday 18th of January 2024 12:22:06 PM CDT,"int groupBudget = int.Parse(Console.ReadLine());
string season = Console.ReadLine();
int fishersAmount = int.Parse(Console.ReadLine());

double rentPrice = 0.00;

if (season == ""Spring"")
{
    rentPrice = 3000;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }

    if (fishersAmount % 2 == 0)
    {
        rentPrice -= (rentPrice * 0.05);
    }
}
else if (season == ""Summer"")
{
    rentPrice = 4200;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }

    if (fishersAmount % 2 == 0)
    {
        rentPrice -= (rentPrice * 0.05);
    }
}
else if (season == ""Autumn"")
{
    rentPrice = 4200;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }
}
else if (season == ""Winter"")
{
    rentPrice = 2600;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }

    if (fishersAmount % 2 == 0)
    {
        rentPrice -= (rentPrice * 0.05);
    }
}

if (groupBudget >= rentPrice)
{
    Console.WriteLine($""Yes! You have {groupBudget - rentPrice:F2} leva left."");
}
else if (groupBudget < rentPrice)
{
    Console.WriteLine($""Not enough money! You need {rentPrice - groupBudget:F2} leva."");
}

"
vmCxYBbL,Untitled,TakePen,AutoIt,Thursday 18th of January 2024 12:21:22 PM CDT,"[Dein Name]
[Deine Adresse]
[PLZ, Ort]
[E-Mail-Adresse]
[Telefonnummer]
[Datum]

Hannoversche Lebensversicherung AG
Service Center Leben
Postfach 21 21
30021 Hannover

Betreff: Auskunftsersuchen gemäß Art. 15 DSGVO

Sehr geehrte Damen und Herren,

ich hoffe, diese Anfrage erreicht Sie wohlauf. Ich, [Dein Name], habe kürzlich einen Brief von Ihrer Versicherung erhalten, der sich auf meine Person bezieht. Nach eingehender Prüfung des Schreibens ist mir jedoch nicht klar, aufgrund welcher Informationen Sie meine personenbezogenen Daten verarbeiten, da ich zuvor keinen Kontakt zu Ihrer Gesellschaft hatte.

Gemäß Art. 15 der Datenschutz-Grundverordnung (DSGVO) bitte ich Sie hiermit um umfassende Auskunft über die Verarbeitung meiner personenbezogenen Daten durch die Hannoversche Lebensversicherung AG. Insbesondere interessieren mich folgende Informationen:

    Die Zwecke der Verarbeitung meiner personenbezogenen Daten.
    Die Kategorien der verarbeiteten personenbezogenen Daten.
    Die Empfänger oder Kategorien von Empfängern, denen meine Daten offengelegt wurden oder noch offengelegt werden.
    Die geplante Dauer, für die meine personenbezogenen Daten gespeichert werden, oder, falls dies nicht möglich ist, die Kriterien für die Festlegung dieser Dauer.
    Das Bestehen eines Rechts auf Berichtigung oder Löschung meiner personenbezogenen Daten, eines Rechts auf Einschränkung der Verarbeitung durch den Verantwortlichen oder eines Widerspruchsrechts gegen diese Verarbeitung.
    Das Bestehen eines Beschwerderechts bei einer Aufsichtsbehörde.
    Informationen über die Herkunft der Daten, sofern diese nicht bei mir erhoben wurden.
    Das Bestehen einer automatisierten Entscheidungsfindung einschließlich Profiling gemäß Artikel 22 Absätze 1 und 4 DSGVO und – zumindest in diesen Fällen – aussagekräftige Informationen über die involvierte Logik sowie die Tragweite und die angestrebten Auswirkungen einer derartigen Verarbeitung für mich.

Ich bitte um schriftliche Mitteilung der oben genannten Informationen gemäß Art. 15 DSGVO innerhalb von 30 Tagen ab Erhalt dieses Schreibens. Sollten Sie nicht in der Lage sein, innerhalb dieser Frist zu antworten, bitte ich um unverzügliche Benachrichtigung unter Angabe der Gründe für die Verzögerung.

Bitte senden Sie die angeforderten Informationen an die oben angegebene Adresse oder, sofern elektronische Übermittlung möglich ist, an meine E-Mail-Adresse [Deine E-Mail-Adresse].

Vielen Dank für Ihr Verständnis und Ihre prompte Erledigung.

Mit freundlichen Grüßen,

[Deine Unterschrift (bei postalischer Übermittlung)]
[Dein Name]"
