id,title,username,language,date,content
h4MGbDGp,2024-05-30_stats.json,rdp_snitch,JSON,Thursday 30th of May 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""213.109.202.237"": 8,
    ""143.64.232.76"": 2,
    ""43.226.53.56"": 5,
    ""116.140.196.215"": 1,
    ""112.116.111.230"": 9,
    ""180.136.3.186"": 10,
    ""194.165.16.37"": 2,
    ""47.100.38.137"": 1,
    ""140.246.215.173"": 2,
    ""122.227.146.74"": 6,
    ""165.154.174.118"": 1,
    ""106.58.215.193"": 3,
    ""45.227.254.54"": 2,
    ""97.91.36.242"": 5,
    ""106.58.219.212"": 3,
    ""221.229.220.51"": 3,
    ""106.58.166.180"": 2,
    ""117.16.46.253"": 2,
    ""14.18.41.26"": 4,
    ""111.10.209.99"": 2,
    ""106.58.215.45"": 1,
    ""51.89.9.215"": 2,
    ""150.223.13.195"": 3,
    ""119.167.77.62"": 4,
    ""134.119.207.154"": 3,
    ""218.65.17.106"": 1,
    ""45.227.254.55"": 4,
    ""114.217.18.245"": 3,
    ""117.50.120.247"": 1,
    ""14.29.142.134"": 5,
    ""218.78.58.53"": 3,
    ""150.223.35.239"": 2,
    ""198.235.24.196"": 3,
    ""140.246.175.203"": 1,
    ""110.166.228.174"": 1,
    ""91.188.254.92"": 1,
    ""106.124.138.26"": 2,
    ""36.111.146.78"": 1,
    ""124.67.254.109"": 9,
    ""47.100.73.108"": 1,
    ""113.31.112.144"": 2,
    ""121.224.73.44"": 2,
    ""64.124.50.139"": 2,
    ""49.84.226.2"": 1,
    ""43.133.3.182"": 2,
    ""154.221.24.152"": 2,
    ""185.234.216.88"": 1,
    ""117.23.59.141"": 3,
    ""36.91.222.100"": 1,
    ""114.98.234.88"": 1,
    ""40.69.171.134"": 2,
    ""117.41.184.60"": 2,
    ""198.44.167.61"": 3,
    ""185.170.144.3"": 2,
    ""203.56.4.242"": 2,
    ""212.70.149.142"": 3,
    ""113.31.124.58"": 4,
    ""187.157.89.218"": 1,
    ""103.126.57.31"": 1,
    ""205.210.31.74"": 3,
    ""182.42.62.22"": 1,
    ""103.150.221.141"": 1,
    ""43.136.114.87"": 3,
    ""119.91.202.62"": 5,
    ""121.5.74.35"": 2,
    ""124.221.91.229"": 1,
    ""115.159.220.179"": 1,
    ""101.43.225.162"": 2,
    ""183.6.165.166"": 2,
    ""47.116.4.18"": 1,
    ""164.92.104.215"": 5,
    ""43.139.2.185"": 2,
    ""150.223.46.21"": 1,
    ""118.122.196.39"": 1,
    ""43.133.56.30"": 1,
    ""167.71.201.183"": 1,
    ""101.34.80.30"": 2,
    ""111.231.15.224"": 3,
    ""194.165.16.78"": 2,
    ""165.154.164.114"": 1,
    ""49.235.107.203"": 2,
    ""172.81.216.105"": 1,
    ""111.229.29.185"": 1,
    ""158.51.14.114"": 2,
    ""111.229.184.65"": 2,
    ""198.235.24.134"": 3,
    ""47.180.107.12"": 2,
    ""203.33.207.66"": 4,
    ""34.72.251.13"": 1,
    ""119.91.140.249"": 2,
    ""175.178.29.124"": 1,
    ""45.227.254.8"": 2,
    ""14.29.228.234"": 2,
    ""188.166.240.185"": 1,
    ""106.58.164.84"": 1,
    ""45.156.129.22"": 6,
    ""80.94.95.239"": 3,
    ""128.199.141.142"": 3,
    ""152.42.249.196"": 1,
    ""43.137.35.202"": 1,
    ""213.109.202.232"": 3,
    ""106.55.54.44"": 1,
    ""103.75.182.179"": 1,
    ""103.119.3.55"": 1,
    ""120.71.181.192"": 1,
    ""106.225.199.92"": 2,
    ""222.219.129.74"": 1,
    ""222.219.134.171"": 1,
    ""111.173.116.188"": 1,
    ""178.236.247.219"": 3,
    ""80.94.95.237"": 1,
    ""198.235.24.81"": 3,
    ""116.182.20.8"": 1,
    ""61.171.106.140"": 1,
    ""2.57.149.92"": 1,
    ""13.70.153.24"": 1,
    ""117.41.166.127"": 1
  },
  ""asn"": {
    ""AS208312"": 12,
    ""AS58593"": 2,
    ""AS134762"": 5,
    ""AS4837"": 14,
    ""AS4134"": 58,
    ""AS48721"": 4,
    ""AS37963"": 3,
    ""AS58519"": 17,
    ""AS135377"": 2,
    ""AS267784"": 8,
    ""AS20115"": 5,
    ""AS18031"": 2,
    ""AS58466"": 4,
    ""AS9808"": 2,
    ""AS16276"": 2,
    ""AS29066"": 3,
    ""AS23724"": 1,
    ""AS4812"": 4,
    ""AS396982"": 13,
    ""AS140061"": 1,
    ""AS15440"": 1,
    ""AS137695"": 3,
    ""AS17621"": 6,
    ""AS6461"": 2,
    ""AS132203"": 3,
    ""AS142403"": 2,
    ""AS57523"": 1,
    ""AS134768"": 3,
    ""AS7713"": 1,
    ""AS8075"": 3,
    ""AS134238"": 5,
    ""AS142032"": 3,
    ""AS197414"": 2,
    ""AS204428"": 7,
    ""AS8151"": 1,
    ""AS138107"": 1,
    ""AS140599"": 1,
    ""AS45090"": 32,
    ""AS14061"": 11,
    ""AS398465"": 2,
    ""AS5650"": 2,
    ""AS211680"": 6,
    ""AS151858"": 1,
    ""AS138968"": 1,
    ""AS148981"": 1,
    ""AS210644"": 3,
    ""AS137539"": 1
  },
  ""isp"": {
    ""Red Byte LLC"": 12,
    ""Shanghai Blue Cloud Technology Co., Ltd"": 2,
    ""CHINANET Liaoning province Dalian MAN network"": 5,
    ""China Unicom CHINA169 Network"": 2,
    ""Chinanet"": 58,
    ""Flyservers S.A."": 12,
    ""Addresses CNNIC"": 2,
    ""Cloud Computing Corporation"": 17,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Charter Communications"": 5,
    ""Sangmyung University"": 2,
    ""China Telecom"": 6,
    ""China Mobile communications corporation"": 2,
    ""OVH SAS"": 2,
    ""CNC Group CHINA169 Shandong Province Network"": 4,
    ""velia.net Internetdienste GmbH"": 3,
    ""UCLOUD"": 7,
    ""China Telecom (Group)"": 4,
    ""Google LLC"": 13,
    ""UAB \""Baltnetos komunikacijos\"""": 1,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 3,
    ""CNC Group CHINA169 Neimeng Province Network"": 9,
    ""Zayo Bandwidth"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 24,
    ""Guangzhou Yisu Cloud Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""CHINANET SHAANXI province Cloud Base network"": 3,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Microsoft Corporation"": 3,
    ""CHINANET Jiangx province IDC network"": 5,
    ""High Family Technology Co., Limited"": 3,
    ""Xhost Internet Solutions LP"": 2,
    ""SS-Net"": 7,
    ""Uninet S.A. de C.V."": 1,
    ""PT Virtual Data Centra Indonesia"": 1,
    ""Comfac Corporation"": 1,
    ""China Internet Network Information Center"": 11,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 1,
    ""DigitalOcean, LLC"": 11,
    ""Aceville Pte.ltd"": 1,
    ""Rackdog, LLC"": 2,
    ""Frontier Communications Solutions"": 2,
    ""NSEC - Sistemas Informaticos, S.A."": 6,
    ""BQT"": 1,
    ""FAST"": 3
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 13,
    ""Microsoft Azure Cloud (chinanorth3)"": 2,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 5,
    ""China United Network Communications Corporation Limited"": 1,
    ""Chinanet YN"": 21,
    ""Chinanet GX"": 10,
    ""Flyservers S.A"": 4,
    ""Aliyun Computing Co., LTD"": 2,
    ""Chinanet SD"": 10,
    ""Ningbo chaoji mamawangluojishu ltd"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""UAB Host Baltic"": 8,
    ""Spectrum"": 5,
    ""Chinanet JS"": 9,
    ""Korean Education Network"": 2,
    ""Chinanet GD"": 15,
    ""China Mobile"": 2,
    ""OVH GmbH"": 2,
    ""Unknown"": 19,
    ""Eijaj Hussain Shaikhnag"": 3,
    ""Chinanet JX"": 6,
    ""Shanghai UCloud Information Technology Company Limited"": 7,
    ""Chinanet SH"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Chinanet QH"": 1,
    ""Space Hosting"": 1,
    ""Chinanet ZJ"": 1,
    ""Microsoft Corporation"": 2,
    ""Tencent Cloud Computing"": 2,
    ""Ancent Group Limited"": 2,
    ""Chinanet SN"": 3,
    ""Telekomunikasi Indonesia"": 1,
    ""Chinanet AH"": 1,
    ""Microsoft Azure Cloud (centralus)"": 2,
    ""VpsQuan L.L.C"": 3,
    ""Xhostis"": 2,
    ""Chinanet FJ"": 6,
    ""4Media Ltd"": 3,
    ""Uninet S.A. de C.V."": 1,
    ""PT Virtual Data Centra Indonesia"": 1,
    ""Comfac Corporation"": 1,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 11,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 20,
    ""Alibaba.com LLC"": 1,
    ""DigitalOcean, LLC"": 10,
    ""Chinanet SC"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""AB E-Commerce, LLC"": 2,
    ""FTR3 FiberOptic-S Westminster CA"": 2,
    ""Google Cloud (us-central1)"": 1,
    ""Golden-Bridge Netcom communication Co., LTD."": 1,
    ""Digitalocean"": 1,
    ""Inap CHI"": 6,
    ""Unmanaged LTD"": 4,
    ""Sakura Network Limited"": 1,
    ""Chinanet XJ"": 1,
    ""Chinanet HB"": 1,
    ""Microsoft Azure Cloud (australiasoutheast)"": 1
  },
  ""regionName"": {
    ""Moscow"": 12,
    ""Hebei"": 2,
    ""Guangdong"": 36,
    ""Beijing"": 25,
    ""Yunnan"": 21,
    ""Guangxi"": 10,
    ""Kaunas"": 4,
    ""Shanghai"": 12,
    ""Shandong"": 14,
    ""Zhejiang"": 7,
    ""England"": 3,
    ""Vilnius"": 9,
    ""Michigan"": 5,
    ""Jiangsu"": 6,
    ""Seoul"": 2,
    ""Grand Est"": 3,
    ""Jiangxi"": 6,
    ""California"": 19,
    ""Qinghai"": 1,
    ""Inner Mongolia"": 9,
    ""Washington"": 2,
    ""Tokyo"": 3,
    ""Eastern"": 2,
    ""Shanxi"": 3,
    ""Jakarta"": 2,
    ""Anhui"": 1,
    ""Iowa"": 3,
    ""Kowloon"": 3,
    ""North Holland"": 2,
    ""Fujian"": 6,
    ""Plovdiv"": 3,
    ""Mexico City"": 1,
    ""Davao Region"": 1,
    ""Sichuan"": 1,
    ""North West"": 1,
    ""Texas"": 1,
    ""Hesse"": 1,
    ""Illinois"": 8,
    ""South West"": 5,
    ""Budapest"": 4,
    ""Ho Chi Minh"": 1,
    ""Xinjiang"": 1,
    ""Hubei"": 1,
    ""Mazovia"": 3,
    ""Lesser Poland"": 1,
    ""Victoria"": 1
  },
  ""country"": {
    ""Russia"": 12,
    ""China"": 162,
    ""Lithuania"": 13,
    ""United Kingdom"": 3,
    ""United States"": 38,
    ""South Korea"": 2,
    ""France"": 3,
    ""Japan"": 3,
    ""Hong Kong"": 5,
    ""Indonesia"": 2,
    ""The Netherlands"": 2,
    ""Bulgaria"": 3,
    ""Mexico"": 1,
    ""Philippines"": 1,
    ""Singapore"": 6,
    ""Germany"": 1,
    ""Hungary"": 4,
    ""Vietnam"": 1,
    ""Poland"": 4,
    ""Australia"": 1
  },
  ""account"": {
    ""Test"": 22,
    ""142.93.8.59"": 183,
    ""(empty)"": 7,
    ""UBMTEGMYu"": 1,
    ""ndoGYU"": 1,
    ""BXKzzd"": 1,
    ""hello"": 15,
    ""Administr"": 7,
    ""Almaz"": 1,
    ""LzqbHoznb"": 1,
    ""USJRtN"": 1,
    ""SQkFHa"": 1,
    ""Administrator"": 1,
    ""Domain"": 13,
    ""HQNExqODR"": 1,
    ""efHJLQ"": 1,
    ""RCRnwx"": 1,
    ""root"": 6,
    ""uXnIDQtXI"": 1,
    ""wWHttC"": 1,
    ""esFIkt"": 1
  },
  ""keyboard"": {
    ""Unknown"": 267
  },
  ""client_build"": {
    ""Unknown"": 267
  },
  ""client_name"": {
    ""Unknown"": 267
  },
  ""ip_type"": {
    ""proxy"": 17,
    ""Unknown"": 190,
    ""hosting"": 56,
    ""mobile"": 3,
    ""hosting & proxy"": 1
  }
}"
YdTt8ksN,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,rickyyyyyyy,GetText,Thursday 30th of May 2024 06:50:55 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
You can use this for as long as you want and make 1,000$ a day if you got the time!
 
This is the most up to date version of this script. Any other one posted will not work!
 
Guide and steps here:
https://drive.google.com/file/d/1ZchsGnK-2K-Mv5_6oWU7Ui5JK_vByH2N/view?usp=sharing
 
Working as of: 30 May 2024 (Updates every day)
"
39w8WBex,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Thursday 30th of May 2024 06:48:30 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
31 May 2024"
NCQ6Yhqj,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Thursday 30th of May 2024 06:05:32 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_427725.pdf

Working as of:
31 May 2024"
1rcbnsX1,lab3,kalin729,Python,Thursday 30th of May 2024 05:46:39 PM CDT,"from __future__ import print_function
import sys
import cv2 as cv

## [global_variables]
use_mask = False
img = None
templ = None
mask = None
image_window = ""Source Image""
result_window = ""Result window""

match_method = 0
max_Trackbar = 5
## [global_variables]

def main(argv):

    if (len(sys.argv) < 3):
        print('Not enough parameters')
        print('Usage:\nmatch_template_demo.py <image_name> <template_name> [<mask_name>]')
        return -1

    ## [load_image]
    global img
    global templ
    img = cv.imread(sys.argv[1], cv.IMREAD_COLOR)
    templ = cv.imread(sys.argv[2], cv.IMREAD_COLOR)

    if (len(sys.argv) > 3):
        global use_mask
        use_mask = True
        global mask
        mask = cv.imread( sys.argv[3], cv.IMREAD_COLOR )

    if ((img is None) or (templ is None) or (use_mask and (mask is None))):
        print('Can\'t read one of the images')
        return -1
    ## [load_image]

    ## [create_windows]
    cv.namedWindow( image_window, cv.WINDOW_AUTOSIZE )
    cv.namedWindow( result_window, cv.WINDOW_AUTOSIZE )
    ## [create_windows]

    ## [create_trackbar]
    trackbar_label = 'Method: \n 0: SQDIFF \n 1: SQDIFF NORMED \n 2: TM CCORR \n 3: TM CCORR NORMED \n 4: TM COEFF \n 5: TM COEFF NORMED'
    cv.createTrackbar( trackbar_label, image_window, match_method, max_Trackbar, MatchingMethod )
    ## [create_trackbar]

    MatchingMethod(match_method)

    ## [wait_key]
    cv.waitKey(0)
    return 0
    ## [wait_key]

def MatchingMethod(param):

    global match_method
    match_method = param

    ## [copy_source]
    img_display = img.copy()
    ## [copy_source]
    ## [match_template]
    method_accepts_mask = (cv.TM_SQDIFF == match_method or match_method == cv.TM_CCORR_NORMED)
    if (use_mask and method_accepts_mask):
        result = cv.matchTemplate(img, templ, match_method, None, mask)
    else:
        result = cv.matchTemplate(img, templ, match_method)
    ## [match_template]

    ## [normalize]
    cv.normalize( result, result, 0, 1, cv.NORM_MINMAX, -1 )
    ## [normalize]
    ## [best_match]
    _minVal, _maxVal, minLoc, maxLoc = cv.minMaxLoc(result, None)
    ## [best_match]

    ## [match_loc]
    if (match_method == cv.TM_SQDIFF or match_method == cv.TM_SQDIFF_NORMED):
        matchLoc = minLoc
    else:
        matchLoc = maxLoc
    ## [match_loc]

    ## [imshow]
    cv.rectangle(img_display, matchLoc, (matchLoc[0] + templ.shape[0], matchLoc[1] + templ.shape[1]), (0,0,0), 2, 8, 0 )
    cv.rectangle(result, matchLoc, (matchLoc[0] + templ.shape[0], matchLoc[1] + templ.shape[1]), (0,0,0), 2, 8, 0 )
    cv.imshow(image_window, img_display)
    cv.imshow(result_window, result)
    ## [imshow]
    pass

if __name__ == ""__main__"":
    main(sys.argv[1:])"
5e54Qsu7,Untitled,Tanski_corp,C++,Thursday 30th of May 2024 04:00:16 PM CDT,"#include <iostream> 
#include <iomanip>
#include <Windows.h>
#include <fstream>
#include<string>
using namespace std;

void str_output(string str, ofstream& Output) {
    cout << str;
    Output << str;
}

int** create_array(int n) {
    int** arr = new int* [n];

    for (int i = 0; i < n; i++) {
        arr[i] = new int[n];
    }

    return arr;
}

int** fill(int** arr, int a, int  b, int n) {
    ofstream Output(""array.txt"");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            arr[i][j] = rand() % (b - a) + a;
            Output << arr[i][j] << "" "";
        }
        Output << endl;
    }
    Output.close();
    return arr;
}

void clear(int** arr, int n) {
    for (int i = 0; i < n; i++) {
        delete[] arr[i];
    }
    delete[] arr;
}

void output(int** arr, int n, ofstream& Output) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << setw(5) << arr[i][j];
            Output << setw(5) << arr[i][j];
        }
        cout << ""\n"";
        Output << ""\n"";
    }
}

void symmetry(int** arr, int n) {
    for (int i = 0, m = n - 1; i < n; i++, m--) {
        swap(arr[i][i], arr[m][i]);
    }
}

void max_min(int** arr, int n, ofstream& Output) {
    int min = arr[0][0];
    int max = arr[0][0];
    for (int i = 0; i < n; i++) {
        if (max < arr[i][i]) max = arr[i][i];
        else if (min > arr[i][i]) min = arr[i][i];
    }
    str_output(""Максимальне значення головної діагоналі: "" + to_string(max) + ""\n"", Output);
    str_output(""Мінімальне значення головної діагоналі: "" + to_string(min) + ""\n"", Output);

    min = arr[n - 1][n - 1];
    max = arr[n - 1][n - 1];
    for (int i = n - 1, j = 0; i >= 0; i--, j++) {
        if (max < arr[j][i]) max = arr[j][i];
        else if (min > arr[j][i]) min = arr[j][i];
    }
    str_output(""Максимальне значення побічної діагоналі: "" + to_string(max) + ""\n"", Output);
    str_output(""Мінімальне значення побічної діагоналі: "" + to_string(min) + ""\n"", Output);
}

void input(int& n, int& a, int& b, ifstream& Input) {
    string temp;
    Input >> n;
    Input >> a >> b;
}

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    ifstream Input(""input.txt"");
    ofstream Output(""output.txt"");
    int n, a = 0, b = 0;
    input(n, a, b, Input);
    str_output(""Введіть розмірність матриці\n"" + to_string(n) + ""\n"", Output);
    int** arr = new int* [0];
    arr = create_array(n);
    if (a >= b) {
        str_output(""a<b"", Output);
        return 0;
    }
    str_output(""Введіть діапазон a b\n"" + to_string(a) + "" "" + to_string(b) + ""\n"", Output);
    arr = fill(arr, a, b, n);
    output(arr, n, Output);
    str_output(""--------------------------\n"", Output);
    symmetry(arr, n);
    output(arr, n, Output);
    symmetry(arr, n);
    max_min(arr, n, Output);
    clear(arr, n);
    Input.close();
    Output.close();
}
"
vd8YrEmr,Untitled,Tanski_corp,C++,Thursday 30th of May 2024 03:57:13 PM CDT,"#include <iostream> 
#include <iomanip>
#include <Windows.h>
#include <fstream>
#include<string>
using namespace std;

void str_output(string str, ofstream& Output) {
    cout << str;
    Output << str;
}

int** create_array(int n) {
    int** arr = new int* [n];

    for (int i = 0; i < n; i++) {
        arr[i] = new int[n];
    }

    return arr;
}

int** fill(int** arr, int a, int  b, int n) {
    ofstream Output(""array.txt"");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            arr[i][j] = rand() % (b - a) + a;
            Output << arr[i][j] << "" "";
        }
        Output << endl;
    }
    Output.close();
    return arr;
}

void clear(int** arr, int n) {
    for (int i = 0; i < n; i++) {
        delete[] arr[i];
    }
    delete[] arr;
}

void output(int** arr, int n, ofstream& Output) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << setw(5) << arr[i][j];
            Output << setw(5) << arr[i][j];
        }
        cout << ""\n"";
        Output << ""\n"";
    }
}

void symmetry(int** arr, int n) {
    for (int i = 0, m = n - 1; i < n; i++, m--) {
        swap(arr[i][i], arr[m][i]);
    }
}

void max_min(int** arr, int n, ofstream& Output) {
    int min = arr[0][0];
    int max = arr[0][0];
    for (int i = 0; i < n; i++) {
        if (max < arr[i][i]) max = arr[i][i];
        else if (min > arr[i][i]) min = arr[i][i];
    }
    str_output(""Максимальне значення головної діагоналі: "" + to_string(max) + ""\n"", Output);
    str_output(""Мінімальне значення головної діагоналі: "" + to_string(min) + ""\n"", Output);

    min = arr[n - 1][n - 1];
    max = arr[n - 1][n - 1];
    for (int i = n - 1, j = 0; i >= 0; i--, j++) {
        if (max < arr[j][i]) max = arr[j][i];
        else if (min > arr[j][i]) min = arr[j][i];
    }
    str_output(""Максимальне значення побічної діагоналі: "" + to_string(max) + ""\n"", Output);
    str_output(""Мінімальне значення побічної діагоналі: "" + to_string(min) + ""\n"", Output);
}

void input(int& n, int& a, int& b, ifstream& Input) {
    string temp;
    Input >> n;
    Input >> a >> b;
}

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    ifstream Input(""input.txt"");
    ofstream Output(""output.txt"");
    int n, a = 0, b = 0;
    input(n, a, b, Input);
    str_output(""Введіть розмірність матриці\n"" + to_string(n) + ""\n"", Output);
    int** arr = new int* [0];
    arr = create_array(n);
    if (a >= b) {
        str_output(""a<b"", Output);
        return 0;
    }
    str_output(""Введіть діапазон a b\n"" + to_string(a) + "" "" + to_string(b) + ""\n"", Output);
    arr = fill(arr, a, b, n);
    output(arr, n, Output);
    str_output(""--------------------------\n"", Output);
    symmetry(arr, n);
    output(arr, n, Output);
    symmetry(arr, n);
    max_min(arr, n, Output);
    clear(arr, n);
    Input.close();
    Output.close();
}"
3aUEBweY,spatrial_sample_group.py,Abhisek92,Python,Thursday 30th of May 2024 03:53:56 PM CDT,"import random
import numpy as np
import pandas as pd
import rasterio as rio
import geopandas as gpd
from sklearn.cluster import KMeans


def sample_coordinates(bool_array, n):
    true_coords = np.argwhere(bool_array)

    if len(true_coords) < n:
        return true_coords
        # raise ValueError(""Not enough True values to sample from"")

    kmeans = KMeans(n_clusters=n)
    kmeans.fit(true_coords)

    sampled_coords = list()
    for cluster_idx in range(n):
        cluster_points = true_coords[kmeans.labels_ == cluster_idx]
        sampled_point = cluster_points[random.randint(0, len(cluster_points) - 1)]
        sampled_coords.append(tuple(sampled_point))

    return np.array(sampled_coords)

def sample_raster(src_path):
    starts = [0.0001, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006, 0.0007, 0.0009, 0.001, 0.002]
    stops = starts[1:] + [np.inf]
    groups = [chr(65+i) for i in range(len(starts))]
    frames = list()
    with rio.open(src_path, 'r') as src:
        forward = np.array(src.transform).reshape((3, 3))
        img = src.read(1, masked=True)
        for a, b, g in zip(starts, stops, groups):
            mask = np.logical_and((a <= img), (img < b))
            try:
                coords = sample_coordinates(mask, 15)
            except ValueError:
                print(a, b)
            vals = img[coords[:, 0], coords[:, 1]]
            coords = np.stack([coords[:, 1], coords[:, 0]], axis=1)
            coords = np.concatenate([(coords + 0.5), np.ones((coords.shape[0], 1))], axis=1)
            coords = np.einsum(
                ""ij,kj -> ki"", forward, coords
            )
            coords[:, -1] = vals
            df = pd.DataFrame(coords, columns=[""x"", ""y"", ""Value""])
            df[""Group""] = g
            gdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.x, df.y))
            gdf = gdf.drop(columns=['x', 'y'])
            gdf.set_crs(crs=src.crs, inplace=True)
            frames.append(gdf)
    main_df = pd.concat(frames, ignore_index=True, axis=0)
    return main_df

if __name__ == ""__main__"":
    geo_df = sample_raster(""gs_10m_meanm.tif"")
    geo_df.to_file(filename=""Sampled_Points.geojson"", driver=""GeoJSON"")
"
GHMt9rdE,Untitled,Tanski_corp,C++,Thursday 30th of May 2024 03:52:22 PM CDT,"#include <fstream>
#include <iomanip>
#include <Windows.h>
#include <string>
#include <iostream>
#include <sstream>
#define N 10
using namespace std;

void input(int& n, int& a, int& b, ifstream& Input) {
    string temp;
    Input >> n;
    Input >> a >> b;
}

int main()
{
    //n
    //a b
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    int n = 0, a = 0, b = 0;
    string temp;
    ifstream Input(""input.txt"");
    ofstream Output(""output.txt"");
    ofstream Array(""array.txt"");
    input(n, a, b, Input);
    cout << ""Введіть розмірність матриці (max "" << N << ""x"" << N << "")\n"";
    Output << ""Введіть розмірність матриці (max "" << N << ""x"" << N << "")\n"";
    cout << n << endl;
    Output << n << endl;
    if (a >= b) {
        cout << ""a < b"";
        Output << ""a < b"";
        return 0;
    }
    int** arr = new int* [n];
    for (int i = 0; i < n; i++) {
        arr[i] = new int[n];
    }
    cout << ""Введіть діапазон a b\n"";
    Output << ""Введіть діапазон a b\n"";
    cout << a << "" "" << b << endl;
    Output << a << "" "" << b << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            arr[i][j] = rand() % (b - a) + a;
            cout << setw(5) << arr[i][j];
            Output << std::setw(5) << arr[i][j];
            Array << std::setw(5) << arr[i][j];
        }
        cout << ""\n"";
        Output << endl;
        Array << endl;
    }
    cout << ""--------------------------\n"";
    Output << ""--------------------------\n"";
    for (int i = 0, temp = 0; i <= n - 2; i++) {
        temp = arr[i][0];
        arr[i][0] = arr[n - 1][i + 1];
        arr[n - 1][i + 1] = temp;
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << setw(5) << arr[i][j];
            Output << setw(5) << arr[i][j];;
        }
        cout << ""\n"";
        Output << endl;
    }
    for (int i = 0; i < n; i++) {
        delete[] arr[i];
    }
    delete[] arr;
}"
7Vimk9j4,Untitled,Tanski_corp,C++,Thursday 30th of May 2024 03:51:51 PM CDT,"#include <fstream>
#include <iomanip>
#include <Windows.h>
#include <string>
#include <iostream>
#include <sstream>
#define N 10
using namespace std;

void input(int& n, int& a, int& b, ifstream& Input) {
    string temp;
    Input >> n;
    Input >> a >> b;
}

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    int n = 0, a = 0, b = 0;
    string temp;
    int arr[N][N];
    ifstream Input(""input.txt"");
    ofstream Output(""output.txt"");
    ofstream Array(""array.txt"");
    input(n, a, b, Input);
    if (n > N) {
        cout << ""max n = "" << N;
        return 0;
    }
    cout << ""Введіть розмірність матриці (max "" << N << ""x"" << N << "")\n"";
    Output << ""Введіть розмірність матриці (max "" << N << ""x"" << N << "")\n"";
    cout << n << endl;
    Output << n << endl;
    if (a >= b) {
        cout << ""a < b"";
        Output << ""a < b"";
        return 0;
    }
    cout << ""Введіть діапазон a b\n"";
    Output << ""Введіть діапазон a b\n"";
    cout << a << "" "" << b << endl;
    Output << a << "" "" << b << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            arr[i][j] = rand() % (b - a) + a;
            cout << setw(5) << arr[i][j];
            Output << std::setw(5) << arr[i][j];
            Array << std::setw(5) << arr[i][j];
        }
        cout << ""\n"";
        Output << endl;
        Array << endl;
    }
    cout << ""--------------------------\n"";
    Output << ""--------------------------\n"";
    for (int i = 0, temp = 0; i <= n - 2; i++) {
        temp = arr[i][0];
        arr[i][0] = arr[n - 1][i + 1];
        arr[n - 1][i + 1] = temp;
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << setw(5) << arr[i][j];
            Output << setw(5) << arr[i][j];;
        }
        cout << ""\n"";
        Output << endl;
    }
}
"
MmnpYA8D,Mess,Kambarych,C++,Thursday 30th of May 2024 03:51:28 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define For(i, n)           for(int i = 0; i < n; ++i)
#define all(x)              (x).begin(),(x).end()
#define rall(x)             (x).rbegin(),(x).rend()
#define ls(x)               x+x+1
#define rs(x)               x+x+2
#define endl                '\n'

#define ld                  long double
#define pii                 pair<int, int>
#define vt                  vector
#define ll                  long long

#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename \
enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
#define LOCAL
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
ris << ""("" << d.first << "", "" << d.second << "")"";
}
sim dor(rge<c> d) {
*this << ""["";
for (auto it = d.b; it != d.e; ++it)
    *this << "", "" + 2 * (it == d.b) << *it;
ris << ""]"";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) "" ["" << #__VA_ARGS__ "": "" << (__VA_ARGS__) << ""] ""

template<typename T> void read(vt<T> & a) {For(i, a.size()) cin >> a[i];}
template<typename T> void read2(vt<vt<T> > & a) {For(i, a.size()) read(a[i]);}
template<typename T> void print(vt<T> & a) {For(i, a.size()) cout << a[i] << "" ""; cout << endl;}
template<typename T> void print2(vt<vt<T> > & a) {For(i, a.size()) print(a[i]);}

const int MAX = 1e9;
const int MOD = 1000000007;
const ll  INF = 1e18;
const ld  PI  = 3.14159265358979323846;

void solve() {
    int n, m; cin >> n >> m;
    vt<vt<pii> > g(n); 
	For(i, m) {
		int u, v, d; cin >> u >> v >> d; u--, v--;	
		g[u].push_back({v, d});
		g[v].push_back({u, d});
	}
    vt<int> dist(n), dist2(n);
    auto bfs = [&] (int u, vt<int> & dist) {
        vt<bool> used(n);
        queue<int> q;
        q.push(u);
        used[u] = true;
        while (!q.empty()) {
            int v = q.front();
            q.pop();
            for (auto [to, _] : g[v]) {
                if (used[to]) continue;
                used[to] = true;
                q.push(to);
                dist[to] = dist[v] + 1;
            }
        }
    };
    bfs(0, dist);
    bfs(n - 1, dist2);
    vt<int> mn(n, MAX), mx(n, -MAX),
            mn2(n, MAX), mx2(n, -MAX),
            p_mn(n, -1), p_mx(n, -1),
            p_mn2(n, -1), p_mx2(n, -1);
    vt<bool> need(n), need2(n);
    need[n - 1] = true;
    need2[0] = true;
    vt<bool> visited(n), visited2(n);
    auto go = [&] (auto go, int u, vt<bool> & need, vt<bool> & visited, vt<int> & dist) -> void {
        if (visited[u]) return;
        visited[u] = true;
        for (auto [to, d] : g[u]) {
            if (dist[to] == dist[u] + 1) {
                go(go, to, need, visited, dist);
                if (need[to]) {
                    need[u] = true;
                }
            }
        }
    };
    go(go, 0, need, visited, dist);
    go(go, n - 1, need2, visited2, dist2);
    auto dfs = [&] (auto dfs, int u, vt<bool> & need, vt<bool> & visited, vt<int> & mn, vt<int> & mx, vt<int> & p_mn, vt<int> & p_mx, vt<int> & dist) -> void {
        if (visited[u]) return;
        visited[u] = true;
        for (auto [to, d] : g[u]) {
            if (dist[to] == dist[u] + 1 && need[to]) {
                dfs(dfs, to, need, visited, mn, mx, p_mn, p_mx, dist);
                int v_mn = min(mn[to], d);
                int v_mx = max(mx[to], d);
                if (mn[u] > v_mn) {
                    mn[u] = v_mn;
                    p_mn[u] = to;
                }
                if (mx[u] < v_mx) {
                    mx[u] = v_mx;
                    p_mx[u] = to;
                }
            }
        }
    };
    visited = vt<bool> (n);
    visited2 = vt<bool> (n);
    dfs(dfs, 0, need, visited, mn, mx, p_mn, p_mx, dist);
    dfs(dfs, n - 1, need2, visited2, mn2, mx2, p_mn2, p_mx2, dist2);
    int ans = -1;
    for (int i = 0; i < n; i++) {
        if (mx[i] == -MAX) mx[i] = mn2[i];
        if (mn[i] == MAX) mn[i] = mx2[i];
        if (mx2[i] == -MAX) mx2[i] = mn[i];
        if (mn2[i] == MAX) mn2[i] = mx[i];
        ans = max({ans, mx[i] - mn2[i], mx2[i] - mn[i]});
    }
    int type = -1, idx = -1;
    for (int i = 0; i < n; i++) {
        if (mx[i] - mn2[i] == ans) {
            type = 1;
            idx = i;
            break;
        }
        if (mx2[i] - mn[i] == ans) {
            type = 2;
            idx = i;
            break;
        }
    }
    vt<int> res;
    if (type == 1) {
        int u = idx;
        while (true) {
            u = p_mn2[u];
            if (u == -1) break;
            res.push_back(u);
        }
        reverse(all(res));
        u = idx;
        while (u != -1) {
            res.push_back(u);
            u = p_mx[u];
        }
    } 
    else {
        int u = idx;
        while (true) {
            u = p_mx2[u];
            if (u == -1) break;
            res.push_back(u);
        }
        reverse(all(res));
        u = idx;
        while (u != -1) {
            res.push_back(u);
            u = p_mn[u];
        }
    }
    cout << res.size() - 1 << endl;
    for (int u : res) {
        cout << u + 1 << "" "";
    }
    cout << endl;
}

// THE SOLUTION IS ALWAYS SIMPLE
// THE CODE IS ALWAYS SHORT

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#ifdef DEBUG
    freopen(""output.txt"", ""w"", stdout);
    freopen(""input.txt"", ""r"", stdin);
#endif
    int T = 1;
    For(t, T) solve();
    return 0;
}"
xcQKDLN8,Exercise9,otkalce,T-SQL,Thursday 30th of May 2024 03:13:14 PM CDT,"CREATE DATABASE Exercise9
GO

USE Exercise9
GO

CREATE TABLE Genre (
  [Id] [int] IDENTITY(1,1) NOT NULL,
  [Name] [nvarchar](256) NOT NULL,
  [Description] [nvarchar](max) NOT NULL,
  PRIMARY KEY ([Id])
)
GO

SET IDENTITY_INSERT Genre ON
GO

INSERT INTO Genre (Id, [Name], [Description])
VALUES
  (1, 'Rock', 'Otherwise known as ‘Rock & Roll,’ rock music has been a popular genre since the early 1950s.'),
  (2, 'Jazz', 'Identifiable with blues and swing notes, Jazz has origins in European and West African culture.'),
  (3, 'Electronic Dance Music', 'Typically referred to as EDM, this type of music is created by DJs who mix a range of beats and tones to create unique music.'),
  (4, 'Dubstep', 'Dubstep is an electronic dance music subgenre that originated in the late 1990s’ in South London.'),
  (5, 'Techno', 'Techno is yet another sub-genre of electronic dance music. This genre became popular in Germany towards the end of the 1980s and was heavily influenced by house music, funk, synthpop, and futuristic fiction.'),
  (6, 'Rhythm and Blues (R&B)', 'R & B is one of the world’s top music genres combining gospel, blues, and jazz influences.'),
  (7, 'Country', 'Country music is another one of the world’s top music genres. Originating in the 1920s, Country has its roots in western music and American folk.'),
  (8, 'Pop', 'The term ‘Pop’ is derived from the word ‘popular.’ Therefore, Pop music is a genre that contains music generally favored throughout society.'),
  (9, 'Indie Rock', 'In terms of genre, Indie Rock lies somewhere between pop music and rock and roll.'),
  (10, 'Electro', 'Electro blends electronic music and hip hop to create music that is similar to disco in sound.')
GO

SET IDENTITY_INSERT Genre OFF
GO

CREATE TABLE Song (
  Id int NOT NULL IDENTITY (1, 1),
  [Name] nvarchar(256) NOT NULL,
  [Year] int NULL,
  GenreId int NOT NULL,
  DeletedAt datetime2(7) NULL,
  CONSTRAINT PK_Song
    PRIMARY KEY (Id),
  CONSTRAINT FK_Song_Genre
    FOREIGN KEY(GenreId)
    REFERENCES dbo.Genre (Id)
)

SET IDENTITY_INSERT Song ON
GO

INSERT INTO Song (Id, [Name], [Year], GenreId, DeletedAt)
VALUES
  (1, 'A-ha - Take On Me', 1985, 8, NULL),
  (2, 'Tina Turner - What''s Love Got to Do with It', 1984, 8, NULL),
  (3, 'Van Halen - Jump', 1984, 1, NULL),
  (4, 'Franz Ferdinand - Take Me Out', 2004, 9, NULL),
  (5, 'DJ Snake - Lean On', 2015, 10, NULL),
  (6, 'Louis Armstrong - What a Wonderful World', 1967, 2, NULL),
  (7, 'Deleted Song', 1967, 2, '2024-04-27 11:41:00')
GO

SET IDENTITY_INSERT Song OFF
GO"
D27Ee22w,Untitled,Tanski_corp,C++,Thursday 30th of May 2024 02:55:07 PM CDT,"#include <iostream>
#include <string>
#include <algorithm>
#define N 3
using namespace std;

struct movie {
    string name;
    double price;
    string director;

    void input() {
        getline(cin, name);
        cout << endl << ""Director: "";
        getline(cin, director);
        cout << endl << ""Price: "";
        cin >> price;
        cin.ignore();
        cout << endl;
    }

    void output() {
        cout << name << endl;
        cout << director << endl;
        cout << price << endl;
        cout << ""------------------------------\n"";
    }
};

int main()
{
    movie* videot = new movie[N];
    int avg_price = 0, min_price = 0, max_price = 0;
    double total_price = 0;
    for (int i = 0; i < N; i++) {
        cout << ""Name of "" << i + 1 << "" movie: "";
        videot[i].input();
        total_price += videot[i].price;
        if (videot[i].price > videot[max_price].price) max_price = i;
        if (videot[i].price < videot[min_price].price) min_price = i;
    }
    avg_price = total_price / N;
    cout << ""------------------------------\n"";
    cout << ""Movie with max price:\n"";
    videot[max_price].output();
    cout << ""Movie with min price:\n"";
    videot[min_price].output();
    cout << ""Movie(s) with price more than avg:\n"";
    for (int i = 0; i < N; i++) {
        if (videot[i].price > avg_price) {
            videot[i].output();
        }
    }
}
"
KCej8Z5Q,server_byte_stuffing_demo,Python253,Python,Thursday 30th of May 2024 02:46:38 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: server_byte_stuffing_demo.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script demonstrates a byte-stuffing algorithm and a TCP server function to process byte-stuffed data over TCP.
    - Byte stuffing is a technique used in data transmission to avoid ambiguity caused by control characters.
    - The script showcases how byte stuffing can be applied to data and how a server can handle byte-stuffed data over TCP.

Requirements:
    - Python 3.x

Functions:
    - byte_stuffing(data):
        Performs byte stuffing on the input data.
    - process_data(data):
        Processes the byte-stuffed data received from the client.
    - start_server(host, port, duration, received_data_list):
        Starts a TCP server that listens for incoming connections from clients and processes byte-stuffed data for a specified duration.
    - send_data(host, port, data):
        Sends byte-stuffed data to the server.
    - save_output(output, received_data_list):
        Saves the terminal output and received data to a file.
    - main():
        Main function to automate the process of starting the server, sending data, and handling user interaction for saving output.

Expected Example Output:

        Byte-stuffed data: 017d5e027d5d03

        Server listening on 127.0.0.1:1337...

        Data sent to the server: b'\x01}^\x02}]\x03'

        Connection from ('127.0.0.1', 52261)

        Processed data: b'\x01~\x02}\x03'

        Received data from the server: b'\x01~\x02}\x03'

        Output saved successfully!

        Received:       017e027d03

        Sent:       017d5e027d5d03
        Received:       017e027d03

Additional Notes:
    - This script is for demonstration purposes only and does not represent a full-fledged server implementation.
""""""

import socket
import threading
import time
import logging
from typing import List, Tuple

def byte_stuffing(data: bytes) -> bytes:
    """"""
    Performs byte stuffing on the input data.

    Args:
        data (bytes): The input data to be byte-stuffed.

    Returns:
        bytes: The byte-stuffed data.
    """"""
    stuffed_data = []
    for byte in data:
        if byte in (0x7E, 0x7D):
            stuffed_data.append(
                0x7D
            )  # Byte stuffing: Replace 0x7E and 0x7D with 0x7D, 0x5E and 0x5D respectively
            stuffed_data.append(byte ^ 0x20)  # XOR with 0x20 to toggle the fifth bit
        else:
            stuffed_data.append(byte)
    return bytes(stuffed_data)

def process_data(data: bytes) -> bytes:
    """"""
    Processes the byte-stuffed data received from the client.

    Args:
        data (bytes): The byte-stuffed data received from the client.

    Returns:
        bytes: The processed data.
    """"""
    processed_data = []
    escape_next = False
    for byte in data:
        if escape_next:
            processed_data.append(
                byte ^ 0x20
            )  # XOR with 0x20 to remove the escape character
            escape_next = False
        elif byte == 0x7D:
            escape_next = True  # Set escape_next flag if 0x7D is encountered
        else:
            processed_data.append(byte)
    return bytes(processed_data)

def start_server(
    host: str, port: int, duration: int, received_data_list: List[Tuple[bytes, bytes]]
):
    """"""
    Starts a TCP server that listens for incoming connections from clients and processes byte-stuffed data for a specified duration.

    Args:
        host (str): The IP address or hostname of the server.
        port (int): The port number on which the server listens.
        duration (int): The duration (in seconds) for which the server should run.
        received_data_list (List[Tuple[bytes, bytes]]): A list to store the received data and processed data.
    """"""
    start_time = time.time()  # Record the start time
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
        server_socket.bind((host, port))  # Bind the socket to the host and port
        server_socket.listen(
            5
        )  # Start listening for incoming connections, with a backlog of 5

        logging.info(
            f""\nServer listening on {host}:{port}...""
        )  # Log the server listening status

        # Loop until the specified duration is reached
        while (time.time() - start_time) < duration:
            # Set the timeout for the server socket
            server_socket.settimeout(duration - (time.time() - start_time))
            try:
                # Accept incoming connection and get the client socket and address
                client_socket, client_address = server_socket.accept()
                logging.info(
                    f""\nConnection from {client_address}""
                )  # Log the connection

                with client_socket:
                    # Loop until the client closes the connection
                    while True:
                        data = client_socket.recv(1024)  # Receive data from the client
                        if not data:
                            break  # Break the loop if no data is received

                        if data.startswith(b""GET""):
                            logging.info(
                                f""\nReceived HTTP request: {data!r}""
                            )  # Log HTTP request
                            continue  # Skip processing if it's an HTTP request

                        processed_data = process_data(data)  # Process received data
                        logging.info(
                            f""\nProcessed data: {processed_data!r}""
                        )  # Log processed data

                        received_data_list.append(
                            (data, processed_data)
                        )  # Append to received data list
                        client_socket.sendall(
                            processed_data
                        )  # Send processed data back to the client
            except socket.timeout:
                break  # Break the loop if timeout occurs
            except ConnectionResetError:
                logging.warning(
                    ""\nConnection was reset by the client!""
                )  # Log connection reset by client
                continue  # Continue to the next iteration of the loop

def send_data(host: str, port: int, data: bytes) -> bytes:
    """"""
    Sends byte-stuffed data to the server.

    Args:
        host (str): The IP address or hostname of the server.
        port (int): The port number on which the server is listening.
        data (bytes): The byte-stuffed data to be sent to the server.

    Returns:
        bytes: The received data from the server.
    """"""
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket:
        try:
            client_socket.connect((host, port))  # Connect to the server
            client_socket.sendall(data)  # Send the byte-stuffed data
            logging.info(f""\nData sent to the server: {data!r}"")  # Log the sent data
            received_data = client_socket.recv(1024)  # Receive data from the server
            logging.info(
                f""\nReceived data from the server: {received_data!r}""
            )  # Log the received data
            return received_data  # Return the received data
        except ConnectionResetError:
            logging.warning(
                ""\nConnection was reset by the server!""
            )  # Log connection reset by server
            raise  # Raise an exception instead of returning None

def save_output(output: str, received_data_list: List[Tuple[bytes, bytes]]):
    """"""
    Save the terminal output and received data to a file, excluding specific lines.

    Args:
        output (str): The terminal output to be saved.
        received_data_list (List[Tuple[bytes, bytes]]): A list containing tuples of sent and received byte-stuffed data.

    Notes:
        Lines containing the specified exclusion patterns are not written to the output file.
    """"""
    lines_to_exclude = [
        ""027d5d03"",
        ""Received:    017e027d03"",
    ]  # Lines to exclude from output
    output_lines = output.split(""\n"")  # Split the output into lines
    with open(""output.txt"", ""a"", encoding=""utf-8"") as file:
        for line in output_lines:
            if not any(exclude_line in line for exclude_line in lines_to_exclude):
                file.write(line + ""\n"")  # Write the line to the output file

        # Write received data
        for sent, received in received_data_list:
            if received is not None:
                file.write(f""Sent:       {sent.hex()}\n"")  # Write sent data to the file
                file.write(
                    f""Received:       {received.hex()}\n\n""
                )  # Write received data to the file

def main():
    """"""
    Main function to automate the process of starting the server, sending data, and handling user interaction for saving output.
    """"""
    # Define server parameters
    HOST = ""127.0.0.1""
    PORT = 1337
    DURATION = 1

    # Prepare test data for byte-stuffing
    test_data = bytes([0x01, 0x7E, 0x02, 0x7D, 0x03])

    # Perform byte stuffing on the test data
    stuffed_data = byte_stuffing(test_data)
    logging.info(""Byte-stuffed data: %s"", stuffed_data.hex())

    # List to store received data tuples
    received_data_list: List[Tuple[bytes, bytes]] = []

    # Start the server in a separate thread
    server_thread = threading.Thread(
        target=start_server, args=(HOST, PORT, DURATION, received_data_list)
    )
    server_thread.start()

    # Send stuffed data to the server
    received_data = send_data(HOST, PORT, stuffed_data)
    if received_data is not None:
        received_data_list.append(
            (stuffed_data, received_data)
        )  # Append received data only

    # Wait for the server thread to complete
    server_thread.join()

    # Prompt user to save the output
    save = input(""\nDo you want to save the output? (y/n): "")
    if save.lower() == ""y"":
        # Format example data for saving
        example_data = f""\nSent:    {stuffed_data.hex()}\nReceived:    {received_data.hex() if received_data else 'None'}\n""
        # Save the output to a file
        save_output(example_data, received_data_list)
        logging.info(""\nOutput saved successfully!\n"")

if __name__ == ""__main__"":
    # Configure logging settings
    logging.basicConfig(
        level=logging.INFO,
        format=""%(message)s"",
        handlers=[logging.FileHandler(""output.txt"", mode=""w""), logging.StreamHandler()],
    )

    # Execute the main function
    main()
"
yunXnKv7,Simple remove duplicates,1HazingAU,Go,Thursday 30th of May 2024 02:46:01 PM CDT,"package main

import ""fmt""

func Solve(slice []int) []int { 
	lastIndex := make(map[int]int)

	
	for i, key := range slice {
		lastIndex[key] = i
	}

	result := []int{}

	
	for i := len(slice) - 1; i >= 0; i-- {
		value := slice[i]
		
		if lastIndex[value] == i {

			result = append([]int{value}, result...)
		}
	}

	return result
}

func main() {
	numbers := []int{1, 1, 4, 5, 1, 2, 1}

	fmt.Print(Solve(numbers))
}"
u4EQeyKf,Python - split file - (Stackoverflow),furas,Python,Thursday 30th of May 2024 02:42:26 PM CDT,"# [python - Finding a specific keyword while dividing the large csv into smaller segments, and moving to next row until keyword is found - Stack Overflow](https://stackoverflow.com/questions/78555996/finding-a-specific-keyword-while-dividing-the-large-csv-into-smaller-segments-a)

other_list = []
index = 0

with open(""combined.con"") as infile:
    for line in infile:
        other_list.append(line)
        if len(other_list) >= 5 and line.startwith('END'):
            with open(f""Contingency_{i}.con"", 'w') as outfile:
                for item in other_list:
                    outfile.write(item)
            other_list = []
            index += 1
                   
# make sure there is no data
if len(other_list) > 0:
    with open(f""Contingency_{i}.con"", 'w') as outfile:
        for item in other_list:
            outfile.write(item)
"
P2RTS39e,dad,x2w,GetText,Thursday 30th of May 2024 02:36:54 PM CDT,"dad























dad"
UnkW4EwL,Win11「バックアップの開始」削除 改,kamome-sg,Batch,Thursday 30th of May 2024 02:26:36 PM CDT,"@echo off
set key=HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\StorageProvider\OneDrive
set value=StorageProviderKnownFolderSyncInfoSourceFactory
for /l %%i in (1,1,12) do (
	timeout /t 5 /nobreak >nul
	reg query %key% /v %value% >nul 2>&1
	if not errorlevel 1 (
		reg delete %key% /v %value% /f
		exit
	)
)"
UdQpdWLr,How can one utilize a mines strategy on the Shuffle platform to maximize potential earnings,livebetpro,PHP,Thursday 30th of May 2024 02:19:08 PM CDT,"https://www.livebetpro.com/how-can-one-utilize-a-mines-strategy-on-the-shuffle-platform-to-maximize-potential-earnings/
 Unlocking the Potential of Shuffle Mines: A Strategic Guide to Maximizing Earnings on the Shuffle Platform
Table of Contents : Shuffle

 	Introduction
 	Optimal Game Setup and Strategy
 	Profit-Taking and Risk Management
 	Bonus and Community Engagement
 	Advanced Strategies and Platform Features
 	Conclusion




Introduction to Shuffle Mines
Are you eager to explore the realm of Shuffle Mines and uncover its wealth-building potential on the Shuffle platform? With a carefully crafted strategy and a strategic game setup, you can navigate the twists and turns of the game to aim for substantial gains. Let's delve into the optimal approach to ensure consistent profits on the Shuffle platform.
Optimal Game Setup and Strategy on Shuffle
Begin your journey with a modest investment of $25 on the Shuffle platform. This starting point lays the foundation for a strategic approach aimed at achieving a 4X initial gain, striking a balance between risk and reward crucial for long-term profitability.

 	
Mines Game Strategy on Shuffle
: Set the Mines to two and select 12 boxes. This configuration provides an optimal level of challenge while keeping risk levels manageable.
 	
Increase on Loss Strategy on Shuffle
: Implement an increase on loss strategy of 4114, targeting a 50% gain. This clear objective guides your decisions and maximizes your chances of success.

Profit-Taking and Risk Management on Shuffle
Knowing when to seize profits and when to minimize losses is essential on the Shuffle platform. Prioritize quitting while ahead to safeguard your earnings and avoid overexposure.

 	
Stop-Loss Strategy on Shuffle
: Implement a stop-loss strategy to protect your capital. If your balance drops below 2K Stake cash, consider it a signal to reassess your approach.

Bonus and Community Engagement on Shuffle
Enhance your earnings potential by leveraging bonuses and engaging with the Shuffle community on the Shuffle platform.

 	
Bonus Utilization on Shuffle
: Use the bonus code PK to secure a 100% bonus, effectively doubling your initial investment on the Shuffle platform. This bonus boosts your starting balance, providing additional resources for pursuing your earnings goals.
 	
Community Engagement on Shuffle
: Join the Shuffle community on platforms like Telegram to access exclusive content, tips, and discussions on effective gameplay strategies.

Advanced Strategies and Platform Features on Shuffle
Elevate your Shuffle Mines gameplay with advanced strategies and platform-specific features available on the Shuffle platform.

 	
Progressive Betting on Shuffle
: Gradually increase your guesses or bombs over multiple rounds to strategically elevate both risk and potential reward.
 	
Shuffle Platform Features
: Take advantage of Shuffle's superior bonuses and user-friendly interface on the Shuffle platform. Engage with live support and utilize post-sign-up bonus codes to maximize your earnings potential.

Conclusion: Navigating the Path to Profitability on the Shuffle Platform
By following these strategies and leveraging the resources available on the Shuffle platform, you can embark on a journey towards consistent profitability in Mines. With careful planning, disciplined execution, and a bit of luck, you can unlock the full earning potential of this exhilarating game on the Shuffle platform."
7z5YvuCQ,fix win flash,KukuRuzo,C++,Thursday 30th of May 2024 02:06:57 PM CDT,"

diff --git a/src/mainwin.cpp b/src/mainwin.cpp
index 29a96a49..0ddd8b93 100644
--- a/src/mainwin.cpp
+++ b/src/mainwin.cpp
@@ -551,6 +551,7 @@ MainWin::MainWin(bool _onTop, bool _asTool, PsiCon *psi) :
     reinitAutoHide();
 #ifdef USE_TASKBARNOTIFIER
     d->taskBarNotifier = new TaskBarNotifier(this);
+    d->taskBarNotifier->enableFlashWindow(d->allInOne && PsiOptions::instance()->getOption(""options.ui.flash-windows"").toBool());
 #endif
 }
 
@@ -589,10 +590,12 @@ void MainWin::optionChanged(const QString &option)
     if (option == toolbarsStateOptionPath) {
         loadToolbarsState();
     } else if (option == ""options.ui.contactlist.css"") {
-        const QString css = PsiOptions::instance()->getOption(""options.ui.contactlist.css"").toString();
+        const QString css = PsiOptions::instance()->getOption(option).toString();
         if (!css.isEmpty()) {
             setStyleSheet(css);
         }
+    } else if (d->allInOne && option == ""options.ui.flash-windows"") {
+        d->taskBarNotifier->enableFlashWindow(PsiOptions::instance()->getOption(option).toBool());
     }
 }
 
diff --git a/src/widgets/taskbarnotifier.cpp b/src/widgets/taskbarnotifier.cpp
index 908d7173..2343492e 100644
--- a/src/widgets/taskbarnotifier.cpp
+++ b/src/widgets/taskbarnotifier.cpp
@@ -71,6 +71,9 @@ public:
 #ifdef USE_DBUS
     void setDesktopPath(const QString &appName);
 #endif
+#ifdef Q_OS_WIN
+    void setFlashWindow(bool enabled);
+#endif
 private:
 #ifdef Q_OS_WIN
     void  setTaskBarIcon(const HICON &icon = {});
@@ -92,6 +95,7 @@ private:
 #ifdef Q_OS_WIN
     HWND  hwnd_;
     HICON icon_;
+    bool flashWindow_ = false;
 #else
     QImage *image_;
 #endif
@@ -222,6 +226,11 @@ void TaskBarNotifier::Private::sendDBusSignal(bool isVisible, uint number)
 }
 
 #elif defined(Q_OS_WIN)
+void TaskBarNotifier::Private::setFlashWindow(bool enabled)
+{
+    flashWindow_ = enabled;
+}
+
 void TaskBarNotifier::Private::setTaskBarIcon(const HICON &icon)
 {
     if (icon_)
@@ -286,7 +295,10 @@ void TaskBarNotifier::Private::doFlashTaskbarIcon()
     FLASHWINFO fi;
     fi.cbSize    = sizeof(FLASHWINFO);
     fi.hwnd      = hwnd_;
-    fi.dwFlags   = (urgent_) ? FLASHW_ALL | FLASHW_TIMER : FLASHW_STOP;
+    if(urgent_)
+        fi.dwFlags   = ((flashWindow_) ? FLASHW_ALL : FLASHW_TRAY) | FLASHW_TIMER;
+    else
+        fi.dwFlags   = FLASHW_STOP;
     fi.uCount    = 0;
     fi.dwTimeout = 0;
     FlashWindowEx(&fi);
@@ -306,3 +318,13 @@ void TaskBarNotifier::setIconCountCaption(int count) { d->setIconCount(count); }
 void TaskBarNotifier::removeIconCountCaption() { d->restoreDefaultIcon(); }
 
 bool TaskBarNotifier::isActive() { return d->active(); }
+
+void TaskBarNotifier::enableFlashWindow(bool enabled)
+{
+#ifdef Q_OS_WIN
+    if(d)
+        d->setFlashWindow(enabled);
+#else
+    Q_UNUSED(enabled);
+#endif
+}
diff --git a/src/widgets/taskbarnotifier.h b/src/widgets/taskbarnotifier.h
index 11525360..6312970c 100644
--- a/src/widgets/taskbarnotifier.h
+++ b/src/widgets/taskbarnotifier.h
@@ -31,6 +31,7 @@ public:
     void setIconCountCaption(int count);
     void removeIconCountCaption();
     bool isActive();
+    void enableFlashWindow(bool enabled);
 
 private:
     class Private;
"
HHRLQwie,list of cities by country - sqlite3,aum7,C,Thursday 30th of May 2024 02:05:52 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <sqlite3.h>

void print_cities_by_country(sqlite3 *db) {
    sqlite3_stmt *stmt;
    const char *sql = ""SELECT CountryInfo.country, GROUP_CONCAT(GeoNames.name, ', ') as cities ""
                      ""FROM GeoNames ""
                      ""JOIN CountryInfo ON GeoNames.country = CountryInfo._idx ""
                      ""GROUP BY CountryInfo.country ""
                      ""ORDER BY CountryInfo.country;"";

    int rc = sqlite3_prepare_v2(db, sql, -1, &stmt, NULL);
    if (rc != SQLITE_OK) {
        fprintf(stderr, ""Failed to fetch data: %s\n"", sqlite3_errmsg(db));
        return;
    }

    while ((rc = sqlite3_step(stmt)) == SQLITE_ROW) {
        const char *country = (const char *)sqlite3_column_text(stmt, 0);
        const char *cities = (const char *)sqlite3_column_text(stmt, 1);
        printf(""%s: %s\n"", country, cities ? cities : """");
    }

    if (rc != SQLITE_DONE) {
        fprintf(stderr, ""Execution failed: %s\n"", sqlite3_errmsg(db));
    }

    sqlite3_finalize(stmt);
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        fprintf(stderr, ""Usage: %s <database file>\n"", argv[0]);
        return EXIT_FAILURE;
    }

    sqlite3 *db;
    int rc = sqlite3_open(argv[1], &db);
    if (rc != SQLITE_OK) {
        fprintf(stderr, ""Cannot open database: %s\n"", sqlite3_errmsg(db));
        return EXIT_FAILURE;
    }

    print_cities_by_country(db);

    sqlite3_close(db);
    return EXIT_SUCCESS;
}
***
compile with sh :
gcc -o cities_by_country cities_by_country.c -lsqlite3

run with sh :
./cities_by_country /path/to/atlas.db
"
brLT2NVj,snake,bobopopcornboy,Lua,Thursday 30th of May 2024 01:55:14 PM CDT,"local w, h = term.getSize()
a = 0
timer = os.startTimer(0)
--variables
snakecolor = colors.green
nInterval = 0.3
fruitcolor = colors.red
textcolor = colors.yellow
edgecolor = colors.blue
HIGHSCORE = 0
HIGHSCOREP = ""NoOne""


--functions
function drawpixel(x, y, color)
    term.setCursorPos(x, y)
    term.setBackgroundColor(color)
    term.write("" "")
    term.setBackgroundColor(colors.black)
end

local function printCentred(y, s)
    local x = math.floor((w - string.len(s)) / 2)
    term.setCursorPos(x, y)
    --term.clearLine()
    term.write(s)
end

local function addwall()
    yes = 0
    while true do
        randomx = math.random(1, w)
        randomy = math.random(2, h)
        for i = 1, #sx do
            if sx[i] == randomx and sy[i] == randomy then
                yes = yes + 1
            end
        end
        for i = 1, #fruitx do
            if fruitx[i] == randomx and fruity[i] == randomy then
                yes = yes + 1
            end
        end
        if yes == 0 then
            break
        end
    end
    wallx[#wallx + 1] = randomx
    wally[#wally + 1] = randomy
end

local function addfruit(p1)
    yes = 0
    while true do
        randomx = math.random(1, w)
        randomy = math.random(2, h)
        for i = 1, #sx do
            if sx[i] == randomx and sy[i] == randomy then
                yes = yes + 1
            end
        end
        if yes == 0 then
            break
        end
    end
    fruitx[p1] = randomx
    fruity[p1] = randomy
end

function drawline(xc, yc, xv, yv, color)
    if xc == xv then
        if yc < yv then
            for i = 1, yv - yc + 1 do
                drawpixel(xc, yc + i - 1, color)
            end
        else
            for i = 1, yc - yv + 1 do
                drawpixel(xc, yc - i + 1, color)
            end
        end
    elseif yc == yv then
        if xc < xv then
            for i = 1, xv - xc + 1 do
                drawpixel(xc + i - 1, yc, color)
            end
        else
            for i = 1, xc - xv + 1 do
                drawpixel(xc - i + 1, yc, color)
            end
        end
    end
end

function edge()
    drawline(1, 1, 1, h, edgecolor)
    drawline(1, 1, w, 1, edgecolor)
    drawline(w, 1, w, h, colors.blue)
    drawline(1, h, w, h, edgecolor)
end

function drawgame()
        term.clear()
        for i = 1, #sx do
            term.setCursorPos(sx[i], sy[i])
            term.setBackgroundColor(snakecolor)
            term.write("" "")
            term.setBackgroundColor(colors.black)
        end
        for i = 1, #fruitx do
            term.setCursorPos(fruitx[i], fruity[i])
            term.setBackgroundColor(fruitcolor)
            term.write("" "")
        end
        for i = 1, #wallx do
            term.setCursorPos(wallx[i], wally[i])
            term.setBackgroundColor(edgecolor)
            term.write("" "")
        end
        term.setBackgroundColor(colors.black)
        if diffeculty >= 2 then
            edge()
        end
        drawline(1,1,w,1,edgecolor)
        term.setBackgroundColor(edgecolor)
        term.setCursorPos(1, 1)
        term.write(""score:"" .. score*(diffeculty+1))
        term.write("" ""..""HIGHSCORE:""..HIGHSCORE.."" Holder:\""""..HIGHSCOREP..""\"""")
        term.setCursorPos(w-string.len(""Difficulty:"" ..diffeculty), 1)
        term.write(""Difficulty:"" ..diffeculty)
        term.setBackgroundColor(colors.black)
end

function menu(list,clears)
selected = 1
if not clears then term.clear() end
term.setTextColor(textcolor)
  for i=1,#list do
    if selected == i then
      printCentred(h/2 - #list/2 + (i-1), ""[""..list[i]..""]"")
    else
      printCentred(h/2 - #list/2 + (i-1), list[i])
    end
  end
while true do
    local event, o1, o2 = os.pullEvent(""key"")
    term.clear()
    if clears then drawgame() end
    if o1 == keys.up then
        selected = selected + -1
    end
    if o1 == keys.down then
        selected = selected - -1
    end
    if selected > #list then
        selected = 1
    end
    if selected < 1 then
        selected = #list
    end
    if o1 == keys.enter then
        break
    end
    for i=1,#list do
      if selected == i then
        printCentred(h/2 - #list/2 + (i-1), ""[""..list[i]..""]"")
      else
        printCentred(h/2 - #list/2 + (i-1), list[i])
    end
  end
end
return selected
end

function start()
--menu
diffeculty = menu({""easy"",""normal"",""HARD"",""VERY HARD!"",""IMPOSIBLE!""}) - 1
--game
nInterval = 0.3
wallx = {}
wally = {}
sx = {6, 5, 4}
sy = {5, 5, 5}
dx = 1
dy = 0
die = false
fb = 0
die = false
if diffeculty > 0 then
    fb = 0.2
end
if diffeculty >= 3 then
    fb = 0.4
end
fruitx = {math.floor(w / 2)}
fruity = {math.floor(h / 2)}
nInterval = nInterval - fb
local timer = os.startTimer(nInterval)
move = 0
while true do
    event, o1, o2 = os.pullEvent()
    if event == ""timer"" and o1 == timer then
        timer = os.startTimer(nInterval)
    end
    if event == ""key"" then
        if o1 == keys.right and dx == 0 and move == 0 then
            dx = 1
            dy = 0
            move = 1
        end
        if o1 == keys.left and dx == 0 and move == 0 then
            dx = -1
            dy = 0
            move = 1
        end
        if o1 == keys.up and dy == 0 and move == 0 then
            dx = 0
            dy = -1
            move = 1
        end
        if o1 == keys.down and dy == 0 and move == 0 then
            dx = 0
            dy = 1
            move = 1
        end
        if o1 == keys.backspace then
          if menu({""Resume"",""Difficulty Select""},true) == 2 then
            break
          end
          timer = os.startTimer(nInterval)
        end
        if o1 == keys.space then
            addfruit(#fruitx + 1)
        end
    end
    if event == ""timer"" then
        move = 0
        table.insert(sx, 1, sx[1] + dx)
        table.insert(sy, 1, sy[1] + dy)
        for i = 1, #sx - 1 do
            if sx[1] == sx[i + 1] and sy[1] == sy[i + 1] then
                die = true
            end
        end
        for i = 1, #wallx do
            if sx[1] == wallx[i] and sy[1] == wally[i] then
                die = true
            end
        end
        for i = 1, #fruitx do
            if fruitx[i] == sx[1] and sy[1] == fruity[i] then
                addfruit(i)
                if diffeculty == 4 then addwall() end
                grow = true
            end
        end
        if #fruitx == 0 then
          addfruit(1)
        end
        if not grow then
            sx[#sx] = nil
            sy[#sy] = nil
        end
        grow = false
        if diffeculty < 2 then
            if sx[1] > w then
                sx[1] = 1
            end
            if sx[1] < 1 then
                sx[1] = w
            end
            if sy[1] > h then
                sy[1] = 2
            end
            if sy[1] < 2 then
                sy[1] = h
            end
        else
            if sx[1] > w - 1 then
                die = true
            end
            if sx[1] < 2 then
                die = true
            end
            if sy[1] > h - 1 then
                die = true
            end
            if sy[1] < 2 then
                die = true
            end
        end
        score = #sx -3
        drawgame()
        if score*(diffeculty+1) > HIGHSCORE then
            HIGHSCOREP = ""you""
            HIGHSCORE = score*(diffeculty+1)
        end
        if die then
            term.clear()
            printCentred(math.floor(h / 2) - 1, ""you died"")
            printCentred(math.floor(h / 2), ""score:"" .. score)
            if HIGHSCOREP == ""you"" then
            HIGHSCOREP = ""__""
            printCentred(math.floor(h / 2) + 1, ""NEW HIGH SCORE!"")
            printCentred(math.floor(h / 2) + 2, ""EnterName:""..HIGHSCOREP)
            shift = 0
            while true do
                local event, key = os.pullEvent(""key"")
                if key == keys.leftShift or key == keys.rightShift then
                    shift = 1 - shift
                end
                kes = keys.getName(key)
                if shift == 1 then kes = string.upper(kes) end
                if #kes == 1 and string.sub(HIGHSCOREP,1,1) ~= ""_"" then
                    HIGHSCOREP = string.sub(HIGHSCOREP,1,1)
                    HIGHSCOREP = HIGHSCOREP..kes
                end
                if #kes == 1 and string.sub(HIGHSCOREP,1,1) == ""_"" then
                    HIGHSCOREP = kes..""_""
                end
                if key == keys.backspace and string.sub(HIGHSCOREP,2,2) == ""_"" then
                    HIGHSCOREP = ""__""
                end
                if key == keys.backspace and string.sub(HIGHSCOREP,2,2) ~= ""_"" then
                    HIGHSCOREP = string.sub(HIGHSCOREP,1,1)
                    HIGHSCOREP = HIGHSCOREP..""_""
                end
                if key == keys.enter and string.sub(HIGHSCOREP,2,2) ~= ""_"" then
                    break
                end
                printCentred(math.floor(h / 2) + 2, ""EnterName:""..HIGHSCOREP)
            end
            printCentred(math.floor(h / 2) + 1, ""NEW HIGH SCORE!"")
            printCentred(math.floor(h / 2) + 2, ""press ENTER to play agian"")
            else
            printCentred(math.floor(h / 2) + 1, ""press ENTER to play agian"")
            end
            while true do
                local event, key = os.pullEvent(""key"")
                if key == keys.enter then
                    break
                end
            end
            break
        end
    end
end
start()
end
start()

"
CcXJd1gQ,How can I receive a generous 50% Forex Deposit Bonus from Ultima Markets,reviewbrokers,PHP,Thursday 30th of May 2024 01:51:38 PM CDT,"https://www.reviewbrokers.net/how-can-i-receive-a-generous-50-forex-deposit-bonus-from-ultima-markets/
 Table of Contents: Ultima Markets

 	Introduction: Unlock Your Trading Potential
 	Why Choose Ultima Markets?

 	Well-Regulated
 	Client's Fund Insurance
 	Negative Balance Protection
 	Multi-Award-Winning Broker


 	How to Claim Your Best Forex Deposit Bonus:

 	Register an Account
 	Opt-In
 	Deposit


 	Key Highlights of the Offer:

 	Boost Your Trading Power
 	Withdraw Profits Anytime
 	Additional 20% Bonus for Subsequent Deposits


 	Conclusion: Elevate Your Profit Potential with Ultima Markets
 	Call to Action: Claim Your Best Forex Deposit Bonus Now




Introduction: Unlock Your Trading Potential
Are you ready to take your trading game to the next level? Ultima Markets is here to help you supercharge your account and boost your profit potential with our exclusive 50% Forex Deposit Bonus offer, recognized as one of the best forex deposit bonuses available. But that's not all – we're also offering an additional 20% bonus on subsequent deposits, making trading with us simple, transparent, and incredibly rewarding.

Claim Your Bonus Now
Why Choose Ultima Markets?
Well-Regulated
We are fully regulated by [insert regulatory body], ensuring that your funds are safe and secure at all times.
Client's Fund Insurance
Your funds are protected by our client's fund insurance policy, providing an extra layer of security and peace of mind.
Negative Balance Protection
With Ultima Markets, you'll never have to worry about losing more than your initial investment, thanks to our negative balance protection policy.
Multi-Award-Winning Broker
We are proud to have received multiple awards and accolades for our exceptional services and commitment to our clients.
How to Claim Your Best Forex Deposit Bonus:
Register an Account
Simply sign up for an account with Ultima Markets in just a few minutes.
Opt-In
Once your account is set up, opt-in to the 50% Forex Deposit Bonus offer.
Deposit
Make your first deposit into your Ultima Markets account, and your 50% bonus will be credited instantly.
Key Highlights of the Offer:
Boost Your Trading Power
Increase your trading power by up to 1.5 times, giving you the competitive edge you need to succeed in the Forex market.
Withdraw Profits Anytime
Unlike other brokers, we allow you to withdraw your profits at any time, with no hidden restrictions or fees.
Additional 20% Bonus for Subsequent Deposits
Enjoy an additional 20% bonus on all subsequent deposits, ensuring that your trading journey with Ultima Markets is consistently rewarding.
Conclusion: Elevate Your Profit Potential with Ultima Markets
Don't miss out on this incredible opportunity to supercharge your trading account and elevate your profit potential. Claim your 50% Forex Deposit Bonus from Ultima Markets today, recognized as one of the best forex deposit bonuses available, and experience the difference for yourself!
Call to Action: Claim Your Best Forex Deposit Bonus Now
Claim Your Bonus Now"
esAfxdYx,Untitled,Mysoft,FreeBasic,Thursday 30th of May 2024 01:39:17 PM CDT,"#include ""MyTDT\fbplay.bas""

for N as long = 3 to 125
  print N
  PLAY ""I"" & N & "" T120 O4 L8 ML""  ' Set tempo to 120, octave to 4, length to 1/8, legato
  PLAY ""G G A G C5 B4""             ' Happy birthday to you
  PLAY ""G G A G D5 C5""             ' Happy birthday to you
  PLAY ""G G G5 E5 C5 B4 A""         ' Happy birthday dear [Name]
  PLAY ""F5 F5 E5 C5 D5 C5""         ' Happy birthday to you
next N
sleep"
5ZLYUxaU,How Can You Benefit from the Exclusive IB Rewards Program at Ultima Markets for 2024,fxvnpro,PHP,Thursday 30th of May 2024 01:35:31 PM CDT,"https://www.fxvnpro.com/how-can-you-benefit-from-the-exclusive-ib-rewards-program-at-ultima-markets-for-2024/
 How Can You Benefit from the Exclusive IB Rewards Program and Forex Welcome Bonus at Ultima Markets for 2024?
Table of Contents : Ultima Markets

 	Exclusive Perks and Incentives
 	Why Choose Ultima Markets?
 	How to Join Ultima Markets IB Rewards and Forex Welcome Bonus 2024

Join Ultima Markets IB Rewards 2024 and gain access to a variety of perks and incentives! By partnering with Ultima Markets as an Introducing Broker (IB), you'll receive enticing bonuses and lucrative rebates. Here's how you can make the most of this exclusive program.
Exclusive Perks and Incentives
Ultima Markets has crafted a unique reward system that goes beyond standard commissions. As an IB with Ultima Markets, you'll have the opportunity to earn:
Luxury Property and Designer Goods
Ultima Markets' reward scheme includes high-end items and properties, reflecting our appreciation for your loyalty and support.
Sophisticated IB Portal with Forex Welcome Bonus 2024
Manage your referrals, track commissions, and access support through an advanced, user-friendly portal provided by Ultima Markets.
Daily Rebates and Forex Welcome Bonus 2024
Enjoy daily payouts on your earnings with Ultima Markets, ensuring a consistent and reliable income stream.
Personalized Reward Scheme with Forex Welcome Bonus 2024
Ultima Markets offers tailored incentives designed to match your performance and client acquisition efforts.
Client’s Fund Insurance
Ultima Markets provides added security for your clients, enhancing trust and confidence in your referrals.
Why Choose Ultima Markets?
Ultima Markets stands out due to its commitment to innovation and client satisfaction. Here’s why you should consider partnering with Ultima Markets:
Sophisticated IB Portal with Forex Welcome Bonus 2024
Ultima Markets' state-of-the-art portal provides all the tools and information you need to succeed.
Daily Rebates and Forex Welcome Bonus 2024
Receive your earnings promptly with daily rebates from Ultima Markets.
Personalized Reward Scheme with Forex Welcome Bonus 2024
Enjoy customized rewards that reflect your hard work and success with Ultima Markets.
Client’s Fund Insurance
Offer your clients peace of mind with comprehensive fund protection from Ultima Markets.
How to Join Ultima Markets IB Rewards and Forex Welcome Bonus 2024
Getting started with the Ultima Markets IB Rewards Program is simple. Follow these steps to become a part of our successful network:
Partner with Us as an Introducing Broker
Apply through the Ultima Markets website to become an IB.
Deposit
Fund your account with Ultima Markets to start referring clients.
Refer Clients
Bring new clients to Ultima Markets.
Start Trading and Claim Your Rewards with Forex Welcome Bonus 2024
Watch your commissions and rewards grow as your clients trade with Ultima Markets.

It’s that simple! Don’t miss out on this amazing opportunity. Join Ultima Markets IB Rewards 2024 today and start enjoying the exclusive benefits and rewards.

Link to join Ultima Markets IB Rewards 2024

Partner with Ultima Markets now and take your brokerage business to new heights!"
zC4a4mx0,Mining turtle staircase test,SloothManDan,Lua,Thursday 30th of May 2024 01:30:21 PM CDT,"-- Function to check if the turtle needs refueling
function refuelIfNeeded()
    if turtle.getFuelLevel() == 0 then
        turtle.select(1)
        if turtle.refuel(1) then
            print(""Turtle refueled."")
            return
        end
        error(""Out of fuel!"")
    end
end

-- Function to place stair block below the turtle
function placeStair()
    turtle.select(2)
    turnAround()
    if turtle.placeDown() then
        return
    end
    turnAround()
    error(""Out of stairs!"")
end

-- Function to dig down a staircase and place stairs
function digStaircaseToYLevel(target)

    local steps = 0

    while target ~= steps do
        refuelIfNeeded()

        -- Dig forward, down, and down-forward to create a staircase step
        turtle.dig()
        turtle.forward()
        turtle.digup()
        turtle.up()
        turtle.digup()

        -- Place a torch every 8 blocks
        if steps % 8 == 0 then
            placeTorch()
        end

        turtle.down()
        turtle.digDown()

        -- Place a stair block
        placeStair()

        -- Optional: Place a torch every few steps to light the staircase
        -- if turtle.getItemCount(1) > 0 then
        --     turtle.select(1)
        --     turtle.placeUp()
        -- end
        steps = steps + 1
    end

    print(""Staircase complete."")
end

-- Funiton to turn the turtle 180
function turnAround()
    turtle.turnLeft()
    turtle.turnLeft()
end

-- Function to place a torch
function placeTorch()
    turtle.select(3)
    turtle.placeUp()
end

-- Main program
local target = tonumber(arg[1])

if not target then
    print(""Usage: staircase <target>"")
    return
end

digStaircaseToYLevel(targetY)"
idApFRwf,bla bla bla,MagmaLP,Lua,Thursday 30th of May 2024 01:12:36 PM CDT,"mon = peripheral.wrap(""top"")
mon.setCursorPos(1,1)
mon.clear()

--function writeText(x, y, textColor, bgColor, text)
--    mon.setTextColor(colors[textColor])
--    mon.setBackgroundColor(colors[bgColor])
--    mon.setCursorPos(x, y)
--    mon.clearLine()
--    mon.write(text)
--end

--writeText(2, 3, ""red"", ""black"", ""Hallo, Minecraft!"")
--writeText(2, 5, ""red"", ""black"", ""bvladasdffasf"")

mon.setCursorPos(2,3)
mon.setTextColor(colors.red)
mon.write(""test hallo welt"")

mon.setCursorPos(2,4)
mon.setTextColor(colors.red)
mon.setBackgroundColor(colors.white)
mon.write(""test hallo welt"")
"
ermv26xb,Untitled,MeehoweCK,C++,Thursday 30th of May 2024 01:01:19 PM CDT,"// main.cpp
#include <iostream>
#include ""tablica.h""

int main() {
	TablicaInt tab{};
	std::cout << (int)tab << std::endl;		// 0
	auto rozmiar{ (int)tab };
	return 0;
}

// tablica.h
#pragma once

class TablicaInt {
	int rozmiar{};
	int* tab{ nullptr };
public:
	TablicaInt() = default;
	~TablicaInt();
	operator int() { return rozmiar; }
};

TablicaInt::~TablicaInt() {
	if (rozmiar > 0) {
		delete[] tab;
	}
	std::cout << ""~TablicaInt()\n"";
}"
pCFZvS3P,file explorer (use file name.type in images),JEXBLUK,Python,Thursday 30th of May 2024 12:56:48 PM CDT,"import tkinter as tk
from tkinter import filedialog
import pygame
from PIL import Image, ImageTk

class FileExplorer:
    def __init__(self, master):
        self.master = master
        self.master.title(""File Explorer"")

        self.file_label = tk.Label(master, text=""Selected File:"")
        self.file_label.pack()

        self.select_button = tk.Button(master, text=""Select File"", command=self.select_file)
        self.select_button.pack()

        self.read_button = tk.Button(master, text=""Read"", command=self.read_file, state=tk.DISABLED)
        self.read_button.pack()

        self.play_button = tk.Button(master, text=""Play"", command=self.play, state=tk.DISABLED)
        self.play_button.pack()

        self.stop_button = tk.Button(master, text=""Stop"", command=self.stop, state=tk.DISABLED)
        self.stop_button.pack()

        self.image_button = tk.Button(master, text=""View Image"", command=self.view_image, state=tk.DISABLED)
        self.image_button.pack()

        self.image_label = tk.Label(master)
        self.image_label.pack()

    def select_file(self):
        filename = filedialog.askopenfilename(filetypes=[(""MP3 files"", ""*.mp3""), (""Text files"", ""*.txt""), (""Image files"", ""*.jpg;*.jpeg;*.png;*.gif"")])
        if filename:
            self.file_label.config(text=f""Selected File: {filename}"")
            if filename.endswith("".txt""):
                self.read_button.config(state=tk.NORMAL)
                self.play_button.config(state=tk.DISABLED)
                self.stop_button.config(state=tk.DISABLED)
                self.image_button.config(state=tk.DISABLED)
                self.image_label.config(image=None)
            elif filename.endswith(("".jpg"", "".jpeg"", "".png"", "".gif"")):
                self.read_button.config(state=tk.DISABLED)
                self.play_button.config(state=tk.DISABLED)
                self.stop_button.config(state=tk.DISABLED)
                self.image_button.config(state=tk.NORMAL)
                self.update_image(filename)  # Update the displayed image
            else:
                self.read_button.config(state=tk.DISABLED)
                self.play_button.config(state=tk.NORMAL)
                self.stop_button.config(state=tk.DISABLED)
                self.image_button.config(state=tk.DISABLED)
                self.image_label.config(image=None)
            self.filename = filename

    def read_file(self):
        with open(self.filename, ""r"") as file:
            content = file.read()
        tk.messagebox.showinfo(""File Content"", content)

    def play(self):
        pygame.mixer.init()
        pygame.mixer.music.load(self.filename)
        pygame.mixer.music.play()
        self.play_button.config(state=tk.DISABLED)
        self.stop_button.config(state=tk.NORMAL)

    def stop(self):
        pygame.mixer.music.stop()
        self.play_button.config(state=tk.NORMAL)
        self.stop_button.config(state=tk.DISABLED)

    def update_image(self, filename):
        try:
            image = Image.open(filename)
            self.image = ImageTk.PhotoImage(image)
        except Exception as e:
            tk.messagebox.showerror(""Error"", str(e))

    def view_image(self):
        try:
            self.image_label.config(image=self.image)
        except AttributeError:
            tk.messagebox.showerror(""Error"", ""No image selected."")
        except Exception as e:
            tk.messagebox.showerror(""Error"", str(e))

def main():
    root = tk.Tk()
    app = FileExplorer(root)
    root.mainloop()

if __name__ == ""__main__"":
    main()"
Yd0sZMZb,Welcome Screen,MagmaLP,Lua,Thursday 30th of May 2024 12:51:42 PM CDT,"os.loadAPI(""ocs/apis/sensor"")
s = sensor.wrap(""right"")
mon = peripheral.wrap(""back"")
mon.setBackgroundColor(colors.black)
mon.setTextScale(3)
mon.setCursorPos(1,1)
mon.clear()

mon.setTextColor(colors.yellow)

shift = 0

function centerText(text, line)
    local x, y = mon.getSize()
    mon.setCursorPos(math.ceil((x / 2) - (text:len() / 2)) + shift, line)
    mon.write(text)
end

while true do
    mon.clear()
    centerText(""Welcome"", 2)
    
    for name, info in pairs(s.getTargets()) do
        centerText(name, 3)
    end
    
    shift = shift + 1
    
    sleep(3.5)
end
"
ZirDNQZd,Untitled,MeehoweCK,C++,Thursday 30th of May 2024 12:47:50 PM CDT,"#pragma once

template <typename T>
class Znak {
	int rozmiar{};
	T** tab{ nullptr };
public:
	Znak() = default;
	~Znak();
	void operator+=(T* obiekt);
	T*& operator[](int index);
	const T*& operator[](int index) const;
};

template <typename T>
Znak<T>::~Znak() {
	if (rozmiar > 0) {
		for (int i{}; i < rozmiar; ++i) {
			delete tab[i];
		}
		delete[] tab;
	}
}

template <typename T>
void Znak<T>::operator+=(T* obiekt) {
	if (rozmiar == 0) {
		tab = new T * [1];
	}
	else {
		T** temp{ new T * [rozmiar + 1] };
		for (int i{}; i < rozmiar; ++i) {
			temp[i] = tab[i];
		}
		delete[] tab;
		tab = temp;
	}
	tab[rozmiar] = obiekt;
	++rozmiar;
}"
18XWg993,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Thursday 30th of May 2024 12:40:42 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
....
......................................
......"
4DbpBunT,Untitled,MeehoweCK,C++,Thursday 30th of May 2024 12:14:24 PM CDT,"// obiekt.h
#ifndef OBIEKT_H
#define OBIEKT_H
#include <iostream>
using namespace std;

class Symbol //klasa abstrakcyjna
{
protected:
    char symbol;
public:
    Symbol(char s) : symbol{ s } {}
    virtual void drukuj(ostream&) const = 0;
    virtual ~Symbol() = default;
    char getSymbol() const { return symbol; }
};

class Kolko : public Symbol
{
public:
    Kolko() : Symbol{ 'O' } {}
    void drukuj(ostream& os) const
    {
        os << ""O "";
    }
};

class Krzyzyk : public Symbol
{
public:
    Krzyzyk() : Symbol{ 'X' } {}
    void drukuj(ostream& os) const
    {
        os << ""X "";
    }
};
#endif // OBIEKT_H

// gra.h
#ifndef GRA_H
#define GRA_H
#include <iostream>
#include ""obiekt.h""
using namespace std;

class Gra
{
    int w;
    Symbol* **tab;
public:
    Gra(int w);
    ~Gra();
    friend ostream& operator<<(ostream &os, const Gra &g);
    void wstaw(int wiersz, int kolumna, Symbol* znak);
    void operator-=(char znak);
};
#endif // GRA_H

//dodac element

// gra.cpp
#include ""gra.h""

Gra::Gra(int w) : w(w)
{
    tab = new Symbol**[w];
    for (int i=0; i<w; i++)
    {
        tab[i] = new Symbol *[w] {nullptr};
    }
}

Gra::~Gra()
{
    for (int i=0; i<w; i++)
    {
        for (int j=0; j<w; j++)
        {
            delete tab[i][j];
        }
        delete[] tab[i];
    }
    delete[] tab;
}

ostream& operator<<(ostream &os, const Gra &g)
{
    for (int i=0; i<g.w; i++)
    {
        for (int j=0; j<g.w; j++)
        {
            if(g.tab[i][j] != nullptr)
            {
                g.tab[i][j]->drukuj(os);
            }
            else
            {
                os << "". "";
            }
        }
        os << endl;
    }
    return os;
}

void Gra::wstaw(int x, int y, Symbol* znak)
{
    delete tab[y][x];
    tab[y][x] = znak;
}

void Gra::operator-=(char znak) {
    for (int i{}; i < w; ++i) {
        for (int j{}; j < w; ++j) {
            if (tab[i][j]) {
                if (tab[i][j]->getSymbol() == znak) {
                    delete tab[i][j];
                    tab[i][j] = nullptr;
                }
            }
        }
    }
}"
FjdS3iG6,qt5 update issues,dedanna1029,Bash,Thursday 30th of May 2024 12:11:29 PM CDT,"Problem 1: package qt5-qtwebengine-freeworld-5.15.16-1.fc39.x86_64 from @System requires qt5-qtbase(x86-64) = 5.15.12, but none of the providers can be installed
  - cannot install both qt5-qtbase-5.15.13-2.fc39.x86_64 from updates and qt5-qtbase-5.15.12-5.fc39.x86_64 from @System
  - cannot install the best update candidate for package qt5-qtwebengine-freeworld-5.15.16-1.fc39.x86_64
  - cannot install the best update candidate for package qt5-qtbase-5.15.12-5.fc39.x86_64
 Problem 2: problem with installed package qt5-qtwebengine-freeworld-5.15.16-1.fc39.x86_64
  - package qt5-qtwebengine-freeworld-5.15.16-1.fc39.x86_64 from @System requires qt5-qtbase(x86-64) = 5.15.12, but none of the providers can be installed
  - package qt5-qtwebengine-freeworld-5.15.16-1.fc39.x86_64 from rpmfusion-free-updates requires qt5-qtbase(x86-64) = 5.15.12, but none of the providers can be installed
  - cannot install both qt5-qtbase-5.15.13-2.fc39.x86_64 from updates and qt5-qtbase-5.15.12-5.fc39.x86_64 from @System
  - package python3-qt5-base-5.15.10-5.fc39.x86_64 from updates requires qt5-qtbase(x86-64) = 5.15.13, but none of the providers can be installed
  - cannot install the best update candidate for package python3-qt5-base-5.15.10-2.fc39.x86_64
================================================================================
 Package                Architecture Version                Repository     Size
================================================================================
Skipping packages with conflicts:
(add '--best --allowerasing' to command line to force their upgrade):
 qt5-qtbase             x86_64       5.15.13-2.fc39         updates       3.5 M
Skipping packages with broken dependencies:
 python3-qt5-base       x86_64       5.15.10-5.fc39         updates       3.2 M

Transaction Summary
================================================================================
Skip  2 Packages

Nothing to do.
Complete!
root@fedora:"
p2GQQQxB,この夏、Grand RP楽しいイベントはあるのだろうか。,Shpindlier,HTML,Thursday 30th of May 2024 12:08:48 PM CDT,"<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""><title></title></head><body>
	<div>
		<table style=""box-sizing: border-box; background: #ffffff; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td align=""center""><img src=""https://i.imgur.com/xJwSUsn.png"" alt=""Logo"" caption=""false""></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #2e2e2e; font-family: 'Arial'; font-size: 19px; letter-spacing: 0.01em; line-height: 29px; text-decoration: none; padding: 15px 34px; width: 550px;"">夏を楽しみにしていますか。Grand RPはもうすぐ大幅なアップデートをします！サーバーに遊ぶだけで、グランドコインを15枚ゲットできますよ～</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""How to start playing?"" style=""color: black; text-decoration: none;"" target=""_blank""><img src=""https://i.imgur.com/9ffLSx1.png"" alt=""How to start playing?""></a></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #2e2e2e; font-family: 'Arial'; font-size: 19px; letter-spacing: 0.01em; line-height: 29px; text-decoration: none; padding: 15px 34px; width: 550px;"">すべてのサーバーに「海賊物語」夏イベントを開催します。色々なタスクを完了して、報酬をゲットしましょう！</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""How to start playing?"" style=""color: black; text-decoration: none;"" target=""_blank""><img src=""https://i.imgur.com/fkolSa7.png"" alt=""How to start playing?""></a></td>
				</tr>
				<tr>
					<td style=""background: #FFDE2A; border-radius: 5px;"">
						<p style=""color: #2e2e2e; font-family: 'Arial'; font-size: 19px; letter-spacing: 0.01em; line-height: 29px; text-decoration: none; padding: 15px 34px; width: 550px;""><strong>タスクのタブにクリックして、夏イベントのメニューからタスクをお選びいただけます。</strong></p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""How to start playing?"" style=""color: black; text-decoration: none;"" target=""_blank""><img src=""https://i.imgur.com/BzczJIo.png"" alt=""How to start playing?""></a></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #2e2e2e; font-family: 'Arial'; font-size: 19px; letter-spacing: 0.01em; line-height: 29px; text-decoration: none; padding: 15px 34px; width: 550px;"">ゲームをスタートすると、サーバーの新しいデザインを楽しんだり、海賊スタイル賞を獲得したりできます。最初の6日間は海賊の服装を取得し、7日目にビニルの車両を入手できます。<br><br>夏イベントのメニューに表示されている海賊船は、所持品のアイテムとして取得し、世界に実際の海賊船を置いて出航しましょう！</p>
					</td>
				</tr>
				<tr>
					<td>
						<div style=""padding-top: 0px; box-sizing: border-box;"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">ところで、あなたはGrand Rpに登録して遊んでいるので、ご連絡いたしました。もし興味がなければ、私に知らせてください。</p>
						</div>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #2e2e2e; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>興味がなければ</a></td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" href=""https://gta5grand.com"">
						<p style=""color: #2e2e2e; font-family: 'Arial'; font-size: 14px; letter-spacing: 0.01em; line-height: 29px; text-decoration: none; padding: 15px 34px; width: 550px;"">gta5grand.com</p>
						</a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
wLkbBTp2,weather1,plarmi,Python,Thursday 30th of May 2024 12:08:00 PM CDT,"# Создать оконное приложение. Сделать так, чтобы с помощью API от openweathermap в окне выводилась
# информация о погоде в городе, название которого вводится в поле для ввода. Нужно сделать так,
# чтобы всё было на русском языке. Скомпилировать программу, exe файл вместе с исходным кодом загрузить на Github

from tkinter import *
import requests
from PIL import Image, ImageTk

def save_image(url):
    response = requests.get(url)
    with open(""weather_icon.png"", ""wb"") as file:
        file.write(response.content)
    image = Image.open(""weather_icon.png"")
    return ImageTk.PhotoImage(image)

def show_weather():
    response = requests.get(f""https://api.openweathermap.org/data/2.5/weather?q={weather_entry.get()}&appid=3faa8133371792ef1aacd11949472dc8"").json()
    img = save_image(f""https://openweathermap.org/img/wn/{response[""weather""][0][""icon""]}@2x.png"")
    picture.config(image=img, background=""cyan"")
    picture.image = img
    weather_info.config(text=f""{(response[""weather""][0][""description""]).capitalize()}\n""
                             f""Температура: {round(response[""main""][""temp""] - 273.15)} °C\n""
                             f""Скорость ветра: {response[""wind""][""speed""]} м/c"")


window = Tk()
window.geometry(""500x500"")
window.title(""Прогноз погоды"")
window.resizable(False, False)

welcome_text = Label(window, text=""Прогноз погоды"", font=(""Times New Roman"", 40, ""bold""))
welcome_text.pack()

weather_entry = Entry(window)
weather_entry.pack()
weather_entry.focus()

btn = Button(window, text=""Показать погоду"", command=show_weather)
btn.pack(pady=10)

picture = Label(window)
picture.pack()

weather_info = Label(window, font=(""Times New Roman"", 30))
weather_info.pack()


window.mainloop()"
reFuT1Gq,prob C,fooker,C++,Thursday 30th of May 2024 11:34:37 AM CDT,"
void solve() {
    ll n, m;
    std::cin >> n >> m;
 
    std::vector<std::pair<ll, ll>> pc, tc;
    ll p[n + m + 2], t[n + m + 2];
    for (ll i = 1; i <= n + m + 1; i++) {
        std::cin >> p[i];
    }
 
    for (ll i = 1; i <= n + m + 1; i++) {
        std::cin >> t[i];
    }  
 
    for (ll i = 1; i <= n + m + 1; i++) {
        if (p[i] > t[i]) {
            pc.push_back({p[i], i});
        } else {
            tc.push_back({t[i], i});
        }
    }
 
    std::vector<ll> ans(n + m + 2);
    ll fin = 0;
 
    if (pc.size() > n) {
        for (ll i = 0; i < n; i++) fin += pc[i].first;
        for (ll i = n; i < pc.size(); i++) fin += t[pc[i].second];
        for (ll i = 0; i < tc.size(); i++) fin += tc[i].first;
 
        for (ll i = 0; i < n; i++) {
            ans[pc[i].second] = fin - pc[i].first + pc[n].first - t[pc[n].second];
        }
 
        for (ll i = n; i < pc.size(); i++) {
            ans[pc[i].second] = fin - t[pc[i].second];
        }
 
        for (ll i = 0; i < tc.size(); i++) {
            ans[tc[i].second] = fin - tc[i].first;
        }
    } else {
        for (ll i = 0; i < m; i++) fin += tc[i].first;
        for (ll i = m; i < tc.size(); i++) fin += p[tc[i].second];
        for (ll i = 0; i < pc.size(); i++) fin += pc[i].first;
 
        for (ll i = 0; i < m; i++) {
            ans[tc[i].second] = fin - tc[i].first + tc[m].first - p[tc[m].second];
        }
 
        for (ll i = m; i < tc.size(); i++) {
            ans[tc[i].second] = fin - p[tc[i].second];
        }
 
        for (ll i = 0; i < pc.size(); i++) {
            ans[pc[i].second] = fin - pc[i].first;
        }
    }
    for (ll i = 1; i <= n + m + 1; i++) {
        std::cout << ans[i] << "" \n""[i == n + m + 1];
    }
}
"
gXtLGEZL,cinemas.jsx,alexis82,JavaScript,Thursday 30th of May 2024 11:17:01 AM CDT,"import { useEffect, useState } from ""react"";

export function Cinemas() {
    const [cinemas, setCinemas] = useState([]);
    const [cinemasLoading, setCinemasLoading] = useState(false);
    const [errorCinemas, setErrorCinemas] = useState(null);

    useEffect(() => {
        setCinemasLoading(true);
        fetch('http://localhost:3000/cinema')
            .then((response) => {
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                return response.json();
            })
            .then((res) => {
                console.log('Fetched cinemas:', res);
                setCinemas(res);
                setCinemasLoading(false);
            })
            .catch(error => {
                console.error('Fetch error:', error);
                setErrorCinemas(error);
                setCinemasLoading(false);
            });
    }, []);
    
        return (
        <div>
            {cinemasLoading ? <p>Loading...</p> :
                errorCinemas ? <p>Error loading cinemas: {errorCinemas.message}</p> :
                    cinemas.length === 0 ? <p>No cinemas available</p> :
                        cinemas.map(c => (
                            <div key={c.id}>
                                <h2>{c.nome}</h2>
                                <p>{c.città}</p>
                                <p>{c.email}</p>
                            </div>
                        ))}
        </div>
    );

}

export default Cinemas;"
9qbq0zVi,Untitled,Josif_tepe,C++,Thursday 30th of May 2024 11:09:23 AM CDT,"int n, x, y, z;
   int dp[10055];
int rec(int at) {
    if(at == 0) {
        return 0;
    }
    if(dp[at] != -1) {
        return dp[at];
    }
    int res = -2e7;
    if(at - x >= 0) {
        res = max(res, rec(at - x) + 1);
    }
    if(at - y >= 0) {
        res = max(res, rec(at - y) + 1);
    }
    if(at - z >= 0) {
        res = max(res, rec(at - z) + 1);
    }
    return dp[at] = res;
}
int maximizeTheCuts(int n, int x, int y, int z)
    {
        this->n = n;
        this->x = x;
        this->y = y;
        this->z = z;
        memset(dp, -1, sizeof dp);
        return rec(n) > 0 ? rec(n) : 0;
    }"
daMftHhp,d,x2w,Bash,Thursday 30th of May 2024 11:06:43 AM CDT,"x
































x"
3FpT92Ww,d,x2w,C#,Thursday 30th of May 2024 11:06:35 AM CDT,"d


























d"
uns7hvBF,Untitled,Josif_tepe,C++,Thursday 30th of May 2024 11:04:45 AM CDT,"int dp[1005][1005];

  int lengthOfLongestAP(int A[], int n) {
        int res = 2;
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                dp[i][j] = 2;
            }
        }
        for(int j = n - 2; j > 0; j--) {
            int i = j - 1;
            int k = j + 1;
            while(i >= 0 and k < n) {
                if(A[i] + A[k] == 2 * A[j]) {
                    dp[i][j] = dp[j][k] + 1;
                    i--;
                    k++;
                }
                else if(A[i] + A[k] < 2 * A[j]) {
                    k++;
                }
                else {
                    i--;
                }
            }
        }
        for(int i= 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                res = max(res, dp[i][j]);
            }
        }
        return res;
    }"
84sGHAPK,generovani nahodne matice,max2201111,Python,Thursday 30th of May 2024 10:59:56 AM CDT,"import numpy as np

def generate_row(label):
    if label == 1:
        intervals = [(0.0, 0.1), (0.2, 0.3), (0.4, 0.5), (0.6, 0.7), (0.8, 0.9)]
    else:
        intervals = [(0.1, 0.2), (0.3, 0.4), (0.5, 0.6), (0.7, 0.8), (0.9, 1.0)]
    
    row = []
    for i in range(4):  # každé dva sloupce z jednoho intervalu
        interval = intervals[i]
        row.extend(np.random.uniform(interval[0], interval[1],1))
    
    row.append(label)
    return row

# Vytvoření matice 50x6
rows, cols = 50, 4
matrix = []

for _ in range(rows):
    label = np.random.choice([0, 1])
    row = generate_row(label)
    matrix.append(row)

# Zamíchejte 10 % labelů
num_labels_to_shuffle = int(rows)
indices_to_shuffle = np.random.choice(rows, num_labels_to_shuffle, replace=True)

# Extrahujte a zamíchejte vybrané labely
labels_to_shuffle = [matrix[i][-1] for i in indices_to_shuffle]
np.random.shuffle(labels_to_shuffle)

# Aktualizujte původní matici s novými, zamíchanými labely
for i, idx in enumerate(indices_to_shuffle):
    matrix[idx][-1] = labels_to_shuffle[i]

# Tisk matice s hranatými závorkami pro jednotlivé řádky oddělené čárkami
output = "",\n"".join(f""[{','.join(map(str, row))}]"" for row in matrix)
print(output)"
iuDhBBU3,final VK ok vse 3,max2201111,Python,Thursday 30th of May 2024 10:57:41 AM CDT,"#Navod na pouziti, Mgr. Hynek Mlčoušek, v Brne 2.5.2024
#Ulozte do lokalniho souboru u sebe na PC data tohoto tvaru vzdy ukoncene 0 ci 1 (jde o uceni s ucitelem: 1 = nemocny, 0 = prezil/zdravy, ve vystupu bude zelena znacit 0, cervena 1)  a bez znaku #; pozor na "",""

# [ [23.657800719276743,18.859916797201468,0],
# [22.573729142097473,17.96922325097786,0],
# [32.55342396968757,29.463651408558803,0],
# [6.718035041529263,25.704665468161718,1],
# [14.401918566243225,16.770856492924658,0],
# [17.457907312962234,21.76521470574044,0],
# [20.02796946568093,73.45445954770891,1],
# [30.295138369778076,62.901112886193246,1],
# [15.128977804449633,32.40267702110393,0],
# [30.179457395820013,58.982492125646104,1],
# [28.01649701854089,63.92781357637711,1],
# [16.791838457871147,42.33482314089884,0],
# [10.583694293380976,19.61926728942497,0],
# [26.634447074406467,91.96624817360987,1],
# [26.217868623367643,36.400293587062976,0],
# [17.689396788624936,60.79797114006423,1],
# [33.17193822527976,66.75277364959176,1],
# [23.793952755709153,22.57501437360518,0]]

#kliknete na cerne tlacitko s trojuhelnickem vlevo nahore
#pod kodem se objevi moznost spustit dialogove okenko, kliknete na nej
#soubor, ktery mate z bodu vyse vyberte a nahrajte
#Najdete v tomto kodu retezec:
###ZDE VLOZTE DATA OD NOVYCH PACIENTU

#Vlozte do pole
# new_persons_results = []
# data o nekolika malo novych pacientech bez ukoncovaci 0 a 1, ale se stejnym poctem sloupcu jako ma soubor z Vaseho lokalniho disku, vyse by tedy toto bylo rovno 2
#kod vyhodi hned po natrenovani, (jehoz prubeh muzete sledovat na modre progres bare) pro kazdy radek z new_persons_results bilo-sedo-cerne ctverecky vznikle z normalizace poskytnutych dat a ukoncovaci ctverecek cerveny pripadne zeleny
#zaroven s tim se vypise realne cislo mezi 0 a 1 znacici jak moc je pacient zdravy (blizke 0) ci nemocny (blizke 1)
#cisla uprostred pak indikuji zadany oranzovy semafor.
#je na lekarich nastavit tresholdy (tedy pravdepodobnosti: cisla mezi 0 a 1) ktere pak daji zaver, zda je pacient cerveny, oranzovy ci zeleny

# prosim o komnetare a vysledky na realnych datech, je zadouci aby radku v matici, tedy pacientu byly stovky a sloupcu desitky
# Moznosti vyuziti: onkologicka diagnoza vs. zdrava kontorlni skupina, diabetes (pritomnost/nepritomnost), testovani noveho leku oproti placebu atd.

#kod zaroven vyhodi confusion matici, tedy mozne True Negative a False Positive plus spravne zarazene hodnoty spolu s presnosti,F1 score recall atd.
#poznamka ke kodu: jde o epxerimentalni verzi, ktera krome skutecne potrebneho kodu obsahuje ladici informace, ruzne duplicity, nadbytecne prikazy atd.
# Na uvod behu programu se pro kontorlu vypise poskytnuta matice a jeji normalizovana verze, je treba sjet jezdcem napravo nize na obrazky a dalsi vystupy

#Dekuji profesoru Petru Dostalovi za namet k teto praci a poskytnuta data, byt je potreba mit data realna

import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm import tqdm
from IPython.display import display, Javascript
import pandas as pd
import io
import shutil
import os
import ast
import seaborn as sns
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA

display(Javascript('IPython.OutputArea.auto_scroll_threshold = 9999;'))

label_colors = {0: [0, 128, 0], 1: [255, 0, 0]}
label_colors_testing = {0: [0, 128, 0], 1: [255, 0, 0]}

%matplotlib inline

# Function to create images based on predictions
def create_image(data, predictions, label_colors):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)
        
        # Use the specified color for the last column based on the label
        image[i, -1] = label_colors[predictions[i]]

    return image

def create_imageN(data, predictions, label_colors=None):
    num_training_rows = len(data)  # Set the number of rows based on the data
    num_columns = len(data[0])

    image_training = np.zeros((num_training_rows, num_columns + 1, 3), dtype=np.uint8)

    min_pixel_value = np.min(X_train_normalized)
    max_pixel_value = np.max(X_train_normalized)

    for i in range(num_training_rows):
        # Normalize the first columns independently
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [min_pixel_value, max_pixel_value], [0, 255]))
            image_training[i, j] = np.array([pixel_value] * 3)

        # Normalize the last column separately to achieve grayscale
        pixel_value_last = int(np.interp(data[i][-1], [min_pixel_value, max_pixel_value], [0, 255]))
        image_training[i, -1] = np.array([pixel_value_last] * 3)

        # Use the specified color for the last column based on the label
        if label_colors is not None:
            image_training[i, -1] = label_colors[predictions[i]]

    return image_training

# Load data from a file
uploaded = files.upload()

# Tento kód otevře dialogové okno pro výběr souboru z vašeho počítače.
# Předpokládáme, že jste nahráli CSV soubor
for fn in uploaded.keys():
    print(f'User uploaded file ""{fn}"" with length {len(uploaded[fn])} bytes')
    path = io.BytesIO(uploaded[fn])
    df = pd.read_csv(path)
    print(df.head())  # Vypíše prvních pět řádků DataFrame

all_results = []
for filename in uploaded.keys():
    original_path = f""/content/{filename}""
    destination_path = os.path.join(""/content/"", ""DATA2"")
    shutil.move(original_path, destination_path)
    print(f""Soubor {filename} byl přesunut do {destination_path}"")

file_path = '/content/DATA2'  # Cesta k souboru
with open(file_path, 'r') as file:
    code = file.read()

A_list = ast.literal_eval(code)

# Převod na NumPy pole
A = np.array(A_list)

# Assign values to variables dynamically based on the rows of matrix A
for i, row in enumerate(A, start=1):
    globals()[f""person{i}_results""] = list(row)

# Print the assigned variables
for i in range(1, len(A) + 1):
    all_results.append(f""person{i}_results"")

result_variables = []

# Loop through the variable names and get the corresponding variables using globals()
for var_name in all_results:
    result_variables.append(globals()[var_name])

# Now, result_variables contains the variables with names specified in variable_names
all_results = result_variables
new_persons_results = result_variables

labels = [results[-1] for results in all_results]

# Odstranění posledního sloupce z datasetu
data = [results[:-1] for results in all_results]

# Definice počtu řádků pro trénování a testování
num_training_rows = 50
num_testing_rows = 50

# Rozdělení datasetu na trénovací a testovací sady
X_train, X_test, y_train, y_test = data[:num_training_rows], data[:num_testing_rows], labels[:num_training_rows], labels[:num_testing_rows]

# Převod na NumPy pole
X_train = np.array(X_train)
X_test = np.array(X_test)
y_train = np.array(y_train)
y_test = np.array(y_test)

# Normalizace dat (s ohledem na -1)
min_values = np.min(X_train[X_train != -1], axis=0)
max_values = np.max(X_train[X_train != -1], axis=0)
X_train_normalized = (X_train - min_values) / (max_values - min_values)

import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm.notebook import tqdm_notebook

# Průměry (mu) a směrodatné odchylky (sigma)
mu = np.mean(X_train, axis=0)
sigma = np.std(X_train, axis=0)

# Normalizace každého sloupce zvlášť
X_train_standardized = (X_train - mu) / sigma
X_test_standardized = (X_test - mu) / sigma

# Vylepšený model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(256, activation='relu', input_shape=(len(X_train[0]),)),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Použití Adam optimizer s learning rate schedulerem
lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay(
    initial_learning_rate=1e-3,
    decay_steps=10000,
    decay_rate=0.9
)
optimizer = tf.keras.optimizers.Adam(learning_rate=lr_schedule)

# Kompilace modelu
model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy'])

# Lists to store accuracy values
accuracy_history = []

# Create images for the training data
image_training = np.zeros((num_training_rows, len(X_train[0]) + 1, 3), dtype=np.uint8)

min_pixel_value = np.min(X_train_standardized, axis=0)
max_pixel_value = np.max(X_train_standardized, axis=0)

for i, label in enumerate(y_train):
    for j in range(len(X_train_standardized[0])):
        pixel_value = int(np.interp(X_train_standardized[i][j], [min_pixel_value[j], max_pixel_value[j]], [0, 255]))
        image_training[i, j] = np.array([pixel_value] * 3)
    image_training[i, -1] = np.array([128, 128, 128])
    if label == 0:
        image_training[i, -1] = np.array([0, 128, 0])
    elif label == 1:
        image_training[i, -1] = np.array([255, 0, 0])

# Training the model
epochs = 139
new_persons_results = [
    [0.0697400418162155,0.048866857264291144,0.28641370855472326,0.2721997143501177],
    [0.14159602676789837,0.1747877034447084,0.35616475477076587,0.3349487498168958],
    [0.11173253224821383,0.18794447828677996,0.3254176976987727,0.3413023918178341],
    [0.09630381764770453,0.05449810810962146,0.26767869268577593,0.21134056616439179],
    [0.17834821693532132,0.18466538062866059,0.3199711146234129,0.3968137366419059],
    [0.06045619825051427,0.05598696779492471,0.21592696351263593,0.22040624440430515],
    [0.08666288081774745,0.015388075894536557,0.2041876616268118,0.20706370434663773],
    [0.03130184508345673,0.015266595360551428,0.27183777103946916,0.2867664339707584],
    [0.05547626859495597,0.05808291988099526,0.2542166524648567,0.2573313511422864],
    [0.1772, 0.0076, 0.3565, 0.2584],
]

import sys

for epoch in tqdm_notebook(range(epochs)):
    history = model.fit(X_train_standardized, np.array(y_train), epochs=1, verbose=0, shuffle=False)
    accuracy_history.append(history.history['accuracy'][0])

    if epoch == 1:
        # Normalize the testing data
        X_test_standardized = (X_test - mu) / sigma
        y_pred_after_2nd_epoch = model.predict(X_test_standardized)
        y_pred_binary_after_2nd_epoch = [1 if pred >= 0.5 else 0 for pred in y_pred_after_2nd_epoch]
        image_testing_before_2nd_epoch = create_image(X_test_standardized, y_pred_binary_after_2nd_epoch, label_colors_testing)

    if epoch >= epochs-1:
        print(f""HERE HERE Epoch: {epoch}, Epochs: {epochs}\n"")
        sys.stdout.flush()

        # Iterate through new persons
        for idx, personNEW_results in enumerate(new_persons_results, start=0):
            # Ensure that personNEW_results has the same number of features as the model expects
            assert len(personNEW_results) == len(X_train[0]), ""Mismatch in the number of features.""

            personNEW_results_standardized = (np.array(personNEW_results) - mu) / sigma

            personNEW_prediction = model.predict(np.array([personNEW_results_standardized]))
            personNEW_label = 1 if personNEW_prediction >= 0.5 else 0
            y_pred_after_50_epochs = model.predict(X_test_standardized)
            y_pred_binary_after_50_epochs = [1 if pred >= 0.5 else 0 for pred in y_pred_after_50_epochs]
            image_testing_after_50_epochs = create_image(X_test_standardized, y_pred_binary_after_50_epochs, label_colors_testing)

            # Create an image for the new person
            image_personNEW = create_imageN([personNEW_results_standardized], [personNEW_label], label_colors)

            # Display the images
            plt.figure(figsize=(5, 5))
            plt.imshow(image_personNEW)
            plt.title(f""New Person {idx}\nLabel: {personNEW_label}, Prediction: {personNEW_prediction}, personNEW_results: {personNEW_results}"")
            plt.axis(""off"")
            plt.show()

# Display the images
plt.figure(figsize=(25, 15))
plt.subplot(2, 2, 1)
plt.imshow(image_training)
plt.title(""Training Data"")
plt.axis(""off"")

plt.subplot(2, 2, 2)
plt.imshow(image_testing_before_2nd_epoch)
plt.title(""Testing Data (2nd Epoch)"")
plt.axis(""off"")

plt.subplot(2, 2, 3)
plt.imshow(image_testing_after_50_epochs)
plt.title(f""Testing Data ({epochs} Epochs)"")
plt.axis(""off"")

plt.subplot(2, 2, 4)
plt.imshow(image_personNEW)
plt.title(f""New Person\nLabel: {personNEW_label},[{personNEW_prediction}]"")
plt.axis(""off"")

plt.subplot(6, 6, 5)
plt.imshow(image_personNEW)
plt.title(f""X_standard111\nLabel: {personNEW_label},[{X_test_standardized}]"")
plt.axis(""off"")


# Plot accuracy history
plt.figure(figsize=(12, 5))
plt.plot(range(1, epochs + 1), accuracy_history, marker='o')
plt.title('Accuracy Over Epochs')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.grid()

# Print standardized data
print(""Standardized PersonNEW Data:"")
print(personNEW_results_standardized)

plt.show()

print(""X_train before standardization:"")
print(X_train)
print(""X_test before standardization:"")
print(X_test)

print(""KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK"")
print(X_test)
print(""HHHHHHHHHHHHHHHHHHHHHHHHHHHHHH"")
print(X_train)
print(""LLLLLLLLLLLLLLLLLLLLLLLLLLLLL"")

# Assuming X_test_standardized and y_test are your test set data
y_pred_binary = [1 if pred >= 0.5 else 0 for pred in model.predict(X_test_standardized)]

# Create confusion matrix using the test set
conf_matrix = confusion_matrix(y_test, y_pred_binary)
print(conf_matrix)

plt.figure(figsize=(6, 6))
sns.heatmap(conf_matrix, annot=True, fmt=""d"", cmap=""Blues"", xticklabels=['Predicted 0', 'Predicted 1'], yticklabels=['Actual 0', 'Actual 1'])
plt.xlabel(""Predicted Label"")
plt.ylabel(""True Label"")
plt.title(""Confusion Matrix"")
plt.show()

# Compile the model again
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
print(""Training Start"")
for epoch in tqdm_notebook(range(100), desc=""Training Progress""):
    model.fit(np.array(X_train_standardized), np.array(y_train), epochs=1, verbose=0)
print(""Training Complete"")

# Generate predictions from the model
predictions = (model.predict(X_test_standardized) > 0.5).astype(int)

# Convert y_test to a numpy array and then to binary labels
y_test_array = np.array(y_test)  # Convert y_test to a numpy array
y_test_binary = (y_test_array > 0.5).astype(int)  # Convert to binary

# Compute the confusion matrix
conf_matrix = confusion_matrix(y_test_binary, predictions)

# Evaluate the model's performance
accuracy = accuracy_score(y_test_binary, predictions)
precision = precision_score(y_test_binary, predictions)
recall = recall_score(y_test_binary, predictions)
f1 = f1_score(y_test_binary, predictions)

# Display the confusion matrix
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

print(f""Accuracy: {accuracy:.4f}"")
print(f""Precision: {precision:.4f}"")
print(f""Recall: {recall:.4f}"")
print(f""F1 Score: {f1:.4f}"")

print(f""Confusion Matrix2122:\n{conf_matrix}"")

def find_best_pair(min_val, max_val, num_features, model, min_values, max_values):
    best_pair = None
    best_prediction = 1
    for _ in range(1000):  # Number of iterations to find the best pair
        new_data = np.random.uniform(min_val, max_val, num_features)
        new_data_standardized = (new_data - mu) / sigma
        
        # Suppress model output
        tf.get_logger().setLevel('ERROR')
        with tf.device('/CPU:0'):  # Ensure to run on CPU to minimize unwanted logs
            prediction = model.predict(np.array([new_data_standardized]), verbose=0)[0][0]
        tf.get_logger().setLevel('INFO')
        
        if prediction < best_prediction:
            best_prediction = prediction
            best_pair = new_data
    return best_pair, best_prediction

best_pair, best_prediction = find_best_pair(min_values, max_values, len(X_train[0]), model, min_values, max_values)

def find_worst_pair(min_val, max_val, num_features, model, min_values, max_values):
    worst_pair = None
    worst_prediction = 0
    for _ in range(1000):  # Number of iterations to find the best pair
        new_data = np.random.uniform(min_val, max_val, num_features)
        new_data_standardized = (new_data - mu) / sigma
        
        # Suppress model output
        tf.get_logger().setLevel('ERROR')
        with tf.device('/CPU:0'):  # Ensure to run on CPU to minimize unwanted logs
            prediction = model.predict(np.array([new_data_standardized]), verbose=0)[0][0]
        tf.get_logger().setLevel('INFO')
        
        if prediction > worst_prediction:
            worst_prediction = prediction
            worst_pair = new_data
    return worst_pair, worst_prediction

worst_pair, worst_prediction = find_worst_pair(min_values, max_values, len(X_train[0]), model, min_values, max_values)

print(f""Best Pair: {best_pair}, Best Prediction: {best_prediction}"")
print(f""Worst Pair: {worst_pair}, Worst Prediction: {worst_prediction}"")

# Vizualizace výsledků pomocí PCA
X_standardized = (X - mu) / sigma
pca = PCA(n_components=2)  # Snížení na 2 komponenty
X_pca = pca.fit_transform(X_standardized)

plt.figure()
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y)
plt.xlabel('První hlavní komponenta')
plt.ylabel('Druhá hlavní komponenta')
plt.title('PCA na vašich datech')
plt.show()

# Vizualizace výsledků pomocí LDA
lda = LDA(n_components=1)
X_lda = lda.fit_transform(X_standardized, y)

plt.figure()
plt.scatter(X_lda[:, 0], np.zeros_like(X_lda), c=y)
plt.xlabel('První diskriminační komponenta')
plt.title('LDA s učitelem')
plt.show()

# Vytvoření obrazu pro trénovací data
min_pixel_value = -3
max_pixel_value = 3

image_training = np.zeros((len(X_train_standardized), len(X_train_standardized[0]) + 1, 3), dtype=np.uint8)

for i, label in enumerate(y_train):
    for j in range(len(X_train_standardized[0])):
        pixel_value = int(np.interp(X_train_standardized[i][j], [min_pixel_value, max_pixel_value], [0, 255]))
        image_training[i, j] = np.array([pixel_value] * 3)
    image_training[i, -1] = np.array([128, 128, 128])  # Šedý sloupec pro všechny řádky
    if label == 0:
        image_training[i, -1] = np.array([0, 128, 0])  # Zelený sloupec pro label 0
    elif label == 1:
        image_training[i, -1] = np.array([255, 0, 0])  # Červený sloupec pro label 1"
frG9StNG,def modifica,FireFighter_85,Python,Thursday 30th of May 2024 10:56:02 AM CDT,"@app.route('/modificautente/<int:id>', methods=['GET', 'POST'])
def modificautente(id):
    # Dizionari per i campi delle opzioni
    sedi = {""Centrale"": ""Centrale"", ""Agordo"": ""Agordo"", ""Cortina"": ""Cortina"", ""Feltre"": ""Feltre"", ""Pieve"": ""Pieve"",
            ""Santo Stefano"": ""Santo Stefano""}
    turni = {""A"": ""A"", ""B"": ""B"", ""C"": ""C"", ""D"": ""D"", ""G"": ""G""}
    qualifiche = {""C.R.E."": ""C.R.E."", ""C.R."": ""C.R."", ""C.S.E."": ""C.S.E."", ""C.S."": ""C.S."", ""V.C."": ""V.C."",
                  ""V.E."": ""V.E."", ""Vig."": ""Vig."", ""I.A."": ""I.A."", ""OE"": ""OE""}
    patenti = {""None"": ""None"", ""1"": ""1"", ""2"": ""2"", ""3"": ""3"", ""4"": ""4"", ""2L"": ""2L""}
    so = {""None"": ""None"", ""SO-115"": ""SO-115"", ""x"": ""x""}
    abilitazione = {""None"": ""None"", ""x"": ""x""}
    abilitazione12 = {""None"": ""None"", ""1"": ""1"", ""2"": ""2""}
    saf = {""None"": ""None"", ""1A"": ""1A"", ""2A"": ""2A"", ""1B"": ""2B"", ""Basico"": ""Basico"", ""Avanzato"": ""Avanzato""}
    nbcr = {""None"": ""None"", ""1"": ""1"", ""2"": ""2"", ""3"": ""3""}
    usar = {""None"": ""None"", ""L"": ""L"", ""M"": ""M"", ""H"": ""H""}

    try:
        conn = get_db_connection()
        cursor = conn.cursor()

        logging.info(f""Connessione al database stabilita per l'utente con id: {id}"")

        if request.method == 'POST':
            fields = ['Sede', 'Turno', 'Ruolo', 'Qualifica', 'Cognome', 'Nome', 'Data di Nascita', 'Patente',
                      'Operatore SO', 'Pat. Nautica', 'Fluviale', 'SAF', 'NBCR', 'Radiometria', 'NIA',
                      'Ruspista', 'USAR', 'Pat. Gatto', 'Pat. Motoslitta', 'Squadra Valanghe', 'TAS', 'Puntellamenti',
                      'Leggi Spec. / Mal.']

            data = {field: request.form[field] for field in fields}

            app.logger.info(f""Dati ricevuti dal form: {data}"")  # Aggiunta del logging per i dati ricevuti dal form


            query = f""""""
                UPDATE Servizio.Organico
                SET {"", "".join([f""{field} = %s"" for field in fields if field not in ['id', 'Turno1', 'Turno2', 'Turno3']])}
                WHERE id = %s
            """"""

            values = tuple(data[field] for field in fields) + (id,)

            app.logger.info(f""Query SQL: {query}, Valori: {values}"")  # Aggiunta del logging per la query SQL e i valori

            cursor.execute(query, values)
            conn.commit()

            app.logger.info(f""Dati aggiornati con successo per l'utente con id: {id}"")

            cursor.close()
            conn.close()

            return redirect('/organico')

        query = ""SELECT * FROM Servizio.Organico WHERE id = %s""
        cursor.execute(query, (id,))
        user = cursor.fetchone()

        if user is None:
            cursor.close()
            conn.close()
            logging.warning(f""Utente con id: {id} non trovato"")
            return ""Utente non trovato"", 404

        user_dict = dict(zip(cursor.column_names, user))

        cursor.close()
        conn.close()

        columns_to_exclude = ['id', 'Turno1', 'Turno2', 'Turno3']
        user_filtered = {key: value for key, value in user_dict.items() if key not in columns_to_exclude}

        return render_template('modificautente.html', user=user_filtered, sedi=sedi, turni=turni, qualifiche=qualifiche,
                               patenti=patenti, so=so, abilitazione=abilitazione, saf=saf, nbcr=nbcr,
                               abilitazione12=abilitazione12, usar=usar)

    except OperationalError as e:
        logging.error(f""Errore durante l'aggiornamento dei dati nel database: {e}"")
        if conn:
            conn.rollback()
        return ""Si è verificato un errore durante il salvataggio delle modifiche. Si prega di riprovare più tardi."", 500
    except Exception as e:
        logging.error(f""Errore generico: {e}"")
        if conn:
            conn.rollback()
        return ""Si è verificato un errore generico. Si prega di riprovare più tardi."", 500"
5YgxaTxP,Accordion events with BootStrap,eventsmanager,HTML 5,Thursday 30th of May 2024 10:42:13 AM CDT,"<div class=""accordion"" id=""eventsAccordion"">
  [events_list tag=""your_tag"" scope=""future"" limit=""10""]
  <div class=""accordion-item"">
    <h2 class=""accordion-header"" id=""heading#_EVENTID"">
      <button class=""accordion-button"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#collapse#_EVENTID"" aria-expanded=""true"" aria-controls=""collapse#_EVENTID"">
        #_EVENTNAME - #_EVENTDATES at #_EVENTTIMES
      </button>
    </h2>
    <div id=""collapse#_EVENTID"" class=""accordion-collapse collapse"" aria-labelledby=""heading#_EVENTID"" data-bs-parent=""#eventsAccordion"">
      <div class=""accordion-body"">
        <h3>#_EVENTNAME</h3>
        <p>#_EVENTEXCERPT</p>
        <p>#_EVENTNOTES</p>
        #_BOOKINGFORM
      </div>
    </div>
  </div>
  [/events_list]
</div>"
LV34HAib,Untitled,Josif_tepe,C++,Thursday 30th of May 2024 10:39:13 AM CDT,"class Solution
{
public:
   string s;
int n;
unordered_map<string, bool> exist;
int dp[2222];
int rec(int at) {
    if(at >= s.size()) {
        return 1;
    }
    if(dp[at] != -1) {
        return dp[at];
    }
    int res = 0;
    string tmp = """";
    for(int i = at; i < s.size(); i++) {
        tmp += s[i];
        if(exist[tmp]) {
            res = max(res, rec(at + tmp.size()));
        }
    }
    return dp[at] = res;
}
int wordBreak(int n, string s, vector<string> &dictionary) {
        this->n = n;
        this->s = s;
        for(string s : dictionary) {
            exist[s] = true;
        }
        memset(dp, -1, sizeof dp);
        return rec(0);
}
};"
E8wCWEVK,KFMapVote.ini - New Rotation,poosh,INI file,Thursday 30th of May 2024 10:38:44 AM CDT,"[KFMapVoteV2.KFVotingHandler]
VoteTimeLimit=60
ScoreBoardDelay=5
bAutoOpen=True
MidGameVotePercent=50
bScoreMode=False
bAccumulationMode=False
bEliminationMode=False
MinMapCount=2
MapVoteHistoryType=xVoting.MapVoteHistory_INI
RepeatLimit=0
DefaultGameConfig=0
bDefaultToCurrentGameType=True
bMapVote=True
bKickVote=True
bMatchSetup=False
KickPercent=51
bAnonymousKicking=False
MapListLoaderType=xVoting.DefaultMapListLoader
ServerNumber=1
CurrentGameConfig=4
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Medium"",GameName=""01. Classic Medium"",Mutators=,Options=""GameLength=1"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""LateDoom"",GameName=""23. Late Pure Doom"",Options=""GameLength=23"")
; GameConfig=(GameClass=""ScrnBalanceSrv.FscGame"",Prefix=""KF-"",Acronym=""FSC"",GameName=""41. FTG Survival Competition"",Options=""GameLength=40"")
; GameConfig=(GameClass=""ScrnBalanceSrv.FtgGame"",Prefix=""KF-"",Acronym=""cFTG"",GameName=""50. Follow The Guardian"",Options=""GameLength=50"")
; GameConfig=(GameClass=""ScrnBalanceSrv.TurboGame"",Prefix=""KF-"",Acronym=""Turbo"",GameName=""71. Turbo Floor"",Options=""GameLength=4"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""HalfLong"",GameName=""73. Half-Long Game"",Options=""GameLength=73"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""PatFight"",GameName=""81. Fight the Patriarchs"",Options=""GameLength=81"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Event"",GameName=""00. ScrN + Event Zeds Long"",Mutators=,Options=""GameLength=0"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""1016"",GameName=""10. KF Classic 1016"",Mutators=,Options=""GameLength=10"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""1034"",GameName=""11. ScrN Classic 1034"",Mutators=,Options=""GameLength=11"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Head"",GameName=""12. Headshots Prefered"",Mutators=,Options=""GameLength=12"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Noob"",GameName=""13. Noob Trinity"",Mutators=,Options=""GameLength=13"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""PureDooM"",GameName=""21. Pure DooM"",Mutators=,Options=""GameLength=21"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""D3OTC"",GameName=""22. On The Doom Clock"",Mutators=,Options=""GameLength=22"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""D3Boss"",GameName=""24. Fight the Doom Bosses"",Mutators=,Options=""GameLength=24"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""cDooM"",GameName=""25. Classic DooM"",Mutators=,Options=""GameLength=25"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""SocIso"",GameName=""60. Social Isolation"",Mutators=,Options=""GameLength=60"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Triple"",GameName=""61. SocIso: Triple Invasion"",Mutators=,Options=""GameLength=61"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""SND"",GameName=""62. Short & Dramatic"",Mutators=,Options=""GameLength=62"")
; GameConfig=(GameClass=""ScrnBalanceSrv.BaronsGame"",Prefix=""KF-"",Acronym=""Baron"",GameName=""70. Baron's Game"",Mutators=,Options=""GameLength=0"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""SBZ"",GameName=""74. Small Big Zeds"",Mutators=,Options=""GameLength=74"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""WF"",GameName=""75. Welding Floor"",Mutators=,Options=""GameLength=75"")
; GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""AmmoHunt"",GameName=""80. Ammo Hunt v3"",Mutators=,Options=""GameLength=80"")
GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Classic"",GameName=""02. Classic Long"",Mutators=,Options=""GameLength=2"")
GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""ScrN"",GameName=""04. ScrN Zeds Medium"",Mutators=,Options=""GameLength=4"")
GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""XCM"",GameName=""07. eXpert Challenge Mode"",Mutators=,Options=""GameLength=7"")
GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Nightmare"",GameName=""09. ScrN Nightmare"",Mutators=,Options=""GameLength=9"")
GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""DooM"",GameName=""20. New DooM"",Mutators=,Options=""GameLength=20"")
GameConfig=(GameClass=""ScrnBalanceSrv.TSCGame"",Prefix=""KF-"",Acronym=""TSC"",GameName=""40. Team Survival Competition"",Mutators=,Options=""GameLength=40"")
GameConfig=(GameClass=""ScrnBalanceSrv.TSCGame"",Prefix=""KF-"",Acronym=""TSCT"",GameName=""42. TSC Tourney"",Mutators=,Options=""GameLength=42"")
GameConfig=(GameClass=""ScrnBalanceSrv.TSCGame"",Prefix=""KF-"",Acronym=""DUEL"",GameName=""47. XCM Duel"",Mutators=,Options=""GameLength=47"")
GameConfig=(GameClass=""ScrnBalanceSrv.FtgGame"",Prefix=""KF-"",Acronym=""FTG"",GameName=""51. Follow The Guardian: On The Clock"",Mutators=,Options=""GameLength=51"")
GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""ESC"",GameName=""52. Escape the Hunter"",Mutators=,Options=""GameLength=52"")
GameConfig=(GameClass=""ScrnBalanceSrv.GT"",Prefix=""KF-"",Acronym=""Mystery"",GameName=""72. Mystery Game"",Mutators=,Options=""GameLength=72"")
GameConfig=(GameClass=""ScrnBalanceSrv.ScrnStoryGameInfo"",Prefix=""KFO-"",Acronym=""Obj"",GameName=""Objective Mode"",Mutators=,Options=)
GameConfig=(GameClass=""ScrnBalanceSrv.ScrnTestGame"",Prefix=""KFT-"",Acronym=""Test"",GameName=""Test Map"",Mutators=,Options=""GameLength=8"")

"
7KeAfT4s,Starter-Informations,MagmaLP,Lua,Thursday 30th of May 2024 10:38:22 AM CDT,"mon = peripheral.wrap(""top"")
mon.setTextScale(1)
mon.setBackgroundColor(32768)
mon.setCursorPos(1,1)
mon.clear()
 
function calc_color(color)
    return math.pow(2, color - 1)
end
 
function msg(gap, line, color, groundb, text) 
    mon.setBackgroundColor(calc_color(groundb))
    mon.setCursorPos(gap,line)
    mon.setTextColor(calc_color(color))
    text = mon.write(text)
end
 
function Clear()
    mon.setBackgroundColor(32768)
    for i = 1,16 do
        msg(01,i,16,16,""                                                             "")
    end
end

function LangSelectDE()
    msg(01,17,16,04,""           "") msg(48,17,16,04,""       "") msg(56,17,16,04,""       "")
	msg(01,18,16,04,""  Deutsch  "") msg(48,18,16,04,""  <--  "") msg(56,18,16,04,""  -->  "")
	msg(01,19,16,04,""           "") msg(48,19,16,04,""       "") msg(56,19,16,04,""       "")
end

function LangSelectEN()
    msg(01,17,16,04,""           "") msg(48,17,16,04,""       "") msg(56,17,16,04,""       "")
	msg(01,18,16,04,""  English  "") msg(48,18,16,04,""  <--  "") msg(56,18,16,04,""  -->  "")
	msg(01,19,16,04,""           "") msg(48,19,16,04,""       "") msg(56,19,16,04,""       "")
end

function Main1DE()
    Clear()
    msg(24,02,04,16,"" Wichtige Befehle"")	msg(53,01,09,16,""Seite 1/2"")
    msg(02,04,04,16,"" /regeln"")   			msg(15,04,09,16,"" - Server-Regeln bitte lesen!"")
    msg(02,05,04,16,"" /banneditems"")   		msg(15,05,09,16,"" - Liste aller gebannten Items"")
    msg(02,06,04,16,"" /recipes"")   			msg(15,06,09,16,"" - Server eigene Crafting-Rezepte"")
    msg(02,08,04,16,"" /counter"")   			msg(15,08,09,16,"" - Liste begrenzt setzbarer Blöcke "")
    msg(02,09,04,16,"" /shop"")   			msg(15,09,09,16,"" - Adminshop für Rechte/Ränge/Spawner"")
    msg(02,10,04,16,"" /perks"")   			msg(15,10,09,16,"" - Spezielle Zusatzrechte freischalten"")
    msg(02,12,04,16,"" /team"")  		 		msg(15,12,09,16,"" - Welche Team-Mitglieder sind online"")
    msg(02,13,04,16,"" /kits"")   			msg(15,13,09,16,"" - Liste kostenloser Kits"")
    msg(02,14,04,16,"" /warps"")   			msg(15,14,09,16,"" - Warppunkte und Weltenliste"")
end

function Main2DE()
    Clear()
    msg(24,02,04,16,"" Wichtige Befehle"")	msg(53,01,09,16,""Seite 2/2"")
    msg(02,04,04,16,"" /claims"")   			msg(15,04,09,16,"" - Liste deiner Grundstücke (Teleport möglich)"")
    msg(02,05,04,16,"" /tpa [name]"")   		msg(15,05,09,16,"" - Teleportier-Anfrage"")
    msg(02,06,04,16,"" /back"")   			msg(15,06,09,16,"" - Zum letzten Punkt zurück Teleportieren"")
    msg(02,08,04,16,"" /weekly"")   			msg(15,08,09,16,"" - Wöchentliche Aufgaben mit Belohnungen"")
    msg(02,09,04,16,"" /lvt start"")   		msg(15,09,09,16,"" - Starte einen Tag-Vote"")
    msg(02,10,04,16,"" /performance"")   		msg(15,10,09,16,"" - Wer verursacht die meiste Serverlast"")
    msg(02,12,04,16,"" /stammi"")  		 	msg(15,12,09,16,"" - Erklärung des Stammi(+) Rangs"")
    msg(02,13,04,16,"" "")   			msg(15,13,09,16,"" - "")
    msg(02,14,04,16,"" "")   			msg(15,14,09,16,"" - "")
end

function Main1EN()
    Clear()
    msg(24,02,04,16,"" Important commands"")	msg(53,01,09,16,"" Page 1/2"")
    msg(02,04,04,16,"" /rules"")   			msg(15,04,09,16,"" - Server-Rules please read!"")
    msg(02,05,04,16,"" /banneditems"")   		msg(15,05,09,16,"" - List of all banned items"")
    msg(02,06,04,16,"" /recipes"")   			msg(15,06,09,16,"" - Server own crafting recipes"")
    msg(02,08,04,16,"" /counter"")   			msg(15,08,09,16,"" - List of limited placeable blocks"")
    msg(02,09,04,16,"" /shop"")   			msg(15,09,09,16,"" - Adminshop for Perms/Ranks/Spawners"")
    msg(02,10,04,16,"" /perks"")   			msg(15,10,09,16,"" - Unlock special additional permissions"")
    msg(02,12,04,16,"" /team"")  		 		msg(15,12,09,16,"" - Which team members are online"")
    msg(02,13,04,16,"" /kits"")   			msg(15,13,09,16,"" - List of free kits"")
    msg(02,14,04,16,"" /warps"")   			msg(15,14,09,16,"" - Warp points and world list"")
end

function Main2EN()
    Clear()
    msg(24,02,04,16,"" Important commands"")	msg(53,01,09,16,"" Page 2/2"")
    msg(02,04,04,16,"" /claims"")   			msg(15,04,09,16,"" - List of your properties (teleport possible)"")
    msg(02,05,04,16,"" /tpa [name]"")   		msg(15,05,09,16,"" - Teleport request"")
    msg(02,06,04,16,"" /back"")   			msg(15,06,09,16,"" - Teleport back to last point"")
    msg(02,08,04,16,"" /weekly"")   			msg(15,08,09,16,"" - Weekly tasks with rewards"")
    msg(02,09,04,16,"" /lvt start"")   		msg(15,09,09,16,"" - Start a Day-Vote"")
    msg(02,10,04,16,"" /performance"")   		msg(15,10,09,16,"" - Who causes the most server load"")
    msg(02,12,04,16,"" /stammi"")  		 	msg(15,12,09,16,"" - Explanation of Stammi(+) Rank"")
    msg(02,13,04,16,"" "")   			msg(15,13,09,16,"" - "")
    msg(02,14,04,16,"" "")   			msg(15,14,09,16,"" - "")
end

Language = 1	--Deutsch
Language = 2 	--English
Page = 1

while true do
    if Language == 2 then   
        if Page == 1 then
            Main1EN()
            LangSelectDE()
        elseif Page == 2 then
            Main2EN()
            LangSelectDE()
        end
    elseif Language == 1 then
        if Page == 1 then
            Main1DE()
            LangSelectEN()
        elseif Page == 2 then
            Main2DE()
            LangSelectEN()
        end
    end

    event, side, x, y = os.pullEvent(""monitor_touch"")
    if x >= 1 and x <= 11 and y >= 17 and y <= 19 then
        if Language == 2 then
            Language = 1
            if Page == 1 then
                Main1DE()
            elseif Page == 2 then
                Main2DE()
            end
        elseif Language == 1 then
            Language = 2
            if Page == 1 then
                Main1EN()
            elseif Page == 2 then
                Main2EN()
            end
        end
    elseif x >= 48 and x <= 53 and y >= 17 and y <= 19 and Page == 2 then
        Page = 1
        if Language == 2 then
            Main1EN()
        elseif Language == 1 then
            Main1DE()
        end
    elseif x >= 56 and x <= 61 and y >= 17 and y <= 19 and Page == 1 then
        Page = 2
        if Language == 2 then
            Main2EN()
        elseif Language == 1 then
            Main2DE()
        end
    end
    sleep(0.5)
end"
QvMCDhjx,Untitled,Josif_tepe,C++,Thursday 30th of May 2024 10:27:50 AM CDT,"class Solution{
    public:
    typedef long long ll;
    
    long long countWays(int n, ll k){
    
        vector<ll> dp(n + 1);
        dp[1] = k;
        dp[2] = (k * k);
        const ll MOD = 1e9 + 7;
        for(int i = 3; i <= n; i++) {
            dp[i] = (((dp[i - 1] + dp[i - 2]) % MOD) * ((k - 1) % MOD)) % MOD;
        }
        return dp[n] % MOD;
    }
};"
