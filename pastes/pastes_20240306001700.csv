id,title,username,language,date,content
8Bsryfq6,bozo,Swept_dev,Lua,Tuesday 5th of March 2024 06:12:33 PM CDT,"   local Tables = {
      ""Internal"",
      ""HttpCache"",
      ""Instances"",
      ""Signals"",
      ""Script"",
      ""PhysicsCollision"",
      ""PhysicsParts"",
      ""GraphicsSolidModels"",
      ""GraphicsMeshParts"",
      ""GraphicsParticles"",
      ""GraphicsParts"",
      ""GraphicsSpatialHash"",
      ""GraphicsTerrain"",
      ""GraphicsTexture"",
      ""GraphicsTextureCharacter"",
      ""Sounds"",
      ""StreamingSounds"",
      ""TerrainVoxels"",
      ""Gui"",
      ""Animation"",
      ""Navigation"",
      ""GeometryCSG""
   }

   for i,v in pairs(Tables) do
      memorystats.cache(v)
   end

   ------ * bozo Ui * ------
   --[[
      # rewritten by bozo himself
   ]]
   
   repeat
      task.wait()
   until game:IsLoaded()
   
   if not isfile(""bozo.hub"") then
      makefolder(""bozo.hub"")
   end
   
   ---// Variables
   local Camera = game:GetService(""Workspace"").Camera
   local RunService = game:GetService(""RunService"")
   local Mouse = game:GetService(""Players"").LocalPlayer:GetMouse()
   local InputService = game:GetService(""UserInputService"")
   local TweenService = game:GetService(""TweenService"")
   
   --// LPH
   if not LPH_OBFUSCATED then
      LPH_JIT = function(...) return ... end
      LPH_JIT_MAX = function(...) return ... end
      LPH_JIT_ULTRA = function(...) return ... end
      LPH_NO_VIRTUALIZE = function(...) return ... end
      LPH_NO_UPVALUES = function(f) return(function(...) return f(...) end) end
      LPH_ENCSTR = function(...) return ... end
      LPH_STRENC = function(...) return ... end
      LPH_HOOK_FIX = function(...) return ... end
      LPH_CRASH = function() return print(debug.traceback()) end
   end
   
   -- Menu/UI Creation
   local menu = game:GetObjects(""rbxassetid://16526342659"")[1] 
   local tabholder = menu.bg.bg.bg.bg.bg.bg.main.group
   local tabviewer = menu.bg.bg.bg.bg.bg.bg.tabbuttons
   
   local library = {
      Title = 'bozo.hub | <font color=""rgb(189, 172, 255)"">help I've fallen</font>',
      AnimatedText = false,
      keybind = Enum.KeyCode.End,
      Colors = {
         libColor = Color3.fromRGB(189, 172, 255),
         riskyColor = Color3.fromRGB(255, 0, 0),
         FontColor = Color3.fromRGB(255, 255, 255),
         MainColor = Color3.fromRGB(14, 14, 14),
         AccentColor = Color3.fromRGB(189, 172, 255),
         OutlineColor = Color3.fromRGB(15, 15, 15),
      },
      Enabled = true,
      colorpicking = false,
      scrolling = true,
      multiZindex = 200,
      blacklisted = {
         Enum.KeyCode.W,
         Enum.KeyCode.A,
         Enum.KeyCode.S,
         Enum.KeyCode.D,
         Enum.UserInputType.MouseMovement
      },
      tabbuttons = {},
      tabs = {},
      options = {},
      flags = {},
      toInvis = {},
      Registry = {},
      RegistryMap = {},
      HudRegistry = {}
   }
   
   local keynames = {
      [Enum.KeyCode.LeftAlt] = 'LALT',
      [Enum.KeyCode.RightAlt] = 'RALT',
      [Enum.KeyCode.LeftControl] = 'LCTRL',
      [Enum.KeyCode.RightControl] = 'RCTRL',
      [Enum.KeyCode.LeftShift] = 'LSHIFT',
      [Enum.KeyCode.RightShift] = 'RSHIFT',
      [Enum.KeyCode.Underscore] = '_',
      [Enum.KeyCode.Minus] = '-',
      [Enum.KeyCode.Plus] = '+',
      [Enum.KeyCode.Period] = '.',
      [Enum.KeyCode.Slash] = '/',
      [Enum.KeyCode.BackSlash] = '\\',
      [Enum.KeyCode.Question] = '?',
      [Enum.UserInputType.MouseButton1] = '[MB1]',
      [Enum.UserInputType.MouseButton2] = '[MB2]',
      [Enum.UserInputType.MouseButton3] = '[MB3]'
   }
   local ProtectGui = protectgui or (syn and syn.protect_gui) or (function() end)
   local ScreenGui = Instance.new('ScreenGui')
   ProtectGui(ScreenGui)
   ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
   ScreenGui.Parent = game.CoreGui
   ScreenGui.Name = ""velocity_menu""
   menu.bg.pre.Text = """"

   task.spawn(function()
      local textList = {
          '', 'b', 'bo', 'boz', 'bozo<font color=""rgb(189, 172, 255)"">h</font>',
          'bozo.<font color=""rgb(189, 172, 255)"">hu</font>', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font>',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> |', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | u',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | un', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | uni',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | univ', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | univers',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | universa', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | universal',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | universa', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | univers',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | univer', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | unive',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | univ', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | uni',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | un', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font> | u',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font> |', 'bozo.<font color=""rgb(189, 172, 255)"">hub</font>',
          'bozo.<font color=""rgb(189, 172, 255)"">hub</font>', 'bozo.<font color=""rgb(189, 172, 255)"">h</font>',
          'bozo.', 'boz', 'bo', 'b',
      }
      while wait(0.5) do
          if library.AnimatedText then
              for i = 1, #textList do
                  menu.bg.pre.Text = textList[i]
                  wait(0.5)
              end 
          else
              menu.bg.pre.Text = 'bozo.hub | <font color=""rgb(189, 172, 255)"">universal</font>'
          end
      end
  end)  

   menu.bg.Position = UDim2.new(0.5,-menu.bg.Size.X.Offset/2,0.5,-menu.bg.Size.Y.Offset/2)
   menu.Parent = game:GetService(""CoreGui"")

   LPH_NO_VIRTUALIZE(function()
   function library:AddToRegistry(Instance, Properties, IsHud)
      local Idx = #library.Registry + 3
      local Data = {Instance = Instance;Properties = Properties;Idx = Idx}
      table.insert(library.Registry, Data);
      library.RegistryMap[Instance] = Data;
      if IsHud then table.insert(library.HudRegistry, Data) end;
      end;
      function library:CreateLabel(Properties, IsHud)
         local _Instance = library:Create('TextLabel', {BackgroundTransparency = 1;Font = Enum.Font.Code;TextColor3 = library.Colors.FontColor;TextSize = 16;TextStrokeTransparency = 0});
         library:AddToRegistry(_Instance, {TextColor3 = 'FontColor'}, IsHud);
         return library:Create(_Instance, Properties);
         end;
         function library:GetTextBounds(Text, Font, Size, Resolution)
            local Bounds = game:GetService('TextService'):GetTextSize(Text, Size, Font, Resolution or Vector2.new(1920, 1080))
            return Bounds.X, Bounds.Y
            end;
            function library:Create(Class, Properties)
               if library.Enabled == false then return end;
               local _Instance = Class;
               if type(Class) == 'string' then _Instance = Instance.new(Class); end;
               for Property, Value in next, Properties do _Instance[Property] = Value; end;
               return _Instance;
               end;
               library.NotificationArea = library:Create('Frame', {BackgroundTransparency = 1;Position = UDim2.new(0.003, 0, 0, 40);Size = UDim2.new(0, 300, 0, 200);ZIndex = 100;Parent = ScreenGui});
               library:Create('UIListLayout', {Padding = UDim.new(0, 4);FillDirection = Enum.FillDirection.Vertical;SortOrder = Enum.SortOrder.LayoutOrder;Parent = library.NotificationArea});
               function library:Notify(Text, Time)
                  local XSize, YSize = library:GetTextBounds(Text, Enum.Font.Code, 14);YSize = YSize + 7
                  local NotifyOuter = library:Create('Frame', {BorderColor3 = Color3.new(189, 172, 255);Position = UDim2.new(0, 100, 0, 10);Size = UDim2.new(0, 0, 0, YSize);ClipsDescendants = true;Transparency = 0,ZIndex = 100;Parent = library.NotificationArea});
                  library:Create('UIGradient', {Color = ColorSequence.new{ColorSequenceKeypoint.new(0, library.Colors.MainColor), ColorSequenceKeypoint.new(0.1, library.Colors.MainColor), ColorSequenceKeypoint.new(0.6, library.Colors.MainColor), ColorSequenceKeypoint.new(1, library.Colors.MainColor)},Rotation = -120;Parent = NotifyOuter});
                  local NotifyInner = library:Create('Frame', {BackgroundColor3 = library.Colors.MainColor;BorderColor3 = library.Colors.OutlineColor;BorderMode = Enum.BorderMode.Inset;Size = UDim2.new(1, 0, 1, 0);ZIndex = 101;Parent = NotifyOuter});
                  local InnerFrame = library:Create('Frame', {BackgroundColor3 = Color3.new(1, 1, 1);BorderSizePixel = 0;Position = UDim2.new(0, 1, 0, 1);Size = UDim2.new(1, -2, 1, -2);ZIndex = 102;Parent = NotifyInner;});
                  local Line = library:Create('Frame', {BackgroundColor3 = library.Colors.AccentColor;BorderSizePixel = 0;Position = UDim2.new(1, 0, 0.97, 0);Size = UDim2.new(-0.999, -0.5, 0, 1.9);ZIndex = 102;Parent = NotifyInner;});
                  local LeftColor = library:Create('Frame', {BackgroundColor3 = library.Colors.AccentColor;BorderSizePixel = 0;Position = UDim2.new(0, -1, 0, 22);Size = UDim2.new(0, 2, -1.2, 0);ZIndex = 104;Parent = NotifyOuter;});
                  local Gradient = library:Create('UIGradient', {Color = ColorSequence.new({ColorSequenceKeypoint.new(0, library.Colors.MainColor),ColorSequenceKeypoint.new(1, library.Colors.MainColor)});Rotation = -90;Parent = InnerFrame});
                  library:AddToRegistry(NotifyInner, {BackgroundColor3 = 'MainColor';BorderColor3 = 'OutlineColor';}, true);
                  library:AddToRegistry(Gradient, {Color = function() return ColorSequence.new({ColorSequenceKeypoint.new(0, library.Colors.MainColor),ColorSequenceKeypoint.new(1, library.Colors.MainColor)}); end});
                  library:CreateLabel({Position = UDim2.new(0, 6, 0, 0);Size = UDim2.new(1, -4, 1, 0);Text = Text;TextXAlignment = Enum.TextXAlignment.Left;TextSize = 14;ZIndex = 103;Parent = InnerFrame});
                  pcall(NotifyOuter.TweenSize, NotifyOuter, UDim2.new(0, XSize + 8 + 4, 0, YSize), 'Out', 'Quad', 0.6, true);
                  pcall(LeftColor.TweenSize, LeftColor, UDim2.new(0, 2, 0, 0), 'Out', 'Linear', 1, true);
                  wait(0.9)
                  pcall(Line.TweenSize, Line, UDim2.new(0, 0, 0, 2), 'Out', 'Linear', Time, true);
                  task.spawn(function()
                  wait(Time or 5);
                  pcall(NotifyOuter.TweenSize, NotifyOuter, UDim2.new(0, 0, 0, YSize), 'Out', 'Quad', 0.4, true);
                  wait(0.4);
                  NotifyOuter:Destroy();
                  end);
                  end;

                  function draggable(a)local b=game:GetService(""UserInputService"")local c;local d;local e;local f;local g=0.25;local h=TweenInfo.new(g,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)local function i(j)if not library.colorpicking then local k=j.Position-e;local l=UDim2.new(f.X.Scale,f.X.Offset+k.X,f.Y.Scale,f.Y.Offset+k.Y)local m=TweenService:Create(a,h,{Position=l})m:Play()end end;a.InputBegan:Connect(function(j)if j.UserInputType==Enum.UserInputType.MouseButton1 or j.UserInputType==Enum.UserInputType.Touch then c=true;e=j.Position;f=a.Position;j.Changed:Connect(function()if j.UserInputState==Enum.UserInputState.End then c=false end end)end end)a.InputChanged:Connect(function(j)if j.UserInputType==Enum.UserInputType.MouseMovement or j.UserInputType==Enum.UserInputType.Touch then d=j end end)b.InputChanged:Connect(function(j)if j==d and c then i(j)end end)end draggable(menu.bg)
                     InputService.MouseIconEnabled = false
                     local Cursor = Drawing.new('Triangle');Cursor.Thickness = 1;Cursor.Filled = true;Cursor.Visible = true;Cursor.ZIndex = math.huge;local CursorOutline = Drawing.new('Triangle');CursorOutline.Thickness = 1;CursorOutline.Filled = false;CursorOutline.Color = Color3.new(0, 0, 0);CursorOutline.Visible = true;CursorOutline.ZIndex = math.huge
                     function cursorupdate()
                        local mPos = InputService:GetMouseLocation();
                        Cursor.Color = library.Colors.libColor;Cursor.PointA = Vector2.new(mPos.X, mPos.Y);Cursor.PointB = Vector2.new(mPos.X + 16, mPos.Y + 6);Cursor.PointC = Vector2.new(mPos.X + 6, mPos.Y + 16) CursorOutline.PointA = Cursor.PointA;CursorOutline.PointB = Cursor.PointB;CursorOutline.PointC = Cursor.PointC;RunService.RenderStepped:Wait() end task.spawn(function() while true do cursorupdate() end
                    end)

                        InputService.InputEnded:Connect(function(key)
                        if key.KeyCode == library.keybind then menu.Enabled = not menu.Enabled;library.scrolling = false;library.colorpicking = false;Cursor.Visible = not Cursor.Visible;InputService.MouseIconEnabled = not InputService.MouseIconEnabled;CursorOutline.Visible = not CursorOutline.Visible; for i,v in next, library.toInvis do v.Visible = false end end
                        end)

                        function library:Tween(...) TweenService:Create(...):Play() end
                           function library:addTab(name,image)
                              local newTab = tabholder.tab:Clone()
                              local newButton = tabviewer.button:Clone()

                              table.insert(library.tabs,newTab)
                              newTab.Parent = tabholder
                              newTab.Visible = false

                              table.insert(library.tabbuttons,newButton)
                              newButton.Parent = tabviewer
                              newButton.Modal = true
                              newButton.Visible = true
                              newButton.Image = image
                              newButton.text.Text = name
                              newButton.MouseButton1Click:Connect(function()
                              for i,v in next, library.tabs do v.Visible = v == newTab end
                              for i,v in next, library.toInvis do v.Visible = false end
                              for i,v in next, library.tabbuttons do
                                 local state = v == newButton
                                 local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
                                 local imageTweenStart = TweenService:Create(v, tweenInfo, {ImageColor3 = Color3.fromRGB(189, 172, 255)})
                                 local textTweenStart = TweenService:Create(v.text, tweenInfo, {TextColor3 = Color3.fromRGB(189, 172, 255)})
                                 local imageTweenEnd = TweenService:Create(v, tweenInfo, {ImageColor3 = Color3.fromRGB(0,0,0)})
                                 local textTweenEnd = TweenService:Create(v.text, tweenInfo, {TextColor3 = Color3.fromRGB(125, 125, 125)})
                                 if state then
                                    imageTweenStart:Play()
                                    textTweenStart:Play()
                                 else
                                    imageTweenEnd:Play()
                                    textTweenEnd:Play()
                                 end
                              end
                              end)

                              local tab = {}
                              local groupCount = 0
                              local jigCount = 0
                              local topStuff = 2000

                              function tab:createGroup(pos,groupname)
                                 local groupbox = Instance.new(""Frame"")
                                 local grouper = Instance.new(""Frame"")
                                 local UIListLayout = Instance.new(""UIListLayout"")
                                 local UIPadding = Instance.new(""UIPadding"")
                                 local element = Instance.new(""Frame"")
                                 local title = Instance.new(""TextLabel"")

                                 groupCount -= 1
                                 groupbox.Parent = newTab[pos]
                                 groupbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                 groupbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                 groupbox.BorderSizePixel = 0
                                 groupbox.Size = UDim2.new(0, 211, 0, 8)
                                 groupbox.ZIndex = groupCount

                                 grouper.Parent = groupbox
                                 grouper.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
                                 grouper.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                 grouper.Size = UDim2.new(1, 0, 1, 0)

                                 UIListLayout.Parent = grouper
                                 UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
                                 UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

                                 UIPadding.Parent = grouper
                                 UIPadding.PaddingBottom = UDim.new(0, 4)
                                 UIPadding.PaddingTop = UDim.new(0, 7)

                                 title.Parent = groupbox
                                 title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                 title.BackgroundTransparency = 1.000
                                 title.BorderSizePixel = 0
                                 title.Position = UDim2.new(0, 17, 0, 0)
                                 title.ZIndex = 2
                                 title.Font = Enum.Font.Code
                                 title.Text = groupname or """"
                                 title.TextColor3 = Color3.fromRGB(255, 255, 255)
                                 title.TextSize = 13.000
                                 title.TextStrokeTransparency = 0.000
                                 title.TextXAlignment = Enum.TextXAlignment.Left

                                 local group = {}
                                 function group:addToggle(args)
                                    if not args.flag and args.text then args.flag = args.text end
                                    if not args.flag then return warn(""⚠️ incorrect arguments ⚠️ - missing args on recent toggle"") end
                                    function riskyCfg(state)
                                       args.risky = state
                                    end
                                    groupbox.Size += UDim2.new(0, 0, 0, 20)

                                    local toggleframe = Instance.new(""Frame"")
                                    local tobble = Instance.new(""Frame"")
                                    local mid = Instance.new(""Frame"")
                                    local front = Instance.new(""Frame"")
                                    local text = Instance.new(""TextLabel"")
                                    local button = Instance.new(""TextButton"")

                                    jigCount -= 1
                                    library.multiZindex -= 1

                                    toggleframe.Name = ""toggleframe""
                                    toggleframe.Parent = grouper
                                    toggleframe.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                                    toggleframe.BackgroundTransparency = 1.000
                                    toggleframe.BorderSizePixel = 0
                                    toggleframe.Size = UDim2.new(1, 0, 0, 20)
                                    toggleframe.ZIndex = library.multiZindex

                                    tobble.Name = ""tobble""
                                    tobble.Parent = toggleframe
                                    tobble.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                                    tobble.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    tobble.BorderSizePixel = 3
                                    tobble.Position = UDim2.new(0.0209999000, 0, 0.242000015, 0)
                                    tobble.Size = UDim2.new(0, 11, 0, 11)

                                    mid.Name = ""mid""
                                    mid.Parent = tobble
                                    mid.BackgroundColor3 = Color3.fromRGB(69, 23, 255)
                                    mid.BorderColor3 = Color3.fromRGB(20,20,20)
                                    mid.BorderSizePixel = 2
                                    mid.Size = UDim2.new(0, 12, 0, 12)

                                    front.Name = ""front""
                                    front.Parent = mid
                                    front.BackgroundColor3 = Color3.fromRGB(21,21,21)
                                    front.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    front.Size = UDim2.new(0, 12, 0, 12)

                                    local front2 = Instance.new(""UIGradient"", front)
                                    front2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(75, 75, 75)), ColorSequenceKeypoint.new(0.320, Color3.fromRGB(100, 100, 100)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))}
                                    front2.Rotation = 45

                                    text.Name = ""text""
                                    text.Parent = toggleframe
                                    text.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
                                    text.BackgroundTransparency = 1.000
                                    text.Position = UDim2.new(0, 22, 0, 0)
                                    text.Size = UDim2.new(0, 0, 1, 2)
                                    text.Font = Enum.Font.Code
                                    text.Text = args.text or args.flag
                                    text.TextColor3 = Color3.fromRGB(155, 155, 155)
                                    text.TextSize = 13.000
                                    text.TextStrokeTransparency = 0.000
                                    text.TextXAlignment = Enum.TextXAlignment.Left

                                    button.Name = ""button""
                                    button.Parent = toggleframe
                                    button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    button.BackgroundTransparency = 1.000
                                    button.BorderSizePixel = 0
                                    button.Size = UDim2.new(0, 101, 1, 0)
                                    button.Font = Enum.Font.SourceSans
                                    button.Text = """"
                                    button.TextColor3 = Color3.fromRGB(0, 0, 0)
                                    button.TextSize = 14.000

                                    local state = args.default
                                    if args.risky then text.TextColor3 = state and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(139, 0, 0) end
                                    if state == true then
                                       front.Name = state and ""accent"" or ""back""
                                       library.flags[args.flag] = state
                                       mid.BorderColor3 = Color3.fromRGB(20,20,20)
                                       front.BackgroundColor3 = state and library.Colors.libColor or Color3.fromRGB(25, 25, 25)
                                       if args.risky then text.TextColor3 = state and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(139, 0, 0) else text.TextColor3 = state and Color3.fromRGB(244, 244, 244) or Color3.fromRGB(144, 144, 144) end
                                       if args.callback then args.callback(state) end
                                    else
                                       if args.risky then text.TextColor3 = Color3.fromRGB(139, 0, 0) else text.TextColor3 = Color3.fromRGB(144, 144, 144) end
                                    end

                                    function toggle(newState)
                                       state = newState
                                       library.flags[args.flag] = state
                                       front.BackgroundColor3 = state and library.Colors.libColor or Color3.fromRGB(25, 25, 25)
                                       if args.risky then text.TextColor3 = state and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(139, 0, 0) else text.TextColor3 = state and Color3.fromRGB(244, 244, 244) or Color3.fromRGB(144, 144, 144) end
                                       if args.callback then args.callback(state) end
                                    end

                                    button.MouseButton1Click:Connect(function()
                                    state = not state
                                    front.Name = state and ""accent"" or ""back""
                                    library.flags[args.flag] = state
                                    mid.BorderColor3 = Color3.fromRGB(20,20,20)
                                    front.BackgroundColor3 = state and library.Colors.libColor or Color3.fromRGB(25, 25, 25)
                                    if args.risky then text.TextColor3 = state and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(139, 0, 0) else text.TextColor3 = state and Color3.fromRGB(244, 244, 244) or Color3.fromRGB(144, 144, 144) end
                                    if args.callback then args.callback(state) end
                                    end)

                                    button.MouseEnter:Connect(function()
                                    mid.BorderColor3 = library.Colors.libColor
                                    end)

                                    button.MouseLeave:Connect(function()
                                    mid.BorderColor3 = Color3.fromRGB(20, 20, 20)
                                    end)

                                    library.flags[args.flag] = false
                                    library.options[args.flag] = {type = ""toggle"",changeState = toggle,skipflag = args.skipflag,oldargs = args,toggle = state,risky = args.risky or false,riskcfg = riskyCfg}
                                    local toggle = {}
                                    function toggle:addKeybind(args)
                                       if not args.flag then return warn(""⚠️ incorrect arguments ⚠️ - missing args on toggle:keybind"") end
                                       local next = false
                                       local keybind = Instance.new(""Frame"")
                                       local button = Instance.new(""TextButton"")

                                       keybind.Parent = toggleframe
                                       keybind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                       keybind.BackgroundTransparency = 1.000
                                       keybind.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       keybind.BorderSizePixel = 0
                                       keybind.Position = UDim2.new(0.730000029, 4, 0.272000015, 0)
                                       keybind.Size = UDim2.new(0, 51, 0, 10)

                                       button.Parent = keybind
                                       button.BackgroundColor3 = Color3.fromRGB(187, 131, 255)
                                       button.BackgroundTransparency = 1.000
                                       button.BorderSizePixel = 0
                                       button.Position = UDim2.new(-0.270902753, 0, 0, 0)
                                       button.Size = UDim2.new(1.27090275, 0, 1, 0)
                                       button.Font = Enum.Font.Code
                                       button.Text = """"
                                       button.TextColor3 = Color3.fromRGB(155, 155, 155)
                                       button.TextSize = 13.000
                                       button.TextStrokeTransparency = 0.000
                                       button.TextXAlignment = Enum.TextXAlignment.Right

                                       local status = false
                                       function updateValue(val)
                                          if library.colorpicking then return end
                                          library.flags[args.flag] = val
                                          if val.Name == ""Unknown"" or val.Name == ""[Unknown]"" then
                                             button.Text = ""[None]""
                                          else
                                             button.Text = keynames[val] or ""[""..val.Name..""]""
                                          end
                                       end
                                       InputService.InputBegan:Connect(function(key)
                                       local key = key.KeyCode == Enum.KeyCode.Unknown and key.UserInputType or key.KeyCode
                                       if next then
                                          if not table.find(library.blacklisted,key) then
                                             next = false
                                             library.flags[args.flag] = key
                                             if key.Name == ""Unknown"" or key.Name == ""[Unknown]"" then
                                                button.Text = ""[None]""
                                             else
                                                button.Text = keynames[key] or ""[""..key.Name..""]""
                                             end
                                             button.TextColor3 = Color3.fromRGB(155, 155, 155)
                                          end
                                       end
                                       if not next and key == library.flags[args.flag] and args.callback then
                                          status = not status
                                          args.callback(key, status)
                                       end
                                       end)

                                       button.MouseButton1Click:Connect(function()
                                       if library.colorpicking then return end
                                       library.flags[args.flag] = Enum.KeyCode.Unknown
                                       button.Text = ""--""
                                       button.TextColor3 = library.Colors.libColor
                                       next = true
                                       end)

                                       library.flags[args.flag] = Enum.KeyCode.Unknown
                                       library.options[args.flag] = {type = ""keybind"",changeState = updateValue,skipflag = args.skipflag,oldargs = args}
                                       updateValue(args.key or Enum.KeyCode.Unknown)
                                    end
                                    function toggle:addColorpicker(args)
                                       if not args.flag and args.text then args.flag = args.text end
                                       if not args.flag then return warn(""⚠️ incorrect arguments ⚠️"") end
                                       local colorpicker = Instance.new(""Frame"")
                                       local mid = Instance.new(""Frame"")
                                       local front = Instance.new(""Frame"")
                                       local button2 = Instance.new(""TextButton"")
                                       local colorFrame = Instance.new(""Frame"")
                                       local colorFrame_2 = Instance.new(""Frame"")
                                       local hueframe = Instance.new(""Frame"")
                                       local main = Instance.new(""Frame"")
                                       local hue = Instance.new(""ImageLabel"")
                                       local pickerframe = Instance.new(""Frame"")
                                       local main_2 = Instance.new(""Frame"")
                                       local picker = Instance.new(""ImageLabel"")
                                       local clr = Instance.new(""Frame"")
                                       local copy = Instance.new(""TextButton"")
                                       local CurrentColorFrame = Instance.new(""Frame"")
                                       local CurrentColorFrame_Text = Instance.new(""TextLabel"")

                                       library.multiZindex -= 1
                                       jigCount -= 1
                                       topStuff -= 1

                                       colorpicker.Parent = toggleframe
                                       colorpicker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                       colorpicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       colorpicker.BorderSizePixel = 3
                                       colorpicker.Position = args.second and UDim2.new(0.720000029, 4, 0.272000015, 0) or UDim2.new(0.860000014, 4, 0.272000015, 0)
                                       colorpicker.Size = UDim2.new(0, 20, 0, 10)

                                       mid.Name = ""mid""
                                       mid.Parent = colorpicker
                                       mid.BackgroundColor3 = Color3.fromRGB(69, 23, 255)
                                       mid.BorderColor3 = Color3.fromRGB(25,25,25)
                                       mid.BorderSizePixel = 2
                                       mid.Size = UDim2.new(1, 0, 1, 0)

                                       front.Name = ""front""
                                       front.Name = ""dontchange""
                                       front.Parent = mid
                                       front.BackgroundColor3 = library.Colors.libColor
                                       front.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       front.Size = UDim2.new(1, 0, 1, 0)

                                       local ColorPickerGradient = Instance.new(""UIGradient"", front)
                                       ColorPickerGradient.Name = ""dontchange""
                                       ColorPickerGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(75, 75, 75)), ColorSequenceKeypoint.new(0.320, Color3.fromRGB(100, 100, 100)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))}
                                       ColorPickerGradient.Rotation = 270

                                       button2.Name = ""button2""
                                       button2.Parent = front
                                       button2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                       button2.BackgroundTransparency = 1.000
                                       button2.Size = UDim2.new(1, 0, 1, 0)
                                       button2.Text = """"
                                       button2.Font = Enum.Font.SourceSans
                                       button2.TextColor3 = Color3.fromRGB(0, 0, 0)
                                       button2.TextSize = 14.000

                                       colorFrame.Name = ""colorFrame""
                                       colorFrame.Parent = toggleframe
                                       colorFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       colorFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       colorFrame.BorderSizePixel = 2
                                       colorFrame.Position = UDim2.new(0.101092957, 0, 0.75, 0)
                                       colorFrame.Size = UDim2.new(0, 187, 0, 178)

                                       colorFrame_2.Name = ""colorFrame""
                                       colorFrame_2.Parent = colorFrame
                                       colorFrame_2.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       colorFrame_2.BorderColor3 = Color3.fromRGB(30, 30, 30)
                                       colorFrame_2.Size = UDim2.new(1, 0, 1, 0)

                                       hueframe.Name = ""hueframe""
                                       hueframe.Parent = colorFrame_2
                                       hueframe.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       hueframe.BorderColor3 = Color3.fromRGB(30, 30, 30)
                                       hueframe.BorderSizePixel = 2
                                       hueframe.Position = UDim2.new(-0.0830000022, 18, -0.0559999987, 13)
                                       hueframe.Size = UDim2.new(0.25, 110, 0.25, 110)

                                       main.Name = ""main""
                                       main.Parent = hueframe
                                       main.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       main.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       main.Size = UDim2.new(1, 0, 1, 0)
                                       main.ZIndex = 6

                                       picker.Name = ""picker""
                                       picker.Parent = main
                                       picker.BackgroundColor3 = Color3.fromRGB(232, 0, 255)
                                       picker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       picker.BorderSizePixel = 0
                                       picker.Size = UDim2.new(1, 0, 1, 0)
                                       picker.ZIndex = 104
                                       picker.Image = ""rbxassetid://2615689005""

                                       pickerframe.Name = ""pickerframe""
                                       pickerframe.Parent = colorFrame
                                       pickerframe.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       pickerframe.BorderColor3 = Color3.fromRGB(30, 30, 30)
                                       pickerframe.BorderSizePixel = 2
                                       pickerframe.Position = UDim2.new(0.801000025, 14, -0.0559999987, 13)
                                       pickerframe.Size = UDim2.new(0, 20, 0.25, 110)

                                       CurrentColorFrame.Name = ""CurrentColorFrame""
                                       CurrentColorFrame.Parent = colorFrame
                                       CurrentColorFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       CurrentColorFrame.BorderColor3 = Color3.fromRGB(15,15,15)
                                       CurrentColorFrame.BorderSizePixel = 2
                                       CurrentColorFrame.Position = UDim2.new(0.98, 0, 0.915, 0)
                                       CurrentColorFrame.Size = UDim2.new(-0.965, 0, 0, 12)

                                       CurrentColorFrame_Text.Name = ""CurrentColorFrame_Text""
                                       CurrentColorFrame_Text.Parent = CurrentColorFrame
                                       CurrentColorFrame_Text.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       CurrentColorFrame_Text.BackgroundTransparency = 1.000
                                       CurrentColorFrame_Text.BorderSizePixel = 0
                                       CurrentColorFrame_Text.Size = UDim2.new(1, 0, 1, 0)
                                       CurrentColorFrame_Text.Font = Enum.Font.Code
                                       CurrentColorFrame_Text.Text = args.text or args.flag
                                       CurrentColorFrame_Text.TextColor3 = library.Colors.libColor

                                       CurrentColorFrame_Text.TextSize = 13.000
                                       CurrentColorFrame_Text.TextStrokeTransparency = 0.000

                                       main_2.Name = ""main""
                                       main_2.Parent = pickerframe
                                       main_2.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       main_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       main_2.Size = UDim2.new(0, 20, 1, 0)
                                       main_2.ZIndex = 6

                                       hue.Name = ""hue""
                                       hue.Parent = main_2
                                       hue.BackgroundColor3 = Color3.fromRGB(255, 0, 178)
                                       hue.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                       hue.BorderSizePixel = 0
                                       hue.Size = UDim2.new(0, 20, 1, 0)
                                       hue.ZIndex = 104
                                       hue.Image = ""rbxassetid://2615692420""

                                       clr.Name = ""clr""
                                       clr.Parent = colorFrame
                                       clr.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                       clr.BackgroundTransparency = 1.000
                                       clr.BorderColor3 = Color3.fromRGB(60, 60, 60)
                                       clr.BorderSizePixel = 2
                                       clr.Position = UDim2.new(0.0280000009, 0, 0, 2)
                                       clr.Size = UDim2.new(0, 0, 0, 14)
                                       clr.ZIndex = 5

                                       copy.MouseButton1Click:Connect(function()
                                       colorFrame.Visible = false
                                       end)

                                       button2.MouseButton1Click:Connect(function()
                                       colorFrame.Visible = not colorFrame.Visible
                                       mid.BorderColor3 = Color3.fromRGB(25,25,25)
                                       end)

                                       button2.MouseEnter:connect(function()
                                       mid.BorderColor3 = library.Colors.libColor
                                       end)
                                       button2.MouseLeave:connect(function()
                                       mid.BorderColor3 = Color3.fromRGB(25,25,25)
                                       end)

                                       local function updateValue(value,fakevalue)
                                          if typeof(value) == ""table"" then value = fakevalue end
                                          library.flags[args.flag] = value
                                          front.BackgroundColor3 = value

                                          local r, g, b = value.r * 255, value.g * 255, value.b * 255
                                          CurrentColorFrame_Text.TextColor3 = value
                                          CurrentColorFrame_Text.Text = ""RGB("" .. math.floor(r) .. "", "" .. math.floor(g) .. "", "" .. math.floor(b) .. "")""

                                          if args.callback then
                                             args.callback(value)
                                          end
                                       end

                                       local white, black = Color3.new(1,1,1), Color3.new(0,0,0)
                                       local colors = {Color3.new(1,0,0),Color3.new(1,1,0),Color3.new(0,1,0),Color3.new(0,1,1),Color3.new(0,0,1),Color3.new(1,0,1),Color3.new(1,0,0)}
                                       local heartbeat = RunService.Heartbeat
                                       local pickerX,pickerY,hueY = 0,0,0
                                       local oldpercentX,oldpercentY = 0,0

                                       hue.MouseEnter:Connect(function()
                                       local input = hue.InputBegan:connect(function(key)
                                       if key.UserInputType == Enum.UserInputType.MouseButton1 then
                                          while heartbeat:wait() and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                             library.colorpicking = true
                                             local percent = (hueY-hue.AbsolutePosition.Y-36)/hue.AbsoluteSize.Y
                                             local num = math.max(1, math.min(7,math.floor(((percent*7+0.5)*100))/100))
                                             local startC = colors[math.floor(num)]
                                             local endC = colors[math.ceil(num)]
                                             local color = white:lerp(picker.BackgroundColor3, oldpercentX):lerp(black, oldpercentY)
                                             picker.BackgroundColor3 = startC:lerp(endC, num-math.floor(num)) or Color3.new(0, 0, 0)
                                             updateValue(color)
                                          end
                                          library.colorpicking = false
                                       end
                                       end)
                                       local leave
                                       leave = hue.MouseLeave:connect(function()
                                       input:disconnect()
                                       leave:disconnect()
                                       end)
                                       end)

                                       picker.MouseEnter:Connect(function()
                                       local input = picker.InputBegan:connect(function(key)
                                       if key.UserInputType == Enum.UserInputType.MouseButton1 then
                                          while heartbeat:wait() and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                             library.colorpicking = true
                                             local xPercent = (pickerX-picker.AbsolutePosition.X)/picker.AbsoluteSize.X
                                             local yPercent = (pickerY-picker.AbsolutePosition.Y-36)/picker.AbsoluteSize.Y
                                             local color = white:lerp(picker.BackgroundColor3, xPercent):lerp(black, yPercent)
                                             updateValue(color)
                                             oldpercentX,oldpercentY = xPercent,yPercent
                                          end
                                          library.colorpicking = false
                                       end
                                       end)
                                       local leave
                                       leave = picker.MouseLeave:connect(function()
                                       input:disconnect()
                                       leave:disconnect()
                                       end)
                                       end)

                                       hue.MouseMoved:connect(function(_, y)
                                       hueY = y
                                       end)

                                       picker.MouseMoved:connect(function(x, y)
                                       pickerX,pickerY = x,y
                                       end)

                                       table.insert(library.toInvis,colorFrame)
                                       library.flags[args.flag] = Color3.new(1,1,1)
                                       library.options[args.flag] = {type = ""colorpicker"",changeState = updateValue,skipflag = args.skipflag,oldargs = args}
                                       updateValue(args.color or Color3.new(1,1,1))
                                    end
                                    return toggle
                                 end
                                 function group:addButton(args)
                                    if not args.callback or not args.text then return warn(""⚠️ incorrect arguments ⚠️"") end
                                    groupbox.Size += UDim2.new(0, 0, 0, 20)

                                    local buttonframe = Instance.new(""Frame"")
                                    local bg = Instance.new(""Frame"")
                                    local main = Instance.new(""Frame"")
                                    local button = Instance.new(""TextButton"")
                                    local gradient = Instance.new(""UIGradient"")

                                    buttonframe.Name = ""buttonframe""
                                    buttonframe.Parent = grouper
                                    buttonframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    buttonframe.BackgroundTransparency = 1.000
                                    buttonframe.BorderSizePixel = 0
                                    buttonframe.Size = UDim2.new(1, 0, 0, 21)

                                    bg.Name = ""bg""
                                    bg.Parent = buttonframe
                                    bg.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
                                    bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    bg.BorderSizePixel = 2
                                    bg.Position = UDim2.new(0.02, -1, 0.15, 0)
                                    bg.Size = UDim2.new(0, 205, 0, 15)

                                    main.Name = ""main""
                                    main.Parent = bg
                                    main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                                    main.BorderColor3 = Color3.fromRGB(39, 39, 39)
                                    main.Size = UDim2.new(1, 0, 1, 0)

                                    button.Name = ""button""
                                    button.Parent = main
                                    button.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
                                    button.BackgroundTransparency = 1.000
                                    button.BorderSizePixel = 0
                                    button.Size = UDim2.new(1, 0, 1, 0)
                                    button.Font = Enum.Font.Code
                                    button.Text = args.text or args.flag
                                    button.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    button.TextSize = 13.000
                                    button.TextStrokeTransparency = 0.000

                                    gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(59, 59, 59)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(83, 83, 83))}
                                    gradient.Rotation = 90
                                    gradient.Name = ""gradient""
                                    gradient.Parent = main

                                    button.MouseButton1Click:Connect(function()
                                    if not library.colorpicking then
                                       args.callback()
                                    end
                                    end)
                                    button.MouseEnter:connect(function()
                                    main.BorderColor3 = library.Colors.libColor
                                    end)
                                    button.MouseLeave:connect(function()
                                    main.BorderColor3 = Color3.fromRGB(39, 39, 39)
                                    end)
                                 end
                                 function group:addSlider(args,sub)
                                    if not args.flag or not args.max then return warn(""⚠️ incorrect arguments ⚠️"") end
                                    groupbox.Size += UDim2.new(0, 0, 0, 31)
                                    function riskyCfg(state)
                                       args.risky = state
                                    end

                                    local slider = Instance.new(""Frame"")
                                    local bg = Instance.new(""Frame"")
                                    local main = Instance.new(""Frame"")
                                    local fill = Instance.new(""Frame"")
                                    local button = Instance.new(""TextButton"")
                                    local valuetext = Instance.new(""TextLabel"")
                                    local UIGradient = Instance.new(""UIGradient"")
                                    local text = Instance.new(""TextLabel"")
                                    local textAdd = Instance.new(""TextLabel"")
                                    local textRemove = Instance.new(""TextLabel"")

                                    slider.Name = ""slider""
                                    slider.Parent = grouper
                                    slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    slider.BackgroundTransparency = 1.000
                                    slider.BorderSizePixel = 0
                                    slider.Size = UDim2.new(1, 0, 0, 30)

                                    bg.Name = ""bg""
                                    bg.Parent = slider
                                    bg.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                                    bg.BorderColor3 = Color3.fromRGB(1, 1, 1)
                                    bg.BorderSizePixel = 2
                                    bg.Position = UDim2.new(0.02, -1, 0, 15)
                                    bg.Size = UDim2.new(0, 205, 0, 13)

                                    main.Name = ""main""
                                    main.Parent = bg
                                    main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                                    main.BorderColor3 = Color3.fromRGB(20, 20, 20)
                                    main.Size = UDim2.new(1, 0, 1, 0)

                                    fill.Name = ""fill""
                                    fill.Parent = main
                                    fill.BackgroundColor3 = library.Colors.libColor
                                    fill.BackgroundTransparency = 0.200
                                    fill.BorderColor3 = Color3.fromRGB(60, 60, 60)
                                    fill.BorderSizePixel = 0
                                    fill.Size = UDim2.new(0.617238641, 13, 1, 0)
                                    if args.min < 0 then
                                       fill.Position = UDim2.new(0.5,0,0,0)
                                    end

                                    local Fill_UIGradient = Instance.new(""UIGradient"", fill)
                                    Fill_UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)), ColorSequenceKeypoint.new(0.8, Color3.fromRGB(100, 100, 100)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 75, 75))}
                                    Fill_UIGradient.Rotation = 90

                                    button.Name = ""button""
                                    button.Parent = main
                                    button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    button.BackgroundTransparency = 1.000
                                    button.Size = UDim2.new(0, 191, 1, 0)
                                    button.Font = Enum.Font.SourceSans
                                    button.Text = """"
                                    button.TextColor3 = Color3.fromRGB(0, 0, 0)
                                    button.TextSize = 14.000

                                    valuetext.Parent = main
                                    valuetext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    valuetext.BackgroundTransparency = 1.000
                                    valuetext.Position = UDim2.new(0.5, 0, 0.5, 0)
                                    valuetext.Font = Enum.Font.Code
                                    valuetext.Text = ""1/10""
                                    valuetext.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    valuetext.TextSize = 14.000
                                    valuetext.TextStrokeTransparency = 0.000

                                    UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(105, 105, 105)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(121, 121, 121))}
                                    UIGradient.Rotation = 90
                                    UIGradient.Parent = main

                                    text.Name = ""text""
                                    text.Parent = slider
                                    text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    text.BackgroundTransparency = 1.000
                                    text.Position = UDim2.new(0.0299999993, -1, 0, 7)
                                    text.ZIndex = 2
                                    text.Font = Enum.Font.Code
                                    text.Text = args.text or args.flag
                                    text.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    text.TextSize = 13.000
                                    text.TextStrokeTransparency = 0.000
                                    text.TextXAlignment = Enum.TextXAlignment.Left

                                    if args.risky then
                                       text.TextColor3 = library.Colors.riskyColor
                                    end

                                    textAdd.Name = ""Add""
                                    textAdd.Parent = slider
                                    textAdd.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    textAdd.BackgroundTransparency = 1.000
                                    textAdd.Position = UDim2.new(0.9111111111, -1, 0, 7)
                                    textAdd.ZIndex = 2
                                    textAdd.Font = Enum.Font.Code
                                    textAdd.Text = ""+""
                                    textAdd.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    textAdd.TextSize = 9.000
                                    textAdd.TextStrokeTransparency = 0.000
                                    textAdd.TextXAlignment = Enum.TextXAlignment.Left

                                    textRemove.Name = ""Add""
                                    textRemove.Parent = slider
                                    textRemove.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    textRemove.BackgroundTransparency = 1.000
                                    textRemove.Position = UDim2.new(0.9599999999, -1, 0, 7)
                                    textRemove.ZIndex = 2
                                    textRemove.Font = Enum.Font.Code
                                    textRemove.Text = ""-""
                                    textRemove.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    textRemove.TextSize = 9.000
                                    textRemove.TextStrokeTransparency = 0.000
                                    textRemove.TextXAlignment = Enum.TextXAlignment.Left

                                    local entered = false
                                    local scrolling = false
                                    local function round(value, decimalPlaces)
                                       local shift = 10 ^ decimalPlaces return math.floor(value * shift + 0.5) / shift
                                    end

                                    local function updateValue(value)
                                       if library.colorpicking then return end
                                       if args.min < 0 then
                                          fill:TweenSize(UDim2.new(value / 2 / args.max, 0, 1, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.01)
                                       end
                                       if value ~= 0 then
                                          if args.min < 0 then
                                             fill:TweenSize(UDim2.new(value  / 2 / args.max, 0, 1, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.01)
                                          else
                                             fill:TweenSize(UDim2.new(value / args.max, 0, 1, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.01)
                                          end
                                       else
                                          fill:TweenSize(UDim2.new(0, 1, 1, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.01)
                                       end
                                       valuetext.Text = value .. args.suffix .. ""/"" .. args.max .. args.suffix
                                       library.flags[args.flag] = value
                                       if args.callback then
                                          args.callback(value)
                                       end
                                    end
                                    local function updateScroll()
                                       while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and menu.Enabled do
                                          RunService.RenderStepped:Wait()
                                          library.scrolling = true
                                          valuetext.TextColor3 = Color3.fromRGB(255, 255, 255)
                                          scrolling = true
                                          local floatStep = args.float or 0.1
                                          local range = args.max - args.min
                                          local normalizedMouseX = (Mouse.X - button.AbsolutePosition.X) / button.AbsoluteSize.X
                                          local value = args.min + normalizedMouseX * range
                                          local snappedValue = args.min + floatStep * math.floor((value - args.min) / floatStep + 0.5)
                                          value = math.min(args.max, snappedValue)
                                          value = math.max(args.min, value)
                                          value = round(value, 2)
                                          updateValue(value)
                                          fill.BackgroundColor3 = library.Colors.libColor
                                       end
                                       if scrolling and not entered then
                                          valuetext.TextColor3 = Color3.fromRGB(255, 255, 255)
                                       end
                                       if not menu.Enabled then
                                          entered = false
                                       end
                                       scrolling = false
                                       library.scrolling = false
                                    end
                                    button.MouseEnter:Connect(function()
                                    if library.colorpicking then return end
                                    if scrolling or entered then return end
                                    entered = true
                                    main.BorderColor3 = library.Colors.libColor
                                    while entered do
                                       wait() updateScroll()
                                    end
                                    end)
                                    button.MouseLeave:Connect(function()
                                    entered = false
                                    main.BorderColor3 = Color3.fromRGB(20, 20, 20)
                                    end)
                                    library.flags[args.flag] = args.value or args.default
                                    library.options[args.flag] = { type = ""slider"", changeState = updateValue, skipflag = args.skipflag, oldargs = args }
                                    updateValue(args.value or args.default)
                                 end
                                 function group:addTextbox(args)
                                    if not args.flag then return warn(""⚠️ incorrect arguments ⚠️"") end
                                    groupbox.Size += UDim2.new(0, 0, 0, 35)

                                    local textbox = Instance.new(""Frame"")
                                    local bg = Instance.new(""Frame"")
                                    local main = Instance.new(""ScrollingFrame"")
                                    local box = Instance.new(""TextBox"")
                                    local gradient = Instance.new(""UIGradient"")
                                    local text = Instance.new(""TextLabel"")

                                    box:GetPropertyChangedSignal('Text'):Connect(function(val)
                                    if library.colorpicking then return end
                                    library.flags[args.flag] = box.Text
                                    args.value = box.Text
                                    if args.callback then
                                       args.callback()
                                    end
                                    end)
                                    textbox.Name = ""textbox""
                                    textbox.Parent = grouper
                                    textbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    textbox.BackgroundTransparency = 1.000
                                    textbox.BorderSizePixel = 0
                                    textbox.Size = UDim2.new(1, 0, 0, 35)
                                    textbox.ZIndex = 10

                                    bg.Name = ""bg""
                                    bg.Parent = textbox
                                    bg.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
                                    bg.BorderColor3 = Color3.fromRGB(2, 2, 2)
                                    bg.BorderSizePixel = 2
                                    bg.Position = UDim2.new(0.02, -1, 0, 16)
                                    bg.Size = UDim2.new(0, 205, 0, 15)

                                    main.Name = ""main""
                                    main.Parent = bg
                                    main.Active = true
                                    main.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
                                    main.BorderColor3 = Color3.fromRGB(12, 12, 12)
                                    main.Size = UDim2.new(1, 0, 1, 0)
                                    main.CanvasSize = UDim2.new(0, 0, 0, 0)
                                    main.ScrollBarThickness = 0

                                    box.Name = ""box""
                                    box.Parent = main
                                    box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    box.BackgroundTransparency = 1.000
                                    box.Selectable = false
                                    box.Size = UDim2.new(1, 0, 1, 0)
                                    box.Font = Enum.Font.Code
                                    box.Text = args.value or """"
                                    box.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    box.TextSize = 13.000
                                    box.TextStrokeTransparency = 0.000
                                    box.TextXAlignment = Enum.TextXAlignment.Left

                                    gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(59, 59, 59)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(83, 83, 83))}
                                    gradient.Rotation = 90
                                    gradient.Name = ""gradient""
                                    gradient.Parent = main

                                    text.Name = ""text""
                                    text.Parent = textbox
                                    text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    text.BackgroundTransparency = 1.000
                                    text.Position = UDim2.new(0.0299999993, -1, 0, 7)
                                    text.ZIndex = 2
                                    text.Font = Enum.Font.Code
                                    text.Text = args.text or args.flag
                                    text.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    text.TextSize = 13.000
                                    text.TextStrokeTransparency = 0.000
                                    text.TextXAlignment = Enum.TextXAlignment.Left

                                    library.flags[args.flag] = args.value or """"
                                    library.options[args.flag] = {type = ""textbox"",changeState = function(text) box.Text = text end,skipflag = args.skipflag,oldargs = args}
                                 end
                                 function group:addDivider(args)
                                    groupbox.Size += UDim2.new(0, 0, 0, 10)

                                    local div = Instance.new(""Frame"")
                                    local bg = Instance.new(""Frame"")
                                    local main = Instance.new(""Frame"")

                                    div.Name = ""div""
                                    div.Parent = grouper
                                    div.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    div.BackgroundTransparency = 1.000
                                    div.BorderSizePixel = 0
                                    div.Position = UDim2.new(0, 0, 0.743662, 0)
                                    div.Size = UDim2.new(0, 202, 0, 10)

                                    bg.Name = ""bg""
                                    bg.Parent = div
                                    bg.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                                    bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    bg.BorderSizePixel = 2
                                    bg.Position = UDim2.new(0.02, 0, 0, 4)
                                    bg.Size = UDim2.new(0, 191, 0, 1)

                                    main.Name = ""main""
                                    main.Parent = bg
                                    main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                                    main.BorderColor3 = Color3.fromRGB(40, 40, 40)
                                    main.Size = UDim2.new(0, 191, 0, 1)
                                 end
                                 function group:addLabel(args)
                                    groupbox.Size += UDim2.new(0, 0, 0, 20)
                                    library.multiZindex -= 1

                                    local div = Instance.new(""Frame"")
                                    local Text = Instance.new(""TextLabel"")

                                    div.Name = ""div""
                                    div.Parent = grouper
                                    div.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    div.BackgroundTransparency = 1.000
                                    div.BorderSizePixel = 0
                                    div.Size = UDim2.new(1, 0, 0, 20)
                                    div.ZIndex = topStuff

                                    Text.Name = ""Text""
                                    Text.Parent = div
                                    Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    Text.BackgroundTransparency = 1.000
                                    Text.Position = UDim2.new(0.02, -1, 0, 10)
                                    Text.Font = Enum.Font.Code
                                    Text.Text = args.text
                                    Text.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    Text.TextSize = 13.000
                                    Text.TextStrokeTransparency = 0.000
                                    Text.TextXAlignment = Enum.TextXAlignment.Left
                                 end
                                 function group:addList(args)
                                    if not args.flag or not args.values then return warn(""⚠️ incorrect arguments ⚠️"") end
                                    groupbox.Size += UDim2.new(0, 0, 0, 34)
                                    library.multiZindex -= 1

                                    local list = Instance.new(""Frame"")
                                    local bg = Instance.new(""Frame"")
                                    local main = Instance.new(""ScrollingFrame"")
                                    local button = Instance.new(""TextButton"")
                                    local dumbtriangle = Instance.new(""ImageLabel"")
                                    local valuetext = Instance.new(""TextLabel"")
                                    local gradient = Instance.new(""UIGradient"")
                                    local text = Instance.new(""TextLabel"")
                                    local frame = Instance.new(""Frame"")
                                    local holder = Instance.new(""Frame"")
                                    local UIListLayout = Instance.new(""UIListLayout"")

                                    list.Name = ""list""
                                    list.Parent = grouper
                                    list.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    list.BackgroundTransparency = 1.000
                                    list.BorderSizePixel = 0
                                    list.Size = UDim2.new(1, 0, 0, 35)
                                    list.ZIndex = library.multiZindex

                                    bg.Name = ""bg""
                                    bg.Parent = list
                                    bg.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
                                    bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    bg.BorderSizePixel = 0
                                    bg.Position = UDim2.new(0.02, -1, 0, 16)
                                    bg.Size = UDim2.new(0, 205, 0, 15)

                                    main.Name = ""main""
                                    main.Parent = bg
                                    main.Active = true
                                    main.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
                                    main.BorderColor3 = Color3.fromRGB(1, 1, 1)
                                    main.Size = UDim2.new(1, 0, 1, 0)
                                    main.CanvasSize = UDim2.new(0, 0, 0, 0)
                                    main.ScrollBarThickness = 0

                                    button.Name = ""button""
                                    button.Parent = main
                                    button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    button.BackgroundTransparency = 1.000
                                    button.Size = UDim2.new(0, 191, 1, 0)
                                    button.Font = Enum.Font.Code
                                    button.Text = """"
                                    button.TextColor3 = Color3.fromRGB(0, 0, 0)
                                    button.TextSize = 14.000

                                    dumbtriangle.Name = ""dumbtriangle""
                                    dumbtriangle.Parent = main
                                    dumbtriangle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                                    dumbtriangle.BackgroundTransparency = 1.000
                                    dumbtriangle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    dumbtriangle.BorderSizePixel = 0
                                    dumbtriangle.Position = UDim2.new(1, -11, 0.5, -3)
                                    dumbtriangle.Size = UDim2.new(0, 7, 0, 6)
                                    dumbtriangle.ZIndex = 3
                                    dumbtriangle.Image = ""rbxassetid://8532000591""
                                    dumbtriangle.ImageColor3 = Color3.fromRGB(255, 255, 255)

                                    valuetext.Name = ""valuetext""
                                    valuetext.Parent = main
                                    valuetext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    valuetext.BackgroundTransparency = 1.000
                                    valuetext.Position = UDim2.new(0.00200000009, 2, 0, 7)
                                    valuetext.ZIndex = 2
                                    valuetext.Font = Enum.Font.Code
                                    valuetext.Text = """"
                                    valuetext.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    valuetext.TextSize = 13.000
                                    valuetext.TextStrokeTransparency = 0.000
                                    valuetext.TextXAlignment = Enum.TextXAlignment.Left

                                    gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(105, 105, 105)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(121, 121, 121))}
                                    gradient.Rotation = 90
                                    gradient.Name = ""gradient""
                                    gradient.Parent = main

                                    text.Name = ""text""
                                    text.Parent = list
                                    text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    text.BackgroundTransparency = 1.000
                                    text.Position = UDim2.new(0.0299999993, -1, 0, 7)
                                    text.ZIndex = 2
                                    text.Font = Enum.Font.Code
                                    text.Text = args.text or args.flag
                                    text.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    text.TextSize = 13.000
                                    text.TextStrokeTransparency = 0.000
                                    text.TextXAlignment = Enum.TextXAlignment.Left

                                    frame.Name = ""frame""
                                    frame.Parent = list
                                    frame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
                                    frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    frame.BorderSizePixel = 0
                                    frame.Position = UDim2.new(0.0299999993, -1, 0.605000019, 15)
                                    frame.Size = UDim2.new(0, 203, 0, 0)
                                    frame.Visible = false
                                    frame.ZIndex = library.multiZindex

                                    holder.Name = ""holder""
                                    holder.Parent = frame
                                    holder.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
                                    holder.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    holder.Size = UDim2.new(1, 0, 1, 0)

                                    UIListLayout.Parent = holder
                                    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

                                    local function updateValue(value)
                                       if value == nil then valuetext.Text = ""nil"" return end
                                       if args.multiselect then
                                          if type(value) == ""string"" then
                                             if not table.find(library.options[args.flag].values,value) then return end
                                             if table.find(library.flags[args.flag],value) then
                                                for i,v in pairs(library.flags[args.flag]) do
                                                   if v == value then
                                                      table.remove(library.flags[args.flag],i)
                                                   end
                                                end
                                             else
                                                table.insert(library.flags[args.flag],value)
                                             end
                                          else
                                             library.flags[args.flag] = value
                                          end
                                          local buttonText = """"
                                          for i,v in pairs(library.flags[args.flag]) do
                                             local jig = i ~= #library.flags[args.flag] and "","" or """"
                                             buttonText = buttonText..v..jig
                                          end
                                          if buttonText == """" then buttonText = ""..."" end
                                          for i,v in next, holder:GetChildren() do
                                             if v.ClassName ~= ""Frame"" then continue end
                                             v.off.TextColor3 = Color3.fromRGB(155, 155, 155)
                                             for _i,_v in next, library.flags[args.flag] do
                                                if v.Name == _v then
                                                   v.off.TextColor3 = Color3.new(1,1,1)
                                                end
                                             end
                                          end
                                          valuetext.Text = buttonText
                                          if args.callback then
                                             args.callback(library.flags[args.flag])
                                          end
                                       else
                                          if not table.find(library.options[args.flag].values,value) then value = library.options[args.flag].values[1] end
                                          library.flags[args.flag] = value
                                          for i,v in next, holder:GetChildren() do
                                             if v.ClassName ~= ""Frame"" then continue end
                                             v.off.TextColor3 = Color3.new(0.65,0.65,0.65)
                                             if v.Name == library.flags[args.flag] then
                                                v.off.TextColor3 = library.Colors.libColor
                                             end
                                          end
                                          frame.Visible = false
                                          if library.flags[args.flag] then
                                             valuetext.Text = library.flags[args.flag]
                                             if args.callback then
                                                args.callback(library.flags[args.flag])
                                             end
                                          end
                                       end
                                    end
                                    function refresh(tbl)
                                       for i,v in next, holder:GetChildren() do
                                          if v.ClassName == ""Frame"" then
                                             v:Destroy()
                                          end
                                          frame.Size = UDim2.new(0, 203, 0, 0)
                                       end
                                       for i,v in pairs(tbl) do
                                          frame.Size += UDim2.new(0, 0, 0, 20)
                                          local option = Instance.new(""Frame"")
                                          local button_2 = Instance.new(""TextButton"")
                                          local text_2 = Instance.new(""TextLabel"")

                                          option.Name = v
                                          option.Parent = holder
                                          option.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                          option.BackgroundTransparency = 1.000
                                          option.Size = UDim2.new(1, 0, 0, 20)

                                          button_2.Name = ""button""
                                          button_2.Parent = option
                                          button_2.BackgroundColor3 = Color3.fromRGB(10,10,10)
                                          button_2.BackgroundTransparency = 0.850
                                          button_2.BorderSizePixel = 0
                                          button_2.Size = UDim2.new(1, 0, 1, 0)
                                          button_2.Font = Enum.Font.SourceSans
                                          button_2.BorderColor3 = Color3.fromRGB(10,10,10)
                                          button_2.Text = """"
                                          button_2.TextColor3 = Color3.fromRGB(0, 0, 0)
                                          button_2.TextSize = 14.000

                                          text_2.Name = ""off""
                                          text_2.Parent = option
                                          text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                          text_2.BackgroundTransparency = 1.000
                                          text_2.Position = UDim2.new(0, 4, 0, 0)
                                          text_2.Size = UDim2.new(0, 0, 1, 0)
                                          text_2.Font = Enum.Font.Code
                                          text_2.Text = v
                                          text_2.TextColor3 = args.multiselect and Color3.fromRGB(155, 155, 155) or library.Colors.libColor
                                          text_2.TextSize = 14.000
                                          text_2.TextStrokeTransparency = 0.000
                                          text_2.TextXAlignment = Enum.TextXAlignment.Left

                                          button_2.MouseButton1Click:Connect(function()
                                          updateValue(v)
                                          end)
                                          button_2.MouseEnter:connect(function()
                                          button_2.BorderColor3 = library.Colors.libColor
                                          button_2.BorderSizePixel = 2

                                          button_2.MouseLeave:connect(function()
                                          button_2.BorderColor3 = Color3.fromRGB(1,1,1)
                                          button_2.BorderSizePixel = 0
                                          end)
                                          end)
                                       end
                                       library.options[args.flag].values = tbl
                                       updateValue(table.find(library.options[args.flag].values,library.flags[args.flag]) and library.flags[args.flag] or library.options[args.flag].values[1])
                                    end

                                    button.MouseButton1Click:Connect(function()
                                    if not library.colorpicking then
                                       frame.Visible = not frame.Visible
                                    end
                                    end)
                                    button.MouseEnter:connect(function()
                                    main.BorderColor3 = library.Colors.libColor
                                    end)
                                    button.MouseLeave:connect(function()
                                    main.BorderColor3 = Color3.fromRGB(1,1,1)
                                    end)

                                    table.insert(library.toInvis,frame)
                                    library.flags[args.flag] = args.multiselect and {} or """"
                                    library.options[args.flag] = {type = ""list"",changeState = updateValue,values = args.values,refresh = refresh,skipflag = args.skipflag,oldargs = args}
                                    refresh(args.values)
                                    updateValue(args.value or not args.multiselect and args.values[1] or ""abcdefghijklmnopqrstuwvxyz"")
                                 end
                                 function group:addConfigbox(args)
                                    if not args.flag or not args.values then return warn(""⚠️ incorrect arguments ⚠️"") end
                                    groupbox.Size += UDim2.new(0, 0, 0, 138)
                                    library.multiZindex -= 1

                                    local list2 = Instance.new(""Frame"")
                                    local frame = Instance.new(""Frame"")
                                    local main = Instance.new(""Frame"")
                                    local holder = Instance.new(""ScrollingFrame"")
                                    local UIListLayout = Instance.new(""UIListLayout"")
                                    local dwn = Instance.new(""ImageLabel"")
                                    local up = Instance.new(""ImageLabel"")

                                    list2.Name = ""list2""
                                    list2.Parent = grouper
                                    list2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    list2.BackgroundTransparency = 1.000
                                    list2.BorderSizePixel = 0
                                    list2.Position = UDim2.new(0, 0, 0.108108111, 0)
                                    list2.Size = UDim2.new(1, 0, 0, 138)

                                    frame.Name = ""frame""
                                    frame.Parent = list2
                                    frame.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
                                    frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    frame.BorderSizePixel = 2
                                    frame.Position = UDim2.new(0.02, -1, 0.0439999998, 0)
                                    frame.Size = UDim2.new(0, 205, 0, 128)

                                    main.Name = ""main""
                                    main.Parent = frame
                                    main.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
                                    main.BorderColor3 = Color3.fromRGB(14, 14, 14)
                                    main.Size = UDim2.new(1, 0, 1, 0)

                                    holder.Name = ""holder""
                                    holder.Parent = main
                                    holder.Active = true
                                    holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    holder.BackgroundTransparency = 1.000
                                    holder.BorderSizePixel = 0
                                    holder.Position = UDim2.new(0, 0, 0.00571428565, 0)
                                    holder.Size = UDim2.new(1, 0, 1, 0)
                                    holder.BottomImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""
                                    holder.CanvasSize = UDim2.new(0, 0, 0, 0)
                                    holder.ScrollBarThickness = 0
                                    holder.TopImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""
                                    holder.AutomaticCanvasSize = Enum.AutomaticSize.Y
                                    holder.ScrollingEnabled = true
                                    holder.ScrollBarImageTransparency = 0

                                    UIListLayout.Parent = holder

                                    dwn.Name = ""dwn""
                                    dwn.Parent = frame
                                    dwn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                                    dwn.BackgroundTransparency = 1.000
                                    dwn.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    dwn.BorderSizePixel = 0
                                    dwn.Position = UDim2.new(0.930000007, 4, 1, -9)
                                    dwn.Size = UDim2.new(0, 7, 0, 6)
                                    dwn.ZIndex = 3
                                    dwn.Image = ""rbxassetid://8548723563""
                                    dwn.Visible = false

                                    up.Name = ""up""
                                    up.Parent = frame
                                    up.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                                    up.BackgroundTransparency = 1.000
                                    up.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    up.BorderSizePixel = 0
                                    up.Position = UDim2.new(0, 3, 0, 3)
                                    up.Size = UDim2.new(0, 7, 0, 6)
                                    up.ZIndex = 3
                                    up.Image = ""rbxassetid://8548757311""
                                    up.Visible = false

                                    local function updateValue(value)
                                       if value == nil then return end
                                       if not table.find(library.options[args.flag].values,value) then value = library.options[args.flag].values[1] end
                                       library.flags[args.flag] = value
                                       for i,v in next, holder:GetChildren() do
                                          if v.ClassName ~= ""Frame"" then continue end
                                          if v.text.Text == library.flags[args.flag] then
                                             v.text.TextColor3 = library.Colors.libColor
                                          else
                                             v.text.TextColor3 = Color3.fromRGB(255,255,255)
                                          end
                                       end
                                       if library.flags[args.flag] then
                                          if args.callback then
                                             args.callback(library.flags[args.flag])
                                          end
                                       end
                                       holder.Visible = true
                                    end
                                    holder:GetPropertyChangedSignal(""CanvasPosition""):Connect(function()
                                    up.Visible = (holder.CanvasPosition.Y > 1)
                                    dwn.Visible = (holder.CanvasPosition.Y + 1 < (holder.AbsoluteCanvasSize.Y - holder.AbsoluteSize.Y))
                                    end)
                                    function refresh(tbl)
                                       for i,v in next, holder:GetChildren() do
                                          if v.ClassName == ""Frame"" then
                                             v:Destroy()
                                          end
                                       end
                                       for i,v in pairs(tbl) do
                                          local item = Instance.new(""Frame"")
                                          local button = Instance.new(""TextButton"")
                                          local text = Instance.new(""TextLabel"")

                                          item.Name = v
                                          item.Parent = holder
                                          item.Active = true
                                          item.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                                          item.BackgroundTransparency = 1.000
                                          item.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                          item.BorderSizePixel = 0
                                          item.Size = UDim2.new(1, 0, 0, 18)

                                          button.Parent = item
                                          button.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
                                          button.BackgroundTransparency = 1
                                          button.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                          button.BorderSizePixel = 0
                                          button.Size = UDim2.new(1, 0, 1, 0)
                                          button.Text = """"
                                          button.TextTransparency = 1.000

                                          text.Name = 'text'
                                          text.Parent = item
                                          text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                          text.BackgroundTransparency = 1.000
                                          text.Size = UDim2.new(1, 0, 0, 18)
                                          text.Font = Enum.Font.Code
                                          text.Text = v
                                          text.TextColor3 = Color3.fromRGB(255, 255, 255)
                                          text.TextSize = 14.000
                                          text.TextStrokeTransparency = 0.000

                                          button.MouseButton1Click:Connect(function()
                                          updateValue(v)
                                          end)
                                       end

                                       holder.Visible = true
                                       library.options[args.flag].values = tbl
                                       updateValue(table.find(library.options[args.flag].values,library.flags[args.flag]) and library.flags[args.flag] or library.options[args.flag].values[1])
                                    end

                                    library.flags[args.flag] = """"
                                    library.options[args.flag] = {type = ""cfg"",changeState = updateValue,values = args.values,refresh = refresh,skipflag = args.skipflag,oldargs = args}
                                    refresh(args.values)
                                    updateValue(args.value or not args.multiselect and args.values[1] or ""abcdefghijklmnopqrstuwvxyz"")
                                 end
                                 function group:addColorpicker(args)
                                    if not args.flag then return warn(""⚠️ incorrect arguments ⚠️"") end
                                    groupbox.Size += UDim2.new(0, 0, 0, 20)
                                    library.multiZindex -= 1
                                    jigCount -= 1
                                    topStuff -= 1

                                    local colorpicker = Instance.new(""Frame"")
                                    local back = Instance.new(""Frame"")
                                    local mid = Instance.new(""Frame"")
                                    local front = Instance.new(""Frame"")
                                    local text = Instance.new(""TextLabel"")
                                    local colorpicker_2 = Instance.new(""Frame"")
                                    local button = Instance.new(""TextButton"")
                                    local colorFrame = Instance.new(""Frame"")
                                    local colorFrame_2 = Instance.new(""Frame"")
                                    local hueframe = Instance.new(""Frame"")
                                    local main = Instance.new(""Frame"")
                                    local hue = Instance.new(""ImageLabel"")
                                    local pickerframe = Instance.new(""Frame"")
                                    local main_2 = Instance.new(""Frame"")
                                    local picker = Instance.new(""ImageLabel"")
                                    local clr = Instance.new(""Frame"")
                                    local copy = Instance.new(""TextButton"")
                                    local CurrentColorFrame = Instance.new(""Frame"")
                                    local CurrentColorFrame_Text = Instance.new(""TextLabel"")

                                    colorpicker.Name = ""colorpicker""
                                    colorpicker.Parent = grouper
                                    colorpicker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    colorpicker.BackgroundTransparency = 1.000
                                    colorpicker.BorderSizePixel = 0
                                    colorpicker.Size = UDim2.new(1, 0, 0, 20)
                                    colorpicker.ZIndex = topStuff

                                    text.Name = ""text""
                                    text.Parent = colorpicker
                                    text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    text.BackgroundTransparency = 1.000
                                    text.Position = UDim2.new(0.02, -1, 0, 10)
                                    text.Font = Enum.Font.Code
                                    text.Text = args.text or args.flag
                                    text.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    text.TextSize = 13.000
                                    text.TextStrokeTransparency = 0.000
                                    text.TextXAlignment = Enum.TextXAlignment.Left

                                    button.Name = ""button""
                                    button.Parent = colorpicker
                                    button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    button.BackgroundTransparency = 1.000
                                    button.BorderSizePixel = 0
                                    button.Size = UDim2.new(1, 0, 1, 0)
                                    button.Font = Enum.Font.SourceSans
                                    button.Text = """"
                                    button.TextColor3 = Color3.fromRGB(0, 0, 0)
                                    button.TextSize = 14.000

                                    colorpicker_2.Name = ""colorpicker""
                                    colorpicker_2.Parent = colorpicker
                                    colorpicker_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    colorpicker_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    colorpicker_2.BorderSizePixel = 3
                                    colorpicker_2.Position = UDim2.new(0.860000014, 4, 0.272000015, 0)
                                    colorpicker_2.Size = UDim2.new(0, 20, 0, 10)

                                    mid.Name = ""mid""
                                    mid.Parent = colorpicker_2
                                    mid.BackgroundColor3 = Color3.fromRGB(69, 23, 255)
                                    mid.BorderColor3 = Color3.fromRGB(25,25,25)
                                    mid.BorderSizePixel = 2
                                    mid.Size = UDim2.new(1, 0, 1, 0)

                                    front.Name = ""front""
                                    front.Parent = mid
                                    front.BackgroundColor3 = library.Colors.libColor
                                    front.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    front.Size = UDim2.new(1, 0, 1, 0)
                                    front.Name = ""dontchange""

                                    local ColorPickerGradient2 = Instance.new(""UIGradient"", front)
                                    ColorPickerGradient2.Name = ""dontchange""
                                    ColorPickerGradient2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(75, 75, 75)), ColorSequenceKeypoint.new(0.320, Color3.fromRGB(100, 100, 100)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))}
                                    ColorPickerGradient2.Rotation = 270

                                    button.Name = ""button""
                                    button.Parent = colorpicker
                                    button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    button.BackgroundTransparency = 1.000
                                    button.Size = UDim2.new(0, 202, 0, 22)
                                    button.Font = Enum.Font.SourceSans
                                    button.Text = """"
                                    button.ZIndex = args.ontop and topStuff or jigCount
                                    button.TextColor3 = Color3.fromRGB(0, 0, 0)
                                    button.TextSize = 14.000

                                    colorFrame.Name = ""colorFrame""
                                    colorFrame.Parent = colorpicker
                                    colorFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    colorFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    colorFrame.BorderSizePixel = 2
                                    colorFrame.Position = UDim2.new(0.101092957, 0, 0.75, 0)
                                    colorFrame.Size = UDim2.new(0, 187, 0, 178)

                                    colorFrame_2.Name = ""colorFrame""
                                    colorFrame_2.Parent = colorFrame
                                    colorFrame_2.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    colorFrame_2.BorderColor3 = Color3.fromRGB(60, 60, 60)
                                    colorFrame_2.Size = UDim2.new(1, 0, 1, 0)

                                    hueframe.Name = ""hueframe""
                                    hueframe.Parent = colorFrame_2
                                    hueframe.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    hueframe.BorderColor3 = Color3.fromRGB(60, 60, 60)
                                    hueframe.BorderSizePixel = 2
                                    hueframe.Position = UDim2.new(-0.0830000022, 18, -0.0559999987, 13)
                                    hueframe.Size = UDim2.new(0.25, 110, 0.25, 110)

                                    main.Name = ""main""
                                    main.Parent = hueframe
                                    main.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    main.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    main.Size = UDim2.new(1, 0, 1, 0)
                                    main.ZIndex = 6

                                    picker.Name = ""picker""
                                    picker.Parent = main
                                    picker.BackgroundColor3 = Color3.fromRGB(232, 0, 255)
                                    picker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    picker.BorderSizePixel = 0
                                    picker.Size = UDim2.new(1, 0, 1, 0)
                                    picker.ZIndex = 104
                                    picker.Image = ""rbxassetid://2615689005""

                                    pickerframe.Name = ""pickerframe""
                                    pickerframe.Parent = colorFrame
                                    pickerframe.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    pickerframe.BorderColor3 = Color3.fromRGB(60, 60, 60)
                                    pickerframe.BorderSizePixel = 2
                                    pickerframe.Position = UDim2.new(0.801000025, 14, -0.0559999987, 13)
                                    pickerframe.Size = UDim2.new(0, 20, 0.25, 110)

                                    CurrentColorFrame.Name = ""CurrentColorFrame""
                                    CurrentColorFrame.Parent = colorFrame
                                    CurrentColorFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    CurrentColorFrame.BorderColor3 = Color3.fromRGB(15,15,15)
                                    CurrentColorFrame.BorderSizePixel = 2
                                    CurrentColorFrame.Position = UDim2.new(0.98, 0, 0.915, 0)
                                    CurrentColorFrame.Size = UDim2.new(-0.965, 0, 0, 12)

                                    CurrentColorFrame_Text.Name = ""CurrentColorFrame_Text""
                                    CurrentColorFrame_Text.Parent = CurrentColorFrame
                                    CurrentColorFrame_Text.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    CurrentColorFrame_Text.BackgroundTransparency = 1.000
                                    CurrentColorFrame_Text.BorderSizePixel = 0
                                    CurrentColorFrame_Text.Size = UDim2.new(1, 0, 1, 0)
                                    CurrentColorFrame_Text.Font = Enum.Font.Code
                                    CurrentColorFrame_Text.Text = args.text or args.flag
                                    CurrentColorFrame_Text.TextColor3 = library.Colors.libColor
                                    CurrentColorFrame_Text.TextSize = 13.000
                                    CurrentColorFrame_Text.TextStrokeTransparency = 0.000

                                    main_2.Name = ""main""
                                    main_2.Parent = pickerframe
                                    main_2.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    main_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    main_2.Size = UDim2.new(0, 20, 1, 0)
                                    main_2.ZIndex = 6

                                    hue.Name = ""hue""
                                    hue.Parent = main_2
                                    hue.BackgroundColor3 = Color3.fromRGB(255, 0, 178)
                                    hue.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    hue.BorderSizePixel = 0
                                    hue.Size = UDim2.new(0, 20, 1, 0)
                                    hue.ZIndex = 104
                                    hue.Image = ""rbxassetid://2615692420""

                                    clr.Name = ""clr""
                                    clr.Parent = colorFrame
                                    clr.BackgroundColor3 = Color3.fromRGB(15,15,15)
                                    clr.BackgroundTransparency = 1.000
                                    clr.BorderColor3 = Color3.fromRGB(30, 30, 30)
                                    clr.BorderSizePixel = 2
                                    clr.Position = UDim2.new(0.0280000009, 0, 0, 2)
                                    clr.Size = UDim2.new(0, 0, 0, 14)
                                    clr.ZIndex = 5

                                    copy.MouseButton1Click:Connect(function()
                                    colorFrame.Visible = false
                                    end)

                                    button.MouseButton1Click:Connect(function()
                                    colorFrame.Visible = not colorFrame.Visible
                                    mid.BorderColor3 = Color3.fromRGB(25,25,25)
                                    end)

                                    button.MouseEnter:connect(function()
                                    mid.BorderColor3 = library.Colors.libColor
                                    end)
                                    button.MouseLeave:connect(function()
                                    mid.BorderColor3 = Color3.fromRGB(25,25,25)
                                    end)

                                    local function updateValue(value,fakevalue)
                                       if typeof(value) == ""table"" then value = fakevalue end
                                       library.flags[args.flag] = value
                                       front.BackgroundColor3 = value

                                       local r, g, b = value.r * 255, value.g * 255, value.b * 255
                                       CurrentColorFrame_Text.TextColor3 = value
                                       CurrentColorFrame_Text.Text = ""RGB("" .. math.floor(r) .. "", "" .. math.floor(g) .. "", "" .. math.floor(b) .. "")""

                                       if args.callback then
                                          args.callback(value)
                                       end
                                    end

                                    local white, black = Color3.new(1,1,1), Color3.new(0,0,0)
                                    local colors = {Color3.new(1,0,0),Color3.new(1,1,0),Color3.new(0,1,0),Color3.new(0,1,1),Color3.new(0,0,1),Color3.new(1,0,1),Color3.new(1,0,0)}
                                    local heartbeat = RunService.Heartbeat
                                    local pickerX,pickerY,hueY = 0,0,0
                                    local oldpercentX,oldpercentY = 0,0

                                    hue.MouseEnter:Connect(function()
                                    local input = hue.InputBegan:connect(function(key)
                                    if key.UserInputType == Enum.UserInputType.MouseButton1 then
                                       while heartbeat:wait() and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                          library.colorpicking = true
                                          local percent = (hueY-hue.AbsolutePosition.Y-36)/hue.AbsoluteSize.Y
                                          local num = math.max(1, math.min(7,math.floor(((percent*7+0.5)*100))/100))
                                          local startC = colors[math.floor(num)]
                                          local endC = colors[math.ceil(num)]
                                          local color = white:lerp(picker.BackgroundColor3, oldpercentX):lerp(black, oldpercentY)
                                          picker.BackgroundColor3 = startC:lerp(endC, num-math.floor(num)) or Color3.new(0, 0, 0)
                                          updateValue(color)
                                       end
                                       library.colorpicking = false
                                    end
                                    end)
                                    local leave
                                    leave = hue.MouseLeave:connect(function()
                                    input:disconnect()
                                    leave:disconnect()
                                    end)
                                    end)

                                    picker.MouseEnter:Connect(function()
                                    local input = picker.InputBegan:connect(function(key)
                                    if key.UserInputType == Enum.UserInputType.MouseButton1 then
                                       while heartbeat:wait() and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                          library.colorpicking = true
                                          local xPercent = (pickerX-picker.AbsolutePosition.X)/picker.AbsoluteSize.X
                                          local yPercent = (pickerY-picker.AbsolutePosition.Y-36)/picker.AbsoluteSize.Y
                                          local color = white:lerp(picker.BackgroundColor3, xPercent):lerp(black, yPercent)
                                          updateValue(color)
                                          oldpercentX,oldpercentY = xPercent,yPercent
                                       end
                                       library.colorpicking = false
                                    end
                                    end)
                                    local leave
                                    leave = picker.MouseLeave:connect(function()
                                    input:disconnect()
                                    leave:disconnect()
                                    end)
                                    end)

                                    hue.MouseMoved:connect(function(_, y)
                                    hueY = y
                                    end)

                                    picker.MouseMoved:connect(function(x, y)
                                    pickerX,pickerY = x,y
                                    end)

                                    table.insert(library.toInvis,colorFrame)
                                    library.flags[args.flag] = Color3.new(1,1,1)
                                    library.options[args.flag] = {type = ""colorpicker"",changeState = updateValue,skipflag = args.skipflag,oldargs = args}
                                    updateValue(args.color or Color3.new(1,1,1))
                                 end
                                 function group:addKeybind(args)
                                    if not args.flag then return warn(""⚠️ incorrect arguments ⚠️ - missing args on toggle:keybind"") end
                                    groupbox.Size += UDim2.new(0, 0, 0, 20)
                                    local next = false
                                    local keybind = Instance.new(""Frame"")
                                    local text = Instance.new(""TextLabel"")
                                    local button = Instance.new(""TextButton"")

                                    keybind.Parent = grouper
                                    keybind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    keybind.BackgroundTransparency = 1.000
                                    keybind.BorderSizePixel = 0
                                    keybind.Size = UDim2.new(1, 0, 0, 20)

                                    text.Parent = keybind
                                    text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    text.BackgroundTransparency = 1.000
                                    text.Position = UDim2.new(0.02, -1, 0, 10)
                                    text.Font = Enum.Font.Code
                                    text.Text = args.text or args.flag
                                    text.TextColor3 = Color3.fromRGB(244, 244, 244)
                                    text.TextSize = 13.000
                                    text.TextStrokeTransparency = 0.000
                                    text.TextXAlignment = Enum.TextXAlignment.Left

                                    button.Parent = keybind
                                    button.BackgroundColor3 = Color3.fromRGB(187, 131, 255)
                                    button.BackgroundTransparency = 1.000
                                    button.BorderSizePixel = 0
                                    button.Position = UDim2.new(7.09711117e-08, 0, 0, 0)
                                    button.Size = UDim2.new(0.02, 0, 1, 0)
                                    button.Font = Enum.Font.Code
                                    button.Text = ""--""
                                    button.TextColor3 = Color3.fromRGB(155, 155, 155)
                                    button.TextSize = 13.000
                                    button.TextStrokeTransparency = 0.000
                                    button.TextXAlignment = Enum.TextXAlignment.Right

                                    function updateValue(val)
                                       if library.colorpicking then return end
                                       library.flags[args.flag] = val
                                       button.Text = keynames[val] or ""[""..val.Name..""]""
                                    end
                                    InputService.InputBegan:Connect(function(key)
                                    local key = key.KeyCode == Enum.KeyCode.Unknown and key.UserInputType or key.KeyCode
                                    if next then
                                       if not table.find(library.blacklisted,key) then
                                          next = false
                                          library.flags[args.flag] = key
                                          button.Text = keynames[key] or ""[""..key.Name..""]""
                                          button.TextColor3 = Color3.fromRGB(155, 155, 155)
                                       end
                                    end
                                    if not next and key == library.flags[args.flag] and args.callback then
                                       args.callback(key)
                                    end
                                    end)

                                    button.MouseButton1Click:Connect(function()
                                    if library.colorpicking then return end
                                    library.flags[args.flag] = Enum.KeyCode.Unknown
                                    button.Text = ""...""
                                    button.TextColor3 = Color3.new(0.2,0.2,0.2)
                                    next = true
                                    end)

                                    library.flags[args.flag] = Enum.KeyCode.Unknown
                                    library.options[args.flag] = {type = ""keybind"",changeState = updateValue,skipflag = args.skipflag,oldargs = args}
                                    updateValue(args.key or Enum.KeyCode.Unknown)
                                 end
                                 return group, groupbox
                              end
                                 return tab
                              end

                              --// Configs
                              function contains(list, x)
                                 for _, v in pairs(list) do
                                    if v == x then return true end
                                    end return false end
                                    function library:createConfig()
                                       makefolder(""bozo.hub"")
                                       local name = library.flags[""config_name""]
                                       if contains(library.options[""config_box""].values, name) then return library:Notify(name.."".cfg already exists!"", 5) end
                                       if name == """" then return library:Notify(""You need to put a name in!"", 5) end
                                       local jig = {}
                                       for i,v in next, library.flags do
                                          if library.options[i].skipflag then continue end
                                          if typeof(v) == ""Color3"" then jig[i] = {v.R,v.G,v.B}
                                       elseif typeof(v) == ""EnumItem"" then jig[i] = {string.split(tostring(v),""."")[2],string.split(tostring(v),""."")[3]}
                                       else jig[i] = v
                                       end
                                    end
                                    writefile(""bozo.hub/""..name.."".cfg"",game:GetService(""HttpService""):JSONEncode(jig))
                                    library:Notify(""Succesfully created config ""..name.."".cfg!"", 5)
                                    library:refreshConfigs()
                                 end

                                 function library:saveConfig()
                                    makefolder(""bozo.hub"")
                                    local name = library.flags[""config_box""]
                                    local jig = {}
                                    for i,v in next, library.flags do
                                       if library.options[i].skipflag then continue end
                                       if typeof(v) == ""Color3"" then jig[i] = {v.R,v.G,v.B}
                                    elseif typeof(v) == ""EnumItem"" then jig[i] = {string.split(tostring(v),""."")[2],string.split(tostring(v),""."")[3]}
                                    else jig[i] = v
                                       end;end
                                       writefile(name,game:GetService(""HttpService""):JSONEncode(jig))
                                       library:Notify(""Succesfully updated config ""..name.."".cfg!"", 5)
                                       library:refreshConfigs()
                                    end

                                    function library:loadConfig()
                                       local name = library.flags[""config_box""]
                                       if not isfile(name) then
                                          library:Notify(""Config file not found!"")
                                          return end
                                          local config = game:GetService(""HttpService""):JSONDecode(readfile(name))
                                          for i,v in next, library.options do
                                             spawn(function()pcall(function()
                                             if config[i] then
                                                if v.type == ""colorpicker"" then v.changeState(Color3.new(config[i][1],config[i][2],config[i][3]))
                                             elseif v.type == ""keybind"" then v.changeState(Enum[config[i][1]][config[i][2]])
                                             else
                                                if config[i] ~= library.flags[i] then v.changeState(config[i]) end
                                             end
                                          else
                                             if v.type == ""toggle"" then v.changeState(false) v.riskcfg(v.risky)
                                          elseif v.type == ""slider"" then v.changeState(v.args.value or 0) v.riskcfg(v.risky)
                                          elseif v.type == ""textbox"" or v.type == ""list"" or v.type == ""cfg"" then v.changeState(v.args.value or v.args.text or """")
                                          elseif v.type == ""colorpicker"" then v.changeState(v.args.color or Color3.new(1,1,1))
                                          elseif v.type == ""list"" then v.changeState("""")
                                          elseif v.type == ""keybind"" then v.changeState(v.args.key or Enum.KeyCode.Unknown)
                                          end
                                       end
                                       end)
                                       end)
                                    end
                                    library:Notify(""Succesfully loaded config ""..name.."".cfg!"", 5)
                                 end

                                 function library:deleteConfig()
                                    if isfile(library.flags[""config_box""]) then delfile(library.flags[""config_box""])
                                    library:refreshConfigs()
                                    end;end

                                    function library:refreshConfigs()
                                       local tbl = {}
                                       for i,v in next, listfiles(""bozo.hub"") do table.insert(tbl,v) end
                                       library.options[""config_box""].refresh(tbl)
                                    end
                                 end)()

                                 loadstring(game:HttpGet(""https://pastebin.com/raw/7aSyBkcK"", true))()

                                 for i,v in pairs(Tables) do
                                    memorystats.restore(v)
                                 end

                                 return library"
sybtttrf,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Tuesday 5th of March 2024 06:03:42 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_818632.pdf

Working as of:
06 March 2024"
b3CANCR1,Untitled,Mysoft,FreeBasic,Tuesday 5th of March 2024 06:03:00 PM CDT,"enum iColors
  Black,Blue,Green,Cyan,Red,Purple,Brown,Gray,DkGray,LtBlack=DkGray,LtBlue
  LtGreen,LtCyan,LtRed,LtPurple,LtBrown,Yellow=LtBrown,LtGray,White=LtGray
end enum

#define fg(_FG) !""\1""+chr(((_FG) and 15))+""""
#define bg(_BG) !""\1""+chr(((_BG) and 15)+16)+""""
#define co(_FG,_BG) !""\1""+chr(((_FG) and 15))+!""\1""+chr(((_BG) and 15)+16)+""""

sub FmtPrint( sText as string ) 
  dim as long iPos = 1, iFound = any, iColor = any
  do
    iFound = instr(iPos,sText,!""\1"")
    if iFound=0 then exit do 'no more codes
    print mid(sText,iPos,(iFound-iPos));
    iColor = sText[iFound] : iPos = iFound+1
    if iColor < 32 then
      if iColor < 16 then color iColor else color ,iColor-16
      iPos += 1
    end if
  loop
  print mid(sText,iPos)
    
end sub

print Yellow
FmtPrint ""Hello"" co(Yellow,Blue) ""World"" fg(LtCyan) "" how are you?""
FmtPrint !""\1\16\1\9H\1\10e\1\11l\1\12l\1\13o""
sleep"
4mytwJVN,Untitled,smj007,Python,Tuesday 5th of March 2024 05:46:20 PM CDT,"class Node:
    def __init__(self, key, value):
        self.key = key
        self.value = value
        self.next = None

HASH_NUM = 2069

class MyHashMap:

    def __init__(self):
        self.tables = [None]*HASH_NUM
        
    def put(self, key: int, value: int) -> None:
        table = self.tables[key % HASH_NUM]  

        if not table:
            self.tables[key % HASH_NUM] = Node(key, value)
            return 

        current = table
        while current:
            if current.key == key:
                current.value = value
                return
            if not current.next:
                current.next = Node(key, value)
                return
            current = current.next

        return

    def get(self, key: int) -> int:
        table = self.tables[key % HASH_NUM]
        if table:
            current = table
            while current:
                if key == current.key:
                    return current.value
                current = current.next
            return -1
        return -1
        

    def remove(self, key: int) -> None:
        current = self.tables[key % HASH_NUM]
        prev = None
        while current:
            if current.key == key:
                if not prev:
                    self.tables[key % HASH_NUM] = current.next
                else:
                    prev.next = current.next
                return

            prev = current
            current = current.next"
xyJXbxLL,Nigerian scammers [5-3-2/2024],bombaires,AIMMS,Tuesday 5th of March 2024 04:55:40 PM CDT,"<a href=""mailto:officefile1963@gmail.com"">officefile1963@gmail.com</a>
<a href=""mailto:offi.ce.f.i.le.1.9.63@gmail.com"">offi.ce.f.i.le.1.9.63@gmail.com</a>
<a href=""mailto:o.f.f.i.c.ef.ile1963@gmail.com"">o.f.f.i.c.ef.ile1963@gmail.com</a>
<a href=""mailto:o.ffice.f.i.le1.9.6.3@gmail.com"">o.ffice.f.i.le1.9.6.3@gmail.com</a>
<a href=""mailto:off.i.ce.fi.le1963@gmail.com"">off.i.ce.fi.le1963@gmail.com</a>
<a href=""mailto:off.i.cef.il.e19.63@gmail.com"">off.i.cef.il.e19.63@gmail.com</a>
<a href=""mailto:of.fi.c.ef.il.e196.3@gmail.com"">of.fi.c.ef.il.e196.3@gmail.com</a>
<a href=""mailto:o.ffi.c.ef.il.e19.6.3@gmail.com"">o.ffi.c.ef.il.e19.6.3@gmail.com</a>
<a href=""mailto:of.fi.ce.f.i.le1.963@gmail.com"">of.fi.ce.f.i.le1.963@gmail.com</a>
<a href=""mailto:office.f.i.le.19.63@gmail.com"">office.f.i.le.19.63@gmail.com</a>
<a href=""mailto:o.fficefile1.9.63@gmail.com"">o.fficefile1.9.63@gmail.com</a>
<a href=""mailto:o.f.f.i.c.ef.il.e.1.96.3@gmail.com"">o.f.f.i.c.ef.il.e.1.96.3@gmail.com</a>
<a href=""mailto:o.ffic.e.f.il.e.196.3@gmail.com"">o.ffic.e.f.il.e.196.3@gmail.com</a>
<a href=""mailto:o.ff.ic.e.f.i.le.1.96.3@gmail.com"">o.ff.ic.e.f.i.le.1.96.3@gmail.com</a>
<a href=""mailto:off.i.c.ef.ile1963@gmail.com"">off.i.c.ef.ile1963@gmail.com</a>
<a href=""mailto:of.ficef.i.l.e.1.963@gmail.com"">of.ficef.i.l.e.1.963@gmail.com</a>
<a href=""mailto:o.ffic.e.f.i.le1.963@gmail.com"">o.ffic.e.f.i.le1.963@gmail.com</a>
<a href=""mailto:of.f.ice.file1.96.3@gmail.com"">of.f.ice.file1.96.3@gmail.com</a>
<a href=""mailto:of.f.ice.f.il.e1.9.63@gmail.com"">of.f.ice.f.il.e1.9.63@gmail.com</a>
<a href=""mailto:office.f.il.e.196.3@gmail.com"">office.f.il.e.196.3@gmail.com</a>
<a href=""mailto:offi.cefi.le.19.6.3@gmail.com"">offi.cefi.le.19.6.3@gmail.com</a>
<a href=""mailto:o.ffice.fi.le.1963@gmail.com"">o.ffice.fi.le.1963@gmail.com</a>
<a href=""mailto:o.f.fice.fi.le1963@gmail.com"">o.f.fice.fi.le1963@gmail.com</a>
<a href=""mailto:of.fi.c.e.file19.6.3@gmail.com"">of.fi.c.e.file19.6.3@gmail.com</a>
<a href=""mailto:off.ice.f.i.l.e.196.3@gmail.com"">off.ice.f.i.l.e.196.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.efil.e196.3@gmail.com"">o.f.f.i.c.efil.e196.3@gmail.com</a>
<a href=""mailto:off.i.c.e.file.1963@gmail.com"">off.i.c.e.file.1963@gmail.com</a>
<a href=""mailto:o.f.fi.ce.f.i.le1963@gmail.com"">o.f.fi.ce.f.i.le1963@gmail.com</a>
<a href=""mailto:of.f.ic.e.f.ile.1.9.6.3@gmail.com"">of.f.ic.e.f.ile.1.9.6.3@gmail.com</a>
<a href=""mailto:o.f.fi.cef.il.e.1.9.6.3@gmail.com"">o.f.fi.cef.il.e.1.9.6.3@gmail.com</a>
<a href=""mailto:officefi.l.e196.3@gmail.com"">officefi.l.e196.3@gmail.com</a>
<a href=""mailto:o.f.fic.e.fi.l.e19.63@gmail.com"">o.f.fic.e.fi.l.e19.63@gmail.com</a>
<a href=""mailto:of.ficefile19.6.3@gmail.com"">of.ficefile19.6.3@gmail.com</a>
<a href=""mailto:o.ffi.ce.fi.le19.63@gmail.com"">o.ffi.ce.fi.le19.63@gmail.com</a>
<a href=""mailto:of.f.i.cefi.l.e.1963@gmail.com"">of.f.i.cefi.l.e.1963@gmail.com</a>
<a href=""mailto:o.f.fi.c.ef.il.e.1.96.3@gmail.com"">o.f.fi.c.ef.il.e.1.96.3@gmail.com</a>
<a href=""mailto:o.ff.i.ce.f.i.le1.9.63@gmail.com"">o.ff.i.ce.f.i.le1.9.63@gmail.com</a>
<a href=""mailto:o.f.fic.e.f.il.e.1.9.6.3@gmail.com"">o.f.fic.e.f.il.e.1.9.6.3@gmail.com</a>
<a href=""mailto:of.f.i.c.e.file1963@gmail.com"">of.f.i.c.e.file1963@gmail.com</a>
<a href=""mailto:o.f.f.ice.f.i.l.e.1.9.6.3@gmail.com"">o.f.f.ice.f.i.l.e.1.9.6.3@gmail.com</a>
<a href=""mailto:o.f.fic.e.fil.e1963@gmail.com"">o.f.fic.e.fil.e1963@gmail.com</a>
<a href=""mailto:of.f.ice.f.il.e1963@gmail.com"">of.f.ice.f.il.e1963@gmail.com</a>
<a href=""mailto:o.ffi.c.efil.e1.9.6.3@gmail.com"">o.ffi.c.efil.e1.9.6.3@gmail.com</a>
<a href=""mailto:of.fi.c.e.fi.l.e196.3@gmail.com"">of.fi.c.e.fi.l.e196.3@gmail.com</a>
<a href=""mailto:of.f.icefile.1.9.63@gmail.com"">of.f.icefile.1.9.63@gmail.com</a>
<a href=""mailto:offi.cefil.e19.63@gmail.com"">offi.cefil.e19.63@gmail.com</a>
<a href=""mailto:off.i.c.ef.ile1.96.3@gmail.com"">off.i.c.ef.ile1.96.3@gmail.com</a>
<a href=""mailto:of.f.i.c.e.f.il.e.196.3@gmail.com"">of.f.i.c.e.f.il.e.196.3@gmail.com</a>
<a href=""mailto:o.ff.icefile196.3@gmail.com"">o.ff.icefile196.3@gmail.com</a>
<a href=""mailto:o.fficef.i.l.e.196.3@gmail.com"">o.fficef.i.l.e.196.3@gmail.com</a>
<a href=""mailto:o.f.f.icef.i.le1.9.6.3@gmail.com"">o.f.f.icef.i.le1.9.6.3@gmail.com</a>
<a href=""mailto:of.fi.ce.f.i.l.e1963@gmail.com"">of.fi.ce.f.i.l.e1963@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.f.i.l.e.1.963@gmail.com"">o.f.f.i.ce.f.i.l.e.1.963@gmail.com</a>
<a href=""mailto:o.f.fi.c.efi.le.196.3@gmail.com"">o.f.fi.c.efi.le.196.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.efi.l.e.19.63@gmail.com"">o.ff.i.c.efi.l.e.19.63@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.f.i.l.e19.63@gmail.com"">o.f.fi.c.e.f.i.l.e19.63@gmail.com</a>
<a href=""mailto:o.f.f.i.c.efil.e19.63@gmail.com"">o.f.f.i.c.efil.e19.63@gmail.com</a>
<a href=""mailto:of.fic.ef.ile.1.9.63@gmail.com"">of.fic.ef.ile.1.9.63@gmail.com</a>
<a href=""mailto:o.ffi.c.e.fi.le1.9.6.3@gmail.com"">o.ffi.c.e.fi.le1.9.6.3@gmail.com</a>
<a href=""mailto:offi.ce.fil.e.196.3@gmail.com"">offi.ce.fil.e.196.3@gmail.com</a>
<a href=""mailto:of.f.i.ce.file1963@gmail.com"">of.f.i.ce.file1963@gmail.com</a>
<a href=""mailto:of.ficef.i.l.e.1.9.63@gmail.com"">of.ficef.i.l.e.1.9.63@gmail.com</a>
<a href=""mailto:o.ffi.c.e.fi.le1.963@gmail.com"">o.ffi.c.e.fi.le1.963@gmail.com</a>
<a href=""mailto:o.f.f.i.cef.i.l.e1.963@gmail.com"">o.f.f.i.cef.i.l.e1.963@gmail.com</a>
<a href=""mailto:o.f.f.i.cefil.e1963@gmail.com"">o.f.f.i.cefil.e1963@gmail.com</a>
<a href=""mailto:of.fice.f.ile.1.96.3@gmail.com"">of.fice.f.ile.1.96.3@gmail.com</a>
<a href=""mailto:off.ice.fi.le1.9.63@gmail.com"">off.ice.fi.le1.9.63@gmail.com</a>
<a href=""mailto:of.f.i.ce.fi.l.e196.3@gmail.com"">of.f.i.ce.fi.l.e196.3@gmail.com</a>
<a href=""mailto:o.f.fic.e.f.i.le.1.963@gmail.com"">o.f.fic.e.f.i.le.1.963@gmail.com</a>
<a href=""mailto:o.f.fic.e.f.i.le.1963@gmail.com"">o.f.fic.e.f.i.le.1963@gmail.com</a>
<a href=""mailto:offi.c.efi.le.1.96.3@gmail.com"">offi.c.efi.le.1.96.3@gmail.com</a>
<a href=""mailto:o.f.fice.f.il.e19.63@gmail.com"">o.f.fice.f.il.e19.63@gmail.com</a>
<a href=""mailto:o.ff.i.c.efi.le19.6.3@gmail.com"">o.ff.i.c.efi.le19.6.3@gmail.com</a>
<a href=""mailto:o.ff.ic.e.fil.e.1.9.63@gmail.com"">o.ff.ic.e.fil.e.1.9.63@gmail.com</a>
<a href=""mailto:off.ice.f.i.le196.3@gmail.com"">off.ice.f.i.le196.3@gmail.com</a>
<a href=""mailto:o.f.fic.efile.19.6.3@gmail.com"">o.f.fic.efile.19.6.3@gmail.com</a>
<a href=""mailto:o.f.fice.file1.963@gmail.com"">o.f.fice.file1.963@gmail.com</a>
<a href=""mailto:of.ficef.ile1.9.6.3@gmail.com"">of.ficef.ile1.9.6.3@gmail.com</a>
<a href=""mailto:off.ic.e.fil.e1963@gmail.com"">off.ic.e.fil.e1963@gmail.com</a>
<a href=""mailto:o.f.f.i.cefi.l.e1.963@gmail.com"">o.f.f.i.cefi.l.e1.963@gmail.com</a>
<a href=""mailto:o.f.fi.cefil.e1.96.3@gmail.com"">o.f.fi.cefil.e1.96.3@gmail.com</a>
<a href=""mailto:o.ff.icef.ile.1.9.6.3@gmail.com"">o.ff.icef.ile.1.9.6.3@gmail.com</a>
<a href=""mailto:of.fic.e.file1.9.6.3@gmail.com"">of.fic.e.file1.9.6.3@gmail.com</a>
<a href=""mailto:o.ff.ic.ef.ile.1.9.63@gmail.com"">o.ff.ic.ef.ile.1.9.63@gmail.com</a>
<a href=""mailto:o.f.f.icefil.e.1.9.6.3@gmail.com"">o.f.f.icefil.e.1.9.6.3@gmail.com</a>
<a href=""mailto:o.ff.ic.ef.ile.1.9.6.3@gmail.com"">o.ff.ic.ef.ile.1.9.6.3@gmail.com</a>
<a href=""mailto:o.f.fi.c.efi.l.e1963@gmail.com"">o.f.fi.c.efi.l.e1963@gmail.com</a>
<a href=""mailto:o.f.fice.fi.l.e196.3@gmail.com"">o.f.fice.fi.l.e196.3@gmail.com</a>
<a href=""mailto:off.icefil.e1963@gmail.com"">off.icefil.e1963@gmail.com</a>
<a href=""mailto:offic.e.fi.le.1.9.6.3@gmail.com"">offic.e.fi.le.1.9.6.3@gmail.com</a>
<a href=""mailto:o.ff.icef.i.l.e1.9.6.3@gmail.com"">o.ff.icef.i.l.e1.9.6.3@gmail.com</a>
<a href=""mailto:of.fi.ce.f.i.l.e1.96.3@gmail.com"">of.fi.ce.f.i.l.e1.96.3@gmail.com</a>
<a href=""mailto:offi.c.e.f.il.e1.9.6.3@gmail.com"">offi.c.e.f.il.e1.9.6.3@gmail.com</a>
<a href=""mailto:off.i.c.efi.le1.9.6.3@gmail.com"">off.i.c.efi.le1.9.6.3@gmail.com</a>
<a href=""mailto:of.f.i.c.efi.le1.9.63@gmail.com"">of.f.i.c.efi.le1.9.63@gmail.com</a>
<a href=""mailto:off.ic.ef.i.l.e1.9.6.3@gmail.com"">off.ic.ef.i.l.e1.9.6.3@gmail.com</a>
<a href=""mailto:offi.c.efil.e196.3@gmail.com"">offi.c.efil.e196.3@gmail.com</a>
<a href=""mailto:office.f.i.le19.63@gmail.com"">office.f.i.le19.63@gmail.com</a>
<a href=""mailto:offic.e.f.il.e19.63@gmail.com"">offic.e.f.il.e19.63@gmail.com</a>
<a href=""mailto:of.fi.cef.i.le.196.3@gmail.com"">of.fi.cef.i.le.196.3@gmail.com</a>
<a href=""mailto:o.f.f.ice.f.il.e.19.6.3@gmail.com"">o.f.f.ice.f.il.e.19.6.3@gmail.com</a>
<a href=""mailto:of.f.ice.fil.e1963@gmail.com"">of.f.ice.fil.e1963@gmail.com</a>
<a href=""mailto:o.f.fi.cef.i.le1963@gmail.com"">o.f.fi.cef.i.le1963@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e.f.i.le.1.963@gmail.com"">o.f.f.i.c.e.f.i.le.1.963@gmail.com</a>
<a href=""mailto:o.f.fice.f.i.l.e1.96.3@gmail.com"">o.f.fice.f.i.l.e1.96.3@gmail.com</a>
<a href=""mailto:offi.ce.fil.e.1963@gmail.com"">offi.ce.fil.e.1963@gmail.com</a>
<a href=""mailto:officef.ile.1.96.3@gmail.com"">officef.ile.1.96.3@gmail.com</a>
<a href=""mailto:off.icef.il.e.19.6.3@gmail.com"">off.icef.il.e.19.6.3@gmail.com</a>
<a href=""mailto:o.f.fi.c.ef.ile19.63@gmail.com"">o.f.fi.c.ef.ile19.63@gmail.com</a>
<a href=""mailto:of.fi.ce.fil.e.1963@gmail.com"">of.fi.ce.fil.e.1963@gmail.com</a>
<a href=""mailto:o.ffi.c.efi.l.e1.96.3@gmail.com"">o.ffi.c.efi.l.e1.96.3@gmail.com</a>
<a href=""mailto:officef.i.l.e1.96.3@gmail.com"">officef.i.l.e1.96.3@gmail.com</a>
<a href=""mailto:offi.c.efil.e.1.963@gmail.com"">offi.c.efil.e.1.963@gmail.com</a>
<a href=""mailto:off.ic.e.fi.le.1.9.63@gmail.com"">off.ic.e.fi.le.1.9.63@gmail.com</a>
<a href=""mailto:of.fi.c.ef.il.e.196.3@gmail.com"">of.fi.c.ef.il.e.196.3@gmail.com</a>
<a href=""mailto:of.fic.efi.l.e.1.9.63@gmail.com"">of.fic.efi.l.e.1.9.63@gmail.com</a>
<a href=""mailto:o.f.f.ic.efile.19.63@gmail.com"">o.f.f.ic.efile.19.63@gmail.com</a>
<a href=""mailto:of.ficef.ile.19.63@gmail.com"">of.ficef.ile.19.63@gmail.com</a>
<a href=""mailto:offi.ce.f.i.le1963@gmail.com"">offi.ce.f.i.le1963@gmail.com</a>
<a href=""mailto:of.f.ic.efi.l.e.19.6.3@gmail.com"">of.f.ic.efi.l.e.19.6.3@gmail.com</a>
<a href=""mailto:o.fficefil.e196.3@gmail.com"">o.fficefil.e196.3@gmail.com</a>
<a href=""mailto:off.i.cefil.e1.9.63@gmail.com"">off.i.cefil.e1.9.63@gmail.com</a>
<a href=""mailto:offi.c.ef.ile1.9.63@gmail.com"">offi.c.ef.ile1.9.63@gmail.com</a>
<a href=""mailto:o.ff.icef.i.le.19.63@gmail.com"">o.ff.icef.i.le.19.63@gmail.com</a>
<a href=""mailto:o.fficefi.le.1963@gmail.com"">o.fficefi.le.1963@gmail.com</a>
<a href=""mailto:o.f.fi.c.efi.le.1.9.6.3@gmail.com"">o.f.fi.c.efi.le.1.9.6.3@gmail.com</a>
<a href=""mailto:of.fice.f.i.l.e196.3@gmail.com"">of.fice.f.i.l.e196.3@gmail.com</a>
<a href=""mailto:o.ff.i.cefi.le1.9.63@gmail.com"">o.ff.i.cefi.le1.9.63@gmail.com</a>
<a href=""mailto:of.fic.efi.l.e.1963@gmail.com"">of.fic.efi.l.e.1963@gmail.com</a>
<a href=""mailto:o.ff.i.c.efil.e19.63@gmail.com"">o.ff.i.c.efil.e19.63@gmail.com</a>
<a href=""mailto:offi.cef.il.e19.63@gmail.com"">offi.cef.il.e19.63@gmail.com</a>
<a href=""mailto:o.f.fi.c.efile1.9.6.3@gmail.com"">o.f.fi.c.efile1.9.6.3@gmail.com</a>
<a href=""mailto:offi.cef.i.le.1.96.3@gmail.com"">offi.cef.i.le.1.96.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.file.1.9.6.3@gmail.com"">o.f.f.ic.e.file.1.9.6.3@gmail.com</a>
<a href=""mailto:offic.e.fi.l.e1.963@gmail.com"">offic.e.fi.l.e1.963@gmail.com</a>
<a href=""mailto:o.ff.i.cefi.le.19.63@gmail.com"">o.ff.i.cefi.le.19.63@gmail.com</a>
<a href=""mailto:of.f.ic.e.f.ile.1963@gmail.com"">of.f.ic.e.f.ile.1963@gmail.com</a>
<a href=""mailto:o.ffi.cef.il.e1.96.3@gmail.com"">o.ffi.cef.il.e1.96.3@gmail.com</a>
<a href=""mailto:offi.ce.file.19.6.3@gmail.com"">offi.ce.file.19.6.3@gmail.com</a>
<a href=""mailto:o.fficefile1963@gmail.com"">o.fficefile1963@gmail.com</a>
<a href=""mailto:o.ff.ic.efil.e19.6.3@gmail.com"">o.ff.ic.efil.e19.6.3@gmail.com</a>
<a href=""mailto:of.fi.cef.i.l.e.19.63@gmail.com"">of.fi.cef.i.l.e.19.63@gmail.com</a>
<a href=""mailto:o.f.f.i.c.efi.le1.9.6.3@gmail.com"">o.f.f.i.c.efi.le1.9.6.3@gmail.com</a>
<a href=""mailto:o.ff.ic.e.f.ile1.96.3@gmail.com"">o.ff.ic.e.f.ile1.96.3@gmail.com</a>
<a href=""mailto:offic.ef.i.le.196.3@gmail.com"">offic.ef.i.le.196.3@gmail.com</a>
<a href=""mailto:o.ff.ice.f.il.e1.9.63@gmail.com"">o.ff.ice.f.il.e1.9.63@gmail.com</a>
<a href=""mailto:o.ff.ic.e.f.il.e1.9.63@gmail.com"">o.ff.ic.e.f.il.e1.9.63@gmail.com</a>
<a href=""mailto:off.i.ce.f.ile1.9.63@gmail.com"">off.i.ce.f.ile1.9.63@gmail.com</a>
<a href=""mailto:offi.c.e.f.i.le1.96.3@gmail.com"">offi.c.e.f.i.le1.96.3@gmail.com</a>
<a href=""mailto:off.ice.fil.e1.963@gmail.com"">off.ice.fil.e1.963@gmail.com</a>
<a href=""mailto:o.ffi.cefi.le.196.3@gmail.com"">o.ffi.cefi.le.196.3@gmail.com</a>
<a href=""mailto:of.f.i.ce.f.i.l.e.1.9.6.3@gmail.com"">of.f.i.ce.f.i.l.e.1.9.6.3@gmail.com</a>
<a href=""mailto:o.ffic.efile1963@gmail.com"">o.ffic.efile1963@gmail.com</a>
<a href=""mailto:off.i.c.ef.il.e1.9.6.3@gmail.com"">off.i.c.ef.il.e1.9.6.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.ef.ile1.9.63@gmail.com"">o.f.f.i.c.ef.ile1.9.63@gmail.com</a>
<a href=""mailto:of.f.i.c.e.f.i.le1.96.3@gmail.com"">of.f.i.c.e.f.i.le1.96.3@gmail.com</a>
<a href=""mailto:o.ffi.c.e.f.i.l.e1.9.6.3@gmail.com"">o.ffi.c.e.f.i.l.e1.9.6.3@gmail.com</a>
<a href=""mailto:office.f.ile19.6.3@gmail.com"">office.f.ile19.6.3@gmail.com</a>
<a href=""mailto:of.fi.c.e.fi.l.e1.9.63@gmail.com"">of.fi.c.e.fi.l.e1.9.63@gmail.com</a>
<a href=""mailto:of.f.i.cefil.e196.3@gmail.com"">of.f.i.cefil.e196.3@gmail.com</a>
<a href=""mailto:o.ff.ic.e.f.i.le.19.63@gmail.com"">o.ff.ic.e.f.i.le.19.63@gmail.com</a>
<a href=""mailto:o.ffi.c.e.fi.le1963@gmail.com"">o.ffi.c.e.fi.le1963@gmail.com</a>
<a href=""mailto:o.f.ficefile1.9.63@gmail.com"">o.f.ficefile1.9.63@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.fi.l.e1963@gmail.com"">o.ff.i.c.e.fi.l.e1963@gmail.com</a>
<a href=""mailto:o.f.ficefile1.9.6.3@gmail.com"">o.f.ficefile1.9.6.3@gmail.com</a>
<a href=""mailto:of.f.icefi.l.e19.6.3@gmail.com"">of.f.icefi.l.e19.6.3@gmail.com</a>
<a href=""mailto:o.f.fic.e.file.1.9.63@gmail.com"">o.f.fic.e.file.1.9.63@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.f.i.l.e.19.6.3@gmail.com"">o.f.f.ic.e.f.i.l.e.19.6.3@gmail.com</a>
<a href=""mailto:off.i.ce.fi.l.e.1.963@gmail.com"">off.i.ce.fi.l.e.1.963@gmail.com</a>
<a href=""mailto:of.fi.c.e.file.19.6.3@gmail.com"">of.fi.c.e.file.19.6.3@gmail.com</a>
<a href=""mailto:o.ffic.ef.il.e.1.9.63@gmail.com"">o.ffic.ef.il.e.1.9.63@gmail.com</a>
<a href=""mailto:o.ffice.file1.963@gmail.com"">o.ffice.file1.963@gmail.com</a>
<a href=""mailto:o.f.fic.e.f.i.l.e.19.6.3@gmail.com"">o.f.fic.e.f.i.l.e.19.6.3@gmail.com</a>
<a href=""mailto:o.ff.ic.efile19.63@gmail.com"">o.ff.ic.efile19.63@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.fil.e.1.963@gmail.com"">o.f.f.i.ce.fil.e.1.963@gmail.com</a>
<a href=""mailto:off.ice.file.196.3@gmail.com"">off.ice.file.196.3@gmail.com</a>
<a href=""mailto:of.fic.efi.l.e.196.3@gmail.com"">of.fic.efi.l.e.196.3@gmail.com</a>
<a href=""mailto:of.f.icefi.l.e.1.9.6.3@gmail.com"">of.f.icefi.l.e.1.9.6.3@gmail.com</a>
<a href=""mailto:o.f.fic.ef.i.l.e.1.9.63@gmail.com"">o.f.fic.ef.i.l.e.1.9.63@gmail.com</a>
<a href=""mailto:offi.c.e.f.i.le.1963@gmail.com"">offi.c.e.f.i.le.1963@gmail.com</a>
<a href=""mailto:o.f.fice.fil.e.1.9.63@gmail.com"">o.f.fice.fil.e.1.9.63@gmail.com</a>
<a href=""mailto:office.f.i.le.19.6.3@gmail.com"">office.f.i.le.19.6.3@gmail.com</a>
<a href=""mailto:of.f.i.c.ef.il.e.1.963@gmail.com"">of.f.i.c.ef.il.e.1.963@gmail.com</a>
<a href=""mailto:off.i.cef.i.le.1.9.63@gmail.com"">off.i.cef.i.le.1.9.63@gmail.com</a>
<a href=""mailto:of.f.i.c.e.fi.le.1.96.3@gmail.com"">of.f.i.c.e.fi.le.1.96.3@gmail.com</a>
<a href=""mailto:o.ff.i.ce.file1.963@gmail.com"">o.ff.i.ce.file1.963@gmail.com</a>
<a href=""mailto:of.fi.c.efile.1.9.6.3@gmail.com"">of.fi.c.efile.1.9.6.3@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.f.i.le1.96.3@gmail.com"">o.f.fi.c.e.f.i.le1.96.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.ef.il.e.196.3@gmail.com"">o.f.f.ic.ef.il.e.196.3@gmail.com</a>
<a href=""mailto:of.fi.c.ef.ile1.963@gmail.com"">of.fi.c.ef.ile1.963@gmail.com</a>
<a href=""mailto:o.ff.i.cefi.le.1963@gmail.com"">o.ff.i.cefi.le.1963@gmail.com</a>
<a href=""mailto:o.ff.ice.fil.e1.9.63@gmail.com"">o.ff.ice.fil.e1.9.63@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.file.1.963@gmail.com"">o.ff.i.c.e.file.1.963@gmail.com</a>
<a href=""mailto:of.f.i.c.ef.i.l.e19.63@gmail.com"">of.f.i.c.ef.i.l.e19.63@gmail.com</a>
<a href=""mailto:o.ff.i.ce.f.il.e.1.9.63@gmail.com"">o.ff.i.ce.f.il.e.1.9.63@gmail.com</a>
<a href=""mailto:o.f.f.icef.i.l.e19.63@gmail.com"">o.f.f.icef.i.l.e19.63@gmail.com</a>
<a href=""mailto:o.ff.ic.efil.e.1.963@gmail.com"">o.ff.ic.efil.e.1.963@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.f.ile.19.6.3@gmail.com"">o.f.f.i.ce.f.ile.19.6.3@gmail.com</a>
<a href=""mailto:of.f.ic.efi.le19.6.3@gmail.com"">of.f.ic.efi.le19.6.3@gmail.com</a>
<a href=""mailto:o.ffi.cef.il.e19.63@gmail.com"">o.ffi.cef.il.e19.63@gmail.com</a>
<a href=""mailto:officef.ile.196.3@gmail.com"">officef.ile.196.3@gmail.com</a>
<a href=""mailto:mrsalicehams@gmail.com"">mrsalicehams@gmail.com</a>
<a href=""mailto:m.r.sa.li.ce.ha.ms@gmail.com"">m.r.sa.li.ce.ha.ms@gmail.com</a>
<a href=""mailto:m.rsa.l.i.c.eh.a.ms@gmail.com"">m.rsa.l.i.c.eh.a.ms@gmail.com</a>
<a href=""mailto:mr.s.a.l.i.c.eh.a.m.s@gmail.com"">mr.s.a.l.i.c.eh.a.m.s@gmail.com</a>
<a href=""mailto:mrsa.li.ceham.s@gmail.com"">mrsa.li.ceham.s@gmail.com</a>
<a href=""mailto:mrsal.i.ceh.a.m.s@gmail.com"">mrsal.i.ceh.a.m.s@gmail.com</a>
<a href=""mailto:m.rsa.l.i.ce.ham.s@gmail.com"">m.rsa.l.i.ce.ham.s@gmail.com</a>
<a href=""mailto:m.rs.a.l.i.ceh.a.ms@gmail.com"">m.rs.a.l.i.ceh.a.ms@gmail.com</a>
<a href=""mailto:m.r.salic.e.h.am.s@gmail.com"">m.r.salic.e.h.am.s@gmail.com</a>
<a href=""mailto:m.rsa.li.ceham.s@gmail.com"">m.rsa.li.ceham.s@gmail.com</a>
<a href=""mailto:mr.sali.c.eh.am.s@gmail.com"">mr.sali.c.eh.am.s@gmail.com</a>
<a href=""mailto:mrs.a.l.ic.eh.ams@gmail.com"">mrs.a.l.ic.eh.ams@gmail.com</a>
<a href=""mailto:mrsa.l.ic.eha.ms@gmail.com"">mrsa.l.ic.eha.ms@gmail.com</a>
<a href=""mailto:m.r.sa.l.iceh.a.m.s@gmail.com"">m.r.sa.l.iceh.a.m.s@gmail.com</a>
<a href=""mailto:mr.s.alic.e.h.ams@gmail.com"">mr.s.alic.e.h.ams@gmail.com</a>
<a href=""mailto:mrsali.c.e.ha.m.s@gmail.com"">mrsali.c.e.ha.m.s@gmail.com</a>
<a href=""mailto:m.r.sa.l.ice.hams@gmail.com"">m.r.sa.l.ice.hams@gmail.com</a>
<a href=""mailto:m.rsali.ceh.a.ms@gmail.com"">m.rsali.ceh.a.ms@gmail.com</a>
<a href=""mailto:m.rsalic.e.ha.m.s@gmail.com"">m.rsalic.e.ha.m.s@gmail.com</a>
<a href=""mailto:m.r.s.a.l.ice.ha.ms@gmail.com"">m.r.s.a.l.ice.ha.ms@gmail.com</a>
<a href=""mailto:mr.salice.h.ams@gmail.com"">mr.salice.h.ams@gmail.com</a>
<a href=""mailto:mrsa.lic.e.ham.s@gmail.com"">mrsa.lic.e.ham.s@gmail.com</a>
<a href=""mailto:mr.sali.c.eh.a.ms@gmail.com"">mr.sali.c.eh.a.ms@gmail.com</a>
<a href=""mailto:mrs.a.lic.eham.s@gmail.com"">mrs.a.lic.eham.s@gmail.com</a>
<a href=""mailto:m.rs.alic.eh.a.ms@gmail.com"">m.rs.alic.eh.a.ms@gmail.com</a>
<a href=""mailto:mrs.a.l.i.c.e.h.am.s@gmail.com"">mrs.a.l.i.c.e.h.am.s@gmail.com</a>
<a href=""mailto:m.r.salice.h.am.s@gmail.com"">m.r.salice.h.am.s@gmail.com</a>
<a href=""mailto:mrsa.l.i.c.e.hams@gmail.com"">mrsa.l.i.c.e.hams@gmail.com</a>
<a href=""mailto:mrs.a.li.ce.h.a.m.s@gmail.com"">mrs.a.li.ce.h.a.m.s@gmail.com</a>
<a href=""mailto:m.r.s.al.iceh.am.s@gmail.com"">m.r.s.al.iceh.am.s@gmail.com</a>
<a href=""mailto:m.r.s.a.l.ic.eham.s@gmail.com"">m.r.s.a.l.ic.eham.s@gmail.com</a>
<a href=""mailto:mrs.a.l.ic.e.h.am.s@gmail.com"">mrs.a.l.ic.e.h.am.s@gmail.com</a>
<a href=""mailto:m.rs.alic.eha.m.s@gmail.com"">m.rs.alic.eha.m.s@gmail.com</a>
<a href=""mailto:m.r.sa.li.c.e.h.am.s@gmail.com"">m.r.sa.li.c.e.h.am.s@gmail.com</a>
<a href=""mailto:mr.s.a.l.ice.h.a.m.s@gmail.com"">mr.s.a.l.ice.h.a.m.s@gmail.com</a>
<a href=""mailto:m.rsa.l.ic.e.h.a.ms@gmail.com"">m.rsa.l.ic.e.h.a.ms@gmail.com</a>
<a href=""mailto:mr.s.al.i.c.e.ha.m.s@gmail.com"">mr.s.al.i.c.e.ha.m.s@gmail.com</a>
<a href=""mailto:m.rs.a.li.ceha.m.s@gmail.com"">m.rs.a.li.ceha.m.s@gmail.com</a>
<a href=""mailto:mrs.a.l.i.c.e.hams@gmail.com"">mrs.a.l.i.c.e.hams@gmail.com</a>
<a href=""mailto:m.r.sali.c.eh.am.s@gmail.com"">m.r.sali.c.eh.am.s@gmail.com</a>
<a href=""mailto:m.rsa.l.iceha.m.s@gmail.com"">m.rsa.l.iceha.m.s@gmail.com</a>
<a href=""mailto:m.rsa.li.ceh.ams@gmail.com"">m.rsa.li.ceh.ams@gmail.com</a>
<a href=""mailto:mrs.alice.h.am.s@gmail.com"">mrs.alice.h.am.s@gmail.com</a>
<a href=""mailto:mrsa.l.ic.e.h.a.m.s@gmail.com"">mrsa.l.ic.e.h.a.m.s@gmail.com</a>
<a href=""mailto:m.rs.a.liceham.s@gmail.com"">m.rs.a.liceham.s@gmail.com</a>
<a href=""mailto:m.r.sa.lic.eha.m.s@gmail.com"">m.r.sa.lic.eha.m.s@gmail.com</a>
<a href=""mailto:mr.sal.i.ce.h.a.ms@gmail.com"">mr.sal.i.ce.h.a.ms@gmail.com</a>
<a href=""mailto:m.r.s.a.l.i.c.eh.ams@gmail.com"">m.r.s.a.l.i.c.eh.ams@gmail.com</a>
<a href=""mailto:mr.sa.l.i.c.e.h.a.m.s@gmail.com"">mr.sa.l.i.c.e.h.a.m.s@gmail.com</a>
<a href=""mailto:m.rsali.ce.hams@gmail.com"">m.rsali.ce.hams@gmail.com</a>
<a href=""mailto:mr.sa.liceh.a.ms@gmail.com"">mr.sa.liceh.a.ms@gmail.com</a>
<a href=""mailto:m.r.sal.ic.eh.ams@gmail.com"">m.r.sal.ic.eh.ams@gmail.com</a>
<a href=""mailto:m.rs.a.li.c.e.h.am.s@gmail.com"">m.rs.a.li.c.e.h.am.s@gmail.com</a>
<a href=""mailto:mr.s.a.l.ic.e.h.ams@gmail.com"">mr.s.a.l.ic.e.h.ams@gmail.com</a>
<a href=""mailto:mrs.a.l.iceh.am.s@gmail.com"">mrs.a.l.iceh.am.s@gmail.com</a>
<a href=""mailto:mrs.alice.h.ams@gmail.com"">mrs.alice.h.ams@gmail.com</a>
<a href=""mailto:m.r.sa.lice.ham.s@gmail.com"">m.r.sa.lice.ham.s@gmail.com</a>
<a href=""mailto:mr.sa.l.ic.e.hams@gmail.com"">mr.sa.l.ic.e.hams@gmail.com</a>
<a href=""mailto:m.rsal.i.c.e.ham.s@gmail.com"">m.rsal.i.c.e.ham.s@gmail.com</a>
<a href=""mailto:m.r.sal.icehams@gmail.com"">m.r.sal.icehams@gmail.com</a>
<a href=""mailto:m.r.sa.l.i.ce.h.a.m.s@gmail.com"">m.r.sa.l.i.ce.h.a.m.s@gmail.com</a>
<a href=""mailto:mr.sal.ic.e.h.am.s@gmail.com"">mr.sal.ic.e.h.am.s@gmail.com</a>
<a href=""mailto:m.r.s.a.l.i.c.e.h.am.s@gmail.com"">m.r.s.a.l.i.c.e.h.am.s@gmail.com</a>
<a href=""mailto:m.rs.aliceha.m.s@gmail.com"">m.rs.aliceha.m.s@gmail.com</a>
<a href=""mailto:mrs.a.liceha.m.s@gmail.com"">mrs.a.liceha.m.s@gmail.com</a>
<a href=""mailto:mr.s.a.li.ceham.s@gmail.com"">mr.s.a.li.ceham.s@gmail.com</a>
<a href=""mailto:m.r.sa.l.ice.ha.ms@gmail.com"">m.r.sa.l.ice.ha.ms@gmail.com</a>
<a href=""mailto:m.r.sal.ic.e.h.a.ms@gmail.com"">m.r.sal.ic.e.h.a.ms@gmail.com</a>
<a href=""mailto:m.r.salice.ha.m.s@gmail.com"">m.r.salice.ha.m.s@gmail.com</a>
<a href=""mailto:m.rsa.l.i.c.eh.a.m.s@gmail.com"">m.rsa.l.i.c.eh.a.m.s@gmail.com</a>
<a href=""mailto:mrs.a.l.i.c.eh.ams@gmail.com"">mrs.a.l.i.c.eh.ams@gmail.com</a>
<a href=""mailto:mr.sal.ic.e.ham.s@gmail.com"">mr.sal.ic.e.ham.s@gmail.com</a>
<a href=""mailto:mrsali.c.eha.m.s@gmail.com"">mrsali.c.eha.m.s@gmail.com</a>
<a href=""mailto:mrs.al.i.c.eham.s@gmail.com"">mrs.al.i.c.eham.s@gmail.com</a>
<a href=""mailto:mr.sa.liceh.ams@gmail.com"">mr.sa.liceh.ams@gmail.com</a>
<a href=""mailto:mrsa.l.i.ce.h.a.m.s@gmail.com"">mrsa.l.i.ce.h.a.m.s@gmail.com</a>
<a href=""mailto:mrsal.i.c.eh.a.ms@gmail.com"">mrsal.i.c.eh.a.ms@gmail.com</a>
<a href=""mailto:m.rsa.li.c.ehams@gmail.com"">m.rsa.li.c.ehams@gmail.com</a>
<a href=""mailto:m.r.s.a.l.i.ce.ham.s@gmail.com"">m.r.s.a.l.i.ce.ham.s@gmail.com</a>
<a href=""mailto:m.r.s.a.li.ce.ham.s@gmail.com"">m.r.s.a.li.ce.ham.s@gmail.com</a>
<a href=""mailto:mr.salice.hams@gmail.com"">mr.salice.hams@gmail.com</a>
<a href=""mailto:m.r.s.al.ice.h.am.s@gmail.com"">m.r.s.al.ice.h.am.s@gmail.com</a>
<a href=""mailto:mrs.a.l.ice.ham.s@gmail.com"">mrs.a.l.ice.ham.s@gmail.com</a>
<a href=""mailto:m.rs.al.ice.h.am.s@gmail.com"">m.rs.al.ice.h.am.s@gmail.com</a>
<a href=""mailto:mr.sa.li.c.eh.a.m.s@gmail.com"">mr.sa.li.c.eh.a.m.s@gmail.com</a>
<a href=""mailto:m.rs.alic.e.h.a.m.s@gmail.com"">m.rs.alic.e.h.a.m.s@gmail.com</a>
<a href=""mailto:mrsa.li.cehams@gmail.com"">mrsa.li.cehams@gmail.com</a>
<a href=""mailto:m.r.sa.l.ice.h.ams@gmail.com"">m.r.sa.l.ice.h.ams@gmail.com</a>
<a href=""mailto:m.rsa.lic.ehams@gmail.com"">m.rsa.lic.ehams@gmail.com</a>
<a href=""mailto:mrsali.c.e.h.a.m.s@gmail.com"">mrsali.c.e.h.a.m.s@gmail.com</a>
<a href=""mailto:m.rsa.li.ceh.a.m.s@gmail.com"">m.rsa.li.ceh.a.m.s@gmail.com</a>
<a href=""mailto:mrsa.liceh.am.s@gmail.com"">mrsa.liceh.am.s@gmail.com</a>
<a href=""mailto:m.r.s.a.l.ic.e.hams@gmail.com"">m.r.s.a.l.ic.e.hams@gmail.com</a>
<a href=""mailto:mr.sa.lice.ha.m.s@gmail.com"">mr.sa.lice.ha.m.s@gmail.com</a>
<a href=""mailto:mrs.a.li.ce.h.am.s@gmail.com"">mrs.a.li.ce.h.am.s@gmail.com</a>
<a href=""mailto:mrs.a.li.c.e.h.ams@gmail.com"">mrs.a.li.c.e.h.ams@gmail.com</a>
<a href=""mailto:m.rsa.li.ce.h.a.ms@gmail.com"">m.rsa.li.ce.h.a.ms@gmail.com</a>
<a href=""mailto:mrsali.ceha.ms@gmail.com"">mrsali.ceha.ms@gmail.com</a>
<a href=""mailto:m.rs.ali.c.e.h.am.s@gmail.com"">m.rs.ali.c.e.h.am.s@gmail.com</a>
<a href=""mailto:mr.sa.l.i.c.eh.ams@gmail.com"">mr.sa.l.i.c.eh.ams@gmail.com</a>
<a href=""mailto:mrs.ali.c.eh.a.m.s@gmail.com"">mrs.ali.c.eh.a.m.s@gmail.com</a>
<a href=""mailto:m.r.s.alic.eh.a.ms@gmail.com"">m.r.s.alic.eh.a.ms@gmail.com</a>
<a href=""mailto:m.rsal.ic.e.h.am.s@gmail.com"">m.rsal.ic.e.h.am.s@gmail.com</a>
<a href=""mailto:mr.s.al.ice.ha.m.s@gmail.com"">mr.s.al.ice.ha.m.s@gmail.com</a>
<a href=""mailto:m.r.s.aliceh.ams@gmail.com"">m.r.s.aliceh.ams@gmail.com</a>
<a href=""mailto:m.rsa.l.i.ceh.a.m.s@gmail.com"">m.rsa.l.i.ceh.a.m.s@gmail.com</a>
<a href=""mailto:mr.sal.i.ce.ha.ms@gmail.com"">mr.sal.i.ce.ha.ms@gmail.com</a>
<a href=""mailto:m.rs.al.ic.ehams@gmail.com"">m.rs.al.ic.ehams@gmail.com</a>
<a href=""mailto:m.r.sa.l.icehams@gmail.com"">m.r.sa.l.icehams@gmail.com</a>
<a href=""mailto:mr.s.a.l.i.c.e.h.am.s@gmail.com"">mr.s.a.l.i.c.e.h.am.s@gmail.com</a>
<a href=""mailto:m.rs.ali.ce.hams@gmail.com"">m.rs.ali.ce.hams@gmail.com</a>
<a href=""mailto:m.r.s.ali.cehams@gmail.com"">m.r.s.ali.cehams@gmail.com</a>
<a href=""mailto:m.rsa.li.c.e.ha.ms@gmail.com"">m.rsa.li.c.e.ha.ms@gmail.com</a>
<a href=""mailto:m.r.s.ali.c.eh.a.ms@gmail.com"">m.r.s.ali.c.eh.a.ms@gmail.com</a>
<a href=""mailto:mrs.aliceh.a.m.s@gmail.com"">mrs.aliceh.a.m.s@gmail.com</a>
<a href=""mailto:mr.s.a.l.i.ce.hams@gmail.com"">mr.s.a.l.i.ce.hams@gmail.com</a>
<a href=""mailto:mrs.al.i.ce.h.a.ms@gmail.com"">mrs.al.i.ce.h.a.ms@gmail.com</a>
<a href=""mailto:m.r.sa.liceh.a.m.s@gmail.com"">m.r.sa.liceh.a.m.s@gmail.com</a>
<a href=""mailto:m.r.sal.i.c.e.h.a.ms@gmail.com"">m.r.sal.i.c.e.h.a.ms@gmail.com</a>
<a href=""mailto:m.r.sali.ceh.a.ms@gmail.com"">m.r.sali.ceh.a.ms@gmail.com</a>
<a href=""mailto:m.r.sa.li.ceh.a.ms@gmail.com"">m.r.sa.li.ceh.a.ms@gmail.com</a>
<a href=""mailto:mr.s.alic.e.hams@gmail.com"">mr.s.alic.e.hams@gmail.com</a>
<a href=""mailto:mrs.ali.c.eh.ams@gmail.com"">mrs.ali.c.eh.ams@gmail.com</a>
<a href=""mailto:mrsa.liceha.ms@gmail.com"">mrsa.liceha.ms@gmail.com</a>
<a href=""mailto:mrsa.lic.e.hams@gmail.com"">mrsa.lic.e.hams@gmail.com</a>
<a href=""mailto:m.r.s.a.lic.ehams@gmail.com"">m.r.s.a.lic.ehams@gmail.com</a>
<a href=""mailto:m.r.s.al.i.cehams@gmail.com"">m.r.s.al.i.cehams@gmail.com</a>
<a href=""mailto:mrs.ali.c.eha.ms@gmail.com"">mrs.ali.c.eha.ms@gmail.com</a>
<a href=""mailto:m.r.sal.i.ceh.am.s@gmail.com"">m.r.sal.i.ceh.am.s@gmail.com</a>
<a href=""mailto:m.r.sa.lic.e.hams@gmail.com"">m.r.sa.lic.e.hams@gmail.com</a>
<a href=""mailto:m.rs.al.iceh.ams@gmail.com"">m.rs.al.iceh.ams@gmail.com</a>
<a href=""mailto:m.rsalic.e.hams@gmail.com"">m.rsalic.e.hams@gmail.com</a>
<a href=""mailto:mr.s.al.ic.e.h.a.ms@gmail.com"">mr.s.al.ic.e.h.a.ms@gmail.com</a>
<a href=""mailto:mr.sa.l.i.c.eh.a.ms@gmail.com"">mr.sa.l.i.c.eh.a.ms@gmail.com</a>
<a href=""mailto:m.r.s.ali.c.e.h.ams@gmail.com"">m.r.s.ali.c.e.h.ams@gmail.com</a>
<a href=""mailto:mr.sa.li.ce.ha.m.s@gmail.com"">mr.sa.li.ce.ha.m.s@gmail.com</a>
<a href=""mailto:mr.s.ali.c.e.ham.s@gmail.com"">mr.s.ali.c.e.ham.s@gmail.com</a>
<a href=""mailto:m.r.sa.lic.e.ham.s@gmail.com"">m.r.sa.lic.e.ham.s@gmail.com</a>
<a href=""mailto:m.rsal.iceha.m.s@gmail.com"">m.rsal.iceha.m.s@gmail.com</a>
<a href=""mailto:mrsa.l.icehams@gmail.com"">mrsa.l.icehams@gmail.com</a>
<a href=""mailto:mr.sa.l.i.ceh.ams@gmail.com"">mr.sa.l.i.ceh.ams@gmail.com</a>
<a href=""mailto:m.rsal.i.c.e.h.a.ms@gmail.com"">m.rsal.i.c.e.h.a.ms@gmail.com</a>
<a href=""mailto:mrs.al.i.c.eha.m.s@gmail.com"">mrs.al.i.c.eha.m.s@gmail.com</a>
<a href=""mailto:mrs.a.lice.ha.ms@gmail.com"">mrs.a.lice.ha.ms@gmail.com</a>
<a href=""mailto:mrs.a.l.ic.eham.s@gmail.com"">mrs.a.l.ic.eham.s@gmail.com</a>
<a href=""mailto:mr.s.a.l.ic.e.h.am.s@gmail.com"">mr.s.a.l.ic.e.h.am.s@gmail.com</a>
<a href=""mailto:mr.sa.l.ic.eha.ms@gmail.com"">mr.sa.l.ic.eha.ms@gmail.com</a>
<a href=""mailto:m.r.sa.lice.h.ams@gmail.com"">m.r.sa.lice.h.ams@gmail.com</a>
<a href=""mailto:mr.sal.i.c.eh.a.ms@gmail.com"">mr.sal.i.c.eh.a.ms@gmail.com</a>
<a href=""mailto:m.r.s.ali.ceha.ms@gmail.com"">m.r.s.ali.ceha.ms@gmail.com</a>
<a href=""mailto:m.r.sal.iceh.a.ms@gmail.com"">m.r.sal.iceh.a.ms@gmail.com</a>
<a href=""mailto:mr.s.al.iceha.ms@gmail.com"">mr.s.al.iceha.ms@gmail.com</a>
<a href=""mailto:m.r.sal.iceh.a.m.s@gmail.com"">m.r.sal.iceh.a.m.s@gmail.com</a>
<a href=""mailto:mrsaliceh.am.s@gmail.com"">mrsaliceh.am.s@gmail.com</a>
<a href=""mailto:mr.s.a.l.i.c.e.h.a.ms@gmail.com"">mr.s.a.l.i.c.e.h.a.ms@gmail.com</a>
<a href=""mailto:mrs.ali.ce.ha.ms@gmail.com"">mrs.ali.ce.ha.ms@gmail.com</a>
<a href=""mailto:mr.sali.ce.ha.ms@gmail.com"">mr.sali.ce.ha.ms@gmail.com</a>
<a href=""mailto:m.rsali.c.e.h.am.s@gmail.com"">m.rsali.c.e.h.am.s@gmail.com</a>
<a href=""mailto:mrsa.li.ceh.a.m.s@gmail.com"">mrsa.li.ceh.a.m.s@gmail.com</a>
<a href=""mailto:m.rsal.i.c.ehams@gmail.com"">m.rsal.i.c.ehams@gmail.com</a>
<a href=""mailto:mr.sal.ic.eh.a.ms@gmail.com"">mr.sal.ic.eh.a.ms@gmail.com</a>
<a href=""mailto:mrsa.lice.ha.m.s@gmail.com"">mrsa.lice.ha.m.s@gmail.com</a>
<a href=""mailto:m.r.sal.i.c.e.hams@gmail.com"">m.r.sal.i.c.e.hams@gmail.com</a>
<a href=""mailto:mrsa.l.ic.e.hams@gmail.com"">mrsa.l.ic.e.hams@gmail.com</a>
<a href=""mailto:m.rs.a.l.ic.eh.am.s@gmail.com"">m.rs.a.l.ic.eh.am.s@gmail.com</a>
<a href=""mailto:mrs.a.lic.e.h.am.s@gmail.com"">mrs.a.lic.e.h.am.s@gmail.com</a>
<a href=""mailto:m.r.saliceha.ms@gmail.com"">m.r.saliceha.ms@gmail.com</a>
<a href=""mailto:mr.s.a.lic.ehams@gmail.com"">mr.s.a.lic.ehams@gmail.com</a>
<a href=""mailto:mrsal.i.c.e.hams@gmail.com"">mrsal.i.c.e.hams@gmail.com</a>
<a href=""mailto:m.rsa.l.ic.eha.ms@gmail.com"">m.rsa.l.ic.eha.ms@gmail.com</a>
<a href=""mailto:mr.sa.l.ic.eham.s@gmail.com"">mr.sa.l.ic.eham.s@gmail.com</a>
<a href=""mailto:mrsalic.eh.a.m.s@gmail.com"">mrsalic.eh.a.m.s@gmail.com</a>
<a href=""mailto:mr.sal.ic.eham.s@gmail.com"">mr.sal.ic.eham.s@gmail.com</a>
<a href=""mailto:mr.s.a.li.c.eha.ms@gmail.com"">mr.s.a.li.c.eha.ms@gmail.com</a>
<a href=""mailto:m.r.s.a.liceh.ams@gmail.com"">m.r.s.a.liceh.ams@gmail.com</a>
<a href=""mailto:m.rs.a.l.ic.e.h.am.s@gmail.com"">m.rs.a.l.ic.e.h.am.s@gmail.com</a>
<a href=""mailto:mr.salic.e.ha.m.s@gmail.com"">mr.salic.e.ha.m.s@gmail.com</a>
<a href=""mailto:m.rsalic.e.h.a.m.s@gmail.com"">m.rsalic.e.h.a.m.s@gmail.com</a>
<a href=""mailto:mr.sal.ic.e.ha.ms@gmail.com"">mr.sal.ic.e.ha.ms@gmail.com</a>
<a href=""mailto:m.rs.a.l.i.cehams@gmail.com"">m.rs.a.l.i.cehams@gmail.com</a>
<a href=""mailto:mr.s.a.li.c.e.ham.s@gmail.com"">mr.s.a.li.c.e.ham.s@gmail.com</a>
<a href=""mailto:mr.sa.l.ice.h.ams@gmail.com"">mr.sa.l.ice.h.ams@gmail.com</a>
<a href=""mailto:mr.sal.i.ce.h.a.m.s@gmail.com"">mr.sal.i.ce.h.a.m.s@gmail.com</a>
<a href=""mailto:m.rs.al.iceh.am.s@gmail.com"">m.rs.al.iceh.am.s@gmail.com</a>
<a href=""mailto:mrsali.ce.h.a.ms@gmail.com"">mrsali.ce.h.a.ms@gmail.com</a>
<a href=""mailto:m.r.sal.i.c.e.h.ams@gmail.com"">m.r.sal.i.c.e.h.ams@gmail.com</a>
<a href=""mailto:m.rs.al.ic.eh.am.s@gmail.com"">m.rs.al.ic.eh.am.s@gmail.com</a>
<a href=""mailto:mr.sali.ceha.ms@gmail.com"">mr.sali.ceha.ms@gmail.com</a>
<a href=""mailto:mr.sali.ceh.ams@gmail.com"">mr.sali.ceh.ams@gmail.com</a>
<a href=""mailto:m.rs.al.icehams@gmail.com"">m.rs.al.icehams@gmail.com</a>
<a href=""mailto:m.r.s.al.i.c.e.hams@gmail.com"">m.r.s.al.i.c.e.hams@gmail.com</a>
<a href=""mailto:mr.s.a.l.ice.ha.m.s@gmail.com"">mr.s.a.l.ice.ha.m.s@gmail.com</a>
<a href=""mailto:mr.s.ali.c.eh.a.m.s@gmail.com"">mr.s.ali.c.eh.a.m.s@gmail.com</a>
<a href=""mailto:mrs.a.l.i.c.eh.a.ms@gmail.com"">mrs.a.l.i.c.eh.a.ms@gmail.com</a>
<a href=""mailto:m.rs.a.l.ice.h.a.m.s@gmail.com"">m.rs.a.l.ice.h.a.m.s@gmail.com</a>
<a href=""mailto:mr.sa.l.i.ce.h.a.m.s@gmail.com"">mr.sa.l.i.ce.h.a.m.s@gmail.com</a>
<a href=""mailto:mr.s.ali.ceha.ms@gmail.com"">mr.s.ali.ceha.ms@gmail.com</a>
<a href=""mailto:m.rs.al.i.ce.h.ams@gmail.com"">m.rs.al.i.ce.h.ams@gmail.com</a>
<a href=""mailto:mrsa.li.ceha.m.s@gmail.com"">mrsa.li.ceha.m.s@gmail.com</a>
<a href=""mailto:m.r.s.a.lice.h.a.m.s@gmail.com"">m.r.s.a.lice.h.a.m.s@gmail.com</a>
<a href=""mailto:mr.sali.c.eh.ams@gmail.com"">mr.sali.c.eh.ams@gmail.com</a>
<a href=""mailto:cristalinvincorp@gmail.com"">cristalinvincorp@gmail.com</a>
<a href=""mailto:c.ris.tal.i.n.v.i.nco.rp@gmail.com"">c.ris.tal.i.n.v.i.nco.rp@gmail.com</a>
<a href=""mailto:cr.i.st.ali.n.vin.corp@gmail.com"">cr.i.st.ali.n.vin.corp@gmail.com</a>
<a href=""mailto:cr.i.s.t.al.in.vin.cor.p@gmail.com"">cr.i.s.t.al.in.vin.cor.p@gmail.com</a>
<a href=""mailto:c.rista.l.in.v.inc.o.r.p@gmail.com"">c.rista.l.in.v.inc.o.r.p@gmail.com</a>
<a href=""mailto:c.ri.st.al.i.n.v.i.nc.o.rp@gmail.com"">c.ri.st.al.i.n.v.i.nc.o.rp@gmail.com</a>
<a href=""mailto:c.ris.ta.l.in.vi.n.corp@gmail.com"">c.ris.ta.l.in.vi.n.corp@gmail.com</a>
<a href=""mailto:cri.s.ta.li.n.v.in.co.r.p@gmail.com"">cri.s.ta.li.n.v.in.co.r.p@gmail.com</a>
<a href=""mailto:c.ri.s.tal.in.vinco.r.p@gmail.com"">c.ri.s.tal.in.vinco.r.p@gmail.com</a>
<a href=""mailto:c.r.i.s.tal.i.nvi.ncorp@gmail.com"">c.r.i.s.tal.i.nvi.ncorp@gmail.com</a>
<a href=""mailto:cri.s.tali.n.v.i.n.cor.p@gmail.com"">cri.s.tali.n.v.i.n.cor.p@gmail.com</a>
<a href=""mailto:c.r.i.s.t.alinv.incor.p@gmail.com"">c.r.i.s.t.alinv.incor.p@gmail.com</a>
<a href=""mailto:cri.st.al.invi.n.c.o.rp@gmail.com"">cri.st.al.invi.n.c.o.rp@gmail.com</a>
<a href=""mailto:crist.a.li.nv.in.co.rp@gmail.com"">crist.a.li.nv.in.co.rp@gmail.com</a>
<a href=""mailto:cr.is.tal.i.n.v.i.n.cor.p@gmail.com"">cr.is.tal.i.n.v.i.n.cor.p@gmail.com</a>
<a href=""mailto:c.r.i.sta.l.invi.n.cor.p@gmail.com"">c.r.i.sta.l.invi.n.cor.p@gmail.com</a>
<a href=""mailto:cr.ist.a.li.n.vinc.or.p@gmail.com"">cr.ist.a.li.n.vinc.or.p@gmail.com</a>
<a href=""mailto:c.r.is.t.al.i.nvi.nc.or.p@gmail.com"">c.r.is.t.al.i.nvi.nc.or.p@gmail.com</a>
<a href=""mailto:cri.s.t.a.l.invin.c.orp@gmail.com"">cri.s.t.a.l.invin.c.orp@gmail.com</a>
<a href=""mailto:c.ris.t.a.l.i.n.v.inco.r.p@gmail.com"">c.ris.t.a.l.i.n.v.inco.r.p@gmail.com</a>
<a href=""mailto:crista.li.n.v.in.c.o.rp@gmail.com"">crista.li.n.v.in.c.o.rp@gmail.com</a>
<a href=""mailto:crist.a.lin.v.i.n.c.o.rp@gmail.com"">crist.a.lin.v.i.n.c.o.rp@gmail.com</a>
<a href=""mailto:c.ri.sta.li.n.v.i.n.co.rp@gmail.com"">c.ri.sta.li.n.v.i.n.co.rp@gmail.com</a>
<a href=""mailto:c.r.is.t.a.li.n.vinc.orp@gmail.com"">c.r.is.t.a.li.n.vinc.orp@gmail.com</a>
<a href=""mailto:cr.ista.li.n.v.i.nco.r.p@gmail.com"">cr.ista.li.n.v.i.nco.r.p@gmail.com</a>
<a href=""mailto:c.r.i.s.ta.l.inv.in.co.r.p@gmail.com"">c.r.i.s.ta.l.inv.in.co.r.p@gmail.com</a>
<a href=""mailto:c.ris.t.a.l.invinc.orp@gmail.com"">c.ris.t.a.l.invinc.orp@gmail.com</a>
<a href=""mailto:c.rista.l.invi.nc.or.p@gmail.com"">c.rista.l.invi.nc.or.p@gmail.com</a>
<a href=""mailto:crist.al.i.n.v.i.n.c.o.r.p@gmail.com"">crist.al.i.n.v.i.n.c.o.r.p@gmail.com</a>
<a href=""mailto:c.rist.al.in.v.i.n.c.o.r.p@gmail.com"">c.rist.al.in.v.i.n.c.o.r.p@gmail.com</a>
<a href=""mailto:cr.i.s.ta.l.i.n.v.i.nc.o.r.p@gmail.com"">cr.i.s.ta.l.i.n.v.i.nc.o.r.p@gmail.com</a>
<a href=""mailto:c.ristali.n.v.inc.o.rp@gmail.com"">c.ristali.n.v.inc.o.rp@gmail.com</a>
<a href=""mailto:cri.st.alinvi.n.c.orp@gmail.com"">cri.st.alinvi.n.c.orp@gmail.com</a>
<a href=""mailto:cri.s.t.a.linvi.n.corp@gmail.com"">cri.s.t.a.linvi.n.corp@gmail.com</a>
<a href=""mailto:c.r.is.ta.lin.vin.c.orp@gmail.com"">c.r.is.ta.lin.vin.c.orp@gmail.com</a>
<a href=""mailto:cri.s.t.a.li.n.vinc.o.rp@gmail.com"">cri.s.t.a.li.n.vinc.o.rp@gmail.com</a>
<a href=""mailto:c.r.i.st.alinv.in.cor.p@gmail.com"">c.r.i.st.alinv.in.cor.p@gmail.com</a>
<a href=""mailto:c.ri.stalin.v.in.c.or.p@gmail.com"">c.ri.stalin.v.in.c.or.p@gmail.com</a>
<a href=""mailto:cr.is.t.ali.n.vi.nc.or.p@gmail.com"">cr.is.t.ali.n.vi.nc.or.p@gmail.com</a>
<a href=""mailto:c.r.is.ta.li.n.vinc.orp@gmail.com"">c.r.is.ta.li.n.vinc.orp@gmail.com</a>
<a href=""mailto:c.ri.stal.i.nv.inco.r.p@gmail.com"">c.ri.stal.i.nv.inco.r.p@gmail.com</a>
<a href=""mailto:c.r.i.sta.lin.v.inc.or.p@gmail.com"">c.r.i.sta.lin.v.inc.or.p@gmail.com</a>
<a href=""mailto:c.ri.stal.i.n.vi.n.co.rp@gmail.com"">c.ri.stal.i.n.vi.n.co.rp@gmail.com</a>
<a href=""mailto:c.r.i.stal.i.n.vin.c.o.rp@gmail.com"">c.r.i.stal.i.n.vin.c.o.rp@gmail.com</a>
<a href=""mailto:c.r.ist.a.linv.in.co.rp@gmail.com"">c.r.ist.a.linv.in.co.rp@gmail.com</a>
<a href=""mailto:c.r.ist.al.in.v.in.c.orp@gmail.com"">c.r.ist.al.in.v.in.c.orp@gmail.com</a>
<a href=""mailto:cr.i.s.tal.invi.n.c.or.p@gmail.com"">cr.i.s.tal.invi.n.c.or.p@gmail.com</a>
<a href=""mailto:c.ri.st.a.lin.vi.ncor.p@gmail.com"">c.ri.st.a.lin.vi.ncor.p@gmail.com</a>
<a href=""mailto:cri.s.tal.i.n.v.in.co.r.p@gmail.com"">cri.s.tal.i.n.v.in.co.r.p@gmail.com</a>
<a href=""mailto:cri.st.a.linvi.n.cor.p@gmail.com"">cri.st.a.linvi.n.cor.p@gmail.com</a>
<a href=""mailto:c.ris.ta.linv.i.n.cor.p@gmail.com"">c.ris.ta.linv.i.n.cor.p@gmail.com</a>
<a href=""mailto:c.ri.stalinv.in.co.r.p@gmail.com"">c.ri.stalinv.in.co.r.p@gmail.com</a>
<a href=""mailto:cr.ist.alin.vin.cor.p@gmail.com"">cr.ist.alin.vin.cor.p@gmail.com</a>
<a href=""mailto:cristal.i.n.v.i.n.corp@gmail.com"">cristal.i.n.v.i.n.corp@gmail.com</a>
<a href=""mailto:c.rist.a.l.i.n.vin.c.orp@gmail.com"">c.rist.a.l.i.n.vin.c.orp@gmail.com</a>
<a href=""mailto:cr.is.tal.in.v.incorp@gmail.com"">cr.is.tal.in.v.incorp@gmail.com</a>
<a href=""mailto:cri.s.ta.l.inv.i.nc.o.r.p@gmail.com"">cri.s.ta.l.inv.i.nc.o.r.p@gmail.com</a>
<a href=""mailto:crista.li.nv.inco.r.p@gmail.com"">crista.li.nv.inco.r.p@gmail.com</a>
<a href=""mailto:c.ristal.i.nvinc.o.rp@gmail.com"">c.ristal.i.nvinc.o.rp@gmail.com</a>
<a href=""mailto:c.ris.t.a.l.i.n.vin.c.or.p@gmail.com"">c.ris.t.a.l.i.n.vin.c.or.p@gmail.com</a>
<a href=""mailto:c.ri.st.a.linvi.n.co.r.p@gmail.com"">c.ri.st.a.linvi.n.co.r.p@gmail.com</a>
<a href=""mailto:c.r.is.t.ali.nvi.n.co.r.p@gmail.com"">c.r.is.t.ali.nvi.n.co.r.p@gmail.com</a>
<a href=""mailto:c.r.i.st.ali.n.vi.nc.or.p@gmail.com"">c.r.i.st.ali.n.vi.nc.or.p@gmail.com</a>
<a href=""mailto:c.ris.ta.l.invin.c.o.rp@gmail.com"">c.ris.ta.l.invin.c.o.rp@gmail.com</a>
<a href=""mailto:c.r.i.st.a.li.n.v.incor.p@gmail.com"">c.r.i.st.a.li.n.v.incor.p@gmail.com</a>
<a href=""mailto:cr.i.s.tali.nvi.nco.rp@gmail.com"">cr.i.s.tali.nvi.nco.rp@gmail.com</a>
<a href=""mailto:crist.a.li.n.vin.c.orp@gmail.com"">crist.a.li.n.vin.c.orp@gmail.com</a>
<a href=""mailto:cri.sta.linv.i.n.co.rp@gmail.com"">cri.sta.linv.i.n.co.rp@gmail.com</a>
<a href=""mailto:c.ri.stal.invi.n.corp@gmail.com"">c.ri.stal.invi.n.corp@gmail.com</a>
<a href=""mailto:c.r.i.sta.l.i.nv.inc.or.p@gmail.com"">c.r.i.sta.l.i.nv.inc.or.p@gmail.com</a>
<a href=""mailto:cr.istal.invinc.o.r.p@gmail.com"">cr.istal.invinc.o.r.p@gmail.com</a>
<a href=""mailto:cris.t.a.lin.vinco.rp@gmail.com"">cris.t.a.lin.vinco.rp@gmail.com</a>
<a href=""mailto:cr.i.stal.i.n.v.i.nco.r.p@gmail.com"">cr.i.stal.i.n.v.i.nco.r.p@gmail.com</a>
<a href=""mailto:c.rist.al.in.v.i.n.co.r.p@gmail.com"">c.rist.al.in.v.i.n.co.r.p@gmail.com</a>
<a href=""mailto:cr.i.st.al.i.nvi.nc.o.r.p@gmail.com"">cr.i.st.al.i.nvi.nc.o.r.p@gmail.com</a>
<a href=""mailto:c.r.i.s.tali.nv.in.c.o.r.p@gmail.com"">c.r.i.s.tali.nv.in.c.o.r.p@gmail.com</a>
<a href=""mailto:cr.i.s.ta.linv.i.n.c.o.r.p@gmail.com"">cr.i.s.ta.linv.i.n.c.o.r.p@gmail.com</a>
<a href=""mailto:c.ris.tal.invi.n.c.o.rp@gmail.com"">c.ris.tal.invi.n.c.o.rp@gmail.com</a>
<a href=""mailto:cr.is.t.ali.nv.inc.or.p@gmail.com"">cr.is.t.ali.nv.inc.or.p@gmail.com</a>
<a href=""mailto:cr.is.ta.l.i.n.v.i.n.c.o.rp@gmail.com"">cr.is.ta.l.i.n.v.i.n.c.o.rp@gmail.com</a>
<a href=""mailto:c.r.i.stal.i.nvinc.or.p@gmail.com"">c.r.i.stal.i.nvinc.or.p@gmail.com</a>
<a href=""mailto:cr.ist.al.i.nv.i.n.c.or.p@gmail.com"">cr.ist.al.i.nv.i.n.c.or.p@gmail.com</a>
<a href=""mailto:c.r.istalin.vin.corp@gmail.com"">c.r.istalin.vin.corp@gmail.com</a>
<a href=""mailto:cri.stal.in.v.i.nco.r.p@gmail.com"">cri.stal.in.v.i.nco.r.p@gmail.com</a>
<a href=""mailto:cr.ist.al.i.n.v.i.n.c.o.rp@gmail.com"">cr.ist.al.i.n.v.i.n.c.o.rp@gmail.com</a>
<a href=""mailto:cris.ta.li.nv.in.co.rp@gmail.com"">cris.ta.li.nv.in.co.rp@gmail.com</a>
<a href=""mailto:cri.stalin.vin.c.o.r.p@gmail.com"">cri.stalin.vin.c.o.r.p@gmail.com</a>
<a href=""mailto:c.r.is.ta.l.i.nv.i.n.corp@gmail.com"">c.r.is.ta.l.i.nv.i.n.corp@gmail.com</a>
<a href=""mailto:cr.i.s.t.a.l.invin.co.r.p@gmail.com"">cr.i.s.t.a.l.invin.co.r.p@gmail.com</a>
<a href=""mailto:cris.t.al.i.n.vi.n.co.rp@gmail.com"">cris.t.al.i.n.vi.n.co.rp@gmail.com</a>
<a href=""mailto:cr.is.tal.i.nvi.n.co.r.p@gmail.com"">cr.is.tal.i.nvi.n.co.r.p@gmail.com</a>
<a href=""mailto:cristali.nvinco.r.p@gmail.com"">cristali.nvinco.r.p@gmail.com</a>
<a href=""mailto:c.ri.s.t.ali.n.vi.n.c.or.p@gmail.com"">c.ri.s.t.ali.n.vi.n.c.or.p@gmail.com</a>
<a href=""mailto:c.r.i.s.t.a.linvin.c.or.p@gmail.com"">c.r.i.s.t.a.linvin.c.or.p@gmail.com</a>
<a href=""mailto:c.ris.ta.l.i.n.vi.ncor.p@gmail.com"">c.ris.ta.l.i.n.vi.ncor.p@gmail.com</a>
<a href=""mailto:cr.ista.li.n.vin.co.rp@gmail.com"">cr.ista.li.n.vin.co.rp@gmail.com</a>
<a href=""mailto:c.r.i.st.a.lin.vinco.r.p@gmail.com"">c.r.i.st.a.lin.vinco.r.p@gmail.com</a>
<a href=""mailto:cris.t.a.li.nv.inc.orp@gmail.com"">cris.t.a.li.nv.inc.orp@gmail.com</a>
<a href=""mailto:cris.ta.li.nv.i.nc.orp@gmail.com"">cris.ta.li.nv.i.nc.orp@gmail.com</a>
<a href=""mailto:cr.i.sta.l.invi.n.c.orp@gmail.com"">cr.i.sta.l.invi.n.c.orp@gmail.com</a>
<a href=""mailto:c.ri.st.al.invin.c.o.rp@gmail.com"">c.ri.st.al.invin.c.o.rp@gmail.com</a>
<a href=""mailto:crista.li.nvi.nco.rp@gmail.com"">crista.li.nvi.nco.rp@gmail.com</a>
<a href=""mailto:cr.is.talin.vin.c.or.p@gmail.com"">cr.is.talin.vin.c.or.p@gmail.com</a>
<a href=""mailto:cris.ta.l.i.n.v.incor.p@gmail.com"">cris.ta.l.i.n.v.incor.p@gmail.com</a>
<a href=""mailto:crista.l.inv.inco.r.p@gmail.com"">crista.l.inv.inco.r.p@gmail.com</a>
<a href=""mailto:c.r.i.sta.l.i.nvi.n.cor.p@gmail.com"">c.r.i.sta.l.i.nvi.n.cor.p@gmail.com</a>
<a href=""mailto:c.r.i.s.tali.nv.incor.p@gmail.com"">c.r.i.s.tali.nv.incor.p@gmail.com</a>
<a href=""mailto:cr.i.s.ta.lin.v.inco.r.p@gmail.com"">cr.i.s.ta.lin.v.inco.r.p@gmail.com</a>
<a href=""mailto:c.ri.st.ali.n.v.inc.or.p@gmail.com"">c.ri.st.ali.n.v.inc.or.p@gmail.com</a>
<a href=""mailto:cr.i.sta.l.in.v.i.n.co.r.p@gmail.com"">cr.i.sta.l.in.v.i.n.co.r.p@gmail.com</a>
<a href=""mailto:cr.ist.al.inv.i.n.corp@gmail.com"">cr.ist.al.inv.i.n.corp@gmail.com</a>
<a href=""mailto:c.r.i.s.ta.lin.v.in.c.o.r.p@gmail.com"">c.r.i.s.ta.lin.v.in.c.o.r.p@gmail.com</a>
<a href=""mailto:c.ri.st.a.linv.i.n.co.r.p@gmail.com"">c.ri.st.a.linv.i.n.co.r.p@gmail.com</a>
<a href=""mailto:cri.s.t.a.l.in.vi.n.c.or.p@gmail.com"">cri.s.t.a.l.in.vi.n.c.or.p@gmail.com</a>
<a href=""mailto:c.ris.tal.i.n.v.i.n.c.o.r.p@gmail.com"">c.ris.tal.i.n.v.i.n.c.o.r.p@gmail.com</a>
<a href=""mailto:c.r.ista.lin.v.inc.o.r.p@gmail.com"">c.r.ista.lin.v.inc.o.r.p@gmail.com</a>
<a href=""mailto:c.rist.a.l.i.nv.incor.p@gmail.com"">c.rist.a.l.i.nv.incor.p@gmail.com</a>
<a href=""mailto:c.ri.stalinv.inc.o.r.p@gmail.com"">c.ri.stalinv.inc.o.r.p@gmail.com</a>
<a href=""mailto:c.r.ist.al.in.vi.n.corp@gmail.com"">c.r.ist.al.in.vi.n.corp@gmail.com</a>
<a href=""mailto:c.r.i.s.t.a.l.i.n.v.in.c.orp@gmail.com"">c.r.i.s.t.a.l.i.n.v.in.c.orp@gmail.com</a>
<a href=""mailto:cr.is.tal.i.nvi.n.c.orp@gmail.com"">cr.is.tal.i.nvi.n.c.orp@gmail.com</a>
<a href=""mailto:c.r.ista.lin.v.in.c.or.p@gmail.com"">c.r.ista.lin.v.in.c.or.p@gmail.com</a>
<a href=""mailto:cr.is.t.ali.n.vinc.orp@gmail.com"">cr.is.t.ali.n.vinc.orp@gmail.com</a>
<a href=""mailto:c.ris.tal.inv.i.n.c.o.r.p@gmail.com"">c.ris.tal.inv.i.n.c.o.r.p@gmail.com</a>
<a href=""mailto:c.r.ista.l.in.vi.n.c.o.rp@gmail.com"">c.r.ista.l.in.vi.n.c.o.rp@gmail.com</a>
<a href=""mailto:c.ris.ta.l.in.vinc.o.r.p@gmail.com"">c.ris.ta.l.in.vinc.o.r.p@gmail.com</a>
<a href=""mailto:c.ri.s.ta.linvinc.orp@gmail.com"">c.ri.s.ta.linvinc.orp@gmail.com</a>
<a href=""mailto:cristalin.vinco.r.p@gmail.com"">cristalin.vinco.r.p@gmail.com</a>
<a href=""mailto:cr.istalinv.i.nco.r.p@gmail.com"">cr.istalinv.i.nco.r.p@gmail.com</a>
<a href=""mailto:c.ri.sta.lin.vinc.o.rp@gmail.com"">c.ri.sta.lin.vinc.o.rp@gmail.com</a>
<a href=""mailto:cris.t.ali.nv.in.c.o.rp@gmail.com"">cris.t.ali.nv.in.c.o.rp@gmail.com</a>
<a href=""mailto:c.ri.s.t.a.lin.vinco.rp@gmail.com"">c.ri.s.t.a.lin.vinco.rp@gmail.com</a>
<a href=""mailto:c.r.i.stal.in.v.inco.rp@gmail.com"">c.r.i.stal.in.v.inco.rp@gmail.com</a>
<a href=""mailto:c.r.ist.al.i.n.v.i.nc.o.r.p@gmail.com"">c.r.ist.al.i.n.v.i.nc.o.r.p@gmail.com</a>
<a href=""mailto:c.r.i.s.t.a.l.i.n.v.in.co.r.p@gmail.com"">c.r.i.s.t.a.l.i.n.v.in.co.r.p@gmail.com</a>
<a href=""mailto:c.r.istal.invi.n.corp@gmail.com"">c.r.istal.invi.n.corp@gmail.com</a>
<a href=""mailto:cr.istalin.v.inc.o.rp@gmail.com"">cr.istalin.v.inc.o.rp@gmail.com</a>
<a href=""mailto:c.r.i.s.t.a.linv.inco.rp@gmail.com"">c.r.i.s.t.a.linv.inco.rp@gmail.com</a>
<a href=""mailto:c.ri.s.ta.l.i.n.v.i.nco.r.p@gmail.com"">c.ri.s.ta.l.i.n.v.i.nco.r.p@gmail.com</a>
<a href=""mailto:cris.ta.lin.vi.n.c.o.r.p@gmail.com"">cris.ta.lin.vi.n.c.o.r.p@gmail.com</a>
<a href=""mailto:c.r.is.tal.i.nvin.cor.p@gmail.com"">c.r.is.tal.i.nvin.cor.p@gmail.com</a>
<a href=""mailto:c.rist.al.i.nv.i.n.corp@gmail.com"">c.rist.al.i.nv.i.n.corp@gmail.com</a>
<a href=""mailto:cr.i.st.a.l.in.v.inc.or.p@gmail.com"">cr.i.st.a.l.in.v.inc.or.p@gmail.com</a>
<a href=""mailto:c.r.ista.l.i.nvinc.o.r.p@gmail.com"">c.r.ista.l.i.nvinc.o.r.p@gmail.com</a>
<a href=""mailto:cr.ist.a.l.in.v.incorp@gmail.com"">cr.ist.a.l.in.v.incorp@gmail.com</a>
<a href=""mailto:cr.ist.a.linv.i.n.cor.p@gmail.com"">cr.ist.a.linv.i.n.cor.p@gmail.com</a>
<a href=""mailto:cri.stali.n.vi.ncor.p@gmail.com"">cri.stali.n.vi.ncor.p@gmail.com</a>
<a href=""mailto:cristali.nvi.n.co.rp@gmail.com"">cristali.nvi.n.co.rp@gmail.com</a>
<a href=""mailto:cr.ista.linvi.n.corp@gmail.com"">cr.ista.linvi.n.corp@gmail.com</a>
<a href=""mailto:c.r.ist.a.lin.vinc.orp@gmail.com"">c.r.ist.a.lin.vinc.orp@gmail.com</a>
<a href=""mailto:cr.i.s.tal.i.nvi.nco.r.p@gmail.com"">cr.i.s.tal.i.nvi.nco.r.p@gmail.com</a>
<a href=""mailto:cr.ist.a.lin.v.in.corp@gmail.com"">cr.ist.a.lin.v.in.corp@gmail.com</a>
<a href=""mailto:c.ri.st.al.invinc.o.rp@gmail.com"">c.ri.st.al.invinc.o.rp@gmail.com</a>
<a href=""mailto:cris.tali.nvi.n.cor.p@gmail.com"">cris.tali.nvi.n.cor.p@gmail.com</a>
<a href=""mailto:c.ristali.n.vi.n.cor.p@gmail.com"">c.ristali.n.vi.n.cor.p@gmail.com</a>
<a href=""mailto:c.r.is.t.al.in.v.in.c.o.r.p@gmail.com"">c.r.is.t.al.in.v.in.c.o.r.p@gmail.com</a>
<a href=""mailto:cr.i.sta.l.i.nv.i.nc.orp@gmail.com"">cr.i.sta.l.i.nv.i.nc.orp@gmail.com</a>
<a href=""mailto:cri.s.tal.in.vi.ncorp@gmail.com"">cri.s.tal.in.vi.ncorp@gmail.com</a>
<a href=""mailto:c.ri.st.al.invinco.rp@gmail.com"">c.ri.st.al.invinco.rp@gmail.com</a>
<a href=""mailto:cristal.i.n.v.i.n.c.o.r.p@gmail.com"">cristal.i.n.v.i.n.c.o.r.p@gmail.com</a>
<a href=""mailto:c.r.i.s.t.alin.v.in.c.orp@gmail.com"">c.r.i.s.t.alin.v.in.c.orp@gmail.com</a>
<a href=""mailto:cri.s.t.al.i.nvi.nco.r.p@gmail.com"">cri.s.t.al.i.nvi.nco.r.p@gmail.com</a>
<a href=""mailto:cri.sta.l.i.nvinc.o.r.p@gmail.com"">cri.sta.l.i.nvinc.o.r.p@gmail.com</a>
<a href=""mailto:cr.istalin.vin.c.or.p@gmail.com"">cr.istalin.vin.c.or.p@gmail.com</a>
<a href=""mailto:c.r.is.tal.i.n.vi.nc.or.p@gmail.com"">c.r.is.tal.i.n.vi.nc.or.p@gmail.com</a>
<a href=""mailto:c.ri.stali.nv.i.nco.rp@gmail.com"">c.ri.stali.nv.i.nco.rp@gmail.com</a>
<a href=""mailto:c.r.ist.al.i.n.v.i.nc.orp@gmail.com"">c.r.ist.al.i.n.v.i.nc.orp@gmail.com</a>
<a href=""mailto:c.r.istal.i.nv.i.nco.r.p@gmail.com"">c.r.istal.i.nv.i.nco.r.p@gmail.com</a>
<a href=""mailto:c.ri.st.a.l.i.nv.in.c.o.rp@gmail.com"">c.ri.st.a.l.i.nv.in.c.o.rp@gmail.com</a>
<a href=""mailto:c.r.is.ta.l.inv.i.nco.r.p@gmail.com"">c.r.is.ta.l.inv.i.nco.r.p@gmail.com</a>
<a href=""mailto:c.ris.tal.inv.i.nc.o.r.p@gmail.com"">c.ris.tal.inv.i.nc.o.r.p@gmail.com</a>
<a href=""mailto:c.r.i.s.t.al.inv.inco.rp@gmail.com"">c.r.i.s.t.al.inv.inco.rp@gmail.com</a>
<a href=""mailto:cr.is.t.a.l.inv.in.c.orp@gmail.com"">cr.is.t.a.l.inv.in.c.orp@gmail.com</a>
<a href=""mailto:cr.i.sta.lin.v.inco.rp@gmail.com"">cr.i.sta.lin.v.inco.rp@gmail.com</a>
<a href=""mailto:c.r.is.t.a.linv.inc.o.r.p@gmail.com"">c.r.is.t.a.linv.inc.o.r.p@gmail.com</a>
<a href=""mailto:c.r.i.s.t.ali.nvin.c.o.r.p@gmail.com"">c.r.i.s.t.ali.nvin.c.o.r.p@gmail.com</a>
<a href=""mailto:cr.i.st.a.l.in.vi.n.cor.p@gmail.com"">cr.i.st.a.l.in.vi.n.cor.p@gmail.com</a>
<a href=""mailto:cri.st.a.li.n.vin.c.o.r.p@gmail.com"">cri.st.a.li.n.vin.c.o.r.p@gmail.com</a>
<a href=""mailto:c.r.i.st.a.linvi.n.c.o.r.p@gmail.com"">c.r.i.st.a.linvi.n.c.o.r.p@gmail.com</a>
<a href=""mailto:crist.alin.v.i.n.co.r.p@gmail.com"">crist.alin.v.i.n.co.r.p@gmail.com</a>
<a href=""mailto:cris.ta.l.i.nv.i.n.co.rp@gmail.com"">cris.ta.l.i.nv.i.n.co.rp@gmail.com</a>
<a href=""mailto:c.ri.s.t.alinv.i.nc.orp@gmail.com"">c.ri.s.t.alinv.i.nc.orp@gmail.com</a>
<a href=""mailto:cr.i.s.ta.linv.in.c.o.rp@gmail.com"">cr.i.s.ta.linv.in.c.o.rp@gmail.com</a>
<a href=""mailto:c.ri.s.ta.li.nv.i.n.c.o.rp@gmail.com"">c.ri.s.ta.li.nv.i.n.c.o.rp@gmail.com</a>
<a href=""mailto:c.r.i.sta.lin.v.in.c.o.r.p@gmail.com"">c.r.i.sta.lin.v.in.c.o.r.p@gmail.com</a>
<a href=""mailto:cri.sta.l.invi.nc.orp@gmail.com"">cri.sta.l.invi.nc.orp@gmail.com</a>
<a href=""mailto:c.ri.s.ta.li.nvin.c.o.r.p@gmail.com"">c.ri.s.ta.li.nvin.c.o.r.p@gmail.com</a>
<a href=""mailto:cri.s.ta.li.n.vi.n.co.rp@gmail.com"">cri.s.ta.li.n.vi.n.co.rp@gmail.com</a>
<a href=""mailto:cri.s.t.a.l.i.n.vi.nc.o.r.p@gmail.com"">cri.s.t.a.l.i.n.vi.nc.o.r.p@gmail.com</a>
<a href=""mailto:c.r.is.t.al.i.n.v.inco.rp@gmail.com"">c.r.is.t.al.i.n.v.inco.rp@gmail.com</a>
<a href=""mailto:c.ri.s.t.alin.v.in.cor.p@gmail.com"">c.ri.s.t.alin.v.in.cor.p@gmail.com</a>
<a href=""mailto:c.r.ist.a.li.nvin.co.r.p@gmail.com"">c.r.ist.a.li.nvin.co.r.p@gmail.com</a>
<a href=""mailto:c.rist.al.i.n.v.i.ncorp@gmail.com"">c.rist.al.i.n.v.i.ncorp@gmail.com</a>
<a href=""mailto:c.r.is.t.ali.nv.in.c.o.r.p@gmail.com"">c.r.is.t.ali.nv.in.c.o.r.p@gmail.com</a>
<a href=""mailto:c.r.is.t.a.l.invinco.rp@gmail.com"">c.r.is.t.a.l.invinco.rp@gmail.com</a>
<a href=""mailto:c.ris.talin.v.i.nc.o.rp@gmail.com"">c.ris.talin.v.i.nc.o.rp@gmail.com</a>
<a href=""mailto:c.ri.s.tal.inv.i.n.corp@gmail.com"">c.ri.s.tal.inv.i.n.corp@gmail.com</a>
<a href=""mailto:c.r.ist.alinv.i.nco.r.p@gmail.com"">c.r.ist.alinv.i.nco.r.p@gmail.com</a>
<a href=""mailto:c.r.is.talinvin.c.o.r.p@gmail.com"">c.r.is.talinvin.c.o.r.p@gmail.com</a>
<a href=""mailto:cr.i.s.tali.nvi.nco.r.p@gmail.com"">cr.i.s.tali.nvi.nco.r.p@gmail.com</a>
<a href=""mailto:c.r.is.t.a.li.n.v.inc.o.rp@gmail.com"">c.r.is.t.a.li.n.v.inc.o.rp@gmail.com</a>
<a href=""mailto:joehopfile@gmail.com"">joehopfile@gmail.com</a>
<a href=""mailto:j.oeh.o.pf.i.le@gmail.com"">j.oeh.o.pf.i.le@gmail.com</a>
<a href=""mailto:jo.ehop.f.il.e@gmail.com"">jo.ehop.f.il.e@gmail.com</a>
<a href=""mailto:j.oe.h.op.f.ile@gmail.com"">j.oe.h.op.f.ile@gmail.com</a>
<a href=""mailto:joe.ho.p.f.i.l.e@gmail.com"">joe.ho.p.f.i.l.e@gmail.com</a>
<a href=""mailto:joe.ho.p.f.il.e@gmail.com"">joe.ho.p.f.il.e@gmail.com</a>
<a href=""mailto:joe.h.opfi.l.e@gmail.com"">joe.h.opfi.l.e@gmail.com</a>
<a href=""mailto:jo.e.hop.f.ile@gmail.com"">jo.e.hop.f.ile@gmail.com</a>
<a href=""mailto:j.oehop.file@gmail.com"">j.oehop.file@gmail.com</a>
<a href=""mailto:j.oe.ho.p.file@gmail.com"">j.oe.ho.p.file@gmail.com</a>
<a href=""mailto:j.o.eh.opfi.l.e@gmail.com"">j.o.eh.opfi.l.e@gmail.com</a>
<a href=""mailto:j.o.e.h.op.fi.l.e@gmail.com"">j.o.e.h.op.fi.l.e@gmail.com</a>
<a href=""mailto:joeh.o.p.fi.le@gmail.com"">joeh.o.p.fi.le@gmail.com</a>
<a href=""mailto:j.oeh.o.pfile@gmail.com"">j.oeh.o.pfile@gmail.com</a>
<a href=""mailto:j.o.eh.o.pfile@gmail.com"">j.o.eh.o.pfile@gmail.com</a>
<a href=""mailto:j.o.e.h.opf.i.le@gmail.com"">j.o.e.h.opf.i.le@gmail.com</a>
<a href=""mailto:joeh.o.pfile@gmail.com"">joeh.o.pfile@gmail.com</a>
<a href=""mailto:j.oe.h.opfil.e@gmail.com"">j.oe.h.opfil.e@gmail.com</a>
<a href=""mailto:j.o.eho.pfil.e@gmail.com"">j.o.eho.pfil.e@gmail.com</a>
<a href=""mailto:j.oe.hop.fi.l.e@gmail.com"">j.oe.hop.fi.l.e@gmail.com</a>
<a href=""mailto:j.o.e.hop.fi.le@gmail.com"">j.o.e.hop.fi.le@gmail.com</a>
<a href=""mailto:jo.e.ho.pfi.le@gmail.com"">jo.e.ho.pfi.le@gmail.com</a>
<a href=""mailto:jo.e.h.op.fi.l.e@gmail.com"">jo.e.h.op.fi.l.e@gmail.com</a>
<a href=""mailto:j.oeh.o.p.f.i.le@gmail.com"">j.oeh.o.p.f.i.le@gmail.com</a>
<a href=""mailto:j.o.eh.o.pf.ile@gmail.com"">j.o.eh.o.pf.ile@gmail.com</a>
<a href=""mailto:jo.eho.p.file@gmail.com"">jo.eho.p.file@gmail.com</a>
<a href=""mailto:j.oeho.pfile@gmail.com"">j.oeho.pfile@gmail.com</a>
<a href=""mailto:j.o.e.h.opfi.le@gmail.com"">j.o.e.h.opfi.le@gmail.com</a>
<a href=""mailto:jo.e.h.op.f.il.e@gmail.com"">jo.e.h.op.f.il.e@gmail.com</a>
<a href=""mailto:joe.h.op.f.i.l.e@gmail.com"">joe.h.op.f.i.l.e@gmail.com</a>
<a href=""mailto:joe.ho.pf.i.l.e@gmail.com"">joe.ho.pf.i.l.e@gmail.com</a>
<a href=""mailto:joe.h.op.f.ile@gmail.com"">joe.h.op.f.ile@gmail.com</a>
<a href=""mailto:j.o.eh.o.pf.il.e@gmail.com"">j.o.eh.o.pf.il.e@gmail.com</a>
<a href=""mailto:jo.e.h.o.p.f.i.l.e@gmail.com"">jo.e.h.o.p.f.i.l.e@gmail.com</a>
<a href=""mailto:j.o.e.h.o.p.fi.l.e@gmail.com"">j.o.e.h.o.p.fi.l.e@gmail.com</a>
<a href=""mailto:jo.eho.p.fi.l.e@gmail.com"">jo.eho.p.fi.l.e@gmail.com</a>
<a href=""mailto:j.o.e.ho.p.fi.l.e@gmail.com"">j.o.e.ho.p.fi.l.e@gmail.com</a>
<a href=""mailto:j.o.eh.opfi.le@gmail.com"">j.o.eh.opfi.le@gmail.com</a>
<a href=""mailto:j.oeh.opf.il.e@gmail.com"">j.oeh.opf.il.e@gmail.com</a>
<a href=""mailto:j.oehopfil.e@gmail.com"">j.oehopfil.e@gmail.com</a>
<a href=""mailto:jo.e.ho.pfile@gmail.com"">jo.e.ho.pfile@gmail.com</a>
<a href=""mailto:j.o.e.ho.pfi.le@gmail.com"">j.o.e.ho.pfi.le@gmail.com</a>
<a href=""mailto:joe.ho.pfile@gmail.com"">joe.ho.pfile@gmail.com</a>
<a href=""mailto:j.oe.ho.p.fi.l.e@gmail.com"">j.oe.ho.p.fi.l.e@gmail.com</a>
<a href=""mailto:j.o.eho.p.f.i.l.e@gmail.com"">j.o.eho.p.f.i.l.e@gmail.com</a>
<a href=""mailto:joeho.p.fi.le@gmail.com"">joeho.p.fi.le@gmail.com</a>
<a href=""mailto:j.oehop.fil.e@gmail.com"">j.oehop.fil.e@gmail.com</a>
<a href=""mailto:joe.ho.pfi.le@gmail.com"">joe.ho.pfi.le@gmail.com</a>
<a href=""mailto:j.oe.hop.f.ile@gmail.com"">j.oe.hop.f.ile@gmail.com</a>
<a href=""mailto:j.oehopf.i.le@gmail.com"">j.oehopf.i.le@gmail.com</a>
<a href=""mailto:j.o.ehopf.il.e@gmail.com"">j.o.ehopf.il.e@gmail.com</a>
<a href=""mailto:joehopf.il.e@gmail.com"">joehopf.il.e@gmail.com</a>
<a href=""mailto:j.oehopf.i.l.e@gmail.com"">j.oehopf.i.l.e@gmail.com</a>
<a href=""mailto:jo.e.hop.fil.e@gmail.com"">jo.e.hop.fil.e@gmail.com</a>
<a href=""mailto:j.oe.ho.p.f.ile@gmail.com"">j.oe.ho.p.f.ile@gmail.com</a>
<a href=""mailto:j.o.eho.p.fil.e@gmail.com"">j.o.eho.p.fil.e@gmail.com</a>
<a href=""mailto:j.oeh.op.f.il.e@gmail.com"">j.oeh.op.f.il.e@gmail.com</a>
<a href=""mailto:j.o.e.h.op.fi.le@gmail.com"">j.o.e.h.op.fi.le@gmail.com</a>
<a href=""mailto:jo.eh.o.p.f.i.le@gmail.com"">jo.eh.o.p.f.i.le@gmail.com</a>
<a href=""mailto:j.o.eh.opfile@gmail.com"">j.o.eh.opfile@gmail.com</a>
<a href=""mailto:j.oe.ho.p.fi.le@gmail.com"">j.oe.ho.p.fi.le@gmail.com</a>
<a href=""mailto:j.oe.h.op.fil.e@gmail.com"">j.oe.h.op.fil.e@gmail.com</a>
<a href=""mailto:j.oe.ho.pfile@gmail.com"">j.oe.ho.pfile@gmail.com</a>
<a href=""mailto:jo.eh.o.pfil.e@gmail.com"">jo.eh.o.pfil.e@gmail.com</a>
<a href=""mailto:jo.eho.pfil.e@gmail.com"">jo.eho.pfil.e@gmail.com</a>
<a href=""mailto:j.o.eho.pfile@gmail.com"">j.o.eho.pfile@gmail.com</a>
<a href=""mailto:j.oe.hopfi.le@gmail.com"">j.oe.hopfi.le@gmail.com</a>
<a href=""mailto:jo.e.hop.f.i.le@gmail.com"">jo.e.hop.f.i.le@gmail.com</a>
<a href=""mailto:jo.eh.o.p.f.i.l.e@gmail.com"">jo.eh.o.p.f.i.l.e@gmail.com</a>
<a href=""mailto:jo.e.h.op.f.i.le@gmail.com"">jo.e.h.op.f.i.le@gmail.com</a>
<a href=""mailto:joe.hop.fil.e@gmail.com"">joe.hop.fil.e@gmail.com</a>
<a href=""mailto:jo.eh.opf.i.l.e@gmail.com"">jo.eh.opf.i.l.e@gmail.com</a>
<a href=""mailto:jo.e.hop.fi.le@gmail.com"">jo.e.hop.fi.le@gmail.com</a>
<a href=""mailto:jo.eh.o.pf.i.l.e@gmail.com"">jo.eh.o.pf.i.l.e@gmail.com</a>
<a href=""mailto:joe.hopfi.le@gmail.com"">joe.hopfi.le@gmail.com</a>
<a href=""mailto:j.oeh.opfil.e@gmail.com"">j.oeh.opfil.e@gmail.com</a>
<a href=""mailto:j.o.eho.pf.ile@gmail.com"">j.o.eho.pf.ile@gmail.com</a>
<a href=""mailto:j.oeho.pf.i.l.e@gmail.com"">j.oeho.pf.i.l.e@gmail.com</a>
<a href=""mailto:jo.e.ho.pf.i.le@gmail.com"">jo.e.ho.pf.i.le@gmail.com</a>
<a href=""mailto:joehop.fi.le@gmail.com"">joehop.fi.le@gmail.com</a>
<a href=""mailto:j.o.eh.o.pf.i.le@gmail.com"">j.o.eh.o.pf.i.le@gmail.com</a>
<a href=""mailto:joehopf.i.l.e@gmail.com"">joehopf.i.l.e@gmail.com</a>
<a href=""mailto:j.oeh.op.f.ile@gmail.com"">j.oeh.op.f.ile@gmail.com</a>
<a href=""mailto:j.o.eh.o.pfi.le@gmail.com"">j.o.eh.o.pfi.le@gmail.com</a>
<a href=""mailto:joe.hopf.i.l.e@gmail.com"">joe.hopf.i.l.e@gmail.com</a>
<a href=""mailto:jo.e.hop.f.i.l.e@gmail.com"">jo.e.hop.f.i.l.e@gmail.com</a>
<a href=""mailto:j.o.eh.o.p.f.il.e@gmail.com"">j.o.eh.o.p.f.il.e@gmail.com</a>
<a href=""mailto:j.oe.h.o.p.f.i.l.e@gmail.com"">j.oe.h.o.p.f.i.l.e@gmail.com</a>
<a href=""mailto:j.o.eh.o.p.f.ile@gmail.com"">j.o.eh.o.p.f.ile@gmail.com</a>
<a href=""mailto:j.o.eh.op.f.ile@gmail.com"">j.o.eh.op.f.ile@gmail.com</a>
<a href=""mailto:j.oeh.o.pf.ile@gmail.com"">j.oeh.o.pf.ile@gmail.com</a>
<a href=""mailto:j.o.eh.opfil.e@gmail.com"">j.o.eh.opfil.e@gmail.com</a>
<a href=""mailto:j.o.e.ho.pf.ile@gmail.com"">j.o.e.ho.pf.ile@gmail.com</a>
<a href=""mailto:jo.eh.op.f.i.le@gmail.com"">jo.eh.op.f.i.le@gmail.com</a>
<a href=""mailto:j.o.e.h.op.fil.e@gmail.com"">j.o.e.h.op.fil.e@gmail.com</a>
<a href=""mailto:j.o.ehopfil.e@gmail.com"">j.o.ehopfil.e@gmail.com</a>
<a href=""mailto:j.oe.ho.pfil.e@gmail.com"">j.oe.ho.pfil.e@gmail.com</a>
<a href=""mailto:j.o.e.h.o.p.fi.le@gmail.com"">j.o.e.h.o.p.fi.le@gmail.com</a>
<a href=""mailto:j.o.e.hopfile@gmail.com"">j.o.e.hopfile@gmail.com</a>
<a href=""mailto:j.o.eho.pf.i.l.e@gmail.com"">j.o.eho.pf.i.l.e@gmail.com</a>
<a href=""mailto:joeh.o.p.f.il.e@gmail.com"">joeh.o.p.f.il.e@gmail.com</a>
<a href=""mailto:j.o.eh.op.fil.e@gmail.com"">j.o.eh.op.fil.e@gmail.com</a>
<a href=""mailto:j.o.e.h.opf.il.e@gmail.com"">j.o.e.h.opf.il.e@gmail.com</a>
<a href=""mailto:jo.eh.o.p.fil.e@gmail.com"">jo.eh.o.p.fil.e@gmail.com</a>
<a href=""mailto:joe.hopf.i.le@gmail.com"">joe.hopf.i.le@gmail.com</a>
<a href=""mailto:j.o.ehopfi.l.e@gmail.com"">j.o.ehopfi.l.e@gmail.com</a>
<a href=""mailto:joe.hop.fi.le@gmail.com"">joe.hop.fi.le@gmail.com</a>
<a href=""mailto:j.o.ehop.f.i.le@gmail.com"">j.o.ehop.f.i.le@gmail.com</a>
<a href=""mailto:j.o.eh.o.p.f.i.le@gmail.com"">j.o.eh.o.p.f.i.le@gmail.com</a>
<a href=""mailto:joeho.pf.i.l.e@gmail.com"">joeho.pf.i.l.e@gmail.com</a>
<a href=""mailto:j.oehop.f.il.e@gmail.com"">j.oehop.f.il.e@gmail.com</a>
<a href=""mailto:j.oeh.o.pfi.le@gmail.com"">j.oeh.o.pfi.le@gmail.com</a>
<a href=""mailto:j.oe.ho.p.fil.e@gmail.com"">j.oe.ho.p.fil.e@gmail.com</a>
<a href=""mailto:joeh.o.p.f.i.le@gmail.com"">joeh.o.p.f.i.le@gmail.com</a>
<a href=""mailto:joe.h.opfile@gmail.com"">joe.h.opfile@gmail.com</a>
<a href=""mailto:j.o.e.hop.f.i.l.e@gmail.com"">j.o.e.hop.f.i.l.e@gmail.com</a>
<a href=""mailto:j.oe.h.o.p.file@gmail.com"">j.oe.h.o.p.file@gmail.com</a>
<a href=""mailto:j.oeh.opfile@gmail.com"">j.oeh.opfile@gmail.com</a>
<a href=""mailto:joe.h.o.p.fi.le@gmail.com"">joe.h.o.p.fi.le@gmail.com</a>
<a href=""mailto:jo.eho.pf.i.le@gmail.com"">jo.eho.pf.i.le@gmail.com</a>
<a href=""mailto:j.oe.ho.pfi.l.e@gmail.com"">j.oe.ho.pfi.l.e@gmail.com</a>
<a href=""mailto:j.oe.hopfi.l.e@gmail.com"">j.oe.hopfi.l.e@gmail.com</a>
<a href=""mailto:j.o.eh.o.p.file@gmail.com"">j.o.eh.o.p.file@gmail.com</a>
<a href=""mailto:joeho.p.fi.l.e@gmail.com"">joeho.p.fi.l.e@gmail.com</a>
<a href=""mailto:j.oe.h.op.file@gmail.com"">j.oe.h.op.file@gmail.com</a>
<a href=""mailto:j.o.eh.o.pfi.l.e@gmail.com"">j.o.eh.o.pfi.l.e@gmail.com</a>
<a href=""mailto:jo.eho.p.fil.e@gmail.com"">jo.eho.p.fil.e@gmail.com</a>
<a href=""mailto:j.o.eho.pf.i.le@gmail.com"">j.o.eho.pf.i.le@gmail.com</a>
<a href=""mailto:joe.h.o.pfi.le@gmail.com"">joe.h.o.pfi.le@gmail.com</a>
<a href=""mailto:j.oeh.o.pf.il.e@gmail.com"">j.oeh.o.pf.il.e@gmail.com</a>
<a href=""mailto:joeh.opf.ile@gmail.com"">joeh.opf.ile@gmail.com</a>
<a href=""mailto:jo.e.h.op.f.i.l.e@gmail.com"">jo.e.h.op.f.i.l.e@gmail.com</a>
<a href=""mailto:joe.hop.f.i.l.e@gmail.com"">joe.hop.f.i.l.e@gmail.com</a>
<a href=""mailto:j.o.e.ho.p.fi.le@gmail.com"">j.o.e.ho.p.fi.le@gmail.com</a>
<a href=""mailto:jo.eho.pf.il.e@gmail.com"">jo.eho.pf.il.e@gmail.com</a>
<a href=""mailto:joehop.f.il.e@gmail.com"">joehop.f.il.e@gmail.com</a>
<a href=""mailto:j.o.e.h.opfi.l.e@gmail.com"">j.o.e.h.opfi.l.e@gmail.com</a>
<a href=""mailto:joe.h.o.p.f.il.e@gmail.com"">joe.h.o.p.f.il.e@gmail.com</a>
<a href=""mailto:joe.ho.pfi.l.e@gmail.com"">joe.ho.pfi.l.e@gmail.com</a>
<a href=""mailto:j.o.e.h.op.f.ile@gmail.com"">j.o.e.h.op.f.ile@gmail.com</a>
<a href=""mailto:j.oe.ho.pf.il.e@gmail.com"">j.oe.ho.pf.il.e@gmail.com</a>
<a href=""mailto:jo.eh.o.pfile@gmail.com"">jo.eh.o.pfile@gmail.com</a>
<a href=""mailto:joe.ho.p.file@gmail.com"">joe.ho.p.file@gmail.com</a>
<a href=""mailto:j.oeho.pfi.le@gmail.com"">j.oeho.pfi.le@gmail.com</a>
<a href=""mailto:jo.e.hop.file@gmail.com"">jo.e.hop.file@gmail.com</a>
<a href=""mailto:j.oe.h.opf.i.l.e@gmail.com"">j.oe.h.opf.i.l.e@gmail.com</a>
<a href=""mailto:j.oe.h.o.p.f.i.le@gmail.com"">j.oe.h.o.p.f.i.le@gmail.com</a>
<a href=""mailto:jo.e.ho.pf.i.l.e@gmail.com"">jo.e.ho.pf.i.l.e@gmail.com</a>
<a href=""mailto:joeho.p.fil.e@gmail.com"">joeho.p.fil.e@gmail.com</a>
<a href=""mailto:j.oeho.p.f.ile@gmail.com"">j.oeho.p.f.ile@gmail.com</a>
<a href=""mailto:j.oe.h.op.fi.l.e@gmail.com"">j.oe.h.op.fi.l.e@gmail.com</a>
<a href=""mailto:j.oe.hopf.il.e@gmail.com"">j.oe.hopf.il.e@gmail.com</a>
<a href=""mailto:j.o.e.h.o.pfile@gmail.com"">j.o.e.h.o.pfile@gmail.com</a>
<a href=""mailto:j.oe.hopfil.e@gmail.com"">j.oe.hopfil.e@gmail.com</a>
<a href=""mailto:joe.h.o.pfi.l.e@gmail.com"">joe.h.o.pfi.l.e@gmail.com</a>
<a href=""mailto:jo.ehopf.ile@gmail.com"">jo.ehopf.ile@gmail.com</a>
<a href=""mailto:j.o.e.h.o.pf.ile@gmail.com"">j.o.e.h.o.pf.ile@gmail.com</a>
<a href=""mailto:jo.e.ho.p.f.ile@gmail.com"">jo.e.ho.p.f.ile@gmail.com</a>
<a href=""mailto:joe.ho.pf.i.le@gmail.com"">joe.ho.pf.i.le@gmail.com</a>
<a href=""mailto:joeh.o.pf.i.le@gmail.com"">joeh.o.pf.i.le@gmail.com</a>
<a href=""mailto:j.oeh.o.p.f.i.l.e@gmail.com"">j.oeh.o.p.f.i.l.e@gmail.com</a>
<a href=""mailto:j.oeho.p.file@gmail.com"">j.oeho.p.file@gmail.com</a>
<a href=""mailto:joe.ho.pf.il.e@gmail.com"">joe.ho.pf.il.e@gmail.com</a>
<a href=""mailto:j.oeho.pf.i.le@gmail.com"">j.oeho.pf.i.le@gmail.com</a>
<a href=""mailto:j.oe.h.o.pfil.e@gmail.com"">j.oe.h.o.pfil.e@gmail.com</a>
<a href=""mailto:j.o.e.h.o.pf.i.le@gmail.com"">j.o.e.h.o.pf.i.le@gmail.com</a>
<a href=""mailto:j.oe.hop.fi.le@gmail.com"">j.oe.hop.fi.le@gmail.com</a>
<a href=""mailto:j.o.e.h.op.f.i.le@gmail.com"">j.o.e.h.op.f.i.le@gmail.com</a>
<a href=""mailto:joeh.o.p.fi.l.e@gmail.com"">joeh.o.p.fi.l.e@gmail.com</a>
<a href=""mailto:j.oe.h.opf.ile@gmail.com"">j.oe.h.opf.ile@gmail.com</a>
<a href=""mailto:j.o.ehop.file@gmail.com"">j.o.ehop.file@gmail.com</a>
<a href=""mailto:jo.e.h.opf.ile@gmail.com"">jo.e.h.opf.ile@gmail.com</a>
<a href=""mailto:j.o.e.hopf.i.le@gmail.com"">j.o.e.hopf.i.le@gmail.com</a>
<a href=""mailto:j.oeho.pfi.l.e@gmail.com"">j.oeho.pfi.l.e@gmail.com</a>
<a href=""mailto:joeh.op.f.il.e@gmail.com"">joeh.op.f.il.e@gmail.com</a>
<a href=""mailto:jo.eh.op.file@gmail.com"">jo.eh.op.file@gmail.com</a>
<a href=""mailto:joeh.o.pf.il.e@gmail.com"">joeh.o.pf.il.e@gmail.com</a>
<a href=""mailto:j.o.e.hop.f.i.le@gmail.com"">j.o.e.hop.f.i.le@gmail.com</a>
<a href=""mailto:j.o.e.h.op.f.il.e@gmail.com"">j.o.e.h.op.f.il.e@gmail.com</a>
<a href=""mailto:jo.e.h.o.pf.i.l.e@gmail.com"">jo.e.h.o.pf.i.l.e@gmail.com</a>
<a href=""mailto:j.oe.h.opfi.le@gmail.com"">j.oe.h.opfi.le@gmail.com</a>
<a href=""mailto:j.oe.ho.pfi.le@gmail.com"">j.oe.ho.pfi.le@gmail.com</a>
<a href=""mailto:jo.eh.o.p.file@gmail.com"">jo.eh.o.p.file@gmail.com</a>
<a href=""mailto:j.o.e.ho.p.f.il.e@gmail.com"">j.o.e.ho.p.f.il.e@gmail.com</a>
<a href=""mailto:joe.h.opfil.e@gmail.com"">joe.h.opfil.e@gmail.com</a>
<a href=""mailto:jo.eh.opfi.le@gmail.com"">jo.eh.opfi.le@gmail.com</a>
<a href=""mailto:j.oehopf.ile@gmail.com"">j.oehopf.ile@gmail.com</a>
<a href=""mailto:j.o.e.ho.pfile@gmail.com"">j.o.e.ho.pfile@gmail.com</a>
<a href=""mailto:j.oeho.pf.il.e@gmail.com"">j.oeho.pf.il.e@gmail.com</a>
<a href=""mailto:jo.ehopfil.e@gmail.com"">jo.ehopfil.e@gmail.com</a>
<a href=""mailto:jo.eh.op.f.i.l.e@gmail.com"">jo.eh.op.f.i.l.e@gmail.com</a>
<a href=""mailto:j.oehopfi.l.e@gmail.com"">j.oehopfi.l.e@gmail.com</a>
<a href=""mailto:j.o.eh.o.p.fi.le@gmail.com"">j.o.eh.o.p.fi.le@gmail.com</a>
<a href=""mailto:joeh.op.f.i.le@gmail.com"">joeh.op.f.i.le@gmail.com</a>
<a href=""mailto:j.o.eho.p.file@gmail.com"">j.o.eho.p.file@gmail.com</a>
<a href=""mailto:j.o.e.h.o.pfi.l.e@gmail.com"">j.o.e.h.o.pfi.l.e@gmail.com</a>
<a href=""mailto:jo.e.ho.p.fi.l.e@gmail.com"">jo.e.ho.p.fi.l.e@gmail.com</a>
<a href=""mailto:jo.eh.o.pf.il.e@gmail.com"">jo.eh.o.pf.il.e@gmail.com</a>
<a href=""mailto:j.oe.ho.p.f.il.e@gmail.com"">j.oe.ho.p.f.il.e@gmail.com</a>
<a href=""mailto:j.o.e.ho.p.file@gmail.com"">j.o.e.ho.p.file@gmail.com</a>
<a href=""mailto:j.o.e.ho.pfil.e@gmail.com"">j.o.e.ho.pfil.e@gmail.com</a>"
Hg09jJHu,Nigerian scammers [5-3-1/2024],bombaires,AIMMS,Tuesday 5th of March 2024 04:48:28 PM CDT,"<a href=""mailto:kalstromjames21@gmail.com"">kalstromjames21@gmail.com</a>
<a href=""mailto:kal.s.t.romjam.es.21@gmail.com"">kal.s.t.romjam.es.21@gmail.com</a>
<a href=""mailto:k.a.lstr.o.mja.m.es21@gmail.com"">k.a.lstr.o.mja.m.es21@gmail.com</a>
<a href=""mailto:k.a.ls.tr.o.mjam.e.s2.1@gmail.com"">k.a.ls.tr.o.mjam.e.s2.1@gmail.com</a>
<a href=""mailto:k.al.s.t.r.o.mja.me.s.21@gmail.com"">k.al.s.t.r.o.mja.me.s.21@gmail.com</a>
<a href=""mailto:kal.s.tromja.m.e.s.2.1@gmail.com"">kal.s.tromja.m.e.s.2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.ro.mj.a.me.s.2.1@gmail.com"">ka.ls.t.ro.mj.a.me.s.2.1@gmail.com</a>
<a href=""mailto:ka.l.s.tr.omja.m.es21@gmail.com"">ka.l.s.tr.omja.m.es21@gmail.com</a>
<a href=""mailto:k.als.tro.mj.a.m.e.s2.1@gmail.com"">k.als.tro.mj.a.m.e.s2.1@gmail.com</a>
<a href=""mailto:k.a.l.st.r.omj.a.mes.21@gmail.com"">k.a.l.st.r.omj.a.mes.21@gmail.com</a>
<a href=""mailto:kals.tro.m.j.ames2.1@gmail.com"">kals.tro.m.j.ames2.1@gmail.com</a>
<a href=""mailto:k.a.l.st.r.o.mj.a.m.e.s.21@gmail.com"">k.a.l.st.r.o.mj.a.m.e.s.21@gmail.com</a>
<a href=""mailto:kalst.ro.m.jame.s2.1@gmail.com"">kalst.ro.m.jame.s2.1@gmail.com</a>
<a href=""mailto:k.als.tromj.ame.s.2.1@gmail.com"">k.als.tromj.ame.s.2.1@gmail.com</a>
<a href=""mailto:ka.lst.ro.m.jame.s.2.1@gmail.com"">ka.lst.ro.m.jame.s.2.1@gmail.com</a>
<a href=""mailto:ka.l.s.tr.o.mja.me.s2.1@gmail.com"">ka.l.s.tr.o.mja.me.s2.1@gmail.com</a>
<a href=""mailto:kal.stro.m.ja.me.s.21@gmail.com"">kal.stro.m.ja.me.s.21@gmail.com</a>
<a href=""mailto:k.a.ls.t.r.om.jam.es21@gmail.com"">k.a.ls.t.r.om.jam.es21@gmail.com</a>
<a href=""mailto:k.a.ls.tro.m.ja.m.es21@gmail.com"">k.a.ls.tro.m.ja.m.es21@gmail.com</a>
<a href=""mailto:k.alstr.o.m.j.am.es.21@gmail.com"">k.alstr.o.m.j.am.es.21@gmail.com</a>
<a href=""mailto:kal.s.t.ro.mj.a.mes.21@gmail.com"">kal.s.t.ro.mj.a.mes.21@gmail.com</a>
<a href=""mailto:ka.l.s.t.ro.m.ja.me.s.2.1@gmail.com"">ka.l.s.t.ro.m.ja.me.s.2.1@gmail.com</a>
<a href=""mailto:ka.ls.tr.o.mj.am.es.2.1@gmail.com"">ka.ls.tr.o.mj.am.es.2.1@gmail.com</a>
<a href=""mailto:ka.l.s.tr.om.j.am.es.21@gmail.com"">ka.l.s.tr.om.j.am.es.21@gmail.com</a>
<a href=""mailto:kal.s.tr.om.j.ame.s.2.1@gmail.com"">kal.s.tr.om.j.ame.s.2.1@gmail.com</a>
<a href=""mailto:k.als.t.r.om.ja.mes2.1@gmail.com"">k.als.t.r.om.ja.mes2.1@gmail.com</a>
<a href=""mailto:ka.lst.r.o.m.j.ame.s.21@gmail.com"">ka.lst.r.o.m.j.ame.s.21@gmail.com</a>
<a href=""mailto:k.a.l.s.tromj.ame.s2.1@gmail.com"">k.a.l.s.tromj.ame.s2.1@gmail.com</a>
<a href=""mailto:kalst.ro.mja.me.s.2.1@gmail.com"">kalst.ro.mja.me.s.2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.romj.ame.s2.1@gmail.com"">ka.ls.t.romj.ame.s2.1@gmail.com</a>
<a href=""mailto:k.alst.r.o.m.j.a.me.s.21@gmail.com"">k.alst.r.o.m.j.a.me.s.21@gmail.com</a>
<a href=""mailto:k.a.ls.tr.o.mj.a.me.s.2.1@gmail.com"">k.a.ls.tr.o.mj.a.me.s.2.1@gmail.com</a>
<a href=""mailto:k.a.lstromjame.s.2.1@gmail.com"">k.a.lstromjame.s.2.1@gmail.com</a>
<a href=""mailto:k.als.tro.mja.me.s.21@gmail.com"">k.als.tro.mja.me.s.21@gmail.com</a>
<a href=""mailto:k.al.stromja.me.s21@gmail.com"">k.al.stromja.me.s21@gmail.com</a>
<a href=""mailto:k.als.tr.o.m.ja.me.s2.1@gmail.com"">k.als.tr.o.m.ja.me.s2.1@gmail.com</a>
<a href=""mailto:ka.l.st.ro.mj.a.me.s.21@gmail.com"">ka.l.st.ro.mj.a.me.s.21@gmail.com</a>
<a href=""mailto:kals.t.ro.m.ja.me.s.2.1@gmail.com"">kals.t.ro.m.ja.me.s.2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.r.om.j.a.mes21@gmail.com"">ka.ls.t.r.om.j.a.mes21@gmail.com</a>
<a href=""mailto:k.alstr.omj.am.es.2.1@gmail.com"">k.alstr.omj.am.es.2.1@gmail.com</a>
<a href=""mailto:k.a.l.s.tr.o.m.jame.s.21@gmail.com"">k.a.l.s.tr.o.m.jame.s.21@gmail.com</a>
<a href=""mailto:k.a.l.s.t.romjam.es21@gmail.com"">k.a.l.s.t.romjam.es21@gmail.com</a>
<a href=""mailto:kalstromja.mes.2.1@gmail.com"">kalstromja.mes.2.1@gmail.com</a>
<a href=""mailto:k.a.lst.r.o.m.jam.e.s2.1@gmail.com"">k.a.lst.r.o.m.jam.e.s2.1@gmail.com</a>
<a href=""mailto:k.a.l.str.omj.ame.s.21@gmail.com"">k.a.l.str.omj.ame.s.21@gmail.com</a>
<a href=""mailto:kalst.r.o.m.j.a.mes.2.1@gmail.com"">kalst.r.o.m.j.a.mes.2.1@gmail.com</a>
<a href=""mailto:k.al.st.r.om.j.am.es.2.1@gmail.com"">k.al.st.r.om.j.am.es.2.1@gmail.com</a>
<a href=""mailto:ka.ls.tromj.ame.s.2.1@gmail.com"">ka.ls.tromj.ame.s.2.1@gmail.com</a>
<a href=""mailto:kal.s.t.r.o.mjames21@gmail.com"">kal.s.t.r.o.mjames21@gmail.com</a>
<a href=""mailto:k.als.tromj.a.m.e.s.21@gmail.com"">k.als.tromj.a.m.e.s.21@gmail.com</a>
<a href=""mailto:ka.l.st.ro.mj.ame.s.21@gmail.com"">ka.l.st.ro.mj.ame.s.21@gmail.com</a>
<a href=""mailto:kal.str.omj.a.me.s.21@gmail.com"">kal.str.omj.a.me.s.21@gmail.com</a>
<a href=""mailto:kal.s.tr.o.m.j.am.e.s21@gmail.com"">kal.s.tr.o.m.j.am.e.s21@gmail.com</a>
<a href=""mailto:kalstr.o.mja.mes.21@gmail.com"">kalstr.o.mja.mes.21@gmail.com</a>
<a href=""mailto:ka.l.str.o.m.j.a.me.s.2.1@gmail.com"">ka.l.str.o.m.j.a.me.s.2.1@gmail.com</a>
<a href=""mailto:ka.l.s.tro.mj.ame.s2.1@gmail.com"">ka.l.s.tro.mj.ame.s2.1@gmail.com</a>
<a href=""mailto:k.a.lstr.o.m.j.am.es.2.1@gmail.com"">k.a.lstr.o.m.j.am.es.2.1@gmail.com</a>
<a href=""mailto:kalst.romj.am.e.s2.1@gmail.com"">kalst.romj.am.e.s2.1@gmail.com</a>
<a href=""mailto:kal.strom.ja.m.e.s21@gmail.com"">kal.strom.ja.m.e.s21@gmail.com</a>
<a href=""mailto:ka.lstr.o.mj.a.m.es.2.1@gmail.com"">ka.lstr.o.mj.a.m.es.2.1@gmail.com</a>
<a href=""mailto:k.alstro.mj.a.mes.21@gmail.com"">k.alstro.mj.a.mes.21@gmail.com</a>
<a href=""mailto:k.als.tr.o.mjam.e.s2.1@gmail.com"">k.als.tr.o.mjam.e.s2.1@gmail.com</a>
<a href=""mailto:kal.st.ro.m.j.am.es2.1@gmail.com"">kal.st.ro.m.j.am.es2.1@gmail.com</a>
<a href=""mailto:k.alstro.m.j.am.es.2.1@gmail.com"">k.alstro.m.j.am.es.2.1@gmail.com</a>
<a href=""mailto:kalstr.omj.a.m.e.s.21@gmail.com"">kalstr.omj.a.m.e.s.21@gmail.com</a>
<a href=""mailto:kal.str.o.m.j.am.es21@gmail.com"">kal.str.o.m.j.am.es21@gmail.com</a>
<a href=""mailto:kal.s.t.r.o.mj.ame.s21@gmail.com"">kal.s.t.r.o.mj.ame.s21@gmail.com</a>
<a href=""mailto:kal.s.tr.o.m.jam.e.s.2.1@gmail.com"">kal.s.tr.o.m.jam.e.s.2.1@gmail.com</a>
<a href=""mailto:kals.tr.o.m.ja.me.s2.1@gmail.com"">kals.tr.o.m.ja.me.s2.1@gmail.com</a>
<a href=""mailto:kals.tr.o.mja.m.e.s.21@gmail.com"">kals.tr.o.mja.m.e.s.21@gmail.com</a>
<a href=""mailto:k.a.l.stromj.a.m.es.2.1@gmail.com"">k.a.l.stromj.a.m.es.2.1@gmail.com</a>
<a href=""mailto:k.als.t.ro.mj.a.m.es.21@gmail.com"">k.als.t.ro.mj.a.m.es.21@gmail.com</a>
<a href=""mailto:ka.ls.t.rom.j.am.es2.1@gmail.com"">ka.ls.t.rom.j.am.es2.1@gmail.com</a>
<a href=""mailto:k.a.ls.tro.mj.a.mes.21@gmail.com"">k.a.ls.tro.mj.a.mes.21@gmail.com</a>
<a href=""mailto:ka.lstr.om.jame.s.2.1@gmail.com"">ka.lstr.om.jame.s.2.1@gmail.com</a>
<a href=""mailto:kals.t.r.o.m.ja.me.s.2.1@gmail.com"">kals.t.r.o.m.ja.me.s.2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.ro.mja.m.e.s.21@gmail.com"">ka.ls.t.ro.mja.m.e.s.21@gmail.com</a>
<a href=""mailto:kal.str.o.m.jame.s.2.1@gmail.com"">kal.str.o.m.jame.s.2.1@gmail.com</a>
<a href=""mailto:ka.l.st.rom.james21@gmail.com"">ka.l.st.rom.james21@gmail.com</a>
<a href=""mailto:ka.l.s.tr.o.mja.m.es.21@gmail.com"">ka.l.s.tr.o.mja.m.es.21@gmail.com</a>
<a href=""mailto:k.a.l.s.t.romj.a.m.e.s21@gmail.com"">k.a.l.s.t.romj.a.m.e.s21@gmail.com</a>
<a href=""mailto:k.al.strom.james2.1@gmail.com"">k.al.strom.james2.1@gmail.com</a>
<a href=""mailto:kal.stro.m.ja.mes.2.1@gmail.com"">kal.stro.m.ja.mes.2.1@gmail.com</a>
<a href=""mailto:k.a.ls.t.ro.mja.m.es.21@gmail.com"">k.a.ls.t.ro.mja.m.es.21@gmail.com</a>
<a href=""mailto:k.a.l.s.tro.mj.a.m.es2.1@gmail.com"">k.a.l.s.tro.mj.a.m.es2.1@gmail.com</a>
<a href=""mailto:k.a.l.s.tro.mjam.e.s2.1@gmail.com"">k.a.l.s.tro.mjam.e.s2.1@gmail.com</a>
<a href=""mailto:k.a.lstr.omj.a.me.s.2.1@gmail.com"">k.a.lstr.omj.a.me.s.2.1@gmail.com</a>
<a href=""mailto:kalstromja.mes21@gmail.com"">kalstromja.mes21@gmail.com</a>
<a href=""mailto:k.a.ls.tro.mj.am.e.s.2.1@gmail.com"">k.a.ls.tro.mj.am.e.s.2.1@gmail.com</a>
<a href=""mailto:k.al.s.tr.om.ja.m.es.2.1@gmail.com"">k.al.s.tr.om.ja.m.es.2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.ro.mjames.2.1@gmail.com"">ka.ls.t.ro.mjames.2.1@gmail.com</a>
<a href=""mailto:kalstr.om.j.a.mes.2.1@gmail.com"">kalstr.om.j.a.mes.2.1@gmail.com</a>
<a href=""mailto:kal.s.t.ro.mj.a.m.es.21@gmail.com"">kal.s.t.ro.mj.a.m.es.21@gmail.com</a>
<a href=""mailto:ka.ls.tro.mj.ames2.1@gmail.com"">ka.ls.tro.mj.ames2.1@gmail.com</a>
<a href=""mailto:k.a.l.s.t.romj.a.m.e.s.2.1@gmail.com"">k.a.l.s.t.romj.a.m.e.s.2.1@gmail.com</a>
<a href=""mailto:ka.l.st.r.omjames.21@gmail.com"">ka.l.st.r.omjames.21@gmail.com</a>
<a href=""mailto:k.alst.r.omjames21@gmail.com"">k.alst.r.omjames21@gmail.com</a>
<a href=""mailto:kal.st.r.om.ja.m.e.s.21@gmail.com"">kal.st.r.om.ja.m.e.s.21@gmail.com</a>
<a href=""mailto:kals.t.r.o.mj.a.me.s2.1@gmail.com"">kals.t.r.o.mj.a.me.s2.1@gmail.com</a>
<a href=""mailto:k.als.tr.o.mjam.es21@gmail.com"">k.als.tr.o.mjam.es21@gmail.com</a>
<a href=""mailto:ka.ls.t.r.omj.a.mes.2.1@gmail.com"">ka.ls.t.r.omj.a.mes.2.1@gmail.com</a>
<a href=""mailto:kalstr.om.jam.es2.1@gmail.com"">kalstr.om.jam.es2.1@gmail.com</a>
<a href=""mailto:kals.tro.m.j.ames.21@gmail.com"">kals.tro.m.j.ames.21@gmail.com</a>
<a href=""mailto:k.al.s.t.r.o.m.james21@gmail.com"">k.al.s.t.r.o.m.james21@gmail.com</a>
<a href=""mailto:k.a.l.s.t.r.o.mj.am.e.s.2.1@gmail.com"">k.a.l.s.t.r.o.mj.am.e.s.2.1@gmail.com</a>
<a href=""mailto:ka.ls.tr.om.ja.mes.21@gmail.com"">ka.ls.tr.om.ja.mes.21@gmail.com</a>
<a href=""mailto:ka.ls.tr.o.mj.am.es21@gmail.com"">ka.ls.tr.o.mj.am.es21@gmail.com</a>
<a href=""mailto:k.als.tr.omjam.es21@gmail.com"">k.als.tr.omjam.es21@gmail.com</a>
<a href=""mailto:kals.t.r.o.m.ja.m.es.2.1@gmail.com"">kals.t.r.o.m.ja.m.es.2.1@gmail.com</a>
<a href=""mailto:kals.t.r.om.jam.e.s.2.1@gmail.com"">kals.t.r.om.jam.e.s.2.1@gmail.com</a>
<a href=""mailto:ka.lst.r.o.m.j.am.es.21@gmail.com"">ka.lst.r.o.m.j.am.es.21@gmail.com</a>
<a href=""mailto:ka.ls.t.r.o.mj.ames.2.1@gmail.com"">ka.ls.t.r.o.mj.ames.2.1@gmail.com</a>
<a href=""mailto:k.alst.romj.ame.s21@gmail.com"">k.alst.romj.ame.s21@gmail.com</a>
<a href=""mailto:ka.lst.ro.mj.a.me.s.21@gmail.com"">ka.lst.ro.mj.a.me.s.21@gmail.com</a>
<a href=""mailto:k.al.st.ro.m.ja.m.e.s21@gmail.com"">k.al.st.ro.m.ja.m.e.s21@gmail.com</a>
<a href=""mailto:kal.strom.ja.mes.2.1@gmail.com"">kal.strom.ja.mes.2.1@gmail.com</a>
<a href=""mailto:k.al.strom.james21@gmail.com"">k.al.strom.james21@gmail.com</a>
<a href=""mailto:ka.l.str.om.j.a.m.e.s21@gmail.com"">ka.l.str.om.j.a.m.e.s21@gmail.com</a>
<a href=""mailto:ka.l.st.ro.m.j.am.e.s.2.1@gmail.com"">ka.l.st.ro.m.j.am.e.s.2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.r.o.m.j.ames21@gmail.com"">ka.ls.t.r.o.m.j.ames21@gmail.com</a>
<a href=""mailto:kal.s.trom.j.a.me.s.2.1@gmail.com"">kal.s.trom.j.a.me.s.2.1@gmail.com</a>
<a href=""mailto:k.a.ls.tr.o.m.ja.m.e.s2.1@gmail.com"">k.a.ls.tr.o.m.ja.m.e.s2.1@gmail.com</a>
<a href=""mailto:kal.s.t.r.omj.a.m.es2.1@gmail.com"">kal.s.t.r.omj.a.m.es2.1@gmail.com</a>
<a href=""mailto:ka.lstro.m.jam.e.s.21@gmail.com"">ka.lstro.m.jam.e.s.21@gmail.com</a>
<a href=""mailto:kals.tr.om.j.a.m.e.s21@gmail.com"">kals.tr.om.j.a.m.e.s21@gmail.com</a>
<a href=""mailto:k.alst.ro.m.ja.m.es.21@gmail.com"">k.alst.ro.m.ja.m.es.21@gmail.com</a>
<a href=""mailto:k.al.stro.m.j.a.m.es21@gmail.com"">k.al.stro.m.j.a.m.es21@gmail.com</a>
<a href=""mailto:k.als.tr.o.mjam.e.s.21@gmail.com"">k.als.tr.o.mjam.e.s.21@gmail.com</a>
<a href=""mailto:k.alstr.o.m.james.2.1@gmail.com"">k.alstr.o.m.james.2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.ro.mj.am.e.s21@gmail.com"">ka.ls.t.ro.mj.am.e.s21@gmail.com</a>
<a href=""mailto:k.al.st.ro.m.j.a.mes.21@gmail.com"">k.al.st.ro.m.j.a.mes.21@gmail.com</a>
<a href=""mailto:kals.t.romja.me.s2.1@gmail.com"">kals.t.romja.me.s2.1@gmail.com</a>
<a href=""mailto:k.al.st.rom.jam.es21@gmail.com"">k.al.st.rom.jam.es21@gmail.com</a>
<a href=""mailto:ka.ls.t.rom.j.a.me.s21@gmail.com"">ka.ls.t.rom.j.a.me.s21@gmail.com</a>
<a href=""mailto:kal.st.ro.m.ja.mes2.1@gmail.com"">kal.st.ro.m.ja.mes2.1@gmail.com</a>
<a href=""mailto:ka.lst.r.om.ja.me.s.21@gmail.com"">ka.lst.r.om.ja.me.s.21@gmail.com</a>
<a href=""mailto:ka.l.st.romja.me.s2.1@gmail.com"">ka.l.st.romja.me.s2.1@gmail.com</a>
<a href=""mailto:k.als.tr.om.j.am.es.2.1@gmail.com"">k.als.tr.om.j.am.es.2.1@gmail.com</a>
<a href=""mailto:kal.s.tro.mj.ame.s21@gmail.com"">kal.s.tro.mj.ame.s21@gmail.com</a>
<a href=""mailto:k.a.l.st.r.om.james.2.1@gmail.com"">k.a.l.st.r.om.james.2.1@gmail.com</a>
<a href=""mailto:k.alstr.o.mjame.s21@gmail.com"">k.alstr.o.mjame.s21@gmail.com</a>
<a href=""mailto:ka.ls.tr.omj.a.m.es21@gmail.com"">ka.ls.tr.omj.a.m.es21@gmail.com</a>
<a href=""mailto:ka.ls.t.ro.mja.mes2.1@gmail.com"">ka.ls.t.ro.mja.mes2.1@gmail.com</a>
<a href=""mailto:k.a.l.s.tr.omjame.s2.1@gmail.com"">k.a.l.s.tr.omjame.s2.1@gmail.com</a>
<a href=""mailto:k.a.l.s.t.romjames.21@gmail.com"">k.a.l.s.t.romjames.21@gmail.com</a>
<a href=""mailto:k.a.l.st.ro.mja.m.es.2.1@gmail.com"">k.a.l.st.ro.mja.m.es.2.1@gmail.com</a>
<a href=""mailto:k.als.t.r.o.mj.a.m.es.21@gmail.com"">k.als.t.r.o.mj.a.m.es.21@gmail.com</a>
<a href=""mailto:k.al.s.tr.o.m.j.a.m.es.2.1@gmail.com"">k.al.s.tr.o.m.j.a.m.es.2.1@gmail.com</a>
<a href=""mailto:kals.t.ro.m.jam.es.2.1@gmail.com"">kals.t.ro.m.jam.es.2.1@gmail.com</a>
<a href=""mailto:k.als.tro.m.j.ame.s.21@gmail.com"">k.als.tro.m.j.ame.s.21@gmail.com</a>
<a href=""mailto:k.a.ls.tr.omja.m.es2.1@gmail.com"">k.a.ls.tr.omja.m.es2.1@gmail.com</a>
<a href=""mailto:k.als.t.ro.m.ja.m.e.s.2.1@gmail.com"">k.als.t.ro.m.ja.m.e.s.2.1@gmail.com</a>
<a href=""mailto:kalst.romj.ames21@gmail.com"">kalst.romj.ames21@gmail.com</a>
<a href=""mailto:k.a.ls.tr.o.m.ja.m.e.s21@gmail.com"">k.a.ls.tr.o.m.ja.m.e.s21@gmail.com</a>
<a href=""mailto:k.als.tro.m.j.a.m.es21@gmail.com"">k.als.tro.m.j.a.m.es21@gmail.com</a>
<a href=""mailto:k.a.l.s.trom.j.ame.s2.1@gmail.com"">k.a.l.s.trom.j.ame.s2.1@gmail.com</a>
<a href=""mailto:kal.s.tr.o.mja.mes21@gmail.com"">kal.s.tr.o.mja.mes21@gmail.com</a>
<a href=""mailto:k.a.l.st.romjames.21@gmail.com"">k.a.l.st.romjames.21@gmail.com</a>
<a href=""mailto:k.al.str.o.mj.a.m.es.21@gmail.com"">k.al.str.o.mj.a.m.es.21@gmail.com</a>
<a href=""mailto:ka.lstr.o.mjame.s21@gmail.com"">ka.lstr.o.mjame.s21@gmail.com</a>
<a href=""mailto:kals.t.ro.m.j.am.es.2.1@gmail.com"">kals.t.ro.m.j.am.es.2.1@gmail.com</a>
<a href=""mailto:ka.l.st.rom.j.am.es.21@gmail.com"">ka.l.st.rom.j.am.es.21@gmail.com</a>
<a href=""mailto:ka.l.st.romja.m.es2.1@gmail.com"">ka.l.st.romja.m.es2.1@gmail.com</a>
<a href=""mailto:ka.ls.t.rom.jam.e.s2.1@gmail.com"">ka.ls.t.rom.jam.e.s2.1@gmail.com</a>
<a href=""mailto:ka.l.str.omjame.s21@gmail.com"">ka.l.str.omjame.s21@gmail.com</a>
<a href=""mailto:k.a.l.str.omja.mes2.1@gmail.com"">k.a.l.str.omja.mes2.1@gmail.com</a>
<a href=""mailto:kals.t.romj.a.mes.2.1@gmail.com"">kals.t.romj.a.mes.2.1@gmail.com</a>
<a href=""mailto:k.a.lst.ro.mjam.e.s.21@gmail.com"">k.a.lst.ro.mjam.e.s.21@gmail.com</a>
<a href=""mailto:ka.l.str.omj.am.e.s.21@gmail.com"">ka.l.str.omj.am.e.s.21@gmail.com</a>
<a href=""mailto:ka.l.s.tr.om.j.a.m.es2.1@gmail.com"">ka.l.s.tr.om.j.a.m.es2.1@gmail.com</a>
<a href=""mailto:k.a.ls.t.r.o.mj.ame.s2.1@gmail.com"">k.a.ls.t.r.o.mj.ame.s2.1@gmail.com</a>
<a href=""mailto:kal.str.o.mj.ame.s2.1@gmail.com"">kal.str.o.mj.ame.s2.1@gmail.com</a>
<a href=""mailto:k.als.t.r.om.j.am.e.s.2.1@gmail.com"">k.als.t.r.om.j.am.e.s.2.1@gmail.com</a>
<a href=""mailto:k.a.l.st.ro.mjam.es.21@gmail.com"">k.a.l.st.ro.mjam.es.21@gmail.com</a>
<a href=""mailto:kals.t.ro.mj.ame.s21@gmail.com"">kals.t.ro.mj.ame.s21@gmail.com</a>
<a href=""mailto:ka.lstro.m.j.ames.21@gmail.com"">ka.lstro.m.j.ames.21@gmail.com</a>
<a href=""mailto:k.alst.ro.mj.am.es2.1@gmail.com"">k.alst.ro.mj.am.es2.1@gmail.com</a>
<a href=""mailto:k.alstr.omj.a.me.s.21@gmail.com"">k.alstr.omj.a.me.s.21@gmail.com</a>
<a href=""mailto:kal.s.t.ro.m.j.a.m.es.2.1@gmail.com"">kal.s.t.ro.m.j.a.m.es.2.1@gmail.com</a>
<a href=""mailto:k.a.lstr.omjam.es.2.1@gmail.com"">k.a.lstr.omjam.es.2.1@gmail.com</a>
<a href=""mailto:k.a.ls.t.r.om.j.am.es2.1@gmail.com"">k.a.ls.t.r.om.j.am.es2.1@gmail.com</a>
<a href=""mailto:k.al.s.t.r.o.mj.ame.s21@gmail.com"">k.al.s.t.r.o.mj.ame.s21@gmail.com</a>
<a href=""mailto:k.a.l.s.tr.o.m.ja.m.es21@gmail.com"">k.a.l.s.tr.o.m.ja.m.es21@gmail.com</a>
<a href=""mailto:kal.s.tr.o.m.j.am.e.s.21@gmail.com"">kal.s.tr.o.m.j.am.e.s.21@gmail.com</a>
<a href=""mailto:kal.s.tro.mj.a.mes2.1@gmail.com"">kal.s.tro.mj.a.mes2.1@gmail.com</a>
<a href=""mailto:k.alst.r.o.m.j.ame.s2.1@gmail.com"">k.alst.r.o.m.j.ame.s2.1@gmail.com</a>
<a href=""mailto:ka.l.s.tromj.am.e.s2.1@gmail.com"">ka.l.s.tromj.am.e.s2.1@gmail.com</a>
<a href=""mailto:k.alst.r.omjames2.1@gmail.com"">k.alst.r.omjames2.1@gmail.com</a>
<a href=""mailto:ka.l.s.t.rom.james21@gmail.com"">ka.l.s.t.rom.james21@gmail.com</a>
<a href=""mailto:k.alstromj.am.es.2.1@gmail.com"">k.alstromj.am.es.2.1@gmail.com</a>
<a href=""mailto:k.a.l.st.rom.jam.es.2.1@gmail.com"">k.a.l.st.rom.jam.es.2.1@gmail.com</a>
<a href=""mailto:k.a.lstrom.j.am.e.s.21@gmail.com"">k.a.lstrom.j.am.e.s.21@gmail.com</a>
<a href=""mailto:k.a.l.stro.m.ja.m.e.s.2.1@gmail.com"">k.a.l.stro.m.ja.m.e.s.2.1@gmail.com</a>
<a href=""mailto:k.a.lst.ro.m.james2.1@gmail.com"">k.a.lst.ro.m.james2.1@gmail.com</a>
<a href=""mailto:kals.t.ro.mj.am.es.2.1@gmail.com"">kals.t.ro.mj.am.es.2.1@gmail.com</a>
<a href=""mailto:k.a.l.s.t.r.o.m.j.a.m.es.2.1@gmail.com"">k.a.l.s.t.r.o.m.j.a.m.es.2.1@gmail.com</a>
<a href=""mailto:k.alst.rom.jame.s.2.1@gmail.com"">k.alst.rom.jame.s.2.1@gmail.com</a>
<a href=""mailto:k.als.t.r.om.j.ame.s21@gmail.com"">k.als.t.r.om.j.ame.s21@gmail.com</a>
<a href=""mailto:k.al.str.o.mjam.e.s.2.1@gmail.com"">k.al.str.o.mjam.e.s.2.1@gmail.com</a>
<a href=""mailto:ka.lstromj.a.me.s.2.1@gmail.com"">ka.lstromj.a.me.s.2.1@gmail.com</a>
<a href=""mailto:kalst.rom.j.am.e.s.21@gmail.com"">kalst.rom.j.am.e.s.21@gmail.com</a>
<a href=""mailto:office_service1@yahoo.com"">office_service1@yahoo.com</a>
<a href=""mailto:imfiiffoinf@gmail.com"">imfiiffoinf@gmail.com</a>
<a href=""mailto:i.m.fi.i.ff.oinf@gmail.com"">i.m.fi.i.ff.oinf@gmail.com</a>
<a href=""mailto:i.m.f.i.if.f.oin.f@gmail.com"">i.m.f.i.if.f.oin.f@gmail.com</a>
<a href=""mailto:imfiif.f.o.i.nf@gmail.com"">imfiif.f.o.i.nf@gmail.com</a>
<a href=""mailto:i.m.fi.i.f.f.oin.f@gmail.com"">i.m.fi.i.f.f.oin.f@gmail.com</a>
<a href=""mailto:i.mfi.i.f.fo.inf@gmail.com"">i.mfi.i.f.fo.inf@gmail.com</a>
<a href=""mailto:i.m.f.ii.ff.oi.nf@gmail.com"">i.m.f.ii.ff.oi.nf@gmail.com</a>
<a href=""mailto:i.m.f.iiffo.in.f@gmail.com"">i.m.f.iiffo.in.f@gmail.com</a>
<a href=""mailto:im.f.ii.f.f.oinf@gmail.com"">im.f.ii.f.f.oinf@gmail.com</a>
<a href=""mailto:im.f.i.i.ffo.in.f@gmail.com"">im.f.i.i.ffo.in.f@gmail.com</a>
<a href=""mailto:im.f.i.iffoi.nf@gmail.com"">im.f.i.iffoi.nf@gmail.com</a>
<a href=""mailto:i.mf.iif.f.o.inf@gmail.com"">i.mf.iif.f.o.inf@gmail.com</a>
<a href=""mailto:i.mfiif.f.oin.f@gmail.com"">i.mfiif.f.oin.f@gmail.com</a>
<a href=""mailto:im.f.i.iff.oi.nf@gmail.com"">im.f.i.iff.oi.nf@gmail.com</a>
<a href=""mailto:i.m.fii.f.f.o.i.nf@gmail.com"">i.m.fii.f.f.o.i.nf@gmail.com</a>
<a href=""mailto:i.mf.i.if.fo.i.nf@gmail.com"">i.mf.i.if.fo.i.nf@gmail.com</a>
<a href=""mailto:i.m.f.i.i.f.foi.n.f@gmail.com"">i.m.f.i.i.f.foi.n.f@gmail.com</a>
<a href=""mailto:imfii.f.foi.n.f@gmail.com"">imfii.f.foi.n.f@gmail.com</a>
<a href=""mailto:i.mf.i.i.ff.o.inf@gmail.com"">i.mf.i.i.ff.o.inf@gmail.com</a>
<a href=""mailto:imfiiff.oin.f@gmail.com"">imfiiff.oin.f@gmail.com</a>
<a href=""mailto:imf.iif.fo.i.nf@gmail.com"">imf.iif.fo.i.nf@gmail.com</a>
<a href=""mailto:im.f.iif.fo.inf@gmail.com"">im.f.iif.fo.inf@gmail.com</a>
<a href=""mailto:i.m.f.ii.f.f.oi.n.f@gmail.com"">i.m.f.ii.f.f.oi.n.f@gmail.com</a>
<a href=""mailto:imfii.ffoi.n.f@gmail.com"">imfii.ffoi.n.f@gmail.com</a>
<a href=""mailto:im.fii.ffo.i.nf@gmail.com"">im.fii.ffo.i.nf@gmail.com</a>
<a href=""mailto:imfi.iffo.i.n.f@gmail.com"">imfi.iffo.i.n.f@gmail.com</a>
<a href=""mailto:imf.ii.ff.oi.n.f@gmail.com"">imf.ii.ff.oi.n.f@gmail.com</a>
<a href=""mailto:imfii.f.f.oinf@gmail.com"">imfii.f.f.oinf@gmail.com</a>
<a href=""mailto:i.m.fi.iff.oi.n.f@gmail.com"">i.m.fi.iff.oi.n.f@gmail.com</a>
<a href=""mailto:i.m.f.iif.foinf@gmail.com"">i.m.f.iif.foinf@gmail.com</a>
<a href=""mailto:i.mfii.f.fo.i.nf@gmail.com"">i.mfii.f.fo.i.nf@gmail.com</a>
<a href=""mailto:i.mf.i.iffo.inf@gmail.com"">i.mf.i.iffo.inf@gmail.com</a>
<a href=""mailto:i.m.fii.f.fo.i.nf@gmail.com"">i.m.fii.f.fo.i.nf@gmail.com</a>
<a href=""mailto:imf.ii.f.fo.i.n.f@gmail.com"">imf.ii.f.fo.i.n.f@gmail.com</a>
<a href=""mailto:i.mfii.f.f.o.in.f@gmail.com"">i.mfii.f.f.o.in.f@gmail.com</a>
<a href=""mailto:i.mfiiff.oi.nf@gmail.com"">i.mfiiff.oi.nf@gmail.com</a>
<a href=""mailto:imfiif.f.oi.n.f@gmail.com"">imfiif.f.oi.n.f@gmail.com</a>
<a href=""mailto:imf.i.iffoi.nf@gmail.com"">imf.i.iffoi.nf@gmail.com</a>
<a href=""mailto:imf.ii.f.f.oinf@gmail.com"">imf.ii.f.f.oinf@gmail.com</a>
<a href=""mailto:i.mf.iiffoin.f@gmail.com"">i.mf.iiffoin.f@gmail.com</a>
<a href=""mailto:i.mf.iif.fo.i.nf@gmail.com"">i.mf.iif.fo.i.nf@gmail.com</a>
<a href=""mailto:im.fi.iff.oi.n.f@gmail.com"">im.fi.iff.oi.n.f@gmail.com</a>
<a href=""mailto:im.fii.ff.o.i.n.f@gmail.com"">im.fii.ff.o.i.n.f@gmail.com</a>
<a href=""mailto:imfi.i.ffoin.f@gmail.com"">imfi.i.ffoin.f@gmail.com</a>
<a href=""mailto:imfii.ffoinf@gmail.com"">imfii.ffoinf@gmail.com</a>
<a href=""mailto:i.m.f.i.if.f.oinf@gmail.com"">i.m.f.i.if.f.oinf@gmail.com</a>
<a href=""mailto:imf.i.iffoi.n.f@gmail.com"">imf.i.iffoi.n.f@gmail.com</a>
<a href=""mailto:i.mfiiff.o.i.n.f@gmail.com"">i.mfiiff.o.i.n.f@gmail.com</a>
<a href=""mailto:imf.iiff.o.i.n.f@gmail.com"">imf.iiff.o.i.n.f@gmail.com</a>
<a href=""mailto:i.mfiiffoin.f@gmail.com"">i.mfiiffoin.f@gmail.com</a>
<a href=""mailto:i.m.f.i.i.f.f.o.i.nf@gmail.com"">i.m.f.i.i.f.f.o.i.nf@gmail.com</a>
<a href=""mailto:i.mfi.i.f.f.o.i.nf@gmail.com"">i.mfi.i.f.f.o.i.nf@gmail.com</a>
<a href=""mailto:im.fii.f.f.o.i.nf@gmail.com"">im.fii.f.f.o.i.nf@gmail.com</a>
<a href=""mailto:i.m.fiif.f.o.inf@gmail.com"">i.m.fiif.f.o.inf@gmail.com</a>
<a href=""mailto:imfi.i.f.f.oin.f@gmail.com"">imfi.i.f.f.oin.f@gmail.com</a>
<a href=""mailto:i.mfi.iffo.inf@gmail.com"">i.mfi.iffo.inf@gmail.com</a>
<a href=""mailto:i.m.fi.iff.o.inf@gmail.com"">i.m.fi.iff.o.inf@gmail.com</a>
<a href=""mailto:i.mf.ii.f.f.o.inf@gmail.com"">i.mf.ii.f.f.o.inf@gmail.com</a>
<a href=""mailto:i.mfiiff.oin.f@gmail.com"">i.mfiiff.oin.f@gmail.com</a>
<a href=""mailto:i.mf.i.i.f.fo.i.nf@gmail.com"">i.mf.i.i.f.fo.i.nf@gmail.com</a>
<a href=""mailto:imf.i.iff.oi.nf@gmail.com"">imf.i.iff.oi.nf@gmail.com</a>
<a href=""mailto:i.mfi.if.foi.nf@gmail.com"">i.mfi.if.foi.nf@gmail.com</a>
<a href=""mailto:im.fii.ff.o.inf@gmail.com"">im.fii.ff.o.inf@gmail.com</a>
<a href=""mailto:i.m.f.i.i.ffo.i.nf@gmail.com"">i.m.f.i.i.ffo.i.nf@gmail.com</a>
<a href=""mailto:imf.i.if.f.oin.f@gmail.com"">imf.i.if.f.oin.f@gmail.com</a>
<a href=""mailto:i.mf.iiffoi.nf@gmail.com"">i.mf.iiffoi.nf@gmail.com</a>
<a href=""mailto:imfiif.foi.nf@gmail.com"">imfiif.foi.nf@gmail.com</a>
<a href=""mailto:i.mfi.i.f.fo.i.nf@gmail.com"">i.mfi.i.f.fo.i.nf@gmail.com</a>
<a href=""mailto:im.f.iif.fo.i.n.f@gmail.com"">im.f.iif.fo.i.n.f@gmail.com</a>
<a href=""mailto:imfiiff.oinf@gmail.com"">imfiiff.oinf@gmail.com</a>
<a href=""mailto:i.mfi.iff.o.i.nf@gmail.com"">i.mfi.iff.o.i.nf@gmail.com</a>
<a href=""mailto:i.mfii.ff.oi.n.f@gmail.com"">i.mfii.ff.oi.n.f@gmail.com</a>
<a href=""mailto:imf.i.iff.oinf@gmail.com"">imf.i.iff.oinf@gmail.com</a>
<a href=""mailto:imfi.i.ffo.i.nf@gmail.com"">imfi.i.ffo.i.nf@gmail.com</a>
<a href=""mailto:i.m.fiif.fo.inf@gmail.com"">i.m.fiif.fo.inf@gmail.com</a>
<a href=""mailto:im.f.i.iffo.i.nf@gmail.com"">im.f.i.iffo.i.nf@gmail.com</a>
<a href=""mailto:imf.i.i.ff.oi.n.f@gmail.com"">imf.i.i.ff.oi.n.f@gmail.com</a>
<a href=""mailto:i.m.fiiff.o.inf@gmail.com"">i.m.fiiff.o.inf@gmail.com</a>
<a href=""mailto:im.fii.ff.oin.f@gmail.com"">im.fii.ff.oin.f@gmail.com</a>
<a href=""mailto:i.m.f.i.i.ff.o.i.nf@gmail.com"">i.m.f.i.i.ff.o.i.nf@gmail.com</a>
<a href=""mailto:i.mfi.i.f.f.o.in.f@gmail.com"">i.mfi.i.f.f.o.in.f@gmail.com</a>
<a href=""mailto:imf.i.iff.o.i.n.f@gmail.com"">imf.i.iff.o.i.n.f@gmail.com</a>
<a href=""mailto:i.m.fi.i.f.fo.in.f@gmail.com"">i.m.fi.i.f.fo.in.f@gmail.com</a>
<a href=""mailto:i.mf.i.if.f.oinf@gmail.com"">i.mf.i.if.f.oinf@gmail.com</a>
<a href=""mailto:im.fi.i.ff.o.in.f@gmail.com"">im.fi.i.ff.o.in.f@gmail.com</a>
<a href=""mailto:i.mfii.f.f.oinf@gmail.com"">i.mfii.f.f.oinf@gmail.com</a>
<a href=""mailto:i.mf.ii.ff.o.inf@gmail.com"">i.mf.ii.ff.o.inf@gmail.com</a>
<a href=""mailto:i.m.f.i.i.ff.oi.n.f@gmail.com"">i.m.f.i.i.ff.oi.n.f@gmail.com</a>
<a href=""mailto:i.m.fiiffo.i.nf@gmail.com"">i.m.fiiffo.i.nf@gmail.com</a>
<a href=""mailto:i.mf.i.if.foi.nf@gmail.com"">i.mf.i.if.foi.nf@gmail.com</a>
<a href=""mailto:imfii.ffoin.f@gmail.com"">imfii.ffoin.f@gmail.com</a>
<a href=""mailto:im.fiiff.oi.nf@gmail.com"">im.fiiff.oi.nf@gmail.com</a>
<a href=""mailto:imfiif.fo.inf@gmail.com"">imfiif.fo.inf@gmail.com</a>
<a href=""mailto:i.m.fi.i.f.foi.nf@gmail.com"">i.m.fi.i.f.foi.nf@gmail.com</a>
<a href=""mailto:i.m.fi.if.f.oinf@gmail.com"">i.m.fi.if.f.oinf@gmail.com</a>
<a href=""mailto:i.m.f.iif.f.oinf@gmail.com"">i.m.f.iif.f.oinf@gmail.com</a>
<a href=""mailto:imf.iiffo.inf@gmail.com"">imf.iiffo.inf@gmail.com</a>
<a href=""mailto:im.f.i.i.f.f.oinf@gmail.com"">im.f.i.i.f.f.oinf@gmail.com</a>
<a href=""mailto:im.fii.f.f.o.inf@gmail.com"">im.fii.f.f.o.inf@gmail.com</a>
<a href=""mailto:i.m.f.ii.ffo.inf@gmail.com"">i.m.f.ii.ffo.inf@gmail.com</a>
<a href=""mailto:im.fi.i.ff.oi.nf@gmail.com"">im.fi.i.ff.oi.nf@gmail.com</a>
<a href=""mailto:im.f.i.i.ff.o.i.nf@gmail.com"">im.f.i.i.ff.o.i.nf@gmail.com</a>
<a href=""mailto:imf.i.i.f.foin.f@gmail.com"">imf.i.i.f.foin.f@gmail.com</a>
<a href=""mailto:im.f.i.i.f.f.o.in.f@gmail.com"">im.f.i.i.f.f.o.in.f@gmail.com</a>
<a href=""mailto:i.m.f.i.iffoin.f@gmail.com"">i.m.f.i.iffoin.f@gmail.com</a>
<a href=""mailto:imfii.ff.o.i.nf@gmail.com"">imfii.ff.o.i.nf@gmail.com</a>
<a href=""mailto:imfi.if.foinf@gmail.com"">imfi.if.foinf@gmail.com</a>
<a href=""mailto:i.mf.iiffo.i.nf@gmail.com"">i.mf.iiffo.i.nf@gmail.com</a>
<a href=""mailto:i.mfii.ffo.inf@gmail.com"">i.mfii.ffo.inf@gmail.com</a>
<a href=""mailto:i.mfii.ffoinf@gmail.com"">i.mfii.ffoinf@gmail.com</a>
<a href=""mailto:imfii.ffoi.nf@gmail.com"">imfii.ffoi.nf@gmail.com</a>
<a href=""mailto:i.m.f.iiffo.i.nf@gmail.com"">i.m.f.iiffo.i.nf@gmail.com</a>
<a href=""mailto:i.m.fi.iffo.i.n.f@gmail.com"">i.m.fi.iffo.i.n.f@gmail.com</a>
<a href=""mailto:i.m.fiif.f.oi.nf@gmail.com"">i.m.fiif.f.oi.nf@gmail.com</a>
<a href=""mailto:im.f.i.i.f.fo.i.nf@gmail.com"">im.f.i.i.f.fo.i.nf@gmail.com</a>
<a href=""mailto:i.m.f.iiffoi.nf@gmail.com"">i.m.f.iiffoi.nf@gmail.com</a>
<a href=""mailto:i.mf.iiff.o.in.f@gmail.com"">i.mf.iiff.o.in.f@gmail.com</a>
<a href=""mailto:im.f.iif.f.oin.f@gmail.com"">im.f.iif.f.oin.f@gmail.com</a>
<a href=""mailto:i.mfii.ffo.i.n.f@gmail.com"">i.mfii.ffo.i.n.f@gmail.com</a>
<a href=""mailto:im.fii.ffo.i.n.f@gmail.com"">im.fii.ffo.i.n.f@gmail.com</a>
<a href=""mailto:im.f.ii.ffo.i.nf@gmail.com"">im.f.ii.ffo.i.nf@gmail.com</a>
<a href=""mailto:imf.i.i.ff.o.inf@gmail.com"">imf.i.i.ff.o.inf@gmail.com</a>
<a href=""mailto:imf.iif.foin.f@gmail.com"">imf.iif.foin.f@gmail.com</a>
<a href=""mailto:im.fi.i.f.foi.nf@gmail.com"">im.fi.i.f.foi.nf@gmail.com</a>
<a href=""mailto:im.fii.f.foi.n.f@gmail.com"">im.fii.f.foi.n.f@gmail.com</a>
<a href=""mailto:im.fii.f.fo.i.nf@gmail.com"">im.fii.f.fo.i.nf@gmail.com</a>
<a href=""mailto:i.m.fiiffo.in.f@gmail.com"">i.m.fiiffo.in.f@gmail.com</a>
<a href=""mailto:im.f.iiffo.in.f@gmail.com"">im.f.iiffo.in.f@gmail.com</a>
<a href=""mailto:i.mf.iiffo.in.f@gmail.com"">i.mf.iiffo.in.f@gmail.com</a>
<a href=""mailto:i.mfi.i.ffo.in.f@gmail.com"">i.mfi.i.ffo.in.f@gmail.com</a>
<a href=""mailto:imfii.f.foin.f@gmail.com"">imfii.f.foin.f@gmail.com</a>
<a href=""mailto:i.m.f.iif.f.o.in.f@gmail.com"">i.m.f.iif.f.o.in.f@gmail.com</a>
<a href=""mailto:i.mfiiff.oinf@gmail.com"">i.mfiiff.oinf@gmail.com</a>
<a href=""mailto:i.m.f.i.i.ffo.in.f@gmail.com"">i.m.f.i.i.ffo.in.f@gmail.com</a>
<a href=""mailto:i.m.f.ii.ffoi.n.f@gmail.com"">i.m.f.ii.ffoi.n.f@gmail.com</a>
<a href=""mailto:i.mfii.f.foi.nf@gmail.com"">i.mfii.f.foi.nf@gmail.com</a>
<a href=""mailto:i.mfiif.fo.in.f@gmail.com"">i.mfiif.fo.in.f@gmail.com</a>
<a href=""mailto:i.m.f.iiffo.inf@gmail.com"">i.m.f.iiffo.inf@gmail.com</a>
<a href=""mailto:im.fiiffoi.nf@gmail.com"">im.fiiffoi.nf@gmail.com</a>
<a href=""mailto:i.m.f.i.i.f.f.oin.f@gmail.com"">i.m.f.i.i.f.f.oin.f@gmail.com</a>
<a href=""mailto:i.mf.iiffo.inf@gmail.com"">i.mf.iiffo.inf@gmail.com</a>
<a href=""mailto:i.m.fi.iffo.i.nf@gmail.com"">i.m.fi.iffo.i.nf@gmail.com</a>
<a href=""mailto:i.mf.ii.ffo.in.f@gmail.com"">i.mf.ii.ffo.in.f@gmail.com</a>
<a href=""mailto:i.m.fii.ffoi.nf@gmail.com"">i.m.fii.ffoi.nf@gmail.com</a>
<a href=""mailto:i.mfi.i.ffo.i.n.f@gmail.com"">i.mfi.i.ffo.i.n.f@gmail.com</a>
<a href=""mailto:imfi.i.ffo.i.n.f@gmail.com"">imfi.i.ffo.i.n.f@gmail.com</a>
<a href=""mailto:i.mf.i.iff.o.i.n.f@gmail.com"">i.mf.i.iff.o.i.n.f@gmail.com</a>
<a href=""mailto:im.fi.iff.o.inf@gmail.com"">im.fi.iff.o.inf@gmail.com</a>
<a href=""mailto:i.m.fii.ffoinf@gmail.com"">i.m.fii.ffoinf@gmail.com</a>
<a href=""mailto:im.f.iif.foinf@gmail.com"">im.f.iif.foinf@gmail.com</a>
<a href=""mailto:im.f.i.if.f.oinf@gmail.com"">im.f.i.if.f.oinf@gmail.com</a>
<a href=""mailto:i.m.f.ii.ff.o.i.n.f@gmail.com"">i.m.f.ii.ff.o.i.n.f@gmail.com</a>
<a href=""mailto:i.m.f.ii.f.f.o.i.n.f@gmail.com"">i.m.f.ii.f.f.o.i.n.f@gmail.com</a>
<a href=""mailto:imfi.iffoinf@gmail.com"">imfi.iffoinf@gmail.com</a>
<a href=""mailto:i.m.f.i.i.ff.o.in.f@gmail.com"">i.m.f.i.i.ff.o.in.f@gmail.com</a>
<a href=""mailto:im.f.iiffo.i.nf@gmail.com"">im.f.iiffo.i.nf@gmail.com</a>
<a href=""mailto:i.m.fi.i.f.f.o.i.nf@gmail.com"">i.m.fi.i.f.f.o.i.nf@gmail.com</a>
<a href=""mailto:i.mf.i.i.f.f.o.inf@gmail.com"">i.mf.i.i.f.f.o.inf@gmail.com</a>
<a href=""mailto:im.f.i.if.f.o.i.nf@gmail.com"">im.f.i.if.f.o.i.nf@gmail.com</a>
<a href=""mailto:i.m.fi.i.f.foin.f@gmail.com"">i.m.fi.i.f.foin.f@gmail.com</a>
<a href=""mailto:i.mf.i.i.f.foinf@gmail.com"">i.mf.i.i.f.foinf@gmail.com</a>
<a href=""mailto:i.m.fii.f.f.oi.nf@gmail.com"">i.m.fii.f.f.oi.nf@gmail.com</a>
<a href=""mailto:i.mfi.i.f.f.o.i.n.f@gmail.com"">i.mfi.i.f.f.o.i.n.f@gmail.com</a>
<a href=""mailto:im.f.i.i.ff.oinf@gmail.com"">im.f.i.i.ff.oinf@gmail.com</a>
<a href=""mailto:im.f.ii.ff.oi.nf@gmail.com"">im.f.ii.ff.oi.nf@gmail.com</a>
<a href=""mailto:imf.i.if.f.o.i.nf@gmail.com"">imf.i.if.f.o.i.nf@gmail.com</a>
<a href=""mailto:im.f.i.i.f.f.o.inf@gmail.com"">im.f.i.i.f.f.o.inf@gmail.com</a>
<a href=""mailto:i.mfi.i.ff.o.in.f@gmail.com"">i.mfi.i.ff.o.in.f@gmail.com</a>
<a href=""mailto:i.m.f.i.iffo.i.nf@gmail.com"">i.m.f.i.iffo.i.nf@gmail.com</a>
<a href=""mailto:im.f.i.i.ff.o.i.n.f@gmail.com"">im.f.i.i.ff.o.i.n.f@gmail.com</a>
<a href=""mailto:i.mfiif.f.o.i.n.f@gmail.com"">i.mfiif.f.o.i.n.f@gmail.com</a>
<a href=""mailto:im.fiif.foin.f@gmail.com"">im.fiif.foin.f@gmail.com</a>
<a href=""mailto:imf.i.i.ff.o.i.nf@gmail.com"">imf.i.i.ff.o.i.nf@gmail.com</a>
<a href=""mailto:imf.i.i.f.f.o.i.nf@gmail.com"">imf.i.i.f.f.o.i.nf@gmail.com</a>
<a href=""mailto:imfi.i.f.foi.nf@gmail.com"">imfi.i.f.foi.nf@gmail.com</a>
<a href=""mailto:i.mf.i.iffo.i.n.f@gmail.com"">i.mf.i.iffo.i.n.f@gmail.com</a>
<a href=""mailto:im.fi.i.ffoin.f@gmail.com"">im.fi.i.ffoin.f@gmail.com</a>
<a href=""mailto:i.mfi.iffoi.nf@gmail.com"">i.mfi.iffoi.nf@gmail.com</a>
<a href=""mailto:imfiiffo.i.nf@gmail.com"">imfiiffo.i.nf@gmail.com</a>
<a href=""mailto:imfi.i.f.f.o.i.nf@gmail.com"">imfi.i.f.f.o.i.nf@gmail.com</a>
<a href=""mailto:i.m.fiiffoi.n.f@gmail.com"">i.m.fiiffoi.n.f@gmail.com</a>
<a href=""mailto:i.m.fi.iff.o.i.n.f@gmail.com"">i.m.fi.iff.o.i.n.f@gmail.com</a>
<a href=""mailto:imf.i.i.ffo.inf@gmail.com"">imf.i.i.ffo.inf@gmail.com</a>
<a href=""mailto:i.m.f.ii.ffoinf@gmail.com"">i.m.f.ii.ffoinf@gmail.com</a>
<a href=""mailto:im.fi.if.f.oinf@gmail.com"">im.fi.if.f.oinf@gmail.com</a>
<a href=""mailto:im.fii.ffoin.f@gmail.com"">im.fii.ffoin.f@gmail.com</a>
<a href=""mailto:i.m.fi.i.ffo.in.f@gmail.com"">i.m.fi.i.ffo.in.f@gmail.com</a>
<a href=""mailto:imfii.ffo.i.n.f@gmail.com"">imfii.ffo.i.n.f@gmail.com</a>
<a href=""mailto:imf.iiffo.i.n.f@gmail.com"">imf.iiffo.i.n.f@gmail.com</a>
<a href=""mailto:i.mf.i.if.f.o.inf@gmail.com"">i.mf.i.if.f.o.inf@gmail.com</a>
<a href=""mailto:i.m.f.iif.f.oi.n.f@gmail.com"">i.m.f.iif.f.oi.n.f@gmail.com</a>
<a href=""mailto:im.f.ii.ffoi.nf@gmail.com"">im.f.ii.ffoi.nf@gmail.com</a>
<a href=""mailto:i.m.fi.i.f.f.oi.n.f@gmail.com"">i.m.fi.i.f.f.oi.n.f@gmail.com</a>
<a href=""mailto:imfiiffoinf@gmail.com"">imfiiffoinf@gmail.com</a>
<a href=""mailto:i.mfi.if.f.o.in.f@gmail.com"">i.mfi.if.f.o.in.f@gmail.com</a>
<a href=""mailto:im.f.iiff.o.i.n.f@gmail.com"">im.f.iiff.o.i.n.f@gmail.com</a>
<a href=""mailto:i.mfi.i.ff.o.i.n.f@gmail.com"">i.mfi.i.ff.o.i.n.f@gmail.com</a>
<a href=""mailto:imf.i.if.fo.inf@gmail.com"">imf.i.if.fo.inf@gmail.com</a>
<a href=""mailto:i.mfii.ffo.i.nf@gmail.com"">i.mfii.ffo.i.nf@gmail.com</a>
<a href=""mailto:i.mf.ii.ffo.inf@gmail.com"">i.mf.ii.ffo.inf@gmail.com</a>
<a href=""mailto:i.mf.ii.ffo.i.nf@gmail.com"">i.mf.ii.ffo.i.nf@gmail.com</a>
<a href=""mailto:file85050@gmail.com"">file85050@gmail.com</a>
<a href=""mailto:f.ile85.05.0@gmail.com"">f.ile85.05.0@gmail.com</a>
<a href=""mailto:fi.l.e85050@gmail.com"">fi.l.e85050@gmail.com</a>
<a href=""mailto:f.ile8.5.05.0@gmail.com"">f.ile8.5.05.0@gmail.com</a>
<a href=""mailto:f.il.e.8.5.05.0@gmail.com"">f.il.e.8.5.05.0@gmail.com</a>
<a href=""mailto:f.il.e.8.5050@gmail.com"">f.il.e.8.5050@gmail.com</a>
<a href=""mailto:fi.l.e.8.5.05.0@gmail.com"">fi.l.e.8.5.05.0@gmail.com</a>
<a href=""mailto:file.85.0.50@gmail.com"">file.85.0.50@gmail.com</a>
<a href=""mailto:f.i.le.85.0.50@gmail.com"">f.i.le.85.0.50@gmail.com</a>
<a href=""mailto:f.il.e.8505.0@gmail.com"">f.il.e.8505.0@gmail.com</a>
<a href=""mailto:fil.e.8.5.0.50@gmail.com"">fil.e.8.5.0.50@gmail.com</a>
<a href=""mailto:fi.le8.5.050@gmail.com"">fi.le8.5.050@gmail.com</a>
<a href=""mailto:file8.5.0.5.0@gmail.com"">file8.5.0.5.0@gmail.com</a>
<a href=""mailto:file.8.50.50@gmail.com"">file.8.50.50@gmail.com</a>
<a href=""mailto:fi.le8.5.0.5.0@gmail.com"">fi.le8.5.0.5.0@gmail.com</a>
<a href=""mailto:f.i.le850.50@gmail.com"">f.i.le850.50@gmail.com</a>
<a href=""mailto:f.il.e85.0.5.0@gmail.com"">f.il.e85.0.5.0@gmail.com</a>
<a href=""mailto:fil.e85.050@gmail.com"">fil.e85.050@gmail.com</a>
<a href=""mailto:file85.0.50@gmail.com"">file85.0.50@gmail.com</a>
<a href=""mailto:fi.l.e85.050@gmail.com"">fi.l.e85.050@gmail.com</a>
<a href=""mailto:f.ile.85.05.0@gmail.com"">f.ile.85.05.0@gmail.com</a>
<a href=""mailto:fil.e.85050@gmail.com"">fil.e.85050@gmail.com</a>
<a href=""mailto:f.i.le.850.50@gmail.com"">f.i.le.850.50@gmail.com</a>
<a href=""mailto:f.ile8.5.050@gmail.com"">f.ile8.5.050@gmail.com</a>
<a href=""mailto:fi.le8.5.05.0@gmail.com"">fi.le8.5.05.0@gmail.com</a>
<a href=""mailto:f.i.l.e.8.505.0@gmail.com"">f.i.l.e.8.505.0@gmail.com</a>
<a href=""mailto:f.i.le8505.0@gmail.com"">f.i.le8505.0@gmail.com</a>
<a href=""mailto:f.ile85050@gmail.com"">f.ile85050@gmail.com</a>
<a href=""mailto:f.i.l.e.8.5.0.50@gmail.com"">f.i.l.e.8.5.0.50@gmail.com</a>
<a href=""mailto:fi.le.85050@gmail.com"">fi.le.85050@gmail.com</a>
<a href=""mailto:f.il.e85.05.0@gmail.com"">f.il.e85.05.0@gmail.com</a>
<a href=""mailto:fi.le8.50.5.0@gmail.com"">fi.le8.50.5.0@gmail.com</a>
<a href=""mailto:f.ile.8.5.050@gmail.com"">f.ile.8.5.050@gmail.com</a>
<a href=""mailto:fi.le8.50.50@gmail.com"">fi.le8.50.50@gmail.com</a>
<a href=""mailto:fil.e85.0.50@gmail.com"">fil.e85.0.50@gmail.com</a>
<a href=""mailto:file850.5.0@gmail.com"">file850.5.0@gmail.com</a>
<a href=""mailto:fil.e8.5.05.0@gmail.com"">fil.e8.5.05.0@gmail.com</a>
<a href=""mailto:f.i.l.e8.5.050@gmail.com"">f.i.l.e8.5.050@gmail.com</a>
<a href=""mailto:f.i.le85050@gmail.com"">f.i.le85050@gmail.com</a>
<a href=""mailto:f.i.l.e8.50.5.0@gmail.com"">f.i.l.e8.50.5.0@gmail.com</a>
<a href=""mailto:fi.l.e850.5.0@gmail.com"">fi.l.e850.5.0@gmail.com</a>
<a href=""mailto:f.i.l.e85.0.5.0@gmail.com"">f.i.l.e85.0.5.0@gmail.com</a>
<a href=""mailto:f.i.l.e85.0.50@gmail.com"">f.i.l.e85.0.50@gmail.com</a>
<a href=""mailto:file.8.50.5.0@gmail.com"">file.8.50.5.0@gmail.com</a>
<a href=""mailto:f.il.e8.5050@gmail.com"">f.il.e8.5050@gmail.com</a>
<a href=""mailto:file850.50@gmail.com"">file850.50@gmail.com</a>
<a href=""mailto:file.850.5.0@gmail.com"">file.850.5.0@gmail.com</a>
<a href=""mailto:file.8.5050@gmail.com"">file.8.5050@gmail.com</a>
<a href=""mailto:fil.e850.5.0@gmail.com"">fil.e850.5.0@gmail.com</a>
<a href=""mailto:f.il.e8.5.0.5.0@gmail.com"">f.il.e8.5.0.5.0@gmail.com</a>
<a href=""mailto:fi.l.e.85.050@gmail.com"">fi.l.e.85.050@gmail.com</a>
<a href=""mailto:file.85.0.5.0@gmail.com"">file.85.0.5.0@gmail.com</a>
<a href=""mailto:fi.le8.5.0.50@gmail.com"">fi.le8.5.0.50@gmail.com</a>
<a href=""mailto:file.8.5.050@gmail.com"">file.8.5.050@gmail.com</a>
<a href=""mailto:fil.e8.5.0.50@gmail.com"">fil.e8.5.0.50@gmail.com</a>
<a href=""mailto:fi.l.e850.50@gmail.com"">fi.l.e850.50@gmail.com</a>
<a href=""mailto:f.ile8.5.0.50@gmail.com"">f.ile8.5.0.50@gmail.com</a>
<a href=""mailto:fi.le.850.50@gmail.com"">fi.le.850.50@gmail.com</a>
<a href=""mailto:f.i.le.8.5.0.5.0@gmail.com"">f.i.le.8.5.0.5.0@gmail.com</a>
<a href=""mailto:fi.l.e.8.50.5.0@gmail.com"">fi.l.e.8.50.5.0@gmail.com</a>
<a href=""mailto:file.8505.0@gmail.com"">file.8505.0@gmail.com</a>
<a href=""mailto:file8.5050@gmail.com"">file8.5050@gmail.com</a>
<a href=""mailto:f.i.le85.05.0@gmail.com"">f.i.le85.05.0@gmail.com</a>
<a href=""mailto:f.i.l.e85050@gmail.com"">f.i.l.e85050@gmail.com</a>
<a href=""mailto:fi.le.8505.0@gmail.com"">fi.le.8505.0@gmail.com</a>
<a href=""mailto:fil.e.85.0.5.0@gmail.com"">fil.e.85.0.5.0@gmail.com</a>
<a href=""mailto:f.i.l.e8505.0@gmail.com"">f.i.l.e8505.0@gmail.com</a>
<a href=""mailto:fi.le.8.5.050@gmail.com"">fi.le.8.5.050@gmail.com</a>
<a href=""mailto:f.i.le85.0.5.0@gmail.com"">f.i.le85.0.5.0@gmail.com</a>
<a href=""mailto:fi.le.8.5.05.0@gmail.com"">fi.le.8.5.05.0@gmail.com</a>
<a href=""mailto:file8.5.050@gmail.com"">file8.5.050@gmail.com</a>
<a href=""mailto:f.ile.8.5050@gmail.com"">f.ile.8.5050@gmail.com</a>
<a href=""mailto:fil.e8.5.0.5.0@gmail.com"">fil.e8.5.0.5.0@gmail.com</a>
<a href=""mailto:fil.e850.50@gmail.com"">fil.e850.50@gmail.com</a>
<a href=""mailto:f.ile.8505.0@gmail.com"">f.ile.8505.0@gmail.com</a>
<a href=""mailto:fi.l.e.8.50.50@gmail.com"">fi.l.e.8.50.50@gmail.com</a>
<a href=""mailto:f.i.l.e.85.05.0@gmail.com"">f.i.l.e.85.05.0@gmail.com</a>
<a href=""mailto:fi.le.8.5050@gmail.com"">fi.le.8.5050@gmail.com</a>
<a href=""mailto:f.i.l.e.850.5.0@gmail.com"">f.i.l.e.850.5.0@gmail.com</a>
<a href=""mailto:fil.e8505.0@gmail.com"">fil.e8505.0@gmail.com</a>
<a href=""mailto:f.i.le8.50.50@gmail.com"">f.i.le8.50.50@gmail.com</a>
<a href=""mailto:f.il.e8.50.50@gmail.com"">f.il.e8.50.50@gmail.com</a>
<a href=""mailto:file.85.05.0@gmail.com"">file.85.05.0@gmail.com</a>
<a href=""mailto:f.i.l.e85.050@gmail.com"">f.i.l.e85.050@gmail.com</a>
<a href=""mailto:fil.e.8.50.50@gmail.com"">fil.e.8.50.50@gmail.com</a>
<a href=""mailto:f.il.e.85.050@gmail.com"">f.il.e.85.050@gmail.com</a>
<a href=""mailto:f.il.e.8.5.0.50@gmail.com"">f.il.e.8.5.0.50@gmail.com</a>
<a href=""mailto:f.ile.85050@gmail.com"">f.ile.85050@gmail.com</a>
<a href=""mailto:f.ile.85.0.5.0@gmail.com"">f.ile.85.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e.8.5.0.5.0@gmail.com"">f.il.e.8.5.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e.85050@gmail.com"">f.il.e.85050@gmail.com</a>
<a href=""mailto:f.i.le.8.5.0.50@gmail.com"">f.i.le.8.5.0.50@gmail.com</a>
<a href=""mailto:fil.e85.0.5.0@gmail.com"">fil.e85.0.5.0@gmail.com</a>
<a href=""mailto:f.i.l.e.85.0.50@gmail.com"">f.i.l.e.85.0.50@gmail.com</a>
<a href=""mailto:f.il.e8.50.5.0@gmail.com"">f.il.e8.50.5.0@gmail.com</a>
<a href=""mailto:file.8.505.0@gmail.com"">file.8.505.0@gmail.com</a>
<a href=""mailto:fi.l.e8.505.0@gmail.com"">fi.l.e8.505.0@gmail.com</a>
<a href=""mailto:file85.050@gmail.com"">file85.050@gmail.com</a>
<a href=""mailto:f.i.le8.5.050@gmail.com"">f.i.le8.5.050@gmail.com</a>
<a href=""mailto:f.il.e85050@gmail.com"">f.il.e85050@gmail.com</a>
<a href=""mailto:f.ile.850.5.0@gmail.com"">f.ile.850.5.0@gmail.com</a>
<a href=""mailto:fil.e8.505.0@gmail.com"">fil.e8.505.0@gmail.com</a>
<a href=""mailto:fi.le850.5.0@gmail.com"">fi.le850.5.0@gmail.com</a>
<a href=""mailto:f.i.l.e.850.50@gmail.com"">f.i.l.e.850.50@gmail.com</a>
<a href=""mailto:f.i.le8.5.0.5.0@gmail.com"">f.i.le8.5.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e8.5.05.0@gmail.com"">f.il.e8.5.05.0@gmail.com</a>
<a href=""mailto:f.i.l.e.85.050@gmail.com"">f.i.l.e.85.050@gmail.com</a>
<a href=""mailto:f.i.le85.0.50@gmail.com"">f.i.le85.0.50@gmail.com</a>
<a href=""mailto:fil.e8.5.050@gmail.com"">fil.e8.5.050@gmail.com</a>
<a href=""mailto:file8.50.50@gmail.com"">file8.50.50@gmail.com</a>
<a href=""mailto:f.i.le.85.05.0@gmail.com"">f.i.le.85.05.0@gmail.com</a>
<a href=""mailto:file.8.5.0.5.0@gmail.com"">file.8.5.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e.85.0.50@gmail.com"">f.il.e.85.0.50@gmail.com</a>
<a href=""mailto:fi.l.e.8.5.0.50@gmail.com"">fi.l.e.8.5.0.50@gmail.com</a>
<a href=""mailto:file.8.5.0.50@gmail.com"">file.8.5.0.50@gmail.com</a>
<a href=""mailto:f.i.le850.5.0@gmail.com"">f.i.le850.5.0@gmail.com</a>
<a href=""mailto:f.i.le8.5050@gmail.com"">f.i.le8.5050@gmail.com</a>
<a href=""mailto:fi.l.e8.5.0.50@gmail.com"">fi.l.e8.5.0.50@gmail.com</a>
<a href=""mailto:f.i.le.850.5.0@gmail.com"">f.i.le.850.5.0@gmail.com</a>
<a href=""mailto:f.ile.8.50.5.0@gmail.com"">f.ile.8.50.5.0@gmail.com</a>
<a href=""mailto:f.il.e.85.05.0@gmail.com"">f.il.e.85.05.0@gmail.com</a>
<a href=""mailto:fil.e.8505.0@gmail.com"">fil.e.8505.0@gmail.com</a>
<a href=""mailto:f.i.l.e.85050@gmail.com"">f.i.l.e.85050@gmail.com</a>
<a href=""mailto:fil.e85.05.0@gmail.com"">fil.e85.05.0@gmail.com</a>
<a href=""mailto:f.i.le.8.505.0@gmail.com"">f.i.le.8.505.0@gmail.com</a>
<a href=""mailto:fil.e.850.5.0@gmail.com"">fil.e.850.5.0@gmail.com</a>
<a href=""mailto:fil.e8.5050@gmail.com"">fil.e8.5050@gmail.com</a>
<a href=""mailto:f.i.le.85.050@gmail.com"">f.i.le.85.050@gmail.com</a>
<a href=""mailto:f.il.e8.5.0.50@gmail.com"">f.il.e8.5.0.50@gmail.com</a>
<a href=""mailto:f.i.l.e8.505.0@gmail.com"">f.i.l.e8.505.0@gmail.com</a>
<a href=""mailto:f.il.e.850.5.0@gmail.com"">f.il.e.850.5.0@gmail.com</a>
<a href=""mailto:f.ile.8.505.0@gmail.com"">f.ile.8.505.0@gmail.com</a>
<a href=""mailto:f.il.e.8.5.050@gmail.com"">f.il.e.8.5.050@gmail.com</a>
<a href=""mailto:f.ile.8.5.0.5.0@gmail.com"">f.ile.8.5.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e.85.0.5.0@gmail.com"">f.il.e.85.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e8.5.050@gmail.com"">f.il.e8.5.050@gmail.com</a>
<a href=""mailto:fi.le.8.5.0.50@gmail.com"">fi.le.8.5.0.50@gmail.com</a>
<a href=""mailto:fi.le8.5050@gmail.com"">fi.le8.5050@gmail.com</a>
<a href=""mailto:f.i.le.8505.0@gmail.com"">f.i.le.8505.0@gmail.com</a>
<a href=""mailto:file.85.050@gmail.com"">file.85.050@gmail.com</a>
<a href=""mailto:f.i.le8.505.0@gmail.com"">f.i.le8.505.0@gmail.com</a>
<a href=""mailto:fi.le8.505.0@gmail.com"">fi.le8.505.0@gmail.com</a>
<a href=""mailto:f.ile.8.50.50@gmail.com"">f.ile.8.50.50@gmail.com</a>
<a href=""mailto:fil.e8.50.50@gmail.com"">fil.e8.50.50@gmail.com</a>
<a href=""mailto:fil.e.8.5050@gmail.com"">fil.e.8.5050@gmail.com</a>
<a href=""mailto:f.i.l.e.8.5.050@gmail.com"">f.i.l.e.8.5.050@gmail.com</a>
<a href=""mailto:f.il.e.8.50.5.0@gmail.com"">f.il.e.8.50.5.0@gmail.com</a>
<a href=""mailto:fi.l.e.850.50@gmail.com"">fi.l.e.850.50@gmail.com</a>
<a href=""mailto:fi.le85.0.50@gmail.com"">fi.le85.0.50@gmail.com</a>
<a href=""mailto:fi.l.e8.5050@gmail.com"">fi.l.e8.5050@gmail.com</a>
<a href=""mailto:f.i.l.e850.50@gmail.com"">f.i.l.e850.50@gmail.com</a>
<a href=""mailto:fi.le85.050@gmail.com"">fi.le85.050@gmail.com</a>
<a href=""mailto:fi.l.e.8.505.0@gmail.com"">fi.l.e.8.505.0@gmail.com</a>
<a href=""mailto:f.ile.85.0.50@gmail.com"">f.ile.85.0.50@gmail.com</a>
<a href=""mailto:fi.le.85.050@gmail.com"">fi.le.85.050@gmail.com</a>
<a href=""mailto:f.ile8.50.5.0@gmail.com"">f.ile8.50.5.0@gmail.com</a>
<a href=""mailto:file85.0.5.0@gmail.com"">file85.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e8505.0@gmail.com"">f.il.e8505.0@gmail.com</a>
<a href=""mailto:fil.e.85.0.50@gmail.com"">fil.e.85.0.50@gmail.com</a>
<a href=""mailto:file.8.5.05.0@gmail.com"">file.8.5.05.0@gmail.com</a>
<a href=""mailto:fi.l.e.850.5.0@gmail.com"">fi.l.e.850.5.0@gmail.com</a>
<a href=""mailto:fi.le.85.0.50@gmail.com"">fi.le.85.0.50@gmail.com</a>
<a href=""mailto:f.i.l.e.8.5050@gmail.com"">f.i.l.e.8.5050@gmail.com</a>
<a href=""mailto:f.il.e.8.50.50@gmail.com"">f.il.e.8.50.50@gmail.com</a>
<a href=""mailto:fi.l.e.85050@gmail.com"">fi.l.e.85050@gmail.com</a>
<a href=""mailto:fi.l.e85.0.5.0@gmail.com"">fi.l.e85.0.5.0@gmail.com</a>
<a href=""mailto:f.ile.8.5.05.0@gmail.com"">f.ile.8.5.05.0@gmail.com</a>
<a href=""mailto:fi.l.e8505.0@gmail.com"">fi.l.e8505.0@gmail.com</a>
<a href=""mailto:f.i.le.8.5.050@gmail.com"">f.i.le.8.5.050@gmail.com</a>
<a href=""mailto:fi.le85050@gmail.com"">fi.le85050@gmail.com</a>
<a href=""mailto:f.ile85.0.5.0@gmail.com"">f.ile85.0.5.0@gmail.com</a>
<a href=""mailto:fi.le.8.50.50@gmail.com"">fi.le.8.50.50@gmail.com</a>
<a href=""mailto:f.i.l.e8.5.0.5.0@gmail.com"">f.i.l.e8.5.0.5.0@gmail.com</a>
<a href=""mailto:fil.e.8.505.0@gmail.com"">fil.e.8.505.0@gmail.com</a>
<a href=""mailto:file8.50.5.0@gmail.com"">file8.50.5.0@gmail.com</a>
<a href=""mailto:f.ile85.050@gmail.com"">f.ile85.050@gmail.com</a>
<a href=""mailto:f.ile850.5.0@gmail.com"">f.ile850.5.0@gmail.com</a>
<a href=""mailto:f.i.le.8.50.50@gmail.com"">f.i.le.8.50.50@gmail.com</a>
<a href=""mailto:f.ile850.50@gmail.com"">f.ile850.50@gmail.com</a>
<a href=""mailto:f.i.le.85050@gmail.com"">f.i.le.85050@gmail.com</a>
<a href=""mailto:f.i.le.8.5.05.0@gmail.com"">f.i.le.8.5.05.0@gmail.com</a>
<a href=""mailto:file8.505.0@gmail.com"">file8.505.0@gmail.com</a>
<a href=""mailto:fi.le85.0.5.0@gmail.com"">fi.le85.0.5.0@gmail.com</a>
<a href=""mailto:file8505.0@gmail.com"">file8505.0@gmail.com</a>
<a href=""mailto:fi.l.e.85.05.0@gmail.com"">fi.l.e.85.05.0@gmail.com</a>
<a href=""mailto:file85050@gmail.com"">file85050@gmail.com</a>
<a href=""mailto:fil.e.8.5.0.5.0@gmail.com"">fil.e.8.5.0.5.0@gmail.com</a>
<a href=""mailto:fil.e.85.050@gmail.com"">fil.e.85.050@gmail.com</a>
<a href=""mailto:f.il.e85.0.50@gmail.com"">f.il.e85.0.50@gmail.com</a>
<a href=""mailto:fil.e.85.05.0@gmail.com"">fil.e.85.05.0@gmail.com</a>
<a href=""mailto:file.850.50@gmail.com"">file.850.50@gmail.com</a>
<a href=""mailto:file8.5.05.0@gmail.com"">file8.5.05.0@gmail.com</a>
<a href=""mailto:fi.le850.50@gmail.com"">fi.le850.50@gmail.com</a>
<a href=""mailto:fi.le.8.5.0.5.0@gmail.com"">fi.le.8.5.0.5.0@gmail.com</a>
<a href=""mailto:fi.l.e.85.0.50@gmail.com"">fi.l.e.85.0.50@gmail.com</a>
<a href=""mailto:fi.le.85.0.5.0@gmail.com"">fi.le.85.0.5.0@gmail.com</a>
<a href=""mailto:fi.l.e85.05.0@gmail.com"">fi.l.e85.05.0@gmail.com</a>
<a href=""mailto:f.ile8.5.0.5.0@gmail.com"">f.ile8.5.0.5.0@gmail.com</a>
<a href=""mailto:f.il.e850.5.0@gmail.com"">f.il.e850.5.0@gmail.com</a>
<a href=""mailto:f.i.l.e8.5050@gmail.com"">f.i.l.e8.5050@gmail.com</a>
<a href=""mailto:fi.le8505.0@gmail.com"">fi.le8505.0@gmail.com</a>
<a href=""mailto:agoa93030@gmail.com"">agoa93030@gmail.com</a>
<a href=""mailto:ag.oa.930.30@gmail.com"">ag.oa.930.30@gmail.com</a>
<a href=""mailto:ag.oa9.3.0.3.0@gmail.com"">ag.oa9.3.0.3.0@gmail.com</a>
<a href=""mailto:ag.oa93.030@gmail.com"">ag.oa93.030@gmail.com</a>
<a href=""mailto:agoa9.30.30@gmail.com"">agoa9.30.30@gmail.com</a>
<a href=""mailto:a.goa9.30.3.0@gmail.com"">a.goa9.30.3.0@gmail.com</a>
<a href=""mailto:ago.a.930.30@gmail.com"">ago.a.930.30@gmail.com</a>
<a href=""mailto:ag.oa.9.3030@gmail.com"">ag.oa.9.3030@gmail.com</a>
<a href=""mailto:a.go.a.9303.0@gmail.com"">a.go.a.9303.0@gmail.com</a>
<a href=""mailto:ago.a.93.03.0@gmail.com"">ago.a.93.03.0@gmail.com</a>
<a href=""mailto:agoa9.3030@gmail.com"">agoa9.3030@gmail.com</a>
<a href=""mailto:ag.o.a.9.3.030@gmail.com"">ag.o.a.9.3.030@gmail.com</a>
<a href=""mailto:agoa9.303.0@gmail.com"">agoa9.303.0@gmail.com</a>
<a href=""mailto:ag.oa.930.3.0@gmail.com"">ag.oa.930.3.0@gmail.com</a>
<a href=""mailto:ag.o.a930.30@gmail.com"">ag.o.a930.30@gmail.com</a>
<a href=""mailto:ag.o.a.930.3.0@gmail.com"">ag.o.a.930.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a.9.3.03.0@gmail.com"">a.g.o.a.9.3.03.0@gmail.com</a>
<a href=""mailto:a.g.o.a.93.03.0@gmail.com"">a.g.o.a.93.03.0@gmail.com</a>
<a href=""mailto:a.goa.930.3.0@gmail.com"">a.goa.930.3.0@gmail.com</a>
<a href=""mailto:agoa9.3.03.0@gmail.com"">agoa9.3.03.0@gmail.com</a>
<a href=""mailto:a.g.oa9.3.0.30@gmail.com"">a.g.oa9.3.0.30@gmail.com</a>
<a href=""mailto:ag.oa.93.0.3.0@gmail.com"">ag.oa.93.0.3.0@gmail.com</a>
<a href=""mailto:ag.oa9.3.0.30@gmail.com"">ag.oa9.3.0.30@gmail.com</a>
<a href=""mailto:ag.o.a9.30.30@gmail.com"">ag.o.a9.30.30@gmail.com</a>
<a href=""mailto:a.g.oa.93.0.3.0@gmail.com"">a.g.oa.93.0.3.0@gmail.com</a>
<a href=""mailto:ago.a9.30.3.0@gmail.com"">ago.a9.30.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a9.3.0.3.0@gmail.com"">a.g.o.a9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a930.3.0@gmail.com"">a.g.o.a930.3.0@gmail.com</a>
<a href=""mailto:agoa.9.3.03.0@gmail.com"">agoa.9.3.03.0@gmail.com</a>
<a href=""mailto:ago.a93030@gmail.com"">ago.a93030@gmail.com</a>
<a href=""mailto:agoa.9303.0@gmail.com"">agoa.9303.0@gmail.com</a>
<a href=""mailto:a.g.oa93.0.3.0@gmail.com"">a.g.oa93.0.3.0@gmail.com</a>
<a href=""mailto:a.go.a9.3.030@gmail.com"">a.go.a9.3.030@gmail.com</a>
<a href=""mailto:a.g.oa.9.30.3.0@gmail.com"">a.g.oa.9.30.3.0@gmail.com</a>
<a href=""mailto:ag.o.a.9.303.0@gmail.com"">ag.o.a.9.303.0@gmail.com</a>
<a href=""mailto:ag.o.a.9.30.3.0@gmail.com"">ag.o.a.9.30.3.0@gmail.com</a>
<a href=""mailto:ag.o.a93.0.30@gmail.com"">ag.o.a93.0.30@gmail.com</a>
<a href=""mailto:a.g.oa.930.30@gmail.com"">a.g.oa.930.30@gmail.com</a>
<a href=""mailto:a.g.o.a.93.0.30@gmail.com"">a.g.o.a.93.0.30@gmail.com</a>
<a href=""mailto:ago.a9.303.0@gmail.com"">ago.a9.303.0@gmail.com</a>
<a href=""mailto:a.g.oa.93.0.30@gmail.com"">a.g.oa.93.0.30@gmail.com</a>
<a href=""mailto:agoa.9.3.0.30@gmail.com"">agoa.9.3.0.30@gmail.com</a>
<a href=""mailto:agoa.9.3030@gmail.com"">agoa.9.3030@gmail.com</a>
<a href=""mailto:a.g.o.a9.3030@gmail.com"">a.g.o.a9.3030@gmail.com</a>
<a href=""mailto:a.go.a9.303.0@gmail.com"">a.go.a9.303.0@gmail.com</a>
<a href=""mailto:ag.oa.9.3.0.3.0@gmail.com"">ag.oa.9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.go.a.93.0.30@gmail.com"">a.go.a.93.0.30@gmail.com</a>
<a href=""mailto:a.g.o.a.9.30.3.0@gmail.com"">a.g.o.a.9.30.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a.9.30.30@gmail.com"">a.g.o.a.9.30.30@gmail.com</a>
<a href=""mailto:a.g.o.a.93.030@gmail.com"">a.g.o.a.93.030@gmail.com</a>
<a href=""mailto:ago.a.930.3.0@gmail.com"">ago.a.930.3.0@gmail.com</a>
<a href=""mailto:a.goa.9.3.030@gmail.com"">a.goa.9.3.030@gmail.com</a>
<a href=""mailto:ag.o.a9.3.0.30@gmail.com"">ag.o.a9.3.0.30@gmail.com</a>
<a href=""mailto:ago.a9.3.0.3.0@gmail.com"">ago.a9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a93030@gmail.com"">a.g.o.a93030@gmail.com</a>
<a href=""mailto:a.g.oa9.303.0@gmail.com"">a.g.oa9.303.0@gmail.com</a>
<a href=""mailto:ag.oa.9.3.0.30@gmail.com"">ag.oa.9.3.0.30@gmail.com</a>
<a href=""mailto:a.g.oa.9.3.0.30@gmail.com"">a.g.oa.9.3.0.30@gmail.com</a>
<a href=""mailto:a.goa.9303.0@gmail.com"">a.goa.9303.0@gmail.com</a>
<a href=""mailto:ago.a.9303.0@gmail.com"">ago.a.9303.0@gmail.com</a>
<a href=""mailto:a.goa.9.3030@gmail.com"">a.goa.9.3030@gmail.com</a>
<a href=""mailto:agoa.93.0.3.0@gmail.com"">agoa.93.0.3.0@gmail.com</a>
<a href=""mailto:agoa.9.3.030@gmail.com"">agoa.9.3.030@gmail.com</a>
<a href=""mailto:ag.o.a9.30.3.0@gmail.com"">ag.o.a9.30.3.0@gmail.com</a>
<a href=""mailto:a.go.a.930.3.0@gmail.com"">a.go.a.930.3.0@gmail.com</a>
<a href=""mailto:agoa.9.3.0.3.0@gmail.com"">agoa.9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.goa.93.030@gmail.com"">a.goa.93.030@gmail.com</a>
<a href=""mailto:agoa.930.3.0@gmail.com"">agoa.930.3.0@gmail.com</a>
<a href=""mailto:a.g.oa9.3.03.0@gmail.com"">a.g.oa9.3.03.0@gmail.com</a>
<a href=""mailto:ag.oa93.03.0@gmail.com"">ag.oa93.03.0@gmail.com</a>
<a href=""mailto:a.goa.9.3.0.30@gmail.com"">a.goa.9.3.0.30@gmail.com</a>
<a href=""mailto:a.go.a.9.3.030@gmail.com"">a.go.a.9.3.030@gmail.com</a>
<a href=""mailto:ago.a9.3.0.30@gmail.com"">ago.a9.3.0.30@gmail.com</a>
<a href=""mailto:ag.oa.9.30.3.0@gmail.com"">ag.oa.9.30.3.0@gmail.com</a>
<a href=""mailto:ago.a9.30.30@gmail.com"">ago.a9.30.30@gmail.com</a>
<a href=""mailto:a.go.a.9.30.30@gmail.com"">a.go.a.9.30.30@gmail.com</a>
<a href=""mailto:a.goa.9.3.0.3.0@gmail.com"">a.goa.9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.goa9.30.30@gmail.com"">a.goa9.30.30@gmail.com</a>
<a href=""mailto:ago.a.93.030@gmail.com"">ago.a.93.030@gmail.com</a>
<a href=""mailto:ag.oa9.3030@gmail.com"">ag.oa9.3030@gmail.com</a>
<a href=""mailto:ago.a.93.0.30@gmail.com"">ago.a.93.0.30@gmail.com</a>
<a href=""mailto:a.g.oa.9.3030@gmail.com"">a.g.oa.9.3030@gmail.com</a>
<a href=""mailto:ago.a93.0.3.0@gmail.com"">ago.a93.0.3.0@gmail.com</a>
<a href=""mailto:ag.oa9.30.30@gmail.com"">ag.oa9.30.30@gmail.com</a>
<a href=""mailto:ag.o.a.9303.0@gmail.com"">ag.o.a.9303.0@gmail.com</a>
<a href=""mailto:ago.a930.3.0@gmail.com"">ago.a930.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a.9.3.030@gmail.com"">a.g.o.a.9.3.030@gmail.com</a>
<a href=""mailto:agoa93.0.30@gmail.com"">agoa93.0.30@gmail.com</a>
<a href=""mailto:a.g.oa.93.03.0@gmail.com"">a.g.oa.93.03.0@gmail.com</a>
<a href=""mailto:a.g.oa.9.30.30@gmail.com"">a.g.oa.9.30.30@gmail.com</a>
<a href=""mailto:a.goa.93.03.0@gmail.com"">a.goa.93.03.0@gmail.com</a>
<a href=""mailto:agoa93030@gmail.com"">agoa93030@gmail.com</a>
<a href=""mailto:ag.o.a.93030@gmail.com"">ag.o.a.93030@gmail.com</a>
<a href=""mailto:a.go.a9.3.0.3.0@gmail.com"">a.go.a9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.goa.93.0.3.0@gmail.com"">a.goa.93.0.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a9303.0@gmail.com"">a.g.o.a9303.0@gmail.com</a>
<a href=""mailto:a.g.oa.93030@gmail.com"">a.g.oa.93030@gmail.com</a>
<a href=""mailto:a.goa9.3030@gmail.com"">a.goa9.3030@gmail.com</a>
<a href=""mailto:agoa.930.30@gmail.com"">agoa.930.30@gmail.com</a>
<a href=""mailto:ag.o.a9.3030@gmail.com"">ag.o.a9.3030@gmail.com</a>
<a href=""mailto:a.go.a93.0.30@gmail.com"">a.go.a93.0.30@gmail.com</a>
<a href=""mailto:a.g.oa.93.030@gmail.com"">a.g.oa.93.030@gmail.com</a>
<a href=""mailto:a.goa.93030@gmail.com"">a.goa.93030@gmail.com</a>
<a href=""mailto:ago.a.9.3.03.0@gmail.com"">ago.a.9.3.03.0@gmail.com</a>
<a href=""mailto:ag.o.a.93.03.0@gmail.com"">ag.o.a.93.03.0@gmail.com</a>
<a href=""mailto:a.g.oa.9.3.030@gmail.com"">a.g.oa.9.3.030@gmail.com</a>
<a href=""mailto:a.g.o.a.93.0.3.0@gmail.com"">a.g.o.a.93.0.3.0@gmail.com</a>
<a href=""mailto:ago.a93.0.30@gmail.com"">ago.a93.0.30@gmail.com</a>
<a href=""mailto:a.g.oa93.030@gmail.com"">a.g.oa93.030@gmail.com</a>
<a href=""mailto:a.g.o.a9.30.3.0@gmail.com"">a.g.o.a9.30.3.0@gmail.com</a>
<a href=""mailto:ag.oa9.303.0@gmail.com"">ag.oa9.303.0@gmail.com</a>
<a href=""mailto:agoa9.3.030@gmail.com"">agoa9.3.030@gmail.com</a>
<a href=""mailto:a.goa.9.3.03.0@gmail.com"">a.goa.9.3.03.0@gmail.com</a>
<a href=""mailto:ago.a93.030@gmail.com"">ago.a93.030@gmail.com</a>
<a href=""mailto:ag.o.a9303.0@gmail.com"">ag.o.a9303.0@gmail.com</a>
<a href=""mailto:ago.a9.3.03.0@gmail.com"">ago.a9.3.03.0@gmail.com</a>
<a href=""mailto:a.goa9303.0@gmail.com"">a.goa9303.0@gmail.com</a>
<a href=""mailto:a.go.a93.03.0@gmail.com"">a.go.a93.03.0@gmail.com</a>
<a href=""mailto:ag.oa9.3.03.0@gmail.com"">ag.oa9.3.03.0@gmail.com</a>
<a href=""mailto:ag.o.a.9.3.0.3.0@gmail.com"">ag.o.a.9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.go.a.930.30@gmail.com"">a.go.a.930.30@gmail.com</a>
<a href=""mailto:a.goa9.3.03.0@gmail.com"">a.goa9.3.03.0@gmail.com</a>
<a href=""mailto:agoa9.3.0.30@gmail.com"">agoa9.3.0.30@gmail.com</a>
<a href=""mailto:agoa.93030@gmail.com"">agoa.93030@gmail.com</a>
<a href=""mailto:a.go.a.93.0.3.0@gmail.com"">a.go.a.93.0.3.0@gmail.com</a>
<a href=""mailto:a.go.a.93.030@gmail.com"">a.go.a.93.030@gmail.com</a>
<a href=""mailto:agoa93.0.3.0@gmail.com"">agoa93.0.3.0@gmail.com</a>
<a href=""mailto:ag.o.a.93.0.3.0@gmail.com"">ag.o.a.93.0.3.0@gmail.com</a>
<a href=""mailto:a.go.a9.30.30@gmail.com"">a.go.a9.30.30@gmail.com</a>
<a href=""mailto:a.goa9.3.030@gmail.com"">a.goa9.3.030@gmail.com</a>
<a href=""mailto:a.g.o.a.9303.0@gmail.com"">a.g.o.a.9303.0@gmail.com</a>
<a href=""mailto:a.g.o.a93.0.3.0@gmail.com"">a.g.o.a93.0.3.0@gmail.com</a>
<a href=""mailto:a.go.a.9.3030@gmail.com"">a.go.a.9.3030@gmail.com</a>
<a href=""mailto:a.g.oa9.3.0.3.0@gmail.com"">a.g.oa9.3.0.3.0@gmail.com</a>
<a href=""mailto:agoa.93.03.0@gmail.com"">agoa.93.03.0@gmail.com</a>
<a href=""mailto:ag.o.a9.3.030@gmail.com"">ag.o.a9.3.030@gmail.com</a>
<a href=""mailto:ag.oa.93.0.30@gmail.com"">ag.oa.93.0.30@gmail.com</a>
<a href=""mailto:ago.a.9.30.3.0@gmail.com"">ago.a.9.30.3.0@gmail.com</a>
<a href=""mailto:ag.oa.9303.0@gmail.com"">ag.oa.9303.0@gmail.com</a>
<a href=""mailto:a.goa.9.30.30@gmail.com"">a.goa.9.30.30@gmail.com</a>
<a href=""mailto:a.goa93.03.0@gmail.com"">a.goa93.03.0@gmail.com</a>
<a href=""mailto:a.goa93.0.3.0@gmail.com"">a.goa93.0.3.0@gmail.com</a>
<a href=""mailto:ago.a.93.0.3.0@gmail.com"">ago.a.93.0.3.0@gmail.com</a>
<a href=""mailto:ag.o.a93.0.3.0@gmail.com"">ag.o.a93.0.3.0@gmail.com</a>
<a href=""mailto:a.go.a.93.03.0@gmail.com"">a.go.a.93.03.0@gmail.com</a>
<a href=""mailto:a.g.o.a9.3.030@gmail.com"">a.g.o.a9.3.030@gmail.com</a>
<a href=""mailto:ag.o.a.930.30@gmail.com"">ag.o.a.930.30@gmail.com</a>
<a href=""mailto:a.go.a.9.303.0@gmail.com"">a.go.a.9.303.0@gmail.com</a>
<a href=""mailto:ag.oa.9.303.0@gmail.com"">ag.oa.9.303.0@gmail.com</a>
<a href=""mailto:ago.a.9.3030@gmail.com"">ago.a.9.3030@gmail.com</a>
<a href=""mailto:a.g.oa93030@gmail.com"">a.g.oa93030@gmail.com</a>
<a href=""mailto:ago.a.93030@gmail.com"">ago.a.93030@gmail.com</a>
<a href=""mailto:a.g.oa9.30.30@gmail.com"">a.g.oa9.30.30@gmail.com</a>
<a href=""mailto:a.go.a930.30@gmail.com"">a.go.a930.30@gmail.com</a>
<a href=""mailto:a.go.a9.3.0.30@gmail.com"">a.go.a9.3.0.30@gmail.com</a>
<a href=""mailto:a.go.a9.3030@gmail.com"">a.go.a9.3030@gmail.com</a>
<a href=""mailto:a.g.oa9303.0@gmail.com"">a.g.oa9303.0@gmail.com</a>
<a href=""mailto:a.g.o.a93.0.30@gmail.com"">a.g.o.a93.0.30@gmail.com</a>
<a href=""mailto:agoa9.3.0.3.0@gmail.com"">agoa9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.g.oa.930.3.0@gmail.com"">a.g.oa.930.3.0@gmail.com</a>
<a href=""mailto:a.goa.9.303.0@gmail.com"">a.goa.9.303.0@gmail.com</a>
<a href=""mailto:agoa930.3.0@gmail.com"">agoa930.3.0@gmail.com</a>
<a href=""mailto:ago.a.9.3.030@gmail.com"">ago.a.9.3.030@gmail.com</a>
<a href=""mailto:ag.oa.9.3.030@gmail.com"">ag.oa.9.3.030@gmail.com</a>
<a href=""mailto:ag.o.a93.03.0@gmail.com"">ag.o.a93.03.0@gmail.com</a>
<a href=""mailto:a.g.o.a.930.30@gmail.com"">a.g.o.a.930.30@gmail.com</a>
<a href=""mailto:ag.o.a.93.0.30@gmail.com"">ag.o.a.93.0.30@gmail.com</a>
<a href=""mailto:a.goa93.0.30@gmail.com"">a.goa93.0.30@gmail.com</a>
<a href=""mailto:a.g.oa.9.303.0@gmail.com"">a.g.oa.9.303.0@gmail.com</a>
<a href=""mailto:agoa.93.030@gmail.com"">agoa.93.030@gmail.com</a>
<a href=""mailto:a.go.a.9.3.0.3.0@gmail.com"">a.go.a.9.3.0.3.0@gmail.com</a>
<a href=""mailto:ag.o.a930.3.0@gmail.com"">ag.o.a930.3.0@gmail.com</a>
<a href=""mailto:a.goa93.030@gmail.com"">a.goa93.030@gmail.com</a>
<a href=""mailto:a.g.o.a9.3.0.30@gmail.com"">a.g.o.a9.3.0.30@gmail.com</a>
<a href=""mailto:agoa.9.30.30@gmail.com"">agoa.9.30.30@gmail.com</a>
<a href=""mailto:a.g.o.a.9.3.0.30@gmail.com"">a.g.o.a.9.3.0.30@gmail.com</a>
<a href=""mailto:a.g.o.a.9.3.0.3.0@gmail.com"">a.g.o.a.9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.goa930.3.0@gmail.com"">a.goa930.3.0@gmail.com</a>
<a href=""mailto:agoa.9.303.0@gmail.com"">agoa.9.303.0@gmail.com</a>
<a href=""mailto:a.goa9.3.0.3.0@gmail.com"">a.goa9.3.0.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a9.3.03.0@gmail.com"">a.g.o.a9.3.03.0@gmail.com</a>
<a href=""mailto:ag.oa93.0.30@gmail.com"">ag.oa93.0.30@gmail.com</a>
<a href=""mailto:a.go.a9303.0@gmail.com"">a.go.a9303.0@gmail.com</a>
<a href=""mailto:a.go.a9.30.3.0@gmail.com"">a.go.a9.30.3.0@gmail.com</a>
<a href=""mailto:ag.o.a.93.030@gmail.com"">ag.o.a.93.030@gmail.com</a>
<a href=""mailto:ag.o.a9.3.03.0@gmail.com"">ag.o.a9.3.03.0@gmail.com</a>
<a href=""mailto:ago.a9303.0@gmail.com"">ago.a9303.0@gmail.com</a>
<a href=""mailto:a.g.oa930.30@gmail.com"">a.g.oa930.30@gmail.com</a>
<a href=""mailto:a.g.oa.9.3.0.3.0@gmail.com"">a.g.oa.9.3.0.3.0@gmail.com</a>
<a href=""mailto:ag.oa9.30.3.0@gmail.com"">ag.oa9.30.3.0@gmail.com</a>
<a href=""mailto:a.go.a.9.30.3.0@gmail.com"">a.go.a.9.30.3.0@gmail.com</a>
<a href=""mailto:a.g.o.a9.303.0@gmail.com"">a.g.o.a9.303.0@gmail.com</a>
<a href=""mailto:a.g.o.a.9.3030@gmail.com"">a.g.o.a.9.3030@gmail.com</a>
<a href=""mailto:ag.oa.9.3.03.0@gmail.com"">ag.oa.9.3.03.0@gmail.com</a>
<a href=""mailto:a.goa9.303.0@gmail.com"">a.goa9.303.0@gmail.com</a>
<a href=""mailto:a.go.a.9.3.0.30@gmail.com"">a.go.a.9.3.0.30@gmail.com</a>
<a href=""mailto:agoa930.30@gmail.com"">agoa930.30@gmail.com</a>
<a href=""mailto:ag.o.a.9.30.30@gmail.com"">ag.o.a.9.30.30@gmail.com</a>
<a href=""mailto:a.g.o.a930.30@gmail.com"">a.g.o.a930.30@gmail.com</a>
<a href=""mailto:ag.oa93030@gmail.com"">ag.oa93030@gmail.com</a>
<a href=""mailto:ag.o.a9.3.0.3.0@gmail.com"">ag.o.a9.3.0.3.0@gmail.com</a>
<a href=""mailto:profcharlescsolud1@gmail.com"">profcharlescsolud1@gmail.com</a>
<a href=""mailto:p.r.o.f.ch.ar.les.c.s.olud1@gmail.com"">p.r.o.f.ch.ar.les.c.s.olud1@gmail.com</a>
<a href=""mailto:p.rof.ch.arle.s.c.so.lud1@gmail.com"">p.rof.ch.arle.s.c.so.lud1@gmail.com</a>
<a href=""mailto:pro.fch.a.r.l.e.sc.so.l.u.d1@gmail.com"">pro.fch.a.r.l.e.sc.so.l.u.d1@gmail.com</a>
<a href=""mailto:p.rofc.h.a.rles.cs.ol.u.d1@gmail.com"">p.rofc.h.a.rles.cs.ol.u.d1@gmail.com</a>
<a href=""mailto:pro.fc.harl.escs.ol.ud1@gmail.com"">pro.fc.harl.escs.ol.ud1@gmail.com</a>
<a href=""mailto:prof.c.harle.scs.ol.ud1@gmail.com"">prof.c.harle.scs.ol.ud1@gmail.com</a>
<a href=""mailto:pr.o.f.charl.e.s.c.so.lu.d1@gmail.com"">pr.o.f.charl.e.s.c.so.lu.d1@gmail.com</a>
<a href=""mailto:pr.o.fc.h.arle.s.csol.ud.1@gmail.com"">pr.o.fc.h.arle.s.csol.ud.1@gmail.com</a>
<a href=""mailto:pr.o.f.charle.scsolud1@gmail.com"">pr.o.f.charle.scsolud1@gmail.com</a>
<a href=""mailto:p.ro.fch.a.r.l.e.sc.so.lu.d1@gmail.com"">p.ro.fch.a.r.l.e.sc.so.lu.d1@gmail.com</a>
<a href=""mailto:pr.ofchar.les.cso.l.u.d.1@gmail.com"">pr.ofchar.les.cso.l.u.d.1@gmail.com</a>
<a href=""mailto:profcha.rle.sc.s.o.lu.d.1@gmail.com"">profcha.rle.sc.s.o.lu.d.1@gmail.com</a>
<a href=""mailto:p.ro.f.c.har.lescs.ol.u.d.1@gmail.com"">p.ro.f.c.har.lescs.ol.u.d.1@gmail.com</a>
<a href=""mailto:prof.c.ha.r.les.c.s.ol.ud1@gmail.com"">prof.c.ha.r.les.c.s.ol.ud1@gmail.com</a>
<a href=""mailto:pr.o.f.charle.s.cs.olu.d1@gmail.com"">pr.o.f.charle.s.cs.olu.d1@gmail.com</a>
<a href=""mailto:profc.h.a.rlescso.l.u.d.1@gmail.com"">profc.h.a.rlescso.l.u.d.1@gmail.com</a>
<a href=""mailto:pro.fc.har.le.s.c.so.l.u.d.1@gmail.com"">pro.fc.har.le.s.c.so.l.u.d.1@gmail.com</a>
<a href=""mailto:pr.ofch.a.r.le.s.cso.l.u.d1@gmail.com"">pr.ofch.a.r.le.s.cso.l.u.d1@gmail.com</a>
<a href=""mailto:pr.o.fch.arle.s.cs.o.lu.d.1@gmail.com"">pr.o.fch.arle.s.cs.o.lu.d.1@gmail.com</a>
<a href=""mailto:pr.of.c.harl.e.s.cs.o.l.ud1@gmail.com"">pr.of.c.harl.e.s.cs.o.l.ud1@gmail.com</a>
<a href=""mailto:pr.o.f.c.h.arle.scs.o.lu.d.1@gmail.com"">pr.o.f.c.h.arle.scs.o.lu.d.1@gmail.com</a>
<a href=""mailto:p.ro.f.c.har.l.e.scsol.ud1@gmail.com"">p.ro.f.c.har.l.e.scsol.ud1@gmail.com</a>
<a href=""mailto:pr.ofch.a.rl.e.s.c.solu.d.1@gmail.com"">pr.ofch.a.rl.e.s.c.solu.d.1@gmail.com</a>
<a href=""mailto:pro.fc.ha.r.l.e.scsol.u.d.1@gmail.com"">pro.fc.ha.r.l.e.scsol.u.d.1@gmail.com</a>
<a href=""mailto:p.r.of.c.harlescsol.u.d1@gmail.com"">p.r.of.c.harlescsol.u.d1@gmail.com</a>
<a href=""mailto:prof.charle.scs.o.lud.1@gmail.com"">prof.charle.scs.o.lud.1@gmail.com</a>
<a href=""mailto:p.r.ofc.h.a.rl.e.scs.olu.d1@gmail.com"">p.r.ofc.h.a.rl.e.scs.olu.d1@gmail.com</a>
<a href=""mailto:p.ro.f.char.l.e.sc.s.olu.d1@gmail.com"">p.ro.f.char.l.e.sc.s.olu.d1@gmail.com</a>
<a href=""mailto:pr.ofc.harl.e.s.cs.olu.d.1@gmail.com"">pr.ofc.harl.e.s.cs.olu.d.1@gmail.com</a>
<a href=""mailto:p.r.ofcharl.e.s.cs.olu.d.1@gmail.com"">p.r.ofcharl.e.s.cs.olu.d.1@gmail.com</a>
<a href=""mailto:pro.fc.h.a.rl.es.c.so.lud1@gmail.com"">pro.fc.h.a.rl.es.c.so.lud1@gmail.com</a>
<a href=""mailto:p.r.o.fc.har.l.es.csol.u.d.1@gmail.com"">p.r.o.fc.har.l.es.csol.u.d.1@gmail.com</a>
<a href=""mailto:pr.o.f.c.h.a.r.l.esc.solud1@gmail.com"">pr.o.f.c.h.a.r.l.esc.solud1@gmail.com</a>
<a href=""mailto:pr.o.f.c.h.arles.c.so.l.ud1@gmail.com"">pr.o.f.c.h.arles.c.so.l.ud1@gmail.com</a>
<a href=""mailto:p.ro.fcha.r.l.esc.s.o.l.ud1@gmail.com"">p.ro.fcha.r.l.esc.s.o.l.ud1@gmail.com</a>
<a href=""mailto:p.rof.charl.esc.solud.1@gmail.com"">p.rof.charl.esc.solud.1@gmail.com</a>
<a href=""mailto:profch.arl.e.scso.lu.d.1@gmail.com"">profch.arl.e.scso.lu.d.1@gmail.com</a>
<a href=""mailto:p.rofc.harl.e.scs.olud1@gmail.com"">p.rofc.harl.e.scs.olud1@gmail.com</a>
<a href=""mailto:p.r.ofchar.l.e.s.cs.o.lu.d.1@gmail.com"">p.r.ofchar.l.e.s.cs.o.lu.d.1@gmail.com</a>
<a href=""mailto:pr.ofc.harl.escs.olu.d1@gmail.com"">pr.ofc.harl.escs.olu.d1@gmail.com</a>
<a href=""mailto:pr.ofc.h.ar.le.scs.olud1@gmail.com"">pr.ofc.h.ar.le.scs.olud1@gmail.com</a>
<a href=""mailto:pr.of.c.h.a.r.lesc.so.lud.1@gmail.com"">pr.of.c.h.a.r.lesc.so.lud.1@gmail.com</a>
<a href=""mailto:pr.o.fc.h.a.r.l.e.scs.ol.ud.1@gmail.com"">pr.o.fc.h.a.r.l.e.scs.ol.ud.1@gmail.com</a>
<a href=""mailto:p.ro.fchar.l.es.cs.o.lu.d1@gmail.com"">p.ro.fchar.l.es.cs.o.lu.d1@gmail.com</a>
<a href=""mailto:profch.a.rlesc.sol.u.d.1@gmail.com"">profch.a.rlesc.sol.u.d.1@gmail.com</a>
<a href=""mailto:p.r.o.fch.a.r.l.e.s.c.s.olu.d.1@gmail.com"">p.r.o.fch.a.r.l.e.s.c.s.olu.d.1@gmail.com</a>
<a href=""mailto:pr.o.f.ch.a.rl.e.scsol.ud.1@gmail.com"">pr.o.f.ch.a.rl.e.scsol.ud.1@gmail.com</a>
<a href=""mailto:p.ro.fch.a.r.l.es.cs.ol.u.d1@gmail.com"">p.ro.fch.a.r.l.es.cs.ol.u.d1@gmail.com</a>
<a href=""mailto:p.rof.c.h.arl.esc.s.o.lu.d.1@gmail.com"">p.rof.c.h.arl.esc.s.o.lu.d.1@gmail.com</a>
<a href=""mailto:pro.fch.ar.le.scs.o.l.ud.1@gmail.com"">pro.fch.ar.le.scs.o.l.ud.1@gmail.com</a>
<a href=""mailto:p.r.ofc.h.arle.s.cs.olud1@gmail.com"">p.r.ofc.h.arle.s.cs.olud1@gmail.com</a>
<a href=""mailto:p.r.o.f.ch.a.rlescsolud1@gmail.com"">p.r.o.f.ch.a.rlescsolud1@gmail.com</a>
<a href=""mailto:p.r.o.fc.h.a.rles.cs.o.l.ud.1@gmail.com"">p.r.o.fc.h.a.rles.cs.o.l.ud.1@gmail.com</a>
<a href=""mailto:pro.f.c.harl.escs.o.l.ud.1@gmail.com"">pro.f.c.harl.escs.o.l.ud.1@gmail.com</a>
<a href=""mailto:pr.o.f.cha.r.l.e.scsol.u.d1@gmail.com"">pr.o.f.cha.r.l.e.scsol.u.d1@gmail.com</a>
<a href=""mailto:prof.c.h.ar.l.e.s.c.so.l.u.d1@gmail.com"">prof.c.h.ar.l.e.s.c.so.l.u.d1@gmail.com</a>
<a href=""mailto:p.r.o.fc.h.a.rlesc.s.olud1@gmail.com"">p.r.o.fc.h.a.rlesc.s.olud1@gmail.com</a>
<a href=""mailto:pr.ofc.harl.e.sc.solud1@gmail.com"">pr.ofc.harl.e.sc.solud1@gmail.com</a>
<a href=""mailto:pr.o.f.c.ha.r.l.e.scs.o.lud.1@gmail.com"">pr.o.f.c.ha.r.l.e.scs.o.lud.1@gmail.com</a>
<a href=""mailto:p.rofc.h.ar.lesc.s.o.lu.d1@gmail.com"">p.rofc.h.ar.lesc.s.o.lu.d1@gmail.com</a>
<a href=""mailto:p.ro.fc.h.ar.l.esc.s.olud.1@gmail.com"">p.ro.fc.h.ar.l.esc.s.olud.1@gmail.com</a>
<a href=""mailto:p.ro.fcharl.esc.so.l.u.d1@gmail.com"">p.ro.fcharl.esc.so.l.u.d1@gmail.com</a>
<a href=""mailto:p.r.o.fc.har.le.s.c.so.l.u.d.1@gmail.com"">p.r.o.fc.har.le.s.c.so.l.u.d.1@gmail.com</a>
<a href=""mailto:p.rof.cha.r.lescsol.ud1@gmail.com"">p.rof.cha.r.lescsol.ud1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.ha.r.l.e.scso.lud.1@gmail.com"">p.r.o.f.c.ha.r.l.e.scso.lud.1@gmail.com</a>
<a href=""mailto:prof.cha.r.le.sc.s.ol.ud1@gmail.com"">prof.cha.r.le.sc.s.ol.ud1@gmail.com</a>
<a href=""mailto:pr.ofch.ar.l.esc.s.ol.ud1@gmail.com"">pr.ofch.ar.l.esc.s.ol.ud1@gmail.com</a>
<a href=""mailto:p.rofch.a.r.les.cs.olud1@gmail.com"">p.rofch.a.r.les.cs.olud1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.h.arl.e.s.c.s.olu.d.1@gmail.com"">p.r.o.f.c.h.arl.e.s.c.s.olu.d.1@gmail.com</a>
<a href=""mailto:pr.o.f.c.h.arl.es.cs.olu.d.1@gmail.com"">pr.o.f.c.h.arl.es.cs.olu.d.1@gmail.com</a>
<a href=""mailto:pr.o.f.c.ha.r.le.sc.s.ol.ud.1@gmail.com"">pr.o.f.c.ha.r.le.sc.s.ol.ud.1@gmail.com</a>
<a href=""mailto:pr.of.charl.escs.o.l.u.d.1@gmail.com"">pr.of.charl.escs.o.l.u.d.1@gmail.com</a>
<a href=""mailto:p.ro.f.c.h.a.r.l.e.s.c.so.l.ud1@gmail.com"">p.ro.f.c.h.a.r.l.e.s.c.so.l.ud1@gmail.com</a>
<a href=""mailto:p.r.o.fc.ha.rl.escsol.u.d1@gmail.com"">p.r.o.fc.ha.rl.escsol.u.d1@gmail.com</a>
<a href=""mailto:pr.ofc.ha.r.l.e.scsolu.d1@gmail.com"">pr.ofc.ha.r.l.e.scsolu.d1@gmail.com</a>
<a href=""mailto:prof.c.harles.csol.ud1@gmail.com"">prof.c.harles.csol.ud1@gmail.com</a>
<a href=""mailto:prof.ch.ar.le.s.cs.o.l.ud1@gmail.com"">prof.ch.ar.le.s.cs.o.l.ud1@gmail.com</a>
<a href=""mailto:p.r.o.fc.h.arlescso.l.u.d1@gmail.com"">p.r.o.fc.h.arlescso.l.u.d1@gmail.com</a>
<a href=""mailto:p.ro.f.ch.a.r.l.es.cs.olud1@gmail.com"">p.ro.f.ch.a.r.l.es.cs.olud1@gmail.com</a>
<a href=""mailto:prof.ch.a.r.le.s.csolud1@gmail.com"">prof.ch.a.r.le.s.csolud1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.har.lesc.solud1@gmail.com"">p.r.o.f.c.har.lesc.solud1@gmail.com</a>
<a href=""mailto:p.r.of.charle.s.cs.o.lud1@gmail.com"">p.r.of.charle.s.cs.o.lud1@gmail.com</a>
<a href=""mailto:p.rof.c.h.ar.l.e.sc.s.olu.d.1@gmail.com"">p.rof.c.h.ar.l.e.sc.s.olu.d.1@gmail.com</a>
<a href=""mailto:p.ro.fc.h.a.rl.es.c.s.olu.d.1@gmail.com"">p.ro.fc.h.a.rl.es.c.s.olu.d.1@gmail.com</a>
<a href=""mailto:p.r.o.fcha.rl.e.s.cs.o.lu.d.1@gmail.com"">p.r.o.fcha.rl.e.s.cs.o.lu.d.1@gmail.com</a>
<a href=""mailto:pr.of.c.h.a.r.le.sc.solu.d.1@gmail.com"">pr.of.c.h.a.r.le.sc.solu.d.1@gmail.com</a>
<a href=""mailto:p.r.o.fchar.l.es.cso.l.ud.1@gmail.com"">p.r.o.fchar.l.es.cso.l.ud.1@gmail.com</a>
<a href=""mailto:p.r.of.ch.a.rle.sc.so.l.u.d.1@gmail.com"">p.r.of.ch.a.rle.sc.so.l.u.d.1@gmail.com</a>
<a href=""mailto:pr.of.c.h.ar.les.cs.o.l.u.d1@gmail.com"">pr.of.c.h.ar.les.cs.o.l.u.d1@gmail.com</a>
<a href=""mailto:p.r.o.fcha.rl.escs.ol.ud.1@gmail.com"">p.r.o.fcha.rl.escs.ol.ud.1@gmail.com</a>
<a href=""mailto:pr.of.char.les.cso.l.ud1@gmail.com"">pr.of.char.les.cso.l.ud1@gmail.com</a>
<a href=""mailto:p.r.o.fc.h.arl.e.scs.ol.u.d.1@gmail.com"">p.r.o.fc.h.arl.e.scs.ol.u.d.1@gmail.com</a>
<a href=""mailto:p.r.o.fchar.l.es.c.s.o.l.u.d1@gmail.com"">p.r.o.fchar.l.es.c.s.o.l.u.d1@gmail.com</a>
<a href=""mailto:p.rof.cha.r.l.e.s.c.s.ol.ud1@gmail.com"">p.rof.cha.r.l.e.s.c.s.ol.ud1@gmail.com</a>
<a href=""mailto:pr.o.f.cha.rlescso.lu.d1@gmail.com"">pr.o.f.cha.rlescso.lu.d1@gmail.com</a>
<a href=""mailto:p.r.o.f.cha.rl.es.c.s.ol.u.d1@gmail.com"">p.r.o.f.cha.rl.es.c.s.ol.u.d1@gmail.com</a>
<a href=""mailto:p.rofchar.les.c.s.o.l.u.d.1@gmail.com"">p.rofchar.les.c.s.o.l.u.d.1@gmail.com</a>
<a href=""mailto:p.rof.ch.a.rle.s.csolud.1@gmail.com"">p.rof.ch.a.rle.s.csolud.1@gmail.com</a>
<a href=""mailto:pr.of.ch.arl.e.s.c.s.o.lud1@gmail.com"">pr.of.ch.arl.e.s.c.s.o.lud1@gmail.com</a>
<a href=""mailto:p.rofc.ha.rl.e.scsolud.1@gmail.com"">p.rofc.ha.rl.e.scsolud.1@gmail.com</a>
<a href=""mailto:pr.ofch.a.rle.s.c.s.olu.d1@gmail.com"">pr.ofch.a.rle.s.c.s.olu.d1@gmail.com</a>
<a href=""mailto:pro.fc.h.arle.scso.lu.d.1@gmail.com"">pro.fc.h.arle.scso.lu.d.1@gmail.com</a>
<a href=""mailto:profchar.l.e.scs.o.lu.d1@gmail.com"">profchar.l.e.scs.o.lu.d1@gmail.com</a>
<a href=""mailto:p.rofc.h.a.rles.c.solu.d1@gmail.com"">p.rofc.h.a.rles.c.solu.d1@gmail.com</a>
<a href=""mailto:p.r.o.f.charlesc.so.l.u.d1@gmail.com"">p.r.o.f.charlesc.so.l.u.d1@gmail.com</a>
<a href=""mailto:pro.f.c.har.le.s.c.solud1@gmail.com"">pro.f.c.har.le.s.c.solud1@gmail.com</a>
<a href=""mailto:p.rofc.h.a.r.l.e.sc.s.olu.d1@gmail.com"">p.rofc.h.a.r.l.e.sc.s.olu.d1@gmail.com</a>
<a href=""mailto:pro.f.c.h.a.rl.esc.sol.ud.1@gmail.com"">pro.f.c.h.a.rl.esc.sol.ud.1@gmail.com</a>
<a href=""mailto:p.ro.fc.h.a.rl.e.s.c.solud.1@gmail.com"">p.ro.fc.h.a.rl.e.s.c.solud.1@gmail.com</a>
<a href=""mailto:pr.ofcharl.e.s.cso.lu.d.1@gmail.com"">pr.ofcharl.e.s.cso.lu.d.1@gmail.com</a>
<a href=""mailto:p.rof.ch.a.rl.es.cso.lu.d1@gmail.com"">p.rof.ch.a.rl.es.cso.lu.d1@gmail.com</a>
<a href=""mailto:p.r.ofc.ha.rle.s.cso.lud.1@gmail.com"">p.r.ofc.ha.rle.s.cso.lud.1@gmail.com</a>
<a href=""mailto:profch.arl.e.s.cs.olud1@gmail.com"">profch.arl.e.s.cs.olud1@gmail.com</a>
<a href=""mailto:pro.fcha.r.l.e.sc.s.olud1@gmail.com"">pro.fcha.r.l.e.sc.s.olud1@gmail.com</a>
<a href=""mailto:p.ro.f.cha.rl.escs.o.lu.d.1@gmail.com"">p.ro.f.cha.rl.escs.o.lu.d.1@gmail.com</a>
<a href=""mailto:p.rofcha.r.les.c.so.lud1@gmail.com"">p.rofcha.r.les.c.so.lud1@gmail.com</a>
<a href=""mailto:pro.f.c.harl.e.s.c.so.l.u.d.1@gmail.com"">pro.f.c.harl.e.s.c.so.l.u.d.1@gmail.com</a>
<a href=""mailto:prof.char.lescso.lud1@gmail.com"">prof.char.lescso.lud1@gmail.com</a>
<a href=""mailto:pro.f.ch.a.r.l.e.s.c.sol.ud1@gmail.com"">pro.f.ch.a.r.l.e.s.c.sol.ud1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.ha.r.l.e.s.cs.olud1@gmail.com"">p.r.o.f.c.ha.r.l.e.s.cs.olud1@gmail.com</a>
<a href=""mailto:p.ro.fch.ar.le.s.cs.olu.d1@gmail.com"">p.ro.fch.ar.le.s.cs.olu.d1@gmail.com</a>
<a href=""mailto:p.ro.fch.a.rlesc.sol.u.d1@gmail.com"">p.ro.fch.a.rlesc.sol.u.d1@gmail.com</a>
<a href=""mailto:pro.f.c.h.a.r.le.s.c.solud1@gmail.com"">pro.f.c.h.a.r.le.s.c.solud1@gmail.com</a>
<a href=""mailto:p.r.o.f.ch.arlesc.so.lu.d1@gmail.com"">p.r.o.f.ch.arlesc.so.lu.d1@gmail.com</a>
<a href=""mailto:profcha.r.l.es.cs.o.lud1@gmail.com"">profcha.r.l.es.cs.o.lud1@gmail.com</a>
<a href=""mailto:pr.o.f.c.harl.es.cs.o.l.ud.1@gmail.com"">pr.o.f.c.harl.es.cs.o.l.ud.1@gmail.com</a>
<a href=""mailto:p.ro.fch.ar.l.es.c.s.olud1@gmail.com"">p.ro.fch.ar.l.es.c.s.olud1@gmail.com</a>
<a href=""mailto:pr.o.fc.h.a.r.le.s.cs.ol.u.d.1@gmail.com"">pr.o.fc.h.a.r.le.s.cs.ol.u.d.1@gmail.com</a>
<a href=""mailto:p.r.o.fc.h.ar.le.sc.so.l.u.d1@gmail.com"">p.r.o.fc.h.ar.le.sc.so.l.u.d1@gmail.com</a>
<a href=""mailto:p.r.o.fch.a.r.l.es.csolu.d.1@gmail.com"">p.r.o.fch.a.r.l.es.csolu.d.1@gmail.com</a>
<a href=""mailto:prof.char.l.e.scsol.u.d1@gmail.com"">prof.char.l.e.scsol.u.d1@gmail.com</a>
<a href=""mailto:p.r.o.fch.ar.le.scs.o.lud1@gmail.com"">p.r.o.fch.ar.le.scs.o.lud1@gmail.com</a>
<a href=""mailto:p.rof.ch.a.r.le.sc.so.l.u.d.1@gmail.com"">p.rof.ch.a.r.le.sc.so.l.u.d.1@gmail.com</a>
<a href=""mailto:pr.o.fc.h.a.rl.es.c.so.lu.d.1@gmail.com"">pr.o.fc.h.a.rl.es.c.so.lu.d.1@gmail.com</a>
<a href=""mailto:p.r.of.c.h.a.r.l.escs.o.lud.1@gmail.com"">p.r.of.c.h.a.r.l.escs.o.lud.1@gmail.com</a>
<a href=""mailto:pr.o.fch.a.rles.c.so.l.ud.1@gmail.com"">pr.o.fch.a.rles.c.so.l.ud.1@gmail.com</a>
<a href=""mailto:prof.ch.a.r.lesc.s.o.lu.d.1@gmail.com"">prof.ch.a.r.lesc.s.o.lu.d.1@gmail.com</a>
<a href=""mailto:p.r.of.c.harl.e.sc.solu.d.1@gmail.com"">p.r.of.c.harl.e.sc.solu.d.1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.h.a.rl.escsolud.1@gmail.com"">p.r.o.f.c.h.a.rl.escsolud.1@gmail.com</a>
<a href=""mailto:p.ro.fc.ha.rl.escs.o.lu.d.1@gmail.com"">p.ro.fc.ha.rl.escs.o.lu.d.1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.h.arl.es.csolu.d.1@gmail.com"">p.r.o.f.c.h.arl.es.csolu.d.1@gmail.com</a>
<a href=""mailto:p.r.o.f.ch.a.rl.es.cs.o.lu.d1@gmail.com"">p.r.o.f.ch.a.rl.es.cs.o.lu.d1@gmail.com</a>
<a href=""mailto:profcha.rlesc.so.lu.d.1@gmail.com"">profcha.rlesc.so.lu.d.1@gmail.com</a>
<a href=""mailto:pr.ofch.ar.les.c.s.olu.d1@gmail.com"">pr.ofch.ar.les.c.s.olu.d1@gmail.com</a>
<a href=""mailto:pr.ofcha.rles.cs.o.l.ud1@gmail.com"">pr.ofcha.rles.cs.o.l.ud1@gmail.com</a>
<a href=""mailto:pro.fcha.rl.escs.ol.ud.1@gmail.com"">pro.fcha.rl.escs.ol.ud.1@gmail.com</a>
<a href=""mailto:pro.f.cha.rl.esc.s.o.l.ud.1@gmail.com"">pro.f.cha.rl.esc.s.o.l.ud.1@gmail.com</a>
<a href=""mailto:pr.o.fch.ar.lesc.so.l.ud1@gmail.com"">pr.o.fch.ar.lesc.so.l.ud1@gmail.com</a>
<a href=""mailto:pr.o.f.c.h.a.r.les.cs.o.l.u.d1@gmail.com"">pr.o.f.c.h.a.r.les.cs.o.l.u.d1@gmail.com</a>
<a href=""mailto:pr.o.fc.h.ar.lesc.s.o.lud.1@gmail.com"">pr.o.fc.h.ar.lesc.s.o.lud.1@gmail.com</a>
<a href=""mailto:p.r.o.fc.h.a.rle.s.csol.u.d1@gmail.com"">p.r.o.fc.h.a.rle.s.csol.u.d1@gmail.com</a>
<a href=""mailto:pr.o.fch.ar.l.e.scs.o.lud1@gmail.com"">pr.o.fch.ar.l.e.scs.o.lud1@gmail.com</a>
<a href=""mailto:pr.ofcharl.es.cs.o.lud.1@gmail.com"">pr.ofcharl.es.cs.o.lud.1@gmail.com</a>
<a href=""mailto:prof.ch.a.rl.e.s.cs.ol.ud.1@gmail.com"">prof.ch.a.rl.e.s.cs.ol.ud.1@gmail.com</a>
<a href=""mailto:pr.o.fc.h.a.r.les.c.s.o.lud1@gmail.com"">pr.o.fc.h.a.r.les.c.s.o.lud1@gmail.com</a>
<a href=""mailto:p.r.of.c.h.a.rles.csol.u.d.1@gmail.com"">p.r.of.c.h.a.rles.csol.u.d.1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.har.le.s.cs.olud1@gmail.com"">p.r.o.f.c.har.le.s.cs.olud1@gmail.com</a>
<a href=""mailto:p.rof.c.h.ar.le.scso.lu.d1@gmail.com"">p.rof.c.h.ar.le.scso.lu.d1@gmail.com</a>
<a href=""mailto:p.r.of.c.ha.rle.s.c.s.ol.ud.1@gmail.com"">p.r.of.c.ha.rle.s.c.s.ol.ud.1@gmail.com</a>
<a href=""mailto:profch.ar.lescsol.u.d1@gmail.com"">profch.ar.lescsol.u.d1@gmail.com</a>
<a href=""mailto:p.r.o.fcharle.s.cso.l.u.d.1@gmail.com"">p.r.o.fcharle.s.cso.l.u.d.1@gmail.com</a>
<a href=""mailto:profc.h.arle.s.csolud1@gmail.com"">profc.h.arle.s.csolud1@gmail.com</a>
<a href=""mailto:p.rof.c.harlescso.l.u.d1@gmail.com"">p.rof.c.harlescso.l.u.d1@gmail.com</a>
<a href=""mailto:pr.of.c.h.ar.les.c.so.l.u.d1@gmail.com"">pr.of.c.h.ar.les.c.so.l.u.d1@gmail.com</a>
<a href=""mailto:p.rof.c.ha.rl.es.c.s.ol.ud1@gmail.com"">p.rof.c.ha.rl.es.c.s.ol.ud1@gmail.com</a>
<a href=""mailto:p.rofc.h.a.rle.scsol.ud1@gmail.com"">p.rofc.h.a.rle.scsol.ud1@gmail.com</a>
<a href=""mailto:pr.o.f.ch.a.r.l.e.scs.o.l.u.d1@gmail.com"">pr.o.f.ch.a.r.l.e.scs.o.l.u.d1@gmail.com</a>
<a href=""mailto:p.ro.fch.a.r.les.cs.o.l.u.d1@gmail.com"">p.ro.fch.a.r.les.cs.o.l.u.d1@gmail.com</a>
<a href=""mailto:pr.ofc.h.ar.l.esc.sol.ud.1@gmail.com"">pr.ofc.h.ar.l.esc.sol.ud.1@gmail.com</a>
<a href=""mailto:p.r.o.fcharles.c.s.ol.ud.1@gmail.com"">p.r.o.fcharles.c.s.ol.ud.1@gmail.com</a>
<a href=""mailto:p.rofc.h.a.r.le.sc.s.o.l.u.d.1@gmail.com"">p.rofc.h.a.r.le.sc.s.o.l.u.d.1@gmail.com</a>
<a href=""mailto:pro.f.ch.a.rles.c.s.o.lu.d1@gmail.com"">pro.f.ch.a.rles.c.s.o.lu.d1@gmail.com</a>
<a href=""mailto:pro.fch.ar.les.cs.ol.ud.1@gmail.com"">pro.fch.ar.les.cs.ol.ud.1@gmail.com</a>
<a href=""mailto:p.r.o.f.c.ha.rle.s.csolu.d1@gmail.com"">p.r.o.f.c.ha.rle.s.csolu.d1@gmail.com</a>
<a href=""mailto:pr.ofc.h.ar.l.es.cs.o.l.u.d1@gmail.com"">pr.ofc.h.ar.l.es.cs.o.l.u.d1@gmail.com</a>
<a href=""mailto:p.r.ofcha.r.l.e.s.c.s.o.l.u.d.1@gmail.com"">p.r.ofcha.r.l.e.s.c.s.o.l.u.d.1@gmail.com</a>
<a href=""mailto:pr.ofcharle.sc.s.olu.d.1@gmail.com"">pr.ofcharle.sc.s.olu.d.1@gmail.com</a>
<a href=""mailto:profc.h.a.rlescs.olu.d1@gmail.com"">profc.h.a.rlescs.olu.d1@gmail.com</a>
<a href=""mailto:pr.of.cha.rl.escso.lu.d1@gmail.com"">pr.of.cha.rl.escso.lu.d1@gmail.com</a>
<a href=""mailto:pr.o.fcharl.e.sc.so.lu.d1@gmail.com"">pr.o.fcharl.e.sc.so.lu.d1@gmail.com</a>
<a href=""mailto:p.ro.f.ch.a.r.l.e.scso.lud1@gmail.com"">p.ro.f.ch.a.r.l.e.scso.lud1@gmail.com</a>
<a href=""mailto:p.r.o.fc.h.ar.l.es.cso.lud1@gmail.com"">p.r.o.fc.h.ar.l.es.cso.lud1@gmail.com</a>
<a href=""mailto:p.r.o.fch.arl.e.sc.s.olu.d1@gmail.com"">p.r.o.fch.arl.e.sc.s.olu.d1@gmail.com</a>
<a href=""mailto:p.ro.fc.h.ar.le.scsolud1@gmail.com"">p.ro.fc.h.ar.le.scsolud1@gmail.com</a>
<a href=""mailto:pro.f.c.harl.e.sc.solud1@gmail.com"">pro.f.c.harl.e.sc.solud1@gmail.com</a>
<a href=""mailto:p.r.o.fcha.r.l.escso.lud.1@gmail.com"">p.r.o.fcha.r.l.escso.lud.1@gmail.com</a>
<a href=""mailto:p.ro.fc.ha.rl.e.scs.o.l.u.d1@gmail.com"">p.ro.fc.ha.rl.e.scs.o.l.u.d1@gmail.com</a>
<a href=""mailto:pro.f.char.le.scso.l.ud.1@gmail.com"">pro.f.char.le.scso.l.ud.1@gmail.com</a>
<a href=""mailto:profc.h.ar.lesc.s.o.lud.1@gmail.com"">profc.h.ar.lesc.s.o.lud.1@gmail.com</a>
<a href=""mailto:p.rof.c.h.a.rl.e.sc.so.l.ud1@gmail.com"">p.rof.c.h.a.rl.e.sc.so.l.ud1@gmail.com</a>
<a href=""mailto:pr.o.f.c.h.a.rles.c.s.o.lu.d.1@gmail.com"">pr.o.f.c.h.a.rles.c.s.o.lu.d.1@gmail.com</a>
<a href=""mailto:pr.o.f.c.h.ar.le.scsolu.d.1@gmail.com"">pr.o.f.c.h.ar.le.scsolu.d.1@gmail.com</a>
<a href=""mailto:pr.o.f.cha.r.le.s.c.s.olud.1@gmail.com"">pr.o.f.cha.r.le.s.c.s.olud.1@gmail.com</a>
<a href=""mailto:p.rof.char.le.scso.lud.1@gmail.com"">p.rof.char.le.scso.lud.1@gmail.com</a>
<a href=""mailto:p.ro.f.c.h.arl.e.s.c.so.lu.d.1@gmail.com"">p.ro.f.c.h.arl.e.s.c.so.lu.d.1@gmail.com</a>
<a href=""mailto:profch.a.r.le.s.cs.o.l.u.d1@gmail.com"">profch.a.r.le.s.cs.o.l.u.d1@gmail.com</a>
<a href=""mailto:p.r.o.fc.harle.s.c.so.lud1@gmail.com"">p.r.o.fc.harle.s.c.so.lud1@gmail.com</a>
<a href=""mailto:p.r.of.c.h.ar.le.scsol.ud.1@gmail.com"">p.r.of.c.h.ar.le.scsol.ud.1@gmail.com</a>
<a href=""mailto:p.r.ofc.h.ar.les.csolu.d.1@gmail.com"">p.r.ofc.h.ar.les.csolu.d.1@gmail.com</a>
<a href=""mailto:p.rofc.har.le.s.c.s.o.lud.1@gmail.com"">p.rofc.har.le.s.c.s.o.lud.1@gmail.com</a>
<a href=""mailto:chukuemekauchechuku@gmail.com"">chukuemekauchechuku@gmail.com</a>
<a href=""mailto:c.hukue.m.ek.a.u.c.he.c.huk.u@gmail.com"">c.hukue.m.ek.a.u.c.he.c.huk.u@gmail.com</a>
<a href=""mailto:ch.u.ku.eme.kau.ch.ec.hu.k.u@gmail.com"">ch.u.ku.eme.kau.ch.ec.hu.k.u@gmail.com</a>
<a href=""mailto:ch.uku.eme.k.auch.ec.hu.ku@gmail.com"">ch.uku.eme.k.auch.ec.hu.ku@gmail.com</a>
<a href=""mailto:chu.k.u.em.e.ka.uc.h.ec.hu.k.u@gmail.com"">chu.k.u.em.e.ka.uc.h.ec.hu.k.u@gmail.com</a>
<a href=""mailto:c.huk.uem.ekau.ch.e.chu.k.u@gmail.com"">c.huk.uem.ekau.ch.e.chu.k.u@gmail.com</a>
<a href=""mailto:chukue.m.eka.uch.echuk.u@gmail.com"">chukue.m.eka.uch.echuk.u@gmail.com</a>
<a href=""mailto:c.hu.kuem.e.k.a.uche.chu.ku@gmail.com"">c.hu.kuem.e.k.a.uche.chu.ku@gmail.com</a>
<a href=""mailto:c.hu.kue.m.e.k.auchech.uku@gmail.com"">c.hu.kue.m.e.k.auchech.uku@gmail.com</a>
<a href=""mailto:c.hukue.m.eka.u.chec.h.u.ku@gmail.com"">c.hukue.m.eka.u.chec.h.u.ku@gmail.com</a>
<a href=""mailto:ch.u.k.ueme.kauche.c.h.uk.u@gmail.com"">ch.u.k.ueme.kauche.c.h.uk.u@gmail.com</a>
<a href=""mailto:c.h.u.kuemeka.uc.h.ec.hu.ku@gmail.com"">c.h.u.kuemeka.uc.h.ec.hu.ku@gmail.com</a>
<a href=""mailto:ch.uk.u.e.mek.auc.he.c.huk.u@gmail.com"">ch.uk.u.e.mek.auc.he.c.huk.u@gmail.com</a>
<a href=""mailto:c.hu.k.u.e.mek.auche.c.hu.ku@gmail.com"">c.hu.k.u.e.mek.auche.c.hu.ku@gmail.com</a>
<a href=""mailto:ch.u.ku.e.mekau.c.h.e.c.h.u.ku@gmail.com"">ch.u.ku.e.mekau.c.h.e.c.h.u.ku@gmail.com</a>
<a href=""mailto:c.h.uk.uem.eka.u.c.he.chu.k.u@gmail.com"">c.h.uk.uem.eka.u.c.he.chu.k.u@gmail.com</a>
<a href=""mailto:c.h.u.kueme.k.a.uch.ec.huk.u@gmail.com"">c.h.u.kueme.k.a.uch.ec.huk.u@gmail.com</a>
<a href=""mailto:c.h.u.k.u.emek.auch.e.c.h.u.ku@gmail.com"">c.h.u.k.u.emek.auch.e.c.h.u.ku@gmail.com</a>
<a href=""mailto:chuk.u.e.meka.u.ch.e.chuk.u@gmail.com"">chuk.u.e.meka.u.ch.e.chuk.u@gmail.com</a>
<a href=""mailto:ch.ukue.m.ek.au.che.chuku@gmail.com"">ch.ukue.m.ek.au.che.chuku@gmail.com</a>
<a href=""mailto:c.h.uk.ueme.k.auchec.huku@gmail.com"">c.h.uk.ueme.k.auchec.huku@gmail.com</a>
<a href=""mailto:chu.ku.e.m.e.k.auc.h.e.ch.u.ku@gmail.com"">chu.ku.e.m.e.k.auc.h.e.ch.u.ku@gmail.com</a>
<a href=""mailto:c.h.u.ku.em.ek.au.c.hech.uku@gmail.com"">c.h.u.ku.em.ek.au.c.hech.uku@gmail.com</a>
<a href=""mailto:chu.ku.em.eka.u.c.he.chu.ku@gmail.com"">chu.ku.em.eka.u.c.he.chu.ku@gmail.com</a>
<a href=""mailto:ch.u.ku.eme.ka.uche.ch.uku@gmail.com"">ch.u.ku.eme.ka.uche.ch.uku@gmail.com</a>
<a href=""mailto:c.h.uk.u.emeka.uc.h.ech.uku@gmail.com"">c.h.uk.u.emeka.uc.h.ech.uku@gmail.com</a>
<a href=""mailto:ch.u.k.u.em.eka.u.c.h.e.chuku@gmail.com"">ch.u.k.u.em.eka.u.c.h.e.chuku@gmail.com</a>
<a href=""mailto:c.h.u.ku.e.m.ek.a.u.c.hec.huk.u@gmail.com"">c.h.u.ku.e.m.ek.a.u.c.hec.huk.u@gmail.com</a>
<a href=""mailto:c.hu.kue.m.e.ka.uc.he.chuk.u@gmail.com"">c.hu.kue.m.e.ka.uc.he.chuk.u@gmail.com</a>
<a href=""mailto:c.h.uk.u.em.e.k.a.uc.hechu.k.u@gmail.com"">c.h.uk.u.em.e.k.a.uc.hechu.k.u@gmail.com</a>
<a href=""mailto:c.h.uk.ue.m.eka.u.ch.ech.u.ku@gmail.com"">c.h.uk.ue.m.eka.u.ch.ech.u.ku@gmail.com</a>
<a href=""mailto:ch.u.k.ue.m.e.k.a.uc.he.ch.uk.u@gmail.com"">ch.u.k.ue.m.e.k.a.uc.he.ch.uk.u@gmail.com</a>
<a href=""mailto:c.h.u.ku.e.me.kauc.he.ch.uku@gmail.com"">c.h.u.ku.e.me.kauc.he.ch.uku@gmail.com</a>
<a href=""mailto:ch.uk.u.e.me.k.a.uc.hechu.ku@gmail.com"">ch.uk.u.e.me.k.a.uc.hechu.ku@gmail.com</a>
<a href=""mailto:chu.k.u.e.mek.a.u.chech.uku@gmail.com"">chu.k.u.e.mek.a.u.chech.uku@gmail.com</a>
<a href=""mailto:c.h.u.k.ue.m.ek.a.uch.ec.h.u.ku@gmail.com"">c.h.u.k.ue.m.ek.a.uch.ec.h.u.ku@gmail.com</a>
<a href=""mailto:chu.kue.mek.a.uch.e.chu.k.u@gmail.com"">chu.kue.mek.a.uch.e.chu.k.u@gmail.com</a>
<a href=""mailto:chuk.u.e.m.e.k.a.uc.hechuk.u@gmail.com"">chuk.u.e.m.e.k.a.uc.hechuk.u@gmail.com</a>
<a href=""mailto:c.h.u.ku.e.m.e.ka.u.chec.huku@gmail.com"">c.h.u.ku.e.m.e.ka.u.chec.huku@gmail.com</a>
<a href=""mailto:chuku.e.meka.uch.e.chu.ku@gmail.com"">chuku.e.meka.uch.e.chu.ku@gmail.com</a>
<a href=""mailto:c.h.u.k.uemekau.chech.u.k.u@gmail.com"">c.h.u.k.uemekau.chech.u.k.u@gmail.com</a>
<a href=""mailto:c.h.ukue.mekauche.c.h.uk.u@gmail.com"">c.h.ukue.mekauche.c.h.uk.u@gmail.com</a>
<a href=""mailto:chuk.u.e.me.kauc.h.e.chuk.u@gmail.com"">chuk.u.e.me.kauc.h.e.chuk.u@gmail.com</a>
<a href=""mailto:ch.u.k.uem.e.kau.che.c.h.u.ku@gmail.com"">ch.u.k.uem.e.kau.che.c.h.u.ku@gmail.com</a>
<a href=""mailto:c.h.ukueme.ka.u.c.hec.huku@gmail.com"">c.h.ukueme.ka.u.c.hec.huku@gmail.com</a>
<a href=""mailto:c.h.ukuem.ek.au.c.h.e.c.h.uku@gmail.com"">c.h.ukuem.ek.au.c.h.e.c.h.uku@gmail.com</a>
<a href=""mailto:ch.uku.e.m.ek.auch.e.c.h.uk.u@gmail.com"">ch.uku.e.m.ek.auch.e.c.h.uk.u@gmail.com</a>
<a href=""mailto:c.hu.k.ue.me.kau.c.hec.hu.ku@gmail.com"">c.hu.k.ue.me.kau.c.hec.hu.ku@gmail.com</a>
<a href=""mailto:ch.u.k.u.em.e.ka.uche.chu.k.u@gmail.com"">ch.u.k.u.em.e.ka.uche.chu.k.u@gmail.com</a>
<a href=""mailto:c.hukue.m.eka.uc.h.e.c.h.uku@gmail.com"">c.hukue.m.eka.uc.h.e.c.h.uku@gmail.com</a>
<a href=""mailto:c.hu.kuemek.auch.echu.ku@gmail.com"">c.hu.kuemek.auch.echu.ku@gmail.com</a>
<a href=""mailto:c.h.uk.u.e.m.eka.u.ch.ec.h.uk.u@gmail.com"">c.h.uk.u.e.m.eka.u.ch.ec.h.uk.u@gmail.com</a>
<a href=""mailto:c.h.uk.ue.me.k.a.uch.e.ch.u.ku@gmail.com"">c.h.uk.ue.me.k.a.uch.e.ch.u.ku@gmail.com</a>
<a href=""mailto:c.hu.k.ue.me.ka.u.chechu.ku@gmail.com"">c.hu.k.ue.me.ka.u.chechu.ku@gmail.com</a>
<a href=""mailto:c.huku.e.m.e.k.auc.h.e.ch.u.ku@gmail.com"">c.huku.e.m.e.k.auc.h.e.ch.u.ku@gmail.com</a>
<a href=""mailto:ch.ukue.mekau.c.hec.hu.ku@gmail.com"">ch.ukue.mekau.c.hec.hu.ku@gmail.com</a>
<a href=""mailto:ch.uk.u.e.me.kauc.h.ech.u.k.u@gmail.com"">ch.uk.u.e.me.kauc.h.ech.u.k.u@gmail.com</a>
<a href=""mailto:c.hu.k.ue.me.k.a.u.chech.uku@gmail.com"">c.hu.k.ue.me.k.a.u.chech.uku@gmail.com</a>
<a href=""mailto:c.hu.k.u.emeka.uch.echuk.u@gmail.com"">c.hu.k.u.emeka.uch.echuk.u@gmail.com</a>
<a href=""mailto:chuk.ue.m.e.kauch.ec.h.uku@gmail.com"">chuk.ue.m.e.kauch.ec.h.uku@gmail.com</a>
<a href=""mailto:c.h.u.kuemekauc.hech.uku@gmail.com"">c.h.u.kuemekauc.hech.uku@gmail.com</a>
<a href=""mailto:ch.uku.e.mekauch.e.ch.uk.u@gmail.com"">ch.uku.e.mekauch.e.ch.uk.u@gmail.com</a>
<a href=""mailto:ch.u.ku.e.m.ek.a.u.chec.h.u.ku@gmail.com"">ch.u.ku.e.m.ek.a.u.chec.h.u.ku@gmail.com</a>
<a href=""mailto:chuk.u.e.m.eka.u.che.c.huku@gmail.com"">chuk.u.e.m.eka.u.che.c.huku@gmail.com</a>
<a href=""mailto:chu.k.u.em.ek.auch.e.ch.u.k.u@gmail.com"">chu.k.u.em.ek.auch.e.ch.u.k.u@gmail.com</a>
<a href=""mailto:c.hu.k.uemekauch.ec.h.u.ku@gmail.com"">c.hu.k.uemekauch.ec.h.u.ku@gmail.com</a>
<a href=""mailto:c.h.u.kue.m.e.k.au.c.he.c.h.u.ku@gmail.com"">c.h.u.kue.m.e.k.au.c.he.c.h.u.ku@gmail.com</a>
<a href=""mailto:c.h.uk.ue.me.k.a.u.c.h.echu.k.u@gmail.com"">c.h.uk.ue.me.k.a.u.c.h.echu.k.u@gmail.com</a>
<a href=""mailto:ch.u.ku.em.ek.a.u.c.h.echuk.u@gmail.com"">ch.u.ku.em.ek.a.u.c.h.echuk.u@gmail.com</a>
<a href=""mailto:chuk.u.eme.k.au.c.hechu.ku@gmail.com"">chuk.u.eme.k.au.c.hechu.ku@gmail.com</a>
<a href=""mailto:c.hukuem.ekau.c.h.ec.h.u.k.u@gmail.com"">c.hukuem.ekau.c.h.ec.h.u.k.u@gmail.com</a>
<a href=""mailto:c.hu.ku.e.mekau.c.hec.huku@gmail.com"">c.hu.ku.e.mekau.c.hec.huku@gmail.com</a>
<a href=""mailto:chuk.uemeka.u.c.hech.u.ku@gmail.com"">chuk.uemeka.u.c.hech.u.ku@gmail.com</a>
<a href=""mailto:ch.u.ku.emek.a.u.c.h.ec.hu.k.u@gmail.com"">ch.u.ku.emek.a.u.c.h.ec.hu.k.u@gmail.com</a>
<a href=""mailto:c.h.u.k.u.em.ek.au.che.chuk.u@gmail.com"">c.h.u.k.u.em.ek.au.che.chuk.u@gmail.com</a>
<a href=""mailto:c.hu.kue.mek.a.uc.h.echuku@gmail.com"">c.hu.kue.mek.a.uc.h.echuku@gmail.com</a>
<a href=""mailto:c.huku.em.e.ka.u.ch.echuk.u@gmail.com"">c.huku.em.e.ka.u.ch.echuk.u@gmail.com</a>
<a href=""mailto:ch.u.kuemekau.ch.e.c.huk.u@gmail.com"">ch.u.kuemekau.ch.e.c.huk.u@gmail.com</a>
<a href=""mailto:c.hukuem.ekauchech.u.ku@gmail.com"">c.hukuem.ekauchech.u.ku@gmail.com</a>
<a href=""mailto:c.h.uk.uemek.a.u.ch.e.chuk.u@gmail.com"">c.h.uk.uemek.a.u.ch.e.chuk.u@gmail.com</a>
<a href=""mailto:ch.uk.u.e.m.e.k.a.uc.h.ech.u.k.u@gmail.com"">ch.uk.u.e.m.e.k.a.uc.h.ech.u.k.u@gmail.com</a>
<a href=""mailto:chuk.ue.mek.a.uch.e.chu.ku@gmail.com"">chuk.ue.mek.a.uch.e.chu.ku@gmail.com</a>
<a href=""mailto:ch.uku.e.me.kau.ch.e.ch.u.k.u@gmail.com"">ch.uku.e.me.kau.ch.e.ch.u.k.u@gmail.com</a>
<a href=""mailto:ch.uk.ue.meka.uchec.hu.ku@gmail.com"">ch.uk.ue.meka.uchec.hu.ku@gmail.com</a>
<a href=""mailto:c.huku.e.m.ek.a.u.c.h.ec.hu.ku@gmail.com"">c.huku.e.m.ek.a.u.c.h.ec.hu.ku@gmail.com</a>
<a href=""mailto:c.hukue.meka.u.c.h.e.c.h.uku@gmail.com"">c.hukue.meka.u.c.h.e.c.h.uku@gmail.com</a>
<a href=""mailto:chuk.uem.e.k.a.u.ch.ec.h.u.k.u@gmail.com"">chuk.uem.e.k.a.u.ch.ec.h.u.k.u@gmail.com</a>
<a href=""mailto:ch.uk.uem.e.kau.ch.ec.h.u.ku@gmail.com"">ch.uk.uem.e.kau.ch.ec.h.u.ku@gmail.com</a>
<a href=""mailto:ch.ukuem.e.ka.uc.he.c.h.u.ku@gmail.com"">ch.ukuem.e.ka.uc.he.c.h.u.ku@gmail.com</a>
<a href=""mailto:c.h.u.k.u.emek.au.chec.huku@gmail.com"">c.h.u.k.u.emek.au.chec.huku@gmail.com</a>
<a href=""mailto:c.h.ukue.meka.u.c.he.c.huku@gmail.com"">c.h.ukue.meka.u.c.he.c.huku@gmail.com</a>
<a href=""mailto:ch.uku.e.me.k.au.c.hec.hu.ku@gmail.com"">ch.uku.e.me.k.au.c.hec.hu.ku@gmail.com</a>
<a href=""mailto:c.h.uk.uem.ekauc.h.ec.huk.u@gmail.com"">c.h.uk.uem.ekauc.h.ec.huk.u@gmail.com</a>
<a href=""mailto:ch.u.ku.e.m.e.ka.u.c.h.e.ch.uku@gmail.com"">ch.u.ku.e.m.e.ka.u.c.h.e.ch.uku@gmail.com</a>
<a href=""mailto:c.h.u.ku.eme.k.a.u.ch.e.c.huk.u@gmail.com"">c.h.u.ku.eme.k.a.u.ch.e.c.huk.u@gmail.com</a>
<a href=""mailto:c.huku.e.m.ekauch.e.c.hu.k.u@gmail.com"">c.huku.e.m.ekauch.e.c.hu.k.u@gmail.com</a>
<a href=""mailto:c.h.u.kueme.ka.uchec.h.u.k.u@gmail.com"">c.h.u.kueme.ka.uchec.h.u.k.u@gmail.com</a>
<a href=""mailto:ch.ukue.me.k.au.c.h.ec.huku@gmail.com"">ch.ukue.me.k.au.c.h.ec.huku@gmail.com</a>
<a href=""mailto:chuku.em.ek.au.ch.echuk.u@gmail.com"">chuku.em.ek.au.ch.echuk.u@gmail.com</a>
<a href=""mailto:c.h.uku.em.e.k.auch.e.chu.k.u@gmail.com"">c.h.uku.em.e.k.auch.e.chu.k.u@gmail.com</a>
<a href=""mailto:chukue.m.ekau.ch.ec.hu.ku@gmail.com"">chukue.m.ekau.ch.ec.hu.ku@gmail.com</a>
<a href=""mailto:ch.uku.emek.au.ch.e.c.huk.u@gmail.com"">ch.uku.emek.au.ch.e.c.huk.u@gmail.com</a>
<a href=""mailto:ch.u.kue.m.ekau.c.h.e.ch.uku@gmail.com"">ch.u.kue.m.ekau.c.h.e.ch.uku@gmail.com</a>
<a href=""mailto:c.h.uk.ue.me.ka.u.che.chuk.u@gmail.com"">c.h.uk.ue.me.ka.u.che.chuk.u@gmail.com</a>
<a href=""mailto:c.h.uk.u.e.meka.u.chech.u.ku@gmail.com"">c.h.uk.u.e.meka.u.chech.u.ku@gmail.com</a>
<a href=""mailto:ch.uk.u.e.mek.a.uchechu.k.u@gmail.com"">ch.uk.u.e.mek.a.uchechu.k.u@gmail.com</a>
<a href=""mailto:ch.ukuemeka.uc.hechuku@gmail.com"">ch.ukuemeka.uc.hechuku@gmail.com</a>
<a href=""mailto:c.h.uk.u.e.meka.u.c.h.e.ch.uku@gmail.com"">c.h.uk.u.e.meka.u.c.h.e.ch.uku@gmail.com</a>
<a href=""mailto:chu.k.uem.eka.u.che.chuk.u@gmail.com"">chu.k.uem.eka.u.che.chuk.u@gmail.com</a>
<a href=""mailto:c.h.u.k.u.e.meka.uc.h.echuku@gmail.com"">c.h.u.k.u.e.meka.uc.h.echuku@gmail.com</a>
<a href=""mailto:chuk.uem.e.k.a.uch.ec.h.uku@gmail.com"">chuk.uem.e.k.a.uch.ec.h.uku@gmail.com</a>
<a href=""mailto:c.h.u.kuem.e.ka.uc.h.e.c.h.u.ku@gmail.com"">c.h.u.kuem.e.ka.uc.h.e.c.h.u.ku@gmail.com</a>
<a href=""mailto:c.h.u.ku.em.ek.a.u.c.h.ec.h.uku@gmail.com"">c.h.u.ku.em.ek.a.u.c.h.ec.h.uku@gmail.com</a>
<a href=""mailto:c.huku.e.me.ka.uc.h.ec.h.uku@gmail.com"">c.huku.e.me.ka.uc.h.ec.h.uku@gmail.com</a>
<a href=""mailto:c.huk.ueme.k.auchechuku@gmail.com"">c.huk.ueme.k.auchechuku@gmail.com</a>
<a href=""mailto:ch.u.ku.e.me.ka.u.c.h.ech.uku@gmail.com"">ch.u.ku.e.me.ka.u.c.h.ech.uku@gmail.com</a>
<a href=""mailto:chuk.u.e.m.e.k.a.u.chechu.ku@gmail.com"">chuk.u.e.m.e.k.a.u.chechu.ku@gmail.com</a>
<a href=""mailto:chukueme.k.au.c.he.ch.uku@gmail.com"">chukueme.k.au.c.he.ch.uku@gmail.com</a>
<a href=""mailto:c.huk.uemeka.uch.ec.huku@gmail.com"">c.huk.uemeka.uch.ec.huku@gmail.com</a>
<a href=""mailto:chu.k.ue.m.e.ka.uc.h.e.ch.uku@gmail.com"">chu.k.ue.m.e.ka.uc.h.e.ch.uku@gmail.com</a>
<a href=""mailto:chuku.eme.ka.uche.c.h.uku@gmail.com"">chuku.eme.ka.uche.c.h.uku@gmail.com</a>
<a href=""mailto:c.h.uk.u.e.me.k.a.u.ch.ec.hu.ku@gmail.com"">c.h.uk.u.e.me.k.a.u.ch.ec.hu.ku@gmail.com</a>
<a href=""mailto:ch.uk.u.e.meka.uc.h.ec.hu.ku@gmail.com"">ch.uk.u.e.meka.uc.h.ec.hu.ku@gmail.com</a>
<a href=""mailto:c.hu.k.ueme.ka.uc.h.echuku@gmail.com"">c.hu.k.ueme.ka.uc.h.echuku@gmail.com</a>
<a href=""mailto:chuku.e.m.e.k.a.u.c.hec.h.uk.u@gmail.com"">chuku.e.m.e.k.a.u.c.hec.h.uk.u@gmail.com</a>
<a href=""mailto:ch.u.k.uemek.a.u.c.h.e.chu.ku@gmail.com"">ch.u.k.uemek.a.u.c.h.e.chu.ku@gmail.com</a>
<a href=""mailto:ch.uk.ue.meka.u.chec.huku@gmail.com"">ch.uk.ue.meka.u.chec.huku@gmail.com</a>
<a href=""mailto:chu.kuemek.a.u.c.h.echuk.u@gmail.com"">chu.kuemek.a.u.c.h.echuk.u@gmail.com</a>
<a href=""mailto:ch.uku.em.ek.au.c.h.e.c.hu.k.u@gmail.com"">ch.uku.em.ek.au.c.h.e.c.hu.k.u@gmail.com</a>
<a href=""mailto:chu.k.u.e.mek.auch.e.chu.k.u@gmail.com"">chu.k.u.e.mek.auch.e.chu.k.u@gmail.com</a>
<a href=""mailto:chuku.e.m.ekauche.chuku@gmail.com"">chuku.e.m.ekauche.chuku@gmail.com</a>
<a href=""mailto:chuk.ueme.k.a.u.c.hec.hu.ku@gmail.com"">chuk.ueme.k.a.u.c.hec.hu.ku@gmail.com</a>
<a href=""mailto:chu.kueme.k.a.uc.hec.h.u.ku@gmail.com"">chu.kueme.k.a.uc.hec.h.u.ku@gmail.com</a>
<a href=""mailto:c.hu.kuemeka.u.c.h.ec.huk.u@gmail.com"">c.hu.kuemeka.u.c.h.ec.huk.u@gmail.com</a>
<a href=""mailto:chuku.eme.kauc.h.ech.uku@gmail.com"">chuku.eme.kauc.h.ech.uku@gmail.com</a>
<a href=""mailto:c.hu.k.u.e.m.ek.au.c.hechu.ku@gmail.com"">c.hu.k.u.e.m.ek.au.c.hechu.ku@gmail.com</a>
<a href=""mailto:c.huk.ue.m.e.kau.c.h.e.c.hu.ku@gmail.com"">c.huk.ue.m.e.kau.c.h.e.c.hu.ku@gmail.com</a>
<a href=""mailto:chuku.em.ekauc.hec.hu.k.u@gmail.com"">chuku.em.ekauc.hec.hu.k.u@gmail.com</a>
<a href=""mailto:ch.uk.u.e.m.ekau.ch.e.chuku@gmail.com"">ch.uk.u.e.m.ekau.ch.e.chuku@gmail.com</a>
<a href=""mailto:ch.u.k.u.e.m.e.k.a.u.che.chuku@gmail.com"">ch.u.k.u.e.m.e.k.a.u.che.chuku@gmail.com</a>
<a href=""mailto:chu.ku.em.e.k.a.u.c.he.chuku@gmail.com"">chu.ku.em.e.k.a.u.c.he.chuku@gmail.com</a>
<a href=""mailto:chu.k.uemek.au.c.hec.h.uku@gmail.com"">chu.k.uemek.au.c.hec.h.uku@gmail.com</a>
<a href=""mailto:c.h.uk.u.e.mekau.c.h.e.chu.k.u@gmail.com"">c.h.uk.u.e.mekau.c.h.e.chu.k.u@gmail.com</a>
<a href=""mailto:chuk.u.e.mek.a.uch.ech.uku@gmail.com"">chuk.u.e.mek.a.uch.ech.uku@gmail.com</a>
<a href=""mailto:ch.u.kuemek.a.u.ch.echuku@gmail.com"">ch.u.kuemek.a.u.ch.echuku@gmail.com</a>
<a href=""mailto:chukuem.e.k.a.u.c.h.ech.uk.u@gmail.com"">chukuem.e.k.a.u.c.h.ech.uk.u@gmail.com</a>
<a href=""mailto:ch.uku.e.me.kau.c.h.e.chuk.u@gmail.com"">ch.uku.e.me.kau.c.h.e.chuk.u@gmail.com</a>
<a href=""mailto:chu.ku.e.m.ek.a.u.c.he.chu.k.u@gmail.com"">chu.ku.e.m.ek.a.u.c.he.chu.k.u@gmail.com</a>
<a href=""mailto:ch.u.ku.e.me.k.a.uchec.h.uku@gmail.com"">ch.u.ku.e.me.k.a.uchec.h.uku@gmail.com</a>
<a href=""mailto:c.huk.uem.e.k.a.u.ch.ec.h.u.k.u@gmail.com"">c.huk.uem.e.k.a.u.ch.ec.h.u.k.u@gmail.com</a>
<a href=""mailto:c.h.uk.ue.m.ek.au.c.h.e.c.h.uk.u@gmail.com"">c.h.uk.ue.m.ek.au.c.h.e.c.h.uk.u@gmail.com</a>
<a href=""mailto:c.h.ukue.mek.auc.h.ech.u.ku@gmail.com"">c.h.ukue.mek.auc.h.ech.u.ku@gmail.com</a>
<a href=""mailto:chukue.mek.a.u.ch.echu.k.u@gmail.com"">chukue.mek.a.u.ch.echu.k.u@gmail.com</a>
<a href=""mailto:c.hu.kue.me.ka.u.ch.e.ch.uk.u@gmail.com"">c.hu.kue.me.ka.u.ch.e.ch.uk.u@gmail.com</a>
<a href=""mailto:chuku.e.m.eka.u.chec.huku@gmail.com"">chuku.e.m.eka.u.chec.huku@gmail.com</a>
<a href=""mailto:c.hukue.mek.a.uch.ec.h.u.k.u@gmail.com"">c.hukue.mek.a.uch.ec.h.u.k.u@gmail.com</a>
<a href=""mailto:c.h.u.k.u.em.e.k.a.u.c.he.c.huk.u@gmail.com"">c.h.u.k.u.em.e.k.a.u.c.he.c.huk.u@gmail.com</a>
<a href=""mailto:c.hu.k.uem.ek.a.u.che.c.h.uk.u@gmail.com"">c.hu.k.uem.ek.a.u.che.c.h.uk.u@gmail.com</a>
<a href=""mailto:chu.k.u.eme.k.au.chechuk.u@gmail.com"">chu.k.u.eme.k.au.chechuk.u@gmail.com</a>
<a href=""mailto:c.h.ukuem.ek.a.u.c.he.chuku@gmail.com"">c.h.ukuem.ek.a.u.c.he.chuku@gmail.com</a>
<a href=""mailto:c.huk.ue.m.eka.uc.h.e.c.huku@gmail.com"">c.huk.ue.m.eka.uc.h.e.c.huku@gmail.com</a>
<a href=""mailto:chu.k.u.e.mekauc.h.e.chuku@gmail.com"">chu.k.u.e.mekauc.h.e.chuku@gmail.com</a>
<a href=""mailto:c.h.u.k.ue.mekau.c.h.ech.uku@gmail.com"">c.h.u.k.ue.mekau.c.h.ech.uku@gmail.com</a>
<a href=""mailto:chukuem.eka.uch.e.c.hu.ku@gmail.com"">chukuem.eka.uch.e.c.hu.ku@gmail.com</a>
<a href=""mailto:c.h.u.ku.e.m.ek.a.u.che.c.huku@gmail.com"">c.h.u.ku.e.m.ek.a.u.che.c.huku@gmail.com</a>
<a href=""mailto:chu.k.u.em.ekauc.h.ech.u.ku@gmail.com"">chu.k.u.em.ekauc.h.ech.u.ku@gmail.com</a>
<a href=""mailto:c.h.u.k.u.e.m.e.kauchechuku@gmail.com"">c.h.u.k.u.e.m.e.kauchechuku@gmail.com</a>
<a href=""mailto:chu.k.u.e.m.ek.auc.hech.uk.u@gmail.com"">chu.k.u.e.m.ek.auc.hech.uk.u@gmail.com</a>
<a href=""mailto:ch.ukuemek.a.u.che.c.huku@gmail.com"">ch.ukuemek.a.u.che.c.huku@gmail.com</a>
<a href=""mailto:ch.u.kuem.e.kauc.hec.h.u.ku@gmail.com"">ch.u.kuem.e.kauc.hec.h.u.ku@gmail.com</a>
<a href=""mailto:chu.ku.emek.a.uchechu.k.u@gmail.com"">chu.ku.emek.a.uchechu.k.u@gmail.com</a>
<a href=""mailto:c.huk.u.e.me.kau.c.he.chu.ku@gmail.com"">c.huk.u.e.me.kau.c.he.chu.ku@gmail.com</a>
<a href=""mailto:c.h.uk.u.em.eka.uchech.uku@gmail.com"">c.h.uk.u.em.eka.uchech.uku@gmail.com</a>
<a href=""mailto:c.huk.u.eme.kauchechuku@gmail.com"">c.huk.u.eme.kauchechuku@gmail.com</a>
<a href=""mailto:c.h.u.ku.e.meka.u.ch.e.ch.u.k.u@gmail.com"">c.h.u.ku.e.meka.u.ch.e.ch.u.k.u@gmail.com</a>
<a href=""mailto:c.hu.k.u.em.eka.u.c.h.e.c.h.u.ku@gmail.com"">c.hu.k.u.em.eka.u.c.h.e.c.h.u.ku@gmail.com</a>
<a href=""mailto:c.hu.kue.m.eka.uche.c.huk.u@gmail.com"">c.hu.kue.m.eka.uche.c.huk.u@gmail.com</a>
<a href=""mailto:c.hukueme.k.auch.e.chu.k.u@gmail.com"">c.hukueme.k.auch.e.chu.k.u@gmail.com</a>
<a href=""mailto:chu.k.u.e.m.e.k.a.u.ch.echuku@gmail.com"">chu.k.u.e.m.e.k.a.u.ch.echuku@gmail.com</a>
<a href=""mailto:chu.kueme.ka.uc.hechu.ku@gmail.com"">chu.kueme.ka.uc.hechu.ku@gmail.com</a>
<a href=""mailto:c.h.ukuem.e.ka.uc.h.e.c.h.uku@gmail.com"">c.h.ukuem.e.ka.uc.h.e.c.h.uku@gmail.com</a>
<a href=""mailto:chu.ku.em.ekauc.hec.h.u.ku@gmail.com"">chu.ku.em.ekauc.hec.h.u.ku@gmail.com</a>
<a href=""mailto:chu.k.u.e.m.e.kauch.echu.k.u@gmail.com"">chu.k.u.e.m.e.kauch.echu.k.u@gmail.com</a>
<a href=""mailto:c.h.uku.em.e.k.au.che.ch.uk.u@gmail.com"">c.h.uku.em.e.k.au.che.ch.uk.u@gmail.com</a>
<a href=""mailto:chuku.em.e.kau.c.h.e.c.huku@gmail.com"">chuku.em.e.kau.c.h.e.c.huku@gmail.com</a>
<a href=""mailto:ch.uk.u.e.meka.uche.chuk.u@gmail.com"">ch.uk.u.e.meka.uche.chuk.u@gmail.com</a>
<a href=""mailto:chuk.u.e.m.e.k.a.uc.h.echu.k.u@gmail.com"">chuk.u.e.m.e.k.a.uc.h.echu.k.u@gmail.com</a>
<a href=""mailto:c.h.u.kuem.e.kau.c.hechuku@gmail.com"">c.h.u.kuem.e.kau.c.hechuku@gmail.com</a>
<a href=""mailto:ch.uk.uem.eka.uc.h.e.c.hu.k.u@gmail.com"">ch.uk.uem.eka.uc.h.e.c.hu.k.u@gmail.com</a>
<a href=""mailto:ch.u.ku.e.m.ek.a.u.c.h.e.c.huk.u@gmail.com"">ch.u.ku.e.m.ek.a.u.c.h.e.c.huk.u@gmail.com</a>
<a href=""mailto:c.hu.kuem.e.k.a.u.ch.ech.uk.u@gmail.com"">c.hu.kuem.e.k.a.u.ch.ech.uk.u@gmail.com</a>
<a href=""mailto:chuk.ue.me.kauc.h.e.ch.uk.u@gmail.com"">chuk.ue.me.kauc.h.e.ch.uk.u@gmail.com</a>
<a href=""mailto:chu.ku.e.me.ka.uche.c.hu.ku@gmail.com"">chu.ku.e.me.ka.uche.c.hu.ku@gmail.com</a>
<a href=""mailto:ch.uk.u.e.mekau.c.hec.huk.u@gmail.com"">ch.uk.u.e.mekau.c.hec.huk.u@gmail.com</a>
<a href=""mailto:c.hukue.me.k.a.u.c.h.e.c.h.u.ku@gmail.com"">c.hukue.me.k.a.u.c.h.e.c.h.u.ku@gmail.com</a>
<a href=""mailto:chuku.eme.k.au.ch.e.c.h.u.ku@gmail.com"">chuku.eme.k.au.ch.e.c.h.u.ku@gmail.com</a>
<a href=""mailto:chuk.u.em.e.k.au.chec.h.u.ku@gmail.com"">chuk.u.em.e.k.au.chec.h.u.ku@gmail.com</a>
<a href=""mailto:c.h.u.k.u.e.me.ka.uchechu.k.u@gmail.com"">c.h.u.k.u.e.me.ka.uchechu.k.u@gmail.com</a>
<a href=""mailto:chuk.u.em.e.k.auch.ec.h.uk.u@gmail.com"">chuk.u.em.e.k.auch.ec.h.uk.u@gmail.com</a>
<a href=""mailto:chuk.ue.m.e.kauc.h.ech.u.ku@gmail.com"">chuk.ue.m.e.kauc.h.ech.u.ku@gmail.com</a>
<a href=""mailto:ch.u.kue.mekau.c.h.e.chu.ku@gmail.com"">ch.u.kue.mekau.c.h.e.chu.ku@gmail.com</a>"
0y1fjiYS,Review Pastes.io [Paste Tool Since 2020],xxsa,PHP,Tuesday 5th of March 2024 04:05:20 PM CDT,"https://pastes.io/- Paste Tool since 2020 - Pastebin Alternative -  Alternative

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Pastes.io VS Pastebin :
More features example share pages QR CODEs - Embed options .. etc
Simple Ads by Google Adsense ( Few rather than Pastebin )
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
User profile page
Trending pastes page (day, week, month, year)
Simple & responsive interface
Night Mode
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
Auto generated sitemaps
User management
Admin panel to manage pastes, syntax, users, comments, pages, languages, translations & other settings
User profile page
Trending pastes page (day, week, month, year)
QR Code for share
No Captcha for logged in users feature
.. etc"
P4C69wdR,Untitled,skimono,C++,Tuesday 5th of March 2024 04:02:42 PM CDT,"#pragma optimize (""Ofast"");
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
#include <map>
#include <string>
#include <unordered_map>
#include <cassert>
#include <bitset>

using namespace std;
//#define int long long
const int inf = 2e9;
const int mod = 998244353;

unsigned long long x[15001], y[15001], pw[15001];
unsigned long long xx[15001], yy[15001];
const unsigned long long p = 347;
int keys[256];
int zxc[64][6];
int n, i, j, g;

void solve() {
    vector <char> can;
    can.push_back('#');
    can.push_back('$');
    pw[0] = 1;
    for (i = 1; i <= 15000; i++) {
        pw[i] = pw[i - 1] * p;
    }
    for (i = 0; i < 10; i++) {
        can.push_back('0' + i);
    }
    for (i = 0; i < 26; i++) {
        can.push_back(i + 'A');
        can.push_back(i + 'a');
    }
    sort(can.begin(), can.end());
    for (i = 0; i < 64; i++) {
        keys[can[i]] = i;
    }
    for (i = 0; i < 64; i++) {
        for (j = 0; j < 6; j++) {
            if (i & (1 << j)) {
                zxc[i][5 - j] = 1;
            }
            else {
                zxc[i][5 - j] = 0;
            }
        }
    }
    int k, m;
    cin >> k >> m;
    n = k * 6;
    int last, idx;
    string s1, s2;
    int cx, cy;
    while (m--) {
        cin >> s1 >> s2;
        last = n - 1;
        for (i = 0; i < s1.size(); i++) {
            idx = keys[s1[i]];
            for (j = 0; j < 6; j++) {
                xx[last] = zxc[idx][j];
                last--;
            }
        }
        last = n - 1;
        for (i = 0; i < s2.size(); i++) {
            idx = keys[s2[i]];
            for (j = 0; j < 6; j++) {
                yy[last] = zxc[idx][j];
                last--;
            }
        }
        for (i = 0; i < n; i++) {
            x[i + 1] = x[i] * p + xx[i];
            y[i + 1] = y[i] * p + yy[i];
        }
        if (x[n] == y[n]) {
            cout << 0 << '\n';
            continue;
        }
        for (i = 1; i < n; i++) {
            if (x[n] == (y[n] - y[i] * pw[n - i]) * pw[i] + y[i]) {
                cout << i << '\n';
                break;
            }
        }
        if (i == n) {
            cout << -1 << '\n';
        }
    }
}

signed main() {
#ifdef _DEBUG
    freopen(""input.txt"", ""r "", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) solve();
}
//Deisgned by skimono
"
8SBseQMA,Untitled,smj007,Python,Tuesday 5th of March 2024 03:45:30 PM CDT,"class Deque:
    
    def __init__(self):
        self.list = []

    def isEmpty(self) -> bool:
        return len(self.list) == 0

    def append(self, value: int) -> None:
        self.list.append(value)

    def appendleft(self, value: int) -> None:
        self.list = [value] + self.list

    def pop(self) -> int:
        if len(self.list) > 0:
            last_element = self.list[-1]
            self.list = self.list[:-1]
            return last_element
        return - 1
        

    def popleft(self) -> int:
        if len(self.list) > 0:
            first_element = self.list[0]
            self.list = self.list[1:]
            return first_element

        return -1

"
ELuWY6qM,Untitled,GieleSkull44,Lua,Tuesday 5th of March 2024 03:32:47 PM CDT,"i = 1
while i = 1 do
	turtle.dig()
end"
jrsksgpC,Untitled,smj007,Python,Tuesday 5th of March 2024 03:24:33 PM CDT,"class DynamicArray:
    
    def __init__(self, capacity: int):
        self.array = [None]*capacity
        self.capacity = capacity
        self.len_array = 0


    def get(self, i: int) -> int:
        return self.array[i]

    def set(self, i: int, n: int) -> None:
        self.array[i] = n

    def pushback(self, n: int) -> None:
        if len(self.array) == self.capacity:
            self.resize()

        self.array[self.len_array] = n
        self.len_array += 1

    def popback(self) -> int:
        if self.len_array > 0:
            last_element = self.array[self.len_array - 1]
        self.len_array -= 1
        return last_element
 
    def resize(self) -> None:
        temp = [None]*self.capacity
        self.capacity = self.capacity*2
        self.array = self.array + temp

    def getSize(self) -> int:
        return self.len_array
        
    def getCapacity(self) -> int:
        return self.capacity
"
32wj8Riw,python for igdb access,afriday,Python,Tuesday 5th of March 2024 03:22:15 PM CDT,"async def get_access_token():
    token_url = ""https://id.twitch.tv/oauth2/token""
    params = {
        ""client_id"": client_id,
        ""client_secret"": client_secret,
        ""grant_type"": ""client_credentials""
    }
    async with aiohttp.ClientSession() as session:
        async with session.post(token_url, params=params) as response:
            data = await response.json()
            return data.get(""access_token"")


async def fetch_release_dates(access_token):
    base_url = ""https://api.igdb.com/v4""
    endpoint = ""/release_dates""
    headers = {
        ""Client-ID"": client_id,
        ""Authorization"": f""Bearer {access_token}"",
    }
    # Get today's date in the format required by IGDB
    today_date = datetime.utcnow().strftime('%Y-%m-%d')
    # Specify the fields and filter by today's date
    data = {
        ""fields"": ""game"",
        ""where"": f""date = '{today_date}'"",
    }
    async with aiohttp.ClientSession() as session:
        async with session.post(f""{base_url}{endpoint}"", headers=headers, json=data) as response:
            if response.status == 200:
                release_dates = await response.json()
                game_ids = [release['game'] for release in release_dates if 'game' in release]
                return game_ids
            else:
                raise Exception(f""Failed to fetch release dates: {response.status} - {response.reason}"")

async def fetch_games(access_token, game_ids):
    base_url = ""https://api.igdb.com/v4""
    endpoint = ""/games""
    headers = {
        ""Client-ID"": client_id,
        ""Authorization"": f""Bearer {access_token}"",
    }
    # Convert the list of game IDs into a comma-separated string
    game_ids_str = "","".join(str(id) for id in game_ids)
    # Specify the fields and filter by the game IDs
    data = {
        ""fields"": ""name, genres, platforms"",
        ""where"": f""id = ({game_ids_str})"",
    }
    async with aiohttp.ClientSession() as session:
        async with session.post(f""{base_url}{endpoint}"", headers=headers, json=data) as response:
            if response.status == 200:
                games_info = await response.json()
                return games_info
            else:
                raise Exception(f""Failed to fetch games: {response.status} - {response.reason}"")

@client.command()
async def releases(ctx):
    try:
        access_token = await get_access_token()
        # Fetch game IDs released today
        game_ids = await fetch_release_dates(access_token)
        await ctx.send(fetch_release_dates) #for debug purposes
        if game_ids:
            # Fetch detailed information about the games based on the IDs
            games_info = await fetch_games(access_token, game_ids)
            game_info = []            
            for game in games_info:
                # Extract the desired fields from each game
                name = game.get('name')
                genres = ', '.join(game.get('genres', []))
                platforms = ', '.join(game.get('platforms', []))
                game_info.append(f""Name: {name}\nGenres: {genres}\nPlatforms: {platforms}\n"")
            # Send the formatted game information to the Discord channel
            await ctx.send(""\n"".join(game_info))
        else:
            await ctx.send(""No games released today."")
    except Exception as e:
        await ctx.send(f""Error occurred: {e}"")"
0B0A4giY,StargateDialing,untamemadman,Lua,Tuesday 5th of March 2024 03:00:50 PM CDT,"--# Connect to the Stargate
interface = peripheral.find(""basic_interface"")

--# load the touchpoint API
os.loadAPI(""touchpoint"")

--# initialize a new button set
local t = touchpoint.new(""top"")

function dial(address)
    local addressLength = #address
    local start = interface.getChevronsEngaged() + 1
    
    for chevron = start,addressLength,1 do
        
        local symbol = address[chevron]
        
        if chevron % 2 == 0 then
            interface.rotateClockwise(symbol)
        else
            interface.rotateAntiClockwise(symbol)
        end
        
        while(not interface.isCurrentSymbol(symbol)) do
            sleep(0)
        end        
        sleep(1)

        interface.openChevron()
        sleep(1)
        interface.closeChevron()
        sleep(1)
    end 
end

addresses = {}
addresses[""Abydos""] = {26,6,14,31,11,29,0}
addresses[""Otherside""]  = {37,5,32,13,3,21,0}
addresses[""Overworld""] = {27,25,4,35,10,28,0}
addresses[""The Other""]  = {34,7,29,8,35,30,0}
addresses[""ATM Mining""] = {18,26,32,25,33,12,0}
addresses[""The Nether""] = {27,23,4,34,12,28,0}
addresses[""Reality marble""] = {16,17,23,37,8,26,0}
addresses[""The Undergrarden""] = {33,35,29,4,32,10,0}
addresses[""The End""] = {14,30,6,13,17,23,0}
addresses[""Twilight Forrest""]  = {4,26,7,38,27,12,0}
addresses[""Blood Magic Dungeon""]  = {32,25,8,23,30,5,0}
addresses[""Blue Skys Ever Bright""] = {36,11,33,31,1,17,0}
addresses[""The Beyond""] = {36,11,33,31,1,17,0}
addresses[""Lost City""] = {27,33,38,17,23,13,0}
addresses[""Alfhiem""] = {18,27,22,3,10,30,0}
addresses[""The Eather""] = {15,23,1,18,6,5,0}
addresses[""Blue Skys Ever Dawn""] = {12,9,36,13,21,14,0}
addresses[""Spatial storage""]  = {24,20,18,9,36,3,0}
addresses[""Voidscape void""]  = {3,32,8,18,25,30,0}
addresses[""Chulak""]  = {8,1,22,14,36,19,0}

addressKeys = {}
for k in pairs(addresses) do table.insert(addressKeys, k) end
table.sort(addressKeys)

--# DO NOT USE
-- addresses[""Abydos""] = {26,6,14,31,11,29,0}
-- addresses[""Chulak""] = {8,1,22,14,36,19,0}
-- addresses[""Lantea""] = {18,20,1,15,14,7,19}

local left = true

local startHeight = 2
local offsetHeight = 2

for _, key in ipairs(addressKeys) do
    if(left) then
        t:add(key, function() dial(addresses[key]) end, 2, startHeight, 14, startHeight, colors.red, colors.lime)
        left = false
    else
        t:add(key, function() dial(addresses[key]) end, 16, startHeight, 28, startHeight, colors.red, colors.lime)
        left = true
        startHeight = startHeight+offsetHeight
    end
    
end

t:add(""RESTART"", function() shell.run(""reboot"") end, 2, 25, 14, 25, colors.red, colors.lime)
t:add(""Disconnect"", function() interface.disconnectStargate() end, 16, 25, 28, 25, colors.red, colors.lime)

t:draw()

while true do
    --# handleEvents will convert monitor_touch events to button_click if it was on a button
    local event, p1 = t:handleEvents(os.pullEvent())
    if event == ""button_click"" then
        t:toggleButton(p1)
        t.buttonList[p1].func()
        t:toggleButton(p1)
    end
end"
2J6bydGV,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 02:58:48 PM CDT,"def f(a, b, m):
    if a + b >= 275:
        return m % 2 == 0
    if m == 0:
        return False
    h = [f(a+7, b, m-1), f(a, b+7, m-1), f(a+3, b, m-1), f(a, b+3, m-1), f(a*4, b, m-1), f(a, b*4, m-1)]
    return any(h) if (m-1) % 2 == 0 else all(h)
print([b for b in range(1, 217) if not f(58, b, 1) and f(58, b, 3)])"
VUgn2hEZ,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Tuesday 5th of March 2024 02:54:36 PM CDT,"https://pastes.io/- Paste Tool since 2020 - Pastebin Alternative - Free Alternative

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Pastes.io VS Pastebin :
More features example share pages QR CODEs - Embed options .. etc
Simple Ads by Google Adsense ( Few rather than Pastebin )
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
User profile page
Trending pastes page (day, week, month, year)
Simple & responsive interface
Night Mode
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
Auto generated sitemaps
User management
Admin panel to manage pastes, syntax, users, comments, pages, languages, translations & other settings
User profile page
Trending pastes page (day, week, month, year)
QR Code for share
No Captcha for logged in users feature
.. etc"
JvxkyQWV,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 02:53:59 PM CDT,"def f(a, b, m):
    if a + b >= 275:
        return m % 2 == 0
    if m == 0:
        return False
    h = [f(a+7, b, m-1), f(a, b+7, m-1), f(a+3, b, m-1), f(a, b+3, m-1), f(a*4, b, m-1), f(a, b*4, m-1)]
    return any(h) if (m-1) % 2 == 0 else all(h)
print([b for b in range(1, 217) if not f(58, b, 1) and f(58, b, 2)])"
zzqBM4ai,cash,Nenogzar,Python,Tuesday 5th of March 2024 02:46:30 PM CDT,"class Cashier:
    num = [5000, 2000, 1000, 500, 200, 100, 50, 10, 5, 1]
    n = len(num)
    cash = [0] * n
    overall = 0

    def set_data(self, s):
        self.overall = 0
        s = s.split(',')
        for e in s:
            parts = e.split('-')
            if len(parts) == 2:
                val, cnt = map(int, parts)
                self.cash[self.num.index(val)] = cnt
                self.overall += val * cnt
            else:
                print('Invalid input format:', e)
                return

    def show_total_amount(self):
        print('Total at checkout', self.overall, 'eur.')
        for i in range(self.n - 1, -1, -1):
            if self.cash[i]:
                print(self.num[i], '-', self.cash[i])
        print()

    def sell_product(self, price, income):
        cash_buf = self.cash.copy()
        change = income - price
        if change < 0:
            print('Insufficient funds. Operation rejected.')
            print()
            return
        for i in range(self.n):
            self.cash[i] += income // self.num[i]
            income = income % self.num[i]
        change_cash = [0] * self.n
        for i in range(self.n):
            x = min(change // self.num[i], self.cash[i])
            change_cash[i] += x
            change -= x * self.num[i]
            self.cash[i] -= x
        if change:
            print('Not enough currency! The cash desk cannot issue the remaining', change, 'eur.')
            print('Top up the cash register and repeat the operation')
            print()
            self.cash = cash_buf.copy()
            return
        for i in range(self.n - 1, -1, -1):
            if change_cash[i]:
                print(self.num[i], '-', change_cash[i])
        print()


cashier = Cashier()
request = input()
while request != '0':
    if request[0] == '1':
        cashier.set_data(request[2:])
    elif request[0] == '2':
        price, income = map(int, request[2:].split())
        cashier.sell_product(price, income)
    elif request == '3':
        cashier.show_total_amount()
    else:
        print('Invalid request.')
        print()
    request = input()


#  test input
"""""" loading a cassette with banknotes """"""
#  1, 5000-10,2000-10,1000-10,500-10,200-10,100-10,50-10,10-10,5-10,1-10


""""""  banknote availability check """"""
#  3


"""""" This input means that the customer buys a product at a price of €50 and pays with a €100 note/coin.""""""
#  2,50 100"
eDqCycac,Untitled,smj007,Python,Tuesday 5th of March 2024 02:41:30 PM CDT,"class HitCounter:

    def __init__(self):
        self.counter = deque()

    def hit(self, timestamp: int) -> None:
        self.counter.append(timestamp)
        
    def getHits(self, timestamp: int) -> int:

        while len(self.counter) > 0 and self.counter[0] <= timestamp - 300:
            self.counter.popleft()

        return len(self.counter)"
zv42bww1,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 02:38:59 PM CDT,"file = open('17_9840.txt')
A = list(map(int, file.readlines()))
max39 = 0
C = []
N = [x for x in range(1000, 10_000)]
for i in range(len(A)):
    if  abs(A[i]) in N and abs(A[i]) % 100 == 39:
        max39 = max(max39, A[i])
for i in range(1, len(A)):
    if ((abs(A[i]) in N and abs(A[i-1]) not in N) or (abs(A[i-1]) in N and abs(A[i]) not in N)) and ((A[i] + A[i-1])**2 <= max39*82):
        C.append(A[i] + A[i-1])
C.sort()
print(len(C), C[-1])"
6JBy6pDB,Untitled,Josif_tepe,C++,Tuesday 5th of March 2024 02:38:54 PM CDT,"#include <iostream>
#include <vector>
#include <queue>
//#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
int n, d;
ll p;
int v[maxn];
bool check(int x) {
    priority_queue<int> pq, greatest;
    for(int i = 0; i < n; i++) {
        pq.push(v[i]);
    }
    ll sum = 0;
    for(int i = 1; i <= d; i++) {
        int max_element = 0;
        if(!pq.empty()) {
            max_element = pq.top();
            pq.pop();
        }
        sum += max_element;
        if(i > x) {
            pq.push(greatest.top());
            greatest.pop();
        }
        greatest.push(max_element);
    }
    return sum >= p;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> p >> d;
    
    
    for(int i = 0; i < n; i++) {
        cin >> v[i];
    }
    
    int L = 1, R = d;
    int res = -1;
    while(L <= R) {
        int mid = (L + R) / 2;
        if(check(mid)) {
            L = mid + 1;
            res = max(res, mid);
        }
        else {
            R = mid - 1;
        }
    }
    if(res == d) {
        cout << ""seedno"" << endl;
    }
    else {
        cout << res << endl;
    }
    return 0;
}
"
MDNf5Ymv,Json fur,Lizalovv,JSON,Tuesday 5th of March 2024 02:35:36 PM CDT,"{
  ""title"": ""Ads Verification"",
  ""message"": ""Please verify the content of the advertisement."",
  ""positiveButton"": ""Verify"",
  ""negativeButton"": ""Cancel"",
  ""positiveButtonLink"": ""https://www.google.com"",
  ""webViewLayout"": {
    ""progressBarColor"": ""#FF0000""
  }
}
"
VDQb4Nmu,Shadow Transferance,MichaelCrow,C++,Tuesday 5th of March 2024 02:34:51 PM CDT,"class spell_custom_shadow_damage_transfer : public SpellScriptLoader {
public:
    spell_custom_shadow_damage_transfer() : SpellScriptLoader(""spell_custom_shadow_damage_transfer"") {}

    class spell_custom_shadow_damage_transfer_SpellScript : public SpellScript {
        PrepareSpellScript(spell_custom_shadow_damage_transfer_SpellScript);

        void HandleOnHit() {
            if (Unit* caster = GetCaster()) {
                if (Unit* target = GetHitUnit()) {
                    // Assuming SPELL_CORRUPTION is the spell ID for Corruption
                    int32 corruptionDuration = 0, curseDuration = 0, uaDuration = 0;

                    // Check for Corruption or Seed of Corruption
                    if (Aura* aura = target->GetAura(SPELL_WARLOCK_CORRUPTION_R2, caster->GetGUID())) {
                        corruptionDuration = aura->GetDuration(); // Positive value for Corruption
                    }
                    else if (Aura* aura = target->GetAura(SPELL_WARLOCK_SEED_OF_CORRUPTION_R1, caster->GetGUID())) {
                        corruptionDuration = -aura->GetDuration(); // Negative value for Seed of Corruption
                    }

                    // Check for Curse of Agony or Curse of Doom
                    if (Aura* aura = target->GetAura(SPELL_WARLOCK_CURSE_OF_AGONY_R2, caster->GetGUID())) {
                        curseDuration = aura->GetDuration(); // Positive value for Curse of Agony
                    }
                    else if (Aura* aura = target->GetAura(SPELL_WARLOCK_CURSE_OF_DOOM_R1, caster->GetGUID())) {
                        curseDuration = -aura->GetDuration(); // Negative value for Curse of Doom
                    }

                    // Check for Unstable Affliction
                    if (Aura* aura = target->GetAura(SPELL_UNSTABLE_AFFLICTION_R1, caster->GetGUID())) {
                        uaDuration = aura->GetDuration();
                    }

                    if (!(corruptionDuration == 0 && curseDuration == 0 && uaDuration == 0))
                    {
                        CastSpellExtraArgs args(TRIGGERED_FULL_MASK);

                        args.AddSpellMod(SPELLVALUE_BASE_POINT0, corruptionDuration);
                        args.AddSpellMod(SPELLVALUE_BASE_POINT1, curseDuration);
                        args.AddSpellMod(SPELLVALUE_BASE_POINT2, uaDuration);
                        args.SetOriginalCaster(target->GetGUID());
                        target->CastSpell(caster, 85, args);

                        target->RemoveAura(SPELL_WARLOCK_CORRUPTION_R2, caster->GetGUID());
                        target->RemoveAura(SPELL_WARLOCK_SEED_OF_CORRUPTION_R1, caster->GetGUID());
                        target->RemoveAura(SPELL_WARLOCK_CURSE_OF_AGONY_R2, caster->GetGUID());
                        target->RemoveAura(SPELL_WARLOCK_CURSE_OF_DOOM_R1, caster->GetGUID());
                        target->RemoveAura(SPELL_UNSTABLE_AFFLICTION_R1, caster->GetGUID());

                        //caster->GetSpellHistory()->ModifyCooldown(82, 45000);
                        ///caster->GetSpellHistory()->AddCooldown(82, 0, 45s);

                        ///target->CastSpell(caster, 86);
                    }
                    else
                        SetHitDamage(0);
                    }
                }
            }

        SpellCastResult CheckCast()
        {
            Unit* caster = GetCaster();
            if (Unit* target = GetExplTargetUnit())
            {
                if (target->HasAura(SPELL_WARLOCK_CORRUPTION_R2) || target->HasAura(SPELL_WARLOCK_CURSE_OF_AGONY_R2) || target->HasAura(SPELL_WARLOCK_SEED_OF_CORRUPTION_R1)|| target->HasAura(SPELL_WARLOCK_CURSE_OF_DOOM_R1)|| target->HasAura(SPELL_UNSTABLE_AFFLICTION_R1))
                {
                    return SPELL_CAST_OK;
                }
                else
                    return SPELL_FAILED_BAD_TARGETS;
            }
            else
                return SPELL_FAILED_NO_VALID_TARGETS;

            return SPELL_FAILED_FIZZLE;
        }

        void Register() override
        {
            OnCheckCast += SpellCheckCastFn(spell_custom_shadow_damage_transfer_SpellScript::CheckCast);
            OnHit += SpellHitFn(spell_custom_shadow_damage_transfer_SpellScript::HandleOnHit);
        }
    };

    SpellScript* GetSpellScript() const override {
        return new spell_custom_shadow_damage_transfer_SpellScript();
    }
};





class spell_custom_shadow_damage_apply : public SpellScriptLoader {
public:
    spell_custom_shadow_damage_apply() : SpellScriptLoader(""spell_custom_shadow_damage_apply"") {}

    class spell_custom_shadow_damage_apply_SpellScript : public SpellScript {
        PrepareSpellScript(spell_custom_shadow_damage_apply_SpellScript);

        void HandleOnHit() {
            if (Unit* caster = GetCaster()) {
                // Check if the warlock has the dummy aura
                if (Aura* aura = caster->GetAura(85)) {
                    // Ensure the caster/owner of the aura is not the current target
                    if (Unit* target = GetHitUnit()) {
                       
                            int32 Corruptionduration = aura->GetEffect(0)->GetAmount();
                            int32 Curseduration = aura->GetEffect(1)->GetAmount();
                            int32 UAduration = aura->GetEffect(2)->GetAmount();

                            uint32 corruptionSpell = 0;
                            uint32 curseSpell = 0;
                            uint32 UASpell = 0;
                            
                            if (Corruptionduration > 0)
                                corruptionSpell = SPELL_WARLOCK_CORRUPTION_R2;
                            else if (Corruptionduration < 0)
                                corruptionSpell = SPELL_WARLOCK_SEED_OF_CORRUPTION_R1;

                            if (Curseduration > 0)
                                curseSpell = SPELL_WARLOCK_CURSE_OF_AGONY_R2;
                            else if (Curseduration < 0)
                                curseSpell = SPELL_WARLOCK_CURSE_OF_DOOM_R1;

                            if (UAduration)
                                UASpell = SPELL_UNSTABLE_AFFLICTION_R1;

                            if (Corruptionduration != 0)
                            {
                                CastDoTSpell(target, corruptionSpell, std::abs(Corruptionduration), caster);
                            }
                            if (Curseduration != 0)
                            {
                                CastDoTSpell(target, curseSpell, std::abs(Curseduration), caster);
                            }
                            if (UAduration != 0)
                            {
                                CastDoTSpell(target, SPELL_UNSTABLE_AFFLICTION_R1, std::abs(UAduration), caster);
                            }

                            // Remove the dummy aura
                            caster->RemoveAurasDueToSpell(85);
                            //caster->GetSpellHistory()->ModifyCooldown(83, 45000);
                            ///caster->GetSpellHistory()->AddCooldown(83, 0, 45s);

                    }
                }
            }
        }

        void CastDoTSpell(Unit* target, uint32 spellId, int32 duration, Unit* caster) {
            caster->CastSpell(target, spellId, true);
            if (Aura* newAura = target->GetAura(spellId, caster->GetGUID())) {
                newAura->SetDuration(duration);
            }
        }

        SpellCastResult CheckCast()
        {
            Unit* caster = GetCaster();
            if (Unit* target = GetExplTargetUnit())
            {
                if (Aura* COaura = caster->GetAura(85))
                {
                    if (COaura->GetCasterGUID() != target->GetGUID())
                        return SPELL_CAST_OK;
                }
                else
                    return SPELL_FAILED_BAD_TARGETS;
            }
            else
                return SPELL_FAILED_NO_VALID_TARGETS;

            return SPELL_FAILED_FIZZLE;
        }

        void Register() override {
            OnHit += SpellHitFn(spell_custom_shadow_damage_apply_SpellScript::HandleOnHit);
            OnCheckCast += SpellCheckCastFn(spell_custom_shadow_damage_apply_SpellScript::CheckCast);
        }
    };

    SpellScript* GetSpellScript() const override {
        return new spell_custom_shadow_damage_apply_SpellScript();
    }
};
"
K0dGNz8D,Unfocus All Windows & Taskbar Minimize.ahk,Lorenzo501,Autohotkey,Tuesday 5th of March 2024 02:26:59 PM CDT,"#Requires AutoHotkey 2.0

; This will unfocus all windows (except desktop)
WinActivate(""ahk_class Progman"")

; This will unfocus the taskbar and focus the foreground window behind it
WinMinimize(""ahk_class Shell_TrayWnd"")"
sY8yD1UR,Untitled,AliAbdulKareem,Python,Tuesday 5th of March 2024 02:26:16 PM CDT,"import cv2
import numpy as np
import os


known_faces = []
known_names = []


image = cv2.imread(f""C:\\Users\\HP\\Desktop\\steve.jpg"")
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
face = np.reshape(gray, (gray.shape[0], gray.shape[1]))
known_faces.append(face)
known_names.append(filename.split(""."")[0])

# تشغيل الكاميرا
video_capture = cv2.VideoCapture(0)

while True:
    # التقاط صورة من الكاميرا
    ret, frame = video_capture.read()

    # RGB تحويل الصورة إلى صيغة
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # تحويل الصورة إلى تدرج رمادي
    gray_frame = cv2.cvtColor(rgb_frame, cv2.COLOR_BGR2GRAY)

    # PCA تطبيق خوارزمية
    eigen_faces, eigen_values = cv2.PCACompute(gray_frame.reshape(-1, 1), maxComponents=100)

    # مطابقة الوجوه مع صور الطلاب
    for face in known_faces:
        projection = np.dot(eigen_faces, face)
        distance = np.linalg.norm(projection - face)
        if distance < 0.6:
            name = known_names[known_faces.index(face)]
            break
    else:
        name = ""غير معروف""

    # تحديد اسم الطالب
    for face_distance, name in zip(matches, known_names):
        if face_distance < 0.6:
            break
    else:
        name = ""غير معروف""

    # رسم مربع حول وجه الطالب وكتابة اسمه
    cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)
    cv2.putText(frame, name, (left + 6, bottom - 6), cv2.FONT_HERSHEY_SIMPLEX,
                1, (0, 0, 255), 2)

    # عرض الصورة
    cv2.imshow(""Face Recognition"", frame)

    # للخروج من البرنامج و الضغط على
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

video_capture.release()
cv2.destroyAllWindows()"
3Sx1JuCi,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 02:25:56 PM CDT,"def f(n):
    if n < 2:
        return n
    if n >= 2:
        return f(n // 2) * 10 + n % 2
for n in range(1, 10**20):
    if f(n) == 100000100001000100101:
        print(n)
        break"
Atf6YcJp,sports,Radoslav_03,MySQL,Tuesday 5th of March 2024 02:25:54 PM CDT,"SELECT * FROM students ORDER BY name;
 
DELETE FROM students
WHERE egn = ""9207186371"";
 
SELECT students.name, sport.name
FROM students
JOIN student_sport ON students.id = student_sport.student_id
JOIN sportgroups ON student_sport.sportGroup_id = sportgroups.id
JOIN sports ON sportgroups.sport_id = sports.id;
 
SELECT students.name, students.class, sportgroups.id
FROM students 
JOIN student_sport ON students.id = student_sport.student_id
JOIN sportgroups ON student_sport = sportgroups.id
WHERE sportgroups.dayOfWeek = ""Monday"";
 
SELECT coaches.name
FROM coaches
JOIN sportgroups ON coaches.id = sportgroups.coach_id
JOIN sports ON sportgroups.sport_id = sports.id
Where sports.name = ""Football"";
 
SELECT sportgroups.location, sportgroups.hourOfTraining, sportgroups.dayOfWeek
FROM sportgroups
JOIN sports ON sportsgroup.sport_id = sports.id
WHERE sports.name = ""Voleyball"";
 
SELECT sports.name
FROM students
JOIN student_sport ON students.id = students_sport.student_id
JOIN sportgroups ON student_sport.sportGroup_id = sportgroups.id
JOIN sports ON sportgroups.sport_id = sports.id
WHERE students.name = ""Iliyan Ivanov"";
 
SELECT students.name
FROM students
JOIN student_sport ON students.id = student_sport.student_id
JOIN sportgroups ON student_sport.sportGroup.id = sportgroups.id
JOIN sports ON sportgroups.sport_id = sports.id
JOIN coaches ON sportgroups.coach_id = coaches.id
WHERE sports.name = ""Football"" AND coaches.name = ""Ivan Todorov Petkov"";"
4UXGhKnC,vk_likes_analysis__solution,PoeticLwrnc,PostgreSQL,Tuesday 5th of March 2024 02:24:42 PM CDT,"--csv data here https://pastebin.com/TgLfdivQ
/* create cte with new columns:
* 	post_interval - how much time has passed from last post, divided into 3 groups
* 	dow_num - day of the week as Sunday (0) to Saturday (6)
* 	tod - time of day
*/
with cte1 as
	(select a.id, a.posted, a.likes 
		,case
			when (b.posted - a.posted) < interval '1 day' then '<24 hours'
			when (b.posted - a.posted) < interval '3 day' then '<72 hours'
			else '>3 days'
		end post_interval
		,extract(dow from a.posted) dow_num
		,case
			when (extract(hour from a.posted)<5 or extract(hour from a.posted)>=22) then 'Ночь'
			when extract(hour from a.posted)<12 then 'Утро'
			when extract(hour from a.posted)<17 then 'День'
			else 'Вечер'
		end tod
	from vk_posts a
	left join vk_posts b on a.id - 1 = b.id)

--avg values check

select tod, dow_num, post_interval
	,round(avg(likes) over (partition by tod),2) avg_per_tod
	,round(avg(likes) over (partition by dow_num),2) avg_per_dow
	,round(avg(likes) over (partition by post_interval),2) avg_per_interval
from cte1
order by 3 desc, 4 desc

/* Учитывая малую выборку, можно и без запроса увидеть, что наибольший разброс в значениях 
	приходится на распределение лайков по дням недели avg_per_dow. В то же время, даже при большой разнице 
	во взятых интервалах между постами (меньше суток, до 3х суток и более 3х суток ), разброс между 
	полученными значениями минимален.
   Тем не менее, в увиденном не сложно убедиться.
*/
------------
/*Вложенные агрегатные функции не поддерживаются, тч предыдущий запрос также оборачивается в обобщенное табличное
	выражение. Это позволит посчитать разброс между полученными значениями.
После этого целиковый запрос будет выглядеть следующим образом:
*/
with cte1 as
	(select a.id, a.posted, a.likes 
		,case
			when (b.posted - a.posted) < interval '1 day' then '<24 hours'
			when (b.posted - a.posted) < interval '3 day' then '<72 hours'
			else '>3 days'
		end post_interval
		,extract(dow from a.posted) dow_num
		,case
			when (extract(hour from a.posted)<5 or extract(hour from a.posted)>=22) then 'Ночь'
			when extract(hour from a.posted)<12 then 'Утро'
			when extract(hour from a.posted)<17 then 'День'
			else 'Вечер'
		end tod
	from vk_posts a
	left join vk_posts b on a.id - 1 = b.id),

cte2 as
	(select tod, dow_num, post_interval
		,round(avg(likes) over (partition by tod),2) avg_per_tod
		,round(avg(likes) over (partition by dow_num),2) avg_per_dow
		,round(avg(likes) over (partition by post_interval),2) avg_per_interval
	from cte1)

select max(avg_per_tod)-min(avg_per_tod) tod_dif,
	max(avg_per_dow)-min(avg_per_dow) dow_dif,
	max(avg_per_interval)-min(avg_per_interval) interval_dif
from cte2
------
/*на выходе 3 значения, наибольшая волатильность у распределения лайков по дням недели. В связи с полученными
результатами можно сделать вывод, что кол-во лайков в большей степени влияет день недели, чем время суток или промежуток
между публикациями. 
*/"
hJtv9ywq,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 02:21:47 PM CDT,"def F(x, A):
    P = [n for n in range(1, 41)]
    Q = [k for k in range(25, 121)]
    return ((x in Q) <= ((not(x in P) and (x in Q)) <= (x in A)))
A = []
for i in range(1, 1000):
    A.append(i)
    if all(F(x, A) == 1 for x in range(0, 10_000)):
        continue
    else:
        A.remove(i)
print(len(A))"
T3rXREmY,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Tuesday 5th of March 2024 02:18:06 PM CDT,"https://pastes.io/?red=pastebin.com - Paste Tool - Pastebin Alternative - Free Alternative

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Pastes.io VS Pastebin :
More features example share pages QR CODEs - Embed options .. etc
Simple Ads by Google Adsense ( Few rather than Pastebin )
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
User profile page
Trending pastes page (day, week, month, year)
Simple & responsive interface
Night Mode
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
Auto generated sitemaps
User management
Admin panel to manage pastes, syntax, users, comments, pages, languages, translations & other settings
User profile page
Trending pastes page (day, week, month, year)
QR Code for share
No Captcha for logged in users feature
.. etc"
bmgU78ab,Untitled,sambacar,JSON,Tuesday 5th of March 2024 02:15:31 PM CDT,"#request
{
  ""id"": ""1000036065010"",
  ""order_number"": ""1000036065010"",
  ""order_date"": ""2024-03-05T15:23:37"",
  ""status"": ""open"",
  ""customer"": {
    ""contact_name"": ""Petar Sambolek"",
    ""first_name"": ""Petar"",
    ""last_name"": ""Sambolek"",
    ""street"": ""Ulica Svete Ane 57"",
    ""postcode"": ""31000"",
    ""city"": ""Osijek"",
    ""phone"": ""0923051110"",
    ""e_mail"": ""sambolek.petar@gmail.com""
  },
  ""items"": [
    {
      ""position"": 1,
      ""product"": {
        ""ean_code"": ""4015672110465"",
        ""name"": ""Omron Evolv tlakomjer za nadlakticu""
      },
      ""quantity"": 2,
      ""price"": 197.76
    }
  ],
  ""payment"": {
    ""status"": ""paid"",
    ""method"": ""credit_card"",
    ""transaction_id"": ""174584"",
    ""credit_card"": {
      ""brand"": ""VISA""
    }
  },
  ""discount_amount"": ""0.0000""
}

#response
[N905] Cannot add order payment"
f5CtZTsw,Sign Check,bAngelov,JavaScript,Tuesday 5th of March 2024 02:15:09 PM CDT,"function solve(a,b,c) {
    const isNegative = (value) => (value < 0) ? ""Negative"" : ""Positive"";
    const values = {
        ""Positive,Positive,Positive"": ""Positive"",
        ""Negative,Positive,Positive"":""Negative"",
        ""Positive,Negative,Positive"":""Negative"",
        ""Positive,Positive,Negative"":""Negative"",
        ""Negative,Negative,Negative"":""Negative"",
        ""Positive,Negative,Negative"":""Positive"",
        ""Negative,Positive,Negative"":""Positive"",
        ""Negative,Negative,Positive"":""Positive"",
    }
    return values[[isNegative(a),isNegative(b),isNegative(c)].join(',')]
}"
6SErgRWz,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 02:07:05 PM CDT,"def f(n):
    s = ''
    while n > 0:
        s += str(n % 5)
        n //= 5
    s = s[::-1]
    return s
n = 5**2004 - 5**1016 - 25**508 - 5**400 + 25**250 - 27
b = f(n)
print(b.count('4'))"
0m7DF1aH,tailwind.config.js,mrojasley,JavaScript,Tuesday 5th of March 2024 01:41:45 PM CDT,"/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [""./**/templates/**/*.{html,js}""],
  theme: {
    fontFamily: {
      sans: [
        '""Inter var"", sans-serif',
        {
          fontFeatureSettings: '""cv02"", ""cv03"", ""cv04"", ""cv11""',
        },
      ],
    },
    extend: {},
  },
  plugins: [],
};"
d1Q4myWK,completely OK 13,max2201111,Python,Tuesday 5th of March 2024 01:41:13 PM CDT,"import chess

def simplify_fen(fen):
    """"""Simplifies a FEN string to only include position, turn, castling availability, and en passant target.""""""
    return ' '.join(fen.split(' ')[:4])

def add_descendants_iteratively(game_tree, fen_to_node_id):
    """"""Expands the game tree by iteratively adding legal move descendants of each game state.""""""
    queue = [(1, 0)]
    while queue:
        node_id, _ = queue.pop(0)
        board = chess.Board(game_tree[node_id]['fen'] + "" 0 1"")
        for move in board.legal_moves:
            move = chess.Move(move.from_square, move.to_square, promotion=chess.QUEEN) if move.promotion else move
            board.push(move)
            simplified_fen = simplify_fen(board.fen())
            if simplified_fen not in fen_to_node_id:
                new_node_id = len(game_tree) + 1
                game_tree[new_node_id] = {
                    'fen': simplified_fen,
                    'moves_to_mate': None,
                    'parent': node_id,
                    'color': chess.WHITE if board.turn else chess.BLACK,
                    'result': None,
                    'processed': False,
                    'sequence': [],
                    'children': [],
                    'to_end': None,
                }
                fen_to_node_id[simplified_fen] = new_node_id
                game_tree[node_id]['children'].append(new_node_id)
                queue.append((new_node_id, 0))
            board.pop()

def initialize_game_tree(initial_fen):
    """"""Initializes the game tree with the root node based on the initial FEN.""""""
    simplified_fen = simplify_fen(initial_fen)
    game_tree = {1: {'fen': simplified_fen, 'moves_to_mate': None, 'parent': None,
                     'color': chess.WHITE if 'w' in initial_fen else chess.BLACK,
                     'result': None, 'processed': False, 'sequence': [], 'children': [], 'to_end': None}}
    fen_to_node_id = {simplified_fen: 1}
    return game_tree, fen_to_node_id

def update_game_outcomes(game_tree):
    """"""Updates game outcomes based on the current board state for each node.""""""
    for node in game_tree.values():
        board = chess.Board(node['fen'] + "" 0 1"")
        if board.is_game_over():
            outcome = board.outcome()
            node['processed'] = True
            node['result'] = 1 if outcome and outcome.winner == chess.WHITE else -1 if outcome and outcome.winner == chess.BLACK else 0
            node['moves_to_mate'] = 0 if node['result'] != 0 else None
            node['to_end'] = 0


def update_parent_preferences(node_id, game_tree, stronger):
    node = game_tree[node_id]
    if node['processed']:
        return node['to_end'], node['moves_to_mate'], node['result']

    is_maximizing = node['color'] == stronger
    desired_result = 1 if stronger == chess.WHITE else -1
    
    # Initialize best_path_length based on whether we are maximizing or minimizing
    best_path_length = None  # We start with None to be agnostic about the direction of comparison initially
    best_child_id = None
    best_result = None

    for child_id in node['children']:
        _, child_moves_to_mate, child_result = update_parent_preferences(child_id, game_tree, stronger)
        if child_moves_to_mate is None:
            continue

        # Decide when to update based on maximizing or minimizing player logic
        if is_maximizing:
            # For maximizing, we look for a smaller number than currently best (shortest path to checkmate)
            if best_path_length is None or (child_moves_to_mate < best_path_length):
                best_path_length, best_child_id, best_result = child_moves_to_mate, child_id, child_result
        else:
            # For minimizing, we look for a larger number than currently best (longest path to avoid checkmate)
            if best_path_length is None or (child_moves_to_mate > best_path_length):
                best_path_length, best_child_id, best_result = child_moves_to_mate, child_id, child_result

    if best_child_id is not None:
        node['sequence'] = [best_child_id]
        node['result'] = best_result
        node['to_end'] = best_path_length + 1 if best_path_length is not None else None
        node['moves_to_mate'] = best_path_length + 1 if best_result == desired_result else None
    else:
        node['to_end'], node['moves_to_mate'], node['sequence'] = None, None, []

    node['processed'] = True
    return node['to_end'], node['moves_to_mate'], node['result']


def print_sequence_from_root(A):
    current_node_id = 1
    A[1]['sequence'] = [9]
 #   A[1]['sequence'] = [13]

    while True:
        node = A[current_node_id]
        board = chess.Board(node['fen'] + "" 0 1"")
        print(f""Node ID: {current_node_id}, Moves to Mate: {node['moves_to_mate']}, Result: {node['result']}"")
        print(board, ""\n"", node['fen'],""\n\n"")
        
        if not node['sequence']:
            break
        current_node_id = node['sequence'][0]


def main():
    initial_fen = ""7Q/8/8/6k1/2K5/8/8/8 w - - 0 1""
    initial_fen = ""8/5k1Q/3K4/8/8/8/8/8 b - - 0 1""
    initial_fen = ""8/2k5/8/5Q2/8/8/2K5/8 w - - 0 1""


    game_tree, fen_to_node_id = initialize_game_tree(initial_fen)
    add_descendants_iteratively(game_tree, fen_to_node_id)
    update_game_outcomes(game_tree)
    update_parent_preferences(1, game_tree, chess.WHITE)
    print(""Final Output:"")
    print(game_tree[1])
    print(game_tree[2])
    print(game_tree[3])
    print(game_tree[4])

    print_sequence_from_root(game_tree)
    
    for key in range(1,20000):
        if game_tree[key]['to_end'] != None: # and A[key]['to_end'] > 9:
            print(f""{key}:: {game_tree[key]['to_end']} {game_tree[key]}\n{chess.Board(game_tree[key]['fen'])}<\n"")

    
    
if __name__ == ""__main__"":
    main()"
N65tfT6V,simple_music_cipher_crude_brute,Python253,Python,Tuesday 5th of March 2024 01:39:50 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: simple_music_cipher.py
# Author: Jeoi Reqi
# Original Key File:   https://pastebin.com/sHMQDfhM

""""""
!!NOTICE!!

THIS IS A CRUDE BRUTE FORCE DECODER AND IS HIGHLY
LIMITED IN FUNCTIONALITY & INPUT LENGTHS. THIS WILL 
MOST LIKELY GIVE BAD RESULTS UNLESS COMMON WORDS OF
SHORT LENGTHS. I WILL BE UPDATING THIS SCRIPT SHORTLY. 
ANY ADVICE TO HOW TO PROPERLY DECODE A STRING USING
A KEY WHERE MULTIPLE VALUES ARE GIVEN FOR EACH LETTER.
NEXT ATTEMPT WILL INVOLVE INDEXING THE KEY VALUES AND 
THEN CYCLING THEM RECURSIVELY AND OUTPUT ALL VARIABLE
POSSIBILITIES TO THE TERMINAL FOR THE USER TO SELECT.


This script demonstrates a simple music cipher, allowing users to encode and decode a short message using a specified key for notes A-G.
The decoding utilizes the NLTK words dataset and brute force methods to generate possible decodings.

Requirements:
- Python 3
- NLTK (Natural Language Toolkit) library: Install it using 'pip install nltk'
- NLTK words dataset: If not present, uncomment 'nltk.download('words')' and run the script. Comment it out once downloaded.

Encoding Example:
    message_to_encode = ""hello world""  #Short strings w/ common words work the best in this version.
    encoded_message = encode(message_to_encode)
    print(f""Encoded: {encoded_message}"")

Decoding Example:
    print(""Possible Decodings:"")
    decode(encoded_message)

Usage:
1. Run the script and enter the message to encode.
2. The encoded message will be displayed, and possible decodings will be generated.
3. Optionally, save the decoding results to a file.

Note: Numbers in the message are ignored during encoding and decoding.

For more information on the cipher and its cryptanalysis, refer to the references included in the script.

""""""

import nltk
import os

# Uncomment the line below if NLTK words dataset is not present on your system
# nltk.download('words')

def encode(message):
    key = {
        'a': 'a', 'b': 'b', 'c': 'c',
        'd': 'd', 'e': 'e', 'f': 'f',
        'g': 'g', 'h': 'a', 'i': 'b',
        'j': 'c', 'k': 'd', 'l': 'e',
        'm': 'f', 'n': 'g', 'o': 'a',
        'p': 'b', 'q': 'c', 'r': 'd',
        's': 'e', 't': 'f', 'u': 'g',
        'v': 'a', 'w': 'b', 'x': 'c',
        'y': 'd', 'z': 'e',
        ' ': ' '  # add space character to the key
    }

    encoded_message = ''.join([key.get(char.lower(), char) if char.isalpha() else char for char in message])
    return encoded_message

def decode(encoded_message):
    reverse_key = {
        'a': 'ahov', 'b': 'bipw', 'c': 'cjqx',
        'd': 'dkry', 'e': 'elsz', 'f': 'fmt',
        'g': 'gnu'
    }

    english_words = set(nltk.corpus.words.words())

    def generate_possible_decodings(decoded_prefix, remaining_encoded, all_combinations):
        if not remaining_encoded:
            if decoded_prefix.lower() in english_words:
                all_combinations.append(decoded_prefix.strip())
            return

        current_char = remaining_encoded[0]
        possibilities = reverse_key.get(current_char, [current_char])

        for possibility in possibilities:
            new_decoded_prefix = decoded_prefix + possibility
            generate_possible_decodings(new_decoded_prefix, remaining_encoded[1:], all_combinations)

    def decode_message(remaining_words, decoded_sentence, all_combinations):
        if not remaining_words:
            all_combinations.append(decoded_sentence.strip())
            return

        current_word = remaining_words[0]
        word_combinations = []

        generate_possible_decodings('', current_word, word_combinations)

        for word_combination in word_combinations:
            new_decoded_sentence = decoded_sentence + word_combination + ' '
            decode_message(remaining_words[1:], new_decoded_sentence, all_combinations)

    def print_combinations(combinations):
        for combination in combinations:
            print(f""\t\t{combination}"")

    words = encoded_message.split()
    all_combinations = []

    decode_message(words, '', all_combinations)
    print_combinations(all_combinations)

    return all_combinations

def save_to_file(combinations):
    filename = 'decoding_results.txt'
    with open(filename, 'w') as file:
        for combination in combinations:
            file.write(f""{combination}\n"")
    print(f""Results saved to {filename}"")

# Example usage:
print(""\n:: [SIMPLE MUSIC ENCODER/DECODER] ::\n\n"")
user_message = input(""\tEnter the message to encode: "")
encoded_message = encode(user_message)
print(f""\n\tEncoded: {encoded_message}\n"")

print(""\nPossible Decodings:\n"")
decoded_combinations = decode(encoded_message)

save_option = input(""\nDo you want to save the decoding results to a file?\n\n1: Yes\n2: No\n\nWhat is your choice (1 Or 2?) "")
if save_option == '1':
    save_to_file(decoded_combinations)
else:
    print(""\nProgram Ending. Thank you!\n"")


"
iSHbZshu,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 01:33:33 PM CDT,"file = open('9.txt')
count = 0
for s in file:
    A = list(map(int, s.split()))
    A.sort()
    d = {elem:0 for elem in A}
    for elem in A:
        d[elem] += 1
    A_rep = []
    A_unrep = []
    for elem in d:
        if d[elem] == 2:
            A_rep += [elem]
        else:
            A_unrep += [elem]
    if len(A_rep) == 1 and len(A_unrep) == 4 and sum(A_unrep) / 4 <= 2 * A_rep[0]:
        count += 1
print(count)"
9Eg26x7n,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 01:24:59 PM CDT,"from itertools import *
count = 0
for p in product('МЕТРО', repeat = 4):
    n = ''.join(p) 
    if n[0] in 'МТР' and n[-1] in 'ЕО':
        count += 1
print(count)"
ds7f6dbT,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 01:10:20 PM CDT,"def Sum(s):
    Sum = 0
    for i in range(len(s)):
        Sum += int(s[i])
    return Sum
for n in range(1, 10_000):
    b = bin(n)[2:]
    if Sum(b) % 2 == 0:
        b = b + '0'
    else:
        b = b + '1'

    if Sum(b) % 2 == 0:
        b = b + '0'
    else:
        b = b + '1'
    R = int(b, 2)
    if R > 184:
        print(n)
        break"
BEKTsZ4H,Untitled,smj007,Python,Tuesday 5th of March 2024 01:08:55 PM CDT,"class SparseVector:
    # Constructor for sparseVector.
    def __init__(self, nums: List[int]) -> None:
        # write your code here
        
        self.pairs = []
        for ind, num in enumerate(nums):
            if num:
                self.pairs.append([ind, num])


    def dotProduct(self, vec) -> int:
        # write your code here
        
        p = 0
        q = 0
        result = 0
        while p < len(self.pairs) and q < len(vec.pairs):
            if self.pairs[p][0] == vec.pairs[q][0]:
                result += self.pairs[p][1]*vec.pairs[q][1]
                p = p + 1
                q = q + 1
            elif self.pairs[p][0] < vec.pairs[q][0]:
                p = p + 1
            else:
                q = q + 1

        return result"
KWaTLXnG,last 11 == 11 with time,max2201111,Python,Tuesday 5th of March 2024 01:06:58 PM CDT,"import chess
import time
import threading
import psutil  # Pro monitorování paměti

def format_time(seconds):
    """"""Formats time in hours, minutes, and seconds.""""""
    return f""{int(seconds // 3600)}h {(int(seconds) % 3600) // 60}m {seconds % 60:.2f}s""

def time_and_memory_tracker(start_time, stop_event):
    """"""Tracks elapsed time and memory usage, printing both every second.""""""
    while not stop_event.is_set():
        elapsed_time = time.time() - start_time
        memory_usage = psutil.Process().memory_info().rss / (1024 * 1024)  # Převod na MB
        print(f""\rElapsed time: {format_time(elapsed_time)}, Memory usage: {memory_usage:.2f} MB"", end='', flush=True)
        time.sleep(1)

def simplify_fen(fen):
    """"""Simplifies a FEN string to only include position, turn, castling availability, and en passant target.""""""
    return ' '.join(fen.split(' ')[:4])

# Definice funkce add_descendants_iteratively, initialize_game_tree, update_game_outcomes zůstávají stejné

import chess

def simplify_fen(fen):
    """"""Simplifies a FEN string to only include position, turn, castling availability, and en passant target.""""""
    return ' '.join(fen.split(' ')[:4])

def add_descendants_iteratively(game_tree, fen_to_node_id):
    """"""Expands the game tree by iteratively adding legal move descendants of each game state.""""""
    queue = [(1, 0)]
    while queue:
        node_id, _ = queue.pop(0)
        if not node_id % 1000000:
            print(""H"")
          #  break
        board = chess.Board(game_tree[node_id]['fen'] + "" 0 1"")
        for move in board.legal_moves:
            move = chess.Move(move.from_square, move.to_square, promotion=chess.QUEEN) if move.promotion else move
            board.push(move)
            simplified_fen = simplify_fen(board.fen())
            if simplified_fen not in fen_to_node_id:
                new_node_id = len(game_tree) + 1
                game_tree[new_node_id] = {
                    'fen': simplified_fen,
                    'moves_to_mate': None,
                    'parent': node_id,
                    'color': chess.WHITE if board.turn else chess.BLACK,
                    'result': None,
                    'processed': False,
                    'sequence': [],
                    'children': [],
                    'to_end': None,
                }
                fen_to_node_id[simplified_fen] = new_node_id
                game_tree[node_id]['children'].append(new_node_id)
                queue.append((new_node_id, 0))
            board.pop()

def initialize_game_tree(initial_fen):
    """"""Initializes the game tree with the root node based on the initial FEN.""""""
    simplified_fen = simplify_fen(initial_fen)
    game_tree = {1: {'fen': simplified_fen, 'moves_to_mate': None, 'parent': 0,
                     'color': chess.WHITE if 'b' in initial_fen else chess.BLACK,
                     'result': None, 'processed': False, 'sequence': [], 'children': [], 'to_end': None}}
    fen_to_node_id = {simplified_fen: 1}
    return game_tree, fen_to_node_id

def update_game_outcomes(game_tree):
    """"""Updates game outcomes based on the current board state for each node.""""""
    for node in game_tree.values():
        board = chess.Board(node['fen'] + "" 0 1"")
        if board.is_game_over():
            outcome = board.outcome()
            node['processed'] = True
            node['result'] = 1 if outcome and outcome.winner == chess.WHITE else -1 if outcome and outcome.winner == chess.BLACK else 0
            node['moves_to_mate'] = 0 if node['result'] != 0 else None
            node['to_end'] = 0




def update_parent_preferences(node_id, game_tree, stronger):
    """"""Update parent preferences in the game tree based on minimizing or maximizing strategy.""""""
    node = game_tree[node_id]
    if node['processed']:
        return node['to_end'], node['moves_to_mate'], node['result']

    is_maximizing = node['color'] == stronger
    best_path_length = None
    best_child_id = None

    for child_id in node['children']:
        child_to_end, child_moves_to_mate, child_result = update_parent_preferences(child_id, game_tree, stronger)
        
        if child_moves_to_mate is None:
            continue

        if (is_maximizing and (best_path_length is None or child_moves_to_mate < best_path_length) and child_result == 1) or \
           (not is_maximizing and (best_path_length is None or child_moves_to_mate > best_path_length) and child_result == -1):
            best_path_length = child_moves_to_mate
            best_child_id = child_id

    if best_child_id is not None:
        node['sequence'] = [best_child_id]
        node['to_end'] = best_path_length + 1
        node['moves_to_mate'] = best_path_length + 1
        node['result'] = 1 if is_maximizing else -1
    else:
        node['sequence'] = []

    node['processed'] = True
    return node['to_end'], node['moves_to_mate'], node['result']            
            
def main():
    start_time = time.time()
    stop_event = threading.Event()
    
    # Start time tracking thread
    time_thread = threading.Thread(target=time_and_memory_tracker, args=(start_time, stop_event))
    time_thread.start()

    initial_fen = ""8/2k5/8/5Q2/8/8/2K5/8 w - - 0 1""
    initial_fen = ""8/2k5/8/3Q4/8/8/2K5/8 b - - 1 1""
    initial_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""
    #cil: 8/6K1/k1P5/7p/8/8/8/8 b - - 1 1
    game_tree, fen_to_node_id = initialize_game_tree(initial_fen)
    add_descendants_iteratively(game_tree, fen_to_node_id)
    update_game_outcomes(game_tree)
    update_parent_preferences(1, game_tree, chess.WHITE)
    
    # Zde začleníme logiku pro tisk výsledků, která byla dříve mimo funkci main
    for key in range(1, len(game_tree) + 1):  # Upraveno pro iteraci skrze definované klíče
        if game_tree[key]['to_end'] > 8: #is not None:
            print(f""{key}:: {game_tree[key]['to_end']} {game_tree[key]}\n{chess.Board(game_tree[key]['fen'])}<\n"")

    stop_event.set()
    time_thread.join()

    print(""\nFinal Output:"")
    print(game_tree[1])

#     for key in range(1,60000):
#         if game_tree[key]['to_end'] != None: # and A[key]['to_end'] > 9:
#             print(f""{key}:: {game_tree[key]['to_end']} {game_tree[key]}\n{chess.Board(game_tree[key]['fen'])}<\n"")

    

if __name__ == ""__main__"":
    main()"
xwahBMCS,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Tuesday 5th of March 2024 01:03:33 PM CDT,"https://pastes.io/?red=pastebin.com - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Pastes.io VS Pastebin :
More features example share pages QR CODEs - Embed options .. etc
Simple Ads by Google Adsense ( Few rather than Pastebin )
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
User profile page
Trending pastes page (day, week, month, year)
Simple & responsive interface
Night Mode
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
Auto generated sitemaps
User management
Admin panel to manage pastes, syntax, users, comments, pages, languages, translations & other settings
User profile page
Trending pastes page (day, week, month, year)
QR Code for share
No Captcha for logged in users feature
.. etc"
hkGtvrrx,Untitled,Abdula_2314124,C#,Tuesday 5th of March 2024 01:03:27 PM CDT,"using System;

namespace Metho
{
    class Program
    {
        static void Main(string[] args)
        {
            float speed = 20;
            float distance = 3000;

            int time = 30;
            int directionX = 1;
            int directionY = 0;

            string direction = """";

            SetDirection(directionX, directionY, ref direction);

            Move(speed, time, distance, direction);
        }

        static void Method()
        {
            Console.WriteLine(""Message methoda"");
        }

        // speed, час, дистанція яку треба пройти, направлення
        static void Move(float speed, int time, float distance,
            string direction)
        {
            Console.WriteLine($""Player move direction {direction},"" +
                $"" speed {speed} "" +
                $""time {time}, distance {distance}"");
        }

        static void SetDirection(int directionX, int directionY, ref string direction)
        {
            if (directionX == 1 && directionY == 0)
            {
                direction = ""Вправо"";
            }
            else if (directionX == 0 && directionY == 1)
            {
                direction = ""Вверх"";
            }
            else if (directionX == -1 && directionY == 0)
            {
                direction = ""Вліво"";
            }
            else if (directionX == 0 && directionY == -1)
            {
                direction = ""Вниз"";
            }
        }
    }
}
"
cBv87bLH,Untitled,Yagyaveer,Lua,Tuesday 5th of March 2024 12:58:36 PM CDT,"local _L coroutine.wrap(function()_L = require(script.Parent.Library)end)()

local MarketplaceService = game:GetService('MarketplaceService')
local TweenService = game:GetService('TweenService')
local MilksByZoneData = require(game.ServerStorage.Storage.Items.Milks.MilksByZone)
local PlayerModule = {}
PlayerModule.PlayerFunctions = {}

function PlayerModule.new(Player_Object, Profile_Table)
	if Player_Object == nil then return error(""PlayerModule:Create New PFunc: Player Object nil"") end
	if Profile_Table == nil then return error(""PlayerModule:Create New PFunc: Profile_Table nil"") end
	local self = {}
	self.Player = Player_Object
	self.Profile = Profile_Table
	self.Maid = _L.Maid.new()
	self.Disconnected = false
	self.UIFunctions = {}
	self.TempData = {
		CurrentOverHeadUI = nil,
		InventoryTemps = {},
		Sprint = false,
		SpawnCooldown = false,
		TouchCoolDown = false,
		PrevSec_ = 0,
		CurrentDonationLBHeader = nil,
		CurrentTimePlayedLBHeader = nil,
		TempMilkData = {CanCollect_SleepyMilk = false,CanCollectMushroomMilk = false},
		LBFolder = nil,
		CurrentDialogSelectPrompt = nil,
		StrawberryMilkCounter = nil,
		DoorTouchCoolDown = false,
		InventoryData = {Functions = {}, InventoryDisplayTemps = {}},
		GamepassData = {
			OwnsGravityCoil = false,
			OwnsSpeedCoil = false,
			OwnsFusionCoil = false,
			OwnsFlingGlove = false,
			OwnsBlower = false,
			OwnsGrappleHook = false,
			OwnsMagicCarpet = false,
			OwnsDoubleCoins = false,
			OwnsHandGun = false,
			OwnsTp = false
		},
		CurrentToolEquipped = nil,
		CanCollectMushroomMilk = false,
		ItemsEquipUnEquipData = {Functions = {}, Cooldowns = {}},
		ItemsBuyingInProcess = {Common = nil, Rare = nil, Epic = nil, Legendary = nil},
		TrailAttachments = {one = nil, two = nil},
		MinsPassed = 0,
		CollectRewardButtonInited = {}
	}
	self.PlayerStoredData = self.Profile.Data

	--// Functions
	function self.Disconnect()
		if self == nil then return end
		if self.Disconnected == nil then return end
		if self.Disconnected == true then return end
		self.Disconnected = true
		self.Maid:Destroy()
		PlayerModule.PlayerFunctions[self.Player] = nil
		table.clear(self)
		self = nil
	end

	local function awaitObj(ObjectToSearchIn,InstanceToSearch, Timeout)
		local found = nil
		local t = tick()
		repeat
			found = (ObjectToSearchIn:FindFirstChild(InstanceToSearch) or nil)
		until found ~= nil or ObjectToSearchIn == nil or (tick()-t) >= (Timeout or 2.5) or self==nil or self.Disconnected or self.Player == nil
		return found
	end

	function self.LoadCharacterUtils(Character, attempt)
		local succ,err = pcall(function()
			if Character == nil then
				if attempt == nil then
					attempt = 1
				end
				if attempt <=20 then
					attempt += 1
					self.LoadCharacterUtils(Character, attempt)
				end
				return
			end
			if not Character:FindFirstChild(""HumanoidRootPart"") then
				if attempt == nil then
					attempt = 1
				end
				if attempt <=20 then
					attempt += 1
					self.LoadCharacterUtils(Character, attempt)
				end
				return
			end
			Character:WaitForChild(""HumanoidRootPart"")
			if self.TempData.CurrentOverHeadUI ~= nil and typeof(self.TempData.CurrentOverHeadUI) == 'Instance' then
				self.TempData.CurrentOverHeadUI:Destroy()
			end
			self.TempData.CurrentOverHeadUI = _L.PlrUtils.CharacterUtils.AddOverHeadUI(self, Character)
			_L.Functions.Network.Fire(""CHANGESKY_QGNQ"", self.Player, ""Default_Sky"")
			local TrailAttachments = game.ServerStorage.Storage.Assets.TrailAttachments
			local _One = TrailAttachments._trailone:Clone()
			local _Two = TrailAttachments._trailtwo:Clone()
			self.Maid:GiveTask(_One)
			self.Maid:GiveTask(_Two)
			self.TempData.TrailAttachments.one = _One
			self.TempData.TrailAttachments.two = _Two
			_One.Parent = Character['HumanoidRootPart']
			_Two.Parent = Character['HumanoidRootPart']
			delay(0.420,function() if self==nil or self.Disconnected or self.Player == nil then return end
				self.ForceEquipItems()
			end)
		end)
		if not succ then print(err) end
	end

	--// UI
	function self.InitUI()
		local PlayerGui = self.Player:WaitForChild(""PlayerGui"", 10)
		if self==nil or self.Disconnected or self.Player == nil then return end
		local UI = PlayerGui:WaitForChild(""UI"",10)
		if self==nil or self.Disconnected or self.Player == nil then return end

		self.UI = UI

		-- Milk Inventory
		local MilkFrame = UI.MilkFrame
		coroutine.wrap(function()
			local Milks = game.ServerStorage.Storage.Items.Milks.Milks
			self.TempData.RarityData = {
				Easy = Color3.fromRGB(116, 251, 76),
				Normal = Color3.fromRGB(0, 170, 255),
				Medium = Color3.fromRGB(255, 255, 0),
				Hard = Color3.fromRGB(255, 0, 0),
				Extreme = Color3.fromRGB(170, 85, 255),
				EasyLayoutOrder = 1,
				NormalLayoutOrder = 2,
				MediumLayoutOrder = 3,
				HardLayoutOrder = 4,
				ExtremeLayoutOrder = 5,}
			local RarityData = self.TempData.RarityData
			self.TempData.CurrentMilkSelected = {
				Easy = nil,
				Normal = nil,
				Medium = nil,
				Hard = nil,
				Extreme = nil,
				Current = nil,
			}

			function self.GetMilkVal(MilkName)
				local Milk_ = nil
				for _,v in pairs(Milks:GetChildren()) do
					if v:IsA(""ObjectValue"") then
						if v.Name == MilkName then
							Milk_ = v
							break
						end
					end
				end
				return Milk_
			end
			function self.PlayerHasMilk(MilkStr)
				local Has_ = false
				for _,v in pairs(self.Profile.Data.MilkFound) do
					if tostring(v) == tostring(MilkStr) then
						Has_ = true
						break
					end
				end
				return Has_
			end

			local CurrentMilkSelected_dat = nil
			local ClickCooldown,CurrentMaidId = false,nil
			local function ClickedMilkTemp(NewTemp, Milk)
				if ClickCooldown then return end
				ClickCooldown = true
				CurrentMilkSelected_dat = {NewTemp,Milk}
				for _,v in pairs(self.TempData.InfoFrame.Container:GetChildren()) do if v:IsA('ImageButton') then v:Destroy() end end
				local ClonnedTemp = NewTemp:Clone()
				CurrentMaidId = self.Maid:GiveTask(ClonnedTemp)
				ClonnedTemp.Size = UDim2.new(1,0,1,0)
				ClonnedTemp.Parent = self.TempData.InfoFrame.Container
				MilkFrame.InfoFrame.HintLabel.Text = ""Hint: [Click to reveal]""
				self.TempData.InfoFrame.NameLabel.Text = ClonnedTemp.NameLabel.Text
				self.TempData.InfoFrame.HintLabel.hint.Value = Milk.Hint.Value
				self.TempData.InfoFrame.DescLabel.Text = Milk.Desc.Value
				self.TempData.InfoFrame.DiffLabel.Text = ""Difficulty: <font color='rgb(""..( ( tostring(math.floor(tonumber(RarityData[Milk.Rarity.Value].R)*255)).."",""..tostring(math.floor(tonumber(RarityData[Milk.Rarity.Value].G)*255)).."",""..tostring(math.floor(tonumber(RarityData[Milk.Rarity.Value].B)*255))) or ""255,255,255"") .."")'>"" .. Milk.Rarity.Value .. ""</font>""
				self.TempData.InfoFrame.Visible = true
				self.TempData.CurrentMilkSelected.Current = Milk --<<
				if self.PlayerHasMilk(Milk.Name) then
					self.TempData.InfoFrame.Buy.Text = ""[Owned]""
					self.TempData.InfoFrame.Buy.BackgroundColor3 = Color3.fromRGB(69, 69, 69)
				else
					local RarityPrices = {Easy = ""50"",Normal = ""100"",Medium = ""250"",Hard = ""500"",Extreme = ""1,000"",}
					self.TempData.InfoFrame.Buy.Text = ""Buy R$"" .. (RarityPrices[Milk.Rarity.Value] or ""[failed to load]"")
					self.TempData.InfoFrame.Buy.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
				end
				MilkFrame.InfoFrame.HintLabel.Text = ""Hint: [Click to reveal]""
				delay(1,function()  if self==nil or self.Disconnected or self.Player == nil then return end
					ClickCooldown = false
				end)
			end

			function self.UpdateInvUI()
				for _,data in pairs(self.TempData.InventoryTemps) do
					local Has_ = self.PlayerHasMilk(data.Name)
					data.Temp.Owned.Visible = not Has_
				end
				MilkFrame.Found.Text = ""("" .. tostring(math.min(#self.Profile.Data.MilkFound,(#Milks:GetChildren()))).. ""/"" .. tostring(#Milks:GetChildren()).."") FOUND""
				if CurrentMilkSelected_dat ~= nil then
					ClickedMilkTemp(CurrentMilkSelected_dat[1], CurrentMilkSelected_dat[2])
				end
				if self.UpdateProgressUI then self.UpdateProgressUI() end
			end

			self.TempData.InfoFrame = MilkFrame.InfoFrame

			function self.MakeMilkUI()
				for _,Milk in pairs(Milks:GetChildren()) do
					local suc,err = pcall(function()
						--if Milk.Value ~= nil then
						local NewTemp = game.ServerStorage.Storage.Assets.Template:Clone()
						self.Maid:GiveTask(NewTemp)
						NewTemp.NameLabel.Text = Milk.Name
						NewTemp.RarityColor.BackgroundColor3 = (RarityData[Milk.Rarity.Value] or Color3.new(1,1,1))
						NewTemp.RarityColor.rarityname.Value = Milk.Rarity.Value
						NewTemp.ImageLabel.Image = Milk.Image.Value
						--NewTemp.LayoutOrder = (RarityData[Milk.Rarity.Value .. ""LayoutOrder""] or 0)
						local succX, errR = pcall(function()
							NewTemp:SetAttribute(""rarity"", (Milk.Rarity.Value or 0))
							NewTemp:SetAttribute(""zone"", (_L.Functions.FindMilkZoneByName(MilksByZoneData, Milk.Name) or ""nil""))
						end)
						if not succX then print(errR) end
						table.insert(self.TempData.InventoryTemps, {Name = Milk.Name, Temp = NewTemp})
						NewTemp.Parent = MilkFrame.Container
						self.Maid:GiveTask(NewTemp.MouseButton1Click:Connect(function() ClickedMilkTemp(NewTemp,Milk) end))
						--end
					end) if not suc then warn(""Unable to make milk template for player "" .. Player_Object.Name .. "",\nError:"",err, ""\nMilkName:"", (Milk.Name or ""unable to get Milk.Name"")) end
				end
				coroutine.wrap(function()
					local suc,err = pcall(function()
						for zone,value in pairs(MilksByZoneData) do
							local remainder = (4 - (#value % 4)) % 4
							if remainder ~= 0 then
								for i = 1, remainder do
									local BlankTemp = game.ServerStorage.Storage.Assets.Blank:Clone()
									self.Maid:GiveTask(BlankTemp)
									BlankTemp.Parent = MilkFrame.Container
									BlankTemp:SetAttribute(""zone"", zone)
								end
							end
						end
					end)
					if not suc then warn(""Unable to make blank milk template for player"") end
				end)()
				self.UpdateInvUI()
			end

			coroutine.wrap(function()
				self.MakeMilkUI()

				self.Maid:GiveTask(MilkFrame.InfoFrame.Close.MouseButton1Click:Connect(function()
					self.TempData.InfoFrame.Visible = false
					CurrentMilkSelected_dat = nil
					MilkFrame.InfoFrame.HintLabel.Text = ""Hint: [Click to reveal]""
					if self.Maid[CurrentMaidId] then
						self.Maid[CurrentMaidId] = nil
					end
				end))
				local buyclickcooldown = false
				self.Maid:GiveTask(self.TempData.InfoFrame.Buy.MouseButton1Click:Connect(function()
					if buyclickcooldown then return end
					buyclickcooldown = true
					if self.TempData.CurrentMilkSelected.Current ~= nil then
						if self.PlayerHasMilk(self.TempData.CurrentMilkSelected.Current.Name) ~= true then
							local Rarity = self.TempData.CurrentMilkSelected.Current.Rarity.Value
							local RarityIds = {
								Easy = 1261189301,
								Normal = 1261189359,
								Medium = 1261189411,
								Hard = 1261189458,
								Extreme = 1261189528,
							}
							if RarityIds[Rarity] then
								self.TempData.CurrentMilkSelected[Rarity] = self.TempData.CurrentMilkSelected.Current
								MarketplaceService:PromptProductPurchase(self.Player,RarityIds[Rarity])
							else
								warn(""No id fond for rarity:"" .. Rarity)
							end
						end
					end
					delay(3.5,function() if self==nil or self.Disconnected or self.Player == nil then return end
						buyclickcooldown = false
					end)
				end))
				self.Maid:GiveTask(MilkFrame.InfoFrame.HintLabel.MouseButton1Click:Connect(function()
					MilkFrame.InfoFrame.HintLabel.Text = ""Hint: "" .. MilkFrame.InfoFrame.HintLabel.hint.Value
				end))
			end)()

			--// Daily Milks
			coroutine.wrap(function()
				self.TempData.DailyMilkRarity = {
					Easy = 50,
					Normal = 25,
					Medium = 15,
					Hard = 8,
					Extreme = 2,
				}
				self.TempData.CurrentDailyMilks = {}

				function self.AssignDailyMilk()
					local TotalWeight = 0
					for _,Milk in pairs(Milks:GetChildren()) do
						TotalWeight = TotalWeight + self.TempData.DailyMilkRarity[Milk.Rarity.Value]
					end
					local function chooseRandomMilk()
						local Chance = math.random(1,TotalWeight)
						local Counter = 0
						for _,Milk in pairs(Milks:GetChildren()) do
							Counter = Counter + self.TempData.DailyMilkRarity[Milk.Rarity.Value]
							if Chance <= Counter then
								return Milk
							end
						end
					end

					local milkSelected = {}
					while #milkSelected ~= 8 do
						local chosen = chooseRandomMilk()
						if chosen.Name ~= ""Strawberry Milk"" then
							if #milkSelected == 0 then
								table.insert(milkSelected,chosen)
							else
								local alreadyinserted = false
								for _,v in pairs(milkSelected) do
									if v.Name == chosen.Name then
										alreadyinserted = true
										break
									end
								end
								if alreadyinserted == false then
									table.insert(milkSelected,chosen)
								end
							end
						end
					end
					table.clear(self.Profile.Data.DailyMilk)
					for _,v in pairs(milkSelected) do
						table.insert(self.Profile.Data.DailyMilk,v.Name)
					end

				end

				--self.AssignDailyMilk()

				function self.MakeDailyMilk()

					for _,milkName in pairs(self.Profile.Data.DailyMilk) do
						coroutine.wrap(function()
							local MilkVal = self.GetMilkVal(milkName)

						end)()
					end
				end

			end)()
		end)()

		-- Settings
		local SettingsFrame = UI.SettingsFrame
		coroutine.wrap(function()
			local function MusicMU()
				if self.Profile.Data.Settings.MuteMusic then
					UI.Music.Volume = 0
				else
					UI.Music.Volume = 1
				end
				SettingsFrame.Music.disabled.Visible = self.Profile.Data.Settings.MuteMusic
			end
			local function TBarTToggle()
				if self.Profile.Data.Settings.TBarToggle then
					SettingsFrame.TBarToggle.Text = ""✅""
					self.UI.ToolBar.ToolBar.UIPageLayout.TouchInputEnabled = true
				else
					SettingsFrame.TBarToggle.Text = "" ""
					self.UI.ToolBar.ToolBar.UIPageLayout.TouchInputEnabled = false
				end
			end
			coroutine.wrap(MusicMU)()
			coroutine.wrap(TBarTToggle)()
			self.Maid:GiveTask(SettingsFrame.Music.MouseButton1Click:Connect(function()
				self.Profile.Data.Settings.MuteMusic = not self.Profile.Data.Settings.MuteMusic
				SettingsFrame.Music.disabled.Visible = self.Profile.Data.Settings.MuteMusic
				MusicMU()
			end))
			self.Maid:GiveTask(SettingsFrame.TBarToggle.MouseButton1Click:Connect(function()
				self.Profile.Data.Settings.TBarToggle = not self.Profile.Data.Settings.TBarToggle
				TBarTToggle()
			end))
		end)()

		--Shop
		local ShopFrame = UI.ShopFrame
		coroutine.wrap(function()
			local sucUtl,errUtl = pcall(function()
				local function RegisterBtn(Button, ProductId, g)
					local function p()
						if g then
							MarketplaceService:PromptGamePassPurchase(self.Player,ProductId)
						else
							MarketplaceService:PromptProductPurchase(self.Player,ProductId)
						end
					end
					self.Maid:GiveTask(Button.MouseButton1Click:Connect(p))
					self.Maid:GiveTask(Button.PurchaseFrame.Buy.MouseButton1Click:Connect(p))
				end
				local ProductsF = ShopFrame.Products.Container
				RegisterBtn(ProductsF.DevProducts[""KillAll""], 1261427956)
				RegisterBtn(ProductsF.DevProducts[""500Coins""], 1266559885)
				RegisterBtn(ProductsF.DevProducts[""1_25k_coins""], 1266559917)
				RegisterBtn(ProductsF.DevProducts_2[""6.5k Coins""], 1266559945)
				RegisterBtn(ProductsF.DevProducts_2[""12.5k Coins""], 1266559995)
				RegisterBtn(ProductsF.DevProducts_2[""25k Coins""], 1266560059)

				RegisterBtn(ProductsF.Gamepass[""GCoil""], 42687770,true)
				RegisterBtn(ProductsF.Gamepass[""SCoil""], 42687988,true)
				RegisterBtn(ProductsF.Gamepass[""FCoil""], 42688142,true)
				RegisterBtn(ProductsF.Gamepass_2[""FlingGlove""], 42803975,true)
				RegisterBtn(ProductsF.Gamepass_2[""Blower""], 42804068,true)
				RegisterBtn(ProductsF.Gamepass_2[""GrappleHook""], 43150904,true)
				RegisterBtn(ProductsF.Gamepass_3[""MagicCarpet""], 43633906,true)
				RegisterBtn(ProductsF.Gamepass_3[""2xCoins""], 48899382,true)
				RegisterBtn(ProductsF.Gamepass_3[""Handgun""], 48899382,true)
				RegisterBtn(ProductsF.Gamepass_4[""tp""], 720828709,true)
			end) if not sucUtl then print(""Unable to util UI part for "" .. self.Player.Name .. "": "" .. errUtl) end
		end)()

		-- Teleport UI
		coroutine.wrap(function()
			local TeleportFrame = UI:FindFirstChild(""TeleportFrame"")

			local function GetNoOfMilksFoundByZone(Zone)
				local count = 0
				for _, itemA in ipairs(Zone) do
					for _, itemB in ipairs(self.Profile.Data.MilkFound) do
						if itemA == itemB then
							count = count + 1
							break
						end
					end
				end
				return count
			end

			local function getMapCompletionRatio()
				local count = 0

				local function allItemsExistInTableA(tbl)
					for _, item in ipairs(tbl) do
						if not self.Profile.Data.MilkFound[item] then
							return false
						end
					end
					return true
				end

				for _, tbl in pairs(MilksByZoneData) do
					if allItemsExistInTableA(tbl) then
						count = count + 1
					end
				end
				return count .. ""/"" .. 8
			end

			function self.UpdateProgressUI()
				local succ,err = pcall(function()
					for i,v in pairs(MilksByZoneData) do
						coroutine.wrap(function()
							local FrameFound = TeleportFrame.Container:FindFirstChild(i)
							local Collected,CanCollect = false,false
							if GetNoOfMilksFoundByZone(MilksByZoneData[i]) == #v then
								if not self.Profile.Data.RewardsCollected[i] then
									if not self.TempData.CollectRewardButtonInited[i] then
										CanCollect = true
										self.TempData.CollectRewardButtonInited[i] = self.Maid:GiveTask(FrameFound.CollectButton.MouseButton1Click:Connect(function()
											self.Profile.Data.RewardsCollected[i] = i
											self.Maid[self.TempData.CollectRewardButtonInited[i]] = nil
											self.Profile.Data.Coins += _L.DataIndex.ZoneRewards[i] or 1
											Collected = true
											self.UpdateProgressUI()
										end))
									end
								else
									Collected = true
								end
							elseif self.Profile.Data.RewardsCollected[i] then
								Collected = true
							end
							if FrameFound then
								local _Current = GetNoOfMilksFoundByZone(MilksByZoneData[i])
								local _Max = #MilksByZoneData[i]
								FrameFound.Progress.Desc.Text = _Current .. ""/"" .. _Max
								if Collected then
									FrameFound.CollectButton.Text = ""  COLLECTED  ""
									FrameFound.CollectButton.Amount.Text = _L.DataIndex.ZoneRewards[i]
									FrameFound.CollectButton.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
								elseif Collected == false and CanCollect then
									FrameFound.CollectButton.Text = ""   COLLECT   ""
									FrameFound.CollectButton.Amount.Text = _L.DataIndex.ZoneRewards[i]
									FrameFound.CollectButton.BackgroundColor3 = Color3.fromRGB(255, 215, 0)
								else
									FrameFound.CollectButton.Text = ""   COLLECT   ""
									FrameFound.CollectButton.Amount.Text = _L.DataIndex.ZoneRewards[i]
									FrameFound.CollectButton.BackgroundColor3 = Color3.fromRGB(115, 115, 115)
								end
								_L.Statistics.UpdateProgressBar(FrameFound.Progress.Fill, _Current, _Max)
							end
							local FrameFound2 = MilkFrame.Container:FindFirstChild(i)
							if FrameFound2 then
								FrameFound2 = FrameFound2:FindFirstChild(i)
								local _Current = GetNoOfMilksFoundByZone(MilksByZoneData[i])
								local _Max = #MilksByZoneData[i]
								FrameFound2.Progress.Desc.Text = _Current .. ""/"" .. _Max
								_L.Statistics.UpdateProgressBar(FrameFound2.Progress.Fill, _Current, _Max)
							end
						end)()
					end
					TeleportFrame.Found.Text = ""(""..getMapCompletionRatio().."") COMPLETED""
				end)
				if not succ then
					print(""Unable to update progress/tp UI:"", err)
				end
			end
			self.UpdateProgressUI()

			local succ,err = pcall(function()
				for i,v in pairs(TeleportFrame.Container:GetChildren()) do
					if v:IsA(""Frame"") then
						if MilksByZoneData[v.Name] then
							if v.Name == game.ReplicatedStorage:FindFirstChild(""PlaceName"").Value then
								v.Button.Text = ""\nSTAY HERE\n""
								v.Button.BackgroundColor3 = Color3.fromRGB(115, 115, 115)
								v.Button.Name = ""ButtonStayHere""
							else
								self.Maid:GiveTask(v.Button.MouseButton1Click:Connect(function()
									if self.TempData.GamepassData.OwnsTp then
										local succk,errk = pcall(function()
											if _L.Functions.Portals[v.Name] then
												_L.Functions.InitTeleportation(self.Player,_L.Functions.Portals[v.Name].PrestigeNeed,_L.Functions.Portals[v.Name].PlaceId,_L.Functions.Portals[v.Name].PlaceId_TESTING,2)
											else
												print(""error: portal data not found in _L.Functions.Portals"")
											end
										end)
										if not succk then print(""Error while tping:"",errk) end
									else
										MarketplaceService:PromptGamePassPurchase(self.Player,720828709)
									end
								end))
							end
						else
							print(""Error: v not found in MilksByZoneData[v.Name]"",v.Name)
						end
					end
				end
			end)
			if not succ then print(""Unable to init teleport ui:"",err) end
		end)()

		-- Buttons
		local Buttons = UI.Buttons
		coroutine.wrap(function()
			self.Maid:GiveTask(Buttons.Sprint.MouseButton1Click:Connect(function()
				self.TempData.Sprint = not self.TempData.Sprint
			end))
			self.Maid:GiveTask(Buttons.Spwan.MouseButton1Click:Connect(function()
				if self.TempData.SpawnCooldown == false then
					self.TempData.SpawnCooldown = true
					self.Player.Character:MoveTo(workspace.Map.SpawnLocation.Position)
					_L.Functions.Network.Fire(""CHANGESKY_QGNQ"", self.Player, ""Default_Sky"")
					delay(2.1,function() if self==nil or self.Disconnected or self.Player == nil then return end
						self.TempData.SpawnCooldown = false
					end)
				end
			end))

		end)()

		--popups
		local function PopUp(Context, Explaination, YesText, NoText, CloseButton)
			local OldFrame,OldFrame2,OldFrame3 = self.UI:FindFirstChild(""PopUpYN""),self.UI:FindFirstChild(""PopUpC""),self.UI:FindFirstChild(""InfoPopUp"")
			if (OldFrame) then OldFrame:Destroy() end if (OldFrame2) then OldFrame2:Destroy() end if (OldFrame3) then OldFrame3:Destroy() end self.UI.NotEnoughCoinsPopup_.Visible = false
			local Frame = self.UI.PopUpYN_:Clone()
			self.Maid:GiveTask(Frame)
			Frame.Name = ""PopUpYN""
			Frame.Context.Text = tostring(Context)
			Frame.Explanation.Text = (Explaination or """")
			Frame.Y.TextLabel.Text = (YesText or ""YES"")
			Frame.N.TextLabel.Text = (NoText or ""NO"")
			Frame.Visible = true
			Frame.Parent = self.UI
			Frame.LocalScript.Disabled = false
			return Frame
		end
		self.UIFunctions.PopUpFrame = PopUp
		function self.UIFunctions.PopUpInfoFrame2(Context, CloseButtonText)
			local OldFrame,OldFrame2,OldFrame3 = self.UI:FindFirstChild(""PopUpYN""),self.UI:FindFirstChild(""PopUpC""),self.UI:FindFirstChild(""InfoPopUp"")
			if (OldFrame) then OldFrame:Destroy() end if (OldFrame2) then OldFrame2:Destroy() end if (OldFrame3) then OldFrame3:Destroy() end self.UI.NotEnoughCoinsPopup_.Visible = false
			local Frame = self.UI.InfoPopUp_:Clone()
			self.Maid:GiveTask(Frame)
			Frame.Name = ""InfoPopUp""
			Frame.Context.Text = tostring(Context)
			Frame.CloseButton.TextLabel.Text = (CloseButtonText or ""CLOSE"")
			Frame.Visible = true
			Frame.Parent = self.UI
			Frame.LocalScript.Disabled = false
			return Frame
		end
		function self.UIFunctions.NotEnoughCoinsPopup()
			local OldFrame,OldFrame2,OldFrame3 = self.UI:FindFirstChild(""PopUpYN""),self.UI:FindFirstChild(""PopUpC""),self.UI:FindFirstChild(""InfoPopUp"")
			if (OldFrame) then OldFrame:Destroy() end if (OldFrame2) then OldFrame2:Destroy() end if (OldFrame3) then OldFrame3:Destroy() end self.UI.NotEnoughCoinsPopup_.Visible = false
			local Frame = self.UI.NotEnoughCoinsPopup_
			Frame.Visible = true
			return Frame
		end

		-- Effects Inventory
		local InventoryFrame = self.UI:WaitForChild(""InventoryFrame"")
		local BuyCoolDown = false

		coroutine.wrap(function()
			local ItemsData = require(game.ServerStorage.Storage.Assets.Modules.ItemsData)
			local RarityColor = {
				Common = Color3.fromRGB(116, 251, 76),
				Rare = Color3.fromRGB(0, 0, 245),
				Epic = Color3.fromRGB(234, 51, 247),
				Legendary = Color3.fromRGB(255, 255, 84),
				CommonLayoutOrder = 1,
				RareLayoutOrder = 2,
				EpicLayoutOrder = 3,
				LegendaryLayoutOrder = 4
			}

			local function GetItemFromName(ItemName)
				local Item_ = nil
				for _,v in pairs(ItemsData.InventoryItems) do
					if v.Name == ItemName then
						Item_ = v
						break
					end
				end
				return Item_
			end
			local function GetItemFromPlayerInventory(ItemName)
				local Item_ = nil
				for _,v in pairs(self.Profile.Data.Inventory)  do
					if v.Name == ItemName then
						Item_ = v
						break
					end
				end
				return Item_
			end
			local function PlayerHasItem(ItemName)
				local ItemFound = GetItemFromName(ItemName)
				if ItemFound == nil then if ItemName == nil then print(""Inventory Error: Item not found in the inventory's item table: "" .. ItemName) end return false end
				local Has_ = false
				for _,v in pairs(self.Profile.Data.Inventory) do
					if v.Name == ItemFound.Name then
						Has_ = true
						break
					end
				end
				return Has_
			end
			self.TempData.PlayerHasItem = PlayerHasItem

			function self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
				for _,Data in pairs(self.TempData.InventoryData.InventoryDisplayTemps) do
					local HasItem = PlayerHasItem(Data.ItemName)
					if HasItem == true then
						Data.Temp.Owned.Visible = false
						Data.Temp.LayoutOrder = -math.abs(Data.Temp.LayoutOrder)
						local PlayerInventoryItemData = GetItemFromPlayerInventory(Data.ItemName)
						if PlayerInventoryItemData ~= nil then
							if PlayerInventoryItemData.Equipped == true then
								Data.Temp.BackgroundColor3 = Color3.fromRGB(0, 30, 0)
							else
								Data.Temp.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
							end
						end
					else
						Data.Temp.Owned.Visible = true
						Data.Temp.LayoutOrder = math.abs(Data.Temp.LayoutOrder)
						Data.Temp.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
					end
				end
			end

			local function MakeItemsUI()
				for i,v in pairs(ItemsData.InventoryItems) do
					local suc,err = pcall(function()
						local NewTemp = game.ServerStorage.Storage.Assets.InventoryTemplate:Clone()
						self.Maid:GiveTask(NewTemp)
						NewTemp.Name = v.Name
						NewTemp.Type.Value = v.Type
						NewTemp.NameLabel.Text = v.Name
						--print(v.Name)
						NewTemp.RarityFrame.BackgroundColor3 = (RarityColor[v.RarityName] or Color3.new(1,1,1))
						NewTemp.LayoutOrder = (RarityColor[v.RarityName..""LayoutOrder""] or i)
						local CustomImage = game.ServerStorage.Storage.Assets.ItemsImage:FindFirstChild(v.Name)
						if v.Type == ""Trails"" then
							NewTemp.TrailFrame.Visible = true
							NewTemp.TrailFrame.UIGradient.Color = (v.Item.Color or ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,1,1)),ColorSequenceKeypoint.new(1,Color3.new(1,1,1))}))
						elseif v.Type == ""Halos"" then
							NewTemp.Halo.Visible = true
							NewTemp.Halo.ImageColor3 = v.Item.Handle.Color
							if (CustomImage) then
								NewTemp.Halo.Image = CustomImage.Image
							end
							if (v.Item:FindFirstChild(""IsCrown"")) then
								NewTemp.Halo.Image = ""rbxassetid://8173689292""
							end
						end
						self.Maid:GiveTask(NewTemp.MouseButton1Click:Connect(function()
							self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
							if PlayerHasItem(v.Name) == false then
								if v.Type == ""Trails"" then
									coroutine.wrap(function()
										local suc,err = self.BuyItemFromRobux(v.Name)
										if suc == false then
											print(err)
										end
									end)()
								elseif v.Type == ""Halos"" then
									if v.Name == ""Golden Halo"" then
										local PopUpYN = PopUp('Would you like to buy <font color=""rgb(255, 255, 0)"">Golden Halo</font> for <font color=""rgb(255, 255, 70)"">500K Coins</font>?')
										local c1,c2,d1
										c1 = self.Maid:GiveTask(PopUpYN.Y.MouseButton1Click:Connect(function()
											if BuyCoolDown then return end
											BuyCoolDown = true
											if self.PlayerStoredData.Coins >= 500000 then
												self.PlayerStoredData.Coins -= 500000
												self.AddItemInInventory(""Golden Halo"")
											else
												self.UIFunctions.NotEnoughCoinsPopup()
											end
											PopUpYN:Destroy()
											self.Maid[c1] = nil
											self.Maid[c2] = nil
											self.Maid[d1] = nil
											delay(1,function() if self==nil or self.Disconnected or self.Player == nil then return end
												BuyCoolDown = false
											end)
										end))
										c2 = self.Maid:GiveTask(PopUpYN.N.MouseButton1Click:Connect(function()
											self.Maid[c1] = nil
											self.Maid[c2] = nil
											self.Maid[d1] = nil
											PopUpYN:Destroy()
										end))
										d1 = self.Maid:GiveTask(PopUpYN.Destroying:Connect(function()
											self.Maid[c1] = nil
											self.Maid[c2] = nil
											self.Maid[d1] = nil
										end))
									else
										self.UIFunctions.PopUpInfoFrame2(tostring(ItemsData.HaloDesc[v.Name]))
									end
								end
							else
								self.EquipUnEquipItem(v.Name)
							end
						end))
						table.insert(self.TempData.InventoryData.InventoryDisplayTemps, {ItemName = v.Name, Temp = NewTemp})
						NewTemp.Parent = InventoryFrame.Container
					end)
					if not suc then print(err) end
				end
				self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
			end

			local MakingInventorySuccess,MakingInventoryError = pcall(MakeItemsUI)
			if not MakingInventorySuccess then print(MakingInventoryError) end
			local UpdateInventoryDisplaySuccess,UpdateInventoryDisplayError = pcall(self.TempData.InventoryData.Functions.UpdateInventoryDisplay)
			if not UpdateInventoryDisplaySuccess then print(UpdateInventoryDisplayError) end

			function self.TempData.ItemsEquipUnEquipData.Functions.EquipTrail(TrailName)
				local PlayerInventoryItemData = GetItemFromPlayerInventory(TrailName)
				if PlayerInventoryItemData ~= nil then
					if PlayerHasItem(TrailName) then
						PlayerInventoryItemData.Equipped = true
						local TrailFound = GetItemFromName(TrailName)
						if TrailFound then
							--print(TrailFound)
							if self.TempData.TrailAttachments.one ~= nil and self.TempData.TrailAttachments.two ~= nil then
								local NewTrail = TrailFound.Item:Clone()
								self.Maid:GiveTask(NewTrail)
								NewTrail.Parent = self.Player.Character.HumanoidRootPart
								NewTrail.Attachment0 = self.TempData.TrailAttachments.one
								NewTrail.Attachment1 = self.TempData.TrailAttachments.two
							end
						end
					end
				end
			end
			function self.TempData.ItemsEquipUnEquipData.Functions.UnEquipTrail(TrailName)
				local PlayerInventoryItemData = GetItemFromPlayerInventory(TrailName)
				if PlayerInventoryItemData ~= nil then
					if PlayerHasItem(TrailName) then
						PlayerInventoryItemData.Equipped = false
						for _,v in pairs(self.Player.Character.HumanoidRootPart:GetChildren()) do
							if v:IsA('Trail') then
								v:Destroy()
							end
						end
						--local TrailFound = self.Player.Character.HumanoidRootPart:FindFirstChild(TrailName)
						--if TrailFound then
						--	TrailFound:Destroy()
						--end
					end
				end
			end
			function self.TempData.ItemsEquipUnEquipData.Functions.EquipHalo(HaloName)
				local PlayerInventoryItemData = GetItemFromPlayerInventory(HaloName)
				if PlayerInventoryItemData ~= nil then
					if PlayerHasItem(HaloName) then
						PlayerInventoryItemData.Equipped = true
						local HaloFound = GetItemFromName(HaloName)
						if HaloFound then
							local NewParticle = HaloFound.Item:Clone()
							self.Maid:GiveTask(NewParticle)
							NewParticle.Parent = self.Player.Character
						end
					end
				end
			end
			function self.TempData.ItemsEquipUnEquipData.Functions.UnEquipHalo(HaloName)
				local PlayerInventoryItemData = GetItemFromPlayerInventory(HaloName)
				if PlayerInventoryItemData ~= nil then
					if PlayerHasItem(HaloName) then
						PlayerInventoryItemData.Equipped = false
						local ParticleFound = self.Player.Character:FindFirstChild(HaloName)
						if ParticleFound then
							ParticleFound:Destroy()
						end
					end
				end
			end

			self.TempData.ItemsEquipUnEquipData.Cooldowns.TrailCD = false
			local function EquipUnEquipTrail(ItemData)
				if ItemData ~= nil then
					if ItemData.Equipped then
						self.TempData.ItemsEquipUnEquipData.Functions.UnEquipTrail(ItemData.Name)
					else
						self.TempData.ItemsEquipUnEquipData.Functions.EquipTrail(ItemData.Name)
					end
				end
			end
			local function EquipUnEquipHalo(ItemData)
				if ItemData ~= nil then
					if ItemData.Equipped then
						self.TempData.ItemsEquipUnEquipData.Functions.UnEquipHalo(ItemData.Name)
					else
						self.TempData.ItemsEquipUnEquipData.Functions.EquipHalo(ItemData.Name)
					end
				end
			end

			local ItemBuyIDs = {Common = 1268446763, Rare = 1268446841, Epic = 1268447027, Legendary = 1268447074}
			function self.BuyItemFromRobux(ItemName)
				local ItemData = GetItemFromName(ItemName)
				if ItemData ~= nil then
					if PlayerHasItem(ItemData.Name) == false then
						if (ItemData.Type):lower() == (""Trails""):lower() or (ItemData.Type):lower() == (""Particles""):lower() or (ItemData.Type):lower() == (""Auras""):lower() then
							if (ItemData.RarityName):lower() == (""Common""):lower() then
								self.TempData.ItemsBuyingInProcess.Common = ItemData.Name
								MarketplaceService:PromptProductPurchase(self.Player, ItemBuyIDs.Common)
							elseif (ItemData.RarityName):lower() == (""Rare""):lower() then
								self.TempData.ItemsBuyingInProcess.Rare = ItemData.Name
								MarketplaceService:PromptProductPurchase(self.Player, ItemBuyIDs.Rare)
							elseif (ItemData.RarityName):lower() == (""Epic""):lower() then
								self.TempData.ItemsBuyingInProcess.Epic = ItemData.Name
								MarketplaceService:PromptProductPurchase(self.Player, ItemBuyIDs.Epic)
							elseif (ItemData.RarityName):lower() == (""Legendary""):lower() then
								self.TempData.ItemsBuyingInProcess.Legendary = ItemData.Name
								MarketplaceService:PromptProductPurchase(self.Player, ItemBuyIDs.Legendary)
							else
								return false, ""An unknown error ocurred 3.""
							end
							return true
						else
							return false, ""An unknown error ocurred 2.""
						end
					else
						return false,""You already own the item""
					end
				else
					return false,""An unknown error ocurred 1.""
				end
			end

			function self.BoughtItemFromRobux(ItemName)
				local ItemData = GetItemFromName(ItemName)
				if ItemData ~= nil then
					if PlayerHasItem(ItemName) == false then
						local retu = self.AddItemInInventory(ItemName)
						self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
						if retu == true then
							return true
						else
							return false,""An unknown error ocurred""
						end
					else
						return false, ""An error ocurred: Player already has item""
					end
				else
					return false, ""An error ocurred: Item data not found""
				end
			end

			local EquipCooldown = false
			--delay(7,function() if self==nil or self.Disconnected or self.Player == nil then return end
			--	EquipCooldown = false
			--end)
			function self.TempData.ItemsEquipUnEquipData.Functions.DoEquipUnEquip(ItemName, EquipUnEquip, ForceEquip)
				if EquipCooldown then return end
				EquipCooldown = true
				local PlayerInventoryItemData = GetItemFromPlayerInventory(ItemName)
				for _,v in pairs(self.PlayerStoredData.Inventory) do
					if v.Name ~= ItemName then
						local PlayerInventoryItemData_ = GetItemFromPlayerInventory(v.Name)
						if PlayerInventoryItemData_ ~= nil and PlayerInventoryItemData ~= nil then
							if PlayerInventoryItemData_.Equipped == true then
								if (PlayerInventoryItemData_.Type):lower() == (""Trails""):lower() and (PlayerInventoryItemData.Type):lower() == (""Trails""):lower() then
									self.TempData.ItemsEquipUnEquipData.Functions.UnEquipTrail(v.Name)
								elseif (PlayerInventoryItemData_.Type):lower() == (""Halos""):lower() and (PlayerInventoryItemData.Type):lower() == (""Halos""):lower() then
									self.TempData.ItemsEquipUnEquipData.Functions.UnEquipHalo(v.Name)
								end
							end
						end
					end
				end
				for _,v in pairs(self.PlayerStoredData.Inventory) do
					if v.Name == ItemName then
						if PlayerHasItem(ItemName) then
							if PlayerInventoryItemData ~= nil then
								if (PlayerInventoryItemData.Type):lower() == (""Trails""):lower() then
									EquipUnEquipTrail(PlayerInventoryItemData)
								elseif (PlayerInventoryItemData.Type):lower() == (""Halos""):lower() then
									EquipUnEquipHalo(PlayerInventoryItemData)
								end
								self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
							end
						end
					end
				end
				delay(0.1,function() if self==nil or self.Disconnected or self.Player == nil then return end
					EquipCooldown = false
				end)
			end

			function self.EquipUnEquipItem(ItemName)
				self.TempData.ItemsEquipUnEquipData.Functions.DoEquipUnEquip(ItemName, true, false)
			end

			function self.ForceEquipItems()
				if EquipCooldown then
					repeat wait() until EquipCooldown == false
				end
				EquipCooldown = true
				for _,v in pairs(self.PlayerStoredData.Inventory) do
					local PlayerInventoryItemData = GetItemFromPlayerInventory(v.Name)
					if PlayerInventoryItemData ~= nil then
						if PlayerInventoryItemData.Equipped == true then
							if (PlayerInventoryItemData.Type):lower() == (""Trails""):lower() then
								self.TempData.ItemsEquipUnEquipData.Functions.EquipTrail(v.Name)
							elseif (PlayerInventoryItemData.Type):lower() == (""Halos""):lower() then
								self.TempData.ItemsEquipUnEquipData.Functions.EquipHalo(v.Name)
							end
						end
					end
				end
				EquipCooldown = false
			end

			function self.AddItemInInventory(ItemName, CheckAdd, ObjAdd)
				local ItemDataFound = GetItemFromName(ItemName)
				if ItemDataFound ~= nil then
					if PlayerHasItem(ItemDataFound.Name) then
						if CheckAdd == false then
							print(""Inventory error: Player already has Item: "" .. ItemName)
						end
						if ObjAdd == true then
							return ""Player already has Item.""
						end
						return false
					end
					table.insert(self.PlayerStoredData.Inventory,{Name = tostring(ItemDataFound.Name), Type = tostring(ItemDataFound.Type), Equipped = false})
					coroutine.wrap(function()
						self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
					end)()
					if ObjAdd == true then
						return ""Added "" .. ItemName .. "" Into "" .. self.Player.Name .. ""'s Inventory.""
					end
					return true
				else
					if ObjAdd == true then
						return ""Item not found.""
					end
					print(""Inventory error: Item data not found to add in inventory: "" .. ItemName)
					return false
				end
			end
			function self.RemoveItemInInventory(ItemName, CheckAdd, ObjRemove)
				local ItemDataFound = GetItemFromName(ItemName)
				if ItemDataFound ~= nil then
					if PlayerHasItem(ItemDataFound.Name) == false then
						if CheckAdd == false then
							print(""Inventory error: Player already has Item: "" .. ItemName)
						end
						if ObjRemove == true then
							return ""Player does not own the Item.""
						end
						return false
					end
					for i,v in pairs(self.PlayerStoredData.Inventory) do
						if v.Name == tostring(ItemDataFound.Name) then
							pcall(function()
								if v.Equipped == true then
									self.EquipUnEquipItem(v.Name)
								end
							end)
							table.remove(self.PlayerStoredData.Inventory,i)
						end
					end
					coroutine.wrap(function()
						self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
					end)()
					if ObjRemove == true then
						return ""Removed "" .. ItemName .. "" from "" .. self.Player.Name .. ""'s Inventory.""
					end
					return true
				else
					if ObjRemove == true then
						return ""Item not found.""
					end
					print(""Inventory error: Item data not found to add in inventory: "" .. ItemName)
					return false
				end
			end
			--self.AddItemInInventory(""Alpha"")

			-- Creates
			coroutine.wrap(function()
				local CaseOpeningCoolDown = false
				local function OpenCase(IsMegaCase)
					local SelectedTable = ItemsData.NormalData
					if IsMegaCase then
						SelectedTable = ItemsData.MegaData
					end
					--coroutine.wrap(self.FireSelfRemote)(""effectbought"")
					--local function chooseRandomItem()
					--	local Chance = math.random(1,#SelectedTable.Items)
					--	local Counter = 0
					--	for _,ItemData in pairs(SelectedTable.Items) do
					--		Counter = Counter + ItemData[2]
					--		if Chance <= Counter then
					--			return ItemData
					--		end
					--	end
					--end
					local chosenid = SelectedTable.Chances[math.random(1,#SelectedTable.Chances)]
					local ChosenData = SelectedTable.Data[chosenid[1].Name]
					local ChosedItemData = GetItemFromName(chosenid[1].Name)

					local Duplicate = false
					local RefundedAmount = 0
					if PlayerHasItem(ChosedItemData.Name) then
						Duplicate = true
					end
					--for _,v in pairs(self.PlayerStoredData.Inventory) do
					--	if v.Name == ChosenData.Name then
					--		Duplicate = true
					--	end
					--end
					if Duplicate == false then
						table.insert(self.PlayerStoredData.Inventory,{Name = tostring(ChosedItemData.Name), Type = tostring(ChosedItemData.Type), Equipped = false})
					else
						if ChosenData.RarityName == ""Common"" then
							self.PlayerStoredData.Coins += 200
							RefundedAmount = 200
						elseif ChosenData.RarityName == ""Rare"" then
							self.PlayerStoredData.Coins += 350
							RefundedAmount = 350
						elseif ChosenData.RarityName == ""Epic"" then
							self.PlayerStoredData.Coins += 600
							RefundedAmount = 600
						elseif ChosenData.RarityName == ""Legendary"" then
							self.PlayerStoredData.Coins += 800
							RefundedAmount = 800
						end
					end
					self.TempData.InventoryData.Functions.UpdateInventoryDisplay()
					local function ShowOpeningAnimation()
						local CaseOpeningFrame = game.ServerStorage.Storage.Assets.CaseOpeningFrame:Clone()
						self.Maid:GiveTask(CaseOpeningFrame)
						CaseOpeningFrame.Parent = self.UI
						CaseOpeningFrame.Visible = false
						CaseOpeningFrame.Position = UDim2.new(0.5,0,-0.5,0)
						local TempDataFound = nil
						for _,v in pairs(self.TempData.InventoryData.InventoryDisplayTemps) do if v.ItemName == tostring(ChosedItemData.Name) then TempDataFound = v.Temp end end
						local Template = CaseOpeningFrame.Template
						Template.Visible = false
						for _,v in pairs(Template:GetChildren()) do
							if v:IsA(""UIAspectRatioConstraint"") or v:IsA(""UIScale"") then else
								v:Destroy()
							end
						end
						for _,v in pairs(TempDataFound:GetChildren()) do
							if v:IsA(""Frame"") or v:IsA(""ImageLabel"") or v:IsA(""TextLabel"") then
								local cloned = v:Clone()
								self.Maid:GiveTask(cloned)
								cloned.ZIndex = 7
								cloned.Parent = Template
							end
						end
						CaseOpeningFrame.Visible = true
						local DroppingTween = TweenService:Create(CaseOpeningFrame, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out),{Position = UDim2.new(0.5,0,0.5,0)})
						DroppingTween:Play()
						DroppingTween.Completed:Wait()
						Template.Visible = true
						local CaseT1,CaseT2,CaseT3,CaseT4 = TweenService:Create(CaseOpeningFrame.Case.Top, TweenInfo.new(0.8,Enum.EasingStyle.Linear),{
							Position = UDim2.new(0.5,0,-1,0)
						}),TweenService:Create(CaseOpeningFrame.Case.Front, TweenInfo.new(0.8,Enum.EasingStyle.Linear),{
							Position = UDim2.new(0.5,0,2,0)
						}),TweenService:Create(CaseOpeningFrame.Case.Back, TweenInfo.new(0.8,Enum.EasingStyle.Linear),{
							Position = UDim2.new(0.5,0,2,0)
						}),TweenService:Create(CaseOpeningFrame.Template.UIScale, TweenInfo.new(1,Enum.EasingStyle.Cubic,Enum.EasingDirection.Out),{
							Scale = 1.5
						})
						CaseT1:Play()
						CaseT2:Play()
						CaseT3:Play()
						CaseT1.Completed:Wait()
						local TemplateCon
						local Canceled = false
						CaseT4:Play()
						CaseOpeningFrame.Case.Visible = false
						CaseOpeningFrame.TextLabel.Visible = true
						local clr = (RarityColor[ChosenData.RarityName] or Color3.new(1,1,1))
						if Duplicate then
							CaseOpeningFrame.TextLabel.Text = '<font color=""#FFFF00"">+'.. RefundedAmount .. '</font> Duplicate'..' <font color=""rgb('..math.floor(clr.R*255)..','..math.floor(clr.G*255)..','..math.floor(clr.B*255)..')"">'.. ChosenData.RarityName ..""</font> Item Unlocked!""
						else
							CaseOpeningFrame.TextLabel.Text = 'New <font color=""rgb('..math.floor(clr.R*255)..','..math.floor(clr.G*255)..','..math.floor(clr.B*255)..')"">'.. ChosenData.RarityName ..""</font> Item Unlocked!""
						end
						TemplateCon = self.Maid:GiveTask(Template.MouseButton1Click:Connect(function()
							self.Maid[TemplateCon] = nil
							CaseOpeningFrame:Destroy()
							CaseT4:Cancel()
						end))
						delay(2,function() if self==nil or self.Disconnected or self.Player == nil then return end
							if Canceled == false then
								CaseOpeningFrame:Destroy()
							end
						end)
					end
					local succ,errr = pcall(function()
						ShowOpeningAnimation()
					end) if not succ then print(errr) end
				end
				self.OpenCase = OpenCase
				self.Maid:GiveTask(self.UI:WaitForChild(""InventoryFrame""):WaitForChild(""Container""):WaitForChild(""BoxFrame"").Normal.buy.MouseButton1Click:Connect(function()
					if CaseOpeningCoolDown then return end
					CaseOpeningCoolDown = true
					if self.PlayerStoredData.Coins >= 500 then
						self.PlayerStoredData.Coins -= 500
						coroutine.wrap(function()
							OpenCase()
						end)()
					else
						self.UIFunctions.NotEnoughCoinsPopup()
					end
					delay(0.5,function() if self==nil or self.Disconnected or self.Player == nil then return end
						CaseOpeningCoolDown = false
					end)
				end))
				self.Maid:GiveTask(self.UI:WaitForChild(""InventoryFrame""):WaitForChild(""Container""):WaitForChild(""BoxFrame"").Fancy.buy.MouseButton1Click:Connect(function()
					MarketplaceService:PromptProductPurchase(self.Player, 1269120860)
				end))
			end)()
		end)()
	end

	--// Touched Milk Func
	function self.TouchedMilk(MilkId, Purchased)
		if self.TempData.TouchCoolDown then return end
		self.TempData.TouchCoolDown = true
		local FoundDisplay
		local suc,err = pcall(function()
			local MilkVal = self.GetMilkVal(MilkId)
			if MilkVal == nil then return delay(2,function()if self==nil or self.Disconnected or self.Player == nil then return end self.TempData.TouchCoolDown = false end) end
			local PlayerHasMilk = self.PlayerHasMilk(MilkId)
			if PlayerHasMilk then if Purchased == true then self.NotifyPlayer(""The milk you just purchased was already owned by you!"") end return delay(2,function()if self==nil or self.Disconnected or self.Player == nil then return end self.TempData.TouchCoolDown = false end) end
			if _L.CustomMilkFuncs[MilkId] then
				local result
				local succ,errr = pcall(function()result = _L.CustomMilkFuncs[MilkId](self,self.Profile.Data.MilkFound,_L) end)
				if not succ then print(errr) return delay(2,function()if self==nil or self.Disconnected or self.Player == nil then return end self.TempData.TouchCoolDown = false end) end
				if result == false or result == nil then
					return delay(2,function()if self==nil or self.Disconnected or self.Player == nil then return end self.TempData.TouchCoolDown = false end)
				end
			end
			table.insert(self.Profile.Data.MilkFound,MilkId)
			coroutine.wrap(self.UpdateInvUI)()
			coroutine.wrap(_L.Functions.AwardBadge)(self.Player,(MilkVal.BadgeId.Value or 0000))
			FoundDisplay = self.UI.FoundDisplay
			pcall(function()
				FoundDisplay.ImageLabel.Image = MilkVal.Image.Value
				FoundDisplay.NameLabel.Text = MilkId
				FoundDisplay.NameLabel.TextColor3 = (self.TempData.RarityData[MilkVal.Rarity.Value] or Color3.new(1,1,1))
				FoundDisplay.Visible = true
				FoundDisplay.FoundLabel.Text = ""Found""
			end)
		end)
		if not suc then print(err) end
		delay(5,function()
			if self==nil or self.Disconnected or self.Player == nil then return end
			self.TempData.TouchCoolDown = false
			if FoundDisplay ~= nil then FoundDisplay.Visible = false end
		end)
	end

	function self.PurchasedMilk(MilkId)
		self.TempData.TouchCoolDown = true
		local FoundDisplay
		local suc,err = pcall(function()
			local MilkVal = self.GetMilkVal(MilkId)
			if MilkVal == nil then self.NotifyPlayer(""An unknown error occured, please file a bug report in our server."") return end
			local PlayerHasMilk = self.PlayerHasMilk(MilkId)
			if PlayerHasMilk then self.NotifyPlayer(""The milk you just purchased was already owned by you!"") return end

			table.insert(self.Profile.Data.MilkFound,MilkId)
			coroutine.wrap(self.UpdateInvUI)()

			coroutine.wrap(_L.Functions.AwardBadge)(self.Player,(MilkVal.BadgeId.Value or 0000))
			FoundDisplay = self.UI.FoundDisplay
			pcall(function()
				FoundDisplay.ImageLabel.Image = MilkVal.Image.Value
				FoundDisplay.NameLabel.Text = MilkId
				FoundDisplay.NameLabel.TextColor3 = (self.TempData.RarityData[MilkVal.Rarity.Value] or Color3.new(1,1,1))
				FoundDisplay.Visible = true
				FoundDisplay.FoundLabel.Text = ""Purchased""
			end)
		end)
		if not suc then print(err) end
		delay(5,function() if self==nil or self.Disconnected or self.Player == nil then return end
			self.TempData.TouchCoolDown = false
			if FoundDisplay ~= nil then FoundDisplay.Visible = false end
		end)
	end

	--// Collected Coin
	function self.CollectedCoin(customamount)
		local amount = tonumber((tonumber(customamount) or 20))
		if self.TempData.GamepassData.OwnsDoubleCoins then amount = amount*2 end
		self.Profile.Data.Coins += tonumber(amount)
		_L.Functions.Network.Fire(""PlayCoinSound"",self.Player)
	end

	--// Tool Equip/Unequip Function
	function self.EquipUnEquipTool(ToolName, Slot)
		if self.Player.Character == nil then return end

		local ecd = false
		local function equip()
			if ecd then return end ecd = true
			local ToolFound = game.ServerStorage.Storage.Assets.Tools:FindFirstChild(ToolName)
			if ToolFound then
				local newTool = ToolFound:Clone()
				self.Maid:GiveTask(newTool)
				newTool.Parent = self.Player.Backpack
				delay(0.1,function()
					newTool.Parent = self.Player.Character
					self.TempData.CurrentToolEquipped = newTool
					pcall(function()
						self.UI.ToolBar.ToolBar[""2""][tostring(Slot)].BackgroundTransparency = 0
					end)
					ecd = false
				end)
			end
		end
		local function unequipall()
			self.TempData.CurrentToolEquipped.Parent = self.Player.Backpack
			self.TempData.CurrentToolEquipped:Destroy()
			self.TempData.CurrentToolEquipped = nil
			pcall(function()
				for _,v in pairs(self.UI.ToolBar.ToolBar[""2""]:GetChildren()) do
					if v:IsA('TextButton') then
						v.BackgroundTransparency = 0.5
					end
				end
			end)
		end

		if self.TempData.CurrentToolEquipped == nil then
			equip()
		else
			if self.TempData.CurrentToolEquipped.Name == ToolName then
				unequipall()
			else
				unequipall()
				equip()
			end
		end
	end

	--// Fired Server
	function self.ServerEventFired(PlayerFired, Type, Args)
		if PlayerFired.UserId ~= self.Player.UserId then return warn(self.Player.Name .. ""'s plrfunc event was fire by "" .. PlayerFired.Name .. "". This might be a hacking/exploit case or a major framework malfunction."") end
		local suc,err = pcall(function()
			if Type == ""lightingchanged9283th"" then
				if math.floor(Args) == 0 or math.floor(Args) == 24 then
					self.TempData.TempMilkData.CanCollect_SleepyMilk = true
				else
					self.TempData.TempMilkData.CanCollect_SleepyMilk = false
				end
			elseif Type == ""OneMilkPlease_9ubgqf"" then
				local MilksThere = 0
				for _,v in pairs(game.ServerStorage.Storage.Items.Milks.Milks:GetChildren())do if v:IsA(""ObjectValue"")  then if v.Value then MilksThere+=1 end end end
				local minrequired = 50 --<<<<<<< important
				if #self.Profile.Data.MilkFound >= minrequired then -- MilksThere-1

					local amountRemoved = 0
					while (amountRemoved < minrequired) do
						local milkfound = false
						for i = 1, #self.Profile.Data.MilkFound, 1 do
							if self.Profile.Data.MilkFound[i] then
								table.remove(self.Profile.Data.MilkFound, i)
								amountRemoved = amountRemoved + 1
								milkfound = true
								break
							end
						end
						if not milkfound then break end
					end

					self.TouchedMilk(""Strawberry Milk"")
					self.Profile.Data.Prestige += 1
					coroutine.wrap(self.UpdateInvUI)()

					delay(.5,function()
						if self==nil or self.Disconnected or self.Player == nil then return end

						_L.Functions.Network.Fire(""NPCINTERACTION_TW4HR"", self.Player,  workspace.Map.InteractingParts.NPCs.Dad.Head, ""Be sure to take care of it."")
					end)

				else
					_L.Functions.Network.Fire(""NPCINTERACTION_TW4HR"", self.Player,  workspace.Map.InteractingParts.NPCs.Dad.Head, ""Come back when you've collected the milks you fool.."")
				end

			elseif Type == ""ResetMilk_24F83"" then
				if #self.Profile.Data.MilkFound > 0 then

					table.clear(self.Profile.Data.MilkFound)
					self.UpdateInvUI()

					delay(1,function()
						if self==nil or self.Disconnected or self.Player == nil then return end

						_L.Functions.Network.Fire(""NPCINTERACTION_TW4HR"", self.Player,  workspace.Map.InteractingParts.NPCs.Dad.Head, ""As you wish."")
					end)
				else
					_L.Functions.Network.Fire(""NPCINTERACTION_TW4HR"", self.Player, workspace.Map.InteractingParts.NPCs.Dad.Head, ""At least find some milk first!"")
				end
			elseif Type == ""ACTIVATEDTOOL823H_F32"" then
				if typeof(Args) ~= 'number' then return end
				if Args == 1 then
					if self.TempData.GamepassData.OwnsGravityCoil then
						self.EquipUnEquipTool(""GravityCoil"", 1)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,42687770)
					end
				elseif Args == 2 then
					if self.TempData.GamepassData.OwnsSpeedCoil then
						self.EquipUnEquipTool(""SpeedCoil"", 2)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,42687988)
					end
				elseif Args == 3 then
					if self.TempData.GamepassData.OwnsFusionCoil then
						self.EquipUnEquipTool(""FusionCoil"", 3)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,42688142)
					end
				elseif Args == 4 then
					if self.TempData.GamepassData.OwnsFlingGlove then
						self.EquipUnEquipTool(""Fling Glove"", 4)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,42803975)
					end
				elseif Args == 5 then
					if self.TempData.GamepassData.OwnsBlower then
						self.EquipUnEquipTool(""Blower"", 5)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,42804068)
					end
				elseif Args == 6 then
					if self.TempData.GamepassData.OwnsGrappleHook then
						self.EquipUnEquipTool(""GrappleHook"", 6)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,43150904)
					end
				elseif Args == 7 then
					if self.TempData.GamepassData.OwnsMagicCarpet then
						self.EquipUnEquipTool(""MagicCarpet"", 7)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,43633906)
					end
				elseif Args == 8 then
					if self.TempData.GamepassData.OwnsHandGun then
						self.EquipUnEquipTool(""Handgun"", 8)
					else
						MarketplaceService:PromptGamePassPurchase(self.Player,721178117)
					end
				end
			end
		end)
		if not suc then
			print(""error while handling server event firing: "" .. err)
		end
	end

	--// Notification
	function self.NotifyPlayer(Text, Size)
		local newNTemp = game.ServerStorage.Storage.Assets.NotifTemp:Clone()
		local tmaidid = self.Maid:GiveTask(newNTemp)
		local clickmaidid
		newNTemp.Text = Text
		if typeof(Size) == 'UDim2' then
			newNTemp.Size = Size
		end
		newNTemp.Parent = self.UI.ToolBar.Notif
		local function fadeaway()
			local tween = game:GetService('TweenService'):Create(newNTemp,TweenInfo.new(1),{BackgroundTransparency = 1,TextTransparency = 1})
			tween:Play()
			delay(1,function() if self==nil or self.Disconnected or self.Player == nil then return end
				self.Maid[tmaidid] = nil
				if clickmaidid then self.Maid[clickmaidid] = nil end
			end)
		end

		delay(6, function() if self==nil or self.Disconnected or self.Player == nil then return end
			if newNTemp then
				fadeaway()
			end
		end)
		clickmaidid = self.Maid:GiveTask(newNTemp.MouseButton1Click:Connect(function() if self==nil or self.Disconnected or self.Player == nil then return end
			if newNTemp then
				fadeaway()
			end
		end))
	end

	--// Custom Chat funcs
	self.Maid:GiveTask(self.Player.Chatted:Connect(function(msg)
		if string.lower(msg) == ""ribbit ribbit"" then
			if self.Player.Character then
				local hrp = self.Player.Character:FindFirstChild(""HumanoidRootPart"")
				local frMain = workspace.Map.InteractingParts.ConvenienceFolder.FrogMushroomFairy.Main
				if hrp then
					local dist = (hrp.Position-frMain.Position).Magnitude
					if dist <= 10 then
						self.TempData.TempMilkData.CanCollectMushroomMilk = true
						_L.Functions.Network.Fire(""CLIENTMILKSHOW_8GQA3"", self.Player, ""Mushroom Milk Carton"")
						delay(10,function() if self==nil or self.Disconnected or self.Player == nil then return end
							self.TempData.TempMilkData.CanCollectMushroomMilk = false 
						end)
					end
				end
			end
		end
	end))

	--// Runs
	function self.RunEveryMinute()
		if self then
			if self.Profile then
				coroutine.wrap(function()
					if self.TempData.PlayerHasItem and self.AddItemInInventory then
						local ItemsNeeded = {
							""Time Halo"",
							""Coral Halo"",
							""Pink Halo"",
							""Red Halo"",
							""Purple Halo"",
							""Golden Halo"",
							""Aqua Halo""
						}
						for i,v in pairs(ItemsNeeded) do
							if self.TempData.PlayerHasItem(v) == false then
								return
							end
						end
						self.AddItemInInventory(""Crystal Halo"",true)
					end
				end)()
			end
		end
	end
	function self.RunEverySecond()
		if self then
			if self.Profile then
				if self.Profile.Data then
					self.Profile.Data.TimePlayed += 1

					if self.TempData then
						if self.TempData.LBFolder then
							if self.TempData.LBFolder.Prestige then
								if self.Profile.Data.Prestige then
									if self.TempData.LBFolder.Prestige.Value ~= self.Profile.Data.Prestige then
										self.TempData.LBFolder.Prestige.Value = self.Profile.Data.Prestige
									end
								end
							end
						end

						pcall(function()
							if self.UI then
								if self.UI:FindFirstChild(""CoinsDisplay"") then
									self.UI.CoinsDisplay.Amount.Text = tostring(self.Profile.Data.Coins)
								end
							end
						end)

						coroutine.wrap(function()
							for i,v in pairs({
								[""Time Halo""] = 180000,}) do
								if self.PlayerStoredData.TimePlayed >= v then
									if self.TempData.PlayerHasItem(""Time Halo"") == false then
										self.AddItemInInventory(i, true)
									end
									--pcall(function()
									--	local GameModule = require(script.Parent.Game)
									--	GameModule:AwardBadge(self.Player, 2124902235)
									--end)
								end
							end
						end)()
						coroutine.wrap(function()
							for i,v in pairs({
								[""Pink Halo""] = 1,
								[""Coral Halo""] = 5,
								[""Red Halo""] = 25,
								[""Purple Halo""] = 50,
								['White Halo'] = 100}) do
								if self then
									if self.PlayerStoredData then
										if self.PlayerStoredData.Prestige >= v then
											if self.AddItemInInventory ~= nil then
												if self.TempData.PlayerHasItem(i) == false then
													self.AddItemInInventory(i, true)
												end
											end
										end
									end
								end
							end
						end)()
					end
				end
			end
		end
	end
	function self.RunOnStepped()
		if self then
			if self.Player then
				if self.Player.Character then
					if self.Player.Character.Humanoid then
						if self.TempData.Sprint and (self.TempData.CurrentToolEquipped ~= nil and (self.TempData.CurrentToolEquipped.Name == ""SpeedCoil"" or self.TempData.CurrentToolEquipped.Name == ""FusionCoil"")) then
							self.Player.Character.Humanoid.WalkSpeed = 36
						elseif self.TempData.Sprint == false and (self.TempData.CurrentToolEquipped ~= nil and (self.TempData.CurrentToolEquipped.Name == ""SpeedCoil"" or self.TempData.CurrentToolEquipped.Name == ""FusionCoil"")) then
							self.Player.Character.Humanoid.WalkSpeed = 26
						elseif self.TempData.Sprint then
							self.Player.Character.Humanoid.WalkSpeed = 26
						else
							self.Player.Character.Humanoid.WalkSpeed = 16
						end
						self.Player.Character.Humanoid.JumpPower = 50
					end
				end
			end
		end
	end

	--// PRuns
	function self.PRun()
		if self.TempData.LBFolder == nil then
			self.TempData.LBFolder = Instance.new(""Folder"",self.Player)
			self.Maid:GiveTask(self.TempData.LBFolder)
			self.TempData.LBFolder.Name = ""leaderstats""
			local Prestige = Instance.new('NumberValue',self.TempData.LBFolder)
			self.Maid:GiveTask(Prestige)
			Prestige.Name = ""Prestige""
			Prestige.Value = self.Profile.Data.Prestige
		end
		delay(2, function()
			if self==nil or self.Disconnected or self.Player == nil then return end

			self.LoadCharacterUtils(self.Player.Character)
		end)

		function self.CheckOwnsGears()
			local suc,err = pcall(function()
				self.TempData.GamepassData.OwnsGravityCoil = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,42687770) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsSpeedCoil = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,42687988) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsFusionCoil = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,42688142) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsFlingGlove = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,42803975) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsBlower = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,42804068) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsGrappleHook = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,43150904) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsMagicCarpet = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,43633906) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsDoubleCoins = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,48899382) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsHandGun = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,721178117) if self==nil or self.Disconnected or self.Player == nil then return end
				self.TempData.GamepassData.OwnsTp = MarketplaceService:UserOwnsGamePassAsync(self.Player.UserId,720828709) if self==nil or self.Disconnected or self.Player == nil then return end
			end)
			if not suc then print(err) end
		end
		self.CheckOwnsGears()
	end

	--// Connections
	coroutine.wrap(self.PRun)()
	self.Maid:GiveTask(self.Player.CharacterAdded:Connect(self.LoadCharacterUtils))
	coroutine.wrap(function()
		local suc,err = pcall(self.InitUI)
		if not suc then print(""Failers to init UI for "".. Player_Object.Name .."": "" .. err) end
	end)()

	setmetatable(self, PlayerModule)
	return self
end

function PlayerModule.GetPlayerFunction(Player)
	return PlayerModule.PlayerFunctions[Player]
end

local PrevSec_ = 0
workspace:GetPropertyChangedSignal(""DistributedGameTime""):Connect(function()
	if PrevSec_ ~= math.floor(workspace.DistributedGameTime) then PrevSec_ = math.floor(workspace.DistributedGameTime)
		for i,pfunc in pairs(PlayerModule.PlayerFunctions) do
			coroutine.wrap(function()
				local suc, err = pcall(function()
					if pfunc then
						if pfunc.Player and pfunc.Disconnected == false then
							if pfunc.RunEverySecond then
								pfunc.RunEverySecond()
							end
						end
					end
				end)if not suc then print(err) end
			end)()
		end
	end
end)
game:GetService(""RunService"").Stepped:Connect(function()
	for i,pfunc in pairs(PlayerModule.PlayerFunctions) do
		coroutine.wrap(function()
			local suc, err = pcall(function()
				if pfunc then
					if pfunc.Player then
						if pfunc.RunOnStepped and pfunc.Disconnected == false then
							pfunc.RunOnStepped()
						end
					end
				end
			end)if not suc then print(err) end
		end)()
	end
end)

coroutine.wrap(function()
	repeat wait(0.5) until _L ~= nil
	_L.Functions.Network.Fired(""SPECIALCLIENTEVENTS_32TQR""):Connect(function(Plr, Type, Args)
		local pfunc = PlayerModule.GetPlayerFunction(Plr)
		if pfunc then
			pfunc.ServerEventFired(Plr,Type,Args)
		else
			warn(Plr.Name .. "" fired a server event (SPECIALCLIENTEVENTS) before even the PlayerFunction was loaded, might be a hacking/exploiting case [1] [most likely Could be possible because player has trigerred a server event from client before PlrFunc even loaded]."")
		end
	end)
end)()

coroutine.wrap(function()
	local function onPromptGamePassPurchaseFinished(player, purchasedPassID, purchaseSuccess)

		if purchaseSuccess == true then
			local pfunc = PlayerModule.GetPlayerFunction(player)
			if pfunc ~= nil then
				local IDs = {
					[42687770] = ""OwnsGravityCoil"",
					[42687988] = ""OwnsSpeedCoil"",
					[42688142] = ""OwnsFusionCoil"",
					[42803975] = ""OwnsFlingGlove"",
					[42804068] = ""OwnsBlower"",
					[43150904] = ""OwnsGrappleHook"",
					[43633906] = ""OwnsMagicCarpet"",
					[48899382] = ""OwnsDoubleCoins"",
					[721178117] = ""OwnsHandGun"",
					[720828709] = ""OwnsTp""
				}

				if IDs[purchasedPassID] then
					pfunc.TempData.GamepassData[IDs[purchasedPassID]] = true
				end
			end
		end
	end

	MarketplaceService.PromptGamePassPurchaseFinished:Connect(onPromptGamePassPurchaseFinished)
end)()


coroutine.wrap(function()
	local suc,err = pcall(function()
		local ChatServiceRunner = game.ServerScriptService:WaitForChild(""ChatServiceRunner"",math.huge)
		local ChatService = require(ChatServiceRunner:FindFirstChild(""ChatService"", true))
		ChatService.SpeakerAdded:Connect(function(playerName)
			delay(2.5,function()
				local player = game.Players:FindFirstChild(playerName)
				if not player then return end
				local speaker = ChatService:GetSpeaker(playerName)
				local plrfunc = PlayerModule.GetPlayerFunction(player)

				if plrfunc then
					if plrfunc.Profile then
						if plrfunc.Profile.Data then
							if plrfunc.Profile.Data.AmountDonated > 0 then
								speaker:SetExtraData(""Tags"",{{TagText = ""DONATOR"", TagColor = Color3.fromRGB(0, 255, 0)}})
							end
						end
					end
				end
			end)
		end)
	end)
	if not suc then print(err) end
end)()

return PlayerModule"
d6N8EdpH,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 12:54:10 PM CDT,"from itertools import *
def f(x, y, z, w):
    return (w or x or y) <= ((y or z) and x or y and (w or z))
for a in product([0, 1], repeat = 5):
    table = [(0, 0, 0, a[0]), (a[1], 1, 1, a[2]), (a[3], 1, a[4], 1)]
    if len(table) == len(set(table)):
        for p in permutations('xyzw'):
            if [f(**dict(zip(p, r))) for r in table] == [0, 0, 0]:
                print(p)"
dE0EQiTR,Untitled,Josif_tepe,C++,Tuesday 5th of March 2024 12:49:28 PM CDT,"#include <iostream>
//#include <bits/stdc++.h>

using namespace std;



int main() {
    int N, Q;
    cin>>N>>Q;
    vector<int> A;
    vector<int> B;
    for(int i = 0; i<N; i++) {
        int x;
        cin>>x;
        A.push_back(x);
    }
    for(int i = 0; i<Q; i++) {
        int x;
        cin>>x;
        B.push_back(x);
    }
    int indeksi[51];
    for(int i = 0; i<51; i++) {
        indeksi[i] = -1;
    }

    for(int i = 0; i<N; i++){
        if(indeksi[A[i]] == -1) {
            indeksi[A[i]] = i+1;
        }

    }

    for(int i = 0; i<Q; i++) {
        cout<<indeksi[B[i]] << "" "";
        for(int j = 0; j<51; j++) {
            if(indeksi[j]<indeksi[B[i]] and indeksi[j]!=-1) {
                indeksi[j]++;
            }

        }
        indeksi[B[i]] = 1;
    }

}
"
K5ad9G3K,Untitled,smj007,Python,Tuesday 5th of March 2024 12:46:42 PM CDT,"class RandomizedSet:

    def __init__(self):
        self.hashmap = {}
        self.list = []
        

    def insert(self, val: int) -> bool:
        if val in self.hashmap:
            return False

        self.list.append(val)
        self.hashmap[val] = len(self.list) - 1
        return True
            
    def remove(self, val: int) -> bool:

        if val not in self.hashmap:
            return False

        idx = self.hashmap[val]
        self.list[idx], self.list[-1] = self.list[-1], self.list[idx]
        self.hashmap[self.list[idx]] = idx

        self.list.pop()
        del self.hashmap[val]
        return True
        
    def getRandom(self) -> int:
        import random
        return random.choice(self.list)"
PwD1gfkA,pb1-char,madidino,C++,Tuesday 5th of March 2024 12:44:04 PM CDT,"#include <iostream>
#include <cstring>
using namespace std;

int main()
{
    char s[252];
    cin.get(s,252);
    char x[10];
    cin>>x;
    char *p;
    p=strtok(s,"" "");
    while(p!=NULL)
    {
        if(strcmp(x,p)==0)
        {
            p=strtok(NULL,"";"");
            cout<<p<<"" "";
        }
        else
        {
            p=strtok(NULL,"";"");
        }
        p=strtok(NULL,"" "");
    }
    //DAN MARIS; DANIELA PREPELEAC; DAN POPA; EDANA DAN
    return 0;
}
"
7yGadL6B,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Tuesday 5th of March 2024 12:38:53 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Pastes.io VS Pastebin :
More features example share pages QR CODEs - Embed options .. etc
Simple Ads by Google Adsense ( Few rather than Pastebin )
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
User profile page
Trending pastes page (day, week, month, year)
Simple & responsive interface
Night Mode
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
Auto generated sitemaps
User management
Admin panel to manage pastes, syntax, users, comments, pages, languages, translations & other settings
User profile page
Trending pastes page (day, week, month, year)
QR Code for share
No Captcha for logged in users feature
.. etc"
U5KwGjEV,Untitled,Farz0l1x,Python,Tuesday 5th of March 2024 12:36:01 PM CDT,"file = open('8.txt')
A = file.readline()
for i in range(len(A)):
    if A[i] not in '1234567890':
        A = A.replace(A[i], ' ')
A = list(map(str, A.split()))
print(len(max(A, key=len)))"
xC7ts7ad,Untitled,Nenogzar,Python,Tuesday 5th of March 2024 12:32:55 PM CDT,"n = int(input())
b = int(input())
binary_list = []

while n > 0:
    remainder = n % 2
    binary_list.insert(0, remainder)
    n = n // 2


binary_str = ''.join(map(str, binary_list))
count_b_digit = binary_str.count(str(b))

print(binary_str) # Hex
print(count_b_digit)  # count"
