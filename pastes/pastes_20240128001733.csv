id,title,username,language,date,content
99jZfdMm,2024-01-27_stats.json,rdp_snitch,JSON,Saturday 27th of January 2024 06:16:10 PM CDT,"{
  ""ip"": {
    ""103.240.84.186"": 4,
    ""43.134.0.225"": 2,
    ""106.58.210.135"": 4,
    ""175.4.26.179"": 10,
    ""106.58.212.195"": 4,
    ""216.202.197.116"": 14,
    ""103.47.194.216"": 2,
    ""43.139.115.6"": 6,
    ""36.111.174.56"": 20,
    ""106.58.211.156"": 6,
    ""212.186.143.100"": 4,
    ""124.67.115.210"": 14,
    ""45.141.26.228"": 4,
    ""113.108.8.125"": 14,
    ""192.227.101.80"": 2,
    ""80.107.92.7"": 4,
    ""101.32.116.25"": 4,
    ""122.227.146.74"": 8,
    ""222.219.240.13"": 6,
    ""218.90.120.19"": 4,
    ""45.227.254.48"": 4,
    ""124.67.254.109"": 26,
    ""103.252.93.46"": 2,
    ""134.175.53.186"": 2,
    ""203.57.39.224"": 4,
    ""193.237.214.102"": 6,
    ""101.32.126.66"": 6,
    ""14.18.41.26"": 2,
    ""52.80.19.192"": 6,
    ""111.229.232.159"": 12,
    ""222.93.104.67"": 8,
    ""80.151.251.216"": 14,
    ""193.111.248.232"": 2,
    ""111.230.10.59"": 8,
    ""111.231.15.224"": 10,
    ""106.58.215.167"": 6,
    ""185.106.176.8"": 10,
    ""115.236.75.10"": 8,
    ""106.225.199.92"": 4,
    ""203.56.40.167"": 12,
    ""43.243.136.202"": 28,
    ""111.231.165.19"": 2,
    ""140.246.215.173"": 8,
    ""62.122.184.188"": 6,
    ""118.89.60.27"": 6,
    ""125.88.211.59"": 2,
    ""1.117.40.238"": 4,
    ""117.145.27.42"": 4,
    ""103.44.237.12"": 4,
    ""106.55.54.44"": 8,
    ""115.159.51.34"": 8,
    ""106.58.164.95"": 6,
    ""205.210.31.105"": 6,
    ""42.193.192.91"": 2,
    ""183.134.89.41"": 2,
    ""95.181.173.81"": 8,
    ""167.248.133.39"": 2,
    ""111.161.41.132"": 10,
    ""103.245.195.202"": 8,
    ""172.81.216.105"": 4,
    ""208.53.61.115"": 14,
    ""87.251.75.64"": 2,
    ""150.223.66.55"": 6,
    ""62.204.41.195"": 8,
    ""101.33.237.209"": 4,
    ""103.215.81.133"": 4,
    ""43.134.33.208"": 4,
    ""150.223.35.239"": 6,
    ""106.58.217.149"": 6,
    ""119.91.205.99"": 8,
    ""106.58.184.58"": 6,
    ""106.58.212.201"": 2,
    ""203.56.4.242"": 12,
    ""101.33.204.231"": 2,
    ""106.58.178.111"": 2,
    ""111.229.184.146"": 6,
    ""222.219.129.74"": 6,
    ""211.91.60.69"": 8,
    ""106.58.165.88"": 4,
    ""82.156.150.3"": 12,
    ""185.170.144.3"": 4,
    ""45.227.254.26"": 4,
    ""87.251.75.145"": 4,
    ""116.73.243.187"": 12,
    ""106.58.219.212"": 8,
    ""20.98.219.87"": 2,
    ""219.144.67.36"": 6,
    ""81.19.135.2"": 6,
    ""198.235.24.238"": 6,
    ""36.111.166.97"": 2,
    ""194.165.16.10"": 4,
    ""123.206.124.122"": 2,
    ""36.111.146.78"": 6,
    ""141.98.82.22"": 2,
    ""113.200.222.57"": 12,
    ""125.230.233.202"": 4,
    ""139.177.202.169"": 8,
    ""138.68.255.150"": 2,
    ""49.232.169.162"": 4,
    ""106.116.169.71"": 2,
    ""119.96.169.74"": 4,
    ""223.240.87.62"": 4,
    ""101.43.174.224"": 6,
    ""43.134.83.223"": 2,
    ""43.138.31.20"": 4,
    ""118.193.65.209"": 2,
    ""118.163.247.235"": 2,
    ""106.75.254.159"": 2,
    ""106.225.199.24"": 4,
    ""198.44.167.61"": 4,
    ""88.214.25.57"": 4,
    ""61.171.106.140"": 6,
    ""205.210.31.103"": 6,
    ""203.57.46.218"": 2,
    ""185.180.143.5"": 2,
    ""150.223.76.57"": 2,
    ""150.223.32.106"": 4,
    ""138.68.128.9"": 2,
    ""27.128.239.46"": 2,
    ""39.98.127.243"": 4,
    ""150.223.13.195"": 4,
    ""79.209.203.149"": 4,
    ""195.97.20.99"": 4,
    ""141.98.11.142"": 2,
    ""36.71.68.66"": 2,
    ""167.98.36.10"": 4,
    ""120.48.64.252"": 2,
    ""42.51.39.209"": 4,
    ""45.227.254.8"": 8,
    ""61.171.113.104"": 2,
    ""36.26.90.235"": 6,
    ""78.157.221.232"": 2,
    ""45.141.26.68"": 2,
    ""81.70.142.203"": 2,
    ""185.73.124.229"": 6,
    ""43.245.205.25"": 2,
    ""79.209.197.104"": 2,
    ""213.109.202.232"": 6,
    ""27.8.44.19"": 10,
    ""140.246.149.76"": 2,
    ""124.221.102.186"": 2,
    ""198.235.24.59"": 6,
    ""106.58.164.84"": 2,
    ""180.76.153.250"": 2,
    ""106.58.166.180"": 2,
    ""43.133.56.30"": 2
  },
  ""asn"": {
    ""AS4837"": 84,
    ""AS132203"": 20,
    ""AS4134"": 122,
    ""AS63838"": 10,
    ""AS3356"": 14,
    ""AS140832"": 2,
    ""AS45090"": 124,
    ""AS58519"": 90,
    ""AS8412"": 4,
    ""AS142299"": 6,
    ""AS13886"": 2,
    ""AS6799"": 4,
    ""AS267784"": 16,
    ""AS135918"": 2,
    ""AS5378"": 6,
    ""AS55960"": 6,
    ""AS3320"": 20,
    ""AS49581"": 2,
    ""AS42960"": 10,
    ""AS134238"": 8,
    ""AS4808"": 28,
    ""AS57523"": 6,
    ""AS58466"": 2,
    ""AS9808"": 4,
    ""AS4816"": 4,
    ""AS396982"": 24,
    ""AS58461"": 8,
    ""AS210644"": 8,
    ""AS398324"": 2,
    ""AS9541"": 8,
    ""AS17341"": 14,
    ""AS208091"": 12,
    ""AS59425"": 8,
    ""AS55933"": 4,
    ""AS197414"": 4,
    ""AS17488"": 12,
    ""AS8075"": 2,
    ""AS134768"": 6,
    ""AS209588"": 8,
    ""AS48721"": 4,
    ""AS3462"": 6,
    ""AS63949"": 8,
    ""AS14061"": 4,
    ""AS58563"": 4,
    ""AS135377"": 2,
    ""AS17621"": 2,
    ""AS142032"": 4,
    ""AS29551"": 4,
    ""AS4812"": 8,
    ""AS211680"": 2,
    ""AS37963"": 4,
    ""AS3329"": 4,
    ""AS209605"": 2,
    ""AS7713"": 2,
    ""AS25180"": 4,
    ""AS38365"": 4,
    ""AS56005"": 4,
    ""AS42831"": 2,
    ""AS9260"": 2,
    ""AS208312"": 6
  },
  ""isp"": {
    ""China Unicom CHINA169 Network"": 4,
    ""Shenzhen Tencent Computer Systems Company Limited"": 114,
    ""Chinanet"": 128,
    ""Hengyang"": 10,
    ""Level 3 Communications"": 14,
    ""FTECH"": 2,
    ""Cloud Computing Corporation"": 90,
    ""T-Mobile Austria GmbH"": 4,
    ""CNC Group CHINA169 Neimeng Province Network"": 40,
    ""CLOUDFOREST CO., LTD"": 6,
    ""Cloud South"": 2,
    ""Ote SA (Hellenic Telecommunications Organisation)"": 4,
    ""Aceville Pte.ltd"": 12,
    ""Flyservers S.A."": 28,
    ""Viet Digital Technology Liability Company"": 2,
    ""Vodafone Broadband Dynamic"": 6,
    ""CHINANET Guangdong province network"": 2,
    ""Beijing Guanghuan Xinwang Digital"": 6,
    ""Deutsche Telekom AG"": 20,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""VH-GLOBAL"": 10,
    ""CHINANET Jiangx province IDC network"": 8,
    ""China Unicom Beijing Province Network"": 28,
    ""Chang Way Technologies Co. Limited"": 6,
    ""China Telecom"": 2,
    ""China Internet Network Information Center"": 16,
    ""China Mobile communications corporation"": 4,
    ""China Telecom (Group)"": 12,
    ""Google LLC"": 24,
    ""Aeza International LTD"": 8,
    ""Censys, Inc."": 2,
    ""China Unicom Tianjin Province Network"": 10,
    ""Cyber Internet Services (Private) Limited"": 8,
    ""C7 Data Centers"": 14,
    ""Xhost Internet Solutions LP"": 16,
    ""Horizon LLC"": 8,
    ""Cloudie Limited"": 4,
    ""CHINA UNICOM China169 Backbone"": 8,
    ""Hathway IP over Cable Internet Access"": 12,
    ""Microsoft Corporation"": 2,
    ""CHINANET SHAANXI province Cloud Base network"": 6,
    ""CNC Group CHINA169 Shannxi Province Network"": 12,
    ""Chunghwa Telecom Co., Ltd."": 6,
    ""Akamai Technologies, Inc."": 8,
    ""DigitalOcean, LLC"": 4,
    ""CHINANET Hubei province network"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""UCLOUD"": 2,
    ""VpsQuan L.L.C"": 4,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""NSEC - Sistemas Informaticos, S.A."": 2,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""HOL"": 4,
    ""UAB Host Baltic"": 2,
    ""PT. Telekomunikasi Indonesia"": 2,
    ""Exponential-E Ltd."": 4,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 4,
    ""China Unicom Henan Province network"": 4,
    ""UK Dedicated Servers Limited"": 2,
    ""EuroNet Internet"": 2,
    ""Multinet 43-205/24"": 2,
    ""Red Byte LLC"": 6,
    ""China Unicom Chongqing Province Network"": 10
  },
  ""org"": {
    ""Unknown"": 100,
    ""Tencent Cloud Computing"": 8,
    ""Chinanet YN"": 70,
    ""Chinanet HN"": 10,
    ""Fort Wayne Internet, LLC"": 14,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 40,
    ""Chinanet ZJ"": 34,
    ""LBR GmbH"": 4,
    ""Cloudforest CO., LTD"": 6,
    ""Chinanet GD"": 16,
    ""Cloud South"": 2,
    ""Ote SA"": 4,
    ""Ningbo chaoji mamawangluojishu ltd"": 8,
    ""Chinanet JS"": 12,
    ""UAB Host Baltic"": 16,
    ""Mailand Technology Trading Services Company Limited"": 2,
    ""Chinanet FJ"": 30,
    ""Thus Group Holdings Limited"": 6,
    ""AWS EC2 (cn-north-1)"": 6,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 82,
    ""Deutsche Telekom AG"": 20,
    ""Tube-Hosting"": 2,
    ""VH Global Limited"": 10,
    ""Hangzhou xiaoshan public transportation co., LTD"": 8,
    ""Chinanet JX"": 8,
    ""Beijing yunchuang communication Technology Co."": 28,
    ""Chinanet SD"": 32,
    ""Chang Way Technologies Co. Limited"": 12,
    ""China Mobile"": 4,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Aeza International LTD"": 8,
    ""Censys, Inc."": 2,
    ""Cyber Internet Services Pakistan"": 8,
    ""VegaDigital Solutions"": 14,
    ""Xhost Internet Solutions"": 6,
    ""Horizon LLC"": 8,
    ""Netads Online Limited"": 4,
    ""Unicom"": 8,
    ""Xhostis"": 10,
    ""Hathway Cable and Datacom Limited"": 12,
    ""Microsoft Azure Cloud (eastus2)"": 2,
    ""Chinanet SN"": 6,
    ""Alviva Holding Limited"": 6,
    ""Flyservers S.A"": 4,
    ""Vdsline"": 2,
    ""Chunghwa Telecom Co. Ltd."": 6,
    ""Linode"": 8,
    ""DigitalOcean, LLC"": 4,
    ""Chinanet HE"": 4,
    ""Chinanet HB"": 4,
    ""Chinanet AH"": 4,
    ""Ucloud Information Technology"": 2,
    ""Shanghai UCloud Information Technology Company Limited"": 2,
    ""qianqian"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Chinanet SH"": 8,
    ""ICG 1 Inap"": 2,
    ""Aliyun Computing Co., LTD"": 4,
    ""Koumakis Emm. S.A."": 4,
    ""Exponential-E Ltd"": 4,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 4,
    ""Henan Telcom Union Technology Co., LTD"": 4,
    ""Ngu003"": 2,
    ""Online Breedband B.V."": 2
  },
  ""regionName"": {
    ""Beijing"": 82,
    ""North West"": 10,
    ""Yunnan"": 70,
    ""Hunan"": 10,
    ""Indiana"": 14,
    ""Thanh H\u00f3a Province"": 2,
    ""Guangdong"": 76,
    ""Zhejiang"": 52,
    ""Vienna"": 4,
    ""Fujian"": 44,
    ""Bangkok"": 6,
    ""Florida"": 2,
    ""West Greece"": 4,
    ""Central Singapore"": 10,
    ""Jiangsu"": 12,
    ""Vilnius"": 16,
    ""Inner Mongolia"": 26,
    ""Ho Chi Minh"": 2,
    ""England"": 22,
    ""Shanghai"": 56,
    ""Bavaria"": 20,
    ""Hesse"": 12,
    ""Central and Western District"": 18,
    ""Jiangxi"": 8,
    ""Shandong"": 30,
    ""Moscow"": 20,
    ""California"": 34,
    ""Michigan"": 2,
    ""Tianjin"": 10,
    ""Sindh"": 10,
    ""Utah"": 14,
    ""North Holland"": 10,
    ""Karnataka"": 12,
    ""Virginia"": 2,
    ""Shanxi"": 6,
    ""Kaunas"": 6,
    ""Provincia de Panama"": 2,
    ""Shaanxi"": 12,
    ""Taichung City"": 4,
    ""Georgia"": 8,
    ""Hebei"": 4,
    ""Hubei"": 4,
    ""Anhui"": 4,
    ""Taiwan"": 2,
    ""Illinois"": 2,
    ""Attica"": 4,
    ""East Java"": 2,
    ""Henan"": 4,
    ""Chongqing"": 10,
    ""Guizhou"": 2
  },
  ""country"": {
    ""China"": 522,
    ""Singapore"": 20,
    ""United States"": 78,
    ""Vietnam"": 4,
    ""Austria"": 4,
    ""Thailand"": 6,
    ""Greece"": 8,
    ""Lithuania"": 22,
    ""United Kingdom"": 22,
    ""Germany"": 32,
    ""Hong Kong"": 18,
    ""Russia"": 20,
    ""Pakistan"": 10,
    ""The Netherlands"": 10,
    ""India"": 12,
    ""Panama"": 2,
    ""Taiwan"": 6,
    ""Indonesia"": 2
  },
  ""account"": {
    ""142.93.8.59"": 660,
    ""hello"": 22,
    ""Test"": 24,
    ""Administr"": 26,
    ""pptWjCuGu"": 2,
    ""IZkhmd"": 2,
    ""JbOrvG"": 2,
    ""(empty)"": 6,
    ""Domain"": 22,
    ""eLfTuapoy"": 2,
    ""UNHEgb"": 2,
    ""nbXPJz"": 2,
    ""6fzzozr5"": 8,
    ""beio"": 2,
    ""Administrator"": 2,
    ""vohSKaiFT"": 2,
    ""FdtsBi"": 2,
    ""qfQTpS"": 2,
    ""og3uck5z"": 2,
    ""leOInfkHb"": 2,
    ""gxpLaz"": 2,
    ""ZaQwcA"": 2
  },
  ""keyboard"": {
    ""Unknown"": 798
  },
  ""client_build"": {
    ""Unknown"": 798
  },
  ""client_name"": {
    ""Unknown"": 798
  },
  ""ip_type"": {
    ""Unknown"": 596,
    ""hosting"": 168,
    ""proxy"": 20,
    ""mobile"": 10,
    ""hosting & proxy"": 4
  }
}"
9WLzpHvR,2024-01-27_stats.json,rdp_snitch,JSON,Saturday 27th of January 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""103.240.84.186"": 2,
    ""43.134.0.225"": 1,
    ""106.58.210.135"": 2,
    ""175.4.26.179"": 5,
    ""106.58.212.195"": 2,
    ""216.202.197.116"": 7,
    ""103.47.194.216"": 1,
    ""43.139.115.6"": 3,
    ""36.111.174.56"": 10,
    ""106.58.211.156"": 3,
    ""212.186.143.100"": 2,
    ""124.67.115.210"": 7,
    ""45.141.26.228"": 2,
    ""113.108.8.125"": 7,
    ""192.227.101.80"": 1,
    ""80.107.92.7"": 2,
    ""101.32.116.25"": 2,
    ""122.227.146.74"": 4,
    ""222.219.240.13"": 3,
    ""218.90.120.19"": 2,
    ""45.227.254.48"": 2,
    ""124.67.254.109"": 13,
    ""103.252.93.46"": 1,
    ""134.175.53.186"": 1,
    ""203.57.39.224"": 2,
    ""193.237.214.102"": 3,
    ""101.32.126.66"": 3,
    ""14.18.41.26"": 1,
    ""52.80.19.192"": 3,
    ""111.229.232.159"": 6,
    ""222.93.104.67"": 4,
    ""80.151.251.216"": 7,
    ""193.111.248.232"": 1,
    ""111.230.10.59"": 4,
    ""111.231.15.224"": 5,
    ""106.58.215.167"": 3,
    ""185.106.176.8"": 5,
    ""115.236.75.10"": 4,
    ""106.225.199.92"": 2,
    ""203.56.40.167"": 6,
    ""43.243.136.202"": 14,
    ""111.231.165.19"": 1,
    ""140.246.215.173"": 4,
    ""62.122.184.188"": 3,
    ""118.89.60.27"": 3,
    ""125.88.211.59"": 1,
    ""1.117.40.238"": 2,
    ""117.145.27.42"": 2,
    ""103.44.237.12"": 2,
    ""106.55.54.44"": 4,
    ""115.159.51.34"": 4,
    ""106.58.164.95"": 3,
    ""205.210.31.105"": 3,
    ""42.193.192.91"": 1,
    ""183.134.89.41"": 1,
    ""95.181.173.81"": 4,
    ""167.248.133.39"": 1,
    ""111.161.41.132"": 5,
    ""103.245.195.202"": 4,
    ""172.81.216.105"": 2,
    ""208.53.61.115"": 7,
    ""87.251.75.64"": 1,
    ""150.223.66.55"": 3,
    ""62.204.41.195"": 4,
    ""101.33.237.209"": 2,
    ""103.215.81.133"": 2,
    ""43.134.33.208"": 2,
    ""150.223.35.239"": 3,
    ""106.58.217.149"": 3,
    ""119.91.205.99"": 4,
    ""106.58.184.58"": 3,
    ""106.58.212.201"": 1,
    ""203.56.4.242"": 6,
    ""101.33.204.231"": 1,
    ""106.58.178.111"": 1,
    ""111.229.184.146"": 3,
    ""222.219.129.74"": 3,
    ""211.91.60.69"": 4,
    ""106.58.165.88"": 2,
    ""82.156.150.3"": 6,
    ""185.170.144.3"": 2,
    ""45.227.254.26"": 2,
    ""87.251.75.145"": 2,
    ""116.73.243.187"": 6,
    ""106.58.219.212"": 4,
    ""20.98.219.87"": 1,
    ""219.144.67.36"": 3,
    ""81.19.135.2"": 3,
    ""198.235.24.238"": 3,
    ""36.111.166.97"": 1,
    ""194.165.16.10"": 2,
    ""123.206.124.122"": 1,
    ""36.111.146.78"": 3,
    ""141.98.82.22"": 1,
    ""113.200.222.57"": 6,
    ""125.230.233.202"": 2,
    ""139.177.202.169"": 4,
    ""138.68.255.150"": 1,
    ""49.232.169.162"": 2,
    ""106.116.169.71"": 1,
    ""119.96.169.74"": 2,
    ""223.240.87.62"": 2,
    ""101.43.174.224"": 3,
    ""43.134.83.223"": 1,
    ""43.138.31.20"": 2,
    ""118.193.65.209"": 1,
    ""118.163.247.235"": 1,
    ""106.75.254.159"": 1,
    ""106.225.199.24"": 2,
    ""198.44.167.61"": 2,
    ""88.214.25.57"": 2,
    ""61.171.106.140"": 3,
    ""205.210.31.103"": 3,
    ""203.57.46.218"": 1,
    ""185.180.143.5"": 1,
    ""150.223.76.57"": 1,
    ""150.223.32.106"": 2,
    ""138.68.128.9"": 1,
    ""27.128.239.46"": 1,
    ""39.98.127.243"": 2,
    ""150.223.13.195"": 2,
    ""79.209.203.149"": 2,
    ""195.97.20.99"": 2,
    ""141.98.11.142"": 1,
    ""36.71.68.66"": 1,
    ""167.98.36.10"": 2,
    ""120.48.64.252"": 1,
    ""42.51.39.209"": 2,
    ""45.227.254.8"": 4,
    ""61.171.113.104"": 1,
    ""36.26.90.235"": 3,
    ""78.157.221.232"": 1,
    ""45.141.26.68"": 1,
    ""81.70.142.203"": 1,
    ""185.73.124.229"": 3,
    ""43.245.205.25"": 1,
    ""79.209.197.104"": 1,
    ""213.109.202.232"": 3,
    ""27.8.44.19"": 5,
    ""140.246.149.76"": 1,
    ""124.221.102.186"": 1,
    ""198.235.24.59"": 3,
    ""106.58.164.84"": 1,
    ""180.76.153.250"": 1,
    ""106.58.166.180"": 1,
    ""43.133.56.30"": 1
  },
  ""asn"": {
    ""AS4837"": 42,
    ""AS132203"": 10,
    ""AS4134"": 61,
    ""AS63838"": 5,
    ""AS3356"": 7,
    ""AS140832"": 1,
    ""AS45090"": 62,
    ""AS58519"": 45,
    ""AS8412"": 2,
    ""AS142299"": 3,
    ""AS13886"": 1,
    ""AS6799"": 2,
    ""AS267784"": 8,
    ""AS135918"": 1,
    ""AS5378"": 3,
    ""AS55960"": 3,
    ""AS3320"": 10,
    ""AS49581"": 1,
    ""AS42960"": 5,
    ""AS134238"": 4,
    ""AS4808"": 14,
    ""AS57523"": 3,
    ""AS58466"": 1,
    ""AS9808"": 2,
    ""AS4816"": 2,
    ""AS396982"": 12,
    ""AS58461"": 4,
    ""AS210644"": 4,
    ""AS398324"": 1,
    ""AS9541"": 4,
    ""AS17341"": 7,
    ""AS208091"": 6,
    ""AS59425"": 4,
    ""AS55933"": 2,
    ""AS197414"": 2,
    ""AS17488"": 6,
    ""AS8075"": 1,
    ""AS134768"": 3,
    ""AS209588"": 4,
    ""AS48721"": 2,
    ""AS3462"": 3,
    ""AS63949"": 4,
    ""AS14061"": 2,
    ""AS58563"": 2,
    ""AS135377"": 1,
    ""AS17621"": 1,
    ""AS142032"": 2,
    ""AS29551"": 2,
    ""AS4812"": 4,
    ""AS211680"": 1,
    ""AS37963"": 2,
    ""AS3329"": 2,
    ""AS209605"": 1,
    ""AS7713"": 1,
    ""AS25180"": 2,
    ""AS38365"": 2,
    ""AS56005"": 2,
    ""AS42831"": 1,
    ""AS9260"": 1,
    ""AS208312"": 3
  },
  ""isp"": {
    ""China Unicom CHINA169 Network"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 57,
    ""Chinanet"": 64,
    ""Hengyang"": 5,
    ""Level 3 Communications"": 7,
    ""FTECH"": 1,
    ""Cloud Computing Corporation"": 45,
    ""T-Mobile Austria GmbH"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 20,
    ""CLOUDFOREST CO., LTD"": 3,
    ""Cloud South"": 1,
    ""Ote SA (Hellenic Telecommunications Organisation)"": 2,
    ""Aceville Pte.ltd"": 6,
    ""Flyservers S.A."": 14,
    ""Viet Digital Technology Liability Company"": 1,
    ""Vodafone Broadband Dynamic"": 3,
    ""CHINANET Guangdong province network"": 1,
    ""Beijing Guanghuan Xinwang Digital"": 3,
    ""Deutsche Telekom AG"": 10,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""VH-GLOBAL"": 5,
    ""CHINANET Jiangx province IDC network"": 4,
    ""China Unicom Beijing Province Network"": 14,
    ""Chang Way Technologies Co. Limited"": 3,
    ""China Telecom"": 1,
    ""China Internet Network Information Center"": 8,
    ""China Mobile communications corporation"": 2,
    ""China Telecom (Group)"": 6,
    ""Google LLC"": 12,
    ""Aeza International LTD"": 4,
    ""Censys, Inc."": 1,
    ""China Unicom Tianjin Province Network"": 5,
    ""Cyber Internet Services (Private) Limited"": 4,
    ""C7 Data Centers"": 7,
    ""Xhost Internet Solutions LP"": 8,
    ""Horizon LLC"": 4,
    ""Cloudie Limited"": 2,
    ""CHINA UNICOM China169 Backbone"": 4,
    ""Hathway IP over Cable Internet Access"": 6,
    ""Microsoft Corporation"": 1,
    ""CHINANET SHAANXI province Cloud Base network"": 3,
    ""CNC Group CHINA169 Shannxi Province Network"": 6,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""Akamai Technologies, Inc."": 4,
    ""DigitalOcean, LLC"": 2,
    ""CHINANET Hubei province network"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""UCLOUD"": 1,
    ""VpsQuan L.L.C"": 2,
    ""NOC EMAIL: noc@one-host.net"": 2,
    ""NSEC - Sistemas Informaticos, S.A."": 1,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""HOL"": 2,
    ""UAB Host Baltic"": 1,
    ""PT. Telekomunikasi Indonesia"": 1,
    ""Exponential-E Ltd."": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 2,
    ""China Unicom Henan Province network"": 2,
    ""UK Dedicated Servers Limited"": 1,
    ""EuroNet Internet"": 1,
    ""Multinet 43-205/24"": 1,
    ""Red Byte LLC"": 3,
    ""China Unicom Chongqing Province Network"": 5
  },
  ""org"": {
    ""Unknown"": 50,
    ""Tencent Cloud Computing"": 4,
    ""Chinanet YN"": 35,
    ""Chinanet HN"": 5,
    ""Fort Wayne Internet, LLC"": 7,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 20,
    ""Chinanet ZJ"": 17,
    ""LBR GmbH"": 2,
    ""Cloudforest CO., LTD"": 3,
    ""Chinanet GD"": 8,
    ""Cloud South"": 1,
    ""Ote SA"": 2,
    ""Ningbo chaoji mamawangluojishu ltd"": 4,
    ""Chinanet JS"": 6,
    ""UAB Host Baltic"": 8,
    ""Mailand Technology Trading Services Company Limited"": 1,
    ""Chinanet FJ"": 15,
    ""Thus Group Holdings Limited"": 3,
    ""AWS EC2 (cn-north-1)"": 3,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 41,
    ""Deutsche Telekom AG"": 10,
    ""Tube-Hosting"": 1,
    ""VH Global Limited"": 5,
    ""Hangzhou xiaoshan public transportation co., LTD"": 4,
    ""Chinanet JX"": 4,
    ""Beijing yunchuang communication Technology Co."": 14,
    ""Chinanet SD"": 16,
    ""Chang Way Technologies Co. Limited"": 6,
    ""China Mobile"": 2,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Aeza International LTD"": 4,
    ""Censys, Inc."": 1,
    ""Cyber Internet Services Pakistan"": 4,
    ""VegaDigital Solutions"": 7,
    ""Xhost Internet Solutions"": 3,
    ""Horizon LLC"": 4,
    ""Netads Online Limited"": 2,
    ""Unicom"": 4,
    ""Xhostis"": 5,
    ""Hathway Cable and Datacom Limited"": 6,
    ""Microsoft Azure Cloud (eastus2)"": 1,
    ""Chinanet SN"": 3,
    ""Alviva Holding Limited"": 3,
    ""Flyservers S.A"": 2,
    ""Vdsline"": 1,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Linode"": 4,
    ""DigitalOcean, LLC"": 2,
    ""Chinanet HE"": 2,
    ""Chinanet HB"": 2,
    ""Chinanet AH"": 2,
    ""Ucloud Information Technology"": 1,
    ""Shanghai UCloud Information Technology Company Limited"": 1,
    ""qianqian"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Chinanet SH"": 4,
    ""ICG 1 Inap"": 1,
    ""Aliyun Computing Co., LTD"": 2,
    ""Koumakis Emm. S.A."": 2,
    ""Exponential-E Ltd"": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 2,
    ""Henan Telcom Union Technology Co., LTD"": 2,
    ""Ngu003"": 1,
    ""Online Breedband B.V."": 1
  },
  ""regionName"": {
    ""Beijing"": 41,
    ""North West"": 5,
    ""Yunnan"": 35,
    ""Hunan"": 5,
    ""Indiana"": 7,
    ""Thanh H\u00f3a Province"": 1,
    ""Guangdong"": 38,
    ""Zhejiang"": 26,
    ""Vienna"": 2,
    ""Fujian"": 22,
    ""Bangkok"": 3,
    ""Florida"": 1,
    ""West Greece"": 2,
    ""Central Singapore"": 5,
    ""Jiangsu"": 6,
    ""Vilnius"": 8,
    ""Inner Mongolia"": 13,
    ""Ho Chi Minh"": 1,
    ""England"": 11,
    ""Shanghai"": 28,
    ""Bavaria"": 10,
    ""Hesse"": 6,
    ""Central and Western District"": 9,
    ""Jiangxi"": 4,
    ""Shandong"": 15,
    ""Moscow"": 10,
    ""California"": 17,
    ""Michigan"": 1,
    ""Tianjin"": 5,
    ""Sindh"": 5,
    ""Utah"": 7,
    ""North Holland"": 5,
    ""Karnataka"": 6,
    ""Virginia"": 1,
    ""Shanxi"": 3,
    ""Kaunas"": 3,
    ""Provincia de Panama"": 1,
    ""Shaanxi"": 6,
    ""Taichung City"": 2,
    ""Georgia"": 4,
    ""Hebei"": 2,
    ""Hubei"": 2,
    ""Anhui"": 2,
    ""Taiwan"": 1,
    ""Illinois"": 1,
    ""Attica"": 2,
    ""East Java"": 1,
    ""Henan"": 2,
    ""Chongqing"": 5,
    ""Guizhou"": 1
  },
  ""country"": {
    ""China"": 261,
    ""Singapore"": 10,
    ""United States"": 39,
    ""Vietnam"": 2,
    ""Austria"": 2,
    ""Thailand"": 3,
    ""Greece"": 4,
    ""Lithuania"": 11,
    ""United Kingdom"": 11,
    ""Germany"": 16,
    ""Hong Kong"": 9,
    ""Russia"": 10,
    ""Pakistan"": 5,
    ""The Netherlands"": 5,
    ""India"": 6,
    ""Panama"": 1,
    ""Taiwan"": 3,
    ""Indonesia"": 1
  },
  ""account"": {
    ""142.93.8.59"": 330,
    ""hello"": 11,
    ""Test"": 12,
    ""Administr"": 13,
    ""pptWjCuGu"": 1,
    ""IZkhmd"": 1,
    ""JbOrvG"": 1,
    ""(empty)"": 3,
    ""Domain"": 11,
    ""eLfTuapoy"": 1,
    ""UNHEgb"": 1,
    ""nbXPJz"": 1,
    ""6fzzozr5"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""vohSKaiFT"": 1,
    ""FdtsBi"": 1,
    ""qfQTpS"": 1,
    ""og3uck5z"": 1,
    ""leOInfkHb"": 1,
    ""gxpLaz"": 1,
    ""ZaQwcA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 399
  },
  ""client_build"": {
    ""Unknown"": 399
  },
  ""client_name"": {
    ""Unknown"": 399
  },
  ""ip_type"": {
    ""Unknown"": 298,
    ""hosting"": 84,
    ""proxy"": 10,
    ""mobile"": 5,
    ""hosting & proxy"": 2
  }
}"
B2b3eQXj,disclosureservices countries: no Montenegro,mikhail_dvorkin,HTML,Saturday 27th of January 2024 06:00:10 PM CDT,"<select _ngcontent-eyl-c104="""" id=""addressCountry"" placeholder=""Country"" matnativecontrol="""" class=""mat-input-element mat-form-field-autofill-control uppercase ng-tns-c50-20 ng-valid cdk-text-field-autofill-monitored ng-dirty ng-touched"" data-placeholder=""Country"" aria-invalid=""false"" aria-required=""false""><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4"" value=""0: Object""></option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""1: Object""> United Kingdom </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""2: Object""> Ireland </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""3: Object""> Afghanistan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""4: Object""> Albania </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""5: Object""> Algeria </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""6: Object""> American Samoa </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""7: Object""> Andorra </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""8: Object""> Angola </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""9: Object""> Anguilla </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""10: Object""> Antarctica </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""11: Object""> Antigua, Barbuda </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""12: Object""> Argentina </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""13: Object""> Armenia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""14: Object""> Aruba </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""15: Object""> Australia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""16: Object""> Austria </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""17: Object""> Azerbaijan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""18: Object""> Bahamas </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""19: Object""> Bahrain </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""20: Object""> Bangladesh </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""21: Object""> Barbados </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""22: Object""> Belarus </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""23: Object""> Belgium </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""24: Object""> Belize </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""25: Object""> Benin </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""26: Object""> Bermuda </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""27: Object""> Bhutan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""28: Object""> Bolivia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""29: Object""> Bosnia, Herzegovina </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""30: Object""> Botswana </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""31: Object""> Bouvet Island </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""32: Object""> Brazil </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""33: Object""> British Indian Ocean Territory </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""34: Object""> Brunei Darussalam </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""35: Object""> Bulgaria </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""36: Object""> Burkina Faso </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""37: Object""> Burundi </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""38: Object""> Cambodia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""39: Object""> Cameroon </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""40: Object""> Canada </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""41: Object""> Cape Verde </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""42: Object""> Cayman Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""43: Object""> Central African Republic </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""44: Object""> Chad </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""45: Object""> Chile </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""46: Object""> China </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""47: Object""> Christmas Island </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""48: Object""> Cocos, Keeling Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""49: Object""> Colombia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""50: Object""> Comoros </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""51: Object""> Congo </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""52: Object""> Congo, Democratic Republic of </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""53: Object""> Cook Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""54: Object""> Costa Rica </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""55: Object""> Cote d'Ivoire </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""56: Object""> Croatia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""57: Object""> Cuba </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""58: Object""> Cyprus </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""59: Object""> Czech Republic </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""60: Object""> Democratic Republic of Korea </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""61: Object""> Denmark </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""62: Object""> Djibouti </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""63: Object""> Dominica </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""64: Object""> Dominican Republic </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""65: Object""> East Timor </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""66: Object""> Ecuador </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""67: Object""> Egypt </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""68: Object""> El Salvador </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""69: Object""> Equatorial Guinea </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""70: Object""> Eritrea </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""71: Object""> Estonia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""72: Object""> Ethiopia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""73: Object""> Falkland Islands, Malvinas </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""74: Object""> Faroe Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""75: Object""> Fiji </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""76: Object""> Finland </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""77: Object""> France </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""78: Object""> French Guiana </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""79: Object""> French Polynesia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""80: Object""> French Southern Territories </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""81: Object""> Gabon </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""82: Object""> Gambia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""83: Object""> Georgia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""84: Object""> Germany </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""85: Object""> Ghana </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""86: Object""> Gibraltar </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""87: Object""> Greece </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""88: Object""> Greenland </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""89: Object""> Grenada </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""90: Object""> Guadeloupe </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""91: Object""> Guam </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""92: Object""> Guatemala </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""93: Object""> Guinea </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""94: Object""> Guinea-Bissau </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""95: Object""> Guyana </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""96: Object""> Haiti </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""97: Object""> Heard Island McDonald Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""98: Object""> Holy See, Vatican City State </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""99: Object""> Honduras </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""100: Object""> Hong Kong </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""101: Object""> Hungary </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""102: Object""> Iceland </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""103: Object""> India </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""104: Object""> Indonesia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""105: Object""> Iran, Islamic Republic of </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""106: Object""> Iraq </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""107: Object""> Israel </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""108: Object""> Italy </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""109: Object""> Jamaica </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""110: Object""> Japan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""111: Object""> Jordan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""112: Object""> Kazakhstan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""113: Object""> Kenya </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""114: Object""> Kiribati </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""115: Object""> Korea, Republic of </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""116: Object""> Kuwait </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""117: Object""> Kyrgyzstan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""118: Object""> Lao People's Democratic Republic </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""119: Object""> Latvia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""120: Object""> Lebanon </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""121: Object""> Lesotho </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""122: Object""> Liberia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""123: Object""> Libyan Arab Jamahiriya </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""124: Object""> Liechtenstein </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""125: Object""> Lithuania </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""126: Object""> Luxembourg </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""127: Object""> Macau </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""128: Object""> Macedonia, The Former Yugoslav Republic of </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""129: Object""> Madagascar </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""130: Object""> Malawi </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""131: Object""> Malaysia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""132: Object""> Maldives </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""133: Object""> Mali </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""134: Object""> Malta </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""135: Object""> Marshall Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""136: Object""> Martinique </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""137: Object""> Mauritania </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""138: Object""> Mauritius </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""139: Object""> Mayotte </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""140: Object""> Mexico </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""141: Object""> Micronesia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""142: Object""> Moldova, Republic of </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""143: Object""> Monaco </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""144: Object""> Mongolia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""145: Object""> Montserrat </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""146: Object""> Morocco </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""147: Object""> Mozambique </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""148: Object""> Myanmar </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""149: Object""> Namibia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""150: Object""> Nauru </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""151: Object""> Nepal </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""152: Object""> Netherlands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""153: Object""> Netherlands Antilles </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""154: Object""> New Caledonia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""155: Object""> New Zealand </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""156: Object""> Nicaragua </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""157: Object""> Niger </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""158: Object""> Nigeria </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""159: Object""> Niue </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""160: Object""> Norfolk Island </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""161: Object""> Northern Mariana Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""162: Object""> Norway </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""163: Object""> Oman </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""164: Object""> Pakistan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""165: Object""> Palau </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""166: Object""> Palestinian Territory Occupied </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""167: Object""> Panama </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""168: Object""> Papua New Guinea </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""169: Object""> Paraguay </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""170: Object""> Peru </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""171: Object""> Philippines </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""172: Object""> Pitcairn </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""173: Object""> Poland </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""174: Object""> Portugal </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""175: Object""> Puerto Rico </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""176: Object""> Qatar </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""177: Object""> Reunion </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""178: Object""> Romania </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""179: Object""> Russian Federation </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""180: Object""> Rwanda </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""181: Object""> Saint Helena </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""182: Object""> Saint Kitts, Nevis </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""183: Object""> Saint Lucia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""184: Object""> Saint Pierre, Miquelon </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""185: Object""> Saint Vincent, the Grenadines </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""186: Object""> Samoa </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""187: Object""> San Marino </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""188: Object""> Sao Tome, Principe </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""189: Object""> Saudi Arabia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""190: Object""> Senegal </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""191: Object""> Seychelles </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""192: Object""> Sierra Leone </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""193: Object""> Singapore </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""194: Object""> Slovakia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""195: Object""> Slovenia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""196: Object""> Solomon Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""197: Object""> Somalia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""198: Object""> South Africa </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""199: Object""> South Georgia Sandwich Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""200: Object""> Spain </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""201: Object""> Sri Lanka </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""202: Object""> Sudan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""203: Object""> Suriname </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""204: Object""> Svalbard, Jan Mayen Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""205: Object""> Swaziland </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""206: Object""> Sweden </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""207: Object""> Switzerland </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""208: Object""> Syrian Arab Republic </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""209: Object""> Taiwan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""210: Object""> Tajikistan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""211: Object""> Tanzania, United Republic of </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""212: Object""> Thailand </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""213: Object""> Togo </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""214: Object""> Tokelau </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""215: Object""> Tonga </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""216: Object""> Trinidad, Tobago </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""217: Object""> Tunisia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""218: Object""> Turkey </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""219: Object""> Turkmenistan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""220: Object""> Turks, Caicos Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""221: Object""> Tuvalu </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""222: Object""> Uganda </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""223: Object""> Ukraine </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""224: Object""> United Arab Emirates </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""225: Object""> United States </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""226: Object""> Unknown </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""227: Object""> Uruguay </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""228: Object""> US Minor Outlying Islands </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""229: Object""> Uzbekistan </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""230: Object""> Vanuatu </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""231: Object""> Venezuela </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""232: Object""> Vietnam </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""233: Object""> Virgin Islands, British </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""234: Object""> Virgin Islands, U.S. </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""235: Object""> Wallis, Futuna </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""236: Object""> Western Sahara </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""237: Object""> Yemen </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""238: Object""> Yugoslavia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""239: Object""> Zambia </option><option _ngcontent-eyl-c104="""" class=""ng-tns-c104-4 ng-star-inserted"" value=""240: Object""> Zimbabwe </option><!----></select>"
b96iyPnB,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Saturday 27th of January 2024 05:49:43 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://netdrop-claim.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://netdrop-claim.netlify.app/

394890"
yqucA2ut,Copilot test,Zgragselus,C#,Saturday 27th of January 2024 05:48:18 PM CDT,"
        /// <summary>
        /// Reset hover state of the element
        /// </summary>
        public override void ResetHover()
        {
            listView.style.borderBottomWidth = new StyleFloat(0.0f);
            listView.style.borderTopWidth = new StyleFloat(0.0f);
            listView.style.borderLeftWidth = new StyleFloat(0.0f);
            listView.style.borderRightWidth = new StyleFloat(0.0f);
        }

        /// <summary>
        /// Set hover state on specific anchor of the element (should update style/border)
        /// </summary>
        /// <param name=""anchor"">Which anchor is hovered?</param>
        public override void SetAnchorHover(ResizableAnchor anchor)
        {
            switch (anchor)
            {
                case ResizableAnchor.Left:
                    listView.style.borderLeftColor = new Color(0.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderLeftWidth = new StyleFloat(2.0f);
                    break;

                case ResizableAnchor.Right:
                    listView.style.borderRightColor = new Color(0.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderRightWidth = new StyleFloat(2.0f);

                    break;

                case ResizableAnchor.Bottom:
                    listView.style.borderBottomColor = new Color(0.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderBottomWidth = new StyleFloat(2.0f);
                    break;

                case ResizableAnchor.Top:
                    listView.style.borderTopColor = new Color(0.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderTopWidth = new StyleFloat(2.0f);
                    break;
            }
        }

        /// <summary>
        /// Set active state on specific anchor of the element (should update style/border)
        /// </summary>
        /// <param name=""anchor"">Which anchor is active?</param>
        public override void SetAnchorActive(ResizableAnchor anchor)
        {
            switch (anchor)
            {
                case ResizableAnchor.Left:
                    listView.style.borderLeftColor = new Color(1.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderLeftWidth = new StyleFloat(2.0f);
                    break;

                case ResizableAnchor.Right:
                    listView.style.borderRightColor = new Color(1.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderRightWidth = new StyleFloat(2.0f);
                    break;

                case ResizableAnchor.Bottom:
                    listView.style.borderBottomColor = new Color(1.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderBottomWidth = new StyleFloat(2.0f);
                    break;

                case ResizableAnchor.Top:
                    listView.style.borderTopColor = new Color(1.0f, 0.0f, 0.0f, 1.0f);
                    listView.style.borderTopWidth = new StyleFloat(2.0f);
                    break;
            }
        }"
VX4MdALB,webinar-exam-review-2024-01-27,jspill,Python,Saturday 27th of January 2024 05:45:26 PM CDT,"# Exam Review 2024 Jan 27

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# get to know the Prac Tests, Ch 33 and 34... more than the Pre

# Use Submit Mode and get them to 100%!!!
# PAY ATTENTION to the unit tests!
# ... then UNIT TEST more! Unit test, unit test, unit test!

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files

# Comp 1: Basic syntax and knowledge: operators, data types, etc

# Operators
# = # assigns a value
# == # asking a question
# +
# -
# *
# /
# % # modulo... whole number remainder... ""how many whole things didn't fit since the last even division""
# // # floor division... last even division
# <
# >
# <=
# >=
# += # x+=1 --> x = x+1
# -=
# ** # compare to pow(), math.pow()
# !=
# # keywords
# # in # if x in myList:
# not # if not x in myList:
# and
# or # any one True means the combo is True... limit OR to 2-3 conditions

# Data Types/Classes
# int
# float
# bool # True, False
# str # """"
# list # [ ]
# dict # {key: value}
# tuple # ( ) immutable, Python sees a,b,c as (a,b,c) --> return x,y --> return (x,y)
# set # no duplicates, no order --> no indices, can't slice it, can't sort it, can't reverse
# range # range()... container of consecutive numbers
# file # open()... f.read(), f.readlines(), f.write()

# Comp 2
# Control Flow! The how and when of our programs
# IF statements...  if, if/else, if/elif, if/elif/else
# LOOPS
# WHILE - a general purpose loop, an IF that repeats
# FOR - repeating action once for everything in a container
# # Check out my For Loops webinar in The Gotchas
# for ___ in __someContainer__:
# for item in myList:
# for char in myString:
# for key in myDict:
# for num in range():
# for i in range(len(myList)): # for i in range(0, len(myList), 1)... ""item"" is myList[i]
# for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing a function vs calling
# modular... a function has ONE job
# print/output or return (or maybe something else)
# parameters are special variables for holding stuff coming into the function
# parameters vs arguments

# def someFunction(x, y):
#     return x + (2*y)
#
# if __name__ == ""__main__"": # is this script the one that's running now
#     # inside this block we're answering this specific question
#     input1 = int(input())
#     input2 = int(input())
#     myNum = someFunction(input1, input2)
#     print(myNum)

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# CodingBat also has good function-based Python questions:
# https://codingbat.com/python

# BUILT-IN FUNCTIONS
# input()
# print()
# len()
# sum()
# min()
# max()
# range()
# list()
# str()
# dict()
# tuple()
# set()
# enumerate()
# round() # cousins math.ceil() and math.floor()
# type() # print(type(myVar).__name__)
# pow() # compare math.pow()
# abs() # compare to math.fabs()
# open() # for file objects
# help() # help(str), help(str.isspace)
# dir() # print(dir(str))

# STRINGS
# be able to refer to indices, and slice
# myStr = ""abcdef""
# # # mySlice[start:stop:step]
# # revStr = myStr[::-1]
# # print(revStr)

# KNOW YOUR WHITESPACE
"" "" # space from spacebar
# a lot of Unicode spaces
""\n"" # new line return... print() --> print(end=""\n"")
""\r"" # carriage return... back to beginning of the same line
""\t"" # tab

# STRING METHODS
# myStr.format() # ""Stuff I want to put together like {:.2f} and {}"".format(myVar, myVar2)
# myStr.strip() # input().strip()
# myStr.split() # returns a list of smaller strings
# "","".join(listOfStrings)
# myStr.replace(subStr, newStr) # ""remove"" myStr = myStr.replace(subStr, """")
# myStr.index(subStr), myStr.find(subStr) # return index where found
# myStr.count(subStr) # return number of times subStr is there
# case: .lower(), .upper(), .title(), .capitalize()
# is/Boolean: .islower(), .isupper(), .isspace(), .isalpha(), .isalnum(), .isnumeric(), .isdigit()
# myStr.startswith(subSTr), myStr.endswith(subStr)

# LISTS
# be able to refer by index and to slice
# LIST METHODS
# +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i) # last one or by index
# myList.remove(item) # pop() by index, remove() by value
# myList.clear()
# # other
# myList.sort()
# myList.reverse()
# myList.count(item)
# myList.copy()
# myList.index(item)

# DICT
# use the key like an index []... then you don't really need DICT methods
# myDict[key] # get the value associated with that key --> takes the place of myDict.get()
# myDict[key] = value # assigns new value to key --> similar to myDict.update({k:v})

# for key in myDict: # value is myDict[key]
# if ___ in myDict: # check to see if a key is there before trying to get its value

# DICT METHODS
# myDict.keys()
# myDict.values()
# myDict.items() # # for k, v in myDict.items()

# MODULES
# math and csv

# MATH MODULE
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x)
# math.floor(x)
# math.sqrt(x)
# math.pow(x, y)
# math.fabs(x)
# math.pi
# math.e

# PARTIAL IMPORT
# from math import sqrt # --> sqrt()
# from math import ceil, floor # --> ceil(), floor()
# from math import * # floor(), sqrt()
#
# # ALIAS IMPORT
# import math as m
# # m.floor(), m.fabs()

# FILES
# modes: r, w, a

# READ MODE
# with open(""test.txt"", ""r"") as f:
    # f.read() # returns whole file as one big string
    # f.readlines() # returns a list of strings, line by line
    # f.write() # take one str arg and write into file (can't do here bc I'm in read mode)
#     contents = f.readlines()
#
#
# for line in contents:
#     line = line.strip()
#     print(line)
# print(contents)

# CSV module
# import csv # csv.reader()
# with open(""mock_data.csv"", ""r"") as f1: # mockaroo.com
#     contents = list(csv.reader(f1)) # # csv.reader(f, delimiter=""\t"")
# print(contents[0:20]) # I'm slicing because I don't need to see all 1000 rows

# Side question: How to ""create a dictionary"" from a file?
# ... there's really no such thing. You create a particular dictionary you want from particular data you have.

# Say we want a dictionary like this: myDict = {id: email}
# myDict = {}
# for line in contents[0:10]:
#     # myDict[key] = value
#     myDict[line[0]] = line[3]
# print(myDict)

# k... back to files...

# WRITE MODE
# with open(""output_data33.csv"", ""w"") as f2:
#     # write out a file with every row where email ends in "".edu""
#     for row in contents:
#         # email is position 3 of inner list
#         if row[3].endswith("".edu""):
#             f2.write(','.join(row) + ""\n"")

# APPEND MODE
# with open(""append_to_this.txt"", ""r"") as f3:
#     print(f3.readlines())
# with open(""append_to_this.txt"", ""a"") as f3:
    # f3.write(""\nPippin"") # follow suit as needed based on what's in the file









# APPEND MODE



"
1RykiUEh,sh_language.lua,Lukyspore,Lua,Saturday 27th of January 2024 05:22:34 PM CDT,"LDT_Bounties.Language = LDT_Bounties.Language or {}

LDT_Bounties.Language = {
    en = {
        NewBounty = ""A new bounty has been placed on VICTIMNICK for "",
        NewBountySelf = ""A new bounty has been placed on you for "",
        NoBountyWinner = ""The bounty on PLYNAME has ended without a winner!"",
        NoBountyWinnerSelf = ""The bounty on you has ended and you have won "",
        BountyWinner = ""The bounty on VICTIMNICK has ended and WINNERNICK has won "",
        BountyExists = ""A bounty already exists on VICTIMNICK for "",
        ClaimedIcon = ""Claimed"",
        ClaimedCategoryName = ""Most Claimed Bounties (top 10)"",
        SurvivedIcon = ""Survived"",
        SurvivedCategoryName = ""Most Survived Bounties (top 10)"",
        ClaimedBountiesText = ""Number of claimed bounties: "",
        SurvivedBountiesText = ""Number of survived bounties: "",
        NoClaimedLeaderboardText = ""No one has claimed a bounty yet!"",
        NoSurvivedBountiesText = ""No one has survived a bounty yet!""
    },
}"
LmDDK9uw,sh_config.lua,Lukyspore,Lua,Saturday 27th of January 2024 05:22:16 PM CDT,"LDT_Bounties = LDT_Bounties or {}
LDT_Bounties.Config = LDT_Bounties.Config or {}

LDT_Bounties.Config.Language = ""en"" -- Currently there are en, pl, fr, da, tr and de translations available.

LDT_Bounties.Config.MenuCommand = ""!bounties"" -- This is the command to open the menu.

LDT_Bounties.Config.MinimumPlayers = 1 -- This is the minimum amount of players required to start a bounty.

LDT_Bounties.Config.BountyChance = 100 -- This is the chance of a bounty being started when new round starts. 100 = 100% chance, 50 = 50%, etc.

LDT_Bounties.Config.RewardForSurviving = true -- This is whether or not you get a reward for surviving the round when having a bounty on you.
LDT_Bounties.Config.RewardFramework = ""PS1"" -- This is the reward framework. You can choose between PS1, PS2, ZPN.
LDT_Bounties.Config.CurrencySymbol = "" Points"" -- This is the name of the currency. This only works when using the PS1, PS2 or ZPN reward framework.
LDT_Bounties.Config.CurrencySymbolLocation = false -- This is the location of the currency symbol. True = Before the amount, false = After the amount.
LDT_Bounties.Config.ZPNMultiplier = 1 -- This is the multiplier for the ZPN currency. This changes the amount of ZPN you get from voting.

LDT_Bounties.Config.BountyMinimum = 10 -- This is the minimum amount of money you can set a bounty to.
LDT_Bounties.Config.BountyMaximum = 100 -- This is the maximum amount of money you can set a bounty to.

-- These are the colors for every element of the UI. Feel free to change them to your liking.
LDT_Bounties.Config.Red = Color(255, 63, 5)
LDT_Bounties.Config.White = Color(255,255,255)
LDT_Bounties.Config.WhiteHighlight = Color(200,200,200,255)
LDT_Bounties.Config.Grey = Color(47, 54, 64)
LDT_Bounties.Config.GreySecond = Color(53, 59, 72)
LDT_Bounties.Config.GreyThird = Color(53, 59, 72,100)
LDT_Bounties.Config.Blue = Color(0, 151, 230)

LDT_Bounties.Config.Gold = Color(251, 197, 49,255)
LDT_Bounties.Config.Silver = Color(127, 143, 166,255)
LDT_Bounties.Config.Bronze = Color(240, 147, 43,255)"
2dWiZ2NL,10870 - Recurrences,MiinaMagdy,C++,Saturday 27th of January 2024 05:17:21 PM CDT,"/*
+---------------------------------------------+
|                                             |
|       © 28/01/2024 (00:46) MinaMagdy        |
|                                             |
+---------------------------------------------+
*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
#define multi_ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
#define endl ""\n""
#define MOD 1000000007
#define INF 2000000000
#define all(s) s.begin(), s.end()
#define rall(s) s.rbegin(), s.rend()
#define sz(x) int(x.size())

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
#include <ext/numeric>
using namespace __gnu_cxx;
typedef vector<vector<int>> matrix;
int mod;
struct mul
{
    int n;
    mul(int n) : n(n) {}
    matrix operator()(const matrix &a, const matrix &b)
    {
        matrix c(n, vector<int>(n, 0));
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                for (int k = 0; k < n; k++)
                {
                    c[i][j] += a[i][k] * 1ll * b[k][j] % mod;
                    if (c[i][j] >= mod)
                        c[i][j] -= mod;
                }
            }
        }
        return c;
    }
};

matrix identity_element(const mul &m)
{
    matrix res(m.n, vector<int>(m.n, 0));
    for (int i = 0; i < m.n; i++)
        res[i][i] = 1;
    return res;
}

void solve()
{
    int d, n, m;
    while (cin >> d >> n >> m, d || n || m)
    {
        mod = m;
        matrix t(d, vector<int>(d));
        for (int i = 0; i < d; i++)
        {
            if (i != d - 1)
                t[i][i + 1] = 1;
            cin >> t[d - 1][d - i - 1];
        }
        matrix f1(d, vector<int>(1));
        for (int i = 0; i < d; i++)
        {
            cin >> f1[i][0];
        }
        mul mm(d);
        matrix ret = mm(power(t, n - 1, mm), f1);
        cout << ret[0][0] << endl;
    }
}

int main(void)
{
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
    int testcase = 1;
    // cin >> testcase;
    while (testcase--)
        solve();
    return 0;
}"
N9LHLBTA,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Saturday 27th of January 2024 05:09:15 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_384744.pdf
 
Working as of
27 January 2024"
9aJ2qyng,CSAPI4-Turtle,clementinessoup,Lua,Saturday 27th of January 2024 04:43:23 PM CDT,"print(""-- CONTENSPEW API 4 LOADING --"")
CSSavableData = {}
CSFacingDir = 1
CSDirectionsAsNames = {""North"",""East"",""South"",""West""} --in order
-- STRING UTILS
function splitString(str)
	local r = {}
	for w in str:gmatch(""%S+"") do table.insert(r,w) end
	return r
end

-- FILE UTILS

function CSFirstLaunch()
	if fs.isDir(""CSAPI4"") then
		return false
	end
	return true
end

function CSSetupData()
	fs.makeDir(""CSAPI4"")
	local F = fs.open(""CSAPI4/F"", ""w"")
	-- VARIABLES TO SAVE FOR MAIN DATA: version
	F.write(textutils.serialize(CSSavableData))
	F.close()
end

function CSLoadData()
	print(""Loading data from F."")
	local F = fs.open(""CSAPI4/F"", ""r"")
	local data = F.readAll()
	F.close()
	return textutils.unserialize(data)
end

function CSUpdateLoadedVars()
	return true
end

--REDNET UTILS
function CSGetHost()
	local id = rednet.lookup(""CSAPI4"")
	if id then
		print(""Registering Host ""..id..""."")
		return id
	else
		print(""No host found."")
		return false
	end
end

function CSOpenRednet()
	if rednet.isOpen() then
		return true
	end
	peripheral.find(""modem"", rednet.open)
	if rednet.isOpen() then
		return true
	end
	return false
end

--MOVEMENT/GPS UTILS
function CSGetDirection()
	local ORGPos = CSPos
	while not turtle.forward() do
		turtle.turnRight()
	end
	local NEWPos = vector.new(gps.locate(5))
	turtle.back()
	local DIFF = ORGPos-NEWPos
	print(DIFF:tostring())
	if DIFF.x == 1 then return 4 end --if X differential, 4 --> west
	if DIFF.z == 1 then return 3 end -- if Z differential, 3 --> south
	if DIFF.x == -1 then return 2 end --if -X differential, 2 --> east
	if DIFF.z == -1 then return 1 end -- if -Z differential, 1 --> north
end

local CompID = os.getComputerID()

if CSFirstLaunch() then
	CSSetupData()
end
CSSavableData = CSLoadData()
CSUpdateLoadedVars()

--CONNECT TO HOST
print(""OPENING REDNET..."")
if not CSOpenRednet() then
	print(""FAILED!"")
	exit()
end
print(""REDNET OPEN! ATTEMPTING TO GET HOST..."")
CSHostID = CSGetHost()
if not CSHostID then
	print(""Exiting, no host found."")
	exit()
end

--GET GPS
print(""ATTEMPTING TO GET POSITION..."")
CSPos = vector.new(gps.locate(5))
print(""POSITION: ""..CSPos:tostring())
sleep(1)
print(""ATTEMPTING TO CHECK DIRECTION."")
CSFacingDir = CSGetDirection()
print(""Currently facing: ""..CSDirectionsAsNames[CSFacingDir])
sleep(1)
print(""All functions loaded, but no programming found. Entering shell for programming."")"
QcKTNkvr,full remote sender,Shaka01,Lua,Saturday 27th of January 2024 04:34:28 PM CDT,"if not fs.exists(""API"") then
	shell.run(""pastebin"", ""get"", ""EzkfU5ZM"", ""API"")
end
if not fs.exists(""basalt.lua"") then
	shell.run(""wget"", ""run"", ""http://basalt.madefor.cc/install.lua"", ""packed"")
	-- wget run https://basalt.madefor.cc/install.lua release latest.lua
	-- shell.run(""pastebin"", ""run"", ""ESs1mg7P"")
	-- wget run http://basalt.madefor.cc/install.lua packed
	-- pastebin run ESs1mg7P
end

basalt = require(""basalt"")
shaka = require(""API"")
term.setCursorBlink(false)
startLocation = true
local value
local index

local turtleSides = {""Front"", ""Back"", ""Top"", ""Bottom"", ""Left"", ""Right""}


turtleID = 43 -- remove this !!!!!!!!!!!


local function findTransporter()
	shaka.clearScreen()
	local main = basalt.createFrame()
	shaka.changeColors(colors.black, colors.yellow)
	print(""Waiting for connection.."")
	local id, msg = rednet.receive(""transporterPing"")
	if id then
		turtleID = id
		rednet.send(id, ""you're not alone"", ""transporterAnswer"")
	end
end

-- Function to send movement orders via Rednet
local function sendMovementOrder(orderName)
    rednet.send(turtleID, orderName, ""recordRemote"")  -- Send the order via Rednet
end

local function recordInventory()
	local direction = nil
	local dropDirection = nil
	local turtleCommand = nil
	local selectedItem = nil
	local itemSelection = 0
	local amount = nil
	shaka.changeColors(colors.black, colors.white)
	term.clear()
	term.setCursorPos(1, 1)
	shaka.changeColors(colors.gray, colors.yellow)
	term.clearLine()
	shaka.centerText(""Drop or take items?"", 1)
	shaka.changeColors(colors.black, colors.white)
	shaka.nextLine()
	shaka.nextLine()
	local savedX, savedY = term.getCursorPos()
	print(""1. Drop"")
	print(""2. Take"")

	while true do
		local event, answer = os.pullEvent(""key"")
		os.pullEvent(""key_up"")
		if answer == keys.one then
			term.setCursorPos(1, 1)
			shaka.changeColors(colors.gray, colors.yellow)
			term.clearLine()
			shaka.centerText(""Choose drop mode"")
			shaka.changeColors(colors.black, colors.white)
			term.setCursorPos(savedX, savedY)
			term.clearLine()
			print(""1. Drop all items"")
			print(""2. Filter dropped items"")
			while true do
				local event, dropAnswer = os.pullEvent(""key"")
				os.pullEvent(""key_up"")
				if dropAnswer == keys.one then
					direction = ""drop""
					break
				elseif dropAnswer == keys.two then
					direction = ""dropFiltered""
					break
				end
			end
			shaka.clearScreen()
			shaka.changeColors(colors.gray, colors.yellow)
			term.clearLine()
			shaka.centerText(""Drop items where?"")
			shaka.changeColors(colors.black, colors.white)
			term.setCursorPos(savedX, savedY)
			break
		elseif answer == keys.two then
			shaka.clearScreen()
			shaka.changeColors(colors.gray, colors.yellow)
			term.clearLine()
			shaka.centerText(""Take from where?"")
			shaka.nextLine()
			shaka.nextLine()
			shaka.changeColors(colors.black, colors.white)
			direction = ""suck""
			break
		end
	end


	local _, frontY = term.getCursorPos()
	print(""1. Front"")
	local _, upY = term.getCursorPos()
	print(""2. Up"")
	local _, downY = term.getCursorPos()
	print(""3. Down"")
	
	while true do
	
		local event, dropDirection, isHeld = os.pullEvent(""key"")
		os.pullEvent(""key_up"")
		if dropDirection == keys.one then
			turtleCommand = ""front""
			local x, y = term.getCursorPos()
			term.setCursorPos(1, frontY)
			term.clearLine()
			shaka.changeColors(colors.green, colors.black)
			print(""1. Front"")
			term.setCursorPos(x, y)
			break
		elseif dropDirection == keys.two then
			turtleCommand = ""up""
			local x, y = term.getCursorPos()
			term.setCursorPos(1, upY)
			term.clearLine()
			shaka.changeColors(colors.green, colors.black)
			print(""2. Up"")
			term.setCursorPos(x, y)
			break
		elseif dropDirection == keys.three then
			turtleCommand = ""down""
			local x, y = term.getCursorPos()
			term.setCursorPos(1, downY)
			term.clearLine()
			shaka.changeColors(colors.green, colors.black)
			print(""3. Down"")
			term.setCursorPos(x, y)
			break
		end
		
	end
	
	if direction == ""dropFiltered"" then
		repeat
			shaka.clearScreen()
			shaka.changeColors(colors.gray, colors.yellow)
			term.clearLine()
			shaka.centerText(""Which item?"")
			shaka.nextLine()
			shaka.nextLine()
			shaka.changeColors(colors.black, colors.white)
			sendMovementOrder(""showAvailable"")
			sender, msg = rednet.receive(""showAvailableItems"", 2)
			if msg then
				msg = textutils.unserialize(msg)
				if msg[1] ~= nil then
					for k, v in pairs(msg) do
						print(k.."". ""..v)
					end
				else
					print(""Place item into turtle inventory and hit enter."")
				end
			else
				shaka.changeColors(colors.red, colors.black)
				print(""Lost connection! Restarting."")
				sleep(2)
				os.reboot()
			end
			shaka.nextLine()
			local x, y = term.getCursorPos()
			local maxX, maxY = term.getSize()
			term.setCursorPos(1, maxY - 3)
			shaka.changeColors(colors.black, colors.gray)
			print(""Enter without entry to refresh turtle inventory"")
			term.setCursorPos(x, y)
			shaka.changeColors(colors.black, colors.white)
			itemSelection = tonumber(read())
		until itemSelection ~= nil
		for k, v in pairs(msg) do
			if itemSelection == k then
				selectedItem = v
			end
		end
	end
	
	if direction ~= ""drop"" then
		shaka.changeColors(colors.gray, colors.yellow)
		shaka.nextLine()
		term.clearLine()
		shaka.centerText(""Amount?"")
		shaka.nextLine()
		shaka.changeColors(colors.black, colors.white)
		print(""No entry for as many as possible\n"")
		
		amount = read()
	end
	
	if amount == nil or amount == """" then
		amount = ""all""
	end
	
	if selectedItem == nil then
		selectedItem = ""nada""
	end
	
	if turtleCommand then
	shaka.changeColors(colors.gray, colors.green)
	print(""\nSaved!"")
	sleep(1)
	end
	sendMovementOrder(direction.."" ""..turtleCommand.."" ""..amount.."" ""..selectedItem)
end

local function switchRedstone()
	local dir = nil
	local state = nil
	local pulseTime = 0
	term.clear()
	term.setCursorPos(1,1)
	shaka.changeColors(colors.gray, colors.yellow)
	term.clearLine()
	
	shaka.centerText(""Change rs on which side?"")
	shaka.changeColors(colors.black, colors.white)
	shaka.nextLine()
	shaka.nextLine()
		print(""  ^   Front - W"")
		print(""<   > Left/Right - A/D"")
		print(""  v   Back - S\n"")
		print(""Space: Top"")
		print(""Shift: Bottom\n"")
	while true do
		local event, selection = os.pullEvent(""key"")
		os.pullEvent(""key_up"")
		if selection == keys.space then
			dir = ""top""
			break
		elseif selection == keys.leftShift then
			dir = ""bottom""
			break
		elseif selection == keys.a then
			dir = ""left""
			break
		elseif selection == keys.d then
			dir = ""right""
			break
		elseif selection == keys.w then
			dir = ""front""
			break
		elseif selection == keys.s then
			dir = ""back""
			break
		end
	end
	shaka.changeColors(colors.black, colors.green)
	print(""Selected:"", dir)
	shaka.nextLine()
	shaka.changeColors(colors.gray, colors.yellow)
	term.clearLine()
	print(""Operation?\n"")
	shaka.changeColors(colors.black, colors.white)
	local x, y = term.getCursorPos()
	print(""1. On"")
	print(""2. Off"")
	print(""3. Pulse on -> off"")
	shaka.changeColors(colors.black, colors.yellow)
	while true do
		local event, selection = os.pullEvent(""key"")
		os.pullEvent(""key_up"")
		if selection == keys.one then
			state = ""on""
			break
		elseif selection == keys.two then
			state = ""off""
			break
		elseif selection == keys.three then
			state = ""pulse""
			for i = 0, 3 do
			term.setCursorPos(x, y + i)
			term.clearLine()
			end
			term.setCursorPos(x, y)
			shaka.changeColors(colors.black, colors.white)
			print(""Pulse for how long?\n"")
			pulseTime = read()
			break
		end
	end
	print(""Selected:"", state)
	sendMovementOrder(""redstone "" ..dir.. "" "" ..state.."" ""..pulseTime)
	sleep(1)
end

local function addSleep()
	shaka.clearScreen()
	shaka.changeColors(colors.black, colors.yellow)
	print(""How many seconds?\n"")
	sleep(0.3)
	local sleepTime = read()
	sendMovementOrder(""sleep "" ..sleepTime)
	print(""\nSuccess!"")
	sleep(1)
end

local function genericMenu(title, optionsTable, listBoolean, keepScreenBoolean)
	local selection = nil
	local dir = nil
	if keepScreenBoolean ~= true then
		shaka.clearScreen()
	else
		shaka.nextLine()
		shaka.nextLine()
	end
	shaka.changeColors(colors.gray, colors.yellow)
	term.clearLine()
	shaka.centerText(title)
	local xPos, yPos = term.getCursorPos()
	term.setCursorPos(1, yPos + 2)
	if listBoolean then
		shaka.changeColors(colors.black, colors.white)
		for i = 1, #optionsTable do
			print(i.."") ""..optionsTable[i])
		end
		while true do
			local event, choice = os.pullEvent(""key"")
			os.pullEvent(""key_up"")
			if choice == keys.one then
				selection = 1
				break
			elseif choice == keys.two then
				selection = 2
				break
			elseif choice == keys.three then
				selection = 3
				break
			elseif choice == keys.four then
				selection = 4
				break
			elseif choice == keys.five then
				selection = 5
				break
			elseif choice == keys.six then
				selection = 6
				break
			end
		end
		term.setCursorPos(1, selection + yPos + 1)
		shaka.changeColors(colors.green, colors.yellow)
		if optionsTable[selection] then
		print(selection.."") "" ..optionsTable[selection])
		end
	else
		shaka.changeColors(colors.black, colors.white)
		print(""  ^   Front - W"")
		print(""<   > Left/Right - A/D"")
		print(""  v   Back - S\n"")
		print(""Space: Top"")
		print(""Shift: Bottom\n"")
		while true do
			event, selection = os.pullEvent(""key"")
			os.pullEvent(""key_up"")
			if selection == keys.space then
				selection = ""top""
				break
			elseif selection == keys.leftShift then
				selection = ""bottom""
				break
			elseif selection == keys.a then
				selection = ""left""
				break
			elseif selection == keys.d then
				selection = ""right""
				break
			elseif selection == keys.w then
				selection = ""front""
				break
			elseif selection == keys.s then
				selection = ""back""
				break
			end
		end
		shaka.changeColors(colors.black, colors.green)
		print(""Selected:"", selection)
	end
	sleep(0.5)
	return selection or nil
end

local function redstoneTrigger()
	local chosenSide = genericMenu(""Wait for RS on which side?"", turtleSides)
	local state = genericMenu(""Trigger when on or off?"", {""on"", ""off""}, true)
	sendMovementOrder(""redstoneTrigger ""..chosenSide.."" ""..state) --side string, state number[1=on, 2=off]
	-- print(""redstoneTrigger ""..chosenSide.."" ""..state)
	-- sleep(3)
end

local function createBasaltMenu(tableName, title)
    local main = basalt.createFrame()
    local x, y = main:getSize()
    local itemList = main:addList()
	local button = main:addButton()
		:setBackground(colors.lightGray)
	local label = main:addLabel()
		:setSize(x, 2)
		:setText(title)
		:setTextAlign(""center"")
		:setBackground(colors.lightGray)
		
	local function stopMenu()
        value = itemList:getValue()
		index = itemList:getItemIndex()
		basalt.stop()
	end

	for k, v in pairs(tableName) do
		itemList:addItem(v)
	end
	
	local function buttonLabel()
		value = itemList:getValue()
		button:setText(value.text)
	end
	
	local function keyControl(self, event, key)
		key = keys.getName(key)
		buttonLabel()
		local pos = itemList:getItemIndex()
		if key == ""up"" then
			if pos == 1 then
				return false
			else
				itemList:selectItem(pos - 1)
				buttonLabel()
			end
		elseif key == ""down"" then
			if pos == itemList:getItemCount() then
				return
			else
				itemList:selectItem(pos + 1)
				buttonLabel()
			end
		elseif key == ""enter"" then
			stopMenu()
		end
	end
	

	
	button
		:setPosition(1, y)
		:setSize(x, 1)
		:setText(""Click or use arrows"")
		:onClick(stopMenu)

	itemList
		:setSize(x, y - 3)
		:setBackground(colors.gray)
		:setPosition(1, 3)
		:setFocus()
		:onClickUp(buttonLabel)
		:setScrollable(true)
		:onKey(keyControl)
		:setSelectionColor(colors.black, colors.lime)

    basalt.autoUpdate()
end

local function blockTrigger()
	local sideTable = {""front"", ""up"", ""down""}
	local chosenSide = genericMenu(""Block on which side?"", sideTable, true)
	chosenSide = sideTable[chosenSide]
	sendMovementOrder(""blockInformation ""..chosenSide)
	local sender, msg = rednet.receive(""blockAnswer"")
	createBasaltMenu(msg, ""Please choose data:"")

	if value then
		sendMovementOrder(""blockTrigger "" ..chosenSide.."" "".. value.text)
	else
		-- print(""nope"")
		-- sleep(3)
	end
end

function getLimiter(bool)
	local aboveOrBelow = nil
	if bool then
		aboveOrBelow = genericMenu(""Trigger above or below?"", {""Above"", ""Below""}, true, false)
	else
		aboveOrBelow = genericMenu(""Trigger above or below?"", {""Above"", ""Below""}, true, true)
	end
	if aboveOrBelow == 1 then
		aboveOrBelow = ""above""
	elseif aboveOrBelow == 2 then
		aboveOrBelow = ""below""
	end
	return aboveOrBelow
end


local function basaltInvMenu()
	local itemIndex
	local upDownChoice = nil
	local itemNumber
	local ready = false
	local inputSize = 7
	local itemTable = {}
	local prettyTable = {}
	local count = -1
	local main = basalt.createFrame()
		:setBackground(colors.gray)
		
	
	local itemList = main:addDropdown()
		:setPosition(8, 1)
		:setDropdownSize(26 - 8, 15)
		:setBackground(colors.lightGray)
		:setSize(26 - 7, 1)
		:setZIndex(100)
	
	local itemCount = main:addInput()
		:setInputType(""number"")
		:setSize(inputSize, 1)
		:setInputLimit(inputSize - 1)
		:setPosition(2, 8)
		:setBackground(colors.black)
		:setForeground(colors.white)
		:setDefaultText(""Enter #"")
		:setFocus()
		
	local confirmButton = main:addButton()
		:setSize(7, 3)
		:setPosition(19, 6)
		:setBackground(colors.red)
		:setText(""Confirm"")
		
	local inputX = itemCount:getX()
	local inputY = itemCount:getY()
	local aboveOrBelowWindow = main:addFrame()
		:setSize(inputSize, 2)
		:setPosition(inputX, inputY - 2)
		:setTransparency(false)
		:setBackground(colors.gray)
		
		local upArrow = aboveOrBelowWindow:addButton()
			:setSize(inputSize, 1)
			:setPosition(1, 1)
			:setText(""above"")
			:setBackground(colors.lightGray)
				
		local downArrow = aboveOrBelowWindow:addButton()
			:setSize(inputSize, 1)
			:setPosition(1, 2)
			:setText(""below"")
			:setBackground(colors.lightGray)
	
		
		
		local function clickUp()
			upArrow:setBackground(colors.green)
			downArrow:setBackground(colors.lightGray)
			upDownChoice = ""above""
		end
		
		local function clickDown()
			upArrow:setBackground(colors.lightGray)
			downArrow:setBackground(colors.green)
			upDownChoice = ""below""
		end
		
		local function keyBoardSelection(self, event, key)
			if key == keys.up then
				clickUp()
			elseif key == keys.down then
				clickDown()
			end
		end
		
	local dirList = main:addDropdown()
		:setPosition(1, 1)
		:setSize(7, 1)
		:setBackground(colors.white)
		:setZIndex(101)
	
	-- local chosenSide = genericMenu(""Inventory on which side?"")
	-- local inventoryAction = genericMenu(""Which inventory trigger?"", {""Count of specific item"", ""Total fill percentage""}, true, true)
	-- sendMovementOrder(""displayExternal"")
	-- rednet.send(turtleID, ""front"", ""sideAnswer"") --- change to chosenSide !!!!! -----------------------------------
	
	local directions = {""front"", ""top"", ""bottom""}
	for k, v in pairs(directions) do
		dirList:addItem(v)
	end
	
	local function stopMenu()
		local itemIndex = itemList:getItemIndex()
		local itemNumber = itemCount:getValue()
		local dirIndex = dirList:getItemIndex()
		-- local zTest = aboveOrBelowWindow:getZIndex()
		-- basalt.debug(zTest)
		
		if itemIndex and itemNumber and dirIndex then
			sendMovementOrder(""inventoryTrigger "" ..directions[dirIndex].. "" "" ..itemTable[itemIndex].."" ""..upDownChoice.."" ""..itemNumber)
		end
		basalt.stop()
	end
	
	
	local function changeButton(self)
		count = itemCount:getValue() 
		basalt.debug(count)
		if count >= 0 then
			if upDownChoice ~= nil then
				confirmButton:setBackground(colors.green)
				ready = true
			end
		else
			confirmButton:setBackground(colors.red)
		end
	end
	
	local function showItems(self)
		prettyTable = {}
		itemList:clear()
		local selectedIndex = dirList:getItemIndex()
		sendMovementOrder(""displayExternal"")
		local sender = rednet.receive(""sideQuestion"")
		rednet.send(turtleID, directions[selectedIndex], ""sideAnswer"")
		sender, itemTable = rednet.receive(""items_Available"")
		itemTable = textutils.unserialize(itemTable)
		
		local function compareSubstring(a, b)
			local substringA = string.sub(a, string.find(a, "":"") + 1)
			local substringB = string.sub(b, string.find(b, "":"") + 1)
			return substringA < substringB
		end
		
		table.sort(itemTable, compareSubstring)
		
		for k, v in pairs(itemTable) do
			prettyTable[k] = shaka.prettyName(itemTable[k])
		end
		
		for k, v in pairs(prettyTable) do
			itemList:addItem(v)
		end
		
	end	
	
	showItems()
	
	upArrow:onClick(clickUp)
		-- :onLoseFocus(changeButton)
		:onClick(changeButton)
		
	downArrow:onClick(clickDown)
		-- :onLoseFocus(changeButton)
		:onClick(changeButton)
	
	itemCount
		:onKey(keyBoardSelection)
		:onLoseFocus(changeButton)
		
	confirmButton
		:onClick(stopMenu)
	
	dirList
		:onChange(showItems)

	basalt.autoUpdate()
end
		
local function inventoryTrigger()
	local chosenSide = genericMenu(""Inventory on which side?"")
	local inventoryAction = genericMenu(""Which inventory trigger?"", {""Count of specific item"", ""Total fill percentage""}, true, true)
	sendMovementOrder(""displayExternal"")
	local sender = rednet.receive(""sideQuestion"")
	rednet.send(sender, chosenSide, ""sideAnswer"")
	
	if tonumber(inventoryAction) == 1 then
		local sender, itemTable = rednet.receive(""items_Available"")
		itemTable = textutils.unserialize(itemTable)
		local prettyTable = {}
		local function compareSubstring(a, b)
			local substringA = string.sub(a, string.find(a, "":"") + 1)
			local substringB = string.sub(b, string.find(b, "":"") + 1)
			return substringA < substringB
		end
		table.sort(itemTable, compareSubstring)
		for k, v in pairs(itemTable) do
			prettyTable[k] = shaka.prettyName(itemTable[k])
		end
		shaka.clearScreen()
		createBasaltMenu(prettyTable, ""Which item?"")
		limiter = getLimiter()
		shaka.nextLine()
		shaka.changeColors(colors.gray, colors.yellow)
		term.clearLine()
		print(""Item count to trigger on?"")
		shaka.changeColors(colors.black, colors.white)
		shaka.nextLine()
		local countAnswer = tonumber(read())
		shaka.clearScreen()
		shaka.changeColors(colors.black, colors.green)
		print(""Success!"")
		shaka.changeColors(colors.black, colors.white)
		print(""\nSide:"", chosenSide)
		print(""\nItem:"", prettyTable[index])
		print(""\nTrigger: ""..limiter.."" ""..countAnswer)
		sendMovementOrder(""inventoryTrigger "" ..chosenSide.. "" "" ..itemTable[index].."" ""..limiter.."" ""..countAnswer)
		
		shaka.changeColors(colors.black, colors.gray)
		print(""\nPress any key to continue.."")
		os.pullEvent(""key"")
	else
		shaka.clearScreen()
		limiter = getLimiter(true)
		shaka.nextLine()
		shaka.nextLine()
		shaka.changeColors(colors.gray, colors.yellow)
		term.clearLine()
		print(""Which percentage?"")
		local percentage = read()
		print(""inventoryTrigger "" ..chosenSide.. "" fillPercent ""..limiter.."" ""..percentage)
		sendMovementOrder(""inventoryTrigger "" ..chosenSide.. "" fillPercent ""..limiter.."" ""..percentage)
	end
end

local function triggerMenu()
	shaka.clearScreen()
	local options = {""Redstone"", ""Block"", ""Inventory""}
	shaka.changeColors(colors.gray, colors.yellow)
	term.clearLine()
	shaka.centerText(""Trigger on which event?\n"")
	term.setCursorPos(1, 3)
	local startY = 3
	shaka.changeColors(colors.black, colors.white)
  
  -- display the menu options
  for i=1,#options do
    print(i.."") ""..options[i])
  end
  
  shaka.nextLine()
  -- get user input
  local a, b = term.getCursorPos()
  term.write(""Select an option"")
  while true do
    local event, choice = os.pullEvent(""key"")
	os.pullEvent(""key_up"")
	if choice == keys.one then
		term.setCursorPos(1, startY)
		shaka.changeColors(colors.green, colors.yellow)
		term.clearLine()
		print(""1) "" ..options[1])
		term.setCursorPos(a, b)
		shaka.changeColors(colors.black, colors.green)
		term.clearLine()
		print(""Selected ""..options[1])
		sleep(1)
		redstoneTrigger()
		return choice
	elseif choice == keys.two then
		term.setCursorPos(1, startY + 1)
		shaka.changeColors(colors.green, colors.yellow)
		term.clearLine()
		print(""2) "" ..options[2])
		term.setCursorPos(a, b)
		shaka.changeColors(colors.black, colors.green)
		term.clearLine()
		print(""Selected ""..options[2])
		sleep(1)
		blockTrigger()
		return choice
	elseif choice == keys.three then
		term.setCursorPos(1, startY + 2)
		shaka.changeColors(colors.green, colors.yellow)
		term.clearLine()
		print(""3) "" ..options[3])
		term.setCursorPos(a, b)
		shaka.changeColors(colors.black, colors.green)
		term.clearLine()
		print(""Selected ""..options[3])
		sleep(1)
		inventoryTrigger()
		return choice
	end
	term.setCursorPos(a, b + 2)
    term.write(""Invalid option. Try again."")
	sleep(1)
	term.clearLine()
  end
end

local function main()
	shaka.clearScreen()
	-- Display movement options
	shaka.changeColors(colors.gray, colors.black)
	term.clearLine()

	-- Display title
	
	print(""Turtle Movement Options:\n"")
	shaka.changeColors(colors.black, colors.green)
	-- Display movement options with arrows
	print(""  ^   Forward - W"")
	print(""<   > Left/Right - A/D"")
	print(""  v   Backward - S\n"")
	print(""Space: Up"")
	print(""Shift: Down\n"")

	-- Display other options
	shaka.changeColors(colors.black, colors.yellow)
	print(""I    Inventory Action"")
	print(""R    Redstone Action"")
	print(""F    Sleep Action"")
	print(""T    Wait for Trigger\n"")
	term.setTextColor(colors.orange)
	print(""Q    Undo last move"")
	_, XLoc = term.getCursorPos()
	term.clearLine()
	print(""X    Finish recording\n"")

	while true do
		-- Get user input
		local event, key = os.pullEvent(""key"")
		if key == keys.w then
				sendMovementOrder(""forward"")
			elseif key == keys.a then
				sendMovementOrder(""left"")
			elseif key == keys.s then
				sendMovementOrder(""back"")
			elseif key == keys.d then
				sendMovementOrder(""right"")
			elseif key == keys.space then
				sendMovementOrder(""up"")
			elseif key == keys.leftShift then
				sendMovementOrder(""down"")
			elseif key == keys.i then
				recordInventory()
				main()
				break
			elseif key == keys.x then
				sendMovementOrder(""allDone"")
				local sender, msg = rednet.receive(""remoteEnd"")
				if msg == ""yep"" then
					shaka.clearScreen()
					textutils.slowPrint(""Finished recording.."")
					sleep(1)
					break
				elseif msg == ""nope"" then
					rednet.send(sender, ""y"", ""remoteEnd"")
					local turtle_id, reply = rednet.receive(""arrivedAtStart"")
					local x, y = term.getCursorPos()
					term.setCursorPos(1, XLoc)
					term.clearLine()
					shaka.changeColors(colors.black, colors.orange)
					print(""X    Finish recording\n"")
					term.setCursorPos(x, y)
				end
			elseif key == keys.q then
				sendMovementOrder(""delete"")
				sender, msg = rednet.receive(""instructionDeleteConfirm"", 2)
				shaka.changeColors(colors.black, colors.red)
				if msg then
					local x, y = term.getCursorPos()
					local _, maxY = term.getSize()
					term.setCursorPos(1, maxY - 1)
					term.clearLine()
					if msg == ""start"" then
						term.write(""Back at start"")
					else
						term.write(""Deleted: ""..msg)
					end
					sleep(1)
					term.clearLine()
					term.setCursorPos(x, y)
				else
					print(""Failure"")
				end
			elseif key == keys.r then
				switchRedstone()
				main()
				break
			elseif key == keys.f then
				addSleep()
				main()
				break
			elseif key == keys.t then
				triggerMenu()
				main()
				break
		end
	end
end

local function positionUpdate()
	while true do
		local sender, msg = rednet.receive(""positionUpdate"")
		if msg == ""start"" then
			local x, y = term.getCursorPos()
			term.setCursorPos(1, XLoc)
			term.clearLine()
			shaka.changeColors(colors.black, colors.orange)
			print(""X    Finish recording\n"")
			term.setCursorPos(x, y)
		else
			local x, y = term.getCursorPos()
			term.setCursorPos(1, XLoc)
			term.clearLine()
			shaka.changeColors(colors.black, colors.orange)
			print(""X    Go to start\n"")
			term.setCursorPos(x, y)
		end
	end
end

-- local function turtleControls()
	-- local normalBG = colors.green
	-- local clickedBG = colors.yellow
	-- local main = basalt.createFrame()
	-- local joypad = main:addFrame()
		-- :setBackground(colors.black)
		-- :setSize(5, 3)
		-- :setPosition(4, 3)
		-- :setFocus()
		-- :setBorder(colors.blue)
		
	-- local arrows = {buttonForward, buttonBack, buttonLeft, buttonRight}
	-- local function forward()
		-- sendMovementOrder(""forward"")
	-- end
	
	-- local function back()
		-- sendMovementOrder(""back"")
	-- end
	
	
	-- local arrowButtons = {
		-- joypad:addButton():setText(""^"")
		-- :setPosition(3, 1)
		-- :onClick(forward)
		-- :onKey(keyColorPressed)
		-- :onKeyUp(keyColorNormal)
		-- ,
		-- joypad:addButton():setText(""v"")
		-- :setPosition(3, 3)
		-- :onClick(back)
		-- ,
		-- joypad:addButton():setText(""<"")
		-- :setPosition(1, 2)
		-- ,
		-- joypad:addButton():setText("">"")
		-- :setPosition(5, 2)
	-- }
	
	-- local function keyColorNormal(self, event, key)
			-- basalt.debug(""up"")
			-- for k, v in pairs(arrowButtons) do
				-- v:setBackground(normalBG)
			-- end
			-- arrowButtons[1]:setBackground(normalBG)
	-- end
	
	-- local function keyColorPressed(self, event, key)
		-- if (key == keys.w) then
			-- basalt.debug(""yo"")
			-- arrowButtons[1]:setBackground(clickedBG)
		-- elseif key == keys.a then
			-- arrowButtons[3]:setBackground(clickedBG)
		-- elseif key == keys.s then
			-- arrowButtons[2]:setBackground(clickedBG)
		-- elseif key == keys.d then
			-- arrowButtons[4]:setBackground(clickedBG)
		-- end
	-- end	
	-- joypad
	-- :onKey(keyColorPressed)
	-- :onKeyUp(keyColorNormal)
	
	-- for k, v in pairs(arrowButtons) do
		-- local function normalColor()
			-- v:setBackground(normalBG)
		-- end
		-- normalColor()
		-- local function clickColor()
			-- v:setBackground(clickedBG)
			-- basalt.debug(""Button ""..k)
		-- end
		-- v:setSize(1,1)
		-- v:onClick(clickColor)
		-- v:onRelease(normalColor)
	-- end	
	
-- end



-- turtleControls()

local function test()
	local main = basalt.createFrame()
	local inputField = main:addInput()
	
	local function changedInput()
		local value = inputField:getValue()
		basalt.debug(value)
	end
	
	inputField:onChange(changedInput)
	basalt.autoUpdate()
end


local args = { ... }

if args[1] == ""1"" then
	-- blockTrigger()
	inventoryTrigger()
elseif args[1] == ""2"" then
	basaltInvMenu()
	-- test()
else
findTransporter()

-- while true do
parallel.waitForAny(main, positionUpdate)
end
-- end
-- main()
-- print(triggerMenu())
-- os.reboot()
-- basalt.autoUpdate()"
F3BYfM2G,CSAPI4-Host,clementinessoup,Lua,Saturday 27th of January 2024 03:00:23 PM CDT,"local CSAPI4HostV = 3
print(""-- CONTENSPEW API 4 CENTRAL HOST LOADING ... --"")

-- STRING UTILS
function splitString(str)
	local r = {}
	for w in str:gmatch(""%S+"") do table.insert(r,w) end
	return r
end

-- FILE AND UPDATE UTILS

function CSFirstLaunch()
	if fs.isDir(""CSAPI4"") then
		return false
	end
	return true
end

function CSSetupData()
	fs.makeDir(""CSAPI4"")
	local F = fs.open(""CSAPI4/F"", ""w"")
	-- VARIABLES TO SAVE FOR MAIN DATA: version
	F.writeLine(CSAPI4HostV)
	F.close()
end

function CSLoadData()
	local F = fs.open(""CSAPI4/F"", ""r"")
	print(""opened F"")
	local fileData = {}
	local line = F.readLine()
	repeat
		table.insert(fileData,line)
		line = F.readLine()
	until line == nil
	F.close()
	return fileData
end

function CSLoadVersion()
	local d = CSLoadData()
	return tonumber(d[1])
end


function HostCSAPI4()
	rednet.open(""top"")
	rednet.host(""CSAPI4"",CSAPI4ID)
	while true do
		event, senderID, message, distance = os.pullEvent(""rednet_message"")
		if event then
			if type(message) == ""table"" then
				print(""SID ""..senderID.."": ""..table.concat(message, "" "").."", from ""..distance.."" blocks."")
			end
			if type(message) == ""string"" then
				print(""SID ""..senderID.."": ""..message.. "", from ""..distance.."" blocks."")
			end
		end
	end
end

local CompID = os.getComputerID()
CSAPI4ID = (""CENTRALSERVER.4.""..CompID)

if CSFirstLaunch() then
	CSSetupData()
	print(""CSSetupData has been run."")
end
CSLoadData()


HostCSAPI4()"
fvqphg66,Nigerian scammers [27-1-2/2024],bombaires,AIMMS,Saturday 27th of January 2024 02:31:54 PM CDT,"<a href=""mailto:williams1960@cpn.it"">williams1960@cpn.it</a>
<a href=""mailto:jamesmolo05@gmail.com@gmail.com"">jamesmolo05@gmail.com@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+31005@gmail.com"">jamesmolo05@gmail.com+31005@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+11963@gmail.com"">jamesmolo05@gmail.com+11963@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+6414@gmail.com"">jamesmolo05@gmail.com+6414@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+10823@gmail.com"">jamesmolo05@gmail.com+10823@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+13580@gmail.com"">jamesmolo05@gmail.com+13580@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+13780@gmail.com"">jamesmolo05@gmail.com+13780@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+10588@gmail.com"">jamesmolo05@gmail.com+10588@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+1699@gmail.com"">jamesmolo05@gmail.com+1699@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+7917@gmail.com"">jamesmolo05@gmail.com+7917@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+6160@gmail.com"">jamesmolo05@gmail.com+6160@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+28432@gmail.com"">jamesmolo05@gmail.com+28432@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+30101@gmail.com"">jamesmolo05@gmail.com+30101@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+21037@gmail.com"">jamesmolo05@gmail.com+21037@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+12637@gmail.com"">jamesmolo05@gmail.com+12637@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+11770@gmail.com"">jamesmolo05@gmail.com+11770@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+9397@gmail.com"">jamesmolo05@gmail.com+9397@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+17439@gmail.com"">jamesmolo05@gmail.com+17439@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+4595@gmail.com"">jamesmolo05@gmail.com+4595@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+26610@gmail.com"">jamesmolo05@gmail.com+26610@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+1426@gmail.com"">jamesmolo05@gmail.com+1426@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+27150@gmail.com"">jamesmolo05@gmail.com+27150@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+14197@gmail.com"">jamesmolo05@gmail.com+14197@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+505@gmail.com"">jamesmolo05@gmail.com+505@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+29171@gmail.com"">jamesmolo05@gmail.com+29171@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+27234@gmail.com"">jamesmolo05@gmail.com+27234@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+16225@gmail.com"">jamesmolo05@gmail.com+16225@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+29853@gmail.com"">jamesmolo05@gmail.com+29853@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+287@gmail.com"">jamesmolo05@gmail.com+287@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+14286@gmail.com"">jamesmolo05@gmail.com+14286@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+16967@gmail.com"">jamesmolo05@gmail.com+16967@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+2758@gmail.com"">jamesmolo05@gmail.com+2758@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+12744@gmail.com"">jamesmolo05@gmail.com+12744@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+13183@gmail.com"">jamesmolo05@gmail.com+13183@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+24615@gmail.com"">jamesmolo05@gmail.com+24615@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+31459@gmail.com"">jamesmolo05@gmail.com+31459@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+28433@gmail.com"">jamesmolo05@gmail.com+28433@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+14776@gmail.com"">jamesmolo05@gmail.com+14776@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+23471@gmail.com"">jamesmolo05@gmail.com+23471@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+435@gmail.com"">jamesmolo05@gmail.com+435@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+16046@gmail.com"">jamesmolo05@gmail.com+16046@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+11137@gmail.com"">jamesmolo05@gmail.com+11137@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+32148@gmail.com"">jamesmolo05@gmail.com+32148@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+14230@gmail.com"">jamesmolo05@gmail.com+14230@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+28241@gmail.com"">jamesmolo05@gmail.com+28241@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+15534@gmail.com"">jamesmolo05@gmail.com+15534@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+23129@gmail.com"">jamesmolo05@gmail.com+23129@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+10561@gmail.com"">jamesmolo05@gmail.com+10561@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+5802@gmail.com"">jamesmolo05@gmail.com+5802@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+20567@gmail.com"">jamesmolo05@gmail.com+20567@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+3917@gmail.com"">jamesmolo05@gmail.com+3917@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+22350@gmail.com"">jamesmolo05@gmail.com+22350@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+14060@gmail.com"">jamesmolo05@gmail.com+14060@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+29389@gmail.com"">jamesmolo05@gmail.com+29389@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+10498@gmail.com"">jamesmolo05@gmail.com+10498@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+15224@gmail.com"">jamesmolo05@gmail.com+15224@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+4595@gmail.com"">jamesmolo05@gmail.com+4595@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+21464@gmail.com"">jamesmolo05@gmail.com+21464@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+7720@gmail.com"">jamesmolo05@gmail.com+7720@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+6447@gmail.com"">jamesmolo05@gmail.com+6447@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+6259@gmail.com"">jamesmolo05@gmail.com+6259@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+22448@gmail.com"">jamesmolo05@gmail.com+22448@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+2009@gmail.com"">jamesmolo05@gmail.com+2009@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+24855@gmail.com"">jamesmolo05@gmail.com+24855@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+20071@gmail.com"">jamesmolo05@gmail.com+20071@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+32533@gmail.com"">jamesmolo05@gmail.com+32533@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+19018@gmail.com"">jamesmolo05@gmail.com+19018@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+32730@gmail.com"">jamesmolo05@gmail.com+32730@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+29172@gmail.com"">jamesmolo05@gmail.com+29172@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+30048@gmail.com"">jamesmolo05@gmail.com+30048@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+25331@gmail.com"">jamesmolo05@gmail.com+25331@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+24454@gmail.com"">jamesmolo05@gmail.com+24454@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+9276@gmail.com"">jamesmolo05@gmail.com+9276@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+10759@gmail.com"">jamesmolo05@gmail.com+10759@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+32641@gmail.com"">jamesmolo05@gmail.com+32641@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+2866@gmail.com"">jamesmolo05@gmail.com+2866@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+5892@gmail.com"">jamesmolo05@gmail.com+5892@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+13247@gmail.com"">jamesmolo05@gmail.com+13247@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+5406@gmail.com"">jamesmolo05@gmail.com+5406@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+14591@gmail.com"">jamesmolo05@gmail.com+14591@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+21342@gmail.com"">jamesmolo05@gmail.com+21342@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+4313@gmail.com"">jamesmolo05@gmail.com+4313@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+28337@gmail.com"">jamesmolo05@gmail.com+28337@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+2717@gmail.com"">jamesmolo05@gmail.com+2717@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+7444@gmail.com"">jamesmolo05@gmail.com+7444@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+25585@gmail.com"">jamesmolo05@gmail.com+25585@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+7113@gmail.com"">jamesmolo05@gmail.com+7113@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+22400@gmail.com"">jamesmolo05@gmail.com+22400@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+25455@gmail.com"">jamesmolo05@gmail.com+25455@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+31950@gmail.com"">jamesmolo05@gmail.com+31950@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+1989@gmail.com"">jamesmolo05@gmail.com+1989@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+29987@gmail.com"">jamesmolo05@gmail.com+29987@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+16967@gmail.com"">jamesmolo05@gmail.com+16967@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+29690@gmail.com"">jamesmolo05@gmail.com+29690@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+12818@gmail.com"">jamesmolo05@gmail.com+12818@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+2501@gmail.com"">jamesmolo05@gmail.com+2501@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+24385@gmail.com"">jamesmolo05@gmail.com+24385@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+13968@gmail.com"">jamesmolo05@gmail.com+13968@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+2096@gmail.com"">jamesmolo05@gmail.com+2096@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+23717@gmail.com"">jamesmolo05@gmail.com+23717@gmail.com</a>
<a href=""mailto:jamesmolo05@gmail.com+1558@gmail.com"">jamesmolo05@gmail.com+1558@gmail.com</a>
<a href=""mailto:drstevepaulltd@gmail.com"">drstevepaulltd@gmail.com</a>
<a href=""mailto:drstevepaulltd+19359@gmail.com"">drstevepaulltd+19359@gmail.com</a>
<a href=""mailto:drstevepaulltd+11013@gmail.com"">drstevepaulltd+11013@gmail.com</a>
<a href=""mailto:drstevepaulltd+27634@gmail.com"">drstevepaulltd+27634@gmail.com</a>
<a href=""mailto:drstevepaulltd+13901@gmail.com"">drstevepaulltd+13901@gmail.com</a>
<a href=""mailto:drstevepaulltd+8595@gmail.com"">drstevepaulltd+8595@gmail.com</a>
<a href=""mailto:drstevepaulltd+28405@gmail.com"">drstevepaulltd+28405@gmail.com</a>
<a href=""mailto:drstevepaulltd+5246@gmail.com"">drstevepaulltd+5246@gmail.com</a>
<a href=""mailto:drstevepaulltd+1100@gmail.com"">drstevepaulltd+1100@gmail.com</a>
<a href=""mailto:drstevepaulltd+17257@gmail.com"">drstevepaulltd+17257@gmail.com</a>
<a href=""mailto:drstevepaulltd+25469@gmail.com"">drstevepaulltd+25469@gmail.com</a>
<a href=""mailto:drstevepaulltd+16947@gmail.com"">drstevepaulltd+16947@gmail.com</a>
<a href=""mailto:drstevepaulltd+8243@gmail.com"">drstevepaulltd+8243@gmail.com</a>
<a href=""mailto:drstevepaulltd+19691@gmail.com"">drstevepaulltd+19691@gmail.com</a>
<a href=""mailto:drstevepaulltd+4973@gmail.com"">drstevepaulltd+4973@gmail.com</a>
<a href=""mailto:drstevepaulltd+24040@gmail.com"">drstevepaulltd+24040@gmail.com</a>
<a href=""mailto:drstevepaulltd+22480@gmail.com"">drstevepaulltd+22480@gmail.com</a>
<a href=""mailto:drstevepaulltd+14278@gmail.com"">drstevepaulltd+14278@gmail.com</a>
<a href=""mailto:drstevepaulltd+13658@gmail.com"">drstevepaulltd+13658@gmail.com</a>
<a href=""mailto:drstevepaulltd+15080@gmail.com"">drstevepaulltd+15080@gmail.com</a>
<a href=""mailto:drstevepaulltd+31653@gmail.com"">drstevepaulltd+31653@gmail.com</a>
<a href=""mailto:drstevepaulltd+65@gmail.com"">drstevepaulltd+65@gmail.com</a>
<a href=""mailto:drstevepaulltd+18536@gmail.com"">drstevepaulltd+18536@gmail.com</a>
<a href=""mailto:drstevepaulltd+32222@gmail.com"">drstevepaulltd+32222@gmail.com</a>
<a href=""mailto:drstevepaulltd+22934@gmail.com"">drstevepaulltd+22934@gmail.com</a>
<a href=""mailto:drstevepaulltd+17104@gmail.com"">drstevepaulltd+17104@gmail.com</a>
<a href=""mailto:drstevepaulltd+360@gmail.com"">drstevepaulltd+360@gmail.com</a>
<a href=""mailto:drstevepaulltd+11073@gmail.com"">drstevepaulltd+11073@gmail.com</a>
<a href=""mailto:drstevepaulltd+14519@gmail.com"">drstevepaulltd+14519@gmail.com</a>
<a href=""mailto:drstevepaulltd+31350@gmail.com"">drstevepaulltd+31350@gmail.com</a>
<a href=""mailto:drstevepaulltd+28341@gmail.com"">drstevepaulltd+28341@gmail.com</a>
<a href=""mailto:drstevepaulltd+19937@gmail.com"">drstevepaulltd+19937@gmail.com</a>
<a href=""mailto:drstevepaulltd+2560@gmail.com"">drstevepaulltd+2560@gmail.com</a>
<a href=""mailto:drstevepaulltd+32064@gmail.com"">drstevepaulltd+32064@gmail.com</a>
<a href=""mailto:drstevepaulltd+13691@gmail.com"">drstevepaulltd+13691@gmail.com</a>
<a href=""mailto:drstevepaulltd+10225@gmail.com"">drstevepaulltd+10225@gmail.com</a>
<a href=""mailto:drstevepaulltd+10491@gmail.com"">drstevepaulltd+10491@gmail.com</a>
<a href=""mailto:drstevepaulltd+26346@gmail.com"">drstevepaulltd+26346@gmail.com</a>
<a href=""mailto:drstevepaulltd+18732@gmail.com"">drstevepaulltd+18732@gmail.com</a>
<a href=""mailto:drstevepaulltd+24409@gmail.com"">drstevepaulltd+24409@gmail.com</a>
<a href=""mailto:drstevepaulltd+13868@gmail.com"">drstevepaulltd+13868@gmail.com</a>
<a href=""mailto:drstevepaulltd+9009@gmail.com"">drstevepaulltd+9009@gmail.com</a>
<a href=""mailto:drstevepaulltd+2653@gmail.com"">drstevepaulltd+2653@gmail.com</a>
<a href=""mailto:drstevepaulltd+9555@gmail.com"">drstevepaulltd+9555@gmail.com</a>
<a href=""mailto:drstevepaulltd+8437@gmail.com"">drstevepaulltd+8437@gmail.com</a>
<a href=""mailto:drstevepaulltd+7215@gmail.com"">drstevepaulltd+7215@gmail.com</a>
<a href=""mailto:drstevepaulltd+12091@gmail.com"">drstevepaulltd+12091@gmail.com</a>
<a href=""mailto:drstevepaulltd+23271@gmail.com"">drstevepaulltd+23271@gmail.com</a>
<a href=""mailto:drstevepaulltd+11209@gmail.com"">drstevepaulltd+11209@gmail.com</a>
<a href=""mailto:drstevepaulltd+13271@gmail.com"">drstevepaulltd+13271@gmail.com</a>
<a href=""mailto:drstevepaulltd+132@gmail.com"">drstevepaulltd+132@gmail.com</a>
<a href=""mailto:drstevepaulltd+13913@gmail.com"">drstevepaulltd+13913@gmail.com</a>
<a href=""mailto:drstevepaulltd+17868@gmail.com"">drstevepaulltd+17868@gmail.com</a>
<a href=""mailto:drstevepaulltd+17499@gmail.com"">drstevepaulltd+17499@gmail.com</a>
<a href=""mailto:drstevepaulltd+20996@gmail.com"">drstevepaulltd+20996@gmail.com</a>
<a href=""mailto:drstevepaulltd+14645@gmail.com"">drstevepaulltd+14645@gmail.com</a>
<a href=""mailto:drstevepaulltd+16615@gmail.com"">drstevepaulltd+16615@gmail.com</a>
<a href=""mailto:drstevepaulltd+8399@gmail.com"">drstevepaulltd+8399@gmail.com</a>
<a href=""mailto:drstevepaulltd+5954@gmail.com"">drstevepaulltd+5954@gmail.com</a>
<a href=""mailto:drstevepaulltd+9468@gmail.com"">drstevepaulltd+9468@gmail.com</a>
<a href=""mailto:drstevepaulltd+15578@gmail.com"">drstevepaulltd+15578@gmail.com</a>
<a href=""mailto:drstevepaulltd+7188@gmail.com"">drstevepaulltd+7188@gmail.com</a>
<a href=""mailto:drstevepaulltd+20601@gmail.com"">drstevepaulltd+20601@gmail.com</a>
<a href=""mailto:drstevepaulltd+19976@gmail.com"">drstevepaulltd+19976@gmail.com</a>
<a href=""mailto:drstevepaulltd+9639@gmail.com"">drstevepaulltd+9639@gmail.com</a>
<a href=""mailto:drstevepaulltd+2682@gmail.com"">drstevepaulltd+2682@gmail.com</a>
<a href=""mailto:drstevepaulltd+28019@gmail.com"">drstevepaulltd+28019@gmail.com</a>
<a href=""mailto:drstevepaulltd+8554@gmail.com"">drstevepaulltd+8554@gmail.com</a>
<a href=""mailto:drstevepaulltd+2937@gmail.com"">drstevepaulltd+2937@gmail.com</a>
<a href=""mailto:drstevepaulltd+29897@gmail.com"">drstevepaulltd+29897@gmail.com</a>
<a href=""mailto:drstevepaulltd+1423@gmail.com"">drstevepaulltd+1423@gmail.com</a>
<a href=""mailto:drstevepaulltd+26259@gmail.com"">drstevepaulltd+26259@gmail.com</a>
<a href=""mailto:drstevepaulltd+23309@gmail.com"">drstevepaulltd+23309@gmail.com</a>
<a href=""mailto:drstevepaulltd+27305@gmail.com"">drstevepaulltd+27305@gmail.com</a>
<a href=""mailto:drstevepaulltd+13583@gmail.com"">drstevepaulltd+13583@gmail.com</a>
<a href=""mailto:drstevepaulltd+10889@gmail.com"">drstevepaulltd+10889@gmail.com</a>
<a href=""mailto:drstevepaulltd+23493@gmail.com"">drstevepaulltd+23493@gmail.com</a>
<a href=""mailto:drstevepaulltd+4659@gmail.com"">drstevepaulltd+4659@gmail.com</a>
<a href=""mailto:drstevepaulltd+17842@gmail.com"">drstevepaulltd+17842@gmail.com</a>
<a href=""mailto:drstevepaulltd+3895@gmail.com"">drstevepaulltd+3895@gmail.com</a>
<a href=""mailto:drstevepaulltd+29686@gmail.com"">drstevepaulltd+29686@gmail.com</a>
<a href=""mailto:drstevepaulltd+26440@gmail.com"">drstevepaulltd+26440@gmail.com</a>
<a href=""mailto:drstevepaulltd+21043@gmail.com"">drstevepaulltd+21043@gmail.com</a>
<a href=""mailto:drstevepaulltd+24289@gmail.com"">drstevepaulltd+24289@gmail.com</a>
<a href=""mailto:drstevepaulltd+28976@gmail.com"">drstevepaulltd+28976@gmail.com</a>
<a href=""mailto:drstevepaulltd+28817@gmail.com"">drstevepaulltd+28817@gmail.com</a>
<a href=""mailto:drstevepaulltd+2977@gmail.com"">drstevepaulltd+2977@gmail.com</a>
<a href=""mailto:drstevepaulltd+10701@gmail.com"">drstevepaulltd+10701@gmail.com</a>
<a href=""mailto:drstevepaulltd+24491@gmail.com"">drstevepaulltd+24491@gmail.com</a>
<a href=""mailto:drstevepaulltd+31369@gmail.com"">drstevepaulltd+31369@gmail.com</a>
<a href=""mailto:drstevepaulltd+10077@gmail.com"">drstevepaulltd+10077@gmail.com</a>
<a href=""mailto:drstevepaulltd+1246@gmail.com"">drstevepaulltd+1246@gmail.com</a>
<a href=""mailto:drstevepaulltd+8335@gmail.com"">drstevepaulltd+8335@gmail.com</a>
<a href=""mailto:drstevepaulltd+5891@gmail.com"">drstevepaulltd+5891@gmail.com</a>
<a href=""mailto:drstevepaulltd+25438@gmail.com"">drstevepaulltd+25438@gmail.com</a>
<a href=""mailto:drstevepaulltd+24460@gmail.com"">drstevepaulltd+24460@gmail.com</a>
<a href=""mailto:drstevepaulltd+14591@gmail.com"">drstevepaulltd+14591@gmail.com</a>
<a href=""mailto:drstevepaulltd+3697@gmail.com"">drstevepaulltd+3697@gmail.com</a>
<a href=""mailto:drstevepaulltd+20359@gmail.com"">drstevepaulltd+20359@gmail.com</a>
<a href=""mailto:drstevepaulltd+31674@gmail.com"">drstevepaulltd+31674@gmail.com</a>
<a href=""mailto:drstevepaulltd+3581@gmail.com"">drstevepaulltd+3581@gmail.com</a>
<a href=""mailto:generalfile100@@gmail.com"">generalfile100@@gmail.com</a>
<a href=""mailto:generalfile100@+23137@gmail.com"">generalfile100@+23137@gmail.com</a>
<a href=""mailto:generalfile100@+17935@gmail.com"">generalfile100@+17935@gmail.com</a>
<a href=""mailto:generalfile100@+31365@gmail.com"">generalfile100@+31365@gmail.com</a>
<a href=""mailto:generalfile100@+22420@gmail.com"">generalfile100@+22420@gmail.com</a>
<a href=""mailto:generalfile100@+8901@gmail.com"">generalfile100@+8901@gmail.com</a>
<a href=""mailto:generalfile100@+2269@gmail.com"">generalfile100@+2269@gmail.com</a>
<a href=""mailto:generalfile100@+23787@gmail.com"">generalfile100@+23787@gmail.com</a>
<a href=""mailto:generalfile100@+423@gmail.com"">generalfile100@+423@gmail.com</a>
<a href=""mailto:generalfile100@+22446@gmail.com"">generalfile100@+22446@gmail.com</a>
<a href=""mailto:generalfile100@+14600@gmail.com"">generalfile100@+14600@gmail.com</a>
<a href=""mailto:generalfile100@+3708@gmail.com"">generalfile100@+3708@gmail.com</a>
<a href=""mailto:generalfile100@+26666@gmail.com"">generalfile100@+26666@gmail.com</a>
<a href=""mailto:generalfile100@+11422@gmail.com"">generalfile100@+11422@gmail.com</a>
<a href=""mailto:generalfile100@+18196@gmail.com"">generalfile100@+18196@gmail.com</a>
<a href=""mailto:generalfile100@+13633@gmail.com"">generalfile100@+13633@gmail.com</a>
<a href=""mailto:generalfile100@+29512@gmail.com"">generalfile100@+29512@gmail.com</a>
<a href=""mailto:generalfile100@+15370@gmail.com"">generalfile100@+15370@gmail.com</a>
<a href=""mailto:generalfile100@+9238@gmail.com"">generalfile100@+9238@gmail.com</a>
<a href=""mailto:generalfile100@+9169@gmail.com"">generalfile100@+9169@gmail.com</a>
<a href=""mailto:generalfile100@+11525@gmail.com"">generalfile100@+11525@gmail.com</a>
<a href=""mailto:generalfile100@+1738@gmail.com"">generalfile100@+1738@gmail.com</a>
<a href=""mailto:generalfile100@+12736@gmail.com"">generalfile100@+12736@gmail.com</a>
<a href=""mailto:generalfile100@+28340@gmail.com"">generalfile100@+28340@gmail.com</a>
<a href=""mailto:generalfile100@+25196@gmail.com"">generalfile100@+25196@gmail.com</a>
<a href=""mailto:generalfile100@+29352@gmail.com"">generalfile100@+29352@gmail.com</a>
<a href=""mailto:generalfile100@+19746@gmail.com"">generalfile100@+19746@gmail.com</a>
<a href=""mailto:generalfile100@+13073@gmail.com"">generalfile100@+13073@gmail.com</a>
<a href=""mailto:generalfile100@+31953@gmail.com"">generalfile100@+31953@gmail.com</a>
<a href=""mailto:generalfile100@+22749@gmail.com"">generalfile100@+22749@gmail.com</a>
<a href=""mailto:generalfile100@+17795@gmail.com"">generalfile100@+17795@gmail.com</a>
<a href=""mailto:generalfile100@+29076@gmail.com"">generalfile100@+29076@gmail.com</a>
<a href=""mailto:generalfile100@+8109@gmail.com"">generalfile100@+8109@gmail.com</a>
<a href=""mailto:generalfile100@+31128@gmail.com"">generalfile100@+31128@gmail.com</a>
<a href=""mailto:generalfile100@+28840@gmail.com"">generalfile100@+28840@gmail.com</a>
<a href=""mailto:generalfile100@+18136@gmail.com"">generalfile100@+18136@gmail.com</a>
<a href=""mailto:generalfile100@+7361@gmail.com"">generalfile100@+7361@gmail.com</a>
<a href=""mailto:generalfile100@+13191@gmail.com"">generalfile100@+13191@gmail.com</a>
<a href=""mailto:generalfile100@+18355@gmail.com"">generalfile100@+18355@gmail.com</a>
<a href=""mailto:generalfile100@+20747@gmail.com"">generalfile100@+20747@gmail.com</a>
<a href=""mailto:generalfile100@+1914@gmail.com"">generalfile100@+1914@gmail.com</a>
<a href=""mailto:generalfile100@+24513@gmail.com"">generalfile100@+24513@gmail.com</a>
<a href=""mailto:generalfile100@+29719@gmail.com"">generalfile100@+29719@gmail.com</a>
<a href=""mailto:generalfile100@+23448@gmail.com"">generalfile100@+23448@gmail.com</a>
<a href=""mailto:generalfile100@+7336@gmail.com"">generalfile100@+7336@gmail.com</a>
<a href=""mailto:generalfile100@+28293@gmail.com"">generalfile100@+28293@gmail.com</a>
<a href=""mailto:generalfile100@+7255@gmail.com"">generalfile100@+7255@gmail.com</a>
<a href=""mailto:generalfile100@+9949@gmail.com"">generalfile100@+9949@gmail.com</a>
<a href=""mailto:generalfile100@+25923@gmail.com"">generalfile100@+25923@gmail.com</a>
<a href=""mailto:generalfile100@+18352@gmail.com"">generalfile100@+18352@gmail.com</a>
<a href=""mailto:generalfile100@+4181@gmail.com"">generalfile100@+4181@gmail.com</a>
<a href=""mailto:generalfile100@+9387@gmail.com"">generalfile100@+9387@gmail.com</a>
<a href=""mailto:generalfile100@+139@gmail.com"">generalfile100@+139@gmail.com</a>
<a href=""mailto:generalfile100@+2195@gmail.com"">generalfile100@+2195@gmail.com</a>
<a href=""mailto:generalfile100@+8736@gmail.com"">generalfile100@+8736@gmail.com</a>
<a href=""mailto:generalfile100@+25268@gmail.com"">generalfile100@+25268@gmail.com</a>
<a href=""mailto:generalfile100@+1970@gmail.com"">generalfile100@+1970@gmail.com</a>
<a href=""mailto:generalfile100@+29738@gmail.com"">generalfile100@+29738@gmail.com</a>
<a href=""mailto:generalfile100@+8171@gmail.com"">generalfile100@+8171@gmail.com</a>
<a href=""mailto:generalfile100@+1464@gmail.com"">generalfile100@+1464@gmail.com</a>
<a href=""mailto:generalfile100@+1427@gmail.com"">generalfile100@+1427@gmail.com</a>
<a href=""mailto:generalfile100@+15047@gmail.com"">generalfile100@+15047@gmail.com</a>
<a href=""mailto:generalfile100@+31641@gmail.com"">generalfile100@+31641@gmail.com</a>
<a href=""mailto:generalfile100@+6572@gmail.com"">generalfile100@+6572@gmail.com</a>
<a href=""mailto:generalfile100@+18125@gmail.com"">generalfile100@+18125@gmail.com</a>
<a href=""mailto:generalfile100@+14784@gmail.com"">generalfile100@+14784@gmail.com</a>
<a href=""mailto:generalfile100@+16093@gmail.com"">generalfile100@+16093@gmail.com</a>
<a href=""mailto:generalfile100@+2728@gmail.com"">generalfile100@+2728@gmail.com</a>
<a href=""mailto:generalfile100@+5754@gmail.com"">generalfile100@+5754@gmail.com</a>
<a href=""mailto:generalfile100@+10499@gmail.com"">generalfile100@+10499@gmail.com</a>
<a href=""mailto:generalfile100@+23903@gmail.com"">generalfile100@+23903@gmail.com</a>
<a href=""mailto:generalfile100@+15574@gmail.com"">generalfile100@+15574@gmail.com</a>
<a href=""mailto:generalfile100@+29562@gmail.com"">generalfile100@+29562@gmail.com</a>
<a href=""mailto:generalfile100@+2711@gmail.com"">generalfile100@+2711@gmail.com</a>
<a href=""mailto:generalfile100@+32662@gmail.com"">generalfile100@+32662@gmail.com</a>
<a href=""mailto:generalfile100@+26659@gmail.com"">generalfile100@+26659@gmail.com</a>
<a href=""mailto:generalfile100@+8641@gmail.com"">generalfile100@+8641@gmail.com</a>
<a href=""mailto:generalfile100@+31148@gmail.com"">generalfile100@+31148@gmail.com</a>
<a href=""mailto:generalfile100@+30413@gmail.com"">generalfile100@+30413@gmail.com</a>
<a href=""mailto:generalfile100@+20843@gmail.com"">generalfile100@+20843@gmail.com</a>
<a href=""mailto:generalfile100@+23561@gmail.com"">generalfile100@+23561@gmail.com</a>
<a href=""mailto:generalfile100@+6942@gmail.com"">generalfile100@+6942@gmail.com</a>
<a href=""mailto:generalfile100@+7491@gmail.com"">generalfile100@+7491@gmail.com</a>
<a href=""mailto:generalfile100@+24363@gmail.com"">generalfile100@+24363@gmail.com</a>
<a href=""mailto:generalfile100@+20094@gmail.com"">generalfile100@+20094@gmail.com</a>
<a href=""mailto:generalfile100@+20601@gmail.com"">generalfile100@+20601@gmail.com</a>
<a href=""mailto:generalfile100@+6381@gmail.com"">generalfile100@+6381@gmail.com</a>
<a href=""mailto:generalfile100@+30080@gmail.com"">generalfile100@+30080@gmail.com</a>
<a href=""mailto:generalfile100@+20216@gmail.com"">generalfile100@+20216@gmail.com</a>
<a href=""mailto:generalfile100@+23328@gmail.com"">generalfile100@+23328@gmail.com</a>
<a href=""mailto:generalfile100@+12219@gmail.com"">generalfile100@+12219@gmail.com</a>
<a href=""mailto:generalfile100@+20468@gmail.com"">generalfile100@+20468@gmail.com</a>
<a href=""mailto:generalfile100@+30919@gmail.com"">generalfile100@+30919@gmail.com</a>
<a href=""mailto:generalfile100@+11203@gmail.com"">generalfile100@+11203@gmail.com</a>
<a href=""mailto:generalfile100@+8029@gmail.com"">generalfile100@+8029@gmail.com</a>
<a href=""mailto:generalfile100@+14212@gmail.com"">generalfile100@+14212@gmail.com</a>
<a href=""mailto:generalfile100@+6007@gmail.com"">generalfile100@+6007@gmail.com</a>
<a href=""mailto:generalfile100@+26120@gmail.com"">generalfile100@+26120@gmail.com</a>
<a href=""mailto:generalfile100@+8387@gmail.com"">generalfile100@+8387@gmail.com</a>
<a href=""mailto:generalfile100@+15912@gmail.com"">generalfile100@+15912@gmail.com</a>
<a href=""mailto:generalfile100@+5496@gmail.com"">generalfile100@+5496@gmail.com</a>"
Pfy8NE9H,winner winner snowybot 2.4*balance,coinwalk,JavaScript,Saturday 27th of January 2024 02:12:42 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/140).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
if ((bellance>kitty)&&(beatle<49.5000)){
kitty = parseFloat(bellance);
beatle = null;
}
if ((bellance<kitty)&&(beatle>=49.5000)){
kitty = parseFloat(bellance);
beatle = null;
}
if ((bellance>kitty)&&(beatle>=49.5000)){
console.log(""they did payments wrong"");
return;
}
if ((bellance<kitty)&&(beatle<49.5000)){
console.log(""they didn't pay you for green"");
return;
}
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
    troll = troll+1;
    bob = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    troll = troll-1;
    fart = parseFloat(bellance);
}
if (troll<0){
troll = 0;
}
if ((bellance<=(bob-(botplus*2)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    troll = 0;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if ((bellance<=(botplus*20))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    troll = 0;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if ((botplus*2>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    troll = 0;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if (bellance>=(oldestbal*2.4)) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
gQ7i5AQy,multi-gpu,kopyl,Python,Saturday 27th of January 2024 02:00:04 PM CDT,"import functools
import gc
import logging
import math
import os
import random
import shutil
from pathlib import Path

import accelerate
import datasets
import numpy as np
import torch
import torch.nn.functional as F
import torch.utils.checkpoint
import transformers
from accelerate import Accelerator
from accelerate.logging import get_logger
from accelerate.utils import ProjectConfiguration, set_seed
from accelerate.utils import InitProcessGroupKwargs
from datasets import load_dataset, DatasetDict, load_from_disk
from huggingface_hub import create_repo, upload_folder
from packaging import version
from torchvision import transforms
from torchvision.transforms.functional import crop
from tqdm.auto import tqdm
from transformers import AutoTokenizer, PretrainedConfig
from multiprocess import set_start_method

import diffusers
from diffusers import (
    AutoencoderKL,
    DDPMScheduler,
    StableDiffusionXLPipeline,
    UNet2DConditionModel,
)
from diffusers.optimization import get_scheduler
from diffusers.training_utils import EMAModel, compute_snr
from diffusers.utils import check_min_version, is_wandb_available
from diffusers.utils.import_utils import is_xformers_available
from datetime import timedelta
from multiprocess import set_start_method

from copy import deepcopy


from typing import Callable


kwargs_handlers = [InitProcessGroupKwargs(timeout=timedelta(days=10))]
accelerator = Accelerator(kwargs_handlers=kwargs_handlers)


resolution = 128
dataset_name = ""lambdalabs/pokemon-blip-captions""
cache_dir = ""/workspace/dataset-cache""
pretrained_model_name_or_path = ""stabilityai/stable-diffusion-xl-base-1.0""
pretrained_vae_model_name_or_path = ""madebyollin/sdxl-vae-fp16-fix""

max_train_samples = None


check_min_version(""0.24.0.dev0"")
logger = get_logger(__name__)
DATASET_NAME_MAPPING = {
    ""lambdalabs/pokemon-blip-captions"": (""image"", ""text""),
}

dataset = load_dataset(
    dataset_name,
    cache_dir=cache_dir,
)


if max_train_samples is not None:
    dataset[""train""] = dataset[""train""].select(range(max_train_samples))


column_names = dataset[""train""].column_names


train_resize = transforms.Resize(resolution, interpolation=transforms.InterpolationMode.BILINEAR)
train_transforms = transforms.Compose([transforms.ToTensor(), transforms.Normalize([0.5], [0.5])])
train_crop = transforms.RandomCrop(resolution)


def preprocess_train(examples):
    image_column = column_names[0]
    images = [image.convert(""RGB"") for image in examples[image_column]]
    # image aug
    original_sizes = []
    all_images = []
    crop_top_lefts = []
    for image in images:
        original_sizes.append((image.height, image.width))
        image = train_resize(image)

        y1, x1, h, w = train_crop.get_params(image, (resolution, resolution))
        image = crop(image, y1, x1, h, w)

        crop_top_left = (y1, x1)
        crop_top_lefts.append(crop_top_left)
        image = train_transforms(image)
        all_images.append(image)

    examples[""original_sizes""] = original_sizes
    examples[""crop_top_lefts""] = crop_top_lefts
    examples[""pixel_values""] = all_images
    return examples


train_dataset = dataset[""train""].with_transform(preprocess_train)
print(type(train_dataset))
train_dataset


def import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path: str, revision: str, subfolder: str = ""text_encoder""
):
    text_encoder_config = PretrainedConfig.from_pretrained(
        pretrained_model_name_or_path, subfolder=subfolder, revision=revision
    )
    model_class = text_encoder_config.architectures[0]

    if model_class == ""CLIPTextModel"":
        from transformers import CLIPTextModel

        return CLIPTextModel
    elif model_class == ""CLIPTextModelWithProjection"":
        from transformers import CLIPTextModelWithProjection

        return CLIPTextModelWithProjection
    else:
        raise ValueError(f""{model_class} is not supported."")


text_encoder_cls_one = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None
)
text_encoder_cls_two = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None, subfolder=""text_encoder_2""
)

text_encoder_one = text_encoder_cls_one.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder""
)
text_encoder_two = text_encoder_cls_two.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder_2""
)

vae = AutoencoderKL.from_pretrained(
    pretrained_model_name_or_path, subfolder=""vae""
)

tokenizer_one = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer"", use_fast=False
)
tokenizer_two = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer_2""
)

text_encoders = [text_encoder_one, text_encoder_two]
tokenizers = [tokenizer_one, tokenizer_two]

all_text_encoders = {}
all_vae = {}

for i in range(torch.cuda.device_count()):
    all_text_encoders[i] = deepcopy(text_encoders)
    for encoder in all_text_encoders[i]:
        encoder.to(f""cuda:{i}"")
    
    all_vae[i] = deepcopy(vae)
    all_vae[i].to(f""cuda:{i}"")


def encode_prompt(batch, rank, text_encoders, tokenizers, proportion_empty_prompts, caption_column, is_train=True):
    torch.cuda.set_device(f""cuda:{rank}"")
    
    prompt_embeds_list = []
    prompt_batch = batch[caption_column]

    captions = []
    for caption in prompt_batch:
        if random.random() < proportion_empty_prompts:
            captions.append("""")
        elif isinstance(caption, str):
            captions.append(caption)
        elif isinstance(caption, (list, np.ndarray)):
            # take a random caption if there are multiple
            captions.append(random.choice(caption) if is_train else caption[0])

    with torch.no_grad():
        for tokenizer, text_encoder in zip(tokenizers, all_text_encoders[rank]):
            
            text_inputs = tokenizer(
                captions,
                padding=""max_length"",
                max_length=tokenizer.model_max_length,
                truncation=True,
                return_tensors=""pt"",
            )
            text_input_ids = text_inputs.input_ids
            prompt_embeds = text_encoder(
                text_input_ids.to(text_encoder.device),
                output_hidden_states=True,
            )

            # We are only ALWAYS interested in the pooled output of the final text encoder
            pooled_prompt_embeds = prompt_embeds[0]
            prompt_embeds = prompt_embeds.hidden_states[-2]
            bs_embed, seq_len, _ = prompt_embeds.shape
            prompt_embeds = prompt_embeds.view(bs_embed, seq_len, -1)
            prompt_embeds_list.append(prompt_embeds)

    prompt_embeds = torch.concat(prompt_embeds_list, dim=-1)
    pooled_prompt_embeds = pooled_prompt_embeds.view(bs_embed, -1)
    return {""prompt_embeds"": prompt_embeds.cpu(), ""pooled_prompt_embeds"": pooled_prompt_embeds.cpu()}


def compute_vae_encodings(batch, vae):
    images = batch.pop(""pixel_values"")
    pixel_values = torch.stack(list(images))
    pixel_values = pixel_values.to(memory_format=torch.contiguous_format).float()
    pixel_values = pixel_values.to(vae.device, dtype=vae.dtype)

    with torch.no_grad():
        model_input = vae.encode(pixel_values).latent_dist.sample()
    model_input = model_input * vae.config.scaling_factor
    return {""model_input"": model_input.cpu()}


compute_embeddings_fn = functools.partial(
    encode_prompt,
    text_encoders=text_encoders,
    tokenizers=tokenizers,
    proportion_empty_prompts=0,
    caption_column=""text"",
)
compute_vae_encodings_fn = functools.partial(compute_vae_encodings, vae=vae)

def map_train():
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=4, with_rank=True, num_proc=2)


if __name__ == ""__main__"":
    set_start_method(""spawn"")
    map_train()"
bfmEeK2y,single-gpu,kopyl,Python,Saturday 27th of January 2024 01:59:05 PM CDT,"import functools
import gc
import logging
import math
import os
import random
import shutil
from pathlib import Path

import accelerate
import datasets
import numpy as np
import torch
import torch.nn.functional as F
import torch.utils.checkpoint
import transformers
from accelerate import Accelerator
from accelerate.logging import get_logger
from accelerate.utils import ProjectConfiguration, set_seed
from accelerate.utils import InitProcessGroupKwargs
from datasets import load_dataset, DatasetDict, load_from_disk
from huggingface_hub import create_repo, upload_folder
from packaging import version
from torchvision import transforms
from torchvision.transforms.functional import crop
from tqdm.auto import tqdm
from transformers import AutoTokenizer, PretrainedConfig
from multiprocess import set_start_method

import diffusers
from diffusers import (
    AutoencoderKL,
    DDPMScheduler,
    StableDiffusionXLPipeline,
    UNet2DConditionModel,
)
from diffusers.optimization import get_scheduler
from diffusers.training_utils import EMAModel, compute_snr
from diffusers.utils import check_min_version, is_wandb_available
from diffusers.utils.import_utils import is_xformers_available
from datetime import timedelta
from multiprocess import set_start_method


from typing import Callable


kwargs_handlers = [InitProcessGroupKwargs(timeout=timedelta(days=10))]
accelerator = Accelerator(kwargs_handlers=kwargs_handlers)


resolution = 128
dataset_name = ""lambdalabs/pokemon-blip-captions""
cache_dir = ""/workspace/dataset-cache""
pretrained_model_name_or_path = ""stabilityai/stable-diffusion-xl-base-1.0""
pretrained_vae_model_name_or_path = ""madebyollin/sdxl-vae-fp16-fix""

max_train_samples = None


check_min_version(""0.24.0.dev0"")
logger = get_logger(__name__)
DATASET_NAME_MAPPING = {
    ""lambdalabs/pokemon-blip-captions"": (""image"", ""text""),
}

dataset = load_dataset(
    dataset_name,
    cache_dir=cache_dir,
)


if max_train_samples is not None:
    dataset[""train""] = dataset[""train""].select(range(max_train_samples))


column_names = dataset[""train""].column_names


train_resize = transforms.Resize(resolution, interpolation=transforms.InterpolationMode.BILINEAR)
train_transforms = transforms.Compose([transforms.ToTensor(), transforms.Normalize([0.5], [0.5])])
train_crop = transforms.RandomCrop(resolution)


def preprocess_train(examples):
    image_column = column_names[0]
    images = [image.convert(""RGB"") for image in examples[image_column]]
    # image aug
    original_sizes = []
    all_images = []
    crop_top_lefts = []
    for image in images:
        original_sizes.append((image.height, image.width))
        image = train_resize(image)

        y1, x1, h, w = train_crop.get_params(image, (resolution, resolution))
        image = crop(image, y1, x1, h, w)

        crop_top_left = (y1, x1)
        crop_top_lefts.append(crop_top_left)
        image = train_transforms(image)
        all_images.append(image)

    examples[""original_sizes""] = original_sizes
    examples[""crop_top_lefts""] = crop_top_lefts
    examples[""pixel_values""] = all_images
    return examples


train_dataset = dataset[""train""].with_transform(preprocess_train)
print(type(train_dataset))
train_dataset


def import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path: str, revision: str, subfolder: str = ""text_encoder""
):
    text_encoder_config = PretrainedConfig.from_pretrained(
        pretrained_model_name_or_path, subfolder=subfolder, revision=revision
    )
    model_class = text_encoder_config.architectures[0]

    if model_class == ""CLIPTextModel"":
        from transformers import CLIPTextModel

        return CLIPTextModel
    elif model_class == ""CLIPTextModelWithProjection"":
        from transformers import CLIPTextModelWithProjection

        return CLIPTextModelWithProjection
    else:
        raise ValueError(f""{model_class} is not supported."")


text_encoder_cls_one = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None
)
text_encoder_cls_two = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None, subfolder=""text_encoder_2""
)

text_encoder_one = text_encoder_cls_one.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder""
)
text_encoder_one.to(accelerator.device)

text_encoder_two = text_encoder_cls_two.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder_2""
)
text_encoder_two.to(accelerator.device)

vae = AutoencoderKL.from_pretrained(
    pretrained_model_name_or_path, subfolder=""vae""
)
vae.to(accelerator.device)

tokenizer_one = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer"", use_fast=False
)
tokenizer_two = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer_2""
)


text_encoders = [text_encoder_one, text_encoder_two]
tokenizers = [tokenizer_one, tokenizer_two]


def encode_prompt(batch, text_encoders, tokenizers, proportion_empty_prompts, caption_column, is_train=True):
    prompt_embeds_list = []
    prompt_batch = batch[caption_column]

    captions = []
    for caption in prompt_batch:
        if random.random() < proportion_empty_prompts:
            captions.append("""")
        elif isinstance(caption, str):
            captions.append(caption)
        elif isinstance(caption, (list, np.ndarray)):
            # take a random caption if there are multiple
            captions.append(random.choice(caption) if is_train else caption[0])

    with torch.no_grad():
        for tokenizer, text_encoder in zip(tokenizers, text_encoders):
            text_inputs = tokenizer(
                captions,
                padding=""max_length"",
                max_length=tokenizer.model_max_length,
                truncation=True,
                return_tensors=""pt"",
            )
            text_input_ids = text_inputs.input_ids
            prompt_embeds = text_encoder(
                text_input_ids.to(text_encoder.device),
                output_hidden_states=True,
            )

            # We are only ALWAYS interested in the pooled output of the final text encoder
            pooled_prompt_embeds = prompt_embeds[0]
            prompt_embeds = prompt_embeds.hidden_states[-2]
            bs_embed, seq_len, _ = prompt_embeds.shape
            prompt_embeds = prompt_embeds.view(bs_embed, seq_len, -1)
            prompt_embeds_list.append(prompt_embeds)

    prompt_embeds = torch.concat(prompt_embeds_list, dim=-1)
    pooled_prompt_embeds = pooled_prompt_embeds.view(bs_embed, -1)
    return {""prompt_embeds"": prompt_embeds.cpu(), ""pooled_prompt_embeds"": pooled_prompt_embeds.cpu()}


def compute_vae_encodings(batch, vae):
    images = batch.pop(""pixel_values"")
    pixel_values = torch.stack(list(images))
    pixel_values = pixel_values.to(memory_format=torch.contiguous_format).float()
    pixel_values = pixel_values.to(vae.device, dtype=vae.dtype)

    with torch.no_grad():
        model_input = vae.encode(pixel_values).latent_dist.sample()
    model_input = model_input * vae.config.scaling_factor
    return {""model_input"": model_input.cpu()}


compute_embeddings_fn = functools.partial(
    encode_prompt,
    text_encoders=text_encoders,
    tokenizers=tokenizers,
    proportion_empty_prompts=0,
    caption_column=""text"",
)
compute_vae_encodings_fn = functools.partial(compute_vae_encodings, vae=vae)

def map_train():
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=4, num_proc=1)


datasets.disable_caching()
cache_path = ""/home/.cache""

def dataset_map_multi_worker(
    dataset: datasets.Dataset, map_fn: Callable, *args, **kwargs
) -> datasets.Dataset:
    try:
        rank = torch.distributed.get_rank()
        world_size = torch.distributed.get_world_size()
    except (RuntimeError, ValueError):
        return dataset.map(map_fn, *args, **kwargs)
    ds_shard_filepaths = [
        os.path.join(cache_path, f""{dataset._fingerprint}_subshard_{w}.cache"")
        for w in range(0, world_size)
    ]
    print(f""\tworker {rank} saving sub-shard to {ds_shard_filepaths[rank]}"")
    ds_shard = dataset.shard(
        num_shards=world_size,
        index=rank,
        contiguous=True,
    )
    ds_shard = ds_shard.map(map_fn, *args, **kwargs)
    ds_shard.with_format(None).save_to_disk(ds_shard_filepaths[rank])
    print(""rank"", rank, ""saving:"", ds_shard_filepaths[rank])
    torch.distributed.barrier()
    full_dataset = datasets.concatenate_datasets(
        [datasets.load_from_disk(p) for p in ds_shard_filepaths]
    )
    torch.distributed.barrier()
    print(""rank"", rank, ""deleting:"", ds_shard_filepaths[rank])
    shutil.rmtree(ds_shard_filepaths[rank])
    return full_dataset



if __name__ == ""__main__"":
    map_train()"
vdZ8QY0u,makeChamber,MaxHyper0310,Lua,Saturday 27th of January 2024 01:18:57 PM CDT,"os.loadAPI(""build"");
 
-- API Aliases
function dirMap(turns) return build.dirMap(turns); end
 
dofile(""config"");
dofile(""blocks"");
 
local D, U, N, S, W, E = dirMap(0);
 
local radius = 8;
local compy = build.Coord:get();
local center = compy:off(N, radius + 3);
local vol = build.cuboid(center):grohor(radius + 3);
 
build.cuboid(compy:up()):gro(U, 2):grohor():erase(); -- Erase Monitors
 
build.cuboid(compy):grohor():loop(air); -- Erase Base Around Computer
vol:gro(U, height + 2):shrhor():erase();
vol:gro(D, 2):dwn():fill(sandstone);
 
--error(); -- Uncomment to bail after erasing
 
vol:dwn():loop(hazardBlock);
 
vol = vol:shrhor():fill(platBlock);
vol = vol:shrhor():up():loop(frameBlock);
vol:gro(U, height + 1):box(air, frameBlock, frameBlock, frameBlock, frameBlock, frameBlock);
vol:shrhor():fill(floorBlock);
 
-- TODO: Make glass ceiling
 
center = center:up();
 
build.cuboid(center:up(8)):grohor():fill(ventBlock);
 
center:up(8):cub():fill(dirt);
 
-- Chamber walls
center:up():cylinder(wallBlock, radius, height);
 
build.cuboid(compy:up()):dunswe(0, 2, 1, 0, 2, 2):fill(frameBlock);
build.cuboid(compy):grohor():loop(platBlock):grohor():loop(platBlock);
build.cuboid(compy):off(S):dunswe(0, 0, 0, 1, 2, 2):erase();
 
-- Make monitors TODO:  Make monitor placement library
compy:up(2):off(W):putnbt(build.blockState(""computercraft:monitor_advanced"", ""state=rd,facing=south""), ""Width:3,Height:2,XIndex:0,YIndex:1"");
compy:up(2):putnbt(build.blockState(""computercraft:monitor_advanced"", ""state=lrd,facing=south""), ""Width:3,Height:2,XIndex:1,YIndex:1"");
compy:up(2):off(E):putnbt(build.blockState(""computercraft:monitor_advanced"", ""state=ld,facing=south""), ""Width:3,Height:2,XIndex:2,YIndex:1"");
compy:up():off(W):putnbt(build.blockState(""computercraft:monitor_advanced"", ""state=ru,facing=south""), ""Width:3,Height:2,XIndex:0,YIndex:0"");
compy:up():putnbt(build.blockState(""computercraft:monitor_advanced"", ""state=lru,facing=south""), ""Width:3,Height:2,XIndex:1,YIndex:0"");
compy:up():off(E):putnbt(build.blockState(""computercraft:monitor_advanced"", ""state=lu,facing=south""), ""Width:3,Height:2,XIndex:2,YIndex:0"");
compy:up(3):off(N):putnbt(build.blockState(""minecraft:repeating_command_block"", ""conditional=false""), ""Command:\""dt growpulse 0 -59 -11 8\"""");
compy:up(4):off(N):putnbt(build.blockState(""minecraft:lever"", ""face=floor""), """");

os.reboot();"
iGvbmrTq,Mitchell Math Game,aiyye,Lua,Saturday 27th of January 2024 01:14:49 PM CDT,"--Define Functions

local function RandomNumber()
    local rand = math.random(1,10)
    return rand
end

local function ChooseOp()
    local Operator = {""+"", ""-"", ""x"", ""/""}
    local rand = Operator[math.random(1,4)]
    return rand
end

--Define Variables

local Num1, Num2 = RandomNumber(), RandomNumber()
--HighScore = 
local LongStreak,Streak = 0, 0   
local Op = ChooseOp()
local New = true
local Answer = """"
local InitTime = os.clock()
local TimePassed = os.clock()
local Correct = """"
--Start Program

while TimePassed <= InitTime+61 do
    TimePassed = os.clock()

    if (Op == ""+"") then
        Correct = tostring(Num1+Num2)

    elseif (Op == ""-"") then
        Correct = tostring(Num1-Num2)

    elseif (Op == ""x"") then
        Correct = tostring(Num1*Num2)

    elseif (Op == ""/"") then
        if (New == true) then
            Num1 = Num1*math.random(1,3)
            Num2 = Num2*math.random(1,3)
        end
        if (Num1 < Num2) then
            local Div = Num1
            Num1 = Num2
            Num2 = Div
        end
        
        local Rem = Num1%Num2
        
        if (Rem ~= 0) then
            Num1 = Num1-Rem
        end
        
        Correct = tostring(Num1/Num2)
    end
    write(""What is ""..Num1.."" ""..Op.."" ""..Num2..""? \n"")
    Answer = read() 
 
    if (Answer == Correct) then
        New = true
        Streak = Streak+1
        print(""\nCorrect! (Streak: ""..Streak.."")"")
        Num1, Num2 = RandomNumber(), RandomNumber() 
        Op = ChooseOp()
        if (Streak > LongStreak) then
            LongStreak = Streak
        end 

    elseif (Answer == ""quit"") then
        TimePassed = InitTime+1.3

    else 
        print(""\nIncorrect!\n"")
        Streak = 0
        New = false
    end
end
print(""\nThanks for Playing!\n""..
""Your longest streak was: ""..LongStreak..""\n"")


-- if LongStreak > Highscore then
--     HighScore = LongStreak
--     write (""New Highscore! Enter your name: "")
--     Name = read()
-- end

-- HighScores = {}
-- print(""\nThanks for Playing!\n""..
-- ""Your longest streak was: ""..LongStreak..""\n"")
-- print(""Highscores: ""..Name1.."", ""..Name2.."", ""..Name3..""\n"") -- <-----highscore here
    
"
z9PiHTF8,setup,MaxHyper0310,Lua,Saturday 27th of January 2024 01:09:29 PM CDT,"-- Sets up the world.
commands.gamerule(""commandBlockOutput"", false);
commands.gamerule(""logAdminCommands"", false);
commands.gamerule(""doDaylightCycle"", false);
commands.gamerule(""doWeatherCycle"", false);
commands.gamerule(""randomTickSpeed"", 1000);
commands.time(""set"", 6000);
 
local files = {};
files[""N6HUr8fX""]=""blocks"";
files[""vdZ8QY0u""]=""makeChamber"";
files[""qFSvRqWv""]=""runChamber"";
files[""Y57ev2df""]=""build"";
 
for code, file in pairs(files) do
  shell.run(""pastebin"", ""get"", code, file);
end
 
--Create Startup File
local s = fs.open(""startup"", ""w"");
s.write(""shell.run(\""runChamber\"");"");
s.close();
 
--Create Config File
local c = fs.open(""config"", ""w"");
c.write(""height=30; --The height of the chamber structure\n"");
c.write(""codesPerRad=20; --Codes to generate per radius. 20 is recommended\n"");
c.close();
 
--Create Growing Chamber
shell.run(""makeChamber"");"
Y57ev2df,build,MaxHyper0310,Lua,Saturday 27th of January 2024 01:08:35 PM CDT,"----------------------------------------------------------------
-- MISC                                                     --
----------------------------------------------------------------

function stateTagString(state, tag)
  return state.block .. ""["" .. state.data .. ""]"" .. ""{"" .. tag .. ""}"";
end

function stateString(state)
  return stateTagString(state, """");
end

----------------------------------------------------------------
-- TABLES                                                     --
----------------------------------------------------------------

function tableDump(t)
  print(textutils.serialize(t));
end

function testValues(t)
  local test = {};
  for i,e in pairs(t) do
    test[e] = true;
  end
  return test;
end

function fif(cond, a, b)
  if cond then
    return a;
  else
    return b;
  end
end

----------------------------------------------------------------
-- ERASE OR CREATE                                            --
----------------------------------------------------------------

erase = false;

function setErase(should)
  erase = should;
end

----------------------------------------------------------------
-- SYNC or ASYNC
----------------------------------------------------------------

sync = false;

function setSync(should)
  sync = should;
end

asyncCalled = false;

function wait()
  os.pullEvent(""task_complete"");
end

function waitAsync()
  if asyncCalled then
	wait();
	asyncCalled = false;
  end
end

----------------------------------------------------------------
-- COORDINATES                                                --
----------------------------------------------------------------

Coord = {}
Coord.__index = Coord;

function Coord:new(x, y, z)
    local coord = {}             -- our new object
    setmetatable(coord, Coord)  -- make Account handle lookup
    -- initialize our object
    coord.x = x;
    coord.y = y;
    coord.z = z;
   return coord
end

function coord(...)
  local arg = {...}
  if #arg == 3 then return Coord:new(arg[1], arg[2], arg[3]); end
  return Coord:new(0, 0, 0);
end

function Coord:__tostring()
  return ""coord: ["" ..
    self.x .. "", "" ..
    self.y .. "", "" ..
    self.z .. ""]"";
end

function Coord:cpy()
  return Coord:new(self.x, self.y, self.z);
end

function Coord:scale(amount)
  return Coord:new(self.x * amount, self.y * amount, self.z * amount);
end

function Coord:print()
  print(self);
  return self;
end

function Coord:get()
  local x, y, z = commands.getBlockPosition();
  return Coord:new(x, y, z);
end

function Coord:add(c)
  return Coord:new(self.x + c.x, self.y + c.y, self.z + c.z);
end

function Coord:sub(c)
  return Coord:new(self.x - c.x, self.y - c.y, self.z - c.z);
end

function Coord:mul(c)
  return Coord:new(self.x * c.x, self.y * c.y, self.z * c.z);
end

function Coord:rot(qturns, a)
  qturns = qturns or 1;
  local c = self;
  if a ~= nil then c = c:sub(a); end
  qturns = qturns % 4;
  if qturns == 0 then c = Coord:new( c.x, c.y,  c.z); end;
  if qturns == 1 then c = Coord:new(-c.z, c.y,  c.x); end;
  if qturns == 2 then c = Coord:new(-c.x, c.y, -c.z); end;
  if qturns == 3 then c = Coord:new( c.z, c.y, -c.x); end;
  if a ~= nil then c = c:add(a); end
  return c;
end

function Coord:mir(axis, a)
  local c = self;
  if a ~= nil then c = c:sub(a); end
  if axis.x ~= 0 then c = Coord:new(-c.x,  c.y,  c.z); end
  if axis.y ~= 0 then c = Coord:new( c.x, -c.y,  c.z); end
  if axis.z ~= 0 then c = Coord:new( c.x,  c.y, -c.z); end
  if a ~= nil then c = c:add(a); end
  return c;
end

function Coord:up(amount)
  return self:add(Coord:new(0, amount or 1, 0));
end

function Coord:dwn(amount)
  amount = amount or 1;
  return self:up(-amount);
end

function Coord:trn(turns, mirAxis, pos)
  return self:rot(turns or 0):mir(mirAxis or coord()):add(pos or coord());
end

function Coord:eq(other)
  return self.x == other.x and self.y == other.y and self.z == other.z;
end

----------------------------------------------------------------
-- DIRECTIONS                                                 --
----------------------------------------------------------------

AXIS = {
 X = Coord:new(1, 0, 0),
 Y = Coord:new(0, 1, 0),
 Z = Coord:new(0, 0, 1)
};

DIR = {
  D = {x =  0, y = -1, z =  0, n = ""down"", a = 'y'},
  U = {x =  0, y =  1, z =  0, n = ""up"", a = 'y'},
  N = {x =  0, y =  0, z = -1, n = ""north"", a = 'z'},
  S = {x =  0, y =  0, z =  1, n = ""south"", a = 'z'},
  W = {x = -1, y =  0, z =  0, n = ""west"", a = 'x'},
  E = {x =  1, y =  0, z =  0, n = ""east"", a = 'x'}
};
DIR.HORIZONTALS = { DIR.N, DIR.S, DIR.W, DIR.E };
DIR.OPPOSITES = { [DIR.N] = DIR.S, [DIR.S] = DIR.N, [DIR.W] = DIR.E, [DIR.E] = DIR.W };
DIR.ROTATE = { [DIR.D] = DIR.D, [DIR.U] = DIR.U, [DIR.N] = DIR.E, [DIR.S] = DIR.W, [DIR.W] = DIR.N, [DIR.E] = DIR.S };

function dirName(dir)
  return dir.n;
end

function dirLetter(dir)
  return string.sub(dirName(dir), 1, 1);
end

function dirAxis(dir)
  return dir.a;
end

function dirCoord(dir)
  return coord(dir.x, dir.y, dir.z);
end

function dirOpposite(dir)
  return DIR.OPPOSITES[dir];
end

function dirOppositeTable(dir)
  local r = {};
  for k,v in pairs(dirs) do
    r[k] = dirOpposite(v);
  end
  return r;
end

function dirRotate(dir, qturns)
  qturns = qturns or 1;
  qturns = qturns % 4;
  for i = 0, qturns - 1 do
    dir = DIR.ROTATE[dir];
  end
  return dir;
end

function dirRotateTable(dirs, qturns)
  local r = {};
  for k,v in pairs(dirs) do
    r[k] = dirRotate(v, qturns);
  end
  return r;
end

function dirMirror(dir, axis)
  if dir.a == axis then return dirOpposite(dir); end
  return dir;
end

function dirMirrorTable(dir, axis)
  local r = {};
  for k,v in pairs(dir) do
    r[k] = dirMirror(v, axis);
  end
  return r;
end

function dirMap(turns)
  turns = turns or 0;
  return
    dirRotate(DIR.D, turns),
    dirRotate(DIR.U, turns),
    dirRotate(DIR.N, turns),
    dirRotate(DIR.S, turns),
    dirRotate(DIR.W, turns),
    dirRotate(DIR.E, turns);
end

function Coord:off(dir, amount)
  dir = dir or DIR.U;
  amount = amount or 1;
  return self:add(coord(dir.x * amount, dir.y * amount, dir.z * amount));
end

----------------------------------------------------------------
-- BLOCKSTATES                                                --
----------------------------------------------------------------

function blockState(block, data)
  local a = {};
  a.block = block;
  a.data = data or """";
  return a;
end

function makeStairs(block, fillBlock)
  local s = {};
  s.n = blockState(block, ""half=bottom,facing=north"");
  s.s = blockState(block, ""half=bottom,facing=south"");
  s.w = blockState(block, ""half=bottom,facing=west"");
  s.e = blockState(block, ""half=bottom,facing=east"");
  s.ni = blockState(block, ""half=top,facing=north"");
  s.si = blockState(block, ""half=top,facing=south"");
  s.wi = blockState(block, ""half=top,facing=west"");
  s.ei = blockState(block, ""half=top,facing=east"");
  s.f = fillBlock;
  return s;
end

function makeSolidStairs(block, fillBlock)
  local s = {};
  s.n = block;
  s.s = block;
  s.w = block;
  s.e = block;
  s.ni = block;
  s.si = block;
  s.wi = block;
  s.ei = block;
  s.f = fillBlock;
  return s;
end

function makeSlabs(block, variant)
  local s = {};
  s.t = blockState(block, ""half=top,variant=""..variant);
  s.b = blockState(block, ""half=bottom,variant=""..variant);
  return s;
end

air = blockState(""minecraft:air"");
stone = blockState(""minecraft:stone"", ""variant=stone"");
stonebrick = blockState(""minecraft:stonebrick"", ""variant=stonebrick"");
-- stoneknot = blockState(""cathedral:extras_block_stone"", ""variant=knot"");
-- stonepaver = blockState(""cathedral:extras_block_stone"", ""variant=paver"");
-- stonechisel = blockState(""chisel:stonebrick2"", ""variation=7"");
-- stonecircular = blockState(""chisel:stonebrick1"", ""variation=6"");
-- stonedent = blockState(""chisel:stonebrick"", ""variation=11"");
-- stonerosette = blockState(""minecraft:stonebrick"", ""variant=chiseled_stonebrick"");
-- stonewide = blockState(""chisel:stonebrick"", ""variation=3"");
-- stonerailing = blockState(""cathedral:cathedral_railing_various"", ""variant=stone"");
-- glass = blockState(""chisel:glass"", ""variation=2"");
dirt = blockState(""minecraft:dirt"");
water = blockState(""minecraft:water"");
-- lattice = blockState(""rustic:iron_lattice"", ""leaves=false"");
-- chain = blockState(""rustic:chain"");

-- barsornate = blockState(""chisel:ironpane"", ""variation=6"");

-- basaltpaver = blockState(""cathedral:basalt_block_carved"", ""variant=paver"");

-- cartographer = blockState(""mcf:cartographer"", """");
-- terraformer = blockState(""mcf:terraformer"", """");
-- sentinel = blockState(""mcf:sentinel"", """");

colFill = stone;
colBody = stoneknot;
colHead = stonerosette;
colFoot = stonepaver;
colBase = stonewide;
colCrwn = stonechisel;

tileOdd = stonepaver;
tileEven = basaltpaver;

railing = stonerailing;

-- roofing = makeStairs(""cathedral:roofing_shingles_red"", stonebrick);
stairs = makeStairs(""minecraft:stone_brick_stairs"", stonebrick);
airstairs = makeSolidStairs(air, air);
slab = makeSlabs(""minecraft:stone_slab"", ""stone_brick"");
smoothslab = makeSlabs(""minecraft:stone_slab"", ""stone"");


----------------------------------------------------------------
-- CUBOIDS                                                    --
----------------------------------------------------------------

function sort(v1, v2)
  if(v1 > v2) then return v2, v1; else return v1, v2; end
end

Cuboid = {}
Cuboid.__index = Cuboid;

function Cuboid:new(c1, c2)
  local cuboid = {};             -- our new object
  setmetatable(cuboid, Cuboid);  -- make handle lookup
  c1 = c1:cpy();
  c2 = c2:cpy();
  c1.x, c2.x = sort(c1.x, c2.x);
  c1.y, c2.y = sort(c1.y, c2.y);
  c1.z, c2.z = sort(c1.z, c2.z);
  cuboid[1] = c1;
  cuboid[2] = c2;
  return cuboid;
end

function cuboid(...)
  local arg = {...}
  if #arg == 1 then return Cuboid:new(arg[1], arg[1]); end
  if #arg == 2 then return Cuboid:new(arg[1], arg[2]); end
  if #arg == 6 then return Cuboid:newAll(arg[1], arg[2], arg[3], arg[4], arg[5], arg[6]); end
  return Cuboid:newAll(0, 0, 0, 0, 0, 0);
end

function Coord:cub()
  return cuboid(self);
end

function Cuboid:__tostring()
  return ""cuboid: ["" ..
    self[1].x .. "","" ..
    self[1].y .. "","" ..
    self[1].z .. "","" ..
    self[2].x .. "","" ..
    self[2].y .. "","" ..
    self[2].z .. ""]"";
end

function Cuboid:newAll(x1, y1, z1, x2, y2, z2)
  return Cuboid:new(Coord:new(x1, y1, z1), Coord:new(x2, y2, z2));
end

function Cuboid:print()
  print(self);
  return self;
end

function Cuboid:cpy()
  return Cuboid:new(self[1], self[2]);
end

function Cuboid:add(o)
  return Cuboid:new(self[1]:add(o), self[2]:add(o));
end

function Cuboid:sub(o)
  return Cuboid:new(self[1]:sub(o), self[2]:sub(o));
end

function Cuboid:rot(qturns, a)
  return Cuboid:new(self[1]:rot(qturns, a), self[2]:rot(qturns, a));
end

function Cuboid:mir(axis, a)
  return Cuboid:new(self[1]:mir(axis, a), self[2]:mir(axis, a));
end

function Cuboid:miriter(axis, a)
  result = {};
  result[0] = self:cpy();
  result[1] = mir(axis, a);
  return result;
end

function Cuboid:gro(dir, amount)
  amount = amount or 1;
  if dir == nil then
    return self:gro(coord(1, 1, 1), amount):gro(coord(-1, -1, -1), amount)
  end
  local c = self:cpy();
  if dir.x < 0 then c[1].x = c[1].x - amount; end
  if dir.y < 0 then c[1].y = c[1].y - amount; end
  if dir.z < 0 then c[1].z = c[1].z - amount; end
  if dir.x > 0 then c[2].x = c[2].x + amount; end
  if dir.y > 0 then c[2].y = c[2].y + amount; end
  if dir.z > 0 then c[2].z = c[2].z + amount; end
  return c;
end

function Cuboid:shr(dir, amount)
  amount = amount or 1;
  return self:gro(dir, -amount);
end

function Cuboid:off(dir, amount)
  dir = dir or DIR.U;
  amount = amount or 1;
  return self:add(coord(dir.x * amount, dir.y * amount, dir.z * amount));
end

function Cuboid:uni(c)
  return Cuboid:newAll(
    math.min(self[1].x, c[1].x),
    math.min(self[1].y, c[1].y),
    math.min(self[1].z, c[1].z),
    math.max(self[2].x, c[2].x),
    math.max(self[2].y, c[2].y),
    math.max(self[2].z, c[2].z)
  );
end

function Cuboid:fac(dir)
  local c = self:cpy();
  if dir.x > 0 then c = Cuboid:new(coord(c[2].x, c[1].y, c[1].z), c[2]); end
  if dir.y > 0 then c = Cuboid:new(coord(c[1].x, c[2].y, c[1].z), c[2]); end
  if dir.z > 0 then c = Cuboid:new(coord(c[1].x, c[1].y, c[2].z), c[2]); end
  if dir.x < 0 then c = Cuboid:new(c[1], coord(c[1].x, c[2].y, c[2].z)); end
  if dir.y < 0 then c = Cuboid:new(c[1], coord(c[2].x, c[1].y, c[2].z)); end
  if dir.z < 0 then c = Cuboid:new(c[1], coord(c[2].x, c[2].y, c[1].z)); end
  return c;
end

function Cuboid:cnr(c)
  return self:fac(Coord:new(-1, 0, -1):rot(c or 0));
end

function Cuboid:cnriter()
  corners = {};
  for c = 0,3 do
    corners[c] = self:cnr(c);
  end
  return pairs(corners);
end

function Cuboid:top()
  return self:fac(DIR.U);
end

function Cuboid:bot()
  return self:fac(DIR.D);
end

function Cuboid:up(amount)
  return self:off(DIR.U, amount);
end

function Cuboid:dwn(amount)
  return self:off(DIR.D, amount);
end

function Cuboid:trn(turns, mirAxis, pos)
  return self:rot(turns or 0):mir(mirAxis or coord()):add(pos or coord());
end

function Cuboid:dunswe(d, u, n, s, w, e, t)
  t = t or 0;
  return self
    :gro(dirRotate(DIR.D, t), d)
    :gro(dirRotate(DIR.U, t), u)
    :gro(dirRotate(DIR.N, t), n)
    :gro(dirRotate(DIR.S, t), s)
    :gro(dirRotate(DIR.W, t), w)
    :gro(dirRotate(DIR.E, t), e)
end

function Cuboid:grohor(amount)
  amount = amount or 1;
  return self:gro(coord(-1, 0, -1), amount):gro(coord(1, 0, 1), amount);
end

function Cuboid:shrhor(amount)
  amount = amount or 1;
  return self:grohor(-amount);
end

function Cuboid:mid()
  local x = math.floor((self[1].x + self[2].x) / 2);
  local y = math.floor((self[1].y + self[2].y) / 2);
  local z = math.floor((self[1].z + self[2].z) / 2);
  return Cuboid:newAll(x, y, z, x, y, z);
end

function Cuboid:pos()
  return self:mid()[1]:cpy();
end

function Cuboid:xlen()
  return self[2].x - self[1].x + 1;
end

function Cuboid:ylen()
  return self[2].y - self[1].y + 1;
end

function Cuboid:zlen()
  return self[2].z - self[1].z + 1;
end

function Cuboid:len(axis)
  if axis.x ~= 0 then return self:xlen(); end;
  if axis.y ~= 0 then return self:ylen(); end;
  if axis.z ~= 0 then return self:zlen(); end;
end

function Cuboid:vol()
  return self:xlen() * self:ylen() * self:zlen();
end

----------------------------------------------------------------
-- BLOCK SETTERS                                              --
----------------------------------------------------------------

function Coord:putnbt(state, tag)
  commands.setblock(self.x, self.y, self.z, stateTagString(state, tag), ""replace"");
  return self;
end

function Cuboid:fill(state)
  if state == nil then
    print(""fill attempt for nil state: "" .. tostring(self));
    state = air;
  end
  if erase then state = air; end
  
  if sync then
    com = commands;
  else
    com = commands.async;
	asyncCalled = true;
  end

  if self:vol() == 1 then
    com.setblock(self[1].x, self[1].y, self[1].z, stateString(state));
  else
    com.fill(self[1].x, self[1].y, self[1].z, self[2].x, self[2].y, self[2].z, stateString(state));
  end

  return self;
end

function Cuboid:dirt()
  return self:fill(dirt);
end

function Cuboid:erase()
  return self:fill(air);
end

function Cuboid:pillar(pBody, pFoot, pHead)
  self:fill(pBody or colBody);
  self:fac(DIR.D):fill(pFoot or colFoot);
  self:fac(DIR.U):fill(pHead or colHead);
  return self;
end

function Cuboid:checker()
  self:face(DIR.D):fill(tileOdd);
  for z = self[1].z, self[2].z do
    for x = self[1].x, self[2].x do
      if( ((x + z) % 2) == 0) then
        Coord:new(x, self[1].y, z):put(tileEven);
      end
    end
  end
  return self;
end

function Cuboid:fillcrn(state)
  for _,c in self:cnriter() do c:fill(state); end
  return self;
end

function Cuboid:loop(state, corners, sides)
  state = state or stone;
  sides = sides or {DIR.N, DIR.S, DIR.W, DIR.E};
  for _,side in pairs(sides) do
    local k = self:fac(side):fill(state);
    if(corners ~= nil) then k:fillcrn(corners); end
  end
  return self;
end

function Cuboid:fence(sides)
  sides = sides or {DIR.N, DIR.S, DIR.W, DIR.E};
  local work = self:bot();
  
  work:loop(stonerailing, stonerailing, sides);
  
  local xlen = work:len(AXIS.X) / 2;
  local zlen = work:len(AXIS.Z) / 2;
  local y = self[1].y + 1;
  
  for _,side in pairs(sides) do
    if(side == DIR.N) then
      for i = 0, xlen, 3 do
        coord(work[1].x + i, y, work[1].z):cub():fill(stonerailing);
        coord(work[2].x - i, y, work[1].z):cub():fill(stonerailing);
      end
    elseif(side == DIR.S) then
      for i = 0, xlen, 3 do
        coord(work[1].x + i, y, work[2].z):cub():fill(stonerailing);
        coord(work[2].x - i, y, work[2].z):cub():fill(stonerailing);
      end
    elseif(side == DIR.W) then
      for i = 0, zlen, 3 do
        coord(work[1].x, y, work[1].z + i):cub():fill(stonerailing);
        coord(work[1].x, y, work[2].z - i):cub():fill(stonerailing);
      end
    elseif(side == DIR.E) then
      for i = 0, zlen, 3 do
        coord(work[2].x, y, work[1].z + i):cub():fill(stonerailing);
        coord(work[2].x, y, work[2].z - i):cub():fill(stonerailing);
      end
    end
  end
  
end

function Cuboid:box(pFill, pBase, pCrwn, pBody, pFoot, pHead)
  self:fill(pFill or colFill); --Base Cuboid
  self:bot():loop(pBase or colBase); --Bottom Border
  self:top():loop(pCrwn or colCrwn); --Top Border
  for qturn = 0, 3 do
    self:cnr(qturn):pillar(pBody or colBody, pFoot or colFoot, pHead or colHead);
  end
  return self;
end

local rset2 = {
 { 0, 0 }, --1
 { 0, 0 }, --2
 { 0, 0, 1 }, --3
 { 0, 0, 0, 1 }, --4
 { 0, 0, 0, 1 }, --5
 { 0, 0, 0, 1, 1 }, --6
 { 0, 0, 0, 1, 1, 2 }, --7
 { 0, 0, 0, 1, 1, 2, 2 }, --8
 { 0, 0, 0, 0, 1, 1, 2 }, --9
 { 0, 0, 0, 0, 1, 1, 2, 3 }, --10
 { 0, 0, 0, 0, 1, 1, 2, 2, 3 }, --11
 { 0, 0, 0, 0, 1, 1, 2, 2, 3 }, --12
 { 0, 0, 0, 0, 1, 1, 1, 2, 3, 3 }, --13
 { 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 4 }, --14
 { 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 4 }, --15
 { 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4 } --16
}

function Coord:cylinder(block, r, h, fill)
  h = h - 1;
  local sel = rset2[r];
  if fill then
    for i,d in ipairs(sel) do
      local x = r - d;
      local y = i - 1;
      cuboid(self):off(DIR.N, y):dunswe(0, h, 0, 0, x, x):fill(block);
      cuboid(self):off(DIR.N, x):dunswe(0, h, 0, 0, y, y):fill(block);
      cuboid(self):off(DIR.S, y):dunswe(0, h, 0, 0, x, x):fill(block);
      cuboid(self):off(DIR.S, x):dunswe(0, h, 0, 0, y, y):fill(block);
    end
  else
    for i,d in ipairs(sel) do
      local x = r - d;
      local y = i - 1;
      self:add(coord( x, 0,-y)):cub():gro(DIR.U, h):fill(block);
      self:add(coord(-x, 0,-y)):cub():gro(DIR.U, h):fill(block);
      self:add(coord( x, 0, y)):cub():gro(DIR.U, h):fill(block);
      self:add(coord(-x, 0, y)):cub():gro(DIR.U, h):fill(block);
      self:add(coord( y, 0,-x)):cub():gro(DIR.U, h):fill(block);
      self:add(coord(-y, 0,-x)):cub():gro(DIR.U, h):fill(block);
      self:add(coord( y, 0, x)):cub():gro(DIR.U, h):fill(block);
      self:add(coord(-y, 0, x)):cub():gro(DIR.U, h):fill(block);
    end
  end
  return self;
end

function Coord:circle(block, r, fill)
  self:cylinder(block, r, 1, fill);
  return self;
end


function getStairs(dir, inv, stairsblocks)
  stairsblocks = stairsblocks or stairs;
  inv = inv or false;
  return stairsblocks[dirLetter(dir) .. fif(inv, ""i"", """")];
end

function Cuboid:roof(stairBlocks, sides)
  sides = sides or DIR.HORIZONTALS;
  local xlen = self:len(AXIS.X);
  local zlen = self:len(AXIS.Z);
  
  test = testValues(sides);
  
  if(test[DIR.W] and test[DIR.E]) then xlen = math.floor(xlen / 2); end
  if(test[DIR.N] and test[DIR.S]) then zlen = math.floor(zlen / 2); end
  
  local h = math.min(xlen, zlen);
  
  if(#sides == 1) then
    local lens = {x = xlen, z = zlen};
    local axis = sides[next(sides)].a;
    h = lens[axis];
  end
  local p = self:fac(DIR.D); --get bottom face

  for i = 1, h do
    for _,side in pairs(sides) do
      p:fac(side):fill(stairBlocks[dirLetter(dirOpposite(side))]);
      if p:len(side) > 1 then
        p = p:gro(side, -1);
      end
    end
    p = p:up(); --move up one block
  end
  
  return self;
end


function Cuboid:stairs(stairBlocks, sides, filler)
  sides = sides or DIR.HORIZONTALS;
  filler = filler or stairBlocks.f;
  
  local xlen = self:len(AXIS.X);
  local zlen = self:len(AXIS.Z);
  
  test = testValues(sides);
  
  if(test[DIR.W] and test[DIR.E]) then xlen = math.floor(xlen / 2); end
  if(test[DIR.N] and test[DIR.S]) then zlen = math.floor(zlen / 2); end

  local h = math.min(xlen, zlen);
  
  if(#sides == 1) then
    local lens = {x = xlen, z = zlen};
    local axis = sides[next(sides)].a;
    h = lens[axis];
  end
  
  local p = self:fac(DIR.D); --get bottom face

  for i = 1, h do
    for _,side in pairs(sides) do
      p:fill(filler);
      p:fac(side):fill(stairBlocks[dirLetter(dirOpposite(side))]);
      if p:len(side) > 1 then
        p = p:gro(side, -1);
      end
    end
    p = p:up(); --move up one block
  end
  return self;
end


function Cuboid:stairsinv(stairBlocks, sides, filler)
  sides = sides or DIR.HORIZONTALS;
  filler = filler or stairBlocks.f;

  local xlen = self:len(AXIS.X);
  local zlen = self:len(AXIS.Z);
  
  test = testValues(sides);
  
  if(test[DIR.W] and test[DIR.E]) then xlen = math.floor(xlen / 2); end
  if(test[DIR.N] and test[DIR.S]) then zlen = math.floor(zlen / 2); end
  
  local h = math.min(xlen, zlen);

  if(#sides == 1) then
    local lens = {x = xlen, z = zlen};
    local axis = sides[next(sides)].a;
    h = lens[axis];
  end
  
  local p = self:fac(DIR.U); --get top face

  for i = 1, h do
    for _,side in pairs(sides) do
      if filler ~= 0 then
        p:fill(filler);
      end
      p:fac(side):fill(stairBlocks[dirLetter(dirOpposite(side)) .. 'i']);
      if p:len(side) > 1 then
        p = p:gro(side, -1);
      end
    end
    p = p:dwn(); --move down one block
  end
  return self;
end

function Coord:lamp(dir)
  return self:cub():fill(blockState(""rustic:iron_lantern"", ""facing="" .. dir.n));
end

function Coord:lamppost(h)
  h = h or 3;
  self:cub():gro(DIR.U, h - 1):fill(lattice):top()[1]:lamp(DIR.U);
end"
qFSvRqWv,runChamber,MaxHyper0310,Lua,Saturday 27th of January 2024 01:07:55 PM CDT,"os.loadAPI(""build"");
 
-- API Aliases
 
function dirMap(turns) return build.dirMap(turns); end
function fif(cond, a, b) return build.fif(cond, a, b); end
 
dofile(""config"");
dofile(""blocks"");
 
local D, U, N, S, W, E = dirMap(0);
 
local compy = build.Coord:get();
local center = compy:off(N, 8 + 3):up();
local lockPos = compy:off(N):up();
 
grow = false;
local radius = 8;
count = codesPerRad;
 
local currModIdx = 1;
local currSpeciesIdx = 1;
 
local arrowL = string.char(17);
local arrowR = string.char(16);
 
monitor = peripheral.find(""monitor"");
monitor.setBackgroundColor(colors.black);
monitor.clear();
 
mainTimer = 0;
 
function startTimer()
  mainTimer = os.startTimer(0.5);
end
 
function stopTimer()
  os.cancelTimer(mainTimer);
end
 
function waitOn(func)
  parallel.waitForAll(func);
end
 
function pad(str, len, chr)
  chr = chr or "" "";
  local miss = len - string.len(str);
  if miss > 0 then
    str = str .. string.rep(chr, miss);
  end
  if miss < 0 then
    str = string.sub(str, 1, len);
  end
  return str;
end
 
function padNum(num, len, chr)
  chr = chr or "" "";
  local str = tonumber(num);
  local miss = len - string.len(str);
  if miss > 0 then
    str = string.rep(chr, miss) .. str;
  end
  return str;
end
 
function sound(snd)
  commands.playsound(snd, ""block"", ""@a"", compy.x, compy.y, compy.z);
end
 
function clicksound()
  sound(""block.stone_button.click_on"");
end
 
function getKeys(tab)
  local keyset={}
  for k,v in pairs(tab) do
    keyset[#keyset+1]=k
  end
  return keyset;
end
 
function getSpeciesList()
  local _, list = commands.dt(""registry"", ""species"", ""list"", true)
  return list;
end
 
local trees = {};
for k, v in pairs(getSpeciesList()) do
  local mod, species = string.match(v, ""([^,]+):([^,]+)"");
  if trees[mod] == nil then
    trees[mod] = {};
  end
  local s = trees[mod];
  s[#s+1]=species;
end
 
local mods = getKeys(trees);
table.sort(mods);
 
for k, v in pairs(trees) do
  table.sort(v);
end
 
 
----------------------------------------------------------------
-- BUTTONS                                                    --
----------------------------------------------------------------
 
Button = {}
Button.__index = Button;
 
function Button:new(x, y, w, text, color)
  color = color or colors.black;
  local button = {};             -- our new object
  setmetatable(button, Button);  -- make handle lookup
  button.coords = build.Coord:new(x, y, 0);
  button.width = w;
  button.text = text;
  button.color = color;
  button.monitor = monitor;
  return button;
end
 
function Button:setMonitor(m)
  self.monitor = m;
  return self;
end
 
function Button:draw()
  mon = self.monitor;
  mon.setCursorPos(self.coords.x, self.coords.y);
  -- mon.clearLine();
  mon.setBackgroundColor(self.color);
  -- mon.clearLine();
  mon.write(pad(self.text, self.width, "" ""));
  return self;
end
 
function Button:setText(text)
  if text ~= self.text then
    self.text = text;
    self:draw();
  end
  return self;
end
 
function Button:setColor(color)
  self.color = color;
  self:draw();
  return self;
end
 
function Button:click(x, y)
  if self:isInside(x, y) then
    if self.action ~= nil then 
      clicksound();
      self.action(self, x, y);
    end
  end
end
 
function Button:isInside(x, y)
  return y == self.coords.y and x >= self.coords.x and x < self.coords.x + self.width;
end
 
function Button:setAction(action)
  self.action = action;
  return self;
end
 
function open() waitOn(
  function ()
    sound(""block.piston.extend"");
    if radius <= 8 and radius >= 2 then
      center:up():cylinder(air, radius, height);
    end
    build.waitAsync();
  end);
end
 
function close() waitOn(
  function ()
    sound(""block.piston.contract"");
    if radius <= 8 and radius >= 2 then
--[[      center:up():cylinder(waterBlock, radius-1, waterHeight, true); ]]
      center:up():cylinder(wallBlock, radius, height);
    end
    build.waitAsync();
  end);
end
 
function kill() waitOn(
  function ()
    commands.dt(""killtree"", center.x, center.y, center.z);
    center:up(1):cub():erase();-- In the case of a sapling
    center:cub():fill(dirt); -- Place dirt over the rooty soil just in case
    commands.kill(""@e[type=item]""); -- Gets rid of dropped seeds
  end);
end
 
function plant() 
  commands.dt(""setcoordxor"", math.random(0, 65535));
  commands.dt(""settree"", center.x, center.y, center.z, tree, ""P""); -- synchronous
  setFertility(15); -- synchronous
end
 
function purge() waitOn(
  function ()
    center:up():cub():grohor(radius):gro(U, height):erase();
    build.waitAsync();
  end);
end
 
function push()
  if file_exists(treeFilename()) then
    print(""pastebin: "" .. treeFilename());
    shell.run(""pastebin"", ""put"", treeFilename());
  else
    print(""error: "" .. treeFilename() .. "" not found"");
  end
end
 
function setRadius(rad)
  open();
 
  if rad >= 8 then
    rad = 8;
  elseif rad <= 2 then
    rad = 2;
  end
 
  if rad ~= radius then
    radius = rad;
    count = codesPerRad;
    countButton:setCount(count);
    radiusButton:setRadius(radius);
  end
 
end
 
function radiusInc()
  setRadius(radius + 1);
end
 
function radiusDec()
  setRadius(radius - 1);
end
 
 
function treeFilename()
  local mod = mods[currModIdx];
  local spc = trees[mod][currSpeciesIdx];
  return mod .. ""/"" .. spc .. "".txt"";
end
 
 
openButton   = Button:new(2, 2, 7, ""[OPEN ]"", colors.purple):setAction( open );
closeButton  = Button:new(2, 3, 7, ""[CLOSE]"", colors.blue):setAction( close );
plantButton  = Button:new(2, 4, 7, ""[PLANT]"", colors.lime):setAction( plant );
killButton   = Button:new(2, 5, 7, ""[KILL ]"", colors.orange):setAction( function() kill(); grow = false; end );
purgeButton  = Button:new(2, 6, 7, ""[PURGE]"", colors.brown):setAction( purge );
modButton    = Button:new(2, 8, 27, ""       "", colors.gray);
treeButton   = Button:new(2, 9, 27, ""      "", colors.gray);
radiusButton = Button:new(12, 2, 7, ""       "", colors.gray);
growButton   = Button:new(12, 3, 7, ""[START]"", colors.green);
soilButton   = Button:new(12, 4, 11, ""       "", colors.gray);
countButton  = Button:new(12, 5, 11, ""       "", colors.gray);
pushButton  = Button:new(12, 6, 7, ""[PUSH ]"", colors.cyan):setAction( push );
 
growButton.stop = function(b) b:setColor(colors.green); b:setText(""[START]""); grow = false; end
growButton.start = function(b) b:setColor(colors.red); b:setText(""[STOP ]"") grow = true; close(); end
growButton:setAction( function(b) if grow then b:stop(); else b:start(); end; end);
 
countButton.setCount = function(b, c) b:setText(""REMAIN:"" .. padNum(c, 4)); end;
countButton:setAction( function(b) count = codesPerRad; b:setCount(count); end );
countButton:setCount(count);
 
-- Radius Button Setup
radiusButton.setRadius = function(b, r) b:setText(arrowL .. arrowR .. "" "" .. ""R:"" .. r); end;
radiusButton.click = 
  function(b, x, y)
    if b:isInside(x, y) then
      x = x - b.coords.x + 1;
      if x == 1 then
        clicksound();
        radiusDec();
      elseif x == 2 then
        clicksound();
        radiusInc();
      end
    end
  end;
radiusButton:setRadius(radius);
 
function updateTree()
  local mod = mods[currModIdx];
  local spc = trees[mod][currSpeciesIdx];
  local newTree = mod .. "":"" .. spc;
  if newTree ~= tree then
    tree = newTree;
    kill();
  end
end
 
-- Tree Button Setup
 
treeButton.setIdx = 
  function(b, idx)
    local arr = trees[mods[currModIdx]];
    idx = ((idx - 1) % #arr) + 1;
    b:setText(arrowL .. arrowR .. "" "" .. arr[idx]);
    currSpeciesIdx = idx;
    updateTree();
  end
 
treeButton.click = 
  function(b, x, y)
    if b:isInside(x, y) then
      x = x - b.coords.x + 1;
      if x == 1 then
        clicksound();
        b:setIdx(currSpeciesIdx - 1);
      elseif x == 2 then
        clicksound();
        b:setIdx(currSpeciesIdx + 1);
      end
    end
  end;
treeButton:setIdx(1);
 
 
-- Mod Button Setup
 
modButton.setIdx = 
  function(b, idx)
    local arr = mods;
    idx = ((idx - 1) % #arr) + 1;
    b:setText(arrowL .. arrowR .. "" "" .. arr[idx]);
    currModIdx = idx;
    treeButton:setIdx(1);
  end
 
modButton.click = 
  function(b, x, y)
    if b:isInside(x, y) then
      x = x - b.coords.x + 1;
      if x == 1 then
        clicksound();
        b:setIdx(currModIdx - 1);
      elseif x == 2 then
        clicksound();
        b:setIdx(currModIdx + 1);
      end
    end
  end;
modButton:setIdx(1);
 
 
-- fertility Button Setup
 
soilButton.setFertility = 
  function(b, life)
    local text;
    if life ~= nil and life >= 0 then
      text = padNum(life, 2, ""0"") .. ""/15"";
    else
      text = ""--/--"";
    end
    soilButton:setText(""SOIL: "" .. text);
  end
 
 
-- All Buttons
allButtons = { openButton, closeButton, growButton, plantButton, killButton, purgeButton, countButton, modButton, treeButton, radiusButton, soilButton, pushButton };
 
function drawScreen()
  for i, v in ipairs(allButtons) do
    v:draw();
  end
end
 
function clickScreen(x, y)
  for i, v in ipairs(allButtons) do
    v:click(x, y);
  end
end
 
drawScreen();
 
indicator = false;
 
function clearVines()
  -- Do nothing for now
end
 
function getFertility()
  pass, val = commands.dt(""fertility"", center.x, center.y, center.z, true);
  if (pass) then
    return tonumber(val[1]);
  end
  return -1;
end
 
function setFertility(life)
  pass, val = commands.dt(""fertility"", center.x, center.y, center.z, life);
end
 
function getCode()
  pass, val = commands.dt(""gettree"", center.x, center.y, center.z, true);
  if (pass) then
    return val[1];
  end
  return nil;
end

function getRootsCode()
  pass, val = commands.dt(""getroots"", center.x, center.y, center.z, true);
  if (pass) then
    return val[1];
  end
  return nil;
end
 
function storeCodeHttp(tree, code, radius)
  code = string.gsub(code, ""+"", ""%%2b"");
  http.request(""http://127.0.0.1/trees/trees.php?"".. ""tree=""..tree..""&code=""..code..""&radius=""..radius, nil);  
end

function storeRootsCodeHttp(tree, code, radius)
  code = string.gsub(code, ""+"", ""%%2b"");
  http.request(""http://127.0.0.1/trees/trees.php?"".. ""tree=""..tree..""&code=""..code..""&radius=""..radius..""&roots=true"", nil);  
end
 
function storeCodeConsole(tree, code, radius)
  print(tree);
  print(radius .. "":"" .. code);
  print(""----------------------"");
end

function storeRootsCodeConsole(tree, code, radius)
  print(tree);
  print(""*"" .. radius .. "":"" .. code);
  print(""----------------------"");
end
 
function storeCodeFile(tree, code, radius)
  local s = fs.open(treeFilename(), ""a"");
  s.write(radius .. "":"" .. code .. ""\n"");
  s.close();
end

function storeRootsCodeFile(tree, code, radius)
  local s = fs.open(treeFilename(), ""a"");
  s.write(""*"" .. radius .. "":"" .. code .. ""\n"");
  s.close();
end
 
function storeCode(tree, code, radius)
  -- storeCodeHttp(tree, code, radius);
  storeCodeConsole(tree, code, radius);
  storeCodeFile(tree, code, radius);
end

function storeRootsCode(tree, code, radius)
  -- storeRootsCodeHttp(tree, code, radius);
  storeRootsCodeConsole(tree, code, radius);
  storeRootsCodeFile(tree, code, radius);
end
 
function harvest()
  code = sortCode(getCode());
  rootsCode = sortCode(getRootsCode());
  kill();
  sound(""entity.item.pickup"");
  
  storeCode(tree, code, radius);
  if rootsCode ~= nil and rootsCode ~= '' then
	storeRootsCode(tree, rootsCode, radius);
  end
end

function sortCode(code)
  local codes = {};
  codes[1] = code;
 
  for i = 1,3 do
    local _, c = commands.dt(""rotatejocode"", code, i);
    codes[i + 1] = c[1];
  end
 
  table.sort(codes);
  return codes[1];
end
 
function file_exists(name)
   local f=io.open(name,""r"")
   if f ~= nil then io.close(f) return true else return false end
end
 
function finishHarvest()
  growButton:stop();
end
 
function onTimerEvent()
  local fertility = getFertility();
  soilButton:setFertility(fertility);
  if (fertility <= 0 and grow == true) then
 
    if(fertility == 0) then
      harvest();
      count = count - 1;
      if count <= 0 then
        if radius > 2 then
          radiusDec();
          close();
        else
          finishHarvest(); -- We're done
        end
      end
      countButton:setCount(count);
    end
 
    if grow then 
      plant();
    end
 
  end
end
 
spinner = 0;
spinnerSet = { 129, 130, 136, 259, 144, 132 };
 
function parallelTimer()
  startTimer();
  while true do
    event = os.pullEvent(""timer"");
    onTimerEvent();
    monitor.setCursorPos(28, 2);
    spinner = (spinner + 1) % 6;
    s = spinnerSet[spinner + 1];
    if s > 200 then
      s = s - 100;
      monitor.setBackgroundColor(colors.orange);
      monitor.setTextColor(colors.gray);
    else
      monitor.setBackgroundColor(colors.gray);
      monitor.setTextColor(colors.orange);
    end
    monitor.write(string.char(s));
    monitor.setTextColor(colors.white);
    startTimer();
  end
end
 
function parallelClick()
  while true do
    event, par1, xPos, yPos = os.pullEvent(""monitor_touch"");
    clickScreen(xPos, yPos);
  end
end
 
purge();
close();
parallel.waitForAll(parallelTimer, parallelClick);"
WzEGgjdk,csxcs,finagarut22,JavaScript,Saturday 27th of January 2024 12:57:04 PM CDT,"https://gamma.app/public/Assistir-Nosso-Lar-2-Os-Mensageiros-Online-Dublado-e-Legendado-Gr-onh8g4yqbpvfuo3
https://gamma.app/public/Assistir-Nosso-Lar-2-Os-Mensageiros-Filme-Completo-Dublado-Em-Por-ehfyzgk2zhq2bd6
https://gamma.app/public/Nosso-Lar-2-Os-Mensageiros-PT-2024-Filme-Completo-Dublado-e-legen-pkqtotshvfzk8vf
https://gamma.app/public/Assistir-Nosso-Lar-2-Os-Mensageiros-Online-Dublado-e-Legendado-am8sux7qvoh4xkr
https://www.taskade.com/p/assista-nosso-lar-2-os-mensageiros-pt-2024-online-em-portugues-01HN5VQ4SR7G6JP78BYK2374N5
https://www.taskade.com/p/assistir-nosso-lar-2-os-mensageiros-filme-completo-2024-dublado-online-gratis-01HN5W0Z9DPNBWNV6R6DGYPEC6
https://www.taskade.com/p/onde-assistir-nosso-lar-2-os-mensageiros-2024-filme-dublado-online-gratis-01HN5WA0Q8H3NK8BVK0WGVTQ8Z
https://www.taskade.com/p/assistir-nosso-lar-2-os-mensageiros-2024-online-em-portugues-01HN5WH4GPF2JBP6C6D9VE1Z8J
https://groups.google.com/g/assistir-nosso-lar-2-os-mensageiros-hd-2024-filme/c/Azq6gLFjqrY
https://groups.google.com/g/nosso-lar-2-os-mensageiros-2024-filme-completo-dublado-em-hd/c/yWopReQvmWI
https://groups.google.com/g/assistir-nosso-lar-2-os-mensageiros-2024-filme-dublado-nline/c/u1LxQ1YGeuI
https://groups.google.com/g/assista-nosso-lar-2-os-mensageiros-2024-filme-completo/c/qR-yYqkf3ts
https://app.eventcaddy.com/events/assista-nosso-lar-2-os-mensageiros-pt-2024-filme-completo-dublado-e-legendado-em-portugues
https://app.eventcaddy.com/events/assistir-nosso-lar-2-os-mensageiros-pt-2024-filme-completo-dublado-e-legendado-em-portugues
https://app.eventcaddy.com/events/nosso-lar-2-os-mensageiros-filme-completo-dublado-e-legendado-2024-hd
https://app.eventcaddy.com/events/assista-hd-nosso-lar-2-os-mensageiros-filme-completo-online
https://app.eventcaddy.com/events/xem-phim-qu-c-u-2024-vi-tsub-full-hd-1080p
https://app.eventcaddy.com/events/full-hd-xem-phim-qu-c-u-2023-vi-tsub-thuy-t-minh-13
https://app.eventcaddy.com/events/full-hd-vi-tsub-xem-phim-qu-c-u-2023-thuy-t-minh
https://app.eventcaddy.com/events/xem-phim-vi-tsub-qu-c-u-thuyet-minh-2023
https://app.eventcaddy.com/events/qu-c-u-x-2023-vi-tsub-thuy-t-minh
https://m.facebook.com/media/set/?set=a.122157478376022056&type=3
https://m.facebook.com/media/set/?set=a.122153818448019632&type=3
https://m.facebook.com/media/set/?set=a.122173783388005590&type=3
https://m.facebook.com/media/set/?set=a.122183920898006910&type=3
https://m.facebook.com/media/set/?set=a.122168275412008566&type=3
https://m.facebook.com/media/set/?set=a.122162625638011684&type=3
https://m.facebook.com/media/set/?set=a.122164940144017255&type=3
https://m.facebook.com/media/set/?set=a.122159521784016215&type=3
https://m.facebook.com/media/set/?set=a.122153990384019864&type=3
https://forums.selfhostedserver.com/topic/27903/vior
https://open.firstory.me/user/clrwf0c61025401y4fsmb8mv0
https://smithonline.smith.edu/mod/forum/discuss.php?d=82702
https://pastelink.net/j2mpcimn
https://vivivian826.copiny.com/idea/details/id/155494
https://hackmd.io/@finagarut22/r1_QCaz5a
https://rentry.co/79ap9xiz
https://www.artstation.com/vianvivi1/profile
https://profile.hatena.ne.jp/aqtanmomon/profile
https://argueanything.com/thread/vior/
https://www.taskade.com/p/vior-01HN63W0KJY2WDGDMZ3YNPS4XX
https://wandering.flarum.cloud/d/39718-vior
https://muckrack.com/vivi-vian826/bio
https://yamcode.com/finagarut22-109
https://ideone.com/LPJWMP
https://pasteio.com/xUsgCaVv9gRa
https://ide.geeksforgeeks.org/online-c-compiler/f48687fa-f6ce-4d90-a2dc-3446c7cc159a
https://www.pastery.net/xnhccw/
https://paste.toolforge.org/view/9fc300b3
https://pastebin.freeswitch.org/view/e5cdf96a
https://paste.feed-the-beast.com/view/9bdd3fac
https://onecompiler.com/java/422py7keb
https://jsfiddle.net/ghnf5b70/
https://ctxt.io/2/AABwSuQUFg
https://paste.myconan.net/489898
https://bitbin.it/dRCyIWQV/
https://paste.firnsy.com/paste/nzKRtTtRUst"
rzBHtur2,Untitled,kopyl,Python,Saturday 27th of January 2024 12:52:03 PM CDT,"root@55cb7f729062:/workspace# accelerate launch test.py
The following values were not passed to `accelerate launch` and had defaults used instead:
        `--num_processes` was set to a value of `2`
                More than one GPU was found, enabling multi-GPU training.
                If this was unintended please pass in `--num_processes=1`.
        `--num_machines` was set to a value of `1`
        `--mixed_precision` was set to a value of `'no'`
        `--dynamo_backend` was set to a value of `'no'`
To avoid this warning pass in values for each of the problematic parameters or run `accelerate config`.
Detected kernel version 5.4.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
<class 'datasets.arrow_dataset.Dataset'>
<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
        worker 0 saving sub-shard to /home/.cache/e64ff124c0f0304e_subshard_0.cache
        worker 1 saving sub-shard to /home/.cache/e64ff124c0f0304e_subshard_1.cache
Map: 100%|█████████████████████████████████████████████████████████████████| 417/417 [00:10<00:00, 38.01 examples/s]
Traceback (most recent call last):
  File ""/workspace/test.py"", line 274, in <module>
    ds = dataset_map_multi_worker(train_dataset, compute_embeddings_fn, batched=True, batch_size=4)
  File ""/workspace/test.py"", line 257, in dataset_map_multi_worker
    ds_shard.save_to_disk(ds_shard_filepaths[rank])
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 1496, in save_to_disk
    raise TypeError(
TypeError: Object of type function is not JSON serializable
The format kwargs must be JSON serializable, but key 'transform' isn't.
Map: 100%|█████████████████████████████████████████████████████████████████| 416/416 [00:11<00:00, 36.35 examples/s]
Traceback (most recent call last):
  File ""/workspace/test.py"", line 274, in <module>
    ds = dataset_map_multi_worker(train_dataset, compute_embeddings_fn, batched=True, batch_size=4)
  File ""/workspace/test.py"", line 257, in dataset_map_multi_worker
    ds_shard.save_to_disk(ds_shard_filepaths[rank])
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 1496, in save_to_disk
    raise TypeError(
TypeError: Object of type function is not JSON serializable
The format kwargs must be JSON serializable, but key 'transform' isn't.
[2024-01-27 18:51:21,243] torch.distributed.elastic.multiprocessing.api: [ERROR] failed (exitcode: 1) local_rank: 0 (pid: 14059) of binary: /usr/bin/python
Traceback (most recent call last):
  File ""/usr/local/bin/accelerate"", line 8, in <module>
    sys.exit(main())
  File ""/usr/local/lib/python3.10/dist-packages/accelerate/commands/accelerate_cli.py"", line 47, in main
    args.func(args)
  File ""/usr/local/lib/python3.10/dist-packages/accelerate/commands/launch.py"", line 1014, in launch_command
    multi_gpu_launcher(args)
  File ""/usr/local/lib/python3.10/dist-packages/accelerate/commands/launch.py"", line 672, in multi_gpu_launcher
    distrib_run.run(args)
  File ""/usr/local/lib/python3.10/dist-packages/torch/distributed/run.py"", line 797, in run
    elastic_launch(
  File ""/usr/local/lib/python3.10/dist-packages/torch/distributed/launcher/api.py"", line 134, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File ""/usr/local/lib/python3.10/dist-packages/torch/distributed/launcher/api.py"", line 264, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
test.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2024-01-27_18:51:21
  host      : 55cb7f729062
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 14060)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2024-01-27_18:51:21
  host      : 55cb7f729062
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 14059)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================"
yEmr7M6T,Recurion list reverse with cheat,informaticage,C++,Saturday 27th of January 2024 12:51:42 PM CDT,"#include <iostream>

struct Node {
  int value;
  int next;
};

void print_list(Node list[], int index = 0) {
  if(index == -1) return;
  std::cout << list[index].value << "" "";
  print_list(list, list[index].next);
}

int store_list(Node list[], int copy[], int index = 0, int iteration = 0) {
  if(index == -1) return iteration;
  copy[iteration] = list[index].value;
  return store_list(list, copy, list[index].next, iteration + 1);
}

void write_on_list(Node list[], int copy[], int index, int iteration) {
  if(index == -1 || iteration == -1) return;
  list[index].value = copy[iteration - 1];
  write_on_list(list, copy, list[index].next, iteration - 1);
}

void reverse_list(Node list[], int length) {
  int* copy = new int[length];
  int real_len = store_list(list, copy);
  write_on_list(list, copy, 0, real_len);
}

int main(void) {
  Node list[5] = {
      {1, 4}, { 9, -1 }, {3, 1}, {}, {5, 2},
  };

  print_list(list);
  reverse_list(list, 5);
  print_list(list);
  return 0;
}"
XxfJiiP4,DrawWireRectangle,Hietakissa,C#,Saturday 27th of January 2024 11:40:11 AM CDT,"void DrawWireRectangle(Vector2 pos, Vector2 size, Color color, float duration = 0f)
{
    Debug.DrawRay(pos + (Vector2.down + Vector2.left) * size * 0.5f, Vector2.up * size.y, color, duration);
    Debug.DrawRay(pos + (Vector2.down + Vector2.left) * size * 0.5f, Vector2.right * size.x, color, duration);
    Debug.DrawRay(pos + (Vector2.up + Vector2.right) * size * 0.5f, Vector2.down * size.y, color, duration);
    Debug.DrawRay(pos + (Vector2.up + Vector2.right) * size * 0.5f, Vector2.left * size.x, color, duration);
}"
jkhpemRM,heapsort.c,Aravind_reddy10,C,Saturday 27th of January 2024 11:32:47 AM CDT,"#include <stdio.h>
#include <stdlib.h>
void heapsort(int *arr,int n);
void heapfy(int *arr,int n,int i);
void swap(int *a,int *b){
    int temp=*a;
    *a=*b;
    *b=temp;
}
void heapsort(int arr[],int n)
{
    for(int i=n/2-1;i>=0;i--){
        heapfy(arr,n,i);
    }
    for(int i=n-1;i>=0;i--){
        swap(&arr[0],&arr[i]);
        heapfy(arr,i,0);
    }
}
void heapfy(int arr[],int n,int i)
{
    int largest=i;
    int left=2*i+1;
    int right=2*i+2;
    while(left<n&&arr[left]>arr[largest])
    {
        largest=left;
    }
    while(right<n&&arr[right]>arr[largest])
    {
        largest=right;
    }
    if(largest!=i)
    {
        swap(&arr[largest],&arr[i]);
        heapfy(arr,n,largest);
    }
}
int main(){
    int n;
    printf(""Enter size of the array:"");
    scanf(""%d"",&n);
    int arr[n],i;
    printf(""\nEnter array values:"");
    for(i=0;i<n;i++)
    {
        scanf(""%d"",&arr[i]);
    }
    heapsort(arr,n);
    for(i=0;i<n;i++){
        printf(""%d "",arr[i]);
    }
    return 0;
}"
JjbXxMUk,Zombie Virus Outbreak,Junaid_Hossain,C++,Saturday 27th of January 2024 11:32:17 AM CDT,"#include<bits/stdc++.h>
#define nl '\n'
using namespace std;

int main(){
    long int t; cin>>t;
    while(t--){
        long int n; cin>>n;
        long int arr[n];
        long int newzom=0, ans=0;

        for(long int i=0; i<n; i++){
            cin>>arr[i];
        }

        for(long int i=0; i<n; i++){
            if(arr[i]%3==0 && arr[i]%5==0){
                newzom+=arr[i];
                ans+=arr[i];
            } else {
                if(arr[i]>=newzom){
                    ans+=newzom;
                    newzom=0;
                } else {
                    ans+=arr[i];
                    newzom-=arr[i];
                }
            }


        }

        cout<<ans<<nl;

    }
}
"
YijspwQK,Untitled,kopyl,Python,Saturday 27th of January 2024 11:21:57 AM CDT,"root@55cb7f729062:/workspace# ls
HF_HOME  Untitled.ipynb  __pycache__  dataset-cache  test.py  train_notebook_sdxl_mapping_saving.ipynb
root@55cb7f729062:/workspace# python
Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from multiprocess import set_start_method
>>> set_start_method(""spawn"")
>>> from test import map_train
<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
>>> map_train()
Map (num_proc=2):   0%|                                                              | 0/833 [00:00<?, ? examples/s]<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
0
Map (num_proc=2):   0%|                                                    | 2/833 [00:21<2:29:09, 10.77s/ examples]0
0
Map (num_proc=2):   1%|▍                                                     | 6/833 [00:21<38:46,  2.81s/ examples]0
0
0
Map (num_proc=2):   1%|▊                                                    | 12/833 [00:21<15:05,  1.10s/ examples]0
0
Map (num_proc=2):   2%|█                                                    | 16/833 [00:21<09:37,  1.41 examples/s]0
0
Map (num_proc=2):   2%|█▎                                                   | 20/833 [00:22<06:26,  2.10 examples/s]0
0
Map (num_proc=2):   3%|█▌                                                   | 24/833 [00:22<04:27,  3.03 examples/s]0
0
<class 'datasets.arrow_dataset.Dataset'>
Map (num_proc=2):   3%|█▊                                                   | 28/833 [00:22<03:09,  4.26 examples/s]0
0
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
Map (num_proc=2):   4%|██                                                   | 32/833 [00:22<02:17,  5.81 examples/s]0
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
0
Map (num_proc=2):   4%|██▎                                                  | 36/833 [00:22<01:43,  7.68 examples/s]0
0
Map (num_proc=2):   5%|██▌                                                  | 40/833 [00:22<01:20,  9.81 examples/s]0
0
Map (num_proc=2):   5%|██▊                                                  | 44/833 [00:22<01:04, 12.21 examples/s]0
0
Map (num_proc=2):   6%|███                                                  | 48/833 [00:23<00:56, 13.88 examples/s]0
0
Map (num_proc=2):   6%|███▎                                                 | 52/833 [00:23<00:46, 16.93 examples/s]0
0
Map (num_proc=2):   7%|███▌                                                 | 56/833 [00:23<00:39, 19.65 examples/s]0
0
Map (num_proc=2):   7%|███▊                                                 | 60/833 [00:23<00:34, 22.67 examples/s]0
0
Map (num_proc=2):   8%|████                                                 | 64/833 [00:23<00:32, 23.69 examples/s]0
0
Map (num_proc=2):   8%|████▎                                                | 68/833 [00:23<00:31, 24.54 examples/s]0
0
Map (num_proc=2):   9%|████▌                                                | 72/833 [00:24<00:52, 14.40 examples/s]0
0
Map (num_proc=2):   9%|████▊                                                | 76/833 [00:24<01:09, 10.88 examples/s]0
0
Map (num_proc=2):  10%|█████                                                | 80/833 [00:25<00:56, 13.38 examples/s]0
0
Map (num_proc=2):  10%|█████▎                                               | 84/833 [00:25<00:46, 16.02 examples/s]0
0
Map (num_proc=2):  11%|█████▌                                               | 88/833 [00:25<00:40, 18.25 examples/s]0
0
Map (num_proc=2):  11%|█████▊                                               | 92/833 [00:25<00:34, 21.25 examples/s]0
0
Map (num_proc=2):  12%|██████                                               | 96/833 [00:25<00:32, 22.81 examples/s]0
0
Map (num_proc=2):  12%|██████▏                                             | 100/833 [00:25<00:30, 24.12 examples/s]0
0
Map (num_proc=2):  12%|██████▍                                             | 104/833 [00:25<00:28, 25.68 examples/s]0
0
Map (num_proc=2):  13%|██████▋                                             | 108/833 [00:26<00:28, 25.85 examples/s]0
0
Map (num_proc=2):  13%|██████▉                                             | 112/833 [00:26<00:27, 26.50 examples/s]0
0
Map (num_proc=2):  14%|███████▏                                            | 116/833 [00:26<00:27, 26.38 examples/s]0
0
Map (num_proc=2):  14%|███████▍                                            | 120/833 [00:26<00:25, 27.80 examples/s]0
0
Map (num_proc=2):  15%|███████▋                                            | 124/833 [00:26<00:23, 30.05 examples/s]0
0
Map (num_proc=2):  15%|███████▉                                            | 128/833 [00:26<00:23, 29.90 examples/s]0
0
Map (num_proc=2):  16%|████████▏                                           | 132/833 [00:26<00:23, 29.77 examples/s]0
0
Map (num_proc=2):  16%|████████▍                                           | 136/833 [00:26<00:23, 30.13 examples/s]0
0
Map (num_proc=2):  17%|████████▋                                           | 140/833 [00:27<00:23, 29.88 examples/s]0
0
Map (num_proc=2):  17%|████████▉                                           | 144/833 [00:27<00:23, 29.59 examples/s]0
0
Map (num_proc=2):  18%|█████████▏                                          | 148/833 [00:27<00:22, 30.01 examples/s]0
0
Map (num_proc=2):  18%|█████████▍                                          | 152/833 [00:27<00:22, 30.00 examples/s]0
0
Map (num_proc=2):  19%|█████████▋                                          | 156/833 [00:27<00:22, 30.37 examples/s]0
0
Map (num_proc=2):  19%|█████████▉                                          | 160/833 [00:27<00:21, 31.32 examples/s]0
0
Map (num_proc=2):  20%|██████████▏                                         | 164/833 [00:27<00:21, 31.32 examples/s]0
0
Map (num_proc=2):  20%|██████████▍                                         | 168/833 [00:27<00:21, 31.43 examples/s]0
Process SpawnPoolWorker-1:
Traceback (most recent call last):
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 314, in _bootstrap
    self.run()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 108, in run
    self._target(*self._args, **self._kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/pool.py"", line 114, in worker
    task = get()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/queues.py"", line 370, in get
    return _ForkingPickler.loads(res)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 301, in loads
    return load(file, ignore, **kwds)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 287, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 442, in load
    obj = StockUnpickler.load(self)
  File ""/usr/local/lib/python3.10/dist-packages/torch/storage.py"", line 337, in _load_from_bytes
    return torch.load(io.BytesIO(b))
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 1028, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 1256, in _legacy_load
    result = unpickler.load()
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 1193, in persistent_load
    wrap_storage=restore_location(obj, location),
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 381, in default_restore_location
    result = fn(storage, location)
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 277, in _cuda_deserialize
    return torch.UntypedStorage(obj.nbytes(), device=torch.device(location))
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacty of 15.73 GiB of which 14.25 MiB is free. Process 195904 has 3.73 GiB memory in use. Process 196147 has 6.99 GiB memory in use. Process 196146 has 4.98 GiB memory in use. Of the allocated memory 4.66 GiB is allocated by PyTorch, and 172.25 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
0
Map (num_proc=2):  21%|██████████▋                                         | 172/833 [00:28<00:20, 32.04 examples/s]0
0
Map (num_proc=2):  21%|██████████▉                                         | 176/833 [00:28<00:21, 30.91 examples/s]0
0
Map (num_proc=2):  22%|███████████▏                                        | 180/833 [00:28<00:21, 30.50 examples/s]0
0
Map (num_proc=2):  22%|███████████▍                                        | 184/833 [00:28<00:21, 29.98 examples/s]0
0
Map (num_proc=2):  23%|███████████▋                                        | 188/833 [00:28<00:21, 29.40 examples/s]0
0
Map (num_proc=2):  23%|███████████▉                                        | 192/833 [00:28<00:21, 29.24 examples/s]0
0
Map (num_proc=2):  24%|████████████▏                                       | 196/833 [00:28<00:21, 29.00 examples/s]0
0
Map (num_proc=2):  24%|████████████▍                                       | 200/833 [00:29<00:21, 29.30 examples/s]0
0
Map (num_proc=2):  24%|████████████▋                                       | 204/833 [00:29<00:21, 29.88 examples/s]0
0
Map (num_proc=2):  25%|████████████▉                                       | 208/833 [00:29<00:20, 30.95 examples/s]0
0
Map (num_proc=2):  25%|█████████████                                       | 210/833 [00:29<01:27,  7.13 examples/s]
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/workspace/test.py"", line 222, in map_train
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=2, with_rank=True, num_proc=2)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 592, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 557, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 3185, in map
    for rank, done, content in iflatmap_unordered(
  File ""/usr/local/lib/python3.10/dist-packages/datasets/utils/py_utils.py"", line 647, in iflatmap_unordered
    raise RuntimeError(
RuntimeError: One of the subprocesses has abruptly died during map operation.To debug the error, disable multiprocessing."
c6du8jaM,Untitled,kopyl,Python,Saturday 27th of January 2024 11:20:35 AM CDT,"import functools
import gc
import logging
import math
import os
import random
import shutil
from pathlib import Path

import accelerate
import datasets
import numpy as np
import torch
import torch.nn.functional as F
import torch.utils.checkpoint
import transformers
from accelerate import Accelerator
from accelerate.logging import get_logger
from accelerate.utils import ProjectConfiguration, set_seed
from accelerate.utils import InitProcessGroupKwargs
from datasets import load_dataset, DatasetDict, load_from_disk
from huggingface_hub import create_repo, upload_folder
from packaging import version
from torchvision import transforms
from torchvision.transforms.functional import crop
from tqdm.auto import tqdm
from transformers import AutoTokenizer, PretrainedConfig

import diffusers
from diffusers import (
    AutoencoderKL,
    DDPMScheduler,
    StableDiffusionXLPipeline,
    UNet2DConditionModel,
)
from diffusers.optimization import get_scheduler
from diffusers.training_utils import EMAModel, compute_snr
from diffusers.utils import check_min_version, is_wandb_available
from diffusers.utils.import_utils import is_xformers_available
from datetime import timedelta
from multiprocess import set_start_method


resolution = 128
dataset_name = ""lambdalabs/pokemon-blip-captions""
cache_dir = ""/workspace/dataset-cache""
pretrained_model_name_or_path = ""stabilityai/stable-diffusion-xl-base-1.0""
pretrained_vae_model_name_or_path = ""madebyollin/sdxl-vae-fp16-fix""

max_train_samples = None


check_min_version(""0.24.0.dev0"")
logger = get_logger(__name__)
DATASET_NAME_MAPPING = {
    ""lambdalabs/pokemon-blip-captions"": (""image"", ""text""),
}

dataset = load_dataset(
    dataset_name,
    cache_dir=cache_dir,
)


if max_train_samples is not None:
    dataset[""train""] = dataset[""train""].select(range(max_train_samples))


column_names = dataset[""train""].column_names


train_resize = transforms.Resize(resolution, interpolation=transforms.InterpolationMode.BILINEAR)
train_transforms = transforms.Compose([transforms.ToTensor(), transforms.Normalize([0.5], [0.5])])
train_crop = transforms.RandomCrop(resolution)


def preprocess_train(examples):
    image_column = column_names[0]
    images = [image.convert(""RGB"") for image in examples[image_column]]
    # image aug
    original_sizes = []
    all_images = []
    crop_top_lefts = []
    for image in images:
        original_sizes.append((image.height, image.width))
        image = train_resize(image)

        y1, x1, h, w = train_crop.get_params(image, (resolution, resolution))
        image = crop(image, y1, x1, h, w)

        crop_top_left = (y1, x1)
        crop_top_lefts.append(crop_top_left)
        image = train_transforms(image)
        all_images.append(image)

    examples[""original_sizes""] = original_sizes
    examples[""crop_top_lefts""] = crop_top_lefts
    examples[""pixel_values""] = all_images
    return examples


train_dataset = dataset[""train""].with_transform(preprocess_train)
print(type(train_dataset))
train_dataset


def import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path: str, revision: str, subfolder: str = ""text_encoder""
):
    text_encoder_config = PretrainedConfig.from_pretrained(
        pretrained_model_name_or_path, subfolder=subfolder, revision=revision, device=""cuda""
    )
    model_class = text_encoder_config.architectures[0]

    if model_class == ""CLIPTextModel"":
        from transformers import CLIPTextModel

        return CLIPTextModel
    elif model_class == ""CLIPTextModelWithProjection"":
        from transformers import CLIPTextModelWithProjection

        return CLIPTextModelWithProjection
    else:
        raise ValueError(f""{model_class} is not supported."")


text_encoder_cls_one = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None
)
text_encoder_cls_two = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None, subfolder=""text_encoder_2""
)

text_encoder_one = text_encoder_cls_one.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder""
).to(""cuda"")
text_encoder_two = text_encoder_cls_two.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder_2""
).to(""cuda"")
vae = AutoencoderKL.from_pretrained(
    pretrained_model_name_or_path, subfolder=""vae"", device=""cuda""
).to(""cuda"")

tokenizer_one = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer"", use_fast=False, device=""cuda""
)
tokenizer_two = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer_2"", device=""cuda""
)


text_encoders = [text_encoder_one, text_encoder_two]
tokenizers = [tokenizer_one, tokenizer_two]


def encode_prompt(batch, rank, text_encoders, tokenizers, proportion_empty_prompts, caption_column, is_train=True):
    print(rank)
    prompt_embeds_list = []
    prompt_batch = batch[caption_column]

    captions = []
    for caption in prompt_batch:
        if random.random() < proportion_empty_prompts:
            captions.append("""")
        elif isinstance(caption, str):
            captions.append(caption)
        elif isinstance(caption, (list, np.ndarray)):
            # take a random caption if there are multiple
            captions.append(random.choice(caption) if is_train else caption[0])

    with torch.no_grad():
        for tokenizer, text_encoder in zip(tokenizers, text_encoders):
            text_inputs = tokenizer(
                captions,
                padding=""max_length"",
                max_length=tokenizer.model_max_length,
                truncation=True,
                return_tensors=""pt"",
            )
            text_input_ids = text_inputs.input_ids
            prompt_embeds = text_encoder(
                text_input_ids.to(text_encoder.device),
                output_hidden_states=True,
            )

            # We are only ALWAYS interested in the pooled output of the final text encoder
            pooled_prompt_embeds = prompt_embeds[0]
            prompt_embeds = prompt_embeds.hidden_states[-2]
            bs_embed, seq_len, _ = prompt_embeds.shape
            prompt_embeds = prompt_embeds.view(bs_embed, seq_len, -1)
            prompt_embeds_list.append(prompt_embeds)

    prompt_embeds = torch.concat(prompt_embeds_list, dim=-1)
    pooled_prompt_embeds = pooled_prompt_embeds.view(bs_embed, -1)
    return {""prompt_embeds"": prompt_embeds.cpu(), ""pooled_prompt_embeds"": pooled_prompt_embeds.cpu()}


def compute_vae_encodings(batch, vae):
    images = batch.pop(""pixel_values"")
    pixel_values = torch.stack(list(images))
    pixel_values = pixel_values.to(memory_format=torch.contiguous_format).float()
    pixel_values = pixel_values.to(vae.device, dtype=vae.dtype)

    with torch.no_grad():
        model_input = vae.encode(pixel_values).latent_dist.sample()
    model_input = model_input * vae.config.scaling_factor
    return {""model_input"": model_input.cpu()}


compute_embeddings_fn = functools.partial(
    encode_prompt,
    text_encoders=text_encoders,
    tokenizers=tokenizers,
    proportion_empty_prompts=0,
    caption_column=""text"",
)
compute_vae_encodings_fn = functools.partial(compute_vae_encodings, vae=vae)

def map_train():
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=2, with_rank=True, num_proc=2)"
WDQ1C6En,mps,geekyprawins,JavaScript,Saturday 27th of January 2024 11:05:11 AM CDT,"var members = [];

var login = fetch('https://members.iecsemanipal.com/api/login', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    ""email"": 'satyapraveen2003@gmail.com',
    password: 'testpwd',
  }),
}).then((res) => console.log(res));

const res = fetch('https://members.iecsemanipal.com/api/register', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    ""name"": ""Trial 2024"",
    ""email"": ""praveen@iecsemanipal.com"",
    ""regNo"": ""123456987"",
    ""mobile"": ""7330840503"",
    ""memId"": ""7c2aedf8-3891-4c56-93ac-cf317547ade4""
  }),
}).then((response)=>console.log(response.body));

// for (i = 0; i < members.length; i++) {
//   // console.log(members[i].""name);
//   const res = fetch('https://members.iecsemanipal.com/api/register', {
//     method: 'POST',
//     headers: {
//       'Content-Type': 'application/json',
//     },
//     body: JSON.stringify(members[i]),
//   }).then((response) => console.log(response));
// }"
fTwJmegc,05. Maximal Sum,Spocoman,C++,Saturday 27th of January 2024 10:58:43 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main() {
    int row, col, n;
    cin >> row >> col;

    vector<vector<int>> matrix;

    for (int i = 0; i < row; i++) {
        vector<int> currentRow;
        for (int j = 0; j < col; j++) {
            cin >> n;
            currentRow.push_back(n);
        }
        matrix.push_back(currentRow);
    }

    int maxSum = 0, r = 0, c = 0;

    for (int i = 0; i < row - 2; i++) {
        int sum = 0;
        for (int j = 0; j < col - 2; j++) {
            sum = matrix[i][j] + matrix[i][j + 1] + matrix[i][j + 2] +
                matrix[i + 1][j] + matrix[i + 1][j + 1] + matrix[i + 1][j + 2] +
                matrix[i + 2][j] + matrix[i + 2][j + 1] + matrix[i + 2][j + 2];

            if (sum > maxSum) {
                maxSum = sum;
                r = i;
                c = j;
            }
        }
    }

    cout << ""Sum = "" << maxSum << endl;

    for (int i = r; i < r + 3; i++) {
        for (int j = c; j < c + 3; j++) {
            cout << matrix[i][j] << ' ';
        }
        cout << endl;
    }

    return 0;
}"
s2SEEarQ,wilder.nvim rplugin file,bhaveshverma333,VIM,Saturday 27th of January 2024 10:57:37 AM CDT,""" perl plugins


"" node plugins


"" python3 plugins
call remote#host#RegisterPlugin('python3', 'C:/Users/bhaveshverma/AppData/Local/nvim/plugged/wilder.nvim/rplugin/python3/wilder', [
      \ {'sync': v:true, 'name': '_wilder_python_basic_highlight', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_clap_filt', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_cpsm_filt', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_python_cpsm_highlight', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_difflib_sort', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_file_finder', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_fruzzy_filt', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_fuzzy_filt', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_fuzzywuzzy_sort', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_python_get_file_completion', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_get_help_tags', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_get_users', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_init', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_python_pcre2_highlight', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_search', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_sleep', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_lexical_sort', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_uniq_filt', 'type': 'function', 'opts': {}},
     \ ])


"" ruby plugins


"" python plugins


"
Li1tQH3u,Untitled,kopyl,Python,Saturday 27th of January 2024 10:57:18 AM CDT,"root@55cb7f729062:/workspace# ls
HF_HOME  Untitled.ipynb  __pycache__  dataset-cache  test.py  train_notebook_sdxl_mapping_saving.ipynb
root@55cb7f729062:/workspace# python
Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from test import map_train
<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
>>> map_train()
Map (num_proc=2):   0%|                                                              | 0/833 [00:00<?, ? examples/s]<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
Process SpawnPoolWorker-1:
Traceback (most recent call last):
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 314, in _bootstrap
    self.run()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 108, in run
    self._target(*self._args, **self._kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/pool.py"", line 114, in worker
    task = get()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/queues.py"", line 370, in get
    return _ForkingPickler.loads(res)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 301, in loads
    return load(file, ignore, **kwds)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 287, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 442, in load
    obj = StockUnpickler.load(self)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 432, in find_class
    return StockUnpickler.find_class(self, module, name)
  File ""/workspace/test.py"", line 220, in <module>
    set_start_method(""spawn"")
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/context.py"", line 247, in set_start_method
    raise RuntimeError('context has already been set')
RuntimeError: context has already been set
Map (num_proc=2):   0%|                                                              | 0/833 [00:19<?, ? examples/s]
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/workspace/test.py"", line 224, in map_train
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=4, with_rank=True, num_proc=2)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 592, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 557, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 3185, in map
    for rank, done, content in iflatmap_unordered(
  File ""/usr/local/lib/python3.10/dist-packages/datasets/utils/py_utils.py"", line 647, in iflatmap_unordered
    raise RuntimeError(
RuntimeError: One of the subprocesses has abruptly died during map operation.To debug the error, disable multiprocessing.
>>>"
iyNqj7ip,Untitled,kopyl,Python,Saturday 27th of January 2024 10:55:44 AM CDT,"import functools
import gc
import logging
import math
import os
import random
import shutil
from pathlib import Path

import accelerate
import datasets
import numpy as np
import torch
import torch.nn.functional as F
import torch.utils.checkpoint
import transformers
from accelerate import Accelerator
from accelerate.logging import get_logger
from accelerate.utils import ProjectConfiguration, set_seed
from accelerate.utils import InitProcessGroupKwargs
from datasets import load_dataset, DatasetDict, load_from_disk
from huggingface_hub import create_repo, upload_folder
from packaging import version
from torchvision import transforms
from torchvision.transforms.functional import crop
from tqdm.auto import tqdm
from transformers import AutoTokenizer, PretrainedConfig

import diffusers
from diffusers import (
    AutoencoderKL,
    DDPMScheduler,
    StableDiffusionXLPipeline,
    UNet2DConditionModel,
)
from diffusers.optimization import get_scheduler
from diffusers.training_utils import EMAModel, compute_snr
from diffusers.utils import check_min_version, is_wandb_available
from diffusers.utils.import_utils import is_xformers_available
from datetime import timedelta
from multiprocess import set_start_method


resolution = 128
dataset_name = ""lambdalabs/pokemon-blip-captions""
cache_dir = ""/workspace/dataset-cache""
pretrained_model_name_or_path = ""stabilityai/stable-diffusion-xl-base-1.0""
pretrained_vae_model_name_or_path = ""madebyollin/sdxl-vae-fp16-fix""

max_train_samples = None


check_min_version(""0.24.0.dev0"")
logger = get_logger(__name__)
DATASET_NAME_MAPPING = {
    ""lambdalabs/pokemon-blip-captions"": (""image"", ""text""),
}

dataset = load_dataset(
    dataset_name,
    cache_dir=cache_dir,
)


if max_train_samples is not None:
    dataset[""train""] = dataset[""train""].select(range(max_train_samples))


column_names = dataset[""train""].column_names


train_resize = transforms.Resize(resolution, interpolation=transforms.InterpolationMode.BILINEAR)
train_transforms = transforms.Compose([transforms.ToTensor(), transforms.Normalize([0.5], [0.5])])
train_crop = transforms.RandomCrop(resolution)


def preprocess_train(examples):
    image_column = column_names[0]
    images = [image.convert(""RGB"") for image in examples[image_column]]
    # image aug
    original_sizes = []
    all_images = []
    crop_top_lefts = []
    for image in images:
        original_sizes.append((image.height, image.width))
        image = train_resize(image)

        y1, x1, h, w = train_crop.get_params(image, (resolution, resolution))
        image = crop(image, y1, x1, h, w)

        crop_top_left = (y1, x1)
        crop_top_lefts.append(crop_top_left)
        image = train_transforms(image)
        all_images.append(image)

    examples[""original_sizes""] = original_sizes
    examples[""crop_top_lefts""] = crop_top_lefts
    examples[""pixel_values""] = all_images
    return examples


train_dataset = dataset[""train""].with_transform(preprocess_train)
print(type(train_dataset))
train_dataset


def import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path: str, revision: str, subfolder: str = ""text_encoder""
):
    text_encoder_config = PretrainedConfig.from_pretrained(
        pretrained_model_name_or_path, subfolder=subfolder, revision=revision, device=""cuda""
    )
    model_class = text_encoder_config.architectures[0]

    if model_class == ""CLIPTextModel"":
        from transformers import CLIPTextModel

        return CLIPTextModel
    elif model_class == ""CLIPTextModelWithProjection"":
        from transformers import CLIPTextModelWithProjection

        return CLIPTextModelWithProjection
    else:
        raise ValueError(f""{model_class} is not supported."")


text_encoder_cls_one = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None
)
text_encoder_cls_two = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None, subfolder=""text_encoder_2""
)

text_encoder_one = text_encoder_cls_one.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder""
).to(""cuda"")
text_encoder_two = text_encoder_cls_two.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder_2""
).to(""cuda"")
vae = AutoencoderKL.from_pretrained(
    pretrained_model_name_or_path, subfolder=""vae"", device=""cuda""
).to(""cuda"")

tokenizer_one = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer"", use_fast=False, device=""cuda""
)
tokenizer_two = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer_2"", device=""cuda""
)


text_encoders = [text_encoder_one, text_encoder_two]
tokenizers = [tokenizer_one, tokenizer_two]


def encode_prompt(batch, rank, text_encoders, tokenizers, proportion_empty_prompts, caption_column, is_train=True):
    print(rank)
    prompt_embeds_list = []
    prompt_batch = batch[caption_column]

    captions = []
    for caption in prompt_batch:
        if random.random() < proportion_empty_prompts:
            captions.append("""")
        elif isinstance(caption, str):
            captions.append(caption)
        elif isinstance(caption, (list, np.ndarray)):
            # take a random caption if there are multiple
            captions.append(random.choice(caption) if is_train else caption[0])

    with torch.no_grad():
        for tokenizer, text_encoder in zip(tokenizers, text_encoders):
            text_inputs = tokenizer(
                captions,
                padding=""max_length"",
                max_length=tokenizer.model_max_length,
                truncation=True,
                return_tensors=""pt"",
            )
            text_input_ids = text_inputs.input_ids
            prompt_embeds = text_encoder(
                text_input_ids.to(text_encoder.device),
                output_hidden_states=True,
            )

            # We are only ALWAYS interested in the pooled output of the final text encoder
            pooled_prompt_embeds = prompt_embeds[0]
            prompt_embeds = prompt_embeds.hidden_states[-2]
            bs_embed, seq_len, _ = prompt_embeds.shape
            prompt_embeds = prompt_embeds.view(bs_embed, seq_len, -1)
            prompt_embeds_list.append(prompt_embeds)

    prompt_embeds = torch.concat(prompt_embeds_list, dim=-1)
    pooled_prompt_embeds = pooled_prompt_embeds.view(bs_embed, -1)
    return {""prompt_embeds"": prompt_embeds.cpu(), ""pooled_prompt_embeds"": pooled_prompt_embeds.cpu()}


def compute_vae_encodings(batch, vae):
    images = batch.pop(""pixel_values"")
    pixel_values = torch.stack(list(images))
    pixel_values = pixel_values.to(memory_format=torch.contiguous_format).float()
    pixel_values = pixel_values.to(vae.device, dtype=vae.dtype)

    with torch.no_grad():
        model_input = vae.encode(pixel_values).latent_dist.sample()
    model_input = model_input * vae.config.scaling_factor
    return {""model_input"": model_input.cpu()}


compute_embeddings_fn = functools.partial(
    encode_prompt,
    text_encoders=text_encoders,
    tokenizers=tokenizers,
    proportion_empty_prompts=0,
    caption_column=""text"",
)
compute_vae_encodings_fn = functools.partial(compute_vae_encodings, vae=vae)


set_start_method(""spawn"")


def map_train():
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=4, with_rank=True, num_proc=2)"
T6tFcE2g,Untitled,ayawaska,JSON,Saturday 27th of January 2024 10:47:09 AM CDT,"[
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""19:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""אנאדולו אפס - מונאקו""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""167""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""167""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""167""
      }
    ],
    ""teams"": ""אנאדולו אפס - מונאקו""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""21:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""אולימפיה מילאנו - ברצלונה""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""157""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""157""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""157""
      }
    ],
    ""teams"": ""אולימפיה מילאנו - ברצלונה""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""21:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""פרטיזן בלגרד - ז'לגיריס קובנה""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""165""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""165""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""165""
      }
    ],
    ""teams"": ""פרטיזן בלגרד - ז'לגיריס קובנה""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""21:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""בסקוניה - ולנסיה""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""163""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""163""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""163""
      }
    ],
    ""teams"": ""בסקוניה - ולנסיה""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""01:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""אטלנטה הוקס - דאלאס מאבריקס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""244""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""244""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""244""
      }
    ],
    ""teams"": ""אטלנטה הוקס - דאלאס מאבריקס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""01:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""שארלוט הורנטס - יוסטון רוקטס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""225""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""225""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""225""
      }
    ],
    ""teams"": ""שארלוט הורנטס - יוסטון רוקטס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""01:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""אינדיאנה פייסרס - פיניקס סאנס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""243""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""243""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""243""
      }
    ],
    ""teams"": ""אינדיאנה פייסרס - פיניקס סאנס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:29  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""טורונטו ראפטורס - לוס אנג'לס קליפרס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""235""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""235""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""235""
      }
    ],
    ""teams"": ""טורונטו ראפטורס - לוס אנג'לס קליפרס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""ממפיס גריזליס - אורלנדו מג'יק""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""213""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""213""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""213""
      }
    ],
    ""teams"": ""ממפיס גריזליס - אורלנדו מג'יק""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""מילווקי באקס - קליבלנד קבלירס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""238""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""238""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""238""
      }
    ],
    ""teams"": ""מילווקי באקס - קליבלנד קבלירס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""ניו אורלינס פליקאנס - אוקלהומה סיטי ת'אנדר""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""241""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""241""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""241""
      }
    ],
    ""teams"": ""ניו אורלינס פליקאנס - אוקלהומה סיטי ת'אנדר""
  }
]"
NFD9SMva,04. Snake Moves,Spocoman,C++,Saturday 27th of January 2024 10:16:29 AM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
    int row, col;
    cin >> row >> col;
    cin.ignore();

    string line;
    getline(cin, line);

    vector<vector<char>> matrix;

    int index = 0;

    for (int i = 0; i < row; i++) {
        vector<char> currentRow;
        for (int j = 0; j < col; j++) {
            if (i % 2 == 0) {
                currentRow.push_back(line[index++ % line.length()]);
            }
            else {
                currentRow.insert(currentRow.begin(), line[index++ % line.length()]);
            }
        }
        matrix.push_back(currentRow);
    }

    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            cout << matrix[i][j];
        }
        cout << endl;
    }

    return 0;
}"
QiuWCq7J,sandbox game code,Era-Grp,Lua,Saturday 27th of January 2024 10:06:44 AM CDT,"local rX = NumberRange.new(-25,25)
local rZ = NumberRange.new(-25,25)

local DSS = game.DataStoreService
local TBS = DSS:GetOrderedDataStore(""totalblocks"",""dev"")
local MpS = game.MarketplaceService

local shiny = {}
local ownedPos:{Vector3} = {}

function snap(number)
	local remainder = number % 4
	local result

	if remainder < 2 then
		result = number - remainder
	else
		result = number + (4 - remainder)
	end

	return result
end

local function clearPlrBuilds(plr)
	for i,v in pairs(workspace.Blocks:WaitForChild(plr.UserId,5):GetChildren()) do
		table.remove(ownedPos,table.find(ownedPos,v.Position))
		v:Destroy()
	end
end

game.ReplicatedStorage.Events.BLOCK.OnServerEvent:Connect(function(plr,position:Vector3)
	if (plr.Character.PrimaryPart.Position-position).Magnitude <= 50 then
		local sp = Instance.new(""Part"")
		sp.Size = Vector3.new(4,4,4)
		sp.CanCollide = true
		sp.CanQuery = true
		sp.CanTouch = true
		sp.Anchored = true
		sp.Transparency = 0
		sp.Position = Vector3.new(snap(position.X),snap(position.Y)+2,snap(position.Z))
		
		if sp.Position.X > rX.Min and sp.Position.X < rX.Max and sp.Position.Z > rZ.Min and sp.Position.Z < rZ.Max then
			sp:Destroy()
			return
		end
		
		if table.find(ownedPos,sp.Position) then
			sp:Destroy()
			return
		end
		
		sp.Color = plr.TeamColor.Color
		sp:SetAttribute(""plr"",plr.UserId)
		
		if shiny[plr.UserId] == true then
			sp.Reflectance = .2
		else
			sp.Reflectance = 0
		end
		
		table.insert(ownedPos,sp.Position)
		
		sp.Parent = workspace.Blocks:WaitForChild(plr.UserId,5)
	end
end)


game.Players.PlayerAdded:Connect(function(plr)
	local folder = Instance.new(""Folder"")
	folder.Name = plr.UserId
	folder.Parent = workspace.Blocks
	
	local ls = script.leaderstats:Clone()
	local totalblocks = TBS:GetAsync(plr.UserId)
	ls.Total.Value = totalblocks or 0
	
	ls.Parent = plr
	
	folder.ChildAdded:Connect(function(child)
		ls.Blocks.Value = #folder:GetChildren()
		ls.Total.Value += 1
	end)
	
	coroutine.resume(coroutine.create(function()
		task.wait(30)
		TBS:SetAsync(plr.UserId,ls.Total.Value)
	end))
	
	shiny[plr.UserId] = MpS:UserOwnsGamePassAsync(plr.UserId,679457884)
end)

MpS.PromptGamePassPurchaseFinished:Connect(function(plr:Player,id,wasP)
	if not wasP then return end
	if id == 679457884 then
		shiny[plr.UserId] = true
	end
	
	for i,v:BasePart in pairs(workspace.Blocks:WaitForChild(plr.UserId,5):GetChildren()) do
		if v:IsA(""BasePart"") then
			v.Reflectance = .2
		end
	end
end)

game.Players.PlayerRemoving:Connect(function(plr)
	clearPlrBuilds(plr)
	workspace.Blocks:WaitForChild(plr.UserId,5):Destroy()
	
	TBS:SetAsync(plr.UserId,plr:WaitForChild(""leaderstats"",5).Total.Value)
end)

game.ReplicatedStorage.Events.Save2Roblox.OnServerEvent:Connect(function(plr)
	local model = Instance.new(""Model"")
	for i,v in pairs(workspace.Blocks:WaitForChild(plr.UserId,5):GetChildren()) do
		local blockClone = v:Clone()
		blockClone.Parent = model
	end
	
	game.AssetService:PromptCreateAssetAsync(plr,model,Enum.AssetType.Model)
end)

game.ReplicatedStorage.Events.CLEAN.OnServerEvent:Connect(clearPlrBuilds)


local function processReceipt(receiptInfo)
	local userId = receiptInfo.PlayerId
	local productId = receiptInfo.ProductId

	local player = game.Players:GetPlayerByUserId(userId)
	if player then
		-- Get the handler function associated with the developer product ID and attempt to run it
		if productId == 1718979816 then
			for i,v in pairs(game.Players:GetPlayers()) do
				clearPlrBuilds(v)
			end
			
			local teamColor = player.TeamColor.Color
			
			game.ReplicatedStorage.Events.GetSysMsg:FireAllClients(player.Name ..""</font>"".. "" removed all buildings!"")
		end
	end
end

-- Set the callback; this can only be done once by one server-side script
MpS.ProcessReceipt = processReceipt"
MNFw01sG,Untitled,Nenogzar,Python,Saturday 27th of January 2024 10:06:04 AM CDT,"numbers = list(map(int,input().strip().split("" "")))
how_many_numbers_to_remove = int(input())

for n in range(how_many_numbers_to_remove):
    numbers.remove(min(numbers))
count = 1
for num in numbers:
    if count != (len(numbers)):
        print(f""{num},"", end="" "")

    else:
        print(f""{num}"")
    count += 1"
W3x14USF,QuickOBJ Plugin - Source Code,Era-Grp,Lua,Saturday 27th of January 2024 10:05:20 AM CDT,"local plugin:Plugin = plugin
local GUI = script.Parent.Parent.GUIs.Main
local Selection = game:GetService(""Selection"")
local Module = script.QuickOBJ
local HaveModuleInOldSession = false

local cur = nil

local function CreatePlugin()
	local widgetInfo = DockWidgetPluginGuiInfo.new(
		Enum.InitialDockState.Float, -- Widget will be initialized in floating panel
		false, -- Widget will be initially enabled
		false, -- Don't override the previous enabled state
		500, -- Default width of the floating window
		500, -- Default height of the floating window
		300, -- Minimum width of the floating window (optional)
		300 -- Minimum height of the floating window (optional)
	)
	local Widget = plugin:CreateDockWidgetPluginGui(""UIBloxPlugin"", widgetInfo)
	Widget.Title = ""QuickOBJ Plugin""
	Widget.Name = ""QuickOBJ Plugin""
	GUI.Parent = Widget

	local toolbar = plugin:CreateToolbar(""QuickOBJ Plugin"")
	local btn:PluginToolbarButton = toolbar:CreateButton(""QuickOBJ_MainButton"",""Open"", ""https://www.roblox.com/asset/?id=16052434107"", ""QuickOBJ"")
	btn.Enabled = true
	btn.ClickableWhenViewportHidden = true

	btn.Click:Connect(function()
		Widget.Enabled = not Widget.Enabled
	end)
end

CreatePlugin()

if not game.ReplicatedStorage:FindFirstChild(""QuickOBJ"") then
	Module.Parent = game.ReplicatedStorage
	HaveModuleInOldSession = false
else
	Module:Destroy()
	Module = game.ReplicatedStorage:FindFirstChild(""QuickOBJ"")
	HaveModuleInOldSession = true
end

local function AddNewElement(elementOld,withoutModule:boolean)
	if elementOld then
		local element
		
		if not withoutModule then
			element = elementOld:Clone()
			
			if Module.OBJ:FindFirstChild(element.Name) then
				element.Name = element.Name .. ""_""..math.random(1,100000)
			end
			element.Parent = Module.OBJ
		else
			element = elementOld
		end
		
		local ui = script.element:Clone()
		ui.Name = ""Element_""..element.Name
		ui.Text = element.Name
		ui.Parent = GUI.Pages.Objects
		
		ui.MouseEnter:Connect(function()
			ui.delete.Visible = true
			ui.edit.Visible = true
		end)
		
		ui.MouseLeave:Connect(function()
			ui.delete.Visible = false
			ui.edit.Visible = false
		end)
		
		ui.edit.MouseButton1Click:Connect(function()
			ui.edit.Rename.Visible = not ui.edit.Rename.Visible
			
			if ui.edit.Rename.Visible then
				ui.edit.Rename.TextBox.Text = ui.Text
			elseif not ui.edit.Rename.Visible then
				if not Module.OBJ:FindFirstChild(ui.edit.Rename.TextBox.Text) then
					ui.Name = ""Element_""..ui.edit.Rename.TextBox.Text
					ui.Text = ui.edit.Rename.TextBox.Text
					element.Name = ui.edit.Rename.TextBox.Text
				end
			end
		end)
		
		ui.delete.MouseButton1Click:Connect(function()
			element:Destroy()
			ui:Destroy()
		end)
	end
end

local function LoadFromModule(m:ModuleScript)
	local OBJ = m:FindFirstChild(""OBJ"")

	if OBJ then
		for i,v in pairs(OBJ:GetChildren()) do
			AddNewElement(v,true)
		end
	end
end

if HaveModuleInOldSession then
	LoadFromModule(Module)
end

cur = Selection:Get()[1]
Selection.SelectionChanged:Connect(function()
	local first = Selection:Get()[1]
	
	if first then
		cur = first
		GUI.CreateNew.Frame.Description.Text = 'Do you want to add ""'..cur.Name..'""?'
	end
end)

GUI.Pages.Objects._new.MouseButton1Click:Connect(function()
	local element = cur
	
	if element then
		GUI.CreateNew.Visible = true
		
		GUI.CreateNew.Frame.Description.Text = 'Do you want to add ""'..element.Name..'""?'
	end
end)

GUI.CreateNew.Frame.Add.MouseButton1Click:Connect(function()
	AddNewElement(cur or Selection:Get()[1],false)
end)

GUI.CreateNew.Frame.Close.MouseButton1Click:Connect(function()
	GUI.CreateNew.Visible = false
end)"
MWGEfvjQ,Untitled,Nenogzar,Python,Saturday 27th of January 2024 10:03:50 AM CDT,"numbers = [int(num) for num in input().split()]
n = int(input())

for _ in range(n):
    numbers.remove(min(numbers))
    result = ', '.join(map(str, numbers))
#print(numbers)
print(result)"
rjnwyYBv,touch_screen,MondGnu,Lua,Saturday 27th of January 2024 09:41:36 AM CDT,"local state
local monitor

function display()
	monitor.clear()
	for x, y in ipairs(state) do
		for y, v in pairs(y) do
			monitor.setCursorPos(v.x, v.y)
			monitor.write(v.text)
		end
	end
end

function push_event(x,y)
	local coord = state[x]
	if coord == nil then
		return
	end
	local comp = coord[y]
	if comp == nil then
		return
	end
	comp.func()
end

function setMonitor(m)
	monitor = m
end

function setState(s)
	state = s
end"
8aKMjwJ7,Pulya V Serdtse,psychoticodes,HTML,Saturday 27th of January 2024 09:30:47 AM CDT,"<link href=""https://dl.dropboxusercontent.com/s/vtfjtrziaf9ke9d/pulya.css?dl=0"" rel=""stylesheet""><center><div id=""lya"" style=""--back:#000;--cl:#fff;--tit:#ccc;""><div class=""dtse"">PULYA SERDTSE</div><a href=""https://is.gd/gasper""><div class=""dtse2""></div></a><table cellspacing=""7""><td><div class=""sdr"" style=""background:url('https://via.placeholder.com/70x70') center/cover;""></div></td><td><div class=""sdr"" style=""background:url('https://via.placeholder.com/70x70') center/cover;""></div></td></table></div></center>"
0Lun4DK0,snake,nirajs,Python,Saturday 27th of January 2024 09:29:47 AM CDT,"class SnakeGame:

    def __init__(self, width: int, height: int, foods: List[List[int]]):
        self.maxRow = height 
        self.maxCol = width
        self.foodList = []
        self.currentX = 0
        self.currentY = 0
        self.score = 0

        for food in foods:
            x, y = food
            self.foodList.append((x,y))

        self.dir = {
            'L': (0, -1),
            'R': (0, 1),
            'D': (1, 0),
            'U': (-1, 0) 
        }
        

    def move(self, direction: str) -> int:

        x = self.currentX + self.dir[direction][0]
        y = self.currentY + self.dir[direction][1]
        if (self.checkBoundary(self.maxRow, self.maxCol, x, y) == False):
            return -1

        self.currentX = x 
        self.currentY = y
        if self.score < len(self.foodList) and self.foodList[self.score][0] == x and self.foodList[self.score][1] == y:
            self.score += 1
            return self.score
        else:
            return self.score


    def checkBoundary(self, r, c, posx, posy):
        if ( 0 <= posx < r and 0 <= posy < c):
            return True
        else:
            return False
        


# Your SnakeGame object will be instantiated and called as such:
# obj = SnakeGame(width, height, food)
# param_1 = obj.move(direction)"
cZf2zWDm,03. Squares in Matrix,Spocoman,C++,Saturday 27th of January 2024 09:19:32 AM CDT,"#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

int main() {
    int row, col;
    cin >> row >> col;
    cin.ignore();

    char chr;
    string line;

    vector<vector<char>> matrix;

    for (int i = 0; i < row; i++) {
        getline(cin, line);
        istringstream ss(line);
        vector<char> currentRow;

        while (ss >> chr) {
            currentRow.push_back(chr);
        }

        matrix.push_back(currentRow);
    }

    int counter = 0;

    for (int i = 0; i < row - 1; i++) {
        for (int j = 0; j < col - 1; j++) {
            chr = matrix[i][j];
            if (chr == matrix[i][j + 1] &&
                chr == matrix[i + 1][j] &&
                chr == matrix[i + 1][j + 1]) {
                counter++;
            }
        }
    }

    cout << counter << endl;
    return 0;
}"
42kzSEap,Nigerian scammers [27-1-1/2024],bombaires,AIMMS,Saturday 27th of January 2024 09:15:36 AM CDT,"<a href=""mailto:cbpaymastermmmaster@outlook.com"">cbpaymastermmmaster@outlook.com</a>
<a href=""mailto:mohammadubuhari001@msn.com"">mohammadubuhari001@msn.com</a>
<a href=""mailto:muhammadubuhari2018@gmail.com"">muhammadubuhari2018@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.a.du.buh.ar.i20.1.8@gmail.com"">m.u.h.a.mm.a.du.buh.ar.i20.1.8@gmail.com</a>
<a href=""mailto:m.uham.mad.u.bu.hari.2018@gmail.com"">m.uham.mad.u.bu.hari.2018@gmail.com</a>
<a href=""mailto:m.u.h.a.mmadub.uha.ri201.8@gmail.com"">m.u.h.a.mmadub.uha.ri201.8@gmail.com</a>
<a href=""mailto:m.uh.a.m.madub.uhari20.18@gmail.com"">m.uh.a.m.madub.uhari20.18@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.adubu.h.a.r.i.201.8@gmail.com"">m.u.h.a.mm.adubu.h.a.r.i.201.8@gmail.com</a>
<a href=""mailto:mu.h.am.m.adubuha.r.i2018@gmail.com"">mu.h.am.m.adubuha.r.i2018@gmail.com</a>
<a href=""mailto:m.uha.m.m.a.dubu.h.ar.i2018@gmail.com"">m.uha.m.m.a.dubu.h.ar.i2018@gmail.com</a>
<a href=""mailto:m.uh.ammad.ubu.ha.r.i2.0.1.8@gmail.com"">m.uh.ammad.ubu.ha.r.i2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.h.am.m.ad.u.b.u.ha.r.i.2.018@gmail.com"">m.u.h.am.m.ad.u.b.u.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:m.uha.m.ma.d.u.b.u.ha.ri2.018@gmail.com"">m.uha.m.ma.d.u.b.u.ha.ri2.018@gmail.com</a>
<a href=""mailto:muha.m.m.adubuh.ari.2018@gmail.com"">muha.m.m.adubuh.ari.2018@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.a.du.b.u.har.i.20.18@gmail.com"">m.u.h.a.m.m.a.du.b.u.har.i.20.18@gmail.com</a>
<a href=""mailto:mu.ha.m.m.ad.ubu.ha.ri2.018@gmail.com"">mu.ha.m.m.ad.ubu.ha.ri2.018@gmail.com</a>
<a href=""mailto:mu.h.am.m.ad.u.b.uh.ar.i.2018@gmail.com"">mu.h.am.m.ad.u.b.uh.ar.i.2018@gmail.com</a>
<a href=""mailto:m.u.h.a.mma.du.bu.h.a.ri.20.1.8@gmail.com"">m.u.h.a.mma.du.bu.h.a.ri.20.1.8@gmail.com</a>
<a href=""mailto:muh.a.m.m.a.d.ub.uhari2.0.18@gmail.com"">muh.a.m.m.a.d.ub.uhari2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.mmadu.b.u.h.a.r.i.2.0.18@gmail.com"">m.u.ha.mmadu.b.u.h.a.r.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.am.ma.d.ubu.ha.ri.2.01.8@gmail.com"">m.uh.am.ma.d.ubu.ha.ri.2.01.8@gmail.com</a>
<a href=""mailto:m.uha.m.ma.du.b.u.ha.ri.20.18@gmail.com"">m.uha.m.ma.du.b.u.ha.ri.20.18@gmail.com</a>
<a href=""mailto:m.u.ha.m.m.a.dub.u.hari2.0.1.8@gmail.com"">m.u.ha.m.m.a.dub.u.hari2.0.1.8@gmail.com</a>
<a href=""mailto:m.uha.mmad.u.bu.har.i.2.0.1.8@gmail.com"">m.uha.mmad.u.bu.har.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.amm.a.du.b.u.hari.20.18@gmail.com"">mu.h.amm.a.du.b.u.hari.20.18@gmail.com</a>
<a href=""mailto:m.uh.a.m.madu.b.uh.ar.i2.0.18@gmail.com"">m.uh.a.m.madu.b.uh.ar.i2.0.18@gmail.com</a>
<a href=""mailto:muh.a.m.m.ad.ubuha.r.i20.1.8@gmail.com"">muh.a.m.m.ad.ubuha.r.i20.1.8@gmail.com</a>
<a href=""mailto:mu.ha.m.m.a.d.ub.u.ha.r.i201.8@gmail.com"">mu.ha.m.m.a.d.ub.u.ha.r.i201.8@gmail.com</a>
<a href=""mailto:m.uh.ammad.u.b.uh.ar.i20.18@gmail.com"">m.uh.ammad.u.b.uh.ar.i20.18@gmail.com</a>
<a href=""mailto:m.uham.mad.u.buhari2.0.1.8@gmail.com"">m.uham.mad.u.buhari2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.amm.a.dub.uh.ari20.18@gmail.com"">mu.h.amm.a.dub.uh.ari20.18@gmail.com</a>
<a href=""mailto:m.uha.m.m.a.dubuhar.i2.0.18@gmail.com"">m.uha.m.m.a.dubuhar.i2.0.18@gmail.com</a>
<a href=""mailto:muh.a.mmad.u.b.uh.ar.i.20.1.8@gmail.com"">muh.a.mmad.u.b.uh.ar.i.20.1.8@gmail.com</a>
<a href=""mailto:muh.am.madub.u.har.i.2.0.18@gmail.com"">muh.am.madub.u.har.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.ad.ub.u.ha.ri.20.18@gmail.com"">m.u.h.a.m.m.ad.ub.u.ha.ri.20.18@gmail.com</a>
<a href=""mailto:m.u.h.am.m.a.dub.u.ha.r.i.2.018@gmail.com"">m.u.h.am.m.a.dub.u.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.d.ub.uh.ari.2.0.1.8@gmail.com"">m.uh.a.m.m.a.d.ub.uh.ari.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.ham.m.a.dub.u.h.a.r.i20.1.8@gmail.com"">mu.ham.m.a.dub.u.h.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:m.uh.a.m.ma.dubuha.ri2.01.8@gmail.com"">m.uh.a.m.ma.dubuha.ri2.01.8@gmail.com</a>
<a href=""mailto:muh.amm.adu.b.u.ha.r.i.2018@gmail.com"">muh.amm.adu.b.u.ha.r.i.2018@gmail.com</a>
<a href=""mailto:m.u.hamma.du.buh.a.r.i20.1.8@gmail.com"">m.u.hamma.du.buh.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.ad.ub.u.h.a.r.i20.1.8@gmail.com"">m.u.h.a.mm.ad.ub.u.h.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:m.uh.amma.d.ub.u.h.a.ri2.0.18@gmail.com"">m.uh.amma.d.ub.u.h.a.ri2.0.18@gmail.com</a>
<a href=""mailto:mu.ha.mmad.ubuh.ar.i20.1.8@gmail.com"">mu.ha.mmad.ubuh.ar.i20.1.8@gmail.com</a>
<a href=""mailto:muha.m.madu.bu.ha.r.i2.018@gmail.com"">muha.m.madu.bu.ha.r.i2.018@gmail.com</a>
<a href=""mailto:m.uha.mma.d.ub.u.h.a.ri2.018@gmail.com"">m.uha.mma.d.ub.u.h.a.ri2.018@gmail.com</a>
<a href=""mailto:muhamma.du.b.uhari.2.0.1.8@gmail.com"">muhamma.du.b.uhari.2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.a.d.u.b.uh.a.ri.2.018@gmail.com"">m.u.h.a.m.m.a.d.u.b.uh.a.ri.2.018@gmail.com</a>
<a href=""mailto:muh.a.m.mad.ubu.ha.r.i.2018@gmail.com"">muh.a.m.mad.ubu.ha.r.i.2018@gmail.com</a>
<a href=""mailto:muham.m.adu.buh.a.ri20.1.8@gmail.com"">muham.m.adu.buh.a.ri20.1.8@gmail.com</a>
<a href=""mailto:muham.m.a.d.u.bu.h.ar.i20.1.8@gmail.com"">muham.m.a.d.u.bu.h.ar.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.ha.m.madu.b.uh.ari.2.018@gmail.com"">m.u.ha.m.madu.b.uh.ari.2.018@gmail.com</a>
<a href=""mailto:m.u.h.amm.a.du.bu.ha.r.i.201.8@gmail.com"">m.u.h.amm.a.du.bu.ha.r.i.201.8@gmail.com</a>
<a href=""mailto:muha.m.m.a.d.u.b.u.hari201.8@gmail.com"">muha.m.m.a.d.u.b.u.hari201.8@gmail.com</a>
<a href=""mailto:m.uh.ammadu.b.uh.a.r.i20.18@gmail.com"">m.uh.ammadu.b.uh.a.r.i20.18@gmail.com</a>
<a href=""mailto:m.u.ha.m.mad.u.b.u.ha.r.i2.01.8@gmail.com"">m.u.ha.m.mad.u.b.u.ha.r.i2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.mma.d.u.buh.a.r.i201.8@gmail.com"">mu.h.a.mma.d.u.buh.a.r.i201.8@gmail.com</a>
<a href=""mailto:m.u.ha.m.ma.d.u.buh.a.ri20.1.8@gmail.com"">m.u.ha.m.ma.d.u.buh.a.ri20.1.8@gmail.com</a>
<a href=""mailto:muham.m.adu.b.uha.r.i.2.0.18@gmail.com"">muham.m.adu.b.uha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:muh.a.mmadu.buhari.201.8@gmail.com"">muh.a.mmadu.buhari.201.8@gmail.com</a>
<a href=""mailto:m.u.hammad.ub.u.ha.ri.201.8@gmail.com"">m.u.hammad.ub.u.ha.ri.201.8@gmail.com</a>
<a href=""mailto:muha.mm.a.d.ubuh.a.ri.2.01.8@gmail.com"">muha.mm.a.d.ubuh.a.ri.2.01.8@gmail.com</a>
<a href=""mailto:m.u.ha.m.m.adu.buh.a.r.i201.8@gmail.com"">m.u.ha.m.m.adu.buh.a.r.i201.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.m.a.dub.u.h.ari.201.8@gmail.com"">mu.h.a.m.m.a.dub.u.h.ari.201.8@gmail.com</a>
<a href=""mailto:muham.m.adub.uha.r.i20.1.8@gmail.com"">muham.m.adub.uha.r.i20.1.8@gmail.com</a>
<a href=""mailto:muh.a.mm.a.d.ubuha.ri20.1.8@gmail.com"">muh.a.mm.a.d.ubuha.ri20.1.8@gmail.com</a>
<a href=""mailto:muh.am.mad.ubuh.a.r.i2018@gmail.com"">muh.am.mad.ubuh.a.r.i2018@gmail.com</a>
<a href=""mailto:m.uham.m.adu.b.u.h.ar.i.2.0.18@gmail.com"">m.uham.m.adu.b.u.h.ar.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.a.d.u.bu.h.ar.i.2.01.8@gmail.com"">m.u.h.a.mm.a.d.u.bu.h.ar.i.2.01.8@gmail.com</a>
<a href=""mailto:muhamm.a.dubuhar.i.201.8@gmail.com"">muhamm.a.dubuhar.i.201.8@gmail.com</a>
<a href=""mailto:muh.ammad.ubu.har.i2018@gmail.com"">muh.ammad.ubu.har.i2018@gmail.com</a>
<a href=""mailto:m.u.ha.mm.a.dub.u.h.ar.i.20.1.8@gmail.com"">m.u.ha.mm.a.dub.u.h.ar.i.20.1.8@gmail.com</a>
<a href=""mailto:m.uhamm.a.dubu.har.i2.0.18@gmail.com"">m.uhamm.a.dubu.har.i2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.mmadu.buha.ri.2.0.18@gmail.com"">m.u.h.a.mmadu.buha.ri.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.amma.d.u.b.uh.a.r.i2.01.8@gmail.com"">m.uh.amma.d.u.b.uh.a.r.i2.01.8@gmail.com</a>
<a href=""mailto:m.uham.m.adu.b.uhari2018@gmail.com"">m.uham.m.adu.b.uhari2018@gmail.com</a>
<a href=""mailto:m.uh.a.mm.a.d.ub.uh.ari2.018@gmail.com"">m.uh.a.mm.a.d.ub.uh.ari2.018@gmail.com</a>
<a href=""mailto:m.u.h.am.m.a.du.bu.h.ari20.1.8@gmail.com"">m.u.h.am.m.a.du.bu.h.ari20.1.8@gmail.com</a>
<a href=""mailto:m.u.ham.mad.u.bu.h.ari.2018@gmail.com"">m.u.ham.mad.u.bu.h.ari.2018@gmail.com</a>
<a href=""mailto:muh.ammadub.u.h.ar.i2.0.1.8@gmail.com"">muh.ammadub.u.h.ar.i2.0.1.8@gmail.com</a>
<a href=""mailto:muh.amm.a.d.u.buha.ri201.8@gmail.com"">muh.amm.a.d.u.buha.ri201.8@gmail.com</a>
<a href=""mailto:mu.h.amm.adu.buh.a.r.i2.0.18@gmail.com"">mu.h.amm.adu.buh.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.ammad.u.bu.har.i.2.0.1.8@gmail.com"">mu.h.ammad.u.bu.har.i.2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.hamma.d.u.bu.har.i.2018@gmail.com"">m.u.hamma.d.u.bu.har.i.2018@gmail.com</a>
<a href=""mailto:m.uhamm.a.du.b.u.ha.r.i.2018@gmail.com"">m.uhamm.a.du.b.u.ha.r.i.2018@gmail.com</a>
<a href=""mailto:m.uham.ma.du.bu.h.ar.i.2.01.8@gmail.com"">m.uham.ma.du.bu.h.ar.i.2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.mmad.u.buh.a.r.i.20.1.8@gmail.com"">mu.h.a.mmad.u.buh.a.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.h.ammadub.u.h.ari2.018@gmail.com"">mu.h.ammadub.u.h.ari2.018@gmail.com</a>
<a href=""mailto:mu.ha.m.ma.dub.u.ha.r.i.20.1.8@gmail.com"">mu.ha.m.ma.dub.u.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:muha.m.m.ad.ubu.h.a.r.i2018@gmail.com"">muha.m.m.ad.ubu.h.a.r.i2018@gmail.com</a>
<a href=""mailto:m.uha.mma.dubuha.r.i2.0.18@gmail.com"">m.uha.mma.dubuha.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.amm.a.d.ubu.h.ari2.0.1.8@gmail.com"">mu.h.amm.a.d.ubu.h.ari2.0.1.8@gmail.com</a>
<a href=""mailto:muha.mm.adubuha.ri.2018@gmail.com"">muha.mm.adubuha.ri.2018@gmail.com</a>
<a href=""mailto:mu.h.a.m.mad.ub.u.har.i.2.018@gmail.com"">mu.h.a.m.mad.ub.u.har.i.2.018@gmail.com</a>
<a href=""mailto:m.uh.amm.a.du.b.uha.r.i.2.0.18@gmail.com"">m.uh.amm.a.du.b.uha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:muh.a.mmadu.b.u.h.a.ri.2.01.8@gmail.com"">muh.a.mmadu.b.u.h.a.ri.2.01.8@gmail.com</a>
<a href=""mailto:muh.a.mm.a.du.b.uha.r.i2.0.18@gmail.com"">muh.a.mm.a.du.b.uha.r.i2.0.18@gmail.com</a>
<a href=""mailto:m.uhammadu.b.uha.r.i2.0.18@gmail.com"">m.uhammadu.b.uha.r.i2.0.18@gmail.com</a>
<a href=""mailto:m.uha.m.m.ad.ubuhari.2.0.18@gmail.com"">m.uha.m.m.ad.ubuhari.2.0.18@gmail.com</a>
<a href=""mailto:mu.ham.m.a.d.u.b.u.h.ari.2.01.8@gmail.com"">mu.ham.m.a.d.u.b.u.h.ari.2.01.8@gmail.com</a>
<a href=""mailto:m.uhamm.a.d.u.b.uha.r.i20.18@gmail.com"">m.uhamm.a.d.u.b.uha.r.i20.18@gmail.com</a>
<a href=""mailto:mu.ham.ma.dub.u.h.a.r.i.2.018@gmail.com"">mu.ham.ma.dub.u.h.a.r.i.2.018@gmail.com</a>
<a href=""mailto:mu.ha.mmadu.bu.h.a.ri.201.8@gmail.com"">mu.ha.mmadu.bu.h.a.ri.201.8@gmail.com</a>
<a href=""mailto:muh.a.mm.adub.u.har.i2.0.1.8@gmail.com"">muh.a.mm.adub.u.har.i2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.am.m.adub.uha.ri.20.1.8@gmail.com"">mu.h.am.m.adub.uha.ri.20.1.8@gmail.com</a>
<a href=""mailto:muham.m.adu.b.u.ha.r.i.2.0.18@gmail.com"">muham.m.adu.b.u.ha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uhamm.ad.u.buh.ari2.018@gmail.com"">m.uhamm.ad.u.buh.ari2.018@gmail.com</a>
<a href=""mailto:m.uham.mad.ubuh.a.r.i.20.1.8@gmail.com"">m.uham.mad.ubuh.a.r.i.20.1.8@gmail.com</a>
<a href=""mailto:m.u.ham.m.a.dubu.h.ari.2.0.18@gmail.com"">m.u.ham.m.a.dubu.h.ari.2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.m.madu.bu.hari.2.01.8@gmail.com"">m.u.ha.m.madu.bu.hari.2.01.8@gmail.com</a>
<a href=""mailto:muh.am.m.a.d.u.bu.ha.r.i.2.018@gmail.com"">muh.am.m.a.d.u.bu.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:muha.mm.a.d.ub.u.h.a.r.i201.8@gmail.com"">muha.mm.a.d.ub.u.h.a.r.i201.8@gmail.com</a>
<a href=""mailto:mu.hamm.ad.u.b.u.ha.r.i.20.1.8@gmail.com"">mu.hamm.ad.u.b.u.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.ham.m.adub.uhar.i.2.0.1.8@gmail.com"">mu.ham.m.adub.uhar.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.ammad.u.bu.h.a.ri2.01.8@gmail.com"">mu.h.ammad.u.bu.h.a.ri2.01.8@gmail.com</a>
<a href=""mailto:mu.ha.mm.a.d.ubu.h.ari.2.018@gmail.com"">mu.ha.mm.a.d.ubu.h.ari.2.018@gmail.com</a>
<a href=""mailto:m.u.ha.m.m.ad.u.bu.har.i.2.0.18@gmail.com"">m.u.ha.m.m.ad.u.bu.har.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.mma.d.ub.u.h.ar.i2.0.18@gmail.com"">m.u.ha.mma.d.ub.u.h.ar.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.amma.dubu.h.a.ri2018@gmail.com"">mu.h.amma.dubu.h.a.ri2018@gmail.com</a>
<a href=""mailto:mu.ham.m.a.dub.u.h.ar.i.2.018@gmail.com"">mu.ham.m.a.dub.u.h.ar.i.2.018@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.a.d.ubuha.r.i.20.18@gmail.com"">m.u.h.a.m.m.a.d.ubuha.r.i.20.18@gmail.com</a>
<a href=""mailto:muha.mmadu.buhari.2.01.8@gmail.com"">muha.mmadu.buhari.2.01.8@gmail.com</a>
<a href=""mailto:muh.a.m.mad.ub.uh.ari2.018@gmail.com"">muh.a.m.mad.ub.uh.ari2.018@gmail.com</a>
<a href=""mailto:m.uha.mm.a.dubu.hari.20.1.8@gmail.com"">m.uha.mm.a.dubu.hari.20.1.8@gmail.com</a>
<a href=""mailto:muh.amm.ad.ub.u.h.a.r.i.2.018@gmail.com"">muh.amm.ad.ub.u.h.a.r.i.2.018@gmail.com</a>
<a href=""mailto:muh.am.madub.u.h.a.ri20.18@gmail.com"">muh.am.madub.u.h.a.ri20.18@gmail.com</a>
<a href=""mailto:mu.ham.ma.dub.u.ha.r.i.2.0.1.8@gmail.com"">mu.ham.ma.dub.u.ha.r.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.ha.m.madub.uh.a.ri20.1.8@gmail.com"">mu.ha.m.madub.uh.a.ri20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.madu.b.uhari.20.1.8@gmail.com"">mu.h.a.m.madu.b.uhari.20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.amma.du.b.u.h.ar.i2.018@gmail.com"">m.u.h.amma.du.b.u.h.ar.i2.018@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.a.d.ubu.ha.r.i.2.01.8@gmail.com"">m.u.h.a.mm.a.d.ubu.ha.r.i.2.01.8@gmail.com</a>
<a href=""mailto:mu.h.amm.a.du.bu.ha.ri20.18@gmail.com"">mu.h.amm.a.du.bu.ha.ri20.18@gmail.com</a>
<a href=""mailto:m.uh.amma.d.u.bu.ha.r.i.2.018@gmail.com"">m.uh.amma.d.u.bu.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:m.uhammad.ubuha.ri2.018@gmail.com"">m.uhammad.ubuha.ri2.018@gmail.com</a>
<a href=""mailto:m.uh.am.mad.ub.u.ha.r.i2.0.1.8@gmail.com"">m.uh.am.mad.ub.u.ha.r.i2.0.1.8@gmail.com</a>
<a href=""mailto:mu.ha.mm.a.d.ub.uhari.2.0.1.8@gmail.com"">mu.ha.mm.a.d.ub.uhari.2.0.1.8@gmail.com</a>
<a href=""mailto:muhamm.a.du.bu.h.ar.i.2.0.1.8@gmail.com"">muhamm.a.du.bu.h.ar.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.d.ub.u.h.ar.i20.1.8@gmail.com"">mu.h.a.mm.a.d.ub.u.h.ar.i20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.d.u.buh.ari.2.018@gmail.com"">mu.h.a.mm.a.d.u.buh.ari.2.018@gmail.com</a>
<a href=""mailto:m.uha.m.mad.u.b.u.h.a.ri2.01.8@gmail.com"">m.uha.m.mad.u.b.u.h.a.ri2.01.8@gmail.com</a>
<a href=""mailto:muhamm.a.du.b.uh.ari.2.0.1.8@gmail.com"">muhamm.a.du.b.uh.ari.2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.mmadu.bu.ha.r.i.20.1.8@gmail.com"">m.u.h.a.mmadu.bu.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.ham.m.adu.b.u.har.i.2.018@gmail.com"">mu.ham.m.adu.b.u.har.i.2.018@gmail.com</a>
<a href=""mailto:muh.am.m.a.du.buh.a.ri.2.018@gmail.com"">muh.am.m.a.du.buh.a.ri.2.018@gmail.com</a>
<a href=""mailto:mu.h.am.m.ad.ub.uha.ri.201.8@gmail.com"">mu.h.am.m.ad.ub.uha.ri.201.8@gmail.com</a>
<a href=""mailto:muh.a.m.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com"">muh.a.m.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.ha.m.ma.d.ubuh.a.ri.201.8@gmail.com"">mu.ha.m.ma.d.ubuh.a.ri.201.8@gmail.com</a>
<a href=""mailto:m.uha.m.madu.b.u.ha.r.i.2.01.8@gmail.com"">m.uha.m.madu.b.u.ha.r.i.2.01.8@gmail.com</a>
<a href=""mailto:m.u.h.amm.adub.uh.ari2.0.1.8@gmail.com"">m.u.h.amm.adub.uh.ari2.0.1.8@gmail.com</a>
<a href=""mailto:muhamma.d.u.b.uh.a.r.i.2.0.1.8@gmail.com"">muhamma.d.u.b.uh.a.r.i.2.0.1.8@gmail.com</a>
<a href=""mailto:m.uh.a.mm.a.dubu.har.i2.018@gmail.com"">m.uh.a.mm.a.dubu.har.i2.018@gmail.com</a>
<a href=""mailto:muha.mmadub.u.ha.ri2.0.18@gmail.com"">muha.mmadub.u.ha.ri2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.mma.d.u.buh.a.r.i.2.0.1.8@gmail.com"">m.u.ha.mma.d.u.buh.a.r.i.2.0.1.8@gmail.com</a>
<a href=""mailto:muham.ma.du.bu.ha.ri.2.0.1.8@gmail.com"">muham.ma.du.bu.ha.ri.2.0.1.8@gmail.com</a>
<a href=""mailto:muh.am.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com"">muh.am.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.am.m.adu.b.u.h.a.r.i2.0.18@gmail.com"">mu.h.am.m.adu.b.u.h.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.a.m.m.a.du.bu.hari2.0.18@gmail.com"">mu.h.a.m.m.a.du.bu.hari2.0.18@gmail.com</a>
<a href=""mailto:m.u.hamm.ad.u.b.u.h.a.r.i.20.1.8@gmail.com"">m.u.hamm.ad.u.b.u.h.a.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.ha.m.m.a.d.ubuh.ari20.1.8@gmail.com"">mu.ha.m.m.a.d.ubuh.ari20.1.8@gmail.com</a>
<a href=""mailto:muha.m.madu.b.u.ha.ri.2.01.8@gmail.com"">muha.m.madu.b.u.ha.ri.2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.ma.d.ub.uh.ar.i.2.018@gmail.com"">mu.h.a.m.ma.d.ub.uh.ar.i.2.018@gmail.com</a>
<a href=""mailto:mu.h.a.mma.d.ub.u.har.i.2018@gmail.com"">mu.h.a.mma.d.ub.u.har.i.2018@gmail.com</a>
<a href=""mailto:mu.hamm.a.d.ub.u.hari2.01.8@gmail.com"">mu.hamm.a.d.ub.u.hari2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.m.ad.u.b.uh.a.ri2018@gmail.com"">mu.h.a.m.m.ad.u.b.uh.a.ri2018@gmail.com</a>
<a href=""mailto:muh.amm.a.du.b.uha.r.i.20.1.8@gmail.com"">muh.amm.a.du.b.uha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:muh.a.mm.a.du.bu.har.i2.0.1.8@gmail.com"">muh.a.mm.a.du.bu.har.i2.0.1.8@gmail.com</a>
<a href=""mailto:m.uh.am.ma.d.u.bu.har.i.201.8@gmail.com"">m.uh.am.ma.d.u.bu.har.i.201.8@gmail.com</a>
<a href=""mailto:m.u.h.am.m.adub.uhar.i.2.0.18@gmail.com"">m.u.h.am.m.adub.uhar.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.d.u.buhari2.0.18@gmail.com"">m.uh.a.m.m.a.d.u.buhari2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.m.madub.u.ha.r.i.20.1.8@gmail.com"">m.u.h.a.m.madub.u.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.dub.uh.ar.i.2.0.18@gmail.com"">mu.h.a.mm.a.dub.uh.ar.i.2.0.18@gmail.com</a>
<a href=""mailto:muham.mad.u.bu.hari.2.018@gmail.com"">muham.mad.u.bu.hari.2.018@gmail.com</a>
<a href=""mailto:mu.h.a.mmad.ub.u.h.ar.i.2018@gmail.com"">mu.h.a.mmad.ub.u.h.ar.i.2018@gmail.com</a>
<a href=""mailto:mu.hamma.d.u.b.uha.r.i.20.1.8@gmail.com"">mu.hamma.d.u.b.uha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:m.uh.am.m.ad.u.b.u.h.a.ri20.1.8@gmail.com"">m.uh.am.m.ad.u.b.u.h.a.ri20.1.8@gmail.com</a>
<a href=""mailto:m.u.hamm.ad.u.b.uh.a.ri2.0.1.8@gmail.com"">m.u.hamm.ad.u.b.uh.a.ri2.0.1.8@gmail.com</a>
<a href=""mailto:m.uhamm.adub.u.h.a.r.i.2.01.8@gmail.com"">m.uhamm.adub.u.h.a.r.i.2.01.8@gmail.com</a>
<a href=""mailto:m.u.h.am.madu.b.uha.ri2.01.8@gmail.com"">m.u.h.am.madu.b.uha.ri2.01.8@gmail.com</a>
<a href=""mailto:m.uh.a.m.ma.d.ubu.ha.ri201.8@gmail.com"">m.uh.a.m.ma.d.ubu.ha.ri201.8@gmail.com</a>
<a href=""mailto:mu.h.am.m.a.d.u.bu.h.ar.i201.8@gmail.com"">mu.h.am.m.a.d.u.bu.h.ar.i201.8@gmail.com</a>
<a href=""mailto:muha.mmadu.buhar.i201.8@gmail.com"">muha.mmadu.buhar.i201.8@gmail.com</a>
<a href=""mailto:muh.a.mm.ad.u.b.uhar.i2.018@gmail.com"">muh.a.mm.ad.u.b.uhar.i2.018@gmail.com</a>
<a href=""mailto:m.u.ha.mma.d.ubuh.ari.2018@gmail.com"">m.u.ha.mma.d.ubuh.ari.2018@gmail.com</a>
<a href=""mailto:m.uh.amma.d.u.buhar.i.2.01.8@gmail.com"">m.uh.amma.d.u.buhar.i.2.01.8@gmail.com</a>
<a href=""mailto:m.uh.am.ma.du.bu.ha.r.i.2.0.18@gmail.com"">m.uh.am.ma.du.bu.ha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uhamma.d.u.b.u.h.ar.i20.18@gmail.com"">m.uhamma.d.u.b.u.h.ar.i20.18@gmail.com</a>
<a href=""mailto:muh.am.ma.d.u.bu.har.i.20.1.8@gmail.com"">muh.am.ma.d.u.bu.har.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mmad.ubuh.ar.i.2.0.18@gmail.com"">mu.h.a.mmad.ubuh.ar.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.ammad.u.bu.har.i20.1.8@gmail.com"">m.u.h.ammad.u.bu.har.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.am.m.adu.buha.ri.2.0.1.8@gmail.com"">m.u.h.am.m.adu.buha.ri.2.0.1.8@gmail.com</a>
<a href=""mailto:muh.a.m.mad.ubuh.a.ri.2.0.18@gmail.com"">muh.a.m.mad.ubuh.a.ri.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.du.bu.h.a.r.i.201.8@gmail.com"">m.uh.a.m.m.a.du.bu.h.a.r.i.201.8@gmail.com</a>
<a href=""mailto:muham.m.ad.u.buha.r.i.201.8@gmail.com"">muham.m.ad.u.buha.r.i.201.8@gmail.com</a>
<a href=""mailto:muh.a.mmadu.b.uh.ar.i.201.8@gmail.com"">muh.a.mmadu.b.uh.ar.i.201.8@gmail.com</a>
<a href=""mailto:muha.mma.d.ub.uh.ar.i20.1.8@gmail.com"">muha.mma.d.ub.uh.ar.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.mma.d.ub.u.h.a.ri201.8@gmail.com"">m.u.h.a.mma.d.ub.u.h.a.ri201.8@gmail.com</a>
<a href=""mailto:muhamm.a.du.buha.r.i.2018@gmail.com"">muhamm.a.du.buha.r.i.2018@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.dubu.ha.r.i.20.1.8@gmail.com"">m.uh.a.m.m.a.dubu.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:muham.m.ad.u.bu.ha.r.i2.018@gmail.com"">muham.m.ad.u.bu.ha.r.i2.018@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.d.u.b.uh.ari201.8@gmail.com"">mu.h.a.mm.a.d.u.b.uh.ari201.8@gmail.com</a>
<a href=""mailto:mu.ha.m.m.a.d.ubu.h.a.r.i20.1.8@gmail.com"">mu.ha.m.m.a.d.ubu.h.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:muh.a.m.m.a.dub.uhari2018@gmail.com"">muh.a.m.m.a.dub.uhari2018@gmail.com</a>
<a href=""mailto:mu.h.a.mmadub.u.ha.ri2.01.8@gmail.com"">mu.h.a.mmadub.u.ha.ri2.01.8@gmail.com</a>
<a href=""mailto:mohammadubuhari000@msn.com"">mohammadubuhari000@msn.com</a>
<a href=""mailto:inf.imfoffice001@yahoo.com"">inf.imfoffice001@yahoo.com</a>
<a href=""mailto:infcbnpaymaster@emailn.de"">infcbnpaymaster@emailn.de</a>"
e4hkXDqv,C#_3_subarray_duplicates_numbers,Legiomax,C#,Saturday 27th of January 2024 08:58:13 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int lowRangeRandom = 5;
            int highRangeRandom = 10;
            int duplicatesNum = lowRangeRandom;
            int localCountDuplicates = 1;
            int maxCountDuplicates = 1;

            int[] numbers = new int[30];

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(lowRangeRandom, highRangeRandom);
            }

            Console.WriteLine(""Исходная матрица.\n"");

            for (int i = 0; i < numbers.Length; i++)
            {
                Console.Write(numbers[i] + "" "");
            }

            for (int i = 0; i < numbers.Length - 1; i++)
            {
                if (numbers[i] != numbers[i+1])
                {
                    localCountDuplicates = 1;
                }
                else
                {
                    localCountDuplicates += 1;
                    if (localCountDuplicates > maxCountDuplicates)
                    {
                        duplicatesNum = numbers[i];
                        maxCountDuplicates += 1;
                    }
                }
            }

            Console.WriteLine($""\nСамая длинная строка повторов:\n{duplicatesNum}\n"" +
                $""Число повторов:\n{maxCountDuplicates}"");
            Console.ReadKey();
        }
    }
}
"
j0z9Hb7E,Diesel,Molipow,Lua,Saturday 27th of January 2024 08:57:48 AM CDT,"local event = require(""event"")
local component = require(""component"")
local term = require('term')

local gpu = component.gpu

if(component.isAvailable(""ie_diesel_generator"")) then
	dies = component.ie_diesel_generator
else
	print(""[ERROR] Diesel generator not connected!"")
	os.exit()
end

if(component.isAvailable(""elite_energy_cube"")) then
	primary = component.getPrimary(""elite_energy_cube"")
else
	print(""[ERROR] Battery not connected!"")
	os.exit()
end

local gate_iter = component.list('elite_energy_cube')
local bat1, bat2 = component.proxy(gate_iter()), component.proxy(gate_iter())

if(component.isAvailable(""tank_controller"")) then
	tank = component.tank_controller
	side = 3
end

oldw, oldh = gpu.getResolution()

gpu.setResolution(80, 25)

w, h = gpu.getResolution()

gpu.fill(1, 1, w, h, "" "")

dies.enableComputerControl(true)

auto = true
genRunning = true

startTreshold = 1000000

--function startup()

--	showPanel()
	
--end

function showPanel(x, y, a, b, color)
	gpu.setForeground(color)
	gpu.set(x, y, '┌'..string.rep('─', a-2)..'┐')
	gpu.set(x, y+1, string.rep('│', b-2), true)
	gpu.set(x+a-1, y+1, string.rep('│', b-2), true)
	gpu.set(x, y+b-1, '└'..string.rep('─', a-2)..'┘')
end

function render()
	showPanel(1, 1, w, h, 0x00FFFF)
	gpu.setForeground(0x00FFFF)
	gpu.set(2, 2, ""First Energy Storage Status"")
	stored = primary.getEnergyStored()
	ratio = stored/primary.getMaxEnergyStored()
	if(ratio < 1/3) then
		gpu.setForeground(0xFF0000)
	elseif (ratio > 2/3) then
		gpu.setForeground(0x00FF00)
	else
		gpu.setForeground(0xFFFF00)
	end
	gpu.set(2, 3, string.rep('|', math.floor(15 * ratio)) .. string.rep(' ', 15 - math.floor(15 * ratio)))
	gpu.set(2, 4, primary.getEnergyStored() .. 'RF/' .. primary.getMaxEnergyStored() .. 'RF     ')
	
	gpu.setForeground(0x00FFFF)
	gpu.set(2, 5, ""Last Energy Storage Status"")
	stored = bat1.getEnergyStored()
	ratio = stored/bat1.getMaxEnergyStored()
	if(ratio < 1/3) then
		gpu.setForeground(0xFF0000)
	elseif (ratio > 2/3) then
		gpu.setForeground(0x00FF00)
	else
		gpu.setForeground(0xFFFF00)
	end
	gpu.set(2, 6, string.rep('|', math.floor(15 * ratio)) .. string.rep(' ', 15 - math.floor(15 * ratio)))
	gpu.set(2, 7, bat1.getEnergyStored() .. 'RF/' .. bat1.getMaxEnergyStored() .. 'RF     ')
	
	gpu.setForeground(0x00FFFF)
	gpu.set(w/2, 2, ""Diesel Generator Status"")
	if(genRunning) then
		if(dies.getTankInfo().amount < 10) then
			gpu.setForeground(0xFF0000)
			gpu.set(w/2, 3, ""OUT OF FUEL!"")
		else
			gpu.setForeground(0x00FF00)
			gpu.set(w/2, 3, ""RUNNING"")
		end
	else
		gpu.setForeground(0xFF0000)
		gpu.set(w/2, 3, ""STOPPED"")
	end
	gpu.setForeground(0x00FFFF)
	gpu.set(w/2, h-3, ""Mode"")
	if(auto) then
		gpu.setForeground(0x00FF00)
		gpu.set(w/2, h-2, ""AUTO  "")
	else
		gpu.setForeground(0xFF0000)
		gpu.set(w/2, h-2, ""MANUAL"")
	end
	
	gpu.setForeground(0x00FFFF)
	
	gpu.set(w/2, 5, ""Internal tank status"")
	gpu.set(w/2, 6, dies.getTankInfo().amount .. 'mB/' .. dies.getTankInfo().capacity .. 'mB   ')
	gpu.setForeground(0x662400)
	gpu.set(w/2, 7, string.rep('|', math.floor(15 * dies.getTankInfo().amount/ dies.getTankInfo().capacity)) .. string.rep(' ', 15 - math.floor(15 * dies.getTankInfo().amount/ dies.getTankInfo().capacity)))
	
	gpu.setForeground(0x00FFFF)
	if(tank ~= nil) then
		gpu.set(2, 8, ""Diesel tank status"")
		gpu.set(2, 9, tank.getTankLevel(side) .. 'mB/' .. tank.getTankCapacity(side) .. 'mB   ')
		gpu.setForeground(0x662400)
		gpu.set(2, 10, string.rep('|', math.floor(15 * tank.getTankLevel(side)/ tank.getTankCapacity(side))) .. string.rep(' ', 15 - math.floor(15 * tank.getTankLevel(side)/ tank.getTankCapacity(side))))
	end
	gpu.setForeground(0x00FFFF)
	gpu.set(w/2, 8, ""Start generator treshold"")
	gpu.set(w/2, 9, tostring(startTreshold))
	
	if(auto) then 
		showPanel(2, h-5, 16, 5, 0xFF0000) 
		gpu.fill(w/2, 10, 20, 5, ' ')
	else 
		showPanel(2, h-5, 16, 5, 0x00FF00) 
		showPanel(w/2, 10, 20, 5, 0x00FFFF)
		gpu.set(w/2+1, 12, ""TOGGLE GENERATOR"")
	end
	gpu.setForeground(0xFFFFFF)
	gpu.set(4, h-3, ""TOGGLE MODE"")
	gpu.setBackground(0xFF0000)
	gpu.fill(w-17 , h-5, 16, 5, ' ')
	showPanel(w-17 , h-5, 16, 5, 0x000000)
	gpu.set(w-13, h-3, ""SHUTDOWN"")
	gpu.setBackground(0x000000)
end

function quit()
	dies.enableComputerControl(false)
	gpu.fill(1, 1, w, h, "" "")
	gpu.setResolution(oldw, oldh)
	term.setCursor(1, 1)
	os.exit()
end

repeat
	if(auto) then
		if(bat1.getEnergyStored() < startTreshold) then
			dies.setEnabled(true)
			genRunning = true
		end
		if(primary.getEnergyStored() >= primary.getMaxEnergyStored() - 100000) then
			dies.setEnabled(false)
			genRunning = false
		end
	end
	render()
	local name, arg, x, y = event.pull(1)
	if(name == ""touch"") then
		--Toggle mode
		if(2 <= x and x <= 16 and 20 <= y and y <= 24) then
			auto = not auto
		end
		if(not auto) then
			if(w/2 <= x and x <= w/2+20 and 10 <= y and y <= 15) then
				genRunning = not genRunning
				dies.setEnabled(genRunning)
			end
		end
		if(w-17 <= x and x <= w-1 and 20 <= y and y <= 24) then
			quit()
		end
	end
until name == ""interrupted""

quit()"
FmjpTHsN,pals,desislava_shunina,C++,Saturday 27th of January 2024 08:53:24 AM CDT,"#include <iostream>
using namespace std;

int reverseNum(int num)
{
    int res = 0;
    while (num)
    {
        res *= 10;
        res += num % 10;
        num /= 10;
    }

    return res;
}

int removeTheFirstDigit(int num)
{
    int reversed = reverseNum(num);
    reversed /= 10;
    reversed = reverseNum(reversed);

    return reversed;
}

bool isPalindrome(int num)
{
    return num == reverseNum(num);
}

bool couldBePalindrome(int num)
{
    if (num < 10)
        return false;

    if (isPalindrome(num))
        return true;

    return (couldBePalindrome(removeTheFirstDigit(num)) || couldBePalindrome(num / 10));
}

int main()
{
    cout << couldBePalindrome(1234355) << endl;
    cout << couldBePalindrome(1234) << endl;
    return 0;
}"
JJWG1ZEy,Antihero,psychoticodes,HTML,Saturday 27th of January 2024 08:46:35 AM CDT,"<link href=""https://dl.dropboxusercontent.com/s/kent8bovzps4zd0/antihero.css?dl=0"" rel=""stylesheet""><center><div id=""anth"" style=""background:url('https://via.placeholder.com/90x90')center/cover; --bd1:#000;--bd2:#ccc;""><a href=""https://is.gd/gasper""><div id=""anth"" class=""aher"" style=""background:url('https://via.placeholder.com/90x90')center/cover;margin:-4px;""></div></a></div></center>"
