id,title,username,language,date,content
cNeX56mP,ffmpegStripAudioMetadata,jcunews,Batch,Sunday 1st of October 2023 06:58:08 AM CDT,"@echo off
setlocal

rem Context: https://old.reddit.com/r/software/comments/16wuuo1/old_qobuz_downloader_software/

if ""%~1"" == """" (
  echo Drag and drop onto this batch file,
  echo an audio file or a folder which *directly* contain audio files.
  pause
  goto :eof
)
if not exist %1 (
  echo File/folder is not found: ""%~1""
  pause
  goto :eof
)
2>nul cd /d %1
if errorlevel 1 (
  rem file was given
  ""%~dp0\ffmpeg.exe"" -hide_banner -i %1 -vn -acodec copy -map_metadata 0 -y ""%~dpn1 out%~x1""
  if not exist ""%~dpn1 out%~x1"" (
    echo Non media file was given?
    pause
  )
  goto :eof
)
rem folder was given. process WAV files
set c=0
for %%A in (*.wav) do (
  set c=1
  ""%~dp0\ffmpeg.exe"" -hide_banner -i ""%%~fA"" -vn -acodec copy -map_metadata 0 -y ""%%~dpnA out%%~xA""
)
if %c% == 0 (
  echo No WAV files in folder: ""%~1""
  pause
)
"
4RiG0VNf,MOK layout Tausug,dksetiavan,YAML,Sunday 1st of October 2023 06:49:57 AM CDT,"{
""title"":""Tausug"",
""onScreen"":{
""main"":[
""١٢٣٤٥٦٧٨٩٠"",
""ڠورتيَُِف"",
""اسدْگهجکل"",
""[SHIFT]زأئؤبنم[DEL]"",
""[TOOL][ALTGR:،][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ"",
""عةظطيًٌٍق"",
""ءشذّغحخكل"",
""[SHIFT]زـصضثنم[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""sym"":[
""!@#$۞٪&*)(۝"",
""]}{\/_-=|+۩["",
""~؎﷼£¥€:؛'ʺ٭"",
""[SHIFT]؟…؏؞«»,.?[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""1234567890"",
"">‎‏‭‮‬‪‫ <"",
""°•ىـ−ٱۤ،﴾﴿;"",
""[SHIFT]ٰٖٜٗ؍٫٬‐۔[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
zbn1Ri8e,named later,rfq,Bash,Sunday 1st of October 2023 06:42:43 AM CDT,"find ""stroke"" ""non stroke"" -type f -iname ""*.txt"" -exec sh -c 'txt=""{}""; txt_basename=$(basename ""$txt"" .txt); img=$(find ""FOLDER_GAMBAR"" -type f -iname ""$txt_basename.*""); [ -n ""$img"" ] && cp ""$img"" ""$(dirname ""$txt"")""/' \;"
2WBg2421,MergeSort,Korotkodul,C++,Sunday 1st of October 2023 06:24:23 AM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

int inv = 0;

vector<int> MergeSort(vector<int> ar) {
  int len = ar.size();
  if (len == 1) {
    return ar;
  }
  vector<int> lt;
  vector<int> rt;
  for (int id = 0; id < len / 2; ++id) {
    lt.push_back(ar[id]);
  }
  for (int id = len / 2; id < len; ++id) {
    rt.push_back(ar[id]);
  }
  lt = MergeSort(lt);
  rt = MergeSort(rt);
  int ln = lt.size();
  int rn = rt.size();
  int lid = 0;
  int rid = 0;
  vector<int> res;
  while (lid < ln || rid < rn) {
    if (lid < ln && rid < rn) {
      if (lt[lid] <= rt[rid]) {
        res.push_back(lt[lid]);
        lid++;
      } else {
        res.push_back(rt[rid]);
        rid++;
        inv += ln - lid;
      }
    } else if (lid < ln) {
      res.push_back(lt[lid]);
      lid++;

    } else if (rid < rn) {
      res.push_back(rt[rid]);
      rid++;
    }
  }
  return res;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  int len;
  cin >> len;
  vector<int> ar(len);
  for (int& el : ar) {
    cin >> el;
  }
  ar = MergeSort(ar);
  /*for (int el: ar) {
    cout << el << ' ';
  }
  cout << ""\n"";*/
  cout << inv << ""\n"";
}
"
3PL4H9xA,JPanel template #1,mullerdaniil,Java,Sunday 1st of October 2023 06:19:03 AM CDT,"package org.example;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class Panel extends JPanel {
    private static final Dimension WINDOW_SIZE = new Dimension(800, 600);
    private static final Color WINDOW_BACKGROUND_COLOR = new Color(0, 0, 64);
    private static final String WINDOW_NAME = ""WINDOW_NAME"";
    private static final int TIMER_DELAY = 10;

    public static void main(String[] args) {
        new Panel();
    }

    public Panel() {
        setupFrameAndPanel();
        new Timer(TIMER_DELAY, new TimerListener()).start();
    }


    private class TimerListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            //
        }
    }

    private class KeyListener extends KeyAdapter {
        @Override
        public void keyPressed(KeyEvent e) {
            int keyCode = e.getKeyCode();

            //
        }

        @Override
        public void keyReleased(KeyEvent e) {
            int keyCode = e.getKeyCode();

            //
        }
    }

    private class MouseListener extends MouseAdapter {
        //
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
		
		//
    }

    private void setupFrameAndPanel() {
        var frame = new JFrame(WINDOW_NAME);
        frame.setSize(WINDOW_SIZE);
        setFocusTraversalKeysEnabled(true);
        setFocusable(true);
        addKeyListener(new KeyListener());
        addMouseListener(new MouseListener());
        frame.add(this);
        setBackground(WINDOW_BACKGROUND_COLOR);
        frame.setResizable(true);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}"
1dxUH37S,data712,TestGuy1,JSON,Sunday 1st of October 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c7135fb47d5e653f7a2e56bb15b7ccc55d4c2387859a1fb30506cad300f7906e19f3f09ba5be09e3676b7be8975d5ad53728d454df9e7d2ee71726de5f1fa4fa001ec42a6ce769b13079a56afbb8c214a595665f0baf350d087fd0c60474e9d1a987091175e3ad8584b257f8543d990c9ba309514b42884de38aa9543ecb3fb2',
  otherdata: [
    '77213840cb51bc032ed60e68be115773',
    '52fc10c55589e86a288d89cea62e455a',
    'd5a3d396a6497ab4a618d3dfc0cd5528',
    '20aba52754fd46de93a28a333857cc48',
    '874312a552d2b0fdf4ab1bf851f733db',
    'de68b8704c7ad67ace31aa7f62f7b6bd',
    'ea9fc6300196cab1d78968b3001e08ed',
    'dcbf8b007e30499aa3b0636d95005562'
  ]
}"
drVjM0S3,Покрытие,Korotkodul,C++,Sunday 1st of October 2023 05:55:03 AM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

int inv = 0;
int len;
int knum;
vector<int> ar;

vector<int> MergeSort(vector<int> ar) {
  int len = ar.size();
  if (len == 1) {
    return ar;
  }
  vector<int> lt;
  vector<int> rt;
  for (int id = 0; id < len / 2; ++id) {
    lt.push_back(ar[id]);
  }
  for (int id = len / 2; id < len; ++id) {
    rt.push_back(ar[id]);
  }
  lt = MergeSort(lt);
  rt = MergeSort(rt);
  int ln = lt.size();
  int rn = rt.size();
  int lid = 0;
  int rid = 0;
  vector<int> res;
  while (lid < ln || rid < rn) {
    if (lid < ln && rid < rn) {
      if (lt[lid] <= rt[rid]) {
        res.push_back(lt[lid]);
        lid++;
      } else {
        res.push_back(rt[rid]);
        rid++;
        inv += ln - lid;
      }
    } else if (lid < ln) {
      res.push_back(lt[lid]);
      lid++;

    } else if (rid < rn) {
      res.push_back(rt[rid]);
      rid++;
    }
  }
  return res;
}

bool Check(int md) {
  int left = 0;
  int cnt = knum;
  for (int id = 1; id < len; ++id) {
    if (ar[id] - ar[left] <= md) {
      continue;
    }
    cnt--;
    left = id;
  }
  return cnt >= 0;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  cin >> len >> knum;
  ar.resize(len);
  for (int& el : ar) {
    cin >> el;
  }
  ar = MergeSort(ar);
  int lt = 1;
  int rt = ar[len - 1] - ar[0];
  int md;
  while (rt - lt > 1) {
    md = (lt + rt) / 2;
    bool ok = Check(md);
    if (ok) {
      rt = md;
    } else {
      lt = md;
    }
  }
  cout << rt;
}
"
wSB9g2Di,starter code for ap/cc:,morganday,Lua,Sunday 1st of October 2023 05:44:52 AM CDT,"--orn code maked by morgaton on discord. read bottem part for more info
local perfix = ""bot"" 
local brakits = ""[]"" 
-- ^  [bot] wallubo bot

local wc1 = ""test1"" -- word check 1
local rs1 = ""test1 check"" -- responds 1
-- ect

local wc2 = ""test2""
local rs2 = ""test2 check""

local wc3 = ""test3""
local rs3 = ""test3 check""

local cb = peripheral.find(""chatBox"") -- looking for a chatBox™ defineing cb as the chatBox™ that we just found
while(true)
do

 local event,  un, ms = os.pullEvent(""chat"") -- un = username. ms = message
 if ms == wc1
then
cb.sendMessage(rs1, perfix, brakits) -- gets all the shit and smashs it together 

elseif ms == wc2
then
cb.sendMessage(rs2, perfix, brakits)

elseif ms == wc3
then
cb.sendMessage(rs3, perfix, brakits)

 end
end 
-- feel free to edit or reupload my code just dont remove my thing at the top or credit me
-- this was maked for cc: and ap on minecraft"
njdSLtuB,Login,Dominikus_22,PHP,Sunday 1st of October 2023 05:31:12 AM CDT,"<?php include_once('head.php'); ?>


<style>

.form-control-feedback {
  
   pointer-events: auto;
  
}


.msk-set-color-tooltip + .tooltip > .tooltip-inner { 
  
     min-width:180px;
	 background-color:red;
}

.bg{
	width:100%;
	height:100%;
}

#loginFrom{
	opacity:0.6;	
}

body{
	background-color:#fef492;
}

</style>
<body onLoad=""login()"">
	<img src=""../uploads/bg.jpg"" class=""bg"" />
	
	<!--Success! - Insert-->
  	<div class=""modal fade"" id=""loginFrom"" tabindex=""-1"" role=""dialog"" aria-labelledby=""loginFrom"" aria-hidden=""true"">
    	<div class=""modal-dialog"">    
        	<div class=""modal-content "">
        		<div class=""modal-header bg-aqua-gradient"">
          			<h4>User Login...!</h4>
        		</div>
        		<div class=""modal-body bgColorWhite"">
        			<form role=""form"" action=""../index.php"" method=""post"">                    
                  		<div class=""box-body"">
                    		<div class=""form-group"" id=""divEmail"">
                      			<label for="""">Email</label>
                      			<input type=""text"" class=""form-control"" id=""email"" placeholder=""Enter email address"" name=""email"" autocomplete=""off"">
                    		</div>
                            <div class=""form-group"" id=""divPassword"">
                      			<label for="""">Password</label>
                      			<input type=""password"" class=""form-control"" id=""password"" placeholder=""Enter password"" name=""password"" autocomplete=""off"">
                    		</div>
                  		</div><!-- /.box-body -->
                  		<div class=""box-footer"">
                  			<input type=""hidden"" name=""do"" value=""user_login"" />
                    		<button type=""submit"" class=""btn btn-info"" id=""btnSubmit"">Submit</button>
                  		</div>
                	</form>
        		</div>
      		</div>      
		</div>
	</div><!--/.Modal--> 

<script>

function login(){
//document.ready(function{	
	
	$('#loginFrom').modal({
		backdrop: 'static',
		keyboard: false
	});
	$('#loginFrom').modal('show');
};

$(""form"").submit(function (e) {
//MSK-000098-form submit	

	var uname = $('#email').val();
	var password = $('#password').val();
	
	if(uname == ''){
		//MSK-00099-name
		$(""#btnSubmit"").attr(""disabled"", true);
		$('#divEmail').addClass('has-error has-feedback');	
		$('#divEmail').append('<span id=""spanEmail"" class=""glyphicon glyphicon-remove form-control-feedback msk-set-color-tooltip"" data-toggle=""tooltip""    title=""The user name is required"" ></span>');	
			
		$(""#email"").keydown(function() {
			//MSK-00100-name
			$(""#btnSubmit"").attr(""disabled"", false);	
			$('#divEmail').removeClass('has-error has-feedback');
			$('#spanEmail').remove();
			
		});	
		
	}
	
	if(password == ''){
		//MSK-00099-name
		$(""#btnSubmit"").attr(""disabled"", true);
		$('#divPassword').addClass('has-error has-feedback');	
		$('#divPassword').append('<span id=""spanPassword"" class=""glyphicon glyphicon-remove form-control-feedback msk-set-color-tooltip"" data-toggle=""tooltip""    title=""The password is required"" ></span>');	
			
		$(""#password"").keydown(function() {
			//MSK-00100-name
			$(""#btnSubmit"").attr(""disabled"", false);	
			$('#divPassword').removeClass('has-error has-feedback');
			$('#spanPassword').remove();
			
		});	
		
	}
	
	
	if(uname == '' || password == ''){
		//MSK-000098- form validation failed
		$(""#btnSubmit"").attr(""disabled"", true);
		e.preventDefault();
		return false;
			
	}else{
		$(""#btnSubmit"").attr(""disabled"", false);
		
	}


});
</script>

<!--Warnning! - Email or Password is Incorrect-->
	<div class=""modal fade"" id=""login_error"" tabindex=""-1"" role=""dialog"" aria-labelledby=""insert_alert1"" aria-hidden=""true"">
    	<div class=""modal-dialog"">    
      		<div class=""modal-content"">
        		<div class=""modal-header bg-red-active"">
          			<button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true""><span class=""glyphicon glyphicon-remove"" aria-hidden=""true""></span></button>
          			<h4>Information...!</h4>
        		</div>
        		<div class=""modal-body bgColorWhite"">
        			<strong style=""color:red; font-size:14px"">Warnning!</strong> Email or Password is Incorrect.
        		</div>
			</div>
		</div>
	</div><!--/.Modal-->


<?php
if(isset($_GET[""do""])&&($_GET[""do""]==""login_error"")){
//MSK-000143-6-PHP-JS-INSERT
 
	$msg=$_GET['msg'];
	
	if($msg==1){
		echo""
			<script>
			
			var myModal = $('#login_error');
			myModal.modal('show');
			
    		myModal.data('hideInterval', setTimeout(function(){
    			myModal.modal('hide');
    		}, 3000));
						
			</script>
		"";
	
	}
	
}
?>

<!--redirect your own url when clicking browser back button -->
<script>
(function(window, location) {
history.replaceState(null, document.title, location.pathname+""#!/history"");
history.pushState(null, document.title, location.pathname);

window.addEventListener(""popstate"", function() {
  if(location.hash === ""#!/history"") {
    history.replaceState(null, document.title, location.pathname);
    setTimeout(function(){
      location.replace(""../index.php"");//path to when click back button
    },0);
  }
}, false);
}(window, location));
</script>
</body>"
dRKcMzAq,snowybot,coinwalk,JavaScript,Sunday 1st of October 2023 05:30:02 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/144000).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();"
1hec54SU,detect  fonts in .docx files,nicuf,Python,Sunday 1st of October 2023 05:12:34 AM CDT,"import docx

def run_get_style(run) -> str:
    if run.bold and run.italic:
        return ""bold-italic""
    elif run.bold:
        return ""bold""
    elif run.italic:
        return ""italic""
    else:
        return ""normal""

def convert_docx_to_html_style(para):
    result = """"
    if para.runs:
        html_para = '<p>'
        current_style = None
        current_text = """"

        for run in para.runs:
            run_style = run_get_style(run)
            if run_style == current_style:
                current_text += run.text
            else:
                if current_style:
                    if ""bold"" in current_style:
                        html_para += '<b>'
                    if ""italic"" in current_style:
                        html_para += '<em>'
                    html_para += current_text
                    if ""italic"" in current_style:
                        html_para += '</em>'
                    if ""bold"" in current_style:
                        html_para += '</b>'
                current_style = run_style
                current_text = run.text

        if current_style:
            if ""bold"" in current_style:
                html_para += '<b>'
            if ""italic"" in current_style:
                html_para += '<em>'
            html_para += current_text
            if ""italic"" in current_style:
                html_para += '</em>'
            if ""bold"" in current_style:
                html_para += '</b>'

        html_para += '</p>\n'
        result += html_para
    return result

# Exemplu de utilizare:
document = docx.Document(""bebe.docx"")  # Înlocuiți cu numele fișierului DOCX
for paragraph in document.paragraphs:
    converted_paragraph = convert_docx_to_html_style(paragraph)
    print(converted_paragraph)
"
vJwFPqWQ,TextAlignmentHrutujaFinal,jbn6972,Java,Sunday 1st of October 2023 05:10:52 AM CDT,"import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Created by : Hrutuja Patnekar (230013110)
 * A class for text alignment operations.
 */
public class TextAlignment {
    /**
     * Main method for the TextAlignment program.
     * 
     * @param args Command-line arguments: <filename> <alignmentType> <lineLength>
     */
    public static void main(String[] args) {

        List<String> align = Arrays.asList(""left"", ""right"", ""centre"", ""justify"");
        
        // Checking if the correct number of arguments and valid alignment and line length are provided.
        if (args.length != 3 || !align.contains(args[1].toLowerCase())
                || !args[2].matches(""[0-9]+"")
                || Integer.parseInt(args[2]) < 1) {

            System.out.println(""usage: java TextAlignment <filename> <alignmentType> <lineLength>"");
            return;
        }

        String fileName = args[0];
        String alignment = args[1];
        int lineLength = Integer.parseInt(args[2]);
        String[] input = readFile(fileName);

        try {
            // Switch case to select alignment type
            switch (alignment.toLowerCase()) {
                case ""left"":
                    for (int i = 0; i < input.length; i++) {
                        printLeftOutput(input[i], lineLength);
                    }
                    break;
                case ""right"":
                    for (int i = 0; i < input.length; i++) {
                        printRightOutput(input[i], lineLength);
                    }
                    break;

                case ""centre"":
                    for (int i = 0; i < input.length; i++) {
                        printCenterOutput(input[i], lineLength);
                    }
                    break;

                case ""justify"":
                    for (int i = 0; i < input.length; i++) {
                        printJustifyOutput(input[i], lineLength);
                    }
                    break;
            }

        } catch (Exception e) {
            System.out.println(e);
        }

    }

    /**
     * Reads a file and returns its content as an array of paragraphs.
     *
     * @param filename The name of the file to read.
     * @return An array of paragraphs.
     */
    public static String[] readFile(String filename) {
        try {
            // try to read from the specified file and store paragraphs (lines of text
            // with new-line at end) in list and convert list to array for return
            FileReader fr = new FileReader(filename);
            BufferedReader bfr = new BufferedReader(fr);
            ArrayList<String> content = new ArrayList<String>();
            String paragraph = null;
            while ((paragraph = bfr.readLine()) != null) {
                content.add(paragraph);
            }
            String[] paragraphs = new String[content.size()];
            for (int i = 0; i < content.size(); i++) {
                paragraphs[i] = content.get(i);
            }
            bfr.close();
            return paragraphs;
        } catch (FileNotFoundException e) {
            System.out.println(""File not found: "" + e.getMessage());
        } catch (IOException e) {
            System.out.println(""I/O Ooops: "" + e.getMessage());
        }
        // If an exception occurred we will get to here as the return statement above
        // was not executed
        // so setup a paragraphs array to return which contains the empty string
        String[] paragraphs = new String[1];
        paragraphs[0] = """";
        return paragraphs;
    }

    /**
     * Prints the output with right alignment.
     *
     * @param text The input text.
     * @param lgt  The line length.
     */
    public static void printRightOutput(String text, int lgt) {
        StringBuilder alignedText = new StringBuilder();
        String[] words = text.split(""\\s"");
        StringBuilder currentLine = new StringBuilder();
        int currentLineLength = 0;

        for (String word : words) {
            int wordLength = word.length();

            if (currentLineLength + wordLength <= lgt) {
                // Add word to the current line with a space
                currentLine.append(word).append("" "");
                currentLineLength += wordLength + 1;
            } else if(wordLength > lgt){  // If word is longer than line length
                // Add the current line to the aligned text
                if(currentLineLength > 0){
                    alignedText.append(rightAlign(currentLine.toString().trim(), lgt));
                    alignedText.append(""\n"");
                }
                // Add the new word to the aligned text
                alignedText.append(word.toString());
                alignedText.append(""\n"");
                currentLine.setLength(0);
                currentLineLength = 0;
            }
            
            else {
                // Start a new line and add word to it
                alignedText.append(rightAlign(currentLine.toString().trim(), lgt));
                alignedText.append(""\n"");
                currentLine.setLength(0);
                currentLineLength = 0;
                currentLine.append(word).append("" "");
                currentLineLength += wordLength + 1;
            }
        }

        if(currentLineLength > 0){
            // Add the last line
            alignedText.append(rightAlign(currentLine.toString().trim(), lgt)).append(""\n"");
        }
        System.out.print(alignedText.toString());

    }

    /**
     * Right aligns the text.
     *
     * @param text       The input text.
     * @param lineLength The line length.
     * @return The right aligned text.
     */
    public static String rightAlign(String text, int lineLength) {
        // Calulate the number of spaces to add before the words in same line when no
        // more words fit in line
        int spacesToAdd = lineLength - text.length();
        if (spacesToAdd <= 0) {
            return text;
        }
        return "" "".repeat(spacesToAdd) + text;
    }

    /**
     * Prints the output with left alignment.
     *
     * @param text The input text.
     * @param lgt  The line length.
     */
    public static void printLeftOutput(String text, int lgt) {

        String[] words = text.split(""\\s"");
        StringBuilder alignedText = new StringBuilder();
        int currentLineLength = 0;

        for (String word : words) {
            if (currentLineLength + word.length() <= lgt) {
                // Add word to the current line with a space
                alignedText.append(word).append("" "");
                currentLineLength += word.length() + 1;
            }else if(word.length() > lgt){  // If word is longer than line length
                // Add the current line to the aligned text
                if(currentLineLength > 0){
                    alignedText.append(""\n"");
                }
                // Add the new word to the aligned text
                alignedText.append(word.toString());
                alignedText.append(""\n"");
                currentLineLength = 0;
            }
             else {
                // Start a new line and add word to it
                alignedText.append(""\n"").append(word).append("" "");
                currentLineLength = word.length() + 1;
            }
        }

        System.out.println(alignedText.toString().trim());
    }

    /**
     * Prints the output with center alignment.
     *
     * @param text The input text.
     * @param lgt  The line length.
     */
    public static void printCenterOutput(String text, int lgt) {

        StringBuilder alignedText = new StringBuilder();
        String[] words = text.split(""\\s"");
        StringBuilder currentLine = new StringBuilder();
        int currentLineLength = 0;

        for (String word : words) {
            int wordLength = word.length();

            if (currentLineLength + wordLength <= lgt) {
                // Add word to the current line with a space
                currentLine.append(word).append("" "");
                currentLineLength += wordLength + 1;
            }else if(wordLength > lgt){  // If word is longer than line length
                // Add the current line to the aligned text
                if(currentLineLength > 0){
                    alignedText.append(centerAlign(currentLine.toString().trim(), lgt));
                    alignedText.append(""\n"");
                }
                // Add the new word to the aligned text
                alignedText.append(word.toString().trim());
                alignedText.append(""\n"");
                currentLine.setLength(0);
                currentLineLength = 0;
            }
             else {
                // Start a new line and add word to it
                alignedText.append(centerAlign(currentLine.toString().trim(), lgt));
                alignedText.append(""\n"");
                currentLine.setLength(0);
                currentLine.append(word).append("" "");
                currentLineLength = wordLength + 1;
            }
        }

        // Add the last line
        if(currentLineLength > 0){
            alignedText.append(centerAlign(currentLine.toString().trim(), lgt)).append(""\n"");
        }
        System.out.println(alignedText.toString());
    }

    /**
    * Centers the text.
    *
    * @param text       The input text.
    * @param lineLength The line length.
    * @return The centered text.
    */
    public static String centerAlign(String text, int lineLength) {
        // Calulate the number of spaces to add between the words of the same line when
        // no more words fit in line
        int spacesToAdd = lineLength - text.length();
        int rightSpaces = spacesToAdd / 2;
        int leftSpaces = spacesToAdd - rightSpaces;
        return "" "".repeat(leftSpaces) + text + "" "".repeat(rightSpaces);
    }

    /**
     * Prints the output with justification.
     *
     * @param text The input text.
     * @param lgt  The line length.
     */
    public static void printJustifyOutput(String text, int lineLength) {
        String input = text.trim();
        StringBuilder justifiedText = new StringBuilder();
        StringBuilder currentLine = new StringBuilder();

        int lineChars = 1;
        currentLine.append(input.charAt(0));
        ++lineChars;
        
        // Loop through the input string
        for (int i = 1; i < input.length() - 1; i++) {
            char prevChar, currChar, nextChar;
            prevChar = input.charAt(i - 1);
            currChar = input.charAt(i);
            nextChar = input.charAt(i + 1);

            // Check if the current character is the last character of the input string    
            boolean extraChar = false;

            // Check if the current character is a space and the line contains only one character
            if (lineChars == 1 && currChar == ' ') {
                continue;
            }

            // Check if the current character is a space and the next character is a space
            if (lineLength > lineChars) {
                currentLine.append(currChar);
                ++lineChars;
            } else { // If the line contains the maximum number of characters
                if (prevChar != ' ' && currChar != ' ' && nextChar != ' ') { 
                    currentLine.append(""-"");
                    extraChar = true;
                } else if (prevChar == ' ' && currChar != ' ' && nextChar != ' ') {
                    currentLine.append("" "");
                    extraChar = true;
                } else if (prevChar != ' ' && currChar != ' ' && nextChar == ' ') {
                    currentLine.append(currChar);
                } else if (prevChar != ' ' && currChar == ' ' && nextChar != ' ') {
                    currentLine.append(currChar);
                } else {
                    currentLine.append(currChar);
                }

                justifiedText.append(currentLine.toString().trim()).append(""\n"");
                currentLine.setLength(0);
                lineChars = 1;

                if (extraChar) {
                    currentLine.append(currChar);
                    ++lineChars;
                }
            }
        }

        currentLine.append(input.charAt(input.length() - 1));
        if (currentLine.length() > 0) {
            justifiedText.append(currentLine.toString().trim()).append(""\n"");
        }
        
        System.out.println(justifiedText.toString().trim());
    }
    
}
"
ecb9AnDS,Running Simulator,LuaXe,Lua,Sunday 1st of October 2023 04:49:09 AM CDT,"function C() spawn(function () while getgenv().C do local args = {[1] = ""Click""}game:GetService(""ReplicatedStorage"").Remotes.Click:FireServer(unpack(args)) task.wait() end end) end
function R() spawn(function () while getgenv().R do local args = {[1] = ""Rebirth""}game:GetService(""ReplicatedStorage"").Remotes.Rebirth:FireServer(unpack(args)) task.wait() end end) end
function W() spawn(function () while getgenv().W do local args = {[1] = ""Collect"",[2] = ""100""}    game:GetService(""ReplicatedStorage"").Remotes.Money:FireServer(unpack(args)) task.wait() end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Running Simulator"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Inf. Money"",function(val) getgenv().W = val W() end)
b:Toggle(""Inf. Stats"",function(val) getgenv().C = val C() end)
b:Toggle(""Inf. Rebirths"",function(val) getgenv().R = val R() end)

b:Label(""Made by LuaXie"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Slider(""WalkSpeed"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val end)
b:Slider(""JumpPower"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = val end)
b:Slider(""HipHeight"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.HipHeight = val end)
b:Slider(""Gravity"",{min = 0; max = 360; precise = false;},function(val) game.workspace.Gravity = val end)
b:Slider(""FOV"",{min = 0;max = 120;precise = false;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)
b:Toggle(""Noclip"",function(val) getgenv().N = val N() end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) if game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"") then game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end end
function N() spawn(function () while getgenv().N do
for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do if v:IsA(""BasePart"") then v.CanCollide = false end end wait() end
for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do if v:IsA(""BasePart"") then v.CanCollide = true end end end) end"
ArfSQs34,Untitled,soyl,Java,Sunday 1st of October 2023 04:45:54 AM CDT,"import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;
import test.FortuneConfig;
import test.FortuneCookieFactory;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static java.util.Collections.singletonList;


public class FortuneCookieFactoryTest {

     static FortuneCookieFactory fortuneCookieFactory;

    @BeforeAll
    public static void create() {

             fortuneCookieFactory = new FortuneCookieFactory(new FortuneConfig(true),
                    singletonList(""positive""),
                    singletonList(""negative""));

    }

    @Test
    public void shouldIncrementCountByOneAfterOneCookieBaked() {
        create();
        fortuneCookieFactory.bakeFortuneCookie();
        assertEquals(1,fortuneCookieFactory.getCookiesBaked());
    }

    @Test
    public void shouldIncrementCountByTwoAfterTwoCookiesBaked() {
        create();
        fortuneCookieFactory.bakeFortuneCookie();
        fortuneCookieFactory.bakeFortuneCookie();
        assertEquals(2,fortuneCookieFactory.getCookiesBaked());
    }

    @Test
    public void shouldSetCounterToZeroAfterResetCookieCreatedCall() {
        create();
        fortuneCookieFactory.bakeFortuneCookie();
        assertEquals(1,fortuneCookieFactory.getCookiesBaked());
        fortuneCookieFactory.resetCookiesCreated();
        assertEquals(0,fortuneCookieFactory.getCookiesBaked());
    }
}"
F4TdLacG,Untitled,soyl,Java,Sunday 1st of October 2023 04:45:13 AM CDT,"import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;
import test.FortuneConfig;
import test.FortuneCookieController;
import test.FortuneCookieFactory;
import static java.util.Collections.singletonList;
import static org.junit.jupiter.api.Assertions.assertEquals;


public class FortuneCookieControllerTest {

    static FortuneCookieController goodFactoryController;
    static FortuneCookieController badFactoryController;

    @BeforeAll
    public static void create() {

             FortuneCookieFactory good = new FortuneCookieFactory(new FortuneConfig(true),
                    singletonList(""positive""),
                    singletonList(""negative""));
             goodFactoryController = new FortuneCookieController(good);


            FortuneCookieFactory bad = new FortuneCookieFactory(new FortuneConfig(false),
                    singletonList(""positive""),
                    singletonList(""negative""));
            badFactoryController = new FortuneCookieController(bad);

    }

    @Test
    public void shouldReturnPositiveFortune() {
        create();
        assertEquals(goodFactoryController.tellFortune().getFortuneText(),""positive"");
    }

    @Test
    public void shouldReturnNegativeFortune() {
        create();
        assertEquals(badFactoryController.tellFortune().getFortuneText(),""negative"");
    }
}
"
RBashMg5,Untitled,itsspynex,C++,Sunday 1st of October 2023 04:39:22 AM CDT,"const int screen_width = 128;
    const int screen_height = 128;
    const int chunkSize = 16;
    //Chunk_Y
    for(float chunk_y = -chunkSize / 2; chunk_y < chunkSize / 2; chunk_y++)
    {
        //Chunk_X
        for(float chunk_x = -chunkSize / 2; chunk_x < chunkSize / 2; chunk_x++)
        {
            Chunk& chunk = chunks.emplace_back();

            //pixel_Y
            for(int y = -screen_height / 2; y < screen_height / 2; ++y)
            {

                //pixel_X
                for(int x = -screen_width / 2; x < screen_width / 2; ++x)
                {
                    double moist = moisture.GetNoise(float((screen_height*chunk_y)+x), float((screen_width*chunk_x)+y));
                    moist = (moist + 1.0) / 2.0;
                    moist = int(moist*255);

                    //Convert 2d representation of each index to 1d
                    int unsigned_y = y+((screen_width/2));
                    int unsigned_x = x+(64);
                    //cout<<""Unsigned_Y is : ""<<unsigned_y<<endl;

                    int CurrentPixelIndex2 = ((unsigned_y * screen_width)+ unsigned_x) * 4;
                    //Deep Water
                    if(moist < 100)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {0};
                        chunk.pixels[CurrentPixelIndex2 +1] = {66};
                        chunk.pixels[CurrentPixelIndex2 +2] = {137};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Deep water
                    else if (moist < 120)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {55};
                        chunk.pixels[CurrentPixelIndex2 +1] = {102};
                        chunk.pixels[CurrentPixelIndex2 +2] = {200};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Beaches
                    else if (moist < 122)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {209};
                        chunk.pixels[CurrentPixelIndex2 +1] = {189};
                        chunk.pixels[CurrentPixelIndex2 +2] = {111};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Plain
                    else if(moist < 160)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {71};
                        chunk.pixels[CurrentPixelIndex2 +1] = {133};
                        chunk.pixels[CurrentPixelIndex2 +2] = {47};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Jungle
                    else if(moist < 180)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {28};
                        chunk.pixels[CurrentPixelIndex2 +1] = {101};
                        chunk.pixels[CurrentPixelIndex2 +2] = {1};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    else if (moist < 200)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {96};
                        chunk.pixels[CurrentPixelIndex2 +1] = {61};
                        chunk.pixels[CurrentPixelIndex2 +2] = {0};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    else
                    {
                        chunk.pixels[CurrentPixelIndex2] = {63};
                        chunk.pixels[CurrentPixelIndex2 +1] = {37};
                        chunk.pixels[CurrentPixelIndex2 +2] = {0};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }

                }

            }

            chunk.chunk_position.x = chunk_x;
            chunk.chunk_position.y = chunk_y;
            // cout<<chunk.chunk_position.x<<endl;
            // cout<<chunk.chunk_position.y<<endl;
            // cout<<"" ""<<endl;


            chunk.sprite.setPosition(screen_height*chunk_y, screen_width*chunk_x);
            chunk.sprite.setTexture(*chunk.texture);
            chunk.texture->update(chunk.pixels.get());
            chunks.push_back(chunk);
        }

    }
    return chunks;
}
"
DsWaeJ8D,C# sem1 l3,Akaitori,C#,Sunday 1st of October 2023 04:34:48 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /* zadanie z typami
            int lvl = 5;
            float wzrost = 1.65f;
            decimal kasa = 234.89m;
            string imie = ""Tori"";
            char plec = 'K';
            bool czyBronPalna = false;
            Console.WriteLine($""Imię mojej postaci to {imie}, płeć: {plec}."" +
                $""{imie} jest na poziomie {lvl}, ma {wzrost} cm wzrostu oraz {kasa} oszczędności."" +
                $""Czy korzysta z broni palnej? {czyBronPalna} "");*/

            //działania
            /*
            int a = 5;
            int b = 10;
            int c = 4;
            //dodawanie
            int suma = a + b + c; //19
            Console.WriteLine(suma);
            //odejmowanie
            int roznica = a - b; //-5
            Console.WriteLine(roznica);
            //mnożenie
            int iloczyn = a * b; //50
            Console.WriteLine(iloczyn);
            //dzielenie
            int iloraz = b / a + c; //2+4 = 6
            Console.WriteLine(iloraz);
            //modulo - reszta z dzielenia
            int modulo = b % c; //reszta z dzielenia to 2
            Console.WriteLine(modulo);*/

            //odpowiedni typ danych
            /*
            int a = 5;
            int b = 2;
            Console.WriteLine(a / b); //2
            double a2 = 5;
            double b2 = 2;
            Console.WriteLine(a2 / b2); //2.5
            */
            //parsowanie - zmień typ wprowadzonej danej
            /*int wiek = int.Parse(Console.ReadLine());  
            Console.WriteLine(wiek);
            */

            //pole trapezu
            /*
            double a, b, h;
            Console.WriteLine(""Podaj długość krawędzi podstawy a:"");
            a = double.Parse(Console.ReadLine());
            Console.WriteLine(""Podaj długość krawędzi podstawy b:"");
            b = double.Parse(Console.ReadLine());
            Console.WriteLine(""Podaj długość wysokości h:"");
            h = double.Parse(Console.ReadLine());
            double wynik = (a + b) * h / 2;
            Console.WriteLine($""Pole trapezu wynosi {wynik}"");
            */

            //biblioteka Math
            /*
            double liczba = 6;
            double potega = 4;
            double wynik = Math.Pow(liczba, potega);
            Console.WriteLine(wynik);
            double pierwiastek = Math.Sqrt(liczba);
            Console.WriteLine(pierwiastek);
            */

            //pole koła
            /*
            Console.WriteLine(""Podaj promień koła:"");
            double r = double.Parse(Console.ReadLine());
            double wynik = Math.PI * Math.Pow(r, 2);
            Console.WriteLine(wynik); 
            */

            //temperatura
            Console.WriteLine(""Podaj temperaturę w stopniach Fahrenheita:"");
            double stopnieF = double.Parse(Console.ReadLine());
            double wynik = (stopnieF - 32) * 5/9;
            Console.WriteLine(Math.Round(wynik,2));
            Console.ReadLine();
        }
    }
}
"
adcHyFRx,Untitled,soyl,Java,Sunday 1st of October 2023 04:33:44 AM CDT,"
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

class Practicum {
    // Задайте форматирование для времени и даты в формате часы:минуты день.месяц.год
    // Пример - 12:15 02.11.21
    public static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm dd.MM.yy"");
    // Задайте форматирование для времени в формате часы:минуты
    public static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm"");


    public static void main(String[] args) {
        System.out.println(""Тест №1:"");
        printFlightInformation(
                ""12:15 02.11.21"",
                ""VKO"",
                ""LED"",
                30,
                1,
                55
        );

        System.out.println(""\nТест №2:"");
        printFlightInformation(
                ""14:00 03.10.21"",
                ""SVX"",
                ""VVO"",
                0,
                9,
                5
        );

        System.out.println(""\nТест №3:"");
        printFlightInformation(
                ""06:00 12.12.21"",
                ""DME"",
                ""VVO"",
                0,
                12,
                0
        );

        System.out.println(""\nТест №4:"");
        printFlightInformation(
                ""23:00 29.03.22"",
                ""LED"",
                ""SVX"",
                0,
                2,
                55
        );


    }

    private static void printFlightInformation(
            String formattedDepartureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            int delay,
            int flightDurationHours,
            int flightDurationMinutes
    ) {
        Airport departureAirport;
        Airport arrivalAirport;
        // С помощью класса AirportDatabase получите данные об аэропортах вылета и посадки.
        // При получении исключения выведите сообщение исключения.
        try {
            departureAirport =  AirportDatabase.getAirportByCode(departureAirportCode);
            arrivalAirport = AirportDatabase.getAirportByCode(arrivalAirportCode);
            // исполняемый код
        } catch (IllegalStateException e) {
            System.out.println(e.getMessage());
            return;
        }

        LocalDateTime departureTime = LocalDateTime.parse(formattedDepartureTime,DATE_TIME_FORMATTER);
        assert departureAirport != null;
        ZoneId departureZone = ZoneId.of(departureAirport.getZone());

        // Создайте экземпляр ZonedDateTime с помощью formattedDepartureTime и зоны аэропорта вылета.
        ZonedDateTime departure = ZonedDateTime.of(departureTime,departureZone);

        // Выведите информацию о том, между какими городами будет перелёт.

        assert arrivalAirport != null;
        System.out.println(""Ваш билет на рейс "" + departureAirport.getCity() + "" - "" + arrivalAirport.getCity() + "": "");

        // Найдите продолжительность полёта.
        Duration flightDuration = Duration.ofHours(flightDurationHours).plusMinutes(flightDurationMinutes);
        // Найдите время прибытия с учётом зоны прилёта.
        ZoneId arrivalZoneId = ZoneId.of(arrivalAirport.getZone());
        ZonedDateTime arrival = departure.plus(flightDuration).withZoneSameInstant(arrivalZoneId);

        // Заполните данные для передачи в метод печати билета.
        // Город вылета

        String departureCity = departureAirport.getCityForTicket();
        // Город прилёта
        String arrivalCity = arrivalAirport.getCityForTicket();
        // Отформатированное время прилёта
        String formattedArrivalTime = arrival.format(DATE_TIME_FORMATTER);
        // Только время вылета
        String departureTimeOnly = departure.format(TIME_FORMATTER);

        printTicket(
                formattedDepartureTime,
                departureAirportCode,
                arrivalAirportCode,
                departureCity,
                arrivalCity,
                formattedArrivalTime,
                departureTimeOnly
        );

        // Добавьте проверку на случай задержки.
        if (delay > 0) {
            // Определите продолжительность задержки.
            Duration delayDuration = Duration.ofMinutes(delay);
            // Вычислите время вылета с учётом задержки.
            ZonedDateTime departureWithDelay = departure.plus(delayDuration);
            // Вычислите время прилёта с учётом задержки.
            ZonedDateTime arrivalWithDelay = arrival.plus(delayDuration);

            System.out.println(""Ваш вылет задерживается."");
            // Выведите продолжительность задержки в формате часы:минуты
            System.out.println(""Задержка: "" + delayDuration.toHours()
            + "":"" + delayDuration.toMinutesPart());
            // Выведите отформатированное время вылета с учётом задержки.
            System.out.println(""Обновлённое время вылета: "" + departureWithDelay.format(DATE_TIME_FORMATTER));
            // Выведите отформатированное время прилёта с учётом задержки.
            System.out.println(""Обновлённое время прилёта: "" + arrivalWithDelay.format(DATE_TIME_FORMATTER));
        } else {
            System.out.println(""Удачного полёта!"");
        }
    }

    private static void printTicket(
            String departureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            String departureCity,
            String arrivalCity,
            String arrivalTime,
            String departureTimeOnly
    ) {
        System.out.println(
                "" _______________________________________________________\n"" +
                        ""|                                            |          |\n"" +
                        ""|  "" + departureCity + ""|"" + departureAirportCode + ""      ""
                        + departureTime + ""  |   "" + departureAirportCode + ""    |\n"" +
                        ""|  "" + arrivalCity + ""|"" + arrivalAirportCode + ""      ""
                        + arrivalTime + ""  |   "" + arrivalAirportCode + ""    |\n"" +
                        ""|                                            |          |\n"" +
                        ""|  BOARDING TIME   --:--      SEAT  1A       |   "" + departureTimeOnly + ""  |\n"" +
                        ""|  GATE  23                                  |   1A     |\n"" +
                        ""|____________________________________________|__________|"");
    }
}"
dsnwv0HB,Untitled,soyl,Java,Sunday 1st of October 2023 04:33:22 AM CDT,"class AirportDatabase {
    private static Airport vnukovo = new Airport(
            ""Внуково"",
            ""Москва"",
            ""MOSCOW          "",
            ""Europe/Moscow""
    );

    private static Airport pulkovo = new Airport(
            ""Пулково"",
            ""Санкт-Петербург"",
            ""SAINT-PETERSBURG"",
            ""Europe/Moscow""
    );

    private static Airport vladivostok = new Airport(
            ""Владивосток"",
            ""Владивосток"",
            ""VLADIVOSTOK     "",
            ""Asia/Vladivostok""
    );

    private static Airport koltsovo = new Airport(
            ""Кольцово"",
            ""Екатеринбург"",
            ""YEKATERINBURG   "",
            ""Asia/Yekaterinburg""
    );

    public static Airport getAirportByCode(String airportCode) {
        /* С помощью оператора switch case верните правильный аэропорт по его коду:
         * VKO - vnukovo
         * LED - pulkovo
         * SVX - koltsovo
         * VVO - vladivostok
         * Для неверного кода пробросьте исключение.
         */

        // то, что ниже вообще не факт, что правильно
        switch (airportCode) {
            case (""VKO""):
                return vnukovo;
            case ""LED"":
                return pulkovo;
            case ""SVX"":
                return koltsovo;
            case ""VVO"":
                return vladivostok;
            default:
                throw new IllegalStateException(""Неизвестный код аэропорта: "" + airportCode);


        }

    }
}"
2xPDpYG7,SGS lab 1,tampurus,C++,Sunday 1st of October 2023 03:55:32 AM CDT,"#include <iostream>

using namespace std;

int main()
{
    while (true)
    {
        int num;
        cout << ""Enter 1 for Hello World :  \nEnter 2 for Calculation : \nEnter 3 for Swapping of 2 numbers : \nEnter 4 for Swapping of 3 numbers : \nEnter 5 for Fibonacci series : \nEnter 6 for Square of number : \nEnter 7 for Area of triangle : \nEnter 8 for Area of circle : \nEnter 9 for Simple interest : \nEnter 10 for checking Leap year or not : \nEnter 11 for Check character vowel or not : \nEnter 12 for Table of any number :- \nEnter 13 for Prime number :- \n\nEnter any number from above stated = "";
        cin >> num;

        switch (num)
        {
            case 1:
                cout << ""Hello World"";
                break;
            case 2:
            {
                int a1, a2, val;
                cout << ""Enter any two numbers = "";
                cin >> a1 >> a2;
                cout << ""Enter 1 for Addition :- \nEnter 2 for Subtraction :- \nEnter 3 for Multiplication :- \nEnter 4 for Division :- \nEnter 5 for Modulus (Remainder) :- \nEnter 6 for All Calculation :- \n\nPlease Enter = "";
                cin >> val;
    
                switch (val)
                {
                case 1:
                    cout << ""\nAddition = "" << a1 + a2;
                    break;
                case 2:
                    cout << ""\nSubtraction = "" << a1 - a2;
                    break;
                case 3:
                    cout << ""\nMultiplication = "" << a1 * a2;
                    break;
                case 4:
                    if (a2 != 0)
                        cout << ""\nDivision = "" << a1 / a2;
                    else
                        cout << ""\nDivision by zero is not allowed"";
                    break;
                case 5:
                    if (a2 != 0)
                        cout << ""\nModulus (Remainder) = "" << a1 % a2;
                    else
                        cout << ""\nModulus (Remainder) by zero is not allowed"";
                    break;
                case 6:
                    cout << ""\nAddition = "" << a1 + a2;
                    cout << ""\nSubtraction = "" << a1 - a2;
                    cout << ""\nMultiplication = "" << a1 * a2;
                    if (a2 != 0)
                        cout << ""\nDivision = "" << a1 / a2;
                    else
                        cout << ""\nDivision by zero is not allowed"";
                    if (a2 != 0)
                        cout << ""\nModulus (Remainder) = "" << a1 % a2;
                    else
                        cout << ""\nModulus (Remainder) by zero is not allowed"";
                    break;
                default:
                    cout << ""Invalid number"";
                    break;
                }
            }
            break;
            case 3:
            {
                int b1, b2, choice;
                cout << ""\nEnter 1 for Swapping with a third variable :- \nEnter 2 for Swapping without a third variable :- \n\nNow Enter here= "";
                cin >> choice;
                int b3; 
                switch (choice)
                {
                case 1:
                    cout << ""Enter the value of a and b = "";
                    cin >> b1 >> b2;
                    b3 = b1;
                    b1 = b2;
                    b2 = b3;
                    cout << ""a="" << b1 << ""\nb="" << b2;
                    break;
                case 2:
                    cout << ""Enter the value of a and b = "";
                    cin >> b1 >> b2;
                    b1 = b1 + b2;
                    b2 = b1 - b2;
                    b1 = b1 - b2;
                    cout << ""a="" << b1 << ""\nb="" << b2;
                    break;
                default:
                    cout << ""Invalid choice"";
                    break;
                }
            }
            break;
            case 4:
            {
                int n1, n2, n3;
                cout << ""Enter the value of a, b, and c = "";
                cin >> n1 >> n2 >> n3;
                int n4 = n1;
                n1 = n2;
                n2 = n3;
                n3 = n4;
                cout << ""a="" << n1 << ""\nb="" << n2 << ""\nc="" << n3;
            }
            break;
            case 5:
            {
                int d1 = 0, d2 = 1, d3, d4, d5;
                cout << ""Enter the number of values to be printed for the Fibonacci series = "";
                cin >> d5;
                cout << ""Fibonacci Series :-"" << endl;
                cout << d1 << endl
                     << d2;
                for (d4 = 3; d4 <= d5; d4++)
                {
                    d3 = d1 + d2;
                    d1 = d2;
                    d2 = d3;
                    cout << endl << d3;
                }
            }
            break;
            case 6:
            {
                int e;
                cout << ""Enter any number you want the square of = "";
                cin >> e;
                cout << ""Square of "" << e << "" = "" << e * e;
            }
            break;
            case 7:
            {
                float base, height, area1;
                cout << ""Enter the value of base and height = "";
                cin >> base >> height;
                area1 = (base * height) / 2;
                cout << ""Area of Triangle = "" << area1;
            }
            break;
            case 8:
            {
                float area, radius;
                cout << ""Enter the value of the radius = "";
                cin >> radius;
                area = (22 * radius * radius) / 7;
                cout << ""Area of Circle = "" << area;
            }
            break;
            case 9:
            {
                float p, r, t, si;
                cout << ""Enter the value of P, R, and T = "";
                cin >> p >> r >> t;
                si = (p * r * t) / 100;
                cout << ""Simple Interest = "" << si;
            }
            break;
            case 10:
            {
                int year;
                cout << ""Enter any Year = "";
                cin >> year;
                if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
                    cout << year << "" is a Leap Year"";
                else
                    cout << year << "" is not a Leap Year"";
            }
            break;
            case 11:
            {
                char ch;
                cout << ""Enter any character = "";
                cin >> ch;
                switch (ch)
                {
                case 'a':
                case 'e':
                case 'i':
                case 'o':
                case 'u':
                case 'A':
                case 'E':
                case 'I':
                case 'O':
                case 'U':
                    cout << "" "" << ch << "" is a Vowel"";
                    break;
                default:
                    cout << "" "" << ch << "" is not a Vowel"";
                    break;
                }
            }
            break;
            case 12:
            {
                int n;
                cout << ""Enter any number you want the table of = "";
                cin >> n;
                for (int i = 1; i <= 10; i++)
                {
                    cout << n << ""*"" << i << ""="" << n * i << endl;
                }
            }
            break;
            case 13:
            {
                int n;
                cout << ""Enter any number = "";
                cin >> n;
                if(n<=1){
                    cout<<""Not prime \n"";
                    break;
                }
                bool check = true;
                for(int i=2 ; i<= (n/2) ; i++){
                    if(n%i==0){
                        check = false;
                        break;
                    }
                        
                }
                if(check){
                    cout<<n<<"" is prime\n"";
                }
                else{
                    cout<<n<<"" is not prime\n"";
                } 
            }
            break;
            default:
                cout << ""Please enter a valid number"";
                break;
        }

        cout << ""\nDo you want to continue? (y/n): "";
        char choice;
        cin >> choice;
        if (choice != 'y' && choice != 'Y')
            break;
    }

    return 0;
}
"
960C5UiG,"Add ""Edit in New Tab"" option on the Posts",fahimmurshed,PHP,Sunday 1st of October 2023 03:39:39 AM CDT,"add_filter( 'post_row_actions', 'tab_row_actions', 10, 2 );
function tab_row_actions( $actions, $post )
{
    if( get_post_type() === 'post' )
	{
		$edit_tag = ""<a target='_blank' href='"";
		$link = admin_url( 'post.php' );
		$edit_tag .= add_query_arg(array('post' => $post->ID, 'action' => 'edit'), $link);
		$edit_tag .= ""'>Edit in New Tab</a>"";
		$actions['edit_new_tab'] = $edit_tag;
	}
    return $actions;
}"
cUYzBzYN,Untitled,Diaxon,XML,Sunday 1st of October 2023 03:37:22 AM CDT,"<LinearLayout
    xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:orientation=""vertical""
    android:background=""#11000000""
    android:gravity=""center"">

    <TextView
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:text=""Podaj swój email""
        android:textSize=""24sp""
        android:textColor=""#ff0000""/>

    <EditText
        android:id=""@+id/emailEditText""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:inputType=""textEmailAddress""
        android:gravity=""center""
        android:minWidth=""200dp""
        android:minHeight=""48dp"" />


    <TextView
        android:id=""@+id/displayEmailTextView""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:text=""Twój adres e-mail to...""
        android:labelFor=""@id/emailEditText""
        android:textSize=""24sp""
        android:textColor=""#ff00ff""/>

    <Button
        android:id=""@+id/submit""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:text=""Zatwierdź swój adres e-mail""
        android:onClick=""onButtonClick""
        android:gravity=""center""/>

    <Button
        android:id=""@+id/button5""
        android:layout_width=""match_parent""
        android:layout_height=""wrap_content""
        android:onClick=""newView""
        android:text=""Button"" />
</LinearLayout>
"
4btjhdPe,Битрикс Меню,stasonua0,PHP,Sunday 1st of October 2023 03:37:19 AM CDT,"<?global $arTheme;?>
<?$bHideCatalogMenu = (isset($arParams[""HIDE_CATALOG""]) && $arParams[""HIDE_CATALOG""] == ""Y"");?>
<?if(!CMax::IsMainPage()):?>
	<?if(CMax::IsCatalogPage()):?>
		<?if(!$bHideCatalogMenu):?>
			<?$APPLICATION->IncludeComponent(
	""bitrix:menu"",
	""left_front_catalog"",
	Array(
		""ALLOW_MULTI_SELECT"" => ""N"",
		""CACHE_SELECTED_ITEMS"" => ""N"",
		""CHILD_MENU_TYPE"" => ""left"",
		""DELAY"" => ""N"",
		""MAX_LEVEL"" => $arTheme[""MAX_DEPTH_MENU""][""VALUE""],
		""MENU_CACHE_GET_VARS"" => """",
		""MENU_CACHE_TIME"" => ""3600000"",
		""MENU_CACHE_TYPE"" => ""A"",
		""MENU_CACHE_USE_GROUPS"" => ""N"",
		""ROOT_MENU_TYPE"" => ""left"",
		""USE_EXT"" => ""Y""
	),
false,
Array(
	'ACTIVE_COMPONENT' => 'Y'
)
);?>
		<?endif;?>
	<?else:?>
		<?$APPLICATION->IncludeComponent(
	""bitrix:menu"",
	""left_menu"",
	Array(
		""ALLOW_MULTI_SELECT"" => ""N"",
		""CHILD_MENU_TYPE"" => ""left2"",
		""DELAY"" => ""N"",
		""MAX_LEVEL"" => ""2"",
		""MENU_CACHE_GET_VARS"" => """",
		""MENU_CACHE_TIME"" => ""3600000"",
		""MENU_CACHE_TYPE"" => ""A"",
		""MENU_CACHE_USE_GROUPS"" => (CMax::IsPersonalPage()?""Y"":""N""),
		""ROOT_MENU_TYPE"" => (CMax::IsPersonalPage()?""cabinet"":""left""),
		""USE_EXT"" => ""Y""
	),
false,
Array(
	'ACTIVE_COMPONENT' => 'Y'
)
);?>
	<?endif;?>
<?elseif(!$bHideCatalogMenu):?>
	<?$APPLICATION->IncludeComponent(
	""bitrix:menu"",
	""left_front_catalog"",
	Array(
		""ALLOW_MULTI_SELECT"" => ""N"",
		""CACHE_SELECTED_ITEMS"" => ""N"",
		""CHILD_MENU_TYPE"" => ""left"",
		""DELAY"" => ""N"",
		""MAX_LEVEL"" => $arTheme[""MAX_DEPTH_MENU""][""VALUE""],
		""MENU_CACHE_GET_VARS"" => """",
		""MENU_CACHE_TIME"" => ""3600000"",
		""MENU_CACHE_TYPE"" => ""A"",
		""MENU_CACHE_USE_GROUPS"" => ""N"",
		""ROOT_MENU_TYPE"" => ""left"",
		""USE_EXT"" => ""Y""
	),
false,
Array(
	'ACTIVE_COMPONENT' => 'Y'
)
);?>								
<?endif;?>"
fFv417pu,Untitled,Locative,SQL,Sunday 1st of October 2023 03:15:02 AM CDT,"-- [ Оплата за: сентябрь]
 
--------- [ Отработанное время: ]
 
Locative: 68 (х5), 51 (FUN) -- 119
Зилиус: 122 (х5) -- 122
Khyntia: 4 (x5), 158 (FUN) -- 162
jegermaister  - EN GM: 9 (х5), 137 (FUN) -- 148

 

Чеширский Кот: 208 (x5), 45 (FUN) (х2 за модератора) -- 253


--------- [ Бонусы: ]
UPDATE `bonus` SET `gold`=gold+4000 WHERE `id`='1407530'; -- Locative(3000ГМ + 1000РГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 4000, '+4000 золотых бонусов - з/п Ргм Locative за август');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Зилиус за август');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Khyntia за август'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за август'); 

UPDATE `bonus` SET `gold`=gold+2000 WHERE `id`='810625'; -- Чеширский Кот 2
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (810625, NOW(), 2000, '+2000 золотых бонусов - з/п модератора Чеширский Кот за август'); 

-- QA Team

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='211220'; -- nastyasia
UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='810625'; -- Чеширский Кот 2"
hbsBHf8j,Untitled,clandast,Python,Sunday 1st of October 2023 02:47:22 AM CDT,"from dataclasses import dataclass
from typing import Optional

from environs import Env


@dataclass
class DbConfig:
    """"""
    Database configuration class.
    This class holds the settings for the database, such as host, password, port, etc.

    Attributes
    ----------
    host : str
        The host where the database server is located.
    password : str
        The password used to authenticate with the database.
    user : str
        The username used to authenticate with the database.
    database : str
        The name of the database.
    port : int
        The port where the database server is listening.
    """"""

    host: str
    password: str
    user: str
    database: str
    port: int = 5432

    # For SQLAlchemy
    def construct_sqlalchemy_url(self, driver=""asyncpg"", host=None, port=None) -> str:
        """"""
        Constructs and returns a SQLAlchemy URL for this database configuration.
        """"""
        # TODO: If you're using SQLAlchemy, move the import to the top of the file!
        from sqlalchemy.engine.url import URL

        if not host:
            host = self.host
        if not port:
            port = self.port
        uri = URL.create(
            drivername=f""postgresql+{driver}"",
            username=self.user,
            password=self.password,
            host=host,
            port=port,
            database=self.database,
        )
        return uri.render_as_string(hide_password=False)

    @staticmethod
    def from_env(env: Env):
        """"""
        Creates the DbConfig object from environment variables.
        """"""
        host = env.str(""DB_HOST"")
        password = env.str(""POSTGRES_PASSWORD"")
        user = env.str(""POSTGRES_USER"")
        database = env.str(""POSTGRES_DB"")
        port = env.int(""DB_PORT"", 5432)
        return DbConfig(
            host=host, password=password, user=user, database=database, port=port
        )


@dataclass
class TgBot:
    """"""
    Creates the TgBot object from environment variables.
    """"""

    token: str
    admin_ids: list[int]
    use_redis: bool

    @staticmethod
    def from_env(env: Env):
        """"""
        Creates the TgBot object from environment variables.
        """"""
        token = env.str(""BOT_TOKEN"")
        admin_ids = list(map(int, env.list(""ADMINS"")))
        use_redis = env.bool(""USE_REDIS"")
        return TgBot(token=token, admin_ids=admin_ids, use_redis=use_redis)


@dataclass
class RedisConfig:
    """"""
    Redis configuration class.

    Attributes
    ----------
    redis_pass : Optional(str)
        The password used to authenticate with Redis.
    redis_port : Optional(int)
        The port where Redis server is listening.
    redis_host : Optional(str)
        The host where Redis server is located.
    """"""

    redis_pass: Optional[str]
    redis_port: Optional[int]
    redis_host: Optional[str]

    def dsn(self) -> str:
        """"""
        Constructs and returns a Redis DSN (Data Source Name) for this database configuration.
        """"""
        if self.redis_pass:
            return f""redis://:{self.redis_pass}@{self.redis_host}:{self.redis_port}/0""
        else:
            return f""redis://{self.redis_host}:{self.redis_port}/0""

    @staticmethod
    def from_env(env: Env):
        """"""
        Creates the RedisConfig object from environment variables.
        """"""
        redis_pass = env.str(""REDIS_PASSWORD"")
        redis_port = env.int(""REDIS_PORT"")
        redis_host = env.str(""REDIS_HOST"")

        return RedisConfig(
            redis_pass=redis_pass, redis_port=redis_port, redis_host=redis_host
        )


@dataclass
class Miscellaneous:
    """"""
    Miscellaneous configuration class.

    This class holds settings for various other parameters.
    It merely serves as a placeholder for settings that are not part of other categories.

    Attributes
    ----------
    other_params : str, optional
        A string used to hold other various parameters as required (default is None).
    """"""

    domain: str


@dataclass
class Config:
    """"""
    The main configuration class that integrates all the other configuration classes.

    This class holds the other configuration classes, providing a centralized point of access for all settings.

    Attributes
    ----------
    tg_bot : TgBot
        Holds the settings related to the Telegram Bot.
    misc : Miscellaneous
        Holds the values for miscellaneous settings.
    db : Optional[DbConfig]
        Holds the settings specific to the database (default is None).
    redis : Optional[RedisConfig]
        Holds the settings specific to Redis (default is None).
    """"""

    tg_bot: TgBot
    misc: Miscellaneous
    db: Optional[DbConfig] = None
    redis: Optional[RedisConfig] = None


def load_config(path: str = None) -> Config:
    """"""
    This function takes an optional file path as input and returns a Config object.
    :param path: The path of env file from where to load the configuration variables.
    It reads environment variables from a .env file if provided, else from the process environment.
    :return: Config object with attributes set as per environment variables.
    """"""

    # Create an Env object.
    # The Env object will be used to read environment variables.
    env = Env()
    env.read_env(path)

    return Config(
        tg_bot=TgBot.from_env(env),
        db=DbConfig.from_env(env),
        redis=RedisConfig.from_env(env),
        misc=Miscellaneous(
            domain=env.str(""DOMAIN""),
        ),
    )
"
fvcagRiG,sqrt.py,ikizid,Python,Sunday 1st of October 2023 02:42:53 AM CDT,"import numpy as np
n = 0
while True:
    a = np.sqrt(n+1) - np.sqrt(n)
    print(n, a)
    n += 1"
RdkQYsEP,2-sirma,panayotsky-dev,JavaScript,Sunday 1st of October 2023 02:12:39 AM CDT,"function solve(arr){
    let voteCounter = {
        yes:0,
        no: 0,
        abstain:0,
    majority:''};
   arr.map((vote) => {
    
    if (vote === 'Yes') {
        voteCounter['yes']++;
        } else if (vote ===""No"") {
            voteCounter[""no""]++ ;
            }else if(vote ===""Abstain""){
                voteCounter[""abstain""]++;}
   })
   if (voteCounter['yes'] > voteCounter['no'] && voteCounter['yes'] > voteCounter['abstain']) {
    voteCounter['majority'] = 'Yes';
  } else if (voteCounter['no'] > voteCounter['yes'] ) {
    voteCounter['majority'] = 'No';
  } else if(voteCounter.abstain > voteCounter.yes && voteCounter.abstain > voteCounter.no && voteCounter.yes  == 0 && voteCounter.no == 0) {
    voteCounter['majority'] = 'Abstain';
  }else if (voteCounter.no == voteCounter.yes ) {
    voteCounter.majority= 'Tie'
    
  }
  console.log(voteCounter.majority)
}
solve([""Yes"", ""No"", ""Yes"", ""Abstain"", ""Yes""])
solve([""No"", ""No"", ""Abstain"", ""Abstain""])
solve([""Yes"", ""No""])
solve([""Abstain""])
solve([""No"", ""No"", ""Abstain"", ""Abstain"", ""Yes"", ""Yes""])"
mJQjcAWm,Nigerian scammers [10-1-2023],bombaires,HTML,Sunday 1st of October 2023 12:29:55 AM CDT,"<a href=""mailto:simbaventures@aol.com"">simbaventures@aol.com</a>
<a href=""mailto:kofigana022@gmail.com"">kofigana022@gmail.com</a>
<a href=""mailto:kof.iga.n.a02.2@gmail.com"">kof.iga.n.a02.2@gmail.com</a>
<a href=""mailto:kof.i.g.a.n.a.02.2@gmail.com"">kof.i.g.a.n.a.02.2@gmail.com</a>
<a href=""mailto:kofi.ga.n.a0.2.2@gmail.com"">kofi.ga.n.a0.2.2@gmail.com</a>
<a href=""mailto:ko.figa.na02.2@gmail.com"">ko.figa.na02.2@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.na02.2@gmail.com"">ko.f.i.g.a.na02.2@gmail.com</a>
<a href=""mailto:k.o.f.i.gan.a0.2.2@gmail.com"">k.o.f.i.gan.a0.2.2@gmail.com</a>
<a href=""mailto:ko.fi.g.ana.0.2.2@gmail.com"">ko.fi.g.ana.0.2.2@gmail.com</a>
<a href=""mailto:ko.fig.a.na0.22@gmail.com"">ko.fig.a.na0.22@gmail.com</a>
<a href=""mailto:k.of.iga.n.a.0.2.2@gmail.com"">k.of.iga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.igana.02.2@gmail.com"">k.o.f.igana.02.2@gmail.com</a>
<a href=""mailto:kofi.gana0.2.2@gmail.com"">kofi.gana0.2.2@gmail.com</a>
<a href=""mailto:k.of.igana0.22@gmail.com"">k.of.igana0.22@gmail.com</a>
<a href=""mailto:k.o.f.iga.n.a.0.22@gmail.com"">k.o.f.iga.n.a.0.22@gmail.com</a>
<a href=""mailto:ko.f.i.gana.02.2@gmail.com"">ko.f.i.gana.02.2@gmail.com</a>
<a href=""mailto:k.o.figan.a.0.2.2@gmail.com"">k.o.figan.a.0.2.2@gmail.com</a>
<a href=""mailto:k.ofig.a.na022@gmail.com"">k.ofig.a.na022@gmail.com</a>
<a href=""mailto:k.o.fig.an.a0.22@gmail.com"">k.o.fig.an.a0.22@gmail.com</a>
<a href=""mailto:k.of.i.g.ana02.2@gmail.com"">k.of.i.g.ana02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.ana02.2@gmail.com"">ko.fi.g.ana02.2@gmail.com</a>
<a href=""mailto:ko.fi.ga.n.a.0.2.2@gmail.com"">ko.fi.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.ofig.an.a02.2@gmail.com"">k.ofig.an.a02.2@gmail.com</a>
<a href=""mailto:ko.figa.na022@gmail.com"">ko.figa.na022@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.n.a.022@gmail.com"">k.o.f.ig.a.n.a.022@gmail.com</a>
<a href=""mailto:kof.igana0.22@gmail.com"">kof.igana0.22@gmail.com</a>
<a href=""mailto:k.o.fi.g.ana022@gmail.com"">k.o.fi.g.ana022@gmail.com</a>
<a href=""mailto:k.o.fi.ga.na.0.2.2@gmail.com"">k.o.fi.ga.na.0.2.2@gmail.com</a>
<a href=""mailto:kof.ig.ana.0.22@gmail.com"">kof.ig.ana.0.22@gmail.com</a>
<a href=""mailto:k.o.f.i.gan.a.02.2@gmail.com"">k.o.f.i.gan.a.02.2@gmail.com</a>
<a href=""mailto:kof.i.g.a.n.a.0.2.2@gmail.com"">kof.i.g.a.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.o.figa.na022@gmail.com"">k.o.figa.na022@gmail.com</a>
<a href=""mailto:ko.f.i.g.ana022@gmail.com"">ko.f.i.g.ana022@gmail.com</a>
<a href=""mailto:k.ofi.gan.a0.2.2@gmail.com"">k.ofi.gan.a0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.gan.a.0.22@gmail.com"">ko.f.i.gan.a.0.22@gmail.com</a>
<a href=""mailto:k.o.fig.ana0.22@gmail.com"">k.o.fig.ana0.22@gmail.com</a>
<a href=""mailto:k.ofigana0.22@gmail.com"">k.ofigana0.22@gmail.com</a>
<a href=""mailto:k.o.fi.g.a.na0.2.2@gmail.com"">k.o.fi.g.a.na0.2.2@gmail.com</a>
<a href=""mailto:ko.f.ig.an.a0.2.2@gmail.com"">ko.f.ig.an.a0.2.2@gmail.com</a>
<a href=""mailto:ko.fi.ga.n.a022@gmail.com"">ko.fi.ga.n.a022@gmail.com</a>
<a href=""mailto:kofi.gan.a022@gmail.com"">kofi.gan.a022@gmail.com</a>
<a href=""mailto:k.ofig.ana.022@gmail.com"">k.ofig.ana.022@gmail.com</a>
<a href=""mailto:k.ofi.gana.022@gmail.com"">k.ofi.gana.022@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.na.02.2@gmail.com"">k.o.f.i.g.a.na.02.2@gmail.com</a>
<a href=""mailto:kofiga.n.a.02.2@gmail.com"">kofiga.n.a.02.2@gmail.com</a>
<a href=""mailto:ko.fig.an.a.022@gmail.com"">ko.fig.an.a.022@gmail.com</a>
<a href=""mailto:k.of.i.gana.022@gmail.com"">k.of.i.gana.022@gmail.com</a>
<a href=""mailto:ko.fig.a.n.a.0.2.2@gmail.com"">ko.fig.a.n.a.0.2.2@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a02.2@gmail.com"">kof.i.ga.n.a02.2@gmail.com</a>
<a href=""mailto:kofig.a.n.a.0.22@gmail.com"">kofig.a.n.a.0.22@gmail.com</a>
<a href=""mailto:kof.i.gana.02.2@gmail.com"">kof.i.gana.02.2@gmail.com</a>
<a href=""mailto:k.o.f.igana.022@gmail.com"">k.o.f.igana.022@gmail.com</a>
<a href=""mailto:kofigana.02.2@gmail.com"">kofigana.02.2@gmail.com</a>
<a href=""mailto:kof.i.gana.0.2.2@gmail.com"">kof.i.gana.0.2.2@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a0.22@gmail.com"">kof.i.ga.n.a0.22@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a.0.22@gmail.com"">kof.i.ga.n.a.0.22@gmail.com</a>
<a href=""mailto:kofigana022@gmail.com"">kofigana022@gmail.com</a>
<a href=""mailto:ko.fi.g.a.n.a0.2.2@gmail.com"">ko.fi.g.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.ga.n.a.0.2.2@gmail.com"">k.o.fi.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.na0.2.2@gmail.com"">ko.f.i.ga.na0.2.2@gmail.com</a>
<a href=""mailto:k.o.fig.a.n.a0.22@gmail.com"">k.o.fig.a.n.a0.22@gmail.com</a>
<a href=""mailto:k.o.fig.ana.0.22@gmail.com"">k.o.fig.ana.0.22@gmail.com</a>
<a href=""mailto:ko.f.i.g.ana0.2.2@gmail.com"">ko.f.i.g.ana0.2.2@gmail.com</a>
<a href=""mailto:k.ofig.a.na0.22@gmail.com"">k.ofig.a.na0.22@gmail.com</a>
<a href=""mailto:kofiga.n.a022@gmail.com"">kofiga.n.a022@gmail.com</a>
<a href=""mailto:ko.fi.gana.0.22@gmail.com"">ko.fi.gana.0.22@gmail.com</a>
<a href=""mailto:k.ofi.g.a.na.02.2@gmail.com"">k.ofi.g.a.na.02.2@gmail.com</a>
<a href=""mailto:k.o.f.i.g.ana.022@gmail.com"">k.o.f.i.g.ana.022@gmail.com</a>
<a href=""mailto:ko.figa.n.a.022@gmail.com"">ko.figa.n.a.022@gmail.com</a>
<a href=""mailto:ko.figa.n.a.02.2@gmail.com"">ko.figa.n.a.02.2@gmail.com</a>
<a href=""mailto:k.of.i.g.an.a.0.22@gmail.com"">k.of.i.g.an.a.0.22@gmail.com</a>
<a href=""mailto:k.of.iga.na.0.22@gmail.com"">k.of.iga.na.0.22@gmail.com</a>
<a href=""mailto:kofig.a.na.022@gmail.com"">kofig.a.na.022@gmail.com</a>
<a href=""mailto:kof.igan.a02.2@gmail.com"">kof.igan.a02.2@gmail.com</a>
<a href=""mailto:k.ofigan.a.0.2.2@gmail.com"">k.ofigan.a.0.2.2@gmail.com</a>
<a href=""mailto:kof.ig.ana.0.2.2@gmail.com"">kof.ig.ana.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.ig.a.na.0.22@gmail.com"">ko.f.ig.a.na.0.22@gmail.com</a>
<a href=""mailto:k.of.ig.a.n.a0.2.2@gmail.com"">k.of.ig.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.a.n.a.02.2@gmail.com"">k.of.ig.a.n.a.02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.an.a.0.22@gmail.com"">ko.fi.g.an.a.0.22@gmail.com</a>
<a href=""mailto:k.o.fi.ga.n.a.022@gmail.com"">k.o.fi.ga.n.a.022@gmail.com</a>
<a href=""mailto:k.ofi.ga.n.a.0.2.2@gmail.com"">k.ofi.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.ga.na.022@gmail.com"">k.o.fi.ga.na.022@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.n.a0.22@gmail.com"">ko.f.i.g.a.n.a0.22@gmail.com</a>
<a href=""mailto:kof.iga.na.022@gmail.com"">kof.iga.na.022@gmail.com</a>
<a href=""mailto:k.of.i.gan.a.02.2@gmail.com"">k.of.i.gan.a.02.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.ana02.2@gmail.com"">k.o.fi.g.ana02.2@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.na.022@gmail.com"">k.o.f.ig.a.na.022@gmail.com</a>
<a href=""mailto:ko.fig.an.a0.22@gmail.com"">ko.fig.an.a0.22@gmail.com</a>
<a href=""mailto:ko.f.i.g.an.a.02.2@gmail.com"">ko.f.i.g.an.a.02.2@gmail.com</a>
<a href=""mailto:ko.f.ig.ana.0.22@gmail.com"">ko.f.ig.ana.0.22@gmail.com</a>
<a href=""mailto:k.o.figan.a02.2@gmail.com"">k.o.figan.a02.2@gmail.com</a>
<a href=""mailto:k.o.f.ig.an.a0.22@gmail.com"">k.o.f.ig.an.a0.22@gmail.com</a>
<a href=""mailto:kofig.an.a.0.22@gmail.com"">kofig.an.a.0.22@gmail.com</a>
<a href=""mailto:ko.fig.ana.0.2.2@gmail.com"">ko.fig.ana.0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.an.a.0.2.2@gmail.com"">k.of.ig.an.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.igana.022@gmail.com"">ko.f.igana.022@gmail.com</a>
<a href=""mailto:ko.figana02.2@gmail.com"">ko.figana02.2@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.na.0.22@gmail.com"">k.o.f.i.g.a.na.0.22@gmail.com</a>
<a href=""mailto:k.of.ig.a.na0.2.2@gmail.com"">k.of.ig.a.na0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.n.a0.2.2@gmail.com"">k.o.f.ig.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:kof.iga.n.a022@gmail.com"">kof.iga.n.a022@gmail.com</a>
<a href=""mailto:k.o.fig.a.na.02.2@gmail.com"">k.o.fig.a.na.02.2@gmail.com</a>
<a href=""mailto:kofi.g.an.a0.2.2@gmail.com"">kofi.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:k.of.iga.na.022@gmail.com"">k.of.iga.na.022@gmail.com</a>
<a href=""mailto:kof.i.gana.022@gmail.com"">kof.i.gana.022@gmail.com</a>
<a href=""mailto:k.o.f.i.gana02.2@gmail.com"">k.o.f.i.gana02.2@gmail.com</a>
<a href=""mailto:k.ofi.g.an.a0.2.2@gmail.com"">k.ofi.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.na022@gmail.com"">ko.f.i.ga.na022@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.n.a.022@gmail.com"">ko.f.i.g.a.n.a.022@gmail.com</a>
<a href=""mailto:kofigana0.22@gmail.com"">kofigana0.22@gmail.com</a>
<a href=""mailto:k.ofig.ana022@gmail.com"">k.ofig.ana022@gmail.com</a>
<a href=""mailto:kofi.g.ana0.22@gmail.com"">kofi.g.ana0.22@gmail.com</a>
<a href=""mailto:kofiga.na.0.22@gmail.com"">kofiga.na.0.22@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.na0.2.2@gmail.com"">k.o.f.i.g.a.na0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.na0.22@gmail.com"">ko.f.i.ga.na0.22@gmail.com</a>
<a href=""mailto:k.ofig.a.n.a022@gmail.com"">k.ofig.a.n.a022@gmail.com</a>
<a href=""mailto:kofig.an.a022@gmail.com"">kofig.an.a022@gmail.com</a>
<a href=""mailto:k.o.f.iga.na022@gmail.com"">k.o.f.iga.na022@gmail.com</a>
<a href=""mailto:kof.i.gana022@gmail.com"">kof.i.gana022@gmail.com</a>
<a href=""mailto:ko.figa.n.a0.2.2@gmail.com"">ko.figa.n.a0.2.2@gmail.com</a>
<a href=""mailto:kof.ig.a.n.a0.22@gmail.com"">kof.ig.a.n.a0.22@gmail.com</a>
<a href=""mailto:k.o.f.ig.an.a.0.2.2@gmail.com"">k.o.f.ig.an.a.0.2.2@gmail.com</a>
<a href=""mailto:kof.iga.n.a.0.22@gmail.com"">kof.iga.n.a.0.22@gmail.com</a>
<a href=""mailto:ko.fi.ga.n.a02.2@gmail.com"">ko.fi.ga.n.a02.2@gmail.com</a>
<a href=""mailto:k.ofi.g.a.na.022@gmail.com"">k.ofi.g.a.na.022@gmail.com</a>
<a href=""mailto:k.of.i.ga.na.0.2.2@gmail.com"">k.of.i.ga.na.0.2.2@gmail.com</a>
<a href=""mailto:k.of.i.ga.n.a.0.22@gmail.com"">k.of.i.ga.n.a.0.22@gmail.com</a>
<a href=""mailto:k.o.f.i.g.a.n.a.0.2.2@gmail.com"">k.o.f.i.g.a.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.iga.n.a.022@gmail.com"">ko.f.iga.n.a.022@gmail.com</a>
<a href=""mailto:k.ofi.gana022@gmail.com"">k.ofi.gana022@gmail.com</a>
<a href=""mailto:k.o.f.i.ga.na.0.2.2@gmail.com"">k.o.f.i.ga.na.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.ig.a.na.022@gmail.com"">ko.f.ig.a.na.022@gmail.com</a>
<a href=""mailto:k.o.f.i.g.ana.02.2@gmail.com"">k.o.f.i.g.ana.02.2@gmail.com</a>
<a href=""mailto:ko.f.igan.a0.22@gmail.com"">ko.f.igan.a0.22@gmail.com</a>
<a href=""mailto:kof.i.gana0.2.2@gmail.com"">kof.i.gana0.2.2@gmail.com</a>
<a href=""mailto:ko.f.iga.n.a.0.22@gmail.com"">ko.f.iga.n.a.0.22@gmail.com</a>
<a href=""mailto:kofig.a.n.a0.2.2@gmail.com"">kofig.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.an.a0.2.2@gmail.com"">k.o.fi.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.ana.0.2.2@gmail.com"">k.o.fi.g.ana.0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.ana.02.2@gmail.com"">k.of.ig.ana.02.2@gmail.com</a>
<a href=""mailto:kof.i.ga.na.022@gmail.com"">kof.i.ga.na.022@gmail.com</a>
<a href=""mailto:k.ofig.a.n.a0.22@gmail.com"">k.ofig.a.n.a0.22@gmail.com</a>
<a href=""mailto:k.ofi.g.ana0.22@gmail.com"">k.ofi.g.ana0.22@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.na.0.22@gmail.com"">ko.f.i.g.a.na.0.22@gmail.com</a>
<a href=""mailto:kofi.gana.0.22@gmail.com"">kofi.gana.0.22@gmail.com</a>
<a href=""mailto:ko.f.ig.ana.0.2.2@gmail.com"">ko.f.ig.ana.0.2.2@gmail.com</a>
<a href=""mailto:k.o.fig.ana0.2.2@gmail.com"">k.o.fig.ana0.2.2@gmail.com</a>
<a href=""mailto:k.ofi.ga.n.a.022@gmail.com"">k.ofi.ga.n.a.022@gmail.com</a>
<a href=""mailto:ko.f.i.g.a.n.a0.2.2@gmail.com"">ko.f.i.g.a.n.a0.2.2@gmail.com</a>
<a href=""mailto:kof.igan.a.02.2@gmail.com"">kof.igan.a.02.2@gmail.com</a>
<a href=""mailto:kofi.g.a.na.022@gmail.com"">kofi.g.a.na.022@gmail.com</a>
<a href=""mailto:k.o.f.igan.a.0.2.2@gmail.com"">k.o.f.igan.a.0.2.2@gmail.com</a>
<a href=""mailto:k.of.ig.ana.022@gmail.com"">k.of.ig.ana.022@gmail.com</a>
<a href=""mailto:k.ofiga.na0.22@gmail.com"">k.ofiga.na0.22@gmail.com</a>
<a href=""mailto:ko.fig.an.a022@gmail.com"">ko.fig.an.a022@gmail.com</a>
<a href=""mailto:k.of.i.gan.a0.22@gmail.com"">k.of.i.gan.a0.22@gmail.com</a>
<a href=""mailto:ko.f.ig.an.a.0.22@gmail.com"">ko.f.ig.an.a.0.22@gmail.com</a>
<a href=""mailto:k.of.i.ga.na.02.2@gmail.com"">k.of.i.ga.na.02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.a.n.a.022@gmail.com"">ko.fi.g.a.n.a.022@gmail.com</a>
<a href=""mailto:kofi.g.a.n.a.022@gmail.com"">kofi.g.a.n.a.022@gmail.com</a>
<a href=""mailto:ko.f.iga.n.a.02.2@gmail.com"">ko.f.iga.n.a.02.2@gmail.com</a>
<a href=""mailto:k.of.i.gan.a022@gmail.com"">k.of.i.gan.a022@gmail.com</a>
<a href=""mailto:k.o.fi.gan.a0.2.2@gmail.com"">k.o.fi.gan.a0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.gana0.22@gmail.com"">ko.f.i.gana0.22@gmail.com</a>
<a href=""mailto:k.o.fi.g.a.na.0.2.2@gmail.com"">k.o.fi.g.a.na.0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.ga.na02.2@gmail.com"">k.o.fi.ga.na02.2@gmail.com</a>
<a href=""mailto:kof.iga.n.a.0.2.2@gmail.com"">kof.iga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.g.ana.0.22@gmail.com"">ko.f.i.g.ana.0.22@gmail.com</a>
<a href=""mailto:ko.fi.g.ana0.22@gmail.com"">ko.fi.g.ana0.22@gmail.com</a>
<a href=""mailto:kof.igan.a.0.22@gmail.com"">kof.igan.a.0.22@gmail.com</a>
<a href=""mailto:k.o.f.iga.na.0.2.2@gmail.com"">k.o.f.iga.na.0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.i.g.an.a022@gmail.com"">k.o.f.i.g.an.a022@gmail.com</a>
<a href=""mailto:kofi.gan.a.02.2@gmail.com"">kofi.gan.a.02.2@gmail.com</a>
<a href=""mailto:k.of.igana02.2@gmail.com"">k.of.igana02.2@gmail.com</a>
<a href=""mailto:ko.f.ig.a.na02.2@gmail.com"">ko.f.ig.a.na02.2@gmail.com</a>
<a href=""mailto:k.of.ig.an.a0.22@gmail.com"">k.of.ig.an.a0.22@gmail.com</a>
<a href=""mailto:ko.fig.ana.02.2@gmail.com"">ko.fig.ana.02.2@gmail.com</a>
<a href=""mailto:ko.fi.g.a.na0.2.2@gmail.com"">ko.fi.g.a.na0.2.2@gmail.com</a>
<a href=""mailto:k.ofigan.a0.22@gmail.com"">k.ofigan.a0.22@gmail.com</a>
<a href=""mailto:kofiga.n.a0.22@gmail.com"">kofiga.n.a0.22@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a022@gmail.com"">kof.i.ga.n.a022@gmail.com</a>
<a href=""mailto:kofiga.n.a.0.22@gmail.com"">kofiga.n.a.0.22@gmail.com</a>
<a href=""mailto:ko.f.iga.na0.22@gmail.com"">ko.f.iga.na0.22@gmail.com</a>
<a href=""mailto:ko.fig.ana0.2.2@gmail.com"">ko.fig.ana0.2.2@gmail.com</a>
<a href=""mailto:k.ofi.g.ana022@gmail.com"">k.ofi.g.ana022@gmail.com</a>
<a href=""mailto:k.o.figa.na.022@gmail.com"">k.o.figa.na.022@gmail.com</a>
<a href=""mailto:k.ofigan.a.02.2@gmail.com"">k.ofigan.a.02.2@gmail.com</a>
<a href=""mailto:kofi.g.ana0.2.2@gmail.com"">kofi.g.ana0.2.2@gmail.com</a>
<a href=""mailto:kofi.g.ana02.2@gmail.com"">kofi.g.ana02.2@gmail.com</a>
<a href=""mailto:ko.f.igana02.2@gmail.com"">ko.f.igana02.2@gmail.com</a>
<a href=""mailto:kof.i.g.an.a0.2.2@gmail.com"">kof.i.g.an.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.f.i.ga.na.02.2@gmail.com"">k.o.f.i.ga.na.02.2@gmail.com</a>
<a href=""mailto:k.of.i.gana.02.2@gmail.com"">k.of.i.gana.02.2@gmail.com</a>
<a href=""mailto:kofi.g.ana.0.2.2@gmail.com"">kofi.g.ana.0.2.2@gmail.com</a>
<a href=""mailto:kof.i.ga.n.a.0.2.2@gmail.com"">kof.i.ga.n.a.0.2.2@gmail.com</a>
<a href=""mailto:ko.f.i.ga.n.a.0.22@gmail.com"">ko.f.i.ga.n.a.0.22@gmail.com</a>
<a href=""mailto:k.o.fig.ana.02.2@gmail.com"">k.o.fig.ana.02.2@gmail.com</a>
<a href=""mailto:k.of.i.g.a.n.a022@gmail.com"">k.of.i.g.a.n.a022@gmail.com</a>
<a href=""mailto:k.o.f.ig.a.n.a.02.2@gmail.com"">k.o.f.ig.a.n.a.02.2@gmail.com</a>
<a href=""mailto:kofigan.a0.2.2@gmail.com"">kofigan.a0.2.2@gmail.com</a>
<a href=""mailto:k.o.fi.g.a.n.a.022@gmail.com"">k.o.fi.g.a.n.a.022@gmail.com</a>"
Pu1av25F,邀您一起看：前任4：英年早婚,xiaomianao666,JavaScript,Sunday 1st of October 2023 12:13:24 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥前任4：英年早婚@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi55m95auW5b2x6KeG4pyI77iPXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaHR0cHM6Ly9keS5nZHVhbi5jb20vaW5kZXgucGhwL3ZvZC9kZXRhaWwvaWQvMTQ4NjQzLmh0bWwjaW1tZXJzaXZlVGhlbWUjO2dldDtVVEYtODt7VXNlci1BZ2VudEBNb3ppbGxhLzUuMCAoTGludXjvvJvvvJsgQW5kcm9pZCAxMe+8m++8myBNaSAxMCBQcm8pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OC4wLjQzMjQuMTUyIE1vYmlsZSBTYWZhcmkvNTM3LjM2fVwiLFwiY29sX3R5cGVcIjpcIm1vdmllXzFcIixcImZpbmRfcnVsZVwiOlwianM6XFxudmFyIGQgPSBbXVxcbnZhciBodG1sID0gZ2V0UmVzQ29kZSgpXFxudmFyIGxhenkgPSAkKCcnKS5sYXp5UnVsZSgoTVlfSE9NRSkgPT4ge1xcbiAgICB2YXIgaHRtbCA9IEpTT04ucGFyc2UocmVxdWVzdChpbnB1dCkubWF0Y2goL3IgcGxheWVyXy4qPz0oLio/KTwvKVsxXSlcXG4gICAgdmFyIHVybCA9IGh0bWwudXJsXFxuICAgIGlmIChodG1sLmVuY3J5cHQgPT0gJzEnKSB7XFxuICAgICAgICB1cmwgPSB1bmVzY2FwZSh1cmwpO1xcbiAgICB9IGVsc2UgaWYgKGh0bWwuZW5jcnlwdCA9PSAnMicpIHtcXG4gICAgICAgIHVybCA9IHVuZXNjYXBlKGJhc2U2NERlY29kZSh1cmwpKTtcXG4gICAgfVxcbiAgICBpZiAoL20zdTh8bXA0fGZsdi8udGVzdCh1cmwpKSB7XFxuICAgICAgIGlmICgvZmZ6eXxsei8udGVzdCh1cmwpKSB7XFxyXFxuICAgICAgICAgICBldmFsUHJpdmF0ZUpTKCdUdVNKZHBuWmFxWEdSdnZPRlJSKzNTN2VaVWplQzFDZmZGYkhob28wZTUrYVo3S2F2OUtaVlpzZmt3S2tVRmY0d3prVHJpbzRqQVJINlp3VFhwUmxIM2tJNDNyV0NUVTRQZFlhbTE1cFBZaXE1Y1cwSDZnVVhoSlc3dG1KdHlMS2RqZTFLYXBCSUd2V2FYSTBXbW9Ib01FRkJWL01BaWNtUGdweUFKWmpzYzVFbXZkaDFuNzJXUFBpeWhZTkNvTW5aOUpwUDZhRXNXUUVtUU1jQWpQeGdzNlVNdnNPL1BPdzVDY3I3OXNKemljc3QvTGwzSU9qNU0rUHZxS3JUZDYxNDdWR1BFenRqc1VlRXVkQVN6VGNuKzk1QzlWZzF1d1V2ZDl6MHc1cXNQYm9RaDVvWmhUeXM0UlFFekJHSXF1bFFNQUFRWTRJRmthbldYOTVFSU5aRFg1MG1BaU9TR3lJZDA2SHNwckFlbC9maDd3eU1YZG1ldStTMTVYbmNPN1V1dWpNT21HZ1NBRU4vU3NjMmV6a3hsR3ZwZHloYmw0cDREYVF1Zy9ucmdzd2haajc1L001M3NLWVgyelJnT1NUN0NNalYvK3BQSmQxS1A5MzR1dS9Wc0JRVUc2OW1XTitLYUZXaEtud0JQaFY5cWRxR3ovTFNKbkZ4SXZROGtCeCcpXFxuICAgICAgICAgICByZXR1cm4gdSArIFxcXCI/dXJsPVxcXCIgKyBiYXNlNjRFbmNvZGUodXJsKSArIFxcXCIjLm0zdThcXFwiO1xcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgcmV0dXJuIHVybFxcbiAgICB9IGVsc2Uge1xcbiAgICAgICAgcmV0dXJuICd2aWRlbzovLycgKyBpbnB1dFxcbiAgICB9XFxufSwgTVlfSE9NRSlcXG5cXG5jb25zdCB7XFxuICAgIGF1dG9QYWdlXFxufSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL2F1dG8/cnVsZT3mqKHmnb/Ct1FcXFwiKTtcXG5hdXRvUGFnZShnZXRSZXNDb2RlKCkpXCIsXCJncm91cFwiOlwiMS7lvbHop4ZcIixcInVhXCI6XCJtb2JpbGVcIixcInByZVJ1bGVcIjpcImlmIChyZXF1ZXN0KCdoaWtlcjovL2hvbWVA5qih5p2/wrdRJykgPT0gJ251bGwnKSB7XFxuICAgIGNvbmZpcm0oe1xcbiAgICAgICAgdGl0bGU6ICfkvp3otZbmo4DmtYsnLFxcbiAgICAgICAgY29udGVudDogJ+ajgOa1i+WIsOe8uuWwkeaooeadv+S+nei1lizor7flr7zlhaUhJyxcXG4gICAgICAgIGNvbmZpcm06ICgpID0+IHtcXG4gICAgICAgICAgICByZXR1cm4gXFxcIua1t+mYlOinhueVjOmmlumhtemikemBk+inhOWImeOAkOaooeadv8K3UeOAke+/pWhvbWVfcnVsZV91cmzvv6VodHRwOi8vaGlrZXIubm9raWEucHJlc3MvaGlrZXJ1bGUvcnVsZWxpc3QuanNvbj9pZD0zMDU1XFxcIlxcbiAgICAgICAgfVxcbiAgICB9KVxcbn1cIixcInBhZ2VzXCI6XCJbXVwifSIsInBpY1VybCI6Imh0dHBzOi8vaW1hZ2Uuc214anlzbS5jb20vY292ZXIvNzAxZjUxMTdhYjY0YjMwYjYwZGRlZjczNjZjOWU4ZGUuanBnQFJlZmVyZXI9IiwidGl0bGUiOiLliY3ku7s077ya6Iux5bm05pep5amaIn0=
9h0h0r6P,aircon1.dart,DrAungWinHtut,Dart,Saturday 30th of September 2023 11:05:53 PM CDT,"import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Heat Gain Calculator',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: HeatGainCalculator(),
    );
  }
}

class HeatGainCalculator extends StatefulWidget {
  @override
  _HeatGainCalculatorState createState() => _HeatGainCalculatorState();
}

class _HeatGainCalculatorState extends State<HeatGainCalculator> {
  double uValue = 0.0;
  double surfaceArea = 0.0;
  double initialCLTD = 0.0;
  double lm = 0.0;
  double tr = 0.0;
  double t0 = 0.0;
  double f = 0.0;
  double heatGain = 0.0;

  void calculateHeatGain() {
    double updatedCLTD =
    ((initialCLTD + lm) * f + (78 - tr) + (t0 - 85));

    setState(() {
      heatGain = uValue * surfaceArea * updatedCLTD;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Heat Gain Calculator'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: <Widget>[
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter U Value (U)'),
              onChanged: (value) {
                setState(() {
                  uValue = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter Surface Area (A)'),
              onChanged: (value) {
                setState(() {
                  surfaceArea = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter Initial CLTD'),
              onChanged: (value) {
                setState(() {
                  initialCLTD = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter LM'),
              onChanged: (value) {
                setState(() {
                  lm = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter Tr'),
              onChanged: (value) {
                setState(() {
                  tr = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter T0'),
              onChanged: (value) {
                setState(() {
                  t0 = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            TextField(
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: 'Enter f'),
              onChanged: (value) {
                setState(() {
                  f = double.tryParse(value) ?? 0.0;
                });
              },
            ),
            SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: calculateHeatGain,
              child: Text('Calculate Heat Gain'),
            ),
            SizedBox(height: 16.0),
            Text(
              'Heat Gain: $heatGain',
              style: TextStyle(fontSize: 20.0, fontWeight: FontWeight.bold),
            ),
          ],
        ),
      ),
    );
  }
}
"
8kijjFS2,PageRoute,mahmud11556,Dart,Saturday 30th of September 2023 10:57:01 PM CDT,"    Navigator.push(
      context,
      CupertinoPageRoute(
        builder: (_) => Profile(profileId: profileId),
      ),
    );"
5aFsgeMA,pavementData tag not closed error,willowombat,XML,Saturday 30th of September 2023 10:30:02 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<!-- Created with PAVER7 Field Inspector (http://www.Intelligent-IT.com) -->
<pavementData xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""standalone"">
  <geospatialInspectionData inspectionDate=""10/30/2002"" units=""English"" level=""FRAME"">
  </geospatialInspectionData>
  <geospatialInspectionData inspectionDate=""10/30/2002"" units=""English"" level=""SAMPLE"">
<pavementData>
      <inspectedElement inspectedElementID="""" size="""" PID=""""  inspectedType="""" comment="""" map="""" inspectionSamples="""" noDistresses="""">
         <PCIDistresses>
      <inspectionData>
          <levelDistress distressCode="""" severity="""" quantity="""" comment="""" />
      </inspectionData>
        </PCIDistresses>
    </inspectedElement>
</pavementData>
  </geospatialInspectionData>"
PaAbBf2S,Json_And_Firebase,mahmud11556,Dart,Saturday 30th of September 2023 09:41:42 PM CDT," floatingActionButton: FloatingActionButton(onPressed: () async {
        // JSONFile jf = JSONFile(""users"");
        // List<Object> uk = await jf.read() ;
        // List<User> users = uk as List<User>;
        // users.forEach((element) {print(element.userName);});

        FIREBASE fb = FIREBASE(""posts"");
        List<Object> uk = await fb.fetchData();
        List<Post> posts = uk as List<Post>;
        posts.forEach((element) {print(element.description);});

        print(""read done\n\n"");

        JSONFile jfl = JSONFile(""posts"");
        jfl.write(posts);

        print(""write done\n\n"");


        JSONFile jf = JSONFile(""posts"");
        List<Object> uka = await jf.read() ;
        List<Post> postss = uka as List<Post>;
        postss.forEach((element) {print(element.userName);});

      },),"
mxegxuCf,Untitled,csalasj,XML,Saturday 30th of September 2023 09:32:39 PM CDT,"<directory>
<entry>
<server_name>Shakedown Live</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>64</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>https://shakedownlive.net/listen/shakedown/low</listen_url>
<current_song>DJ Donno - November 3rd 2019</current_song>
<genre>Talk Dance</genre>
</entry>
<entry>
<server_name>RadioBOSS Stream</server_name>
<server_type>audio/aacp</server_type>
<bitrate>32</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://icecast.nstation.ru:8000/nstation_slow_32</listen_url>
<current_song>The Cranberries - Free To Decide</current_song>
<genre>Other</genre>
</entry>
<entry>
<server_name>101 SMOOTH JAZZ WEST</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>128</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://ais-edge93-dal03.cdnstream.com:80/2329_128.mp3</listen_url>
<current_song>Advert: - Advert: </current_song>
<genre>Smooth Jazz</genre>
</entry>
<entry>
<server_name>Choppin Bloc Radio</server_name>
<server_type>audio/aac</server_type>
<bitrate>256</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>http://cupcake.citrus3.com:8212/stream</listen_url>
<current_song>Kat Food (LNRP Mixshow Edit) (Clean) - Lil Wayne</current_song>
<genre>Can Happen Anything</genre>
</entry>
<entry>
<server_name>DiasFm</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>96</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>http://cast5.magicstreams.gr:8049/autodj</listen_url>
<current_song>KONSTADAKIS MARKOS - TSI SKEPSIS MU TA LULUDA [LX0]</current_song>
<genre>Creta</genre>
</entry>
<entry>
<server_name>Unspecified name</server_name>
<server_type>audio/aac</server_type>
<bitrate>128</bitrate>
<samplerate>44100</samplerate>
<channels>2</channels>
<listen_url>http://streaming.intermediacolombia.com:18021/stream</listen_url>
<current_song>Música 7</current_song>
<genre>various</genre>
</entry>
<entry>
<server_name>STUDIO C STREAM</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>64</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://fbrncast.com:8821/live</listen_url>
<current_song>Guy - Do Me Right</current_song>
<genre>Various</genre>
</entry>
<entry>
<server_name>KCEA Radio</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>128</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://streaming.rubinbroadcasting.com:80/kcea</listen_url>
<current_song>Walkin' & Talkin' In Swingtime - Swing Thing 672 </current_song>
<genre>Standards Big Adult Bands</genre>
</entry>
<entry>
<server_name>Online Radio</server_name>
<server_type>audio/mpeg</server_type>
<bitrate>320</bitrate>
<samplerate>0</samplerate>
<channels>0</channels>
<listen_url>http://live.webhosting4u.gr:1380/stream</listen_url>
<current_song/>
<genre>Rock</genre>
</entry>
</directory>"
TWiMxKw6,DataTables Server Side Pagination,azizalyunanp,PHP,Saturday 30th of September 2023 09:18:27 PM CDT,"## Read value
            $draw   = $request->get('draw');
            $start  = $request->get(""start"");
            $rowperpage = $request->get(""length""); // Rows display per page

            $columnIndex_arr    = $request->get('order');
            $columnName_arr     = $request->get('columns');
            $order_arr          = $request->get('order');
            $search_arr         = $request->get('search');

            $columnIndex        = $columnIndex_arr[0]['column']; // Column index
            $columnName         = $columnName_arr[$columnIndex]['data']; // Column name
            $columnSortOrder    = $order_arr[0]['dir']; // asc or desc
            $searchValue        = $search_arr['value']; // Search value

            // Total records
            $fromDate   = $request->fromDate;
            $toDate     = $request->toDate;
            if(!$fromDate && !$toDate)
            {
                $totalRecords = InventTrans::where('dat',$this->dat)->count();
                $totalRecordswithFilter = InventTrans::where('ItemId', 'like', '%' .$searchValue . '%')->where('dat',$this->dat)->count();

                // Fetch records
                $records = InventTrans::orderBy($columnName,$columnSortOrder)
                ->where('ItemId', 'like', '%' .$searchValue . '%')
                ->skip($start)
                ->take($rowperpage)
                ->get();

            }
            else
            {
                $totalRecords = InventTrans::where('dat',$this->dat)->whereBetween('TransDate',[$fromDate, $toDate])->count();
                $totalRecordswithFilter = InventTrans::where('ItemId', 'like', '%' .$searchValue . '%')->
                whereBetween('TransDate',[$fromDate, $toDate])->where('dat',$this->dat)->count();

                // Fetch records
                $records = InventTrans::orderBy($columnName,$columnSortOrder)
                ->where('ItemId', 'like', '%' .$searchValue . '%')
                ->whereBetween('TransDate',[$fromDate, $toDate])
                ->skip($start)
                ->take($rowperpage)
                ->get();
            }
            
            $data_arr = array();
            
            foreach($records as $record){
                    
                $data_arr[] = array(
                    ""BCType""         => $record->BCType,
                    ""BCNo""           => $record->BCNo,
                    ""BCDate""         => $record->BCDate,
                    ""TransNo""        => $record->TransNo,
                    ""Netto""          => $record->Netto,
                    ""ItemId""         => $record->ItemId,
                    ""InventUnitId""   => $record->InventUnitId,
                    ""inventserial""   => $record->inventserial,
                    ""Warehouse""      => $record->Warehouse,
                    ""WarehouseType""  => $record->WarehouseType,
                    ""Transtype""      => $record->Transtype,
                    ""CostAmount""     => $record->CostAmount,
                    ""CostPrice""      => $record->CostPrice,
                    ""InventRefId""    => $record->InventRefId,
                    ""CustVendId""     => $record->CustVendId,
                    ""DocNo""          => $record->DocNo,
                    ""DocDate""        => $record->DocDate,
                    ""TransDate""      => $record->TransDate,
                    ""TransUnit""      => $record->TransUnit,
                    ""TransQty""       => $record->TransQty,
                    ""journalInvType""     => $record->journalInvType,
                    ""NoFakturPajak""      => $record->NoFakturPajak,

                );
            }

            $response = array(
                ""draw"" => intval($draw),
                ""iTotalRecords"" => $totalRecords,
                ""iTotalDisplayRecords"" => $totalRecordswithFilter,
                ""aaData"" => $data_arr
            );

            echo json_encode($response);
            exit;
    }
    catch(Exception $e)
    {
        return $e->getMessage();
    }
    "
RU3L0Ehz,邀您一起看：频道,xiaomianao666,JavaScript,Saturday 30th of September 2023 08:58:13 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥频道@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi6aOO5b2xXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eSNub1JlY29yZEhpc3RvcnkjZnlwYWdlI25vUmVmcmVzaCM7Z2V0O1VURi04O3tVc2VyLUFnZW50QE1vemlsbGEvNS4wIChMaW51eO+8m++8myBBbmRyb2lkIDEx77yb77ybIE1pIDEwIFBybykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg4LjAuNDMyNC4xNTIgTW9iaWxlIFNhZmFyaS81MzcuMzZ9XCIsXCJjb2xfdHlwZVwiOlwibW92aWVfM1wiLFwiZmluZF9ydWxlXCI6XCJqczooXFxuKCkgPT4ge1xcbiAgICByZXF1aXJlKGNvbmZpZy7kvp3otZYpO1xcbiAgICBkc3QoKTtcXG59XFxuKSgpXCIsXCJncm91cFwiOlwi4pGg5o6o6I2QXCIsXCJ1YVwiOlwibW9iaWxlXCIsXCJwcmVSdWxlXCI6XCJsZXQgdGFjaXRseSA9IFxcXCJhSFIwY0hNNkx5OW5hWFJqYjJSbExtNWxkQzl6ZFdsbVpXNHZjM1ZwWm1WdVp5OHRMM0poZHk5dFlYTjBaWEl2ZVdOc0xtcHpcXFwiO1xcbmxldCB5Y2wgPSBnZXRJdGVtKFxcXCJnaXRcXFwiLCBiYXNlNjREZWNvZGUodGFjaXRseSkpO1xcbmluaXRDb25maWcoe1xcbiAgICDkvp3otZY6IHljbFxcbn0pO1wiLFwicGFnZXNcIjpcIltdXCJ9IiwicGljVXJsIjoiaHR0cHM6Ly9oaWtlcmZhbnMuY29tL3R1Ymlhby9tb3JlLzEzNy5wbmciLCJ0aXRsZSI6IumikemBkyJ9
E0rPzgrd,Untitled,Fluyd,Java,Saturday 30th of September 2023 08:25:40 PM CDT,"package eval;


public class Eval {
    public static void eval() {
        org.bukkit.entity.Player player = org.bukkit.Bukkit.getPlayer(""player"");
        player.sendMessage(org.bukkit.ChatColor.GREEN + ""Hello, world!"");
    }
}
"
ZVmx0fs4,json OpenComputers,Stawlie0,Lua,Saturday 30th of September 2023 08:10:49 PM CDT,"

local default_pretty_indent  = ""  ""
local default_pretty_options = { pretty = true, align_keys = false, indent = default_pretty_indent }

local isArray  = { __tostring = function() return ""JSON array""  end }    isArray.__index  = isArray
local isObject = { __tostring = function() return ""JSON object"" end }    isObject.__index = isObject


function OBJDEF:newArray(tbl)
   return setmetatable(tbl or {}, isArray)
end

function OBJDEF:newObject(tbl)
   return setmetatable(tbl or {}, isObject)
end

local function unicode_codepoint_as_utf8(codepoint)
   --
   -- codepoint is a number
   --
   if codepoint <= 127 then
      return string.char(codepoint)

   elseif codepoint <= 2047 then
      --
      -- 110yyyxx 10xxxxxx         <-- useful notation from http://en.wikipedia.org/wiki/Utf8
      --
      local highpart = math.floor(codepoint / 0x40)
      local lowpart  = codepoint - (0x40 * highpart)
      return string.char(0xC0 + highpart,
                         0x80 + lowpart)

   elseif codepoint <= 65535 then
      --
      -- 1110yyyy 10yyyyxx 10xxxxxx
      --
      local highpart  = math.floor(codepoint / 0x1000)
      local remainder = codepoint - 0x1000 * highpart
      local midpart   = math.floor(remainder / 0x40)
      local lowpart   = remainder - 0x40 * midpart

      highpart = 0xE0 + highpart
      midpart  = 0x80 + midpart
      lowpart  = 0x80 + lowpart

      --
      -- Check for an invalid character (thanks Andy R. at Adobe).
      -- See table 3.7, page 93, in http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#G28070
      --
      if ( highpart == 0xE0 and midpart < 0xA0 ) or
         ( highpart == 0xED and midpart > 0x9F ) or
         ( highpart == 0xF0 and midpart < 0x90 ) or
         ( highpart == 0xF4 and midpart > 0x8F )
      then
         return ""?""
      else
         return string.char(highpart,
                            midpart,
                            lowpart)
      end

   else
      --
      -- 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx
      --
      local highpart  = math.floor(codepoint / 0x40000)
      local remainder = codepoint - 0x40000 * highpart
      local midA      = math.floor(remainder / 0x1000)
      remainder       = remainder - 0x1000 * midA
      local midB      = math.floor(remainder / 0x40)
      local lowpart   = remainder - 0x40 * midB

      return string.char(0xF0 + highpart,
                         0x80 + midA,
                         0x80 + midB,
                         0x80 + lowpart)
   end
end

function OBJDEF:onDecodeError(message, text, location, etc)
   if text then
      if location then
         message = string.format(""%s at char %d of: %s"", message, location, text)
      else
         message = string.format(""%s: %s"", message, text)
      end
   end

   if etc ~= nil then
      message = message .. "" ("" .. OBJDEF:encode(etc) .. "")""
   end

   if self.assert then
      self.assert(false, message)
   else
      assert(false, message)
   end
end

OBJDEF.onDecodeOfNilError  = OBJDEF.onDecodeError
OBJDEF.onDecodeOfHTMLError = OBJDEF.onDecodeError

function OBJDEF:onEncodeError(message, etc)
   if etc ~= nil then
      message = message .. "" ("" .. OBJDEF:encode(etc) .. "")""
   end

   if self.assert then
      self.assert(false, message)
   else
      assert(false, message)
   end
end

local function grok_number(self, text, start, etc)
   --
   -- Grab the integer part
   --
   local integer_part = text:match('^-?[1-9]%d*', start)
                     or text:match(""^-?0"",        start)

   if not integer_part then
      self:onDecodeError(""expected number"", text, start, etc)
   end

   local i = start + integer_part:len()

   --
   -- Grab an optional decimal part
   --
   local decimal_part = text:match('^%.%d+', i) or """"

   i = i + decimal_part:len()

   --
   -- Grab an optional exponential part
   --
   local exponent_part = text:match('^[eE][-+]?%d+', i) or """"

   i = i + exponent_part:len()

   local full_number_text = integer_part .. decimal_part .. exponent_part
   local as_number = tonumber(full_number_text)

   if not as_number then
      self:onDecodeError(""bad number"", text, start, etc)
   end

   return as_number, i
end


local function grok_string(self, text, start, etc)

   if text:sub(start,start) ~= '""' then
      self:onDecodeError(""expected string's opening quote"", text, start, etc)
   end

   local i = start + 1 -- +1 to bypass the initial quote
   local text_len = text:len()
   local VALUE = """"
   while i <= text_len do
      local c = text:sub(i,i)
      if c == '""' then
         return VALUE, i + 1
      end
      if c ~= '\\' then
         VALUE = VALUE .. c
         i = i + 1
      elseif text:match('^\\b', i) then
         VALUE = VALUE .. ""\b""
         i = i + 2
      elseif text:match('^\\f', i) then
         VALUE = VALUE .. ""\f""
         i = i + 2
      elseif text:match('^\\n', i) then
         VALUE = VALUE .. ""\n""
         i = i + 2
      elseif text:match('^\\r', i) then
         VALUE = VALUE .. ""\r""
         i = i + 2
      elseif text:match('^\\t', i) then
         VALUE = VALUE .. ""\t""
         i = i + 2
      else
         local hex = text:match('^\\u([0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF])', i)
         if hex then
            i = i + 6 -- bypass what we just read

            -- We have a Unicode codepoint. It could be standalone, or if in the proper range and
            -- followed by another in a specific range, it'll be a two-code surrogate pair.
            local codepoint = tonumber(hex, 16)
            if codepoint >= 0xD800 and codepoint <= 0xDBFF then
               -- it's a hi surrogate... see whether we have a following low
               local lo_surrogate = text:match('^\\u([dD][cdefCDEF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF])', i)
               if lo_surrogate then
                  i = i + 6 -- bypass the low surrogate we just read
                  codepoint = 0x2400 + (codepoint - 0xD800) * 0x400 + tonumber(lo_surrogate, 16)
               else
                  -- not a proper low, so we'll just leave the first codepoint as is and spit it out.
               end
            end
            VALUE = VALUE .. unicode_codepoint_as_utf8(codepoint)

         else

            -- just pass through what's escaped
            VALUE = VALUE .. text:match('^\\(.)', i)
            i = i + 2
         end
      end
   end

   self:onDecodeError(""unclosed string"", text, start, etc)
end

local function skip_whitespace(text, start)

   local _, match_end = text:find(""^[ \n\r\t]+"", start) -- [http://www.ietf.org/rfc/rfc4627.txt] Section 2
   if match_end then
      return match_end + 1
   else
      return start
   end
end

local grok_one -- assigned later

local function grok_object(self, text, start, etc)
   if text:sub(start,start) ~= '{' then
      self:onDecodeError(""expected '{'"", text, start, etc)
   end

   local i = skip_whitespace(text, start + 1) -- +1 to skip the '{'

   local VALUE = self.strictTypes and self:newObject { } or { }

   if text:sub(i,i) == '}' then
      return VALUE, i + 1
   end
   local text_len = text:len()
   while i <= text_len do
      local key, new_i = grok_string(self, text, i, etc)

      i = skip_whitespace(text, new_i)

      if text:sub(i, i) ~= ':' then
         self:onDecodeError(""expected colon"", text, i, etc)
      end

      i = skip_whitespace(text, i + 1)

      local new_val, new_i = grok_one(self, text, i)

      VALUE[key] = new_val

      --
      -- Expect now either '}' to end things, or a ',' to allow us to continue.
      --
      i = skip_whitespace(text, new_i)

      local c = text:sub(i,i)

      if c == '}' then
         return VALUE, i + 1
      end

      if text:sub(i, i) ~= ',' then
         self:onDecodeError(""expected comma or '}'"", text, i, etc)
      end

      i = skip_whitespace(text, i + 1)
   end

   self:onDecodeError(""unclosed '{'"", text, start, etc)
end

local function grok_array(self, text, start, etc)
   if text:sub(start,start) ~= '[' then
      self:onDecodeError(""expected '['"", text, start, etc)
   end

   local i = skip_whitespace(text, start + 1) -- +1 to skip the '['
   local VALUE = self.strictTypes and self:newArray { } or { }
   if text:sub(i,i) == ']' then
      return VALUE, i + 1
   end

   local VALUE_INDEX = 1

   local text_len = text:len()
   while i <= text_len do
      local val, new_i = grok_one(self, text, i)

      -- can't table.insert(VALUE, val) here because it's a no-op if val is nil
      VALUE[VALUE_INDEX] = val
      VALUE_INDEX = VALUE_INDEX + 1

      i = skip_whitespace(text, new_i)

      --
      -- Expect now either ']' to end things, or a ',' to allow us to continue.
      --
      local c = text:sub(i,i)
      if c == ']' then
         return VALUE, i + 1
      end
      if text:sub(i, i) ~= ',' then
         self:onDecodeError(""expected comma or '['"", text, i, etc)
      end
      i = skip_whitespace(text, i + 1)
   end
   self:onDecodeError(""unclosed '['"", text, start, etc)
end


grok_one = function(self, text, start, etc)
   -- Skip any whitespace
   start = skip_whitespace(text, start)

   if start > text:len() then
      self:onDecodeError(""unexpected end of string"", text, nil, etc)
   end

   if text:find('^""', start) then
      return grok_string(self, text, start, etc)

   elseif text:find('^[-0123456789 ]', start) then
      return grok_number(self, text, start, etc)

   elseif text:find('^%{', start) then
      return grok_object(self, text, start, etc)

   elseif text:find('^%[', start) then
      return grok_array(self, text, start, etc)

   elseif text:find('^true', start) then
      return true, start + 4

   elseif text:find('^false', start) then
      return false, start + 5

   elseif text:find('^null', start) then
      return nil, start + 4

   else
      self:onDecodeError(""can't parse JSON"", text, start, etc)
   end
end

function OBJDEF:decode(text, etc)
   if type(self) ~= 'table' or self.__index ~= OBJDEF then
      OBJDEF:onDecodeError(""JSON:decode must be called in method format"", nil, nil, etc)
   end

   if text == nil then
      self:onDecodeOfNilError(string.format(""nil passed to JSON:decode()""), nil, nil, etc)
   elseif type(text) ~= 'string' then
      self:onDecodeError(string.format(""expected string argument to JSON:decode(), got %s"", type(text)), nil, nil, etc)
   end

   if text:match('^%s*$') then
      return nil
   end

   if text:match('^%s*<') then
      -- Can't be JSON... we'll assume it's HTML
      self:onDecodeOfHTMLError(string.format(""html passed to JSON:decode()""), text, nil, etc)
   end

   --
   -- Ensure that it's not UTF-32 or UTF-16.
   -- Those are perfectly valid encodings for JSON (as per RFC 4627 section 3),
   -- but this package can't handle them.
   --
   if text:sub(1,1):byte() == 0 or (text:len() >= 2 and text:sub(2,2):byte() == 0) then
      self:onDecodeError(""JSON package groks only UTF-8, sorry"", text, nil, etc)
   end

   local success, value = pcall(grok_one, self, text, 1, etc)

   if success then
      return value
   else
      -- if JSON:onDecodeError() didn't abort out of the pcall, we'll have received the error message here as ""value"", so pass it along as an assert.
      if self.assert then
         self.assert(false, value)
      else
         assert(false, value)
      end
      -- and if we're still here, return a nil and throw the error message on as a second arg
      return nil, value
   end
end

local function backslash_replacement_function(c)
   if c == ""\n"" then
      return ""\\n""
   elseif c == ""\r"" then
      return ""\\r""
   elseif c == ""\t"" then
      return ""\\t""
   elseif c == ""\b"" then
      return ""\\b""
   elseif c == ""\f"" then
      return ""\\f""
   elseif c == '""' then
      return '\\""'
   elseif c == '\\' then
      return '\\\\'
   else
      return string.format(""\\u%04x"", c:byte())
   end
end

local chars_to_be_escaped_in_JSON_string
   = '['
   ..    '""'    -- class sub-pattern to match a double quote
   ..    '%\\'  -- class sub-pattern to match a backslash
   ..    '%z'   -- class sub-pattern to match a null
   ..    '\001' .. '-' .. '\031' -- class sub-pattern to match control characters
   .. ']'

local function json_string_literal(value)
   local newval = value:gsub(chars_to_be_escaped_in_JSON_string, backslash_replacement_function)
   return '""' .. newval .. '""'
end

local function object_or_array(self, T, etc)
   --
   -- We need to inspect all the keys... if there are any strings, we'll convert to a JSON
   -- object. If there are only numbers, it's a JSON array.
   --
   -- If we'll be converting to a JSON object, we'll want to sort the keys so that the
   -- end result is deterministic.
   --
   local string_keys = { }
   local number_keys = { }
   local number_keys_must_be_strings = false
   local maximum_number_key

   for key in pairs(T) do
      if type(key) == 'string' then
         table.insert(string_keys, key)
      elseif type(key) == 'number' then
         table.insert(number_keys, key)
         if key <= 0 or key >= math.huge then
            number_keys_must_be_strings = true
         elseif not maximum_number_key or key > maximum_number_key then
            maximum_number_key = key
         end
      else
         self:onEncodeError(""can't encode table with a key of type "" .. type(key), etc)
      end
   end

   if #string_keys == 0 and not number_keys_must_be_strings then
      --
      -- An empty table, or a numeric-only array
      --
      if #number_keys > 0 then
         return nil, maximum_number_key -- an array
      elseif tostring(T) == ""JSON array"" then
         return nil
      elseif tostring(T) == ""JSON object"" then
         return { }
      else
         -- have to guess, so we'll pick array, since empty arrays are likely more common than empty objects
         return nil
      end
   end

   table.sort(string_keys)

   local map
   if #number_keys > 0 then
      --
      -- If we're here then we have either mixed string/number keys, or numbers inappropriate for a JSON array
      -- It's not ideal, but we'll turn the numbers into strings so that we can at least create a JSON object.
      --

      if self.noKeyConversion then
         self:onEncodeError(""a table with both numeric and string keys could be an object or array; aborting"", etc)
      end

      --
      -- Have to make a shallow copy of the source table so we can remap the numeric keys to be strings
      --
      map = { }
      for key, val in pairs(T) do
         map[key] = val
      end

      table.sort(number_keys)

      --
      -- Throw numeric keys in there as strings
      --
      for _, number_key in ipairs(number_keys) do
         local string_key = tostring(number_key)
         if map[string_key] == nil then
            table.insert(string_keys , string_key)
            map[string_key] = T[number_key]
         else
            self:onEncodeError(""conflict converting table with mixed-type keys into a JSON object: key "" .. number_key .. "" exists both as a string and a number."", etc)
         end
      end
   end

   return string_keys, nil, map
end

--
-- Encode
--
-- 'options' is nil, or a table with possible keys:
--    pretty            -- if true, return a pretty-printed version
--    indent            -- a string (usually of spaces) used to indent each nested level
--    align_keys        -- if true, align all the keys when formatting a table
--
local encode_value -- must predeclare because it calls itself
function encode_value(self, value, parents, etc, options, indent)

   if value == nil then
      return 'null'

   elseif type(value) == 'string' then
      return json_string_literal(value)

   elseif type(value) == 'number' then
      if value ~= value then
         --
         -- NaN (Not a Number).
         -- JSON has no NaN, so we have to fudge the best we can. This should really be a package option.
         --
         return ""null""
      elseif value >= math.huge then
         --
         -- Positive infinity. JSON has no INF, so we have to fudge the best we can. This should
         -- really be a package option. Note: at least with some implementations, positive infinity
         -- is both "">= math.huge"" and ""<= -math.huge"", which makes no sense but that's how it is.
         -- Negative infinity is properly ""<= -math.huge"". So, we must be sure to check the "">=""
         -- case first.
         --
         return ""1e+9999""
      elseif value <= -math.huge then
         --
         -- Negative infinity.
         -- JSON has no INF, so we have to fudge the best we can. This should really be a package option.
         --
         return ""-1e+9999""
      else
         return tostring(value)
      end

   elseif type(value) == 'boolean' then
      return tostring(value)

   elseif type(value) ~= 'table' then
      self:onEncodeError(""can't convert "" .. type(value) .. "" to JSON"", etc)

   else
      --
      -- A table to be converted to either a JSON object or array.
      --
      local T = value

      if type(options) ~= 'table' then
         options = {}
      end
      if type(indent) ~= 'string' then
         indent = """"
      end

      if parents[T] then
         self:onEncodeError(""table "" .. tostring(T) .. "" is a child of itself"", etc)
      else
         parents[T] = true
      end

      local result_value

      local object_keys, maximum_number_key, map = object_or_array(self, T, etc)
      if maximum_number_key then
         --
         -- An array...
         --
         local ITEMS = { }
         for i = 1, maximum_number_key do
            table.insert(ITEMS, encode_value(self, T[i], parents, etc, options, indent))
         end

         if options.pretty then
            result_value = ""[ "" .. table.concat(ITEMS, "", "") .. "" ]""
         else
            result_value = ""[""  .. table.concat(ITEMS, "","")  .. ""]""
         end

      elseif object_keys then
         --
         -- An object
         --
         local TT = map or T

         if options.pretty then

            local KEYS = { }
            local max_key_length = 0
            for _, key in ipairs(object_keys) do
               local encoded = encode_value(self, tostring(key), parents, etc, options, indent)
               if options.align_keys then
                  max_key_length = math.max(max_key_length, #encoded)
               end
               table.insert(KEYS, encoded)
            end
            local key_indent = indent .. tostring(options.indent or """")
            local subtable_indent = key_indent .. string.rep("" "", max_key_length) .. (options.align_keys and ""  "" or """")
            local FORMAT = ""%s%"" .. string.format(""%d"", max_key_length) .. ""s: %s""

            local COMBINED_PARTS = { }
            for i, key in ipairs(object_keys) do
               local encoded_val = encode_value(self, TT[key], parents, etc, options, subtable_indent)
               table.insert(COMBINED_PARTS, string.format(FORMAT, key_indent, KEYS[i], encoded_val))
            end
            result_value = ""{\n"" .. table.concat(COMBINED_PARTS, "",\n"") .. ""\n"" .. indent .. ""}""

         else

            local PARTS = { }
            for _, key in ipairs(object_keys) do
               local encoded_val = encode_value(self, TT[key],       parents, etc, options, indent)
               local encoded_key = encode_value(self, tostring(key), parents, etc, options, indent)
               table.insert(PARTS, string.format(""%s:%s"", encoded_key, encoded_val))
            end
            result_value = ""{"" .. table.concat(PARTS, "","") .. ""}""

         end
      else
         --
         -- An empty array/object... we'll treat it as an array, though it should really be an option
         --
         result_value = ""[]""
      end

      parents[T] = false
      return result_value
   end
end


function OBJDEF:encode(value, etc, options)
   if type(self) ~= 'table' or self.__index ~= OBJDEF then
      OBJDEF:onEncodeError(""JSON:encode must be called in method format"", etc)
   end
   return encode_value(self, value, {}, etc, options or nil)
end

function OBJDEF:encode_pretty(value, etc, options)
   if type(self) ~= 'table' or self.__index ~= OBJDEF then
      OBJDEF:onEncodeError(""JSON:encode_pretty must be called in method format"", etc)
   end
   return encode_value(self, value, {}, etc, options or default_pretty_options)
end

function OBJDEF.__tostring()
   return ""JSON encode/decode package""
end

OBJDEF.__index = OBJDEF

function OBJDEF:new(args)
   local new = { }

   if args then
      for key, val in pairs(args) do
         new[key] = val
      end
   end

   return setmetatable(new, OBJDEF)
end

return OBJDEF:new()"
CtdXAEQn,2023-09-30_stats.json,rdp_snitch,JSON,Saturday 30th of September 2023 07:18:17 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 9,
    ""111.61.253.55"": 6,
    ""106.116.169.71"": 6,
    ""87.251.75.145"": 6,
    ""80.94.95.238"": 9,
    ""58.218.204.183"": 9,
    ""62.204.41.137"": 12,
    ""45.227.254.8"": 12,
    ""198.235.24.197"": 9,
    ""94.232.41.205"": 3,
    ""45.143.201.62"": 15,
    ""185.170.144.3"": 6,
    ""185.170.144.113"": 6,
    ""141.98.11.128"": 9,
    ""194.165.16.72"": 6,
    ""87.251.75.120"": 3,
    ""205.210.31.85"": 9,
    ""2.57.149.92"": 3,
    ""45.227.254.55"": 6,
    ""170.187.196.113"": 9,
    ""94.232.45.92"": 9,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""128.14.227.37"": 3,
    ""51.89.38.77"": 6,
    ""217.111.67.178"": 3,
    ""205.210.31.158"": 9,
    ""43.129.229.51"": 3,
    ""83.97.73.94"": 9,
    ""87.251.75.64"": 3,
    ""194.165.16.37"": 6,
    ""45.140.17.16"": 6,
    ""185.156.72.27"": 9,
    ""198.235.24.72"": 9
  },
  ""asn"": {
    ""AS208046"": 9,
    ""AS24547"": 6,
    ""AS4134"": 15,
    ""AS208091"": 15,
    ""AS204428"": 9,
    ""AS59425"": 12,
    ""AS267784"": 18,
    ""AS396982"": 36,
    ""AS210950"": 15,
    ""AS197414"": 12,
    ""AS209605"": 9,
    ""AS48721"": 12,
    ""AS208312"": 12,
    ""AS63949"": 9,
    ""AS212482"": 9,
    ""AS57523"": 24,
    ""AS135377"": 3,
    ""AS16276"": 6,
    ""AS8220"": 3,
    ""AS132203"": 3,
    ""AS198953"": 6,
    ""AS61432"": 9
  },
  ""isp"": {
    ""ColocationX Ltd."": 9,
    ""China Mobile communications corporation"": 6,
    ""Chinanet"": 15,
    ""Xhost Internet Solutions LP"": 36,
    ""SS-Net"": 9,
    ""Horizon LLC"": 12,
    ""Flyservers S.A."": 30,
    ""Google LLC"": 36,
    ""TOV E-RISHENNYA"": 15,
    ""UAB Host Baltic"": 9,
    ""Red Byte LLC"": 12,
    ""Akamai Technologies, Inc."": 9,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Zenlayer Inc"": 3,
    ""OVH SAS"": 6,
    ""Colt Technology Services"": 3,
    ""Aceville Pte.ltd"": 3,
    ""Proton66 OOO"": 6,
    ""TOV VAIZ PARTNER"": 9
  },
  ""org"": {
    ""ColocationX Ltd"": 9,
    ""China Mobile"": 6,
    ""Chinanet HE"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Internet-Transit LTD"": 9,
    ""Chinanet JS"": 9,
    ""Horizon LLC"": 12,
    ""UAB Host Baltic"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Dmitriy Panchenko"": 12,
    ""TOV VAIZ PARTNER"": 24,
    ""Xhostis"": 12,
    ""Unknown"": 12,
    ""Flyservers S.A"": 12,
    ""Chang Way Technologies Co. Limited"": 27,
    ""Linode"": 9,
    ""UCLOUD"": 3,
    ""v S"": 6,
    ""Rohm Medien Service GmbH"": 3,
    ""Red Byte LLC"": 9,
    ""Proton66 LLC"": 6
  },
  ""regionName"": {
    ""North Holland"": 21,
    ""Hebei"": 12,
    ""England"": 18,
    ""Sofia-Capital"": 9,
    ""Jiangsu"": 9,
    ""Moscow"": 51,
    ""Vilnius"": 18,
    ""California"": 36,
    ""Perm Krai"": 12,
    ""Kyiv City"": 24,
    ""Kaunas"": 21,
    ""Lesser Poland"": 3,
    ""North West"": 9,
    ""Taipei City"": 3,
    ""Baden-Wurttemberg"": 3,
    ""Central and Western District"": 3
  },
  ""country"": {
    ""Netherlands"": 21,
    ""China"": 21,
    ""United Kingdom"": 18,
    ""Bulgaria"": 9,
    ""Russia"": 63,
    ""Lithuania"": 39,
    ""United States"": 36,
    ""Ukraine"": 24,
    ""Poland"": 3,
    ""Singapore"": 9,
    ""Taiwan"": 3,
    ""Germany"": 3,
    ""Hong Kong"": 3
  },
  ""account"": {
    ""Domain"": 72,
    ""(empty)"": 12,
    ""Administr"": 63,
    ""hello"": 30,
    ""Test"": 36,
    ""jRyvbtzXo"": 3,
    ""WTAbRH"": 3,
    ""qskboi"": 3,
    ""LGNFToypP"": 3,
    ""jDAiwH"": 3,
    ""eFeCPN"": 3,
    ""Administrator"": 3,
    ""pFsVvRhwr"": 3,
    ""pHwFzs"": 3,
    ""PFdftr"": 3,
    ""YYoyrqYgB"": 3,
    ""GonCoD"": 3,
    ""EEoHIa"": 3
  },
  ""keyboard"": {
    ""Unknown"": 252
  },
  ""client_build"": {
    ""Unknown"": 252
  },
  ""client_name"": {
    ""Unknown"": 252
  },
  ""ip_type"": {
    ""Unknown"": 180,
    ""mobile"": 6,
    ""hosting"": 57,
    ""proxy"": 9
  }
}"
Q5Ph45CW,2023-09-30_stats.json,rdp_snitch,JSON,Saturday 30th of September 2023 07:16:17 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 6,
    ""111.61.253.55"": 4,
    ""106.116.169.71"": 4,
    ""87.251.75.145"": 4,
    ""80.94.95.238"": 6,
    ""58.218.204.183"": 6,
    ""62.204.41.137"": 8,
    ""45.227.254.8"": 8,
    ""198.235.24.197"": 6,
    ""94.232.41.205"": 2,
    ""45.143.201.62"": 10,
    ""185.170.144.3"": 4,
    ""185.170.144.113"": 4,
    ""141.98.11.128"": 6,
    ""194.165.16.72"": 4,
    ""87.251.75.120"": 2,
    ""205.210.31.85"": 6,
    ""2.57.149.92"": 2,
    ""45.227.254.55"": 4,
    ""170.187.196.113"": 6,
    ""94.232.45.92"": 6,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""128.14.227.37"": 2,
    ""51.89.38.77"": 4,
    ""217.111.67.178"": 2,
    ""205.210.31.158"": 6,
    ""43.129.229.51"": 2,
    ""83.97.73.94"": 6,
    ""87.251.75.64"": 2,
    ""194.165.16.37"": 4,
    ""45.140.17.16"": 4,
    ""185.156.72.27"": 6,
    ""198.235.24.72"": 6
  },
  ""asn"": {
    ""AS208046"": 6,
    ""AS24547"": 4,
    ""AS4134"": 10,
    ""AS208091"": 10,
    ""AS204428"": 6,
    ""AS59425"": 8,
    ""AS267784"": 12,
    ""AS396982"": 24,
    ""AS210950"": 10,
    ""AS197414"": 8,
    ""AS209605"": 6,
    ""AS48721"": 8,
    ""AS208312"": 8,
    ""AS63949"": 6,
    ""AS212482"": 6,
    ""AS57523"": 16,
    ""AS135377"": 2,
    ""AS16276"": 4,
    ""AS8220"": 2,
    ""AS132203"": 2,
    ""AS198953"": 4,
    ""AS61432"": 6
  },
  ""isp"": {
    ""ColocationX Ltd."": 6,
    ""China Mobile communications corporation"": 4,
    ""Chinanet"": 10,
    ""Xhost Internet Solutions LP"": 24,
    ""SS-Net"": 6,
    ""Horizon LLC"": 8,
    ""Flyservers S.A."": 20,
    ""Google LLC"": 24,
    ""TOV E-RISHENNYA"": 10,
    ""UAB Host Baltic"": 6,
    ""Red Byte LLC"": 8,
    ""Akamai Technologies, Inc."": 6,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Zenlayer Inc"": 2,
    ""OVH SAS"": 4,
    ""Colt Technology Services"": 2,
    ""Aceville Pte.ltd"": 2,
    ""Proton66 OOO"": 4,
    ""TOV VAIZ PARTNER"": 6
  },
  ""org"": {
    ""ColocationX Ltd"": 6,
    ""China Mobile"": 4,
    ""Chinanet HE"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Internet-Transit LTD"": 6,
    ""Chinanet JS"": 6,
    ""Horizon LLC"": 8,
    ""UAB Host Baltic"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Dmitriy Panchenko"": 8,
    ""TOV VAIZ PARTNER"": 16,
    ""Xhostis"": 8,
    ""Unknown"": 8,
    ""Flyservers S.A"": 8,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Linode"": 6,
    ""UCLOUD"": 2,
    ""v S"": 4,
    ""Rohm Medien Service GmbH"": 2,
    ""Red Byte LLC"": 6,
    ""Proton66 LLC"": 4
  },
  ""regionName"": {
    ""North Holland"": 14,
    ""Hebei"": 8,
    ""England"": 12,
    ""Sofia-Capital"": 6,
    ""Jiangsu"": 6,
    ""Moscow"": 34,
    ""Vilnius"": 12,
    ""California"": 24,
    ""Perm Krai"": 8,
    ""Kyiv City"": 16,
    ""Kaunas"": 14,
    ""Lesser Poland"": 2,
    ""North West"": 6,
    ""Taipei City"": 2,
    ""Baden-Wurttemberg"": 2,
    ""Central and Western District"": 2
  },
  ""country"": {
    ""Netherlands"": 14,
    ""China"": 14,
    ""United Kingdom"": 12,
    ""Bulgaria"": 6,
    ""Russia"": 42,
    ""Lithuania"": 26,
    ""United States"": 24,
    ""Ukraine"": 16,
    ""Poland"": 2,
    ""Singapore"": 6,
    ""Taiwan"": 2,
    ""Germany"": 2,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""Domain"": 48,
    ""(empty)"": 8,
    ""Administr"": 42,
    ""hello"": 20,
    ""Test"": 24,
    ""jRyvbtzXo"": 2,
    ""WTAbRH"": 2,
    ""qskboi"": 2,
    ""LGNFToypP"": 2,
    ""jDAiwH"": 2,
    ""eFeCPN"": 2,
    ""Administrator"": 2,
    ""pFsVvRhwr"": 2,
    ""pHwFzs"": 2,
    ""PFdftr"": 2,
    ""YYoyrqYgB"": 2,
    ""GonCoD"": 2,
    ""EEoHIa"": 2
  },
  ""keyboard"": {
    ""Unknown"": 168
  },
  ""client_build"": {
    ""Unknown"": 168
  },
  ""client_name"": {
    ""Unknown"": 168
  },
  ""ip_type"": {
    ""Unknown"": 120,
    ""mobile"": 4,
    ""hosting"": 38,
    ""proxy"": 6
  }
}"
PmNUKDkN,2023-09-30_stats.json,rdp_snitch,JSON,Saturday 30th of September 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 3,
    ""111.61.253.55"": 2,
    ""106.116.169.71"": 2,
    ""87.251.75.145"": 2,
    ""80.94.95.238"": 3,
    ""58.218.204.183"": 3,
    ""62.204.41.137"": 4,
    ""45.227.254.8"": 4,
    ""198.235.24.197"": 3,
    ""94.232.41.205"": 1,
    ""45.143.201.62"": 5,
    ""185.170.144.3"": 2,
    ""185.170.144.113"": 2,
    ""141.98.11.128"": 3,
    ""194.165.16.72"": 2,
    ""87.251.75.120"": 1,
    ""205.210.31.85"": 3,
    ""2.57.149.92"": 1,
    ""45.227.254.55"": 2,
    ""170.187.196.113"": 3,
    ""94.232.45.92"": 3,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""128.14.227.37"": 1,
    ""51.89.38.77"": 2,
    ""217.111.67.178"": 1,
    ""205.210.31.158"": 3,
    ""43.129.229.51"": 1,
    ""83.97.73.94"": 3,
    ""87.251.75.64"": 1,
    ""194.165.16.37"": 2,
    ""45.140.17.16"": 2,
    ""185.156.72.27"": 3,
    ""198.235.24.72"": 3
  },
  ""asn"": {
    ""AS208046"": 3,
    ""AS24547"": 2,
    ""AS4134"": 5,
    ""AS208091"": 5,
    ""AS204428"": 3,
    ""AS59425"": 4,
    ""AS267784"": 6,
    ""AS396982"": 12,
    ""AS210950"": 5,
    ""AS197414"": 4,
    ""AS209605"": 3,
    ""AS48721"": 4,
    ""AS208312"": 4,
    ""AS63949"": 3,
    ""AS212482"": 3,
    ""AS57523"": 8,
    ""AS135377"": 1,
    ""AS16276"": 2,
    ""AS8220"": 1,
    ""AS132203"": 1,
    ""AS198953"": 2,
    ""AS61432"": 3
  },
  ""isp"": {
    ""ColocationX Ltd."": 3,
    ""China Mobile communications corporation"": 2,
    ""Chinanet"": 5,
    ""Xhost Internet Solutions LP"": 12,
    ""SS-Net"": 3,
    ""Horizon LLC"": 4,
    ""Flyservers S.A."": 10,
    ""Google LLC"": 12,
    ""TOV E-RISHENNYA"": 5,
    ""UAB Host Baltic"": 3,
    ""Red Byte LLC"": 4,
    ""Akamai Technologies, Inc."": 3,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Zenlayer Inc"": 1,
    ""OVH SAS"": 2,
    ""Colt Technology Services"": 1,
    ""Aceville Pte.ltd"": 1,
    ""Proton66 OOO"": 2,
    ""TOV VAIZ PARTNER"": 3
  },
  ""org"": {
    ""ColocationX Ltd"": 3,
    ""China Mobile"": 2,
    ""Chinanet HE"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Internet-Transit LTD"": 3,
    ""Chinanet JS"": 3,
    ""Horizon LLC"": 4,
    ""UAB Host Baltic"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Dmitriy Panchenko"": 4,
    ""TOV VAIZ PARTNER"": 8,
    ""Xhostis"": 4,
    ""Unknown"": 4,
    ""Flyservers S.A"": 4,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Linode"": 3,
    ""UCLOUD"": 1,
    ""v S"": 2,
    ""Rohm Medien Service GmbH"": 1,
    ""Red Byte LLC"": 3,
    ""Proton66 LLC"": 2
  },
  ""regionName"": {
    ""North Holland"": 7,
    ""Hebei"": 4,
    ""England"": 6,
    ""Sofia-Capital"": 3,
    ""Jiangsu"": 3,
    ""Moscow"": 17,
    ""Vilnius"": 6,
    ""California"": 12,
    ""Perm Krai"": 4,
    ""Kyiv City"": 8,
    ""Kaunas"": 7,
    ""Lesser Poland"": 1,
    ""North West"": 3,
    ""Taipei City"": 1,
    ""Baden-Wurttemberg"": 1,
    ""Central and Western District"": 1
  },
  ""country"": {
    ""Netherlands"": 7,
    ""China"": 7,
    ""United Kingdom"": 6,
    ""Bulgaria"": 3,
    ""Russia"": 21,
    ""Lithuania"": 13,
    ""United States"": 12,
    ""Ukraine"": 8,
    ""Poland"": 1,
    ""Singapore"": 3,
    ""Taiwan"": 1,
    ""Germany"": 1,
    ""Hong Kong"": 1
  },
  ""account"": {
    ""Domain"": 24,
    ""(empty)"": 4,
    ""Administr"": 21,
    ""hello"": 10,
    ""Test"": 12,
    ""jRyvbtzXo"": 1,
    ""WTAbRH"": 1,
    ""qskboi"": 1,
    ""LGNFToypP"": 1,
    ""jDAiwH"": 1,
    ""eFeCPN"": 1,
    ""Administrator"": 1,
    ""pFsVvRhwr"": 1,
    ""pHwFzs"": 1,
    ""PFdftr"": 1,
    ""YYoyrqYgB"": 1,
    ""GonCoD"": 1,
    ""EEoHIa"": 1
  },
  ""keyboard"": {
    ""Unknown"": 84
  },
  ""client_build"": {
    ""Unknown"": 84
  },
  ""client_name"": {
    ""Unknown"": 84
  },
  ""ip_type"": {
    ""Unknown"": 60,
    ""mobile"": 2,
    ""hosting"": 19,
    ""proxy"": 3
  }
}"
zrUzJ5sr,Développeur Python | Formation Complète 2023,sissou123,Python,Saturday 30th of September 2023 07:07:24 PM CDT,"Développeur Python | Formation Complète 2023
Ce que vous apprendrez
Apprendre la programmation en partant de zéro
Obtenir des bases solides en python
Savoir créer des projets complets de A à Z (et pouvoir les partager avec le monde entier)
https://www.gulf-up.com/4ef3gqnxe1ak"
51PQE58e,Untitled,sissou123,C++,Saturday 30th of September 2023 06:57:33 PM CDT,"C++ Introduction
C++ is a cross-platformed language that can be used to create sophisticated high-performance applications.
https://www.gulf-up.com/i8777eehtgnn"
vkcxh8Wc,testing.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:34:23 PM CDT,"
::: RC9 Update! ::: 

::: KEEP! ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  @echo off
  cls
  :::::::: Experimental Module Keep this header! ::::::::
  set bats=C:\Users\%username%\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite
  title %date% @ %time% testing.bat by -JpE-
  if not defined vers set vers=v8.6.8.96 20230930163137 by -JpE-
  set sl=         /*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\
  set l1=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
  set l2=\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/

  set util2=""%bats%\utility2.bat""
  set util3=""%bats%\utility3.bat""

::: set testwell=3 or 5 to test and crosscheck
  REM set testwell=5
  REM set testwell=3
  set testwell=0
  
rem ::: Bypass to current for now.
REM goto test2

  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Get it to store the random values it finds in a List for practice with psuedo arrays, sequences, etc.
  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


::: v8.6.8.96 20230920193542 by -JpE-
:testtools
  set str=My little test text says very little.
  set chars2Pad=-*=
  set /a gap=0
  call %util3% charrev :revchars ""%chars2Pad%""
  call %util3% line2 :makeline ""%str%"" ""%chars2Pad%""
  call %util3% spcs :getspcs %gap%
  call %util3% length :strlen ""%str%""
  call %util3% gar :strlen ""%chars2Pad%""
  echo . & echo The length of ""%str%"" is %length% & echo . & echo The reverse of %chars2Pad% is %charrev% & echo . & echo The line for ""%str%"" is: & echo .
  echo %line2%%chars2Pad%
  echo %charrev% %str% %spcs%%charrev%
  echo %line2%%chars2Pad% & echo .  
  set /a gap=4
  call %util3% spcs :getspcs %gap%
  echo . & echo The spc for %gap% are ""%spcs%""
  REM echo . & pause & 
  echo .
  REM exit /b


:::::::::::::::::::::::
::: Now Testing.... :::
:::::::::::::::::::::::
:test2
  set l00kup=
  set /a count1=0
  set reset=0
    REM cls
  echo . & echo .


:prototype
  choice /c ync /n /t 9 /d n /m ""Run the substr test first? (y/N/c): "" & echo .
  if errorlevel 3 echo CANCELLED! & echo . & exit
  if errorlevel 2 goto doit
  if errorlevel 1 call :testsubstr
  echo .
  if %errorlevel% neq 3 (
    choice /c ync /n /t 9 /d y /m ""Run the dowtests now? (Y/n/c): ""
    echo .)
  if %errorlevel% equ 3 echo CANCELLED!
  if %errorlevel% equ 2 echo Terminating.
  if %errorlevel% neq 1 goto exit


:doit
  setlocal EnableExtensions
  setlocal EnableDelayedExpansion


:dowtest
  if exist %util2% call %util2% day1
  echo . & echo Today is %day1% & echo .
  set /a count1+=1
  if %testwell% gtr 2 echo . & echo "">>===>"" testwell == %testwell% & echo .
  REM & pause & echo .
  if not defined l00kup goto skipit

  ::: Now an implicit value : if defined l00kup ::: 
  if exist %util3% call %util3% leng :strlen ""%l00kup%""
  if %testwell% gtr 2 echo . & echo Back in Testing and & echo leng == %leng% & echo .
    set /a offset12=(%leng%-10)
if %testwell% gtr 2 echo offset12 == %offset12% & echo .
    set /a l3n=(%leng%-6)
if %testwell% gtr 2 echo l3n == %l3n% & echo .
    set /a m0n=(%offset12%+5)
if %testwell% gtr 2 echo m0n == %m0n% & echo .
    set /a d3y=(%offset12%+8)
if %testwell% gtr 2 echo d3y == %d3y% & echo .
  if %testwell% gtr 2 echo leng == %leng%, offset12 == %offset12% & echo . & echo m0n == %m0n%, l3n == %l3n% & echo .
  REM & pause & echo .
  REM setlocal EnableExtensions
  REM setlocal EnableDelayedExpansion
    set t3mp=!l00kup:~0,%l3n%!
    set rest0f=!l00kup:~%l3n%,6!
  REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 2 echo . & echo t3mp == %t3mp%, *** t3mpy == %t3mpy%, l3n == %l3n% & echo .
 REM & pause & echo .
    set /a t3mpy=(%t3mp%)
      set ""r3st0f=%rest0f%""
if %testwell% gtr 2 echo . & echo rest0f == %rest0f%, r3st0f == %r3st0f% & echo .
if %testwell% gtr 2 pause & echo .
      set /a t3mpy+=100
      set l00kup=%t3mpy%%r3st0f%
if %testwell% gtr 2 echo . & echo t3mpy == %t3mpy%, r3st0f == %r3st0f%, l00kup == %l00kup% & echo .
if %testwell% gtr 2 pause & echo .

:skipit
REM if defined l00kup if ""%l00kup:~4,1%"" neq ""-"" goto y10k
  if not defined l00kup (
    :::::::::::::::::::::::::::::::::::::::
    ::: MAX DATE 1 Billion A.C.E. -1yr. :::
    :::::::::::::::::::::::::::::::::::::::
    REM set l00kup=999999999-01-09
    REM set l00kup=99999999-01-09
    REM set l00kup=9999999-01-09
    REM set l00kup=999999-01-09
    set l00kup=123456-01-09
    REM set l00kup=99999-01-09
    REM set l00kup=9696-01-09
    REM set ""l00kup=10056-05-20""
    REM set l00kup=1956-05-20
    REM set l00kup=1523-01-09
    ::: 
    if exist %util3% call %util3% lup :strlen %l00kup%
if %testwell% gtr 2 echo . & echo lup == ""%lup%"" & echo . & pause & echo .
      set /a l3n=%lup%-6
      set /a d1f=%l3n%-4
      set /a m0n=%d1f%+5
      set /a d3y=%d1f%+8
if %testwell% gtr 2 echo . & echo l3n == %%, d1f == %d1f%, m0n == %m0n%, d3y == %d3y%
if %testwell% gtr 2 echo . & pause & echo .
    REM set /a l3n=4
    REM set /a m0n=5
    REM set /a d3y=8
  )
if %testwell% gtr 2 echo . & echo t3mpy == %t3mpy%, l00kup == %l00kup%
if %testwell% gtr 2 echo . & echo SO what we got eh & echo .
 REM & pause & echo .


      if exist %util2% call %util2% d4y %l00kup%
  
  
if %testwell% gtr 2 echo d4y == %d4y%
if %testwell% gtr 2 echo . & echo l00kup == %l00kup% & echo .
 REM & pause
  
if %testwell% gtr 2 echo . & echo l00kup == %l00kup%, l3n == %l3n%, m0n == %m0n%, d3y == %d3y% & echo . & echo WAIT WATT & echo .
 REM & pause & pause


  REM setlocal EnableExtensions
  REM setlocal EnableDelayedExpansion

  set yr1=!l00kup:~0,%l3n%!
if %testwell% gtr 2 echo Yep & pause
  set mo1=!l00kup:~%m0n%,2!
if %testwell% gtr 2 echo Good! & pause
  set dy1=!l00kup:~%d3y%,2!
if %testwell% gtr 2 echo Fine. & pause

  REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 2 echo DDE... Clear. & pause

if %testwell% gtr 2 echo . & echo yr1 == %yr1%, mo1 == %mo1%, dy1 == %dy1% & echo . & pause & echo .

    REM set /a yr1=%yr%
REM if %testwell% gtr 2 pause
    REM set /a mo1=%mo%
REM if %testwell% gtr 2 pause
    REM set /a dy1=%dy%
  
if %testwell% gtr 2 echo num set made & pause
  set yr2=%date:~0,4%
REM if %testwell% gtr 2 echo here? & pause
if %testwell% gtr 2 echo date == %date%, date 5,2 == %date:~5,2%
  set mo2=%date:~5,2%
if %testwell% gtr 2 echo here? & pause
REM if %testwell% gtr 2 echo or here? & pause
  set dy2=%date:~8,2%
REM if %testwell% gtr 2 echo here? & pause
if %testwell% gtr 2 echo or here? & pause
  
if %testwell% gtr 2 echo . & echo yr1 == %yr1%, yr2 == %yr2%, mo1 == %mo1%
if %testwell% gtr 2 echo mo2 == %mo2%, dy1 == %dy1%, dy2 == %dy2% & echo . & pause & echo .

  set tense1=was
  if %yr1% gtr %yr2% set tense1=will be
  if %yr1% equ %yr2% if %mo1% gtr %mo2% set tense1=will be
  if %yr1% equ %yr2% if %mo1% equ %mo2% if %dy1% gtr %dy2% set tense1=will be
  
  echo . & echo The date %l00kup% %tense1% a %d4y%! & echo .
  if %count1% gtr 345 echo WARNING! Loop count is now at %count1%/360, where the program will terminate. & echo .
      if %count1% leq 360 choice /c ync /n /t 10 /d y /m ""%count1%) Run the tests again? (Y/n/c): ""
      if %errorlevel% gtr 1 exit /b
      if %count1% lss 360 goto dowtest
      
        set /a reset1+=1 & echo . & choice /c ync /n /t 20 /d n /m ""Reset The Counter? (y/N/c): ""
        if %errorlevel% gtr 1 echo . & exit /b
        if %reset1% gtr 1 goto lastchance
          ::: ELSE
          set /a count1=0
          goto dowtest


:lastchance
  echo . & echo LAST CHANCE BEFORE TERMINATION! & echo . & choice /c ync /n /t 1200 /d c /m ""Reset the reset counter? (y/n/C): ""
  set /a count1=0 & set l00kup=
  if %errorlevel% equ 1 goto dowtest
  exit /b


:testsubstr
  if not exist %util3% exit /b
  setlocal
:testsub
  set /a start=0 & set date3=12345678-05-20
  call %util3% lng :strlen %date3%
  set /a lent=(%lng%-6)
  setlocal EnableExtensions
  setlocal EnableDelayedExpansion
  set ""str4=!date3:~%start%,%lent%!""
  setlocal DisableDelayedExpansion
  echo . & echo The Year of %date3% is %str4% & echo .
  choice /c ync /n /t 5 /d n /m ""Run testsubstr Again? (C) to Cancel ALL: (y/N/c)? ""
  if %errorlevel% equ 1 goto testsub
  endlocal
  exit /b
  


:::::::::::::::::::::::::::::
::: Deprecated  v8.6.8.94 :::
:::::::::::::::::::::::::::::
:y10k
  echo . & echo  There is a Y10k Problem after 9999 A.C.E. & echo .
  set msg=""Start the tests again? (Y/n): ""
  choice /c yn /n /t 20 /d y /m %msg%
  if %errorlevel% equ 1 set l00kup=
  if %errorlevel% equ 1 goto dowtest
  exit

:::::::::::::[ END of Now Testing ]::::::::::::


  :::::::::::::::::::::::::::::::::::::::::::::
  ::: Recently tested or experimented with. :::
  :::::::::::::::::::::::::::::::::::::::::::::
:dowtest2
  call :dowtest
  set /a count=1
  set /a limit=10000
  call :begin

  REM set Slnt=""%bats%\Silent_mode.bat""
  REM call %Slnt%
  REM exit

:::::::::::::[ END of Recent Testing ]::::::::::::


:basenum2
  set /a baseNumber=10 & set /a exponent23=19
  call :powers2 result %baseNumber% %exponent23%
  echo . & echo %baseNumber%\%exponent23% == %result% & echo . & pause & echo .
  ::: 
  set /a b=2 & set /a e=32
  
:loop
  call :powers2 x %b% %e%
  echo %b%\%e% == %x%
  if %e% gtr 0 set /a e+=-1 & goto loop
  pause
  set /a e=32
  if %b% lss 32 set /a b+=1 & goto loop
  echo . & pause & echo .

  :::::::::::::::::::::::::::::::::::::::::::::::
  ::: Previously tested or experimented with. :::
  :::::::::::::::::::::::::::::::::::::::::::::::

  call :top
  call :power
  call :leapyear
  call :datums
  call :menudo
  REM set /a count=1
  REM set /a limit=10^40
  REM call :begin
  :: REM goto power
  :: REM goto leapyear
  :: REM goto datums
  :: REM goto menudo
  :: REM goto begin
  exit /b %errorlevel%

:::::::::::::::::::::::: END KEEP :::::::::::::::::::::::::

:top
  pause
  call :showmsgt
  set msg=""%bats%\exit_main.bat""
  if exist %msg% echo . & echo %msg% is online. & echo .
  if not exist %msg% echo . & echo %msg% is not online. & echo .
  ::: Okay down to here.
  echo calling exit_main... 
  pause
  if exist %msg% call %msg% showmsg2
  REM set fileo=""%bats%\caller_check.txt""
  echo back from showmsg2
  pause
  goto top

  echo error error error error error error error error error
  pause
  exit /b %errorlevel%


:showmsgt <no parms>
  echo . & echo made it to :showmsg2 in testing & echo .

  echo This file lets the Older Photos & 
  echo Program know which program is
  echo calling it, if any.
  echo .
  echo This does not effect your files
  echo that are being backed up in any way.
  echo . & echo Leaving showmsgt & echo . & pause & echo .
  exit /b %errorlevel%


:begin
  REM echo .
  if %count% gtr %limit% echo . & echo End of Run, limit reached. & echo . & pause & echo . & exit /b %errorlevel%
  REM echo Ready?
  REM echo .
  set /a a=%RANDOM%
  REM pause

  REM if %a% equ 0 goto react
  REM if %a% gtr 3200 goto react

  REM echo . & 
  REM echo a not 0 or greater than 3200.
  REM echo . & 
  echo Our Random Number is: %a%
   REM & echo .
  set /a count+=1
  rem & pause & goto begin
  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Get it to store the random values it finds in a List for practice with psuedo arrays, sequences, etc.
  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  goto begin


:react
  REM echo a got flagged because a equals zero or is greater than 3. a == %a% & goto begin
  REM echo .
  REM echo It didn't work.
  REM echo .
  REM pause
  REM echo .
  goto begin


:daddio
  set daddio=""\\Daddio-PC\Users\Admin\AppData\Local\Microsoft\Outlook""
  if not exist %daddio% echo Daddio not found. & pause & exit /b 2
  echo . & echo Daddio is online. & echo . & pause
  exit /b %errorlevel%


:menudo
  cls
  echo .
  echo                   %date%  @  %time%
  echo .
  set l=5 3 7 12 89 91 14 17 25 65 72 13 18 27 47 32 4 12 15 13 64 30 29 44 31 21 75 46 73 26 16 43 0 19 42 5 7 1 11 57
  ( for %%n in (%l%) do (
    echo n == %%n
  ))
  echo .
  pause
  echo .
  exit /b %errorlevel%


:paws
  echo Paws-1
  pause
  for /L %%x in (0,1,3) do (
  echo Hi! %%x
  pause
  )
  echo Paws-2
  pause


:datums
  ::: set datum[x][y][z]=num
  set datum[0][0][0]=0

  set list=5,3,7,12,89,91,14,17,25,65,72,13,18,27,47,32,4,12,15,13,64,30,29,44,31,21,75,46,73,26,16,43,0,19,42,5,7,1,11,57
  for %%n in (%list%) do (
    for /l %%x in (0,1,3) do (
      for /l %%y in (0,1,1) do (
        for /l %%z in (0,1,3) do (
          set /a datum[%%x][%%y][%%z]=%%n
          echo n == %%n, x == %%x, y == %%y, z == %%z
  ))))

  echo datum[3][0][2] == %datum[3][0][2]%

  pause
  REM goto datums
  exit /b %errorlevel%


:leapyear
  set /a year=1900
  
:testing
  set /a year+=1
  ::: TESTING it with JUST...
  ::: Design Note to Dev: If divide by 2 equal mod 0 it's even ie. offline otherwise odd ie. problemo.
  set /a ""mod=%year% %% 4%""
  set not=
  if %mod% neq 0 set not=NOT 
  set answ=Is %not%a Leapyear.
  set msg= %year% %answ%.
  echo %msg%
  set /a tsf=""mod=%year% %% 42%""
  if %tsf% equ 0 pause & cls & echo %msg%
  if %year% gtr 2212 exit /b %errorlevel%
  goto testing


:power
  set /a pwr=1
  echo . & echo . & echo .
  echo Today is %date%, it is %time% & echo .
  
:start
  set /a x=1
  set datethen=%date%
  set timethen=%time%
  call :powers e,10,pwr
  for /l %%j in (%x%,1,%e%) do (
    echo This is going soooo fast! #%%j
    if %%j equ %e% echo . & echo Duuudddeee! & call :grunt
  )
  if %pwr% geq 6 exit /b %errorlevel%
  set /a pwr+=1 & goto start


:grunt
  set bats=C:\Users\%username%\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite
  set runt=""%bats%\runtime_display.bat""
  title %date% @ %time% Experimental Dream:
  set fileo=""%bats%\caller_check.txt""
  if exist %fileo% del /f /s /q %fileo%""
  if not exist %runt% echo %runt% cannot be found!
  if exist %runt% call %runt%
  REM if %pwr% geq 6 goto return
  echo . & echo Running Again! This Time Counting To %e%0
  echo . & pause & cls
  exit /b %errorlevel%


::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:powers <intVar rslt, intVar base, intVar expo>
  setlocal & set ""base=%~2"" & set ""expo=%~3"" & set ""answ=1""
  for /l %%n in (1, 1, %expo%) do (
    set /a ""answ *=%base%""
    )
  endlocal & set ""%~1=%answ%""
  exit /b %errorlevel%
::::::::::::::::::::::::::::::::::::::::::::::::::::::::


:powers2 <intVar returnedResult, intVar baseNum, intVar exponent>
  setlocal & set ""base=%~2"" & set ""expt=%~3""
  set fn=""%bats%\exponential_powers.bat""
  if exist %fn% call %fn% ans %base% %expt%
  endlocal & set ""%~1=%ans%""
  exit /b %errorlevel%


:return
echo .
echo That's A MILLION!
echo .
pause
echo .
echo Program Terminating now. Go to Bed.
pause
exit
exit



:::   100%  -JpE-


"
9SQPgb9N,crosschecker.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:31:03 PM CDT,"

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: crosscheck.bat split from updated utility2.bat        :::
::: It's just to check if the newer algorythm checks out. :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  if not defined vers set vers=v8.6.8.92 20230913145112 by -JpE-
  echo . & echo Cross Checking That Answer... One Moment.
  ::: DON""T MESS WITH THIS IS WORKS PERFECTLY! Comment it out to test.
  if %year4% lss 6000 if %year4% geq 5900 set /a adjust=0  
  if %year4% lss 5900 if %year4% geq 5800 set /a adjust=2
  if %year4% lss 5800 if %year4% geq 5700 set /a adjust=4
  if %year4% lss 5700 if %year4% geq 5600 set /a adjust=-1
  if %year4% lss 5600 if %year4% geq 5500 set /a adjust=0
  if %year4% lss 5500 if %year4% geq 5400 set /a adjust=2
  if %year4% lss 5400 if %year4% geq 5300 set /a adjust=4  
  if %year4% lss 5300 if %year4% geq 5200 set /a adjust=-1
  if %year4% lss 5200 if %year4% geq 5100 set /a adjust=0
  if %year4% lss 5100 if %year4% geq 5000 set /a adjust=2
  if %year4% lss 5000 if %year4% geq 4900 set /a adjust=4  
  if %year4% lss 4900 if %year4% geq 4800 set /a adjust=-1
  if %year4% lss 4800 if %year4% geq 4700 set /a adjust=0  
  if %year4% lss 4700 if %year4% geq 4600 set /a adjust=2
  if %year4% lss 4600 if %year4% geq 4500 set /a adjust=4
  if %year4% lss 4500 if %year4% geq 4400 set /a adjust=-1
  if %year4% lss 4400 if %year4% geq 4300 set /a adjust=0  
  if %year4% lss 4300 if %year4% geq 4200 set /a adjust=2
  if %year4% lss 4200 if %year4% geq 4100 set /a adjust=4
  if %year4% lss 4100 if %year4% geq 4000 set /a adjust=-1 
  if %year4% lss 4000 if %year4% geq 3900 set /a adjust=0 
  if %year4% lss 3900 if %year4% geq 3800 set /a adjust=2
  if %year4% lss 3800 if %year4% geq 3700 set /a adjust=4
  if %year4% lss 3700 if %year4% geq 3600 set /a adjust=-1
  if %year4% lss 3600 if %year4% geq 3500 set /a adjust=0  
  if %year4% lss 3500 if %year4% geq 3400 set /a adjust=2
  if %year4% lss 3400 if %year4% geq 3300 set /a adjust=4
  if %year4% lss 3300 if %year4% geq 3200 set /a adjust=-1
  if %year4% lss 3200 if %year4% geq 3100 set /a adjust=0  
  if %year4% lss 3100 if %year4% geq 3000 set /a adjust=2
  if %year4% lss 3000 if %year4% geq 2900 set /a adjust=4  
  if %year4% lss 2900 if %year4% geq 2800 set /a adjust=-1
  if %year4% lss 2800 if %year4% geq 2700 set /a adjust=0
  if %year4% lss 2700 if %year4% geq 2600 set /a adjust=2
  if %year4% lss 2600 if %year4% geq 2500 set /a adjust=4
  if %year4% lss 2500 if %year4% geq 2400 set /a adjust=-1
  if %year4% lss 2400 if %year4% geq 2300 set /a adjust=0
  if %year4% lss 2300 if %year4% geq 2200 set /a adjust=2
  if %year4% lss 2200 if %year4% geq 2100 set /a adjust=4
  if %year4% lss 2100 if %year4% geq 2000 set /a adjust=-1
  if %year4% lss 2000 if %year4% geq 1900 set /a adjust=0
  if %year4% lss 1900 if %year4% geq 1800 set /a adjust=2
  if %year4% lss 1800 if %year4% geq 1753 set /a adjust=4
  
  if %year4:~0,2% gtr 17 if %year4:~0,1% lss 6 if %adj% neq %adjust% echo . & echo Does not match! adjust == %adjust%, and adj == %adj% & echo . & pause & echo .
  exit /b %errorlevel%
"
p0nBR9N5,QuickSort_v11_TL,Korotkodul,C++,Saturday 30th of September 2023 06:26:21 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = false;

void Swap(int* p1, int* p2) {
  int tt = *p1;
  *p1 = *p2;
  *p2 = tt;
}

vector<int> Partition(vector<int> aa, int xx) {
  // делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  // делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int GetMed(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        Swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med, int cnt) {
  constexpr int kInfin = 2e9;
  while (med.size() % 5 != 0) {
    med.push_back(kInfin);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii : med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < (int)med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3],
                      med[ii + 4]};
    int kk = GetMed(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  if (new_med.size() == 2) {
    if (new_med[0] != kInfin) {
      return new_med[0];
    }
    return new_med[1];
  }
  if (new_med.size() <= 5) {
    for (int ii : new_med) {
      if (ii != kInfin) {
        return ii;
      }
    }
    return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii : new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res;
  if (cnt == 2) {
    int tt = new_med.size();
    res = new_med[tt / 2];
    return res;
  }
  res = QuickSelect(new_med, cnt + 1);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector<int> aa) {
  if (aa.size() == 1) {
    return aa;
  }
  if (aa.size() == 2) {
    return {min(aa[0], aa[1]), max(aa[0], aa[1])};
  }
  int piv = QuickSelect(aa, 1);
  aa = Partition(aa, piv);
  if (sh) {
    cout << ""PERTITION DONE\n"";
    cout << ""piv = "" << piv << ""\n"";
    cout << ""aa\n"";
    for (int ii : aa) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  vector<int> bb;  //<piv
  vector<int> cc;  //==piv
  vector<int> dd;  //>piv
  for (int ii : aa) {
    if (ii < piv) {
      bb.push_back(ii);
    } else if (ii == piv) {
      cc.push_back(ii);
    } else {
      dd.push_back(ii);
    }
  }
  if (!bb.empty()) {
    bb = DQS(bb);
  }
  if (!dd.empty()) {
    dd = DQS(dd);
  }
  vector<int> res;
  for (int ii : bb) {
    res.push_back(ii);
  }
  for (int ii : cc) {
    res.push_back(ii);
  }
  for (int ii : dd) {
    res.push_back(ii);
  }
  return res;
  if (sh) {
    cout << ""res\n"";
    for (int ii : res) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii : aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii : aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

16
7 10 3 4 5 11 2 1 2 3 1 5 4 6 7 1
*/
"
mtYbcn6w,utility2.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:17:59 PM CDT,"

:::::::::::::::::::::
:::  RC9 Update!  :::
:::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::
::: utility2.bat custom by -JpE- 202307170943  :::
::::::::::::::::::::::::::::::::::::::::::::::::::
:::   :::   :::   :::   /\   :::   :::   :::   :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: Design Notes For Day of Week as Word:      :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: Old Farmers Need these 3 vars to work with :::
::: PLus the 3 tables to get dow, key, century :::
::: ========================================== :::
::: Last two of year / 4 + Last 2 of year +    :::
::: Day of Month + Month code & century code   :::
::: (for 2000 thru 2099 add 1) pre 1900 add 2  :::
::: pre 1800 add 2 more & Divide sum by 7.     :::
::: REMAINDER is day of the week; Sunday == 1  :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: This ^ Formula is Crucial In The ^ Coding! :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ :::
::::::::::::::::::::::::::::::::::::::::::::::::::
::: Rev8.6.7:  NEW FEATURES AND FIXES          :::
::: if dateToLookup string is passed in, then  :::
::: the year must be 10 digits with this       :::
::: NOTE: RC9 Allows years through 999999999   ::: 
::: format: date2Lookup=""1923-01-09""           :::
::: If the 2nd arg isn't sent in the call,     :::
::: then it goes with RIGHT THIS MILLISECOND!  :::
::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::
::: JAFO: Get day of week for date as a word!  :::
::::::::::::::::::::::::::::::::::::::::::::::::::

  if not defined vers set vers=v8.6.8.94 20230930155601 by -JpE-
  if not defined testwell set /a testwell=1
  if not defined util2 set util2=""%bats%\utility2.bat""
  if not defined util3 set util3=""%bats%\utility3.bat""
  

:dowword <string weekdayVar2Return, string dateToLookupOptional>
  setlocal & set ""weekday=%~1"" & set ""date1=%~2""
  if not defined date1 set /a year4=(%date:~0,4%)
  if not defined date1 call :fetch year2 month day
  if defined date1 call :parsedate %date1% year4 year2 month day
::: :parsedate <string datePassedIn, int year4Returned, int year2Returned, int monthReturned, int dayReturned>
echo .
if %testwell% gtr 3  if defined date1 echo back from parsedate! 
if %testwell% gtr 3  echo . & echo year4 == %year4%, year2 == %year2%, month == %month%, day == %day% & echo . & pause & echo .

  call :monthkey key %month%
  set /a ly=9 & if %key% gtr 99 set /a ly=0 & set /a key-=100
if %testwell% gtr 3  echo . & echo after monthkey key == %key% & echo . & pause & echo .
  if %ly% equ 0 echo . & echo It is LeapYear! & echo .
  set /a sum1=(%year2% / 4 + %year2%)
  set /a sum2=(%sum1% + %day% + %key%)
if %testwell% gtr 3  echo b4 century
  call :century %year4% adj
if %testwell% gtr 3  echo . & echo after century adj == %adj% & echo . & pause
  if %adj% lss 9 set /a sum2=(%sum2%+%adj%)
  if %adj% equ 9 set ""weekday=Y10k Problem""
  if %adj% gtr 9 set /a key=7
if %testwell% gtr 3 echo . & echo sum2 == %sum2%
  if %adj% neq 7 set /a dowk=(%sum2% %% 7%)
if %testwell% gtr 3 echo . & echo dowk == %dowk% & echo .
  if %key% neq 7 call :getdow %dowk% weekday
  
  if %key% equ 7 set ""weekday=ERROR-47c""
  if %key% equ 7 call :errr
if %testwell% gtr 3 echo . & echo weekday == %weekday% & echo .
  endlocal & set ""%~1=%weekday%""
  exit /b %errorlevel%

  
  ::: Adapt month and day if year is more than 4 digits. -ed
  ::: fix Y10k, Y100k, Y100k, Y1mk, etc.


::: If date string was passed in parse it to get
::: the 4 vars year4, year2, month, day; my way.
::: Mod: if more than a 4 digit year and make scalable.
:parsedate <string datePassedIn, int year4Returned, int year2Returned, int monthReturned, int dayReturned>
  setlocal & set ""date1=%~1"" & set ""y4=%~2""
  set ""y2=%~3"" & set ""mo=%~4"" & set ""dy=%~5""
  if exist %util3% call %util3% datelen :strlen %date1%
if %testwell% gtr 3 echo . & echo datelen == %datelen% & echo .
 REM & pause & echo .
  REM set datelen=(%datelen%)
  ::: How long is just the Year string in characters?
  set /a len=(%datelen%-6)
  set /a l2=(%len%-2)
  set /a admo=(%len%+1)
  set /a addy=(%len%+4)
  if %datelen% equ 10 (
    set /a ""y4=%date1:~0,4%""
    set /a ""y2=%date1:~2,2%""
    set ""mo=%date1:~5,2%""
    set ""dy=%date1:~8,2%""
    REM goto okay2
  )
  if %datelen% gtr 10 (
    REM setlocal EnableExtensions
    REM setlocal EnableDelayedExpansion
    set /a y4=!date1:~0,%len%!
    set /a y2=!date1:~%l2%,2!
if %testwell% gtr 3 echo . & echo now testing over 4 digit years. And l2 == %l2% & echo . & pause & echo .
    set ""mo=!date1:~%admo%,2!""
    set ""dy=!date1:~%addy%,2!""
    REM setlocal DisableDelayedExpansion
  )
if %testwell% gtr 3 echo . & echo parsedate: y4 == %y4%, y2 == %y2%, admo == %admo%, addy == %addy%
if %testwell% gtr 3 echo len == %len%, mo == %mo%, dy == %dy% & echo .
REM :okay2
  if ""%mo:~0,1%"" equ "" "" set /a ""mo=%mo:~1,1%""
  if ""%mo:~0,1%"" equ ""0"" set /a ""mo=%mo:~1,1%""
  if ""%dy:~0,1%"" equ "" "" set /a ""dy=%dy:~1,1%""
  if ""%dy:~0,1%"" equ ""0"" set /a ""dy=%dy:~1,1%""
  
if %testwell% gtr 3 echo . & echo ok here: y4 == %y4%, y2 == %y2%
if %testwell% gtr 3 echo mo == %mo%, dy == %dy% & echo . & pause & echo .

  endlocal & set ""%~2=%y4%"" & set ""%~3=%y2%"" & set ""%~4=%mo%"" & set ""%~5=%dy%""
  exit /b
  REM %errorlevel%


:::::::::::::::::::[ Begin The Century Group ]:::::::::::::::::::

:century <string year4, int adjWeThink>
  setlocal & set /a ""yr4=%~1""
  REM & set /a adj=9
  set /a millenium=%yr4:~0,1%
  set /a century=%yr4:~1,1%
  if %yr4% gtr 9999 call :y10k
rem should alter   ^ millenium and century accordingly.
  set /a evenm=(%millenium% %% 2%)
  set /a evenc=(%century% %% 2%)

  if %testwell% gtr 3 echo . & if %evenm% equ 0 echo It's an Even Millennium!
  if %testwell% gtr 3 if %evenm% gtr 0 echo It is an Odd Millennium!
  if %testwell% gtr 3 if %evenc% equ 0 echo It's an Even Century.
  if %testwell% gtr 3 if %evenc% gtr 0 echo It is an Odd Century.
if %testwell% gtr 3 echo -=8 ahead.
 REM & pause
  if %century% gtr 7 set /a century=(%century%-8)
if %testwell% gtr 3 echo lss 8 if geq 4 -=4 ahead.
 REM & pause
  if %century% lss 8 if %century% gtr 3 set /a century=(%century%-4)
if %testwell% gtr 3 echo . & echo century == %century% & echo .
  if %evenm% gtr 0 goto odd1
  
::: evenm
  if %century% equ 3 set /a adj=0
  if %century% equ 2 set /a adj=2
  if %century% equ 1 set /a adj=4
  if %century% equ 0 set /a adj=-1
  goto done1  

:odd1   
  if %century% equ 3 set /a adj=4
  if %century% equ 2 set /a adj=-1
  if %century% equ 1 set /a adj=0
  if %century% equ 0 set /a adj=2

:done1
  if %yr4% lss 1753 set /a adjust=9 & echo . & echo Results for years before 1753 weren't gregorian.
  if %yr4% leq 6000 if %yr4% gtr 2100 if %testwell% gtr 3  call :crosscheck
REM if %testwell% gtr 3  echo done1 and adj == %adj% & echo . & pause & echo .
  endlocal & set ""%~2=%adj%""
  exit /b %errorlevel%


::: NOTE: In this case, yr4 is not the lookup it is already just the YEAR.
:y10k
  if exist %util3% call %util3% lenstr :strlen %yr4%
REM if %testwell% gtr 3 echo .& echo y10k: The length of %yr4% is %lenstr%. & echo .
 REM & pause & echo .
  set /a m2=(%lenstr%-3)
if %testwell% gtr 3 echo y10k pause, lenstr == %lenstr%, and m2 == %m2% & echo . & pause
  REM setlocal EnableExtensions
  REM setlocal EnableDelayedExpansion
  set /a millenium=(!yr4:~0,%m2%!)
  set /a century=(!yr4:~%m2%,1!)
  REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 3 echo . & echo Y0k: millenium == %millenium%, century == %century% & echo . & pause & echo .
  exit /b %errorlevel%


:crosscheck
  set crosschecker=""%bats%\crosschecker.bat""
  if exist %crosschecker% call %crosschecker%
  exit /b %errorlevel%

:::::::::::::::::::[ End of The Century Group ]:::::::::::::::::::


::: If mod equ 0 then it's a Leapyear, evenly divisible by 4.
:monthkey <int keyReturned, int monthNum>
  setlocal & set /a num=%~2
  if %num% equ 1 set /a key=1
  if %num% equ 10 set /a key=1
  if %num% equ 2 set /a key=4
  if %num% equ 3 set /a key=4
  if %num% equ 11 set /a key=4
  set /a mod=%date:~0,4% %% 4% 
  if %mod% equ 0 call :leap
  if %mod% neq 0 if %num% equ 4 set /a key=0
  if %mod% neq 0 if %num% equ 7 set /a key=0
  if %num% equ 5 set /a key=2
  if %num% equ 6 set /a key=5
  if %num% equ 7 set /a key=0
  if %num% equ 8 set /a key=3
  if %num% equ 9 set /a key=6
  if %num% equ 12 set /a key=6
  if %mod% equ 0 if %num% neq 4 if %num% neq 7 set /a key+=100
  endlocal & set ""%~1=%key%""
  exit /b %errorlevel%

:leap
  echo . & echo IT IS LEAPYEAR! Feb has 29 Days This Year. & echo .
  exit /b %errorlevel%


::: Get day of week word from day number.
:getdow <int weekdayNum, string weekday2Return>
  setlocal & set /a ""dow=%~1""
  REM & set ""weekday=%~2 
  if %dow% equ 0 set /a dow=7
  if %dow% equ 1 set weekday=Sunday
  if %dow% equ 2 set weekday=Monday
  if %dow% equ 3 set weekday=Tuesday
  if %dow% equ 4 set weekday=Wednesday
  if %dow% equ 5 set weekday=Thursday
  if %dow% equ 6 set weekday=Friday
  if %dow% equ 7 set weekday=Saturday
  endlocal & set ""%~2=%weekday%""
  exit /b %errorlevel%


:fetch <int yearLast2, int monthNum, int dayOfMonth>
  setlocal
  REM set /a ""yearLast2=%~1""
  REM set /a ""monthNum=%~2""
  REM set /a ""dayOfMonth=%~3""
  set /a yearLast2=(%date:~2,2%)
  set ""monthNum=%date:~5,2%""
  if ""%monthNum:~0,1%"" equ "" "" set /a monthNum=(%monthNum:~1,1%)
  if ""%monthNum:~0,1%"" equ ""0"" set /a monthNum=(%monthNum:~1,1%)
  set ""dayOfMonth=%date:~8,2%""
  if ""%dayOfMonth:~0,1%"" equ "" "" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  if ""%dayOfMonth:~0,1%"" equ ""0"" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  endlocal & set ""%~1=%yearLast2%"" & set ""%~2=%monthNum%"" & set ""%~3=%dayOfMonth%""
  exit /b %errorlevel%


:errr
  setlocal
  echo . & echo Developmental CheckPoint!
  echo Enviromental Pollution. & echo .
  echo Something peculiar is amiss?
  echo . & pause & echo .
  endlocal
  exit /b %errorlevel%



  ::: 100% -JpE-


"
ijnBpebu,MP06_UF1_EJ5,Mike7GB,Java,Saturday 30th of September 2023 06:16:26 PM CDT,"// EJERCICIO 5

****************
----- MAIN -----
****************


import static com.mycompany.ejercicio5.Funciones.*;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Ejercicio5 {

    public static void main(String[] args) {

        //Declaración de variables
        Scanner scanner;
        int opcionMenu = -1;
        int opcionSubmenu = -1;
        String fileName;
        String path;
        File f;

        // Instanciación de objeto Scanner para recibir
        // input del usurio a traves del teclado
        scanner = new Scanner(System.in);

        // Mensaje inicial
        System.out.println(""Este programa le permite leer y escribir los datos de"");
        System.out.println(""personas en un archivo .txt con el nombre y la ruta que"");
        System.out.println(""usted elija. Por favor, pulse Enter para continuar"");
        scanner.nextLine();

        do {

            System.out.println(""\n****************"");
            System.out.println(""----- MENÚ -----"");
            System.out.println(""****************"");
            System.out.println("""");
            System.out.println(""1 - Escribir"");
            System.out.println(""2 - Leer"");
            System.out.println(""3 - Escribir (Bin)"");
            System.out.println(""4 - Leer (Bin)"");
            System.out.println(""0 - Salir"");
            System.out.println("""");
            System.out.println(""Seleccione una opción del menú escribiendo"");
            System.out.println(""el número correspondiente y pulse Enter"");

            opcionMenu = scanner.nextInt();
            scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

            switch (opcionMenu) {
                case 1:
                    // Solicitar al usuario la ruta donde se ha de guardar el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea escribir"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName);

                    escribirFichero(f);

                    break;

                case 2:

                    // Solicitar al usuario la ruta donde se haya el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea leer"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName);

                    if (!f.exists()) {
                        System.out.println(""\nEl archivo no existe\n"");
                        break;
                    }

                    do {
                        System.out.println(""\n****************"");
                        System.out.println(""---- SUBMENÚ ---"");
                        System.out.println(""****************"");
                        System.out.println("""");
                        System.out.println(""1 - Leer todo"");
                        System.out.println(""2 - Leer una persona"");
                        System.out.println(""0 - Volver atrás"");
                        System.out.println("""");
                        System.out.println(""Seleccione una opción del submenú escribiendo"");
                        System.out.println(""el número correspondiente y pulse Enter"");

                        opcionSubmenu = scanner.nextInt();
                        scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

                        switch (opcionSubmenu) {
                            case 1 -> {
                                // Codigo para leer todo
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer todo"");
                                leerTodo(f);
                                opcionSubmenu = 0;
                            }
                            case 2 -> {
                                // Código para leer una persona
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer una persona buscando por el nombre"");
                                leerUnaPersona(f);
                                opcionSubmenu = 0;
                            }
                            default -> {
                            }
                        }
                    } while (opcionSubmenu != 0);
                    break;

                case 3:
                    // Solicitar al usuario la ruta donde se ha de guardar el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea escribir"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName, true);

                    // Solicitar al usuario el numero de personas a guardar, con un mázimo de 3 
                    int n = 0;
                    do {
                        System.out.println(""\nIntroduzca el número de personas a guardar."");
                        System.out.println(""Recuerde que como mínimo debe ser 1 y como máximo 3."");
                        n = scanner.nextInt();
                    } while (n < 1 || n > 3);

                    try {
                        // Escribir en el archivo binario
                        escribirFicheroBin(f, n);
                    } catch (IOException ex) {
                        Logger.getLogger(Ejercicio5.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    break;
                
                case 4:
                    
                    // Solicitar al usuario la ruta donde se haya el archivo
                    System.out.println(""\nIntroduzca la ruta del archivo"");
                    path = scanner.nextLine();

                    // Solicitar al usuario el nombre del archivo 
                    System.out.println(""\nIntroduzca el nombre del archivo que desea leer"");
                    fileName = scanner.nextLine();

                    f = crearArchivo(path, fileName, true);

                    if (!f.exists()) {
                        System.out.println(""\nEl archivo no existe\n"");
                        break;
                    }

                    do {
                        System.out.println(""\n****************"");
                        System.out.println(""---- SUBMENÚ ---"");
                        System.out.println(""****************"");
                        System.out.println("""");
                        System.out.println(""1 - Leer todo (Bin)"");
                        System.out.println(""2 - Leer una persona (Bin)"");
                        System.out.println(""0 - Volver atrás"");
                        System.out.println("""");
                        System.out.println(""Seleccione una opción del submenú escribiendo"");
                        System.out.println(""el número correspondiente y pulse Enter"");

                        opcionSubmenu = scanner.nextInt();
                        scanner.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

                        switch (opcionSubmenu) {
                            case 1 -> {
                                // Codigo para leer todo
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer todo"");
                                leerTodoBin(f);
                                opcionSubmenu = 0;
                            }
                            case 2 -> {
                                // Código para leer una persona
                                // Escribir aquí el código para leer archivos
                                System.out.println(""\nHa seleccionado leer una persona buscando por el nombre"");
                                leerUnaPersonaBin(f);
                                opcionSubmenu = 0;
                            }
                            default -> {
                            }
                        }
                    } while (opcionSubmenu != 0);
                    break;

                default:
                    break;
            }

        } while (opcionMenu != 0);

        System.out.println(""\nEl programa ha finalizado"");

    }
}


*********************
----- FUNCIONES -----
*********************


import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Funciones {

    //Declaración de variables
    private static Scanner scanner = new Scanner(System.in);
    private static Persona p;
    private static Persona[] personas;
    private static File f;
    private static FileWriter fw;
    private static BufferedWriter bw;
    private static BufferedReader br;
    private static String linea;
    private static BufferedInputStream bis;

    // Métodos auxiliares
    public static File crearArchivo(String path, String fileName) {

        // Añadir extensión al nombre
        fileName += "".txt"";

        // Concatenar ruta con nombre del archivo
        path += fileName;

        // Instanciar objeto File
        f = new File(path);

        return f;
    }

    public static File crearArchivo(String path, String fileName, boolean bin) {
        
        // Añadir extensión al nombre dependiendo si será archivo binario o de texto
        if (bin) {
            fileName += "".bin"";
        } else {
            fileName += "".txt"";
        }

        // Concatenar ruta con nombre del archivo
        path += fileName;

        // Instanciar objeto File
        f = new File(path);

        return f;
    }

    // Métodos de lectura y escritura en texto plano
    public static void escribirFichero(File fichero) {

        f = fichero;

        // Instanciación del array personas que puede contener varios objetos Persona
        // En este caso solo vamos a almacenar 3 personas en el array
        personas = new Persona[3];

        if (f.exists()) {
            System.out.println(""\nYa existe un fichero con ese nombre."");
            System.out.println(""Podrá sobrescribirlo o añadir los datos"");
            System.out.println(""a la información existente"");
        }

        for (int i = 0; i < personas.length; i++) { // Bucle for, para realizar la solicitud de datos 3 veces

            // Instanciación del objeto persona
            p = new Persona();

            // Solicita al usuario los datos de la persona
            System.out.println(""\nA continuación, indique los datos de la persona nº"" + (i + 1));

            System.out.println(""\nIntroduzca el nombre:"");
            p.setNombre(scanner.nextLine());

            System.out.println(""\nIntroduzca el apellido:"");
            p.setApellido(scanner.nextLine());

            System.out.println(""\nIntroduzca la ciudad de nacimiento:"");
            p.setCiudad(scanner.nextLine());

            System.out.println(""\nIntroduzca la nacionalidad:"");
            p.setNacionalidad(scanner.nextLine());

            System.out.println(""\nIntroduzca la edad en años:""); // *** En el enunciado no se pide validar que el dato introducido sea un número, asumimos que el usuario siempre introducirá numeros
            p.setEdad(scanner.nextInt());
            scanner.nextLine(); // Para escapar el último intro del nextInt anterior

            personas[i] = p;

        }

        try {
            if (f.exists()) { // Si el archivo existe, preguntar al usuario si desea sobreescribirlo o añadir los datos
                System.out.println(""\nYa existe un fichero con ese nombre."");
                System.out.println(""Si desea sobrescribirlo escriba s y pulse Enter."");
                System.out.println(""Si escribe otra cosa, los datos se añadiran"");
                System.out.println(""a la información existente en el archivo"");
                // Detectar el input de un caracter
                char inputChar = scanner.next().charAt(0);
                scanner.nextLine();

                // Comprobar si se pulsa 's' o 'Enter'
                if (inputChar == 's') {
                    // Instanciar un objeto de tipo FileWriter
                    fw = new FileWriter(f);
                    // Instanciar un objeto de tipo BufferedWriter
                    bw = new BufferedWriter(fw);
                    for (Persona p : personas) {
                        bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                        bw.newLine();
                    }
                    bw.close();
                    fw.close();
                    System.out.println(""\nSe han sobrescrito los siguientes datos en el fichero:."");
                    for (Persona p : personas) {
                        System.out.println(p.mostrarInfo());
                    }
                    System.out.println("""");// Añadir lina en blanco al final
                } else {
                    // Instanciar un objeto de tipo FileWriter
                    fw = new FileWriter(f, true);
                    // Instanciar un objeto de tipo BufferedWriter
                    bw = new BufferedWriter(fw);
                    for (Persona p : personas) {
                        bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                        bw.newLine();
                    }
                    bw.close();
                    fw.close();
                    System.out.println(""\nSe han añadido los siguientes datos al fichero:."");
                    for (Persona p : personas) {
                        System.out.println(p.mostrarInfo());
                    }
                    System.out.println("""");// Añadir lina en blanco al final
                }
            } else {
                // Instanciar un objeto de tipo FileWriter
                fw = new FileWriter(f);
                // Instanciar un objeto de tipo BufferedWriter
                bw = new BufferedWriter(fw);
                for (Persona p : personas) {
                    bw.write(p.mostrarInfo()); // Obtiene los datos de cada persona y los escribe en el fichero.
                    bw.newLine();
                }
                bw.close();
                fw.close();
                System.out.println(""\nFichero creado correctamente."");
                System.out.println(""\nSe han escrito los siguientes datos en el fichero:."");
                for (Persona p : personas) {
                    System.out.println(p.mostrarInfo());
                }
                System.out.println("""");// Añadir lina en blanco al final
            }
        } catch (FileNotFoundException fn) {
            System.out.println(""\nError: la ruta no existe"");
        } catch (IOException ex) {

            Logger.getLogger(Ejercicio5.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void leerTodo(File fichero) {

        f = fichero;

        System.out.println(""\nLa información contenida en el fichero es la siguiente: \n"");

        try { // Abrir flujo de lectura
            br = new BufferedReader(new FileReader(f));

            while ((linea = br.readLine()) != null) {
                System.out.println(linea);

            }
            
            // Cerrar flujo de lectura
            br.close();

        } catch (FileNotFoundException ex) {
            System.out.println(""\nEl fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""\nError: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void leerUnaPersona(File fichero) {

        // Variables
        f = fichero;
        String nombre = """";
        String detallesPersona = """";
        int i = 0;
        String nombreInfo = """";
        boolean encontrado = false;

        System.out.println(""\nIndique el nombre que desea buscar"");
        nombre = scanner.next();
        scanner.nextLine();

        try { // Abrir flujo de lectura
            br = new BufferedReader(new FileReader(f));

            while ((linea = br.readLine()) != null) {

                detallesPersona = linea;

                // Almacenar en la variable nombreInfo el nombre de cada persona
                nombreInfo = detallesPersona.split("", "")[0];

                // Si el nombre extraído del archivo, coincide con el nombre ingresado por el usuario, se imprime toda la información de esa persona
                if (nombreInfo.equals(nombre)) {
                    System.out.println(""\n"" + linea);
                    encontrado = true;
                }
                i++;
            }
            
            // Cerrar flujo de lectura
            br.close();

            // Si no se encuentra ninguna persona, avisar al usuario.
            if (!encontrado) {
                System.out.println(""\nNo se ha encontrado ninguna persona con el nombre '"" + nombre + ""'\n"");
            }

        } catch (FileNotFoundException ex) {
            System.out.println(""El fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""Error: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Métodos de lectura y escritura en binario
    public static void escribirFicheroBin(File fichero, int n) throws IOException {

        f = fichero;

        if (f.exists()) {
            System.out.println(""\nYa existe un fichero con ese nombre. Se""
                    + "" sobrescribirán los datos."");
        }

        // Instanciación del array personas que puede contener varios objetos Persona
        // Tendrá tantos objetos persona como se pasen por parámetro a la función en la variable n
        personas = new Persona[n];

        for (int i = 0; i < personas.length; i++) { // Bucle for, para realizar la solicitud de datos n veces

            // Instanciación del objeto persona
            p = new Persona();

            // Solicita al usuario los datos de la persona
            System.out.println(""\nA continuación, indique los datos de la persona nº"" + (i + 1));

            System.out.println(""\nIntroduzca el nombre:"");
            p.setNombre(scanner.nextLine());

            System.out.println(""\nIntroduzca el apellido:"");
            p.setApellido(scanner.nextLine());

            System.out.println(""\nIntroduzca la ciudad de nacimiento:"");
            p.setCiudad(scanner.nextLine());

            System.out.println(""\nIntroduzca la nacionalidad:"");
            p.setNacionalidad(scanner.nextLine());

            System.out.println(""\nIntroduzca la edad en años:""); // *** En el enunciado no se pide validar que el dato introducido sea un número, asumimos que el usuario siempre introducirá numeros
            p.setEdad(scanner.nextInt());
            scanner.nextLine(); // Para escapar el último intro del nextInt anterior

            personas[i] = p;

        }

        try { // Abrir flujo de salida
            FileOutputStream fos = new FileOutputStream(f);
            BufferedOutputStream bos = new BufferedOutputStream(fos);

            for(Persona persona : personas){
                
                // Convertir los detalles de la persona de tipo String en un array de tipo byte[]
                String personaInfo = persona.mostrarInfo()+""\n"";
                byte[] bytes = personaInfo.getBytes(Charset.defaultCharset());
                bos.write(bytes);
                
            }        
            
            // Cerrar los flujos de salida
            bos.close();
            fos.close();
            
            System.out.println(""\nFichero escrito correctamente"");
            
        } catch (FileNotFoundException e) {
            System.out.println(""\nEl fichero o la ruta no existen"");
        }

    }
    
    public static void leerTodoBin(File fichero){
        
        f = fichero;

        System.out.println(""\nLa información contenida en el fichero es la siguiente: \n"");

        try { // Abrir flujo de lectura
            bis = new BufferedInputStream(new FileInputStream(f));
            int i;
            ArrayList<Integer> array = new ArrayList<>();
            
            // bis.read obtiene un numero entero por cada elemento del array de bytes que obtiene del input stream
            // esa valor se almacena en la variable i
            // cuando se alcanza el final del stream, devuelve un valor negativo, y se sale del bucle while
            while ((i = bis.read()) != -1) {
                // Almacenar cada numero en un array dinámico de tipo ArrayList<Integer>
                array.add(i);
            }
            
            // Con un bucle for, se mostrará la información al usuario
            for(int entero : array){
                
                // Convertir cada entero de tipo int en un caracter de tipo char
                char caracter = (char) entero;
                
                // Imprime cada caracter de forma seguida. *** Importante usar print() y no println()
                // ya que se deben imprimir los caracteres de forma seguida, si se encuentra un caracter de 
                // salto de línea '\n' se mostrará el salto de línea al usuario.
                System.out.print(caracter);
            }
            
            // Cerrar flujo de lectura
            bis.close();

        } catch (FileNotFoundException ex) {
            System.out.println(""\nEl fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""\nError: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public static void leerUnaPersonaBin(File fichero){
        
        // Variables
        f = fichero;
        String nombre = """";
        String textoCompleto = """";
        int i = 0;
        String nombreInfo = """";
        boolean encontrado = false;
        ArrayList<Integer> intArray = new ArrayList<>();
        char[] charArray;
        StringBuilder dynamicCharSequence = new StringBuilder(); // Para construir un array char dinámico

        System.out.println(""\nIndique el nombre que desea buscar"");
        nombre = scanner.next();
        scanner.nextLine();
        
        try{
            
            bis = new BufferedInputStream(new FileInputStream(f));
            
            while((i = bis.read())!=-1){
                intArray.add(i);
            }
            
            bis.close();
        
            for(int entero : intArray){
                
                // Convertir cada entero de tipo int en un caracter de tipo char
                char caracter = (char) entero;
                
                // Almacenar los caracteres en un array char dinámico
                dynamicCharSequence.append(caracter);
                
            }
            
            // Convertir el array char dinámico en un array char convencional
            charArray = dynamicCharSequence.toString().toCharArray();
            
            // Convertir el array char en un String con toda la información del archivo
            textoCompleto = new String(charArray);
            
            // Separar los detalles de cada persona, utilzando como separador el salto de línea
            String[] detallesPersona = textoCompleto.split(""\n"");
            
            // Separar los atributos de cada persona, utilizando como separador la coma
            // y comprobar el nombre, si coincide con el ingresado por el usuario,
            // imprimirlo en consola
            for(String persona : detallesPersona){
                
                nombreInfo = persona.split("","")[0];
                
                if(nombreInfo.equals(nombre)){
                    System.out.println(""\n""+persona);
                    encontrado = true;
                }
                
            }
            
            // Si no se encuentra ninguna persona, avisar al usuario.
            if(!encontrado){
                System.out.println(""\nNo se ha encontrado ninguna persona con el nombre '"" + nombre + ""'\n"");
            }            
            
            
        } catch(FileNotFoundException ex) {
            System.out.println(""El fichero no existe"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            System.out.println(""Error: no se ha podido leer el fichero"");
            Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
        }        

        
    }

}


*******************
----- PERSONA -----
*******************

public class Persona {
     // Atributos
    private String nombre;
    private String apellido;
    private String ciudad;
    private String nacionalidad;
    private int edad;
 
    // Constructor sin parámetros
    public Persona() {
        this.nombre = """";
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }
 
    // Constructor con 1 parámetro (nombre)
    public Persona(String nombre) {
        this.nombre = nombre;
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }
 
    // Constructor con 5 parámetros (nombre, apellido, ciudad, nacionalidad, edad)
    public Persona(String nombre, String apellido, String ciudad, String nacionalidad, int edad) {
        this.nombre = nombre;
        this.apellido = apellido;
        this.ciudad = ciudad;
        this.nacionalidad = nacionalidad;
        this.edad = edad;
    }
 
    // Getters y Setters
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre){
        this.nombre = nombre;
    }
    
    public String getApellido() {
        return this.apellido;
    }
    
    public void setApellido(String apellido){
        this.apellido = apellido;
    }
    
    public String getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(String ciudad){
        this.ciudad = ciudad;
    }
    
    public String getNacionalidad() {
        return this.nacionalidad;
    }
    
    public void setNacionalidad(String nacionalidad){
        this.nacionalidad = nacionalidad;
    }
    
    public int getEdad() {
        return this.edad;
    }
    
    public void setEdad(int edad){
        this.edad = edad;
    }
    
    // Métodos
    
    // Mostrar todos los campos
    public String mostrarInfo(){
        return nombre + "", "" + apellido + "", "" + ciudad + "", "" +                
                nacionalidad + "", "" + edad;
    }
}"
fb3Cw2kr,utility3.bat,GlobalAccessSoftware,Batch,Saturday 30th of September 2023 06:10:13 PM CDT,"

::: RC9 ::: A crossover version to make these stable and test well before removing them and straightening out utility1.bat, which for now has duplicate functions.

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: Utility3.bat splitout from Errorhandling.bat v8.6.8.94  :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


  ::: Redesign: Link these to whereever they've been used and
  ::: create a directory finder thingy up top here to link them.
  ::: BEFORE REMOVING THEM FROM Errorhandling.bat, most are
  ::: used there or in utility2.bat for the DayOfWeek function.

  REM if not defined vers 
  set vers=v8.6.8.96 20230922123800 by -JpE-

  ::: Docs :::

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: :revchars <string revstrReturned, string str2rev>                 :::
::: :makeline <string line2Fill, string strToPadTo, string padChars>  :::
::: :getspcs <string spcs2Return, int gap>                            :::
::: :strlen <int sizeOfstr2rtn, string str2measure>   WORKING!        :::
::: :padder <string toRtn, int lengthRequired, string padchars>       :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:lookup <string 2Return, string calling, string arg1, string arg2, string arg3>
  setlocal & set ""rtn0=%~1"" & set ""calling=%~2""
  set ""arg1=%~3"" & set ""arg2=%~4"" & set ""arg3=%~5""
if %testwell% gtr 2 echo . & echo util3 hit & echo .
  if ""%calling%"" equ "":revchars"" call %calling% rtn0 ""%arg1%""
  if ""%calling%"" equ "":makeline"" call %calling% rtn0 ""%arg1%"" ""%arg2%""
  if ""%calling%"" equ "":getspcs"" call %calling% rtn0 %arg1%
  if ""%calling%"" equ "":strlen"" call %calling% rtn0 ""%arg1%""
  if ""%calling%"" equ "":padder"" call %calling% rtn0 %arg1% %arg2%
  ::: everything returns one variable. Of some type.
  endlocal & set ""%~1=%rtn0%""
  exit /b %errorlevel%


::: Reverse a string arg and return reversed string.
:revchars <string revstrReturned, string str2rev>
  if not defined sizer set sizer=""%bats%\string_length.bat""
  if not exist %sizer% echo . & echo %sizer% not found. & echo Error 47 & echo . & pause & echo . & exit /b
  setlocal & set ""str=%~2""
  call %sizer% chars str
  set /a charN=%chars%-1
  set /a i=%charN%
  for /l %%n in (0,1,%charN%) do call :forloop1
  endlocal & set ""%~1=%rev%""
  exit /b %errorlevel%
:forloop1
    set ltr2=%str:~-1%
    set str=%str:~0,-1%
    set ""rev=%rev%%ltr2%""
    exit /b %errorlevel%


::: To remain generic, we'll be using it a lot.
:makeline <string line2Fill, string strToPadTo, string padchars>
  setlocal & set ""txt3=%~2"" & set ""padchars=%~3""
  call :strlen pad ""%padchars%""
  call :strlen len ""%txt3%""
  set /a size2=((%len%+(%pad%*2))/%pad%)
  call :padder line %size2% ""%padchars%""
  endlocal & set ""%~1=%line%""
  exit /b %errorlevel%


:getspcs <string spcs2Return, int gap>
  setlocal & set /a ""gap=%~2"" & set sp=
  for /l %%i in (1, 1, %gap%) do call :addspace
  endlocal & set ""%~1=%sp%""
  exit /b %errorlevel%
:addspace
  set nl= 
  set ""sp=%sp%%nl%""
  exit /b %errorlevel%


::: Will eventually deprecate util1 calls from ErrorHandling to caller2, sizeOfString and other sizer stuff, will be consolidated into util3 and phased out of old versions and cleared.
:strlen <int sizeOfstr2rtn, string str2measure>
  setlocal
  set str=%~2
  if not defined sizer set sizer=""%bats%\string_length.bat""
  if exist %sizer% call %sizer% size str
  if not exist %sizer% echo . & echo Can't find %sizer% & echo .
  endlocal & set ""%~1=%size%""
  exit /b %errorlevel%


::: Pads string var to passed length with sent chars.
:padder <string toRtn, int lengthOfStringReqd, string padchars>
  setlocal & set ""padchars=%~3""
  for /l %%k in (1, 1, %~2) do (
    call :loop3
    if %errorlevel% gtr 1 echo errorlevel: %errorlevel% & set /a code2=7 & exit /b %errorlevel%
  )
  endlocal & set ""%~1=%line1%""
  exit /b %errorlevel%
::: loop body for for-loop above.
:loop3
  set line1=%line1%%padchars%
  exit /b %errorlevel%



  ::: 100% -JpE-




"
FQ8PXSkE,QuickSort_v10_TL,Korotkodul,C++,Saturday 30th of September 2023 06:07:29 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

bool sh = false;

void Swap(int* p1, int* p2) {
  int tt = *p1;
  *p1 = *p2;
  *p2 = tt;
}

vector<int> Partition(vector<int> aa, int xx) {
  // делим на < и >=
  int nn = aa.size();
  int ll = -1;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] < xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  // делим на = и >
  for (int ii = ll + 1; ii < nn; ++ii) {
    if (aa[ii] == xx) {
      int* p1 = &aa[ii];
      int* p2 = &aa[ll + 1];
      Swap(p1, p2);
      ll++;
    }
  }
  return aa;
}

int GetMed(vector<int> vv) {
  for (int ii = 0; ii < 5; ++ii) {
    for (int jj = 0; jj < 4; ++jj) {
      if (vv[jj] > vv[jj + 1]) {
        int* p1 = &vv[jj];
        int* p2 = &vv[jj + 1];
        Swap(p1, p2);
      }
    }
  }
  /*if (sh) {
    cout << ""vv sorted\n"";
    for (int ii: vv) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }*/
  return vv[2];
}

vector<int> DQS(vector<int> aa);

int QuickSelect(vector<int> med) {
  constexpr int kInfin = 2e9;
  while (med.size() % 5 != 0) {
    med.push_back(kInfin);
  }
  if (sh) {
    cout << ""QuickSelect\n"";
    cout << ""med\n"";
    for (int ii : med) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }

  vector<int> new_med;
  for (int ii = 0; ii < (int)med.size(); ii += 5) {
    vector<int> vv = {med[ii], med[ii + 1], med[ii + 2], med[ii + 3],
                      med[ii + 4]};
    int kk = GetMed(vv);
    new_med.push_back(kk);
  }
  if (new_med.size() == 1) {
    return new_med[0];
  }
  if (new_med.size() == 2) {
    if (new_med[0] != kInfin) {
      return new_med[0];
    }
    return new_med[1];
  }
  if (new_med.size() <= 5) {
    for (int ii : new_med) {
      if (ii != kInfin) {
        return ii;
      }
    }
    return new_med[2];
  }
  if (sh) {
    cout << ""new_med\n"";
    for (int ii : new_med) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  new_med = DQS(new_med);
  int res = QuickSelect(new_med);
  if (sh) {
    cout << ""QuickSelect res = "" << res << ""\n\n"";
  }
  return res;
}

vector<int> DQS(vector<int> aa) {
  if (aa.size() == 1) {
    return aa;
  }
  if (aa.size() == 2) {
    return {min(aa[0], aa[1]), max(aa[0], aa[1])};
  }
  int piv = QuickSelect(aa);
  aa = Partition(aa, piv);
  if (sh) {
    cout << ""PERTITION DONE\n"";
    cout << ""piv = "" << piv << ""\n"";
    cout << ""aa\n"";
    for (int ii : aa) {
      cout << ii << ' ';
    }
    cout << ""\n\n"";
  }
  vector<int> bb;  //<piv
  vector<int> cc;  //==piv
  vector<int> dd;  //>piv
  for (int ii : aa) {
    if (ii < piv) {
      bb.push_back(ii);
    } else if (ii == piv) {
      cc.push_back(ii);
    } else {
      dd.push_back(ii);
    }
  }
  if (!bb.empty()) {
    bb = DQS(bb);
  }
  if (!dd.empty()) {
    dd = DQS(dd);
  }
  vector<int> res;
  for (int ii : bb) {
    res.push_back(ii);
  }
  for (int ii : cc) {
    res.push_back(ii);
  }
  for (int ii : dd) {
    res.push_back(ii);
  }
  return res;
  if (sh) {
    cout << ""res\n"";
    for (int ii : res) {
      cout << ii << ' ';
    }
    cout << ""\n"";
  }
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii : aa) {
    cin >> ii;
  }
  if (sh) {
    cout << ""BEGIN SORT\n"";
  }
  aa = DQS(aa);
  if (sh) {
    cout << ""SORTED aa\n"";
  }
  for (int ii : aa) {
    cout << ii << ' ';
  }
  cout << ""\n"";
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

16
7 10 3 4 5 11 2 1 2 3 1 5 4 6 7 1
*/
"
