id,title,username,language,date,content
cDmhFE59,volatility3-pixel,Panchajanya1999,Bash,Wednesday 3rd of April 2024 12:37:10 AM CDT,"┌─(~/Development/work/volatility3)──────────────(panchajanya@archlinux:pts/0)─┐
└─(11:04:33 on aarch64-support ✹ ✭)──> python vol.py -f ram6a3.lime linux.pslist.PsList              ──(Wed,Apr03)─┘
Volatility 3 Framework 2.5.2
ERROR    volatility3.framework.automagic.linux: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 151, in _weak_resolve
    return getattr(self._dict[table_name], get_function)(component_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 60, in _delegate_function
    return getattr(self._delegate, name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 792, in get_type
    return self.natives.get_type(self.name + constants.BANG + type_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/native.py"", line 83, in get_type
    _native_type, native_format = self._native_dictionary[type_name]
                                  ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
KeyError: 'long unsigned int'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 95, in stack
    layer = linux_arch_stacker(
            ^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 135, in intel_stacker
    kaslr_shift, aslr_shift = cls.find_aslr(
                              ^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 371, in find_aslr
    init_task.files.cast(""long unsigned int"")
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/interfaces/objects.py"", line 178, in cast
    object_template = self._context.symbol_space.get_type(new_type_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 206, in get_type
    self._resolved[type_name] = self._weak_resolve(SymbolType.TYPE, type_name)  # type: ignore
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 153, in _weak_resolve
    raise exceptions.SymbolError(
volatility3.framework.exceptions.SymbolError: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
ERROR    volatility3.framework.automagic.linux: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 151, in _weak_resolve
    return getattr(self._dict[table_name], get_function)(component_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 60, in _delegate_function
    return getattr(self._delegate, name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 792, in get_type
    return self.natives.get_type(self.name + constants.BANG + type_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/native.py"", line 83, in get_type
    _native_type, native_format = self._native_dictionary[type_name]
                                  ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
KeyError: 'long unsigned int'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 95, in stack
    layer = linux_arch_stacker(
            ^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 188, in aarch64_stacker
    kaslr_shift, aslr_shift = cls.find_aslr(
                              ^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 371, in find_aslr
    init_task.files.cast(""long unsigned int"")
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/interfaces/objects.py"", line 178, in cast
    object_template = self._context.symbol_space.get_type(new_type_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 206, in get_type
    self._resolved[type_name] = self._weak_resolve(SymbolType.TYPE, type_name)  # type: ignore
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 153, in _weak_resolve
    raise exceptions.SymbolError(
volatility3.framework.exceptions.SymbolError: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
Progress:  100.00		Stacking attempts finished                 
Unsatisfied requirement plugins.PsList.kernel.layer_name: 
Unsatisfied requirement plugins.PsList.kernel.symbol_table_name: 

A translation layer requirement was not fulfilled.  Please verify that:
	A file was provided to create this layer (by -f, --single-location or by config)
	The file exists and is readable
	The file is a valid memory image and was acquired cleanly

A symbol table requirement was not fulfilled.  Please verify that:
	The associated translation layer requirement was fulfilled
	You have the correct symbol file for the requirement
	The symbol file is under the correct directory or zip file
	The symbol file is named appropriately or contains the correct banner

Unable to validate the plugin requirements: ['plugins.PsList.kernel.layer_name', 'plugins.PsList.kernel.symbol_table_name']"
iVjhrKN1,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Wednesday 3rd of April 2024 12:35:54 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_535145.pdf

Working as of:
03 April 2024"
r8iTxGVd,3x3 attempt,CBredlow,Lua,Wednesday 3rd of April 2024 12:23:18 AM CDT,"-- SPDX-FileCopyrightText: 2017 Daniel Ratcliffe
--
-- SPDX-License-Identifier: LicenseRef-CCPL

if not turtle then
    printError(""Requires a Turtle"")
    return
end

local tArgs = { ... }
if #tArgs ~= 1 then
    local programName = arg[0] or fs.getName(shell.getRunningProgram())
    print(""Usage: "" .. programName .. "" <length>"")
    return
end

-- Mine in a quarry pattern until we hit something we can't dig
local length = tonumber(tArgs[1])
if length < 1 then
    print(""Tunnel length must be positive"")
    return
end
local collected = 0

local function collect()
    collected = collected + 1
    if math.fmod(collected, 25) == 0 then
        print(""Mined "" .. collected .. "" items."")
    end
end

local function tryDig()
    while turtle.detect() do
        if turtle.dig() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function tryDigUp()
    while turtle.detectUp() do
        if turtle.digUp() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function tryDigDown()
    while turtle.detectDown() do
        if turtle.digDown() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function refuel()
    local fuelLevel = turtle.getFuelLevel()
    if fuelLevel == ""unlimited"" or fuelLevel > 0 then
        return
    end

    local function tryRefuel()
        for n = 1, 16 do
            if turtle.getItemCount(n) > 0 then
                turtle.select(n)
                if turtle.refuel(1) then
                    turtle.select(1)
                    return true
                end
            end
        end
        turtle.select(1)
        return false
    end

    if not tryRefuel() then
        print(""Add more fuel to continue."")
        while not tryRefuel() do
            os.pullEvent(""turtle_inventory"")
        end
        print(""Resuming Tunnel."")
    end
end

local function tryUp()
    refuel()
    while not turtle.up() do
        if turtle.detectUp() then
            if not tryDigUp() then
                return false
            end
        elseif turtle.attackUp() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function tryDown()
    refuel()
    while not turtle.down() do
        if turtle.detectDown() then
            if not tryDigDown() then
                return false
            end
        elseif turtle.attackDown() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function tryForward()
    refuel()
    while not turtle.forward() do
        if turtle.detect() then
            if not tryDig() then
                return false
            end
        elseif turtle.attack() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

print(""Tunnelling..."")

for n = 1, length do
--    turtle.placeDown()
-- do bottom row 
	tryDigDown() 
	tryDown()
	turtle.turnLeft()
	tryDig()	
    turtle.turnRight()
    turtle.turnRight()	
    tryDig()
	turtle.turnLeft()
	
    tryDigUp()
    turtle.turnLeft()
    tryDig()
    tryUp()
    tryDig()
    turtle.turnRight()
    turtle.turnRight()
    tryDig()
    tryDown()
    tryDig()
    turtle.turnLeft()

    if n < length then
        tryDig()
        if not tryForward() then
            print(""Aborting Tunnel."")
            break
        end
    else
        print(""Tunnel complete."")
    end

end

--[[
print( ""Returning to start..."" )

-- Return to where we started
turtle.turnLeft()
turtle.turnLeft()
while depth > 0 do
    if turtle.forward() then
        depth = depth - 1
    else
        turtle.dig()
    end
end
turtle.turnRight()
turtle.turnRight()
]]

print(""Tunnel complete."")
print(""Mined "" .. collected .. "" items total."")
"
HY61Zg7M,Untitled,mrboombaw32,MySQL,Wednesday 3rd of April 2024 12:07:00 AM CDT,"select 
  d.KDPSTMSMHS as kode_prodi, 
  d.SMAWLMSMHS, 
  d.STMHSMSMHS as status, 
  a.npm, 
  d.NMMHSMSMHS as nama, 
  a.kelas, 
  a.sex as jk, 
  a.nisn, 
  a.ktp as nik, 
  a.agama, 
  a.no_kps, 
  a.nama_ayah, 
  a.nama_ibu, 
  a.kewarganegaraan, 
  a.alamat as jalan, 
  a.rt, 
  a.rw, 
  a.penerima_kps, 
  a.jenis_tinggal, 
  a.kebutuhan_khusus_mhs, 
  (
    select 
      tk.name 
    from 
      tbl_kelurahans tk 
    WHERE 
      tk.id = a.kelurahan
  ) as desa, 
  (
    SELECT 
      tk.id_wil 
    FROM 
      tbl_kecamatans tk 
    WHERE 
      tk.id = a.kecamatan
  ) as kec, 
  a.kota as kab, 
  a.provinsi as prov, 
  a.tpt_lahir, 
  a.tgl_lahir, 
  a.email, 
  a.no_hp, 
  b.no_ujian, 
  a.npwp, 
  a.kode_pos 
from 
  tbl_bio_mhs as a 
  join tbl_register as b on a.npm = b.npm 
  join tbl_mahasiswa as d on a.npm = d.NIMHSMSMHS 
where 
  substr(a.npm, 1, 4) = '2023' 
  and d.KDPSTMSMHS = '61001'"
YqkJJb6j,gdrive service script,NERO_REDIVIVUS,Bash,Tuesday 2nd of April 2024 11:49:22 PM CDT,"#! /bin/sh

while true; do
	echo ""Attempting to mount Google Drive at /home/matt/Gdrive"" | systemd-cat
	rclone mount blah blah 2>&1 | systemd-cat
	echo ""Google Drive unmounted, or mount attempt unsuccessful"" | systemd-cat
	sleep 5
done
"
5HL1mPY1,stairway,ironman2745,Lua,Tuesday 2nd of April 2024 10:31:23 PM CDT,"function goForward( gentle )
	if gentle == true then
		turtle.forward()
	else
		while turtle.forward() == false do
			turtle.dig()
			turtle.attack()
		end
	end
end

function goUp( gentle )
	if gentle == true then
		turtle.up()
	else
		while turtle.up() == false do
			turtle.digUp()
			turtle.attackUp()
		end
	end
end

function goDown( gentle )
	if gentle == true then
		turtle.down()
	else
		while turtle.down() == false do
			turtle.digDown()
			turtle.attackDown()
		end
	end
end

function goBack( gentle )
	if gentle == true then
		turtle.back()
	else
		turtle.turnRight()
		turtle.turnRight()
		goForward(false)
		turtle.turnLeft()
		turtle.turnLeft()
	end
end

function searchInventoryForItem( item )
	local ind = -1
	if item == nil then
		return ind
	end
	for i=1,16 do
		if turtle.getItemDetail(i) ~= nil then
			if turtle.getItemDetail(i).name == item then
				ind = i
				i = 16
			end
		end
	end
	return ind
end

function setupTorchesInInventory()
	local torchesPresent = false
	local previousSlot = turtle.getSelectedSlot()
	local torchesIndex = searchInventoryForItem(""minecraft:torch"")
	if torchesIndex > -1 then
		torchesPresent = true
		turtle.select(torchesIndex)
		turtle.transferTo(16)
        turtle.select(previousSlot)
	end
	return torchesPresent
end

function placeTorch()
	if turtle.getItemDetail(16) ~= nil then
		if turtle.getItemDetail(16).name == ""minecraft:torch"" then
			local previousSlot = turtle.getSelectedSlot()
			local torchIndex = searchInventoryForItem(""minecraft:torch"")
			turtle.select(torchIndex)
			turtle.placeUp()
            turtle.select(previousSlot)
		end
	end
end


local torches = setupTorchesInInventory()
local depth = 0;
-- Dig forward a couple blocks for a doorway
turtle.dig()
goForward()
turtle.digUp()
turtle.dig()
goForward()
turtle.digUp()
turtle.digDown()

-- Start digging the stairway
local success, data = turtle.inspectDown()
while data.name ~= ""minecraft:bedrock"" do
    turtle.dig()
    goForward()
    turtle.digUp()
    if (depth%5)==0 then
		placeTorch()
	end
    turtle.digDown()
    goDown()
    turtle.digDown()
    depth = depth + 1
    success, data = turtle.inspectDown()
end

-- Continue until reaching bedrock
-- turn around
turtle.turnRight()
turtle.turnRight()

local stairsIndex = searchInventoryForItem(""minecraft:cobblestone_stairs"")
local stairsPresent = (stairsIndex > -1)

-- Return to surface
for i=1, depth do -- fixme. use for loop and counter
    goForward()
    -- if stairs present in inventory
    if stairsPresent then
        local preselectedSlot = turtle.getSelectedSlot()
        local itemDetail = turtle.getItemDetail(stairsIndex)
        -- Because staircase can be more than 64 deep...
        -- Make sure we still have stairs selected
        if(itemDetail == nil or itemDetail.name ~= ""minecraft:cobblestone_stairs"") then
            stairsIndex = searchInventoryForItem(""minecraft:cobblestone_stairs"")
            stairsPresent = (stairsIndex > -1)
        end
        turtle.select(stairsIndex)
        turtle.digDown()
        turtle.placeDown()
        -- check to make sure stairs are right side up
        local success, data = turtle.inspectDown()
        if success and data.state.half == ""top"" then
            -- stair is upsidown
            turtle.digDown()
            goDown()
            local fillerBlockIndex = searchInventoryForItem(""minecraft:cobblestone"")
            if fillerBlockIndex > -1 then
                turtle.select(fillerBlockIndex)
            else
                fillerBlockIndex = searchInventoryForItem(""minecraft:cobbled_deepslate"")
                if fillerBlockIndex > -1 then
                    turtle.select(fillerBlockIndex)
                end
            end
            turtle.placeDown()
            goUp()
            turtle.select(stairsIndex)
            turtle.placeDown()
        end
        if(i==depth) then
            turtle.dig()
            turtle.place()
        end
        turtle.select(preselectedSlot)
        else
    end
    -- endif
    goUp()
end
"
rc4PTzqh,array,Pass89,PHP,Tuesday 2nd of April 2024 10:25:52 PM CDT,"$sample = array(
    ['id'=> '1', 'name'=>'a.view'],
    ['id'=> '2', 'name'=>'a.delete'],
    ['id'=> '3', 'name'=>'b.view'],
    ['id'=> '4', 'name'=>'b.delete'],
);

// mau ditampilkan dalam bentuk tabel

<table>
    <tr>
        <td>a.view</td>
        <td>a.delete</td>
    </tr>
    <tr>
        <td>b.view</td>
        <td>b.delete</td>
    </tr>
</table>
"
nwjLqKMh,News April2 24,Newscaster_Ned,Email,Tuesday 2nd of April 2024 10:15:41 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

B‎r‎a‎w‎l‎s‎ ‎B‎r‎e‎a‎k‎ ‎O‎u‎t‎ ‎a‎t‎ ‎S‎a‎n‎ ‎D‎i‎e‎g‎o‎'‎s‎ ‎P‎e‎t‎c‎o‎ ‎F‎i‎e‎l‎d‎ ‎D‎u‎r‎i‎n‎g‎ ‎P‎a‎d‎r‎e‎s‎-‎G‎i‎a‎n‎t‎s‎ ‎G‎a‎m‎e‎s‎
W‎h‎i‎t‎m‎e‎r‎:‎ ‎'‎W‎h‎o‎ ‎C‎a‎r‎e‎s‎'‎ ‎i‎f‎ ‎I‎ ‎t‎h‎i‎n‎k‎ ‎U‎n‎b‎o‎r‎n‎ ‎A‎r‎e‎ ‎P‎e‎o‎p‎l‎e‎?‎ ‎I‎t‎'‎s‎ ‎U‎p‎ ‎t‎o‎ ‎I‎n‎d‎i‎v‎i‎d‎u‎a‎l‎s‎
B‎i‎d‎e‎n‎ ‎C‎o‎-‎C‎h‎a‎i‎r‎ ‎o‎n‎ ‎L‎a‎c‎k‎ ‎o‎f‎ ‎B‎o‎r‎d‎e‎r‎ ‎A‎c‎t‎i‎o‎n‎:‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎E‎x‎p‎l‎o‎i‎t‎i‎n‎g‎ ‎G‎a‎r‎c‎i‎a‎ ‎D‎e‎a‎t‎h‎
M‎i‎c‎h‎i‎g‎a‎n‎ ‎P‎o‎l‎l‎ ‎S‎h‎o‎w‎s‎ ‎T‎r‎u‎m‎p‎ ‎L‎e‎a‎d‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎ ‎a‎s‎ ‎V‎o‎t‎e‎r‎s‎ ‎E‎x‎p‎r‎e‎s‎s‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎M‎a‎s‎s‎
T‎a‎i‎w‎a‎n‎:‎ ‎M‎u‎l‎t‎i‎p‎l‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎s‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎ ‎A‎f‎t‎e‎r‎ ‎E‎a‎r‎t‎h‎q‎u‎a‎k‎e‎
T‎r‎u‎d‎e‎a‎u‎ ‎t‎o‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎s‎:‎ ‎M‎y‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎P‎o‎l‎i‎c‎y‎ ‎C‎u‎t‎s‎ ‎W‎a‎g‎e‎s‎
T‎r‎u‎m‎p‎:‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎D‎a‎y‎ ‎W‎i‎l‎l‎ ‎B‎e‎ ‎‘‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎V‎i‎s‎i‎b‎i‎l‎i‎t‎y‎ ‎D‎a‎y‎’‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
N‎e‎b‎r‎a‎s‎k‎a‎ ‎G‎o‎v‎ ‎B‎a‎c‎k‎s‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎-‎L‎e‎d‎ ‎E‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎A‎w‎a‎r‎d‎ ‎A‎l‎l‎ ‎o‎f‎ ‎S‎t‎a‎t‎e‎’‎s‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎S‎t‎a‎t‎e‎w‎i‎d‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎W‎i‎n‎n‎e‎r‎

H‎o‎w‎ ‎W‎i‎n‎n‎e‎r‎-‎T‎a‎k‎e‎-‎A‎l‎l‎ ‎S‎y‎s‎t‎e‎m‎ ‎C‎o‎u‎l‎d‎ ‎M‎a‎k‎e‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎
T‎e‎r‎j‎e‎ ‎A‎n‎d‎e‎r‎s‎o‎n‎,‎ ‎l‎e‎f‎t‎,‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎h‎r‎e‎e‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎V‎e‎r‎m‎o‎n‎t‎'‎s‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎C‎o‎l‎l‎e‎g‎e‎,‎ ‎c‎a‎s‎t‎s‎ ‎h‎i‎s‎ ‎v‎
N‎E‎ ‎G‎o‎v‎.‎ ‎P‎i‎l‎l‎e‎n‎ ‎h‎a‎s‎ ‎b‎a‎c‎k‎e‎d‎ ‎a‎n‎ ‎e‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎a‎w‎a‎r‎d‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎’‎s‎ ‎e‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎v‎o‎t‎e‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎w‎h‎o‎ ‎w‎i‎n‎s‎ ‎s‎t‎a‎t‎e‎w‎i‎d‎e‎.‎ ‎

R‎F‎K‎ ‎J‎r‎.‎ ‎S‎a‎y‎s‎ ‎B‎i‎d‎e‎n‎ ‎‘‎M‎u‎c‎h‎ ‎W‎o‎r‎s‎e‎ ‎T‎h‎r‎e‎a‎t‎ ‎t‎o‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎’‎ ‎T‎h‎a‎n‎ ‎T‎r‎u‎m‎p‎
R‎F‎K‎ ‎J‎r‎.‎ ‎S‎a‎y‎s‎ ‎B‎i‎d‎e‎n‎ ‎'‎M‎u‎c‎h‎ ‎W‎o‎r‎s‎e‎ ‎T‎h‎r‎e‎a‎t‎ ‎t‎o‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎'‎ ‎T‎h‎a‎n‎ ‎T‎r‎u‎m‎p‎
4‎,‎1‎2‎2‎
M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎,‎ ‎8‎2‎,‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎R‎e‎m‎a‎i‎n‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎ ‎H‎i‎s‎ ‎O‎w‎n‎ ‎P‎a‎r‎t‎y‎
M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎,‎ ‎8‎2‎,‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎R‎e‎m‎a‎i‎n‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎ ‎H‎i‎s‎ ‎O‎w‎n‎ ‎P‎a‎r‎t‎y‎
1‎,‎3‎4‎3‎
N‎e‎b‎r‎a‎s‎k‎a‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎B‎a‎c‎k‎s‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎-‎L‎e‎d‎ ‎E‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎A‎w‎a‎r‎d‎ ‎A‎l‎l‎ ‎o‎f‎ ‎S‎t‎a‎t‎e‎’‎s‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎S‎t‎a‎t‎e‎w‎
N‎E‎ ‎G‎o‎v‎.‎ ‎B‎a‎c‎k‎s‎ ‎E‎f‎f‎o‎r‎t‎ ‎f‎o‎r‎ ‎A‎l‎l‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎S‎t‎a‎t‎e‎w‎i‎d‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎W‎i‎n‎n‎e‎r‎
1‎,‎6‎6‎6‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎R‎a‎i‎s‎e‎s‎ ‎M‎i‎n‎i‎m‎u‎m‎ ‎W‎a‎g‎e‎ ‎F‎o‎r‎ ‎F‎a‎s‎t‎ ‎F‎o‎o‎d‎ ‎W‎o‎r‎k‎e‎r‎s‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎H‎i‎g‎h‎e‎s‎t‎ ‎U‎n‎e‎m‎p‎l‎o‎y‎m‎e‎n‎t‎ ‎R‎a‎t‎e‎ ‎I‎n‎ ‎t‎h‎e‎ ‎N‎a‎t‎i‎o‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎R‎a‎i‎s‎e‎s‎ ‎M‎i‎n‎i‎m‎u‎m‎ ‎W‎a‎g‎e‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎H‎i‎g‎h‎e‎s‎t‎ ‎U‎n‎e‎m‎p‎l‎o‎y‎m‎e‎n‎t‎ ‎R‎a‎t‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎S‎
9‎0‎7‎
S‎c‎o‎t‎t‎i‎s‎h‎ ‎L‎e‎a‎d‎e‎r‎ ‎C‎l‎a‎i‎m‎s‎ ‎C‎r‎i‎t‎i‎c‎i‎s‎m‎ ‎o‎f‎ ‎H‎a‎t‎e‎ ‎S‎p‎e‎e‎c‎h‎ ‎L‎a‎w‎ ‎O‎n‎l‎y‎ ‎F‎r‎o‎m‎ ‎‘‎R‎i‎g‎h‎t‎ ‎W‎i‎n‎g‎’‎,‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎O‎p‎p‎
S‎c‎o‎t‎t‎i‎s‎h‎ ‎L‎e‎a‎d‎e‎r‎ ‎S‎a‎y‎s‎ ‎C‎r‎i‎t‎i‎c‎i‎s‎m‎ ‎o‎f‎ ‎H‎a‎t‎e‎ ‎S‎p‎e‎e‎c‎h‎ ‎L‎a‎w‎ ‎O‎n‎l‎y‎ ‎F‎r‎o‎m‎ ‎'‎R‎i‎g‎h‎t‎ ‎W‎i‎n‎g‎'‎
8‎7‎9‎
W‎a‎l‎s‎h‎:‎ ‎‘‎I‎ ‎W‎a‎s‎ ‎a‎ ‎D‎i‎v‎i‎s‎i‎v‎e‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎A‎s‎s‎h‎-‎l‎e‎’‎ ‎T‎r‎u‎m‎p‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎
W‎a‎l‎s‎h‎:‎ ‎'‎I‎ ‎W‎a‎s‎ ‎a‎ ‎D‎i‎v‎i‎s‎i‎v‎e‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎A‎s‎s‎h‎o‎l‎e‎'‎ ‎T‎r‎u‎m‎p‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎
6‎9‎
T‎r‎u‎m‎p‎ ‎P‎o‎s‎t‎s‎ ‎$‎1‎7‎5‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎B‎o‎n‎d‎ ‎t‎o‎ ‎P‎r‎e‎v‎e‎n‎t‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎f‎r‎o‎m‎ ‎S‎e‎i‎z‎i‎n‎g‎ ‎A‎s‎s‎e‎t‎s‎
T‎r‎u‎m‎p‎ ‎P‎o‎s‎t‎s‎ ‎$‎1‎7‎5‎M‎ ‎B‎o‎n‎d‎ ‎t‎o‎ ‎P‎r‎e‎v‎e‎n‎t‎ ‎N‎Y‎ ‎f‎r‎o‎m‎ ‎S‎e‎i‎z‎i‎n‎g‎ ‎A‎s‎s‎e‎t‎s‎
4‎,‎6‎4‎4‎
B‎l‎u‎f‎f‎ ‎C‎a‎l‎l‎e‎d‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎S‎c‎o‎t‎l‎a‎n‎d‎ ‎W‎o‎n‎’‎t‎ ‎C‎h‎a‎r‎g‎e‎ ‎J‎.‎K‎.‎ ‎R‎o‎w‎l‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎T‎r‎a‎n‎s‎ ‎C‎o‎m‎m‎e‎n‎t‎s‎,‎ ‎A‎u‎t‎h‎o‎r‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎S‎
B‎l‎u‎f‎f‎ ‎C‎a‎l‎l‎e‎d‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎S‎c‎o‎t‎l‎a‎n‎d‎ ‎W‎o‎n‎'‎t‎ ‎C‎h‎a‎r‎g‎e‎ ‎J‎.‎K‎.‎ ‎R‎o‎w‎l‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎T‎r‎a‎n‎s‎ ‎C‎o‎m‎m‎e‎n‎t‎s‎
3‎,‎0‎3‎4‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎‘‎T‎r‎a‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎’‎ ‎T‎h‎e‎y‎ ‎A‎r‎e‎ ‎‘‎M‎a‎d‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎I‎m‎a‎g‎e‎ ‎o‎f‎ ‎G‎o‎d‎’‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎‘‎T‎r‎a‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎'‎ ‎T‎h‎e‎y‎ ‎A‎r‎e‎ ‎‘‎M‎a‎d‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎I‎m‎a‎g‎e‎ ‎o‎f‎ ‎G‎o‎d‎'‎
3‎,‎9‎5‎4‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎f‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎A‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎T‎h‎r‎o‎w‎ ‎O‎u‎t‎ ‎T‎a‎x‎ ‎C‎a‎s‎e‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎f‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎A‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎T‎h‎r‎o‎w‎ ‎O‎u‎t‎ ‎T‎a‎x‎ ‎C‎a‎s‎e‎

S‎t‎.‎ ‎L‎o‎u‎i‎s‎:‎ ‎W‎h‎i‎t‎e‎ ‎P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎ ‎K‎i‎l‎l‎e‎d‎ ‎b‎y‎ ‎P‎a‎c‎k‎ ‎o‎f‎ ‎A‎n‎g‎r‎y‎ ‎N‎e‎g‎r‎o‎e‎s‎ ‎D‎u‎r‎i‎n‎g‎ ‎R‎o‎b‎b‎e‎r‎y‎.‎

B‎l‎a‎c‎k‎s‎ ‎h‎a‎v‎e‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎t‎o‎ ‎d‎o‎ ‎t‎h‎i‎s‎ ‎i‎f‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎d‎e‎p‎r‎i‎v‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎f‎r‎i‎e‎d‎ ‎c‎h‎i‎c‎k‎e‎n‎.‎


N‎i‎g‎g‎a‎r‎d‎ ‎P‎u‎n‎c‎h‎e‎s‎ ‎R‎a‎n‎d‎o‎m‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎i‎n‎ ‎C‎i‎n‎c‎i‎n‎n‎a‎t‎i‎.‎


C‎o‎b‎b‎ ‎C‎o‎u‎n‎t‎y‎ ‎C‎o‎o‎n‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎.‎


A‎l‎b‎u‎q‎u‎e‎r‎q‎u‎e‎ ‎M‎a‎n‎d‎i‎n‎g‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎a‎ ‎S‎e‎c‎o‎n‎d‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎C‎o‎m‎m‎i‎t‎t‎i‎n‎g‎ ‎R‎a‎p‎e‎ ‎A‎g‎a‎i‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎4‎8‎°‎
2‎%‎
N‎N‎W‎ ‎1‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎ ‎|‎ ‎D‎a‎y‎
7‎8‎°‎
2‎%‎
N‎N‎W‎
1‎8‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎.‎ ‎H‎i‎g‎h‎ ‎7‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
4‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
9‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎7‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎9‎ ‎p‎m‎
T‎u‎e‎ ‎0‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎8‎°‎
1‎%‎
N‎N‎W‎
1‎6‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎4‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
3‎:‎0‎7‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎:‎1‎0‎ ‎p‎m‎
W‎e‎d‎ ‎0‎3‎
S‎u‎n‎n‎y‎
8‎0‎°‎
/‎4‎9‎°‎
1‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
S‎u‎n‎n‎y‎
8‎4‎°‎
/‎5‎3‎°‎
1‎%‎
S‎W‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎3‎°‎
/‎6‎0‎°‎
2‎%‎
S‎S‎W‎ ‎1‎4‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎N‎E‎D‎M‎.‎ ‎🐱🔥

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

R‎i‎c‎k‎ ‎a‎n‎d‎ ‎M‎o‎r‎t‎y‎
R‎i‎c‎k‎ ‎a‎n‎d‎ ‎M‎o‎r‎t‎y‎ ‎i‎s‎ ‎A‎d‎u‎l‎t‎ ‎S‎w‎i‎m‎'‎s‎ ‎b‎a‎r‎e‎l‎y‎ ‎d‎i‎s‎g‎u‎i‎s‎e‎d‎ ‎r‎i‎p‎o‎f‎f‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎D‎a‎d‎—‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎i‎t‎s‎e‎l‎f‎ ‎a‎ ‎r‎i‎p‎o‎f‎f‎ ‎o‎f‎ ‎F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎,‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎ ‎w‎i‎t‎h‎ ‎i‎d‎i‎o‎t‎i‎c‎ ‎p‎o‎p‎-‎c‎u‎l‎t‎u‎r‎e‎ ‎r‎e‎f‎e‎r‎e‎n‎c‎e‎s‎,‎ ‎f‎o‎r‎c‎e‎d‎ ‎m‎e‎m‎e‎s‎ ‎a‎n‎d‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎ ‎s‎e‎x‎ ‎j‎o‎k‎e‎s‎ ‎f‎o‎r‎ ‎c‎h‎e‎a‎p‎ ‎l‎a‎u‎g‎h‎s‎.‎ ‎W‎h‎i‎l‎e‎ ‎F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎ ‎s‎t‎o‎l‎e‎ ‎i‎t‎s‎ ‎m‎a‎i‎n‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎T‎h‎e‎ ‎S‎i‎m‎p‎s‎o‎n‎s‎ ‎a‎n‎d‎ ‎m‎a‎d‎e‎ ‎t‎h‎e‎m‎ ‎e‎v‎e‎n‎ ‎m‎o‎r‎e‎ ‎t‎i‎r‎i‎n‎g‎ ‎a‎n‎d‎ ‎b‎o‎r‎i‎n‎g‎ ‎t‎o‎ ‎w‎a‎t‎c‎h‎,‎ ‎R‎i‎c‎k‎ ‎a‎n‎d‎ ‎M‎o‎r‎t‎y‎ ‎s‎t‎o‎l‎e‎ ‎i‎t‎s‎ ‎m‎a‎i‎n‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎""‎B‎a‎c‎k‎ ‎t‎o‎ ‎t‎h‎e‎ ‎F‎u‎t‎u‎r‎e‎""‎,‎ ‎b‎u‎t‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎l‎e‎a‎r‎n‎i‎n‎g‎ ‎h‎o‎w‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎i‎n‎t‎e‎r‎e‎s‎t‎i‎n‎g‎ ‎a‎n‎d‎ ‎l‎o‎v‎a‎b‎l‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎w‎h‎o‎ ‎c‎a‎n‎ ‎g‎o‎ ‎f‎a‎n‎t‎a‎s‎t‎i‎c‎ ‎a‎d‎v‎e‎n‎t‎u‎r‎e‎s‎,‎ ‎t‎h‎i‎s‎ ‎s‎h‎o‎w‎ ‎p‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎d‎y‎s‎f‎u‎n‎c‎t‎i‎o‎n‎a‎l‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎y‎e‎l‎l‎i‎n‎g‎ ‎a‎n‎d‎ ‎s‎c‎r‎e‎a‎m‎i‎n‎g‎ ‎a‎t‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎ ‎f‎o‎r‎ ‎h‎a‎l‎f‎ ‎a‎n‎ ‎h‎o‎u‎r‎,‎ ‎f‎e‎i‎g‎n‎i‎n‎g‎ ‎c‎l‎e‎v‎e‎r‎ ‎a‎n‎d‎ ‎r‎e‎a‎l‎s‎i‎t‎i‎c‎ ‎r‎e‎l‎a‎t‎i‎o‎n‎s‎h‎i‎p‎s‎.‎

T‎h‎e‎ ‎s‎h‎o‎w‎ ‎p‎a‎n‎d‎e‎r‎s‎ ‎t‎o‎ ‎a‎ ‎f‎a‎n‎b‎a‎s‎e‎ ‎o‎f‎ ‎m‎e‎n‎t‎a‎l‎l‎y‎-‎c‎h‎a‎l‎l‎e‎n‎g‎e‎d‎ ‎p‎s‎e‎u‎d‎o‎-‎i‎n‎t‎e‎l‎l‎e‎c‎t‎u‎a‎l‎s‎ ‎w‎h‎o‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎s‎h‎o‎w‎ ‎i‎s‎ ‎e‎x‎t‎r‎e‎m‎e‎l‎y‎ ‎d‎e‎e‎p‎ ‎a‎n‎d‎ ‎h‎i‎g‎h‎l‎y‎ ‎s‎c‎i‎e‎n‎t‎i‎f‎i‎c‎ ‎i‎n‎ ‎i‎t‎s‎ ‎d‎e‎p‎i‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎c‎o‎n‎v‎o‎l‎u‎t‎e‎d‎ ‎s‎c‎i‎-‎f‎i‎ ‎g‎a‎r‎b‎a‎g‎e‎ ‎a‎n‎d‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎ ‎p‎o‎o‎p‎ ‎j‎o‎k‎e‎s‎.‎ ‎T‎h‎e‎ ‎s‎h‎o‎w‎ ‎h‎a‎s‎ ‎a‎l‎s‎o‎ ‎d‎o‎n‎e‎ ‎a‎ ‎s‎h‎o‎u‎t‎-‎o‎u‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎l‎e‎t‎h‎o‎r‎a‎ ‎o‎f‎ ‎s‎i‎c‎k‎ ‎f‎u‎c‎k‎s‎ ‎w‎h‎o‎ ‎d‎r‎a‎w‎ ‎i‎n‎c‎e‎s‎t‎ ‎p‎o‎r‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎h‎o‎w‎'‎s‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎p‎o‎s‎t‎ ‎i‎t‎ ‎o‎n‎ ‎D‎e‎v‎i‎a‎n‎T‎A‎R‎T‎.‎

A‎s‎ ‎w‎i‎t‎h‎ ‎a‎l‎l‎ ‎o‎t‎h‎e‎r‎ ‎A‎d‎u‎l‎t‎ ‎S‎w‎i‎m‎ ‎s‎h‎o‎w‎s‎,‎ ‎i‎t‎ ‎h‎a‎s‎ ‎t‎h‎e‎ ‎c‎h‎i‎l‎d‎ ‎a‎p‎p‎e‎a‎l‎ ‎e‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎t‎o‎ ‎t‎h‎a‎t‎ ‎o‎f‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎a‎i‎r‎i‎n‎g‎ ‎o‎n‎ ‎D‎i‎s‎n‎e‎y‎ ‎X‎D‎,‎ ‎a‎n‎i‎m‎a‎t‎i‎o‎n‎ ‎t‎h‎a‎t‎ ‎i‎s‎n‎'‎t‎ ‎m‎u‎c‎h‎ ‎a‎b‎o‎v‎e‎ ‎w‎h‎a‎t‎ ‎h‎i‎g‎h‎-‎s‎c‎h‎o‎o‎l‎,‎ ‎f‎i‎r‎s‎t‎ ‎y‎e‎a‎r‎ ‎a‎r‎t‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎ ‎c‎o‎u‎l‎d‎ ‎m‎a‎k‎e‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎ ‎d‎e‎v‎i‎a‎n‎t‎A‎R‎T‎ ‎d‎o‎o‎d‎l‎e‎b‎o‎o‎k‎s‎,‎ ‎a‎l‎o‎n‎g‎ ‎w‎i‎t‎h‎ ‎r‎e‎p‎e‎t‎i‎t‎i‎v‎e‎ ‎e‎p‎i‎s‎o‎d‎e‎s‎ ‎w‎h‎i‎c‎h‎ ‎e‎n‎t‎a‎i‎l‎ ‎m‎a‎n‎y‎ ‎s‎e‎x‎u‎a‎l‎,‎ ‎m‎u‎t‎a‎t‎e‎d‎,‎ ‎g‎o‎r‎e‎-‎f‎i‎l‎l‎e‎d‎ ‎a‎d‎v‎e‎n‎t‎u‎r‎e‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎t‎o‎o‎ ‎f‎u‎c‎k‎e‎d‎ ‎u‎p‎ ‎t‎o‎ ‎a‎i‎r‎ ‎o‎n‎ ‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎b‎a‎s‎i‎c‎ ‎c‎a‎b‎l‎e‎ ‎c‎h‎a‎n‎n‎e‎l‎.‎

T‎h‎e‎ ‎s‎h‎o‎w‎ ‎s‎t‎a‎r‎s‎ ‎a‎ ‎b‎a‎t‎s‎h‎i‎t‎-‎i‎n‎s‎a‎n‎e‎,‎ ‎d‎r‎u‎n‎k‎e‎n‎ ‎g‎r‎a‎n‎d‎p‎a‎;‎ ‎n‎a‎m‎e‎d‎ ‎R‎i‎c‎k‎,‎ ‎a‎n‎d‎ ‎h‎i‎s‎ ‎q‎u‎e‎e‎r‎ ‎1‎4‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎g‎r‎a‎n‎d‎s‎o‎n‎;‎ ‎M‎o‎r‎t‎y‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎r‎e‎t‎a‎r‎d‎e‎d‎ ‎c‎a‎t‎a‎s‎t‎r‎o‎p‎h‎i‎c‎ ‎a‎b‎o‎m‎i‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎h‎e‎y‎ ‎c‎r‎e‎a‎t‎e‎ ‎o‎n‎ ‎t‎h‎e‎i‎r‎ ‎t‎i‎m‎e‎-‎w‎a‎s‎t‎i‎n‎g‎ ‎j‎o‎u‎r‎n‎e‎y‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎u‎n‎i‎v‎e‎r‎s‎e‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎j‎u‎s‎t‎ ‎a‎ ‎m‎e‎r‎c‎i‎f‎u‎l‎ ‎f‎i‎l‎m‎ ‎s‎h‎o‎r‎t‎ ‎b‎e‎f‎o‎r‎e‎ ‎C‎a‎r‎t‎o‎o‎n‎ ‎N‎e‎t‎w‎o‎r‎k‎ ‎f‎o‎u‎n‎d‎ ‎o‎u‎t‎ ‎t‎h‎e‎y‎ ‎h‎a‎d‎ ‎t‎o‎o‎ ‎m‎u‎c‎h‎ ‎F‎G‎T‎,‎ ‎s‎o‎ ‎t‎h‎e‎y‎ ‎t‎h‎r‎e‎w‎ ‎i‎t‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎a‎n‎d‎ ‎b‎o‎o‎m‎,‎ ‎w‎e‎ ‎h‎a‎v‎e‎ ‎o‎u‎r‎ ‎n‎e‎w‎ ‎s‎h‎o‎w‎,‎ ‎2‎1‎-‎m‎i‎n‎u‎t‎e‎-‎l‎o‎n‎g‎ ‎e‎p‎i‎s‎o‎d‎e‎s‎ ‎o‎f‎ ‎p‎u‎r‎e‎ ‎s‎h‎i‎t‎f‎e‎s‎t‎s‎ ‎a‎n‎d‎ ‎s‎c‎i‎e‎n‎t‎i‎f‎i‎c‎ ‎f‎a‎i‎l‎u‎r‎e‎.‎

T‎h‎e‎r‎e‎'‎s‎ ‎c‎u‎r‎r‎e‎n‎t‎l‎y‎ ‎5‎ ‎s‎e‎a‎s‎o‎n‎s‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎s‎h‎i‎t‎;‎ ‎a‎n‎d‎ ‎c‎o‎u‎n‎t‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎f‎a‎n‎b‎a‎s‎e‎ ‎i‎s‎ ‎e‎m‎o‎t‎i‎o‎n‎a‎l‎l‎y‎ ‎s‎t‎u‎n‎t‎e‎d‎,‎ ‎c‎u‎n‎t‎i‎l‎i‎c‎i‎o‎u‎s‎ ‎a‎n‎d‎ ‎b‎e‎e‎f‎c‎u‎r‎t‎a‎i‎n‎y‎ ‎b‎e‎y‎o‎n‎d‎ ‎a‎l‎l‎ ‎b‎e‎l‎i‎e‎f‎.‎ ‎G‎o‎ ‎a‎n‎d‎ ‎l‎o‎o‎k‎ ‎a‎t‎ ‎s‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎F‎B‎ ‎f‎a‎n‎ ‎g‎r‎o‎u‎p‎s‎ ‎f‎o‎r‎ ‎e‎x‎t‎r‎a‎-‎d‎e‎e‎p‎ ‎b‎l‎o‎o‎d‎ ‎s‎o‎d‎o‎m‎y‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎o‎r‎t‎a‎l‎ ‎g‎u‎n‎.‎ ‎A‎n‎d‎ ‎d‎o‎n‎'‎t‎ ‎f‎o‎r‎g‎e‎t‎ ‎t‎h‎e‎ ‎p‎i‎c‎k‎l‎e‎s‎.‎

(‎(‎ ‎I‎M‎ ‎P‎I‎C‎K‎L‎E‎ ‎R‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎C‎K‎!‎!‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎ ‎(‎M‎e‎r‎o‎p‎s‎ ‎a‎p‎i‎a‎s‎t‎e‎r‎)‎ ‎i‎s‎ ‎a‎ ‎b‎i‎r‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎M‎e‎r‎o‎p‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎b‎r‎e‎e‎d‎s‎ ‎i‎n‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎a‎n‎d‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎E‎u‎r‎o‎p‎e‎,‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎a‎n‎d‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎A‎f‎r‎i‎c‎a‎,‎ ‎a‎n‎d‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎A‎s‎i‎a‎.‎ ‎E‎x‎c‎e‎p‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎,‎ ‎t‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎i‎s‎ ‎s‎t‎r‎o‎n‎g‎l‎y‎ ‎m‎i‎g‎r‎a‎t‎o‎r‎y‎,‎ ‎w‎i‎n‎t‎e‎r‎i‎n‎g‎ ‎i‎n‎ ‎t‎r‎o‎p‎i‎c‎a‎l‎ ‎A‎f‎r‎i‎c‎a‎.‎ ‎T‎h‎i‎s‎ ‎s‎p‎e‎c‎i‎e‎s‎,‎ ‎l‎i‎k‎e‎ ‎o‎t‎h‎e‎r‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎s‎,‎ ‎i‎s‎ ‎a‎ ‎r‎i‎c‎h‎l‎y‎ ‎c‎o‎l‎o‎u‎r‎e‎d‎,‎ ‎s‎l‎e‎n‎d‎e‎r‎ ‎b‎i‎r‎d‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎b‎r‎o‎w‎n‎ ‎a‎n‎d‎ ‎y‎e‎l‎l‎o‎w‎ ‎u‎p‎p‎e‎r‎ ‎p‎a‎r‎t‎s‎,‎ ‎w‎h‎i‎l‎s‎t‎ ‎t‎h‎e‎ ‎w‎i‎n‎g‎s‎ ‎a‎r‎e‎ ‎g‎r‎e‎e‎n‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎b‎e‎a‎k‎ ‎i‎s‎ ‎b‎l‎a‎c‎k‎.‎ ‎I‎t‎ ‎c‎a‎n‎ ‎r‎e‎a‎c‎h‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎2‎7‎–‎2‎9‎ ‎c‎m‎ ‎(‎1‎0‎.‎6‎–‎1‎1‎.‎4‎ ‎i‎n‎)‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎w‎o‎ ‎e‎l‎o‎n‎g‎a‎t‎e‎d‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎t‎a‎i‎l‎ ‎f‎e‎a‎t‎h‎e‎r‎s‎.‎ ‎T‎h‎e‎ ‎m‎o‎s‎t‎ ‎i‎m‎p‎o‎r‎t‎a‎n‎t‎ ‎p‎r‎e‎y‎ ‎i‎t‎e‎m‎ ‎i‎n‎ ‎i‎t‎s‎ ‎d‎i‎e‎t‎ ‎i‎s‎ ‎H‎y‎m‎e‎n‎o‎p‎t‎e‎r‎a‎,‎ ‎m‎o‎s‎t‎l‎y‎ ‎t‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎h‎o‎n‎e‎y‎ ‎b‎e‎e‎.‎ ‎I‎t‎s‎ ‎i‎m‎p‎a‎c‎t‎ ‎o‎n‎ ‎b‎e‎e‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎s‎,‎ ‎h‎o‎w‎e‎v‎e‎r‎,‎ ‎i‎s‎ ‎s‎m‎a‎l‎l‎.‎ ‎I‎t‎ ‎e‎a‎t‎s‎ ‎l‎e‎s‎s‎ ‎t‎h‎a‎n‎ ‎1‎%‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎k‎e‎r‎ ‎b‎e‎e‎s‎ ‎i‎n‎ ‎a‎r‎e‎a‎s‎ ‎w‎h‎e‎r‎e‎ ‎i‎t‎ ‎l‎i‎v‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎g‎r‎o‎u‎p‎ ‎o‎f‎ ‎t‎h‎r‎e‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎s‎,‎ ‎e‎a‎c‎h‎ ‎w‎i‎t‎h‎ ‎a‎ ‎d‎r‎a‎g‎o‎n‎f‎l‎y‎ ‎i‎n‎ ‎i‎t‎s‎ ‎m‎o‎u‎t‎h‎,‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎K‎o‎n‎d‎o‎r‎ ‎T‎a‎n‎y‎a‎,‎ ‎K‎e‎c‎s‎k‎e‎m‎é‎t‎,‎ ‎H‎u‎n‎g‎a‎r‎y‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎k‎e‎e‎p‎ ‎t‎r‎a‎i‎n‎i‎n‎g‎ ‎m‎y‎ ‎n‎i‎g‎g‎e‎r‎ ‎P‎o‎k‎é‎m‎o‎n‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎h‎e‎ ‎w‎o‎n‎'‎t‎ ‎e‎v‎o‎l‎v‎e‎.‎ ‎W‎h‎y‎ ‎w‎o‎n‎'‎t‎ ‎m‎y‎ ‎n‎i‎g‎g‎e‎r‎ ‎P‎o‎k‎é‎m‎o‎n‎ ‎e‎v‎o‎l‎v‎e‎?‎"
dQSyus5H,duplicate_,naren_paste,Python,Tuesday 2nd of April 2024 10:11:44 PM CDT,"# Step 1: Change Data Type of Reviews Column
df['reviews'] = df['reviews'].astype(str)

# Step 2: Remove Duplicates
df = df.drop_duplicates()

# Step 3: Drop Specific Rows
value_to_drop = 'specific_value'
df = df[df['reviews'] != value_to_drop]
"
PKL6xq2W,Crown Pattern,CodingComputing,Python,Tuesday 2nd of April 2024 09:46:15 PM CDT,"# *Crown Pattern* solution by @CodingComputing

height = 7
width = 2*height-1
for row_num in range(1, height+1):
    if row_num <= height//2:  # The ""spikey"" part of the crown
        edge_stars_num = row_num
        center_stars_num = 2*row_num - 1
        total_stars_num = 2*edge_stars_num + center_stars_num
        interim_spaces_num = (width - total_stars_num) // 2
        print(
            '*'*edge_stars_num      +  "" ""*interim_spaces_num +
            '*'*center_stars_num    +
            "" ""*interim_spaces_num  +  '*'*edge_stars_num
        )
    else:  # The ""base"" part of the crown
        print('*' * width)

# Output:
# 
# *     *     *
# **   ***   **
# *** ***** ***
# *************
# *************
# *************
# *************
"
E88i5gem,funtun_v3,ironman2745,Lua,Tuesday 2nd of April 2024 09:34:36 PM CDT,"function goForward( gentle )
	if gentle == true then
		turtle.forward()
	else
		while turtle.forward() == false do
			turtle.dig()
			turtle.attack()
		end
	end
end

function goUp( gentle )
	if gentle == true then
		turtle.up()
	else
		while turtle.up() == false do
			turtle.digUp()
			turtle.attackUp()
		end
	end
end

function goDown( gentle )
	if gentle == true then
		turtle.down()
	else
		while turtle.down() == false do
			turtle.digDown()
			turtle.attackDown()
		end
	end
end

function goBack( gentle )
	if gentle == true then
		turtle.back()
	else
		turtle.turnRight()
		turtle.turnRight()
		goForward(false)
		turtle.turnLeft()
		turtle.turnLeft()
	end
end

function searchInventoryForItem( item )
	local ind = -1
	if item == nil then
		return ind
	end
	for i=1,16 do
		if turtle.getItemDetail(i) ~= nil then
			if turtle.getItemDetail(i).name == item then
				ind = i
				i = 16
			end
		end
	end
	return ind
end

function scanInventoryForTorches()
	local torchesPresent = false
	local previousSlot = turtle.getSelectedSlot()
	local torchesIndex = searchInventoryForItem(""minecraft:torch"")
	if torchesIndex > -1 then
		torchesPresent = true
		turtle.select(torchesIndex)
		turtle.transferTo(16)
		turtle.select(previousSlot)
	end
	return torchesPresent
end

function placeTorch()
	if turtle.getItemDetail(16) ~= nil then
		if turtle.getItemDetail(16).name == ""minecraft:torch"" then
			turtle.turnLeft()
			local previousSlot = turtle.getSelectedSlot()
			goForward()
			local cobblestoneIndex = searchInventoryForItem(""minecraft:cobblestone"")
			if cobblestoneIndex>-1 then
				turtle.select(cobblestoneIndex)
				turtle.place()
			end
			turtle.turnRight()
			turtle.turnRight()
			goForward()
			turtle.turnLeft()
			turtle.turnLeft()
			turtle.select(16)
			turtle.place()


			turtle.select(previousSlot)
			turtle.turnRight()
		end
	end
end

function level()
	turtle.turnRight()
	while turtle.detect() do
		turtle.dig()
		sleep(.5)
	end
	turtle.turnLeft()
	turtle.turnLeft()
	while turtle.detect() do
		turtle.dig()
		sleep(.5)
	end
	turtle.turnRight()
end

function slice( withTorch )
	goForward()
	goUp()
	level()
	if withTorch==true then
		placeTorch()
	end
	goDown()
	level()
	goDown()
	level()
	goUp()
end

function inventoryFull( howFar, torches )
	local lastSlot = 16
	if torches then
		lastSlot = 15
	end

	if turtle.getItemCount(lastSlot) > 0 then
		print(""Inventory full. Returning home to dump items."")
		turtle.turnRight()
		turtle.turnRight()
		for i=1,howFar do
			goForward()
		end
		goDown()
		for i=1,lastSlot do
			turtle.select(i)
			turtle.drop()
		end
		turtle.select(1)
		goUp()
		turtle.turnRight()
		turtle.turnRight()
		for i=1,howFar do
			goForward()
		end
		print(""Inventory dump complete. Resuming tunnel."")
	end
end

local arg = { ... }
distance = arg[1]
local tunnelDepth = 0
local torches = scanInventoryForTorches()
goUp()
for i=1,distance do
	if (i%5)==0 or i==1 then
		slice(torches)
	else
		slice(false)
	end
	tunnelDepth = tunnelDepth + 1
	print(""Depth ""+i+"" of ""+distance)
	inventoryFull(tunnelDepth, torches)
end
-- End of tunnel. Turn around.
turtle.turnRight()
turtle.turnRight()
-- Go back to start of tunnel
for i=1,distance do
	goForward()
end
-- drop remaining inventory [in chest?]
goDown()
for i=1,15 do
	turtle.select(i)
	turtle.drop()
end
turtle.select(1)
-- Home position. Ideally in the exact same position the user started the program
turtle.turnRight()
turtle.turnRight()
print(""Tunnel Complete!"")"
whY9AhLM,HA earthquake_alert script,xangin,YAML,Tuesday 2nd of April 2024 09:02:19 PM CDT,"earthquake_alert:
  alias: 地震通知腳本
  variables: 
    lv: ""{{ level[:1] | int }}""
  sequence:      
    #要做的事情放在此
    - alias: ""Line通知""
      service: notify.line_notify  #修改成自己的line notify名稱
      data:
        message: '警告!{{ lv }}級地震將在{{ seconds }}秒後抵達'
    	  
    - alias: ""打開智慧音箱""
      service: media_player.turn_on
      data: {}
      target:
        entity_id: 
          - media_player.living_room_nesthub #可同時寫多個音箱
          - media_player.guest_room_mini
    - alias: ""設定智慧音箱音量""
      service: media_player.volume_set
      data:
        entity_id:
        - media_player.guest_room_mini
        - media_player.living_room_nesthub #可同時寫多個音箱
        volume_level: '0.4' #0.1~1 1是最大聲
    - alias: ""智慧音箱播報""
      service: tts.edge_tts_say #修改成自己的tts服務
      data:
        entity_id:
          - media_player.living_room_nesthub #可同時寫多個音箱
          - media_player.guest_room_mini
      message: 警告!{{ lv }}級地震將在{{ seconds }}秒後抵達              "
5QcmuGBG,Mwa8ytAlslah.cs,UchihaT3Alo,C#,Tuesday 2nd of April 2024 08:48:32 PM CDT,"using System;
using System.Net.Http;
using Newtonsoft.Json;
//These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
namespace GameServer
{
    public static class Mwa8ytAlslah
    {
        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static uint SlaatAlfgrHour = 0;
        public static uint SlaatAlfgrMinute = 0;

        public static uint SlaatAlzhrHour = 0;
        public static uint SlaatAlzhrMinute = 0;

        public static uint SlaatAl3srHour = 0;
        public static uint SlaatAl3srMinute = 0;

        public static uint SlaatAlmghrbHour = 0;
        public static uint SlaatAlmghrbMinute = 0;

        public static uint SlaatAl3shaHour = 0;
        public static uint SlaatAl3shaMinute = 0;

        public static DateTime LastSlah;
        public static uint WaitingSlah;
        public static bool SlahNow = false;

        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static void LoadMwa8ytAlslah()
        {
            Console.Write(""Loading Mwa8ytAlslah....."");
            HttpClient httpClient = new HttpClient();
            string uri = ""http://api.aladhan.com/v1/timingsByCity?city=cairo&country=cairo&method=5"";
            HttpResponseMessage responseMessage = httpClient.GetAsync(uri).Result;
            string response = responseMessage.Content.ReadAsStringAsync().Result;
            dynamic resultObject = JsonConvert.DeserializeObject(response);
            #region Alfgr
            {
                string Alfgr = (string)resultObject.data.timings.Fajr;
                string[] Alfgrs = Alfgr.Split(':');
                SlaatAlfgrHour = Convert.ToByte(Alfgrs[0]);
                SlaatAlfgrMinute = Convert.ToByte(Alfgrs[1]);
            }
            #endregion
            #region Alzhr
            {
                string Alzhr = (string)resultObject.data.timings.Dhuhr;
                string[] Alzhrs = Alzhr.Split(':');
                SlaatAlzhrHour = Convert.ToByte(Alzhrs[0]);
                SlaatAlzhrMinute = Convert.ToByte(Alzhrs[1]);
            }
            #endregion
            #region Al3sr
            {
                string Al3sr = (string)resultObject.data.timings.Asr;
                string[] Al3srs = Al3sr.Split(':');
                SlaatAl3srHour = Convert.ToByte(Al3srs[0]);
                SlaatAl3srMinute = Convert.ToByte(Al3srs[1]);
            }
            #endregion
            #region Almghrb
            {
                string Almghrb = (string)resultObject.data.timings.Maghrib;
                string[] Almghrbs = Almghrb.Split(':');
                SlaatAlmghrbHour = Convert.ToByte(Almghrbs[0]);
                SlaatAlmghrbMinute = Convert.ToByte(Almghrbs[1]);
            }
            #endregion
            #region Al3sha
            {
                string Al3sha = (string)resultObject.data.timings.Isha;
                string[] Al3shas = Al3sha.Split(':');
                SlaatAl3shaHour = Convert.ToByte(Al3shas[0]);
                SlaatAl3shaMinute = Convert.ToByte(Al3shas[1]);
            }
            #endregion
            /*Console.WriteLine(""Alfgr: "" + SlaatAlfgrHour + "":"" + SlaatAlfgrMinute);
            Console.WriteLine(""Alzhr: "" + SlaatAlzhrHour + "":"" + SlaatAlzhrMinute);
            Console.WriteLine(""Al3sr: "" + SlaatAl3srHour + "":"" + SlaatAl3srMinute);
            Console.WriteLine(""Almghrb: "" + SlaatAlmghrbHour + "":"" + SlaatAlmghrbMinute);
            Console.WriteLine(""Al3sha: "" + SlaatAl3shaHour + "":"" + SlaatAl3shaMinute);*/
            System.Console.WriteLine(""     Complete!!"");
        }

        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static void Mwa8ytAlslahh(Client.GameClient client)
        {
            if (SlahNow)
            {
                if (!client.Player.OnAutoHunt)
                    client.Socket.Disconnect();
            }
        }

        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static void ShutDownLSlah()
        {
            #region Mwa8ytAlslah 
            if (DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlfgrHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlfgrMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlzhrHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlzhrMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAl3srHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAl3srMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlmghrbHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlmghrbMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAl3shaHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAl3shaMinute)
            {
                if (!SlahNow)
                {
                    if (DateTime.Now.DayOfWeek == DayOfWeek.Friday && DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlzhrHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlzhrMinute)
                        WaitingSlah = 30;
                    else
                        WaitingSlah = 15;
                    LastSlah = DateTime.Now;
                    SlahNow = true;
                }
            }
            if (DateTime.Now > LastSlah.AddMinutes(WaitingSlah))
            {
                if (SlahNow) SlahNow = false;
            }
            if (DateTime.Now.Hour == 01 && DateTime.Now.Minute == 00 && DateTime.Now.Second == 00)
                LoadMwa8ytAlslah();
            #endregion
        }

    }
}"
2H2S2rfn,VBA CLE & RIP CCP,bousaid,VB.NET,Tuesday 2nd of April 2024 07:43:07 PM CDT,"' =================================================================================================
'  Cle CCP  | By BOUSSAID
' =================================================================================================
Private Function CCP(x As String)

Dim TCCP1(1 To 15) As Integer
Dim IND As Integer
J = 0
For IND = 1 To Len(x)
    TCCP1(IND) = Mid(x, IND, 1)
    Next
    For IND = 4 To 4 + Len(x) - 1
        ac = ac + (TCCP1(Len(x) - J) * IND)
        J = J + 1
        Next
        ac = Right(ac, 2)
        'tcptxt = ac & "" Clé "" & tcptxt
        CCP = ac
End Function
' =================================================================================================
'  CLE & RIP CCP  | Usage: =Cle_CCP_RIP(1;A1) & =Cle_CCP_RIP(2;A1)
' =================================================================================================
Public Function Paie_Cle_CCP_RIP(Type_Cle As Integer, Compte_CCP As String) As String

Dim nResulta As Integer

Select Case Type_Cle
    '1 = Cle CCP
    Case 1
       nResulta = CLng(CCP(Compte_CCP))
       
    '2 = Cle Rip
    Case 2
        nResulta = (97 - ((((CLng(Compte_CCP) Mod 97) * (3 Mod 97)) + 85) Mod 97))
    Case Else
        nResulta = 0
End Select

'ADD ""0"" Like 01, 02, 03 ... etc
Paie_Cle_CCP_RIP = CStr(Format(nResulta, ""00"")) 'CStr(nResulta)

End Function"
P9QwbgA7,2024-04-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of April 2024 07:18:20 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 1101,
    ""162.142.125.226"": 3,
    ""58.218.204.183"": 9,
    ""185.73.125.86"": 3,
    ""92.51.2.11"": 3,
    ""144.16.111.79"": 3,
    ""141.98.81.79"": 3,
    ""87.251.75.145"": 9,
    ""205.210.31.210"": 9,
    ""84.201.2.2"": 6,
    ""194.165.16.76"": 6,
    ""212.70.149.142"": 12,
    ""45.227.254.49"": 6,
    ""185.170.144.3"": 6,
    ""23.239.5.33"": 12,
    ""50.116.45.78"": 3,
    ""167.94.146.59"": 3,
    ""112.4.139.162"": 3,
    ""205.210.31.71"": 9,
    ""27.71.25.209"": 3,
    ""103.245.236.103"": 6,
    ""147.78.47.111"": 9,
    ""167.94.145.60"": 3,
    ""185.81.68.38"": 9,
    ""180.93.172.173"": 3,
    ""167.94.138.35"": 3,
    ""185.196.220.41"": 9,
    ""147.182.129.2"": 12,
    ""194.165.16.73"": 6,
    ""193.142.146.227"": 9,
    ""68.183.126.120"": 3,
    ""198.235.24.2"": 9,
    ""198.135.49.131"": 3,
    ""194.165.16.72"": 6,
    ""185.255.92.106"": 3,
    ""212.70.149.146"": 3,
    ""87.251.75.64"": 3,
    ""62.204.41.222"": 6,
    ""192.3.101.25"": 9,
    ""103.232.53.123"": 3,
    ""198.235.24.218"": 9,
    ""71.6.134.232"": 30
  },
  ""asn"": {
    ""AS14061"": 1116,
    ""AS398324"": 6,
    ""AS4134"": 9,
    ""AS208091"": 15,
    ""AS209588"": 15,
    ""AS2697"": 3,
    ""AS396982"": 36,
    ""AS44066"": 6,
    ""AS48721"": 18,
    ""AS204428"": 15,
    ""AS267784"": 6,
    ""AS197414"": 6,
    ""AS63949"": 15,
    ""AS398705"": 6,
    ""AS56046"": 3,
    ""AS38731"": 3,
    ""AS150867"": 6,
    ""AS57523"": 9,
    ""AS135944"": 3,
    ""AS208046"": 18,
    ""AS396073"": 3,
    ""AS209604"": 3,
    ""AS59425"": 6,
    ""AS36352"": 9,
    ""AS63737"": 3,
    ""AS10439"": 30
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 1116,
    ""Censys, Inc."": 12,
    ""Chinanet"": 9,
    ""Xhost Internet Solutions LP"": 21,
    ""Flyservers S.A."": 39,
    ""ERNET India"": 3,
    ""Google LLC"": 36,
    ""www.accelerated.de"": 6,
    ""SS-Net"": 15,
    ""Akamai Technologies, Inc."": 15,
    ""China Mobile Communications Corporation"": 3,
    ""VIETTEL"": 3,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 6,
    ""Chang Way Technologies Co. Limited"": 9,
    ""SPT"": 3,
    ""ColocationX Ltd."": 18,
    ""Majestic Hosting Solutions, LLC"": 3,
    ""ibrahim tufek"": 3,
    ""Horizon LLC"": 6,
    ""HostPapa"": 9,
    ""VIETSERVER"": 3,
    ""CariNet, Inc."": 30
  },
  ""org"": {
    ""DigitalOcean, LLC"": 1116,
    ""Censys Inc"": 3,
    ""Chinanet JS"": 9,
    ""Xhostis"": 9,
    ""Alviva Holding Limited"": 3,
    ""ERNET India"": 3,
    ""Flyservers S.A"": 30,
    ""Xhost Internet Solutions"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""diva-e Datacenters GmbH"": 6,
    ""4Media Ltd"": 15,
    ""UAB Host Baltic"": 6,
    ""Linode"": 15,
    ""Censys, Inc."": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Viettel Group"": 3,
    ""LP Technology Electronic Commerce Company Limited"": 6,
    ""Starcrecium Limited"": 9,
    ""Saigon Postel Corporation"": 3,
    ""Censys, Inc"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Majestic Hosting Solutions, LLC"": 3,
    ""Rabisu Game Server Hosting Providers"": 3,
    ""Horizon LLC"": 6,
    ""Unknown"": 9,
    ""VietServer Services technology company limited"": 3,
    ""CariNet, Inc."": 30
  },
  ""regionName"": {
    ""South West"": 1101,
    ""Michigan"": 6,
    ""Jiangsu"": 12,
    ""North Holland"": 39,
    ""Moscow"": 18,
    ""National Capital Territory of Delhi"": 3,
    ""Drenthe"": 3,
    ""California"": 48,
    ""Hesse"": 12,
    ""Kaunas"": 18,
    ""Sliven"": 15,
    ""Vilnius"": 6,
    ""Georgia"": 3,
    ""Hanoi"": 6,
    ""Ho Chi Minh"": 9,
    ""Virginia"": 9,
    ""New Jersey"": 15,
    ""Texas"": 3,
    ""Istanbul"": 3,
    ""New York"": 9,
    ""Nevada"": 30
  },
  ""country"": {
    ""Singapore"": 1101,
    ""United States"": 123,
    ""China"": 12,
    ""The Netherlands"": 42,
    ""Russia"": 18,
    ""India"": 3,
    ""Germany"": 12,
    ""Lithuania"": 24,
    ""Bulgaria"": 15,
    ""Vietnam"": 15,
    ""T\u00fcrkiye"": 3
  },
  ""account"": {
    ""hello"": 1131,
    ""(empty)"": 21,
    ""Administr"": 45,
    ""ZQsepOsmJ"": 3,
    ""jbVtpi"": 3,
    ""WrOKHt"": 3,
    ""Test"": 39,
    ""vlyhbohd"": 12,
    ""beio"": 6,
    ""HaGmqQZOu"": 3,
    ""NllbRn"": 3,
    ""IaCjHH"": 3,
    ""Domain"": 36,
    ""zm4klv3d"": 12,
    ""uKgkoiOmB"": 3,
    ""bOEiJD"": 3,
    ""fIWGHy"": 3,
    ""FAECwLXcW"": 3,
    ""nxxQSP"": 3,
    ""qKSIWr"": 3,
    ""eltons"": 15,
    ""administr"": 15
  },
  ""keyboard"": {
    ""Unknown"": 1368
  },
  ""client_build"": {
    ""Unknown"": 1368
  },
  ""client_name"": {
    ""Unknown"": 1368
  },
  ""ip_type"": {
    ""hosting & proxy"": 1101,
    ""Unknown"": 126,
    ""hosting"": 114,
    ""mobile"": 15,
    ""mobile & hosting"": 3,
    ""proxy"": 9
  }
}"
zYy0k9Pn,2024-04-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of April 2024 07:16:09 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 734,
    ""162.142.125.226"": 2,
    ""58.218.204.183"": 6,
    ""185.73.125.86"": 2,
    ""92.51.2.11"": 2,
    ""144.16.111.79"": 2,
    ""141.98.81.79"": 2,
    ""87.251.75.145"": 6,
    ""205.210.31.210"": 6,
    ""84.201.2.2"": 4,
    ""194.165.16.76"": 4,
    ""212.70.149.142"": 8,
    ""45.227.254.49"": 4,
    ""185.170.144.3"": 4,
    ""23.239.5.33"": 8,
    ""50.116.45.78"": 2,
    ""167.94.146.59"": 2,
    ""112.4.139.162"": 2,
    ""205.210.31.71"": 6,
    ""27.71.25.209"": 2,
    ""103.245.236.103"": 4,
    ""147.78.47.111"": 6,
    ""167.94.145.60"": 2,
    ""185.81.68.38"": 6,
    ""180.93.172.173"": 2,
    ""167.94.138.35"": 2,
    ""185.196.220.41"": 6,
    ""147.182.129.2"": 8,
    ""194.165.16.73"": 4,
    ""193.142.146.227"": 6,
    ""68.183.126.120"": 2,
    ""198.235.24.2"": 6,
    ""198.135.49.131"": 2,
    ""194.165.16.72"": 4,
    ""185.255.92.106"": 2,
    ""212.70.149.146"": 2,
    ""87.251.75.64"": 2,
    ""62.204.41.222"": 4,
    ""192.3.101.25"": 6,
    ""103.232.53.123"": 2,
    ""198.235.24.218"": 6,
    ""71.6.134.232"": 20
  },
  ""asn"": {
    ""AS14061"": 744,
    ""AS398324"": 4,
    ""AS4134"": 6,
    ""AS208091"": 10,
    ""AS209588"": 10,
    ""AS2697"": 2,
    ""AS396982"": 24,
    ""AS44066"": 4,
    ""AS48721"": 12,
    ""AS204428"": 10,
    ""AS267784"": 4,
    ""AS197414"": 4,
    ""AS63949"": 10,
    ""AS398705"": 4,
    ""AS56046"": 2,
    ""AS38731"": 2,
    ""AS150867"": 4,
    ""AS57523"": 6,
    ""AS135944"": 2,
    ""AS208046"": 12,
    ""AS396073"": 2,
    ""AS209604"": 2,
    ""AS59425"": 4,
    ""AS36352"": 6,
    ""AS63737"": 2,
    ""AS10439"": 20
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 744,
    ""Censys, Inc."": 8,
    ""Chinanet"": 6,
    ""Xhost Internet Solutions LP"": 14,
    ""Flyservers S.A."": 26,
    ""ERNET India"": 2,
    ""Google LLC"": 24,
    ""www.accelerated.de"": 4,
    ""SS-Net"": 10,
    ""Akamai Technologies, Inc."": 10,
    ""China Mobile Communications Corporation"": 2,
    ""VIETTEL"": 2,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 4,
    ""Chang Way Technologies Co. Limited"": 6,
    ""SPT"": 2,
    ""ColocationX Ltd."": 12,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""ibrahim tufek"": 2,
    ""Horizon LLC"": 4,
    ""HostPapa"": 6,
    ""VIETSERVER"": 2,
    ""CariNet, Inc."": 20
  },
  ""org"": {
    ""DigitalOcean, LLC"": 744,
    ""Censys Inc"": 2,
    ""Chinanet JS"": 6,
    ""Xhostis"": 6,
    ""Alviva Holding Limited"": 2,
    ""ERNET India"": 2,
    ""Flyservers S.A"": 20,
    ""Xhost Internet Solutions"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""diva-e Datacenters GmbH"": 4,
    ""4Media Ltd"": 10,
    ""UAB Host Baltic"": 4,
    ""Linode"": 10,
    ""Censys, Inc."": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Viettel Group"": 2,
    ""LP Technology Electronic Commerce Company Limited"": 4,
    ""Starcrecium Limited"": 6,
    ""Saigon Postel Corporation"": 2,
    ""Censys, Inc"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""Rabisu Game Server Hosting Providers"": 2,
    ""Horizon LLC"": 4,
    ""Unknown"": 6,
    ""VietServer Services technology company limited"": 2,
    ""CariNet, Inc."": 20
  },
  ""regionName"": {
    ""South West"": 734,
    ""Michigan"": 4,
    ""Jiangsu"": 8,
    ""North Holland"": 26,
    ""Moscow"": 12,
    ""National Capital Territory of Delhi"": 2,
    ""Drenthe"": 2,
    ""California"": 32,
    ""Hesse"": 8,
    ""Kaunas"": 12,
    ""Sliven"": 10,
    ""Vilnius"": 4,
    ""Georgia"": 2,
    ""Hanoi"": 4,
    ""Ho Chi Minh"": 6,
    ""Virginia"": 6,
    ""New Jersey"": 10,
    ""Texas"": 2,
    ""Istanbul"": 2,
    ""New York"": 6,
    ""Nevada"": 20
  },
  ""country"": {
    ""Singapore"": 734,
    ""United States"": 82,
    ""China"": 8,
    ""The Netherlands"": 28,
    ""Russia"": 12,
    ""India"": 2,
    ""Germany"": 8,
    ""Lithuania"": 16,
    ""Bulgaria"": 10,
    ""Vietnam"": 10,
    ""T\u00fcrkiye"": 2
  },
  ""account"": {
    ""hello"": 754,
    ""(empty)"": 14,
    ""Administr"": 30,
    ""ZQsepOsmJ"": 2,
    ""jbVtpi"": 2,
    ""WrOKHt"": 2,
    ""Test"": 26,
    ""vlyhbohd"": 8,
    ""beio"": 4,
    ""HaGmqQZOu"": 2,
    ""NllbRn"": 2,
    ""IaCjHH"": 2,
    ""Domain"": 24,
    ""zm4klv3d"": 8,
    ""uKgkoiOmB"": 2,
    ""bOEiJD"": 2,
    ""fIWGHy"": 2,
    ""FAECwLXcW"": 2,
    ""nxxQSP"": 2,
    ""qKSIWr"": 2,
    ""eltons"": 10,
    ""administr"": 10
  },
  ""keyboard"": {
    ""Unknown"": 912
  },
  ""client_build"": {
    ""Unknown"": 912
  },
  ""client_name"": {
    ""Unknown"": 912
  },
  ""ip_type"": {
    ""hosting & proxy"": 734,
    ""Unknown"": 84,
    ""hosting"": 76,
    ""mobile"": 10,
    ""mobile & hosting"": 2,
    ""proxy"": 6
  }
}"
kNd7NRMq,2024-04-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 367,
    ""162.142.125.226"": 1,
    ""58.218.204.183"": 3,
    ""185.73.125.86"": 1,
    ""92.51.2.11"": 1,
    ""144.16.111.79"": 1,
    ""141.98.81.79"": 1,
    ""87.251.75.145"": 3,
    ""205.210.31.210"": 3,
    ""84.201.2.2"": 2,
    ""194.165.16.76"": 2,
    ""212.70.149.142"": 4,
    ""45.227.254.49"": 2,
    ""185.170.144.3"": 2,
    ""23.239.5.33"": 4,
    ""50.116.45.78"": 1,
    ""167.94.146.59"": 1,
    ""112.4.139.162"": 1,
    ""205.210.31.71"": 3,
    ""27.71.25.209"": 1,
    ""103.245.236.103"": 2,
    ""147.78.47.111"": 3,
    ""167.94.145.60"": 1,
    ""185.81.68.38"": 3,
    ""180.93.172.173"": 1,
    ""167.94.138.35"": 1,
    ""185.196.220.41"": 3,
    ""147.182.129.2"": 4,
    ""194.165.16.73"": 2,
    ""193.142.146.227"": 3,
    ""68.183.126.120"": 1,
    ""198.235.24.2"": 3,
    ""198.135.49.131"": 1,
    ""194.165.16.72"": 2,
    ""185.255.92.106"": 1,
    ""212.70.149.146"": 1,
    ""87.251.75.64"": 1,
    ""62.204.41.222"": 2,
    ""192.3.101.25"": 3,
    ""103.232.53.123"": 1,
    ""198.235.24.218"": 3,
    ""71.6.134.232"": 10
  },
  ""asn"": {
    ""AS14061"": 372,
    ""AS398324"": 2,
    ""AS4134"": 3,
    ""AS208091"": 5,
    ""AS209588"": 5,
    ""AS2697"": 1,
    ""AS396982"": 12,
    ""AS44066"": 2,
    ""AS48721"": 6,
    ""AS204428"": 5,
    ""AS267784"": 2,
    ""AS197414"": 2,
    ""AS63949"": 5,
    ""AS398705"": 2,
    ""AS56046"": 1,
    ""AS38731"": 1,
    ""AS150867"": 2,
    ""AS57523"": 3,
    ""AS135944"": 1,
    ""AS208046"": 6,
    ""AS396073"": 1,
    ""AS209604"": 1,
    ""AS59425"": 2,
    ""AS36352"": 3,
    ""AS63737"": 1,
    ""AS10439"": 10
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 372,
    ""Censys, Inc."": 4,
    ""Chinanet"": 3,
    ""Xhost Internet Solutions LP"": 7,
    ""Flyservers S.A."": 13,
    ""ERNET India"": 1,
    ""Google LLC"": 12,
    ""www.accelerated.de"": 2,
    ""SS-Net"": 5,
    ""Akamai Technologies, Inc."": 5,
    ""China Mobile Communications Corporation"": 1,
    ""VIETTEL"": 1,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""SPT"": 1,
    ""ColocationX Ltd."": 6,
    ""Majestic Hosting Solutions, LLC"": 1,
    ""ibrahim tufek"": 1,
    ""Horizon LLC"": 2,
    ""HostPapa"": 3,
    ""VIETSERVER"": 1,
    ""CariNet, Inc."": 10
  },
  ""org"": {
    ""DigitalOcean, LLC"": 372,
    ""Censys Inc"": 1,
    ""Chinanet JS"": 3,
    ""Xhostis"": 3,
    ""Alviva Holding Limited"": 1,
    ""ERNET India"": 1,
    ""Flyservers S.A"": 10,
    ""Xhost Internet Solutions"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""diva-e Datacenters GmbH"": 2,
    ""4Media Ltd"": 5,
    ""UAB Host Baltic"": 2,
    ""Linode"": 5,
    ""Censys, Inc."": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Viettel Group"": 1,
    ""LP Technology Electronic Commerce Company Limited"": 2,
    ""Starcrecium Limited"": 3,
    ""Saigon Postel Corporation"": 1,
    ""Censys, Inc"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Majestic Hosting Solutions, LLC"": 1,
    ""Rabisu Game Server Hosting Providers"": 1,
    ""Horizon LLC"": 2,
    ""Unknown"": 3,
    ""VietServer Services technology company limited"": 1,
    ""CariNet, Inc."": 10
  },
  ""regionName"": {
    ""South West"": 367,
    ""Michigan"": 2,
    ""Jiangsu"": 4,
    ""North Holland"": 13,
    ""Moscow"": 6,
    ""National Capital Territory of Delhi"": 1,
    ""Drenthe"": 1,
    ""California"": 16,
    ""Hesse"": 4,
    ""Kaunas"": 6,
    ""Sliven"": 5,
    ""Vilnius"": 2,
    ""Georgia"": 1,
    ""Hanoi"": 2,
    ""Ho Chi Minh"": 3,
    ""Virginia"": 3,
    ""New Jersey"": 5,
    ""Texas"": 1,
    ""Istanbul"": 1,
    ""New York"": 3,
    ""Nevada"": 10
  },
  ""country"": {
    ""Singapore"": 367,
    ""United States"": 41,
    ""China"": 4,
    ""The Netherlands"": 14,
    ""Russia"": 6,
    ""India"": 1,
    ""Germany"": 4,
    ""Lithuania"": 8,
    ""Bulgaria"": 5,
    ""Vietnam"": 5,
    ""T\u00fcrkiye"": 1
  },
  ""account"": {
    ""hello"": 377,
    ""(empty)"": 7,
    ""Administr"": 15,
    ""ZQsepOsmJ"": 1,
    ""jbVtpi"": 1,
    ""WrOKHt"": 1,
    ""Test"": 13,
    ""vlyhbohd"": 4,
    ""beio"": 2,
    ""HaGmqQZOu"": 1,
    ""NllbRn"": 1,
    ""IaCjHH"": 1,
    ""Domain"": 12,
    ""zm4klv3d"": 4,
    ""uKgkoiOmB"": 1,
    ""bOEiJD"": 1,
    ""fIWGHy"": 1,
    ""FAECwLXcW"": 1,
    ""nxxQSP"": 1,
    ""qKSIWr"": 1,
    ""eltons"": 5,
    ""administr"": 5
  },
  ""keyboard"": {
    ""Unknown"": 456
  },
  ""client_build"": {
    ""Unknown"": 456
  },
  ""client_name"": {
    ""Unknown"": 456
  },
  ""ip_type"": {
    ""hosting & proxy"": 367,
    ""Unknown"": 42,
    ""hosting"": 38,
    ""mobile"": 5,
    ""mobile & hosting"": 1,
    ""proxy"": 3
  }
}"
sJ2bkEcE,Идиома Pimpl,prizrak567890,C++,Tuesday 2nd of April 2024 06:56:30 PM CDT,"//bimap.cpp


#include ""bimap.h""
#include ""unordered_map""
#include <deque>

struct BiMap::Impl {

    bool Add(std::string_view& key, std::string_view& value) {
        if (keyToValue_.count(key) || valueToKey_.count(value)) {
            return false;
        }

        keyToValue_[key] = value;
        valueToKey_[value] = key;
        insertionOrder_.emplace_back(std::move(key));
        insertionOrder_.emplace_back(std::move(value));


        return true;
    }

    std::optional<std::string_view> FindValue(std::string_view key) const noexcept {
        auto it = keyToValue_.find(key);
        if (it != keyToValue_.end()) {
            return it->second;
        }
        else {
            return std::nullopt;
        }
    }

    std::optional<std::string_view> FindKey(std::string_view value) const noexcept {
        auto it = valueToKey_.find(value);
        if (it != valueToKey_.end()) {
            return it->second;
        }
        else {
            return std::nullopt;
        }
    }
private:

    std::unordered_map<std::string_view, std::string_view>  keyToValue_;
    std::unordered_map<std::string_view, std::string_view>  valueToKey_;
    //std::deque<std::pair<std::string_view, std::string_view>> insertionOrder_;
    std::deque<std::string> insertionOrder_;
};

BiMap::BiMap() : impl_(std::make_unique<Impl>()) {}


BiMap::BiMap(const BiMap& other) : impl_(other.impl_ ? std::make_unique<Impl>(*other.impl_) : nullptr) {}

BiMap::BiMap(BiMap&& other) noexcept = default;

BiMap& BiMap::operator=(const BiMap& other) {
    if (this != &other) {
        impl_ = std::make_unique<Impl>(*other.impl_);
    }
    return *this;
}

BiMap& BiMap::operator=(BiMap&& other) noexcept = default;
BiMap::~BiMap() = default;

bool BiMap::Add(std::string_view key, std::string_view value) {
    return impl_->Add(key, value);
}

std::optional<std::string_view> BiMap::FindValue(std::string_view key) const noexcept {
    return impl_->FindValue(key);
}

std::optional<std::string_view> BiMap::FindKey(std::string_view value) const noexcept {
    return impl_->FindKey(value);
}



///////////////  BIMAP.H

#pragma once

#include <optional>
#include <string_view>
#include <memory>

class BiMap {
public:

    BiMap();
    BiMap(const BiMap& other);
    BiMap(BiMap&& other) noexcept;
    BiMap& operator=(const BiMap& other);
    BiMap& operator=(BiMap&& other) noexcept;
    ~BiMap();


    bool Add(std::string_view key, std::string_view value);


    std::optional<std::string_view> FindValue(std::string_view key) const noexcept;


    std::optional<std::string_view> FindKey(std::string_view value) const noexcept;

private:

    struct Impl;
    std::unique_ptr<Impl> impl_;

};


//  main.cpp


#include <cassert>

#include ""bimap.h""

int main() {
    using namespace std::literals;

    BiMap bimap;
    {
        const bool cat_added = bimap.Add(""Cat""sv, ""Koshka""sv);

        assert(cat_added);

        assert(bimap.FindValue(""Cat""sv) == ""Koshka""sv);
        assert(bimap.FindKey(""Koshka""sv) == ""Cat""sv);
        assert(!bimap.FindKey(""Cat""sv));
        assert(!bimap.FindValue(""Koshka""sv));

        const bool kitty_added = bimap.Add(""Cat""sv, ""Kitty""sv);

        assert(!kitty_added);
        assert(bimap.FindValue(""Cat""sv) == ""Koshka""sv);
        assert(!bimap.FindValue(""Kitty""sv));
    }

    BiMap bimap_copy(bimap);
    assert(bimap_copy.FindValue(""Cat""sv) == ""Koshka""sv);
    assert(bimap_copy.FindKey(""Koshka""sv) == ""Cat""sv);

    bimap_copy.Add(""Dog""sv, ""Sobaka""sv);
    assert(bimap_copy.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(bimap_copy.FindKey(""Sobaka""sv) == ""Dog""sv);
    assert(!bimap.FindKey(""Sobaka""sv));
    assert(!bimap.FindValue(""Dog""sv));

    bimap = std::move(bimap_copy);
    assert(bimap.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(bimap.FindKey(""Sobaka""sv) == ""Dog""sv);

    BiMap moved_bimap(std::move(bimap));
    assert(moved_bimap.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(moved_bimap.FindKey(""Sobaka""sv) == ""Dog""sv);

    BiMap bimap_to_assign;
    bimap_to_assign = moved_bimap;
    assert(bimap_to_assign.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(bimap_to_assign.FindKey(""Sobaka""sv) == ""Dog""sv);
}"
nKMaUDQN,correct Navigation.jsx,RIYA_22,JavaScript,Tuesday 2nd of April 2024 06:23:56 PM CDT,"import { Fragment, useState } from 'react'
import { Dialog, Popover, Tab, Transition } from '@headlessui/react'
import { Bars3Icon, MagnifyingGlassIcon, ShoppingBagIcon, XMarkIcon } from '@heroicons/react/24/outline'
import { navigation } from './navigationData'

// const navigation = {
//   categories: [
//     {
//       id: 'women',
//       name: 'Women',
//       featured: [
//         {
//           name: 'New Arrivals',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/mega-menu-category-01.jpg',
//           imageAlt: 'Models sitting back to back, wearing Basic Tee in black and bone.',
//         },
//         {
//           name: 'Basic Tees',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/mega-menu-category-02.jpg',
//           imageAlt: 'Close up of Basic Tee fall bundle with off-white, ochre, olive, and black tees.',
//         },
//       ],
//       sections: [
//         {
//           id: 'clothing',
//           name: 'Clothing',
//           items: [
//             { name: 'Tops', href: '#' },
//             { name: 'Dresses', href: '#' },
//             { name: 'Pants', href: '#' },
//             { name: 'Denim', href: '#' },
//             { name: 'Sweaters', href: '#' },
//             { name: 'T-Shirts', href: '#' },
//             { name: 'Jackets', href: '#' },
//             { name: 'Activewear', href: '#' },
//             { name: 'Browse All', href: '#' },
//           ],
//         },
//         {
//           id: 'accessories',
//           name: 'Accessories',
//           items: [
//             { name: 'Watches', href: '#' },
//             { name: 'Wallets', href: '#' },
//             { name: 'Bags', href: '#' },
//             { name: 'Sunglasses', href: '#' },
//             { name: 'Hats', href: '#' },
//             { name: 'Belts', href: '#' },
//           ],
//         },
//         {
//           id: 'brands',
//           name: 'Brands',
//           items: [
//             { name: 'Full Nelson', href: '#' },
//             { name: 'My Way', href: '#' },
//             { name: 'Re-Arranged', href: '#' },
//             { name: 'Counterfeit', href: '#' },
//             { name: 'Significant Other', href: '#' },
//           ],
//         },
//       ],
//     },
//     {
//       id: 'men',
//       name: 'Men',
//       featured: [
//         {
//           name: 'New Arrivals',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/product-page-04-detail-product-shot-01.jpg',
//           imageAlt: 'Drawstring top with elastic loop closure and textured interior padding.',
//         },
//         {
//           name: 'Artwork Tees',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/category-page-02-image-card-06.jpg',
//           imageAlt:
//             'Three shirts in gray, white, and blue arranged on table with same line drawing of hands and shapes overlapping on front of shirt.',
//         },
//       ],
//       sections: [
//         {
//           id: 'clothing',
//           name: 'Clothing',
//           items: [
//             { name: 'Tops', href: '#' },
//             { name: 'Pants', href: '#' },
//             { name: 'Sweaters', href: '#' },
//             { name: 'T-Shirts', href: '#' },
//             { name: 'Jackets', href: '#' },
//             { name: 'Activewear', href: '#' },
//             { name: 'Browse All', href: '#' },
//           ],
//         },
//         {
//           id: 'accessories',
//           name: 'Accessories',
//           items: [
//             { name: 'Watches', href: '#' },
//             { name: 'Wallets', href: '#' },
//             { name: 'Bags', href: '#' },
//             { name: 'Sunglasses', href: '#' },
//             { name: 'Hats', href: '#' },
//             { name: 'Belts', href: '#' },
//           ],
//         },
//         {
//           id: 'brands',
//           name: 'Brands',
//           items: [
//             { name: 'Re-Arranged', href: '#' },
//             { name: 'Counterfeit', href: '#' },
//             { name: 'Full Nelson', href: '#' },
//             { name: 'My Way', href: '#' },
//           ],
//         },
//       ],
//     },
//   ],
//   pages: [
//     { name: 'Company', href: '#' },
//     { name: 'Stores', href: '#' },
//   ],
// }

function classNames(...classes) {
  return classes.filter(Boolean).join(' ')
}

export default function Navigation() {
  const [open, setOpen] = useState(false)

  return (
    <div className=""bg-white z-50 pb-10"" >
      {/* Mobile menu */}
      <Transition.Root show={open} as={Fragment}>
        <Dialog as=""div"" className=""relative z-40 lg:hidden"" onClose={setOpen}>
          <Transition.Child
            as={Fragment}
            enter=""transition-opacity ease-linear duration-300""
            enterFrom=""opacity-0""
            enterTo=""opacity-100""
            leave=""transition-opacity ease-linear duration-300""
            leaveFrom=""opacity-100""
            leaveTo=""opacity-0""
          >
            <div className=""fixed inset-0 bg-black bg-opacity-25"" />
          </Transition.Child>

          <div className=""fixed inset-0 z-40 flex"">
            <Transition.Child
              as={Fragment}
              enter=""transition ease-in-out duration-300 transform""
              enterFrom=""-translate-x-full""
              enterTo=""translate-x-0""
              leave=""transition ease-in-out duration-300 transform""
              leaveFrom=""translate-x-0""
              leaveTo=""-translate-x-full""
            >
              <Dialog.Panel className=""relative flex w-full max-w-xs flex-col overflow-y-auto bg-white pb-12 shadow-xl"">
                <div className=""flex px-4 pb-2 pt-5"">
                  <button
                    type=""button""
                    className=""relative -m-2 inline-flex items-center justify-center rounded-md p-2 text-gray-400""
                    onClick={() => setOpen(false)}
                  >
                    <span className=""absolute -inset-0.5"" />
                    <span className=""sr-only"">Close menu</span>
                    <XMarkIcon className=""h-6 w-6"" aria-hidden=""true"" />
                  </button>
                </div>

                {/* Links */}
                <Tab.Group as=""div"" className=""mt-2"">
                  <div className=""border-b border-gray-200"">
                    <Tab.List className=""-mb-px flex space-x-8 px-4"">
                      {navigation.categories.map((category) => (
                        <Tab
                          key={category.name}
                          className={({ selected }) =>
                            classNames(
                              selected ? 'border-indigo-600 text-indigo-600' : 'border-transparent text-gray-900',
                              'flex-1 whitespace-nowrap border-b-2 px-1 py-4 text-base font-medium'
                            )
                          }
                        >
                          {category.name}
                        </Tab>
                      ))}
                    </Tab.List>
                  </div>
                  <Tab.Panels as={Fragment}>
                    {navigation.categories.map((category) => (
                      <Tab.Panel key={category.name} className=""space-y-10 px-4 pb-8 pt-10"">
                        <div className=""grid grid-cols-2 gap-x-4"">
                          {category.featured.map((item) => (
                            <div key={item.name} className=""group relative text-sm"">
                              <div className=""aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75"">
                                <img src={item.imageSrc} alt={item.imageAlt} className=""object-cover object-center"" />
                              </div>
                              <a href={item.href} className=""mt-6 block font-medium text-gray-900"">
                                <span className=""absolute inset-0 z-10"" aria-hidden=""true"" />
                                {item.name}
                              </a>
                              <p aria-hidden=""true"" className=""mt-1"">
                                Shop now
                              </p>
                            </div>
                          ))}
                        </div>
                        {category.sections.map((section) => (
                          <div key={section.name}>
                            <p id={`${category.id}-${section.id}-heading-mobile`} className=""font-medium text-gray-900"">
                              {section.name}
                            </p>
                            <ul
                              role=""list""
                              aria-labelledby={`${category.id}-${section.id}-heading-mobile`}
                              className=""mt-6 flex flex-col space-y-6""
                            >
                              {section.items.map((item) => (
                                <li key={item.name} className=""flow-root"">
                                  <a href={item.href} className=""-m-2 block p-2 text-gray-500"">
                                    {item.name}
                                  </a>
                                </li>
                              ))}
                            </ul>
                          </div>
                        ))}
                      </Tab.Panel>
                    ))}
                  </Tab.Panels>
                </Tab.Group>

                <div className=""space-y-6 border-t border-gray-200 px-4 py-6"">
                  {navigation.pages.map((page) => (
                    <div key={page.name} className=""flow-root"">
                      <a href={page.href} className=""-m-2 block p-2 font-medium text-gray-900"">
                        {page.name}
                      </a>
                    </div>
                  ))}
                </div>

                <div className=""space-y-6 border-t border-gray-200 px-4 py-6"">
                  <div className=""flow-root"">
                    <a href=""#"" className=""-m-2 block p-2 font-medium text-gray-900"">
                      Sign in
                    </a>
                  </div>
                  <div className=""flow-root"">
                    <a href=""#"" className=""-m-2 block p-2 font-medium text-gray-900"">
                      Create account
                    </a>
                  </div>
                </div>

                <div className=""border-t border-gray-200 px-4 py-6"">
                  <a href=""#"" className=""-m-2 flex items-center p-2"">
                    <img
                      src=""https://tailwindui.com/img/flags/flag-canada.svg""
                      alt=""""
                      className=""block h-auto w-5 flex-shrink-0""
                    />
                    <span className=""ml-3 block text-base font-medium text-gray-900"">CAD</span>
                    <span className=""sr-only"">, change currency</span>
                  </a>
                </div>
              </Dialog.Panel>
            </Transition.Child>
          </div>
        </Dialog>
      </Transition.Root>

      <header className=""relative bg-white"">
        <p className=""flex h-10 items-center justify-center bg-indigo-600 px-4 text-sm font-medium text-white sm:px-6 lg:px-8"">
          Get free delivery on orders over $100
        </p>

        <nav aria-label=""Top"" className=""mx-auto max-w-7xl px-4 sm:px-6 lg:px-8"">
          <div className=""border-b border-gray-200"">
            <div className=""flex h-16 items-center"">
              <button
                type=""button""
                className=""relative rounded-md bg-white p-2 text-gray-400 lg:hidden""
                onClick={() => setOpen(true)}
              >
                <span className=""absolute -inset-0.5"" />
                <span className=""sr-only"">Open menu</span>
                <Bars3Icon className=""h-6 w-6"" aria-hidden=""true"" />
              </button>

              {/* Logo */}
              <div className=""ml-4 flex lg:ml-0"">
                <a href=""#"">
                  <span className=""sr-only"">Your Company</span>
                  <img
                    className=""h-8 w-auto""
                    src=""https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600""
                    alt=""ShopwithZosh""
                  />
                </a>
              </div>

              {/* Flyout menus */}
              <Popover.Group className=""hidden lg:ml-8 lg:block lg:self-stretch"">
                <div className=""flex h-full space-x-8"">
                  {navigation.categories.map((category) => (
                    <Popover key={category.name} className=""flex"">
                      {({ open }) => (
                        <>
                          <div className=""relative flex"">
                            <Popover.Button
                              className={classNames(
                                open
                                  ? 'border-indigo-600 text-indigo-600'
                                  : 'border-transparent text-gray-700 hover:text-gray-800',
                                'relative z-10 -mb-px flex items-center border-b-2 pt-px text-sm font-medium transition-colors duration-200 ease-out'
                              )}
                            >
                              {category.name}
                            </Popover.Button>
                          </div>

                          <Transition
                            as={Fragment}
                            enter=""transition ease-out duration-200""
                            enterFrom=""opacity-0""
                            enterTo=""opacity-100""
                            leave=""transition ease-in duration-150""
                            leaveFrom=""opacity-100""
                            leaveTo=""opacity-0""
                          >
                            <Popover.Panel className=""absolute inset-x-0 top-full text-sm text-gray-500 z-50"">
                              {/* Presentational element used to render the bottom shadow, if we put the shadow on the actual panel it pokes out the top, so we use this shorter element to hide the top of the shadow */}
                              <div className=""absolute inset-0 top-1/2 bg-white shadow"" aria-hidden=""true"" />

                              <div className=""relative bg-white"">
                                <div className=""mx-auto max-w-7xl px-8"">
                                  <div className=""grid grid-cols-2 gap-x-8 gap-y-10 py-16"">
                                    <div className=""col-start-2 grid grid-cols-2 gap-x-8"">
                                      {category.featured.map((item) => (
                                        <div key={item.name} className=""group relative text-base sm:text-sm"">
                                          <div className=""aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75"">
                                            <img
                                              src={item.imageSrc}
                                              alt={item.imageAlt}
                                              className=""object-cover object-center""
                                            />
                                          </div>
                                          <a href={item.href} className=""mt-6 block font-medium text-gray-900"">
                                            <span className=""absolute inset-0 z-10"" aria-hidden=""true"" />
                                            {item.name}
                                          </a>
                                          <p aria-hidden=""true"" className=""mt-1"">
                                            Shop now
                                          </p>
                                        </div>
                                      ))}
                                    </div>
                                    <div className=""row-start-1 grid grid-cols-3 gap-x-8 gap-y-10 text-sm"">
                                      {category.sections.map((section) => (
                                        <div key={section.name}>
                                          <p id={`${section.name}-heading`} className=""font-medium text-gray-900"">
                                            {section.name}
                                          </p>
                                          <ul
                                            role=""list""
                                            aria-labelledby={`${section.name}-heading`}
                                            className=""mt-6 space-y-6 sm:mt-4 sm:space-y-4""
                                          >
                                            {section.items.map((item) => (
                                              <li key={item.name} className=""flex"">
                                                <a href={item.href} className=""hover:text-gray-800"">
                                                  {item.name}
                                                </a>
                                              </li>
                                            ))}
                                          </ul>
                                        </div>
                                      ))}
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </Popover.Panel>
                          </Transition>
                        </>
                      )}
                    </Popover>
                  ))}

                  {navigation.pages.map((page) => (
                    <a
                      key={page.name}
                      href={page.href}
                      className=""flex items-center text-sm font-medium text-gray-700 hover:text-gray-800""
                    >
                      {page.name}
                    </a>
                  ))}
                </div>
              </Popover.Group>

              <div className=""ml-auto flex items-center"">
                {/* <div className=""hidden lg:flex lg:flex-1 lg:items-center lg:justify-end lg:space-x-6"">
                  <a href=""#"" className=""text-sm font-medium text-gray-700 hover:text-gray-800"">
                    Sign in
                  </a>
                  <span className=""h-6 w-px bg-gray-200"" aria-hidden=""true"" />
                  <a href=""#"" className=""text-sm font-medium text-gray-700 hover:text-gray-800"">
                    Create account
                  </a>
                </div> */}

                <div className=""hidden lg:ml-8 lg:flex"">
                  <a href=""#"" className=""flex items-center text-gray-700 hover:text-gray-800"">
                    <img
                      src=""https://tailwindui.com/img/flags/flag-canada.svg""
                      alt=""""
                      className=""block h-auto w-5 flex-shrink-0""
                    />
                    <span className=""ml-3 block text-sm font-medium"">CAD</span>
                    <span className=""sr-only"">, change currency</span>
                  </a>
                </div>

                {/* Search */}
                <div className=""flex lg:ml-6"">
                  <a href=""#"" className=""p-2 text-gray-400 hover:text-gray-500"">
                    <span className=""sr-only"">Search</span>
                    <MagnifyingGlassIcon className=""h-6 w-6"" aria-hidden=""true"" />
                  </a>
                </div>

                {/* Cart */}
                <div className=""ml-4 flow-root lg:ml-6"">
                  <a href=""#"" className=""group -m-2 flex items-center p-2"">
                    <ShoppingBagIcon
                      className=""h-6 w-6 flex-shrink-0 text-gray-400 group-hover:text-gray-500""
                      aria-hidden=""true""
                    />
                    <span className=""ml-2 text-sm font-medium text-gray-700 group-hover:text-gray-800"">0</span>
                    <span className=""sr-only"">items in cart, view bag</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </nav>
      </header>
    </div>
  )
}
"
bWF0Lnc0,Orginal Image Features CSS,TheiPhoneFan,CSS,Tuesday 2nd of April 2024 05:53:27 PM CDT,"/* Created by TheiPhoneFan on 2024-03-28 */
/* Theme 6.0.3 2023-2024 */
/* Begin Slideshow CSS */
.slideshow-container {
    max-width: 500px;
    position: relative;
    margin: auto;
}

.slideshow-container .slideshow-img {
    display: none;
    max-width: 100%;
    height: auto;
}

.slideshow-img img {
    border-radius: 16px;
    max-width: 100%;
}

.prev,
.next {
    cursor: pointer;
    position: absolute;
    top: 50%;
    width: auto;
    margin-top: -22px;
    padding: 16px;
    color: white;
    font-weight: bold;
    font-size: 18px;
    transition: 0.6s ease;
    border-radius: 0 3px 3px 0;
}

.prev {
    left: 0;
}

.next {
    right: 0;
}

.previews-container {
    display: flex;
    justify-content: center;
    margin-top: 10px;
}

.preview-img {
    width: 85px;
    height: auto;
    margin: 0 5px;
    cursor: pointer;
    border-radius: 12px;
}

.active-preview {
    border: 2px solid #6495ED;
}
figcaption {
    text-align: center;
}
/* End Slideshow CSS */

/* Begin Expandable Image CSS */
.image-gallery {
    /* The Gallery That Holds The Images */
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
}

.gallery-image {
    /* A pointer cursor will display when you hover over the image */
    cursor: pointer;
}

.modal {
    /* The fullscreen popup that shows an expanded view of the image */
    display: none;
    position: fixed;
    padding-top: 50px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.9);
}

.modal-content {
    /* The content inside of the .modal */
    display: block;
    margin: auto;
}

.close {
    /* The close button (x) that can be clicked to close the .modal */
    color: white;
    font-size: 40px;
    position: absolute;
    top: 10px;
    right: 25px;
    cursor: pointer;
}

#modalImage {
    /* The image inside the .image-container */
    max-width: 100%;
    width: 450px;
}
/* End Expandable Image CSS */

/* Begin Image Gallery CSS */
div.gallery {
    border: 1px solid #ccc;
    border-radius: 16px;
}

div.gallery:hover {
    border: 1px solid #777;
}

div.gallery img {
    width: 100%;
    height: auto;
    border-radius: 16px 16px 0px 0px;
}

div.desc {
    padding: 15px;
    text-align: center;
}

.desc p {
    margin: 0px;
}

* {
    box-sizing: border-box;
}

.responsive {
    padding: 0 6px;
    margin-top: 10px;
    margin-bottom: 10px;
    float: left;
    width: 24.99999%;
}

@media only screen and (max-width: 700px) {
    .responsive {
        width: 49.99999%;
        margin: 6px 0;
    }
}

@media only screen and (max-width: 500px) {
    .responsive {
        width: 100%;
    }
}

.clearfix:after {
    content: """";
    display: table;
    clear: both;
}

.image-gallery {
    /* The Gallery That Holds The Images */
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
}

.gallery-image {
    /* A pointer cursor will display when you hover over the image */
    cursor: pointer;
}
/* End Image Gallery CSS */"
zGwERKx2,CC Miningscript by chatgpt,ecco7777,Lua,Tuesday 2nd of April 2024 05:48:40 PM CDT,"-- Funktion zum Zeichnen des UI
local function drawUI()
    term.clear()
    term.setCursorPos(1,1)
    print(""Willkommen zum Strip Mine Schacht Programm"")
    print(""Bitte gib die folgenden Informationen ein:"")
    print("""")

    -- Benutzereingabe für die Höhe des Schachts
    write(""Höhe des Schachts: "")
    local height = tonumber(read())

    -- Benutzereingabe für die Länge des Schachts
    write(""Länge des Schachts: "")
    local length = tonumber(read())

    -- Benutzereingabe für die Anzahl der Schächte
    write(""Anzahl der Schächte: "")
    local numMines = tonumber(read())

    -- Benutzereingabe für die Richtung der Schächte (links, rechts oder beides)
    write(""Richtung der Schächte (links/rechts/beides): "")
    local direction = read()

    return height, length, numMines, direction
end

-- Funktion zum Graben eines Schachts
local function digMine(height, length, direction)
    -- Schachtgraben
    for i = 1, height do
        for j = 1, length do
            turtle.dig()
            turtle.forward()
        end
        -- Richtungswechsel (falls beidseitig)
        if direction == ""beides"" then
            if i % 2 == 0 then
                turtle.turnRight()
                turtle.dig()
                turtle.forward()
                turtle.turnRight()
            else
                turtle.turnLeft()
                turtle.dig()
                turtle.forward()
                turtle.turnLeft()
            end
        end
        -- Zurück zur Ausgangsposition
        if direction == ""links"" then
            turtle.turnLeft()
            for k = 1, length do
                turtle.forward()
            end
            turtle.turnRight()
        elseif direction == ""rechts"" then
            turtle.turnRight()
            for k = 1, length do
                turtle.forward()
            end
            turtle.turnLeft()
        end
    end
end

-- Hauptprogramm
local function main()
    local height, length, numMines, direction = drawUI()
    print(""Grabing Mines..."")

    -- Schächte graben
    for i = 1, numMines do
        digMine(height, length, direction)
        -- Zurück zur Ausgangsposition
        if i < numMines then
            turtle.turnLeft()
            for j = 1, length do
                turtle.forward()
            end
            turtle.turnRight()
        end
    end

    print(""Arbeit erledigt!"")
end

-- Hauptprogramm ausführen
main()
"
BVRfYja8,Untitled,yasi04,Python,Tuesday 2nd of April 2024 05:26:02 PM CDT,"import disnake
import sqlite3
from disnake.ext import commands


bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('main.db')
c = conn.cursor()


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")

    c.execute(""""""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        score BIGINT,
        wins INTEGER,
        loses INTEGER
    )"""""")

    conn.commit()

    for guild in bot.guilds:
        for member in guild.members:
            if c.execute(f""SELECT name FROM users WHERE name = '{member}'"").fetchone() is None:
                c.execute(f""INSERT INTO users VALUES ('{member}', 0, 0, 0)"")
            else:
                pass
    c.execute

    conn.commit()
    print('client connected')


@bot.slash_command(name='счетчик', description='Добавить победу/поражение')
async def addwinlose(ctx, user: disnake.User, score: int, winlose: str = commands.Param(choices=['Победа', 'Поражение'])):
    allowed_role = ctx.guild.get_role(""1224836480531169474"")
    if allowed_role in ctx.author.roles or 1 == 1:
        if winlose == ""Победа"":
            c.execute(""UPDATE users SET wins=wins+1, score=score+? WHERE name=?"", (score, f'{user}'))
        else:
            c.execute(""UPDATE users SET loses=loses+1, score=score+? WHERE name=?"", (score, f'{user}'))
        await ctx.send('Готово')
    else:
        await ctx.send(""У вас недостаточно прав для выполнения этой команды."")
    conn.commit()


@bot.slash_command(name='инфа', description='Вывести информацию по юзеру')
async def addwinlose(ctx, user: disnake.User):
    allowed_role = ctx.guild.get_role(""1224836480531169474"")
    if allowed_role in ctx.author.roles or 1 == 1:
        c.execute(""SELECT wins, loses, score FROM users WHERE name=?"", (f'{user}',))
        wins, loses, score = c.fetchone()

        if wins == 0:
            winrate = 0
        elif loses == 0:
            winrate = 100
        else:
            modifier = 1 + score / wins
            winrate = ((wins * modifier) / (wins / loses)) * 100

        embed = disnake.Embed(
            title=f""Информация по {user}"",
            description=f""Баллов: {score}\nПобед: {wins}\nПоражений: {loses}\nПроцент побед: {winrate}%"",
            color=0x00ff00
        )
        await ctx.send(embed=embed)
    else:
        await ctx.send(""У вас недостаточно прав для выполнения этой команды."")
    conn.commit()



bot.run('MTIyNDgzNjA4Mzk0NzQwOTQ1OQ.GjfTEd._RIT41txWEEv-HN_6IisXRf67bJWRXaOhHjFfY')
"
VwW2fr5Z,DSFSS,gadungw71,PHP,Tuesday 2nd of April 2024 05:05:06 PM CDT,"https://github.com/Exhuma-2024-4K-HD-KOREA
https://github.com/Exhuma-2024-FULL-HD1080P
https://github.com/phim-Exhuma-Qu-t-M-Trung-Ma-2024-FULL-i
https://github.com/phim-Godzilla-x-Kong-D-Ch-M-i-2024-i
https://github.com/Xem-phim-Kung-Fu-Panda-4-2024-FULL-HD-i
https://www.artstation.com/artwork/aolgA9
https://www.artstation.com/kungfupanda42024fullhdvietsub2/profile
https://www.artstation.com/godzillaxkong22024fullhdvietsub2/profile
https://www.artstation.com/artwork/Dvedno
https://www.artstation.com/artwork/9Eq1eq
https://www.artstation.com/user-54514211/profile
https://www.artstation.com/artwork/390v12
https://www.artstation.com/exhumakoreanhd2/profile
https://www.artstation.com/artwork/n0KW24
https://www.artstation.com/koreaexhuma2024hd-4k/profile
https://wandering.flarum.cloud/d/53007-sfdsetntnnt
https://hiuderyy.hashnode.dev/dsfsebtmt
https://click4r.com/posts/g/16167001/fsertbdtny
https://medium.com/@derawijaya421/xemphim2024index-f8b67b8bcdf7
https://open.firstory.me/story/cluiwncwl015y010vcv8a479h
https://forum.mush.com.br/topic/208875/exhuma-qu%E1%BA%ADt-m%E1%BB%99-tr%C3%B9ng-ma-ph%C3%A1t-tr%E1%BB%B1c-tuy%E1%BA%BFn-full-hd
https://www.onfeetnation.com/profiles/blogs/kung-fu-panda-4-c-c-b-phim-1080p
https://demo.hedgedoc.org/s/7r7T7Ajw_
https://rentry.co/mv8gvhtd
https://paste.ee/p/zc0VC
https://yamcode.com/dsfsegs-21
https://start.me/w/yOddDD
https://telegra.ph/SFSEGS-04-02
https://www.kooapp.com/koo/guest_P68S8O/0b46a26c-c6fd-4c6f-ac61-5af022d4d97b
https://www.kooapp.com/koo/guest_P68S8O/defe01a6-7f00-4a3b-a775-a8cbe86098c3
https://muckrack.com/stairth-erefore/bio
http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/721860/Default.aspx
https://www.fitlynk.com/1712094836F968690
"
PytDccd6,ADS102,sylzer,JSON,Tuesday 2nd of April 2024 04:36:26 PM CDT,"{
  ""appRedirect"": {
    ""status"": false,
    ""redirectURL"": """"
  },
  
  ""AdsController"": {
      
    ""BannerNetwork""         : ""promote"",
    ""InterstitialNetwork""   : ""admob"",
    ""RewardNetwork""         : ""admob"",
    ""NativeNetwork""         : ""promote"",
    
    ""InterstitialNetworkHome"" : ""facebook"",
    
    ""IntervalClick""           : 1,
    
    ""AdMob_Banner""           : ""ca-app-pub-3940256099942544/6300978111"",
    ""AdMob_InterstitialAd""   : ""ca-app-pub-3940256099942544/1033173712"",
    ""AdMob_InterstitialHome""  : ""ca-app-pub-3940256099942544/1033173712"",
    ""AdMob_RewardAd""         : ""ca-app-pub-3940256099942544/5224354917"",
    ""AdMob_Native""           : ""ca-app-pub-3940256099942544/2247696110"",
    
    ""Facebook_Banner""         : ""692961278482629_692963411815749"",
    ""Facebook_InterstitialAd"" : ""692961278482629_692963491815741"",
    ""Facebook_InterstitialHome"" : ""692961278482629_692963491815741"",
    ""Facebook_Native""         : ""692961278482629_857100538735368"",
    ""Facebook_RewardAd""       : ""692961278482629_857106118734810"",
    
    ""Applovin_Banner""          : ""a5f235ba1320fb35"",
    ""Applovin_InterstitialAd""  : ""d5a67a7b679c9a38"",
    ""Applovin_InterstitialHome"": ""d5a67a7b679c9a38"",
    ""Applovin_Native""          : ""76af75d288a7ada9"",
    ""Applovin_RewardAd""        : ""76af75d288a7ada9"",

    ""Unity_GameID""             : ""4076527"",
    ""Unity_Banner""             : ""BannerAd"",
    ""Unity_InterstitialAd""     : ""InterstitialAd"",
    ""Unity_InterstitialAdHome"" : ""InterstitialAd"",
    ""Unity_RewardAd""           : ""rewardedVideo"",
    
    ""IronSourceKey""            : ""1197d7c85"",
    
    ""PromoteURL""              : ""https://raw.githubusercontent.com/saidmotya/GFX-AdPromote/master/ScreenShot/MyPromote.json"",
    
    ""PrivacyUrl""              : ""https://sites.google.com/view/essota-policy"",
    ""OnesignalKey""            : """",
    ""DeveloperName""           : ""VOODOO""
  },
  
  
  ""Wallpaper"": [
    {
      ""category"" : ""Fortnite"",
      ""preview""  : ""https://wallpapercave.com/wp/wp3710949.jpg""
    },
    {
      ""category"" : ""BattleRoyale"",
      ""preview""  : ""https://wallpapercave.com/wp/wp3710924.png""
    },
    {
      ""category"" : ""CoolFortnite"",
      ""preview""  : ""https://wallpapercave.com/wp/wp3710921.jpg""
    }
  ],



  ""Fortnite"": [
   {
        ""image"": ""https://wallpapercave.com//wp/wp2441704.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441713.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2342818.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441721.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441724.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441731.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441734.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441739.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441741.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2689081.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3744613.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3149423.jpg"",
        ""premium"": false
    }
  ],
  ""BattleRoyale"": [
    {
        ""image"": ""https://wallpapercave.com//wp/wp3726848.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441607.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3896976.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3726852.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3949070.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3962576.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973658.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973659.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973661.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2547593.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973664.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2231515.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3538797.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3950731.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973670.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2682233.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2547618.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973673.jpg"",
        ""premium"": false
    }
  ],
   ""CoolFortnite"": [
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973674.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441668.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973676.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973679.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3973684.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3726869.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3948964.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3777801.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2231510.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp4826760.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp5271752.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp5573024.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp4770208.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp5573026.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp3896976.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp4770217.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp5211880.jpg"",
        ""premium"": false
    }
  ]
 
}"
08QskwQy,ADS101,sylzer,JSON,Tuesday 2nd of April 2024 04:35:54 PM CDT,"{
  ""appRedirect"": {
    ""status"": false,
    ""redirectURL"": """"
  },
  
  ""AdsController"": {
      
    ""BannerNetwork""         : ""promote"",
    ""InterstitialNetwork""   : ""admob"",
    ""RewardNetwork""         : ""admob"",
    ""NativeNetwork""         : ""promote"",
    
    ""InterstitialNetworkHome"" : ""facebook"",
    
    ""IntervalClick""           : 1,
    
    ""AdMob_Banner""           : ""ca-app-pub-3940256099942544/6300978111"",
    ""AdMob_InterstitialAd""   : ""ca-app-pub-3940256099942544/1033173712"",
    ""AdMob_InterstitialHome""  : ""ca-app-pub-3940256099942544/1033173712"",
    ""AdMob_RewardAd""         : ""ca-app-pub-3940256099942544/5224354917"",
    ""AdMob_Native""           : ""ca-app-pub-3940256099942544/2247696110"",
    
    ""Facebook_Banner""         : ""692961278482629_692963411815749"",
    ""Facebook_InterstitialAd"" : ""692961278482629_692963491815741"",
    ""Facebook_InterstitialHome"" : ""692961278482629_692963491815741"",
    ""Facebook_Native""         : ""692961278482629_857100538735368"",
    ""Facebook_RewardAd""       : ""692961278482629_857106118734810"",
    
    ""Applovin_Banner""          : ""a5f235ba1320fb35"",
    ""Applovin_InterstitialAd""  : ""d5a67a7b679c9a38"",
    ""Applovin_InterstitialHome"": ""d5a67a7b679c9a38"",
    ""Applovin_Native""          : ""76af75d288a7ada9"",
    ""Applovin_RewardAd""        : ""76af75d288a7ada9"",

    ""Unity_GameID""             : ""4076527"",
    ""Unity_Banner""             : ""BannerAd"",
    ""Unity_InterstitialAd""     : ""InterstitialAd"",
    ""Unity_InterstitialAdHome"" : ""InterstitialAd"",
    ""Unity_RewardAd""           : ""rewardedVideo"",
    
    ""IronSourceKey""            : ""1197d7c85"",
    
    ""PromoteURL""              : ""https://raw.githubusercontent.com/saidmotya/GFX-AdPromote/master/ScreenShot/MyPromote.json"",
    
    ""PrivacyUrl""              : ""https://sites.google.com/view/essota-policy"",
    ""OnesignalKey""            : """",
    ""DeveloperName""           : ""VOODOO""
  },
  
  
  ""Wallpaper"": [
    {
      ""category"" : ""Fortnite"",
      ""preview""  : ""https://images5.alphacoders.com/134/1346544.png""
    },
    {
      ""category"" : ""FortniteOG"",
      ""preview""  : ""https://wallpapercave.com/wp/wp2441591.jpg""
    },
    {
      ""category"" : ""Art"",
      ""preview""  : ""https://wallpapercave.com/wp/wp5247269.jpg""
    }
   
  ],



  ""Fortnite"": [
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441591.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441594.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441597.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441604.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2231510.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441607.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441608.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2366069.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2366068.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441611.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2231431.jpg"",
        ""premium"": false
    }
  ],
   ""FortniteOG"": [
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441613.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441618.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441634.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441639.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2399412.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441644.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441648.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2342931.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441654.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2399422.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441658.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441659.jpg"",
        ""premium"": false
    }
  ],
  ""Art"": [
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441661.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2231427.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2231420.png"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441665.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441666.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441668.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2399499.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441671.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441675.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441678.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441680.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2441693.jpg"",
        ""premium"": false
    },
    {
        ""image"": ""https://wallpapercave.com//wp/wp2399515.png"",
        ""premium"": false
    }
  ]
  
}"
SVHaCkMY,Untitled,MNNM2021,Python,Tuesday 2nd of April 2024 04:05:05 PM CDT,"from project.truck_driver import TruckDriver

from unittest import TestCase, main


class TestTruckDriver(TestCase):
    def setUp(self) -> None:
        self.truck_driver = TruckDriver(""Pesho"", 20.0)

    def test_init(self):
        self.assertEqual(self.truck_driver.name, ""Pesho"")
        self.assertEqual(self.truck_driver.money_per_mile, 20.0)
        self.assertEqual(self.truck_driver.available_cargos, {})
        self.assertEqual(self.truck_driver.earned_money, 0.0)
        self.assertEqual(self.truck_driver.miles, 0)

    def test_earn_money_value_error(self):
        with self.assertRaises(ValueError) as ve:
            self.truck_driver.earned_money = -1.0
        self.assertEqual(""Pesho went bankrupt."", str(ve.exception))

    def test_earn_money_value_no_error(self):
        earn_money = 100.0
        self.truck_driver.earned_money = earn_money
        self.assertEqual(self.truck_driver.earned_money, earn_money)

    def test_bankrupt(self):
        self.truck_driver.money_per_mile = 0.01
        self.truck_driver.add_cargo_offer(""Novi Pazar"", 2000)

        with self.assertRaises(ValueError) as ve:
            self.truck_driver.drive_best_cargo_offer()

        self.assertEqual(str(ve.exception), f""{self.truck_driver.name} went bankrupt."")

    def test_add_cargo_offer_if_cargo_location_not_in_available_cargos(self):
        cargo_location = ""Sofia""
        cargo_miles = 100

        result = self.truck_driver.add_cargo_offer(cargo_location, cargo_miles)

        self.assertEqual(self.truck_driver.available_cargos[cargo_location], cargo_miles)

        expected_message = f""Cargo for {cargo_miles} to {cargo_location} was added as an offer.""
        self.assertEqual(result, expected_message)

    def test_add_cargo_offer_if_cargo_location_is_in_available_cargos_already(self):
        cargo_location = ""Sofia""
        cargo_miles = 100

        self.truck_driver.add_cargo_offer(cargo_location, cargo_miles)

        with self.assertRaises(Exception) as ex:
            self.truck_driver.add_cargo_offer(cargo_location, cargo_miles)

        self.assertEqual(""Cargo offer is already added."", str(ex.exception))

    def test_drive_best_cargo_offer_no_cargo_available(self):
        self.truck_driver.available_cargos = {}

        result = self.truck_driver.drive_best_cargo_offer()

        expected_message = ""There are no offers available.""
        self.assertEqual(result, expected_message)

    def test_drive_best_cargo_offer_with_available_cargo(self):
        self.truck_driver.available_cargos = {""Sofia"": 100, ""Plovdiv"": 200, ""Varna"": 150}

        result = self.truck_driver.drive_best_cargo_offer()

        expected_cargo_location = ""Plovdiv""
        expected_cargo_miles = 200
        expected_result = f""{self.truck_driver.name} is driving {expected_cargo_miles} to {expected_cargo_location}.""
        self.assertEqual(result, expected_result)

    def test_eat_deducts_money(self):
        self.truck_driver.earned_money = 50.0

        self.truck_driver.eat(250)

        expected_earned_money = 50.0 - 20.0
        self.assertEqual(self.truck_driver.earned_money, expected_earned_money)

    def test_eat_does_not_deduct_money(self):
        self.truck_driver.earned_money = 10.0

        self.truck_driver.eat(200)

        self.assertEqual(self.truck_driver.earned_money, 10.0)

    def test_sleep_deducts_money(self):
        self.truck_driver.earned_money = 100.0

        self.truck_driver.sleep(1000)

        expected_earned_money = 100.0 - 45.0
        self.assertEqual(self.truck_driver.earned_money, expected_earned_money)

    def test_sleep_does_not_deduct_money(self):
        self.truck_driver.earned_money = 40.0

        self.truck_driver.sleep(2001)

        self.assertEqual(self.truck_driver.earned_money, 40.0)

    def test_pump_gas_deducts_money(self):
        self.truck_driver.earned_money = 1000.0

        self.truck_driver.pump_gas(1500)

        expected_earned_money = 1000.0 - 500.0
        self.assertEqual(self.truck_driver.earned_money, expected_earned_money)

    def test_pump_gas_does_not_deduct_money(self):
        self.truck_driver.earned_money = 400.0

        self.truck_driver.pump_gas(2001)

        self.assertEqual(self.truck_driver.earned_money, 400.0)

    def test_repair_truck_deduct_money(self):
        self.truck_driver.earned_money = 10000.0

        self.truck_driver.repair_truck(20000)
        deducted_earned_money = 10000.0 - 7500.0

        self.assertEqual(deducted_earned_money, self.truck_driver.earned_money)

    def test_repair_truck_does_not_deduct_money(self):
        self.truck_driver.earned_money = 6000.0

        self.truck_driver.repair_truck(18500)

        self.assertEqual(self.truck_driver.earned_money, 6000.0)

    def test_check_for_activities(self):
        self.truck_driver.earned_money = 20000.0

        self.truck_driver.check_for_activities(250)

        expected_final_earned_money = 20000.0 - 20.0 - 0.0 - 0.0

        self.assertEqual(self.truck_driver.earned_money, expected_final_earned_money)

    def test_repr(self):
        expected_repr = ""Pesho has 0 miles behind his back.""
        self.assertEqual(repr(self.truck_driver), expected_repr)


if __name__ == ""__main__"":
    main()
"
ndtTLfdG,command line arrow key detection without termios.h,mdgaziur001,C,Tuesday 2nd of April 2024 03:57:31 PM CDT,"#include <stdlib.h>
#include <string.h>
#include <sys/ioctl.h>
#include <unistd.h>

#define stdin 0
#define stdout 1
#define __KERNEL_NCCS 19
#define ICANON 0000002
#define ECHO   0000010

typedef unsigned int tcflag_t;
typedef unsigned char cc_t;

int printf(const char*, ...);

struct linux_termios {
  tcflag_t c_iflag;         /* Input flags */
  tcflag_t c_oflag;         /* Output flags */
  tcflag_t c_cflag;         /* Control mode flags */
  tcflag_t c_lflag;         /* Local mode flags  */
  cc_t c_line;              /* Line discipline */
  cc_t c_cc[__KERNEL_NCCS]; /* Control characters */
};

struct linux_termios termios_orig;

void backup_termios() {
  struct linux_termios l_termios;
  
  ioctl(stdin, TCGETS, &l_termios);
  
  memcpy(&termios_orig, &l_termios, sizeof(struct linux_termios));
  memcpy(&termios_orig.c_cc[0], &l_termios.c_cc[0], __KERNEL_NCCS);
}

struct linux_termios get_termios() {
  struct linux_termios l_termios; 
  ioctl(stdin, TCGETS, &l_termios);

  return l_termios;
}

void enable_raw_mode() { 
  struct linux_termios termios = get_termios();
  termios.c_lflag &= ~(ECHO | ICANON);
  ioctl(stdin, TCSETSF, &termios);
}

void revert_termios() {
  ioctl(stdin, TCSETSF, &termios_orig);
}

int main() {
  backup_termios();
  enable_raw_mode();
  atexit(revert_termios);

  char buf;
  while(read(stdin, &buf, 1) == 1 && buf != 'q') {
    if (buf == 27) {
      // Arrow key pressed, skip '['
      read(stdin, &buf, 1);

      read(stdin, &buf, 1);
      switch (buf) {
        case 'A': {
          write(stdout, ""U"", 1);
          break;
        }
        case 'B': {
          write(stdout, ""D"", 1);
          break;
        }
        case 'C': {
          write(stdout, ""L"", 1);
          break;
        }
        case 'D': {
          write(stdout, ""R"", 1);
          break;
        }
        default: write(stdout, &buf, 1);
      }
    }
  }

  return 0;
}"
QTdaUBTq,Untitled,MNNM2021,Python,Tuesday 2nd of April 2024 03:57:22 PM CDT,"from project.truck_driver import TruckDriver

from unittest import TestCase, main


class TestTruckDriver(TestCase):
    def setUp(self) -> None:
        self.truck_driver = TruckDriver(""Pesho"", 20.0)

    def test_init(self):
        self.assertEqual(self.truck_driver.name, ""Pesho"")
        self.assertEqual(self.truck_driver.money_per_mile, 20.0)
        self.assertEqual(self.truck_driver.available_cargos, {})
        self.assertEqual(self.truck_driver.earned_money, 0.0)
        self.assertEqual(self.truck_driver.miles, 0)

    def test_earn_money_value_error(self):
        with self.assertRaises(ValueError) as ve:
            self.truck_driver.earned_money = -1
        self.assertEqual(""Pesho went bankrupt."", str(ve.exception))

    def test_earn_money_value_no_error(self):
        earn_money = 100.0
        self.truck_driver.earned_money = earn_money
        self.assertEqual(self.truck_driver.earned_money, earn_money)

    def test_bankrupt(self):
        self.truck_driver.money_per_mile = 0.01
        self.truck_driver.add_cargo_offer(""Novi Pazar"", 2000)

        with self.assertRaises(ValueError) as ve:
            self.truck_driver.drive_best_cargo_offer()

        self.assertEqual(str(ve.exception), f""{self.truck_driver.name} went bankrupt."")

    def test_add_cargo_offer_if_cargo_location_not_in_available_cargos(self):
        cargo_location = ""Sofia""
        cargo_miles = 100

        result = self.truck_driver.add_cargo_offer(cargo_location, cargo_miles)

        self.assertEqual(self.truck_driver.available_cargos[cargo_location], cargo_miles)

        expected_message = f""Cargo for {cargo_miles} to {cargo_location} was added as an offer.""
        self.assertEqual(result, expected_message)

    def test_add_cargo_offer_if_cargo_location_is_in_available_cargos_already(self):
        cargo_location = ""Sofia""
        cargo_miles = 100

        self.truck_driver.add_cargo_offer(cargo_location, cargo_miles)

        with self.assertRaises(Exception) as ex:
            self.truck_driver.add_cargo_offer(cargo_location, cargo_miles)

        self.assertEqual(""Cargo offer is already added."", str(ex.exception))

    def test_drive_best_cargo_offer_no_cargo_available(self):
        self.truck_driver.available_cargos = {}

        result = self.truck_driver.drive_best_cargo_offer()

        expected_message = ""There are no offers available.""
        self.assertEqual(result, expected_message)

    def test_drive_best_cargo_offer_with_available_cargo(self):
        self.truck_driver.available_cargos = {""Sofia"": 100, ""Plovdiv"": 200, ""Varna"": 150}

        result = self.truck_driver.drive_best_cargo_offer()

        expected_cargo_location = ""Plovdiv""
        expected_cargo_miles = 200
        expected_result = f""{self.truck_driver.name} is driving {expected_cargo_miles} to {expected_cargo_location}.""
        self.assertEqual(result, expected_result)

    def test_eat_deducts_money(self):
        self.truck_driver.earned_money = 50.0

        self.truck_driver.eat(250)

        expected_earned_money = 50 - 20
        self.assertEqual(self.truck_driver.earned_money, expected_earned_money)

    def test_eat_does_not_deduct_money(self):
        self.truck_driver.earned_money = 10

        self.truck_driver.eat(200)

        self.assertEqual(self.truck_driver.earned_money, 10)

    def test_sleep_deducts_money(self):
        self.truck_driver.earned_money = 100

        self.truck_driver.sleep(1000)

        expected_earned_money = 100 - 45
        self.assertEqual(self.truck_driver.earned_money, expected_earned_money)

    def test_sleep_does_not_deduct_money(self):
        self.truck_driver.earned_money = 40

        self.truck_driver.sleep(2001)

        self.assertEqual(self.truck_driver.earned_money, 40)

    def test_pump_gas_deducts_money(self):
        self.truck_driver.earned_money = 1000

        self.truck_driver.pump_gas(1500)

        expected_earned_money = 1000 - 500
        self.assertEqual(self.truck_driver.earned_money, expected_earned_money)

    def test_pump_gas_does_not_deduct_money(self):
        self.truck_driver.earned_money = 400

        self.truck_driver.pump_gas(2001)

        self.assertEqual(self.truck_driver.earned_money, 400)

    def test_repair_truck_deduct_money(self):
        self.truck_driver.earned_money = 10000

        self.truck_driver.repair_truck(20000)
        deducted_earned_money = 10000 - 7500

        self.assertEqual(deducted_earned_money, self.truck_driver.earned_money)

    def test_repair_truck_does_not_deduct_money(self):
        self.truck_driver.earned_money = 6000

        self.truck_driver.repair_truck(18500)

        self.assertEqual(self.truck_driver.earned_money, 6000)

    def test_check_for_activities(self):
        self.truck_driver.earned_money = 20000

        self.truck_driver.check_for_activities(250)

        expected_final_earned_money = 20000 - 20 - 0 - 0

        self.assertEqual(self.truck_driver.earned_money, expected_final_earned_money)

    def test_repr(self):
        expected_repr = ""Pesho has 0 miles behind his back.""
        self.assertEqual(repr(self.truck_driver), expected_repr)


if __name__ == ""__main__"":
    main()
"
XF05NcEJ,RequestException: error with request,basedcount_bot,Python,Tuesday 2nd of April 2024 03:34:53 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 123, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
MhFEzUQN,simple storage network,Voxel3042,Lua,Tuesday 2nd of April 2024 03:31:33 PM CDT,"local chest_list = { peripheral.find(""minecraft:chest"") }
local chest_main = """"
local item_list = {}
local ssn = {}

local function index_item(item, slot, chest)
    if item_list[item.name] == nil then item_list[item.name] = {} end
    local list_ = item_list[item.name]
    list_[#list_+1] = {item=item, slot=slot, chest=chest}
end

function ssn.init(chest_name)
    chest_main = chest_name
    for index, chest in pairs(chest_list) do
        if peripheral.getName(chest) == chest_main then
            table.remove(chest_list, index)
            chest_main = chest
        else
            for slot, item in pairs(chest.list()) do
                index_item(item, slot, chest)
            end
        end
    end
end

function ssn.sum(item_id)
    if item_list[item_id] == nil then return 0 end
    local sum = 0
    
    for index, info in pairs(item_list[item_id]) do
        sum = sum + info.item.count
    end
    return sum
end

function ssn.pull(item_id)
    if item_list[item_id] == nil then return false end
    if #item_list[item_id] == 0 then return false end
    local item = item_list[item_id]
    item[#item].chest.pushItems( peripheral.getName(chest_main), item[#item].slot)
    table.remove(item #item)
end

function ssn.free_capacity(chest)
    local cap = 0
    for i = 1, chest.size() do
        if chest.getItemDetail(i) == nil then
            cap = cap + 1
        end
    end
    return cap
end

function ssn.exist(item_id)
    return item_list[item_id] ~= nil
end

return ssn"
zvLMbvuw,Love Naggers 3,ktvchains,Perl,Tuesday 2nd of April 2024 03:23:28 PM CDT,"# EN, 1080p
# recently bb have made 720/1080p quality a premium feature, please click on the [⋮] button below the video > ""Feedback"" and submit feedback to them to reconsider this
 
# E217 240312
watch: https://www.bilibili.tv/en/video/4790800115047936
[!ads] watch/dl: https://filemoon.sx/d/yd0i6zkcuo4z"
6zhNdC9E,Untitled,iconoclasthero,Bash,Tuesday 2nd of April 2024 03:16:17 PM CDT,"$ systemd-analyze cat-config systemd/logind.conf
# /etc/systemd/logind.conf
#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it under the
#  terms of the GNU Lesser General Public License as published by the Free
#  Software Foundation; either version 2.1 of the License, or (at your option)
#  any later version.
#
# Entries in this file show the compile time defaults. Local configuration
# should be created by either modifying this file, or by creating ""drop-ins"" in
# the logind.conf.d/ subdirectory. The latter is generally recommended.
# Defaults can be restored by simply deleting this file and all drop-ins.
#
# Use 'systemd-analyze cat-config systemd/logind.conf' to display the full config.
#
# See logind.conf(5) for details.

[Login]
#NAutoVTs=6
#ReserveVT=6
#KillUserProcesses=no
#KillOnlyUsers=
#KillExcludeUsers=root
#InhibitDelayMaxSec=5
#UserStopDelaySec=10
#HandlePowerKey=poweroff
#HandleSuspendKey=suspend
#HandleHibernateKey=hibernate
#HandleLidSwitch=suspend
#HandleLidSwitchExternalPower=suspend
#HandleLidSwitchDocked=ignore
#HandleRebootKey=reboot
#PowerKeyIgnoreInhibited=no
#SuspendKeyIgnoreInhibited=no
#HibernateKeyIgnoreInhibited=no
#LidSwitchIgnoreInhibited=yes
#RebootKeyIgnoreInhibited=no
#HoldoffTimeoutSec=30s
#IdleAction=ignore
#IdleActionSec=30min
#RuntimeDirectorySize=10%
#RuntimeDirectoryInodesMax=400k
#RemoveIPC=yes
#InhibitorsMax=8192
#SessionsMax=8192

# /usr/lib/systemd/logind.conf.d/unattended-upgrades-logind-maxdelay.conf
[Login]
# delay
InhibitDelayMaxSec=30
"
nDZ95Jve,Untitled,lluanbs,CSS,Tuesday 2nd of April 2024 02:17:03 PM CDT,"/* 
 * Yes, this codebase is near unreadable. Why?
 * I designed this mainly as a test to see how viable avoidance of straight out class selectors would be.
 * The codebase was never designed to be pretty, it was designed to require as little maintenance as possible.
 */

 @import url('https://fonts.googleapis.com/css2?family=Karla:wght@400;500;600;700&display=swap');
 @import url('https://mwittrien.github.io/BetterDiscordAddons/Themes/BlurpleRecolor/BlurpleRecolor.css');
 @import url('https://discord-custom-covers.github.io/usrbg/dist/usrbg.css');
 
 button {
     --accentcolor: var(--accent-alt);
 }
 
 
 /* Root Variables */
 
 :root {
     --font-primary: 'Karla', sans-serif;
     --font-display: var(--font-primary) !important;
     /* Dark Matter Variables */
     --avatar-size: 32px;
     --background-image: url('https://i.imgur.com/7SbtKvw.png');
     --home-image: url('https://i.imgur.com/233d55Y.gif');
     --accent: 37, 172, 232;
     --accent-alt: 29, 101, 134;
     --md-black: 0, 0, 0;
     --dm-white: 255, 255, 255;
     /* BlurpleRecolor */
     --accentcolor: var(--accent);
     --vaccentcolor-hover: rgb(var(--accent));
     --vaccentcolor-active: rgb(var(--accent));
 }
 
 :not(div[class*=""userProfile""][class*=""unThemed""]).theme-dark,
 :not(div[class*=""userProfile""]).theme-light,
 div[class*=""userProfile""][class*=""unThemed""].theme-light {
     /* Discord vars */
     --background-primary: var(--background-solid);
     --background-mobile-primary: var(--background-primary);
     --background-secondary: var(--background-solid);
     --background-mobile-secondary: var(--background-secondary);
     --background-secondary-alt: var(--background-solid);
     --background-tertiary: var(--background-solid);
     --background-floating: var(--background-solid);
     --background-secondary: var(--background-solid);
     --background-accent: var(--background-solid);
     --background-message-hover: rgba(var(--md-black), 0.4);
     --channeltextarea-background: transparent;
     --activity-card-background: rgba(var(--dm-white), 0.05);
     --deprecated-store-bg: transparent;
     --background-modifier-hover: rgba(var(--md-black), 0.3);
     --background-modifier-active: rgba(var(--md-black), 0.3);
     --background-modifier-selected: rgba(var(--md-black), 0.6);
     --elevation-low: inset 0 -1px 0 0 rgba(var(--md-black), 0.3);
     --channels-default: rgba(var(--dm-white), 0.3);
     --deprecated-quickswitcher-input-background: var(--background-solid);
     --header-primary: rgba(var(--dm-white), 1);
     --header-secondary: rgba(var(--dm-white), 0.6);
     --text-normal: rgba(var(--dm-white), 0.6);
     --text-muted: #8a8e94;
     --interactive-muted: rgba(var(--dm-white), 0.15);
     --interactive-normal: rgba(var(--dm-white), 0.5);
     --interactive-hover: rgba(var(--dm-white), 0.75);
     --interactive-active: rgba(var(--dm-white), 1);
     --deprecated-card-bg: rgba(var(--dm-white), 0.05);
     --text-link: rgba(var(--accent), 1);
     --focus-primary: rgba(var(--accent), 1);
     --modal-background: var(--background-solid);
     --modal-footer-background: var(--background-solid-darker);
 }
 
 ::selection {
     background-color: rgba(var(--accent-alt), 0.5);
 }
 
 
 /* Scrollbars */
 
 ::-webkit-scrollbar {
     width: 14px !important;
 }
 
  ::-webkit-scrollbar-thumb {
     border-radius: 8px !important;
     border: 3px solid transparent !important;
     background-color: rgba(var(--accent-alt), 1) !important;
 }
 
  ::-webkit-scrollbar-track {
     visibility: visible !important;
     border-radius: 8px !important;
     border: 3px solid transparent !important;
     background-color: rgba(0, 0, 0, 0.3) !important;
     background-clip: padding-box !important;
 }
 
 .none-2Eo-qx::-webkit-scrollbar {
     display: none !important;
 }
 
 
 /* Titlebar */
 
 div[class*=""typeWindows-""] {
     --background-modifier-hover: rgba(var(--dm-white), 0.05);
     --background-modifier-active: rgba(var(--dm-white), 0.075);
     height: 26px;
 }
 
 div[class*=""typeWindows-""]>div:first-child {
     display: none;
 }
 
 div[class*=""typeWindows-""]>div[role=""button""] {
     height: 30px;
     width: 36px;
 }
 
 div[class*=""typeWindows-""]::after {
     content: 'Discord';
     font-weight: 5000;
     line-height: 31px;
     color: var(--text-muted);
     font-size: 14px;
     position: absolute;
     padding: 0 12px;
     top: 0;
     left: 0;
     width: 100%;
     height: 30px;
     background: rgba(var(--md-black), 0.85);
     z-index: -1;
 }
 
 
 /* Guilds */
 
 nav[class*=""guilds-""] {
     background: transparent;
 }
 ul[data-list-id='guildsnav'] {
     --background-secondary: var(--background-solid);
         --background-primary: rgba(var(--dm-white), 0.1);
     margin-bottom: 70px;
     background-color: rgba(var(--md-black), 0.6);
     border-right: 1px solid rgba(var(--md-black), 0.2);
     box-shadow: inset -10px 0px 20px -10px rgba(var(--md-black), 0.3);
 }
 
 ul[data-list-id='guildsnav'] ::-webkit-scrollbar {
     display: none;
 }
 
 ul[data-list-id='guildsnav']>div[dir] {
     padding-top: 18px;
 }
 
 ul[data-list-id='guildsnav'] [class^=""pill-""],
 ul[data-list-id='guildsnav'] [class^=""pill-""]>div {
     height: 40px !important;
 }
 
 ul[data-list-id='guildsnav'] div[style*=""height: 56""],
 ul[id^=""folder-items-""] {
     height: auto !important;
 }
 
 ul[data-list-id='guildsnav'] [class^=""pill-""] span {
     width: 10px;
     margin-left: -5px;
     border-radius: 20px;
 }
 
 [data-list-id='guildsnav'] [class^=""pill-""] span[style^=""opacity: 1; height: 40""] {
     --header-primary: rgba(var(--accent), 1);
 }
 
 span[class^=""expandedFolderBackground-""] {
     --background-secondary: rgba(var(--md-black), 0.25);
     border-radius: 14px;
     width: 40px;
     left: 16px;
 }
 
 .wrapper-28eC3z,
 [data-list-id='guildsnav'] [data-dnd-name] > div,
 [data-list-id='guildsnav'] svg[width=""48""] {
     width: 40px;
     height: 40px;
 }
 
 div[data-list-item-id=""guildsnav___home""] {
     background: var(--home-image) top center/110% no-repeat;
 }
 
 div[class^=""unreadMentionsIndicatorBottom-""] {
     bottom: 70px;
 }
 
 #app-mount [data-list-item-id=""guildsnav___home""]>div {
     color: transparent;
     background-color: transparent;
 }
 
 div[data-list-item-id=""guildsnav___create-join-button""],
 div[data-list-item-id=""guildsnav___guild-discover-button""] {
     transition: 150ms ease;
     opacity: 0.5;
     background-color: var(--background-solid) !important;
     color: rgba(var(--dm-white), 0.3) !important;
     border: 1px dashed rgba(var(--dm-white), 0.3);
     border-radius: 50px;
 }
 
 div[data-list-item-id=""guildsnav___create-join-button""]:hover,
 div[data-list-item-id=""guildsnav___guild-discover-button""]:hover {
     opacity: 1;
 }
 
 
 /* Sidebar */
 
 .platform-win [class^=""sidebar-""] {
     border-radius: 0;
     background-color: transparent;
 }
 
 div[class^=""sidebar-""] nav,
 #private-channels {
     background: var(--background-secondary) !important;
     --background-tertiary: rgba(var(--md-black), 0.35);
 }
 
 div[class^=""sidebar-""]>nav>div[class^=""searchBar""] {
     height: 54px;
 }
 
 /* members wrapper */
 .container-2o3qEW {
     --background-secondary: rgba(var(--md-black), 0.4);
     --background-modifier-hover: rgba(var(--dm-white), 0.07);
     --background-modifier-active: var(--background-modifier-hover);
     --background-modifier-selected: rgba(var(--dm-white), 0.07);
     background: rgb(var(--md-black), 0.9);
 }
 
 div[data-list-id^=""members-""][class*=""scrollerBase-""] {
     background: transparent;
 }
 
 div[data-list-id^=""members-""] [class*=""placeholder""] {
     --backgorund-primary: var(--text-normal);
 }
 
 div[class^='nowPlayingColumn'] {
     --background-secondary: transparent;
     --background-primary: rgba(var(--md-black), 0.5);
     --background-modifier-hover: rgba(var(--dm-white), 0.075);
 }
 div[class^=""members-""] div[class^=""member-""] {
     background-color: transparent;
 }
 
 #channels div[class^=""unread-""] {
     --interactive-active: rgba(var(--accent), 1);
 }
 
 
 /* Sidebar Header */
 
 nav[aria-label]>div>header {
     display: flex;
     flex-direction: column;
     justify-content: center;
     height: 54px;
     --background-accent: rgba(var(--accent), 1);
     --background-modifier-hover: rgba(var(--md-black), 0.25);
 }
 
 
 /* Outer containers */
 
 body {
     background: var(--background-image) center/cover no-repeat;
 }
 
 #app-mount {
     background-color: transparent;
     --background-tertiary: transparent;
     --background-secondary: transparent;
 }
 
 #app-mount>div[class^=""appDevToolsWrapper-""] {
     --background-primary: transparent;
     --background-tertiary: transparent;
     --background-secondary: rgba(var(--md-black), 0.7);
     background-color: rgba(var(--md-black), 0.4);
 }
 div[class^=""notAppAsidePanel-""]>div[class^=""app-""]>div[class^=""app-""],
 div[class^=""app-""]>div[class^=""bg-""] {
     background-color: transparent;
 }
 div[class*=""baseLayer-""]>div[class^=""container-""] {
     background-color: rgb(var(--md-black), 0.4);
 }
 
 nav+div [class^='sidebar-'],
 nav+div[class^='base-'] {
     overflow: visible !important;
     position: relative;
     max-width: calc(100% - 72px);
 }
 
 nav+div[class^='base-'] > div[class^=""notice""] {
     border-radius: 0;
 }
 
 div[class^='base-']>div,
 section[class*=""themed-""] {
     --background-secondary: rgba(var(--md-black), 0.7);
     --background-tertiary: rgba(var(--dm-white), 0.05);
     --background-primary: rgba(var(--md-black), 0.8);
 }
 
 #app-mount>div:not([class^=""appDevToolsWrapper-""]),
 .autocomplete-1vrmpx {
     --background-primary: var(--background-solid);
     --background-secondary: var(--background-solid-dark);
     --background-secondary-alt: var(--background-solid-darker);
     --background-tertiary: var(--background-solid-darker);
 }
 
 
 /* Header */
 
 section[class*=""themed-""] {
     height: 54px;
     box-shadow: var(--elevation-low);
     background-color: rgb(var(--md-black), 0.925) !important;
     --background-secondary: rgba(var(--dm-white), 0.1);
 }
 
 section>div>a[href*=""support.discord.com""] {
     display: none;
 }
 
 section[class*=""themed-""]::before,
 section[class*=""themed-""] ::after {
     content: none;
 }
 
 section div[class^=""toolbar""]>div[role] {
     margin: 0 4px;
     transition: 150ms ease;
     display: flex;
     align-items: center;
     justify-content: center;
     border-radius: 3px;
     width: 28px;
     height: 28px;
 }
 
 section div[class^=""toolbar""]>div[role] svg {
     width: 22px;
 }
 
 section div[class^=""toolbar""]>div[role][class*=""selected-""] {
     background-color: rgba(var(--dm-white), 0.1);
 }
 
 
 /* Panels */
 
 div[class^='sidebar-']>section {
     --background-primary: rgba(var(--dm-white), 0.07);
     --background-secondary: rgba(var(--dm-white), 0.1);
     --background-secondary-alt: rgba(var(--md-black), 0.95);
     margin-bottom: 70px;
 }
 
 div[class^='sidebar-']>section>div:last-child {
     background-color: var(--background-secondary-alt);
     box-sizing: border-box;
     height: 70px;
     padding: 0 18px;
     width: calc(100% + 72px);
     position: absolute;
     left: -72px;
     bottom: 0;
 }
 div[class^=""sidebar-""]>section>div:last-child [class^=""avatarWrapper-""] {
     flex: 1;
 }
 
 
 /* Content */
 
 div[class^='chat'] {
     --background-floating: rgba(var(--md-black), 0.5);
     background: transparent;
 }
 
 div[class^=""container-""][id^=""chat-messages-""] {
     --background-modifier-hover: var(--background-solid-dark);
 }
 
 div[class^='chat'] main form {
     margin-top: 0;
 }
 
 div[class^='chat'] main form::before {
     content: none;
 }
 
 div[data-list-id=""chat-messages""] {
     --background-primary: transparent;
     --background-secondary: rgba(var(--dm-white), 0.05);
     --background-accent: rgba(var(--dm-white), 0.1);
 }
 
 div[class^=""channelTextArea-""] {
     --background-secondary: transparent;
     box-shadow: inset 0 0 0 2px rgba(var(--dm-white), 0.1);
     transition: 250ms ease;
     margin-bottom: 24px;
     margin-top: 12px;
     border-radius: 5px;
 }
 
 div[id^=""chat-messages-""]+div:not([id]):last-child {
     height: 8px;
 }
 
 div[id^=""chat-messages-""][class*=""cozy-""] {
     padding-left: calc(var(--avatar-size) * 2);
 }
 
 div[id^=""chat-messages-""] {
     margin-left: 8px;
     margin-right: 8px;
     border-radius: 4px;
 }
 
 div[id^=""chat-messages-""]>div[class^=""buttonContainer-""] {
     transform: scale(.85);
     top: 1px;
 }
 
 div[id^=""chat-messages-""] {
     --background-primary: rgba(var(--md-black), 0.5);
 }
 
 div[id^=""chat-messages-""]>div>[class^=""avatar-""] {
     margin-top: 6px;
     width: var(--avatar-size);
     height: var(--avatar-size);
 }
 
 div[id^=""chat-messages-""][class*=""cozy-""] div::before {
     --gutter: 13px;
 }
 
 .mention {
     transition: 150ms ease;
     color: rgba(var(--accent), 1) !important;
     background-color: rgba(var(--accent), 0.3);
     padding: 3px 5px;
     border-radius: 5px;
 }
 
 .mention:hover {
     background-color: rgba(var(--accent), 0.3) !important;
 }
 
 #app-mount .container-2cd8Mz {
     background: var(--background-primary);
 }
 
 div[class*=""barBase-""] {
     padding-bottom: 0;
     background-color: rgba(var(--accent-alt), 0.9);
 }
 
 
 /* Codeblocks */
 
 html pre {
     border-radius: 0;
     background: transparent;
     border-color: rgba(255, 255, 255, 0.1);
 }
 
 pre code.hljs {
     border: none;
     background-color: rgba(var(--dm-white), 0.1);
     color: rgba(var(--dm-white), 0.7);
     padding: 1em;
 }
 
 html code.inline,
 html code.inline {
     background: rgba(var(--dm-white), 0.1);
     color: rgba(var(--dm-white), 0.7);
     padding: 0.3em 0.6em;
     border-radius: 3px;
 }
 
 
 /* Settings */
 
 div[aria-label*=""_SETTINGS""],
 div[aria-label*=""_DEBUG""] {
     --background-primary: transparent;
     --background-secondary: rgba(var(--md-black), 0.7);
 }
 
 div[class^=""sidebarRegionScroller-""]>nav {
     --background-secondary: transparent;
 }
 
 div[class^=""contentRegion-""] {
     --background-primary: rgba(var(--md-black), 0.8);
 }
 
 div[class^=""contentRegion-""] div[style^=""overflow: hidden scroll""] {
     background-color: transparent;
     --background-primary: rgba(var(--md-black), 0.1);
     --background-secondary: rgba(var(--md-black), 0.2);
     --background-secondary-alt: rgba(var(--md-black), 0.25);
     --background-tertiary: rgba(var(--dm-white), 0.1);
 }
 
 div[aria-label*=""_SETTINGS""] aside>div {
     --background-primary: transparent;
 }
 
 div[aria-label*=""_SETTINGS""] aside>div::-webkit-scrollbar-track {
     visibility: hidden !important;
 }
 
 .bd-addon-list {
     --background-secondary: var(--background-solid);
     --background-secondary-alt: var(--background-solid-dark);
 }
 
 
 /* Tab Bar */
 
 div[class*=""topPill""],
 nav>div[role=""tablist""],
 .bd-tab-bar {
     --background-accent: rgba(var(--accent));
     --background-modifier-hover: rgba(var(--dm-white), 0.05);
     --background-modifier-active: rgba(var(--dm-white), 0.075);
     --background-modifier-selected: rgba(var(--accent), 0.25);
 }
 
 
 /* Server Discovery */
 
 div[class^=""sidebar""]+[class^=""pageWrapper""] {
     --background-secondary: rgba(var(--md-black), 0.8);
     background-color: var(--background-secondary);
 }
 
 
 /* Crash Page */
 
 div[class*=""errorPage""] {
     --background-secondary: rgba(var(--md-black), 0.7) !important;
 }
 
 
 /* Tooltips */
 
 div[class^=""tooltip-""] {
     --background-floating: rgba(var(--accent-alt), 1);
     --text-normal: #e0e0e0;
 }
 
 
 /* Buttons */
 
 button[class*=""button-""][class*=""color""],
 .bd-button {
     --vaccentcolor: var(--accent-alt);
 }
 
 .bd-button {
     --bd-blue: rgba(var(--accent-alt), 1);
 }
 
 
 /* Context Menu */
 
 div[role=""menuitem""] {
     --vaccentcolor: var(--accent-alt);
 }
 
 div[role=""menuitem""]:active {
     --vaccentcolor: var(--accent);
 }
 
 
 /* Depreceated Components */
 
 
 /* These use hardcoded colors, no need to bother with strange selectors */
 
 #app-mount .footer-2gL1pp,
 #app-mount .footer-3mqk7D {
     background-color: var(--background-secondary);
     box-shadow: none;
 }
 
 #app-mount .root-1gCeng,
 #app-mount .addGamePopout-2RY8Ju,
 #app-mount .keyboardShortcutsModal-3piNz7,
 #app-mount .emojiAliasInput-1y-NBz .emojiInput-1aLNse,
 .perksModal-fSYqOq .perk-2WeBWW,
 #app-mount .uploadModal-2ifh8j,
 #app-mount .contentWrapper-3WC1ID,
 #app-mount .contentWarningPopout-n5JsIs {
     background-color: var(--background-primary);
 }
 
 #app-mount .codeRedemptionRedirect-1wVR4b,
 #app-mount .userSettingsVoice-iwdUCU .previewOverlay-2O7_KC,
 #app-mount .inset-3sAvek {
     background-color: var(--background-tertiary);
     border: none;
 }
 
 #app-mount .paymentPane-3bwJ6A,
 #app-mount .tierBody-x9kBBp,
 #app-mount .tierBody-16Chc9,
 #app-mount .barBackground-2EEiLw,
 #app-mount .body-3iLsc4,
 #app-mount .footer-1fjuF6,
 #app-mount .container-3ayLPN,
 #app-mount .colorPickerCustom-2CWBn2,
 #app-mount .tierMarkerBackground-3q29am,
 .css-3vaxre-menu,
 .css-dwar6a-menu,
 #app-mount .autocomplete-1vrmpx,
 .categoryHeader-O1zU94,
 #app-mount .popoutList-T9CKZQ,
 #app-mount .quickSelectPopout-X1hvgV,
 .colorable-1bkp8v.primaryDark-3mSFDl,
 .tile-2naSqK,
 .videoWrapper-2v09vt,
 #app-mount .spoilerText-3p6IlD.hidden-HHr2R9 {
     background-color: var(--background-solid);
 }
 
 #app-mount .expandedInfo-3kfShd,
 #app-mount .tierHeaderLocked-1a2opw,
 #app-mount .tierHeaderLocked-1s2JJz,
 #app-mount .headerNormal-T_seeN,
 #app-mount .focused-2bY0OD,
 .colorable-1bkp8v.primaryDark-3mSFDl:hover {
     background-color: var(--background-solid-dark);
 }
 
 #app-mount .payment-xT17Mq {
     background-color: transparent;
     border-bottom-color: rgba(var(--dm-white), 0.025);
 }
 
 #app-mount .bottomDivider-1K9Gao,
 #app-mount .focused-2bY0OD {
     border-bottom-color: var(--background-solid-dark);
 }
 
 #app-mount div[data-list-id=""billing-history""],
 #app-mount div[data-list-id^=""private-channels-""],
 #app-mount .media-engine-video,
 .react-datepicker,
 .react-datepicker__header,
 .react-datepicker__day--outside-month,
 .react-datepicker__day--disabled,
 div[data-list-id^=""members-""],
 div[data-list-id^=""members-""]>div {
     background-color: transparent !important;
 }
 
 .react-datepicker__day--disabled {
     opacity: .6;
 }
 
 #app-mount .react-datepicker__day {
     border-top-color: var(--background-secondary);
     border-left-color: var(--background-secondary);
 }
 
 #app-mount .background-3xPPFc,
 #app-mount .tierInProgress-3mBoXq {
     color: var(--background-solid);
 }
 
 .option-96V44q:after {
     content: none;
 }
 
 #app-mount .option-96V44q.selected-rZcOL-,
 #app-mount .selected-1Tbx07,
 #app-mount .quickSelectPopoutOption-opKBx9:hover,
 #app-mount .outer-1AjyKL.active-1xchHY,
 #app-mount .outer-1AjyKL.interactive-3B9GmY:hover {
     background-color: var(--background-modifier-hover);
 }
 
 .css-3vaxre-menu,
 .tierMarker-5HkGJ_[style] {
     border-color: rgba(var(--dm-white), 0.025) !important;
 }
 
 #app-mount .searchAnswer-3Dz2-q,
 #app-mount .searchFilter-2ESiM3,
 #app-mount .option-1B5ZV8,
 #app-mount .pill-2pQByF {
     background-color: rgba(var(--accent-alt), 1);
     color: #fff;
 }
 
 #app-mount .keybindShortcut-1BD6Z1 span {
     background: var(--background-solid-dark);
     box-shadow: inset 0 -4px 0 var(--background-solid-darker);
 }
 
 #app-mount .perksModal-fSYqOq {
     background: rgba(var(--md-black), 0.7);
 }
 
 #app-mount .card-FDVird:before {
     background: var(--background-modifier-hover);
     border: none;
 }
 
 
 /* Login Page */
 
 div[class^=""splashBackground""] canvas,
 div[class^=""splashBackground""] img {
     display: none;
 }
 
 /* Modals */
 
 div[class*=""footerSeparator""] {
     box-shadow: none !important;
 }
 
 /* Forums */
 .container-3wLKDe {
     background: var(--background-primary);
 }
 li[class^=""card-""]>div[class^=""container-""] {
     background: var(--background-floating)
 }"
XaUFykvJ,Untitled,Rari,JSON,Tuesday 2nd of April 2024 02:02:46 PM CDT,"{
  ""Format"": ""2.0.0"",
  ""ConfigSchema"": {
    ""Path"": {
      ""AllowValues"": ""Aqua, Blue, Gold, Seaweed, Emerald, Light blue, Pastel, Lilac"",
      ""Default"": ""Aqua""
    },
    ""Winter Path"": {
      ""AllowValues"": ""Aqua, Blue, Gold, Seaweed, Emerald, Light blue, Pastel, Lilac"",
      ""Default"": ""Blue""
    }
  },
  ""Changes"": [
    {
      ""Action"": ""EditImage"",
      ""Target"": ""TerrainFeatures/Flooring"",
      ""FromFile"": ""assets/{{path}}.png"",
      ""ToArea"": { ""X"": 192, ""Y"": 64, ""Width"": 64, ""Height"": 64 }
    },
    {
      ""Action"": ""EditImage"",
      ""Target"": ""TerrainFeatures/Flooring_winter"",
      ""FromFile"": ""assets/{{winter path}}.png"",
      ""ToArea"": { ""X"": 192, ""Y"": 64, ""Width"": 64, ""Height"": 64 }
    },
    {
      ""LogName"": ""Flooring Springobjects Crystal Path"",
      ""Action"": ""EditImage"",
      ""Target"": ""Maps/springobjects"",
      ""FromFile"": ""assets/{{path}}.png"",
      ""PatchMode"": ""Replace"",
      ""FromArea"": { ""X"": 0, ""Y"": 0, ""Width"": 16, ""Height"": 16 },
      ""ToArea"": { ""X"": 16, ""Y"": 272, ""Width"": 16, ""Height"": 16 },
    },
    {
      ""LogName"": ""Flooring Springobjects Winter Crystal Path"",
      ""Action"": ""EditImage"",
      ""Target"": ""Maps/springobjects"",
      ""FromFile"": ""assets/{{winter path}}.png"",
      ""PatchMode"": ""Replace"",
      ""FromArea"": { ""X"": 0, ""Y"": 0, ""Width"": 16, ""Height"": 16 },
      ""ToArea"": { ""X"": 16, ""Y"": 272, ""Width"": 16, ""Height"": 16 },
      ""When"": {
        ""Season"": ""Winter""
      },
    }	
  ]
}
"
5gb2jYm2,Untitled,RenSafaray,Java,Tuesday 2nd of April 2024 01:57:40 PM CDT,"// Импортируем необходимые классы для работы с коллекциями
import java.util.ArrayList;
import java.util.List;

// Объявляем класс lab4_15
public class lab4_15 {

    // Объявляем статический вложенный класс Stationery (Стационарные товары)
    public static class Stationery {
        // Объявляем приватные поля name (название) и price (цена)
        private String name;
        private double price;

        // Объявляем конструктор для класса Stationery, принимающий название и цену
        public Stationery(String name, double price) {
            // Присваиваем значения полям name и price
            this.name = name;
            this.price = price;
        }

        // Объявляем геттер для поля name
        public String getName() {
            // Возвращаем значение поля name
            return name;
        }

        // Объявляем геттер для поля price
        public double getPrice() {
            // Возвращаем значение поля price
            return price;
        }

        // Переопределяем метод toString() для вывода информации о товаре
        @Override
        public String toString() {
            // Возвращаем строку с информацией о товаре
            return ""Стационарные товары: "" + name + "", цена: "" + price;
        }
    }

    // Объявляем статический вложенный класс Pen (Ручка), наследующийся от класса Stationery
    public static class Pen extends Stationery {
        // Объявляем приватное поле color (цвет)
        private String color;

        // Объявляем конструктор для класса Pen, принимающий название, цену и цвет
        public Pen(String name, double price, String color) {
            // Вызываем конструктор класса Stationery, передавая ему название и цену
            super(name, price);
            // Присваиваем значение полю color
            this.color = color;
        }

        // Объявляем геттер для поля color
        public String getColor() {
            // Возвращаем значение поля color
            return color;
        }

        // Переопределяем метод toString() для вывода информации о ручке
        @Override
        public String toString() {
            // Возвращаем строку с информацией о ручке
            return ""Ручка: "" + super.toString() + "", цвет: "" + color;
        }
    }

    // Объявляем статический вложенный класс Organizer (Органайзер), наследующийся от класса Stationery
    public static class Organizer extends Stationery {
        // Объявляем приватное поле pages (количество страниц)
        private int pages;

        // Объявляем конструктор для класса Organizer, принимающий название, цену и количество страниц
        public Organizer(String name, double price, int pages) {
            // Вызываем конструктор класса Stationery, передавая ему название и цену
            super(name, price);
            // Присваиваем значение полю pages
            this.pages = pages;
        }

        // Объявляем геттер для поля pages
        public int getPages() {
            // Возвращаем значение поля pages
            return pages;
        }

        // Переопределяем метод toString() для вывода информации о органайзере
        @Override
        public String toString() {
            // Возвращаем строку с информацией о органайзере
            return ""Органайзер: "" + super.toString() + "", страницы: "" + pages;
        }
    }

    // Объявляем статический вложен��ый класс Stapler (Скоросшиватель), наследующийся от класса Stationery
    public static class Stapler extends Stationery {
        // Объявляем приватное поле capacity (ёмкость)
        private int capacity;

        // Объявляем конструктор для класса Stapler, принимающий название, цену и ёмкость
        public Stapler(String name, double price, int capacity) {
            // Вызываем конструктор класса Stationery, передавая ему название и цену
            super(name, price);
            // Присваиваем значение полю capacity
            this.capacity = capacity;
        }

        // Объявляем геттер для поля capacity
        public int getCapacity() {
            // Возвращаем значение поля capacity
            return capacity;
        }

        // Переопределяем метод toString() для вывода информации о скоросшивателе
        @Override
        public String toString() {
            // Возвращаем строку с информацией о скоросшивателе
            return ""Скоросшиватель: "" + super.toString() + "", ёмкость: "" + capacity;
        }
    }

    // Объявляем статический вложенный класс Notebook (Тетрадь), наследующийся от класса Stationery
    public static class Notebook extends Stationery {
        // Объявляем приватные поля pages (количество страниц) и binding (переплет)
        private int pages;
        private String binding;

        // Объявляем конструктор для класса Notebook, принимающий название, цену, количество страниц и переплет
        public Notebook(String name, double price, int pages, String binding) {
            // Вызываем конструктор класса Stationery, передавая ему название и цену
            super(name, price);
            // Присваиваем значения полям pages и binding
            this.pages = pages;
            this.binding = binding;
        }

        // Объявляем геттер для поля pages
        public int getPages() {
            // Возвращаем значение поля pages
            return pages;
        }

        // Объявляем геттер для поля binding
        public String getBinding() {
            // Возвращаем значение поля binding
            return binding;
        }

        // Переопределяем метод toString() для вывода информации о тетради
        @Override
        public String toString() {
            // Возвращаем строку с информацией о тетради
            return ""Тетрадь: "" + super.toString() + "", страницы: "" + pages + "", переплет: "" + binding;
        }
    }

    // Объявляем статический вложенный класс Pencil (Карандаш), наследующийся от класса Stationery
    public static class Pencil extends Stationery {
        // Объявляем приватное поле hardness (твердость)
        private String hardness;

        // Объявляем конструктор для класса Pencil, принимающий название, цену и твердость
        public Pencil(String name, double price, String hardness) {
            // Вызываем конструктор класса Stationery, передавая ему название и цену
            super(name, price);
            // Присваиваем значение полю hardness
            this.hardness = hardness;
        }

        // Объявляем геттер для поля hardness
        public String getHardness() {
            // Возвращаем значение поля hardness
            return hardness;
        }

        // Переопределяем метод toString() для вывода информации о карандаше
        @Override
        public String toString() {
            // Возвращаем строку с информацией о карандаше
            return ""Карандаш: "" + super.toString() + "", твердость: "" + hardness;
        }
    }

    // Объявляем статический вложенный класс Scissors (Ножницы), наследующийся от класса Stationery
    public static class Scissors extends Stationery {
        // Объявляем приватное поле type (тип)
        private String type;

        // Объявляем конструктор для класса Scissors, принимающий название, цену и тип
        public Scissors(String name, double price, String type) {
            // Вызываем конструктор класса Stationery, передавая ему название и цену
            super(name, price);
            // Присваиваем значение полю type
            this.type = type;
        }

        // Объявляем геттер для поля type
        public String getType() {
            // Возвращаем значение поля type
            return type;
        }

        // Переопределяем метод toString() для вывода информации о ножницах
        @Override
        public String toString() {
            // Возвращаем строку с информацией о ножницах
            return ""Ножницы: "" + super.toString() + "", тип: "" + type;
        }
    }

    // Объявляем основной метод main
    public static void main(String[] args) {
        // Создаем список товаров
        List<Stationery> stationeryList = new ArrayList<>();
        // Добавляем товары в список
        stationeryList.add(new Pen(""Шариковая ручка"", 0.5, ""Синий""));
        stationeryList.add(new Organizer(""Кожаный органайзер"", 20.0, 100));
        stationeryList.add(new Stapler(""Столовый скоросшиватель"", 10.0, 200));
        stationeryList.add(new Notebook(""Офисная тетрадь"", 2.5, 100, ""спиральный""));
        stationeryList.add(new Pencil(""Карандаш ХБ"", 0.3, ""средняя""));
        stationeryList.add(new Scissors(""Ножницы для бумаги"", 1.5, ""прямые""));

        // Выводим заголовок
        System.out.println(""Стационарные товары:"");
        // Выводим информацию о каждом товаре из списка
        for (Stationery item : stationeryList) {
            System.out.println(item);
        }
    }
}"
bdqc8LMu,Datatable - Rolagem eixo Y,df1983,JavaScript,Tuesday 2nd of April 2024 01:44:13 PM CDT,"$('#example').dataTable( {
  scrollY: ""200px"",
  scrollCollapse: true,
  paging: false
} );"
N0gDCn5q,Datatable - Cabeçalho Fixo,df1983,JavaScript,Tuesday 2nd of April 2024 01:42:04 PM CDT,"$(document).ready(function() {
    var table = $('#example').DataTable( {
        fixedHeader: {
            header: true,
            footer: true
        }
    } );
} );"
HxqD8ZCR,WorkWithStringsAndColumn,SaNik74,C#,Tuesday 2nd of April 2024 01:41:50 PM CDT,"internal class Program
{
    static void Main(string[] args)
    {
        Random random = new Random();
        int sumSecondLine = 0;
        int productFirstColumn = 1;
        int numberOfLines;
        int numberOfColomns;
        int numberOfNeedColomn = 0;
        int numberOfNeedLine = 1;
        int minArrayValues = 0;
        int maxArrayValues = 10;
        bool isWorking = true;

        while (isWorking)
        {
            Console.Write(""Введите кол-во строк: "");
            numberOfLines = Convert.ToInt32(Console.ReadLine());
            Console.Write(""Введите кол-во столбцов: "");
            numberOfColomns = Convert.ToInt32(Console.ReadLine());

            if (numberOfLines <= 0 || numberOfColomns <= 0)
            {
                Console.WriteLine(""Вы ввели недопустимое кол-во строк или столбцов. Число должно быть больше 0."");
                Console.ReadKey();
                Console.Clear();
            }
            else
            {
                isWorking = false;
            }

            int[,] numbers = new int[numberOfLines, numberOfColomns];

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    numbers[i, j] = random.Next(minArrayValues, maxArrayValues);
                }
            }

            Console.WriteLine(""\n\nМассив:"");

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    Console.Write(numbers[i, j] + "" "");
                }

                Console.WriteLine();
            }

            for (int i = 0; i < numbers.GetLength(1); i++)
            {
                sumSecondLine += numbers[numberOfNeedLine, i];
            }

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                productFirstColumn *= numbers[i, numberOfNeedColomn];
            }

            Console.Write($""\n\nСумма числел второй строки: {sumSecondLine}"");
            Console.WriteLine($""\n\nПроизведение числел первого столбца: {productFirstColumn}"");
            Console.ReadKey();
        }
    }
}"
pEHheGiU,Untitled,ovichan,Bash,Tuesday 2nd of April 2024 01:10:11 PM CDT,"@echo off
rem Licensed to the Apache Software Foundation (ASF) under one or more
rem contributor license agreements.  See the NOTICE file distributed with
rem this work for additional information regarding copyright ownership.
rem The ASF licenses this file to You under the Apache License, Version 2.0
rem (the ""License""); you may not use this file except in compliance with
rem the License.  You may obtain a copy of the License at
rem
rem     http://www.apache.org/licenses/LICENSE-2.0
rem
rem Unless required by applicable law or agreed to in writing, software
rem distributed under the License is distributed on an ""AS IS"" BASIS,
rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
rem See the License for the specific language governing permissions and
rem limitations under the License.

if ""%OS%"" == ""Windows_NT"" setlocal
rem ---------------------------------------------------------------------------
rem NT Service Install/Uninstall script
rem
rem Options
rem install                Install the service using Tomcat as service name.
rem                        Service is installed using default settings.
rem remove                 Remove the service from the System.
rem
rem name        (optional) If the second argument is present it is considered
rem                        to be new service name
rem
rem $Id: service.bat 1000718 2010-09-24 06:00:00Z mturk $
rem ---------------------------------------------------------------------------

rem ---------XAMPP-------------------------------------------------------------
::::::::::::::::::::::::::::::::::::
::  Set JAVA_HOME or JRE_HOME     ::
::::::::::::::::::::::::::::::::::::

echo.
echo [XAMPP]: Searching for JDK or JRE HOME with reg query ...
set JDKKeyName64=HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit
set JDKKeyName64Short=HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\JDK
set AdoptOpenJDKKeyName64=HKEY_LOCAL_MACHINE\SOFTWARE\AdoptOpenJDK\JDK
set JREKeyName64=HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment
set JREKeyName64Short=HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\JRE
set AdoptOpenJDKKeyName64JRE=HKEY_LOCAL_MACHINE\SOFTWARE\AdoptOpenJDK\JRE

reg query ""%JDKKeyName64%"" /s
if %ERRORLEVEL% EQU 1 (
    echo . [XAMPP]: Could not find 32 bit or 64 bit JDK
    echo . [XAMPP]: Looking for 32 bit JDK on 64 bit machine
    goto FINDJDK64SHORT
)
set KeyName=%JDKKeyName64%
goto JDKRUN

:FINDJDK64SHORT
reg query ""%JDKKeyName64Short%"" /s
if %ERRORLEVEL% EQU  1 (
    echo . [XAMPP]: Could not find 32 bit JDK
    echo . [XAMPP]: Looking for 32 bit or 64 bit on 64 bit machine with short name
    goto FINDADOPTOPENJDK64
)
set KeyName=%JDKKeyName64Short%
goto JDKRUN

:FINDADOPTOPENJDK64
reg query ""%AdoptOpenJDKKeyName64%"" /s
if %ERRORLEVEL% EQU  1 (
    echo . [XAMPP]: Could not find 32 bit or 64 bit AdoptOpenJDK
    echo . [XAMPP]: Looking for 32 bit or 64 bit JRE
    goto FINDJRE64
)
set KeyName=%AdoptOpenJDKKeyName64%
goto JDKRUN

:FINDJRE64
reg query ""%JREKeyName64%"" /s
if %ERRORLEVEL% EQU 1 (
    echo . [XAMPP]: Could not find 32 bit or 64 bit JRE with long name
    echo . [XAMPP]: Looking for 32 bit or 64 bit JRE on 64 bit machine with short name
    goto FINDJRE64SHORT
)
set KeyName=%JREKeyName64%
goto JRERUN

:FINDJRE64SHORT
reg query ""%JREKeyName64Short%"" /s
if %ERRORLEVEL% EQU 1 (
    echo . [XAMPP]: Could not find 32 bit or 64 bit JRE with short name
    echo . [XAMPP]: Looking for 32 bit or 64 bit AdoptOpenJDK JRE on 64 bit machine
    goto FINDADOPTOPENJDK64JRE
)
set KeyName=%JREKeyName64Short%
goto JRERUN

:FINDADOPTOPENJDK64JRE
reg query ""%AdoptOpenJDKKeyName64JRE%"" /s
if %ERRORLEVEL% EQU  1 (
    echo . [XAMPP]: Could not find 32 bit or 64 bit AdoptOpenJDK JRE
    echo . [XAMPP]: Looking for 32 JRE on 64 bit machine
    goto ENDERROR
)
set KeyName=%AdoptOpenJDKKeyName64JRE%
goto JDKRUN

:JDKRUN
echo.
echo [XAMPP]: Using JDK
set ""CURRENT_DIR=%~dp0""
set ""CURRENT_DIR=%CURRENT_DIR:~,-1%""
set ""CATALINA_HOME=%CURRENT_DIR%\tomcat""

set Cmd=reg query ""%KeyName%"" /s
for /f ""tokens=2*"" %%i in ('%Cmd% ^| find ""JavaHome""') do set JAVA_HOME=%%j

echo.
echo [XAMPP]: Seems fine!
echo [XAMPP]: Set JAVA_HOME : %JAVA_HOME%
echo [XAMPP]: Set CATALINA_HOME : %CATALINA_HOME%
echo.
goto NEXT

:JRERUN
echo.
echo [XAMPP]: Using JRE
set ""CURRENT_DIR=%~dp0""
set ""CURRENT_DIR=%CURRENT_DIR:~,-1%""
set ""CATALINA_HOME=%CURRENT_DIR%\tomcat""

set Cmd=reg query ""%KeyName%"" /s
for /f ""tokens=2*"" %%i in ('%Cmd% ^| find ""JavaHome""') do set JRE_HOME=%%j

echo.
echo [XAMPP]: Seems fine!
echo [XAMPP]: Set JRE_HOME : %JRE_HOME%
echo [XAMPP]: Set CATALINA_HOME : %CATALINA_HOME%
echo.
goto NEXT

:ENDERROR
exit 1

:NEXT

echo [XAMPP]: Finding Java Version

set Cmd=reg query ""%KeyName%"" /v CurrentVersion
for /f ""tokens=2*"" %%i in ('%Cmd% ^| find ""CurrentVersion""') do set CVERSION=%%j

echo [XAMPP]: Java Version: %CVERSION%
echo [XAMPP]: Starting Tomcat Service Install...
echo .

rem ----------END XAMPP-----------------------------------------------------------------

set ""SELF=%~dp0%service.bat""
rem Guess CATALINA_HOME if not defined
set ""CURRENT_DIR=%~dp0""
set ""CURRENT_DIR=%CURRENT_DIR:~,-1%""
if not ""%CATALINA_HOME%"" == """" goto gotHome
set ""CATALINA_HOME=%CURRENT_DIR%\tomcat""
if exist ""%CATALINA_HOME%\bin\tomcat8.exe"" goto okHome
rem CD to the upper dir
cd ..
set ""CATALINA_HOME=%CURRENT_DIR%\tomcat""
:gotHome
if exist ""%CATALINA_HOME%\bin\tomcat8.exe"" goto okHome
echo The tomcat.exe was not found...
echo The CATALINA_HOME environment variable is not defined correctly.
echo This environment variable is needed to run this program
goto end
:okHome
rem Make sure prerequisite environment variables are set
if not ""%JAVA_HOME%"" == """" goto gotJdkHome
if not ""%JRE_HOME%"" == """" goto gotJreHome
echo Neither the JAVA_HOME nor the JRE_HOME environment variable is defined
echo Service will try to guess them from the registry.
goto okJavaHome
:gotJreHome
if not exist ""%JRE_HOME%\bin\java.exe"" goto noJavaHome
if not exist ""%JRE_HOME%\bin\javaw.exe"" goto noJavaHome
goto okJavaHome
:gotJdkHome
if not exist ""%JAVA_HOME%\bin\java.exe"" goto noJavaHome
if not exist ""%JAVA_HOME%\bin\javaw.exe"" goto noJavaHome
if not exist ""%JAVA_HOME%\bin\javac.exe"" goto noJavaHome
if not ""%JRE_HOME%"" == """" goto okJavaHome
set ""JRE_HOME=%JAVA_HOME%\bin""
goto okJavaHome
:noJavaHome
echo The JAVA_HOME environment variable is not defined correctly
echo This environment variable is needed to run this program
echo NB: JAVA_HOME should point to a JDK not a JRE
goto end
:okJavaHome
if not ""%CATALINA_BASE%"" == """" goto gotBase
set ""CATALINA_BASE=%CATALINA_HOME%""
:gotBase

set ""EXECUTABLE=%CATALINA_HOME%\bin\tomcat8.exe""

rem Set default Service name
set SERVICE_NAME=Tomcat
set PR_DISPLAYNAME=Apache Tomcat

if ""x%1x"" == ""xx"" goto displayUsage
set SERVICE_CMD=%1
shift
if ""x%1x"" == ""xx"" goto checkServiceCmd
:checkUser
if ""x%1x"" == ""x/userx"" goto runAsUser
if ""x%1x"" == ""x--userx"" goto runAsUser
set SERVICE_NAME=%1
set PR_DISPLAYNAME=Apache Tomcat %1
shift
if ""x%1x"" == ""xx"" goto checkServiceCmd
goto checkUser
:runAsUser
shift
if ""x%1x"" == ""xx"" goto displayUsage
set SERVICE_USER=%1
shift
runas /env /savecred /user:%SERVICE_USER% ""%COMSPEC% /K \""%SELF%\"" %SERVICE_CMD% %SERVICE_NAME%""
goto end
:checkServiceCmd
if /i %SERVICE_CMD% == install goto doInstall
if /i %SERVICE_CMD% == remove goto doRemove
if /i %SERVICE_CMD% == uninstall goto doRemove
echo Unknown parameter ""%1""
:displayUsage
echo.
echo Usage: service.bat install/remove [service_name] [/user username]
goto end

:doRemove
rem Remove the service
""%EXECUTABLE%"" //DS//%SERVICE_NAME%
if not errorlevel 1 goto removed
echo Failed removing '%SERVICE_NAME%' service
goto end
:removed
echo The service '%SERVICE_NAME%' has been removed
goto end

:doInstall
rem Install the service
echo Installing the service '%SERVICE_NAME%' ...
echo Using CATALINA_HOME:    ""%CATALINA_HOME%""
echo Using CATALINA_BASE:    ""%CATALINA_BASE%""
echo Using JAVA_HOME:        ""%JAVA_HOME%""
echo Using JRE_HOME:         ""%JRE_HOME%""

rem Use the environment variables as an example
rem Each command line option is prefixed with PR_

set PR_DESCRIPTION=Apache Tomcat Server - http://tomcat.apache.org/
set ""PR_INSTALL=%EXECUTABLE%""
set ""PR_LOGPATH=%CATALINA_BASE%\logs""
set ""PR_CLASSPATH=%CATALINA_HOME%\bin\bootstrap.jar;%CATALINA_BASE%\bin\tomcat-juli.jar;%CATALINA_HOME%\bin\tomcat-juli.jar""
rem Set the server jvm from JAVA_HOME
set ""PR_JVM=%JRE_HOME%\bin\server\jvm.dll""
if exist ""%PR_JVM%"" goto foundJvm
rem Set the client jvm from JAVA_HOME
set ""PR_JVM=%JRE_HOME%\bin\client\jvm.dll""
if exist ""%PR_JVM%"" goto foundJvm
set PR_JVM=auto
:foundJvm
echo Using JVM:              ""%PR_JVM%""
""%EXECUTABLE%"" //IS//%SERVICE_NAME% --StartClass org.apache.catalina.startup.Bootstrap --StopClass org.apache.catalina.startup.Bootstrap --StartParams start --StopParams stop --Startup auto
if not errorlevel 1 goto installed
echo Failed installing '%SERVICE_NAME%' service
goto ENDERROR
:installed
rem Clear the environment variables. They are not needed any more.
set PR_DISPLAYNAME=
set PR_DESCRIPTION=
set PR_INSTALL=
set PR_LOGPATH=
set PR_CLASSPATH=
set PR_JVM=
rem Set extra parameters
""%EXECUTABLE%"" //US//%SERVICE_NAME% --JvmOptions ""-Dcatalina.base=%CATALINA_BASE%;-Dcatalina.home=%CATALINA_HOME%;-Djava.endorsed.dirs=%CATALINA_HOME%\endorsed"" --StartMode jvm --StopMode jvm
rem More extra parameters
set ""PR_LOGPATH=%CATALINA_BASE%\logs""
set PR_STDOUTPUT=auto
set PR_STDERROR=auto

rem XAMPP: We need special parameters for Java 7
if ""%CVERSION%"" == ""1.7"" goto JAVA7
:JAVA
""%EXECUTABLE%"" //US//%SERVICE_NAME% ++JvmOptions ""-Djava.io.tmpdir=%CATALINA_BASE%\temp;-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager;-Djava.util.logging.config.file=%CATALINA_BASE%\conf\logging.properties"" --JvmMs 128 --JvmMx 256
goto FINISH
:JAVA7
""%EXECUTABLE%"" //US//%SERVICE_NAME% ++JvmOptions ""-Djava.io.tmpdir=%CATALINA_BASE%\temp;-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager;-Djava.util.logging.config.file=%CATALINA_BASE%\conf\logging.properties;-Djava.net.preferIPv4Stack=true"" --JvmMs 128 --JvmMx 256
:FINISH
echo The service '%SERVICE_NAME%' has been installed.

:end
cd ""%CURRENT_DIR%""

"
28af0JZ3,[OS] fileExplorer.lua,Le_JuiceBOX,Lua,Tuesday 2nd of April 2024 01:01:49 PM CDT,"
local Terminal = require(""/terminal"").new()
return function()
    Terminal:reset()
    Terminal:display(1,
        ""&c""..Terminal:makeSeperator(""=""),
        ""&dComputer OS - T:"",
        ""&c""..Terminal:makeSeperator(""="")
    )
    local file = Terminal:promptFilePath("""",true,"""")
    Terminal:reset()
    Terminal:pressAnyKeyToContinue()
end"
Ngsx7ZvP,M5Stack_Dial_ESP_HA,MiAutomations,YAML,Tuesday 2nd of April 2024 12:59:29 PM CDT,"captive_portal:

substitutions:
  devicename: ""m5-dial""
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password  
  
packages:
  m5_tough_package:
    url: https://github.com/SmartHome-yourself/m5-dial-for-esphome
    ref: main
    file: shys-m5-dial.yaml
    refresh: 1h

shys_m5_dial:
  name: m5stack-rotatory-knob
  font: FreeSans12pt7b
  font_factor: 1

  devices:
    lights:
      - entity: light.yeelight_color_0x36ec1bd
        name: Yeelight
        modes:
          dimm_mode:
            enable: true
            rotary_step_width: 10
          rgb_mode: 
            enable: true
            rotary_step_width: 30
          white_mode: 
            enable: true
            rotary_step_width: 100
            min_kelvin: 2500
            
      - entity: light.my_light2
        name: Light 2

    switches:
      - entity: switch.sonoff_1000af1722
        name: Sala
        
    climates:
      - entity: climate.my_climate1
        name: Heater
        modes:
          temp_mode:
            rotary_step_width: 1
            min_temperature: 4
            max_temperature: 30
            
    covers:
      - entity: cover.curtain_window_curtain
        name: Cortina
        modes:
          position_mode:
            rotary_step_width: 5

    fans:
      - entity: fan.my_fan1
        name: Fan 1
        modes:
          speed_mode:
            changeable_direction: true
            rotary_step_width: 10

    media_player:
      - entity: media_player.echo_show_8_2nd_gen
        name: MediaPlayer 1
        modes:
          play_mode:
            rotary_step_width: 10
          source_mode:
            rotary_step_width: 1
            sources:
              - name: 1Live
                content_id: 1Live
                content_type: TUNEIN
              - name: WDR2
                content_id: ""http://wdr-wdr2-bergischesland.icecast.wdr.de/wdr/wdr2/bergischesland/mp3/128/stream.mp3""
                content_type: custom

    lock:
      - entity: lock.my_lock1
        name: Lock 1
        modes:
          lock_mode:
            rotary_step_width: 1
            open_on_button: false    "
GLc3gkVK,pods,Oscarche,JSON,Tuesday 2nd of April 2024 12:54:42 PM CDT,"[ 
	{
		""name"":""Levántate OK"",
		""source"":""https://api.spreaker.com/show/5082420/episodes/playlist?sorting=newest&episode_id=59228089"",
		""artw"":""images/levantaok.png""
	}
]"
n55S2hY3,Untitled,Pahom-ka,PHP,Tuesday 2nd of April 2024 12:46:58 PM CDT,"<?php

class ControllerCommonMenu extends Controller
{
    public function index()
    {
        $this->load->language('common/menu');

        // Menu
        $this->load->model('catalog/category');
        $this->load->model('catalog/product');
        $this->load->model('tool/image');

        $data['categories'] = array();

        $cache_menu = $this->cache->get('cache_menu');

        if (empty($cache_menu)) {
            $categories = $this->model_catalog_category->getCategories(0);
            foreach ($categories as $category) {
                if ($category['top']) {
                    // Level 2
                    $children_data = array();

                    $children = $this->model_catalog_category->getCategories($category['category_id']);

                    foreach ($children as $child) {
                        // Level 3
                        $grandchildren_data = array();

                        $grandchildren = $this->model_catalog_category->getCategories($child['category_id']);

                        foreach ($grandchildren as $grandchild) {

                            $grandchild_filter_data = array(
                                'filter_category_id' => $grandchild['category_id'],
                                'filter_sub_category' => true
                            );

                            $grandchildren_data[] = array(
                                'name' => $grandchild['name'] . ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($grandchild_filter_data) . ')' : ''),
                                'href' => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $grandchild['category_id'])
                            );
                        }

                        $filter_data = array(
                            'filter_category_id' => $child['category_id'],
                            'filter_sub_category' => true
                        );

                        $children_data[] = array(
                            'image' => $child['image'] ? $this->model_tool_image->resize($child['image'], 24, 24) : false,
                            'name' => $child['name'] . ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : ''),
                            'href' => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id']),
                            'children' => $grandchildren_data,
                        );
                    }

                    // Level 1
                    if ($category['image']) {
                        $image = $this->model_tool_image->resize($category['image'], 30, 30);
                    } else {
                        $image = false;
                    }
                    $data['categories'][] = array(
                        'image' => $image,
                        'name' => $category['name'],
                        'children' => $children_data,
                        'column' => $category['column'] ? $category['column'] : 1,
                        'href' => $this->url->link('product/category', 'path=' . $category['category_id'])
                    );
                }
            }
            $this->cache->set('cache_menu', $data);
        } else {
            $data = $cache_menu;
        }




        return $this->load->view('common/menu', $data);
    }
}
"
3CsdWFkz,Warpcast qoutes raffle script,amir_habibzadeh,JavaScript,Tuesday 2nd of April 2024 12:45:42 PM CDT,"// Constants for configurable values
const MAX_ELEMENTS = 100;
const REMOVAL_TEXT = ""@amir0.eth"";

// Array to store text
var textArray = [];

// Select all elements with the class .shrink
var shrinkElements = document.querySelectorAll('.shrink');

// Iterate over each element
shrinkElements.forEach(function(element) {
    // Get the second <span> element within the current element
    var secondSpan = element.children[1];
    
    // Check if secondSpan exists and contains an <a> tag
    if (secondSpan && secondSpan.querySelector('a')) {
        // Get the text content inside the <a> tag inside the second <span>
        var text = secondSpan.querySelector('a').textContent;
        
        // Remove certain element based on text content
        if (text !== REMOVAL_TEXT) {
            // Add text to array if it's not already present
            if (!textArray.includes(text)) {
                textArray.push(text);
            }
        } else {
            // Remove the element from the DOM
            element.remove();
        }
    }
});

// Remove duplicates by converting array to set and back to array
textArray = Array.from(new Set(textArray));

// Shuffle the array
textArray.sort(() => Math.random() - 0.5);

// Keep only the first MAX_ELEMENTS elements if there are more than MAX_ELEMENTS
textArray = textArray.slice(0, MAX_ELEMENTS);

// If there are less than MAX_ELEMENTS elements, continue adding unique elements until it reaches MAX_ELEMENTS
while (textArray.length < MAX_ELEMENTS) {
    var uniqueText = getRandomUniqueText();
    if (!textArray.includes(uniqueText)) {
        textArray.push(uniqueText);
    }
}

// Function to generate a random unique text
function getRandomUniqueText() {
    // Example: Generate a random string
    return ""RandomUniqueText"" + Math.floor(Math.random() * 100000);
}

// Combine all texts together with space
var combinedText = textArray.join(' ');

// Output the combined text
console.log(combinedText);
"
Ncsf9X2f,sniff,Last1k,Lua,Tuesday 2nd of April 2024 12:45:24 PM CDT,"args = { ... }

local miner = require(""minerArsenal"")
Direction = miner.Direction

if #args ~= 5 then
    print(""Expected arguments: strategy vector of 4 elements and a depth"")
    return
end

strategyIndex = { tonumber(args[1]), tonumber(args[2]), tonumber(args[3]), tonumber(args[4]) }
depth = tonumber(args[5])

local MiningDirection = {
    FRONT = ""front"",
    BACK = ""back""
}
local MiningSide = {
    LEFT = ""left"",
    RIGHT = ""right""
}

height = strategyIndex[1] * 3
length = strategyIndex[2] * 2
miningDirection = strategyIndex[3] == 0 and MiningDirection.FRONT or MiningDirection.BACK
miningSide = strategyIndex[4] == 0 and MiningSide.LEFT or MiningSide.RIGHT

print(""Height = "", height)
print(""Length = "", length)
print(""Direction = "", miningDirection)
print(""Side = "", miningSide)
print(""Depth = "", depth)

local fuelNeeded = height * 2 + length * 2 + depth * 2 + 50
while turtle.getFuelLevel() < fuelNeeded do
    print(""Current fuel"", turtle.getFuelLevel(), ""needed"", fuelNeeded)
    if turtle.getItemCount() == 0 then
        turtle.suckDown()
    end
    turtle.refuel(1)
end
print(""Got enough fuel"", turtle.getFuelLevel(), ""needed"", fuelNeeded)
turtle.dropDown()

-- Move to the mining column
miner.moveTurtle(Direction.FORWARD)

-- Get down to the mining area
for i = 1, 3 do
    miner.moveTurtle(Direction.DOWN)
end

-- Get down to the proper height
for i = 1, height do
    miner.moveTurtle(Direction.DOWN)
end

-- Go to the proper mining half (front or back)
if miningDirection == MiningDirection.FRONT then
    miner.moveTurtle(Direction.FORWARD)
    miner.moveTurtle(Direction.FORWARD)
else
    turtle.turnLeft()
    turtle.turnLeft()
    miner.moveTurtle(Direction.FORWARD)
end

-- Get to the assigned square to mine
for i = 1, length do
    miner.moveTurtle(Direction.FORWARD)
end

-- Turn left or right depending on the chosen half
if miningSide == MiningSide.LEFT then
    turtle.turnLeft()
else
    turtle.turnRight()
end

-- Dig the assigned square
miner.penetrate(depth)
miner.moveTurtle(Direction.DOWN)
if miningSide == MiningSide.LEFT then
    turtle.turnRight()
else
    turtle.turnLeft()
end
miner.moveTurtle(Direction.FORWARD)
if miningSide == MiningSide.LEFT then
    turtle.turnRight()
else
    turtle.turnLeft()
end
miner.penetrate(depth)

-- Turn in the other direction than the assigned side
if miningSide == MiningSide.LEFT then
    turtle.turnRight()
else
    turtle.turnLeft()
end

-- Go back to the miner column
-- We have ended up 1 block lower and 1 block further
for i = 1, length + 1 do
    miner.moveTurtle(Direction.FORWARD)
end
if miningDirection == MiningDirection.FRONT then
    miner.moveTurtle(Direction.FORWARD)
else
    miner.moveTurtle(Direction.FORWARD)
    miner.moveTurtle(Direction.FORWARD)
    turtle.turnLeft()
    turtle.turnLeft()
end

-- Go up the mine shaft
for i = 1, height + 1 do
    miner.moveTurtle(Direction.UP)
end

-- Get up to one block higher than we were starting from
for i = 1, 4 do
    miner.moveTurtle(Direction.UP)
end

-- Get to the chest where we can drop the loot at
miner.moveTurtle(Direction.FORWARD)
miner.moveTurtle(Direction.FORWARD)
turtle.turnRight()
for i = 1, 16 do
    turtle.select(i)
    turtle.drop()
end

-- Get back to the starting position
miner.moveTurtle(Direction.DOWN)
turtle.turnRight()

-- digSquare fuel cost: 2 * length + 2
"
RFJkXPCX,Content Patcher - Sea Glass Path by seasIug (1.6 update),Rari,JSON,Tuesday 2nd of April 2024 12:31:28 PM CDT,"{
  ""Format"": ""2.0.0"",
  ""ConfigSchema"": {
    ""Path"": {
      ""AllowValues"": ""Aqua, Blue, Gold, Seaweed, Emerald, Light blue, Pastel, Lilac"",
      ""Default"": ""Seaweed""
	  ""Description"": ""Changes the color the path will appear in Spring, Summer and Fall.""
    },
    ""Winter Path"": {
      ""AllowValues"": ""Aqua, Blue, Gold, Seaweed, Emerald, Light blue, Pastel, Lilac"",
      ""Default"": ""Emerald""
	  ""Description"": ""Changes the color the path will appear in Winter.""
    }
  },
  ""Changes"": [
    {
      ""Action"": ""EditImage"",
      ""Target"": ""TerrainFeatures/Flooring"",
      ""FromFile"": ""assets/{{path}}.png"",
      ""ToArea"": { ""X"": 192, ""Y"": 64, ""Width"": 64, ""Height"": 64 }
    },
    {
      ""Action"": ""EditImage"",
      ""Target"": ""TerrainFeatures/Flooring_winter"",
      ""FromFile"": ""assets/{{winter path}}.png"",
      ""ToArea"": { ""X"": 192, ""Y"": 64, ""Width"": 64, ""Height"": 64 }
    },
    {
      ""LogName"": ""Flooring Springobjects Crystal Path"",
      ""Action"": ""EditImage"",
      ""Target"": ""Maps/springobjects"",
      ""FromFile"": ""assets/{{path}}.png"",
      ""PatchMode"": ""Replace"",
      ""FromArea"": { ""X"": 0, ""Y"": 0, ""Width"": 16, ""Height"": 16 },
      ""ToArea"": { ""X"": 16, ""Y"": 272, ""Width"": 16, ""Height"": 16 },
    },
    {
      ""LogName"": ""Flooring Springobjects Winter Crystal Path"",
      ""Action"": ""EditImage"",
      ""Target"": ""Maps/springobjects"",
      ""FromFile"": ""assets/{{winter path}}.png"",
      ""PatchMode"": ""Replace"",
      ""FromArea"": { ""X"": 0, ""Y"": 0, ""Width"": 16, ""Height"": 16 },
      ""ToArea"": { ""X"": 16, ""Y"": 272, ""Width"": 16, ""Height"": 16 },
      ""When"": {
        ""Season"": ""winter"",
      },
    }	
  ]
}
"
kJMNgaPM,lootHoover.sqf,kerbo_,SQF,Tuesday 2nd of April 2024 12:27:35 PM CDT,"private _maxDistance = 20000;
private _flagClass = ""FlagMarker_01_F"";
private _placeFlag = false;
private _lootCrateClass = ""Box_IND_Wps_F"";
//private _lootCrateClass = ""SPE_Mine_AmmoBox_US"";
private _magicBoxClass = ""Box_IND_Support_F"";
private _magicBox = nearestObject [player, _magicBoxClass]; 
if(_magicBox == objNull or typeOf _magicBox == """") then {
  // create empty crate 
  _magicBox = createVehicle[""Box_IND_Support_F"", position player, [], 0, ""NONE""]; 
  _magicBox allowDamage false;
  clearWeaponCargoGlobal _magicBox; 
  clearMagazineCargoGlobal _magicBox;
  clearItemCargoGlobal _magicBox;
  clearBackpackCargoGlobal _magicBox;
  _magicBox call A3A_Logistics_fnc_addLoadAction;
  _magicBox call A3A_fnc_initMovableObject;
};
private _targets = nearestObjects [getPosATL _magicBox, [""Man""], _maxDistance]; 
private _weaponHolders = nearestObjects [getPosATL _magicBox, [""WeaponHolder"", ""WeaponHolderSimulated"", _lootCrateClass], _maxDistance];
private _countBodies = 0; 
private _countContainers = 0; 
 
private _lootWeapons = { 
 params [""_weaponItemsArray"", ""_container""]; 
 _container addWeaponWithAttachmentsCargoGlobal [_weaponItemsArray, 1]; 
}; 
 
private _lootBodies = { 
 params [""_lootable"", ""_container""]; 
 
 if (_lootable isKindOf ""CAManBase"") then 
 { 
  // Get HashMap of target loadout 
  private _loadout = getUnitLoadout _lootable; 
  _loadout = createHashMapFromArray [[""primaryWeapon"", _loadout select 0], 
 [""secondaryWeapon"", _loadout select 1], 
 [""handgunWeapon"", _loadout select 2], 
 [""uniform"", _loadout select 3], 
 [""vest"", _loadout select 4], 
 [""backpack"", _loadout select 5], 
 [""helmet"", _loadout select 6], 
 [""faceWear"", _loadout select 7], 
 [""binoculars"", _loadout select 8], 
 [""items"", _loadout select 9]]; 
  { 
   // systemChat format [""Processing %1: %2"", _x, _y]; 
   if (_y isNotEqualTo []) then 
   { 
 switch (_x) do 
 { 
  case ""binoculars""; 
  case ""primaryWeapon""; 
  case ""secondaryWeapon""; 
  case ""handgunWeapon"": 
  { 
   [_y, _container] call _lootWeapons; 
   _loadout set [_x, []]; 
  }; 
  // Break out items from these containers 
  case ""uniform""; 
  case ""vest""; 
  case ""backpack"": 
  { 
   { 
 switch (count _x) do 
 { 
  case 2: 
  { 
   _container addItemCargoGlobal _x; 
  }; 
  case 3: 
  { 
   _container addMagazineAmmoCargo _x; 
  }; 
  default 
  { 
   systemChat format [""ERROR: not sure how to handle %1"", _x]; 
  }; 
 }; 
   } forEach (_y select 1); 
   if (_x isEqualTo ""vest"") then 
   { 
 _container addItemCargoGlobal [_y select 0, 1]; 
   }; 
   if (_x isEqualTo ""backpack"") then 
   { 
 _container addBackpackCargoGlobal [_y select 0, 1]; 
   }; 
   if (_x isEqualTo ""uniform"") then 
   { 
 // Don't take the uniform 
 // Keep your pants on, my guy 
 _loadout set [_x, [_y select 0, []]]; 
   } 
   else 
   { 
 _loadout set [_x, []]; 
   }; 
  }; 
  case ""helmet"": 
  { 
   _container addItemCargoGlobal [_y, 1]; 
   _loadout set [_x, """"]; 
  }; 
  case ""faceWear"": 
  { 
   // Do nothing, because we don't want to loot faceWear 
  }; 
  case ""items"": 
  { 
   { 
 if !(_x isEqualTo """") then 
 { 
  _container addItemCargoGlobal [_x, 1]; 
 }; 
   } forEach (_y); 
   _loadout set [_x, ["""", """", """", """", """", """"]]; 
  }; 
  default 
  { 
   // All the cases should be handled, but just in case 
   systemChat format [""ERROR: Not sure how to handle %1"", _x]; 
  }; 
 }; 
   } 
   else 
   { 
 // Empty slot, so nothing to do here 
   }; 
  } forEach _loadout; 
 
  // Push the fleeced loadout back to the unit 
  // Has to be a Unit Loadout Array, yuck 
  _loadout = [_loadout get ""primaryWeapon"", 
  _loadout get ""secondaryWeapon"", 
  _loadout get ""handgunWeapon"", 
  _loadout get ""uniform"", 
  _loadout get ""vest"", 
  _loadout get ""backpack"", 
  _loadout get ""helmet"", 
  _loadout get ""facewear"", 
  _loadout get ""binoculars"", 
  _loadout get ""items""]; 
  _lootable setUnitLoadout _loadout; 
  private _looted = _lootable getVariable [""LootTaken"", false]; 
  if(!_looted) then { 
   _countBodies = _countBodies + 1; 
   _lootable setVariable [""LootTaken"", true, true]; 
   if(_placeFlag) then { createVehicle[_flagClass, position _lootable, [], 0, ""NONE""]; }; 
  }; 
 } else { 
  // Loot containers in container 
  { 
   private _subContainer = _x select 1; 
   { 
 [_x, _container] call _lootWeapons; 
   } forEach weaponsItemsCargo _subContainer; 
   { 
 _container addItemCargoGlobal [_x, 1]; 
   } forEach itemCargo _subContainer; 
   { 
 _container addMagazineAmmoCargo [_x select 0, 1, _x select 1]; 
   } forEach magazinesAmmoCargo _subContainer; 
  } forEach everyContainer _lootable; 
  { 
   [_x, _container] call _lootWeapons; 
  } forEach weaponsItemsCargo _lootable; 
  // Items include other containers like uniforms and vests 
  { 
   _container addItemCargoGlobal [_x, 1]; 
  } forEach itemCargo _lootable; 
  // Backpacks aren't considered itemCargo; add them now 
  { 
   _container addBackpackCargoGlobal [_x, 1]; 
  } forEach backpackCargo _lootable; 
  { 
   _container addMagazineAmmoCargo [_x select 0, 1, _x select 1]; 
  } forEach magazinesAmmoCargo _lootable; 
 
  // Cleanse the fleeced container 
  clearWeaponCargoGlobal _lootable; 
  clearItemCargoGlobal _lootable; 
  clearBackpackCargoGlobal _lootable; 
  clearMagazineCargoGlobal _lootable; 
 
  private _looted = _lootable getVariable [""LootTaken"", false]; 
  if(!_looted) then { 
   _countContainers = _countContainers + 1; 
   _lootable setVariable [""LootTaken"", true, true]; 
  }; 
 }; 
}; 
 
_targets = _targets select {!alive _x}; 
{[_x, _magicBox] call _lootBodies} forEach _targets; 
{[_x, _magicBox] call _lootBodies} forEach _weaponHolders; 
systemChat format [""Looted %1 bodies and %2 containers"", _countBodies, _countContainers]; 
_countBodies + _countContainers;"
gC3e632v,Untitled,RenSafaray,Java,Tuesday 2nd of April 2024 12:27:26 PM CDT,"import java.util.Arrays; // Импортируем класс Arrays для вывода массивов
import java.util.Scanner; // Импортируем класс Scanner для считывания данных с клавиатуры

public class lab3_15 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Создаем объект класса Scanner для считывания данных с клавиатуры

        // Считывание размеров матрицы
        System.out.print(""Введите количество строк матрицы: ""); // Выводим сообщение на экран с просьбой ввести количество строк матрицы
        int m = scanner.nextInt(); // Считываем количество строк матрицы с клавиатуры и сохраняем его в переменной m
        System.out.print(""Введите количество столбцов матрицы: ""); // Выводим сообщение на экран с просьбой ввести количество столбцов матрицы
        int n = scanner.nextInt(); // Считываем количество столбцов матрицы с клавиатуры и сохраняем его в переменной n

        // Считывание элементов матрицы
        int[][] matrix = new int[m][n]; // Создаем матрицу размером m на n
        for (int i = 0; i < m; i++) { // Цикл по строкам матрицы
            for (int j = 0; j < n; j++) { // Цикл по столбцам матрицы
                matrix[i][j] = scanner.nextInt(); // Считываем элемент матрицы с клавиатуры и сохраняем его в матрице по индексу i, j
            }
        }

        // Вывод исходной матрицы
        System.out.println(""Исходная матрица:""); // Выводим сообщение на экран с названием матрицы
        for (int[] row : matrix) { // Цикл по строкам матрицы
            System.out.println(Arrays.toString(row)); // Выводим строку матрицы на экран в формате массива
        }

        // Вычисление среднего арифметического для каждой строки
        double[] averages = new double[m]; // Создаем массив размером m для хранения средних арифметических значений строк
        for (int i = 0; i < m; i++) { // Цикл по строкам матрицы
            double sum = 0; // Создаем переменную sum для хранения суммы элементов строки
            for (int j = 0; j < n; j++) { // Цикл по столбцам матрицы
                sum += matrix[i][j]; // Добавляем элемент матрицы к сумме
            }
            averages[i] = sum / n; // Вычисляем среднее арифметическое значение строки и сохраняем его в массиве averages по индексу i
        }

        // Вывод среднего арифметического для каждой строки
        System.out.println(""Среднее арифметическое для каждой строки:""); // Выводим сообщение на экран с названием массива
        for (double average : averages) { // Цикл по элементам массива averages
            System.out.println(average); // Выводим элемент массива на экран
        }

        // Замена элементов матрицы в соответствии с правилами
        for (int i = 0; i < m; i++) { // Цикл по строкам матрицы
            for (int j = 0; j < n; j++) { // Цикл по столбцам матрицы
                if (matrix[i][j] % 2 == 0) { // Проверяем, делится ли элемент матрицы на 2 без остатка
                    matrix[i][j] = 2; // Если да, то заменяем его на 2
                } else if (matrix[i][j] % 3 == 0) { // Проверяем, делится ли элемент матрицы на 3 без остатка
                    matrix[i][j] = 3; // Если да, то заменяем его на 3
                }
            }
        }

        // Вывод результирующей матрицы
        System.out.println(""Результирующая матрица:""); // Выводим сообщение на экран с названием матрицы
        for (int[] row : matrix) { // Цикл по строкам матрицы
            System.out.println(Arrays.toString(row)); // Выводим строку матрицы на экран в формате массива
        }
    }
}
"
TxCbz6Et,Untitled,RenSafaray,Java,Tuesday 2nd of April 2024 12:20:37 PM CDT,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class lab2_15 {

    // Объявляем статический класс Student (Студент)
    public static class Student {
        // Объявляем переменные для хранения данных о студенте
        private String fullName; // ФИО
        private int course; // Курс
        private String faculty; // Факультет
        private int mathGrade; // Оценка по математике
        private int physicsGrade; // Оценка по физике
        private int programmingGrade; // Оценка по программированию
        private int statisticsGrade; // Оценка по статистике

        // Создаем конструктор для инициализации объекта класса Student
        public Student(String fullName, int course, String faculty) {
            this.fullName = fullName;
            this.course = course;
            this.faculty = faculty;
            this.mathGrade = 0;
            this.physicsGrade = 0;
            this.programmingGrade = 0;
            this.statisticsGrade = 0;
        }

        // Создаем методы для установки оценок студента
        public void setMathGrade(int mathGrade) {
            this.mathGrade = mathGrade;
        }

        public void setPhysicsGrade(int physicsGrade) {
            this.physicsGrade = physicsGrade;
        }

        public void setProgrammingGrade(int programmingGrade) {
            this.programmingGrade = programmingGrade;
        }

        public void setStatisticsGrade(int statisticsGrade) {
            this.statisticsGrade = statisticsGrade;
        }

        // Создаем метод для проверки, сдал ли студент сессию
        public boolean passedSession() {
            return mathGrade >= 50 && physicsGrade >= 50 && programmingGrade >= 50 && statisticsGrade >= 50;
        }
    }

    // Объявляем статический класс Subject (Предмет)
    public static class Subject {
        // Объявляем переменные для хранения данных о предмете
        private int course; // Курс
        private String name; // Название
        private String teacherFullName; // ФИО преподавателя
        private int hoursPerSemester; // Количество часов в семестре

        // Создаем конструктор для инициализации объекта класса Subject
        public Subject(int course, String name, String teacherFullName, int hoursPerSemester) {
            this.course = course;
            this.name = name;
            this.teacherFullName = teacherFullName;
            this.hoursPerSemester = hoursPerSemester;
        }
    }

    // Объявляем статический класс CourseWork (Курсовая работа)
    public static class CourseWork {
        // Объявляем переменные для хранения данных о курсовой работе
        private String subject_; // Предмет
        private String teacherName; // ФИО преподавателя
        private String student_; // ФИО студента
        private String theme; // Тема
        private int grade; // Оценка

        // Создаем конструктор для инициализации объекта класса CourseWork
        public CourseWork(String subject_, String teacherName, String student_, String theme, int grade) {
            this.subject_ = subject_;
            this.teacherName = teacherName;
            this.student_ = student_;
            this.theme = theme;
            this.grade = grade;
        }
    }

    // Создаем главный метод main
    public static void main(String[] args) {
        // Создаем объект Scanner для чтения данных с клавиатуры
        Scanner scanner = new Scanner(System.in);

        // Создаем объекты HashMap для хранения студентов, предметов и курсовых работ
        Map<Integer, Student> students = new HashMap<>();
        Map<Integer, Subject> subjects = new HashMap<>();
        Map<Integer, CourseWork> courseWorks = new HashMap<>();

        // Создаем флаг для выхода из цикла
        boolean exit = false;

        // Создаем цикл while для отображения меню и выполнения операций
        while (!exit) {
            // Выводим меню на экран
            System.out.println(""\n1. Добавить студента"");
            System.out.println(""2. Добавить предмет"");
            System.out.println(""3. Добавить курсовую работу"");
            System.out.println(""0. Выход"");
            System.out.println(""Ваш выбор: "");

            // Считываем выбор пользователя
            String operation = scanner.nextLine();

            // Используем оператор switch для выбора операции
            switch (operation) {
                // Добавление студента
                case ""1"":
                    // Считываем данные о студенте
                    System.out.print(""Введите ФИО: "");
                    String fullName = scanner.nextLine();
                    System.out.print(""Введите курс (от 1 до 5): "");
                    int course = scanner.nextInt();

                    // Проверяем, входит ли курс в диапазон от 1 до 5
                    if (course < 1 || course > 5) {
                        System.out.println(""Неверный курс. Пожалуйста, введите курс от 1 до 5."");
                        break;
                    }

                    scanner.nextLine(); // Считываем символ новой строки после nextInt()

                    System.out.print(""Введите факультет: "");
                    String faculty = scanner.nextLine();

                    // Создаем объект класса Student и добавляем его в HashMap
                    Student student = new Student(fullName, course, faculty);

                    System.out.print(""Введите баллы по математике: "");
                    int mathGrade = Integer.parseInt(scanner.nextLine());
                    student.setMathGrade(mathGrade);

                    System.out.print(""Введите баллы по физике: "");
                    int physicsGrade = Integer.parseInt(scanner.nextLine());
                    student.setPhysicsGrade(physicsGrade);

                    System.out.print(""Введите баллы по программированию: "");
                    int programmingGrade = Integer.parseInt(scanner.nextLine());
                    student.setProgrammingGrade(programmingGrade);

                    System.out.print(""Введите баллы по статистике: "");
                    int statisticsGrade = Integer.parseInt(scanner.nextLine());
                    student.setStatisticsGrade(statisticsGrade);

                    students.put(student.hashCode(), student);

                    // Проверяем, сдал ли студент сессию
                    if (student.passedSession()) {
                        System.out.println(""Студент сдал сессию."");
                    } else {
                        System.out.println(""Студент не сдал сессию."");
                    }
                    break;

                // Добавление предмета
                case ""2"":
                    // Считываем данные о предмете
                    System.out.print(""Введите курс (от 1 до 5): "");
                    int subjectCourse = scanner.nextInt();

                    // Проверяем, входит ли курс в диапазон от 1 до 5
                    if (subjectCourse < 1 || subjectCourse > 5) {
                        System.out.println(""Неверный курс. Пожалуйста, введите курс от 1 до 5."");
                        break;
                    }

                    scanner.nextLine(); // Считываем символ новой строки после nextInt()

                    System.out.print(""Введите название предмета: "");
                    String name = scanner.nextLine();
                    System.out.print(""Введите ФИО преподавателя: "");
                    String teacherFullName = scanner.nextLine();
                    System.out.print(""Введите количество часов за семестр: "");
                    int hoursPerSemester = scanner.nextInt();

                    // Создаем объект класса Subject и добавляем его в HashMap
                    Subject subject = new Subject(subjectCourse, name, teacherFullName, hoursPerSemester);
                    subjects.put(subject.hashCode(), subject);

                    System.out.println(""Предмет успешно добавлен."");
                    break;

                // Добавление курсовой работы
                case ""3"":
                    // Считываем данные о курсовой работе
                    System.out.print(""Введите название предмета: "");
                    String subjectName = scanner.nextLine();

                    System.out.print(""Введите ФИО преподавателя: "");
                    String teacherName = scanner.nextLine();

                    System.out.print(""Введите ФИО студента: "");
                    String studentFullName = scanner.nextLine();

                    System.out.print(""Введите тему курсовой работы: "");
                    String theme = scanner.nextLine();
                    System.out.print(""Введите оценку (от 2 до 5): "");
                    int grade = scanner.nextInt();

                    // Проверяем, входит ли оценка в диапазон от 2 до 5
                    if (grade < 2 || grade > 5) {
                        System.out.println(""Неверная оценка. Пожалуйста, введите оценку от 2 до 5."");
                        break;
                    }

                    // Создаем объект класса CourseWork и добавляем его в HashMap
                    CourseWork courseWork = new CourseWork(subjectName, teacherName, studentFullName, theme, grade);
                    courseWorks.put(courseWork.hashCode(), courseWork);

                    System.out.println(""Курсовая работа успешно добавлена."");
                    break;

                // Выход из программы
                case ""0"":
                    exit = true;
                    break;

                // Неверный выбор
                default:
                    System.out.println(""Неверный выбор. Пожалуйста, выберите снова."");
            }
        }
    }
}"
zaz9LA2c,Untitled,Derga,C++,Tuesday 2nd of April 2024 11:59:38 AM CDT,"#define _USE_MATH_DEFINES 
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <iostream>
#include <set>
#include <numeric>
#include <queue>
#include <map>
#include <iomanip>
#include <sstream>


using namespace std;

typedef long long ll;
typedef unsigned long long ull;

ull Sol1(ull a, ull b) {

    ull S = a * b;
    ull l = 0; // поддерживается инвариант, что (l * l) < S; 
    ull r = max(a, b); // поддерживается инвариант, что (r * r) >= S;
    while (l + 1 < r)
    {
        ull m = (l + r) / 2;
        if (m * m >= S)
        {
            r = m;
        }
        else {
            l = m;
        }
    }

    if ((ull)r * (ull)r == S) {
        return r;
    }

    return 0;
}

ull Sol2(ull a, ull b) {
    ull S = a * b;
    ull l = 0; // поддерживается инвариант, что (l * l) < S; 
    ull r = max(a, b); // поддерживается инвариант, что (r * r) >= S;
    
    if (l + 1 == r && r * r == S) {
        return r;
    }

    while (l + 1 < r)
    {
        ull m = (l + r) / 2;
        if (m * m == S)
        {
            return m;
        }
        if (m * m > S) {
            r = m;
        }
        else {
            l = m;
        }
    }
    
    return 0;
}

int main()
{
    /*
    for (ull i = 1; i < 100000000000000; ++i) {
        for (ull j = 1; i * j <= 100000000000000; ++j) {
            if (Sol1(i, j) != Sol2(i, j)) {
                cout << i << ' ' << j << '\n' << Sol1(i, j) << '\n' << Sol2(i, j) << '\n';
            }
        }
    }
    */

    ull a, b;
    cin >> a >> b;

    ull S = a * b;
    ull l = 0; // поддерживается инвариант, что (l * l) < S; 
    ull r = max(a, b); // поддерживается инвариант, что (r * r) >= S;

    if (l + 1 == r && r * r == S) {
        return r;
    }

    while (l + 1 < r)
    {
        ull m = (l + r) / 2;
        if (m * m == S)
        {
            cout << m;
            return;
        }
        if (m * m > S) {
            r = m;
        }
        else {
            l = m;
        }
    }

    cout << 0;
    return 0;
}"
