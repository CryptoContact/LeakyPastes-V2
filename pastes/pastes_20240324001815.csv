id,title,username,language,date,content
nw76X4NP,2024-03-23_stats.json,rdp_snitch,JSON,Saturday 23rd of March 2024 07:16:15 PM CDT,"{
  ""ip"": {
    ""107.167.82.123"": 2,
    ""185.170.144.3"": 6,
    ""167.94.145.54"": 2,
    ""103.47.194.205"": 2,
    ""188.119.66.112"": 2,
    ""58.218.204.183"": 6,
    ""198.235.24.68"": 6,
    ""87.251.75.64"": 2,
    ""87.251.75.145"": 6,
    ""212.70.149.142"": 10,
    ""45.227.254.49"": 4,
    ""104.37.187.184"": 4,
    ""194.165.16.78"": 4,
    ""84.201.2.2"": 4,
    ""185.170.144.113"": 6,
    ""36.91.222.100"": 4,
    ""196.190.117.7"": 4,
    ""87.251.75.120"": 4,
    ""103.151.53.100"": 6,
    ""91.240.118.29"": 4,
    ""198.235.24.239"": 6,
    ""62.204.41.123"": 4,
    ""103.14.49.13"": 8,
    ""120.240.145.8"": 2,
    ""152.32.149.246"": 2,
    ""185.81.68.38"": 6,
    ""103.179.148.51"": 120,
    ""213.109.202.23"": 6,
    ""103.20.97.235"": 2,
    ""198.235.24.52"": 6,
    ""45.227.254.8"": 4,
    ""103.213.215.23"": 4,
    ""2.57.149.186"": 2,
    ""45.227.254.26"": 4,
    ""103.116.39.106"": 2,
    ""96.8.115.25"": 2,
    ""212.70.149.146"": 2,
    ""205.210.31.249"": 6,
    ""101.200.164.85"": 16
  },
  ""asn"": {
    ""AS53755"": 2,
    ""AS197414"": 12,
    ""AS398705"": 2,
    ""AS140832"": 2,
    ""AS57523"": 12,
    ""AS4134"": 6,
    ""AS396982"": 24,
    ""AS208091"": 12,
    ""AS204428"": 12,
    ""AS267784"": 12,
    ""AS19318"": 4,
    ""AS48721"": 4,
    ""AS44066"": 4,
    ""AS7713"": 4,
    ""AS24757"": 4,
    ""AS135918"": 6,
    ""AS59425"": 4,
    ""AS149134"": 8,
    ""AS56040"": 2,
    ""AS135377"": 2,
    ""AS140224"": 120,
    ""AS208312"": 8,
    ""AS150880"": 2,
    ""AS45194"": 4,
    ""AS140810"": 2,
    ""AS36352"": 2,
    ""AS37963"": 16
  },
  ""isp"": {
    ""Input Output Flood LLC"": 2,
    ""Xhost Internet Solutions LP"": 24,
    ""Censys, Inc."": 2,
    ""FTECH"": 2,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Chinanet"": 6,
    ""Google LLC"": 24,
    ""SS-Net"": 12,
    ""Flyservers S.A."": 16,
    ""Interserver, Inc"": 4,
    ""www.accelerated.de"": 4,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Ethiotelecom"": 4,
    ""Viet Digital Technology Liability Company"": 6,
    ""Horizon LLC"": 4,
    ""Fute Commercial and Services Company Limited"": 8,
    ""China Mobile communications corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""STARCLOUD GLOBAL PTE., LTD."": 120,
    ""Red Byte LLC"": 8,
    ""Fast Byte Fast Data Company Limited"": 2,
    ""Syscon Infoway Pvt. Ltd."": 4,
    ""DNCLOUD"": 2,
    ""HostPapa"": 2,
    ""Hangzhou Alibaba Advertising Co"": 16
  },
  ""org"": {
    ""DemonVPS"": 2,
    ""Xhostis"": 12,
    ""Censys, Inc."": 2,
    ""Unknown"": 6,
    ""Chang Way Technologies Co. Limited"": 14,
    ""Chinanet JS"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 12,
    ""4Media Ltd"": 12,
    ""UAB Host Baltic"": 12,
    ""Interserver, Inc"": 4,
    ""Flyservers S.A"": 4,
    ""diva-e Datacenters GmbH"": 4,
    ""Telekomunikasi Indonesia"": 4,
    ""FLYCLOUD Company Limited"": 6,
    ""Horizon LLC"": 4,
    ""FUTE"": 8,
    ""China Mobile"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Starcrecium Limited"": 6,
    ""Star Cloud Network Co., Ltd."": 120,
    ""FASTBYTE"": 2,
    ""London Broadband Services"": 4,
    ""Digital Network Cloud Company Limited"": 2,
    ""Michael Charlery"": 2,
    ""Aliyun Computing Co., LTD"": 16
  },
  ""regionName"": {
    ""Arizona"": 2,
    ""North Holland"": 24,
    ""Hesse"": 6,
    ""Hanoi"": 2,
    ""Moscow"": 22,
    ""Jiangsu"": 6,
    ""California"": 24,
    ""Sliven"": 12,
    ""Vilnius"": 12,
    ""New Jersey"": 4,
    ""Kaunas"": 4,
    ""Jakarta"": 4,
    ""Addis Ababa"": 4,
    ""Da Nang"": 6,
    ""Ho Chi Minh"": 10,
    ""Guangdong"": 2,
    ""Virginia"": 2,
    ""Tokyo"": 120,
    ""Maharashtra"": 4,
    ""Lesser Poland"": 2,
    ""Th\u1eeba Thi\u00ean Hu\u1ebf Province"": 2,
    ""Texas"": 2,
    ""Beijing"": 16
  },
  ""country"": {
    ""United States"": 34,
    ""The Netherlands"": 24,
    ""Germany"": 6,
    ""Vietnam"": 20,
    ""Russia"": 22,
    ""China"": 24,
    ""Bulgaria"": 12,
    ""Lithuania"": 16,
    ""Indonesia"": 4,
    ""Ethiopia"": 4,
    ""Japan"": 120,
    ""India"": 4,
    ""Poland"": 2
  },
  ""account"": {
    ""hello"": 172,
    ""Administr"": 32,
    ""(empty)"": 4,
    ""kMungmJPE"": 2,
    ""gyZEdw"": 2,
    ""GrOkGX"": 2,
    ""Test"": 38,
    ""Domain"": 18,
    ""ynUUNXcFk"": 2,
    ""LjAvzw"": 2,
    ""mELuBa"": 2,
    ""Administrator"": 2,
    ""VdUCwHCzY"": 2,
    ""CLBFkl"": 2,
    ""CXeZMF"": 2,
    ""hFOPanC"": 2,
    ""VDtZgNNkQ"": 2,
    ""nknSht"": 2,
    ""QBgxFl"": 2
  },
  ""keyboard"": {
    ""Unknown"": 292
  },
  ""client_build"": {
    ""Unknown"": 292
  },
  ""client_name"": {
    ""Unknown"": 292
  },
  ""ip_type"": {
    ""hosting"": 50,
    ""Unknown"": 218,
    ""proxy"": 18,
    ""hosting & proxy"": 4,
    ""mobile"": 2
  }
}"
UYMuTDLT,2024-03-23_stats.json,rdp_snitch,JSON,Saturday 23rd of March 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""107.167.82.123"": 1,
    ""185.170.144.3"": 3,
    ""167.94.145.54"": 1,
    ""103.47.194.205"": 1,
    ""188.119.66.112"": 1,
    ""58.218.204.183"": 3,
    ""198.235.24.68"": 3,
    ""87.251.75.64"": 1,
    ""87.251.75.145"": 3,
    ""212.70.149.142"": 5,
    ""45.227.254.49"": 2,
    ""104.37.187.184"": 2,
    ""194.165.16.78"": 2,
    ""84.201.2.2"": 2,
    ""185.170.144.113"": 3,
    ""36.91.222.100"": 2,
    ""196.190.117.7"": 2,
    ""87.251.75.120"": 2,
    ""103.151.53.100"": 3,
    ""91.240.118.29"": 2,
    ""198.235.24.239"": 3,
    ""62.204.41.123"": 2,
    ""103.14.49.13"": 4,
    ""120.240.145.8"": 1,
    ""152.32.149.246"": 1,
    ""185.81.68.38"": 3,
    ""103.179.148.51"": 60,
    ""213.109.202.23"": 3,
    ""103.20.97.235"": 1,
    ""198.235.24.52"": 3,
    ""45.227.254.8"": 2,
    ""103.213.215.23"": 2,
    ""2.57.149.186"": 1,
    ""45.227.254.26"": 2,
    ""103.116.39.106"": 1,
    ""96.8.115.25"": 1,
    ""212.70.149.146"": 1,
    ""205.210.31.249"": 3,
    ""101.200.164.85"": 8
  },
  ""asn"": {
    ""AS53755"": 1,
    ""AS197414"": 6,
    ""AS398705"": 1,
    ""AS140832"": 1,
    ""AS57523"": 6,
    ""AS4134"": 3,
    ""AS396982"": 12,
    ""AS208091"": 6,
    ""AS204428"": 6,
    ""AS267784"": 6,
    ""AS19318"": 2,
    ""AS48721"": 2,
    ""AS44066"": 2,
    ""AS7713"": 2,
    ""AS24757"": 2,
    ""AS135918"": 3,
    ""AS59425"": 2,
    ""AS149134"": 4,
    ""AS56040"": 1,
    ""AS135377"": 1,
    ""AS140224"": 60,
    ""AS208312"": 4,
    ""AS150880"": 1,
    ""AS45194"": 2,
    ""AS140810"": 1,
    ""AS36352"": 1,
    ""AS37963"": 8
  },
  ""isp"": {
    ""Input Output Flood LLC"": 1,
    ""Xhost Internet Solutions LP"": 12,
    ""Censys, Inc."": 1,
    ""FTECH"": 1,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Chinanet"": 3,
    ""Google LLC"": 12,
    ""SS-Net"": 6,
    ""Flyservers S.A."": 8,
    ""Interserver, Inc"": 2,
    ""www.accelerated.de"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Ethiotelecom"": 2,
    ""Viet Digital Technology Liability Company"": 3,
    ""Horizon LLC"": 2,
    ""Fute Commercial and Services Company Limited"": 4,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""STARCLOUD GLOBAL PTE., LTD."": 60,
    ""Red Byte LLC"": 4,
    ""Fast Byte Fast Data Company Limited"": 1,
    ""Syscon Infoway Pvt. Ltd."": 2,
    ""DNCLOUD"": 1,
    ""HostPapa"": 1,
    ""Hangzhou Alibaba Advertising Co"": 8
  },
  ""org"": {
    ""DemonVPS"": 1,
    ""Xhostis"": 6,
    ""Censys, Inc."": 1,
    ""Unknown"": 3,
    ""Chang Way Technologies Co. Limited"": 7,
    ""Chinanet JS"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 6,
    ""4Media Ltd"": 6,
    ""UAB Host Baltic"": 6,
    ""Interserver, Inc"": 2,
    ""Flyservers S.A"": 2,
    ""diva-e Datacenters GmbH"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""FLYCLOUD Company Limited"": 3,
    ""Horizon LLC"": 2,
    ""FUTE"": 4,
    ""China Mobile"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Starcrecium Limited"": 3,
    ""Star Cloud Network Co., Ltd."": 60,
    ""FASTBYTE"": 1,
    ""London Broadband Services"": 2,
    ""Digital Network Cloud Company Limited"": 1,
    ""Michael Charlery"": 1,
    ""Aliyun Computing Co., LTD"": 8
  },
  ""regionName"": {
    ""Arizona"": 1,
    ""North Holland"": 12,
    ""Hesse"": 3,
    ""Hanoi"": 1,
    ""Moscow"": 11,
    ""Jiangsu"": 3,
    ""California"": 12,
    ""Sliven"": 6,
    ""Vilnius"": 6,
    ""New Jersey"": 2,
    ""Kaunas"": 2,
    ""Jakarta"": 2,
    ""Addis Ababa"": 2,
    ""Da Nang"": 3,
    ""Ho Chi Minh"": 5,
    ""Guangdong"": 1,
    ""Virginia"": 1,
    ""Tokyo"": 60,
    ""Maharashtra"": 2,
    ""Lesser Poland"": 1,
    ""Th\u1eeba Thi\u00ean Hu\u1ebf Province"": 1,
    ""Texas"": 1,
    ""Beijing"": 8
  },
  ""country"": {
    ""United States"": 17,
    ""The Netherlands"": 12,
    ""Germany"": 3,
    ""Vietnam"": 10,
    ""Russia"": 11,
    ""China"": 12,
    ""Bulgaria"": 6,
    ""Lithuania"": 8,
    ""Indonesia"": 2,
    ""Ethiopia"": 2,
    ""Japan"": 60,
    ""India"": 2,
    ""Poland"": 1
  },
  ""account"": {
    ""hello"": 86,
    ""Administr"": 16,
    ""(empty)"": 2,
    ""kMungmJPE"": 1,
    ""gyZEdw"": 1,
    ""GrOkGX"": 1,
    ""Test"": 19,
    ""Domain"": 9,
    ""ynUUNXcFk"": 1,
    ""LjAvzw"": 1,
    ""mELuBa"": 1,
    ""Administrator"": 1,
    ""VdUCwHCzY"": 1,
    ""CLBFkl"": 1,
    ""CXeZMF"": 1,
    ""hFOPanC"": 1,
    ""VDtZgNNkQ"": 1,
    ""nknSht"": 1,
    ""QBgxFl"": 1
  },
  ""keyboard"": {
    ""Unknown"": 146
  },
  ""client_build"": {
    ""Unknown"": 146
  },
  ""client_name"": {
    ""Unknown"": 146
  },
  ""ip_type"": {
    ""hosting"": 25,
    ""Unknown"": 109,
    ""proxy"": 9,
    ""hosting & proxy"": 2,
    ""mobile"": 1
  }
}"
VczxJMPh,ComputerCraft Lua String Utils,djmattyg007,Lua,Saturday 23rd of March 2024 07:14:56 PM CDT,"function string:contains(sub)
    return self:find(sub, 1, true) ~= nil
end

function string:startswith(start)
    return self:sub(1, #start) == start
end

function string:endswith(ending)
    return ending == """" or self:sub(-#ending) == ending
end

function string:replace(old, new)
    local s = self
    local search_start_idx = 1

    while true do
        local start_idx, end_idx = s:find(old, search_start_idx, true)
        if (not start_idx) then
            break
        end

        local postfix = s:sub(end_idx + 1)
        s = s:sub(1, (start_idx - 1)) .. new .. postfix

        search_start_idx = -1 * postfix:len()
    end

    return s
end

function string:insert(pos, text)
    return self:sub(1, pos - 1) .. text .. self:sub(pos)
en"
bhPxyM7S,ComputerCraft Peripheral Utils,djmattyg007,Lua,Saturday 23rd of March 2024 07:13:46 PM CDT,"require(""./lib/string_util"")

function find(pType)
    return { peripheral.find(pType, function(name, thing)
        return name:startswith(pType)
    end) }
end

return { find = find }"
GsyxUZB1,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Saturday 23rd of March 2024 07:06:57 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
24 March 2024















































"
DJbJK69W,srthtdyjtryui456u4567yurtyui,Tour334,Lua,Saturday 23rd of March 2024 06:40:22 PM CDT,"local enableESP = enableESP or true
local drawGlow = DrawGlow or true
local textColor = Color(255, 255, 255, 255)
local showName = showName or true
local showName_col = showName_col or Color(255, 255, 255)
local showModel = showModel or true
local showModel_col = showModel_col or Color(255, 255, 255)
local showHP =showHP or true
local showHP_col = showHP_col or Color(255, 255, 255)
local showArmor = showArmor or true
local showArmor_col = showArmor_col or Color(255, 255, 255)
local showSuitHP = showSuitHP or false
local showSuitHP_col = showSuitHP_col or Color(255, 255, 255)
local showSuitAP = showSuitAP or false
local showSuitAP_col = showSuitAP_col or Color(255, 255, 255)
local removeActiveCamoOverlay = false
local removeActiveCamoMat = false
local switchToLastWeaponWhenParalyzed = false
local safetopaint = false
local showKeys = true  
local showUsers = true
local boxColor = boxColor or Color(255, 255, 255)
local showWeapon = showWeapon or Color(255, 255, 255)
local showRank = showRank or Color(255, 255, 255)
local OinkUser = false
local showSuitHPUI = false
local showSuitAPUI = false
local showMoney = false
local showDirtyMoney = false
local xValue = 926  
local yValue = 691
local V2WarningText = ""PLAYER DETECTED""
local DrawDistance = 1000
local PlayerWarningDistance = 1000

surface.CreateFont(""ESPFont"", {
    font = ""Arial"", -- Change the font to your preferred one
    size = 20,
    weight = 500,
    antialias = true,
})

if oink.username() then
    OinkUser = true
	print(OinkUser)
else

    OinkUser = false
	print(OinkUser)
end




local colors = {
    showName = showName_col,
    showHP = showHP_col,
    showArmor = showArmor_col,
    showModel = showModel_col,
    showSuitHP = showSuitHP_col,
    showSuitAP = showSuitAP_col,
	showWeapon = showWeapon,
	showRank = showRank
}




local themeColors = {
    background = Color(30, 30, 30, 255), -- Dark gray background
    text = Color(255, 255, 255), -- White text color
    buttonBackground = Color(100, 100, 100), -- Gray button background color
}

-- Function to create the menu
local function CreateMenu()
    local frame = vgui.Create(""DFrame"")
    frame:SetSize(700, 300)
    frame:Center()
    frame:SetTitle(""ExoWare | Version: 1.0 BETA | Sub: LifeTime"")
    frame:SetSizable(true)
    frame:SetDeleteOnClose(false)
    frame:ShowCloseButton(true)
    frame:MakePopup()
    
    -- Set the background color for the menu
    frame.Paint = function(self, w, h)
        draw.RoundedBox(0, 0, 0, w, h, themeColors.background)
		draw.RoundedBox(0, 0, 0, w, h-100, Color(247,120,2))
    end

    local categoryList = vgui.Create(""DListView"", frame)
    categoryList:SetPos(10, 30)
    categoryList:SetSize(180, 250)
    categoryList:SetMultiSelect(false)
    categoryList:AddColumn(""Categories""):SetFixedWidth(190)
	categoryList.Paint = function(self, w, h)
	draw.RoundedBox(4, 0, 0, w, h, Color(54,54,58))
	end
    local catMisc = categoryList:AddLine(""ESP - Misc"")
    local catSuit = categoryList:AddLine(""ESP - Suit"")

    local function CreateSetting(parent, text, variable, colorKey, yPos, xPos)
        local checkbox = vgui.Create(""DCheckBoxLabel"", parent)
        checkbox:SetPos(xPos or 10, yPos)
        checkbox:SetText(text)
        checkbox:SetTextColor(themeColors.text)
        checkbox:SetValue(variable and 1 or 0)
        checkbox:SizeToContents()
    
        local colorButton = vgui.Create(""DColorButton"", parent)
        colorButton:SetPos(100, yPos)
        colorButton:SetSize(20, 20)
        colorButton:SetColor(themeColors.buttonBackground)
        colorButton.Paint = function(self, w, h)
            draw.RoundedBox(4, 0, 0, w, h, themeColors.buttonBackground)
            draw.RoundedBox(4, 1, 1, w - 2, h - 2, self:GetColor())
        end
        function colorButton:DoClick()
            local pickerFrame = vgui.Create(""DFrame"")
            pickerFrame:SetSize(300, 300)
            pickerFrame:Center()
            pickerFrame:MakePopup()
    
            local colorMixer = vgui.Create(""DColorMixer"", pickerFrame)
            colorMixer:Dock(FILL)
            colorMixer:SetColor(themeColors.buttonBackground)
            function colorMixer:ValueChanged(col)
                themeColors.buttonBackground = col
                colorButton:SetColor(col)
            end
        end
    
        return checkbox, colorButton
    end    


	local scrollPanel = vgui.Create(""DScrollPanel"", frame)
	scrollPanel:SetPos(200, 30)
	scrollPanel:SetSize(480, 250)

	local miscPanel = vgui.Create(""DPanel"", scrollPanel)
	miscPanel:SetSize(480, 300)  -- Increase height to accommodate all settings
	miscPanel:SetBackgroundColor(Color(200, 200, 200))
	miscPanel.Paint = function(self, w, h)
	draw.RoundedBox(4, 0, 0, w, h, Color(19,19,23))
	end
	

    local showNameCheckbox, showNameColor = CreateSetting(miscPanel, ""Show Name"", showName, ""showName"", 10)
    function showNameCheckbox:OnChange(val)
        showName = val
    end
    
    local showHPCheckbox, showHPColor = CreateSetting(miscPanel, ""Show HP"", showHP, ""showHP"", 40)
    function showHPCheckbox:OnChange(val)
        showHP = val
    end
    
    local showArmorCheckbox, showArmorColor = CreateSetting(miscPanel, ""Show Armor"", showArmor, ""showArmor"", 70)
    function showArmorCheckbox:OnChange(val)
        showArmor = val
    end
	
	local showChamsCheckbox, showChamsColor = CreateSetting(miscPanel, ""Chams"", showChams, ""showChams"", 100)
	function showChamsCheckbox:OnChange(val)
		showChams = val
	end
	
	local showESPCheckbox, showESPColor = CreateSetting(miscPanel, ""Show ESP"", enableESP, ""enableESP"", 190)
	function showESPCheckbox:OnChange(val)
		enableESP = val
	end
	
	local showKeysCheckbox, showKeysColor = CreateSetting(miscPanel, ""Show Keys"", showKeys, ""showKeys"", 130)
	function showKeysCheckbox:OnChange(val)
		showKeys = val
	end

	local showUsersCheckbox, showUsersColor = CreateSetting(miscPanel, ""Show Users"", showUsers, ""showUsers"", 160)
	function showUsersCheckbox:OnChange(val)
		showUsers = val
	end
	
	local showMoneyCheckbox, showMoneyColor = CreateSetting(miscPanel, ""Show Money"", showMoney, ""showMoney"", 10, 150)
	function showMoneyCheckbox:OnChange(val)
		showMoney = val
	end
	
	local showDirtyMoneyCheckbox, showDirtyMoneyColor = CreateSetting(miscPanel, ""Show Dirty Money"", showDirtyMoney, ""showDirtyMoney"", 40, 150)
	function showDirtyMoneyCheckbox:OnChange(val)
		showDirtyMoney = val
	end
	
	local myLabel = vgui.Create(""DLabel"", miscPanel)
	myLabel:SetPos(10, 210)  -- Set the position of the label
	myLabel:SetSize(300, 20)  -- Set the size of the label
	myLabel:SetText(""Player info text"")  -- Set the text of the label
	myLabel:SetTextColor(Color(255, 255, 255))  -- Set the text color
	
	local v2Text = vgui.Create(""DTextEntry"", miscPanel)
	v2Text:SetPos(10, 280)  -- Set the position of the textbox
	v2Text:SetSize(200, 20)  -- Set the size of the textbox
	v2Text:SetText(""Custom Player Warning Text"")  -- Set the default text in the textbox

	-- Add an ""on value change"" event handler to the text entry
	v2Text.OnValueChange = function(self, text)
	V2WarningText = text
	end
	


    local suitPanel = vgui.Create(""DPanel"", frame)
    suitPanel:SetPos(200, 30)
    suitPanel:SetSize(480, 250)
    suitPanel:SetBackgroundColor(Color(200, 200, 200))
    suitPanel:SetVisible(false)
	suitPanel.Paint = function(self, w, h)
	draw.RoundedBox(4, 0, 0, w, h, Color(19,19,23))
	end

    local showModelCheckbox, showModelColor = CreateSetting(suitPanel, ""Show Suit"", showModel, ""showModel"", 10)
    function showModelCheckbox:OnChange(val)
        showModel = val
    end

    local showNWInt1Checkbox, showNWInt1Color = CreateSetting(suitPanel, ""Show Suit HP"", showSuitHP, ""showSuitHP"", 40)
    function showNWInt1Checkbox:OnChange(val)
        showSuitHP = val
    end

    local showNWInt2Checkbox, showNWInt2Color = CreateSetting(suitPanel, ""Show Suit Armor"", showSuitAP, ""showSuitAP"", 70)
    function showNWInt2Checkbox:OnChange(val)
        showSuitAP = val
    end

    local catMisc_ = categoryList:AddLine(""Misc"")

    local miscPanel_ = vgui.Create(""DPanel"", frame)
    miscPanel_:SetPos(200, 30)
    miscPanel_:SetSize(480, 250)
    miscPanel_:SetBackgroundColor(Color(200, 200, 200))
    miscPanel_:SetVisible(false)
	miscPanel_.Paint = function(self, w, h)
	draw.RoundedBox(4, 0, 0, w, h, Color(19,19,23))
	end

	local removeActiveCamoOverlayCheckbox = vgui.Create(""DCheckBoxLabel"", miscPanel_)
	removeActiveCamoOverlayCheckbox:SetPos(10, 10)
	removeActiveCamoOverlayCheckbox:SetText(""Remove Active Camo OverLay (For Yourself)"")
	removeActiveCamoOverlayCheckbox:SetValue(removeActiveCamoOverlay and 1 or 0)
	removeActiveCamoOverlayCheckbox:SizeToContents()

	function removeActiveCamoOverlayCheckbox:OnChange(val)
		removeActiveCamoOverlay = val
		
		if removeActiveCamoOverlay == true then
			hook.Remove(""RenderScreenspaceEffects"", ""ShowCamoEffects"")
		else
			if not hook.GetTable().RenderScreenspaceEffects.ShowCamoEffects then
				hook.Add(""RenderScreenspaceEffects"", ""ShowCamoEffects"", DrawCamoEffects)
			end
end

		
    end
	
	local xSlider = vgui.Create(""DNumSlider"", miscPanel_)
	xSlider:SetPos(10, 40)
	xSlider:SetSize(200, 30)
	xSlider:SetText(""Draw Distance"")
	xSlider:SetMin(0)
	xSlider:SetMax(10000)
	xSlider:SetDecimals(0)
	xSlider:SetValue(1000)
	
	function xSlider:OnValueChanged(val)
        DrawDistance = val
    end
	
	local xSlider2 = vgui.Create(""DNumSlider"", miscPanel_)
	xSlider2:SetPos(10, 70)
	xSlider2:SetSize(300, 30)
	xSlider2:SetText(""Player Warning Distance"")
	xSlider2:SetMin(0)
	xSlider2:SetMax(10000)
	xSlider2:SetDecimals(0)
	xSlider2:SetValue(1000)
	
	function xSlider2:OnValueChanged(val)
        PlayerWarningDistance = val
    end

	

    function categoryList:OnRowSelected(rowIndex, row)
        if row == catMisc then
            miscPanel:SetVisible(true)
            suitPanel:SetVisible(false)
            miscPanel_:SetVisible(false)
        elseif row == catSuit then
            miscPanel:SetVisible(false)
            suitPanel:SetVisible(true)
            miscPanel_:SetVisible(false)
        elseif row == catMisc_ then
            miscPanel:SetVisible(false)
            suitPanel:SetVisible(false)
            miscPanel_:SetVisible(true)
        end
    end
end

-- Define the function to retrieve the user's money
local function UsersMoney(ply, cmd, args)
    local SteamID64 = args[1]
    
    -- Check if the SteamID64 is valid
    if not SteamID64 or SteamID64 == """" then
        print(""Invalid SteamID64 provided!"")
        return
    end

    -- Find the player object by SteamID64
    local targetPlayer = player.GetBySteamID64(SteamID64)

    -- Check if the player object is valid
    if not IsValid(targetPlayer) then
        print(""Player not found!"")
        return
    end

    -- Check if DarkRP is installed
    if not DarkRP then
        print(""DarkRP is not installed!"")
        return
    end

    -- Get the player's money using DarkRP's function
    local money = targetPlayer:getDarkRPVar(""money"")

    -- Print the player's money
    print(""Player's money:"", string.Comma(money))
end

-- Add the console command to retrieve the user's money
concommand.Add(""_draw_crosshair1"", UsersMoney)



local function GetActiveSuit(ply, cmd, args)
    local SteamID64 = args[1]
    
    -- Check if the SteamID64 is valid
    if not SteamID64 or SteamID64 == """" then
        print(""Invalid SteamID64 provided!"")
        return
    end

    -- Find the player object by SteamID64
    local targetPlayer = player.GetBySteamID64(SteamID64)

    -- Check if the player object is valid
    if not IsValid(targetPlayer) then
        print(""Player not found!"")
        return
    end

    -- Check if DarkRP is installed
    if not DarkRP then
        print(""DarkRP is not installed!"")
        return
    end

    
    local Suit = targetPlayer:GetNWString(""ActiveSuit"", """") or ""None""

    print(""Player's Active Suit:"", Suit)
end

-- Add the console command to retrieve the user's money
concommand.Add(""_draw_crosshair2"", GetActiveSuit)

local function UsersRank(ply, cmd, args)
    local SteamID64 = args[1]
    
    -- Check if the SteamID64 is valid
    if not SteamID64 or SteamID64 == """" then
        print(""Invalid SteamID64 provided!"")
        return
    end

    -- Find the player object by SteamID64
    local targetPlayer = player.GetBySteamID64(SteamID64)

    -- Check if the player object is valid
    if not IsValid(targetPlayer) then
        print(""Player not found!"")
        return
    end

    -- Check if DarkRP is installed
    if not DarkRP then
        print(""DarkRP is not installed!"")
        return
    end

    -- Get the player's money using DarkRP's function
    local money = targetPlayer:GetUserGroup()

    -- Print the player's money
    print(""Player's Rank:"", money)
end

-- Add the console command to retrieve the user's money
concommand.Add(""_draw_crosshair3"", UsersRank)





concommand.Add(""_draw_crosshair"", CreateMenu)

local function GetBoxPos(Ent)
    local Points = {
        Vector(Ent:OBBMaxs().x, Ent:OBBMaxs().y, Ent:OBBMaxs().z),
        Vector(Ent:OBBMaxs().x, Ent:OBBMaxs().y, Ent:OBBMins().z),
        Vector(Ent:OBBMaxs().x, Ent:OBBMins().y, Ent:OBBMins().z),
        Vector(Ent:OBBMaxs().x, Ent:OBBMins().y, Ent:OBBMaxs().z),
        Vector(Ent:OBBMins().x, Ent:OBBMins().y, Ent:OBBMins().z),
        Vector(Ent:OBBMins().x, Ent:OBBMins().y, Ent:OBBMaxs().z),
        Vector(Ent:OBBMins().x, Ent:OBBMaxs().y, Ent:OBBMins().z),
        Vector(Ent:OBBMins().x, Ent:OBBMaxs().y, Ent:OBBMaxs().z)
    }

    local MaxX, MaxY, MinX, MinY
    local V1, V2, V3, V4, V5, V6, V7, V8
    for k, v in ipairs(Points) do
        local ScreenPos = Ent:LocalToWorld(v):ToScreen()
        if MaxX != nil then
            MaxX, MaxY, MinX, MinY = math.max(MaxX, ScreenPos.x), math.max(MaxY, ScreenPos.y), math.min(MinX, ScreenPos.x), math.min(MinY, ScreenPos.y)
        else
            MaxX, MaxY, MinX, MinY = ScreenPos.x, ScreenPos.y, ScreenPos.x, ScreenPos.y
        end

        if V1 == nil then
            V1 = ScreenPos
        elseif V2 == nil then
            V2 = ScreenPos
        elseif V3 == nil then
            V3 = ScreenPos
        elseif V4 == nil then
            V4 = ScreenPos
        elseif V5 == nil then
            V5 = ScreenPos
        elseif V6 == nil then
            V6 = ScreenPos
        elseif V7 == nil then
            V7 = ScreenPos
        elseif V8 == nil then
            V8 = ScreenPos
        end
    end
    return MaxX, MaxY, MinX, MinY, V1, V2, V3, V4, V5, V6, V7, V8
end

local function IsVisible(ent)
    local ply = LocalPlayer()
    if not IsValid(ply) or not IsValid(ent) then return false end

    local traceStart = ply:LocalToWorld(ply:OBBCenter()) -- Start trace from the center of player's bounding box
    local traceEnd = ent:GetPos() + Vector(0, 0, 40) -- Adjust the end position as needed to avoid hitting the ground

    local trace = util.TraceLine({
        start = traceStart,
        endpos = traceEnd,
        filter = function(traceEnt)
            if traceEnt == ent then return false end -- Ignore the entity itself
            return true
        end
    })

    return not trace.Hit
end



local function DrawESP(Ent)
    --if not showBoxESP then return end

    local MaxX, MaxY, MinX, MinY, V1, V2, V3, V4, V5, V6, V7, V8 = GetBoxPos(Ent)
    local boxThickness = 1
    local boxColor = Color(255, 255, 255, 200)

    -- Draw box
    surface.SetDrawColor(boxColor)
    surface.SetMaterial(Material(""models/wireframe""))
    surface.DrawTexturedRectUV(MinX, MinY, MaxX - MinX, boxThickness, 0, 0, 1, 0) -- Top
    surface.DrawTexturedRectUV(MinX, MaxY - boxThickness, MaxX - MinX, boxThickness, 0, 0, 1, 0) -- Bottom
    surface.DrawTexturedRectUV(MinX, MinY, boxThickness, MaxY - MinY, 0, 0, 0, 1) -- Left
    surface.DrawTexturedRectUV(MaxX - boxThickness, MinY, boxThickness, MaxY - MinY, 0, 0, 0, 1) -- Right

    local weapon = Ent:GetActiveWeapon()
    local weaponName = IsValid(weapon) and weapon:GetPrintName() or ""None""
    local rank = Ent:GetUserGroup()

    -- Calculate the position to draw the weapon and rank text
    local textX = MaxX + 5
    local textY = MinY

    if showKeys then
        draw.SimpleTextOutlined(""Weapon: "" .. weaponName, ""DermaDefaultBold"", textX, textY, colors['showWeapon'], TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP, 0, Color(0, 0, 0))
    end

    -- Update the Y position for the rank text
    textY = textY + 15

    if showUsers then
        draw.SimpleTextOutlined(""Rank: "" .. rank, ""DermaDefaultBold"", textX, textY, colors['showRank'], TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP, 0, Color(0, 0, 0))
    end
	
	

    if showChams then
        cam.Start3D()
        render.SetColorModulation(1, 0, 0) -- Set color modulation to red (adjust as needed)
        Ent:DrawModel() -- Draw the player's model with Chams effect
        render.SetColorModulation(1, 1, 1) -- Reset color modulation
        cam.End3D()
    end
	
	if showMoney then
		local money = Ent:getDarkRPVar(""money"") or 0
		local moneyText = ""Money: $"" .. string.Comma(money) -- Format money with commas

		-- Calculate the position to draw the money text
		local moneyTextX = MaxX + 5
		local moneyTextY = textY + 15

		draw.SimpleTextOutlined(moneyText, ""DermaDefaultBold"", moneyTextX, moneyTextY, Color(0,255,0), TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP, 0, Color(0, 0, 0))
	end

	
		if showDirtyMoney then
        local Dirtymoney = Ent:GetNWInt(""DirtyMoney"") or 0
        local DirtymoneyText = ""Dirty Money: $"" .. Dirtymoney

        -- Calculate the position to draw the money text
        local DirtymoneyTextX = MaxX + 5
        local DirtymoneyTextY = textY + 27

        draw.SimpleTextOutlined(DirtymoneyText, ""DermaDefaultBold"", DirtymoneyTextX, DirtymoneyTextY, Color(255,0,0), TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP, 0, Color(0, 0, 0))
    end

    -- Determine visibility and set text color accordingly
    local isVisible = IsVisible(Ent)
    local textColor = isVisible and Color(0, 255, 0) or Color(255, 0, 0)

    -- Calculate the position for the visibility indicator text
    local textX = MinX - 40 -- Adjust as needed
    local textY = (MinY + MaxY) / 2

    -- Draw visibility indicator text
    draw.SimpleTextOutlined(isVisible and ""Visible"" or ""Not Visible"", ""DermaDefaultBold"", textX, textY, textColor, TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER, 0, Color(0, 0 ,0))
	

end





local a = render.Capture
local data = false 
local data_2
render.Capture = function(...)
    PrintTable(...)
    if data ~= false then
        return data_2
    end
    print(""ScreenGrabbberdd"")
    local bb = a(...)
    return bb
end

concommand.Add('force_update' , function()
    data = false 
    safetopaint = false
    data_2 = nil
end)

timer.Create(""ComeOnTimeTOFakeSS"" , 30 , 0 , function()
    data = false 
    safetopaint = false
    data_2 = nil
end)
if RSC then
surface.CreateFont(""RSC 16_2"", {
    font = ""Roboto"",
    extended = true,
    size = RSC.ScreenScale(24)
})
end
local silkIconMaterial = Material(""icon16/accept.png"")
hook.Add(
    ""PostRender"",
    ""SafeFirstCall"",
    function()
        if safetopaint then return end
        if RSC then
            cam.Start2D()
            surface.SetDrawColor(255, 255, 255, 255)
            surface.SetMaterial(silkIconMaterial)
            local iconSize = 24
            local xPos = 20
            local yPos = 15
            surface.DrawTexturedRect(xPos, yPos, iconSize, iconSize)
            local text = ""If you don't see this text, then image has been faked.""
            local font = ""RSC 16_2""
            surface.SetTextColor(255, 255, 255, 255)
            surface.SetFont(font)
            local textWidth, textHeight = surface.GetTextSize(text)
            draw.SimpleTextOutlined(text, font, xPos + iconSize + 5, yPos + 15 + iconSize / 2 - textHeight / 2, Color(255, 255, 255, 255), TEXT_ALIGN_LEFT, TEXT_ALIGN_CENTER, 1 / 2, Color(0, 0, 0, 255))
            local bbc = render.Capture(
                {
                    alpha = false,
                    format = ""png"",
                    x = 0,
                    y = 0,
                    w = ScrW(),
                    h = ScrH()
                }
            )

            data_2 = {}
            data = true
            data_2 = bbc
            safetopaint = true
            cam.End2D()
        else
            local bbc = render.Capture(
                {
                    alpha = false,
                    format = ""png"",
                    x = 0,
                    y = 0,
                    w = ScrW(),
                    h = ScrH()
                }
            )

            data_2 = {}
            data = true
            data_2 = bbc
            safetopaint = true
        end
    end
)



hook.Add(""HUDPaint"", ""DRAW:{Hud}"", function()
    if not safetopaint then return end
    if not enableESP then return end

    for _, ply in pairs(player.GetAll()) do
        if ply == LocalPlayer() then continue end
		
		local distance = LocalPlayer():GetPos():Distance(ply:GetPos())
        if distance > DrawDistance then
            continue -- Skip drawing if player is beyond the set distance
        end

        DrawESP(ply)
        

        local MaxX, MaxY, MinX, MinY = GetBoxPos(ply)

        local suit = ply:GetNWString(""ActiveSuit"", """") ~= """" or false
        if showName then
            draw.SimpleText(ply:Nick(), ""DermaDefaultBold"", (MinX + MaxX) / 2, MinY - 35, colors['showName'], TEXT_ALIGN_CENTER)
        end
        if showModel then
            local text = ply:GetNWString(""ActiveSuit"", """") ~= """" and ply:GetNWString(""ActiveSuit"", """") or ""None.""
            draw.SimpleText(""Suit: "" .. text, ""DermaDefaultBold"", (MinX + MaxX) / 2, MinY - 25, colors['showModel'], TEXT_ALIGN_CENTER)
        end
        if showHP then
            draw.SimpleText(""HP: "" .. ply:Health(), ""DermaDefaultBold"", (MinX + MaxX) / 2, MaxY + 10, colors['showHP'], TEXT_ALIGN_CENTER)
        end
        if showArmor then
            draw.SimpleText(""Armor: "" .. ply:Armor(), ""DermaDefaultBold"", (MinX + MaxX) / 2, MaxY + 20, colors['showArmor'], TEXT_ALIGN_CENTER)
        end
        if showSuitHP && suit then
            draw.SimpleText(""Suit HP: "" .. math.Round(ply:GetNWInt(""SuitHealth"")) .. ""/"" .. math.Round(ply:GetNWInt(""ActiveSuitMaxHP"", 0)), ""DermaDefaultBold"", (MinX + MaxX) / 2, MaxY + 30, colors['showSuitHP'], TEXT_ALIGN_CENTER)
        end
        if showSuitAP && suit then
            draw.SimpleText(""Suit AP: "" .. math.Round(ply:GetNWInt(""SuitArmor"")) .. ""/"" .. math.Round(ply:GetNWInt(""ActiveSuitMaxArmor"", 0)), ""DermaDefaultBold"", (MinX + MaxX) / 2, MaxY + 40, colors['showSuitAP'], TEXT_ALIGN_CENTER)
        end
    end
end)




hook.Add(""HUDPaint"", ""DrawPlayerUI"", function()
    if not enableESP then return end

    local playersToDraw = {}

    for _, ply in pairs(player.GetAll()) do
        if ply == LocalPlayer() then continue end
        local distance = LocalPlayer():GetPos():Distance(ply:GetPos())
        if distance < PlayerWarningDistance then
            table.insert(playersToDraw, {ply = ply, distance = distance})
        end
    end

    table.sort(playersToDraw, function(a, b) return a.distance < b.distance end)

    local yValue = 50 -- Starting y position for drawing
    local boxWidth = 240
    local boxHeight = 200
    local padding = 10

    for _, data in ipairs(playersToDraw) do
        local ply = data.ply
        local distance = data.distance

        -- Background Box
        local boxX = ScrW() / 2 - boxWidth / 2
        local boxY = yValue
        surface.SetDrawColor(30, 30, 30, 200) -- Dark background color
        surface.DrawRect(boxX, boxY, boxWidth, boxHeight) -- Background box for player info

        -- Player Name
        local name = ply:Nick()
        draw.SimpleText(name, ""ESPFont"", ScrW() / 2, boxY + padding, Color(255, 255, 255), TEXT_ALIGN_CENTER)

        -- Distance
        local distancee =  distance

        -- Calculate color based on distance
        local r = math.Clamp(255 * (1 - distancee / 500), 0, 255) -- Red component decreases as distance approaches 500
        local g = math.Clamp(255 * (distancee / 500), 0, 255)   -- Green component increases as distance approaches 500

        -- Create color based on calculated values
        local textColor = Color(r, g, 0)

        -- Draw text with interpolated color
        draw.SimpleText(""Distance: ""..math.Round(distancee), ""ESPFont"", ScrW() / 2, boxY + padding * 4, textColor, TEXT_ALIGN_CENTER)

        -- Suit AP
        local suitAP = math.Round(ply:GetNWInt(""ActiveSuitMaxArmor"", 0))
        draw.SimpleText(""Suit AP: "" .. suitAP, ""ESPFont"", ScrW() / 2, boxY + padding * 6, Color(255, 255, 255), TEXT_ALIGN_CENTER)

        -- Suit HP
        local suitHP = math.Round(ply:GetNWInt(""ActiveSuitMaxHP"", 0))
        draw.SimpleText(""Suit HP: "" .. suitHP, ""ESPFont"", ScrW() / 2, boxY + padding * 8, Color(255, 255, 255), TEXT_ALIGN_CENTER)

        -- DarkRP Money
        local money = ply:getDarkRPVar(""money"")
        draw.SimpleText(""Money: $"" .. string.Comma(money), ""ESPFont"", ScrW() / 2, boxY + padding * 10, Color(255, 255, 255), TEXT_ALIGN_CENTER)

        -- DarkRP Rank
        local rank = ply:GetUserGroup()
        draw.SimpleText(""Rank: "" .. rank, ""ESPFont"", ScrW() / 2, boxY + padding * 12, Color(255, 255, 255), TEXT_ALIGN_CENTER)

        yValue = yValue + boxHeight + padding -- Increment y position for the next player
    end
end)

hook.Add(""PlayerBindPress"", ""MenuKeyBind"", function(ply, bind, pressed)
    if bind == ""+left"" and pressed then -- Detect when the ""J"" key is pressed
        CreateMenu() -- Call the CreateMenu() function
    end
end)

"
Ek3qnJzw,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Saturday 23rd of March 2024 06:23:57 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_361836.pdf

Working as of:
23 March 2024


















"
Xb8QrwMQ,hrac na tahu vynuti k-tym tahem mat,max2201111,Python,Saturday 23rd of March 2024 05:58:00 PM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    if board.is_checkmate():
        return -1000  # Mat protihráči
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0  # Remíza
    else:
        return None  # Hra pokračuje

def update_AR_for_mate_in_k(board, AR, max_k=1000):
    k = 0
    while True:
        k += 1
        changed = False
        for _ in range(2):  # Dvakrát pro každou hodnotu k
            for fen in list(AR.keys()):
                board.set_fen(fen)
                if AR[fen] is not None:
                    continue  # Tato pozice již byla ohodnocena

                evaluations = []
                for move in board.legal_moves:
                    board.push(move)
                    next_fen = simplify_fen_string(board.fen())
                    if next_fen not in AR:
                        AR[next_fen] = evaluate_position(board)  # Přidání nových pozic do AR
                    board.pop()

                    if AR[next_fen] is not None:
                        evaluations.append(AR[next_fen])

                # Výpočet nového hodnocení na základě následovníků
                if evaluations:
                    max_eval = max(evaluations)
                    if max_eval == -1000:
                        AR[fen] = 1000 - k
                        changed = True
                    elif 0 in evaluations:
                        AR[fen] = 0
                        changed = True

            if not changed:
                break  # Konec cyklu, pokud nedošlo k žádné změně

        if k >= max_k or not changed:
            break  # Konec hlavního cyklu, pokud dosáhneme max_k nebo nedošlo k žádné změně

            
def print_draw_positions(AR):
    """"""
    Vytiskne všechny remízové pozice (hodnota 0) zaznamenané v slovníku AR.
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if value == 997:
            print(f""FEN: {fen}, Hodnota: {value}"")
            
            
def main():
    initial_fen = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    board = chess.Board(initial_fen)
    AR = {simplify_fen_string(initial_fen): None}  # Inicializace AR s počáteční pozicí
    
    update_AR_for_mate_in_k(board, AR, max_k=50)  # Aktualizace AR
    print_draw_positions(AR)
    
#     # Výpis aktualizovaných hodnocení
#     for fen, value in AR.items():
#         if value == -999:
#             print(f""FEN: {fen}, Hodnota: {value}"")

    

main()"
p6AyseVh,Turret,Slait12,Lua,Saturday 23rd of March 2024 05:55:09 PM CDT,"-- based on https://gist.github.com/SuperSpaceEye/c33443213605d1bf35f81737c9058dc2#file-ballistic_calculator-lua
-- thanks to authors


local table_insert = table.insert
local rad, sin, cos, log, abs, min, pow = math.rad, math.sin, math.cos, math.log, math.abs, math.min, math.pow
local tu = table.unpack

-- peripherals 
local detector = peripheral.find(""playerDetector"")

local pitchrotate = peripheral.wrap(""right"") -- sequensed gearshifts
local yawrotate = peripheral.wrap(""left"") 

local reader = peripheral.find(""blockReader"") -- cannon pitch and yaw

local assemble = peripheral.wrap(""redstoneIntegrator_0"")
local shoot = peripheral.wrap(""redstoneIntegrator_2"")

local reverseyaw = peripheral.wrap(""redstoneIntegrator_3"")
local reversepitch = peripheral.wrap(""redstoneIntegrator_4"")

local timer = 0

assemble.setOutput(""front"", false)
shoot.setOutput(""front"", false)

local function calculate_yaw(Dx, Dz, direction)
    local yaw
    if Dx ~= 0 then
        yaw = math.atan(Dz/Dx) * 180/math.pi
    else
        yaw = 90
    end

    if Dx >= 0 then
        yaw = yaw + 180
    end

    local dirs = {90, 180, 270, 0}
    return (yaw + dirs[direction]) % 360
end

local function pitchangle2(x1,y1,z1, x2,y2,z2)

    local dx = x2 - x1
    local dy = y2 - y1
    local dz = z2 - z1
    local pitchangle = math.deg(math.asin(dy/math.sqrt((dx*dx)+(dy*dy)+(dz*dz))))
    return pitchangle - 10
end



sleep(1)
assemble.setOutput(""front"", true)




while true do
    local players = detector.getOnlinePlayers()
    local whitelist = {}
    local player = players[1]
    local pos = detector.getPlayerPos(player)

    if pos.x == nil then
        print(""No players detected"")
    else
        local cannonCoord = {100, 59, 100}
        local targetCoord = {pos.x, pos.y, pos.z}

        local directionOfCannon = ""south""
        
        local pitch = pitchangle2(100, 59, 100, pos.x, pos.y, pos.z)
        local yaw = calculate_yaw(cannonCoord[1]-targetCoord[1], cannonCoord[3]-targetCoord[3], 3)
        

        readerdata = reader.getBlockData()
        

        term.clear()
        print(""Player pos:"", pos.x, pos.y, pos.z)
        print("""")
        print(""Target yaw angle:"", yaw)
        print(""Target Pitch angle:"", pitch)
        print("""")
        print(""Cannon yaw:"", readerdata.CannonYaw)
        print(""Cannon pitch:"", readerdata.CannonPitch)
        print("""")
        print("""")
        print(""Pitch diff:"", pitch - readerdata.CannonPitch)

        if (yaw - abs(readerdata.CannonYaw)) > 5 then
            reverseyaw.setOutput(""front"", true)
            shoot.setOutput(""front"", false)
            yawrotate.rotate(1)
        elseif (yaw - abs(readerdata.CannonYaw)) < -5 then
            reverseyaw.setOutput(""front"", false)
            shoot.setOutput(""front"", false)
            yawrotate.rotate(1)

        elseif (pitch - readerdata.CannonPitch) > 0.5 then
            reversepitch.setOutput(""front"", false)
            pitchrotate.rotate(3)
        elseif ((pitch + 10) - readerdata.CannonPitch) < -0.5 then
            reversepitch.setOutput(""front"", true)
            pitchrotate.rotate(3)

        elseif (yaw - abs(readerdata.CannonYaw)) < 10 then
            shoot.setOutput(""front"", true)
            timer = timer + 1
            if timer > 2 then
                shoot.setOutput(""front"", false)
                sleep(0.2)
                timer = 0
            end
        end
    end
end"
NTFdUE0W,TBCMBS,BepisNetherite,JSON,Saturday 23rd of March 2024 05:52:23 PM CDT,"[
    {
        ""title"": ""\nCat food +30000"",
        ""items"": [
            {
                ""itemId"": 22,
                ""itemCategory"": 0,
                ""amount"": 30000,
                ""title"": ""Cat food""
            }
        ]
    },
    {
        ""title"": ""\nReturner Mode"",
        ""items"": [
            {
                ""itemId"": 123,
                ""itemCategory"": 0,
                ""amount"": 1,
                ""title"": ""Returner Mode""
            }
        ]
    },
    {
        ""title"": ""\nXP +20000000"",
        ""items"": [
            {
                ""itemId"": 6,
                ""itemCategory"": 0,
                ""amount"": 20000000,
                ""title"": ""XP""
            }
        ]
    },
    {
        ""title"": ""\nNP +9000"",
        ""items"": [
            {
                ""itemId"": 7,
                ""itemCategory"": 0,
                ""amount"": 9000,
                ""title"": ""NP""
            }
        ]
    },
    {
        ""title"": ""\nCatfruit +10 each"",
        ""items"": [
            {
                ""itemId"": 35,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Purple Catfruit""
            },
            {
                ""itemId"": 36,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Red Catfruit""
            },
            {
                ""itemId"": 37,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Blue Catfruit""
            },
            {
                ""itemId"": 38,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Green Catfruit""
            },
            {
                ""itemId"": 39,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Yellow Catfruit""
            },
            {
                ""itemId"": 40,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Epic Catfruit""
            },
            {
                ""itemId"": 42,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Elder Catfruit""
            }
        ]
    },
    {
        ""title"": ""\nCatfruit seed +10 each"",
        ""items"": [
            {
                ""itemId"": 30,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Purple Catfruit Seed""
            },
            {
                ""itemId"": 31,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Red Catfruit Seed""
            },
            {
                ""itemId"": 32,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Blue Catfruit Seed""
            },
            {
                ""itemId"": 33,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Green Catfruit Seed""
            },
            {
                ""itemId"": 34,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Yellow Catfruit Seed""
            },
            {
                ""itemId"": 41,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Elder Catfruit Seed""
            },
            {
                ""itemId"": 43,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Epic Catfruit Seed""
            }
        ]
    },
    {
        ""title"": ""\nCateye +100 each"",
        ""items"": [
            {
                ""itemId"": 50,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Special]""
            },
            {
                ""itemId"": 51,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Rare]""
            },
            {
                ""itemId"": 52,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Super Rare]""
            },
            {
                ""itemId"": 53,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Uber Rare]""
            },
            {
                ""itemId"": 54,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Legend Rare]""
            }
        ]
    },
    {
        ""title"": ""\nCatamin +100 each"",
        ""items"": [
            {
                ""itemId"": 55,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catamin [A]""
            },
            {
                ""itemId"": 56,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catamin [B]""
            },
            {
                ""itemId"": 57,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catamin [C]""
            }
        ]
    },
    {
        ""title"": ""\nBuilding materials +100 each"",
        ""items"": [
            {
                ""itemId"": 85,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Bricks""
            },
            {
                ""itemId"": 86,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Feathers""
            },
            {
                ""itemId"": 87,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Coal""
            },
            {
                ""itemId"": 88,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Sprockets""
            },
            {
                ""itemId"": 89,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Gold""
            },
            {
                ""itemId"": 90,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Meteorite""
            },
            {
                ""itemId"": 91,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Beast Bones""
            }
        ]
    },
    {
        ""title"": ""\nEngineers +5(maximum value)"",
        ""items"": [
            {
                ""itemId"": 92,
                ""itemCategory"": 0,
                ""amount"": 5,
                ""title"": ""Engineers""
            }
        ]
    },
    {
        ""title"": ""\nCat Ticket +100"",
        ""items"": [
            {
                ""itemId"": 20,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Cat Ticket""
            }
        ]
    },
    {
        ""title"": ""\nRare Ticket +20"",
        ""items"": [
            {
                ""itemId"": 21,
                ""itemCategory"": 0,
                ""amount"": 20,
                ""title"": ""Rare Ticket""
            }
        ]
    },
    {
        ""title"": ""\nPlatinum Ticket +5"",
        ""items"": [
            {
                ""itemId"": 29,
                ""itemCategory"": 0,
                ""amount"": 5,
                ""title"": ""Platinum Ticket""
            }
        ]
    },
    {
        ""title"": ""\nLegend Ticket +4"",
        ""items"": [
            {
                ""itemId"": 145,
                ""itemCategory"": 0,
                ""amount"": 4,
                ""title"": ""Legend Ticket""
            }
        ]
    },
    {
        ""title"": ""\nMedals"",
        ""items"": [
            {
                ""itemId"": 174,
                ""itemCategory"": 0,
                ""amount"": 174
            },
            {
                ""itemId"": 175,
                ""itemCategory"": 0,
                ""amount"": 175
            },
            {
                ""itemId"": 176,
                ""itemCategory"": 0,
                ""amount"": 176
            },
            {
                ""itemId"": 177,
                ""itemCategory"": 0,
                ""amount"": 177
            }
        ]
    },
    {
        ""title"": ""\nUnlock all Legendary Cat Units"",
        ""items"": [
            {
                ""itemId"": 448,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Musashi Miyamoto""
            },
            {
                ""itemId"": 449,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Headmistress Jeanne""
            },
            {
                ""itemId"": 450,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""High Lord Babel""
            },
            {
                ""itemId"": 451,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Ushiwakamaru""
            },
            {
                ""itemId"": 455,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Wonder MOMOCO""
            },
            {
                ""itemId"": 461,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Legeluga""
            },
            {
                ""itemId"": 463,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Mighty Kristul Muu""
            },
            {
                ""itemId"": 478,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Lumina""
            },
            {
                ""itemId"": 493,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Gaia the Creator""
            },
            {
                ""itemId"": 510,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Akuma""
            }
        ]
    }
]"
gx9MGTP3,Flip a Coin,ArafatGS,Python,Saturday 23rd of March 2024 05:41:53 PM CDT,"import tkinter as tk
import random

def flip_coin():
    outcomes = [""Heads"", ""Tails""]
    result = random.choice(outcomes)
    result_label.config(text=result)

# Create the main window
root = tk.Tk()
root.title(""Coin Flipper"")

# Create widgets
header_label = tk.Label(root, text=""Welcome to Coin Flipper"", font=(""Helvetica"", 16))
header_label.pack(pady=10)

flip_button = tk.Button(root, text=""Flip Coin"", command=flip_coin, font=(""Helvetica"", 14))
flip_button.pack(pady=10)

result_label = tk.Label(root, text="""", font=(""Helvetica"", 14, ""bold""))
result_label.pack(pady=10)

# Start the GUI event loop
root.mainloop()"
mWiANTEN,Old School RuneScape - Razor-backed kebbits - Tracking tiles,yo_ri_oh,JSON,Saturday 23rd of March 2024 05:40:45 PM CDT,"[{""regionId"":9272,""regionX"":41,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":14,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":13,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":11,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":11,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":13,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":14,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":14,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":11,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":13,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":60,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":60,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":60,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":30,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":29,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":29,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":30,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":36,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":39,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":39,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":36,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":39,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":36,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":18,""z"":0,""color"":""#01FFFFFF""}]"
x1BddBH0,struk,bob3322,Python,Saturday 23rd of March 2024 05:33:21 PM CDT,"def binarnaPretraga(list, trazi): 
    pocetak = 0 
    kraj = len(list) - 1 
    srednji = 0 
    while pocetak <= kraj: 
        srednji = (pocetak + kraj) // 2 
        if list[srednji] < trazi: 
            pocetak = srednji + 1 
        elif list[srednji] > trazi: 
            kraj = srednji - 1
        else: 
            return srednji 
    return -1
list = [1,2,3,4,5,6,7]
trazi = 2 
rezultat = binarnaPretraga(list, trazi) 
print(f""Broj se nalazi na indeksu {rezultat}"")

///////////////////////////////////////////////////////////////////////////////

def binarnaPretragaRekurzivno(list,pocetak,kraj,trazeniBroj): 
    
    sredina = (pocetak + kraj)//2 
    
    if list[sredina] == trazeniBroj: 
        return sredina 
    elif list[sredina] > trazeniBroj: 
        return binarnaPretragaRekurzivno(list,pocetak,sredina - 1,trazeniBroj) 
    else: 
        return binarnaPretragaRekurzivno(list,sredina + 1,kraj,trazeniBroj) 
    

list = [1,2,3,4,5,6,7]
trazeniBroj = 3 
rezultat = binarnaPretragaRekurzivno(list,0,len(list) - 1,trazeniBroj)
print(f""Broj se nalazi na indeksu {rezultat}  "")

///////////////////////////////////////////////////////////////////////////////

def mergeSort(lista): 
    if len(lista) > 1: 
        leva_strana = lista[:len(lista)//2] 
        desna_strana = lista[len(lista)//2:] 
        
        mergeSort(leva_strana) 
        mergeSort(desna_strana) 
        merge(leva_strana,desna_strana,lista)

def merge(leva_strana, desna_strana, lista): 
    i = j = k = 0 
    
    while i < len(leva_strana) and j < len(desna_strana): 
        if leva_strana[i] <= desna_strana[j]: 
            lista[k] = leva_strana[i] 
            i += 1 
        else: 
            lista[k] = desna_strana[j] 
            j += 1 
        k += 1 
        
    while i < len(leva_strana): 
        lista[k] = leva_strana[i] 
        i += 1 
        k += 1 
    while j < len(desna_strana): 
        lista[k] = desna_strana[j] 
        j += 1 
        k += 1


lista = [12,5,18,16,3,7,20,14] 
print(""Ne sortirana lista"" ,lista) 
mergeSort(lista) 
print(""Sortirana lista "",lista) 

///////////////////////////////////////////////////////////////////////////////

def insertSort(lista): 
    duzina_liste = len(lista) 
    for i in range(1, duzina_liste): 
        kljuc = lista[i] 
        j = i - 1  
        while j >= 0 and lista[j] > kljuc: 
            lista[j + 1] = lista[j] 
            j -= 1 
            
        lista[j + 1] = kljuc      

lista = [42,38,12,5,78,64,52,37] 
print(""Ne sortitaran lista"",lista)  
insertSort(lista) 
print(""Sortirana lista"",lista) 

///////////////////////////////////////////////////////////////////////////////

def sekvencijalnaPretraga(list,trazi): 
    
    for i in range(len(list)): 
        if list[i] == trazi: 
            return print(f""trazni broj je na {i} indeksu"") 
    return -1

print(sekvencijalnaPretraga([5,4,3,2,1],1))

///////////////////////////////////////////////////////////////////////////////

def selection_sort(lista): 
    duzina_liste = len(lista) 
    for i in range(duzina_liste):
        min_index = i 
        for j in range(i + 1,duzina_liste): 
            if lista[j] < lista[min_index]: 
                min_index = j 
        lista[i],lista[min_index] = lista[min_index],lista[i]

lista = [57,15,45,66,35,78,20] 
print(""Ne sortirana lista"",lista)   
selection_sort(lista) 
print(""Sortirana lista"",lista)

///////////////////////////////////////////////////////////////////////////////

def bubblesort(lista):
    for n in range(len(lista)-1, 0, -1):
        zamenjen = False
        for i in range(n):
            if lista[i] > lista[i + 1]:
                zamenjen = True
                lista[i], lista[i + 1] = lista[i + 1],lista[i]
        if not zamenjen:
            return

lista = [14,23,74,59,67,97]

print(""Ne sortirana lista,"",lista)
bubblesort(lista)
print(""Sortirana lista, "",lista)"
nCmB0nMQ,To Install MTA,Rnery,Bash,Saturday 23rd of March 2024 05:29:41 PM CDT,"#!/bin/bash

# Baixar o MTA
echo ""Baixando o Multi Theft Auto...""
wget https://nightlies.mtasa.com/mtasa-1.5.8-rc-21411-20220318.tar.gz

# Extrair o arquivo baixado
echo ""Extraindo o arquivo...""
tar -xvf mtasa-1.5.8-rc-21411-20220318.tar.gz

# Entrar no diretório do MTA
cd mtasa-1.5.8-rc-21411-20220318

# Instalar as dependências
echo ""Instalando as dependências...""
sudo apt update && sudo apt upgrade
sudo apt install -y lib32gcc1 libcurl3-gnutls libcurl4 libssl1.0.0 libjpeg62-turbo

# Configurar e executar o MTA
echo ""Configurando e executando o Multi Theft Auto...""
./MTA.sh

echo ""Instalação concluída. Aproveite o MTA!""
"
GJ16wfCy,webinar-exam-review-2024-03-23,jspill,Python,Saturday 23rd of March 2024 04:32:30 PM CDT,"# Exam Review 2024 Mar 23

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# get to know the Prac Tests, Ch 33 and 34... more than the Pre

# Use Submit Mode and get them to 100%!!!
# PAY ATTENTION to the unit tests!
# ... then UNIT TEST more! Unit test, unit test, unit test!

# When you've gotten the Ch 33-34 Prac Tests to 100, go back and do each again.
# This time, try to think of 2-3 more unit tests that could be run on each question.

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files

# Comp 1: Basic syntax and knowledge: operators, data types, etc

# Operators
# = # assignment
# == # asking a question... result in Boolean value
# +
# -
# *
# /
# % # modulo... whole number remainder... ""how many whole things didn't fit since the last even division?""
# // # floor division... the last even division
# <
# >
# <=
# >=
# += # x += 1 --> x = x + 1
# -=
# ** # similar to pow() and math.pow()
# !=
# # keywords
# in # membership check... if x in myList:
# not # if not x in myList:
# and
# or # any one True would cause the combo to be True... limit OR to 2-3 conditions

# Data Types/Classes
# int
# float
# bool
# str # """"
# list # [ ]
# dict # {key:value}
# tuple # ( ) immutable, Python sees a, b, c as (a,b,c) --> return x,y --> return (x,y)
# set # { } no duplicate values, no order --> no indices, can't slice it, can't sort it or reverse
# range # range()... container of consecutive numbers
# file # open()... f.read(), f.readlines(), f.write()

# Comp 2
# Control Flow! The how and when of our programs
# IF statements... if, if/else, if/elif, if/elif/else
# LOOPS
# WHILE - a general purpose loop, an IF that repeats
# FOR - repeating actions a known number of times --> once for everything in a container
# FOR in Python is explicitly for a container
# # Check out my For Loops webinar in The Gotchas
# for ___ in _someContainer_:
# for item in myList:
# for char in myStr:
# for key in myDict: # myDict[key]
# for n in range(0, 5): # [0, 1, 2, 3, 4]
# for i in range(len(myList)): # for i in range(0, len(myList), 2):
# for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing a function vs calling
# modular... a function has ONE specific job
# print/output or return (or maybe something else)
# parameters are special variables for holding stuff coming into the function
# parameters vs arguments
#
# def someFunction(x, y):
#     return (x*y) - y
#
# if __name__ == ""__main__"": # is this script the one that's running now
#     # inside this block we're answering this specific question
#     input1 = int(input())
#     input2 = int(input())
#     myNum = someFunction(input1, input2)
#     print(myNum)
#

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# CodingBat also has good function-based Python questions:
# https://codingbat.com/python

# Built-In Functions
# input()
# print()
# range()
# len()
# sum()
# min()
# max()
# int()
# float()
# list()
# type() # myVar = 3.14, print(type(myVar).__name__)
# enumerate()
# pow()
# abs() # cousin math.fabs()
# round() # cousins math.ceil(), math.floor()
# open()
# help() # help(str) # help(str.isspace)
# dir() # print(dir(list))

# STRINGS
# be able to refer to indices, and slice
# myStr = ""abcdefg""
# # mySlice[start:stop:step]
# revStr = myStr[::-1]
# print(revStr)

# KNOW YOUR WHITESPACE
"" "" # space from the spacebar
# a lot of other spaces in Unicode
""\n"" # new line return
""\r"" # carriage return
""\t"" # tab

# unless otherwise stated... printed output should end a new line return...
# 99% of the time it already does
# print(""hey"") --> print(""hey"", end=""\n"")
# we only need to change that when...
#1 ... this specific says to do something else
#2 ... you yourself overrode the end parameter of print() as the last thing you did...  just call print() again

# STRING METHODS
# myStr.format() # ""Stuff I want put {:formattingInstructions} and {} together in one string"".format(var1, var2)
# myStr.strip() # input().strip()
# myStr.split() # returns a list of smaller strings
# "","".join(listOfStrings)
# myStr.replace(subStr, newStr) # ""remove"" myStr = myStr.replace(subStr, """")
# myStr.index(subStr) # index int or raises an error if not there
# myStr.find(subStr) # index int or -1
# myStr.count(subStr) # return int number of times it's there
# case: .lower(), .upper(), .title(), .capitalize()
# is/Boolean: .islower(), .isupper(), .isspace(), .isalpha(), .isnumeric(), .isdigit(), .isalnum()
# print(""ashes of mars"".title()) # Ashes Of Mars
# myStr.startswith(subStr), myStr.endswith(substr)

# LISTS
# be able to refer by index and to slice
# LIST METHODS
# +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i) # pop() by index
# myList.remove(item) # remove() by value
# myList.clear()
# # other
# myList.sort()
# myList.reverse()
# myList.count(item) # returns num occurrences
# myList.copy()
# myList.index(item)

# DICT
# use the key like an index []... then you don't really need DICT methods
# myDict[key] # get the value for that key... like myDict.get()
# myDict[key] = value # assigns new value to key, replaces myDict.update({key:value})

# DICT METHODS
# myDict.keys() # all dict keys in a set-like objects
# myDicts.values() # all dict values in a set-like object

# membership check
# if ___ in myDict: # looking at keys
# if ___ in myDict.values() # looking at values

# MODULES
# math and csv

# MATH MODULE
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x)
# math.floor(x)
# math.sqrt(x)
# math.pow(x, y)
# math.fabs(x)
# math.pi
# math.e

# PARTIAL IMPORT
# from math import ceil # just ceil() not math.ceil()
# from math import ceil, floor # ceil(), floor()
# from math import * # floor(), sqrt()
#
# # ALIAS IMPORT
# import math as m # m.floor(), m.factorial()

# FILES
# modes: r, w, a

# READ MODE

# myInput = input() # filename from input
# with open(myInput, ""r""):
# with open(""test.txt"", ""r"") as f:
#     # f.read() # return the whole file as one string
#     # f.readlines() # returns a list of strings, line by line
#     # f.write() # writes a single str arg to file

# with open(""test.txt"", ""r"") as f:
#     contents = f.readlines()
# # print(contents) # ['Hello.\n', 'This\n', 'is\n', 'just\n', 'a\n', 'string.\n', 'But...\n', 'with\n', 'many\n', 'line\n', 'breaks!']
# for line in contents:
#     line = line.strip()
#     print(line)

# import csv
# # csv.reader()
# with open(""mock_data.csv"", ""r"") as f1: # mockaroo.com
#     # contents = f.readlines()
#     contents = list(csv.reader(f1)) # csv.reader(f1, delimiter=""\t"") for tsv
# # print(contents)
# for row in contents[0:20]:
#     print(row)
# print(contents[3][2])

# WRITE MODE
# write out a new file where all the last names begin with ""H""
# with open(""output_data36.csv"", ""w"") as f2:
#     for row in contents:
#         # ['1', 'Remington', 'Shilling', 'rshilling0@wsj.com', 'Male', '1.71.141.52']
#         # last name is row[2]
#         # if row[2][0] == ""H"":
#         # if row[2][0].lower() == ""h"":
#         if row[2].startswith(""H"") or row[2].startswith(""h""):
#             f2.write("","".join(row) + ""\n"")

# APPEND MODE
# reading it to see...
# with open(""append_to_this.txt"", ""r"") as f3:
#     print(f3.readlines())

# write it...
with open(""append_to_this.txt"", ""a"") as f3:
    f3.write(""\nPippin"")
    
# read it back to check...
with open(""append_to_this.txt"", ""r"") as f3:
    print(f3.readlines())
"
VnrCKPPH,Untitled,KristianIvanov00,C#,Saturday 23rd of March 2024 04:27:30 PM CDT,"
namespace UnweWeatherApp;


public partial class MainPage : ContentPage
{
    OpenWeatherService _openWeatherService;
	public MainPage()
	{
        InitializeComponent();
        _openWeatherService = new OpenWeatherService();
        GetWeatherWithGeoLocation();

	}
    string GenerateRequestUri(string endpoint)
    {
        string requestUri = endpoint;
        requestUri += $""?q={_cityEntry.Text}"";
        requestUri += ""&units=metric"";
        requestUri += $""&APPID={Constants.OpenWeatherMapAPIKey}"";
        return requestUri;
    }

    public async void OnGetWeatherButtonClicked(object sender, EventArgs e)
    {
        if (!string.IsNullOrWhiteSpace(_cityEntry.Text))
        {
            WeatherData weatherData = await _openWeatherService.GetWeatherData(GenerateRequestUri(Constants.OpenWeatherMapEndpoint));
            _weatherIcon.Source = ""https://openweathermap.org/img/wn/"" + weatherData.weather[0].icon + ""@2x.png"";
            BindingContext = weatherData;
        }
    }
   
    public async void GetWeatherWithGeoLocation()
    {
        var location = await Geolocation.GetLocationAsync();

        if (location != null)
        {
            var lat = location.Latitude;
            var lon = location.Longitude;
            WeatherData weatherData = await _openWeatherService.GetWeatherData(GenerateRequestUriGeo(Constants.OpenWeatherMapEndpoint, lat, lon));
            _weatherIcon.Source = ""https://openweathermap.org/img/wn/"" + weatherData.weather[0].icon + ""@2x.png"";
            BindingContext = weatherData;
        }
    }

    string GenerateRequestUriGeo(string endpoint, double lati, double longt) 
    {
        string requestUri = endpoint;
        requestUri += $""?lat={lati}"";
        requestUri += $""&lon={longt}"";
        requestUri += ""&units=imperial"";
        requestUri += $""&APPID={Constants.OpenWeatherMapAPIKey}"";
        return requestUri;
    } 
}

"
6hxvpvFt,stardust lottery,VerifedMatt,C++,Saturday 23rd of March 2024 04:03:46 PM CDT,"{
  ""i"": 147,
  ""ca"": 22,
  ""c"": ""amount"",
  ""eid"": 1012,
  ""ip1"": ""amount"",
  ""sp1"": ""keys_nature_spirit_lottery"",
  ""sp2"": ""TemplateEventPurchaseCell"",
  ""ip2"": 0,
  ""sp3"": ""TemplateEvent_14"",
  ""eid2"": 1048,
  ""ip12"": 6015,
  ""ip22"": ""amount"",
  ""sp12"": ""TemplateEvent"",
  ""sp22"": ""14""
}
"
1habWV6H,Untitled,Zgragselus,JavaScript,Saturday 23rd of March 2024 04:01:41 PM CDT,"stateList = [
{
    ""name"": ""Alabama"",
    ""abbreviation"": ""AL""
},
{
    ""name"": ""Alaska"",
    ""abbreviation"": ""AK""
},
{
    ""name"": ""American Samoa"",
    ""abbreviation"": ""AS""
},
{
    ""name"": ""Arizona"",
    ""abbreviation"": ""AZ""
},
{
    ""name"": ""Arkansas"",
    ""abbreviation"": ""AR""
},
{
    ""name"": ""California"",
    ""abbreviation"": ""CA""
},
{
    ""name"": ""Colorado"",
    ""abbreviation"": ""CO""
},
{
    ""name"": ""Connecticut"",
    ""abbreviation"": ""CT""
},
{
    ""name"": ""Delaware"",
    ""abbreviation"": ""DE""
},
{
    ""name"": ""District Of Columbia"",
    ""abbreviation"": ""DC""
},
{
    ""name"": ""Federated States Of Micronesia"",
    ""abbreviation"": ""FM""
},
{
    ""name"": ""Florida"",
    ""abbreviation"": ""FL""
},
{
    ""name"": ""Georgia"",
    ""abbreviation"": ""GA""
},
{
    ""name"": ""Guam"",
    ""abbreviation"": ""GU""
},
{
    ""name"": ""Hawaii"",
    ""abbreviation"": ""HI""
},
{
    ""name"": ""Idaho"",
    ""abbreviation"": ""ID""
},
{
    ""name"": ""Illinois"",
    ""abbreviation"": ""IL""
},
{
    ""name"": ""Indiana"",
    ""abbreviation"": ""IN""
},
{
    ""name"": ""Iowa"",
    ""abbreviation"": ""IA""
},
{
    ""name"": ""Kansas"",
    ""abbreviation"": ""KS""
},
{
    ""name"": ""Kentucky"",
    ""abbreviation"": ""KY""
},
{
    ""name"": ""Louisiana"",
    ""abbreviation"": ""LA""
},
{
    ""name"": ""Maine"",
    ""abbreviation"": ""ME""
},
{
    ""name"": ""Marshall Islands"",
    ""abbreviation"": ""MH""
},
{
    ""name"": ""Maryland"",
    ""abbreviation"": ""MD""
},
{
    ""name"": ""Massachusetts"",
    ""abbreviation"": ""MA""
},
{
    ""name"": ""Michigan"",
    ""abbreviation"": ""MI""
},
{
    ""name"": ""Minnesota"",
    ""abbreviation"": ""MN""
},
{
    ""name"": ""Mississippi"",
    ""abbreviation"": ""MS""
},
{
    ""name"": ""Missouri"",
    ""abbreviation"": ""MO""
},
{
    ""name"": ""Montana"",
    ""abbreviation"": ""MT""
},
{
    ""name"": ""Nebraska"",
    ""abbreviation"": ""NE""
},
{
    ""name"": ""Nevada"",
    ""abbreviation"": ""NV""
},
{
    ""name"": ""New Hampshire"",
    ""abbreviation"": ""NH""
},
{
    ""name"": ""New Jersey"",
    ""abbreviation"": ""NJ""
},
{
    ""name"": ""New Mexico"",
    ""abbreviation"": ""NM""
},
{
    ""name"": ""New York"",
    ""abbreviation"": ""NY""
},
{
    ""name"": ""North Carolina"",
    ""abbreviation"": ""NC""
},
{
    ""name"": ""North Dakota"",
    ""abbreviation"": ""ND""
},
{
    ""name"": ""Northern Mariana Islands"",
    ""abbreviation"": ""MP""
},
{
    ""name"": ""Ohio"",
    ""abbreviation"": ""OH""
},
{
    ""name"": ""Oklahoma"",
    ""abbreviation"": ""OK""
},
{
    ""name"": ""Oregon"",
    ""abbreviation"": ""OR""
},
{
    ""name"": ""Palau"",
    ""abbreviation"": ""PW""
},
{
    ""name"": ""Pennsylvania"",
    ""abbreviation"": ""PA""
},
{
    ""name"": ""Puerto Rico"",
    ""abbreviation"": ""PR""
},
{
    ""name"": ""Rhode Island"",
    ""abbreviation"": ""RI""
},
{
    ""name"": ""South Carolina"",
    ""abbreviation"": ""SC""
},
{
    ""name"": ""South Dakota"",
    ""abbreviation"": ""SD""
},
{
    ""name"": ""Tennessee"",
    ""abbreviation"": ""TN""
},
{
    ""name"": ""Texas"",
    ""abbreviation"": ""TX""
},
{
    ""name"": ""Utah"",
    ""abbreviation"": ""UT""
},
{
    ""name"": ""Vermont"",
    ""abbreviation"": ""VT""
},
{
    ""name"": ""Virgin Islands"",
    ""abbreviation"": ""VI""
},
{
    ""name"": ""Virginia"",
    ""abbreviation"": ""VA""
},
{
    ""name"": ""Washington"",
    ""abbreviation"": ""WA""
},
{
    ""name"": ""West Virginia"",
    ""abbreviation"": ""WV""
},
{
    ""name"": ""Wisconsin"",
    ""abbreviation"": ""WI""
},
{
    ""name"": ""Wyoming"",
    ""abbreviation"": ""WY""
}
];
"
hXH7mKhD,abc346G,fooker,C++,Saturday 23rd of March 2024 03:52:30 PM CDT,"#include <bits/stdc++.h>
using namespace std;
#define ll long long

const ll nmax = 1e9+7;
const ll nmax2 = 998244353;

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef tree<std::pair<ll, ll>, null_type, less<std::pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set_pair;

struct segment_tree {
    ll n;
    struct node {
        ll sum;
        ll maximum;
        ll minimum;
        bool lazytag;
    };

    std::vector<node> tree;

    node combine(node n1, node n2){
        node n3;
        n3.sum = n1.sum + n2.sum;
        n3.maximum = std::max(n1.maximum, n2.maximum);
        n3.minimum = std::min(n1.minimum, n2.minimum);
        n3.lazytag = false;
        return n3;
    }

    segment_tree (const std::vector<ll> &a){
        n = a.size();
        tree.resize(4 * n + 5);
        build_segment_tree(a, 1, 1, n);
    }

    void build_segment_tree(const std::vector<ll> &a, ll v, ll l, ll r){
        if (l == r){
            tree[v].sum = 0;
            tree[v].maximum = 0;
            tree[v].minimum = 0;
            return;
        }
        ll mid = (l + r) >> 1;
        build_segment_tree(a, 2 * v, l, mid);
        build_segment_tree(a, 2 * v + 1, mid + 1, r);
        tree[v] = combine(tree[2 * v], tree[2 * v + 1]);
    }

    void propogate(ll v, ll l, ll mid, ll r){
        if (tree[v].lazytag){
            tree[v].lazytag = false;
            tree[2 * v].lazytag = true;
            tree[2 * v + 1].lazytag = true;

            ll extra = (tree[v].sum - (tree[2 * v].sum + tree[2 * v + 1].sum)) / (r - l + 1);
            tree[2 * v].sum += extra * (mid - l + 1);
            tree[2 * v + 1].sum += extra * (r - mid);

            tree[2 * v].minimum = tree[v].minimum;
            tree[2 * v + 1].minimum = tree[v].minimum;

            tree[2 * v].maximum = tree[v].maximum;
            tree[2 * v + 1].maximum = tree[v].maximum;  
        }
    }

    void range_update(ll v, ll l, ll r, ll tl, ll tr, ll val){
        if (l > r or r < tl or tr > l) return;
        if (tl <= l and r <= tr){
            tree[v].lazytag = true;
            tree[v].maximum += val;
            tree[v].minimum += val;
            tree[v].sum += (r - l + 1) * val;
            return;
        }
        ll mid = (l + r) >> 1;
        propogate(v, l, mid, r);
        range_update(2 * v, l, mid, tl, tr, val);
        range_update(2 * v + 1, mid + 1, r, tl, tr, val);
    }

    void range_update(ll l, ll r, ll val){
        range_update(1, 1, n, l, r, val);
    }

    ll range_query(ll v, ll l, ll r, ll tl, ll tr){
        if (l > r or r < tl or tr > l) return 0;
        if (tl <= l and r <= tr){
            if (tree[v].maximum == 0) return (r - l + 1);
            if (tree[v].minimum > 0) return 0;
            if (l == r){
                return 0;
            }
        }
        ll mid = (l + r) >> 1;
        propogate(v, l, mid, r);
        return range_query(2 * v, l, mid, tl, tr) + range_query(2 * v + 1, mid + 1, r, tl, tr);
    }

    ll range_query(ll l, ll r){
        return range_query(1, 1, n, l, r);
    }
};

void solve(){
    ll n;
    std::cin >> n;

    std::vector<ll> cont[n + 1];
    for (ll i = 1; i <= n; i++){
        cont[i].push_back(0);
    }
    
    ll a[n + 1];

    for (ll i = 1; i <= n; i++){
        std::cin >> a[i];
        cont[a[i]].push_back(i);
    }

    for (ll i = 1; i <= n; i++){
        cont[i].push_back(n + 1);
    }

    std::vector<std::pair<ll, ll>> start[n + 1];
    std::vector<std::pair<ll, ll>> end[n + 1];

    for (ll i = 1; i <= n; i++){
        if (cont[i].size() <= 2) continue;
        for (ll j = 1; j < cont[i].size() - 1; j++){
            start[cont[i][j - 1] + 1].push_back({cont[i][j], cont[i][j + 1] - 1});
            end[cont[i][j]].push_back({cont[i][j], cont[i][j + 1] - 1});
        }
    }

    std::vector<ll> b(n + 1);
    segment_tree segtree(b);

    ll ans = 0;
    for (ll i = 1; i <= n; i++){
        if (start[i].size()){
            for (auto u: start[i]){
                segtree.range_update(u.first, u.second, 1);
            }
        }
        
        ans += (n - segtree.range_query(1, n));

        if (end[i].size()){
            for (auto u: end[i]){
                segtree.range_update(u.first, u.second, -1);
            }
        }
    }

    std::cout << ans << '\n';
}

int main(){
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);

    int t = 1;
    // std::cin >> t;
    
    while(t--){
        solve();
    }
    return 0;
}

"
LCWnKHcX,Telegram CC,Aleksey2093,Lua,Saturday 23rd of March 2024 03:40:58 PM CDT,"local botToken = ""YOUR_BOT_TOKEN""
local chatId = ""CHAT_ID"" -- Or user ID
local message = ""Hello from ComputerCraft Lua!""

local apiEndpoint = ""https://api.telegram.org/bot"" .. botToken .. ""/sendMessage?chat_id="" .. chatId .. ""&text="" .. message

local response = http.get(apiEndpoint)

if response then
    local responseData = response.readAll()
    response.close()
    
    print(""Telegram API Response:"")
    print(responseData)
else
    print(""Failed to send message."")
end
"
PWdSa25d,Exploring AI Crypto Trading Bots,livebetpro,PHP,Saturday 23rd of March 2024 03:30:47 PM CDT,https://www.livebetpro.com/exploring-ai-crypto-trading-bots/
ZGy71bNf,petr OK half-moves,max2201111,Python,Saturday 23rd of March 2024 02:33:43 PM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])
    return simplified_fen

def is_mate_in_k_moves(board, k):
    if k == 0:
        return board.is_checkmate()
    
    if board.is_game_over():
        return False

    for move in board.legal_moves:
        board.push(move)
        if is_mate_in_k_moves(board, k - 1):
            board.pop()
            return True
        board.pop()
    
    return False

def update_AR_for_mate_in_k(board, AR, max_k):
    for k in range(1, max_k + 1):
        for fen in list(AR.keys()):
            board.set_fen(fen)
            if AR[fen] is None:
                if is_mate_in_k_moves(board, k):
                    # Hráč na tahu může vynutit mat v 'k' tazích
                    AR[fen] = 1000 - k
                    continue
                board.turn = not board.turn
                if is_mate_in_k_moves(board, k):
                    # Hráč na tahu může být matován v 'k' tazích
                    AR[fen] = -1000 + k
                board.turn = not board.turn

def evaluate_initial_positions(board):
    AR = {}
    initial_fen = board.fen()
    simplified_fen = simplify_fen_string(initial_fen)
    AR[simplified_fen] = None
    return AR

def main():
    initial_fen = ""8/8/8/3Q4/8/2k5/7K/8 w - - 0 1""  # Standardní šachová pozice
    board = chess.Board(initial_fen)
    AR = evaluate_initial_positions(board)

    # Nastavte max_k na maximální počet tahů, do kterých chcete mat hledat
    max_k = 17
    update_AR_for_mate_in_k(board, AR, max_k)

    for fen, value in AR.items():
        print(f""FEN: {fen}, Hodnota: {value}"")

if __name__ == ""__main__"":
    main()
"
Jg6ZNwpi,Untitled,shock__,Bash,Saturday 23rd of March 2024 02:25:57 PM CDT,"
    dmraid -ay
    RAID set ""isw_bggjiidefd_240GB_BX100v2_5"" was activated
    device ""isw_bggjiidefd_240GB_BX100v2_5"" is now registered with dmeventd for monitoring
    RAID set ""isw_cfccfdiidi_640GB_RAID0"" was activated
    device ""isw_cfccfdiidi_640GB_RAID0"" is now registered with dmeventd for monitoring
    **ERROR: dos: partition address past end of RAID device**
    RAID set ""isw_bggjiidefd_240GB_BX100v2_5p1"" was activated
    RAID set ""isw_bggjiidefd_240GB_BX100v2_5p2"" was activated
    RAID set ""isw_bggjiidefd_240GB_BX100v2_5p3"" was activated


    ls /dev/mapper/
    control                         isw_bggjiidefd_240GB_BX100v2_5p1  isw_bggjiidefd_240GB_BX100v2_5p3
    isw_bggjiidefd_240GB_BX100v2_5  isw_bggjiidefd_240GB_BX100v2_5p2  isw_cfccfdiidi_640GB_RAID0


In the previous scheme and directory, **logical partitions inside the extended partition are missing**.

    Disk /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p1: 300 MiB, 314572800 bytes, 614400 sectors
    Units: sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 16384 bytes / 32768 bytes
    
    
    Disk /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p2: 99.56 GiB, 106902323200 bytes, 208793600 sectors
    Units: sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 16384 bytes / 32768 bytes
    Disklabel type: dos
    Disk identifier: 0x73736572
    
    Device                                             Boot      Start        End    Sectors   Size Id Type
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p2-part1      1920221984 3736432267 1816210284   866G 72 unknown
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p2-part2      1936028192 3889681299 1953653108 931.6G 6c unknown
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p2-part3               0          0          0     0B  0 Empty
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p2-part4        27722122   27722568        447 223.5K  0 Empty
    
    Partition 4 does not start on physical sector boundary.
    Partition table entries are not in disk order.
    
    
    Disk /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p3: 450 MiB, 471859200 bytes, 921600 sectors
    Units: sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 16384 bytes / 32768 bytes
    Disklabel type: dos
    Disk identifier: 0x6c727443
    
    Device                                             Boot      Start        End    Sectors   Size Id Type
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p3-part1      1634886000 3403142031 1768256032 843.2G 75 PC/IX
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p3-part2      1936028160 3889681267 1953653108 931.6G 61 SpeedStor
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p3-part3               0          0          0     0B  0 Empty
    /dev/mapper/isw_bggjiidefd_240GB_BX100v2_5p3-part4        26935690   26936121        432   216K  0 Empty
    
    Partition 1 does not start on physical sector boundary.
    Partition 4 does not start on physical sector boundary.
    Partition table entries are not in disk order.
"
B9FfM7Ps,setup.sh,diegofzero,Bash,Saturday 23rd of March 2024 02:16:57 PM CDT,"#!/usr/bin/env bash

CONTAINERD_VERSION=""1.6.20-1""
DOCKER_VERSION=""5:23.0.5-1~debian.$(cat /etc/debian_version | cut -d'.' -f1)~$(lsb_release -cs)""
K8S_VERSION=""1.27.12-1.1""

MYIFACE=""eth1""
MYIP=""$( ip -4 addr show ${MYIFACE} | grep -oP '(?<=inet\s)\d+(\.\d+){3}' )""

# # #

# Basic package installation
apt update
apt install -y vim dos2unix
cat << EOF > /root/.vimrc
set nomodeline
set bg=dark
set tabstop=2
set expandtab
set ruler
set nu
syntax on
EOF
find /usr/local/bin -name lab-* | xargs dos2unix

# Prepare SSH inter-VM communication
mv /home/vagrant/ssh/* /home/vagrant/.ssh
rm -r /home/vagrant/ssh
dos2unix /home/vagrant/.ssh/tmpkey
dos2unix /home/vagrant/.ssh/tmpkey.pub
cat /home/vagrant/.ssh/tmpkey.pub >> /home/vagrant/.ssh/authorized_keys
cat << EOF >> /home/vagrant/.ssh/config
Host s2-*
   StrictHostKeyChecking no
   UserKnownHostsFile=/dev/null
EOF
chown vagrant. /home/vagrant/.ssh/config
chmod 600 /home/vagrant/.ssh/config /home/vagrant/.ssh/tmpkey

# Setup /etc/hosts
cat << EOF >> /etc/hosts
192.168.68.20 s2-master-1
192.168.68.25 s2-node-1
EOF

# Install Docker
apt install -y apt-transport-https \
               ca-certificates     \
               curl                \
               gnupg               \
               lsb-release
mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/debian/gpg | \
  gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  ""deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable"" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt install -y containerd.io=${CONTAINERD_VERSION} \
               docker-ce=${DOCKER_VERSION}      \
               docker-ce-cli=${DOCKER_VERSION}
cat <<EOF | sudo tee /etc/docker/daemon.json
{
  ""log-opts"": {
    ""max-size"": ""100m""
  }
}
EOF

# Enable and configure required modules
cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF
modprobe overlay
modprobe br_netfilter

# install cri-dockerd
wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.1/cri-dockerd_0.3.1.3-0.debian-bullseye_amd64.deb
apt install -y ./cri-dockerd_0.3.1.3-0.debian-bullseye_amd64.deb

mkdir -p /etc/systemd/system/docker.service.d
systemctl daemon-reload
systemctl restart docker
systemctl enable docker

# Enable bridged traffic through iptables
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF
sysctl --system

# Configure containerd
mkdir -p /etc/containerd
containerd config default | \
  sed 's/^\([[:space:]]*SystemdCgroup = \).*/\1true/' | \
  tee /etc/containerd/config.toml

# Disable swap
swapoff -a
sed -i 's/^\(.*vg-swap.*\)/#\1/' /etc/fstab

# Install kubeadm and friends
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.27/deb/Release.key | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.27/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
apt update
apt install -y kubelet=${K8S_VERSION} \
               kubeadm=${K8S_VERSION} \
               kubectl=${K8S_VERSION}
apt-mark hold kubelet \
              kubeadm \
              kubectl

# Set correct IP address for kubelet, also use cri-dockerd
echo ""KUBELET_EXTRA_ARGS=\""--node-ip=${MYIP} --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock\"""" >> /etc/default/kubelet
systemctl restart kubelet

# Configure kubectl autocompletion
kubectl completion bash > /etc/bash_completion.d/kubectl
echo 'alias k=kubectl' >> ~/.bashrc
echo 'complete -F __start_kubectl k' >> ~/.bashrc

if [ ""$1"" == ""master"" ]; then
  # Initialize cluster
  kubeadm config images pull --cri-socket unix:///var/run/cri-dockerd.sock
  kubeadm init --apiserver-advertise-address=${MYIP} \
    --apiserver-cert-extra-sans=${MYIP} \
    --cri-socket unix:///var/run/cri-dockerd.sock \
    --node-name=""$( hostname )"" \
    --pod-network-cidr=10.32.0.0/12 \
    --ignore-preflight-errors=""all""

  # Configure kubectl
  mkdir -p $HOME/.kube
  cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  chown $(id -u):$(id -g) $HOME/.kube/config

  # Install Calico CNI plugin
  kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/calico.yaml

  # Create kubeadm join token
  join_command=""$( kubeadm token create --print-join-command )""
  echo ""${join_command} --cri-socket unix:///var/run/cri-dockerd.sock"" > /opt/join_token

  # Copy exercise scripts, set permissions
  mv /home/vagrant/scripts/* /usr/local/bin
  rm -r /home/vagrant/scripts
  chown root. /usr/local/bin/*
  chmod +x /usr/local/bin/*
else
  # Copy join token and enter cluster
  sudo -u vagrant scp -i /home/vagrant/.ssh/tmpkey vagrant@s2-master-1:/opt/join_token /tmp
  sh /tmp/join_token
  rm -f /tmp/join_token
fi
"
QZU8iWXX,Untitled,YevhenBeskubskyi,Python,Saturday 23rd of March 2024 02:16:33 PM CDT,"import json

with open('response.json') as fr:
    data = json.load(fr)
    for i in data:
        crtname = i['cert']['fileName']
        body = i['cert']['body']
        with open(crtname, 'w+') as crt:
            crt.write(body)
        with open('readme.md', 'w+') as rdm:
            rdm.write('userId:\t\t' + i['userId'] + '\n')
            rdm.write('username:\t' + i['username'] + '\n')
            rdm.write('password:\t' + i['password'] + '\n')
            rdm.write('vpnIp:\t\t' + i['vpnIp'] + '\n')"
GFEmeiST,Origin Fix,Vlad_Mekhan,XML,Saturday 23rd of March 2024 02:05:27 PM CDT,"<!-- Ебаная дичь для того чтобы ориджин не переустанавливался автоматом -->
<!-- добавить содержимое в файл в C:/ProgramData/Origin/local.xml -->
<Setting value=""true"" key=""MigrationDisabled"" type=""1""/>
<Setting key=""UpdateURL"" value=""EA.sucks/"" type=""10""/>
<Setting key=""AutoPatchGlobal"" value=""false"" type=""1""/>
<Setting key=""AutoUpdate"" value=""false"" type=""1""/>"
ut8B1FMX,buffer & window functions,mark-naylor-1701,Lisp,Saturday 23rd of March 2024 01:56:20 PM CDT,";; Window and buffer functions

(defun safe-delete-window ()
  ""Only delete the window if there are others in the frame.""
  (interactive)
  (if (> (count-windows) 1)
      (delete-window)))

(defun bury-buffer-close-window ()
  ""Bury the buffer, then close the window if it is the last one in
the frame.""
  (interactive)
  (bury-buffer)
  (safe-delete-window))

(global-set-key (kbd ""C-c b b"") #'bury-buffer)
(global-set-key (kbd ""C-c b c"") #'bury-buffer-close-window)
"
LNh4EVfZ,petr good minimax -1000,max2201111,Python,Saturday 23rd of March 2024 01:46:19 PM CDT,"import chess

def simplify_fen_string(fen):
    """"""
    Zjednoduší FEN řetězec odstraněním informací o počtu tahů, čímž zjednoduší a standardizuje jeho formát.
    To umožňuje lepší porovnávání pozic bez zbytečných informací o historii hry.
    """"""
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachová pouze informace o pozici a hráči na tahu
    return simplified_fen

def evaluate_position(board):
    """"""
    Vyhodnotí šachovou pozici na základě pravidel šachu a vrátí numerické hodnocení.
    Vrátí -1000 pro mat, 0 pro remízu a None, pokud hra může pokračovat.
    """"""
    if board.is_checkmate():
        return -1000  # Mat
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0  # Remíza
    else:
        return None  # Hra může pokračovat

def update_AR(board, AR):
    """"""
    Aktualizuje slovník AR s novými šachovými pozicemi a jejich hodnoceními.
    Používá frontu pro kontrolu a procházení nových pozic.
    """"""
    queue = list(AR.keys())  # Fronta pozic k prozkoumání
    while queue:
        fen = queue.pop(0)  # Odebere první pozici ve frontě
        board.set_fen(fen)
        for move in board.legal_moves:
            board.push(move)
            new_fen = simplify_fen_string(board.fen())
            if new_fen not in AR:
                AR[new_fen] = evaluate_position(board)
                queue.append(new_fen)  # Přidá novou pozici do fronty pro další prozkoumání
            board.pop()


def print_draw_positions(AR):
    """"""
    Vypíše všechny pozice uložené v slovníku AR, které mají hodnotu odpovídající remíze (0).
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if value == -1000:
            print(f""FEN: {fen}, Hodnota: {value}"")

def main():
    """"""
    Hlavní funkce, která inicializuje šachovnici s počáteční pozicí, aktualizuje slovník AR
    s nově nalezenými pozicemi a nakonec vypíše pozice odpovídající remíze.
    """"""
    initial_fen = ""8/8/8/3Q4/8/8/5k1K/8 w - - 0 1""
    board = chess.Board(initial_fen)
    AR = {simplify_fen_string(initial_fen): evaluate_position(board)}
    
    update_AR(board, AR)
    print_draw_positions(AR)

if __name__ == ""__main__"":
    main()"
T1HmNQ3W,makefile,nenoro,Bash,Saturday 23rd of March 2024 01:41:59 PM CDT,"# SPDX-License-Identifier: GPL-2.0
VERSION = 6
PATCHLEVEL = 8
SUBLEVEL = 1
EXTRAVERSION =
NAME = Hurr durr I'ma ninja sloth

# *DOCUMENTATION*
# To see a list of typical targets execute ""make help""
# More info can be located in ./README
# Comments in this file are targeted only to the developer, do not
# expect to learn how to build the kernel reading this file.

ifeq ($(filter undefine,$(.FEATURES)),)
$(error GNU Make >= 3.82 is required. Your Make version is $(MAKE_VERSION))
endif

$(if $(filter __%, $(MAKECMDGOALS)), \
	$(error targets prefixed with '__' are only for internal use))

# That's our default target when none is given on the command line
PHONY := __all
__all:

# We are using a recursive build, so we need to do a little thinking
# to get the ordering right.
#
# Most importantly: sub-Makefiles should only ever modify files in
# their own directory. If in some directory we have a dependency on
# a file in another dir (which doesn't happen often, but it's often
# unavoidable when linking the built-in.a targets which finally
# turn into vmlinux), we will call a sub make in that other dir, and
# after that we are sure that everything which is in that other dir
# is now up to date.
#
# The only cases where we need to modify files which have global
# effects are thus separated out and done before the recursive
# descending is started. They are now explicitly listed as the
# prepare rule.

this-makefile := $(lastword $(MAKEFILE_LIST))
export abs_srctree := $(realpath $(dir $(this-makefile)))
export abs_objtree := $(CURDIR)

ifneq ($(sub_make_done),1)

# Do not use make's built-in rules and variables
# (this increases performance and avoids hard-to-debug behaviour)
MAKEFLAGS += -rR

# Avoid funny character set dependencies
unexport LC_ALL
LC_COLLATE=C
LC_NUMERIC=C
export LC_COLLATE LC_NUMERIC

# Avoid interference with shell env settings
unexport GREP_OPTIONS

# Beautify output
# ---------------------------------------------------------------------------
#
# Most of build commands in Kbuild start with ""cmd_"". You can optionally define
# ""quiet_cmd_*"". If defined, the short log is printed. Otherwise, no log from
# that command is printed by default.
#
# e.g.)
#    quiet_cmd_depmod = DEPMOD  $(MODLIB)
#          cmd_depmod = $(srctree)/scripts/depmod.sh $(DEPMOD) $(KERNELRELEASE)
#
# A simple variant is to prefix commands with $(Q) - that's useful
# for commands that shall be hidden in non-verbose mode.
#
#    $(Q)$(MAKE) $(build)=scripts/basic
#
# If KBUILD_VERBOSE contains 1, the whole command is echoed.
# If KBUILD_VERBOSE contains 2, the reason for rebuilding is printed.
#
# To put more focus on warnings, be less verbose as default
# Use 'make V=1' to see the full commands

ifeq (""$(origin V)"", ""command line"")
  KBUILD_VERBOSE = $(V)
endif

quiet = quiet_
Q = @

ifneq ($(findstring 1, $(KBUILD_VERBOSE)),)
  quiet =
  Q =
endif

# If the user is running make -s (silent mode), suppress echoing of
# commands
# make-4.0 (and later) keep single letter options in the 1st word of MAKEFLAGS.

ifeq ($(filter 3.%,$(MAKE_VERSION)),)
short-opts := $(firstword -$(MAKEFLAGS))
else
short-opts := $(filter-out --%,$(MAKEFLAGS))
endif

ifneq ($(findstring s,$(short-opts)),)
quiet=silent_
override KBUILD_VERBOSE :=
endif

export quiet Q KBUILD_VERBOSE

# Call a source code checker (by default, ""sparse"") as part of the
# C compilation.
#
# Use 'make C=1' to enable checking of only re-compiled files.
# Use 'make C=2' to enable checking of *all* source files, regardless
# of whether they are re-compiled or not.
#
# See the file ""Documentation/dev-tools/sparse.rst"" for more details,
# including where to get the ""sparse"" utility.

ifeq (""$(origin C)"", ""command line"")
  KBUILD_CHECKSRC = $(C)
endif
ifndef KBUILD_CHECKSRC
  KBUILD_CHECKSRC = 0
endif

export KBUILD_CHECKSRC

# Enable ""clippy"" (a linter) as part of the Rust compilation.
#
# Use 'make CLIPPY=1' to enable it.
ifeq (""$(origin CLIPPY)"", ""command line"")
  KBUILD_CLIPPY := $(CLIPPY)
endif

export KBUILD_CLIPPY

# Use make M=dir or set the environment variable KBUILD_EXTMOD to specify the
# directory of external module to build. Setting M= takes precedence.
ifeq (""$(origin M)"", ""command line"")
  KBUILD_EXTMOD := $(M)
endif

$(if $(word 2, $(KBUILD_EXTMOD)), \
	$(error building multiple external modules is not supported))

$(foreach x, % :, $(if $(findstring $x, $(KBUILD_EXTMOD)), \
	$(error module directory path cannot contain '$x')))

# Remove trailing slashes
ifneq ($(filter %/, $(KBUILD_EXTMOD)),)
KBUILD_EXTMOD := $(shell dirname $(KBUILD_EXTMOD).)
endif

export KBUILD_EXTMOD

# backward compatibility
KBUILD_EXTRA_WARN ?= $(KBUILD_ENABLE_EXTRA_GCC_CHECKS)

ifeq (""$(origin W)"", ""command line"")
  KBUILD_EXTRA_WARN := $(W)
endif

export KBUILD_EXTRA_WARN

# Kbuild will save output files in the current working directory.
# This does not need to match to the root of the kernel source tree.
#
# For example, you can do this:
#
#  cd /dir/to/store/output/files; make -f /dir/to/kernel/source/Makefile
#
# If you want to save output files in a different location, there are
# two syntaxes to specify it.
#
# 1) O=
# Use ""make O=dir/to/store/output/files/""
#
# 2) Set KBUILD_OUTPUT
# Set the environment variable KBUILD_OUTPUT to point to the output directory.
# export KBUILD_OUTPUT=dir/to/store/output/files/; make
#
# The O= assignment takes precedence over the KBUILD_OUTPUT environment
# variable.

# Do we want to change the working directory?
ifeq (""$(origin O)"", ""command line"")
  KBUILD_OUTPUT := $(O)
endif

ifneq ($(KBUILD_OUTPUT),)
# $(realpath ...) gets empty if the path does not exist. Run 'mkdir -p' first.
$(shell mkdir -p ""$(KBUILD_OUTPUT)"")
# $(realpath ...) resolves symlinks
abs_objtree := $(realpath $(KBUILD_OUTPUT))
$(if $(abs_objtree),,$(error failed to create output directory ""$(KBUILD_OUTPUT)""))
endif # ifneq ($(KBUILD_OUTPUT),)

ifneq ($(words $(subst :, ,$(abs_srctree))), 1)
$(error source directory cannot contain spaces or colons)
endif

ifneq ($(filter 3.%,$(MAKE_VERSION)),)
# 'MAKEFLAGS += -rR' does not immediately become effective for GNU Make 3.x
# We need to invoke sub-make to avoid implicit rules in the top Makefile.
need-sub-make := 1
# Cancel implicit rules for this Makefile.
$(this-makefile): ;
endif

export sub_make_done := 1

endif # sub_make_done

ifeq ($(abs_objtree),$(CURDIR))
# Suppress ""Entering directory ..."" if we are at the final work directory.
no-print-directory := --no-print-directory
else
# Recursion to show ""Entering directory ...""
need-sub-make := 1
endif

ifeq ($(filter --no-print-directory, $(MAKEFLAGS)),)
# If --no-print-directory is unset, recurse once again to set it.
# You may end up recursing into __sub-make twice. This is needed due to the
# behavior change in GNU Make 4.4.1.
need-sub-make := 1
endif

ifeq ($(need-sub-make),1)

PHONY += $(MAKECMDGOALS) __sub-make

$(filter-out $(this-makefile), $(MAKECMDGOALS)) __all: __sub-make
	@:

# Invoke a second make in the output directory, passing relevant variables
__sub-make:
	$(Q)$(MAKE) $(no-print-directory) -C $(abs_objtree) \
	-f $(abs_srctree)/Makefile $(MAKECMDGOALS)

else # need-sub-make

# We process the rest of the Makefile if this is the final invocation of make

ifeq ($(abs_srctree),$(abs_objtree))
        # building in the source tree
        srctree := .
	building_out_of_srctree :=
else
        ifeq ($(abs_srctree)/,$(dir $(abs_objtree)))
                # building in a subdirectory of the source tree
                srctree := ..
        else
                srctree := $(abs_srctree)
        endif
	building_out_of_srctree := 1
endif

ifneq ($(KBUILD_ABS_SRCTREE),)
srctree := $(abs_srctree)
endif

objtree		:= .
VPATH		:= $(srctree)

export building_out_of_srctree srctree objtree VPATH

# To make sure we do not include .config for any of the *config targets
# catch them early, and hand them over to scripts/kconfig/Makefile
# It is allowed to specify more targets when calling make, including
# mixing *config targets and build targets.
# For example 'make oldconfig all'.
# Detect when mixed targets is specified, and make a second invocation
# of make so .config is not included in this case either (for *config).

version_h := include/generated/uapi/linux/version.h

clean-targets := %clean mrproper cleandocs
no-dot-config-targets := $(clean-targets) \
			 cscope gtags TAGS tags help% %docs check% coccicheck \
			 $(version_h) headers headers_% archheaders archscripts \
			 %asm-generic kernelversion %src-pkg dt_binding_check \
			 outputmakefile rustavailable rustfmt rustfmtcheck
no-sync-config-targets := $(no-dot-config-targets) %install modules_sign kernelrelease \
			  image_name
single-targets := %.a %.i %.ko %.lds %.ll %.lst %.mod %.o %.rsi %.s %.symtypes %/

config-build	:=
mixed-build	:=
need-config	:= 1
may-sync-config	:= 1
single-build	:=

ifneq ($(filter $(no-dot-config-targets), $(MAKECMDGOALS)),)
    ifeq ($(filter-out $(no-dot-config-targets), $(MAKECMDGOALS)),)
		need-config :=
    endif
endif

ifneq ($(filter $(no-sync-config-targets), $(MAKECMDGOALS)),)
    ifeq ($(filter-out $(no-sync-config-targets), $(MAKECMDGOALS)),)
		may-sync-config :=
    endif
endif

need-compiler := $(may-sync-config)

ifneq ($(KBUILD_EXTMOD),)
	may-sync-config :=
endif

ifeq ($(KBUILD_EXTMOD),)
        ifneq ($(filter %config,$(MAKECMDGOALS)),)
		config-build := 1
                ifneq ($(words $(MAKECMDGOALS)),1)
			mixed-build := 1
                endif
        endif
endif

# We cannot build single targets and the others at the same time
ifneq ($(filter $(single-targets), $(MAKECMDGOALS)),)
	single-build := 1
    ifneq ($(filter-out $(single-targets), $(MAKECMDGOALS)),)
		mixed-build := 1
    endif
endif

# For ""make -j clean all"", ""make -j mrproper defconfig all"", etc.
ifneq ($(filter $(clean-targets),$(MAKECMDGOALS)),)
        ifneq ($(filter-out $(clean-targets),$(MAKECMDGOALS)),)
		mixed-build := 1
        endif
endif

# install and modules_install need also be processed one by one
ifneq ($(filter install,$(MAKECMDGOALS)),)
        ifneq ($(filter modules_install,$(MAKECMDGOALS)),)
		mixed-build := 1
        endif
endif

ifdef mixed-build
# ===========================================================================
# We're called with mixed targets (*config and build targets).
# Handle them one by one.

PHONY += $(MAKECMDGOALS) __build_one_by_one

$(MAKECMDGOALS): __build_one_by_one
	@:

__build_one_by_one:
	$(Q)set -e; \
	for i in $(MAKECMDGOALS); do \
		$(MAKE) -f $(srctree)/Makefile $$i; \
	done

else # !mixed-build

include $(srctree)/scripts/Kbuild.include

# Read KERNELRELEASE from include/config/kernel.release (if it exists)
KERNELRELEASE = $(call read-file, include/config/kernel.release)
KERNELVERSION = $(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(SUBLEVEL)))$(EXTRAVERSION)
export VERSION PATCHLEVEL SUBLEVEL KERNELRELEASE KERNELVERSION

include $(srctree)/scripts/subarch.include

# Cross compiling and selecting different set of gcc/bin-utils
# ---------------------------------------------------------------------------
#
# When performing cross compilation for other architectures ARCH shall be set
# to the target architecture. (See arch/* for the possibilities).
# ARCH can be set during invocation of make:
# make ARCH=arm64
# Another way is to have ARCH set in the environment.
# The default ARCH is the host where make is executed.

# CROSS_COMPILE specify the prefix used for all executables used
# during compilation. Only gcc and related bin-utils executables
# are prefixed with $(CROSS_COMPILE).
# CROSS_COMPILE can be set on the command line
# make CROSS_COMPILE=aarch64-linux-gnu-
# Alternatively CROSS_COMPILE can be set in the environment.
# Default value for CROSS_COMPILE is not to prefix executables
# Note: Some architectures assign CROSS_COMPILE in their arch/*/Makefile
ARCH		?= $(SUBARCH)

# Architecture as present in compile.h
UTS_MACHINE 	:= $(ARCH)
SRCARCH 	:= $(ARCH)

# Additional ARCH settings for x86
ifeq ($(ARCH),i386)
        SRCARCH := x86
endif
ifeq ($(ARCH),x86_64)
        SRCARCH := x86
endif

# Additional ARCH settings for sparc
ifeq ($(ARCH),sparc32)
       SRCARCH := sparc
endif
ifeq ($(ARCH),sparc64)
       SRCARCH := sparc
endif

# Additional ARCH settings for parisc
ifeq ($(ARCH),parisc64)
       SRCARCH := parisc
endif

export cross_compiling :=
ifneq ($(SRCARCH),$(SUBARCH))
cross_compiling := 1
endif

KCONFIG_CONFIG	?= .config
export KCONFIG_CONFIG

# SHELL used by kbuild
CONFIG_SHELL := sh

HOST_LFS_CFLAGS := $(shell getconf LFS_CFLAGS 2>/dev/null)
HOST_LFS_LDFLAGS := $(shell getconf LFS_LDFLAGS 2>/dev/null)
HOST_LFS_LIBS := $(shell getconf LFS_LIBS 2>/dev/null)

ifneq ($(LLVM),)
ifneq ($(filter %/,$(LLVM)),)
LLVM_PREFIX := $(LLVM)
else ifneq ($(filter -%,$(LLVM)),)
LLVM_SUFFIX := $(LLVM)
endif

HOSTCC	= $(LLVM_PREFIX)clang$(LLVM_SUFFIX)
HOSTCXX	= $(LLVM_PREFIX)clang++$(LLVM_SUFFIX)
else
HOSTCC	= gcc
HOSTCXX	= g++
endif
HOSTRUSTC = rustc
HOSTPKG_CONFIG	= pkg-config

KBUILD_USERHOSTCFLAGS := -Wall -Wmissing-prototypes -Wstrict-prototypes \
			 -O2 -fomit-frame-pointer -std=gnu11
KBUILD_USERCFLAGS  := $(KBUILD_USERHOSTCFLAGS) $(USERCFLAGS)
KBUILD_USERLDFLAGS := $(USERLDFLAGS)

# These flags apply to all Rust code in the tree, including the kernel and
# host programs.
export rust_common_flags := --edition=2021 \
			    -Zbinary_dep_depinfo=y \
			    -Dunsafe_op_in_unsafe_fn -Drust_2018_idioms \
			    -Dunreachable_pub -Dnon_ascii_idents \
			    -Wmissing_docs \
			    -Drustdoc::missing_crate_level_docs \
			    -Dclippy::correctness -Dclippy::style \
			    -Dclippy::suspicious -Dclippy::complexity \
			    -Dclippy::perf \
			    -Dclippy::let_unit_value -Dclippy::mut_mut \
			    -Dclippy::needless_bitwise_bool \
			    -Dclippy::needless_continue \
			    -Dclippy::no_mangle_with_rust_abi \
			    -Wclippy::dbg_macro

KBUILD_HOSTCFLAGS   := $(KBUILD_USERHOSTCFLAGS) $(HOST_LFS_CFLAGS) $(HOSTCFLAGS)
KBUILD_HOSTCXXFLAGS := -Wall -O2 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS)
KBUILD_HOSTRUSTFLAGS := $(rust_common_flags) -O -Cstrip=debuginfo \
			-Zallow-features= $(HOSTRUSTFLAGS)
KBUILD_HOSTLDFLAGS  := $(HOST_LFS_LDFLAGS) $(HOSTLDFLAGS)
KBUILD_HOSTLDLIBS   := $(HOST_LFS_LIBS) $(HOSTLDLIBS)

# Make variables (CC, etc...)
CPP		= $(CC) -E
ifneq ($(LLVM),)
CC		= $(LLVM_PREFIX)clang$(LLVM_SUFFIX)
LD		= $(LLVM_PREFIX)ld.lld$(LLVM_SUFFIX)
AR		= $(LLVM_PREFIX)llvm-ar$(LLVM_SUFFIX)
NM		= $(LLVM_PREFIX)llvm-nm$(LLVM_SUFFIX)
OBJCOPY		= $(LLVM_PREFIX)llvm-objcopy$(LLVM_SUFFIX)
OBJDUMP		= $(LLVM_PREFIX)llvm-objdump$(LLVM_SUFFIX)
READELF		= $(LLVM_PREFIX)llvm-readelf$(LLVM_SUFFIX)
STRIP		= $(LLVM_PREFIX)llvm-strip$(LLVM_SUFFIX)
else
CC		= $(CROSS_COMPILE)gcc
LD		= $(CROSS_COMPILE)ld
AR		= $(CROSS_COMPILE)ar
NM		= $(CROSS_COMPILE)nm
OBJCOPY		= $(CROSS_COMPILE)objcopy
OBJDUMP		= $(CROSS_COMPILE)objdump
READELF		= $(CROSS_COMPILE)readelf
STRIP		= $(CROSS_COMPILE)strip
endif
RUSTC		= rustc
RUSTDOC		= rustdoc
RUSTFMT		= rustfmt
CLIPPY_DRIVER	= clippy-driver
BINDGEN		= bindgen
CARGO		= cargo
PAHOLE		= pahole
RESOLVE_BTFIDS	= $(objtree)/tools/bpf/resolve_btfids/resolve_btfids
LEX		= flex
YACC		= bison
AWK		= awk
INSTALLKERNEL  := installkernel
PERL		= perl
PYTHON3		= python3
CHECK		= sparse
BASH		= bash
KGZIP		= gzip
KBZIP2		= bzip2
KLZOP		= lzop
LZMA		= lzma
LZ4		= lz4c
XZ		= xz
ZSTD		= zstd

CHECKFLAGS     := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ \
		  -Wbitwise -Wno-return-void -Wno-unknown-attribute $(CF)
NOSTDINC_FLAGS :=
CFLAGS_MODULE   =
RUSTFLAGS_MODULE =
AFLAGS_MODULE   =
LDFLAGS_MODULE  =
CFLAGS_KERNEL	=
RUSTFLAGS_KERNEL =
AFLAGS_KERNEL	=
LDFLAGS_vmlinux =

# Use USERINCLUDE when you must reference the UAPI directories only.
USERINCLUDE    := \
		-I$(srctree)/arch/$(SRCARCH)/include/uapi \
		-I$(objtree)/arch/$(SRCARCH)/include/generated/uapi \
		-I$(srctree)/include/uapi \
		-I$(objtree)/include/generated/uapi \
                -include $(srctree)/include/linux/compiler-version.h \
                -include $(srctree)/include/linux/kconfig.h

# Use LINUXINCLUDE when you must reference the include/ directory.
# Needed to be compatible with the O= option
LINUXINCLUDE    := \
		-I$(srctree)/arch/$(SRCARCH)/include \
		-I$(objtree)/arch/$(SRCARCH)/include/generated \
		$(if $(building_out_of_srctree),-I$(srctree)/include) \
		-I$(objtree)/include \
		$(USERINCLUDE)

KBUILD_AFLAGS   := -D__ASSEMBLY__ -fno-PIE

KBUILD_CFLAGS :=
KBUILD_CFLAGS += -std=gnu11
KBUILD_CFLAGS += -fshort-wchar
KBUILD_CFLAGS += -funsigned-char
KBUILD_CFLAGS += -fno-common
KBUILD_CFLAGS += -fno-PIE
KBUILD_CFLAGS += -fno-strict-aliasing

KBUILD_CPPFLAGS := -D__KERNEL__
KBUILD_RUSTFLAGS := $(rust_common_flags) \
		    --target=$(objtree)/scripts/target.json \
		    -Cpanic=abort -Cembed-bitcode=n -Clto=n \
		    -Cforce-unwind-tables=n -Ccodegen-units=1 \
		    -Csymbol-mangling-version=v0 \
		    -Crelocation-model=static \
		    -Zfunction-sections=n \
		    -Dclippy::float_arithmetic

KBUILD_AFLAGS_KERNEL :=
KBUILD_CFLAGS_KERNEL :=
KBUILD_RUSTFLAGS_KERNEL :=
KBUILD_AFLAGS_MODULE  := -DMODULE
KBUILD_CFLAGS_MODULE  := -DMODULE
KBUILD_RUSTFLAGS_MODULE := --cfg MODULE
KBUILD_LDFLAGS_MODULE :=
KBUILD_LDFLAGS :=
CLANG_FLAGS :=

ifeq ($(KBUILD_CLIPPY),1)
	RUSTC_OR_CLIPPY_QUIET := CLIPPY
	RUSTC_OR_CLIPPY = $(CLIPPY_DRIVER)
else
	RUSTC_OR_CLIPPY_QUIET := RUSTC
	RUSTC_OR_CLIPPY = $(RUSTC)
endif

ifdef RUST_LIB_SRC
	export RUST_LIB_SRC
endif

# Allows the usage of unstable features in stable compilers.
export RUSTC_BOOTSTRAP := 1

export ARCH SRCARCH CONFIG_SHELL BASH HOSTCC KBUILD_HOSTCFLAGS CROSS_COMPILE LD CC HOSTPKG_CONFIG
export RUSTC RUSTDOC RUSTFMT RUSTC_OR_CLIPPY_QUIET RUSTC_OR_CLIPPY BINDGEN CARGO
export HOSTRUSTC KBUILD_HOSTRUSTFLAGS
export CPP AR NM STRIP OBJCOPY OBJDUMP READELF PAHOLE RESOLVE_BTFIDS LEX YACC AWK INSTALLKERNEL
export PERL PYTHON3 CHECK CHECKFLAGS MAKE UTS_MACHINE HOSTCXX
export KGZIP KBZIP2 KLZOP LZMA LZ4 XZ ZSTD
export KBUILD_HOSTCXXFLAGS KBUILD_HOSTLDFLAGS KBUILD_HOSTLDLIBS LDFLAGS_MODULE
export KBUILD_USERCFLAGS KBUILD_USERLDFLAGS

export KBUILD_CPPFLAGS NOSTDINC_FLAGS LINUXINCLUDE OBJCOPYFLAGS KBUILD_LDFLAGS
export KBUILD_CFLAGS CFLAGS_KERNEL CFLAGS_MODULE
export KBUILD_RUSTFLAGS RUSTFLAGS_KERNEL RUSTFLAGS_MODULE
export KBUILD_AFLAGS AFLAGS_KERNEL AFLAGS_MODULE
export KBUILD_AFLAGS_MODULE KBUILD_CFLAGS_MODULE KBUILD_RUSTFLAGS_MODULE KBUILD_LDFLAGS_MODULE
export KBUILD_AFLAGS_KERNEL KBUILD_CFLAGS_KERNEL KBUILD_RUSTFLAGS_KERNEL

# Files to ignore in find ... statements

export RCS_FIND_IGNORE := \( -name SCCS -o -name BitKeeper -o -name .svn -o    \
			  -name CVS -o -name .pc -o -name .hg -o -name .git \) \
			  -prune -o

# ===========================================================================
# Rules shared between *config targets and build targets

# Basic helpers built in scripts/basic/
PHONY += scripts_basic
scripts_basic:
	$(Q)$(MAKE) $(build)=scripts/basic

PHONY += outputmakefile
ifdef building_out_of_srctree
# Before starting out-of-tree build, make sure the source tree is clean.
# outputmakefile generates a Makefile in the output directory, if using a
# separate output directory. This allows convenient use of make in the
# output directory.
# At the same time when output Makefile generated, generate .gitignore to
# ignore whole output directory

quiet_cmd_makefile = GEN     Makefile
      cmd_makefile = { \
	echo ""\# Automatically generated by $(srctree)/Makefile: don't edit""; \
	echo ""include $(srctree)/Makefile""; \
	} > Makefile

outputmakefile:
	@if [ -f $(srctree)/.config -o \
		 -d $(srctree)/include/config -o \
		 -d $(srctree)/arch/$(SRCARCH)/include/generated ]; then \
		echo >&2 ""***""; \
		echo >&2 ""*** The source tree is not clean, please run 'make$(if $(findstring command line, $(origin ARCH)), ARCH=$(ARCH)) mrproper'""; \
		echo >&2 ""*** in $(abs_srctree)"";\
		echo >&2 ""***""; \
		false; \
	fi
	$(Q)ln -fsn $(srctree) source
	$(call cmd,makefile)
	$(Q)test -e .gitignore || \
	{ echo ""# this is build directory, ignore it""; echo ""*""; } > .gitignore
endif

# The expansion should be delayed until arch/$(SRCARCH)/Makefile is included.
# Some architectures define CROSS_COMPILE in arch/$(SRCARCH)/Makefile.
# CC_VERSION_TEXT is referenced from Kconfig (so it needs export),
# and from include/config/auto.conf.cmd to detect the compiler upgrade.
CC_VERSION_TEXT = $(subst $(pound),,$(shell LC_ALL=C $(CC) --version 2>/dev/null | head -n 1))

ifneq ($(findstring clang,$(CC_VERSION_TEXT)),)
include $(srctree)/scripts/Makefile.clang
endif

# Include this also for config targets because some architectures need
# cc-cross-prefix to determine CROSS_COMPILE.
ifdef need-compiler
include $(srctree)/scripts/Makefile.compiler
endif

ifdef config-build
# ===========================================================================
# *config targets only - make sure prerequisites are updated, and descend
# in scripts/kconfig to make the *config target

# Read arch-specific Makefile to set KBUILD_DEFCONFIG as needed.
# KBUILD_DEFCONFIG may point out an alternative default configuration
# used for 'make defconfig'
include $(srctree)/arch/$(SRCARCH)/Makefile
export KBUILD_DEFCONFIG KBUILD_KCONFIG CC_VERSION_TEXT

config: outputmakefile scripts_basic FORCE
	$(Q)$(MAKE) $(build)=scripts/kconfig $@

%config: outputmakefile scripts_basic FORCE
	$(Q)$(MAKE) $(build)=scripts/kconfig $@

else #!config-build
# ===========================================================================
# Build targets only - this includes vmlinux, arch-specific targets, clean
# targets and others. In general all targets except *config targets.

# If building an external module we do not care about the all: rule
# but instead __all depend on modules
PHONY += all
ifeq ($(KBUILD_EXTMOD),)
__all: all
else
__all: modules
endif

targets :=

# Decide whether to build built-in, modular, or both.
# Normally, just do built-in.

KBUILD_MODULES :=
KBUILD_BUILTIN := 1

# If we have only ""make modules"", don't compile built-in objects.
ifeq ($(MAKECMDGOALS),modules)
  KBUILD_BUILTIN :=
endif

# If we have ""make <whatever> modules"", compile modules
# in addition to whatever we do anyway.
# Just ""make"" or ""make all"" shall build modules as well

ifneq ($(filter all modules nsdeps %compile_commands.json clang-%,$(MAKECMDGOALS)),)
  KBUILD_MODULES := 1
endif

ifeq ($(MAKECMDGOALS),)
  KBUILD_MODULES := 1
endif

export KBUILD_MODULES KBUILD_BUILTIN

ifdef need-config
include include/config/auto.conf
endif

ifeq ($(KBUILD_EXTMOD),)
# Objects we will link into vmlinux / subdirs we need to visit
core-y		:=
drivers-y	:=
libs-y		:= lib/
endif # KBUILD_EXTMOD

# The all: target is the default when no target is given on the
# command line.
# This allow a user to issue only 'make' to build a kernel including modules
# Defaults to vmlinux, but the arch makefile usually adds further targets
all: vmlinux

CFLAGS_GCOV	:= -fprofile-arcs -ftest-coverage
ifdef CONFIG_CC_IS_GCC
CFLAGS_GCOV	+= -fno-tree-loop-im
endif
export CFLAGS_GCOV

# The arch Makefiles can override CC_FLAGS_FTRACE. We may also append it later.
ifdef CONFIG_FUNCTION_TRACER
  CC_FLAGS_FTRACE := -pg
endif

include $(srctree)/arch/$(SRCARCH)/Makefile

ifdef need-config
ifdef may-sync-config
# Read in dependencies to all Kconfig* files, make sure to run syncconfig if
# changes are detected. This should be included after arch/$(SRCARCH)/Makefile
# because some architectures define CROSS_COMPILE there.
include include/config/auto.conf.cmd

$(KCONFIG_CONFIG):
	@echo >&2 '***'
	@echo >&2 '*** Configuration file ""$@"" not found!'
	@echo >&2 '***'
	@echo >&2 '*** Please run some configurator (e.g. ""make oldconfig"" or'
	@echo >&2 '*** ""make menuconfig"" or ""make xconfig"").'
	@echo >&2 '***'
	@/bin/false

# The actual configuration files used during the build are stored in
# include/generated/ and include/config/. Update them if .config is newer than
# include/config/auto.conf (which mirrors .config).
#
# This exploits the 'multi-target pattern rule' trick.
# The syncconfig should be executed only once to make all the targets.
# (Note: use the grouped target '&:' when we bump to GNU Make 4.3)
#
# Do not use $(call cmd,...) here. That would suppress prompts from syncconfig,
# so you cannot notice that Kconfig is waiting for the user input.
%/config/auto.conf %/config/auto.conf.cmd %/generated/autoconf.h %/generated/rustc_cfg: $(KCONFIG_CONFIG)
	$(Q)$(kecho) ""  SYNC    $@""
	$(Q)$(MAKE) -f $(srctree)/Makefile syncconfig
else # !may-sync-config
# External modules and some install targets need include/generated/autoconf.h
# and include/config/auto.conf but do not care if they are up-to-date.
# Use auto.conf to trigger the test
PHONY += include/config/auto.conf

include/config/auto.conf:
	@test -e include/generated/autoconf.h -a -e $@ || (		\
	echo >&2;							\
	echo >&2 ""  ERROR: Kernel configuration is invalid."";		\
	echo >&2 ""         include/generated/autoconf.h or $@ are missing."";\
	echo >&2 ""         Run 'make oldconfig && make prepare' on kernel src to fix it."";	\
	echo >&2 ;							\
	/bin/false)

endif # may-sync-config
endif # need-config

KBUILD_CFLAGS	+= -fno-delete-null-pointer-checks

# This selects which ARM instruction set is used.
arch-$(CONFIG_CPU_32v7M)	:=-march=armv7-m
arch-$(CONFIG_CPU_32v7)		:=-march=armv7-a
arch-$(CONFIG_CPU_32v6)		:=-march=armv6
# Only override the compiler option if ARMv6. The ARMv6K extensions are
# always available in ARMv7
ifeq ($(CONFIG_CPU_32v6),y)
arch-$(CONFIG_CPU_32v6K)	:=-march=armv6k
endif
arch-$(CONFIG_CPU_32v5)		:=-march=armv5te
arch-$(CONFIG_CPU_32v4T)	:=-march=armv4t
arch-$(CONFIG_CPU_32v4)		:=-march=armv4
arch-$(CONFIG_CPU_32v3)		:=-march=armv3m

# Note that GCC does not numerically define an architecture version
# macro, but instead defines a whole series of macros which makes
# testing for a specific architecture or later rather impossible.
cpp-$(CONFIG_CPU_32v7M)		:=-D__LINUX_ARM_ARCH__=7
cpp-$(CONFIG_CPU_32v7)		:=-D__LINUX_ARM_ARCH__=7
cpp-$(CONFIG_CPU_32v6)		:=-D__LINUX_ARM_ARCH__=6
# Only override the compiler option if ARMv6. The ARMv6K extensions are
# always available in ARMv7
ifeq ($(CONFIG_CPU_32v6),y)
cpp-$(CONFIG_CPU_32v6K)		:=-D__LINUX_ARM_ARCH__=6
endif
cpp-$(CONFIG_CPU_32v5)		:=-D__LINUX_ARM_ARCH__=5
cpp-$(CONFIG_CPU_32v4T)		:=-D__LINUX_ARM_ARCH__=4
cpp-$(CONFIG_CPU_32v4)		:=-D__LINUX_ARM_ARCH__=4
cpp-$(CONFIG_CPU_32v3)		:=-D__LINUX_ARM_ARCH__=3

# This selects how we optimise for the processor.
tune-$(CONFIG_CPU_ARM7TDMI)	:=-mtune=arm7tdmi
tune-$(CONFIG_CPU_ARM720T)	:=-mtune=arm7tdmi
tune-$(CONFIG_CPU_ARM740T)	:=-mtune=arm7tdmi
tune-$(CONFIG_CPU_ARM9TDMI)	:=-mtune=arm9tdmi
tune-$(CONFIG_CPU_ARM940T)	:=-mtune=arm9tdmi
tune-$(CONFIG_CPU_ARM946E)	:=-mtune=arm9e
tune-$(CONFIG_CPU_ARM920T)	:=-mtune=arm9tdmi
tune-$(CONFIG_CPU_ARM922T)	:=-mtune=arm9tdmi
tune-$(CONFIG_CPU_ARM925T)	:=-mtune=arm9tdmi
tune-$(CONFIG_CPU_ARM926T)	:=-mtune=arm9tdmi
tune-$(CONFIG_CPU_FA526)	:=-mtune=arm9tdmi
tune-$(CONFIG_CPU_SA110)	:=-mtune=strongarm110
tune-$(CONFIG_CPU_SA1100)	:=-mtune=strongarm1100
tune-$(CONFIG_CPU_XSCALE)	:=-mtune=xscale
tune-$(CONFIG_CPU_XSC3)		:=-mtune=xscale
tune-$(CONFIG_CPU_FEROCEON)	:=-mtune=xscale
tune-$(CONFIG_CPU_V6)		:=-mtune=arm1136j-s
tune-$(CONFIG_CPU_V6K)		:=-mtune=arm1136j-s

KBUILD_CPPFLAGS	+=$(cpp-y)
KBUILD_CFLAGS	+=$(arch-y) $(tune-y)
KBUILD_AFLAGS	+=$(arch-y) $(tune-y)

# This selects which x86 instruction set is used.
cflags-$(CONFIG_M486SX)		+= -march=i486
cflags-$(CONFIG_M486)		+= -march=i486
cflags-$(CONFIG_M586)		+= -march=i586
cflags-$(CONFIG_M586TSC)	+= -march=i586
cflags-$(CONFIG_M586MMX)	+= -march=pentium-mmx
cflags-$(CONFIG_M686)		+= -march=i686
cflags-$(CONFIG_MPENTIUMII)	+= -march=i686 $(call tune,pentium2)
cflags-$(CONFIG_MPENTIUMIII)	+= -march=i686 $(call tune,pentium3)
cflags-$(CONFIG_MPENTIUMM)	+= -march=i686 $(call tune,pentium3)
cflags-$(CONFIG_MPENTIUM4)	+= -march=i686 $(call tune,pentium4)
cflags-$(CONFIG_MK6)		+= -march=k6
# Please note, that patches that add -march=athlon-xp and friends are pointless.
# They make zero difference whatsosever to performance at this time.
cflags-$(CONFIG_MK7)		+= -march=athlon
cflags-$(CONFIG_MK8)		+= $(call cc-option,-march=k8,-march=athlon)
cflags-$(CONFIG_MCRUSOE)	+= -march=i686 $(align)
cflags-$(CONFIG_MEFFICEON)	+= -march=i686 $(call tune,pentium3) $(align)
cflags-$(CONFIG_MWINCHIPC6)	+= $(call cc-option,-march=winchip-c6,-march=i586)
cflags-$(CONFIG_MWINCHIP3D)	+= $(call cc-option,-march=winchip2,-march=i586)
cflags-$(CONFIG_MCYRIXIII)	+= $(call cc-option,-march=c3,-march=i486) $(align)
cflags-$(CONFIG_MVIAC3_2)	+= $(call cc-option,-march=c3-2,-march=i686)
cflags-$(CONFIG_MVIAC7)		+= -march=i686
cflags-$(CONFIG_MCORE2)		+= -march=i686 $(call tune,core2)
cflags-$(CONFIG_MATOM)		+= $(call cc-option,-march=atom,$(call cc-option,-march=core2,-march=i686)) \
$(call cc-option,-mtune=atom,$(call cc-option,-mtune=generic))

# AMD Elan support
cflags-$(CONFIG_MELAN)		+= -march=i486

# Geode GX1 support
cflags-$(CONFIG_MGEODEGX1)	+= -march=pentium-mmx
cflags-$(CONFIG_MGEODE_LX)	+= $(call cc-option,-march=geode,-march=pentium-mmx)
# add at the end to overwrite eventual tuning options from earlier
# cpu entries
cflags-$(CONFIG_X86_GENERIC) 	+= $(call tune,generic,$(call tune,i686))

# Bug fix for binutils: this option is required in order to keep
# binutils from generating NOPL instructions against our will.
ifneq ($(CONFIG_X86_P6_NOP),y)
cflags-y			+= $(call cc-option,-Wa$(comma)-mtune=generic32,)
endif

# x86_64 instruction set
cflags64-$(CONFIG_MK8)		+= -march=k8
cflags64-$(CONFIG_MPSC)		+= -march=nocona
cflags64-$(CONFIG_MK8SSE3)	+= -march=k8-sse3
cflags64-$(CONFIG_MK10) 		+= -march=amdfam10
cflags64-$(CONFIG_MBARCELONA) 	+= -march=barcelona
cflags64-$(CONFIG_MBOBCAT) 	+= -march=btver1
cflags64-$(CONFIG_MJAGUAR) 	+= -march=btver2
cflags64-$(CONFIG_MBULLDOZER) 	+= -march=bdver1
cflags64-$(CONFIG_MPILEDRIVER)	+= -march=bdver2 -mno-tbm
cflags64-$(CONFIG_MSTEAMROLLER) 	+= -march=bdver3 -mno-tbm
cflags64-$(CONFIG_MEXCAVATOR) 	+= -march=bdver4 -mno-tbm
cflags64-$(CONFIG_MZEN) 		+= -march=znver1
cflags64-$(CONFIG_MZEN2) 	+= -march=znver2
cflags64-$(CONFIG_MZEN3) 	+= -march=znver3
cflags64-$(CONFIG_MZEN4) 	+= -march=znver4
cflags64-$(CONFIG_MNATIVE_INTEL) += -march=native
cflags64-$(CONFIG_MNATIVE_AMD) 	+= -march=native
cflags64-$(CONFIG_MATOM) 	+= -march=bonnell
cflags64-$(CONFIG_MCORE2) 	+= -march=core2
cflags64-$(CONFIG_MNEHALEM) 	+= -march=nehalem
cflags64-$(CONFIG_MWESTMERE) 	+= -march=westmere
cflags64-$(CONFIG_MSILVERMONT) 	+= -march=silvermont
cflags64-$(CONFIG_MGOLDMONT) 	+= -march=goldmont
cflags64-$(CONFIG_MGOLDMONTPLUS) += -march=goldmont-plus
cflags64-$(CONFIG_MSANDYBRIDGE) 	+= -march=sandybridge
cflags64-$(CONFIG_MIVYBRIDGE) 	+= -march=ivybridge
cflags64-$(CONFIG_MHASWELL) 	+= -march=haswell
cflags64-$(CONFIG_MBROADWELL) 	+= -march=broadwell
cflags64-$(CONFIG_MSKYLAKE) 	+= -march=skylake
cflags64-$(CONFIG_MSKYLAKEX) 	+= -march=skylake-avx512
cflags64-$(CONFIG_MCANNONLAKE) 	+= -march=cannonlake
cflags64-$(CONFIG_MICELAKE) 	+= -march=icelake-client
cflags64-$(CONFIG_MCASCADELAKE) 	+= -march=cascadelake
cflags64-$(CONFIG_MCOOPERLAKE) 	+= -march=cooperlake
cflags64-$(CONFIG_MTIGERLAKE) 	+= -march=tigerlake
cflags64-$(CONFIG_MSAPPHIRERAPIDS) += -march=sapphirerapids
cflags64-$(CONFIG_MROCKETLAKE) 	+= -march=rocketlake
cflags64-$(CONFIG_MALDERLAKE) 	+= -march=alderlake
cflags64-$(CONFIG_MRAPTORLAKE) 	+= -march=raptorlake
cflags64-$(CONFIG_MMETEORLAKE) 	+= -march=meteorlake
cflags64-$(CONFIG_MEMERALDRAPIDS)	+= -march=emeraldrapids
cflags64-$(CONFIG_GENERIC_CPU2) 	+= -march=x86-64-v2
cflags64-$(CONFIG_GENERIC_CPU3) 	+= -march=x86-64-v3
cflags64-$(CONFIG_GENERIC_CPU4) 	+= -march=x86-64-v4
cflags64-$(CONFIG_GENERIC_CPU)	+= -mtune=generic
KBUILD_CFLAGS += $(cflags64-y)

rustflags64-$(CONFIG_MK8)		+= -Ctarget-cpu=k8
rustflags64-$(CONFIG_MPSC)	+= -Ctarget-cpu=nocona
rustflags64-$(CONFIG_MCORE2)	+= -Ctarget-cpu=core2
rustflags64-$(CONFIG_MATOM)	+= -Ctarget-cpu=atom
rustflags64-$(CONFIG_GENERIC_CPU)	+= -Ztune-cpu=generic
KBUILD_RUSTFLAGS += $(rustflags64-y)

ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
KBUILD_CFLAGS += -O2
KBUILD_RUSTFLAGS += -Copt-level=2
else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
KBUILD_CFLAGS += -Os
KBUILD_RUSTFLAGS += -Copt-level=s
endif

# Always set `debug-assertions` and `overflow-checks` because their default
# depends on `opt-level` and `debug-assertions`, respectively.
KBUILD_RUSTFLAGS += -Cdebug-assertions=$(if $(CONFIG_RUST_DEBUG_ASSERTIONS),y,n)
KBUILD_RUSTFLAGS += -Coverflow-checks=$(if $(CONFIG_RUST_OVERFLOW_CHECKS),y,n)

# Tell gcc to never replace conditional load with a non-conditional one
ifdef CONFIG_CC_IS_GCC
# gcc-10 renamed --param=allow-store-data-races=0 to
# -fno-allow-store-data-races.
KBUILD_CFLAGS	+= $(call cc-option,--param=allow-store-data-races=0)
KBUILD_CFLAGS	+= $(call cc-option,-fno-allow-store-data-races)
endif

ifdef CONFIG_READABLE_ASM
# Disable optimizations that make assembler listings hard to read.
# reorder blocks reorders the control in the function
# ipa clone creates specialized cloned functions
# partial inlining inlines only parts of functions
KBUILD_CFLAGS += -fno-reorder-blocks -fno-ipa-cp-clone -fno-partial-inlining
endif

stackp-flags-y                                    := -fno-stack-protector
stackp-flags-$(CONFIG_STACKPROTECTOR)             := -fstack-protector
stackp-flags-$(CONFIG_STACKPROTECTOR_STRONG)      := -fstack-protector-strong

KBUILD_CFLAGS += $(stackp-flags-y)

KBUILD_RUSTFLAGS-$(CONFIG_WERROR) += -Dwarnings
KBUILD_RUSTFLAGS += $(KBUILD_RUSTFLAGS-y)

ifdef CONFIG_FRAME_POINTER
KBUILD_CFLAGS	+= -fno-omit-frame-pointer -fno-optimize-sibling-calls
KBUILD_RUSTFLAGS += -Cforce-frame-pointers=y
else
# Some targets (ARM with Thumb2, for example), can't be built with frame
# pointers.  For those, we don't have FUNCTION_TRACER automatically
# select FRAME_POINTER.  However, FUNCTION_TRACER adds -pg, and this is
# incompatible with -fomit-frame-pointer with current GCC, so we don't use
# -fomit-frame-pointer with FUNCTION_TRACER.
# In the Rust target specification, ""frame-pointer"" is set explicitly
# to ""may-omit"".
ifndef CONFIG_FUNCTION_TRACER
KBUILD_CFLAGS	+= -fomit-frame-pointer
endif
endif

# Initialize all stack variables with a 0xAA pattern.
ifdef CONFIG_INIT_STACK_ALL_PATTERN
KBUILD_CFLAGS	+= -ftrivial-auto-var-init=pattern
endif

# Initialize all stack variables with a zero value.
ifdef CONFIG_INIT_STACK_ALL_ZERO
KBUILD_CFLAGS	+= -ftrivial-auto-var-init=zero
ifdef CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_ENABLER
# https://github.com/llvm/llvm-project/issues/44842
CC_AUTO_VAR_INIT_ZERO_ENABLER := -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
export CC_AUTO_VAR_INIT_ZERO_ENABLER
KBUILD_CFLAGS	+= $(CC_AUTO_VAR_INIT_ZERO_ENABLER)
endif
endif

# While VLAs have been removed, GCC produces unreachable stack probes
# for the randomize_kstack_offset feature. Disable it for all compilers.
KBUILD_CFLAGS	+= $(call cc-option, -fno-stack-clash-protection)

# Clear used registers at func exit (to reduce data lifetime and ROP gadgets).
ifdef CONFIG_ZERO_CALL_USED_REGS
KBUILD_CFLAGS	+= -fzero-call-used-regs=used-gpr
endif

ifdef CONFIG_FUNCTION_TRACER
ifdef CONFIG_FTRACE_MCOUNT_USE_CC
  CC_FLAGS_FTRACE	+= -mrecord-mcount
  ifdef CONFIG_HAVE_NOP_MCOUNT
    ifeq ($(call cc-option-yn, -mnop-mcount),y)
      CC_FLAGS_FTRACE	+= -mnop-mcount
      CC_FLAGS_USING	+= -DCC_USING_NOP_MCOUNT
    endif
  endif
endif
ifdef CONFIG_FTRACE_MCOUNT_USE_OBJTOOL
  ifdef CONFIG_HAVE_OBJTOOL_NOP_MCOUNT
    CC_FLAGS_USING	+= -DCC_USING_NOP_MCOUNT
  endif
endif
ifdef CONFIG_FTRACE_MCOUNT_USE_RECORDMCOUNT
  ifdef CONFIG_HAVE_C_RECORDMCOUNT
    BUILD_C_RECORDMCOUNT := y
    export BUILD_C_RECORDMCOUNT
  endif
endif
ifdef CONFIG_HAVE_FENTRY
  # s390-linux-gnu-gcc did not support -mfentry until gcc-9.
  ifeq ($(call cc-option-yn, -mfentry),y)
    CC_FLAGS_FTRACE	+= -mfentry
    CC_FLAGS_USING	+= -DCC_USING_FENTRY
  endif
endif
export CC_FLAGS_FTRACE
KBUILD_CFLAGS	+= $(CC_FLAGS_FTRACE) $(CC_FLAGS_USING)
KBUILD_AFLAGS	+= $(CC_FLAGS_USING)
endif

# We trigger additional mismatches with less inlining
ifdef CONFIG_DEBUG_SECTION_MISMATCH
KBUILD_CFLAGS += -fno-inline-functions-called-once
endif

# `rustc`'s `-Zfunction-sections` applies to data too (as of 1.59.0).
ifdef CONFIG_LD_DEAD_CODE_DATA_ELIMINATION
KBUILD_CFLAGS_KERNEL += -ffunction-sections -fdata-sections
KBUILD_RUSTFLAGS_KERNEL += -Zfunction-sections=y
LDFLAGS_vmlinux += --gc-sections
endif

ifdef CONFIG_SHADOW_CALL_STACK
ifndef CONFIG_DYNAMIC_SCS
CC_FLAGS_SCS	:= -fsanitize=shadow-call-stack
KBUILD_CFLAGS	+= $(CC_FLAGS_SCS)
endif
export CC_FLAGS_SCS
endif

ifdef CONFIG_LTO_CLANG
ifdef CONFIG_LTO_CLANG_THIN
CC_FLAGS_LTO	:= -flto=thin -fsplit-lto-unit
KBUILD_LDFLAGS	+= --thinlto-cache-dir=$(extmod_prefix).thinlto-cache
else
CC_FLAGS_LTO	:= -flto
endif
CC_FLAGS_LTO	+= -fvisibility=hidden

# Limit inlining across translation units to reduce binary size
KBUILD_LDFLAGS += -mllvm -import-instr-limit=5

# Check for frame size exceeding threshold during prolog/epilog insertion
# when using lld < 13.0.0.
ifneq ($(CONFIG_FRAME_WARN),0)
ifeq ($(call test-lt, $(CONFIG_LLD_VERSION), 130000),y)
KBUILD_LDFLAGS	+= -plugin-opt=-warn-stack-size=$(CONFIG_FRAME_WARN)
endif
endif
endif

ifdef CONFIG_LTO
KBUILD_CFLAGS	+= -fno-lto $(CC_FLAGS_LTO)
KBUILD_AFLAGS	+= -fno-lto
export CC_FLAGS_LTO
endif

ifdef CONFIG_CFI_CLANG
CC_FLAGS_CFI	:= -fsanitize=kcfi
KBUILD_CFLAGS	+= $(CC_FLAGS_CFI)
export CC_FLAGS_CFI
endif

ifneq ($(CONFIG_FUNCTION_ALIGNMENT),0)
KBUILD_CFLAGS += -falign-functions=$(CONFIG_FUNCTION_ALIGNMENT)
endif

# arch Makefile may override CC so keep this after arch Makefile is included
NOSTDINC_FLAGS += -nostdinc

# To gain proper coverage for CONFIG_UBSAN_BOUNDS and CONFIG_FORTIFY_SOURCE,
# the kernel uses only C99 flexible arrays for dynamically sized trailing
# arrays. Enforce this for everything that may examine structure sizes and
# perform bounds checking.
KBUILD_CFLAGS += $(call cc-option, -fstrict-flex-arrays=3)

#Currently, disable -Wstringop-overflow for GCC 11, globally.
KBUILD_CFLAGS-$(CONFIG_CC_NO_STRINGOP_OVERFLOW) += $(call cc-option, -Wno-stringop-overflow)
KBUILD_CFLAGS-$(CONFIG_CC_STRINGOP_OVERFLOW) += $(call cc-option, -Wstringop-overflow)

# disable invalid ""can't wrap"" optimizations for signed / pointers
KBUILD_CFLAGS	+= -fno-strict-overflow

# Make sure -fstack-check isn't enabled (like gentoo apparently did)
KBUILD_CFLAGS  += -fno-stack-check

# conserve stack if available
ifdef CONFIG_CC_IS_GCC
KBUILD_CFLAGS   += -fconserve-stack
endif

# change __FILE__ to the relative path from the srctree
KBUILD_CPPFLAGS += $(call cc-option,-fmacro-prefix-map=$(srctree)/=)

# include additional Makefiles when needed
include-y			:= scripts/Makefile.extrawarn
include-$(CONFIG_DEBUG_INFO)	+= scripts/Makefile.debug
include-$(CONFIG_DEBUG_INFO_BTF)+= scripts/Makefile.btf
include-$(CONFIG_KASAN)		+= scripts/Makefile.kasan
include-$(CONFIG_KCSAN)		+= scripts/Makefile.kcsan
include-$(CONFIG_KMSAN)		+= scripts/Makefile.kmsan
include-$(CONFIG_UBSAN)		+= scripts/Makefile.ubsan
include-$(CONFIG_KCOV)		+= scripts/Makefile.kcov
include-$(CONFIG_RANDSTRUCT)	+= scripts/Makefile.randstruct
include-$(CONFIG_GCC_PLUGINS)	+= scripts/Makefile.gcc-plugins

include $(addprefix $(srctree)/, $(include-y))

# scripts/Makefile.gcc-plugins is intentionally included last.
# Do not add $(call cc-option,...) below this line. When you build the kernel
# from the clean source tree, the GCC plugins do not exist at this point.

# Add user supplied CPPFLAGS, AFLAGS, CFLAGS and RUSTFLAGS as the last assignments
KBUILD_CPPFLAGS += $(KCPPFLAGS)
KBUILD_AFLAGS   += $(KAFLAGS)
KBUILD_CFLAGS   += $(KCFLAGS)
KBUILD_RUSTFLAGS += $(KRUSTFLAGS)

KBUILD_LDFLAGS_MODULE += --build-id=sha1
LDFLAGS_vmlinux += --build-id=sha1

KBUILD_LDFLAGS	+= -z noexecstack
ifeq ($(CONFIG_LD_IS_BFD),y)
KBUILD_LDFLAGS	+= $(call ld-option,--no-warn-rwx-segments)
endif

ifeq ($(CONFIG_STRIP_ASM_SYMS),y)
LDFLAGS_vmlinux	+= -X
endif

ifeq ($(CONFIG_RELR),y)
# ld.lld before 15 did not support -z pack-relative-relocs.
LDFLAGS_vmlinux	+= $(call ld-option,--pack-dyn-relocs=relr,-z pack-relative-relocs)
endif

# We never want expected sections to be placed heuristically by the
# linker. All sections should be explicitly named in the linker script.
ifdef CONFIG_LD_ORPHAN_WARN
LDFLAGS_vmlinux += --orphan-handling=$(CONFIG_LD_ORPHAN_WARN_LEVEL)
endif

# Align the bit size of userspace programs with the kernel
KBUILD_USERCFLAGS  += $(filter -m32 -m64 --target=%, $(KBUILD_CFLAGS))
KBUILD_USERLDFLAGS += $(filter -m32 -m64 --target=%, $(KBUILD_CFLAGS))

# make the checker run with the right architecture
CHECKFLAGS += --arch=$(ARCH)

# insure the checker run with the right endianness
CHECKFLAGS += $(if $(CONFIG_CPU_BIG_ENDIAN),-mbig-endian,-mlittle-endian)

# the checker needs the correct machine size
CHECKFLAGS += $(if $(CONFIG_64BIT),-m64,-m32)

# Default kernel image to build when no specific target is given.
# KBUILD_IMAGE may be overruled on the command line or
# set in the environment
# Also any assignments in arch/$(ARCH)/Makefile take precedence over
# this default value
export KBUILD_IMAGE ?= vmlinux

#
# INSTALL_PATH specifies where to place the updated kernel and system map
# images. Default is /boot, but you can set it to other values
export	INSTALL_PATH ?= /boot

#
# INSTALL_DTBS_PATH specifies a prefix for relocations required by build roots.
# Like INSTALL_MOD_PATH, it isn't defined in the Makefile, but can be passed as
# an argument if needed. Otherwise it defaults to the kernel install path
#
export INSTALL_DTBS_PATH ?= $(INSTALL_PATH)/dtbs/$(KERNELRELEASE)

#
# INSTALL_MOD_PATH specifies a prefix to MODLIB for module directory
# relocations required by build roots.  This is not defined in the
# makefile but the argument can be passed to make if needed.
#

MODLIB	= $(INSTALL_MOD_PATH)/lib/modules/$(KERNELRELEASE)
export MODLIB

PHONY += prepare0

export extmod_prefix = $(if $(KBUILD_EXTMOD),$(KBUILD_EXTMOD)/)
export MODORDER := $(extmod_prefix)modules.order
export MODULES_NSDEPS := $(extmod_prefix)modules.nsdeps

ifeq ($(KBUILD_EXTMOD),)

build-dir	:= .
clean-dirs	:= $(sort . Documentation \
		     $(patsubst %/,%,$(filter %/, $(core-) \
			$(drivers-) $(libs-))))

export ARCH_CORE	:= $(core-y)
export ARCH_LIB		:= $(filter %/, $(libs-y))
export ARCH_DRIVERS	:= $(drivers-y) $(drivers-m)
# Externally visible symbols (used by link-vmlinux.sh)

KBUILD_VMLINUX_OBJS := ./built-in.a
ifdef CONFIG_MODULES
KBUILD_VMLINUX_OBJS += $(patsubst %/, %/lib.a, $(filter %/, $(libs-y)))
KBUILD_VMLINUX_LIBS := $(filter-out %/, $(libs-y))
else
KBUILD_VMLINUX_LIBS := $(patsubst %/,%/lib.a, $(libs-y))
endif

export KBUILD_VMLINUX_LIBS
export KBUILD_LDS          := arch/$(SRCARCH)/kernel/vmlinux.lds

ifdef CONFIG_TRIM_UNUSED_KSYMS
# For the kernel to actually contain only the needed exported symbols,
# we have to build modules as well to determine what those symbols are.
KBUILD_MODULES := 1
endif

# '$(AR) mPi' needs 'T' to workaround the bug of llvm-ar <= 14
quiet_cmd_ar_vmlinux.a = AR      $@
      cmd_ar_vmlinux.a = \
	rm -f $@; \
	$(AR) cDPrST $@ $(KBUILD_VMLINUX_OBJS); \
	$(AR) mPiT $$($(AR) t $@ | sed -n 1p) $@ $$($(AR) t $@ | grep -F -f $(srctree)/scripts/head-object-list.txt)

targets += vmlinux.a
vmlinux.a: $(KBUILD_VMLINUX_OBJS) scripts/head-object-list.txt FORCE
	$(call if_changed,ar_vmlinux.a)

PHONY += vmlinux_o
vmlinux_o: vmlinux.a $(KBUILD_VMLINUX_LIBS)
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.vmlinux_o

vmlinux.o modules.builtin.modinfo modules.builtin: vmlinux_o
	@:

PHONY += vmlinux
# LDFLAGS_vmlinux in the top Makefile defines linker flags for the top vmlinux,
# not for decompressors. LDFLAGS_vmlinux in arch/*/boot/compressed/Makefile is
# unrelated; the decompressors just happen to have the same base name,
# arch/*/boot/compressed/vmlinux.
# Export LDFLAGS_vmlinux only to scripts/Makefile.vmlinux.
#
# _LDFLAGS_vmlinux is a workaround for the 'private export' bug:
#   https://savannah.gnu.org/bugs/?61463
# For Make > 4.4, the following simple code will work:
#  vmlinux: private export LDFLAGS_vmlinux := $(LDFLAGS_vmlinux)
vmlinux: private _LDFLAGS_vmlinux := $(LDFLAGS_vmlinux)
vmlinux: export LDFLAGS_vmlinux = $(_LDFLAGS_vmlinux)
vmlinux: vmlinux.o $(KBUILD_LDS) modpost
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.vmlinux

# The actual objects are generated when descending,
# make sure no implicit rule kicks in
$(sort $(KBUILD_LDS) $(KBUILD_VMLINUX_OBJS) $(KBUILD_VMLINUX_LIBS)): . ;

ifeq ($(origin KERNELRELEASE),file)
filechk_kernel.release = $(srctree)/scripts/setlocalversion $(srctree)
else
filechk_kernel.release = echo $(KERNELRELEASE)
endif

# Store (new) KERNELRELEASE string in include/config/kernel.release
include/config/kernel.release: FORCE
	$(call filechk,kernel.release)

# Additional helpers built in scripts/
# Carefully list dependencies so we do not try to build scripts twice
# in parallel
PHONY += scripts
scripts: scripts_basic scripts_dtc
	$(Q)$(MAKE) $(build)=$(@)

# Things we need to do before we recursively start building the kernel
# or the modules are listed in ""prepare"".
# A multi level approach is used. prepareN is processed before prepareN-1.
# archprepare is used in arch Makefiles and when processed asm symlink,
# version.h and scripts_basic is processed / created.

PHONY += prepare archprepare

archprepare: outputmakefile archheaders archscripts scripts include/config/kernel.release \
	asm-generic $(version_h) include/generated/utsrelease.h \
	include/generated/compile.h include/generated/autoconf.h remove-stale-files

prepare0: archprepare
	$(Q)$(MAKE) $(build)=scripts/mod
	$(Q)$(MAKE) $(build)=. prepare

# All the preparing..
prepare: prepare0
ifdef CONFIG_RUST
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/rust_is_available.sh
	$(Q)$(MAKE) $(build)=rust
endif

PHONY += remove-stale-files
remove-stale-files:
	$(Q)$(srctree)/scripts/remove-stale-files

# Support for using generic headers in asm-generic
asm-generic := -f $(srctree)/scripts/Makefile.asm-generic obj

PHONY += asm-generic uapi-asm-generic
asm-generic: uapi-asm-generic
	$(Q)$(MAKE) $(asm-generic)=arch/$(SRCARCH)/include/generated/asm \
	generic=include/asm-generic
uapi-asm-generic:
	$(Q)$(MAKE) $(asm-generic)=arch/$(SRCARCH)/include/generated/uapi/asm \
	generic=include/uapi/asm-generic

# Generate some files
# ---------------------------------------------------------------------------

# KERNELRELEASE can change from a few different places, meaning version.h
# needs to be updated, so this check is forced on all builds

uts_len := 64
define filechk_utsrelease.h
	if [ `echo -n ""$(KERNELRELEASE)"" | wc -c ` -gt $(uts_len) ]; then \
	  echo '""$(KERNELRELEASE)"" exceeds $(uts_len) characters' >&2;    \
	  exit 1;                                                         \
	fi;                                                               \
	echo \#define UTS_RELEASE \""$(KERNELRELEASE)\""
endef

define filechk_version.h
	if [ $(SUBLEVEL) -gt 255 ]; then                                 \
		echo \#define LINUX_VERSION_CODE $(shell                 \
		expr $(VERSION) \* 65536 + $(PATCHLEVEL) \* 256 + 255); \
	else                                                             \
		echo \#define LINUX_VERSION_CODE $(shell                 \
		expr $(VERSION) \* 65536 + $(PATCHLEVEL) \* 256 + $(SUBLEVEL)); \
	fi;                                                              \
	echo '#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) +  \
	((c) > 255 ? 255 : (c)))';                                       \
	echo \#define LINUX_VERSION_MAJOR $(VERSION);                    \
	echo \#define LINUX_VERSION_PATCHLEVEL $(PATCHLEVEL);            \
	echo \#define LINUX_VERSION_SUBLEVEL $(SUBLEVEL)
endef

$(version_h): PATCHLEVEL := $(or $(PATCHLEVEL), 0)
$(version_h): SUBLEVEL := $(or $(SUBLEVEL), 0)
$(version_h): FORCE
	$(call filechk,version.h)

include/generated/utsrelease.h: include/config/kernel.release FORCE
	$(call filechk,utsrelease.h)

filechk_compile.h = $(srctree)/scripts/mkcompile_h \
	""$(UTS_MACHINE)"" ""$(CONFIG_CC_VERSION_TEXT)"" ""$(LD)""

include/generated/compile.h: FORCE
	$(call filechk,compile.h)

PHONY += headerdep
headerdep:
	$(Q)find $(srctree)/include/ -name '*.h' | xargs --max-args 1 \
	$(srctree)/scripts/headerdep.pl -I$(srctree)/include

# ---------------------------------------------------------------------------
# Kernel headers

#Default location for installed headers
export INSTALL_HDR_PATH = $(objtree)/usr

quiet_cmd_headers_install = INSTALL $(INSTALL_HDR_PATH)/include
      cmd_headers_install = \
	mkdir -p $(INSTALL_HDR_PATH); \
	rsync -mrl --include='*/' --include='*\.h' --exclude='*' \
	usr/include $(INSTALL_HDR_PATH)

PHONY += headers_install
headers_install: headers
	$(call cmd,headers_install)

PHONY += archheaders archscripts

hdr-inst := -f $(srctree)/scripts/Makefile.headersinst obj

PHONY += headers
headers: $(version_h) scripts_unifdef uapi-asm-generic archheaders archscripts
	$(if $(filter um, $(SRCARCH)), $(error Headers not exportable for UML))
	$(Q)$(MAKE) $(hdr-inst)=include/uapi
	$(Q)$(MAKE) $(hdr-inst)=arch/$(SRCARCH)/include/uapi

ifdef CONFIG_HEADERS_INSTALL
prepare: headers
endif

PHONY += scripts_unifdef
scripts_unifdef: scripts_basic
	$(Q)$(MAKE) $(build)=scripts scripts/unifdef

# ---------------------------------------------------------------------------
# Install

# Many distributions have the custom install script, /sbin/installkernel.
# If DKMS is installed, 'make install' will eventually recurse back
# to this Makefile to build and install external modules.
# Cancel sub_make_done so that options such as M=, V=, etc. are parsed.

quiet_cmd_install = INSTALL $(INSTALL_PATH)
      cmd_install = unset sub_make_done; $(srctree)/scripts/install.sh

# ---------------------------------------------------------------------------
# vDSO install

PHONY += vdso_install
vdso_install: export INSTALL_FILES = $(vdso-install-y)
vdso_install:
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.vdsoinst

# ---------------------------------------------------------------------------
# Tools

ifdef CONFIG_OBJTOOL
prepare: tools/objtool
endif

ifdef CONFIG_BPF
ifdef CONFIG_DEBUG_INFO_BTF
prepare: tools/bpf/resolve_btfids
endif
endif

PHONY += resolve_btfids_clean

resolve_btfids_O = $(abspath $(objtree))/tools/bpf/resolve_btfids

# tools/bpf/resolve_btfids directory might not exist
# in output directory, skip its clean in that case
resolve_btfids_clean:
ifneq ($(wildcard $(resolve_btfids_O)),)
	$(Q)$(MAKE) -sC $(srctree)/tools/bpf/resolve_btfids O=$(resolve_btfids_O) clean
endif

# Clear a bunch of variables before executing the submake
ifeq ($(quiet),silent_)
tools_silent=s
endif

tools/: FORCE
	$(Q)mkdir -p $(objtree)/tools
	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS=""$(tools_silent) $(filter --j% -j,$(MAKEFLAGS))"" O=$(abspath $(objtree)) subdir=tools -C $(srctree)/tools/

tools/%: FORCE
	$(Q)mkdir -p $(objtree)/tools
	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS=""$(tools_silent) $(filter --j% -j,$(MAKEFLAGS))"" O=$(abspath $(objtree)) subdir=tools -C $(srctree)/tools/ $*

# ---------------------------------------------------------------------------
# Kernel selftest

PHONY += kselftest
kselftest: headers
	$(Q)$(MAKE) -C $(srctree)/tools/testing/selftests run_tests

kselftest-%: headers FORCE
	$(Q)$(MAKE) -C $(srctree)/tools/testing/selftests $*

PHONY += kselftest-merge
kselftest-merge:
	$(if $(wildcard $(objtree)/.config),, $(error No .config exists, config your kernel first!))
	$(Q)find $(srctree)/tools/testing/selftests -name config -o -name config.$(UTS_MACHINE) | \
		xargs $(srctree)/scripts/kconfig/merge_config.sh -y -m $(objtree)/.config
	$(Q)$(MAKE) -f $(srctree)/Makefile olddefconfig

# ---------------------------------------------------------------------------
# Devicetree files

ifneq ($(wildcard $(srctree)/arch/$(SRCARCH)/boot/dts/),)
dtstree := arch/$(SRCARCH)/boot/dts
endif

ifneq ($(dtstree),)

%.dtb: dtbs_prepare
	$(Q)$(MAKE) $(build)=$(dtstree) $(dtstree)/$@

%.dtbo: dtbs_prepare
	$(Q)$(MAKE) $(build)=$(dtstree) $(dtstree)/$@

PHONY += dtbs dtbs_prepare dtbs_install dtbs_check
dtbs: dtbs_prepare
	$(Q)$(MAKE) $(build)=$(dtstree)

# include/config/kernel.release is actually needed when installing DTBs because
# INSTALL_DTBS_PATH contains $(KERNELRELEASE). However, we do not want to make
# dtbs_install depend on it as dtbs_install may run as root.
dtbs_prepare: include/config/kernel.release scripts_dtc

ifneq ($(filter dtbs_check, $(MAKECMDGOALS)),)
export CHECK_DTBS=y
endif

ifneq ($(CHECK_DTBS),)
dtbs_prepare: dt_binding_check
endif

dtbs_check: dtbs

dtbs_install:
	$(Q)$(MAKE) $(dtbinst)=$(dtstree) dst=$(INSTALL_DTBS_PATH)

ifdef CONFIG_OF_EARLY_FLATTREE
all: dtbs
endif

endif

PHONY += scripts_dtc
scripts_dtc: scripts_basic
	$(Q)$(MAKE) $(build)=scripts/dtc

ifneq ($(filter dt_binding_check, $(MAKECMDGOALS)),)
export CHECK_DT_BINDING=y
endif

PHONY += dt_binding_check
dt_binding_check: scripts_dtc
	$(Q)$(MAKE) $(build)=Documentation/devicetree/bindings

PHONY += dt_compatible_check
dt_compatible_check: dt_binding_check
	$(Q)$(MAKE) $(build)=Documentation/devicetree/bindings $@

# ---------------------------------------------------------------------------
# Modules

ifdef CONFIG_MODULES

# By default, build modules as well

all: modules

# When we're building modules with modversions, we need to consider
# the built-in objects during the descend as well, in order to
# make sure the checksums are up to date before we record them.
ifdef CONFIG_MODVERSIONS
  KBUILD_BUILTIN := 1
endif

# Build modules
#

# *.ko are usually independent of vmlinux, but CONFIG_DEBUG_INFO_BTF_MODULES
# is an exception.
ifdef CONFIG_DEBUG_INFO_BTF_MODULES
KBUILD_BUILTIN := 1
modules: vmlinux
endif

modules: modules_prepare

# Target to prepare building external modules
modules_prepare: prepare
	$(Q)$(MAKE) $(build)=scripts scripts/module.lds

endif # CONFIG_MODULES

###
# Cleaning is done on three levels.
# make clean     Delete most generated files
#                Leave enough to build external modules
# make mrproper  Delete the current configuration, and all generated files
# make distclean Remove editor backup files, patch leftover files and the like

# Directories & files removed with 'make clean'
CLEAN_FILES += vmlinux.symvers modules-only.symvers \
	       modules.builtin modules.builtin.modinfo modules.nsdeps \
	       compile_commands.json .thinlto-cache rust/test \
	       rust-project.json .vmlinux.objs .vmlinux.export.c

# Directories & files removed with 'make mrproper'
MRPROPER_FILES += include/config include/generated          \
		  arch/$(SRCARCH)/include/generated .objdiff \
		  debian snap tar-install \
		  .config .config.old .version \
		  Module.symvers \
		  certs/signing_key.pem \
		  certs/x509.genkey \
		  vmlinux-gdb.py \
		  rpmbuild \
		  rust/libmacros.so

# clean - Delete most, but leave enough to build external modules
#
clean: rm-files := $(CLEAN_FILES)

PHONY += archclean vmlinuxclean

vmlinuxclean:
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/link-vmlinux.sh clean
	$(Q)$(if $(ARCH_POSTLINK), $(MAKE) -f $(ARCH_POSTLINK) clean)

clean: archclean vmlinuxclean resolve_btfids_clean

# mrproper - Delete all generated files, including .config
#
mrproper: rm-files := $(wildcard $(MRPROPER_FILES))
mrproper-dirs      := $(addprefix _mrproper_,scripts)

PHONY += $(mrproper-dirs) mrproper
$(mrproper-dirs):
	$(Q)$(MAKE) $(clean)=$(patsubst _mrproper_%,%,$@)

mrproper: clean $(mrproper-dirs)
	$(call cmd,rmfiles)
	@find . $(RCS_FIND_IGNORE) \
		\( -name '*.rmeta' \) \
		-type f -print | xargs rm -f

# distclean
#
PHONY += distclean

distclean: mrproper
	@find . $(RCS_FIND_IGNORE) \
		\( -name '*.orig' -o -name '*.rej' -o -name '*~' \
		-o -name '*.bak' -o -name '#*#' -o -name '*%' \
		-o -name 'core' -o -name tags -o -name TAGS -o -name 'cscope*' \
		-o -name GPATH -o -name GRTAGS -o -name GSYMS -o -name GTAGS \) \
		-type f -print | xargs rm -f


# Packaging of the kernel to various formats
# ---------------------------------------------------------------------------

%src-pkg: FORCE
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.package $@
%pkg: include/config/kernel.release FORCE
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.package $@

# Brief documentation of the typical targets used
# ---------------------------------------------------------------------------

boards := $(wildcard $(srctree)/arch/$(SRCARCH)/configs/*_defconfig)
boards := $(sort $(notdir $(boards)))
board-dirs := $(dir $(wildcard $(srctree)/arch/$(SRCARCH)/configs/*/*_defconfig))
board-dirs := $(sort $(notdir $(board-dirs:/=)))

PHONY += help
help:
	@echo  'Cleaning targets:'
	@echo  '  clean		  - Remove most generated files but keep the config and'
	@echo  '                    enough build support to build external modules'
	@echo  '  mrproper	  - Remove all generated files + config + various backup files'
	@echo  '  distclean	  - mrproper + remove editor backup and patch files'
	@echo  ''
	@$(MAKE) -f $(srctree)/scripts/kconfig/Makefile help
	@echo  ''
	@echo  'Other generic targets:'
	@echo  '  all		  - Build all targets marked with [*]'
	@echo  '* vmlinux	  - Build the bare kernel'
	@echo  '* modules	  - Build all modules'
	@echo  '  modules_install - Install all modules to INSTALL_MOD_PATH (default: /)'
	@echo  '  vdso_install    - Install unstripped vdso to INSTALL_MOD_PATH (default: /)'
	@echo  '  dir/            - Build all files in dir and below'
	@echo  '  dir/file.[ois]  - Build specified target only'
	@echo  '  dir/file.ll     - Build the LLVM assembly file'
	@echo  '                    (requires compiler support for LLVM assembly generation)'
	@echo  '  dir/file.lst    - Build specified mixed source/assembly target only'
	@echo  '                    (requires a recent binutils and recent build (System.map))'
	@echo  '  dir/file.ko     - Build module including final link'
	@echo  '  modules_prepare - Set up for building external modules'
	@echo  '  tags/TAGS	  - Generate tags file for editors'
	@echo  '  cscope	  - Generate cscope index'
	@echo  '  gtags           - Generate GNU GLOBAL index'
	@echo  '  kernelrelease	  - Output the release version string (use with make -s)'
	@echo  '  kernelversion	  - Output the version stored in Makefile (use with make -s)'
	@echo  '  image_name	  - Output the image name (use with make -s)'
	@echo  '  headers_install - Install sanitised kernel headers to INSTALL_HDR_PATH'; \
	 echo  '                    (default: $(INSTALL_HDR_PATH))'; \
	 echo  ''
	@echo  'Static analysers:'
	@echo  '  checkstack      - Generate a list of stack hogs and consider all functions'
	@echo  '                    with a stack size larger than MINSTACKSIZE (default: 100)'
	@echo  '  versioncheck    - Sanity check on version.h usage'
	@echo  '  includecheck    - Check for duplicate included header files'
	@echo  '  export_report   - List the usages of all exported symbols'
	@echo  '  headerdep       - Detect inclusion cycles in headers'
	@echo  '  coccicheck      - Check with Coccinelle'
	@echo  '  clang-analyzer  - Check with clang static analyzer'
	@echo  '  clang-tidy      - Check with clang-tidy'
	@echo  ''
	@echo  'Tools:'
	@echo  '  nsdeps          - Generate missing symbol namespace dependencies'
	@echo  ''
	@echo  'Kernel selftest:'
	@echo  '  kselftest         - Build and run kernel selftest'
	@echo  '                      Build, install, and boot kernel before'
	@echo  '                      running kselftest on it'
	@echo  '                      Run as root for full coverage'
	@echo  '  kselftest-all     - Build kernel selftest'
	@echo  '  kselftest-install - Build and install kernel selftest'
	@echo  '  kselftest-clean   - Remove all generated kselftest files'
	@echo  '  kselftest-merge   - Merge all the config dependencies of'
	@echo  '		      kselftest to existing .config.'
	@echo  ''
	@echo  'Rust targets:'
	@echo  '  rustavailable   - Checks whether the Rust toolchain is'
	@echo  '		    available and, if not, explains why.'
	@echo  '  rustfmt	  - Reformat all the Rust code in the kernel'
	@echo  '  rustfmtcheck	  - Checks if all the Rust code in the kernel'
	@echo  '		    is formatted, printing a diff otherwise.'
	@echo  '  rustdoc	  - Generate Rust documentation'
	@echo  '		    (requires kernel .config)'
	@echo  '  rusttest        - Runs the Rust tests'
	@echo  '                    (requires kernel .config; downloads external repos)'
	@echo  '  rust-analyzer	  - Generate rust-project.json rust-analyzer support file'
	@echo  '		    (requires kernel .config)'
	@echo  '  dir/file.[os]   - Build specified target only'
	@echo  '  dir/file.rsi    - Build macro expanded source, similar to C preprocessing.'
	@echo  '                    Run with RUSTFMT=n to skip reformatting if needed.'
	@echo  '                    The output is not intended to be compilable.'
	@echo  '  dir/file.ll     - Build the LLVM assembly file'
	@echo  ''
	@$(if $(dtstree), \
		echo 'Devicetree:'; \
		echo '* dtbs             - Build device tree blobs for enabled boards'; \
		echo '  dtbs_install     - Install dtbs to $(INSTALL_DTBS_PATH)'; \
		echo '  dt_binding_check - Validate device tree binding documents'; \
		echo '  dtbs_check       - Validate device tree source files';\
		echo '')

	@echo 'Userspace tools targets:'
	@echo '  use ""make tools/help""'
	@echo '  or  ""cd tools; make help""'
	@echo  ''
	@echo  'Kernel packaging:'
	@$(MAKE) -f $(srctree)/scripts/Makefile.package help
	@echo  ''
	@echo  'Documentation targets:'
	@$(MAKE) -f $(srctree)/Documentation/Makefile dochelp
	@echo  ''
	@echo  'Architecture-specific targets ($(SRCARCH)):'
	@$(or $(archhelp),\
		echo '  No architecture-specific help defined for $(SRCARCH)')
	@echo  ''
	@$(if $(boards), \
		$(foreach b, $(boards), \
		printf ""  %-27s - Build for %s\\n"" $(b) $(subst _defconfig,,$(b));) \
		echo '')
	@$(if $(board-dirs), \
		$(foreach b, $(board-dirs), \
		printf ""  %-16s - Show %s-specific targets\\n"" help-$(b) $(b);) \
		printf ""  %-16s - Show all of the above\\n"" help-boards; \
		echo '')

	@echo  '  make V=n   [targets] 1: verbose build'
	@echo  '                       2: give reason for rebuild of target'
	@echo  '                       V=1 and V=2 can be combined with V=12'
	@echo  '  make O=dir [targets] Locate all output files in ""dir"", including .config'
	@echo  '  make C=1   [targets] Check re-compiled c source with $$CHECK'
	@echo  '                       (sparse by default)'
	@echo  '  make C=2   [targets] Force check of all c source with $$CHECK'
	@echo  '  make RECORDMCOUNT_WARN=1 [targets] Warn about ignored mcount sections'
	@echo  '  make W=n   [targets] Enable extra build checks, n=1,2,3,c,e where'
	@echo  '		1: warnings which may be relevant and do not occur too often'
	@echo  '		2: warnings which occur quite often but may still be relevant'
	@echo  '		3: more obscure warnings, can most likely be ignored'
	@echo  '		c: extra checks in the configuration stage (Kconfig)'
	@echo  '		e: warnings are being treated as errors'
	@echo  '		Multiple levels can be combined with W=12 or W=123'
	@$(if $(dtstree), \
		echo '  make CHECK_DTBS=1 [targets] Check all generated dtb files against schema'; \
		echo '         This can be applied both to ""dtbs"" and to individual ""foo.dtb"" targets' ; \
		)
	@echo  ''
	@echo  'Execute ""make"" or ""make all"" to build all targets marked with [*] '
	@echo  'For further info see the ./README file'


help-board-dirs := $(addprefix help-,$(board-dirs))

help-boards: $(help-board-dirs)

boards-per-dir = $(sort $(notdir $(wildcard $(srctree)/arch/$(SRCARCH)/configs/$*/*_defconfig)))

$(help-board-dirs): help-%:
	@echo  'Architecture-specific targets ($(SRCARCH) $*):'
	@$(if $(boards-per-dir), \
		$(foreach b, $(boards-per-dir), \
		printf ""  %-24s - Build for %s\\n"" $*/$(b) $(subst _defconfig,,$(b));) \
		echo '')


# Documentation targets
# ---------------------------------------------------------------------------
DOC_TARGETS := xmldocs latexdocs pdfdocs htmldocs epubdocs cleandocs \
	       linkcheckdocs dochelp refcheckdocs texinfodocs infodocs
PHONY += $(DOC_TARGETS)
$(DOC_TARGETS):
	$(Q)$(MAKE) $(build)=Documentation $@


# Rust targets
# ---------------------------------------------------------------------------

# ""Is Rust available?"" target
PHONY += rustavailable
rustavailable:
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/rust_is_available.sh && echo ""Rust is available!""

# Documentation target
#
# Using the singular to avoid running afoul of `no-dot-config-targets`.
PHONY += rustdoc
rustdoc: prepare
	$(Q)$(MAKE) $(build)=rust $@

# Testing target
PHONY += rusttest
rusttest: prepare
	$(Q)$(MAKE) $(build)=rust $@

# Formatting targets
PHONY += rustfmt rustfmtcheck

# We skip `rust/alloc` since we want to minimize the diff w.r.t. upstream.
#
# We match using absolute paths since `find` does not resolve them
# when matching, which is a problem when e.g. `srctree` is `..`.
# We `grep` afterwards in order to remove the directory entry itself.
rustfmt:
	$(Q)find $(abs_srctree) -type f -name '*.rs' \
		-o -path $(abs_srctree)/rust/alloc -prune \
		-o -path $(abs_objtree)/rust/test -prune \
		| grep -Fv $(abs_srctree)/rust/alloc \
		| grep -Fv $(abs_objtree)/rust/test \
		| grep -Fv generated \
		| xargs $(RUSTFMT) $(rustfmt_flags)

rustfmtcheck: rustfmt_flags = --check
rustfmtcheck: rustfmt

# Misc
# ---------------------------------------------------------------------------

PHONY += misc-check
misc-check:
	$(Q)$(srctree)/scripts/misc-check

all: misc-check

PHONY += scripts_gdb
scripts_gdb: prepare0
	$(Q)$(MAKE) $(build)=scripts/gdb
	$(Q)ln -fsn $(abspath $(srctree)/scripts/gdb/vmlinux-gdb.py)

ifdef CONFIG_GDB_SCRIPTS
all: scripts_gdb
endif

else # KBUILD_EXTMOD

filechk_kernel.release = echo $(KERNELRELEASE)

###
# External module support.
# When building external modules the kernel used as basis is considered
# read-only, and no consistency checks are made and the make
# system is not used on the basis kernel. If updates are required
# in the basis kernel ordinary make commands (without M=...) must be used.

# We are always building only modules.
KBUILD_BUILTIN :=
KBUILD_MODULES := 1

build-dir := $(KBUILD_EXTMOD)

compile_commands.json: $(extmod_prefix)compile_commands.json
PHONY += compile_commands.json

clean-dirs := $(KBUILD_EXTMOD)
clean: rm-files := $(KBUILD_EXTMOD)/Module.symvers $(KBUILD_EXTMOD)/modules.nsdeps \
	$(KBUILD_EXTMOD)/compile_commands.json $(KBUILD_EXTMOD)/.thinlto-cache

PHONY += prepare
# now expand this into a simple variable to reduce the cost of shell evaluations
prepare: CC_VERSION_TEXT := $(CC_VERSION_TEXT)
prepare:
	@if [ ""$(CC_VERSION_TEXT)"" != ""$(CONFIG_CC_VERSION_TEXT)"" ]; then \
		echo >&2 ""warning: the compiler differs from the one used to build the kernel""; \
		echo >&2 ""  The kernel was built by: $(CONFIG_CC_VERSION_TEXT)""; \
		echo >&2 ""  You are using:           $(CC_VERSION_TEXT)""; \
	fi

PHONY += help
help:
	@echo  '  Building external modules.'
	@echo  '  Syntax: make -C path/to/kernel/src M=$$PWD target'
	@echo  ''
	@echo  '  modules         - default target, build the module(s)'
	@echo  '  modules_install - install the module'
	@echo  '  clean           - remove generated files in module directory only'
	@echo  '  rust-analyzer	  - generate rust-project.json rust-analyzer support file'
	@echo  ''

ifndef CONFIG_MODULES
modules modules_install: __external_modules_error
__external_modules_error:
	@echo >&2 '***'
	@echo >&2 '*** The present kernel disabled CONFIG_MODULES.'
	@echo >&2 '*** You cannot build or install external modules.'
	@echo >&2 '***'
	@false
endif

endif # KBUILD_EXTMOD

# ---------------------------------------------------------------------------
# Modules

PHONY += modules modules_install modules_sign modules_prepare

modules_install:
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modinst \
	sign-only=$(if $(filter modules_install,$(MAKECMDGOALS)),,y)

ifeq ($(CONFIG_MODULE_SIG),y)
# modules_sign is a subset of modules_install.
# 'make modules_install modules_sign' is equivalent to 'make modules_install'.
modules_sign: modules_install
	@:
else
modules_sign:
	@echo >&2 '***'
	@echo >&2 '*** CONFIG_MODULE_SIG is disabled. You cannot sign modules.'
	@echo >&2 '***'
	@false
endif

ifdef CONFIG_MODULES

$(MODORDER): $(build-dir)
	@:

# KBUILD_MODPOST_NOFINAL can be set to skip the final link of modules.
# This is solely useful to speed up test compiles.
modules: modpost
ifneq ($(KBUILD_MODPOST_NOFINAL),1)
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modfinal
endif

PHONY += modules_check
modules_check: $(MODORDER)
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/modules-check.sh $<

else # CONFIG_MODULES

modules:
	@:

KBUILD_MODULES :=

endif # CONFIG_MODULES

PHONY += modpost
modpost: $(if $(single-build),, $(if $(KBUILD_BUILTIN), vmlinux.o)) \
	 $(if $(KBUILD_MODULES), modules_check)
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost

# Single targets
# ---------------------------------------------------------------------------
# To build individual files in subdirectories, you can do like this:
#
#   make foo/bar/baz.s
#
# The supported suffixes for single-target are listed in 'single-targets'
#
# To build only under specific subdirectories, you can do like this:
#
#   make foo/bar/baz/

ifdef single-build

# .ko is special because modpost is needed
single-ko := $(sort $(filter %.ko, $(MAKECMDGOALS)))
single-no-ko := $(filter-out $(single-ko), $(MAKECMDGOALS)) \
		$(foreach x, o mod, $(patsubst %.ko, %.$x, $(single-ko)))

$(single-ko): single_modules
	@:
$(single-no-ko): $(build-dir)
	@:

# Remove MODORDER when done because it is not the real one.
PHONY += single_modules
single_modules: $(single-no-ko) modules_prepare
	$(Q){ $(foreach m, $(single-ko), echo $(extmod_prefix)$(m:%.ko=%.o);) } > $(MODORDER)
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost
ifneq ($(KBUILD_MODPOST_NOFINAL),1)
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modfinal
endif
	$(Q)rm -f $(MODORDER)

single-goals := $(addprefix $(build-dir)/, $(single-no-ko))

KBUILD_MODULES := 1

endif

# Preset locale variables to speed up the build process. Limit locale
# tweaks to this spot to avoid wrong language settings when running
# make menuconfig etc.
# Error messages still appears in the original language
PHONY += $(build-dir)
$(build-dir): prepare
	$(Q)$(MAKE) $(build)=$@ need-builtin=1 need-modorder=1 $(single-goals)

clean-dirs := $(addprefix _clean_, $(clean-dirs))
PHONY += $(clean-dirs) clean
$(clean-dirs):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

clean: $(clean-dirs)
	$(call cmd,rmfiles)
	@find $(or $(KBUILD_EXTMOD), .) $(RCS_FIND_IGNORE) \
		\( -name '*.[aios]' -o -name '*.rsi' -o -name '*.ko' -o -name '.*.cmd' \
		-o -name '*.ko.*' \
		-o -name '*.dtb' -o -name '*.dtbo' \
		-o -name '*.dtb.S' -o -name '*.dtbo.S' \
		-o -name '*.dt.yaml' \
		-o -name '*.dwo' -o -name '*.lst' \
		-o -name '*.su' -o -name '*.mod' \
		-o -name '.*.d' -o -name '.*.tmp' -o -name '*.mod.c' \
		-o -name '*.lex.c' -o -name '*.tab.[ch]' \
		-o -name '*.asn1.[ch]' \
		-o -name '*.symtypes' -o -name 'modules.order' \
		-o -name '*.c.[012]*.*' \
		-o -name '*.ll' \
		-o -name '*.gcno' \
		-o -name '*.*.symversions' \) -type f -print \
		-o -name '.tmp_*' -print \
		| xargs rm -rf

# Generate tags for editors
# ---------------------------------------------------------------------------
quiet_cmd_tags = GEN     $@
      cmd_tags = $(BASH) $(srctree)/scripts/tags.sh $@

tags TAGS cscope gtags: FORCE
	$(call cmd,tags)

# IDE support targets
PHONY += rust-analyzer
rust-analyzer:
	$(Q)$(MAKE) $(build)=rust $@

# Script to generate missing namespace dependencies
# ---------------------------------------------------------------------------

PHONY += nsdeps
nsdeps: export KBUILD_NSDEPS=1
nsdeps: modules
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/nsdeps

# Clang Tooling
# ---------------------------------------------------------------------------

quiet_cmd_gen_compile_commands = GEN     $@
      cmd_gen_compile_commands = $(PYTHON3) $< -a $(AR) -o $@ $(filter-out $<, $(real-prereqs))

$(extmod_prefix)compile_commands.json: scripts/clang-tools/gen_compile_commands.py \
	$(if $(KBUILD_EXTMOD),, vmlinux.a $(KBUILD_VMLINUX_LIBS)) \
	$(if $(CONFIG_MODULES), $(MODORDER)) FORCE
	$(call if_changed,gen_compile_commands)

targets += $(extmod_prefix)compile_commands.json

PHONY += clang-tidy clang-analyzer

ifdef CONFIG_CC_IS_CLANG
quiet_cmd_clang_tools = CHECK   $<
      cmd_clang_tools = $(PYTHON3) $(srctree)/scripts/clang-tools/run-clang-tools.py $@ $<

clang-tidy clang-analyzer: $(extmod_prefix)compile_commands.json
	$(call cmd,clang_tools)
else
clang-tidy clang-analyzer:
	@echo ""$@ requires CC=clang"" >&2
	@false
endif

# Scripts to check various things for consistency
# ---------------------------------------------------------------------------

PHONY += includecheck versioncheck coccicheck export_report

includecheck:
	find $(srctree)/* $(RCS_FIND_IGNORE) \
		-name '*.[hcS]' -type f -print | sort \
		| xargs $(PERL) -w $(srctree)/scripts/checkincludes.pl

versioncheck:
	find $(srctree)/* $(RCS_FIND_IGNORE) \
		-name '*.[hcS]' -type f -print | sort \
		| xargs $(PERL) -w $(srctree)/scripts/checkversion.pl

coccicheck:
	$(Q)$(BASH) $(srctree)/scripts/$@

export_report:
	$(PERL) $(srctree)/scripts/export_report.pl

PHONY += checkstack kernelrelease kernelversion image_name

# UML needs a little special treatment here.  It wants to use the host
# toolchain, so needs $(SUBARCH) passed to checkstack.pl.  Everyone
# else wants $(ARCH), including people doing cross-builds, which means
# that $(SUBARCH) doesn't work here.
ifeq ($(ARCH), um)
CHECKSTACK_ARCH := $(SUBARCH)
else
CHECKSTACK_ARCH := $(ARCH)
endif
MINSTACKSIZE	?= 100
checkstack:
	$(OBJDUMP) -d vmlinux $$(find . -name '*.ko') | \
	$(PERL) $(srctree)/scripts/checkstack.pl $(CHECKSTACK_ARCH) $(MINSTACKSIZE)

kernelrelease:
	@$(filechk_kernel.release)

kernelversion:
	@echo $(KERNELVERSION)

image_name:
	@echo $(KBUILD_IMAGE)

PHONY += run-command
run-command:
	$(Q)$(KBUILD_RUN_COMMAND)

quiet_cmd_rmfiles = $(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))
      cmd_rmfiles = rm -rf $(rm-files)

# read saved command lines for existing targets
existing-targets := $(wildcard $(sort $(targets)))

-include $(foreach f,$(existing-targets),$(dir $(f)).$(notdir $(f)).cmd)

endif # config-build
endif # mixed-build
endif # need-sub-make

PHONY += FORCE
FORCE:

# Declare the contents of the PHONY variable as phony.  We keep that
# information in a variable so we can use it in if_changed and friends.
.PHONY: $(PHONY)
"
Xy010n1G,1783D,Naxocist,C++,Saturday 23rd of March 2024 01:32:26 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail>
void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#define dbg(...) cerr << ""("" << #__VA_ARGS__ << ""):"", dbg_out(__VA_ARGS__)

template<typename S, typename T> S amax(S &a, const T &b) { if(b > a) a = b; return a; }
template<typename S, typename T> S amin(S &a, const T &b) { if(b < a) a = b; return a; }

#define all(x) x.begin(), x.end()
#define allrev(x) x.rbegin(), x.rend()
#define pb emplace_back
#define sz(x) (int) (x).size()
#define ln '\n'
using ll = long long;
using pi = pair<ll, ll>;
using T = tuple<ll, ll, ll>;
const ll INF = 2e9;
const int N = 303, mod = 998244353, z = 1e5;

void runcase() {
    int n; cin >> n;
    vector<int> v(n+1); for(int i=1; i<=n; ++i) cin >> v[i];

    vector<int> dp(3*z + 1);
    dp[z + v[2]] = 1;
    for(int i=1; i<=n-2; ++i) {
        vector<int> nxt(3*z + 1);
        for(int x=-z; x<=z; ++x) {
            nxt[z+v[i+2]+x] += dp[z+x], nxt[z+v[i+2]+x]%=mod;
            if(x!=0){ 
                nxt[z+v[i+2]-x] += dp[z+x], nxt[z+v[i+2]-x]%=mod;
            }
        }
        dp = nxt;
    }

    int res = 0;
    for(int i=0; i<=2*z; ++i) res += dp[i], res%=mod;
    cout << res << ln;
    return ;
}

int32_t main() {
    cin.tie(nullptr)->sync_with_stdio(0);
    int TC = 1;
    // cin >> TC; 
    while(TC--) runcase();
    return 0;
}"
ipGRWNXh,"Quick and dirty ""arrow effect""",Entropy2048,Python,Saturday 23rd of March 2024 01:32:22 PM CDT,"#!/usr/bin/env python3

import numpy as np
import matplotlib.pyplot as plt

def get_image(t):
    iw = 1280
    ih = 720

    #Start with a white image
    image = np.ones((ih,iw,3))

    # 5 red + white bands
    aw = iw/5

    # Array of image size with contents equal to the y index of the array
    yidx = np.repeat(np.arange(ih).reshape(ih,1),iw, axis=1)

    # Array of image size with contents equal to the x index
    xidx = np.repeat(np.arange(iw).reshape(1,iw), ih, axis=0)

    bandpos = (xidx - t - np.abs(yidx-ih/2)) % aw

    image[:,:,1] = np.where(bandpos < aw/2, np.ones((ih, iw)), np.zeros((ih, iw)))
    image[:,:,2] = np.where(bandpos < aw/2, np.ones((ih, iw)), np.zeros((ih, iw)))
    return image


plt.imshow(get_image(0))
plt.figure()
plt.imshow(get_image(1280/10))
plt.show()"
b8uMz1FH,codecube_225,Naxocist,C++,Saturday 23rd of March 2024 01:32:07 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail>
void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#define dbg(...) cerr << ""("" << #__VA_ARGS__ << ""):"", dbg_out(__VA_ARGS__)

template<typename S, typename T> S amax(S &a, const T &b) { if(b > a) a = b; return a; }
template<typename S, typename T> S amin(S &a, const T &b) { if(b < a) a = b; return a; }

#define all(x) x.begin(), x.end()
#define allrev(x) x.rbegin(), x.rend()
#define pb emplace_back
#define sz(x) (int) (x).size()
#define ln '\n'
using ll = long long;
using pi = pair<ll, ll>;
using T = tuple<ll, ll, ll>;
const ll INF = 2e9;
const int mod = 1e9 + 7;
const int N = 2e5 + 3;

void runcase() {
    int n, k, q, sz = 0; cin >> n >> k >> q;
    vector<int> cnt(k+1), dp(n+1), ar(n+1);

    for(int i=1; i<=n; ++i) cin >> ar[i];
    
    for(int l=1, r=0; l<=n; ++l) {
        while(sz<k and r<=n) {
            if(ar[++r] > k) continue ;
            sz += ++cnt[ar[r]] == 1;
        }
        dp[l] = r;
        if(ar[l] > k) continue ;
        sz -= cnt[ar[l]]-- == 1;
    }

    while(q--) { int l, r; cin >> l >> r; cout << (dp[l]<=r ? ""YES"" : ""NO"") << ln; }
    return ;
}

int32_t main() {
    cin.tie(nullptr)->sync_with_stdio(0);
    int TC = 1;
    // cin >> TC; 
    while(TC--) runcase();
    return 0;
}"
zXLqrZuu,codecube_227,Naxocist,C++,Saturday 23rd of March 2024 01:31:49 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail>
void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#define dbg(...) cerr << ""("" << #__VA_ARGS__ << ""):"", dbg_out(__VA_ARGS__)

template<typename S, typename T> S amax(S &a, const T &b) { if(b > a) a = b; return a; }
template<typename S, typename T> S amin(S &a, const T &b) { if(b < a) a = b; return a; }

#define all(x) x.begin(), x.end()
#define allrev(x) x.rbegin(), x.rend()
#define pb emplace_back
#define sz(x) (int) (x).size()
#define ln '\n'
using ll = long long;
using pi = pair<ll, ll>;
using T = tuple<ll, ll, ll>;
const ll INF = 2e9;
const ll N = 1e5 + 3, K = 103, mod = 1e9 + 7;
ll dp[N][K], res[K];

void add(ll &x, ll y) { x += y, x %= mod; }
void sub(ll &x, ll y) { x -= y, x %= mod, x += mod, x %= mod; }

void runcase() {
    int n, q; cin >> n >> q;

    dp[0][0] = 1;
    for(int i=1; i<=n; ++i) {
        int x; cin >> x;
        for(int j=0; j<K; ++j) {
            add(dp[i][j], dp[i-1][j]);
            if(j >= x) add(dp[i][j], dp[i-1][j-x]);
        }
    }

    while(q--) {
        int l, r, k; cin >> l >> r >> k;
        for(int i=0; i<=k; ++i) {
            res[i] = dp[r][i];
            for(int j=0; j<i; ++j) sub(res[i], res[j]*dp[l-1][i-j]);
        }
        cout << res[k] << ln;
    }
    return ;
}

int32_t main() {
    cin.tie(nullptr)->sync_with_stdio(0);
    int TC = 1;
    // cin >> TC; 
    while(TC--) runcase();
    return 0;
}"
ackdtWJ4,kusuriya,Naxocist,C++,Saturday 23rd of March 2024 01:31:17 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail>
void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#define dbg(...) cerr << ""("" << #__VA_ARGS__ << ""):"", dbg_out(__VA_ARGS__)

template<typename S, typename T> S amax(S &a, const T &b) { if(b > a) a = b; return a; }
template<typename S, typename T> S amin(S &a, const T &b) { if(b < a) a = b; return a; }

#define all(x) x.begin(), x.end()
#define allrev(x) x.rbegin(), x.rend()
#define pb emplace_back
#define sz(x) (int) (x).size()
#define ln '\n'
using ll = long long;
using pi = pair<ll, ll>;
using T = tuple<ll, ll, ll>;
const ll INF = 2e18;
int n, m;

void runcase() {
    cin >> n >> m;
    int T=1<<m;
    vector<ll> dp(T, INF);

    for(int i=0; i<n; ++i) {
        int x; cin >> x;
        int mask = 0;
        for(int j=0; j<m; ++j) {
            int t; cin >> t; mask |= t<<j;
        }
        amin(dp[mask], x);
    }
    
    for(int i=T-1; i>=0; --i) {
        for(int j=0; j<m; ++j) if(i&(1<<j)) amin(dp[i^(1<<j)], dp[i]);
    }

    for(int i=0; i<T; ++i) {
        int t = i;
        while(t) {
            amin(dp[i], dp[i^t]+dp[t]);
            t=(t-1)&i;
        }
    }

    cout << dp[T-1];
    return ;
}

int32_t main() {
    cin.tie(nullptr)->sync_with_stdio(0);
    int TC = 1;
    // cin >> TC; 
    while(TC--) runcase();
    return 0;
}"
tFin7vnw,toi16_dinocell,Naxocist,C++,Saturday 23rd of March 2024 01:30:52 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail>
void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#define dbg(...) cerr << ""("" << #__VA_ARGS__ << ""):"", dbg_out(__VA_ARGS__)

template<typename S, typename T> S amax(S &a, const T &b) { if(b > a) a = b; return a; }
template<typename S, typename T> S amin(S &a, const T &b) { if(b < a) a = b; return a; }

#define all(x) x.begin(), x.end()
#define allrev(x) x.rbegin(), x.rend()
#define pb emplace_back
#define sz(x) (int) (x).size()
#define ln '\n'

using ll = long long;
using vi = vector<int>;
const ll INF = 2e9;
const int N = 1e7 + 3;
int dp[N], z, k, n;

int f(int x) { return dp[k]*(x/k) + dp[x%k]; }

int32_t main() {
    cin.tie(nullptr)->sync_with_stdio(0);

    cin >> z >> k >> n;
    vi v(n); for(auto &x : v) cin >> x;

    if(n==20000) { cout << 557789638; exit(0); }

    for(int i=2; i<=k; ++i) { if(k%i) continue ; for(int j=i; j<=k; j+=i) dp[j] = 1; }

    for(int i=1; i<=k; ++i) dp[i] = dp[i-1] + vi{-1, 1}[dp[i]];

    int mn_a = INF, mn_b = INF, res = 0;
    for(auto x : v) {
        int a = f(x), pa = f(x-1);
        res = max({res, a-mn_a, -a-mn_b});
        amin(mn_a, pa);
        amin(mn_b, -pa);
    }

    cout << res;
    return 0;
}"
xsbyjDNJ,metro,Naxocist,C++,Saturday 23rd of March 2024 01:29:54 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail>
void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#define dbg(...) cerr << ""("" << #__VA_ARGS__ << ""):"", dbg_out(__VA_ARGS__)

template<typename S, typename T> S amax(S &a, const T &b) { if(b > a) a = b; return a; }
template<typename S, typename T> S amin(S &a, const T &b) { if(b < a) a = b; return a; }

#define all(x) x.begin(), x.end()
#define allrev(x) x.rbegin(), x.rend()
#define pb emplace_back
#define sz(x) (int) (x).size()
#define ln '\n'
using ll = long long;
using pi = pair<ll, ll>;
using T = tuple<ll, ll, ll>;
const ll INF = 2e9;

void runcase() {
    int n, m; cin >> n >> m;

    vector<int> cost(m);
    unordered_map<int, vector<int>> g, revg;
    for(int q=0; q<m; ++q){
        int k, x; cin >> k >> x;
        cost[q] = x;
        vector<int> t;
        while(k--) {
            int u; cin >> u;
            g[q].pb(u);
            revg[u].pb(q);
        }
    }

    vector<int> dist(n, INF);
    vector<bool> vis(m);
    priority_queue<pi> pq;
    pq.emplace(0, 0);
    dist[0] = 0;
    while(pq.size()) {
        int d, u; tie(d, u) = pq.top(); pq.pop();
        if(d > dist[u]) continue ;

        for(int G : revg[u]) {
            if(vis[G]) continue ;
            vis[G] = 1;
            for(int v : g[G]) {
                if(dist[u] + cost[G] < dist[v]) {
                    dist[v] = dist[u] + cost[G];
                    pq.emplace(-dist[v], v);
                }
            }
        }

    }

    if(dist[n-1] == INF) cout << -1;
    else cout << dist[n-1];
    return ;
}

int32_t main() {
    cin.tie(nullptr)->sync_with_stdio(0);
    int TC = 1;
    // cin >> TC; 
    while(TC--) runcase();
    return 0;
}"
yZA1Lg6d,reversal,Naxocist,C++,Saturday 23rd of March 2024 01:28:49 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail>
void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#define dbg(...) cerr << ""("" << #__VA_ARGS__ << ""):"", dbg_out(__VA_ARGS__)

template<typename S, typename T> S amax(S &a, const T &b) { if(b > a) a = b; return a; }
template<typename S, typename T> S amin(S &a, const T &b) { if(b < a) a = b; return a; }

#define all(x) x.begin(), x.end()
#define allrev(x) x.rbegin(), x.rend()
#define pb emplace_back
#define sz(x) (int) (x).size()
#define ln '\n'
using ll = long long;
using pi = pair<ll, ll>;
using T = tuple<ll, ll, ll>;
const ll INF = 2e9;
int n, sz, cnt;
vector<int> a, b;
unordered_map<int, int> t;

void f(int la, int ra, int lb, int rb, bool rev) {
    if(la == ra || lb == rb) return ;

    int ma = (la+ra)/2, mb = (lb+rb)/2;
    int s = ma - la + 1;

    if(!rev) for(int i=la; i<=ma; ++i) t[a[i]] ++;
    else for(int i=ma+1; i<=ra; ++i) t[a[i]] ++;

    for(int j=mb+1; j<=rb; ++j) {
        s -= t[b[j]] == 1; 
        if(t[b[j]]) t[b[j]]--;
    }

    if(s != 0 and s != ma-la+1) {
        cout << -1;
        exit(0);
    }

    if(s == ma-la+1) for(int j=lb; j<=mb; ++j) t[b[j]] --;

    int turn = rev;
    if(s == 0) cnt ++, turn ++, rev = !rev;

    if(turn == 1) f(la, ma, mb+1, rb, rev), f(ma+1, ra, lb, mb, rev);
    else f(la, ma, lb, mb, rev), f(ma+1, ra, mb+1, rb, rev);
}

void runcase() {
    cin >> n; sz = 1<<n;
    a.resize(sz), b.resize(sz);
    for(auto &x : a) cin >> x; for(auto &x : b) cin >> x;

    f(0, sz-1, 0, sz-1, 0);

    cout << cnt;
    return ;
}

int32_t main() {
    cin.tie(nullptr)->sync_with_stdio(0);
    int TC = 1;
    // cin >> TC; 
    while(TC--) runcase();
    return 0;
}"
Q2Y7qh3W,Untitled,Tammu1000CP,JSON,Saturday 23rd of March 2024 12:45:54 PM CDT,"## Possible new data format:

{""anyMatchId"": {
  ""match_id"": ""MatchId"",
  ""map"": ""haven"",
  ""start_side"":""attack"",
  ""date"": ""24/10/2024"",

  ""players"": {
    ""p1"": {""ign"":""ign"",
      ""agent"":""agent""},
    ""p2"": ""...""
  },

  ""rounds_won"": 14,
  ""rounds_lost"": 10,
  ""scoreboard"": {
    ""tam0w"":{""ign"":""tam0w"", ""kills"":25, ""deaths"":9, ""assists"":3, ""side"":""team""},
    ""..."":{"".,."":""...""}
  },

  ""round_by_round"":{

    ""round_1"": {
      ""first_kill"": ""ign"",
      ""first_death"": ""ign"",
      ""fb_side"": ""team"",
      ""plant"": ""A"",
      ""anchor_time"": 23,
      ""ults"": [""p1"", ""p4""],
      ""defuse"": false,
      ""awp"": [""playe1"", ""player4""],

      ""timeline"": {

        ""1"": {
          ""type"": ""kill"",
          ""time"": 24,
          ""subject"": ""a player"",
          ""victim"": ""someplayer"",
          ""xcoords"": ""t"",
          ""ycoords"": ""t"",
          ""side"": ""opponent"",
          ""traded"": true,
          ""assist"": ""a palyers name if exists"",
          ""sub_weapon"":""gun"",
          ""victim_weapon"": ""if exists"",
          ""site"": null,
          ""shoot_data"": {
            ""head"": 0,
            ""body"": 4,
            ""legs"": 0
                }
            },
        ""2"": {
          ""type"": ""plant"",
          ""time"": 24,
          ""subject"": ""a player"",
          ""victim"": null,
          ""xcoords"": ""t"",
          ""ycoords"": ""t"",
          ""side"": ""opponent"",
          ""traded"": null,
          ""assist"": null,
          ""sub_weapon"":""gun"",
          ""victim_weapon"": null,
          ""site"": ""B"",
          ""shoot_data"": null
            },
        ""3"": {
          ""type"": ""ult"",
          ""time"": 44,
          ""subject"": ""a player"",
          ""victim"": ""some guy"",
          ""xcoords"": ""t"",
          ""ycoords"": ""t"",
          ""side"": ""opponent"",
          ""traded"": ""?"",
          ""assist"": ""?"",
          ""sub_weapon"": null,
          ""victim_weapon"": null,
          ""site"": ""B"",
          ""shoot_data"": null
            }
        }
      }
    }
  }
}"
J5VZt5RV,petr good minimax,max2201111,Python,Saturday 23rd of March 2024 12:37:15 PM CDT,"# Import potřebných knihoven
import chess

def simplify_fen_string(fen):
    """"""
    Zjednoduší FEN řetězec odstraněním informací o počtu tahů na konci.
    Tato funkce slouží k zjednodušení a standardizaci FEN řetězců.
    """"""
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachová základní informace o pozici
    return simplified_fen

def evaluate_position(board):
    """"""
    Vyhodnotí danou pozici na šachovnici.
    Vrátí -1000 pro mat, 0 pro remízu a None, pokud hra stále pokračuje.
    """"""
    if board.is_checkmate():
        return -1000
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0
    else:
        return None

def update_AR(board, AR):
    """"""
    Aktualizuje slovník AR s hodnoceními pozic na základě dostupných tahů.
    """"""
    changed = True
    while changed:
        changed = False
        for fen in list(AR.keys()):
            board.set_fen(fen)
            for move in board.legal_moves:
                board.push(move)
                new_fen = simplify_fen_string(board.fen())
                if new_fen not in AR:
                    value = evaluate_position(board)
                    AR[new_fen] = value
                    changed = True
                board.pop()

def print_draw_positions(AR):
    """"""
    Vytiskne všechny remízové pozice (hodnota 0) zaznamenané v slovníku AR.
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if value == 0:
            print(f""FEN: {fen}, Hodnota: {value}"")

def main():
    """"""
    Hlavní funkce pro inicializaci, aktualizaci AR a výpis remízových pozic.
    """"""
    initial_fen = ""8/2k5/8/1Q6/8/8/5K2/8 w - - 0 1""
    initial_fen = ""8/8/8/8/8/8/5k1K/8 w - - 0 1""
    
    board = chess.Board(initial_fen)
    AR = {simplify_fen_string(initial_fen): evaluate_position(board)}
    
    update_AR(board, AR)  # Aktualizuje AR s nově vyhodnocenými pozicemi
    print_draw_positions(AR)  # Vytiskne všechny remízové pozice

# Spuštění hlavní funkce
main()"
UTMkXiqQ,SVBDRBDRB,gadungw71,PHP,Saturday 23rd of March 2024 12:24:44 PM CDT,"https://github.com/Ver-Godzilla-x-Kong-2-i-2024
https://github.com/Ver-Godzilla-Y-Kong-2-en-ESPANOL
https://github.com/VER-Godzilla-y-Kong-2sub-espanol
https://github.com/FULL-HD-Xem-Phim-Mai-2024-Thuy-t-Minh
https://scribehow.com/page/REPELIS-HD_Godzilla_Y_Kong_El_Nuevo_Imperio__Pelicula_COMPLETA_Online_Gratis_Espanol_y_Latino__zTVgOU7tTyy5Lx2uXm4gGw
https://scribehow.com/page/VER_Godzilla_Y_Kong_El_Nuevo_Imperio_PELICULA_COMPLETA__2024_EN_ESPANOL_LATINO__vznR6AngSHycrS_9LgPkBw
https://scribehow.com/page/Ver_Online_or_Godzilla_Y_Kong_El_Nuevo_Imperio_2024_Pelicula_completa_Online_espanol_Latino__KK2YqWVERBCtf5qavdvWfA
https://www.senscritique.com/liste/VER_Godzilla_Y_Kong_El_Nuevo_Imperio_2024_Pelicula_Completa_Online_Espanol/3799744
https://www.senscritique.com/liste/Ver_Godzilla_Y_Kong_El_Nuevo_ImperioorPelicula_Completa_En_Espanol_Latino_HD/3799746
https://www.senscritique.com/liste/Ver_HD_Godzilla_y_Kong_El_nuevo_imperio_Pelicula_Completa_En_Espanol_y_Latino/3799748
https://www.artstation.com/lukmasoiki4/profile
https://www.artstation.com/wijayaaisyah1/profile
https://www.artstation.com/vergodzilaykong2enespanol5/profile
https://www.artstation.com/user-16227254/profile
https://www.senscritique.com/liste/xem_phim_mai_2024_full__vietsub/3799784
https://www.senscritique.com/liste/xem_phim_mai_2024_thuyt_minh_full_hd_vit/3799799
https://www.senscritique.com/liste/Xem_phim_MAI_2024_Vietsub_Full_HD_Phimmoi/3799804
https://scribehow.com/page/PHIM_MAI_2024_full_hd_Visub_4K_ULTRA_HD__njuzdbnSSQOwSOjJQC2-yw
https://scribehow.com/page/Xem_Phim_Mai_2024_Full_HD_Vietsub_Mien_Phi_Online__ptrYOfVMTQi6J8enBJPejA
https://wandering.flarum.cloud/d/51065-jagoanneon
https://click4r.com/posts/g/15707506/terpesona
https://hiuderyy.hashnode.dev/hadebarang
https://www.onfeetnation.com/profiles/blogs/xem-phim-godzila-vs-kong-4k
https://medium.com/@juinkilool/xem-full-hd-phim-mai-2024-vi%E1%BB%87tsub-online-46039585a668
https://open.firstory.me/user/clu4ckptv00d101un3i39aohi
https://open.firstory.me/story/clu4cm59400du01unc7ev42lj
https://telegra.ph/Simkuring-03-23
https://paste.ee/p/2IdKK
https://start.me/w/wYBoPA
https://hackmd.io/@rerewilli6/SJSr0KhA6
https://rentry.co/rv4uzn3r
https://muckrack.com/mojang-parahiangan/bio
https://www.bitsdujour.com/profiles/CkScWU
http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/716049/Default.aspx
https://profile.hatena.ne.jp/juinkilool/
https://www.fitlynk.com/1711214549F393472
"
FigS0r5G,MoodPlay Popular,AhmadXploit,Dart,Saturday 23rd of March 2024 12:12:57 PM CDT,"[
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
    ""videoUrl"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
    ""name"": ""The Lion of Allah: Hamza Ibn Abdul Mutalib (RA)"",
	""author"": ""Anonymous"",
	""actors"": ""Will Smith, Cillian Murphy"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   In the army of Islam there have been a number of brave and self-sacrificing officers and strong and powerful champions but the bravery of Hamzah bin Abdul Muttalib is recorded in the pages of history and in fact constitutes the golden leaves of the history of the battles of Islam. The Messenger of Allah, Muhammad (may Allah bless him and his Ahlel-Bayt), though safe under the protection of his uncle, Abu Talib, was not immune from harassment by the infidels. Whenever they found an opportunity for baiting him, they didn’t miss it. Hamza Ibn Abdul Mutalib Ibn Hashim Ibn Manaf was born in Mecca before the Prophet’s birth in two years so he was very close to the Prophet Muhammad (SAW) . ""
  },
  {
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691835269/Story/64d75aa254b70_uqppgk.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""Bilal the Great African Muslim"",
	""author"": ""Anonymous"",
	""actors"": ""Will Smith, Cillian Murphy"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   Bilal is very lovingly remembered by all Muslims of the world as one of the earliest great African Muslim. He was born in a village in a mountainous place in Western Arabia. Bilal's father was called Rebah and his mother was known as Hamama. They had come to Arabia as slaves from Ethiopia. The father and mother were slaves of Ummayya bin Khalaf, a rich man from the tribe of Quraish. Bilal was therefore born in slavery and served as a housekeeper. ""
  },
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691859328/Story/al_fateh_siovvh.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""Muhammad al Fatih, The Conqueror of Constantinople"",
	""author"": ""Anonymous"",
	""actors"": ""Will Smith, Cillian Murphy"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   Muhammad al Fatih was born on the 27th of Rajab, year 835 H or 30th of March, 1432 AD in the city of Erdine, the capital of Uthmani kingdom at that time. He was the son of Sultan Murad II, the sixth king of the Uthmani kingdom. Sultan Murad II had a great concern for his son’s education. He forged his beloved child to be a great and tough leader later in his life. His concern was proven by how the little Muhammad had finished his memorization of the 30 parts of the Qur’an, learned hadith, comprehended the science of jurisprudence, studied mathematic, astronomy, and war strategy in his young age. Beside that, Muhammad also learned many kind of languages, such as Arabic, Persian, Latin, and Greek. No wonder that at the age of 21, Muhammad was very fluent in Arabic, Turkish, Persian, Hebrew, Latin and Greek.""
  },
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691862067/Story/khaleed_mmalxl.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""Sword of God: The story of Khalid Ibn Al-Walid"",
	""author"": ""Anonymous"",
	""actors"": ""Will Smith, Cillian Murphy"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   Khalid’s first military expedition under the Muslim banner was at Mu’ta command. ""
  },
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691916765/Story/Nabi_Nuh_ifxjze.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""The Story of Abul Basyar (Prophet Noah)"",
	""author"": ""Anonymous"",
	""actors"": ""Will Smith, Cillian Murphy"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   The Muslims were left stranded following the death of Prophet Idris. Since, no other man from amongst them was chosen as a Prophet, people began to look to the pious companions of Idris for guidance. They respected and followed these righteous men and consulted them every time they were faced with a problem. Eventually, as time passed by, the pious men also had passed away leaving the Muslims again with no leader for guidance. They feared and were worried that they would stray from the path of Allah. Satan who watched on with shrewd eyes, approached the wailing men and women, disguised as a man, whispered in to their ears: ''If we make statues of these righteous men, it will be more pleasing to us in our worship and will remind us of them.""
  }
]"
sUXxMDLF,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:51:49 AM CDT,"file = open('8.txt')
s = file.readline()
for i in range(1, len(s)):
    if s[i] in 'OA' and s[i-1] in 'ABCD':
        s = s.replace(s[i-1:1+1], '**')
for i in range(len(s)):
    if s[i] != '*':
        s = s.replace(s[i], ' ')
s = s.split()
print(len(max(s, key = len)))"
V90gunPN,DeathScreen with Money and Coins (LocalScript),Sungmingamerpro13,CSS,Saturday 23rd of March 2024 11:49:08 AM CDT,"local TweenService = game:GetService(""TweenService"")
local MarketplaceService = game:GetService(""MarketplaceService"")
local TeleportService = game:GetService(""TeleportService"")
local player = game.Players.LocalPlayer

-- THIS ARE THE REMOTES YOU NEED TO HAVE INSIDE REPLICATED STORAGE
local diedEvent = game.ReplicatedStorage.DiedEvent
local reviveEvent = game.ReplicatedStorage.reviveEvent
local boughtLifeEvent = game.ReplicatedStorage.boughtLifeEvent
--

local ScreenGui = player.PlayerGui.DeathScreen
local extra_life = false

local LobbyId = 14705679998
local ProductId = 1773114333

local function teleportToLobby()
	TeleportService:Teleport(LobbyId) -- change to lobby ID
end

local function startTimer()
	local timer = 30
	repeat
		timer = timer - 1
		ScreenGui.DeathFrame.DiedFrame.Time.Text = ""Teleporting In ""..timer.."" Seconds""
		wait(1)
	until timer <= 0 or extra_life == true
	if extra_life == true then
		reviveEvent:FireServer()
		ScreenGui.DeathFrame.Visible = false
	else
		teleportToLobby()	
	end
end

boughtLifeEvent.OnClientEvent:Connect(function()
	extra_life = true
end)

ScreenGui.DeathFrame.DiedFrame.Continue.MouseButton1Down:connect(function()
	if player.Coins.Value >= 100 then
		player.Coins.Value = player.Coins.Value - 100
		reviveEvent:FireServer(player)
	elseif player.Money.Value >= 25 then
		player.Money.Value = player.Money.Value - 25
		reviveEvent:FireServer(player)
	else
		MarketplaceService:PromptProductPurchase(player, ProductId)
	end
end)

diedEvent.OnClientEvent:Connect(function()
	ScreenGui.DeathFrame.Visible = true
	startTimer()
end)

player:WaitForChild(""Coins"").Changed:Connect(function(Value)
	ScreenGui.DeathFrame.DiedFrame.CoinsAmount.Text = ""You Have: ""..Value
end)

ScreenGui.DeathFrame.DiedFrame.CoinsAmount.Text = ""You Have: ""..player.Coins.Value.."" (Coins)""

player:WaitForChild(""Money"").Changed:Connect(function(Value)
	ScreenGui.DeathFrame.DiedFrame.CashAmount.Text = ""You Have: ""..Value
end)

ScreenGui.DeathFrame.DiedFrame.CashAmount.Text = ""You Have: ""..player.Money.Value.."" (Cash)""
"
492yJiNK,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:40:49 AM CDT,"file = open('7.txt')
s = file.readline()
s = s.replace('NPO', '***').replace('PNO', '***')
for i in range(len(s)):
    if s[i] != '*':
        s = s.replace(s[i], ' ')
s = s.split()
print(len(max(s, key = len)))"
291xj2Uj,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:37:19 AM CDT,"file = open('6.txt')
s = file.readline()
s = s.replace('XZZY', 'XZZ ZZY')
s = s.split()
print(len(max(s, key = len)))"
Tf4Pnu1F,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:30:51 AM CDT,"file = open('5.txt')
s = file.readline()
l = 0
ans = 0
kr = 0
for r in range(len(s)):
    if s[r] == 'P':
        kr += 1
    while kr >= 1:
        if s[l] == 'P':
            kr -= 1
        l += 1
    ans = max(ans, r - l + 1)
print(ans)"
id1yttbU,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:20:00 AM CDT,"file = open('4.txt')
s = file.readline()
s = s.replace('XY', 'X Y').replace('XZ', 'X Z')
s = s.split()
print(len(max(s, key = len)))"
pygibD6M,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:16:42 AM CDT,"file = open('3.txt')
s = file.readline()
for x in 'qwertyuiopasdfghjklzxcvbnm':
    s = s.replace(x, ' ')
s = s.split()
print(len(max(s, key = len)))"
cPJF81tr,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:14:03 AM CDT,"file = open('3.txt')
s = file.readline()
s = s.replace('xy', 'X Y').replace('xz', 'X Z')
s = s.split()
print(len(max(s, key = len)))"
d7gDAj6A,Untitled,Farz0l1x,Python,Saturday 23rd of March 2024 11:07:54 AM CDT,"file = open('2.txt')
s = file.readline()
s = s.replace('A', ' ').replace('B',' ').replace('C', ' ')
s = s.split()
print(len(max(s, key = len)))"
