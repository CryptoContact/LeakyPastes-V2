id,title,username,language,date,content
mMMRH8dD,2024-05-08_stats.json,rdp_snitch,JSON,Wednesday 8th of May 2024 07:15:17 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 1,
    ""152.32.183.213"": 24,
    ""93.174.95.106"": 3,
    ""185.161.248.121"": 2,
    ""205.210.31.206"": 3,
    ""179.60.150.59"": 1,
    ""103.27.237.123"": 12,
    ""212.70.149.142"": 7,
    ""159.223.34.114"": 1,
    ""68.183.181.29"": 1,
    ""64.124.50.139"": 2,
    ""194.165.16.10"": 2,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 2,
    ""123.31.20.85"": 18,
    ""45.227.254.49"": 2,
    ""87.251.75.120"": 2,
    ""23.158.24.189"": 1,
    ""194.165.16.11"": 2,
    ""118.194.236.118"": 1,
    ""116.140.196.215"": 1,
    ""154.91.82.169"": 56659,
    ""205.210.31.58"": 3,
    ""167.94.145.109"": 1,
    ""103.245.236.103"": 2,
    ""68.183.230.185"": 1,
    ""62.204.41.155"": 4,
    ""58.218.204.183"": 3,
    ""205.210.31.53"": 3,
    ""185.196.220.41"": 3,
    ""194.48.251.72"": 1,
    ""94.232.41.30"": 2,
    ""193.142.146.227"": 3,
    ""156.146.59.101"": 1,
    ""141.98.9.34"": 1,
    ""104.234.181.59"": 2,
    ""112.4.139.162"": 1,
    ""185.198.69.140"": 1,
    ""167.94.145.97"": 1,
    ""62.204.41.93"": 4,
    ""194.165.16.73"": 2,
    ""103.232.53.123"": 4,
    ""194.165.16.76"": 2,
    ""2.57.149.92"": 1,
    ""187.190.60.112"": 1,
    ""198.235.24.125"": 3,
    ""194.165.16.78"": 2
  },
  ""asn"": {
    ""AS48721"": 11,
    ""AS135377"": 25,
    ""AS202425"": 3,
    ""AS49202"": 2,
    ""AS396982"": 12,
    ""AS211179"": 1,
    ""AS131386"": 12,
    ""AS204428"": 7,
    ""AS14061"": 3,
    ""AS6461"": 2,
    ""AS208091"": 6,
    ""AS197414"": 2,
    ""AS45899"": 18,
    ""AS267784"": 2,
    ""AS197767"": 1,
    ""AS4837"": 1,
    ""AS399077"": 56659,
    ""AS398705"": 2,
    ""AS150867"": 2,
    ""AS59425"": 8,
    ""AS4134"": 3,
    ""AS208046"": 6,
    ""AS48314"": 1,
    ""AS60068"": 1,
    ""AS209588"": 1,
    ""AS136359"": 2,
    ""AS56046"": 1,
    ""AS57523"": 1,
    ""AS63737"": 4,
    ""AS208312"": 1,
    ""AS22884"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 14,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 25,
    ""IP Volume inc"": 3,
    ""Kisara LLC"": 2,
    ""Google LLC"": 12,
    ""Veraton Projects LTD"": 1,
    ""Long Van System Solution"": 12,
    ""SS-Net"": 7,
    ""DigitalOcean, LLC"": 3,
    ""Zayo Bandwidth"": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""VietNam Post and Telecom Corporation"": 18,
    ""ZgoShop, Inc."": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""Tcloudnet Inc"": 56659,
    ""Censys, Inc."": 2,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 2,
    ""Horizon LLC"": 8,
    ""Chinanet"": 3,
    ""ColocationX Ltd."": 6,
    ""IP-Projects GmbH & Co. KG"": 1,
    ""DataCamp Limited"": 1,
    ""Hansin It Services Pvt. Ltd."": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""VIETSERVER"": 4,
    ""Red Byte LLC"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 11,
    ""Ucloud Information Technology"": 25,
    ""IP Volume inc"": 3,
    ""Kisara LLC"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Maxwell Group LTD"": 1,
    ""Unknown"": 12,
    ""4Media Ltd"": 7,
    ""DigitalOcean, LLC"": 3,
    ""Microsoft Corporation"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Xhostis"": 2,
    ""Vietnam Posts and Telecommunications Group"": 18,
    ""UAB Host Baltic"": 2,
    ""ZgoShop, Inc"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Tcloudnet Inc"": 56659,
    ""Censys, Inc."": 2,
    ""LP Technology Electronic Commerce Company Limited"": 2,
    ""Horizon LLC"": 8,
    ""Chinanet JS"": 3,
    ""Makut Investments"": 3,
    ""Gwy It Pty Ltd"": 1,
    ""Dmitriy Panchenko"": 2,
    ""ColocationX Ltd"": 3,
    ""Cdn77 NYC"": 1,
    ""Alviva Holding Limited"": 1,
    ""IPXO"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""VietServer Services technology company limited"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""regionName"": {
    ""Kaunas"": 11,
    ""Virginia"": 29,
    ""North Holland"": 13,
    ""Moscow"": 11,
    ""California"": 12,
    ""Distrito Federal"": 1,
    ""Ho Chi Minh"": 14,
    ""Sliven"": 7,
    ""Central Singapore"": 1,
    ""South West"": 2,
    ""Hanoi"": 22,
    ""Vilnius"": 2,
    ""\u014csaka"": 1,
    ""Tokyo"": 1,
    ""Beijing"": 1,
    ""North West"": 56659,
    ""Hesse"": 3,
    ""Jiangsu"": 4,
    ""Perm Krai"": 2,
    ""New York"": 1,
    ""National Capital Territory of Delhi"": 2,
    ""Lesser Poland"": 1,
    ""Hidalgo"": 1
  },
  ""country"": {
    ""Lithuania"": 13,
    ""United States"": 42,
    ""The Netherlands"": 13,
    ""Russia"": 13,
    ""Venezuela"": 1,
    ""Vietnam"": 36,
    ""Bulgaria"": 7,
    ""Singapore"": 56662,
    ""Japan"": 2,
    ""China"": 5,
    ""Germany"": 3,
    ""India"": 2,
    ""Poland"": 1,
    ""Mexico"": 1
  },
  ""account"": {
    ""Administr"": 17,
    ""Administrator"": 9,
    ""Admin"": 8,
    ""Whatuptime.com"": 8,
    ""root"": 3,
    ""Test"": 20,
    ""CpoLcVExT"": 1,
    ""gteEYX"": 1,
    ""oCdYDK"": 1,
    ""hello"": 49,
    ""(empty)"": 5,
    ""2887428808"": 56659,
    ""ymQCCMhpH"": 1,
    ""pdUrfC"": 1,
    ""ICqEKW"": 1,
    ""Domain"": 10,
    ""WrEsCaXaV"": 1,
    ""FgRxTU"": 1,
    ""zRNKCk"": 1,
    ""GBTfsMW"": 1,
    ""EoTajcFAV"": 1,
    ""qApdlp"": 1,
    ""pEWfgK"": 1
  },
  ""keyboard"": {
    ""Unknown"": 56801
  },
  ""client_build"": {
    ""Unknown"": 56801
  },
  ""client_name"": {
    ""Unknown"": 56801
  },
  ""ip_type"": {
    ""Unknown"": 56737,
    ""hosting"": 40,
    ""mobile"": 7,
    ""mobile & hosting"": 12,
    ""hosting & proxy"": 1,
    ""proxy"": 4
  }
}"
cmFuQQca,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Wednesday 8th of May 2024 06:32:44 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
08 May 2024"
cg9KM5Lu,"""Servo Control"" rev_01",pleasedontcode,Arduino,Wednesday 8th of May 2024 06:31:04 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Servo Control""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-08 23:30:16

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Improve user description requirement by specifying */
	/* EasyButton library usage for debouncing a push */
	/* button on pin D2 with INPUT_PULLUP configuration. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* move the servo motor of 50¬∞ if the button is */
	/* pressed. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>	// Include the EasyButton library for debouncing a push button
#include <Servo.h>		// Include the Servo library for controlling servo motor

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void moveServo(int degrees);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t BUTTON_PIN = 2; // Define the pin for the push button (D2)

/***** DEFINITION OF SERVO MOTOR PIN *****/
const uint8_t SERVO_PIN = 9; // Define the pin for the servo motor

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(BUTTON_PIN); // Create an EasyButton object for the push button
Servo servoMotor; // Create a Servo object to control the servo motor

void setup(void)
{
	// Initialize the EasyButton and Servo objects
	button.begin();
	servoMotor.attach(SERVO_PIN); // Attach the servo motor to the specified pin
}

void loop(void)
{
	// Read the button state
	button.read();

	// Move the servo motor 50 degrees if the button is pressed
	if (button.isPressed()) {
		moveServo(50);
	}
}

void moveServo(int degrees)
{
	servoMotor.write(degrees); // Move the servo motor to the specified angle
	delay(15); // Delay for stability
}

/* END CODE */"
djLTi7Km,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Wednesday 8th of May 2024 06:12:45 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_157459.pdf

Working as of:
08 May 2024"
VBhwVxSV,Bus MainScript (Bus TeleportScript),Sungmingamerpro13,CSS,Wednesday 8th of May 2024 06:10:14 PM CDT,"local TS = game:GetService(""TeleportService"")
local GuiPart = script.Parent.Parent.GuiPart
local Seats = script.Parent.Parent.BusModel.SeatsModel:GetChildren()

local List = {}
local MinPlayers = 1
local MaxPlayers = 12
local Timer

local PlaceId = (17424851138)

GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers

local function removeFromList(character)
	for i=1,#List do
		if List[i] == character.Name then
			table.remove(List,i)
			GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
		end
	end
end

local function TeleportPlayers()
	if #List >= MinPlayers then
		GuiPart.SurfaceGui.Status.Text = ""Teleporting...""
		GuiPart.SurfaceGui.Status.TextColor3 = Color3.new(1, 0, 0)
		local playersToTeleport = {}
		for i=1,#List do
			if game.Players:FindFirstChild(List[i]) then
				table.insert(playersToTeleport, game.Players:FindFirstChild(List[i]))
				game.ReplicatedStorage.TransitionEvent:FireClient(game.Players:FindFirstChild(List[i]))
			else
				table.remove(List,i)
			end
		end
		local Code = TS:ReserveServer(PlaceId)
		TS:TeleportToPrivateServer(PlaceId, Code, playersToTeleport)
		repeat wait() until #List <= 0
		GuiPart.SurfaceGui.Status.Text = ""READY""
		GuiPart.SurfaceGui.Status.TextColor3 = Color3.new(0.333333, 1, 0)
	else
		GuiPart.SurfaceGui.Players.Text = ""1 Players Neeeded""
		wait(2.5)
		GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
	end
end

script.Parent.Touched:Connect(function(Hit)
	if Hit.Parent:FindFirstChild(""Humanoid"") then
		
		local character = Hit.Parent
		local Player = game.Players:GetPlayerFromCharacter(character)
		local alreadyExists = false
		
		for i=1,#List do
			if List[i] == character.Name then
				alreadyExists = true
			end
		end
		
		if alreadyExists == false then
			if #List < MinPlayers then
				table.insert(List,character.Name)
				for i, v in pairs(Seats) do
					if Seats == nil then
						local Check = Instance.new(""Weld"")
						Check.Name = ""Check""
						Check.Parent = Player.Character
						Check.Parent.Humanoid.JumpPower = 0
						Check.Parent.Humanoid.WalkSpeed = 0
					end
				end
				Seats[math.random(1, #Seats)]:Sit(Player.Character.Humanoid)
				game.ServerStorage.LeaveGui:Clone().Parent = Player.PlayerGui
				GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
			end
		end
		Player.CharacterRemoving:connect(function(character)
			removeFromList(character)
		end)
	end
end)

game.ReplicatedStorage.LeaveGuiEvent.OnServerEvent:Connect(function(player)
	player:LoadCharacter()
end)

while wait() do
	Timer = 41
	for i=1,Timer do
		Timer = Timer - 1
		GuiPart.SurfaceGui.timeLabel.Text = ""Time: ""..Timer
		wait(1)
	end
	TeleportPlayers()
end
"
h2XHPmUB,Swimbot Error,swimmerhair,Python,Wednesday 8th of May 2024 05:32:27 PM CDT,"Traceback (most recent call last):
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/bot.py"", line 939, in invoke
    await ctx.command.invoke(ctx)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 863, in invoke
    await injected(*ctx.args, **ctx.kwargs)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/whois.py"", line 221, in whois
    info = await COC.swimbot(tag).get_info
  File ""/home/pi/Swimbot/COC.py"", line 145, in get_info
    account = await swimbot(account['_id']).update
  File ""/home/pi/Swimbot/COC.py"", line 167, in update
    resp = await Player(self.input).info
  File ""/home/pi/Swimbot/COC.py"", line 35, in info
    elif r.status == 403: raise swimbot_utils.CoCForbidden
swimbot_utils.CoCForbidden
"
mVVA0Jib,Ulica (Bakurski),niske,Java,Wednesday 8th of May 2024 05:14:55 PM CDT,"public class ListaListi{
	
	public static void main (String[] args) {
		
		Ulica Silerova = new Ulica();
		Silerova.dodajKucu(3);
		Silerova.dodajKucu(1);
		
		Silerova.dodajKucu(7);
		Silerova.dodajKucu(5);
		Silerova.dodajKucu(9);
		
		Silerova.dodajOsobu(1, ""Dusan"");
		Silerova.dodajOsobu(1, ""Olivera"");
		Silerova.dodajOsobu(1, ""Nebojsah"");
		
		Silerova.dodajOsobu(3, ""Jovicaa"");
		Silerova.dodajOsobu(3, ""Nemanjaaaaaa"");
		
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		
		Silerova.dodajOsobu(7, ""Niske"");
		Silerova.dodajOsobu(7, ""Bodji"");
		
		Silerova.najviseStanovnika(3);
		
		
		System.out.println(Silerova);
		
		Silerova.prebaci(1, 9);
		Silerova.prebaci(7, 123);
		
		System.out.println(Silerova);
	}
}

class Ulica{
	
	// Klasa Osoba
	class Osoba{
		String ime;
		Osoba veza;
	
		public Osoba(String ime){
			this.ime = ime;
			this.veza = null;
		}
		
		public String toString(){
			return ime;
		}
	}
	
	//Klasa Kuca
	class Kuca{
		int broj;
		Kuca veza;
		Osoba sadrzaj;
		
		public Kuca(int broj){
			this.broj = broj;
			this.veza = null;
			this.sadrzaj = null;
		}
		
		public String toString(){
			String s = ""Kuca broj "" + broj + "":"";
			Osoba tek = sadrzaj;
			
			if(tek == null){
				s += "" je prazna."";
			} else {
				s += "" "" + tek;
				tek = tek.veza;
				
				while(tek != null){
					s += "", "" + tek;
					tek = tek.veza;
				}
			}
			
			return s;
		}
	}
	
	Kuca prvaKuca;
	
	// Metode za ulicu
	public boolean postojiKuca(int broj){
		Kuca tek = prvaKuca;
		
		while(tek != null){
			if(tek.broj == broj){
				return true;
			}
			
			tek = tek.veza;
		}
		
		return false;
	}
	
	
	public void dodajKucu(int broj){
		if(!postojiKuca(broj)){
			Kuca tek = prvaKuca;
			
			if(prvaKuca == null || broj < prvaKuca.broj){
				
				prvaKuca = new Kuca(broj);
				prvaKuca.veza = tek;
				return;
			}
			
			while(tek.veza != null){
				
				if(broj < tek.veza.broj)
					break;
					
				tek = tek.veza;	
				
			}
			// 1 3 [5] (7) 9
			Kuca sledeca = tek.veza;
			Kuca nova = new Kuca(broj);
			tek.veza = nova;
			nova.veza = sledeca;
		}
	}

	public void dodajOsobu(int brojKuce, String ime){
		Kuca tek = prvaKuca;
		while(tek != null && postojiKuca(brojKuce)){
			if(tek.broj == brojKuce){
				Osoba tekOsoba = tek.sadrzaj;
				tek.sadrzaj = new Osoba(ime);
				tek.sadrzaj.veza = tekOsoba;
				
			}
			tek = tek.veza;
		}
	}
	
	public void najviseStanovnika(int N){
		int brKuceMax = prvaKuca.broj;
		int pomocna = 0;
		int brojac = 0;
		
		Kuca tek = prvaKuca;
		
		if(prvaKuca == null){
			return;
		}
		
		while(tek != null){
			Osoba tekOsoba= tek.sadrzaj;
			while(tekOsoba != null){
				if(tekOsoba.ime.length() > N)
					brojac++;
				
				tekOsoba = tekOsoba.veza;
			}
			
			if(brojac > pomocna){
				pomocna = brojac;
				brKuceMax = tek.broj;
			}
			tek = tek.veza;
			brojac = 0;
		}
		
		System.out.println(""Kuca sa imenima vecim od broja N: "" + N + "" je "" + brKuceMax);
	}
	
	public void prebaci(int A, int B){
		if(postojiKuca(A)){
			Kuca tek = prvaKuca;
			
			while(tek != null){
				if(tek.broj == A){
					break;
				}
				tek = tek.veza;
			}
			
			Osoba tekOsoba = tek.sadrzaj;
			Osoba prethodni = null;
			
			while(tekOsoba.veza != null){
				//System.out.println(tekOsoba.ime);
				prethodni = tekOsoba;
				tekOsoba = tekOsoba.veza;
			}
			
			
			Osoba pomocna = tekOsoba;
			prethodni.veza = null;
			
			if(postojiKuca(B)){
				dodajOsobu(B, pomocna.ime);
			}
			
			
		}
	}
	//-----------------------------------
	

	// Ispis cele ulice
	public String toString(){
		String s = ""Ulica: "";
		Kuca tek = prvaKuca;
		
		if(tek == null){
			s += "" je prazna."";
		} else {
			while(tek != null){
				s += ""\n"" + tek;
				tek = tek.veza;
			}
		}
			
		return s;
	}
}



"
tyLBSd4X,Pobieranie YT,314ma,PowerShell,Wednesday 8th of May 2024 04:25:30 PM CDT,"# 1. Wrzuciƒá to do pliku pobieranie_youtube.ps1
# 2. Zrobiƒá skr√≥t do tego pliku np. na pulpicie
# 3. Przeedytowaƒá target skr√≥tu na: powershell C:\≈õcie≈ºka\do\skryptu\pobieranie_youtube.ps1
# 4. Plik mp3 pobierze siƒô do lokalizacji ""Uruchom w""

echo Pobieranie...
$link = Get-Clipboard
$link -match ""[\?&]v=([a-zA-Z0-9\-_]+)"" | Out-Null
if ($Matches.Length -eq 1) {
    $videoId = $Matches[1]
    yt-dlp.exe -x --audio-format mp3 https://youtube.com/?v=$videoId  --no-warnings --quiet
}"
uBM0tEsz,Character Name Generator (ChatGPT),Krythic,C#,Wednesday 8th of May 2024 03:57:21 PM CDT,"using System;
using System.Collections.Generic;

public class NameGenerator
{
    private HashSet<string> maleFirstNames;
    private HashSet<string> femaleFirstNames;
    private HashSet<string> surnames;
    private Random rnd;

    public NameGenerator(Random random = null)
    {
        maleFirstNames = new HashSet<string>
        {
            ""Aldric"", ""Branthor"", ""Cedric"", ""Darian"", ""Elric"", ""Finnian"", ""Gareth"", ""Haldor"", ""Ithilien"", ""Jareth"",
            ""Kael"", ""Lorcan"", ""Marius"", ""Nathair"", ""Orin"", ""Perrin"", ""Quillen"", ""Roran"", ""Soren"", ""Talon"", ""Ulfar"",
            ""Valen"", ""Wulfric"", ""Xavier"", ""Yorick"", ""Zephyr"", ""Auron"", ""Benedict"", ""Corvus"", ""Dexter"", ""Eldric"",
            ""Faelan"", ""Gideon"", ""Hawthorne"", ""Ignatius"", ""Jasper"", ""Kieran"", ""Lysander"", ""Magnus"", ""Nikolai"",
            ""Oberon"", ""Percival"", ""Quentin"", ""Ryder"", ""Sebastian"", ""Thaddeus"", ""Ulric"", ""Vance"", ""Wesley"", ""Xander"",
            ""Yarrow"", ""Zander"", ""Asher"", ""Baelor"", ""Cassius"", ""Dorian"", ""Ezekiel"", ""Finnegan"", ""Garrick"", ""Hadrian"",
            ""Isidore"", ""Jace"", ""Kellan"", ""Lucian"", ""Malachi"", ""Nolan"", ""Osiris"", ""Peregrine"", ""Quincy"", ""Rhys"",
            ""Silas"", ""Theodore"", ""Ulysses"", ""Varian"", ""Wilder"", ""Xavian"", ""Yorath"", ""Zaire"", ""Atlas"", ""Bastian"",
            ""Caspian"", ""Dante"", ""Elias"", ""Fabian"", ""Gavin"", ""Hugo"", ""Isaac"", ""Jaxon"", ""Kai"", ""Lachlan"", ""Milo"",
            ""Nico"", ""Orion"", ""Paxton"", ""Ronan"", ""Sawyer"", ""Theo"", ""Uriah"", ""Vincent"", ""Wyatt"", ""Xander"", ""Yael"", ""Zayn""
        };
        femaleFirstNames = new HashSet<string>
        {
            ""Aria"", ""Briar"", ""Celestia"", ""Dahlia"", ""Elara"", ""Fiona"", ""Genevieve"", ""Hazel"", ""Isolde"", ""Jasmine"",
            ""Kiera"", ""Luna"", ""Maeve"", ""Nyx"", ""Ophelia"", ""Phaedra"", ""Quinn"", ""Rosalind"", ""Seraphina"", ""Thalia"",
            ""Ursula"", ""Violet"", ""Willow"", ""Xanthe"", ""Yara"", ""Zara"", ""Aurora"", ""Belle"", ""Cassandra"", ""Daphne"",
            ""Eleanor"", ""Felicity"", ""Guinevere"", ""Helena"", ""Ivy"", ""Juliet"", ""Kira"", ""Lyra"", ""Morgana"", ""Nova"",
            ""Odette"", ""Persephone"", ""Quintessa"", ""Rowan"", ""Serenity"", ""Talia"", ""Uma"", ""Vivienne"", ""Wren"", ""Xena"",
            ""Yasmine"", ""Zephyra"", ""Arabella"", ""Bryony"", ""Calista"", ""Delilah"", ""Elowen"", ""Fawn"", ""Gwendolyn"",
            ""Hermione"", ""Isadora"", ""Jessamine"", ""Kiara"", ""Lilith"", ""Minerva"", ""Niamh"", ""Oona"", ""Pandora"",
            ""Quiana"", ""Rhiannon"", ""Saoirse"", ""Tamsin"", ""Undine"", ""Vespera"", ""Winter"", ""Xiomara"", ""Yseult"",
            ""Zephyrine"", ""Athena"", ""Bronwyn"", ""Cordelia"", ""Drusilla"", ""Evangeline"", ""Fleur"", ""Giselle"", ""Hestia"",
            ""Ingrid"", ""Jocasta"", ""Kalliope"", ""Lavinia"", ""Mireille"", ""Nerissa"", ""Olympia"", ""Pallas"", ""Querida"",
            ""Rowena"", ""Sapphira"", ""Tanith"", ""Ursuline"", ""Valkyrie"", ""Winifred"", ""Xylia"", ""Ygritte"", ""Zelda""
        };
        surnames = new HashSet<string>
        {
            ""Aldaine"", ""Blackthorn"", ""Crestfall"", ""Dreadmoor"", ""Ebonwood"", ""Frostbane"", ""Goldenvale"", ""Hawkridge"",
            ""Ironheart"", ""Jadeborn"", ""Kingsley"", ""Lorekeeper"", ""Moonshadow"", ""Nightfall"", ""Oakenshield"", ""Proudfoot"",
            ""Quicksilver"", ""Ravenwood"", ""Stormcloak"", ""Thornblade"", ""Underhill"", ""Valeheart"", ""Whitewood"", ""Xanadu"",
            ""Yewshade"", ""Zephyrblade"", ""Ashenbrook"", ""Brightwood"", ""Copperfield"", ""Duskwood"", ""Emberstone"", ""Firesong"",
            ""Griffith"", ""Holloway"", ""Ivoryfang"", ""Juniper"", ""Kingsgrave"", ""Lionheart"", ""Mistwood"", ""Netherwood"",
            ""Oakenspear"", ""Pinehurst"", ""Quillson"", ""Redwood"", ""Silverthorn"", ""Stonewall"", ""Talltree"", ""Umberfall"",
            ""Valerian"", ""Wildewood"", ""Xandros"", ""Yarrowfield"", ""Zephyrcrest"", ""Avalanche"", ""Blackwater"", ""Crimsonwind"",
            ""Darkwood"", ""Eversong"", ""Frostwind"", ""Goldleaf"", ""Hawthorn"", ""Ironclad"", ""Jadewind"", ""Kingsmark"",
            ""Lunarfall"", ""Mistborn"", ""Nighthawk"", ""Oathbreaker"", ""Pinecrest"", ""Quicksand"", ""Ravenclaw"", ""Shadowbane"",
            ""Starfall"", ""Thunderheart"", ""Underwood"", ""Valkyrie"", ""Winterbourne"", ""Xanathar"", ""Yellowknife"",
            ""Zephyrwind"", ""Arcane"", ""Bloodmoon"", ""Crowfeather"", ""Dawnblade"", ""Elmwood"", ""Frostfang"", ""Goldenleaf"",
            ""Hollowgrave"", ""Ironwood"", ""Jadehorn"", ""Knightshade"", ""Lioncrest"", ""Morningsong"", ""Nightraven"", ""Oceansong"",
            ""Phoenix"", ""Quicksilver"", ""Ravensong"", ""Shadowbrook"", ""Stagheart"", ""Twilight"", ""Umbra"", ""Viper"", ""Wintersong"",
            ""Xavier"", ""Yew"", ""Zephyr"", ""Alder"", ""Briar"", ""Cypress"", ""Dusk"", ""Ember"", ""Frost"", ""Gale"", ""Holly"", ""Ivy"",
            ""Juniper"", ""Lark"", ""Moss"", ""Nightshade"", ""Orchid"", ""Pine"", ""Quill"", ""Rose"", ""Sage"", ""Thorn"", ""Violet"",
            ""Willow"", ""Yarrow"", ""Zinnia"", ""Ash"", ""Bramble"", ""Dawn"", ""Echo"", ""Fawn"", ""Glen"", ""Hazel"", ""Iris"", ""Jade"",
            ""Kestrel"", ""Luna"", ""Meadow"", ""Nova"", ""Opal"", ""Petal"", ""Rain"", ""Sky"", ""Tansy"", ""Vale"", ""Wren"", ""Yew"", ""Zephyr""
        };
        rnd = random ?? new Random();
    }

    public void AddMaleFirstName(string name)
    {
        maleFirstNames.Add(name);
    }

    public void AddFemaleFirstName(string name)
    {
        femaleFirstNames.Add(name);
    }

    public void AddSurname(string surname)
    {
        surnames.Add(surname);
    }

    public string GenerateMaleFirstName()
    {
        if (maleFirstNames.Count == 0)
            throw new InvalidOperationException(""No male first names available."");
        int index = rnd.Next(maleFirstNames.Count);
        return maleFirstNames.ElementAt(index);
    }

    public string GenerateFemaleFirstName()
    {
        if (femaleFirstNames.Count == 0)
            throw new InvalidOperationException(""No female first names available."");
        int index = rnd.Next(femaleFirstNames.Count);
        return femaleFirstNames.ElementAt(index);
    }

    public string GenerateSurname()
    {
        if (surnames.Count == 0)
            throw new InvalidOperationException(""No surnames available."");
        int index = rnd.Next(surnames.Count);
        return surnames.ElementAt(index);
    }

    public string GenerateFullName(bool isMale)
    {
        string firstName = isMale ? GenerateMaleFirstName() : GenerateFemaleFirstName();
        string surname = GenerateSurname();
        return $""{firstName} {surname}"";
    }
}"
wXKUuzNx,about,Z1maV1,Lua,Wednesday 8th of May 2024 03:57:12 PM CDT,"os.pullEvent = os.pullEventRaw

local w,h = term.getSize()

function printCentered( y,s )
   local x = math.floor((w - string.len(s)) / 2)
   term.setCursorPos(x,y)
   term.clearLine()
   term.write( s )
end

local nOption = 1

local function drawMenu()
   term.clear()
   term.setCursorPos(1,1)
   term.write(""Diamond OS // 1.2.0 // "")
term.setCursorPos(1,2)
shell.run(""id"")

   term.setCursorPos(w-11,1)
if nOption == 1 then
   term.write(""Back"")
else
end

end

--GUI
term.clear()
local function drawFrontend()
   printCentered( math.floor(h/2) - 3, """")
   printCentered( math.floor(h/2) - 2, ""About"" )
   printCentered( math.floor(h/2) - 1, """")
   printCentered( math.floor(h/2) + 0, ""Name  : DiamondOS"")
   printCentered( math.floor(h/2) + 1, ""Manu. : LINC     "")
   printCentered( math.floor(h/2) + 2, ""Vers. : 1.2.0    "")
   printCentered( math.floor(h/2) + 3, """")
   printCentered( math.floor(h/2) + 4, ((nOption == 1) and ""[   Back   ]"") or "" Back"" )
end

--Display
drawMenu()
drawFrontend()

while true do
	local e,p = os.pullEvent(""key"")
		if p == keys.up then
			if nOption > 1 then
				nOption = nOption - 1
				drawMenu()
				drawFrontend()
			end
		elseif p == keys.down then
			if nOption < 1 then
				nOption = nOption + 1
				drawMenu()
				drawFrontend()
			end
		elseif p == keys.enter then
			break
		end
end
term.clear()

--Conditions
if nOption  == 1 then
shell.run(""/bin/main"")
end"
4BH1avUA,linq,Z1maV1,Lua,Wednesday 8th of May 2024 03:42:07 PM CDT,"brk = false
function forEach(tbl, func)
	for i, v in ipairs(tbl) do
		if brk then
			brk = false
			break
		end
		func(v)
	end
end

return { brk = function() brk = true end, forEach = forEach }"
RxkNetDQ,sha256,fmg75,Python,Wednesday 8th of May 2024 03:30:28 PM CDT,"# https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf


def _sigma0(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 7) ^
           _rotate_right(num, 18) ^
           (num >> 3))
    return num


def _sigma1(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 17) ^
           _rotate_right(num, 19) ^
           (num >> 10))
    return num


def _capsigma0(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 2) ^
           _rotate_right(num, 13) ^
           _rotate_right(num, 22))
    return num


def _capsigma1(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 6) ^
           _rotate_right(num, 11) ^
           _rotate_right(num, 25))
    return num


def _ch(x: int, y: int, z: int):
    """"""As defined in the specification.""""""
    return (x & y) ^ (~x & z)


def _maj(x: int, y: int, z: int):
    """"""As defined in the specification.""""""
    return (x & y) ^ (x & z) ^ (y & z)


def _rotate_right(num: int, shift: int, size: int = 32):
    """"""Rotate an integer right.""""""
    return (num >> shift) | (num << size - shift)

# Funci√≥n para generar el mensaje binario seg√∫n la especificaci√≥n
def generate_binary_message(message: bytearray) -> bytes:
        """"""Return a SHA-256 hash from the message passed.
    The argument should be a bytes, bytearray, or
    string object.""""""
        
        if isinstance(message, str):
            message = bytearray(message, 'ascii')
        elif isinstance(message, bytes):
            message = bytearray(message)
        elif not isinstance(message, bytearray):
            raise TypeError
        
        # Longitud original del mensaje en bits
        length = len(message) * 8
        # Agregar el bit ""1"" al final del mensaje
        message += b'\x80'
        # Calcular la cantidad de ceros necesarios para el relleno
        padding_zeros = (448 - (length + 1) % 512) % 512
        # Agregar los ceros de relleno
        message += b'\x00' * (padding_zeros // 8)
        # Agregar la longitud del mensaje original como una cadena binaria de 64 bits
        message += length.to_bytes(8, 'big')
        return message



# constantes ""K"" page 11

K = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]


def generate_hash(message: bytes) -> bytearray:
    """"""Return a SHA-256 hash from the message passed.
    The argument should be a bytes, bytearray, or
    string object.""""""

    # Aplicar el relleno al mensaje
    padded_message = generate_binary_message(message)

    # Parsing
    blocks = []  # contains 512-bit chunks of message
    for i in range(0, len(padded_message), 64):  # 64 bytes is 512 bits
        blocks.append(padded_message[i:i + 64])

    # SHA-256 Hash Computation
    hash_values = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
                   0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]

    for message_block in blocks:
        # Prepare message schedule
        message_schedule = []
        for t in range(0, 64):
            if t <= 15:
                # adds the t'th 32 bit word of the block,
                # starting from leftmost word
                # 4 bytes at a time
                message_schedule.append(bytes(message_block[t * 4:(t * 4) + 4]))
            else:
                term1 = _sigma1(int.from_bytes(message_schedule[t - 2], 'big'))
                term2 = int.from_bytes(message_schedule[t - 7], 'big')
                term3 = _sigma0(int.from_bytes(message_schedule[t - 15], 'big'))
                term4 = int.from_bytes(message_schedule[t - 16], 'big')

                # append a 4-byte byte object
                schedule = ((term1 + term2 + term3 + term4) % 2**32).to_bytes(4, 'big')
                message_schedule.append(schedule)

        assert len(message_schedule) == 64

        # Initialize working variables
        a, b, c, d, e, f, g, h = hash_values

        # Iterate for t=0 to 63
        for t in range(64):
            t1 = ((h + _capsigma1(e) + _ch(e, f, g) + K[t] +
                   int.from_bytes(message_schedule[t], 'big')) % 2**32)

            t2 = (_capsigma0(a) + _maj(a, b, c)) % 2**32

            h, g, f, e, d, c, b, a = g, f, e, (d + t1) % 2**32, c, b, a, (t1 + t2) % 2**32

        # Compute intermediate hash value
        hash_values = [(x + y) % 2**32 for x, y in zip(hash_values, [a, b, c, d, e, f, g, h])]

    # concatenation by fmg
    result_bytes = b"""".join(h.to_bytes(4, 'big') for h in hash_values)
    return result_bytes


import sys

if __name__ == ""__main__"":
    # Verificar si se proporcion√≥ un mensaje como argumento
    if len(sys.argv) != 2:
        print(""Uso: python3 sha256.py mensaje"")
        sys.exit(1)

    # Obtener el mensaje del primer argumento (ignorando el nombre del script)
    mensaje = sys.argv[1]

    # Calcular y mostrar el hash del mensaje
    print(generate_hash(mensaje.encode()).hex())"
KckR0faC,Buble 3,dllbridge,C,Wednesday 8th of May 2024 03:26:36 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; –ø—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    array_size equ ($ - array) / 4
    buffer db 'Sorted array: ', 0

section '.code' code readable executable
    start:
        mov ecx, array_size

        outer_loop:
            mov edx, 0
            mov ebx, ecx
            dec ebx

            inner_loop:
                mov eax, [array + edx * 4]
                cmp eax, [array + edx * 4 + 4]
                jbe not_swap

                mov eax, [array + edx * 4]
                mov ebx, [array + edx * 4 + 4]
                mov [array + edx * 4], ebx
                mov [array + edx * 4 + 4], eax

                not_swap:
                    inc edx
                    loop inner_loop

            loop outer_loop

        mov ecx, array_size
        mov edx, buffer
        call print_string

        print_loop:
            mov eax, [array + ecx * 4 - 4]
            call print_number
            dec ecx
            jnz print_loop

        call crlf

        call [ExitProcess]

    proc print_string
        push ecx
        push edx
        mov ecx, -1
        .repeat
            inc ecx
            mov al, [edx + ecx]
            cmp al, 0
            jz .done
            invoke StdOut, al
            jmp .repeat
        .done:
        pop edx
        pop ecx
        ret
    endp

    proc print_number
        push eax
        push ebx
        mov ebx, 10
        mov edx, 0
        div ebx
        cmp eax, 0
        jz .done
        push edx
        call print_number
        pop edx
    .done:
        add dl, '0'
        invoke StdOut, dl
        pop ebx
        pop eax
        ret
    endp

    proc crlf
        invoke StdOut, 13
        invoke StdOut, 10
        ret
    endp

section '.idata' import data readable writeable
    library kernel32, 'kernel32.dll',\
            user32, 'user32.dll'

    import kernel32,\
            ExitProcess, 'ExitProcess'

    import user32,\
            wsprintf, 'wsprintfA'

section '.text' code readable executable"
ysnVAQmT,Untitled,Rodunskiy,C#,Wednesday 8th of May 2024 03:17:34 PM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int number = 1;
            int startNumber = 2;
            int power = 0;
            int maxNumberRandom = 100;
            int numberRandom = random.Next(maxNumberRandom);

            Console.WriteLine($""–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {numberRandom}"");

            while (number < numberRandom) 
            {
                power++;
                number *= startNumber;
            }

            Console.WriteLine($""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å –¥–≤–æ–π–∫–∏, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∞—è —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {power}"");
        }
    }
}

"
AJMFUeRV,BubleSorting FASM 2,dllbridge,ASM (NASM),Wednesday 8th of May 2024 03:17:08 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; –ø—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    array_size equ ($ - array) / 4
    buffer db 'Sorted array: ', 0

section '.code' code readable executable
    start:
        mov ecx, array_size

        outer_loop:
            mov edx, 0
            mov ebx, ecx
            dec ebx

            inner_loop:
                mov eax, [array + edx * 4]
                cmp eax, [array + edx * 4 + 4]
                jbe not_swap

                mov eax, [array + edx * 4]
                mov ebx, [array + edx * 4 + 4]
                mov [array + edx * 4], ebx
                mov [array + edx * 4 + 4], eax

                not_swap:
                    inc edx
                    loop inner_loop

            loop outer_loop

        mov ecx, array_size
        mov edx, buffer
        call print_string

        print_loop:
            mov eax, [array + ecx * 4 - 4]
            call print_number
            dec ecx
            jnz print_loop

        call crlf

        call [ExitProcess]

    proc print_string
        enter
            push ecx
            mov ecx, -1
            .repeat
                inc ecx
                mov al, [edx + ecx]
                cmp al, 0
                jz .done
                invoke StdOut, al
                jmp .repeat
            .done:
            pop ecx
        return
    endp

    proc print_number
        enter
            push eax
            push ebx
            mov ebx, 10
            mov edx, 0
            div ebx
            cmp eax, 0
            jz .done
            push edx
            call print_number
            pop edx
        .done:
            add dl, '0'
            invoke StdOut, dl
            pop ebx
            pop eax
        return
    endp

    proc crlf
        enter
            invoke StdOut, 13
            invoke StdOut, 10
        return
    endp

section '.idata' import data readable writeable
    library kernel32, 'kernel32.dll',\
            user32, 'user32.dll'

    import kernel32,\
            ExitProcess, 'ExitProcess'

    import user32,\
            wsprintf, 'wsprintfA'

section '.text' code readable executable"
0dfv0Zzm,Setup Docker Volume,About80Ninjas,PowerShell,Wednesday 8th of May 2024 03:10:40 PM CDT,"# This script will create docker volumes in the specified path and inspect them after creation

# Define an array of volume names
$Volumes = @(""jenkins"", ""webapps"", ""gitea"", ""giteasql"")

# Define the path where the volumes will be created
$PathToVolumes = ""C:\Dev\docker\volumes\""

# Define the docker command to create volumes
# The --opt type=none option specifies a non-docker managed volume
# The --opt o=bind option binds the volume to a directory on the host machine
# The --opt device=$PathToVolumes option specifies the directory on the host machine where the volume will be created
$dockercmd = ""docker volume create --opt type=none --opt o=bind --opt device=$PathToVolumes""

# Loop through each volume name in the array
$Volumes | ForEach-Object {  

    # Create a full command by concatenating the docker command with the volume name
    $fullcmd = $dockercmd + $_ + ' ' + $_

    # Execute the full command using Invoke-Expression
    # This will create the volume with the specified name and bind it to the specified directory on the host machine
    Invoke-Expression $fullcmd

    # Execute the docker command to inspect the volume with the specified name
    # This will display information about the volume, such as its driver, name, and mount point
    Invoke-Expression ""docker volume inspect $($_)""
}
"
AD3a7RQh,Com-port for arduino,dllbridge,C,Wednesday 8th of May 2024 02:47:10 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <termios.h>

int open_port(const char *port) {
    int fd = open(port, O_RDWR | O_NOCTTY | O_NDELAY);
    if (fd == -1) {
        perror(""open_port: Unable to open port"");
        return -1;
    }
    
    struct termios options;
    tcgetattr(fd, &options);
    cfsetispeed(&options, B9600);
    cfsetospeed(&options, B9600);
    options.c_cflag &= ~PARENB;
    options.c_cflag &= ~CSTOPB;
    options.c_cflag &= ~CSIZE;
    options.c_cflag |= CS8;
    options.c_cflag |= (CLOCAL | CREAD);
    tcsetattr(fd, TCSANOW, &options);
    
    return fd;
}

int main() {
    int fd = open_port(""/dev/ttyUSB0"");
    if (fd == -1) {
        return -1;
    }
    
    char write_buffer[] = ""Hello Arduino!"";
    int bytes_written = write(fd, write_buffer, strlen(write_buffer));
    if (bytes_written < 0) {
        perror(""write"");
        close(fd);
        return -1;
    }
    
    char read_buffer[256];
    int bytes_read = read(fd, &read_buffer, sizeof(read_buffer));
    if (bytes_read < 0) {
        perror(""read"");
        close(fd);
        return -1;
    }
    
    read_buffer[bytes_read] = '\0';
    printf(""Received: %s\n"", read_buffer);

    close(fd);
    
    return 0;
}"
FBTgee4c,Untitled,Hazkin,C#,Wednesday 8th of May 2024 02:42:52 PM CDT,"	[Serializable]
    public class PostData
    {
        [FoldoutGroup(""$_id"")]
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private int _id;
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private string _dateTime;
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private PostTypeAccount _postTypeAccount;
        [Title(""Text Field"", bold: false)] [HideLabel] [MultiLineProperty(10)]
        [JsonProperty] [BoxGroup(""$_id/Data"")] [SerializeField] private string _text;
        [JsonProperty] [BoxGroup(""$_id/Sprite"")] [SerializeField] private List<string> _linkSprite;
        [JsonIgnore] [BoxGroup(""$_id/Sprite"")] [JsonIgnore] [SerializeField] private List<Sprite> _sprite;
        [JsonProperty] [BoxGroup(""$_id/Reaction"")] [SerializeField] private List<ReactionData> _reactionData = new List<ReactionData>();
 
        [JsonIgnore] public int Id => _id;
        [JsonIgnore] public string Text => _text;
        [JsonIgnore] public string DateTime => _dateTime;
        [JsonIgnore] public PostTypeAccount PostTypeAccount => _postTypeAccount;
        [JsonIgnore] public List<string> LinkSprite => _linkSprite;
        [JsonIgnore] public List<Sprite> Sprite => _sprite;
        [JsonIgnore] public List<ReactionData> ReactionData => _reactionData;
		//other methods 
	}"
WFHQsmLm,Protection Profile Active Record Count,DataCCIW,T-SQL,Wednesday 8th of May 2024 02:33:31 PM CDT,"DECLARE @TotalActiveRecords INT  = (SELECT COUNT(*) FROM Person WHERE RecordStatusValueId = 3)  -- Active Records

SELECT 
    CASE AccountProtectionProfile 
        WHEN 0 THEN 'Low' 
        WHEN 1 THEN 'Medium' 
        WHEN 2 THEN 'High' 
        WHEN 3 THEN 'Extreme' END,
    COUNT(*) AS [Record Count],
    CAST(((COUNT(*) * 100.0) / @TotalActiveRecords) AS DECIMAL(5, 2)) AS [Percent]
FROM Person
WHERE RecordStatusValueId = 3 -- Active
GROUP BY AccountProtectionProfile
"
3piwtQgE,memberUpdate.js,toowake,JavaScript,Wednesday 8th of May 2024 02:26:51 PM CDT,"const { EmbedBuilder, Events } = require('discord.js');
const theme = require('../../../embedConfig.json');
const Audit_Log = require('../../Schemas.js/auditlog');
const { perm } = require('../../../functions');

module.exports = async (client) => {
    client.on(Events.GuildMemberUpdate, async (oldMember, newMember) => {
        if (!perm(oldMember)) return;

        const auditEmbed = new EmbedBuilder()
            .setColor(theme.theme)
            .setTimestamp()
            .setFooter({ text: 'Nexus Audit Log System' });

        const data = await Audit_Log.findOne({ Guild: oldMember.guild.id }).catch(console.error);
        if (!data || !data.Channel) return; // Ensure there is a channel ID

        const auditChannel = client.channels.cache.get(data.Channel);
        if (!auditChannel) return; // Ensure the channel exists

        const changes = [];

        if (oldMember.nickname !== newMember.nickname) {
            changes.push(`Nickname: \`${oldMember.nickname || 'None'}\` ‚Üí \`${newMember.nickname || 'None'}\``);
        }

        if (!oldMember.roles.cache.equals(newMember.roles.cache)) {
            const oldRoles = oldMember.roles.cache.map(role => role.name).join(', ');
            const newRoles = newMember.roles.cache.map(role => role.name).join(', ');
            changes.push(`Roles: \`${oldRoles}\` ‚Üí \`${newRoles}\``);
        }

        if (changes.length === 0) return; // If no changes, exit

        auditEmbed
            .setTitle('Member Updated')
            .addFields({ name: 'Changes:', value: changes.join('\n') });

        await auditChannel.send({ embeds: [auditEmbed] }).catch(err => {
            console.error('Failed to send audit log message:', err);
        });
    });
};"
WcKnwuCm,bla bla bla,Kambarych,C++,Wednesday 8th of May 2024 02:23:22 PM CDT,"#include <bits/stdc++.h>
using namespace std;
#define pb(i)               push_back(i)
#define For(i, n)           for(int i = 0; i < n; ++i)
#define qFor(i, x, n)       for(int i = x; i < n; ++i)
#define rFor(i, n)          for(int i = n - 1; i >= 0; --i)
#define see                 cout << endl
#define all(x)              (x).begin(),(x).end()
#define rall(x)             (x).rbegin(),(x).rend()
#define pii                 pair<int, int>
#define vt                  vector
#define ll                  long long
#define ld                  long double
 
const int MAX = 1e9;
const int MOD = 1e9 + 7;
const ll  INF = 1e18;
const ld  PI  = 3.14159265358979323846;
 
template<typename T>
void read(vt<T> & a) {
    For(i, a.size()) cin >> a[i];
}
template<typename T>
void print(vt<T> & a) {
    For(i, a.size()) cout << a[i] << "" "" ;
    cout << endl;
}
template<typename T>
void print2(vt<vt<T> > & a) {
    For(i, a.size()) {
        For(j, a[i].size()) {
            cout << a[i][j] << "" "";
        }
        cout << endl;
    }
}
template<typename T>
void read2(vt<vt<T> > & a) {
    For(i, a.size()) {
        For(j, a[i].size()) {
            cin >> a[i][j];
        }
    }
}

struct cube {
  int left, right, top, down, forward, back;
};

vt<int> covert(cube shablon) {
  return {shablon.left, shablon.right, shablon.top, shablon.down, shablon.forward, shablon.back};
}

cube rotate(cube shablon) {
  cube rubik = shablon;
  int tmp = rubik.forward;
  rubik.forward = rubik.top;
  rubik.top = rubik.back;
  rubik.back = rubik.down;
  rubik.down = tmp;
  return rubik;
}
cube rotate_clockwise(cube shablon) {
  cube rubik = shablon;
  int tmp = rubik.left;
  rubik.left = rubik.top;
  rubik.top = rubik.right;
  rubik.right = rubik.down;
  rubik.down = tmp;
  return rubik;
}
cube rotate_anti_clockwise(cube shablon) {
  cube rubik = shablon;
  int tmp = rubik.top;
  rubik.top = rubik.left;
  rubik.left = rubik.down;
  rubik.down = rubik.right;
  rubik.right = tmp;
  return rubik;
}

map<vt<int> , int> mp;
vt<int> groups[10000];

int find(vt<int> & a) {
    return mp[a];
}



void write()
{
    int n; cin >> n;
    int cur_group = 1;
    For(i, n) {
        vt<int> a(6); read(a);
        vt<vt<int> > b;
    cube rubik;
    rubik.left = a[0], rubik.right = a[1], rubik.top = a[2], rubik.forward = a[3], rubik.down = a[4], rubik.back = a[5];
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_anti_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_anti_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
    rubik = rotate_anti_clockwise(rubik);
    b.push_back(covert(rubik));
    For(i, 3) {
      rubik = rotate(rubik);
      b.push_back(covert(rubik));
    }
        bool ok = false;
        For(j, b.size()) {
            int res = find(b[j]);
            if (res != 0) {
                groups[res].push_back(i + 1);
                ok = true;
                break;
            }
        }
        if (ok) continue;
        mp[b[0]] = cur_group;
        groups[cur_group].push_back(i + 1);
        cur_group++;
    }   
    qFor(i, 1, cur_group + 1) {
        sort(all(groups[i]));
    }
    sort(groups, groups + cur_group);
    cout << cur_group - 1 << endl;
    qFor(i, 1, cur_group + 1) {
        For(j, groups[i].size()) {
            cout << groups[i][j] << "" "";
        }
    if (groups[i].empty()) break;
    see;
    }
}
 
int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#ifdef DEBUG
    freopen(""output.txt"", ""w"", stdout);
    freopen(""input.txt"", ""r"", stdin);
#endif
    int t;
    t = 1;
    //cin >> t;
    For(T, t) write();
    return 0;
}"
N8HkSbLz,17 (–ø–∞—Ä–∞ -- –¥–≤–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö),nq1s788,Python,Wednesday 8th of May 2024 02:22:31 PM CDT,"#https://inf-ege.sdamgia.ru/problem?id=37336
data = open('17.txt').readlines()
cnt = 0
mx = -10000000
for i in range(len(data) - 1):
    a = int(data[i])
    b = int(data[i + 1])
    if (a % 3 == 0) or (b % 3 == 0):
        cnt += 1
        mx = max(mx, a + b)
print(cnt, mx)"
BNneui6Z,Untitled,0demongamer0,JavaScript,Wednesday 8th of May 2024 02:19:38 PM CDT,"function pUrl(e) {
    try {
        /*var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
            ,
            r = [""source"", ""protocol"", ""authority"", ""userInfo"", ""user"", ""password"", ""host"", ""port"", ""relative"", ""path"", ""directory"", ""file"", ""query"", ""anchor""];
        var i = e.indexOf(""["")
            , o = e.indexOf(""]"");
        -1 != i && -1 != o && (e = e.substring(0, i) + e.substring(i, o).replace(/:/g, "";"") + e.substring(o, e.length));
        for (var a = n.exec(e || """"), s = {}, c = 14; c--;)
            s[r[c]] = a[c] || """";*/

        const n1 = /^.+\/(?:TIP_ALERT)\/([0-9a-z\-]+)\//gm;
        let m;
        while ((m = n1.exec(e)) !== null) {
            if (m.index === n1.lastIndex) {
                n1.lastIndex++;
            }
            return m[1];
        }
        throw new Error(""no match"");
    } catch (error) {
        console.error(error);
    }
}"
Eg7WErRy,Untitled,BojanNovakovic,Kotlin,Wednesday 8th of May 2024 02:18:07 PM CDT,"@OptIn(ExperimentalFoundationApi::class)
@Composable
fun MovesetOutlineTextField(
    value: String,
    onValueChange: (String) -> Unit,
    onClear: () -> Unit,
    modifier: Modifier = Modifier,
    enabled: Boolean = true,
    label: String? = null,
    placeholder: String? = null,
    errorText: String? = null
) {
    Column {
        OutlinedTextField(
            value = value,
            onValueChange = onValueChange,
            singleLine = true,
            label = { label?.let { Text(it) } },
            enabled = enabled,
            readOnly = !enabled,
            placeholder = { placeholder?.let { Text(it) } },
            modifier = modifier,
            textStyle = TextStyle(color = colorResource(MR.colors.font_on_surface_color)),
            trailingIcon = {
                if (enabled) {
                    val trailingIconEnabled = value.isNotEmpty() && enabled
                    InputCloseIcon(onClick = onClear, trailingIconEnabled)
                }
            },
            isError = !errorText.isNullOrEmpty()
        )
         val errorString = errorText ?: """"

        Text(
            text = errorString,
            style = TextStyle(color = colorResource(MR.colors.alert_text_on_surface_color)),
            fontSize = 14.sp,
            maxLines = 1,
            modifier = Modifier.basicMarquee(delayMillis = 0, initialDelayMillis = 1200)
        )

    }
}

@Composable
private fun InputCloseIcon(onClick: () -> Unit, enabled: Boolean) {
    val resource = if (enabled) MR.colors.secondary_button_content_color else MR.colors.disabled_element_tint
    IconButton(onClick = onClick, enabled = enabled) {
        Image(
            painter = painterResource(MR.images.close_image),
            contentDescription = stringResource(MR.strings.close),
            colorFilter = ColorFilter.tint(colorResource(resource))
        )
    }
}"
DkykGuK8,rychle a bezchybne very good minimax s T,max2201111,Python,Wednesday 8th of May 2024 02:17:00 PM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met


def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key][0], memo[key][1], T

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        T = T or eval != 4
        return [], eval, T

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []
    all_true = True

    for move in board.legal_moves:
        board.push(move)
        sequence, eval, returned_T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
        board.pop()

        if maximizing_player:
            if returned_T:  # Okam≈æit√Ω n√°vrat pokud najdeme v√≠tƒõznou vƒõtev
                return [(move, board.san(move))] + sequence, eval, True
            if eval > best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            alpha = max(alpha, eval)
        else:
            all_true = all_true and returned_T
            if eval < best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            beta = min(beta, eval)

        if beta <= alpha:
            break

    if not maximizing_player and all_true:
        return best_sequence, best_eval, True  # Pro minimalizuj√≠c√≠ho hr√°ƒçe, pokud jsou v≈°echny tahy nevyhnutelnƒõ prohran√©

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval, T


start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

#start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""

start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""


board = chess.Board(start_fen)

print(""Poƒç√°teƒçn√≠ ≈°achovnice:"")
print(board)
print(""Poƒç√°teƒçn√≠ FEN:"", board.fen(), ""\n"")

sequence, final_score, T = minimax(board, 26, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time,T=False)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score, T)
"
sA2N0MkS,–ó–∞–¥–∞—á–∞ 7,dmemsm,Python,Wednesday 8th of May 2024 02:12:55 PM CDT,"n = int(input())
m = int(input())

result = []

for i in range(1, m+1):
	for j in range(1, m+1):
		for k in range(1, m+1):
			if (i+j+k) == n:
				r = sorted([i, j, k])
				if not (r in result):
					result.append(r)
				
				
for r in result:
	print(f""{r[0]} {r[1]} {r[2]}"")"
k4NXQ7QK,NO FUNCIONA BIEN,FRIKIdelTO,Python,Wednesday 8th of May 2024 02:12:17 PM CDT,"# m√≥dulos de Python
import os
# m√≥dulos de terceros
import requests
from bs4 import BeautifulSoup

def datos_contratos():
    base_url = 'https://contrataciondelestado.es'
    sesion = requests.Session()
    sesion.headers = {
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'Accept-Encoding': 'gzip, deflate, br, zstd',
        'Accept-Language': 'es-ES,es;q=0.9,en-US;q=0.8,en;q=0.7',
        'Cache-Control': 'no-cache',
        'Connection': 'keep-alive',
        'Host': 'contrataciondelestado.es',
        'Pragma': 'no-cache',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'none',
        'Sec-Fetch-User': '?1',
        'Upgrade-Insecure-Requests': '1',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36',
        'sec-ch-ua': '""Chromium"";v=""124"", ""Google Chrome"";v=""124"", ""Not-A.Brand"";v=""99""',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '""Windows""'
    }
    url = base_url + '/wps/portal/!ut/p/b0/04_Sj9CPykssy0xPLMnMz0vMAfGjzOJNXP2dnd08jAwsgo1dDIx8XEJDzTyAXHcj_YJsR0UAIk-WfA!!'
    # primera petici√≥n (GET)
    print(""Petici√≥n inicial (GET)"")
    req = sesion.get(url, timeout=20)
    print(""Content-Location:"", req.headers.get(""content-location""), end=""\n\n"")
    guardar_y_cargar_html(req.text, ""indice_0.html"")
    indice = 1
    # vamos a por las siguientes p√°ginas (POST)
    for n in range(3):
        soup = BeautifulSoup(req.text, ""html.parser"")
        next_url = base_url + soup.find(id=""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes"").attrs.get(""action"")
        data = {
            ""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes"": ""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes"",
            ""viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes:viewns_Z7_BS88AB1A0GSM10A6E365201G25_:liciRecientes:siguienteLink"": ""Siguiente+>>"",
            ""javax.faces.ViewState"": f""j_id{indice}:j_id{indice+1}""
        }
        print(f'Petici√≥n POST #{n+1}: {next_url}')
        req = sesion.post(next_url, data=data, timeout=20)
        print(""Content-Location:"", req.headers.get(""content-location""), end=""\n\n"")
        guardar_y_cargar_html(req.text, f'indice_{indice}.html')
        indice+= 2

def guardar_y_cargar_html(html, nombre_archivo):
    with open(nombre_archivo, ""w"", encoding=""utf-8"") as f:
        f.write(html)
    os.system(nombre_archivo)

# MAIN #######################################################
if __name__ == '__main__':
    datos_contratos()
"
YNBjhUSM,Yapidor,Maks14a,Lua,Wednesday 8th of May 2024 02:03:29 PM CDT,"local Library = loadstring(game:HttpGet(""https://pastebin.com/raw/GGjwwXSC""))()
local Window = Library.CreateLib(""HitBox By xxownerxx cyka xxownerxx cykaxxownerxx cykaxxownerxx cyka"", ""RJTheme1"")
local Tab = Window:NewTab(""tiGay"")

local Section = Tab:NewSection(""TyT!"")
Section:NewLabel(""ZalupaHitbox"")







Section:NewSlider(""ya pidor"", ""SliderInfo"", 50, 0, function(s) -- 500 (–ú–∞–∫—Å. –∑–Ω–∞—á–µ–Ω–∏–µ) | 0 (–ú–∏–Ω. –∑–Ω–∞—á–µ–Ω–∏–µ)
    

_G.HeadSize = s
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new(""Really blue"")
v.Character.HumanoidRootPart.Material = ""Neon""
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)

    
end)

Section:NewKeybind(""Close"", """", Enum.KeyCode.L, function()
	game.CoreGui[111].Main.Visible = false
end)

Section:NewKeybind(""Open"", """", Enum.KeyCode.P, function()
	game.CoreGui[111].Main.Visible = true
end)
"
xNTSRRxK,Untitled,sissou123,HTML,Wednesday 8th of May 2024 02:01:22 PM CDT,"The Complete Guide to HTML
Go From Beginner To HTML Master In A Single Day!
 What you'll learn
Create well-structured web pages with HTML
Create complex HTML forms
Understand web accessibility and create accessible webpages 
for more :https://cuty.io/sRBX

"
PUpDkQnF,CRUD Operations,Searge,JavaScript,Wednesday 8th of May 2024 02:01:20 PM CDT,"TypeError: can't access property ""errorCode"" of undefined
    NextJS 3
        _
        d
        u
_app-4ac532da56fb8941.js:19:7082
    NextJS 18
        eG
        m
        g
        a
        cont
        g
        a
        cont
        g
        a
        cont
        d
        u
        g
        a
        cont
        d
        u
The above error occurred in task _
    created by anonymous
    created by takeEvery(MUTATION_BULK_DELETE, )
    created by ni
Tasks cancelled due to error:
takeEvery(MUTATION_BULK_DELETE, )
takeEvery(HOME_TOPIC_SELECTORS_REQUEST, )
takeEvery(HOME_SETUP_SELECT_TOPIC, )
takeEvery(HOME_SETUP_DESELECT_TOPIC, )
takeEvery(HOME_SETUP_FINALIZE_TOPICS, )
takeEvery(HOME_SET_STORED_USER_TOPICS, )
takeEvery(HOME_SETUP_SET_STATUS,HOME_SETUP_RESET,HOME_COOKIE_RESET,HOME_SET_STORED_USER_TOPICS,SET_TOPIC_SUCCESS, )
takeEvery(HOME_COOKIE_RESET, )
takeEvery(SHARED_ITEM_REQUEST, )
takeLatest(APP_SET_PREFERENCES, )
takeLatest(APP_SET_MODE, )
takeLatest(APP_SORT_ORDER_OLD, I)
takeLatest(APP_SORT_ORDER_NEW, I)
takeLatest(APP_SORT_ORDER_RELEVANCE, I)
takeLatest(APP_LIST_MODE_LIST, E)
takeLatest(APP_LIST_MODE_GRID, E)
takeLatest(APP_LIST_MODE_DETAIL, E)
takeLatest(APP_COLOR_MODE_SET, )
takeLatest(USER_REQUEST, )
takeLatest(ACCOUNT_FIRST_NAME_UPDATE, x)
takeLatest(ACCOUNT_LAST_NAME_UPDATE, x)
takeLatest(ACCOUNT_BIO_UPDATE, x)
takeLatest(ACCOUNT_AVATAR_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_USERNAME_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_PASSWORD_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_EMAIL_UPDATE_CONFIRM, )
takeLatest(ACCOUNT_EMAIL_ALIAS_ADD_REQUEST, )
takeLatest(ACCOUNT_EMAIL_ALIAS_REMOVE_REQUEST, )
takeLatest(ACCOUNT_EMAIL_RESEND_CONFIRMATION, )
takeLatest(ACCOUNT_GET_CONNECTIONS_REQUEST, )
takeLatest(ACCOUNT_CONNECTION_REVOKE_REQUEST, )
takeLatest(ACCOUNT_DELETE_CONFIRM, )
takeLatest(ACCOUNT_CLEAR_CONFIRM, )
takeLatest(ACCOUNT_FEED_PROTECTION_REQUEST, )
takeLatest(SETTINGS_FETCH_REQUEST, )
takeLatest(SETTINGS_FETCH_SUCCESS, )
takeLatest(SETTINGS_UPDATE, eP)
takeLatest(USER_TAGS_EDIT_SUCCESS, eP)
takeLatest(USER_TAGS_DELETE_SUCCESS, eP)
takeLatest(USER_TAGS_PINS_SET, eP)
takeLatest(PINNED_TOPICS_SET, eP)
takeLatest(TOGGLE_BRAZE, eP)
takeEvery(USER_TAGS_REQUEST, e)
takeEvery(USER_TAGS_PIN, )
takeEvery(USER_TAGS_EDIT_CONFIRM, )
takeEvery(USER_TAGS_DELETE_CONFIRM, )
takeEvery(FEATURES_ASSIGN, )
takeLatest(VARIANTS_SAVE, )
takeLatest(FEATURES_HYDRATE, )
takeLatest(SNOWPLOW_TRACK_PAGE_VIEW, )
takeEvery(SNOWPLOW_SEND_EVENT, A)
takeLatest(POCKET_HITS_SIGNUP_REQUESTED, )
takeEvery(ARTICLE_SAVE_REQUEST, )
takeEvery(ARTICLE_UNSAVE_REQUEST, )
takeEvery(UPDATE_LINE_HEIGHT,UPDATE_COLUMN_WIDTH,UPDATE_FONT_SIZE,UPDATE_FONT_TYPE, )
takeEvery(READ_ITEM_SUCCESS, )
takeEvery(READ_ITEM_REQUEST, )
takeEvery(HOME_CONTENT_REQUEST, I)
takeEvery(SET_TOPIC_SUCCESS, I)
takeEvery(HOME_REC_REQUEST_DEMOTE, )
takeLatest(USER_SEARCH_RECENT_GET, )
takeLatest(USER_SEARCH_RECENT_SAVE, )
takeLatest(SHORTCUT_GO_TO_LIST, )
takeLatest(SHORTCUT_GO_TO_ARCHIVE, )
takeLatest(SHORTCUT_GO_TO_FAVORITES, )
takeLatest(SHORTCUT_GO_TO_ARTICLES, )
takeLatest(SHORTCUT_GO_TO_HIGHLIGHTS, )
takeLatest(SHORTCUT_GO_TO_VIDEOS, )
takeLatest(SHORTCUT_GO_TO_TAGS, )
takeEvery(SHORTCUT_SELECT_NEXT_ITEM, )
takeEvery(SHORTCUT_SELECT_PREVIOUS_ITEM, )
takeEvery(SHORTCUT_ENGAGE_SELECTED_ITEM, )
takeLatest(APP_SET_MODE, )
takeLatest(SHORTCUT_VIEW_ORIGINAL, )
takeLatest(SHORTCUT_DELETE_ITEM, )
takeLatest(SHORTCUT_ARCHIVE_ITEM, )
takeLatest(SHORTCUT_FAVORITE_ITEM, )
takeLatest(SHORTCUT_EDIT_TAGS, )
takeEvery(SHORTCUT_INCREASE_FONT_SIZE, )
takeEvery(SHORTCUT_DECREASE_FONT_SIZE, )
takeEvery(SHORTCUT_INCREASE_COLUMN_WIDTH, )
takeEvery(SHORTCUT_DECREASE_COLUMN_WIDTH, )
takeLatest(BRAZE_TOKEN_REQUEST, )
takeEvery(MUTATION_SUCCESS, )
takeEvery(MUTATION_DELETE_SUCCESS, )
takeEvery(ITEMS_UPSERT_SUCCESS,ITEMS_SAVED_UPDATE_SUCCESS, )
takeEvery(LOAD_MORE_ITEMS, )
takeEvery(LOAD_PREVIOUS_ITEMS, )
takeEvery(ITEMS_SAVED_PAGE_SET_SORT_ORDER_REQUEST, )
takeEvery(SEARCH_SAVED_ITEMS,SEARCH_SAVED_ITEMS_UNREAD,SEARCH_SAVED_ITEMS_ARCHIVED,SEARCH_SAVED_ITEMS_FAVORITES,GET_ITEMS_UNREAD,GET_ITEMS_ARCHIVED,GET_ITEMS_FAVORITES,GET_ITEMS_FAVORITES_UNREAD,GET_ITEMS_FAVORITES_ARCHIVED,GET_ITEMS_ANNOTATED,GET_ITEMS_ANNOTATED_UNREAD,GET_ITEMS_ANNOTATED_ARCHIVED,GET_ITEMS_ANNOTATED_FAVORITES,GET_ITEMS_ARTICLES,GET_ITEMS_ARTICLES_UNREAD,GET_ITEMS_ARTICLES_ARCHIVED,GET_ITEMS_ARTICLES_FAVORITES,GET_ITEMS_VIDEOS,GET_ITEMS_VIDEOS_UNREAD,GET_ITEMS_VIDEOS_ARCHIVED,GET_ITEMS_VIDEOS_FAVORITES,GET_ITEMS_TAGS,GET_ITEMS_TAGS_UNREAD,GET_ITEMS_TAGS_ARCHIVED,GET_ITEMS_TAGS_FAVORITES, )
takeEvery(ITEMS_SAVED_REQUEST, )
takeEvery(ITEMS_SAVED_TAGGED_REQUEST, )
takeEvery(ITEMS_SAVED_SEARCH_REQUEST, )
takeEvery(ITEMS_SAVED_UPDATE_REQUEST, )
takeEvery(LIST_CHECK_PILOT_STATUS_REQUEST, )
takeEvery(LIST_PAGE_SET_SORT_ORDER_REQUEST, )
takeEvery(LIST_ALL_REQUEST, )
takeEvery(LIST_INDIVIDUAL_REQUEST, )
takeEvery(LIST_INDIVIDUAL_MORE_REQUEST, )
takeEvery(LIST_RECENT_REQUEST,LIST_CREATE_SUCCESS,LIST_DELETE_SUCCESS,LIST_UPDATE_SUCCESS,LIST_UPDATE_STATUS_SUCCESS,LIST_ADD_ITEM_SUCCESS,LIST_DELETE_ITEM_SUCCESS,LIST_ITEM_ADD_NOTE_SUCCESS,LIST_ITEM_EDIT_NOTE_SUCCESS,LIST_ITEM_NOTE_DELETE_SUCCESS,LIST_ITEMS_REORDER_SUCCESS, )
takeEvery(MUTATION_ARCHIVE, )
takeEvery(MUTATION_UNARCHIVE, )
takeEvery(MUTATION_BULK_ARCHIVE, )
takeEvery(MUTATION_BULK_UNARCHIVE, )
takeEvery(MUTATION_DELETE, )
takeEvery(MUTATION_UNDELETE, )
takeEvery(MUTATION_REFRESH, )
takeEvery(MUTATION_FAVORITE, )
takeEvery(MUTATION_UNFAVORITE, )
takeEvery(MUTATION_BULK_FAVORITE, )
takeEvery(MUTATION_BULK_UNFAVORITE, )
takeEvery(MUTATION_UPSERT, )
takeEvery(MUTATION_BULK_SELECT, b)
takeEvery(MUTATION_BULK_DESELECT, b)
takeEvery(MUTATION_TAG_CONFIRM, )
takeLatest(MUTATION_TAG_SUGGESTION_REQUEST, )
takeEvery(HIGHLIGHT_SAVE_REQUEST, )
takeEvery(HIGHLIGHT_DELETE_REQUEST, )
takeLatest(ITEMS_REPORT_REQUEST, )
takeLatest(SHARE_REQUEST, )
takeLatest(SHARE_ADD_CONTEXT, )
takeLatest(LIST_CREATE_REQUEST, )
takeLatest(LIST_BULK_CREATE_REQUEST, )
takeEvery(LIST_DELETE_REQUEST, )
takeEvery(LIST_DELETE_ITEM_REQUEST, )
takeEvery(LIST_ITEM_NOTE_DELETE_REQUEST, )
takeLatest(LIST_UPDATE_REQUEST, )
takeLatest(LIST_UPDATE_STATUS_REQUEST, )
takeLatest(LIST_ITEM_ADD_NOTE_REQUEST, U)
takeLatest(LIST_ITEM_EDIT_NOTE_REQUEST, U)
takeLatest(LIST_ITEMS_REORDER_REQUEST, )
takeLatest(LIST_ADD_ITEM_REQUEST, )
takeLatest(LIST_BULK_ADD_ITEM_REQUEST, )
takeEvery(LISTEN_REQUEST, )"
iY4vUyyV,–ó–∞–¥–∞—á–∞ 2,dmemsm,Python,Wednesday 8th of May 2024 01:43:53 PM CDT,"n = int(input())
print(f""–ß–∏—Å–ª–æ {n} –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è: {bin(n)[2:]}"")

print(f""–ß–∏—Å–ª–æ {n} –≤ –≤–æ—Å—å–º–µ—Ä–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è: {oct(n)[2:]}"")

print(f""–ß–∏—Å–ª–æ {n} –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è: {hex(n)[2:]}"")"
mX3Rt4TU,–ó–∞–¥–∞—á–∞ 1,dmemsm,Python,Wednesday 8th of May 2024 01:30:53 PM CDT,"m = int(input())
k = int(input())

print(m*100+k)"
uFdbHD0r,mIRC Update,Tiago_f,mIRC,Wednesday 8th of May 2024 01:26:59 PM CDT,"menu status,menubar {
  Update-c&heck... :checkver
}
alias sdt {
  if ($did($did).state) { set % $+ $1 1 }
  else { unset % $+ $1 }
}
alias checkver { noop $dialog(checkver,checkver,-4) }
alias StartVersion {
  did -r $dname 13
  did -a $dname 11 Checking for updates...
  did -h $dname 4,8
  did -b $dname 6
  if (%check.beta) { var %URI = https://forums.mirc.com/ubbthreads.php/topics/225704 }
  else { var %URI = https://www.mirc.com/get.html }
  noop $urlget(%URI,gbi,&CheckVer,processWmIRC)
}
alias fixhtml {
  var %r = /(&#(\d{2,3});)/g,%x = $replacecs($1-,$chr(9),$chr(32),&apos;,',&ndash;,-,&#8211;,-,&#8216;,‚Äò,&#8217;,‚Äô,&uuml;,√º,&Uuml;,√ú,&auml;,√§,&Auml;,√Ñ,&ouml;,√∂,&Ouml;,√ñ,&szlig;,√ü,&quot;,"",&lt;,<,&gt;,>,&euro;,$chr(128),&amp;,&,&#8243;,‚Ä≥,&#8220;,‚Äú,&#8221;,‚Äù,&#8230;,‚Ä¶,&nbsp;,$chr(32))
  if ($isutf(%x)) { %x = $utfdecode(%x) }
  while ($regex(ftsub,%x,%r)) { %x = $replace(%x,$regml(ftsub,1),$chr($regml(ftsub,2))) }
  while ($regex(ftsub,%x,/(&#x([0-9a-z]{2});)/gi)) { %x = $replace(%x,$regml(ftsub,1),$chr($base($regml(ftsub,2),16,10))) }
  return %x
}
alias getinfosstable {
  if ($bfind(&stable,1,/<h2 class=""topic"">mIRC $1 has been released.*?<br>\s+(.*?)<ul>\s+(.*?)<\/ul>(.*?)(?=<p>\s*<h2)/s,stable).regex) {
    did -a checkver 13 $fixhtml($remove($regml(stable,1),<p>) $+ $crlf $+ $replace($regml(stable,2),<li>,$crlf))
  }
  did -e checkver 6
  did -v checkver 4,8
  did -a checkver 11 $1
}
alias ProcessWmIRC {
  if ($dialog(checkver)) {
    var %beta m@(*LIMIT_MATCH=200000)<(?:img|div) .*? title=""([^""]++)""><a href=""(/ubbthreads\.php/topics/(\d++)/[^""]++)"".*(?:.*\n)*?<span class=""date"">([^<]++)</span>(?: <span class=""time"">([^<]++)</span>)?.*(?:.*\n)*?<div class=""bold author-name fwrap dblock"">\s++<a href=""/ubbthreads\.php/users/\d++/[^""]++""><[^<]+>([^<]++).*(?:.*\n)*?<div id=""body\d++"">([\s\S]+?)()</div>\s<br>@gF
    var %norm = /The latest version of mIRC is <strong>mIRC ([^<]+)</strong>/i
    var %id = $1 , %BV = $urlget(%id).target, %m
    if ($urlget(%id).state = ok) {
      if ($bfind(%BV,1,%norm,Norm).regex) {
        var %m = $mid($regml(Norm,1),2)
        if (%m != $version) {
          set %url.get $nofile($urlget(%id).url) $+ get.php
          set %url.news $nofile($urlget(%id).url) $+ news.html
          noop $urlget(%url.news,gb,&stable,getinfosstable %m)
        }
        else {
          did -a checkver 11 mIRC is up to date.
          did -e checkver 6
        }
      }
      elseif ($bfind(%BV,1,%beta,Beta).regex) {
        bcopy -c &new 1 %BV $regmlex(beta,2,7).bytepos $calc($regmlex(beta,2,8).bytepos - $regmlex(beta,2,7).bytepos)
        if (!$bfind(&new,0,/(?|.*?>Beta v(\S+) changes:(<br>.*?)(?=<br><br>Beta v|<br>Changes:)|.*?<br><br>(.*?)(?=<br><br>Beta))(?:.*<br>Changes:(.*))/F,m).regex) return
        var %version $regml(m,1)
        var %change1 $regml(m,2)
        var %change2 $regml(m,3)
        if (%change2 == $null) {
          %change2 = %change1
          %change1 = %version
          return
        }
        did -a checkver 13 $+ $str($crlf,1)
        noop $regex(%change1,/.*?<br>(.*)/)
        noop $regex(p,$regml(1),/(.*?)(?:<br>(?=\d)|$)/g)
        var %a 1,%item
        if ($wd(%version,-1,46) != $beta) {
          while ($regml(p,%a)) {
            var %v $v1
            if ($regex(%v,/^\d+.Items (\d+) and (\d+)/i)) var %item %item $regml(1) $regml(2)
            elseif ($regex(%v,/^\d+.Item (\d+)/i)) var %item %item $regml(1)
            var %text $fixhtml($replace($regsubex(%v,/<a href=""([^""]+)"" .*?<\/a>/g,\1),<br>,$chr(32)))
            did -a checkver 13 %text $+ $crlf
            inc %a
          }
          if (%item) {
            var %b 1
            did -a checkver 13 $crlf $+ Beta changelog: $+ $Str($crlf,2)
            while ($wd(%item,%b,32)) {
              var %v $v1
              noop $regex(p,%change2,/(?:^|<br>)( $+ %v $+ \..*?(?=<br>\d+\.|$))/)
              did -a checkver 13 $fixhtml($replace($regsubex($regml(p,1),/<a href=""([^""]+)"" .*?<\/a>/g,\1),<br>,$chr(32),</div>,)) $+ $crlf
              inc %b
            }
            did -i checkver 13 1 $did(checkver,13,1)
            did -d checkver 13 1
            did -e checkver 6
            did -v checkver 4,8
            did -a checkver 11 %version
            set %url.get $+(https://www.mirc.com/downloads/beta/,mircb,$remove(%version,.),.zip)
            set %url.news $urlget(%id).url
          }
        }
        elseif (%check.beta) { var %URI = https://www.mirc.com/get.html | noop $urlget(%URI,gbi,&CheckVer,processWmIRC) }
      }
    }
    else {
      did -a checkver 11 There was a problem contacting the mIRC website.
      did -e checkver 6
    }
  }
}
dialog checkver {
  title ""mIRC Update""
  size -1 -1 515 397
  text ""Installed version:"", 9, 12 13 90 14
  text ""Newest version:"", 10, 12 35 90 14
  text """", 11, 120 35 300 14
  text ""Changes from new version:"", 12, 12 57 150 14
  edit """",13, 10 75 494 250, size multi return vsbar read
  link ""What's new in this version?"", 4, 372 55 185 14, hide
  text """", 1, 120 13 80 14
  check ""&Check for new beta versions"", 5, 12 372 157 14
  button ""Check for &updates"", 6, 10 332 107 23
  button ""&OK"", 7, 429 366 76 23, cancel
  button ""&Download now"", 8, 398 332 107 23, hide ok
}
on *:dialog:checkver:*:*:{
  if ($devent == init) {
    did -fa $dname 1 $iif($beta,$+($version,.,$beta),$version)
    if (%check.beta) { did -c $dname 5 }
  }
  elseif ($devent == sclick) {
    if ($did == 4) { url -an %url.news }
    elseif ($did == 5) { sdt check.beta }
    elseif ($did == 6) { StartVersion }
    elseif ($did == 8) { url -an %url.get }
  }
  elseif ($devent == close) { unset %url.get %url.news }
}"
XNMrQqv9,pocket archive subset (20 links),bjpcjp,HTML,Wednesday 8th of May 2024 01:20:16 PM CDT,"<li><a href=""https://theins.ru/en/politics/271205"" time_added=""1714602307"" tags=""spycraft"">The Czech illegals: Husband and wife outed as GRU spies aiding bombings and</a></li>
<li><a href=""http://12factor.net/"" time_added=""1612801576"" tags=""best-practices,devops"">The Twelve-Factor App</a></li>
<li><a href=""http://15minutelunch.blogspot.com/2007/10/strap-in-shut-up-and-hold-on-were-going.html"" time_added=""1671648793"" tags=""comedy-fun-humor"">15 Minute Lunch: Strap in, shut up and hold on. We&#039;re going back.</a></li>
<li><a href=""http://507movements.com/"" time_added=""1582142608"" tags=""visualization"">http://507movements.com/</a></li>
<li><a href=""http://99u.com/articles/7230/hacking-habits-how-to-make-new-behaviors-last-for-good"" time_added=""1658157490"" tags=""behaviors,habits"">http://99u.com/articles/7230/hacking-habits-how-to-make-new-behaviors-last-for-good</a></li>
<li><a href=""http://99u.com/articles/7269/Picasso-Kepler-and-the-Benefits-of-Being-an-Expert-Generalist"" time_added=""1657829297"" tags=""creativity,polymaths"">http://99u.com/articles/7269/Picasso-Kepler-and-the-Benefits-of-Being-an-Expert-Generalist</a></li>
<li><a href=""http://a16z.com/2012/01/18/a-recipe-for-growth-adding-layers-to-the-cake-2/"" time_added=""1658157138"" tags=""growth-hacks,prodmgmt"">http://a16z.com/2012/01/18/a-recipe-for-growth-adding-layers-to-the-cake-2/</a></li>
<li><a href=""http://a16z.com/2015/08/21/16-metrics/"" time_added=""1657057247"" tags=""metrics,startups"">http://a16z.com/2015/08/21/16-metrics/</a></li>
<li><a href=""http://a16z.com/2015/09/23/16-more-metrics/"" time_added=""1658156567"" tags=""metrics,startups"">http://a16z.com/2015/09/23/16-more-metrics/</a></li>
<li><a href=""http://a16z.com/2016/03/07/network-effects_critical-mass"" time_added=""1658157268"" tags=""network-effects,prodmgmt"">http://a16z.com/2016/03/07/network-effects_critical-mass</a></li>
<li><a href=""http://a16z.com/2016/03/25/building-weatherproof-companies/"" time_added=""1657070435"" tags=""platforms,prodmgmt"">http://a16z.com/2016/03/25/building-weatherproof-companies/</a></li>
<li><a href=""http://a16z.com/2018/02/10/crypto-readings-resources/"" time_added=""1519228730"" tags=""crypto"">http://a16z.com/2018/02/10/crypto-readings-resources/</a></li>
<li><a href=""http://a16z.com/2018/08/17/service-as-a-sku/"" time_added=""1534869161"" tags=""ecommerce,ideas,prodmgmt"">http://a16z.com/2018/08/17/service-as-a-sku/</a></li>
<li><a href=""http://a16z.com/2018/09/02/sales-startups-technical-founders/"" time_added=""1567133627"" tags=""sales-salesmgmt,startups"">http://a16z.com/2018/09/02/sales-startups-technical-founders/</a></li>
<li><a href=""http://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html"" time_added=""1639186336"" tags=""linux"">http://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html</a></li>
<li><a href=""http://abovethecrowd.com/2011/05/24/all-revenue-is-not-created-equal-the-keys-to-the-10x-revenue-club/"" time_added=""1657057331"" tags=""finance,prodmgmt"">http://abovethecrowd.com/2011/05/24/all-revenue-is-not-created-equal-the-keys-to-the-10x-revenue-club/</a></li>
<li><a href=""http://abovethecrowd.com/2012/11/13/all-markets-are-not-created-equal-10-factors-to-consider-when-evaluating-digital-marketplaces/"" time_added=""1658070323"" tags=""ecommerce,platforms,prodmgmt"">http://abovethecrowd.com/2012/11/13/all-markets-are-not-created-equal-10-factors-to-consider-when-evaluating-digital-marketplaces/</a></li>
<li><a href=""http://abovethecrowd.com/2013/04/18/a-rake-too-far-optimal-platformpricing-strategy/"" time_added=""1657057701"" tags=""pricing,prodmgmt"">http://abovethecrowd.com/2013/04/18/a-rake-too-far-optimal-platformpricing-strategy/</a></li>
<li><a href=""http://abovethecrowd.com/2014/03/11/a-deeper-look-at-ubers-dynamic-pricing-model/"" time_added=""1657057377"" tags=""pricing,prodmgmt"">http://abovethecrowd.com/2014/03/11/a-deeper-look-at-ubers-dynamic-pricing-model/</a></li>
<li><a href=""http://adv-r.had.co.nz/"" time_added=""1647895155"" tags=""books,machine-learning,_r_"">http://adv-r.had.co.nz/</a></li>
"
JkFCG9rF,petr correct 3 plies,max2201111,Python,Wednesday 8th of May 2024 01:19:10 PM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met


def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key][0], memo[key][1], T

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        T = T or eval != 4
        return [], eval, T

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []
    all_true = True

    for move in board.legal_moves:
        board.push(move)
        sequence, eval, returned_T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
        board.pop()

        if maximizing_player:
            if eval > best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        else:
            all_true = all_true and returned_T
            if eval < best_eval:
                best_eval = eval
                best_sequence = [(move, board.san(move))] + sequence
            beta = min(beta, eval)
            if beta <= alpha:
                break

    if not maximizing_player and all_true:
        return best_sequence, best_eval, True
    
    if maximizing_player and returned_T:
        return best_sequence, best_eval, True

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval, T






start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

#start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""


board = chess.Board(start_fen)

print(""Poƒç√°teƒçn√≠ ≈°achovnice:"")
print(board)
print(""Poƒç√°teƒçn√≠ FEN:"", board.fen(), ""\n"")

sequence, final_score, T = minimax(board, 9, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time,T=False)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score, T)
"
NPrtPVhC,Untitled,Tkap1,C,Wednesday 8th of May 2024 01:04:44 PM CDT,"
// usage
{
	char* str = ""athano azen"";
	char entity_a[128];
	char entity_b[128];
	char* curr = str;
	curr = parse_identifier(curr, entity_a);
	if(!curr) {
		// DIDNT FIND AN IDENTIFIER AKA ENTITY NAME IN THIS CASE
		return;
	}
	curr = parse_identifier(curr, entity_b);
	if(!curr) {
		// FOUND ONE NAME BUT NOT TWO
		return;
	}
	// entity_a is ""athano""
	// entity_b is ""azen""
}

char* parse_identifier(char* source, char* fill_me_up_big_boy)
{
	// skip spaces
	while(*source == ' ') {
		source += 1;
	}

	char* result = null;
	if(!begins_identifier(source[0])) { return result; }
	int i = 1;
	while(true) {
		if(!continues_identifier(source[i])) {
			memcpy(fill_me_up_big_boy, source, i);
			fill_me_up_big_boy[i] = 0;
			result = &source[i];
			break;
		}
		i += 1;
	}
	return result;
}




/////////
bool is_number(char c)
{
	return c >= '0' && c <= '9';
}

bool is_alpha(char c)
{
	return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')	;
}

bool is_alphanum(char c)
{
	return is_alpha(c) || is_number(c);	
}

bool begins_identifier(char c)
{
	return is_alphanum(c) || c == '_'
}

bool continues_identifier(char c)
{
	return begins_identifier(c) || is_number(c);
}"
Ak2Msbpj,practice hsc 1,splash365,C++,Wednesday 8th of May 2024 01:01:01 PM CDT,"#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j<=i; j++)
        {
            printf(""%d"", j);
        }
        printf(""\n"");
        
    }
    
    return 0;
}



/*
Enter a number: 4
1
12
123
1234
*/

---------------------------------------------------

/**

Find if a number is prime (without function)

**/

#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    int flag = 1;
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            printf(""%d is not prime\n"", n);
            flag = 0;
            break;
        }
    }
    if(flag == 1) 
    {
        printf(""%d is a prime\n"", n);
    }
    
    return 0;
}



/*

Enter a number: 20
20 is not prime

*/

---------------------------------------------------

/**

Find if a number is prime (with function)

**/

int isPrime(int n)
{
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            return 0;
        }
    }
    return 1;
}


#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    if(isPrime(n))
    {
        printf(""%d is a prime\n"", n);
    }
    else
    {
        printf(""%d is not a prime\n"", n);
    }
    
    return 0;
}



/*

Enter a number: 5
5 is a prime

*/

---------------------------------------------------

/**

print primes from 2 to N (with function)

**/

int isPrime(int n)
{
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            return 0;
        }
    }
    return 1;
}


#include <stdio.h>

int main()
{
    int n;
    printf(""Enter n: "");
    scanf(""%d"", &n);
    
    for(int i = 2; i<=n; i++)
    {
        if(isPrime(i))
        {
            printf(""%d "", i);
        }
    }
    
    return 0;
}



/*

Enter a number: 5
5 is a prime

*/

---------------------------------------------------

/**

print primes from 2 to N (without function)

**/

************* H W *************


---------------------------------------------------

/**

find GCD

**/



#include <stdio.h>

int main()
{
    int a, b;
    printf(""Enter two numbers: "");
    scanf(""%d %d"", &a, &b);
    
    int min, gcd;
    
    if(a <= b) min = a;
    else min = b;
    
    for(int i = 1; i<=min; i++)
    {
        if(a % i == 0 && b % i == 0)
        {
            gcd = i;
        }
    }
    
    printf(""GCD: %d\n"", gcd);
    
    int lcm = (a * b) / gcd;
    
    printf(""LCM: %d\n"", lcm);
    
    return 0;
}



/*

Multiples:
3 = 3, 6, 9, 12, ...


Divisors:
30 = 1 . 30
   = 2 . 15
   = 5 . 6


   
GCD Greatest Common Divisors

30 20

30 = 1, 2, 5, 6, 10, 15, 30
20 = 1, 2, 5, 10, 20

Choto number er divisor boro number er o divisor kina => true: common divisor


*/"
pX7KgLU4,EasyButton Control rev_06,pleasedontcode,Arduino,Wednesday 8th of May 2024 12:47:44 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Control
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-08 17:46:39

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The project must control a timer that starts when */
	/* the infrared sensor is in a low active state and */
	/* stops when the sensor returns to a low active */
	/* state. The timer must be displayed on the LCD */
	/* screen. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* The timer state should be handled using a state */
	/* machine. Furthermore, an explicit function called */
	/* 'resetTimer' needs to be implemented to reset the */
	/* counter and state of the state machine. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>    // https://github.com/marcoschwartz/LiquidCrystal_I2C
#include <EasyButton.h>    // https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void resetTimer(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensorInfrared_PushButton_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t display_LCD1602I2C_I2C_PIN_SDA_A4 = A4;
const uint8_t display_LCD1602I2C_I2C_PIN_SCL_A5 = A5;
const uint8_t display_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
LiquidCrystal_I2C lcd(display_LCD1602I2C_I2C_SLAVE_ADDRESS, 20, 4); // Initialize LiquidCrystal_I2C object
EasyButton button(sensorInfrared_PushButton_PIN_D2); // Initialize EasyButton object

void onPressedForDuration()
{
  // Code to be executed when the button is pressed for the given duration.
}

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(sensorInfrared_PushButton_PIN_D2, INPUT_PULLUP);

    lcd.init(); // Initialize the LCD
    lcd.backlight(); // Turn on the backlight

    // Initialize the button
    button.begin();
    // Add the callback function to be called when the button is pressed for at least the given time
    button.onPressedFor(2000, onPressedForDuration);
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    button.read(); // Continuously read the status of the button
}

void resetTimer(void)
{
    // Function to reset the timer and state machine
}

/* END CODE */"
CqgPGt09,OMEGENE,hayzun2,C++,Wednesday 8th of May 2024 12:34:24 PM CDT,"OMEGENE discord doawnload link
https://discord.gg/qUjGkkCp7a"
KFqkhWKm,esp32_lab_2,S11as,C++,Wednesday 8th of May 2024 12:21:36 PM CDT,"#include <Arduino.h>
#include <vector>
#include <string>
#include ""BluetoothSerial.h""

// https://randomnerdtutorials.com/esp32-bluetooth-classic-arduino-ide/

class Actor {
public:
    int actPin;
    Actor(int pin): actPin (pin) {}
    virtual void act() {}
};

class Clicker {
private:
    int clickerPin;
    std::vector<Actor*> actors;
    bool enabled;
public:
    Clicker(int pin) {
        this->clickerPin = pin;
        this->enabled = true;
    }
    
    bool isClicked() {
        return digitalRead(clickerPin) == LOW;
    }
    
    void addActor(Actor* newActor) { 
        this->actors.push_back(newActor);
    }

    void watchClicks() {
        Serial.println(""watching clicks""); 
        if (this->isClicked()) {
            for (Actor* actor: this->actors) { 
                actor->act();
            }
        }
    }

    void enable() {
        this->enabled = true;
    }

    void disable() {
        this->enabled = false;
    }
};

class SoundDevice: public Actor {
public:
    SoundDevice(int pin): Actor (pin) { }

    void playSound(int del) {
        digitalWrite(this->actPin, HIGH);
        delay(del);
        digitalWrite(this->actPin, LOW);
    }

    void playLoudSound(int del) {
        int arr[10] = {25, 50, 25, 50, 25, 50, 25, 50, 25, 50};
        for (int i = 0; i<10; i++) {
            analogWrite(this->actPin, arr[i]);
            delay((int)(del/2));
            analogWrite(this->actPin, 1);
            delay( (int)(del/2));
        }
    }

    void act() override {
        Serial.println(""sound device acting""); 
        playSound(150);
    }
};


class MessageController {
private:
    BluetoothSerial serial;
    Clicker* clicker;
    SoundDevice* soundDevice;
    std::string message;
public:
    MessageController(BluetoothSerial s, 
                        Clicker* clicker, 
                        SoundDevice* soundDevice): 
                        clicker(clicker), soundDevice(soundDevice) { 
        message = """";
        this->serial = s;
        this->serial.begin(""ESP32Kirill"");
    }

    void parseCommand() {
        if (this->serial.available()){
            char incomingChar = this->serial.read();
            if (incomingChar != '\n'){
                this->message += String(incomingChar);
            } else {
                this->message = """";
            }
            Serial.write(""Got char: "");
            Serial.write(incomingChar);
        }

        if (message ==""buzz"") {
            this->soundDevice->playSound(150);
        }
        else if (message ==""clicker_on"") {
            digitalWrite(ledPin, LOW);
        }
    }
}

uint64_t count = 0;
Clicker* clicker;
SoundDevice* soundDevice;
BluetoothSerial SerialBT;
MessageController* messageController;

void setup() {
    Serial.begin(115200);
    int clickerPin = 4;
    int soundPin = 13;
    int soundLen = 300;
    pinMode(clickerPin, INPUT);
    pinMode(soundPin, OUTPUT);

    clicker = new Clicker(clickerPin);
    soundDevice = new SoundDevice(soundPin);

    clicker->addActor(soundDevice);

    messageController = new MessageController(
        SerialBT,
        clicker,
        soundDevice,
    );
    Serial.println(""Setup finished"");
}

void loop() {
    messageController->parseCommand();
    clicker->watchClicks();

    delay(100)
}"
wrmNJMYG,safdawfaf,gadungw71,PHP,Wednesday 8th of May 2024 12:20:12 PM CDT,"‚Ä¢	https://www.imdb.com/list/ls545165122/
‚Ä¢	https://www.imdb.com/list/ls545165670/
‚Ä¢	https://www.imdb.com/list/ls545167717/
‚Ä¢	https://www.imdb.com/list/ls545167167/
‚Ä¢	https://www.imdb.com/list/ls545167348/
‚Ä¢	https://www.imdb.com/list/ls545167262/
‚Ä¢	https://www.imdb.com/list/ls545120732/
‚Ä¢	https://www.artstation.com/artwork/aoz2xL
‚Ä¢	https://www.artstation.com/watchfaceoff7onewish9/profile
‚Ä¢	https://www.artstation.com/artwork/Nyd9xd
‚Ä¢	https://www.artstation.com/watchtwilightofthewarriors7/profile
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545165122
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545165670
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545167717
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545167167
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545167348
‚Ä¢	https://letsdobookmark.com/story/https-www-imdb-com-list-ls545167262-2
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545120732
‚Ä¢	https://www.letsdobookmark.com/story/https-www-artstation-com-watchfaceoff7onewish9-profile
‚Ä¢	https://www.letsdobookmark.com/story/https-www-artstation-com-watchtwilightofthewarriors7-profile
‚Ä¢	https://www.kooapp.com/koo/guest_3NFOM8/35ac0811-ea98-48f4-af3a-82c7d5d83c69
‚Ä¢	https://open.firstory.me/user/clvy1b3wb000501up1mhuajaq
‚Ä¢	https://open.firstory.me/story/clvy1d8ub01yh01us1lc91emj
‚Ä¢	https://wandering.flarum.cloud/d/60479-dfgdrgdrh
‚Ä¢	https://hiuderyy.hashnode.dev/dsfsefgegesgseg
‚Ä¢	https://www.bankier.pl/forum/temat_dsfefdsfs,66214785.html
‚Ä¢	https://medium.com/@rarawwwuu27/%E4%B9%9D%E9%BE%99%E5%9F%8E%E5%AF%A8%E4%B9%8B%E5%9B%B4%E5%9F%8E-%E5%AE%8C%E6%95%B4%E7%89%88%E6%9C%AC-hd-1080p-d81c8c3c8075
‚Ä¢	https://www.onfeetnation.com/profiles/blogs/sadawfawfg
‚Ä¢	https://forum.mush.com.br/topic/215038/awerfsebsetnet
‚Ä¢	https://hackmd.io/@rerewilli6/ByTO0QFzR
‚Ä¢	https://demo.hedgedoc.org/s/R5Oe7g-Uc
‚Ä¢	https://rentry.co/7ewexoc2
‚Ä¢	https://paste.ee/p/crJRv
‚Ä¢	https://yamcode.com/asfawgf-65
‚Ä¢	https://lifeisfeudal.com/Discussions/question/dfsefesgesgesg
‚Ä¢	https://start.me/w/yO5yNX
‚Ä¢	https://plaza.rakuten.co.jp/aryasantosso/diary/202405090000/
‚Ä¢	https://telegra.ph/SDAFSE-05-08
‚Ä¢	https://muckrack.com/wsadawf-wfegf/bio
‚Ä¢	https://profile.hatena.ne.jp/rarawwwuu27/
‚Ä¢	https://www.bitsdujour.com/profiles/Cxggdw
‚Ä¢	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/749676/Default.aspx
‚Ä¢	https://www.fitlynk.com/1715188675F198357
"
jffAp972,Image Upload Code,onlinejudge95,JavaScript,Wednesday 8th of May 2024 12:09:57 PM CDT,"import { useEffect, useState } from ""react"";
import { useStepperContext } from ""../StepperContext"";
import styles from ""./styles.module.css"";
import { useUser } from ""@/Store/userContext"";
import { Form } from ""react-bootstrap"";
import ""react-toastify/dist/ReactToastify.css"";
import { ToastContainer, toast } from ""react-toastify"";
import useRefreshToken from ""@/Components/Hooks/useRefreshToken"";

export default function ProfilePhoto({ details }) {
  const [data, setData] = useState({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const { userToken, userType } = useUser();
  const { coachData, setCoachData } = useStepperContext();
  const [file, setFile] = useState();
  const [image, setImage] = useState();
  const { refreshUserToken } = useRefreshToken();
  const [flag, setFlag] = useState(0);
  const [newEvent, setNewEvent] = useState(null);
  const [uriData, setUriData] = useState(null);

  function handleChange(e) {
    setFile(e.target.files[0]);
    setImage(URL.createObjectURL(e.target.files[0]));
  }

  const handleSubmit = async (event) => {
    event.preventDefault();
    const formData = new FormData();
    formData.append(""profilePhoto"", file);
    setLoading(true);
  
    try {
      if (
        file.type !== ""image/jpeg"" &&
        file.type !== ""image/png""
      ) {
        throw new Error(""This file extension type is not supported"");
      }
  
      const preSignedResponse = await fetch(
        `${process.env.NEXT_PUBLIC_UPLOAD_SERVICE_URL}/url/photo`,
        {
          method: ""POST"",
          headers: {
            ""Content-Type"": ""application/json"",
          },
          body: JSON.stringify({
            UserType: ""coach"",
            UserId: details.id,
            FileName: file.name,
          }),
        }
      );
      const preSignedUrl = await preSignedResponse.json();
      setUriData(preSignedUrl.S3Uri);
  
      const response = await fetch(preSignedUrl.URL, {
        headers: {
          ""Content-Type"": file.type,
        },
        method: preSignedUrl.Method,
        body: formData,
      });
      
      if (response.ok && response.headers.get(""content-length"") === ""0"") {
        var result = {};
      } else {
        var result = await response.json();
      }
  
      if (!response.ok) {
        if (response.status === 401) {
          await refreshUserToken();
          setFlag(1);
          setNewEvent(event);
        } else {
          console.log(result);
          throw new Error(`${result.detail}`);
        }
      } else {
        setData(result);
        toast.success(""Photo saved successfully"", {
          position: ""top-center"",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: ""light"",
        });
      }
    } catch (error) {
      console.error(error);
      toast.error(error.message || ""Error Occurred, Try Again in Sometime"", {
        position: ""top-center"",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: ""light"",
      });
    } finally {
      setLoading(false);
    }
  };
  
  

  useEffect(() => {
    if (flag === 1) {
      handleSubmit(newEvent);
    }
  }, [flag]);

  useEffect(() => {
    setCoachData({
      ...coachData,
      profile_photo: uriData,
      image: image,
    });
  }, [uriData]);


  return (
    <Form className={styles.stepperBox}>
      <Form.Group style={{ paddingLeft: ""8px"" }}>
        <Form.Label className={styles.label}>
          Add Image{"" ""}
          <div style={{ color: ""red"", textTransform: ""none"" }}>
            (Supported Extensions: .png and .jpg)
          </div>
        </Form.Label>
        <div className={styles.photo}>
          <Form.Control
            className={styles.value}
            type=""file""
            onChange={handleChange}
          />
          <button
            type=""button""
            onClick={handleSubmit}
            className={styles.nextButton}
            disabled={loading}
          >
            {loading ? ""Saving..."" : ""Save""}
          </button>
        </div>
      </Form.Group>
      <ToastContainer />
    </Form>
  );
}"
VTFgQbW9,BubleSorting FASM,dllbridge,ASM (NASM),Wednesday 8th of May 2024 12:04:15 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; –ø—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    array_size equ ($ - array) / 4

section '.code' code readable executable
  start:
    mov ecx, array_size

    outer_loop:
      mov edx, 0
      mov ebx, ecx
      dec ebx

      inner_loop:
        mov eax, [array + edx * 4]
        cmp eax, [array + edx * 4 + 4]
        jbe not_swap

        mov eax, [array + edx * 4]
        mov ebx, [array + edx * 4 + 4]
        mov [array + edx * 4], ebx
        mov [array + edx * 4 + 4], eax

        not_swap:
          inc edx
          loop inner_loop

      loop outer_loop

    mov ecx, array_size

    print_loop:
      mov eax, [array + ecx * 4 - 4]
      print eax
      dec ecx
      jnz print_loop

    call [ExitProcess]

section '.idata' import data readable writeable
  library kernel32, 'kernel32.dll',\
          user32, 'user32.dll'

  import kernel32,\
         ExitProcess, 'ExitProcess'

  import user32,\
         wsprintf, 'wsprintfA'

section '.text' code readable executable
  proc print
    enter
      invoke wsprintf, buffer, '%d', [ebp + 8]
      invoke StdOut, buffer
    return
  endp

section '.bss' data readable writeable
  buffer rb 16

section '.reloc' fixups data discardable
"
63TqhkE5,Untitled,vinraghav2,PowerShell,Wednesday 8th of May 2024 11:45:45 AM CDT,"sudo journalctl --since='-2min' --no-pager
-- Logs begin at Thu 2023-03-16 12:51:46 IST, end at Wed 2024-05-08 22:08:09 IST. --
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 985.
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:10 anjug-vostro-15-3568 systemd[10724]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:10 anjug-vostro-15-3568 systemd[10724]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 986.
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:15 anjug-vostro-15-3568 systemd[10725]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:15 anjug-vostro-15-3568 systemd[10725]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 987.
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:21 anjug-vostro-15-3568 systemd[10726]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:21 anjug-vostro-15-3568 systemd[10726]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 988.
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:26 anjug-vostro-15-3568 systemd[10727]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:26 anjug-vostro-15-3568 systemd[10727]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 989.
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:31 anjug-vostro-15-3568 systemd[10728]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:31 anjug-vostro-15-3568 systemd[10728]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 990.
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:36 anjug-vostro-15-3568 systemd[10729]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:36 anjug-vostro-15-3568 systemd[10729]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 991.
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:42 anjug-vostro-15-3568 systemd[10730]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:42 anjug-vostro-15-3568 systemd[10730]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Started Application launched by gnome-shell.
May 08 22:06:43 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Activating via systemd: service name='org.gnome.Terminal' unit='gnome-terminal-server.service' requested by ':1.175' (uid=1000 pid=10735 comm=""/usr/bin/gnome-terminal.real --window "" label=""unconfined"")
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Created slice apps.slice.
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Created slice apps-org.gnome.Terminal.slice.
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Starting GNOME Terminal Server...
May 08 22:06:44 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Successfully activated service 'org.gnome.Terminal'
May 08 22:06:44 anjug-vostro-15-3568 systemd[1516]: Started GNOME Terminal Server.
May 08 22:06:44 anjug-vostro-15-3568 systemd[1516]: Started VTE child process 10746 launched by gnome-terminal-server process 10738.
May 08 22:06:44 anjug-vostro-15-3568 systemd[1516]: gnome-launched-org.gnome.Terminal.desktop-10732.scope: Succeeded.
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 992.
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:47 anjug-vostro-15-3568 systemd[10750]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:47 anjug-vostro-15-3568 systemd[10750]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:51 anjug-vostro-15-3568 sudo[10751]:    anjug : TTY=pts/0 ; PWD=/home/anjug ; USER=root ; COMMAND=/usr/bin/lsusb -tv
May 08 22:06:51 anjug-vostro-15-3568 sudo[10751]: pam_unix(sudo:session): session opened for user root by (uid=0)
May 08 22:06:51 anjug-vostro-15-3568 sudo[10751]: pam_unix(sudo:session): session closed for user root
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 993.
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:52 anjug-vostro-15-3568 systemd[10754]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:52 anjug-vostro-15-3568 systemd[10754]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 994.
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:57 anjug-vostro-15-3568 systemd[10755]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:57 anjug-vostro-15-3568 systemd[10755]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 995.
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:03 anjug-vostro-15-3568 systemd[10756]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:03 anjug-vostro-15-3568 systemd[10756]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:05 anjug-vostro-15-3568 gnome-shell[1764]: ../clutter/clutter/clutter-actor.c:10558: The clutter_actor_set_allocation() function can only be called from within the implementation of the ClutterActor::allocate() virtual function.
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 996.
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:08 anjug-vostro-15-3568 systemd[10760]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:08 anjug-vostro-15-3568 systemd[10760]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:08 anjug-vostro-15-3568 ModemManager[933]: <info>  [sleep-monitor] system is about to suspend
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3073] manager: sleep: sleep requested (sleeping: no  enabled: yes)
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3074] device (enp2s0): state change: unavailable -> unmanaged (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[9837]: [9830:9861:0508/220708.310701:ERROR:connection_factory_impl.cc(472)] ConnectionHandler failed with net error: -2
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3208] device (p2p-dev-wlp1s0): state change: disconnected -> unmanaged (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3220] manager: NetworkManager state is now ASLEEP
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3226] device (wlp1s0): state change: activated -> deactivating (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 whoopsie[1066]: [22:07:08] offline
May 08 22:07:08 anjug-vostro-15-3568 dbus-daemon[758]: [system] Activating via systemd: service name='org.freedesktop.nm_dispatcher' unit='dbus-org.freedesktop.nm-dispatcher.service' requested by ':1.12' (uid=0 pid=759 comm=""/usr/sbin/NetworkManager --no-daemon "" label=""unconfined"")
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Starting Network Manager Script Dispatcher Service...
May 08 22:07:08 anjug-vostro-15-3568 dbus-daemon[758]: [system] Successfully activated service 'org.freedesktop.nm_dispatcher'
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Started Network Manager Script Dispatcher Service.
May 08 22:07:08 anjug-vostro-15-3568 kernel: wlp1s0: deauthenticating from 50:2b:73:7e:61:a8 by local choice (Reason: 3=DEAUTH_LEAVING)
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-DISCONNECTED bssid=50:2b:73:7e:61:a8 reason=3 locally_generated=1
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <warn>  [1715186228.4771] sup-iface[0x5575c566bae0,wlp1s0]: connection disconnected (reason -3)
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-REGDOM-CHANGE init=CORE type=WORLD
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.4782] device (wlp1s0): state change: deactivating -> disconnected (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Withdrawing address record for fe80::3afe:fb21:70f1:4f2d on wlp1s0.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Leaving mDNS multicast group on interface wlp1s0.IPv6 with address fe80::3afe:fb21:70f1:4f2d.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Interface wlp1s0.IPv6 no longer relevant for mDNS.
May 08 22:07:08 anjug-vostro-15-3568 whoopsie[1066]: [22:07:08] Cannot reach: https://daisy.ubuntu.com
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5115] dhcp4 (wlp1s0): canceled DHCP transaction
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5116] dhcp4 (wlp1s0): state changed bound -> done
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Withdrawing address record for 192.168.0.103 on wlp1s0.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Leaving mDNS multicast group on interface wlp1s0.IPv4 with address 192.168.0.103.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Interface wlp1s0.IPv4 no longer relevant for mDNS.
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5312] device (wlp1s0): supplicant interface state: completed -> disconnected
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5328] device (wlp1s0): state change: disconnected -> unmanaged (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-SCAN-FAILED ret=-100
May 08 22:07:08 anjug-vostro-15-3568 nm-dispatcher[10784]: run-parts: failed to stat component /etc/network/if-post-down.d/avahi-daemon: No such file or directory
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: nl80211: deinit ifname=p2p-dev-wlp1s0 disabled_11b_rates=0
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: An active wireless connection, in infrastructure mode, involves no access point?
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: nl80211: deinit ifname=wlp1s0 disabled_11b_rates=0
May 08 22:07:09 anjug-vostro-15-3568 gnome-shell[1764]: g_dbus_connection_emit_signal: assertion 'G_IS_DBUS_CONNECTION (connection)' failed
May 08 22:07:09 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:09 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 997.
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:13 anjug-vostro-15-3568 systemd[10795]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:13 anjug-vostro-15-3568 systemd[10795]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:14 anjug-vostro-15-3568 dbus-daemon[758]: [system] Activating via systemd: service name='net.reactivated.Fprint' unit='fprintd.service' requested by ':1.82' (uid=1000 pid=1764 comm=""/usr/bin/gnome-shell "" label=""unconfined"")
May 08 22:07:14 anjug-vostro-15-3568 systemd[1]: Starting Fingerprint Authentication Daemon...
May 08 22:07:15 anjug-vostro-15-3568 dbus-daemon[758]: [system] Successfully activated service 'net.reactivated.Fprint'
May 08 22:07:15 anjug-vostro-15-3568 systemd[1]: Started Fingerprint Authentication Daemon.
May 08 22:07:17 anjug-vostro-15-3568 gnome-shell[1764]: ../clutter/clutter/clutter-actor.c:10558: The clutter_actor_set_allocation() function can only be called from within the implementation of the ClutterActor::allocate() virtual function.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 998.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:18 anjug-vostro-15-3568 systemd[10807]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:18 anjug-vostro-15-3568 systemd[10807]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: NetworkManager-dispatcher.service: Succeeded.
May 08 22:07:19 anjug-vostro-15-3568 gnome-shell[1764]: Ignored exception from dbus method: Gio.IOErrorEnum: GDBus.Error:org.freedesktop.login1.OperationInProgress: There's already a shutdown or sleep operation in progress
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 999.
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:23 anjug-vostro-15-3568 systemd[10808]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:23 anjug-vostro-15-3568 systemd[10808]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1000.
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:29 anjug-vostro-15-3568 systemd[10809]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:29 anjug-vostro-15-3568 systemd[10809]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1001.
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:34 anjug-vostro-15-3568 systemd[10810]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:34 anjug-vostro-15-3568 systemd[10810]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:35 anjug-vostro-15-3568 gdm-password][10802]: gkr-pam: unlocked login keyring
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Activating service name='org.freedesktop.FileManager1' requested by ':1.38' (uid=1000 pid=1764 comm=""/usr/bin/gnome-shell "" label=""unconfined"")
May 08 22:07:36 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186256.0572] agent-manager: agent[b6f72d29c8bf2209,:1.82/org.gnome.Shell.NetworkAgent/1000]: agent registered
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Activating service name='org.gnome.Nautilus' requested by ':1.38' (uid=1000 pid=1764 comm=""/usr/bin/gnome-shell "" label=""unconfined"")
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Successfully activated service 'org.gnome.Nautilus'
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Successfully activated service 'org.freedesktop.FileManager1'
May 08 22:07:36 anjug-vostro-15-3568 org.gnome.Nautilus[10820]: Failed to register: Unable to acquire bus name 'org.gnome.Nautilus'
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 37 with keysym 37 (keycode 10).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 31 with keysym 31 (keycode a).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 32 with keysym 32 (keycode b).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 33 with keysym 33 (keycode c).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 38 with keysym 38 (keycode 11).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 34 with keysym 34 (keycode d).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 35 with keysym 35 (keycode e).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 39 with keysym 39 (keycode 12).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 36 with keysym 36 (keycode f).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: JS ERROR: Error getting systemd inhibitor: Gio.IOErrorEnum: GDBus.Error:org.freedesktop.login1.OperationInProgress: The operation inhibition has been requested for is already running
                                                        inhibit/<@resource:///org/gnome/shell/misc/loginManager.js:187:55
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Reached target Sleep.
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Starting Record successful boot for GRUB...
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Starting Suspend...
May 08 22:07:37 anjug-vostro-15-3568 systemd-sleep[10842]: Suspending system...
May 08 22:07:37 anjug-vostro-15-3568 kernel: PM: suspend entry (deep)
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: grub-common.service: Succeeded.
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Finished Record successful boot for GRUB.
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Starting GRUB failed boot detection...
May 08 22:07:38 anjug-vostro-15-3568 systemd[1]: grub-initrd-fallback.service: Succeeded.
May 08 22:07:38 anjug-vostro-15-3568 systemd[1]: Finished GRUB failed boot detection.
May 08 22:07:48 anjug-vostro-15-3568 kernel: Filesystems sync: 1.115 seconds
May 08 22:07:48 anjug-vostro-15-3568 kernel: Freezing user space processes ... (elapsed 0.193 seconds) done.
May 08 22:07:48 anjug-vostro-15-3568 kernel: OOM killer disabled.
May 08 22:07:48 anjug-vostro-15-3568 kernel: Freezing remaining freezable tasks ... (elapsed 0.001 seconds) done.
May 08 22:07:48 anjug-vostro-15-3568 kernel: printk: Suspending console(s) (use no_console_suspend to debug)
May 08 22:07:48 anjug-vostro-15-3568 kernel: sd 0:0:0:0: [sda] Synchronizing SCSI cache
May 08 22:07:48 anjug-vostro-15-3568 kernel: sd 0:0:0:0: [sda] Stopping disk
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: interrupt blocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Preparing to enter system sleep state S3
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: event blocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: EC stopped
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Saving platform NVS memory
May 08 22:07:48 anjug-vostro-15-3568 kernel: Disabling non-boot CPUs ...
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: CPU 1 is now offline
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: CPU 2 is now offline
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: CPU 3 is now offline
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Low-level resume complete
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: EC started
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Restoring platform NVS memory
May 08 22:07:48 anjug-vostro-15-3568 kernel: Enabling non-boot CPUs ...
May 08 22:07:48 anjug-vostro-15-3568 kernel: x86: Booting SMP configuration:
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: Booting Node 0 Processor 1 APIC 0x2
May 08 22:07:48 anjug-vostro-15-3568 kernel: CPU1 is up
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: Booting Node 0 Processor 2 APIC 0x1
May 08 22:07:48 anjug-vostro-15-3568 kernel: CPU2 is up
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: Booting Node 0 Processor 3 APIC 0x3
May 08 22:07:48 anjug-vostro-15-3568 kernel: CPU3 is up
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Waking up from system sleep state S3
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: interrupt unblocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: event unblocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: sd 0:0:0:0: [sda] Starting disk
May 08 22:07:48 anjug-vostro-15-3568 kernel: i915 0000:00:02.0: [drm] [ENCODER:94:DDI A/PHY A] is disabled/in DSI mode with an ungated DDI clock, gate it
May 08 22:07:48 anjug-vostro-15-3568 kernel: i915 0000:00:02.0: [drm] [ENCODER:102:DDI B/PHY B] is disabled/in DSI mode with an ungated DDI clock, gate it
May 08 22:07:48 anjug-vostro-15-3568 kernel: i915 0000:00:02.0: [drm] [ENCODER:110:DDI C/PHY C] is disabled/in DSI mode with an ungated DDI clock, gate it
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-5: reset high-speed USB device number 2 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: configured for UDMA/133
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-3: reset full-speed USB device number 8 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-8: reset full-speed USB device number 4 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-1: reset low-speed USB device number 7 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-6: reset high-speed USB device number 3 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: OOM killer enabled.
May 08 22:07:48 anjug-vostro-15-3568 kernel: Restarting tasks ... done.
May 08 22:07:48 anjug-vostro-15-3568 bluetoothd[755]: Endpoint unregistered: sender=:1.76 path=/MediaEndpoint/A2DPSink/sbc
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1002.
May 08 22:07:48 anjug-vostro-15-3568 bluetoothd[755]: Endpoint unregistered: sender=:1.76 path=/MediaEndpoint/A2DPSource/sbc
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:49 anjug-vostro-15-3568 kernel: PM: suspend exit
May 08 22:07:49 anjug-vostro-15-3568 kernel: Bluetooth: hci0: using rampatch file: qca/rampatch_usb_00000302.bin
May 08 22:07:49 anjug-vostro-15-3568 kernel: Bluetooth: hci0: QCA: patch rome 0x302 build 0x3e8, firmware rome 0x302 build 0x111
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd 00/00:00:00:00:00:a0(NOP) rejected by device (Stat=0x51 Err=0x04)
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd 00/00:00:00:00:00:a0(NOP) rejected by device (Stat=0x51 Err=0x04)
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: configured for UDMA/100
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:48 anjug-vostro-15-3568 systemd[10871]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:48 anjug-vostro-15-3568 systemd[10871]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Starting Load/Save RF Kill Switch Status...
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:48 anjug-vostro-15-3568 systemd-sleep[10842]: System resumed.
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Started Load/Save RF Kill Switch Status.
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-6
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-3
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-8
May 08 22:07:49 anjug-vostro-15-3568 systemd[1516]: Stopped target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Stopped target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-6
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-3
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-1
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-8
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-1
May 08 22:07:49 anjug-vostro-15-3568 systemd[1516]: Reached target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Reached target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 systemd-sleep[10908]: /dev/sda:
May 08 22:07:49 anjug-vostro-15-3568 systemd-sleep[10908]:  setting Advanced Power Management level to 0xfe (254)
May 08 22:07:49 anjug-vostro-15-3568 systemd-sleep[10908]:  APM_level        = 254
May 08 22:07:49 anjug-vostro-15-3568 kernel: Bluetooth: hci0: using NVM file: qca/nvm_usb_00000302.bin
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: systemd-suspend.service: Succeeded.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Finished Suspend.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Stopped target Sleep.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Reached target Suspend.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Stopped target Suspend.
May 08 22:07:49 anjug-vostro-15-3568 systemd-logind[780]: Operation 'sleep' finished.
May 08 22:07:49 anjug-vostro-15-3568 ModemManager[933]: <info>  [sleep-monitor] system is resuming
May 08 22:07:49 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186269.9593] manager: sleep: wake requested (sleeping: yes  enabled: yes)
May 08 22:07:49 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186269.9597] device (enp2s0): state change: unmanaged -> unavailable (reason 'managed', sys-iface-state: 'managed')
May 08 22:07:49 anjug-vostro-15-3568 kernel: Generic FE-GE Realtek PHY r8169-0-200:00: attached PHY driver (mii_bus:phy_addr=r8169-0-200:00, irq=MAC)
May 08 22:07:50 anjug-vostro-15-3568 kernel: r8169 0000:02:00.0 enp2s0: Link is Down
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.1733] device (wlp1s0): state change: unmanaged -> unavailable (reason 'managed', sys-iface-state: 'managed')
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:   device [8086:9d14] error status/mask=00000081/00002000
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 0] RxErr                 
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 7] BadDLLP               
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:   device [8086:9d14] error status/mask=00000041/00002000
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 0] RxErr                 
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 6] BadTLP                
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Failed to set mode: Blocked through rfkill (0x12)
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Endpoint registered: sender=:1.76 path=/MediaEndpoint/A2DPSink/sbc
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Endpoint registered: sender=:1.76 path=/MediaEndpoint/A2DPSource/sbc
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Failed to set mode: Blocked through rfkill (0x12)
May 08 22:07:50 anjug-vostro-15-3568 gnome-shell[1764]: Error setting property 'Powered' on interface org.bluez.Adapter1: GDBus.Error:org.bluez.Error.Blocked: Blocked through rfkill (g-io-error-quark, 36)
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.4582] device (p2p-dev-wlp1s0): state change: unmanaged -> unavailable (reason 'managed', sys-iface-state: 'managed')
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.4609] manager: NetworkManager state is now DISCONNECTED
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5785] sup-iface[0x5575c566bbd0,wlp1s0]: supports 5 scan SSIDs
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5809] device (wlp1s0): supplicant interface state: starting -> ready
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5811] device (p2p-dev-wlp1s0): state change: unavailable -> disconnected (reason 'supplicant-available', sys-iface-state: 'managed')
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5824] device (wlp1s0): state change: unavailable -> disconnected (reason 'supplicant-available', sys-iface-state: 'managed')
May 08 22:07:52 anjug-vostro-15-3568 systemd[1]: fprintd.service: Succeeded.
May 08 22:07:52 anjug-vostro-15-3568 ModemManager[933]: <info>  [base-manager] couldn't check support for device '/sys/devices/pci0000:00/0000:00:1c.0/0000:01:00.0': not supported by any plugin
May 08 22:07:52 anjug-vostro-15-3568 ModemManager[933]: <info>  [base-manager] couldn't check support for device '/sys/devices/pci0000:00/0000:00:1c.5/0000:02:00.0': not supported by any plugin
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1003.
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:54 anjug-vostro-15-3568 systemd[10965]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:54 anjug-vostro-15-3568 systemd[10965]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: systemd-rfkill.service: Succeeded.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4661] policy: auto-activating connection 'Tenda_7E61A8 1' (4d8ea307-be8f-44f6-9f35-f6c9418709ed)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4679] device (wlp1s0): Activation: starting connection 'Tenda_7E61A8 1' (4d8ea307-be8f-44f6-9f35-f6c9418709ed)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4683] device (wlp1s0): state change: disconnected -> prepare (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4699] manager: NetworkManager state is now CONNECTING
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4715] device (wlp1s0): state change: prepare -> config (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4738] device (wlp1s0): Activation: (wifi) access point 'Tenda_7E61A8 1' has security, but secrets are required.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4739] device (wlp1s0): state change: config -> need-auth (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4850] device (wlp1s0): state change: need-auth -> prepare (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4868] device (wlp1s0): state change: prepare -> config (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4881] device (wlp1s0): Activation: (wifi) connection 'Tenda_7E61A8 1' has security, and secrets exist.  No new secrets needed.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4882] Config: added 'ssid' value 'Tenda_7E61A8'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4883] Config: added 'scan_ssid' value '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4884] Config: added 'bgscan' value 'simple:30:-70:86400'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4884] Config: added 'key_mgmt' value 'WPA-PSK WPA-PSK-SHA256 FT-PSK'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4885] Config: added 'auth_alg' value 'OPEN'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4885] Config: added 'psk' value '<hidden>'
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: SME: Trying to authenticate with 50:2b:73:7e:61:a8 (SSID='Tenda_7E61A8' freq=2437 MHz)
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: authenticate with 50:2b:73:7e:61:a8
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5822] device (wlp1s0): supplicant interface state: ready -> authenticating
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5823] device (p2p-dev-wlp1s0): supplicant management interface state: ready -> authenticating
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: Trying to associate with 50:2b:73:7e:61:a8 (SSID='Tenda_7E61A8' freq=2437 MHz)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5843] device (wlp1s0): supplicant interface state: authenticating -> associating
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: send auth to 50:2b:73:7e:61:a8 (try 1/3)
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: authenticated
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: associate with 50:2b:73:7e:61:a8 (try 1/3)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5844] device (p2p-dev-wlp1s0): supplicant management interface state: authenticating -> associating
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: RX AssocResp from 50:2b:73:7e:61:a8 (capab=0x411 status=0 aid=1)
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: associated
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: Associated with 50:2b:73:7e:61:a8
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-SUBNET-STATUS-UPDATE status=0
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6112] device (wlp1s0): supplicant interface state: associating -> 4-way handshake
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6114] device (p2p-dev-wlp1s0): supplicant management interface state: associating -> 4-way handshake
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: WPA: Key negotiation completed with 50:2b:73:7e:61:a8 [PTK=CCMP GTK=CCMP]
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-CONNECTED - Connection to 50:2b:73:7e:61:a8 completed [id=0 id_str=]
May 08 22:07:55 anjug-vostro-15-3568 kernel: IPv6: ADDRCONF(NETDEV_CHANGE): wlp1s0: link becomes ready
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6474] device (wlp1s0): supplicant interface state: 4-way handshake -> completed
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6475] device (wlp1s0): Activation: (wifi) Stage 2 of 5 (Device Configure) successful. Connected to wireless network ""Tenda_7E61A8""
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6476] device (p2p-dev-wlp1s0): supplicant management interface state: 4-way handshake -> completed
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6485] device (wlp1s0): state change: config -> ip-config (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6501] dhcp4 (wlp1s0): activation: beginning transaction (timeout in 45 seconds)
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Joining mDNS multicast group on interface wlp1s0.IPv6 with address fe80::3afe:fb21:70f1:4f2d.
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: New relevant interface wlp1s0.IPv6 for mDNS.
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Registering new address record for fe80::3afe:fb21:70f1:4f2d on wlp1s0.*.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7287] dhcp4 (wlp1s0): option dhcp_lease_time      => '86400'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7288] dhcp4 (wlp1s0): option domain_name_servers  => '192.168.0.1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7289] dhcp4 (wlp1s0): option expiry               => '1715272675'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7289] dhcp4 (wlp1s0): option ip_address           => '192.168.0.103'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7289] dhcp4 (wlp1s0): option requested_broadcast_address => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7290] dhcp4 (wlp1s0): option requested_domain_name => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7290] dhcp4 (wlp1s0): option requested_domain_name_servers => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7290] dhcp4 (wlp1s0): option requested_domain_search => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7291] dhcp4 (wlp1s0): option requested_host_name  => '1'
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Joining mDNS multicast group on interface wlp1s0.IPv4 with address 192.168.0.103.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7291] dhcp4 (wlp1s0): option requested_interface_mtu => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7291] dhcp4 (wlp1s0): option requested_ms_classless_static_routes => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7292] dhcp4 (wlp1s0): option requested_nis_domain => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7292] dhcp4 (wlp1s0): option requested_nis_servers => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7293] dhcp4 (wlp1s0): option requested_ntp_servers => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7293] dhcp4 (wlp1s0): option requested_rfc3442_classless_static_routes => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7294] dhcp4 (wlp1s0): option requested_root_path  => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7294] dhcp4 (wlp1s0): option requested_routers    => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7294] dhcp4 (wlp1s0): option requested_static_routes => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7295] dhcp4 (wlp1s0): option requested_subnet_mask => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7295] dhcp4 (wlp1s0): option requested_time_offset => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7295] dhcp4 (wlp1s0): option requested_wpad       => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7296] dhcp4 (wlp1s0): option routers              => '192.168.0.1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7296] dhcp4 (wlp1s0): option subnet_mask          => '255.255.255.0'
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: New relevant interface wlp1s0.IPv4 for mDNS.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7296] dhcp4 (wlp1s0): state changed unknown -> bound
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Registering new address record for 192.168.0.103 on wlp1s0.IPv4.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7457] device (wlp1s0): state change: ip-config -> ip-check (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 whoopsie[1066]: [22:07:55] Cannot reach: https://daisy.ubuntu.com
May 08 22:07:55 anjug-vostro-15-3568 dbus-daemon[758]: [system] Activating via systemd: service name='org.freedesktop.nm_dispatcher' unit='dbus-org.freedesktop.nm-dispatcher.service' requested by ':1.12' (uid=0 pid=759 comm=""/usr/sbin/NetworkManager --no-daemon "" label=""unconfined"")
May 08 22:07:55 anjug-vostro-15-3568 systemd[1]: Starting Network Manager Script Dispatcher Service...
May 08 22:07:55 anjug-vostro-15-3568 dbus-daemon[758]: [system] Successfully activated service 'org.freedesktop.nm_dispatcher'
May 08 22:07:55 anjug-vostro-15-3568 systemd[1]: Started Network Manager Script Dispatcher Service.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8085] device (wlp1s0): state change: ip-check -> secondaries (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8098] device (wlp1s0): state change: secondaries -> activated (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8119] manager: NetworkManager state is now CONNECTED_LOCAL
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8187] manager: NetworkManager state is now CONNECTED_SITE
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8193] policy: set 'Tenda_7E61A8 1' (wlp1s0) as default for IPv4 routing and DNS
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8233] device (wlp1s0): Activation: successful, device activated.
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-SIGNAL-CHANGE above=1 signal=-38 noise=-115 txrate=1000
May 08 22:07:56 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186276.2960] manager: NetworkManager state is now CONNECTED_GLOBAL
May 08 22:07:56 anjug-vostro-15-3568 whoopsie[1066]: [22:07:56] The default IPv4 route is: /org/freedesktop/NetworkManager/ActiveConnection/4
May 08 22:07:56 anjug-vostro-15-3568 whoopsie[1066]: [22:07:56] Not a paid data plan: /org/freedesktop/NetworkManager/ActiveConnection/4
May 08 22:07:56 anjug-vostro-15-3568 whoopsie[1066]: [22:07:56] Found usable connection: /org/freedesktop/NetworkManager/ActiveConnection/4
May 08 22:07:58 anjug-vostro-15-3568 whoopsie[1066]: [22:07:58] online
May 08 22:07:59 anjug-vostro-15-3568 systemd-resolved[707]: Using degraded feature set (UDP) for DNS server 192.168.0.1.
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1004.
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:59 anjug-vostro-15-3568 systemd[11020]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:59 anjug-vostro-15-3568 systemd[11020]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1005.
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:08:04 anjug-vostro-15-3568 systemd[11024]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:08:04 anjug-vostro-15-3568 systemd[11024]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:08:06 anjug-vostro-15-3568 sudo[11025]:    anjug : TTY=pts/0 ; PWD=/home/anjug ; USER=root ; COMMAND=/usr/bin/journalctl --since=-2min --no-pager
May 08 22:08:06 anjug-vostro-15-3568 sudo[11025]: pam_unix(sudo:session): session opened for user root by (uid=0)
May 08 22:08:06 anjug-vostro-15-3568 systemd[1]: NetworkManager-dispatcher.service: Succeeded.
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1006.
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:08:09 anjug-vostro-15-3568 systemd[11027]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:08:09 anjug-vostro-15-3568 systemd[11027]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'."
b8cFNbtZ,√óÕú√óDIG PANDIT ONLINE ‰∫ó,DIGPANDIT,Lua,Wednesday 8th of May 2024 11:41:33 AM CDT,"--if gg.getFile():match('[*/]+$') == '√óÕú√óDIG PANDIT ONLINE ‰∫ó.lua' then
-----else print(' \n\n \n \n. \n √óÕú√ó\n.                       .‚ùåüÜÇüÖ≤üÜÅüÖ∏üÖøüÜÉ üÜÅüÖ¥üÖΩüÖ∞üÖºüÖ¥ üÖ≥üÖ¥üÜÉüÖ¥üÖ≤üÜÉüÖ¥üÖ≥‚ùå\n\n')
---return 

if gg.getTargetPackage() == ""com.MadOut.BIG""
  then 
  gg.toast(""‚úÖ done"")
  else print(""use in madout2 only "") os.exit()
  end
  
gg.setVisible (false)
L={'‚ñ£', '‚ñ°', '‚ñ°', '‚ñ°', '‚ñ°'} -- LOADING TABLE BY DIG
LD = 0
for i=0, 6, 1 do
	if gg.isVisible(true) and i ~= 6 then
		gg.setVisible(false)
	end
	gg.sleep(700)
	gg.toast('‚û°Ô∏è '..L[1]..L[2]..L[3]..L[4]..L[5]..' '..LD..'/120%')
	LD = LD + 20
	table.remove(L)
	table.insert(L, 2, ""‚ñ£"")
	if i == 6 then

		gg.sleep(100)
		gg.toast('WEL COME ')
	end
end

golo = os.date(""%d"")

----------==============******=====
X= os.date(""%H:%M:%S %p ‚åöÔ∏è \n%A, %d %B %Y\n"")


 
local Menu = gg.prompt({""üí°Your name ""},nil,{""text""})
	if not Menu then return end
 

if Menu[1] then 

gg.alert(''..X..'\n\n..ùê°ùêûùê•ùê•ùê® üëâ'..Menu[1]..'üëà wrong password \nplease ùê¨ùêÆùêõùê¨ùêúùê´ùê¢ùêõùêû ùê¶ùê≤ ùêúùê°ùêöùêßùêßùêöùê• \n DIGpandit gaming ùêöùêßùêù ùê¨ùêÆùê©ùê©ùê®ùê´ùê≠ me\n for best hacks. ‚Äçüíª') 
 else 

		gg.alert(''..X..'\n\n..ùê°ùêûùê•ùê•ùê® üëâ'..Menu[1]..'üëà please ùê¨ùêÆùêõùê¨ùêúùê´ùê¢ùêõùêû ùê¶ùê≤ ùêúùê°ùêöùêßùêßùêöùê• \n DIGpandit gaming ùêöùêßùêù ùê¨ùêÆùê©ùê©ùê®ùê´ùê≠ me\n for best hacks')
 end 


while(nil)do;local i={}if(i.i)then;i.i=(i.i(i))end;end

if gg.getTargetPackage() == ""com.MadOut.BIG""
  then 
  gg.toast(""wait"")
  else print(""use in madout2 only "") os.exit()
  end
  



gg.alert('\n‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ  ‚ñÑ\n‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚îÄ‚ñÑ‚îÄ‚ñà‚ñÑ‚ñÑ‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚ñà  ‚ñà\n‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚îÄ‚ñà‚ïë‚ñà‚ïë‚ñà‚ïë‚ñÑ‚ñÑ‚îÄ‚îÄ‚ñÑ ‚ñà‚ïë‚ñà ‚ñà‚ñÑ‚ñà\n‚ñà‚ïë‚îÄ‚îÄ‚ñà‚ïë‚îÄ‚ñà‚ïë‚ñà‚ïë‚ñà‚ïë‚îÄ‚ñÄ ‚ñà‚ïë‚îÄ‚ñà‚ïë‚ñà‚ïë‚ñà‚ïë‚Äã\n‚ñà‚ïë‚ñÑ‚ïë‚ñà‚ïë‚îÄ‚ñà‚ïë‚îÄ‚ñÄ‚îÄ‚îÄ ‚îÄ‚îÄ‚ñà‚ïë‚ñÑ‚ñà‚ïë‚îÄ‚ñÄ‚ñÄ\n‚ñÄ‚ñÄ‚ñÄ‚îÄ‚îÄ‚ñÄ‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚îÄ‚ñÄ‚îÄ‚ñà‚ïë\n‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÄ‚ñÄ‚ñÑ ‚ñÄ‚ñÑ‚ñÑ‚ñÄ\n‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ\n‚îÄ‚îÄ‚îÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÑ‚ñÄ\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñà‚ñÄ               ‚ûÆ‚îÉ'..Menu[1]..'‚îÉ‚ù§Ô∏è‚Äçüî•')


print(""üëëüíª‚úàS·¥Ñ Ä…™·¥ò·¥õ ùê¶ùêöùê§ùêûùêù ùêÅùê≤‚û£ ùêÉùêàùêÜ ùê©ùêöùêßùêùùê¢ùê≠üíªüëë"")
print(""üëë üíªùêüùê´ùê¢ùêûùêßùêù‚û£üÖÅüÑ∫ üÑ≥üÑ¥üÖÖüÑ∏üÑªüíªüëë"")
print(""üëëüíª ùêüùê´ùê¢ùêûùêßùêù‚û¢üÑ∞üÖÖüÑ∏ üÖÇüÑ∏üÑΩüÑ∂üÑ∑üíªüëë"")
print(""üëëüíªüÖÉüÑ∑üÑ∞üÑΩüÑ∫üÖÇ üÑµüÑæüÖÅ üÖÇüÖÑüÑøüÑøüÑæüÖÅüÖÉ üíªüëë"")
print(""üëëüíªùê¶ùêûùêûùê≠ ùêüùê®ùê´ ùê¨ùêúùê´ùê¢ùê©ùê≠ùêÉùêÑùêíùêàùêÜùêçùêàùêçùêÜ üíªüëë Ô∏è"")
print(""üëëüíªÔ∏è üÖÖüÑ∏üÑø üíªüëë"")
print(""üëëüíªüÖÇüÑ∞üÑøüÑæüÖÅüÖÉ üÑºüÑ¥ üÑæüÑΩ üÖàüÑæüÖÑüÖÉüÖÑüÑ±üÑ¥‚Äçüíª"")
print('üëëüíªBYE BYE '..Menu[1]..'üíªüëë')
print('üëëüíªBYE BYE '..Menu[1]..'üíªüëë')

--íâ≠ íåê




DiGPandiT= 1
on = ""[‚ùå]""
off = ""[‚úî]""
--------1--------
m16 = on


-----------------------------------------------------------------------------------------------------------------------------------------DIGpandiT-------


function HOME()
       pers  = gg.multiChoice({
          ""‚îÉGUN MENU‚úà  ‚îÉ""..m16, 
          ""üéÉ‚ÄîÕûÕüÕûÕüñ£òüÑ¥üÖáüÑ∏üÖÉ‚ÄîÕûÕüÕûÕüñ£òüéÉ ""
  }, nil, ' '..X..'\n ùê°ùêûùê•ùê•ùê®üëâ'..Menu[1]..'üëà\n ùê¢ùê≠ùê¨ üÑºüÑ∞üÑ∏üÑΩ üÑºüÑ¥üÑΩüÖÑ')
if pers == nil then else 
if pers[1] == true then 
if m16 == on then
  m161(on)
  m16 = off
 else
  m162(off)
  m16 = on
 end
 end
 

if pers[6] == true then
EXIT() 
end
end
PANDIT = -1
end


function EXIT()
gg[""skipRestoreState""]()
 
      gg[""setVisible""](true)
 
      gg.clearResults()
 
      gg.clearList()
 
      os[""exit""]()
 

end----------------------------------------------------------------------------------------------------------------
--------------------------------

while true do
  if gg.isVisible(true) then
    PANDIT = 1
    gg.setVisible(false)
  end
  gg.clearResults()
  if PANDIT == 1 then
    HOME()
 end
end"
vb7CXsxy,to je nejlepsi minimax good s T,max2201111,Python,Wednesday 8th of May 2024 11:41:24 AM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met

# def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time,T):
#     current_time = time.time()
#     if current_time - last_print_time[0] >= 1:
#         elapsed_hours, remainder = divmod(current_time - start_time, 3600)
#         elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
#         print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
#         last_print_time[0] = current_time

#     position_count[0] += 1
#     if position_count[0] % 1000000 == 0:
#         print(f""\nProzkoumano {position_count[0]} pozic."")

#     key = (board.fen(), maximizing_player, depth, alpha, beta)
#     if key in memo:
#         return memo[key]

#     if depth == 0 or board.is_game_over() or T:
#         eval = evaluate_board(board, depth2)
#         memo[key] = ([], eval)
#         T = True
#         return [], eval

#     best_eval = float('-inf') if maximizing_player else float('inf')
#     best_sequence = []

#     for move in board.legal_moves:
#         move_san = board.san(move)
#         board.push(move)
#         sequence, eval = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
#         board.pop()
        
#         if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
#             best_eval = eval
#             best_sequence = [(move, move_san)] + sequence

#         if maximizing_player:
#             alpha = max(alpha, eval)
#         else:
#             beta = min(beta, eval)

#         if beta <= alpha:
#             break

#     memo[key] = (best_sequence, best_eval)
#     if depth2 not in printed_depths:
#         printed_depths.add(depth2)
#         print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
#     return best_sequence, best_eval

# def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
#     current_time = time.time()
#     if current_time - last_print_time[0] >= 1:
#         elapsed_hours, remainder = divmod(current_time - start_time, 3600)
#         elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
#         print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
#         last_print_time[0] = current_time

#     position_count[0] += 1
#     if position_count[0] % 1000000 == 0:
#         print(f""\nProzkoumano {position_count[0]} pozic."")

#     key = (board.fen(), maximizing_player, depth, alpha, beta)
#     if key in memo:
#         return memo[key][0], memo[key][1], T

#     if depth == 0 or board.is_game_over():
#         eval = evaluate_board(board, depth2)
#         memo[key] = ([], eval)
#         if abs(eval) == 1000 - depth2:  # Specificky kontroluje, zda je hodnocen√≠ rovno 1000 nebo -1000 s p≈ôihl√©dnut√≠m k hloubce
#             return [], eval, True
#         return [], eval, T

#     best_eval = float('-inf') if maximizing_player else float('inf')
#     best_sequence = []

#     for move in board.legal_moves:
#         board.push(move)
#         sequence, eval, T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
#         board.pop()

#         if T:  # Pokud bylo T nastaveno na True v nƒõjak√© z rekurz√≠, p≈ôedƒçasnƒõ ukonƒçit v≈°echny dal≈°√≠
#             return [], eval, True

#         if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
#             best_eval = eval
#             best_sequence = [(move, board.san(move))] + sequence

#         if maximizing_player:
#             alpha = max(alpha, eval)
#         else:
#             beta = min(beta, eval)

#         if beta <= alpha:
#             break

#     memo[key] = (best_sequence, best_eval)
#     if depth2 not in printed_depths:
#         printed_depths.add(depth2)
#         print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
#     return best_sequence, best_eval, T

# def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
#     current_time = time.time()
#     if current_time - last_print_time[0] >= 1:
#         elapsed_hours, remainder = divmod(current_time - start_time, 3600)
#         elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
#         print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
#         last_print_time[0] = current_time

#     position_count[0] += 1
#     if position_count[0] % 1000000 == 0:
#         print(f""\nProzkoumano {position_count[0]} pozic."")

#     key = (board.fen(), maximizing_player, depth, alpha, beta)
#     if key in memo:
#         return memo[key][0], memo[key][1], T

#     if depth == 0 or board.is_game_over():
#         eval = evaluate_board(board, depth2)
#         memo[key] = ([], eval)
#         return [], eval, T

#     best_eval = float('-inf') if maximizing_player else float('inf')
#     best_sequence = []

#     for move in board.legal_moves:
#         board.push(move)
#         sequence, eval, T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
#         board.pop()

#         if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
#             best_eval = eval
#             best_sequence = [(move, board.san(move))] + sequence  # Ujistƒõte se, ≈æe sekvence je spr√°vnƒõ aktualizov√°na

#         if maximizing_player:
#             alpha = max(alpha, eval)
#         else:
#             beta = min(beta, eval)

#         if beta <= alpha:
#             break

#     memo[key] = (best_sequence, best_eval)
#     if depth2 not in printed_depths:
#         printed_depths.add(depth2)
#         print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
#     return best_sequence, best_eval, T

def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key][0], memo[key][1], T

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        T = T or abs(eval) >= 1000  # Nastavit T na True, pokud dos√°hneme kritick√© eval hodnoty
        return [], eval, T

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []

    for move in board.legal_moves:
        board.push(move)
        sequence, eval, returned_T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
        board.pop()
        
        # Nastaven√≠ T na True, pokud nƒõkter√° z rekurz√≠ vr√°t√≠ True
        if returned_T:
            T = True

        if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
            best_eval = eval
            best_sequence = [(move, board.san(move))] + sequence

        # P≈ôedƒçasn√© ukonƒçen√≠ prohled√°v√°n√≠, pokud T je True
        if T:
            memo[key] = (best_sequence, best_eval)
            return best_sequence, best_eval, T

        if maximizing_player:
            alpha = max(alpha, eval)
        else:
            beta = min(beta, eval)

        if beta <= alpha:
            break

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval, T


start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

#start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""


board = chess.Board(start_fen)

print(""Poƒç√°teƒçn√≠ ≈°achovnice:"")
print(board)
print(""Poƒç√°teƒçn√≠ FEN:"", board.fen(), ""\n"")

sequence, final_score, T = minimax(board, 19, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time,T=False)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score)
"
kpKxZp0J,Untitled,geminilabs,PHP,Wednesday 8th of May 2024 11:40:58 AM CDT,"add_action('setup_theme', function () {
	if (!function_exists('glsr')) {
		return;
	}
	$hook = 'woocommerce_single_product_summary';
	$method = 'renderTitleRating';
	$controller = 'GeminiLabs\SiteReviews\Integrations\WooCommerce\Controllers\ProductController';
	$callback = glsr('Compatibility')->findCallback($hook, $method, $controller) ?? [];
	if (empty($callback['function'])) {
		return;
	}
	remove_action('woocommerce_single_product_summary', $callback['function'], 10);
	add_action('woocommerce_single_product_summary', $callback['function'], 6); // change priority to 6
});"
M4FDD5Um,6502 Math Macros,mhughson,6502 ACME Cross Assembler,Wednesday 8th of May 2024 11:32:12 AM CDT,"; params:   addr_l - address of low byte of 16 bit value
;           addr_h - address of high byte of 16 bit value
;           val - literal to add
;           x reg - assumes x is index into addresses
; note:     stomps A register 
.macro add16x8const    addr_l, addr_h, val
    clc
    lda addr_l,x
    adc val
    sta addr_l,x
    bcc :+
        inc addr_h,x
    :
.endmacro

; params:   addr_left_l/h - address of low/high byte that is being changing
;           addr_right_l/h - address of the low/high byte being added to l-value.
;           x reg - assumes x is index into addresses
; note:     stomps A register
.macro add16x16    addr_left_l, addr_left_h, addr_right_l, addr_right_h
    ; low byte
    clc
    lda addr_left_l,x
    adc addr_right_l,x
    sta addr_left_l,x
    ; high byte
    lda addr_left_h,x
    adc addr_right_h,x
    sta addr_left_h,x
.endmacro

; params:   addr_left_l/h/hh - address of low/high/xtrahigh byte that is being changing
;           addr_right_l/h - address of the low/high byte being added to l-value.
;           x reg - assumes x is index into addresses
; note:     stomps A register
.macro add24x16    addr_left_l, addr_left_h, addr_left_hh, addr_right_l, addr_right_h
    ; low byte
    clc
    lda addr_left_l,x
    adc addr_right_l,x
    sta addr_left_l,x
    ; high byte
    lda addr_left_h,x
    adc addr_right_h,x
    sta addr_left_h,x
    ; extra high byte
    bcc :+
        inc addr_left_hh,x
    :
.endmacro

; Adds an signed 16 bit number to an unsigned 24 bit number 
; params:   addr_left_l/h/hh - address of low/high/xtrahigh byte that is being changing
;           addr_right_l/h - address of the low/high byte being added to l-value.
;           x reg - assumes x is index into addresses
; note:     stomps A register
.macro add24xs16 addr_left_l, addr_left_h, addr_left_hh, addr_right_l, addr_right_h
    clc
    lda addr_right_l,x
    adc addr_left_l,x
    sta addr_left_l,x
    lda addr_right_h,x
    bpl :+
        dec addr_left_hh,x  ; adjust if r-value is negative
    :
    adc addr_left_h,x
    sta addr_left_h,x
    bcc :+
        inc addr_left_hh,x  ; adjust hh if carry
    :
.endmacro"
yDGKht6W,6502 Particle System,mhughson,6502 TASM/64TASS,Wednesday 8th of May 2024 11:26:01 AM CDT,".include ""macro_math.s""

.export _reset_all_particles, _update_particles, _spawn_particle
.export _spawn_brick_smash_particle_system, _spawn_coin_particle_system

; ca65 helper routines
.import decsp3, shlax4, shrax4, shlaxy

; variables defined in C but needed in this code.
.import _cam

; CONSTANTS

NUM_PARTICLES = 16
PART_GRAVITY_DEFAULT = 56 ;((255*22)/100)
INDEX_NONE = $ff
COIN_VEL = ((4 << 8) + 128) ; based on C version

PART_TYPE_NONE = 0
PART_TYPE_ROCK = 1
PART_TYPE_COIN = 2

; NOTE: this doesn't need to be saved, but that's where the spare memory is.
.segment ""XRAM""

part_x_scr:         .res NUM_PARTICLES
part_x_pix:         .res NUM_PARTICLES
part_x_sub:         .res NUM_PARTICLES
part_x_vel_pix:     .res NUM_PARTICLES
part_x_vel_sub:     .res NUM_PARTICLES
part_y_pix:         .res NUM_PARTICLES
part_y_sub:         .res NUM_PARTICLES
part_y_vel_pix:     .res NUM_PARTICLES
part_y_vel_sub:     .res NUM_PARTICLES
part_tile:          .res NUM_PARTICLES
part_counter:       .res NUM_PARTICLES
part_type:          .res NUM_PARTICLES
part_state:         .res NUM_PARTICLES
part_x_reg_temp:    .res 1

; routine params

in_part_x_h:    .res 1
_in_part_x_h = in_part_x_h ; alias with a _
.export _in_part_x_h

in_part_x_l:    .res 1
_in_part_x_l = in_part_x_l
.export _in_part_x_l

in_part_y_h:    .res 1
_in_part_y_h = in_part_y_h
.export _in_part_y_h

.segment ""BANK3""

;;-----------------------------------------------------------------------

.proc _reset_all_particles

    ldx #(NUM_PARTICLES-1)
    lda #0

loop:
    jsr _clear_particle
    dex
    bpl loop

    rts

.endproc

;;-----------------------------------------------------------------------

.proc _update_particles

    ldx #(NUM_PARTICLES-1)

loop:

    ; is the particle alive?
    lda part_state, x
    bne :+
        jmp next_particle
:

    ;
    ; move
    ;

    ; add x velocity to x position
    add24xs16    part_x_sub, part_x_pix, part_x_scr, part_x_vel_sub, part_x_vel_pix

    ; y velocity
    add16x8const    part_y_vel_sub, part_y_vel_pix, #PART_GRAVITY_DEFAULT

    ; add y velocity to y position
    add16x16    part_y_sub, part_y_pix, part_y_vel_sub, part_y_vel_pix

    ; custom update
    lda part_type,x

    ; ROCK
    cmp #PART_TYPE_ROCK
    bne :+
        ; custom rock logic
        clc
        lda part_counter,x
        cmp #30
        bne end_custom_update
        ; change tile half way
        inc part_tile,x
        jmp end_custom_update

    ; COIN
:   cmp #PART_TYPE_COIN
    bne :+
        ; custom coin logic
        ; 0xf0 + ((tick_count >> 2) % 4)
        lda part_counter,x
        lsr
        lsr 
        and #%00000011 ; %4
        clc
        adc #$f0
        sta part_tile,x
        jmp end_custom_update
:

end_custom_update:

    ; did the particle fall off the bottom?
    lda part_y_pix,x
    clc
    cmp #208
    bcc :+
        ; off the bottom
        lda #0
        sta part_state,x
        jmp next_particle
:

    dec part_counter,x
    bne :+
        ; counter has expired. Disable particle.
        lda #0
        sta part_state,x
        jmp next_particle        
:

    ;
    ; draw
    ;

    jsr _clip_and_draw_particle

next_particle:
    dex
    bmi :+
        jmp loop
:

    rts

.endproc ; _update_particles

;;-----------------------------------------------------------------------

; params:   x - particle index
;
.proc _clear_particle

    lda #0
    sta part_x_scr, x
    sta part_x_pix, x
    sta part_x_sub, x
    sta part_x_vel_pix, x
    sta part_x_vel_sub, x
    sta part_y_pix, x
    sta part_y_sub, x
    sta part_y_vel_pix, x
    sta part_y_vel_sub, x
    sta part_tile, x
    sta part_counter, x
    sta part_type, x
    sta part_state, x
    rts

.endproc ; _clear_partcile

;;-----------------------------------------------------------------------

; params:   x reg - offset into particles
; output:   x reg - the index of the next free particle.
.proc _find_next_free_particle

loop:

    ; is the particle alive?
    lda part_state, x
    bne next_particle

    ; particle is alive, so just return with X pointing 
    ; to this index
    rts

next_particle:
    dex
    bpl loop
    
    ; if we reach this point X will be $ff, which is INDEX_NONE
    rts

.endproc ;_find_next_free_particle

;;-----------------------------------------------------------------------

brick_smash_y_vel_pix:
    .byte $fc, $fc, $fe, $fe ; -4, -4, -2, -2

; both are 128, but one is negative and the other is positive.
brick_smash_x_vel_h:
    .byte $ff, 0, $ff, 0 ; -128, 128, -128, 128

brick_smash_x_offset:
    .byte 0, 8, 0, 8
brick_smash_y_offset:
    .byte 0, 0, 8, 8

; params:   in_part_x_l - x position in pixels
;           in_part_x_h - x position in sreen pages
;           in_part_y_h - y position in pixels
.proc _spawn_brick_smash_particle_system

    ldx #(NUM_PARTICLES-1)

.repeat 4, I
    jsr _find_next_free_particle
    cpx #INDEX_NONE
    bne :+
        rts
:   jsr _clear_particle

    ; bring the particle to life
    lda #1
    sta part_state, x

    clc
    lda in_part_x_l
    adc brick_smash_x_offset+I
    sta part_x_pix, x
    lda in_part_x_h
    sta part_x_scr, x
    clc
    lda in_part_y_h
    adc brick_smash_y_offset+I
    sta part_y_pix, x

    ; always 128 sub pixel, but the pix value will
    ; determine if it is negative or positive.
    lda #128
    sta part_x_vel_sub,x
    lda brick_smash_x_vel_h+I
    sta part_x_vel_pix,x

    lda brick_smash_y_vel_pix+I
    sta part_y_vel_pix,x

    lda #$e0
    sta part_tile,x

    ; live for about 1 second
    lda #60
    sta part_counter,x

    lda #PART_TYPE_ROCK
    sta part_type,x
.endrepeat

    rts

.endproc ;_spawn_brick_smash_particle_system

;;-----------------------------------------------------------------------

; params:   in_part_x_l - x position in pixels
;           in_part_x_h - x position in sreen pages
;           in_part_y_h - y position in pixels
.proc _spawn_coin_particle_system

    ldx #(NUM_PARTICLES-1)

    jsr _find_next_free_particle
    cpx #INDEX_NONE
    bne :+
        rts
:   jsr _clear_particle

    ; bring the particle to life
    lda #1
    sta part_state, x

    lda in_part_x_l
    sta part_x_pix, x
    lda in_part_x_h
    sta part_x_scr, x
    lda in_part_y_h
    sta part_y_pix, x

    lda #<(-COIN_VEL)
    sta part_y_vel_sub,x
    lda #>(-COIN_VEL)
    sta part_y_vel_pix,x

    lda #$f0
    sta part_tile,x

    ; live for about 1/2 second
    lda #32
    sta part_counter,x

    lda #PART_TYPE_COIN
    sta part_type,x

    rts

.endproc ;_spawn_coin_particle_system

;;-----------------------------------------------------------------------

;unused
.proc _spawn_particle

    ldx #(NUM_PARTICLES-1)

loop:

    ; is the particle alive?
    lda part_state, x
    bne next_particle

    ; particle is alive

    ; start with a blank slate so that we only need to update
    ; the values that change.
    jsr _clear_particle

    ; bring the particle to life
    lda #1
    sta part_state, x

    lda #128
    sta part_x_pix, x
    sta part_y_pix, x

    lda #128
    sta part_x_vel_pix,x

    jmp done

next_particle:
    dex
    bpl loop


done:
    rts

.endproc ;_spawn_particle

;;-----------------------------------------------------------------------

; params:   x - particle index
;
.proc _clip_and_draw_particle

    stx part_x_reg_temp

    ; offscreen left clipping
    lda part_x_scr,x
    cmp _cam+1
    beq :+ ; equal, continue check
        bcc remove ; a < cam
        jmp test_right_clip
:   lda part_x_pix,x
    cmp _cam
    bcc remove ; a < cam

test_right_clip:
    ; offscreen right clipping
    lda _cam+1
    clc
    adc #1
    cmp part_x_scr,x
    beq :+ ; equal, continue check
        bcc done ; cam < obj
        jmp @draw_sprite
:   lda part_x_pix,x
    cmp _cam
    bcs done

@draw_sprite:
    ; oam_spr(64, 64, 0, 0);
    jsr decsp3

    ; camera shift
    sec
    lda part_x_pix,x
    sbc _cam ; pos_x low
    ldy #$02 ; number of stack params
    sta (sp),y
    lda part_y_pix,x ; param 2 - y
    sec
    sbc #1 ; pixel offset    
    dey
    sta (sp),y
    lda part_tile,x ; param 3 - chr
    dey
    sta (sp),y
    lda #02 ; 03 param 4 goes into a reg - attr
; stomp x
    jsr _oam_spr

    ; restore the x reg
    ldx part_x_reg_temp

done:
    rts

remove:
    lda #0
    sta part_state, x
    rts

.endproc ; _clip_and_draw_particle "
Phs8TH2i,Untitled,vatman,C++,Wednesday 8th of May 2024 11:23:02 AM CDT,"#include <cmath>
#include <iostream>

void method_vr() {
  double w = 1.2; // 0<w<2
  int N_max = 10000;
  int S = 0;
  double eps = 0.0001;
  double eps_max = 0;
  double eps_cur = 0;
  int n;
  std::cout << ""input n"" << '\n';
  std::cin >> n;
  double a[n][n];
  double x[n];
  double b[n];
  std::cout << ""input a[n][n]"" << '\n';
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cin >> a[i][j];
    }
  }
  std::cout << ""input b[n]"" << '\n';
  for (int j = 0; j < n; ++j) {
    std::cin >> b[j];
  }
  std::cout << ""input x[n]"" << '\n';
  for (int j = 0; j < n; ++j) {
    std::cin >> x[j];
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cout << a[i][j] << ' ';
    }
    std::cout << b[i] << '\n';
  }

  double x_old;
  double x_new;
  bool f = false;
  while (!f) {
    for (int i = 0; i < n; ++i) {
      x_old = x[i];
      x_new = (1 - w) * a[i][i] * x[i] + w * b[i];
      for (int j = 0; j < n; ++j) {
        if (j != i) {
          x_new -= w * a[i][j] * x[j];
        }
      }
      x_new /= a[i][i];
      eps_cur = fabs(x_old - x_new);
      if (i == 1) {
        eps_max = eps_cur;
      } else if (eps_cur > eps_max) {
        eps_max = eps_cur;
      }
      x[i] = x_new;
    }
    S += 1;
    if ((eps_max <= eps) || (S >= N_max)) {
      f = true;
      std::cout << ""eps_max: "" << eps_max << '\n';
    }
  }
  for (int i = 0; i < n; ++i) {
    std::cout << S << ':' << x[i] << ' ';
  }
  std::cout << '\n';
  std::cout << ""count of steps: "" << S << '\n';
}

int main() {
  method_vr();
  return 0;
}
"
