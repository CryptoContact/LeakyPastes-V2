id,title,username,language,date,content
Piiv7SY6,tree,DaniDori,C++,Thursday 2nd of November 2023 07:04:52 AM CDT,"#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <chrono>
#include ""BinarySearchTree.h""
#include ""BTree.h""

using namespace std;
using namespace chrono;

int main() {
    setlocale(LC_ALL, ""Russian"");

    // –ù–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    string textFileName = ""dictionary.txt"";
    string binaryFileName = ""dictionary.bin"";

    // –û–±—ä–µ–∫—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–µ—Ä–µ–≤—å—è–º–∏ –∏ —Ñ–∞–π–ª–∞–º–∏
    BinarySearchTree bst(binaryFileName);
    BTree btree(3);
    BinaryFile binaryFile;

    int choice;
    bool exitProgram = false;
    string searchKey;
    string deleteKey;
    while (!exitProgram) {
        cout << ""\n–ú–µ–Ω—é:"" << endl;
        cout << ""1. –°–æ–∑–¥–∞—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ"" << endl;
        cout << ""2. –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –ë–î–ü –∏ –°–î–ü"" << endl;
        cout << ""3. –ü–æ–∏—Å–∫ –∫–ª—é—á–∞"" << endl;
        cout << ""4. –ó–∞–º–µ—Ä –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∏—Å–∫–∞"" << endl;
        cout << ""5. –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ –¥–µ—Ä–µ–≤—å–µ–≤"" << endl;
        cout << ""6. –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤–æ—Ä–æ—Ç–æ–≤ –°–ü–î"" << endl;
        cout << ""0. –í—ã—Ö–æ–¥"" << endl;
        cout << ""–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤—ã–±–æ—Ä: "";
        cin >> choice;

        switch (choice) {
        case 1: {
            BinaryFile::createFromText(textFileName, binaryFileName);
            cout << ""–§–∞–π–ª —Å–æ–∑–¥–∞–Ω!"" << endl;
            break;
        }
        case 2: {
            bst.buildTreeFromFile();
            bst.printTree();
            btree.buildTreeFromFile(binaryFileName);
            btree.printTree();
            break;
        }
        case 3: {
            cout << ""–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–∞: "";
            cin >> searchKey;

            cout << ""–ü–æ–∏—Å–∫ –≤ –ë–î–ü..."" << endl;
            bst.search(searchKey);
            cout << ""–ü–æ–∏—Å–∫ –≤ –°–î–ü..."" << endl;
            btree.search(searchKey);
            break;
        }
        case 4: {
            cout << ""–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–ª—è –∑–∞–º–µ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∏—Å–∫–∞: "";
            cin >> searchKey;

            // –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ –ø–æ–∏—Å–∫–∞.
            auto start = high_resolution_clock::now();  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–∏—Å–∫–∞.
            bst.search(searchKey);  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –∫–ª—é—á–∞ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ –ø–æ–∏—Å–∫–∞.
            auto stop = high_resolution_clock::now();  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞.
            auto durationBST = duration_cast<microseconds>(stop - start).count();  // –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–µ.

            // –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –≤ B-–¥–µ—Ä–µ–≤–µ.
            start = high_resolution_clock::now();  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–∏—Å–∫–∞.
            btree.search(searchKey);  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –∫–ª—é—á–∞ –≤ B-–¥–µ—Ä–µ–≤–µ.
            stop = high_resolution_clock::now();  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞.
            auto durationBTree = duration_cast<microseconds>(stop - start).count();  // –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–µ.

            // –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ª–∏–Ω–µ–π–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ñ–∞–π–ª–µ.
            start = high_resolution_clock::now();  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–∏—Å–∫–∞.
            binaryFile.searchRecord(binaryFileName, searchKey);  // –í—ã–ø–æ–ª–Ω—è–µ–º –ª–∏–Ω–µ–π–Ω—ã–π –ø–æ–∏—Å–∫ –∫–ª—é—á–∞ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ñ–∞–π–ª–µ.
            stop = high_resolution_clock::now();  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞.
            auto durationLinear = duration_cast<microseconds>(stop - start).count();  // –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–µ.


            cout << ""–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –ë–î–ü: "" << durationBST << "" –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥\n"";
            cout << ""–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –°–î–ü: "" << durationBTree << "" –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥\n"";
            cout << ""–í—Ä–µ–º—è –ª–∏–Ω–µ–π–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: "" << durationLinear << "" –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥\n"";
            break;
        }
        case 5: {
            cout << ""–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "";
            cin >> deleteKey;

            cout << ""–£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ë–î–ü..."" << endl;
            bst.remove(deleteKey);
            cout << ""–ö–ª—é—á '"" << deleteKey << ""' —É–¥–∞–ª–µ–Ω –∏–∑ –ë–î–ü."" << endl;

            cout << ""–£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –°–î–ü..."" << endl;
            btree.remove(deleteKey);
            cout << ""–ö–ª—é—á '"" << deleteKey << ""' —É–¥–∞–ª–µ–Ω –∏–∑ –°–î–ü."" << endl;
            break;
        }
        case 6: {
            int totalKeys = btree.getTotalKeyCount();
            double averageRotations = static_cast<double>(btree.getSplitCount()) / totalKeys;
            cout << ""–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤–æ—Ä–æ—Ç–æ–≤ –Ω–∞ –∫–ª—é—á: "" << averageRotations << endl;
            break;
        }
        case 0: {
            exitProgram = true;
            break;
        }
        default: {
            cout << ""–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."" << endl;
        }
        }
    }

    return 0;
}"
YU7L11nX,Patchify_example,xdenisx,Python,Thursday 2nd of November 2023 07:03:28 AM CDT,"patch_size = 256
step = 128

for path, subdirs, files in os.walk(img_dir):
    dirname = path.split(os.path.sep)[-1]
    images = glob.glob(f'''{path}/*{pref_instr}*.tiff''')
    
    for i, image_name in enumerate(images): 
        # Process image only if there is a corresponding mask
        proc_f = False
        tmp_fname = os.path.basename(image_name).split('.')[0]
        
        if len(glob.glob(f'''{mask_dir}/{tmp_fname}*''')) > 0:
            proc_f = True
        else:
            proc_f = False
                               
        if image_name.endswith(f'.{img_format}') and proc_f==True:
            print(image_name)
            image = gdal.Open(image_name).ReadAsArray()
            SIZE_X = (image.shape[2]//patch_size)*patch_size #Nearest size divisible by our patch size
            SIZE_Y = (image.shape[1]//patch_size)*patch_size #Nearest size divisible by our patch size
            image = image[:,0:SIZE_Y,0:SIZE_X]
            
            image = np.moveaxis(image, 0, -1)
   
            #Extract patches from each image
            print(""Now patchifying image:"", image_name)
            patches_img = patchify(image, (patch_size, patch_size, 3), step=step)
    
            for i in range(patches_img.shape[0]):
                for j in range(patches_img.shape[1]):
                    
                    single_patch_img = patches_img[i,j,:,:]
                    single_patch_img = single_patch_img[0] #Drop the extra unecessary dimension that patchify adds.                     
                    tmp_fname = os.path.basename(image_name).split('.')[0]
                    out_patch_name = f'{img_patch_dir}/{tmp_fname}_patch_{str(i)}_{str(j)}.tiff'
                    imageio.imwrite(out_patch_name, single_patch_img)"
FwFJN0fu,data740,TestGuy1,JSON,Thursday 2nd of November 2023 07:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'beceb33d2a56e26871a86b24f10848fd06409112f0eaf85b4b193958f22ef37f9ef8e7134b6096ded86ef99b77fa0c9797cb363ea51035f07964ccde938a2d24f8d71eb11c6ddc639f23699d79b85d63143047bcb5eb355a0d110e7d9aee9b14c1595bfc687ef738bd032e05c8c387d669d08a63c4e4e8b55c7176a746599cdb',
  otherdata: [
    'ff93f5af498bf9d40bded4ec5f24fba5',
    '4fc04652579b518f689290aaf47a7b5c',
    '79b96d099a5698caf6e6acb6650b610f',
    'e3f96846e4b1218acbbea03ab5fac990',
    '8deffb8e07ec83aa1d0467aec52552e0',
    '87c59a1392b3265385ab058ef915b59f',
    '25d6abf332c71650f325aa85f9eef435',
    '1c562f126a8da6bcee4cc2952e4ee52b'
  ]
}"
69JBmApi,02. Passed or Failed,Spocoman,C++,Thursday 2nd of November 2023 06:51:13 AM CDT,"#include <iostream>

using namespace std;

int main() {
    double grade;
    cin >> grade;

    cout << (grade < 3 ? ""Failed!"" : ""Passed!"") << endl;
    return 0;
}"
3XCRBCrf,MOK layout Tangsa,dksetiavan,JSON,Thursday 2nd of November 2023 06:49:28 AM CDT,"OK_Layout_Begin
Name:Tangsa
[MC:ñ´Å][MC:ñ´Ç][MC:ñ´É][MC:ñ´Ñ][MC:ñ´Ö][MC:ñ´Ü][MC:ñ´á][MC:ñ´à][MC:ñ´â][MC:ñ´Ä][XK:[MC:ñ™à][MC:ñ™â][MC:ñ™ä][MC:ñ™ã][MC:ñ™ì]]
[MC:ñ™£][MC:ñ™¶][XK:[MC:ñ©º][MC:ñ©Ω][MC:ñ©æ][MC:ñ©ø]][MC:ñ™≤][MC:ñ™∞][MC:ñ™•][XK:[MC:ñ™Ñ][MC:ñ™Ö][MC:ñ™Ü][MC:ñ™á]][XK:[MC:ñ™Ä][MC:ñ™Å][MC:ñ™Ç][MC:ñ™É]][XK:[MC:ñ©∞][MC:ñ©±][MC:ñ©≤][MC:ñ©≥]][MC:ñ™ß][XK:[MC:ñ™å][MC:ñ™ç][MC:ñ™é][MC:ñ™è]]
[XK:[MC:ñ©¥][MC:ñ©µ][MC:ñ©∂][MC:ñ©∑]][MC:ñ™§][MC:ñ™±][MC:ñ™ª][MC:ñ™¢][MC:ñ™≠][MC:ñ™Ø][MC:ñ™†][MC:ñ™Æ][XK:[MC:ñ™î][MC:ñ™ï][MC:ñ™ñ][MC:ñ™ó][MC:ñ™ë][MC:ñ™í]][XK:[MC:ñ™ò][MC:ñ™ô][MC:ñ™ö][MC:ñ™õ]]
[MC:ñ™æ][MC:ñ™∫][MC:ñ™µ][MC:ñ™®][MC:ñ™™][MC:ñ™¨][MC:ñ™´][XK:[MC:ñ©∏][MC:ñ©π][MC:ñ©∫][MC:ñ©ª]][XK:[MC:ñ™ú][MC:ñ™ù][MC:ñ™û][MC:ñ™ü]]
1234567890[XK:[MC:ñ™à][MC:ñ™â][MC:ñ™ä][MC:ñ™ã][MC:ñ™ì]]
[MC:ñ™ê][MC:ñ™¶][XK:[MC:ñ©º][MC:ñ©Ω][MC:ñ©æ][MC:ñ©ø]][MC:ñ™≤][MC:ñ™π][MC:ñ™•][XK:[MC:ñ™Ñ][MC:ñ™Ö][MC:ñ™Ü][MC:ñ™á]][XK:[MC:ñ™Ä][MC:ñ™Å][MC:ñ™Ç][MC:ñ™É]][XK:[MC:ñ©∞][MC:ñ©±][MC:ñ©≤][MC:ñ©≥]][MC:ñ™©][XK:[MC:ñ™å][MC:ñ™ç][MC:ñ™é][MC:ñ™è]]
[XK:[MC:ñ©¥][MC:ñ©µ][MC:ñ©∂][MC:ñ©∑]][MC:ñ™¥][MC:ñ™º][MC:ñ™ª][MC:ñ™∑][MC:ñ™≠][MC:ñ™∏][MC:ñ™°][MC:ñ™Æ][XK:[MC:ñ™î][MC:ñ™ï][MC:ñ™ñ][MC:ñ™ó][MC:ñ™ë][MC:ñ™í]][XK:[MC:ñ™ò][MC:ñ™ô][MC:ñ™ö][MC:ñ™õ]]
[MC:ñ™æ][MC:ñ™∂][MC:ñ™Ω][MC:ñ™®][MC:ñ™™][MC:ñ™≥][MC:ñ™´][XK:[MC:ñ©∏][MC:ñ©π][MC:ñ©∫][MC:ñ©ª]][XK:[MC:ñ™ú][MC:ñ™ù][MC:ñ™û][MC:ñ™ü]]
¬£¬•‚Ç¨$%^&*()‚Ññ
~Àã{}\_-=|+¬´¬ª
[]@#¬±/√∑'""‚Äπ‚Ä∫.
‚Ä¶<>!;:?,‡•§¬ß
1234567890
qwertyuiop
asdfghjkl
zxcvbnm
OK_Layout_End
"
GQbPU2FR,MOK layout Nyiakeng Puachue Hmong,dksetiavan,YAML,Thursday 2nd of November 2023 06:47:43 AM CDT,"{
""title"":""Nyiakeng Puachue Hmong"",
""onScreen"":{
""main"":[
""[MC:ûÖÅ][MC:ûÖÇ][MC:ûÖÉ][MC:ûÖÑ][MC:ûÖÖ][MC:ûÖÜ][MC:ûÖá][MC:ûÖà][MC:ûÖâ][MC:ûÖÄ]"",
""[MC:ûÑó][MC:ûÑ¨][MC:ûÑ∞][MC:ûÑñ][MC:ûÑÉ][MC:ûÑò][MC:ûÑß][MC:ûÑ≥][MC:ûÑ®][MC:ûÑö][MC:ûÑπ]"",
""[MC:ûÑ§][MC:ûÑ¶][MC:ûÑè][MC:ûÑ¥][MC:ûÑÅ][MC:ûÑÑ][MC:ûÑî][MC:ûÑé][MC:ûÑâ][MC:ûÑª]"",
""[SHIFT][MC:ûÑã][MC:ûÑÜ][MC:ûÑà][MC:ûÑí][MC:ûÑú][MC:ûÑÖ][MC:ûÑÄ][MC:ûÑ∑][DEL]"",
""[TOOL][ALTGR:,][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""![MC:ûÖè]#[MC:ûÖé]%[MC:ûÑΩ]&*()"",
""[MC:ûÑô][MC:ûÑ™][MC:ûÑ≤][MC:ûÑë][MC:ûÑÇ][MC:ûÑê][MC:ûÑ´][MC:ûÑ±][MC:ûÑ©][MC:ûÑ°][MC:ûÑ∫]"",
""[MC:ûÑ•][MC:ûÑä][MC:ûÑù][MC:ûÑµ][MC:ûÑì][MC:ûÑü][MC:ûÑç][MC:ûÑá][MC:ûÑ£][MC:ûÑª]"",
""[SHIFT][MC:ûÑ∏][MC:ûÑõ][MC:ûÑå][MC:ûÑï][MC:ûÑû][MC:ûÑ¢][MC:ûÑ†][MC:ûÑº][DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
],

""sym"":[
""¬£¬•‚Ç¨$^&*()‚Ññ‚àö"",
""~`{}%_-=|+¬ß√∑"",
""@[]#/\' ∫¬´¬ª‚Äî‚Äê"",
""[SHIFT]‚Ä¶<>!;:? ‚Äπ‚Ä∫¬±‚Äì[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
],

""altGr"":[
""1234567890"",
""qwertyuiop"",
""asdfghjkl"",
""[SHIFT]zxcvbnm[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]
}
}
    
    "
3D91Mw3W,01. Student Information,Spocoman,C++,Thursday 2nd of November 2023 06:47:30 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string name;
    getline(cin, name);

    int age;
    cin >> age;

    double grade;
    cin >> grade;

    printf(""Name: %s, Age: %i, Grade: %.2f"", name.c_str(), age, grade);
    return 0;
}"
nurkvZRW,BTC Wallet Credentials have been reset,castlclass_20,GetText,Thursday 2nd of November 2023 06:41:39 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
admin:admin on 212.224.93.130
You can connect via SSH .
Regards"
1N9ATVya,Piccolo,Pijomir,JavaScript,Thursday 2nd of November 2023 06:38:04 AM CDT," 03. Piccolo function manageCars(input) {
    let parking = [];
    for (let entry of input) {
        let [command, car] = entry.split(', ');
        switch (command) {
            case 'IN': 
                if (!parking.includes(car)) {
                    parking.push(car);
                }
            
                break;
            case 'OUT': 
                if (parking.includes(car)) {
                    let index = parking.indexOf(car);
                    parking.splice(index, 1);
                }

                break;
        }
    }

    if (parking.length === 0) {
        console.log('Parking Lot is Empty');
    } else {
        let sortedCarNumbers = parking.sort((a, b) => a.localeCompare(b));
        sortedCarNumbers.forEach(a => console.log(a));
    }
}"
nYcy8tpV,Untitled,35657,C++,Thursday 2nd of November 2023 06:24:21 AM CDT,"#include <iostream>

using namespace std;


int main() {

	setlocale(LC_ALL, ""ru"");

	int number;
	int result = 0;

	for (int i = 0; i < 9; i++) {
		cout << ""–í–≤–µ–¥–∏—Ç–µ 0 –∏–ª–∏ 1: "";
		cin >> number;
		result += number;
	}

	if (result % 2 == 0) {
		cout << ""–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ"" << endl;
	}
	else {
		cout << ""–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ"" << endl;
	}

}"
h4XuGBM5,Untitled,35657,C++,Thursday 2nd of November 2023 06:02:19 AM CDT,"#include <iostream>

using namespace std;


int main() {

	setlocale(LC_ALL, ""ru"");

	int count;

	cout << ""–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "";
	cin >> count;

	int result = 0;

	for (int i = 0; i < count; i++) {
		result += 15 + i * 2;
	}

	cout << result << endl;

}"
gz3dx60Q,Linked List - count the average of the elements in the list,BlackWolfy,C++,Thursday 2nd of November 2023 06:00:14 AM CDT,"#include <iostream>
//struct for each separate node
struct Node {
    int data;
    Node* next;
    //constructor 
    Node(int value) {  
        data = value;
        next = nullptr;
    }
};
//struct for the linked list
struct LinkedList {
    Node* head;
    //constructor 
    LinkedList() {
        head = nullptr;  
    }
     void insert(int value) {
        Node* newNode = new Node(value);
        if (head == nullptr) {
            head = newNode; //create head node
        } else {
            Node* current = head;
            //while the next element in list exists
            while (current->next != nullptr) {
                current = current->next;
            }
            current->next = newNode;    //updates the next pointer to the current node
        }
    }
     void display() {
         Node* current = head;
         while (current != nullptr) {
             std::cout << current->data << "" -> "";
             current = current->next;
         }
         std::cout << ""nullptr"" << std::endl;
     }
     double average() {
         int sum = 0;
         int counter = 0;
         if (head == nullptr) {
             return 0.0;
         }
         Node* current = head;
         while (current != nullptr) {
             sum += current->data;
             counter++;
             current = current->next;
         }
         return sum / (counter * 1.0);
     }
};
int main()
{
    LinkedList myList;
    int n;
    std::cout << ""Enter the number of values to insert: "";
    std::cin >> n;

   for (int i = 0; i < n; i++) {
        int value;
        std::cout << ""Enter a value: "";
        std::cin >> value;
        myList.insert(value); //Call the insert function
    }
    myList.display();   // Call the display function
    double average = myList.average();
    std::cout << ""Average value of list: ""<<average;
}"
AFBwtt7H,Redstone Functions,JaMaNi133,Lua,Thursday 2nd of November 2023 05:59:53 AM CDT,"function updatePort(port,state)
    local col = tostring(port.color)
    if state == true AND port.invert == false then
        rednet.send(port.computer,65536+col)
    elseif state == false AND port.invert == false then
        rednet.send(port.computer,col)
    elseif state == true AND port.invert == true then
        rednet.send(port.computer,col)
    elseif state == false AND port.invert == true then
        rednet.send(port.computer,65536+col)
    end
end

function updateBusses(device)
    updateBus(device.BusA)
    updateBus(device.BusB)
    updateBus(device.BusC)
end

function updateBus(bus)
    local states = {{""NA"",			p1=nil,		p2=nil	},
        			{""ValveClosed"",	p1=false,	p2=nil	},
        			{""ValveOpen"",	p1=true,	p2=nil	},
        			{""PumpOff"",		p1=true,	p2=nil	},
        			{""MonoPumpIn"",	p1=false,	p2=nil	},
        			{""MonoPumpOut"",	p1=false,	p2=nil	},
        			{""PumpIn"",		p1=false,	p2=false},
        			{""PumpOut"",		p1=false,	p2=true	}}
    updatePort(bus.Port1,states[bus.state].p1)
    updatePort(bus.Port2,states[bus.state].p2)
end



function updateRedstone()
	updateBuses(SmelteryA)
    updateBuses(SmelteryB)
    updateBuses(TankA)
    updateBuses(TankB)
end"
pE8E0rD1,Untitled,kwest87,C#,Thursday 2nd of November 2023 05:53:39 AM CDT,"[StartCode]
using System;

namespace ConsoleApp30
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string parentheses = ""(()(()))"";
            int parenthesesDepths = 0;
            int parenthesesMaximumDepths = 0;

            foreach (var sumbol in parentheses)
            {
                if (sumbol == '(')
                {
                    parenthesesDepths++;

                    if (parenthesesDepths > parenthesesMaximumDepths)
                    {
                        parenthesesMaximumDepths = parenthesesDepths;
                    }
                }
                else
                {
                    parenthesesDepths--;

                    if (parenthesesDepths < 0)
                    {
                        Console.WriteLine("" –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤–µ—Ä–Ω–æ "");
                        break;
                    }
                }
            }

            if (parenthesesDepths == 0)
            {
                Console.WriteLine($""–í—ã—Ä–∞–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω–æ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å {parenthesesMaximumDepths}"");
            }
            else if (parenthesesDepths > 0)
            {
                Console.WriteLine("" –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤–µ—Ä–Ω–æ "");
            }
        }
    }
}
[EndCode]"
L3m0Kbx0,MatN_Lab3_ex1.5,avalonswarlock,MatLab,Thursday 2nd of November 2023 05:45:24 AM CDT,"% n=input('Please enter a number: ');
% X=zeros(n);
% for row=1:n
%     for col=1:n
%         X(row,col)=1/(row+col-1);
%     end
% end
% X

%%
n=input('Please enter a number: ');
X=zeros(n);
for row=1:n
    for col=1:n
        for a=1:n
            if X(a,a:n) == 0
                X(a,a:n)=a
            end
        end
    end
end
X"
6vyaBDwB,"Linked List (insert, display)",BlackWolfy,C++,Thursday 2nd of November 2023 05:44:07 AM CDT,"#include <iostream>
//struct for each separate node
struct Node {
    int data;
    Node* next;
    //constructor 
    Node(int value) {  
        data = value;
        next = nullptr;
    }
};
//struct for the linked list
struct LinkedList {
    Node* head;
    //constructor 
    LinkedList() {
        head = nullptr;  
    }
     void insert(int value) {
        Node* newNode = new Node(value);
        if (head == nullptr) {
            head = newNode; //create head node
        } else {
            Node* current = head;
            //while the next element in list exists
            while (current->next != nullptr) {
                current = current->next;
            }
            current->next = newNode;    //updates the next pointer to the current node
        }
    }
     void display() {
         Node* current = head;
         while (current != nullptr) {
             std::cout << current->data << "" -> "";
             current = current->next;
         }
         std::cout << ""nullptr"" << std::endl;
     }
};
int main()
{
    LinkedList myList;
    int n;
    std::cout << ""Enter the number of values to insert: "";
    std::cin >> n;

   for (int i = 0; i < n; i++) {
        int value;
        std::cout << ""Enter a value: "";
        std::cin >> value;
        myList.insert(value); //Call the insert function
    }
    myList.display();   // Call the display function
}"
14LPkU5q,Excel sior,bipping,VisualBasic,Thursday 2nd of November 2023 05:42:14 AM CDT,"Sub NumeroterColonneA()
    Dim LastRow As Long
    Dim i As Long
    Dim Count As Long
    Dim ws As Worksheet

    Set ws = ThisWorkbook.Sheets(""Feuil1"")
   
    ' Trouver la derni√®re ligne avec des donn√©es dans la colonne D
    LastRow = ws.Cells(ws.Rows.Count, ""D"").End(xlUp).Row

    Count = 1 ' Initialisation du compteur √† 1

    For i = 3 To LastRow
        ' Si la cellule en colonne D n'est pas vide, alors...
        If Not IsEmpty(ws.Cells(i, 4)) Then
            ' Attribuer le num√©ro dans la colonne A
            ws.Cells(i, 1).Value = Count
            Count = Count + 1
        Else
            ' Si la cellule en colonne D est vide, laisser la cellule en colonne A vide
            ws.Cells(i, 1).Value = """"
        End If
    Next i

    ' Parcourir √† nouveau pour s'assurer que les cellules vides en colonne A prennent la valeur de la derni√®re cellule non vide
    For i = 4 To LastRow
        If ws.Cells(i, 1).Value = """" And ws.Cells(i - 1, 1).Value <> """" Then
            ws.Cells(i, 1).Value = ws.Cells(i - 1, 1).Value + 1
        End If
    Next i
End Sub"
atzj8qi3,Roblox Server Location Board Thing,scriptingtales,Lua,Thursday 2nd of November 2023 05:37:24 AM CDT,"--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k==""script"" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new(""Model"",game:GetService(""Lighting""))
Part0 = Instance.new(""Part"")
SurfaceGui1 = Instance.new(""SurfaceGui"")
TextLabel2 = Instance.new(""TextLabel"")
Script3 = Instance.new(""Script"")
Part0.Name = ""Board""
Part0.Parent = mas
Part0.CFrame = CFrame.new(16.5, 5.5, 12.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part0.Position = Vector3.new(16.5, 5.5, 12.5)
Part0.Size = Vector3.new(15, 11, 1)
Part0.Anchored = true
Part0.BackSurface = Enum.SurfaceType.Studs
Part0.BottomSurface = Enum.SurfaceType.Studs
Part0.FrontSurface = Enum.SurfaceType.Studs
Part0.LeftSurface = Enum.SurfaceType.Studs
Part0.RightSurface = Enum.SurfaceType.Studs
SurfaceGui1.Name = ""GUISur""
SurfaceGui1.Parent = Part0
SurfaceGui1.LightInfluence = 1
SurfaceGui1.ClipsDescendants = true
SurfaceGui1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
SurfaceGui1.MaxDistance = 1000
TextLabel2.Name = ""Loc""
TextLabel2.Parent = SurfaceGui1
TextLabel2.Size = UDim2.new(0, 800, 0, 600)
TextLabel2.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel2.BorderColor = BrickColor.new(""Really black"")
TextLabel2.BorderColor3 = Color3.new(0, 0, 0)
TextLabel2.BorderSizePixel = 0
TextLabel2.Font = Enum.Font.SourceSans
TextLabel2.FontSize = Enum.FontSize.Size14
TextLabel2.TextColor = BrickColor.new(""Really black"")
TextLabel2.TextColor3 = Color3.new(0, 0, 0)
TextLabel2.TextScaled = true
TextLabel2.TextSize = 14
TextLabel2.TextWrap = true
TextLabel2.TextWrapped = true
Script3.Name = ""Work""
Script3.Parent = Part0
table.insert(cors,sandbox(Script3,function()
--Made by Collin201/rnelee/Big7Rich
Instance.new(""RemoteEvent"", game.ReplicatedStorage)


local HttpService = game:GetService(""HttpService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")





local ServerUpdate = ReplicatedStorage.RemoteEvent

local Success, ErrorMessage = pcall(function()
	local Response = HttpService:GetAsync(""http://ip-api.com/json/"", true)
	local Data = HttpService:JSONDecode(Response)
	local Country= Data.country
	local City = Data.city
	local CountryCode = Data.countryCode    -- You can change ""timezone"" to ""country"" or ""countryCode""

	if Data.status == ""success"" then
		script.Parent.GUISur.Loc.Text = ""Server Location: "" .. Country.."", "".. City.. "", "".. CountryCode --- This tells the location
		ServerUpdate:FireAllClients(Country)
	end
end)

while true do
	script.Parent.GUISur.Loc.Text = ""Retrieving location""
	wait(0.5)
	script.Parent.GUISur.Loc.Text = ""Retrieving location.""
	wait(0.5)
	script.Parent.GUISur.Loc.Text = ""Retrieving location..""
	wait(0.5)
	script.Parent.GUISur.Loc.Text = ""Retrieving location...""
	wait(0.5)
	
	if Success then
		break
	end
end

if not Success and not game.ReplicatedStorage.RemoteEvent then
	warn(""There was an error retrieving server location / RemoteEvent was not detected."")
	warn(ErrorMessage)
	script.Parent.GUISur.Loc.Text = ""There was an error retrieving server location / RemoteEvent was not detected.""
end
end))
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end
"
ndRPY42X,Untitled,35657,C++,Thursday 2nd of November 2023 05:31:20 AM CDT,"#include <iostream>

using namespace std;


int main() {

	setlocale(LC_ALL, ""ru"");

	int x;

	int sum = 0;

	cout << ""–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "";
	cin >> x;

	for (; x > 0; x /= 10) {
		sum += x % 10;
	}

	cout << sum << endl;

}"
8JbUJMvC,Simple example script to launch my brcalc.py Bitrate Calculator,subbass,Bash,Thursday 2nd of November 2023 05:29:02 AM CDT,"#!/bin/bash
#
# 
#    CHANGE PATHS TO WHERE YOU WANT YOUR /VENV/ folder! 
#    Your home folder isn't likely ""subbass""!
#

# Navigate to the directory where your script and venv are located (if necessary)
cd /home/subbass/bin/

# Activate the virtual environment
source venv/bin/activate

# Run the Python script
python3 brcalc.py

# Deactivate the virtual environment (optional)
deactivate"
HAWwPzUx,Bitrate Calculator so a video encode can meet a file size,subbass,Python,Thursday 2nd of November 2023 05:28:19 AM CDT,"""""""
Bitrate Calculator

Dependencies:
On Manjaro (Arch Linux based distribution), the following packages and Python libraries are needed to run this application:

System Packages:
1. python (Python 3) - Main programming language used for the script.
2. python-pip - Package manager to install Python libraries.

Python Libraries:
1. tkinter - Standard GUI toolkit for Python.
2. moviepy - For video file processing.
3. numpy - Required by moviepy.
4. imageio - Required by moviepy.
5. imageio[ffmpeg] - ffmpeg plugin for imageio, required for video processing in moviepy.
6. tkinterdnd2 - Extension of tkinter to add drag-and-drop functionality.

Installation:
1. Install system packages:
   $ sudo pacman -S python python-pip

2. Install Python libraries:
   $ pip install tkinter moviepy numpy imageio imageio[ffmpeg] tkinterdnd2

Note:
- Ensure you have the necessary permissions to install the packages.
- It's recommended to use a virtual environment (like venv) to avoid potential conflicts with system packages.

    Start a VENV before running with:
    >$ source venv/bin/activate

    Alternatively use a BASH script to launch from a simple command which starts the VENV
    Example one:  https://pastebin.com/8JbUJMvC

Author: SubBASS
Date: 31/10/23
""""""

import tkinter as tk
from tkinterdnd2 import DND_FILES, Tk
from tkinter import ttk, filedialog
from moviepy.editor import VideoFileClip
import os
import subprocess
import wx

class App(Tk):
    def __init__(self):
        super().__init__()
        self.dnd_bind(self, DND_FILES, self.drop_file)
        self.title(""Bitrate Calculator"")

        # Input Duration Frame
        input_frame = ttk.LabelFrame(self, text=""Input Duration"")
        input_frame.pack(padx=10, pady=10, fill=tk.X)

        self.duration_var = tk.StringVar()
        self.duration_choice_var = tk.StringVar(value=""manual"")
        ttk.Radiobutton(input_frame, text=""Specify Minutes:"", value=""manual"", variable=self.duration_choice_var).grid(row=0, column=0, sticky=tk.E)
        self.duration_entry = ttk.Entry(input_frame, textvariable=self.duration_var)
        self.duration_entry.grid(row=0, column=1, sticky=tk.W)

        self.file_var = tk.StringVar()
        ttk.Radiobutton(input_frame, text=""Read from File:"", value=""file"", variable=self.duration_choice_var).grid(row=1, column=0, sticky=tk.E)
        ttk.Button(input_frame, text=""Browse"", command=self.load_file).grid(row=1, column=1, sticky=tk.W)

        # Display filename and its duration
        self.filename_display = ttk.Label(input_frame, text="""")
        self.filename_display.grid(row=2, column=1, sticky=tk.W)

        self.duration_display = ttk.Label(input_frame, text="""")
        self.duration_display.grid(row=3, column=1, sticky=tk.W)

        # Bitrate / Size Frame
        bitrate_frame = ttk.LabelFrame(self, text=""Bitrate / Size"")
        bitrate_frame.pack(padx=10, pady=10, fill=tk.X)

        self.audio_bitrate_var = tk.StringVar(value=""160"")
        ttk.Label(bitrate_frame, text=""Audio Bitrate (Kbps):"").grid(row=0, column=0, sticky=tk.E)
        ttk.Entry(bitrate_frame, textvariable=self.audio_bitrate_var).grid(row=0, column=1, sticky=tk.W)

        self.target_var = tk.StringVar(value=""10"")  # default to 10 MB
        ttk.Radiobutton(bitrate_frame, text=""Target Size (MB):"", value=""size"", variable=self.target_var).grid(row=1, column=0, sticky=tk.E)
        self.target_entry = ttk.Entry(bitrate_frame, textvariable=self.target_var)
        self.target_entry.grid(row=1, column=1, sticky=tk.W)


        self.result_var = tk.StringVar(value="""")  # this will store the result
        ttk.Button(self, text=""Calculate"", command=self.calculate).pack(pady=10)

        self.result_label = ttk.Label(self, text="""", font=(""Arial"", 12), relief=""solid"", padding=(50, 10))
        self.result_label.pack(pady=10)

        self.open_ghb_button = ttk.Button(self, text=""Open in Handbrake"", command=self.open_in_ghb)
        self.open_ghb_button.pack(padx=5)


        self.last_dir = os.path.expanduser(""~/Videos"")
        if not os.path.exists(self.last_dir):
                self.last_dir = os.path.expanduser(""~"")
        
        self.geometry(""500x360"")

#    def load_file(self):
#        filepath = filedialog.askopenfilename(initialdir=self.last_dir if self.last_dir else None)
#        if filepath:
#            self.last_dir = '/'.join(filepath.split('/')[:-1])
#            self.file_var.set(filepath)
#            clip = VideoFileClip(filepath)
#            self.display_file_info(clip)
#            self.calculate(clip)
#            clip.close()

    def load_file(self):
        app = wx.App(None)
        #file_dialog = wx.FileDialog(None, ""Choose a video file"", self.last_dir, """", ""*.*"", wx.FD_OPEN)
        file_dialog = wx.FileDialog(None, ""Choose a video file"", self.last_dir, """", ""*.*"", wx.FD_OPEN | wx.LC_LIST)
        if file_dialog.ShowModal() == wx.ID_OK:
            filepath = file_dialog.GetPath()
            # Store the directory for the next time
            self.last_dir = os.path.dirname(filepath)
            if filepath:
                self.file_var.set(filepath)
                clip = VideoFileClip(filepath)
                self.display_file_info(clip)
                self.calculate(clip)
                clip.close()
        file_dialog.Destroy()


    def drop_file(self, event):
        print(""File dropped!"")  # Debugging line
        filepath = event.data
        if filepath:
            self.file_var.set(filepath)
            clip = VideoFileClip(filepath)
            self.display_file_info(clip)
            self.calculate(clip)
            clip.close()

    def calculate(self, clip=None):
        filepath = self.file_var.get()
        if not filepath:
            filepath = filedialog.askopenfilename()
            if not filepath:
                return
        try:
            if not clip:
                clip = VideoFileClip(filepath)

            audio_bitrate = int(self.audio_bitrate_var.get())
            target_size_kb = float(self.target_var.get()) * 1024 * 8  # convert MB to Kb

            video_duration = clip.duration  # duration in seconds

            required_bitrate = (target_size_kb - audio_bitrate * video_duration) / video_duration
            bitrate_text = f""Video Bitrate: {required_bitrate:.2f} Kbps""
            self.result_label.config(text=bitrate_text)
            self.set_clipboard(str(int(required_bitrate)))
        except Exception as e:
            self.result_label.config(text=f""Error: {str(e)}"")
        finally:
            if clip:
                clip.close()

    def display_file_info(self, clip):
        video_duration = clip.duration
        minutes, seconds = divmod(video_duration, 60)
        self.duration_var.set(f""{int(minutes)}:{int(seconds)}"")
        # Update labels to show file name and duration
        filename = clip.filename.split(""/"")[-1]
        self.filename_display.config(text=f""File: {filename}"")
        self.duration_display.config(text=f""Duration: {int(minutes)}m {int(seconds)}s"")

    def set_clipboard(self, text):
        self.clipboard_clear()
        self.clipboard_append(text)
        self.update()  # This is necessary to finalize the clipboard action

    def open_in_ghb(self):
        filepath = self.file_var.get()
        if filepath:
            # Escaping spaces in the filename
            #escaped_filepath = filepath.replace("" "", r""\ "")
            # Run the ghb command with the file path as an argument
            #subprocess.run([""ghb"", escaped_filepath])
            subprocess.Popen([""ghb"", filepath])

if __name__ == ""__main__"":
    app = App()
    app.mainloop()
"
EUrTqfQy,Untitled,gurkalov,Go,Thursday 2nd of November 2023 05:22:55 AM CDT,"func GetResults(count int) []Data {
    var (
        wg      sync.WaitGroup
        results []Data
    )
    for i := 1; i <= count; i++ {
        wg.Add(1)
        go func() {
            res, err := http.Get(fmt.Sprintf(""%s/%d"", url, i))
            if err != nil {
                fmt.Printf(""error making http request: %s\n"", err)
            }
            resBody, err := ioutil.ReadAll(res.Body)
            if err != nil {
                fmt.Printf(""client: could not read response body: %s\n"", err)
            }
            results = append(results, parseData(resBody))
            wg.Done()
        }()
    }
    wg.Wait()
    return results
}"
GFbGM5sR,Untitled,joaopedros2,C++,Thursday 2nd of November 2023 05:06:11 AM CDT,"#include ""Arduino.h""
#include ""LoRaWan_APP.h""

// ----------------------------------------------------------------------------
// LoRa Configs
// ----------------------------------------------------------------------------

#define RF_FREQUENCY                433000000  // Hz

#define TX_OUTPUT_POWER             17         // dBm

#define LORA_BANDWIDTH              0          // [0: 125 kHz, 1: 250 kHz, 2: 500 kHz, 3: Reserved]

#define LORA_SPREADING_FACTOR       9          // [SF7..SF12]
#define LORA_CODINGRATE             4          // [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]

#define LORA_PREAMBLE_LENGTH        8          // Same for Tx and Rx
#define LORA_SYMBOL_TIMEOUT         0          // Symbols
#define LORA_FIX_LENGTH_PAYLOAD_ON  false
#define LORA_IQ_INVERSION_ON        false

#define RX_TIMEOUT_VALUE            1000
#define BUFFER_SIZE                 30         // Define the payload size here

char txpacket[BUFFER_SIZE];
char rxpacket[BUFFER_SIZE];

bool lora_idle=true;

static RadioEvents_t RadioEvents;
void OnTxDone( void );
void OnTxTimeout( void );

// ----------------------------------------------------------------------------
// Define Pins
// ----------------------------------------------------------------------------

#define LED_PIN                     35        // Define the LED pin

#define VBAT_PIN                    1          // Define the battery voltage pin
#define VBAT_READ_CNTRL_PIN         37         // Control pin for battery voltage reading

#define MOISTURE_PIN                7          // Define the moisture sensor pin
#define MOISTURE_PIN_POWER          6          // Define the moisture sensor pin power

// ----------------------------------------------------------------------------
// Settings
// ----------------------------------------------------------------------------

//For Sector Number
const int SECTOR_NUMBER = 2;                   // Define the sector number

//For Deep Sleep Mode
const uint32_t DEEP_SLEEP_TIME = 5;           // Define the time duration in minutes

// ----------------------------------------------------------------------------
// Moving Average
// ----------------------------------------------------------------------------

#define WINDOW_SIZE 1000

int INDEX = 0;
int SUM = 0;
int READINGS[WINDOW_SIZE];
int AVERAGED = 0;

// ----------------------------------------------------------------------------
// Global Variables
// ----------------------------------------------------------------------------

int batteryValue = 0;

// ----------------------------------------------------------------------------
// Function to read sensor values and update moving average
// ----------------------------------------------------------------------------

void initializeMovingAverage(int& index, int& sum, int* readings, int& averaged, int window_size, int sensor_pin) {
  int value = analogRead(sensor_pin);
  for (int i = 0; i < window_size; i++) {
    readings[i] = value;
    sum += value;
  }
  averaged = sum / window_size;
}

void updateSensorValues(int& index, int& sum, int* readings, int& averaged, int window_size, int sensor_pin) {
  sum = sum - readings[index];
  int value = analogRead(sensor_pin);
  readings[index] = value;
  sum = sum + value;
  index = (index + 1) % window_size;
  averaged = sum / window_size;
}

// ----------------------------------------------------------------------------
// Function to read BATTERY sensor values
// ----------------------------------------------------------------------------

int readBatterySensor() {
  unsigned long startTime = millis();
  while (millis() - startTime < 5000) {
    updateSensorValues(INDEX, SUM, READINGS, AVERAGED, WINDOW_SIZE, VBAT_PIN);
  }
  return AVERAGED;
}

// ----------------------------------------------------------------------------
// Function to read MOISTURE sensor values
// ----------------------------------------------------------------------------

int readMoistureSensor() {
  unsigned long startTime = millis();
  while (millis() - startTime < 5000) {
    updateSensorValues(INDEX, SUM, READINGS, AVERAGED, WINDOW_SIZE, MOISTURE_PIN);
  }
  return AVERAGED;
}

// ----------------------------------------------------------------------------
// Function to Enter in Deep Sleep Mode
// ----------------------------------------------------------------------------

void deepSleep() {

  // Set the MOISTURE_PIN_POWER pin off
  digitalWrite(MOISTURE_PIN_POWER, LOW);
  delay(100);
  
  // Put LoRa radio to sleep
  Radio.Sleep();
  delay(100);
  
  // End SPI communication
  SPI.end();
  delay(100);
  
  // Set pins as an analog input to save power
  pinMode(RADIO_DIO_1, ANALOG);
  pinMode(RADIO_NSS, ANALOG);
  pinMode(RADIO_RESET, ANALOG);
  pinMode(RADIO_BUSY, ANALOG);
  pinMode(LORA_CLK, ANALOG);
  pinMode(LORA_MISO, ANALOG);
  pinMode(LORA_MOSI, ANALOG);
  delay(100);
  
  // Configure power domains to optimize power consumption
  //esp_sleep_pd_config(ESP_PD_DOMAIN_RTC_PERIPH,   ESP_PD_OPTION_OFF); // Turn off RTC peripherals
  //esp_sleep_pd_config(ESP_PD_DOMAIN_RTC_SLOW_MEM, ESP_PD_OPTION_OFF); // Turn off RTC slow memory
  //esp_sleep_pd_config(ESP_PD_DOMAIN_RTC_FAST_MEM, ESP_PD_OPTION_OFF); // Turn off RTC fast memory
  //esp_sleep_pd_config(ESP_PD_DOMAIN_XTAL,         ESP_PD_OPTION_OFF); // Turn off the crystal oscillator

  // Enable timer wake-up for deep sleep
//  esp_sleep_enable_timer_wakeup(DEEP_SLEEP_TIME * 60 * 1000000);

  // Enable timer wake-up for deep sleep if battery level is sufficient
  if (batteryValue >= 812) {
    esp_sleep_enable_timer_wakeup(DEEP_SLEEP_TIME * 60 * 1000000);
  }

  Serial.printf(""\nEntering deep sleep mode for %u %s...\n"", DEEP_SLEEP_TIME, (DEEP_SLEEP_TIME == 1) ? ""minute"" : ""minutes"");
  delay(100);

  // Enter deep sleep mode
  esp_deep_sleep_start();
}

// ----------------------------------------------------------------------------
// Function to blink LED
// ----------------------------------------------------------------------------

void blinkLED() {
  digitalWrite(LED_PIN, HIGH); // LED on
  delay(200);
  digitalWrite(LED_PIN, LOW); // LED off
  delay(10);
}

// ----------------------------------------------------------------------------

void setup() {
  
  Serial.begin(115200);
  
  // Set the LED pin as an output
  pinMode(LED_PIN, OUTPUT);

  // Set the VBAT_READ_CNTRL_PIN pin to turn it off
  pinMode(VBAT_READ_CNTRL_PIN, OUTPUT);
  digitalWrite(VBAT_READ_CNTRL_PIN, LOW);

  // Set the MOISTURE_PIN_POWER pin to turn it on
  pinMode(MOISTURE_PIN_POWER, OUTPUT);
  digitalWrite(MOISTURE_PIN_POWER, HIGH);

  delay(2000);

  Mcu.begin();
  Serial.println(""\nInitializing LoRa Radio..."");
  
  RadioEvents.TxDone = OnTxDone;
  RadioEvents.TxTimeout = OnTxTimeout;
  
  Radio.Init( &RadioEvents );
  Radio.SetChannel( RF_FREQUENCY );
  Radio.SetTxConfig( MODEM_LORA, TX_OUTPUT_POWER, 0, LORA_BANDWIDTH,
                                 LORA_SPREADING_FACTOR, LORA_CODINGRATE,
                                 LORA_PREAMBLE_LENGTH, LORA_FIX_LENGTH_PAYLOAD_ON,
                                 true, 0, 0, LORA_IQ_INVERSION_ON, 3000 );

  if(lora_idle == true) {
    
    delay(1000);

    Serial.println(""\nGetting Analog Values from the sensors..."");

    int batteryValue = readBatterySensor();
    int moistureValue = readMoistureSensor();

//    int batteryValue = analogRead(VBAT_PIN);
//    int moistureValue = analogRead(MOISTURE_PIN);

    Serial.print(""Battery: "");
    Serial.println(batteryValue);
    Serial.print(""Moisture: "");
    Serial.println(moistureValue);
    
    // Start a package
    sprintf(txpacket, ""%d:%d:%d"", SECTOR_NUMBER, batteryValue, moistureValue);
   
    Serial.printf(""\r\nSending Packet: \""%s\"", length %d\r\n"",txpacket, strlen(txpacket));
    
    // Send the package out 
    Radio.Send((uint8_t *)txpacket, strlen(txpacket));
    lora_idle = false;
  }
}

// ----------------------------------------------------------------------------

void loop() {
  
  Radio.IrqProcess();
}

// ----------------------------------------------------------------------------

void OnTxDone( void ) {

  Serial.println(""TX done......"");
  lora_idle = true;

  // Blink the LED when sending the package out
  blinkLED();

  delay(100);
  deepSleep();
}

// ----------------------------------------------------------------------------

void OnTxTimeout( void ){

  Serial.println(""TX Timeout......"");
  lora_idle = true;

  delay(100);
  deepSleep();
}"
MYqyPHdi,Catalogue,Pijomir,JavaScript,Thursday 2nd of November 2023 05:01:31 AM CDT,"function createStoreCatalogue(input) {
    let catalogue = {};
    for (let productInfo of input) {
        let [productName, productPrice] = productInfo.split(' : ');
        let initial = productName[0];
        if (!catalogue.hasOwnProperty(initial)) {
            catalogue[initial] = {};
        }

        catalogue[initial][productName] = productPrice
    }

    let sortedCatalogue = Object.entries(catalogue).sort((a, b) => a[0].localeCompare(b[0]));
    for (let [initial, productsInfo] of sortedCatalogue) {
        console.log(initial);
        let sortedProductInfo = Object.entries(productsInfo).sort((a, b) => a[0].localeCompare(b[0]));
        sortedProductInfo.forEach(a => console.log(`  ${a[0]}: ${a[1]}`));
    }
}"
tNyX9gMU,MatN_Lab2_ex1.4,avalonswarlock,MatLab,Thursday 2nd of November 2023 04:58:03 AM CDT,"clear
close
clc

n=input('Hello, input number: ')
h=1/(n-1);
D=-30*eye(n)

for i=1:n-2
    D(i,i+1)=16;
    D(i,i+2)=-1;
end

D

for i=2:n
    D(i,i-1)=16;
    if i>=3
        D(i,i-2)=-1; 
    end
end

D(n-1,n)=16


b=zeros(n,1);

hold on 
for k=(1:n)
    b(k)=12*h^2*cos(2*pi*(k-1)/(n-1));
    x=D\b;
end

plot(1:n,x,'g*');

xlabel('k');
ylabel('x_k');
title('LES solution');"
KTG9rsdr,Untitled,35657,C++,Thursday 2nd of November 2023 04:56:04 AM CDT,"#include <iostream>

using namespace std;


int main() {

	setlocale(LC_ALL, ""ru"");

	int x;

	cout << ""–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "";
	cin >> x;

	for (; x > 0; x /= 10) {
		cout << x % 10;
	}

}"
MWQUV1i1,Untitled,kwest87,C#,Thursday 2nd of November 2023 04:50:19 AM CDT,"[StatCode]
using System;

namespace ConsoleApp29
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int startNumber = 2;
            int multipleNumber = startNumber;
            int degreeNumber = 1;
            int minimumNumber = 1;
            int maximumNumber = 100;
            int numberRandom = random.Next(minimumNumber, maximumNumber);

            while (startNumber<numberRandom)
            {
                startNumber *= multipleNumber;
                degreeNumber++;
            }

            Console.WriteLine($""–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - {numberRandom} , –æ–Ω–æ –º–µ–Ω—å—à–µ —á–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å {multipleNumber} –≤ —Å—Ç–µ–ø–µ–Ω–∏ {degreeNumber} –∏–ª–∏ {startNumber}"");
        }
    }
}
[EndCode]"
Wq1Kb7iF,MatN_Lab2_ex1.3,avalonswarlock,MatLab,Thursday 2nd of November 2023 04:35:04 AM CDT,"clear
close
clc

n=input('Hello, input number: ')
h=1/(n-1);
D=-1*eye(n);

for i=1:n-1
    D(i,i+1)=1;
end

D

b=zeros(n,1);

hold on 
for k=(1:n)
    b(k)=h*cos(2*pi*(k-1)/(n-1));
    x=D\b;
end

plot(1:n,x,'b-');

xlabel('k');
ylabel('x_k');
title('LES solution');"
Xgdybngc,Untitled,kwest87,C#,Thursday 2nd of November 2023 04:22:21 AM CDT,"[StartCode]
using System;

namespace ConsoleApp28
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int multipleNumber = 0;
            int minimumNumber = 1;
            int maximumNumber = 28;
            int naturalMinimumNumber = 100;
            int naturalMaximumNumber = 999;
            int number = random.Next(minimumNumber, maximumNumber);

            for (int i = 0; i <= naturalMaximumNumber; i += number)
            {
                if (i >= naturalMinimumNumber)
                {
                    multipleNumber++;
                }
            }

            Console.WriteLine($""{multipleNumber} —Ç—Ä–µ—Ö–∑–Ω–∞—á–Ω—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ –∫—Ä–∞—Ç–Ω—ã—Ö {number}"");
        }
    }
}
[EndCode]"
bx8W5b1q,"Get campaigns titles from ""Person. Bar campaigns"" folder.",bogdanlinee1234,JavaScript,Thursday 2nd of November 2023 03:43:33 AM CDT,"(async function () {
    var URL = 'https://adoric.com/v1/campaigns?folder=650beac9905ab300247fd5ef&order=updatedAt&dir=desc&layout=all&viewName=tableCampaignsRowTemplate&archive=null&keyword=&queryParams=%7B%7D&tz=-120&timeOffset=120&start=0&length=1000';
    var request = await fetch(URL);
    var data = await request.json();
    var result = '';

    for (var item of data.campaignsData) {
        result += item.campaign.campaignTitle.trim() + '\n';
    }

    console.log(result);
})();"
zYpB2adW,CF600E divide and conquer,pb_jiang,C++,Thursday 2nd of November 2023 03:36:13 AM CDT,"// Problem: E. Lomsat gelral
// Contest: Codeforces - Educational Codeforces Round 2
// URL: https://codeforces.com/problemset/problem/600/E
// Memory Limit: 256 MB
// Time Limit: 2000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vl = vector<ll>;
using vi = vector<int>;
using a2l = array<ll, 2>;

int main(int argc, char **argv)
{
    int n, x, y;
    cin >> n;
    vi vc(n + 1);
    for (int i = 1; i <= n; ++i)
        cin >> vc[i];
    vector<vi> g(n + 1);
    for (int i = 1; i < n; ++i)
        cin >> x >> y, g[x].push_back(y), g[y].push_back(x);

    int dcnt = 0;
    vi dfn(n + 1), idx(n + 1), dsize(n + 1);
    function<int(int, int)> dfs = [&](int u, int fa) {
        dsize[u] = 1, dfn[u] = ++dcnt, idx[dcnt] = u;
        for (auto v : g[u])
            if (v != fa)
                dsize[u] += dfs(v, u);
        return dsize[u];
    };
    dfs(1, -1);

    vl ans(n + 1);
    vi ccnt(n + 1), opts;
    ll max_freq = 0, acc = 0;
    auto inc_color_cnt = [&](int c) -> ll {
        opts.push_back(c);
        ccnt[c] += 1;
        if (ccnt[c] == max_freq) {
            acc += c;
        } else if (ccnt[c] > max_freq) {
            max_freq = ccnt[c];
            acc = c;
        }
        return acc;
    };
    auto clear_color = [&]() {
        max_freq = acc = 0;
        while (opts.size()) {
            ccnt[opts.back()]--;
            opts.pop_back();
        }
    };
    function<void(int, int)> bisearch = [&](int l, int r) {
        if (l == r) {
            ans[idx[l]] = vc[idx[l]];
            return;
        }

        int mid = l + r >> 1;
        bisearch(l, mid), bisearch(mid + 1, r);
        clear_color();

        int p = mid;
        for (int i = mid; i >= l; --i) {
            int j = i + dsize[idx[i]] - 1;
            if (j > r)
                break;
            ll last = inc_color_cnt(vc[idx[i]]);
            if (j <= mid)
                continue;
            while (p < j)
                last = inc_color_cnt(vc[idx[++p]]);
            ans[idx[i]] = last;
        }
    };
    bisearch(1, n);

    for (int i = 1; i <= n; ++i)
        cout << ans[i] << ' ';
    cout << endl;
};
"
59QGwDyH,Simple calculator,Elfik,JavaScript,Thursday 2nd of November 2023 03:36:07 AM CDT,"function calculator(stringCalculation) {
  let numbers = []
  let operators = []
  let currentDigits = ''

  for (let i = 0; i < stringCalculation.length + 1; i++) {
    const currentSymbol = stringCalculation[i]
    const number = parseInt(currentSymbol)
    
    if (Number.isNaN(number)) {
      numbers.push(parseInt(currentDigits))
      
      if (currentSymbol) {
        operators.push(currentSymbol)
      }

      currentDigits = ''
    } else {
      currentDigits += number
    }
  }
  
  return calculate(numbers, operators)
}

function action(arg1, arg2, operator) {
  switch (operator) {
    case ""+"":
      return arg1 + arg2;
    case ""*"":
      return arg1 * arg2;
  }
  
  return 0
}

const symbolPriority = ['*', ':', '+', '-']

function calculate(numbers, operators) {
  if (operators.length === 0) {
    return numbers[0] ?? 0
  }
  
  let index = -1
  for (let i = 0; i < symbolPriority.length; i++) {
    index = operators.indexOf(symbolPriority[i])
    if (index !== -1) {
      break;
    }
  }
    
  const firstPart = numbers.slice(0, index)
  const secondPart = numbers.slice(index + 2)
  const localResult = action(numbers[index], numbers[index + 1], operators[index])

  const newNumbers = [...firstPart, localResult, ...secondPart]
  const newOperators = operators.filter((_, idx) => idx !== index)

  return calculate(newNumbers, newOperators)
}

calculator(""11+2*3+4"")"
5CbXdRg4,"ESD_Windows 11, Version 22H2 (22621.1702 - Updated May 2023)",Mini96,TypeScript,Thursday 2nd of November 2023 03:21:06 AM CDT,"ESD_Windows 11, Version 22H2 (22621.1702 - Updated May 2023)
Windows 11, Version 22H2 (build 22621.1702 - Updated May 2023)

üì¢ 22621.1702.230505-1222.ni_release_svc_refresh_

üì¢ Source-> https://files.rg-adguard.net/files/98ea9f3d-1a95-a9e0-b857-d8404eed9e2f | https://pastebin.com/8auYQh0g

esd decrypter wimlib 64 by abbodi1406: https://github.com/abbodi1406/WHD/raw/master/scripts/esd-decrypter-wimlib-64.7z
esd decrypt-multi-release v201021 by adguard: https://s1.rg-adguard.net/dl/decrypt/decrypt-multi-release_v201021.7z


üéÅThanksüéâ
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
üìå ClientConsumer Retatil 7in1 = Home + Home N + Home Single Language + Education + Education N + Pro + Pro N
 
    64-bit (x64): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/ec26d435-5d20-4563-9c75-b7726e55f93b/22621.1702.230505-1222.ni_release_svc_refresh_CLIENTCONSUMER_RET_x64FRE_en-us.esd
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
üìå ClientBusiness Volume 6in1= Windows 10 Education + Education N + Pro + Pro N + Enterprise + Enterprise N
 
    64-bit (x64): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/92a06579-1d99-4fb8-b127-6fdcf50b1a7f/22621.1702.230505-1222.ni_release_svc_refresh_CLIENTBUSINESS_VOL_x64FRE_en-us.esd
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	"
b7Vqqu3b,Untitled,ValentinSt,C++,Thursday 2nd of November 2023 03:18:04 AM CDT,"#include <iostream>
#include <cstring>

using namespace std;

void sort(int* arr, int n) {
    /* A se completa */
}

void printArray(int* arr, int n) {
    for (int i = 0; i < n; i++) {
        printf(""%d "", arr[i]);
    }
    printf(""\n"");
}

int main() {
    int array[] = {3, 8, 4, 2, 5, 6};
    int n = 6;

    *(array + 1) <<= 2;
    int *a = array + 2;
    int b = 6;
    memcpy(a, &b, sizeof(int));

    int *c = array + 4;
    b = 11 ^ 5 * 5;
    memcpy(c, &b, sizeof (int));
    printf(""%d\n"", *c);
    memset(c, 511, 1);
    printf(""%d\n"", *c);

    printArray(array, n); // ce va afisa?
    memcpy(array + 4, array + 2, sizeof (int) * 2);
    printf(""%d\n"", *(array + 4));
    printArray(array, n); // ce va afisa?

    sort(array, n);

    printf(""Sorted array is: \n"");
    printArray(array, n); // ce va afisa?

    return 0;
}
"
wKZFaaqw,"ESD_Windows 10, Version 22H2 (19045.2965 - Updated May 2023)",Mini96,TypeScript,Thursday 2nd of November 2023 03:13:11 AM CDT,"ESD_Windows 10, Version 22H2 (19045.2965 - Updated May 2023)

Windows 10, Version 22H2 (build 19045.2965 - Updated May 2023)


üì¢ 19045.2965.230505-1139.22h2_release_svc_refresh_

üì¢ Source-> https://files.rg-adguard.net/files/c8efe24d-7d53-8bf7-6a14-ec85e9337d2b || https://pastebin.com/SF77qXtg

esd decrypter wimlib 64 by abbodi1406: https://github.com/abbodi1406/WHD/raw/master/scripts/esd-decrypter-wimlib-64.7z

esd decrypt-multi-release v201021 by adguard: https://s1.rg-adguard.net/dl/decrypt/decrypt-multi-release_v201021.7z

üéÅThanksüéâ
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
üìå ClientConsumer Retatil 7in1 = Home + Home N + Home Single Language + Education + Education N + Pro + Pro N
 
    64-bit (x64): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/ed120f27-87b2-4f11-8b7c-5d678448a4aa/19045.2965.230505-1139.22h2_release_svc_refresh_CLIENTCONSUMER_RET_x64FRE_en-us.esd

    32-bit (x86): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/581418c3-3efa-45d0-a6cc-e90c0bd9a32c/19045.2965.230505-1139.22h2_release_svc_refresh_CLIENTCONSUMER_RET_x86FRE_en-us.esd
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
üìå ClientBusiness Volume 6in1= Windows 10 Education + Education N + Pro + Pro N + Enterprise + Enterprise N
 
    64-bit (x64): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/210a8119-25aa-4860-80eb-75653b948800/19045.2965.230505-1139.22h2_release_svc_refresh_CLIENTBUSINESS_VOL_x64FRE_en-us.esd

    32-bit (x86): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/d864f5b9-2c2d-4e46-8818-0251e126339e/19045.2965.230505-1139.22h2_release_svc_refresh_CLIENTBUSINESS_VOL_x86FRE_en-us.esd
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	"
euYyNawC,documentDTO,rvdraws,JSON,Thursday 2nd of November 2023 03:01:47 AM CDT,"{
                ""uuid"": ""Mzk1ODUxNjk4OTEyMDcxMTYy"",
                ""entityId"": 1,
                ""entity"": ""Lead"",
                ""path"": ""clientAndMembersDocument/NDY0ODkxNjk4OTA3MjA0Mzkx/Screenshot_(10)1698912071162.png"",
                ""documentType"": ""PAN"",
                ""description"": ""ABC""
            }"
NFdzxQqH,"ESD_Windows 11, Version 23H2 (22631.2428 - Updated October 2023)",Mini96,TypeScript,Thursday 2nd of November 2023 03:00:37 AM CDT,"ESD_Windows 11, Version 23H2 (22631.2428)
Windows 11, Version 23H2 (build 22631.2428 - Updated October 2023)

üì¢ 22631.2428.231001-0608.23H2_NI_RELEASE_SVC_REFRESH_

üì¢ Source-> https://files.rg-adguard.net/files/141978b1-9afc-4fe0-6415-bcb185d6cd57 | https://pastebin.com/6KEyKWwa

esd decrypter wimlib 64 by abbodi1406: https://github.com/abbodi1406/WHD/raw/master/scripts/esd-decrypter-wimlib-64.7z
esd decrypt-multi-release v201021 by adguard: https://s1.rg-adguard.net/dl/decrypt/decrypt-multi-release_v201021.7z

https://download.microsoft.com/download/d/5/e/d5e53f16-b327-4dd6-a082-70e5943d7287/products.xml

üéÅThanksüéâ
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
üìå ClientConsumer Retatil 7in1 = Home + Home N + Home Single Language + Education + Education N + Pro + Pro N
 
    64-bit (x64): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/601a0bce-5f6b-4993-9cdb-eb4af5e8d8e0/22631.2428.231001-0608.23H2_NI_RELEASE_SVC_REFRESH_CLIENTCONSUMER_RET_x64FRE_en-us.esd
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
üìå ClientBusiness Volume 6in1= Windows 10 Education + Education N + Pro + Pro N + Enterprise + Enterprise N
 
    64-bit (x64): http://dl.delivery.mp.microsoft.com/filestreamingservice/files/bdc4d17a-66dc-49e6-929d-76351db0f6ca/22631.2428.231001-0608.23H2_NI_RELEASE_SVC_REFRESH_CLIENTBUSINESS_VOL_x64FRE_en-us.esd
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	"
0hm2CV9G,Cursul 5,visoft,C,Thursday 2nd of November 2023 02:59:34 AM CDT,"#include <stdio.h>
#include <stdlib.h>

// tabel in functii
// struct in functii
// sir caractere
// hack caractere
// Tabel de struct

void setvar(int k){
    k=666;
}

void tabset(int tab[], int n){
    tab[0] = 100;
    tab[1] = 200;
}

void tabprint(int tab[], int n){
    for(int i=0;i<n; i++){
        printf(""%d "", tab[i]);
    }
    printf(""\n"");
}
#define N 5

typedef struct{
    float r, i;
} Complex;

void afisstruct(Complex tab[], int n){
    for(int i=0;i<n; i++){
        printf(""(%f, %f) "", tab[i].r, tab[i].i);
    }
    printf(""\n"");

}
void schstruct(Complex c){
    c.r = 100;
}

typedef struct{
    char nume[100];
    int nota;
}Elev;


int main()
{
    //int tab[N]={0};
    //tabprint(tab, N);
    //tabset(,4);
    //setvar(53453);
    //scanf(""%d"",tab);
    //tabprint(tab, N);

    Complex a;
    Complex tab[2]={{-1,0}, {0, -1}};
    //schstruct(tab[0]);
    //afisstruct(tab, 2);

    Elev tabel_elevi[100];
    scanf(""%s"", tabel_elevi[0].nume);
    scanf(""%d"", &tabel_elevi[0].nota);

  //  char tab[8]=""Popescu"";
  //  char parola_secreta[100]=""&*(^&"";
  //  char buffer[1000];
  //  printf(""%s\n"", tab);
 //   scanf(""%s"", tab);
 //   printf(""%s\n"", tab);
 //   printf(""\n\n PAROLA: %s\n"", parola_secreta);



    return 0;
}
"
NfgsSaqp,lpc core,Igor150195,JavaScript,Thursday 2nd of November 2023 12:57:47 AM CDT,"var s3LP = {
	init: function(options) {
		var self = this;
		if (options){
			this.is_cms = options.is_cms ? true : false;
		}
		console.log(document.location)
		this.initForms();

		try {
			lp_init($('body'));
		} catch(e) {
			console.log(e);
		}
		this.pageBlocking();
		
		self.popupForm();
		
		document.dispatchEvent(new Event('lpcPopupFormInitDone', {bubbles: true}));
		
		if ($('body').find('._lp-image-container').length) {
			if (!window.hasOwnProperty('img_convert_cache')) {
                window.img_convert_cache = {};
            }
			var debounce = (function () {
				return function (fn, time) {
					var timer, func;
					func = function() {
						var args = [].slice.call(arguments, 0);
						window.clearTimeout(timer);
						timer = window.setTimeout(function () {
							window.requestAnimationFrame && window.requestAnimationFrame(function() {
								fn.apply(null, args);
							}) || fn.apply(null, args);
						}, time)
					};
					return func;
				}
			}());
			self.convertImages($('body'));
			$(window).on('resize', debounce(function() {
				self.convertImages($('body'));
			}, 200));
		}	
	},
	pageBlocking: function() {
		if (s3LP.page_blocking) {
			$('html, body').css({
				'overflow': 'hidden',
				'height': '100%'
			});
			$('<div />', {
				'class' : 'page-blocked'
			}).appendTo($('body'));
			
			$('.page-blocked').css({
				'background': 'rgba(0,0,0,.8)',
				'position': 'absolute',
				'left': 0,
				'right': 0,
				'bottom': 0,
				'top': 0,
				'z-index': 100000,
				'color': '#fff',
				'font-size': '28px',
				'display': 'flex',
				'align-items': 'center',
				'flex-direction': 'column',
				'padding': '10px',
				'text-align': 'center',
				'line-height':'1.5',
				'align-items': 'center',
				'justify-content': 'center'
			}).append('<b>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞</b><div style=""font-size: 18px;"">–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É</div>');
		}
	},
	initForms: function(parent) {
		//console.log(this.is_cms)
		
		var self = this;
		if (!parent) parent = document;
		if (!$(parent).is('[data-api-url][data-api-type=form]')) {
			parent = $(parent).find('[data-api-url][data-api-type=form]');
		}

		$(parent).each(function() {
			var obj = $(this);
			var form = obj.is(""form"") ? obj : obj.find(""form"");
			
			if (obj.data('s3form_inited')) {
				return;
			}

			if (self.is_cms) {
				form.attr('title', JS_LP_FORM_NOTE).tooltip();
				form.submit(function() {
					return false;
				});
			} else {
				form.submit(function() {
					$.post(obj.data('api-url'), form.serialize(), function(response) {
						if (response.result.success && response.result.redirect_url) {
							document.location = response.result.redirect_url;
						} else {
							if (response.result.html) {
								var replacement = $(response.result.html.replace(/[\r\n]/g, '').replace(/<script[^>]*>.*?<\/script>/g, ''));
								if (!$(replacement).is('[data-api-url][data-api-type=form]')) {
									replacement = $(replacement).find('[data-api-url][data-api-type=form]');
								}
								obj.replaceWith(replacement);
								
	
								// Init form calendars
								obj.find('.init-calendar').each(function(i){
									new tcal({
										'controlname':this.id,
										'place':this.parentNode,
										'lang':'ru'
									});
	
								});
	
								// Init form calendar intervals
								obj.find('.init-calendar-interval').each(function(i){
									for(var j=0; j<2; ++j){
										var e = f_getElement(this.id + '['+j+']');
										new tcal({
											'controlname':e.id,
											'place':e.parentNode,
											'lang':'ru',
											'intervalpair':[
												this.id + '[0]',
												this.id + '[1]'
											],
											'intervalupdatecont' : this.id
										});
									}
								});
								
								if (response.result && response.result.success && lpc_template){
        							 replacement.closest(`.lpc-wrap`).find(`[class$=__title-wrap]`).remove();
          						}
								
								var $captcha = replacement.find('input[name=_cn]');
								if ($captcha.length) {
									$.getScript('http://captcha.oml.ru/static/captcha.js?2', function() {
										var $d = replacement.find(""[id^=s3_captcha_cn]"");
										mgCaptcha.draw(""/my/s3/captcha/get.php"", ($d.length ? $d.get(0) : null));
									});
								}
								self.initForms(replacement);
							}
						}
					});
					return false;
				});
			}
			obj.data('s3form_inited', true);
		})
	},

	convertImages: function ($container) {
        var self = this;

        $container.find('._lp-image-container').each(function() {
            var $img = $(this).find('img');

            if ($img.length) {
                var img_src = $img.attr('src');
                if (!window.img_convert_cache.hasOwnProperty(img_src)) window.img_convert_cache[img_src] = {};
                self.convertImg(window.img_convert_cache[img_src], $img);
            }
        });
    },
    

    popupForm: function() {
		var $body = $('body'),
			$html = $('html'),
			self = this;

		$('<div class=""lp-popup-wrapper js-popup-wrapper""><div class=""lp-popup-overlay""></div><div class=""lp-popup-inner js-popup-inner""></div></div>').appendTo($body);

		var $wrapper = $('.js-popup-wrapper'),
			$newBlock,
			$container = $wrapper.find('.js-popup-inner'),
			$readyPopup = $body.find('[data-popup-type=""ready""]'),
			$finishPopup = $body.find('[data-popup-type=""finish""]'),
			$inactionPopup = $body.find('[data-popup-type=""inaction""]'),
			openedClass = '_opened',
			$popupCookieTime = $body.find('[data-hide-time]').data('hide-time');
			
			var isFramed = false;
			try {
			  isFramed = window != window.top || document != top.document || self.location != top.location;
			} catch (e) {
			  isFramed = true;
			}
			
		/*if($finishPopup.length) {
			$finishPopup.each(function(){
				var $this = $(this);
				
				if($this.parent('.lpc-popup-decor').length = 1){
					var $this = $this.closest('.lpc-popup-decor');
					
					$('html').one('mouseleave', function() {
					    if(!self.is_cms){
					    	$newBlock = self.appendPopupForm($this, $container, $wrapper);
					    	if($this.parent('.lpc-popup-decor').length = 1){
						    	document.dispatchEvent(new Event('lpcTriggerPopupInitDone', {bubbles: true}));
					    	}
					    }
					});
				}
			});
		} */

		if ($readyPopup.length && document.location.search != ""?no_panel=1"") {

			$readyPopup.each(function() {
				
				var $this = $(this);
				
				console.log($this);
				
				if($this.parent('.lpc-popup-decor').length = 1){
					var $this = $this.closest('.lpc-popup-decor');
				}
				
				document.addEventListener(""DOMContentLoaded"", function() {
					console.log('js dom load');
				});

				
					setTimeout(function(){
				    	$newBlock = self.appendPopupForm($this, $container, $wrapper);
				    	
				    	if($this.parent('.lpc-popup-decor').length = 1){
							document.dispatchEvent(new Event('lpcTriggerPopupInitDone', {bubbles: true}));
				    	}
				    	
					}, +$this.data('popup-time'))
				

				
				
				
				
				/*setTimeout(function(){
			    	$newBlock = self.appendPopupForm($this, $container, $wrapper);
			    	
			    	if($this.parent('.lpc-popup-decor').length = 1){
						document.dispatchEvent(new Event('lpcTriggerPopupInitDone', {bubbles: true}));
			    	}
				}, +$this.data('popup-time'))*/
			});
		}
		
		
		if ($inactionPopup.length) {
			$inactionPopup.each(function() {
				var $this = $(this),
					thisTime = +$this.data('popup-time'),
					idleTimer = null,
					idleState = false;
				
				if($this.parent('.lpc-popup-decor').length = 1){
					var $this = $this.closest('.lpc-popup-decor');
				}
				
				$(document).on('keydown scroll', function(){
					
					clearTimeout(idleTimer); // –†—ï–°‚Äö–†—ò–†¬µ–†–Ö–°–è–†¬µ–†—ò –†—ó–°–Ç–†¬µ–†¬∂–†–Ö–†—ë–†‚Ññ –†–Ü–°–Ç–†¬µ–†—ò–†¬µ–†–Ö–†–Ö–†—ï–†‚Ññ –†—ï–°‚Äö–°–Ç–†¬µ–†¬∑–†—ï–†—î
				
					if(idleState == true) return;
				
					idleState = false;
					
					idleTimer = setTimeout(function(){ 
						$newBlock = self.appendPopupForm($this, $container, $wrapper);
						idleState = true; 
						if($this.parent('.lpc-popup-decor').length = 1){
							document.dispatchEvent(new Event('lpcTriggerPopupInitDone', {bubbles: true}));
						}
					}, thisTime);
				});
				
				$(document).trigger('mousemove');
			});
		}

		$body.on('click', 'a[href^=""popup:""]', function(e){
			e.preventDefault();
			
			if($(this).closest('.lp-popup-wrapper').length != 0) {
				$newBlock.appendTo($('body'));
				$container.html('');
			}
			
			var $thisBlock = $('#' + this.href.replace(':', ''));
			
			if($thisBlock.length == 1) {
				$newBlock = self.appendPopupForm($thisBlock, $container, $wrapper);
			}

			
			
		});
		
		$container.on('click', '.js-close-popup', function(e) {
			e.preventDefault();
			
			if($newBlock.find('[data-popup-trigger-type]').length) {
				if($popupCookieTime == 30 || $popupCookieTime == 60) {
					var $new_minut = $popupCookieTime / 1440;
					createCookie(""lpctrigger"", ""1"", $new_minut);
				} else {
					createCookie(""lpctrigger"", ""1"", $popupCookieTime);
				}
				$newBlock.hide();
			}
			
			$newBlock.appendTo($('body'));
			
			$container.html('');
			$wrapper.removeClass(openedClass);
			
			$html.css({
				overflow: 'auto'
			});
			
		});
		
		$(document).on('keyup', function(e){
			if (e.keyCode != 27) return;
			if($newBlock){
			
				if($newBlock.find('[data-popup-trigger-type]').length) {
					if($popupCookieTime == 30 || $popupCookieTime == 60) {
						var $new_minut = $popupCookieTime / 1440;
						createCookie(""lpctrigger"", ""1"", $new_minut);
					} else {
						createCookie(""lpctrigger"", ""1"", $popupCookieTime);
					}
					$newBlock.hide();
				}
				
				$newBlock.appendTo($('body'));
			}
			$container.html('');
			$wrapper.removeClass(openedClass);
			
			$html.css({
				overflow: 'auto'
			});
		});
	},


	appendPopupForm: function($block, $container, $wrap) {
		var $newBlock = $block.prependTo($container),
			$html = $('html'),
			openedClass = '_opened';
			
		if (!$wrap.find('.lp-form-step-popup-inner').length) {
			var $uploads = $container.find('input[type=""hidden""][id^=""hidUploadField""]');

			if ($uploads.length) {
				$uploads.each(function(){
					var thisAttr = $(this).data('init-upload');
					newSWFU(void 0, thisAttr);
				});
			}
			
		} else {
			var $block = $wrap.find('.js-lp-steps-form');
			$block.html('');
			$block.formsteps();
		}
		
		$html.css({
			overflow: 'hidden'
		});

		$wrap.addClass(openedClass);
		
		return $newBlock;
	},

    convertImg : function (cache_img, $img) {
        var self = this;
        $img.css({""max-width"": ""100%"", ""max-height"": ""100%""});

        if (!$img.parent().hasClass('lp-img-contain')) {
            var img_width,
                img_height;

            if (!cache_img.hasOwnProperty('width') || !cache_img.hasOwnProperty('height')) {
                if ($img.is('svg') || ($img.attr('src') && $img.attr('src').slice(-3) == 'svg')) {
                    img_width = $img.parent().width();
                    img_height = $img.parent().height();
                } else {
                    img_width = $img[0].naturalWidth;
                    img_height = $img[0].naturalHeight;
                }
            } else {
                img_width = cache_img.width;
                img_height = cache_img.height;
            }

            self.setImgStyles($img, img_width, img_height, null);
        }
    },

    setImgStyles: function ($img, img_width, img_height, svg) {
        var $wrap = $img.parent();
        var wrap_width = parseInt($wrap.width()),
            wrap_height = parseInt($wrap.height()),
            wrap_prop = wrap_width/wrap_height;

        var min_width = wrap_height/img_height * img_width;

        if(img_width && img_height) {
            var img_prop = img_width/img_height;

            if (wrap_prop > img_prop) {
                $img.css({""max-width"": ""100%"", ""width"": img_width > wrap_width ? wrap_width : img_width, ""min-width"": ""0"", ""max-height"": ""none"", ""height"": ""auto""});
            } else {
                $img.css({""max-width"": ""none"", ""width"": ""auto"", ""min-width"": min_width > img_width ? img_width : min_width, /*""min-height"": ""100%"",*/  ""max-height"": ""100%"", ""height"": img_height > wrap_height ? wrap_height : img_height});

                if (svg) {
                    $img.css('min-height', '100%');
                }
            }
        }
    }
}"
8uctWkxU,Nigerian scammers [2-11-1/2023],bombaires,AIMMS,Thursday 2nd of November 2023 12:35:49 AM CDT,"<a href=""mailto:willypevergreenpharm@gmail.com"">willypevergreenpharm@gmail.com</a>
<a href=""mailto:willypevergreenpharm+2217@gmail.com"">willypevergreenpharm+2217@gmail.com</a>
<a href=""mailto:willypevergreenpharm+4328@gmail.com"">willypevergreenpharm+4328@gmail.com</a>
<a href=""mailto:willypevergreenpharm+12599@gmail.com"">willypevergreenpharm+12599@gmail.com</a>
<a href=""mailto:willypevergreenpharm+5908@gmail.com"">willypevergreenpharm+5908@gmail.com</a>
<a href=""mailto:willypevergreenpharm+11298@gmail.com"">willypevergreenpharm+11298@gmail.com</a>
<a href=""mailto:willypevergreenpharm+10775@gmail.com"">willypevergreenpharm+10775@gmail.com</a>
<a href=""mailto:willypevergreenpharm+27297@gmail.com"">willypevergreenpharm+27297@gmail.com</a>
<a href=""mailto:willypevergreenpharm+22329@gmail.com"">willypevergreenpharm+22329@gmail.com</a>
<a href=""mailto:willypevergreenpharm+32009@gmail.com"">willypevergreenpharm+32009@gmail.com</a>
<a href=""mailto:willypevergreenpharm+7227@gmail.com"">willypevergreenpharm+7227@gmail.com</a>
<a href=""mailto:willypevergreenpharm+26315@gmail.com"">willypevergreenpharm+26315@gmail.com</a>
<a href=""mailto:willypevergreenpharm+23367@gmail.com"">willypevergreenpharm+23367@gmail.com</a>
<a href=""mailto:willypevergreenpharm+31225@gmail.com"">willypevergreenpharm+31225@gmail.com</a>
<a href=""mailto:willypevergreenpharm+4624@gmail.com"">willypevergreenpharm+4624@gmail.com</a>
<a href=""mailto:willypevergreenpharm+13818@gmail.com"">willypevergreenpharm+13818@gmail.com</a>
<a href=""mailto:willypevergreenpharm+7877@gmail.com"">willypevergreenpharm+7877@gmail.com</a>
<a href=""mailto:willypevergreenpharm+18541@gmail.com"">willypevergreenpharm+18541@gmail.com</a>
<a href=""mailto:willypevergreenpharm+23829@gmail.com"">willypevergreenpharm+23829@gmail.com</a>
<a href=""mailto:willypevergreenpharm+13576@gmail.com"">willypevergreenpharm+13576@gmail.com</a>
<a href=""mailto:willypevergreenpharm+6899@gmail.com"">willypevergreenpharm+6899@gmail.com</a>
<a href=""mailto:willypevergreenpharm+13435@gmail.com"">willypevergreenpharm+13435@gmail.com</a>
<a href=""mailto:willypevergreenpharm+9814@gmail.com"">willypevergreenpharm+9814@gmail.com</a>
<a href=""mailto:willypevergreenpharm+2773@gmail.com"">willypevergreenpharm+2773@gmail.com</a>
<a href=""mailto:willypevergreenpharm+2740@gmail.com"">willypevergreenpharm+2740@gmail.com</a>
<a href=""mailto:willypevergreenpharm+31020@gmail.com"">willypevergreenpharm+31020@gmail.com</a>
<a href=""mailto:willypevergreenpharm+8612@gmail.com"">willypevergreenpharm+8612@gmail.com</a>
<a href=""mailto:willypevergreenpharm+19048@gmail.com"">willypevergreenpharm+19048@gmail.com</a>
<a href=""mailto:willypevergreenpharm+6158@gmail.com"">willypevergreenpharm+6158@gmail.com</a>
<a href=""mailto:willypevergreenpharm+20056@gmail.com"">willypevergreenpharm+20056@gmail.com</a>
<a href=""mailto:willypevergreenpharm+19145@gmail.com"">willypevergreenpharm+19145@gmail.com</a>
<a href=""mailto:willypevergreenpharm+29405@gmail.com"">willypevergreenpharm+29405@gmail.com</a>
<a href=""mailto:willypevergreenpharm+1391@gmail.com"">willypevergreenpharm+1391@gmail.com</a>
<a href=""mailto:willypevergreenpharm+3663@gmail.com"">willypevergreenpharm+3663@gmail.com</a>
<a href=""mailto:willypevergreenpharm+12660@gmail.com"">willypevergreenpharm+12660@gmail.com</a>
<a href=""mailto:willypevergreenpharm+20920@gmail.com"">willypevergreenpharm+20920@gmail.com</a>
<a href=""mailto:willypevergreenpharm+19794@gmail.com"">willypevergreenpharm+19794@gmail.com</a>
<a href=""mailto:willypevergreenpharm+29630@gmail.com"">willypevergreenpharm+29630@gmail.com</a>
<a href=""mailto:willypevergreenpharm+10808@gmail.com"">willypevergreenpharm+10808@gmail.com</a>
<a href=""mailto:willypevergreenpharm+24569@gmail.com"">willypevergreenpharm+24569@gmail.com</a>
<a href=""mailto:willypevergreenpharm+3687@gmail.com"">willypevergreenpharm+3687@gmail.com</a>
<a href=""mailto:willypevergreenpharm+18302@gmail.com"">willypevergreenpharm+18302@gmail.com</a>
<a href=""mailto:willypevergreenpharm+18159@gmail.com"">willypevergreenpharm+18159@gmail.com</a>
<a href=""mailto:willypevergreenpharm+26639@gmail.com"">willypevergreenpharm+26639@gmail.com</a>
<a href=""mailto:willypevergreenpharm+30667@gmail.com"">willypevergreenpharm+30667@gmail.com</a>
<a href=""mailto:willypevergreenpharm+25414@gmail.com"">willypevergreenpharm+25414@gmail.com</a>
<a href=""mailto:willypevergreenpharm+14288@gmail.com"">willypevergreenpharm+14288@gmail.com</a>
<a href=""mailto:willypevergreenpharm+23418@gmail.com"">willypevergreenpharm+23418@gmail.com</a>
<a href=""mailto:willypevergreenpharm+11516@gmail.com"">willypevergreenpharm+11516@gmail.com</a>
<a href=""mailto:willypevergreenpharm+4091@gmail.com"">willypevergreenpharm+4091@gmail.com</a>
<a href=""mailto:willypevergreenpharm+11920@gmail.com"">willypevergreenpharm+11920@gmail.com</a>
<a href=""mailto:willypevergreenpharm+10597@gmail.com"">willypevergreenpharm+10597@gmail.com</a>
<a href=""mailto:willypevergreenpharm+24220@gmail.com"">willypevergreenpharm+24220@gmail.com</a>
<a href=""mailto:willypevergreenpharm+9589@gmail.com"">willypevergreenpharm+9589@gmail.com</a>
<a href=""mailto:willypevergreenpharm+23616@gmail.com"">willypevergreenpharm+23616@gmail.com</a>
<a href=""mailto:willypevergreenpharm+11950@gmail.com"">willypevergreenpharm+11950@gmail.com</a>
<a href=""mailto:willypevergreenpharm+29934@gmail.com"">willypevergreenpharm+29934@gmail.com</a>
<a href=""mailto:willypevergreenpharm+3228@gmail.com"">willypevergreenpharm+3228@gmail.com</a>
<a href=""mailto:willypevergreenpharm+221@gmail.com"">willypevergreenpharm+221@gmail.com</a>
<a href=""mailto:willypevergreenpharm+25012@gmail.com"">willypevergreenpharm+25012@gmail.com</a>
<a href=""mailto:willypevergreenpharm+9085@gmail.com"">willypevergreenpharm+9085@gmail.com</a>
<a href=""mailto:willypevergreenpharm+4477@gmail.com"">willypevergreenpharm+4477@gmail.com</a>
<a href=""mailto:willypevergreenpharm+16477@gmail.com"">willypevergreenpharm+16477@gmail.com</a>
<a href=""mailto:willypevergreenpharm+5364@gmail.com"">willypevergreenpharm+5364@gmail.com</a>
<a href=""mailto:willypevergreenpharm+7888@gmail.com"">willypevergreenpharm+7888@gmail.com</a>
<a href=""mailto:willypevergreenpharm+20788@gmail.com"">willypevergreenpharm+20788@gmail.com</a>
<a href=""mailto:willypevergreenpharm+31242@gmail.com"">willypevergreenpharm+31242@gmail.com</a>
<a href=""mailto:willypevergreenpharm+20977@gmail.com"">willypevergreenpharm+20977@gmail.com</a>
<a href=""mailto:willypevergreenpharm+12462@gmail.com"">willypevergreenpharm+12462@gmail.com</a>
<a href=""mailto:willypevergreenpharm+12866@gmail.com"">willypevergreenpharm+12866@gmail.com</a>
<a href=""mailto:willypevergreenpharm+16337@gmail.com"">willypevergreenpharm+16337@gmail.com</a>
<a href=""mailto:willypevergreenpharm+27890@gmail.com"">willypevergreenpharm+27890@gmail.com</a>
<a href=""mailto:willypevergreenpharm+8154@gmail.com"">willypevergreenpharm+8154@gmail.com</a>
<a href=""mailto:willypevergreenpharm+20799@gmail.com"">willypevergreenpharm+20799@gmail.com</a>
<a href=""mailto:willypevergreenpharm+2852@gmail.com"">willypevergreenpharm+2852@gmail.com</a>
<a href=""mailto:willypevergreenpharm+26391@gmail.com"">willypevergreenpharm+26391@gmail.com</a>
<a href=""mailto:willypevergreenpharm+23204@gmail.com"">willypevergreenpharm+23204@gmail.com</a>
<a href=""mailto:willypevergreenpharm+22864@gmail.com"">willypevergreenpharm+22864@gmail.com</a>
<a href=""mailto:willypevergreenpharm+30416@gmail.com"">willypevergreenpharm+30416@gmail.com</a>
<a href=""mailto:willypevergreenpharm+30509@gmail.com"">willypevergreenpharm+30509@gmail.com</a>
<a href=""mailto:willypevergreenpharm+19595@gmail.com"">willypevergreenpharm+19595@gmail.com</a>
<a href=""mailto:willypevergreenpharm+26773@gmail.com"">willypevergreenpharm+26773@gmail.com</a>
<a href=""mailto:willypevergreenpharm+1656@gmail.com"">willypevergreenpharm+1656@gmail.com</a>
<a href=""mailto:willypevergreenpharm+25328@gmail.com"">willypevergreenpharm+25328@gmail.com</a>
<a href=""mailto:willypevergreenpharm+27498@gmail.com"">willypevergreenpharm+27498@gmail.com</a>
<a href=""mailto:willypevergreenpharm+27488@gmail.com"">willypevergreenpharm+27488@gmail.com</a>
<a href=""mailto:willypevergreenpharm+7962@gmail.com"">willypevergreenpharm+7962@gmail.com</a>
<a href=""mailto:willypevergreenpharm+19292@gmail.com"">willypevergreenpharm+19292@gmail.com</a>
<a href=""mailto:willypevergreenpharm+14125@gmail.com"">willypevergreenpharm+14125@gmail.com</a>
<a href=""mailto:willypevergreenpharm+6318@gmail.com"">willypevergreenpharm+6318@gmail.com</a>
<a href=""mailto:willypevergreenpharm+29331@gmail.com"">willypevergreenpharm+29331@gmail.com</a>
<a href=""mailto:willypevergreenpharm+3873@gmail.com"">willypevergreenpharm+3873@gmail.com</a>
<a href=""mailto:willypevergreenpharm+28265@gmail.com"">willypevergreenpharm+28265@gmail.com</a>
<a href=""mailto:willypevergreenpharm+1869@gmail.com"">willypevergreenpharm+1869@gmail.com</a>
<a href=""mailto:willypevergreenpharm+13723@gmail.com"">willypevergreenpharm+13723@gmail.com</a>
<a href=""mailto:willypevergreenpharm+27663@gmail.com"">willypevergreenpharm+27663@gmail.com</a>
<a href=""mailto:willypevergreenpharm+11591@gmail.com"">willypevergreenpharm+11591@gmail.com</a>
<a href=""mailto:willypevergreenpharm+14757@gmail.com"">willypevergreenpharm+14757@gmail.com</a>
<a href=""mailto:willypevergreenpharm+23665@gmail.com"">willypevergreenpharm+23665@gmail.com</a>
<a href=""mailto:willypevergreenpharm+22792@gmail.com"">willypevergreenpharm+22792@gmail.com</a>
<a href=""mailto:willypevergreenpharm+1352@gmail.com"">willypevergreenpharm+1352@gmail.com</a>
<a href=""mailto:un.dpt9811@gmail.com"">un.dpt9811@gmail.com</a>
<a href=""mailto:un.dpt9811+12592@gmail.com"">un.dpt9811+12592@gmail.com</a>
<a href=""mailto:un.dpt9811+2439@gmail.com"">un.dpt9811+2439@gmail.com</a>
<a href=""mailto:un.dpt9811+31239@gmail.com"">un.dpt9811+31239@gmail.com</a>
<a href=""mailto:un.dpt9811+5519@gmail.com"">un.dpt9811+5519@gmail.com</a>
<a href=""mailto:un.dpt9811+16972@gmail.com"">un.dpt9811+16972@gmail.com</a>
<a href=""mailto:un.dpt9811+1483@gmail.com"">un.dpt9811+1483@gmail.com</a>
<a href=""mailto:un.dpt9811+8861@gmail.com"">un.dpt9811+8861@gmail.com</a>
<a href=""mailto:un.dpt9811+1117@gmail.com"">un.dpt9811+1117@gmail.com</a>
<a href=""mailto:un.dpt9811+31@gmail.com"">un.dpt9811+31@gmail.com</a>
<a href=""mailto:un.dpt9811+28427@gmail.com"">un.dpt9811+28427@gmail.com</a>
<a href=""mailto:un.dpt9811+20848@gmail.com"">un.dpt9811+20848@gmail.com</a>
<a href=""mailto:un.dpt9811+1564@gmail.com"">un.dpt9811+1564@gmail.com</a>
<a href=""mailto:un.dpt9811+23070@gmail.com"">un.dpt9811+23070@gmail.com</a>
<a href=""mailto:un.dpt9811+1337@gmail.com"">un.dpt9811+1337@gmail.com</a>
<a href=""mailto:un.dpt9811+5428@gmail.com"">un.dpt9811+5428@gmail.com</a>
<a href=""mailto:un.dpt9811+18962@gmail.com"">un.dpt9811+18962@gmail.com</a>
<a href=""mailto:un.dpt9811+6930@gmail.com"">un.dpt9811+6930@gmail.com</a>
<a href=""mailto:un.dpt9811+15670@gmail.com"">un.dpt9811+15670@gmail.com</a>
<a href=""mailto:un.dpt9811+18825@gmail.com"">un.dpt9811+18825@gmail.com</a>
<a href=""mailto:un.dpt9811+12559@gmail.com"">un.dpt9811+12559@gmail.com</a>
<a href=""mailto:un.dpt9811+27228@gmail.com"">un.dpt9811+27228@gmail.com</a>
<a href=""mailto:un.dpt9811+12766@gmail.com"">un.dpt9811+12766@gmail.com</a>
<a href=""mailto:un.dpt9811+3710@gmail.com"">un.dpt9811+3710@gmail.com</a>
<a href=""mailto:un.dpt9811+29994@gmail.com"">un.dpt9811+29994@gmail.com</a>
<a href=""mailto:un.dpt9811+23957@gmail.com"">un.dpt9811+23957@gmail.com</a>
<a href=""mailto:un.dpt9811+25738@gmail.com"">un.dpt9811+25738@gmail.com</a>
<a href=""mailto:un.dpt9811+5273@gmail.com"">un.dpt9811+5273@gmail.com</a>
<a href=""mailto:un.dpt9811+32579@gmail.com"">un.dpt9811+32579@gmail.com</a>
<a href=""mailto:un.dpt9811+7875@gmail.com"">un.dpt9811+7875@gmail.com</a>
<a href=""mailto:un.dpt9811+28819@gmail.com"">un.dpt9811+28819@gmail.com</a>
<a href=""mailto:un.dpt9811+22527@gmail.com"">un.dpt9811+22527@gmail.com</a>
<a href=""mailto:un.dpt9811+10323@gmail.com"">un.dpt9811+10323@gmail.com</a>
<a href=""mailto:un.dpt9811+21515@gmail.com"">un.dpt9811+21515@gmail.com</a>
<a href=""mailto:un.dpt9811+12300@gmail.com"">un.dpt9811+12300@gmail.com</a>
<a href=""mailto:un.dpt9811+20172@gmail.com"">un.dpt9811+20172@gmail.com</a>
<a href=""mailto:un.dpt9811+2518@gmail.com"">un.dpt9811+2518@gmail.com</a>
<a href=""mailto:un.dpt9811+32462@gmail.com"">un.dpt9811+32462@gmail.com</a>
<a href=""mailto:un.dpt9811+9304@gmail.com"">un.dpt9811+9304@gmail.com</a>
<a href=""mailto:un.dpt9811+12136@gmail.com"">un.dpt9811+12136@gmail.com</a>
<a href=""mailto:un.dpt9811+27418@gmail.com"">un.dpt9811+27418@gmail.com</a>
<a href=""mailto:un.dpt9811+15245@gmail.com"">un.dpt9811+15245@gmail.com</a>
<a href=""mailto:un.dpt9811+21174@gmail.com"">un.dpt9811+21174@gmail.com</a>
<a href=""mailto:un.dpt9811+24688@gmail.com"">un.dpt9811+24688@gmail.com</a>
<a href=""mailto:un.dpt9811+3965@gmail.com"">un.dpt9811+3965@gmail.com</a>
<a href=""mailto:un.dpt9811+24961@gmail.com"">un.dpt9811+24961@gmail.com</a>
<a href=""mailto:un.dpt9811+4024@gmail.com"">un.dpt9811+4024@gmail.com</a>
<a href=""mailto:un.dpt9811+29493@gmail.com"">un.dpt9811+29493@gmail.com</a>
<a href=""mailto:un.dpt9811+23711@gmail.com"">un.dpt9811+23711@gmail.com</a>
<a href=""mailto:un.dpt9811+10948@gmail.com"">un.dpt9811+10948@gmail.com</a>
<a href=""mailto:un.dpt9811+28929@gmail.com"">un.dpt9811+28929@gmail.com</a>
<a href=""mailto:un.dpt9811+1712@gmail.com"">un.dpt9811+1712@gmail.com</a>
<a href=""mailto:un.dpt9811+759@gmail.com"">un.dpt9811+759@gmail.com</a>
<a href=""mailto:un.dpt9811+11195@gmail.com"">un.dpt9811+11195@gmail.com</a>
<a href=""mailto:un.dpt9811+11635@gmail.com"">un.dpt9811+11635@gmail.com</a>
<a href=""mailto:un.dpt9811+21374@gmail.com"">un.dpt9811+21374@gmail.com</a>
<a href=""mailto:un.dpt9811+12138@gmail.com"">un.dpt9811+12138@gmail.com</a>
<a href=""mailto:un.dpt9811+18786@gmail.com"">un.dpt9811+18786@gmail.com</a>
<a href=""mailto:un.dpt9811+22709@gmail.com"">un.dpt9811+22709@gmail.com</a>
<a href=""mailto:un.dpt9811+18992@gmail.com"">un.dpt9811+18992@gmail.com</a>
<a href=""mailto:un.dpt9811+23340@gmail.com"">un.dpt9811+23340@gmail.com</a>
<a href=""mailto:un.dpt9811+32478@gmail.com"">un.dpt9811+32478@gmail.com</a>
<a href=""mailto:un.dpt9811+24948@gmail.com"">un.dpt9811+24948@gmail.com</a>
<a href=""mailto:un.dpt9811+5310@gmail.com"">un.dpt9811+5310@gmail.com</a>
<a href=""mailto:un.dpt9811+24368@gmail.com"">un.dpt9811+24368@gmail.com</a>
<a href=""mailto:un.dpt9811+31628@gmail.com"">un.dpt9811+31628@gmail.com</a>
<a href=""mailto:un.dpt9811+13416@gmail.com"">un.dpt9811+13416@gmail.com</a>
<a href=""mailto:un.dpt9811+6710@gmail.com"">un.dpt9811+6710@gmail.com</a>
<a href=""mailto:un.dpt9811+9272@gmail.com"">un.dpt9811+9272@gmail.com</a>
<a href=""mailto:un.dpt9811+21844@gmail.com"">un.dpt9811+21844@gmail.com</a>
<a href=""mailto:un.dpt9811+24223@gmail.com"">un.dpt9811+24223@gmail.com</a>
<a href=""mailto:un.dpt9811+534@gmail.com"">un.dpt9811+534@gmail.com</a>
<a href=""mailto:un.dpt9811+8882@gmail.com"">un.dpt9811+8882@gmail.com</a>
<a href=""mailto:un.dpt9811+27645@gmail.com"">un.dpt9811+27645@gmail.com</a>
<a href=""mailto:un.dpt9811+16257@gmail.com"">un.dpt9811+16257@gmail.com</a>
<a href=""mailto:un.dpt9811+18649@gmail.com"">un.dpt9811+18649@gmail.com</a>
<a href=""mailto:un.dpt9811+18987@gmail.com"">un.dpt9811+18987@gmail.com</a>
<a href=""mailto:un.dpt9811+20219@gmail.com"">un.dpt9811+20219@gmail.com</a>
<a href=""mailto:un.dpt9811+21788@gmail.com"">un.dpt9811+21788@gmail.com</a>
<a href=""mailto:un.dpt9811+8122@gmail.com"">un.dpt9811+8122@gmail.com</a>
<a href=""mailto:un.dpt9811+6862@gmail.com"">un.dpt9811+6862@gmail.com</a>
<a href=""mailto:un.dpt9811+17931@gmail.com"">un.dpt9811+17931@gmail.com</a>
<a href=""mailto:un.dpt9811+13744@gmail.com"">un.dpt9811+13744@gmail.com</a>
<a href=""mailto:un.dpt9811+9374@gmail.com"">un.dpt9811+9374@gmail.com</a>
<a href=""mailto:un.dpt9811+11053@gmail.com"">un.dpt9811+11053@gmail.com</a>
<a href=""mailto:un.dpt9811+16582@gmail.com"">un.dpt9811+16582@gmail.com</a>
<a href=""mailto:un.dpt9811+31619@gmail.com"">un.dpt9811+31619@gmail.com</a>
<a href=""mailto:un.dpt9811+2479@gmail.com"">un.dpt9811+2479@gmail.com</a>
<a href=""mailto:un.dpt9811+21404@gmail.com"">un.dpt9811+21404@gmail.com</a>
<a href=""mailto:un.dpt9811+11144@gmail.com"">un.dpt9811+11144@gmail.com</a>
<a href=""mailto:un.dpt9811+30888@gmail.com"">un.dpt9811+30888@gmail.com</a>
<a href=""mailto:un.dpt9811+15618@gmail.com"">un.dpt9811+15618@gmail.com</a>
<a href=""mailto:un.dpt9811+24521@gmail.com"">un.dpt9811+24521@gmail.com</a>
<a href=""mailto:un.dpt9811+8526@gmail.com"">un.dpt9811+8526@gmail.com</a>
<a href=""mailto:un.dpt9811+8427@gmail.com"">un.dpt9811+8427@gmail.com</a>
<a href=""mailto:un.dpt9811+18202@gmail.com"">un.dpt9811+18202@gmail.com</a>
<a href=""mailto:un.dpt9811+1617@gmail.com"">un.dpt9811+1617@gmail.com</a>
<a href=""mailto:un.dpt9811+29609@gmail.com"">un.dpt9811+29609@gmail.com</a>
<a href=""mailto:un.dpt9811+27204@gmail.com"">un.dpt9811+27204@gmail.com</a>
<a href=""mailto:un.dpt9811+27601@gmail.com"">un.dpt9811+27601@gmail.com</a>
<a href=""mailto:un.dpt9811+16292@gmail.com"">un.dpt9811+16292@gmail.com</a>
<a href=""mailto:qountic.info@protonmail.com"">qountic.info@protonmail.com</a>
<a href=""mailto:info6@qualityservice.com"">info6@qualityservice.com</a>
<a href=""mailto:quontic.info@privyinternet.com"">quontic.info@privyinternet.com</a>
<a href=""mailto:un001@secretary.net"">un001@secretary.net</a>
<a href=""mailto:yusifsunusimusa@gmail.com"">yusifsunusimusa@gmail.com</a>
<a href=""mailto:yusifsunusimusa+10888@gmail.com"">yusifsunusimusa+10888@gmail.com</a>
<a href=""mailto:yusifsunusimusa+31192@gmail.com"">yusifsunusimusa+31192@gmail.com</a>
<a href=""mailto:yusifsunusimusa+15827@gmail.com"">yusifsunusimusa+15827@gmail.com</a>
<a href=""mailto:yusifsunusimusa+3282@gmail.com"">yusifsunusimusa+3282@gmail.com</a>
<a href=""mailto:yusifsunusimusa+31874@gmail.com"">yusifsunusimusa+31874@gmail.com</a>
<a href=""mailto:yusifsunusimusa+29633@gmail.com"">yusifsunusimusa+29633@gmail.com</a>
<a href=""mailto:yusifsunusimusa+24371@gmail.com"">yusifsunusimusa+24371@gmail.com</a>
<a href=""mailto:yusifsunusimusa+27760@gmail.com"">yusifsunusimusa+27760@gmail.com</a>
<a href=""mailto:yusifsunusimusa+31012@gmail.com"">yusifsunusimusa+31012@gmail.com</a>
<a href=""mailto:yusifsunusimusa+10221@gmail.com"">yusifsunusimusa+10221@gmail.com</a>
<a href=""mailto:yusifsunusimusa+31294@gmail.com"">yusifsunusimusa+31294@gmail.com</a>
<a href=""mailto:yusifsunusimusa+8920@gmail.com"">yusifsunusimusa+8920@gmail.com</a>
<a href=""mailto:yusifsunusimusa+13020@gmail.com"">yusifsunusimusa+13020@gmail.com</a>
<a href=""mailto:yusifsunusimusa+651@gmail.com"">yusifsunusimusa+651@gmail.com</a>
<a href=""mailto:yusifsunusimusa+28564@gmail.com"">yusifsunusimusa+28564@gmail.com</a>
<a href=""mailto:yusifsunusimusa+1404@gmail.com"">yusifsunusimusa+1404@gmail.com</a>
<a href=""mailto:yusifsunusimusa+27606@gmail.com"">yusifsunusimusa+27606@gmail.com</a>
<a href=""mailto:yusifsunusimusa+7465@gmail.com"">yusifsunusimusa+7465@gmail.com</a>
<a href=""mailto:yusifsunusimusa+17000@gmail.com"">yusifsunusimusa+17000@gmail.com</a>
<a href=""mailto:yusifsunusimusa+30818@gmail.com"">yusifsunusimusa+30818@gmail.com</a>
<a href=""mailto:yusifsunusimusa+23971@gmail.com"">yusifsunusimusa+23971@gmail.com</a>
<a href=""mailto:yusifsunusimusa+4441@gmail.com"">yusifsunusimusa+4441@gmail.com</a>
<a href=""mailto:yusifsunusimusa+18332@gmail.com"">yusifsunusimusa+18332@gmail.com</a>
<a href=""mailto:yusifsunusimusa+15855@gmail.com"">yusifsunusimusa+15855@gmail.com</a>
<a href=""mailto:yusifsunusimusa+8089@gmail.com"">yusifsunusimusa+8089@gmail.com</a>
<a href=""mailto:yusifsunusimusa+20727@gmail.com"">yusifsunusimusa+20727@gmail.com</a>
<a href=""mailto:yusifsunusimusa+12704@gmail.com"">yusifsunusimusa+12704@gmail.com</a>
<a href=""mailto:yusifsunusimusa+28938@gmail.com"">yusifsunusimusa+28938@gmail.com</a>
<a href=""mailto:yusifsunusimusa+25842@gmail.com"">yusifsunusimusa+25842@gmail.com</a>
<a href=""mailto:yusifsunusimusa+28230@gmail.com"">yusifsunusimusa+28230@gmail.com</a>
<a href=""mailto:yusifsunusimusa+9793@gmail.com"">yusifsunusimusa+9793@gmail.com</a>
<a href=""mailto:yusifsunusimusa+2034@gmail.com"">yusifsunusimusa+2034@gmail.com</a>
<a href=""mailto:yusifsunusimusa+29867@gmail.com"">yusifsunusimusa+29867@gmail.com</a>
<a href=""mailto:yusifsunusimusa+7339@gmail.com"">yusifsunusimusa+7339@gmail.com</a>
<a href=""mailto:yusifsunusimusa+770@gmail.com"">yusifsunusimusa+770@gmail.com</a>
<a href=""mailto:yusifsunusimusa+23661@gmail.com"">yusifsunusimusa+23661@gmail.com</a>
<a href=""mailto:yusifsunusimusa+15517@gmail.com"">yusifsunusimusa+15517@gmail.com</a>
<a href=""mailto:yusifsunusimusa+9773@gmail.com"">yusifsunusimusa+9773@gmail.com</a>
<a href=""mailto:yusifsunusimusa+17313@gmail.com"">yusifsunusimusa+17313@gmail.com</a>
<a href=""mailto:yusifsunusimusa+18199@gmail.com"">yusifsunusimusa+18199@gmail.com</a>
<a href=""mailto:yusifsunusimusa+23957@gmail.com"">yusifsunusimusa+23957@gmail.com</a>
<a href=""mailto:yusifsunusimusa+29036@gmail.com"">yusifsunusimusa+29036@gmail.com</a>
<a href=""mailto:yusifsunusimusa+3562@gmail.com"">yusifsunusimusa+3562@gmail.com</a>
<a href=""mailto:yusifsunusimusa+29460@gmail.com"">yusifsunusimusa+29460@gmail.com</a>
<a href=""mailto:yusifsunusimusa+12199@gmail.com"">yusifsunusimusa+12199@gmail.com</a>
<a href=""mailto:yusifsunusimusa+16819@gmail.com"">yusifsunusimusa+16819@gmail.com</a>
<a href=""mailto:yusifsunusimusa+18749@gmail.com"">yusifsunusimusa+18749@gmail.com</a>
<a href=""mailto:yusifsunusimusa+16758@gmail.com"">yusifsunusimusa+16758@gmail.com</a>
<a href=""mailto:yusifsunusimusa+7281@gmail.com"">yusifsunusimusa+7281@gmail.com</a>
<a href=""mailto:yusifsunusimusa+30581@gmail.com"">yusifsunusimusa+30581@gmail.com</a>
<a href=""mailto:yusifsunusimusa+12359@gmail.com"">yusifsunusimusa+12359@gmail.com</a>
<a href=""mailto:yusifsunusimusa+19447@gmail.com"">yusifsunusimusa+19447@gmail.com</a>
<a href=""mailto:yusifsunusimusa+897@gmail.com"">yusifsunusimusa+897@gmail.com</a>
<a href=""mailto:yusifsunusimusa+15412@gmail.com"">yusifsunusimusa+15412@gmail.com</a>
<a href=""mailto:yusifsunusimusa+4216@gmail.com"">yusifsunusimusa+4216@gmail.com</a>
<a href=""mailto:yusifsunusimusa+7695@gmail.com"">yusifsunusimusa+7695@gmail.com</a>
<a href=""mailto:yusifsunusimusa+28073@gmail.com"">yusifsunusimusa+28073@gmail.com</a>
<a href=""mailto:yusifsunusimusa+24930@gmail.com"">yusifsunusimusa+24930@gmail.com</a>
<a href=""mailto:yusifsunusimusa+10458@gmail.com"">yusifsunusimusa+10458@gmail.com</a>
<a href=""mailto:yusifsunusimusa+9425@gmail.com"">yusifsunusimusa+9425@gmail.com</a>
<a href=""mailto:yusifsunusimusa+20559@gmail.com"">yusifsunusimusa+20559@gmail.com</a>
<a href=""mailto:yusifsunusimusa+25256@gmail.com"">yusifsunusimusa+25256@gmail.com</a>
<a href=""mailto:yusifsunusimusa+6503@gmail.com"">yusifsunusimusa+6503@gmail.com</a>
<a href=""mailto:yusifsunusimusa+5205@gmail.com"">yusifsunusimusa+5205@gmail.com</a>
<a href=""mailto:yusifsunusimusa+7720@gmail.com"">yusifsunusimusa+7720@gmail.com</a>
<a href=""mailto:yusifsunusimusa+15035@gmail.com"">yusifsunusimusa+15035@gmail.com</a>
<a href=""mailto:yusifsunusimusa+15097@gmail.com"">yusifsunusimusa+15097@gmail.com</a>
<a href=""mailto:yusifsunusimusa+27194@gmail.com"">yusifsunusimusa+27194@gmail.com</a>
<a href=""mailto:yusifsunusimusa+21787@gmail.com"">yusifsunusimusa+21787@gmail.com</a>
<a href=""mailto:yusifsunusimusa+22735@gmail.com"">yusifsunusimusa+22735@gmail.com</a>
<a href=""mailto:yusifsunusimusa+4556@gmail.com"">yusifsunusimusa+4556@gmail.com</a>
<a href=""mailto:yusifsunusimusa+12801@gmail.com"">yusifsunusimusa+12801@gmail.com</a>
<a href=""mailto:yusifsunusimusa+3774@gmail.com"">yusifsunusimusa+3774@gmail.com</a>
<a href=""mailto:yusifsunusimusa+23142@gmail.com"">yusifsunusimusa+23142@gmail.com</a>
<a href=""mailto:yusifsunusimusa+21612@gmail.com"">yusifsunusimusa+21612@gmail.com</a>
<a href=""mailto:yusifsunusimusa+5871@gmail.com"">yusifsunusimusa+5871@gmail.com</a>
<a href=""mailto:yusifsunusimusa+15102@gmail.com"">yusifsunusimusa+15102@gmail.com</a>
<a href=""mailto:yusifsunusimusa+18865@gmail.com"">yusifsunusimusa+18865@gmail.com</a>
<a href=""mailto:yusifsunusimusa+8032@gmail.com"">yusifsunusimusa+8032@gmail.com</a>
<a href=""mailto:yusifsunusimusa+20848@gmail.com"">yusifsunusimusa+20848@gmail.com</a>
<a href=""mailto:yusifsunusimusa+22781@gmail.com"">yusifsunusimusa+22781@gmail.com</a>
<a href=""mailto:yusifsunusimusa+16124@gmail.com"">yusifsunusimusa+16124@gmail.com</a>
<a href=""mailto:yusifsunusimusa+32312@gmail.com"">yusifsunusimusa+32312@gmail.com</a>
<a href=""mailto:yusifsunusimusa+13064@gmail.com"">yusifsunusimusa+13064@gmail.com</a>
<a href=""mailto:yusifsunusimusa+2586@gmail.com"">yusifsunusimusa+2586@gmail.com</a>
<a href=""mailto:yusifsunusimusa+17424@gmail.com"">yusifsunusimusa+17424@gmail.com</a>
<a href=""mailto:yusifsunusimusa+703@gmail.com"">yusifsunusimusa+703@gmail.com</a>
<a href=""mailto:yusifsunusimusa+20949@gmail.com"">yusifsunusimusa+20949@gmail.com</a>
<a href=""mailto:yusifsunusimusa+12720@gmail.com"">yusifsunusimusa+12720@gmail.com</a>
<a href=""mailto:yusifsunusimusa+29877@gmail.com"">yusifsunusimusa+29877@gmail.com</a>
<a href=""mailto:yusifsunusimusa+11004@gmail.com"">yusifsunusimusa+11004@gmail.com</a>
<a href=""mailto:yusifsunusimusa+9151@gmail.com"">yusifsunusimusa+9151@gmail.com</a>
<a href=""mailto:yusifsunusimusa+5117@gmail.com"">yusifsunusimusa+5117@gmail.com</a>
<a href=""mailto:yusifsunusimusa+18927@gmail.com"">yusifsunusimusa+18927@gmail.com</a>
<a href=""mailto:yusifsunusimusa+11048@gmail.com"">yusifsunusimusa+11048@gmail.com</a>
<a href=""mailto:yusifsunusimusa+24376@gmail.com"">yusifsunusimusa+24376@gmail.com</a>
<a href=""mailto:yusifsunusimusa+16265@gmail.com"">yusifsunusimusa+16265@gmail.com</a>
<a href=""mailto:yusifsunusimusa+8343@gmail.com"">yusifsunusimusa+8343@gmail.com</a>
<a href=""mailto:yusifsunusimusa+29133@gmail.com"">yusifsunusimusa+29133@gmail.com</a>
<a href=""mailto:yusifsunusimusa+6933@gmail.com"">yusifsunusimusa+6933@gmail.com</a>
<a href=""mailto:jeromepowell493@gmail.com"">jeromepowell493@gmail.com</a>
<a href=""mailto:jeromepowell493+30236@gmail.com"">jeromepowell493+30236@gmail.com</a>
<a href=""mailto:jeromepowell493+16960@gmail.com"">jeromepowell493+16960@gmail.com</a>
<a href=""mailto:jeromepowell493+20535@gmail.com"">jeromepowell493+20535@gmail.com</a>
<a href=""mailto:jeromepowell493+19550@gmail.com"">jeromepowell493+19550@gmail.com</a>
<a href=""mailto:jeromepowell493+27815@gmail.com"">jeromepowell493+27815@gmail.com</a>
<a href=""mailto:jeromepowell493+68@gmail.com"">jeromepowell493+68@gmail.com</a>
<a href=""mailto:jeromepowell493+2839@gmail.com"">jeromepowell493+2839@gmail.com</a>
<a href=""mailto:jeromepowell493+20367@gmail.com"">jeromepowell493+20367@gmail.com</a>
<a href=""mailto:jeromepowell493+11304@gmail.com"">jeromepowell493+11304@gmail.com</a>
<a href=""mailto:jeromepowell493+1038@gmail.com"">jeromepowell493+1038@gmail.com</a>
<a href=""mailto:jeromepowell493+12532@gmail.com"">jeromepowell493+12532@gmail.com</a>
<a href=""mailto:jeromepowell493+9789@gmail.com"">jeromepowell493+9789@gmail.com</a>
<a href=""mailto:jeromepowell493+30036@gmail.com"">jeromepowell493+30036@gmail.com</a>
<a href=""mailto:jeromepowell493+11096@gmail.com"">jeromepowell493+11096@gmail.com</a>
<a href=""mailto:jeromepowell493+31608@gmail.com"">jeromepowell493+31608@gmail.com</a>
<a href=""mailto:jeromepowell493+29354@gmail.com"">jeromepowell493+29354@gmail.com</a>
<a href=""mailto:jeromepowell493+12492@gmail.com"">jeromepowell493+12492@gmail.com</a>
<a href=""mailto:jeromepowell493+11096@gmail.com"">jeromepowell493+11096@gmail.com</a>
<a href=""mailto:jeromepowell493+19198@gmail.com"">jeromepowell493+19198@gmail.com</a>
<a href=""mailto:jeromepowell493+999@gmail.com"">jeromepowell493+999@gmail.com</a>
<a href=""mailto:jeromepowell493+27062@gmail.com"">jeromepowell493+27062@gmail.com</a>
<a href=""mailto:jeromepowell493+10371@gmail.com"">jeromepowell493+10371@gmail.com</a>
<a href=""mailto:jeromepowell493+2777@gmail.com"">jeromepowell493+2777@gmail.com</a>
<a href=""mailto:jeromepowell493+18067@gmail.com"">jeromepowell493+18067@gmail.com</a>
<a href=""mailto:jeromepowell493+27860@gmail.com"">jeromepowell493+27860@gmail.com</a>
<a href=""mailto:jeromepowell493+20110@gmail.com"">jeromepowell493+20110@gmail.com</a>
<a href=""mailto:jeromepowell493+24807@gmail.com"">jeromepowell493+24807@gmail.com</a>
<a href=""mailto:jeromepowell493+2221@gmail.com"">jeromepowell493+2221@gmail.com</a>
<a href=""mailto:jeromepowell493+18021@gmail.com"">jeromepowell493+18021@gmail.com</a>
<a href=""mailto:jeromepowell493+30084@gmail.com"">jeromepowell493+30084@gmail.com</a>
<a href=""mailto:jeromepowell493+31355@gmail.com"">jeromepowell493+31355@gmail.com</a>
<a href=""mailto:jeromepowell493+8347@gmail.com"">jeromepowell493+8347@gmail.com</a>
<a href=""mailto:jeromepowell493+8668@gmail.com"">jeromepowell493+8668@gmail.com</a>
<a href=""mailto:jeromepowell493+26171@gmail.com"">jeromepowell493+26171@gmail.com</a>
<a href=""mailto:jeromepowell493+19689@gmail.com"">jeromepowell493+19689@gmail.com</a>
<a href=""mailto:jeromepowell493+23661@gmail.com"">jeromepowell493+23661@gmail.com</a>
<a href=""mailto:jeromepowell493+21569@gmail.com"">jeromepowell493+21569@gmail.com</a>
<a href=""mailto:jeromepowell493+18965@gmail.com"">jeromepowell493+18965@gmail.com</a>
<a href=""mailto:jeromepowell493+30604@gmail.com"">jeromepowell493+30604@gmail.com</a>
<a href=""mailto:jeromepowell493+17484@gmail.com"">jeromepowell493+17484@gmail.com</a>
<a href=""mailto:jeromepowell493+24088@gmail.com"">jeromepowell493+24088@gmail.com</a>
<a href=""mailto:jeromepowell493+2528@gmail.com"">jeromepowell493+2528@gmail.com</a>
<a href=""mailto:jeromepowell493+12661@gmail.com"">jeromepowell493+12661@gmail.com</a>
<a href=""mailto:jeromepowell493+14594@gmail.com"">jeromepowell493+14594@gmail.com</a>
<a href=""mailto:jeromepowell493+12969@gmail.com"">jeromepowell493+12969@gmail.com</a>
<a href=""mailto:jeromepowell493+20771@gmail.com"">jeromepowell493+20771@gmail.com</a>
<a href=""mailto:jeromepowell493+28744@gmail.com"">jeromepowell493+28744@gmail.com</a>
<a href=""mailto:jeromepowell493+13166@gmail.com"">jeromepowell493+13166@gmail.com</a>
<a href=""mailto:jeromepowell493+10358@gmail.com"">jeromepowell493+10358@gmail.com</a>
<a href=""mailto:jeromepowell493+20081@gmail.com"">jeromepowell493+20081@gmail.com</a>
<a href=""mailto:jeromepowell493+28279@gmail.com"">jeromepowell493+28279@gmail.com</a>
<a href=""mailto:jeromepowell493+24398@gmail.com"">jeromepowell493+24398@gmail.com</a>
<a href=""mailto:jeromepowell493+24832@gmail.com"">jeromepowell493+24832@gmail.com</a>
<a href=""mailto:jeromepowell493+7919@gmail.com"">jeromepowell493+7919@gmail.com</a>
<a href=""mailto:jeromepowell493+28036@gmail.com"">jeromepowell493+28036@gmail.com</a>
<a href=""mailto:jeromepowell493+16528@gmail.com"">jeromepowell493+16528@gmail.com</a>
<a href=""mailto:jeromepowell493+15305@gmail.com"">jeromepowell493+15305@gmail.com</a>
<a href=""mailto:jeromepowell493+25127@gmail.com"">jeromepowell493+25127@gmail.com</a>
<a href=""mailto:jeromepowell493+26365@gmail.com"">jeromepowell493+26365@gmail.com</a>
<a href=""mailto:jeromepowell493+26714@gmail.com"">jeromepowell493+26714@gmail.com</a>
<a href=""mailto:jeromepowell493+21247@gmail.com"">jeromepowell493+21247@gmail.com</a>
<a href=""mailto:jeromepowell493+26460@gmail.com"">jeromepowell493+26460@gmail.com</a>
<a href=""mailto:jeromepowell493+11036@gmail.com"">jeromepowell493+11036@gmail.com</a>
<a href=""mailto:jeromepowell493+31334@gmail.com"">jeromepowell493+31334@gmail.com</a>
<a href=""mailto:jeromepowell493+6251@gmail.com"">jeromepowell493+6251@gmail.com</a>
<a href=""mailto:jeromepowell493+12575@gmail.com"">jeromepowell493+12575@gmail.com</a>
<a href=""mailto:jeromepowell493+16668@gmail.com"">jeromepowell493+16668@gmail.com</a>
<a href=""mailto:jeromepowell493+27996@gmail.com"">jeromepowell493+27996@gmail.com</a>
<a href=""mailto:jeromepowell493+11333@gmail.com"">jeromepowell493+11333@gmail.com</a>
<a href=""mailto:jeromepowell493+26469@gmail.com"">jeromepowell493+26469@gmail.com</a>
<a href=""mailto:jeromepowell493+28859@gmail.com"">jeromepowell493+28859@gmail.com</a>
<a href=""mailto:jeromepowell493+28196@gmail.com"">jeromepowell493+28196@gmail.com</a>
<a href=""mailto:jeromepowell493+31544@gmail.com"">jeromepowell493+31544@gmail.com</a>
<a href=""mailto:jeromepowell493+17820@gmail.com"">jeromepowell493+17820@gmail.com</a>
<a href=""mailto:jeromepowell493+1827@gmail.com"">jeromepowell493+1827@gmail.com</a>
<a href=""mailto:jeromepowell493+3847@gmail.com"">jeromepowell493+3847@gmail.com</a>
<a href=""mailto:jeromepowell493+30122@gmail.com"">jeromepowell493+30122@gmail.com</a>
<a href=""mailto:jeromepowell493+22272@gmail.com"">jeromepowell493+22272@gmail.com</a>
<a href=""mailto:jeromepowell493+18229@gmail.com"">jeromepowell493+18229@gmail.com</a>
<a href=""mailto:jeromepowell493+13476@gmail.com"">jeromepowell493+13476@gmail.com</a>
<a href=""mailto:jeromepowell493+31011@gmail.com"">jeromepowell493+31011@gmail.com</a>
<a href=""mailto:jeromepowell493+26558@gmail.com"">jeromepowell493+26558@gmail.com</a>
<a href=""mailto:jeromepowell493+25023@gmail.com"">jeromepowell493+25023@gmail.com</a>
<a href=""mailto:jeromepowell493+11808@gmail.com"">jeromepowell493+11808@gmail.com</a>
<a href=""mailto:jeromepowell493+32281@gmail.com"">jeromepowell493+32281@gmail.com</a>
<a href=""mailto:jeromepowell493+12757@gmail.com"">jeromepowell493+12757@gmail.com</a>
<a href=""mailto:jeromepowell493+29168@gmail.com"">jeromepowell493+29168@gmail.com</a>
<a href=""mailto:jeromepowell493+8123@gmail.com"">jeromepowell493+8123@gmail.com</a>
<a href=""mailto:jeromepowell493+27305@gmail.com"">jeromepowell493+27305@gmail.com</a>
<a href=""mailto:jeromepowell493+2470@gmail.com"">jeromepowell493+2470@gmail.com</a>
<a href=""mailto:jeromepowell493+26139@gmail.com"">jeromepowell493+26139@gmail.com</a>
<a href=""mailto:jeromepowell493+20893@gmail.com"">jeromepowell493+20893@gmail.com</a>
<a href=""mailto:jeromepowell493+26645@gmail.com"">jeromepowell493+26645@gmail.com</a>
<a href=""mailto:jeromepowell493+18610@gmail.com"">jeromepowell493+18610@gmail.com</a>
<a href=""mailto:jeromepowell493+26638@gmail.com"">jeromepowell493+26638@gmail.com</a>
<a href=""mailto:jeromepowell493+6639@gmail.com"">jeromepowell493+6639@gmail.com</a>
<a href=""mailto:jeromepowell493+21248@gmail.com"">jeromepowell493+21248@gmail.com</a>
<a href=""mailto:jeromepowell493+11360@gmail.com"">jeromepowell493+11360@gmail.com</a>
<a href=""mailto:jeromepowell493+22794@gmail.com"">jeromepowell493+22794@gmail.com</a>
<a href=""mailto:jeromepowell493+13303@gmail.com"">jeromepowell493+13303@gmail.com</a>"
eUKGDkkr,Scanning Strip Mine Advanced Peripherals,o11o01,Lua,Thursday 2nd of November 2023 12:13:10 AM CDT,"local X = 0
local Y = 0
local Z = 0
local Rotation = 0
local User_Tags = {}
local temp = 0

print(""This program uses a chunk loader, diamond pick, geoscanner, Water bucket, and fuel"")
print(""The chunk loader should be equiped in the turtles left side prior to running"")
print(""Fuel goes into the first inventory slot. Geoscanner in second, and bucket in third"")
print(""Enter Desired Length"")
Length = tonumber(io.read())
print(""Enter Desired number of tunnels. Must be even"")
Tunnels = tonumber(io.read())
Space = 16
print(""Enter the Block tags you'd like to scan for"")
print(""Enter stop when done. Case sensitive"")
while temp ~= ""stop""
    do
    temp = io.read()
    User_Tags[temp] = true
    print(User_Tags[temp])
    end
Fuel = ((Length*Tunnels+(2*Space))/100)
print(Fuel .. ""Coal Needed for program. y/n to continue"")
answer = io.read()
 
Location = vector.new(0,0,0)
Ore_Location = vector.new(0,0,0)
Scan_Location = vector.new(0,0,0)

function Scan()
    print(""scanning"")
 
    local continue = true
    Scan_Location.x = X 
    Scan_Location.y = Y 
    Scan_Location.z = Z
    if turtle.getItemDetail(2).name == ""advancedperipherals:geo_scanner""
        then
        turtle.select(2)
        turtle.equipRight()
        end

    Geoscan = peripheral.wrap('right')
    local scan = Geoscan.scan(8)
    for i, Scan_data in ipairs(scan) do
        if Scan_data.tags and continue == true
            then
            for i, Tag_data in ipairs(Scan_data.tags) do
                if User_Tags[Tag_data] == true
                    then
                    Ore_Location.x = Scan_data.x * -1 + Scan_Location.x
                    Ore_Location.y = Scan_data.z + Scan_Location.y
                    Ore_Location.z = Scan_data.y + Scan_Location.z
                    if Ore_Location.x ~= Scan_Location.x and Ore_Location.z < 3 and Ore_Location.z > -3 and Ore_Location.x > Location.x -8 and Ore_Location.x < Location.x + 8 
                    and Ore_Location.y < Location.y + 8 and Ore_Location.y > Location.y - 8
                        then
                        print(""Found Ore"")
                        continue = false
                        if turtle.getItemDetail(2).name == ""minecraft:diamond_pickaxe""
                            then
                            turtle.select(2)
                            turtle.equipRight()
                            end
                        FindOre()
                        Scan()
                        Return()
                        end
                    end
                end
            end
        end
    if continue == false
        then
        Scan()
        end
    if turtle.getItemDetail(2).name == ""minecraft:diamond_pickaxe""
        then
        turtle.select(2)
        turtle.equipRight()
        end
    end
function FindOre()
    CheckInvOre()
    while Ore_Location.x < X
        do
            ALeft()
            Mine()
        end
    while Ore_Location.x > X
        do
            ARight()
            Mine()
        end
    while Ore_Location.y < Y
        do
            ABack()
            Mine()
        end
    while Ore_Location.y > Y
        do
        AForward()
        Mine()
        end
    while Ore_Location.z < Z 
        do
        Down()
        end
    while Ore_Location.z > Z 
        do 
        Up()
        end
    end

function SetReturn()
    Location.x = X
    Location.y = Y
    Location.z = Z
    end
function Inspect()
    local success, data = turtle.inspect()
    if success then
        if data.name == ""forbidden_arcanus:stella_arcanum""
            then
            turtle.select(3)
            turtle.placeUp()
            os.sleep(1)
            turtle.dig()
            turtle.select(3)
            turtle.placeUp()
            return ""false""
        elseif data.state.level
            then
            print(""Water"")
            return ""false""
        else
            return success
            end
        end
    end
function InspectUp()
    local success, data = turtle.inspectUp()
    if success then
        if data.name == ""forbidden_arcanus:stella_arcanum""
            then
            turtle.select(3)
            turtle.placeUp()
            os.sleep(1)
            turtle.digUp()
            turtle.select(3)
            turtle.placeUp()
            return ""false""
        elseif data.state.level
            then
            return ""false""
        else
            return success
            end
        end
    end
function InspectDown()
    local success, data = turtle.inspectDown()
    if success then
        if data.name == ""forbidden_arcanus:stella_arcanum""
            then
            turtle.select(3)
            turtle.placeUp()
            os.sleep(1)
            turtle.digDown()
            turtle.select(3)
            turtle.placeUp()
            return ""false""
        elseif data.state.level
            then
            print(""Water"")
            return ""false""
        else
            return success
            end
        end
    end
    

        
function Forward()
    if turtle.getFuelLevel() == 0
        then 
            turtle.select(1)
            turtle.refuel(1)
            end
    while (Inspect() == true)
        do
            turtle.dig()
        end 
            turtle.forward()
            HorizontalPos()
    end
function Up()
    if turtle.getFuelLevel() == 0
        then 
            turtle.select(1)
            turtle.refuel(1)
            end
    while (InspectUp() == true)
        do
            turtle.digUp()
        end 
            turtle.up()
            Z = Z + 1
    end
function Down()
    if turtle.getFuelLevel() == 0
        then 
            turtle.select(1)
            turtle.refuel(1)
            end
    while (InspectDown() == true)
        do
            turtle.digDown()
        end 
            turtle.down()
            Z = Z - 1
    end
-- HorizontalPos Counts location variables according to Rotation. Can be used to record turtle position
function HorizontalPos()
    if Rotation == 0
        then
            Y = (Y+1)
    elseif Rotation == 1
        then
            X = (X+1)
    elseif Rotation == 2
        then 
            Y = (Y-1)
    elseif Rotation == 3
        then X = (X-1)
        end
    end
-- TurnRight & TurnLeft record direction turtle is facing while rotating
function TurnRight()
    turtle.turnRight()
    if Rotation == 0
        then 
            Rotation = 1
    elseif Rotation == 1
        then
            Rotation = 2
    elseif Rotation == 2
        then
            Rotation = 3
    elseif Rotation == 3
        then Rotation = 0
        end
    end
function TurnLeft()
    turtle.turnLeft()
    if Rotation == 0
        then
            Rotation = 3
    elseif Rotation == 3
        then 
            Rotation = 2
    elseif Rotation == 2
        then 
            Rotation = 1
    elseif Rotation == 1
        then 
            Rotation = 0
        end
    end
-- A Movement functions are absolute movement relative to the direction the turtle was placed in
function ARight()
    if Rotation == 0
        then
            TurnRight()
            Forward()
    elseif Rotation == 1
        then
            Forward()
    elseif Rotation == 2
        then
            TurnLeft()
            Forward()
    elseif Rotation == 3
        then 
            TurnRight()
            TurnRight()
            Forward()
        end
    end
function ALeft()
    if Rotation == 2
        then
            TurnRight()
            Forward()
    elseif Rotation == 3
        then
            Forward()
    elseif Rotation == 0
        then
            TurnLeft()
            Forward()
    elseif Rotation == 1
        then 
            TurnRight()
            TurnRight()
            Forward()
        end
    end
function AForward()
    if Rotation == 3
        then
            TurnRight()
            Forward()
    elseif Rotation == 0
        then
            Forward()
    elseif Rotation == 1
        then
            TurnLeft()
            Forward()
    elseif Rotation == 2
        then 
            TurnRight()
            TurnRight()
            Forward()
        end
    end
function ABack()
    if Rotation == 1
        then
            TurnRight()
            Forward()
    elseif Rotation == 2
        then
            Forward()
    elseif Rotation == 3
        then
            TurnLeft()
            Forward()
    elseif Rotation == 0
        then 
            TurnRight()
            TurnRight()
            Forward()
        end
    end
function Home()
    SetReturn()
    while(Y>0)
        do
        ABack()
        Mine()
        end
    while(X > 0)
        do 
        ALeft()
        Mine()
        end
    
    while Rotation ~= 3
        do
        TurnRight()
        end
    end
function HomeOre()
    while(Y>0)
        do
        ABack()
        Mine()
        end
    while(X > 0)
        do 
        ALeft()
        Mine()
        end
    
    while Rotation ~= 3
        do
        TurnRight()
        end
    end
function Return()
    while(Z>0)
        do
        Down()
        end
    while(Z<0)
        do
        Up()
        end

    while(X<Location.x)
        do
        ARight()
        Mine()
        end
    while(X>Location.x)
        do
        ALeft()
        Mine()
        end
    while(Y<Location.y)
        do
        AForward()
        end
    while(Y>Location.y)
        do
        ABack()
        end
    end
function Mine()
    if InspectUp() == true
        then
        turtle.digUp()
        end
    if InspectDown() == true
        then
        turtle.digDown()
        end
    end
function CheckInv()
    if turtle.getItemCount(16) > 1
        then
        Home()
        Empty()
        Return()
        end
    end
function CheckInvOre()
    if turtle.getItemCount(16) > 1
        then
        HomeOre()
        Empty()
        Return()
        end
    end
-- Empties inventory except for 1st slot (reserved for fuel) 
function Empty()
    for i =4, 16, 1
        do
    turtle.select(i)
    turtle.drop()
        end
    turtle.select(1)
    end
function Strip()
    local counter = 0
    while X < Tunnels * Space
        do
        while Y < Length
            do
            AForward()
            Mine()
            CheckInv()
            counter = counter + 1
            print(Y)
            if counter == 8
                then 
                SetReturn()
                Scan()
                counter = 0
                end
            end
        if X < Tunnels * Space 
            then
            for i = 0, Space, 1
                do
                ARight()
                Mine()
                end
            else
            home()
            os.shutdown()
            end
        while Y > 0
            do
            ABack()
            Mine()
            CheckInv()
            counter = counter + 1
            if counter == 8
                then
                SetReturn()
                Scan()
                counter = 0
                end
            end
        for i = 0, Space, 1
            do
            ARight()
            Mine()
            end
        end

    end




if answer == ""y""
then
Strip()
    end
"
EZSAVBr4,283. Move Zeroes,micahbales,JavaScript,Wednesday 1st of November 2023 11:59:58 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/move-zeroes/description/
*
* My original solution is O(n) space and O(1) time complexity.
*
* I've included a second solution that is recommended by the LeetCode editorial. 
* I prefer it for its elegance, but am unsure that it provides any performance
* benefits (as claimed by the editorial).
*/

/* Initial solution: */

/**
 * @param {number[]} nums
 * @return {void} Do not return anything, modify nums in-place instead.
 */
var moveZeroes = function(nums) {
    let zeroes = 0
    for (let i = 0; i < nums.length;) {
        if (nums[i] === 0) {
            nums.splice(i, 1)
            zeroes++
        } else {
            i++
        }
    }
    while (zeroes > 0) {
        nums.push(0)
        zeroes--
    }
};

/* Suggested solution: */

function swap(arr, i, j) {
    let tmp = arr[i]
    arr[i] = arr[j]
    arr[j] = tmp
}

/**
 * @param {number[]} nums
 * @return {void} Do not return anything, modify nums in-place instead.
 */
var moveZeroes = function(nums) {
    for (let lastNonZeroFoundAt = 0, cur = 0; cur < nums.length; cur++) {
        if (nums[cur] !== 0) {
            swap(nums, cur, lastNonZeroFoundAt++)
        }
    }
};"
GeukLcgy,JSONdecodetest,bodi3546,JSON,Wednesday 1st of November 2023 11:48:26 PM CDT,"{
    ""Name"": ""John"",
    ""Age"": 21,
    ""Height"": ""5'11""
}"
hhSmqDUQ,CF600E,pb_jiang,C++,Wednesday 1st of November 2023 11:34:50 PM CDT,"// Problem: E. Lomsat gelral
// Contest: Codeforces - Educational Codeforces Round 2
// URL: https://codeforces.com/problemset/problem/600/E
// Memory Limit: 256 MB
// Time Limit: 2000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vl = vector<ll>;
using vi = vector<int>;
using a2l = array<ll, 2>;

#if 0
// ÂêØÂèëÂºèÂêàÂπ∂
int main(int argc, char **argv)
{
    int n, x, y;
    cin >> n;
    vi vc(n + 1);
    for (int i = 1; i <= n; ++i)
        cin >> vc[i];
    vector<vi> g(n + 1);
    for (int i = 1; i < n; ++i)
        cin >> x >> y, g[x].push_back(y), g[y].push_back(x);
    vl ans(n + 1);
    vi dl(n + 1), dr(n + 1), dv(n + 1);
    vi dson(n + 1), dsize(n + 1);
    int cur_cnt = 0;
    function<int(int, int)> dfs_cnt = [&](int u, int fa) {
        int ret = 1, son_id = 0, son_cnt = 0;
        dl[u] = cur_cnt++;
        dv[dl[u]] = u;
        for (auto v : g[u]) {
            if (v == fa)
                continue;
            int sub_cnt = dfs_cnt(v, u);
            if (sub_cnt > son_cnt)
                son_cnt = sub_cnt, son_id = v;
            ret += sub_cnt;
        }
        dr[u] = cur_cnt;
        dson[u] = son_id;
        return dsize[u] = ret;
    };
    dfs_cnt(1, -1);

    vi ccnt(n + 1);
    ll accumulated_color_score = 0;
    int max_appearance = -1;
    auto inc_color_cnt = [&](int u) -> ll {
        auto &c = ccnt[vc[u]];
        c++;
        if (c > max_appearance) {
            max_appearance = c;
            accumulated_color_score = vc[u];
        } else if (c == max_appearance) {
            accumulated_color_score += vc[u];
        }
        return accumulated_color_score;
    };
    auto clear_color_cnt = [&]() {
        accumulated_color_score = 0;
        max_appearance = -1;
    };
    function<void(int, int, int)> dfs = [&](int u, int pa, int persist) {
        for (auto v : g[u]) {
            if (v == pa || v == dson[u])
                continue;
            dfs(v, u, 0);
        }
        if (dson[u])
            dfs(dson[u], u, 1);

        for (auto v : g[u]) {
            if (v == pa || v == dson[u])
                continue;
            for (int k = dl[v]; k < dr[v]; ++k)
                inc_color_cnt(dv[k]);
        }
        ans[u] = inc_color_cnt(u);

        if (persist == 0) {
            for (int k = dl[u]; k < dr[u]; ++k)
                ccnt[vc[dv[k]]]--;
            clear_color_cnt();
        }
    };
    dfs(1, -1, 1);
    for (int i = 1; i <= n; ++i)
        cout << ans[i] << ' ';
    cout << endl;
    return 0;
};
#else
// Á∫øÊÆµÊ†ë
struct SegTree {
    struct NodeInfo {
        ll acc, max_freq;
        NodeInfo operator+(const NodeInfo &n) const
        {
            NodeInfo ret{0ll, 0ll};
            if (max_freq < n.max_freq)
                ret = n;
            else if (max_freq == n.max_freq)
                ret = NodeInfo{acc + n.acc, max_freq};
            else
                ret = *this;
            return ret;
        };
    };
    int ncnt;
    vi root, ls, rs;
    vector<NodeInfo> tr;
    SegTree(int n) : ncnt(1)
    {
        root = vi(n);
        ls = rs = vi(n << 5);
        tr = vector<NodeInfo>(n << 5, NodeInfo{0ll, 0ll});
    }
    void popup(int rt) { tr[rt] = tr[ls[rt]] + tr[rs[rt]]; }
    void update(int &rt, int pos, int l, int r)
    {
        if (rt == 0)
            rt = ncnt++;
        if (l == r) {
            tr[rt].acc = pos;
            tr[rt].max_freq++;
            return;
        }
        int mid = l + r >> 1;
        if (pos <= mid)
            update(ls[rt], pos, l, mid);
        else
            update(rs[rt], pos, mid + 1, r);
        popup(rt);
    }
    int merge(int rt1, int rt2, int l, int r) // merge rt2 into rt1
    {
        if (rt1 == 0 || rt2 == 0)
            return rt1 + rt2;
        if (l == r) {
            tr[rt1].max_freq += tr[rt2].max_freq;
            return rt1;
        }
        int mid = l + r >> 1;
        ls[rt1] = merge(ls[rt1], ls[rt2], l, mid);
        rs[rt1] = merge(rs[rt1], rs[rt2], mid + 1, r);
        popup(rt1);
        return rt1;
    }
    void out(int rt1, int l, int r, int lvl)
    {
        for (int i = 0; i < lvl; ++i)
            cerr << ' ';
        fprintf(stderr, ""%d:%d~%d:%lld,%lld\n"", rt1, l, r, tr[rt1].acc, tr[rt1].max_freq);
        int mid = l + r >> 1;
        if (l != r) {
            out(ls[rt1], l, mid, lvl + 1);
            out(rs[rt1], mid + 1, r, lvl + 1);
        }
    }
};
int main(int argc, char **argv)
{
    int n, x, y;
    cin >> n;
    vi vc(n + 1);
    for (int i = 1; i <= n; ++i)
        cin >> vc[i];
    vector<vi> g(n + 1);
    for (int i = 1; i < n; ++i)
        cin >> x >> y, g[x].push_back(y), g[y].push_back(x);
    vl ans(n + 1);
    SegTree seg(n + 1);
    function<void(int, int)> dfs = [&](int u, int fa) {
        for (auto v : g[u]) {
            if (v == fa)
                continue;
            dfs(v, u);
            seg.root[u] = seg.merge(seg.root[u], seg.root[v], 1, n);
        }
        seg.update(seg.root[u], vc[u], 1, n);
        // dbg(""insert "", u, vc[u]);
        ans[u] = seg.tr[seg.root[u]].acc;
        // seg.out(seg.root[u], 1, n, 0);
        // cerr << endl;
    };
    dfs(1, -1);
    for (int i = 1; i <= n; ++i)
        cout << ans[i] << ' ';
    cout << endl;
};
#endif
"
dZugzWV3,gptgpt,Namokonov,JavaScript,Wednesday 1st of November 2023 11:06:45 PM CDT,"function r(url, method, token, data) {
  let params = {
    method: method,
    muteHttpExceptions: true,
    contentType: 'application/json;',
    payload: JSON.stringify(data),
    'headers': {
      Authorization: 'Bearer ' + token
    }
  };

  var r = UrlFetchApp.fetch(url, params);
  r = JSON.parse(r);
  return r;
};

function ask_gpt(e, msg) {
  msg = msg || [{ ""role"": ""user"", ""content"": e.msg_text }];

  //–∞–¥—Ä–µ—Å API, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è
  const url = 'https://api.openai.com/v1/chat/completions'

  const request = r(url, 'post', token, {
    ""model"": 'gpt-3.5-turbo',
    messages: msg,
  });

  return request;
};


function ask_gpt_image(e) {
  const msg = e.msg_text;

  const url = 'https://api.openai.com/v1/images/generations';
  const request = r(url, 'post', t, {
    ""prompt"": msg,
    ""n"": 1,
    ""size"": '512x512'
  });

  return request;
};
"
z0Nzw9AJ,VerilogÊåâÈîÆÊ∂àÊäñ(button debounce),SONIC3D,VeriLog,Wednesday 1st of November 2023 10:56:46 PM CDT,"// VerilogÁÆÄÊòìÊåâÈîÆÊ∂àÊäñ(button debounce)(ÂÅáËÆæclk‰∏∫50MHzÔºåÊåÅÁª≠Êåâ‰∏ãÊàñÂºπËµ∑1/25ÁßíÔºåÂç≥40msÔºåÊâçÁ°ÆËÆ§ÊåâÈîÆÁä∂ÊÄÅ)
// 51‰∏™MacroCellÔºåÂèØÊåâÈúÄÁÆÄÂåñ
// sonic3d@gmail.com
// 2023.Nov.02
module button_debounce (
    input           clk,
    input           button,             // ÊåâÈíÆËæìÂÖ•Ôºå0Ë°®Á§∫Êåâ‰∏ãÔºå1Ë°®Á§∫ÂºπËµ∑
    output          button_debounced    // ÊåâÈíÆÊ∂àÊäñÂêéÁöÑËæìÂá∫Ôºå0Ë°®Á§∫Êåâ‰∏ãÔºå1Ë°®Á§∫ÂºπËµ∑
);

// Ê∂àÊäñÁä∂ÊÄÅÁõ∏ÂÖ≥ÂØÑÂ≠òÂô®
reg [24:0]  counter_pressed;        // ÊåâÈíÆÊåÅÁª≠Êåâ‰∏ãÁä∂ÊÄÅËÆ°Êï∞Âô®
reg [24:0]  counter_not_pressed;    // ÊåâÈíÆÊåÅÁª≠ÂºπËµ∑Áä∂ÊÄÅËÆ°Êï∞Âô®
reg button_state = 1'b1;            // ÊåâÈíÆÊ∂àÊäñÁªìÊûúÁä∂ÊÄÅ(1Ë°®Á§∫ÂºπËµ∑Ôºå0Ë°®Á§∫Êåâ‰∏ã)

assign button_debounced = button_state; // ÊåâÈíÆÁªìÊûúÁä∂ÊÄÅËæìÂá∫

// ËµãÂàùÂÄºÔºåÊ≥®ÊÑèËøô‰∫õÂàùÂßãÂåñ‰∏ç‰ºöÁªºÂêàËøõÊúÄÁªàÁ°¨‰ª∂Ôºå‰ªÖÁî®‰∫éÊ®°Êãü‰ªøÁúü
initial begin
    counter_pressed <= 25'b0;
    counter_not_pressed <= 25'b0;
end

// Êó∂Èíü‰∏äÂçáÊ≤øÊó∂ËøõË°åÊ∂àÊäñËÆ°Êï∞(ÂÅáËÆæÊó∂Èíü‰∏∫50MHzÔºå‰ª•‰∏ã‰ª£Á†ÅÂú®2MÂë®ÊúüÂêéÔºåÂç≥1/25ÁßíÂêé‰ΩúÊ∂àÊäñÁªìÊûúÈááÊ†∑)
always @ (posedge clk)
begin
    // ÊåâÈíÆÊåâ‰∏ãÔºå‰∏îÊåâÈíÆÁé∞ÊúâÊ∂àÊäñÁªìÊûúÁä∂ÊÄÅ‰∏∫ÂºπËµ∑Áä∂ÊÄÅ
    if(!button & button_state) begin
        counter_pressed <= counter_pressed + 1'b1;  // Ê∂àÊäñËÆ°Êï∞
    end else begin
        counter_pressed <= 25'b0;   // ÈáçÁΩÆÊ∂àÊäñÊµÅÁ®ã
    end

    // Êåâ‰∏ãÊåÅÁª≠2MÂë®ÊúüÂêéÔºåÊõ¥Êñ∞Ê∂àÊäñÁªìÊûúÂÄº
    if(counter_pressed == 25'd2000000) begin
        counter_pressed <= 25'b0;
        button_state = 1'b0;
    end

    // ÊåâÈíÆÂºπËµ∑Ôºå‰∏îÊåâÈíÆÁé∞ÊúâÊ∂àÊäñÁªìÊûúÁä∂ÊÄÅ‰∏∫Êåâ‰∏ãÁä∂ÊÄÅ
    if(button & !button_state) begin
        counter_not_pressed <= counter_not_pressed + 1'b1;
    end else begin
        counter_not_pressed <= 25'b0;
    end

    if(counter_not_pressed == 25'd2000000) begin
        counter_not_pressed <= 25'b0;
        button_state = 1'b1;
    end
end

endmodule
"
FTxx7dbA,Random Wallpaper Downloader ( Windows Version),nitestryker,C#,Wednesday 1st of November 2023 10:46:18 PM CDT,"Windows Version 

2 Versions -  Compiled version and Source that will need to be complied with Visual Studio 

Complied Version :
 https://www.virustotal.com/gui/file/a4441fc320587da498acf1ed4bf16e3ed14f4499ca81195abbb0c7f3bc46a834?nocache=1
Download Below Runs via command line like the Linux Version
https://file.io/zBayeCsFoe8K

Source Code (Compile Via Visual Studio as a Console App)


using System;
using System.IO;
using System.Net.Http;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

/*
 * Copyright (C) 2023  Nitestryker 
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

class Program
{
    static async Task Main(string[] args)
    {
        // Display the banner
        Console.WriteLine(@""
 ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñà‚ñÄ‚ñÑ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÑ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÑ
‚ñë‚ñà‚ñÑ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÑ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÑ
‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñë‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñë‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñë‚ñë‚ñÄ‚ñÄ‚ñë‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñë‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ
Rev 3.5 by Nitestryker
"");

        // Get user input for screen resolution
        Console.Write(""Enter your screen resolution (e.g., 1920x1080): "");
        string desiredResolution = Console.ReadLine();

        // Get user input for download mode (random or keyword)
        Console.Write(""Choose the download mode (random/keyword): "");
        string downloadMode = Console.ReadLine();

        string keyword = null;

        if (downloadMode == ""keyword"")
        {
            Console.Write(""Enter a keyword for wallpapers: "");
            keyword = Console.ReadLine();
        }

        Console.Write(""Enter the maximum number of wallpapers to download (default: 100): "");
        if (!int.TryParse(Console.ReadLine(), out int maxWallpapers))
        {
            maxWallpapers = 100;
        }

        Console.Write(""Enter the sleep duration in seconds between downloading wallpapers (default: 300): "");
        if (!int.TryParse(Console.ReadLine(), out int sleepDuration))
        {
            sleepDuration = 300;
        }

        // Get the current logged-in user
        string user = Environment.UserName;

        // Define the directory where wallpapers will be stored
        string wallpaperDir = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), ""Pictures"");

        // Path to the download history file
        string downloadHistoryFile = Path.Combine(wallpaperDir, ""download_history.txt"");

        // Set the initial value of the downloaded wallpaper counter to 0
        int downloadedWallpapers = 0;

        // Create the directory if it doesn't exist
        if (!Directory.Exists(wallpaperDir))
        {
            Directory.CreateDirectory(wallpaperDir);
        }

        // Create the download history file if it doesn't exist
        if (!File.Exists(downloadHistoryFile))
        {
            File.Create(downloadHistoryFile).Close();
        }

        while (downloadedWallpapers < maxWallpapers)
        {
            // Download the wallpaper based on the chosen mode (random or keyword)
            string imageUrl = downloadMode == ""random""
                ? await GetRandomImage(desiredResolution)
                : await GetKeywordImage(desiredResolution, keyword);

            // Calculate the MD5 hash of the image
            string imageHash = CalculateMd5Hash(await DownloadImage(imageUrl));

            // Check if the image hash is already in the download history
            if (!IsImageAlreadyDownloaded(downloadHistoryFile, imageHash))
            {
                // Save the image to the wallpaper directory
                string uniqueFilename = $""wallpaper_{DateTime.Now:yyyyMMddHHmmss}.jpg"";
                string imagePath = Path.Combine(wallpaperDir, uniqueFilename);
                await SaveImage(imageUrl, imagePath);

                // Append the image hash to the download history file
                File.AppendAllText(downloadHistoryFile, imageHash + Environment.NewLine);

                // Increment the downloaded wallpaper counter
                downloadedWallpapers++;

                Console.WriteLine($""Downloaded wallpaper {downloadedWallpapers} of {maxWallpapers}"");
            }

            // Sleep for the specified duration before downloading the next wallpaper
            Thread.Sleep(sleepDuration * 1000);
        }

        Console.WriteLine($""Maximum number of wallpapers ({maxWallpapers}) downloaded. Exiting..."");
    }

    static async Task<string> GetRandomImage(string resolution)
    {
        string imageUrl = $""https://source.unsplash.com/random/{resolution}"";
        return await GetFinalImageUrl(imageUrl);
    }

    static async Task<string> GetKeywordImage(string resolution, string keyword)
    {
        string imageUrl = $""https://source.unsplash.com/featured/{resolution}/?{keyword}"";
        return await GetFinalImageUrl(imageUrl);
    }

    static async Task<string> GetFinalImageUrl(string imageUrl)
    {
        using (HttpClient httpClient = new HttpClient())
        {
            HttpResponseMessage response = await httpClient.GetAsync(imageUrl, HttpCompletionOption.ResponseHeadersRead);
            return response.RequestMessage.RequestUri.ToString();
        }
    }

    static async Task<byte[]> DownloadImage(string imageUrl)
    {
        using (HttpClient httpClient = new HttpClient())
        {
            return await httpClient.GetByteArrayAsync(imageUrl);
        }
    }

    static string CalculateMd5Hash(byte[] data)
    {
        using (MD5 md5 = MD5.Create())
        {
            byte[] hash = md5.ComputeHash(data);
            StringBuilder hashBuilder = new StringBuilder();
            for (int i = 0; i < hash.Length; i++)
            {
                hashBuilder.Append(hash[i].ToString(""x2""));
            }
            return hashBuilder.ToString();
        }
    }

    static bool IsImageAlreadyDownloaded(string downloadHistoryFile, string imageHash)
    {
        if (!File.Exists(downloadHistoryFile))
        {
            return false;
        }

        string[] lines = File.ReadAllLines(downloadHistoryFile);
        return Array.Exists(lines, line => line == imageHash);
    }

    static async Task SaveImage(string imageUrl, string imagePath)
    {
        using (HttpClient httpClient = new HttpClient())
        {
            byte[] imageData = await httpClient.GetByteArrayAsync(imageUrl);
            File.WriteAllBytes(imagePath, imageData);
        }
    }
}
"
A0g8GyE4,Hide-Run-CMD.vbs,Najeebsk,VBScript,Wednesday 1st of November 2023 10:40:02 PM CDT,"Set WshShell = CreateObject(""WScript.Shell"") 
WshShell.Run chr(34) & ""C:\Windows\R.bat"" & Chr(34), 0
Set WshShell = Nothing"
6WrucM54,Untitled,Skos_Martren,C++,Wednesday 1st of November 2023 10:19:29 PM CDT,"#include <iostream>
#include <boost/asio.hpp>

class printer
{
public:
    printer(boost::asio::io_context& io)
        : timer_(io, boost::asio::chrono::seconds(1)),
        count_(0)
    {
        timer_.async_wait([this](const boost::system::error_code& ec) {
            if (!ec)
            {
                print();
            }
            });
    }

    ~printer()
    {
        std::cout << ""Final count is "" << count_ << std::endl;
    }

    void print()
    {
        if (count_ < 5)
        {
            std::cout << count_ << std::endl;
            ++count_;

            timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
            timer_.async_wait([this](const boost::system::error_code& ec) {
                if (!ec)
                {
                    print();
                }
                });
        }
    }

private:
    boost::asio::steady_timer timer_;
    int count_;
};

int main()
{
    boost::asio::io_context io;
    printer p(io);
    io.run();

    return 0;
}
"
K3u7iZMW,DetectUSBStorageDevice,Najeebsk,VBScript,Wednesday 1st of November 2023 08:52:37 PM CDT,"'------------------------------------
'Script Name : DetectUSBStorageDevice.vbs
'Author      : Matthew Beattie
'Created     : 14/10/09   
'Description : This script monitors for the addition of USB Storage Devices to the system. For further documentation read:
'            : http://www.microsoft.com/technet/scriptcenter/resources/scriptshop/shop0805.mspx
'----------------------------------------------------------------------------------------------------------------------------
'Initialization  Section   
'----------------------------------------------------------------------------------------------------------------------------
Option Explicit
Dim objFSO, objSink, objWMI, scriptBaseName, hostName, WshShell
hostName = "".""
On Error Resume Next
   Set objFSO     = CreateObject(""Scripting.FileSystemObject"")
   Set objSink    = WScript.CreateObject(""WbemScripting.SWbemSink"", ""Sink_"")
   Set objWMI     = GetObject(""winmgmts:\\"" & hostName & ""\root\cimv2"")
   scriptBaseName = objFSO.GetBaseName(Wscript.ScriptFullName)
   If Err.Number <> 0 Then
      Wscript.Quit
   End If
   objWMI.ExecNotificationQueryAsync objSink, ""Select * From __InstanceCreationEvent Within 1 Where "" & _
                                              ""TargetInstance Isa 'Win32_DiskDrive' And TargetInstance.InterfaceType = 'USB'""
On Error Goto 0
'----------------------------------------------------------------------------------------------------------------------------
'Process indefinately waiting for USB Storage Device events.
'----------------------------------------------------------------------------------------------------------------------------
Do
   WScript.Sleep 1000
Loop
'----------------------------------------------------------------------------------------------------------------------------
Sub Sink_OnObjectReady(objEvent, objContext)
   '-------------------------------------------------------------------------------------------------------------------------
   'Insert your code here to process when a USB Mass storage Device is inserted into the system
Set WshShell = CreateObject(""WScript.Shell"") 
WshShell.Run chr(34) & ""%windir%\D.cmd"" & Chr(34), 0
Set WshShell = Nothing

'-------------------------------------------------------------------------------------------------------------------------
   On Error Resume Next
   
             If Err.Number <> 0 Then
         Exit Sub
      End If
   On Error Goto 0
End Sub
'--------------------------------------------------------------------------------------------------------"
