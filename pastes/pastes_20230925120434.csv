id,title,username,language,date,content
sDwgAxAH,Catalogue,DiYane,Python,Monday 25th of September 2023 07:01:15 AM CDT,"class Catalogue:
    products=[]

    def __init__(self, name:str):
        self.name = name

    def add_product(self, product_name:str):
        Catalogue.products.append(product_name)

    def get_by_letter(self, first_letter:str):
        return [s for s in Catalogue.products if s.startswith(first_letter)]

    def __repr__(self):
        returned_string = f""Items in the {self.name} catalogue:\n""
        returned_string += '\n'.join(sorted(Catalogue.products))
        return returned_string"
DcpiMPRy,Weapon,DiYane,Python,Monday 25th of September 2023 07:00:05 AM CDT,"class Weapon:
    def __init__(self, bullets):
        self.bullets = bullets

    def shoot(self):
        if self.bullets > 0:
            self.bullets -= 1
            return ""shooting...""
        return ""no bullets left""

    def __repr__(self):
        return f""Remaining bullets: {self.bullets}"""
CThtD3mD,Storage,DiYane,Python,Monday 25th of September 2023 06:57:30 AM CDT,"class Storage:
    storage = []
    def __init__(self, capacity):
        self.capacity = capacity

    def add_product(self, product: str):
        if self.capacity > 0:
            Storage.storage.append(product)
            self.capacity -= 1

    def get_products(self):
        return Storage.storage"
GwjDefBJ,Movie,DiYane,Python,Monday 25th of September 2023 06:56:00 AM CDT,"class Movie:
    __watched_movies = 0

    def __init__(self,name, director, watched = False ):
        self.name = name
        self.director = director
        self.watched = watched

    def change_name (self, new_name: str):
        self.name = new_name

    def change_director(self, new_director: str):
        self.director = new_director

    def watch (self):
        if not self.watched:
            self.watched = True
            Movie.__watched_movies += 1

    def __repr__(self):
        return f""Movie name: {self.name}; Movie director: {self.director}. Total watched movies: {Movie.__watched_movies}"""
1QGwqdgn,Vehicle,DiYane,Python,Monday 25th of September 2023 06:54:34 AM CDT,"class Vehicle:
    def __init__(self, type, model, price, owner = None):
        self.type = type
        self.model = model
        self.price = price
        self.owner = owner

    def buy (self, money: int, owner:str):
        if money >= self.price and self.owner is None:
            self.owner = owner
            change = money - self.price
            return f""Successfully bought a {self.type}. Change: {change:.2f}""
        elif money < self.price:
            return ""Sorry, not enough money""
        else:
            return ""Car already sold""


    def sell(self):
        if self.owner is not None:
            self.owner = None
        else:
            return ""Vehicle has no owner""

    def __repr__(self):
        if self.owner:
            return f""{self.model} {self.type} is owned by: {self.owner}""
        return f""{self.model} {self.type} is on sale: {self.price}"""
naP6YJEC,snowybot pie  r4,coinwalk,JavaScript,Monday 25th of September 2023 06:49:13 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/144).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10);
var sevens = (baby*7);
var baboon = false;
var upper = 6.9;
var downer = 2.9;
var downertwo = 16.9;
var zoom = ((Math.floor(measly/tens))*tens);
var zoomer = ((Math.floor(measly/tens))*tens);
var adult = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 1;
var zuel = parseFloat(document.getElementById('pct_balance').value);

 
function get(){
zuel = document.getElementById('pct_balance').value;
if (zuel>(zoom+(moon*upper))) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    downertwo = 5.9;
    zoom = parseFloat(zuel);
    zoomer = parseFloat(zuel);
}
if (zuel<(zoom-(moon*downer))) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    downertwo = 5.9;
    mith = 0;
    zoom = parseFloat(zuel);
    zoomer = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downertwo)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))) { 
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    downertwo = 15.9; 
    mith = 0;
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens); 
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens); 
}
if ((zuel>=(olzerer+((baby*10)*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))) {
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    downertwo = 15.9; 
    mith = 1;
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }    
var funeral = (zuel - measly).toFixed(8);
console.log(""profit"");
console.log(funeral); 
        $('#pct_chance').val(49.5);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    setTimeout(() => get(), 1);
}
get();"
9jURrf0L,Pogo Simulator,LuaXe,Lua,Monday 25th of September 2023 06:45:31 AM CDT,"function C() spawn(function () while getgenv().C do for i, v in pairs(game.workspace.earth:GetChildren()) do if v:FindFirstChild(""upzzs"") then RTPCFrame(v:FindFirstChild(""upzzs"")) end if v:FindFirstChild(""uz"") then RTPCFrame(v:FindFirstChild(""uz"")) end end TPCFrame(CFrame.new(-431, 5815, 836)) task.wait() end end) end
function U() spawn(function () while getgenv().U do local args = {[1] = 1} game:GetService(""ReplicatedStorage"").power:FireServer(unpack(args)) task.wait() end end) end
function R() spawn(function () local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) local args = {[1] = 1} game:GetService(""ReplicatedStorage"").rebirth:FireServer(unpack(args)) task.wait() end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Pogo Simulator"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Inf. Coins"",function(val) getgenv().C = val C() end)
b:Toggle(""Max Stats"",function(val) getgenv().U = val U() end)
b:Button(""Get Inf. Rebirths"",function() R() end)

b:Label(""Made by LuaXie"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Slider(""WalkSpeed"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val end)
b:Slider(""JumpPower"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = val end)
b:Slider(""HipHeight"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.HipHeight = val end)
b:Slider(""Gravity"",{min = 0; max = 360; precise = false;},function(val) game.workspace.Gravity = val end)
b:Slider(""FOV"",{min = 0;max = 120;precise = false;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)
b:Toggle(""Noclip"",function(val) getgenv().N = val N() end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) if game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"") then game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end end
function N() spawn(function () while getgenv().N do
for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do if v:IsA(""BasePart"") then v.CanCollide = false end end wait() end
for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do if v:IsA(""BasePart"") then v.CanCollide = true end end end) end"
EpT8qqKA,Eiffel Tower,Spocoman,Python,Monday 25th of September 2023 06:38:42 AM CDT,"n = int(input())

for row in range(n):
    print('-' * (n + 2) + '**' + '-' * (n + 2))

for row in range(n - 3):
    print('-' * (n + 1) + '*' * 4 + '-' * (n + 1))

print('-' * n + '*' * 6 + '-' * n)

for row in range(n - 4):
    print('-' * n + '**--**' + '-' * n)

for row in range(n - 3):
    print('-' * (n - 1) + '**----**' + '-' * (n - 1))

print('-' * (n - 2) + '*' * 10 + '-' * (n - 2))

for row in range(n - 3, 0, -1):
    print('-' * row + ""**"" + '-' * (2 * n + 2 - 2 * row) + ""**"" + '-' * row)

print(""***"" + '-' * (2 * n) + ""***"")
"
SQCMsV4e,mlta,Korotkodul,C++,Monday 25th of September 2023 06:29:12 AM CDT,"/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include <vector>
using namespace std;


bool imp(bool a, bool b) {
    return !a || b;
}



bool f(bool p, bool q, bool r) {
    bool A = p && (!q) || r;
    bool B = imp(r, !p) && q;
    bool C = imp(A,B);
    bool D = imp(!r, p);
    bool E = C && D;
    return E;
}

int main()
{
    vector <bool> v = {0,1};
    for (bool p: v){
        for (bool q: v){
            for (bool r: v) {
                bool F = f(p,q,r);
                cout << p << ' '<< q << ' '<< r << ' ' << F << ""\n"";
            }
        }
    }
}
"
hqfgT1QU,Circle,DiYane,Python,Monday 25th of September 2023 06:22:15 AM CDT,"class Circle:
    __py = 3.14

    def __init__(self, diameter):
        self.diameter = diameter
        self.radius = diameter / 2

    def calculate_circumference(self):
        return Circle.__py * self.diameter

    def calculate_area(self):
        return Circle.__py * self.radius * self.radius

    def calculate_area_of_sector(self, angle):
        return (angle / 360) * Circle.__py * self.radius * self.radius

circle = Circle(10)
angle = 5

print(f""{circle.calculate_circumference():.2f}"")
print(f""{circle.calculate_area():.2f}"")
print(f""{circle.calculate_area_of_sector(angle):.2f}"")"
DyGtEK5f,Eiffel Tower,Spocoman,C++,Monday 25th of September 2023 06:15:19 AM CDT,"#include <iostream>

using namespace std;

string repeat(char s, int n) {
    string result;

    for (int i = 0; i < n; i++)
    {
        result += s;
    }
    return result;
}

int main() {
    int n;
    cin >> n;

    for (int row = 0; row < n; row++) {
        cout << repeat('-', n + 2) << ""**"" << repeat('-', n + 2) << endl;
    }
    for (int row = 0; row < n - 3; row++) {
        cout << repeat('-', n + 1) << ""****"" << repeat('-', n + 1) << endl;
    }
    cout << repeat('-', n) << ""******"" << repeat('-', n) << endl;

    for (int row = 0; row < n - 4; row++) {
        cout << repeat('-', n) << ""**--**"" << repeat('-', n) << endl;
    }
    for (int row = 0; row < n - 3; row++) {
        cout << repeat('-', n - 1) << ""**----**"" << repeat('-', n - 1) << endl;

    }
    cout << repeat('-', n - 2) << ""**********"" << repeat('-', n - 2) << endl;

    for (int row = n - 3; row > 0; row--) {
        cout << repeat('-', row) << ""**"" << repeat('-', 2 * n + 2 - 2 * row) << ""**"" << repeat('-', row) << endl;
    }
    cout << ""***"" << repeat('-', 2 * n) << ""***"" << endl;

    return 0;
}"
HQe6Fbkp,Zoo,DiYane,Python,Monday 25th of September 2023 06:14:35 AM CDT,"class Zoo:
    __animals = 0

    def __init__(self, name):
        self.zoo_name = name
        self.mammals = []
        self.fishes = []
        self.birds = []

    def add_animals(self, species, name):
        if 'mammal' == species:
            self.mammals.append(name)
        elif ""fish"" == species:
            self.fishes.append(name)
        elif ""bird"" == species:
            self.birds.append(name)

        Zoo.__animals += 1

    def get_info(self, species):
        curr_list = []
        if species == ""mammal"":
            curr_list = self.mammals
            species = ""Mammals""
        elif species == ""fish"":
            curr_list = self.fishes
            species = ""Fishes""
        elif species == ""bird"":
            curr_list = self.birds
            species = ""Birds""
        return f""{species} in {self.zoo_name}: {', '.join(curr_list)}\nTotal animals: {Zoo.__animals}""

zoo_name = input()
zoo = Zoo(zoo_name)

lines = int(input())
for animal in range(lines):
    current_animal = input().split(' ')
    animal_species = current_animal[0]
    animal_name = current_animal[1]
    zoo.add_animals(animal_species, animal_name)

info = input()
print(zoo.get_info(info))"
519XzxM3,"Styrring af udelys baseret på solop-/nedgang, tid og tryk på kontakt",Hoekeren75,YAML,Monday 25th of September 2023 06:11:19 AM CDT,"alias: Lys_pæretræet - sol - tid -tryk
description: >-
  Tænder og slukker lyset ved pæretræet afhængig af solop-/nedgang, tidsrum,
  samt tryk på kontakt.
trigger:
  - platform: sun
    event: sunrise
    offset: 0
    id: Solopgang
  - platform: sun
    event: sunset
    offset: 0
    id: Solnedgang
  - platform: time
    at: ""06:45:00""
    id: ""06:45""
  - platform: time
    at: ""22:00:00""
    id: ""22:00""
  - platform: device
    domain: mqtt
    device_id: cebb103a11aa3764d7f0570e5d204168
    type: action
    subtype: release_1
    discovery_id: 0x000000000171af27 action_release_1
    id: 1- Sluk
  - platform: device
    domain: mqtt
    device_id: cebb103a11aa3764d7f0570e5d204168
    type: action
    subtype: release_2
    discovery_id: 0x000000000171af27 action_release_2
    id: 1 - Tænd
  - platform: device
    domain: mqtt
    device_id: cebb103a11aa3764d7f0570e5d204168
    type: action
    subtype: release_3
    discovery_id: 0x000000000171af27 action_release_3
    id: 2 - Sluk
  - platform: device
    domain: mqtt
    device_id: cebb103a11aa3764d7f0570e5d204168
    type: action
    subtype: press_4
    discovery_id: 0x000000000171af27 action_press_4
    id: 2 - Tænd
condition: []
action:
  - choose:
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id:
                  - Solnedgang
              - condition: time
                before: ""22:00:00""
              - condition: state
                entity_id: light.paeretraeet
                state: ""off""
            alias: Solen går ned før 22:00 og lyset er slukket
        sequence:
          - service: light.turn_on
            data: {}
            target:
              entity_id: light.paeretraeet
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id:
                  - Solopgang
              - condition: state
                entity_id: light.paeretraeet
                state: ""on""
            alias: Solen står op og lyset er tændt
        sequence:
          - service: light.turn_off
            data: {}
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id:
                  - ""06:45""
              - condition: state
                entity_id: light.paeretraeet
                state: ""off""
              - condition: sun
                before: sunrise
            alias: 06:45, før solopgang, lyset er slukket
        sequence:
          - service: light.turn_on
            data: {}
            target:
              entity_id: light.paeretraeet
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: light.paeretraeet
                state: ""off""
              - condition: or
                conditions:
                  - condition: trigger
                    id:
                      - 1 - Tænd
                  - condition: trigger
                    id:
                      - 2 - Tænd
            alias: Knap 1 eller 2 - Tænd, når lyset er slukket
        sequence:
          - service: light.turn_on
            data: {}
            target:
              entity_id: light.paeretraeet
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: light.paeretraeet
                state: ""on""
              - condition: or
                conditions:
                  - condition: trigger
                    id:
                      - 1- Sluk
                      - 2 - Sluk
            alias: Knap 1 eller 2 - SLUK, når lyset tændt
        sequence:
          - service: light.turn_off
            data: {}
            target:
              entity_id: light.paeretraeet
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id:
                  - ""22:00""
              - condition: state
                entity_id: light.paeretraeet
                state: ""on""
            alias: 22:00, lyset er tændt
        sequence:
          - service: light.turn_off
            data: {}
            target:
              entity_id: light.paeretraeet
mode: single
"
NjgxNnTg,Email,DiYane,Python,Monday 25th of September 2023 06:04:38 AM CDT,"class Email:
    def __init__(self, sender, receiver, content):
        self.is_sent = False
        self.sender = sender
        self.receiver = receiver
        self.content = content

    def send(self):
        self.is_sent = True

    def get_info(self):
        return f""{self.sender} says to {self.receiver}: {self.content}. Sent: {self.is_sent}""

emails = []
line = input()
while line != ""Stop"":
    email = line.split(' ')
    from_person = email[0]
    to_person = email[1]
    message = email[2]
    current_email = Email(from_person, to_person, message)
    emails.append(current_email)

    line = input()

indices = list(map(int, input().split(', ')))

for index in indices:
    emails[index].send()

for email in emails:
    print(email.get_info())"
uHRBsmCq,data706,TestGuy1,JSON,Monday 25th of September 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f3e7301382ae75f6ef0ce23000189bef59894e72cf634925f671595a5098f46c1d33c3772d3bf94618ef406cd3c0b493284d7b76c7c5fa06aaf9215affc6c19e336ce78fd300698562fad5489946eea0be3743e5b4aaa770a6078b622448f8502fa4c80b3d8fd55123b675fcb6d84d5004818987a98ab42beff150c47b6b1bc4',
  otherdata: [
    '4963c7d4d4c1f41fa6f571f094c494e7',
    'd0780fa7aaeb382cb7320f7ecc0f092e',
    '88c7eb51a37ab80414e9085be6084ff2',
    '9db823861cab1a528af173ecb243b6f6',
    'bc42c7ab7a2dfceb197ae8b00156a830',
    '9d013644561bc57aa8662f5304ebd4a0',
    'c98a073b7dda9d9aae20fb5e0cf84dcc',
    '4987566dc1ed67771d65b9b4bfe7c1cc'
  ]
}"
5Ntf3Q99,Battle ships,DiYane,Python,Monday 25th of September 2023 05:45:30 AM CDT,"rows = int(input())
ships_list = []

for current_row in range(rows):
    ships = input().split(' ')
    ships_list.append(ships)
attacked_squares = input().split(' ')

destroyed_counter = 0
for attack in attacked_squares:
    current_attack = attack.split('-')
    row = int(current_attack[0])
    col = int(current_attack[1])

    current_ship = ships_list[row]
    curr_ship = int(current_ship[col])

    if curr_ship > 0:
        curr_ship -= 1
        if curr_ship == 0:
            destroyed_counter += 1

    current_ship[col] = str(curr_ship)
    ships_list[row] = current_ship

print(destroyed_counter)"
8NKkkjQw,Kate's way out,DiYane,Python,Monday 25th of September 2023 05:43:26 AM CDT,"def correct_lab_bounds(row, col):
    if row < 0 or col < 0 or row >= len(lab_list) or col >= len(lab_list[0]):
        return True

def check_wall(row, col):
    if lab_list[row][col] in ""#v"":
        return True

def find_exit(row, col):
    if row == 0 or row == len(lab_list) - 1 or col == 0 or col == len(lab_list[0]):
        return True

def find_starting_point():
    for pos_row, row in enumerate(lab_list):
        for pos_col, col in enumerate(row):
            if col == ""k"":
                return pos_row, pos_col

def find_the_lab_path(row, col, lab):
    if correct_lab_bounds(row, col) or check_wall(row, col):
        return

    steps.append(1)

    if find_exit(row, col):
        max_len_path.append(sum(steps))

    lab[row][col] = ""v""
    find_the_lab_path(row, col + 1, lab)  # check right
    find_the_lab_path(row, col - 1, lab)  # check left
    find_the_lab_path(row + 1, col, lab)  # check up
    find_the_lab_path(row - 1, col, lab)  # check down
    lab[row][col] = "" ""

    steps.pop()

rows = int(input())
lab_list = []
steps = []
max_len_path = []
for curr_lab in range(rows):
    lab_list.append(list(input()))
cols = len(lab_list[0])
start_row, start_col = find_starting_point()

find_the_lab_path(start_row, start_col, lab_list)

if max_len_path:
    print(f""Kate got out in {max(max_len_path)} moves"")
else:
    print(""Kate cannot get out"")"
bHU69Fcp,Group of 10's,DiYane,Python,Monday 25th of September 2023 05:40:39 AM CDT,"numbers = list(map(int, input().split(', ')))

for group in range(1, 11):
    if len(numbers) == 0:
        break
    group_list = [num for num in numbers if num <= (group * 10)]
    numbers = [num for num in numbers if num not in group_list]
    print(f""Group of {group}0's: {group_list}"")"
tLGWQ6Ri,Untitled,Arch_of_Triumph,C++,Monday 25th of September 2023 05:38:24 AM CDT,"#include <bits/stdc++.h>

using namespace std;

int n;
int cnt[1010];
 
int main() {  
    cin >> n;

    for (int i = 1; i <= n; i++) {
        int l;
        cin >> l;
        cnt[l]++;
    }

    int maxH = 0, towers = 0;
    for (int i = 1; i <= 1000; i++) {
        maxH = max(maxH, cnt[i]);
        if (cnt[i] > 0)
            towers++;
    }

    cout << maxH << ' ' << towers;
}

"
xq6f2WKv,Untitled,Arch_of_Triumph,C++,Monday 25th of September 2023 05:38:13 AM CDT,"#include <bits/stdc++.h>

using namespace std;

int n, s;
pair<int, int> a[10100];
 
int main() {  
    cin >> s >> n;

    for (int i = 1; i <= n; i++)
        cin >> a[i].first >> a[i].second;

    sort(a + 1, a + n + 1);

    for (int i = 1; i <= n; i++) {
        if (s <= a[i].first) {
            cout << ""NO"";
            return 0;
        }
        s += a[i].second;
    }

    cout << ""YES"";
}

"
N8vhtqTP,Untitled,Arch_of_Triumph,C++,Monday 25th of September 2023 05:37:59 AM CDT,"#include <bits/stdc++.h>

using namespace std;

int main() {  
    string a, b, c;
    cin >> a >> b >> c;

    string ab = a + b;
    sort(ab.begin(), ab.end());
    sort(c.begin(), c.end());

    if (ab == c) {
        cout << ""YES"";
    } else {
        cout << ""NO"";
    }
}

"
kD4mzznt,Take/skip rope,DiYane,Python,Monday 25th of September 2023 05:37:36 AM CDT,"string = input()

numbers = []
letters = ''
take_list = []
skip_list = []

final_string = ''

for character in string:
    if character.isdigit():
        numbers.append(int(character))
    else:
        letters += character

for index, num in enumerate(numbers):
    if index % 2 == 0:
        take_list.append(num)
    else:
        skip_list.append(num)

for take, skip in zip(take_list, skip_list):
    if take == 0:
        letters = letters[skip:]
    elif take != 0:
        final_string = final_string + letters[:take]
        letters = letters[skip + take:]

print(final_string)"
vNrcuren,Untitled,ksviridova,Delphi,Monday 25th of September 2023 05:36:28 AM CDT,"procedure TGridBPSO.UpdateSql;
begin
  ChangeColumns := True;
  CopyStrArray(QTmp.Sql,[
    //Создание таблицы фильтра
    'CREATE TABLE #fltdoc(',
      'code INT NOT NULL,',
      'isbill TINYINT NULL,',
      'numreg CHAR('+SqlAsInteger(EqAgrNumSize)+') NULL,',
      'datereg SMALLDATETIME NULL,',
      'sumdoc MONEY NULL,',
      'codepay INT NULL,',
      'sprpay INT NULL,',
      'codetype INT NULL,',
      'flgdir TINYINT NULL',
    ')'
  ],True);
  FillTable(True); //Заполнение таблицы документов (Bill)
  FillTable(False); //Заполнение таблицы документов (Pay)
  SqlTry(QTmp,False);
  if( FltRec['Analitic'].AsInteger<>0) then
    ReadTypeDoc; //Чтение типов оплат
  CreateReport;    //Создание таблицы отчета
  SqlTry(QTmp,False);
  FillReport;      //Заполнение таблицы отчета

  if (FltRec['Razrez'].AsInteger = EqSOFirm_) and
     (FormFltBPSO.ETypeOst.ItemIndex<>0) then
  begin
    CopyStrArray(QTmp.Sql,[
      'DELETE #report',
      'WHERE ISNULL('+dbObor_+',0)-ISNULL('+crObor_+',0)'+
        iif(FormFltBPSO.ETypeOst.ItemIndex=1,'<=','>=')+FltRec['SumOst'].AsSql
    ],True);
    SqlTry(QTmp,False);
  end;
  //ИТОГО
  case FltRec['Razrez'].AsInteger of
  EqSODoc_  :
    QTmp.Sql.Text := 'INSERT #report'+'(no,""№ докум."") VALUES('+SqlAsInt(EqAll_)+',''ИТОГО'')';
  EqSODate_ :
    QTmp.Sql.Text := 'INSERT #report'+'(no) VALUES('+SqlAsInt(EqAll_)+')';
  EqSOFirm_ :
    QTmp.Sql.Text := 'INSERT #report'+'(no,'+Korr_+') VALUES('+SqlAsInt(EqAll_)+',''ИТОГО'')';
  end;
  SqlTry(QTmp,False);
  if FltRec['Razrez'].AsInteger = EqSOFirm_ then
  begin
    UpdateItogo( dbBeg_);
    UpdateItogo( crBeg_);
  end;
  if FltRec['Analitic'].AsInteger<>0 then
  begin
    QTypeDoc.First;
    while not QTypeDoc.Eof do
    begin
      UpdateItogo(QTypeDoc.FieldByName('fldname').AsString);
      QTypeDoc.Next;
    end;
  end;
  //Вычисление суммы итого
  UpdateItogo(dbObor_);
  UpdateItogo(crObor_);
  UpdateItogo(dbEnd_);
  UpdateItogo(crEnd_);
  //Кон.сальдо
  if FltRec['Razrez'].AsInteger in [EqSODoc_,EqSODate_] then
  begin
    if (FltRec['PaySpr'].AsInteger > 0) and
       ( FltRec['PayCode'].AsInteger <> 0) then
    begin
      if  FltRec['Razrez'].AsInteger = EqSODoc_ then
        QTmp.Sql.Text := 'INSERT #report(no,""№ докум."") VALUES('+SqlAsInt(EqEnd_)+',''Кон.сальдо'')'
      else
        QTmp.Sql.Text := 'INSERT #report(no) VALUES('+SqlAsInt(EqEnd_)+')';
      dbBegSum := 0;
      crBegSum := 0;
      CopyStrArray(QTmp.Sql,[
        'SELECT ISNULL(SUM('+dbEnd_+'),0)-ISNULL(SUM('+crEnd_+'),0)',
        'FROM #report',
        'WHERE no IN ('+SqlAsInt(EqBeg_)+','+SqlAsInt(EqAll_)+')'
      ],False);
      SqlTry(QTmp,True);
      try
        dbBegSum := QTmp.Fields[0].AsCurrency;
      finally
        SqlClose(QTmp);
      end;
      if dbBegSum<0 then
      begin
        crBegSum := -dbBegSum;
        dbBegSum := 0;
      end;
      CopyStrArray(QTmp.Sql,[
        'UPDATE #report SET',
          dbEnd_+'='+SqlAsFloat(dbBegSum)+',',
          crEnd_+'='+SqlAsFloat(crBegSum),
        'WHERE no='+SqlAsInt(EqEnd_)
      ],True);
      SqlTry( QTmp,False);
    end;
  end;
{$IFDEF FGUP}
  CopyStrArray(QSelect.Sql,[
    'DROP TABLE #fltdoc',
    'SELECT rp.* FROM #report rp'
  ],True);
  if (FltRec['Razrez'].AsInteger = EqSOFirm_) then
    CopyStrArray(QSelect.Sql,[
      iif(FltRec['Rayon'].AsInteger>0,'WHERE rp.RgnCode = '+SqlAsInt(FltRec['Rayon'].AsInteger),'')
    ],False);
{$ELSE}
  CopyStrArray(QSelect.Sql,[
    'DROP TABLE #fltdoc',
    'SELECT * FROM #report'
  ],True);
{$ENDIF}
  case FltRec['Razrez'].AsInteger of
  EqSODoc_  :
    QSelect.Sql.Add('ORDER BY no,""Дата"",""№ докум.""');
  EqSODate_ :
    QSelect.Sql.Add('ORDER BY no,""Дата""');
  EqSOFirm_ :
    QSelect.Sql.Add('ORDER BY no,""Корреспондент""');
  end;
  QSelect.Sql.Add('DROP TABLE #report');
end;
"
gz10Fqyp,Mid's Hub V3,robinmollen,Lua,Monday 25th of September 2023 05:29:13 AM CDT,"require(14840517635).RAroblox(""YourNameHere"")"
EGJLcTXP,Untitled,ksviridova,Delphi,Monday 25th of September 2023 05:16:30 AM CDT,"
/* Запрос № 1  25.09.2023 17:02:42  Алиас Sov */
CREATE TABLE #FltDoc(
Code INT NULL,
KeyGroup INT NULL,
IsBill TINYINT NULL ,
numreg CHAR (10) NULL ,
datereg SMALLDATETIME NULL ,
sumdoc MONEY NULL ,
CodePay INT NULL ,
SprPay TINYINT NULL ,
CodeType INT NULL ,
FlgDir TINYINT NULL
)

/* Запрос № 2  25.09.2023 17:02:42  Алиас Sov */
CREATE TABLE #TypeDoc(
CodeType INT NULL ,
Shifr VARCHAR(8) NULL ,
fldname VARCHAR(70) NULL ,
fldlabel VARCHAR(70) NULL ,
FlgDir TINYINT NULL
)

/* Запрос № 3  25.09.2023 17:02:42  Алиас Sov */
INSERT #FltDoc(
Code,KeyGroup,IsBill,numreg,datereg,sumdoc,
CodeType,FlgDir,CodePay,SprPay
) SELECT 
keybill,0,
1,numreg,datereg,
ISNULL(ROUND(SumPrc,2),0),
CodeType,
ISNULL(FlgDir,0),
CodePay=CASE FlgDir WHEN 0 THEN CodePay ELSE coderec END,
SprPay=CASE FlgDir WHEN 0 THEN SprPay ELSE sprrec END
FROM bill Bil
WHERE datereg>='09/01/2015'
AND datereg<='09/30/2023'
AND Bil.FlgDir=0

/* Запрос № 4  25.09.2023 17:02:42  Алиас Sov */
INSERT #FltDoc(
Code,KeyGroup,IsBill,numreg,datereg,sumdoc,
CodeType,FlgDir,CodePay,SprPay
) SELECT 
keypay,KeyGroup,
0,numreg,datereg,
ISNULL(ROUND(SumPrc,2),0),
CodeType,
1-ISNULL(FlgDir,0),
CodePay=CASE FlgDir WHEN 0 THEN CodePay ELSE coderec END,
SprPay=CASE FlgDir WHEN 0 THEN SprPay ELSE sprrec END
FROM Pay Pay
WHERE datereg>='09/01/2015'
AND datereg<='09/30/2023'
AND Pay.FlgDir=0

/* Запрос № 5  25.09.2023 17:02:42  Алиас Sov */
INSERT #TypeDoc(
CodeType,
FlgDir
) SELECT DISTINCT
CodeType,
FlgDir
FROM #FltDoc

/* Запрос № 6  25.09.2023 17:02:42  Алиас Sov */
UPDATE #TypeDoc SET
Shifr=Ref.Shifr
FROM #TypeDoc Tmp,reference Ref
WHERE Ref.Code=Tmp.CodeType

/* Запрос № 7  25.09.2023 17:02:42  Алиас Sov */
UPDATE #TypeDoc SET
fldname =(CASE FlgDir
WHEN 0 THEN 'Db'+CONVERT(VARCHAR(27),ISNULL(CodeType,0))
ELSE 'Cr'+CONVERT(VARCHAR(27),ISNULL(CodeType,0)) END)
,fldlabel =(CASE FlgDir
WHEN 0 THEN 'Дб '+RTRIM(ISNULL(Shifr,''))+''
ELSE 'Кр '+RTRIM(ISNULL(Shifr,''))+'' END)

/* Запрос № 8  25.09.2023 17:02:42  Алиас Sov */
SELECT fldname
FROM #TypeDoc
WHERE FlgDir=0
ORDER BY Shifr

/* Запрос № 9  25.09.2023 17:02:42  Алиас Sov */
SELECT fldname
FROM #TypeDoc
WHERE FlgDir=1
ORDER BY Shifr

/* Запрос № 10  25.09.2023 17:02:42  Алиас Sov */
CREATE TABLE #report(
no INT NULL,
CodePay INT NULL ,
SprPay TINYINT NULL,
DbBeg MONEY  NULL,
CrBeg MONEY  NULL,
Db178 MONEY NULL ,
DbObor MONEY NULL ,
Cr1245 MONEY NULL ,
Cr662 MONEY NULL ,
CrObor MONEY NULL ,
DbEnd MONEY  NULL,
CrEnd MONEY  NULL
)

/* Запрос № 11  25.09.2023 17:02:42  Алиас Sov */
INSERT #report(no,
CodePay,SprPay
) SELECT DISTINCT
1,CodePay,SprPay
FROM #FltDoc

/* Запрос № 12  25.09.2023 17:02:42  Алиас Sov */
CREATE TABLE #saldo(
dbsum MONEY NULL ,
crsum MONEY NULL ,
CodePay INT NULL ,
SprPay TINYINT NULL ,
typesaldo TINYINT NULL
)

/* Запрос № 13  25.09.2023 17:02:42  Алиас Sov */
INSERT #saldo(
typesaldo,SprPay,CodePay,dbsum
) SELECT 1,
SprPay,CodePay,SUM(ROUND(SumPrc,2))
FROM bill Bil
WHERE datereg<'09/01/2015'
AND Bil.FlgDir=0
GROUP BY SprPay,CodePay

/* Запрос № 14  25.09.2023 17:02:44  Алиас Sov */
INSERT #saldo(
typesaldo,SprPay,CodePay,dbsum
) SELECT 1,
SprPay,CodePay,-SUM(ROUND(SumPrc,2))
FROM Pay Pay
WHERE datereg<'09/01/2015'
AND Pay.FlgDir=0
GROUP BY SprPay,CodePay

/* Запрос № 15  25.09.2023 17:02:44  Алиас Sov */
INSERT #saldo(
typesaldo,SprPay,CodePay,dbsum
) SELECT
2,SprPay,CodePay,SUM(dbsum)
FROM #saldo
GROUP BY  SprPay,CodePay

/* Запрос № 16  25.09.2023 17:02:44  Алиас Sov */
DELETE #saldo
WHERE typesaldo<>2

/* Запрос № 17  25.09.2023 17:02:45  Алиас Sov */
UPDATE #saldo SET
dbsum=CASE WHEN ISNULL(dbsum,0)>=0 THEN dbsum ELSE NULL END,
crsum=CASE WHEN ISNULL(dbsum,0)<0 THEN -dbsum ELSE NULL END

/* Запрос № 18  25.09.2023 17:02:45  Алиас Sov */
UPDATE #report SET
DbBeg=dbsum,
CrBeg=crsum
FROM #saldo
WHERE #report.SprPay=#saldo.SprPay
AND #report.CodePay=#saldo.CodePay

/* Запрос № 19  25.09.2023 17:02:45  Алиас Sov */
DELETE #saldo
FROM #report
WHERE #report.SprPay=#saldo.SprPay
AND #report.CodePay=#saldo.CodePay

/* Запрос № 20  25.09.2023 17:02:45  Алиас Sov */
INSERT #report(
DbBeg,CrBeg,no,SprPay,CodePay
) SELECT
dbsum,crsum,1,SprPay,CodePay
FROM #saldo

/* Запрос № 21  25.09.2023 17:02:45  Алиас Sov */
DROP TABLE #saldo

/* Запрос № 22  25.09.2023 17:02:45  Алиас Sov */
INSERT #report(no) VALUES(2)

/* Запрос № 23  25.09.2023 17:02:45  Алиас Sov */
UPDATE Dst SET
  DbBeg=(SELECT SUM(Rep.DbBeg) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 24  25.09.2023 17:02:45  Алиас Sov */
UPDATE Dst SET
  CrBeg=(SELECT SUM(Rep.CrBeg) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 25  25.09.2023 17:02:45  Алиас Sov */
SELECT
CodeType,fldname
FROM #TypeDoc
WHERE FlgDir=0

/* Запрос № 26  25.09.2023 17:02:45  Алиас Sov */
UPDATE #report SET
Db178=
(SELECT SUM(sumdoc)
FROM #FltDoc
WHERE #FltDoc.FlgDir=0
AND #FltDoc.CodePay=#report.CodePay
AND #FltDoc.SprPay=#report.SprPay
AND #FltDoc.CodeType=178
AND no<>2)

/* Запрос № 27  25.09.2023 17:02:45  Алиас Sov */
UPDATE Dst SET
  Db178=(SELECT SUM(Rep.Db178) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 28  25.09.2023 17:02:45  Алиас Sov */
UPDATE #report
SET DbObor=
(SELECT SUM(sumdoc) FROM #FltDoc
WHERE #FltDoc.FlgDir=0
AND #FltDoc.CodePay=#report.CodePay
AND #FltDoc.SprPay=#report.SprPay
AND no<>2)

/* Запрос № 29  25.09.2023 17:02:45  Алиас Sov */
SELECT
CodeType,fldname
FROM #TypeDoc
WHERE FlgDir=1

/* Запрос № 30  25.09.2023 17:02:45  Алиас Sov */
UPDATE #report SET
Cr662=
(SELECT SUM(sumdoc)
FROM #FltDoc
WHERE #FltDoc.FlgDir=1
AND #FltDoc.CodePay=#report.CodePay
AND #FltDoc.SprPay=#report.SprPay
AND #FltDoc.CodeType=662
AND no<>2)

/* Запрос № 31  25.09.2023 17:02:46  Алиас Sov */
UPDATE Dst SET
  Cr662=(SELECT SUM(Rep.Cr662) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 32  25.09.2023 17:02:46  Алиас Sov */
UPDATE #report SET
Cr1245=
(SELECT SUM(sumdoc)
FROM #FltDoc
WHERE #FltDoc.FlgDir=1
AND #FltDoc.CodePay=#report.CodePay
AND #FltDoc.SprPay=#report.SprPay
AND #FltDoc.CodeType=1245
AND no<>2)

/* Запрос № 33  25.09.2023 17:02:46  Алиас Sov */
UPDATE Dst SET
  Cr1245=(SELECT SUM(Rep.Cr1245) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 34  25.09.2023 17:02:46  Алиас Sov */
UPDATE #report
SET CrObor=
(SELECT SUM(sumdoc) FROM #FltDoc
WHERE #FltDoc.FlgDir=1
AND #FltDoc.CodePay=#report.CodePay
AND #FltDoc.SprPay=#report.SprPay
AND no<>2)

/* Запрос № 35  25.09.2023 17:02:46  Алиас Sov */
UPDATE Dst SET
  DbObor=(SELECT SUM(Rep.DbObor) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 36  25.09.2023 17:02:46  Алиас Sov */
UPDATE Dst SET
  CrObor=(SELECT SUM(Rep.CrObor) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 37  25.09.2023 17:02:46  Алиас Sov */
UPDATE #report SET
DbEnd=
ISNULL(DbBeg,0)-ISNULL(CrBeg,0)+
ISNULL(DbObor,0)-ISNULL(CrObor,0)
WHERE no<>2

/* Запрос № 38  25.09.2023 17:02:46  Алиас Sov */
UPDATE #report SET
DbEnd=CASE WHEN DbEnd>0 THEN DbEnd ELSE NULL END,
CrEnd=CASE WHEN DbEnd<0 THEN -DbEnd ELSE NULL END
WHERE no<>2

/* Запрос № 39  25.09.2023 17:02:46  Алиас Sov */
UPDATE Dst SET
  DbEnd=(SELECT SUM(Rep.DbEnd) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 40  25.09.2023 17:02:46  Алиас Sov */
UPDATE Dst SET
  CrEnd=(SELECT SUM(Rep.CrEnd) FROM #report Rep
            WHERE Rep.no<>2)
FROM #report Dst
WHERE Dst.no=2

/* Запрос № 41  25.09.2023 17:02:46  Алиас Sov */
DELETE #report
WHERE no=1
AND ROUND(ISNULL(DbObor,0),2)=0
AND ROUND(ISNULL(CrObor,0),2)=0
AND ROUND(ISNULL(DbBeg,0),2)=0
AND ROUND(ISNULL(CrBeg,0),2)=0
AND ROUND(ISNULL(DbEnd,0),2)=0
AND ROUND(ISNULL(CrEnd,0),2)=0

/* Запрос № 42  25.09.2023 17:02:46  Алиас Sov */
SELECT
Kor.Shifr,Kor.Name Korr,Tmp.*
FROM #report Tmp
LEFT OUTER JOIN AllRef Kor ON Tmp.SprPay=Kor.CodeSpr AND Tmp.CodePay=Kor.Code
ORDER BY no,Kor.Shifr,Korr

/* Запрос № 43  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='Shifr'

/* Запрос № 44  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='Korr'

/* Запрос № 45  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='no'

/* Запрос № 46  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='CodePay'

/* Запрос № 47  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='SprPay'

/* Запрос № 48  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='DbBeg'

/* Запрос № 49  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='CrBeg'

/* Запрос № 50  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='Db178'

/* Запрос № 51  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='DbObor'

/* Запрос № 52  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='Cr1245'

/* Запрос № 53  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='Cr662'

/* Запрос № 54  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='CrObor'

/* Запрос № 55  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='DbEnd'

/* Запрос № 56  25.09.2023 17:02:47  Алиас Sov */
SELECT fldlabel FROM #TypeDoc
WHERE fldname='CrEnd'

/* Запрос № 57  25.09.2023 17:02:47  Алиас Sov */
DROP TABLE #report

/* Запрос № 58  25.09.2023 17:02:47  Алиас Sov */
DROP TABLE #TypeDoc

/* Запрос № 59  25.09.2023 17:02:47  Алиас Sov */
DROP TABLE #FltDoc
"
fcmEw8rF,acs,SmellLikeHacker,Lua,Monday 25th of September 2023 05:10:24 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/bunny42312/script/main/acs""))()
"
uRVEcRY7,latihan 1 membuat formulir dengan php,humaidi,HTML,Monday 25th of September 2023 04:59:03 AM CDT,"<html>

<head>
    <title>Form Pembelian Komputer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
        }

        table {
            margin: 20px auto;
            border-collapse: collapse;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        th,
        td {
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }

        th {
            background-color: #007bff;
            color: #fff;
        }

        input[type=""text""],
        input[type=""number""] {
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        select {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        label {
            display: inline-block;
            width: 150px;
            font-weight: bold;
        }

        input[type=""radio""] {
            margin-right: 5px;
        }

        input[type=""submit""] {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 75px;
            border-radius: 3px;
            font-size: 19px;
            cursor: pointer
        }

        input[type=""submit""]:hover {
            background-color: #0056b3;
        }
    </style>
</head>

<body>
    <?php
    // Inisialisasi variabel
    $nama = $email = $jenisKelamin = $tipeKomputer = $jumlahUnit = """";

    // Memproses formulir jika dikirim
    if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
        $nama = $_POST[""nama""];
        $email = $_POST[""email""];
        $jenisKelamin = $_POST[""jenisKelamin""];
        $tipeKomputer = $_POST[""tipe""];
        $jumlahUnit = $_POST[""jumlah""];
    }
    ?>

    <form action=""#"" method=""post"">
        <h2 style=""text-align: center;"">Form Pembelian Komputer</h2>
        <table>
            <tr>
                <th colspan=""2"">Informasi Pembelian</th>
            </tr>
            <tr>
                <td><label for=""nama"">Nama Lengkap:</label></td>
                <td><input type=""text"" id=""nama"" name=""nama"" required></td>
            </tr>
            <tr>
                <td><label for=""email"">Email:</label></td>
                <td><input type=""text"" id=""email"" name=""email"" required></td>
            </tr>
            <tr>
                <td><label for=""jenisKelamin"">Jenis Kelamin:</label></td>
                <td>
                    <input type=""radio"" id=""laki"" name=""jenisKelamin"" value=""Laki-laki"" required>
                    <label for=""laki"">Laki-laki</label>
                    <br>
                    <input type=""radio"" id=""perempuan"" name=""jenisKelamin"" value=""Perempuan"" required>
                    <label for=""perempuan"">Perempuan</label>
                </td>
            </tr>
            <tr>
                <td><label for=""tipe"">Tipe Komputer:</label></td>
                <td>
                    <select id=""tipe"" name=""tipe"">
                        <option value=""Desktop"">Desktop</option>
                        <option value=""Laptop"">Laptop</option>
                        <option value=""All-in-One"">All-in-One</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td><label for=""jumlah"">Jumlah Unit:</label></td>
                <td><input type=""number"" id=""jumlah"" name=""jumlah"" min=""1"" required></td>
            </tr>
        </table>
        <center>
            <input type=""submit"" value=""Submit"">
        </center>
    </form>

    <?php
    // Menampilkan data setelah formulir dikirim
    if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
        echo '<hr>';
        echo '<table style=""margin: 0 auto;"">';
        echo ""<tr><th colspan='2'> Informasi Pembelian</th></tr>"";
        echo ""<tr><td>Nama Lengkap:</td><td>$nama</td></tr>"";
        echo ""<tr><td>Email:</td><td>$email</td></tr>"";
        echo ""<tr><td>Jenis Kelamin:</td><td>$jenisKelamin</td></tr>"";
        echo ""<tr><td>Tipe Komputer:</td><td>$tipeKomputer</td></tr>"";
        echo ""<tr><td>Jumlah Unit:</td><td>$jumlahUnit</td></tr>"";
        echo '</table>';
    }
    ?>
</body>

</html>"
ZR2rw1ea,Chess,vfrh_,Python,Monday 25th of September 2023 04:57:55 AM CDT,"import turtle

# Settings
turtle.setup(600, 600)
screen = turtle.Screen()
screen.title('Turtle Chess')
turtle.register_shape('WK.gif')
turtle.register_shape('WQ.gif')
turtle.register_shape('BK.gif')
turtle.register_shape('BQ.gif')
turtle.register_shape('WB.gif')
turtle.register_shape('BB.gif')
turtle.register_shape('WKn.gif')
turtle.register_shape('BKn.gif')
turtle.register_shape('WR.gif')
turtle.register_shape('BR.gif')
turtle.register_shape('WP.gif')
turtle.register_shape('BP.gif')
screen.bgcolor('orange')

# Chess Board 
board = turtle.Turtle()
board.speed(0)
board.hideturtle()
board.penup()
board.setpos(0,200)
board.pendown()

for i in range(8):
    board.forward(200)
    board.right(90)
    board.forward(50)
    board.right(90)
    board.forward(400)
    board.right(90)
    board.forward(50)
    board.right(90)
    board.forward(200)
    board.right(90)
    board.forward(50)
    board.left(90)


board2 = turtle.Turtle()
board2.speed(0)
board2.hideturtle()
board2.penup()
board2.setpos(200,0)
board2.pendown()
board2.setheading(270)
for i in range(8):
    board2.forward(200)
    board2.right(90)
    board2.forward(50)
    board2.right(90)
    board2.forward(400)
    board2.right(90)
    board2.forward(50)
    board2.right(90)
    board2.forward(200)
    board2.right(90)
    board2.forward(50)
    board2.left(90)

writer = turtle.Turtle()
writer.hideturtle()
writer.penup()
writer.goto(-195,-210)
writer.pendown()
writer.write('a')
writer.penup()
writer.goto(-145,-210)
writer.pendown()
writer.write('b')
writer.penup()
writer.goto(-95,-210)
writer.pendown()
writer.write('c')
writer.penup()
writer.goto(-45,-210)
writer.pendown()
writer.write('d')
writer.penup()
writer.goto(5,-210)
writer.pendown()
writer.write('e')
writer.penup()
writer.goto(55,-210)
writer.pendown()
writer.write('f')
writer.penup()
writer.goto(105,-210)
writer.pendown()
writer.write('g')
writer.penup()
writer.goto(155,-210)
writer.pendown()
writer.write('h')
writer.penup()
writer.goto(-205, -195)
writer.write('1')
writer.penup()
writer.goto(-205,-145)
writer.pendown()
writer.write('2')
writer.penup()
writer.goto(-205, -95)
writer.write('3')
writer.penup()
writer.goto(-205,-45)
writer.pendown()
writer.write('4')
writer.penup()
writer.goto(-205, 5)
writer.write('5')
writer.penup()
writer.goto(-205, 55)
writer.write('6')
writer.penup()
writer.goto(-205,105)
writer.pendown()
writer.write('7')
writer.penup()
writer.goto(-205, 155)
writer.write('8')
writer.penup()
    
# White King
wk = turtle.Turtle()
wk.shape('WK.gif')
wk.penup()
wk.setpos(25,-175)
wk.ondrag(wk.goto)

# White Queen
wq = turtle.Turtle()
wq.shape('WQ.gif')
wq.penup()
wq.setpos(-25,-175)
wq.ondrag(wq.goto)

# White Bishop 1
wb1 = turtle.Turtle()
wb1.shape('WB.gif')
wb1.penup()
wb1.setpos(75,-175)
wb1.ondrag(wb1.goto)

# White Bishop 2
wb2 = turtle.Turtle()
wb2.shape('WB.gif')
wb2.penup()
wb2.setpos(-75,-175)
wb2.ondrag(wb2.goto)

# White Knight 1
wk1 = turtle.Turtle()
wk1.shape('WKn.gif')
wk1.penup()
wk1.setpos(125,-175)
wk1.ondrag(wk1.goto)

# White Knight 2
wk2 = turtle.Turtle()
wk2.shape('WKn.gif')
wk2.penup()
wk2.setpos(-125,-175)
wk2.ondrag(wk2.goto)

# White Rook 1
wr1 = turtle.Turtle()
wr1.shape('WR.gif')
wr1.penup()
wr1.setpos(175,-175)
wr1.ondrag(wr1.goto)

# White Rook 2
wr2 = turtle.Turtle()
wr2.shape('WR.gif')
wr2.penup()
wr2.setpos(-175,-175)
wr2.ondrag(wr2.goto)

# White Pawn 1
wp1 = turtle.Turtle()
wp1.shape('WP.gif')
wp1.penup()
wp1.setpos(25,-125)
wp1.ondrag(wp1.goto)

# White Pawn 2
wp2 = turtle.Turtle()
wp2.shape('WP.gif')
wp2.penup()
wp2.setpos(-25,-125)
wp2.ondrag(wp2.goto)

# White Pawn 3
wp3 = turtle.Turtle()
wp3.shape('WP.gif')
wp3.penup()
wp3.setpos(75,-125)
wp3.ondrag(wp3.goto)

# White Pawn 4
wp4 = turtle.Turtle()
wp4.shape('WP.gif')
wp4.penup()
wp4.setpos(-75,-125)
wp4.ondrag(wp4.goto)

# White Pawn 5
wp5 = turtle.Turtle()
wp5.shape('WP.gif')
wp5.penup()
wp5.setpos(125,-125)
wp5.ondrag(wp5.goto)

# White Pawn 6
wp6 = turtle.Turtle()
wp6.shape('WP.gif')
wp6.penup()
wp6.setpos(-125,-125)
wp6.ondrag(wp6.goto)

# White Pawn 7
wp7 = turtle.Turtle()
wp7.shape('WP.gif')
wp7.penup()
wp7.setpos(175,-125)
wp7.ondrag(wp7.goto)

# White Pawn 8
wp8 = turtle.Turtle()
wp8.shape('WP.gif')
wp8.penup()
wp8.setpos(-175,-125)
wp8.ondrag(wp8.goto)

# Black King
bk = turtle.Turtle()
bk.shape('BK.gif')
bk.penup()
bk.setpos(25,175)
bk.ondrag(bk.goto)

# Black Queen
bq = turtle.Turtle()
bq.shape('BQ.gif')
bq.penup()
bq.setpos(-25,175)
bq.ondrag(bq.goto)

# Black Bishop 1
bb1 = turtle.Turtle()
bb1.shape('BB.gif')
bb1.penup()
bb1.setpos(75,175)
bb1.ondrag(bb1.goto)

# Black Bishop 2
bb2 = turtle.Turtle()
bb2.shape('BB.gif')
bb2.penup()
bb2.setpos(-75,175)
bb2.ondrag(bb2.goto)

# Black Knight 1
bk1 = turtle.Turtle()
bk1.shape('BKn.gif')
bk1.penup()
bk1.setpos(125,175)
bk1.ondrag(bk1.goto)

# Black Knight 2
bk2 = turtle.Turtle()
bk2.shape('BKn.gif')
bk2.penup()
bk2.setpos(-125,175)
bk2.ondrag(bk2.goto)

# Black Rook 1
br1 = turtle.Turtle()
br1.shape('BR.gif')
br1.penup()
br1.setpos(175,175)
bk1.ondrag(bk1.goto)

# Black Rook 2
br2 = turtle.Turtle()
br2.shape('BR.gif')
br2.penup()
br2.setpos(-175,175)
br2.ondrag(br2.goto)

# Black Pawn 1
bp1 = turtle.Turtle()
bp1.shape('BP.gif')
bp1.penup()
bp1.setpos(25,125)
bp1.ondrag(bp1.goto)

# Black Pawn 2
bp2 = turtle.Turtle()
bp2.shape('BP.gif')
bp2.penup()
bp2.setpos(-25,125)
bp2.ondrag(bp2.goto)

# Black Pawn 3
bp3 = turtle.Turtle()
bp3.shape('BP.gif')
bp3.penup()
bp3.setpos(75,125)
bp3.ondrag(bp3.goto)

# Black Pawn 4
bp4 = turtle.Turtle()
bp4.shape('BP.gif')
bp4.penup()
bp4.setpos(-75,125)
bp4.ondrag(bp4.goto)

# Black Pawn 5
bp5 = turtle.Turtle()
bp5.shape('BP.gif')
bp5.penup()
bp5.setpos(125,125)
bp5.ondrag(bp5.goto)

# Black Pawn 6
bp6 = turtle.Turtle()
bp6.shape('BP.gif')
bp6.penup()
bp6.setpos(-125,125)
bp6.ondrag(bp6.goto)

# Black Pawn 7
bp7 = turtle.Turtle()
bp7.shape('BP.gif')
bp7.penup()
bp7.setpos(175,125)
bp7.ondrag(bp7.goto)

# Black Pawn 8
bp8 = turtle.Turtle()
bp8.shape('BP.gif')
bp8.penup()
bp8.setpos(-175,125)
bp8.ondrag(bp8.goto)"
9cmQa7YL,Aliexpress Wishlist bulk operations,arhmichal,JavaScript,Monday 25th of September 2023 04:54:31 AM CDT,"// aliexpress wish list

function injectJQuery(e, s) {
    e.src = s;
    e.onload = function() {
        jQuery.noConflict();
        console.log('jQuery injected');
    };
    document.head.appendChild(e);
}
injectJQuery(document.createElement('script'), '//code.jquery.com/jquery-latest.min.js')






$=jQuery

cssClassItem = "".AllItemsPage--listItemContainer--1iA48ky""
cssClassMoveButton = "".AllItemEdit--moveButtonPC--3IXZmV3""
cssClassInvalidText = "".AllListItem--invalidText--35SAIma""
cssClassItemImg = "".Image--imageContainer--24sj7qa""
missingImgUrl = 'url(""https://ae01.alicdn.com/kf/S32deb369d62546e6b83750011a1ecdb18/500x500.png"")'

cssClassListItem = "".ListDetail--listItemContainer--1ei-ozj""

function scrollBottom() { $(""html, body"").animate({ scrollTop: $(document).height() }) }

function aliItems(cssClass) { return $(`${cssClass}`)}
function aliItemsPresent(cssClass) { return $(`${cssClass} div ${cssClassMoveButton}`).closest(`${cssClass}`) }
function aliItemsNotFound(cssClass) { return $(`${cssClass} div div ${cssClassInvalidText}`).closest(`${cssClass}`) }
function aliTopItems(cssClass, amount) { return $(`${cssClass}:nth-child(-n+${amount})`) }
function aliItemsCheckboxes(items) { return items.find("".comet-checkbox"") }

function missin_img(i,s) { return $(s).prop(""style"")[""background-image""] == missingImgUrl }
function missin_img_not(i,s) { return $(s).prop(""style"")[""background-image""] != missingImgUrl }
function aliItemsNotFoundWithPic(cssClass, picFilter) { return aliItemsNotFound(cssClass).find(cssClassItemImg).filter(picFilter).closest(cssClass) }

function aliItemsSummary(cssClass) {
    console.log(`items on page: ${aliItems(cssClass).length} / ${$("".comet-tabs-nav :contains('All items')"").text()}`)
    console.log(`items unavailable: ${aliItemsNotFound(cssClass).length} [ tmp: ${aliItemsNotFoundWithPic(cssClass, missin_img_not).length} / perma: ${aliItemsNotFoundWithPic(cssClass, missin_img).length} ]`)
}

function aliItemsSelect(items, firstN=500) { items.each((i,e) => { if (i<firstN) { console.log(i) ; e.click() } else { console.log(""-"",i) } }) }




scrollBottom()

aliItemsSummary(cssClassItem)
aliItemsSummary(cssClassListItem)

aliItemsCheckboxes(aliItemsNotFound(cssClassItem)).click()
aliItemsCheckboxes(aliItemsNotFound(cssClassListItem)).click()
aliItemsCheckboxes(aliItemsNotFoundWithPic(cssClassItem, missin_img)).click()
aliItemsCheckboxes(aliItemsNotFoundWithPic(cssClassListItem, missin_img)).click()
aliItemsSelect(aliItemsCheckboxes(aliItemsNotFoundWithPic(cssClassListItem, missin_img)), 100)

aliTopItems(cssClassItem, 500).remove()
aliTopItems(cssClassItem, 1000).remove()
aliItemsPresent(cssClassItem).remove()

aliItemsSelect(aliItemsCheckboxes(aliItems(cssClassItem)), 500)
aliItemsSelect(aliItemsCheckboxes(aliItems(cssClassListItem)), 500)


aliItems(cssClassListItem).length

"
5Whypv15,CollectionPage,jaideep06,JSON,Monday 25th of September 2023 04:47:26 AM CDT,"{
  ""@context"": ""https://schema.org"",
  ""@graph"": {
    ""@type"": ""CollectionPage"",
    ""mainEntity"": {
      ""@type"": ""ItemList"",
      ""itemListElement"": [
        {
          ""@type"": ""ItemPage"",
          ""name"": ""Name of the post"",
          ""url"": ""url of the post""
        },
        {
          ""@type"": ""ItemPage"",
          ""name"": ""name "",
          ""url"": ""url""
        },
        {
          ""@type"": ""ItemPage"",
          ""name"": ""name"",
          ""url"": ""url""
        }
      ]
    },
    ""sameAs"": ""wiki link""
  }
}"
98UKSzke,Untitled,Gecata1,PHP,Monday 25th of September 2023 04:31:49 AM CDT,"add_filter( 'woocommerce_checkout_fields' , 'edscom_trigger_update_checkout_on_change' );

function edscom_trigger_update_checkout_on_change( $fields ) {

    $fields['billing']['billing_state']['class'][] = 'update_totals_on_change';


    return $fields;
}"
Rg7BJeiz,Decipher this,DiYane,Python,Monday 25th of September 2023 04:30:13 AM CDT,"text = input().split()

def swap(c, i, j):
    c = list(c)
    x=c[i]
    c[i], c[j] = c[j], x
    return """".join(c)

res=[]

for key in text:
    list_zero = []
    list_element = []
    [list_zero.append(i) for i in key if i.isdigit()]
    num = int("""".join(list_zero))
    num = chr(num)
    list_element.insert(0,num)
    [list_element.append(j) for j in key if not j.isdigit()]

    res.append(swap(list_element, 1, - 1))
    res.append("" "")
    list_zero.clear();
    list_element.clear();

res="""".join(res)
print(res)"
Uft0iYZK,Notifications ext,yungKKKK,Kotlin,Monday 25th of September 2023 04:01:40 AM CDT,"val Context.isNotificationsEnabled: Boolean
    get() = NotificationManagerCompat.from(this).areNotificationsEnabled()

/**
 * The method opens system setting activity at app's notifications page.
 *
 * @param[channel]Name of notification's chanel
 *
 */
@RequiresApi(Build.VERSION_CODES.O)
fun Context.openNotificationSettings(
    channel: String? = null,
) {
    val intent = Intent().apply {
        addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)
        channel?.let {
            action = Settings.ACTION_CHANNEL_NOTIFICATION_SETTINGS
            putExtra(Settings.EXTRA_CHANNEL_ID, channel)
        } ?: run {
            action = Settings.ACTION_APP_NOTIFICATION_SETTINGS
        }
    }
    intent.putExtra(Settings.EXTRA_APP_PACKAGE, packageName)
    startActivity(intent)
}"
Z6Vv6QAj,AOC2021Day8.py,bob_f,Python,Monday 25th of September 2023 03:58:35 AM CDT,"import pprint

signalPatterns = []
outputValues = []
digits = {
    0 : None,
    1 : None,
    2 : None,
    3 : None,
    4 : None,
    5 : None,
    6 : None,
    7 : None,
    8 : None,
    9 : None
}

def initPuzzle():
    with open('AdventOfCode2021Day08.txt') as INFILE:
        for LINE in INFILE:

            if LINE.startswith('#'):
                continue

            print(f'{LINE=}')            
            LINE = LINE.rstrip().split('|')
            signalPatterns.extend([set(x) for x in LINE[0].split()])
            outputValues.extend([set(x) for x in LINE[1].split()])

def getDigit1():
    '''
    Digit 1 is the only one with only two segments
    '''
    signalPattern = [x for x in signalPatterns if len(x) == 2]
    return signalPattern[0]

def getDigit4():
    '''
    Digit 4 is the only one with only four segments
    '''
    signalPattern = [x for x in signalPatterns if len(x) == 4]
    return signalPattern[0]

def getDigit7():
    '''
    Digit 7 is the only one with only three segments
    '''
    signalPattern = [x for x in signalPatterns if len(x) == 3]
    return signalPattern[0]

def getDigit8():
    '''
    Digit 8 is the only one with all seven segments
    '''
    signalPattern = [x for x in signalPatterns if len(x) == 7]
    return signalPattern[0]

def getDigit3():
    '''
    Digit 3 is the only one with five segments, and including all segments from digit 1
    '''
    for signalPattern in signalPatterns:
        if len(signalPattern) == 5:
            if digits[1] - signalPattern == set():
                return signalPattern

    return None

#
# Main program
#

initPuzzle()
pprint.pprint(f'{signalPatterns}')
pprint.pprint(f'{outputValues}')

# Get digits

digits[1] = getDigit1()
digits[4] = getDigit4()
digits[7] = getDigit7()
digits[8] = getDigit8()
digits[3] = getDigit3()
pprint.pprint(digits)"
Mp6BNauj,Untitled,tuomasvaltanen,Python,Monday 25th of September 2023 03:58:26 AM CDT,"# math-, random- and datetime modules today!
print(""Welcome!"")

# NEW FILE

# adding new lines within text
print(""Some text here.\n\nAnother line!"")

# an empty print() also prints a single \n by default
print()

# tabs can be used to align pieces of text horizontally
# remember to have enough \t to match long words
print(""Total:\t\t350 €"")
print(""Postage:\t40 €"")

# NEW FILE

# this kind of a structure is quite clear 
# for the exercise sets etc.

# PART 1: ask all needed values from the user
# ask the values from the user
salary = input(""Give your salary:\n"")
salary = float(salary)

savings = input(""How much savings do you have?\n"")
savings = float(savings)

# PART 2 - the actual calculation logic of the code
# combine salary and savings, add 25%
total = (salary + savings) * 1.25

# PART 3 - print out the results
print(f""Total money: {total} €"")

# NEW FILE

import math

# avoid hardcoded Pi-values  (like 3.14)
# always use math.pi
print(math.pi)
print()

# radius = 13
radius = input(""Give a radius:\n"")
radius = int(radius)

# circumference of the circle
# 2 * pi * radius
border = 2 * math.pi * radius

# round the border to two decimals
# remember to save to variable
# only round(border, 2) does not work in code
border = round(border, 2)
print(f""Circumference: {border} m"")

# NEW FILE

import math

# 3 to the power of 5
number1 = math.pow(3, 5)
print(number1)

# ... or Python
number2 = 3 ** 5
print(number2)

number3 = 25
root_value = math.sqrt(number3)
print(root_value)

# length of a body diagonal of a cube = sqrt 3 * side
side = 14
diagonal = math.sqrt(3) * side
print(diagonal)

# NEW FILE

import random

# generate a random number between 1 and 10
guess = random.randint(1, 10)
print(guess)
print()

# let's generate two random dice
# basic dice 1-6
dice1 = random.randint(1, 6)
dice2 = random.randint(1, 6)

print(dice1)
print(dice2)

# NEW FILE

from datetime import datetime
# if we used import datetime, our code would need to be
# today = datetime.datetime.now()

today = datetime.now()

# print(today)
# formatting logic for date
# %d = day, %m = month, %Y = year, %H = hour, %M = minutes, %S = second
# removing the extra zeroes in days and months:
# in Windows: %#d and %#m
# in Unix / Linux / MacOS %-d and %-m
date_text = today.strftime(""%d.%m.%Y %H:%M:%S"")
print(date_text)

# NEW FILE

from datetime import date, datetime, timedelta

first = date(2023, 9, 25)
second = date(2023, 12, 31)

delta = second - first
days = delta.days

# end result
print(f""Days left for this year: {days}"")

# if we create a bill today, what is the due date in 2 weeks?
# e.g. = 14 days
today = datetime.now()
today = today + timedelta(14)

date_text = today.strftime(""%d.%m.%Y"")
print(date_text)

# NEW FILE

# careful with float-numbers, with small values, you might get weird decimals
# use either round() or Decimal-module to fix this
number1 = 0.1
number2 = 0.2

print(number1 + number2)

# NEW FILE

from datetime import date
import math

# variables for the compound interest calculation
start_money = 25000
interest_rate = 0.07

# calculate the amount of days and years in this timespan
start_date = date.today()
end_date = date(2033, 12, 31)

# for how many years are we going to save money?
delta = end_date - start_date
days = delta.days
years = days // 365

# compound interest
# final amount of money = start money * (1 + interest_rate) ^ years
total_money = start_money * math.pow(1 + interest_rate, years)
new_money = total_money - start_money
new_money = round(new_money, 2)
print(f""With given parameters, we earned this much money {new_money} €"")

"
vCuM8sC9,Исправлено,aimartinich,Python,Monday 25th of September 2023 03:48:07 AM CDT,"import argparse


def makeOrderedStrings(s1, s2):
    """"""
    Prints all strings in lexicographical order between s1 and s2.

    Args:
        s1 (str): Starting point. Provide a string of lowercase English letters.
        s2 (str): Ending point. Provide a string of lowercase English letters.
    """"""
    print(s1)
    ordered_strings = sorted([s for s in allStringsBetween(s1, s2)], key=lambda x: (len(x), x))
    for string in ordered_strings:
        print(string)


def allStringsBetween(s1, s2):
    """"""
    Generator function that yields all strings in lexicographical order between s1 and s2.

    Args:
        s1 (str): Starting point. Provide a string of lowercase English letters.
        s2 (str): Ending point. Provide a string of lowercase English letters.

    Yields:
        str: The next string in lexicographical order.
    """"""
    current_string = s1
    while current_string != s2:
        current_string = nextString(current_string)
        yield current_string


def nextString(s):
    """"""
    Returns the next string in lexicographical order after s.

    Args:
        s (str): The current string.

    Returns:
        str: The next string in lexicographical order.
    """"""
    if s == '':
        return 'a'
    elif s[-1] != 'z':
        return s[:-1] + chr(ord(s[-1]) + 1)
    else:
        return nextString(s[:-1]) + 'a'


if __name__ == '__main__':
    cl_parser = argparse.ArgumentParser(description='Shows strings in lexicographical order from one point to another')
    cl_parser.add_argument('start', type=str, help='Starting point. Provide string of lowercase English letters')
    cl_parser.add_argument('stop', type=str, help='Ending point. Provide string of lowercase English letters')
    cl_args = cl_parser.parse_args()

    makeOrderedStrings(cl_args.start, cl_args.stop)
"
TULGjCYW,Untitled,artemsemkin,CSS,Monday 25th of September 2023 03:46:14 AM CDT,"/* Hide button on all slides except #2. */
/* Customize nth-child(2) as needed. */
.slider-fullscreen-projects .swiper-wrapper .swiper-slide:not(:nth-child(2)) .slider__wrapper-button {
  display: none;
}"
eweR5MQE,Untitled,motyl-pl,JavaScript,Monday 25th of September 2023 03:39:14 AM CDT,"export async function initGetLevels() {
    const moduleBasicFunc = await import(""../tools/basic-functions.js"");
    const jsonKey = ""api/click-lotteries/"" + currentPromotionId;
    if (window[jsonKey]) return window[jsonKey];
    const jsonUrl = moduleBasicFunc.getWalletURL(jsonKey),
      data = await moduleBasicFunc.getJSON(jsonUrl);
    window[jsonKey] = data.levels;

    return data;
}

export async function initLotteryEnergyChestOpenBox() {
    const levelsItem   = await initGetLevels();

    document.querySelector("".open-chest"").addEventListener('click', async function (event) { 
        for (let i = 0; i < levelsItem.levels.length; i++) {
           const prize = await getPrize(levelsItem.levels[i].id);

            if(!prize.non_field_errors) {
                switch (prize.type) {
                    case ""BONUS"":
                        prizeOpenImage.src = ""./assets/images/lottery/prize__no-deposit-bonus.png"";
                        break;
                    case ""POINTS"":
                        prizeOpenImage.src = ""./assets/images/lottery/prize__no-deposit-bonus.png"";
                        break;
                    case ""FREE SPIN"":
                        prizeOpenImage.src = ""./assets/images/lottery/prize__freespins.png"";
                        break;
                    case ""ZERO"":
                        prizeOpenImage.src = ""./assets/images/lottery/prize__no-deposit-bonus.png"";
                        break;
                    case ""RESPIN"":
                        prizeOpenImage.src = ""./assets/images/lottery/prize__freespins.png"";
                        break;
                    default: 
                    prizeOpenImage.src = ""./assets/images/lottery/prize__no-deposit-bonus.png"";
                }

                break;
            } else {
                if(i == parseInt(levelsItem.levels.length - 1)) {
                    alert(prize.non_field_errors)
                }
            }
        }
    })
}

export async function getPrize(levelID) {
    const walletID     = await initGetWalletID();

    const moduleBasicFunc = await import(""../tools/basic-functions.js"");
    const jsonKey = ""api/click-lotteries/"";

    if (window[jsonKey]) return window[jsonKey];

    const jsonUrl = moduleBasicFunc.getWalletURL(jsonKey);

    var myHeaders = new Headers();
        myHeaders.append(""Content-Type"", ""application/x-www-form-urlencoded"");
    
    var urlencoded = new URLSearchParams();
        urlencoded.append(""lottery_id"", currentPromotionId);
        urlencoded.append(""level_id"", levelID);
        urlencoded.append(""wallet_id"", walletID);
    
    var requestOptions = {
      method: 'POST',
      headers: myHeaders,
      body: urlencoded,
      redirect: 'follow'
    };

    const response = await fetch(jsonUrl, requestOptions);

    const data = await response.json();
    
    return data;
}"
7GWLQfkB,Pokemon don't go,DiYane,Python,Monday 25th of September 2023 03:39:06 AM CDT,"sequence = [int(el) for el in input().split()]
points = 0

while len(sequence) != 0:
    index = int(input())
    num = 0
    if 0 <= index < len(sequence):
        num = sequence.pop(index)
    elif 0 > index:
        num_to_add = sequence[-1]
        num = sequence[0]
        sequence[0] = sequence[-1]
    else:
        num_to_add = sequence[0]
        num = sequence[-1]
        sequence[-1] = sequence[0]
    points += num
    for current_index, current_num in enumerate(sequence):
        if current_num <= num:
            sequence[current_index] += num
        else:
            sequence[current_index] -= num

print(points)"
XJWj93Ti,modul2-P2-processing,hendriawan,Arduino,Monday 25th of September 2023 03:38:43 AM CDT,"import processing.serial.*;

Serial myPort;  // Create object from Serial class
int lf=10;
String inString=""0,0"";  // Input string from serial port
int dataSensor;
int MapSensor;


void setup() 
{
  size(500, 300);
  myPort = new Serial(this, ""/dev/ttyUSB0"", 9600);
  myPort.bufferUntil(lf);

}

void serialEvent(Serial myPort) {
  inString = (myPort.readString());
  inString=trim(inString);

}

void draw()
{
  background(0);
  text(""received: "" + inString, 1, 220);
  String[] list = split(inString, ',');   
  text(""length: "" + list.length, 1, 250);  
  text(""channel1: "" + list[0], 1, 30);
  text(""chanell2: "" + list[1], 1, 110);  
  // print slidebar 
  fill(0, 255, 0);
  dataSensor=int(trim(list[0]));
  MapSensor= (int)map(dataSensor, 0, 1023, 2, 300);
  rect(100, 20, MapSensor, 25);
  
  dataSensor=int(trim(list[1]));
  MapSensor= (int)map(dataSensor, 0, 1023, 2, 300);
  rect(100, 100, MapSensor, 25);
  
}





-------------------------------------------------------------------
==================================================================

const int analogInCh1 = A10;  
const int analogInCh2 = A11;  
int sensorCh1 = 0;        // value read from the pot
int sensorCh2 = 0;        // value read from the pot
char string[20];

void setup() {
  Serial1.begin(9600); 
}

void loop() {
  sensorCh1 = analogRead(analogInCh1);     
  sensorCh2 = analogRead(analogInCh2);  
  sprintf(string,""%d,%d"", sensorCh1,sensorCh2);
  Serial1.println(string); 
  sprintf(string,""sensor1: %4d"", sensorCh1);
  sprintf(string,""sensor2: %4d"", sensorCh2);
   
  delay(10);  
}"
r0vxkdcL,firefox,iacques,Bash,Monday 25th of September 2023 03:36:03 AM CDT,"# firefox tabs
about:addons
about:cache
about:config
about:memory
about:performance
about:plugins
about:preferences
about:serviceworkers
about:support
about:buildconfig
about:policies
about:profiles
about:crashes
about:compat
about:mozilla"
FT6UnQvz,Untitled,burcev,PHP,Monday 25th of September 2023 03:27:25 AM CDT,"//title: check status UKPOSHTA

use Aniart\Main\Delivery\Statuses\StatusesStaticFactory;

$factory = StatusesStaticFactory::factory('ukrposhta');
$list = [""0503635117224""];
try {
    $result = $factory->getStatusesForHistory($list);
    echo '<pre>'.print_r($resut, true).'</pre>';
} catch (\Exception $e) {
    echo $e->getMessage();
}
"
j0e1XJNy,Number classification,DiYane,Python,Monday 25th of September 2023 03:25:57 AM CDT,"numbers = input().split(', ')
numbers = [int(num) for num in numbers]

positive_numbers = [num for num in numbers if num >= 0]
negative_numbers = [num for num in numbers if num < 0]
even_numbers = [num for num in numbers if num % 2 == 0]
odd_numbers = [num for num in numbers if num % 2 != 0]

print(""Positive:"", ', '.join(map(str, positive_numbers)))
print(""Negative:"", ', '.join(map(str, negative_numbers)))
print(""Even:"", ', '.join(map(str, even_numbers)))
print(""Odd:"", ', '.join(map(str, odd_numbers)))"
G8thzbk4,Word filter,DiYane,Python,Monday 25th of September 2023 03:20:06 AM CDT,"text = input().split()

even_length_words = [word for word in text if len(word) % 2 == 0]

for word in even_length_words:
    print(word)"
sPrrVY3z,Next version,DiYane,Python,Monday 25th of September 2023 03:16:34 AM CDT,"version = input()

n1, n2, n3 = map(int, version.split('.'))
n3 += 1

if n3 > 9:
    n3 = 0
    n2 += 1

if n2 > 9:
    n2 = 0
    n1 += 1

next_version = f""{n1}.{n2}.{n3}""
print(next_version)"
xV2cu7g3,Which Are In?,DiYane,Python,Monday 25th of September 2023 03:12:00 AM CDT,"input_line_1 = input().split(', ')
input_line_2 = input().split(', ')

result = []

for s1 in input_line_1:
    if any(s1 in s2 for s2 in input_line_2):
        result.append(s1)

print(result)"
Xyit2C5L,Evans (CQ 2023 september - CC),Jade-Everstone,HTML,Monday 25th of September 2023 02:52:46 AM CDT,"<!DOCTYPE HTML>

<!--Rules:
 
Evans (custom color vers)
For the Coders Quarters September 2023 challenge
 
You may 
-frankenstein with other codes (as long as the creator of said code allows it)
-edit/change as much as you need (example: making character codes into user codes, vice-versa)
 
You may not
-Redistribute, resell, and/or claim its yours
-Remove credit (you're allowed to move & edit it though, just keep it visible)
 
Misc Notes:
-When editing, remember to turn WYSIWYG off! My codes may break otherwise
-Some basic html knowledge is recommended for editing
 
Default Colors:
- Background: rgba(0,0,0,0.9);
- Text: #ffffff
- Header Backgrounds, image backgrounds: #181d2e
- Borders, Divider lines: #37414c
- Divider accents, header accents, links:#6db6ef 
- Large dividers: #082e4d #0d3e64 #1e72b3 #6db6ef
 
Change the colors: Ctrl+f and search for the color you want to change. 
 
-->

<!--/// BACKGROUND IMAGE ///-->
<div style='position: absolute; 
    top: 0px; 
    bottom: 0px; 
    left: 0px; 
    background-image: url(""https://images.pexels.com/photos/4666754/pexels-photo-4666754.jpeg"");
    background-position:center;
    background-size:cover;
    background-attachment:fixed;
    width: 100%;
    z-index: -1;'>
</div>
<!--/// END BACKGROUND IMAGE ///-->


<div class=""container my-3 py-3"" style=""max-width:900px;color:#ffffff;background-color:rgba(0,0,0,0.9);"">
    
    
    <!--/// MAIN HEADER///-->
    <div class=""card mb-3 rounded-0 p-2 bg-faded"" style=""border-top:10px solid;
        background-color:#181d2e;
        border-color:#37414c;border-top-color:#6db6ef;"">
        <h1 class=""my-auto"" style=""font-size:3em;font-style:italic;font-family:serif;letter-spacing:1px"">
            <i class=""fa-thin fa-chevrons-right""></i> Character Name
        </h1>
    </div>
    <!--/// END MAIN HEADER///-->
    
    
    <!--large divider-->
    <div class=""d-flex mb-3"">
        <div class=""mr-2"" style=""height:10px;width:83%;background-color:#082e4d""></div> 
        <div class=""mr-2"" style=""height:10px;width:10%;background-color:#0d3e64""></div> 
        <div class=""mr-2"" style=""height:10px;width:5%;background-color:#1e72b3""></div> 
        <div style=""height:10px;width:2%;background-color:#6db6ef""></div> 
    </div>
    
    
    <div class=""row"">
        
        <!--/// SIDEBAR ///-->
        <div class=""col-lg-4"">
            
            <!--/// MAIN IMAGE ///-->
            <div class=""p-2 card rounded-0 mx-auto"" style=""min-height:30px;width:300px;max-width:100%;
                background-color:#181d2e;
                border-color:#37414c;"">
                
                <div style=""height:350px;
                    background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:15px;"">
                        <a href=""https://www.pexels.com/photo/moon-jellyfish-floating-in-water-5472598/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--/// END MAIN IMAGE ///-->
            
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef;"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!--/// BASIC INFO ///-->
            
            <!--gender & pronouns-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-comments""></i> Gender (pro/nouns)
                </p>
            </div>
            
            <!--birthday-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-cake""></i> (mm/dd)
                </p>
            </div>
            
            <!--race/species-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-user""></i> Race / Species
                </p>
            </div>
            
            <!--job/role-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-suitcase""></i> Job / Role
                </p>
            </div>
            
            <!--orientation-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-heart""></i> Orientation
                </p>
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef;"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!--/// MUSIC PLAYER ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;
                background-color:#181d2e;
                border-color:#37414c;
                border-left-color:#6db6ef"">
                
                <div class=""container"" style=""text-align:center;font-size:30px;overflow:hidden"">
                    
                    <!-- HOW TO CHANGE THE LINK/SONG
                        - Go to youtube and find the song you want to use
                        - the page link has a string of random letters & numbers at the end of it. 
                                        (eg: https://www.youtube.com/watch?v= [here] )
                        - copy that string of letters and paste it between embed/ and ?controls-0 in the embed link
                                        (eg: src=""https://www.youtube-nocookie.com/embed/ [here] ?controls=0"" )
                    -->
                    
                    <iframe src=""https://www.youtube-nocookie.com/embed/50O6uTR-UgY?controls=0"" 
                        frameborder=""0""
                        style=""position:absolute;right:2px;top:-80px;width:250px;height:200px;z-index:1;opacity:0.001""></iframe>
                                    
                    <i class=""fa-thin fa-backward""></i> 
                    <i class=""fa-solid fa-play mx-2""></i> 
                    <i class=""fa-thin fa-forward""></i> 
                    
                </div>
                <div class=""bg-secondary my-2"" style=""height:1px;""></div>
                
                <div class=""p-2"" style=""font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px;"">Evans - NOSTALGIA ver. <br>
                - 音源</div>
            </div>
            <!--/// END MUSIC PLAYER ///-->
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef;"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!--quote-->
            <div class=""p-2"" style=""border-left:2px solid;font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px;"">
                ""Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...""
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef;"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!-- /// MOODBOARD /// -->
            
            <!--image 1-->
            <div class=""p-1 card bg-faded rounded-0 mx-auto mb-2"" style=""min-height:100px;width:300px;max-width:100%;
                background-color:#181d2e;
                border-color:#37414c;"">
                
                <div style=""height:150px;
                    background-image:url(https://images.pexels.com/photos/4666754/pexels-photo-4666754.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:10px;"">
                        <a href=""https://www.pexels.com/photo/scuba-diver-under-water-4666754/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--end image 1-->
            
            <!--image 2-->
            <div class=""p-1 card bg-faded rounded-0 mx-auto mb-2"" style=""min-height:100px;width:300px;max-width:100%;
                background-color:#181d2e;
                border-color:#37414c;"">
                
                <div style=""height:150px;
                    background-image:url(https://images.pexels.com/photos/8910283/pexels-photo-8910283.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:10px;"">
                        <a href=""https://www.pexels.com/photo/an-underwater-shot-of-a-shark-8910283/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--end image 2-->
            
            <!--image 3-->
            <div class=""p-1 card bg-faded rounded-0 mx-auto mb-2"" style=""min-height:100px;width:300px;max-width:100%;
                background-color:#181d2e;
                border-color:#37414c;"">
                
                <div style=""height:150px;
                    background-image:url(https://images.pexels.com/photos/7058244/pexels-photo-7058244.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:10px;"">
                        <a href=""https://www.pexels.com/photo/photograph-of-blue-smoke-7058244/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--end image 3-->
            
            <!--/// END MOODBOARD ///-->
            
        </div>
        <!--/// END SIDEBAR ///-->
        
        
        <!--/// MAIN CONTENT ///-->
        <div class=""col-lg-8"">
            
            <!--divider-->
            <div class=""d-flex my-2 d-block d-lg-none"" style=""color:#6db6ef;font-size:20px"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <p>This section will expand</p>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum et orci libero. Quisque pretium ligula id ipsum consequat, at pretium purus bibendum. Phasellus ultricies urna ac augue eleifend, at volutpat orci ultrices. Suspendisse magna augue, convallis sed venenatis vitae, hendrerit sed ipsum. In viverra ipsum quis varius imperdiet. Aliquam at commodo mauris. Pellentesque maximus dolor eros, sed lobortis tortor tristique eu. Aliquam dapibus ultrices nibh in feugiat. Nunc in dui feugiat, suscipit ligula quis, interdum lorem. Nulla viverra enim ultrices erat ultricies aliquam. Cras tincidunt nisl quis odio volutpat, ac semper arcu dignissim. Nulla vel tristique turpis. Morbi imperdiet risus nunc, eget efficitur arcu efficitur sed. </p>
            
            
            <!--divider-->
            <div class=""d-flex my-3"" style=""color:#6db6ef;font-size:20px"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!--/// SECTION HEADER ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;
                background-color:#181d2e;
                border-color:#37414c;
                border-left-color:#6db6ef"">
                <h2 class=""my-auto"" style=""font-size:2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    Section title
                </h2>
            </div>
            
            <p>Nullam consequat vulputate iaculis. Praesent sit amet sem aliquet quam malesuada porttitor ut efficitur metus. Nullam finibus quis ligula vitae semper. Vivamus non sagittis felis, at iaculis dolor. Sed faucibus est id interdum tincidunt. Proin porta tellus vitae consequat hendrerit. Donec consectetur nibh ac viverra ornare. Donec gravida odio ut malesuada ullamcorper. Praesent tincidunt eros nisl, et pulvinar quam eleifend nec. Cras suscipit sodales risus, non laoreet risus. Curabitur a dui non metus consequat rutrum. Etiam aliquet ornare justo, sit amet rutrum est interdum sed. Nunc feugiat convallis est, et auctor augue tincidunt eu. Ut ex arcu, bibendum eu dui sit amet, rutrum tincidunt lectus. Duis feugiat finibus viverra. </p>
            
            <p>Vivamus vitae ligula id urna dignissim lobortis. Aliquam ullamcorper, quam et tempor porta, est lectus vestibulum nisi, ut auctor ligula magna at leo. In hac habitasse platea dictumst. Nam aliquam ex sed massa dapibus hendrerit. Aliquam vestibulum vel lectus sed fringilla. Nullam tempus tempor turpis blandit pretium. Sed id magna in purus tincidunt egestas in feugiat purus.</p>
            
            
            <!--divider-->
            <div class=""d-flex my-3"" style=""color:#6db6ef;font-size:20px"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <ul>
                <li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li>
                <li>Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</li>
                <li>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</li>
            </ul>
            
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef;font-size:20px"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!--/// DESIGN ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;
                background-color:#181d2e;
                border-color:#37414c;
                border-left-color:#6db6ef"">
                <h2 class=""my-auto"" style=""font-size:2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    Design
                </h2>
            </div>
            
            
            <!--/// REFRENCE ///-->
            <div class=""p-2 card bg-faded rounded-0 mx-auto mb-3"" style=""min-height:300px;max-width:100%;
                background-color:#181d2e;
                border-color:#37414c;"">
                
                <div style=""height:300px;
                    background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:15px;"">
                        <a href=""https://www.pexels.com/photo/moon-jellyfish-floating-in-water-5472598/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--/// END REFRENCE ///-->
            
            <ul>
                <li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li>
                <li>Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</li>
                <li>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</li>
            </ul>
            
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef;font-size:20px"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!--/// LINKS ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;
                background-color:#181d2e;
                border-color:#37414c;
                border-left-color:#6db6ef"">
                <h2 class=""my-auto"" style=""font-size:2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    Links
                </h2>
            </div>
            
            <!--/// LINK 1 ///-->
            <div class=""row"">
                
                <!--link image-->
                <div class=""col-sm-3 my-auto"">
                    <div class=""p-1 card bg-faded rounded-0 "" style=""height:140px;width:140px;
                        background-color:#181d2e;
                        border-color:#37414c;"">
                        <div style=""height:100%;
                            background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2);
                            background-size:cover;
                            background-position:center""></div>
                    </div>
                </div>
                
                <!--blurb-->
                <div class=""col-sm-9 my-auto"">
                    <a href=""#"" style=""font-size:1.75em;font-style:italic;font-family:serif;letter-spacing:1px;color:#6db6ef"">
                         Character Name
                    </a>
                        
                    <div class=""mb-2"" style=""height:1px;background-color:#37414c""></div>
                    
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
                </div>
                
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
            <!--/// LINK 2 ///-->
             <div class=""row"">
                
                <!--link image-->
                <div class=""col-sm-3 my-auto"">
                    <div class=""p-1 card bg-faded rounded-0 "" style=""height:140px;width:140px;
                        background-color:#181d2e;
                        border-color:#37414c;"">
                        <div style=""height:100%;
                            background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2);
                            background-size:cover;
                            background-position:center""></div>
                    </div>
                </div>
                
                <!--blurb-->
                <div class=""col-sm-9 my-auto"">
                    <a href=""#"" style=""font-size:1.75em;font-style:italic;font-family:serif;letter-spacing:1px;color:#6db6ef"">
                         Character Name
                    </a>
                        
                    <div class=""mb-2"" style=""height:1px;background-color:#37414c""></div>
                    
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
                </div>
                
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2"" style=""color:#6db6ef"">
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""my-auto"" style=""height:1px;width:100%;background-color:#37414c""></div>
            </div>
            
            
        </div>
        <!--/// END MAIN CONTENT ///-->
        
    </div>
    
    
    <!--large divider-->
    <div class=""d-flex my-3"">
        <div class=""mr-2"" style=""height:10px;width:2%;background-color:#6db6ef""></div> 
        <div class=""mr-2"" style=""height:10px;width:5%;background-color:#1e72b3""></div> 
        <div class=""mr-2"" style=""height:10px;width:10%;background-color:#0d3e64""></div> 
        <div style=""height:10px;width:83%;background-color:#082e4d""></div> 
    </div>
    
    
    <!--Credit. You may move it, but please do not delete/remove-->
    <p style=""text-align:right"">HTML by <a href=""https://toyhou.se/23606491"" style=""color:#6db6ef""><i class='fa-solid fa-heart'></i> Jade-Everstone</a> // img - <a href=""https://www.pexels.com/photo/scuba-diver-under-water-4666754/"" style=""color:#6db6ef"">Pexels</a></p>
</div>"
2BfiDp2V,Evans (CQ 2023 september - BS),Jade-Everstone,HTML,Monday 25th of September 2023 02:51:06 AM CDT,"<!DOCTYPE HTML>

<!--Rules:
 
Evans (bootstrap vers)
For the Coders Quarters September 2023 challenge
 
You may 
-frankenstein with other codes (as long as the creator of said code allows it)
-edit/change as much as you need (example: making character codes into user codes, vice-versa)
 
You may not
-Redistribute, resell, and/or claim its yours
-Remove credit (you're allowed to move & edit it though, just keep it visible)
 
Misc Notes:
-When editing, remember to turn WYSIWYG off! My codes may break otherwise
-Some basic html knowledge is recommended for editing
 
Default Colors:
- Header Backgrounds, image backgrounds: bg-faded
- Divider accents: text-primary
- Large dividers: bg-secondary
 
Change the colors: Ctrl+f and search for the color you want to change. 
 
-->

<div class=""container my-3"" style=""max-width:900px"">
    
    
    <!--/// MAIN HEADER///-->
    <div class=""card mb-3 rounded-0 p-2 bg-faded"" style=""border-top:10px solid;"">
        <h1 class=""my-auto"" style=""font-size:3em;font-style:italic;font-family:serif;letter-spacing:1px"">
            <i class=""fa-thin fa-chevrons-right""></i> Character Name
        </h1>
    </div>
    <!--/// END MAIN HEADER///-->
    
    
    <!--large divider-->
    <div class=""d-flex mb-3"">
        <div class=""bg-secondary mr-2"" style=""height:10px;width:83%""></div> 
        <div class=""bg-secondary mr-2"" style=""height:10px;width:10%""></div> 
        <div class=""bg-secondary mr-2"" style=""height:10px;width:5%""></div> 
        <div class=""bg-secondary"" style=""height:10px;width:2%""></div> 
    </div>
    
    
    <div class=""row"">
        
        <!--/// SIDEBAR ///-->
        <div class=""col-lg-4"">
            
            <!--/// MAIN IMAGE ///-->
            <div class=""p-2 card bg-faded rounded-0 mx-auto"" style=""min-height:30px;width:300px;max-width:100%;"">
                <div style=""height:350px;
                    background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:15px;"">
                        <a href=""https://www.pexels.com/photo/moon-jellyfish-floating-in-water-5472598/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--/// END MAIN IMAGE ///-->
            
            
            <!--divider-->
            <div class=""d-flex my-2 text-primary"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!--/// BASIC INFO ///-->
            
            <!--gender & pronouns-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-comments""></i> Gender (pro/nouns)
                </p>
            </div>
            
            <!--birthday-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-cake""></i> (mm/dd)
                </p>
            </div>
            
            <!--race/species-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-user""></i> Race / Species
                </p>
            </div>
            
            <!--job/role-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-suitcase""></i> Job / Role
                </p>
            </div>
            
            <!--orientation-->
            <div class=""mb-2"" style=""box-sizing:border-box;padding-left:10px;border-left:2px solid"">
                <p style=""font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    <i class=""fa-thin fa-heart""></i> Orientation
                </p>
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2 text-primary"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!--/// MUSIC PLAYER ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;"">
                <div class=""container"" style=""text-align:center;font-size:30px;overflow:hidden"">
                    
                    <!-- HOW TO CHANGE THE LINK/SONG
                        - Go to youtube and find the song you want to use
                        - the page link has a string of random letters & numbers at the end of it. 
                                        (eg: https://www.youtube.com/watch?v= [here] )
                        - copy that string of letters and paste it between embed/ and ?controls-0 in the embed link
                                        (eg: src=""https://www.youtube-nocookie.com/embed/ [here] ?controls=0"" )
                    -->
                    
                    <iframe src=""https://www.youtube-nocookie.com/embed/50O6uTR-UgY?controls=0"" 
                        frameborder=""0""
                        style=""position:absolute;right:2px;top:-80px;width:250px;height:200px;z-index:1;opacity:0.001""></iframe>
                                    
                    <i class=""fa-thin fa-backward""></i> 
                    <i class=""fa-solid fa-play mx-2""></i> 
                    <i class=""fa-thin fa-forward""></i> 
                    
                </div>
                <div class=""bg-secondary my-2"" style=""height:1px;""></div>
                
                <div class=""p-2"" style=""font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px;"">Evans - NOSTALGIA ver. <br>
                - 音源</div>
            </div>
            <!--/// END MUSIC PLAYER ///-->
            
            <!--divider-->
            <div class=""d-flex my-2 text-primary"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!--quote-->
            <div class=""p-2"" style=""border-left:2px solid;font-size:1.25em;font-style:italic;font-family:serif;letter-spacing:1px;"">
                ""Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...""
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2 text-primary"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!-- /// MOODBOARD /// -->
            
            <!--image 1-->
            <div class=""p-1 card bg-faded rounded-0 mx-auto mb-2"" style=""min-height:100px;width:300px;max-width:100%;"">
                <div style=""height:150px;
                    background-image:url(https://images.pexels.com/photos/4666754/pexels-photo-4666754.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:10px;"">
                        <a href=""https://www.pexels.com/photo/scuba-diver-under-water-4666754/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--end image 1-->
            
            <!--image 2-->
            <div class=""p-1 card bg-faded rounded-0 mx-auto mb-2"" style=""min-height:100px;width:300px;max-width:100%;"">
                <div style=""height:150px;
                    background-image:url(https://images.pexels.com/photos/8910283/pexels-photo-8910283.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:10px;"">
                        <a href=""https://www.pexels.com/photo/an-underwater-shot-of-a-shark-8910283/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--end image 2-->
            
            <!--image 3-->
            <div class=""p-1 card bg-faded rounded-0 mx-auto mb-2"" style=""min-height:100px;width:300px;max-width:100%;"">
                <div style=""height:150px;
                    background-image:url(https://images.pexels.com/photos/7058244/pexels-photo-7058244.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:10px;"">
                        <a href=""https://www.pexels.com/photo/photograph-of-blue-smoke-7058244/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--end image 3-->
            
            <!--/// END MOODBOARD ///-->
            
        </div>
        <!--/// END SIDEBAR ///-->
        
        
        <!--/// MAIN CONTENT ///-->
        <div class=""col-lg-8"">
            
            <!--divider-->
            <div class=""d-flex my-2 text-primary d-block d-lg-none"" style=""font-size:20px"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <p>This section will expand</p>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum et orci libero. Quisque pretium ligula id ipsum consequat, at pretium purus bibendum. Phasellus ultricies urna ac augue eleifend, at volutpat orci ultrices. Suspendisse magna augue, convallis sed venenatis vitae, hendrerit sed ipsum. In viverra ipsum quis varius imperdiet. Aliquam at commodo mauris. Pellentesque maximus dolor eros, sed lobortis tortor tristique eu. Aliquam dapibus ultrices nibh in feugiat. Nunc in dui feugiat, suscipit ligula quis, interdum lorem. Nulla viverra enim ultrices erat ultricies aliquam. Cras tincidunt nisl quis odio volutpat, ac semper arcu dignissim. Nulla vel tristique turpis. Morbi imperdiet risus nunc, eget efficitur arcu efficitur sed. </p>
            
            
            <!--divider-->
            <div class=""d-flex my-3 text-primary"" style=""font-size:20px"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!--/// SECTION HEADER ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;"">
                <h2 class=""my-auto"" style=""font-size:2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    Section title
                </h2>
            </div>
            
            <p>Nullam consequat vulputate iaculis. Praesent sit amet sem aliquet quam malesuada porttitor ut efficitur metus. Nullam finibus quis ligula vitae semper. Vivamus non sagittis felis, at iaculis dolor. Sed faucibus est id interdum tincidunt. Proin porta tellus vitae consequat hendrerit. Donec consectetur nibh ac viverra ornare. Donec gravida odio ut malesuada ullamcorper. Praesent tincidunt eros nisl, et pulvinar quam eleifend nec. Cras suscipit sodales risus, non laoreet risus. Curabitur a dui non metus consequat rutrum. Etiam aliquet ornare justo, sit amet rutrum est interdum sed. Nunc feugiat convallis est, et auctor augue tincidunt eu. Ut ex arcu, bibendum eu dui sit amet, rutrum tincidunt lectus. Duis feugiat finibus viverra. </p>
            
            <p>Vivamus vitae ligula id urna dignissim lobortis. Aliquam ullamcorper, quam et tempor porta, est lectus vestibulum nisi, ut auctor ligula magna at leo. In hac habitasse platea dictumst. Nam aliquam ex sed massa dapibus hendrerit. Aliquam vestibulum vel lectus sed fringilla. Nullam tempus tempor turpis blandit pretium. Sed id magna in purus tincidunt egestas in feugiat purus.</p>
            
            
            <!--divider-->
            <div class=""d-flex my-3 text-primary"" style=""font-size:20px"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <ul>
                <li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li>
                <li>Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</li>
                <li>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</li>
            </ul>
            
            
            <!--divider-->
            <div class=""d-flex my-3 text-primary"" style=""font-size:20px"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!--/// DESIGN ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;"">
                <h2 class=""my-auto"" style=""font-size:2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    Design
                </h2>
            </div>
            
            
            <!--/// REFRENCE ///-->
            <div class=""p-2 card bg-faded rounded-0 mx-auto mb-3"" style=""min-height:300px;max-width:100%;"">
                <div style=""height:300px;
                    background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg);
                    background-size:cover;
                    background-position:center"">
                    
                    <!--image credit-->
                    <div style=""position:absolute;left:15px;"">
                        <a href=""https://www.pexels.com/photo/moon-jellyfish-floating-in-water-5472598/"" data-toggle=""tooltip"" title=""img - Pexels"" style=""color:#ffffff;text-shadow:1px 1px 3px rgba(0,0,0,0.5);font-size:20px"" target=""_blank"">
                            <i class=""fa-light fa-image""></i>
                        </a>
                    </div>
                    
                </div>
            </div>
            <!--/// END REFRENCE ///-->
            
            <ul>
                <li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li>
                <li>Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</li>
                <li>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</li>
            </ul>
            
            
            <!--divider-->
            <div class=""d-flex my-3 text-primary"" style=""font-size:20px"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!--/// LINKS ///-->
            <div class=""card my-3 rounded-0 p-2 bg-faded"" style=""border-left:5px solid;"">
                <h2 class=""my-auto"" style=""font-size:2em;font-style:italic;font-family:serif;letter-spacing:1px"">
                    Links
                </h2>
            </div>
            
            <!--/// LINK 1 ///-->
            <div class=""row"">
                
                <!--link image-->
                <div class=""col-sm-3 my-auto"">
                    <div class=""p-1 card bg-faded rounded-0 "" style=""height:140px;width:140px;"">
                        <div style=""height:100%;
                            background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2);
                            background-size:cover;
                            background-position:center""></div>
                    </div>
                </div>
                
                <!--blurb-->
                <div class=""col-sm-9 my-auto"">
                    <a href=""#"" style=""font-size:1.75em;font-style:italic;font-family:serif;letter-spacing:1px"">
                         Character Name
                    </a>
                        
                    <div class=""bg-secondary mb-2"" style=""height:1px""></div>
                    
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
                </div>
                
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2 text-primary"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
            <!--/// LINK 2 ///-->
             <div class=""row"">
                
                <!--link image-->
                <div class=""col-sm-3 my-auto"">
                    <div class=""p-1 card bg-faded rounded-0 "" style=""height:140px;width:140px;"">
                        <div style=""height:100%;
                            background-image:url(https://images.pexels.com/photos/5472598/pexels-photo-5472598.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2);
                            background-size:cover;
                            background-position:center""></div>
                    </div>
                </div>
                
                <!--blurb-->
                <div class=""col-sm-9 my-auto"">
                    <a href=""#"" style=""font-size:1.75em;font-style:italic;font-family:serif;letter-spacing:1px"">
                         Character Name
                    </a>
                        
                    <div class=""bg-secondary mb-2"" style=""height:1px""></div>
                    
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
                </div>
                
            </div>
            
            
            <!--divider-->
            <div class=""d-flex my-2 text-primary"">
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
                <i class=""fa-thin fa-chevrons-down mx-2""></i>
                <div class=""bg-secondary my-auto"" style=""height:1px;width:100%""></div>
            </div>
            
            
        </div>
        <!--/// END MAIN CONTENT ///-->
        
    </div>
    
    
    <!--large divider-->
    <div class=""d-flex my-3"">
        <div class=""bg-secondary mr-2"" style=""height:10px;width:2%""></div> 
        <div class=""bg-secondary mr-2"" style=""height:10px;width:5%""></div> 
        <div class=""bg-secondary mr-2"" style=""height:10px;width:10%""></div> 
        <div class=""bg-secondary"" style=""height:10px;width:83%""></div> 
    </div>
    
    
    <!--Credit. You may move it, but please do not delete/remove-->
    <p style=""text-align:right"">HTML by <a href=""https://toyhou.se/23606491""><i class='fa-solid fa-heart'></i> Jade-Everstone</a></p>
</div>"
8mzdNrTt,Cubemap TBN Matrix,gehtsiegarnixan,Python,Monday 25th of September 2023 02:08:44 AM CDT,"# written by gehtsiegarnixan

import numpy as np
import math
import datetime
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from pysr import PySRRegressor
import pandas as pd
from sympy import symbols, diff, sqrt


def rnd_normal_vectors(num_points=2 ** 16):
    # Generate random uv values
    uv_grid = np.random.rand(num_points, 2)

    # Initialize an array to store the output vectors
    vectors = []

    # Calculate the inf_cubemap for each uv in the grid
    for uv in uv_grid:
        vector = inf_cubemap(uv, correction=True)
        vectors.append(vector)

    return np.array(vectors)


def grid_normal_vectors(num_points):
    # Calculate the number of points along each dimension
    num_points_dim = int(np.sqrt(num_points))

    # Create a grid of uv values
    u = np.linspace(0, 1, num_points_dim)
    v = np.linspace(0, 1, num_points_dim)
    uv_grid = np.array(np.meshgrid(u, v)).T.reshape(-1, 2)

    # Initialize an array to store the output vectors
    vectors = []

    # Calculate the inf_cubemap for each uv in the grid
    for uv in uv_grid:
        vector = inf_cubemap(uv, correction=True)
        vectors.append(vector)

    return np.array(vectors)


def wsgrid_normal_vectors(num_samples=2 ** 16):
    # bounds of the plot
    v_max = math.sqrt(2) / 2

    # Create a grid of UV values
    uv_values = np.linspace(-v_max, v_max, num_samples)
    uv_grid = np.meshgrid(uv_values, uv_values)
    uv_grid = np.dstack(uv_grid)

    # Initialize an array to store RGB colors
    normals = []

    # Calculate sphere normals for each UV value and convert to RGB
    for row in uv_grid:
        for uv in row:
            # Clamp the value inside the square root to be no less than 0
            w_world_value = max(0.00001, -uv[0] ** 2 - uv[1] ** 2 + 1)
            w_world = math.sqrt(w_world_value)
            normal = np.array([uv[0], uv[1], w_world])

            # Append the normalized vector to the array
            normals.append(normal)

    return np.array(normals)


def cubemap(uvw, correction=True):
    # project into face
    cubemap_coord = uvw[:2] / uvw[2]

    if correction:
        # Cass Everitt's piecewise quadratic warp
        distort = 1.45109572583 - 0.451095725826 * np.abs(cubemap_coord)
        cubemap_coord *= distort

    # rescale to 0-1 range
    uv = cubemap_coord * 0.5 + 0.5

    return uv


def inf_cubemap(uv, correction=True):
    # rescale -1 to 1
    uv = uv * 2. - 1.

    if correction:
        # reverse Cass Everitt's piecewise quadratic warp
        arg_sqrt = 2.105679 - 1.804383 * np.abs(uv)
        arg_sqrt = np.maximum(arg_sqrt, 0)  # Ensure the argument is non-negative
        uv = np.sign(uv) * -1.108412 * (-1.451096 + np.sqrt(arg_sqrt))

    # recreate normal vector with side being up
    partial = np.sqrt((uv[0] ** 2) + (uv[1] ** 2) + 1.)
    normal = np.array([uv[0] / partial, uv[1] / partial, 1. / partial])

    return normal


def test_cubemap_inversion(num_samples=2 ** 16, correction=False):
    # Convert the list of vectors into a NumPy array
    input_values = rnd_normal_vectors(num_samples)

    for i in range(num_samples):
        uvw = input_values[i]

        # Apply cubemap and then inf_cubemap
        uv = cubemap(uvw, correction)
        uvw_reconstructed = inf_cubemap(uv, correction)

        # Check if the reconstructed values match the original input
        if not np.allclose(uvw_reconstructed, uvw, atol=1e-6):
            print(""Test failed!"")
            print(""Original Input:"", uvw)
            print(""Reconstructed Input:"", uvw_reconstructed)
            return

    print(""All tests passed!"")


def tangent_finite_difference(normal, correction=True):
    # cubemapping
    uv = cubemap(normal, correction)

    # inverse cubemapping with a tiny offset in x direction
    offset_uv = uv + np.array([0.00001, 0])
    normal_offset = inf_cubemap(offset_uv, correction)

    # generate the tangent vector approximation
    tangent_vec = normal_offset - normal
    tangent_vec /= np.linalg.norm(tangent_vec)  # normalize the tangent vector

    return tangent_vec


def tangent_derivative(normal, correction=True):
    # Generate the tangent vector approximation
    tangent_vec = np.array([1 + normal[1] ** 2,
                            - normal[0] * normal[1],
                            - normal[0]])
    # skipping the correction for this as it basically looks the same but is way more complicated.
    tangent_vec /= np.linalg.norm(tangent_vec)  # normalize the tangent vector

    return tangent_vec


def bitangent(normal, correction=True):
    # Generate the tangent vector approximation
    tangent_vec = np.array([- normal[0] * normal[1],
                            1 + normal[0] ** 2,
                            - normal[1]])
    tangent_vec /= np.linalg.norm(tangent_vec)  # normalize the tangent vector

    return tangent_vec


def z_plot(num_points_dim=255, correction=True):
    # Generate a grid of vectors
    vectors_array = wsgrid_normal_vectors(num_points_dim)

    # Initialize arrays to store RGB colors for both methods
    rgb_colors_tangent = []
    rgb_colors_approximation = []

    # Calculate sphere normals for each UV value and convert to RGB
    for uvw in vectors_array:
        uv = cubemap(uvw, correction=False)
        if np.all((0 <= uv) & (uv <= 1)):
            # Calculate tangent vector for cubemap using both methods
            tangent_vec = tangent_derivative(uvw, correction)
            approximation_vec = tangent_finite_difference(uvw, correction)

            rgb_colors_tangent.append(tangent_vec)
            rgb_colors_approximation.append(approximation_vec)
        else:
            rgb_colors_tangent.append([0, 0, 0])
            rgb_colors_approximation.append([0, 0, 0])

    # Convert the RGB colors to NumPy arrays
    rgb_colors_tangent = np.array(rgb_colors_tangent)
    rgb_colors_approximation = np.array(rgb_colors_approximation)

    # Clamp the RGB values to the range [0, 1]
    rgb_colors_tangent = np.clip(rgb_colors_tangent, 0, 1)
    rgb_colors_approximation = np.clip(rgb_colors_approximation, 0, 1)

    # Create side-by-side plots of the RGB colors with specified color range
    fig, axs = plt.subplots(1, 2, figsize=(16, 8))

    axs[0].imshow(rgb_colors_tangent.reshape(num_points_dim, num_points_dim, 3), origin='lower')
    axs[0].set_xlabel('X')
    axs[0].set_ylabel('Y')
    axs[0].set_title('Tangent from Derivative')
    axs[0].grid(True)

    axs[1].imshow(rgb_colors_approximation.reshape(num_points_dim, num_points_dim, 3), origin='lower')
    axs[1].set_xlabel('X')
    axs[1].set_ylabel('Y')
    axs[1].set_title('Tangent from finite Difference')
    axs[1].grid(True)

    plt.tight_layout()
    plt.show()


def y_plot(num_points_dim=255, correction=False, period=2):
    fig, ax = plt.subplots(figsize=(8, 8))

    # Generate a grid of vectors
    vectors_array = wsgrid_normal_vectors(num_points_dim)
    vectors_array = vectors_array.reshape(num_points_dim, num_points_dim, 3)

    def update(i):
        ax.clear()

        # flip flop animation
        index = abs(i - (num_points_dim - 1))

        # get the row of uvw coordinates
        vector_row = vectors_array[index]

        # Create arrays to store tangents for both methods
        tangents_true = []
        tangents_approximation = []
        vector_row_filtered = []

        # Iterate over uvw vectors and compute cubemap values
        for uvw_vector in vector_row:
            uv = cubemap(uvw_vector, correction=False)
            if np.all((0 <= uv) & (uv <= 1)):
                # Calculate tangent vector for cubemap using both methods
                tangent_vec_true = tangent_derivative(uvw_vector, correction)
                tangent_vec_approximation = tangent_finite_difference(uvw_vector, correction)

                tangents_true.append(tangent_vec_true)
                tangents_approximation.append(tangent_vec_approximation)

                # add the valid uvw vector to list
                vector_row_filtered.append(uvw_vector)

        # get y and z part of the coordinate vector
        x = [uvw_vector[0] for uvw_vector in vector_row_filtered]
        z = [uvw_vector[2] for uvw_vector in vector_row_filtered]

        # get x,y,z part of the tangent vector for both methods
        tangent_x_true = [tangent_vec[0] for tangent_vec in tangents_true]
        tangent_y_true = [tangent_vec[1] for tangent_vec in tangents_true]
        tangent_z_true = [tangent_vec[2] for tangent_vec in tangents_true]

        tangent_x_approximation = [tangent_vec[0] for tangent_vec in tangents_approximation]
        tangent_y_approximation = [tangent_vec[1] for tangent_vec in tangents_approximation]
        tangent_z_approximation = [tangent_vec[2] for tangent_vec in tangents_approximation]

        # Create the plot for true tangent
        ax.plot(x, tangent_x_true, label='Tangent x (Derivative)', color='orange')
        ax.plot(x, tangent_y_true, label='Tangent y (Derivative)', color='green')
        ax.plot(x, tangent_z_true, label='Tangent z (Derivative)', color='blue')

        # Create the plot for approximation tangent with dotted line style
        ax.plot(x, tangent_x_approximation, label='Tangent x (Finite Diff)', color='orange', linestyle='dotted')
        ax.plot(x, tangent_y_approximation, label='Tangent y (Finite Diff)', color='green', linestyle='dotted')
        ax.plot(x, tangent_z_approximation, label='Tangent z (Finite Diff)', color='blue', linestyle='dotted')

        # Create the plot for sphere
        ax.plot(x, z, label='Sphere', color='red')

        # Bounds of the plot
        ax.set_xlim([-0.9, 1.6])
        ax.set_ylim([-0.8, 1.4])

        # Add labels and legend
        ax.set_xlabel('X')
        ax.set_ylabel('Z')
        ax.set_title(f""Y = {vector_row[0][1]:.2f}"")

        ax.grid(True)
        ax.legend()

    # animation
    frames = (num_points_dim - 1) * 2  # double for flipflop
    interval_ms = (period / num_points_dim) * 1000
    ani = animation.FuncAnimation(fig, update, frames=frames, repeat=True, interval=interval_ms)

    plt.axis('equal')
    plt.show()


def derivatives(correction=True):
    # Define the symbols
    x, y = symbols('x y')

    # Define the function q(x, y)
    q = (x / sqrt(x ** 2 + y ** 2 + 1),
         y / sqrt(x ** 2 + y ** 2 + 1),
         1 / sqrt(x ** 2 + y ** 2 + 1))

    if correction:
        # Cass Everitt's piecewise quadratic warp
        q = ((1.45109572583 - 0.451095725826 * sqrt(q[0]**2)) * q[0],
             (1.45109572583 - 0.451095725826 * sqrt(q[1]**2)) * q[1],
             (1.45109572583 - 0.451095725826 * sqrt(q[2]**2)) * q[2])

    # Compute the partial derivatives
    u = [diff(q_i, x) for q_i in q]  # ∂q/∂x
    v = [diff(q_i, y) for q_i in q]  # ∂q/∂y

    print(""u_x ="", u[0])
    print(""u_y ="", u[1])
    print(""u_z ="", u[2])

    print(""v_x ="", v[0])
    print(""v_y ="", v[1])
    print(""v_z ="", v[2])

    """"""
    the rescaling to 0-1 just adds a 0.5 factor for all components since we normalize this vector it cancels out. 
    u = [(x²+1) /(x² + y² + 1)^(3/2),
          -xy   /(x² + y² + 1)^(3/2),
          -x    /(x² + y² + 1)^(3/2)]
    v = [-xy    /(x² + y² + 1)^(3/2),
        (x²+1)  /(x² + y² + 1)^(3/2),
          -y    /(x² + y² + 1)^(3/2)]
    can be simplified to:
    tangent = normalize(1+y^2, -xy, -x)
    bitangent = normalize(-xy, 1+x^2, -y)
    """"""


def symbolic_regression(num_samples=64*64, correction=True, iterations=5):
    # Generate some input data
    x = grid_normal_vectors(num_samples)

    # Initialize an array to store the output data
    y = []

    # Calculate the approximation tangent for each vector in X
    for uvw in x:
        tangent_vec = tangent_finite_difference(uvw, correction=correction)
        y.append(tangent_vec)

    # Convert the list of tangents into a NumPy array
    y = np.array(y)

    # Create a PySRRegressor object and fit the data
    model = PySRRegressor(niterations=iterations,
                          binary_operators=[""plus"", ""sub"", ""mult"", ""div""],
                          unary_operators=[""sqrt""],
                          )
    model.fit(x, y)

    # Set pandas options
    pd.set_option('display.max_columns', None)
    pd.set_option('display.expand_frame_repr', False)
    pd.set_option('max_colwidth', None)

    # Print the model
    print(model)

    # Format the timestamp as a string
    now = datetime.datetime.now()
    timestamp_str = now.strftime(""%Y-%m-%d_%H%M%S.%f"")
    filename = f'model_output_{timestamp_str}.txt'

    # Save the model's output to a text file
    with open(filename, 'w') as f:
        print(model, file=f)


def main():
    correction = False
    z_plot(255, correction)
    y_plot(128, correction)

    # test_cubemap_inversion(correction=correction)
    # derivatives(correction)
    # symbolic_regression(128*128, correction, 50)


if __name__ == ""__main__"":
    # execute only if run as a script
    main()"
B4Tdxikt,Tic Tac Toe,vfrh_,Python,Monday 25th of September 2023 01:31:32 AM CDT,"# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                        Dinis Marques                            #
#                         Tic-Tac-Toe                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
import turtle
import random

# # # # # # # # # # # # # # # # # # # # # #
# Data                                    #
# # # # # # # # # # # # # # # # # # # # # #
#Board
board = [['','',''],['','',''],['','','']]
#move number
n = [0]
#P(Player vs Player) or B(Player vs Bot)
opponent= ['']
#Who goes first(Player vs Bot)
first = ['']
#player(X/O)
p = ['']
#bot(X/O)
b = ['']

# # # # # # # # # # # # # # # # # # # # # #
# Menus                                   #
# # # # # # # # # # # # # # # # # # # # # #
def home(x,y):
    #data reset
    for i in range(3):
        for j in range(3):
            board[i][j] = ''
    n[0] = 0
    opponent[0] = ''
    first[0] = ''
    b[0] = ''
    p[0] = ''
    
    #menu
    turtle.hideturtle()
    turtle.speed(0)
    turtle.clear()
    turtle.title(""Tic-Tac-Toe"")
    draw_home()
    turtle.onscreenclick(homeselect)
    turtle.mainloop()

def homeselect(x,y):
    #button1
    if x >= -150 and x <= -90 and y >= -170 and y <= -150:
        menu1()
    #button2
    elif x >= -35 and x <= 35 and y >= -170 and y <= -150:
        menu2()
    #button3
    elif x >= 90 and x <= 160 and y >= -170 and y <= -150:
        opponentmenu()

def opponentmenu():
    draw_opponentmenu()
    turtle.onscreenclick(opponentselect)
    turtle.mainloop()

def opponentselect(x,y):
    #Player vs Bot
    if x >= -180 and x <= -90 and y >= -170 and y <= -150:
        opponent[0] = ""B""
        pvbmenu()
    #Player vs Player
    elif x >= 90 and x <= 190 and y >= -170 and y <= -150:
        opponent[0] = ""P""
        start()

def pvbmenu():
    draw_pvbmenu()
    turtle.onscreenclick(pvbselect)
    turtle.mainloop()

def pvbselect(x,y):
    #Bot
    if x >= -150 and x <= -90 and y >= -170 and y <= -150:
        first[0] = ""B""
        b[0] = ""X""
        p[0] = ""O""
        start()
    #Player
    elif x >= 90 and x <= 160 and y >= -170 and y <= -150:
        first[0] = ""P""
        b[0] = ""O""
        p[0] = ""X""
        start()

# # # # # # # # # # # # # # # # # # # # # #
# Start and Play                          #
# # # # # # # # # # # # # # # # # # # # # #
def start():
    draw_board()
    #Player vs Bot(first)
    if opponent[0] == ""B"" and first[0] == ""B"":
        bot()
    turtle.onscreenclick(play)
    turtle.mainloop()

def play(x,y):
    #1
    if x >= -150 and x <= -50 and y >= 50 and y <= 150:
        if board[0][0] == '':
            if n[0] % 2 == 0:
                board[0][0] = ""X""
                n[0] = n[0] + 1
                cross(-140,140)  
            else:
                board[0][0] = ""O""
                n[0] = n[0] + 1
                circle(-60,100)
            
    #2
    elif x >= -50 and x <= 50 and y >= 50 and y <= 150:
        if board[0][1] == '':
            if n[0] % 2 == 0:
                board[0][1] = ""X""
                n[0] = n[0] + 1
                cross(-40,140)
            else:
                board[0][1] = ""O""
                n[0] = n[0] + 1
                circle(40,100)
        
    #3
    elif x >= 50 and x <= 150 and y >= 50 and y <= 150:
        if board[0][2] == '':
            if n[0] % 2 == 0:
                board[0][2] = ""X""
                n[0] = n[0] + 1
                cross(60,140)
            else:
                board[0][2] = ""O""
                n[0] = n[0] + 1
                circle(140,100)
        
    #4
    elif x >= -150 and x <= -50 and y >= -50 and y <= 50:
        if board[1][0] == '':
            if n[0]% 2 == 0:
                board[1][0] = ""X""
                n[0] = n[0] + 1
                cross(-140,40)
            else:
                board[1][0] = ""O""
                n[0] = n[0] + 1
                circle(-60,0)
        
    #5
    elif x >= -50 and x <= 50 and y >= -50 and y <= 50:
        if board[1][1] == '':
            if n[0] % 2 == 0:
                board[1][1] = ""X""
                n[0] = n[0] + 1
                cross(-40,40)
            else:
                board[1][1] = ""O""
                n[0] = n[0] + 1
                circle(40,0)
        
    #6
    elif x >= 50 and x <= 150 and y >= -50 and y <= 50:
        if board[1][2] == '':
            if n[0] % 2 == 0:
                board[1][2] = ""X""
                n[0] = n[0] + 1
                cross(60,40)
            else:
                board[1][2] = ""O""
                n[0] = n[0] + 1
                circle(140,0)
    
    #7
    elif x >= -150 and x <= -50 and y >= -150 and y <= -50:
        if board[2][0] == '':
            if n[0] % 2 == 0:
                board[2][0] = ""X""
                n[0] = n[0] + 1
                cross(-140,-60)
            else:
                board[2][0] = ""O""
                n[0] = n[0] + 1
                circle(-60,-100)
    
    #8
    elif x >= -50 and x <= 50 and y >= -150 and y <= -50:
        if board[2][1] == '':
            if n[0] % 2 == 0:
                board[2][1] = ""X""
                n[0] = n[0] + 1
                cross(-40,-60)
            else:
                board[2][1] = ""O""
                n[0] = n[0] + 1
                circle(40,-100)
    
    #9
    elif x >= 50 and x <= 150 and y >= -150 and y <= -50:
        if board[2][2] == '':
            if n[0] % 2 == 0:
                board[2][2] = ""X""
                n[0] = n[0] + 1
                cross(60,-60)
            else:
                board[2][2] = ""O""
                n[0] = n[0] + 1
                circle(140,-100)
    #check if someone won
    score()

    #Player vs Bot
    if opponent[0] == ""B"":
        if first[0] == ""B"" and n[0]%2 == 0:
            bot()
        elif first[0] == ""P"" and n[0]%2 == 1:
            bot()

# # # # # # # # # # # # # # # # # # # # # #
# AI                                      #
# # # # # # # # # # # # # # # # # # # # # #
def bot():
    #vertical
    boardt = [[board[j][i] for j in range(3)] for i in range(3)]
    #diagonal    
    boardd1 = [board[0][0],board[1][1],board[2][2]]
    boardd2 = [board[0][2],board[1][1],board[2][0]]
    
    #first
    if n[0] == 0:
        move = random.randint(1,5)
        #corner
        if move == 1:
            play(-100,100)
        elif move == 2:
            play(100,100)
        elif move == 3:
            play(-100,-100)
        elif move == 4:
            play(100,-100)
        #center
        elif move == 5:
            play(0,0)

    #second
    elif n[0] == 1:
        if board[1][1] == """":
            play(0,0)
        else:
            move = random.randint(1,4)
            #corner
            if move == 1:
                play(-100,100)
            elif move == 2:
                play(100,100)
            elif move == 3:
                play(-100,-100)
            elif move == 4:
                play(100,-100)

    #win_horizontal
    elif board[0] == [b[0],b[0],""""]:
        play(100,100)
    elif board[0] == [b[0],"""",b[0]]:
        play(0,100)
    elif board[0] == ["""",b[0],b[0]]:
        play(-100,100)
    
    elif board[1] == [b[0],b[0],""""]:
        play(100,0)
    elif board[1] == [b[0],"""",b[0]]:
        play(0,0)
    elif board[1] == ["""",b[0],b[0]]:
        play(-100,0)
    
    elif board[2] == [b[0],b[0],""""]:
        play(100,-100)
    elif board[2] == [b[0],"""",b[0]]:
        play(0,-100)
    elif board[2] == ["""",b[0],b[0]]:
        play(-100,-100) 
    
    #win_vertical 
    elif boardt[0] == [b[0],b[0],""""]:
        play(-100,-100)
    elif boardt[0] == [b[0],"""",b[0]]:
        play(-100,0)
    elif boardt[0] == ["""",b[0],b[0]]:
        play(-100,100)
    
    elif boardt[1] == [b[0],b[0],""""]:
        play(0,-100)
    elif boardt[1] == [b[0],"""",b[0]]:
        play(0,0)
    elif boardt[1] == [b[0],b[0],b[0]]:
        play(0,100)
    
    elif boardt[2] == [b[0],b[0],""""]:
        play(100,-100)
    elif boardt[2] == [b[0],"""",b[0]]:
        play(100,0)
    elif boardt[2] == ["""",b[0],b[0]]:
        play(100,100)    
    
    #win_diagonal
    elif boardd1 == [b[0],b[0],""""]:
        play(100,-100)
    elif  boardd1 == [b[0],"""",b[0]]:
        play(0,0)
    elif boardd1 == ["""",b[0],b[0]]:
        play(-100,100)
        
    elif boardd2 == [b[0],b[0],""""]:
        play(-100,-100)
    elif  boardd2 == [b[0],"""",b[0]]:
        play(0,0)
    elif boardd2 == ["""",b[0],b[0]]:
        play(100,100)    
    
    #block_vertical
    elif board[0] == [p[0],p[0],""""]:
        play(100,100)
    elif board[0] == [p[0],"""",p[0]]:
        play(0,100)
    elif board[0] == ["""",p[0],p[0]]:
        play(-100,100)
    
    elif board[1] == [p[0],p[0],""""]:
        play(100,0)
    elif board[1] == [p[0],"""",p[0]]:
        play(0,0)
    elif board[1] == ["""",p[0],p[0]]:
        play(-100,0)
    
    elif board[2] == [p[0],p[0],""""]:
        play(100,-100)
    elif board[2] == [p[0],"""",p[0]]:
        play(0,-100)
    elif board[2] == ["""",p[0],p[0]]:
        play(-100,-100) 

    #block_horizontal
    elif boardt[0] == [p[0],p[0],""""]:
        play(-100,-100)
    elif boardt[0] == [p[0],"""",p[0]]:
        play(-100,0)
    elif boardt[0] == ["""",p[0],p[0]]:
        play(-100,100)
    
    elif boardt[1] == [p[0],p[0],""""]:
        play(0,-100)
    elif boardt[1] == [p[0],"""",p[0]]:
        play(0,0)
    elif boardt[1] == ["""",p[0],p[0]]:
        play(0,100)

    elif boardt[2] == [p[0],p[0],""""]:
        play(100,-100)
    elif boardt[2] == [p[0],"""",p[0]]:
        play(100,0)
    elif boardt[2] == ["""",p[0],p[0]]:
        play(100,100)
    
    #block_diagonal
    elif boardd1 == [p[0],p[0],""""]:
        play(100,-100)
    elif  boardd1 == [p[0],"""",p[0]]:
        play(0,0)
    elif boardd1 == ["""",p[0],p[0]]:
        play(-100,100)
        
    elif boardd2 == [p[0],p[0],""""]:
        play(-100,-100)
    elif  boardd2 == [p[0],"""",p[0]]:
        play(0,0)
    elif boardd2 == ["""",p[0],p[0]]:
        play(100,100)
    
    #corner
    elif board[0][2] == """":
        play(100,100)
    elif board[2][0] == """":
        play(-100,-100)
    elif board[2][2] == """":
        play(100,-100)
    elif board[0][0] == """":
        play(-100,100)
    #center
    elif board[1][1] == """":
        play(0,0)
    #sides
    elif board[0][1] == """":
        play(0,100)
    elif board[1][0] == """":
        play (-100,0)
    elif board[1][2] == """":
        play(100,0)
    elif board[2][1] == """":
        play(0,-100)

# # # # # # # # # # # # # # # # # # # # # #
# Score                                   #
# # # # # # # # # # # # # # # # # # # # # #
def score():
    #horizontal
    for i in range(3):
        if board[i] == [""X"",""X"",""X""]:
            line(-150,100-100*i,150,100-100*i,""red"")
            winnerp1()
        elif board[i] == [""O"",""O"",""O""]:
            line(-150,100-100*i,150,100-100*i,""green"")
            winnerp2()
    
    #vertical 
    for i in range(3):
        if board[0][i] == ""X"" and board[1][i] == ""X"" and board[2][i] == ""X"":
            line(-100+100*i,150,-100+100*i,-150,""red"")
            winnerp1()
        elif board[0][i] == ""O"" and board[1][i] == ""O"" and board[2][i] == ""O"":
            line(-100+100*i,150,-100+100*i,-150,""green"")
            winnerp2()
    
    #diagonal
    for i in range(2):
        if board[0][0+(2*i)] == ""X"" and board[1][1] == ""X"" and board[2][2-(2*i)] == ""X"":
            line(-150+300*i,150,150-300*i,-150,""red"")
            winnerp1()
        elif board[0][0+(2*i)] == ""O"" and board[1][1] == ""O"" and board[2][2-(2*i)] == ""O"":
            line(-150+300*i,150,150-300*i,-150,""green"")
            winnerp2()

    #draw
    if n[0] == 9:
        draw()

def winnerp1():
    turtle.onscreenclick(None)
    turtle.pu()
    turtle.goto(0,200)
    turtle.color(""red"")
    if opponent[0] == ""B"" and first[0] == ""B"":
        turtle.write(""Bot won this game"",align=""center"", font=(""Futura"",30))
    else:
        turtle.write(""Player 1 won this game"",align=""center"", font=(""Futura"",30))
    turtle.goto(250,-200)
    turtle.write(""(Click anywhere to return to the main menu)"",align=""right"",font=(0.0000001))
    turtle.onscreenclick(home)
    turtle.mainloop()
    
def winnerp2():
    turtle.onscreenclick(None)
    turtle.pu()
    turtle.goto(0,200)
    turtle.color(""Green"")
    if opponent[0] == ""B"" and first[0] == ""P"":
        turtle.write(""Bot won this game"",align=""center"", font=(""Futura"",30))
    else:
        turtle.write(""Player 2 won this game"",align=""center"", font=(""Futura"",30))
    turtle.goto(250,-200)
    turtle.write(""(Click anywhere to return to the main menu)"",align=""right"",font=(0.0000001))
    turtle.onscreenclick(home)
    turtle.mainloop()

def draw():
    turtle.onscreenclick(None)
    turtle.color(""Blue"")
    turtle.pu()
    turtle.goto(0,200)
    turtle.write(""Draw"",align=""center"", font=(""Futura"",30))
    turtle.goto(250,-200)
    turtle.write(""(Click anywhere to return to the main menu)"",align=""right"",font=(0.0000001))
    turtle.onscreenclick(home)
    turtle.mainloop()

# # # # # # # # # # # # # # # # # # # # # #
# All draw functions                      #
# # # # # # # # # # # # # # # # # # # # # #
def menu_button(a,b,c,d1,d2):
    turtle.pu()
    turtle.goto(a,b)
    turtle.setheading(0)
    turtle.pd()
    turtle.color(c)
    turtle.begin_fill()
    for i in range(2):
        turtle.forward(d1)
        turtle.right(90)
        turtle.forward(d2)
        turtle.right(90)
    turtle.end_fill()  

def cross(a,b):
    turtle.color(""red"")
    turtle.pu()
    turtle.goto(a,b)
    turtle.pd()
    turtle.goto(a+80,b-80)
    turtle.pu()
    turtle.goto(a+80,b)
    turtle.pd()
    turtle.goto(a,b-80)

def circle(a,b):
    turtle.color(""green"")
    turtle.pu()
    turtle.goto(a,b)
    turtle.pd()
    turtle.setheading(90)
    turtle.circle(40)

def line(a1,b1,a2,b2,c):
    turtle.pu()
    turtle.goto(a1,b1)
    turtle.color(c)
    turtle.pd()
    turtle.pensize(10)
    turtle.goto(a2,b2)

def draw_home():
    turtle.pu()
    turtle.goto(0,0)
    turtle.color(""red"")
    turtle.write(""Tic-Tac-Toe"", align=""center"",font=(""Futura"",30))
    
    #button1
    menu_button(-150, -150,""blue"",70,20)
    turtle.pu()
    turtle.goto(-115,-170)
    turtle.color(""grey"")
    turtle.write(""Button1"", align=""center"",font=(10))
    
    #button2
    menu_button(-35,-150,""blue"",70,20)
    turtle.pu()
    turtle.goto(0,-170)
    turtle.color(""grey"")
    turtle.write(""Button2"", align=""center"",font=(10))
        
    #button3
    menu_button(80,-150,""blue"",70,20)
    turtle.pu()
    turtle.goto(115,-170)
    turtle.color(""grey"")
    turtle.write(""Play"", align=""center"",font=(10))

def draw_opponentmenu():
    turtle.clear()
    turtle.pu()
    turtle.goto(0,0)
    turtle.color(""red"")
    turtle.write(""Choose your opponent"", align=""center"",font=(""Futura"",30))
    
    #Player vs Bot
    menu_button(-180, -150,""blue"",100,20)
    turtle.pu()
    turtle.goto(-130,-170)
    turtle.color(""grey"")
    turtle.write(""Player vs Bot"", align=""center"",font=(10))
    
    #Player vs Player
    menu_button(90,-150,""blue"",100,20)
    turtle.pu()
    turtle.goto(140,-170)
    turtle.color(""grey"")
    turtle.write(""Player vs Player"", align=""center"",font=(10))

def draw_pvbmenu():
    turtle.clear()
    turtle.pu()
    turtle.goto(0,0)
    turtle.color(""red"")
    turtle.write(""Who goes first?"", align=""center"",font=(""Futura"",30))
    
    #button1
    menu_button(-150, -150,""blue"",70,20)
    turtle.pu()
    turtle.goto(-115,-170)
    turtle.color(""grey"")
    turtle.write(""Bot"", align=""center"",font=(10))

    #button2
    menu_button(90,-150,""blue"",70,20)
    turtle.pu()
    turtle.goto(125,-170)
    turtle.color(""grey"")
    turtle.write(""Player"", align=""center"",font=(10))

def draw_board():
    turtle.clear()
    turtle.color(""black"")
    turtle.pensize(5)

    #horizontal
    for i in range(2):
        turtle.pu()
        turtle.goto(-150,50-100*i)
        turtle.setheading(0)
        turtle.pd()
        turtle.forward(300)

    #vertical
    for i in range(2):
        turtle.pu()
        turtle.goto(-50+100*i,150)
        turtle.setheading(270)
        turtle.pd()
        turtle.forward(300)
    
# # # # # # # # # # # # # # # # # # # # # #
# Main                                    #
# # # # # # # # # # # # # # # # # # # # # #
if __name__ == '__main__':
    home(0,0)"
