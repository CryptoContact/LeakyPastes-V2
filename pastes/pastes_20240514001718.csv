id,title,username,language,date,content
NMLGWFFY,2024-05-13_stats.json,rdp_snitch,JSON,Monday 13th of May 2024 07:16:16 PM CDT,"{
  ""ip"": {
    ""81.19.135.47"": 6,
    ""165.22.248.129"": 4,
    ""80.66.66.145"": 2,
    ""45.33.91.123"": 6,
    ""152.89.198.238"": 2,
    ""35.203.210.135"": 6,
    ""87.251.75.145"": 6,
    ""159.223.34.114"": 4,
    ""185.170.144.113"": 12,
    ""212.70.149.142"": 10,
    ""212.70.149.146"": 6,
    ""64.124.50.139"": 4,
    ""192.53.118.215"": 10,
    ""185.170.144.3"": 4,
    ""117.16.46.253"": 4,
    ""87.251.75.120"": 4,
    ""187.190.60.112"": 2,
    ""179.60.147.131"": 2,
    ""194.165.16.78"": 4,
    ""118.193.36.56"": 2,
    ""35.203.210.159"": 6,
    ""194.165.16.37"": 4,
    ""116.140.196.215"": 2,
    ""194.165.16.72"": 4,
    ""141.98.115.24"": 24,
    ""157.230.99.242"": 6,
    ""40.76.88.134"": 2,
    ""58.218.204.183"": 6,
    ""185.161.248.121"": 12,
    ""167.248.133.37"": 2,
    ""43.129.251.187"": 234,
    ""129.226.202.227"": 280,
    ""169.150.209.215"": 2,
    ""205.210.31.172"": 6,
    ""87.251.75.64"": 2,
    ""116.109.215.131"": 24,
    ""5.8.11.202"": 4,
    ""43.134.86.3"": 94,
    ""136.144.35.79"": 2,
    ""198.12.68.106"": 6,
    ""45.227.254.8"": 4,
    ""112.4.139.162"": 2,
    ""205.210.31.174"": 6,
    ""194.165.16.10"": 4
  },
  ""asn"": {
    ""AS209588"": 8,
    ""AS14061"": 14,
    ""AS51765"": 2,
    ""AS63949"": 16,
    ""AS57523"": 2,
    ""AS396982"": 24,
    ""AS208091"": 12,
    ""AS197414"": 16,
    ""AS204428"": 16,
    ""AS6461"": 4,
    ""AS18031"": 4,
    ""AS22884"": 2,
    ""AS48721"": 16,
    ""AS135377"": 2,
    ""AS4837"": 2,
    ""AS210574"": 24,
    ""AS8075"": 2,
    ""AS4134"": 6,
    ""AS49202"": 12,
    ""AS398324"": 2,
    ""AS132203"": 608,
    ""AS212238"": 2,
    ""AS24086"": 24,
    ""AS34665"": 4,
    ""AS396356"": 2,
    ""AS36352"": 6,
    ""AS267784"": 4,
    ""AS56046"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 28,
    ""DigitalOcean, LLC"": 14,
    ""Oy Crea Nova Hosting Solution Ltd"": 2,
    ""Akamai Technologies, Inc."": 16,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 28,
    ""SS-Net"": 16,
    ""Zayo Bandwidth"": 4,
    ""Sangmyung University"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""YUNUS EMRE ATILGAN trading as POYRAZ HOSTING"": 24,
    ""Microsoft Corporation"": 2,
    ""Chinanet"": 6,
    ""Kisara LLC"": 12,
    ""Censys, Inc."": 2,
    ""Aceville Pte.ltd"": 234,
    ""Tencent Cloud Computing (Beijing) Co"": 280,
    ""Datacamp Limited"": 2,
    ""Viettel Corporation"": 24,
    ""Petersburg Internet Network ltd"": 4,
    ""Shenzhen Tencent Computer Systems Company Limited"": 94,
    ""Latitude.sh"": 2,
    ""ColoCrossing"": 6,
    ""China Mobile Communications Corporation"": 2
  },
  ""org"": {
    ""Alviva Holding Limited"": 6,
    ""DigitalOcean, LLC"": 14,
    ""Xhost Internet Solutions"": 14,
    ""Linode"": 6,
    ""Starcrecium Limited"": 2,
    ""Google Cloud (europe-west2)"": 12,
    ""Xhostis"": 16,
    ""4Media Ltd"": 16,
    ""Microsoft Corporation"": 4,
    ""Linode, LLC"": 10,
    ""Korean Education Network"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Cloud Solutions S.A"": 2,
    ""Flyservers S.A"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Yunus Emre Atilgan Poyraz Hosting"": 24,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Chinanet JS"": 6,
    ""Kisara LLC"": 12,
    ""Censys, Inc."": 2,
    ""Unknown"": 234,
    ""Aceville Pte.ltd"": 280,
    ""DataCamp Limited"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Viettel Group"": 24,
    ""PIN DC"": 4,
    ""Tencent Cloud Computing"": 94,
    ""Panq B.V"": 2,
    ""New Wave NetConnect, LLC"": 6,
    ""UAB Host Baltic"": 4,
    ""China Mobile Communications Corporation"": 2
  },
  ""regionName"": {
    ""Hesse"": 14,
    ""South West"": 4,
    ""Uusimaa"": 2,
    ""New Jersey"": 8,
    ""Moscow"": 14,
    ""England"": 12,
    ""North Holland"": 28,
    ""Central Singapore"": 284,
    ""Plovdiv"": 16,
    ""Virginia"": 6,
    ""North West"": 104,
    ""Seoul"": 4,
    ""Hidalgo"": 2,
    ""Distrito Federal"": 2,
    ""Kaunas"": 16,
    ""Kowloon"": 2,
    ""Beijing"": 2,
    ""Istanbul"": 24,
    ""Jiangsu"": 8,
    ""Michigan"": 2,
    ""Central and Western District"": 234,
    ""California"": 12,
    ""Ho Chi Minh"": 24,
    ""St.-Petersburg"": 4,
    ""New York"": 6,
    ""Vilnius"": 4
  },
  ""country"": {
    ""Germany"": 14,
    ""Singapore"": 392,
    ""Finland"": 2,
    ""United States"": 34,
    ""Russia"": 18,
    ""United Kingdom"": 12,
    ""The Netherlands"": 28,
    ""Bulgaria"": 16,
    ""South Korea"": 4,
    ""Mexico"": 2,
    ""Venezuela"": 2,
    ""Lithuania"": 20,
    ""Hong Kong"": 236,
    ""China"": 10,
    ""Turkey"": 24,
    ""Vietnam"": 24
  },
  ""account"": {
    ""Domain"": 38,
    ""hello"": 694,
    ""Administr"": 30,
    ""Test"": 36,
    ""DNERDQbWm"": 2,
    ""sdDcBp"": 2,
    ""UgDryd"": 2,
    ""luXQqSO"": 2,
    ""Administrator"": 2,
    ""owWygzAuh"": 2,
    ""FDYRQq"": 2,
    ""srLKLf"": 2,
    ""(empty)"": 12,
    ""qHXQPUmNy"": 2,
    ""vBxBnQ"": 2,
    ""rqTumO"": 2,
    ""esDXBqves"": 2,
    ""buFUaz"": 2,
    ""ajVDeb"": 2
  },
  ""keyboard"": {
    ""Unknown"": 838
  },
  ""client_build"": {
    ""Unknown"": 838
  },
  ""client_name"": {
    ""Unknown"": 838
  },
  ""ip_type"": {
    ""Unknown"": 142,
    ""hosting"": 666,
    ""proxy"": 18,
    ""hosting & proxy"": 10,
    ""mobile"": 2
  }
}"
EYNbCxKd,2024-05-13_stats.json,rdp_snitch,JSON,Monday 13th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""81.19.135.47"": 3,
    ""165.22.248.129"": 2,
    ""80.66.66.145"": 1,
    ""45.33.91.123"": 3,
    ""152.89.198.238"": 1,
    ""35.203.210.135"": 3,
    ""87.251.75.145"": 3,
    ""159.223.34.114"": 2,
    ""185.170.144.113"": 6,
    ""212.70.149.142"": 5,
    ""212.70.149.146"": 3,
    ""64.124.50.139"": 2,
    ""192.53.118.215"": 5,
    ""185.170.144.3"": 2,
    ""117.16.46.253"": 2,
    ""87.251.75.120"": 2,
    ""187.190.60.112"": 1,
    ""179.60.147.131"": 1,
    ""194.165.16.78"": 2,
    ""118.193.36.56"": 1,
    ""35.203.210.159"": 3,
    ""194.165.16.37"": 2,
    ""116.140.196.215"": 1,
    ""194.165.16.72"": 2,
    ""141.98.115.24"": 12,
    ""157.230.99.242"": 3,
    ""40.76.88.134"": 1,
    ""58.218.204.183"": 3,
    ""185.161.248.121"": 6,
    ""167.248.133.37"": 1,
    ""43.129.251.187"": 117,
    ""129.226.202.227"": 140,
    ""169.150.209.215"": 1,
    ""205.210.31.172"": 3,
    ""87.251.75.64"": 1,
    ""116.109.215.131"": 12,
    ""5.8.11.202"": 2,
    ""43.134.86.3"": 47,
    ""136.144.35.79"": 1,
    ""198.12.68.106"": 3,
    ""45.227.254.8"": 2,
    ""112.4.139.162"": 1,
    ""205.210.31.174"": 3,
    ""194.165.16.10"": 2
  },
  ""asn"": {
    ""AS209588"": 4,
    ""AS14061"": 7,
    ""AS51765"": 1,
    ""AS63949"": 8,
    ""AS57523"": 1,
    ""AS396982"": 12,
    ""AS208091"": 6,
    ""AS197414"": 8,
    ""AS204428"": 8,
    ""AS6461"": 2,
    ""AS18031"": 2,
    ""AS22884"": 1,
    ""AS48721"": 8,
    ""AS135377"": 1,
    ""AS4837"": 1,
    ""AS210574"": 12,
    ""AS8075"": 1,
    ""AS4134"": 3,
    ""AS49202"": 6,
    ""AS398324"": 1,
    ""AS132203"": 304,
    ""AS212238"": 1,
    ""AS24086"": 12,
    ""AS34665"": 2,
    ""AS396356"": 1,
    ""AS36352"": 3,
    ""AS267784"": 2,
    ""AS56046"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 14,
    ""DigitalOcean, LLC"": 7,
    ""Oy Crea Nova Hosting Solution Ltd"": 1,
    ""Akamai Technologies, Inc."": 8,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 14,
    ""SS-Net"": 8,
    ""Zayo Bandwidth"": 2,
    ""Sangmyung University"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""YUNUS EMRE ATILGAN trading as POYRAZ HOSTING"": 12,
    ""Microsoft Corporation"": 1,
    ""Chinanet"": 3,
    ""Kisara LLC"": 6,
    ""Censys, Inc."": 1,
    ""Aceville Pte.ltd"": 117,
    ""Tencent Cloud Computing (Beijing) Co"": 140,
    ""Datacamp Limited"": 1,
    ""Viettel Corporation"": 12,
    ""Petersburg Internet Network ltd"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 47,
    ""Latitude.sh"": 1,
    ""ColoCrossing"": 3,
    ""China Mobile Communications Corporation"": 1
  },
  ""org"": {
    ""Alviva Holding Limited"": 3,
    ""DigitalOcean, LLC"": 7,
    ""Xhost Internet Solutions"": 7,
    ""Linode"": 3,
    ""Starcrecium Limited"": 1,
    ""Google Cloud (europe-west2)"": 6,
    ""Xhostis"": 8,
    ""4Media Ltd"": 8,
    ""Microsoft Corporation"": 2,
    ""Linode, LLC"": 5,
    ""Korean Education Network"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Cloud Solutions S.A"": 1,
    ""Flyservers S.A"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Yunus Emre Atilgan Poyraz Hosting"": 12,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Chinanet JS"": 3,
    ""Kisara LLC"": 6,
    ""Censys, Inc."": 1,
    ""Unknown"": 117,
    ""Aceville Pte.ltd"": 140,
    ""DataCamp Limited"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""Viettel Group"": 12,
    ""PIN DC"": 2,
    ""Tencent Cloud Computing"": 47,
    ""Panq B.V"": 1,
    ""New Wave NetConnect, LLC"": 3,
    ""UAB Host Baltic"": 2,
    ""China Mobile Communications Corporation"": 1
  },
  ""regionName"": {
    ""Hesse"": 7,
    ""South West"": 2,
    ""Uusimaa"": 1,
    ""New Jersey"": 4,
    ""Moscow"": 7,
    ""England"": 6,
    ""North Holland"": 14,
    ""Central Singapore"": 142,
    ""Plovdiv"": 8,
    ""Virginia"": 3,
    ""North West"": 52,
    ""Seoul"": 2,
    ""Hidalgo"": 1,
    ""Distrito Federal"": 1,
    ""Kaunas"": 8,
    ""Kowloon"": 1,
    ""Beijing"": 1,
    ""Istanbul"": 12,
    ""Jiangsu"": 4,
    ""Michigan"": 1,
    ""Central and Western District"": 117,
    ""California"": 6,
    ""Ho Chi Minh"": 12,
    ""St.-Petersburg"": 2,
    ""New York"": 3,
    ""Vilnius"": 2
  },
  ""country"": {
    ""Germany"": 7,
    ""Singapore"": 196,
    ""Finland"": 1,
    ""United States"": 17,
    ""Russia"": 9,
    ""United Kingdom"": 6,
    ""The Netherlands"": 14,
    ""Bulgaria"": 8,
    ""South Korea"": 2,
    ""Mexico"": 1,
    ""Venezuela"": 1,
    ""Lithuania"": 10,
    ""Hong Kong"": 118,
    ""China"": 5,
    ""Turkey"": 12,
    ""Vietnam"": 12
  },
  ""account"": {
    ""Domain"": 19,
    ""hello"": 347,
    ""Administr"": 15,
    ""Test"": 18,
    ""DNERDQbWm"": 1,
    ""sdDcBp"": 1,
    ""UgDryd"": 1,
    ""luXQqSO"": 1,
    ""Administrator"": 1,
    ""owWygzAuh"": 1,
    ""FDYRQq"": 1,
    ""srLKLf"": 1,
    ""(empty)"": 6,
    ""qHXQPUmNy"": 1,
    ""vBxBnQ"": 1,
    ""rqTumO"": 1,
    ""esDXBqves"": 1,
    ""buFUaz"": 1,
    ""ajVDeb"": 1
  },
  ""keyboard"": {
    ""Unknown"": 419
  },
  ""client_build"": {
    ""Unknown"": 419
  },
  ""client_name"": {
    ""Unknown"": 419
  },
  ""ip_type"": {
    ""Unknown"": 71,
    ""hosting"": 333,
    ""proxy"": 9,
    ""hosting & proxy"": 5,
    ""mobile"": 1
  }
}"
ntAEMkxs,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Monday 13th of May 2024 07:13:02 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
14 May 2024"
wEeGMHvi,Pointbuy System,Krythic,C#,Monday 13th of May 2024 07:03:54 PM CDT,"using System;
using System.Collections.Generic;

public enum AttributeType
{
    Strength,
    Agility,
    Defense,
    Vitality,
    Intellect,
    Wisdom,
    Spirit
}

public class PointBuySystem
{
    private const int MaxAttributeValue = 10;
    private const int TotalPoints = 21;
    private Dictionary<AttributeType, int> attributes = new Dictionary<AttributeType, int>()
    {
        { AttributeType.Strength, 1 },
        { AttributeType.Agility, 1 },
        { AttributeType.Defense, 1 },
        { AttributeType.Vitality, 1 },
        { AttributeType.Intellect, 1 },
        { AttributeType.Wisdom, 1 },
        { AttributeType.Spirit, 1 }
    };
    private int availablePoints = TotalPoints;

    public int GetAttributeValue(AttributeType attribute)
    {
        return attributes[attribute];
    }

    public int AvailablePoints { get { return availablePoints; } }

    public bool CanBuy(AttributeType attribute)
    {
        return availablePoints > 0 && attributes[attribute] < MaxAttributeValue;
    }

    public bool BuyAttribute(AttributeType attribute)
    {
        if (!CanBuy(attribute))
        {
            return false;
        }

        if (availablePoints >= (MaxAttributeValue - attributes[attribute]))
        {
            availablePoints -= (MaxAttributeValue - attributes[attribute]);
            attributes[attribute] = MaxAttributeValue;
        }
        else
        {
            attributes[attribute] += availablePoints;
            availablePoints = 0;
        }

        return true;
    }

    public bool SellAttribute(AttributeType attribute)
    {
        if (attributes[attribute] <= 1)
        {
            return false;
        }

        attributes[attribute]--;
        availablePoints += (MaxAttributeValue - attributes[attribute] + 1);

        return true;
    }

    public void Reset()
    {
        foreach (AttributeType attribute in Enum.GetValues(typeof(AttributeType)))
        {
            attributes[attribute] = 1;
        }
        availablePoints = TotalPoints;
    }
}"
gbByuis0,FFMPEG Convert Videos of format [w x y] to format [z] maintaining folder structure (refactor),XenoTheStrange,Python,Monday 13th of May 2024 06:53:50 PM CDT,"#!/usr/bin/python3
import argparse
import os
import logging
import subprocess

logging.basicConfig(level=logging.DEBUG)
args = """"


def parse_arguments():
    filename = __file__.split(""/"")[-1]
    usage = f""""""{filename} -i input_dir -ie [input extensions] -oe output_ext -o output_dir\n   ex: {filename} -i ./input -ie mkv ogg avi -oe mp4 -o ./output""""""
    parser = argparse.ArgumentParser(description=""Convert media files from one type to another while maintaining the directory structure"", usage=usage)
    parser.add_argument(""-i"", ""--in_dir"", metavar=""dir"", default="""", type=str, help=""Directory containing media files"", required=True)
    parser.add_argument(""-ie"", ""--in_exts"", metavar=""ext"", nargs=""+"", type=str, help=""Input filename extensions"", required=True)
    parser.add_argument(""-oe"", ""--out_ext"", metavar=""ext"", type=str, help=""Output filename extension"", required=True)
    parser.add_argument(""-o"", ""--out_dir"", metavar=""dir"", type=str, help=""Directory in which to place the converted media files"", required=True)
    parser.add_argument(""-d"", ""--debug"", action=""store_true"", help=""Enable debug logging"")
    parser.add_argument(""-ns"", ""--no_sanatize"", action=""store_true"", help=""Do not remove symbols from the output file path"")
    parser.add_argument(""-f"", ""--overwrite"", action=""store_true"", help=""Make ffmpeg overwrite video files which already exist"")
    args = parser.parse_args()
    #Need to make sure that the paths end in a slash for the sake of consistancy
    args.in_dir = add_slash(args.in_dir)
    args.out_dir = add_slash(args.out_dir)
    return args

def overwrite():
    global args
    if args.overwrite:
        return ""-y""
    else:
        return ""-n""

def is_input_file(filename):
    global args
    ext = filename.split(""."")[-1]
    if ext in args.in_exts:
        return True
    else:
        return False

def add_slash(path):
    if not path[-1] == ""/"":
        path += ""/""
    return path

""""""Iterate through all folders in a path and attempt to create them so the output folder structure is correct""""""
def ensure_path(path):
    path = add_slash(path)
    arr = path.split(""/"")
    for i in range(len(arr)):
        try:
            tmp = ""/"".join(arr[0:i])
            tmp = add_slash(tmp)
            os.mkdir(tmp)
        except Exception as e:
            if args.debug:
                logging.warn(f""[WARN] ensure_path: {e}"")
            continue

def name_sanitize(string):
    if args.no_sanatize: return string
    disallow = [""\"""",""!"",""?""]
    out = string
    for symbol in disallow:
        out = out.replace(symbol, ""_"")
    return out

def make_paths(path, fname):
    global args
    base_path = add_slash(path).replace(args.in_dir, args.out_dir)
    filename = """".join(fname.split(""."")[0:-1])
    ext = args.out_ext

    in_path = f""{add_slash(path)}{fname}""
    out_path = name_sanitize(f""""""{base_path}{filename}.{ext}"""""")
    return (in_path, out_path)

def get_total_input_files(filetree):
    total = 0
    for entry in filetree:
        for name in entry[2]:
            if is_input_file(name):
                total += 1
    return total

def ffmpeg_convert_standard(in_path, out_path):
    global args
    if not os.path.exists(in_path):
        return f""[ERROR]: Path does not exist: {in_path}""
    ensure_path(""/"".join(out_path.split(""/"")[0:-1])) #strip the filename from the path and make output folder structure
    command = f""""""ffmpeg -hide_banner -nostats {overwrite()} -i ""{in_path}"" -c:v libx264 -profile:v high -vf format=yuv420p -c:a aac -ac 2 -dn -map_metadata:c -1 -map_chapters:c -1 ""{out_path}"" """"""
    proc = subprocess.run(command, shell=True, stderr=subprocess.PIPE, stdout=subprocess.PIPE)
    stdout = proc.stderr.decode(""utf-8"")
    stderr = proc.stderr.decode(""utf-8"")
    output = stdout if stderr=="""" else stderr
    if args.debug:
        logging.info(output)
    return

""""""When called from the command line it'll use the arguments to convert some videos""""""
def main():
    global args
    args = parse_arguments()
    filetree = sorted(list(os.walk(args.in_dir)))
    current = 0
    total = get_total_input_files(filetree)
    #folder will be a tuple: (this_directory, [folders], [files])
    for thisdir, folders, files in filetree:
        for fname in files:
            if not is_input_file(fname):
                continue
            current += 1
            in_path, out_path = make_paths(thisdir, fname)
            logging.info(f""[{current}/{total}] Processing file: {in_path}"")
            ffmpeg_convert_standard(in_path, out_path)

if __name__ == ""__main__"":
    main()
"
sbeq06wa,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Monday 13th of May 2024 06:15:26 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_853652.pdf

Working as of:
13 May 2024"
CmB5CV2Q,Untitled,qqt15326,HTML,Monday 13th of May 2024 06:15:06 PM CDT,"11858 https://pastebin.com/yn6G3Miv
11859 https://pastebin.com/w0BNTcad"
5meSQenn,Turtle Dig If Has Space Program,ignirtoq,Lua,Monday 13th of May 2024 05:35:50 PM CDT,"while true do
    if not turtle.detect() then
        goto continue
    end

    hasSpace = false
    for slot=1,16 do
        if turtle.getItemCount(slot) == 0 then
            hasSpace = true
            break
        end
    end

    if hasSpace then
        turtle.dig()
        sleep(0.1)
        turtle.suck()
    end

    ::continue::
    sleep(0.1)
end"
J4HQs51Q,Recusivly echo files with a specific extension,DECROMAX,Bash,Monday 13th of May 2024 03:48:39 PM CDT,"#  recusivly echo files with a specific extension

find {directory} -type f -name '*.extension'

# Example: To find all csv files in the current directory and its sub-directories, use:

find . -type f -name '*.csv'"
t9GzUr1A,Untitled,X_Future,C++,Monday 13th of May 2024 03:38:15 PM CDT,"#pragma once
#include <math.h>
#include <string>
#include <cstdlib>
#include <sstream>
namespace CALCLAB2 {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;

	/// <summary>
	/// Сводка для EqForm
	/// </summary>
	public ref class EqForm : public System::Windows::Forms::Form
	{
	public:
		EqForm(void)
		{
			InitializeComponent();
			//
			//TODO: добавьте код конструктора
			//
		}

	protected:
		/// <summary>
		/// Освободить все используемые ресурсы.
		/// </summary>
		~EqForm()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::RadioButton^ eqrb1;
	private: System::Windows::Forms::RadioButton^ eqrb2;
	private: System::Windows::Forms::RadioButton^ eqrb3;
	private: System::Windows::Forms::RadioButton^ eqrb4;
	protected:

	protected:



	private: System::Windows::Forms::GroupBox^ groupBox1;
	private: System::Windows::Forms::GroupBox^ groupBox2;
	private: System::Windows::Forms::TextBox^ BXtxt;

	private: System::Windows::Forms::TextBox^ X0txt;

	private: System::Windows::Forms::TextBox^ AXtxt;

	private: System::Windows::Forms::Label^ label1;
	private: System::Windows::Forms::TextBox^ BYtxt;

	private: System::Windows::Forms::TextBox^ Y0txt;
	private: System::Windows::Forms::TextBox^ AYtxt;


	private: System::Windows::Forms::Label^ label7;
	private: System::Windows::Forms::TextBox^ EPStext;

	private: System::Windows::Forms::Label^ label6;
	private: System::Windows::Forms::Label^ label5;
	private: System::Windows::Forms::Label^ label3;
	private: System::Windows::Forms::Label^ label4;
	private: System::Windows::Forms::Label^ label2;
	private: System::Windows::Forms::Label^ label8;
	private: System::Windows::Forms::Label^ label10;
	private: System::Windows::Forms::Label^ label11;
	private: System::Windows::Forms::Label^ label9;
	private: System::Windows::Forms::PictureBox^ pictureBox1;
	private: System::Windows::Forms::GroupBox^ groupBox3;
	private: System::Windows::Forms::Button^ button1;












	private: System::Windows::Forms::DataGridView^ table;
	private: System::Windows::Forms::Label^ label17;
	private: System::Windows::Forms::ComboBox^ method;
	private: System::Windows::Forms::TextBox^ textBox3;
	private: System::Windows::Forms::RadioButton^ eqrb5;
	private: System::Windows::Forms::PictureBox^ pictureBox5;
	private: System::Windows::Forms::PictureBox^ pictureBox4;
	private: System::Windows::Forms::PictureBox^ pictureBox3;
	private: System::Windows::Forms::PictureBox^ pictureBox2;
	private: System::Windows::Forms::PictureBox^ pictureBox6;



	private:
		/// <summary>
		/// Обязательная переменная конструктора.
		/// </summary>
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// Требуемый метод для поддержки конструктора — не изменяйте 
		/// содержимое этого метода с помощью редактора кода.
		/// </summary>
		void InitializeComponent(void)
		{
			System::ComponentModel::ComponentResourceManager^ resources = (gcnew System::ComponentModel::ComponentResourceManager(EqForm::typeid));
			this->eqrb1 = (gcnew System::Windows::Forms::RadioButton());
			this->eqrb2 = (gcnew System::Windows::Forms::RadioButton());
			this->eqrb3 = (gcnew System::Windows::Forms::RadioButton());
			this->eqrb4 = (gcnew System::Windows::Forms::RadioButton());
			this->groupBox1 = (gcnew System::Windows::Forms::GroupBox());
			this->eqrb5 = (gcnew System::Windows::Forms::RadioButton());
			this->groupBox2 = (gcnew System::Windows::Forms::GroupBox());
			this->label17 = (gcnew System::Windows::Forms::Label());
			this->method = (gcnew System::Windows::Forms::ComboBox());
			this->button1 = (gcnew System::Windows::Forms::Button());
			this->label10 = (gcnew System::Windows::Forms::Label());
			this->label11 = (gcnew System::Windows::Forms::Label());
			this->label9 = (gcnew System::Windows::Forms::Label());
			this->label8 = (gcnew System::Windows::Forms::Label());
			this->label7 = (gcnew System::Windows::Forms::Label());
			this->EPStext = (gcnew System::Windows::Forms::TextBox());
			this->label6 = (gcnew System::Windows::Forms::Label());
			this->label5 = (gcnew System::Windows::Forms::Label());
			this->label3 = (gcnew System::Windows::Forms::Label());
			this->label4 = (gcnew System::Windows::Forms::Label());
			this->label2 = (gcnew System::Windows::Forms::Label());
			this->label1 = (gcnew System::Windows::Forms::Label());
			this->BYtxt = (gcnew System::Windows::Forms::TextBox());
			this->Y0txt = (gcnew System::Windows::Forms::TextBox());
			this->AYtxt = (gcnew System::Windows::Forms::TextBox());
			this->BXtxt = (gcnew System::Windows::Forms::TextBox());
			this->X0txt = (gcnew System::Windows::Forms::TextBox());
			this->AXtxt = (gcnew System::Windows::Forms::TextBox());
			this->pictureBox1 = (gcnew System::Windows::Forms::PictureBox());
			this->groupBox3 = (gcnew System::Windows::Forms::GroupBox());
			this->textBox3 = (gcnew System::Windows::Forms::TextBox());
			this->table = (gcnew System::Windows::Forms::DataGridView());
			this->pictureBox2 = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox3 = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox4 = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox5 = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox6 = (gcnew System::Windows::Forms::PictureBox());
			this->groupBox1->SuspendLayout();
			this->groupBox2->SuspendLayout();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox1))->BeginInit();
			this->groupBox3->SuspendLayout();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->table))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox2))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox3))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox4))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox5))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox6))->BeginInit();
			this->SuspendLayout();
			// 
			// eqrb1
			// 
			this->eqrb1->AutoSize = true;
			this->eqrb1->Location = System::Drawing::Point(6, 30);
			this->eqrb1->Name = L""eqrb1"";
			this->eqrb1->Size = System::Drawing::Size(126, 26);
			this->eqrb1->TabIndex = 0;
			this->eqrb1->TabStop = true;
			this->eqrb1->Text = L""Equation 1"";
			this->eqrb1->UseVisualStyleBackColor = true;
			this->eqrb1->CheckedChanged += gcnew System::EventHandler(this, &EqForm::eqrb1_CheckedChanged);
			// 
			// eqrb2
			// 
			this->eqrb2->AutoSize = true;
			this->eqrb2->Location = System::Drawing::Point(6, 62);
			this->eqrb2->Name = L""eqrb2"";
			this->eqrb2->Size = System::Drawing::Size(126, 26);
			this->eqrb2->TabIndex = 1;
			this->eqrb2->TabStop = true;
			this->eqrb2->Text = L""Equation 2"";
			this->eqrb2->UseVisualStyleBackColor = true;
			this->eqrb2->CheckedChanged += gcnew System::EventHandler(this, &EqForm::eqrb2_CheckedChanged);
			// 
			// eqrb3
			// 
			this->eqrb3->AutoSize = true;
			this->eqrb3->Location = System::Drawing::Point(6, 94);
			this->eqrb3->Name = L""eqrb3"";
			this->eqrb3->Size = System::Drawing::Size(126, 26);
			this->eqrb3->TabIndex = 2;
			this->eqrb3->TabStop = true;
			this->eqrb3->Text = L""Equation 3"";
			this->eqrb3->UseVisualStyleBackColor = true;
			this->eqrb3->CheckedChanged += gcnew System::EventHandler(this, &EqForm::eqrb3_CheckedChanged);
			// 
			// eqrb4
			// 
			this->eqrb4->AutoSize = true;
			this->eqrb4->Location = System::Drawing::Point(441, 30);
			this->eqrb4->Name = L""eqrb4"";
			this->eqrb4->Size = System::Drawing::Size(126, 26);
			this->eqrb4->TabIndex = 3;
			this->eqrb4->TabStop = true;
			this->eqrb4->Text = L""Equation 4"";
			this->eqrb4->UseVisualStyleBackColor = true;
			this->eqrb4->CheckedChanged += gcnew System::EventHandler(this, &EqForm::eqrb4_CheckedChanged);
			// 
			// groupBox1
			// 
			this->groupBox1->Controls->Add(this->pictureBox6);
			this->groupBox1->Controls->Add(this->pictureBox5);
			this->groupBox1->Controls->Add(this->pictureBox4);
			this->groupBox1->Controls->Add(this->pictureBox3);
			this->groupBox1->Controls->Add(this->pictureBox2);
			this->groupBox1->Controls->Add(this->eqrb5);
			this->groupBox1->Controls->Add(this->eqrb4);
			this->groupBox1->Controls->Add(this->eqrb3);
			this->groupBox1->Controls->Add(this->eqrb2);
			this->groupBox1->Controls->Add(this->eqrb1);
			this->groupBox1->Font = (gcnew System::Drawing::Font(L""Century Gothic"", 14.25F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->groupBox1->ForeColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(255)), static_cast<System::Int32>(static_cast<System::Byte>(128)),
				static_cast<System::Int32>(static_cast<System::Byte>(255)));
			this->groupBox1->Location = System::Drawing::Point(12, 12);
			this->groupBox1->Name = L""groupBox1"";
			this->groupBox1->Size = System::Drawing::Size(856, 131);
			this->groupBox1->TabIndex = 4;
			this->groupBox1->TabStop = false;
			this->groupBox1->Text = L""Choose one BUDDY"";
			// 
			// eqrb5
			// 
			this->eqrb5->AutoSize = true;
			this->eqrb5->Location = System::Drawing::Point(441, 83);
			this->eqrb5->Name = L""eqrb5"";
			this->eqrb5->Size = System::Drawing::Size(126, 26);
			this->eqrb5->TabIndex = 4;
			this->eqrb5->TabStop = true;
			this->eqrb5->Text = L""Equation 5"";
			this->eqrb5->UseVisualStyleBackColor = true;
			this->eqrb5->CheckedChanged += gcnew System::EventHandler(this, &EqForm::eqrb5_CheckedChanged);
			// 
			// groupBox2
			// 
			this->groupBox2->Controls->Add(this->label17);
			this->groupBox2->Controls->Add(this->method);
			this->groupBox2->Controls->Add(this->button1);
			this->groupBox2->Controls->Add(this->label10);
			this->groupBox2->Controls->Add(this->label11);
			this->groupBox2->Controls->Add(this->label9);
			this->groupBox2->Controls->Add(this->label8);
			this->groupBox2->Controls->Add(this->label7);
			this->groupBox2->Controls->Add(this->EPStext);
			this->groupBox2->Controls->Add(this->label6);
			this->groupBox2->Controls->Add(this->label5);
			this->groupBox2->Controls->Add(this->label3);
			this->groupBox2->Controls->Add(this->label4);
			this->groupBox2->Controls->Add(this->label2);
			this->groupBox2->Controls->Add(this->label1);
			this->groupBox2->Controls->Add(this->BYtxt);
			this->groupBox2->Controls->Add(this->Y0txt);
			this->groupBox2->Controls->Add(this->AYtxt);
			this->groupBox2->Controls->Add(this->BXtxt);
			this->groupBox2->Controls->Add(this->X0txt);
			this->groupBox2->Controls->Add(this->AXtxt);
			this->groupBox2->Font = (gcnew System::Drawing::Font(L""Times New Roman"", 12, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(204)));
			this->groupBox2->ForeColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(255)), static_cast<System::Int32>(static_cast<System::Byte>(128)),
				static_cast<System::Int32>(static_cast<System::Byte>(255)));
			this->groupBox2->Location = System::Drawing::Point(12, 149);
			this->groupBox2->Name = L""groupBox2"";
			this->groupBox2->Size = System::Drawing::Size(326, 444);
			this->groupBox2->TabIndex = 5;
			this->groupBox2->TabStop = false;
			this->groupBox2->Text = L""Input VALUES"";
			this->groupBox2->Enter += gcnew System::EventHandler(this, &EqForm::groupBox2_Enter);
			// 
			// label17
			// 
			this->label17->AutoSize = true;
			this->label17->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label17->Location = System::Drawing::Point(11, 29);
			this->label17->Name = L""label17"";
			this->label17->Size = System::Drawing::Size(235, 33);
			this->label17->TabIndex = 29;
			this->label17->Text = L""Solving METHOD:"";
			this->label17->Click += gcnew System::EventHandler(this, &EqForm::label17_Click);
			// 
			// method
			// 
			this->method->FormattingEnabled = true;
			this->method->Items->AddRange(gcnew cli::array< System::Object^  >(4) {
				L""Slicing (1 variable)"", L""Split in half (1 variable)"",
					L""Simple iteration (1 variable)"", L""Newthon\'s (2 variables)""
			});
			this->method->Location = System::Drawing::Point(6, 64);
			this->method->Name = L""method"";
			this->method->Size = System::Drawing::Size(312, 27);
			this->method->TabIndex = 19;
			this->method->SelectedIndexChanged += gcnew System::EventHandler(this, &EqForm::comboBox1_SelectedIndexChanged);
			// 
			// button1
			// 
			this->button1->BackgroundImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""button1.BackgroundImage"")));
			this->button1->BackgroundImageLayout = System::Windows::Forms::ImageLayout::Stretch;
			this->button1->Font = (gcnew System::Drawing::Font(L""Papyrus"", 21.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->button1->Location = System::Drawing::Point(6, 341);
			this->button1->Name = L""button1"";
			this->button1->Size = System::Drawing::Size(314, 97);
			this->button1->TabIndex = 18;
			this->button1->Text = L""GO!!!!!!!"";
			this->button1->UseVisualStyleBackColor = true;
			this->button1->Click += gcnew System::EventHandler(this, &EqForm::button1_Click);
			// 
			// label10
			// 
			this->label10->AutoSize = true;
			this->label10->Location = System::Drawing::Point(202, 242);
			this->label10->Name = L""label10"";
			this->label10->Size = System::Drawing::Size(31, 19);
			this->label10->TabIndex = 17;
			this->label10->Text = L""<="";
			// 
			// label11
			// 
			this->label11->AutoSize = true;
			this->label11->Location = System::Drawing::Point(94, 242);
			this->label11->Name = L""label11"";
			this->label11->Size = System::Drawing::Size(31, 19);
			this->label11->TabIndex = 16;
			this->label11->Text = L""<="";
			// 
			// label9
			// 
			this->label9->AutoSize = true;
			this->label9->Location = System::Drawing::Point(202, 164);
			this->label9->Name = L""label9"";
			this->label9->Size = System::Drawing::Size(31, 19);
			this->label9->TabIndex = 15;
			this->label9->Text = L""<="";
			// 
			// label8
			// 
			this->label8->AutoSize = true;
			this->label8->Location = System::Drawing::Point(94, 164);
			this->label8->Name = L""label8"";
			this->label8->Size = System::Drawing::Size(31, 19);
			this->label8->TabIndex = 14;
			this->label8->Text = L""<="";
			this->label8->Click += gcnew System::EventHandler(this, &EqForm::label8_Click);
			// 
			// label7
			// 
			this->label7->AutoSize = true;
			this->label7->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label7->Location = System::Drawing::Point(6, 291);
			this->label7->Name = L""label7"";
			this->label7->Size = System::Drawing::Size(101, 33);
			this->label7->TabIndex = 13;
			this->label7->Text = L""Epsilon:"";
			this->label7->Click += gcnew System::EventHandler(this, &EqForm::label7_Click);
			// 
			// EPStext
			// 
			this->EPStext->BackColor = System::Drawing::SystemColors::InfoText;
			this->EPStext->ForeColor = System::Drawing::SystemColors::ButtonFace;
			this->EPStext->Location = System::Drawing::Point(112, 295);
			this->EPStext->Name = L""EPStext"";
			this->EPStext->Size = System::Drawing::Size(100, 26);
			this->EPStext->TabIndex = 12;
			this->EPStext->TextChanged += gcnew System::EventHandler(this, &EqForm::textBox7_TextChanged);
			// 
			// label6
			// 
			this->label6->AutoSize = true;
			this->label6->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label6->Location = System::Drawing::Point(146, 235);
			this->label6->Name = L""label6"";
			this->label6->Size = System::Drawing::Size(34, 33);
			this->label6->TabIndex = 11;
			this->label6->Text = L""Y"";
			// 
			// label5
			// 
			this->label5->AutoSize = true;
			this->label5->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label5->Location = System::Drawing::Point(146, 157);
			this->label5->Name = L""label5"";
			this->label5->Size = System::Drawing::Size(32, 33);
			this->label5->TabIndex = 10;
			this->label5->Text = L""X"";
			// 
			// label3
			// 
			this->label3->AutoSize = true;
			this->label3->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label3->Location = System::Drawing::Point(249, 235);
			this->label3->Name = L""label3"";
			this->label3->Size = System::Drawing::Size(37, 33);
			this->label3->TabIndex = 9;
			this->label3->Text = L""B"";
			// 
			// label4
			// 
			this->label4->AutoSize = true;
			this->label4->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label4->Location = System::Drawing::Point(41, 235);
			this->label4->Name = L""label4"";
			this->label4->Size = System::Drawing::Size(36, 33);
			this->label4->TabIndex = 8;
			this->label4->Text = L""A"";
			// 
			// label2
			// 
			this->label2->AutoSize = true;
			this->label2->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label2->Location = System::Drawing::Point(249, 157);
			this->label2->Name = L""label2"";
			this->label2->Size = System::Drawing::Size(37, 33);
			this->label2->TabIndex = 7;
			this->label2->Text = L""B"";
			// 
			// label1
			// 
			this->label1->AutoSize = true;
			this->label1->Font = (gcnew System::Drawing::Font(L""Papyrus"", 15.75F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label1->Location = System::Drawing::Point(41, 157);
			this->label1->Name = L""label1"";
			this->label1->Size = System::Drawing::Size(36, 33);
			this->label1->TabIndex = 6;
			this->label1->Text = L""A"";
			this->label1->Click += gcnew System::EventHandler(this, &EqForm::label1_Click);
			// 
			// BYtxt
			// 
			this->BYtxt->BackColor = System::Drawing::SystemColors::MenuText;
			this->BYtxt->Font = (gcnew System::Drawing::Font(L""Papyrus"", 9.75F, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->BYtxt->ForeColor = System::Drawing::SystemColors::Menu;
			this->BYtxt->Location = System::Drawing::Point(220, 206);
			this->BYtxt->Name = L""BYtxt"";
			this->BYtxt->Size = System::Drawing::Size(100, 28);
			this->BYtxt->TabIndex = 5;
			// 
			// Y0txt
			// 
			this->Y0txt->BackColor = System::Drawing::SystemColors::MenuText;
			this->Y0txt->Font = (gcnew System::Drawing::Font(L""Papyrus"", 9.75F, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->Y0txt->ForeColor = System::Drawing::SystemColors::Menu;
			this->Y0txt->Location = System::Drawing::Point(114, 206);
			this->Y0txt->Name = L""Y0txt"";
			this->Y0txt->Size = System::Drawing::Size(100, 28);
			this->Y0txt->TabIndex = 4;
			// 
			// AYtxt
			// 
			this->AYtxt->BackColor = System::Drawing::SystemColors::MenuText;
			this->AYtxt->Font = (gcnew System::Drawing::Font(L""Papyrus"", 9.75F, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->AYtxt->ForeColor = System::Drawing::SystemColors::Menu;
			this->AYtxt->Location = System::Drawing::Point(8, 206);
			this->AYtxt->Name = L""AYtxt"";
			this->AYtxt->Size = System::Drawing::Size(100, 28);
			this->AYtxt->TabIndex = 3;
			// 
			// BXtxt
			// 
			this->BXtxt->BackColor = System::Drawing::SystemColors::MenuText;
			this->BXtxt->Font = (gcnew System::Drawing::Font(L""Papyrus"", 9.75F, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->BXtxt->ForeColor = System::Drawing::SystemColors::Menu;
			this->BXtxt->Location = System::Drawing::Point(220, 128);
			this->BXtxt->Name = L""BXtxt"";
			this->BXtxt->Size = System::Drawing::Size(100, 28);
			this->BXtxt->TabIndex = 2;
			// 
			// X0txt
			// 
			this->X0txt->BackColor = System::Drawing::SystemColors::MenuText;
			this->X0txt->Font = (gcnew System::Drawing::Font(L""Papyrus"", 9.75F, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->X0txt->ForeColor = System::Drawing::SystemColors::Menu;
			this->X0txt->Location = System::Drawing::Point(114, 128);
			this->X0txt->Name = L""X0txt"";
			this->X0txt->Size = System::Drawing::Size(100, 28);
			this->X0txt->TabIndex = 1;
			// 
			// AXtxt
			// 
			this->AXtxt->BackColor = System::Drawing::SystemColors::MenuText;
			this->AXtxt->Font = (gcnew System::Drawing::Font(L""Papyrus"", 9.75F, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->AXtxt->ForeColor = System::Drawing::SystemColors::Menu;
			this->AXtxt->Location = System::Drawing::Point(8, 128);
			this->AXtxt->Name = L""AXtxt"";
			this->AXtxt->Size = System::Drawing::Size(100, 28);
			this->AXtxt->TabIndex = 0;
			// 
			// pictureBox1
			// 
			this->pictureBox1->BackColor = System::Drawing::Color::White;
			this->pictureBox1->Location = System::Drawing::Point(6, 25);
			this->pictureBox1->Name = L""pictureBox1"";
			this->pictureBox1->Size = System::Drawing::Size(512, 381);
			this->pictureBox1->TabIndex = 6;
			this->pictureBox1->TabStop = false;
			// 
			// groupBox3
			// 
			this->groupBox3->Controls->Add(this->textBox3);
			this->groupBox3->Controls->Add(this->pictureBox1);
			this->groupBox3->Font = (gcnew System::Drawing::Font(L""Times New Roman"", 12, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(204)));
			this->groupBox3->ForeColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(255)), static_cast<System::Int32>(static_cast<System::Byte>(128)),
				static_cast<System::Int32>(static_cast<System::Byte>(255)));
			this->groupBox3->Location = System::Drawing::Point(344, 149);
			this->groupBox3->Name = L""groupBox3"";
			this->groupBox3->Size = System::Drawing::Size(524, 444);
			this->groupBox3->TabIndex = 7;
			this->groupBox3->TabStop = false;
			this->groupBox3->Text = L""THE RESULTS"";
			// 
			// textBox3
			// 
			this->textBox3->Location = System::Drawing::Point(6, 412);
			this->textBox3->Name = L""textBox3"";
			this->textBox3->Size = System::Drawing::Size(512, 26);
			this->textBox3->TabIndex = 29;
			// 
			// table
			// 
			this->table->ColumnHeadersHeightSizeMode = System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode::AutoSize;
			this->table->Location = System::Drawing::Point(874, 12);
			this->table->Name = L""table"";
			this->table->Size = System::Drawing::Size(629, 581);
			this->table->TabIndex = 8;
			// 
			// pictureBox2
			// 
			this->pictureBox2->BackgroundImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox2.BackgroundImage"")));
			this->pictureBox2->InitialImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox2.InitialImage"")));
			this->pictureBox2->Location = System::Drawing::Point(138, 30);
			this->pictureBox2->Name = L""pictureBox2"";
			this->pictureBox2->Size = System::Drawing::Size(266, 31);
			this->pictureBox2->TabIndex = 5;
			this->pictureBox2->TabStop = false;
			// 
			// pictureBox3
			// 
			this->pictureBox3->BackgroundImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox3.BackgroundImage"")));
			this->pictureBox3->InitialImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox3.InitialImage"")));
			this->pictureBox3->Location = System::Drawing::Point(138, 62);
			this->pictureBox3->Name = L""pictureBox3"";
			this->pictureBox3->Size = System::Drawing::Size(266, 31);
			this->pictureBox3->TabIndex = 6;
			this->pictureBox3->TabStop = false;
			this->pictureBox3->WaitOnLoad = true;
			// 
			// pictureBox4
			// 
			this->pictureBox4->BackgroundImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox4.BackgroundImage"")));
			this->pictureBox4->InitialImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox4.InitialImage"")));
			this->pictureBox4->Location = System::Drawing::Point(138, 94);
			this->pictureBox4->Name = L""pictureBox4"";
			this->pictureBox4->Size = System::Drawing::Size(266, 31);
			this->pictureBox4->TabIndex = 7;
			this->pictureBox4->TabStop = false;
			this->pictureBox4->WaitOnLoad = true;
			// 
			// pictureBox5
			// 
			this->pictureBox5->BackgroundImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox5.BackgroundImage"")));
			this->pictureBox5->InitialImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox5.InitialImage"")));
			this->pictureBox5->Location = System::Drawing::Point(573, 30);
			this->pictureBox5->Name = L""pictureBox5"";
			this->pictureBox5->Size = System::Drawing::Size(253, 44);
			this->pictureBox5->TabIndex = 8;
			this->pictureBox5->TabStop = false;
			this->pictureBox5->WaitOnLoad = true;
			// 
			// pictureBox6
			// 
			this->pictureBox6->BackgroundImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox6.BackgroundImage"")));
			this->pictureBox6->InitialImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L""pictureBox6.InitialImage"")));
			this->pictureBox6->Location = System::Drawing::Point(573, 81);
			this->pictureBox6->Name = L""pictureBox6"";
			this->pictureBox6->Size = System::Drawing::Size(253, 39);
			this->pictureBox6->TabIndex = 9;
			this->pictureBox6->TabStop = false;
			this->pictureBox6->WaitOnLoad = true;
			// 
			// EqForm
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(57)), static_cast<System::Int32>(static_cast<System::Byte>(23)),
				static_cast<System::Int32>(static_cast<System::Byte>(50)));
			this->ClientSize = System::Drawing::Size(1515, 605);
			this->Controls->Add(this->table);
			this->Controls->Add(this->groupBox3);
			this->Controls->Add(this->groupBox2);
			this->Controls->Add(this->groupBox1);
			this->ForeColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(255)), static_cast<System::Int32>(static_cast<System::Byte>(128)),
				static_cast<System::Int32>(static_cast<System::Byte>(255)));
			this->Name = L""EqForm"";
			this->Text = L""EqForm"";
			this->groupBox1->ResumeLayout(false);
			this->groupBox1->PerformLayout();
			this->groupBox2->ResumeLayout(false);
			this->groupBox2->PerformLayout();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox1))->EndInit();
			this->groupBox3->ResumeLayout(false);
			this->groupBox3->PerformLayout();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->table))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox2))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox3))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox4))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox5))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox6))->EndInit();
			this->ResumeLayout(false);

		}
#pragma endregion
float E = 0.01;
int sel_eq = 0;
//EQ1, EQ2, EQ3
float f(float x) {
	if (sel_eq == 1)
		return x * x * x + 2.28 * x * x - 1.934 * x - 3.907;
	if (sel_eq == 2)
		return x * x * x + 4.81 * x * x - 17.37 * x + 5.38;
	if (sel_eq == 3)
		return -(x * x * x) + 5.67 * x * x - 7.12 * x + 1.34;
}
float fd(float x) {
	if (sel_eq == 1)
		return 3 * x * x + 4.56 * x - 1.934;
	if (sel_eq == 2)
		return 3 * x * x + 9.62 * x - 17.37;
	if (sel_eq == 3)
		return -(3 * x * x) + 11.34 * x - 7.12;
}


//EQ4
float ff_4(float x, float y) {
	return 2 * x - sin(y - 0.5) - 1;
}
float gg_4(float x, float y) {
	return y + cos(x) - 1.5;
}
float xc_4(float y) {
	return (sin(y - 0.5) + 1) / 2;
}
float yc_4(float x) {
	return 1.5 - cos(x);
}

float dn11_4(float x, float y) {
	return 2;
}
float dn12_4(float x, float y) {
	return -cos(0.5 - y);
}
float dn21_4(float x, float y) {
	return -sin(x);
}
float dn22_4(float x, float y) {
	return 1;
}
//EQ5
float ff_5(float x, float y) {
	return sin(y+0.5)-x-1;
}
float gg_5(float x, float y) {
	return y+cos(x-2);
}
float xc_5(float y) {
	return sin(y+0.5)-1;
}
float yc_5(float x) {
	return -cos(x-2);
}

float dn11_5(float x, float y) {
	return -1;
}
float dn12_5(float x, float y) {
	return cos(y+0.5);
}
float dn21_5(float x, float y) {
	return sin(2-x);
}
float dn22_5(float x, float y) {
	return 1;
}


private: double to_double(System::String^ str) {
	const char* chars = (const char*)(System::Runtime::InteropServices::Marshal::StringToHGlobalAnsi(str)).ToPointer();
	std::string ss = chars;

	// Free the allocated memory for const char*
	System::Runtime::InteropServices::Marshal::FreeHGlobal(IntPtr((void*)chars));
	std::istringstream iss(ss);
	double result;
	iss >> result;
	return result;
}
private: double min(double a, double b) {
	if (a < b) return a; else return b;
}
private: double max(double a, double b) {
	if (a > b) return a; else return b;
}

std::pair <float, float> solven(float x, float y) {
	float aa, bb, cc, dd, ee, ff;
	if (sel_eq == 4) {
		aa = dn11_4(x, y);
		bb = dn12_4(x, y);
		cc = -ff_4(x, y);
		dd = dn21_4(x, y);
		ee = dn22_4(x, y);
		ff = -gg_4(x, y);
	}
	else {
		aa = dn11_5(x, y);
		bb = dn12_5(x, y);
		cc = -ff_5(x, y);
		dd = dn21_5(x, y);
		ee = dn22_5(x, y);
		ff = -gg_5(x, y);
	}

	float newx = 0;
	float newy = 0;

	if (aa == 0 || dd == 0) {
		if (aa == 0) {
			newy = cc / bb;
			newx = (ff - ee * newy) / dd;
		}
		else
			if (dd == 0) {
				newy = ff / ee;
				newx = (cc - bb * newy) / aa;
			}
		return std::make_pair(newx, newy);
	}

	if (bb == 0 || ee == 0) {
		if (bb == 0) {
			newx = cc / aa;
			newy = (ff - dd * newx) / ee;
		}
		else
			if (ee == 0) {
				newx = ff / dd;
				newy = (cc - aa * newx) / bb;
			}
		return std::make_pair(newx, newy);
	}


	if (aa != 0 && bb != 0 && dd != 0 && ee != 0) {
		newy = (aa * ff - cc * dd) / (aa * ee - bb * dd);
		newx = (cc - bb * newy) / aa;
		return std::make_pair(newx, newy);
	}
	return std::make_pair(newx, newy);
}
std::pair <float, float> newton_2(float xa, float xb, float ya, float yb) {
	table->ColumnHeadersVisible = true;
	table->Columns->Clear();
	table->Columns->Add(""x"", ""x"");
	table->Columns->Add(""y"", ""y"");
	table->Columns->Add(""diff"", ""|x(k)-x(k-1)|"");
	table->Columns->Add(""diff"", ""|y(k)-y(k-1)|"");
	float xp = xa;
	float x = xa;
	float yp = ya;
	float y = ya;
	int i = 0;
	do {
		xp = x;
		yp = y;
		std::pair <float, float> dxdy = solven(x, y);
		x = xp + dxdy.first;
		y = yp + dxdy.second;
		table->Rows->Add();
		table->Rows[i]->Cells[0]->Value = (x).ToString();
		table->Rows[i]->Cells[1]->Value = (y).ToString();
		table->Rows[i]->Cells[2]->Value = (x-xp).ToString();
		table->Rows[i]->Cells[3]->Value = (y-yp).ToString();
		i++;
	} while (fabs(x - xp) > E && fabs(y - yp) > E);
	return std::make_pair(x, y);
}

float half_div(float a, float b) {
	table->ColumnHeadersVisible = true;
	table->Columns->Clear();
	table->Columns->Add(""a"", ""a"");
	table->Columns->Add(""b"", ""b"");
	table->Columns->Add(""x"", ""x"");
	table->Columns->Add(""fa"", ""f(a)"");
	table->Columns->Add(""fb"", ""f(b)"");
	table->Columns->Add(""fx"", ""f(x)"");
	table->Columns->Add(""abs"", ""|a-b|"");
	float x = 0, i=0;
	do {
		float x = (a + b) / 2;
		table->Rows->Add();
		table->Rows[i]->Cells[0]->Value = (a).ToString();
		table->Rows[i]->Cells[1]->Value = (b).ToString();
		table->Rows[i]->Cells[2]->Value = (x).ToString();
		table->Rows[i]->Cells[3]->Value = (f(a)).ToString();
		table->Rows[i]->Cells[4]->Value = (f(b)).ToString();
		table->Rows[i]->Cells[5]->Value = (f(x)).ToString();
		table->Rows[i]->Cells[6]->Value = (fabs(a - b)).ToString();
		i++;
		if (f(a) * f(x) < 0) b = x;
		else
			if (f(x) * f(b) < 0) a = x;
	} while (fabs(a - b) > E);
	return x;
}
float slicing(float x0, float x1) {
	table->ColumnHeadersVisible = true;
	table->Columns->Clear();
	table->Columns->Add(""ppx"", ""ppx"");
	table->Columns->Add(""px"", ""px"");
	table->Columns->Add(""x"", ""x"");
	table->Columns->Add(""fx"", ""f(x)"");
	table->Columns->Add(""abs"", ""|x-px|"");
	float i = 0;
	float xn = x1;
	float x = x0;
	float px = x0;
	do {
		px = x;
		x = xn;
		xn = x - (x - px) / (f(x) - f(px)) * f(x);
		table->Rows->Add();
		table->Rows[i]->Cells[0]->Value = (px).ToString();
		table->Rows[i]->Cells[1]->Value = (x).ToString();
		table->Rows[i]->Cells[2]->Value = (xn).ToString();
		table->Rows[i]->Cells[3]->Value = (f(x)).ToString();
		table->Rows[i]->Cells[4]->Value = (fabs(xn-x)).ToString();
		i++;
	} while (fabs(xn - x) > E || f(xn) > E);
	return xn;
}
float simple_iter(float a, float b) {
	table->ColumnHeadersVisible = true;
	table->Columns->Clear();
	table->Columns->Add(""px"", ""px"");
	table->Columns->Add(""x"", ""x"");
	table->Columns->Add(""fx"", ""f(x)"");
	table->Columns->Add(""abs"", ""|x-px|"");
	float lam = 1 / max(fabs(fd(a)), fabs(fd(b)));
	if (fd((a + b) / 2) > 0) lam = -lam;
	float xn = a;
	float x = a;
	float i = 0;
	do {
		x = xn;
		xn = xn + lam * f(x);
		table->Rows->Add();
		table->Rows[i]->Cells[0]->Value = (x).ToString();
		table->Rows[i]->Cells[1]->Value = (xn).ToString();
		table->Rows[i]->Cells[2]->Value = (f(xn)).ToString();
		table->Rows[i]->Cells[3]->Value = (fabs(xn - x)).ToString();
		i++;
	} while (fabs(xn - x) > E);
	return xn;
}
private: System::Void groupBox2_Enter(System::Object^ sender, System::EventArgs^ e) {
}
private: System::Void label1_Click(System::Object^ sender, System::EventArgs^ e) {
}
private: System::Void label7_Click(System::Object^ sender, System::EventArgs^ e) {
}
private: System::Void textBox7_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	E = to_double(EPStext->Text);
}
private: System::Void label8_Click(System::Object^ sender, System::EventArgs^ e) {
}
private: void drawitall(float top, float bottom, float left, float right, bool surround) {
	Graphics^ canvas = pictureBox1->CreateGraphics();
	Color c_black = Color::FromName(""Black"");
	Color c_white = Color::FromName(""White"");
	Color c_green = Color::FromName(""Green"");
	Color c_red = Color::FromName(""Red"");
	canvas->Clear(c_white);
	Pen ^greenPen = (gcnew Pen(c_green, 2.0));
	Pen^ redPen = (gcnew Pen(c_red, 1.0));
	Pen^ blackPen = (gcnew Pen(c_black, 1.0));

	Drawing::Font^ font = (gcnew Drawing::Font(""Arial"", 12));
	Brush^ brush = Brushes::Black;
	Brush^ brushr = Brushes::Red;

	SizeF textSize;

	float microrangex = 10;
	if (fabs(right - left) < 10) microrangex = 1;
	if (fabs(right - left) < 1) microrangex = 0.1;
	if (fabs(right - left) < 0.1) microrangex = 0.01;
	float microrangey = 10;
	if (fabs(top - bottom) < 10) microrangey = 1;
	if (fabs(top - bottom) < 1) microrangey = 0.1;
	if (fabs(top - bottom) < 0.1) microrangey = 0.01;

	top += microrangey*2;
	bottom -= microrangey * 2;
	left -= microrangex * 2;
	right += microrangex * 2;

	float x1 =  0;
	float x2 =  0;
	float y1 = -100;
	float y2 = 100;
	canvas->DrawLine(blackPen,
		(x1 - left) / (right - left) * pictureBox1->Width,
		(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height,
		(x2 - left) / (right - left) * pictureBox1->Width,
		(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);

	x1 = -100;
	x2 = 100;
	y1 = 0;
	y2 = 0;
	canvas->DrawLine(blackPen, 
		(x1 - left) / (right - left) * pictureBox1->Width, 
		(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height,
		(x2 - left) / (right - left) * pictureBox1->Width,
		(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);

	if (surround) {
		x1 = -100;
		x2 = 100;
		y1 = top-microrangey*2;
		y2 = bottom+microrangey * 2;
		canvas->DrawLine(redPen,
			(x1 - left) / (right - left) * pictureBox1->Width,
			(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height,
			(x2 - left) / (right - left) * pictureBox1->Width,
			(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height);

		textSize = canvas->MeasureString((left + microrangex * 2).ToString(""F2""), font);
		canvas->DrawString((top - microrangey * 2).ToString(""F2""), font, brushr,
			0 * pictureBox1->Width,
			(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height);

		canvas->DrawLine(redPen,
			(x1 - left) / (right - left) * pictureBox1->Width,
			(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height,
			(x2 - left) / (right - left) * pictureBox1->Width,
			(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);

		textSize = canvas->MeasureString((left + microrangex * 2).ToString(""F2""), font);
		canvas->DrawString((bottom + microrangey * 2).ToString(""F2""), font, brushr,
			0 * pictureBox1->Width,
			(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);
	}
	x1 = left + microrangex * 2;
	x2 = right - microrangex * 2;
	y1 = -100;
	y2 = 100;
	canvas->DrawLine(redPen,
		(x1 - left) / (right - left) * pictureBox1->Width,
		(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height,
		(x1 - left) / (right - left) * pictureBox1->Width,
		(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);

	textSize = canvas->MeasureString((left + microrangex * 2).ToString(""F2""), font);
	canvas->DrawString((left + microrangex * 2).ToString(""F2""), font, brushr,
		(x1 - left) / (right - left) * pictureBox1->Width,
		(1) * pictureBox1->Height - textSize.Height);

	canvas->DrawLine(redPen,
		(x2 - left) / (right - left) * pictureBox1->Width,
		(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height,
		(x2 - left) / (right - left) * pictureBox1->Width,
		(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);

	textSize = canvas->MeasureString((right - microrangex * 2).ToString(""F2""), font);
	canvas->DrawString((right - microrangex * 2).ToString(""F2""), font, brushr,
		(x2 - left) / (right - left) * pictureBox1->Width,
		(1) * pictureBox1->Height - textSize.Height);

	for (double x = -100; x <= 100; x += microrangex) {

		x1 = x;
		x2 = x;
		y1 = -microrangey/10;
		y2 = microrangey/10;
		canvas->DrawLine(blackPen,
			(x1 - left) / (right - left) * pictureBox1->Width,
			(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height,
			(x2 - left) / (right - left) * pictureBox1->Width,
			(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);
		textSize = canvas->MeasureString((x).ToString(""F2""), font);
		canvas->DrawString((x).ToString(""F2""), font, brush,
			(x1 - left) / (right - left) * pictureBox1->Width - textSize.Width / 2,
			(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height);
	}
	for (double y = -100; y <= 100; y += microrangey) {
		x1 = -microrangex/10;
		x2 = microrangex/10;
		y1 = y;
		y2 = y;
		canvas->DrawLine(blackPen,
			(x1 - left) / (right - left) * pictureBox1->Width,
			(1 - (y1 - bottom) / (top - bottom)) * pictureBox1->Height,
			(x2 - left) / (right - left) * pictureBox1->Width,
			(1 - (y2 - bottom) / (top - bottom)) * pictureBox1->Height);
		textSize = canvas->MeasureString((y).ToString(""F2""), font);
		canvas->DrawString((y).ToString(""F2""), font, brush,
			(x1 - left) / (right - left) * pictureBox1->Width,
			(1 - ((y1) - bottom) / (top - bottom)) * pictureBox1->Height-textSize.Height / 2);
	}

	if (sel_eq == 1 || sel_eq == 2 || sel_eq == 3) {
		float px = left;
		float py = f(px);
		for (float x = left+microrangex; x <= right + microrangex; x += microrangex/20) {
			float y = f(x);

			canvas->DrawLine(greenPen,
				(px - left) / fabs(right - left) * pictureBox1->Width,
				(1 - (py - bottom) / fabs(top - bottom)) * pictureBox1->Height,
				(x - left) / fabs(right - left) * pictureBox1->Width,
				(1 - (y - bottom) / fabs(top - bottom)) * pictureBox1->Height);

			px = x;
			py = y;
		}
	}
	if (sel_eq == 4){
		float px = left;
		float py = yc_4(px);
		for (float x = left + microrangex; x <= right + microrangex; x += microrangex / 20) {
			float y = yc_4(x);

			canvas->DrawLine(greenPen,
				(px - left) / fabs(right - left) * pictureBox1->Width,
				(1 - (py - bottom) / fabs(top - bottom)) * pictureBox1->Height,
				(x - left) / fabs(right - left) * pictureBox1->Width,
				(1 - (y - bottom) / fabs(top - bottom)) * pictureBox1->Height);

			px = x;
			py = y;
		}
		py = bottom;
		px = xc_4(py);
		for (float y = bottom + microrangey; y <= top+microrangey; y += microrangey / 5) {
			float x = xc_4(y);

			canvas->DrawLine(greenPen,
				(px - left) / fabs(right - left) * pictureBox1->Width,
				(1 - (py - bottom) / fabs(top - bottom)) * pictureBox1->Height,
				(x - left) / fabs(right - left) * pictureBox1->Width,
				(1 - (y - bottom) / fabs(top - bottom)) * pictureBox1->Height);

			px = x;
			py = y;
		}
	}
}
private: System::Void button1_Click(System::Object^ sender, System::EventArgs^ e) {
	switch (method->SelectedIndex) {
		case 0: {
			try {
				if (sel_eq > 3) {
					textBox3->Text = ""Cannot use the slicing method on this equation."";
					break;
				}
				double x0 = to_double(X0txt->Text);
				double x1 = to_double(Y0txt->Text);
				int slt = 0;
				for (float k = x0;k <= x1;k += 0.1) {
					if (f(k) * f(k - 0.1) < 0) slt++;
				}
				if (slt == 0) {
					textBox3->Text = ""This range contains no solutions."";
					break;
				}
				if (slt > 2) {
					textBox3->Text = ""This range contains multiple solutions."";
					break;
				}
				slicing(x0, x1);
				float fl = 999;
				float cei = -999;
				for (float k = x0;k <= x1;k += 0.1) {
					fl = min(fl, f(k));
					cei = max(cei, f(k));
				}
				drawitall(cei, fl, x0, x1, false);
			}
			catch (...) {
				textBox3->Text = ""Invalid input."";
			}
			break;
		}
		case 1: {
			try{
				if (sel_eq > 3) {
					textBox3->Text = ""Cannot use the half-splitting method on this equation."";
					break;
				}
				double a = to_double(AXtxt->Text);
				double b = to_double(BXtxt->Text);
				int slt = 0;
				for (float k = a;k <= b;k += 0.1) {
					if (f(k) * f(k - 0.1) < 0) slt++;
				}
				if (slt == 0) {
					textBox3->Text = ""This range contains no solutions."";
					break;
				}
				if (slt > 2) {
					textBox3->Text = ""This range contains multiple solutions."";
					break;
				}
				half_div(a, b);
				float fl = 999;
				float cei = -999;
				for (float k = a;k <= b;k+=0.1) {
					fl = min(fl, f(k));
					cei = max(cei, f(k));
				}
				drawitall(cei, fl, a, b, false);
			}
			catch (...) {
				textBox3->Text = ""Invalid input."";
			}
			break;
		}
		case 2: {
			try {
				if (sel_eq > 3) {
					textBox3->Text = ""Cannot use the simple iterations method on this equation."";
					break;
				}
				double a = to_double(AXtxt->Text);
				double b = to_double(BXtxt->Text);
				int slt = 0;
				for (float k = a;k <= b;k += 0.1) {
					if (f(k) * f(k - 0.1) < 0) slt++;
				}
				if (slt == 0) {
					textBox3->Text = ""This range contains no solutions."";
					break;
				}
				if (slt > 2) {
					textBox3->Text = ""This range contains multiple solutions."";
					break;
				}
				simple_iter(a, b);
				float fl = 999;
				float cei = -999;
				for (float k = a;k <= b;k+=0.1) {
					fl = min(fl, f(k));
					cei = max(cei, f(k));
				}
				drawitall(cei, fl, a, b, false);
				break;
			}
			catch (...) {
				textBox3->Text = ""Method does not converge in this range."";
			}
			break;
		}
		case 3: {
			if (sel_eq < 4) {
				textBox3->Text = ""Cannot use the newton method on this equation."";
				break;
			}
			double ax = to_double(AXtxt->Text);
			double bx = to_double(BXtxt->Text);
			double ay = to_double(AYtxt->Text);
			double by = to_double(BYtxt->Text);
			newton_2(ax, bx, ay, by);
			drawitall(by, ay, ax, bx, true);
			break;
		}
	}
}
private: System::Void label17_Click(System::Object^ sender, System::EventArgs^ e) {
}
private: System::Void comboBox1_SelectedIndexChanged(System::Object^ sender, System::EventArgs^ e) {
	switch (method->SelectedIndex) {
		case 0: {
			AXtxt->Hide();
			AYtxt->Hide();
			BXtxt->Hide();
			BYtxt->Hide();
			X0txt->Show();
			Y0txt->Show();
			label5->Text = ""X0"";
			label6->Text = ""X1"";
			label4->Show();
			label11->Show();
			label6->Show();
			label10->Show();
			label3->Show();
			break;
		}
		case 1: {
			AXtxt->Show();
			AYtxt->Hide();
			BXtxt->Show();
			BYtxt->Hide();
			X0txt->Hide();
			Y0txt->Hide();
			label5->Text = ""X0"";
			label4->Hide();
			label11->Hide();
			label6->Hide();
			label10->Hide();
			label3->Hide();
			break;
		}
		case 2: {
			AXtxt->Show();
			AYtxt->Hide();
			BXtxt->Show();
			BYtxt->Hide();
			X0txt->Hide();
			Y0txt->Hide();
			label5->Text = ""X0"";
			label4->Hide();
			label11->Hide();
			label6->Hide();
			label10->Hide();
			label3->Hide();
			break;
		}
		case 3: {
			AXtxt->Show();
			AYtxt->Show();
			BXtxt->Show();
			BYtxt->Show();
			X0txt->Hide();
			Y0txt->Hide();
			label5->Text = ""X"";
			label6->Text = ""Y"";
			label4->Show();
			label11->Show();
			label6->Show();
			label10->Show();
			label3->Show();
			break;
		}
	}
}
private: System::Void eqrb1_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	sel_eq = 1;
	textBox3->Text = ""Equation selected: "" + (sel_eq).ToString();
}
private: System::Void eqrb2_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	sel_eq = 2;
	textBox3->Text = ""Equation selected: "" + (sel_eq).ToString();
}
private: System::Void eqrb3_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	sel_eq = 3;
	textBox3->Text = ""Equation selected: "" + (sel_eq).ToString();
}
private: System::Void eqrb4_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	sel_eq = 4;
	textBox3->Text = ""Equation selected: "" + (sel_eq).ToString();
}
private: System::Void eqrb5_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	sel_eq = 5;
	textBox3->Text = ""Equation selected: "" + (sel_eq).ToString();
}
};
}
"
1yn6Gj1q,Swimbot Error,swimmerhair,Python,Monday 13th of May 2024 03:28:07 PM CDT,"Traceback (most recent call last):
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/bot.py"", line 939, in invoke
    await ctx.command.invoke(ctx)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 863, in invoke
    await injected(*ctx.args, **ctx.kwargs)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/whois.py"", line 77, in unlink
    clash_info = await COC.Player(playertag).info
  File ""/home/pi/Swimbot/COC.py"", line 35, in info
    elif r.status == 403: raise swimbot_utils.CoCForbidden
swimbot_utils.CoCForbidden
"
0r3KbEvX,VIM: Window and Tab binds,FocusedWolf,VIM,Monday 13th of May 2024 03:23:41 PM CDT,"if has('gui_running') "" gVim
    "" Remove the toolbar.
    set guioptions-=T

    "" Remove the menu toolbar.
    set guioptions-=m

    "" Remove left-hand scrollbar.
    set guioptions-=l
    set guioptions-=L

    "" Remove right-hand scrollbar.
    set guioptions-=r
    set guioptions-=R

    "" Disable autoselect which forces MiddleMouse clicks in other programs to paste the contents of Vim's ""+ unnamedplus register instead of the ""* unnamed selection register. See :h go-a
    set guioptions-=a
    set guioptions-=A

    "" Tab navigation
    "" SOURCE: http://genotrance.wordpress.com/2008/02/04/my-vim-customization/
    "" SOURCE: https://github.com/bashwork/settings/blob/master/linux/.vimrc

    "" New Tab.
    noremap <C-t> :tabnew<CR>
    inoremap <C-t> <Esc>:tabnew<CR>i
    cnoremap <C-t> <Esc><Esc>:tabnew<CR>

    "" Close Tab.
    ""noremap <C-w> :tabclose<CR> "" Firefox uses this but had to disable it because it interferes with ctrl + ww to switch between windows
    noremap <C-q> :tabclose<CR>
    inoremap <C-q> <Esc>:tabclose<CR>
    cnoremap <C-q> <Esc><Esc>:tabclose<CR>

    "" Next Tab.
    noremap <C-Tab> :tabnext<CR>
    inoremap <C-Tab> <Esc>:tabnext<CR>i
    cnoremap <C-Tab> <Esc><Esc>:tabnext<CR>

    "" Previous Tab.
    noremap <C-S-Tab> :tabprevious<CR>
    inoremap <C-S-Tab> <Esc>:tabprevious<CR>i
    cnoremap <C-S-Tab> <Esc><Esc>:tabprevious<CR>

    "" Hold shift for horizontal mouse-wheel scrolling.
    "" NOTE: This works for Linux and macOS but [:h scroll-mouse-wheel] says this does not work with Windows).
    "" SOURCE: https://github.com/graywh/dotfiles/blob/master/.gvimrc
    noremap <S-ScrollWheelUp> <ScrollWheelLeft>
    inoremap <S-ScrollWheelUp> <ScrollWheelLeft>
    cnoremap <S-ScrollWheelUp> <ScrollWheelLeft>

    noremap <S-ScrollWheelDown> <ScrollWheelRight>
    inoremap <S-ScrollWheelDown> <ScrollWheelRight>
    cnoremap <S-ScrollWheelDown> <ScrollWheelRight>

    "" Different cursors for different modes.
    ""
    ""     Default value of guicursor:
    ""     set guicursor=
    ""     set guicursor+=n-v-c:block-Cursor/lCursor,
    ""     set guicursor+=ve:ver35-Cursor,
    ""     set guicursor+=o:hor50-Cursor,
    ""     set guicursor+=i-ci:ver25-Cursor/lCursor,
    ""     set guicursor+=r-cr:hor20-Cursor/lCursor,
    ""     set guicursor+=sm:block-Cursor-blinkwait175-blinkoff150-blinkon175
    ""
    "" Moved v (Visual) to ve (Visual mode with 'selection') and applied a non-blinking block cursor.
    "" Made r (Replace) and cr (Command-line Replace) a blinking block cursor.
    set guicursor=
    set guicursor+=n-c:block-Cursor/lCursor,
    set guicursor+=v-ve:block-Cursor-blinkon0,
    set guicursor+=o:hor50-Cursor,
    set guicursor+=i-ci:ver25-Cursor/lCursor,
    "" set guicursor+=r-cr:block-Cursor/lCursor,
    set guicursor+=r-cr:hor20-Cursor/lCursor,
    set guicursor+=sm:block-Cursor-blinkwait175-blinkoff150-blinkon175
endif

"" Bind Leader + Up/Down/Left/Right for window moving {{{

nnoremap <silent> <Leader><left> <C-w>H
nnoremap <silent> <Leader><right> <C-w>L
nnoremap <silent> <Leader><up> <C-w>K
nnoremap <silent> <Leader><down> <C-w>J

"" }}} Bind Leader + Up/Down/Left/Right for window moving
"" Bind Ctrl + Up/Down/Left/Right for window creation {{{

"" Window creation.
"" SOURCE: https://stackoverflow.com/questions/22614280/vim-open-file-in-right-split
"" SOURCE: https://technotales.wordpress.com/2010/04/29/vim-splits-a-guide-to-doing-exactly-what-you-want/
""nnoremap <silent> <C-left>   :leftabove  vnew<CR>:startinsert<CR>
""nnoremap <silent> <C-right>  :rightbelow vnew<CR>:startinsert<CR>
""nnoremap <silent> <C-up>     :leftabove  new<CR>:startinsert<CR>
""nnoremap <silent> <C-down>   :rightbelow new<CR>:startinsert<CR>

"" Open Startify in the created window.
nnoremap <silent> <C-left>    :leftabove  vnew<CR>:Startify<CR>
nnoremap <silent> <C-right>   :rightbelow vnew<CR>:Startify<CR>
nnoremap <silent> <C-up>      :leftabove  new<CR>:Startify<CR>
nnoremap <silent> <C-down>    :rightbelow new<CR>:Startify<CR>

"" }}} Bind Ctrl + Up/Down/Left/Right for window creation
"" Bind Alt + Up/Down/Left/Right for window viewing {{{

"" Built in ways to navigate windows:
""   Cycle all windows: <Ctrl + W><Ctrl + W>
""   Window navigating: <Ctrl + W><arrow key>

""nnoremap <A-left> <C-w>h
""nnoremap <A-right> <C-w>l
""nnoremap <A-up> <C-w>k
""nnoremap <A-down> <C-w>j

"" SOURCE[modded]: http://janneinosaka.blogspot.com/2014/10/automatically-resize-vim-splits.html
function! SplitResize()
    let ratio = 0.9 ""2.0/3.0

    if &ft ==? 'help'
        let hmax = 83
    elseif &ft ==? 'nerdtree'
        let hmax = 40
    else
        let hmax = max([winwidth(0), float2nr(&columns * ratio)])
    endif

    let vmax = max([winheight(0), float2nr(&lines * ratio)])
    exe ""vertical resize"" . hmax
    exe ""resize"" . vmax
endfunction

"" NOTE: Use <Control-W>= to equalize windows size. See :h CTRL-W_=
"" CTRL-W =    Make all windows (almost) equally high and wide, but use
""             'winheight' and 'winwidth' for the current window.
""             Windows with 'winfixheight' set keep their height and windows
""             with 'winfixwidth' set keep their width.
""
"" Alt + = makes more sense.
nnoremap <silent> <A-=> <C-w>=

"" Window navigation.
nnoremap <silent> <A-left>  <C-w>h:call SplitResize()<CR>
nnoremap <silent> <A-right> <C-w>l:call SplitResize()<CR>
nnoremap <silent> <A-up>    <C-w>k:call SplitResize()<CR>
nnoremap <silent> <A-down>  <C-w>j:call SplitResize()<CR>

"" }}} Bind Alt + Up/Down/Left/Right for window viewing
"
x64uv1Up,Vercel fix reload with Vite,tryller,JSON,Monday 13th of May 2024 02:57:37 PM CDT,"{
  ""rewrites"": [
    { ""source"": ""/(.*)"", ""destination"": ""/"" }
  ]
}"
Ei2jgnTD,ДЗ Динамический массив,TeT91,C#,Monday 13th of May 2024 02:57:12 PM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandSum = ""Sum"";
            const string CommandExit = ""Exit"";
            int[] numbers = { };
            int sum = 0;

            bool inProgress = true;

            while (inProgress)
            {
                Console.WriteLine(""Введите команду или число"");
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandSum:
                        foreach (int number in numbers)
                        {
                            sum += number;
                        }

                        Console.WriteLine($""Сумма всех чисел = {sum}"");
                        break;

                    case CommandExit:
                        inProgress = false;
                        break;

                    default:
                        if (int.TryParse(userInput, out int parsedNumber))
                        {
                            int[] tempArray = new int[numbers.Length + 1];

                            for (int i = 0; i < numbers.Length; i++)
                            {
                                tempArray[i] = numbers[i];
                            }

                            numbers = tempArray;
                            numbers[numbers.Length - 1] = parsedNumber;

                            Console.WriteLine(""Числа в массиве"");

                            for (int i = 0; i < numbers.Length; i++)
                            {
                                Console.Write(numbers[i] + "" "");
                            }

                            Console.WriteLine();
                        }
                        else
                        {
                            Console.WriteLine(""Неизвестная команда"");
                        }
                        break;
                }
            }
        }
    }
}"
4NCvNnLP,example_compare_anagrams,Python253,Python,Monday 13th of May 2024 02:36:34 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: example_compare_anagrams.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This example script compares 2 strings and determines if they are anagrams of each other.

Requirements:
    - Python 3.x
    - The script requires the following Python modules:
        - collections module with Counter class
        - string module

Functions:
    - clean_string(s): Removes punctuation, spaces, and newline characters from the input string.
    - check_anagram(string1, string2): Checks if two strings are anagrams of each other.

Usage:
    - Run the script and provide the two strings to compare when prompted.

Additional Notes:
    - Anagrams are words or phrases formed by rearranging the letters of another word or phrase.
    - This script ignores the case of the letters, spaces, punctuation, and newline characters.

Expected Example Output:

    String 1:
       I pledge allegiance to the flag of the United States of America, 
       and to the republic for which it stands, one nation, under God,
       indivisible, with liberty and justice for all!

    String 2:
       I, George W. Bush, an evil Republican fascist,
       used God to inflict pain on the world, end life,
       facilitate death, create militant jihad rebels,
       and to let youths die for nothing!

       String 1 & String 2 are anagrams!
""""""

# Get Essential Imports
from collections import Counter
import string

# Function to clean the strings
def clean_string(s):
    """"""
    Removes punctuation, spaces, and newline characters from the input string.

    Args:
        s (str): The input string.

    Returns:
        str: The cleaned string.
    """"""
    return s.translate(str.maketrans("""", """", string.punctuation + "" \n"")).lower()

# Function to determine if two strings are anagrams of each other
def check_anagram(string1, string2):
    """"""
    Checks if two strings are anagrams of each other.

    Args:
        string1 (str): The first string.
        string2 (str): The second string.

    Returns:
        bool: True if the strings are anagrams, False otherwise.
    """"""
    return Counter(clean_string(string1)) == Counter(clean_string(string2))

if __name__ == ""__main__"":
    """"""
    Define String 1: The first string to compare
    """"""
    string1 = ""  I pledge allegiance to the flag of the United States of America, \n   and to the republic for which it stands, one nation, under God,\n   indivisible, with liberty and justice for all!""
    print(""\nString 1:\n"", string1)
    """"""
    Define String 2: The second string to compare
    """"""
    string2 = ""  I, George W. Bush, an evil Republican fascist,\n   used God to inflict pain on the world, end life,\n   facilitate death, create militant jihad rebels,\n   and to let youths die for nothing!""
    print(""\nString 2:\n"", string2)
    """"""
    Check if the strings are anagrams
    """"""
    if check_anagram(string1, string2):
        """"""
        Print if strings are anagrams
        """"""
        print(""\n   String 1 & String 2 are anagrams!\n"")
    else:
        """"""
        Print if strings are not anagrams
        """"""
        print(""\n   String 1 & String 2 are not anagrams!\n"")
"
9ppkDffV,is_anagram,Python253,Python,Monday 13th of May 2024 02:36:02 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: is_anagram.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script determines whether a given string is an anagram or not.
    - An anagram is a word or phrase formed by rearranging the letters of another word or phrase.
    - This script takes a string as input and checks if it is an anagram. It ignores the case of the letters.

Requirements:
    - Python 3.x
    - The script requires the following Python module:
        - collections module with the Counter class

Functions:
    check_anagram(string): 
        Checks if the given string is an anagram.

Usage:
    Run the script and provide the string to check when prompted.

Additional Notes:
    - An empty string or a string containing only whitespace will be considered as an anagram.
""""""

from collections import Counter

def check_anagram(string):
    """"""
    Checks if the given string is an anagram.

    Args:
        string (str): The string to check.

    Returns:
        bool: True if the string is an anagram, False otherwise.
    """"""
    # Count the occurrences of each character in the string
    return Counter(string)

if __name__ == '__main__':
    # Get the input string from the user
    input_string = input(""\nEnter The String: "")

    # Check if the input string is an anagram
    if check_anagram(input_string):
        print(""\nThe string is an anagram!\n"")
    else:
        print(""\nThe string is not an anagram!\n"")

"
bThK8VzT,List & Loops,jrglynn2,YAML,Monday 13th of May 2024 02:27:29 PM CDT,"---
- name: List & Loops
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    values: ['val2','val3']
  tasks:
    - name: Echo values in loop
      delegate_to: localhost
      debug:
        msg: ""{{ item }}""
      loop: ""{{ values }}""

    - name: Echo values by order
      delegate_to: localhost
      debug:
        msg:
          - ""{{ values[0] }}""
          - ""{{ values[1] }}""


# RESULTS
ansible-playbook files-temp/test-list-loop.yml

PLAY [List & Loops] *****************************************************************************************************************

TASK [Echo values in loop] **********************************************************************************************************
ok: [localhost] => (item=val2) =>
  msg: val2
ok: [localhost] => (item=val3) =>
  msg: val3

TASK [Echo values by order] *********************************************************************************************************
ok: [localhost] =>
  msg:
  - val2
  - val3

PLAY RECAP **************************************************************************************************************************
localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
"
RYSgNi8s,snake_game,Python253,Python,Monday 13th of May 2024 01:53:53 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: snake_game.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script implements a simple Snake game using Pygame.

Functions:
    - display_text: Displays text on the screen.
    - draw_snake: Draws the snake on the game display.
    - game_over_screen: Displays the game over screen with the final score.
    - draw_gradient_background: Fills the background with a gradient of dark green.
    - game_loop: Main game loop that handles game logic, user input, and rendering.

Requirements:
    - Python 3.x
    - Pygame

Usage:
    1. Make sure Python and Pygame are installed on your system.
    2. Run the script using Python.
    3. Use the arrow keys to control the snake.
    4. Eat the red food blocks to grow the snake and earn points.
    5. Avoid running into the walls or the snake itself.
    6. Press 'Q' to quit the game at any time.

Additional Notes:
    - The snake starts in the center of the screen and moves in the direction specified by the arrow keys.
    - The game ends when the snake collides with the walls or itself.
    - The player's score increases by 10 points each time the snake eats food.
    - The game over screen displays the final score and provides options to play again or quit.
    - The background is filled with a gradient of dark green color.
""""""

import pygame
import random

# Initialize Pygame
pygame.init()

# Define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 128, 0)  # Dark green

# Set up the game window
WINDOW_WIDTH = 800
WINDOW_HEIGHT = 600
game_display = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption(""Snake Game"")

# Set up the clock
clock = pygame.time.Clock()

# Set up the font
font = pygame.font.SysFont(None, 30)

# Define block size and FPS
BLOCK_SIZE = 20
FPS = 10

# Define directions
UP = 0
DOWN = 1
LEFT = 2
RIGHT = 3

# Function to display text on the screen
def display_text(text, color, x, y):
    text_surface = font.render(text, True, color)
    game_display.blit(text_surface, (x, y))

# Function to draw the snake
def draw_snake(snake_list):
    for i, segment in enumerate(snake_list):
        color = BLACK if i == 0 else GREEN  # First block is black, rest are green
        pygame.draw.rect(
            game_display, color, [segment[0], segment[1], BLOCK_SIZE, BLOCK_SIZE]
        )

# Function to display game over screen
def game_over_screen(score):
    game_display.fill(WHITE)
    display_text(
        ""      Game Over !"", RED, WINDOW_WIDTH / 2 - 100, WINDOW_HEIGHT / 2 - 30
    )
    display_text(
        f""   Your Score: {score}"", BLACK, WINDOW_WIDTH / 2 - 80, WINDOW_HEIGHT / 2 + 10
    )
    display_text(
        ""Press C to Play Again or Q to Quit"",
        BLACK,
        WINDOW_WIDTH / 2 - 160,
        WINDOW_HEIGHT / 2 + 50,
    )
    pygame.display.update()

# Function to fill background with gradient
def draw_gradient_background():
    for y in range(WINDOW_HEIGHT):
        shade = int(
            255 * (1 - (y / WINDOW_HEIGHT))
        )  # Calculate shade based on y-coordinate
        pygame.draw.rect(game_display, (0, shade, 0), (0, y, WINDOW_WIDTH, 1))

# Main game loop
def game_loop():
    snake_list = []
    snake_length = 1
    snake_head = [WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2]
    direction = RIGHT
    score = 0

    food_pos = [
        random.randrange(0, WINDOW_WIDTH - BLOCK_SIZE, BLOCK_SIZE),
        random.randrange(0, WINDOW_HEIGHT - BLOCK_SIZE, BLOCK_SIZE),
    ]

    game_exit = False
    game_over = False

    while not game_exit:
        while game_over:
            game_over_screen(score)
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    game_exit = True
                    game_over = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_exit = True
                        game_over = False
                    elif event.key == pygame.K_c:
                        game_loop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_exit = True
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT and direction != RIGHT:
                    direction = LEFT
                elif event.key == pygame.K_RIGHT and direction != LEFT:
                    direction = RIGHT
                elif event.key == pygame.K_UP and direction != DOWN:
                    direction = UP
                elif event.key == pygame.K_DOWN and direction != UP:
                    direction = DOWN

        # Move the snake
        if direction == UP:
            snake_head[1] -= BLOCK_SIZE
        elif direction == DOWN:
            snake_head[1] += BLOCK_SIZE
        elif direction == LEFT:
            snake_head[0] -= BLOCK_SIZE
        elif direction == RIGHT:
            snake_head[0] += BLOCK_SIZE

        # Check for collision with food
        if snake_head[0] == food_pos[0] and snake_head[1] == food_pos[1]:
            food_pos = [
                random.randrange(0, WINDOW_WIDTH - BLOCK_SIZE, BLOCK_SIZE),
                random.randrange(0, WINDOW_HEIGHT - BLOCK_SIZE, BLOCK_SIZE),
            ]
            snake_length += 1
            score += 10

        # Update the snake list
        snake_list.insert(0, list(snake_head))
        if len(snake_list) > snake_length:
            del snake_list[-1]

        # Check for collision with walls or itself
        if (
            snake_head[0] >= WINDOW_WIDTH
            or snake_head[0] < 0
            or snake_head[1] >= WINDOW_HEIGHT
            or snake_head[1] < 0
            or snake_head in snake_list[1:]
        ):
            game_over = True

        # Fill the background with gradient
        draw_gradient_background()

        # Draw the food
        pygame.draw.rect(
            game_display, RED, [food_pos[0], food_pos[1], BLOCK_SIZE, BLOCK_SIZE]
        )

        # Draw the snake
        draw_snake(snake_list)

        # Display score
        display_text(f""Score: {score}"", BLACK, 10, 10)

        # Update the display
        pygame.display.update()

        # Set the FPS
        clock.tick(FPS)

    pygame.quit()
    quit()

# Start the game loop
game_loop()
"
mYhYbphq,string_pack_unpack,Python253,Python,Monday 13th of May 2024 01:36:07 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: string_pack_unpack.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script provides functions for packing and unpacking strings, allowing users to compress and decompress text data efficiently.

Functions:
    - pack_string(string):
      Compresses the input string by encoding repeated characters as (count, character) tuples.
    - unpack_string(compressed_string):
      Decompresses the compressed string by expanding the (count, character) tuples back into the original string.

Requirements:
    - This script requires Python 3.x.

Usage:
    - Import the functions from this script into your Python code.
    - Call the pack_string function with the string you want to compress to obtain the compressed version.
    - Call the unpack_string function with the compressed string to obtain the original uncompressed string.

Compression Example:
    Options Menu

    1: Compress
    2: Decompress

    Make your selection (1 or 2): 1

    Enter string to compress: A Bb Ccc

    Compressed string: [(1, 'A'), (1, ' '), (1, 'B'), (1, 'b'), (1, ' '), (1, 'C'), (2, 'c')]

Decompression Example:
    Options Menu

    1: Compress
    2: Decompress

    Make your selection (1 or 2): 2

    Enter compressed string: [(1, 'A'), (1, ' '), (1, 'B'), (1, 'b'), (1, ' '), (1, 'C'), (2, 'c')]

    Decompressed string: A Bb Ccc
""""""


from itertools import groupby

def compress():
    """"""
    Compresses the input string by encoding repeated characters as (count, character) tuples.
    """"""
    uncompressed = str(input(""\nEnter string to compress: ""))  # user input for string
    compressed = [(len(list(value)), str(key)) for key, value in groupby(uncompressed)]
    print(""\nCompressed string:"", compressed)  # Print the compressed string

def decompress():
    """"""
    Decompresses the compressed string by expanding the (count, character) tuples back into the original string.
    """"""
    compressed = input(""\nEnter compressed string: "")  # Get the compressed string from the user
    decompressed = """"  # Initialize the decompressed string

    # Split the compressed string into tuples of (count, character) and iterate through them
    pairs = compressed.strip('[]').split('), (')  # Adjust the splitting logic to handle the comma and space
    for pair in pairs:
        count, char = pair.strip('()').split("", "")  # Split each pair into count and character
        count = int(count)  # Convert count to integer
        char = char.strip(""'"")  # Remove single quotes around the character
        decompressed += char * count  # Append the character 'count' times to the decompressed string

    print(""\nDecompressed string:"", decompressed)  # Print the decompressed string

# Options menu
print(""\nOptions Menu\n\n1: Compress\n2: Decompress\n"")
selection = input(""Make your selection (1 or 2): "")

if selection == '1':
    compress()
elif selection == '2':
    decompress()
else:
    print(""\nInvalid selection!\n"")

"
ve4RcDPq,"быстрая сортировка, бинарный поиск",Petro_zzz,C++,Monday 13th of May 2024 01:35:37 PM CDT,"#include <iostream>
using namespace std;
#define PI 3.14926

#undef PI

#define begin {
#define end }
#define integer int
#define print cout << 

#define POW(X) (X) * (X) 

integer get_sum(integer a, integer b)
begin
	return a + b;
end

#define WINDOWS

#ifdef WINDOWS 

const double pi = 3.1415926;





void show_arr(int size, int arr[]);

void test1() {
	test1();
	cout << ""AA "";
}

template <class T>
int binary_search(int left, int right, T arr[], T target) {
	while (right > left) {
		int midle = left + (right - left) / 2;
		if (arr[midle] == target) {
			return midle;
		}
		else if (arr[midle] > target) {
			right = midle;
		}
		else {
			left = midle + 1;
		}
	}
	return -1;
}

template <class T>
int binary_search_recursion(
	int left, int right, T arr[], T target) {
	if (left < right) {
		int midle = left + (right - left) / 2;
		if (arr[midle] == target)
			return midle;
		else if (arr[midle] > target)
			binary_search_recursion(left, midle, arr, target);
		else
			binary_search_recursion(midle+1, right, arr, target);
	}
	else
		return -1;
}

void test_binary() {
	const int size = 10;
	char arr[size]{'a','b','c','d','e','f','g','h','i','j'};
	char element = 'c';
	
	int curr = binary_search_recursion(0, size, arr, element);
	
	cout << element << "" at "";
	cout << curr << "" "" << arr[curr] << endl;
	cout << ""left "" << arr[curr - 1] << endl;
	cout << ""right "" << arr[curr + 1] << endl;

}

void my_swap(int& a, int& b) {
	int tmp = b;
	b = a;
	a = tmp;
}

void quick_sort(int size, int arr[]) {
	int left = 0;
	int right = size-1;
	int val_midle = arr[size / 2];
	// маленькие - в левую часть
	// большие в правую часть массива
	int tmp;
	do {
		while (arr[left] < val_midle) left++;
		while (arr[right] > val_midle) right--;
		if (left <= right) {
			
			tmp = arr[left];
			arr[left] = arr[right];
			arr[right] = tmp;
			
			left++;
			right--;
		}
		//show_arr(size, arr);
	} while (left <= right);
	
	if (right > 0) quick_sort(right+1, arr); // в этой строке была ошибка с индексами 
	if (left < size) quick_sort(size-left, arr+left);
}

void show_arr(int size, int arr[]) {
	for (int k = 0; k < size; k++) {
		cout << arr[k] << "" "";
	}
	cout << endl;
}


void test_quick_sort() {
	int arr[]{ 3,4,1,6,7,2,7,9 };
	int size = sizeof(arr) / sizeof(arr[0]);
	
	show_arr(size, arr);
	quick_sort(size, arr);
	show_arr(size, arr);
}



void main() {
	//test_binary();
	test_quick_sort();
	/*
	cout << pi*2 << endl;
	print get_sum(2, 5);
	print endl;

	cout << POW(9 + 1) << endl;
	*/
}

#else
void main() {
	cout << ""Linux not work"" << endl;
}

#endif"
0HQaCPgR,elevators,nauseant,Lua,Monday 13th of May 2024 01:35:27 PM CDT,"MASTER_CHANNEL = 5452
ELEVATOR_CHANNEL = 47883
LABEL = os.getComputerLabel()

modem = peripheral.find(""modem"")
modem.open(ELEVATOR_CHANNEL)

function receiver()
    local event, modemSide, senderChannel, replyChannel, message, senderDistance = os.pullEvent(""modem_message"")
    return message
end

function jobs(calledTask)
    if calledTask == ""call"" then
        redstone.setOutput(""bottom"", false)
    end
end

redstone.setOutput(""bottom"", true)
while true do
    local calledLabel = receiver()
    if calledLabel == LABEL then
        modem.transmit(MASTER_CHANNEL, ELEVATOR_CHANNEL, ""success"")
        local job = receiver()
        jobs(job)

    else
        os.reboot()
    end
end"
h6cNVmN3,nvidia-390xx-utils PKGBUILD,thgiliwt,Bash,Monday 13th of May 2024 01:30:55 PM CDT,"# Maintainer: vnctdj
# Contributor: Jonathon Fernyhough (RIP) <jonathon+m2x+dev>
# Contributor: Alonso Rodriguez <alonsorodi20 (at) gmail (dot) com>
# Contributor: Sven-Hendrik Haase <svenstaro@gmail.com>
# Contributor: Thomas Baechler <thomas@archlinux.org>
# Contributor: James Rayner <iphitus@gmail.com>

pkgbase=nvidia-390xx-utils
pkgname=('nvidia-390xx-utils' 'opencl-nvidia-390xx' 'nvidia-390xx-dkms')
pkgver=390.157
pkgrel=8
arch=('x86_64')
url=""https://www.nvidia.com/""
license=('custom')
options=('!strip')
_pkg=""NVIDIA-Linux-x86_64-${pkgver}""
source=('nvidia-drm-outputclass.conf'
        'nvidia-390xx-utils.sysusers'
        'nvidia-390xx.rules'
        ""https://us.download.nvidia.com/XFree86/Linux-x86_64/${pkgver}/${_pkg}.run""
        kernel-6.2.patch
        kernel-6.3.patch
        kernel-6.4.patch
        kernel-6.5.patch
        kernel-6.6.patch
        kernel-6.8.patch
        kernel-4.16+-memory-encryption.patch
        gcc14.patch)
b2sums=('8e24aea70b139185bd682b080d32aeda673e6e92b45a90e6f6e0d736674180400bc8bd1aa5c66b8d033fc9d5e0cfffed456a87298bd93a3afbbc30b8dc48c4e9'
        'c1da4ce5784e43385465913a95053a3e54f800aac6f1b49f33e2a77504d76da5e6db6ec7074fbe7ba5f52dcef9e1ebaa620942c33ff825a56caba5c9c8b0d1be'
        '67e32932eeddda8fef667d25c34faf7b3a02f01cf9c15a97e5613bd44a0e8dcf7396e25399a52701f55dd18054c689720f237bb07d5bd580394d8dc8c9d05534'
        '44b855cd11f3b2f231f9fb90492ae2e67a67ea3ea83c413e7c90956d38c9730a8bd0321281ae03c6afce633d102f5b499aed25622b9bfd31bdd2c98f0717e95b'
        'dd1153903badbb9c2401c583a983ce5a413da2afffa6dd3ef6e839933a1c994518d5bfbcaf6800496e0d40785a4e7eb0770c8a739fe231ad3085c541bcb3f2b2'
        '09f674b2bd55d40df072b70598b78d6a4e57f80a974f99d39b9cd95e0e20cd5698b9b48671b5cb85fcda780d4badc84c8caa5104d2a5c5f85b37841109101701'
        'f9ee14546802eb180a650d91cbf7bcaa046afe80a4ac07624a6d2c186db956d9b055c21dd05987b5ad39be205255142c11f73d39fe6f9c7a3d9553f8ac8ad221'
        '0d4101e8d55b853613ddf53a4f258beda23c89bb2beb2cede6be7ecb1a35be1a81604363e2367d06e6bcd64ba4424eb7d2766c6468ebb9bb75d06ac2b40edbeb'
        '1b0156a4fe7eddcfa549dbb56f892c181fd86ef5897bbf4f81ed1ea68f7bff6e77602083bd2792fc57f790b35a8020c0879695b1e6b1be02d3233fb6f781dc4a'
        'd7059792166bd0d1fce8f494d869b13e95aefd31af8d626651f5087e87f9c728655d1fbffbc8b6c2e1ee5d9e96f2a3fafadf7a3e06c28bdbfd266319c32c7704'
        'a8234f542c2324ad698443e3decf7b6eacf3cb420b7aded787f102a8d32b64c2a8d45ea58e37a5e3b6f2f060f0cccd63d3a182065f57c606006d0ff8c7f6bb05'
        '800b26c2a9e0ab03c5549f631a52294c6b78293b4d3ddc31267bac04897268383bbc644f1f782cda6ee97ee86e179c3a0658d3574d7020207e18ba97e14707e2')

create_links() {
    # create soname links
    find ""$pkgdir"" -type f -name '*.so*' ! -path '*xorg/*' -print0 | while read -d $'\0' _lib; do
        _soname=$(dirname ""${_lib}"")/$(readelf -d ""${_lib}"" | grep -Po 'SONAME.*: \[\K[^]]*' || true)
        _base=$(echo ${_soname} | sed -r 's/(.*)\.so.*/\1.so/')
        [[ -e ""${_soname}"" ]] || ln -s $(basename ""${_lib}"") ""${_soname}""
        [[ -e ""${_base}"" ]] || ln -s $(basename ""${_soname}"") ""${_base}""
    done
}

prepare() {
    sh ""${_pkg}.run"" --extract-only
    cd ""${_pkg}""
    bsdtar -xf nvidia-persistenced-init.tar.bz2

    sed -i 's/__NV_VK_ICD__/libGLX_nvidia.so.0/' nvidia_icd.json.template

    # Restore phys_to_dma support (still needed for 390.138)
    # From loqs via https://bugs.archlinux.org/task/58074
    patch -Np1 -i ../kernel-4.16+-memory-encryption.patch

    # From Joan Bruguera via Ike Devolder
    patch -Np1 -i ../kernel-6.2.patch

    # From Ike Devolder
    patch -Np1 -i ../kernel-6.3.patch

    # From Joan Bruguera via duht
    patch -Np1 -i ../kernel-6.4.patch

    # From Joan Bruguera via Witscher
    patch -Np1 -i ../kernel-6.5.patch

    # From canolucas
    patch -Np1 -i ../kernel-6.6.patch

    # From Joan Bruguera
    patch -Np1 -i ../kernel-6.8.patch

    patch -Np1 -i ../gcc14.patch

    cd kernel

    sed -i ""s/__VERSION_STRING/${pkgver}/"" dkms.conf
    sed -i 's/__JOBS/`nproc`/' dkms.conf
    sed -i 's/__DKMS_MODULES//' dkms.conf
    sed -i '$iBUILT_MODULE_NAME[0]=""nvidia""\
DEST_MODULE_LOCATION[0]=""/kernel/drivers/video""\
BUILT_MODULE_NAME[1]=""nvidia-uvm""\
DEST_MODULE_LOCATION[1]=""/kernel/drivers/video""\
BUILT_MODULE_NAME[2]=""nvidia-modeset""\
DEST_MODULE_LOCATION[2]=""/kernel/drivers/video""\
BUILT_MODULE_NAME[3]=""nvidia-drm""\
DEST_MODULE_LOCATION[3]=""/kernel/drivers/video""' dkms.conf

    # Gift for linux-rt guys
    sed -i 's/NV_EXCLUDE_BUILD_MODULES/IGNORE_PREEMPT_RT_PRESENCE=1 NV_EXCLUDE_BUILD_MODULES/' dkms.conf
}

package_opencl-nvidia-390xx() {
    pkgdesc=""OpenCL implemention for NVIDIA""
    depends=('zlib')
    optdepends=('opencl-headers: headers necessary for OpenCL development')
    provides=('opencl-driver' 'opencl-nvidia')
    conflicts=('opencl-nvidia')
    cd ""${_pkg}""

    # OpenCL
    install -Dm644 nvidia.icd ""${pkgdir}/etc/OpenCL/vendors/nvidia.icd""
    install -Dm755 ""libnvidia-compiler.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-compiler.so.${pkgver}""
    install -Dm755 ""libnvidia-opencl.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-opencl.so.${pkgver}""

    create_links

    mkdir -p ""${pkgdir}/usr/share/licenses""
    ln -s nvidia-utils ""${pkgdir}/usr/share/licenses/opencl-nvidia""
}

package_nvidia-390xx-dkms() {
    pkgdesc=""NVIDIA drivers - module sources""
    depends=('dkms' ""nvidia-390xx-utils=$pkgver"" 'libglvnd')
    provides=('NVIDIA-MODULE')

    cd ${_pkg}

    install -dm 755 ""${pkgdir}""/usr/src
    cp -dr --no-preserve='ownership' kernel ""${pkgdir}/usr/src/nvidia-${pkgver}""

    install -Dt ""${pkgdir}/usr/share/licenses/${pkgname}"" -m644 ""${srcdir}/${_pkg}/LICENSE""
}

package_nvidia-390xx-utils() {
    pkgdesc=""NVIDIA drivers utilities""
    depends=('xorg-server' 'libglvnd' 'egl-wayland')
    optdepends=('nvidia-390xx-settings: configuration tool'
                'xorg-server-devel: nvidia-xconfig'
                'opencl-nvidia-390xx: OpenCL support')
    conflicts=('nvidia-libgl' 'nvidia-utils' 'nvidia-390xx-libgl')
    provides=('vulkan-driver' 'opengl-driver' 'nvidia-libgl' 'nvidia-utils' 'nvidia-390xx-libgl')
    install=""${pkgname}.install""

    cd ""${_pkg}""

    # Check http://us.download.nvidia.com/XFree86/Linux-x86_64/${pkgver}/README/installedcomponents.html
    # for hints on what needs to be installed where.

    # X driver
    install -Dm755 nvidia_drv.so ""${pkgdir}/usr/lib/xorg/modules/drivers/nvidia_drv.so""

    # GLX extension module for X
    install -Dm755 ""libglx.so.${pkgver}"" ""${pkgdir}/usr/lib/nvidia/xorg/libglx.so.${pkgver}""
    # Ensure that X finds glx
    ln -s ""libglx.so.${pkgver}"" ""${pkgdir}/usr/lib/nvidia/xorg/libglx.so.1""
    ln -s ""libglx.so.${pkgver}"" ""${pkgdir}/usr/lib/nvidia/xorg/libglx.so""

    install -Dm755 ""libGLX_nvidia.so.${pkgver}"" ""${pkgdir}/usr/lib/libGLX_nvidia.so.${pkgver}""

    # OpenGL libraries
    install -Dm755 ""libEGL_nvidia.so.${pkgver}"" ""${pkgdir}/usr/lib/libEGL_nvidia.so.${pkgver}""
    install -Dm755 ""libGLESv1_CM_nvidia.so.${pkgver}"" ""${pkgdir}/usr/lib/libGLESv1_CM_nvidia.so.${pkgver}""
    install -Dm755 ""libGLESv2_nvidia.so.${pkgver}"" ""${pkgdir}/usr/lib/libGLESv2_nvidia.so.${pkgver}""
    install -Dm644 ""10_nvidia.json"" ""${pkgdir}/usr/share/glvnd/egl_vendor.d/10_nvidia.json""

    # OpenGL core library
    install -Dm755 ""libnvidia-glcore.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-glcore.so.${pkgver}""
    install -Dm755 ""libnvidia-eglcore.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-eglcore.so.${pkgver}""
    install -Dm755 ""libnvidia-glsi.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-glsi.so.${pkgver}""

    # misc
    install -Dm755 ""libnvidia-ifr.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-ifr.so.${pkgver}""
    install -Dm755 ""libnvidia-fbc.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-fbc.so.${pkgver}""
    install -Dm755 ""libnvidia-encode.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-encode.so.${pkgver}""
    install -Dm755 ""libnvidia-cfg.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-cfg.so.${pkgver}""
    install -Dm755 ""libnvidia-ml.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-ml.so.${pkgver}""

    # Vulkan ICD
    install -Dm644 ""nvidia_icd.json.template"" ""${pkgdir}/usr/share/vulkan/icd.d/nvidia_icd.json""

    # VDPAU
    install -Dm755 ""libvdpau_nvidia.so.${pkgver}"" ""${pkgdir}/usr/lib/vdpau/libvdpau_nvidia.so.${pkgver}""

    # nvidia-tls library
    install -Dm755 ""tls/libnvidia-tls.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-tls.so.${pkgver}""

    # CUDA
    install -Dm755 ""libcuda.so.${pkgver}"" ""${pkgdir}/usr/lib/libcuda.so.${pkgver}""
    install -Dm755 ""libnvcuvid.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvcuvid.so.${pkgver}""

    # PTX JIT Compiler (Parallel Thread Execution (PTX) is a pseudo-assembly language for CUDA)
    install -Dm755 ""libnvidia-ptxjitcompiler.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-ptxjitcompiler.so.${pkgver}""

    # Fat (multiarchitecture) binary loader
    install -Dm755 ""libnvidia-fatbinaryloader.so.${pkgver}"" ""${pkgdir}/usr/lib/libnvidia-fatbinaryloader.so.${pkgver}""

    # DEBUG
    install -Dm755 nvidia-debugdump ""${pkgdir}/usr/bin/nvidia-debugdump""

    # nvidia-xconfig
    install -Dm755 nvidia-xconfig ""${pkgdir}/usr/bin/nvidia-xconfig""
    install -Dm644 nvidia-xconfig.1.gz ""${pkgdir}/usr/share/man/man1/nvidia-xconfig.1.gz""

    # nvidia-bug-report
    install -Dm755 nvidia-bug-report.sh ""${pkgdir}/usr/bin/nvidia-bug-report.sh""

    # nvidia-smi
    install -Dm755 nvidia-smi ""${pkgdir}/usr/bin/nvidia-smi""
    install -Dm644 nvidia-smi.1.gz ""${pkgdir}/usr/share/man/man1/nvidia-smi.1.gz""

    # nvidia-cuda-mps
    install -Dm755 nvidia-cuda-mps-server ""${pkgdir}/usr/bin/nvidia-cuda-mps-server""
    install -Dm755 nvidia-cuda-mps-control ""${pkgdir}/usr/bin/nvidia-cuda-mps-control""
    install -Dm644 nvidia-cuda-mps-control.1.gz ""${pkgdir}/usr/share/man/man1/nvidia-cuda-mps-control.1.gz""

    # nvidia-modprobe
    # This should be removed if nvidia fixed their uvm module!
    install -Dm4755 nvidia-modprobe ""${pkgdir}/usr/bin/nvidia-modprobe""
    install -Dm644 nvidia-modprobe.1.gz ""${pkgdir}/usr/share/man/man1/nvidia-modprobe.1.gz""

    # nvidia-persistenced
    install -Dm755 nvidia-persistenced ""${pkgdir}/usr/bin/nvidia-persistenced""
    install -Dm644 nvidia-persistenced.1.gz ""${pkgdir}/usr/share/man/man1/nvidia-persistenced.1.gz""
    install -Dm644 nvidia-persistenced-init/systemd/nvidia-persistenced.service.template ""${pkgdir}/usr/lib/systemd/system/nvidia-persistenced.service""
    sed -i 's/__USER__/nvidia-persistenced/' ""${pkgdir}/usr/lib/systemd/system/nvidia-persistenced.service""

    # application profiles
    install -Dm644 nvidia-application-profiles-${pkgver}-rc ""${pkgdir}/usr/share/nvidia/nvidia-application-profiles-${pkgver}-rc""
    install -Dm644 nvidia-application-profiles-${pkgver}-key-documentation ""${pkgdir}/usr/share/nvidia/nvidia-application-profiles-${pkgver}-key-documentation""

    install -Dm644 LICENSE ""${pkgdir}/usr/share/licenses/nvidia-utils/LICENSE""
    install -Dm644 README.txt ""${pkgdir}/usr/share/doc/nvidia/README""
    install -Dm644 NVIDIA_Changelog ""${pkgdir}/usr/share/doc/nvidia/NVIDIA_Changelog""
    cp -r html ""${pkgdir}/usr/share/doc/nvidia/""
    ln -s nvidia ""${pkgdir}/usr/share/doc/nvidia-utils""

    # distro specific files must be installed in /usr/share/X11/xorg.conf.d
    install -Dm644 ""${srcdir}/nvidia-drm-outputclass.conf"" ""${pkgdir}/usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf""

    install -Dm644 ""${srcdir}/nvidia-390xx-utils.sysusers"" ""${pkgdir}/usr/lib/sysusers.d/$pkgname.conf""

    install -Dm644 ""${srcdir}/nvidia-390xx.rules"" ""$pkgdir""/usr/lib/udev/rules.d/60-nvidia-390xx.rules

    echo ""blacklist nouveau"" | install -Dm644 /dev/stdin ""${pkgdir}/usr/lib/modprobe.d/${pkgname}.conf""
    echo ""nvidia-uvm"" | install -Dm644 /dev/stdin ""${pkgdir}/usr/lib/modules-load.d/${pkgname}.conf""

    create_links
}
"
nQK7YmW9,Firewall,VipComp,Ruby,Monday 13th of May 2024 01:26:49 PM CDT,"/interface list add name=WAN
/interface list member add list=WAN interface=ether1

/ip firewall address-list
add address=ТУТ АДРЕСА list=remote

/ip firewall filter
add action=accept chain=input comment=""allow Winbox"" \
    in-interface-list=WAN src-address-list=remote place-before=4


/ip firewall filter add action=accept chain=input comment=""defconf: accept established,related,untracked"" connection-state=established,related,untracked
/ip firewall filter add action=drop chain=input comment=""defconf: drop invalid"" connection-state=invalid
/ip firewall filter add action=accept chain=input comment=""defconf: accept ICMP"" protocol=icmp
/ip firewall filter add action=accept chain=input comment=""defconf: accept to local loopback (for CAPsMAN)"" dst-address=127.0.0.1
/ip firewall filter add action=drop chain=input comment=""defconf: drop all not coming from LAN"" in-interface-list=WAN
/ip firewall filter add action=accept chain=forward comment=""defconf: accept in ipsec policy"" ipsec-policy=in,ipsec
/ip firewall filter add action=accept chain=forward comment=""defconf: accept out ipsec policy"" ipsec-policy=out,ipsec
/ip firewall filter add action=fasttrack-connection chain=forward comment=""defconf: fasttrack"" connection-state=established,related disabled=yes
/ip firewall filter add action=accept chain=forward comment=""defconf: accept established,related, untracked"" connection-state=established,related,untracked
/ip firewall filter add action=drop chain=forward comment=""defconf: drop invalid"" connection-state=invalid
/ip firewall filter add action=drop chain=forward comment=""defconf: drop all from WAN not DSTNATed"" connection-nat-state=!dstnat connection-state=new in-interface-list=WAN
"
HGZQpY1a,Add widget area to Genesis page template,daymobrew,PHP,Monday 13th of May 2024 12:51:01 PM CDT,"<?php
// In functions.php (or a functional plugin)
add_action( 'genesis_setup', 'dcwd_register_genesis_widget_area' );
function dcwd_register_genesis_widget_area() {
	// Register widget areas.
	genesis_register_sidebar(
	[
		'id'          => 'avijit-footer',
		'name'        => 'Avijit Footer',
		'description' => 'This is the widget area for Avijit.',
	]
	);
}


// In the 'forum' page template
// Customize site footer
add_action( 'genesis_footer', 'leaguewp_custom_footer' );
function leaguewp_custom_footer() { ?>
<div class=""site-footer""><div class=""wrap""><p></p>
<?php
// This is the new code.
genesis_widget_area(
		'avijit-footer',
		[
			'before' => '<div class=""avijit-footer widget-area"">',
			'after'  => '</div>',
		]
	);

?>
</div></div>
<?php
}
"
jtJfak9E,Example database,otkalce,SQL,Monday 13th of May 2024 12:22:12 PM CDT,"USE [master]
GO

CREATE DATABASE [Exercise11]
GO

USE [Exercise11]
GO

CREATE TABLE [dbo].[Artist](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
	CONSTRAINT [PK_Artist] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[Audio](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CreatedAt] [datetime2](7) NOT NULL,
	[Title] [nvarchar](256) NOT NULL,
	[GenreId] [int] NOT NULL,
	[Duration] [int] NOT NULL,
	[Url] [nvarchar](256) NULL,
	[Year] [int] NULL,
	[ArtistId] [int] NOT NULL,
	[DeletedAt] [datetime2](7) NULL,
	CONSTRAINT [PK__Audio__3214EC072AFFAF4D] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[AudioTag](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[AudioId] [int] NOT NULL,
	[TagId] [int] NOT NULL,
	PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[Genre](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
	PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[Tag](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](10) NOT NULL,
	PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[USER](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [nvarchar](50) NOT NULL,
	[PwdHash] [nvarchar](256) NOT NULL,
	[PwdSalt] [nvarchar](256) NOT NULL,
	[FirstName] [nvarchar](256) NOT NULL,
	[LastName] [nvarchar](256) NOT NULL,
	[Email] [nvarchar](256) NOT NULL,
	[Phone] [nvarchar](256) NULL,
	CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[UserAudioPermission](
	[Id] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[AudioId] [int] NOT NULL,
	CONSTRAINT [PK_UserAudioPermission] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

SET IDENTITY_INSERT [dbo].[Artist] ON 
GO
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (1, N'Tina Turner')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (2, N'Van Halen')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (3, N'DJ Snake')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (4, N'Louis Armstrong')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (5, N'Maroon 5')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (6, N'Sia')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (7, N'Editors')
SET IDENTITY_INSERT [dbo].[Artist] OFF
GO

SET IDENTITY_INSERT [dbo].[Audio] ON 
GO
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (2, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'Moves Like Jagger (feat. Christina Aguilera)', 1, 278, N'https://www.youtube.com/watch?v=iEPTlhBmwRg', 2010, 5, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (3, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'The Greatest', 7, 351, N'https://www.youtube.com/watch?v=GKSRyLdjsPA', 2016, 6, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (4, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'All The Kings', 10, 310, N'https://www.youtube.com/watch?v=d2oSgaRb9Bg', 2016, 7, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (8, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'What''s Love Got to Do with It', 3, 226, N'https://www.youtube.com/watch?v=oGpFcHTxjZs', 1984, 1, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (10, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'The Best', 8, 249, N'https://www.youtube.com/watch?v=GC5E8ie2pdM', 1989, 1, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (11, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'Jump', 11, 242, N'https://www.youtube.com/watch?v=SwYN7mTi6HM', 1984, 2, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (12, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'Lean On', 5, 178, N'https://www.youtube.com/watch?v=YqeW9_5kURI', 2015, 3, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (13, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'What a Wonderful World', 4, 138, N'https://www.youtube.com/watch?v=rBrd_3VMC3c', 1967, 4, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (14, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'We Have All The Time In The World', 4, 194, N'https://www.youtube.com/watch?v=RMxRDTfzgpU', 1969, 4, NULL)
SET IDENTITY_INSERT [dbo].[Audio] OFF
GO

SET IDENTITY_INSERT [dbo].[AudioTag] ON 
GO
INSERT [dbo].[AudioTag] ([Id], [AudioId], [TagId]) VALUES (1, 3, 12)
GO
SET IDENTITY_INSERT [dbo].[AudioTag] OFF
GO

SET IDENTITY_INSERT [dbo].[Genre] ON 
GO
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (1, N'Pop')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (2, N'Hip-hop')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (3, N'Rock')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (4, N'Jazz')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (5, N'Dance')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (6, N'Dubstep')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (7, N'Electro')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (8, N'R&B')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (9, N'Country')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (10, N'Indie')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (11, N'Pop-rock')
GO
SET IDENTITY_INSERT [dbo].[Genre] OFF

SET IDENTITY_INSERT [dbo].[Tag] ON 
GO
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (1, N'listening')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (2, N'radio')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (3, N'music')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (4, N'event')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (8, N'beat')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (9, N'producer')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (10, N'art')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (11, N'style')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (12, N'nowplaying')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (13, N'video')
GO
SET IDENTITY_INSERT [dbo].[Tag] OFF
GO

ALTER TABLE [dbo].[Audio]  WITH CHECK ADD  CONSTRAINT [FK_Audio_Artist] FOREIGN KEY([ArtistId])
REFERENCES [dbo].[Artist] ([Id])
GO
ALTER TABLE [dbo].[Audio] CHECK CONSTRAINT [FK_Audio_Artist]
GO
ALTER TABLE [dbo].[Audio]  WITH CHECK ADD  CONSTRAINT [FK_Audio_Genre] FOREIGN KEY([GenreId])
REFERENCES [dbo].[Genre] ([Id])
GO
ALTER TABLE [dbo].[Audio] CHECK CONSTRAINT [FK_Audio_Genre]
GO
ALTER TABLE [dbo].[AudioTag]  WITH CHECK ADD  CONSTRAINT [FK_AudioTag_Audio] FOREIGN KEY([AudioId])
REFERENCES [dbo].[Audio] ([Id])
GO
ALTER TABLE [dbo].[AudioTag] CHECK CONSTRAINT [FK_AudioTag_Audio]
GO
ALTER TABLE [dbo].[AudioTag]  WITH CHECK ADD  CONSTRAINT [FK_AudioTag_Tag] FOREIGN KEY([TagId])
REFERENCES [dbo].[Tag] ([Id])
GO
ALTER TABLE [dbo].[AudioTag] CHECK CONSTRAINT [FK_AudioTag_Tag]
GO
ALTER TABLE [dbo].[UserAudioPermission]  WITH CHECK ADD  CONSTRAINT [FK_UserAudioPermission_Audio] FOREIGN KEY([AudioId])
REFERENCES [dbo].[Audio] ([Id])
GO
ALTER TABLE [dbo].[UserAudioPermission] CHECK CONSTRAINT [FK_UserAudioPermission_Audio]
GO
ALTER TABLE [dbo].[UserAudioPermission]  WITH CHECK ADD  CONSTRAINT [FK_UserAudioPermission_User] FOREIGN KEY([UserId])
REFERENCES [dbo].[USER] ([Id])
GO
ALTER TABLE [dbo].[UserAudioPermission] CHECK CONSTRAINT [FK_UserAudioPermission_User]
GO
"
SmkyYpqK,stfo comp dont use reach,jisdfhjdsgf,Lua,Monday 13th of May 2024 10:59:39 AM CDT,"-- [[  Reacher MODIFIED v2.0.1 ]]
--This version was modified by LiteralIyMatt (m.#0115)
--Designed for Steal Time From Others & Be The Best by Detourious
--Game can be found at: https://www.roblox.com/games/6361937392/steal-time-from-others-be-the-best
--================================WARNING================================
--THIS SCRIPT IS DESIGNED FOR A VERY NICHE TYPE OF SWORD, THIS WILL CAUSE YOU TO TP AROUND PLAYERS ON MOST SWORDS.
--USE AT YOUR OWN RISK.
--================================WARNING================================
local KEY = Enum.KeyCode
local Settings = {
	Keybinds = {
		[""INCREASE""] = KEY[""Q""];
		[""DECREASE""] = KEY[""E""];
		[""TOGGLE_REACH""] = KEY[""R""];
		[""TOGGLE_VISUALIZER""] = KEY[""T""];
		[""TOGGLE_DAMAGE_AMP""] = KEY[""X""];
		[""CHECK_SETTINGS""] = KEY[""C""];
		[""TOGGLE_NOTIFICATIONS""] = KEY[""V""];
		[""TOGGLE_AUTO_CLICKER""] = KEY[""B""];
		[""KILL_SCRIPT""] = KEY[""Z""];
	};
	Values = { -- Set these to what you want the default values for each to be upon execution
		[""distance""] = 3.5; 
		[""enabled""] = true;
		[""notifications""] = true;
		[""visualizer""] = true;
		[""damage_amp""] = true;
		[""auto_clicking""] = true;
		[""cooldown""] = false;
		[""killed""] = true;
	};
	DISTANCE_INCREMENT = 0.5; -- How much will be added/removed upon distance increase/decrease
	COOLDOWN = 0.05; -- How long the cooldown is on regular FTI (NOT FOR DAMAGE AMP)
}


-- Services
local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")
local StarterGui = game:GetService(""StarterGui"")

-- Globals
local F = string.format
local Upper = string.upper

-- Statics
local SPEED_COLOR = 1
local WHITELIST = {""Head"", ""Torso"", ""Right Arm"", ""Left Arm"", ""Right Leg"", ""Left Leg"", }
 
-- Non statics
local connections = {}
local instances = {}

-- Instances
local localPlayer = Players.LocalPlayer

local Notify = function(x)
	if Settings.Values.notifications == true then
		StarterGui:SetCore(""SendNotification"", {
			Title = "" Reach v3.0"";
			Text = x;
		})
	end
end

connections.InputBegan = UserInputService.InputBegan:Connect(function(INPUT, GPE)
	if GPE then return end
	local KEY = INPUT.KeyCode
	if KEY == Settings.Keybinds.INCREASE then
		Settings.Values.distance = Settings.Values.distance + Settings.DISTANCE_INCREMENT
		Notify(F(""Distance: %s"", Settings.Values.distance))
	elseif KEY == Settings.Keybinds.DECREASE then
		Settings.Values.distance = Settings.Values.distance - Settings.DISTANCE_INCREMENT
		Notify(F(""Distance: %s"", Settings.Values.distance))
	elseif KEY == Settings.Keybinds.TOGGLE_REACH then
		Settings.Values.enabled = not Settings.Values.enabled
		Notify(F(""Reach: %s"", tostring(Settings.Values.enabled)))
	elseif KEY == Settings.Keybinds.TOGGLE_DAMAGE_AMP then
		Settings.Values.damage_amp = not Settings.Values.damage_amp
		Notify(F(""Damage Amp: %s"", tostring(Settings.Values.damage_amp)))
	elseif KEY == Settings.Keybinds.TOGGLE_VISUALIZER then
		Settings.Values.visualizer = not Settings.Values.visualizer
		Notify(F(""Visualizer: %s"", tostring(Settings.Values.visualizer)))
	elseif KEY == Settings.Keybinds.TOGGLE_NOTIFICATIONS then
		Settings.Values.notifications = not Settings.Values.notifications
	elseif KEY == Settings.Keybinds.CHECK_SETTINGS then
		local str = F(""Distance: %s\nDamage Amp: %s\nCooldown: %s"", Settings.Values.distance, tostring(Settings.Values.damage_amp), tostring(Settings.Values.cooldown))
		Notify(str)
	elseif KEY == Settings.Keybinds.TOGGLE_AUTO_CLICKER then
		Settings.Values.auto_clicking = not Settings.Values.auto_clicking
		Notify(F(""Auto Clicking: %s"", tostring(Settings.Values.auto_clicking)))
	elseif KEY == Settings.Keybinds.KILL_SCRIPT then
		Settings.Values.killed = true
		Notify(""DISABLED"")
		for _, connection in pairs(connections) do
			pcall(function()
				connection:Disconnect()
			end)
		end
		for _, part in pairs(instances) do
			part:Destroy()
		end
	end
end)

local FireFakes = function(handle, part)
	local region = Region3.new(handle.Position + Vector3.new(-1, -1, -1), handle.Position + Vector3.new(1, 1, 1))
	local objects = game:GetService(""Workspace""):FindPartsInRegion3(region)
	for i, instance in pairs(objects) do
		if instance:IsA(""Part"") and instance:FindFirstChild(""TouchTransmitter"") and instance.Parent.ClassName ~= ""Tool"" then
			coroutine.wrap(function()
				firetouchinterest(part, handle ,0)
				task.wait()
				firetouchinterest(part, handle, 1)
			end)()
		end
	end
end

local FireTouchInterest = function(handle, part)
	coroutine.wrap(FireFakes)(handle, part)
	coroutine.wrap(function()
		firetouchinterest(part, handle ,0)
		task.wait()
		firetouchinterest(part, handle, 1)
	end)()
end

local BindVisualizer = function(obj)
	while obj.Parent == game:GetService(""CoreGui"") do
		pcall(function()
			local selectionBox = instances[""visualizer""]:FindFirstChildOfClass(""SelectionBox"")
			for i = 0, 1, 0.001 * SPEED_COLOR do
				selectionBox.Color3 = Color3.fromHSV(i, 1, 1)
				selectionBox.SurfaceColor3 = Color3.fromHSV(i, 1, 1)
				task.wait()
			end
		end)

		if Settings.Values.killed == true then
			break
		end
		task.wait()
	end
end

connections.Heartbeat = RunService.Heartbeat:Connect(function()
	local character = localPlayer.Character
	
	if not character then return end
	
	local sword = character:FindFirstChildOfClass(""Tool"")
	local humanoidRootPart = character:FindFirstChild(""HumanoidRootPart"")
	local humanoid = character:FindFirstChild(""Humanoid"")
	if Settings.Values.enabled and sword and sword.Handle and humanoidRootPart and humanoid then
		local handle = sword.Handle
		
		if Settings.Values.auto_clicking then
			sword:Activate()
		end
		
		if not instances[""visualizer""] and Settings.Values.visualizer == true then
			local part = Instance.new(""Part"")
			part.Name = ""_""
			part.Anchored = false
			part.CanCollide = false
			part.Massless = true
			
			local selectionBox = Instance.new(""SelectionBox"", part)
			selectionBox.Name = ""_""
			selectionBox.Adornee = part
			selectionBox.LineThickness = 0.015
			selectionBox.SurfaceTransparency = 0.5
			selectionBox.Transparency = 0
			
			part.Parent = game:GetService(""CoreGui"")
			instances[""visualizer""] = part
			BindVisualizer(part)
		elseif instances[""visualizer""] and Settings.Values.visualizer == false then
			instances[""visualizer""]:Destroy()
			instances[""visualizer""] = nil
		end
		
		if instances[""visualizer""] then
			instances[""visualizer""].Size = Vector3.new(Settings.Values.distance * 1.65, 0.55, Settings.Values.distance * 1.65)
			instances[""visualizer""].CFrame = humanoidRootPart.CFrame - (humanoidRootPart.CFrame.UpVector * 2.75) + (humanoidRootPart.CFrame.RightVector * 1.5) + (humanoidRootPart.CFrame.LookVector * 1.5)
		end
		
		for i, player in pairs(Players:GetPlayers()) do
			if player ~= localPlayer and player.Character then
				local targetCharacter = player.Character
				local targetRoot = targetCharacter:FindFirstChild(""HumanoidRootPart"")
				local targetHumanoid = targetCharacter:FindFirstChild(""Humanoid"")
				local targetPart
				
				local chosenIndex = math.random(1, #WHITELIST)
				local last
				for i = 1, #WHITELIST do
					if i == chosenIndex and targetCharacter:FindFirstChild(WHITELIST[i]) then
						targetPart = targetCharacter:FindFirstChild(WHITELIST[i])
						if targetPart and targetPart.Transparency <= 0.8 then
							break
						else
							last = nil
							break
						end
					end
					last = i
				end
				if not targetRoot or not targetHumanoid or last == nil then return end
				
				if (handle.Position - targetRoot.Position).Magnitude <= Settings.Values.distance then
					if Settings.Values.damage_amp == true then
						for _,v in pairs({""Right Arm"", ""Right Arm"", ""Left Arm"", ""Torso""}) do
							local part = targetCharacter:FindFirstChild(v)
							if part and part.Transparency <= 0.8 and targetHumanoid.Health > 0 then
								for i = 1, math.random(1, 2) do
									FireTouchInterest(part, handle)
								end
							else
								break
							end
						end
					elseif Settings.Values.cooldown == false then
						Settings.Values.cooldown = true
						FireTouchInterest(targetPart, handle)
						task.wait(Settings.COOLDOWN)
						Settings.Values.cooldown = false
					end
				end
			end
		end
	else -- GC instances since everythings disabled
		for i,v in pairs(instances) do
			v:Destroy()
			instances[i] = nil
		end
	end
end)

_G.HeadSize = 25
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 1
v.Character.HumanoidRootPart.BrickColor = BrickColor.new(""Really blue"")
v.Character.HumanoidRootPart.Material = ""Neon""
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)"
sL8TX6EE,very good minimax pomoci '.' a korektni result a dpeth,max2201111,Python,Monday 13th of May 2024 10:44:19 AM CDT,"import chess
from itertools import permutations
from functools import lru_cache

def generate_chess_positions(pieces):
    all_squares = [chess.SQUARES[i] for i in range(64)]
    unique_fens = set()
    for squares in permutations(all_squares, len(pieces)):
        board = chess.Board(None)
        board.clear_board()
        for piece, square in zip(pieces, squares):
            board.set_piece_at(square, chess.Piece.from_symbol(piece))
        if board.is_valid():
            unique_fens.add(board.fen())
    return unique_fens

def evaluate_board(board, depth):
    if board.is_checkmate():
        return 1000 - depth if not board.turn else -1000 + depth
    elif board.is_stalemate() or board.is_insufficient_material():
        return 0
    return 4  # Basic heuristic for non-terminal positions

@lru_cache(maxsize=None)
def minimax(fen, depth, alpha, beta, maximizing_player, max_depth):
    board = chess.Board(fen)
    if depth == max_depth or board.is_game_over():
        return evaluate_board(board, depth)

    best_eval = float('-inf') if maximizing_player else float('inf')
    for move in board.legal_moves:
        board.push(move)
        eval = minimax(board.fen(), depth + 1, alpha, beta, not maximizing_player, max_depth)
        board.pop()

        if maximizing_player:
            best_eval = max(best_eval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        else:
            best_eval = min(best_eval, eval)
            beta = min(beta, eval)
            if beta <= alpha:
                break

    return best_eval

# Hlavní část kódu
initial_pieces = ['K', 'k', 'Q']
unique_positions = generate_chess_positions(initial_pieces)
evaluations = []

print(""Počet unikátních pozic:"", len(unique_positions))

# Omezení na prvních 10000 pozic
for fen in list(unique_positions)[:10000]:
    print(""."", end='')  # Tisk teček pro sledování průběhu
    board = chess.Board(fen)
    max_depth = 8  # Limit depth for demonstration purposes
    evaluation = minimax(fen, 0, float('-inf'), float('inf'), board.turn == chess.WHITE, max_depth)
    evaluations.append((fen, evaluation))

# Print results
for position, eval in evaluations:
    if eval != 0 and eval != 4:
        print(f""FEN: {position}, Evaluation: {eval}"")
"
9XLmcwzA,ДЗ Локальные максимумы,TeT91,C#,Monday 13th of May 2024 10:23:09 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int minValue = 0;
            int maxValue = 10;

            int arrayLenght = 30;
            int[] numbers = new int[arrayLenght];

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(minValue, maxValue + 1);
                Console.Write(numbers[i] + "" "");
            }

            Console.WriteLine();

            if (numbers[0] > numbers[1])
            {
                Console.WriteLine(""Локальный максимум "" + numbers[0]);
            }

            for (int i = 1; i < numbers.Length; i++)
            {
                    if (numbers[i] > numbers[i + 1] && numbers[i] > numbers[i - 1])
                    {
                        Console.WriteLine(""Локальный максимум "" + numbers[i]);
                    }
            }

            if (numbers[numbers.Length - 1] > numbers[(numbers.Length - 1) - 1])
            {
                Console.WriteLine(""Локальный максимум "" + numbers[numbers.Length - 1]);
            }

            Console.ReadLine();
        }
    }
}"
5dj7ycSB,Untitled,dereksir,Rust,Monday 13th of May 2024 10:05:47 AM CDT,"// import necessary crates
extern crate html5ever;
extern crate reqwest;

use std::default::Default;

// import necessary modules from html5ever
use html5ever::tendril::*;
use html5ever::tokenizer::BufferQueue;
use html5ever::tokenizer::{TagToken, StartTag, EndTag};
use html5ever::tokenizer::{Token, TokenSink, TokenSinkResult, Tokenizer, TokenizerOpts,};
use html5ever::tokenizer::CharacterTokens;

// define a struct to hold the state of the parser
struct TokenPrinter {
    // define flags to track token location. 
    in_price_tag: bool,  
    in_span_tag: bool,   
    in_bdi_tag: bool,    
    price: String,       // string to hold the price
}

// implement the TokenSink trait for TokenPrinter
impl TokenSink for TokenPrinter {
    type Handle = ();

    // define function to process each token in the HTML document
    fn process_token(&mut self, token: Token, _line_number: u64) -> TokenSinkResult<()> {
        match token {
            TagToken(tag) => {
                // if the token is a start tag...
                if tag.kind == StartTag {
                    // ...and the tag is a <p> tag with class ""price""...
                    if tag.name.to_string() == ""p"" {
                        for attr in tag.attrs {
                            if attr.name.local.to_string() == ""class"" && attr.value.to_string() == ""price"" {
                                // ...set the in_price_tag flag to true
                                self.in_price_tag = true;
                            }
                        }
                    // if we're inside a <p class=""price""> tag and the tag is a <span> tag...
                    } else if self.in_price_tag && tag.name.to_string() == ""span"" {
                        // ...set the in_span_tag flag to true
                        self.in_span_tag = true;
                    // if we're inside a <p class=""price""> tag and the tag is a <bdi> tag...
                    } else if self.in_price_tag && tag.name.to_string() == ""bdi"" {
                        // ...set the in_bdi_tag flag to true
                        self.in_bdi_tag = true;
                    }
                // if the token is an end tag...
                } else if tag.kind == EndTag {
                    // ...and the tag is a <p>, <span>, or <bdi> tag...
                    if tag.name.to_string() == ""p"" {
                        // ...set the corresponding flag to false
                        self.in_price_tag = false;
                    } else if tag.name.to_string() == ""span"" {
                        self.in_span_tag = false;
                    } else if tag.name.to_string() == ""bdi"" {
                        self.in_bdi_tag = false;
                    }
                }
            },
            // if the token is a character token (i.e., text)...
            CharacterTokens(s) => {
                // ...and we're inside a <p class=""price""> tag...
                if self.in_price_tag {
                    // ...and we're inside a <span> tag...
                    if self.in_span_tag {
                        // ...add the text to the price string
                        self.price = format!(""price: {}"", s);
                    // ...and we're inside a <bdi> tag...
                    } else if self.in_bdi_tag {
                        // ...append the text to the price string and print it
                        self.price = format!(""{}{}"", self.price, s);
                        println!(""{}"", self.price);
                        // clear the price string for the next price
                        self.price.clear();
                    }
                }
            },         
            // ignore all other tokens
            _ => {},
        }
        // continue processing tokens
        TokenSinkResult::Continue
    }    
}

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    // initialize the TokenPrinter
    let sink = TokenPrinter { in_price_tag: false, in_span_tag: false, in_bdi_tag: false, price: String::new() };

    // retrieve HTML content from target website
    //... let resp = reqwest::get(""https://www.scrapingcourse.com/ecommerce/product/adrienne-trek-jacket/"").await?.text().await?;

    // convert the HTML content to a ByteTendril
    let chunk = ByteTendril::from(resp.as_bytes());
    let mut input = BufferQueue::default();
    input.push_back(chunk.try_reinterpret::<fmt::UTF8>().unwrap());

    // initialize the Tokenizer with the TokenPrinter
    let mut tok = Tokenizer::new(
        sink,
        TokenizerOpts::default(),
    );
    // feed the HTML content to the Tokenizer
    let _ = tok.feed(&mut input);
    assert!(input.is_empty());
    // end tokenization
    tok.end();

    Ok(())
}"
dUcMR2ic,Untitled,MeehoweCK,C++,Monday 13th of May 2024 09:58:15 AM CDT,"#include <iostream>
#include <iterator>
#include <memory>
#include <stdexcept>

template <typename T>
class MyList {
    friend std::ostream& operator<<(std::ostream& os, const MyList& list) {
        if (list.list_size == 0) {
            os << ""The list is empty\n"";
        }
        else {
            os << ""List elements:\n"";
            for (auto i : list) {
                os << '\t' << i << std::endl;
            }
        }
        return os;
    }
private:
    struct Node {
        T data;
        std::unique_ptr<Node> next;
        Node(T data) : data{ data }, next{ nullptr } {}
    };

    std::unique_ptr<Node> head;
    size_t list_size{ 0 };

public:
    MyList() : head{ nullptr } {}
    ~MyList() { clear(); }

    void push_front(const T& value) {
        std::unique_ptr<Node> newNode{ std::make_unique<Node>(value) };
        newNode->next = std::move(head);
        head = std::move(newNode);
        ++list_size;
    }

    T pop_front() {
        if (head == nullptr) {
            throw std::out_of_range(""Cannot pop from an empty list"");
        }
        T data{ std::move(head->data) };
        head = std::move(head->next);
        --list_size;
        return data;
    }

    T& front() {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    const T& front() const {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    void clear() {
        while (head != nullptr) {
            head = std::move(head->next);
            --list_size;
        }
    }

    size_t size() const { return list_size; }

    void remove(const T& value) {
        while (head != nullptr && head->data == value) {
            head = std::move(head->next);
            --list_size;
        }

        Node* current{ head.get() };
        while (current && current->next) {
            if (current->next->data == value) {
                current->next = std::move(current->next->next);
                --list_size;
            }
            else {
                current = current->next.get();
            }
        }
    }

    class ConstIterator {
    private:
        const Node* current;

    public:
        using difference_type = std::ptrdiff_t;
        using value_type = T;
        using pointer = const T*;
        using reference = const T&;
        using iterator_category = std::forward_iterator_tag;

        ConstIterator(const Node* node) : current{ node } {}

        ConstIterator& operator++() {
            if (current) {
                current = current->next.get();
            }
            return *this;
        }

        ConstIterator operator++(int) {
            ConstIterator tmp = *this;
            ++(*this);
            return tmp;
        }

        reference operator*() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return current->data;
        }

        pointer operator->() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return &current->data;
        }

        bool operator!=(const ConstIterator& other) const {
            return current != other.current;
        }

        bool operator==(const ConstIterator& other) const {
            return current == other.current;
        }
    };

    ConstIterator begin() const {
        return ConstIterator(head.get());
    }

    ConstIterator end() const {
        return ConstIterator(nullptr);
    }

    // Iterator
    class Iterator {
        Node* current;

    public:
        using difference_type = std::ptrdiff_t;
        using value_type = T;
        using pointer = T*;
        using reference = T&;
        using iterator_category = std::forward_iterator_tag;

        Iterator(Node* node) : current{ node } {}

        Iterator& operator++() {
            if (current) {
                current = current->next.get();
            }
            return *this;
        }

        Iterator operator++(int) {
            Iterator tmp = *this;
            ++(*this);
            return tmp;
        }

        reference operator*() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return current->data;
        }

        pointer operator->() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return &current->data;
        }

        bool operator!=(const Iterator& other) const {
            return current != other.current;
        }

        bool operator==(const Iterator& other) const {
            return current == other.current;
        }
    };

    Iterator begin() {
        return Iterator(head.get());
    }

    Iterator end() {
        return Iterator(nullptr);
    }
};"
6e9eYjEW,multi_queue,naren_paste,Python,Monday 13th of May 2024 09:42:46 AM CDT,"import queue
import multiprocessing

def producer(q):
    for i in range(10):
        q.put(i)

def consume(q):
    while True:
        item = q.get()
        if item is None:
            break
        print(item)

if __name__ == '__main__':
    queue = queue.Queue()  # Using queue.Queue instead of multiprocessing.Queue
    m1 = multiprocessing.Process(target=producer, args=(queue,))
    m2 = multiprocessing.Process(target=consume, args=(queue,))
    m1.start()
    m2.start()
    queue.put(""sudh"")
    m1.join()
    m2.join()
"
xy8SxHrH,llama 3 70B sample,marcusziade,Swift,Monday 13th of May 2024 09:16:30 AM CDT,"
import UIKit
import AVFoundation

class VideoPlayerViewController: UIViewController {
    // Video player view
    let playerView = UIView()

    // AVPlayer instance
    var player: AVPlayer?

    // Video URL
    var videoURL: URL?

    // Buttons and controls
    let playPauseButton = UIButton(type: .system)
    let stopButton = UIButton(type: .system)
    let rewindButton = UIButton(type: .system)
    let fastForwardButton = UIButton(type: .system)
    let volumeSlider = UISlider()
    let timeLabel = UILabel()
    let currentTimeLabel = UILabel()

    // Video playback state
    var isPlaying = false

    override func viewDidLoad() {
        super.viewDidLoad()

        // Set up player view
        playerView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(playerView)
        NSLayoutConstraint.activate([
            playerView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            playerView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            playerView.topAnchor.constraint(equalTo: view.topAnchor),
            playerView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])

        // Set up buttons and controls
        playPauseButton.setTitle(""Play"", for: .normal)
        playPauseButton.addTarget(self, action: #selector(playPauseButtonTapped), for: .touchUpInside)
        stopButton.setTitle(""Stop"", for: .normal)
        stopButton.addTarget(self, action: #selector(stopButtonTapped), for: .touchUpInside)
        rewindButton.setTitle(""Rewind"", for: .normal)
        rewindButton.addTarget(self, action: #selector(rewindButtonTapped), for: .touchUpInside)
        fastForwardButton.setTitle(""Fast Forward"", for: .normal)
        fastForwardButton.addTarget(self, action: #selector(fastForwardButtonTapped), for:
.touchUpInside)

        volumeSlider.minimumValue = 0
        volumeSlider.maximumValue = 1
        volumeSlider.value = 0.5
        volumeSlider.addTarget(self, action: #selector(volumeSliderValueChanged), for: .valueChanged)

        timeLabel.text = ""00:00""
        currentTimeLabel.text = ""00:00""

        // Add buttons and controls to the view
        let buttonStackView = UIStackView(arrangedSubviews: [playPauseButton, stopButton, rewindButton,
fastForwardButton])
        buttonStackView.axis = .horizontal
        buttonStackView.distribution = .fillEqually
        buttonStackView.spacing = 10

        let controlStackView = UIStackView(arrangedSubviews: [volumeSlider, timeLabel,
currentTimeLabel])
        controlStackView.axis = .vertical
        controlStackView.distribution = .fillProportionally
        controlStackView.spacing = 10

        view.addSubview(buttonStackView)
        view.addSubview(controlStackView)

        NSLayoutConstraint.activate([
            buttonStackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            buttonStackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            buttonStackView.topAnchor.constraint(equalTo: playerView.bottomAnchor, constant: 20),

            controlStackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            controlStackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            controlStackView.topAnchor.constraint(equalTo: buttonStackView.bottomAnchor, constant: 10)
        ])
    }

    // Play/pause button tapped
    @objc func playPauseButtonTapped() {
        if isPlaying {
            player?.pause()
            playPauseButton.setTitle(""Play"", for: .normal)
            isPlaying = false
        } else {
            player?.play()
            playPauseButton.setTitle(""Pause"", for: .normal)
            isPlaying = true
        }
    }

    // Stop button tapped
    @objc func stopButtonTapped() {
        player?.stop()
        player?.seek(to: CMTime.zero)
        currentTimeLabel.text = ""00:00""
        isPlaying = false
    }

    // Rewind button tapped
    @objc func rewindButtonTapped() {
        guard let player = player else { return }
        let currentTime = player.currentTime()
        let newTime = currentTime - 10
        if newTime < 0 {
            player.seek(to: CMTime.zero)
        } else {
            player.seek(to: newTime)
        }
    }

    // Fast forward button tapped
    @objc func fastForwardButtonTapped() {
        guard let player = player else { return }
        let currentTime = player.currentTime()
        let duration = player.currentItem?.duration
        let newTime = min(currentTime + 10, duration)
        player.seek(to: newTime)
    }

    // Volume slider value changed
    @objc func volumeSliderValueChanged() {
        guard let player = player else { return }
        player.volume = volumeSlider.value
    }

    // Set up video playback
    func setupVideoPlayback(url: URL) {
        videoURL = url
        player = AVPlayer(url: videoURL)

        // Create a player layer and add it to the player view
        let playerLayer = AVPlayerLayer(player: player)
        playerLayer.frame = playerView.bounds
        playerView.layer.addSublayer(playerLayer)

        // Add observers for playback state changes
        NotificationCenter.default.addObserver(self, selector: #selector(playbackStateChanged), name:
.AVPlayerItemDidPlayToEndTime, object: player?.currentItem)
    }

    // Playback state changed (e.g. video ended)
    @objc func playbackStateChanged() {
        stopButtonTapped()
    }
}

This `UIViewController` has the following features:

* A `UIView` to display the video
* An `AVPlayer` instance to play the video
* Buttons for playing/pausing, stopping, rewinding, and fast forwarding
* A volume slider to control the audio level
* Labels to display the current time and duration of the video

To use this view controller, simply create an instance of it and call the `setupVideoPlayback` method
with a valid `URL` for the video. For example:
```swift
let videoViewController = VideoPlayerViewController()
videoViewController.setupVideoPlayback(url: URL(string: ""https://example.com/video.mp4"")!)
```
Note that this is just an example implementation, and you may want to customize it to fit your specific
needs (e.g. add error handling, display video thumbnails, etc.)."
e7RsCuKR,Untitled,MeehoweCK,C++,Monday 13th of May 2024 09:11:31 AM CDT,"#include <iostream>
#include <iterator>
#include <memory>
#include <stdexcept>

template <typename T>
class MyList {
    friend std::ostream& operator<<(std::ostream& os, const MyList& list) {
        if (list.list_size == 0) {
            os << ""The list is empty\n"";
        }
        else {
            os << ""List elements:\n"";
            for (auto i : list) {
                os << '\t' << i << std::endl;
            }
        }
        return os;
    }
private:
    struct Node {
        T data;
        std::unique_ptr<Node> next;
        Node(T data) : data{ data }, next{ nullptr } {}
    };

    std::unique_ptr<Node> head;
    size_t list_size{ 0 };

public:
    MyList() : head{ nullptr } {}
    ~MyList() { clear(); }

    void push_front(const T& value) {
        std::unique_ptr<Node> newNode{ std::make_unique<Node>(value) };
        newNode->next = std::move(head);
        head = std::move(newNode);
        ++list_size;
    }

    T pop_front() {
        if (head == nullptr) {
            throw std::out_of_range(""Cannot pop from an empty list"");
        }
        T data{ std::move(head->data) };
        head = std::move(head->next);
        --list_size;
        return data;
    }

    T& front() {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    const T& front() const {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    void clear() {
        while (head != nullptr) {
            head = std::move(head->next);
            --list_size;
        }
    }

    size_t size() const { return list_size; }

    void remove(const T& value) {
        while (head != nullptr && head->data == value) {
            head = std::move(head->next);
            --list_size;
        }

        Node* current{ head.get() };
        while (current && current->next) {
            if (current->next->data == value) {
                current->next = std::move(current->next->next);
                --list_size;
            }
            else {
                current = current->next.get();
            }
        }
    }

    class ConstIterator {
    private:
        const Node* current;

    public:
        using difference_type = std::ptrdiff_t;
        using value_type = T;
        using pointer = const T*;
        using reference = const T&;
        using iterator_category = std::forward_iterator_tag;

        ConstIterator(const Node* node) : current{ node } {}

        ConstIterator& operator++() {
            if (current) {
                current = current->next.get();
            }
            return *this;
        }

        ConstIterator operator++(int) {
            ConstIterator tmp = *this;
            ++(*this);
            return tmp;
        }

        reference operator*() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return current->data;
        }

        pointer operator->() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return &current->data;
        }

        bool operator!=(const ConstIterator& other) const {
            return current != other.current;
        }

        bool operator==(const ConstIterator& other) const {
            return current == other.current;
        }
    };

    ConstIterator begin() const {
        return ConstIterator(head.get());
    }

    ConstIterator end() const {
        return ConstIterator(nullptr);
    }
};"
Z9Ua8HWs,concatenate ranges,ulfben,C++,Monday 13th of May 2024 09:05:46 AM CDT,"#include <vector>
#include <list>
#include <span>
#include <iterator>

template<typename T>
class concat_view {
public:
    using value_type = T;
    using const_pointer = const value_type*;
    using const_reference = const value_type&;

    concat_view(std::initializer_list<std::span<const T>> spans) : spans_(spans) {}

    class iterator {
    public:
        using value_type = T;
        using difference_type = std::ptrdiff_t;
        using pointer = const T*;
        using reference = const T&;
        using iterator_category = std::input_iterator_tag;

        iterator(std::vector<std::span<const T>> const& spans, size_t outer, size_t inner)
            : spans_(spans), outer_(outer), inner_(inner) {
            advance_past_empty_spans();
        }

        reference operator*() const {
            return spans_[outer_][inner_];
        }

        iterator& operator++() {
            ++inner_;
            advance_past_empty_spans();
            return *this;
        }

        bool operator==(const iterator& other) const {
            return outer_ == other.outer_ && inner_ == other.inner_;
        }

        bool operator!=(const iterator& other) const {
            return !(*this == other);
        }

    private:
        std::vector<std::span<const T>> spans_;
        size_t outer_ = 0;
        size_t inner_ = 0;

        void advance_past_empty_spans() {
            while (outer_ < spans_.size() && inner_ == spans_[outer_].size()) {
                ++outer_;
                inner_ = 0;
            }
        }
    };

    iterator begin() const {
        return iterator(spans_, 0, 0);
    }

    iterator end() const {
        return iterator(spans_, spans_.size(), 0);
    }

private:
    std::vector<std::span<const T>> spans_;
};

"
NbP1sbD4,EasyButton Library rev_01,pleasedontcode,Arduino,Monday 13th of May 2024 08:50:44 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Library
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-13 13:49:55

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The device to be made is equipped with 7 LEDs and */
	/* 3 buttons. At startup, all LEDs are off. The first */
	/* button is used to increase the binary number by 1, */
	/* the second to decrease the binary number by 1, and */
	/* the third to display on the serial monitor the */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h> //https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t btn_PushButton_PIN_D2 = 2;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/

// Instance of the button
EasyButton button(btn_PushButton_PIN_D2);

// Callback function to be called when the button is pressed
void onPressed()
{
  Serial.println(""Button pressed"");
}

void setup(void)
{
  // put your setup code here, to run once:
  pinMode(btn_PushButton_PIN_D2, INPUT_PULLUP);

  // Initialize the button
  button.begin();
  // Add the callback function to be called when the button is pressed
  button.onPressed(onPressed);
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  button.read();
}

/* END CODE */"
X96N3q9h,Untitled,dllbridge,C,Monday 13th of May 2024 08:44:37 AM CDT,"


#include <stdio.h>
#include <string.h>
 
char sz[19]=""SONY_Pictures"";

//////////////////////////////////////////////////////////
int main()                                              //
{

    int n = strlen(sz); 
     
    for(int i=0; i < n; i++)
    {
   
        printf(""%s\n"", &sz[i]);
    }
}























   //  printf(""%s\n"",sz);
     //   printf(""%s\n"",&sz[1]);



/*


#include <stdio.h>

char sz[77] = ""SONY_Pictures"";


///////////////////////////////////////////////////////////////
int main() 
{

    
    printf(""%s\n"", sz);
    
    printf(""%s\n"", &sz[1]);   
    printf(""%s\n"", &sz[2]);      
    

	
return 0;
}




*/






















/*
    printf(""%c\n"", *sz   );    
    printf(""%c\n"",  sz[1]);    
    printf(""%c\n"",  sz[2]);
    printf(""%c\n"",  sz[3]);      
    printf(""%d\n"",  sz[4]);  	


*/













/*


#include <stdio.h>

char sz[7] = ""SONY"";


///////////////////////////////////////////////////////////////
int main() 
{

    
    printf(""%d\n"", sz[0]);
    printf(""%d\n"", sz[1]);    
    printf(""%d\n"", sz[2]);
    printf(""%d\n"", sz[3]);      
    printf(""%d\n"", sz[4]);  	
	
return 0;
}



*/



"
rZjA6hQJ,Adopt me Dupe Pets🔥🤫,Bacon_Script,Lua,Monday 13th of May 2024 08:39:31 AM CDT,"loadstring(game:HttpGet('https://pastebin.com/raw/pak6ZxpQ'))()

Copy and paste this to your executor🤫🔥"
VkdN5C3a,Farkle Point Logic,MeckeOfficial,Python,Monday 13th of May 2024 08:28:22 AM CDT,"def calc_points(points):

    result = 0

    score = {
        ""1"":0,
        ""2"":0,
        ""3"":0,
        ""4"":0,
        ""5"":0,
        ""6"":0,
    }

    for p in points:
        score[str(p)] += 1

    a = score[""1""]
    b = score[""2""]
    c = score[""3""]
    d = score[""4""]
    e = score[""5""]
    f = score[""6""]

    if a and b and c and d and e and f == 1:
        result += 1500
        
    elif a and b and c and d and e >= 1:

        if a == 2:
            result += 100
        elif e == 2:
            result += 50
        
        result += 500
    
    elif b and c and d and e and f >= 1:

        if a == 2:
            result += 100
        elif e == 2:
            result += 50
        
        result += 750

    for k in score:
        if score[k] < 3:

            if int(k) == 1:
                result += 100 * score[k]
            elif int(k) == 5:
                result += 50 * score[k]

        if score[k] == 3:
            if int(k) == 1:
                result += 1000
            else:
                result += int(k) * 100

        elif score[k] == 4:
            if int(k) == 1:
                result += 2000
            else:
                result += int(k) * 100 * 2

        elif score[k] == 5:
            if int(k) == 1:
                result += 4000
            else:
                result += int(k) * 100 * 4

        elif score[k] == 6:
            if int(k) == 1:
                result += 8000
            else:
                result += int(k) * 100 * 8

    return result"
puiuQ7XS,GWComboSwitch.js,kura2yamato,JavaScript,Monday 13th of May 2024 08:23:35 AM CDT,"//---------------------------------------------------------
// GWComboSwitch.js 
// Copyright (c) 2024 GBison. All rights reserved.
// Released under the MIT license.
// http://opensource.org/licenses/mit-license.php
//=========================================================

/*:
 * @plugindesc Combo System By Checking the Switch. 
 * @author Gbison 
 * @version 1
 *
 * @param Plugin Version 
 * @desc Version for the Plugins
 *
 * @param Version
 * @type number
 * @default 0 
 * @parent Plugin Version
 *
 * @param Sub Version
 * @type number
 * @range 0,99
 * @desc Variable to Use
 * @default 0 
 * @parent Plugin Version
 *
 * @param Condition 
 * @desc Condition For Action
 *
 * @param Combo Condition
 * @desc Condition For Combo
 * @parent Condition
 *
 * @param Combo Switch
 * @type switch
 * @default 10 
 * @desc Switch to use
 * @parent Combo Condition
 *
 * @param Combo Variable
 * @type variable
 * @default 10 
 * @desc Variable to Use
 * @parent Combo Condition
 *
 * @param Slice Condition
 * @desc Condition For Slice
 * @parent Condition
 *
 * @param Slice Switch
 * @type switch
 * @default 11 
 * @desc Switch to use
 * @parent Slice Condition
 *
 * @param Slice Variable
 * @type variable
 * @default 11 
 * @desc Variable to Use
 * @parent Slice Condition
 *
 * @param Strike Condition
 * @desc Condition For Strike
 * @parent Condition
 *
 * @param Strike Switch
 * @type switch
 * @default 12 
 * @desc Switch to use
 * @parent Strike Condition
 *
 * @param Strike Variable
 * @type variable
 * @default 12 
 * @desc Variable to Use
 * @parent Strike Condition
 *
 * @param Stab Condition
 * @desc Condition For Stab
 * @parent Condition
 *
 * @param Stab Switch
 * @type switch
 * @default 13 
 * @desc Switch to use
 * @parent Stab Condition
 *
 * @param Stab Variable
 * @type variable
 * @default 13
 * @desc Variable to Use
 * @parent Stab Condition
 *
 * @help
 * Copyright (c) 2024 GBison. All rights reserved.
 * Released under the MIT license.
 * ===================================================================
 * The Idea from JoeBumpster
 * https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/
 * To use this, just run plugin 
 *     GWComboStat ComboIncrease
*/

(function() {
    // parameters
    var _thisPluinName = 'GWComboSwitch'; //change with your filename.
    var parameters = PluginManager.parameters(_thisPluinName);

    var _combo = {
        ""switch"": Number(parameters['Combo Switch'] || 10),
        ""variable"": Number(parameters['Combo Variable'] || 10)
    };
    var _slice = {
        ""switch"": Number(parameters['Slice Switch'] || 11),
        ""variable"": Number(parameters['Slice Variable'] || 11)
    };
    var _strike = {
        ""switch"": Number(parameters['Strike Switch'] || 12),
        ""variable"": Number(parameters['Strike Variable'] || 12)
    };
    var _stab = {
        ""switch"": Number(parameters['Stab Switch'] || 13),
        ""variable"": Number(parameters['Stab Variable'] || 13)
    };

    var _Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;
    Game_Interpreter.prototype.pluginCommand = function(command, args) {
        _Game_Interpreter_pluginCommand.call(this, command, args);
        runPlugins = false;
        if (command === 'GWComboStat') {
            switch (args[0]) {
                case 'ComboIncrease':
                    $gameSystem.ComboIncrease();
                    runPlugins = [command, args];
                    break;
            }

        }

    };

    Game_System.prototype.ComboIncrease = function() {

        let listCond = [];
        let switchID = 0;
        let varID = 0;
        let oldValue = 0;
        let switchStat = 0;
        //=====combo================= 
        listCond = _combo;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }
        //=====SLICE================= 
        listCond = _slice;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }


        //=====STRIKE================= 
        listCond = _strike;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }


        //=====STAB================= 
        listCond = _stab;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }

    };



})();

/*
The Idea from JoeBumpster
 https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/
I have a combo system in my game which increases a variable by 1 for each time you land a hit. The way I have it registering if the attack landed or not is by flipping a switch on whenever
Source:
https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/

Refference:
https://forums.rpgmakerweb.com/index.php?threads/parameter-structs.105978/
https://docs.google.com/document/d/1Ep71x_l0BVbNkyW2-b_63Li8UFZcAyJQVSNQL-C7ETI/edit?usp=sharing
*/"
QPSKDj2B,zad_4_odp_full_DLC_EXPANSION_V2_autoliczenie,pan7nikt,Bash,Monday 13th of May 2024 08:13:24 AM CDT,"#README
#ZAKTUALIZOWANE 13.05.2024 PRZED ODPOWIEDZIA
#!!!!!!!!!!!!!!!WIELOLINIJKOWE ECHO WKLEJAC NARAZ!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#WSZYSTKO WYKONYWAC JAKO ROOT
#KOMENDY ZE SREDNIKAMI NA KONCU POWINNY BYC WRZUCANE NARAZ
#PRZED KAZDYM ZADANIEM JEST PODANA ILOSC WYMAGANYCH TERMINALI
#KAZDY TERMINAL MA PRZYPISANA CYFRE np. 1:
#Z REGULY TERMINAL 1 JEST DO LISTINGOW A TERMINAL 2 JEST ROBoCZY
#ZALECA SIE ROBIC KAZDY PODPUNKT W ODDZIELNYM TERMINALU (latwiej clearowac), A TERMINAL ROBOCZY (2) MIEC JEDEN DLA WSZYSTKICH


/////////////////////////////////////////////////////////////KONIEC LISTINGOW/////////////////////////////////////////////////////////////////////////////////////////////////////

4.1.1.4 Do czego sluzy klasyfikacja procesow na ograniczone procesorem i ograniczone wejsciem wyjsciem oraz na jakiej podstawie zweryfikowano, ze proces jest ograniczony wejsciem-wyjsciem? 
#ILOSC TERMINALI:  2
    1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.4]-----------------------------------------------------------------------------\033[0m
    
    \033[0;32mPozwala okreslic w jaki sposob usprawnic realizacje zadan przez proces\033[0m

	dodatkowo pozwala okreslic w jakim stanie spedza wiekszosc czasu cyklu zycia.
	\033[0;32mOgraniczone procesorem\033[0m - spedzaja wiekszosc czasu w stanie wykonywanym.
	\033[0;32mOgranioczone wejsciem-wyjsicem\033[0m - spedzaja wiekszosc czasu w stanie zablokowanym
    \033[0;32mStan zablokowany\033[0m - oczekuje na pozostale zasoby systemowe oprocz stron pamieci

    \033[0;32m
    zeby wiedziec jak usprawnic realizacje zadania/zadan przez proces. Dla procesow
    ograniczonych procesorem mozemy zwiekszyc przydzial jednostek przetwarzajacych, a w
    procesach ograniczonych wejsciem wyjsciem mozna poprawic warunki realizacji operacji
    dyskowych.
    \033[0m

    Jezeli proces zglasza operacje dyskowe to mozemy poprawic warunki realizacji operacji
    dyskowych.

    Nie kazda operacje wejscia wyjscia mozna usprawnic, ale operacje dyskowe akurat mozna.

    \033[0;32mOperacje dyskowe wejscia wyjscia\033[0m to odczyt i zapis
    
    proces moze przebywac w stanie \033[0;32mzablokowanym, wykonywanym i gotowym do wykonania\033[0m

    \033[0;32mReal\033[0m – calkowity czas istnienia procesu – czas cyklu zycia procesu
    \033[0;32mRuntime\033[0m – czas przebywania procesu w stanie wykonywanym (Wirtualny czas zycia procesu)
    \033[0;32mswitches*avg delay\033[0m – czas przebywania procesu w stanie gotowym do wykonania
    \033[0;32mswitches\033[0m – przelaczenia kontekstu, w ktorych ten proces uczestniczyl
    \033[0;32mavg delay\033[0m – sredni czas oczekiwania na przydzial jednostki przetwarzajacej
    ""

 
 2:
 echo bfq > /sys/block/sda/queue/scheduler
 variable=""""$({   time perf sched record timeout 60 dd if=/dev/sda of=/dev/null bs=512K >/dev/null; } 2>&1 | grep real)""""
 echo $variable

 1:
#W TRAKCIE DZIALANIA PROCESU
 cat /proc/$(pidof dd -s)/status | grep Threads
 ps -o pid,etime,cputime,%cpu $(pidof dd -s)
 pmap -x $(pidof dd -s)
 pmap -X $(pidof dd -s) | grep --color -E ""stack|heap|$""

 echo -e ""\033[0;32mVSZ\033[0m - rozmiar stron\n \033[0;32mRSZ\033[0m - rozmiar ramek""
 ps -o pid,vsz,rsz $(pidof dd -s)
 cat /proc/$(pidof dd -s)/status | grep Threads

 2:
 #PO ZAKONCZENIU PROCESU W TERMINALU 2 (60s)

#tu wszystko naraz az do komentarxa z koncem
real=${variable#*0m}
real=${real%%s*}
real=$(tr ',' '.' <<<""$real"")
real=$(echo ""scale=2; ($real * 1000)"" | bc)

variable=""$( perf sched latency -p | grep -e ""dd"")""
runtime=${variable#*|}
runtime=${runtime%%ms*}
variable=""$( perf sched latency -p | grep -e ""dd"")""
avg=${variable#*avg:}
avg=${avg%%ms*}
variable=""$( perf sched latency -p | grep -e ""dd"")""
switches=${variable#*ms |}
switches=${switches%% |*}

lockedTime=$(echo ""scale=2; $real - $runtime - ($switches * $avg)"" | bc)
lockedPercentage=$(echo ""scale=2; $lockedTime / $real * 100"" | bc)

echo ""
runtime[ms]:     $runtime ms
avg delay[ms]:      $avg ms
switches:      $switches
real[s]:              $real ms
Czas w stanie zablokowanym: $lockedTime ms
Procent w stanie zablokowanym: $lockedPercentage %
"";
#KONIEC


 perf sched latency -p | grep -e ""Task"" -e ""dd""
 echo -e ""Czas w stanie zablkowanym = real - runtime - (switches * avg)
Procent w czasie zablokowanym = Czas w stanie zablokowanym / real * 100%""

4.1.1.5 (brakujace). Sekretne pytanie brakujace z wikampa: Jak okreslic cykl zycia procesu i czym jest wirtualny czas zycia procesu? - wymagane zaprezentowania odpowiednich wartosci w listingu
#ILOSC TERMINALI: 1
 1:
 echo -e ""
 \033[0;32m-------------------------------------------------------[4.1.1.5]-----------------------------------------------------------------------------\033[0m
 \033[0;32mCykl zycia procesu\033[0m to calkowity czas przez jaki istnial proces (\033[0;32mreal\033[0m)
 \033[0;32mWirtualny czas zycia procesu\033[0m to czas w jakim kod programu byl wykonywany / czas realizacjizadania / czas w stanie wykonywanym (\033[0;32mruntime\033[0m)""
 
 echo bfq > /sys/block/sda/queue/scheduler
 time perf sched record ionice -c 1 -n 0 stress -i 1 -t 3
 perf sched latency -p | grep -e ""Task"" -e ""stress""

4.1.1.6 Co reprezentuje wartosc %cpu dla procesu jednowatkowego? - dla jakiego procesu wartosc %cpu moze przekroczyc 100%?
#ILOSC TERMINALI: 2
	1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.6]-----------------------------------------------------------------------------\033[0m
cputime / etime * 100% -- procent cyklu zycia w kotrym proces przebywal w stanie wykonywanym (suma wirtualnych czasow zycia watku musi byc wiekszy niz czas zycia procesu)
Ta wartosc reprezentuje czas przetwarzania podzielony przez czas zycia procesu.
\033[0;32mstosunek wirtualnego czasu zycia procesu do jego rzeczywistego czasu zycia procesu \033[0m (runtime/real)

\033[0;32mReal\033[0m – calkowity czas istnienia procesu – czas cyklu zycia procesu
\033[0;32mRuntime\033[0m – czas przebywania procesu w stanie wykonywanym

\033[0;32mMoze przekroczyc 100%\033[0m Dla procesu posiadajacego wiele watkow, ktore wiekszosc czasu spedzaja w stanie wykonywanym
czyli
jesli sumaryczny czas przetwarzania zadan przez watki jest wiekszy niz czas cyklu zycia procesu.""

#WIELOWATKOWY
	2:
	sysbench --test=cpu --threads=2 --time=70 run
	1:
    echo -e ""\033[0;32mWieloowatkowy\033[0m""
    cat /proc/$(pidof sysbench -s)/status | grep Threads
	ps -o pid,cmd,nlwp,%cpu,cputime,etime ""$(pidof sysbench -s)"" ;ps -o pid,spid,%cpu,cputime,etime -T ""$(pidof sysbench -s)"" | grep --color -E "" %CPU|$"" 

#JEDNOWATKOWY
    2:
    echo bfq > /sys/block/sda/queue/scheduler
    time perf sched record dd if=/dev/sda of=/dev/null
	#sysbench --test=cpu --threads=1 --time=70 run
    1:
    echo -e ""\033[0;32mJednowatkowy\033[0m"";
    echo -e ""Dla procesu jednowatkowego \033[0;32mnie moze przekroczyc 100%\033[0m"";
    cat /proc/$(pidof dd -s)/status | grep Threads;
     #PO CHWILI PRZERWAC DD ZA POMOCA CTRL + C (raz)
	ps -o pid,cmd,nlwp,%cpu,cputime,etime ""$(pidof dd -s)"" ;ps -o pid,spid,%cpu,cputime,etime -T ""$(pidof dd -s)"" | grep --color -E "" %CPU|$"" 

4.1.1.7 (1). Co reprezentuje wartosc %mem dla procesu? - wymagane wykazanie w listingach wartosci, na bazie ktorych %mem jest wyliczany
#ILOSC TERMINALI: 2
	1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.7 (1)]-----------------------------------------------------------------------------\033[0m
    \033[0;32mJest to stosunek pamieci fizycznej ulotnej przydzielonej procesowi do calkowitej fizycznej ulotnej pamieci ktora
    dysponuje system (RSZ / Total online memory[w tym przypadku 6G])\033[0m
    \033[0;32m%MEM\033[0m = RSZ / MEM total * 100%
    \033[0;32mRSS\033[0m (\033[0;32mRSZ\033[0m) - ZBIOR ROBOCZY (working set), zbior ramek dla procesu, tworzy obszar roboczy
    \033[0;32mtotal\033[0m - fizyczna pamiec ulotna maszyny
    \033[0;32mTablica stron\033[0m - zawiera uzywane przez proces \033[0;32mramki ze stronami\033[0m, jest nieciagla i hierarchiczna
    \033[0;32mobszar roboczy\033[0m - zbior ramek
    \033[0;32mlsmem\033[0m - pokazuje calkowita pamiec ulotna fizyczna maszyny
    \033[0;32mfree\033[0m - pokazuje dostepna (uzyteczna) pamiec ulotna [pamiec fizyczna - kernel - zarezerwowana przez system]""

	2:
	stress -m 1 -t 60

	1:
    lsmem | grep --color -E ""Total online memory:|$""
	ps -o pid,%mem,rsz ""$(pidof stress -s)"" | grep --color -E "" %MEM|total|$"" ; free | grep --color -E ""total|$""


4.1.1.7 (2). Czy calosc jego kodu i danych jest wczytywana z pliku programu ELF oraz plikow bibliotek ELF do fizycznej pamieci ulotnej?  
- wymagane zaprezentowania odpowiednich wartosci dla segmentu danych i tekstu w listingu z mapa pamieci procesu jednowatkowego.
#ILOSC TERMINALI: 2

    1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.7 (2)]-----------------------------------------------------------------------------\033[0m
\033[0;32mNie wszystkie\033[0m, czesc kodu i danych wczytywana jest z segmentow anonimowych.
\033[0;32mr-x\033[0m - zawiera text
Dane:
\033[0;32mrw-\033[0m - zawiera zmienna
\033[0;32mr--\033[0m - zawiera stala

Jezeli rozmiar \033[0;32mKbytes\033[0m i \033[0;32mRSS\033[0m sa inne oznacza to, ze nie wszystkie strony zostaly wczytane do ramek
""
    2:
    echo bfq > /sys/block/sda/queue/scheduler
 	time perf sched record ionice -c 1 -n 0 stress -i 1 -t 240

    1:
    #POKAZUJESZ DOWOLNY SEGMENT (KOLOREM JEST PRZYKLADOWY ZAZNACZONY) KONIECZNIE DANYCH I ZAZNACZASZ, ZE ""Kbytes"" JEST WIEKSZE OD ""RSS""
    pmap -x $(pidof stress -s)| grep --color -E ""Kbytes|RSS| 0       0 r---- libm.so.6|$"";


4.1.1.10. Ktory z segmentow procesu zawiera sterte, a ktory stos? Czy segment sterty/stosu sa anonimowe? - wymagane wskazanie segmentu sterty i stosu w mapie pamieci wybranego procesu.
#ILOSC TERMINALI: 2
	2:
 	echo bfq > /sys/block/sda/queue/scheduler
 	time perf sched record ionice -c 1 -n 0 stress -i 1 -t 240

	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.10]-----------------------------------------------------------------------------\033[0m
[\033[0;32mstack\033[0m] - sterta(Segment z mapowaniem [ stack ])
[\033[0;32mheap\033[0m] - stos (Segment z mapowaniem [ heap ])
tak, \033[0;32moba sa anoniowe\033[0m, poniewaz ich zawartosc zostala wytworzona przez proces, a nie wczytana z pliku. 

\033[0;32mSterta\033[0m zawiera dane wytworzone przez proces np. zmienne lokalne, jest dynamicznie przyznawana procesowi.

Zawartosc segmentu procesu \033[0;32mmoze pochodzic z biblioteki\033[0m.

\033[0;32mPamiec anonimowa\033[0m lub mapowanie anonimowe reprezentuja pamiec, ktora nie jest obslugiwana przez system plikow.
Takie mapowania sa tworzone niejawnie dla stosu i sterty programu przez jawne wywolanie wywolania systemowego
mmap.""

pmap -X $(pidof stress -s)| grep --color -E ""stack|heap|$""
	

4.1.1.12. Jaki rozmiar zajmuja wszystkie strony procesu a jaki wszystkie przydzielone dla procesu ramki oraz kiedy strona jest ladowana do ramki?  - wymagane wskazanie odpowiednich wartosci w listingach
#ILOSC TERMINALI: 2
	2:
 	echo bfq > /sys/block/sda/queue/scheduler
 	time perf sched record ionice -c 1 -n 0 stress -i 1 -t 240

	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.12]-----------------------------------------------------------------------------\033[0m
\033[0;32mVSZ\033[0m - rozmiar stron [KiB]
rozmiar wszystkich przydzielonych dla procesu stron (w KiB) (cała pamięć, do której proces ma dostęp, czyli
pamięć wymieciona + pamięć zaalokowana + pamięć bibliotek współdzielonych + pamięć plików wykonywalnych)

\033[0;32mRSZ\033[0m - rozmiar ramek [KB]
rozmiar wszystkich przydzielonych dla procesu ramek z jego stronami (w KB) (nie uwzględnia SWAP, ale
uwzględnia pamięć bibliotek współdzielonych, czyli pokazuje tylko stan aktualny ramek w pamięci fizycznej)

\033[0;32mStrona jest ladowana do ramki\033[0m (czyli fizycznej strony pamieci) w momencie, gdy proces potrzebuje dostepu do danego obszaru pamieci wirtualnej,
ktory nie jest obecnie obecny w pamieci fizycznej.\n

\033[0;32mnie kazda\033[0m strona jest przechowywana w ramce tego procesu\n
gdy proces odwoluje sie do strony pamieci ktorej nie ma w zadnej z jego ramek \033[0;32mwystapi blad strony\033[0m
\033[0;32mkolejnosc odszukiwania strony\033[0m - poza zbiorem roboczym, (gdy wystapi \033[0;32mblad strony\033[0m):
\033[0;32m1.\033[0m swap cache - jesli znajdzie to blad poboczny, aktualizacja zbioru roboczego, pozniej tablicy
stron
\033[0;32m2.\033[0m przestrzeni wymiany swap
\033[0;32m3.\033[0m plik regularny tego programu lub biblioteki

\033[0;32mStrona jest ladowana do ramki\033[0m w momencie, gdy program probuje uzyskac dostep do tej strony.

To co proces ma w segmentach to jego pamięć wirtualna, każdy segment jest podzielony na strony. Te ze stron, które są
załadowane do ramek to jego rzeczywista fizyczna pamięć ulotna. Strony, które nie są w ramkach, znajdują się w
plikach regularnych programu lub bibliotekach, wykorzystywanych przez proces. Strona. która jest niepotrzebna dla
procesu zmienia oznaczenie na nieaktywną i jej właścicielem zostaje swap cache.""

    ps -o pid,vsz,rsz $(pidof stress -s) | grep --color -E ""VSZ|RSZ|$""



4.1.1.20. Jezeli plik zawierajacy program/biblioteke ELF zostanie usuniety, to skad system operacyjny bedzie doczytywal potrzebne strony, jaki jest zwiazek pomiedzy niezwolnionymi blokami systemu plikow a stronami? - omowienie statystyk wezlow i blokow systemu plikow, aby stwierdzic czy po usunieciu pliku zostaly one zwolnione wraz z usunietym wpisem katalogowym. 
#ILOSC TERMINALI: 2
	2:
	cp /usr/bin/stress /home/tytus/stress
	/home/tytus/stress -c 1

	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.20]-----------------------------------------------------------------------------\033[0m
    Jezeli plik zawierajacy program/biblioteke ELF zostanie usuniety, to system operacyjny \033[0;32mbedzie doczytywal potrzebne strony Ze swap cache\033[0m
    jezeli nie ma potrzebnej strony w swapcache i strona nie jest wczytana do ramki to z swap.
    
    Zostanie usuniety jedynie wpis katalogowy - \033[0;32mnie zostana zwolnione\033[0m zadne bloki ani wezel zwiazany z tym plikiem
    Bloki nie zostaly zwolnione poniewaz proces korzysta ze wczytanych wczesniej stron programu/biblioteki.

    \033[0;32mBloki te blokuje\033[0m mechanizm pamieci wirtualnej, zeby moc doczytac

    Bloki i wezel \033[0;32mzostana zwolnione\033[0m, gdy wszystkie procesy korzystajace z tego pliku zostana zakonczone
    Wynika z tego, ze nie każde usunięcie plików w systemie plików spowoduje zwolnienie miejsca,

    Niezwolnione bloki systemu plikow to dane przechowywane na dysku, podczas gdy strony w
    pamieci operacyjnej sa ich buforowanymi wersjami w pamieci RAM, co umozliwia szybszy
    dostep do tych danych podczas operacji odczytu i zapisu
    ""
	#TO MUSI BYC ZROBIONE W TRAKCIE TRWANIA PROCESU STRESS (UPEWNIC SIE, ZE DZIALA ^^^)
	stat -f /home/tytus | grep --color -E ""wolnych:|$"" 
	ls /home/tytus
	rm /home/tytus/stress -f
	stat -f /home/tytus | grep --color -E ""wolnych:|$"" 
	ls /home/tytus
	killall stress
    #TUTAJ BEDZIE WIECEJ WOLNYCH:
	stat -f /home/tytus | grep --color -E ""wolnych:|$"" 
4.1.1.21. Z jakiego obszaru pamieci ulotnej wybierane sa niepuste ramki i jakie kryteria musi spelniac ramka wybrana przez algorytm wymiany? - analiza wynikow free –w dotyczaca roznicy w wartosciach pomiedzy kolumna free i available w wierszu mem. 
#ILOSC TERMINALI: 1
	1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.21]-----------------------------------------------------------------------------\033[0m
	\033[0;32mBierze z swap cache\033[0m

	\033[0;32mAlgorytm wymiany\033[0m (algorytm zastępowania stron)  bedzie wybieral przede wszystkim ramki ze stronami niekatywnymi,
    a w szczegolnosci zawierajace strony niezabrudzone i nieanonimowe (czyli ramki które mogą być natychmiastowo wykorzystane).

	\033[0;32mMEM free\033[0m - rozmiar wolnej pamięci fizycznej ulotnej (rozmiar wolnych ramek), ale bez ramek z przestrzeni swap-cache
	\033[0;32mMEM available\033[0m - wartość free + ramki ze swap cache zawierające niezabrudzone i nieanonimowe strony (możliwe,
    że jeszcze + ramki z buforów zawierające niezabrudzone strony)

    \033[0;32mStrony nieaktywne\033[0m - nie byly ostatnio uzywane (nie bylo do nich w ostatnim czasie odwołań)

    \033[0;32mStrony niezabrudzone\033[0m - ich zawartosc nie zmienila sie od momentu wczytania ich do ramki

    \033[0;32mstrony nieanonimowe\033[0m - strony ktorych zawartosc zostala wczytana z pliku regularnego z programem lub biblioteka

    fakt ze ramka z ta strona nalezy do swap cache oznacza, ze \033[0;32mstrona jest nieaktywna\033[0m
    
    Ramki zawierajace strony niezabrudzone i nieanonimowe moga byc natychmiastowo wykorzystane
    
    Jeśli ramka w swap cache zawiera stronę \033[0;32mzabrudzoną\033[0m lub \033[0;32manonimową\033[0m, to nie możemy załadować do niej strony,
    ponieważ nadpisalibyśmy dane. Dlatego takie strony są utwrwalane w przestrzeni wymiany. Będą to np. strony
    zawierające ramkę tekstu, ponieważ ramka tekstu zawiera kod programu, więc nie może zostać zmieniona. 
    
    Za wczytywanie stron do ramek odpowiada system operacyjny
    
    Jeżeli wartość available jest niska to zachodzi procedura OOM (Out Of Memory)""

	free -wh | grep --color -E ""free|available|$"" 

4.1.1.24. Jakie zasoby systemowe trzeba monitorowac i jakie dzialania mozna podjac aby procedura OOM nie byla zastosowana? - wymagane zaprezentowanie odpowiednich wartosci w listingach.
#ILOSC TERMINALI: 1
	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.24]-----------------------------------------------------------------------------\033[0m
    Należy regularnie kontrolować stan dostępnej pamięci operacyjnej (mem \033[0;32mused\033[0m i \033[0;32mavailable\033[0m) oraz ile mamy wykorzystanej
    pamięci swap (ilosc wolnych ramek w pamieci, zajetosc przestrzeni wymiany swap)

    Jeśli posiadamy mało wolnej ulotnej pamięci fizycznej (available) oraz mało wolnej pamięci przestrzeni wymiany (free),
    możemy spodziewać się podjęcia przez system operacyjny odpowiednich kroków
    
    \033[0;32mW przypadku presji pamieci\033[0m (kiedy brakuje ramek) system stosuje:
    \033[0;32m1.\033[0m wymiatanie stron.
    \033[0;32m2.\033[0m redukcja zbioru roboczego procesu - odebranie czesci przydzielonych procesom ramek
    \033[0;32m3.\033[0m procedura OOM (Out of Memory) - wybierane sa procesy, ktore zostana natychmiast zakonczone
    
    Aby procedura OOM nie była zastosowana możemy:
    \033[0;32m- powiekszyc przestrzen wymiany\033[0m poprzez dodanie pliku wymiany (ale tylko w Linuxie, w Windowsie nie można, bo trzeba by było restartować system
    \033[0;32m- zakonczyc procesy\033[0m, które są nam już niepotrzebne, dzięki czemu będziemy mieli kontrolę nad procesami, które zostaną zamknięte
    \033[0;32m- zapisać stan procesów\033[0m na dysku.
    
    Dlatego też instalowanie systemu bez przestrzeni wymiany swap jest złym pomysłem, ponieważ bez magazynów stron
    przyspierzymy wystąpienie procedury OOM.
""

	free -wh | grep --color -E ""free|used|$"" 

/////////////////////////////////////////////////////////////KONIEC LISTINGOW/////////////////////////////////////////////////////////////////////////////////////////////////////
Z tego co widze to dodatkowe:

Blad poboczny wystepeuje gdy strona przechowyana jest w ramce(np. w swap cache) jednak nie wystepuje w zbiorze roboczym, wtedy wymagana jest aktualizacja tablicy stron

Blad glowny wymaga zaladowania strony do ramki(np z programu, biblioteki lub sprowadzenia z przestrzeni wymiany swap).

Wyswietlanie informacji o biezacych priorytetach I/O dla procesow:
ionice -p <pid>

Zmiana algorytmu windy dla dysku:
echo bfq > /sys/block/sda/queue/scheduler

ionice -c 1 -n 0
-c 1 (Realtime) to klasa o najwyzszym priorytecie I/O w systemie 
Priorytet 0 to najwyzszy priorytet dla ionice -c 1, zakres (0-7)

Algorytmy windy:
Algorytm BFQ dazy do uczciwego podzialu zasobow dyskowych miedzy procesy. Przydziela czas dostepu do dysku kazdemu procesowi w proporcji do jego budzetu. Priorytet I/O: Procesy o wyzszym priorytecie I/O maja wieksze szanse na otrzymanie wiekszego budzetu
///////////////////////////////////////////////////////////////////////////////////////////////////////////////"
1FDLiKBP,GWCombo v1,kura2yamato,JavaScript,Monday 13th of May 2024 08:08:17 AM CDT,"//---------------------------------------------------------
// GWComboSwitch.js 
// Copyright (c) 2024 GBison. All rights reserved.
// Released under the MIT license.
// http://opensource.org/licenses/mit-license.php
//=========================================================

/*:
 * @plugindesc Combo System By Checking the Switch. 
 * @author Gbison 
 * @version 1
 *
 * @help
 * Copyright (c) 2024 GBison. All rights reserved.
 * Released under the MIT license.
 * ===================================================================
 * The Idea from JoeBumpster
 *
 * @param Plugin Version 
 * @desc Version for the Plugins
 *
 * @param Version
 * @type number
 * @default 0 
 * @parent Plugin Version
 *
 * @param Sub Version
 * @type number
 * @range 0,99
 * @desc Variable to Use
 * @default 0 
 * @parent Plugin Version
 *
 * @param Condition 
 * @desc Condition For Action
 *
 * @param Condition Name
 * @desc All Condition Name
 * @type string[]
 * @default [""Combo"",""Slice"",""Strike"",""Stab""]
 * @parent Condition
 *
 * @param Condition Switch
 * @desc All Condition Switch to Check
 * @type switch[]
 * @default [""10"",""11"",""12"",""13""]
 * @parent Condition
 *
 * @param Condition Variable
 * @desc All Condition Variable to update
 * @type variable[]
 * @default [""10"",""11"",""12"",""13""]
 * @parent Condition
 * 
 */
 (function() {
    // parameters
    var _thisPluinName = 'GWComboSwitch'; //change with your filename.
    var parameters = PluginManager.parameters(_thisPluinName);

    var listCondName = JSON.parse(parameters['Condition Name'] || ""[]"");
    var listCondSwitch = JSON.parse(parameters['Condition Switch'] || ""[]"");
    var listCondVariable = JSON.parse(parameters['Condition Variable'] || ""[]"");

    var _Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;
    Game_Interpreter.prototype.pluginCommand = function(command, args) {
        _Game_Interpreter_pluginCommand.call(this, command, args);
        runPlugins = false;
        if (command === 'GWComboStat') {
            switch (args[0]) {
                case 'ComboIncrease':
                    $gameSystem.ComboIncrease();
                    runPlugins = [command, args];
                    break;
            }

        }

    };

    Game_System.prototype.ComboIncrease = function() {
        let nPos = 0;
        for (nPos = 0; nPos < listCondName.length; nPos++) {
            let condName = listCondName[nPos] || -1;
            let switchID = listCondSwitch[nPos] || -1;
            let varID = listCondVariable[nPos] || -1;
            if (condName != -1) {
                let oldValue = $gameVariables.value(varID);
                let switchStat = $gameSwitches.value(switchID);
                if (switchStat) {
                    $gameVariables.setValue(varID, ++oldValue);
                    $gameSwitches.setValue(switchID, 0); 
                } 
            } else {
                /*console.log('not active ' + condName, switchID, varID);*/
            }
        }


    };

})();

/*
The Idea from JoeBumpster
 https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/

Must Read 
https://forums.rpgmakerweb.com/index.php?threads/parameter-structs.105978/
*/"
cbwR5myy,Review Skilling,reviewbrokers,PHP,Monday 13th of May 2024 07:44:06 AM CDT,"https://www.reviewbrokers.net/review-skilling/
 
The Skilling Group is made up of a multinational team of over 70 people from all over the world. Developers, marketers and specialists all work together from our offices located in Cyprus (CIF), Malta and Spain.



We’re a fintech trading company founded in 2016 by Scandinavian entrepreneurs, with a track record of success. With a rapidly growing international presence, and offices in Cyprus, Malta and Spain, we provide access to over 1,000 of the world’s top financial markets.



Skilling enables you to trade CFD instruments across the most renowned asset classes across multiple award-winning platforms, including its own advanced proprietary platform.



Its competitive pricing, reliability and quick execution, as well as our client-centric focus, are the reasons why more and more traders are switching to Skilling.



As we continue to expand and surpass our goals, Skilling’s vision remains simple: to make investment and trading engaging and accessible to everyone, in a transparent and secure way.



Broker Logo &nbsp;







Broker Type-CompanySkilling (Seychelles) LtdFoundation2016CountrySeychellesRegulationSkilling (Seychelles) Ltd is authorized and regulated under the Financial Services Authority&nbsp;Seychelles&nbsp;(FSA)under license No. SD042.The JurisdictionsContracts for difference (""CFD"") products and services offered by Skilling are not intended for use byresidents of Belgium, United Kingdom or any other person or resident of any country or jurisdiction wheresuch distribution or use would be contrary to local law or regulation.Live ChatLive chat support is available from Monday to Friday, between 04:00 and 22:00 CET.Emailsupport@skilling.com* Our customer support experts will get back to you within 24 hours.Call+2484632031* Our telephone support is available from Monday to Friday, between 07:00 and 22:00 CET.







Free Demo AccountsYesMinimum Initial Deposit25 €Multi-Currency Account EURSpreadsFrom 0.1 pipsStop Out Level50%Introducing Brokers ProgramYesSwap FreeNoPromotionsYesMAM/PAMMYesTrading Platforms&nbsp;MetaTrader 4, cTrader, Skilling Trader, Skilling CopyScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Bank Transfer, WebMoney, Skrill, Neteller, Klarna, Mifinity, AstroPay, BinancePay, Bank Transfer
"
rFnHZYn2,Review Skilling,fxvnpro,PHP,Monday 13th of May 2024 07:43:50 AM CDT,"https://www.fxvnpro.com/review-skilling/
 
The Skilling Group is made up of a multinational team of over 70 people from all over the world. Developers, marketers and specialists all work together from our offices located in Cyprus (CIF), Malta and Spain.



We’re a fintech trading company founded in 2016 by Scandinavian entrepreneurs, with a track record of success. With a rapidly growing international presence, and offices in Cyprus, Malta and Spain, we provide access to over 1,000 of the world’s top financial markets.



Skilling enables you to trade CFD instruments across the most renowned asset classes across multiple award-winning platforms, including its own advanced proprietary platform.



Its competitive pricing, reliability and quick execution, as well as our client-centric focus, are the reasons why more and more traders are switching to Skilling.



As we continue to expand and surpass our goals, Skilling’s vision remains simple: to make investment and trading engaging and accessible to everyone, in a transparent and secure way.



Broker Logo &nbsp;



BROKER INFORMATION



Broker Type-CompanySkilling (Seychelles) LtdFoundation2016CountrySeychellesRegulationSkilling (Seychelles) Ltd is authorized and regulated under the Financial Services Authority&nbsp;Seychelles&nbsp;(FSA)under license No. SD042.Minimum Initial Deposit25 €Account Base CurrenciesEURAccount Deposit MethodsVisa, Master Card, Bank Transfer, WebMoney, Skrill, Neteller, Klarna, Mifinity, AstroPay, BinancePay, Bank TransferAccount Withdrawal MethodsVisa, Master Card, Bank Transfer, WebMoney, Skrill, Neteller, Klarna, Mifinity, AstroPay, BinancePay, Bank TransferLive ChatLive chat support is available from Monday to Friday, between 04:00 and 22:00 CET.Emailsupport@skilling.com* Our customer support experts will get back to you within 24 hours.Call+2484632031* Our telephone support is available from Monday to Friday, between 07:00 and 22:00 CET.



ADVANTAGES



Free Demo AccountYesSpreadsFrom 0.1 pipsStop Out Level50%Execution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeNoPromotionsYesMAM/PAMMYesTrading Platforms&nbsp;MetaTrader 4, cTrader, Skilling Trader, Skilling CopyScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Shares, Soft Commodities, Indices, Cryptos



DISADVANTAGES



RestrictionsContracts for difference (""CFD"") products and services offered by Skilling are not intended for use byresidents of Belgium, United Kingdom or any other person or resident of any country or jurisdiction wheresuch distribution or use would be contrary to local law or regulation.
"
c9uvfdrt,Контроль выхода,NikaBang,C#,Monday 13th of May 2024 07:13:04 AM CDT,"using System;

internal class Program
{
    static void Main(string[] args)
    {
        string exitKey = ""exit"";
        string userInput;
        bool inProgram = true;

        while (inProgram)
        {
            Console.WriteLine(""Программа еще работает.\nДля завершения введите: exit."");
            userInput = Console.ReadLine();

            if (userInput == exitKey) 
            {
                inProgram = false;
            }
        }

        Console.WriteLine(""Программа завершена."");
        Console.ReadKey();
    }
}"
hXEYWhQE,Review Doto,fxvnpro,PHP,Monday 13th of May 2024 07:11:58 AM CDT,"https://www.fxvnpro.com/review-doto/
 
Doto. The trading simplifier. We make trading as easy as it gets, whether it’s your first trade or your thousandth.



Trade simply with an intuitive interface and a step-by-step guide inside, trading for success just got easier.



Doto analyzed the collective experience of millions of traders to bring you a powerful, user-friendly platform. 



Licensed by top financial regulators, we’re about bringing simplicity and security to your trading.



We’re not just on the screen, we’re right with you. Anytime you need help, just reach out to us.



Broker Logo  



BROKER INFORMATION



Broker Type-CompanyDoto GroupFoundation2019CountryCyprusRepublic of MauritiusSouth AfricaSeychellesRegulation- Doto Europe Ltd., licensed and regulated as an investment firm by the Cyprus Securities and Exchange Commission(CySEC) of Cyprus under license number 399/21.- Doto Global Ltd., licensed and regulated as an investment dealer by the Financial Services Commission (FSC) ofMauritius under license number C119023978.- Doto South Africa Pty. Ltd., licensed and regulated as an authorized financial service provider by the Financial Sector ConductAuthority (FSCA) of South Africa under license number 50451.- Doto International Ltd., licensed and regulated as a securities dealer by the Financial Services Authority (FSA) ofSeychelles under license number SD0063. Minimum Initial Deposit$15Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, Maestro, Momo, QR Payments, Bank Transfer, and moreAccount Withdrawal MethodsVisa, Master Card, Maestro, Momo, QR Payments, Bank Transfer, and moreLive ChatYesEmailsupport-mu@doto.comCall+2304687113



ADVANTAGES



Free Demo AccountYesSpreadsFixed/FloatingStop Out Level50%Execution TypeMarket ExecutionAffiliate ProgramYesVirtual Private Server-Trading Platforms&nbsp;MetaTrader 4, MetaTrader 5, Doto PlatformScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Stocks, Commodities, Indices, Cryptos



DISADVANTAGES



RestrictionsThe services of Doto Global Ltd. and the information on this site are not directed at residents of American Samoa,Australia, Belgium, Brazil, Canada, the Central African Republic, the Democratic Republic of the Congo,the Republic of the Congo, Côte d’Ivoire, Eritrea, Guam, Heard Island and McDonald Islands, Hong Kong, Iran,Iraq, Israel, Japan, Lebanon, Liberia, Libya, Mali, Mauritius, Myanmar, New Zealand, North Korea,Northern Mariana Islands, Puerto Rico, Russia, Somalia, Sudan, the Syrian Arab Republic,the United Kingdom of Great Britain and Northern Ireland, the United States Minor Outlying Islands,the United States of America, the Virgin Islands of the United States or Yemen.
"
SXCvNqSU,Review Doto,reviewbrokers,PHP,Monday 13th of May 2024 07:11:46 AM CDT,"https://www.reviewbrokers.net/review-doto/
 
Doto. The trading simplifier. We make trading as easy as it gets, whether it’s your first trade or your thousandth.



Trade simply with an intuitive interface and a step-by-step guide inside, trading for success just got easier.



Doto analyzed the collective experience of millions of traders to bring you a powerful, user-friendly platform. 



Licensed by top financial regulators, we’re about bringing simplicity and security to your trading.



We’re not just on the screen, we’re right with you. Anytime you need help, just reach out to us.



Broker Logo  







Broker Type-CompanyDoto GroupFoundation2019CountryCyprusRepublic of MauritiusSouth AfricaSeychellesRegulation- Doto Europe Ltd., licensed and regulated as an investment firm by the Cyprus Securities and Exchange Commission(CySEC) of Cyprus under license number 399/21.- Doto Global Ltd., licensed and regulated as an investment dealer by the Financial Services Commission (FSC) ofMauritius under license number C119023978.- Doto South Africa Pty. Ltd., licensed and regulated as an authorized financial service provider by the Financial Sector ConductAuthority (FSCA) of South Africa under license number 50451.- Doto International Ltd., licensed and regulated as a securities dealer by the Financial Services Authority (FSA) ofSeychelles under license number SD0063. The JurisdictionsThe services of Doto Global Ltd. and the information on this site are not directed at residents of American Samoa,Australia, Belgium, Brazil, Canada, the Central African Republic, the Democratic Republic of the Congo,the Republic of the Congo, Côte d’Ivoire, Eritrea, Guam, Heard Island and McDonald Islands, Hong Kong, Iran,Iraq, Israel, Japan, Lebanon, Liberia, Libya, Mali, Mauritius, Myanmar, New Zealand, North Korea,Northern Mariana Islands, Puerto Rico, Russia, Somalia, Sudan, the Syrian Arab Republic,the United Kingdom of Great Britain and Northern Ireland, the United States Minor Outlying Islands,the United States of America, the Virgin Islands of the United States or Yemen.Live ChatYesEmailsupport-mu@doto.comCall+2304687113







Free Demo AccountsYesMinimum Initial Deposit$15Multi-Currency AccountUSDSpreadsFixed/FloatingStop Out Level50%Affiliates ProgramYesVirtual Private Server-Trading Platforms&nbsp;MetaTrader 4, MetaTrader 5, Doto PlatformScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Maestro, Momo, QR Payments, Bank Transfer, and more
"
USi25p1X,ДЗ Наибольший элемент,TeT91,C#,Monday 13th of May 2024 07:07:20 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int minValue = -20;
            int maxValue = -1;

            int[,] numbers = new int[10, 10];
            int largestNumber;
            int overwriteValue = 0;

            Console.WriteLine(""Первоначальная матрица:"");

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    numbers[i, j] = random.Next(minValue, maxValue + 1);

                    Console.Write(numbers[i, j] + "" "");
                }

                Console.WriteLine();
            }

            largestNumber = numbers[0, 0];

            foreach (int number in numbers)
            {
                if (number > largestNumber)
                {
                    largestNumber = number;
                }
            }

            Console.WriteLine(""Измененная матрица:"");

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    if (numbers[i, j] == largestNumber)
                    {
                        numbers[i, j] = overwriteValue;
                    }

                    Console.Write(numbers[i, j] + "" "");
                }

                Console.WriteLine();
            }

            Console.WriteLine(""Наибольшее число : "" + largestNumber);
            Console.ReadLine();
        }
    }
}"
yFe7Takk,Untitled,niske,Java,Monday 13th of May 2024 06:59:49 AM CDT,"import java.util.ArrayList;
import java.util.LinkedList;


public class DateKlase {
	
	public static void main (String[] args) {
		
		//LinkedList<String> imena = new LinkedList<String>();
		ArrayList<String> imena = new ArrayList<String>();
		
		imena.add(""Bakurski"");
		imena.add(""Niske"");
		imena.add(""Bogi"");
		imena.add(""Pera"");
		imena.add(""Slavica"");
		
		System.out.println(imena);
		System.out.println();
		
		for (String i : imena)
		{
			System.out.println(i);
		}
		
		System.out.println();
		// dodaj na mesto 2
		
		imena.add(1, ""Vlada"");
		
		System.out.println(imena);
		
		// menja ime na poziciji br 4
		
		System.out.println(""Ime pre promene: "" + imena.get(4));
		imena.set(4, ""Luka"");
		
		System.out.println(imena);
		
		System.out.println(""\nELementi na parnjim pozicijama: "");
		
		int brojac = 0;
		for (String i : imena)
		{
			
			if (brojac % 2 == 0)
			{
				System.out.println(i);
			}
			brojac ++;
		}
		
		System.out.println(""\nImena koja pocinju na s: "");
		
		for (String i : imena)
		{
			
			if (i.charAt(0) == 'S')
			{
				System.out.println(i);
			}
			
		}
		
		// izbaciti element sa pozicije 3
		
		imena.remove(3);
		System.out.println(""\n"" + imena);
		
		String uneto = ""Luka"";
		
		imena.remove(uneto);
		
		System.out.println(""\n"" + imena);
		
		// ZADATAK 2
		
		LinkedList<String> imenaIzFajla = ucitaj(""imena.txt"");
		System.out.println(imenaIzFajla);
		imenaIzFajla.addAll(imena);
		upisiUFajl(""novi.txt"", imenaIzFajla);
		
		
	}
	
	static LinkedList<String> ucitaj(String imeFajla) {
		
			LinkedList<String> imena = new LinkedList<String>();
			if (Svetovid.testIn(imeFajla))
			{
				while (Svetovid.in(imeFajla).hasMore())
				{
					String str = Svetovid.in(imeFajla).readLine();
					imena.add(str);
				}
				Svetovid.in(imeFajla).close();
			}
			return imena;
			
		}
		
		static void upisiUFajl(String imeFajla, LinkedList<String> s) {
		
			for (String ime : s)
			{
				Svetovid.out(imeFajla).println(ime);
			}
			Svetovid.out(imeFajla).close();
		}
	
}
		



"
DMuF6gau,Review Otet Markets,fxvnpro,PHP,Monday 13th of May 2024 06:20:31 AM CDT,"https://www.fxvnpro.com/review-otet-markets/
 
Welcome to Otet Markets, your ultimate destination for financial market trading solutions.



Our team consists of experienced professionals who are dedicated to providing our clients with the best possible trading experience. We specialize in Forex, Commodities, and Indices trading, offering a wide range of products and services designed to meet the diverse needs of our clients.



At Otet Markets, we believe that trust is the cornerstone of any successful business relationship. That is&nbsp;why we prioritize transparency and integrity in all our dealings. Our goal is to facilitate financial transactions and foster a profound sense of customer fulfillment. We build long-term relationships with our clients, based on mutual respect, professionalism, and an unwavering commitment to excellence.



We understand that each client is unique, which is why we offer tailored solutions to meet their individual needs. Whether you're a novice trader or an experienced investor, we have the tools and resources to help you achieve your financial goals. Our state-of-the-art trading platform is user-friendly and intuitive, making it easy for you to trade across multiple markets and instruments.



At Otet Markets, we pride ourselves on our customer-centric approach. Our knowledgeable customer support team is available 24/7 to assist you with any questions or concerns you may have. We and value any feedback and are always striving to improve our services to better serve your needs.



Thank you for choosing Otet Markets as your trusted partner in financial market trading.



We look forward to helping you achieve your investment objectives.



Broker Logo &nbsp;



BROKER INFORMATION



Broker TypeECNCompanyOtet Group LTDFoundation2023CountryThe Republic of Marshall IslandsRegulationOtet Group LTD&nbsp;is a financial brokerage company regulated by Comoros Union (MISA), licenseNo. T2023304 registration No. HY00523012 and also registered in the Republic of Marshall Islands,registration number 118922, Otet Markets has an Identification of legal financial activities (LEI)No. 254900HJ0CZRZVRN8C30 from Bloomberg.Minimum Initial Deposit$25Account Base CurrenciesUSDAccount Deposit MethodsPerfect Money, Skrill, Visa, The Kingdom Bank, Master Card, Tether, WebMoneyAccount Withdrawal MethodsPerfect Money, Skrill, Visa, The Kingdom Bank, Master Card, Tether, WebMoneyLive ChatYesEmail{mail}@otetmerkets.com{support}@otetmarkets.comCall+35725731042TelegramYes



ADVANTAGES



Free Demo AccountYesSpreadsMin/FloatingStop Out Level45% - Islamic Account50% - Classic/ECN/Premium AccountExecution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeYes (Islamic)PromotionsYesCopy TradingYesTrading Platforms&nbsp;Mobile App, MetaTrader 5, cTraderScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Energy, US Stocks, EU Stocks, Metals, Indices, Cryptos



DISADVANTAGES



RestrictionsThis website is not directed at any jurisdiction and is not intended for any use that would be contrary tolocal law or regulation. The service is not available for residents of Türkiye, Canada and the United States.
"
0yhGrpqk,Review Otet Markets,reviewbrokers,PHP,Monday 13th of May 2024 06:20:24 AM CDT,"https://www.reviewbrokers.net/review-otet-markets/
 
Welcome to Otet Markets, your ultimate destination for financial market trading solutions.



Our team consists of experienced professionals who are dedicated to providing our clients with the best possible trading experience. We specialize in Forex, Commodities, and Indices trading, offering a wide range of products and services designed to meet the diverse needs of our clients.



At Otet Markets, we believe that trust is the cornerstone of any successful business relationship. That is&nbsp;why we prioritize transparency and integrity in all our dealings. Our goal is to facilitate financial transactions and foster a profound sense of customer fulfillment. We build long-term relationships with our clients, based on mutual respect, professionalism, and an unwavering commitment to excellence.



We understand that each client is unique, which is why we offer tailored solutions to meet their individual needs. Whether you're a novice trader or an experienced investor, we have the tools and resources to help you achieve your financial goals. Our state-of-the-art trading platform is user-friendly and intuitive, making it easy for you to trade across multiple markets and instruments.



At Otet Markets, we pride ourselves on our customer-centric approach. Our knowledgeable customer support team is available 24/7 to assist you with any questions or concerns you may have. We and value any feedback and are always striving to improve our services to better serve your needs.



Thank you for choosing Otet Markets as your trusted partner in financial market trading.



We look forward to helping you achieve your investment objectives.



Broker Logo &nbsp;







Broker TypeECNCompanyOtet Group LTDFoundation2023CountryThe Republic of Marshall IslandsRegulationOtet Group LTD&nbsp;is a financial brokerage company regulated by Comoros Union (MISA), licenseNo. T2023304 registration No. HY00523012 and also registered in the Republic of Marshall Islands,registration number 118922, Otet Markets has an Identification of legal financial activities (LEI)No. 254900HJ0CZRZVRN8C30 from Bloomberg.&nbsp;The JurisdictionsThis website is not directed at any jurisdiction and is not intended for any use that would be contrary tolocal law or regulation. The service is not available for residents of Türkiye, Canada and the United States.Live ChatYesEmail{mail}@otetmerkets.com{support}@otetmarkets.comCall+35725731042TelegramYes







Free Demo AccountsYesMinimum Initial Deposit$25Multi-Currency AccountUSDSpreadsMin/FloatingStop Out Level45% - Islamic Account50% - Classic/ECN/Premium AccountIntroducing Brokers ProgramYesSwap FreeYes (Islamic)PromotionsYesCopy TradingYesTrading Platforms&nbsp;Mobile App, MetaTrader 5, cTraderScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsPerfect Money, Skrill, Visa, The Kingdom Bank, Master Card, Tether, WebMoney
"
