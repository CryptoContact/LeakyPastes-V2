id,title,username,language,date,content
FGDqjr98,eprb_simulation.adb,chemoelectric,Ada,Friday 25th of August 2023 04:52:04 PM CDT,"--********************************************************************
-- This is free and unencumbered software released into the public domain.

-- Anyone is free to copy, modify, publish, use, compile, sell, or
-- distribute this software, either in source code form or as a compiled
-- binary, for any purpose, commercial or non-commercial, and by any
-- means.

-- In jurisdictions that recognize copyright laws, the author or authors
-- of this software dedicate any and all copyright interest in the
-- software to the public domain. We make this dedication for the benefit
-- of the public at large and to the detriment of our heirs and
-- successors. We intend this dedication to be an overt act of
-- relinquishment in perpetuity of all present and future rights to this
-- software under copyright law.

-- THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
-- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-- IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
-- OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-- ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
-- OTHER DEALINGS IN THE SOFTWARE.

-- For more information, please refer to <https://unlicense.org>
----------------------------------------------------------------------

-- A simulation of an EPR-B experiment, demonstrating that ‘Bell’s
-- theorem’, which is described in the following reference, is wrong:

-- [1] J. S. Bell, ‘Bertlmann’s socks and the nature of reality’,
--     preprint, CERN-TH-2926 (1980).
--     http://cds.cern.ch/record/142461/ (Open access, CC BY 4.0)

-- The simulation is written in Ada—which, if carefully used, seems to
-- me a good language for conveying scientific algorithms. Also, a
-- free software Ada compiler is widely available: GCC. Many readers
-- can compile this program, optimized and with runtime checks, by
-- saving it in a file called ‘eprb_simulation.adb’ and then running
-- the command

--   gnatmake -O2 -gnata eprb_simulation

-- which will create an executable program called ‘eprb_simulation’.

-- Ada, simply put, seemed the best choice, among the programming
-- languages I felt comfortable using.

-- However, if you know another language, such as Fortran, Python, or
-- Common Lisp, it would be very useful for the reader’s understanding
-- to translate the program from Ada into the other language.

----------------------------------------------------------------------

pragma ada_2022;
pragma wide_character_encoding (utf8);

with ada.exceptions;
with ada.wide_wide_text_io;
with ada.containers.ordered_sets;
with ada.numerics;
with ada.numerics.generic_elementary_functions;

procedure eprb_simulation is

  subtype range_1_to_2 is integer range 1 .. 2;

  type scalar is digits 15;     -- double precision
  type scalar_pair is array (range_1_to_2) of scalar;

  use ada.wide_wide_text_io;
  use ada.numerics;

  package scalar_elementary_functions is
    new ada.numerics.generic_elementary_functions (scalar);
  use scalar_elementary_functions;

  package range_1_to_2_io is new integer_io (range_1_to_2);
  use range_1_to_2_io;

  package scalar_io is new float_io (scalar);
  use scalar_io;

  π     : constant scalar := pi;
  π_2   : constant scalar := π / 2.0;
  π_3   : constant scalar := π / 3.0;
  π_4   : constant scalar := π / 4.0;
  π_6   : constant scalar := π / 6.0;
  π_8   : constant scalar := π / 8.0;
  π_180 : constant scalar := π / 180.0;
  two_π : constant scalar := 2.0 * π;

  programmer_mistake : exception;

  function cos2 (x : scalar)
  return scalar is
  begin
    return cos (x) ** 2;
  end cos2;

  function sin2 (x : scalar)
  return scalar is
  begin
    return sin (x) ** 2;
  end sin2;

----------------------------------------------------------------------

  -- For the sake of reproducibility, let us write our own random
  -- number generator. It will be a simple linear congruential
  -- generator. The author has used one like it, in quicksorts and
  -- quickselects to select the pivot. It is good enough for our
  -- purpose.

  type uint64 is mod 2 ** 64;

  -- The multiplier lcg_a comes from Steele, Guy; Vigna, Sebastiano
  -- (28 September 2021). ‘Computationally easy, spectrally good
  -- multipliers for congruential pseudorandom number generators’.
  -- arXiv:2001.05304v3 [cs.DS]

  lcg_a : constant uint64 := 16#F1357AEA2E62A9C5#;

  -- The value of lcg_c is not critical, but should be odd.

  lcg_c : constant uint64 := 1;

  seed  : uint64 := 0;

  --
  -- random_scalar: returns a non-negative scalar less than 1.
  --
  function random_scalar
  return scalar
  with post => 0.0 <= random_scalar'result
                and random_scalar'result < 1.0 is
    randval : scalar;
  begin
    -- Take the high 48 bits of the seed and divide it by 2**48.
    randval := scalar (seed / (2**16)) / scalar (2**48);

    -- Update the seed.
    seed := (lcg_a * seed) + lcg_c;

    return randval;
  end random_scalar;

  --
  -- random_1_or_2: returns the integer 1 or the integer 2.
  --
  function random_1_or_2
  return range_1_to_2 is
  begin
    return (if random_scalar < 0.5 then 1 else 2);
  end random_1_or_2;

----------------------------------------------------------------------

  -- The simulation is of a two-arm optical experiments, involving
  -- sources of plane-polarized photon pairs, polarizing beam
  -- splitters, and photodetectors. There will be two versions of the
  -- simulation.

  -- Simulation A will be a ‘local realistic’ experiment.

  -- Simulation B will be a ‘quantum entanglement’ experiment.

----------------------------------------------------------------------

  -- In more detail, the objects of Simulation A, the ‘local
  -- realistic’ experiment, are as follows.

  -- There are light pulses that we shall call photons. These are
  -- randomly generated in pairs, which are oppositely
  -- plane-polarized, either horizontally or vertically. Call the
  -- polarization state φ. In our simulation, a photon also has a
  -- state called ρ, which is a non-negative number less than
  -- one. Thus the following is our representation:

  type φ_value is (horizontal, vertical);
  subtype ρ_value is scalar range 0.0 .. 1.0;

  type photon_A is
    record
      φ : φ_value;
      ρ : ρ_value;
    end record;

  -- Next after photons, there are two polarizing beam splitters (PBS)
  -- (https://en.wikipedia.org/w/index.php?title=Polarizer&oldid=1152014034#Beam-splitting_polarizers).
  -- These redirect photons in proportion to the Law of Malus
  -- (https://en.wikipedia.org/w/index.php?title=Polarizer&oldid=1152014034#Malus's_law_and_other_properties),
  -- altering the photons’ polarization angles φ. However, we will not
  -- care about the new value of φ.

  type pbs_A is
    record
      θ : scalar;               -- The angle of beam splitting.
    end record;

  -- Finally, there are four photodetectors
  -- (https://en.wikipedia.org/w/index.php?title=Photodetector&oldid=1168137030).
  -- These are ideal photodetectors, that detect incident photons
  -- without fail. They can detect only one photon at a time, but the
  -- experimental arrangement is such that they will encounter at most
  -- one at a time.

----------------------------------------------------------------------

  -- Here is a procedure that generates a (left,right) pair of photons
  -- at random. The correlated polarization angles are set by a system
  -- of randomly positioned polarizing filters, so angles can be
  -- recorded. The two polarizing filters can be separated from each
  -- other by any distance whatsoever, and there is no physical
  -- influence of one filter setting upon the other. The value of ρ is
  -- randomly generated separately for each photon, but not recorded.

  procedure generate_photon_A_pair (photon_left  : out photon_A;
                                    photon_right : out photon_A) is
  begin
    if random_1_or_2 = 1 then
      photon_left.φ := horizontal;
      photon_right.φ := vertical;
    else
      photon_left.φ := vertical;
      photon_right.φ := horizontal;
    end if;
    photon_left.ρ := random_scalar;
    photon_right.ρ := random_scalar;
  end generate_photon_A_pair;

----------------------------------------------------------------------

  -- The following procedure decides which of two photodetectors will
  -- detect the photon that enters a given PBS. The output of the
  -- procedure is the outputs of the two photodetectors. The photon
  -- will have its angle of polarization altered, but the
  -- photodetectors cannot measure angle of polarization, so that
  -- information is simply lost.

  procedure split_beam_A (photon    : photon_A;
                          pbs       : pbs_A;
                          detector1 : out boolean;
                          detector2 : out boolean) is
    φ : scalar;
  begin

    -- The Law of Malus tells us that the the square of the cosine of
    -- the angle between the plane of polarization and the plane of
    -- the PBS setting gives us the probability of transmission to
    -- detector1.

    -- The photon’s hidden variable ρ is used as the random value.

    φ := (if photon.φ = horizontal then 0.0 else π_2);
    if photon.ρ < cos2 (φ - pbs.θ) then
      detector1 := true;
      detector2 := false;
    else
      detector1 := false;
      detector2 := true;
    end if;

  end split_beam_A;

----------------------------------------------------------------------

  -- The function one_event_A, below, simulates an event of the
  -- simulation: from generation of a pair of photons to their
  -- measurement by four photodetectors. The settings of the two PBS
  -- are included in the output. The polarization angles of the
  -- photons are included, as well. The output is gathered into a
  -- record and given a unique identifier (so it can be stored in set
  -- objects).

  type identifier_tag is mod 2 ** 128; -- (Set to 2**64 if necessary.)
  current_identifier : identifier_tag := 0;

  type event_record is
    record
      identifier        : identifier_tag;
      θ_left, θ_right   : scalar := 0.0;
      φ_left, φ_right   : φ_value := horizontal;
      detector_left_1   : boolean := false;
      detector_left_2   : boolean := false;
      detector_right_1  : boolean := false;
      detector_right_2  : boolean := false;
    end record;

  function one_event_A (θ_L, θ_R : scalar)
  return event_record is
    ev           : event_record;
    pbs_left     : pbs_A;
    pbs_right    : pbs_A;
    photon_left  : photon_A;
    photon_right : photon_A;
  begin
    ev.identifier := current_identifier;
    current_identifier := current_identifier + 1;

    ev.θ_left := θ_L;
    pbs_left.θ := θ_L;

    ev.θ_right := θ_R;
    pbs_right.θ := θ_R;

    generate_photon_A_pair (photon_left, photon_right);
    ev.φ_left := photon_left.φ;
    ev.φ_right := photon_right.φ;

    split_beam_A (photon_left, pbs_left,
                  ev.detector_left_1, ev.detector_left_2);
    split_beam_A (photon_right, pbs_right,
                  ev.detector_right_1, ev.detector_right_2);

    return ev;
  end one_event_A;

----------------------------------------------------------------------

  -- We wish to simulate some number of events, and to gather the
  -- output records in a set. Here is where the set type is created.

  function ""<"" (a, b : event_record)
  return boolean is
  begin
    return (a.identifier < b.identifier);
  end ""<"";

  package event_record_sets is
    new ada.containers.ordered_sets (element_type => event_record);

----------------------------------------------------------------------

  -- The following function simulates a given number of events and
  -- gathers the output records into a set.

  function simulate_events_A (number_of_events : natural;
                              θ_L, θ_R         : scalar)
  return event_record_sets.set is
    use event_record_sets;
    events : set;
  begin
    for i in 1 .. number_of_events loop
      include (events, one_event_A (θ_L, θ_R));
    end loop;
    return events;
  end simulate_events_A;

----------------------------------------------------------------------

  -- For Simulation B, we must totally ignore the operations of the
  -- apparatus. Quantum mechanics follows Bohr’s doctrine that eschews
  -- cause-and-effect, as outside the realm of interest. Instead
  -- quantum mechanics simply tells us what the probabilities of
  -- different measurements are for a given experimental
  -- arrangement. This is all we are supposed to care about. Thus we
  -- do the simulation by calculating those probabilities and then
  -- rolling dice.

  -- The apparatus for Simulation B will be the same as for Simulation
  -- A, and it will be operated in the same way. However, we make no
  -- assumptions that photons have ρ values. Strictly speaking, we
  -- also do not assume they have φ values. Rather, it is the
  -- polarizing filters that have φ values. We know those values, and
  -- record them in the event records.

  -- (In some experiments people have actually run, there may be
  -- analogs of our φ values that are measured at the far ends of the
  -- experimental arms, rather than at the light source. Perhaps
  -- someone will object to Simulation B on grounds of this
  -- difference. Is Bell’s argument supposed to apply only to
  -- particular experimental arrangements? Or perhaps it is that
  -- photon pairs that have passed through polarizing filters have
  -- their ‘magic entanglement’ robbed from them? My guess is the
  -- objection would be a Schrödinger’s cat of all possible
  -- challenges. However, an actually curious but doubtful reader can
  -- modify this program to handle the different experimental
  -- arrangement. Doing so would be much more convincing than if I did
  -- the modification for them.)

  -- The only other measurements in the experiment are the PBS
  -- settings and the photodetector outputs. These, too, are recorded
  -- in the event records.

  -- Our task now is to calculate probabilities of different event
  -- records. That is what the formulas of quantum mechanics provide
  -- means to do in such a situation. It is what Niels Bohr considered
  -- all that physicists ought to expect of their work.

  -- But I do not know how to do the formulas of quantum mechanics. In
  -- my education, we got an introduction to quantum mechanics, but
  -- not one deep enough to learn the special language that is used in
  -- cases such as this. Instead I will use general methods of logical
  -- inference. These will solve the problem entirely, without any
  -- specialty knowledge.

  -- (That may come as a surprise to some quantum physicists, who are
  -- not so deep inside the circle that they cannot see what is going
  -- on outside it. They may have expected it impossible to solve a
  -- quantum mechanics problem without its special language and a
  -- benediction.)

  -- First of all, we must disabuse ourselves of Bell’s immensely
  -- ignorant assertions in [1], that it is possible to declare two
  -- variables ‘statistically independent’ on grounds that one cannot
  -- have a causal effect on the other. Nor can one do so on grounds
  -- of vague intuitions. Bell is doing nothing less than displaying
  -- to us his ignorance of the methods of scientific inference. To
  -- declare ‘statistical independence’, one must do nothing less than
  -- present a mathematical proof. In our case, there is no possible
  -- such proof, because the two variables are indubitably correlated:
  -- if one is a vertical polarization, then the other is certainly a
  -- horizontal polarization, and vice versa.

  -- Thus I have already shown that Bell is wrong, and thus the entire
  -- opus based on his claims is discredited. CHSH is wrong, Aspect is
  -- wrong, and so on, and so on. But let us continue nonetheless.

  -- We have disabused ourselves of Bell’s assertions, and instead
  -- will use the correct expressions. A scientist or engineer in
  -- practically any field except quantum physics would do the same,
  -- because these are general methods of logical inference.

  -- We will use notation as follows (and analogously throughout):

  --    P(hL1)    probability of horizontal left polarizing filter
  --              and a detection in left channel 1
  --    P(vR2)    probability of a vertical right polarizing filter
  --              and a detection in right channel 2
  --    P(vL2,vR1)  joint probability of vL2 and vR1
  --    P(vL2|vR1)  conditional probability of vL2, given vR1

  -- Calculations will be done separately for each pair of PBS
  -- settings, and thus the PBS settings need not be considered in the
  -- probabilities.

  -- To do LOGICAL INFERENCE correctly, one must use MATHEMATICAL
  -- THEOREMS, not physical or intuitive justifications such as Bell
  -- attempts. Thus it is not legal to write something like

  --    P(hL1,hR1) = P(hL1) × P(hR1)

  -- as Bell does. It is simply not allowed. There does not exist, in
  -- mathematics, any theorem one can cite to justify such a step. One
  -- MUST instead write one or the other of

  --    P(hL1,hR1) = P(hL1) × P(hR1|hL1)
  --    P(hL1,hR1) = P(hL1|hR1) × P(hR1)

  -- This is a form of Bayes’ theorem
  -- (https://en.wikipedia.org/w/index.php?title=Bayes%27_theorem&oldid=1171865590). (See
  -- my footnote on ‘Bayes’ theorem’.)

  -- Notice that the value of P(hL1,hR1) according to Bell’s incorrect
  -- calculation is a positive number. On the other hand, according to
  -- the correct expressions, the value is zero: it is impossible to
  -- have horizontally polarized filters simultaneously on both sides,
  -- and therefore the conditional probability factors are zero.

  -- Already we see a tangible demonstration that we cannot expect to
  -- get correct answers, if we reason as Bell does. Obviously there
  -- is no causal effect of one polarizing filter on the other. Their
  -- angles are correlated solely because they are set that way by a
  -- third device, whose nature is unimportant (though it probably
  -- would involve a system of shutters). Even so, we cannot write the
  -- expression Bell claims we can. We MUST use Bayes’ theorem.

  -- (Here is another example of the need to use Bayes’ theorem rather
  -- than arguments about causal influences—

  -- My father and I both uploaded some data about our DNAs to the
  -- same ‘family tree’ service. The service confirmed that our DNAs
  -- were about 50 percent similar, in whatever it was they
  -- measured. I am not a molecular biologist and do not understand
  -- these things. All I know is the two DNAs proved to be extremely
  -- alike. Now think about that coincidence. There was this powerful
  -- correlation between two samples of deoxyribonucleic acid. The
  -- only connection between them is they had a common origin in one
  -- organism, my father. There was no possible causal influence of
  -- one sample on the other.

  -- By Bell’s reasoning, the only explanation for the DNA service’s
  -- result is a spooky kind of action at a distance!

  -- Of course, in the field of genomics, such a conclusion would not
  -- be publishable. If a renowned genomicist gave a lecture and came
  -- to such a conclusion, it might be wise to call for
  -- paramedics. However, strange beliefs may be due to indoctrination
  -- rather than organic or conventional psychiatric causes, so the
  -- situation in quantum theory is different.)

  -- The experiment, then, is a very simple one. The correlations may
  -- be characterized thus: any conditional probability that has a ‘v’
  -- on both sides of the ‘|’ must equal zero. The same is true if
  -- instead of ‘v’ on both sides there is an ‘h’. Because excluding
  -- the possibility of either ‘h’ or ‘v’ from one arm removes half of
  -- the possible cases to choose from, the other conditional
  -- probabilities must each equal twice their equivalents without the
  -- condition. (That is, the denominator of the fraction is halved.)

  -- So let us write out the full set of probabilities, in the P
  -- notation:

  --    P(hL1,hR1) = 0
  --    P(hL1,hR2) = 0
  --    P(hL2,hR1) = 0
  --    P(hL2,hR2) = 0
  --    P(vL1,vR1) = 0
  --    P(vL1,vR2) = 0
  --    P(vL2,vR1) = 0
  --    P(vL2,vR2) = 0
  --    P(hL1,vR1) = P(hL1) × P(vR1|hL1) = P(hL1) × (2 × P(vR1))
  --    P(hL1,vR2) = P(hL1) × P(vR2|hL1) = P(hL1) × (2 × P(vR2))
  --    P(hL2,vR1) = P(hL2) × P(vR1|hL2) = P(hL2) × (2 × P(vR1))
  --    P(hL2,vR2) = P(hL2) × P(vR2|hL2) = P(hL2) × (2 × P(vR2))
  --    P(vL1,hR1) = P(vL1) × P(hR1|vL1) = P(vL1) × (2 × P(hR1))
  --    P(vL1,hR2) = P(vL1) × P(hR2|vL1) = P(vL1) × (2 × P(hR2))
  --    P(vL2,hR1) = P(vL2) × P(hR1|vL2) = P(vL2) × (2 × P(hR1))
  --    P(vL2,hR2) = P(vL2) × P(hR2|vL2) = P(vL2) × (2 × P(hR2))

  -- It remains to replace the P notations with more useful
  -- expressions. A PBS is still presumed to follow the cosine-squared
  -- rule, as in Simulation A. Also, the probability of either
  -- polarization filter setting is one half, resulting in a factor of
  -- ¼ in the joint probability. (This can be proved with Bayes’
  -- theorem.) Therefore:

  --    P(hL1,vR1) = 2 × P(hL1) × P(vR1) = ½ × cos²(θ_L) × sin²(θ_R)
  --    P(hL1,vR2) = 2 × P(hL1) × P(vR2) = ½ × cos²(θ_L) × cos²(θ_R)
  --    P(hL2,vR1) = 2 × P(hL2) × P(vR1) = ½ × sin²(θ_L) × sin²(θ_R)
  --    P(hL2,vR2) = 2 × P(hL2) × P(vR1) = ½ × sin²(θ_L) × cos²(θ_R)
  --    P(vL1,hR1) = 2 × P(vL1) × P(hR1) = ½ × sin²(θ_L) × cos²(θ_R)
  --    P(vL1,hR2) = 2 × P(vL1) × P(hR2) = ½ × sin²(θ_L) × sin²(θ_R)
  --    P(vL2,hR1) = 2 × P(vL2) × P(hR1) = ½ × cos²(θ_L) × cos²(θ_R)
  --    P(vL2,hR2) = 2 × P(vL2) × P(vR1) = ½ × cos²(θ_L) × sin²(θ_R)

  -- We should expect certain symmetries:

  --    P(hL1,vR2) = P(vL2,hR1) = ½ × cos²(θ_L) × cos²(θ_R)
  --    P(vL1,hR2) = P(hL2,vR1) = ½ × sin²(θ_L) × sin²(θ_R)
  --    P(hL2,vR2) = P(vL1,hR1) = ½ × sin²(θ_L) × cos²(θ_R)
  --    P(hL1,vR1) = P(vL2,hR2) = ½ × cos²(θ_L) × sin²(θ_R)

  -- Plugging in some numbers for θ_L and θ_R confirms that the sum of
  -- these joint probabilities is one.

  -- A good test that have indeed characterized the supposed ‘quantum
  -- entanglement’ will be our ability to ‘clamp’ probabilities to
  -- zero, by adjusting the PBS settings. It can be deduced, from the
  -- (incorrect) assumption in [1] of ‘statistical independence of a
  -- and b’, that such clamping ought to be impossible without ‘action
  -- at a distance’.

  -- Set θ_L=0 and θ_R=π_2. Then

  --    P(hL1,vR2) = P(vL2,hR1) = ½ × cos²(θ_L) × cos²(θ_R) = 0
  --    P(vL1,hR2) = P(hL2,vR1) = ½ × sin²(θ_L) × sin²(θ_R) = 0
  --    P(hL2,vR2) = P(vL1,hR1) = ½ × sin²(θ_L) × cos²(θ_R) = 0
  --    P(hL1,vR1) = P(vL2,hR2) = ½ × cos²(θ_L) × sin²(θ_R) = ½

  -- Thus there is definitely the supposed ‘quantum entanglement’.

  -- The same methods could be used to solve for the probabilities of
  -- the outcomes in the experiment described in the Wikipedia
  -- article. No knowledge of ‘Pauli matrices’ or ‘tensor products of
  -- vector spaces’ is needed. One need not know what a ‘bra-ket’ is.

  -- Here, then, is Simulation B. It is merely random generation of
  -- possible event records. However, that is all one should expect of
  -- a ‘simulation’ of quantum theory.

  function one_event_B (θ_L, θ_R : scalar)
  return event_record is
    ev        : event_record;
    P_hL1_vR2 : scalar;
    P_vL2_hR1 : scalar;
    P_vL1_hR2 : scalar;
    P_hL2_vR1 : scalar;
    P_hL2_vR2 : scalar;
    P_vL1_hR1 : scalar;
    P_hL1_vR1 : scalar;
    P_vL2_hR2 : scalar;
    r1, r2    : scalar;
    r3, r4    : scalar;
    r5, r6    : scalar;
    r7, r8    : scalar;
    r         : scalar;
  begin
    ev.identifier := current_identifier;
    current_identifier := current_identifier + 1;

    ev.θ_left := θ_L;
    ev.θ_right := θ_R;

    P_hL1_vR1 := 0.5 * cos2 (θ_L) * sin2 (θ_R);
    P_hL1_vR2 := 0.5 * cos2 (θ_L) * cos2 (θ_R);
    P_hL2_vR1 := 0.5 * sin2 (θ_L) * sin2 (θ_R);
    P_hL2_vR2 := 0.5 * sin2 (θ_L) * cos2 (θ_R);
    P_vL1_hR1 := 0.5 * sin2 (θ_L) * cos2 (θ_R);
    P_vL1_hR2 := 0.5 * sin2 (θ_L) * sin2 (θ_R);
    P_vL2_hR1 := 0.5 * cos2 (θ_L) * cos2 (θ_R);
    P_vL2_hR2 := 0.5 * cos2 (θ_L) * sin2 (θ_R);

    r1 := P_hL1_vR1;
    r2 := r1 + P_hL1_vR2;
    r3 := r2 + P_hL2_vR1;
    r4 := r3 + P_hL2_vR2;
    r5 := r4 + P_vL1_hR1;
    r6 := r5 + P_vL1_hR2;
    r7 := r6 + P_vL2_hR1;
    r8 := r7 + P_vL2_hR2;

    -- Sanity check.
    if abs (r8 - 1.0) > 50.0 * scalar'model_epsilon then
      raise programmer_mistake;
    end if;

    ev.detector_left_1 := false;
    ev.detector_left_2 := false;
    ev.detector_right_1 := false;
    ev.detector_right_2 := false;

    r := random_scalar;
    if r < r1 then
      -- P_hL1_vR1
      ev.φ_left := horizontal;
      ev.detector_left_1 := true;
      ev.detector_right_1 := true;
    elsif r < r2 then
    -- P_hL1_vR2
      ev.φ_left := horizontal;
      ev.detector_left_1 := true;
      ev.detector_right_2 := true;
    elsif r < r3 then
    -- P_hL2_vR1
      ev.φ_left := horizontal;
      ev.detector_left_2 := true;
      ev.detector_right_1 := true;
    elsif r < r4 then
    -- P_hL2_vR2
      ev.φ_left := horizontal;
      ev.detector_left_2 := true;
      ev.detector_right_2 := true;
    elsif r < r5 then
    -- P_vL1_hR1
      ev.φ_left := vertical;
      ev.detector_left_1 := true;
      ev.detector_right_1 := true;
    elsif r < r6 then
    -- P_vL1_hR2
      ev.φ_left := vertical;
      ev.detector_left_1 := true;
      ev.detector_right_2 := true;
    elsif r < r7 then
    -- P_vL2_hR1
      ev.φ_left := vertical;
      ev.detector_left_2 := true;
      ev.detector_right_1 := true;
    else
    -- P_vL2_hR2
      ev.φ_left := vertical;
      ev.detector_left_2 := true;
      ev.detector_right_2 := true;
    end if;

    if ev.φ_left = vertical then
      ev.φ_right := horizontal;
    else
      ev.φ_right := vertical;
    end if;

    return ev;
  end one_event_B;

  function simulate_events_B (number_of_events : natural;
                              θ_L, θ_R         : scalar)
  return event_record_sets.set is
    use event_record_sets;
    events : set;
  begin
    for i in 1 .. number_of_events loop
      include (events, one_event_B (θ_L, θ_R));
    end loop;
    return events;
  end simulate_events_B;

  ----------------------------------------------------------------------

  -- The following function calculates the frequencies of detections
  -- in a set of event records, so these frequencies can be compared
  -- to the probabilities.

  type detections_array is
    array (φ_value,     -- Setting of the left-side polarizing filter.
           range_1_to_2, -- Which detector was activated on the left.
           range_1_to_2) -- Which detector was activated on the right.
           of scalar;

  function detections_frequencies (events : event_record_sets.set)
  return detections_array is
    use event_record_sets;

    a    : detections_array;

    procedure initialize is
    begin
      for i in φ_value loop
        for j in range_1_to_2 loop
          for k in range_1_to_2 loop
            a(i, j, k) := 0.0;
          end loop;
        end loop;
      end loop;
    end initialize;

    procedure count is
      curs : cursor;
      ev   : event_record;

      procedure check_record is
      begin
        if ev.φ_left = horizontal and ev.φ_right = horizontal then
          raise programmer_mistake;
        end if;
        if ev.φ_left = vertical and ev.φ_right = vertical then
          raise programmer_mistake;
        end if;
        if not (ev.detector_left_1 xor ev.detector_left_2) then
          raise programmer_mistake;
        end if;
        if not (ev.detector_right_1 xor ev.detector_right_2) then
          raise programmer_mistake;
        end if;
      end check_record;

    begin
      curs := first (events);
      while has_element (curs) loop
        ev := element (curs);
        check_record;
        if ev.detector_left_1 then
          if ev.detector_right_1 then
            a(ev.φ_left, 1, 1) := @ + 1.0;
          else
            a(ev.φ_left, 1, 2) := @ + 1.0;
          end if;
        else
          if ev.detector_right_1 then
            a(ev.φ_left, 2, 1) := @ + 1.0;
          else
            a(ev.φ_left, 2, 2) := @ + 1.0;
          end if;
        end if;
        curs := next (curs);
      end loop;
    end count;

    procedure normalize is
      n : scalar;
    begin
      n := scalar (length (events));
      for i in φ_value loop
        for j in range_1_to_2 loop
          for k in range_1_to_2 loop
            a(i, j, k) := a(i, j, k) / n;
          end loop;
        end loop;
      end loop;
    end normalize;

  begin
    initialize;
    count;
    normalize;
    return a;
  end detections_frequencies;

  ----------------------------------------------------------------------

  -- The following function fills in a detections_array with the
  -- probabilities themselves, rather than simulated frequencies.

  function detections_probabilities (θ_L, θ_R : scalar)
  return detections_array is
    a : detections_array;
  begin
    a(horizontal, 1, 1) := 0.5 * cos2 (θ_L) * sin2 (θ_R);
    a(horizontal, 1, 2) := 0.5 * cos2 (θ_L) * cos2 (θ_R);
    a(horizontal, 2, 1) := 0.5 * sin2 (θ_L) * sin2 (θ_R);
    a(horizontal, 2, 2) := 0.5 * sin2 (θ_L) * cos2 (θ_R);
    a(vertical, 1, 1) := 0.5 * sin2 (θ_L) * cos2 (θ_R);
    a(vertical, 1, 2) := 0.5 * sin2 (θ_L) * sin2 (θ_R);
    a(vertical, 2, 1) := 0.5 * cos2 (θ_L) * cos2 (θ_R);
    a(vertical, 2, 2) := 0.5 * cos2 (θ_L) * sin2 (θ_R);
    return a;
  end detections_probabilities;

  ----------------------------------------------------------------------

begin

  -- The main program.

  declare
    number_of_events   : natural;
    θ_L, θ_R           : scalar;
    events_A, events_B : event_record_sets.set;
    probabilities      : detections_array;
    frequencies_A      : detections_array;
    frequencies_B      : detections_array;
    φ                  : φ_value;
    i, j               : range_1_to_2;
  begin
    seed := 1234;
    number_of_events := 1000000;

    for i in 1 .. 4 loop
      if i = 1 then
        θ_L := π / 4.0;
        θ_R := 2.0 * π / 3.0;
      else
        θ_L := π_2 * random_scalar;
        θ_R := π_2 * random_scalar;
      end if;

      events_A := simulate_events_A (number_of_events, θ_L, θ_R);
      events_B := simulate_events_B (number_of_events, θ_L, θ_R);

      probabilities := detections_probabilities (θ_L, θ_R);
      frequencies_A := detections_frequencies (events_A);
      frequencies_B := detections_frequencies (events_B);

      new_line;

      set_col (2);
      put (""PBS left  θ"");
      set_col (15);
      put (θ_L / π_180, 3, 5, 0);
      new_line;

      set_col (2);
      put (""PBS right θ"");
      set_col (15);
      put (θ_R / π_180, 3, 5, 0);
      new_line;

      set_col (5);
      put (""φ"");

      set_col (10);
      put (""detec L"");

      set_col (20);
      put (""detec R"");

      set_col (30);
      put (""probability"");

      set_col (44);
      put (""freq classical"");

      set_col (60);
      put (""freq quantum"");

      for φ in φ_value loop
        for i in range_1_to_2 loop
          for j in range_1_to_2 loop

            set_col (4);
            if φ in horizontal then
              put (""H/V"");
            else
              put (""V/H"");
            end if;

            set_col (13);
            put (i, 1);

            set_col (23);
            put (j, 1);

            set_col (30);
            put (probabilities(φ, i, j), 3, 5, 0);

            set_col (45);
            put (frequencies_A(φ, i, j), 3, 5, 0);

            set_col (60);
            put (frequencies_B(φ, i, j), 3, 5, 0);

          end loop;
        end loop;
      end loop;

      new_line;

    end loop;

    new_line;
  end;

end eprb_simulation;

----------------------------------------------------------------------

-- The output of the program should look something like the following,
-- demonstrating that both the classical and quantum simulations
-- approximate the quantum predictions.


--  PBS left  θ   45.00000
--  PBS right θ  120.00000
--     φ    detec L   detec R   probability   freq classical  freq quantum
--    H/V      1         1        0.18750        0.18709        0.18705
--    H/V      1         2        0.06250        0.06252        0.06234
--    H/V      2         1        0.18750        0.18646        0.18788
--    H/V      2         2        0.06250        0.06223        0.06256
--    V/H      1         1        0.06250        0.06263        0.06275
--    V/H      1         2        0.18750        0.18838        0.18733
--    V/H      2         1        0.06250        0.06258        0.06256
--    V/H      2         2        0.18750        0.18809        0.18752

--  PBS left  θ   35.40353
--  PBS right θ   58.09312
--     φ    detec L   detec R   probability   freq classical  freq quantum
--    H/V      1         1        0.23939        0.23912        0.23933
--    H/V      1         2        0.09280        0.09297        0.09271
--    H/V      2         1        0.12093        0.12105        0.12094
--    H/V      2         2        0.04688        0.04711        0.04710
--    V/H      1         1        0.04688        0.04661        0.04698
--    V/H      1         2        0.12093        0.12076        0.12101
--    V/H      2         1        0.09280        0.09265        0.09259
--    V/H      2         2        0.23939        0.23973        0.23933

--  PBS left  θ   25.34591
--  PBS right θ   89.05482
--     φ    detec L   detec R   probability   freq classical  freq quantum
--    H/V      1         1        0.40826        0.40835        0.40873
--    H/V      1         2        0.00011        0.00011        0.00010
--    H/V      2         1        0.09160        0.09127        0.09122
--    H/V      2         2        0.00002        0.00003        0.00002
--    V/H      1         1        0.00002        0.00002        0.00002
--    V/H      1         2        0.09160        0.09147        0.09224
--    V/H      2         1        0.00011        0.00011        0.00010
--    V/H      2         2        0.40826        0.40864        0.40758

--  PBS left  θ   75.33916
--  PBS right θ   76.26485
--     φ    detec L   detec R   probability   freq classical  freq quantum
--    H/V      1         1        0.03022        0.03033        0.03039
--    H/V      1         2        0.00181        0.00183        0.00181
--    H/V      2         1        0.44159        0.44165        0.44100
--    H/V      2         2        0.02638        0.02656        0.02618
--    V/H      1         1        0.02638        0.02653        0.02636
--    V/H      1         2        0.44159        0.44117        0.44220
--    V/H      2         1        0.00181        0.00178        0.00180
--    V/H      2         2        0.03022        0.03015        0.03026

----------------------------------------------------------------------

-- Afterword:

-- Of course, Simulation A also is soluble in closed form by
-- probability theory. And you will find that its closed form solution
-- is exactly the same as that of Simulation B. As, of course, it must
-- be.

-- The problem with ‘Bell’s theorem’ is that Bell obviously did not
-- know any probability theory. He only pretended to know
-- probability theory, and then he solved our Simulation A, and
-- every problem in its class, incorrectly. He did not know how to
-- do scientific inference, and he found an audience that also did
-- not know how to do it.

-- Perhaps it is the case to this day that quantum physicists do not
-- realize ‘quantum’ problems can be solved without quantum
-- theory. They believe in the magic of their incantations. In any
-- case, methods of scientific inference are not taught to quantum
-- physics students. What can be solved by scientific inference
-- probably involves cause and effect by contact action, not
-- ‘entanglement’ and ‘non-locality’. Restricting the teaching to the
-- special incantations of quantum theory, and to the set of magic
-- doctrines that accompany the incantations, neatly does its
-- work. The students come out of their lessons believing in magic and
-- telling the public that it is ‘science’.

----------------------------------------------------------------------

-- A footnote on ‘Bayes’ theorem’:

-- We should ignore all the stuff on the ‘Bayes’ theorem’ Wikipedia
-- page about ‘Interpretations’. Such disputes are a topic separate
-- from what we are dealing with here. What matters to us is that
-- probability theory done properly is FORMAL, not merely a batch of
-- intuitions.

-- By far most specialists in mathematics regard probability theory as
-- a subset of ‘measure theory’, which is a kind of generalization of
-- the notion of areas. Problems concerning various sets of interest
-- to mathematicians tend to be discussed.

-- Alternatively, probability theory can be built up as a very
-- carefully devised generalization of boolean logic, specifically
-- designed for the task of logical inference. This form of
-- probability theory is probably more useful to empirical scientists
-- and engineers than is the other.

-- Either form of probability works for us, because in either form of
-- probability theory the theorems that we use are the same.

--********************************************************************
-- Some instructions for the Emacs text editor.
-- local variables:
-- mode: indented-text
-- tab-width: 2
-- end:
"
4hwcdzER,CodinGame_2023_08_25__23_35_19__char_int.cpp,MonsterScripter,C++,Friday 25th of August 2023 04:35:44 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>

using namespace std;

/**
 * 	Objectif
 * Dans une chaîne S, remplacez chaque caractère (y compris les caractères non alphanumériques) par un entier représentant combien de fois il est apparu jusqu'à présent dans la chaîne. SENSIBLE À LA CASSE
 * 
 * Entrée :
 * Une chaîne S
 * 
 * Sortie :
 * Une chaîne de nombres représentant combien de fois chaque caractère (insensible à la casse) est apparu jusqu'à présent dans la chaîne.
 * 
 * Contraintes :
 * 0 < Longueur de S < 256
 * 
 * Exemple :
 * Entrée
 * aAabBc
 * Sortie
 * 123121
 */

int main()
{
    string s;
    getline(cin, s);
    int *arr = new int[256];
    for (char c : s) {
        char newC = std::tolower(c, std::locale());
        arr[newC]++;
        cout << arr[newC];
    }
    cout << endl;
    delete[] arr; // Libère la mémoire allouée
    exit(EXIT_SUCCESS);
}
"
4ZBgGZRW,CodinGame_2023_08_25__23_18_58__fibonacci.cpp,MonsterScripter,C++,Friday 25th of August 2023 04:19:33 PM CDT,"#include <iostream>
#include <string>
#include <cstdlib>

using namespace std;

/**
 * 	Objectif
 * La suite de Fibonacci est une suite infinie qui commence par deux 1. En continuation, la somme des deux derniers nombres de la suite donnera le prochain nombre de la suite.
 * Les huit premiers éléments de la suite de Fibonacci sont : 1, 1, 2, 3, 5, 8, 13, 21.
 * Votre tâche consiste à calculer une liste des N premiers nombres de la suite de Fibonacci et à l'utiliser pour masquer une chaîne.
 * 
 * Entrée :
 * Ligne 1 : N, le nombre de nombres de Fibonacci à calculer.
 * Ligne 2 : ch, un seul caractère.
 * 
 * Sortie :
 * Les N prochaines lignes : un mot composé uniquement du caractère ch, qui est répété autant de fois que le nombre de Fibonacci à la position N.
 * 
 * Contraintes :
 * 2 <= N <= 12
 * 
 * Exemple :
 * Entrée
 * 3
 * #
 * Sortie
 * #
 * #
 * ##
 */

int main()
{
    int n;
    cin >> n; cin.ignore();
    string ch;
    getline(cin, ch);
    int f1 = 1;
    int f2 = 1;
    cout << ch << endl;
    cout << ch << endl;
    for (int i = 0; i < n - 2; i++) {
        int f3 = f1 + f2;
        f1 = f2;
        f2 = f3;
        for (int j = 0; j < f3; j++)
            cout << ch;
        cout << endl;
    }
    exit(EXIT_SUCCESS);
}
"
zidBvep8,CodinGame_2023_08_25__22_42_18__shifumi.cpp,MonsterScripter,C++,Friday 25th of August 2023 03:43:04 PM CDT,"#include <iostream>
#include <string>
#include <map>
#include <cstdlib>

using namespace std;

/**
 * 	Objectif
 * Vous jouez à Shifumi (Pierre, Papier, Ciseaux) avec un adversaire.
 * Vous et votre adversaire pouvez jouer Pierre, Papier ou Ciseaux, ou toute autre valeur de chaîne.
 * Règles du Shifumi :
 * - Les Ciseaux gagnent contre la main.
 * - La Main gagne contre la Pierre.
 * - La Pierre gagne contre les Ciseaux.
 * - Si votre adversaire joue autre chose que Ciseaux, Main ou Pierre, vous devez lui dire ""Error"" pour gagner.
 * Vous devez produire le coup gagnant.
 * 
 * Entrée :
 * Une chaîne unique 'o' qui doit avoir l'une des valeurs suivantes : Ciseaux, Main, Pierre.
 * Mais une chaîne de toute autre valeur peut également être donnée !
 * 
 * Sortie :
 * Une chaîne unique avec l'une des valeurs suivantes : Ciseaux, Main, Pierre, Error.
 * 
 * Contraintes :
 * 1 < longueur de 'o' <= 256
 * 
 * Exemple :
 * Entrée
 * Scissors
 * Sortie
 * Stone
 */

int main()
{
    string o;
    getline(cin, o);
    map<string, string> m {
        {""Stone"", ""Hand""}, 
        {""Hand"", ""Scissors""}, 
        {""Scissors"", ""Stone""}
    };
    cout << (m.find(o) != m.end() ? m[o] : ""Error"") << endl;
    exit(EXIT_SUCCESS);
}
"
HPQ6frGc,al-bowlly-heartaches,LukeTech,Lua,Friday 25th of August 2023 03:42:24 PM CDT,"F4 1,
w 0.3333335,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.5013891395833333,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,F4 0,
w 0.0013888895833333334,D#4 1,
w 0.3333335,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.5013891395833333,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,B3 1,D4 1,F4 1,
w 0.16527786041666667,B3 0,D4 0,F4 0,
w 0.5013891395833333,B3 1,D4 1,F4 1,
w 0.16527786041666667,B3 0,D4 0,F4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.5013891395833333,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.16666675,F4 0,
w 0.33472238958333334,D#4 1,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,F4 1,
w 0.3319446104166667,F4 0,
w 0.0013888895833333334,G4 1,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,A#4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,G#4 1,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,D#5 1,
w 0.3319446104166667,D#5 0,
w 0.0013888895833333334,G#4 1,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,F#4 1,
w 0.3333335,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.5013891395833333,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,F#4 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,C4 1,D#4 1,A4 1,
w 0.16527786041666667,C4 0,D#4 0,A4 0,
w 0.16805563958333333,A4 1,
w 0.3333335,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,A4 0,
w 0.33472238958333334,C#5 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,C#5 0,
w 0.0013888895833333334,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,A#4 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,F4 0,A4 1,F#4 1,
w 0.3319446104166667,A4 0,F#4 0,
w 0.0013888895833333334,A#4 1,G4 1,A#3 1,C#4 1,D#4 1,
w 0.16527786041666667,A#3 0,C#4 0,D#4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,C#4 1,A#3 1,D#4 1,
w 0.16527786041666667,A#3 0,D#4 0,
w 0.16666675,C#4 0,
w 0.0013888895833333334,G4 0,A#4 1,F4 1,
w 0.3319446104166667,A#4 0,F4 0,
w 0.0013888895833333334,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16805563958333333,F4 1,C4 1,
w 0.3319446104166667,F4 0,C4 0,
w 0.0013888895833333334,G#4 1,D#4 1,
w 0.666667,C4 1,
w 0.16527786041666667,C4 0,
w 0.5013891395833333,C4 1,
w 0.16527786041666667,C4 0,
w 0.16666675,G#4 0,D#4 0,
w 0.33472238958333334,C5 1,F4 1,A#3 1,D4 1,G#4 1,
w 0.16527786041666667,A#3 0,D4 0,G#4 0,
w 0.16666675,C5 0,
w 0.0013888895833333334,A#4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,G#4 1,A#3 1,D4 1,
w 0.16527786041666667,A#3 0,D4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,F4 0,G4 1,D4 1,
w 0.3319446104166667,G4 0,
w 0.0013888895833333334,G#4 1,A#3 1,F4 1,
w 0.16527786041666667,A#3 0,F4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,D4 0,A#4 1,F4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,D4 1,A#3 1,G#4 1,
w 0.16527786041666667,A#3 0,G#4 0,
w 0.16666675,D4 0,
w 0.0013888895833333334,F4 0,G#4 1,C#4 1,
w 0.3333335,A#3 1,E4 1,
w 0.16527786041666667,A#3 0,E4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,A#3 1,D#4 1,
w 0.16527786041666667,A#3 0,D#4 0,
w 0.16805563958333333,C#4 0,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,B4 1,A#3 1,C#4 1,D#4 1,
w 0.16527786041666667,A#3 0,C#4 0,D#4 0,
w 0.16666675,B4 0,
w 0.0013888895833333334,A#4 1,
w 0.3333335,A#3 1,C#4 1,D#4 1,
w 0.16527786041666667,A#3 0,C#4 0,D#4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,G4 0,F4 1,
w 0.3333335,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.5013891395833333,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,F4 0,
w 0.0013888895833333334,D#4 1,
w 0.3333335,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.5013891395833333,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,B3 1,D4 1,F4 1,
w 0.16527786041666667,B3 0,D4 0,F4 0,
w 0.5013891395833333,B3 1,D4 1,F4 1,
w 0.16527786041666667,G4 0,B3 0,D4 0,F4 0,
w 0.0013888895833333334,F#4 1,
w 0.08194448541666667,F#4 0,
w 0.0013888895833333334,G4 1,
w 0.08194448541666667,G4 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.5013891395833333,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.16666675,F4 0,
w 0.33472238958333334,D#4 1,C4 1,G4 1,G#4 1,
w 0.16527786041666667,C4 0,G4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,F4 1,
w 0.3319446104166667,F4 0,
w 0.0013888895833333334,G4 1,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,A#4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,G#4 1,C4 1,D#4 1,G4 1,
w 0.16527786041666667,C4 0,D#4 0,G4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,D#5 1,
w 0.3319446104166667,D#5 0,
w 0.0013888895833333334,D5 1,B3 1,D4 1,F#4 1,
w 0.16527786041666667,B3 0,D4 0,F#4 0,
w 0.16666675,D5 0,
w 0.0013888895833333334,C#5 1,
w 0.3333335,A#3 1,C#4 1,E4 1,F#4 1,
w 0.16527786041666667,A#3 0,C#4 0,E4 0,F#4 0,
w 0.5013891395833333,A#3 1,C#4 1,E4 1,F#4 1,
w 0.16527786041666667,A#3 0,C#4 0,E4 0,F#4 0,
w 0.16666675,C#5 0,
w 0.0013888895833333334,C5 1,
w 0.3333335,C4 1,D#4 1,F4 1,A4 1,
w 0.16527786041666667,C4 0,D#4 0,F4 0,A4 0,
w 0.5013891395833333,C4 1,D#4 1,F4 1,A4 1,
w 0.16527786041666667,C4 0,D#4 0,F4 0,A4 0,
w 0.16666675,C5 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,C#5 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,C#5 0,
w 0.0013888895833333334,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,C#5 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,F4 0,C#5 0,
w 0.0013888895833333334,C5 1,E4 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,A#4 1,A#3 1,C#4 1,G#4 1,
w 0.16527786041666667,A#3 0,C#4 0,G#4 0,
w 0.50000025,A#4 0,
w 0.0013888895833333334,B4 1,A#3 1,C#4 1,G#4 1,
w 0.16527786041666667,A#3 0,C#4 0,G#4 0,
w 0.16666675,E4 0,B4 0,
w 0.0013888895833333334,C5 1,D#4 1,
w 0.3333335,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,C5 0,
w 0.0013888895833333334,G4 1,
w 0.3319446104166667,D#4 0,
w 0.0013888895833333334,A#4 1,D4 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.0013888895833333334,G4 0,
w 0.50000025,A#3 1,F4 1,
w 0.16527786041666667,A#3 0,F4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,G#4 1,
w 0.3333335,A#3 1,F4 1,
w 0.16527786041666667,A#3 0,F4 0,
w 0.16666675,D4 0,G#4 0,
w 0.0013888895833333334,F4 1,C#5 1,
w 0.3333335,C#4 1,D#4 1,G#4 1,
w 0.16527786041666667,C#4 0,D#4 0,G#4 0,
w 0.16666675,F4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,C#4 1,D#4 1,F4 1,G#4 1,
w 0.16527786041666667,C#4 0,D#4 0,F4 0,G#4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,C#5 0,D#5 1,G5 1,
w 0.3333335,C#4 1,D#4 1,G4 1,A#4 1,
w 0.16527786041666667,C#4 0,D#4 0,G4 0,A#4 0,
w 0.16666675,D#5 0,
w 0.0013888895833333334,C5 1,
w 0.3333335,C#4 1,D#4 1,G4 1,A#4 1,
w 0.16527786041666667,C#4 0,D#4 0,G4 0,A#4 0,
w 0.16666675,C5 0,
w 0.0013888895833333334,G5 0,G#4 1,
w 0.16527786041666667,G#4 0,
w 0.16805563958333333,C5 1,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C5 0,C4 0,D#4 0,G#4 0,
w 0.16805563958333333,D#5 1,
w 0.16527786041666667,D#5 0,
w 0.16805563958333333,D5 1,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,D5 0,C4 0,D#4 0,G#4 0,
w 0.16805563958333333,C#5 1,
w 0.16527786041666667,C#5 0,
w 0.16805563958333333,A#4 1,C#4 1,D#4 1,G4 1,
w 0.16527786041666667,A#4 0,C#4 0,D#4 0,G4 0,
w 0.16805563958333333,G4 1,
w 0.16527786041666667,G4 0,
w 0.16805563958333333,D#4 1,C#4 1,G4 1,A#4 1,
w 0.16527786041666667,D#4 0,C#4 0,G4 0,A#4 0,F4 1,
w 0.3333335,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.5013891395833333,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,F4 0,
w 0.0013888895833333334,D#4 1,
w 0.3333335,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.5013891395833333,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,B3 1,D4 1,F4 1,
w 0.16527786041666667,B3 0,D4 0,F4 0,
w 0.5013891395833333,B3 1,D4 1,F4 1,
w 0.16527786041666667,B3 0,D4 0,F4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.5013891395833333,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.16666675,F4 0,
w 0.33472238958333334,D#4 1,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,F4 1,
w 0.3319446104166667,F4 0,
w 0.0013888895833333334,G4 1,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,A#4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,G#4 1,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,D#5 1,
w 0.3319446104166667,D#5 0,
w 0.0013888895833333334,G#4 1,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,F#4 1,
w 0.3333335,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.5013891395833333,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,F#4 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,C4 1,D#4 1,A4 1,
w 0.16527786041666667,C4 0,D#4 0,A4 0,
w 0.16805563958333333,A4 1,
w 0.3333335,C4 1,D#4 1,
w 0.16527786041666667,C4 0,D#4 0,
w 0.16666675,A4 0,
w 0.33472238958333334,C#5 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,C#5 0,
w 0.0013888895833333334,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,A#4 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,F4 0,A4 1,F#4 1,
w 0.3319446104166667,A4 0,F#4 0,
w 0.0013888895833333334,A#4 1,G4 1,A#3 1,C#4 1,D#4 1,
w 0.16527786041666667,A#3 0,C#4 0,D#4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,C#4 1,A#3 1,D#4 1,
w 0.16527786041666667,A#3 0,D#4 0,
w 0.16666675,C#4 0,
w 0.0013888895833333334,G4 0,A#4 1,F4 1,
w 0.3319446104166667,A#4 0,F4 0,
w 0.0013888895833333334,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16805563958333333,F4 1,C4 1,
w 0.3319446104166667,F4 0,
w 0.0013888895833333334,G#4 1,D#4 1,
w 0.16666675,C4 0,
w 0.50000025,C4 1,
w 0.16527786041666667,C4 0,
w 0.5013891395833333,C4 1,
w 0.16527786041666667,C4 0,
w 0.16666675,G#4 0,D#4 0,
w 0.33472238958333334,C5 1,F4 1,A#3 1,D4 1,G#4 1,
w 0.16527786041666667,A#3 0,D4 0,G#4 0,
w 0.16666675,C5 0,
w 0.0013888895833333334,A#4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,G#4 1,A#3 1,D4 1,
w 0.16527786041666667,A#3 0,D4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,F4 0,G4 1,D4 1,
w 0.3319446104166667,G4 0,
w 0.0013888895833333334,G#4 1,A#3 1,F4 1,
w 0.16527786041666667,A#3 0,F4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,D4 0,A#4 1,F4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,D4 1,A#3 1,G#4 1,
w 0.16527786041666667,A#3 0,G#4 0,
w 0.16666675,D4 0,
w 0.0013888895833333334,F4 0,G#4 1,C#4 1,
w 0.3333335,A#3 1,E4 1,
w 0.16527786041666667,A#3 0,E4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,A#3 1,D#4 1,
w 0.16527786041666667,A#3 0,D#4 0,
w 0.16805563958333333,C#4 0,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,B4 1,A#3 1,C#4 1,D#4 1,
w 0.16527786041666667,A#3 0,C#4 0,D#4 0,
w 0.16666675,B4 0,
w 0.0013888895833333334,A#4 1,
w 0.3333335,A#3 1,C#4 1,D#4 1,
w 0.16527786041666667,A#3 0,C#4 0,D#4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,G4 0,F4 1,
w 0.3333335,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.5013891395833333,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,F4 0,
w 0.0013888895833333334,D#4 1,
w 0.3333335,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.5013891395833333,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,B3 1,D4 1,F4 1,
w 0.16527786041666667,B3 0,D4 0,F4 0,
w 0.5013891395833333,B3 1,D4 1,F4 1,
w 0.16527786041666667,G4 0,B3 0,D4 0,F4 0,
w 0.0013888895833333334,F#4 1,
w 0.08194448541666667,F#4 0,
w 0.0013888895833333334,G4 1,
w 0.08194448541666667,G4 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.5013891395833333,B3 1,D4 1,G4 1,
w 0.16527786041666667,B3 0,D4 0,G4 0,
w 0.16666675,F4 0,
w 0.33472238958333334,D#4 1,C4 1,G4 1,G#4 1,
w 0.16527786041666667,C4 0,G4 0,G#4 0,
w 0.16666675,D#4 0,
w 0.0013888895833333334,F4 1,
w 0.3319446104166667,F4 0,
w 0.0013888895833333334,G4 1,C4 1,D#4 1,G#4 1,
w 0.16527786041666667,C4 0,D#4 0,G#4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,A#4 1,
w 0.3319446104166667,A#4 0,
w 0.0013888895833333334,G#4 1,C4 1,D#4 1,G4 1,
w 0.16527786041666667,C4 0,D#4 0,G4 0,
w 0.16666675,G#4 0,
w 0.0013888895833333334,D#5 1,
w 0.3319446104166667,D#5 0,
w 0.0013888895833333334,D5 1,B3 1,D4 1,F#4 1,
w 0.16527786041666667,B3 0,D4 0,F#4 0,
w 0.16666675,D5 0,
w 0.0013888895833333334,C#5 1,
w 0.3333335,A#3 1,C#4 1,E4 1,F#4 1,
w 0.16527786041666667,A#3 0,C#4 0,E4 0,F#4 0,
w 0.5013891395833333,A#3 1,C#4 1,E4 1,F#4 1,
w 0.16527786041666667,A#3 0,C#4 0,E4 0,F#4 0,
w 0.16666675,C#5 0,
w 0.0013888895833333334,C5 1,
w 0.3333335,C4 1,D#4 1,F4 1,A4 1,
w 0.16527786041666667,C4 0,D#4 0,F4 0,A4 0,
w 0.5013891395833333,C4 1,D#4 1,F4 1,A4 1,
w 0.16527786041666667,C4 0,D#4 0,F4 0,A4 0,
w 0.16666675,C5 0,
w 0.0013888895833333334,F4 1,
w 0.3333335,C#5 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,C#5 0,
w 0.0013888895833333334,C5 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,C#5 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.16666675,F4 0,C#5 0,
w 0.0013888895833333334,C5 1,E4 1,
w 0.3319446104166667,C5 0,
w 0.0013888895833333334,A#4 1,A#3 1,C#4 1,G#4 1,
w 0.16527786041666667,A#3 0,C#4 0,G#4 0,
w 0.50000025,A#4 0,
w 0.0013888895833333334,B4 1,A#3 1,C#4 1,G#4 1,
w 0.16527786041666667,A#3 0,C#4 0,G#4 0,
w 0.16666675,E4 0,B4 0,
w 0.0013888895833333334,C5 1,D#4 1,
w 0.3333335,C4 1,G#4 1,
w 0.16527786041666667,C4 0,G#4 0,
w 0.16666675,C5 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,A#4 1,D4 1,A#3 1,C#4 1,
w 0.16527786041666667,A#3 0,C#4 0,
w 0.0013888895833333334,D#4 0,G4 0,
w 0.50000025,A#3 1,F4 1,
w 0.16527786041666667,A#3 0,F4 0,
w 0.16666675,A#4 0,
w 0.0013888895833333334,G#4 1,
w 0.3333335,A#3 1,F4 1,
w 0.16527786041666667,A#3 0,F4 0,
w 0.16666675,D4 0,G#4 0,
w 0.0013888895833333334,F4 1,C#5 1,
w 0.3333335,C#4 1,D#4 1,G#4 1,
w 0.16527786041666667,C#4 0,D#4 0,G#4 0,
w 0.16666675,F4 0,
w 0.0013888895833333334,G4 1,
w 0.3333335,C#4 1,D#4 1,F4 1,G#4 1,
w 0.16527786041666667,C#4 0,D#4 0,F4 0,G#4 0,
w 0.16666675,G4 0,
w 0.0013888895833333334,C#5 0,D#5 1,G5 1,
w 0.3333335,C#4 1,D#4 1,G4 1,A#4 1,
w 0.16527786041666667,C#4 0,D#4 0,G4 0,A#4 0,
w 0.16666675,D#5 0,
w 0.0013888895833333334,C5 1,
w 0.3333335,C#4 1,D#4 1,G4 1,A#4 1,
w 0.16527786041666667,C#4 0,D#4 0,G4 0,A#4 0,
w 0.16805563958333333,G5 0,G#4 1,C4 1,D#4 1,D#5 1,G#5 1,
w 1.2652784104166668,C5 0,C4 0,D#4 0,D#5 0,G#5 0,
w 0.0666667,G#4 0,"
HdeZKngH,script.js,ssssasasassa,JavaScript,Friday 25th of August 2023 03:32:34 PM CDT,"const traits = ['name', 'age', 'body', 'mind', 'personality', 'loves', 'hates', 'description'];

traits.forEach(trait => {
  fetch(`./data/${trait}.txt`)
    .then(response => response.text())
    .then(data => {
      const options = data.split('\n');
      populateDropdown(trait, options);
    });
});

function populateDropdown(id, options) {
  const select = document.getElementById(id);
  options.forEach(option => {
    const opt = document.createElement('option');
    opt.value = option;
    opt.innerHTML = option;
    select.appendChild(opt);
  });
}
// New function to handle button clicks
function addSelected(id) {
  const selectedValue = document.getElementById(id).value;
  // Logic to add the selected value to the summary div
  const summaryDiv = document.getElementById('summary');
  const summaryLine = `<p><strong>${capitalizeFirstLetter(id)}:</strong> ${selectedValue}</p>`;
  summaryDiv.innerHTML += summaryLine;
}

function showSummary() {
  const summaryDiv = document.getElementById('summary');
  summaryDiv.innerHTML = '<h2>Summary:</h2>'; // This clears the previous summary

  traits.forEach(trait => {
    const selectedValue = document.getElementById(trait).value;
    const summaryLine = `<strong>${capitalizeFirstLetter(trait)}:</strong> ${selectedValue}`;
    summaryDiv.innerHTML += summaryLine;
  });

  return false; // Prevent the form from actually submitting and reloading the page
}


"
beUj2Vcy,styles.css,ssssasasassa,CSS,Friday 25th of August 2023 03:31:27 PM CDT,"body {
  font-family: Arial, sans-serif;
  background-color: #f4f4f4;
  margin: 20px;
}

form {
  background: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  max-width: 400px;
  margin: 0 auto;
}

.row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

label {
  font-weight: bold;
  margin-right: 10px;
}

select {
  width: 200px;
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

input[type=""submit""] {
  background: #007bff;
  color: #fff;
  border: none;
  padding: 10px 20px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

input[type=""submit""]:hover {
  background: #0056b3;
}

#summary {
  max-width: 400px;
  margin: 20px auto;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  background: #fff;
}
"
NW5bk8D9,CodinGame_2023_08_25__22_20_37__fuel.cpp,MonsterScripter,C++,Friday 25th of August 2023 03:21:48 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib> // Pour EXIT_SUCCESS

using namespace std;

/**
 * Objectif
 * Vous devez calculer s'il est possible de faire le plein d'un vaisseau spatial dans le nombre de secondes autorisées (t),
 * étant donné la capacité du réservoir (c) en litres, et le nombre de litres de carburant pouvant être pompés dans le réservoir par seconde (r).
 * 
 * Le réservoir démarre vide.
 * La quantité maximale de litres par seconde (r) est constamment pompée dans le réservoir jusqu'à ce qu'il soit plein.
 * 
 * Entrée
 * Ligne 1 : Trois entiers séparés par des espaces t, c et r.
 * 
 * Sortie
 * Ligne 1 : Une chaîne de caractères ""yes"" ou ""no"". ""yes"" si il est possible de remplir le vaisseau spatial dans le temps imparti, ""no"" si ce n'est pas possible.
 * 
 * Contraintes
 * 0 < t ≤ 10,000
 * 0 < c ≤ 10,000
 * 0 < r ≤ 1000
 * 
 * Exemple
 * Entrée
 * 5 3 1
 * Sortie
 * yes
 */

int main()
{
    int t, c, r;
    cin >> t >> c >> r; cin.ignore();

    // Vérifie si le vaisseau peut être rempli dans le temps imparti
    cout << (c <= t * r ? ""yes"" : ""no"") << endl;

    return EXIT_SUCCESS;
}
"
njm8cV0v,Swimbot Error,swimmerhair,Python,Friday 25th of August 2023 03:11:48 PM CDT,"Traceback (most recent call last):
  File ""/home/pi/Swimbot/venv/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/whois.py"", line 300, in whois
    embed = discord.Embed(title=f""{resp['name']} - {resp['tag']}"", description=f'[Go To Player Profile](https://link.clashofclans.com/?action=OpenPlayerProfile&tag={resp[""tag""][1:]})', timestamp=ctx.message.created_at, color=discord.Colour.from_hsv(random.random(), 1, 1))
TypeError: 'NoneType' object is not subscriptable
"
LjbKF8mN,CodinGame_2023_08_25__21_56_21__celsius_fahrenheit.cpp,MonsterScripter,C++,Friday 25th of August 2023 02:56:41 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdlib> // Pour EXIT_SUCCESS

using namespace std;

/**
 * Objectif
 * Vous devez afficher le degré en Celsius si le degré est impair, sinon en Fahrenheit,
 * n'oubliez pas d'arrondir le degré converti.
 * 
 * Conversion de Fahrenheit en Celsius
 * df = degré en Fahrenheit
 * degré en Celsius = (df-32) * (5/9)
 * 
 * Conversion de Celsius en Fahrenheit
 * dc = degré en Celsius
 * degré en Fahrenheit = (9/5 * dc) + 32
 * 
 * Entrée
 * D Un entier pour le degré.
 * 
 * Sortie
 * Ligne 1 Le degré converti.
 * 
 * Contraintes
 * 0 <= D <= 500
 * 
 * Exemple
 * Entrée
 * 41
 * Sortie
 * 5
 */

int main()
{
    int d;
    cin >> d; cin.ignore();

    // Conversion et affichage du degré en Celsius ou en Fahrenheit selon la parité
    cout << ceil((
        d % 2 != 0 ? ((d - 32) * (5 / 9.0f)) 
        : ((9 / 5.0f * d) + 32)
    )) << endl;

    return EXIT_SUCCESS;
}"
w4DXTUYH,Untitled,Sergey_Schcelov,C++,Friday 25th of August 2023 02:49:25 PM CDT,"#include <iostream>
#include <iomanip>
#include <cmath>
#define int long long

using namespace std;


int power(int y){
    return 1 << y;
}


signed main() {
    int n;
    cin >> n;
    while (n-- > 0){
        int x, len=0;
        cin >> x;
        string doublex = """";
        int first = -1, second = -1, third = -1;

        while (x > 0){
            doublex = to_string(x%2) + doublex;
            if (x%2 != 0){
                third = second;
                second = first;
                first = len;
            }
            x/=2;
            ++len;
        }

        if (third == -1 and len >= 4)
            cout << (7 << len-4) << endl;
        else if (third == -1)
            cout << -1 << endl;
        else
            cout << power(third) + power(second) + power(first) << endl;
    }
}"
L4cEX18M,c0od2e,zisazisa,DCS,Friday 25th of August 2023 02:45:35 PM CDT,"2023=6a6b0c0d9e1f3g12724508692:192.168.219.101
2023=7a9b9c5d4e4f0g42673012766:175.127.10.174
"
i56zKvNG,CodinGame_2023_08_25__21_40_38__count_digits_letters.cpp,MonsterScripter,C++,Friday 25th of August 2023 02:40:49 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

/**
 * Objectif
 * Étant donné une chaîne en entrée, vous devez diviser le nombre de lettres dans cette chaîne par le nombre de chiffres dans cette chaîne. Arrondissez le nombre résultant à l'entier le plus proche.
 *
 * Entrée
 * Une chaîne en entrée, contenant uniquement des caractères ASCII.
 *
 * Sortie
 * Un entier, représentant le quotient de la division du nombre de lettres par le nombre de chiffres dans l'entrée.
 *
 * Contraintes
 * 2 <= longueur de l'entrée <= 256
 * Il y a toujours au moins un chiffre dans l'entrée.
 *
 * Exemple
 * Entrée
 * He110 W0r1d!
 * Sortie
 * 1
 */

int main() {
    string input;
    getline(cin, input);

    // Compte le nombre de lettres dans l'entrée
    size_t nbLetters = std::count_if(input.begin(), input.end(), 
        [](char c) { return std::isalpha(c); });

    // Compte le nombre de chiffres dans l'entrée
    size_t nbDigits = std::count_if(input.begin(), input.end(), 
        [](char c) { return std::isdigit(c); });

    // Calcule le quotient et l'afficher en arrondissant à l'entier supérieur
    cout << ceil((static_cast<double>(nbLetters) / nbDigits)) << endl;

	return 0;
}
"
LTAR6Q6E,MultifunctionalSquirrelControlSystem,claudiusmarius,C++,Friday 25th of August 2023 02:36:58 PM CDT,"/SqirrelInvaders
  //https://youtu.be/Xx6eqsZWyMc
  //https://www.youtube.com/c/ClaudeDufourmont
  //Seeeduino XIAO + AD9833 + PAM8403 + HC-SR501
  
  #include <SPI.h>
  #include <MD_AD9833.h>
  #include <Adafruit_NeoPixel.h>
  #define DATA  9 
  #define CLK   8  
  #define FSYNC1 10  
  #define DINEOPIXEL      7
  #define N_LEDS 8
  Adafruit_NeoPixel strip(N_LEDS, DINEOPIXEL, NEO_GRB + NEO_KHZ800);
  
  #define BrochePIR 6
  #define D2 2
  #define D3 3
  #define D4 4
  #define LED1 5
  #define D1 1
  
  MD_AD9833 AD(DATA, CLK, FSYNC1);

  bool ETATPIR ;
  bool ETATD2 ;
  bool ETATD3 ;
  bool ETATD4 ;
  int ANAD1;
  bool ETATANAD1;
  
  void setup() 
  { 
  pinMode(CLK, OUTPUT);    
  pinMode(DATA, OUTPUT);
  pinMode(FSYNC1, OUTPUT);
  
  pinMode(DINEOPIXEL, OUTPUT);
  pinMode(LED1, OUTPUT);
  pinMode(D2, INPUT_PULLUP);
  pinMode(D3, INPUT_PULLUP);
  pinMode(D4, INPUT_PULLUP);
  
  pinMode(BrochePIR, INPUT);
  pinMode(D1, INPUT);
  
  AD.begin();
  } 

  void loop() 
  { 
  ANAD1 = analogRead (D1);
  //if (ANAD1 < 100)                  //Pénombre
  if (ANAD1 > 200)                  //hors pénombre
  
  {
  ETATANAD1 = HIGH;
  }
  else
  {
  ETATANAD1 = LOW;   
  }
  ETATPIR = digitalRead(BrochePIR);
  ETATD2 =  !digitalRead(D2);
  ETATD3 =  !digitalRead(D3);
  ETATD4 =  !digitalRead(D4);

  if (ETATPIR && ETATD4 == HIGH)
  {
  digitalWrite (LED1, HIGH);
  Chenillard ();
  }
    
  //if (ETATPIR  == HIGH)
  //if (ETATPIR  == HIGH && ETATD3== HIGH)// PIR détection + D3 strappé à zéro (AUTORISATION PIR)
  //if (ETATPIR  == HIGH && ETATD3 == HIGH && ETATANAD1 == HIGH) //PIR détection + D3 strappé à zéro (AUTORISATION PIR)+ Pas de pénombre
  if (ETATPIR  == HIGH && ETATD3 == HIGH && ETATANAD1 == HIGH) //PIR détection + D3 strappé à zéro (AUTORISATION PIR)+ Pas de pénombre

  // ----------------------- NOTA : POUR L'INSTANT D2 N'EST PAS UTILISE -----------------------------------------------------------------
  
  {
  digitalWrite (LED1, HIGH);
 
  bonusRoundSound();
  gameOverSound();                             
  bonusRoundSound();
  missileApproachSound03();
  }
  else
  {
  AD.setMode(MD_AD9833::MODE_OFF); 
  digitalWrite (LED1, LOW);
  }
  }
  
  void missileApproachSound03() 
  {
  AD.setMode(MD_AD9833::MODE_TRIANGLE);
  const float baseFreq = 400.0;
  const float maxFreqChange = 800.0;
  const unsigned long duration = 5000;
  const unsigned long approachDuration = duration / 2;

  unsigned long startTime = millis();
  while (millis() - startTime < duration) 
  {
  unsigned long elapsedTime = millis() - startTime;
  float freqChange = maxFreqChange * ((float)elapsedTime / approachDuration);
  float freq = baseFreq + freqChange;
  AD.setFrequency(MD_AD9833::CHAN_0, freq);
  delay(10);
  }
  AD.setMode(MD_AD9833::MODE_OFF);
  ETATPIR == LOW;
  }

  void gameOverSound() {
  AD.setMode(MD_AD9833::MODE_TRIANGLE);
  const float startFreq = 2000.0;
  const float endFreq = 300.0;
  const unsigned long rampDuration = 1000;

  for (float freq = startFreq; freq >= endFreq; freq -= 20.0) 
  {
  AD.setFrequency(MD_AD9833::CHAN_0, freq);
  delay(rampDuration / ((startFreq - endFreq) / 20.0));
  }
  AD.setMode(MD_AD9833::MODE_OFF);
  }

  void bonusRoundSound() 
  {
  AD.setMode(MD_AD9833::MODE_SQUARE1);
  const float centerFreq = 1000.0;
  const float modulationFreq = 20.0;
  const float modulationDepth = 500.0;
  const unsigned long duration = 400;

  for (unsigned long startTime = millis(); millis() - startTime < duration; ) 
  {
  float freq = centerFreq + modulationDepth * sin(2 * PI * modulationFreq * (millis() - startTime) / 1000.0);
  AD.setFrequency(MD_AD9833::CHAN_0, freq);
  }
  AD.setMode(MD_AD9833::MODE_OFF);
  }

  void Chenillard ()
  {
  int nombre = 15;
  
  for (int j =0; j <nombre; j++)
  {
  ChenillardRouge ();
  }
  
  for (int j =0; j <nombre; j++)
  {
  ChenillardVert ();
  }

  for (int j =0; j <nombre; j++)
  {
  ChenillardBleu ();
  }
  delay(1);
  
  for (int j =0; j <nombre; j++)
  {
  ChenillardRouge ();
  }
  
  for (int j =0; j <nombre; j++)
  {
  ChenillardVert ();
  }

  for (int j =0; j <nombre; j++)
  {
  ChenillardBleu ();
  }
  
  }
  
  void ChenillardRouge ()
  {
  
  for (int i = 0; i <= N_LEDS -1; i++) 
  {
  strip.setPixelColor(i, 255, 0, 0);
  strip.show ();
  }
  strip.clear ();
  strip.show();
  digitalWrite (LED1, LOW);
  }

  void ChenillardVert ()
  {
  
  for (int i = 0; i <= N_LEDS -1; i++) 
  {
  strip.setPixelColor(i, 0, 255, 0);
  strip.show ();
  }
  strip.clear ();
  strip.show();
  digitalWrite (LED1, LOW);
  }

  void ChenillardBleu ()
  {
  
  for (int i = 0; i <= N_LEDS -1; i++) 
  {
  strip.setPixelColor(i, 0, 0, 255);
  strip.show ();
  }
  strip.clear ();
  strip.show();
  digitalWrite (LED1, LOW);
  }
"
tWXHUXwb,[Roblox] - TP To All Players - [Tp Back To Start Position],Chuffman-CSD,Lua,Friday 25th of August 2023 02:32:26 PM CDT,"--In this script you can teleport to all players, after teleporting you are teleported back to your original start position

-- Function to teleport the local player to the next player
local function teleportToNextPlayer(player, originalPosition)
    local players = game:GetService(""Players""):GetPlayers()

    local currentIndex = 0

    while true do
        currentIndex = currentIndex + 1
        if currentIndex > #players then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
            break
        end

        local targetPlayer = players[currentIndex]
        if targetPlayer ~= player then
            local playerCharacter = targetPlayer.Character
            if playerCharacter then
                local playerPosition = playerCharacter.HumanoidRootPart.Position
                player.Character.HumanoidRootPart.CFrame = CFrame.new(playerPosition)
                wait(0.5)  -- Adjust the duration as needed
            end
        end
    end
end

-- Function to create or recreate draggable GUI
local function createDraggableGUI(player)
    local existingGui = player.PlayerGui:FindFirstChild(""TpPlayerGUI"")
    if existingGui then
        existingGui:Destroy()
    end

    local gui = Instance.new(""ScreenGui"")
    gui.Name = ""TpPlayerGUI""
    gui.Parent = player.PlayerGui

    local button = Instance.new(""TextButton"")
    button.Text = ""Tp Players""
    button.Position = UDim2.new(0.5, 0, 0.9, 0)
    button.Size = UDim2.new(0, 100, 0, 30)
    button.Parent = gui

    button.Draggable = true
    button.Active = true

    button.MouseButton1Click:Connect(function()
        local originalPosition = player.Character.HumanoidRootPart.Position
        teleportToNextPlayer(player, originalPosition)
    end)
end

local player = game.Players.LocalPlayer
createDraggableGUI(player)
"
KVLxhiwa,pico8 repl v35,thisismysignup,Lua,Friday 25th of August 2023 02:26:55 PM CDT,"------------------------
-- Prepare globals
------------------------

local g_ENV, my_ENV, globfuncs = _ENV, {}, {}
for k,v in pairs(_ENV) do
    my_ENV[k] = v
    if (type(v) == ""function"") globfuncs[k] = true
end

local _ENV = my_ENV -- with this, we segregate ourselves from the running code (all global accesses below use _ENV automagically)

g_enable_repl, g_last_value = true


------------------------
-- Utils
------------------------

-- is ch inside str? (if so, returns index)
function isoneof(ch, str)
    for i=1,#str do
        if (str[i] == ch) return i
    end
end

------------------------
-- Tokenize
------------------------

-- escape sequences in strings (e.g. \n -> new line)
local esc_keys, esc_values = split ""a,b,f,n,r,t,v,\\,\"",',\n,*,#,-,|,+,^"", split ""\a,\b,\f,\n,\r,\t,\v,\\,\"",',\n,\*,\#,\-,\|,\+,\^""
local escapes = {}
for i=1,#esc_keys do escapes[esc_keys[i]] = esc_values[i] end

-- is ch a digit char?
function isdigit(ch)
    return ch and ch >= '0' and ch <= '9'
end
-- is ch a valid identifier char?
function isalnum(ch)
    return ch and (ch >= 'A' and ch <= 'Z' or ch >= 'a' and ch <= 'z' or isoneof(ch, '_\x1e\x1f') or ch >= '\x80' or isdigit(ch))
end


-- extarct string value from quoted string
-- returns value, end index
function dequote(str, i, strlen, quote, fail)
    local rawstr = ''
    while i <= strlen do
        local ch = str[i]
        if (ch == quote) break
        if ch == '\\' then -- handle escape sequences
            i += 1
            local esch = str[i]
            ch = escapes[esch] -- handle normal escapes
            -- hex escape (e.g. \xff)
            if esch == 'x' then
                esch = tonum('0x'..sub(str,i+1,i+2))
                if (esch) i += 2 else fail ""bad hex escape""
                ch = chr(esch)
            -- decimal escape (e.g. \014)
            elseif isdigit(esch) then
                local start = i
                while isdigit(esch) and i < start + 3 do i += 1; esch = str[i] end
                i -= 1
                esch = tonum(sub(str,start,i))
                if (not esch or esch >= 256) fail ""bad decimal escape""
                ch = chr(esch)
            -- ignore subsequent whitespace
            elseif esch == 'z' then
                repeat i += 1; esch = str[i] until not isoneof(esch, ' \r\t\f\v\n')
                if (not esch) fail()
                ch = ''
                i -= 1
            elseif not esch then fail() ch='' end
            if (not ch) fail(""bad escape: "" .. esch) ch=''
        elseif ch == '\n' then
            fail ""unterminated string""
            break
        end
        rawstr ..= ch
        i += 1
    end
    if (i > strlen) fail(""unterminated string"", true)
    return rawstr, i+1
end

-- extracts string value from long bracketed string (e.g. [[string]])
-- returns value, end index
function delongbracket(str, i, strlen, fail)
    if str[i] == '[' then
        i += 1
        local eq_start = i
        while (str[i] == '=') i += 1
        local end_delim = ']' .. sub(str,eq_start,i-1) .. ']'
        local j = #end_delim

        if str[i] == '[' then
            i += 1
            if (str[i] == '\n') i += 1
            local start = i
            while (i <= strlen and sub(str,i,i+j-1) != end_delim) i += 1
            if (i >= strlen) fail()
            return sub(str,start,i-1), i+j
        end
    end
    return nil, i
end

-- converts a string into tokens.
--   if strict is set, errors are thrown if invalid, and comments are ignored
-- returns:
--   array of tokens
--   array of the line each token is found at (for if/while shorthand parsing only)
--   array of token start indices
--   array of token end indices
-- A token is:
--   false for invalid
--   true for comment (unless strict)
--   number for numeric literal
--   string for identifier, keyword, or punctuation
--   table for string literal (table contains a single string at position [1])
function tokenize(str, strict)
    local i, line, start = 1, 1
    local tokens, tlines, tstarts, tends, err = {}, {}, {}, {}

    local function fail(v, ok)
        if (strict) on_compile_fail(v, start)
        err = v and not ok
    end

    -- we support unindexable huge strings up to 64KB (at least as long as pico8 can handle them)
    -- we do this via the below hacks (though it doesn't handle huge tokens over 16KB...)
    local strlen = #str >= 0 and #str or 0x7fff
    while i <= strlen do
        if (i >= 0x4001 and strlen >= 0x7fff) str = sub(str, 0x4001); i -= 0x4000; strlen = #str >= 0 and #str or 0x7fff
        
        start = i
        local ch = str[i]
        local ws, token
        -- whitespace
        if isoneof(ch, ' \r\t\f\v\n') then
            i += 1; ws = true
            if (ch == '\n') line += 1
        -- comment
        elseif isoneof(ch, '-/') and str[i+1] == ch then
            i += 2
            if (ch == '-' and str[i] == '[') token, i = delongbracket(str, i, strlen, fail)
            if not token then
                while (i <= strlen and str[i] != '\n') i += 1
            end
            if (strict) ws = true else add(tokens, true)
        -- number
        elseif isdigit(ch) or (ch == '.' and isdigit(str[i+1])) then
            local digits, dot = ""0123456789"", true
            -- hex. number (0x...)
            if ch == '0' and isoneof(str[i+1], 'xX') then digits ..= ""AaBbCcDdEeFf""; i += 2
            -- binary number (0b...)
            elseif ch == '0' and isoneof(str[i+1], 'bB') then digits = ""01""; i += 2
            end
            while true do
                ch = str[i]
                if ch == '.' and dot then dot = false
                elseif not isoneof(ch, digits) then break end
                i += 1
            end
            token = sub(str,start,i-1)
            if (not tonum(token)) fail ""bad number""; token=""0""
            add(tokens, tonum(token))
        -- identifier
        elseif isalnum(ch) then
            while isalnum(str[i]) do i += 1 end
            add(tokens, sub(str,start,i-1))
        -- string
        elseif ch == ""'"" or ch == '""' then
            token, i = dequote(str, i+1, strlen, ch, fail)
            add(tokens, {token})
        -- long-bracket string
        elseif ch == '[' and isoneof(str[i+1], ""=["") then
            token, i = delongbracket(str, i, strlen, fail)
            if (not token) fail ""invalid long brackets""
            add(tokens, {token})
        -- punctuation
        else
            i += 1
            local ch2,ch3,ch4 = unpack(split(sub(str,i,i+2),""""))
            if ch2 == ch and ch3 == ch and isoneof(ch,'.>') then
                i += 2
                if (ch4 == ""="" and isoneof(ch,'>')) i += 1
            elseif ch2 == ch and ch3 != ch and isoneof(ch,'<>') and isoneof(ch3,'<>') then
                i += 2
                if (ch4 == ""="") i += 1
            elseif ch2 == ch and isoneof(ch,'.:^<>') then
                i += 1
                if (ch3 == ""="" and isoneof(ch,'.^<>')) i += 1
            elseif ch2 == '=' and isoneof(ch,'+-*/\\%^&|<>=~!') then i += 1
            elseif isoneof(ch,'+-*/\\%^&|<>=~#(){}[];,?@$.:') then
            else fail(""bad char: "" .. ch) end
            add(tokens, sub(str,start,i-1))
        end
        if (not ws) add(tlines, line); add(tstarts, start); add(tends, i-1)
        if (err) tokens[#tokens], err = false, false
    end
    return tokens, tlines, tstarts, tends
end

------------------------
-- More Utils
------------------------

-- is obj inside table?
function isin(obj, tab)
    for i=1,#tab do
        if (tab[i] == obj) return i
    end
end

-- similar to unpack, except depack(pack(...)) is always ...
function depack(t)
    return unpack(t,1,t.n) -- (unpack defaults to t,1,#t instead)
end

-- copy a table
function copy(t)
    local ct = {}
    for k, v in next, t do ct[k] = v end
    return ct
end

------------------------
-- Parse & Eval
------------------------

-- General information:
-- As we parse lua's grammar, we build nodes, which are merely
-- functions that take e (an environment) as the first arg.
-- Parent nodes call their children nodes, thus forming a sort of tree.

-- An environment (e) is an array of scope tables
-- the scope table at index 0 contains top-level upvalues like _ENV
-- other scope tables contain locals defined within a local statement (*)
-- Thus, upvalues and locals are accessed the same way

-- Expression (expr) parsing returns a (node, setnode, tailcallnode) tuple.
-- node returns the expression's value
-- setnode returns a tuple of the table and key to use for the assignment (**)
-- tailcallnode returns a tuple of the function and args to use for a tail-call
-- setnode and/or tailcallnode are nil if assignment/call is not available

-- Note that functions called from within parse_expr instead return a
-- (node, is_prefix, setnode, tailcallnode) tuple, where is_prefix
-- says whether the node can be used as a prefix for calls/etc.

-- Statement (stmt) parsing returns a (node, is_end) tuple
-- node returns either:
--   nil to continue execution
--   true to break from loop
--   (0, label object) to goto the label object
--   table to return its depack() from the function
--   function to tail-call it as we return from the function
-- node may also be nil for empty statements
-- is_end is true if the statement must end the block

-- (*) We create a table per local statement, instead of per block
--     because by using goto, you can execute a local statement multiple
--     times without leaving a block, each time resulting in a different
--     local (that can be independently captured)

-- (**) It would be much simpler for setnode to do the assignment itself,
--      but it would prevent us from mimicking lua's observable left-to-right
--      evaluation behaviour,  where the assignment targets are evaluated
--      before the assignment values.

-- On that note, we generally mimic lua's observable left-to-right evaluation
-- behaviour, except that we do true left-to-right evaluation, while lua
-- usually evaluates locals (only!) right before the operation that uses them.
-- This difference can be observed if the local is captured by a closure,
--  e.g: local a=1; print(a + (function() a = 3; return 0 end)())

-- anyway:

-- identifiers to treat as keywords instead
local keywords = split ""and,break,do,else,elseif,end,false,for,function,goto,if,in,local,nil,not,or,repeat,return,then,true,until,while""

keyword_map = {}
for kw in all(keywords) do keyword_map[kw] = true end

-- is token an assign op (e.g. +=)?
local function is_op_assign(token)
    return type(token) == ""string"" and token[-1] == '='
end

-- tokens that terminate a block
end_tokens = split 'end,else,elseif,until'



-- parses a string, returning a function
-- that receives a global environment (e.g. _ENV) and executes the code
function parse(str )
    -- tokenize the string first
    local tokens, tlines, tstarts = tokenize(str, true)
    -- ti: the token index we're at
    -- e_len: how many environments deep we are
    -- depth: how many blocks deep we are
    local ti, e_len, depth, func_e_len, loop_depth, func_depth = 1, 0, 0 , 0
    local parse_expr, parse_block
    -- gotos: array of functions to evaluate in order to finalize gotos
    -- locals: maps names of locals to the environment array index where
    --         they're defined
    -- labels: maps names of labels to label objects
    --
    -- both locals and labels use a metatable to simulate a sort-of stack
    -- where pushed maps inherit from all previous maps in the stack and
    -- can be easily popped.
    --
    -- endcb: specifies when to stop shorthand parsing
    local gotos, locals, labels, endcb = {}

    local function fail(err)
        on_compile_fail(err, tstarts[ti-1] or 1)
    end

    -- return a node that returns a constant
    local function const_node(value)
        return function() return value end
    end
    -- return a node that returns the value of a variable
    local function var_node(name)
        local e_i = locals[name]
        if e_i then return function(e) return e[e_i][name] end -- local/upvalue
        else e_i = locals._ENV return function(e) return e[e_i]._ENV[name] end -- global
        end
    end
    -- return a node that returns the values of the vararg arguments
    -- of the current function.
    local function vararg_node()
        local e_i = locals['...']
        if (not e_i or e_i != func_e_len) fail ""unexpected '...'""
        return function(e) return depack(e[e_i][""...""]) end
    end
    -- return a setnode that allows assigning to the value of a variable
    local function assign_node(name)
        local e_i = locals[name]
        if e_i then return function(e) return e[e_i], name end -- local/upvalue
        else e_i = locals._ENV return function(e) return e[e_i]._ENV, name end -- global
        end
    end

    -- consume the next token, requiring it to be 'expect'
    local function require(expect)
        local token = tokens[ti]; ti += 1
        if (token == expect) return
        if (token == nil) fail()
        fail(""expected: "" .. expect)
    end

    -- consume the next token, requiring it to be an identifier
    -- returns the identifier
    local function require_ident(token)
        if (not token) token = tokens[ti]; ti += 1
        if (token == nil) fail()
        if (type(token) == 'string' and isalnum(token[1]) and not keyword_map[token]) return token
        if (type(token) == 'string') fail(""invalid identifier: "" .. token)
        fail ""identifier expected""
    end

    -- if the next token is 'expect', consumes it and returns true
    local function accept(expect)
        if (tokens[ti] == expect) ti += 1; return true
    end

    -- return whether we're at the end of a statement
    local function at_stmt_end()
        return isin(tokens[ti], end_tokens) or (endcb and endcb(ti))
    end

    -- push a new locals map to the locals 'stack'
    local function push_locals()
        locals = setmetatable({}, {__index=locals})
        e_len += 1
    end

    -- pop a locals map from the 'stack'
    local function pop_locals()
        locals = getmetatable(locals).__index
        e_len -= 1
    end

    -- evaluate an array of nodes, returning a pack of results
    -- the last node in the array may return an arbitrary number of results,
    -- all of which are packed.
    local function eval_nodes(e, nodes)
        local results = {}
        local n = #nodes
        for i=1,n-1 do
            results[i] = nodes[i](e)
        end
        if n > 0 then
            local values = pack(nodes[n](e))
            if values.n != 1 then
                for i=1,values.n do
                    results[n + i - 1] = values[i]
                end
                n += values.n - 1
            else
                results[n] = values[1]
            end
        end
        results.n = n
        return results
    end

    -- parses a comma-separated list of elements, each parsed via 'parser'
    local function parse_list(parser)
        local list = {}
        add(list, (parser()))
        while accept ',' do
            add(list, (parser()))
        end
        return list
    end

    -- parse a call expression
    --   node : call target node
    --   method : method to call for method call expression (e.g. a:b())
    --   arg : single argument node (e.g. for a""b"" and a{b})
    -- returns (node, is_prefix (true), setnode (nil), tailcallnode)
    local function parse_call(node, method, arg)
        -- parse the arguments
        local args = {}
        if arg then
            add(args, arg)
        elseif not accept ')' then
            while true do
                add(args, (parse_expr()))
                if (accept ')') break
                require ','
            end
        end

        if method then
            return function(e)
                -- call method
                local obj = node(e)
                return obj[method](obj, depack(eval_nodes(e, args)))
            end, true, nil, function(e)
                -- return ingredients for a method tail-call
                local obj = node(e)
                return obj[method], pack(obj, depack(eval_nodes(e, args)))
            end
        else
            return function(e)
                -- call function
                return node(e)(depack(eval_nodes(e, args)))
            end, true, nil, function(e)
                -- return ingredients for a function tail-call
                return node(e), eval_nodes(e, args)
            end
        end
    end

    -- parse a table construction expression (e.g. {1,2,3})
    local function parse_table()
        -- key/value nodes
        local keys, values = {}, {}
        -- splat_i : either #keys if the last item in the table is array-style
        --   (and thus may fill multiple array values), or nil otherwise
        local index, splat_i = 1
        while not accept '}' do
            splat_i = nil

            local key, value
            -- e.g. [a]=b
            if accept '[' then
                key = parse_expr(); require ']'; require '='; value = parse_expr()
            -- e.g. a=b
            elseif tokens[ti+1] == '=' then
                key = const_node(require_ident()); require '='; value = parse_expr()
            -- e.g. b
            else
                key = const_node(index); value = parse_expr(); index += 1; splat_i = #keys + 1
            end

            add(keys, key); add(values, value)

            if (accept '}') break
            if (not accept ';') require ','
        end

        return function(e)
            -- constuct table
            -- note: exact behaviour of # may differ from natively created tables
            local table = {}
            for i=1,#keys do
                if i == splat_i then
                    -- set multiple table elements (e.g. {f()})
                    local key, value = keys[i](e), pack(values[i](e))
                    for j=1,value.n do
                        table[key + j - 1] = value[j]
                    end
                else
                    -- set table element
                    table[keys[i](e)] = values[i](e)
                end
            end
            return table
        end
    end

    -- parse a function expression or statement
    -- is_stmt : true if statement
    -- is_local: true if local function statement
    local function parse_function(is_stmt, is_local)
        
        -- has_self : function has implicit self arg
        -- setnode : for statements, how to assign the function to a variable
        local name, has_self, setnode

        if is_stmt then
            if is_local then
                -- local function statement
                push_locals()
                name = require_ident()
                locals[name] = e_len
                setnode = assign_node(name)
                
            else
                -- function statement
                name = {require_ident()}
                -- function name may include multiple .-seprated parts
                while (accept '.') add(name, require_ident())
                -- and may include a final :-separated part
                if (accept ':') add(name, require_ident()); has_self = true

                if #name == 1 then setnode = assign_node(name[1])
                else
                    local node = var_node(name[1])
                    for i=2,#name-1 do
                        local node_i = node -- capture
                        node = function(e) return node_i(e)[name[i]] end
                    end
                    setnode = function(e) return node(e), name[#name] end
                end
                
            end
        end

        -- parse function params
        local params, vararg = {}
        if (has_self) add(params, 'self')
        require ""(""
        if not accept ')' then
            while true do
                if (accept '...') vararg = true; else add(params, require_ident())
                if (accept ')') break
                require ','
                if (vararg) fail ""unexpected param after '...'""
            end
        end

        -- add function params as locals
        push_locals()
        for param in all(params) do locals[param] = e_len end
        if (vararg) locals['...'] = e_len

        -- parse function's body
        local old_gotos, old_depth, old_e_len = gotos, func_depth, func_e_len
        gotos, func_depth, func_e_len = {}, depth + 1, e_len
        local body = parse_block()
        for g in all(gotos) do g() end -- handle gotos
        gotos, func_depth, func_e_len = old_gotos, old_depth, old_e_len
        require 'end'
        pop_locals()

        return function(e)
            if (is_local) add(e, {})

            -- create the function's environment
            -- note: this is a shallow copy of the environment array,
            --   not of the tables within.
            local func_e = copy(e)
            local expected_e_len = #func_e

            -- this is the actual function created
            local func = function(...)
                local args = pack(...) -- pack args
                
                

                -- normally, when a function exits, its environment
                -- ends up the same as it started, so it can be reused
                -- however, if the function didn't exit yet (e.g. recursion)
                -- we create a copy of the environment to use for this call
                local my_e = func_e
                if #my_e != expected_e_len then
                    local new_e = {}
                    for i=0, expected_e_len do new_e[i] = my_e[i] end
                    my_e = new_e
                end

                -- add scope for params 
                local scope = {}
                for i=1,#params do scope[params[i]] = args[i] end

                if (vararg) scope['...'] = pack(unpack(args, #params+1, args.n))

                -- evaluate function body
                add(my_e, scope)
                local retval = body(my_e)
                deli(my_e)

                
                
                -- return function result
                if retval then
                    if (type(retval) == ""table"") return depack(retval) -- return
                    return retval() -- tailcall
                end
            end

            -- assign or return the function
            if (is_stmt) local d,k = setnode(e); d[k] = func else return func
        end
    end

    -- parse a core expression, aka an expression without any suffixes
    -- returns (node, is_prefix, setnode, tailcallnode)
    local function parse_core()
        local token = tokens[ti]; ti += 1
        local arg
        if (token == nil) fail()
        -- nil constant
        if (token == ""nil"") return const_node()
        -- true constant
        if (token == ""true"") return const_node(true)
        -- false constant
        if (token == ""false"") return const_node(false)
        -- number constant
        if (type(token) == ""number"") return const_node(token)
        -- string constant
        if (type(token) == ""table"") return const_node(token[1])
        -- table
        if (token == ""{"") return parse_table()
        -- parentheses (this is NOT an no-op, unlike in most
        --   languages - as it forces the expression to return 1 result)
        if (token == ""("") arg = parse_expr(); require ')'; return function(e) return (arg(e)) end, true
        -- unary ops
        if (token == ""-"") arg = parse_expr(11); return function(e) return -arg(e) end
        if (token == ""~"") arg = parse_expr(11); return function(e) return ~arg(e) end
        if (token == ""not"") arg = parse_expr(11); return function(e) return not arg(e) end
        if (token == ""#"") arg = parse_expr(11); return function(e) return #arg(e) end
        if (token == ""@"") arg = parse_expr(11); return function(e) return @arg(e) end
        if (token == ""%"") arg = parse_expr(11); return function(e) return %arg(e) end
        if (token == ""$"") arg = parse_expr(11); return function(e) return $arg(e) end
        -- function creation
        if (token == 'function') return parse_function()
        -- vararg
        if (token == ""..."") return vararg_node()
        -- special repl-specific commands
        if (token == ""\\"") arg = require_ident() return function() return cmd_exec(arg) end, true, function() return cmd_assign(arg) end
        -- identifiers
        if (require_ident(token)) return var_node(token), true, assign_node(token)
        fail(""unexpected token: "" .. token)
    end

    -- parse a binary operation expression
    -- the extra 'v' argument is used only by op-assignment statements
    local function parse_binary_op(token, prec, left, right_expr)
        local right
        if (token == ""^"" and prec <= 12) right = right_expr(12); return function(e,v) return left(e,v) ^ right(e) end
        if (token == ""*"" and prec < 10) right = right_expr(10); return function(e,v) return left(e,v) * right(e) end
        if (token == ""/"" and prec < 10) right = right_expr(10); return function(e,v) return left(e,v) / right(e) end
        if (token == ""\\"" and prec < 10) right = right_expr(10); return function(e,v) return left(e,v) \ right(e) end
        if (token == ""%"" and prec < 10) right = right_expr(10); return function(e,v) return left(e,v) % right(e) end
        if (token == ""+"" and prec < 9) right = right_expr(9); return function(e,v) return left(e,v) + right(e) end
        if (token == ""-"" and prec < 9) right = right_expr(9); return function(e,v) return left(e,v) - right(e) end
        if (token == "".."" and prec <= 8) right = right_expr(8); return function(e,v) return left(e,v) .. right(e) end
        if (token == ""<<"" and prec < 7) right = right_expr(7); return function(e,v) return left(e,v) << right(e) end
        if (token == "">>"" and prec < 7) right = right_expr(7); return function(e,v) return left(e,v) >> right(e) end
        if (token == "">>>"" and prec < 7) right = right_expr(7); return function(e,v) return left(e,v) >>> right(e) end
        if (token == ""<<>"" and prec < 7) right = right_expr(7); return function(e,v) return left(e,v) <<> right(e) end
        if (token == "">><"" and prec < 7) right = right_expr(7); return function(e,v) return left(e,v) >>< right(e) end
        if (token == ""&"" and prec < 6) right = right_expr(6); return function(e,v) return left(e,v) & right(e) end
        if ((token == ""^^"" or token == ""~"") and prec < 5) right = right_expr(5); return function(e,v) return left(e,v) ^^ right(e) end
        if (token == ""|"" and prec < 4) right = right_expr(4); return function(e,v) return left(e,v) | right(e) end
        if (token == ""<"" and prec < 3) right = right_expr(3); return function(e,v) return left(e,v) < right(e) end
        if (token == "">"" and prec < 3) right = right_expr(3); return function(e,v) return left(e,v) > right(e) end
        if (token == ""<="" and prec < 3) right = right_expr(3); return function(e,v) return left(e,v) <= right(e) end
        if (token == "">="" and prec < 3) right = right_expr(3); return function(e,v) return left(e,v) >= right(e) end
        if (token == ""=="" and prec < 3) right = right_expr(3); return function(e,v) return left(e,v) == right(e) end
        if ((token == ""~="" or token == ""!="") and prec < 3) right = right_expr(3); return function(e,v) return left(e,v) ~= right(e) end
        if (token == ""and"" and prec < 2) right = right_expr(2); return function(e,v) return left(e,v) and right(e) end
        if (token == ""or"" and prec < 1) right = right_expr(1); return function(e,v) return left(e,v) or right(e) end
    end

    -- given an expression, parses a suffix for this expression, if possible
    -- prec : precedence to not go beyond when parsing
    -- isprefix : true to allow calls/etc. (lua disallows it for certain
    --            expression unless parentheses are used, not sure why)
    -- returns (node, is_prefix, setnode, tailcallnode)
    local function parse_expr_more(prec, left, isprefix)
        local token = tokens[ti]; ti += 1
        local right, arg
        if isprefix then
            -- table index by name
            if (token == '.') right = require_ident(); return function(e) return left(e)[right] end, true, function(e) return left(e), right end
            -- table index
            if (token == '[') right = parse_expr(); require ']'; return function(e) return left(e)[right(e)] end, true, function(e) return left(e), right(e) end
            -- call
            if (token == ""("") return parse_call(left)
            -- call with table or string argument
            if (token == ""{"" or type(token) == ""table"") ti -= 1; arg = parse_core(); return parse_call(left, nil, arg)
            -- method call
            if token == "":"" then 
                right = require_ident();
                -- ... with table or string argument
                if (tokens[ti] == ""{"" or type(tokens[ti]) == ""table"") arg = parse_core(); return parse_call(left, right, arg)
                require '('; return parse_call(left, right)
            end
        end
        
        -- binary op
        local node = parse_binary_op(token, prec, left, parse_expr)
        if (not node) ti -= 1
        return node
    end

    -- parse an arbitrary expression
    -- prec : precedence to not go beyond when parsing
    -- returns (node, setnode, tailcallnode)
    parse_expr = function(prec)
        local node, isprefix, setnode, callnode = parse_core()
        while true do
            local newnode, newisprefix, newsetnode, newcallnode = parse_expr_more(prec or 0, node, isprefix)
            if (not newnode) break
            node, isprefix, setnode, callnode = newnode, newisprefix, newsetnode, newcallnode
        end
        return node, setnode, callnode
    end

    -- parse an assignment expression, returning its setnode
    local function parse_assign_expr()
        local _, assign_expr = parse_expr()
        if (not assign_expr) fail ""cannot assign to value""
        return assign_expr
    end

    -- parse assignment statement
    local function parse_assign()
        local targets = parse_list(parse_assign_expr)
        require ""=""
        local sources = parse_list(parse_expr)

        if #targets == 1 and #sources == 1 then return function(e)
            -- single assignment (for performance)
            local d,k = targets[1](e); d[k] = sources[1](e)
        end else return function(e)
            -- multiple assignment (e.g. a,b=c,d)
            local dests, keys = {}, {}
            for i=1,#targets do local d,k = targets[i](e); add(dests,d) add(keys,k) end
            local values = eval_nodes(e, sources)
            -- assign from last to first, per observable lua behaviour
            for i=#targets,1,-1 do dests[i][keys[i]] = values[i] end
        end end
    end

    -- parse op-assignment statement (e.g. +=)
    -- receives the setnode of the assignment target, and uses it to both get and set the value 
    -- (this is to ensure the node is evaluated only once)
    local function parse_op_assign(setnode)
        local token = tokens[ti]; ti += 1
        local op = sub(token,1,-2)
        local node = function(e, v) return v end -- parse_binary_op propagates the value as an extra arg to us
        local op_node = parse_binary_op(op, 0, node, function() return parse_expr() end) -- ignore precedence
        if (not op_node) fail ""invalid compound assignment""
        return function(e) local d,k = setnode(e); d[k] = op_node(e, d[k]) end
    end

    -- parse local statement
    local function parse_local()
        if accept 'function' then
            -- local function statement
            return parse_function(true, true)
        else
            local targets = parse_list(require_ident)
            local sources = accept '=' and parse_list(parse_expr) or {}

            push_locals()
            for i=1,#targets do locals[targets[i]] = e_len end

            if #targets == 1 and #sources == 1 then return function(e)
                -- single local (for performance)
                add(e, {[targets[1]] = sources[1](e)})
            end else return function(e)
                -- multiple locals
                local scope = {}
                local values = eval_nodes(e, sources)
                for i=1,#targets do scope[targets[i]] = values[i] end
                add(e, scope)
            end end
        end
    end

    -- start if/while shorthand parsing
    -- allows terminating the parsing of a block at the end of the line
    local function start_shorthand(allowed)
        local line = tlines[ti - 1]
        local prev_endcb = endcb
        endcb = function(i) return line != tlines[i] end
        if (not allowed or endcb(ti)) fail(ti <= #tokens and ""unterminated shorthand"" or nil)
        return prev_endcb
    end

    -- end shorthand parsing, and verify we haven't exceeded the line
    local function end_shorthand(prev_endcb)
        if (endcb(ti-1)) fail(""unterminated shorthand"")
        endcb = prev_endcb
    end

    -- parse an 'if' statement
    local function parse_ifstmt()
        local short = tokens[ti] == '('
        local cond = parse_expr()
        local then_b, else_b
        if accept 'then' then
            -- normal if statement
            then_b, else_b = parse_block()
            if accept 'else' then else_b = parse_block(); require ""end"" -- else
            elseif accept 'elseif' then else_b = parse_ifstmt() -- elseif
            else require ""end"" end
        else
            -- shorthand if
            local prev = start_shorthand(short)
            then_b = parse_block()
            if (not endcb(ti) and accept 'else') else_b = parse_block() -- shorhand if/else
            end_shorthand(prev)
        end

        return function(e)
            -- execute the if
            if cond(e) then return then_b(e)
            elseif else_b then return else_b(e)
            end
        end
    end

    -- parse a loop block, updating loop_depth (for break purposes)
    local function parse_loop_block(...)
        local old_depth = loop_depth
        loop_depth = depth + 1
        local result = parse_block(...)
        loop_depth = old_depth
        return result
    end

    -- if retval denotes a break, do not propagate it further
    -- useful when returning from loop blocks
    local function handle_break(retval, label)
        if (retval == true) return -- break
        return retval, label
    end

    -- parse a 'while' block
    local function parse_while()
        local short = tokens[ti] == '('
        local cond = parse_expr()
        local body
        if accept 'do' then
            -- normal while statement
            body = parse_loop_block()
            require 'end'
        else
            -- shorthand while statement
            local prev = start_shorthand(short)
            body = parse_loop_block()
            end_shorthand(prev)
        end

        return function(e)
            -- execute the while
            while cond(e) do
                if (stat(1)>=1) yield_execute()
                local retval, label = body(e)
                if (retval) return handle_break(retval, label)
            end
        end
    end

    -- parse a repeat/until statement
    local function parse_repeat()
        -- note that the until part can reference
        -- locals declared inside the repeat body, thus
        -- we pop the locals/scopes ourselves
        local block_e_len = e_len
        local body = parse_loop_block(true)
        require 'until'
        local cond = parse_expr()
        while (e_len > block_e_len) pop_locals()

        return function(e)
            -- execute the repeat/until
            repeat
                if (stat(1)>=1) yield_execute()
                local retval, label = body(e)
                if (not retval) label = cond(e) -- reuse label as the end cond

                while (#e > block_e_len) deli(e) -- pop scopes ourselves
                if (retval) return handle_break(retval, label)
            until label -- actually the end cond
        end
    end

    -- parse a 'for' statement
    local function parse_for()
        if tokens[ti + 1] == '=' then
            -- numeric for statement
            local varb = require_ident()
            require '='
            local min = parse_expr()
            require ','
            local max = parse_expr()
            local step = accept ',' and parse_expr() or const_node(1)
            require 'do'

            -- push 'for' local, and parse the body
            push_locals()
            locals[varb] = e_len
            local body = parse_loop_block()
            require 'end'
            pop_locals()

            return function(e)
                -- execute the numeric 'for'
                for i=min(e),max(e),step(e) do
                    if (stat(1)>=1) yield_execute()
                    add(e, {[varb]=i})
                    local retval, label = body(e)
                    deli(e)
                    if (retval) return handle_break(retval, label)
                end
            end
        else
            -- generic 'for' block
            local targets = parse_list(require_ident)
            require ""in""
            local sources = parse_list(parse_expr)
            require 'do'

            -- push 'for' locals, and parse the body
            push_locals()
            for target in all(targets) do locals[target] = e_len end

            local body = parse_loop_block()
            require 'end'
            pop_locals()

            return function(e)
                -- execute the generic 'for'
                -- (must synthesize it ourselves, as a generic for's
                --  number of vars is fixed)
                local exps = eval_nodes(e, sources)
                while true do
                    local scope = {}

                    local vars = {exps[1](exps[2], exps[3])}
                    if (vars[1] == nil) break
                    exps[3] = vars[1]
                    for i=1,#targets do scope[targets[i]] = vars[i] end

                    if (stat(1)>=1) yield_execute()
                    add(e, scope)
                    local retval, label = body(e)
                    deli(e)
                    if (retval) return handle_break(retval, label)
                end
            end
        end
    end

    -- parse a break statement
    local function parse_break()
        if (not loop_depth or func_depth and loop_depth < func_depth) fail ""break outside of loop""
        return function() return true end
    end

    -- parse a return statement
    -- N.B. lua actually allows return (and vararg) outside of functions.
    --      this kinda completely breaks repuzzle, so the repl code in it disallows it.
    local function parse_return()

        if tokens[ti] == ';' or at_stmt_end() then
            -- return no values (represented by us as an empty pack)
            return function() return pack() end
        else
            local node, _, callnode = parse_expr()
            local nodes = {node}
            while (accept ',') add(nodes, (parse_expr()))

            if #nodes == 1 and callnode and func_depth then
                -- tail-call (aka jump into other function instead of returning)
                return function(e) local func, args = callnode(e);
                    if (stat(1)>=1) yield_execute()
                    return function() return func(depack(args)) end
                end
            else
                -- normal return
                return function(e) return eval_nodes(e, nodes) end
            end
        end
    end

    -- parse label statement
    local function parse_label(parent)
        local label = require_ident()
        require '::'
        if (labels[label] and labels[label].depth == depth) fail ""label already defined""
        -- store label object
        labels[label] = {e_len=e_len, depth=depth, block=parent, i=#parent}
    end

    -- parse goto statement
    local function parse_goto()
        local label = require_ident()
        local labels_c, e_len_c, value = labels, e_len -- capture labels

        -- the label may be defined after the goto, so process the goto
        -- at function end
        add(gotos, function ()
            value = labels_c[label]
            if (not value) fail ""label not found""
            if (func_depth and value.depth < func_depth) fail ""goto outside of function""
            -- goto cannot enter a scope
            -- (empty statements at the end of a scope aren't considered a
            --  part of the scope for this purpose)
            local goto_e_len = labels_c[value.depth] or e_len_c
            if (value.e_len > goto_e_len and value.i < #value.block) fail ""goto past local""
        end)

        return function()
            if (stat(1)>=1) yield_execute()
            return 0, value
        end
    end

    -- parse any statement
    local function parse_stmt(parent)
        local token = tokens[ti]; ti += 1
        -- empty semicolon
        if (token == ';') return
        -- do-end block
        if (token == 'do') local node = parse_block(); require 'end'; return node
        -- if
        if (token == 'if') return parse_ifstmt()
        -- while loop
        if (token == 'while') return parse_while()
        -- repeat/until loop
        if (token == 'repeat') return parse_repeat()
        -- for loop
        if (token == 'for') return parse_for()
        -- break
        if (token == 'break') return parse_break()
        -- return
        if (token == 'return') return parse_return(), true
        -- local
        if (token == 'local') return parse_local()
        -- goto
        if (token == 'goto') return parse_goto()
        -- label
        if (token == '::') return parse_label(parent)
        -- function
        if (token == 'function' and tokens[ti] != '(') return parse_function(true)
        -- print shorthand
        if token == '?' then
            local print_node, nodes = var_node 'print', parse_list(parse_expr);
            return function (e) print_node(e)(depack(eval_nodes(e, nodes))) end
        end

        -- handle assignments and expressions
        ti -= 1
        local start = ti -- allow reparse
        local node, setnode, callnode = parse_expr()

        -- assignment
        if accept ',' or accept '=' then
            ti = start; return parse_assign()
        -- op-assignment
        elseif is_op_assign(tokens[ti]) then
            return parse_op_assign(setnode)
        -- repl-specific print of top-level expression
        elseif depth <= 1 and g_enable_repl then
            return function (e)
                local results = pack(node(e))
                if (not (callnode and results.n == 0)) add(g_results, results)
                g_last_value = results[1]
            end
        -- regular expression statements (must be call)
        else
            if (not callnode) fail ""statement has no effect""
            return function(e) node(e) end
        end
    end

    -- parse a block of statements
    -- keep_locals: true to let the caller exit the block themselves
    parse_block = function(keep_locals)
        -- push a new labels map in the labels 'stack'
        labels = setmetatable({}, {__index=labels})
        labels[depth] = e_len

        -- increase depth
        depth += 1
        local block_depth = depth
        local block_e_len = keep_locals and 0x7fff or e_len

        -- parse block statements
        local block = {}
        while ti <= #tokens and not at_stmt_end() do
            local  stmt, need_end =  parse_stmt(block)
            if (stmt) add(block, stmt) 
            if (need_end) accept ';'; break
        end

        -- pop any locals pushed inside the block
        while (e_len > block_e_len) pop_locals()
        depth -= 1
        labels = getmetatable(labels).__index

        return function (e)
            -- execute the block's statements
            local retval, label
            local i,n = 1,#block
            while i <= n do
                
                retval, label = block[i](e)
                if retval then
                    -- handle returns & breaks
                    if (type(retval) != ""number"") break
                    -- handle goto to parent block
                    if (label.depth != block_depth) break
                    -- handle goto to this block
                    i = label.i
                    while (#e > label.e_len) deli(e)
                    retval, label = nil
                end
                i += 1
            end
            while (#e > block_e_len) deli(e)
            return retval, label
        end
    end
    
    -- create top-level upvalues
    locals = g_enable_repl and {_ENV=0, _env=0, _=0} or {_ENV=0}
    locals['...'] = 0
    -- parse top-level block
    local root = parse_block()
    if (ti <= #tokens) fail ""unexpected end""
    -- handle top-level gotos
    for g in all(gotos) do g() end

    return function(env, ...)
        -- create top-level scope
        local scope = g_enable_repl and {_ENV=env, _env=env, _=g_last_value} or {_ENV=env}
        scope['...'] = pack(...)
        
        -- execute
                
        local retval = root{[0]=scope}
        
        if (retval) return depack(retval)
    end
end

------------------------
-- Output
------------------------

g_show_max_items, g_hex_output, g_precise_output = 10, false, false


-- reverse mapping of escapes
local unescapes = {[""\0""]=""000"",[""\014""]=""014"",[""\015""]=""015""}
for k, v in pairs(escapes) do 
    if (not isoneof(k, ""'\n"")) unescapes[v] = k
end

-- create quoted string from a string value
function requote(str)
    local i = 1
    while i <= #str do
        local ch = str[i]
        local nch = unescapes[ch]
        if (nch) str = sub(str,1,i-1) .. '\\' .. nch .. sub(str,i+1); i += #nch
        i += 1
    end
    return '""' .. str .. '""'
end

-- is 'key' representable as an identifier?
function is_identifier(key)
    if (type(key) != 'string') return false
    if (keyword_map[key]) return false
    if (#key == 0 or isdigit(key[1])) return false
    for i=1,#key do
        if (not isalnum(key[i])) return false
    end
    return true
end

-- convert value as a string
-- (more featured than tostr)
function value_to_str(val, depth)
    local ty = type(val)
    -- nil
    if (ty == 'nil') then
        return 'nil'
    -- boolean
    elseif (ty == 'boolean') then
        return val and 'true' or 'false'
    -- number (optionally hex)
    elseif (ty == 'number') then
        if (not g_precise_output) return tostr(val, g_hex_output)
        local str = tostr(val)
        return tonum(str) == val and str or tostr(val,1)
    -- string (with quotes)
    elseif (ty == 'string') then
        return requote(val)
    -- table contents
    elseif (ty == 'table' and not depth) then
        local res = '{'
        local i = 0
        local prev = 0
        -- avoid pairs, as it uses metamethods
        for k,v in next, val do
            if (i == g_show_max_items) res ..= ',<...>' break
            if (i > 0) res ..= ','
            
            local vstr = value_to_str(v,1)
            if k == prev + 1 then res ..= vstr; prev = k
            elseif is_identifier(k) then res ..= k .. '=' .. vstr
            else res ..= '[' .. value_to_str(k,1) ..']=' .. vstr end
            i += 1
        end
        
        return res .. '}'
    -- other
    else
        return '<' .. tostr(ty) .. '>'
    end
end

-- convert more results into a string
function results_to_str(str, results)
    if (results == nil) return str -- no new results
    if (not str) str = ''

    local count = min(21,#results)
    for ir=1, count do
        if (#str > 0) str ..= '\n'

        local result = results[ir]
        if type(result) == 'table' then
            local line = ''
            for i=1,result.n do
                if (#line > 0) line ..= ', '
                line ..= value_to_str(result[i])
            end
            str ..= line
        else
            str ..= result
        end
    end

    local new_results = {}
    for i=count+1, #results do new_results[i - count] = results[i] end
    return str, new_results
end

------------------------
-- Console output
------------------------

poke(0x5f2d,1) -- enable keyboard
cls()

g_prompt = ""> "" -- currently must be valid token!
g_input, g_input_lines, g_input_start = """", 1, 0
g_cursor_pos, g_cursor_time = 1, 20
--lint: g_str_output, g_error_output
g_history, g_history_i = {''}, 1
--lint: g_interrupt, g_notice, g_notice_time
g_abort = false
g_num_output_lines, g_line = 0, 1

g_enable_interrupt, g_enable_autoflip = true, true
g_pal = split ""7,4,3,5,6,8,5,12,14,7,11,5""

-- override print for better output
g_ENV.print = function(value, ...)
    if (pack(...).n != 0 or not g_enable_interrupt) return print(value, ...)

    add(g_results, tostr(value))
end

-- suppress pause (e.g. from p, etc.)
function unpause()
    poke(0x5f30,1)
end

-- an iterator over pressed keys
function get_keys()
    return function()
        if (stat(30)) return stat(31)
    end
end

-- walk over a string, calling a callback on its chars
function walk_str(str, cb)
    local i = 1
    local x, y = 0, 0
    if (not str) return i, x, y
    while i <= #str do
        local ch = str[i]
        local spch = ch >= '\x80'
        if (x >= (spch and 31 or 32)) y += 1; x = 0
        if (cb) cb(i,ch,x,y)

        if ch == '\n' then y += 1; x = 0
        else x += (spch and 2 or 1) end
        i += 1
    end
    return i, x, y
end

-- given string and index, return x,y at index
function str_i2xy(str, ci)
    local cx, cy = 0, 0
    local ei, ex, ey = walk_str(str, function(i,ch,x,y)
        if (ci == i) cx, cy = x, y
    end)
    if (ci >= ei) cx, cy = ex, ey
    if (ex > 0) ey += 1
    return cx, cy, ey
end

-- given string and x,y - return index at x,y
function str_xy2i(str, cx, cy)
    local ci = 1
    local found = false
    local ei, ex, ey = walk_str(str, function(i,ch,x,y)
        if (cy == y and cx == x and not found) ci = i; found = true
        if ((cy < y or cy == y and cx < x) and not found) ci = i - 1; found = true
    end)
    if (not found) ci = cy >= ey and ei or ei - 1
    if (ex > 0) ey += 1
    return ci, ey
end

-- print string at position, using color value or function
function str_print(str, xpos, ypos, color)
    if type(color) == ""function"" then
        walk_str(str, function(i,ch,x,y)
            print(ch, xpos + x*4, ypos + y*6, color(i))
        end)
    else
        print(str and ""\^rw"" .. str, xpos, ypos, color)
    end
end

-- print code, using syntax highlighting
function str_print_input(input, xpos, ypos)
    local tokens, _, tstarts, tends = tokenize(input) -- tlines not reliable!
    local ti = 1
    str_print(input, xpos, ypos, function(i)
        while ti <= #tends and tends[ti] < i do ti += 1 end

        local token
        if (ti <= #tends and tstarts[ti] <= i) token = tokens[ti]

        local c = g_pal[5]
        if token == false then c = g_pal[6] -- error
        elseif token == true then c = g_pal[7] -- comment
        elseif type(token) != 'string' or isin(token, {""nil"",""true"",""false""}) then c = g_pal[8]
        elseif keyword_map[token] then c = g_pal[9]
        elseif not isalnum(token[1]) then c = g_pal[10]
        elseif globfuncs[token] then c = g_pal[11] end

        return c
    end)
end

-- draw (messy...)
function _draw()
    local old_color = peek(0x5f25)
    local old_camx, old_camy = peek2(0x5f28), peek2(0x5f2a)
    camera()

    local function scroll(count)
        cursor(0,127)
        for _=1,count do
            rectfill(0,g_line*6,127,(g_line+1)*6-1,0)
            if g_line < 21 then
                g_line += 1
            else
                print """"
            end
        end
    end

    local function unscroll(count, minline)
        for _=1,count do
            if (g_line > minline) g_line -= 1
            rectfill(0,g_line*6,127,(g_line+1)*6-1,0)
        end
    end

    local function draw_cursor(x, y)
        for i=0,2 do
            local c = pget(x+i,y+5)
            pset(x+i,y+5,c==0 and g_pal[12] or 0)
        end
    end

    local function draw_input(cursor)
        local input = g_prompt .. g_input .. ' '
        local cx, cy, ilines = str_i2xy(input, #g_prompt + g_cursor_pos) -- ' ' is cursor placeholder

        if ilines > g_input_lines then
            scroll(ilines - g_input_lines)
        elseif ilines < g_input_lines then
            unscroll(g_input_lines - ilines, ilines)
        end
        g_input_lines = ilines

        g_input_start = mid(g_input_start, 0, max(g_input_lines - 21, 0))

        ::again::
        local sy = g_line - g_input_lines + g_input_start
        if (sy+cy < 0) g_input_start += 1; goto again
        if (sy+cy >= 21) g_input_start -= 1; goto again

        local y = sy*6
        rectfill(0,y,127,y+g_input_lines*6-1,0)
        if (g_input_lines>21) rectfill(0,126,127,127,0) -- clear partial line
        str_print_input(input,0,y)
        print(g_prompt,0,y,g_pal[4])

        if (g_cursor_time >= 10 and cursor != false and not g_interrupt) draw_cursor(cx*4, y + cy*6)
    end

    -- require pressing enter to view more results
    local function page_interrupt(page_olines)
        scroll(1)
        g_line -= 1
        print(""[enter] ('esc' to abort)"",0,g_line*6,g_pal[3])

        while true do
            flip(); unpause()
            for key in get_keys() do
                if (key == '\x1b') g_abort = true; g_str_output = ''; g_results = {}; return false
                if (key == '\r' or key == '\n') g_num_output_lines += page_olines; return true
            end
        end
    end

    ::restart::
    local ostart, olines
    if g_results or g_str_output then
        ostart, olines = str_xy2i(g_str_output, 0, g_num_output_lines)
        if olines - g_num_output_lines <= 20 and g_results then -- add more output
            g_str_output, g_results = results_to_str(g_str_output, g_results)
            ostart, olines = str_xy2i(g_str_output, 0, g_num_output_lines)
            if (#g_results == 0 and not g_interrupt) g_results = nil
        end
    end

    if (not g_interrupt) camera()

    if (g_num_output_lines == 0 and not g_interrupt) draw_input(not g_str_output)

    if g_str_output then
        local output = sub(g_str_output, ostart)
        local page_olines = min(olines - g_num_output_lines, 20)

        scroll(page_olines)
        str_print(output,0,(g_line - page_olines)*6,g_pal[1])

        if page_olines < olines - g_num_output_lines then
            if (page_interrupt(page_olines)) goto restart
        else
            local _, _, elines = str_i2xy(g_error_output, 0)
            scroll(elines)
            str_print(g_error_output,0,(g_line - elines)*6,g_pal[2])

            if g_interrupt then
                g_num_output_lines += page_olines
            else
                g_input, g_input_lines, g_input_start, g_cursor_pos, g_num_output_lines, g_str_output, g_error_output =
                    '', 0, 0, 1, 0
                draw_input()
            end
        end
    end

    if g_interrupt then
        scroll(1)
        g_line -= 1
        print(g_interrupt,0,g_line*6,g_pal[3])
    end

    if g_notice then
        scroll(1)
        g_line -= 1
        print(g_notice,0,g_line*6,g_pal[3])
        g_notice = nil
    end

    if g_notice_time then
        g_notice_time -= 1
        if (g_notice_time == 0) g_notice, g_notice_time = ''
    end

    g_cursor_time -= 1
    if (g_cursor_time == 0) g_cursor_time = 20

    color(old_color)
    camera(old_camx, old_camy)
    if (g_line <= 20) cursor(0, g_line * 6)
end

------------------------
--- Execution loop
------------------------

g_in_execute_yield, g_in_mainloop, g_from_flip = false, false, false
g_pending_keys = {}
--lint: g_results, g_error, g_error_idx

-- report compilation error
-- an error of nil means code is likely incomplete
function on_compile_fail(err, idx)
    g_error, g_error_idx = err, idx
    assert(false, err)
end

-- execute code
function execute_raw(line, env, ...)
    return parse(line)(env or g_ENV, ...)
end

-- evaluate code
function eval_raw(expr, env, ...)
    return execute_raw(""return "" .. expr, env, ...)
end

-- try parse code
function try_parse(line)
    local cc = cocreate(parse)
    ::_::
    local ok, result = coresume(cc, line)
    if (ok and not result) goto _ -- this shouldn't happen anymore, but does (pico bug?)
    if (not ok) result, g_error = g_error, false
    return ok, result
end

function pos_to_str(line, idx)
    local x, y = str_i2xy(line, idx)
    return ""line "" .. y+1 .. "" col "" .. x+1
end

-- execute code
function execute(line, complete)
    g_results, g_abort, g_error = {}, false, false
    g_in_execute_yield, g_in_mainloop, g_from_flip = false, false, false

    -- create a coroutine to allow the code to yield to us periodically
    local coro = cocreate(function () 
        local results = pack(execute_raw(line))
        if (results.n != 0) add(g_results, results)
    end)
    local _ok, error
    while true do
        _ok, error = coresume(coro)
        if (costatus(coro) == 'dead') break

        -- handle yields (due to yield/flip or periodic)
        if g_enable_interrupt and not g_in_mainloop then
            g_interrupt = ""running, press 'esc' to abort""
            _draw(); flip()
            g_interrupt = nil
        else
            if (g_enable_autoflip and not g_in_mainloop and not g_from_flip) flip()
            if (not g_enable_autoflip and holdframe) holdframe()
            g_from_flip = false
        end

        for key in get_keys() do
            if key == '\x1b' then g_abort = true
            else add(g_pending_keys, key) end
        end

        -- abort execution if needed
        if (g_abort) error = 'computation aborted'; break
    end

    if g_error == nil then -- code is incomplete
        if (complete) error = ""unexpected end of code"" else error, g_results = nil
    end
    if (g_error) error, g_error = g_error .. ""\nat "" .. pos_to_str(line, g_error_idx)
    g_error_output = error
    g_pending_keys = {}
    return not error
end

-- called periodically during execution
yield_execute = function ()
    -- yield all the way back to us
    g_in_execute_yield = true
    yield()
    g_in_execute_yield = false
end

-- override flip to force a yield_execute
g_ENV.flip = function(...)
    local results = pack(flip(...))
    g_from_flip = true
    yield_execute()
    return depack(results)
end

-- override coresume to handle yield_execute in coroutines
g_ENV.coresume = function(co, ...)
    local results = pack(coresume(co, ...))
    -- propagate yields from yield_execute
    while g_in_execute_yield do
        yield()
        results = pack(coresume(co)) -- and resume
    end
    g_error = false -- discard inner compilation errors (via \x)
    return depack(results)
end

-- override stat so we can handle keys ourselves
g_ENV.stat = function(i, ...)
    if i == 30 then
        return #g_pending_keys > 0 or stat(i, ...)
    elseif i == 31 then
        if #g_pending_keys > 0 then
            return deli(g_pending_keys, 1)
        else
            local key = stat(i, ...)
            if (key == '\x1b') g_abort = true
            return key
        end
    else
        return stat(i, ...)
    end
end

-- simulate a mainloop.
-- NOTE:
--   real mainloop disables time/btnp updates, and also can't be recursed into/quit legally.
--   the below doesn't disable time/btnp updates at all - but that's not important enough for us.
function do_mainloop(env, continue)
    if not continue then
        if (_set_fps) _set_fps(env._update60 and 60 or 30)
        if (env._init) env._init()
    end
    g_in_mainloop = true
    while env._draw or env._update or env._update60 do
        -- if (_update_buttons) _update_buttons() -- this breaks btnp in its current form
        if (holdframe) holdframe()
        if env._update60 then env._update60() elseif env._update then env._update() end
        if (env._draw) env._draw()
        flip()
        g_from_flip = true
        yield_execute()
    end
    g_in_mainloop = false
end

------------------------
-- Cart decompression
------------------------

k_old_code_table = ""\n 0123456789abcdefghijklmnopqrstuvwxyz!#%(){}[]<>+=/*:;.,~_""

-- Old code compression scheme - encodes offset+count for repeated code
function uncompress_code_old(comp)
    local code, i = """", 9
    while true do
        local ch = ord(comp, i); i += 1
        if ch == 0 then
            -- any pico8 char
            local ch2 = comp[i]; i += 1
            if (ch2 == '\0') break -- end
            code ..= ch2
        elseif ch <= 0x3b then
            -- quick char from table
            code ..= k_old_code_table[ch]
        else
            -- copy previous code
            local ch2 = ord(comp, i); i += 1
            local count = (ch2 >> 4) + 2 
            local offset = ((ch - 0x3c) << 4) + (ch2 & 0xf)
            for _=1,count do
                code ..= code[-offset]
            end
        end
    end
    return code
end

-- New code compression scheme - also uses move-to-front (mtf) and bit reading
function uncompress_code_new(comp)
    local code, i, shift, mtf = """", 9, 0, {}

    for idx=0,0xff do mtf[idx] = chr(idx) end

    local function getbit()
        local bit = (ord(comp, i) >> shift) & 1
        shift += 1
        if (shift == 8) i += 1; shift = 0
        return bit == 1
    end
    local function getbits(n)
        local value = 0
        for bit=0,n-1 do -- NOT fast
            value |= tonum(getbit()) << bit
        end
        return value
    end

    while true do
        if getbit() then
            -- literal char
            local nbits, idx = 4, 0
            while (getbit()) idx |= 1 << nbits; nbits += 1
            idx += getbits(nbits)

            local ch = mtf[idx]
            code ..= ch

            -- update mtf
            for j=idx,1,-1 do
                mtf[j] = mtf[j-1]
            end
            mtf[0] = ch
        else
            -- copy previous code (usually)
            local obits = getbit() and (getbit() and 5 or 10) or 15
            local offset = getbits(obits) + 1

            if offset == 1 and obits == 15 then
                break -- not an official way to recognize end, but works
            elseif offset == 1 and obits == 10 then
                -- raw block
                while true do
                    local ch = getbits(8)
                    if (ch == 0) break else code ..= chr(ch)
                end
            else
                local count = 3
                repeat
                    local part = getbits(3)
                    count += part
                until part != 7

                for _=1,count do
                    -- we assume 0x8000 isn't a valid offset (pico8 doesn't produce it)
                    code ..= code[-offset]
                end
            end
        end
    end
    return code
end

------------------------
-- Console input
------------------------

--lint: g_ideal_x, g_key_code
g_prev_paste = stat(4)
g_key_time, g_lower = 0, false

poke(0x5f5c,10,2) -- faster btnp

-- return if keyboard key is pressed, using btnp-like logic
function keyp(code)
    if stat(28,code) then
        if (code != g_key_code) g_key_code, g_key_time = code, 0
        return g_key_time == 0 or (g_key_time >= 10 and g_key_time % 2 == 0)
    elseif g_key_code == code then
        g_key_code = nil
    end
end

-- update console input
function _update()
    local input = false

    local function go_line(dy)
        local cx, cy, h = str_i2xy(g_prompt .. g_input, #g_prompt + g_cursor_pos)
        if (g_ideal_x) cx = g_ideal_x
        cy += dy
        if (not (cy >= 0 and cy < h)) return false
        g_cursor_pos = max(str_xy2i(g_prompt .. g_input, cx, cy) - #g_prompt, 1)
        g_ideal_x = cx
        g_cursor_time = 20 -- setting input clears ideal x
        return true
    end

    local function go_edge(dx)
        local cx, cy = str_i2xy(g_prompt .. g_input, #g_prompt + g_cursor_pos)
        cx = dx > 0 and 100 or 0
        g_cursor_pos = max(str_xy2i(g_prompt .. g_input, cx, cy) - #g_prompt, 1)
        input = true
    end

    local function go_history(di)
        g_history[g_history_i] = g_input
        g_history_i += di
        g_input = g_history[g_history_i]
        if di < 0 then
            g_cursor_pos = #g_input + 1
        else
            g_cursor_pos = max(str_xy2i(g_prompt .. g_input, 32, 0) - #g_prompt, 1) -- end of first line
            local ch = g_input[g_cursor_pos]
            if (ch and ch != '\n') g_cursor_pos -= 1
        end
        input = true
    end

    local function push_history()
        if #g_input > 0 then
            if (#g_history > 50) del(g_history, g_history[1])
            g_history[#g_history] = g_input
            add(g_history, '')
            g_history_i = #g_history
            input = true
        end
    end

    local function delchar(offset)
        if (g_cursor_pos+offset > 0) then
            g_input = sub(g_input,1,g_cursor_pos+offset-1) .. sub(g_input,g_cursor_pos+offset+1)
            g_cursor_pos += offset
            input = true
        end
    end

    local function inschar(key)
        g_input = sub(g_input,1,g_cursor_pos-1) .. key .. sub(g_input,g_cursor_pos)
        g_cursor_pos += #key
        input = true
    end

    local ctrl = stat(28,224) or stat(28,228)
    local shift = stat(28,225) or stat(28,229)

    local keycode = -1
    if keyp(80) then -- left
        if (g_cursor_pos > 1) g_cursor_pos -= 1; input = true
    elseif keyp(79) then -- right
        if (g_cursor_pos <= #g_input) g_cursor_pos += 1; input = true
    elseif keyp(82) then -- up
        if ((ctrl or not go_line(-1)) and g_history_i > 1) go_history(-1)
    elseif keyp(81) then -- down
        if ((ctrl or not go_line(1)) and g_history_i < #g_history) go_history(1)
    else
        local key = stat(31)
        keycode = ord(key)

        if key == '\x1b' then -- escape
            if #g_input == 0 then extcmd ""pause""
            else g_results, g_error_output = {}; push_history() end
        elseif key == '\r' or key == '\n' then -- enter
            if shift then
                inschar '\n'
            else
                execute(g_input) -- sets g_results/g_error_output
                if (not g_results) inschar '\n' else push_history()
            end
        elseif ctrl and keyp(40) then -- ctrl+enter
            execute(g_input, true); push_history()
        elseif key != '' and keycode >= 0x20 and keycode < 0x9a then -- ignore ctrl-junk
            if (g_lower and keycode >= 0x80) key = chr(keycode - 63)
            inschar(key)
        elseif keycode == 193 then -- ctrl+b
            inschar '\n'
        elseif keycode == 192 then -- ctrl+a
            go_edge(-1)
        elseif keycode == 196 then -- ctrl+e
            go_edge(1)
        elseif keycode == 203 then -- ctrl+l
            g_lower = not g_lower
            g_notice, g_notice_time = ""shift now selects "" .. (g_lower and ""punycase"" or ""symbols""), 40
        elseif keyp(74) then -- home
            if (ctrl) g_cursor_pos = 1; input = true else go_edge(-1);
        elseif keyp(77) then -- end
            if (ctrl) g_cursor_pos = #g_input + 1; input = true else go_edge(1);        
        elseif keyp(42) then delchar(-1) -- backspace
        elseif keyp(76) then delchar(0) -- del
        end
    end

    local paste = stat(4)
    if (paste != g_prev_paste or keycode == 213) inschar(paste); g_prev_paste = paste -- ctrl+v

    if keycode == 194 or keycode == 215 then -- ctrl+x/c
        if g_input != '' and g_input != g_prev_paste then
            g_prev_paste = g_input; printh(g_input, ""@clip"");
            if (keycode == 215) g_input = ''; g_cursor_pos = 1;
            g_notice = ""press again to put in clipboard""
        else
            g_notice = ''
        end
    end

    if stat(120) then -- file drop
        local str, count = """"
        repeat
            count = serial(0x800,0x5f80,0x80)
            str ..= chr(peek(0x5f80,count))
        until count == 0
        if (not load_cart(str)) inschar(str)
    end

    if (input) g_cursor_time, g_ideal_x = 20
    g_key_time += 1

    unpause()
end

------------------------
-- Main
------------------------

-- my own crummy mainloop, since time() does not seem to update if the regular mainloop goes ""rogue"" and flips.
function toplevel_main()
    while true do
        if (holdframe) holdframe()
        _update()
        _draw()
        flip()
    end
end

-- Self-test
-- (so I can more easily see if something got regressed in the future (esp. due to pico8 changes))

function selftest(i, cb)
    local ok, error = coresume(cocreate(cb))
    if not ok then
        printh(""error #"" .. i .. "": "" .. error)
        print(""error #"" .. i .. ""\npico8 broke something again,\nthis cart may not work.\npress any button to ignore"")
        while (btnp() == 0) flip()
        cls()
    end
end

selftest(1, function() assert(pack(eval_raw ""(function (...) return ... end)(1,2,nil,nil)"" ).n == 4) end)
selftest(2, function() assert(eval_raw ""function() local temp, temp2 = {max(1,3)}, -20;return temp[1] + temp2; end"" () == -17) end)

-------------------------------------------------------
-- We're running out of tokens!
-- What to do? Well, we already have an interpreter above,
-- so we might as well as interpret the rest of our code!
--
-- But looking at code inside strings isn't fun, so I'm automatically moving
-- all the below code (after the count::stop) into the $$BELOW$$ string
-- when creating the cart.
-------------------------------------------------------

_ENV.g_ENV = g_ENV -- make g_ENV a global, so it can be accessed by below code
execute_raw(""$$BELOW$$"", _ENV)
--lint: count::stop

------------------------
-- Special \-commands
------------------------

-- execute a repl-specific command
function cmd_exec(name)
    if isin(name, {""i"",""interrupt""}) then
        return g_enable_interrupt
    elseif isin(name, {""f"",""flip""}) then
        return g_enable_autoflip
    elseif isin(name, {""r"",""repl""}) then
        return g_enable_repl
    elseif isin(name, {""mi"",""max_items""}) then
        return g_show_max_items
    elseif isin(name, {""h"",""hex""}) then
        return g_hex_output
    elseif isin(name, {""pr"",""precise""}) then
        return g_precise_output
    elseif isin(name, {""cl"",""colors""}) then
        return g_pal
    elseif isin(name, {""c"",""code""}) then
        local code = {[0]=g_input}
        for i=1,#g_history-1 do code[i] = g_history[#g_history-i] end
        return code
    elseif isin(name, {""cm"",""compile""}) then
        return function(str) return try_parse(str) end
    elseif isin(name, {""x"",""exec""}) then
        return function(str, env, ...) execute_raw(str, env, ...) end
    elseif isin(name, {""v"",""eval""}) then
        return function(str, env, ...) return eval_raw(str, env, ...) end
    elseif isin(name, {""p"",""print""}) then
        return function(str, ...) g_ENV.print(value_to_str(str), ...) end
    elseif isin(name, {""ts"",""tostr""}) then
        return function(str) return value_to_str(str) end
    elseif isin(name, {""rst"",""reset""}) then
        run() -- full pico8 reset
    elseif isin(name, {""run""}) then
        do_mainloop(g_ENV)
    elseif isin(name, {""cont""}) then
        do_mainloop(g_ENV, true)
    else
        assert(false, ""unknown \\-command"")
    end
end

-- assign to a repl-specific command
function cmd_assign(name)
    local function trueish(t)
        return (t and t != 0) and true or false
    end

    local func
    if isin(name, {""i"",""interrupt""}) then
        func = function(v) g_enable_interrupt = trueish(v) end
    elseif isin(name, {""f"",""flip""}) then
        func = function(v) g_enable_autoflip = trueish(v) end
    elseif isin(name, {""r"",""repl""}) then
        func = function(v) g_enable_repl = trueish(v) end
    elseif isin(name, {""mi"",""max_items""}) then
        func = function(v) g_show_max_items = tonum(v) or -1 end
    elseif isin(name, {""h"",""hex""}) then
        func = function(v) g_hex_output = trueish(v) end
    elseif isin(name, {""pr"",""precise""}) then
        func = function(v) g_precise_output = trueish(v) end
    elseif isin(name, {""cl"",""colors""}) then
        func = function(v) g_pal = v end
    else
        assert(false, ""unknown \\-command assign"")
    end

    -- do some trickery to allow calling func upon assignment
    -- (as we're expected to return the assignment target)
    local obj = {
        __newindex=function(t,k,v) func(v) end,
        __index=function() return cmd_exec(name) end, -- op-assign needs this
    }
    return setmetatable(obj, obj), 0
end

------------------------
-- Misc.
------------------------

function load_cart(str)
    -- is this a full rom? (I'm assuming nobody will drop exactly-32kb text files here!)
    local code, full = sub(str, 0x4301)
    if #code == 0x3d00 then
        full = true
        poke(0, ord(str, 1, 0x4300)) -- load rom
    else
        code = str -- else, either tiny-rom or plaintext
    end

    local header = sub(code, 1, 4)
    if header == "":c:\0"" then
        code = uncompress_code_old(code)
    elseif header == ""\0pxa"" then
        code = uncompress_code_new(code)
    elseif full then
        code = split(code, '\0')[1]
    else
        -- either plaintext or a tiny/uncompressed tiny-rom (indistinguishable)
        return
    end

    -- run in ideal execution environment
    g_enable_interrupt, g_enable_repl = false, false
    local ok = execute(code, true)
    g_enable_repl = true
    if (ok) execute(""\\run"") -- we need to call do_mainloop from within execute, this is the easiest way
    return true
end

toplevel_main()"
TRMFu91F,Untitled,ScriptHub_YT,JSON,Friday 25th of August 2023 02:18:37 PM CDT,"{
  ""status"": {
    ""text"": ""AutoAd is healthy, no issues reported!""
  },
  ""update_log"": [
    {
      ""version"": ""1"",
      ""message"": ""AutoAd is currently in beta, report issues to thread by pinging @.benscripts on Discord!""
    }
  ]
}
"
wbiKTFVH,Untitled,Don_Mag,Swift,Friday 25th of August 2023 02:17:15 PM CDT,"class OldRecordsTableViewCell: UITableViewCell {
	static let identifier: String = ""c""
}

class RecordingViewController: UIViewController {
	
	private let tableView: UITableView = {
		let tableView = UITableView()
		tableView.translatesAutoresizingMaskIntoConstraints = false
		tableView.register(OldRecordsTableViewCell.self, forCellReuseIdentifier: OldRecordsTableViewCell.identifier)
		tableView.separatorStyle = .none
		tableView.backgroundColor = .clear
		tableView.isScrollEnabled = true
		return tableView
	}()
	
	let allRecordsLabel = UILabel()
	let contentView1 = UIView()
	
	override func viewDidLoad() {
		super.viewDidLoad()

		allRecordsLabel.translatesAutoresizingMaskIntoConstraints = false
		contentView1.translatesAutoresizingMaskIntoConstraints = false
		
		view.addSubview(contentView1)
		contentView1.addSubview(allRecordsLabel)
		contentView1.addSubview(tableView)
		
		NSLayoutConstraint.activate([
			contentView1.topAnchor.constraint(equalTo: view.topAnchor),
			contentView1.leadingAnchor.constraint(equalTo: view.leadingAnchor),
			contentView1.trailingAnchor.constraint(equalTo: view.trailingAnchor),
			contentView1.bottomAnchor.constraint(equalTo: view.bottomAnchor),
			
			allRecordsLabel.topAnchor.constraint(equalTo: contentView1.topAnchor, constant: 80.0),
			allRecordsLabel.leadingAnchor.constraint(equalTo: contentView1.leadingAnchor),
			allRecordsLabel.trailingAnchor.constraint(equalTo: contentView1.trailingAnchor),

			tableView.topAnchor.constraint(equalTo: allRecordsLabel.bottomAnchor, constant: 26.5),
			tableView.bottomAnchor.constraint(equalTo: contentView1.bottomAnchor, constant: -15),
			tableView.leadingAnchor.constraint(equalTo: contentView1.leadingAnchor, constant: 43),
			tableView.trailingAnchor.constraint(equalTo: contentView1.trailingAnchor, constant: -43)
		])

		allRecordsLabel.text = ""All Records""
		
		view.backgroundColor = .systemYellow
		contentView1.backgroundColor = .systemBlue
		allRecordsLabel.backgroundColor = .green
		
		tableView.dataSource = self
		tableView.delegate = self
		
	}

	
}

extension RecordingViewController: UITableViewDataSource, UITableViewDelegate {
	
	func numberOfSections(in tableView: UITableView) -> Int {
		return 1
	}
	
	func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
		return 20
	}
	
	func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
		let cell = tableView.dequeueReusableCell(withIdentifier: OldRecordsTableViewCell.identifier, for: indexPath) as! OldRecordsTableViewCell
		cell.textLabel?.text = ""Text \(indexPath.row)""
		return cell
	}
	
	func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool {
		
		print(""Content Size: \(tableView.contentSize)"")
		print(""Bounds Size: \(tableView.bounds.size)"")
		
		return true
	}
}
"
JfUrLJhb,Código Bucle PHP Carrusel Swiper - OV DIVI,oscarviedma,PHP,Friday 25th of August 2023 02:09:10 PM CDT,"<?php
$args = array(
    'post_type' => 'testimonios',  // Nombre de la Custom Post Type
    'posts_per_page' => 6,       // Mostrar todos los post
    'order' => 'DESC',            // Ordenar del más reciente a más antiguo
);

$testimonios_query = new WP_Query($args);

if ($testimonios_query->have_posts()) {
    ?>
    <div class=""swiper ov-swiper-testimonios"">
        <div class=""swiper-wrapper"">
            <?php while ($testimonios_query->have_posts()) : $testimonios_query->the_post(); ?>
                <div class=""swiper-slide"">
                  
                  <!-- Diseño card testimonio -->
                  <div class=""ov-card-testimonio"">
                    <div class=""avatar""> 
                      <img src=""<?php the_field('imagen_de_perfil'); ?>"" />
                    </div>
                    <div class=""estrellas"">
                      <img src=""https://ovdemos.com/wp-content/uploads/2023/08/5-estrellas.svg"" />
                    </div>
                    <div class=""descripcion"">
                      <p><?php the_field('descripcion'); ?></p>
                    </div>
                    <div class=""nombre"">
                      <h3><?php the_field('nombre'); ?></h3>
                      <p class=""empresa""><?php the_field('empresa'); ?></p>
                    </div>
                  </div>
                  <!-- Fin diseño card testimonio -->
                  
                  </div>
            <?php endwhile; ?>
        </div>
        <!-- Agregar botones de navegación si lo deseas -->
        <div class=""swiper-button-next""></div>
        <div class=""swiper-button-prev""></div>
    </div>

    <?php
    wp_reset_postdata(); // Restablecer los datos del bucle
} else {
    echo ""No se encontraron testimonios."";
}
?>
"
UenJYGiA,fr,Samy442,JSON,Friday 25th of August 2023 02:08:05 PM CDT,"{
  ""Index"": {
    ""title"": ""Bonjour""
  }
}"
ddNvCGBN,Código Bucle PHP Grid de Testimonios - OVDIVI,oscarviedma,PHP,Friday 25th of August 2023 02:05:26 PM CDT,"<?php
$args = array(
    'post_type' => 'testimonios', // Nombre de la Custom Post Type
    'order' => 'ASC', // Nombre del más antiguo al más reciente
    'posts_per_page' => 6, // Número de post por página
    'paged' => get_query_var('paged') ? get_query_var('paged') : 1 // Página actual
);

$testimonios_query = new WP_Query($args);

if ($testimonios_query->have_posts()) { ?>
<div class=""ov-testimonios-grid"">
    <?php while ($testimonios_query->have_posts()) : $testimonios_query->the_post(); ?>
        <!-- Diseño card testimonio -->
        <div class=""ov-card-testimonio"">
            <div class=""avatar"">
                <img src=""<?php the_field('imagen_de_perfil'); ?>"" />
            </div>
            <div class=""estrellas"">
                <img src=""https://ovdemos.com/wp-content/uploads/2023/08/5-estrellas.svg"" />
            </div>
            <div class=""descripcion"">
                <p><?php the_field('descripcion'); ?></p>
            </div>
            <div class=""nombre"">
                <h3><?php the_field('nombre'); ?></h3>
                <p class=""empresa""><?php the_field('empresa'); ?></p>
            </div>
        </div>
        <!-- Fin diseño card testimonio -->
    <?php endwhile; ?>
</div>

<div class=""pagination"">
    <?php
    echo paginate_links(array(
        'total' => $testimonios_query->max_num_pages,
        'current' => max(1, get_query_var('paged')),
    ));
    ?>
</div>

<?php
    wp_reset_postdata(); // Restablecer los datos del bucle
} else {
    echo ""No se encontraron testimonios."";
}
?>
"
91nkx80S,Código Bucle WordPress de Ejemplo - OV DIVI,oscarviedma,PHP,Friday 25th of August 2023 02:02:32 PM CDT,"<?php
// El loop de testimonios
$args = array(
    'post_type' => 'testimonios',  // Nombre de la Custom Post Type
    'posts_per_page' => -1,       // Mostrar todas las entradas
);

$testimonios_query = new WP_Query($args);

if ($testimonios_query->have_posts()) {
    while ($testimonios_query->have_posts()) {
        $testimonios_query->the_post();
        ?>
        <div class=""testimonial"">
            <h2><?php the_title(); ?></h2>
            <div class=""testimonial-content"">
                <?php the_content(); ?>
            </div>
        </div>
        <?php
    }
    wp_reset_postdata(); // Restablecer los datos del bucle
} else {
    echo ""No se encontraron testimonios."";
}
?>
"
MUC6fjb3,CodinGame_2023_08_25__20_56_57__perfect_square.cpp,MonsterScripter,C++,Friday 25th of August 2023 01:57:09 PM CDT,"#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

// Fonction pour vérifier si un nombre est un carré parfait
bool isPerfectSquare(int n) {
    int sqrtN = sqrt(n);
    return sqrtN * sqrtN == n;
}

int main() {
    int x;
    cin >> x;

    vector<int> perfectSquareFactors;

    // Parcours des entiers de 2 à x pour vérifier les facteurs carrés parfaits
    for (int i = 2; i <= x; i++) {
        if (x % i == 0 && isPerfectSquare(i)) {
            perfectSquareFactors.push_back(i);
        }
    }

    // Affichage des résultats en fonction des facteurs carrés parfaits trouvés
    if (perfectSquareFactors.empty()) {
        cout << ""None"" << endl;
    } else {
        for (int factor : perfectSquareFactors) {
            cout << factor << "" "";
        }
        cout << endl;
    }

    return 0;
}
"
v3tdfgVi,paintc,VladPastebin1212124,Lua,Friday 25th of August 2023 01:46:06 PM CDT,"print(""what file you want to paint"")
local file = read()
shell.run(""paint"",file)"
PLjv32HZ,lesson11_322,Petro_zzz,C++,Friday 25th of August 2023 01:30:41 PM CDT,"#include <iostream>
using namespace std;

void calc_average() {
	int b;
	cout << ""Ввоедите оценки для вычисления вседнего\n"";
	cout << ""Для окончания введите 0\n"";

	int sum = 0, n = 0;
	//b = 1;
	cin >> b;
	while (b > 0 && b <= 5) {
		sum += b;
		n++;
		cin >> b;		
	}

	cout << ""Средний балл: "" 
		 << (double)sum/n 
		 << endl;
}

double power(double x, int n) {
	/*double x = ;
	int n = ;*/
	/*
	if (n == 0)
		return 1;
		*/
	double y = 1;	
	while (n < 0) {
		y /= x;
		n++;
	}
	while (n > 0) {
		y *= x;
		n--;
	}
	//return pow(x, n);
	return y;
}

double power2(double x, int n) {
	double y = 1;
	if (n < 0) {
		n = -n;
		x = 1 / x;  // x = x / 2  --> x /= 2
	}
	while (n > 0) {
		y *= x;
		n--;
	}
	//return pow(x, n);
	return y;
}

void table_mult() {
	cout << ""x\\y\t"";
	int x = 2, y = 1;

	while (y < 10) {		
		while (x < 10) {
			cout << x * y << '\t';
			x++;
		}
		x = 1;
		cout << endl;
		y++;
	}
}

int get_rand(int a, int b) {
	return rand() % (b - a + 1) + a;
}

int one_humanstep(int n) {
	int number;
	switch (n)
	{
	case 1: cout << ""Первая""; break;
	case 2: cout << ""Вторая""; break;
	case 3: cout << ""Третья""; break;
	default: cout << n << ""-ая""; break;
	}
	cout << "" попытка. Введите число :"";
	cin >> number;
	return number;
}


void run_game() {
	/*
	       ""УГАДАЙ ЧИСЛО""

		Ваша задача угадать число за 
		наименьшее число попыток. Если 
		Вы сдаётесь нажмите 0.

		Начнём игру? 1 - да, 0 - нет.
		1
		Я загадал число от 0 до 500. Угадывай. 
		
		Первая попытка. Введите число: 250.

		250 больше числа, которое я загадал.

		Вторая попытка. Введите число: 120.
		120 меньше числа, которое я загадал.

		Третья попытка. Введите число: 134.
		Поздравляю, Вы угадали.
	*/

	cout << ""      \""УГАДАЙ ЧИСЛО\""    "" << endl;
	cout << R""(
Ваша задача угадать число за 
наименьшее число попыток.
Если Вы сдаётесь нажмите 0.
)"" << endl;
	cout << ""Начнём игру? 1 - да, 0 - нет."" << endl;
	int is_start, ai_number, number;
	int step = 0;
	cin >> is_start;
	if (is_start) {
		cout << ""Я загадал число от 0 до 500. Угадывай."" << endl;
		ai_number = get_rand(1, 500);		
		ai_number = 55;
		while (true) {
			step++;
			number = one_humanstep(step);
			if (number <= 0 || number == ai_number) {
				break;
			}
		}
		if (number == ai_number) {
			cout << ""Выйграли"" << endl;
		}
		else {
			cout << ""Проиграли"" << endl;
		}
		
		//cout << ai_number << endl;
		/*
		cout << ""Первая попытка.Введите число :"";
		cin >> number;
		if (number != 0) {
			if (number != ai_number) {
				cout << number << ""больше числа, которое я загадал."" << endl;
				cout << ""Вторая попытка.Введите число :"";
				cin >> number;
				if (number != 0) {
					if (number != ai_number) {
			}
		}
		*/

	}
}



void test_random() {
	cout << ""time: "" << time(NULL) << endl << endl;	
	int n = 0;	
	while (n < 50) {
		//int x = rand() % 500 + 1; /// [0, 499] --> [1, 500]
		int x = get_rand(-5, 5);
		cout << x << endl;
		n++;
	}
}



int main() {
	setlocale(LC_ALL, ""ru"");
	srand(time(NULL));

	/*one_humanstep(1);
	one_humanstep(2);
	one_humanstep(3);
	one_humanstep(400);
	*/

	//table_mult();
	//calc_average();
	//cout << power(2, -4) << endl;
	/*cout << 2 * power(val, 4) << endl;
	double y = power(3.0, 4) * sin(0.1);
	cout << y << endl;*/
	//test_random();
	run_game();
}
"
FN8NMHE0,AI In-Fighting,Vendily,Ruby,Friday 25th of August 2023 01:29:40 PM CDT,"#===============================================================================
# AI In-Fighting - By Vendily [v21]
#===============================================================================
# This script adds in in-fighting between AI controlled battlers, such as
#  Seviper/Zangoose fighting each other in horde encounters, or Mareanie
#  targeting Corsola when summoned by SOS.
# It also allows the feature to be given to Trainers, though unlike wild battles,
#  Trainer controlled battlers will not actively seek out to attack allies, they
#  are just allowed to target them, and are not negatively scored if they do so.
#===============================================================================
# An additional modification is necessary to made to the base scripts.
#  in `def pbGetMoveScores` in script section `AI_ChooseMove`
# `next if target_data.targets_foe && !@user.battler.opposes?(b)` becomes
# `next if target_data.targets_foe && !@user.battler.opposes?(b) && !@trainer.should_in_fight?(@user, b)`
#===============================================================================
# Trainer Types or Wild Pokémon Species with the ""Infighting"" flag will be
#  allowed to target allies.
# Wild Pokémon Species with the ""InFighting_SPECIES"" flag will specifically
#  target SPECIES allies at an increased rate. The ""InFighting_SPECIES"" flag
#  automatically applies the ""Infighting"" Flag.
#  Only the Species with the ""InFighting_SPECIES"" flag will target allies.
#===============================================================================
PluginManager.register({
  :name    => ""AI In-Fighting"",
  :version => ""1.0"",
  :essentials => ""21.1"",
  :credits => ""Vendily""
})


class Battle::AI::AITrainer
  attr_reader :skill_flags
  
  alias _ai_infight_set_up_skill_flags set_up_skill_flags
  def set_up_skill_flags
    _ai_infight_set_up_skill_flags
    return if @trainer
    added_infighting = false
    @ai.battle.eachSameSideBattler(@side) do |b|
      sp_data = b.pokemon.species_data
      if sp_data.has_flag?(""InFighting"")
        @skill_flags.push(""InFighting"")
        added_infighting = true
      end
      sp_data.flags.each do |flag|
        next unless flag[/^InFighting_(\w+)$/i]
        target_species = $~[1].upcase.to_sym
        next unless GameData::Species.exists?(target_species)
        @skill_flags.push(sprintf(""InFighting_%s_%s"",target_species,sp_data.species))
        unless added_infighting
          @skill_flags.push(""InFighting"")
          added_infighting = true
        end
      end
    end
  end
  
  def should_in_fight?(user,target)
    return false if !has_skill_flag?(""InFighting"")
    return true if @trainer
    user_species = user.battler.species
    target_species = target.species
    return has_skill_flag?(sprintf(""InFighting_%s_%s"",target_species,user_species))
  end
end

class Battle::AI
  alias _ai_infight_add_move_to_choices add_move_to_choices
  def add_move_to_choices(choices, idxMove, score, idxTarget = -1)
    if idxTarget>=0 && @trainer.should_in_fight?(@user,@battle.battlers[idxTarget]) &&
        !@user.battler.opposes?(idxTarget)
      # reverse the reversal of Ally targeting 
      old_score = score
      score = ((1.85 * MOVE_BASE_SCORE) - score).to_i
      PBDebug.log_score_change(score - old_score, ""#{@user.name} is in-fighting, intentionally targeting ally."")
    end
    _ai_infight_add_move_to_choices(choices, idxMove, score, idxTarget)
    return unless @user.wild?
    # Increase chance of infighting for wild mons that specifically target a species
    if idxTarget>=0 && @trainer.should_in_fight?(@user,@battle.battlers[idxTarget]) &&
        !@user.battler.opposes?(idxTarget)
      PBDebug.log_ai(""#{@user.name} is in-fighting, extra attempt against ally."")
      choices.push([idxMove, score, idxTarget])
    end
  end
end"
5PnFHqZ1,Untitled,Sergey_Schcelov,C++,Friday 25th of August 2023 01:21:37 PM CDT,"#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#define int long long

using namespace std;


void qsort(int l, int r, vector<int>& arr) {
    if (r - l <= 1)
        return;
    int x = arr[l + (rand() % (r - l))];
    int f_e = l, f_b = l;
    for (int i = l; i < r; i++) {
        if (arr[i] < x) {
            swap(arr[i], arr[f_e]);
            if (f_e != f_b) {
                swap(arr[i], arr[f_b]);
            }
            f_e++;
            f_b++;
        }
        else if (arr[i] == x) {
            swap(arr[i], arr[f_b]);
            f_b++;
        }
    }
    qsort(l, f_e, arr);
    qsort(f_b, r, arr);
}




signed main() {
    int x, y, a, b, c;
    cin >> x >> y >> a >> b >> c;
    vector<int> A(a+1);
    vector<int> B(b+1);
    vector<int> C(c+1);
    for (int i = 0; i < a; ++i)
        cin >> A[i];
    for (int i = 0; i < b; ++i)
        cin >> B[i];
    for (int i = 0; i < c; ++i)
        cin >> C[i];
    A[a]= 1e9+1;B[b]= 1e9+1;
    qsort(0, a, A);
    qsort(0, b, B);
    qsort(0, c, C);

    int res = 0;
    int i = a-x, j = b-y, k = c-1;
    while ((i<a or j<b) and (C[k] > A[i] or C[k] > B[j])){
        if (A[i] < B[j]){
            if (C[k] > A[i])
                ++i;
            else if (C[k] > B[j])
                ++j;
        } else {
            if (C[k] > B[j])
                ++j;
            else if (C[k] > A[i])
                ++i;
        }
        res += C[k];
        --k;
    }
    while (i++ < a)
        res += A[i-1];
    while (j++ < b)
        res += B[j-1];

    cout << res;
}"
yvetMX8r,CB2,Sergey_Schcelov,C++,Friday 25th of August 2023 01:20:16 PM CDT,"#include <iostream>
#include <iomanip>
#include <cmath>
#define int long long

using namespace std;

int power(int x, int y){
    if (y == 0)
        return 1;
    else if (y%2==1)
        return 2*power(x, y-1);
    else return power(x, y/2)*pow(x, y/2);
}


signed main() {
    int n;
    cin >> n;
    while (n-- > 0){
        int x, len=0;
        cin >> x;
        string doublex = """";
        int first = -1, second = -1, third = -1;

        while (x > 0){
            doublex = to_string(x%2) + doublex;
            if (x%2 == 1){
                third = second;
                second = first;
                first = len;
            }
            x/=2;
            ++len;
        }

        if (third == -1 and len >= 4)
            cout << power(2, len-4) * 7 << ""\n"";
        else if (third == -1)
            cout << -1 << ""\n"";
        else
            cout << power(2, third)*(1 + power(2, second-third)*(1+power(2, first-second))) << ""\n"";
    }
}"
0BgaDYUt,Tpt elemen creator,Hekt0RblxScripts,Lua,Friday 25th of August 2023 01:09:00 PM CDT,"--[[
Ignore name old account lol.
  _  _     _   _           _    
 | || |___| |_| |_ ___ _ _( )___
 | __ / -_) / /  _/ _ \ '_|/(_-<
 |_||_\___|_\_\\__\___/_| _ /__/
 | __| |___ _ __  ___ _ _| |_   
 | _|| / -_) '  \/ -_) ' \  _|  
 |___|_\___|_|_|_\___|_||_\__|  
  / __|_ _ ___ __ _| |_ ___ _ _ 
 | (__| '_/ -_) _` |  _/ _ \ '_|
  \___|_| \___\__,_|\__\___/_|  
              
       By Hekt0r_(dis)      
       Report bugs in server(ping)                   
]]
colr = 0
grup = ""ELCREATOR"" -- variables for creating elements
nme = ""notentered""
templ = """"

__tmps = {""WATR"", ""SAND"", ""METL""}
-- Notice : elements may not be fully configurable
-- CORE UI: Ui for creating elements(do not touch)
local __MWIN = Window:new(-1, -1, 300, 400)
local __EXITBTN = Button:new(-1,-1, 20,20, ""X"")
local __MBTN = Button:new(10, 10, 100, 17, ""Element Creator"")
local __SETBTN = Button:new(95, 340, 50, 17, ""Set"")
local __LBLNAME = Textbox:new(80, 20, 100, 20)
local __LBLCOLOR = Textbox:new(80, 70, 140, 20)
local __LBLTEMPL = Textbox:new(80, 130, 140, 20)

function genEl(nam, color, template)
--[[
  Generate an element with Name, 
  color, and template for physics
  0xffffff
  watr
  
]]
shortNam = string.sub(nam, 1 ,4 )

gendElements = {}
curElGend = elements.allocate(grup, nam)

if template == ""WATR"" or template == ""watr"" then
  -- if water
  elements.element(curElGend, elements.element(elements.DEFAULT_PT_WATR))
elseif template == ""SAND"" or template == ""sand"" then
  -- if sand
  elements.element(curElGend, elements.element(elements.DEFAULT_PT_SAND))
elseif template == ""METL"" or template == ""metl"" then
  -- if metal
  elements.element(curElGend, elements.element(elements.DEFAULT_PT_METL))
elseif template == ""HYGN"" or template == ""hygn"" then
  -- if hydrogen
  elements.element(curElGend, elements.element(elements.DEFAULT_PT_HYGN))
elseif template == ""LAVA"" or template == ""lava"" then
  -- if lava
  elements.element(curElGend, elements.element(elements.DEFAULT_PT_LAVA))
elseif template == ""OIL"" or template == ""oil"" then
  -- if lava
  elements.element(curElGend, elements.element(elements.DEFAULT_PT_OIL))
elseif template == ""DEST"" or template == ""dest"" then
  -- if lava
  elements.element(curElGend, elements.element(elements.DEFAULT_PT_DEST))
end

elements.property(curElGend, ""Name"", shortNam)
elements.property(curElGend, ""Description"", ""Test."")
elements.property(curElGend, ""Colour"", color)
 end
--Codegen

--Defining elements and methods
__LBLNAME:text(""Element name"")
__LBLCOLOR:text(""Element color(HEX)"")
__LBLTEMPL:text(""Element template"")
__MBTN:action(function(sender) interface.showWindow(__MWIN) end)
__SETBTN:action(function(sender) nme = tostring(__LBLNAME:text())  colr = tonumber(__LBLCOLOR:text()) templ = __LBLTEMPL:text() genEl(nme, colr, templ ) end)
__EXITBTN:action(function(sender) interface.closeWindow(__MWIN) end)

--Actions
__MWIN:addComponent(__EXITBTN)
__MWIN:addComponent(__LBLNAME)
__MWIN:addComponent(__SETBTN)
__MWIN:addComponent(__LBLCOLOR)
__MWIN:addComponent(__LBLTEMPL)
interface.addComponent(__MBTN)
--Adding components


print(nme)
print(__LBLNAME:text())

-- Debug
"
P0yUf8SS,Keystone Bank - Jeff Wilkinson - Scam - Fraud - Spam,bombaires,HTML,Friday 25th of August 2023 01:00:09 PM CDT,"<a href=""mailto:keystonebjeffwilkinson@googlemail.com"">keystonebjeffwilkinson@googlemail.com</a>
<a href=""mailto:ke.y.s.ton.eb.j.ef.fw.i.lk.i.nson@googlemail.com"">ke.y.s.ton.eb.j.ef.fw.i.lk.i.nson@googlemail.com</a>
<a href=""mailto:keysto.ne.b.je.ff.w.il.kin.s.o.n@googlemail.com"">keysto.ne.b.je.ff.w.il.kin.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.o.nebj.e.f.fw.i.l.k.ins.o.n@googlemail.com"">k.e.y.s.t.o.nebj.e.f.fw.i.l.k.ins.o.n@googlemail.com</a>
<a href=""mailto:ke.y.st.o.n.ebjeff.wi.l.k.in.son@googlemail.com"">ke.y.st.o.n.ebjeff.wi.l.k.in.son@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.b.jeff.w.i.lkin.s.o.n@googlemail.com"">k.e.y.s.t.o.ne.b.jeff.w.i.lkin.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.ys.to.nebjef.f.wil.k.i.nson@googlemail.com"">k.e.ys.to.nebjef.f.wil.k.i.nson@googlemail.com</a>
<a href=""mailto:k.ey.sto.n.eb.je.f.f.w.il.k.inson@googlemail.com"">k.ey.sto.n.eb.je.f.f.w.il.k.inson@googlemail.com</a>
<a href=""mailto:keys.to.n.eb.je.f.fwilki.nso.n@googlemail.com"">keys.to.n.eb.je.f.fwilki.nso.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.to.neb.j.ef.fwilkin.s.o.n@googlemail.com"">k.e.y.s.to.neb.j.ef.fwilkin.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.ys.t.one.bj.e.f.fw.i.l.ki.n.s.on@googlemail.com"">k.e.ys.t.one.bj.e.f.fw.i.l.ki.n.s.on@googlemail.com</a>
<a href=""mailto:keys.ton.e.b.jef.fwil.ki.ns.o.n@googlemail.com"">keys.ton.e.b.jef.fwil.ki.ns.o.n@googlemail.com</a>
<a href=""mailto:keys.ton.e.bj.e.ffw.i.lk.inson@googlemail.com"">keys.ton.e.bj.e.ffw.i.lk.inson@googlemail.com</a>
<a href=""mailto:ke.y.ston.ebj.e.ffw.i.l.kins.on@googlemail.com"">ke.y.ston.ebj.e.ffw.i.l.kins.on@googlemail.com</a>
<a href=""mailto:ke.y.st.one.b.j.ef.fwi.lkin.so.n@googlemail.com"">ke.y.st.one.b.j.ef.fwi.lkin.so.n@googlemail.com</a>
<a href=""mailto:k.ey.s.t.o.ne.bje.ff.wilk.in.son@googlemail.com"">k.ey.s.t.o.ne.bje.ff.wilk.in.son@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.oneb.j.ef.fw.i.lki.ns.on@googlemail.com"">k.e.y.s.t.oneb.j.ef.fw.i.lki.ns.on@googlemail.com</a>
<a href=""mailto:key.st.o.nebj.e.f.f.wi.l.k.in.son@googlemail.com"">key.st.o.nebj.e.f.f.wi.l.k.in.son@googlemail.com</a>
<a href=""mailto:keys.toneb.je.f.fw.i.lk.in.so.n@googlemail.com"">keys.toneb.je.f.fw.i.lk.in.so.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.ton.e.bje.f.fwi.lki.n.s.on@googlemail.com"">k.e.y.s.ton.e.bje.f.fwi.lki.n.s.on@googlemail.com</a>
<a href=""mailto:k.ey.st.o.n.e.bjeff.w.i.lkin.son@googlemail.com"">k.ey.st.o.n.e.bjeff.w.i.lkin.son@googlemail.com</a>
<a href=""mailto:k.ey.ston.eb.je.ff.wilk.in.so.n@googlemail.com"">k.ey.ston.eb.je.ff.wilk.in.so.n@googlemail.com</a>
<a href=""mailto:key.s.to.neb.j.eff.wilkin.s.on@googlemail.com"">key.s.to.neb.j.eff.wilkin.s.on@googlemail.com</a>
<a href=""mailto:ke.y.s.t.on.e.b.je.f.fw.i.lk.i.nson@googlemail.com"">ke.y.s.t.on.e.b.je.f.fw.i.lk.i.nson@googlemail.com</a>
<a href=""mailto:k.ey.sto.n.ebj.e.f.f.wilk.in.s.on@googlemail.com"">k.ey.sto.n.ebj.e.f.f.wilk.in.s.on@googlemail.com</a>
<a href=""mailto:k.eyst.on.ebj.e.f.fw.i.lk.ins.on@googlemail.com"">k.eyst.on.ebj.e.f.fw.i.lk.ins.on@googlemail.com</a>
<a href=""mailto:k.e.ys.t.oneb.je.ffwi.l.k.i.ns.on@googlemail.com"">k.e.ys.t.oneb.je.ffwi.l.k.i.ns.on@googlemail.com</a>
<a href=""mailto:keyst.o.neb.je.f.f.w.il.kin.son@googlemail.com"">keyst.o.neb.je.f.f.w.il.kin.son@googlemail.com</a>
<a href=""mailto:k.eys.to.ne.b.j.e.f.fw.i.l.k.ins.on@googlemail.com"">k.eys.to.ne.b.j.e.f.fw.i.l.k.ins.on@googlemail.com</a>
<a href=""mailto:k.e.ys.t.on.e.bjef.f.wi.lk.i.ns.on@googlemail.com"">k.e.ys.t.on.e.bjef.f.wi.lk.i.ns.on@googlemail.com</a>
<a href=""mailto:key.st.on.eb.je.f.f.wilk.inson@googlemail.com"">key.st.on.eb.je.f.f.wilk.inson@googlemail.com</a>
<a href=""mailto:keys.t.one.bj.ef.f.w.i.lki.nso.n@googlemail.com"">keys.t.one.bj.ef.f.w.i.lki.nso.n@googlemail.com</a>
<a href=""mailto:ke.y.sto.n.eb.j.e.f.fwi.l.k.in.so.n@googlemail.com"">ke.y.sto.n.eb.j.e.f.fwi.l.k.in.so.n@googlemail.com</a>
<a href=""mailto:keysto.ne.b.j.eff.w.i.lk.i.n.s.o.n@googlemail.com"">keysto.ne.b.j.eff.w.i.lk.i.n.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.one.bjeffwi.lk.i.nson@googlemail.com"">k.e.y.s.t.one.bjeffwi.lk.i.nson@googlemail.com</a>
<a href=""mailto:ke.yst.o.ne.b.j.ef.fwil.ki.nson@googlemail.com"">ke.yst.o.ne.b.j.ef.fwil.ki.nson@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.oneb.j.e.f.f.wi.lkin.s.o.n@googlemail.com"">k.e.y.s.t.oneb.j.e.f.f.wi.lkin.s.o.n@googlemail.com</a>
<a href=""mailto:k.eys.tone.bje.ff.wi.l.ki.n.son@googlemail.com"">k.eys.tone.bje.ff.wi.l.ki.n.son@googlemail.com</a>
<a href=""mailto:k.ey.stone.b.je.f.f.wil.kins.on@googlemail.com"">k.ey.stone.b.je.f.f.wil.kins.on@googlemail.com</a>
<a href=""mailto:keys.t.on.e.bj.e.ffwi.lk.in.so.n@googlemail.com"">keys.t.on.e.bj.e.ffwi.lk.in.so.n@googlemail.com</a>
<a href=""mailto:ke.ys.t.o.ne.bj.e.ffw.ilk.i.n.s.on@googlemail.com"">ke.ys.t.o.ne.bj.e.ffw.ilk.i.n.s.on@googlemail.com</a>
<a href=""mailto:keys.tonebj.eff.wil.k.i.n.s.o.n@googlemail.com"">keys.tonebj.eff.wil.k.i.n.s.o.n@googlemail.com</a>
<a href=""mailto:ke.ysto.ne.bjeffwilk.i.ns.on@googlemail.com"">ke.ysto.ne.bjeffwilk.i.ns.on@googlemail.com</a>
<a href=""mailto:ke.yst.o.ne.bj.e.ff.w.il.k.in.s.o.n@googlemail.com"">ke.yst.o.ne.bj.e.ff.w.il.k.in.s.o.n@googlemail.com</a>
<a href=""mailto:keyst.o.nebj.e.f.fw.i.lkin.s.on@googlemail.com"">keyst.o.nebj.e.f.fw.i.lkin.s.on@googlemail.com</a>
<a href=""mailto:ke.y.sto.n.e.b.j.e.ff.wi.lk.i.nso.n@googlemail.com"">ke.y.sto.n.e.b.j.e.ff.wi.lk.i.nso.n@googlemail.com</a>
<a href=""mailto:k.ey.sto.ne.b.j.e.f.f.w.i.l.k.in.s.o.n@googlemail.com"">k.ey.sto.ne.b.j.e.f.f.w.i.l.k.in.s.o.n@googlemail.com</a>
<a href=""mailto:keystone.bj.eff.w.i.l.k.i.n.son@googlemail.com"">keystone.bj.eff.w.i.l.k.i.n.son@googlemail.com</a>
<a href=""mailto:k.e.y.st.oneb.j.e.ffwil.ki.n.s.on@googlemail.com"">k.e.y.st.oneb.j.e.ffwil.ki.n.s.on@googlemail.com</a>
<a href=""mailto:ke.ys.t.o.nebje.f.fwi.l.ki.nson@googlemail.com"">ke.ys.t.o.nebje.f.fwi.l.ki.nson@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.bjef.fw.i.l.k.inson@googlemail.com"">k.e.y.s.t.o.ne.bjef.fw.i.l.k.inson@googlemail.com</a>
<a href=""mailto:ke.y.st.o.nebj.e.f.f.w.il.k.i.nson@googlemail.com"">ke.y.st.o.nebj.e.f.f.w.il.k.i.nson@googlemail.com</a>
<a href=""mailto:ke.y.s.to.ne.b.j.effwi.lk.ins.o.n@googlemail.com"">ke.y.s.to.ne.b.j.effwi.lk.ins.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.st.o.nebje.f.f.wi.lki.ns.o.n@googlemail.com"">k.e.y.st.o.nebje.f.f.wi.lki.ns.o.n@googlemail.com</a>
<a href=""mailto:k.ey.sto.n.e.bj.ef.f.wil.k.in.s.o.n@googlemail.com"">k.ey.sto.n.e.bj.ef.f.wil.k.in.s.o.n@googlemail.com</a>
<a href=""mailto:ke.y.s.toneb.jef.fw.i.l.kinson@googlemail.com"">ke.y.s.toneb.jef.fw.i.l.kinson@googlemail.com</a>
<a href=""mailto:k.ey.s.to.n.eb.jeff.wi.lk.i.n.son@googlemail.com"">k.ey.s.to.n.eb.jeff.wi.lk.i.n.son@googlemail.com</a>
<a href=""mailto:k.e.y.stoneb.jeffw.ilki.n.s.o.n@googlemail.com"">k.e.y.stoneb.jeffw.ilki.n.s.o.n@googlemail.com</a>
<a href=""mailto:ke.y.st.on.ebj.ef.f.wi.l.k.i.nson@googlemail.com"">ke.y.st.on.ebj.ef.f.wi.l.k.i.nson@googlemail.com</a>
<a href=""mailto:key.ston.eb.j.e.ff.w.i.lk.i.ns.o.n@googlemail.com"">key.ston.eb.j.e.ff.w.i.lk.i.ns.o.n@googlemail.com</a>
<a href=""mailto:k.eys.t.o.n.eb.jef.fwil.k.in.so.n@googlemail.com"">k.eys.t.o.n.eb.jef.fwil.k.in.so.n@googlemail.com</a>
<a href=""mailto:key.s.to.ne.b.jef.fwi.lk.inso.n@googlemail.com"">key.s.to.ne.b.jef.fwi.lk.inso.n@googlemail.com</a>
<a href=""mailto:ke.ys.t.on.e.b.je.f.f.wilk.i.ns.o.n@googlemail.com"">ke.ys.t.on.e.b.je.f.f.wilk.i.ns.o.n@googlemail.com</a>
<a href=""mailto:k.ey.ston.ebj.e.ff.wil.k.i.ns.o.n@googlemail.com"">k.ey.ston.ebj.e.ff.wil.k.i.ns.o.n@googlemail.com</a>
<a href=""mailto:key.st.o.n.e.b.jeffw.ilki.n.s.o.n@googlemail.com"">key.st.o.n.e.b.jeffw.ilki.n.s.o.n@googlemail.com</a>
<a href=""mailto:keysto.ne.b.j.ef.fwil.k.inson@googlemail.com"">keysto.ne.b.j.ef.fwil.k.inson@googlemail.com</a>
<a href=""mailto:ke.y.st.o.n.ebje.ff.wi.l.ki.ns.on@googlemail.com"">ke.y.st.o.n.ebje.ff.wi.l.ki.ns.on@googlemail.com</a>
<a href=""mailto:ke.yst.on.e.bjeff.wi.l.k.ins.o.n@googlemail.com"">ke.yst.on.e.bjeff.wi.l.k.ins.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.on.eb.j.effwi.lki.nson@googlemail.com"">k.e.y.s.t.on.eb.j.effwi.lki.nson@googlemail.com</a>
<a href=""mailto:key.s.t.one.b.jef.fw.i.l.ki.ns.o.n@googlemail.com"">key.s.t.one.b.jef.fw.i.l.ki.ns.o.n@googlemail.com</a>
<a href=""mailto:k.e.yston.eb.j.e.f.fwil.ki.n.so.n@googlemail.com"">k.e.yston.eb.j.e.f.fwil.ki.n.so.n@googlemail.com</a>
<a href=""mailto:k.ey.s.t.o.n.ebj.ef.fw.i.l.k.in.s.o.n@googlemail.com"">k.ey.s.t.o.n.ebj.ef.fw.i.l.k.in.s.o.n@googlemail.com</a>
<a href=""mailto:key.s.ton.e.bj.e.f.fw.il.k.i.nso.n@googlemail.com"">key.s.ton.e.bj.e.f.fw.il.k.i.nso.n@googlemail.com</a>
<a href=""mailto:k.e.ys.t.oneb.j.e.ff.w.i.l.k.i.nso.n@googlemail.com"">k.e.ys.t.oneb.j.e.ff.w.i.l.k.i.nso.n@googlemail.com</a>
<a href=""mailto:k.eystoneb.j.ef.fw.ilkins.o.n@googlemail.com"">k.eystoneb.j.ef.fw.ilkins.o.n@googlemail.com</a>
<a href=""mailto:keys.t.onebjef.fw.i.lki.nson@googlemail.com"">keys.t.onebjef.fw.i.lki.nson@googlemail.com</a>
<a href=""mailto:k.e.ys.t.o.nebjeffw.il.kinso.n@googlemail.com"">k.e.ys.t.o.nebjeffw.il.kinso.n@googlemail.com</a>
<a href=""mailto:k.ey.s.t.o.n.e.b.j.e.ffw.i.lk.i.n.son@googlemail.com"">k.ey.s.t.o.n.e.b.j.e.ffw.i.lk.i.n.son@googlemail.com</a>
<a href=""mailto:k.eys.ton.e.bjef.fwi.lkins.o.n@googlemail.com"">k.eys.ton.e.bjef.fwi.lkins.o.n@googlemail.com</a>
<a href=""mailto:k.e.ys.to.n.eb.jef.f.w.il.k.i.ns.on@googlemail.com"">k.e.ys.to.n.eb.jef.f.w.il.k.i.ns.on@googlemail.com</a>
<a href=""mailto:ke.y.s.to.ne.bje.ff.w.ilk.i.n.s.o.n@googlemail.com"">ke.y.s.to.ne.bje.ff.w.ilk.i.n.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.st.on.eb.je.f.f.w.ilkins.on@googlemail.com"">k.e.y.st.on.eb.je.f.f.w.ilkins.on@googlemail.com</a>
<a href=""mailto:key.sto.nebj.e.ff.w.il.k.i.ns.o.n@googlemail.com"">key.sto.nebj.e.ff.w.il.k.i.ns.o.n@googlemail.com</a>
<a href=""mailto:ke.ystoneb.je.f.fwi.l.ki.n.s.on@googlemail.com"">ke.ystoneb.je.f.fwi.l.ki.n.s.on@googlemail.com</a>
<a href=""mailto:keys.t.o.ne.bje.ffw.ilkinson@googlemail.com"">keys.t.o.ne.bje.ffw.ilkinson@googlemail.com</a>
<a href=""mailto:k.e.ys.to.n.ebj.e.ffw.i.lki.n.s.on@googlemail.com"">k.e.ys.to.n.ebj.e.ffw.i.lki.n.s.on@googlemail.com</a>
<a href=""mailto:ke.y.sto.n.e.b.jef.fwi.lk.i.n.s.o.n@googlemail.com"">ke.y.sto.n.e.b.jef.fwi.lk.i.n.s.o.n@googlemail.com</a>
<a href=""mailto:ke.yston.ebj.e.ffwil.ki.n.s.o.n@googlemail.com"">ke.yston.ebj.e.ffwil.ki.n.s.o.n@googlemail.com</a>
<a href=""mailto:ke.y.st.one.bj.ef.f.wi.lki.n.s.o.n@googlemail.com"">ke.y.st.one.bj.ef.f.wi.lki.n.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.ys.to.neb.jef.fw.ilkin.s.o.n@googlemail.com"">k.e.ys.to.neb.jef.fw.ilkin.s.o.n@googlemail.com</a>
<a href=""mailto:k.ey.s.t.o.neb.jeff.w.i.l.k.in.son@googlemail.com"">k.ey.s.t.o.neb.jeff.w.i.l.k.in.son@googlemail.com</a>
<a href=""mailto:ke.ys.t.o.neb.j.e.ffwi.l.k.i.n.so.n@googlemail.com"">ke.ys.t.o.neb.j.e.ffwi.l.k.i.n.so.n@googlemail.com</a>
<a href=""mailto:ke.y.st.on.eb.j.ef.fw.il.kin.s.on@googlemail.com"">ke.y.st.on.eb.j.ef.fw.il.kin.s.on@googlemail.com</a>
<a href=""mailto:k.e.yst.on.e.bje.ffwi.lkin.s.on@googlemail.com"">k.e.yst.on.e.bje.ffwi.lkin.s.on@googlemail.com</a>
<a href=""mailto:k.ey.sto.n.e.b.j.e.ffw.i.lki.n.s.o.n@googlemail.com"">k.ey.sto.n.e.b.j.e.ffw.i.lki.n.s.o.n@googlemail.com</a>
<a href=""mailto:ke.y.s.t.on.eb.j.e.ffw.i.l.k.ins.o.n@googlemail.com"">ke.y.s.t.on.eb.j.e.ffw.i.l.k.ins.o.n@googlemail.com</a>
<a href=""mailto:ke.y.s.t.on.eb.je.f.f.wi.lki.nson@googlemail.com"">ke.y.s.t.on.eb.je.f.f.wi.lki.nson@googlemail.com</a>
<a href=""mailto:k.e.ysto.n.eb.jef.f.w.ilk.i.n.s.on@googlemail.com"">k.e.ysto.n.eb.jef.f.w.ilk.i.n.s.on@googlemail.com</a>
<a href=""mailto:ke.ys.to.n.ebj.effwi.lkin.s.on@googlemail.com"">ke.ys.to.n.ebj.effwi.lkin.s.on@googlemail.com</a>
<a href=""mailto:ke.ys.t.o.neb.je.f.f.w.il.ki.n.s.o.n@googlemail.com"">ke.ys.t.o.neb.je.f.f.w.il.ki.n.s.o.n@googlemail.com</a>
<a href=""mailto:key.ston.ebj.e.f.f.w.i.lk.i.n.s.on@googlemail.com"">key.ston.ebj.e.f.f.w.i.lk.i.n.s.on@googlemail.com</a>
<a href=""mailto:ke.ys.t.o.n.e.b.je.ffw.ilkin.so.n@googlemail.com"">ke.ys.t.o.n.e.b.je.ffw.ilkin.so.n@googlemail.com</a>
<a href=""mailto:k.eysto.n.e.b.j.effwi.l.kins.on@googlemail.com"">k.eysto.n.e.b.j.effwi.l.kins.on@googlemail.com</a>
<a href=""mailto:k.e.ys.to.nebje.ffw.ilki.nson@googlemail.com"">k.e.ys.to.nebje.ffw.ilki.nson@googlemail.com</a>
<a href=""mailto:keys.t.oneb.je.f.f.wilki.ns.on@googlemail.com"">keys.t.oneb.je.f.f.wilki.ns.on@googlemail.com</a>
<a href=""mailto:k.eyst.one.bj.effw.i.lki.ns.o.n@googlemail.com"">k.eyst.one.bj.effw.i.lki.ns.o.n@googlemail.com</a>
<a href=""mailto:k.eysto.n.eb.j.ef.f.w.ilki.n.s.on@googlemail.com"">k.eysto.n.eb.j.ef.f.w.ilki.n.s.on@googlemail.com</a>
<a href=""mailto:ke.ys.ton.eb.j.e.ff.wil.k.i.n.son@googlemail.com"">ke.ys.ton.eb.j.e.ff.wil.k.i.n.son@googlemail.com</a>
<a href=""mailto:keys.t.o.n.e.b.j.ef.f.w.il.k.i.nson@googlemail.com"">keys.t.o.n.e.b.j.ef.f.w.il.k.i.nson@googlemail.com</a>
<a href=""mailto:k.eys.t.o.ne.bjef.fw.ilk.ins.on@googlemail.com"">k.eys.t.o.ne.bjef.fw.ilk.ins.on@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.bj.ef.f.wil.k.in.so.n@googlemail.com"">k.e.y.s.t.o.ne.bj.ef.f.wil.k.in.so.n@googlemail.com</a>
<a href=""mailto:k.e.y.st.onebj.effw.i.l.k.i.n.s.on@googlemail.com"">k.e.y.st.onebj.effw.i.l.k.i.n.s.on@googlemail.com</a>
<a href=""mailto:key.s.t.oneb.j.ef.fwi.lk.in.s.on@googlemail.com"">key.s.t.oneb.j.ef.fwi.lk.in.s.on@googlemail.com</a>
<a href=""mailto:k.e.y.st.one.bj.eff.w.i.lkin.s.o.n@googlemail.com"">k.e.y.st.one.bj.eff.w.i.lkin.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.ys.t.o.nebj.e.ffwi.l.k.in.s.on@googlemail.com"">k.e.ys.t.o.nebj.e.ffwi.l.k.in.s.on@googlemail.com</a>
<a href=""mailto:key.s.ton.e.bj.ef.fwi.lkin.s.on@googlemail.com"">key.s.ton.e.bj.ef.fwi.lkin.s.on@googlemail.com</a>
<a href=""mailto:key.s.t.one.bj.e.ffw.il.kin.so.n@googlemail.com"">key.s.t.one.bj.e.ffw.il.kin.so.n@googlemail.com</a>
<a href=""mailto:k.e.y.sto.neb.j.ef.fw.i.lki.n.s.o.n@googlemail.com"">k.e.y.sto.neb.j.ef.fw.i.lki.n.s.o.n@googlemail.com</a>
<a href=""mailto:k.ey.s.to.n.ebje.f.f.wi.l.k.i.ns.o.n@googlemail.com"">k.ey.s.to.n.ebje.f.f.wi.l.k.i.ns.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.ton.e.bj.effw.i.l.ki.nso.n@googlemail.com"">k.e.y.s.ton.e.bj.effw.i.l.ki.nso.n@googlemail.com</a>
<a href=""mailto:ke.yst.one.b.j.e.f.f.wi.lk.i.nson@googlemail.com"">ke.yst.one.b.j.e.f.f.wi.lk.i.nson@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.on.ebjeff.wil.k.in.so.n@googlemail.com"">k.e.y.s.t.on.ebjeff.wil.k.in.so.n@googlemail.com</a>
<a href=""mailto:k.eys.to.ne.bj.eff.w.ilkins.o.n@googlemail.com"">k.eys.to.ne.bj.eff.w.ilkins.o.n@googlemail.com</a>
<a href=""mailto:k.ey.s.t.o.ne.b.j.e.ffw.ilkinson@googlemail.com"">k.ey.s.t.o.ne.b.j.e.ffw.ilkinson@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.one.b.jef.f.w.ilki.n.s.on@googlemail.com"">k.e.y.s.t.one.b.jef.f.w.ilki.n.s.on@googlemail.com</a>
<a href=""mailto:k.e.yston.ebjef.fwi.l.k.i.nso.n@googlemail.com"">k.e.yston.ebjef.fwi.l.k.i.nso.n@googlemail.com</a>
<a href=""mailto:ke.y.s.to.n.e.bje.ffw.il.ki.nso.n@googlemail.com"">ke.y.s.to.n.e.bje.ffw.il.ki.nso.n@googlemail.com</a>
<a href=""mailto:ke.y.s.ton.e.b.jef.f.wi.lk.i.ns.o.n@googlemail.com"">ke.y.s.ton.e.b.jef.f.wi.lk.i.ns.o.n@googlemail.com</a>
<a href=""mailto:k.eys.toneb.j.e.f.fwilk.in.so.n@googlemail.com"">k.eys.toneb.j.e.f.fwilk.in.so.n@googlemail.com</a>
<a href=""mailto:k.eyst.onebj.e.ff.w.il.k.i.ns.on@googlemail.com"">k.eyst.onebj.e.ff.w.il.k.i.ns.on@googlemail.com</a>
<a href=""mailto:k.eyst.one.bjef.fwil.k.i.ns.o.n@googlemail.com"">k.eyst.one.bjef.fwil.k.i.ns.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.st.on.e.bj.effw.il.kinson@googlemail.com"">k.e.y.st.on.e.bj.effw.il.kinson@googlemail.com</a>
<a href=""mailto:k.ey.s.t.on.e.bj.e.ff.wil.ki.n.s.on@googlemail.com"">k.ey.s.t.on.e.bj.e.ff.wil.ki.n.s.on@googlemail.com</a>
<a href=""mailto:ke.ys.t.o.neb.jef.fwi.l.ki.n.s.on@googlemail.com"">ke.ys.t.o.neb.jef.fwi.l.ki.n.s.on@googlemail.com</a>
<a href=""mailto:k.e.y.s.to.ne.bje.f.f.w.i.l.kins.o.n@googlemail.com"">k.e.y.s.to.ne.bje.f.f.w.i.l.kins.o.n@googlemail.com</a>
<a href=""mailto:keys.tone.b.je.ff.w.ilk.i.n.so.n@googlemail.com"">keys.tone.b.je.ff.w.ilk.i.n.so.n@googlemail.com</a>
<a href=""mailto:key.st.o.n.e.b.j.e.f.fwil.kin.son@googlemail.com"">key.st.o.n.e.b.j.e.f.fwil.kin.son@googlemail.com</a>
<a href=""mailto:ke.yst.o.n.e.b.je.ff.w.ilk.ins.o.n@googlemail.com"">ke.yst.o.n.e.b.je.ff.w.ilk.ins.o.n@googlemail.com</a>
<a href=""mailto:ke.ys.t.one.bj.e.f.fw.ilk.in.s.o.n@googlemail.com"">ke.ys.t.one.bj.e.f.fw.ilk.in.s.o.n@googlemail.com</a>
<a href=""mailto:key.stone.bjef.f.w.ilk.inson@googlemail.com"">key.stone.bjef.f.w.ilk.inson@googlemail.com</a>
<a href=""mailto:k.e.ys.t.on.e.b.je.f.fw.il.k.i.n.so.n@googlemail.com"">k.e.ys.t.on.e.b.je.f.fw.il.k.i.n.so.n@googlemail.com</a>
<a href=""mailto:ke.ystoneb.j.ef.f.w.il.ki.n.son@googlemail.com"">ke.ystoneb.j.ef.f.w.il.ki.n.son@googlemail.com</a>
<a href=""mailto:keys.tone.bj.effw.i.lki.ns.o.n@googlemail.com"">keys.tone.bj.effw.i.lki.ns.o.n@googlemail.com</a>
<a href=""mailto:k.ey.st.on.e.b.je.f.f.wil.kin.s.o.n@googlemail.com"">k.ey.st.on.e.b.je.f.f.wil.kin.s.o.n@googlemail.com</a>
<a href=""mailto:key.s.tone.bj.e.f.fwilk.in.s.o.n@googlemail.com"">key.s.tone.bj.e.f.fwilk.in.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.on.eb.j.e.f.fwilki.ns.o.n@googlemail.com"">k.e.y.s.t.on.eb.j.e.f.fwilki.ns.o.n@googlemail.com</a>
<a href=""mailto:keysto.n.ebjef.f.wilki.nson@googlemail.com"">keysto.n.ebjef.f.wilki.nson@googlemail.com</a>
<a href=""mailto:key.st.on.e.b.jef.f.w.i.l.kin.s.o.n@googlemail.com"">key.st.on.e.b.jef.f.w.i.l.kin.s.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.bjeff.w.ilk.i.ns.o.n@googlemail.com"">k.e.y.s.t.o.ne.bjeff.w.ilk.i.ns.o.n@googlemail.com</a>
<a href=""mailto:k.ey.st.o.n.e.b.jef.f.w.ilki.n.s.on@googlemail.com"">k.ey.st.o.n.e.b.jef.f.w.ilki.n.s.on@googlemail.com</a>
<a href=""mailto:key.stonebje.f.fwi.l.ki.nson@googlemail.com"">key.stonebje.f.fwi.l.ki.nson@googlemail.com</a>
<a href=""mailto:key.sto.n.e.b.jeff.w.ilk.i.nso.n@googlemail.com"">key.sto.n.e.b.jeff.w.ilk.i.nso.n@googlemail.com</a>
<a href=""mailto:k.ey.ston.eb.j.eff.w.ilk.ins.o.n@googlemail.com"">k.ey.ston.eb.j.eff.w.ilk.ins.o.n@googlemail.com</a>
<a href=""mailto:k.ey.st.o.nebjeff.wil.kin.s.o.n@googlemail.com"">k.ey.st.o.nebjeff.wil.kin.s.o.n@googlemail.com</a>
<a href=""mailto:keys.to.neb.j.e.f.fwi.lki.ns.o.n@googlemail.com"">keys.to.neb.j.e.f.fwi.lki.ns.o.n@googlemail.com</a>
<a href=""mailto:ke.y.st.o.n.ebje.f.fwi.l.k.i.ns.on@googlemail.com"">ke.y.st.o.n.ebje.f.fwi.l.k.i.ns.on@googlemail.com</a>
<a href=""mailto:k.eysto.ne.b.j.e.f.f.wilkins.o.n@googlemail.com"">k.eysto.ne.b.j.e.f.f.wilkins.o.n@googlemail.com</a>
<a href=""mailto:keys.ton.e.bjef.fwi.lki.n.s.on@googlemail.com"">keys.ton.e.bjef.fwi.lki.n.s.on@googlemail.com</a>
<a href=""mailto:ke.y.st.o.ne.b.je.f.f.wi.lk.in.so.n@googlemail.com"">ke.y.st.o.ne.b.je.f.f.wi.lk.in.so.n@googlemail.com</a>
<a href=""mailto:k.e.ys.to.n.eb.j.e.f.f.w.il.kin.so.n@googlemail.com"">k.e.ys.to.n.eb.j.e.f.f.w.il.kin.so.n@googlemail.com</a>
<a href=""mailto:key.ston.ebjef.f.wi.lki.n.s.on@googlemail.com"">key.ston.ebjef.f.wi.lki.n.s.on@googlemail.com</a>
<a href=""mailto:k.e.ys.ton.eb.j.eff.w.ilk.inso.n@googlemail.com"">k.e.ys.ton.eb.j.eff.w.ilk.inso.n@googlemail.com</a>
<a href=""mailto:k.e.ys.to.ne.bj.effw.ilk.i.ns.o.n@googlemail.com"">k.e.ys.to.ne.bj.effw.ilk.i.ns.o.n@googlemail.com</a>
<a href=""mailto:keysto.neb.j.e.f.f.w.ilk.ins.o.n@googlemail.com"">keysto.neb.j.e.f.f.w.ilk.ins.o.n@googlemail.com</a>
<a href=""mailto:ke.ys.to.n.e.b.j.e.ff.wilk.ins.o.n@googlemail.com"">ke.ys.to.n.e.b.j.e.ff.wilk.ins.o.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.b.j.ef.f.w.ilkin.son@googlemail.com"">k.e.y.s.t.o.ne.b.j.ef.f.w.ilkin.son@googlemail.com</a>
<a href=""mailto:k.eyst.o.nebj.ef.f.wi.lk.i.n.son@googlemail.com"">k.eyst.o.nebj.ef.f.wi.lk.i.n.son@googlemail.com</a>
<a href=""mailto:k.ey.st.o.n.e.bjeffw.i.lk.i.nso.n@googlemail.com"">k.ey.st.o.n.e.bjeffw.i.lk.i.nso.n@googlemail.com</a>
<a href=""mailto:k.e.ysto.n.e.bje.ffw.i.l.k.ins.on@googlemail.com"">k.e.ysto.n.e.bje.ffw.i.l.k.ins.on@googlemail.com</a>
<a href=""mailto:keys.tonebje.ff.w.i.lk.inso.n@googlemail.com"">keys.tonebje.ff.w.i.lk.inso.n@googlemail.com</a>
<a href=""mailto:ke.ys.ton.eb.je.ff.w.i.lki.ns.on@googlemail.com"">ke.ys.ton.eb.je.ff.w.i.lki.ns.on@googlemail.com</a>
<a href=""mailto:k.eystone.bj.ef.fwi.l.k.i.nson@googlemail.com"">k.eystone.bj.ef.fwi.l.k.i.nson@googlemail.com</a>
<a href=""mailto:key.st.o.n.e.b.j.e.ffwil.ki.ns.on@googlemail.com"">key.st.o.n.e.b.j.e.ffwil.ki.ns.on@googlemail.com</a>
<a href=""mailto:key.st.o.n.ebj.e.ff.w.i.lk.in.s.on@googlemail.com"">key.st.o.n.ebj.e.ff.w.i.lk.in.s.on@googlemail.com</a>
<a href=""mailto:k.ey.sto.n.e.bje.f.f.w.i.lkinson@googlemail.com"">k.ey.sto.n.e.bje.f.f.w.i.lkinson@googlemail.com</a>
<a href=""mailto:key.sto.n.e.b.j.e.f.f.w.ilk.i.n.so.n@googlemail.com"">key.sto.n.e.b.j.e.f.f.w.ilk.i.n.so.n@googlemail.com</a>
<a href=""mailto:key.s.t.one.b.jeffw.il.kins.o.n@googlemail.com"">key.s.t.one.b.jeffw.il.kins.o.n@googlemail.com</a>
<a href=""mailto:k.ey.ston.eb.j.eff.wi.l.k.i.ns.o.n@googlemail.com"">k.ey.ston.eb.j.eff.wi.l.k.i.ns.o.n@googlemail.com</a>
<a href=""mailto:key.sto.ne.b.j.e.ffwil.k.i.nso.n@googlemail.com"">key.sto.ne.b.j.e.ffwil.k.i.nso.n@googlemail.com</a>
<a href=""mailto:key.s.to.ne.b.j.eff.wil.ki.n.son@googlemail.com"">key.s.to.ne.b.j.eff.wil.ki.n.son@googlemail.com</a>
<a href=""mailto:ke.ystone.b.j.effw.il.k.ins.o.n@googlemail.com"">ke.ystone.b.j.effw.il.k.ins.o.n@googlemail.com</a>
<a href=""mailto:k.e.yst.on.e.b.j.effwil.kin.son@googlemail.com"">k.e.yst.on.e.b.j.effwil.kin.son@googlemail.com</a>
<a href=""mailto:k.eys.to.n.eb.jef.f.w.ilk.inso.n@googlemail.com"">k.eys.to.n.eb.jef.f.w.ilk.inso.n@googlemail.com</a>
<a href=""mailto:key.st.oneb.j.eff.w.ilki.nso.n@googlemail.com"">key.st.oneb.j.eff.w.ilki.nso.n@googlemail.com</a>
<a href=""mailto:k.e.y.st.o.n.ebj.ef.fw.il.ki.nso.n@googlemail.com"">k.e.y.st.o.n.ebj.ef.fw.il.ki.nso.n@googlemail.com</a>
<a href=""mailto:ke.ysto.neb.jeffw.i.l.k.i.n.so.n@googlemail.com"">ke.ysto.neb.jeffw.i.l.k.i.n.so.n@googlemail.com</a>
<a href=""mailto:k.e.y.s.ton.eb.j.e.ffw.i.l.k.i.n.son@googlemail.com"">k.e.y.s.ton.eb.j.e.ffw.i.l.k.i.n.son@googlemail.com</a>
<a href=""mailto:k.eys.ton.eb.jeff.wi.l.k.i.ns.on@googlemail.com"">k.eys.ton.eb.jeff.wi.l.k.i.ns.on@googlemail.com</a>
<a href=""mailto:keyston.e.bjef.fwi.l.ki.n.s.on@googlemail.com"">keyston.e.bjef.fwi.l.ki.n.s.on@googlemail.com</a>
<a href=""mailto:k.e.y.st.one.bj.ef.fwil.k.i.n.s.on@googlemail.com"">k.e.y.st.one.bj.ef.fwil.k.i.n.s.on@googlemail.com</a>
<a href=""mailto:ke.ystoneb.je.f.fwil.kin.son@googlemail.com"">ke.ystoneb.je.f.fwil.kin.son@googlemail.com</a>
<a href=""mailto:k.eystone.bj.ef.f.w.ilk.in.son@googlemail.com"">k.eystone.bj.ef.f.w.ilk.in.son@googlemail.com</a>
<a href=""mailto:ke.y.s.to.n.ebj.ef.f.wil.k.ins.on@googlemail.com"">ke.y.s.to.n.ebj.ef.f.wil.k.ins.on@googlemail.com</a>
<a href=""mailto:k.e.y.s.t.one.b.je.ff.wi.l.k.inson@googlemail.com"">k.e.y.s.t.one.b.je.ff.wi.l.k.inson@googlemail.com</a>
<a href=""mailto:key.s.t.on.eb.jeffw.il.k.i.n.s.o.n@googlemail.com"">key.s.t.on.eb.jeffw.il.k.i.n.s.o.n@googlemail.com</a>
<a href=""mailto:ke.ys.toneb.je.ffwi.lk.inso.n@googlemail.com"">ke.ys.toneb.je.ffwi.lk.inso.n@googlemail.com</a>
<a href=""mailto:ke.ys.toneb.je.f.f.w.i.lk.in.son@googlemail.com"">ke.ys.toneb.je.f.f.w.i.lk.in.son@googlemail.com</a>
<a href=""mailto:ke.y.s.tone.b.je.ff.wi.l.k.i.ns.on@googlemail.com"">ke.y.s.tone.b.je.ff.wi.l.k.i.ns.on@googlemail.com</a>
<a href=""mailto:key.s.ton.e.b.j.eff.wi.lki.ns.on@googlemail.com"">key.s.ton.e.b.j.eff.wi.lki.ns.on@googlemail.com</a>
<a href=""mailto:key.s.ton.e.bj.ef.fw.i.lk.in.s.on@googlemail.com"">key.s.ton.e.bj.ef.fw.i.lk.in.s.on@googlemail.com</a>
<a href=""mailto:ke.yst.o.n.e.b.j.e.f.fw.ilk.i.n.son@googlemail.com"">ke.yst.o.n.e.b.j.e.f.fw.ilk.i.n.son@googlemail.com</a>"
m6Dn7q3a,Happy Pet Game Script,Shifu_,Lua,Friday 25th of August 2023 12:59:49 PM CDT,"-- HG Hub
loadstring(game:HttpGet(""https://raw.githubusercontent.com/localyactive/projects/main/folder/hg""))()"
pYgicbAe,save_info_as_json,fory,Python,Friday 25th of August 2023 12:46:01 PM CDT,"import json
import os
import pyfbsdk as fb

def save_all_takes_info_as_json():
    # Create an application object
    fbx = fb.FBApplication()

    # Get a list of all the takes in the current scene
    takes = fb.FBSystem().Scene.Takes

    # Get the name of the FBX file
    fbx_file_name = fbx.FBXFileName

    if fbx_file_name:
        # Extract the base name of the FBX file without extension
        fbx_base_name = os.path.splitext(os.path.basename(fbx_file_name))[0]

        # Create a list to store information for all takes
        all_takes_data = []

        for current_take in takes:
            fb.FBSystem().CurrentTake = current_take

            # Get the current take and its name
            take_name = current_take.Name
            take_length_seconds = current_take.LocalTimeSpan.GetDuration().GetSecondDouble()
            # Insert the frame rate manually  
            frame_rate = 30  
            take_length_frames = int(take_length_seconds * frame_rate)
            

            take_data = {
                ""animation name"": take_name,
                ""animation frame rate"": frame_rate,
                ""animation length in frames"": take_length_frames,
                ""animation length in seconds"": take_length_seconds
                
            }

            all_takes_data.append(take_data)

        # Create a directory for JSON files in the same location as the FBX file
        output_dir = os.path.join(os.path.dirname(fbx_file_name))
        os.makedirs(output_dir, exist_ok=True)

        # Set the destination file name for the JSON file containing all takes info
        json_filename = os.path.join(output_dir, ""animations_info.json"")

        with open(json_filename, ""w"") as json_file:
            json.dump(all_takes_data, json_file, indent=4)

        print(f""All takes information saved as {json_filename}"")

    else:
        print(""No FBX file found."")

save_all_takes_info_as_json()
"
ZAjfkxVK,Nigerian scammers [25-8-2/2023],bombaires,HTML,Friday 25th of August 2023 12:44:25 PM CDT,"<a href=""mailto:westernunion1@activist.com"">westernunion1@activist.com</a>
<a href=""mailto:western.union@activist.com"">western.union@activist.com</a>
<a href=""mailto:officeambassadors5@gmail.com"">officeambassadors5@gmail.com</a>
<a href=""mailto:officeambassadors5+13698@gmail.com"">officeambassadors5+13698@gmail.com</a>
<a href=""mailto:officeambassadors5+17157@gmail.com"">officeambassadors5+17157@gmail.com</a>
<a href=""mailto:officeambassadors5+22625@gmail.com"">officeambassadors5+22625@gmail.com</a>
<a href=""mailto:officeambassadors5+17710@gmail.com"">officeambassadors5+17710@gmail.com</a>
<a href=""mailto:officeambassadors5+5455@gmail.com"">officeambassadors5+5455@gmail.com</a>
<a href=""mailto:officeambassadors5+25990@gmail.com"">officeambassadors5+25990@gmail.com</a>
<a href=""mailto:officeambassadors5+4035@gmail.com"">officeambassadors5+4035@gmail.com</a>
<a href=""mailto:officeambassadors5+20220@gmail.com"">officeambassadors5+20220@gmail.com</a>
<a href=""mailto:officeambassadors5+3732@gmail.com"">officeambassadors5+3732@gmail.com</a>
<a href=""mailto:officeambassadors5+27665@gmail.com"">officeambassadors5+27665@gmail.com</a>
<a href=""mailto:officeambassadors5+15912@gmail.com"">officeambassadors5+15912@gmail.com</a>
<a href=""mailto:officeambassadors5+16267@gmail.com"">officeambassadors5+16267@gmail.com</a>
<a href=""mailto:officeambassadors5+24554@gmail.com"">officeambassadors5+24554@gmail.com</a>
<a href=""mailto:officeambassadors5+26599@gmail.com"">officeambassadors5+26599@gmail.com</a>
<a href=""mailto:officeambassadors5+28268@gmail.com"">officeambassadors5+28268@gmail.com</a>
<a href=""mailto:officeambassadors5+17595@gmail.com"">officeambassadors5+17595@gmail.com</a>
<a href=""mailto:officeambassadors5+14375@gmail.com"">officeambassadors5+14375@gmail.com</a>
<a href=""mailto:officeambassadors5+28750@gmail.com"">officeambassadors5+28750@gmail.com</a>
<a href=""mailto:officeambassadors5+28689@gmail.com"">officeambassadors5+28689@gmail.com</a>
<a href=""mailto:officeambassadors5+14446@gmail.com"">officeambassadors5+14446@gmail.com</a>
<a href=""mailto:officeambassadors5+1163@gmail.com"">officeambassadors5+1163@gmail.com</a>
<a href=""mailto:officeambassadors5+25594@gmail.com"">officeambassadors5+25594@gmail.com</a>
<a href=""mailto:officeambassadors5+31128@gmail.com"">officeambassadors5+31128@gmail.com</a>
<a href=""mailto:officeambassadors5+29302@gmail.com"">officeambassadors5+29302@gmail.com</a>
<a href=""mailto:officeambassadors5+27240@gmail.com"">officeambassadors5+27240@gmail.com</a>
<a href=""mailto:officeambassadors5+7371@gmail.com"">officeambassadors5+7371@gmail.com</a>
<a href=""mailto:officeambassadors5+1463@gmail.com"">officeambassadors5+1463@gmail.com</a>
<a href=""mailto:officeambassadors5+22855@gmail.com"">officeambassadors5+22855@gmail.com</a>
<a href=""mailto:officeambassadors5+10184@gmail.com"">officeambassadors5+10184@gmail.com</a>
<a href=""mailto:officeambassadors5+14575@gmail.com"">officeambassadors5+14575@gmail.com</a>
<a href=""mailto:officeambassadors5+11247@gmail.com"">officeambassadors5+11247@gmail.com</a>
<a href=""mailto:officeambassadors5+7397@gmail.com"">officeambassadors5+7397@gmail.com</a>
<a href=""mailto:officeambassadors5+17998@gmail.com"">officeambassadors5+17998@gmail.com</a>
<a href=""mailto:officeambassadors5+14364@gmail.com"">officeambassadors5+14364@gmail.com</a>
<a href=""mailto:officeambassadors5+4396@gmail.com"">officeambassadors5+4396@gmail.com</a>
<a href=""mailto:officeambassadors5+9686@gmail.com"">officeambassadors5+9686@gmail.com</a>
<a href=""mailto:officeambassadors5+31696@gmail.com"">officeambassadors5+31696@gmail.com</a>
<a href=""mailto:officeambassadors5+26575@gmail.com"">officeambassadors5+26575@gmail.com</a>
<a href=""mailto:officeambassadors5+2339@gmail.com"">officeambassadors5+2339@gmail.com</a>
<a href=""mailto:officeambassadors5+20503@gmail.com"">officeambassadors5+20503@gmail.com</a>
<a href=""mailto:officeambassadors5+20774@gmail.com"">officeambassadors5+20774@gmail.com</a>
<a href=""mailto:officeambassadors5+23872@gmail.com"">officeambassadors5+23872@gmail.com</a>
<a href=""mailto:officeambassadors5+24724@gmail.com"">officeambassadors5+24724@gmail.com</a>
<a href=""mailto:officeambassadors5+3226@gmail.com"">officeambassadors5+3226@gmail.com</a>
<a href=""mailto:officeambassadors5+17942@gmail.com"">officeambassadors5+17942@gmail.com</a>
<a href=""mailto:officeambassadors5+24467@gmail.com"">officeambassadors5+24467@gmail.com</a>
<a href=""mailto:officeambassadors5+19906@gmail.com"">officeambassadors5+19906@gmail.com</a>
<a href=""mailto:officeambassadors5+28416@gmail.com"">officeambassadors5+28416@gmail.com</a>
<a href=""mailto:officeambassadors5+21572@gmail.com"">officeambassadors5+21572@gmail.com</a>
<a href=""mailto:officeambassadors5+27667@gmail.com"">officeambassadors5+27667@gmail.com</a>
<a href=""mailto:officeambassadors5+18770@gmail.com"">officeambassadors5+18770@gmail.com</a>
<a href=""mailto:officeambassadors5+6995@gmail.com"">officeambassadors5+6995@gmail.com</a>
<a href=""mailto:officeambassadors5+12911@gmail.com"">officeambassadors5+12911@gmail.com</a>
<a href=""mailto:officeambassadors5+3203@gmail.com"">officeambassadors5+3203@gmail.com</a>
<a href=""mailto:officeambassadors5+6292@gmail.com"">officeambassadors5+6292@gmail.com</a>
<a href=""mailto:officeambassadors5+19105@gmail.com"">officeambassadors5+19105@gmail.com</a>
<a href=""mailto:officeambassadors5+8752@gmail.com"">officeambassadors5+8752@gmail.com</a>
<a href=""mailto:officeambassadors5+12644@gmail.com"">officeambassadors5+12644@gmail.com</a>
<a href=""mailto:officeambassadors5+16266@gmail.com"">officeambassadors5+16266@gmail.com</a>
<a href=""mailto:officeambassadors5+10855@gmail.com"">officeambassadors5+10855@gmail.com</a>
<a href=""mailto:officeambassadors5+7358@gmail.com"">officeambassadors5+7358@gmail.com</a>
<a href=""mailto:officeambassadors5+24864@gmail.com"">officeambassadors5+24864@gmail.com</a>
<a href=""mailto:officeambassadors5+15509@gmail.com"">officeambassadors5+15509@gmail.com</a>
<a href=""mailto:officeambassadors5+25650@gmail.com"">officeambassadors5+25650@gmail.com</a>
<a href=""mailto:officeambassadors5+9017@gmail.com"">officeambassadors5+9017@gmail.com</a>
<a href=""mailto:officeambassadors5+5862@gmail.com"">officeambassadors5+5862@gmail.com</a>
<a href=""mailto:officeambassadors5+25530@gmail.com"">officeambassadors5+25530@gmail.com</a>
<a href=""mailto:officeambassadors5+11225@gmail.com"">officeambassadors5+11225@gmail.com</a>
<a href=""mailto:officeambassadors5+17633@gmail.com"">officeambassadors5+17633@gmail.com</a>
<a href=""mailto:officeambassadors5+30868@gmail.com"">officeambassadors5+30868@gmail.com</a>
<a href=""mailto:officeambassadors5+3136@gmail.com"">officeambassadors5+3136@gmail.com</a>
<a href=""mailto:officeambassadors5+13221@gmail.com"">officeambassadors5+13221@gmail.com</a>
<a href=""mailto:officeambassadors5+32215@gmail.com"">officeambassadors5+32215@gmail.com</a>
<a href=""mailto:officeambassadors5+7153@gmail.com"">officeambassadors5+7153@gmail.com</a>
<a href=""mailto:officeambassadors5+22797@gmail.com"">officeambassadors5+22797@gmail.com</a>
<a href=""mailto:officeambassadors5+24533@gmail.com"">officeambassadors5+24533@gmail.com</a>
<a href=""mailto:officeambassadors5+25908@gmail.com"">officeambassadors5+25908@gmail.com</a>
<a href=""mailto:officeambassadors5+4277@gmail.com"">officeambassadors5+4277@gmail.com</a>
<a href=""mailto:officeambassadors5+9067@gmail.com"">officeambassadors5+9067@gmail.com</a>
<a href=""mailto:officeambassadors5+13037@gmail.com"">officeambassadors5+13037@gmail.com</a>
<a href=""mailto:officeambassadors5+20643@gmail.com"">officeambassadors5+20643@gmail.com</a>
<a href=""mailto:officeambassadors5+31131@gmail.com"">officeambassadors5+31131@gmail.com</a>
<a href=""mailto:officeambassadors5+13933@gmail.com"">officeambassadors5+13933@gmail.com</a>
<a href=""mailto:officeambassadors5+26534@gmail.com"">officeambassadors5+26534@gmail.com</a>
<a href=""mailto:officeambassadors5+21591@gmail.com"">officeambassadors5+21591@gmail.com</a>
<a href=""mailto:officeambassadors5+11959@gmail.com"">officeambassadors5+11959@gmail.com</a>
<a href=""mailto:officeambassadors5+29006@gmail.com"">officeambassadors5+29006@gmail.com</a>
<a href=""mailto:officeambassadors5+20345@gmail.com"">officeambassadors5+20345@gmail.com</a>
<a href=""mailto:officeambassadors5+22800@gmail.com"">officeambassadors5+22800@gmail.com</a>
<a href=""mailto:officeambassadors5+18743@gmail.com"">officeambassadors5+18743@gmail.com</a>
<a href=""mailto:officeambassadors5+16362@gmail.com"">officeambassadors5+16362@gmail.com</a>
<a href=""mailto:officeambassadors5+29666@gmail.com"">officeambassadors5+29666@gmail.com</a>
<a href=""mailto:officeambassadors5+2609@gmail.com"">officeambassadors5+2609@gmail.com</a>
<a href=""mailto:officeambassadors5+9169@gmail.com"">officeambassadors5+9169@gmail.com</a>
<a href=""mailto:officeambassadors5+12447@gmail.com"">officeambassadors5+12447@gmail.com</a>
<a href=""mailto:officeambassadors5+19624@gmail.com"">officeambassadors5+19624@gmail.com</a>
<a href=""mailto:officeambassadors5+28411@gmail.com"">officeambassadors5+28411@gmail.com</a>
<a href=""mailto:officeambassadors5+6110@gmail.com"">officeambassadors5+6110@gmail.com</a>
<a href=""mailto:officeambassadors5+20330@gmail.com"">officeambassadors5+20330@gmail.com</a>
<a href=""mailto:officeambassadors5+6288@gmail.com"">officeambassadors5+6288@gmail.com</a>
<a href=""mailto:westernunionoffice910@gmail.com"">westernunionoffice910@gmail.com</a>
<a href=""mailto:westernunionoffice910+30782@gmail.com"">westernunionoffice910+30782@gmail.com</a>
<a href=""mailto:westernunionoffice910+20249@gmail.com"">westernunionoffice910+20249@gmail.com</a>
<a href=""mailto:westernunionoffice910+22817@gmail.com"">westernunionoffice910+22817@gmail.com</a>
<a href=""mailto:westernunionoffice910+27253@gmail.com"">westernunionoffice910+27253@gmail.com</a>
<a href=""mailto:westernunionoffice910+13810@gmail.com"">westernunionoffice910+13810@gmail.com</a>
<a href=""mailto:westernunionoffice910+14139@gmail.com"">westernunionoffice910+14139@gmail.com</a>
<a href=""mailto:westernunionoffice910+17352@gmail.com"">westernunionoffice910+17352@gmail.com</a>
<a href=""mailto:westernunionoffice910+3707@gmail.com"">westernunionoffice910+3707@gmail.com</a>
<a href=""mailto:westernunionoffice910+27909@gmail.com"">westernunionoffice910+27909@gmail.com</a>
<a href=""mailto:westernunionoffice910+8615@gmail.com"">westernunionoffice910+8615@gmail.com</a>
<a href=""mailto:westernunionoffice910+9155@gmail.com"">westernunionoffice910+9155@gmail.com</a>
<a href=""mailto:westernunionoffice910+19419@gmail.com"">westernunionoffice910+19419@gmail.com</a>
<a href=""mailto:westernunionoffice910+6343@gmail.com"">westernunionoffice910+6343@gmail.com</a>
<a href=""mailto:westernunionoffice910+30819@gmail.com"">westernunionoffice910+30819@gmail.com</a>
<a href=""mailto:westernunionoffice910+3400@gmail.com"">westernunionoffice910+3400@gmail.com</a>
<a href=""mailto:westernunionoffice910+9062@gmail.com"">westernunionoffice910+9062@gmail.com</a>
<a href=""mailto:westernunionoffice910+5463@gmail.com"">westernunionoffice910+5463@gmail.com</a>
<a href=""mailto:westernunionoffice910+32579@gmail.com"">westernunionoffice910+32579@gmail.com</a>
<a href=""mailto:westernunionoffice910+333@gmail.com"">westernunionoffice910+333@gmail.com</a>
<a href=""mailto:westernunionoffice910+18723@gmail.com"">westernunionoffice910+18723@gmail.com</a>
<a href=""mailto:westernunionoffice910+9891@gmail.com"">westernunionoffice910+9891@gmail.com</a>
<a href=""mailto:westernunionoffice910+1549@gmail.com"">westernunionoffice910+1549@gmail.com</a>
<a href=""mailto:westernunionoffice910+30457@gmail.com"">westernunionoffice910+30457@gmail.com</a>
<a href=""mailto:westernunionoffice910+28754@gmail.com"">westernunionoffice910+28754@gmail.com</a>
<a href=""mailto:westernunionoffice910+2793@gmail.com"">westernunionoffice910+2793@gmail.com</a>
<a href=""mailto:westernunionoffice910+16482@gmail.com"">westernunionoffice910+16482@gmail.com</a>
<a href=""mailto:westernunionoffice910+6693@gmail.com"">westernunionoffice910+6693@gmail.com</a>
<a href=""mailto:westernunionoffice910+10073@gmail.com"">westernunionoffice910+10073@gmail.com</a>
<a href=""mailto:westernunionoffice910+21412@gmail.com"">westernunionoffice910+21412@gmail.com</a>
<a href=""mailto:westernunionoffice910+857@gmail.com"">westernunionoffice910+857@gmail.com</a>
<a href=""mailto:westernunionoffice910+7527@gmail.com"">westernunionoffice910+7527@gmail.com</a>
<a href=""mailto:westernunionoffice910+31451@gmail.com"">westernunionoffice910+31451@gmail.com</a>
<a href=""mailto:westernunionoffice910+31471@gmail.com"">westernunionoffice910+31471@gmail.com</a>
<a href=""mailto:westernunionoffice910+16291@gmail.com"">westernunionoffice910+16291@gmail.com</a>
<a href=""mailto:westernunionoffice910+12997@gmail.com"">westernunionoffice910+12997@gmail.com</a>
<a href=""mailto:westernunionoffice910+30574@gmail.com"">westernunionoffice910+30574@gmail.com</a>
<a href=""mailto:westernunionoffice910+6313@gmail.com"">westernunionoffice910+6313@gmail.com</a>
<a href=""mailto:westernunionoffice910+30727@gmail.com"">westernunionoffice910+30727@gmail.com</a>
<a href=""mailto:westernunionoffice910+3906@gmail.com"">westernunionoffice910+3906@gmail.com</a>
<a href=""mailto:westernunionoffice910+28381@gmail.com"">westernunionoffice910+28381@gmail.com</a>
<a href=""mailto:westernunionoffice910+13524@gmail.com"">westernunionoffice910+13524@gmail.com</a>
<a href=""mailto:westernunionoffice910+22450@gmail.com"">westernunionoffice910+22450@gmail.com</a>
<a href=""mailto:westernunionoffice910+18237@gmail.com"">westernunionoffice910+18237@gmail.com</a>
<a href=""mailto:westernunionoffice910+29312@gmail.com"">westernunionoffice910+29312@gmail.com</a>
<a href=""mailto:westernunionoffice910+13622@gmail.com"">westernunionoffice910+13622@gmail.com</a>
<a href=""mailto:westernunionoffice910+20869@gmail.com"">westernunionoffice910+20869@gmail.com</a>
<a href=""mailto:westernunionoffice910+9190@gmail.com"">westernunionoffice910+9190@gmail.com</a>
<a href=""mailto:westernunionoffice910+2963@gmail.com"">westernunionoffice910+2963@gmail.com</a>
<a href=""mailto:westernunionoffice910+10796@gmail.com"">westernunionoffice910+10796@gmail.com</a>
<a href=""mailto:westernunionoffice910+10390@gmail.com"">westernunionoffice910+10390@gmail.com</a>
<a href=""mailto:westernunionoffice910+23323@gmail.com"">westernunionoffice910+23323@gmail.com</a>
<a href=""mailto:westernunionoffice910+16247@gmail.com"">westernunionoffice910+16247@gmail.com</a>
<a href=""mailto:westernunionoffice910+2725@gmail.com"">westernunionoffice910+2725@gmail.com</a>
<a href=""mailto:westernunionoffice910+5389@gmail.com"">westernunionoffice910+5389@gmail.com</a>
<a href=""mailto:westernunionoffice910+26046@gmail.com"">westernunionoffice910+26046@gmail.com</a>
<a href=""mailto:westernunionoffice910+1759@gmail.com"">westernunionoffice910+1759@gmail.com</a>
<a href=""mailto:westernunionoffice910+224@gmail.com"">westernunionoffice910+224@gmail.com</a>
<a href=""mailto:westernunionoffice910+9741@gmail.com"">westernunionoffice910+9741@gmail.com</a>
<a href=""mailto:westernunionoffice910+20527@gmail.com"">westernunionoffice910+20527@gmail.com</a>
<a href=""mailto:westernunionoffice910+13291@gmail.com"">westernunionoffice910+13291@gmail.com</a>
<a href=""mailto:westernunionoffice910+25076@gmail.com"">westernunionoffice910+25076@gmail.com</a>
<a href=""mailto:westernunionoffice910+8518@gmail.com"">westernunionoffice910+8518@gmail.com</a>
<a href=""mailto:westernunionoffice910+13100@gmail.com"">westernunionoffice910+13100@gmail.com</a>
<a href=""mailto:westernunionoffice910+29725@gmail.com"">westernunionoffice910+29725@gmail.com</a>
<a href=""mailto:westernunionoffice910+16769@gmail.com"">westernunionoffice910+16769@gmail.com</a>
<a href=""mailto:westernunionoffice910+29716@gmail.com"">westernunionoffice910+29716@gmail.com</a>
<a href=""mailto:westernunionoffice910+28940@gmail.com"">westernunionoffice910+28940@gmail.com</a>
<a href=""mailto:westernunionoffice910+5593@gmail.com"">westernunionoffice910+5593@gmail.com</a>
<a href=""mailto:westernunionoffice910+2426@gmail.com"">westernunionoffice910+2426@gmail.com</a>
<a href=""mailto:westernunionoffice910+22143@gmail.com"">westernunionoffice910+22143@gmail.com</a>
<a href=""mailto:westernunionoffice910+20869@gmail.com"">westernunionoffice910+20869@gmail.com</a>
<a href=""mailto:westernunionoffice910+26930@gmail.com"">westernunionoffice910+26930@gmail.com</a>
<a href=""mailto:westernunionoffice910+30127@gmail.com"">westernunionoffice910+30127@gmail.com</a>
<a href=""mailto:westernunionoffice910+756@gmail.com"">westernunionoffice910+756@gmail.com</a>
<a href=""mailto:westernunionoffice910+13941@gmail.com"">westernunionoffice910+13941@gmail.com</a>
<a href=""mailto:westernunionoffice910+4722@gmail.com"">westernunionoffice910+4722@gmail.com</a>
<a href=""mailto:westernunionoffice910+29924@gmail.com"">westernunionoffice910+29924@gmail.com</a>
<a href=""mailto:westernunionoffice910+29571@gmail.com"">westernunionoffice910+29571@gmail.com</a>
<a href=""mailto:westernunionoffice910+18909@gmail.com"">westernunionoffice910+18909@gmail.com</a>
<a href=""mailto:westernunionoffice910+9566@gmail.com"">westernunionoffice910+9566@gmail.com</a>
<a href=""mailto:westernunionoffice910+21172@gmail.com"">westernunionoffice910+21172@gmail.com</a>
<a href=""mailto:westernunionoffice910+5914@gmail.com"">westernunionoffice910+5914@gmail.com</a>
<a href=""mailto:westernunionoffice910+5812@gmail.com"">westernunionoffice910+5812@gmail.com</a>
<a href=""mailto:westernunionoffice910+6716@gmail.com"">westernunionoffice910+6716@gmail.com</a>
<a href=""mailto:westernunionoffice910+29839@gmail.com"">westernunionoffice910+29839@gmail.com</a>
<a href=""mailto:westernunionoffice910+10078@gmail.com"">westernunionoffice910+10078@gmail.com</a>
<a href=""mailto:westernunionoffice910+1886@gmail.com"">westernunionoffice910+1886@gmail.com</a>
<a href=""mailto:westernunionoffice910+21960@gmail.com"">westernunionoffice910+21960@gmail.com</a>
<a href=""mailto:westernunionoffice910+11273@gmail.com"">westernunionoffice910+11273@gmail.com</a>
<a href=""mailto:westernunionoffice910+31234@gmail.com"">westernunionoffice910+31234@gmail.com</a>
<a href=""mailto:westernunionoffice910+26572@gmail.com"">westernunionoffice910+26572@gmail.com</a>
<a href=""mailto:westernunionoffice910+31427@gmail.com"">westernunionoffice910+31427@gmail.com</a>
<a href=""mailto:westernunionoffice910+29221@gmail.com"">westernunionoffice910+29221@gmail.com</a>
<a href=""mailto:westernunionoffice910+28594@gmail.com"">westernunionoffice910+28594@gmail.com</a>
<a href=""mailto:westernunionoffice910+9267@gmail.com"">westernunionoffice910+9267@gmail.com</a>
<a href=""mailto:westernunionoffice910+2501@gmail.com"">westernunionoffice910+2501@gmail.com</a>
<a href=""mailto:westernunionoffice910+28816@gmail.com"">westernunionoffice910+28816@gmail.com</a>
<a href=""mailto:westernunionoffice910+16919@gmail.com"">westernunionoffice910+16919@gmail.com</a>
<a href=""mailto:westernunionoffice910+29471@gmail.com"">westernunionoffice910+29471@gmail.com</a>
<a href=""mailto:westernunionoffice910+28826@gmail.com"">westernunionoffice910+28826@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234@gmail.com"">mr.kennedy.uzoka234@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+25559@gmail.com"">mr.kennedy.uzoka234+25559@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+7783@gmail.com"">mr.kennedy.uzoka234+7783@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+7064@gmail.com"">mr.kennedy.uzoka234+7064@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+26691@gmail.com"">mr.kennedy.uzoka234+26691@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+15369@gmail.com"">mr.kennedy.uzoka234+15369@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+27705@gmail.com"">mr.kennedy.uzoka234+27705@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+8614@gmail.com"">mr.kennedy.uzoka234+8614@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+4106@gmail.com"">mr.kennedy.uzoka234+4106@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+25167@gmail.com"">mr.kennedy.uzoka234+25167@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+28225@gmail.com"">mr.kennedy.uzoka234+28225@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+14070@gmail.com"">mr.kennedy.uzoka234+14070@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+3151@gmail.com"">mr.kennedy.uzoka234+3151@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+27414@gmail.com"">mr.kennedy.uzoka234+27414@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+8822@gmail.com"">mr.kennedy.uzoka234+8822@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+24225@gmail.com"">mr.kennedy.uzoka234+24225@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+3525@gmail.com"">mr.kennedy.uzoka234+3525@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+17980@gmail.com"">mr.kennedy.uzoka234+17980@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+14660@gmail.com"">mr.kennedy.uzoka234+14660@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+153@gmail.com"">mr.kennedy.uzoka234+153@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+646@gmail.com"">mr.kennedy.uzoka234+646@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+7784@gmail.com"">mr.kennedy.uzoka234+7784@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+15410@gmail.com"">mr.kennedy.uzoka234+15410@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+20272@gmail.com"">mr.kennedy.uzoka234+20272@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+29534@gmail.com"">mr.kennedy.uzoka234+29534@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+17381@gmail.com"">mr.kennedy.uzoka234+17381@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+3768@gmail.com"">mr.kennedy.uzoka234+3768@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+12944@gmail.com"">mr.kennedy.uzoka234+12944@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+11043@gmail.com"">mr.kennedy.uzoka234+11043@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+558@gmail.com"">mr.kennedy.uzoka234+558@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+20329@gmail.com"">mr.kennedy.uzoka234+20329@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+12820@gmail.com"">mr.kennedy.uzoka234+12820@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+14215@gmail.com"">mr.kennedy.uzoka234+14215@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+18597@gmail.com"">mr.kennedy.uzoka234+18597@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+18916@gmail.com"">mr.kennedy.uzoka234+18916@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+18068@gmail.com"">mr.kennedy.uzoka234+18068@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+9518@gmail.com"">mr.kennedy.uzoka234+9518@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+23558@gmail.com"">mr.kennedy.uzoka234+23558@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+21406@gmail.com"">mr.kennedy.uzoka234+21406@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+10019@gmail.com"">mr.kennedy.uzoka234+10019@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+10512@gmail.com"">mr.kennedy.uzoka234+10512@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+24826@gmail.com"">mr.kennedy.uzoka234+24826@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+9681@gmail.com"">mr.kennedy.uzoka234+9681@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31139@gmail.com"">mr.kennedy.uzoka234+31139@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+2186@gmail.com"">mr.kennedy.uzoka234+2186@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31712@gmail.com"">mr.kennedy.uzoka234+31712@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+21393@gmail.com"">mr.kennedy.uzoka234+21393@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+5233@gmail.com"">mr.kennedy.uzoka234+5233@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+17074@gmail.com"">mr.kennedy.uzoka234+17074@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+7389@gmail.com"">mr.kennedy.uzoka234+7389@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+2221@gmail.com"">mr.kennedy.uzoka234+2221@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+4048@gmail.com"">mr.kennedy.uzoka234+4048@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+13761@gmail.com"">mr.kennedy.uzoka234+13761@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+21057@gmail.com"">mr.kennedy.uzoka234+21057@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+10670@gmail.com"">mr.kennedy.uzoka234+10670@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31311@gmail.com"">mr.kennedy.uzoka234+31311@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+5569@gmail.com"">mr.kennedy.uzoka234+5569@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+84@gmail.com"">mr.kennedy.uzoka234+84@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+13751@gmail.com"">mr.kennedy.uzoka234+13751@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+1200@gmail.com"">mr.kennedy.uzoka234+1200@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+3902@gmail.com"">mr.kennedy.uzoka234+3902@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+17441@gmail.com"">mr.kennedy.uzoka234+17441@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+8627@gmail.com"">mr.kennedy.uzoka234+8627@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+10234@gmail.com"">mr.kennedy.uzoka234+10234@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+4565@gmail.com"">mr.kennedy.uzoka234+4565@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+14382@gmail.com"">mr.kennedy.uzoka234+14382@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+30523@gmail.com"">mr.kennedy.uzoka234+30523@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31773@gmail.com"">mr.kennedy.uzoka234+31773@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31101@gmail.com"">mr.kennedy.uzoka234+31101@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+9939@gmail.com"">mr.kennedy.uzoka234+9939@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+2542@gmail.com"">mr.kennedy.uzoka234+2542@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+6198@gmail.com"">mr.kennedy.uzoka234+6198@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+27825@gmail.com"">mr.kennedy.uzoka234+27825@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+30026@gmail.com"">mr.kennedy.uzoka234+30026@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+10422@gmail.com"">mr.kennedy.uzoka234+10422@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+1628@gmail.com"">mr.kennedy.uzoka234+1628@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+17787@gmail.com"">mr.kennedy.uzoka234+17787@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31451@gmail.com"">mr.kennedy.uzoka234+31451@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+2399@gmail.com"">mr.kennedy.uzoka234+2399@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+28155@gmail.com"">mr.kennedy.uzoka234+28155@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+4337@gmail.com"">mr.kennedy.uzoka234+4337@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+16843@gmail.com"">mr.kennedy.uzoka234+16843@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+14698@gmail.com"">mr.kennedy.uzoka234+14698@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31638@gmail.com"">mr.kennedy.uzoka234+31638@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+22897@gmail.com"">mr.kennedy.uzoka234+22897@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+12893@gmail.com"">mr.kennedy.uzoka234+12893@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+14315@gmail.com"">mr.kennedy.uzoka234+14315@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+26754@gmail.com"">mr.kennedy.uzoka234+26754@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+6350@gmail.com"">mr.kennedy.uzoka234+6350@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+3762@gmail.com"">mr.kennedy.uzoka234+3762@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+32617@gmail.com"">mr.kennedy.uzoka234+32617@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+14272@gmail.com"">mr.kennedy.uzoka234+14272@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+15218@gmail.com"">mr.kennedy.uzoka234+15218@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+6385@gmail.com"">mr.kennedy.uzoka234+6385@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+11984@gmail.com"">mr.kennedy.uzoka234+11984@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+31230@gmail.com"">mr.kennedy.uzoka234+31230@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+16369@gmail.com"">mr.kennedy.uzoka234+16369@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+3096@gmail.com"">mr.kennedy.uzoka234+3096@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+21530@gmail.com"">mr.kennedy.uzoka234+21530@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+11506@gmail.com"">mr.kennedy.uzoka234+11506@gmail.com</a>
<a href=""mailto:mr.kennedy.uzoka234+29038@gmail.com"">mr.kennedy.uzoka234+29038@gmail.com</a>
<a href=""mailto:cbnnigeriia659989@gmail.com"">cbnnigeriia659989@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+32655@gmail.com"">cbnnigeriia659989+32655@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+3117@gmail.com"">cbnnigeriia659989+3117@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+5338@gmail.com"">cbnnigeriia659989+5338@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+3837@gmail.com"">cbnnigeriia659989+3837@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+30967@gmail.com"">cbnnigeriia659989+30967@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+3763@gmail.com"">cbnnigeriia659989+3763@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+18238@gmail.com"">cbnnigeriia659989+18238@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+9890@gmail.com"">cbnnigeriia659989+9890@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+30031@gmail.com"">cbnnigeriia659989+30031@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7213@gmail.com"">cbnnigeriia659989+7213@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+15355@gmail.com"">cbnnigeriia659989+15355@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+5548@gmail.com"">cbnnigeriia659989+5548@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+3343@gmail.com"">cbnnigeriia659989+3343@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+28860@gmail.com"">cbnnigeriia659989+28860@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+11872@gmail.com"">cbnnigeriia659989+11872@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+8347@gmail.com"">cbnnigeriia659989+8347@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+678@gmail.com"">cbnnigeriia659989+678@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+27275@gmail.com"">cbnnigeriia659989+27275@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+19188@gmail.com"">cbnnigeriia659989+19188@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+24860@gmail.com"">cbnnigeriia659989+24860@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+2876@gmail.com"">cbnnigeriia659989+2876@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+12487@gmail.com"">cbnnigeriia659989+12487@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+10043@gmail.com"">cbnnigeriia659989+10043@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+17572@gmail.com"">cbnnigeriia659989+17572@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+20491@gmail.com"">cbnnigeriia659989+20491@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+22390@gmail.com"">cbnnigeriia659989+22390@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+16214@gmail.com"">cbnnigeriia659989+16214@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+28876@gmail.com"">cbnnigeriia659989+28876@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+25454@gmail.com"">cbnnigeriia659989+25454@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+5983@gmail.com"">cbnnigeriia659989+5983@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+23121@gmail.com"">cbnnigeriia659989+23121@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+21701@gmail.com"">cbnnigeriia659989+21701@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+23434@gmail.com"">cbnnigeriia659989+23434@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+27799@gmail.com"">cbnnigeriia659989+27799@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+6951@gmail.com"">cbnnigeriia659989+6951@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+6955@gmail.com"">cbnnigeriia659989+6955@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+24013@gmail.com"">cbnnigeriia659989+24013@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+2556@gmail.com"">cbnnigeriia659989+2556@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+576@gmail.com"">cbnnigeriia659989+576@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+28473@gmail.com"">cbnnigeriia659989+28473@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+10164@gmail.com"">cbnnigeriia659989+10164@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+31699@gmail.com"">cbnnigeriia659989+31699@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+18669@gmail.com"">cbnnigeriia659989+18669@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+12591@gmail.com"">cbnnigeriia659989+12591@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+16566@gmail.com"">cbnnigeriia659989+16566@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+28387@gmail.com"">cbnnigeriia659989+28387@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+8822@gmail.com"">cbnnigeriia659989+8822@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+15979@gmail.com"">cbnnigeriia659989+15979@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+23236@gmail.com"">cbnnigeriia659989+23236@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+14771@gmail.com"">cbnnigeriia659989+14771@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+10924@gmail.com"">cbnnigeriia659989+10924@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7032@gmail.com"">cbnnigeriia659989+7032@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+1096@gmail.com"">cbnnigeriia659989+1096@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7616@gmail.com"">cbnnigeriia659989+7616@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+3756@gmail.com"">cbnnigeriia659989+3756@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+15063@gmail.com"">cbnnigeriia659989+15063@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+19498@gmail.com"">cbnnigeriia659989+19498@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+15165@gmail.com"">cbnnigeriia659989+15165@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+17937@gmail.com"">cbnnigeriia659989+17937@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+13693@gmail.com"">cbnnigeriia659989+13693@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+28043@gmail.com"">cbnnigeriia659989+28043@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+31947@gmail.com"">cbnnigeriia659989+31947@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+16900@gmail.com"">cbnnigeriia659989+16900@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+11286@gmail.com"">cbnnigeriia659989+11286@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+20515@gmail.com"">cbnnigeriia659989+20515@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+18895@gmail.com"">cbnnigeriia659989+18895@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7737@gmail.com"">cbnnigeriia659989+7737@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+3592@gmail.com"">cbnnigeriia659989+3592@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+9967@gmail.com"">cbnnigeriia659989+9967@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+10058@gmail.com"">cbnnigeriia659989+10058@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7536@gmail.com"">cbnnigeriia659989+7536@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+31306@gmail.com"">cbnnigeriia659989+31306@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+11698@gmail.com"">cbnnigeriia659989+11698@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7331@gmail.com"">cbnnigeriia659989+7331@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+4266@gmail.com"">cbnnigeriia659989+4266@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+2172@gmail.com"">cbnnigeriia659989+2172@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+10601@gmail.com"">cbnnigeriia659989+10601@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+29397@gmail.com"">cbnnigeriia659989+29397@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+25821@gmail.com"">cbnnigeriia659989+25821@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7972@gmail.com"">cbnnigeriia659989+7972@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7107@gmail.com"">cbnnigeriia659989+7107@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+6773@gmail.com"">cbnnigeriia659989+6773@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+13791@gmail.com"">cbnnigeriia659989+13791@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+6683@gmail.com"">cbnnigeriia659989+6683@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+7500@gmail.com"">cbnnigeriia659989+7500@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+17414@gmail.com"">cbnnigeriia659989+17414@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+9987@gmail.com"">cbnnigeriia659989+9987@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+29159@gmail.com"">cbnnigeriia659989+29159@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+30999@gmail.com"">cbnnigeriia659989+30999@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+25668@gmail.com"">cbnnigeriia659989+25668@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+11874@gmail.com"">cbnnigeriia659989+11874@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+11755@gmail.com"">cbnnigeriia659989+11755@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+941@gmail.com"">cbnnigeriia659989+941@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+4362@gmail.com"">cbnnigeriia659989+4362@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+9741@gmail.com"">cbnnigeriia659989+9741@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+19333@gmail.com"">cbnnigeriia659989+19333@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+398@gmail.com"">cbnnigeriia659989+398@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+4744@gmail.com"">cbnnigeriia659989+4744@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+14026@gmail.com"">cbnnigeriia659989+14026@gmail.com</a>
<a href=""mailto:cbnnigeriia659989+20072@gmail.com"">cbnnigeriia659989+20072@gmail.com</a>
<a href=""mailto:cbnbnak@gmail.com"">cbnbnak@gmail.com</a>
<a href=""mailto:cbnbnak+6163@gmail.com"">cbnbnak+6163@gmail.com</a>
<a href=""mailto:cbnbnak+709@gmail.com"">cbnbnak+709@gmail.com</a>
<a href=""mailto:cbnbnak+18059@gmail.com"">cbnbnak+18059@gmail.com</a>
<a href=""mailto:cbnbnak+13185@gmail.com"">cbnbnak+13185@gmail.com</a>
<a href=""mailto:cbnbnak+30251@gmail.com"">cbnbnak+30251@gmail.com</a>
<a href=""mailto:cbnbnak+13300@gmail.com"">cbnbnak+13300@gmail.com</a>
<a href=""mailto:cbnbnak+29715@gmail.com"">cbnbnak+29715@gmail.com</a>
<a href=""mailto:cbnbnak+3627@gmail.com"">cbnbnak+3627@gmail.com</a>
<a href=""mailto:cbnbnak+13859@gmail.com"">cbnbnak+13859@gmail.com</a>
<a href=""mailto:cbnbnak+5301@gmail.com"">cbnbnak+5301@gmail.com</a>
<a href=""mailto:cbnbnak+2182@gmail.com"">cbnbnak+2182@gmail.com</a>
<a href=""mailto:cbnbnak+17964@gmail.com"">cbnbnak+17964@gmail.com</a>
<a href=""mailto:cbnbnak+14191@gmail.com"">cbnbnak+14191@gmail.com</a>
<a href=""mailto:cbnbnak+29281@gmail.com"">cbnbnak+29281@gmail.com</a>
<a href=""mailto:cbnbnak+22295@gmail.com"">cbnbnak+22295@gmail.com</a>
<a href=""mailto:cbnbnak+21109@gmail.com"">cbnbnak+21109@gmail.com</a>
<a href=""mailto:cbnbnak+74@gmail.com"">cbnbnak+74@gmail.com</a>
<a href=""mailto:cbnbnak+6340@gmail.com"">cbnbnak+6340@gmail.com</a>
<a href=""mailto:cbnbnak+9594@gmail.com"">cbnbnak+9594@gmail.com</a>
<a href=""mailto:cbnbnak+11005@gmail.com"">cbnbnak+11005@gmail.com</a>
<a href=""mailto:cbnbnak+18025@gmail.com"">cbnbnak+18025@gmail.com</a>
<a href=""mailto:cbnbnak+818@gmail.com"">cbnbnak+818@gmail.com</a>
<a href=""mailto:cbnbnak+18356@gmail.com"">cbnbnak+18356@gmail.com</a>
<a href=""mailto:cbnbnak+19511@gmail.com"">cbnbnak+19511@gmail.com</a>
<a href=""mailto:cbnbnak+9506@gmail.com"">cbnbnak+9506@gmail.com</a>
<a href=""mailto:cbnbnak+6581@gmail.com"">cbnbnak+6581@gmail.com</a>
<a href=""mailto:cbnbnak+18184@gmail.com"">cbnbnak+18184@gmail.com</a>
<a href=""mailto:cbnbnak+18503@gmail.com"">cbnbnak+18503@gmail.com</a>
<a href=""mailto:cbnbnak+13746@gmail.com"">cbnbnak+13746@gmail.com</a>
<a href=""mailto:cbnbnak+7332@gmail.com"">cbnbnak+7332@gmail.com</a>
<a href=""mailto:cbnbnak+19551@gmail.com"">cbnbnak+19551@gmail.com</a>
<a href=""mailto:cbnbnak+28090@gmail.com"">cbnbnak+28090@gmail.com</a>
<a href=""mailto:cbnbnak+1779@gmail.com"">cbnbnak+1779@gmail.com</a>
<a href=""mailto:cbnbnak+1497@gmail.com"">cbnbnak+1497@gmail.com</a>
<a href=""mailto:cbnbnak+30916@gmail.com"">cbnbnak+30916@gmail.com</a>
<a href=""mailto:cbnbnak+29480@gmail.com"">cbnbnak+29480@gmail.com</a>
<a href=""mailto:cbnbnak+16056@gmail.com"">cbnbnak+16056@gmail.com</a>
<a href=""mailto:cbnbnak+26981@gmail.com"">cbnbnak+26981@gmail.com</a>
<a href=""mailto:cbnbnak+4405@gmail.com"">cbnbnak+4405@gmail.com</a>
<a href=""mailto:cbnbnak+24881@gmail.com"">cbnbnak+24881@gmail.com</a>
<a href=""mailto:cbnbnak+27101@gmail.com"">cbnbnak+27101@gmail.com</a>
<a href=""mailto:cbnbnak+3597@gmail.com"">cbnbnak+3597@gmail.com</a>
<a href=""mailto:cbnbnak+12646@gmail.com"">cbnbnak+12646@gmail.com</a>
<a href=""mailto:cbnbnak+16627@gmail.com"">cbnbnak+16627@gmail.com</a>
<a href=""mailto:cbnbnak+22217@gmail.com"">cbnbnak+22217@gmail.com</a>
<a href=""mailto:cbnbnak+29350@gmail.com"">cbnbnak+29350@gmail.com</a>
<a href=""mailto:cbnbnak+6121@gmail.com"">cbnbnak+6121@gmail.com</a>
<a href=""mailto:cbnbnak+1673@gmail.com"">cbnbnak+1673@gmail.com</a>
<a href=""mailto:cbnbnak+31581@gmail.com"">cbnbnak+31581@gmail.com</a>
<a href=""mailto:cbnbnak+17319@gmail.com"">cbnbnak+17319@gmail.com</a>
<a href=""mailto:cbnbnak+30066@gmail.com"">cbnbnak+30066@gmail.com</a>
<a href=""mailto:cbnbnak+22118@gmail.com"">cbnbnak+22118@gmail.com</a>
<a href=""mailto:cbnbnak+29081@gmail.com"">cbnbnak+29081@gmail.com</a>
<a href=""mailto:cbnbnak+26041@gmail.com"">cbnbnak+26041@gmail.com</a>
<a href=""mailto:cbnbnak+20243@gmail.com"">cbnbnak+20243@gmail.com</a>
<a href=""mailto:cbnbnak+27617@gmail.com"">cbnbnak+27617@gmail.com</a>
<a href=""mailto:cbnbnak+14678@gmail.com"">cbnbnak+14678@gmail.com</a>
<a href=""mailto:cbnbnak+7721@gmail.com"">cbnbnak+7721@gmail.com</a>
<a href=""mailto:cbnbnak+24542@gmail.com"">cbnbnak+24542@gmail.com</a>
<a href=""mailto:cbnbnak+23099@gmail.com"">cbnbnak+23099@gmail.com</a>
<a href=""mailto:cbnbnak+30437@gmail.com"">cbnbnak+30437@gmail.com</a>
<a href=""mailto:cbnbnak+12830@gmail.com"">cbnbnak+12830@gmail.com</a>
<a href=""mailto:cbnbnak+14106@gmail.com"">cbnbnak+14106@gmail.com</a>
<a href=""mailto:cbnbnak+13154@gmail.com"">cbnbnak+13154@gmail.com</a>
<a href=""mailto:cbnbnak+25559@gmail.com"">cbnbnak+25559@gmail.com</a>
<a href=""mailto:cbnbnak+13609@gmail.com"">cbnbnak+13609@gmail.com</a>
<a href=""mailto:cbnbnak+23348@gmail.com"">cbnbnak+23348@gmail.com</a>
<a href=""mailto:cbnbnak+25797@gmail.com"">cbnbnak+25797@gmail.com</a>
<a href=""mailto:cbnbnak+3508@gmail.com"">cbnbnak+3508@gmail.com</a>
<a href=""mailto:cbnbnak+26994@gmail.com"">cbnbnak+26994@gmail.com</a>
<a href=""mailto:cbnbnak+1827@gmail.com"">cbnbnak+1827@gmail.com</a>
<a href=""mailto:cbnbnak+15607@gmail.com"">cbnbnak+15607@gmail.com</a>
<a href=""mailto:cbnbnak+23066@gmail.com"">cbnbnak+23066@gmail.com</a>
<a href=""mailto:cbnbnak+30450@gmail.com"">cbnbnak+30450@gmail.com</a>
<a href=""mailto:cbnbnak+17843@gmail.com"">cbnbnak+17843@gmail.com</a>
<a href=""mailto:cbnbnak+28064@gmail.com"">cbnbnak+28064@gmail.com</a>
<a href=""mailto:cbnbnak+7385@gmail.com"">cbnbnak+7385@gmail.com</a>
<a href=""mailto:cbnbnak+19997@gmail.com"">cbnbnak+19997@gmail.com</a>
<a href=""mailto:cbnbnak+7912@gmail.com"">cbnbnak+7912@gmail.com</a>
<a href=""mailto:cbnbnak+29132@gmail.com"">cbnbnak+29132@gmail.com</a>
<a href=""mailto:cbnbnak+24340@gmail.com"">cbnbnak+24340@gmail.com</a>
<a href=""mailto:cbnbnak+3004@gmail.com"">cbnbnak+3004@gmail.com</a>
<a href=""mailto:cbnbnak+29202@gmail.com"">cbnbnak+29202@gmail.com</a>
<a href=""mailto:cbnbnak+5920@gmail.com"">cbnbnak+5920@gmail.com</a>
<a href=""mailto:cbnbnak+12428@gmail.com"">cbnbnak+12428@gmail.com</a>
<a href=""mailto:cbnbnak+5780@gmail.com"">cbnbnak+5780@gmail.com</a>
<a href=""mailto:cbnbnak+14218@gmail.com"">cbnbnak+14218@gmail.com</a>
<a href=""mailto:cbnbnak+23430@gmail.com"">cbnbnak+23430@gmail.com</a>
<a href=""mailto:cbnbnak+5569@gmail.com"">cbnbnak+5569@gmail.com</a>
<a href=""mailto:cbnbnak+25208@gmail.com"">cbnbnak+25208@gmail.com</a>
<a href=""mailto:cbnbnak+14813@gmail.com"">cbnbnak+14813@gmail.com</a>
<a href=""mailto:cbnbnak+17403@gmail.com"">cbnbnak+17403@gmail.com</a>
<a href=""mailto:cbnbnak+12278@gmail.com"">cbnbnak+12278@gmail.com</a>
<a href=""mailto:cbnbnak+29257@gmail.com"">cbnbnak+29257@gmail.com</a>
<a href=""mailto:cbnbnak+9135@gmail.com"">cbnbnak+9135@gmail.com</a>
<a href=""mailto:cbnbnak+8246@gmail.com"">cbnbnak+8246@gmail.com</a>
<a href=""mailto:cbnbnak+1826@gmail.com"">cbnbnak+1826@gmail.com</a>
<a href=""mailto:cbnbnak+7001@gmail.com"">cbnbnak+7001@gmail.com</a>
<a href=""mailto:cbnbnak+18073@gmail.com"">cbnbnak+18073@gmail.com</a>
<a href=""mailto:cbnbnak+10138@gmail.com"">cbnbnak+10138@gmail.com</a>
<a href=""mailto:americangovernmentoffice@gmail.com"">americangovernmentoffice@gmail.com</a>
<a href=""mailto:americangovernmentoffice+17637@gmail.com"">americangovernmentoffice+17637@gmail.com</a>
<a href=""mailto:americangovernmentoffice+1982@gmail.com"">americangovernmentoffice+1982@gmail.com</a>
<a href=""mailto:americangovernmentoffice+2354@gmail.com"">americangovernmentoffice+2354@gmail.com</a>
<a href=""mailto:americangovernmentoffice+10552@gmail.com"">americangovernmentoffice+10552@gmail.com</a>
<a href=""mailto:americangovernmentoffice+28074@gmail.com"">americangovernmentoffice+28074@gmail.com</a>
<a href=""mailto:americangovernmentoffice+25447@gmail.com"">americangovernmentoffice+25447@gmail.com</a>
<a href=""mailto:americangovernmentoffice+1404@gmail.com"">americangovernmentoffice+1404@gmail.com</a>
<a href=""mailto:americangovernmentoffice+9254@gmail.com"">americangovernmentoffice+9254@gmail.com</a>
<a href=""mailto:americangovernmentoffice+18116@gmail.com"">americangovernmentoffice+18116@gmail.com</a>
<a href=""mailto:americangovernmentoffice+25317@gmail.com"">americangovernmentoffice+25317@gmail.com</a>
<a href=""mailto:americangovernmentoffice+2597@gmail.com"">americangovernmentoffice+2597@gmail.com</a>
<a href=""mailto:americangovernmentoffice+2424@gmail.com"">americangovernmentoffice+2424@gmail.com</a>
<a href=""mailto:americangovernmentoffice+10346@gmail.com"">americangovernmentoffice+10346@gmail.com</a>
<a href=""mailto:americangovernmentoffice+10165@gmail.com"">americangovernmentoffice+10165@gmail.com</a>
<a href=""mailto:americangovernmentoffice+31441@gmail.com"">americangovernmentoffice+31441@gmail.com</a>
<a href=""mailto:americangovernmentoffice+29554@gmail.com"">americangovernmentoffice+29554@gmail.com</a>
<a href=""mailto:americangovernmentoffice+17580@gmail.com"">americangovernmentoffice+17580@gmail.com</a>
<a href=""mailto:americangovernmentoffice+32616@gmail.com"">americangovernmentoffice+32616@gmail.com</a>
<a href=""mailto:americangovernmentoffice+6149@gmail.com"">americangovernmentoffice+6149@gmail.com</a>
<a href=""mailto:americangovernmentoffice+4921@gmail.com"">americangovernmentoffice+4921@gmail.com</a>
<a href=""mailto:americangovernmentoffice+24830@gmail.com"">americangovernmentoffice+24830@gmail.com</a>
<a href=""mailto:americangovernmentoffice+6207@gmail.com"">americangovernmentoffice+6207@gmail.com</a>
<a href=""mailto:americangovernmentoffice+11561@gmail.com"">americangovernmentoffice+11561@gmail.com</a>
<a href=""mailto:americangovernmentoffice+6255@gmail.com"">americangovernmentoffice+6255@gmail.com</a>
<a href=""mailto:americangovernmentoffice+23623@gmail.com"">americangovernmentoffice+23623@gmail.com</a>
<a href=""mailto:americangovernmentoffice+18220@gmail.com"">americangovernmentoffice+18220@gmail.com</a>
<a href=""mailto:americangovernmentoffice+26638@gmail.com"">americangovernmentoffice+26638@gmail.com</a>
<a href=""mailto:americangovernmentoffice+15332@gmail.com"">americangovernmentoffice+15332@gmail.com</a>
<a href=""mailto:americangovernmentoffice+13106@gmail.com"">americangovernmentoffice+13106@gmail.com</a>
<a href=""mailto:americangovernmentoffice+24237@gmail.com"">americangovernmentoffice+24237@gmail.com</a>
<a href=""mailto:americangovernmentoffice+30624@gmail.com"">americangovernmentoffice+30624@gmail.com</a>
<a href=""mailto:americangovernmentoffice+9125@gmail.com"">americangovernmentoffice+9125@gmail.com</a>
<a href=""mailto:americangovernmentoffice+26501@gmail.com"">americangovernmentoffice+26501@gmail.com</a>
<a href=""mailto:americangovernmentoffice+5956@gmail.com"">americangovernmentoffice+5956@gmail.com</a>
<a href=""mailto:americangovernmentoffice+28434@gmail.com"">americangovernmentoffice+28434@gmail.com</a>
<a href=""mailto:americangovernmentoffice+7217@gmail.com"">americangovernmentoffice+7217@gmail.com</a>
<a href=""mailto:americangovernmentoffice+16871@gmail.com"">americangovernmentoffice+16871@gmail.com</a>
<a href=""mailto:americangovernmentoffice+9606@gmail.com"">americangovernmentoffice+9606@gmail.com</a>
<a href=""mailto:americangovernmentoffice+30629@gmail.com"">americangovernmentoffice+30629@gmail.com</a>
<a href=""mailto:americangovernmentoffice+19366@gmail.com"">americangovernmentoffice+19366@gmail.com</a>
<a href=""mailto:americangovernmentoffice+16661@gmail.com"">americangovernmentoffice+16661@gmail.com</a>
<a href=""mailto:americangovernmentoffice+19578@gmail.com"">americangovernmentoffice+19578@gmail.com</a>
<a href=""mailto:americangovernmentoffice+32176@gmail.com"">americangovernmentoffice+32176@gmail.com</a>
<a href=""mailto:americangovernmentoffice+2103@gmail.com"">americangovernmentoffice+2103@gmail.com</a>
<a href=""mailto:americangovernmentoffice+15960@gmail.com"">americangovernmentoffice+15960@gmail.com</a>
<a href=""mailto:americangovernmentoffice+19127@gmail.com"">americangovernmentoffice+19127@gmail.com</a>
<a href=""mailto:americangovernmentoffice+29468@gmail.com"">americangovernmentoffice+29468@gmail.com</a>
<a href=""mailto:americangovernmentoffice+10153@gmail.com"">americangovernmentoffice+10153@gmail.com</a>
<a href=""mailto:americangovernmentoffice+5090@gmail.com"">americangovernmentoffice+5090@gmail.com</a>
<a href=""mailto:americangovernmentoffice+25226@gmail.com"">americangovernmentoffice+25226@gmail.com</a>
<a href=""mailto:americangovernmentoffice+32371@gmail.com"">americangovernmentoffice+32371@gmail.com</a>
<a href=""mailto:americangovernmentoffice+23846@gmail.com"">americangovernmentoffice+23846@gmail.com</a>
<a href=""mailto:americangovernmentoffice+21612@gmail.com"">americangovernmentoffice+21612@gmail.com</a>
<a href=""mailto:americangovernmentoffice+13889@gmail.com"">americangovernmentoffice+13889@gmail.com</a>
<a href=""mailto:americangovernmentoffice+26371@gmail.com"">americangovernmentoffice+26371@gmail.com</a>
<a href=""mailto:americangovernmentoffice+17021@gmail.com"">americangovernmentoffice+17021@gmail.com</a>
<a href=""mailto:americangovernmentoffice+25031@gmail.com"">americangovernmentoffice+25031@gmail.com</a>
<a href=""mailto:americangovernmentoffice+31063@gmail.com"">americangovernmentoffice+31063@gmail.com</a>
<a href=""mailto:americangovernmentoffice+8968@gmail.com"">americangovernmentoffice+8968@gmail.com</a>
<a href=""mailto:americangovernmentoffice+14652@gmail.com"">americangovernmentoffice+14652@gmail.com</a>
<a href=""mailto:americangovernmentoffice+21285@gmail.com"">americangovernmentoffice+21285@gmail.com</a>
<a href=""mailto:americangovernmentoffice+12909@gmail.com"">americangovernmentoffice+12909@gmail.com</a>
<a href=""mailto:americangovernmentoffice+22489@gmail.com"">americangovernmentoffice+22489@gmail.com</a>
<a href=""mailto:americangovernmentoffice+2576@gmail.com"">americangovernmentoffice+2576@gmail.com</a>
<a href=""mailto:americangovernmentoffice+20848@gmail.com"">americangovernmentoffice+20848@gmail.com</a>
<a href=""mailto:americangovernmentoffice+10070@gmail.com"">americangovernmentoffice+10070@gmail.com</a>
<a href=""mailto:americangovernmentoffice+27776@gmail.com"">americangovernmentoffice+27776@gmail.com</a>
<a href=""mailto:americangovernmentoffice+6186@gmail.com"">americangovernmentoffice+6186@gmail.com</a>
<a href=""mailto:americangovernmentoffice+7769@gmail.com"">americangovernmentoffice+7769@gmail.com</a>
<a href=""mailto:americangovernmentoffice+6163@gmail.com"">americangovernmentoffice+6163@gmail.com</a>
<a href=""mailto:americangovernmentoffice+4406@gmail.com"">americangovernmentoffice+4406@gmail.com</a>
<a href=""mailto:americangovernmentoffice+29455@gmail.com"">americangovernmentoffice+29455@gmail.com</a>
<a href=""mailto:americangovernmentoffice+10862@gmail.com"">americangovernmentoffice+10862@gmail.com</a>
<a href=""mailto:americangovernmentoffice+6326@gmail.com"">americangovernmentoffice+6326@gmail.com</a>
<a href=""mailto:americangovernmentoffice+20845@gmail.com"">americangovernmentoffice+20845@gmail.com</a>
<a href=""mailto:americangovernmentoffice+11158@gmail.com"">americangovernmentoffice+11158@gmail.com</a>
<a href=""mailto:americangovernmentoffice+2831@gmail.com"">americangovernmentoffice+2831@gmail.com</a>
<a href=""mailto:americangovernmentoffice+16465@gmail.com"">americangovernmentoffice+16465@gmail.com</a>
<a href=""mailto:americangovernmentoffice+29235@gmail.com"">americangovernmentoffice+29235@gmail.com</a>
<a href=""mailto:americangovernmentoffice+20303@gmail.com"">americangovernmentoffice+20303@gmail.com</a>
<a href=""mailto:americangovernmentoffice+18297@gmail.com"">americangovernmentoffice+18297@gmail.com</a>
<a href=""mailto:americangovernmentoffice+30047@gmail.com"">americangovernmentoffice+30047@gmail.com</a>
<a href=""mailto:americangovernmentoffice+6534@gmail.com"">americangovernmentoffice+6534@gmail.com</a>
<a href=""mailto:americangovernmentoffice+479@gmail.com"">americangovernmentoffice+479@gmail.com</a>
<a href=""mailto:americangovernmentoffice+17086@gmail.com"">americangovernmentoffice+17086@gmail.com</a>
<a href=""mailto:americangovernmentoffice+12085@gmail.com"">americangovernmentoffice+12085@gmail.com</a>
<a href=""mailto:americangovernmentoffice+25522@gmail.com"">americangovernmentoffice+25522@gmail.com</a>
<a href=""mailto:americangovernmentoffice+12493@gmail.com"">americangovernmentoffice+12493@gmail.com</a>
<a href=""mailto:americangovernmentoffice+1628@gmail.com"">americangovernmentoffice+1628@gmail.com</a>
<a href=""mailto:americangovernmentoffice+22660@gmail.com"">americangovernmentoffice+22660@gmail.com</a>
<a href=""mailto:americangovernmentoffice+12757@gmail.com"">americangovernmentoffice+12757@gmail.com</a>
<a href=""mailto:americangovernmentoffice+20799@gmail.com"">americangovernmentoffice+20799@gmail.com</a>
<a href=""mailto:americangovernmentoffice+17934@gmail.com"">americangovernmentoffice+17934@gmail.com</a>
<a href=""mailto:americangovernmentoffice+16773@gmail.com"">americangovernmentoffice+16773@gmail.com</a>
<a href=""mailto:americangovernmentoffice+10455@gmail.com"">americangovernmentoffice+10455@gmail.com</a>
<a href=""mailto:americangovernmentoffice+14479@gmail.com"">americangovernmentoffice+14479@gmail.com</a>
<a href=""mailto:americangovernmentoffice+22775@gmail.com"">americangovernmentoffice+22775@gmail.com</a>
<a href=""mailto:americangovernmentoffice+18963@gmail.com"">americangovernmentoffice+18963@gmail.com</a>
<a href=""mailto:americangovernmentoffice+7254@gmail.com"">americangovernmentoffice+7254@gmail.com</a>
<a href=""mailto:americangovernmentoffice+29030@gmail.com"">americangovernmentoffice+29030@gmail.com</a>
<a href=""mailto:johnnykabaa000@gmail.com"">johnnykabaa000@gmail.com</a>
<a href=""mailto:johnnykabaa000+14331@gmail.com"">johnnykabaa000+14331@gmail.com</a>
<a href=""mailto:johnnykabaa000+8762@gmail.com"">johnnykabaa000+8762@gmail.com</a>
<a href=""mailto:johnnykabaa000+29445@gmail.com"">johnnykabaa000+29445@gmail.com</a>
<a href=""mailto:johnnykabaa000+17839@gmail.com"">johnnykabaa000+17839@gmail.com</a>
<a href=""mailto:johnnykabaa000+3016@gmail.com"">johnnykabaa000+3016@gmail.com</a>
<a href=""mailto:johnnykabaa000+11209@gmail.com"">johnnykabaa000+11209@gmail.com</a>
<a href=""mailto:johnnykabaa000+28339@gmail.com"">johnnykabaa000+28339@gmail.com</a>
<a href=""mailto:johnnykabaa000+7340@gmail.com"">johnnykabaa000+7340@gmail.com</a>
<a href=""mailto:johnnykabaa000+32456@gmail.com"">johnnykabaa000+32456@gmail.com</a>
<a href=""mailto:johnnykabaa000+26078@gmail.com"">johnnykabaa000+26078@gmail.com</a>
<a href=""mailto:johnnykabaa000+1792@gmail.com"">johnnykabaa000+1792@gmail.com</a>
<a href=""mailto:johnnykabaa000+25448@gmail.com"">johnnykabaa000+25448@gmail.com</a>
<a href=""mailto:johnnykabaa000+22577@gmail.com"">johnnykabaa000+22577@gmail.com</a>
<a href=""mailto:johnnykabaa000+29552@gmail.com"">johnnykabaa000+29552@gmail.com</a>
<a href=""mailto:johnnykabaa000+21815@gmail.com"">johnnykabaa000+21815@gmail.com</a>
<a href=""mailto:johnnykabaa000+21738@gmail.com"">johnnykabaa000+21738@gmail.com</a>
<a href=""mailto:johnnykabaa000+11565@gmail.com"">johnnykabaa000+11565@gmail.com</a>
<a href=""mailto:johnnykabaa000+8801@gmail.com"">johnnykabaa000+8801@gmail.com</a>
<a href=""mailto:johnnykabaa000+17855@gmail.com"">johnnykabaa000+17855@gmail.com</a>
<a href=""mailto:johnnykabaa000+17021@gmail.com"">johnnykabaa000+17021@gmail.com</a>
<a href=""mailto:johnnykabaa000+4271@gmail.com"">johnnykabaa000+4271@gmail.com</a>
<a href=""mailto:johnnykabaa000+17785@gmail.com"">johnnykabaa000+17785@gmail.com</a>
<a href=""mailto:johnnykabaa000+26463@gmail.com"">johnnykabaa000+26463@gmail.com</a>
<a href=""mailto:johnnykabaa000+27645@gmail.com"">johnnykabaa000+27645@gmail.com</a>
<a href=""mailto:johnnykabaa000+23676@gmail.com"">johnnykabaa000+23676@gmail.com</a>
<a href=""mailto:johnnykabaa000+16415@gmail.com"">johnnykabaa000+16415@gmail.com</a>
<a href=""mailto:johnnykabaa000+8020@gmail.com"">johnnykabaa000+8020@gmail.com</a>
<a href=""mailto:johnnykabaa000+28303@gmail.com"">johnnykabaa000+28303@gmail.com</a>
<a href=""mailto:johnnykabaa000+29087@gmail.com"">johnnykabaa000+29087@gmail.com</a>
<a href=""mailto:johnnykabaa000+8228@gmail.com"">johnnykabaa000+8228@gmail.com</a>
<a href=""mailto:johnnykabaa000+2141@gmail.com"">johnnykabaa000+2141@gmail.com</a>
<a href=""mailto:johnnykabaa000+15743@gmail.com"">johnnykabaa000+15743@gmail.com</a>
<a href=""mailto:johnnykabaa000+15269@gmail.com"">johnnykabaa000+15269@gmail.com</a>
<a href=""mailto:johnnykabaa000+6545@gmail.com"">johnnykabaa000+6545@gmail.com</a>
<a href=""mailto:johnnykabaa000+14967@gmail.com"">johnnykabaa000+14967@gmail.com</a>
<a href=""mailto:johnnykabaa000+5062@gmail.com"">johnnykabaa000+5062@gmail.com</a>
<a href=""mailto:johnnykabaa000+20296@gmail.com"">johnnykabaa000+20296@gmail.com</a>
<a href=""mailto:johnnykabaa000+7380@gmail.com"">johnnykabaa000+7380@gmail.com</a>
<a href=""mailto:johnnykabaa000+25501@gmail.com"">johnnykabaa000+25501@gmail.com</a>
<a href=""mailto:johnnykabaa000+13733@gmail.com"">johnnykabaa000+13733@gmail.com</a>
<a href=""mailto:johnnykabaa000+9401@gmail.com"">johnnykabaa000+9401@gmail.com</a>
<a href=""mailto:johnnykabaa000+31024@gmail.com"">johnnykabaa000+31024@gmail.com</a>
<a href=""mailto:johnnykabaa000+24593@gmail.com"">johnnykabaa000+24593@gmail.com</a>
<a href=""mailto:johnnykabaa000+31937@gmail.com"">johnnykabaa000+31937@gmail.com</a>
<a href=""mailto:johnnykabaa000+737@gmail.com"">johnnykabaa000+737@gmail.com</a>
<a href=""mailto:johnnykabaa000+31053@gmail.com"">johnnykabaa000+31053@gmail.com</a>
<a href=""mailto:johnnykabaa000+30929@gmail.com"">johnnykabaa000+30929@gmail.com</a>
<a href=""mailto:johnnykabaa000+12362@gmail.com"">johnnykabaa000+12362@gmail.com</a>
<a href=""mailto:johnnykabaa000+17950@gmail.com"">johnnykabaa000+17950@gmail.com</a>
<a href=""mailto:johnnykabaa000+28379@gmail.com"">johnnykabaa000+28379@gmail.com</a>
<a href=""mailto:johnnykabaa000+19830@gmail.com"">johnnykabaa000+19830@gmail.com</a>
<a href=""mailto:johnnykabaa000+6684@gmail.com"">johnnykabaa000+6684@gmail.com</a>
<a href=""mailto:johnnykabaa000+20996@gmail.com"">johnnykabaa000+20996@gmail.com</a>
<a href=""mailto:johnnykabaa000+31581@gmail.com"">johnnykabaa000+31581@gmail.com</a>
<a href=""mailto:johnnykabaa000+10950@gmail.com"">johnnykabaa000+10950@gmail.com</a>
<a href=""mailto:johnnykabaa000+301@gmail.com"">johnnykabaa000+301@gmail.com</a>
<a href=""mailto:johnnykabaa000+9509@gmail.com"">johnnykabaa000+9509@gmail.com</a>
<a href=""mailto:johnnykabaa000+18794@gmail.com"">johnnykabaa000+18794@gmail.com</a>
<a href=""mailto:johnnykabaa000+23180@gmail.com"">johnnykabaa000+23180@gmail.com</a>
<a href=""mailto:johnnykabaa000+13515@gmail.com"">johnnykabaa000+13515@gmail.com</a>
<a href=""mailto:johnnykabaa000+12651@gmail.com"">johnnykabaa000+12651@gmail.com</a>
<a href=""mailto:johnnykabaa000+16283@gmail.com"">johnnykabaa000+16283@gmail.com</a>
<a href=""mailto:johnnykabaa000+25691@gmail.com"">johnnykabaa000+25691@gmail.com</a>
<a href=""mailto:johnnykabaa000+586@gmail.com"">johnnykabaa000+586@gmail.com</a>
<a href=""mailto:johnnykabaa000+29777@gmail.com"">johnnykabaa000+29777@gmail.com</a>
<a href=""mailto:johnnykabaa000+27098@gmail.com"">johnnykabaa000+27098@gmail.com</a>
<a href=""mailto:johnnykabaa000+20578@gmail.com"">johnnykabaa000+20578@gmail.com</a>
<a href=""mailto:johnnykabaa000+27104@gmail.com"">johnnykabaa000+27104@gmail.com</a>
<a href=""mailto:johnnykabaa000+11701@gmail.com"">johnnykabaa000+11701@gmail.com</a>
<a href=""mailto:johnnykabaa000+28524@gmail.com"">johnnykabaa000+28524@gmail.com</a>
<a href=""mailto:johnnykabaa000+14685@gmail.com"">johnnykabaa000+14685@gmail.com</a>
<a href=""mailto:johnnykabaa000+5885@gmail.com"">johnnykabaa000+5885@gmail.com</a>
<a href=""mailto:johnnykabaa000+3801@gmail.com"">johnnykabaa000+3801@gmail.com</a>
<a href=""mailto:johnnykabaa000+4789@gmail.com"">johnnykabaa000+4789@gmail.com</a>
<a href=""mailto:johnnykabaa000+24827@gmail.com"">johnnykabaa000+24827@gmail.com</a>
<a href=""mailto:johnnykabaa000+25769@gmail.com"">johnnykabaa000+25769@gmail.com</a>
<a href=""mailto:johnnykabaa000+2174@gmail.com"">johnnykabaa000+2174@gmail.com</a>
<a href=""mailto:johnnykabaa000+10027@gmail.com"">johnnykabaa000+10027@gmail.com</a>
<a href=""mailto:johnnykabaa000+17904@gmail.com"">johnnykabaa000+17904@gmail.com</a>
<a href=""mailto:johnnykabaa000+18890@gmail.com"">johnnykabaa000+18890@gmail.com</a>
<a href=""mailto:johnnykabaa000+10183@gmail.com"">johnnykabaa000+10183@gmail.com</a>
<a href=""mailto:johnnykabaa000+2124@gmail.com"">johnnykabaa000+2124@gmail.com</a>
<a href=""mailto:johnnykabaa000+31132@gmail.com"">johnnykabaa000+31132@gmail.com</a>
<a href=""mailto:johnnykabaa000+15620@gmail.com"">johnnykabaa000+15620@gmail.com</a>
<a href=""mailto:johnnykabaa000+15163@gmail.com"">johnnykabaa000+15163@gmail.com</a>
<a href=""mailto:johnnykabaa000+16121@gmail.com"">johnnykabaa000+16121@gmail.com</a>
<a href=""mailto:johnnykabaa000+25868@gmail.com"">johnnykabaa000+25868@gmail.com</a>
<a href=""mailto:johnnykabaa000+12059@gmail.com"">johnnykabaa000+12059@gmail.com</a>
<a href=""mailto:johnnykabaa000+26813@gmail.com"">johnnykabaa000+26813@gmail.com</a>
<a href=""mailto:johnnykabaa000+2943@gmail.com"">johnnykabaa000+2943@gmail.com</a>
<a href=""mailto:johnnykabaa000+15452@gmail.com"">johnnykabaa000+15452@gmail.com</a>
<a href=""mailto:johnnykabaa000+21618@gmail.com"">johnnykabaa000+21618@gmail.com</a>
<a href=""mailto:johnnykabaa000+5050@gmail.com"">johnnykabaa000+5050@gmail.com</a>
<a href=""mailto:johnnykabaa000+11243@gmail.com"">johnnykabaa000+11243@gmail.com</a>
<a href=""mailto:johnnykabaa000+3126@gmail.com"">johnnykabaa000+3126@gmail.com</a>
<a href=""mailto:johnnykabaa000+1814@gmail.com"">johnnykabaa000+1814@gmail.com</a>
<a href=""mailto:johnnykabaa000+10436@gmail.com"">johnnykabaa000+10436@gmail.com</a>
<a href=""mailto:johnnykabaa000+21710@gmail.com"">johnnykabaa000+21710@gmail.com</a>
<a href=""mailto:johnnykabaa000+17849@gmail.com"">johnnykabaa000+17849@gmail.com</a>
<a href=""mailto:johnnykabaa000+25881@gmail.com"">johnnykabaa000+25881@gmail.com</a>
<a href=""mailto:paymentinformation09@gmail.com"">paymentinformation09@gmail.com</a>
<a href=""mailto:imf.managingdirector@outlook.com"">imf.managingdirector@outlook.com</a>
<a href=""mailto:paymentinformation09+43@gmail.com"">paymentinformation09+43@gmail.com</a>
<a href=""mailto:paymentinformation09+11042@gmail.com"">paymentinformation09+11042@gmail.com</a>
<a href=""mailto:paymentinformation09+32727@gmail.com"">paymentinformation09+32727@gmail.com</a>
<a href=""mailto:paymentinformation09+11332@gmail.com"">paymentinformation09+11332@gmail.com</a>
<a href=""mailto:paymentinformation09+387@gmail.com"">paymentinformation09+387@gmail.com</a>
<a href=""mailto:paymentinformation09+15376@gmail.com"">paymentinformation09+15376@gmail.com</a>
<a href=""mailto:paymentinformation09+17779@gmail.com"">paymentinformation09+17779@gmail.com</a>
<a href=""mailto:paymentinformation09+28018@gmail.com"">paymentinformation09+28018@gmail.com</a>
<a href=""mailto:paymentinformation09+24631@gmail.com"">paymentinformation09+24631@gmail.com</a>
<a href=""mailto:paymentinformation09+25180@gmail.com"">paymentinformation09+25180@gmail.com</a>
<a href=""mailto:paymentinformation09+15323@gmail.com"">paymentinformation09+15323@gmail.com</a>
<a href=""mailto:paymentinformation09+23920@gmail.com"">paymentinformation09+23920@gmail.com</a>
<a href=""mailto:paymentinformation09+3326@gmail.com"">paymentinformation09+3326@gmail.com</a>
<a href=""mailto:paymentinformation09+25537@gmail.com"">paymentinformation09+25537@gmail.com</a>
<a href=""mailto:paymentinformation09+2893@gmail.com"">paymentinformation09+2893@gmail.com</a>
<a href=""mailto:paymentinformation09+28431@gmail.com"">paymentinformation09+28431@gmail.com</a>
<a href=""mailto:paymentinformation09+17637@gmail.com"">paymentinformation09+17637@gmail.com</a>
<a href=""mailto:paymentinformation09+10656@gmail.com"">paymentinformation09+10656@gmail.com</a>
<a href=""mailto:paymentinformation09+11319@gmail.com"">paymentinformation09+11319@gmail.com</a>
<a href=""mailto:paymentinformation09+10252@gmail.com"">paymentinformation09+10252@gmail.com</a>
<a href=""mailto:paymentinformation09+2080@gmail.com"">paymentinformation09+2080@gmail.com</a>
<a href=""mailto:paymentinformation09+13843@gmail.com"">paymentinformation09+13843@gmail.com</a>
<a href=""mailto:paymentinformation09+12782@gmail.com"">paymentinformation09+12782@gmail.com</a>
<a href=""mailto:paymentinformation09+29642@gmail.com"">paymentinformation09+29642@gmail.com</a>
<a href=""mailto:paymentinformation09+9494@gmail.com"">paymentinformation09+9494@gmail.com</a>
<a href=""mailto:paymentinformation09+5595@gmail.com"">paymentinformation09+5595@gmail.com</a>
<a href=""mailto:paymentinformation09+25028@gmail.com"">paymentinformation09+25028@gmail.com</a>
<a href=""mailto:paymentinformation09+26716@gmail.com"">paymentinformation09+26716@gmail.com</a>
<a href=""mailto:paymentinformation09+15838@gmail.com"">paymentinformation09+15838@gmail.com</a>
<a href=""mailto:paymentinformation09+25481@gmail.com"">paymentinformation09+25481@gmail.com</a>
<a href=""mailto:paymentinformation09+29700@gmail.com"">paymentinformation09+29700@gmail.com</a>
<a href=""mailto:paymentinformation09+9101@gmail.com"">paymentinformation09+9101@gmail.com</a>
<a href=""mailto:paymentinformation09+2278@gmail.com"">paymentinformation09+2278@gmail.com</a>
<a href=""mailto:paymentinformation09+19063@gmail.com"">paymentinformation09+19063@gmail.com</a>
<a href=""mailto:paymentinformation09+4187@gmail.com"">paymentinformation09+4187@gmail.com</a>
<a href=""mailto:paymentinformation09+21820@gmail.com"">paymentinformation09+21820@gmail.com</a>
<a href=""mailto:paymentinformation09+872@gmail.com"">paymentinformation09+872@gmail.com</a>
<a href=""mailto:paymentinformation09+20701@gmail.com"">paymentinformation09+20701@gmail.com</a>
<a href=""mailto:paymentinformation09+6004@gmail.com"">paymentinformation09+6004@gmail.com</a>
<a href=""mailto:paymentinformation09+26832@gmail.com"">paymentinformation09+26832@gmail.com</a>
<a href=""mailto:paymentinformation09+18289@gmail.com"">paymentinformation09+18289@gmail.com</a>
<a href=""mailto:paymentinformation09+16619@gmail.com"">paymentinformation09+16619@gmail.com</a>
<a href=""mailto:paymentinformation09+30623@gmail.com"">paymentinformation09+30623@gmail.com</a>
<a href=""mailto:paymentinformation09+17046@gmail.com"">paymentinformation09+17046@gmail.com</a>
<a href=""mailto:paymentinformation09+32111@gmail.com"">paymentinformation09+32111@gmail.com</a>
<a href=""mailto:paymentinformation09+802@gmail.com"">paymentinformation09+802@gmail.com</a>
<a href=""mailto:paymentinformation09+30479@gmail.com"">paymentinformation09+30479@gmail.com</a>
<a href=""mailto:paymentinformation09+25729@gmail.com"">paymentinformation09+25729@gmail.com</a>
<a href=""mailto:paymentinformation09+8205@gmail.com"">paymentinformation09+8205@gmail.com</a>
<a href=""mailto:paymentinformation09+3681@gmail.com"">paymentinformation09+3681@gmail.com</a>
<a href=""mailto:paymentinformation09+26174@gmail.com"">paymentinformation09+26174@gmail.com</a>
<a href=""mailto:paymentinformation09+14998@gmail.com"">paymentinformation09+14998@gmail.com</a>
<a href=""mailto:paymentinformation09+2499@gmail.com"">paymentinformation09+2499@gmail.com</a>
<a href=""mailto:paymentinformation09+4621@gmail.com"">paymentinformation09+4621@gmail.com</a>
<a href=""mailto:paymentinformation09+9225@gmail.com"">paymentinformation09+9225@gmail.com</a>
<a href=""mailto:paymentinformation09+3062@gmail.com"">paymentinformation09+3062@gmail.com</a>
<a href=""mailto:paymentinformation09+28007@gmail.com"">paymentinformation09+28007@gmail.com</a>
<a href=""mailto:paymentinformation09+10232@gmail.com"">paymentinformation09+10232@gmail.com</a>
<a href=""mailto:paymentinformation09+6540@gmail.com"">paymentinformation09+6540@gmail.com</a>
<a href=""mailto:paymentinformation09+17437@gmail.com"">paymentinformation09+17437@gmail.com</a>
<a href=""mailto:paymentinformation09+17799@gmail.com"">paymentinformation09+17799@gmail.com</a>
<a href=""mailto:paymentinformation09+10664@gmail.com"">paymentinformation09+10664@gmail.com</a>
<a href=""mailto:paymentinformation09+28870@gmail.com"">paymentinformation09+28870@gmail.com</a>
<a href=""mailto:paymentinformation09+31802@gmail.com"">paymentinformation09+31802@gmail.com</a>
<a href=""mailto:paymentinformation09+12994@gmail.com"">paymentinformation09+12994@gmail.com</a>
<a href=""mailto:paymentinformation09+9551@gmail.com"">paymentinformation09+9551@gmail.com</a>
<a href=""mailto:paymentinformation09+6850@gmail.com"">paymentinformation09+6850@gmail.com</a>
<a href=""mailto:paymentinformation09+29373@gmail.com"">paymentinformation09+29373@gmail.com</a>
<a href=""mailto:paymentinformation09+28144@gmail.com"">paymentinformation09+28144@gmail.com</a>
<a href=""mailto:paymentinformation09+21781@gmail.com"">paymentinformation09+21781@gmail.com</a>
<a href=""mailto:paymentinformation09+30531@gmail.com"">paymentinformation09+30531@gmail.com</a>
<a href=""mailto:paymentinformation09+30553@gmail.com"">paymentinformation09+30553@gmail.com</a>
<a href=""mailto:paymentinformation09+11880@gmail.com"">paymentinformation09+11880@gmail.com</a>
<a href=""mailto:paymentinformation09+15388@gmail.com"">paymentinformation09+15388@gmail.com</a>
<a href=""mailto:paymentinformation09+29613@gmail.com"">paymentinformation09+29613@gmail.com</a>
<a href=""mailto:paymentinformation09+7871@gmail.com"">paymentinformation09+7871@gmail.com</a>
<a href=""mailto:paymentinformation09+15101@gmail.com"">paymentinformation09+15101@gmail.com</a>
<a href=""mailto:paymentinformation09+27966@gmail.com"">paymentinformation09+27966@gmail.com</a>
<a href=""mailto:paymentinformation09+20725@gmail.com"">paymentinformation09+20725@gmail.com</a>
<a href=""mailto:paymentinformation09+9736@gmail.com"">paymentinformation09+9736@gmail.com</a>
<a href=""mailto:paymentinformation09+23285@gmail.com"">paymentinformation09+23285@gmail.com</a>
<a href=""mailto:paymentinformation09+10330@gmail.com"">paymentinformation09+10330@gmail.com</a>
<a href=""mailto:paymentinformation09+31603@gmail.com"">paymentinformation09+31603@gmail.com</a>
<a href=""mailto:paymentinformation09+17254@gmail.com"">paymentinformation09+17254@gmail.com</a>
<a href=""mailto:paymentinformation09+18830@gmail.com"">paymentinformation09+18830@gmail.com</a>
<a href=""mailto:paymentinformation09+12365@gmail.com"">paymentinformation09+12365@gmail.com</a>
<a href=""mailto:paymentinformation09+12919@gmail.com"">paymentinformation09+12919@gmail.com</a>
<a href=""mailto:paymentinformation09+21038@gmail.com"">paymentinformation09+21038@gmail.com</a>
<a href=""mailto:paymentinformation09+4752@gmail.com"">paymentinformation09+4752@gmail.com</a>
<a href=""mailto:paymentinformation09+21066@gmail.com"">paymentinformation09+21066@gmail.com</a>
<a href=""mailto:paymentinformation09+943@gmail.com"">paymentinformation09+943@gmail.com</a>
<a href=""mailto:paymentinformation09+30331@gmail.com"">paymentinformation09+30331@gmail.com</a>
<a href=""mailto:paymentinformation09+26389@gmail.com"">paymentinformation09+26389@gmail.com</a>
<a href=""mailto:paymentinformation09+6208@gmail.com"">paymentinformation09+6208@gmail.com</a>
<a href=""mailto:paymentinformation09+27382@gmail.com"">paymentinformation09+27382@gmail.com</a>
<a href=""mailto:paymentinformation09+3477@gmail.com"">paymentinformation09+3477@gmail.com</a>
<a href=""mailto:paymentinformation09+1598@gmail.com"">paymentinformation09+1598@gmail.com</a>
<a href=""mailto:paymentinformation09+8364@gmail.com"">paymentinformation09+8364@gmail.com</a>
<a href=""mailto:paymentinformation09+21502@gmail.com"">paymentinformation09+21502@gmail.com</a>
<a href=""mailto:paymentinformation09+6088@gmail.com"">paymentinformation09+6088@gmail.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:ag.en.t.v.ictor.o.k.le@googlemail.com"">ag.en.t.v.ictor.o.k.le@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ic.t.o.rokle@googlemail.com"">ag.e.ntv.ic.t.o.rokle@googlemail.com</a>
<a href=""mailto:age.ntv.ic.t.o.r.o.kl.e@googlemail.com"">age.ntv.ic.t.o.r.o.kl.e@googlemail.com</a>
<a href=""mailto:ag.ent.v.ict.orokle@googlemail.com"">ag.ent.v.ict.orokle@googlemail.com</a>
<a href=""mailto:a.g.en.tv.ic.t.o.rokle@googlemail.com"">a.g.en.tv.ic.t.o.rokle@googlemail.com</a>
<a href=""mailto:ag.ent.v.ictorokl.e@googlemail.com"">ag.ent.v.ictorokl.e@googlemail.com</a>
<a href=""mailto:a.ge.ntv.i.ct.or.okle@googlemail.com"">a.ge.ntv.i.ct.or.okle@googlemail.com</a>
<a href=""mailto:ag.en.tvic.t.o.ro.kl.e@googlemail.com"">ag.en.tvic.t.o.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.gent.vic.t.or.o.kl.e@googlemail.com"">a.gent.vic.t.or.o.kl.e@googlemail.com</a>
<a href=""mailto:age.ntv.i.c.t.o.ro.k.l.e@googlemail.com"">age.ntv.i.c.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.entv.i.cto.r.o.k.le@googlemail.com"">ag.entv.i.cto.r.o.k.le@googlemail.com</a>
<a href=""mailto:a.gentvictor.okl.e@googlemail.com"">a.gentvictor.okl.e@googlemail.com</a>
<a href=""mailto:a.gentv.ic.t.oro.kle@googlemail.com"">a.gentv.ic.t.oro.kle@googlemail.com</a>
<a href=""mailto:a.g.ent.v.i.c.torok.le@googlemail.com"">a.g.ent.v.i.c.torok.le@googlemail.com</a>
<a href=""mailto:agen.t.vic.to.rokl.e@googlemail.com"">agen.t.vic.to.rokl.e@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.ic.t.oro.kle@googlemail.com"">a.g.e.ntv.ic.t.oro.kle@googlemail.com</a>
<a href=""mailto:a.ge.nt.vi.cto.r.o.k.l.e@googlemail.com"">a.ge.nt.vi.cto.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.entv.i.c.to.ro.kle@googlemail.com"">ag.entv.i.c.to.ro.kle@googlemail.com</a>
<a href=""mailto:a.gent.v.i.ctor.o.k.le@googlemail.com"">a.gent.v.i.ctor.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.vi.c.t.or.o.kl.e@googlemail.com"">a.g.e.n.t.vi.c.t.or.o.kl.e@googlemail.com</a>
<a href=""mailto:age.nt.v.i.ct.or.okle@googlemail.com"">age.nt.v.i.ct.or.okle@googlemail.com</a>
<a href=""mailto:a.ge.n.t.vic.t.orokl.e@googlemail.com"">a.ge.n.t.vic.t.orokl.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.vict.orokl.e@googlemail.com"">a.ge.n.t.vict.orokl.e@googlemail.com</a>
<a href=""mailto:agen.tv.ict.or.okle@googlemail.com"">agen.tv.ict.or.okle@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vi.ct.orokle@googlemail.com"">a.g.e.nt.vi.ct.orokle@googlemail.com</a>
<a href=""mailto:a.gent.v.ic.t.o.ro.k.l.e@googlemail.com"">a.gent.v.ic.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:age.nt.victo.r.ok.l.e@googlemail.com"">age.nt.victo.r.ok.l.e@googlemail.com</a>
<a href=""mailto:agent.v.ict.o.r.ok.le@googlemail.com"">agent.v.ict.o.r.ok.le@googlemail.com</a>
<a href=""mailto:agent.vict.o.rokle@googlemail.com"">agent.vict.o.rokle@googlemail.com</a>
<a href=""mailto:ag.entv.icto.rok.le@googlemail.com"">ag.entv.icto.rok.le@googlemail.com</a>
<a href=""mailto:a.gentvi.ct.o.r.o.kl.e@googlemail.com"">a.gentvi.ct.o.r.o.kl.e@googlemail.com</a>
<a href=""mailto:age.ntvi.cto.r.ok.le@googlemail.com"">age.ntvi.cto.r.ok.le@googlemail.com</a>
<a href=""mailto:agent.v.i.c.to.ro.k.le@googlemail.com"">agent.v.i.c.to.ro.k.le@googlemail.com</a>
<a href=""mailto:ag.e.n.tvi.ctorok.le@googlemail.com"">ag.e.n.tvi.ctorok.le@googlemail.com</a>
<a href=""mailto:agen.t.vic.t.o.r.ok.le@googlemail.com"">agen.t.vic.t.o.r.ok.le@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.vic.t.o.rok.l.e@googlemail.com"">a.g.e.n.t.vic.t.o.rok.l.e@googlemail.com</a>
<a href=""mailto:ag.entv.icto.r.o.k.le@googlemail.com"">ag.entv.icto.r.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.ent.vi.ct.oro.k.le@googlemail.com"">a.g.ent.vi.ct.oro.k.le@googlemail.com</a>
<a href=""mailto:a.ge.ntvi.ctor.okl.e@googlemail.com"">a.ge.ntvi.ctor.okl.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.cto.r.okl.e@googlemail.com"">a.g.e.n.t.v.i.cto.r.okl.e@googlemail.com</a>
<a href=""mailto:a.g.ent.v.ict.o.rokl.e@googlemail.com"">a.g.ent.v.ict.o.rokl.e@googlemail.com</a>
<a href=""mailto:ag.en.tv.ic.t.orok.le@googlemail.com"">ag.en.tv.ic.t.orok.le@googlemail.com</a>
<a href=""mailto:ag.en.t.v.i.c.to.ro.k.l.e@googlemail.com"">ag.en.t.v.i.c.to.ro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.i.ct.o.r.okle@googlemail.com"">ag.e.n.tv.i.ct.o.r.okle@googlemail.com</a>
<a href=""mailto:a.g.e.ntvi.ctorok.le@googlemail.com"">a.g.e.ntvi.ctorok.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.i.cto.ro.kl.e@googlemail.com"">a.g.e.ntv.i.cto.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.gent.vi.ct.o.r.o.kle@googlemail.com"">a.gent.vi.ct.o.r.o.kle@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vic.to.rok.l.e@googlemail.com"">a.g.e.nt.vic.to.rok.l.e@googlemail.com</a>
<a href=""mailto:a.gen.tvictor.o.k.l.e@googlemail.com"">a.gen.tvictor.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.entvi.ct.or.ok.le@googlemail.com"">a.g.entvi.ct.or.ok.le@googlemail.com</a>
<a href=""mailto:ag.en.tv.icto.r.o.kl.e@googlemail.com"">ag.en.tv.icto.r.o.kl.e@googlemail.com</a>
<a href=""mailto:agentv.i.c.to.r.o.k.l.e@googlemail.com"">agentv.i.c.to.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.ic.t.or.ok.le@googlemail.com"">a.ge.n.t.v.ic.t.or.ok.le@googlemail.com</a>
<a href=""mailto:a.ge.nt.vic.t.o.ro.kl.e@googlemail.com"">a.ge.nt.vic.t.o.ro.kl.e@googlemail.com</a>
<a href=""mailto:age.nt.v.i.c.toro.k.le@googlemail.com"">age.nt.v.i.c.toro.k.le@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.i.ctor.okle@googlemail.com"">ag.e.n.t.v.i.ctor.okle@googlemail.com</a>
<a href=""mailto:a.g.ent.vi.ct.oro.k.l.e@googlemail.com"">a.g.ent.vi.ct.oro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tvi.c.tor.o.kle@googlemail.com"">ag.e.n.tvi.c.tor.o.kle@googlemail.com</a>
<a href=""mailto:age.n.tv.i.c.to.r.okle@googlemail.com"">age.n.tv.i.c.to.r.okle@googlemail.com</a>
<a href=""mailto:ag.ent.vic.toro.k.l.e@googlemail.com"">ag.ent.vic.toro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.t.vic.to.rok.l.e@googlemail.com"">ag.e.n.t.vic.to.rok.l.e@googlemail.com</a>
<a href=""mailto:ag.en.tvic.to.rok.l.e@googlemail.com"">ag.en.tvic.to.rok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.i.c.toro.kl.e@googlemail.com"">a.ge.n.tv.i.c.toro.kl.e@googlemail.com</a>
<a href=""mailto:age.n.t.v.i.c.t.o.ro.k.l.e@googlemail.com"">age.n.t.v.i.c.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.nt.vict.o.r.o.k.le@googlemail.com"">ag.e.nt.vict.o.r.o.k.le@googlemail.com</a>
<a href=""mailto:ag.e.nt.v.i.c.t.o.r.o.k.l.e@googlemail.com"">ag.e.nt.v.i.c.t.o.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.entv.ic.to.ro.k.l.e@googlemail.com"">a.g.entv.ic.to.ro.k.l.e@googlemail.com</a>
<a href=""mailto:a.gent.vic.tor.o.k.l.e@googlemail.com"">a.gent.vic.tor.o.k.l.e@googlemail.com</a>
<a href=""mailto:age.ntv.ict.o.r.ok.le@googlemail.com"">age.ntv.ict.o.r.ok.le@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.i.c.t.or.o.kl.e@googlemail.com"">a.ge.n.t.v.i.c.t.or.o.kl.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.ic.t.o.ro.k.l.e@googlemail.com"">a.ge.n.t.v.ic.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tvi.ct.orok.l.e@googlemail.com"">a.ge.n.tvi.ct.orok.l.e@googlemail.com</a>
<a href=""mailto:age.n.tvic.to.r.o.k.l.e@googlemail.com"">age.n.tvic.to.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.ge.nt.v.ic.toro.k.l.e@googlemail.com"">a.ge.nt.v.ic.toro.k.l.e@googlemail.com</a>
<a href=""mailto:age.n.t.vic.t.o.ro.kle@googlemail.com"">age.n.t.vic.t.o.ro.kle@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.i.c.t.o.rokle@googlemail.com"">a.ge.n.tv.i.c.t.o.rokle@googlemail.com</a>
<a href=""mailto:agen.tvic.t.o.r.ok.l.e@googlemail.com"">agen.tvic.t.o.r.ok.l.e@googlemail.com</a>
<a href=""mailto:age.ntv.i.c.t.o.rokle@googlemail.com"">age.ntv.i.c.t.o.rokle@googlemail.com</a>
<a href=""mailto:age.nt.vi.ctoro.kl.e@googlemail.com"">age.nt.vi.ctoro.kl.e@googlemail.com</a>
<a href=""mailto:ag.en.t.v.i.ctor.ok.l.e@googlemail.com"">ag.en.t.v.i.ctor.ok.l.e@googlemail.com</a>
<a href=""mailto:age.nt.v.i.c.to.rok.le@googlemail.com"">age.nt.v.i.c.to.rok.le@googlemail.com</a>
<a href=""mailto:a.ge.n.t.vic.to.rok.l.e@googlemail.com"">a.ge.n.t.vic.to.rok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.ntv.i.c.toro.kle@googlemail.com"">ag.e.ntv.i.c.toro.kle@googlemail.com</a>
<a href=""mailto:ag.entv.i.c.t.orok.le@googlemail.com"">ag.entv.i.c.t.orok.le@googlemail.com</a>
<a href=""mailto:ag.e.ntv.i.c.to.rokl.e@googlemail.com"">ag.e.ntv.i.c.to.rokl.e@googlemail.com</a>
<a href=""mailto:agent.v.i.cto.r.o.kle@googlemail.com"">agent.v.i.cto.r.o.kle@googlemail.com</a>
<a href=""mailto:a.g.en.tvic.t.o.ro.kl.e@googlemail.com"">a.g.en.tvic.t.o.ro.kl.e@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.i.ctor.okl.e@googlemail.com"">ag.e.n.t.v.i.ctor.okl.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tvict.or.okle@googlemail.com"">a.ge.n.tvict.or.okle@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ictor.okle@googlemail.com"">ag.e.ntv.ictor.okle@googlemail.com</a>
<a href=""mailto:agen.tv.ict.o.r.okl.e@googlemail.com"">agen.tv.ict.o.r.okl.e@googlemail.com</a>
<a href=""mailto:a.g.entvic.t.or.ok.l.e@googlemail.com"">a.g.entvic.t.or.ok.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.tvi.c.to.r.okle@googlemail.com"">a.g.e.n.tvi.c.to.r.okle@googlemail.com</a>
<a href=""mailto:ag.entv.ict.or.o.k.l.e@googlemail.com"">ag.entv.ict.or.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.i.ctor.okl.e@googlemail.com"">a.g.e.ntv.i.ctor.okl.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.v.ic.t.oro.k.le@googlemail.com"">a.g.e.n.t.v.ic.t.oro.k.le@googlemail.com</a>
<a href=""mailto:age.nt.v.i.ct.orok.l.e@googlemail.com"">age.nt.v.i.ct.orok.l.e@googlemail.com</a>
<a href=""mailto:age.ntv.i.c.toro.kle@googlemail.com"">age.ntv.i.c.toro.kle@googlemail.com</a>
<a href=""mailto:ag.e.n.t.vic.t.or.ok.le@googlemail.com"">ag.e.n.t.vic.t.or.ok.le@googlemail.com</a>
<a href=""mailto:a.ge.nt.v.i.ct.oro.kl.e@googlemail.com"">a.ge.nt.v.i.ct.oro.kl.e@googlemail.com</a>
<a href=""mailto:age.nt.v.ic.t.o.r.ok.le@googlemail.com"">age.nt.v.ic.t.o.r.ok.le@googlemail.com</a>
<a href=""mailto:ag.e.nt.v.ictor.ok.le@googlemail.com"">ag.e.nt.v.ictor.ok.le@googlemail.com</a>
<a href=""mailto:age.ntvic.t.orokle@googlemail.com"">age.ntvic.t.orokle@googlemail.com</a>
<a href=""mailto:a.gen.tv.i.c.to.r.ok.l.e@googlemail.com"">a.gen.tv.i.c.to.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.ictor.o.k.le@googlemail.com"">a.ge.n.tv.ictor.o.k.le@googlemail.com</a>
<a href=""mailto:ag.e.ntvictoro.k.l.e@googlemail.com"">ag.e.ntvictoro.k.l.e@googlemail.com</a>
<a href=""mailto:age.n.t.vi.c.to.r.ok.l.e@googlemail.com"">age.n.t.vi.c.to.r.ok.l.e@googlemail.com</a>
<a href=""mailto:agen.t.vic.toro.k.le@googlemail.com"">agen.t.vic.toro.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.i.ctor.ok.l.e@googlemail.com"">a.g.e.ntv.i.ctor.ok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.ntv.icto.rok.le@googlemail.com"">a.ge.ntv.icto.rok.le@googlemail.com</a>
<a href=""mailto:agent.vi.c.toro.k.le@googlemail.com"">agent.vi.c.toro.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.ic.tor.o.k.l.e@googlemail.com"">a.g.e.ntv.ic.tor.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.ent.vi.c.t.orok.le@googlemail.com"">ag.ent.vi.c.t.orok.le@googlemail.com</a>
<a href=""mailto:agentv.i.ct.or.ok.l.e@googlemail.com"">agentv.i.ct.or.ok.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.tv.ic.tor.okle@googlemail.com"">a.g.e.n.tv.ic.tor.okle@googlemail.com</a>
<a href=""mailto:age.ntv.i.cto.ro.k.le@googlemail.com"">age.ntv.i.cto.ro.k.le@googlemail.com</a>
<a href=""mailto:agentv.ic.t.or.o.k.le@googlemail.com"">agentv.ic.t.or.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.nt.v.i.ctorok.le@googlemail.com"">a.g.e.nt.v.i.ctorok.le@googlemail.com</a>
<a href=""mailto:ag.entv.ic.t.o.r.ok.l.e@googlemail.com"">ag.entv.ic.t.o.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.tvicto.rok.le@googlemail.com"">a.g.e.n.tvicto.rok.le@googlemail.com</a>
<a href=""mailto:a.g.en.tv.i.ct.o.r.o.kl.e@googlemail.com"">a.g.en.tv.i.ct.o.r.o.kl.e@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.icto.r.okl.e@googlemail.com"">ag.e.n.t.v.icto.r.okl.e@googlemail.com</a>
<a href=""mailto:agen.tvic.to.rok.l.e@googlemail.com"">agen.tvic.to.rok.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.c.tor.o.kle@googlemail.com"">a.g.e.n.t.v.i.c.tor.o.kle@googlemail.com</a>
<a href=""mailto:age.ntv.i.ctor.o.kl.e@googlemail.com"">age.ntv.i.ctor.o.kl.e@googlemail.com</a>
<a href=""mailto:ag.ent.v.i.cto.ro.kl.e@googlemail.com"">ag.ent.v.i.cto.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.vi.ct.o.ro.k.le@googlemail.com"">a.g.e.n.t.vi.ct.o.ro.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.nt.v.icto.r.o.kl.e@googlemail.com"">a.g.e.nt.v.icto.r.o.kl.e@googlemail.com</a>
<a href=""mailto:age.n.tvicto.rokle@googlemail.com"">age.n.tvicto.rokle@googlemail.com</a>
<a href=""mailto:agen.tvi.cto.ro.kl.e@googlemail.com"">agen.tvi.cto.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.gentvi.c.t.o.ro.k.le@googlemail.com"">a.gentvi.c.t.o.ro.k.le@googlemail.com</a>
<a href=""mailto:agent.vict.orokl.e@googlemail.com"">agent.vict.orokl.e@googlemail.com</a>
<a href=""mailto:a.gentv.ic.toro.k.le@googlemail.com"">a.gentv.ic.toro.k.le@googlemail.com</a>
<a href=""mailto:ag.e.n.t.vict.or.okl.e@googlemail.com"">ag.e.n.t.vict.or.okl.e@googlemail.com</a>
<a href=""mailto:agent.v.ictorok.l.e@googlemail.com"">agent.v.ictorok.l.e@googlemail.com</a>
<a href=""mailto:ag.entv.i.ctorokle@googlemail.com"">ag.entv.i.ctorokle@googlemail.com</a>
<a href=""mailto:agen.t.vic.toro.k.l.e@googlemail.com"">agen.t.vic.toro.k.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.ictor.o.kl.e@googlemail.com"">a.ge.n.t.v.ictor.o.kl.e@googlemail.com</a>
<a href=""mailto:a.gen.t.v.i.ct.orokl.e@googlemail.com"">a.gen.t.v.i.ct.orokl.e@googlemail.com</a>
<a href=""mailto:agent.victo.r.o.kl.e@googlemail.com"">agent.victo.r.o.kl.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.i.ctor.ok.le@googlemail.com"">a.ge.n.t.v.i.ctor.ok.le@googlemail.com</a>
<a href=""mailto:a.gentv.ict.o.r.o.k.l.e@googlemail.com"">a.gentv.ict.o.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.entv.ic.to.r.okle@googlemail.com"">ag.entv.ic.to.r.okle@googlemail.com</a>
<a href=""mailto:age.n.t.v.ic.t.o.r.ok.le@googlemail.com"">age.n.t.v.ic.t.o.r.ok.le@googlemail.com</a>
<a href=""mailto:ag.ent.vi.c.torok.le@googlemail.com"">ag.ent.vi.c.torok.le@googlemail.com</a>
<a href=""mailto:agen.tv.icto.rok.le@googlemail.com"">agen.tv.icto.rok.le@googlemail.com</a>
<a href=""mailto:ag.e.ntv.i.c.t.orok.l.e@googlemail.com"">ag.e.ntv.i.c.t.orok.l.e@googlemail.com</a>
<a href=""mailto:a.gent.v.i.ct.or.o.k.le@googlemail.com"">a.gent.v.i.ct.or.o.k.le@googlemail.com</a>
<a href=""mailto:agent.v.ic.t.oro.kle@googlemail.com"">agent.v.ic.t.oro.kle@googlemail.com</a>
<a href=""mailto:a.gen.tvic.to.r.o.k.le@googlemail.com"">a.gen.tvic.to.r.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.entvic.t.o.ro.kl.e@googlemail.com"">a.g.entvic.t.o.ro.kl.e@googlemail.com</a>
<a href=""mailto:ag.entv.i.ctoro.k.le@googlemail.com"">ag.entv.i.ctoro.k.le@googlemail.com</a>
<a href=""mailto:a.g.ent.vi.c.to.rok.le@googlemail.com"">a.g.ent.vi.c.to.rok.le@googlemail.com</a>
<a href=""mailto:ag.ent.vi.cto.rokle@googlemail.com"">ag.ent.vi.cto.rokle@googlemail.com</a>
<a href=""mailto:age.ntv.ic.to.ro.kl.e@googlemail.com"">age.ntv.ic.to.ro.kl.e@googlemail.com</a>
<a href=""mailto:age.nt.v.ic.t.orok.l.e@googlemail.com"">age.nt.v.ic.t.orok.l.e@googlemail.com</a>
<a href=""mailto:agen.t.v.i.c.t.o.r.ok.l.e@googlemail.com"">agen.t.v.i.c.t.o.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.gen.t.vi.c.t.o.r.o.k.l.e@googlemail.com"">a.gen.t.vi.c.t.o.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.gent.v.ic.toro.k.le@googlemail.com"">a.gent.v.ic.toro.k.le@googlemail.com</a>
<a href=""mailto:ag.e.ntv.i.ct.o.r.o.kle@googlemail.com"">ag.e.ntv.i.ct.o.r.o.kle@googlemail.com</a>
<a href=""mailto:a.ge.n.t.vic.t.or.o.k.le@googlemail.com"">a.ge.n.t.vic.t.or.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.entv.i.c.toro.k.le@googlemail.com"">a.g.entv.i.c.toro.k.le@googlemail.com</a>
<a href=""mailto:ag.en.tvi.ct.orok.le@googlemail.com"">ag.en.tvi.ct.orok.le@googlemail.com</a>
<a href=""mailto:age.n.tv.ic.tor.o.kl.e@googlemail.com"">age.n.tv.ic.tor.o.kl.e@googlemail.com</a>
<a href=""mailto:agent.vi.c.to.rokle@googlemail.com"">agent.vi.c.to.rokle@googlemail.com</a>
<a href=""mailto:age.n.t.vict.o.r.ok.l.e@googlemail.com"">age.n.t.vict.o.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.i.ctor.o.kle@googlemail.com"">a.ge.n.tv.i.ctor.o.kle@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ict.o.rokle@googlemail.com"">ag.e.ntv.ict.o.rokle@googlemail.com</a>
<a href=""mailto:a.g.entvic.t.o.r.ok.l.e@googlemail.com"">a.g.entvic.t.o.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.nt.vi.c.to.r.okl.e@googlemail.com"">a.ge.nt.vi.c.to.r.okl.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tvicto.ro.k.l.e@googlemail.com"">ag.e.n.tvicto.ro.k.l.e@googlemail.com</a>
<a href=""mailto:age.nt.vic.to.r.o.kle@googlemail.com"">age.nt.vic.to.r.o.kle@googlemail.com</a>
<a href=""mailto:a.gent.victorokl.e@googlemail.com"">a.gent.victorokl.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.tv.icto.r.okle@googlemail.com"">a.g.e.n.tv.icto.r.okle@googlemail.com</a>
<a href=""mailto:a.gen.tv.ic.t.orokl.e@googlemail.com"">a.gen.tv.ic.t.orokl.e@googlemail.com</a>
<a href=""mailto:a.g.en.t.vi.ctor.ok.le@googlemail.com"">a.g.en.t.vi.ctor.ok.le@googlemail.com</a>
<a href=""mailto:age.n.tv.i.c.to.rok.le@googlemail.com"">age.n.tv.i.c.to.rok.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntvic.t.o.ro.k.le@googlemail.com"">a.g.e.ntvic.t.o.ro.k.le@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.i.ct.oro.kl.e@googlemail.com"">ag.e.n.t.v.i.ct.oro.kl.e@googlemail.com</a>
<a href=""mailto:ag.en.tv.i.c.torokl.e@googlemail.com"">ag.en.tv.i.c.torokl.e@googlemail.com</a>
<a href=""mailto:a.gen.tv.ic.toro.kle@googlemail.com"">a.gen.tv.ic.toro.kle@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ic.torok.l.e@googlemail.com"">ag.e.ntv.ic.torok.l.e@googlemail.com</a>
<a href=""mailto:ag.ent.v.ic.to.r.ok.le@googlemail.com"">ag.ent.v.ic.to.r.ok.le@googlemail.com</a>
<a href=""mailto:age.n.tv.ic.t.orokl.e@googlemail.com"">age.n.tv.ic.t.orokl.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.ic.to.r.o.k.le@googlemail.com"">a.ge.n.tv.ic.to.r.o.k.le@googlemail.com</a>
<a href=""mailto:ag.en.tvict.o.ro.kl.e@googlemail.com"">ag.en.tvict.o.ro.kl.e@googlemail.com</a>
<a href=""mailto:age.n.t.vi.c.to.r.ok.le@googlemail.com"">age.n.t.vi.c.to.r.ok.le@googlemail.com</a>
<a href=""mailto:ag.e.ntvi.c.torokl.e@googlemail.com"">ag.e.ntvi.c.torokl.e@googlemail.com</a>
<a href=""mailto:ag.en.tv.ic.to.r.o.kle@googlemail.com"">ag.en.tv.ic.to.r.o.kle@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ic.t.o.ro.k.l.e@googlemail.com"">ag.e.ntv.ic.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.en.t.vic.t.o.rok.l.e@googlemail.com"">a.g.en.t.vic.t.o.rok.l.e@googlemail.com</a>
<a href=""mailto:age.n.tvi.c.t.or.ok.l.e@googlemail.com"">age.n.tvi.c.t.or.ok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tvi.ctoro.kle@googlemail.com"">ag.e.n.tvi.ctoro.kle@googlemail.com</a>
<a href=""mailto:a.gent.vi.ct.orok.l.e@googlemail.com"">a.gent.vi.ct.orok.l.e@googlemail.com</a>
<a href=""mailto:a.g.ent.vict.or.o.k.l.e@googlemail.com"">a.g.ent.vict.or.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ict.o.r.o.k.l.e@googlemail.com"">ag.e.ntv.ict.o.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.ict.or.okl.e@googlemail.com"">ag.e.n.tv.ict.or.okl.e@googlemail.com</a>
<a href=""mailto:age.ntv.i.c.tor.o.k.le@googlemail.com"">age.ntv.i.c.tor.o.k.le@googlemail.com</a>
<a href=""mailto:ag.ent.v.i.c.t.or.o.k.l.e@googlemail.com"">ag.ent.v.i.c.t.or.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.ent.vict.oro.k.l.e@googlemail.com"">ag.ent.vict.oro.k.l.e@googlemail.com</a>
<a href=""mailto:johnmoremore13@gmail.com"">johnmoremore13@gmail.com</a>
<a href=""mailto:johnmoremore13+17993@gmail.com"">johnmoremore13+17993@gmail.com</a>
<a href=""mailto:johnmoremore13+24953@gmail.com"">johnmoremore13+24953@gmail.com</a>
<a href=""mailto:johnmoremore13+15325@gmail.com"">johnmoremore13+15325@gmail.com</a>
<a href=""mailto:johnmoremore13+29757@gmail.com"">johnmoremore13+29757@gmail.com</a>
<a href=""mailto:johnmoremore13+3393@gmail.com"">johnmoremore13+3393@gmail.com</a>
<a href=""mailto:johnmoremore13+29857@gmail.com"">johnmoremore13+29857@gmail.com</a>
<a href=""mailto:johnmoremore13+23366@gmail.com"">johnmoremore13+23366@gmail.com</a>
<a href=""mailto:johnmoremore13+6350@gmail.com"">johnmoremore13+6350@gmail.com</a>
<a href=""mailto:johnmoremore13+13541@gmail.com"">johnmoremore13+13541@gmail.com</a>
<a href=""mailto:johnmoremore13+2921@gmail.com"">johnmoremore13+2921@gmail.com</a>
<a href=""mailto:johnmoremore13+13325@gmail.com"">johnmoremore13+13325@gmail.com</a>
<a href=""mailto:johnmoremore13+13434@gmail.com"">johnmoremore13+13434@gmail.com</a>
<a href=""mailto:johnmoremore13+7883@gmail.com"">johnmoremore13+7883@gmail.com</a>
<a href=""mailto:johnmoremore13+29207@gmail.com"">johnmoremore13+29207@gmail.com</a>
<a href=""mailto:johnmoremore13+10202@gmail.com"">johnmoremore13+10202@gmail.com</a>
<a href=""mailto:johnmoremore13+7670@gmail.com"">johnmoremore13+7670@gmail.com</a>
<a href=""mailto:johnmoremore13+1931@gmail.com"">johnmoremore13+1931@gmail.com</a>
<a href=""mailto:johnmoremore13+27611@gmail.com"">johnmoremore13+27611@gmail.com</a>
<a href=""mailto:johnmoremore13+21674@gmail.com"">johnmoremore13+21674@gmail.com</a>
<a href=""mailto:johnmoremore13+12064@gmail.com"">johnmoremore13+12064@gmail.com</a>
<a href=""mailto:johnmoremore13+20325@gmail.com"">johnmoremore13+20325@gmail.com</a>
<a href=""mailto:johnmoremore13+10957@gmail.com"">johnmoremore13+10957@gmail.com</a>
<a href=""mailto:johnmoremore13+19409@gmail.com"">johnmoremore13+19409@gmail.com</a>
<a href=""mailto:johnmoremore13+26644@gmail.com"">johnmoremore13+26644@gmail.com</a>
<a href=""mailto:johnmoremore13+12973@gmail.com"">johnmoremore13+12973@gmail.com</a>
<a href=""mailto:johnmoremore13+7480@gmail.com"">johnmoremore13+7480@gmail.com</a>
<a href=""mailto:johnmoremore13+7168@gmail.com"">johnmoremore13+7168@gmail.com</a>
<a href=""mailto:johnmoremore13+10262@gmail.com"">johnmoremore13+10262@gmail.com</a>
<a href=""mailto:johnmoremore13+16443@gmail.com"">johnmoremore13+16443@gmail.com</a>
<a href=""mailto:johnmoremore13+7235@gmail.com"">johnmoremore13+7235@gmail.com</a>
<a href=""mailto:johnmoremore13+21115@gmail.com"">johnmoremore13+21115@gmail.com</a>
<a href=""mailto:johnmoremore13+23321@gmail.com"">johnmoremore13+23321@gmail.com</a>
<a href=""mailto:johnmoremore13+9424@gmail.com"">johnmoremore13+9424@gmail.com</a>
<a href=""mailto:johnmoremore13+14011@gmail.com"">johnmoremore13+14011@gmail.com</a>
<a href=""mailto:johnmoremore13+25348@gmail.com"">johnmoremore13+25348@gmail.com</a>
<a href=""mailto:johnmoremore13+604@gmail.com"">johnmoremore13+604@gmail.com</a>
<a href=""mailto:johnmoremore13+22392@gmail.com"">johnmoremore13+22392@gmail.com</a>
<a href=""mailto:johnmoremore13+10276@gmail.com"">johnmoremore13+10276@gmail.com</a>
<a href=""mailto:johnmoremore13+3615@gmail.com"">johnmoremore13+3615@gmail.com</a>
<a href=""mailto:johnmoremore13+9143@gmail.com"">johnmoremore13+9143@gmail.com</a>
<a href=""mailto:johnmoremore13+3268@gmail.com"">johnmoremore13+3268@gmail.com</a>
<a href=""mailto:johnmoremore13+27793@gmail.com"">johnmoremore13+27793@gmail.com</a>
<a href=""mailto:johnmoremore13+9847@gmail.com"">johnmoremore13+9847@gmail.com</a>
<a href=""mailto:johnmoremore13+24139@gmail.com"">johnmoremore13+24139@gmail.com</a>
<a href=""mailto:johnmoremore13+21576@gmail.com"">johnmoremore13+21576@gmail.com</a>
<a href=""mailto:johnmoremore13+9756@gmail.com"">johnmoremore13+9756@gmail.com</a>
<a href=""mailto:johnmoremore13+23283@gmail.com"">johnmoremore13+23283@gmail.com</a>
<a href=""mailto:johnmoremore13+13852@gmail.com"">johnmoremore13+13852@gmail.com</a>
<a href=""mailto:johnmoremore13+4291@gmail.com"">johnmoremore13+4291@gmail.com</a>
<a href=""mailto:johnmoremore13+25079@gmail.com"">johnmoremore13+25079@gmail.com</a>
<a href=""mailto:johnmoremore13+20282@gmail.com"">johnmoremore13+20282@gmail.com</a>
<a href=""mailto:johnmoremore13+16885@gmail.com"">johnmoremore13+16885@gmail.com</a>
<a href=""mailto:johnmoremore13+15935@gmail.com"">johnmoremore13+15935@gmail.com</a>
<a href=""mailto:johnmoremore13+5873@gmail.com"">johnmoremore13+5873@gmail.com</a>
<a href=""mailto:johnmoremore13+21617@gmail.com"">johnmoremore13+21617@gmail.com</a>
<a href=""mailto:johnmoremore13+15740@gmail.com"">johnmoremore13+15740@gmail.com</a>
<a href=""mailto:johnmoremore13+32698@gmail.com"">johnmoremore13+32698@gmail.com</a>
<a href=""mailto:johnmoremore13+10370@gmail.com"">johnmoremore13+10370@gmail.com</a>
<a href=""mailto:johnmoremore13+23501@gmail.com"">johnmoremore13+23501@gmail.com</a>
<a href=""mailto:johnmoremore13+29779@gmail.com"">johnmoremore13+29779@gmail.com</a>
<a href=""mailto:johnmoremore13+28463@gmail.com"">johnmoremore13+28463@gmail.com</a>
<a href=""mailto:johnmoremore13+5117@gmail.com"">johnmoremore13+5117@gmail.com</a>
<a href=""mailto:johnmoremore13+23904@gmail.com"">johnmoremore13+23904@gmail.com</a>
<a href=""mailto:johnmoremore13+7986@gmail.com"">johnmoremore13+7986@gmail.com</a>
<a href=""mailto:johnmoremore13+6913@gmail.com"">johnmoremore13+6913@gmail.com</a>
<a href=""mailto:johnmoremore13+6971@gmail.com"">johnmoremore13+6971@gmail.com</a>
<a href=""mailto:johnmoremore13+30902@gmail.com"">johnmoremore13+30902@gmail.com</a>
<a href=""mailto:johnmoremore13+28377@gmail.com"">johnmoremore13+28377@gmail.com</a>
<a href=""mailto:johnmoremore13+30772@gmail.com"">johnmoremore13+30772@gmail.com</a>
<a href=""mailto:johnmoremore13+16479@gmail.com"">johnmoremore13+16479@gmail.com</a>
<a href=""mailto:johnmoremore13+21702@gmail.com"">johnmoremore13+21702@gmail.com</a>
<a href=""mailto:johnmoremore13+32260@gmail.com"">johnmoremore13+32260@gmail.com</a>
<a href=""mailto:johnmoremore13+28836@gmail.com"">johnmoremore13+28836@gmail.com</a>
<a href=""mailto:johnmoremore13+26753@gmail.com"">johnmoremore13+26753@gmail.com</a>
<a href=""mailto:johnmoremore13+21171@gmail.com"">johnmoremore13+21171@gmail.com</a>
<a href=""mailto:johnmoremore13+28650@gmail.com"">johnmoremore13+28650@gmail.com</a>
<a href=""mailto:johnmoremore13+15288@gmail.com"">johnmoremore13+15288@gmail.com</a>
<a href=""mailto:johnmoremore13+7805@gmail.com"">johnmoremore13+7805@gmail.com</a>
<a href=""mailto:johnmoremore13+10350@gmail.com"">johnmoremore13+10350@gmail.com</a>
<a href=""mailto:johnmoremore13+31467@gmail.com"">johnmoremore13+31467@gmail.com</a>
<a href=""mailto:johnmoremore13+20872@gmail.com"">johnmoremore13+20872@gmail.com</a>
<a href=""mailto:johnmoremore13+4107@gmail.com"">johnmoremore13+4107@gmail.com</a>
<a href=""mailto:johnmoremore13+19995@gmail.com"">johnmoremore13+19995@gmail.com</a>
<a href=""mailto:johnmoremore13+10855@gmail.com"">johnmoremore13+10855@gmail.com</a>
<a href=""mailto:johnmoremore13+27902@gmail.com"">johnmoremore13+27902@gmail.com</a>
<a href=""mailto:johnmoremore13+29531@gmail.com"">johnmoremore13+29531@gmail.com</a>
<a href=""mailto:johnmoremore13+16016@gmail.com"">johnmoremore13+16016@gmail.com</a>
<a href=""mailto:johnmoremore13+23859@gmail.com"">johnmoremore13+23859@gmail.com</a>
<a href=""mailto:johnmoremore13+21053@gmail.com"">johnmoremore13+21053@gmail.com</a>
<a href=""mailto:johnmoremore13+4026@gmail.com"">johnmoremore13+4026@gmail.com</a>
<a href=""mailto:johnmoremore13+613@gmail.com"">johnmoremore13+613@gmail.com</a>
<a href=""mailto:johnmoremore13+27270@gmail.com"">johnmoremore13+27270@gmail.com</a>
<a href=""mailto:johnmoremore13+7648@gmail.com"">johnmoremore13+7648@gmail.com</a>
<a href=""mailto:johnmoremore13+12808@gmail.com"">johnmoremore13+12808@gmail.com</a>
<a href=""mailto:johnmoremore13+31017@gmail.com"">johnmoremore13+31017@gmail.com</a>
<a href=""mailto:johnmoremore13+31550@gmail.com"">johnmoremore13+31550@gmail.com</a>
<a href=""mailto:johnmoremore13+32597@gmail.com"">johnmoremore13+32597@gmail.com</a>
<a href=""mailto:johnmoremore13+27038@gmail.com"">johnmoremore13+27038@gmail.com</a>
<a href=""mailto:johnmoremore13+6386@gmail.com"">johnmoremore13+6386@gmail.com</a>
<a href=""mailto:johnmoremore13+28662@gmail.com"">johnmoremore13+28662@gmail.com</a>
<a href=""mailto:imfo37480@gmail.com"">imfo37480@gmail.com</a>
<a href=""mailto:imfo37480+32081@gmail.com"">imfo37480+32081@gmail.com</a>
<a href=""mailto:imfo37480+7633@gmail.com"">imfo37480+7633@gmail.com</a>
<a href=""mailto:imfo37480+22881@gmail.com"">imfo37480+22881@gmail.com</a>
<a href=""mailto:imfo37480+12556@gmail.com"">imfo37480+12556@gmail.com</a>
<a href=""mailto:imfo37480+23360@gmail.com"">imfo37480+23360@gmail.com</a>
<a href=""mailto:imfo37480+4446@gmail.com"">imfo37480+4446@gmail.com</a>
<a href=""mailto:imfo37480+14093@gmail.com"">imfo37480+14093@gmail.com</a>
<a href=""mailto:imfo37480+6278@gmail.com"">imfo37480+6278@gmail.com</a>
<a href=""mailto:imfo37480+24802@gmail.com"">imfo37480+24802@gmail.com</a>
<a href=""mailto:imfo37480+24432@gmail.com"">imfo37480+24432@gmail.com</a>
<a href=""mailto:imfo37480+11357@gmail.com"">imfo37480+11357@gmail.com</a>
<a href=""mailto:imfo37480+21165@gmail.com"">imfo37480+21165@gmail.com</a>
<a href=""mailto:imfo37480+7465@gmail.com"">imfo37480+7465@gmail.com</a>
<a href=""mailto:imfo37480+2949@gmail.com"">imfo37480+2949@gmail.com</a>
<a href=""mailto:imfo37480+14899@gmail.com"">imfo37480+14899@gmail.com</a>
<a href=""mailto:imfo37480+16904@gmail.com"">imfo37480+16904@gmail.com</a>
<a href=""mailto:imfo37480+27521@gmail.com"">imfo37480+27521@gmail.com</a>
<a href=""mailto:imfo37480+4171@gmail.com"">imfo37480+4171@gmail.com</a>
<a href=""mailto:imfo37480+10194@gmail.com"">imfo37480+10194@gmail.com</a>
<a href=""mailto:imfo37480+22120@gmail.com"">imfo37480+22120@gmail.com</a>
<a href=""mailto:imfo37480+7086@gmail.com"">imfo37480+7086@gmail.com</a>
<a href=""mailto:imfo37480+11812@gmail.com"">imfo37480+11812@gmail.com</a>
<a href=""mailto:imfo37480+11728@gmail.com"">imfo37480+11728@gmail.com</a>
<a href=""mailto:imfo37480+26899@gmail.com"">imfo37480+26899@gmail.com</a>
<a href=""mailto:imfo37480+6762@gmail.com"">imfo37480+6762@gmail.com</a>
<a href=""mailto:imfo37480+18084@gmail.com"">imfo37480+18084@gmail.com</a>
<a href=""mailto:imfo37480+12885@gmail.com"">imfo37480+12885@gmail.com</a>
<a href=""mailto:imfo37480+32663@gmail.com"">imfo37480+32663@gmail.com</a>
<a href=""mailto:imfo37480+9819@gmail.com"">imfo37480+9819@gmail.com</a>
<a href=""mailto:imfo37480+13736@gmail.com"">imfo37480+13736@gmail.com</a>
<a href=""mailto:imfo37480+7612@gmail.com"">imfo37480+7612@gmail.com</a>
<a href=""mailto:imfo37480+7995@gmail.com"">imfo37480+7995@gmail.com</a>
<a href=""mailto:imfo37480+26345@gmail.com"">imfo37480+26345@gmail.com</a>
<a href=""mailto:imfo37480+14416@gmail.com"">imfo37480+14416@gmail.com</a>
<a href=""mailto:imfo37480+25767@gmail.com"">imfo37480+25767@gmail.com</a>
<a href=""mailto:imfo37480+6302@gmail.com"">imfo37480+6302@gmail.com</a>
<a href=""mailto:imfo37480+4964@gmail.com"">imfo37480+4964@gmail.com</a>
<a href=""mailto:imfo37480+1259@gmail.com"">imfo37480+1259@gmail.com</a>
<a href=""mailto:imfo37480+1615@gmail.com"">imfo37480+1615@gmail.com</a>
<a href=""mailto:imfo37480+13958@gmail.com"">imfo37480+13958@gmail.com</a>
<a href=""mailto:imfo37480+10570@gmail.com"">imfo37480+10570@gmail.com</a>
<a href=""mailto:imfo37480+3593@gmail.com"">imfo37480+3593@gmail.com</a>
<a href=""mailto:imfo37480+23792@gmail.com"">imfo37480+23792@gmail.com</a>
<a href=""mailto:imfo37480+14872@gmail.com"">imfo37480+14872@gmail.com</a>
<a href=""mailto:imfo37480+8481@gmail.com"">imfo37480+8481@gmail.com</a>
<a href=""mailto:imfo37480+29325@gmail.com"">imfo37480+29325@gmail.com</a>
<a href=""mailto:imfo37480+15253@gmail.com"">imfo37480+15253@gmail.com</a>
<a href=""mailto:imfo37480+17723@gmail.com"">imfo37480+17723@gmail.com</a>
<a href=""mailto:imfo37480+22656@gmail.com"">imfo37480+22656@gmail.com</a>
<a href=""mailto:imfo37480+15248@gmail.com"">imfo37480+15248@gmail.com</a>
<a href=""mailto:imfo37480+21575@gmail.com"">imfo37480+21575@gmail.com</a>
<a href=""mailto:imfo37480+5175@gmail.com"">imfo37480+5175@gmail.com</a>
<a href=""mailto:imfo37480+6310@gmail.com"">imfo37480+6310@gmail.com</a>
<a href=""mailto:imfo37480+6782@gmail.com"">imfo37480+6782@gmail.com</a>
<a href=""mailto:imfo37480+6607@gmail.com"">imfo37480+6607@gmail.com</a>
<a href=""mailto:imfo37480+8772@gmail.com"">imfo37480+8772@gmail.com</a>
<a href=""mailto:imfo37480+22844@gmail.com"">imfo37480+22844@gmail.com</a>
<a href=""mailto:imfo37480+2808@gmail.com"">imfo37480+2808@gmail.com</a>
<a href=""mailto:imfo37480+19293@gmail.com"">imfo37480+19293@gmail.com</a>
<a href=""mailto:imfo37480+21260@gmail.com"">imfo37480+21260@gmail.com</a>
<a href=""mailto:imfo37480+4269@gmail.com"">imfo37480+4269@gmail.com</a>
<a href=""mailto:imfo37480+25835@gmail.com"">imfo37480+25835@gmail.com</a>
<a href=""mailto:imfo37480+32337@gmail.com"">imfo37480+32337@gmail.com</a>
<a href=""mailto:imfo37480+18532@gmail.com"">imfo37480+18532@gmail.com</a>
<a href=""mailto:imfo37480+18317@gmail.com"">imfo37480+18317@gmail.com</a>
<a href=""mailto:imfo37480+245@gmail.com"">imfo37480+245@gmail.com</a>
<a href=""mailto:imfo37480+26107@gmail.com"">imfo37480+26107@gmail.com</a>
<a href=""mailto:imfo37480+31437@gmail.com"">imfo37480+31437@gmail.com</a>
<a href=""mailto:imfo37480+23650@gmail.com"">imfo37480+23650@gmail.com</a>
<a href=""mailto:imfo37480+23959@gmail.com"">imfo37480+23959@gmail.com</a>
<a href=""mailto:imfo37480+3421@gmail.com"">imfo37480+3421@gmail.com</a>
<a href=""mailto:imfo37480+3548@gmail.com"">imfo37480+3548@gmail.com</a>
<a href=""mailto:imfo37480+4174@gmail.com"">imfo37480+4174@gmail.com</a>
<a href=""mailto:imfo37480+6475@gmail.com"">imfo37480+6475@gmail.com</a>
<a href=""mailto:imfo37480+15968@gmail.com"">imfo37480+15968@gmail.com</a>
<a href=""mailto:imfo37480+22506@gmail.com"">imfo37480+22506@gmail.com</a>
<a href=""mailto:imfo37480+29250@gmail.com"">imfo37480+29250@gmail.com</a>
<a href=""mailto:imfo37480+18033@gmail.com"">imfo37480+18033@gmail.com</a>
<a href=""mailto:imfo37480+21216@gmail.com"">imfo37480+21216@gmail.com</a>
<a href=""mailto:imfo37480+6489@gmail.com"">imfo37480+6489@gmail.com</a>
<a href=""mailto:imfo37480+21115@gmail.com"">imfo37480+21115@gmail.com</a>
<a href=""mailto:imfo37480+2043@gmail.com"">imfo37480+2043@gmail.com</a>
<a href=""mailto:imfo37480+28071@gmail.com"">imfo37480+28071@gmail.com</a>
<a href=""mailto:imfo37480+30770@gmail.com"">imfo37480+30770@gmail.com</a>
<a href=""mailto:imfo37480+3995@gmail.com"">imfo37480+3995@gmail.com</a>
<a href=""mailto:imfo37480+9860@gmail.com"">imfo37480+9860@gmail.com</a>
<a href=""mailto:imfo37480+25250@gmail.com"">imfo37480+25250@gmail.com</a>
<a href=""mailto:imfo37480+29290@gmail.com"">imfo37480+29290@gmail.com</a>
<a href=""mailto:imfo37480+10501@gmail.com"">imfo37480+10501@gmail.com</a>
<a href=""mailto:imfo37480+18024@gmail.com"">imfo37480+18024@gmail.com</a>
<a href=""mailto:imfo37480+2909@gmail.com"">imfo37480+2909@gmail.com</a>
<a href=""mailto:imfo37480+1705@gmail.com"">imfo37480+1705@gmail.com</a>
<a href=""mailto:imfo37480+9970@gmail.com"">imfo37480+9970@gmail.com</a>
<a href=""mailto:imfo37480+1786@gmail.com"">imfo37480+1786@gmail.com</a>
<a href=""mailto:imfo37480+11439@gmail.com"">imfo37480+11439@gmail.com</a>
<a href=""mailto:imfo37480+30075@gmail.com"">imfo37480+30075@gmail.com</a>
<a href=""mailto:imfo37480+16481@gmail.com"">imfo37480+16481@gmail.com</a>
<a href=""mailto:imfo37480+25939@gmail.com"">imfo37480+25939@gmail.com</a>
<a href=""mailto:imfo37480+30621@gmail.com"">imfo37480+30621@gmail.com</a>
<a href=""mailto:imfo37480+27503@gmail.com"">imfo37480+27503@gmail.com</a>"
Zb0z03iS,CodinGame_2023_08_25__19_19_03__str_to_hex.cpp,MonsterScripter,C++,Friday 25th of August 2023 12:19:16 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>

using namespace std;

/**
 * Test 1
 * Entrée :
 * F
 * Sortie attendue :
 * 15
 * 
 * Test 2
 * Entrée :
 * 5
 * Sortie attendue :
 * 5
 * 
 * Test 3
 * Entrée :
 * FF
 * Sortie attendue :
 * 255
 * 
 * Test 4
 * Entrée :
 * 4B68
 * Sortie attendue :
 * 19304
 * 
 * Test 5
 * Entrée :
 * 83DF47
 * Sortie attendue :
 * 8642375
 * 
 * Test 6
 * Entrée :
 * 10
 * Sortie attendue :
 * 16
 */

int main()
{
    string number;
    cin >> number; cin.ignore();

    unsigned int x;   
    std::stringstream ss;
    ss << std::hex << number;
    ss >> x;
    cout << x << endl;

    return 0;
}
"
8cJjwFTA,CodinGame_2023_08_25__19_12_52__ordered_addition.cpp,MonsterScripter,C++,Friday 25th of August 2023 12:13:19 PM CDT,"#include <iostream>
#include <string>

using namespace std;

/**
 * Objectif :
 * Comme la fille de Logan, âgée de 4 ans, débute en mathématiques, elle a du mal à comprendre les sommes
 * lorsqu'elles sont données sous forme de chaîne avec des nombres dans un ordre arbitraire, tel que 3+5+2.
 * Par conséquent, son père l'aide à comprendre les sommes en triant les nombres de chaque somme en ordre croissant,
 * tel que 2+3+5.
 * 
 * Votre travail consiste à aider Logan à organiser les nombres en ordre croissant et à afficher la somme
 * sous une forme que sa fille peut comprendre.
 * 
 * Entrée :
 * Ligne 1 : la chaîne de la somme.
 * 
 * Sortie :
 * Une chaîne contenant la somme décrite dans sum avec chaque nombre dans l'ordre croissant.
 * 
 * Contraintes :
 * La somme contient uniquement des chiffres et le caractère +.
 * Aucun des nombres de la somme n'est négatif.
 * Chaque nombre de la somme a un seul chiffre.
 * La somme a une longueur maximale de 100 caractères.
 * 
 * Exemple :
 * Entrée :
 * 1+3+2
 * Sortie :
 * 1+2+3
 */

int main()
{
    string sum;
    cin >> sum; cin.ignore();
    
    for (int i = 0; i < sum.length(); i += 2) {
        char min = sum[i];
        for (int j = i; j < sum.length(); j += 2) {
            if (isdigit(sum[j]) && min > sum[j]) {
                min = sum[j];
                sum[j] = sum[i];
                sum[i] = min;
            }
        }
    }
    
    cout << sum << endl;

    return 0;
}
"
gTbpb0DC,Course 10 - Null subcarriers,makispaiktis,MatLab,Friday 25th of August 2023 12:10:58 PM CDT,"clear all
close all
clc


% 1. Simulation parameters

modOrder = 16;  % for 16-QAM
bitsPerSymbol = log2(modOrder)  % modOrder = 2^bitsPerSymbol
mpChan = [0.8; zeros(7,1); -0.5; zeros(7,1); 0.34];  % multipath channel
SNR = 15   % dB, signal-to-noise ratio of AWGN
numCarr = 8192;  % number of subcarriers
cycPrefLen = 32;  % cyclic prefix length


% 2. Define the indeces of guard bands (left and right)

numGBCarr = numCarr / 16;
gbLeft = 1 : numGBCarr;
gbRight = (numCarr - numGBCarr + 1) : numCarr;


% 3. Add the DC component index

dcIdx = numCarr / 2 + 1;        % Center of vector
nullIdx = [gbLeft dcIdx gbRight]';


% 4. Calculate the number of source bits that will be sent

numDataCarr = numCarr - length(nullIdx);
numBits = numDataCarr * bitsPerSymbol;


% 5. QAM Modulation

srcBits = randi([0,1],numBits,1);
qamModOut = qammod(srcBits,modOrder,""InputType"",""bit"",""UnitAveragePower"",true);


% 6. OFDM Modulation

ofdmModOut = ofdmmod(qamModOut, numCarr, cycPrefLen, nullIdx);


% 7. Channel

mpChanOut = filter(mpChan,1,ofdmModOut);
chanOut = awgn(mpChanOut,SNR,""measured"");


% 8. OFDM Demodulation

symbolSamplingOffset = cycPrefLen;
ofdmDemodOut = ofdmdemod(chanOut, numCarr, cycPrefLen, symbolSamplingOffset, nullIdx);


% 9. The channel frequency response has numCarr frequency components. However, the OFDM demodulator output contains only the data
% subcarriers. To perform the elementwise division, you need to remove the null subcarrier frequency components from the channel
% frequency response.

mpChanFreq = fftshift(fft(mpChan, numCarr));
mpChanFreq(nullIdx) = [];


% 10. Equalizer

eqOut = ofdmDemodOut ./ mpChanFreq;
scatterplot(eqOut);


% 11. QAM Demodulation

qamDemodOut = qamdemod(eqOut,modOrder,""OutputType"",""bit"",""UnitAveragePower"",true);
numBitErrors = nnz(srcBits~=qamDemodOut)
BER = numBitErrors/numBits"
UeHG2YGj,MNF-CRM Report,ankdroid,PostgreSQL,Friday 25th of August 2023 12:06:36 PM CDT,"-- plan -- adhoc plan -- create date < schedule date
-- adhoc -- adhoc plan -- create date + 7 = schedule date

select 
	rc.name as KS, 
	rb.name as branch_name,
	cl.user_id ,
	ru.login ,
	cl.schedule_date,
	count(cl.id) as activity_per_day,
	coalesce(max(cap.total_adhoc),0) as total_adhoc,
	coalesce(max(cap.call_adhoc),0) as call_adhoc,
	coalesce(max(cap.visit_adhoc),0) as visit_adhoc,
--	EXTRACT(DOW FROM cl.schedule_date) AS day_of_week_number,
--	CASE
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 0 THEN 'Sunday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 1 THEN 'Monday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 2 THEN 'Tuesday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 3 THEN 'Wednesday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 4 THEN 'Thursday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 5 THEN 'Friday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 6 THEN 'Saturday'
--    END AS day_of_week_name
	case when count(cl.id) - max(cap.total_adhoc) > 0 then count(cl.id) - max(cap.total_adhoc) else count(cl.id) end as system_generated,
	coalesce(max(cap.customer_adhoc),0) as customer_adhoc,
	coalesce(max(cap.leads_adhoc),0) as leads_adhoc,
	SUM(CASE WHEN cl.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as complete,
	SUM(CASE WHEN cl.status_crm_pipeline != 'close_and_complete' THEN 1 ELSE 0 END) as incomplete,
	SUM(CASE WHEN cl.status_meet_visit = 'meet_customer' and cl.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as meet,
	SUM(CASE WHEN cl.status_meet_visit != 'meet_customer' and cl.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as not_meet
from crm_lead cl
left join (
	select 
		cap2.schedule_date,
		cap2.user_id,
		count(cap2.id) as total_adhoc,
		SUM(CASE WHEN cl2.type_pipeline like '%call%' THEN 1 ELSE 0 END) as call_adhoc,
		SUM(CASE WHEN cl2.type_pipeline like '%visit%' THEN 1 ELSE 0 END) as visit_adhoc,
		SUM(CASE WHEN cap2.type_pipeline = 'visit_plan_customer' THEN 1 ELSE 0 END) as customer_adhoc,
		SUM(CASE WHEN cap2.type_pipeline = 'visit_plan_leads' THEN 1 ELSE 0 END) as leads_adhoc
	from crm_adhoc_plan cap2
	left join crm_lead cl2 on cap2.pipeline_id = cl2.id
	where cap2.type_pipeline in ('visit_plan_customer','visit_plan_leads') and TO_CHAR((cap2.create_date + INTERVAL '7 hours')::DATE, 'YYYY-MM-DD') < TO_CHAR(cap2.schedule_date, 'YYYY-MM-DD')
	group by 
		cap2.schedule_date,
		cap2.user_id) cap on cl.user_id  = cap.user_id and cl.schedule_date = cap.schedule_date
left join res_users ru on cl.user_id = ru.id
left join res_partner rp on cl.partner_id = rp.id
left join crm_lead_pool clp ON cl.crm_lead_pool_id = clp.id
left join res_branch rb on ru.branch_id = rb.id
left join master_company_mnf rc on rb.company_id = rc.id
--where 
where cl.schedule_date between '2023-08-01' and '2023-08-25' 
and ru.login = 'htr-pwb-01'
group by cl.user_id , cl.schedule_date, ru.login, rc.name, rb.name
order by cl.user_id ,cl.schedule_date asc

---------------------------------------------------------------------------------------------------

--adhoc hunter

select 
	rc.name as KS, 
	rb.name as branch_name,
	ru.login ,
	cap.user_id , 
	cap.schedule_date , 
	count(cl_customer.id) as adhoc_customer,
	count(cl_lead.id) as adhoc_lead,
	count(cl_customer.id) + count(cl_lead.id) as total_adhoc,
	SUM(CASE WHEN cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as complete_customer,
	SUM(CASE WHEN cl_customer.status_crm_pipeline != 'close_and_complete' THEN 1 ELSE 0 END) as incomplete_customer,
	SUM(CASE WHEN cl_lead.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as complete_lead,
	SUM(CASE WHEN cl_lead.status_crm_pipeline != 'close_and_complete' THEN 1 ELSE 0 END) as incomplete_lead,
	SUM(CASE WHEN cl_customer.status_meet_visit = 'meet_customer' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as meet_customer,
	SUM(CASE WHEN cl_customer.status_meet_visit != 'meet_customer' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as not_meet_customer,
	SUM(CASE WHEN cl_lead.status_meet_visit = 'meet_customer' and cl_lead.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as meet_lead,
	SUM(CASE WHEN cl_lead.status_meet_visit != 'meet_customer' and cl_lead.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as not_meet_lead
from crm_adhoc_plan cap
left join crm_lead cl_customer on cap.schedule_date = cl_customer.schedule_date and cap.user_id = cl_customer.user_id and cap.partner_id = cl_customer.partner_id 
left join crm_lead cl_lead on cap.schedule_date = cl_lead.schedule_date and cap.user_id = cl_lead.user_id and cap.crm_lead_pool_id  = cl_lead.crm_lead_pool_id 
left join res_users ru on cap.user_id = ru.id
left join res_partner rp on cap.partner_id = rp.id
left join crm_lead_pool clp ON cap.crm_lead_pool_id = clp.id
left join res_branch rb on ru.branch_id = rb.id
left join master_company_mnf rc on rb.company_id = rc.id
where cap.schedule_date  between '2023-08-01' and '2023-08-16' and cap.type_pipeline in ('visit_plan_customer','visit_plan_leads')
and TO_CHAR((cap.create_date + INTERVAL '7 hours')::DATE, 'YYYY-MM-DD') = TO_CHAR(cap.schedule_date, 'YYYY-MM-DD')
group by cap.schedule_date, cap.user_id ,rc.name, rb.name,ru.login
	

------------------------------------------------------------
-- farmer

select 
	rc.name as KS, 
	rb.name as branch_name,
	cl.user_id ,
	ru.login ,
	cl.schedule_date,
	count(cl.id) as activity_per_day,
	coalesce(max(cap.total_adhoc),0) as total_adhoc,
	coalesce(max(cap.call_adhoc),0) as call_adhoc,
	coalesce(max(cap.visit_adhoc),0) as visit_adhoc,
--	EXTRACT(DOW FROM cl.schedule_date) AS day_of_week_number,
--	CASE
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 0 THEN 'Sunday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 1 THEN 'Monday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 2 THEN 'Tuesday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 3 THEN 'Wednesday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 4 THEN 'Thursday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 5 THEN 'Friday'
--        WHEN EXTRACT(DOW FROM cl.schedule_date) = 6 THEN 'Saturday'
--    END AS day_of_week_name
	case when count(cl.id) - max(cap.total_adhoc) > 0 then count(cl.id) - max(cap.total_adhoc) else count(cl.id) end as system_generated,
	coalesce(max(cap.customer_adhoc),0) as customer_adhoc,
	coalesce(max(cap.leads_adhoc),0) as leads_adhoc,
	SUM(CASE WHEN cl.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as complete,
	SUM(CASE WHEN cl.status_crm_pipeline != 'close_and_complete' THEN 1 ELSE 0 END) as incomplete,
	SUM(CASE WHEN cl.status_call = 'invalid' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as invalid,
	SUM(CASE WHEN cl.status_call = 'not_answer' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as not_answer,
	SUM(CASE WHEN cl.status_call = 'answer' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as answer,
	SUM(CASE WHEN cl.status_call = 'chat_only' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as chat_only
from crm_lead cl
left join (
	select 
		cap2.schedule_date,
		cap2.user_id,
		count(cap2.id) as total_adhoc,
		SUM(CASE WHEN cl2.type_pipeline like '%call%' THEN 1 ELSE 0 END) as call_adhoc,
		SUM(CASE WHEN cl2.type_pipeline like '%visit%' THEN 1 ELSE 0 END) as visit_adhoc,
		SUM(CASE WHEN cap2.type_pipeline = 'call_plan_customer' THEN 1 ELSE 0 END) as customer_adhoc,
		SUM(CASE WHEN cap2.type_pipeline = 'call_plan_leads' THEN 1 ELSE 0 END) as leads_adhoc
	from crm_adhoc_plan cap2
	left join crm_lead cl2 on cap2.pipeline_id = cl2.id
	where cap2.type_pipeline in ('call_plan_customer','call_plan_leads') and TO_CHAR((cap2.create_date + INTERVAL '7 hours')::DATE, 'YYYY-MM-DD') < TO_CHAR(cap2.schedule_date, 'YYYY-MM-DD')
	group by 
		cap2.schedule_date,
		cap2.user_id) cap on cl.user_id  = cap.user_id and cl.schedule_date = cap.schedule_date 
left join res_users ru on cl.user_id = ru.id
left join res_partner rp on cl.partner_id = rp.id
left join crm_lead_pool clp ON cl.crm_lead_pool_id = clp.id
left join res_branch rb on ru.branch_id = rb.id
left join master_company_mnf rc on rb.company_id = rc.id
--where 
where cl.schedule_date between '2023-08-01' and '2023-08-16' 
and cl.type_pipeline in ('call_plan_customer','call_plan_leads')
--and cl.user_id = 6
group by cl.user_id , cl.schedule_date, ru.login, rc.name, rb.name
order by cl.user_id ,cl.schedule_date asc
	



---------------------------------------------------------------------------------------------------

--adhoc farmer

select 
	rc.name as KS, 
	rb.name as branch_name,
	ru.login ,
	cap.user_id , 
	cap.schedule_date , 
	count(cl_customer.id) as adhoc_customer,
	count(cl_lead.id) as adhoc_lead,
	count(cl_customer.id) + count(cl_lead.id) as total_adhoc,
	SUM(CASE WHEN cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as complete_customer,
	SUM(CASE WHEN cl_customer.status_crm_pipeline != 'close_and_complete' THEN 1 ELSE 0 END) as incomplete_customer,
	SUM(CASE WHEN cl_lead.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as complete_lead,
	SUM(CASE WHEN cl_lead.status_crm_pipeline != 'close_and_complete' THEN 1 ELSE 0 END) as incomplete_lead,
	SUM(CASE WHEN cl_customer.status_call = 'invalid' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as invalid_customer,
	SUM(CASE WHEN cl_customer.status_call = 'not_answer' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as not_answer_customer,
	SUM(CASE WHEN cl_customer.status_call = 'answer' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as answer_customer,
	SUM(CASE WHEN cl_customer.status_call = 'chat_only' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as chat_only_customer,
	SUM(CASE WHEN cl_lead.status_call = 'invalid' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as invalid_lead,
	SUM(CASE WHEN cl_lead.status_call = 'not_answer' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as not_answer_lead,
	SUM(CASE WHEN cl_lead.status_call = 'answer' and cl_customer.status_crm_pipeline = 'close_and_complete'THEN 1 ELSE 0 END) as answer_lead,
	SUM(CASE WHEN cl_lead.status_call = 'chat_only' and cl_customer.status_crm_pipeline = 'close_and_complete' THEN 1 ELSE 0 END) as chat_only_lead
--	SUM(CASE WHEN cl.status_crm_pipeline != 'close_and_complete' THEN 1 ELSE 0 END) as incomplete,
--	SUM(CASE WHEN cl.status_meet_visit = 'meet_customer' THEN 1 ELSE 0 END) as meet,
--	SUM(CASE WHEN cl.status_meet_visit != 'meet_customer' THEN 1 ELSE 0 END) as not_meet
from crm_adhoc_plan cap
left join crm_lead cl_customer on cap.schedule_date = cl_customer.schedule_date and cap.user_id = cl_customer.user_id and cap.partner_id = cl_customer.partner_id 
left join crm_lead cl_lead on cap.schedule_date = cl_lead.schedule_date and cap.user_id = cl_lead.user_id and cap.crm_lead_pool_id  = cl_lead.crm_lead_pool_id 
left join res_users ru on cap.user_id = ru.id
left join res_partner rp on cap.partner_id = rp.id
left join crm_lead_pool clp ON cap.crm_lead_pool_id = clp.id
left join res_branch rb on ru.branch_id = rb.id
left join master_company_mnf rc on rb.company_id = rc.id
where cap.schedule_date  between '2023-08-01' and '2023-08-16' and cap.type_pipeline in ('call_plan_customer','call_plan_leads')
and TO_CHAR((cap.create_date + INTERVAL '7 hours')::DATE, 'YYYY-MM-DD') = TO_CHAR(cap.schedule_date, 'YYYY-MM-DD')
group by cap.schedule_date, cap.user_id ,rc.name, rb.name,ru.login"
hYRfrieE,CodinGame_2023_08_25__18_42_06__up_to_lw_or_lw_to_up.cpp,MonsterScripter,C++,Friday 25th of August 2023 11:42:26 AM CDT,"#include <iostream>
#include <string>

using namespace std;

/**
 * Objectif :
 * Inverser une chaîne de caractères tout en conservant les majuscules/minuscules selon la chaîne originale.
 * Si un caractère à remplacer n'est pas une lettre, conserver la casse d'une lettre de substitution.
 *
 * Entrée :
 * Ligne 1 : Une chaîne de caractères d'entrée S
 *
 * Sortie :
 * Ligne 1 : La chaîne inversée avec les cas corrects
 *
 * Contraintes :
 * Aucune contrainte spécifiée dans l'exemple
 *
 * Exemple :
 * Entrée :
 * ABcd
 * Sortie :
 * DCba
 */

int main() {
    string s;
    getline(cin, s);
    for (int i = s.length() - 1; i >= 0; i--) {
        if (isupper(s[i])) {
            cout << (char)(s[i] + 32); // Convertir en minuscule tout en inversant
        } else if (islower(s[i])) {
            cout << (char)(s[i] - 32); // Convertir en majuscule tout en inversant
        } else {
            cout << s[i]; // Conserver les caractères non alphabétiques
        }
    }
    cout << endl;

    return 0;
}
"
jrhZtNs0,Battlefield: Vietnam 1.21 ergc registry fix,kolenos,Batch,Friday 25th of August 2023 11:41:20 AM CDT,"reg copy ""HKCU\Software\Classes\VirtualStore\MACHINE\SOFTWARE\WOW6432Mode\Electronic Arts"" ""HKLM\SOFTWARE\WOW6432Mode\Electronic Arts"" /s"
zbbrNMmF,CodinGame_2023_08_25__18_28_39__o_square.cpp,MonsterScripter,C++,Friday 25th of August 2023 11:28:53 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Crée un rectangle en fonction des paramètres de hauteur et de largeur spécifiés. Utilise la lettre ""O"" (sensible à la casse) comme caractère constituant le rectangle.
 * Entrée
 * Ligne 1 : La hauteur du rectangle.
 * Ligne 2 : La largeur du rectangle.
 * Sortie
 * Une chaîne de caractères qui affiche un rectangle.
 * Contraintes
 * 0 < hauteur < 100
 * 0 < largeur < 100
 * Exemple
 * Entrée
 * 2
 * 2
 * Sortie
 * OO
 * OO
 */
 
int main()
{
    int height;
    cin >> height; cin.ignore();
    int width;
    cin >> width; cin.ignore();

    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width; j++) {
            cout << ""O"";
        }
        cout << endl;
    }
}
"
G2C4ZPp1,LA 6929,inhuman_Arif,Java,Friday 25th of August 2023 11:18:04 AM CDT,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {
//        System.setIn(new FileInputStream(new File(""/home/arif/Documents/inout/input.txt"")));
//        System.setOut(new PrintStream(new File(""/home/arif/Documents/inout/output.txt"")));
        Scanner scanner = new Scanner(System.in);

        long[] arr = new long[30005];
        arr[1] = 1;
        for (int i=2;i<30002;i++)
            arr[i] = arr[i-1] + i;
//        System.out.println(arr[30001]);

        int tc = scanner.nextInt();
        while (tc-- >0) {
            long n = scanner.nextLong();
            long temp = n;
            while(temp%2==0)
                temp/=2;
            if(temp==1)
                System.out.println(""IMPOSSIBLE"");
            else {
                if (n%2==1)
                    System.out.println(n + "" = "" + n/2 + "" + "" + n/2 + 1);
                else {
                    int ind;
                    for (ind=2;ind<30002;ind++)
                        if ((n-arr[ind])%ind==0)
                            break;
                    long con = (n-arr[ind])/ind;
                    System.out.print(n + "" = "");
                    int i;
                    for (i=1;i<ind;i++)
                        System.out.print(i+con + "" + "");
                    System.out.println(i+con);
                }
            }
        }

        scanner.close();
    }
}"
KPiUcV0P,Chaos KillAura | Modify Version,YellowGreg,Lua,Friday 25th of August 2023 11:05:19 AM CDT,"if shared.settings then
    return
end

shared.settings = {
    killaura = true,
    maxdistance = 30,
    debugging = true,
}

local Players = game:GetService(""Players"")
local lp = Players.LocalPlayer or Players.LocalPlayerChanged:Wait()

local function getchar(plr)
    local character = plr.Character or plr.CharacterAdded:Wait()
    return character
end

local function gethumanoid(plr)
    local character = getchar(plr)
    return character:WaitForChild(""Humanoid"")
end

local function getDamageRemote()
    local character = getchar(lp)
    local tool = character:FindFirstChildWhichIsA(""Tool"")
    return tool and tool:FindFirstChild(""DamageRemote"")
end

local function GetClosestPlayer()
    local maxDistance = shared.settings.maxdistance
    local closestPlayer = nil
    local closestDistance = maxDistance

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= lp then
            local character = getchar(player)
            local basePart = character:FindFirstChildWhichIsA(""BasePart"")
            local humanoid = gethumanoid(player)
            
            if basePart and humanoid and humanoid.Health > 0 then
                local distance = lp:DistanceFromCharacter(basePart.Position)
                if distance <= maxDistance and distance < closestDistance then
                    closestPlayer = player
                    closestDistance = distance
                end
            end
        end
    end

    return closestPlayer, closestDistance
end

while shared.settings.killaura do
    local damageRemote = getDamageRemote()
    if damageRemote then
        local target, distance = GetClosestPlayer()
        if target then
            damageRemote:FireServer(gethumanoid(target))
            if shared.settings.debugging then
                warn(""Attacked"", target, ""from"", distance, ""studs away"")
            end
        end
    end
    task.wait()
end
"
zqkDFgpV,Literal bool evaluation in Python,bozhilov,Python,Friday 25th of August 2023 11:02:40 AM CDT,"def literal_bool_eval(value: Union[str, bool]) -> bool:
    """"""
        Python's bool() function converts values based on their truthiness.
        All non-empty strings are truthy values. Therefore, all environment variables loaded from an
        .env file will be converted to True even if they're defined as ""false"" | ""False"" .
    """"""

    if type(value) is bool:
        return value
    elif type(value) is str:
        value = value.lower().strip()

        if value == ""true"": 
            return True
        elif value == ""false"":
            return False
    
    raise Exception(""Invalid value provided. Expected a string representation of a boolean or a boolean value."")"
wkp2hcjA,coroutine.lua,Vapio,Lua,Friday 25th of August 2023 11:01:39 AM CDT,"local coroutine_first = nil
local coroutine_second = nil
 
local function caller_first() 
    print(""First coroutine"")
    coroutine.yield()
    print(""Starting second coroutine"")
    result_coroutine = coroutine_second()      
end
 
local function caller_second() 
    print(""Second coroutine"")
    
    print(""Starting first coroutine"")
    result_coroutine = coroutine_first()
        
end
 
function main()
    coroutine_first = coroutine.wrap(caller_first())
    print(""Test between wraps"")
    coroutine_second = coroutine.wrap(caller_second())
    result_coroutine = coroutine_first()       
end
 
main() "
A37nt1yf,BF,davegimo,Java,Friday 25th of August 2023 10:31:35 AM CDT,"import java.util.ArrayList;
import java.util.Arrays;

public class Ford {
    private int[][] adjacencyMatrix;

    public Ford(int totalNodes) {
        adjacencyMatrix = new int[totalNodes][totalNodes];
    }

    public void addConnection(int node1, int node2, int weight) {
        if (node1 >= 0 && node1 < adjacencyMatrix.length &&
            node2 >= 0 && node2 < adjacencyMatrix.length) {
            adjacencyMatrix[node1][node2] = weight;
            adjacencyMatrix[node2][node1] = weight;
        } else {
            System.out.println(""Invalid nodes"");
        }
    }

    public void printAdjacencyMatrix() {
        for (int i = 0; i < adjacencyMatrix.length; i++) {
            for (int j = 0; j < adjacencyMatrix[i].length; j++) {
                System.out.print(adjacencyMatrix[i][j] + "" "");
            }
            System.out.println();
        }
    }

    public void bellmanFord() {
        for (int sourceNode = 0; sourceNode < adjacencyMatrix.length; sourceNode++) {
            int[] distances = new int[adjacencyMatrix.length];
            Arrays.fill(distances, Integer.MAX_VALUE);
            distances[sourceNode] = 0;

            ArrayList<ArrayList<Integer>> shortestPaths = new ArrayList<>();
            for (int i = 0; i < adjacencyMatrix.length; i++) {
                shortestPaths.add(new ArrayList<>());
            }

            for (int i = 0; i < adjacencyMatrix.length - 1; i++) {
                for (int u = 0; u < adjacencyMatrix.length; u++) {
                    for (int v = 0; v < adjacencyMatrix.length; v++) {
                        if (adjacencyMatrix[u][v] != 0) {
                            if (distances[u] != Integer.MAX_VALUE && distances[u] + adjacencyMatrix[u][v] < distances[v]) {
                                distances[v] = distances[u] + adjacencyMatrix[u][v];
                                shortestPaths.get(v).clear();
                                shortestPaths.get(v).addAll(shortestPaths.get(u));
                                shortestPaths.get(v).add(v);
                            }
                        }
                    }
                }
            }

            System.out.println(""Shortest paths from node "" + sourceNode + "":"");
            for (int i = 0; i < distances.length; i++) {
                System.out.println(""Node "" + i + "": Distance = "" + distances[i] + "", Path = "" + shortestPaths.get(i));
            }
            System.out.println();
        }
    }

    public void bellmanFord_() {
        for (int sourceNode = 0; sourceNode < adjacencyMatrix.length; sourceNode++) {
            int[] distances = new int[adjacencyMatrix.length];
            Arrays.fill(distances, Integer.MAX_VALUE);
            distances[sourceNode] = 0;
    
            for (int i = 0; i < adjacencyMatrix.length - 1; i++) {
                for (int u = 0; u < adjacencyMatrix.length; u++) {
                    for (int v = 0; v < adjacencyMatrix.length; v++) {
                        if (adjacencyMatrix[u][v] != 0) {
                            if (distances[u] != Integer.MAX_VALUE && distances[u] + adjacencyMatrix[u][v] < distances[v]) {
                                distances[v] = distances[u] + adjacencyMatrix[u][v];
                            }
                        }
                    }
                }
            }
    
            System.out.println(""Shortest distances from node "" + sourceNode + "":"");
            for (int i = 0; i < distances.length; i++) {
                System.out.println(""Node "" + i + "": "" + distances[i]);
            }
            System.out.println();
        }
    }

    public void printMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + "" "");
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {

        Ford graph = new Ford(12);

        graph.addConnection(0, 1, 1);

        graph.addConnection(1, 11, 1);
        graph.addConnection(1, 5, 4);
        graph.addConnection(1, 4, 1);

        graph.addConnection(2, 8, 1);
        graph.addConnection(2, 5, 1);

        graph.addConnection(5, 6, 1);

        graph.addConnection(11, 8, 1);

        graph.addConnection(6, 3, 1);
        graph.addConnection(6, 4, 1);

        graph.addConnection(4, 7, 1);

        graph.addConnection(7, 9, 1);

        graph.addConnection(9, 10, 1);
        graph.addConnection(9, 3, 1);

        graph.addConnection(10, 3, 1);

        
        System.out.println();

        graph.bellmanFord();


    }

}


"
ZizYLtN7,Untitled,Goodevil95,Diff,Friday 25th of August 2023 10:11:48 AM CDT,"diff --git a/PKGBUILD b/PKGBUILD
index bbb12b4..15b59f2 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -11,10 +11,10 @@ pkgname=(
   ppsspp-git
   ppsspp-assets-git
 )
-pkgver=1.15.4.r562.04932d98a7
+pkgver=1.15.4.r1217.564c4b38bd
 pkgrel=1
 pkgdesc='A PSP emulator written in C++'
-arch=(x86_64)
+arch=(x86_64 aarch64)
 url=https://www.ppsspp.org/
 license=(GPL2)
 makedepends=(
@@ -97,7 +97,14 @@ build() {
   export CXX=clang++
   # Rebuild ffmpeg locally
   pushd ppsspp/ffmpeg
-  ./linux_x86-64.sh
+  case $CARCH in
+    x86_64)
+      ./linux_x86-64.sh
+      ;;
+    aarch64)
+      ./linux_arm64_native.sh
+      ;;
+  esac
   popd
   cmake -S ppsspp -B build-sdl -G Ninja \
     -Wno-dev \"
VAErCURS,Untitled,el1syum,Python,Friday 25th of August 2023 09:37:00 AM CDT,"from time import sleep
import requests
from bs4 import BeautifulSoup
from openpyxl import Workbook


def get_name(row):
    url = ''.join(map(lambda i: i.get('href'), row.find_all('a')))
    r = requests.get(url)
    soup = BeautifulSoup(r.text, 'html.parser')
    try:
        name = soup.find('div', string='Наименование').find_next('div').text.strip()
    except AttributeError:
        name = ''
        print(f'no name {r.url}')
    return name


# Функция для парсинга страницы и сохранения данных в Excel
def parse_page(next_response, ws):
    soup = BeautifulSoup(next_response.content, 'html.parser')
    table = soup.find('table').find('tbody')

    rows = table.findAll('tr')

    for row in rows:
        name = get_name(row)
        cells = row.findAll('td')
        data = []
        for cell in cells:
            data.append(cell.text.strip())
        data.append(name)
        ws.append(data)


def main():
    session = requests.Session()

    # Создаем объект Workbook для создания Excel файла
    wb = Workbook()
    # Активируем лист
    ws = wb.active

    url = 'https://www.rst.gov.ru/portal/gost/home/activity/compliance/evaluationcompliance/AcknowledgementCorrespondence/safetycertificate018?portal:componentId=ff119059-8bd4-47fc-95f6-a70de17a4b3e&portal:isSecure=false&portal:portletMode=view&navigationalstate=JBPNS_rO0ABXdgAAhwYWdlU2l6ZQAAAAEAAjIwAAdvcmRlckJ5AAAAAQAYZGF0ZW9maXNzdWVvZmNlcnRpZmljYXRlAARmcm9tAAAAAQABMAAFb3JkZXIAAAABAARERVNDAAdfX0VPRl9f'
    response = session.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    parse_page(response, ws)

    ccc = 0
    # Парсинг остальных страниц с помощью кнопки ""вперед""
    while ccc <= 2:
        next_button = soup.find('a', string='Вперед →')
        if next_button:
            next_page_url = next_button['href']
            next_response = session.get(next_page_url)

            sleep(0.6)
            try:
                parse_page(next_response, ws)
            except Exception as e:
                print(f'{next_response.url} - {next_response.status_code}\n{e}')
                continue
            soup = BeautifulSoup(next_response.content, 'html.parser')

            ccc += 1
            print(ccc)
        else:
            break

    # Сохраняем Excel файл
    wb.save('output.xlsx')


if __name__ == '__main__':
    main()
"
QtqKTBg5,Calculo serie armonica no aparece d,AntonioVillanueva,C,Friday 25th of August 2023 09:27:42 AM CDT,"/*
 * Antonio Villanueva Segura
 * Suma mas grande de series armonicas entre S0 y S9
 * donde d en Sd no aparezca en ningun momento de la serie armonica 
 */
#include <stdio.h>

int containsDigit(int number, int digit) {
    while (number > 0) {
        if (number % 10 == digit) {
            return 1;
        }
        number /= 10;
    }
    return 0;
}

double serieArmonicaSinD(int d,int max,int debug) {
    double sum = 0.0;
    int n = 1;
    
    if (debug) { printf (""S%d = {"",d);}
    while (n<max) {
        if (!containsDigit(n, d)) {
			 if (debug) { printf (""1/%d + "",n);}
            sum += 1.0 / n;
        }
        n++;
    }
    
    if (debug) { printf(""} \n"");}
    return sum;
}


int main() {
	int debug=1 ;//1 para graficar la serie
	int valores=35;//Numeros de valores a calcular 35 ejemplo 
	int serie=0;//Serie mas grande Sserie
	double mayor;//Resultado de la suma mayor
	
	
    for (int s=0 ;s<10;s++){
		double sum = serieArmonicaSinD(s,valores,debug);
		printf(""S%d= %lf\n"" ,s,sum);
		
		if (mayor <sum){
			serie=s;
			mayor=sum;
		}
	}
	
	printf (""Suma mas grande S%d= %lf \n"",serie,mayor); 
    
    return 0;
}"
SBmswrp6,WorkerThread.java,xXGoziXx,Java,Friday 25th of August 2023 09:22:54 AM CDT,"import java.util.ArrayList;

public class WorkerThread extends Thread {

    private final ArrayList<Integer> row;
    int sum;
    int min;
    int max;
    double average;

    public WorkerThread(ArrayList<Integer> drawers) {
        this.row = drawers;
    }

    @Override
    public void run() {
        // Your processing logic for each row
        // max, min, average, sum
        // sum
        sum = 0;

        // min
        min = row.get(0);

        // max
        max = row.get(0);

        // For each number in the row
        for (int num : row) {
            // Add the number to the sum
            sum += num;

            // Check if the number is the new min
            if (num < min) {
                min = num;
            }

            // Check if the number is the new max
            if (num > max) {
                max = num;
            }

        }

        // average = sum / length
        average = (double) sum / row.size();

        // try {
        // // Sleep for 1 seconds
        // Thread.sleep(1000);
        // } catch (InterruptedException e) {
        // e.printStackTrace();
        // }

        // Print out the results
        System.out.print(""Sum: "" + sum + "" | Min: "" + min + "" | Max: "" + max + "" | Average: "" + average + ""\n"");
    }

    public int getSum() {
        return sum;
    }

    public int getMin() {
        return min;
    }

    public int getMax() {
        return max;
    }

    public double getAverage() {
        return average;
    }
}"
YHWrfy6x,MultiThreadedProcessing.java,xXGoziXx,Java,Friday 25th of August 2023 09:22:20 AM CDT,"import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

public class MultiThreadedProcessing2 {

    public static void main(String[] args) throws IOException, InterruptedException {
        /****************
         * Start of generating numbers to file
         ***************************/
        // Use this code to generate the data in the ArrayList of drawers
        ArrayList<Integer>[] drawers = generateData();

        // To access the individual drawers use the drawers[index]
        // The following code allows you to get the size of each drawer
        for (int iCount = 0; iCount < drawers.length; iCount++) {
            System.out.println(drawers[iCount].size());
        }

        // To access the elements of a drawer use drawers[0][index]
        for (int iCount = 0; iCount < drawers[0].size(); iCount++) {
            // This prints the individual elements of drawer 0
            System.out.println(drawers[0].get(iCount));
        }
        /**************** End of generating numbers to file ***************************/

        // Create an ArrayList of WorkerThreads to store the threads
        ArrayList<WorkerThread> threads = new ArrayList<>();
        // For each row in the nested array
        for (int i = 0; i < drawers.length; i++) {
            // Create a new thread
            WorkerThread thread = new WorkerThread(drawers[i]);
            // Add the thread to the ArrayList
            threads.add(thread);
            thread.start(); // start processing this row
            thread.join(); // wait for the thread to finish processing
        }

        int sum = 0;
        int min = drawers[0].get(0);
        int max = drawers[0].get(0);
        double average = 0;

        try {
            // For each thread in the ArrayList
            for (WorkerThread thread : threads) {
                // wait for the thread to finish processing
                thread.join();

                // sum
                sum += thread.getSum();

                // min
                if (thread.getMin() < min) {
                    min = thread.getMin();
                }

                // max
                if (thread.getMax() > max) {
                    max = thread.getMax();
                }

                // average
                average += thread.getAverage();
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        // total average
        average /= threads.size();

        // Print out the results
        System.out.print(""Grand Sum: "" + sum + "" | Grand Min: "" + min + "" | Grand Max: "" + max
                + "" | Grand Average: "" + average + ""\n"");
    }

    public static ArrayList[] generateData() {
        ArrayList<Integer>[] drawers = new ArrayList[10];
        Random randomObject = new Random();
        for (int iCount = 0; iCount < 10; iCount++) {
            // Generates 10000 random integer numbers between -10,000 and 10,000

            int[] iMyIntegerNumbers = randomObject.ints(10000, -10000, 10000).toArray();
            drawers[iCount] = new ArrayList<Integer>();
            for (int jCount = 0; jCount < iMyIntegerNumbers.length; jCount++) {
                drawers[iCount].add(iMyIntegerNumbers[jCount]);
            }
        }
        return drawers;
    }

    // Part 2
    public static void writeToFile(String fileName, String output) {
        // create a new file
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
            // System.out.println(output);
            // write the output to the file
            bw.write(output);
        } catch (IOException e) {
            System.out.println(""Error writing to file: "" + e.getMessage());
        }
    }
}"
