id,title,username,language,date,content
MPYPnnms,Lua,__blueandred__,Lua,Sunday 5th of November 2023 11:44:22 PM CDT,Dfdrfdtdr
PujKYXEv,snowybot,coinwalk,JavaScript,Sunday 5th of November 2023 10:34:21 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 100;
var changer = (divide/7);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var fart = 1;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
var oldbolancetwo = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    fart = 0;
    oldbolance = parseFloat(bolance);
}
if ((bolance>=(oldbolancetwo+(groupedten*fart)))&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 1;   
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
    oldbolancetwo = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(bolance<oldbolancetwo)&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(bolance<oldbolancetwo)&&(floatingbase>base)&&(bolance>(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base*2;
    fart = 0;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_hi').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();"
c1q2dDvC,tanqueIndicador,danieldelarosa,HTML 5,Sunday 5th of November 2023 10:17:46 PM CDT,"<!DOCTYPE html>
<html>
<head>
  <style>
    .tank-container {
      width: 400px;
      height: 400px;
      display: flex;
      flex-direction: row; /* Cambio a dirección de fila para colocar los indicadores al lado */
      align-items: flex-start; /* Alinear al principio */
      justify-content: space-between; /* Espacio entre los elementos */
    }

    .tank {
      width: 200px;
      height: 300px;
      position: relative;
      border: 5px solid #000;
      border-top: 0;
      border-radius: 10px;
      overflow: hidden;
      z-index: 1;
      clip-path: polygon(0 0, 100% 0, 100% 90%, 50% 100%, 0 90%); /* Destapa la parte inferior */
    }

    .water-level {
      width: 100%;
      position: absolute;
      bottom: 0;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;
      transition: background-color 2s; /* Transición para el cambio de color */
      clip-path: polygon(0 0, 100% 0, 100% 90%, 50% 100%, 0 90%); /* Destapa la parte inferior */
    }

    .indicators {
      display: flex;
      flex-direction: column-reverse; /* Invertir el orden de los indicadores */
      justify-content: space-between;
      margin-left: 20px; /* Mover los indicadores a la izquierda */
    }

    .indicator {
      text-align: center;
      font-weight: bold;
      position: relative; /* Cambio a posición relativa */
      left: 10px; /* Ajustar la posición horizontal */
      margin: 16px 0; /* Agregar margen vertical para separar los indicadores */
    }

    /* Estilos para los indicadores (en orden normal) */
    .indicator:nth-child(1) { color: green; } /* Nivel 1 (0-30 cm) */
    .indicator:nth-child(2) { color: blue; } /* Nivel 2 (30-60 cm) */
    .indicator:nth-child(3) { color: cyan; } /* Nivel 3 (60-90 cm) */
    .indicator:nth-child(4) { color: lightblue; } /* Nivel 4 (90-120 cm) */
    .indicator:nth-child(5) { color: #3498db; } /* Nivel 5 (120-150 cm) */
  </style>
</head>
<body>
  <div class=""tank-container"">
    <div class=""tank"">
      <div class=""water-level"" style=""height: {{level * 20}}%;"">{{level * 20}}%</div>
    </div>
    <div class=""indicators"">
      <div class=""indicator"">Nivel 1 (0-30 cm)</div>
      <div class=""indicator"">Nivel 2 (30-60 cm)</div>
      <div class=""indicator"">Nivel 3 (60-90 cm)</div>
      <div class=""indicator"">Nivel 4 (90-120 cm)</div>
      <div class=""indicator"">Nivel 5 (120-150 cm)</div>
    </div>
  </div>

  <script>
    const waterLevel = document.querySelector('.water-level');

    // Función para actualizar el nivel de agua y el color del tanque
    function updateWaterLevel(level) {
      const waterHeight = (level / 5) * 100;
      waterLevel.style.height = waterHeight + '%';

      // Cambiar el color del tanque y el texto del indicador según el nivel
      if (level === 1) {
        waterLevel.style.backgroundColor = 'green';
      } else if (level === 2) {
        waterLevel.style.backgroundColor = 'blue';
      } else if (level === 3) {
        waterLevel.style.backgroundColor = 'cyan';
      } else if (level === 4) {
        waterLevel.style.backgroundColor = 'lightblue';
      } else {
        waterLevel.style.backgroundColor = '#3498db'; // Nivel 5 (azul claro)
      }

      const indicators = document.querySelectorAll('.indicator');
      indicators.forEach((indicator, index) => {
        if (index + 1 === level) {
          indicator.style.color = waterLevel.style.backgroundColor;
        } else {
          indicator.style.color = 'black';
        }
      });
    }

    // Simular un cambio de nivel (colorear el tanque)
    let currentLevel = 1;
    updateWaterLevel(currentLevel); // Inicialmente, establece el nivel en 1
    setInterval(() => {
      currentLevel = currentLevel % 5 + 1;
      updateWaterLevel(currentLevel);
    }, 2000);
  </script>
</body>
</html>
"
cdjAzMCj,Recovery Files...,Rnery,Bash,Sunday 5th of November 2023 08:38:18 PM CDT,"#!/usr/bin/env bash

check_root() {
  if [ ""$EUID"" -ne 0 ]; then
    echo ""This script must be run as root (superuser).""
    exit 1
  fi
}

# Check if the 'extundelete' utility is installed
check_extundelete() {
  if ! command -v extundelete > /dev/null; then
    echo ""The 'extundelete' utility is not installed. Please install it before proceeding.""
    exit 1
  fi
}

# Recover a deleted file
recover_file() {
  local file_to_recover=""$1""
  local device=""/dev/sdXY""  # Replace with the appropriate device

  extundelete --restore-file ""$file_to_recover"" --device ""$device""
  local exit_code=$?

  if [ $exit_code -eq 0 ]; then
    echo ""File successfully recovered: $file_to_recover""
  else
    echo ""File recovery failed. Please verify the file name and device, and ensure the file has not been overwritten.""
  fi
}

main() {
  check_root
  check_extundelete

  if [ $# -ne 1 ]; then
    echo ""Usage: $0 <file_to_recover>""
    exit 1
  fi

  file_to_recover=""$1""
  recover_file ""$file_to_recover""
}

main
"
PCjHicCu,Controller,Anukun_Lucifer,Lua,Sunday 5th of November 2023 08:10:46 PM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")
local runservice = game:GetService(""RunService"")
local userinputservice = game:GetService(""UserInputService"")

local events = replicatedstorage:WaitForChild(""Events"")
local tower = replicatedstorage:WaitForChild(""Towers"")
local spawntowerevent = events:WaitForChild(""SpawnTower"")
local camera = workspace.CurrentCamera
local gui = script.Parent

local towertospawn = nil
local canplace = false
local rotation = 0

local function MouseRaycast(blacklist)
	local mouseposition = userinputservice:GetMouseLocation()
	local mouseray = camera:ViewportPointToRay(mouseposition.X,mouseposition.Y)
	local raycastparams = RaycastParams.new()

	raycastparams.FilterType = Enum.RaycastFilterType.Blacklist
	raycastparams.FilterDescendantsInstances = blacklist

	local raycastresult = workspace:Raycast(mouseray.Origin,mouseray.Direction*1000, raycastparams)

	return raycastresult
end

local function RemoveOlaceholderTower()
	if towertospawn then
		towertospawn:Destroy()
		towertospawn = nil
	end
end

local function AddPlaceholderTower(name)
	local towerExists = tower:FindFirstChild(name)
	if towerExists then
		RemoveOlaceholderTower()
		towertospawn = towerExists:Clone()
		towertospawn.Parent = workspace.Grassland.Tower

		for i, object in ipairs(towertospawn:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
				object.Material = Enum.Material.ForceField
			end
		end
	end
end

local function ColorPlanceholderTower(color)
	for i, object in ipairs(towertospawn:GetDescendants()) do
		if object:IsA(""BasePart"") then
			object.Color = color
		end
	end
end

gui.TVManSpawn.Activated:Connect(function()
	AddPlaceholderTower(""TVman"")
end)

userinputservice.InputBegan:Connect(function(input, processed)
	if processed then
		return
	end

	if towertospawn then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			if canplace then
				spawntowerevent:FireServer(towertospawn.Name, towertospawn.PrimaryPart.CFrame)
				RemoveOlaceholderTower()
			end
		elseif input.KeyCode == Enum.KeyCode.R then
			rotation += 90
		end
	end

end)

runservice.RenderStepped:Connect(function()
	if towertospawn then
		local result = MouseRaycast({towertospawn})
		if result and result.Instance then
			if result.Instance.Parent.Name == ""TowerArea"" then
				canplace = true
				ColorPlanceholderTower(Color3.new(0,1,0))
			else
				canplace = false
				ColorPlanceholderTower(Color3.new(1,0,0))
			end
			local x = result.Position.X
			local y = result.Position.Y + towertospawn.Humanoid.HipHeight + 4
			local z = result.Position.Z

			local cframe = CFrame.new(x,y,z) *CFrame.Angles(0,math.rad(rotation),0)
			towertospawn:SetPrimaryPartCFrame(cframe)
		end
	end
end)"
pfbMJFXw,TowerScript,Anukun_Lucifer,Lua,Sunday 5th of November 2023 08:09:29 PM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local serverstorage = game:GetService(""ServerStorage"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")

local events = replicatedstorage:WaitForChild(""Events"")
local spawntowerevent = events:WaitForChild(""SpawnTower"")

local tower = {}

function tower.Spawn(player, name, cframe)
	local towerExists = replicatedstorage.Towers:FindFirstChild(name)

	if towerExists then
		local newTower = towerExists:Clone()
		newTower.HumanoidRootPart.CFrame = cframe
		newTower.Parent = workspace.Grassland.Tower
		newTower.HumanoidRootPart:SetNetworkOwner(nil)

		for i, object in ipairs(newTower:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
			end
		end
	else
		warn(""Requested mob dose not exist"",name)
	end
end

spawntowerevent.OnServerEvent:Connect(tower.Spawn)

return tower"
1yVQtSEA,MainScript,Anukun_Lucifer,Lua,Sunday 5th of November 2023 08:03:46 PM CDT,"local mob = require(script.MobScript )
local tower = require(script.TowerScript)
local map = workspace.Grassland

for wave = 1,10 do
	if wave <= 2 then
		mob.Spawn(""Cameraman"",5 * wave,map)
		mob.Spawn(""Zombie"", 3 * wave, map)
	elseif wave <= 5 then
		for i = 1,5 do
			mob.Spawn(""Cameraman"",wave,map)
			mob.Spawn(""Zombie"", wave, map)
			mob.Spawn(""Naruto"", 3, map)
		end
	elseif wave <=9 then
		mob.Spawn(""Cameraman"",wave,map)
		mob.Spawn(""Zombie"", wave, map)
		for i= 1,5 do
			mob.Spawn(""Cameraman"",5*(wave*0.5),map)
			mob.Spawn(""Naruto"", 2 *(wave*0.5), map)
		end
	elseif wave == 10 then
		mob.Spawn(""Cameraman"",100,map)
	end
	
	repeat
		task.wait(1)
	until #map.Mob:GetChildren() == 0
	task.wait(1)
end"
FjxDN0gB,Office 2024 preview,FHWWCTeam,XML,Sunday 5th of November 2023 07:21:09 PM CDT,"Key          : GNXWX-DF797-B2JT3-82W27-KHPXT
Description  : Office24_ProPlus2024PreviewVL_MAK_AE
Error Code   : Preview Key(999999)
Check Time   : 2023/11/06 08:54:19（UTC+8）

Key          : X86XX-N3QMW-B4WGQ-QCB69-V26KW
Description  : Office24_ProjectPro2024PreviewVL_MAK_AE
Error Code   : Preview Key(999999)
Check Time   : 2023/11/06 08:59:41（UTC+8）

Key          : DW99Y-H7NT6-6B29D-8JQ8F-R3QT7
Description  : Office24_VisioPro2024PreviewVL_MAK_AE
Error Code   : Preview Key(999999)
Check Time   : 2023/11/06 08:57:50（UTC+8）"
x5cpWQkL,521MobileUpdate,FreedTV,JSON,Sunday 5th of November 2023 07:15:55 PM CDT,"{
  ""code"": 20,
  ""name"": ""0.2.0"",
  ""desc"": ""同步\n内置浏览器功能支持推送阿里云盘资源\n打开京东APP搜索 “粉丝福利754”领大红包每日三次"",
""downloadUrl"":""https://www.baidu.com""
}"
DqPYXg7f,Wheely For Google Sites,Minix07,HTML,Sunday 5th of November 2023 07:05:29 PM CDT,"<script src=""https://unpkg.com/@ruffle-rs/ruffle""></script>

<div class=""swf""dir=""ltr"" style=""text-align: left;"" trbidi=""on"">
        <embed height=""480"" pluginspage="" http://www.macromedia.com/go/getflashplayer"" src=""https://minix07.github.io/Wheely/607231_Wheely.swf"" type=""application/x-shockwave-flash"" width=""620""></embed>
</div>"
s2SR38MS,snowybot foreverbot,coinwalk,JavaScript,Sunday 5th of November 2023 06:39:25 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 1000;
var changer = (divide/7);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(originalbal-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(originalbal-(floatingbase*changer)))&&(floatingbase>base)&&(bolance>(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(bolance-(floatingbase*changer)))&&(floatingbase>base)&&(bolance>(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();
"
08yW9PzH,OpenMP Labs,Alexwei88,C++,Sunday 5th of November 2023 06:34:49 PM CDT,"// Лаба 3

#include <stdio.h>
#include <omp.h>

int main()
{
    #ifdef _OPENMP
        printf(""OpenMP is supported!\n"");
    #endif

    int count, num;

    printf(""Последовательная область 1\n"");

    #pragma omp parallel
        {
        printf(""Параллельная область\n"");
        }

    printf(""Последовательная область 2\n"");

    #pragma omp parallel
        {
        count=omp_get_num_threads();
        num=omp_get_thread_num();
        printf(""Нить номер %d Всего нитей: %d\n"", num, count);
        }

        omp_set_num_threads(2);
        #pragma omp parallel num_threads(3)
            {
            printf(""Параллельная область 1\n"");
            }
        #pragma omp parallel
            {
            printf(""Параллельная область 2\n"");
            }
}

// Лаба 4

#include <stdio.h>
#include <omp.h>
#include <iostream>

using namespace std;

int main()
{
    // // 4a
    // int count = 0;
    // #pragma omp parallel reduction (+: count)
    // {
    //     count++;
    //     printf(""Текущее значение count: %d\n"", count);
    // }
    // printf(""Число нитей: %d\n"", count);

    // // 18a
    // int A[10], B[10], C[10], i, n;
    
    // for (i=0; i<10; i++){ A[i]=i; B[i]=2*i; C[i]=0; }

    // #pragma omp parallel shared(A, B, C) private(i, n)
    // {
        
    //     n=omp_get_thread_num();

    //     #pragma omp for
    //     for (i=0; i<10; i++)
    //     {
    //         C[i]=A[i]+B[i];
    //         printf(""Нить %d сложила элементы с номером %d\n"", n, i);
    //     }
    // }

    // Task 1.1
    int sum = 0;
    int arr[30];
    for (int i=0; i<30; i++) arr[i] = 1; 
    #pragma omp parallel shared(arr)
    {
        #pragma omp for
        for (int i = 0; i < 30; i++) sum += arr[i];
    }
    cout << sum << endl;

    // Task 1.2
    sum = 0;
  
    #pragma omp parallel shared(arr)  reduction(+: sum)
    {
        #pragma omp for
        for (int i = 0; i < 30; i++) sum += arr[i];
    }
    cout << sum << endl;

    // Task 2
    sum = 0;
    #pragma omp parallel
    {
        int local_sum = 0;

        #pragma omp for
        for (int i = 0; i < 30; i++) local_sum += arr[i];

        #pragma omp atomic
        sum += local_sum;
    }
    cout << sum << endl;

    // Task 3
    sum = 0;
    #pragma omp parallel
    {

        #pragma omp for
        for (int i = 0; i < 30; i++){

            #pragma omp critical
            {
                sum += arr[i];
            }
        }
        
    }
    cout << sum << endl;
}

// Лаба 5

#include <stdio.h>
#include <omp.h>

int main()
{
    double st, fn;
    int v_1[1000000], v_2[1000000];

    for(int i = 0; i < 1000000; i++){
        v_1[i] = 2;
        v_2[i] = 3;
    }

    for(int n = 1; n <= 10; n++){

        int sum = 0;

        st = omp_get_wtime();

        #pragma omp parallel shared(v_1, v_2) num_threads(n) reduction(+: sum)
        {

            #pragma omp for
            for (int i = 0; i < 1000000; i++)
            {
                    sum += v_1[i]*v_2[i];
            }
            
        }

        fn = omp_get_wtime();

        printf(""Количество нитей: %d, Время: %f, Сумма: %d\n"", n, (fn-st), sum);
    }
    
}

// Лаба 6

#include <stdio.h>
#include <omp.h>
#include <iostream>

int main()
{
    double st, fn;
    int v[1000000];

    for(int i = 0; i < 1000000; i++) v[i] = rand();

    for(int n = 1; n <= 10; n++){

        st = omp_get_wtime();

        int max_el = -1;

        #pragma omp parallel shared(v) num_threads(n) 
        {
            int local_max = -1;

            #pragma omp for
            for (int i = 0; i < 1000000; i++)
            {
                if (local_max < v[i]){
                    local_max = v[i];
                }
            }

            #pragma omp critical
            {
                if (max_el < local_max){
                    max_el = local_max;
                }
            }
            
        }

        fn = omp_get_wtime();

        printf(""Количество нитей: %d, Время: %f, Макс: %d\n"", n, (fn-st), max_el);
    }
    
}

// Лаба 7

#include <stdio.h>
#include <omp.h>
#include <iostream>

int main()
{
    double st, fn;


    int n = 1000000000;

    double pi = 0.0;

    st = omp_get_wtime();

    #pragma omp parallel num_threads(1) reduction(+: pi)
    {
        #pragma omp for
        for (int i = 0; i < n; i++){
            pi += 4 / ((1 + ( (i + 0.5) * (i + 0.5) / n / n))*n);
        }
    }

    fn = omp_get_wtime();

    printf(""Количество нитей: 1, Время: %f, Pi: %.8f\n"", (fn-st), pi);

    pi = 0.0;

    st = omp_get_wtime();

    #pragma omp parallel num_threads(8) reduction(+: pi)
    {
        #pragma omp for
        for (int i = 0; i < n; i++){
            pi += 4 / ((1 + ( (i + 0.5) * (i + 0.5) / n / n))*n);
        }
    }

    fn = omp_get_wtime();

    printf(""Количество нитей: 8, Время: %f, Pi: %.8f\n"", (fn-st), pi);
    
}

// Лаба 8

#include <stdio.h>
#include <omp.h>
#include <iostream>

int main()
{
    double st, fn, t1;

    int n = 800;

    int m_1[n][n]; 
    int m_2[n][n];
    int res[n][n];

    for (int i = 0; i < n; i++){
        for (int j = 0; j < n; j++){
            m_1[i][j] = 2;
            m_2[i][j] = 3;
            res[i][j] = 0;
        }
    }

    for(int n = 1; n <= 10; n++){

        st = omp_get_wtime();

        for (int i = 0; i < 800; i++){
            for (int j = 0; j < 800; j++){
                res[i][j] = 0;
            }
        }

        #pragma omp parallel shared(m_1, m_2, res, t1) num_threads(n) 
        {

            #pragma omp for collapse(3)
            for (int i = 0; i < 800; i++){
                for (int j = 0; j < 800; j++){
                    for (int k = 0; k < 800; k++){
                        #pragma omp atomic
                        res[i][j] +=  m_1[i][k] * m_2[k][j];
                    }
                }
            }
            
        }

        fn = omp_get_wtime();

        if (n == 1){
            t1 = fn-st;
        }

        printf(""Количество нитей: %d, Время: %f, Эффективность: %f\n"", n, (fn-st), t1/(fn-st));

    }
    
    
}"
G5501u83,omg omg omg snowybot rocks,coinwalk,JavaScript,Sunday 5th of November 2023 06:32:49 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 1000;
var changer = (divide/7);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2000);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(originalbal-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(originalbal-(floatingbase*changer)))&&(floatingbase>base)&&(bolance>(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base*2;
    over = 4.9;
    under = 4.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(floatingbase>base)&&(bolance>(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base*2;
    over = 4.9;
    under = 4.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();
"
id9MM5uR,KjCxpalot's Data,azimuths,JSON,Sunday 5th of November 2023 06:30:11 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""22""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""e""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""1035""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Knee Strike""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dosaku""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Primary Lotus""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""3189""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""27""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""178""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Morning Peacock""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""143""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""58""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Feral Pounce""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""50""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""3239""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""78234551""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1699228958""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""g""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Fang over Fang""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""High Powered Chop""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wipedown""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1065""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""h""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kj(42)1304154""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-23""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""x""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""21""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Flip""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""545""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""3745""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Eight Gates""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""73""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""386""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""1146""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""z""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-14""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""16""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sp. Jounin""}},""Skilltree"":{""Primary Lotus"":{""ObjectName"":""Primary Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Feral Pounce"":{""ObjectName"":""Feral Pounce"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""High Powered Chop"":{""ObjectName"":""High Powered Chop"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Flip"":{""ObjectName"":""Demon Flip"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scent"":{""ObjectName"":""Scent"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gates Mastery"":{""ObjectName"":""Gates Mastery"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Knee Strike"":{""ObjectName"":""Knee Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Fang over Fang"":{""ObjectName"":""Fang over Fang"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dosaku"":{""ObjectName"":""Dosaku"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of View"":{""ObjectName"":""Gate of View"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Eight Gates"":{""ObjectName"":""Eight Gates"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of Limit"":{""ObjectName"":""Gate of Limit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of Wonder"":{""ObjectName"":""Gate of Wonder"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Morning Peacock"":{""ObjectName"":""Morning Peacock"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Reverse Lotus"":{""ObjectName"":""Reverse Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
bbNeV0em,6Skooks's Data,azimuths,JSON,Sunday 5th of November 2023 06:26:09 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Byakugan""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Cherry Blossom Impact""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""35""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Medical Ninjutsu""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Eight Gates""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""74""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""x""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""295""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Flak""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""100""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Palm Rotation""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""1498293602""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1699225686""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Air Palm""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Clone Jutsu""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""SAKURA""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1090""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""1335""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""KYLER(37)69779""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-24""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""c""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""238""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Scalpel""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""1607""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""27""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""416""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""89""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Z""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Byakugan""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""23""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sp. Jounin""}},""Skilltree"":{""Chakra Transfer"":{""ObjectName"":""Chakra Transfer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer 2"":{""ObjectName"":""Chakra Transfer 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Scalpel"":{""ObjectName"":""Chakra Scalpel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Self Heal"":{""ObjectName"":""Self Heal"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu"":{""ObjectName"":""Medical Ninjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Palm Rotation"":{""ObjectName"":""Palm Rotation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Strength"":{""ObjectName"":""Enhanced Strength"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""64 Palms"":{""ObjectName"":""64 Palms"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 5"":{""ObjectName"":""Medical Ninjutsu 5"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Cherry Blossom Impact"":{""ObjectName"":""Cherry Blossom Impact"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 3"":{""ObjectName"":""Medical Ninjutsu 3"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Self Heal 2"":{""ObjectName"":""Self Heal 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Air Palm"":{""ObjectName"":""Air Palm"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Byakugan"":{""ObjectName"":""Byakugan"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 2"":{""ObjectName"":""Medical Ninjutsu 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gentle Fist"":{""ObjectName"":""Gentle Fist"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 4"":{""ObjectName"":""Medical Ninjutsu 4"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Movement"":{""ObjectName"":""Enhanced Movement"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Heaven Spear Kick"":{""ObjectName"":""Heaven Spear Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
jRKXiDR2,mazstuh's Data,azimuths,JSON,Sunday 5th of November 2023 06:25:48 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""1551""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""15""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Medical Ninjutsu""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sand Fists""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""381""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""123""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""-141""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sand Swipe""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""188""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""240""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sand Spears""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""222""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4372""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""3985958202""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1699227713""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""172""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Flak""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sand Tsunami""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sand Coffin""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""561""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""JayHound""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""860""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""244""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""JayHound(11)969560""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""totem(20)2942799""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-20""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""121""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Scalpel""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Cherry Blossom Impact""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""17""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""351""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""1005""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""3499""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""dee5(39)2072020""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Jounin""}},""Skilltree"":{""Sand Swipe"":{""ObjectName"":""Sand Swipe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer"":{""ObjectName"":""Chakra Transfer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer 2"":{""ObjectName"":""Chakra Transfer 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Sand Spears"":{""ObjectName"":""Sand Spears"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Scalpel"":{""ObjectName"":""Chakra Scalpel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Movement"":{""ObjectName"":""Enhanced Movement"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu"":{""ObjectName"":""Medical Ninjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Strength"":{""ObjectName"":""Enhanced Strength"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Cherry Blossom Impact"":{""ObjectName"":""Cherry Blossom Impact"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Sand Coffin"":{""ObjectName"":""Sand Coffin"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 3"":{""ObjectName"":""Medical Ninjutsu 3"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Sand Fists"":{""ObjectName"":""Sand Fists"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 2"":{""ObjectName"":""Medical Ninjutsu 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 4"":{""ObjectName"":""Medical Ninjutsu 4"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Sand Tsunami"":{""ObjectName"":""Sand Tsunami"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Heaven Spear Kick"":{""ObjectName"":""Heaven Spear Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
UdUaJFKe,Урок 3: Тестируем по плану Задание 1 / Спринт 2,prizrak567890,C++,Sunday 5th of November 2023 06:25:34 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm> 

using namespace std;

bool IsPalindrome(const string& text) {
    string textx = text;
    vector<string>words;
    string word;
    for (int i = 0; textx.size() > i;) {

        if (textx[i] == ' ') {
            textx.erase(0, 1);
        }
        else {
            break;
        }
        ++i;
    }
    int textxs = textx.size(); // только для тренажёра он ругается на if(textx.size() <= 0)
    if (textxs >= 0) {


        for (int i = 0; i < textx.size();) {

            if (textx[i] == ' ') {
                words.push_back(word);
                word.erase();
            }
            else {
                word.push_back(textx[i]);
            }
            ++i;
            if (textx.size() == i && textx[i]!= ' ') {
                words.push_back(word);
                word.erase();
            }
        }
    }
    string allrev;

    for (auto s : words) {
        allrev = allrev + s;
    }
    word = allrev;
    reverse(allrev.begin(), allrev.end());
    if (word == allrev) {
        return true;
    }

    return false;
}

int main() {

    
    string text;
    getline(cin, text);

    if (IsPalindrome(text)) {
        cout << ""palindrome""s << endl;
    }
    else {
        cout << ""not a palindrome""s << endl;
    }
    
}"
ckdZjVEw,KingChestahXVI's Data,azimuths,JSON,Sunday 5th of November 2023 06:23:32 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""756""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Scalpel""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""3064""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""219""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""47""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Pushup Training""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""233""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""44""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""64 Palms""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""41""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-20""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""86822863""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1699210684""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""252""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Medical Ninjutsu""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Enhanced Movement""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""561""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Remy""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""852""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""55""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""33""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Remy(2)11903""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-18""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""233""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Palm Rotation""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Air Palm""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Byakugan""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""18""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""17""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-120""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Pushup Training\"",\""Kunai Training\"",\""Block Training\""]""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""347""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""157""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Byakugan""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""4000""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""4667""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""18""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""14""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sp. Jounin""}},""Skilltree"":{""Chakra Transfer"":{""ObjectName"":""Chakra Transfer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gentle Fist"":{""ObjectName"":""Gentle Fist"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer 2"":{""ObjectName"":""Chakra Transfer 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Byakugan"":{""ObjectName"":""Byakugan"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Movement"":{""ObjectName"":""Enhanced Movement"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu"":{""ObjectName"":""Medical Ninjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Palm Rotation"":{""ObjectName"":""Palm Rotation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Strength"":{""ObjectName"":""Enhanced Strength"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Scalpel"":{""ObjectName"":""Chakra Scalpel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 2"":{""ObjectName"":""Medical Ninjutsu 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""64 Palms"":{""ObjectName"":""64 Palms"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 3"":{""ObjectName"":""Medical Ninjutsu 3"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Air Palm"":{""ObjectName"":""Air Palm"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Heaven Spear Kick"":{""ObjectName"":""Heaven Spear Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
Lh3gEWhL,Answers rather than guidance,sintrode,Batch,Sunday 5th of November 2023 06:20:57 PM CDT,"@echo off
set /p ""directory=Results directory: ""
if exist ""%directory%"" (
	echo %computername% >""%directory%\comp-name.txt""
	net time \\%computername% >""%directory%\start-time.txt""
	net user >""%directory%\users.txt""
	whoami >""%directory%\whoami.txt""
	tasklist >""%directory%\tasklist.txt""
	echo Program complete
) else (
	echo Output directory not found
)

REM ----------------------------------------------------------------------------
REM  EXPLANATIONS
REM ----------------------------------------------------------------------------
REM Line 01: While having echo set to On is good for debugging, you can turn it
REM          off once the script is working. Also, capitalization of commands
REM          should be consistent throughout the script.
REM Line 02: /p is needed for getting user input, and the opening double quote
REM          ideally goes to the left of the variable name for consistency with
REM          regular set commands.
REM Line 03: The `not` is unnecessary, as the first code block should be running
REM          if the directory DOES exist. Also, %directory% should have quotes
REM          around it in case the value contains a space.
REM Lines 04-09: Paths to files should be wrapped in quotes in case the values
REM              contain spaces. You may also want to consider explicitly
REM              saving the files as .txt files since Windows is weird about
REM              opening files that don't have extensions.
REM Line 05: > is used for outputting to a file, < is used for inputting from
REM          a file. 
REM Line 10: The closing parenthesis of the first code block, the else command,
REM          and the opening parenthesis of the second code block all need to
REM          be on the same line in order for the command to not throw an error.
REM          Also, refer to the Line 01 comment about consistent capitalization.

REM ----------------------------------------------------------------------------
REM  OTHER COMMENTS
REM ----------------------------------------------------------------------------
REM * It is generally not a good idea to reuse command names, so renaming the
REM   whoami and tasklist output files to something else is recommended.
REM * Code inside of parentheses (""code blocks"") should be indented to
REM   distinguish it from code outside of the code blocks.
"
rZCgEYGy,2023-11-05_stats.json,rdp_snitch,JSON,Sunday 5th of November 2023 06:18:22 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 12,
    ""103.232.53.123"": 93,
    ""62.122.184.168"": 12,
    ""106.116.169.71"": 6,
    ""172.188.48.214"": 3,
    ""141.98.81.34"": 3,
    ""198.235.24.236"": 9,
    ""45.227.254.55"": 6,
    ""34.221.234.39"": 3,
    ""87.251.75.64"": 3,
    ""87.251.75.145"": 6,
    ""212.70.149.146"": 15,
    ""167.94.145.59"": 3,
    ""185.170.144.3"": 6,
    ""89.248.170.88"": 3,
    ""71.251.204.33"": 3,
    ""87.251.75.120"": 3,
    ""45.130.83.51"": 3,
    ""103.245.237.254"": 3,
    ""198.235.24.239"": 9,
    ""51.107.22.213"": 30,
    ""45.227.254.54"": 6,
    ""62.204.41.146"": 9,
    ""51.75.160.42"": 12,
    ""111.61.253.55"": 3,
    ""152.32.243.98"": 3,
    ""205.210.31.69"": 9,
    ""162.142.125.226"": 3,
    ""45.227.254.8"": 6,
    ""103.167.91.133"": 12,
    ""198.235.24.82"": 9
  },
  ""asn"": {
    ""AS57523"": 24,
    ""AS63737"": 105,
    ""AS4134"": 6,
    ""AS8075"": 33,
    ""AS209588"": 3,
    ""AS396982"": 36,
    ""AS267784"": 18,
    ""AS16509"": 3,
    ""AS208091"": 12,
    ""AS204428"": 15,
    ""AS398705"": 3,
    ""AS197414"": 6,
    ""AS202425"": 3,
    ""AS701"": 3,
    ""AS206092"": 3,
    ""AS150867"": 3,
    ""AS59425"": 9,
    ""AS16276"": 12,
    ""AS24547"": 3,
    ""AS135377"": 3,
    ""AS398324"": 3
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 24,
    ""VIETSERVER"": 93,
    ""Chinanet"": 6,
    ""Microsoft"": 33,
    ""Flyservers S.A."": 21,
    ""Google LLC"": 36,
    ""Amazon.com, Inc."": 3,
    ""Xhost Internet Solutions LP"": 18,
    ""SS-Net"": 15,
    ""Censys, Inc."": 6,
    ""IP Volume inc"": 3,
    ""Verizon Communications"": 3,
    ""Ipxo Limited"": 3,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 3,
    ""Horizon LLC"": 9,
    ""OVH SAS"": 12,
    ""China Mobile communications corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Vietserver Services Technology Company Limited"": 12
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 24,
    ""VietServer Services technology company limited"": 93,
    ""Chinanet HE"": 6,
    ""Microsoft Azure Cloud (southeastasia)"": 3,
    ""Flyservers S.A"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""UAB Host Baltic"": 18,
    ""AWS EC2 (us-west-2)"": 3,
    ""Xhost Internet Solutions"": 12,
    ""4Media Ltd"": 15,
    ""Censys, Inc."": 3,
    ""Xhostis"": 6,
    ""Quasi Networks LTD."": 3,
    ""MCI Communications Services, Inc. d/b/a Verizon Business"": 3,
    ""External"": 3,
    ""LP Technology Electronic Commerce Company Limited"": 3,
    ""Microsoft Azure Cloud (switzerlandnorth)"": 30,
    ""Horizon LLC"": 9,
    ""OVH Ltd"": 12,
    ""China Mobile"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Censys Inc"": 3,
    ""Vietserver Viet NAM Service Technology Company Limited"": 12
  },
  ""regionName"": {
    ""Moscow"": 33,
    ""Hanoi"": 93,
    ""Hebei"": 9,
    ""Central Singapore"": 3,
    ""Drenthe"": 3,
    ""California"": 36,
    ""Vilnius"": 18,
    ""Oregon"": 3,
    ""North Holland"": 21,
    ""Plovdiv"": 15,
    ""Hesse"": 3,
    ""New Jersey"": 3,
    ""New York"": 3,
    ""Ho Chi Minh"": 3,
    ""Zurich"": 30,
    ""England"": 12,
    ""Seoul"": 3,
    ""Michigan"": 3,
    ""Tinh Hung Yen"": 12
  },
  ""country"": {
    ""Russia"": 33,
    ""Vietnam"": 108,
    ""China"": 9,
    ""Singapore"": 3,
    ""Netherlands"": 24,
    ""United States"": 48,
    ""Lithuania"": 18,
    ""Bulgaria"": 15,
    ""Germany"": 3,
    ""Switzerland"": 30,
    ""United Kingdom"": 12,
    ""South Korea"": 3
  },
  ""account"": {
    ""Domain"": 30,
    ""hello"": 147,
    ""(empty)"": 21,
    ""Administr"": 36,
    ""LBTgErFrg"": 3,
    ""bKgknp"": 3,
    ""xuuxmd"": 3,
    ""Test"": 33,
    ""xzgUVwsQC"": 3,
    ""qCUiOk"": 3,
    ""TuDhwR"": 3,
    ""Administrator"": 3,
    ""ZJTfHicnP"": 3,
    ""blAaHC"": 3,
    ""fVmVgy"": 3,
    ""IjuGRjrvd"": 3,
    ""ynbMQr"": 3,
    ""KZdUvz"": 3
  },
  ""keyboard"": {
    ""Unknown"": 306
  },
  ""client_build"": {
    ""Unknown"": 306
  },
  ""client_name"": {
    ""Unknown"": 306
  },
  ""ip_type"": {
    ""Unknown"": 213,
    ""hosting"": 87,
    ""mobile & proxy"": 3,
    ""mobile"": 3
  }
}"
SzvfBXAV,2023-11-05_stats.json,rdp_snitch,JSON,Sunday 5th of November 2023 06:16:17 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 8,
    ""103.232.53.123"": 62,
    ""62.122.184.168"": 8,
    ""106.116.169.71"": 4,
    ""172.188.48.214"": 2,
    ""141.98.81.34"": 2,
    ""198.235.24.236"": 6,
    ""45.227.254.55"": 4,
    ""34.221.234.39"": 2,
    ""87.251.75.64"": 2,
    ""87.251.75.145"": 4,
    ""212.70.149.146"": 10,
    ""167.94.145.59"": 2,
    ""185.170.144.3"": 4,
    ""89.248.170.88"": 2,
    ""71.251.204.33"": 2,
    ""87.251.75.120"": 2,
    ""45.130.83.51"": 2,
    ""103.245.237.254"": 2,
    ""198.235.24.239"": 6,
    ""51.107.22.213"": 20,
    ""45.227.254.54"": 4,
    ""62.204.41.146"": 6,
    ""51.75.160.42"": 8,
    ""111.61.253.55"": 2,
    ""152.32.243.98"": 2,
    ""205.210.31.69"": 6,
    ""162.142.125.226"": 2,
    ""45.227.254.8"": 4,
    ""103.167.91.133"": 8,
    ""198.235.24.82"": 6
  },
  ""asn"": {
    ""AS57523"": 16,
    ""AS63737"": 70,
    ""AS4134"": 4,
    ""AS8075"": 22,
    ""AS209588"": 2,
    ""AS396982"": 24,
    ""AS267784"": 12,
    ""AS16509"": 2,
    ""AS208091"": 8,
    ""AS204428"": 10,
    ""AS398705"": 2,
    ""AS197414"": 4,
    ""AS202425"": 2,
    ""AS701"": 2,
    ""AS206092"": 2,
    ""AS150867"": 2,
    ""AS59425"": 6,
    ""AS16276"": 8,
    ""AS24547"": 2,
    ""AS135377"": 2,
    ""AS398324"": 2
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 16,
    ""VIETSERVER"": 62,
    ""Chinanet"": 4,
    ""Microsoft"": 22,
    ""Flyservers S.A."": 14,
    ""Google LLC"": 24,
    ""Amazon.com, Inc."": 2,
    ""Xhost Internet Solutions LP"": 12,
    ""SS-Net"": 10,
    ""Censys, Inc."": 4,
    ""IP Volume inc"": 2,
    ""Verizon Communications"": 2,
    ""Ipxo Limited"": 2,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 2,
    ""Horizon LLC"": 6,
    ""OVH SAS"": 8,
    ""China Mobile communications corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Vietserver Services Technology Company Limited"": 8
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 16,
    ""VietServer Services technology company limited"": 62,
    ""Chinanet HE"": 4,
    ""Microsoft Azure Cloud (southeastasia)"": 2,
    ""Flyservers S.A"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 12,
    ""AWS EC2 (us-west-2)"": 2,
    ""Xhost Internet Solutions"": 8,
    ""4Media Ltd"": 10,
    ""Censys, Inc."": 2,
    ""Xhostis"": 4,
    ""Quasi Networks LTD."": 2,
    ""MCI Communications Services, Inc. d/b/a Verizon Business"": 2,
    ""External"": 2,
    ""LP Technology Electronic Commerce Company Limited"": 2,
    ""Microsoft Azure Cloud (switzerlandnorth)"": 20,
    ""Horizon LLC"": 6,
    ""OVH Ltd"": 8,
    ""China Mobile"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Censys Inc"": 2,
    ""Vietserver Viet NAM Service Technology Company Limited"": 8
  },
  ""regionName"": {
    ""Moscow"": 22,
    ""Hanoi"": 62,
    ""Hebei"": 6,
    ""Central Singapore"": 2,
    ""Drenthe"": 2,
    ""California"": 24,
    ""Vilnius"": 12,
    ""Oregon"": 2,
    ""North Holland"": 14,
    ""Plovdiv"": 10,
    ""Hesse"": 2,
    ""New Jersey"": 2,
    ""New York"": 2,
    ""Ho Chi Minh"": 2,
    ""Zurich"": 20,
    ""England"": 8,
    ""Seoul"": 2,
    ""Michigan"": 2,
    ""Tinh Hung Yen"": 8
  },
  ""country"": {
    ""Russia"": 22,
    ""Vietnam"": 72,
    ""China"": 6,
    ""Singapore"": 2,
    ""Netherlands"": 16,
    ""United States"": 32,
    ""Lithuania"": 12,
    ""Bulgaria"": 10,
    ""Germany"": 2,
    ""Switzerland"": 20,
    ""United Kingdom"": 8,
    ""South Korea"": 2
  },
  ""account"": {
    ""Domain"": 20,
    ""hello"": 98,
    ""(empty)"": 14,
    ""Administr"": 24,
    ""LBTgErFrg"": 2,
    ""bKgknp"": 2,
    ""xuuxmd"": 2,
    ""Test"": 22,
    ""xzgUVwsQC"": 2,
    ""qCUiOk"": 2,
    ""TuDhwR"": 2,
    ""Administrator"": 2,
    ""ZJTfHicnP"": 2,
    ""blAaHC"": 2,
    ""fVmVgy"": 2,
    ""IjuGRjrvd"": 2,
    ""ynbMQr"": 2,
    ""KZdUvz"": 2
  },
  ""keyboard"": {
    ""Unknown"": 204
  },
  ""client_build"": {
    ""Unknown"": 204
  },
  ""client_name"": {
    ""Unknown"": 204
  },
  ""ip_type"": {
    ""Unknown"": 142,
    ""hosting"": 58,
    ""mobile & proxy"": 2,
    ""mobile"": 2
  }
}"
FNJpzNAs,2023-11-05_stats.json,rdp_snitch,JSON,Sunday 5th of November 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 4,
    ""103.232.53.123"": 31,
    ""62.122.184.168"": 4,
    ""106.116.169.71"": 2,
    ""172.188.48.214"": 1,
    ""141.98.81.34"": 1,
    ""198.235.24.236"": 3,
    ""45.227.254.55"": 2,
    ""34.221.234.39"": 1,
    ""87.251.75.64"": 1,
    ""87.251.75.145"": 2,
    ""212.70.149.146"": 5,
    ""167.94.145.59"": 1,
    ""185.170.144.3"": 2,
    ""89.248.170.88"": 1,
    ""71.251.204.33"": 1,
    ""87.251.75.120"": 1,
    ""45.130.83.51"": 1,
    ""103.245.237.254"": 1,
    ""198.235.24.239"": 3,
    ""51.107.22.213"": 10,
    ""45.227.254.54"": 2,
    ""62.204.41.146"": 3,
    ""51.75.160.42"": 4,
    ""111.61.253.55"": 1,
    ""152.32.243.98"": 1,
    ""205.210.31.69"": 3,
    ""162.142.125.226"": 1,
    ""45.227.254.8"": 2,
    ""103.167.91.133"": 4,
    ""198.235.24.82"": 3
  },
  ""asn"": {
    ""AS57523"": 8,
    ""AS63737"": 35,
    ""AS4134"": 2,
    ""AS8075"": 11,
    ""AS209588"": 1,
    ""AS396982"": 12,
    ""AS267784"": 6,
    ""AS16509"": 1,
    ""AS208091"": 4,
    ""AS204428"": 5,
    ""AS398705"": 1,
    ""AS197414"": 2,
    ""AS202425"": 1,
    ""AS701"": 1,
    ""AS206092"": 1,
    ""AS150867"": 1,
    ""AS59425"": 3,
    ""AS16276"": 4,
    ""AS24547"": 1,
    ""AS135377"": 1,
    ""AS398324"": 1
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 8,
    ""VIETSERVER"": 31,
    ""Chinanet"": 2,
    ""Microsoft"": 11,
    ""Flyservers S.A."": 7,
    ""Google LLC"": 12,
    ""Amazon.com, Inc."": 1,
    ""Xhost Internet Solutions LP"": 6,
    ""SS-Net"": 5,
    ""Censys, Inc."": 2,
    ""IP Volume inc"": 1,
    ""Verizon Communications"": 1,
    ""Ipxo Limited"": 1,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 1,
    ""Horizon LLC"": 3,
    ""OVH SAS"": 4,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Vietserver Services Technology Company Limited"": 4
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 8,
    ""VietServer Services technology company limited"": 31,
    ""Chinanet HE"": 2,
    ""Microsoft Azure Cloud (southeastasia)"": 1,
    ""Flyservers S.A"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 6,
    ""AWS EC2 (us-west-2)"": 1,
    ""Xhost Internet Solutions"": 4,
    ""4Media Ltd"": 5,
    ""Censys, Inc."": 1,
    ""Xhostis"": 2,
    ""Quasi Networks LTD."": 1,
    ""MCI Communications Services, Inc. d/b/a Verizon Business"": 1,
    ""External"": 1,
    ""LP Technology Electronic Commerce Company Limited"": 1,
    ""Microsoft Azure Cloud (switzerlandnorth)"": 10,
    ""Horizon LLC"": 3,
    ""OVH Ltd"": 4,
    ""China Mobile"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Censys Inc"": 1,
    ""Vietserver Viet NAM Service Technology Company Limited"": 4
  },
  ""regionName"": {
    ""Moscow"": 11,
    ""Hanoi"": 31,
    ""Hebei"": 3,
    ""Central Singapore"": 1,
    ""Drenthe"": 1,
    ""California"": 12,
    ""Vilnius"": 6,
    ""Oregon"": 1,
    ""North Holland"": 7,
    ""Plovdiv"": 5,
    ""Hesse"": 1,
    ""New Jersey"": 1,
    ""New York"": 1,
    ""Ho Chi Minh"": 1,
    ""Zurich"": 10,
    ""England"": 4,
    ""Seoul"": 1,
    ""Michigan"": 1,
    ""Tinh Hung Yen"": 4
  },
  ""country"": {
    ""Russia"": 11,
    ""Vietnam"": 36,
    ""China"": 3,
    ""Singapore"": 1,
    ""Netherlands"": 8,
    ""United States"": 16,
    ""Lithuania"": 6,
    ""Bulgaria"": 5,
    ""Germany"": 1,
    ""Switzerland"": 10,
    ""United Kingdom"": 4,
    ""South Korea"": 1
  },
  ""account"": {
    ""Domain"": 10,
    ""hello"": 49,
    ""(empty)"": 7,
    ""Administr"": 12,
    ""LBTgErFrg"": 1,
    ""bKgknp"": 1,
    ""xuuxmd"": 1,
    ""Test"": 11,
    ""xzgUVwsQC"": 1,
    ""qCUiOk"": 1,
    ""TuDhwR"": 1,
    ""Administrator"": 1,
    ""ZJTfHicnP"": 1,
    ""blAaHC"": 1,
    ""fVmVgy"": 1,
    ""IjuGRjrvd"": 1,
    ""ynbMQr"": 1,
    ""KZdUvz"": 1
  },
  ""keyboard"": {
    ""Unknown"": 102
  },
  ""client_build"": {
    ""Unknown"": 102
  },
  ""client_name"": {
    ""Unknown"": 102
  },
  ""ip_type"": {
    ""Unknown"": 71,
    ""hosting"": 29,
    ""mobile & proxy"": 1,
    ""mobile"": 1
  }
}"
rKeJVqaB,Untitled,bekie,C++,Sunday 5th of November 2023 06:05:48 PM CDT,"#include <netinet/in.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <unistd.h>
#include <iostream>
#include ""Messages.h""

using namespace std;

int server_fd, client_fd;
int queueSize = 2;
int port = 8080;
int maxLength = 80;
int currentSize = 0;

char buffer[1024];

struct userPost{
    string user;
    string message;
    int position;
    userPost* next;
};
userPost* postList = nullptr;
 

void displayWall();
void promptUser();
void chooseMethod(string command);


int main(int argc, char* argv[]){
    ssize_t valread;
    struct sockaddr_in address;
    int opt = 1;
    socklen_t addrlen = sizeof(address);

    if (argc >=2){
        queueSize = stoi(argv[1]);
        port = stoi(argv[2]);
    } 
 
    // Creating socket file descriptor
    if ((server_fd = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
        perror(""socket failed"");
        exit(EXIT_FAILURE);
    }
 
    // Forcefully attaching socket to the port
    if (setsockopt(server_fd, SOL_SOCKET,
                   SO_REUSEADDR | SO_REUSEPORT, &opt,
                   sizeof(opt))) {
        perror(""setsockopt"");
        exit(EXIT_FAILURE);
    }
    address.sin_family = AF_INET;
    address.sin_addr.s_addr = INADDR_ANY;
    address.sin_port = htons(port);
 
    // Forcefully attaching socket to the port
    if (bind(server_fd, (struct sockaddr*)&address,
             sizeof(address))
        < 0) {
        perror(""bind failed"");
        exit(EXIT_FAILURE);
    }
    if (listen(server_fd, 3) < 0) {
        perror(""listen"");
        exit(EXIT_FAILURE);
    }
    if ((client_fd
         = accept(server_fd, (struct sockaddr*)&address,
                  &addrlen))
        < 0) {
        perror(""accept"");
        exit(EXIT_FAILURE);
    }

    cout<<""Client connected on port: ""<<port<<endl;

    displayWall();

    //close(client_fd);
    //close(server_fd);

    return 0;
}

void displayWall(){
    send(client_fd,WALL_HEADER,strlen(WALL_HEADER),0);
    //display contents here
    userPost* current = postList;
    if (current == nullptr){
        send(client_fd,EMPTY_MESSAGE,strlen(EMPTY_MESSAGE),0);
    }
    else{
        while (current != nullptr){
            string displayPost = current->user +"": "" + current->message+ ""\n"";
            send(client_fd,displayPost.c_str(),displayPost.length(),0);
            current = current->next;
        }
    }
    send(client_fd,NEWLINE,strlen(NEWLINE),0);

    promptUser();
    return;
}

void promptUser(){
    send(client_fd,COMMAND_PROMPT,strlen(COMMAND_PROMPT),0);
    int bytesRead = read(client_fd,buffer, 1024);
    buffer[bytesRead] = '\0';
    string command = string(buffer,bytesRead);
    //use command given by user to do something.
    chooseMethod(command);
    return;
}

void chooseMethod(string command){
    if (command==""clear\n""){
        cout<<""clear"";
        return;
    }
    else if (command==""post\n""){
        string name;
        string post;    

        send(client_fd,NAME_PROMPT,strlen(NAME_PROMPT),0);
        int bytesRead = read(client_fd,buffer, 1024);
        buffer[bytesRead] = '\0';
        name = string(buffer,bytesRead-1);
        memset(buffer, 0, 1024);


        int leftoverLength = maxLength - (name.length()-1) -2;
        string leftoverStr = to_string(leftoverLength);

        send(client_fd,POST_PROMPT1,strlen(POST_PROMPT1),0);
        send(client_fd,leftoverStr.c_str(),leftoverStr.length(),0);
        send(client_fd,POST_PROMPT2,strlen(POST_PROMPT2),0);
        bytesRead =read(client_fd,buffer, 1024);
        buffer[bytesRead] = '\0';

        if (bytesRead > leftoverLength){
            send(client_fd,ERROR_MESSAGE,strlen(ERROR_MESSAGE),0);
            displayWall();
            return;
        }

        post = string(buffer,bytesRead-1);

        //if size valid 
        send(client_fd,SUCCESS_MESSAGE,strlen(SUCCESS_MESSAGE),0);


        userPost* newNode = new userPost;
        newNode->user = name;
        newNode->message = post;
        newNode->next = nullptr;


        if (postList == nullptr) {
            currentSize++;
            postList = newNode; // set the list to the new node if it's the first node
        } else {
            userPost* current = postList;
            if (current->next == nullptr){
                currentSize++;
            }
            while (current->next != nullptr) {
                currentSize ++;
                current = current->next;
            }
            current->next = newNode; // Link the new node to the last node in the list
        }
        //cout<<""currentSize: ""<<currentSize<<endl;
        if (currentSize>queueSize && postList != nullptr){
            userPost* temp = postList;
            postList = postList->next;
            delete temp;
            currentSize --;
        }
        //cout<<""new currentSize: ""<<currentSize<<endl;

        /*
        cout<<""start of linked list objects-----""<<endl;

        userPost* tempDeleteNode = postList;
        while (tempDeleteNode != nullptr){
            cout<<""linked list object""<<endl;
            cout<<tempDeleteNode->user<<endl;
            cout<<tempDeleteNode->message<<endl;
            tempDeleteNode = tempDeleteNode->next;
        }
        cout<<""end of linked list objects-----""<<endl<<endl;
        */


        displayWall();
        return;
    }
    else if (command==""kill\n""){
        cout<<""kill"";
        send(client_fd,KILL_MESSAGE,strlen(KILL_MESSAGE),0);

        userPost* current = postList;
        while (current != nullptr){
            userPost* nextNode = current->next;
            delete current;
            current = nextNode;
        }
        postList = nullptr;
        

        close(client_fd);
        close(server_fd);
        return;
    }
    else if (command==""quit\n""){
        cout<<""quit"";
        send(client_fd,QUIT_MESSAGE,strlen(QUIT_MESSAGE),0);
        close(client_fd);
        return;
    }
    else{
        send(client_fd,BAD_COMMAND,strlen(BAD_COMMAND),0);
        displayWall();
        return;
    }
}

"
i2minzkB,Response,iko1133,JavaScript,Sunday 5th of November 2023 05:59:17 PM CDT,"{
	""config"": {
		""adapter"": [""xhr"", ""http""],
		""baseURL"": ""https://api.benefits.ge/api/v1.0/"",
		""data"": ""{\""travelInfo\"":{\""coverageZoneId\"":10,\""currencyId\"":10,\""travelStartDate\"":\""2023-11-05T20:00:00.000Z\"",\""travelEndDate\"":\""2023-11-06T20:00:00.000Z\"",\""hasLuggageInsurance\"":false,\""contractPackageId\"":26722},\""client\"":{\""isSelfInsurance\"":true,\""isOthersInsurance\"":false,\""personalNumber\"":\""01008056427\"",\""birthDate\"":\""1993-08-17T00:00:00\"",\""firstName\"":\""ანა\"",\""lastName\"":\""შუბლაძე\"",\""firstNameEng\"":\""Ana\"",\""lastNameEng\"":\""Shubladze\"",\""email\"":\""ashubladze@benefits.ge\"",\""phoneNumber\"":\""599177434\"",\""passportNumber\"":\""20AB60553\"",\""genderId\"":1,\""addressActual\"":\""ატენის ქ. 18ა \"",\""amountText\"":\""0\""},\""insuredPersons\"":[]}"",
		""env"": {
			""Blob"": [Function Blob],
			""FormData"": [Function FormData]
		},
		""headers"": [Object],
		""maxBodyLength"": -1,
		""maxContentLength"": -1,
		""method"": ""post"",
		""timeout"": 0,
		""transformRequest"": [
			[Function transformRequest]
		],
		""transformResponse"": [
			[Function transformResponse]
		],
		""transitional"": {
			""clarifyTimeoutError"": false,
			""forcedJSONParsing"": true,
			""silentJSONParsing"": true
		},
		""url"": ""PolicyTravel/Application"",
		""validateStatus"": [Function validateStatus],
		""xsrfCookieName"": ""XSRF-TOKEN"",
		""xsrfHeaderName"": ""X-XSRF-TOKEN""
	},
	""data"": {
		""TravelInfo.TravelStartDate"": [""მნიშვნელობა უნდა აღემატებოდეს მიმდინარე თარიღს""]
	},
	""duration"": 266,
	""headers"": {
		""content-type"": ""application/json; charset=utf-8"",
		""date"": ""Sun, 05 Nov 2023 00:03:10 GMT"",
		""strict-transport-security"": ""max-age=2592000"",
		""transfer-encoding"": ""Identity""
	},
	""ok"": false,
	""originalError"": [AxiosError: Request failed with status code 400],
	""problem"": ""CLIENT_ERROR"",
	""status"": 400
}
LOG Error
while trying to get User info: {
	""TravelInfo.TravelStartDate"": [""მნიშვნელობა უნდა აღემატებოდეს მიმდინარე თარიღს""]
}"
AyuCHGa1,snowybot upgrade,coinwalk,JavaScript,Sunday 5th of November 2023 05:50:13 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 1000;
var changer = (divide/24);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(originalbal-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();"
5f4udPyV,wow snowybot,coinwalk,JavaScript,Sunday 5th of November 2023 05:44:45 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 10000;
var changer = (divide/24);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(originalbal-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();"
t84nRg4u,Power Strings,matheus_monteiro,C++,Sunday 5th of November 2023 05:27:12 PM CDT,"#include ""bits/stdc++.h""

/*
 * Author: Matheus Monteiro
 */

using namespace std;

// #ifdef DEBUGMONTEIRO
#define _ << "" , "" <<
#define bug(x) cout << #x << ""  >>>>>>>  "" << x << endl;
// #else
// #define bug(x)
// #endif

// #define int long long
#define Max(a, b) (a > b ? a : b)
#define Min(a, b) (a < b ? a : b)
#define ii pair<int, int>
#define f first
#define s second
#define vi vector<int>
#define vii vector<ii>
#define LSOne(S) ((S) & (-S))
#define UNTIL(t) while (clock() < (t) * CLOCKS_PER_SEC)
#define SZ(a) (int)a.size()
#define fastio std::ios_base::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0);

const int MAX = 200005;
// const int MOD = 1000000007; //10^9 + 7
const int OO = 0x3f3f3f3f; // 0x3f3f3f3f;
const double EPS = 1e-9;  //10^-9
std::mt19937 rng(std::chrono::steady_clock::now().time_since_epoch().count());

vector<int> getZ(const string &s) {
  vector<int> z(s.size());
  int l = 0, r = 0;

  for(int i = 1; i < s.size(); ++i) {
    if(i < r) {
      z[i] = min(r - i, z[i - l]);
    }
    while(i + z[i] < s.size() && s[z[i]] == s[i + z[i]])
      z[i]++;
    if(i + z[i] > r) {
      l = i;
      r = i + z[i];
    }
  }
  return z;
}

void solve() {
  string s;
  while(cin >> s && s != ""."") {
    auto z = getZ(s);
    int ans = 1;
    for(int i = 1; i < s.size(); ++i) 
      if(i + z[i] >= s.size() && (s.size() % i == 0)) {
        ans = s.size() / i;
        break;
      }
    cout << ans << '\n'; 
  }
}

int32_t main() {
    fastio;

    int t = 1;
   // std::cin >> t;
    for(int caso = 1; caso <= t; ++caso) {
        //cout << ""Case #"" << caso << "": "";
        solve();
    }

    return 0;
}

/*
Before submit:
    Check the corners cases
    Check solution restrictions

For implementation solutions:
    Check the flow of the variables

For intervals problems:
    Think about two pointers

For complete search:
    Think about cuts

If you get WA:
    Reread your code looking for stupid typos
    Try various manual testcases 
    Recheck the correctness of your algorithm
    Reread the statement
    Write a straightforward solution, create lots of testcases by yourself, and compare both solutions
    Generate random test cases and perform a stress test, comparing your solution with the one that you are sure is correct
    Change the coder (if you're with a team)
    Give up. You may have other tasks to solve.
*/
"
LMx4Amcj,Untitled,sissou123,Java,Sunday 5th of November 2023 05:17:35 PM CDT,"Java Algorithms & Data Structures: Learn Optimal Code Design
Master Efficient Problem-Solving Techniques and Performance-Driven Programming Through Trees, Stacks, Queues, and More!
for more:
https://cuty.io/1gYrhTCjCLcj"
VYvdx8t2,snowybot upgrade,coinwalk,JavaScript,Sunday 5th of November 2023 05:16:19 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 10000;
var changer = (divide/20);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(originalbal-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*changer)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();"
zh954ivF,Untitled,sissou123,Java,Sunday 5th of November 2023 05:15:07 PM CDT,"Data Structures Algorithms in Java – SECRETS to Ace LeetCode
COMPLETE Beginner to Expert Guide to Ace Coding Interview THIS YEAR with DSA in Java EVEN WITH Zero Experience.
for more:
https://cuty.io/1b5HStQ1v"
MtJWG3fA,snowybot,coinwalk,JavaScript,Sunday 5th of November 2023 05:06:52 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((originalbal/800).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(originalbal-(floatingbase*40)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*40)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();"
J3rASD2F,pdftotext,iconoclasthero,Bash,Sunday 5th of November 2023 04:32:31 PM CDT,"Cha ter 1
Confessions of a Crust , Crotchet , Cantankerous,
Contrarian, Communist Casualt of Cancel Culture
Are ou now or have ou ever been…?

What’s new about cancel culture?
Not as much as it mi ht a ear; but not so little either.
Cancel culture is as old as culture itself. Ever societ
establishes boundaries of what’s acce table. If one nds,
or laces, oneself on the wron side of them, one ets
cancelled. The mechanisms can be subtle—a olite
re ection letter after submittin a “controversial” article to
a scholarl ublication—or uite brutal—a stint in a reeducation cam or an assassination. Julien Benda, in La
Trahison des Clercs (The Treason o the Intellectuals), osited
that, if ou’re faithful to the values of Truth and Justice, it
must inevitabl come to ass that ou’ll be ostracized—or,
in the current idiom, “cancelled”—b societ : “A clerk
who is o ular with the la men is a traitor to his o ce.”
He estured to Socrates and Jesus. A true clerk, accordin
to Benda, acce ts Jesus’ dictum: “M Kin dom is not of
this world.” Had Benda lived lon er, he could have added
to his mart rs’ antheon Malcolm X and Martin Luther
Kin , both of whom, it is now for otten, were reviled at
the time of their res ective assassinations. Ri ht after
Malcolm X’s death, the New York Times editorialized that
“the world he saw throu h those horn-rimmed lasses of
his was distorted and dark. But he made it darker still with
his exaltation of fanaticism. Yesterda someone came out
of that darkness that he s awned, and killed him.” Who
would’ve thunk the outré woke Times cancelled Malcolm
X on his deathbed? When Martin Luther Kin s oke out
1

2
"
WPY4RHF3,Untitled,iconoclasthero,Bash,Sunday 5th of November 2023 04:28:19 PM CDT,"Chapter 1 Confessions of a Crusty, Crotchety, Cantankerous,  Contrarian, Communist Casualty of Cancel Culture Are you now or have you ever been...? What’s new about cancel culture?  Not as much as it might appear; but not so little either. Cancel culture is as old as culture itself. Every society establishes boundaries of what’s acceptable. If one finds, or places, oneself on the wrong side of them, one gets cancelled. The mechanisms can be subtle—a_ polite rejection letter after submitting a “controversial” article to a scholarly publication—or quite brutal—a stint in a re- education camp or an assassination. Julien Benda, in La Trahison des Clercs (The Treason of the Intellectuals), posited that, if you’re faithful to the values of Truth and Justice, it must inevitably come to pass that you'll be ostracized—or, in the current idiom, “cancelled”—by society: “A clerk who is popular with the laymen is a traitor to his office.” He gestured to Socrates and Jesus.4 A true clerk, according to Benda, accepts Jesus’ dictum: “My Kingdom is not of this world.” Had Benda lived longer, he could have added to his martyrs’ pantheon Malcolm X and Martin Luther King, both of whom, it is now forgotten, were reviled at the time of their respective assassinations. Right after Malcolm X’s death, the New York Times editorialized that “the world he saw through those horn-rimmed glasses of his was distorted and dark. But he made it darker still with his exaltation of fanaticism. Yesterday someone came out of that darkness that he spawned, and killed him.” Who would’ve thunk the outré woke Times cancelled Malcolm  X on his deathbed? When Martin Luther King spoke out
"
p3a3TvtA,Untitled,Skos_Martren,C++,Sunday 5th of November 2023 04:27:40 PM CDT,"#include <iostream>
#include <boost/array.hpp>
#include <boost/asio.hpp>

using boost::asio::ip::tcp;

int main(int argc, char* argv[])
{
    try
    {
        if (argc != 2)
        {
            std::cerr << ""Usage: client <host>"" << std::endl;
            return 1;
        }

        boost::asio::io_context io_context;

        //---socket()--------------------------------------------------------------------
        tcp::socket socket(io_context);
        //---socket()--------------------------------------------------------------------
        
        //---connect()--------------------------------------------------------------------
        tcp::resolver resolver(io_context);
        tcp::resolver::results_type endpoints = resolver.resolve(argv[1], ""daytime"");
        
        boost::asio::connect(socket, endpoints);
        //---connect()--------------------------------------------------------------------

        for (;;)
        {

            //---send()/receive()--------------------------------------------------------------------
            boost::array<char, 128> buf;
            boost::system::error_code error;
           
            size_t len = socket.read_some(boost::asio::buffer(buf), error);
            //---send()/receive()--------------------------------------------------------------------
            
            //---close()--------------------------------------------------------------------
            if (error == boost::asio::error::eof)
                break; // Connection closed cleanly by peer.
            else if (error)
                throw boost::system::system_error(error); // Some other error.
            //---close()--------------------------------------------------------------------
            
            //---send()/receive()--------------------------------------------------------------------
            std::cout.write(buf.data(), len);
            //---send()/receive()--------------------------------------------------------------------
        }
    }
    catch (std::exception& e)
    {
        std::cerr << e.what() << std::endl;
    }

    return 0;
}"
a9S33uPs,Untitled,Skos_Martren,C++,Sunday 5th of November 2023 04:27:03 PM CDT,"#include <ctime>
#include <iostream>
#include <string>
#include <boost/asio.hpp>

using boost::asio::ip::tcp;

std::string make_daytime_string()
{
    using namespace std; // For time_t, time and ctime;
    time_t now = time(0);
    return ctime(&now);
}

int main()
{
    try
    {
        //---listen() --------------------------------------------------------------------
        boost::asio::io_context io_context;

        tcp::acceptor acceptor(io_context, tcp::endpoint(tcp::v4(), 13));
        //---listen() --------------------------------------------------------------------

        for (;;)
        {

            //---socket()--------------------------------------------------------------------
            tcp::socket socket(io_context);
            //---socket()--------------------------------------------------------------------

            //---bind()/accept()--------------------------------------------------------------------
            acceptor.accept(socket);
            //---bind()/accept()--------------------------------------------------------------------
            
            //---receive()--------------------------------------------------------------------
            std::string message = make_daytime_string();
            //---receive()--------------------------------------------------------------------

            //---send()--------------------------------------------------------------------
            boost::system::error_code ignored_error;
            boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
            //---send()--------------------------------------------------------------------
        }
    }
    catch (std::exception& e)
    {
        std::cerr << e.what() << std::endl;
    }

    return 0;
}
"
ZqEsFAFc,Burn 10 output from vietocr,iconoclasthero,Bash,Sunday 5th of November 2023 04:24:06 PM CDT,"Chapter 1 Confessions of a Crusty, Crotchety, Cantankerous, Contrarian, Communist Casualty of Cancel Culture Are you now or have you ever been...?

What’s new about cancel culture?

Not as much as it might appear; but not so little either. Cancel culture is as old as culture itself. Every society establishes boundaries of what’s acceptable. If one finds, or places, oneself on the wrong side of them, one gets cancelled. The mechanisms can be subtle—a_ polite rejection letter after submitting a “controversial” article to a scholarly publication—or quite brutal—a stint in a re-education camp or an assassination. Julien Benda, in La Trahison des Clercs (The Treason of the Intellectuals), posited that, if you’re faithful to the values of Truth and Justice, it must inevitably come to pass that you'll be ostracized—or, in the current idiom, “cancelled”—by society: “A clerk who is popular with the laymen is a traitor to his office.” He gestured to Socrates and Jesus.4 A true clerk, according to Benda, accepts Jesus’ dictum: “My Kingdom is not of this world.” Had Benda lived longer, he could have added to his martyrs’ pantheon Malcolm X and Martin Luther King, both of whom, it is now forgotten, were reviled at the time of their respective assassinations. Right after Malcolm X’s death, the New York Times editorialized that “the world he saw through those horn-rimmed glasses of his was distorted and dark. But he made it darker still with his exaltation of fanaticism. Yesterday someone came out of that darkness that he spawned, and killed him.” Who would’ve thunk the outré woke Times cancelled Malcolm

X on his deathbed? When Martin Luther King spoke out
"
zgGHpLWm,hw3.py,D_L3,Python,Sunday 5th of November 2023 04:12:13 PM CDT,"class Candy:
    def __init__(self, mass, uranium):
        self.mass = mass
        self.uranium = uranium

    def get_uranium_quantity(self):
        return self.uranium

    def get_mass(self):
        return self.mass


class Person:
    def __init__(self, position):
        self.position = position

    def get_position(self):
        return self.position

    def set_position(self, position):
        self.position = position


class Kid(Person):
    def __init__(self, position, initiative):
        self.initiative = initiative
        self.basket = []
        self.visited_hosts = []
        super().__init__(position)

    def _sum_uranium(self):
        sum = 0
        for candy in self.basket:
            sum += candy.get_uranium_quantity() * candy.get_mass()
        return sum

    def get_initiative(self):
        return self.initiative

    def add_candy(self, candy):
        self.basket.append(candy)

    def is_critical(self):
        return self._sum_uranium() > 20


class Host(Person):
    def __init__(self, position, candies):
        self.candies = []
        for candy in candies:
            self.candies.append(Candy(candy[0], candy[1]))
        self.kidsAtTheMoment = []
        super().__init__(position)

    def remove_candy(self, pick_func):
        candy = pick_func(self.candies)
        if (candy == None):
            return None
        self.candies.remove(candy)
        return candy


class FluxCapacitor:
    def __init__(self, participants):
        self.hosts = []
        self.kids = []
        for participant in participants:
            if isinstance(participant, Host):
                self.hosts.append(participant)
            if isinstance(participant, Kid):
                self.kids.append(participant)

    def _getDist(self, host, kid):
        x1, y1 = host.get_position()
        x2, y2 = kid.get_position()
        return ((x2 - x1)**2 + (y2 - y1)**2)**0.5

    def _get_closest_unvisited_host(self, kid):
        self.hosts = sorted(self.hosts, key=lambda host: (
            self._getDist(host, kid), host.get_position()))
        for host in self.hosts:
            if (host not in kid.visited_hosts):
                kid.visited_hosts.append(host)
                kid.position = host.get_position()
                return host
        return None

    def _currentRound(self):
        dead_kids = set()
        for kid in self.kids:
            host = self._get_closest_unvisited_host(kid)
            host.kidsAtTheMoment.append(kid)

        for host in self.hosts:
            host.kidsAtTheMoment = sorted(
                host.kidsAtTheMoment, key=lambda x: x.get_initiative(), reverse=True)
            for kid in host.kidsAtTheMoment:
                if (host.candies == []):
                    break
                candy = host.remove_candy(lambda y: max(
                    y, key=lambda x: x.get_mass(), default=None))
                kid.add_candy(candy)
                if (kid.is_critical()):
                    dead_kids.add(kid)
            host.kidsAtTheMoment = []
        if (dead_kids == set()):
            return None
        return dead_kids

    def get_victim(self):
        i = 0
        dead_kids = None
        while i < len(self.hosts) and dead_kids == None:
            dead_kids = self._currentRound()
            i += 1
        return dead_kids"
HSK19gHk,Burn-010.txt,iconoclasthero,Bash,Sunday 5th of November 2023 04:11:11 PM CDT,"$ cat Burn-010.txt 
Chapter 1
Confessions of a Crusty, Crotchety, Cantankerous,

Contrarian, Communist Casualty of Cancel Culture
Are you now or have you ever been...?
What’s new about cancel culture?

Not as much as it might appear; but not so little either.
Cancel culture is as old as culture itself. Every society
establishes boundaries of what’s acceptable. If one finds,
or places, oneself on the wrong side of them, one gets
cancelled. The mechanisms can be subtle—a_ polite
rejection letter after submitting a “controversial” article to
a scholarly publication—or quite brutal—a stint in a re-
education camp or an assassination. Julien Benda, in La
Trahison des Clercs (The Treason of the Intellectuals), posited
that, if you’re faithful to the values of Truth and Justice, it
must inevitably come to pass that you'll be ostracized—or,
in the current idiom, “cancelled”—by society: “A clerk
who is popular with the laymen is a traitor to his office.”
He gestured to Socrates and Jesus.4 A true clerk, according
to Benda, accepts Jesus’ dictum: “My Kingdom is not of
this world.” Had Benda lived longer, he could have added
to his martyrs’ pantheon Malcolm X and Martin Luther
King, both of whom, it is now forgotten, were reviled at
the time of their respective assassinations. Right after
Malcolm X’s death, the New York Times editorialized that
“the world he saw through those horn-rimmed glasses of
his was distorted and dark. But he made it darker still with
his exaltation of fanaticism. Yesterday someone came out
of that darkness that he spawned, and killed him.” Who
would’ve thunk the outré woke Times cancelled Malcolm

X on his deathbed? When Martin Luther King spoke out
"
TctfbQPy,Error on Disconnect,DISTNET,Logtalk,Sunday 5th of November 2023 03:49:59 PM CDT,"[15:47:23 ERROR]: Could not pass event EntitiesUnloadEvent to Citizens v2.0.33-SNAPSHOT (build 3258)
java.lang.NullPointerException: Cannot invoke ""io.papermc.paper.util.player.NearbyPlayers$TrackedPlayer.remove()"" because ""tracker"" is null
        at io.papermc.paper.util.player.NearbyPlayers.removePlayer(NearbyPlayers.java:69) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.level.ChunkMap.removePlayerFromDistanceMaps(ChunkMap.java:188) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.level.ChunkMap.updatePlayerStatus(ChunkMap.java:1023) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.level.ChunkMap.removeEntity(ChunkMap.java:1139) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.level.ServerChunkCache.removeEntity(ServerChunkCache.java:781) ~[?:?]
        at net.citizensnpcs.nms.v1_20_R2.util.NMSImpl.removeFromWorld(NMSImpl.java:1318) ~[Citizens.jar:?]
        at net.citizensnpcs.util.NMS.removeFromWorld(NMS.java:722) ~[Citizens.jar:?]
        at net.citizensnpcs.npc.AbstractEntityController.remove(AbstractEntityController.java:44) ~[Citizens.jar:?]
        at net.citizensnpcs.npc.CitizensNPC.despawn(CitizensNPC.java:121) ~[Citizens.jar:?]
        at net.citizensnpcs.EventListen.unloadNPCs(EventListen.java:892) ~[Citizens.jar:?]
        at net.citizensnpcs.EventListen$1.onEntitiesUnload(EventListen.java:138) ~[Citizens.jar:?]
        at com.destroystokyo.paper.event.executor.MethodHandleEventExecutor.execute(MethodHandleEventExecutor.java:40) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
        at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:77) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:git-Paper-279]
        at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
        at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.20.2.jar:git-Paper-279]
        at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:126) ~[paper-1.20.2.jar:git-Paper-279]
        at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:615) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
        at org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callEntitiesUnloadEvent(CraftEventFactory.java:2050) ~[paper-1.20.2.jar:git-Paper-279]
        at io.papermc.paper.world.ChunkEntitySlices.callEntitiesUnloadEvent(ChunkEntitySlices.java:156) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.world.level.chunk.LevelChunk.unloadCallback(LevelChunk.java:817) ~[?:?]
        at net.minecraft.world.level.chunk.LevelChunk.onChunkUnload(LevelChunk.java:747) ~[?:?]
        at io.papermc.paper.chunk.system.scheduling.NewChunkHolder.handleFullStatusChange(NewChunkHolder.java:1373) ~[paper-1.20.2.jar:git-Paper-279]
        at io.papermc.paper.chunk.system.scheduling.ChunkHolderManager.processPendingFullUpdate(ChunkHolderManager.java:1382) ~[paper-1.20.2.jar:git-Paper-279]
        at io.papermc.paper.chunk.system.scheduling.ChunkHolderManager.processTicketUpdates(ChunkHolderManager.java:1366) ~[paper-1.20.2.jar:git-Paper-279]
        at io.papermc.paper.chunk.system.scheduling.ChunkHolderManager.processTicketUpdates(ChunkHolderManager.java:1319) ~[paper-1.20.2.jar:git-Paper-279]
        at io.papermc.paper.chunk.system.scheduling.ChunkHolderManager.tick(ChunkHolderManager.java:783) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.level.DistanceManager.purgeStaleTickets(DistanceManager.java:63) ~[?:?]
        at net.minecraft.server.level.ServerChunkCache.tick(ServerChunkCache.java:491) ~[?:?]
        at net.minecraft.server.level.ServerLevel.tick(ServerLevel.java:855) ~[?:?]
        at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1548) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:446) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1379) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1156) ~[paper-1.20.2.jar:git-Paper-279]
        at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:315) ~[paper-1.20.2.jar:git-Paper-279]
        at java.lang.Thread.run(Thread.java:833) ~[?:?]"
ZtRnbdFm,Error On Join/Spawn,DISTNET,Logtalk,Sunday 5th of November 2023 03:48:44 PM CDT,"[15:47:22 WARN]: java.lang.IllegalStateException: Already have player EntityHumanNPC['§cKen'/452, uuid='fff261b0-dfd1-2c32-8d81-8e680651fbce', l='ServerLevel[world]', x=-2316.53, y=145.44, z=6165.47, cpos=[-145, 385], tl=20, v=true](§cKen at -2316.5335,145.4375,6165.4709)
[15:47:22 WARN]:        at io.papermc.paper.util.player.NearbyPlayers.addPlayer(NearbyPlayers.java:48)
[15:47:22 WARN]:        at net.minecraft.server.level.PlayerChunkMap.addPlayerToDistanceMaps(PlayerChunkMap.java:172)
[15:47:22 WARN]:        at net.minecraft.server.level.PlayerChunkMap.a(PlayerChunkMap.java:1014)
[15:47:22 WARN]:        at Citizens.jar//net.citizensnpcs.nms.v1_20_R2.util.NMSImpl.addOrRemoveFromPlayerList(NMSImpl.java:410)
[15:47:22 WARN]:        at Citizens.jar//net.citizensnpcs.util.NMS.addOrRemoveFromPlayerList(NMS.java:81)
[15:47:22 WARN]:        at Citizens.jar//net.citizensnpcs.nms.v1_20_R2.entity.HumanController.lambda$createEntity$0(HumanController.java:55)
[15:47:22 WARN]:        at org.bukkit.craftbukkit.v1_20_R2.scheduler.CraftTask.run(CraftTask.java:101)
[15:47:22 WARN]:        at org.bukkit.craftbukkit.v1_20_R2.scheduler.CraftScheduler.mainThreadHeartbeat(CraftScheduler.java:480)
[15:47:22 WARN]:        at net.minecraft.server.MinecraftServer.b(MinecraftServer.java:1470)
[15:47:22 WARN]:        at net.minecraft.server.dedicated.DedicatedServer.b(DedicatedServer.java:446)
[15:47:22 WARN]:        at net.minecraft.server.MinecraftServer.a(MinecraftServer.java:1379)
[15:47:22 WARN]:        at net.minecraft.server.MinecraftServer.w(MinecraftServer.java:1156)
[15:47:22 WARN]:        at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:315)
[15:47:22 WARN]:        at java.base/java.lang.Thread.run(Thread.java:833)"
DVwwRBLU,Untitled,skimono,C++,Sunday 5th of November 2023 03:47:24 PM CDT,"// clang-format off
//#pragma GCC optimize(""Ofast"")
//#pragma GCC optimize(""no-stack-protector"")
//#pragma GCC optimize(""unroll-loops"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native"")
//#pragma GCC optimize(""fast-math"")
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>
using namespace std;

typedef long long ll;
typedef short sh;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define sqrt sqrtl
#define F first
#define S second
#define endl '\n'
#define all(vc666) vc666.begin(), vc666.end()
#define allr(vc666) vc666.rbegin(), vc666.rend()
#define int long long
#define degug(x) cerr (#x) << "" "" << (x) << endl;

const ll INF = 1e18 + 3;
const ll inf = 2e9 + 3;
const ll ONE = 1, ZERO = 0;
const ll mod = 998244353;
const ll m1 = 1e9 + 575179;
const ll m2 = 1e9 + 87;
const ll LG = 19;
//const ll k = 106033;
//const ll k_sqrt = 400;
//const ll p = 106033;
ld EPS = 1e-9;
ld PI = 3.1415926535897932384;
ld phi = (sqrt(5) + 1.0) / 2.0;
mt19937 rnd(40906);

const int N = 1e5 + 10;
vector <pair<int, int> > g[N];
pair <pair <int, int>, int> edge[N + N];
vector <int> g2[N];
int dp_u[N], dp_v[N];
bitset <N> is_way;
bitset <N> used;
int ans = INF;
priority_queue <pair <int, int> > q;

void dijkstra(int st, vector <int>& dist) {
    q.push({ 0, st });
    dist[st] = 0;
    int v, w;
    while (!q.empty()) {
        v = q.top().second;
        w = -q.top().first;
        q.pop();
        if (w > dist[v]) continue;
        for (auto u : g[v]) {
            if (dist[u.first] > dist[v] + u.second) {
                dist[u.first] = dist[v] + u.second;
                q.push({ -dist[u.first], u.first });
            }
        }
    }
}

vector <int> dist_s, dist_t, dist_u, dist_v;

void dfs(int vr) {
    used[vr] = 0;
    dp_u[vr] = dist_u[vr];
    dp_v[vr] = dist_v[vr];
    for (auto u : g2[vr]) {
        if (used[u] || !is_way[u]) continue;
        dfs(u);
        dp_u[vr] = min(dp_u[vr], dp_u[u]);
        dp_v[vr] = min(dp_v[vr], dp_v[u]);
    }
    ans = min(ans, min(dp_u[vr] + dist_v[vr], dp_v[vr] + dist_u[vr]));
}

void solve() {
    int n, m, s, t, u, v, i, j, x, y, z;
    cin >> n >> m;
    cin >> s >> t;
    cin >> u >> v;
    for (i = 0; i < m; i++) {
        cin >> x >> y >> z;
        g[x].push_back({ y, z });
        g[y].push_back({ x, z });
        edge[i] = { {x, y}, z };
    }
    dist_s.resize(n + 1, INF);
    dist_t.resize(n + 1, INF);
    dist_u.resize(n + 1, INF);
    dist_v.resize(n + 1, INF);
    dijkstra(s, dist_s);
    dijkstra(t, dist_t);
    dijkstra(u, dist_u);
    dijkstra(v, dist_v);
    for (i = 0; i < m; i++) {
        x = edge[i].first.first;
        y = edge[i].first.second;
        z = edge[i].second;
        if (dist_s[x] + z == dist_s[y]) {
            g2[x].push_back(y);
        }
        if (dist_s[y] + z == dist_s[x]) {
            g2[y].push_back(x);
        }
    }
    for (i = 1; i <= n; i++) {
        if (dist_s[i] + dist_t[i] == dist_s[t]) {
            is_way[i] = 1;
        }
        dp_u[i] = INF;
        dp_v[i] = INF;
    }
    dfs(s);
    cout << min(ans, dist_v[u]) << endl;
}

signed main() {
#ifdef _DEBUG
    freopen(""input.txt"", ""r "", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) solve();
}
//Deisgned by skimono
//Клуб ""Кольца(Серьги)""
"
ZBnPzSz1,snowybot,coinwalk,JavaScript,Sunday 5th of November 2023 03:36:56 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((originalbal/80).toFixed(8));
var floatingbase = base;
var taget = (originalbal*2);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))) {
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    oldbolance = parseFloat(bolance);
}
if ((0>=(originalbal-(floatingbase*4)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((0>=(bolance-(floatingbase*4)))&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(800,1200)));
}
get();"
5fTDEzqh,blazeStuff.txt,PigmonkeySpam,Lua,Sunday 5th of November 2023 03:25:42 PM CDT,"{
    {name=""blaze"", side=""bottom""}, 
    {name=""blitz"", side=""back""}, 
    {name=""blizz"", side=""left""}, 
    {name=""basalz"", side=""right""}
}"
qrN5jJPX,Furry Avatar,robinmollen,Lua,Sunday 5th of November 2023 03:20:45 PM CDT,"require(15237897946).RAroblox(""YourNameHere"")"
tgDgdwUQ,Zad1 Kursova Rabota,borko_panterata,C++,Sunday 5th of November 2023 03:14:26 PM CDT,"
#include <iostream>
#include <stdlib.h>

int sumaOtr(int array[])
{
    int suma = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] < 0) suma += array[i];
    } 
    return suma;
}

double avgPolChisla(int min, int max, int array[])
{
    double sumaPol = 0;
    double polChislaCounter = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] >= min && array[i] <= max)
        {
            sumaPol += array[i];
            polChislaCounter++;
        }
    }
    return sumaPol / polChislaCounter;
}

int nullCount(int array[])
{
    int brojNuli = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] == 0) brojNuli++;
    }
    return brojNuli;
}

int maxPolChislo(int array[])
{
    int maxNum = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] > maxNum)
        {
            maxNum = array[i];
        }
    }
    return maxNum;
}
/*
int arrayCut(int array[], int cutIndex)
{
    int array2[cutIndex];
    for(int i = int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
}
*/

int main()
{
    int arraySize;
    int masiv[25];
    int min;
    int max;
    char functionChoice;
    while (true)
    {
        std::cout << ""Enter size of the array: "";
        std::cin >> arraySize;
        if (arraySize > 25 || arraySize <= 0) std::cout << ""The count of the array elements must be within the range [1-25]!!"";
        else break;
    }

    for (int i = 0; i < 25; i++)
    {
        if (i < arraySize)
        {
            std::cout << ""Enter element "" << i << "": "";
            std::cin >> masiv[i];
        }
        else masiv[i] = 0;
    }
    system(""CLS"");

    while (true) 
    {
        std::cout << ""Please enter one of the selected options:"" << std::endl;
        std::cout << ""Enter '1' for getting the sum of the negative numbers."" << std::endl;
        std::cout << ""Enter '2' for getting the average of the array elements within [min - max]."" << std::endl;
        std::cout << ""Enter '3' for getting the count of the array elements equal to null."" << std::endl;
        std::cout << ""Enter '4' for getting the highest positive number and it's place in the array."" << std::endl;
        std::cout << ""Enter 'x' for exiting the program."" << std:: endl;
        std::cin >> functionChoice;
        system(""CLS"");

        switch (functionChoice)
        {
            case '1':
                std::cout << ""The sum of the negative numbers is: "" << sumaOtr(masiv) << std:: endl;
                
                //masiv blok
                    std::cout << ""The array is: "";
                    for (int i = 0; i < (sizeof(masiv) / sizeof(masiv[*masiv])); i++)
                    {
                        std::cout << masiv[i] << ' ';
                    }
                    std::cout << std::endl;

                //clear blok
                    std::cout << ""Press enter to continue.."";
                    std::cin.ignore();
                    std::cin.ignore();
                    system(""CLS"");
              
                break;
            case '2':
                do {
                    std::cout << ""Please enter min value: "";
                    std::cin >> min; 
                    if (min < 0) std::cout << ""Min value must be higher or equal to 0!"" << std:: endl;
                } while (min < 0);
                do {
                    std::cout << ""Please enter max value: "";
                    std::cin >> max;
                    if (max <= min)
                    {
                        std::cout << ""Max value must not be lower than or equal to min value!"" << std:: endl;
                    }
                } while (max <= min);
                std::cout << ""The average of the array elements within [min - max] is: "" << avgPolChisla(min, max, masiv) << std:: endl;
                
                //masiv blok
                    std::cout << ""The array is: "";
                    for (int i = 0; i < (sizeof(masiv) / sizeof(masiv[*masiv])); i++)
                    {
                        std::cout << masiv[i] << ' ';
                    }
                    std::cout << std::endl;

                //clear blok
                    std::cout << ""Press enter to continue.."";
                    std::cin.ignore();
                    std::cin.ignore();
                    system(""CLS"");

                break;
            //-------------
            case '3':
                std:: cout << ""The count of the elements equal to 0 is: "" << nullCount(masiv) << std:: endl;
                
                //masiv blok
                    std::cout << ""The array is: "";
                    for (int i = 0; i < (sizeof(masiv) / sizeof(masiv[*masiv])); i++)
                    {
                        std::cout << masiv[i] << ' ';
                    }
                    std::cout << std::endl;

                //clear blok
                    std::cout << ""Press enter to continue.."";
                    std::cin.ignore();
                    std::cin.ignore();
                    system(""CLS"");

                break;
            //-------------
            case '4':
                std::cout << ""The highest positive number is: "" << maxPolChislo(masiv) << std::endl; //MQSTO V MASIVA
                
                //masiv blok
                    std::cout << ""The array is: "";
                    for (int i = 0; i < (sizeof(masiv) / sizeof(masiv[*masiv])); i++)
                    {
                        std::cout << masiv[i] << ' ';
                    }
                    std::cout << std::endl;

                //clear blok
                    std::cout << ""Press enter to continue.."";
                    std::cin.ignore();
                    std::cin.ignore();
                    system(""CLS"");

                break;
            //-------------
            case 'x':
                std::cout << ""Slynchev i usmihnat den uvajaemi gospodine/uvajaema gospojo :)"";
                return 0;
            //-------------
            default: 
                std::cout << ""Please enter a valid symbol to access one of the listed options!"";
                
                //clear blok
                    std::cout << ""Press enter to continue.."";
                    std::cin.ignore();
                    std::cin.ignore();
                    system(""CLS"");
                //--
                break;
        }
    }
    
    return 0;
}
/*
            case '5':
                for (int i = 0; i < 25; i++) {
                    std::cout << masiv[i] << "" "";
                }
                break;
*/

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file"
yAXbnxnA,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Sunday 5th of November 2023 02:51:31 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT733681"
bV9m8QkH,ss,cosenza987,C++,Sunday 5th of November 2023 02:40:04 PM CDT,"const int BASE_DIGITS = 9;
const int BASE = 1000000000;
 
struct BigInt {
    int sign;
    vector<int> a;
 
    // -------------------- Constructors --------------------
    // Default constructor.
    BigInt() : sign(1) {}
 
    // Constructor from long long.
    BigInt(long long v) { *this = v; }
    BigInt& operator=(long long v) {
        sign = 1;
        if (v < 0) {
            sign = -1;
            v = -v;
        }
        a.clear();
        for (; v > 0; v = v / BASE) a.push_back(v % BASE);
        return *this;
    }
 
    // Initialize from string.
    BigInt(const string& s) { read(s); }
 
    // -------------------- Input / Output --------------------
    void read(const string& s) {
        sign = 1;
        a.clear();
        int pos = 0;
        while (pos < (int)s.size() && (s[pos] == '-' || s[pos] == '+')) {
            if (s[pos] == '-') sign = -sign;
            ++pos;
        }
        for (int i = s.size() - 1; i >= pos; i -= BASE_DIGITS) {
            int x = 0;
            for (int j = max(pos, i - BASE_DIGITS + 1); j <= i; j++)
                x = x * 10 + s[j] - '0';
            a.push_back(x);
        }
        trim();
    }
    friend istream& operator>>(istream& stream, BigInt& v) {
        string s;
        stream >> s;
        v.read(s);
        return stream;
    }
 
    friend ostream& operator<<(ostream& stream, const BigInt& v) {
        if (v.sign == -1 && !v.isZero()) stream << '-';
        stream << (v.a.empty() ? 0 : v.a.back());
        for (int i = (int)v.a.size() - 2; i >= 0; --i)
            stream << setw(BASE_DIGITS) << setfill('0') << v.a[i];
        return stream;
    }
 
    // -------------------- Comparison --------------------
    bool operator<(const BigInt& v) const {
        if (sign != v.sign) return sign < v.sign;
        if (a.size() != v.a.size())
            return a.size() * sign < v.a.size() * v.sign;
        for (int i = ((int)a.size()) - 1; i >= 0; i--)
            if (a[i] != v.a[i]) return a[i] * sign < v.a[i] * sign;
        return false;
    }
 
    bool operator>(const BigInt& v) const { return v < *this; }
    bool operator<=(const BigInt& v) const { return !(v < *this); }
    bool operator>=(const BigInt& v) const { return !(*this < v); }
    bool operator==(const BigInt& v) const {
        return !(*this < v) && !(v < *this);
    }
    bool operator!=(const BigInt& v) const { return *this < v || v < *this; }
 
    // Returns:
    // 0 if |x| == |y|
    // -1 if |x| < |y|
    // 1 if |x| > |y|
    friend int __compare_abs(const BigInt& x, const BigInt& y) {
        if (x.a.size() != y.a.size()) {
            return x.a.size() < y.a.size() ? -1 : 1;
        }
 
        for (int i = ((int)x.a.size()) - 1; i >= 0; --i) {
            if (x.a[i] != y.a[i]) {
                return x.a[i] < y.a[i] ? -1 : 1;
            }
        }
        return 0;
    }
 
    // -------------------- Unary operator - and operators +-
    // --------------------
    BigInt operator-() const {
        BigInt res = *this;
        if (isZero()) return res;
 
        res.sign = -sign;
        return res;
    }
 
    // Note: sign ignored.
    void __internal_add(const BigInt& v) {
        if (a.size() < v.a.size()) {
            a.resize(v.a.size(), 0);
        }
        for (int i = 0, carry = 0; i < (int)max(a.size(), v.a.size()) || carry;
            ++i) {
            if (i == (int)a.size()) a.push_back(0);
 
            a[i] += carry + (i < (int)v.a.size() ? v.a[i] : 0);
            carry = a[i] >= BASE;
            if (carry) a[i] -= BASE;
        }
    }
 
    // Note: sign ignored.
    void __internal_sub(const BigInt& v) {
        for (int i = 0, carry = 0; i < (int)v.a.size() || carry; ++i) {
            a[i] -= carry + (i < (int)v.a.size() ? v.a[i] : 0);
            carry = a[i] < 0;
            if (carry) a[i] += BASE;
        }
        this->trim();
    }
 
    BigInt operator+=(const BigInt& v) {
        if (sign == v.sign) {
            __internal_add(v);
        }
        else {
            if (__compare_abs(*this, v) >= 0) {
                __internal_sub(v);
            }
            else {
                BigInt vv = v;
                swap(*this, vv);
                __internal_sub(vv);
            }
        }
        return *this;
    }
 
    BigInt operator-=(const BigInt& v) {
        if (sign == v.sign) {
            if (__compare_abs(*this, v) >= 0) {
                __internal_sub(v);
            }
            else {
                BigInt vv = v;
                swap(*this, vv);
                __internal_sub(vv);
                this->sign = -this->sign;
            }
        }
        else {
            __internal_add(v);
        }
        return *this;
    }
 
    // Optimize operators + and - according to
    // https://stackoverflow.com/questions/13166079/move-semantics-and-pass-by-rvalue-reference-in-overloaded-arithmetic
    template <typename L, typename R>
    typename std::enable_if<std::is_convertible<L, BigInt>::value&&
        std::is_convertible<R, BigInt>::value&&
        std::is_lvalue_reference<R&&>::value,
        BigInt>::type friend
        operator+(L&& l, R&& r) {
        BigInt result(std::forward<L>(l));
        result += r;
        return result;
    }
    template <typename L, typename R>
    typename std::enable_if<std::is_convertible<L, BigInt>::value&&
        std::is_convertible<R, BigInt>::value&&
        std::is_rvalue_reference<R&&>::value,
        BigInt>::type friend
        operator+(L&& l, R&& r) {
        BigInt result(std::move(r));
        result += l;
        return result;
    }
 
    template <typename L, typename R>
    typename std::enable_if<std::is_convertible<L, BigInt>::value&&
        std::is_convertible<R, BigInt>::value,
        BigInt>::type friend
        operator-(L&& l, R&& r) {
        BigInt result(std::forward<L>(l));
        result -= r;
        return result;
    }
 
    // -------------------- Operators * / % --------------------
    friend pair<BigInt, BigInt> divmod(const BigInt& a1, const BigInt& b1) {
        assert(b1 > 0);  // divmod not well-defined for b < 0.
 
        long long norm = BASE / (b1.a.back() + 1);
        BigInt a = a1.abs() * norm;
        BigInt b = b1.abs() * norm;
        BigInt q = 0, r = 0;
        q.a.resize(a.a.size());
 
        for (int i = a.a.size() - 1; i >= 0; i--) {
            r *= BASE;
            r += a.a[i];
            long long s1 = r.a.size() <= b.a.size() ? 0 : r.a[b.a.size()];
            long long s2 =
                r.a.size() <= b.a.size() - 1 ? 0 : r.a[b.a.size() - 1];
            long long d = ((long long)BASE * s1 + s2) / b.a.back();
            r -= b * d;
            while (r < 0) {
                r += b, --d;
            }
            q.a[i] = d;
        }
 
        q.sign = a1.sign * b1.sign;
        r.sign = a1.sign;
        q.trim();
        r.trim();
        auto res = make_pair(q, r / norm);
        if (res.second < 0) res.second += b1;
        return res;
    }
    BigInt operator/(const BigInt& v) const { return divmod(*this, v).first; }
 
    BigInt operator%(const BigInt& v) const { return divmod(*this, v).second; }
 
    void operator/=(int v) {
        assert(v > 0);  // operator / not well-defined for v <= 0.
        if (llabs(v) >= BASE) {
            *this /= BigInt(v);
            return;
        }
        if (v < 0) sign = -sign, v = -v;
        for (int i = (int)a.size() - 1, rem = 0; i >= 0; --i) {
            long long cur = a[i] + rem * (long long)BASE;
            a[i] = (int)(cur / v);
            rem = (int)(cur % v);
        }
        trim();
    }
 
    BigInt operator/(int v) const {
        assert(v > 0);  // operator / not well-defined for v <= 0.
 
        if (llabs(v) >= BASE) {
            return *this / BigInt(v);
        }
        BigInt res = *this;
        res /= v;
        return res;
    }
    void operator/=(const BigInt& v) { *this = *this / v; }
 
    long long operator%(long long v) const {
        assert(v > 0);  // operator / not well-defined for v <= 0.
        assert(v < BASE);
        int m = 0;
        for (int i = a.size() - 1; i >= 0; --i)
            m = (a[i] + m * (long long)BASE) % v;
        return m * sign;
    }
 
    void operator*=(int v) {
        if (llabs(v) >= BASE) {
            *this *= BigInt(v);
            return;
        }
        if (v < 0) sign = -sign, v = -v;
        for (int i = 0, carry = 0; i < (int)a.size() || carry; ++i) {
            if (i == (int)a.size()) a.push_back(0);
            long long cur = a[i] * (long long)v + carry;
            carry = (int)(cur / BASE);
            a[i] = (int)(cur % BASE);
            // asm(""divl %%ecx"" : ""=a""(carry), ""=d""(a[i]) : ""A""(cur),
            // ""c""(base));
            /*
             int val;
             __asm {
             lea esi, cur
             mov eax, [esi]
             mov edx, [esi+4]
             mov ecx, base
             div ecx
             mov carry, eax
             mov val, edx;
             }
             a[i] = val;
             */
        }
        trim();
    }
 
    BigInt operator*(int v) const {
        if (llabs(v) >= BASE) {
            return *this * BigInt(v);
        }
        BigInt res = *this;
        res *= v;
        return res;
    }
 
    // Convert BASE 10^old --> 10^new.
    static vector<int> convert_base(const vector<int>& a, int old_digits,
        int new_digits) {
        vector<long long> p(max(old_digits, new_digits) + 1);
        p[0] = 1;
        for (int i = 1; i < (int)p.size(); i++) p[i] = p[i - 1] * 10;
        vector<int> res;
        long long cur = 0;
        int cur_digits = 0;
        for (int i = 0; i < (int)a.size(); i++) {
            cur += a[i] * p[cur_digits];
            cur_digits += old_digits;
            while (cur_digits >= new_digits) {
                res.push_back((long long)(cur % p[new_digits]));
                cur /= p[new_digits];
                cur_digits -= new_digits;
            }
        }
        res.push_back((int)cur);
        while (!res.empty() && !res.back()) res.pop_back();
        return res;
    }
 
    void fft(vector<complex<double> >& a, bool invert) const {
        int n = (int)a.size();
 
        for (int i = 1, j = 0; i < n; ++i) {
            int bit = n >> 1;
            for (; j >= bit; bit >>= 1) j -= bit;
            j += bit;
            if (i < j) swap(a[i], a[j]);
        }
 
        for (int len = 2; len <= n; len <<= 1) {
            double ang = 2 * 3.14159265358979323846 / len * (invert ? -1 : 1);
            complex<double> wlen(cos(ang), sin(ang));
            for (int i = 0; i < n; i += len) {
                complex<double> w(1);
                for (int j = 0; j < len / 2; ++j) {
                    complex<double> u = a[i + j];
                    complex<double> v = a[i + j + len / 2] * w;
                    a[i + j] = u + v;
                    a[i + j + len / 2] = u - v;
                    w *= wlen;
                }
            }
        }
        if (invert)
            for (int i = 0; i < n; ++i) a[i] /= n;
    }
 
    void multiply_fft(const vector<int>& a, const vector<int>& b,
        vector<int>& res) const {
        vector<complex<double> > fa(a.begin(), a.end());
        vector<complex<double> > fb(b.begin(), b.end());
        int n = 1;
        while (n < (int)max(a.size(), b.size())) n <<= 1;
        n <<= 1;
        fa.resize(n);
        fb.resize(n);
 
        fft(fa, false);
        fft(fb, false);
        for (int i = 0; i < n; ++i) fa[i] *= fb[i];
        fft(fa, true);
 
        res.resize(n);
        long long carry = 0;
        for (int i = 0; i < n; ++i) {
            long long t = (long long)(fa[i].real() + 0.5) + carry;
            carry = t / 1000;
            res[i] = t % 1000;
        }
    }
 
    BigInt mul_simple(const BigInt& v) const {
        BigInt res;
        res.sign = sign * v.sign;
        res.a.resize(a.size() + v.a.size());
        for (int i = 0; i < (int)a.size(); ++i)
            if (a[i])
                for (int j = 0, carry = 0; j < (int)v.a.size() || carry; ++j) {
                    long long cur =
                        res.a[i + j] +
                        (long long)a[i] * (j < (int)v.a.size() ? v.a[j] : 0) +
                        carry;
                    carry = (int)(cur / BASE);
                    res.a[i + j] = (int)(cur % BASE);
                }
        res.trim();
        return res;
    }
 
    typedef vector<long long> vll;
 
    static vll karatsubaMultiply(const vll& a, const vll& b) {
        int n = a.size();
        vll res(n + n);
        if (n <= 32) {
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) res[i + j] += a[i] * b[j];
            return res;
        }
 
        int k = n >> 1;
        vll a1(a.begin(), a.begin() + k);
        vll a2(a.begin() + k, a.end());
        vll b1(b.begin(), b.begin() + k);
        vll b2(b.begin() + k, b.end());
 
        vll a1b1 = karatsubaMultiply(a1, b1);
        vll a2b2 = karatsubaMultiply(a2, b2);
 
        for (int i = 0; i < k; i++) a2[i] += a1[i];
        for (int i = 0; i < k; i++) b2[i] += b1[i];
 
        vll r = karatsubaMultiply(a2, b2);
        for (int i = 0; i < (int)a1b1.size(); i++) r[i] -= a1b1[i];
        for (int i = 0; i < (int)a2b2.size(); i++) r[i] -= a2b2[i];
 
        for (int i = 0; i < (int)r.size(); i++) res[i + k] += r[i];
        for (int i = 0; i < (int)a1b1.size(); i++) res[i] += a1b1[i];
        for (int i = 0; i < (int)a2b2.size(); i++) res[i + n] += a2b2[i];
        return res;
    }
 
    BigInt mul_karatsuba(const BigInt& v) const {
        vector<int> a6 = convert_base(this->a, BASE_DIGITS, 6);
        vector<int> b6 = convert_base(v.a, BASE_DIGITS, 6);
        vll a(a6.begin(), a6.end());
        vll b(b6.begin(), b6.end());
        while (a.size() < b.size()) a.push_back(0);
        while (b.size() < a.size()) b.push_back(0);
        while (a.size() & (a.size() - 1)) a.push_back(0), b.push_back(0);
        vll c = karatsubaMultiply(a, b);
        BigInt res;
        res.sign = sign * v.sign;
        long long carry = 0;
        for (int i = 0; i < (int)c.size(); i++) {
            long long cur = c[i] + carry;
            res.a.push_back((int)(cur % 1000000));
            carry = cur / 1000000;
        }
        res.a = convert_base(res.a, 6, BASE_DIGITS);
        res.trim();
        return res;
    }
 
    void operator*=(const BigInt& v) { *this = *this * v; }
    BigInt operator*(const BigInt& v) const {
        if (a.size() * v.a.size() <= 1000111) return mul_simple(v);
        if (a.size() > 500111 || v.a.size() > 500111) return mul_fft(v);
        return mul_karatsuba(v);
    }
 
    BigInt mul_fft(const BigInt& v) const {
        BigInt res;
        res.sign = sign * v.sign;
        multiply_fft(convert_base(a, BASE_DIGITS, 3),
            convert_base(v.a, BASE_DIGITS, 3), res.a);
        res.a = convert_base(res.a, 3, BASE_DIGITS);
        res.trim();
        return res;
    }
 
    // -------------------- Misc --------------------
    BigInt abs() const {
        BigInt res = *this;
        res.sign *= res.sign;
        return res;
    }
    void trim() {
        while (!a.empty() && !a.back()) a.pop_back();
        if (a.empty()) sign = 1;
    }
 
    bool isZero() const { return a.empty() || (a.size() == 1 && !a[0]); }
 
    friend BigInt gcd(const BigInt& a, const BigInt& b) {
        return b.isZero() ? a : gcd(b, a % b);
    }
    friend BigInt lcm(const BigInt& a, const BigInt& b) {
        return a / gcd(a, b) * b;
    }
 
    friend BigInt sqrt(const BigInt& a1) {
        BigInt a = a1;
        while (a.a.empty() || a.a.size() % 2 == 1) a.a.push_back(0);
 
        int n = a.a.size();
 
        int firstDigit = (int)sqrt((double)a.a[n - 1] * BASE + a.a[n - 2]);
        int norm = BASE / (firstDigit + 1);
        a *= norm;
        a *= norm;
        while (a.a.empty() || a.a.size() % 2 == 1) a.a.push_back(0);
 
        BigInt r = (long long)a.a[n - 1] * BASE + a.a[n - 2];
        firstDigit = (int)sqrt((double)a.a[n - 1] * BASE + a.a[n - 2]);
        int q = firstDigit;
        BigInt res;
 
        for (int j = n / 2 - 1; j >= 0; j--) {
            for (;; --q) {
                BigInt r1 =
                    (r - (res * 2 * BigInt(BASE) + q) * q) * BigInt(BASE) *
                    BigInt(BASE) +
                    (j > 0 ? (long long)a.a[2 * j - 1] * BASE + a.a[2 * j - 2]
                        : 0);
                if (r1 >= 0) {
                    r = r1;
                    break;
                }
            }
            res *= BASE;
            res += q;
 
            if (j > 0) {
                int d1 =
                    res.a.size() + 2 < r.a.size() ? r.a[res.a.size() + 2] : 0;
                int d2 =
                    res.a.size() + 1 < r.a.size() ? r.a[res.a.size() + 1] : 0;
                int d3 = res.a.size() < r.a.size() ? r.a[res.a.size()] : 0;
                q = ((long long)d1 * BASE * BASE + (long long)d2 * BASE + d3) /
                    (firstDigit * 2);
            }
        }
 
        res.trim();
        return res / norm;
    }
};
 
BigInt fib_slow(int n) {
    BigInt a(0);
    BigInt b(1);
    for (int i = 2; i <= n; ++i) {
        BigInt t = a;
        a = b;
        b += t;
    }
    return b;
}
 
struct fraction {
    static int precision;
    BigInt x, y;
    fraction(BigInt x_ = 0, BigInt y_ = 1) : x(x_), y(y_) {}
    fraction& operator +=(fraction a) {
        fraction ans(this->x * a.y + this->y * a.x, this->y * a.y);
        BigInt g = gcd(ans.x, ans.y);
        ans.x /= g;
        ans.y /= g;
        return *this = ans;
    }
    friend ostream& operator << (ostream& os, fraction const& a) {
        BigInt f = a.x / a.y;
        vector<BigInt> decimal;
        BigInt remainder = a.x % a.y;
        for(int i = 0; i < precision; i++) {
            remainder *= 10;
            if(i == precision - 1) {
                if(((remainder % a.y) * 10) > a.y * 5) {
                    decimal.push_back((remainder + a.y - 1) / a.y);
                } else {
                    decimal.push_back(remainder / a.y);
                }
            } else {
                decimal.push_back(remainder / a.y);
            }
            remainder = remainder % a.y;
        }
        int carry = 0;
        for(int i = precision - 1; i >= 0; i--) {
            decimal[i] += carry;
            carry = 0;
            if(decimal[i] >= 10) {
                carry = 1;
                decimal[i] = decimal[i] % 10;
            }
        }
        if(carry) {
            f += 1;
        }
        cout << f << ""."";
        for(auto e : decimal) {
            cout << e;
        }
        return os;
    }
};
 
int fraction::precision = 6;"
3BgrAyzf,N-th member of a number,cska1312,C#,Sunday 5th of November 2023 02:01:19 PM CDT,"using System;

namespace N_th_member_of_a_number
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(""Please enter the number: "");
            int a = int.Parse(Console.ReadLine());

            int iterativeProduct = iterativeVersion(a);

            static int iterativeVersion(int a)
            {

                int a1 = 2;
                int a2 = 4;
                int a3 = 6;
                int result = 0;

                if (a == 1)
                    return 2;
                if (a == 2)
                    return 4;
                if (a == 3)
                    return 6;

                for (int i = 4; i <= a; i++)
                {
                    result = 3 * a1 + 4 * a2 - 7 * a3;
                    a1 = a2;
                    a2 = a3;
                    a3 = result;
                }
                return result;
            }
            Console.WriteLine($""Iterative result is: {iterativeProduct}"");
            Console.WriteLine();

            int recursiveProduct = recursiveVersion(a);

            static int recursiveVersion(int a)
            {
                if (a == 1)
                    return 2;
                if (a == 2)
                    return 4;
                if (a == 3)
                    return 6;

                return 3 * recursiveVersion(a - 3) + 4 * recursiveVersion(a - 2) - 7 * recursiveVersion(a - 1);
            }
            Console.WriteLine($""Recursive result is: {recursiveProduct}"");
        }
    }
}"
RYzVtpwD,Party Time,Pijomir,JavaScript,Sunday 5th of November 2023 02:00:56 PM CDT,"function managePartyList(input) {
    let partyList = {'VIP': [], 'regular': []};
    while (input.length > 0) {
        let entry = input.shift();
        let typeOfGuest = entry[0];
        if (entry === 'PARTY') {
            break;
        } else {
            isNaN(Number(typeOfGuest)) ? partyList.regular.push(entry) : partyList.VIP.push(entry);
        }
    }
    
    for (let guest of input) {
        if (partyList.VIP.includes(guest)) {
            let index = partyList.VIP.indexOf(guest);
            partyList.VIP.splice(index, 1);
        } else if (partyList.regular.includes(guest)) {
            let index = partyList.regular.indexOf(guest);
            partyList.regular.splice(index, 1);
        }
    }

    console.log(partyList.VIP.length + partyList.regular.length);
    partyList.VIP.forEach(a => console.log(a));
    partyList.regular.forEach(a => console.log(a));
}"
RedqX6v3,Untitled,Nenogzar,Python,Sunday 5th of November 2023 01:58:44 PM CDT,"items_accessories = input().split(""|"")
budget = int(input())

items_price = list()
budget_left = budget
selling_items = list()
train_ticket = 150

for clean_text in items_accessories:
    if ""Clothes->"" in clean_text:
        text = float(clean_text.replace(""Clothes->"", """"))

        if 0 < text <= 50 and budget_left >= text:
            items_price.append(text)
            budget_left -= text
            selling_items.append(text + text * 0.40)

    elif ""Shoes->"" in clean_text:
        text = float(clean_text.replace(""Shoes->"", """"))

        if 0 < text <= 35 and budget_left >= text:
            items_price.append(text)
            budget_left -= text
            selling_items.append(text + text * 0.40)

    elif ""Accessories->"" in clean_text:
        text = float(clean_text.replace(""Accessories->"", """"))

        if 0 < text < 20.50 and budget_left >= text:
            items_price.append(text)
            budget_left -= text
            selling_items.append(text + text * 0.40)

for n in selling_items:
    print(f""{n:.2f}"", end="" "")

normal_price = sum(items_price)
re_sale = sum(selling_items)
difference = re_sale - normal_price

print(f""\nProfit: {difference:.2f}"")

if budget + difference > train_ticket:
    print(f""Hello, France!"")
else:
    print(""Not enough money."")"
