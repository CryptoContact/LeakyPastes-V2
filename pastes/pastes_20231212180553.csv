id,title,username,language,date,content
uX84fdkr,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:54:28 AM CDT,"Pasted at: 12/12/2023 17:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
YydF1dex,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:58 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
PidZQwNi,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:57 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
kqyVg77R,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:55 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
SFgMT7GT,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:52 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
Ctzm6aVf,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:49 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
Us2Zu65v,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:46 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
uDmTDUiY,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:41 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
dBxyVCrP,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:38 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
Hf4yeNWR,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 12th of December 2023 11:53:33 AM CDT,"Pasted at: 12/12/2023 17:53
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
DnCHeMbw,Untitled,Josif_tepe,C++,Tuesday 12th of December 2023 11:45:13 AM CDT,"#include <iostream>
#include <queue>
#include <bits/stdc++.h>
using namespace std;
const int maxn = 1e5 + 10;
const double INF = 2e9;
vector<pair<int, double> > graph[maxn];
int n, m;
struct node {
    int idx;
    double cost;
    node () {}
    node(int _idx, double _cost) {
        idx = _idx;
        cost = _cost;
    }
    bool operator < (const node & tmp) const {
        return cost > tmp.cost;
    }
};
void dijkstra(int S, int E) {
    vector<double> dist(n, INF);
    vector<bool> visited(n, false);
    
    dist[S] = 0;
    priority_queue<node> pq;
    pq.push(node(S, 0));
    
    while(!pq.empty()) {
        node c = pq.top();
        pq.pop();
        
        if(visited[c.idx]) continue;
        visited[c.idx] = true;
        
        for(pair<int, double> tmp : graph[c.idx]) {
            int neighbour = tmp.first;
            double weight = tmp.second;
            
            if(!visited[neighbour] and c.cost + weight < dist[neighbour]) {
                pq.push(node(neighbour, c.cost + weight));
                dist[neighbour] = c.cost + weight;
            }
        }
    }
    printf(""%.6lf\n"", dist[E]);
}
int main() {
    int t;
    cin >> t;
    vector<pair<double, double> > v;
    for(int i = 0; i < t; i++) {
        double x, y;
        cin >> x >> y;
        v.push_back(make_pair(x, y));
    }
    for(int i = 0; i < t; i++) {
        for(int j = 0; j < t; j++) {
            double d = sqrt((v[i].first - v[j].first) * (v[i].first - v[j].first) + (v[i].second - v[j].second) * (v[i].second - v[j].second));
            if(d <= 10) {
                graph[i].push_back(make_pair(j, d));
                graph[j].push_back(make_pair(i, d));
                
            }
        }
    }
    
    n = t;
    dijkstra(0, n - 1);
    
    return 0;
}
/*
 5 5
 1 2 2
 2 3 4
 1 3 2
 3 4 5
 4 5 6
 **/
"
W98nCQuu,Untitled,simonedare_,Python,Tuesday 12th of December 2023 11:42:27 AM CDT,"from gpiozero import OutputDevice
# setup PIN as output
gpio_pin = OutputDevice(18, initial_value=True)
# change GPIO status
gpio_pin.toggle()
# wait 40 seconds
time.sleep(40)
# change GPIO status to stop the movement
gpio_pin.toggle()
# close the pin, clear the status
gpio_pin.close()"
0bPpu8Hf,Untitled,simonedare_,Python,Tuesday 12th of December 2023 11:33:12 AM CDT,"#!/usr/bin/env python3
import time
import sys
import gi

gi.require_version(""Gst"", ""1.0"")

from gi.repository import Gst


def main():

    Gst.init(sys.argv)  # init gstreamer
    Gst.debug_set_default_threshold(Gst.DebugLevel.WARNING)

    serial = None

    pipeline = Gst.parse_launch(""tcambin name=bin""
                                "" ! video/x-raw,format=BGRx,width=1920,height=1080,framerate=1/1""
                                "" ! videoconvert""
                                "" ! avimux""
                                "" ! filesink name=fsink"")

    # serial is defined, thus make the source open that device
    if serial is not None:
        camera = pipeline.get_by_name(""bin"")
        camera.set_property(""serial"", serial)

        names = camera.get_tcam_property_names()

        for name in property_names:
            try:
                base = self.source.get_tcam_property(name)
                print(""{}\t{}"".format(base.get_display_name(), name))
            except Exception as error:
                raise RuntimeError(f""Failed to get property '{name}'"") from error

    file_location = ""/root/recordings/test-sdr-"" + str(int(time.time())) + "".avi""

    fsink = pipeline.get_by_name(""fsink"")
    fsink.set_property(""location"", file_location)

    pipeline.set_state(Gst.State.PLAYING)

    print(""recording 5 secs.."")

    time.sleep(5)
    print(""stop recording"")
"
NuDHwSkW,chiComand,Genral,C#,Tuesday 12th of December 2023 11:33:02 AM CDT,"case ""chi"":
                        {
                            foreach (var user in Database.Server.GamePoll.Values)
                            {
                                if (user.Player.Name.ToLower() == data[1].ToLower())
                                {
                                    if (user.Player.MyChi != null)
                                    {
                                        //!chi AmirKhaled[PM] 1 1 7 1
                                        byte Grade = byte.Parse(data[2]);
                                        int Gate = int.Parse(data[3]);
                                        byte Type = byte.Parse(data[4]);
                                        ushort Value = ushort.Parse(data[5]);
                                        switch (Grade)
                                        {
                                            case 1:
                                                {
                                                    user.Player.MyChi.Dragon.RerollGM(Gate, (Role.Instance.Chi.ChiAttributeType)Type, Value);
                                                    Program.ChiRanking.Upadte(Program.ChiRanking.Dragon, user.Player.MyChi.Dragon);
                                                    Role.Instance.Chi.ComputeStatus(user.Player.MyChi);
                                                    user.Equipment.QueryEquipment(user.Equipment.Alternante, false);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Send);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Upgrade);
                                                    break;
                                                }
                                            case 2:
                                                {
                                                    user.Player.MyChi.Phoenix.RerollGM(Gate, (Role.Instance.Chi.ChiAttributeType)Type, Value);
                                                    Program.ChiRanking.Upadte(Program.ChiRanking.Dragon, user.Player.MyChi.Phoenix);
                                                    Role.Instance.Chi.ComputeStatus(user.Player.MyChi);
                                                    user.Equipment.QueryEquipment(user.Equipment.Alternante, false);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Send);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Upgrade);
                                                    break;
                                                }
                                            case 3:
                                                {
                                                    user.Player.MyChi.Tiger.RerollGM(Gate, (Role.Instance.Chi.ChiAttributeType)Type, Value);
                                                    Program.ChiRanking.Upadte(Program.ChiRanking.Dragon, user.Player.MyChi.Tiger);
                                                    Role.Instance.Chi.ComputeStatus(user.Player.MyChi);
                                                    user.Equipment.QueryEquipment(user.Equipment.Alternante, false);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Send);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Upgrade);
                                                    break;
                                                }
                                            case 4:
                                                {
                                                    user.Player.MyChi.Turtle.RerollGM(Gate, (Role.Instance.Chi.ChiAttributeType)Type, Value);
                                                    Program.ChiRanking.Upadte(Program.ChiRanking.Dragon, user.Player.MyChi.Turtle);
                                                    Role.Instance.Chi.ComputeStatus(user.Player.MyChi);
                                                    user.Equipment.QueryEquipment(user.Equipment.Alternante, false);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Send);
                                                    Project_ConquerX.Game.MsgServer.MsgChiInfo.MsgHandleChi.SendInfo(user, MsgChiInfo.Action.Upgrade);
                                                    break;
                                                }
                                            default:
                                                break;
                                        }
                                    }
                                }
                            }
                            break;
                        }"
wG03hRTa,Untitled,Josif_tepe,C++,Tuesday 12th of December 2023 11:30:12 AM CDT,"#include <iostream>
#include <queue>
#include <vector>
using namespace std;
const int maxn = 1e5 + 10;
const int INF = 1e9;
vector<pair<int, int> > graph[maxn];
int n, m;
struct node {
    int idx;
    int cost;
    node () {}
    node(int _idx, int _cost) {
        idx = _idx;
        cost = _cost;
    }
    bool operator < (const node & tmp) const {
        return cost > tmp.cost;
    }
};
void dijkstra(int S, int E) {
    vector<int> dist(n, INF);
    vector<bool> visited(n, false);
    
    dist[S] = 0;
    priority_queue<node> pq;
    pq.push(node(S, 0));
    
    while(!pq.empty()) {
        node c = pq.top();
        pq.pop();
        
        if(visited[c.idx]) continue;
        visited[c.idx] = true;
        
        for(pair<int, int> tmp : graph[c.idx]) {
            int neighbour = tmp.first;
            int weight = tmp.second;
            
            if(!visited[neighbour] and c.cost + weight < dist[neighbour]) {
                pq.push(node(neighbour, c.cost + weight));
                dist[neighbour] = c.cost + weight;
            }
        }
    }
    cout << dist[E] << endl;
}
int main() {
    cin >> n >> m;
    
    for(int i =0 ; i < m; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        a--; b--;
        graph[a].push_back(make_pair(b, c));
        graph[b].push_back(make_pair(a, c));
    }
    dijkstra(0, 4);
    
    return 0;
}
/*
 5 5
 1 2 2
 2 3 4
 1 3 2
 3 4 5
 4 5 6
 **/
"
dhvuZS7N,BTC Wallet Credentials have been reset,castlclass_20,GetText,Tuesday 12th of December 2023 11:17:49 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
anotuojar1:xqVMFS on 212.224.93.130
You can connect via SSH.
Regards"
Z2j033QG,麻將,excellent940707,C,Tuesday 12th of December 2023 11:16:02 AM CDT,"#include <bits/stdc++.h>
using namespace std;
int cnt[34];
bool count_continue(int begin, int end){
     for(int i=begin;i<=end;++i){
          if(cnt[i]>=1&&cnt[i+1]>=1&&cnt[i+2]>=1){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               return 1;
          }
     }
     return 0;
}
bool check(){
     int now_num=0;
     for(int t=0;t<6;++t){
          bool valid=0;
          if(t==5)now_num=2;
          else now_num=3;
          if(now_num==3){
               if(count_continue(0,5)){
                    valid=1;
               }else if(count_continue(9,14)){
                    valid=1;
               }else if(count_continue(18,23)){
                    valid=1;
               }else if(count_continue(27,30)){
                    valid=1;
               }else{
                    for(int i=0;i<34;++i){
                         if(cnt[i]>=3){
                              valid=1;
                              cnt[i]-=3;
                              break;
                         }
                    }
               }
          }else{
               for(int i=0;i<34;++i){
                    if(cnt[i]>=2){
                         valid=1;
                         cnt[i]-=2;
                    }
               }
          }

          /*for(int i=0;i<34;++i){
               cout<<cnt[i]<<' ';
          }cout<<'\n';*/

          if(!valid){
               return 0;
          }
     }
     return 1;
}
int main() {
     int num;
     for(int i=0;i<17;++i){
          scanf(""%d"", &num);
          cnt[num]+=1;
     }
     printf(""%d"",check());
    return 0;
}"
LNCmwu2V,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Tuesday 12th of December 2023 11:07:22 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-920306"
UHrMrRyd,ł u k a s z,banetkaa,CSS,Tuesday 12th of December 2023 11:05:49 AM CDT,"<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"" />
    <title>index</title>
    <style>
        #content {
        background-color: #ff0000;
        width: 100%;
        height: 500px;
        border: solid black 3px;
        }
        #baner {
            background-color: rgb(0,255,0);
            width: 100%;
            height: 20%;
            text-align: center;
        }
        .menu {
            width: calc(25% - 3px);
            height: 10%;
            border-top: solid black 3px;
            border-bottom: solid red 3px;
            float: left;
            text-align: center;
        }
        #menu-1 {
            background-color: yellow;
            border-right: solid black 4px;	
        }
        #menu-2 {
            background-color: #FFA500;
            border-right: solid black 4px;	
        }
        #menu-3 {
            background-color: purple;
            border-right: solid black 4px;
        }
        #menu-4 {
            background-color: gray;
        }
        #glowne {
            background-color: #0f0f0f;
            width: 100%;
            height: 70%;
            color: white;
            text-align: center;
        }
        #footer {
            background-color: brown;
            width: 100%;
            height: 10%;
            text-align: center;
            color: white;
        }
    </style>
</head>
<body style=""width: 100%; height: 100%;"">
    <div id=""content"">
        <div id=""baner"">Miejsce na baner</div>
        <div class=""menu"" id=""menu-1"">Menu 1</div>
        <div class=""menu"" id=""menu-2"">Menu 2</div>
        <div class=""menu"" id=""menu-3"">Menu 3</div>
        <div class=""menu"" id=""menu-4"">Menu 4</div>
        <div id=""glowne"">Okno główne</div>
        <div id=""footer"">Stopka</div>
    </div>
</body>
</html>"
9gii6QdU,Nigerian scammers [12-12-2/2023],bombaires,AIMMS,Tuesday 12th of December 2023 11:04:11 AM CDT,"<a href=""mailto:royalbankofcanada008@googlemail.com"">royalbankofcanada008@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+22980@googlemail.com"">royalbankofcanada008+22980@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+9124@googlemail.com"">royalbankofcanada008+9124@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+9977@googlemail.com"">royalbankofcanada008+9977@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+27487@googlemail.com"">royalbankofcanada008+27487@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+30718@googlemail.com"">royalbankofcanada008+30718@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+27344@googlemail.com"">royalbankofcanada008+27344@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+13122@googlemail.com"">royalbankofcanada008+13122@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+26945@googlemail.com"">royalbankofcanada008+26945@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+1725@googlemail.com"">royalbankofcanada008+1725@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+30876@googlemail.com"">royalbankofcanada008+30876@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+21211@googlemail.com"">royalbankofcanada008+21211@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+28580@googlemail.com"">royalbankofcanada008+28580@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+14044@googlemail.com"">royalbankofcanada008+14044@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+10898@googlemail.com"">royalbankofcanada008+10898@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+30382@googlemail.com"">royalbankofcanada008+30382@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+11499@googlemail.com"">royalbankofcanada008+11499@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+32632@googlemail.com"">royalbankofcanada008+32632@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+25428@googlemail.com"">royalbankofcanada008+25428@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+5829@googlemail.com"">royalbankofcanada008+5829@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+16361@googlemail.com"">royalbankofcanada008+16361@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+5428@googlemail.com"">royalbankofcanada008+5428@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+10188@googlemail.com"">royalbankofcanada008+10188@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+11467@googlemail.com"">royalbankofcanada008+11467@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+14365@googlemail.com"">royalbankofcanada008+14365@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+13019@googlemail.com"">royalbankofcanada008+13019@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+14549@googlemail.com"">royalbankofcanada008+14549@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+14941@googlemail.com"">royalbankofcanada008+14941@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+31909@googlemail.com"">royalbankofcanada008+31909@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+28870@googlemail.com"">royalbankofcanada008+28870@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+16898@googlemail.com"">royalbankofcanada008+16898@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+11274@googlemail.com"">royalbankofcanada008+11274@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+1612@googlemail.com"">royalbankofcanada008+1612@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+19275@googlemail.com"">royalbankofcanada008+19275@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+9967@googlemail.com"">royalbankofcanada008+9967@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+12235@googlemail.com"">royalbankofcanada008+12235@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+28684@googlemail.com"">royalbankofcanada008+28684@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+14654@googlemail.com"">royalbankofcanada008+14654@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+9879@googlemail.com"">royalbankofcanada008+9879@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+31145@googlemail.com"">royalbankofcanada008+31145@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+27547@googlemail.com"">royalbankofcanada008+27547@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+23298@googlemail.com"">royalbankofcanada008+23298@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+8220@googlemail.com"">royalbankofcanada008+8220@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+230@googlemail.com"">royalbankofcanada008+230@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+13452@googlemail.com"">royalbankofcanada008+13452@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+4097@googlemail.com"">royalbankofcanada008+4097@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+29461@googlemail.com"">royalbankofcanada008+29461@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+11373@googlemail.com"">royalbankofcanada008+11373@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+21757@googlemail.com"">royalbankofcanada008+21757@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+22904@googlemail.com"">royalbankofcanada008+22904@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+7446@googlemail.com"">royalbankofcanada008+7446@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+12109@googlemail.com"">royalbankofcanada008+12109@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+31997@googlemail.com"">royalbankofcanada008+31997@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+3596@googlemail.com"">royalbankofcanada008+3596@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+309@googlemail.com"">royalbankofcanada008+309@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+14409@googlemail.com"">royalbankofcanada008+14409@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+17759@googlemail.com"">royalbankofcanada008+17759@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+28449@googlemail.com"">royalbankofcanada008+28449@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+21118@googlemail.com"">royalbankofcanada008+21118@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+1036@googlemail.com"">royalbankofcanada008+1036@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+12628@googlemail.com"">royalbankofcanada008+12628@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+98@googlemail.com"">royalbankofcanada008+98@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+9660@googlemail.com"">royalbankofcanada008+9660@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+8286@googlemail.com"">royalbankofcanada008+8286@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+5505@googlemail.com"">royalbankofcanada008+5505@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+20966@googlemail.com"">royalbankofcanada008+20966@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+22586@googlemail.com"">royalbankofcanada008+22586@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+27391@googlemail.com"">royalbankofcanada008+27391@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+28196@googlemail.com"">royalbankofcanada008+28196@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+27699@googlemail.com"">royalbankofcanada008+27699@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+21718@googlemail.com"">royalbankofcanada008+21718@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+29680@googlemail.com"">royalbankofcanada008+29680@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+7370@googlemail.com"">royalbankofcanada008+7370@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+15350@googlemail.com"">royalbankofcanada008+15350@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+19562@googlemail.com"">royalbankofcanada008+19562@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+4611@googlemail.com"">royalbankofcanada008+4611@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+32663@googlemail.com"">royalbankofcanada008+32663@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+24123@googlemail.com"">royalbankofcanada008+24123@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+11655@googlemail.com"">royalbankofcanada008+11655@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+61@googlemail.com"">royalbankofcanada008+61@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+22452@googlemail.com"">royalbankofcanada008+22452@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+6334@googlemail.com"">royalbankofcanada008+6334@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+30472@googlemail.com"">royalbankofcanada008+30472@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+31355@googlemail.com"">royalbankofcanada008+31355@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+30452@googlemail.com"">royalbankofcanada008+30452@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+23106@googlemail.com"">royalbankofcanada008+23106@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+1426@googlemail.com"">royalbankofcanada008+1426@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+6905@googlemail.com"">royalbankofcanada008+6905@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+2188@googlemail.com"">royalbankofcanada008+2188@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+14484@googlemail.com"">royalbankofcanada008+14484@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+15324@googlemail.com"">royalbankofcanada008+15324@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+25697@googlemail.com"">royalbankofcanada008+25697@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+430@googlemail.com"">royalbankofcanada008+430@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+9750@googlemail.com"">royalbankofcanada008+9750@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+31457@googlemail.com"">royalbankofcanada008+31457@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+23590@googlemail.com"">royalbankofcanada008+23590@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+21701@googlemail.com"">royalbankofcanada008+21701@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+30148@googlemail.com"">royalbankofcanada008+30148@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+6821@googlemail.com"">royalbankofcanada008+6821@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+2671@googlemail.com"">royalbankofcanada008+2671@googlemail.com</a>
<a href=""mailto:royalbankofcanada008+15793@googlemail.com"">royalbankofcanada008+15793@googlemail.com</a>
<a href=""mailto:mr.howardbruce88@googlemail.com"">mr.howardbruce88@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+23242@googlemail.com"">mr.howardbruce88+23242@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+9261@googlemail.com"">mr.howardbruce88+9261@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+10833@googlemail.com"">mr.howardbruce88+10833@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+21072@googlemail.com"">mr.howardbruce88+21072@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+14096@googlemail.com"">mr.howardbruce88+14096@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+11841@googlemail.com"">mr.howardbruce88+11841@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+24276@googlemail.com"">mr.howardbruce88+24276@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+32129@googlemail.com"">mr.howardbruce88+32129@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+27412@googlemail.com"">mr.howardbruce88+27412@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+1583@googlemail.com"">mr.howardbruce88+1583@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+26010@googlemail.com"">mr.howardbruce88+26010@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+28752@googlemail.com"">mr.howardbruce88+28752@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+11026@googlemail.com"">mr.howardbruce88+11026@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+24764@googlemail.com"">mr.howardbruce88+24764@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+13949@googlemail.com"">mr.howardbruce88+13949@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+9323@googlemail.com"">mr.howardbruce88+9323@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+7886@googlemail.com"">mr.howardbruce88+7886@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+7017@googlemail.com"">mr.howardbruce88+7017@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+20315@googlemail.com"">mr.howardbruce88+20315@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+26408@googlemail.com"">mr.howardbruce88+26408@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+28152@googlemail.com"">mr.howardbruce88+28152@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+29005@googlemail.com"">mr.howardbruce88+29005@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+26025@googlemail.com"">mr.howardbruce88+26025@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+8900@googlemail.com"">mr.howardbruce88+8900@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+10521@googlemail.com"">mr.howardbruce88+10521@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+24898@googlemail.com"">mr.howardbruce88+24898@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+2494@googlemail.com"">mr.howardbruce88+2494@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+12005@googlemail.com"">mr.howardbruce88+12005@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+9795@googlemail.com"">mr.howardbruce88+9795@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+15538@googlemail.com"">mr.howardbruce88+15538@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+18360@googlemail.com"">mr.howardbruce88+18360@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+5875@googlemail.com"">mr.howardbruce88+5875@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+1819@googlemail.com"">mr.howardbruce88+1819@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+1001@googlemail.com"">mr.howardbruce88+1001@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+3546@googlemail.com"">mr.howardbruce88+3546@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+954@googlemail.com"">mr.howardbruce88+954@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+12269@googlemail.com"">mr.howardbruce88+12269@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+16197@googlemail.com"">mr.howardbruce88+16197@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+23334@googlemail.com"">mr.howardbruce88+23334@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+23923@googlemail.com"">mr.howardbruce88+23923@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+4398@googlemail.com"">mr.howardbruce88+4398@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+19225@googlemail.com"">mr.howardbruce88+19225@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+27377@googlemail.com"">mr.howardbruce88+27377@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+15886@googlemail.com"">mr.howardbruce88+15886@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+3669@googlemail.com"">mr.howardbruce88+3669@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+21628@googlemail.com"">mr.howardbruce88+21628@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+9967@googlemail.com"">mr.howardbruce88+9967@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+14152@googlemail.com"">mr.howardbruce88+14152@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+18267@googlemail.com"">mr.howardbruce88+18267@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+3471@googlemail.com"">mr.howardbruce88+3471@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+23001@googlemail.com"">mr.howardbruce88+23001@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+31954@googlemail.com"">mr.howardbruce88+31954@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+28984@googlemail.com"">mr.howardbruce88+28984@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+9390@googlemail.com"">mr.howardbruce88+9390@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+16315@googlemail.com"">mr.howardbruce88+16315@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+16148@googlemail.com"">mr.howardbruce88+16148@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+21450@googlemail.com"">mr.howardbruce88+21450@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+1657@googlemail.com"">mr.howardbruce88+1657@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+26458@googlemail.com"">mr.howardbruce88+26458@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+21793@googlemail.com"">mr.howardbruce88+21793@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+10937@googlemail.com"">mr.howardbruce88+10937@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+30873@googlemail.com"">mr.howardbruce88+30873@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+20326@googlemail.com"">mr.howardbruce88+20326@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+11892@googlemail.com"">mr.howardbruce88+11892@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+1032@googlemail.com"">mr.howardbruce88+1032@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+25831@googlemail.com"">mr.howardbruce88+25831@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+27582@googlemail.com"">mr.howardbruce88+27582@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+739@googlemail.com"">mr.howardbruce88+739@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+18892@googlemail.com"">mr.howardbruce88+18892@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+7985@googlemail.com"">mr.howardbruce88+7985@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+17437@googlemail.com"">mr.howardbruce88+17437@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+11196@googlemail.com"">mr.howardbruce88+11196@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+14723@googlemail.com"">mr.howardbruce88+14723@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+17589@googlemail.com"">mr.howardbruce88+17589@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+8369@googlemail.com"">mr.howardbruce88+8369@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+3646@googlemail.com"">mr.howardbruce88+3646@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+14297@googlemail.com"">mr.howardbruce88+14297@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+15932@googlemail.com"">mr.howardbruce88+15932@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+22795@googlemail.com"">mr.howardbruce88+22795@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+22257@googlemail.com"">mr.howardbruce88+22257@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+19730@googlemail.com"">mr.howardbruce88+19730@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+11226@googlemail.com"">mr.howardbruce88+11226@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+32542@googlemail.com"">mr.howardbruce88+32542@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+24648@googlemail.com"">mr.howardbruce88+24648@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+24547@googlemail.com"">mr.howardbruce88+24547@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+18903@googlemail.com"">mr.howardbruce88+18903@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+3992@googlemail.com"">mr.howardbruce88+3992@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+15706@googlemail.com"">mr.howardbruce88+15706@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+17440@googlemail.com"">mr.howardbruce88+17440@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+32529@googlemail.com"">mr.howardbruce88+32529@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+20247@googlemail.com"">mr.howardbruce88+20247@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+23634@googlemail.com"">mr.howardbruce88+23634@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+11934@googlemail.com"">mr.howardbruce88+11934@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+13222@googlemail.com"">mr.howardbruce88+13222@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+13182@googlemail.com"">mr.howardbruce88+13182@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+19985@googlemail.com"">mr.howardbruce88+19985@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+25853@googlemail.com"">mr.howardbruce88+25853@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+30155@googlemail.com"">mr.howardbruce88+30155@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+14299@googlemail.com"">mr.howardbruce88+14299@googlemail.com</a>
<a href=""mailto:mr.howardbruce88+28751@googlemail.com"">mr.howardbruce88+28751@googlemail.com</a>
<a href=""mailto:federalreservebank893@googlemail.com"">federalreservebank893@googlemail.com</a>
<a href=""mailto:federalreservebank893+10806@googlemail.com"">federalreservebank893+10806@googlemail.com</a>
<a href=""mailto:federalreservebank893+5190@googlemail.com"">federalreservebank893+5190@googlemail.com</a>
<a href=""mailto:federalreservebank893+15945@googlemail.com"">federalreservebank893+15945@googlemail.com</a>
<a href=""mailto:federalreservebank893+6817@googlemail.com"">federalreservebank893+6817@googlemail.com</a>
<a href=""mailto:federalreservebank893+29608@googlemail.com"">federalreservebank893+29608@googlemail.com</a>
<a href=""mailto:federalreservebank893+13869@googlemail.com"">federalreservebank893+13869@googlemail.com</a>
<a href=""mailto:federalreservebank893+26364@googlemail.com"">federalreservebank893+26364@googlemail.com</a>
<a href=""mailto:federalreservebank893+15762@googlemail.com"">federalreservebank893+15762@googlemail.com</a>
<a href=""mailto:federalreservebank893+15313@googlemail.com"">federalreservebank893+15313@googlemail.com</a>
<a href=""mailto:federalreservebank893+11109@googlemail.com"">federalreservebank893+11109@googlemail.com</a>
<a href=""mailto:federalreservebank893+17122@googlemail.com"">federalreservebank893+17122@googlemail.com</a>
<a href=""mailto:federalreservebank893+7084@googlemail.com"">federalreservebank893+7084@googlemail.com</a>
<a href=""mailto:federalreservebank893+11581@googlemail.com"">federalreservebank893+11581@googlemail.com</a>
<a href=""mailto:federalreservebank893+7941@googlemail.com"">federalreservebank893+7941@googlemail.com</a>
<a href=""mailto:federalreservebank893+25932@googlemail.com"">federalreservebank893+25932@googlemail.com</a>
<a href=""mailto:federalreservebank893+11219@googlemail.com"">federalreservebank893+11219@googlemail.com</a>
<a href=""mailto:federalreservebank893+25040@googlemail.com"">federalreservebank893+25040@googlemail.com</a>
<a href=""mailto:federalreservebank893+26529@googlemail.com"">federalreservebank893+26529@googlemail.com</a>
<a href=""mailto:federalreservebank893+32154@googlemail.com"">federalreservebank893+32154@googlemail.com</a>
<a href=""mailto:federalreservebank893+13789@googlemail.com"">federalreservebank893+13789@googlemail.com</a>
<a href=""mailto:federalreservebank893+4348@googlemail.com"">federalreservebank893+4348@googlemail.com</a>
<a href=""mailto:federalreservebank893+2801@googlemail.com"">federalreservebank893+2801@googlemail.com</a>
<a href=""mailto:federalreservebank893+20393@googlemail.com"">federalreservebank893+20393@googlemail.com</a>
<a href=""mailto:federalreservebank893+3463@googlemail.com"">federalreservebank893+3463@googlemail.com</a>
<a href=""mailto:federalreservebank893+8048@googlemail.com"">federalreservebank893+8048@googlemail.com</a>
<a href=""mailto:federalreservebank893+10598@googlemail.com"">federalreservebank893+10598@googlemail.com</a>
<a href=""mailto:federalreservebank893+11676@googlemail.com"">federalreservebank893+11676@googlemail.com</a>
<a href=""mailto:federalreservebank893+1458@googlemail.com"">federalreservebank893+1458@googlemail.com</a>
<a href=""mailto:federalreservebank893+29327@googlemail.com"">federalreservebank893+29327@googlemail.com</a>
<a href=""mailto:federalreservebank893+11757@googlemail.com"">federalreservebank893+11757@googlemail.com</a>
<a href=""mailto:federalreservebank893+11725@googlemail.com"">federalreservebank893+11725@googlemail.com</a>
<a href=""mailto:federalreservebank893+28194@googlemail.com"">federalreservebank893+28194@googlemail.com</a>
<a href=""mailto:federalreservebank893+2023@googlemail.com"">federalreservebank893+2023@googlemail.com</a>
<a href=""mailto:federalreservebank893+13768@googlemail.com"">federalreservebank893+13768@googlemail.com</a>
<a href=""mailto:federalreservebank893+12738@googlemail.com"">federalreservebank893+12738@googlemail.com</a>
<a href=""mailto:federalreservebank893+31603@googlemail.com"">federalreservebank893+31603@googlemail.com</a>
<a href=""mailto:federalreservebank893+13177@googlemail.com"">federalreservebank893+13177@googlemail.com</a>
<a href=""mailto:federalreservebank893+9227@googlemail.com"">federalreservebank893+9227@googlemail.com</a>
<a href=""mailto:federalreservebank893+10973@googlemail.com"">federalreservebank893+10973@googlemail.com</a>
<a href=""mailto:federalreservebank893+9102@googlemail.com"">federalreservebank893+9102@googlemail.com</a>
<a href=""mailto:federalreservebank893+11899@googlemail.com"">federalreservebank893+11899@googlemail.com</a>
<a href=""mailto:federalreservebank893+24665@googlemail.com"">federalreservebank893+24665@googlemail.com</a>
<a href=""mailto:federalreservebank893+6402@googlemail.com"">federalreservebank893+6402@googlemail.com</a>
<a href=""mailto:federalreservebank893+11431@googlemail.com"">federalreservebank893+11431@googlemail.com</a>
<a href=""mailto:federalreservebank893+4350@googlemail.com"">federalreservebank893+4350@googlemail.com</a>
<a href=""mailto:federalreservebank893+8080@googlemail.com"">federalreservebank893+8080@googlemail.com</a>
<a href=""mailto:federalreservebank893+30959@googlemail.com"">federalreservebank893+30959@googlemail.com</a>
<a href=""mailto:federalreservebank893+27066@googlemail.com"">federalreservebank893+27066@googlemail.com</a>
<a href=""mailto:federalreservebank893+166@googlemail.com"">federalreservebank893+166@googlemail.com</a>
<a href=""mailto:federalreservebank893+28323@googlemail.com"">federalreservebank893+28323@googlemail.com</a>
<a href=""mailto:federalreservebank893+5971@googlemail.com"">federalreservebank893+5971@googlemail.com</a>
<a href=""mailto:federalreservebank893+29915@googlemail.com"">federalreservebank893+29915@googlemail.com</a>
<a href=""mailto:federalreservebank893+27034@googlemail.com"">federalreservebank893+27034@googlemail.com</a>
<a href=""mailto:federalreservebank893+24282@googlemail.com"">federalreservebank893+24282@googlemail.com</a>
<a href=""mailto:federalreservebank893+3474@googlemail.com"">federalreservebank893+3474@googlemail.com</a>
<a href=""mailto:federalreservebank893+10243@googlemail.com"">federalreservebank893+10243@googlemail.com</a>
<a href=""mailto:federalreservebank893+20438@googlemail.com"">federalreservebank893+20438@googlemail.com</a>
<a href=""mailto:federalreservebank893+12147@googlemail.com"">federalreservebank893+12147@googlemail.com</a>
<a href=""mailto:federalreservebank893+7814@googlemail.com"">federalreservebank893+7814@googlemail.com</a>
<a href=""mailto:federalreservebank893+9978@googlemail.com"">federalreservebank893+9978@googlemail.com</a>
<a href=""mailto:federalreservebank893+812@googlemail.com"">federalreservebank893+812@googlemail.com</a>
<a href=""mailto:federalreservebank893+8874@googlemail.com"">federalreservebank893+8874@googlemail.com</a>
<a href=""mailto:federalreservebank893+4691@googlemail.com"">federalreservebank893+4691@googlemail.com</a>
<a href=""mailto:federalreservebank893+19712@googlemail.com"">federalreservebank893+19712@googlemail.com</a>
<a href=""mailto:federalreservebank893+5915@googlemail.com"">federalreservebank893+5915@googlemail.com</a>
<a href=""mailto:federalreservebank893+6726@googlemail.com"">federalreservebank893+6726@googlemail.com</a>
<a href=""mailto:federalreservebank893+2469@googlemail.com"">federalreservebank893+2469@googlemail.com</a>
<a href=""mailto:federalreservebank893+11408@googlemail.com"">federalreservebank893+11408@googlemail.com</a>
<a href=""mailto:federalreservebank893+6189@googlemail.com"">federalreservebank893+6189@googlemail.com</a>
<a href=""mailto:federalreservebank893+21928@googlemail.com"">federalreservebank893+21928@googlemail.com</a>
<a href=""mailto:federalreservebank893+28621@googlemail.com"">federalreservebank893+28621@googlemail.com</a>
<a href=""mailto:federalreservebank893+4921@googlemail.com"">federalreservebank893+4921@googlemail.com</a>
<a href=""mailto:federalreservebank893+26528@googlemail.com"">federalreservebank893+26528@googlemail.com</a>
<a href=""mailto:federalreservebank893+25490@googlemail.com"">federalreservebank893+25490@googlemail.com</a>
<a href=""mailto:federalreservebank893+15397@googlemail.com"">federalreservebank893+15397@googlemail.com</a>
<a href=""mailto:federalreservebank893+24412@googlemail.com"">federalreservebank893+24412@googlemail.com</a>
<a href=""mailto:federalreservebank893+21685@googlemail.com"">federalreservebank893+21685@googlemail.com</a>
<a href=""mailto:federalreservebank893+13437@googlemail.com"">federalreservebank893+13437@googlemail.com</a>
<a href=""mailto:federalreservebank893+18632@googlemail.com"">federalreservebank893+18632@googlemail.com</a>
<a href=""mailto:federalreservebank893+10020@googlemail.com"">federalreservebank893+10020@googlemail.com</a>
<a href=""mailto:federalreservebank893+22197@googlemail.com"">federalreservebank893+22197@googlemail.com</a>
<a href=""mailto:federalreservebank893+17101@googlemail.com"">federalreservebank893+17101@googlemail.com</a>
<a href=""mailto:federalreservebank893+15469@googlemail.com"">federalreservebank893+15469@googlemail.com</a>
<a href=""mailto:federalreservebank893+12616@googlemail.com"">federalreservebank893+12616@googlemail.com</a>
<a href=""mailto:federalreservebank893+17396@googlemail.com"">federalreservebank893+17396@googlemail.com</a>
<a href=""mailto:federalreservebank893+4138@googlemail.com"">federalreservebank893+4138@googlemail.com</a>
<a href=""mailto:federalreservebank893+22177@googlemail.com"">federalreservebank893+22177@googlemail.com</a>
<a href=""mailto:federalreservebank893+10149@googlemail.com"">federalreservebank893+10149@googlemail.com</a>
<a href=""mailto:federalreservebank893+12699@googlemail.com"">federalreservebank893+12699@googlemail.com</a>
<a href=""mailto:federalreservebank893+15453@googlemail.com"">federalreservebank893+15453@googlemail.com</a>
<a href=""mailto:federalreservebank893+6496@googlemail.com"">federalreservebank893+6496@googlemail.com</a>
<a href=""mailto:federalreservebank893+29189@googlemail.com"">federalreservebank893+29189@googlemail.com</a>
<a href=""mailto:federalreservebank893+5693@googlemail.com"">federalreservebank893+5693@googlemail.com</a>
<a href=""mailto:federalreservebank893+7639@googlemail.com"">federalreservebank893+7639@googlemail.com</a>
<a href=""mailto:federalreservebank893+5354@googlemail.com"">federalreservebank893+5354@googlemail.com</a>
<a href=""mailto:federalreservebank893+9489@googlemail.com"">federalreservebank893+9489@googlemail.com</a>
<a href=""mailto:federalreservebank893+16612@googlemail.com"">federalreservebank893+16612@googlemail.com</a>
<a href=""mailto:federalreservebank893+4216@googlemail.com"">federalreservebank893+4216@googlemail.com</a>
<a href=""mailto:federalreservebank893+3349@googlemail.com"">federalreservebank893+3349@googlemail.com</a>
<a href=""mailto:federalreservebank893+19707@googlemail.com"">federalreservebank893+19707@googlemail.com</a>"
feiwgk4K,Untitled,yarin0600,JavaScript,Tuesday 12th of December 2023 11:01:30 AM CDT,"// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler

let obj = {details: {address: {city: ""Ness Ziona"", street: ""Saknai""}}};

console.log(obj);
console.log(obj.details);
console.log(obj.details.address);
console.log(obj.details.address.city);

let a = ""details"";
let b = ""address.city"";
let keys = `${a}.${b}`.split('.');
let root = obj;
const last = keys.reduce((key, root) => {
    console.log(root[key]);
    return root[key]}, root);

console.log(last);"
RuLiskA9,Untitled,Mysoft,FreeBasic,Tuesday 12th of December 2023 10:55:10 AM CDT,"dim as string sMensagem 

Const FontWid=8,FontHei=16

screenres 80*16,16*16,8,,fb.gfx_HIGH_PRIORITY

width (80*16)\FontWid,(16*16)\FontHei

'line input ""Mensagem"";sMensagem
for N as long = 1 to 255
  sMensagem += chr(N)
next N
sMensagem = space(80\8)+sMensagem+"" "" & time()

static shared as fb.image ptr pFont,pFont8
static shared as any ptr g_pMutex

pFont8 = ImageCreate(16*16,16*32*256)
g_pMutex = MutexCreate()

sub GenChar( iChar as long )  
  static as byte uChar(255)
  if uChar(iChar) then exit sub  
  if uChar(0)=0 then
    uChar(0)=1 : pFont = ImageCreate(20,20*256)
    for N as long = 0 to 255  
      Draw String pFont,(1,N*20+1),chr(N),255
    next N
  end if
  
  var N=iChar : uChar(iChar)=1
  var iX=1,iY=N*20+1  
  line pFont8,(0,N*(16*16))-step(8*16-1,16*16-1),0,bf      
  for Y as long = 0 to 15
    for X as long = 0 to 7
      var PX=(X*16),PY=N*(16*16)+(Y*16)            
      var iC = point(iX+X,iY+Y,pFont)
      'line pFont8,(PX,PY)-step(15,31),iC and 8,b
      for iOY as long = -1 to 1
        for iOX as long = -1 to 1          
          var iC2 = point(iX+X+iOX,iY+Y+iOY,pFont)
          if iC andalso iC2 then
            if iOX=0 and iOY=0 then
              circle pFont8,(PX+iOX*8+8-iOX,PY+iOY*8+8-iOY),8,iC,,,1/1,f
            else
              circle pFont8,(PX+iOX*8+8-iOX,PY+iOY*8+8-iOY),7,iC,,,1/1,f
            end if
          end if
        next iOX        
      next iOY      
    next X
  next Y    
end sub  
sub GenerateAllChars(dummy as any ptr)
  for N as long = 0 to 255
    mutexlock(g_pMutex)
    GenChar(N)
    mutexunlock(g_pMutex)
  next N
end sub

ThreadCreate(@GenerateAllChars,0)

dim as integer iX
dim as double dTMR = timer
do  
  mutexlock(g_pMutex)
  screenlock
  cls    
  var PX=iX,PY=0
  mid(sMensagem,len(sMensagem)-7,8)=time()
  for N as long = 0 to len(sMensagem)-1    
    var iC = sMensagem[N] : GenChar(iC)
    line(PX,PY)-step(127,255),32+(N and 15),bf
    put (PX,PY),pFont8,(0,iC*256)-step(127,255),and : PX += 128    
    if PX>(80*16) then exit for
  next N
  locate 1,1: color 15 : print (16*16*16*32*256)\(1024*1024);""mb""
  screenunlock
  mutexunlock(g_pMutex)
  sleep 10
  iX = -(timer-dTMR)*128   
  if iX<(-len(sMensagem)*128) then dTMR = timer
loop
"
VcfyrKbL,Tianjin Shuangjin Pumps - Scam - Spam,bombaires,HTML,Tuesday 12th of December 2023 10:43:55 AM CDT,"<h1>Tianjin Shuangjin Pumps</h1>
<p>No.3rd, Beiyang Industry Park, Jinwen Road, Jinghai District, Tianjin City, China</p>
<a href=""mailto:huangjinpumps@shuangjinpumps.com"">huangjinpumps@shuangjinpumps.com</a>
<a href=""mailto:shuangjinpumps@shuangjinpumps.com"">shuangjinpumps@shuangjinpumps.com</a>
<a href=""mailto:tianjinpumps@tianjinpumps.com"">tianjinpumps@tianjinpumps.com</a>
<a href=""tel:+862259088478"">+86-22-59088478</a>
<a href=""tel:+8613642077662"">+86-13642077662</a>"
hkz1mDkr,JavaGettersSettersGenerator,jig487,Java,Tuesday 12th of December 2023 10:32:46 AM CDT,"/*
Here is an example of it being used in a driver class:

public class Driver {

	public static void main(String[] args) {
		String[] namesTypes = { ""type"", ""String"", ""browser"", ""String"", ""iosVersion"", ""String"", ""owner"", ""String"", ""commands"", ""String[]"", ""commandActions"", ""String[]"" };
		
		GetSet list1 = new GetSet(namesTypes);
		list1.makeGettersSetters();
	}

}
*/

public class GetSet {
	//Names and types are case sensitive!
	private String[] namesTypes;
	
	public GetSet(String[] namesTypes) {
		this.namesTypes = namesTypes;
	}
	
	public String[] getList() {
		return this.namesTypes;
	}
	
	public void setList(String[] namesTypes) {
		this.namesTypes = namesTypes;
	}
	
	public void makeGetters() {
		for (int i = 0; i < namesTypes.length; i += 2) {
			
			String name = namesTypes[i];
			//capitalize the first letter of the name
			String nameCap = name.toUpperCase().charAt(0) + name.substring(1);
			String type = namesTypes[i+1];
			
			System.out.println( ""public "" + type + "" get"" + nameCap + ""() { return this."" + name + ""; }"" );
		}
	}
	
	public void makeSetters() {
		for (int i = 0; i < namesTypes.length; i += 2) {
			
			String name = namesTypes[i];
			//capitalize the first letter of the name
			String nameCap = name.toUpperCase().charAt(0) + name.substring(1);
			String type = namesTypes[i+1];
			
			System.out.println( ""public void set"" + nameCap + ""( "" + type + "" "" + name + "" ) { this."" + name + "" = "" + name + ""; }"");
		}
	}
	
	public void makeGettersSetters() {
		for (int i = 0; i < namesTypes.length; i += 2) {
			
			String name = namesTypes[i];
			//capitalize the first letter of the name
			String nameCap = name.toUpperCase().charAt(0) + name.substring(1);
			String type = namesTypes[i+1];
			
			//getter
			System.out.println( ""public "" + type + "" get"" + nameCap + ""() { return this."" + name + ""; }"" );
			//setter
			System.out.println( ""public void set"" + nameCap + ""( "" + type + "" "" + name + "" ) { this."" + name + "" = "" + name + ""; } \n"");
		}
	}
}"
P3UUfrdV,HelloWorld,MladenKarachanov,Java,Tuesday 12th of December 2023 10:14:15 AM CDT,"package firstStepsInCoding;

public class HelloWorld {
    public static void main(String[] args) {
        
        System.out.println(""Hello World"");
    }
}
"
nUfatbwu,Untitled,cosenza987,C++,Tuesday 12th of December 2023 10:00:00 AM CDT,"//Слава Україні, Героям слава

#include <bits/stdc++.h>

using namespace std;

int main() {
    //ios_base::sync_with_stdio(false);
    //cin.tie(nullptr);
    freopen(""in.txt"", ""r"", stdin);
    freopen(""out.txt"", ""w"", stdout);
    string s;
    long long ans = 0;
    while(cin >> s) {
        string ss;
        cin >> ss;
        stringstream X(ss);
        vector<int> v;
        string tmp;
        while(getline(X, tmp, ',')) {
            v.push_back(stoi(tmp));
        }
        s = s + '?' + s + '?' + s + '?' + s + '?' + s;
        vector<int> y = v;
        v.insert(v.end(), y.begin(), y.end());
        v.insert(v.end(), y.begin(), y.end());
        v.insert(v.end(), y.begin(), y.end());
        v.insert(v.end(), y.begin(), y.end());
        int n = s.size(), m = v.size();
        vector<vector<vector<long long>>> dp(2 * n + 1, vector<vector<long long>>(m + 1, vector<long long>(2, -1)));
        function<long long(int, int, bool)> calc = [&](int i, int j, bool placed) {
            if(i > n and !placed) return dp[i][j][placed] = 0;
            if(i > n + 1) return dp[i][j][placed] = 0;
            if(dp[i][j][placed] != -1) return dp[i][j][placed];
            if(placed) {
                for(int k = i - v[j - 1] - 1; k < i - 1; k++) {
                    if(s[k] == '.') {
                        return dp[i][j][placed] = 0;
                    }
                }
                if(i != n + 1) {
                    if(s[i - 1] == '#') return dp[i][j][placed] = 0;
                }
            }
            if(j == m) {
                bool ok = true;
                for(int k = i; k < n; k++) {
                    ok &= (s[k] != '#');
                }
                return dp[i][j][placed] = ok;
            }
            long long ans = 0;
            if(s[i] != '.') {
                ans += calc(i + v[j] + 1, j + 1, true);
            }
            if(s[i] != '#') {
                ans += calc(i + 1, j, false);
            }
            return dp[i][j][placed] = ans;
        };
        ans += calc(0, 0, false);
    }
    cout << ans << ""\n"";
    return 0;
}"
URwUKmqp,Home assistant zigbee,harkor,YAML,Tuesday 12th of December 2023 09:49:05 AM CDT,"version: '3'
services:
  homeassistant:
    container_name: homeassistant
    image: ""ghcr.io/home-assistant/home-assistant:latest""
    volumes:
      - ./hassio/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    ports:
      - 8123:8123
    labels:
      - ""traefik.http.routers.hassio.rule=${HOSTNAMES}""
      - ""traefik.http.routers.hassio.entrypoints=web""

      # Redirect to HTTPS
      - ""traefik.http.routers.hassio.middlewares=nextcloud-https""
      - ""traefik.http.middlewares.hassio-https.redirectscheme.scheme=https""

      - ""traefik.http.routers.hassio-https.rule=${HOSTNAMES}""
      - ""traefik.http.routers.hassio-https.entrypoints=websecure""
      - ""traefik.http.routers.hassio-https.tls=true""
      - ""traefik.http.routers.hassio-https.tls.certresolver=myresolver""

      - traefik.http.services.hassio.loadbalancer.server.port=8123

      - ""traefik.http.routers.hassio-https.middlewares=hassio-secured""
      - ""traefik.http.middlewares.hassio-secured.chain.middlewares=cloudflare@file""

  mosquitto:
    image: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mosquitto/config:/mosquitto/config:rw
      - ./mosquitto/data:/mosquitto/data:rw
      - ./mosquitto/log:/mosquitto/log:rw

  zigbee2mqtt:
      container_name: zigbee2mqtt
      image: koenkk/zigbee2mqtt
      restart: unless-stopped
      volumes:
        - ./z2m/data:/app/data
        - /run/udev:/run/udev:ro
      environment:
        - TZ=Europe/Brussels
      devices:
        - /dev/ttyACM0:/dev/ttyACM0
      labels:
        - ""traefik.http.routers.z2m.rule=Host(`TONDOMAIN`)""
        - ""traefik.http.routers.z2m.entrypoints=web""

        # Redirect to HTTPS
        - ""traefik.http.routers.z2m.middlewares=nextcloud-https""
        - ""traefik.http.middlewares.z2m-https.redirectscheme.scheme=https""

        - ""traefik.http.routers.z2m-https.rule=Host(`TONDOMAIN`)""
        - ""traefik.http.routers.z2m-https.entrypoints=websecure""
        - ""traefik.http.routers.z2m-https.tls=true""
        - ""traefik.http.routers.z2m-https.tls.certresolver=myresolver""

        - traefik.http.services.z2m.loadbalancer.server.port=8080

        - ""traefik.http.routers.z2m-https.middlewares=z2m-secured""
        - ""traefik.http.middlewares.z2m-secured.chain.middlewares=cloudflare@file"""
CJwQR0rg,savarjisho 4,erehh,C++,Tuesday 12th of December 2023 09:48:23 AM CDT,"#include <iostream>
#include <vector>
#include <queue>
#include <functional>  

using namespace std;

// Enum for skill levels
enum SkillLevel { Junior, Middle, Senior };

// Abstract base class for all employees
class Employee {
public:
    Employee(string name, int emp_id, string emp_class, double salary, int seniority)
        : name(name), emp_id(emp_id), emp_class(emp_class), salary(salary), seniority(seniority) {}

    virtual double calculateIncome() const = 0;  // Pure virtual function for income calculation

    virtual void printDetails() const {
        cout << ""Name: "" << name << "", ID: "" << emp_id
            << "", Class: "" << emp_class << "", Salary: "" << salary << "", Seniority: "" << seniority << endl;
    }

    virtual ~Employee() {}  

protected:
    string name;
    int emp_id;
    string emp_class;
    double salary;
    int seniority;
};

// Class for CIO
class CIO : public Employee {
public:
    CIO(string name, int emp_id, double salary, int seniority)
        : Employee(name, emp_id, ""CIO"", salary, seniority) {}

    double calculateIncome() const override {
        return salary + seniority * 1500;  // Example income calculation
    }
};

// Class for Project Manager
class ProjectManager : public Employee {
public:
    ProjectManager(string name, int emp_id, double salary, int seniority)
        : Employee(name, emp_id, ""PM"", salary, seniority) {}

    double calculateIncome() const override {
        return salary + seniority * 1200;  // Example income calculation
    }
};

// Class for Developer (abstract)
class Developer : public Employee {
public:
    Developer(string name, int emp_id, string emp_class, double salary, int seniority)
        : Employee(name, emp_id, emp_class, salary, seniority) {}

    virtual void printDetails() const override {
        Employee::printDetails();
        cout << ""Skill Level: "" << skillLevelToString() << endl;
    }

protected:
    virtual string skillLevelToString() const = 0;  // Pure virtual function for skill level
};

// Class for Backend Developer
class BackendDeveloper : public Developer {
public:
    BackendDeveloper(string name, int emp_id, double salary, int seniority, SkillLevel skillLevel, string technology)
        : Developer(name, emp_id, ""BD"", salary, seniority), skillLevel(skillLevel), technology(technology) {}

    double calculateIncome() const override {
        return salary + seniority * 1000 * (1.0 + static_cast<int>(skillLevel) * 0.1);
    }

protected:
    string skillLevelToString() const override {
        switch (skillLevel) {
        case Junior: return ""Junior"";
        case Middle: return ""Middle"";
        case Senior: return ""Senior"";
        }
        return """";
    }

private:
    SkillLevel skillLevel;
    string technology;
};

// Class for Frontend Developer
class FrontendDeveloper : public Developer {
public:
    FrontendDeveloper(string name, int emp_id, double salary, int seniority, SkillLevel skillLevel, string technology)
        : Developer(name, emp_id, ""FD"", salary, seniority), skillLevel(skillLevel), technology(technology) {}

    double calculateIncome() const override {
        return salary + seniority * 1000 * (1.0 + static_cast<int>(skillLevel) * 0.1);
    }

protected:
    string skillLevelToString() const override {
        switch (skillLevel) {
        case Junior: return ""Junior"";
        case Middle: return ""Middle"";
        case Senior: return ""Senior"";
        }
        return """";
    }

private:
    SkillLevel skillLevel;
    string technology;
};

// Class for Engineer (abstract)
class Engineer : public Employee {
public:
    Engineer(string name, int emp_id, string emp_class, double salary, int seniority)
        : Employee(name, emp_id, emp_class, salary, seniority) {}

    virtual void printDetails() const override {
        Employee::printDetails();
        cout << ""Skill Level: "" << skillLevelToString() << endl;
    }

protected:
    virtual string skillLevelToString() const = 0;  // Pure virtual function for skill level
};

// Class for Database Engineer
class DatabaseEngineer : public Engineer {
public:
    DatabaseEngineer(string name, int emp_id, double salary, int seniority, SkillLevel skillLevel)
        : Engineer(name, emp_id, ""DB"", salary, seniority), skillLevel(skillLevel) {}

    double calculateIncome() const override {
        return salary + seniority * 1200 * (1.0 + static_cast<int>(skillLevel) * 0.1);
    }

protected:
    string skillLevelToString() const override {
        switch (skillLevel) {
        case Junior: return ""Junior"";
        case Middle: return ""Middle"";
        case Senior: return ""Senior"";
        }
        return """";
    }

private:
    SkillLevel skillLevel;
};

// Class for DevOps Engineer
class DevOpsEngineer : public Engineer {
public:
    DevOpsEngineer(string name, int emp_id, double salary, int seniority, SkillLevel skillLevel)
        : Engineer(name, emp_id, ""DE"", salary, seniority), skillLevel(skillLevel) {}

    double calculateIncome() const override {
        return salary + seniority * 1100 * (1.0 + static_cast<int>(skillLevel) * 0.1);
    }

protected:
    string skillLevelToString() const override {
        switch (skillLevel) {
        case Junior: return ""Junior"";
        case Middle: return ""Middle"";
        case Senior: return ""Senior"";
        }
        return """";
    }

private:
    SkillLevel skillLevel;
};

// Class for Tester
class Tester : public Employee {
public:
    Tester(string name, int emp_id, double salary, int seniority, SkillLevel skillLevel)
        : Employee(name, emp_id, ""TST"", salary, seniority), skillLevel(skillLevel) {}

    double calculateIncome() const override {
        return salary + seniority * 1000 * (1.0 + static_cast<int>(skillLevel) * 0.1);
    }

    void printDetails() const override {
        Employee::printDetails();
        cout << ""Skill Level: "" << skillLevelToString() << endl;
    }

private:
    string skillLevelToString() const {
        switch (skillLevel) {
        case Junior: return ""Junior"";
        case Middle: return ""Middle"";
        case Senior: return ""Senior"";
        }
        return """";
    }

    SkillLevel skillLevel;
};

// Function to compare for the priority queue
bool compareEmployees(const Employee* a, const Employee* b) {
    return a->calculateIncome() > b->calculateIncome();  // Reverse order for a max heap
}

int main() {
    // Create objects and test the classes

    CIO cio(""Nargiz Sartaniani"", 1, 12000, 36);
    ProjectManager pm(""Kumis Reikovichi"", 2, 10000, 24);

    BackendDeveloper backendDev(""Pakistani Giorgi"", 3, 8000, 18, Senior, ""Spring"");
    FrontendDeveloper frontendDev(""Charli Brauni"", 4, 7500, 12, Middle, ""React"");

    DatabaseEngineer dbEngineer(""Walter White"", 5, 9000, 15, Junior);
    DevOpsEngineer devOpsEngineer(""Xalva Semichka"", 6, 9500, 20, Middle);

    Tester tester1(""Revaz arxiani"", 7, 7000, 10, Senior);
    Tester tester2(""Panteleimon Kvachadze"", 8, 6500, 8, Junior);

    // Add employees to a priority queue 
    priority_queue<Employee*, vector<Employee*>, function<bool(Employee*, Employee*)>> employeeQueue(compareEmployees);

    employeeQueue.push(&cio);
    employeeQueue.push(&pm);
    employeeQueue.push(&backendDev);
    employeeQueue.push(&frontendDev);
    employeeQueue.push(&dbEngineer);
    employeeQueue.push(&devOpsEngineer);
    employeeQueue.push(&tester1);
    employeeQueue.push(&tester2);

    // Print the resulting queue
    while (!employeeQueue.empty()) {
        Employee* emp = employeeQueue.top();
        emp->printDetails();
        employeeQueue.pop();
    }

    return 0;
}
"
PF9tARJA,Untitled,Nolifeq,JSON,Tuesday 12th of December 2023 09:47:03 AM CDT,"[
    {
      ""passUUID"": ""d2f4c2e2-e4ce-4931-9878-466b08e63cef"",
      ""passName"": ""§6Podstawowy"",
      ""passDescription"": [
        ""§71"",
        ""§72""
      ],
      ""passMaterial"": ""CACTUS"",
      ""passDays"": [
        {
          ""dayNumber"": 1,
          ""todoProgress"": {
            ""U"": 1
          },
          ""rewardMaterial"": [
          ""LAPIS_LAZULI;16;0"",
          ""DIAMOND;12;0""
          ],
          ""rewardMoney"": 100,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 2,
          ""todoProgress"": {
            ""R"": 3
          },
          ""rewardMaterial"": [
          ""COAL;32;0"",
          ""SUGAR_CANE;3;0""
          ],
          ""rewardMoney"": 100,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 3,
          ""todoProgress"": {
            ""J_1"": 30
          },
          ""rewardMaterial"": [
          ""BOOK;16;0"",
          ""DIAMOND_PICKAXE;1;DIG_SPEED-1""
          ],
          ""rewardMoney"": 250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 4,
          ""todoProgress"": {
            ""I"": 32
          },
          ""rewardMaterial"": [
          ""EXPERIENCE_BOTTLE;16;0"",
          ""IRON_SWORD;1;DAMAGE_ALL-5,DURABILITY-1""
          ],
          ""rewardMoney"": 250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 5,
          ""todoProgress"": {
            ""P"": 2
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;DURABILITY-3"",
          ""ENDER_PEARL;16;0""
          ],
          ""rewardMoney"": 350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 6,
          ""todoProgress"": {
            ""S"": 250
          },
          ""rewardMaterial"": [
          ""POCKET_FOUNDRY_FURNANCE|5"",
          ""COBBLESTONE|3""
          ],
          ""rewardMoney"": 350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 7,
          ""todoProgress"": {
            ""M"": 75
          },
          ""rewardMaterial"": [
          ""DIAMOND;32;0"",
          ""LAPIS_LAZULI;64;0""
          ],
          ""rewardMoney"": 500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 8,
          ""todoProgress"": {
            ""N"": 250
          },
          ""rewardMaterial"": [
          ""LOTTO_COUPON|3"",
          ""ENCHANTING_TABLE;1;0""
          ],
          ""rewardMoney"": 500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 9,
          ""todoProgress"": {
            ""X"": 25
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;LOOT_BONUS_BLOCKS-3"",
          ""LEATHER;10;0""
          ],
          ""rewardMoney"": 750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 10,
          ""todoProgress"": {
            ""U"": 1
          },
          ""rewardMaterial"": [
          ""DIAMOND_SWORD;1;DAMAGE_ALL-5,DURABILITY-3,FIRE_ASPECT-2,MENDING-1;&e&lLegendarny Miecz"",
          ""SPAWN_EGG|8""
          ],
          ""rewardMoney"": 5000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 11,
          ""todoProgress"": {
            ""L"": 8
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_MEM"",
          ""EMERALD;16;0""
          ],
          ""rewardMoney"": 1250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 12,
          ""todoProgress"": {
            ""SZ"": 7
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_KEY"",
          ""COBBLESTONE|6""
          ],
          ""rewardMoney"": 1250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 13,
          ""todoProgress"": {
            ""WI"": 15
          },
          ""rewardMaterial"": [
          ""GOLDEN_APPLE;16;0"",
          ""GOLD_BLOCK;4;0""
          ],
          ""rewardMoney"": 1350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 14,
          ""todoProgress"": {
            ""SZ"": 10
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;ARROW_FIRE-1"",
          ""SPAWN_EGG|5""
          ],
          ""rewardMoney"": 1350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 15,
          ""todoProgress"": {
            ""R"": 5
          },
          ""rewardMaterial"": [
          ""SPONGE;3;0"",
          ""COBWEB;10;0""
          ],
          ""rewardMoney"": 1500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 16,
          ""todoProgress"": {
            ""S"": 350
          },
          ""rewardMaterial"": [
          ""SEA_LANTERN;5;0"",
          ""DIAMOND_AXE;1;LOOT_BONUS_BLOCKS-3""
          ],
          ""rewardMoney"": 1500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 17,
          ""todoProgress"": {
            ""P"": 3
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;DIG_SPEED-4"",
          ""LAPIS_BLOCK;8;0""
          ],
          ""rewardMoney"": 1750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 18,
          ""todoProgress"": {
            ""WI"": 25
          },
          ""rewardMaterial"": [
          ""DIAMOND_SHOVEL;1;DIG_SPEED-5,DURABILITY-3,MENDING-1""
          ],
          ""rewardMoney"": 1750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 19,
          ""todoProgress"": {
            ""Q"": 35
          },
          ""rewardMaterial"": [
          ""CRYING_OBSIDIAN;16;0""
          ],
          ""rewardMoney"": 1950,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 20,
          ""todoProgress"": {
            ""F"": 1
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_MID""
          ],
          ""rewardMoney"": 10000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 21,
          ""todoProgress"": {
            ""RO"": 2
          },
          ""rewardMaterial"": [
          ""DIAMOND_BROADCAST""
          ],
          ""rewardMoney"": 2250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 22,
          ""todoProgress"": {
            ""H"": 1
          },
          ""rewardMaterial"": [
          ""DIAMOND_LEGGINGS;1;PROTECTION_ENVIRONMENTAL-4,DURABILITY-3,MENDING-1;&e&lLegendarne Nogawice""
          ],
          ""rewardMoney"": 2250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 23,
          ""todoProgress"": {
            ""N"": 450
          },
          ""rewardMaterial"": [
          ""COBBLESTONE|16"",
          ""DIAMOND_BLOCK;5;0""
          ],
          ""rewardMoney"": 2500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 24,
          ""todoProgress"": {
            ""A"": 50
          },
          ""rewardMaterial"": [
          ""ENDER_CHEST;1;0"",
          ""OBSIDIAN;16;0""
          ],
          ""rewardMoney"": 2500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 25,
          ""todoProgress"": {
            ""CO"": 10
          },
          ""rewardMaterial"": [
          ""GOLDEN_AXE;1;DIG_SPEED-5"",
          ""LOTTO_COUPON""
          ],
          ""rewardMoney"": 2750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 26,
          ""todoProgress"": {
            ""L"": 15
          },
          ""rewardMaterial"": [
          ""ITEM_FRAME;16;0"",
          ""HOPPER;6;0""
          ],
          ""rewardMoney"": 2750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 27,
          ""todoProgress"": {
            ""M"": 150
          },
          ""rewardMaterial"": [
          ""DIAMOND_PICKAXE;1;DIG_SPEED-4,SILK_TOUCH-1"",
          ""BOOKSHELF;8;0""
          ],
          ""rewardMoney"": 2950,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 28,
          ""todoProgress"": {
            ""A"": 500
          },
          ""rewardMaterial"": [
          ""COBBLESTONE|32"",
          ""GOLD_BLOCK;6;0""
          ],
          ""rewardMoney"": 2950,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 29,
          ""todoProgress"": {
            ""LI"": 2
          },
          ""rewardMaterial"": [
          ""BREWING_STAND;1;0"",
          ""GOLDEN_SWORD;1;LOOT_BONUS_MOBS-4""
          ],
          ""rewardMoney"": 3000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 30,
          ""todoProgress"": {
            ""O"": 3
          },
          ""rewardMaterial"": [
          ""ENCHANTED_GOLDEN_APPLE;3;0"",
          ""COBBLESTONE|10""
          ],
          ""rewardMoney"": 15000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 31,
          ""todoProgress"": {
            ""JA"": 5
          },
          ""rewardMaterial"": [
          ""GOLDEN_APPLE;16;0"",
          ""IRON_BLOCK;15;0""
          ],
          ""rewardMoney"": 3150,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 32,
          ""todoProgress"": {
            ""Y"": 250
          },
          ""rewardMaterial"": [
          ""FISHING_ROD;1;MENDING-1,DURABILITY-3"",
          ""POCKET_FOUNDRY_FURNANCE|3""
          ],
          ""rewardMoney"": 3150,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 33,
          ""todoProgress"": {
            ""T"": 30
          },
          ""rewardMaterial"": [
          ""NETHER_QUARTZ_ORE;1;0"",
          ""WITHER_ROSE;3;0""
          ],
          ""rewardMoney"": 3300,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 34,
          ""todoProgress"": {
            ""G"": 25
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_LOW"",
          ""ENCHANTED_BOOK;1;FIRE_ASPECT-2""
          ],
          ""rewardMoney"": 3300,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 35,
          ""todoProgress"": {
            ""SZ"": 20
          },
          ""rewardMaterial"": [
          ""QUARTZ_BLOCK;15;0"",
          ""GLOWSTONE_DUST;4;0""
          ],
          ""rewardMoney"": 3500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 36,
          ""todoProgress"": {
            ""SZ"": 3
          },
          ""rewardMaterial"": [
          ""PEARLESCENT_FROGLIGHT;3;0"",
          ""COBBLESTONE|16""
          ],
          ""rewardMoney"": 3500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 37,
          ""todoProgress"": {
            ""E"": 10
          },
          ""rewardMaterial"": [
          ""BOW;1;ARROW_FIRE-1"",
          ""DIAMOND_HELMET;1;PROTECTION_ENVIRONMENTAL-4,DURABILITY-3,MENDING-1;&e&lLegendarny Hełm""
          ],
          ""rewardMoney"": 3750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 38,
          ""todoProgress"": {
            ""W"": 30
          },
          ""rewardMaterial"": [
          ""ENDER_PEARL;16;0"",
          ""DIAMOND_BLOCK;15;0""
          ],
          ""rewardMoney"": 3750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 39,
          ""todoProgress"": {
            ""SZ"": 10
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_KEY"",
          ""ENCHANTED_BOOK;1;SOUL_SPEED-2""
          ],
          ""rewardMoney"": 4000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 40,
          ""todoProgress"": {
            ""DU"": 1
          },
          ""rewardMaterial"": [
          ""PRYZMAT_BEACON""
          ],
          ""rewardMoney"": 20000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 41,
          ""todoProgress"": {
            ""HO"": 300
          },
          ""rewardMaterial"": [
          ""DIAMOND_PICKAXE;1;DIG_SPEED-5,DURABILITY-3,LOOT_BONUS_BLOCKS-3"",
          ""MAGIC_CHEST_KEY""
          ],
          ""rewardMoney"": 4350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 42,
          ""todoProgress"": {
            ""CP"": 25
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;MENDING-1"",
          ""GOLDEN_SWORD;1;LOOT_BONUS_MOBS-4""
          ],
          ""rewardMoney"": 4350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 43,
          ""todoProgress"": {
            ""SZ"": 16
          },
          ""rewardMaterial"": [
          ""FISHING_ROD;1;LURE-3,LUCK-3"",
          ""COBBLESTONE|8""
          ],
          ""rewardMoney"": 4500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 44,
          ""todoProgress"": {
            ""SZ"": 20
          },
          ""rewardMaterial"": [
          ""COBBLESTONE|32"",
          ""MAGIC_CHEST_PVP;1;0""
          ],
          ""rewardMoney"": 4500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 45,
          ""todoProgress"": {
            ""D"": 10
          },
          ""rewardMaterial"": [
          ""GLOWSTONE;4;0"",
          ""ENCHANTED_BOOK;1;FROST_WALKER-2""
          ],
          ""rewardMoney"": 5000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 46,
          ""todoProgress"": {
            ""R"": 10
          },
          ""rewardMaterial"": [
          ""GUNPOWDER;32;0"",
          ""OBSERVER;3;0""
          ],
          ""rewardMoney"": 5000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 47,
          ""todoProgress"": {
            ""RO"": 6
          },
          ""rewardMaterial"": [
          ""GHAST_TEAR;1;0"",
          ""MAGMA_CREAM;8;0""
          ],
          ""rewardMoney"": 5350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 48,
          ""todoProgress"": {
            ""U"": 2
          },
          ""rewardMaterial"": [
          ""MOOSHROOM_SPAWN_EGG;4;0"",
          ""COBBLESTONE|16""
          ],
          ""rewardMoney"": 5350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 49,
          ""todoProgress"": {
            ""WI"": 25
          },
          ""rewardMaterial"": [
          ""END_CRYSTAL;2;0"",
          ""MAGIC_CHEST_FISHER""
          ],
          ""rewardMoney"": 5500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 50,
          ""todoProgress"": {
            ""L"": 60
          },
          ""rewardMaterial"": [
          ""SOUL_SAND;1;0"",
          ""MAGIC_CHEST_PVP""
          ],
          ""rewardMoney"": 25000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 51,
          ""todoProgress"": {
            ""SZ"": 10
          },
          ""rewardMaterial"": [
          ""POTION;1;SPEED2-240;&bMikstura Szybkości III""
          ],
          ""rewardMoney"": 5750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 52,
          ""todoProgress"": {
            ""CP"": 30
          },
          ""rewardMaterial"": [
          ""DIAMOND_PICKAXE;1;DIG_SPEED-5,DURABILITY-3,LOOT_BONUS_BLOCKS-3""
          ],
          ""rewardMoney"": 5750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 53,
          ""todoProgress"": {
            ""S"": 400
          },
          ""rewardMaterial"": [
          ""NETHER_WART;5;0"",
          ""ENDER_PEARL;16;0""
          ],
          ""rewardMoney"": 6000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 54,
          ""todoProgress"": {
            ""SZ"": 15
          },
          ""rewardMaterial"": [
          ""FROG_SPAWN_EGG;3;0"",
          ""END_ROD;3;0""
          ],
          ""rewardMoney"": 6000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 55,
          ""todoProgress"": {
            ""SZ"": 10
          },
          ""rewardMaterial"": [
          ""DIAMOND_CHESTPLATE;1;PROTECTION_ENVIRONMENTAL-4,DURABILITY-3,MENDING-1;&e&lLegendarny Napierśnik"",
          ""ENCHANTED_BOOK;1;MENDING-1""
          ],
          ""rewardMoney"": 6350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 56,
          ""todoProgress"": {
            ""CO"": 15
          },
          ""rewardMaterial"": [
          ""FISHING_ROD;1;LUCK-3,LURE-3,DURABILITY-3,MENDING-1;&b&lWędka Rybaka""
          ],
          ""rewardMoney"": 6350,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 57,
          ""todoProgress"": {
            ""MC2"": 1
          },
          ""rewardMaterial"": [
          ""TRIDENT;1;0"",
          ""ENDER_CHEST;2;0""
          ],
          ""rewardMoney"": 6750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 58,
          ""todoProgress"": {
            ""L"": 10
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;DAMAGE_ALL-5""
          ],
          ""rewardMoney"": 6750,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 59,
          ""todoProgress"": {
            ""Z"": 10
          },
          ""rewardMaterial"": [
          ""DRAGON_BREATH;2;0"",
          ""DIAMOND_BOOTS;1;PROTECTION_ENVIRONMENTAL-4,DURABILITY-3,MENDING-1;&e&lLegendarne Buty""
          ],
          ""rewardMoney"": 7000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 60,
          ""todoProgress"": {
            ""D"": 45
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_HIGH"",
          ""COBBLESTONE|16""
          ],
          ""rewardMoney"": 30000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 61,
          ""todoProgress"": {
            ""N"": 750
          },
          ""rewardMaterial"": [
          ""BLAZE_ROD;2;0"",
          ""GLOWSTONE;16;0""
          ],
          ""rewardMoney"": 7250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 62,
          ""todoProgress"": {
            ""P"": 3
          },
          ""rewardMaterial"": [
          ""DIAMOND_SWORD;1;DAMAGE_ALL-5,DURABILITY-3,FIRE_ASPECT-2,MENDING-1;&e&lLegendarny Miecz"",
          ""SEA_LANTERN;10;0""
          ],
          ""rewardMoney"": 7250,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 63,
          ""todoProgress"": {
            ""CO"": 20
          },
          ""rewardMaterial"": [
          ""PUFFERFISH_BUCKET;8;0"",
          ""SPONGE;8;0""
          ],
          ""rewardMoney"": 7500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 64,
          ""todoProgress"": {
            ""R"": 10
          },
          ""rewardMaterial"": [
          ""DIAMOND_AXE;1;LOOT_BONUS_BLOCKS-3,DURABILITY-3,DIG_SPEED-5""
          ],
          ""rewardMoney"": 7500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 65,
          ""todoProgress"": {
            ""SZ"": 20
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;SWIFT_SNEAK-2"",
          ""MAGIC_CHEST_MEM""
          ],
          ""rewardMoney"": 7850,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 66,
          ""todoProgress"": {
            ""KX"": 2
          },
          ""rewardMaterial"": [
          ""COBBLESTONE|12"",
          ""IRON_BOOTS;1;SOUL_SPEED-3""
          ],
          ""rewardMoney"": 7850,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 67,
          ""todoProgress"": {
            ""P"": 4
          },
          ""rewardMaterial"": [
          ""EMERALD_BLOCK;16;0"",
          ""MAGIC_CHEST_PVP|2""
          ],
          ""rewardMoney"": 8000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 68,
          ""todoProgress"": {
            ""B"": 3
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;ARROW_INFINITE-1"",
          ""ENCHANTED_BOOK;1;DIG_SPEED-5""
          ],
          ""rewardMoney"": 8000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 69,
          ""todoProgress"": {
            ""C"": 15
          },
          ""rewardMaterial"": [
          ""BLAZE_POWDER;1;0"",
          ""LOTTO_COUPON|4""
          ],
          ""rewardMoney"": 8500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 70,
          ""todoProgress"": {
            ""R"": 20
          },
          ""rewardMaterial"": [
          ""GOLDEN_SWORD;1;LOOT_BONUS_MOBS-5"",
          ""COBBLESTONE|24""
          ],
          ""rewardMoney"": 35000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 71,
          ""todoProgress"": {
            ""SZ"": 15
          },
          ""rewardMaterial"": [
          ""REDSTONE_BLOCK;32;0"",
          ""SPAWN_EGG|8""
          ],
          ""rewardMoney"": 9000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 72,
          ""todoProgress"": {
            ""JA"": 5
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_KEY|2""
          ],
          ""rewardMoney"": 9000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 73,
          ""todoProgress"": {
            ""L"": 15
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;LOYALTY-3"",
          ""DIAMOND_BROADCAST""
          ],
          ""rewardMoney"": 9500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 74,
          ""todoProgress"": {
            ""O"": 3
          },
          ""rewardMaterial"": [
          ""COBWEB;24;0"",
          ""ENDER_PEARL;8;0""
          ],
          ""rewardMoney"": 9500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 75,
          ""todoProgress"": {
            ""SZ"": 20
          },
          ""rewardMaterial"": [
          ""CONDUIT;1;0"",
          ""NETHER_QUARTZ_ORE;6;0""
          ],
          ""rewardMoney"": 10000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 76,
          ""todoProgress"": {
            ""E"": 30
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;LOOT_BONUS_MOBS-3"",
          ""GUNPOWDER;64;0""
          ],
          ""rewardMoney"": 10000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 77,
          ""todoProgress"": {
            ""H"": 3
          },
          ""rewardMaterial"": [
          ""DISC_FRAGMENT_5;1;0"",
          ""FEATHER;16;0""
          ],
          ""rewardMoney"": 10500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 78,
          ""todoProgress"": {
            ""U"": 3
          },
          ""rewardMaterial"": [
          ""POTION;1;INCREASE_DAMAGE2-60;&cMikstura Siły III"",
          ""GOLDEN_APPLE;32;0""
          ],
          ""rewardMoney"": 10500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 79,
          ""todoProgress"": {
            ""LI"": 5
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_KEY"",
          ""NETHER_TICKET|5""
          ],
          ""rewardMoney"": 11000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 80,
          ""todoProgress"": {
            ""SZ"": 1
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_HIGH"",
          ""MAGIC_CHEST_KEY""
          ],
          ""rewardMoney"": 40000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 81,
          ""todoProgress"": {
            ""SZ"": 20
          },
          ""rewardMaterial"": [
          ""CRYING_OBSIDIAN;8;0"",
          ""EXPERIENCE_BOTTLE;32;0""
          ],
          ""rewardMoney"": 11500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 82,
          ""todoProgress"": {
            ""KX"": 3
          },
          ""rewardMaterial"": [
          ""ENCHANTED_BOOK;1;SILK_TOUCH-1"",
          ""TURTLE_HELMET;1;PROTECTION_ENVIRONMENTAL-8,DURABILITY-4;&8> &2&lŻółwi &a&lHełm &8<""
          ],
          ""rewardMoney"": 11500,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 83,
          ""todoProgress"": {
            ""BS"": 1
          },
          ""rewardMaterial"": [
          ""POTION;1;INCREASE_DAMAGE2-60;&cMikstura Siły III""
          ],
          ""rewardMoney"": 12000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 84,
          ""todoProgress"": {
            ""CP"": 30
          },
          ""rewardMaterial"": [
          ""PHANTOM_MEMBRANE;16;0"",
          ""NETHER_WART;2;0""
          ],
          ""rewardMoney"": 12000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 85,
          ""todoProgress"": {
            ""CO"": 64
          },
          ""rewardMaterial"": [
          ""ICE;32;0"",
          ""BOOKSHELF;16;0""
          ],
          ""rewardMoney"": 13000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 86,
          ""todoProgress"": {
            ""SZ"": 24
          },
          ""rewardMaterial"": [
          ""MAGIC_CHEST_MEM|2"",
          ""MAGIC_CHEST_FISHER""
          ],
          ""rewardMoney"": 13000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 87,
          ""todoProgress"": {
            ""SZ"": 30
          },
          ""rewardMaterial"": [
          ""BELL;1;0"",
          ""ENCHANTED_GOLDEN_APPLE;5;0""
          ],
          ""rewardMoney"": 14000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 88,
          ""todoProgress"": {
            ""R"": 15
          },
          ""rewardMaterial"": [
          ""DIAMOND_BROADCAST|2"",
          ""COBBLESTONE|16""
          ],
          ""rewardMoney"": 14000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 89,
          ""todoProgress"": {
            ""O"": 10
          },
          ""rewardMaterial"": [
          ""ANCIENT_DEBRIS;1;0""
          ],
          ""rewardMoney"": 15000,
          ""rewardCoin"": 0,
          ""addictionalInfo"": null
         },
         {
          ""dayNumber"": 90,
          ""todoProgress"": {
            ""SZ"": 5
          },
          ""rewardMaterial"": [
          ""COAL;64;0""
          ],
          ""rewardMoney"": 50000,
          ""rewardCoin"": 1,
          ""addictionalInfo"": null
         }
      ],
      ""requiredVipLevel"": 0,
      ""guiSlotID"": 11
    },
    {
      ""passUUID"": ""c78da6b9-99d1-4dc8-a269-01cf60e56b08"",
      ""passName"": ""§6SVIP"",
      ""passDescription"": [
        ""§7Nie ma"",
        ""§7i nie będzie""
      ],
      ""passMaterial"": ""DIAMOND"",
      ""passDays"": [
        {
          ""dayNumber"": 1,
          ""todoProgress"": {
            ""U"": 1
          },
          ""rewardMaterial"": [
          ""LAPIS_LAZULI;16;0"",
          ""DIAMOND;12;0""
          ],
          ""rewardMoney"": 1000000,
          ""rewardCoin"": 15,
          ""addictionalInfo"": null
         }
      ],
      ""requiredVipLevel"": 2,
      ""guiSlotID"": 15
    }
  ]"
qVQ2kSS2,how to find and remove files,elena1234,Bash,Tuesday 12th of December 2023 09:10:18 AM CDT,"find -iname ""*open*"" -and -name ""*[1,3,5,7,9]_open.txt"" | wc -w

find -empty

find -newer yesterday.txt

find -mmin 30 # exactly 30 min
find -mmin +30 # greather than 30 min
find -mmin -30 # less than 30 min
find -mtime -5 # less than 5 hours
find -mtime +5 # greather than 5 hours
find -atime -5 # less than 5 hours
find -atime +5 # greather than 5 hours

find -empty -exec rm '{}' ';'

find -empty | xargs ls-l
"
tz4gKh9J,Untitled,ibruuu,Java,Tuesday 12th of December 2023 09:07:15 AM CDT,"package Tiket;
import java.util.Scanner;
public class Rework {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Variable Deklarasi
        String Nama, Jenis, Fasilitas;
        int jumlah, jumlahbiaya, biayappn, total, kembalian, bayar;
        int hargatiket = 100000;
        int hargafasilitas = 0;

        System.out.println(""======================================"");
        System.out.println(""\tBiruTransit Express"");
        System.out.println(""======================================"");
        
        // Input dari User
        System.out.print(""Masukkan nama anda: "");
        Nama = input.nextLine();

        System.out.print(""\nMasukkan Jenis Kereta yang anda inginkan"");
        System.out.println(""Pilih antara kelas A/B/C/D"");
        System.out.println(""A = Ekonomi"");
        System.out.println(""B = Bisnis"");
        System.out.println(""C = VIP"");
        System.out.println(""D = Private"");
        System.out.print(""\nPilihan anda: "");
        Jenis = input.nextLine().toUpperCase();

        // ""||"" Adalah operator logika
        if (Jenis.equals(""A"") || Jenis.equals(""B"") || Jenis.equals(""C"") || Jenis.equals(""D"")) {
            if (Jenis.equals(""A"")) {
                hargatiket = 100000;
                Jenis = ""Ekonomi"";
            }
            if (Jenis.equals(""B"")) {
                hargatiket = 200000;
                Jenis = ""Bisnis"";
            }
            if (Jenis.equals(""C"")) {
                hargatiket = 300000;
                Jenis = ""VIP"";
            }
            if (Jenis.equals(""D"")) {
                hargatiket = 400000;
                Jenis = ""Private"";
            }

            System.out.print(""\nMasukkan Jumlah Tiket: "");
            jumlah = input.nextInt();
            input.nextLine();
            
            if (jumlah > 0) {

                System.out.println(""\nFasilitas Tambahan, pilih antara A/B/C"");
                System.out.println(""A = Selimut"");
                System.out.println(""B = Wifi"");
                System.out.println(""C = Makan"");
                System.out.print(""\nMasukkan Fasilitas (A/B/C): "");
                Fasilitas = input.nextLine().toUpperCase();

                // ""||"" Adalah operator logika
                if (""A"".equals(Fasilitas) || ""B"".equals(Fasilitas) || ""C"".equals(Fasilitas)) {
                    if (""A"".equals(Fasilitas)) {
                        hargafasilitas = 10000;
                        Fasilitas = ""Selimut"";
                        System.out.println(""\nFasilitas yang anda pilih: ""+Fasilitas);
                        System.out.println(""Harga Fasilitas: ""+hargafasilitas);
                    }
                    if (""B"".equals(Fasilitas)) {
                        hargafasilitas = 20000;
                        Fasilitas = ""Wifi"";
                        System.out.println(""\nFasilitas yang anda pilih: ""+Fasilitas);
                        System.out.println(""Harga Fasilitas: ""+hargafasilitas);
                    }
                    if (""C"".equals(Fasilitas)) {
                        hargafasilitas = 30000;
                        Fasilitas = ""Makan"";
                        System.out.println(""\nFasilitas yang anda pilih: ""+Fasilitas);
                        System.out.println(""Harga Fasilitas: ""+hargafasilitas);
                    }

                    jumlahbiaya = (hargatiket * jumlah) + hargafasilitas;
                    System.out.println(""\nJumlah biaya yang harus dibayar: ""+jumlahbiaya);
                    
                    biayappn = (int) (jumlahbiaya * 0.1);
                    System.out.println(""Harga Fasilitas: ""+biayappn);
                    
                    total = biayappn + jumlahbiaya;
                    System.out.println(""Total Biaya : "" + total);
                    
                    System.out.print(""Input uang anda: "");
                    bayar = input.nextInt();
                    
                    if (bayar >= total) {
                        kembalian = bayar - total;

                        System.out.println(""======================================"");
                        System.out.println(""\tStruk Pembayaran"");
                        System.out.println(""======================================"");

                        System.out.println(""Nama pelanggan: "" + Nama);
                        System.out.println(""Jenis kereta: "" + Jenis);
                        System.out.println(""Nama kereta: "" + ""BiruTransit Express"");
                        System.out.println(""\nHarga tiket: "" + hargatiket);
                        System.out.println(""Jumlah tiket: "" + jumlah);
                        System.out.println(""\nBiaya fasilitas tambahan: "" + hargafasilitas);
                        System.out.println(""Jumlah biaya: "" + jumlahbiaya);
                        System.out.println(""Biaya PPN: "" + biayappn);
                        System.out.println(""\nTotal bayar: "" + total);
                        System.out.println(""Bayar: "" + bayar);
                        System.out.println(""Kembalian: "" + kembalian);
                        
                    // Kondisi false (Tidak terpenuhi)    
                    } else {
                        System.err.println(""Mohon Maaf Uang Anda Kurang!"");
                    }
                } else {
                    System.err.println(""Masukkan Fasilitas Dengan Benar!"");
                }
            } else {
                System.err.println(""Masukkan Jumlah Tiket Lebih Dari 0"");
            }
        } else {
            System.err.println(""Masukkan Kelas Yang Benar!"");
        }
    }
}"
vgAsNffU,JSON_socket,VssA,Python,Tuesday 12th of December 2023 08:50:23 AM CDT,"import socket
import json
import pandas as pd

def get_website(organization_name):
    data = pd.read_csv('organizations.csv')
    website = data[data['Name'] == organization_name]['Website'].values
    if len(website) > 0:
        return website[0]
    else:
        return ""Organization not found""

def get_country(organization_name):
    data = pd.read_csv('organizations.csv')
    country = data[data['Name'] == organization_name]['Country'].values
    if len(country) > 0:
        return country[0]
    else:
        return ""Organization not found""

def get_number_of_employees(organization_name):
    data = pd.read_csv('organizations.csv')
    employees = data[data['Name'] == organization_name]['Number of Employees'].values
    if len(employees) > 0:
        return str(employees[0])
    else:
        return ""Organization not found""

def start_server():
    host = ""127.0.0.32""
    port = 12345
    
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
    server_socket.listen(1)

    while True:
        client_socket, address = server_socket.accept()
		data = client_socket.recv(1024)
		if data is None:
			break
        message = data.decode()
        if message == ""exit"":
            break
        print(f'Строка от клиента: {message}')
        request_data = json.loads(message)
        
        operation = request_data.get(""operation"")
        name = request_data.get(""name"")
        
        if operation == ""get_website"":
            result = get_website(name)
        elif operation == ""get_country"":
            result = get_country(name)
        elif operation == ""get_number_of_employees"":
            result = get_number_of_employees(name)
        else:
            result = ""Invalid operation""
        
        client_socket.send(result.encode())
        client_socket.close()

if __name__ == ""__main__"":
    start_server()
"
fUsAi3fr,Socket,VssA,Python,Tuesday 12th of December 2023 08:49:04 AM CDT,"import socket
import pandas as pd

def get_website(organization_name):
    data = pd.read_csv('organizations.csv')
    website = data[data['Name'] == organization_name]['Website'].values
	return website[0]


def start_server():
	
	host = ""127.0.0.32""
	port = 12345
    
	server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
	server_socket.listen(1)

    while True:
        client_socket, address = server_socket.accept()
		data = client_socket.recv(1024)
		message = data.decode()
		if message == ""exit"":
			break
		website = get_website(message)
		client_socket.send(website.encode())
        client_socket.close()

if __name__ == ""__main__"":
    start_server()
"
n1s29hb5,conf.json,Abhisek92,JSON,Tuesday 12th of December 2023 08:23:34 AM CDT,"{
  ""$schema"": ""https://raw.githubusercontent.com/Ylianst/MeshCentral/master/meshcentral-config-schema.json"",
  ""settings"": {
    ""WANonly"": true,
    ""LANonly"": false,
    ""Port"": 443,
    ""RedirPort"": 80,
    ""NoTls"": false,
    ""AllowLoginToken"": true,
    ""AllowFraming"": true,
    ""SessionKey"": ""xxxxxxxxxxx"",
    ""Minify"": true,
    ""WebRTC"": true,
    ""ClickOnce"": false,
    ""WebRtConfig"": {
    ""iceServers"": [
        {
          ""urls"": ""stun:stun.services.mozilla.com""
        },
        {
          ""urls"": ""stun:stun.l.google.com:19302""
        }
      ]
    }
  },
  ""domains"": {
    """": {
      ""title"": ""Mesh Central"",
      ""title2"": ""Remote Management"",
      ""_minify"": true,
      ""newAccounts"": false,
      ""userQuota"": 1048576,
      ""meshQuota"": 67108864
    }
  }
}
"
2QVqMaYu,News Dec12 23,Newscaster_Ned,Email,Tuesday 12th of December 2023 08:00:53 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎o‎w‎'‎s‎ ‎i‎t‎ ‎g‎o‎i‎n‎g‎ ‎y‎o‎u‎ ‎f‎r‎e‎a‎k‎s‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎""‎n‎e‎w‎s‎""‎.‎

R‎e‎p‎o‎r‎t‎:‎ ‎H‎a‎r‎v‎a‎r‎d‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎C‎l‎a‎u‎d‎i‎n‎e‎ ‎G‎a‎y‎ ‎t‎o‎ ‎S‎t‎a‎y‎;‎ ‎P‎l‎a‎g‎i‎a‎r‎i‎s‎m‎ ‎C‎o‎n‎c‎e‎r‎n‎s‎ ‎L‎i‎n‎g‎e‎r‎
P‎r‎o‎s‎e‎c‎u‎t‎o‎r‎s‎ ‎D‎e‎m‎a‎n‎d‎ ‎H‎o‎u‎s‎e‎ ‎A‎r‎r‎e‎s‎t‎ ‎f‎o‎r‎ ‎F‎o‎r‎m‎e‎r‎ ‎A‎l‎b‎a‎n‎i‎a‎n‎ ‎P‎r‎i‎m‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎
N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎S‎t‎i‎r‎s‎ ‎C‎o‎n‎t‎r‎o‎v‎e‎r‎s‎y‎ ‎B‎y‎ ‎C‎o‎m‎p‎a‎r‎i‎n‎g‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎7‎ ‎t‎o‎ ‎O‎s‎l‎o‎ ‎D‎e‎a‎t‎h‎s‎
A‎l‎l‎e‎g‎e‎d‎ ‎A‎r‎m‎e‎d‎ ‎I‎n‎t‎r‎u‎d‎e‎r‎ ‎D‎e‎a‎d‎ ‎A‎f‎t‎e‎r‎ ‎H‎o‎m‎e‎o‎w‎n‎e‎r‎ ‎O‎p‎e‎n‎s‎ ‎F‎i‎r‎e‎
B‎i‎d‎e‎n‎o‎m‎i‎c‎s‎ ‎S‎t‎u‎d‎y‎:‎ ‎L‎o‎w‎ ‎I‎n‎c‎o‎m‎e‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎S‎p‎e‎n‎d‎ ‎H‎a‎l‎f‎ ‎T‎h‎e‎i‎r‎ ‎S‎a‎l‎a‎r‎y‎ ‎o‎n‎ ‎H‎o‎u‎s‎i‎n‎g‎
1‎6‎ ‎S‎t‎a‎t‎e‎ ‎A‎G‎s‎ ‎S‎e‎e‎k‎ ‎t‎o‎ ‎Q‎u‎a‎s‎h‎ ‎C‎o‎m‎p‎a‎s‎s‎i‎o‎n‎a‎t‎e‎ ‎C‎a‎r‎e‎ ‎f‎o‎r‎ ‎W‎o‎m‎e‎n‎
G‎l‎o‎b‎a‎l‎i‎s‎t‎ ‎T‎a‎k‎e‎o‎v‎e‎r‎:‎ ‎E‎x‎-‎E‎u‎r‎o‎c‎r‎a‎t‎ ‎T‎u‎s‎k‎ ‎I‎n‎s‎t‎a‎l‎l‎e‎d‎ ‎a‎s‎ ‎P‎o‎l‎i‎s‎h‎ ‎P‎M‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎a‎r‎v‎a‎r‎d‎ ‎S‎t‎a‎n‎d‎s‎ ‎b‎y‎ ‎P‎l‎a‎g‎i‎a‎r‎i‎s‎t‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎

S‎e‎e‎k‎s‎ ‎‘‎C‎o‎r‎r‎e‎c‎t‎i‎o‎n‎s‎’‎ ‎t‎o‎ ‎W‎r‎i‎t‎i‎n‎g‎s‎ ‎—‎ ‎A‎w‎a‎r‎e‎ ‎o‎f‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎S‎i‎n‎c‎e‎ ‎O‎c‎t‎.‎

B‎r‎u‎s‎h‎e‎s‎ ‎P‎a‎s‎t‎ ‎C‎a‎m‎p‎u‎s‎ ‎J‎e‎w‎ ‎H‎a‎t‎r‎e‎d‎:‎ ‎A‎p‎o‎l‎o‎g‎y‎ ‎A‎c‎c‎e‎p‎t‎e‎d‎!‎
H‎a‎r‎v‎a‎r‎d‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎-‎e‎l‎e‎c‎t‎ ‎C‎l‎a‎u‎d‎i‎n‎e‎ ‎G‎a‎y‎ ‎a‎r‎r‎i‎v‎e‎s‎ ‎o‎n‎ ‎s‎t‎a‎g‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎3‎7‎2‎n‎d‎ ‎C‎o‎m‎m‎e‎n‎c‎e‎m‎e‎n‎t‎ ‎a‎t‎ ‎H‎a‎r‎v‎a‎r‎d‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎C‎r‎a‎i‎g‎ ‎F‎.‎ ‎W‎a‎l‎k‎e‎r‎/‎T‎h‎e‎ ‎B‎o‎s‎t‎o‎n‎ ‎G‎l‎o‎b‎e‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
H‎a‎r‎v‎a‎r‎d‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎C‎l‎a‎u‎d‎i‎n‎e‎ ‎G‎a‎y‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎k‎e‎e‎p‎ ‎h‎e‎r‎ ‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎—‎ ‎f‎o‎r‎ ‎n‎o‎w‎ ‎—‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎f‎a‎i‎l‎i‎n‎g‎ ‎t‎o‎ ‎t‎a‎c‎k‎l‎e‎ ‎a‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎ ‎o‎n‎ ‎c‎a‎m‎p‎u‎s‎,‎ ‎a‎n‎d‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎f‎a‎i‎l‎i‎n‎g‎ ‎t‎o‎ ‎s‎t‎a‎t‎e‎ ‎t‎h‎a‎t‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎g‎e‎n‎o‎c‎i‎d‎e‎ ‎o‎f‎ ‎J‎e‎w‎s‎ ‎w‎o‎u‎l‎d‎ ‎v‎i‎o‎l‎a‎t‎e‎ ‎H‎a‎r‎v‎a‎r‎d‎’‎s‎ ‎c‎o‎d‎e‎ ‎o‎f‎ ‎c‎o‎n‎d‎u‎c‎t‎.‎

D‎r‎.‎ ‎P‎h‎i‎l‎ ‎C‎o‎n‎d‎e‎m‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎i‎e‎s‎ ‎f‎o‎r‎ ‎F‎o‎s‎t‎e‎r‎i‎n‎g‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎
D‎r‎.‎ ‎P‎h‎i‎l‎ ‎C‎o‎n‎d‎e‎m‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎i‎e‎s‎ ‎f‎o‎r‎ ‎F‎o‎s‎t‎e‎r‎i‎n‎g‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎
3‎,‎3‎5‎6‎
N‎o‎l‎t‎e‎:‎ ‎A‎v‎e‎r‎a‎g‎e‎ ‎M‎o‎n‎t‎h‎l‎y‎ ‎M‎o‎r‎t‎g‎a‎g‎e‎ ‎P‎a‎y‎m‎e‎n‎t‎ ‎S‎o‎a‎r‎s‎ ‎t‎o‎ ‎$‎3‎,‎3‎2‎2‎ ‎I‎n‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎
N‎o‎l‎t‎e‎:‎ ‎A‎v‎e‎r‎a‎g‎e‎ ‎M‎o‎n‎t‎h‎l‎y‎ ‎M‎o‎r‎t‎g‎a‎g‎e‎ ‎P‎a‎y‎m‎e‎n‎t‎ ‎S‎o‎a‎r‎s‎ ‎t‎o‎ ‎$‎3‎,‎3‎2‎2‎ ‎I‎n‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎
5‎,‎8‎6‎2‎

P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎R‎a‎d‎i‎c‎a‎l‎s‎ ‎T‎a‎r‎g‎e‎t‎ ‎S‎y‎m‎b‎o‎l‎s‎ ‎o‎f‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎i‎t‎y‎
4‎,‎0‎2‎4‎
T‎a‎y‎l‎o‎r‎ ‎S‎w‎i‎f‎t‎ ‎A‎t‎t‎e‎n‎d‎e‎d‎ ‎R‎a‎m‎y‎ ‎Y‎o‎u‎s‎s‎e‎f‎'‎s‎ ‎S‎t‎a‎n‎d‎u‎p‎ ‎S‎h‎o‎w‎ ‎B‎e‎n‎e‎f‎i‎t‎t‎i‎n‎g‎ ‎G‎a‎z‎a‎ ‎C‎h‎a‎r‎i‎t‎y‎
T‎a‎y‎l‎o‎r‎ ‎S‎w‎i‎f‎t‎ ‎A‎t‎t‎e‎n‎d‎e‎d‎ ‎R‎a‎m‎y‎ ‎Y‎o‎u‎s‎s‎e‎f‎'‎s‎ ‎S‎t‎a‎n‎d‎u‎p‎ ‎S‎h‎o‎w‎ ‎B‎e‎n‎e‎f‎i‎t‎t‎i‎n‎g‎ ‎G‎a‎z‎a‎ ‎C‎h‎a‎r‎i‎t‎y‎
1‎,‎4‎0‎2‎
C‎h‎e‎n‎e‎y‎:‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎P‎a‎t‎h‎e‎t‎i‎c‎ ‎f‎o‎r‎ ‎B‎e‎i‎n‎g‎ ‎W‎i‎l‎l‎i‎n‎g‎ ‎t‎o‎ ‎S‎e‎r‎v‎e‎ ‎i‎n‎ ‎S‎e‎c‎o‎n‎d‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎
C‎h‎e‎n‎e‎y‎:‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎P‎a‎t‎h‎e‎t‎i‎c‎ ‎f‎o‎r‎ ‎B‎e‎i‎n‎g‎ ‎W‎i‎l‎l‎i‎n‎g‎ ‎t‎o‎ ‎S‎e‎r‎v‎e‎ ‎i‎n‎ ‎S‎e‎c‎o‎n‎d‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎
4‎9‎0‎
S‎C‎O‎T‎U‎S‎ ‎D‎e‎c‎l‎i‎n‎e‎s‎ ‎t‎o‎ ‎T‎a‎k‎e‎ ‎U‎p‎ ‎‘‎C‎o‎n‎v‎e‎r‎s‎i‎o‎n‎ ‎T‎h‎e‎r‎a‎p‎y‎'‎ ‎B‎a‎n‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎
S‎C‎O‎T‎U‎S‎ ‎D‎e‎c‎l‎i‎n‎e‎s‎ ‎t‎o‎ ‎T‎a‎k‎e‎ ‎U‎p‎ ‎‘‎C‎o‎n‎v‎e‎r‎s‎i‎o‎n‎ ‎T‎h‎e‎r‎a‎p‎y‎'‎ ‎B‎a‎n‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎
2‎8‎0‎
R‎o‎m‎n‎e‎y‎:‎ ‎H‎a‎l‎e‎y‎ ‎I‎s‎ ‎t‎h‎e‎ ‎'‎O‎n‎l‎y‎ ‎O‎n‎e‎ ‎t‎h‎a‎t‎ ‎H‎a‎s‎ ‎a‎ ‎S‎h‎o‎t‎’‎ ‎t‎o‎ ‎B‎e‎a‎t‎ ‎T‎r‎u‎m‎p‎
R‎o‎m‎n‎e‎y‎:‎ ‎H‎a‎l‎e‎y‎ ‎I‎s‎ ‎t‎h‎e‎ ‎'‎O‎n‎l‎y‎ ‎O‎n‎e‎ ‎t‎h‎a‎t‎ ‎H‎a‎s‎ ‎a‎ ‎S‎h‎o‎t‎’‎ ‎t‎o‎ ‎B‎e‎a‎t‎ ‎T‎r‎u‎m‎p‎
3‎,‎0‎0‎2‎
S‎C‎O‎T‎U‎S‎ ‎t‎o‎ ‎Q‎u‎i‎c‎k‎l‎y‎ ‎D‎e‎c‎i‎d‎e‎ ‎o‎n‎ ‎R‎e‎q‎u‎e‎s‎t‎ ‎t‎o‎ ‎H‎e‎a‎r‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎I‎m‎m‎u‎n‎i‎t‎y‎ ‎D‎e‎f‎e‎n‎s‎e‎
S‎C‎O‎T‎U‎S‎ ‎t‎o‎ ‎Q‎u‎i‎c‎k‎l‎y‎ ‎D‎e‎c‎i‎d‎e‎ ‎o‎n‎ ‎R‎e‎q‎u‎e‎s‎t‎ ‎t‎o‎ ‎H‎e‎a‎r‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎I‎m‎m‎u‎n‎i‎t‎y‎ ‎D‎e‎f‎e‎n‎s‎e‎
2‎,‎5‎5‎1‎
C‎o‎l‎l‎a‎g‎e‎ ‎o‎f‎ ‎f‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎a‎t‎ ‎S‎t‎a‎t‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎o‎n‎ ‎(‎W‎i‎n‎ ‎M‎c‎N‎a‎m‎e‎e‎ ‎/‎ ‎A‎F‎P‎ ‎/‎ ‎G‎e‎t‎t‎y‎)‎,‎ ‎V‎i‎v‎e‎k‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎ ‎s‎p‎e‎a‎k‎i‎n‎g‎ ‎a‎t‎ ‎a‎ ‎M‎o‎m‎s‎ ‎f‎o‎r‎ ‎L‎i‎b‎e‎r‎t‎y‎ ‎e‎v‎e‎n‎t‎ ‎(‎M‎i‎c‎h‎a‎e‎l‎ ‎M‎.‎ ‎S‎a‎n‎t‎i‎a‎g‎o‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎,‎ ‎a‎n‎d‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎a‎t‎ ‎a‎ ‎t‎o‎w‎n‎ ‎h‎a‎l‎l‎ ‎(‎A‎P‎ ‎P‎h‎o‎t‎o‎/‎R‎o‎b‎e‎r‎t‎ ‎F‎.‎ ‎B‎u‎k‎a‎t‎y‎)‎.‎
N‎o‎l‎t‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎C‎r‎u‎s‎h‎i‎n‎g‎ ‎E‎v‎e‎r‎y‎o‎n‎e‎ ‎i‎n‎ ‎I‎o‎w‎a‎ ‎P‎e‎r‎ ‎D‎e‎s‎ ‎M‎o‎i‎n‎e‎s‎ ‎R‎e‎g‎i‎s‎t‎e‎r‎ ‎P‎o‎l‎l‎
3‎,‎1‎0‎2‎
D‎O‎D‎ ‎T‎o‎p‎ ‎B‎r‎a‎s‎s‎ ‎F‎a‎w‎n‎s‎ ‎o‎v‎e‎r‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎a‎t‎ ‎D‎O‎D‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎a‎s‎ ‎H‎e‎ ‎A‎s‎k‎s‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎A‎i‎d‎
D‎O‎D‎ ‎T‎o‎p‎ ‎B‎r‎a‎s‎s‎ ‎F‎a‎w‎n‎s‎ ‎o‎v‎e‎r‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎a‎t‎ ‎D‎O‎D‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎a‎s‎ ‎H‎e‎ ‎A‎s‎k‎s‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎A‎i‎d‎

N‎e‎w‎a‎r‎k‎ ‎T‎r‎a‎n‎s‎i‎t‎ ‎O‎f‎f‎i‎c‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎K‎i‎l‎l‎e‎r‎.‎

G‎o‎ ‎e‎a‎t‎ ‎K‎F‎C‎ ‎i‎n‎ ‎h‎e‎l‎l‎.‎


D‎N‎A‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎ ‎L‎e‎a‎d‎s‎ ‎t‎o‎ ‎A‎r‎r‎e‎s‎t‎ ‎o‎f‎ ‎M‎o‎n‎k‎e‎y‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎O‎c‎e‎a‎n‎s‎i‎d‎e‎ ‎M‎a‎n‎.‎


G‎r‎o‎i‎d‎ ‎a‎n‎d‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎M‎a‎s‎s‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎s‎ ‎i‎n‎ ‎L‎A‎.‎


W‎h‎i‎t‎e‎ ‎B‎i‎t‎c‎h‎ ‎D‎i‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎B‎u‎y‎i‎n‎g‎ ‎D‎r‎u‎g‎s‎ ‎f‎r‎o‎m‎ ‎N‎e‎g‎r‎o‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎9‎°‎
/‎5‎2‎°‎
2‎%‎
E‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎2‎ ‎|‎ ‎D‎a‎y‎
6‎9‎°‎
2‎%‎
E‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
A‎ ‎m‎i‎x‎ ‎o‎f‎ ‎c‎l‎o‎u‎d‎s‎ ‎a‎n‎d‎ ‎s‎u‎n‎ ‎e‎a‎r‎l‎y‎ ‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎6‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
3‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎1‎ ‎p‎m‎
T‎u‎e‎ ‎1‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎2‎°‎
2‎4‎%‎
E‎
1‎1‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎.‎ ‎S‎l‎i‎g‎h‎t‎ ‎c‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎a‎ ‎r‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎.‎ ‎L‎o‎w‎ ‎5‎2‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎0‎5‎ ‎a‎m‎
N‎e‎w‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
5‎:‎1‎1‎ ‎p‎m‎
W‎e‎d‎ ‎1‎3‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
5‎5‎°‎
/‎4‎8‎°‎
4‎7‎%‎
E‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎4‎°‎
2‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎
R‎a‎i‎n‎/‎T‎h‎u‎n‎d‎e‎r‎
6‎0‎°‎
/‎4‎6‎°‎
9‎3‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎7‎°‎
/‎3‎8‎°‎
1‎7‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎0‎°‎
/‎3‎8‎°‎
7‎%‎
N‎ ‎7‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎3‎9‎°‎
6‎%‎
N‎ ‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎2‎°‎
5‎%‎
S‎E‎ ‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎8‎°‎
7‎%‎
S‎S‎E‎ ‎6‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎5‎2‎°‎
2‎4‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎2‎
C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎0‎°‎
2‎4‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
S‎h‎o‎w‎e‎r‎s‎
6‎9‎°‎
/‎5‎2‎°‎
3‎6‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎8‎°‎
/‎5‎0‎°‎
4‎9‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎7‎°‎
2‎1‎%‎
N‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎8‎°‎
2‎4‎%‎
W‎ ‎8‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎t‎.‎ ‎N‎i‎g‎g‎e‎r‎l‎a‎s‎ ‎🎅🏿

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎h‎r‎i‎s‎-‎c‎h‎a‎n‎
C‎h‎r‎i‎s‎-‎C‎h‎a‎n‎ ‎(‎R‎e‎a‎l‎ ‎n‎a‎m‎e‎:‎ ‎C‎h‎r‎i‎s‎t‎i‎n‎e‎ ‎W‎e‎s‎t‎o‎n‎ ‎C‎h‎a‎n‎d‎l‎e‎r‎⚧‎;‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎W‎e‎s‎t‎o‎n‎ ‎C‎h‎a‎n‎d‎l‎e‎r‎ ‎a‎n‎d‎ ‎C‎h‎r‎i‎s‎t‎o‎p‎h‎e‎r‎ ‎W‎e‎s‎t‎o‎n‎ ‎C‎h‎a‎n‎d‎l‎e‎r‎ ‎a‎t‎ ‎h‎i‎s‎ ‎b‎i‎r‎t‎h‎ ‎t‎o‎ ‎a‎g‎e‎ ‎1‎1‎,‎ ‎b‎u‎t‎ ‎m‎o‎r‎e‎ ‎p‎o‎p‎u‎l‎a‎r‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎""‎T‎h‎a‎t‎ ‎F‎a‎t‎,‎ ‎R‎e‎t‎a‎r‎d‎e‎d‎,‎ ‎D‎e‎g‎e‎n‎e‎r‎a‎t‎e‎,‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎F‎u‎c‎k‎""‎;‎ ‎b‎.‎ ‎F‎e‎b‎r‎u‎a‎r‎y‎ ‎2‎4‎,‎ ‎1‎9‎8‎2‎:‎ ‎A‎g‎e‎ ‎4‎1‎)‎ ‎i‎s‎ ‎a‎ ‎f‎a‎t‎,‎ ‎s‎t‎u‎p‎i‎d‎,‎ ‎p‎e‎r‎v‎e‎r‎t‎e‎d‎,‎ ‎s‎u‎p‎p‎o‎s‎e‎d‎l‎y‎ ‎'‎c‎h‎r‎i‎s‎t‎i‎a‎n‎'‎,‎ ‎S‎E‎V‎E‎R‎E‎L‎Y‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎,‎ ‎b‎a‎s‎e‎m‎e‎n‎t‎-‎d‎w‎e‎l‎l‎i‎n‎g‎,‎ ‎l‎i‎b‎e‎r‎a‎l‎,‎ ‎t‎r‎a‎n‎n‎y‎-‎l‎o‎v‎i‎n‎g‎,‎ ‎t‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎,‎ ‎p‎e‎d‎o‎p‎h‎i‎l‎e‎,‎ ‎s‎e‎l‎f‎-‎p‎r‎o‎c‎l‎a‎i‎m‎e‎d‎ ‎(‎e‎x‎-‎)‎ ‎""‎v‎i‎r‎g‎i‎n‎ ‎w‎i‎t‎h‎ ‎r‎a‎g‎e‎""‎,‎ ‎d‎e‎g‎e‎n‎e‎r‎a‎t‎e‎ ‎m‎a‎n‎c‎h‎i‎l‎d‎,‎ ‎a‎n‎d‎ ‎c‎r‎e‎a‎t‎o‎r‎ ‎o‎f‎ ‎h‎i‎s‎ ‎o‎w‎n‎ ‎'‎s‎k‎i‎l‎l‎f‎u‎l‎l‎y‎-‎w‎r‎i‎t‎t‎e‎n‎'‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎s‎k‎i‎l‎l‎f‎u‎l‎l‎y‎-‎d‎r‎a‎w‎n‎ ‎s‎e‎r‎i‎e‎s‎ ‎o‎f‎ ‎c‎o‎m‎i‎c‎s‎ ‎s‎t‎a‎r‎r‎i‎n‎g‎ ‎a‎n‎ ‎i‎l‎l‎e‎g‎a‎l‎,‎ ‎Y‎a‎n‎k‎-‎m‎a‎d‎e‎ ‎b‎o‎o‎t‎l‎e‎g‎g‎e‎d‎ ‎v‎e‎r‎s‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎b‎l‎u‎e‎ ‎b‎l‎u‎r‎ ‎c‎a‎l‎l‎e‎d‎ ‎""‎S‎o‎n‎i‎c‎h‎u‎""‎:‎ ‎h‎i‎s‎ ‎s‎u‎p‎r‎e‎m‎e‎l‎y‎ ‎r‎e‎t‎a‎r‎d‎e‎d‎ ‎h‎y‎b‎r‎i‎d‎ ‎o‎f‎ ‎P‎i‎k‎a‎c‎h‎u‎ ‎a‎n‎d‎ ‎S‎o‎n‎i‎c‎ ‎t‎h‎e‎ ‎H‎e‎d‎g‎e‎h‎o‎g‎.‎

(‎(‎ ‎M‎o‎t‎h‎e‎r‎f‎u‎c‎k‎e‎r‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎p‎i‎n‎k‎ ‎c‎o‎c‎k‎a‎t‎o‎o‎ ‎(‎C‎a‎c‎a‎t‎u‎a‎ ‎l‎e‎a‎d‎b‎e‎a‎t‎e‎r‎i‎)‎ ‎i‎s‎ ‎a‎ ‎m‎e‎d‎i‎u‎m‎-‎s‎i‎z‎e‎d‎ ‎c‎o‎c‎k‎a‎t‎o‎o‎ ‎t‎h‎a‎t‎ ‎i‎n‎h‎a‎b‎i‎t‎s‎ ‎a‎r‎i‎d‎ ‎a‎n‎d‎ ‎s‎e‎m‎i‎-‎a‎r‎i‎d‎ ‎i‎n‎l‎a‎n‎d‎ ‎a‎r‎e‎a‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎,‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎e‎x‎c‎e‎p‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎n‎o‎r‎t‎h‎ ‎e‎a‎s‎t‎.‎ ‎T‎h‎e‎ ‎b‎i‎r‎d‎ ‎h‎a‎s‎ ‎a‎ ‎s‎o‎f‎t‎-‎t‎e‎x‎t‎u‎r‎e‎d‎ ‎w‎h‎i‎t‎e‎ ‎a‎n‎d‎ ‎s‎a‎l‎m‎o‎n‎-‎p‎i‎n‎k‎ ‎p‎l‎u‎m‎a‎g‎e‎ ‎a‎n‎d‎ ‎l‎a‎r‎g‎e‎,‎ ‎b‎r‎i‎g‎h‎t‎ ‎r‎e‎d‎ ‎a‎n‎d‎ ‎y‎e‎l‎l‎o‎w‎ ‎c‎r‎e‎s‎t‎.‎ ‎T‎h‎e‎ ‎s‎e‎x‎e‎s‎ ‎a‎r‎e‎ ‎q‎u‎i‎t‎e‎ ‎s‎i‎m‎i‎l‎a‎r‎,‎ ‎a‎l‎t‎h‎o‎u‎g‎h‎ ‎m‎a‎l‎e‎s‎ ‎a‎r‎e‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎b‎i‎g‎g‎e‎r‎ ‎w‎h‎i‎l‎e‎ ‎t‎h‎e‎ ‎f‎e‎m‎a‎l‎e‎ ‎h‎a‎s‎ ‎a‎ ‎b‎r‎o‎a‎d‎e‎r‎ ‎y‎e‎l‎l‎o‎w‎ ‎s‎t‎r‎i‎p‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎c‎r‎e‎s‎t‎ ‎a‎n‎d‎ ‎d‎e‎v‎e‎l‎o‎p‎s‎ ‎a‎ ‎r‎e‎d‎ ‎e‎y‎e‎ ‎w‎h‎e‎n‎ ‎m‎a‎t‎u‎r‎e‎.‎ ‎T‎h‎e‎ ‎p‎i‎n‎k‎ ‎c‎o‎c‎k‎a‎t‎o‎o‎ ‎i‎s‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎p‎a‎i‎r‎s‎ ‎o‎r‎ ‎s‎m‎a‎l‎l‎ ‎g‎r‎o‎u‎p‎s‎,‎ ‎a‎n‎d‎ ‎f‎e‎e‎d‎s‎ ‎b‎o‎t‎h‎ ‎o‎n‎ ‎t‎h‎e‎ ‎g‎r‎o‎u‎n‎d‎ ‎a‎n‎d‎ ‎i‎n‎ ‎t‎r‎e‎e‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎l‎i‎s‎t‎e‎d‎ ‎a‎s‎ ‎a‎n‎ ‎e‎n‎d‎a‎n‎g‎e‎r‎e‎d‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎b‎y‎ ‎t‎h‎e‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎n‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎.‎ ‎F‎o‎r‎m‎e‎r‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎M‎a‎j‎o‎r‎ ‎M‎i‎t‎c‎h‎e‎l‎l‎'‎s‎ ‎c‎o‎c‎k‎a‎t‎o‎o‎,‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎e‎x‎p‎l‎o‎r‎e‎r‎ ‎T‎h‎o‎m‎a‎s‎ ‎M‎i‎t‎c‎h‎e‎l‎l‎,‎ ‎t‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎w‎a‎s‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎l‎y‎ ‎r‎e‎n‎a‎m‎e‎d‎ ‎t‎h‎e‎ ‎p‎i‎n‎k‎ ‎c‎o‎c‎k‎a‎t‎o‎o‎ ‎i‎n‎ ‎2‎0‎2‎3‎ ‎b‎y‎ ‎B‎i‎r‎d‎L‎i‎f‎e‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎ ‎i‎n‎ ‎l‎i‎g‎h‎t‎ ‎o‎f‎ ‎M‎i‎t‎c‎h‎e‎l‎l‎'‎s‎ ‎i‎n‎v‎o‎l‎v‎e‎m‎e‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎a‎s‎s‎a‎c‎r‎e‎ ‎o‎f‎ ‎A‎b‎o‎r‎i‎g‎i‎n‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎t‎ ‎M‎o‎u‎n‎t‎ ‎D‎i‎s‎p‎e‎r‎s‎i‎o‎n‎,‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎a‎ ‎g‎e‎n‎e‎r‎a‎l‎ ‎t‎r‎e‎n‎d‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎n‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎n‎a‎m‎e‎s‎ ‎m‎o‎r‎e‎ ‎c‎u‎l‎t‎u‎r‎a‎l‎l‎y‎ ‎i‎n‎c‎l‎u‎s‎i‎v‎e‎.‎ ‎T‎h‎i‎s‎ ‎p‎i‎n‎k‎ ‎c‎o‎c‎k‎a‎t‎o‎o‎ ‎w‎i‎t‎h‎ ‎a‎ ‎r‎a‎i‎s‎e‎d‎ ‎c‎r‎e‎s‎t‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎n‎e‎a‎r‎ ‎M‎o‎u‎n‎t‎ ‎G‎r‎e‎n‎f‎e‎l‎l‎ ‎i‎n‎ ‎N‎e‎w‎ ‎S‎o‎u‎t‎h‎ ‎W‎a‎l‎e‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎J‎o‎h‎n‎ ‎H‎a‎r‎r‎i‎s‎o‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎g‎e‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎h‎o‎l‎i‎d‎a‎y‎ ‎s‎p‎i‎r‎i‎t‎ ‎b‎y‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎r‎e‎i‎n‎d‎e‎e‎r‎,‎ ‎t‎h‎e‎n‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎t‎i‎e‎ ‎y‎o‎u‎r‎ ‎m‎o‎m‎ ‎u‎p‎ ‎i‎n‎ ‎C‎h‎r‎i‎s‎t‎m‎a‎s‎ ‎l‎i‎g‎h‎t‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎r‎a‎p‎e‎ ‎h‎e‎r‎.‎"
FhNw1Lr4,longestConsecutive,D_L3,C++,Tuesday 12th of December 2023 07:40:18 AM CDT,"class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        unordered_set<int> numsSet;
        for(auto i : nums)
            numsSet.insert(i);
            
        int longest = 0;
        for(auto i : numsSet) {
            int len = 0;
            if(numsSet.count(i - 1) == 0){
                while(numsSet.count(i + len) != 0)
                    len ++;
                longest = max(longest, len);
            }
        }
        return longest;
    }
};"
BFJJf5rd,"Task1, final",stupid_pro,Pascal,Tuesday 12th of December 2023 07:06:45 AM CDT,"program t1;

uses Math;

type vector = array[integer] of char;

const N = 15;
const MAXDOUBLE = 1.7e308;
const MINDOUBLE = 5.0e-324;

var cntr_real_part: integer;
    arr_chars_cant_be_first: vector;
    arr_add: char;
    arr: vector;

    {flag для подсчёта char, образующих символ}
    flag_for_char: boolean; 

    trash: integer;

    {input_base - сс числа, вводоимого пользователем}
    code, base, i, curr_base, curr_digit: integer;

    sign, s: char;

    {flag для сс}
    flag_base: boolean;

    total_result, epsilon: double;
    digit_cntr: integer;

    {наше вещественное число}
    num, num_part_real: double;

    {знак числа, которое вводится через коммандную строку}
    intenal_sign: char;    

    digits_for_e: integer;

    {флаг для проверки слова 'finish'}
    flag_for_finish: boolean = False;

    {флаг для того, чтоб понять какой знак у total total_result}
    flag_for_total_result: boolean;

    flag_for_comments: boolean = False;

    {first_it - для того, чтобы проверить количество пробелов на первом цикле}
    count_prog_iteration, first_it: integer; 

    flag_for_integer_part: boolean = False;

    {проверка на количество char-ов в digit-е}
    flag_for_float_part: boolean = False;

    {проверка деления на нуль}
    flag_del_zero: boolean = False;

    {флаг для того, если первый символ строки не ялвяется знаком}
    flag_for_inappopriate_digit_in_input: boolean = False;

    flag_for_oveflow: boolean = False;
    flag_eoln: boolean = False;
    flag_for_space: boolean = False;
    flag_internal_tabs_for_ns: boolean = False;
    flag_alot_null: boolean = True;

procedure Case_comment();
var c: char;
begin
    repeat
        read(c);
    until (EOLn)
end;

{
    функция, которая будет контролировать самый(!!!) первый char в строке
    на соответствие требованиям
}
function For_first_digit(first_char: char): boolean;
var arr_chars_cant_be_first: vector;
    arr_add: char;
    i: integer;
    flag: boolean;
begin
    arr_add := '0';
    flag := False;

    for i := 1 to 10 do 
    begin
        arr_chars_cant_be_first[i] := arr_add;
        arr_add := succ(arr_add);
    end;

    arr_add := 'a';

    for i := 11 to 36 do 
    begin  
        if arr_add <> 'f' then 
            arr_chars_cant_be_first[i] := arr_add;
        arr_add := succ(arr_add);
    end;

    for i := 1 to 36 do 
    begin
        if arr_chars_cant_be_first[i] = first_char then 
        begin
            flag := True;
            break;
        end;
    end;

    For_first_digit := flag;
end;

function Double_to_int(number: double): integer;
var i: integer;
begin
    if abs(number - 0) < 0.1 then 
        Double_to_int := 0
    else 
    begin
        for i := 1 to 256 do 
        begin
            if abs(number - i) < 0.1 then 
            begin
                Double_to_int := i;
                break;
            end;
        end;
    end;
end;

{перевод из 10-й в 16-юю сс}
procedure From_any_to_hex(number: integer);
type vector = array[integer] of char;
var ch1, ch2: integer;
        mas_of_dec_to_hex: vector;
        piece: char;
        i: integer;
    char_ch1, char_ch2: char;
begin
    piece := '1';

    for i := 1 to 9 do 
    begin 
        mas_of_dec_to_hex[i] := piece;
        piece := succ(piece);
    end;

    piece := 'a';

    for i := 10 to 15 do 
    begin
        mas_of_dec_to_hex[i] := piece;
        piece := succ(piece);
    end;

    if number = 0 then
        write('00', ' ');
    if (1 <= number) and (number <= 15) then
        write('0', mas_of_dec_to_hex[number], ' ');
    if number > 15 then 
    begin
        ch1 := number mod 16;
        char_ch1 := mas_of_dec_to_hex[ch1];
        if ch1 = 0 then 
            char_ch1 := '0';
        number := number div 16;
        ch2 := number mod 16;
        char_ch2 := mas_of_dec_to_hex[ch2];
        if ch2 = 0 then char_ch2 := '0';
        write(char_ch2, char_ch1, ' ');
    end;
end;

{подсчёт количество цифр при переводе(точность)}
function E_count_digit(b: integer; eps: double): integer;
    var r: double;
begin
    r := Ln(1 / eps) / Ln(b);
    E_count_digit := trunc(r) + 1;
end;

{ставит пробелы при выводе}
procedure Space_bar(s: integer);
    var cntr, i: integer;
begin
cntr := 0;
    repeat
        s := s div 10;
        cntr := cntr + 1;
    until(s = 0);
    for i := 1 to (6 - cntr) do 
        write(' ');
end;


function Char_to_digit(a: vector; key: char; piece: integer): integer;
    var i: integer;
begin
    if key = '0' then
        Char_to_digit := 0
    else 
    begin
        for i := 1 to 15 do 
        begin
            if a[i] = key then 
            begin
                Char_to_digit := i
            end;
        end;
    end;
end;

{возведение в степень}
function Pow(n: integer; degree: integer): double;
    var i: integer;
        ans: double;
begin
    ans := 1;
    for i := 1 to degree do
        ans := ans * n; 
    Pow := ans;
end;

 {
    процедура вывода, с переводом числа
    accuracy - точность для вещ части, b - основание СС
}
procedure Output_with_conversion(accuracy, b: integer; num: double); 
    var del_cntr, i: integer; 
        float_part, temporary_float_part, digit: double;
        temporary_int_part, n, copy: double;
        int_digit, int_tmp_int_part: integer;

begin   
    del_cntr := 0;

{нашли целую часть нашего числа}
    n := int(num);

{дробная часть нашего числа}
    float_part := num - n;

{подсчёт количества делений числа на СС}
    copy := n;
    repeat 
        copy := copy / b;
        copy := int(copy);
        del_cntr := del_cntr + 1;
    until(copy - 0.001 <= 0);

    copy := n;

    del_cntr := del_cntr - 1;

    repeat
        digit := copy / (Pow(b, del_cntr));
        digit := int(digit);
        int_digit := Double_to_int(digit);
        From_any_to_hex(int_digit);
        copy := copy - int_digit * Pow(b, del_cntr);
        del_cntr := del_cntr - 1;
    until(del_cntr = -1);  

    write('. ');
    
    for i := 1 to accuracy do 
    begin
        temporary_float_part := float_part * b;
        temporary_int_part := int(temporary_float_part);
        int_tmp_int_part := Double_to_int(temporary_int_part);
        From_any_to_hex(int_tmp_int_part);
        float_part := frac(temporary_float_part);
    end;
    
end;

function Finish_invoke(): boolean;
var c: char;
    i: integer;
    flag: boolean = True;
begin
    for i := 1 to 6 do 
    begin
        read(c);
        if (i = 1) and (c <> 'i') then 
        begin
            flag := False;
            break;
        end
        else if (i = 2) and (c <> 'n') then 
        begin
            flag := False;
            break;
        end
        else if (i = 3) and (c <> 'i') then 
        begin
            flag := False;
            break;
        end
        else if (i = 4) and (c <> 's') then 
        begin
            flag := False;
            break;
        end
        else if (i = 5) and (c <> 'h') then 
        begin
            flag := False;
            break;
        end
    end;
    finish_invoke := flag;
end;

begin

    SetExceptionMask(GetExceptionMask + [exOverflow,exZeroDivide,exInvalidOp]);
    
    total_result := 0.0; 
    count_prog_iteration := 0;
    flag_for_char := False;
    flag_for_comments := False;
    flag_base := False;
    digit_cntr := 0;
    cntr_real_part := 0;
    num_part_real := 0;
    flag_for_inappopriate_digit_in_input := False;

    first_it := 0;

    {заполнение массива arr, чтобы получить значение char в 10-й СС}
    arr_add := '1';
    for i := 1 to 9 do 
    begin 
        arr[i] := arr_add;
        arr_add := succ(arr_add);
    end;
    arr_add := 'a';
    for i := 10 to 15 do 
    begin
        arr[i] := arr_add;
        arr_add := succ(arr_add);
    end;

    if ParamCount < 2 then 
    begin
        writeln('Неправильные параметры входной строки');
        Halt(0);
    end;

    {преобразование эпсилон в real}
    val(ParamStr(1), epsilon, code);

    if (epsilon > 1) or (epsilon <= 0) then 
    begin
        writeln('Неправильные параметры входной строки');
        Halt(0);
    end;

    {проверка введённых СС}
    for i := 2 to ParamCount do 
    begin
        val(ParamStr(i), base, code);
         if (base >= 257) or (base <= 1) then 
         begin
           writeln('Ошибка');
           Halt(0);
         end;
    end;

    while (not EOF) do 
    begin
        
        intenal_sign := '+'; 

        {определяем, какой знак получаем на вход}
        repeat
            if EOLn then 
            begin
                flag_eoln := True;
                break;
            end;

            read(s);

            if s = 'f' then 
            begin
                if Finish_invoke() then flag_for_finish := True
                else flag_for_inappopriate_digit_in_input := True;
                break;
            end;

            if (s <> 'f') and (s <> ';') and (s <> '+') and (s <> '-')
                and (s <> '*') and (s <> '/') and (s <> ' ') then 
            begin
                flag_for_inappopriate_digit_in_input := True;
                break;
            end;
            
            if (s = ';') then 
            begin
                flag_for_comments := True;
                break;
            end;

            if (For_first_digit(s)) and (s <> ';') then 
            begin
                flag_for_inappopriate_digit_in_input := True;
                break;
            end;

        until ((s = '+') or (s = '-') or (s = '*') or (s = '/'));
        
        {если флаг остановки поднят, то выходим из цикла}
        if (flag_for_finish) and (count_prog_iteration = 0) then 
        begin
            writeln('Программа не выполнена ни разу: строка начинается со слова ''finish''');
            break;
        end;
        
        {если флаг неправильного первого знака поднят, ломаем программу}
        if (flag_for_inappopriate_digit_in_input) 
                and (count_prog_iteration = 0) then 
        begin
            writeln('Программа не выполнена ни разу, так как строка начинается не с арифметического знака');
            break;
        end;

        if (flag_for_inappopriate_digit_in_input) 
                and (count_prog_iteration <> 0) then 
        begin
            writeln('Ошибка: строка начинается не с арифметического знака');
            flag_for_inappopriate_digit_in_input := False;
            break;
        end;

        if (flag_for_comments and EOLn) then 
        begin
            flag_eoln := True;
            flag_for_comments := False;
        end;
        
        if flag_for_finish then 
            break;

        if (not flag_for_comments) then 
            sign := s;

        {считывание значения сс}
        repeat
            if EOLn then 
            begin
                flag_eoln := True;
                break;
            end;
            
            if flag_eoln then 
                break;

            if flag_for_comments then 
            begin
                break;
            end;

            read(s);
            
            first_it := first_it + 1;

            if flag_base and (s = #32) then 
                flag_internal_tabs_for_ns := True; //проверка на пробелы после СС

            if flag_base and flag_internal_tabs_for_ns 
                and (s <> #32) and (s <> ':') then 
            begin
                flag_for_inappopriate_digit_in_input := True;
                break;
            end;

            if (s <> ';') and (not(s in ['0'..'9']))
                 and (s <> #32) and (s <> ':') then 
            begin 
                flag_for_inappopriate_digit_in_input := True;
                break;
            end
            else 
                if (s <> #32) and (first_it = 1) then 
                begin
                    flag_for_space := True;
                    break;
                end;

            if (s = ';') and (count_prog_iteration = 0)  then 
            begin
                writeln('Программа не выполнена ни разу');
                flag_for_comments := True;
                Halt(0);   
            end 
            else if (s = ';') and (count_prog_iteration <> 0) then 
            begin
                writeln('Ошибка! Невозможно считать число по причине комментариев');
                flag_for_comments := True;
                break;
            end;

            if s in ['0'..'9'] then 
            begin
                    val(s, curr_digit, code);
                    if flag_base then
                        curr_base := curr_base * 10 + curr_digit
            else 
                begin
                    curr_base := curr_digit;
                    flag_base := True;
                end;
            end;
        until(s = ':'); 
        
        if (flag_for_comments and EOLn) then 
        begin
            flag_eoln := True;
            flag_for_comments := False;
        end;
        
        if flag_for_space then 
        begin
            writeln('Нет пробела между арифметическим знаком и системой счисления');
            break;
        end;

        if flag_for_inappopriate_digit_in_input 
                and (count_prog_iteration = 0) then
         begin
            writeln('Ошибка! Программа не выполнена ни разу!');
            break;
        end;

        if flag_for_inappopriate_digit_in_input 
                and (count_prog_iteration <> 0) then 
        begin
            writeln('Ошибка!');
            break;
        end;

        if ((curr_base > 256) or (curr_base <= 1)) and 
            (not flag_eoln) and (not flag_for_comments) then 
        begin
            writeln('Система счисления не удовлетворяет условиям задачи');
            break;
        end;

        {считываем число, а именно целую часть}
        repeat
            if EOLn then 
            begin
                flag_eoln := True;
                break;
            end;
            
            if flag_eoln then 
                break;

            if flag_for_comments then 
            begin 
                break;
            end;

            read(s);

            if (s <> '.') and (s <> #32) and (s <> ';') and (s <> '-') and 
                (s <> '+') and (not((s in ['0'..'9']) or (s in ['a'..'f']))) then 
            begin
                flag_for_inappopriate_digit_in_input := True;
                break;
            end;

            if (s = ';') and (count_prog_iteration = 0) 
                    and (flag_for_char) then 
            begin
                writeln('Программа не выполнена ни разу');
                Halt(0);   
            end;
            
            if (s = ';') and (not flag_for_char) then 
            begin
                flag_for_comments := True;
                break;
            end;

            if (s = ';') and (count_prog_iteration <> 0) 
                    and (flag_for_char) then 
            begin
                flag_for_comments := True;
                writeln('Ошибка: неправильно введены цифры числа#');
                break;
            end;

            if s = '-' then 
                intenal_sign := '-';
            
            if ((s in ['1'..'9']) or (s in ['a'..'f'])) then 
                flag_alot_null := False;

            if ((s in ['0'..'9']) or (s in ['a'..'f'])) 
                    and (flag_for_char = False) then 
            begin
                curr_digit := Char_to_digit(arr, s, trash);
                flag_for_char := True;
                digit_cntr := digit_cntr + 1;
                end
            else
            begin
                if ((s in ['0'..'9']) or (s in ['a'..'f']))
                        and (flag_for_char = True) then 
                begin
                    curr_digit := curr_digit * 16 + Char_to_digit(arr, s, trash);
                    if curr_digit >= curr_base then 
                    begin
                        writeln('Ошибка! Полученная цифра не удовлетворяет данной системе счисления');
                        Halt(0);
                    end;
                    {проверка num - числа на переполнение}
                    if ((num * curr_base) + curr_digit) > MAXDOUBLE then 
                    begin
                        writeln('Ошибка! Переполнение!');
                        flag_for_oveflow := True;
                        break;
                    end;
                    flag_for_char := False;
                    num := num * curr_base + curr_digit; 
                    curr_digit := 0;
                    end;
                end;
        until(s = '.');

        if (flag_for_comments and EOLn) then 
        begin
            flag_eoln := True;
            flag_for_comments := False;
        end;
        
        if flag_alot_null then 
            num := 0;

        if flag_for_oveflow then 
            break; 

        if flag_for_char then
        begin
            if (count_prog_iteration = 0) then 
            begin
                writeln('Ошибка! Нечётное число char, нельзя получить отдельные digits');
                Halt(0);
            end;
        end;

        if flag_for_inappopriate_digit_in_input then 
        begin
            writeln('Ошибка!');
            break;
        end;

        {далее считываем число после точки}
        repeat
            if EOLn then 
            begin
                flag_eoln := True;
                break;
            end;
            
            if flag_eoln then 
                break;

            if flag_for_comments then 
            begin
                break;
            end;

            read(s);

            if ((s <> #32) and (s <> ';') and
                (not((s in ['0'..'9']) or (s in ['a'..'f'])))) then 
            begin
                flag_for_inappopriate_digit_in_input := True;
                break;
            end;            

            if (s = ';') and (count_prog_iteration = 0) 
                    and (flag_for_char) then 
            begin
                writeln('Программа не выполнена ни разу');
                Halt(0);   
            end;
            
            if (s = ';') and (count_prog_iteration = 0)
                    and (not flag_for_char) then 
            begin
                flag_for_comments := True;
                break;
            end;

            if (s = ';') and (count_prog_iteration <> 0)
                    and (flag_for_char) then 
            begin
                flag_for_comments := True;
                writeln('Ошибка: неправильно введены цифры числа');
                flag_for_float_part := True;
                break;
            end;

            if (s = ';') and (count_prog_iteration <> 0)
                    and (not flag_for_char) then 
            begin
                flag_for_comments := True;
                break;
            end;
            
            if ((s in ['1'..'9']) or (s in ['a'..'f'])) then
                flag_alot_null := False;

            if ((s in ['0'..'9']) or (s in ['a'..'f']))
                    and (flag_for_char = False) then 
            begin
                curr_digit := Char_to_digit(arr, s, trash);
                flag_for_char := True;
                end
            else begin
                if ((s in ['0'..'9']) or (s in ['a'..'f'])) 
                        and (flag_for_char = True) then 
                begin
                    curr_digit := curr_digit * 16 
                                  + Char_to_digit(arr, s, trash);
                    if curr_digit >= curr_base then 
                    begin
                        writeln('Ошибка! Полученная цифра не удовлетворяет данной системе счисления');
                        Halt(0);
                    end;
                    cntr_real_part := cntr_real_part + 1;
                    flag_for_char := False;
                    
                    if (Pow(curr_base, cntr_real_part) > MAXDOUBLE) 
                            and (not flag_alot_null) then 
                    begin
                        writeln('Ошибка! Переполнение!');
                        flag_for_oveflow := True;
                        break;
                    end;
                    if (num_part_real + curr_digit / 
                        Pow(curr_base, cntr_real_part) > MAXDOUBLE) 
                        and (not flag_alot_null) then 
                    begin
                        flag_for_oveflow := True;
                        writeln('Ошибка! Переполнение!');
                        break;
                    end;
                    if flag_alot_null then 
                        num_part_real := 0
                    else num_part_real := num_part_real + 
                        curr_digit / Pow(curr_base, cntr_real_part);
                    end;
                end;
        until(EOLn);

        if (flag_for_comments and EOLn) then 
        begin
            flag_eoln := True;
            flag_for_comments := False;
        end;
        
        if flag_alot_null then 
            num_part_real := 0;

        if flag_for_float_part 
            then break;

        if flag_for_oveflow then 
            break;       

        if (flag_for_char = True) then 
        begin
            flag_for_char := False;
            if (count_prog_iteration = 0) then 
            begin
                writeln('Ошибка!');
                break;
            end;
        end;

        if flag_for_inappopriate_digit_in_input then
         begin
            writeln('Ошибка!##');
            break;
        end; 
        
        if flag_for_comments then Case_comment();

        if num + num_part_real > MAXDOUBLE then 
        begin
            writeln('Ошибка! Переполнение!');
            break;
        end
        else num := num + num_part_real;


        count_prog_iteration := count_prog_iteration + 1;

        if intenal_sign = '-' then
            num := num * (-1);  

        if sign = '+' then 
        begin
            if (total_result + num) > MAXDOUBLE then 
            begin
                flag_for_oveflow := True;
                writeln('Ошибка! Переполнение!');
                break;
            end
                else total_result := total_result + num;
        end;


        if (sign = '-') then 
        begin
            if (total_result - num) < MINDOUBLE then 
            begin
                flag_for_oveflow := True;
                writeln('Ошибка! Переполнение!');
                break;
            end
                else total_result := total_result - num;
        end;

        if (sign = '*') then 
        begin
              if (total_result * num) > MAXDOUBLE then 
              begin
                flag_for_oveflow := True;
                writeln('Ошибка! Переполнение!');
                break;
            end
                else total_result := total_result * num;
        end;

        if (sign = '/') then 
        begin
            if (total_result / num < MINDOUBLE) 
                    or (total_result / num > MAXDOUBLE)
             or (IsNaN(total_result / num)) then 
            begin
                flag_for_oveflow := True;
                writeln('Ошибка!');
                break;
            end
            else if IsInfinite(total_result / num) then 
            begin
                    flag_for_oveflow := True;
                    writeln('Ошибка: Деление на ноль. Невозможно совершить операцию.');
                    break;
                end
            else total_result := total_result / num;
        end;
        
        sign := ' ';
        flag_base := False;
        flag_for_char := False;
        curr_base := 0;
        curr_digit := 0;
        num := 0;
        num_part_real := 0;
        cntr_real_part := 0;
        flag_for_comments := False;
        flag_for_oveflow := False;
        flag_eoln := False;
        flag_for_inappopriate_digit_in_input := False;
        flag_for_space := False;
        first_it := 0;
        flag_internal_tabs_for_ns := False;
        flag_alot_null := True;
        readln();

    end;

    if total_result < 0 then
    begin
        flag_for_total_result := False;
        total_result := total_result * (-1);
    end
        else flag_for_total_result := True;

    {пошёл вывод}
    for i := 2 to ParamCount do 
    begin
        val(ParamStr(i), base, code);
        write(base);
        Space_bar(base);
        if flag_for_total_result = False then
            write('-');
        digits_for_e := E_count_digit(base, epsilon); 
        Output_with_conversion(digits_for_e, base, total_result);
        writeln;
    end;

end."
QUVtgQ1h,python convert biner,firzaelbuho,Python,Tuesday 12th of December 2023 06:32:12 AM CDT,"def to_binary(number):
    integer_part = int(number)
    fractional_part = number - integer_part

    # Konversi bagian integer ke biner
    binary_integer = bin(integer_part)[2:]

    # Konversi bagian pecahan ke biner
    binary_fractional = """"
    max_fractional_length = 8
    while fractional_part > 0 and len(binary_fractional) < max_fractional_length:
        fractional_part *= 2
        bit = int(fractional_part)
        binary_fractional += str(bit)
        fractional_part -= bit

    return binary_integer + (""."" + binary_fractional if binary_fractional else """")


def to_octal(number):
    integer_part = int(number)
    fractional_part = number - integer_part

    # Konversi bagian integer ke oktal
    octal_integer = oct(integer_part)[2:]

    # Konversi bagian pecahan ke oktal
    octal_fractional = """"
    max_fractional_length = 8
    while fractional_part > 0 and len(octal_fractional) < max_fractional_length:
        fractional_part *= 8
        digit = int(fractional_part)
        octal_fractional += str(digit)
        fractional_part -= digit

    return octal_integer + (""."" + octal_fractional if octal_fractional else """")


def to_hexadecimal(number):
    integer_part = int(number)
    fractional_part = number - integer_part

    # Konversi bagian integer ke heksadesimal
    hex_integer = hex(integer_part)[2:]

    # Konversi bagian pecahan ke heksadesimal
    hex_fractional = """"
    max_fractional_length = 8
    while fractional_part > 0 and len(hex_fractional) < max_fractional_length:
        fractional_part *= 16
        digit = int(fractional_part)
        if digit < 10:
            hex_fractional += str(digit)
        else:
            hex_fractional += chr(ord('A') + digit - 10)
        fractional_part -= digit

    return hex_integer + (""."" + hex_fractional if hex_fractional else """")


def main():
    input_number = float(input(""Masukkan bilangan: ""))
    choice = int(input(""Pilih konversi yang diinginkan:\n1. Biner\n2. Heksadesimal\n3. Oktaf\nPilihan Anda: ""))

    if choice == 1:
        print(""Hasil konversi ke biner:"", to_binary(input_number))
    elif choice == 2:
        print(""Hasil konversi ke heksadesimal:"", to_hexadecimal(input_number))
    elif choice == 3:
        print(""Hasil konversi ke oktal:"", to_octal(input_number))
    else:
        print(""Pilihan tidak valid."")


if __name__ == ""__main__"":
    main()
"
SmKCMd9U,визитка и банк Рагозина,Tkacenko,Autohotkey,Tuesday 12th of December 2023 06:22:48 AM CDT,":?:/sbanka::
SendInput, {F6} {Enter}
sleep, 1
SendMessage, 0x50,, 0x4190419,, A
Sendinput,{F6}/me достал блокнот с ручкой {enter}
Sleep 1500
Sendinput,{F6}/me написал информацию на листочке {enter}
Sleep 1500
Sendinput,{F6}/me вырвал листик из блакнота и передал человеку напротив {enter}
Sleep 1500
Sendinput,{F6}/do На листочке написано: Банковский счет № 253714 {enter}
Return

:?:/vizitka::
SendInput, {F6} {Enter}
sleep, 1
SendMessage, 0x50,, 0x4190419,, A
Sendinput,{F6}/me вытащил визитку из кармана {enter}
Sleep 1500
Sendinput,{F6}/me Визитка в руках. {enter}
Sleep 1500
Sendinput,{F6}/me передал визитку человеку напротив {enter}
Sleep 1500
Sendinput,{F6}/do На визитке написано: [Начальник УСБ] - [МВД] - [А. Рагозин] - [тел. 35-86-35] {enter}
Sleep 1500
Sendinput,{F6}/n Discord: ragozin_002 {enter}
Return"
hW0VnFFk,youlikehits,HendarOfficial,PHP,Tuesday 12th of December 2023 06:00:45 AM CDT,"Link: https://pastebin.com/917PVMrg    
Pass: premium130foll  "
39F1JSCq,data780,TestGuy1,JSON,Tuesday 12th of December 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '7d14bec65769b7e079b150e628fa628a2bc245b3e9552b45b06919722ee6a5b3a411ed255b58e54ccb1e01dd154ca296534a26f5e806905180e46d4fdf9f5e3d3619f46ecf2d97e8e1a1d6bc7e93a540638a6b127bdd632ae2340cc2c852529e20f8dafc4d7ffe4edf7dcdec302fb2bdf561bacbc71d8d244578a575e2850452',
  otherdata: [
    '95c6ae7b21e8605a5da0e1d666074dc1',
    '17f586933f9bd677dd5042d831d6ebf8',
    '150bc71de9f474ba12b93923922a6e89',
    '457ce4fb812a37637a85aae5d5269a3b',
    'ae9a6b0d44d37bfb8fb46b8ebb1c54be',
    '9651d0e8fe5a1407b83395bbc75df4e7',
    'af20bf8ca405de6ee5cbf32ae9be7eed',
    '3f4a77c543b3aca8e9d4e8e296651dc4'
  ]
}"
917PVMrg,youlikehitspass,HendarOfficial,PHP,Tuesday 12th of December 2023 05:57:27 AM CDT,premium130foll  
S2LeXzEF,Untitled,DMxMWI-N3wbi3,JavaScript,Tuesday 12th of December 2023 05:53:28 AM CDT,"const axios = require(""axios"");
const request = require(""request"");
const fs = require(""fs"");

module.exports.config = {
  name: ""codm"",
  version: ""1"",
  hasPermssion: 0,
  credits: ""Eugene Aguilar"",
  description: ""Call of duty highlights video"",
  commandCategory: ""no prefix"",
  usages: ""..."",
  cooldowns: 6,
};
const lugmok = ""https://php-api.diciper09.repl.co"";
module.exports.handleEvent = async function ({ api, event }) {
  if (!(event.body.indexOf(""codm"") === 0 || event.body.indexOf(""Codm"") === 0))
    return;

  api.sendMessage(
    `⏱️ | 𝙑𝙞𝙙𝙚𝙤 𝙞𝙨 𝙨𝙚𝙣𝙙𝙞𝙣𝙜 𝙥𝙡𝙚𝙖𝙨𝙚 𝙬𝙖𝙞𝙩...`,
    event.threadID,
    event.messageID,
  );
  axios
    .get(`${lugmok}/codm/?apikey=omsimnida`)
    .then((res) => {
      const { url } = res.data;
      let ext = url.split(""."").pop();
      let callback = function () {
        api.sendMessage(
          {
            body: `Call Of Duty Mobile`,
            attachment: fs.createReadStream(__dirname + `/cache/codm.${ext}`),
          },
          event.threadID,
          () => fs.unlinkSync(__dirname + `/cache/codm.${ext}`),
          event.messageID,
        );
      };
      request(res.data.url)
        .pipe(fs.createWriteStream(__dirname + `/cache/codm.${ext}`))
        .on(""close"", callback);
    })
    .catch((err) => {
      api.sendMessage(
        ""error na bai maya naman"",
        event.threadID,
        event.messageID,
      );
      api.setMessageReaction(""❌"", event.messageID, (err) => {}, true);
    });
};
module.exports.run = async function ({ api, event }) {
  api.sendMessage(
    `This command doesn't need a prefix`,
    event.threadID,
    event.messageID,
  );
};
"
AJS0gWs4,деревья аисд,Vladislav8653,C,Tuesday 12th of December 2023 05:18:48 AM CDT,"#include ""stdio.h""
#include <stdlib.h>
#define nullptr NULL

struct tree {
    int data;
    struct tree *left;
    struct tree *right;
};

struct tree *createNode(int rootNode)
{
    struct tree *head = malloc(sizeof (struct tree));
    head->left = nullptr; // = null, но это эволюция
    head->right = nullptr;
    head->data = rootNode;
    return head;
}

void addNode (struct tree *head, int data)
{
    if (data < head->data){
        if (head->left != nullptr){
            addNode(head->left, data);
        } else {
            struct tree *node = createNode(data);
            head->left = node;
            // node->data = data;
        }
    } else if (data >= head->data) {
        if (head->right != nullptr){
            addNode(head->right, data);
        } else {
            struct tree *node = createNode(data);
            head->right = node;
            //node->data = data;
        }
    }
}

void freeTree (struct tree *head){
    if (head != nullptr){
        freeTree(head->right);
        freeTree(head->left);
        free(head);
    }
}

void print(struct tree *head, long n)
{
    long i;
    if (head)
    {
        print(head->right, n+5);
        for (i = 0; i < n; i++)
            printf("" "");
        printf(""%d\n"", head->data);
        print(head->left, n+5);
    }
}

void fromUptoDown (struct tree *head){
    if (head != nullptr){
        printf(""%d "", head->data);
        fromUptoDown(head->left);
        fromUptoDown(head->right);
    }
}

void fromDowntoUp (struct tree *head){
    if (head != nullptr){
        fromDowntoUp(head->left);
        fromDowntoUp(head->right);
        printf(""%d "", head->data);
    }
}

void fromLeftToRight (struct tree *head){
    if (head != nullptr){
        fromLeftToRight(head->left);
        printf(""%d "", head->data);
        fromLeftToRight(head->right);
    }
}

void rightThreadedInorder(struct tree *head) {
    struct tree *current = head;
    struct tree *prev = nullptr;
    while (current != nullptr) {
        if (current->left == nullptr) {
            printf(""%d -> "", current->data);
            current = current->right;
        } else {
            prev = current->left;
            while (prev->right != nullptr && prev->right != current) {
                prev = prev->right;
            }
            if (prev->right == nullptr) {
                prev->right = current;
                current = current->left;
            } else {
                prev->right = nullptr;
                printf(""%d -> "", current->data);
                current = current->right;
            }
        }
    }
    printf(""%d"", 50);
}

int main() {
    struct tree *head = createNode(50);
    addNode(head, 40);
    addNode(head, 30);
    addNode(head, 45);
    addNode(head, 60);
    addNode(head, 55);
    addNode(head, 70);
    print(head, 0);
    printf(""%s"", ""Top-to-bottom bypass: "");
    fromUptoDown(head); // сверху вниз
    printf(""%s"", ""\nBottom-to-top bypass: "");
    fromDowntoUp(head); // снизу вверх
    printf(""%s"", ""\nLeft-to-right bypass: "");
    fromLeftToRight(head); // слева направо
    printf(""%s"", ""\nFlashing: "");
    rightThreadedInorder(head);
    freeTree(head);
    return 0;
}

/*
построить дерево двоичного поиска, вывести его на экран
выполнить 3 полных обхода (вывести на экран), симметричную правую прошивку (вывести ее на экран)
*/"
LsTf0mVN,邀您一起看：出错[10],xiaomianao666,JavaScript,Tuesday 12th of December 2023 05:16:26 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥出错[10]@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWwjbm9SZWNvcmRIaXN0b3J5I1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIixcInBhZ2VzXCI6XCJbXVwifSIsInRpdGxlIjoi5Ye66ZSZWzEwXSJ9
UQjb11Ur,Compile Satanic Linux Kernel for Debian,teuk,Bash,Tuesday 12th of December 2023 05:10:53 AM CDT,"apt-mark hold linux-image*
cd /usr/src
wget ""https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.6.6.tar.xz""
tar xJf linux-6.6.6.tar.xz
cd linux-6.6.6
cp /boot/config-$(uname -r) .config
make nconfig # Press F9 and Save
./scripts/config -d CONFIG_MODULE_SIG_ALL -d CONFIG_MODULE_SIG_KEY -d CONFIG_SYSTEM_TRUSTED_KEYS
./scripts/config --disable DEBUG_INFO
make bindeb-pkg
dpkg -i linux-*6.6.6*.deb
# Shutdown apps and
reboot
"
TM70PnKJ,drawbot_Задание3,annstasi,Python,Tuesday 12th of December 2023 05:10:25 AM CDT,"from poetry_data.data import getData
from drawbot_skia.drawbot import *
from datetime import datetime

poetry = getData('poetry')
fireballs = getData('fireballs')

# # Подсчет авторов, у которых чаще всего падали болиды в день публикации
# author_counts = {}

# for fire in fireballs:
#     for poet in poetry:
#         if fire['date'].date() == poet['date'].date():
#             author = poet['author']
#             if author in author_counts:
#                 author_counts[author] += 1
#             else:
#                 author_counts[author] = 1

# print(author_counts)
# value_key_pairs = ((value, key) for (key,value) in author_counts.items())
# # Сортировка по частоте
# sorted_value_key_pairs = sorted(value_key_pairs, reverse=True)
# print(sorted_value_key_pairs)

# # Итог:
# # 16 Чарльз Буковски, 14 Андрей Гришаев, 13 Михаил Айзенберг, 13 Виталий Пуханов, 13 Василий Бородин 
# # 12 Ян Сатуновский, 11 Всеволод Некрасов, 10 Оксана Васякина, 10 Данила Давыдов, 9 София Полякова

# Выбор автора
author_name = 'Чарльз Буковски'
# Выбираем одного автора и берем показатели энергии болидов
energies = []

for fire in fireballs:
     for poet in poetry:
         if (poet['author'] == author_name) & (fire['date'].date() == poet['date'].date()):
            #print(fire['energy'])
            energies.append(float(fire['energy']))
#print(energies)

# Суммируем энергию всех болидов для визуализации 
sum_fireballs = sum(energies)
x = 0
y = 0
date_text = 0

# Координаты и дату берем у максимального болида
for fire in fireballs:
    if float(fire['energy']) == max(energies):
        x = float(fire['lat'])
        y = float(fire['lon'])
        date_text = fire['date'].date()

# Ищем индекс текста автора в день максимального болида
text_index = 0
for index, poet in enumerate(poetry):
   if (poet['date'].date() == date_text) & (poet['author'] == author_name):
       #print(f""Text is at index: {index}"")
       text_index = index
       #print(poet['text'])

newPage(742.5, 1050)
# Берем текст в дату максимального болида
pub = poetry[text_index][""text""]
fontSize(30)
# font(""Times-Italic"", 30) не работает..
splitted_pub = pub.split(""\n"")
y_text = 1050 - 40
for line in splitted_pub:
    text(line, (10, y_text))
    y_text -= 25

# Ставим дату максимального болида
text(str(date_text), (550, 1000))

# Рисуем черный круг, где x = lat, y = lon максимального болида, радиус = сумма энергий всех болидов
shadow((0, 0), 30, (0, 0, 0))
oval(x, y, sum_fireballs, sum_fireballs)
fill(0, 0, 0)

saveImage(""page-001.pdf"")"
djb8RJ85,Advent of Code 2023 - Day 12,mgla,C#,Tuesday 12th of December 2023 04:52:39 AM CDT,"var input = File.ReadAllLines(""input.txt"");

var part1 = 0L;
var part2 = 0L;
var cache = new Dictionary<string, long>();

foreach (var line in input.Select(l => l.Split(' ')))
{
    var springs = line[0];
    var groups = line[1].Split(',').Select(int.Parse).ToList();
    
    part1 += Calculate(springs, groups);

    springs = string.Join('?', Enumerable.Repeat(springs, 5));
    groups = Enumerable.Repeat(groups, 5).SelectMany(g => g).ToList();

    part2 += Calculate(springs, groups);
}

Console.WriteLine($""Part1: {part1}"");
Console.WriteLine($""Part2: {part2}"");
return;

long Calculate(string springs, List<int> groups)
{
    var key = $""{springs},{string.Join(',', groups)}"";  // Cache key: spring pattern + group lengths

    if (cache.TryGetValue(key, out var value))
    {
        return value;
    }
    
    value = GetCount(springs, groups);
    cache[key] = value;

    return value;
}

long GetCount(string springs, List<int> groups)
{
    while (true)
    {
        if (groups.Count == 0)
        {
            return springs.Contains('#') ? 0 : 1; // No more groups to match: if there are no springs left, we have a match
        }

        if (string.IsNullOrEmpty(springs))
        {
            return 0; // No more springs to match, although we still have groups to match
        }

        if (springs.StartsWith('.'))
        {
            springs = springs.Trim('.'); // Remove all dots from the beginning
            continue;
        }

        if (springs.StartsWith('?'))
        {
            return Calculate(""."" + springs[1..], groups) + Calculate(""#"" + springs[1..], groups); // Try both options recursively
        }

        if (springs.StartsWith('#')) // Start of a group
        {
            if (groups.Count == 0)
            {
                return 0; // No more groups to match, although we still have a spring in the input
            }

            if (springs.Length < groups[0])
            {
                return 0; // Not enough characters to match the group
            }

            if (springs[..groups[0]].Contains('.'))
            {
                return 0; // Group cannot contain dots for the given length
            }

            if (groups.Count > 1)
            {
                if (springs.Length < groups[0] + 1 || springs[groups[0]] == '#') 
                {
                    return 0; // Group cannot be followed by a spring, and there must be enough characters left
                }

                springs = springs[(groups[0] + 1)..]; // Skip the character after the group - it's either a dot or a question mark
                groups = groups[1..];
                continue;
            }

            springs = springs[groups[0]..]; // Last group, no need to check the character after the group
            groups = groups[1..];
            continue;
        }

        throw new Exception(""Invalid input"");
    }
}"
5bysLxB6,Untitled,Skos_Martren,C++,Tuesday 12th of December 2023 04:00:29 AM CDT,"#include""profile.h""
#include<vector>
#include<iostream>
#include<algorithm>
#include<iomanip>
#include<future>
#include<execution> 
using namespace std;

//________________________________________________________________________

template <typename C>
struct SubRange {
	C& collection;
	size_t first_index, last_index;

	auto begin() const {
		return collection.begin() + first_index;
	}

	auto end() const {
		return collection.begin() + last_index;
	}

	size_t size() const {
		return last_index - first_index;
	}

};

template <typename Container>
class Paginator {
private:
	vector<SubRange<Container>> pages;

public:
	Paginator(Container& c, size_t page_size) {
		for (size_t i = 0; i < c.size(); i += page_size) {
			pages.push_back({ c, i,  min(i + page_size, c.size()) });
		}
	}

	auto begin() const {
		return pages.begin();
	}

	auto end() const {
		return pages.end();
	}

	size_t size() const {
		return pages.size();
	}
};

template <typename C>
Paginator<C> Paginate(C& c, size_t page_size) {
	return Paginator<C>(c, page_size);
}

//________________________________________________________________________


template <typename ContainerOfVectors>
void GenerateSingleThread(ContainerOfVectors& result, size_t first_row, size_t column_size) {
	for (auto& row : result) {
		row.reserve(column_size);
		for (size_t column = 0; column < column_size; ++column) {
			row.push_back(first_row ^ column);
		}
		++first_row;
	}
}

vector <vector <int>> GenerateSingleThread(size_t size) {
	vector <vector <int>> result(size);
	GenerateSingleThread(result, 0, size);
	return result;
}


vector <vector <int>> GenerateMultiThread(size_t size, size_t page_size) {
	vector <vector <int>> result(size);
	vector <future <void>> futures;
	size_t first_row = 0;
	for (auto page : Paginate(result, page_size)) {
		futures.push_back(
			async([page, first_row, size] {
				GenerateSingleThread(page, first_row, size);
				})
		);
		first_row += page_size;
	}
	return result;
}

template <typename ContainerOfVectors>
void for_each_GenerateMultiThread(
	ContainerOfVectors& result, size_t first_row, size_t column_size) {
	for_each(execution::par, begin(result), end(result),
		[&first_row, column_size](vector <int >& row) { // row элемент последовательности { begin(result), end(result)}, над которым и будут происходить изменения, указанные в теле лямбы, переданной в for_each
			row.reserve(column_size);
			for (size_t column = 0; column < column_size; ++column) {
				row.push_back(first_row ^ column);
			}
			++first_row;
		}
	);
}


int main() {
	LOG_DURATION(""Total"");
	const size_t matrix_size = 7000;
	vector <vector <int>> matrix;
	{
		LOG_DURATION(""Single thread generation"");
		matrix = GenerateSingleThread(matrix_size);
	}
	{
		LOG_DURATION(""Multi thread generation"");
		matrix = GenerateMultiThread(matrix_size, 2000);
	}
	{
		LOG_DURATION(""for_each Multi thread generation"");
		for_each_GenerateMultiThread(matrix, matrix_size, 2000);
	}
}
"
nu7YyG7H,Product bundles v6.4.0 Min/Max Items compatibility,palsushobhan,PHP,Tuesday 12th of December 2023 03:50:28 AM CDT,"add_filter('wcfm_product_bundles_general_fields', function($fields) {
    global $WCFMph, $wp;
    if( version_compare( $WCFMph->version, '1.0.8', '<=' ) && version_compare( WC_PB()->plugin_version(), '6.4.0', '>=' )) {
        $min_qty_limit = '';
        $max_qty_limit = '';
        if(!empty( $wp->query_vars['wcfm-products-manage'] )) {
            $product_id = $wp->query_vars['wcfm-products-manage'];
            $min_qty_limit = get_post_meta( $product_id, '_wcpb_min_qty_limit', true );
            $max_qty_limit = get_post_meta( $product_id, '_wcpb_max_qty_limit', true );
        }
        $min_max_fields = array( 
            ""_wcpb_min_qty_limit"" => array( 'label' => __( 'Min Bundle Size', 'woocommerce-product-bundles-min-max-items' ), 'type' => 'number', 'value' => $min_qty_limit, 'class' => 'wcfm-text', 'label_class' => 'wcfm_title', 'hints' => __( 'Minimum required quantity of bundled items.', 'woocommerce-product-bundles' ) ),
            ""_wcpb_max_qty_limit"" => array( 'label' => __( 'Max Bundle Size', 'woocommerce-product-bundles-min-max-items' ), 'type' => 'number', 'value' => $max_qty_limit, 'class' => 'wcfm-text', 'label_class' => 'wcfm_title', 'hints' => __( 'Maximum allowed quantity of bundled items.', 'woocommerce-product-bundles-min-max-items' ) ),
        );
        $index = array_search( ""_wc_pb_group_mode"", array_keys( $fields ) ) + 1;
        return array_slice( $fields, 0, $index, true ) +
            $min_max_fields +
            array_slice( $fields, $index, count( $fields ) - 1, true );
    
    }
    return $fields;
});
add_action( 'after_wcfm_products_manage_meta_save', function($new_product_id, $wcfm_products_manage_form_data) {
    global $WCFMph;
    $product_type = empty( $wcfm_products_manage_form_data['product_type'] ) ? WC_Product_Factory::get_product_type( $new_product_id ) : sanitize_title( stripslashes( $wcfm_products_manage_form_data['product_type'] ) );
    if ( $product_type != 'bundle' ) {
        return;
    }
    $product = wc_get_product( $new_product_id );
    if( version_compare( $WCFMph->version, '1.0.8', '<=' ) && version_compare( WC_PB()->plugin_version(), '6.4.0', '>=' )) {
        if ( ! empty( $wcfm_products_manage_form_data[ '_wcpb_min_qty_limit' ] ) && is_numeric( $wcfm_products_manage_form_data[ '_wcpb_min_qty_limit' ] ) ) {
            $product->add_meta_data( '_wcpb_min_qty_limit', stripslashes( $wcfm_products_manage_form_data[ '_wcpb_min_qty_limit' ] ), true );
        } else {
            $product->delete_meta_data( '_wcpb_min_qty_limit' );
        }
    
        if ( ! empty( $wcfm_products_manage_form_data[ '_wcpb_max_qty_limit' ] ) && is_numeric( $wcfm_products_manage_form_data[ '_wcpb_max_qty_limit' ] ) ) {
            $product->add_meta_data( '_wcpb_max_qty_limit', stripslashes( $wcfm_products_manage_form_data[ '_wcpb_max_qty_limit' ] ), true );
        } else {
            $product->delete_meta_data( '_wcpb_max_qty_limit' );
        }
        $product->save();
    }
}, 91, 2 );"
