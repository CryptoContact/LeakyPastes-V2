id,title,username,language,date,content
Vez7WJjS,Reso Info,CyberWaltz,JSON,Monday 24th of July 2023 06:48:19 AM CDT,"{
  ""bookedBy"": {
    ""birthday"": ""1995-08-30"",
    ""fullName"": ""Dmitriy Bogdanov"",
    ""hasFacebookProfile"": false,
    ""id"": 63654,
    ""isAdmin"": false,
    ""userpic"": ""https://dzbwcqs3bd4zb.cloudfront.net/f669d7fe-cd48-419b-970c-339be5f57f71.png""
  },
  ""bookingNote"": """",
  ""bottleService"": ""NONE"",
  ""coloredTags"": [
    {
      ""bgColor"": ""007A9BFF"",
      ""id"": 78,
      ""name"": ""#FRIEND OF OWNER"",
      ""orderIndex"": 7,
      ""venueId"": 463
    },
    {
      ""bgColor"": ""5EB400FF"",
      ""id"": 100,
      ""name"": ""#BIG SPENDER"",
      ""orderIndex"": 2,
      ""venueId"": 463
    }
  ],
  ""complimentGirls"": false,
  ""complimentGuys"": false,
  ""deleted"": false,
  ""driverRequested"": {
    ""phoneNumber"": ""+79021233917"",
    ""pickUpTime"": ""02:00 PM"",
    ""guests"": 0,
    ""id"": 16,
    ""pickUpLocation"": ""q"",
    ""reservation"": 1333403,
    ""unitNumber"": ""q""
  },
  ""eventId"": 36213,
  ""guestInfo"": {
    ""email"": ""bogdanov.coh@gmail.com"",
    ""firstName"": ""Dmitriy"",
    ""fullName"": ""Dmitriy Bogdanov"",
    ""guestInfoId"": 352092,
    ""hasFacebookProfile"": false,
    ""id"": 352092,
    ""lastName"": ""Bogdanov"",
    ""lastReservationDate"": ""2023-07-24"",
    ""phoneNumber"": ""+79021233917""
  },
  ""id"": 1333403,
  ""mustEnter"": false,
  ""notifyEmailMgmtOnArrival"": false,
  ""notifyMgmtOnArrival"": false,
  ""payees"": [],
  ""photos"": [],
  ""reducedGirls"": false,
  ""reducedGuys"": false,
  ""reservationDate"": ""2023-07-24"",
  ""signatures"": [],
  ""staff"": [],
  ""status"": ""PENDING"",
  ""tags"": [],
  ""venueId"": 463
}"
duPeF6Zv,GA4 - app - flutter - select_promotion,filipr27,Dart,Monday 24th of July 2023 06:35:11 AM CDT,"// select_promotion
await FirebaseAnalytics.instance.logEvent(
    name: ""select_promotion"",
    parameters: {
        ""business_type"": b2c,  // b2b or b2c
        ""visitorStatus"": neprijavljen,  // prijavljen or neprijavljen
        ""page_category"": knjige,  // knjige, nekretnine, posao, usluge, etc, ostale stranice
        ""creative_slot"": top,  // position of the banner e.g. top, featured, footer, etc.
        ""promotion_name"": Stanovi Banjica,
    },
);"
xqzCpQ9W,GA4 - app - flutter - view_promotion,filipr27,Dart,Monday 24th of July 2023 06:34:44 AM CDT,"// view_promotion
await FirebaseAnalytics.instance.logEvent(
    name: ""view_promotion"",
    parameters: {
        ""business_type"": b2c,  // b2b or b2c
        ""visitorStatus"": neprijavljen,  // prijavljen or neprijavljen
        ""page_category"": knjige,  // knjige, nekretnine, posao, usluge, etc, ostale stranice
        ""creative_slot"": top,  // position of the banner e.g. top, featured, footer, etc.
        ""promotion_name"": Stanovi Banjica,  // position of the banner

    },
);"
z4hhKMQM,Untitled,35657,C++,Monday 24th of July 2023 06:28:35 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>
#include <filesystem>
#include <windows.h>


using namespace std;


// вывод содержимого директории с указанием размера для файлов
void PrintDirectoryInfo(const string& str) { // указываем путь к папке
	for (const auto& a : filesystem::directory_iterator(str)) { // обход всех файлов в директории
		string name = a.path().filename().string();
		string full_name = str + '/' + name;
		cout << setw(30) << name;
		if (filesystem::is_regular_file(full_name)) {
			cout << "" "" << setw(10) << filesystem::file_size(full_name) << "" byte"";
		}
		cout << endl;
	}
}
 
int DirectorySize(const string& str) { // указываем путь к папке
	int size = 0;
	for (const auto& a : filesystem::directory_iterator(str)) { // обход всех файлов в директории
		string full_name = str + '/' + a.path().filename().string();
		if (filesystem::is_regular_file(full_name)) {
			size += filesystem::file_size(full_name);
		}
		if (filesystem::is_directory(full_name)) {
			size += DirectorySize(full_name);
		}
	}
	return size;
}

void FindName(const string& find_name, const string& find_catalogue) {
	for (const auto& a : filesystem::directory_iterator(find_catalogue)) {
		string name = a.path().filename().string();
		string full_name = find_catalogue + '/' + name;
		if (name == find_name) {
			cout << full_name << endl;
		}
		if (filesystem::is_directory(full_name)) {
			FindName(find_name, full_name);
		}
	}
}

void FindNameMask(const string& find_name, const string& find_catalogue) { 
	for (const auto& a : filesystem::directory_iterator(find_catalogue)) {
		string name = a.path().filename().string();
		string full_name = find_catalogue + '/' + name;
		if (name.find(find_name) != string::npos) {
			cout << full_name << endl;
		}
		if (filesystem::is_directory(full_name)) {
			FindNameMask(find_name, full_name);
		}
	}
}


int main() {

	SetConsoleCP(1251); // установка кодировки 1251 в поток ввода
	SetConsoleOutputCP(1251); // установка кодировки 1251 в поток вывода

	PrintDirectoryInfo(""C:/Users/PC/Desktop"");
	cout << ""======================"" << endl;
	cout << DirectorySize(""C:/Users/PC/Desktop"") << endl;
	cout << ""======================"" << endl;
	FindName(""решения"", ""C:/Users/PC/Desktop"");
	cout << ""======================"" << endl;
	FindNameMask(""решения"", ""C:/Users/PC/Desktop"");
}"
jB10pYBh,GA4 - app - flutter - save_search,filipr27,Dart,Monday 24th of July 2023 06:25:51 AM CDT,"// save_search
await FirebaseAnalytics.instance.logEvent(
    name: ""save_search"",
    parameters: {
        ""business_type"": b2c,  // b2b or b2c
        ""visitorStatus"": neprijavljen,  // prijavljen or neprijavljen
        ""page_category"": knjige,  // knjige, nekretnine, posao, usluge, etc, ostale stranice
    },
);"
xmJj5wLM,data643,TestGuy1,JSON,Monday 24th of July 2023 06:13:13 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '758a21f047146d7824531ee6d7e88847815e309df5fc3671e95694d675a15cf61557f7091525754800b97c4386a933973d8f375a6d2a31af3360902734d6c02346868f16f0e7cdfa88d8169095a3f577f7c4b1850658b8e00411ceacc85ba04d33fb68b19c3b907da8ebbeea24e851d5200ebcffeb9d35ecc90e495157c70ad7',
  otherdata: [
    '8aa57201dbe3639ddaaa68b6ce8bb70c',
    'ca9b368bf2677f5f3b27d12189e929a1',
    'e9370fc9f6d9040064f922eb7a515257',
    '0d98e489c5db3f85d0d45c9b09f5eb6b',
    '848091947330ff9e835072b7dbdfe9b5',
    'c222f3d630c5364fece71dd8ba76f2f8',
    '33d463820016d93acf1afc8cf02a38f2',
    '0bf62d68e492adca673b0ae4a2790e48'
  ]
}"
ZbUkzR4v,Untitled,fenixD3,C++,Monday 24th of July 2023 06:02:50 AM CDT,"#include <iostream>
#include <vector>
#include <iterator>
#include <unordered_map>

template <template <typename> class TCont, typename TType>
TCont<TType> fill_from(int count, std::istream& from)
{
    TCont<TType> seq;
    seq.reserve(count);

    std::copy(
        std::istream_iterator<TType>(from),
        std::istream_iterator<TType>(),
        std::inserter(seq, seq.end()));

    return seq;
}

int get_ranges_count(const std::vector<int>& nums)
{
    constexpr int Modulo = 200;

    std::unordered_map<int, int> modulo_to_cnt;
    for (int num : nums)
    {
        ++modulo_to_cnt[num % Modulo];
    }

    int ranges_cnt = 0;
    for (auto [_, mod_cnt] : modulo_to_cnt)
    {
        ranges_cnt += mod_cnt * (mod_cnt - 1) / 2;
    }
    return ranges_cnt;
}

int main()
{
    int n;
    std::cin >> n;

    std::vector<int> nums = fill_from<std::vector, int>(n, std::cin);
    std::cout << get_ranges_count(nums) << std::endl;
}"
tTck5vr6,What name script or nan,A_GUES,HQ9 Plus,Monday 24th of July 2023 05:54:49 AM CDT,"local LocalPlayer = game:GetService(""Players"").LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character:FindFirstChildOfClass(""Humanoid"")

function rm()
for i,v in pairs(Character:GetDescendants()) do
if v:IsA(""BasePart"") then
if v.Name == ""Handle"" or v.Name == ""Head"" then
if Character.Head:FindFirstChild(""OriginalSize"") then
Character.Head.OriginalSize:Destroy()
end
else
for i,cav in pairs(v:GetDescendants()) do
if cav:IsA(""Attachment"") then
if cav:FindFirstChild(""OriginalPosition"") then
cav.OriginalPosition:Destroy()  
end
end
end
if v:FindFirstChild(""OriginalSize"") then
v:FindFirstChild(""OriginalSize""):Destroy()
end
if v:FindFirstChild(""AvatarPartScaleType"") then
v:FindFirstChild(""AvatarPartScaleType""):Destroy()
end
end
end
end
end

function destroyPropertyIfExists(property)
if Humanoid:FindFirstChild(property) then
Humanoid:FindFirstChild(property):Destroy()
end
end

rm()
wait(0.5)
destroyPropertyIfExists(""BodyProportionScale"")
wait(1)

rm()
wait(0.5)
destroyPropertyIfExists(""BodyHeightScale"")
wait(1)

rm()
wait(0.5)
destroyPropertyIfExists(""BodyWidthScale"")
wait(1)

rm()
wait(0.5)
destroyPropertyIfExists(""BodyDepthScale"")
wait(1)

rm()
wait(0.5)
destroyPropertyIfExists(""HeadScale"")
wait(1)
"
C939QBs8,GA4 - app - flutter - remove_from_favorites,filipr27,Dart,Monday 24th of July 2023 05:49:34 AM CDT,"// remove_from_favorites
await FirebaseAnalytics.instance.logEvent(
    name: ""remove_from_favorites"",
    parameters: {
        ""business_type"": b2c,  // b2b or b2c
        ""visitorStatus"": neprijavljen,  // prijavljen or neprijavljen
        ""page_category"": knjige,  // knjige, nekretnine, posao, usluge, etc, ostale stranice
    },
);"
xDGHcv7u,Sum Table JS Advanced,TZinovieva,JavaScript,Monday 24th of July 2023 05:46:42 AM CDT,"function sumTable() {
    let priceElement = document.getElementsByTagName('td');
    let sum = 0;
    for (let i = 0; i < priceElement.length - 2; i++) {
        if (i % 2 === 0) {
            sum += Number((priceElement[i + 1]).textContent);
        }
    }
    let sumElement = document.getElementById('sum');
    sumElement.textContent = sum;
}

OR

function sumTable() {
    let priceElement = document.querySelectorAll(""table tr"");
    let sum = 0;
    for (let i = 1; i < priceElement.length; i++) {
        let columns = priceElement[i].children;
        let price = columns[columns.length - 1].textContent;
        sum += Number(price);
    }
    document.getElementById(""sum"").textContent = sum;
}"
EpHi5cfZ,movement.lua,BaaWaa,Lua,Monday 24th of July 2023 05:46:16 AM CDT,"move = {}

local move.blackListedArea = {0, 0, 0, 0, 0, 0}
local move.currentCord = {0,0,0}
local move.facing = 3

function move.checkBridge()
    if r.detectDown() then
        local slot = invManager.getItemSlot(""minecraft:cobblestone"")
        if slot then
        	r.select(slot)
        	if not r.place(0, true) then
                print(""Couldn't place block"")
            end
        else
            print(""No stone was found"")
        end
    end
end

--cord is a table of 3 int values
function move.toCord(cord)
    "
uUMvVuhf,GA4 - app - flutter - click_message,filipr27,Dart,Monday 24th of July 2023 05:31:23 AM CDT,"// click_message
await FirebaseAnalytics.instance.logEvent(
    name: ""click_message"",
    parameters: {
        ""business_type"": b2c,  // b2b or b2c
        ""visitorStatus"": prijavljen,  // prijavljen or neprijavljen
        ""page_category"": knjige,  // knjige, nekretnine, posao, usluge, etc, ostale stranice
    },
);"
3vQbVvrT,Untitled,wclovers,PHP,Monday 24th of July 2023 05:27:42 AM CDT,"add_action('after_wcfmmp_store_list_rating', function() {
    global $WCFMu;
    remove_action('after_wcfmmp_store_list_rating', [ $WCFMu->vendor_badges, 'after_wcfmmp_sold_by_label_product_page' ], 15);
}, 14);"
vmNdd3YM,12-week year,Geralld,JavaScript,Monday 24th of July 2023 05:07:42 AM CDT,"/** @OnlyCurrentDoc */

function createGoalsTable() {
var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var startMonth = getUserInput('Введите номер месяца:');
  var startYear = getUserInput('Введите год:');
  var startDate = new Date(startYear, startMonth - 1, 1);

  var currentDate = new Date(startDate);
  var endDate = new Date(startDate);
  endDate.setMonth(endDate.getMonth() + 3);
  
  //sheet.getRange(""A1"").setValue('Start date: ' + currentDate + '; End date: ' + endDate); // for debug

  var rowOffset = 0;
  var weekNumber = 1;

  while (currentDate <= endDate) {
    if (currentDate.getDay() === 1) {
      var dayNumber = currentDate.getDate();
      var endWeekDate = new Date(currentDate);
      endWeekDate.setDate(currentDate.getDate() + 6);
      var monthName = endWeekDate.toLocaleString('default', { month: 'long' });

      //sheet.getRange(""A1"").offset(rowOffset, 0).setValue(endWeekDate); // for debug

      var targetCell = sheet.getRange(""B1:G1"").offset(rowOffset, 0);
      targetCell.merge();
      targetCell.setValue(weekNumber +' неделя (с ' + dayNumber + ' по ' + endWeekDate.getDate() + ' ' + getMonthInGenitiveCase(endWeekDate) + ')');
      weekNumber++;

      rowOffset += 12;
    }

    currentDate.setDate(currentDate.getDate() + 1);
  }

};
function getUserInput(msg) {
  var userInput = Browser.inputBox(msg.toLocaleString(), Browser.Buttons.OK_CANCEL);

  if (userInput !== ""cancel"") {
    var numericValue = parseFloat(userInput);

    if (!isNaN(numericValue)) {
      return numericValue;
    } else {
      return 1;
    }
  }
}

function getMonthInGenitiveCase(date) {
  const monthsGenitiveCase = [
    'января',
    'февраля',
    'марта',
    'апреля',
    'мая',
    'июня',
    'июля',
    'августа',
    'сентября',
    'октября',
    'ноября',
    'декабря'
  ];

  const monthIndex = date.getMonth();
  return monthsGenitiveCase[monthIndex];
}
"
dXCTdtA0,Untitled,McFamous,Dart,Monday 24th of July 2023 05:07:32 AM CDT,"  Future<Result<List<T>>> requestPayload<T>({
    required HttpMethod method,
    required String path,
    required T Function(Object? json) fromJsonT,
    Map<String, dynamic>? data,
    String? contentType,
    Map<String, dynamic>? parameters,
    String? language,
  }) async {
    try {
      final Map<String, String> headers = language == null ? {} : {""Content-Language"": language};
      final Response response = await request(
        path,
        data: data,
        queryParameters: parameters,
        options: Options(method: method.name, contentType: contentType, headers: headers.isEmpty ? null : headers),
      );

      final ApiResponse<T> apiResponse = ApiResponse.fromJson(response.data, (data) => fromJsonT(data));
      final Payload<T> result = apiResponse.result!;

      return Result.success(result.items);
    } on DioException catch (e) {
      final Response? errorResponse = e.response;
      ApiError? error;

      if (errorResponse != null) {
        final ApiResponse<ApiError> apiResponse = ApiResponse.fromJson(
          errorResponse.data,
          (data) => ApiError.fromJson(data as Map<String, dynamic>),
        );
        final Payload<ApiError>? errors = apiResponse.errors;
        error = errors?.items[0];
      }

      return Result.error(error?.toNetworkException() ?? const NetworkException());
    }
  }"
2Xabm3zS,copy-in-pod,k3NGuru,YAML,Monday 24th of July 2023 04:59:14 AM CDT,"---
- name: Получаем имя пода Editor
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: ""{{ NAMESPACE }}""
    label_selectors:
      - ""app = editor""
  register: pod_info

- name: Set fact
  ansible.builtin.set_fact:
    editor: ""{{ pod_info | json_query ('resources[*].metadata.name') }}""

- name: Имя пода
  ansible.builtin.debug:
    msg: ""{{ editor }}""

# - name: Wait for k0s node to come up
#   kubernetes.core.k8s_info:
#     kind: Pod
#     wait: true
#     name: ""{{ editor }}""
#     namespace: ""{{ NAMESPACE }}""
#     kubeconfig: ""{{ KUBECONFIG }}""
#     wait_sleep: 5
#     wait_timeout: 150

- name: Создаем папку forms для загрузки файлов
  ansible.builtin.file:
    path: ./SQL/forms
    state: directory
    mode: '0755'

- name: Распаковываем архив
  ansible.builtin.unarchive:
    src: ""SQL/forms-{{ version }}.tar.gz""
    dest: ""{{ dest_folder }}/forms""

- name: Копируем файлы в Pod {{ editor }}
  kubernetes.core.k8s_cp:
    namespace: tks
    pod: ""{{ editor }}""
    remote_path: ""/tmp/forms/""
    local_path: ""{{ dest_folder }}/forms""
    state: to_pod"
gCmGAmQ2,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:52 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
LiuCwnkq,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:51 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
2gR04Gkn,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:49 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
B013ERft,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:48 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
qv9WLRaZ,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:46 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
XpeigGhH,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:45 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
0cswsEWF,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:42 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Dqx9GtmX,Hashed Email With Exclude,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:40 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
yxwVD2J5,Hashed Email - Full,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:38 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
1vB3vmKz,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 24th of July 2023 04:58:37 AM CDT,"Pasted at: 24/07/2023 10:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
jLKqYiCW,Untitled,rezamalik15,HTML,Monday 24th of July 2023 04:53:30 AM CDT,"<table class=""table"">
    <thead>
        <tr>
            <th>No.</th>
            <th>Nama</th>
            <th>Alamat</th>
            <th>Nomor Telepon</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>1</td>
            <td>Abdurrahman</td>
            <td>Jakarta Pusat</td>
            <td>081236564784</td>
        </tr>
        <tr>
            <td>2</td>
            <td>Anita</td>
            <td>Jakarta Barat</td>
            <td>08134176831</td>
        </tr>
        <tr>
            <td>3</td>
            <td>Andrian</td>
            <td>Jakarta Selatan</td>
            <td>0812434674</td>
        </tr>
        <tr>
            <td>4</td>
            <td>Benny</td>
            <td>Jakarta Pusat</td>
            <td>08126748274</td>
        </tr>
        <tr>
            <td>5</td>
            <td>Chika</td>
            <td>Jakarta Pusat</td>
            <td>081376498121</td>
        </tr>
    </tbody>
</table>"
AA0HfHen,QThread,DevTricks,Python,Monday 24th of July 2023 04:53:25 AM CDT,"import sys, time
from PyQt5.QtWidgets import QApplication, QDialog, QPushButton, QProgressBar, QTextEdit, QVBoxLayout
from PyQt5.QtCore import Qt

from PyQt5.QtCore import QThread

class ProgressBarThread(QThread):
    def __init__(self, mainwindow, parent=None):
        super().__init__()
        self.mainwindow = mainwindow

    def run(self):
        value = self.mainwindow.progressbar.value()
        while value < 100:
            value = value + 1
            self.mainwindow.progressbar.setValue(value)
            time.sleep(0.2)

class MyProgressbarWindow(QDialog):
    def __init__(self, parent=None):
        super().__init__()
        self.progressbar = QProgressBar()
        self.progressbar.setAlignment(Qt.AlignCenter)
        self.PushButtonLaunchLoading = QPushButton('Launch loading')
        self.TextEditer = QTextEdit()
        self.setGeometry(300, 400, 300,150)

        vbox = QVBoxLayout()
        vbox.addWidget(self.PushButtonLaunchLoading)
        vbox.addWidget(self.TextEditer)
        vbox.addWidget(self.progressbar)
        self.setLayout(vbox)

        self.PushButtonLaunchLoading.clicked.connect(self.launch_progress_bar_filling)
        self.progressbarThread_instance = ProgressBarThread(mainwindow=self)

    def launch_progress_bar_filling(self):
        self.progressbarThread_instance.start()

app = QApplication(sys.argv)
main = MyProgressbarWindow()
main.show()
sys.exit(app.exec())"
2czKnk6F,Image Processing Onramp - Course 1,makispaiktis,MatLab,Monday 24th of July 2023 04:53:06 AM CDT,"% Task 1
I = imread(""IMG_001.jpg"");

% Task 2
imshow(I)

% Task 3
I2 = imread(""IMG_002.jpg"");
imshow(I2)

% Task 4
imshowpair(I, I2, ""montage"")

% Further Practice
imwrite(I, ""IMG_001.png"")
I_new = imread(""IMG_001.png"");
imshow(I_new)"
7BxJbkA1,Untitled,McFamous,Swift,Monday 24th of July 2023 04:53:03 AM CDT,"import Foundation
import Alamofire
import NeedleFoundation

class AuthHttpService: Component<EmptyDependency>, AuthHttpServiceProtocol {
    func getDeviceId() async -> Result<Array<DeviceId>, NetworkError> {
        return await AF.requestPayload(
            path: ""/device"",
            method: .get,
            headers: [.authorization(""Basic 647863724389778:n'?+%)h\""vBd?UH%A?*TSuqe`H@pKXB["")]
        )
    }
    
    func getAccessToken(tokenRequest: TokenRequestProtocol) async -> Result<Array<Token>, NetworkError> {
        return await AF.requestPayload(
            path: ""/token/store"",
            method: .post,
            parameters: [""password"": ""123123Q"", ""deviceId"": ""8fdfa049-2976-4c66-af99-eddfda4f7788"", ""username"": ""RU#71231231234""],
            headers: [.authorization(""Basic 647863724389778:n'?+%)h\""vBd?UH%A?*TSuqe`H@pKXB["")]
        )
    }
}
"
bzrsbv7q,DF Robot MP3 Pro Player - 128MB Onboard,microrobotics,Arduino,Monday 24th of July 2023 04:40:02 AM CDT,"/*!
 *@file play.ino
 *@brief Music Playing Example Program
 *@details  Experimental phenomenon: control MP3 play music, obtain song information
 *@copyright  Copyright (c) 2010 DFRobot Co.Ltd (http://www.dfrobot.com)
 *@license     The MIT license (MIT)
 *@author [fengli](li.feng@dfrobot.com)
 *@version  V1.1
 *@date  2021-10-15
 *@url https://github.com/DFRobot/DFRobot_DF1201S
*/


#include <DFRobot_DF1201S.h>
#include <SoftwareSerial.h>

SoftwareSerial DF1201SSerial(2, 3);  //RX  TX

DFRobot_DF1201S DF1201S;
void setup(void){
  Serial.begin(115200);
  DF1201SSerial.begin(115200);
  while(!DF1201S.begin(DF1201SSerial)){
    Serial.println(""Init failed, please check the wire connection!"");
    delay(1000);
  }
  /*Set volume to 20*/
  DF1201S.setVol(/*VOL = */20);
  Serial.print(""VOL:"");
  /*Get volume*/
  Serial.println(DF1201S.getVol());
  /*Enter music mode*/
  DF1201S.switchFunction(DF1201S.MUSIC);
  /*Wait for the end of the prompt tone */
  delay(2000);
  /*Set playback mode to ""repeat all""*/
  DF1201S.setPlayMode(DF1201S.ALLCYCLE);
  Serial.print(""PlayMode:"");
  /*Get playback mode*/
  Serial.println(DF1201S.getPlayMode());

  //Set baud rate to 115200(Need to power off and restart, power-down save)
  //DF1201S.setBaudRate(115200);
  //Turn on indicator LED (Power-down save)
  //DF1201S.setLED(true);
  //Turn on the prompt tone (Power-down save) 
  //DF1201S.setPrompt(true);
  //Enable amplifier chip 
  //DF1201S.enableAMP();
  //Disable amplifier chip 
  //DF1201S.disableAMP();
}

void loop(){
  Serial.println(""Start playing"");
  /*Start playing*/
  DF1201S.start();
  delay(3000);
  Serial.println(""Pause"");
  /*Pause*/
  DF1201S.pause();
  delay(3000);
  Serial.println(""Next"");
  /*Play the next song*/
  DF1201S.next();
  delay(3000);
  Serial.println(""Previous"");
  /*Play the previous song*/
  DF1201S.last();
  delay(3000);
  Serial.println(""Start playing"");
  //Fast forward 10S
  DF1201S.fastForward(/*FF = */10);
  //Fast Rewind 10S
  //DF1201S.fastReverse(/*FR = */10);
  //Start the song from the 10th second 
  //DF1201S.setPlayTime(/*Play Time = */10);

  Serial.print(""File number:"");
  //Get file number
  Serial.println(DF1201S.getCurFileNumber());

  Serial.print(""The number of files available to play:"");
  //The number of files available to play
  Serial.println(DF1201S.getTotalFile());

  Serial.print(""The time length the current song has played:"");
  //Get the time length the current song has played 
  Serial.println(DF1201S.getCurTime());

  Serial.print(""The total length of the currently-playing song: "");
  //Get the total length of the currently-playing song 
  Serial.println(DF1201S.getTotalTime());
  Serial.print(""The name of the currently-playing file: "");
  //Get the name of the playing file 
  Serial.println(DF1201S.getFileName());
  delay(3000);
  //Play the file No.1, the numbers are arranged according to the sequence of the files copied into the U-disk 
  DF1201S.playFileNum(/*File Number = */1);
  //Play the test.mp3 file in test folder 
  //DF1201S.playSpecFile(""/test/test.mp3"");

  while(1);
  /*Delete the currently-playing file */
  //DF1201S.delCurFile();
}"
R4Ztjsjr,Untitled,McFamous,Swift,Monday 24th of July 2023 04:38:49 AM CDT,"import Foundation


struct APIError: Decodable {
    let errorType: ErrorType
    let paramName: String?
//    let obtainedValue: Any?
    let description: String?
//    let details: Any?
    
    private enum CodingKeys: String, CodingKey {
        case errorType
        case paramName
//        case obtainedValue
        case description
//        case details
    }

    init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)

        errorType = try values.decode(ErrorType.self, forKey: .errorType)
        paramName = try values.decode(String?.self, forKey: .paramName)
//        obtainedValue = try values.decode(String?.self, forKey: .obtainedValue)
        description = try values.decode(String?.self, forKey: .description)
//        details = try values.decode(String?.self, forKey: .details)

    }
}
"
nSWRkVsY,DF Robot GPS Receiver & Antenna,microrobotics,Arduino,Monday 24th of July 2023 04:37:39 AM CDT,"/*
The TEL0157 GPS Receiver from DF Robot uses the UART interface to communicate with a microcontroller. It sends data in the form of NMEA 0183 sentences which include information such as latitude, longitude, altitude, speed, and more.

This code reads the data from the GPS module and prints the raw NMEA sentences to the Serial Monitor.

If you want to parse the NMEA sentences to get useful data (like latitude and longitude), you might want to use a library like TinyGPS++.

Remember to connect the GPS module's TX pin to the Arduino's RX pin (in this case pin 2), and the GPS module's RX pin to the Arduino's TX pin (in this case pin 3). Also, make sure to provide the appropriate power supply to the GPS module (usually 3.3V or 5V, check your module's datasheet). Always double-check the datasheet/manual of your GPS module for specific instructions and information.

Please adjust the pin numbers and rest of the code according to your exact setup and requirements.

Here is a simple Arduino code snippet that reads and prints the raw NMEA sentences from the GPS module:
*/

#include <SoftwareSerial.h>

// Choose two Arduino pins to use for software serial
int rxPin = 2;
int txPin = 3;

// Set up the GPS module baud rate (default is 9600 for the TEL0157)
int gpsBaud = 9600;

// Create a software serial port
SoftwareSerial gpsSerial(rxPin, txPin);

void setup() {
  // Start the hardware serial port for the serial monitor
  Serial.begin(9600);

  // Start the software serial port
  gpsSerial.begin(gpsBaud);
}

void loop() {
  // Read data from the GPS module
  while (gpsSerial.available() > 0) {
    char c = gpsSerial.read();
    
    // Print data to the serial monitor
    Serial.print(c);
  }
}
"
9v1DJ9BC,MKS ATGM332D 5N31 GPS with Antenna,microrobotics,Arduino,Monday 24th of July 2023 04:33:23 AM CDT,"/*
The ATGM332D GPS module, like many GPS modules, uses UART (serial communication) to transmit data. It sends NMEA 0183 sentences which include information about location, speed, time, and more.

This script will read the data from the GPS module and print the raw NMEA sentences to the Serial Monitor.

If you want to parse the NMEA sentences to get useful data like latitude and longitude, you might want to use a library like TinyGPS++.

Remember to connect the GPS module's TX pin to the Arduino's RX pin (in this case pin 2), and the GPS module's RX pin to the Arduino's TX pin (in this case pin 3). Also, make sure to provide the appropriate power supply to the GPS module (usually 3.3V). Always double-check the datasheet/manual of your GPS module for specific instructions and information.

Please adjust the pin numbers and rest of the code according to your exact setup and requirements.

Below is a simple Arduino code to read and print the NMEA sentences from the GPS module:
*/

#include <SoftwareSerial.h>

// Choose two Arduino pins to use for software serial
int rxPin = 2;
int txPin = 3;

// Set up the GPS module baud rate (default is 9600 for the ATGM332D)
int gpsBaud = 9600;

// Create a software serial port
SoftwareSerial gpsSerial(rxPin, txPin);

void setup()
{
  // Start the hardware serial port for the serial monitor
  Serial.begin(9600);

  // Start the software serial port
  gpsSerial.begin(gpsBaud);
}

void loop()
{
  // Read the data from the GPS module
  while (gpsSerial.available() > 0) {
    char c = gpsSerial.read();
    
    // Print the data to the serial monitor
    Serial.print(c);
  }
}
"
ttnJgkfx,Untitled,McFamous,Swift,Monday 24th of July 2023 04:32:08 AM CDT,"import Foundation
import Alamofire

private let API_BASE_URL = ""https://auth-test.ecp-share.com/v1""

extension Session {
    func requestPayload<T: Decodable>(path: String,
                        method: HTTPMethod = .get,
                        parameters: Parameters? = nil,
                        headers: HTTPHeaders? = nil) async -> Result<Array<T>, NetworkError> {
        
        do {
            let response = try await withCheckedThrowingContinuation { continuation in
                AF.request(
                    API_BASE_URL + path,
                    method: method,
                    parameters: parameters,
                    headers: headers
                )
                .responseData { response in
                    switch(response.result) {
                    case let .success(data):
                        continuation.resume(returning: data)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
            
            do {
                let apiResponse: APIResponse<T> = try JSONDecoder().decode(APIResponse<T>.self, from: response)
                guard let result = apiResponse.result else { return .failure(NetworkError())}
                
                return .success(result.items)
            }
            catch {
                let apiResponse: APIResponse<APIError> = try JSONDecoder().decode(APIResponse<APIError>.self, from: response)
                guard let errors = apiResponse.errors else { return .failure(NetworkError(description: ""1""))}
            
                let error = errors.items[0]
                return .failure(
                    NetworkError(
//                        errorType: error.errorType,
                        paramName: error.paramName,
//                        obtainedValue: error.obtainedValue,
                        description: error.description ?? ""2""
//                        details: error.details
                    )
                )
            }
        }
        catch {
            debugPrint(error)
            return .failure(NetworkError(description: ""3""))
        }
    }
}
"
UHLsjBt5,Makerbase Gimbal Motor 2804 with an AS5600 magnetic encoder. The SimpleFOC library provides an easy,microrobotics,Arduino,Monday 24th of July 2023 04:30:18 AM CDT,"/*
Makerbase Gimbal Motor 2804 with an AS5600 magnetic encoder. The SimpleFOC library provides an easy way to control BLDC motors using Arduino.

Please note, you need to install the SimpleFOC library first. You can do that by going to Sketch > Include Library > Manage Libraries in the Arduino IDE, then search for SimpleFOC and install it.

The AS5600 communicates over the I2C protocol. Here is a sample code to run a gimbal motor using SimpleFOC:
In this example, a gimbal motor is linked to a magnetic sensor (AS5600). The voltage limit is set to 3 volts, and the motor will try to reach the target position provided via the Serial interface. You set a target position by sending a command like ""T1.0"" over Serial.

Remember to connect the sensor and driver pins correctly, and power the motor with an appropriate power source.

Disclaimer: The code might not work as expected if the encoder, motor, and driver are not connected and configured correctly. Always make sure to follow the guidelines provided in the datasheet/manual of your specific devices.
*/

#include <SimpleFOC.h>

// Magnetic sensor instance - AS5600
MagneticSensorI2C sensor = MagneticSensorI2C(AS5600_I2C);

// BLDCMotor instance
BLDCMotor motor = BLDCMotor(11);

// BLDCDriver instance
BLDCDriver3PWM driver = BLDCDriver3PWM(9, 10, 11, 8);

void setup() { 

  // Initialise magnetic sensor hardware
  sensor.init();
  
  // Link the motor to the sensor
  motor.linkSensor(&sensor);

  // Choose FOC modulation (optional)
  motor.foc_modulation = FOCModulationType::SpaceVectorPWM;

  // Initialize motor
  motor.init();
  
  // Link the motor to the driver
  motor.linkDriver(&driver);

  // Set voltage limit
  motor.voltage_limit = 3.0;

  // Use monitoring with the following function
  Serial.begin(115200);
  
  // Initialize motor
  motor.initFOC();
  
  // Add target command T
  SerialCommand cmdT = SerialCommand(""T"", [](Cmd* cmd)-> void {
    motor.target = cmd->getArg(0);
  });
  SerialManager.add(cmdT);
}

void loop() {
  // FOC algorithm function
  motor.loopFOC();
  
  // Monitoring function
  motor.monitor();
}
"
NSDNKC3W,Makerbase H-Bridge Motor Controller 36V 15A,microrobotics,Arduino,Monday 24th of July 2023 04:24:13 AM CDT,"/*
The Makerbase H-Bridge Motor Controller is a common motor controller that can be used to control the direction and speed of a DC motor using PWM. Here's an example of how you can use it with an Arduino:

This script will make the motor turn in one direction for a second, stop for a second, then turn in the opposite direction for a second, and then stop again. This cycle repeats indefinitely.

Please adjust the pin numbers and rest of the code according to your exact setup and requirements. Also, remember to connect the GND of the motor driver to the GND of the Arduino, and to supply the driver with an appropriate power source.
*/

// Define pin connections & motor's states
const int motorPin1 = 9;  // Pin connected to Motor Driver's Input 1
const int motorPin2 = 10; // Pin connected to Motor Driver's Input 2

void setup() {
  // Sets the two pins as Outputs
  pinMode(motorPin1, OUTPUT);
  pinMode(motorPin2, OUTPUT);
}

void loop(){
  // Drive the motor clockwise
  digitalWrite(motorPin1, HIGH);
  digitalWrite(motorPin2, LOW);
  delay(1000); // Wait for 1 second
  
  // Stop the motor when motorPin1 & motorPin2 are HIGH or LOW
  digitalWrite(motorPin1, HIGH);
  digitalWrite(motorPin2, HIGH);
  delay(1000); // Wait for 1 second
  
  // Drive the motor counterclockwise
  digitalWrite(motorPin1, LOW);
  digitalWrite(motorPin2, HIGH);
  delay(1000); // Wait for 1 second
  
  // Stop the motor when motorPin1 & motorPin2 are HIGH or LOW
  digitalWrite(motorPin1, HIGH);
  digitalWrite(motorPin2, HIGH);
  delay(1000); // Wait for 1 second
}
"
jHH3426C,Pololu Pressure/Altitude Sensor with Voltage Regulator,microrobotics,Arduino,Monday 24th of July 2023 04:17:41 AM CDT,"/*
The Pololu Altitude/Pressure Sensor Board LPS22DF communicates over I2C and can be interfaced with Arduino. Here's a simple code to read pressure and temperature data from the sensor using an Arduino.

This code assumes you're using the Arduino Wire library for I2C communication, and that the LPS22DF's SDA and SCL lines are connected to the Arduino's SDA (A4) and SCL (A5) pins. Also connect VDD to 3.3V and GND to ground.

This script reads the pressure and temperature data from the LPS22DF every second and prints the results to the serial monitor. The pressure is in hPa (hectopascals), and the temperature is in degrees Celsius.

Please adapt the code to your exact setup and requirements. Make sure to check the datasheet for any additional information or special instructions.
*/

#include <Wire.h>

const int LPS22DF_ADDRESS = 0x5D; // I2C address of the LPS22DF
const int LPS22DF_WHO_AM_I = 0x0F;
const int LPS22DF_PRESS_OUT_XL = 0x28;
const int LPS22DF_TEMP_OUT_L = 0x2B;

void setup() {
  Wire.begin();
  Serial.begin(9600);

  // Setup LPS22DF
  Wire.beginTransmission(LPS22DF_ADDRESS);
  Wire.write(0x10); // CTRL_REG1
  Wire.write(0x70); // Set the output data rate to 25Hz
  Wire.endTransmission();
}

void loop() {
  // Read pressure data
  Wire.beginTransmission(LPS22DF_ADDRESS);
  Wire.write(LPS22DF_PRESS_OUT_XL | 0x80); // MSB of address set to enable auto increment
  Wire.endTransmission();
  Wire.requestFrom(LPS22DF_ADDRESS, 3);
  long press_out = Wire.read() | Wire.read() << 8 | Wire.read() << 16;
  float pressure = press_out / 4096.0;

  // Read temperature data
  Wire.beginTransmission(LPS22DF_ADDRESS);
  Wire.write(LPS22DF_TEMP_OUT_L | 0x80); // MSB of address set to enable auto increment
  Wire.endTransmission();
  Wire.requestFrom(LPS22DF_ADDRESS, 2);
  int16_t temp_out = Wire.read() | Wire.read() << 8;
  float temperature = temp_out / 100.0;

  Serial.print(""Pressure: "");
  Serial.print(pressure);
  Serial.println("" hPa"");
  
  Serial.print(""Temperature: "");
  Serial.print(temperature);
  Serial.println("" °C"");
  
  delay(1000);
}
"
uxf8K0aY,Untitled,35657,C++,Monday 24th of July 2023 04:14:52 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>
#include <filesystem>
#include <windows.h>


using namespace std;

using filesystem::path;


// вывод содержимого директории с указанием размера для файлов
void PrintDirectoryInfo(const string& str) { // указываем путь к папке
	for (const auto& a : filesystem::directory_iterator(str)) { // обход всех файлов в директории
		string name = a.path().filename().string();
		string full_name = str + '/' + name;
		cout << setw(30) << name;
		if (filesystem::is_regular_file(full_name)) {
			cout << "" "" << setw(10) << filesystem::file_size(full_name) << "" byte"";
		}
		cout << endl;
	}
}


int main() {

	SetConsoleCP(1251); // установка кодировки 1251 в поток ввода
	SetConsoleOutputCP(1251); // установка кодировки 1251 в поток вывода

	PrintDirectoryInfo(""C:/Users/PC/Desktop"");
}"
ueiyTX3i,Single Line ITR1502SR40A Line Sensor,microrobotics,Arduino,Monday 24th of July 2023 04:13:57 AM CDT,"/*
The ITR1502SR40A is an infrared reflective sensor. It can be used as a line sensor in many applications, including line-following robots.

This script will continuously read the analog value from the sensor and print it to the Serial Monitor. A low value indicates a reflection (line detected), while a high value indicates no reflection (no line).

Adjust the sensorPin variable to match the actual Arduino pin the sensor is connected to. Connect the sensor's VCC to Arduino 5V, GND to Arduino GND, and OUT to the specified Arduino analog pin.

Remember that the sensor readings may need to be calibrated or thresholded to work best in your particular environment.

Here's an example of using this sensor with an Arduino:
*/

const int sensorPin = A0; // Sensor connected to analog pin A0

void setup() {
  Serial.begin(9600); // Set up serial communication at 9600 bps
}

void loop() {
  int sensorValue = analogRead(sensorPin); // Read the sensor
  Serial.println(sensorValue); // Print the sensor value to the serial monitor
  delay(100); // Short delay before next read
}
"
pS29ZMzi,Maker Line 5 channel line sensor,microrobotics,Arduino,Monday 24th of July 2023 04:11:26 AM CDT,"/*
Here's an example of how you can use the Maker Line 5 channel line sensor with an Arduino. This example uses the digital outputs from the sensor to detect a line.

This code will continuously read the digital output of each sensor channel and print the results to the Serial Monitor. This way you can see the output from each sensor in real time.

This example assumes that the sensor channels are connected to Arduino digital pins 2 to 6. You'll need to adjust the pin numbers according to your exact setup. Also, remember to connect the GND of the sensor to the GND of the Arduino, and to supply the sensor with an appropriate power source on VCC.
*/

// Define sensor pins
const int Sensor1 = 2;
const int Sensor2 = 3;
const int Sensor3 = 4;
const int Sensor4 = 5;
const int Sensor5 = 6;

void setup() {
  // Initialize the sensor input pins as input
  pinMode(Sensor1, INPUT);
  pinMode(Sensor2, INPUT);
  pinMode(Sensor3, INPUT);
  pinMode(Sensor4, INPUT);
  pinMode(Sensor5, INPUT);
  
  // Start serial communication at 9600 baud
  Serial.begin(9600);
}

void loop() {
  // Read the value from the sensors
  int S1 = digitalRead(Sensor1);
  int S2 = digitalRead(Sensor2);
  int S3 = digitalRead(Sensor3);
  int S4 = digitalRead(Sensor4);
  int S5 = digitalRead(Sensor5);

  // Print the sensor values to the serial monitor
  Serial.print(""S1: "");
  Serial.print(S1);
  Serial.print("" S2: "");
  Serial.print(S2);
  Serial.print("" S3: "");
  Serial.print(S3);
  Serial.print("" S4: "");
  Serial.print(S4);
  Serial.print("" S5: "");
  Serial.println(S5);
  
  delay(200);
}
"
3zRphUmr,Untitled,Olivebates,C++,Monday 24th of July 2023 04:07:43 AM CDT,"	var eGridW = ds_grid_width(gridCheck);
	var eGridH = ds_grid_height(gridCheck);
	ds_grid_clear(gridHeat, 0);
	ds_grid_clear(gridVect, 0);
	ds_grid_clear(gridCheck, 0);
	
	var inst = rndInstance(oBuildingPar, true);
	var cx = round(inst.x/gridsize);
	var cy = round(inst.y/gridsize);
	
	var _listNext = ds_list_create();
	var _list = ds_list_create();;
	
	ds_grid_set(gridHeat, cx, cy, 0);
	ds_grid_set(gridVect, cx, cy, 0);
	ds_grid_set(gridCheck, cx, cy, 1);
	ds_list_add(_listNext, cx, cy);
	
	
	var _cnt = 1;
	while (true)
	{
		ds_list_copy(_list, _listNext);
		ds_list_clear(_listNext);
		var _Found = false;
		
		for (var i = 0; i <= ds_list_size(_list); i+=2)
		{
		
			cx		= ds_list_find_value(_list, 0);
			cy		= ds_list_find_value(_list, 1);
			var mGridW  = ds_grid_width(gridCheck);
			var mGridH	= ds_grid_height(gridCheck);
			ds_list_delete(_list, 1);
			ds_list_delete(_list, 0);
			
			// Left
			if (cx-1 >= 0 && !ds_grid_get(gridCheck, cx-1, cy))
			{
				_Found = true;
				ds_grid_set(gridHeat, cx-1, cy, _cnt);
				ds_grid_set(gridVect, cx-1, cy, point_direction(0, 0, +1, 0));
				ds_grid_set(gridCheck, cx-1, cy, 1);
				ds_list_add(_listNext, cx-1, cy);
			}
	
			// Up
			if (cy-1 >= 0 && !ds_grid_get(gridCheck, cx, cy-1))
			{
				_Found = true;
				ds_grid_set(gridHeat, cx, cy-1, _cnt);
				ds_grid_set(gridVect, cx, cy-1, point_direction(0, 0, 0, +1));
				ds_grid_set(gridCheck, cx, cy-1, 1);
				ds_list_add(_listNext, cx, cy-1);
			}
		
			// right
			if (cx+1 < mGridW && !ds_grid_get(gridCheck, cx+1, cy))
			{
				_Found = true;
				ds_grid_set(gridHeat, cx+1, cy, _cnt);
				ds_grid_set(gridVect, cx+1, cy, point_direction(0, 0, -1, 0));
				ds_grid_set(gridCheck, cx+1, cy, 1);
				ds_list_add(_listNext, cx+1, cy);
			}
		
			// Down
			if (cy+1 < mGridH && !ds_grid_get(gridCheck, cx, cy+1))
			{
				_Found = true;
				ds_grid_set(gridHeat, cx, cy+1, _cnt);
				ds_grid_set(gridVect, cx, cy+1, point_direction(0, 0, 0, -1));
				ds_grid_set(gridCheck, cx, cy+1, 1);
				ds_list_add(_listNext, cx, cy+1);
			}
		}	
		
		if (!_Found)
			break;
		
		_cnt++;
		if (_cnt >  room_width/gridsize*8)
			break;
	}"
vC1vbDck,MDD20A Dual Channel 20A Motor Driver,microrobotics,Arduino,Monday 24th of July 2023 04:05:19 AM CDT,"/*
The MDD20A Dual Channel 20A Motor Driver from Cytron supports multiple communication interfaces including PWM, Analog, UART, I2C, and RC.

In this script, the motors will move forward at full speed for 2 seconds, stop for 2 seconds, move backward at full speed for 2 seconds, and then stop for 2 seconds. This cycle repeats indefinitely.

Remember to connect the GND of the driver to the GND of the Arduino, and to supply the driver with an appropriate power source.

The pin numbers in the script are placeholders, so ensure to replace them with the actual numbers according to your setup.

Let's provide an example of how to control the MDD20A motor driver using PWM with an Arduino.
*/

// Motor 1
const int M1PWM = 9;  // PWM Pin
const int M1DIR = 8;  // Direction Pin

// Motor 2
const int M2PWM = 10;  // PWM Pin
const int M2DIR = 7;  // Direction Pin

void setup() {
  // Set all the motor control pins as outputs
  pinMode(M1DIR, OUTPUT);
  pinMode(M1PWM, OUTPUT);
  pinMode(M2DIR, OUTPUT);
  pinMode(M2PWM, OUTPUT);
}

void loop() {
  // Move motors forward at full speed
  digitalWrite(M1DIR, HIGH);
  analogWrite(M1PWM, 255);
  digitalWrite(M2DIR, HIGH);
  analogWrite(M2PWM, 255);
  
  delay(2000);  // Wait for 2 seconds

  // Stop motors
  analogWrite(M1PWM, 0);
  analogWrite(M2PWM, 0);
  
  delay(2000);  // Wait for 2 seconds
  
  // Move motors backwards at full speed
  digitalWrite(M1DIR, LOW);
  analogWrite(M1PWM, 255);
  digitalWrite(M2DIR, LOW);
  analogWrite(M2PWM, 255);
  
  delay(2000);  // Wait for 2 seconds
  
  // Stop motors
  analogWrite(M1PWM, 0);
  analogWrite(M2PWM, 0);
  
  delay(2000);  // Wait for 2 seconds
}
"
BNy9fsey,"MDDS30 Dual Motor Driver - 30A, 7-35V",microrobotics,Arduino,Monday 24th of July 2023 04:02:03 AM CDT,"/*
Here's an example of using the PWM interface with an Arduino.

This code will make two motors go full speed forward, stop, full speed reverse, and stop, each for one second.

It uses digitalWrite to control the direction pins, which determine the direction of the motors. It uses analogWrite to control the speed of the motors. In the Arduino language, analogWrite values range from 0 (always off) to 255 (always on).

Please adapt the pin numbers and rest of the code according to your exact setup and requirements.

Also, remember to connect the GND of the driver to the GND of the Arduino, and to supply the driver with an appropriate power source.
*/

const int M1DIR = 8;  // Motor 1 Direction
const int M1PWM = 9;  // Motor 1 PWM
const int M2DIR = 12; // Motor 2 Direction
const int M2PWM = 11; // Motor 2 PWM

void setup() {
  pinMode(M1DIR, OUTPUT);
  pinMode(M1PWM, OUTPUT);
  pinMode(M2DIR, OUTPUT);
  pinMode(M2PWM, OUTPUT);
}

void loop() {
  // Full speed forward
  digitalWrite(M1DIR, HIGH);
  analogWrite(M1PWM, 255);
  digitalWrite(M2DIR, HIGH);
  analogWrite(M2PWM, 255);
  delay(1000);
  
  // Stop
  analogWrite(M1PWM, 0);
  analogWrite(M2PWM, 0);
  delay(1000);
  
  // Full speed reverse
  digitalWrite(M1DIR, LOW);
  analogWrite(M1PWM, 255);
  digitalWrite(M2DIR, LOW);
  analogWrite(M2PWM, 255);
  delay(1000);
  
  // Stop
  analogWrite(M1PWM, 0);
  analogWrite(M2PWM, 0);
  delay(1000);
}
"
qknLqyhp,邀您一起看：主页设置-导入,xiaomianao666,JavaScript,Monday 24th of July 2023 03:44:35 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥主页设置-导入@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eSNub1JlY29yZEhpc3RvcnkjO2dldDtVVEYtODt7VXNlci1BZ2VudEBNb3ppbGxhLzUuMCAoTGludXjvvJvvvJsgQW5kcm9pZCAxMe+8m++8myBNaSAxMCBQcm8pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OC4wLjQzMjQuMTUyIE1vYmlsZSBTYWZhcmkvNTM3LjM2fVwiLFwiY29sX3R5cGVcIjpcImljb25fc21hbGxfNFwiLFwiZmluZF9ydWxlXCI6XCJqczpldmFsKGZldGNoKCdoaWtlcjovL2Fzc2V0cy9ob21lLmpzJykpOyhcXG4oYmFzaWMpID0+IHtcXG4gICAgcHV0TXlWYXIoXFxcImNLZXlcXFwiLCBcXFwiaW1wb3J0XFxcIik7XFxuICAgIEhpa2VySG9tZS5sb2FkKFxcXCJpbXBvcnRcXFwiKTtcXG59XFxuKSh7XFxcInZlcnNpb25cXFwiOlxcXCLOsSB2Mi4wLjNcXFwiLFxcXCJmaWxlUGF0aFxcXCI6XFxcImhpa2VyOi8vZmlsZXMvcnVsZXMvanMvTmV3UGxhbkNvbmZpZ0ZpbGUuanNcXFwiLFxcXCJuZXdQbGFuSnNVcmxcXFwiOlxcXCJoaWtlcjovL2Fzc2V0cy9ob21lLmpzXFxcIixcXFwiaHRtbFVybFxcXCI6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWxcXFwifSlcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIixcInVhXCI6XCJtb2JpbGVcIixcInByZVJ1bGVcIjpcIlwifSIsInRpdGxlIjoi5Li76aG16K6+572uLeWvvOWFpSJ9
pQNYm8q5,Untitled,sketchy_potatoman,JSON,Monday 24th of July 2023 03:27:21 AM CDT,"//@version=5 
strategy(""Improved Moving Average Crossover Strategy"", overlay=true)
shortTermMA = input.int(10, title=""Short-term Moving Average Period"")
longTermMA = input.int(30, title=""Long-term Moving Average Period"")
shortMA = ta.sma(close, shortTermMA)
longMA = ta.sma(close, longTermMA)
priceAboveLongMA = close > longMA
priceBelowLongMA = close < longMA
priceAboveShortMA = close > shortMA
priceBelowShortMA = close < shortMA
enterLong = priceAboveShortMA and priceBelowLongMA
exitLong = priceBelowShortMA and priceAboveLongMA
enterShort = priceBelowShortMA and priceAboveLongMA
exitShort = priceAboveShortMA and priceBelowLongMA
if (enterLong)
    strategy.entry(""Buy"", strategy.long)
if (enterShort)
    strategy.entry(""Sell"", strategy.short)"
DdXs1U15,main.py,Sergiyco,Python,Monday 24th of July 2023 03:20:27 AM CDT,"import json
def divide_numbers(num1, num2):
    try:
        result = num1 / num2
        if num1 % num2 == 0:
            return True
        else:
            return False
    except ZeroDivisionError as e:
        error_message = str(e)
        log_error(""ZeroDivisionError"", error_message)
        return False
    except Exception as e:
        error_message = str(e)
        log_error(""Exception"", error_message)
        return False
def log_error(error_type, error_message):
    error_data = {error_type: error_message}
    with open('errors.json', 'a') as file:
        json.dump(error_data, file)
    file.write('\n')
print(divide_numbers(10, 2), divide_numbers(5, 0),divide_numbers(7, 3) )"
wFriTaJg,turlte_events,Sergiyco,Python,Monday 24th of July 2023 02:48:45 AM CDT,"import turtle
import keyboard

def move_up():
    turtle.setheading(90)
    turtle.forward(10)

def move_down():
    turtle.setheading(270)
    turtle.forward(10)

def move_left():
    turtle.setheading(180)
    turtle.forward(10)

def move_right():
    turtle.setheading(0)
    turtle.forward(10)

def main():
    turtle.speed(0)
    turtle.shape('turtle')
    turtle.color('green')
    turtle.pencolor('black')
    turtle.pensize(3)
    turtle.onkeypress(move_up, ""Up"")
    turtle.onkeypress(move_down, ""Down"")
    turtle.onkeypress(move_left, ""Left"")
    turtle.onkeypress(move_right, ""Right"")
    turtle.listen()

    turtle.mainloop()

if __name__ == ""__main__"":
    main()
"
mQunHYfC,HeliPlayerController,noobHasan,C#,Monday 24th of July 2023 02:28:21 AM CDT,"/// <summary>
/// Player controller.
/// </summary>
using UnityEngine;
using System.Collections;

[RequireComponent(typeof(FlightSystem))]

public class PlayerController : MonoBehaviour
{
	
	FlightSystem flight;// Core plane system
	FlightView View;
	public bool Active = true;
	public bool SimpleControl;// make it easy to control Plane will turning easier.
	public bool Acceleration;// Mobile*** enabled gyroscope controller
	public float AccelerationSensitivity = 5;// Mobile*** gyroscope sensitivity
	private TouchScreenVal controllerTouch;// Mobile*** move
	private TouchScreenVal fireTouch;// Mobile*** fire
	private TouchScreenVal switchTouch;// Mobile*** swich
	private TouchScreenVal sliceTouch;// Mobile*** slice
	private bool directVelBack;
	public GUISkin skin;
	public bool ShowHowto;

	void Start ()
	{
		flight = this.GetComponent<FlightSystem> ();
		View = (FlightView)GameObject.FindObjectOfType (typeof(FlightView));
		
		
		// setting all Touch screen controller in the position
		controllerTouch = new TouchScreenVal (new Rect (0, 0, Screen.width / 2, Screen.height - 100));
		fireTouch = new TouchScreenVal (new Rect (Screen.width / 2, 0, Screen.width / 2, Screen.height));
		switchTouch = new TouchScreenVal (new Rect (0, Screen.height - 100, Screen.width / 2, 100));
		sliceTouch = new TouchScreenVal (new Rect (0, 0, Screen.width / 2, 50));
		
		if (flight)
			directVelBack = flight.DirectVelocity;
	}
	
	void Update ()
	{
		if (!flight || !Active)
			return;
		#if UNITY_EDITOR || UNITY_WEBPLAYER || UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX
		// On Desktop
		DesktopController();
		#else
		// On Mobile device
		MobileController ();
		#endif
		
	}
	
	void DesktopController ()
	{
		// Desktop controller
		flight.SimpleControl = SimpleControl;
		
		// lock mouse position to the center.
		MouseLock.MouseLocked = true;
		
		//flight.AxisControl (new Vector2 (Input.GetAxis (""Mouse X""), Input.GetAxis (""Mouse Y"")));
		//if (SimpleControl) {
		//	flight.DirectVelocity = false;
		//	flight.TurnControl (Input.GetAxis (""Mouse X""));
		//} else {
		//	flight.DirectVelocity = directVelBack;	
		//}

		flight.TurnControl (Input.GetAxis (""Horizontal""));
		flight.SpeedUp (Input.GetAxis (""Vertical""));
		
		
		if (Input.GetButton (""Fire1"")) {
			flight.WeaponControl.LaunchWeapon ();
		}
		
		if (Input.GetButtonDown (""Fire2"")) {
			flight.WeaponControl.SwitchWeapon ();
		}
		
		if (Input.GetKeyDown (KeyCode.C)) {
			if (View)
				View.SwitchCameras ();	
		}	
	}
	
	void MobileController ()
	{
		// Mobile controller
		
		flight.SimpleControl = SimpleControl;
		
		if (Acceleration) {
			// get axis control from device acceleration
			Vector3 acceleration = Input.acceleration;
			Vector2 accValActive = new Vector2 (acceleration.x, (acceleration.y + 0.3f) * 0.5f) * AccelerationSensitivity;
			flight.FixedX = false;
			flight.FixedY = false;
			flight.FixedZ = true;
			
			flight.AxisControl (accValActive);
			flight.TurnControl (accValActive.x);
		} else {
			flight.FixedX = true;
			flight.FixedY = false;
			flight.FixedZ = true;
			// get axis control from touch screen
			Vector2 dir = controllerTouch.OnDragDirection (true);
			dir = Vector2.ClampMagnitude (dir, 1.0f);
			flight.AxisControl (new Vector2 (dir.x, -dir.y) * AccelerationSensitivity * 0.7f);
			flight.TurnControl (dir.x * AccelerationSensitivity * 0.3f);
		}
		sliceTouch.OnDragDirection (true);
		// slice speed
		flight.SpeedUp (sliceTouch.slideVal.x);
		
		if (fireTouch.OnTouchPress ()) {
			flight.WeaponControl.LaunchWeapon ();
		}	
		if (switchTouch.OnTouchPress ()) {
		
		}	
	}
	
	
	// you can remove this part..
	void OnGUI ()
	{
		if (!ShowHowto)
			return;
		
		if (skin)
			GUI.skin = skin;
		
		if (GUI.Button (new Rect (20, 150, 200, 40), ""Gyroscope "" + Acceleration)) {
			Acceleration = !Acceleration;
		}
		
		if (GUI.Button (new Rect (20, 200, 200, 40), ""Change View"")) {
			if (View)
				View.SwitchCameras ();	
		}
		
		if (GUI.Button (new Rect (20, 250, 200, 40), ""Change Weapons"")) {
			if (flight)
				flight.WeaponControl.SwitchWeapon ();
		}
		
		if (GUI.Button (new Rect (20, 300, 200, 40), ""Simple Control "" + SimpleControl)) {
			if (flight)
				SimpleControl = !SimpleControl;
		}
	}

}
"
TVgaTySg,Untitled,iumar69,C#,Monday 24th of July 2023 02:11:48 AM CDT,"using Microsoft.Practices.EnterpriseLibrary.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Excpetional_Handling21July
{
    internal class LoggerBlock
    {
        protected LogWriter logWriter;
        
        public LoggerBlock() {
            InitLogging();
        }

        private void InitLogging()
        {
            logWriter = new LogWriterFactory().Create();
            Logger.SetLogWriter(logWriter,false);
        }

        public LogWriter LogWriter
        {
            get { return logWriter; }
        }
    }
}
"
