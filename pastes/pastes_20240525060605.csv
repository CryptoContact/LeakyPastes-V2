id,title,username,language,date,content
ad64XMgY,üî•G2A.com Free GiftCard MAY 2024 Leakedüéâ,dustinction,Python,Saturday 25th of May 2024 01:01:04 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?usp=g2a_refund_exploit_2697544.pdf

Working as of:

25 May 2024"
LYrtdq8f,üéâG2A.com Free GiftCard MAY 2024 Leakedüéâ,sayid83,Python,Saturday 25th of May 2024 12:55:06 AM CDT,"Leaked G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?usp=g2a_refund_exploit_2697544.pdf

Working as of:

25 May 2024"
QfEDhL4T,üöÄG2A.com Free Gift Card MAY 2024 FIXüéâ,thepplayz,Python,Saturday 25th of May 2024 12:52:19 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?6711377

Working as of:

25 May 2024"
8pvFjakH,üí∞G2A.com Free Gift Card MAY 2024 FIXüöÄ,dustinction,Python,Saturday 25th of May 2024 12:40:29 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?6711377

Working as of:

25 May 2024"
fM4PQFk1,üî•G2A.com Free Gift Card MAY 2024 FIXüí∞,sayid83,Python,Saturday 25th of May 2024 12:34:12 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?6711377

Working as of:

25 May 2024"
azz0fmpm,üî•G2A.com Free Gift Card MAY 2024 FIXüí∞,sayid83,Python,Saturday 25th of May 2024 12:32:03 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?8095951

Working as of:

25 May 2024"
CMx76sfq,üéâG2A.com Free Gift Card MAY 2024 FIXüî•,dustinction,Python,Saturday 25th of May 2024 12:24:59 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?8865728

Working as of:

25 May 2024"
umnnVnck,üöÄG2A.com Free Gift Card MAY 2024 FIXüéâ,sayid83,Python,Saturday 25th of May 2024 12:18:56 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?8865728

Working as of:

25 May 2024"
i4zMGiW1,üöÄG2A.com Free Gift Card MAY 2024 FIXüöÄ,sirmikey,Python,Saturday 25th of May 2024 12:09:29 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?2417415

Working as of:

25 May 2024"
3iU7ey96,üéâG2A.com Free Gift Card MAY 2024 FIXüí∞,dustinction,Python,Saturday 25th of May 2024 12:03:32 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?2417415

Working as of:

25 May 2024"
4Ad3kK4P,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Saturday 25th of May 2024 12:02:20 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_506269.pdf

Working as of:
25 May 2024"
Pv5CF0Gj,üéâG2A.com Free Gift Card MAY 2024 FIXüî•,sayid83,Python,Friday 24th of May 2024 11:57:35 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?2417415

Working as of:

25 May 2024"
McRvbhiX,Untitled,35657,C++,Friday 24th of May 2024 11:44:12 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>
#include <Windows.h>

using namespace std;


int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	ifstream fin;
	ofstream fout;

	fin.open(""file.txt"");
	fout.open(""file2.txt"");

	if (!fin.is_open() || !fout.is_open()) {
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		char ch;
		while (fin.get(ch)) {
			if (ch >= '–ê' && ch <= '–Ø') {
				ch += 32;
			}
			fout << ch;
		}
		fin.close();
		fout.close();
		remove(""file.txt"");
		rename(""file2.txt"", ""file.txt"");
	}
}"
pUKuGPdi,"Lines: numbering, replacing tabs with arrows",banovski,C,Friday 24th of May 2024 11:24:15 PM CDT,"/* The utility reads text from stdin and prepends each line with a
 * number. If a line contains a tab character, the tab character gets
 * replaced with an arrow character. */

#include <stdio.h>

#define MAX_BUFF_SIZE 65536

int main()
{
     char buffer[MAX_BUFF_SIZE] = {};
     char * buff_ptr;
     int number = 1;
     int counter = 0;

     buff_ptr = fgets(buffer, MAX_BUFF_SIZE - 1, stdin);
     while (buff_ptr)
     {
          printf(""%d. "", number);
          while(counter < MAX_BUFF_SIZE && buffer[counter] != 0)
          {
               if(buffer[counter] == '\t')
               {
                    printf(""¬†‚Üí "");
               }
               else
               {
                    (void) putc(buffer[counter], stdout);
               }
               counter += 1;
          }
          counter = 0;
          buff_ptr = fgets(buffer, MAX_BUFF_SIZE - 1, stdin);
          number += 1;
     } 

     return(0);
}
"
5pnWMGTh,üî•G2A.com Free Gift Card MAY 2024 FIXüí∞,sirmikey,Python,Friday 24th of May 2024 11:16:18 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?4199512

Working as of:

25 May 2024"
9QtRhkGx,Untitled,35657,C++,Friday 24th of May 2024 11:11:32 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>
#include <Windows.h>

using namespace std;


int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	ifstream fin;
	ofstream fout;

	fin.open(""file.txt"");
	fout.open(""file2.txt"");

	if (!fin.is_open() || !fout.is_open()) {
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		string str;
		getline(fin, str);
		if (!fin.eof()) {
			fout << str;
		}
		while (getline(fin, str)) {
			if (!fin.eof()) {
				fout << endl << str;
			}
		}
		fin.close();
		fout.close();
		remove(""file.txt"");
		rename(""file2.txt"", ""file.txt"");
	}
}"
TixmacFQ,üöÄG2A.com Free Gift Card MAY 2024 FIXüí∞,sayid83,Python,Friday 24th of May 2024 11:04:26 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?4199512

Working as of:

25 May 2024"
GFLciEJF,ControlScript,Mryeetmemes,Lua,Friday 24th of May 2024 10:57:32 PM CDT,"local player = game.Players.LocalPlayer
local UserInputService = game:GetService(""UserInputService"")
local ContextActionService = game:GetService(""ContextActionService"")

local doJump = false
local reviving = false
local characterWalkSpeed = 40

game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, false)
game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)

player:WaitForChild(""PlayerGui"")

local function jump()
	if player.Character ~= nil then
		if player.Character.Humanoid.WalkSpeed == 0 then
			-- Character is not yet moving, start screen was shown
			doJump = false
			if player.PlayerGui.StartScreen.StartInstructions.Visible == true then
				player.PlayerGui.StartScreen:Destroy()
				player.Character.Humanoid.WalkSpeed = characterWalkSpeed
				game.ReplicatedStorage.RemoteEvents.RunStarting:FireServer()
			end
		else
			player.Character.Humanoid.Jump = true
		end
	end
end

-- Handles behaviours
local function characterTouchedBrick(partTouched)
	local behaviours = partTouched:FindFirstChild(""Behaviours"")
	if behaviours ~= nil then
		behaviours = behaviours:GetChildren()
		for i = 1, #behaviours do
			if behaviours[i].Value == true then
				game.ReplicatedStorage.RemoteEvents.ExecuteBehaviour:FireServer(player.Character, partTouched, behaviours[i].Name)
			end
		end
	end
end

function characterAdded(newCharacter)
	local humanoid = newCharacter:WaitForChild(""Humanoid"")
	humanoid.WalkSpeed = 0
	humanoid.Touched:connect(characterTouchedBrick)

	local splashScreen = player.PlayerGui:WaitForChild(""StartScreen"")

	if UserInputService.TouchEnabled == false then
		if UserInputService.GamepadEnabled then
			splashScreen.StartInstructions.StartLabel.Text = ""Press Space or Gamepad A Button to Start""
		else
			splashScreen.StartInstructions.StartLabel.Text = ""Press Space to Start""
		end

	end
	if reviving == true then
		reviving = false
		splashScreen:Destroy()
		humanoid.WalkSpeed = characterWalkSpeed
	end

	humanoid.WalkSpeed = 0
end
player.CharacterAdded:connect(characterAdded)

if player.Character then
	characterAdded(player.Character)
end

function checkReviving(addedGui)
	if addedGui.Name == ""RevivingGUI"" then
		reviving = true
	end
end
player.PlayerGui.ChildAdded:connect(checkReviving)

if UserInputService.TouchEnabled then
	UserInputService.ModalEnabled = true
	UserInputService.TouchStarted:connect(function(inputObject, gameProcessedEvent) if gameProcessedEvent == false then doJump = true end end)
	UserInputService.TouchEnded:connect(function() doJump = false end)
else
	ContextActionService:BindAction(""Jump"", function(action, userInputState, inputObject) doJump = (userInputState == Enum.UserInputState.Begin) end, false, Enum.KeyCode.Space, Enum.KeyCode.ButtonA)
end

game:GetService(""RunService"").RenderStepped:connect(function()
	if player.Character ~= nil then
		if player.Character:FindFirstChild(""Humanoid"") then
			if doJump == true then
				jump()
			end
			player.Character.Humanoid:Move(Vector3.new(0,0,-1), false)
		end
	end
end)"
F79qL2Fj,PopulateTerrainMap,RealDevMashup,C#,Friday 24th of May 2024 10:57:32 PM CDT,"void PopulateTerrainMap () {
		NoiseCube noise = new NoiseCube();
        // The data points for terrain are stored at the corners of our ""cubes"", so the terrainMap needs to be 1 larger
        // than the width/height of our mesh.
        for (int x = 0; x < width + 1; x++) {
            for (int z = 0; z < width + 1; z++) {
                for (int y = 0; y < height + 1; y++) {

                    // Get a terrain height using regular old Perlin noise.
                    float thisHeight = noise.Noise(x * scale, y * scale, z * scale);

                
                    // Set the value of this point in the terrainMap.
                    terrainMap[x, y, z] = thisHeight > threshold ? 1.0f : 0.0f;

                }
            }
        }
    }"
E7MCuG71,NoiseCube Class,RealDevMashup,C#,Friday 24th of May 2024 10:55:04 PM CDT,"//Got desprate...used chat-GPT

public class NoiseCube
{
    private static readonly int[] perm = new int[512];
    private static readonly int[] permMod12 = new int[512];
    private static readonly int[] p = {151, 160, 137, 91, 90, 15,
        131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,
        190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,
        88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,
        77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,
        102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,
        135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5,
        202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,
        223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,
        129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,
        251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,
        49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138,
        236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180
    };

    public NoiseCube()
    {
        for (int i = 0; i < 512; i++)
        {
            perm[i] = p[i & 255];
            permMod12[i] = perm[i] % 12;
        }
    }

    private static double Dot(int g, double x, double y, double z) {
        switch (g) {
            case 0: return  x + y; // (1,1,0)
            case 1: return -x + y; // (-1,1,0)
            case 2: return  x - y; // (1,-1,0)
            case 3: return -x - y; // (-1,-1,0)
            case 4: return  x + z; // (1,0,1)
            case 5: return -x + z; // (-1,0,1)
            case 6: return  x - z; // (1,0,-1)
            case 7: return -x - z; // (-1,0,-1)
            case 8: return  y + z; // (0,1,1)
            case 9: return -y + z; // (0,-1,1)
            case 10: return  y - z; // (0,1,-1)
            case 11: return -y - z; // (0,-1,-1)
            default: return 0; // Should never happen
        }
    }

    public float Noise(float xin, float yin, float zin)
    {
        double s = (xin + yin + zin) * (1.0 / 3.0); // Skew the input space to determine which simplex cell we're in
        int i = FastFloor(xin + s);
        int j = FastFloor(yin + s);
        int k = FastFloor(zin + s);
        double t = (i + j + k) * (1.0 / 6.0);
        double X0 = i - t; // Unskew the cell origin back to (x,y,z) space
        double Y0 = j - t;
        double Z0 = k - t;
        double x0 = xin - X0; // The x,y,z distances from the cell origin
        double y0 = yin - Y0;
        double z0 = zin - Z0;

        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.
        // Determine which simplex we are in.
        int i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords
        int i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords

        if (x0 >= y0)
        {
            if (y0 >= z0)
            {
                i1 = 1; j1 = 0; k1 = 0; // X Y Z order
                i2 = 1; j2 = 1; k2 = 0;
            }
            else if (x0 >= z0)
            {
                i1 = 1; j1 = 0; k1 = 0; // X Z Y order
                i2 = 1; j2 = 0; k2 = 1;
            }
            else
            {
                i1 = 0; j1 = 0; k1 = 1; // Z X Y order
                i2 = 1; j2 = 0; k2 = 1;
            }
        }
        else
        {
            if (y0 < z0)
            {
                i1 = 0; j1 = 0; k1 = 1; // Z Y X order
                i2 = 0; j2 = 1; k2 = 1;
            }
            else if (x0 < z0)
            {
                i1 = 0; j1 = 1; k1 = 0; // Y Z X order
                i2 = 0; j2 = 1; k2 = 1;
            }
            else
            {
                i1 = 0; j1 = 1; k1 = 0; // Y X Z order
                i2 = 1; j2 = 1; k2 = 0;
            }
        }

        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z), where c = 1/6.
        double x1 = x0 - i1 + (1.0 / 6.0); // Offsets for second corner
        double y1 = y0 - j1 + (1.0 / 6.0);
        double z1 = z0 - k1 + (1.0 / 6.0);
        double x2 = x0 - i2 + (1.0 / 3.0); // Offsets for third corner
        double y2 = y0 - j2 + (1.0 / 3.0);
        double z2 = z0 - k2 + (1.0 / 3.0);
        double x3 = x0 - 1.0 + 0.5; // Offsets for last corner
        double y3 = y0 - 1.0 + 0.5;
        double z3 = z0 - 1.0 + 0.5;

        // Work out the hashed gradient indices of the four simplex corners
        int ii = i & 255;
        int jj = j & 255;
        int kk = k & 255;
        int gi0 = permMod12[ii + perm[jj + perm[kk]]];
        int gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]];
        int gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]];
        int gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]];

        // Calculate the contribution from the four corners
        double t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;
        double n0;
        if (t0 < 0) n0 = 0.0;
        else {
            t0 *= t0;
            n0 = t0 * t0 * Dot(gi0, x0, y0, z0);
        }
        double t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;
        double n1;
        if (t1 < 0) n1 = 0.0;
        else {
            t1 *= t1;
            n1 = t1 * t1 * Dot(gi1, x1, y1, z1);
        }
        double t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;
        double n2;
        if (t2 < 0) n2 = 0.0;
        else {
            t2 *= t2;
            n2 = t2 * t2 * Dot(gi2, x2, y2, z2);
        }
        double t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;
        double n3;
        if (t3 < 0) n3 = 0.0;
        else {
            t3 *= t3;
            n3 = t3 * t3 * Dot(gi3, x3, y3, z3);
        }

        // Add contributions from each corner to get the final noise value.
        // The result is scaled to return values in the interval [-1,1].
        return (float)(32.0 * (n0 + n1 + n2 + n3));
    }

    private static int FastFloor(double x)
    {
        return x > 0 ? (int)x : (int)x - 1;
    }
}"
eAJhT86F,üöÄG2A.com Free Gift Card MAY 2024 FIXüöÄ,sayid83,Python,Friday 24th of May 2024 10:47:11 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?7051984

Working as of:

25 May 2024"
YFhrnAUH,CountDirNestingLevels.bat,jcunews,Batch,Friday 24th of May 2024 10:18:56 PM CDT,"@echo off
setlocal
if ""%~1"" == """" (
  echo In Explorer, drag a directory/folder onto this batch file.
  pause
  goto :eof
)
2>nul pushd %1
if errorlevel 1 (
  echo Only a directory/folder can be dropped onto this batch file.
  pause
  goto :eof
)
if ""%cd:~-1%"" neq ""\"" (
  set ""curdir=%cd%\""
) else set ""curdir=%cd%""
set maxlevels=0
set mldir=(n/a)
set /p =Counting <nul
for /r . /d %%D in (*) do call :process ""%%D""
echo.
echo.
echo Base directory:
echo %cd%
echo.
echo Max. directory nesting levels relative to above base directory:
echo %maxlevels%
echo.
echo First found directory with max. nesting levels:
echo %mldir%
echo.
pause
goto :eof

:process
set /p =.<nul
set ""relpath=%~1""
call set ""relpath=%%relpath:%curdir%=%%""
set ""relpath=%relpath: =_%""
set ""relpath=%relpath:)=_%""
set ""relpath=%relpath:&=_%""
set ""relpath=%relpath:\= %""
set numlevels=0
for %%A in (%relpath%) do set /a numlevels+=1
if %numlevels% gtr %maxlevels% (
  set maxlevels=%numlevels%
  set ""mldir=%~1""
)
"
cZY4830t,üöÄG2A.com Free Gift Card Guide MAY 2024 FIXüöÄ,sayid83,Python,Friday 24th of May 2024 10:04:37 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1c0sKfLlOAJengLCM9exoMxYQZnP7twfg/view?0560879

Working as of:

25 May 2024"
bjLuvi6n,üí∞G2A.com Free Gift Card Guide MAY 2024 FIXüî•,dustinction,Python,Friday 24th of May 2024 09:53:55 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?7829644

Working as of:

25 May 2024"
rCdz3LyS,amazing snowybot 3.14,coinwalk,JavaScript,Friday 24th of May 2024 09:51:10 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var winnerdinner = (elderly*2.4);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<=(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great>=(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowy+(tens*3)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();"
ydUAtKwf,üöÄG2A.com Free Gift Card Guide MAY 2024 FIXüöÄ,sayid83,Python,Friday 24th of May 2024 09:47:59 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?7829644

Working as of:

25 May 2024"
kEDHT7qp,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Friday 24th of May 2024 09:38:56 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
25 May 2024"
xehzLVw1,üöÄG2A.com Free Gift Card Guide MAY 2024 FIXüí∞,dustinction,Python,Friday 24th of May 2024 09:37:20 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?2313391

Working as of:

25 May 2024"
cu36WuLi,üöÄG2A.com Free Gift Card Guide MAY 2024 FIXüöÄ,sayid83,Python,Friday 24th of May 2024 09:31:24 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?2313391

Working as of:

25 May 2024"
aXL6LDD1,üöÄG2A.com Free Gift Card Guide MAY 2024 FIXüöÄ,dustinction,Python,Friday 24th of May 2024 09:25:00 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?8635347

Working as of:

25 May 2024"
959SfhXD,üéâG2A.com Free Gift Card Guide MAY 2024 FIXüöÄ,sayid83,Python,Friday 24th of May 2024 09:19:04 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?8635347

Working as of:

25 May 2024"
uwjNtXQL,üöÄG2A.com Free Gift Card Guide MAY 2024 FIXüî•,sayid83,Python,Friday 24th of May 2024 08:49:27 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?6019935

Working as of:

25 May 2024"
vb6n5D7f,BWR - Changelog 24/05/24,SSilver,Diff,Friday 24th of May 2024 08:44:22 PM CDT,"@Fixes and QOL
Voice Commands
+ ""Sniper ahead!"" is more forgiving in highlighting the Sniper by aiming at him
  The Sniper is notified when he's been highlighted
Spy Radar
  Enemies are notified when they've been highlighted
Overdose
  Fixed firing sound issue
Cow Mangler
+ Fixed charge shot being cancelled by attacks while ubered
Sharpened Volcano Fragment
+ Fixed oversight causing Pyros to not be ignited by marked target explosion
Of note: the cone radius around crosshair is about 5 degrees. Additionally, the means of highlighting enemies required some form of consistent feedback for how powerful this can be

@Rebalances
Baby Face's Blaster
- Increased damage to build Boost meter to 120 (was 100)
The gameplay loop often had Scout building his Boost too quickly with much less opportunity to lose it. The amount needed was increased slightly to make it require more effort to keep your Boost up.

Soda Popper
- Increased Hype spent per jump to 20% (was 15%)
- Increased damage to build Hype meter to 400 (was 350)
The weapon's DPS made accruing Hype too fast, often outpacing the need to use extra jumps and making conservative use of your extra jumps less necessary. These changes were meant to increase

Back Scatter
+ Added +10% damage bonus
The weapon was given a slight damage boost to compensate for it's bad accuracy, making combat at range slightly more forgiving. It additionally increases the chance of getting a backshot kill, particularly taking out 150 HP players in one shot.

Neon Annihilator
+ Charge builds with afterburn while holstered
  Afterburn passively charges at 1% per tick
- Increased deploy speed penalty to 75% slower (was 50%)
- Removed increased melee range
The weapon's last changes appeared to make the weapon a bit too clunky to charge while not curbing some of it's excesses, namely range and deploy not being impactful enough. These changes should give enemies more warning to avoid the charged swing while giving the Pyro more leniancy in charging it passively.

Buffalo Steak Sandvich
+ Reverted recharge timer on Steak
- Increased duration of recharge to 40s (was 30s)
Recharging the steak was often far too impractical, and especially made sharing it especially impractical for how much more inherent value it was given. The recharge timer was restored to help alleviate it but at a slightly reduced rate.

Syringe Guns
- Removed faster uber build rate on resetting teammates crit heals
This addition was a little too excessive on syringes, and punished enemies dealing damage without killing too harshly if the medic could capitalize. It especially made for a clunkier way to maximize uber building.

Vaccinator
+ Increased resistance to 45% (was 33%)
- Reverted ubercharge build bonus to +67% (was +100%)
The uber's strength was a bit too underwhelming, with the volume of charges you're able to apply not being enough to make up for it. To make up for this, they were buffed in strength significantly, while also reducing it's charge back to compensate and still allowing for a plethora of bubbles to be popped."
hYnp8Hun,RAR-FILE-IMAGES.pyw,Najeebsk,Python,Friday 24th of May 2024 08:37:14 PM CDT,"import os
import numpy as np
import imageio.v2 as imageio
import tkinter as tk
from tkinter import filedialog, ttk
from PIL import Image, ImageTk
import rarfile
import io

header_len = 4 * 8  # uint32 bit length

def read_image(img_path):
    img = np.array(imageio.imread(img_path), dtype=np.uint8)
    orig_shape = img.shape
    return img.flatten(), orig_shape

def decode_data(encoded_data):
    out_mask = np.ones_like(encoded_data)
    output = np.bitwise_and(encoded_data, out_mask)
    return output

def write_file(file_path, file_bit_array):
    bytes_data = np.packbits(file_bit_array)
    with open(file_path, 'wb') as f:
        f.write(bytes_data)

def browse_rar_file():
    filename = filedialog.askopenfilename(initialdir=""/"", title=""Select RAR File"", filetypes=[(""RAR files"", ""*.rar"")])
    if filename:
        rar_entry.delete(0, tk.END)
        rar_entry.insert(0, filename)
        load_rar_file_images(filename)

def load_rar_file_images(filename):
    try:
        with rarfile.RarFile(filename) as rf:
            rf.setpassword(password_entry.get())  # Set the password for the RAR file
            file_list = rf.namelist()
            image_files = sorted([file for file in file_list if file.lower().endswith(('.png', '.jpg', '.jpeg', '.bmp', '.gif'))])
            image_dropdown['values'] = image_files
            if image_files:
                image_dropdown.current(0)
                show_image_from_rar(filename, image_files[0])
    except Exception as e:
        print(f""Failed to read RAR file: {e}"")

def show_image_from_rar(filename, image_name):
    try:
        with rarfile.RarFile(filename) as rf:
            rf.setpassword(password_entry.get())  # Set the password for the RAR file
            with rf.open(image_name) as file:
                image_data = file.read()
                image = Image.open(io.BytesIO(image_data))
                show_original_image(image)
    except Exception as e:
        print(f""Failed to open image from RAR file: {e}"")

def show_original_image(image):
    try:
        image.thumbnail((400, 400))  # Resize if needed
        original_photo = ImageTk.PhotoImage(image)
        lbl.config(image=original_photo)
        lbl.image = original_photo
    except Exception as e:
        print(f""Failed to open image file: {e}"")

root = tk.Tk()
root.geometry(""900x600"")
root.title(""Najeeb Image Viewer"")

# Password Entry
tk.Label(root, text=""Password:"").place(x=10, y=10)
password_entry = tk.Entry(root, show=""*"")
password_entry.place(x=80, y=10)

# Input for RAR File Selection
tk.Label(root, text=""Select RAR File:"").place(x=220, y=10)
rar_entry = tk.Entry(root)
rar_entry.place(x=320, y=10)
browse_rar_button = tk.Button(root, text=""Browse"", command=browse_rar_file)
browse_rar_button.place(x=460, y=8)

# Dropdown for RAR file images
tk.Label(root, text=""Select Image from RAR:"").place(x=530, y=10)
image_dropdown = ttk.Combobox(root, state=""readonly"")
image_dropdown.place(x=670, y=10, width=200)
image_dropdown.bind(""<<ComboboxSelected>>"", lambda e: show_image_from_rar(rar_entry.get(), image_dropdown.get()))

# Frame for Original Image
f = tk.Frame(root, bd=3, bg=""#2c3e50"", width=880, height=540, relief=tk.GROOVE)
f.place(x=10, y=50)

lbl = tk.Label(f, bg=""#2c3e50"")
lbl.place(x=10, y=10)

root.mainloop()
"
CTRmhSJc,üî•G2A.com Free Gift Card Guide MAY 2024 FIXüöÄ,sayid83,Python,Friday 24th of May 2024 08:29:59 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?0143206

Working as of:

25 May 2024"
rg89peLd,üî•G2A.com Free Gift Card Guide MAY 2024 FIXüí∞,sirmikey,Python,Friday 24th of May 2024 07:34:13 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?7868162

Working as of:

25 May 2024"
qXnFmn7d,üí∞G2A.com Free Gift Card Guide MAY 2024 FIXüéâ,dustinction,Python,Friday 24th of May 2024 07:25:47 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?7868162

Working as of:

25 May 2024"
mjStBUiC,2024-05-24_stats.json,rdp_snitch,JSON,Friday 24th of May 2024 07:18:17 PM CDT,"{
  ""ip"": {
    ""194.165.16.78"": 6,
    ""213.109.202.235"": 18,
    ""198.235.24.204"": 9,
    ""80.66.66.250"": 6,
    ""87.251.75.145"": 9,
    ""152.32.206.181"": 3,
    ""103.75.186.158"": 9,
    ""103.120.19.81"": 3,
    ""103.176.168.138"": 126,
    ""185.170.144.3"": 6,
    ""194.165.16.10"": 3,
    ""172.236.64.164"": 6,
    ""152.32.198.210"": 3,
    ""103.150.221.231"": 6,
    ""198.235.24.107"": 9,
    ""36.91.222.100"": 6,
    ""64.124.50.139"": 6,
    ""194.165.16.73"": 6,
    ""91.238.181.71"": 6,
    ""152.42.249.30"": 3,
    ""117.173.153.116"": 3,
    ""45.227.254.54"": 6,
    ""103.56.5.180"": 18,
    ""167.94.146.61"": 3,
    ""167.71.191.63"": 3,
    ""198.235.24.131"": 9,
    ""141.98.80.137"": 6,
    ""203.104.35.234"": 3,
    ""136.144.35.68"": 3,
    ""1.55.55.178"": 3,
    ""2.57.149.186"": 6,
    ""2.57.149.92"": 3,
    ""185.196.220.41"": 9,
    ""192.155.81.89"": 12,
    ""45.79.216.25"": 3,
    ""112.4.139.162"": 3,
    ""37.221.94.97"": 3,
    ""187.157.89.218"": 3,
    ""162.142.125.217"": 3,
    ""158.51.14.114"": 6,
    ""198.235.24.56"": 9,
    ""116.140.196.215"": 3
  },
  ""asn"": {
    ""AS48721"": 15,
    ""AS208312"": 27,
    ""AS396982"": 36,
    ""AS51765"": 6,
    ""AS208091"": 9,
    ""AS135377"": 6,
    ""AS135905"": 135,
    ""AS131939"": 3,
    ""AS197414"": 6,
    ""AS63949"": 21,
    ""AS140599"": 24,
    ""AS7713"": 6,
    ""AS6461"": 6,
    ""AS49434"": 6,
    ""AS14061"": 6,
    ""AS9808"": 3,
    ""AS267784"": 6,
    ""AS398705"": 3,
    ""AS43350"": 6,
    ""AS133774"": 3,
    ""AS396356"": 3,
    ""AS18403"": 3,
    ""AS208046"": 9,
    ""AS56046"": 3,
    ""AS49581"": 3,
    ""AS8151"": 3,
    ""AS398324"": 3,
    ""AS398465"": 6,
    ""AS4837"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 21,
    ""Red Byte LLC"": 27,
    ""Google LLC"": 36,
    ""Oy Crea Nova Hosting Solution Ltd"": 6,
    ""Xhost Internet Solutions LP"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Inet software one member company limited"": 9,
    ""IPS INC"": 3,
    ""VIETCLOUD"": 126,
    ""Akamai International B.V."": 6,
    ""Comfac Corporation"": 24,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Zayo Bandwidth"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""DigitalOcean, LLC"": 6,
    ""China Mobile communications corporation"": 3,
    ""Censys, Inc."": 6,
    ""NForce Entertainment B.V."": 6,
    ""Fuzhou"": 3,
    ""Latitude.sh"": 3,
    ""FPT Telecom Company"": 3,
    ""ColocationX Ltd."": 9,
    ""Akamai Technologies, Inc."": 15,
    ""China Mobile Communications Corporation"": 3,
    ""Ferdinand Zink trading as Tube-Hosting"": 3,
    ""Uninet S.A. de C.V."": 3,
    ""Rackdog, LLC"": 6,
    ""China Unicom CHINA169 Network"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 15,
    ""Chang Way Technologies Co. Limited"": 27,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 15,
    ""Ucloud Information Technology"": 3,
    ""Inet software one member company limited"": 9,
    ""IPS Inc"": 3,
    ""VIET CLOUD TECHNOLOGY SERVICES COMPANY LIMITED, Group"": 126,
    ""Xhostis"": 6,
    ""Akamai Technologies, Inc."": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Comfac Corporation"": 24,
    ""Telekomunikasi Indonesia"": 6,
    ""Microsoft Corporation"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""DigitalOcean, LLC"": 6,
    ""China Mobile"": 3,
    ""UAB Host Baltic"": 6,
    ""Censys, Inc."": 3,
    ""Cloud CDN"": 6,
    ""Chinanet GD"": 3,
    ""Panq B.V"": 3,
    ""Vietnam Internet Network Information Center"": 3,
    ""Makut Investments"": 9,
    ""Linode"": 15,
    ""China Mobile Communications Corporation"": 3,
    ""Tube-Hosting"": 3,
    ""Uninet S.A. de C.V."": 3,
    ""Censys Inc"": 3,
    ""AB E-Commerce, LLC"": 6,
    ""China United Network Communications Corporation Limited"": 3
  },
  ""regionName"": {
    ""Kaunas"": 15,
    ""Moscow"": 18,
    ""California"": 48,
    ""Uusimaa"": 6,
    ""North Holland"": 21,
    ""Virginia"": 18,
    ""Hanoi"": 135,
    ""Tokyo"": 3,
    ""Tamil Nadu"": 6,
    ""England"": 3,
    ""Davao Region"": 6,
    ""Jakarta"": 6,
    ""\u00cele-de-France"": 6,
    ""South West"": 3,
    ""Sichuan"": 3,
    ""Vilnius"": 6,
    ""Metro Manila"": 18,
    ""Hesse"": 6,
    ""New Jersey"": 6,
    ""Guangdong"": 3,
    ""B\u1eafc Ninh Province"": 3,
    ""Lesser Poland"": 9,
    ""Georgia"": 3,
    ""Jiangsu"": 3,
    ""Mexico City"": 3,
    ""Michigan"": 3,
    ""Illinois"": 6,
    ""Beijing"": 3
  },
  ""country"": {
    ""Lithuania"": 21,
    ""Russia"": 18,
    ""United States"": 84,
    ""Finland"": 6,
    ""The Netherlands"": 21,
    ""Vietnam"": 138,
    ""Japan"": 3,
    ""India"": 6,
    ""United Kingdom"": 3,
    ""Philippines"": 24,
    ""Indonesia"": 6,
    ""France"": 6,
    ""Singapore"": 3,
    ""China"": 12,
    ""Germany"": 6,
    ""Poland"": 9,
    ""Mexico"": 3
  },
  ""account"": {
    ""Test"": 60,
    ""HdCbFQisj"": 3,
    ""HSbJvN"": 3,
    ""zFbObX"": 3,
    ""Administr"": 33,
    ""Administrator"": 6,
    ""hello"": 183,
    ""ThshhKnnl"": 3,
    ""pBUTjK"": 3,
    ""xLYRRe"": 3,
    ""Domain"": 15,
    ""(empty)"": 21,
    ""vBYxLuXME"": 3,
    ""OBeCIt"": 3,
    ""CJPKVR"": 3,
    ""2zcok0ci"": 12,
    ""beio"": 3,
    ""JlyyaycuB"": 3,
    ""FoaqJv"": 3,
    ""nbDWoS"": 3
  },
  ""keyboard"": {
    ""Unknown"": 369
  },
  ""client_build"": {
    ""Unknown"": 369
  },
  ""client_name"": {
    ""Unknown"": 369
  },
  ""ip_type"": {
    ""Unknown"": 225,
    ""proxy"": 33,
    ""hosting"": 78,
    ""mobile"": 24,
    ""hosting & proxy"": 9
  }
}"
YzYeExsL,üéâG2A.com Free Gift Card Guide MAY 2024 FIXüí∞,sayid83,Python,Friday 24th of May 2024 07:17:22 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?7868162

Working as of:

25 May 2024"
fzFNpCY8,2024-05-24_stats.json,rdp_snitch,JSON,Friday 24th of May 2024 07:16:08 PM CDT,"{
  ""ip"": {
    ""194.165.16.78"": 4,
    ""213.109.202.235"": 12,
    ""198.235.24.204"": 6,
    ""80.66.66.250"": 4,
    ""87.251.75.145"": 6,
    ""152.32.206.181"": 2,
    ""103.75.186.158"": 6,
    ""103.120.19.81"": 2,
    ""103.176.168.138"": 84,
    ""185.170.144.3"": 4,
    ""194.165.16.10"": 2,
    ""172.236.64.164"": 4,
    ""152.32.198.210"": 2,
    ""103.150.221.231"": 4,
    ""198.235.24.107"": 6,
    ""36.91.222.100"": 4,
    ""64.124.50.139"": 4,
    ""194.165.16.73"": 4,
    ""91.238.181.71"": 4,
    ""152.42.249.30"": 2,
    ""117.173.153.116"": 2,
    ""45.227.254.54"": 4,
    ""103.56.5.180"": 12,
    ""167.94.146.61"": 2,
    ""167.71.191.63"": 2,
    ""198.235.24.131"": 6,
    ""141.98.80.137"": 4,
    ""203.104.35.234"": 2,
    ""136.144.35.68"": 2,
    ""1.55.55.178"": 2,
    ""2.57.149.186"": 4,
    ""2.57.149.92"": 2,
    ""185.196.220.41"": 6,
    ""192.155.81.89"": 8,
    ""45.79.216.25"": 2,
    ""112.4.139.162"": 2,
    ""37.221.94.97"": 2,
    ""187.157.89.218"": 2,
    ""162.142.125.217"": 2,
    ""158.51.14.114"": 4,
    ""198.235.24.56"": 6,
    ""116.140.196.215"": 2
  },
  ""asn"": {
    ""AS48721"": 10,
    ""AS208312"": 18,
    ""AS396982"": 24,
    ""AS51765"": 4,
    ""AS208091"": 6,
    ""AS135377"": 4,
    ""AS135905"": 90,
    ""AS131939"": 2,
    ""AS197414"": 4,
    ""AS63949"": 14,
    ""AS140599"": 16,
    ""AS7713"": 4,
    ""AS6461"": 4,
    ""AS49434"": 4,
    ""AS14061"": 4,
    ""AS9808"": 2,
    ""AS267784"": 4,
    ""AS398705"": 2,
    ""AS43350"": 4,
    ""AS133774"": 2,
    ""AS396356"": 2,
    ""AS18403"": 2,
    ""AS208046"": 6,
    ""AS56046"": 2,
    ""AS49581"": 2,
    ""AS8151"": 2,
    ""AS398324"": 2,
    ""AS398465"": 4,
    ""AS4837"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 14,
    ""Red Byte LLC"": 18,
    ""Google LLC"": 24,
    ""Oy Crea Nova Hosting Solution Ltd"": 4,
    ""Xhost Internet Solutions LP"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Inet software one member company limited"": 6,
    ""IPS INC"": 2,
    ""VIETCLOUD"": 84,
    ""Akamai International B.V."": 4,
    ""Comfac Corporation"": 16,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Zayo Bandwidth"": 4,
    ""Datacenter location PAR1 France"": 4,
    ""DigitalOcean, LLC"": 4,
    ""China Mobile communications corporation"": 2,
    ""Censys, Inc."": 4,
    ""NForce Entertainment B.V."": 4,
    ""Fuzhou"": 2,
    ""Latitude.sh"": 2,
    ""FPT Telecom Company"": 2,
    ""ColocationX Ltd."": 6,
    ""Akamai Technologies, Inc."": 10,
    ""China Mobile Communications Corporation"": 2,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""Rackdog, LLC"": 4,
    ""China Unicom CHINA169 Network"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 10,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 10,
    ""Ucloud Information Technology"": 2,
    ""Inet software one member company limited"": 6,
    ""IPS Inc"": 2,
    ""VIET CLOUD TECHNOLOGY SERVICES COMPANY LIMITED, Group"": 84,
    ""Xhostis"": 4,
    ""Akamai Technologies, Inc."": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Comfac Corporation"": 16,
    ""Telekomunikasi Indonesia"": 4,
    ""Microsoft Corporation"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""DigitalOcean, LLC"": 4,
    ""China Mobile"": 2,
    ""UAB Host Baltic"": 4,
    ""Censys, Inc."": 2,
    ""Cloud CDN"": 4,
    ""Chinanet GD"": 2,
    ""Panq B.V"": 2,
    ""Vietnam Internet Network Information Center"": 2,
    ""Makut Investments"": 6,
    ""Linode"": 10,
    ""China Mobile Communications Corporation"": 2,
    ""Tube-Hosting"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""Censys Inc"": 2,
    ""AB E-Commerce, LLC"": 4,
    ""China United Network Communications Corporation Limited"": 2
  },
  ""regionName"": {
    ""Kaunas"": 10,
    ""Moscow"": 12,
    ""California"": 32,
    ""Uusimaa"": 4,
    ""North Holland"": 14,
    ""Virginia"": 12,
    ""Hanoi"": 90,
    ""Tokyo"": 2,
    ""Tamil Nadu"": 4,
    ""England"": 2,
    ""Davao Region"": 4,
    ""Jakarta"": 4,
    ""\u00cele-de-France"": 4,
    ""South West"": 2,
    ""Sichuan"": 2,
    ""Vilnius"": 4,
    ""Metro Manila"": 12,
    ""Hesse"": 4,
    ""New Jersey"": 4,
    ""Guangdong"": 2,
    ""B\u1eafc Ninh Province"": 2,
    ""Lesser Poland"": 6,
    ""Georgia"": 2,
    ""Jiangsu"": 2,
    ""Mexico City"": 2,
    ""Michigan"": 2,
    ""Illinois"": 4,
    ""Beijing"": 2
  },
  ""country"": {
    ""Lithuania"": 14,
    ""Russia"": 12,
    ""United States"": 56,
    ""Finland"": 4,
    ""The Netherlands"": 14,
    ""Vietnam"": 92,
    ""Japan"": 2,
    ""India"": 4,
    ""United Kingdom"": 2,
    ""Philippines"": 16,
    ""Indonesia"": 4,
    ""France"": 4,
    ""Singapore"": 2,
    ""China"": 8,
    ""Germany"": 4,
    ""Poland"": 6,
    ""Mexico"": 2
  },
  ""account"": {
    ""Test"": 40,
    ""HdCbFQisj"": 2,
    ""HSbJvN"": 2,
    ""zFbObX"": 2,
    ""Administr"": 22,
    ""Administrator"": 4,
    ""hello"": 122,
    ""ThshhKnnl"": 2,
    ""pBUTjK"": 2,
    ""xLYRRe"": 2,
    ""Domain"": 10,
    ""(empty)"": 14,
    ""vBYxLuXME"": 2,
    ""OBeCIt"": 2,
    ""CJPKVR"": 2,
    ""2zcok0ci"": 8,
    ""beio"": 2,
    ""JlyyaycuB"": 2,
    ""FoaqJv"": 2,
    ""nbDWoS"": 2
  },
  ""keyboard"": {
    ""Unknown"": 246
  },
  ""client_build"": {
    ""Unknown"": 246
  },
  ""client_name"": {
    ""Unknown"": 246
  },
  ""ip_type"": {
    ""Unknown"": 150,
    ""proxy"": 22,
    ""hosting"": 52,
    ""mobile"": 16,
    ""hosting & proxy"": 6
  }
}"
9cwLbNKT,2024-05-24_stats.json,rdp_snitch,JSON,Friday 24th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""194.165.16.78"": 2,
    ""213.109.202.235"": 6,
    ""198.235.24.204"": 3,
    ""80.66.66.250"": 2,
    ""87.251.75.145"": 3,
    ""152.32.206.181"": 1,
    ""103.75.186.158"": 3,
    ""103.120.19.81"": 1,
    ""103.176.168.138"": 42,
    ""185.170.144.3"": 2,
    ""194.165.16.10"": 1,
    ""172.236.64.164"": 2,
    ""152.32.198.210"": 1,
    ""103.150.221.231"": 2,
    ""198.235.24.107"": 3,
    ""36.91.222.100"": 2,
    ""64.124.50.139"": 2,
    ""194.165.16.73"": 2,
    ""91.238.181.71"": 2,
    ""152.42.249.30"": 1,
    ""117.173.153.116"": 1,
    ""45.227.254.54"": 2,
    ""103.56.5.180"": 6,
    ""167.94.146.61"": 1,
    ""167.71.191.63"": 1,
    ""198.235.24.131"": 3,
    ""141.98.80.137"": 2,
    ""203.104.35.234"": 1,
    ""136.144.35.68"": 1,
    ""1.55.55.178"": 1,
    ""2.57.149.186"": 2,
    ""2.57.149.92"": 1,
    ""185.196.220.41"": 3,
    ""192.155.81.89"": 4,
    ""45.79.216.25"": 1,
    ""112.4.139.162"": 1,
    ""37.221.94.97"": 1,
    ""187.157.89.218"": 1,
    ""162.142.125.217"": 1,
    ""158.51.14.114"": 2,
    ""198.235.24.56"": 3,
    ""116.140.196.215"": 1
  },
  ""asn"": {
    ""AS48721"": 5,
    ""AS208312"": 9,
    ""AS396982"": 12,
    ""AS51765"": 2,
    ""AS208091"": 3,
    ""AS135377"": 2,
    ""AS135905"": 45,
    ""AS131939"": 1,
    ""AS197414"": 2,
    ""AS63949"": 7,
    ""AS140599"": 8,
    ""AS7713"": 2,
    ""AS6461"": 2,
    ""AS49434"": 2,
    ""AS14061"": 2,
    ""AS9808"": 1,
    ""AS267784"": 2,
    ""AS398705"": 1,
    ""AS43350"": 2,
    ""AS133774"": 1,
    ""AS396356"": 1,
    ""AS18403"": 1,
    ""AS208046"": 3,
    ""AS56046"": 1,
    ""AS49581"": 1,
    ""AS8151"": 1,
    ""AS398324"": 1,
    ""AS398465"": 2,
    ""AS4837"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 7,
    ""Red Byte LLC"": 9,
    ""Google LLC"": 12,
    ""Oy Crea Nova Hosting Solution Ltd"": 2,
    ""Xhost Internet Solutions LP"": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Inet software one member company limited"": 3,
    ""IPS INC"": 1,
    ""VIETCLOUD"": 42,
    ""Akamai International B.V."": 2,
    ""Comfac Corporation"": 8,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Zayo Bandwidth"": 2,
    ""Datacenter location PAR1 France"": 2,
    ""DigitalOcean, LLC"": 2,
    ""China Mobile communications corporation"": 1,
    ""Censys, Inc."": 2,
    ""NForce Entertainment B.V."": 2,
    ""Fuzhou"": 1,
    ""Latitude.sh"": 1,
    ""FPT Telecom Company"": 1,
    ""ColocationX Ltd."": 3,
    ""Akamai Technologies, Inc."": 5,
    ""China Mobile Communications Corporation"": 1,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""Rackdog, LLC"": 2,
    ""China Unicom CHINA169 Network"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 5,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 5,
    ""Ucloud Information Technology"": 1,
    ""Inet software one member company limited"": 3,
    ""IPS Inc"": 1,
    ""VIET CLOUD TECHNOLOGY SERVICES COMPANY LIMITED, Group"": 42,
    ""Xhostis"": 2,
    ""Akamai Technologies, Inc."": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Comfac Corporation"": 8,
    ""Telekomunikasi Indonesia"": 2,
    ""Microsoft Corporation"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""DigitalOcean, LLC"": 2,
    ""China Mobile"": 1,
    ""UAB Host Baltic"": 2,
    ""Censys, Inc."": 1,
    ""Cloud CDN"": 2,
    ""Chinanet GD"": 1,
    ""Panq B.V"": 1,
    ""Vietnam Internet Network Information Center"": 1,
    ""Makut Investments"": 3,
    ""Linode"": 5,
    ""China Mobile Communications Corporation"": 1,
    ""Tube-Hosting"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""Censys Inc"": 1,
    ""AB E-Commerce, LLC"": 2,
    ""China United Network Communications Corporation Limited"": 1
  },
  ""regionName"": {
    ""Kaunas"": 5,
    ""Moscow"": 6,
    ""California"": 16,
    ""Uusimaa"": 2,
    ""North Holland"": 7,
    ""Virginia"": 6,
    ""Hanoi"": 45,
    ""Tokyo"": 1,
    ""Tamil Nadu"": 2,
    ""England"": 1,
    ""Davao Region"": 2,
    ""Jakarta"": 2,
    ""\u00cele-de-France"": 2,
    ""South West"": 1,
    ""Sichuan"": 1,
    ""Vilnius"": 2,
    ""Metro Manila"": 6,
    ""Hesse"": 2,
    ""New Jersey"": 2,
    ""Guangdong"": 1,
    ""B\u1eafc Ninh Province"": 1,
    ""Lesser Poland"": 3,
    ""Georgia"": 1,
    ""Jiangsu"": 1,
    ""Mexico City"": 1,
    ""Michigan"": 1,
    ""Illinois"": 2,
    ""Beijing"": 1
  },
  ""country"": {
    ""Lithuania"": 7,
    ""Russia"": 6,
    ""United States"": 28,
    ""Finland"": 2,
    ""The Netherlands"": 7,
    ""Vietnam"": 46,
    ""Japan"": 1,
    ""India"": 2,
    ""United Kingdom"": 1,
    ""Philippines"": 8,
    ""Indonesia"": 2,
    ""France"": 2,
    ""Singapore"": 1,
    ""China"": 4,
    ""Germany"": 2,
    ""Poland"": 3,
    ""Mexico"": 1
  },
  ""account"": {
    ""Test"": 20,
    ""HdCbFQisj"": 1,
    ""HSbJvN"": 1,
    ""zFbObX"": 1,
    ""Administr"": 11,
    ""Administrator"": 2,
    ""hello"": 61,
    ""ThshhKnnl"": 1,
    ""pBUTjK"": 1,
    ""xLYRRe"": 1,
    ""Domain"": 5,
    ""(empty)"": 7,
    ""vBYxLuXME"": 1,
    ""OBeCIt"": 1,
    ""CJPKVR"": 1,
    ""2zcok0ci"": 4,
    ""beio"": 1,
    ""JlyyaycuB"": 1,
    ""FoaqJv"": 1,
    ""nbDWoS"": 1
  },
  ""keyboard"": {
    ""Unknown"": 123
  },
  ""client_build"": {
    ""Unknown"": 123
  },
  ""client_name"": {
    ""Unknown"": 123
  },
  ""ip_type"": {
    ""Unknown"": 75,
    ""proxy"": 11,
    ""hosting"": 26,
    ""mobile"": 8,
    ""hosting & proxy"": 3
  }
}"
v5b27uT4,AI-GENERATE2.0.pyw,Najeebsk,Python,Friday 24th of May 2024 07:13:35 PM CDT,"import os
import numpy as np
from imageio.v2 import imread
import tkinter as tk
from tkinter import filedialog, ttk
from PIL import Image, ImageTk

header_len = 4 * 8  # uint32 bit length

def read_image(img_path):
    img = np.array(imread(img_path), dtype=np.uint8)
    orig_shape = img.shape
    return img.flatten(), orig_shape

def read_file(file_path):
    file_bytes = open(file_path, ""rb"").read()
    return np.unpackbits(file_bytes)

def decode_data(encoded_data):
    out_mask = np.ones_like(encoded_data)
    output = np.bitwise_and(encoded_data, out_mask)
    return output

def write_file(file_path, file_bit_array):
    bytes_data = np.packbits(file_bit_array)
    with open(file_path, 'wb') as f:
        f.write(bytes_data)

def browse_file():
    filename = filedialog.askopenfilename(initialdir=""/"", title=""Select Picture File"")
    if filename:
        original_entry_unhide.delete(0, tk.END)
        original_entry_unhide.insert(0, filename)
        show_original_image(filename)

def show_original_image(filename):
    original_image = Image.open(filename)
    original_image.thumbnail((400, 400))  # Resize if needed
    original_photo = ImageTk.PhotoImage(original_image)
    lbl.config(image=original_photo)
    lbl.image = original_photo

def browse_save_location():
    save_location = filedialog.asksaveasfilename(initialdir=""/"", title=""Select Save Location"", defaultextension="".jpg"")
    if save_location:
        save_entry_unhide.delete(0, tk.END)
        save_entry_unhide.insert(0, save_location)

def unhide_images():
    original_file = original_entry_unhide.get()
    save_file = save_entry_unhide.get()
    if not os.path.isfile(original_file):
        print(""Image file does not exist"")
        return

    encoded_data, shape_orig = read_image(original_file)
    data = decode_data(encoded_data)
    el_array = np.packbits(data[:header_len])
    extracted_len = el_array.view(np.uint32)[0]
    data = data[header_len:extracted_len + header_len]
    write_file(save_file, data)
    print(""Image decoded and saved"")

    # Simulate a progress bar effect
    progress = 0
    while progress <= 100:
        progress += 1
        unhide_progress_bar['value'] = progress
        root.update_idletasks()
        root.after(50)  # Adjust speed of progress bar

    # Load and display the saved image
    saved_image = Image.open(save_file)
    saved_image.thumbnail((400, 400))  # Resize if needed
    saved_photo = ImageTk.PhotoImage(saved_image)
    lbl2.config(image=saved_photo)
    lbl2.image = saved_photo

    # Display the saved image with a slow vertical effect
    for i in range(1, 101):
        lbl2.place(y=i)  # Update y position gradually
        root.update_idletasks()
        root.after(10)  # Adjust speed of vertical effect

root = tk.Tk()
root.geometry(""1000x660"")
root.title(""Najeeb Generate AI Images"")

# Input for Picture Selection
tk.Label(root, text=""Select Picture File:"").place(x=10, y=10)
original_entry_unhide = tk.Entry(root)
original_entry_unhide.place(x=120, y=10)
browse_button = tk.Button(root, text=""Browse"", command=browse_file)
browse_button.place(x=260, y=8)

# Input for Save Location
tk.Label(root, text=""Select Save Location:"").place(x=340, y=10)
save_entry_unhide = tk.Entry(root)
save_entry_unhide.place(x=470, y=10)
browse_save_button = tk.Button(root, text=""Browse"", command=browse_save_location)
browse_save_button.place(x=620, y=8)

# Button to unhide images
unhide_button = tk.Button(root, text=""Generate AI Image"", command=unhide_images, bg=""#6699FF"", fg=""white"")
unhide_button.place(x=800, y=8)

# Progress Bar
unhide_progress_bar = ttk.Progressbar(root, orient='horizontal', mode='determinate')
unhide_progress_bar.place(x=10, y=40, width=980)

# Frame for Original Image
f = tk.Frame(root, bd=3, bg=""#2c3e50"", width=500, height=640, relief=tk.GROOVE)
f.place(x=5, y=70)

lbl = tk.Label(f, bg=""#2c3e50"")
lbl.place(x=10, y=140)

# Frame for Generated AI Image
frame2 = tk.Frame(root, bd=3, width=500, height=640, relief=tk.GROOVE, bg=""#34495e"")
frame2.place(x=505, y=70)

lbl2 = tk.Label(frame2, bg=""#34495e"")
lbl2.place(x=10, y=100)

root.mainloop()
"
GQXPk15u,AI-GENERATE-RAR.pyw,Najeebsk,Python,Friday 24th of May 2024 07:11:27 PM CDT,"import os
import numpy as np
import imageio.v2 as imageio
import tkinter as tk
from tkinter import filedialog, ttk
from PIL import Image, ImageTk
import rarfile

header_len = 4 * 8  # uint32 bit length

def read_image(img_path):
    img = np.array(imageio.imread(img_path), dtype=np.uint8)
    orig_shape = img.shape
    return img.flatten(), orig_shape

def decode_data(encoded_data):
    out_mask = np.ones_like(encoded_data)
    output = np.bitwise_and(encoded_data, out_mask)
    return output

def write_file(file_path, file_bit_array):
    bytes_data = np.packbits(file_bit_array)
    with open(file_path, 'wb') as f:
        f.write(bytes_data)

def browse_rar_file():
    filename = filedialog.askopenfilename(initialdir=""/"", title=""Select RAR File"", filetypes=[(""RAR files"", ""*.rar"")])
    if filename:
        rar_entry.delete(0, tk.END)
        rar_entry.insert(0, filename)
        load_rar_file_images(filename)

def load_rar_file_images(filename):
    try:
        with rarfile.RarFile(filename) as rf:
            rf.setpassword(password_entry.get())  # Set the password for the RAR file
            file_list = rf.namelist()
            image_files = [file for file in file_list if file.lower().endswith(('.png', '.jpg', '.jpeg', '.bmp', '.gif'))]
            image_dropdown['values'] = image_files
            if image_files:
                image_dropdown.current(0)
                show_image_from_rar(filename, image_files[0])
    except Exception as e:
        print(f""Failed to read RAR file: {e}"")

def show_image_from_rar(filename, image_name):
    try:
        with rarfile.RarFile(filename) as rf:
            rf.setpassword(password_entry.get())  # Set the password for the RAR file
            rf.extract(image_name, path=""TEMP_DATA"")
            extracted_image_path = os.path.join(""TEMP_DATA"", image_name)
            show_original_image(extracted_image_path)
    except Exception as e:
        print(f""Failed to extract image from RAR file: {e}"")

def show_original_image(filename):
    try:
        original_image = Image.open(filename)
        original_image.thumbnail((400, 400))  # Resize if needed
        original_photo = ImageTk.PhotoImage(original_image)
        lbl.config(image=original_photo)
        lbl.image = original_photo
    except Exception as e:
        print(f""Failed to open image file: {e}"")

def browse_save_location():
    save_location = filedialog.asksaveasfilename(initialdir=""/"", title=""Select Save Location"", defaultextension="".jpg"")
    if save_location:
        save_entry_unhide.delete(0, tk.END)
        save_entry_unhide.insert(0, save_location)

def unhide_images():
    original_file = rar_entry.get()
    selected_image = image_dropdown.get()
    save_file = save_entry_unhide.get()
    password = password_entry.get()
    if not os.path.isfile(original_file):
        print(""RAR file does not exist"")
        return

    try:
        # Extract the selected image from the RAR file
        with rarfile.RarFile(original_file) as rf:
            rf.setpassword(password)  # Set the password for the RAR file
            rf.extract(selected_image, path=""TEMP_DATA"")
        extracted_image_path = os.path.join(""TEMP_DATA"", selected_image)
    except rarfile.BadRarFile:
        print(""Failed to extract RAR file. Possibly wrong password or corrupted file."")
        return

    # Proceed with the image decoding process
    encoded_data, shape_orig = read_image(extracted_image_path)
    data = decode_data(encoded_data)
    el_array = np.packbits(data[:header_len])
    extracted_len = el_array.view(np.uint32)[0]
    data = data[header_len:extracted_len + header_len]
    write_file(save_file, data)
    print(""Image decoded and saved"")

    # Simulate a progress bar effect
    progress = 0
    while progress <= 100:
        progress += 1
        unhide_progress_bar['value'] = progress
        root.update_idletasks()
        root.after(50)  # Adjust speed of progress bar

    # Load and display the saved image
    if os.path.isfile(save_file):
        try:
            saved_image = Image.open(save_file)
            saved_image.thumbnail((400, 400))  # Resize if needed
            saved_photo = ImageTk.PhotoImage(saved_image)
            lbl2.config(image=saved_photo)
            lbl2.image = saved_photo
        except Exception as e:
            print(f""Failed to open saved image: {e}"")

    # Display the saved image with a slow vertical effect
    for i in range(1, 101):
        lbl2.place(y=i)  # Update y position gradually
        root.update_idletasks()
        root.after(10)  # Adjust speed of vertical effect

def clear_folder(folder_path):
    try:
        # List all files in the folder
        files = os.listdir(folder_path)
        
        # Iterate through each file and delete it
        for file in files:
            file_path = os.path.join(folder_path, file)
            if os.path.isfile(file_path):
                os.remove(file_path)
        
        print(""Folder data cleared successfully."")
    except Exception as e:
        print(f""An error occurred: {e}"")

# Example usage:
folder_path = ""TEMP_DATA""
clear_folder(folder_path)

root = tk.Tk()
root.geometry(""1000x660"")
root.title(""Najeeb Generate AI Images"")

# Password Entry
tk.Label(root, text=""Password:"").place(x=10, y=10)
password_entry = tk.Entry(root, show=""*"")
password_entry.place(x=80, y=10)

# Input for RAR File Selection
tk.Label(root, text=""Select RAR File:"").place(x=260, y=10)
rar_entry = tk.Entry(root)
rar_entry.place(x=360, y=10)
browse_rar_button = tk.Button(root, text=""Browse"", command=browse_rar_file)
browse_rar_button.place(x=520, y=8)

# Dropdown for RAR file images
tk.Label(root, text=""Select Image from RAR:"").place(x=600, y=10)
image_dropdown = ttk.Combobox(root, state=""readonly"")
image_dropdown.place(x=730, y=10)
image_dropdown.bind(""<<ComboboxSelected>>"", lambda e: show_image_from_rar(rar_entry.get(), image_dropdown.get()))

# Input for Save Location
tk.Label(root, text=""Select Save Location:"").place(x=10, y=50)
save_entry_unhide = tk.Entry(root)
save_entry_unhide.place(x=150, y=50)
browse_save_button = tk.Button(root, text=""Browse"", command=browse_save_location)
browse_save_button.place(x=310, y=48)

# Button to unhide images
unhide_button = tk.Button(root, text=""Generate AI Image"", command=unhide_images, bg=""#6699FF"", fg=""white"")
unhide_button.place(x=400, y=48)

# Button to Temp-Data Clear
clear_button = tk.Button(root, text=""Clear Data"", command=lambda: clear_folder(""TEMP_DATA""), bg=""#6699FF"", fg=""white"")
clear_button.place(x=525, y=48)

# Progress Bar
unhide_progress_bar = ttk.Progressbar(root, orient='horizontal', mode='determinate')
unhide_progress_bar.place(x=10, y=80, width=980)

# Frame for Original Image
f = tk.Frame(root, bd=3, bg=""#2c3e50"", width=500, height=640, relief=tk.GROOVE)
f.place(x=5, y=110)

lbl = tk.Label(f, bg=""#2c3e50"")
lbl.place(x=10, y=140)

# Frame for Generated AI Image
frame2 = tk.Frame(root, bd=3, width=500, height=640, relief=tk.GROOVE, bg=""#34495e"")
frame2.place(x=505, y=110)

lbl2 = tk.Label(frame2, bg=""#34495e"")
lbl2.place(x=10, y=100)


root.mainloop()
"
kxCewum0,whoami,Python253,Python,Friday 24th of May 2024 06:58:39 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: whoami.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script retrieves the username of the current user on the system.
    
Functions:
    - get_user_info(): Retrieves information about the current user on the system.

Requirements:
    - Python 3.x

Usage:
    - Run the script with the Python command:
    
              python whoami.py

Additional Notes:
    - This script uses the getpass module to retrieve the current user's username.
    - It is compatible with Python 3.x.
    - Running the script without any arguments will print the current user's username.
""""""

import getpass

def get_user_info():
    """"""
    Retrieve information about the current user on the system.

    Returns:
        dict: A dictionary containing the following user information:
            - 'Username': The current user's username.
    """"""
    # Get current user's username
    username = getpass.getuser()

    return {
        ""Username"": username
    }

if __name__ == ""__main__"":
    user_info = get_user_info()
    for key, value in user_info.items():
        print(f""{key}: {value}"")
"
qePwvtiw,Untitled,vonschutter,Bash,Friday 24th of May 2024 06:38:07 PM CDT,"
rtd_oem_release_upgrade() {
# Description: Function to attempt to perform a release upgade on several Linux distributions.
# Supported distributions are: Ubuntu, Pop! OS, Debian, SUSE, and fedora.
# This function does not require any arguments but will respect ""interactive"". The ""interactive""
# parameter will force the function to pause if a supported distribution is not found.
# It will check for a supported distribution and attempt the upgrade if possible.
# If a supported distribution is not detected the function will do nothing.
#
# Globals:
# Arguments: None
# Outputs:
# Returns:
# Usage:  (in a script):
#  rtd_oem_release_upgrade [ string ]
#
# [ string ] : interactive
#
# End of Documentation


	ensure_admin
	local interactive=$1
	local distro=$(hostnamectl | grep -Eo 'Ubuntu|Pop!_OS|Debian|SUSE|fedora|TUXEDO|Zorin')

	case $distro in
		""Ubuntu""|""Pop!_OS""|""TUXEDO|Zorin"")
			# Common update steps for Ubuntu and derivativres
			write_warning ""This may take some time, please be patient!""
			apt clean && apt update -m ; dpkg --configure -a ; apt install -f ; apt dist-upgrade ; apt autoremove --purge
			if [[ ""$interactive"" == ""interactive"" ]]; then
				$RTD_GUI --title ""$distro Distribution Upgrade Confirmation"" --yesno ""Please confirm that you want to upgrade to the next version of $distro. This may take some time, please be patient!"" 8 78
				case $? in
				0 ) do-release-upgrade | tee -a ${_LOGFILE} ;;
				1|255 ) return 1 ;;
				esac
			else
				do-release-upgrade --quiet | tee -a ${_LOGFILE}
			fi
		;;
		""Debian"")
			write_error ""Debian does not provide an upgrade tool between major releases. Please use the manual upgrade method.""
			return 1
		;;
		""SUSE"")
			# SUSE upgrade steps
			if current_version=$(cat /etc/os-release | grep VERSION_ID | cut -d '""' -f2) ; then
				write_status ""Current SUSE version: $current_version""
			else
				write_error ""unable to query /etc/os-release for current version of SUSE! ""
				return 1
			fi

			if latest_version=$(curl -s https://download.opensuse.org/distribution/openSUSE-current/iso/ | grep -Eo '1[5-9]\.[0-9]|20\.[0-9]+' | sort -V | tail -n1) ; then
				write_status ""Latest SUSE version: $latest_version""
			else
				write_error ""unable to query opensuse.org for latest version of SUSE! Check access to internet and try again.""
				return 1
			fi

			if [ ""$(printf '%s\n' ""$current_version"" ""$latest_version"" | sort -V | head -n1)"" != ""$current_version"" ]; then
				write_status ""A newer version of SUSE is available: $latest_version""
				write_warning ""This REALLY may take some time, please be patient!""
				write_information ""These are the current repositories:""
				{
					zypper repos --uri
					zypper modifyrepo --enable repo-update
					zypper repos --uri
					zypper refresh
				} | tee -a ${_LOGFILE}

				write_status ""Checking if it is possible to upgrade to ${SUSE_VER}""
				if zypper --releasever=""${SUSE_VER}"" lr -u ; then
					zypper --releasever=""${SUSE_VER}"" ref
					write_status ""Attempting upgrade of system now...""
					zypper --releasever=""${SUSE_VER}"" dup --force-resolution
					wait
					[[ ""$interactive"" == ""interactive"" ]] && read -p ""$ERRMSG: Press  [ ENTER ] to REBOOT:""
					reboot
				else
					write_error ""It is not possible to upgrade to Open Suse ${SUSE_VER} since there does not appear to be a release server available for ${SUSE_VER}""
					[[ ""$interactive"" == ""interactive"" ]] && read -p ""$ERRMSG: Press  [ ENTER ] to continue:""
				fi
			else
				write_information ""You are using the latest version of SUSE: $current_version""
				[[ ""$interactive"" == ""interactive"" ]] && read -p ""$ERRMSG: Press  [ ENTER ] to continue:""
			fi
		;;
		""fedora"")
			# Fedora upgrade steps
			if [[ ""$interactive"" == ""interactive"" ]]; then
				latest_version=$(curl -s https://dl.fedoraproject.org/pub/fedora/linux/releases/ | cut -d' ' -f5 |grep -Eo '[0-9][5-9]' | sort -V | tail -n1)
				releasever=$($RTD_GUI --title ""Fedora Distribution Upgrade Confirmation"" \
					--inputbox ""Please enter the Fedora version you want to upgrade to. Latest version is . Current version: $latest_version $(hostnamectl | grep -oP '(?<=Operating System: Fedora\s)\d+')\nOnly numbers are valid."" 10 78 3>&1 1>&2 2>&3)
			else
				releasever=$(curl -s https://dl.fedoraproject.org/pub/fedora/linux/releases/ | cut -d' ' -f5 |grep -Eo '[0-9][5-9]' | sort -V | tail -n1)
			fi

			# Validate input
			if [[ ! $releasever =~ ^[0-9]+$ ]]; then
				write_error ""Invalid version number. Upgrade aborted.""
				return 1
			fi

			# Upgrade process
			write_status ""Starting upgrade process for Fedora. This may take some time.""
			{
				dnf clean all
				dnf upgrade --refresh -y
				dnf install dnf-plugin-system-upgrade -y
				if ! dnf system-upgrade download --refresh --releasever=""${releasever}""; then
					write_error ""Failed to download system upgrade packages.""
					return 1
				fi
			} | tee -a ${_LOGFILE}

			# Confirmation for reboot
			if [[ ""$interactive"" == ""interactive"" ]]; then
				read -p ""$ERRMSG: Press [ ENTER ] to REBOOT and install the upgrade:""
			fi

			# Rebooting to apply upgrade
			dnf system-upgrade reboot
			return $?
		;;
		*)
		system::log_item ""This distribution is not supported for release upgrade.""
		[[ ""$interactive"" == ""interactive"" ]] && read -p ""This distribution is not supported. Press [Enter] key to return to menu.""
		return 1
		;;
	esac
	return

}
"
uPtMj8N3,üí∞G2A.com Free Gift Card Guide MAY 2024 FIXüéâ,sayid83,Python,Friday 24th of May 2024 06:37:41 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?7394042

Working as of:

25 May 2024"
w3e7vgBY,system_info_collector,Python253,Python,Friday 24th of May 2024 06:26:18 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: system_info_collector.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script collects various system information such as CPU, memory, disk, GPU, and system details.
    - It then formats the collected information as plain text and optionally saves it to a text file.

Requirements:
    - Python 3.x
    - psutil
    - GPUtil

Functions:
    - get_cpu_info():
        Retrieves CPU information.
    - get_memory_info():
        Retrieves memory information.
    - get_disk_info():
        Retrieves disk information.
    - get_gpu_info():
        Retrieves GPU information.
    - get_system_info():
        Retrieves system information.
    - format_data_as_text(data):
        Formats collected system information as plain text.
    - main():
        Main function to collect and save system information.

Usage:
    - Run the script.
    - Follow the on-screen prompts to save the information to a text file if desired.

Additional Notes:
    - Ensure that 'psutil' and 'GPUtil' libraries are installed.
    - The script may take some time to collect system information depending on the system's configuration.
""""""

import psutil
import GPUtil
import os

def get_cpu_info():
    """"""Retrieve CPU information.

    Returns:
        tuple: A tuple containing a dictionary with CPU information and a boolean indicating success.
    """"""
    try:
        cpu_info = {
            ""Physical Cores"": psutil.cpu_count(logical=False),
            ""Total Cores"": psutil.cpu_count(logical=True),
            ""Max Frequency (MHz)"": psutil.cpu_freq().max,
            ""Min Frequency (MHz)"": psutil.cpu_freq().min,
            ""Current Frequency (MHz)"": psutil.cpu_freq().current,
            ""CPU Usage per Core (%)"": psutil.cpu_percent(percpu=True),
            ""Total CPU Usage (%)"": psutil.cpu_percent()
        }
        return cpu_info, True
    except Exception as e:
        return str(e), False

def get_memory_info():
    """"""Retrieve memory information.

    Returns:
        tuple: A tuple containing a dictionary with memory information and a boolean indicating success.
    """"""
    try:
        svmem = psutil.virtual_memory()
        memory_info = {
            ""Total Memory (bytes)"": svmem.total,
            ""Available Memory (bytes)"": svmem.available,
            ""Used Memory (bytes)"": svmem.used,
            ""Memory Usage (%)"": svmem.percent
        }
        return memory_info, True
    except Exception as e:
        return str(e), False

def get_disk_info():
    """"""Retrieve disk information.

    Returns:
        tuple: A tuple containing a list of dictionaries with disk information for each partition and a boolean indicating success.
    """"""
    try:
        partitions = psutil.disk_partitions()
        disk_info = []
        for partition in partitions:
            partition_info = {
                ""Device"": partition.device,
                ""Mountpoint"": partition.mountpoint,
                ""File System Type"": partition.fstype
            }
            try:
                partition_usage = psutil.disk_usage(partition.mountpoint)
                partition_info.update({
                    ""Total Size (bytes)"": partition_usage.total,
                    ""Used Size (bytes)"": partition_usage.used,
                    ""Free Size (bytes)"": partition_usage.free,
                    ""Usage (%)"": partition_usage.percent
                })
            except PermissionError:
                continue
            disk_info.append(partition_info)
        return disk_info, True
    except Exception as e:
        return str(e), False

def get_gpu_info():
    """"""Retrieve GPU information.

    Returns:
        tuple: A tuple containing a list of dictionaries with GPU information for each GPU and a boolean indicating success.
    """"""
    try:
        gpus = GPUtil.getGPUs()
        gpu_info = []
        for gpu in gpus:
            gpu_info.append({
                ""ID"": gpu.id,
                ""Name"": gpu.name,
                ""Driver Version"": gpu.driver,
                ""Total Memory (MB)"": gpu.memoryTotal,
                ""Free Memory (MB)"": gpu.memoryFree,
                ""Used Memory (MB)"": gpu.memoryUsed,
                ""GPU Load (%)"": gpu.load * 100,
                ""Temperature (C)"": gpu.temperature
            })
        return gpu_info, True
    except Exception as e:
        return str(e), False

def get_system_info():
    """"""Retrieve system information using 'systeminfo' command.

    Returns:
        tuple: A tuple containing the system information as a string and a boolean indicating success.
    """"""
    try:
        system_info = os.popen('systeminfo').read()
        return system_info, True
    except Exception as e:
        return str(e), False

def format_data_as_text(data):
    """"""Format system information data as plain text.

    Args:
        data (dict): A dictionary containing various system information.

    Returns:
        str: Formatted system information data as plain text.
    """"""
    formatted_data = []

    def add_section(title, info, success):
        formatted_data.append(f""{title}\n"" + ""=""*len(title) + ""\n"")
        if success:
            if isinstance(info, dict):
                for key, value in info.items():
                    formatted_data.append(f""{key}: {value}"")
            else:
                formatted_data.append(info)
        else:
            formatted_data.append(f""Error: {info}"")
        formatted_data.append(""\n"")

    add_section(""CPU Information"", *data[""cpu_info""])
    add_section(""Memory Information"", *data[""memory_info""])
    
    formatted_data.append(""Disk Information\n"" + ""=""*15 + ""\n"")
    for idx, disk in enumerate(*data[""disk_info""]):
        formatted_data.append(f""Disk {idx + 1}\n"" + ""-""*6)
        for key, value in disk.items():
            formatted_data.append(f""{key}: {value}"")
        formatted_data.append(""\n"")
    
    formatted_data.append(""GPU Information\n"" + ""=""*14 + ""\n"")
    for idx, gpu in enumerate(*data[""gpu_info""]):
        formatted_data.append(f""GPU {idx + 1}\n"" + ""-""*5)
        for key, value in gpu.items():
            formatted_data.append(f""{key}: {value}"")
        formatted_data.append(""\n"")
    
    add_section(""System Information"", *data[""system_info""])

    return ""\n"".join(formatted_data)

def main():
    """"""Main function to collect and save system information.""""""
    print(""\n"" + ""-"" * 60 + ""\n\t    Welcome To The System Info Collector\n\n[This may take some time to collect your system information]\n\n\t        Thank you for your patience\n"" + ""-"" * 60)
    
    data = {
        ""cpu_info"": get_cpu_info(),
        ""memory_info"": get_memory_info(),
        ""disk_info"": get_disk_info(),
        ""gpu_info"": get_gpu_info(),
        ""system_info"": get_system_info()
    }
    
    print(""\n\t       System information collected:\n"")
    for info_name, (_, success) in data.items():
        status = ""Success"" if success else ""Failed""
        print(f""\t       - {info_name.ljust(18)}: {status}"")

    # Check if the user wants to save the data
    save = input(""\nWould you like to save this info to a text file? (y/n): "").strip().lower()
    if save == 'y':
        file_name = ""system_info.txt""
        formatted_text = format_data_as_text(data)
        with open(file_name, ""w"", encoding='utf-8') as file:
            file.write(formatted_text)
        print(f""\nFILE: {{{file_name}}} has been saved in the cwd."")
        print(""\n"" + ""-"" * 60 + ""\n\t       Exiting Program...   Goodbye!\n"" + ""-"" * 60 + ""\n"")
    else:
        print(""\n"" + ""-"" * 60 + ""\n\t       Exiting Program...   Goodbye!\n"" + ""-"" * 60 + ""\n"")

if __name__ == ""__main__"":
    main()
"
zTULMcRA,üî•G2A.com Free Gift Card Guide MAY 2024 FIXüöÄ,ColtM4A2,GetText,Friday 24th of May 2024 06:25:45 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?1322190

Working as of:

25 May 2024"
iCFfaz6L,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºö‰∫ëÂè£‰ª§,miscln,JavaScript,Friday 24th of May 2024 06:04:59 PM CDT,"Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•‰∫ëÂè£‰ª§@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8veGlhb21pYW5hby5sYW56b3VtLmNvbS9pSW5OMzF5cTlqcGFcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==


https://t.me/israelpolice_bot
https://pastebin.com/cNec6hpN"
PFPNj5zX,uu,mrWhiskasss,Lua,Friday 24th of May 2024 06:02:40 PM CDT,"--[[

–°–æ–∑–¥–∞–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π SOCC company
Nightmare_Night

P.S. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –Ω–∞ —Å–∫–æ—Ä—É—é —Ä—É–∫—É
–ü—Ä–æ—Å—å–±–∞ —Ç–∞–ø–∫–∞–º–∏ –Ω–µ –∫–∏–¥–∞—Ç—å—Å—è

P.S.S. –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ö–æ—Å—Ç-–º–∞—à–∏–Ω—ã –±—ã–ª–∞ –≤–∑—è—Ç–∞ –∏–∑ API ECS

]]--

local component = require(""component"")
local term = require(""term"")
local event = require(""event"")
local fs = require(""filesystem"")

local gpu = component.gpu

local LOG_PATH = ""chat_log.txt""

-- –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
function stringToArray(text)
    t = {}
    text:gsub(""."",function(c) table.insert(t,c) end)
    return t
end

--–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, —Ö–æ—Å—Ç—è—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä –º–∞–π–Ω–∞
function getHostTime(timezone)
    timezone = timezone or 2
    local file = io.open(""/HostTime.tmp"", ""w"")
    file:write("""")
    file:close()
    local timeCorrection = timezone * 3600
    local lastModified = tonumber(string.sub(fs.lastModified(""/HostTime.tmp""), 1, -4)) + timeCorrection
    fs.remove(""/HostTime.tmp"")
    local year, month, day, hour, minute, second = os.date(""%Y"", lastModified), os.date(""%m"", lastModified), os.date(""%d"", lastModified), os.date(""%H"", lastModified), os.date(""%M"", lastModified), os.date(""%S"", lastModified)
    return tonumber(day), tonumber(month), tonumber(year), tonumber(hour), tonumber(minute), tonumber(second)
end

-- –ü–æ–ª—É—á–µ—Ç –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è, —Å—Ç–æ—è—â–µ–µ –Ω–∞ –•–æ—Å—Ç-–º–∞—à–∏–Ω–µ
function real_time()
    local time = {getHostTime(3)}
    local text = string.format(""%02d:%02d:%02d"", time[4], time[5], time[6])
    return text
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –æ–∫—Ä–∞—à–µ–Ω–Ω—ã–º
function isColored(text)
    for pos, i in pairs(stringToArray(text)) do
        if (i ~= ""&"") then
            if (i ~= "" "") then
                return false
            end
        else
            return true
        end
    end

    return true
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ª–∏ —á–∞—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
function isGlobal(text)
    for pos, i in pairs(stringToArray(text)) do
        if (i ~= ""!"") then
            if (i ~= "" "") then
                return false
            end
        else
            return true, pos
        end
    end
    return false
end

-- –î–µ–ª–∏—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ —á–∞—Å—Ç–∏
function split(str, pat)
    local t = {}
    local fpat = ""(.-)"" .. pat
    local last_end = 1
    local s, e, cap = str:find(fpat, 1)
    while s do
        if s ~= 1 or cap ~= """" then
            table.insert(t,cap)
        end
        last_end = e+1
        s, e, cap = str:find(fpat, last_end)
    end
    if last_end <= #str then
        cap = str:sub(last_end)
        table.insert(t, cap)
    end
    return t
end

-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç —à—Ä–∏—Ñ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ç–µ—Ä–Ω–∞
function setColor(num)
    if (num == ""0"") then
        gpu.setForeground(0x333333)
    end

    if (num == ""1"") then
        gpu.setForeground(0x000099)
    end

    if (num == ""2"") then
        gpu.setForeground(0x006600)
    end

    if (num == ""3"") then
        gpu.setForeground(0x006666)
    end

    if (num == ""4"") then
        gpu.setForeground(0x660000)
    end

    if (num == ""5"") then
        gpu.setForeground(0x660066)
    end

    if (num == ""6"") then
        gpu.setForeground(0xFF8000)
    end

    if (num == ""7"") then
        gpu.setForeground(0xA0A0A0)
    end

    if (num == ""8"") then
        gpu.setForeground(0x404040)
    end

    if (num == ""9"") then
        gpu.setForeground(0x3399FF)
    end

    if (num == ""a"") then
        gpu.setForeground(0x99FF33)
    end

    if (num == ""b"") then
        gpu.setForeground(0x00FFFF)
    end

    if (num == ""c"") then
        gpu.setForeground(0xFF3333)
    end

    if (num == ""d"") then
        gpu.setForeground(0xFF00FF)
    end

    if (num == ""e"") then
        gpu.setForeground(0xFFFF00)
    end

    if (num == ""f"") then
        gpu.setForeground(0xFFFFFF)
    end
end

-- –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
function writeMessage(text)
    local t = split(text, ""&"")
    for pos, i in pairs(t) do
        if (pos == 1 and not isColored(text)) then
            io.write(i)
        else
            setColor(string.sub(i, 1, 1))
            io.write(string.sub(i, 2))
        end
    end
end

-- –í—ã–≤–æ–¥–∏—Ç –æ—Å—Ç–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
function message(nick, msg, isGlobal, pos)
    local type = """"
    if (isGlobal) then msg = string.sub(msg, pos + 1) type = ""G"" else type = ""L"" end

    local file = fs.open(LOG_PATH, ""a"")
    file:write(""["" .. real_time() .. ""] ["" .. type .. ""] "" .. nick .. "": "" .. msg .. ""\n"")
    file:close()

    gpu.setForeground(0x00FFFF)
    io.write(""["" .. real_time() .. ""] "")
    gpu.setForeground(0xFFFFFF)
    if (type == ""G"") then
        gpu.setForeground(0xFF9933)
    else
        gpu.setForeground(0xFFFFFF)
    end
    io.write(""["" .. type .. ""] "")
    gpu.setForeground(0x00FF00)
    io.write(nick)
    gpu.setForeground(0xFFFFFF)
    io.write("": "")
    writeMessage(msg, l)
    io.write(""\n"")
end
   print(""–û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è..."")
 
    local _, add, nick, msg = event.pull(""chat_message"") 
    term.clear()
    local type, pos = isGlobal(msg)
    message(nick, msg, type, pos)
 
 
    while true do
 
      local _, add, nick, msg = event.pull(""chat_message"") 
      local type, pos = isGlobal(msg)
      message(nick, msg, type, pos)
 
    end"
