id,title,username,language,date,content
rnxMZ5Dc,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Saturday 18th of May 2024 12:20:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_773265.pdf

Working as of:
18 May 2024"
G3Ytj4me,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Saturday 18th of May 2024 12:19:36 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
18 May 2024"
ctGLERH3,QuickSelect,nathanwailes,Python,Saturday 18th of May 2024 12:18:22 PM CDT,"import random

def quickselect(arr, k):
    """"""
    Returns the k-th smallest element of list within arr.
    """"""
    if len(arr) == 1:
        return arr[0]

    pivot = random.choice(arr)

    lows = [el for el in arr if el < pivot]
    highs = [el for el in arr if el > pivot]
    pivots = [el for el in arr if el == pivot]

    if k < len(lows):
        return quickselect(lows, k)
    elif k < len(lows) + len(pivots):
        return pivots[0]
    else:
        return quickselect(highs, k - len(lows) - len(pivots))

# Example usage:
arr = [3, 2, 1, 5, 4]
k = 2  # looking for the 3rd smallest element, index 2
print(quickselect(arr, k))  # Output: 3
"
Yx4enQwb,Radix sort,nathanwailes,Python,Saturday 18th of May 2024 12:17:26 PM CDT,"def counting_sort(arr, exp):
    n = len(arr)
    output = [0] * n
    count = [0] * 10

    for i in range(n):
        index = arr[i] // exp
        count[index % 10] += 1

    for i in range(1, 10):
        count[i] += count[i - 1]

    i = n - 1
    while i >= 0:
        index = arr[i] // exp
        output[count[index % 10] - 1] = arr[i]
        count[index % 10] -= 1
        i -= 1

    for i in range(n):
        arr[i] = output[i]

def radix_sort(arr):
    max1 = max(arr)
    exp = 1
    while max1 // exp > 0:
        counting_sort(arr, exp)
        exp *= 10
"
X1JaNb6C,Heap sort,nathanwailes,Python,Saturday 18th of May 2024 12:17:03 PM CDT,"def heap_sort(arr):
    def heapify(arr, n, i):
        largest = i
        l = 2 * i + 1
        r = 2 * i + 2

        if l < n and arr[largest] < arr[l]:
            largest = l

        if r < n and arr[largest] < arr[r]:
            largest = r

        if largest != i:
            arr[i], arr[largest] = arr[largest], arr[i]
            heapify(arr, n, largest)

    n = len(arr)

    for i in range(n//2 - 1, -1, -1):
        heapify(arr, n, i)

    for i in range(n-1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]
        heapify(arr, i, 0)
"
x02GMp0d,QuickSort,nathanwailes,Python,Saturday 18th of May 2024 12:16:37 PM CDT,"def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + middle + quick_sort(right)
"
bpp8kais,Merge sort,nathanwailes,Python,Saturday 18th of May 2024 12:16:10 PM CDT,"def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr) // 2
        L = arr[:mid]
        R = arr[mid:]

        merge_sort(L)
        merge_sort(R)

        i = j = k = 0
        while i < len(L) and j < len(R):
            if L[i] < R[j]:
                arr[k] = L[i]
                i += 1
            else:
                arr[k] = R[j]
                j += 1
            k += 1

        while i < len(L):
            arr[k] = L[i]
            i += 1
            k += 1

        while j < len(R):
            arr[k] = R[j]
            j += 1
            k += 1
"
0TXwGFpQ,Insertion sort,nathanwailes,Python,Saturday 18th of May 2024 12:15:44 PM CDT,"def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
"
wSkJABDJ,Selection sort,nathanwailes,Python,Saturday 18th of May 2024 12:15:14 PM CDT,"def selection_sort(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[min_idx]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
"
2Ugmw439,Bubble sort,nathanwailes,Python,Saturday 18th of May 2024 12:14:43 PM CDT,"def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
"
mvqCednj,Partition algorithm,nathanwailes,Python,Saturday 18th of May 2024 12:12:40 PM CDT,""""""" Below is the partition algorithm commonly used in the QuickSort and QuickSelect algorithms. This function partitions the array in place and returns the index where the pivot element is placed. Elements smaller than or equal to the pivot are placed on the left, and elements greater than the pivot are placed on the right.
""""""

def partition(arr, l=None, r=None):
    if l is None:
        l, r = 0, len(arr)-1
    pivot_starting_index = r
    pivot_value = arr[pivot_starting_index]
    pivot_final_index = l
    for j in range(l, r):
        if arr[j] <= pivot_value:
            arr[pivot_final_index], arr[j] = arr[j], arr[pivot_final_index]
            pivot_final_index += 1
    arr[pivot_final_index], arr[pivot_starting_index] = arr[pivot_starting_index], arr[pivot_final_index]
    return pivot_final_index

# Example usage
if __name__ == ""__main__"":
    arr = [10, 7, 8, 9, 1, 5]
    print(partition(arr), arr)"
G4Krz5HW,Untitled,artur99,MySQL,Saturday 18th of May 2024 11:40:51 AM CDT,"CREATE TABLE fructe (
  id INTEGER PRIMARY KEY,
  list TEXT NOT NULL
);
INSERT INTO fructe VALUES (1, 'mere,pere,portocale');
INSERT INTO fructe VALUES (2, 'banane,rosii,mere');

DELIMITER //

CREATE PROCEDURE UpdateList()
BEGIN
  DECLARE done INT DEFAULT 0;
  DECLARE new_list TEXT;
  DECLARE current_id INT;
  DECLARE current_list TEXT;

  DECLARE cur CURSOR FOR SELECT id, list FROM fructe;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

  OPEN cur;
  read_loop: LOOP
    FETCH cur INTO current_id, current_list;
    IF done THEN
      LEAVE read_loop;
    END IF;

    SET new_list = '';
    
    WHILE LOCATE(',', current_list) > 0 DO
      SET new_list = CONCAT(new_list, SUBSTRING_INDEX(current_list, ',', 1), '1,');
      SET current_list = SUBSTRING(current_list FROM LOCATE(',', current_list) + 1);
    END WHILE;

    SET new_list = CONCAT(new_list, current_list, '1');
    
    UPDATE fructe SET list = new_list WHERE id = current_id;
  END LOOP;

  CLOSE cur;
END //

DELIMITER ;


CALL UpdateList();


SELECT * FROM fructe;
"
c0z90xTa,Untitled,shizaero,C++,Saturday 18th of May 2024 11:26:58 AM CDT,"#include <iostream>
using namespace std;

long long Fact(int n) {
    if (n == 1 or n == 0) return 1;
    else if (n < 0) return 0;
    else return n*Fact(n-1);
}

int main()
{
    std::cout << Fact(6);
}

"
nX4Dfpd5,webinar-exam-review-2023-05-18,jspill,Python,Saturday 18th of May 2024 11:24:05 AM CDT,"# Exam Review 2024 May 18

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# get to know the Prac Tests, Ch 33 and 34... more than the Pre

# Use Submit Mode and get them to 100%!!!
# PAY ATTENTION to the unit tests!
# ... then UNIT TEST more! Unit test, unit test, unit test!

# When you've gotten the Ch 33-34 Prac Tests to 100, go back and do each again.
# This time, try to think of 2-3 more unit tests that could be run on each question.

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files

# Comp 1: Basic syntax and knowledge: operators, data types, etc

# Data Types/Classes
# int
# float
# bool # True, False
# str # """"
# list # [ ]
# dict # {key: value}
# tuple # ( ) immutable, Python sees a, b, c as (a,b,c) --> return x,y --> return (x,y)
# set # { } no duplicate values, no order --> no indices, can't slice it, can't sort it, can't reverse
# range # range() container of consecutive numbers
# file # open()... f.read(), f.readlines(), f.write()

# # Operators
# = # assigns a value
# == # asking a question... result in Boolean value
# +
# -
# *
# /
# % modulo... whole number remainder... ""how many things didn't fit since the last even division?""
# // floor division... last even division
# <
# >
# <=
# >=
# += # x += 1 ... x = x + 1
# -=
# ** # similar to pow() and math.pow()
# !=
# # keywords
# in # membership check... if x in myList
# not # if not x in myList
# and
# or # any one True would cause the combo to be True... limit OR to 2-3 conditions

# Comp 2
# Control Flow! The how and when of our programs
# IF statements... if, if/else, if/elif, if/elif/else
# LOOPS
# WHILE - a general purpose loop, an IF that repeats
# FOR - repeating actions a known number of times --> once for everything in the container
# FOR in Python is explicitly about looping over a container
# # Check out my For Loops webinar in The Gotchas
# for ___ in _someContainer_:
# for item in myList:
# for char in myStr:
# for key in myDict: # loop var holds the key, myDict[key] holds the value
# for n in range(0, someNum): # if you thought of range(5) as being [0, 1, 2, 3, 4]
# for i in range(0, len(myList)):
# for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing a function vs calling
# modular... a function has ONE specific job
# print/output or return (or maybe something else)
# parameters are special variables for holding stuff coming into the function
# parameters vs arguments

# def someFunction(x, y):
#     return x + y
#
# if __name__ == ""__main__"": # is this script the one that's running?
#     input1 = int(input())
#     input2 = int(input())
#     myNum = someFunction(input1, input2)
#     print(myNum)

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# CodingBat also has good function-based Python questions:
# https://codingbat.com/python

# Built-In Functions
# input()
# print()
# len()
# min()
# max()
# sum()
# str()
# list()
# dict()
# set()
# range()
# enumerate()
# round() # cousins math.ceil(), math.floor()
# type() # myVar = ""4.3"", print(type(myVar).__name__) --> str
# pow()
# abs() # cousin math.fabs()
# open()
# help() # # help(str), help(str.isspace)
# dir() # print(dir(str))

# STRING
# be able to refer by index, and to slice
# myStr = ""abcdef""
# # mySlice[start:stop:step]
# revStr = myStr[::-1]
# print(revStr)

# KNOW YOUR WHITESPACE
# "" "" # space from spacebar
# # a lot of other Unicode spaces
# ""\n"" # new line return
# ""\t"" # tab
# ""\r"" # carriage return

# unless otherwise stated... printed output should end a new line return...
# 99% of the time it already does
# print(""hey"") --> print(""hey"", end=""\n"")
# we only need to change that when...
#1 ... this specific says to do something else
#2 ... you yourself overrode the end parameter of print() as the last thing you did... just call print() again after the loop

# STRING METHODS
# myStr.format() # ""Stuff I want to put into this string like {} and {:.2f}"".format(var1, var2)
# myStr.strip() # input().strip()
# myStr.split() # returns a list of smaller strings
# myStr.join(listOfStrings) # "" "".join(listOfStrings)
# myStr.replace(subStr, newStr) # ""remove"" myStr = myStr.replace(subStr, """")
# myStr.index(subStr) # return int index where found, or raise error
# myStr.find(subStr) # return int index where found, or return -1
# myStr.count(subStr) # returns int of times subStr occurs
# case: lower(), upper(), title(), capitalize()
# is/Boolean: islower(), isupper(), isspace(), isalpha(), isalnum(), isnumeric(), isdigit()
# myStr.startswith(subStr), myStr.endswith(subStr)

# LISTS
# be able to refer by index and to slice
# LIST METHODS
# # +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i) # pop() by index
# myList.remove(item) # remove() by value
# myList.clear()
# # other
# myList.sort()
# myList.reverse()
# myList.count(item) # returns int num of occurrences
# myList.index(item)
# myList.copy()

# DICT
# use the key like an index []... then you don't really need DICT methods
# myDict[key] # get the value for that key
# myDict[key] = value # assigns new value to that key

# membership check
# if ___ in myDict: # looking at keys

# DICT METHODS
# myDict.keys() # all dict keys in one set-like object
# myDict.values() # all dict values in one object

# MODULES
# math and csv

# MATH MODULES
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x)
# math.floor(x)
# math.sqrt(x)
# math.pow(x, y)
# math.fabs(x)
# math.pi
# math.e
#
# # PARTIAL IMPORT
# from math import ceil # just ceil() not math.ceil()
# from math import sqrt, fabs # just sqrt(), fabs()
# from math import * # factorial(), floor(), etc no math.
#
# # ALIAS IMPORT
# import math as m # m.floor(), m.ceil()

# FILES
# modes: r, w, a

# READ MODE
# f = open(filename)
with open(""plain_text_file.txt"", ""r"") as f:
    # f.read() # returns the whole file as one big string
    # f.readlines() # returns a list of strings, each line is one string
    # f.write(someStr) # writes a single str arg to file
    contents = f.readlines()
# print(contents)

# reading with csv module
import csv
# csv.reader()

with open(""mock_data.csv"", ""r"") as f1: # mockaroo.com
    # for row in csv.reader(f1):
    contents = list(csv.reader(f1)) # csv.reader(f1, delimiter=""\t"") for .tsv
# print(contents)
# for row in contents[:10]:
#     print(row)

# WRITE MODE
# write out a new file where all the last names begin with ""Mc""
with open(""output_data38.csv"", ""w"") as f2:
    for row in contents:
        # ['5', 'Carling', 'Baude', 'cbaude4@liveinternet.ru', 'Male', '91.198.36.54']
        # last name is row[2]
        if row[2].startswith(""Mc""):
            f2.write("","".join(row) + ""\n"")

# APPEND MODE
# reading it to see...
# with open(""append_to_this.txt"") as f3:
#     print(f3.readlines())
with open(""append_to_this.txt"", ""a"") as f3:
    f3.write(""\nPippin"")



"
Nhqjct7n,Ejercicio 1,due204,Python,Saturday 18th of May 2024 11:10:52 AM CDT,"# 1.a
def imprimir_cantidad_vocales(vocales):
    contador = 0
    for i in vocales:
        if i in (""a"", ""e"", ""i"", ""o"", ""u""):
            contador = contador + 1
    return contador


#1.b
def lista_palabras():
    finaliza = """"
    global lista_de_palabras
    lista_de_palabras = []
    while finaliza != ""fin"":
        palabra = input(""Ingrese palabra: "")
        if palabra == ""fin"":
            print(""Saliendo"")
            finaliza = palabra
        else:
            print(f""Agregado {palabra} a la lista."")
            lista_de_palabras.append([palabra, imprimir_cantidad_vocales(palabra)])
    return lista_de_palabras


#1.c
def mayor_de_tres_vocales():
    lista_mayor_de_tres = []
    for i in lista_palabras():
        if imprimir_cantidad_vocales(i[0]) >= 3:
            lista_mayor_de_tres.append(i)
    return lista_mayor_de_tres


#1.d
print(f""Lista mayor de tres vocales: {mayor_de_tres_vocales()}"")

"
Qvgf26nk,set multiset,LEGEND2004,C++,Saturday 18th of May 2024 10:57:18 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define pb push_back
const int mod = 1e9 + 7;

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int n;
    cin >> n;
    multiset<int> ms;
    for(int i = 0; i < n; i++){
        int x;
        cin >> x;
        ms.insert(x);
    }
    for(int i = 1; i <= 5; i++){
        cout << i << ""-den "" << ms.count(i) << "" dene var\n"";
    }
    //ms.erase(4);
    ms.erase(ms.find(4));
    cout << '\n';
    for(int i = 1; i <= 5; i++){
        cout << i << ""-den "" << ms.count(i) << "" dene var\n"";
    }
    /*
    multiset<int> ms;
    ms.size(); // olcusu
    ms.empty(); // bosdurmu?
    ms.insert(x); // elave ele amma sorted
    ms.count(x); // x-in sayi
    ms.erase(x); // butun x leri sil
    ms.erase(ms.find(x)); // 1 dene x sil

    set<int> s;;
    
    */
    /*
    
    2
    4
    
    5
    3 2 4 5 1

    {1 ,

    2 , 3 , 4 , 5}

    log(1000) = 10
    2^10 = 1024~1000

    2^5 * 2^5 = 2^10 = 32 * 32 = 1024
    2^10 * 2^10 = 2^20 = 10^6
    log(10^3) = 10
    log(10^12) = 40
    log(10^9) = 30
    log(10^18) = 60

    */

}
"
60Vx0k4z,sdgseg,gadungw71,PHP,Saturday 18th of May 2024 10:28:37 AM CDT,"‚Ä¢	https://github.com/wa-tch-free-Feeeal
‚Ä¢	https://github.com/planet-oftheapesfullhdq
‚Ä¢	https://github.com/pC-Boomy2024
‚Ä¢	https://github.com/ok-Tenant-thaidub
‚Ä¢	https://www.artstation.com/artwork/Alzd4X
‚Ä¢	https://www.artstation.com/watchkingdomoftheplanetoftheapes4/profile
‚Ä¢	https://www.artstation.com/artwork/NyXWVJ
‚Ä¢	https://www.artstation.com/watch4myboothaisub7/profile
‚Ä¢	https://www.artstation.com/artwork/VJPORg
‚Ä¢	https://www.artstation.com/watchthetenanthdthailan5/profile
‚Ä¢	https://www.imdb.com/list/ls545433253/
‚Ä¢	https://www.kooapp.com/koo/guest_P68S8O/4b9495c4-465f-4741-8e37-a6af67d5aa80
‚Ä¢	https://open.firstory.me/user/clwc8cpr91bdy01xi8lre5yl2
‚Ä¢	https://open.firstory.me/story/clwc8d6n902hf01uqc2dz7666
‚Ä¢	https://wandering.flarum.cloud/d/63466-abibuledd
‚Ä¢	https://hiuderyy.hashnode.dev/boeleudd
‚Ä¢	https://www.bankier.pl/forum/temat_oleggg,66386211.html
‚Ä¢	https://medium.com/@styller98/%E0%B8%94%E0%B8%B9-%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%87-%E0%B8%AD%E0%B8%B2%E0%B8%93%E0%B8%B2%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%A3%E0%B9%81%E0%B8%AB%E0%B9%88%E0%B8%87%E0%B8%9E%E0%B8%B4%E0%B8%A0%E0%B8%9E%E0%B8%A7%E0%B8%B2%E0%B8%99%E0%B8%A3-2024-hd-%E0%B9%80%E0%B8%95%E0%B9%87%E0%B8%A1%E0%B9%80%E0%B8%A3%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%87-%E0%B8%9E%E0%B8%B2%E0%B8%81%E0%B8%A2%E0%B9%8C%E0%B9%84%E0%B8%97%E0%B8%A2-full-4k-4bbc186f1d71
‚Ä¢	https://www.onfeetnation.com/profiles/blogs/sdgfsegseg
‚Ä¢	https://hackmd.io/@rerewilli6/B1CISrLX0
‚Ä¢	https://demo.hedgedoc.org/s/C8bZ7LTBK
‚Ä¢	https://rentry.co/bekr3t3v
‚Ä¢	https://paste.ee/p/lm6hv
‚Ä¢	https://yamcode.com/dfgsgs-731
‚Ä¢	https://lifeisfeudal.com/Discussions/question/sfdsevnt
‚Ä¢	https://start.me/w/arxkoX
‚Ä¢	https://plaza.rakuten.co.jp/aryasantosso/diary/202405190000/
‚Ä¢	https://telegra.ph/SGSEGS-05-18
‚Ä¢	https://muckrack.com/safsef-sefesg/bio
‚Ä¢	https://profile.hatena.ne.jp/sfsefgseg/
‚Ä¢	https://www.bitsdujour.com/profiles/rZnwuR
‚Ä¢	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/763267/Default.aspx
‚Ä¢	https://www.fitlynk.com/1716046033F671919
"
uBym9JGY,ËçîÊûùÈÖçÊñπÔºçÂ∞áÁü≥È†≠ÊñπÂ°äÈõªÊìäÂæåËΩâÊèõÊàêÈªëÊõúÁü≥,YTMango,JavaScript,Saturday 18th of May 2024 10:27:18 AM CDT,"ServerEvents.recipes((event) => {
  // ÂØ¶Èöõ‰∏äÁî®‰æÜÂ∞áÁü≥È†≠ËΩâÊèõÊàêÈªëÊõúÁü≥ÁöÑÈÖçÊñπ
  event
    .custom({
      type: ""lychee:lightning_channeling"",
      hide_in_viewer: true,
      post: {
        type: ""if"",
        contextual: {
          type: ""location"",
          offsetY: -1,
          predicate: {
            block: {
              blocks: [""minecraft:stone""],
            },
          },
        },
        then: {
          type: ""place"",
          offsetY: -1,
          block: ""minecraft:obsidian"",
        },
        else: { // ÈñÉÈõªÊâìÂú®ÈÅøÈõ∑Èáù‰∏äÊôÇÂØ¶Èöõ‰∏äÊòØÂú®‰∏äÈù¢‰∏ÄÊ†ºÁî¢ÁîüÂØ¶È´î
          type: ""if"",
          contextual: {
            type: ""location"",
            offsetY: -2,
            predicate: {
              block: {
                blocks: [""minecraft:stone""],
              },
            },
          },
          then: {
            type: ""place"",
            offsetY: -2,
            block: ""minecraft:obsidian"",
          },
        },
      },
    })
    .id(""kubejs:lychee-lightning_channeling/change_stone_to_obsidian_actually"");

  // ÂÉÖÁî®‰æÜÂú® JEI/REI ‰∏≠ÂÆåÊï¥È°ØÁ§∫Áü≥È†≠Ôºå‰∏çÊúÉÊúâÂØ¶Èöõ‰ΩúÁî®ÁöÑÈÖçÊñπ
  event
    .custom({
      type: ""lychee:lightning_channeling"",
      ghost: true,
      item_in: [{ item: ""stone"" }],
      comment: ""Â∞áÁü≥È†≠ÈõªÊìäÂæåËΩâÊèõÊàêÈªëÊõúÁü≥"",
      post: {
        type: ""place"",
        offsetY: -1,
        block: ""minecraft:obsidian"",
      },
    })
    .id(""kubejs:lychee-lightning_channeling/change_stone_to_obsidian-view_only"");
});"
KN9BmQ6J,yes ye har!!! snowybot robo manual,coinwalk,JavaScript,Saturday 18th of May 2024 10:01:38 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/2400).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var hundreds = (prefit*100);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = 100
var snowy = 0;
var snowie = elderly
var great = elderly
var bolux = false;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(snowy-(prefit*0.5)))&&(great<(snowy+(prefit*0.5)))){
bolux = true;
}else{
bolux = false;
}
if ((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(!bolux)){
    beast = beast*2;
    snowy = parseFloat(great);
}
if (((great/32)<=(beast))&&((great-beast)>hundreds)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/32)<=(beast))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/32)<=(beast))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&((great-beast)<hundreds)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&((great-beast)<hundreds)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&((great-beast)<hundreds)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&((great-beast)>hundreds)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
RXgnjrru,127.0.0.1 network linux,coinwalk,JavaScript,Saturday 18th of May 2024 09:59:34 AM CDT,"digiexplorer.info, www.ing.com.au, www.coinspot.com.au, *.hcaptcha.com, cdn1.waterfox.net, www.waterfox.net, partner.googleadservices.com, code.jquery.com, www.googletagmanager.com, cdn.jsdelivr.net, just-dice.com, altquick.com, freebitcoins.com, newassets.hcaptcha.com, googleads.g.doubleclick.net, pagead2.googlesyndication.com, tpc.googlesyndication.com, www.google.com, hcaptcha.com, coinspot.com.au, ing.com.au, pastebin.com, challenges.cloudflare.com, s0.2mdn.net, fundingchoicesmessages.google.com, match.adsrvr.org, c1.adform.net, gtrace.mediago.io, analytics.pangle-ads.com, a.tribalfusion.com, cm.g.doubleclick.net, doubleclick.net, fonts.gstatic.com, x.bidswitch.net, dis.criteo.com, cms.quantserve.com, www.googleadservices.com, adform.net, analytics.google.com, www.gstatic.com, www.adsensecustomsearchads.com"
0f7Z7aD0,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:52:22 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int a, b;
    cin >> a >> b;

    if(a > b or b % 2 == 1 or a % 100 == 0) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }
    return 0;
}"
Qk58uttu,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:46:27 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int broj;
    cin >> broj;

    if(broj % 2 == 0 or  broj > 100) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }    

    return 0;
}"
dwRUf70K,Adopt Me Trade Stealerüòà,Bacon_Script,Lua,Saturday 18th of May 2024 09:39:44 AM CDT,"loadstring(game:HttpGet(""https://dpaste.com/3Z2JRE8EP.txt""))()"
rpCyqS8A,MatrixMul-OpenCL-CPU,cataleena,C++,Saturday 18th of May 2024 09:35:46 AM CDT,"#include <iostream>
#include <vector>
#include <fstream>
#include <CL/cl.hpp>
#include <chrono>

#define N 10000 // Matrix size

// Function to initialize matrices A and B
void initializeMatrices(std::vector<float>& A, std::vector<float>& B) {
    for (int i = 0; i < N * N; ++i) {
        A[i] = 1.0f;
        B[i] = 2.0f;
    }
}

int main() {
    // Initialize OpenCL context, command queue, and program
    cl::Platform platform = cl::Platform::getDefault();
    cl::Device device = cl::Device::getDefault();
    cl::Context context(device);
    cl::CommandQueue queue(context, device);

    // Load OpenCL source code from file
    std::ifstream sourceFile(""matrix_multiplication.cl"");
    std::string sourceCode(std::istreambuf_iterator<char>(sourceFile), (std::istreambuf_iterator<char>()));

    // Create program from source code
    cl::Program::Sources sources(1, std::make_pair(sourceCode.c_str(), sourceCode.length()));
    cl::Program program(context, sources);

    // Build program for the device
    program.build();

    // Define input matrices A and B
    std::vector<float> A(N * N);
    std::vector<float> B(N * N);
    initializeMatrices(A, B);

    // Allocate memory for output matrix C
    std::vector<float> C(N * N, 0.0f);

    // Create buffer objects for input and output matrices
    cl::Buffer bufferA(context, CL_MEM_READ_ONLY | CL_MEM_COPY_HOST_PTR, sizeof(float) * A.size(), A.data());
    cl::Buffer bufferB(context, CL_MEM_READ_ONLY | CL_MEM_COPY_HOST_PTR, sizeof(float) * B.size(), B.data());
    cl::Buffer bufferC(context, CL_MEM_WRITE_ONLY, sizeof(float) * C.size());

    // Create kernel object
    cl::Kernel kernel(program, ""matrixMultiplication"");
    kernel.setArg(0, bufferA);
    kernel.setArg(1, bufferB);
    kernel.setArg(2, bufferC);
    kernel.setArg(3, N);

    // Execute kernel on CPU
    auto startCPU = std::chrono::high_resolution_clock::now();
    queue.enqueueNDRangeKernel(kernel, cl::NullRange, cl::NDRange(N, N));
    queue.finish();
    auto stopCPU = std::chrono::high_resolution_clock::now();
    auto durationCPU = std::chrono::duration_cast<std::chrono::milliseconds>(stopCPU - startCPU);

    // Read output matrix C from device to host
    queue.enqueueReadBuffer(bufferC, CL_TRUE, 0, sizeof(float) * C.size(), C.data());

    // Measure performance on CPU
    double tflopsCPU = (2.0 * N * N * N) / (static_cast<double>(durationCPU.count()) * 1e6);

    std::cout << ""Performance on CPU: "" << tflopsCPU << "" TFLOPS"" << std::endl;

    return 0;
}
"
u6bH7A3M,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:35:31 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int broj;
    cin >> broj;

    if(broj >= 0 and broj <= 9) {
        cout << ""ednocifren"" << endl;
    }
    if(broj >= 10 and broj <= 99) {
        cout << ""dvocifren"" << endl;
    }
    if(broj > 99) {
        cout << ""pogolem od 99"" << endl;
    }
    

    return 0;
}"
YMyWXjT3,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:34:11 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int broj;
    cin >> broj;

    if(broj >= 0 and broj <= 9) {
        cout << ""ednocifren"" << endl;
    }
    else if(broj >= 10 and broj <= 99) {
        cout << ""dvocifren"" << endl;
    }
    else {
        cout << ""pogolem od  99"" << endl;
    }

    

    return 0;
}"
ec3ziq3i,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:20:01 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int a, b;
    cin >> a >> b;
    
    if(a < b) {
        cout << a << "" e pomalo od "" << b << endl;
    }
    else {
        cout << b << "" e pomalo ili ednakvo od "" << a << endl;
    }



    return 0;
}"
ZfySftka,Adopt me testing toturial,Bacon_Script,Lua,Saturday 18th of May 2024 09:07:33 AM CDT,"loadstring(game:HttpGet('https://raw.githubusercontent.com/Ps99-leakscript/Adopt-Me-/main/obf_vBIOE4S149xLDwZ7N33juLyl67CLY16tQ31AQHOXw59RLf19eT4juybIPtZvefqQ.lua.txt'))()
"
BbEXDvw5,Game Tebak Warna,afrizalwahyuadi66,Python,Saturday 18th of May 2024 07:54:26 AM CDT,"import tkinter as tk
from tkinter import messagebox
import random

class MastermindGame:
    def __init__(self, master):
        # Inisialisasi permainan dengan jendela utama (master)
        self.master = master
        self.master.title(""Mastermind Game"")
        self.master.geometry(""400x350"")

        # Dictionary untuk memetakan nomor warna ke namanya
        self.colors = {
            1: ""Merah"", 2: ""Putih"", 3: ""Hitam"", 4: ""Kuning"",
            5: ""Hijau"", 6: ""Biru"", 7: ""Coklat"", 8: ""Ungu"",
            9: ""Pink"", 10: ""Cyan""
        }

        # Menghasilkan kode rahasia acak dengan 4 warna
        self.secret_code = [random.randint(1, 10) for _ in range(4)]
        
        # Jumlah percobaan yang diperbolehkan dan nilai percobaan saat ini
        self.attempts_left = 5
        self.current_attempt = [tk.IntVar(), tk.IntVar(), tk.IntVar(), tk.IntVar()]

        # Menyiapkan GUI
        self.create_gui()

    def create_gui(self):
        # Membuat komponen GUI permainan
        self.create_guess_row()
        self.create_input_rows()
        self.create_feedback_area()

    def create_guess_row(self):
        # Membuat baris tempat warna yang ditebak akan ditampilkan
        guess_frame = tk.Frame(self.master)
        guess_frame.pack(pady=10)

        # Label untuk mewakili setiap warna yang ditebak
        self.guess_labels = []
        for i in range(4):
            label = tk.Label(guess_frame, text=""?"", width=5, height=2, bg=""lightgray"", relief=""solid"")
            self.guess_labels.append(label)
            label.grid(row=0, column=i, padx=5)

    def create_input_rows(self):
        # Membuat baris untuk input pengguna (menebak)
        input_frame = tk.Frame(self.master)
        input_frame.pack(pady=5)

        # Widget Entry untuk memasukkan warna, dan tombol untuk mengirimkan tebakan
        for i in range(4):
            entry = tk.Entry(input_frame, textvariable=self.current_attempt[i], width=5)
            entry.grid(row=0, column=i, padx=5)

        guess_button = tk.Button(input_frame, text=""Tebak"", command=self.check_guess)
        guess_button.grid(row=0, column=4, padx=5)

    def create_feedback_area(self):
        # Membuat area untuk menampilkan umpan balik, kesempatan tersisa, dan informasi warna
        feedback_frame = tk.Frame(self.master)
        feedback_frame.pack(pady=10)

        # Label untuk umpan balik, kesempatan tersisa, dan informasi warna
        self.feedback_label = tk.Label(feedback_frame, text=""Umpan Balik: "")
        self.feedback_label.pack()

        self.chances_label = tk.Label(feedback_frame, text=f""Kesempatan: {self.attempts_left}"")
        self.chances_label.pack()

        info_label_1 = tk.Label(feedback_frame, text=""1=Merah, 2=Putih, 3=Hitam, 4=Kuning, 5=Hijau,"")
        info_label_1.pack()

        info_label_2 = tk.Label(feedback_frame, text=""6=Biru, 7=Coklat, 8=Ungu, 9=Pink, 10=Cyan"")
        info_label_2.pack()

    def check_guess(self):
        # Memeriksa tebakan pengguna terhadap kode rahasia
        guess = [var.get() for var in self.current_attempt]
        correct_positions = sum([1 for i in range(4) if guess[i] == self.secret_code[i]])
        
        # Memeriksa apakah semua posisi benar, jika ya, akhiri permainan
        if correct_positions == 4:
            self.end_game(""100% benar. Anda berhasil menebak semua warna."")
        else:
            # Mengurangi percobaan dan memperbarui GUI
            self.attempts_left -= 1
            if self.attempts_left == 0:
                # Jika tidak ada percobaan lagi, akhiri permainan
                self.end_game(""Anda kehabisan kesempatan. Game direset."")
            else:
                # Memperbarui warna yang ditebak, umpan balik, dan kesempatan tersisa
                self.update_guess_labels(guess, correct_positions)
                self.update_feedback(correct_positions)
                self.update_chances()

    def update_guess_labels(self, guess, correct_positions):
        # Memperbarui warna yang ditebak berdasarkan posisi yang benar
        for i, label in enumerate(self.guess_labels):
            if guess[i] == self.secret_code[i]:
                label.config(text=self.colors[guess[i]], bg=""lightgray"")
            elif guess[i] in self.secret_code:
                label.config(text=""?"", bg=""white"")
            else:
                label.config(text=""?"", bg=""lightgray"")

    def update_feedback(self, correct_positions):
        # Memperbarui label umpan balik berdasarkan jumlah posisi yang benar
        percentage = (correct_positions / 4) * 100
        self.feedback_label.config(text=f""{correct_positions} warna benar. Coba lagi!"")

    def update_chances(self):
        # Memperbarui label kesempatan tersisa
        self.chances_label.config(text=f""Kesempatan: {self.attempts_left}"")

    def end_game(self, message):
        # Mengakhiri permainan dan menampilkan kotak pesan dengan kode yang benar
        correct_code = [self.colors[color] for color in self.secret_code]
        messagebox.showinfo(""Game Over"", f""{message}\nJawaban yang benar: {correct_code}"")
        self.reset_game()

    def reset_game(self):
        # Mereset permainan dengan menghasilkan kode rahasia baru dan mereset percobaan
        self.secret_code = [random.randint(1, 10) for _ in range(4)]
        self.attempts_left = 5

        # Mereset elemen GUI
        for label in self.guess_labels:
            label.config(text=""?"", bg=""lightgray"")

        self.feedback_label.config(text=""Umpan Balik: "")
        self.chances_label.config(text=f""Kesempatan: {self.attempts_left}"")

        for var in self.current_attempt:
            var.set(0)

if __name__ == ""__main__"":
    # Membuat jendela utama dan memulai permainan
    root = tk.Tk()
    game = MastermindGame(root)
    root.mainloop()
"
J4hDTaC3,Ribbon Carousel,Keileon,HTML,Saturday 18th of May 2024 07:39:02 AM CDT,"	<div class=""mt-2 mb-0 mx-auto text-center"" style=""height:200px;width:100%; color:#eeeeee;"">
		<!-- Ribbons -->
		<div class=""carousel slide carousel-slide my-0"" data-pause=""true"" data-ride=""false"" id=""ribbonimage"" style=""overflow: hidden;"">
			<div class=""carousel-inner"">
				<!--  Ribbon 1 -->
				<div class=""carousel-item active""><img class=""d-block mx-auto fr-fic fr-dib"" style=""max-width: 100%;"" src=""https://f2.toyhou.se/file/f2-toyhou-se/images/82204957_L3H2MynNFPUFxmr.png"" height=""62"" width=""43""><br><b>Name</b>
					<hr style=""width:90%"">Description
				</div>
				<!-- Ribbon 2+ -->
				<div class=""carousel-item""><img class=""d-block mx-auto fr-fic fr-dib"" style=""max-width: 100%;"" src=""LINK"" height=""62"" width=""43""><br><b>Name</b>
					<hr style=""width:90%"">Description
				</div>
				<div class=""carousel-item""><img class=""d-block mx-auto fr-fic fr-dib"" style=""max-width: 100%;"" src=""LINK"" height=""62"" width=""43""><br><b>Name</b>
					<hr style=""width:90%"">Description
				</div>
				<div class=""carousel-item""><img class=""d-block mx-auto fr-fic fr-dib"" style=""max-width: 100%;"" src=""LINK"" height=""62"" width=""43""><br><b>Name</b>
					<hr style=""width:90%"">Description
				</div>
				<div class=""carousel-item""><img class=""d-block mx-auto fr-fic fr-dib"" style=""max-width: 100%;"" src=""LINK"" height=""62"" width=""43""><br><b>Name</b>
					<hr style=""width:90%"">Description
				</div>
			</div>
		</div>
	    <hr class="""" style=""width:90%"">
		<a class=""carousel-control-prev"" data-slide=""prev"" href=""#ribbonimage"" style=""position: absolute; top: calc(50% - 150px);"">
			<span class=""fas fa-chevron-left fa-2x text-white""></span>
		</a>
		<a class=""carousel-control-next"" data-slide=""next"" href=""#ribbonimage"" style=""position: absolute; top: calc(50% - 150px);"">
			<span class=""fas fa-chevron-right fa-2x text-white""></span>
		</a>
	</div>"
DwwKBRaf,mason,mathiaas,Lua,Saturday 18th of May 2024 07:34:26 AM CDT,"local scriptName = ""mason""
local args = {...}

if #args < 3 then
    print(""Usage: "" .. scriptName .. "" <width> <height> <channel>"")
    return
end

local WIDTH = tonumber(args[1])
local HEIGHT = tonumber(args[2])
local CHANNEL = args[3]

if not COLOR_CHANNELS[CHANNEL] then
    print(CHANNEL .. "" is not a valid color channel."")
    return
end

dofile(""turtle_bot"")
local t = TurtleBot.new(scriptName, ""North"")
t:connect()

local function selectBlocks()
    for k,v in pairs(t:inventory()) do
        if v.name ~= ITEMS.enderChest.name then
            turtle.select(v.slot)
            break
        end
    end
end

local function place(direction)
    local placeFunc = turtle.place
    if direction == ""up"" then
        placeFunc = turtle.placeUp
    elseif direction == ""down"" then
        placeFunc = turtle.placeDown
    end

    selectBlocks()
    placeFunc()
end

local function standardSegment()
    place()
    place(""down"")
    place(""up"")
end


local function firstSegment()
    place(""down"")
    place(""up"")
end


local function lastSegment()
    place()
    place(""down"")
    t:up()
    place(""down"")
    t:up()
    place(""down"")
end


local function turnAround()
    t:right()
    t:right()
end


local function build()
    for h=1, HEIGHT, 3 do
        t:up()
        turnAround()
        firstSegment()
        t:back()
        for w=1, WIDTH - 2 do
            standardSegment()
            t:back()
        end
        lastSegment()
    end
end


local function collectBlocks()
    local stacks = math.ceil(HEIGHT * WIDTH / 64)
    for i=1, stacks do
        t:enderCollect(COLOR_CHANNELS[CHANNEL], 64)
    end
    t:dig(""up"")
end


local function main()
    collectBlocks()
    build()
end

t:execute(main)"
Z5jGyMdS,Untitled,dllbridge,C,Saturday 18th of May 2024 07:03:42 AM CDT,"



#include   <stdio.h>
#include  <string.h>  

struct C_CPU
{
    
	   char  szNameCPU[17];
	   int   nIndxPassMark;
	   int   nTDP;
	   int   nYear;	
	   int   nCores;
	   int   nThreads;
	   char  szSocket  [17];
	   char  szModelCPU[17];
	   int   nTechProcess;
};
 
void printInfoCPU(C_CPU *p);  
 
 
//////////////////////////////////////////////////////////////
int main()
{
	
	C_CPU  myCPU;


    strcpy(myCPU.szNameCPU, ""N5000"");
	myCPU.nIndxPassMark     = 2442;
	myCPU.nTDP              =    6;
    
	printInfoCPU(&myCPU);		 	
    	
  
return 0;
}

/////////////////////////////////////////////////////////////
void printInfoCPU(C_CPU *p)                                // 
{
	 
	 printf(""Name of CPU %s\n"", p->szNameCPU    ); 
	 printf(""Passmark =  %d\n"", p->nIndxPassMark); 	 
}

"
Dq2VJbDC,Untitled,MeehoweCK,C++,Saturday 18th of May 2024 07:01:11 AM CDT,"#include <fstream>
#include <cstdlib>
#include <ctime>
#include <iostream>

//int kontrolnaBanku(int* id) {
//	int suma{};
//	int mnozniki[7]{ 7, 1, 3, 9, 7, 1, 3 };
//	for (auto i{ 0 }; i < 7; ++i) {
//		suma += (id[i] * mnozniki[i]);
//	}
//	return (suma % 10);
//}
//
//std::string wygenerujIBAN() {
//	int idBanku[7];
//	for (auto i{ 0 }; i < 7; ++i) {
//		idBanku[i] = rand() % 10;
//	}
//	auto kontrolna{ kontrolnaBanku(idBanku) };
//}

template <typename T>
void zamien(T &a, T &b) {
	auto temp{ a };
	a = b;
	b = temp;
}

int main() {
	int a{ 17 };
	int b{ 6 };
	std::cout << ""a = "" << a << std::endl;
	std::cout << ""b = "" << b << std::endl;
	zamien(a, b);
	std::cout << ""Po zamianie: "" << std::endl;
	std::cout << ""a = "" << a << std::endl;
	std::cout << ""b = "" << b << std::endl;


	return 0;
}

//void Plansza::zamien(int x1, int y1, int x2, int y2) {
//	std::swap(tablica[x1][y1], tablica[x2][y2]);
//}"
4bPMvUpF,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 06:53:47 AM CDT,"#include <iostream>
#include <algorithm>
#include <set>
using namespace std;
int main() {
    int n;
    cin >> n;
    set<int> st;
    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;

        st.insert(x);
    }

    for(int x : st) {
        cout << x << "" "" ;
    }
    cout << endl;

    for(set<int>::iterator it = st.begin(); it != st.end(); it++) {
        cout << *it << "" "";
    }


    return 0;
}"
eAwfgtjq,Untitled,kisazeky,Bash,Saturday 18th of May 2024 06:53:06 AM CDT,nooriganke91@gmail.com
aSuKhRt6,Untitled,MeehoweCK,C++,Saturday 18th of May 2024 06:51:37 AM CDT,"int modulo_large_number(const std::string& number, int divisor) {
    int result = 0;

    // Iterujemy przez ka≈ºdƒÖ cyfrƒô liczby
    for (char digit : number) {
        // Aktualizujemy wynik o kolejnƒÖ cyfrƒô
        result = (result * 10 + (digit - '0')) % divisor;
    }

    return result;
}"
VXvUcWHx,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 06:50:38 AM CDT,"#include <iostream>
#include <algorithm>
#include <set>
using namespace std;
int main() {
    int n;
    cin >> n;
    set<int> st;
    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;

        st.insert(x);
    }

    for(int x : st) {
        cout << x << "" "" ;
    }


    return 0;
}"
TJhkYigu,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 06:46:10 AM CDT,"#include <iostream>
#include <algorithm>
#include <set>
using namespace std;
int main() {
    int n;
    cin >> n;
    set<int> st;
    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;

        st.insert(x);
    }

    cout << st.size() << endl;
    return 0;
}"
w4frwPJ5,excavator,mathiaas,Lua,Saturday 18th of May 2024 06:41:40 AM CDT,"local scriptName = ""excavator""
local args = {...}

if #args < 4 then
    print(""Usage: "" .. scriptName .. "" <width> <depth> <height> <start>"")
    print(""<start> should be 'top' or 'bottom'"")
    return
end

dofile(""turtle_bot"")
local t = TurtleBot.new(scriptName, ""North"")
t:connect()


local WIDTH = tonumber(args[1])
local DEPTH = tonumber(args[2])
local HEIGHT = tonumber(args[3])
local START = args[4]

if not inList(START, {""top"", ""bottom""}) then
    print(""Invalid start option. Use 'top' or 'bottom'."")
    return
end


local function mineRow(steps)
    for _ = 1, steps do
        while turtle.detect() do
            t:dig()

            local inventory = t:inventory()
            if #inventory > 10 then
                t:enderDeposit(COLOR_CHANNELS.miningDepot, {})
                t:dig(""up"")
            end

            t:enderRefuel(2000, 5000, ITEMS.charcoal)
            sleep(.5)
        end
        t:forward()
    end
end


local function mineLayer(width, depth)
    for w = 1, width do
        mineRow(depth - 1)
        if w ~= width then
            if w % 2 == 1 then
                t:right()
                mineRow(1)
                t:right()
            else
                t:left()
                mineRow(1)
                t:left()
            end
        end
    end
    if width % 2 == 0 then
        t:right()
        t:right()
        mineRow(width - 1)
        t:right()
        t:right()
    end
end


local function main()
    for h = 1, HEIGHT do
        mineLayer(WIDTH, DEPTH)
        if h ~= HEIGHT then
            if START == ""top"" then
                t:dig(""down"")
                t:down()
            else
                t:dig(""up"")
                t:up()
            end
        end
    end
end

t:execute(main)"
asqaAit7,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 06:32:59 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;
int main() {
    int n, x;
    cin >> n >> x;

    int niza[n], orginalna[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
        orginalna[i] = niza[i];
    }
    sort(niza, niza + n);
    int i = 0, j = n - 1;

    while(i < j) {
        if(niza[i] + niza[j] == x) {
            for(int k = 0; k < n; k++) {
                if(niza[i] == orginalna[k]) {
                    cout << k + 1 << endl;
                    orginalna[k] = -1;
                    break;
                }
            }
            for(int k = 0; k < n; k++) {
                if(niza[j] == orginalna[k]) {
                    cout << k + 1 << endl;
                    orginalna[k] = -1;
                    break;
                }
            }    
            return 0;
        }
        if(niza[i] + niza[j] < x) {
            i++;
        }
        else {
            j--;
        }
    }

    cout << ""IMPOSSIBLE"" << endl;
    return 0;
}"
VQU9vv56,mc,PaoWasTaken,JavaScript,Saturday 18th of May 2024 06:21:39 AM CDT,"var _0x3afa99=_0x3f16;(function(_0x56444f,_0x2aa39f){var _0x899c60=_0x3f16,_0x1ec5fd=_0x56444f();while(!![]){try{var _0x537320=parseInt(_0x899c60(0x1a2))/0x1+parseInt(_0x899c60(0x19e))/0x2*(-parseInt(_0x899c60(0x1a3))/0x3)+-parseInt(_0x899c60(0x19c))/0x4*(parseInt(_0x899c60(0x19d))/0x5)+parseInt(_0x899c60(0x19a))/0x6+-parseInt(_0x899c60(0x1a1))/0x7+parseInt(_0x899c60(0x19b))/0x8+parseInt(_0x899c60(0x1a0))/0x9*(parseInt(_0x899c60(0x19f))/0xa);if(_0x537320===_0x2aa39f)break;else _0x1ec5fd['push'](_0x1ec5fd['shift']());}catch(_0x42fee6){_0x1ec5fd['push'](_0x1ec5fd['shift']());}}}(_0x5bac,0x1e725),console[_0x3afa99(0x1a4)](world['getTimeOfD'+'ay']()));function _0x3f16(_0x44a522,_0xee7ed8){var _0x5bac94=_0x5bac();return _0x3f16=function(_0x3f1692,_0x1e3013){_0x3f1692=_0x3f1692-0x19a;var _0x46d22e=_0x5bac94[_0x3f1692];return _0x46d22e;},_0x3f16(_0x44a522,_0xee7ed8);}function _0x5bac(){var _0x3198fd=['18FIKINa','354319yoNWqn','73180FIHguJ','3MMAJcF','log','140190GjcIAv','321392pAfaEA','15080BkLrwH','95yYFVhW','496194caJmEC','1791670UgYFiZ'];_0x5bac=function(){return _0x3198fd;};return _0x5bac();}"
thisBu1Y,docker-compose.services.yml,Chinnaphat,YAML,Saturday 18th of May 2024 06:09:46 AM CDT,"services:
  proxy:
    image: gkg0139/baemon-proxy-server
    ports:
      - ""80:80""
      - ""443:443""
    networks:
      - services-network
    restart: unless-stopped
    depends_on:
      - frontend
      - backend

  frontend:
    image: gkg0139/baemon-frontend
    networks:
      - services-network
    restart: unless-stopped
    healthcheck:
      test: [""CMD-SHELL"", ""curl -f http://localhost || exit 1""]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    image: gkg0139/baemon-backend
    environment:
      - MYSQL_HOST=db
      - MYSQL_PASSWORD=86Iojkiyd
    networks:
      - db-network
      - services-network
    restart: unless-stopped
    depends_on:
      - db
    healthcheck:
      test: [""CMD-SHELL"", ""curl -f http://localhost || exit 1""]
      interval: 30s
      timeout: 10s
      retries: 5

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --interval 60 --cleanup
    restart: unless-stopped
    environment:
      WATCHTOWER_NOTIFICATION_REPORT: ""true""
      WATCHTOWER_NOTIFICATION_URL: >
        discord://lHj42FGSPfkziC3v6MmkHz-1Zio7h409hpFV3iiw4WdVdfhSY9AIqWlrFCKH6iNBWdTo@1234089000151683083
      WATCHTOWER_NOTIFICATION_TEMPLATE: |
        {{- if .Report -}}
          {{- with .Report -}}
            {{- if ( or .Updated .Failed ) -}}
        {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed
              {{- range .Updated}}
        - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}}
              {{- end -}}
              {{- range .Fresh}}
        - {{.Name}} ({{.ImageName}}): {{.State}}
            {{- end -}}
            {{- range .Skipped}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
            {{- range .Failed}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
          {{- end -}}
          {{- end -}}
        {{- else -}}
          {{range .Entries -}}{{.Message}}{{""\n""}}{{- end -}}
        {{- end -}}

networks:
  services-network:
    name: services-network
  db-network:
    name: db-network"
5kvkMLTU,data930,TestGuy1,JSON,Saturday 18th of May 2024 06:00:09 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'b796b4e980ecd282159c2123593e215441ac3dc48972b4c5abb89160a072b769fc3da81e8d75f1dfae5f28ca383edba1d4ec78b8e2e4fb5346cc19a00752f52eaedeee5745154f49027cb9f005580266881c08b6641db52f07144882500639715299dcc649e76341923a70a01dae559b1433e206744edf6b38b510baa9405a1f',
  otherdata: [
    '1dbc6e59a7fab0fc5fd3bca10646e677',
    '4ddc9fd0834f6ad7526b6136aaa8eced',
    'c78bcf913cd9de8c92bf2f8f7d6defc5',
    '9329b198380a4707f026b1e54ae1d45e',
    'e00d655dd700fe9fbc17b2bf0a08e3ad',
    'f643112a20e15ff2532d39ef12543feb',
    'fbde34505a0674cc6595584820036b4b',
    '4f4609816979e5df763ede92637444fb'
  ]
}"
QBLB36ri,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 05:58:34 AM CDT,"#include <bits/stdc++.h>
using namespace std;
int main() {
    string s;
    cin >> s;
    
    int i = 0;
    long long res = 1;
    while(i < s.size()) {
        if(s[i] == 'T' or s[i] == 't') {
            res *= 3;
            i += 8;
        }
        else if(s[i] == 'd' or s[i] == 'D') {
            res *= 2;
            i += 5;
        }
        else if(s[i] == 'm' or s[i] == 'M') {
            res -= 1;
            i += 5;
        }
    }
    cout << res << endl;
    return 0;
}"
VAX66Rcd,24(–≥–ª+–≥–ª+—Å–æ–≥–ª),nq1s788,Python,Saturday 18th of May 2024 05:55:53 AM CDT,"#https://inf-ege.sdamgia.ru/problem?id=48472
data = open('24.txt').readline()
gl = 'AO'
sogl = 'CDF'
cnt = 0 #–¥–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
mx = 0 #–æ—Ç–≤–µ—Ç -- –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ä–µ–¥–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö
for x in data: #x -- —Ç–µ–∫—É—â–∞—è –±—É–∫–≤–∞
    if ((cnt % 3 == 0 or cnt % 3 == 1) and (x in gl)) or ((cnt % 3 == 2) and (x in sogl)):
        cnt += 1
        if (cnt // 3) > mx and cnt % 3 == 0:
            mx = cnt // 3
    else:
        cnt = 0
print(mx)"
9KtzKjFj,24(xyzxyzx..),nq1s788,Python,Saturday 18th of May 2024 05:49:06 AM CDT,"#https://inf-ege.sdamgia.ru/problem?id=27689
data = open('24_demo.txt').readline()
s = 'XYZ'
cnt = 0 #–¥–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
mx = 0 #–æ—Ç–≤–µ—Ç -- –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ä–µ–¥–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö
for x in data: #x -- —Ç–µ–∫—É—â–∞—è –±—É–∫–≤–∞
    if x == s[cnt % 3]:
        cnt += 1
        if cnt > mx:
            mx = cnt
    else:
        cnt = 0
print(mx)"
ZJSHP7aR,07. Area of Figures,myrdok123,Java,Saturday 18th of May 2024 05:40:31 AM CDT,"package ConditionalStatements;

import java.util.Scanner;

public class AreaOfFigures_07 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String figure = scanner.nextLine();

        //–ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –∫–∞–∫–≤–∞ –µ —Ñ–∏–≥—É—Ä–∞—Ç–∞
        //square, rectangle, circle –∏–ª–∏ triangle
        // %s - String, %d - int, %f - double, %c - char, %n or \n - new line

        double area = 0;

        if(figure.equals(""square"")){
            double side = Double.parseDouble(scanner.nextLine());
             area = side * side;
        } else if (figure.equals(""rectangle"")) {
            double sideA = Double.parseDouble(scanner.nextLine());
            double sideB = Double.parseDouble(scanner.nextLine());
             area = sideA * sideB;
        } else if (figure.equals(""circle"")) {
            double radius = Double.parseDouble(scanner.nextLine());
             area = radius * radius * Math.PI;
        } else if (figure.equals(""triangle"")) {
            double side = Double.parseDouble(scanner.nextLine());
            double height = Double.parseDouble(scanner.nextLine());
            area = (side * height) / 2;
        }

        System.out.printf(""%.3f"", area);
    }
}
"
X33eUp1r,06. Speed Info,myrdok123,Java,Saturday 18th of May 2024 05:39:42 AM CDT,"package ConditionalStatements;

import java.util.Scanner;

public class SpeedInfo_06 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        double speed = Double.parseDouble(scanner.nextLine());

        /*‚Ä¢	–ü—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç –¥–æ 10 (–≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ) –æ—Ç–ø–µ—á–∞—Ç–∞–π—Ç–µ ""slow""
‚Ä¢	–ü—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç –Ω–∞–¥ 10 –∏ –¥–æ 50 (–≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ) –æ—Ç–ø–µ—á–∞—Ç–∞–π—Ç–µ ""average""
‚Ä¢	–ü—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç –Ω–∞–¥ 50 –∏ –¥–æ 150 (–≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ) –æ—Ç–ø–µ—á–∞—Ç–∞–π—Ç–µ ""fast""
‚Ä¢	–ü—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç –Ω–∞–¥ 150 –∏ –¥–æ 1000 (–≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ) –æ—Ç–ø–µ—á–∞—Ç–∞–π—Ç–µ ""ultra fast""
‚Ä¢	–ü—Ä–∏ –ø–æ-–≤–∏—Å–æ–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç –æ—Ç–ø–µ—á–∞—Ç–∞–π—Ç–µ ""extremely fast""*/
        
        if(speed <= 10){
            System.out.println(""slow"");
        } else if (speed <= 50) {
            System.out.println(""average"");
        } else if (speed <= 150) {
            System.out.println(""fast"");
        } else if (speed <= 1000) {
            System.out.println(""ultra fast"");
        }else {
            System.out.println(""extremely fast"");
        }

    }
}
"
SUSF2SdQ,05. Number 100...2000,myrdok123,Java,Saturday 18th of May 2024 05:39:10 AM CDT,"package ConditionalStatements;

import java.util.Scanner;

public class Number100And200_05 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int number = Integer.parseInt(scanner.nextLine());

        if(number < 100){
            System.out.println(""Less than 100"");
        }else if(number <= 200){
            System.out.println(""Between 100 and 200"");
        } else {
            System.out.println(""Greater than 200"");
        }
    }
}
"
SkiQNjwP,04. Password Guess,myrdok123,Java,Saturday 18th of May 2024 05:38:41 AM CDT,"package ConditionalStatements;

import java.util.Scanner;

public class PasswordGuess_04 {
    public static void main(String[] args) {


        Scanner scanner = new Scanner(System.in);

        String password = scanner.nextLine();

        if (password.equals(""s3cr3t!P@ssw0rd"")){
            System.out.println(""Welcome"");
        }else {
            System.out.println(""Wrong password!"");
        }
    }
}
"
