id,title,username,language,date,content
q6kGHBfY,data770,TestGuy1,JSON,Saturday 2nd of December 2023 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '89a44dc5af7aae5597cc7665c682102732f540074235f0b304d1e37163735ef169c7a45800960b0437cffb0bd90fec809414838b67d9c4a79648d93103893b23a580e11ed145f4f2635f9fd7b3d02646f0b92ebb8218740015c1ffb0ba6f193510c23800779fff2305b6583a59412f5c0c3980507c32dbb099b01ac2fb45ee1f',
  otherdata: [
    '5c7273b2668d95611c722e6f1dbb1d32',
    '9f85b1da003253448c090cf64451073b',
    'dba7ed69fb87008e85e0103e8b23cc1c',
    'c482a068c2634b50aa97d46eab2929aa',
    'cb4ab83e138a799c0e2d5d8fefbc037f',
    '132a52258f7daa014bdc382d442a2bd8',
    '65bcf590c64073a4ab566212b69ba3cc',
    'b8a209a8561043a06101cfdafa104b91'
  ]
}"
vU29Nihh,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 05:59:52 AM CDT,"#include <iostream>


using namespace std;
class Vehicle {
public:
    Vehicle() {
        cout << ""Vehicle"" << endl;
    }
};
class Fare {
public:
    Fare() {
        cout << ""Fare"" << endl;
    }
};
class Car : public Vehicle {
public:
    Car() : Vehicle() {
        cout << ""Car"" << endl;
    }
};
class Bus : public Vehicle, public Fare {
public:
    Bus() : Vehicle(), Fare() {
        cout << ""Bus"" << endl;
    }
};
int main()
{
    
    
    Car c1;
    Bus v1;
    return 0;
}
"
nGtF7QQR,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 05:54:54 AM CDT,"#include <iostream>


using namespace std;
class Vehicle {
public:
    Vehicle() {
        cout << ""Vehicle"" << endl;
    }
};
class Car : public Vehicle {
public:
    Car() : Vehicle() {
        cout << ""Car"" << endl;
    }
};
class Bus : public Vehicle {
public:
    Bus() : Vehicle() {
        cout << ""Bus"" << endl;
    }
};

class CityBus : public Bus {
public:
    CityBus() : Bus() {
        cout << ""City bus"" << endl;
    }
};
int main()
{
    
    CityBus c;
    return 0;
}
"
jPsyEwqC,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 05:50:33 AM CDT,"#include <iostream>


using namespace std;
class Vehicle {
public:
    Vehicle() {
        cout << ""Vehicle"" << endl;
    }
};
class four_wheels {
public:
    four_wheels() {
        cout << ""Four wheels"" << endl;
    }
};
class Car : public Vehicle, public four_wheels  {
public:
    Car() : Vehicle(), four_wheels() {
        cout << ""Car"" << endl;
    }
};
int main()
{
    
    Car c;
    return 0;
}
"
QvKyDCMp,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 05:46:41 AM CDT,"#include <iostream>


using namespace std;
class Vehicle {
public:
    Vehicle() {
        cout << ""Vehicle"" << endl;
    }
};
class four_wheels : public Vehicle {
public:
    four_wheels() : Vehicle() {
        cout << ""Four wheels"" << endl;
    }
};
class Car : public four_wheels {
public:
    Car() : four_wheels() {
        cout << ""Car"" << endl;
    }
};
int main()
{
    
    Car c;
    return 0;
}
"
Fi9N2imi,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 05:42:58 AM CDT,"#include <iostream>


using namespace std;
class Base {
public:
    Base() {
        cout << ""Base class"" << endl;
    }
};
class Derived : public Base{
public:
    Derived() : Base() {
        cout << ""Derived class"" << endl;
    }
};
int main()
{
    
    Derived d;
    return 0;
}
"
gEfLWvAm,BTC Wallet Credentials have been reset,castlclass_20,GetText,Saturday 2nd of December 2023 05:35:18 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
blogelzar4w:ktSuSm on 212.224.93.130
You can connect via SSH.
Regards"
2cmHrgh2,Untitled,35657,C++,Saturday 2nd of December 2023 05:28:31 AM CDT,"#include <iostream>


using namespace std;


void PrintRectangle(int N, int K) {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < K; j++) {
			if (i == 0 || i == N - 1 || j == 0 || j == K - 1) {
				cout << '*';
			}
			else {
				cout << "" "";
			}
		}
		cout << endl;
	}
}

int fact(int N) {
	int result = 1;
	for (int i = 1; i <= N; i++) {
		result *= i;
	}
	return result;
}


int main() {
	
	PrintRectangle(6, 15);

	int a = fact(5);

	cout << a << endl;
	
}"
dCED3Hyc,Braincluck interpreter,_ricky,Python,Saturday 2nd of December 2023 05:25:15 AM CDT,"newline=input(""Do you want to count newlines as input? (Yes/No)"")
if newline == ""Yes"":
  newline = True
elif newline == ""No"":
  newline = False
else:
  exit()
  print
program = input(""Type program here:"")
inp = []
pairs = {}
stack = []
tape = [0]
ip = 0
ind = 0
min = 0
max = 0
for loc, ins in enumerate(program):
  if ins == ""["":
    stack.append(loc)
  elif ins == ""]"":
    if len(stack) == 0:
        exit(""Error: This closed bracket is not supposed to be there!"")
    lind = stack.pop()
    pairs[lind] = loc
    pairs[loc] = lind
while ip < len(program):
    ins = program[ip]
    if ins == ""+"":
        tape[ind] += 1
        if tape[ind] == 256:
            tape[ind] = 0
    elif ins == ""-"":
        tape[ind] -= 1
        if tape[ind] == -1:
            tape[ind] = 255
    elif ins == ""<"":
        ind -= 1
        if ind < min:
            min -= 1
            tape.insert((len(tape) + min + 1), 0)
    elif ins == "">"":
        ind += 1
        if ind > max:
            max += 1
            tape.insert(max, 0)
    elif ins == ""."":
        print(chr(tape[ind]), end = """")
    elif ins == "","":
        if inp == []:
            if newline:
              inp = list(input() + ""\n"")
            else:
              inp = list(input())
        if ord(inp[0]) > 255 or  ord(inp[0]) < 0:
            exit(""Why did you input that character "" + (inp[0]) + "" !?"")
        tape[ind] = ord(inp.pop(0))
    elif ins == ""["":
        if not tape[ind]:
            ip = pairs[ip]
    elif ins == ""]"":
        if tape[ind]:
            ip = pairs[ip]
    ip += 1"
y8ChPikH,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 2nd of December 2023 05:20:37 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-488674"
aYZX0ZHz,Untitled,MathQ_,C++,Saturday 2nd of December 2023 05:05:31 AM CDT,"#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <numeric>
#include <queue>
#include <deque>
#include <random>
#include <chrono>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define file_in freopen(""input.txt"", ""r"", stdin);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)x.size()
#define fi first
#define se second
#define endl '\n'

template<typename T> istream& operator>>(istream &in, vector<T> &v) { for (auto &el : v) { in >> el; } return in; }
template<typename T> ostream& operator<<(ostream &out, const vector<T> &v) { for (auto &el : v) { out << el << "" ""; } return out; }
template<typename T1, typename T2> istream& operator>>(istream &in, pair<T1, T2> &v) { in >> v.fi >> v.se; return in; }
template<typename T1, typename T2> ostream& operator<<(ostream &out, const pair<T1, T2> &v) { out << v.fi << "" "" << v.se; return out; }

mt19937 rd(chrono::steady_clock::now().time_since_epoch().count());

void fill(vector<int> &state) {
    iota(all(state), 0);
    shuffle(all(state), rd);
}

int get(int i, vector<int> &state) {
    int res = 0;
    for (int j = 0; j < sz(state); ++j) {
        res += abs(i - j) == abs(state[i] - state[j]);
    }
    return res - 1;
}

const ll K = (1ll << 32) - 1, LIM = 1000;
const ld TIME = 0.99, STEP = 0.001;

ld rnd() { return (ld)rd() / K; } 
ld sigmoid(ld x) { return 1 / (1 + exp(-x)); }
bool solve(int n, ld start) {
    vector<int> state(n);
    fill(state);
    int cur_cost = 0, same_cost = 0;
    for (int i = 0; i < n; ++i) cur_cost += get(i, state);
    cur_cost >>= 1;
    
    ld tmp = 2;
    while ((clock() - start) / CLOCKS_PER_SEC <= TIME) {
        tmp -= STEP;
        ++same_cost;
        if (same_cost == LIM || cur_cost == 0) {
            break;
        }
        int i = rd() % n, j = rd() % n;
        int new_cost = cur_cost - get(i, state) - get(j, state);
        swap(state[i], state[j]);
        new_cost += get(i, state) + get(j, state);
        if (cur_cost > new_cost || rnd() < exp((ld)(cur_cost - new_cost) / sigmoid(tmp))) {
            cur_cost = new_cost;
            same_cost = 0;
        } else {
            swap(state[i], state[j]);
        }
    }
    if (cur_cost == 0) {
        for (auto &el : state) cout << el + 1 << ' '; cout << '\n';
        return true;
    } else {
        return false;
    }
}

int main() {
    fast
    // file_in

    int n;
    cin >> n;
    ld start = clock();
    while ((clock() - start) / CLOCKS_PER_SEC <= TIME) {
        if (solve(n, start)) {
            break;
        }
    }
    return 0;
}"
9yvjMH4K,Untitled,35657,C++,Saturday 2nd of December 2023 04:33:38 AM CDT,"#include <iostream>

using namespace std;


// функция не принимает параметров и не возвращает значения
void Hello() {
	cout << ""Hello, World!!!"" << endl;
}


// функция принимает один параметр и не возвращает значения
void Star(int count) {
	for (int i = 0; i < count; i++) {
		cout << '*';
	}
	cout << endl;
}

// функция принимает два параметра и не возвращает значения
void AnyLine(char symb, int count) {
	for (int i = 0; i < count; i++) {
		cout << symb;
	}
	cout << endl;
}

// функция принимает два параметра и возвращает значения
int Pow(int Digit, int Pow) {
	int key = 1;
	for (int i = 0; i < Pow; i++) {
		key *= Digit;
	}
	return key;
}

// функция принимает два параметра и возвращает значения
int Min(int a, int b) {
	return a < b ? a : b;
}

int main() {
	Hello();
	Hello();
	Hello();

	Star(3);
	Star(5);

	AnyLine('=', 10);

	int result = Pow(3, 3);
	cout << result << endl;

	cout << Min(3, 7) << endl;
}"
CzFqzcZq,HA | Office Control Panel Element,pqpxoxa,YAML,Saturday 2nd of December 2023 04:27:29 AM CDT,"type: custom:button-card
name: Ceiling
entity: light.office_desk_lamp
icon: mdi:monitor-speaker
show_icon: true
tap_action:
  action: none
aspect_ratio: 1/1
styles:
  card:
    - background-color: '#2e3a51'
    - border-radius: 20px
    - padding: 8px
    - box-shadow: >-
        rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px
        60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
  name:
    - font-weight: bold
    - font-size: 28px
    - align-self: middle
    - justify-self: start
    - padding-left: 9px
    - padding-bottom: 1px
    - letter-spacing: '-1.0px'
  icon:
    - padding: 22px
    - width: 70px
    - height: 70px
    - color: white
    - border-radius: 55px
    - background-color: '#4B5975'
    - opacity: 0
  img_cell:
    - justify-content: start
    - align-self: middle
    - margin: none
  grid:
    - grid-template-areas: '""n i1"" ""i i2"" ""i i3""'
    - grid-template-columns: 72% 28%
    - grid-template-rows: 1fr 1fr 1fr
  custom_fields:
    sub:
      - position: absolute
      - left: 9%
      - top: 23%
    logo:
      - position: absolute
      - left: '-12%'
      - top: 33%
custom_fields:
  sub:
    card:
      type: custom:button-card
      name: false
      styles:
        card:
          - background-color: transparent
          - border-style: none
        name:
          - justify-self: left
          - font-size: 12px
          - font-weight: 400
          - font-color: transparent
  logo:
    card:
      type: custom:button-card
      color: transparent
      show_name: false
      name: false
      entity_picture: >-
        https://abc,,,.ui.nabu.casa/local/officeceiling.png
      show_entity_picture: true
      styles:
        card:
          - background-color: transparent
          - border-style: none
        icon:
          - width: 110px
          - height: 110px
          - color: white
          - padding: 28px
          - align-self: start
          - text-align: start
          - background-color: '#4B5975'
          - border-radius: 95px
  i1:
    card:
      type: custom:button-card
      color: transparent
      show_name: false
      name: Power
      icon: mdi:power
      tap_action:
        action: call-service
        service: light.toggle
        data: {}
        target:
          entity_id:
            - light.office_ceiling
      styles:
        card:
          - background-color: '#4B5975'
          - border-radius: 55px
          - border-style: none
          - box-shadow: >-
              rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px
              -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset
        icon:
          - width: 30px
          - height: 30px
          - color: white
          - align-self: start
          - text-align: start
          - padding: 12px
        img_cell:
          - justify-content: middle
          - align-self: middle
          - margin: none
  i2:
    card:
      type: custom:button-card
      color: transparent
      show_name: false
      name: Power
      icon: mdi:lightbulb-on
      tap_action:
        action: call-service
        service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id:
            - light.office_ceiling
      styles:
        card:
          - background-color: '#4B5975'
          - border-radius: 55px
          - border-style: none
          - box-shadow: >-
              rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px
              -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset
        icon:
          - width: 28px
          - height: 28px
          - color: white
          - align-self: start
          - text-align: start
          - padding: 13px
        img_cell:
          - justify-content: middle
          - align-self: middle
          - margin: none
  i3:
    card:
      type: custom:button-card
      color: transparent
      show_name: false
      name: Power
      icon: mdi:lightbulb-on-40
      tap_action:
        action: call-service
        service: light.turn_on
        data:
          brightness_pct: 10
        target:
          entity_id:
            - light.office_ceiling
      styles:
        card:
          - background-color: '#4B5975'
          - border-radius: 55px
          - border-style: none
          - box-shadow: >-
              rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px
              -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset
        icon:
          - width: 28px
          - height: 28px
          - color: white
          - align-self: start
          - text-align: start
          - padding: 13px
        img_cell:
          - justify-content: middle
          - align-self: middle
          - margin: none
"
8Yf97Exi,TeleportData (STORY GAME V2.15),Sungmingamerpro13,CSS,Saturday 2nd of December 2023 04:13:10 AM CDT,"for _, player in pairs(game.Players:GetChildren()) do
	spawn(function()
		local NewGui = game.ServerStorage.Assets.GoodEnding:Clone()
		NewGui.Parent = player.PlayerGui
		wait(5)
		local TeleportData = {
			AddWins = true,
			PlayerName = player.UserId
		}
		player.AddWins.Value = player.AddWins.Value + 1
		TeleportService:Teleport(15504034964, player, TeleportData)
	end)
end
"
hzKpPNLn,100/100,Grossos,JavaScript,Saturday 2nd of December 2023 04:11:04 AM CDT,"function password(input) {

    let string = input.shift();
    let command = input.shift();

    let password = '';

    while (command != 'Done') {

        let tokens = command.split(' ');
        let action = tokens.shift();

        if (action == ""TakeOdd"") {
            for (let currIndex = 0; currIndex < string.length; currIndex++) {
                if (currIndex % 2 != 0) {
                    password += string[currIndex]
                }
            }
            string = password;
            console.log(string);
            command = input.shift();
            continue;
        } else if (action == ""Cut"") {

            let index = Number(tokens[0]);
            let length = Number(tokens[1]);
            let substr = password.substring(index, index + length);
            if (string.includes(substr)) {
                string = string.substring(0, index) + string.substring(index + length);
            }
            console.log(string);
            command = input.shift();
            continue;
        }

        else {
            let substring = tokens[0];
            let substitute = tokens[1];

            if (string.includes(substring)) {
                while (string.includes(substring)) {
                    string = string.replace(substring, substitute);
                }
                console.log(string);

            } else {
                console.log(`Nothing to replace!`);
            }
        }
        command = input.shift();
    }
    console.log(`Your password is: ${string}`)
}
password([""Siiceercaroetavm!:?:ahsott.:i:nstupmomceqr"",
    ""TakeOdd"",
    ""Cut 15 3"",
    ""Substitute :: -"",
    ""Substitute | ^"",
    ""Done""])"
SYNqZxxN,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 04:09:25 AM CDT,"file = open('8A.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 80 == 0 and (A[i] > 50000 or A[j] > 50000):
            count += 1
print(count)

file = open('8B.txt')
A = list(map(int, file.readlines()))
k = [0] * 80
kb = [0] * 80
for i in range(len(A)):
    ost = A[i] % 80
    if A[i] <= 50000:
        k[ost] += 1
    else:
        kb[ost] += 1
print(k, kb)
count = k[0] * kb[0] + (kb[0] * (kb[0] - 1) // 2 )     
for i in range(1, 80):
    count += ((k[i] * kb[80 - i]) + (kb[i] * (kb[i] - 1) // 2))
print(count - 1)
#Проверка: в строке 11 A -> B"
6L7XkLWY,Untitled,35657,C++,Saturday 2nd of December 2023 04:01:57 AM CDT,"#include <iostream>
#include <time.h>

using namespace std;

int main() {
	setlocale(LC_ALL, ""ru"");

	const int row = 3;
	const int col = 4;

	int arr[row][col];

	srand(time(NULL));

	int sum = 0;


	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			arr[i][j] = rand() % 15;
		}
	}

	for (int i = 0; i < row; i++) {
		int row_sum = 0;
		for (int j = 0; j < col; j++) {
			cout << arr[i][j] << ""\t"";
			row_sum += arr[i][j];
		}
		sum += row_sum;
		cout << ""|\t"" << row_sum << endl;
	}
	cout << ""---------------------------------"" << endl;

	for (int i = 0; i < col; i++) {
		int col_sum = 0;
		for (int j = 0; j < row; j++) {
			col_sum += arr[j][i];
		}
		cout << col_sum << ""\t"";
	}
	cout << "" \t"" << sum << endl;
}"
sBrS1Mtb,my_data_checker,Danila_lipatov,Python,Saturday 2nd of December 2023 03:41:02 AM CDT,"import pandas as pd
import numpy as np


if __name__ == '__main__':
    input_data = pd.read_excel("".xlsx"", sheet_name='Sheet1')
    # 
    # for value
    # print(input_data)
    result_true = {}
    result_false = {}
    agency = ''
    data = input_data[input_data[f'agency'] == f'{agency}']
    print(data)
    data = data.reset_index().drop(columns=['index'])
    for i, value in enumerate(data['_name']):
        print(i)
        print(value)
        if value not in result_true:
            result_true[value] = []
        if value not in result_false:
            result_false[value] = []
        if str(data['identifier'][i]).isdigit():
            result_true[value].append(data['identifier'][i])
        # try:
        #     result_true[value].append(data['identifier'][i])
        # except:
        #     result_false[value].append(i)
        # print(result_true)

    stop = 'here'"
u8tAubDt,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 03:31:03 AM CDT,"file = open('7A.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if abs(A[i] - A[j]) % 69 == 0:
            count += 1
print(count)

file = open('7B.txt')
A = list(map(int, file.readlines()))
k = [0] * 69 
for i in range(len(A)):
    ost = A[i] % 69
    k[ost] += 1
count = 0
for i in range(0, 69):
    count += k[i] * (k[i] - 1) // 2
print(count)
#Проверка: в строке 11 A -> B"
HJ2ZgWZP,Untitled,35657,C++,Saturday 2nd of December 2023 03:19:12 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>
#include <filesystem>
#include <windows.h>


using namespace std;

using filesystem::path;

// вывод содержимого директории (просто название файлов и каталогов)
void PrintDirectory(const string& str) { // указываем полный путь к папке
	for (const auto& a : filesystem::directory_iterator(str)) {
		cout << a.path().filename().string() << endl;
	}
}

int main() {

	SetConsoleCP(1251); // установка кодировки 1251 в поток ввода
	SetConsoleOutputCP(1251); // установка кодировки 1251 в поток вывода


	filesystem::create_directory(""C:/Users/PC/Desktop/temp""); // создание папки

	filesystem::create_directories(""C:/Users/PC/Desktop/temp/temp2/1/2/3/4/5""); // создание папки с подпапками

	ofstream fout(""C:/Users/PC/Desktop/temp/file.txt""); // создание файла (можно совмещать создание объекта (ofstream fout) и открытие файла (fout.open(""file.txt""))
	ofstream fout2(""C:/Users/PC/Desktop/temp/temp2/file2.txt"");
	ofstream fout3(""C:/Users/PC/Desktop/temp/temp2/1/file3.txt"");
	ofstream fout4(""C:/Users/PC/Desktop/temp/temp2/1/2/file4.txt"");

	filesystem::remove(""C:/Users/PC/Desktop/temp/temp2/1/2/3/4/5""); // удалить пустую папку с помощью remove из std::filesystem

	fout4.close();
	filesystem::remove(""C:/Users/PC/Desktop/temp/temp2/1/2/file4.txt""); // удалить файл с помощью remove из std::filesystem (не забыть его закрыть)

	filesystem::rename(""C:/Users/PC/Desktop/temp/temp2/1/2/3/4"", ""C:/Users/PC/Desktop/temp/temp2/1/2/3/5""); //  переименовать пустую папку с помощью rename из std::filesystem

	fout3.close();
	fout2.close();
	fout.close();
	filesystem::rename(""C:/Users/PC/Desktop/temp"", ""C:/Users/PC/Desktop/temp33""); //  переименовать папку с помощью rename из std::filesystem (не забыть закрыть все файлы) (можно также переименовать с перемещением или просто переместить без переименования)

	filesystem::copy(""C:/Users/PC/Desktop/temp33/temp2/1/file3.txt"", ""C:/Users/PC/Desktop/file3.txt""); // копирование файла
	filesystem::copy(""C:/Users/PC/Desktop/temp33"", ""C:/Users/PC/Desktop/temp34""); // копирование папки с файлами но без подкаталогов
	filesystem::copy(""C:/Users/PC/Desktop/temp33"", ""C:/Users/PC/Desktop/temp35"", filesystem::copy_options::recursive); // копирование папки с подкаталогами

	filesystem::remove_all(""C:/Users/PC/Desktop/temp35""); // удалить непустую папку и все содержимое с помощью remove_all из std::filesystem (не забыть закрыть все файлы)
	cout << filesystem::file_size(""C:/Users/PC/Desktop/file3.txt"") << endl; // возвращает размер файла (для папки нужно делать рекурсивный обход всех её подкаталогов)

	cout << filesystem::is_regular_file(""C:/Users/PC/Desktop/file3.txt"") << endl; // выяснить является ли объект файлом
	cout << filesystem::is_directory(""C:/Users/PC/Desktop/file3.txt"") << endl; // выяснить является ли объект папкой
	cout << endl << endl;
	PrintDirectory(""C:/Users/PC/Desktop""); // вывести содержимое папки (названия каталогов и файлов)
}
"
cZzuDhGu,Untitled,dllbridge,C,Saturday 2nd of December 2023 03:13:23 AM CDT,"

#include     <stdio.h>
 


char paper();     


////////////////////////////////////////////////////  
int main()                                        //  
{
	
	
    for(int i = 0; i < 13; i++)
	{	
		printf(""%c"", paper() ); 
    }
	
}








/////////////////////////////////////////////////////
char paper()                                       // 
{
	

	static int i = 0;
	
    char sz[40] = ""SONY Pictures"";



return sz[i++];
}









/*	
#include     <stdio.h>
 

int   n = 4   ;

float f = 1.9999999;



////////////////////////////////////////////////////  
int main()                                        //  
{
	
	int nRes = n + (int)f;
	
	printf(""%d  \n"", nRes); 
	
	n = (int)f;  
}

*/




























/*
#include     <stdio.h>
#include     <iostream>
using namespace std;


int   max(  int n1, int   n2);      
float max(float f1, float f2);    



////////////////////////////////////////////////////   (char(*)( ) )
int main()                                        //   (int(*)(int))
{
   
   

    cout <<   max(73   , 21    ) << endl; 
    cout <<   max( 1.77,  3.55 ); 
}









//////////////////////////////////////////////
int max(int n1, int n2)                     // 
{
	
	if(n1 > n2) return n1;
	
return n2;	
}





//////////////////////////////////////////////
float max(float f1, float f2)             // 
{
	
	if(f1 > f2) return f1;
	
return f2;	
}




*/

"
RdHwwUfb,Untitled,35657,C++,Saturday 2nd of December 2023 03:09:46 AM CDT,"#include <iostream>
#include <time.h>

using namespace std;

int main() {
	setlocale(LC_ALL, ""ru"");

	const int row = 3;
	const int col = 3;

	int arr[row][col];

	srand(time(NULL));

	int sum = 0;


	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			arr[i][j] = rand() % 100;
			cout << arr[i][j] << ""\t"";
		}
		cout << endl;
	}
	cout << endl;

	int min = arr[0][0], max = arr[0][0];

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			sum += arr[i][j];
			if (arr[i][j] < min) {
				min = arr[i][j];
			}
			if (arr[i][j] > max) {
				max = arr[i][j];
			}
		}
	}

	cout << ""Сумма всех элементов: "" << sum << endl;
	cout << ""Среднее арифметическое: "" << sum / (row * col) << endl;
	cout << ""Минимальное число: "" << min << endl;
	cout << ""Максимальное число: "" << max << endl;
}"
4CbWXwz8,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 03:06:19 AM CDT,"file = open('6A.txt')
A = list(map(int, file.readlines()))
count = 0 
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 131 == 0:
            count += 1
print(count)

file = open('6B.txt')
B = list(map(int, file.readlines()))
k = [0] * 131
for i in range(len(B)):
    ost = B[i] % 131 
    k[ost] += 1
count = k[0] * (k[0] - 1) // 2
for i in range(1, 65):
    count += k[i] * k[131 - i]
print(count)
#Проверка: в 13 и 14 строках B -> A"
RzYC5eS6,Platforma.py,Repciu,Python,Saturday 2nd of December 2023 03:05:37 AM CDT,"import pygame
SZEROKOSC_EKRANU = 1024
WYSOKOSC_EKRANU = 800
class Platforma(pygame.sprite.Sprite):
    def __init__(self):
        super(Platforma, self).__init__()
        self.surf = pygame.image.load(""images/pad.png"")
        self.porusza_sie = 0
        self.zresetuj_pozycje()
    
    def zresetuj_pozycje(self):
        self.pozycja = pygame.Rect(SZEROKOSC_EKRANU/2-70, WYSOKOSC_EKRANU-100, 140, 30)

    def ruszaj_platforma(self, wartosc):
        predkosc = 10
        self.pozycja.move_ip(wartosc*predkosc,0)
        self.porusza_sie = wartosc
        if self.pozycja.left <=0:
            self.pozycja.x = 0
        if self.pozycja.right >= SZEROKOSC_EKRANU:
            self.pozycja.x = SZEROKOSC_EKRANU-140
    
    def aktualizuj(self):
        self.porusza_sie = 0"
RxMTjqbx,main.py,Repciu,Python,Saturday 2nd of December 2023 03:04:29 AM CDT,"import pygame
from Platforma import Platforma
SZEROKOSC_EKRANU = 1024
WYSOKOSC_EKRANU = 800
ekran = pygame.display.set_mode([SZEROKOSC_EKRANU, WYSOKOSC_EKRANU])
zegar = pygame.time.Clock()
tlo = pygame.image.load(""images/background.png"")
platforma = Platforma()
pygame.init()
gra_dziala = True
while gra_dziala:
    for zdarzenie in pygame.event.get():
        if zdarzenie.type == pygame.KEYDOWN:
            if zdarzenie.key == pygame.K_ESCAPE:
                gra_dziala = False
        elif zdarzenie.type == pygame.QUIT:
            gra_dziala = False
    keys = pygame.key.get_pressed()
    if keys[pygame.K_a]:
        platforma.ruszaj_platforma(-1)
    if keys[pygame.K_d]:
        platforma.ruszaj_platforma(1)

    ekran.blit(tlo, (0,0))
    ekran.blit(platforma.surf, platforma.pozycja)
    pygame.display.flip()
    zegar.tick(30)
pygame.quit()"
FNm10THh,Untitled,35657,C++,Saturday 2nd of December 2023 03:03:30 AM CDT,"#include <iostream>


using namespace std;


int main() {
	setlocale(LC_ALL, ""ru"");

	const int row = 3;
	const int col = 3;

	int arr[row][col];

	srand(time(NULL));

	int sum = 0;

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			arr[i][j] = rand() % 10;
			cout << arr[i][j] << '\t';
		}
		cout << endl;
	}
	cout << endl;

	int min = arr[0][0];
	int max = arr[0][0];

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			sum += arr[i][j];
			if (arr[i][j] < min) {
				min = arr[i][j];
			}
			if (arr[i][j] > max) {
				max = arr[i][j];
			}
		}
		cout << endl;
	}

	cout << ""Сумма всех элементов массива: "" << sum << endl;
	cout << ""Среднее арифметическое: "" << sum / (row * col) << endl;
	cout << ""Минимальный элемент: "" << min << endl;
	cout << ""Максимальный элемент: "" << max << endl;
}"
JtHS7U8Q,Advent of Code 2023 (Python) - Day 2,HexTree,Python,Saturday 2nd of December 2023 02:53:13 AM CDT,"sum_possible = 0
sum_powers = 0
limit = {'red': 12, 'green': 13, 'blue': 14}

with open('input.txt', 'r') as f:
    for i, line in enumerate(f.readlines()):
        impossible = False
        min_possible = {'red': 0, 'green': 0, 'blue': 0}
        picks = line.strip()[line.find(':')+2:].split('; ')
        for p in picks:
            for part in p.split(', '):
                print(part)
                num, colour = part.split(' ')
                num = int(num)
                # part 1
                if num > limit[colour]:
                    impossible = True
                # part 2
                min_possible[colour] = max(min_possible[colour], num)
        if not impossible:
            sum_possible += (i+1)
        power = 1
        for v in min_possible.values():
            power *= v
        sum_powers += power

# part 1
print(sum_possible)

# part 2
print(sum_powers)
"
5zLH0pEG,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 02:49:11 AM CDT,"file = open('5A.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        for k in range(j + 1, len(A)):
            if A[i] % 19 == 0 and A[j] % 19 == 0 and A[k] % 19 == 0:
                count += 1
print(count)

def fac(n):
    if n == 1:
        return 1
    return fac(n - 1) * n
#Функция нахождения факториала числа n нужна для применения формулы количества сочетаний в строке 23

file = open('5B.txt')
B = list(map(int, file.readlines()))
k19 = 0
for i in range(len(B)):
    if B[i] % 19 == 0:
        k19 += 1
print(fac(k19) // (fac(3) * fac(k19 - 3)))
#Проверка: в 20 и 21 сроках A -> B"
mpPfg3Qg,Untitled,35657,C++,Saturday 2nd of December 2023 02:36:19 AM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <Windows.h>
#include <filesystem>

using namespace std;

void PrintDirectory(const string& str) {
	for (const auto a : filesystem::directory_iterator(str)) {
		cout << a.path().filename().string() << endl;
	}
}

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	filesystem::create_directory(""C:/Users/PC/Desktop/temp""); // создание папки

	filesystem::create_directories(""C:/Users/PC/Desktop/temp/temp2/1/2/3/4/5""); // создание папки с вложенными папками

	ofstream fout(""C:/Users/PC/Desktop/temp/file.txt""); // создаем файл в новой папке

	ofstream fout2(""C:/Users/PC/Desktop/temp/temp2/file2.txt"");
	ofstream fout3(""C:/Users/PC/Desktop/temp/temp2/1/file3.txt"");
	ofstream fout4(""C:/Users/PC/Desktop/temp/temp2/1/2/file4.txt"");

	//filesystem::remove(""C:/Users/PC/Desktop/temp/temp2/1/2/3/4/5""); // удаление пустой папки

	fout4.close(); // не забываем закрыть файл перед удалением

	//filesystem::remove(""C:/Users/PC/Desktop/temp/temp2/1/2/file4.txt""); // удаление файла

	fout3.close(); 

	//filesystem::remove_all(""C:/Users/PC/Desktop/temp/temp2/1""); // удаление папки со всем содержимым

	//filesystem::rename(""C:/Users/PC/Desktop/temp/temp2/1/2/3/4"", ""C:/Users/PC/Desktop/temp/temp2/1/2/3/33""); // переименование пустой папки

	fout.close();
	fout2.close();

	//filesystem::rename(""C:/Users/PC/Desktop/temp"", ""C:/Users/PC/Desktop/temp35""); // переименование папки с файлами (не забыть закрыть вложенные файлы) 

	//filesystem::rename(""C:/Users/PC/Desktop/temp"", ""C:/Users/PC/Downloads/temp""); // перемещение папки с файлами (не забыть закрыть вложенные файлы) 

	//filesystem::rename(""C:/Users/PC/Desktop/temp"", ""C:/Users/PC/Downloads/temp35""); // перемещение папки с файлами с переименованием (не забыть закрыть вложенные файлы) 

	//filesystem::copy(""C:/Users/PC/Desktop/temp/temp2/1/2/3/33"", ""C:/Users/PC/Desktop/33""); // копирование пустой папки (аналогично файл)

	//filesystem::copy(""C:/Users/PC/Desktop/temp"", ""C:/Users/PC/Desktop/temp44"", filesystem::copy_options::recursive); // копирование папки с содержимым

	//cout << filesystem::file_size(""C:/Users/PC/Desktop/file.txt"") << endl; // определить размер файла

	//cout << filesystem::is_directory(""C:/Users/PC/Desktop/temp"") << endl; // определить что объект является папкой

	//cout << filesystem::is_regular_file(""C:/Users/PC/Desktop/file.txt"") << endl; // определить что объект является файлом

	PrintDirectory(""C:/Users/PC/Desktop"");
}"
VzBNNues,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 02:25:59 AM CDT,"file = open('4A.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 5 == 0 and (A[i] + A[j]) % 2 == 1:
            count += 1
print(count)

file = open('4B.txt')
B = list(map(int, file.readlines()))
k0, k1, k0_5, k1_5 = 0, 0, 0, 0
for i in range(len(B)):
    if B[i] % 2 == 0 and B[i] % 5 == 0:
        k0_5 += 1
    if B[i] % 2 != 0 and B[i] % 5 == 0:
        k1_5 += 1
    if B[i] % 2 == 0 and B[i] % 5 != 0:
        k0 += 1
    if B[i] % 2 != 0 and B[i] % 5 != 0:
        k1 += 1
print((k0 * k1_5) + (k1 * k0_5) + (k1_5 * k0_5))
#Проверка: в 13, 14, 16, 18 и 20 строках B -> A"
n5eFrip6,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 02:13:28 AM CDT,"file = open('3A.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 65 == 0:
            count += 1
print(count)

file = open('3B.txt')
B = list(map(int, file.readlines()))
k65, k13, k5 = 0, 0, 0
for i in range(len(B)):
    if B[i] % 65 == 0:
        k65 += 1
    elif B[i] % 13 == 0:
        k13 += 1
    elif B[i] % 5 == 0:
        k5 += 1
k = len(B) - k65
print((k * k65) + (k65 * (k65 -1) // 2) + (k13 * k5))
#Проверка: в 13, 14, 16, 18 b 20 строках B -> A"
cxAFx02B,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 02:01:42 AM CDT,"file = open('2A.txt')
A = list(map(int, file.readlines()))
count = 0 
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 7 == 0:
            count += 1
print(count)

file = open('2B.txt')
B = list(map(int, file.readlines()))
k7 = 0, 0
for i in range(len(B)):
    if B[i] % 7 == 0:
        k7 += 1
    else:
        k += 1
print((k7 * (k7 - 1) // 2) + (k * k7))
#Проверка: в 13 и 14 строках B -> A"
gBUeM03U,"AoC 2023, day 2 (Perl)",musifter,Perl,Saturday 2nd of December 2023 01:56:28 AM CDT,"#!/usr/bin/perl

use v5.16;
use warnings;

use List::Util      qw(all max product);

# Number of cubes we want to test for:
my %want = (red => 12, green => 13, blue => 14);

my $part1 = 0;
my $part2 = 0;

foreach (<>) {
    my ($game, $draws) = m#Game (\d+):(.*)#;

    # Get max seen of each type of cube in this game
    my %max = (red => 0, green => 0, blue => 0);
    foreach (split( /[,;]/, $draws )) {
        my ($num, $colour) = m#(\d+) (\w+)#;
        $max{$colour} = max( $max{$colour}, $num );
    }

    $part1 += $game  if (all {$want{$_} >= $max{$_}} keys %want);
    $part2 += product values %max;
}

say ""Part 1: $part1"";
say ""Part 2: $part2"";
"
hgcgSdfb,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 01:53:07 AM CDT,"file = open('1A.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 2 == 0:
            count += 1
print(count)

file = open('1B.txt')
B = list(map(int, file.readlines()))
k0, k1 = 0, 0
for i in range(len(B)):
    if B[i] % 2 == 0:
        k0 += 1
    else:
        k1 += 1
print((k0 * (k0 - 1) // 2) + (k1 * (k1 - 1) // 2))
#Проверка: в 13 и 14 строках B -> A"
z88kT9zk,day 2 python,icarussiano,Python,Saturday 2nd of December 2023 01:38:16 AM CDT,"#PART 1
with open(""input"") as file:
    data = file.read().splitlines()
d={'red':12,'green':13,'blue':14}
sum = 0
for line in data:
    id, games = line.split("": "")
    games = games.split(""; "")
    id = int(id[5:])
    p = True
    for game in games:
        g=game.split("", "")
        for _ in g:
            n,c = _.split("" "")
            if c in d and int(n)>d.get(c):
                p=False
                break
    if (p == True):
        sum+= id
print(sum)

#PART 2
from functools import reduce
sum=0
for line in data:
    d = {'red': [], 'green': [], 'blue': []}
    id, games = line.split("": "")
    games = games.split(""; "")
    id = int(id[5:])
    for game in games:
        g=game.split("", "")
        for _ in g:
            n,c = _.split("" "")
            if c in d:
                d[c].append(int(n))
    sum+= reduce(lambda x,y:x*y,[max(d[x]) for x in d])
print(sum)
"
iwdDkDU2,AoC 2023 day 2 Optimized by AI,mosredna,JavaScript,Saturday 2nd of December 2023 12:52:03 AM CDT,"const fs = require(""fs"")
const { performance } = require(""perf_hooks"")
const eol = require(""os"").EOL

const startTime = performance.now()
let part1 = 0,
    part2 = 0

const input = fs.readFileSync(__dirname + ""/data.txt"", ""utf8"").split(eol);
const rules = { red: 12, green: 13, blue: 14 };

const games = input.map((item) => item.split("": "")[1].split(""; "").map((dices) =>
  dices.split("", "").reduce((d, turn) => (([value, key] = turn.split("" "")), (d[key] = ~~value), d), {})
));

games.forEach((game, i) => (part1 += game.every((turn) => Object.entries(turn).every(([dice, value]) => rules[dice] >= value)) ? i + 1 : 0));
games.forEach((game) => (part2 += Object.values(game.reduce((acc, turn) => (Object.entries(turn).forEach(([dice, value]) => (acc[dice] = Math.max(acc[dice], value))), acc), { red: 1, green: 1, blue: 1})).reduce((acc, value) => acc * value, 1)));

const time = performance.now() - startTime;
console.log(`Part 1: ${part1}\nPart 2: ${part2}\nTimer: ${time} ms`);"
Bs3VXBNJ,Untitled,pacho_the_python,JavaScript,Saturday 2nd of December 2023 12:22:44 AM CDT,"function clickMe() {
    let btnElement = document.getElementById('click')
    let sectionElement = document.getElementById('section')
    
    btnElement.addEventListener('mouseenter', deleteElement)

    function deleteElement() {
        sectionElement.removeChild(btnElement)

        let newBtn = document.createElement('button')
        newBtn.textContent = 'Ice Cream'
        newBtn.id = 'left-btn'
        newBtn.addEventListener('mouseenter', rightFunction)
        sectionElement.appendChild(newBtn)
    }

    function rightFunction() {
        elelentToRemove = document.getElementById('left-btn')
        sectionElement.removeChild(elelentToRemove)

        let rightBtn = document.createElement('button')
        rightBtn.textContent = 'Ice Cream'
        rightBtn.id = 'right-btn'
        rightBtn.addEventListener('mouseenter', downFunction)
        sectionElement.appendChild(rightBtn)
    }

    function downFunction() {
        elelentToRemove = document.getElementById('right-btn')
        sectionElement.removeChild(elelentToRemove)

        let downBtnBtn = document.createElement('button')
        downBtnBtn.textContent = 'Ice Cream'
        downBtnBtn.id = 'down-btn'
        downBtnBtn.addEventListener('mouseenter', downLeftFunction)
        sectionElement.appendChild(downBtnBtn)
    }

    function downLeftFunction() {
        elelentToRemove = document.getElementById('down-btn')
        sectionElement.removeChild(elelentToRemove)

        let downLeftBtn = document.createElement('button')
        downLeftBtn.textContent = 'Ice Cream'
        downLeftBtn.id = 'down-left-btn'
        downLeftBtn.addEventListener('mouseenter', downRightFunction)
        sectionElement.appendChild(downLeftBtn)
    }


    function downRightFunction() {
        elelentToRemove = document.getElementById('down-left-btn')
        sectionElement.removeChild(elelentToRemove)

        let downLeftBtn = document.createElement('button')
        downLeftBtn.textContent = 'Ice Cream'
        downLeftBtn.id = 'down-right-btn'
        downLeftBtn.addEventListener('mouseenter', upperFunction)
        sectionElement.appendChild(downLeftBtn)
    }


    function upperFunction() {
        elelentToRemove = document.getElementById('down-right-btn')
        sectionElement.removeChild(elelentToRemove)
        sectionElement.appendChild(btnElement)
    }
}"
3w4TPWt4,Untitled,pacho_the_python,CSS,Saturday 2nd of December 2023 12:22:08 AM CDT,"body {
    background-color: rgb(189, 185, 185);
}

#section {
    width: 600px;
    height: 200px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -120%);
}

#click {
    width: 150px;
    padding: 10px 20px;
    background-color: blueviolet;
    color: white;
    border-radius: 8px;
    border: none;
}

#left-btn {
    width: 150px;
    padding: 10px 20px;
    background-color: blueviolet;
    color: white;
    border-radius: 8px;
    border: none;
    position: absolute;
    left: 35%;
}

#right-btn {
    width: 150px;
    padding: 10px 20px;
    background-color: blueviolet;
    color: white;
    border-radius: 8px;
    border: none;
    position: absolute;
    left: 75%;
}

#upper-btn {
    width: 150px;
    padding: 10px 20px;
    background-color: blueviolet;
    color: white;
    border-radius: 8px;
    border: none;
    position: absolute;
    left: 50%;
    top: 50%;
}

#down-btn {
    width: 150px;
    padding: 10px 20px;
    background-color: blueviolet;
    color: white;
    border-radius: 8px;
    border: none;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

#down-left-btn {
    width: 150px;
    padding: 10px 20px;
    background-color: blueviolet;
    color: white;
    border-radius: 8px;
    border: none;
    position: absolute;
    left: 0%;
    top: 100%;
    transform: translate(-0%, -100%);
}

#down-right-btn {
    width: 150px;
    padding: 10px 20px;
    background-color: blueviolet;
    color: white;
    border-radius: 8px;
    border: none;
    position: absolute;
    left: 100%;
    top: 100%;
    transform: translate(-100%, -100%);
}"
dbfaXnsy,Untitled,pacho_the_python,HTML,Saturday 2nd of December 2023 12:21:09 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <link rel=""stylesheet"" href=""ice_cream.css"">
    <title>Ice Cream</title>
</head>
<body onload=""clickMe()"">
    <section id=""section"">
        <button id=""click"">Ice Cream</button>
    </section>
    <script src=""ice_cream.js""></script>
</body>

</html>"
73P4XM27,Advent of code 2023 day 2,hhoppe,Python,Saturday 2nd of December 2023 12:19:10 AM CDT,"def day2(s, *, part2=False):
  cubes = dict(red=12, green=13, blue=14)

  def drawn_cubes(game):
    for num_cube in game.split(', '):
      s_num, color = num_cube.split(' ')
      yield int(s_num), color    

  def game_possible(game):
    return all(num <= cubes[color] for num, color in drawn_cubes(game))

  total = 0
  for game_id, line in enumerate(s.splitlines(), 1):
    games = line.split(': ')[1].split('; ')
    if part2:
      min_cubes = dict(red=0, green=0, blue=0)
      for game in games:
        for num, color in drawn_cubes(game):
          min_cubes[color] = max(min_cubes[color], num)
      total += math.prod(min_cubes.values())
    elif all(game_possible(game) for game in games):
      total += game_id

  return total"
u22t9pgq,Salvar Links: Gera link com target blank e salva lista em arquivo html,MizunoBrasil,JavaScript,Saturday 2nd of December 2023 12:18:30 AM CDT,"<!DOCTYPE html>
<html lang=""pt-br"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""author"" content=""Mizuno Call of Duty""> 	
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Salva lista de Links Web e gera lista HTML</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        h2 {
            color: #333;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input {
            width: 600px; /* Ajuste o tamanho conforme desejado */
            padding: 5px;
            margin-bottom: 10px;
        }

        button {
            padding: 8px;
            background-color: #007bff;
            color: #fff;
            border: none;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }

        #linksContainer {
            margin-top: 20px;
        }

        a {
            color: #007bff;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <h2>Salva lista de Links Web e gera lista HTML</h2>
    <label for=""urlInput"">Informe a URL:</label>
    <input type=""text"" id=""urlInput"">
    <button onclick=""gerarLink()"">Gerar Link</button>
    <button onclick=""gerarHTML()"">Salvar lista de links</button>

    <div id=""linksContainer""></div>

    <script>
        var links = [];

        function obterTitulo(url, callback) {
            var proxyUrl = 'https://api.codetabs.com/v1/proxy?quest=';
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var match = xhr.responseText.match(/<title>(.*?)<\/title>/);
                    var titulo = match ? match[1] : ""Título não encontrado"";
                    callback(titulo);
                }
            };
            xhr.open(""GET"", proxyUrl + url, true);
            xhr.send();
        }

        function gerarLink() {
            // Obtém o valor do input
            var url = document.getElementById(""urlInput"").value.trim();

            // Verifica se a URL não está vazia
            if (url !== """") {
                // Obtém o título da página
                obterTitulo(url, function(titulo) {
                    // Adiciona o link ao array
                    links.push({ url: url, titulo: titulo });

                    // Cria um elemento de link
                    var linkElement = document.createElement(""a"");

                    // Define os atributos do link
                    linkElement.href = url;
                    linkElement.target = ""_blank"";
                    linkElement.textContent = titulo;

                    // Adiciona o link ao contêiner
                    document.getElementById(""linksContainer"").appendChild(linkElement);

                    // Adiciona uma quebra de linha
                    document.getElementById(""linksContainer"").appendChild(document.createElement(""br""));

                    // Limpa o valor do input
                    document.getElementById(""urlInput"").value = """";
                });
            }
        }

        function gerarHTML() {
            // Cria um conteúdo HTML com os links
            var conteudoHTML = `
                <html>
                <head>
                    <title>Links Gerados</title>
                    <style>
                        body {
                            font-family: Arial, sans-serif;
                        }

                        a {
                            color: #007bff;
                            text-decoration: none;
                        }

                        a:hover {
                            text-decoration: underline;
                        }
                    </style>
                </head>
                <body>
            `;
            for (var i = 0; i < links.length; i++) {
                conteudoHTML += `<a href=""${links[i].url}"" target=""_blank"">${links[i].titulo}</a><br>`;
            }
            conteudoHTML += ""</body></html>"";

            // Cria um Blob com o conteúdo HTML
            var blob = new Blob([conteudoHTML], { type: ""text/html"" });

            // Cria um objeto URL para o Blob
            var url = URL.createObjectURL(blob);

            // Gera um nome de arquivo organizado
            var agora = new Date();
            var nomeArquivo =
                `links_${agora.getFullYear()}-${zeroAEsquerda(agora.getMonth() + 1)}-${zeroAEsquerda(agora.getDate())}` +
                `_${zeroAEsquerda(agora.getHours())}-${zeroAEsquerda(agora.getMinutes())}.html`;

            // Função auxiliar para adicionar zero à esquerda
            function zeroAEsquerda(numero) {
                return numero.toString().padStart(2, '0');
            }

            // Cria um elemento de link para fazer o download
            var linkDownload = document.createElement(""a"");
            linkDownload.href = url;
            linkDownload.download = nomeArquivo;
            document.body.appendChild(linkDownload);

            // Aciona o clique no link de download
            linkDownload.click();

            // Remove o link de download do corpo
            document.body.removeChild(linkDownload);

            // Limpa o array de links
            links = [];
        }
    </script>
</body>
</html>
"
h0R6QtvK,AoC 2023 day 2,mosredna,JavaScript,Saturday 2nd of December 2023 12:16:43 AM CDT,"const fs = require(""fs"")
const performance = require(""perf_hooks"").performance
const eol = require(""os"").EOL

let startTime = performance.now()
let part1 = (part2 = 0)
let input = fs.readFileSync(__dirname + ""/data.txt"", ""utf8"").split(eol)

let games = input.map((item) => {
    return item
        .split("": "")[1]
        .split(""; "")
        .map((dices) => {
            let d = {}
            dices.split("", "").map((turn) => {
                let data = turn.split("" "")
                d[data[1]] = ~~data[0]
            })
            return d
        })
})

let rules = { red: 12, green: 13, blue: 14 }
for (let i = 0; i < games.length; i++) {
    const game = games[i]
    let posible = true
    let dices = { red: 1, green: 1, blue: 1 }
    for (const turn of game) {
        for (const dice in turn) {
            if (rules[dice] < turn[dice]) {
                posible = false
            }
            if (dices[dice] < turn[dice]) {
                dices[dice] = turn[dice]
            }
        }
    }
    if (posible) part1 += i + 1
    part2 += Object.values(dices).reduce((acc, value) => acc * value, 1)
}

let time = performance.now() - startTime
console.log(`Part 1: ${part1}\nPart 2: ${part2}\nTimer: ${time} ms`)"
iYnRUJAR,Untitled,35657,C++,Saturday 2nd of December 2023 12:08:45 AM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <Windows.h>

using namespace std;

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	ifstream fin;
	fin.open(""C:/Users/PC/Desktop/file.txt"");

	ofstream fout;
	fout.open(""C:/Users/PC/Desktop/file2.txt"");

	if (!fin.is_open() || !fout.is_open()) {
		cout << ""Ошибка открытия файла"" << endl;
	}
	else {

		char ch;

		while (fin.get(ch)) {
			if (ch >= 'А' && ch <= 'Я') {
				ch += 32;
			}
			fout << ch;
		}
		fin.close();
		fout.close();
		remove(""C:/Users/PC/Desktop/file.txt""); // удаляем старый файл
		rename(""C:/Users/PC/Desktop/file2.txt"", ""C:/Users/PC/Desktop/file.txt""); // переименовываем новый файл (называем его именем старого)
	}
}"
Ww8vf4Hk,machine learning,Hemaprakash,Python,Saturday 2nd of December 2023 12:06:35 AM CDT,"import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load your dataset
df = pd.read_csv(""your_dataset.csv"")

# Select features and target variable
X = df[['feature1', 'feature2']]
y = df['target']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate residuals
residuals = y_test - y_pred

# Create a residual plot
sns.residplot(x=y_pred, y=residuals, lowess=True)
plt.title('Residual Plot')
plt.show()

# Print Mean Squared Error
print(""Mean Squared Error:"", mean_squared_error(y_test, y_pred))

###naive_bayesian
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# Load your dataset
df = pd.read_csv(""your_dataset.csv"")

# Select features and target variable
X = df[['feature1', 'feature2']]
y = df['target']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a Naïve Bayesian classifier
model = GaussianNB()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Compute accuracy
accuracy = accuracy_score(y_test, y_pred)
print(""Accuracy:"", accuracy)

###knearest classifier
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

# Load the iris dataset
from sklearn.datasets import load_iris
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = iris.target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a KNN classifier
model = KNeighborsClassifier(n_neighbors=3)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Print correct and wrong predictions
results = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print(""Correct Predictions:"")
print(results[results['Actual'] == results['Predicted']])
print(""\nWrong Predictions:"")
print(results[results['Actual'] != results['Predicted']])

# Compute accuracy
accuracy = accuracy_score(y_test, y_pred)
print(""\nAccuracy:"", accuracy)

# Print confusion matrix
conf_matrix = confusion_matrix(y_test, y_pred)
print(""\nConfusion Matrix:"")
print(conf_matrix)

###kmeans
import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# Load your dataset
df = pd.read_csv(""your_dataset.csv"")

# Select features for clustering
X = df[['feature1', 'feature2']]

# Perform k-Means clustering for various k values
k_values = [2, 3, 4, 5]
for k in k_values:
    model = KMeans(n_clusters=k, random_state=42)
    df['Cluster'] = model.fit_predict(X)
    
    # Visualize the clustering
    plt.scatter(df['feature1'], df['feature2'], c=df['Cluster'], cmap='viridis')
    plt.title(f'k-Means Clustering (k={k})')
    plt.show()
"
VqfrK1mX,visualisation,Hemaprakash,Python,Saturday 2nd of December 2023 12:02:32 AM CDT,"import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Create DataFrame
dt = {'id': {0: 1, 1: 2, 2: 3, 3: 4, 4: 5, 5: 6, 6: 7, 7: 8, 8: 9, 9: 10, 10: 11, 11: 12,
             12: 13, 13: 14, 14: 15, 15: 16, 16: 17, 17: 18, 18: 19, 19: 20, 20: 21, 21: 22,
             22: 23, 23: 24, 24: 25, 25: 26, 26: 27, 27: 28, 28: 29, 29: 30, 30: 31, 31: 32, 32: 33,
             33: 34, 34: 35},
      'name': {0: 'John Deo', 1: 'Max Ruin', 2: 'Arnold', 3: 'Krish Star', 4: 'John Mike',
               5: 'Alex John', 6: 'My John Rob', 7: 'Asruid', 8: 'Tes Qry', 9: 'Big John',
               10: 'Ronald', 11: 'Recky', 12: 'Kty', 13: 'Bigy', 14: 'Tade Row', 15: 'Gimmy',
               16: 'Tumyu', 17: 'Honny', 18: 'Tinny', 19: 'Jackly', 20: 'Babby John', 21: 'Reggid',
               22: 'Herod', 23: 'Tiddy Now', 24: 'Giff Tow', 25: 'Crelea', 26: 'Big Nose',
               27: 'Rojj Base', 28: 'Tess Played', 29: 'Reppy Red', 30: 'Marry Toeey',
               31: 'Binn Rott', 32: 'Kenn Rein', 33: 'Gain Toe', 34: 'Rows Noump'},
      'class': {0: 'Four', 1: 'Three', 2: 'Three', 3: 'Four', 4: 'Four', 5: 'Four',
                6: 'Five', 7: 'Five', 8: 'Six', 9: 'Four', 10: 'Six', 11: 'Six', 12: 'Seven',
                13: 'Seven', 14: 'Four', 15: 'Four', 16: 'Six', 17: 'Five', 18: 'Nine', 19: 'Nine',
                20: 'Four', 21: 'Seven', 22: 'Eight', 23: 'Seven', 24: 'Seven', 25: 'Seven',
                26: 'Three', 27: 'Seven', 28: 'Seven', 29: 'Six', 30: 'Four', 31: 'Seven', 32: 'Six',
                33: 'Seven', 34: 'Six'}, 'mark': {0: 75, 1: 85, 2: 55, 3: 60, 4: 60, 5: 55, 6: 78,
                                                   7: 85, 8: 78, 9: 55, 10: 89, 11: 94, 12: 88, 13: 88, 14: 88, 15: 88, 16: 54, 17: 75,
                                                   18: 18, 19: 65, 20: 69, 21: 55, 22: 79, 23: 78, 24: 88, 25: 79, 26: 81, 27: 86, 28: 55,
                                                   29: 79, 30: 88, 31: 90, 32: 96, 33: 69, 34: 88},
      'gender': {0: 'female', 1: 'male', 2: 'male', 3: 'female', 4: 'female', 5: 'male',
                 6: 'male', 7: 'male', 8: 'male', 9: 'female', 10: 'female', 11: 'female', 12: 'female',
                 13: 'female', 14: 'male', 15: 'male', 16: 'male', 17: 'male', 18: 'male', 19: 'female',
                 20: 'female', 21: 'female', 22: 'male', 23: 'male', 24: 'male', 25: 'male', 26: 'female',
                 27: 'female', 28: 'male', 29: 'female', 30: 'male', 31: 'female', 32: 'female',
                 33: 'male', 34: 'female'}}
df = pd.DataFrame(data=dt)

# Line Plot for marks
plt.figure(figsize=(12, 6))
sns.lineplot(x='id', y='mark', data=df)
plt.title('Line Plot for Marks')
plt.xlabel('ID')
plt.ylabel('Marks')
plt.show()

# Bar Plot for class-wise count
plt.figure(figsize=(10, 6))
sns.countplot(x='class', data=df)
plt.title('Bar Plot for Class-wise Count')
plt.xlabel('Class')
plt.ylabel('Count')
plt.show()

# Histogram for marks distribution
plt.figure(figsize=(10, 6))
plt.hist(df['mark'], bins=20, color='skyblue', edgecolor='black')
plt.title('Histogram for Marks Distribution')
plt.xlabel('Marks')
plt.ylabel('Frequency')
plt.show()

# Density Plot for marks distribution
plt.figure(figsize=(10, 6))
sns.kdeplot(df['mark'], fill=True, color='skyblue')
plt.title('Density Plot for Marks Distribution')
plt.xlabel('Marks')
plt.ylabel('Density')
plt.show()

# Scatter Plot for marks vs. id with gender differentiation
plt.figure(figsize=(12, 6))
sns.scatterplot(x='id', y='mark', hue='gender', data=df)
plt.title('Scatter Plot for Marks vs. ID with Gender Differentiation')
plt.xlabel('ID')
plt.ylabel('Marks')
plt.legend()
plt.show()
"
azt4Sh0L,Nigerian scammers [2-12-1/2023],bombaires,AIMMS,Saturday 2nd of December 2023 12:00:04 AM CDT,"<a href=""mailto:peter_alexandel@yahoo.co.jp"">peter_alexandel@yahoo.co.jp</a>
<a href=""mailto:drpatrickobid@gmail.com"">drpatrickobid@gmail.com</a>
<a href=""mailto:d.rpa.tri.ck.ob.i.d@gmail.com"">d.rpa.tri.ck.ob.i.d@gmail.com</a>
<a href=""mailto:d.rp.at.r.i.ck.o.b.i.d@gmail.com"">d.rp.at.r.i.ck.o.b.i.d@gmail.com</a>
<a href=""mailto:d.rp.atric.ko.bid@gmail.com"">d.rp.atric.ko.bid@gmail.com</a>
<a href=""mailto:drp.at.r.i.ck.ob.i.d@gmail.com"">drp.at.r.i.ck.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.p.a.t.rick.ob.id@gmail.com"">d.r.p.a.t.rick.ob.id@gmail.com</a>
<a href=""mailto:drpa.t.r.ic.k.ob.id@gmail.com"">drpa.t.r.ic.k.ob.id@gmail.com</a>
<a href=""mailto:d.r.pa.tr.ick.o.bi.d@gmail.com"">d.r.pa.tr.ick.o.bi.d@gmail.com</a>
<a href=""mailto:dr.p.atricko.b.id@gmail.com"">dr.p.atricko.b.id@gmail.com</a>
<a href=""mailto:dr.p.at.r.ick.o.b.id@gmail.com"">dr.p.at.r.ick.o.b.id@gmail.com</a>
<a href=""mailto:d.r.patricko.b.id@gmail.com"">d.r.patricko.b.id@gmail.com</a>
<a href=""mailto:drpat.r.i.ck.obid@gmail.com"">drpat.r.i.ck.obid@gmail.com</a>
<a href=""mailto:d.rpatr.ic.kob.i.d@gmail.com"">d.rpatr.ic.kob.i.d@gmail.com</a>
<a href=""mailto:d.r.pa.tr.i.c.ko.b.i.d@gmail.com"">d.r.pa.tr.i.c.ko.b.i.d@gmail.com</a>
<a href=""mailto:d.r.p.a.t.r.i.ckobid@gmail.com"">d.r.p.a.t.r.i.ckobid@gmail.com</a>
<a href=""mailto:dr.pa.t.ric.k.obid@gmail.com"">dr.pa.t.ric.k.obid@gmail.com</a>
<a href=""mailto:d.rpa.tri.ck.obi.d@gmail.com"">d.rpa.tri.ck.obi.d@gmail.com</a>
<a href=""mailto:d.rp.atri.c.k.obid@gmail.com"">d.rp.atri.c.k.obid@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.i.ck.o.bid@gmail.com"">d.r.p.a.tr.i.ck.o.bid@gmail.com</a>
<a href=""mailto:drp.a.t.ric.ko.bi.d@gmail.com"">drp.a.t.ric.ko.bi.d@gmail.com</a>
<a href=""mailto:dr.patri.c.k.o.b.i.d@gmail.com"">dr.patri.c.k.o.b.i.d@gmail.com</a>
<a href=""mailto:d.r.pat.ri.c.ko.bi.d@gmail.com"">d.r.pat.ri.c.ko.bi.d@gmail.com</a>
<a href=""mailto:d.r.p.at.r.ick.ob.i.d@gmail.com"">d.r.p.at.r.ick.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.i.c.k.o.b.i.d@gmail.com"">d.r.p.a.tr.i.c.k.o.b.i.d@gmail.com</a>
<a href=""mailto:d.r.patr.ic.ko.bi.d@gmail.com"">d.r.patr.ic.ko.bi.d@gmail.com</a>
<a href=""mailto:d.r.p.a.t.ri.c.k.o.bid@gmail.com"">d.r.p.a.t.ri.c.k.o.bid@gmail.com</a>
<a href=""mailto:d.rp.atrickob.i.d@gmail.com"">d.rp.atrickob.i.d@gmail.com</a>
<a href=""mailto:drp.a.t.r.i.c.k.obi.d@gmail.com"">drp.a.t.r.i.c.k.obi.d@gmail.com</a>
<a href=""mailto:drp.a.tr.ickobid@gmail.com"">drp.a.tr.ickobid@gmail.com</a>
<a href=""mailto:dr.p.a.tr.ick.obi.d@gmail.com"">dr.p.a.tr.ick.obi.d@gmail.com</a>
<a href=""mailto:d.r.p.a.tri.cko.bi.d@gmail.com"">d.r.p.a.tri.cko.bi.d@gmail.com</a>
<a href=""mailto:drpat.r.i.ck.o.bi.d@gmail.com"">drpat.r.i.ck.o.bi.d@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.ic.ko.bi.d@gmail.com"">d.r.p.a.tr.ic.ko.bi.d@gmail.com</a>
<a href=""mailto:dr.pat.r.i.c.k.ob.i.d@gmail.com"">dr.pat.r.i.c.k.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.p.atr.i.ck.o.bid@gmail.com"">d.r.p.atr.i.ck.o.bid@gmail.com</a>
<a href=""mailto:d.rpa.t.ric.k.obid@gmail.com"">d.rpa.t.ric.k.obid@gmail.com</a>
<a href=""mailto:d.rpatr.ick.obi.d@gmail.com"">d.rpatr.ick.obi.d@gmail.com</a>
<a href=""mailto:drpa.tr.ickobi.d@gmail.com"">drpa.tr.ickobi.d@gmail.com</a>
<a href=""mailto:drp.a.t.r.i.c.ko.b.i.d@gmail.com"">drp.a.t.r.i.c.ko.b.i.d@gmail.com</a>
<a href=""mailto:d.r.p.a.t.ri.ck.o.bi.d@gmail.com"">d.r.p.a.t.ri.ck.o.bi.d@gmail.com</a>
<a href=""mailto:d.r.patric.k.obi.d@gmail.com"">d.r.patric.k.obi.d@gmail.com</a>
<a href=""mailto:drp.at.ricko.bid@gmail.com"">drp.at.ricko.bid@gmail.com</a>
<a href=""mailto:drp.a.t.r.ic.k.o.bi.d@gmail.com"">drp.a.t.r.ic.k.o.bi.d@gmail.com</a>
<a href=""mailto:d.r.pat.r.i.c.k.o.b.i.d@gmail.com"">d.r.pat.r.i.c.k.o.b.i.d@gmail.com</a>
<a href=""mailto:drp.at.ri.ck.obid@gmail.com"">drp.at.ri.ck.obid@gmail.com</a>
<a href=""mailto:d.r.p.a.t.ricko.b.id@gmail.com"">d.r.p.a.t.ricko.b.id@gmail.com</a>
<a href=""mailto:dr.patr.i.cko.b.i.d@gmail.com"">dr.patr.i.cko.b.i.d@gmail.com</a>
<a href=""mailto:drp.atr.ic.ko.b.id@gmail.com"">drp.atr.ic.ko.b.id@gmail.com</a>
<a href=""mailto:d.r.pa.tr.i.c.kob.id@gmail.com"">d.r.pa.tr.i.c.kob.id@gmail.com</a>
<a href=""mailto:d.rpa.t.r.i.cko.b.i.d@gmail.com"">d.rpa.t.r.i.cko.b.i.d@gmail.com</a>
<a href=""mailto:d.r.p.a.t.r.icko.b.id@gmail.com"">d.r.p.a.t.r.icko.b.id@gmail.com</a>
<a href=""mailto:dr.pa.t.r.icko.bid@gmail.com"">dr.pa.t.r.icko.bid@gmail.com</a>
<a href=""mailto:d.r.pat.ri.c.k.o.bid@gmail.com"">d.r.pat.ri.c.k.o.bid@gmail.com</a>
<a href=""mailto:d.rp.atri.c.ko.bid@gmail.com"">d.rp.atri.c.ko.bid@gmail.com</a>
<a href=""mailto:d.r.pa.t.r.ic.k.o.b.i.d@gmail.com"">d.r.pa.t.r.ic.k.o.b.i.d@gmail.com</a>
<a href=""mailto:d.r.patri.c.k.o.b.i.d@gmail.com"">d.r.patri.c.k.o.b.i.d@gmail.com</a>
<a href=""mailto:d.rpat.r.i.c.k.o.b.i.d@gmail.com"">d.rpat.r.i.c.k.o.b.i.d@gmail.com</a>
<a href=""mailto:d.r.p.at.ri.ck.o.b.i.d@gmail.com"">d.r.p.at.ri.ck.o.b.i.d@gmail.com</a>
<a href=""mailto:dr.p.a.t.r.ic.ko.b.i.d@gmail.com"">dr.p.a.t.r.ic.ko.b.i.d@gmail.com</a>
<a href=""mailto:d.r.p.at.r.i.cko.b.i.d@gmail.com"">d.r.p.at.r.i.cko.b.i.d@gmail.com</a>
<a href=""mailto:drp.at.ri.c.k.obi.d@gmail.com"">drp.at.ri.c.k.obi.d@gmail.com</a>
<a href=""mailto:dr.patri.ck.o.bid@gmail.com"">dr.patri.ck.o.bid@gmail.com</a>
<a href=""mailto:dr.pat.r.i.ckob.i.d@gmail.com"">dr.pat.r.i.ckob.i.d@gmail.com</a>
<a href=""mailto:dr.patr.ic.ko.bi.d@gmail.com"">dr.patr.ic.ko.bi.d@gmail.com</a>
<a href=""mailto:dr.p.at.r.i.ck.obi.d@gmail.com"">dr.p.at.r.i.ck.obi.d@gmail.com</a>
<a href=""mailto:d.r.patr.i.ck.o.bid@gmail.com"">d.r.patr.i.ck.o.bid@gmail.com</a>
<a href=""mailto:drp.atric.k.ob.id@gmail.com"">drp.atric.k.ob.id@gmail.com</a>
<a href=""mailto:drp.atr.i.cko.bid@gmail.com"">drp.atr.i.cko.bid@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.ic.k.o.bi.d@gmail.com"">d.r.p.a.tr.ic.k.o.bi.d@gmail.com</a>
<a href=""mailto:d.r.p.at.ric.k.obi.d@gmail.com"">d.r.p.at.ric.k.obi.d@gmail.com</a>
<a href=""mailto:drp.at.ri.ckob.id@gmail.com"">drp.at.ri.ckob.id@gmail.com</a>
<a href=""mailto:drpat.r.i.c.k.o.b.id@gmail.com"">drpat.r.i.c.k.o.b.id@gmail.com</a>
<a href=""mailto:dr.p.a.t.r.ick.obi.d@gmail.com"">dr.p.a.t.r.ick.obi.d@gmail.com</a>
<a href=""mailto:dr.pa.t.ri.c.k.ob.id@gmail.com"">dr.pa.t.ri.c.k.ob.id@gmail.com</a>
<a href=""mailto:d.rpat.ricko.b.id@gmail.com"">d.rpat.ricko.b.id@gmail.com</a>
<a href=""mailto:dr.pa.tric.k.obid@gmail.com"">dr.pa.tric.k.obid@gmail.com</a>
<a href=""mailto:dr.patr.ick.o.bid@gmail.com"">dr.patr.ick.o.bid@gmail.com</a>
<a href=""mailto:drp.a.tri.cko.b.i.d@gmail.com"">drp.a.tri.cko.b.i.d@gmail.com</a>
<a href=""mailto:dr.patr.ic.kobi.d@gmail.com"">dr.patr.ic.kobi.d@gmail.com</a>
<a href=""mailto:drpat.ri.ck.obi.d@gmail.com"">drpat.ri.ck.obi.d@gmail.com</a>
<a href=""mailto:d.rpatr.ic.k.obid@gmail.com"">d.rpatr.ic.k.obid@gmail.com</a>
<a href=""mailto:drpa.tr.i.cko.b.i.d@gmail.com"">drpa.tr.i.cko.b.i.d@gmail.com</a>
<a href=""mailto:dr.pat.r.ic.k.ob.id@gmail.com"">dr.pat.r.ic.k.ob.id@gmail.com</a>
<a href=""mailto:d.rp.a.tr.i.c.k.o.bid@gmail.com"">d.rp.a.tr.i.c.k.o.bid@gmail.com</a>
<a href=""mailto:dr.patrick.o.bid@gmail.com"">dr.patrick.o.bid@gmail.com</a>
<a href=""mailto:d.rp.a.t.ri.ck.o.bi.d@gmail.com"">d.rp.a.t.ri.ck.o.bi.d@gmail.com</a>
<a href=""mailto:d.rpa.tr.i.cko.bi.d@gmail.com"">d.rpa.tr.i.cko.bi.d@gmail.com</a>
<a href=""mailto:d.rp.atr.ick.ob.i.d@gmail.com"">d.rp.atr.ick.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.ickob.id@gmail.com"">d.r.p.a.tr.ickob.id@gmail.com</a>
<a href=""mailto:d.rpa.tri.c.ko.bi.d@gmail.com"">d.rpa.tri.c.ko.bi.d@gmail.com</a>
<a href=""mailto:d.rpat.rickobid@gmail.com"">d.rpat.rickobid@gmail.com</a>
<a href=""mailto:d.rp.atri.c.ko.b.i.d@gmail.com"">d.rp.atri.c.ko.b.i.d@gmail.com</a>
<a href=""mailto:drpatr.i.ck.o.bid@gmail.com"">drpatr.i.ck.o.bid@gmail.com</a>
<a href=""mailto:d.rp.a.trick.obid@gmail.com"">d.rp.a.trick.obid@gmail.com</a>
<a href=""mailto:dr.pa.tr.i.c.k.o.bi.d@gmail.com"">dr.pa.tr.i.c.k.o.bi.d@gmail.com</a>
<a href=""mailto:d.r.p.a.t.r.i.c.k.ob.i.d@gmail.com"">d.r.p.a.t.r.i.c.k.ob.i.d@gmail.com</a>
<a href=""mailto:dr.p.at.ri.ckob.i.d@gmail.com"">dr.p.at.ri.ckob.i.d@gmail.com</a>
<a href=""mailto:dr.pat.r.i.cko.bid@gmail.com"">dr.pat.r.i.cko.bid@gmail.com</a>
<a href=""mailto:drp.a.tr.i.ck.ob.i.d@gmail.com"">drp.a.tr.i.ck.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.p.a.t.r.i.c.kob.i.d@gmail.com"">d.r.p.a.t.r.i.c.kob.i.d@gmail.com</a>
<a href=""mailto:d.r.patri.ck.obid@gmail.com"">d.r.patri.ck.obid@gmail.com</a>
<a href=""mailto:drp.a.t.rickob.i.d@gmail.com"">drp.a.t.rickob.i.d@gmail.com</a>
<a href=""mailto:d.r.pa.tricko.b.i.d@gmail.com"">d.r.pa.tricko.b.i.d@gmail.com</a>
<a href=""mailto:dr.patr.ickobi.d@gmail.com"">dr.patr.ickobi.d@gmail.com</a>
<a href=""mailto:d.rp.a.tri.c.k.o.b.i.d@gmail.com"">d.rp.a.tri.c.k.o.b.i.d@gmail.com</a>
<a href=""mailto:drp.at.ric.k.obid@gmail.com"">drp.at.ric.k.obid@gmail.com</a>
<a href=""mailto:d.rpat.rickob.i.d@gmail.com"">d.rpat.rickob.i.d@gmail.com</a>
<a href=""mailto:d.rpat.ri.ck.obid@gmail.com"">d.rpat.ri.ck.obid@gmail.com</a>
<a href=""mailto:d.rpa.tr.ick.o.b.id@gmail.com"">d.rpa.tr.ick.o.b.id@gmail.com</a>
<a href=""mailto:dr.pa.tr.ick.o.b.id@gmail.com"">dr.pa.tr.ick.o.b.id@gmail.com</a>
<a href=""mailto:d.rpatr.i.ck.o.b.id@gmail.com"">d.rpatr.i.ck.o.b.id@gmail.com</a>
<a href=""mailto:drp.atr.ic.kobi.d@gmail.com"">drp.atr.ic.kobi.d@gmail.com</a>
<a href=""mailto:d.r.pat.ri.c.kobi.d@gmail.com"">d.r.pat.ri.c.kobi.d@gmail.com</a>
<a href=""mailto:drp.a.tric.k.ob.i.d@gmail.com"">drp.a.tric.k.ob.i.d@gmail.com</a>
<a href=""mailto:dr.p.a.tric.k.obid@gmail.com"">dr.p.a.tric.k.obid@gmail.com</a>
<a href=""mailto:drp.a.tr.i.ck.obid@gmail.com"">drp.a.tr.i.ck.obid@gmail.com</a>
<a href=""mailto:d.r.pa.t.ric.ko.b.i.d@gmail.com"">d.r.pa.t.ric.ko.b.i.d@gmail.com</a>
<a href=""mailto:drp.at.r.i.c.k.o.b.id@gmail.com"">drp.at.r.i.c.k.o.b.id@gmail.com</a>
<a href=""mailto:dr.pa.tri.ck.o.bid@gmail.com"">dr.pa.tri.ck.o.bid@gmail.com</a>
<a href=""mailto:d.r.p.atr.i.cko.b.i.d@gmail.com"">d.r.p.atr.i.cko.b.i.d@gmail.com</a>
<a href=""mailto:drpatr.icko.bid@gmail.com"">drpatr.icko.bid@gmail.com</a>
<a href=""mailto:d.r.p.at.r.ic.k.ob.id@gmail.com"">d.r.p.at.r.ic.k.ob.id@gmail.com</a>
<a href=""mailto:dr.pa.tr.ickobi.d@gmail.com"">dr.pa.tr.ickobi.d@gmail.com</a>
<a href=""mailto:d.r.p.atr.i.c.k.ob.i.d@gmail.com"">d.r.p.atr.i.c.k.ob.i.d@gmail.com</a>
<a href=""mailto:d.rpatri.c.k.obid@gmail.com"">d.rpatri.c.k.obid@gmail.com</a>
<a href=""mailto:drp.a.tr.ick.obi.d@gmail.com"">drp.a.tr.ick.obi.d@gmail.com</a>
<a href=""mailto:dr.pat.ri.ck.ob.i.d@gmail.com"">dr.pat.ri.ck.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.p.at.r.i.ckob.id@gmail.com"">d.r.p.at.r.i.ckob.id@gmail.com</a>
<a href=""mailto:drpa.t.ri.cko.b.i.d@gmail.com"">drpa.t.ri.cko.b.i.d@gmail.com</a>
<a href=""mailto:d.r.p.at.r.ic.ko.b.i.d@gmail.com"">d.r.p.at.r.ic.ko.b.i.d@gmail.com</a>
<a href=""mailto:d.r.pa.tr.i.ckobi.d@gmail.com"">d.r.pa.tr.i.ckobi.d@gmail.com</a>
<a href=""mailto:dr.p.a.tri.ck.o.b.id@gmail.com"">dr.p.a.tri.ck.o.b.id@gmail.com</a>
<a href=""mailto:drp.a.trick.ob.id@gmail.com"">drp.a.trick.ob.id@gmail.com</a>
<a href=""mailto:dr.p.a.tr.icko.b.i.d@gmail.com"">dr.p.a.tr.icko.b.i.d@gmail.com</a>
<a href=""mailto:d.r.p.at.r.ic.k.o.b.i.d@gmail.com"">d.r.p.at.r.ic.k.o.b.i.d@gmail.com</a>
<a href=""mailto:drpa.tr.icko.bid@gmail.com"">drpa.tr.icko.bid@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.i.c.ko.bid@gmail.com"">d.r.p.a.tr.i.c.ko.bid@gmail.com</a>
<a href=""mailto:d.r.patr.i.c.k.o.bid@gmail.com"">d.r.patr.i.c.k.o.bid@gmail.com</a>
<a href=""mailto:drpa.t.r.i.c.ko.bi.d@gmail.com"">drpa.t.r.i.c.ko.bi.d@gmail.com</a>
<a href=""mailto:dr.p.at.r.i.cko.bi.d@gmail.com"">dr.p.at.r.i.cko.bi.d@gmail.com</a>
<a href=""mailto:dr.pa.tr.i.c.k.ob.i.d@gmail.com"">dr.pa.tr.i.c.k.ob.i.d@gmail.com</a>
<a href=""mailto:dr.pa.t.ri.c.k.obid@gmail.com"">dr.pa.t.ri.c.k.obid@gmail.com</a>
<a href=""mailto:dr.pa.t.r.ic.k.obid@gmail.com"">dr.pa.t.r.ic.k.obid@gmail.com</a>
<a href=""mailto:drp.a.tr.i.c.kobi.d@gmail.com"">drp.a.tr.i.c.kobi.d@gmail.com</a>
<a href=""mailto:drpa.tr.ick.obid@gmail.com"">drpa.tr.ick.obid@gmail.com</a>
<a href=""mailto:drp.a.tr.ick.o.bid@gmail.com"">drp.a.tr.ick.o.bid@gmail.com</a>
<a href=""mailto:dr.pa.t.r.i.c.ko.bi.d@gmail.com"">dr.pa.t.r.i.c.ko.bi.d@gmail.com</a>
<a href=""mailto:d.r.pat.ri.ckobid@gmail.com"">d.r.pat.ri.ckobid@gmail.com</a>
<a href=""mailto:dr.patr.i.cko.bid@gmail.com"">dr.patr.i.cko.bid@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.ic.k.o.bid@gmail.com"">d.r.p.a.tr.ic.k.o.bid@gmail.com</a>
<a href=""mailto:d.r.pa.tri.c.ko.b.id@gmail.com"">d.r.pa.tri.c.ko.b.id@gmail.com</a>
<a href=""mailto:d.rp.a.tr.i.c.ko.b.id@gmail.com"">d.rp.a.tr.i.c.ko.b.id@gmail.com</a>
<a href=""mailto:dr.pat.rickob.id@gmail.com"">dr.pat.rickob.id@gmail.com</a>
<a href=""mailto:d.r.pa.tricko.b.id@gmail.com"">d.r.pa.tricko.b.id@gmail.com</a>
<a href=""mailto:d.rp.a.t.rick.o.bid@gmail.com"">d.rp.a.t.rick.o.bid@gmail.com</a>
<a href=""mailto:drpatr.i.cko.b.i.d@gmail.com"">drpatr.i.cko.b.i.d@gmail.com</a>
<a href=""mailto:drpat.ri.ck.obid@gmail.com"">drpat.ri.ck.obid@gmail.com</a>
<a href=""mailto:dr.pa.t.ric.ko.b.id@gmail.com"">dr.pa.t.ric.ko.b.id@gmail.com</a>
<a href=""mailto:drp.a.t.ric.kob.i.d@gmail.com"">drp.a.t.ric.kob.i.d@gmail.com</a>
<a href=""mailto:d.rpa.tri.c.k.ob.id@gmail.com"">d.rpa.tri.c.k.ob.id@gmail.com</a>
<a href=""mailto:dr.patric.k.o.bid@gmail.com"">dr.patric.k.o.bid@gmail.com</a>
<a href=""mailto:dr.p.atr.i.cko.b.id@gmail.com"">dr.p.atr.i.cko.b.id@gmail.com</a>
<a href=""mailto:drpa.t.r.i.c.ko.bid@gmail.com"">drpa.t.r.i.c.ko.bid@gmail.com</a>
<a href=""mailto:drpatricko.b.i.d@gmail.com"">drpatricko.b.i.d@gmail.com</a>
<a href=""mailto:d.rpa.tr.i.c.ko.bid@gmail.com"">d.rpa.tr.i.c.ko.bid@gmail.com</a>
<a href=""mailto:drpatr.i.ckob.id@gmail.com"">drpatr.i.ckob.id@gmail.com</a>
<a href=""mailto:dr.pa.tr.ick.obid@gmail.com"">dr.pa.tr.ick.obid@gmail.com</a>
<a href=""mailto:d.r.p.a.tr.i.ck.ob.id@gmail.com"">d.r.p.a.tr.i.ck.ob.id@gmail.com</a>
<a href=""mailto:drpa.t.ri.c.k.obi.d@gmail.com"">drpa.t.ri.c.k.obi.d@gmail.com</a>
<a href=""mailto:dr.p.a.tri.ck.o.b.i.d@gmail.com"">dr.p.a.tri.ck.o.b.i.d@gmail.com</a>
<a href=""mailto:dr.p.at.ric.k.o.b.i.d@gmail.com"">dr.p.at.ric.k.o.b.i.d@gmail.com</a>
<a href=""mailto:dr.p.atr.i.ck.o.bid@gmail.com"">dr.p.atr.i.ck.o.bid@gmail.com</a>
<a href=""mailto:drp.a.tri.c.k.o.bid@gmail.com"">drp.a.tri.c.k.o.bid@gmail.com</a>
<a href=""mailto:dr.pa.t.ri.c.kobi.d@gmail.com"">dr.pa.t.ri.c.kobi.d@gmail.com</a>
<a href=""mailto:drpa.t.r.ickobid@gmail.com"">drpa.t.r.ickobid@gmail.com</a>
<a href=""mailto:d.rpa.tr.ic.ko.bid@gmail.com"">d.rpa.tr.ic.ko.bid@gmail.com</a>
<a href=""mailto:d.rp.at.r.i.cko.bid@gmail.com"">d.rp.at.r.i.cko.bid@gmail.com</a>
<a href=""mailto:drpa.t.ri.c.kobid@gmail.com"">drpa.t.ri.c.kobid@gmail.com</a>
<a href=""mailto:d.r.p.at.ricko.b.id@gmail.com"">d.r.p.at.ricko.b.id@gmail.com</a>
<a href=""mailto:d.r.p.a.tric.k.o.bid@gmail.com"">d.r.p.a.tric.k.o.bid@gmail.com</a>
<a href=""mailto:d.rp.a.t.ric.k.o.b.id@gmail.com"">d.rp.a.t.ric.k.o.b.id@gmail.com</a>
<a href=""mailto:drpatric.ko.bi.d@gmail.com"">drpatric.ko.bi.d@gmail.com</a>
<a href=""mailto:dr.patri.c.k.o.bid@gmail.com"">dr.patri.c.k.o.bid@gmail.com</a>
<a href=""mailto:d.rpa.tricko.b.i.d@gmail.com"">d.rpa.tricko.b.i.d@gmail.com</a>
<a href=""mailto:dr.p.at.r.i.cko.b.id@gmail.com"">dr.p.at.r.i.cko.b.id@gmail.com</a>
<a href=""mailto:drp.at.r.ick.obid@gmail.com"">drp.at.r.ick.obid@gmail.com</a>
<a href=""mailto:dr.p.a.t.r.ic.k.o.b.i.d@gmail.com"">dr.p.a.t.r.ic.k.o.b.i.d@gmail.com</a>
<a href=""mailto:drpa.t.ri.c.k.ob.id@gmail.com"">drpa.t.ri.c.k.ob.id@gmail.com</a>
<a href=""mailto:drpa.t.rick.o.bi.d@gmail.com"">drpa.t.rick.o.bi.d@gmail.com</a>
<a href=""mailto:d.r.pa.t.rick.ob.i.d@gmail.com"">d.r.pa.t.rick.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.pat.r.i.ck.o.bi.d@gmail.com"">d.r.pat.r.i.ck.o.bi.d@gmail.com</a>
<a href=""mailto:d.r.pat.r.i.ck.ob.i.d@gmail.com"">d.r.pat.r.i.ck.ob.i.d@gmail.com</a>
<a href=""mailto:d.r.p.at.r.i.c.kobi.d@gmail.com"">d.r.p.at.r.i.c.kobi.d@gmail.com</a>
<a href=""mailto:d.rp.atr.ick.o.b.id@gmail.com"">d.rp.atr.ick.o.b.id@gmail.com</a>
<a href=""mailto:dr.p.a.t.r.i.ckob.i.d@gmail.com"">dr.p.a.t.r.i.ckob.i.d@gmail.com</a>
<a href=""mailto:d.rpa.t.ri.ckob.id@gmail.com"">d.rpa.t.ri.ckob.id@gmail.com</a>
<a href=""mailto:dr.patr.ic.k.o.bi.d@gmail.com"">dr.patr.ic.k.o.bi.d@gmail.com</a>
<a href=""mailto:d.rpatr.i.c.kob.i.d@gmail.com"">d.rpatr.i.c.kob.i.d@gmail.com</a>
<a href=""mailto:drpat.ri.ckobi.d@gmail.com"">drpat.ri.ckobi.d@gmail.com</a>
<a href=""mailto:dr.patr.i.ckobi.d@gmail.com"">dr.patr.i.ckobi.d@gmail.com</a>
<a href=""mailto:d.rp.a.tr.i.c.k.ob.id@gmail.com"">d.rp.a.tr.i.c.k.ob.id@gmail.com</a>
<a href=""mailto:pa735105@gmail.com"">pa735105@gmail.com</a>
<a href=""mailto:p.a735.105@gmail.com"">p.a735.105@gmail.com</a>
<a href=""mailto:pa7.3.51.05@gmail.com"">pa7.3.51.05@gmail.com</a>
<a href=""mailto:p.a73.5.1.05@gmail.com"">p.a73.5.1.05@gmail.com</a>
<a href=""mailto:p.a73.5.1.0.5@gmail.com"">p.a73.5.1.0.5@gmail.com</a>
<a href=""mailto:pa73.5105@gmail.com"">pa73.5105@gmail.com</a>
<a href=""mailto:pa.73.5105@gmail.com"">pa.73.5105@gmail.com</a>
<a href=""mailto:pa73.51.05@gmail.com"">pa73.51.05@gmail.com</a>
<a href=""mailto:p.a7.3510.5@gmail.com"">p.a7.3510.5@gmail.com</a>
<a href=""mailto:pa.7.3.5105@gmail.com"">pa.7.3.5105@gmail.com</a>
<a href=""mailto:pa.7.35.1.05@gmail.com"">pa.7.35.1.05@gmail.com</a>
<a href=""mailto:p.a.735.1.05@gmail.com"">p.a.735.1.05@gmail.com</a>
<a href=""mailto:pa73.5.105@gmail.com"">pa73.5.105@gmail.com</a>
<a href=""mailto:pa7.35.10.5@gmail.com"">pa7.35.10.5@gmail.com</a>
<a href=""mailto:p.a.73.51.05@gmail.com"">p.a.73.51.05@gmail.com</a>
<a href=""mailto:pa7351.0.5@gmail.com"">pa7351.0.5@gmail.com</a>
<a href=""mailto:p.a73.51.0.5@gmail.com"">p.a73.51.0.5@gmail.com</a>
<a href=""mailto:pa.7.3.5.105@gmail.com"">pa.7.3.5.105@gmail.com</a>
<a href=""mailto:pa7.351.0.5@gmail.com"">pa7.351.0.5@gmail.com</a>
<a href=""mailto:p.a735.1.05@gmail.com"">p.a735.1.05@gmail.com</a>
<a href=""mailto:pa.7.35.105@gmail.com"">pa.7.35.105@gmail.com</a>
<a href=""mailto:p.a7351.05@gmail.com"">p.a7351.05@gmail.com</a>
<a href=""mailto:p.a7.351.0.5@gmail.com"">p.a7.351.0.5@gmail.com</a>
<a href=""mailto:p.a7.3.5105@gmail.com"">p.a7.3.5105@gmail.com</a>
<a href=""mailto:p.a.7.35.1.0.5@gmail.com"">p.a.7.35.1.0.5@gmail.com</a>
<a href=""mailto:p.a73.51.05@gmail.com"">p.a73.51.05@gmail.com</a>
<a href=""mailto:p.a73.5.105@gmail.com"">p.a73.5.105@gmail.com</a>
<a href=""mailto:pa.7.3.51.0.5@gmail.com"">pa.7.3.51.0.5@gmail.com</a>
<a href=""mailto:p.a7351.0.5@gmail.com"">p.a7351.0.5@gmail.com</a>
<a href=""mailto:p.a.73510.5@gmail.com"">p.a.73510.5@gmail.com</a>
<a href=""mailto:pa.7.3.5.1.0.5@gmail.com"">pa.7.3.5.1.0.5@gmail.com</a>
<a href=""mailto:p.a7.35105@gmail.com"">p.a7.35105@gmail.com</a>
<a href=""mailto:pa7.3.5105@gmail.com"">pa7.3.5105@gmail.com</a>
<a href=""mailto:pa.7351.0.5@gmail.com"">pa.7351.0.5@gmail.com</a>
<a href=""mailto:p.a.7.35.1.05@gmail.com"">p.a.7.35.1.05@gmail.com</a>
<a href=""mailto:pa.7.3.51.05@gmail.com"">pa.7.3.51.05@gmail.com</a>
<a href=""mailto:p.a.7.3.51.0.5@gmail.com"">p.a.7.3.51.0.5@gmail.com</a>
<a href=""mailto:pa7.3.51.0.5@gmail.com"">pa7.3.51.0.5@gmail.com</a>
<a href=""mailto:p.a7.3.5.1.0.5@gmail.com"">p.a7.3.5.1.0.5@gmail.com</a>
<a href=""mailto:pa.735105@gmail.com"">pa.735105@gmail.com</a>
<a href=""mailto:pa.73.5.1.0.5@gmail.com"">pa.73.5.1.0.5@gmail.com</a>
<a href=""mailto:p.a.7.35.105@gmail.com"">p.a.7.35.105@gmail.com</a>
<a href=""mailto:pa.735.1.0.5@gmail.com"">pa.735.1.0.5@gmail.com</a>
<a href=""mailto:p.a7.35.105@gmail.com"">p.a7.35.105@gmail.com</a>
<a href=""mailto:pa73.5.1.05@gmail.com"">pa73.5.1.05@gmail.com</a>
<a href=""mailto:p.a.735105@gmail.com"">p.a.735105@gmail.com</a>
<a href=""mailto:p.a73510.5@gmail.com"">p.a73510.5@gmail.com</a>
<a href=""mailto:p.a.735.10.5@gmail.com"">p.a.735.10.5@gmail.com</a>
<a href=""mailto:p.a.7.3.51.05@gmail.com"">p.a.7.3.51.05@gmail.com</a>
<a href=""mailto:pa.7.35.10.5@gmail.com"">pa.7.35.10.5@gmail.com</a>
<a href=""mailto:pa7.3.5.105@gmail.com"">pa7.3.5.105@gmail.com</a>
<a href=""mailto:p.a7.3.5.10.5@gmail.com"">p.a7.3.5.10.5@gmail.com</a>
<a href=""mailto:pa.73.5.10.5@gmail.com"">pa.73.5.10.5@gmail.com</a>
<a href=""mailto:pa.735.105@gmail.com"">pa.735.105@gmail.com</a>
<a href=""mailto:pa7.3.510.5@gmail.com"">pa7.3.510.5@gmail.com</a>
<a href=""mailto:p.a.735.105@gmail.com"">p.a.735.105@gmail.com</a>
<a href=""mailto:p.a.73.5.1.0.5@gmail.com"">p.a.73.5.1.0.5@gmail.com</a>
<a href=""mailto:p.a.7.3.5105@gmail.com"">p.a.7.3.5105@gmail.com</a>
<a href=""mailto:pa.73.510.5@gmail.com"">pa.73.510.5@gmail.com</a>
<a href=""mailto:p.a7.3.5.105@gmail.com"">p.a7.3.5.105@gmail.com</a>
<a href=""mailto:pa.7351.05@gmail.com"">pa.7351.05@gmail.com</a>
<a href=""mailto:pa.7.35.1.0.5@gmail.com"">pa.7.35.1.0.5@gmail.com</a>
<a href=""mailto:p.a7.3.51.0.5@gmail.com"">p.a7.3.51.0.5@gmail.com</a>
<a href=""mailto:p.a.7.3510.5@gmail.com"">p.a.7.3510.5@gmail.com</a>
<a href=""mailto:pa7.35.1.05@gmail.com"">pa7.35.1.05@gmail.com</a>
<a href=""mailto:p.a73.5.10.5@gmail.com"">p.a73.5.10.5@gmail.com</a>
<a href=""mailto:pa.73.5.1.05@gmail.com"">pa.73.5.1.05@gmail.com</a>
<a href=""mailto:pa.735.10.5@gmail.com"">pa.735.10.5@gmail.com</a>
<a href=""mailto:pa7.3510.5@gmail.com"">pa7.3510.5@gmail.com</a>
<a href=""mailto:pa735.1.0.5@gmail.com"">pa735.1.0.5@gmail.com</a>
<a href=""mailto:pa.73.51.05@gmail.com"">pa.73.51.05@gmail.com</a>
<a href=""mailto:pa7.351.05@gmail.com"">pa7.351.05@gmail.com</a>
<a href=""mailto:p.a.73.5.10.5@gmail.com"">p.a.73.5.10.5@gmail.com</a>
<a href=""mailto:pa.7.3.5.10.5@gmail.com"">pa.7.3.5.10.5@gmail.com</a>
<a href=""mailto:p.a.7.3.5.1.05@gmail.com"">p.a.7.3.5.1.05@gmail.com</a>
<a href=""mailto:pa735.10.5@gmail.com"">pa735.10.5@gmail.com</a>
<a href=""mailto:pa.73.51.0.5@gmail.com"">pa.73.51.0.5@gmail.com</a>
<a href=""mailto:p.a73.510.5@gmail.com"">p.a73.510.5@gmail.com</a>
<a href=""mailto:pa73.5.10.5@gmail.com"">pa73.5.10.5@gmail.com</a>
<a href=""mailto:p.a.7.3.5.105@gmail.com"">p.a.7.3.5.105@gmail.com</a>
<a href=""mailto:p.a.7351.05@gmail.com"">p.a.7351.05@gmail.com</a>
<a href=""mailto:p.a7.35.10.5@gmail.com"">p.a7.35.10.5@gmail.com</a>
<a href=""mailto:p.a.7.3.5.10.5@gmail.com"">p.a.7.3.5.10.5@gmail.com</a>
<a href=""mailto:pa.7.3.510.5@gmail.com"">pa.7.3.510.5@gmail.com</a>
<a href=""mailto:pa.7.3510.5@gmail.com"">pa.7.3510.5@gmail.com</a>
<a href=""mailto:pa.735.1.05@gmail.com"">pa.735.1.05@gmail.com</a>
<a href=""mailto:p.a7.3.51.05@gmail.com"">p.a7.3.51.05@gmail.com</a>
<a href=""mailto:p.a735105@gmail.com"">p.a735105@gmail.com</a>
<a href=""mailto:pa735.105@gmail.com"">pa735.105@gmail.com</a>
<a href=""mailto:p.a.7.351.05@gmail.com"">p.a.7.351.05@gmail.com</a>
<a href=""mailto:p.a.7.351.0.5@gmail.com"">p.a.7.351.0.5@gmail.com</a>
<a href=""mailto:p.a.73.5.105@gmail.com"">p.a.73.5.105@gmail.com</a>
<a href=""mailto:p.a.73.51.0.5@gmail.com"">p.a.73.51.0.5@gmail.com</a>
<a href=""mailto:p.a.73.5105@gmail.com"">p.a.73.5105@gmail.com</a>
<a href=""mailto:p.a7.3.510.5@gmail.com"">p.a7.3.510.5@gmail.com</a>
<a href=""mailto:pa7.3.5.1.0.5@gmail.com"">pa7.3.5.1.0.5@gmail.com</a>
<a href=""mailto:pa.7.35105@gmail.com"">pa.7.35105@gmail.com</a>
<a href=""mailto:pa735.1.05@gmail.com"">pa735.1.05@gmail.com</a>
<a href=""mailto:p.a.7.3.5.1.0.5@gmail.com"">p.a.7.3.5.1.0.5@gmail.com</a>
<a href=""mailto:p.a.7.35.10.5@gmail.com"">p.a.7.35.10.5@gmail.com</a>
<a href=""mailto:p.a.73.5.1.05@gmail.com"">p.a.73.5.1.05@gmail.com</a>
<a href=""mailto:pa.7.3.5.1.05@gmail.com"">pa.7.3.5.1.05@gmail.com</a>
<a href=""mailto:p.a7.351.05@gmail.com"">p.a7.351.05@gmail.com</a>
<a href=""mailto:pa.73510.5@gmail.com"">pa.73510.5@gmail.com</a>
<a href=""mailto:pa7.35105@gmail.com"">pa7.35105@gmail.com</a>
<a href=""mailto:pa73.51.0.5@gmail.com"">pa73.51.0.5@gmail.com</a>
<a href=""mailto:pa.73.5.105@gmail.com"">pa.73.5.105@gmail.com</a>
<a href=""mailto:p.a7.35.1.05@gmail.com"">p.a7.35.1.05@gmail.com</a>
<a href=""mailto:p.a.7351.0.5@gmail.com"">p.a.7351.0.5@gmail.com</a>
<a href=""mailto:p.a7.3.5.1.05@gmail.com"">p.a7.3.5.1.05@gmail.com</a>
<a href=""mailto:p.a.735.1.0.5@gmail.com"">p.a.735.1.0.5@gmail.com</a>
<a href=""mailto:pa735105@gmail.com"">pa735105@gmail.com</a>
<a href=""mailto:pa7.35.105@gmail.com"">pa7.35.105@gmail.com</a>
<a href=""mailto:pa73.510.5@gmail.com"">pa73.510.5@gmail.com</a>
<a href=""mailto:p.a.7.3.510.5@gmail.com"">p.a.7.3.510.5@gmail.com</a>
<a href=""mailto:p.a735.1.0.5@gmail.com"">p.a735.1.0.5@gmail.com</a>
<a href=""mailto:p.a73.5105@gmail.com"">p.a73.5105@gmail.com</a>
<a href=""mailto:pa73510.5@gmail.com"">pa73510.5@gmail.com</a>
<a href=""mailto:pa.7.351.05@gmail.com"">pa.7.351.05@gmail.com</a>
<a href=""mailto:pa73.5.1.0.5@gmail.com"">pa73.5.1.0.5@gmail.com</a>
<a href=""mailto:p.a.73.510.5@gmail.com"">p.a.73.510.5@gmail.com</a>
<a href=""mailto:pa7.35.1.0.5@gmail.com"">pa7.35.1.0.5@gmail.com</a>
<a href=""mailto:pa.7.351.0.5@gmail.com"">pa.7.351.0.5@gmail.com</a>
<a href=""mailto:p.a7.35.1.0.5@gmail.com"">p.a7.35.1.0.5@gmail.com</a>
<a href=""mailto:p.a.7.35105@gmail.com"">p.a.7.35105@gmail.com</a>
<a href=""mailto:pa7.3.5.10.5@gmail.com"">pa7.3.5.10.5@gmail.com</a>
<a href=""mailto:pa7351.05@gmail.com"">pa7351.05@gmail.com</a>
<a href=""mailto:p.a735.10.5@gmail.com"">p.a735.10.5@gmail.com</a>
<a href=""mailto:pa7.3.5.1.05@gmail.com"">pa7.3.5.1.05@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01@gmail.com"">barrjohnsonclifford01@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+2177@gmail.com"">barrjohnsonclifford01+2177@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+12186@gmail.com"">barrjohnsonclifford01+12186@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+6276@gmail.com"">barrjohnsonclifford01+6276@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+4156@gmail.com"">barrjohnsonclifford01+4156@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+5397@gmail.com"">barrjohnsonclifford01+5397@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+746@gmail.com"">barrjohnsonclifford01+746@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+24910@gmail.com"">barrjohnsonclifford01+24910@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+12131@gmail.com"">barrjohnsonclifford01+12131@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+3973@gmail.com"">barrjohnsonclifford01+3973@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+15906@gmail.com"">barrjohnsonclifford01+15906@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+29137@gmail.com"">barrjohnsonclifford01+29137@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+19641@gmail.com"">barrjohnsonclifford01+19641@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+20076@gmail.com"">barrjohnsonclifford01+20076@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+172@gmail.com"">barrjohnsonclifford01+172@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+9675@gmail.com"">barrjohnsonclifford01+9675@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+24293@gmail.com"">barrjohnsonclifford01+24293@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+1562@gmail.com"">barrjohnsonclifford01+1562@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+14345@gmail.com"">barrjohnsonclifford01+14345@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+11035@gmail.com"">barrjohnsonclifford01+11035@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+6167@gmail.com"">barrjohnsonclifford01+6167@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+1848@gmail.com"">barrjohnsonclifford01+1848@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+7133@gmail.com"">barrjohnsonclifford01+7133@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+12975@gmail.com"">barrjohnsonclifford01+12975@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+16102@gmail.com"">barrjohnsonclifford01+16102@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+1707@gmail.com"">barrjohnsonclifford01+1707@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+3971@gmail.com"">barrjohnsonclifford01+3971@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+30823@gmail.com"">barrjohnsonclifford01+30823@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+5759@gmail.com"">barrjohnsonclifford01+5759@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+25140@gmail.com"">barrjohnsonclifford01+25140@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+17172@gmail.com"">barrjohnsonclifford01+17172@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+1280@gmail.com"">barrjohnsonclifford01+1280@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+13666@gmail.com"">barrjohnsonclifford01+13666@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+14382@gmail.com"">barrjohnsonclifford01+14382@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+30996@gmail.com"">barrjohnsonclifford01+30996@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+17910@gmail.com"">barrjohnsonclifford01+17910@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+5037@gmail.com"">barrjohnsonclifford01+5037@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+5569@gmail.com"">barrjohnsonclifford01+5569@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+15311@gmail.com"">barrjohnsonclifford01+15311@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+17996@gmail.com"">barrjohnsonclifford01+17996@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+32147@gmail.com"">barrjohnsonclifford01+32147@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+4478@gmail.com"">barrjohnsonclifford01+4478@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+10532@gmail.com"">barrjohnsonclifford01+10532@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+10194@gmail.com"">barrjohnsonclifford01+10194@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+11586@gmail.com"">barrjohnsonclifford01+11586@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+8883@gmail.com"">barrjohnsonclifford01+8883@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+13749@gmail.com"">barrjohnsonclifford01+13749@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+22112@gmail.com"">barrjohnsonclifford01+22112@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+19091@gmail.com"">barrjohnsonclifford01+19091@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+7569@gmail.com"">barrjohnsonclifford01+7569@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+17114@gmail.com"">barrjohnsonclifford01+17114@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+32163@gmail.com"">barrjohnsonclifford01+32163@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+2213@gmail.com"">barrjohnsonclifford01+2213@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+4412@gmail.com"">barrjohnsonclifford01+4412@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+12015@gmail.com"">barrjohnsonclifford01+12015@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+31332@gmail.com"">barrjohnsonclifford01+31332@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+9326@gmail.com"">barrjohnsonclifford01+9326@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+5537@gmail.com"">barrjohnsonclifford01+5537@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+16562@gmail.com"">barrjohnsonclifford01+16562@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+21268@gmail.com"">barrjohnsonclifford01+21268@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+6254@gmail.com"">barrjohnsonclifford01+6254@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+32049@gmail.com"">barrjohnsonclifford01+32049@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+3479@gmail.com"">barrjohnsonclifford01+3479@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+12372@gmail.com"">barrjohnsonclifford01+12372@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+14354@gmail.com"">barrjohnsonclifford01+14354@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+22620@gmail.com"">barrjohnsonclifford01+22620@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+22746@gmail.com"">barrjohnsonclifford01+22746@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+16719@gmail.com"">barrjohnsonclifford01+16719@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+26305@gmail.com"">barrjohnsonclifford01+26305@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+21054@gmail.com"">barrjohnsonclifford01+21054@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+23191@gmail.com"">barrjohnsonclifford01+23191@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+26165@gmail.com"">barrjohnsonclifford01+26165@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+980@gmail.com"">barrjohnsonclifford01+980@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+18188@gmail.com"">barrjohnsonclifford01+18188@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+12909@gmail.com"">barrjohnsonclifford01+12909@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+28035@gmail.com"">barrjohnsonclifford01+28035@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+20966@gmail.com"">barrjohnsonclifford01+20966@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+24271@gmail.com"">barrjohnsonclifford01+24271@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+23532@gmail.com"">barrjohnsonclifford01+23532@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+8817@gmail.com"">barrjohnsonclifford01+8817@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+13880@gmail.com"">barrjohnsonclifford01+13880@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+4398@gmail.com"">barrjohnsonclifford01+4398@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+1467@gmail.com"">barrjohnsonclifford01+1467@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+2311@gmail.com"">barrjohnsonclifford01+2311@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+29249@gmail.com"">barrjohnsonclifford01+29249@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+27610@gmail.com"">barrjohnsonclifford01+27610@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+2347@gmail.com"">barrjohnsonclifford01+2347@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+16253@gmail.com"">barrjohnsonclifford01+16253@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+29195@gmail.com"">barrjohnsonclifford01+29195@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+27331@gmail.com"">barrjohnsonclifford01+27331@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+12711@gmail.com"">barrjohnsonclifford01+12711@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+25786@gmail.com"">barrjohnsonclifford01+25786@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+21867@gmail.com"">barrjohnsonclifford01+21867@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+13033@gmail.com"">barrjohnsonclifford01+13033@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+7485@gmail.com"">barrjohnsonclifford01+7485@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+15303@gmail.com"">barrjohnsonclifford01+15303@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+27617@gmail.com"">barrjohnsonclifford01+27617@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+3838@gmail.com"">barrjohnsonclifford01+3838@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+20964@gmail.com"">barrjohnsonclifford01+20964@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+5979@gmail.com"">barrjohnsonclifford01+5979@gmail.com</a>
<a href=""mailto:barrjohnsonclifford01+7574@gmail.com"">barrjohnsonclifford01+7574@gmail.com</a>"
wtqZ9iq7,Untitled,35657,C++,Friday 1st of December 2023 11:44:18 PM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <Windows.h>

using namespace std;

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	ifstream fin;
	fin.open(""C:/Users/PC/Desktop/file.txt"");

	ofstream fout;
	fout.open(""C:/Users/PC/Desktop/file2.txt"");

	if (!fin.is_open() || !fout.is_open()) {
		cout << ""Ошибка открытия файла"" << endl;
	}
	else {
		string str;

		getline(fin, str);
		if (!fin.eof()) {
			fout << str;
		}

		while (!fin.eof()) {
			getline(fin, str); 
			if (!fin.eof()) {
				fout << endl << str;
			}
		}
		fin.close();
		fout.close();
		remove(""C:/Users/PC/Desktop/file.txt""); // удаляем старый файл
		rename(""C:/Users/PC/Desktop/file2.txt"", ""C:/Users/PC/Desktop/file.txt""); // переименовываем новый файл (называем его именем старого)
	}
}"
Mm3sYqFE,Untitled,35657,C++,Friday 1st of December 2023 11:07:18 PM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <Windows.h>

using namespace std;

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	ifstream fin;
	fin.open(""C:/Users/PC/Desktop/file.txt"");

	ofstream fout;
	fout.open(""C:/Users/PC/Desktop/file2.txt"");

	if (!fin.is_open() || !fout.is_open()) {
		cout << ""Ошибка открытия файла"" << endl;
	}
	else {
		string str;
		while (!fin.eof()) {
			getline(fin, str); // считываем последовательность символов до перевода строки
			if (str != """") {
				fout << str << endl;
			}
		}
		fin.close();
		fout.close();
		remove(""C:/Users/PC/Desktop/file.txt""); // удаляем старый файл
		rename(""C:/Users/PC/Desktop/file2.txt"", ""C:/Users/PC/Desktop/file.txt""); // переименовываем новый файл (называем его именем старого)
	}
}"
rG4p3EDb,Untitled,35657,C++,Friday 1st of December 2023 10:30:42 PM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <Windows.h>

using namespace std;

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	ifstream fin;
	fin.open(""C:/Users/PC/Desktop/file.txt"");

	ofstream fout;
	fout.open(""C:/Users/PC/Desktop/file2.txt"");

	if (!fin.is_open() || !fout.is_open()) {
		cout << ""Ошибка открытия файла"" << endl;
	}
	else {
		int del;
		cout << ""Введите номер строки для удаления: "";
		cin >> del;
		int current = 1;
		string str;

		while (!fin.eof()) {
			//fin >> str; // считываем последовательность символов до первого пробела
			getline(fin, str); // считываем последовательность символов до перевода строки
			if (current != del) {
				fout << str << endl;
			}
			current++;
		}
		fin.close();
		fout.close();
		remove(""C:/Users/PC/Desktop/file.txt""); // удаляем старый файл
		rename(""C:/Users/PC/Desktop/file2.txt"", ""C:/Users/PC/Desktop/file.txt""); // переименовываем новый файл (называем его именем старого)
	}
}"
TEDZhWZW,гск4,SyrexLee,C#,Friday 1st of December 2023 10:23:21 PM CDT,"using System.Drawing;
using System.Windows.Forms.Design;

namespace gsk4
{
    public partial class Form1 : Form
    {
        // Инициализация переменных и объектов
        Bitmap myBitmap;
        Graphics g;
        Pen DrawPen = new Pen(Color.Black, 1);
        List<Point> VertexList = new List<Point>(); // для отрисовки сторон
        Pgn NewPgn = new Pgn();
        int Operation = -1;
        bool checkPgn = false;
        Point pictureBox1MousePos = new Point();

        // Конструктор формы
        public Form1()
        {
            InitializeComponent();
            // Создание битмапа и объекта Graphics
            myBitmap = new Bitmap(pictureBox1.Width, pictureBox1.Height);
            g = Graphics.FromImage(myBitmap);
        }

        // Метод для ввода вершин многоугольника
        private void InputPgn(MouseEventArgs e)
        {
            Point NewP = new Point() { X = e.X, Y = e.Y };
            VertexList.Add(NewP);
            NewPgn.Add(NewP);
            int k = VertexList.Count();
            if (k > 1)
                g.DrawLine(DrawPen, VertexList[k - 2], VertexList[k - 1]);
            else
                g.DrawRectangle(DrawPen, e.X, e.Y, 1, 1);

            if (e.Button == MouseButtons.Right) // Конец ввода
            {
                g.DrawLine(new Pen(Color.Blue), VertexList[k - 1], VertexList[0]);
                VertexList.Clear();
                NewPgn.Fill(g, DrawPen);
                return;
            }
        }

        // Обработчик события нажатия кнопки мыши на PictureBox
        private void pictureBox1_MouseDown(object sender, MouseEventArgs e)
        {
            pictureBox1MousePos = e.Location;
            switch (Operation)
            {
                case -1: // ввод вершин и рисование
                    {
                        InputPgn(e);
                        if (e.Button == MouseButtons.Right)
                            Operation = -2;
                    }
                    break;
                case 0: // выделение многоугольника
                    if (NewPgn.ThisPgn(e.X, e.Y))
                    {
                        //g.DrawEllipse(new Pen(Color.Blue), e.X - 2, e.Y - 2, 5, 5);
                        checkPgn = true;
                    }
                    else
                        checkPgn = false;
                    break;
                case 1:
                    NewPgn.Rotation((int)numericUpDown1.Value);
                    g.Clear(pictureBox1.BackColor);
                    NewPgn.Fill(g, DrawPen); // перерисовка
                    pictureBox1.Image = myBitmap;
                    break;
                case 2:
                    NewPgn.Scale((float)numericUpDown2.Value);
                    g.Clear(pictureBox1.BackColor);
                    NewPgn.Fill(g, DrawPen); // перерисовка
                    pictureBox1.Image = myBitmap;
                    break;
            }
            // копирование из myBitmap в pictureBox1.Image
            pictureBox1.Image = myBitmap;
        }

        // Обработчик события перемещения мыши по PictureBox
        private void pictureBox1_MouseMove(object sender, MouseEventArgs e)
        {
            if (e.Button == System.Windows.Forms.MouseButtons.Left)
            {
                if (Operation == 0 & checkPgn)
                {
                    NewPgn.Move(e.X - pictureBox1MousePos.X, e.Y - pictureBox1MousePos.Y);
                    g.Clear(pictureBox1.BackColor);
                    NewPgn.Fill(g, DrawPen); // перерисовка
                    pictureBox1.Image = myBitmap;
                    pictureBox1MousePos = e.Location;
                }
            }
        }

        // Обработчик изменения выбранного цвета
        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            switch (comboBox1.SelectedIndex) // выбор цвета
            {
                case 0:
                    DrawPen.Color = Color.Black;
                    break;
                case 1:
                    DrawPen.Color = Color.Red;
                    break;
                case 2:
                    DrawPen.Color = Color.Green;
                    break;
                case 3:
                    DrawPen.Color = Color.Blue;
                    break;
            }
        }

        // Обработчик изменения выбранной операции
        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e)
        {
            switch (comboBox2.SelectedIndex) // выбор операции
            {
                case 0:
                    label1.Visible = false;
                    numericUpDown1.Visible = false;
                    label2.Visible = false;
                    numericUpDown2.Visible = false;
                    Operation = 0;
                    break;
                case 1:
                    label2.Visible = false;
                    numericUpDown2.Visible = false;
                    label1.Visible = true;
                    numericUpDown1.Visible = true;
                    Operation = 1;
                    break;
                case 2:
                    label1.Visible = false;
                    numericUpDown1.Visible = false;
                    label2.Visible = true;
                    numericUpDown2.Visible = true;
                    Operation = 2;
                    break;
            }
        }

        // Обработчик кнопки ""Очистить""
        private void button2_Click(object sender, EventArgs e)
        {
            pictureBox1.Image = myBitmap;
            g.Clear(pictureBox1.BackColor);
            NewPgn.Clear();
            Operation = -1;
        }

        // Обработчик изменения размера формы
        private void Form1_SizeChanged(object sender, EventArgs e)
        {
            myBitmap = new Bitmap(pictureBox1.Width, pictureBox1.Height);
            g = Graphics.FromImage(myBitmap);
        }
    }

    // Класс для представления многоугольника (Pgn)
    class Pgn
    {
        List<PointF> VertexList; // список вершин фигуры
        Point centre = new Point(); // центр фигуры
        bool fl_centre = true; // переменная используемая для нахождения центра фигуры

        // Конструктор класса Pgn
        public Pgn()
        {
            VertexList = new List<PointF>();
        }

        // Метод добавления вершины в список
        public void Add(Point NewVertex)
        {
            VertexList.Add(NewVertex);
        }

        // Метод для вывода закрашенного многоугольника с помощью g.FillPolygon
        public void Fill(Graphics g, Pen DrawPen)
        {
            Brush DrawBrush = new SolidBrush(DrawPen.Color);
            int n = VertexList.Count() - 1;
            Point[] PgVertex = new Point[VertexList.Count()]; // массив вершин
            for (int i = 0; i <= n; i++)
            {
                PgVertex[i].X = (int)Math.Round(VertexList[i].X);
                PgVertex[i].Y = (int)Math.Round(VertexList[i].Y);
            }
            g.FillPolygon(DrawBrush, PgVertex);
            
            if (fl_centre) // нахождение центра фигуры
            {
                find_centre();
                fl_centre = false;
            }
            //g.DrawEllipse(new Pen(Color.Red), centre.X - 5, centre.Y - 5, 10, 10);
        }

        // Метод для выделения многоугольника
        public bool ThisPgn(int mX, int mY)
        {
            int n = VertexList.Count() - 1, k = 0, m = 0;
            PointF Pi, Pk; double x;
            bool check = false;
            for (int i = 0; i <= n; i++)
            {
                if (i < n) k = i + 1; else k = 0;
                Pi = VertexList[i]; Pk = VertexList[k];
                if ((Pi.Y < mY) & (Pk.Y >= mY) | (Pi.Y >= mY) & (Pk.Y < mY))
                    if ((mY - Pi.Y) * (Pk.X - Pi.X) / (Pk.Y - Pi.Y) + Pi.X < mX) m++;
            }
            if (m % 2 == 1) check = true;
            return check;
        }

        // Метод для плоско-параллельного перемещения
        public void Move(int dx, int dy)
        {
            int n = VertexList.Count() - 1;
            PointF fP = new PointF();
            for (int i = 0; i <= n; i++)
            {
                fP.X = VertexList[i].X + dx;
                fP.Y = VertexList[i].Y + dy;
                VertexList[i] = fP;
            }
            centre.X = centre.X + dx; // перемещение центра
            centre.Y = centre.Y + dy;
        }

        // Метод для масштабирования
        public void Scale(float k)
        {
            int dx = centre.X;
            int dy = centre.Y;
            PointF fP = new PointF();
            for (int i = 0; i < VertexList.Count; i++)
            {
                if (k < 0) // уменьшение
                {
                    fP.X = (VertexList[i].X - dx) / (-1 * k) + dx;
                    fP.Y = (VertexList[i].Y - dy) / (-1 * k) + dy;
                }
                else // увеличение
                {
                    fP.X = (VertexList[i].X - dx) * k + dx;
                    fP.Y = (VertexList[i].Y - dy) * k + dy;
                }
                VertexList[i] = fP;
            }
        }

        // Метод для вращения
        public void Rotation(int g)
        {
            int x = centre.X;
            int y = centre.Y;
            PointF fP = new PointF();
            double angleRadian = g * Math.PI / 180; // переводим угол в радианы

            for (int j = 0; j < VertexList.Count(); j++)
            {
                fP.X = (float)((VertexList[j].X - x) * Math.Cos(angleRadian) - (VertexList[j].Y - y) *
                    Math.Sin(angleRadian) + x);
                fP.Y = (float)((VertexList[j].X - x) * Math.Sin(angleRadian) + (VertexList[j].Y - y) *
                    Math.Cos(angleRadian) + y);
                VertexList[j] = fP;
            }
            fP.X = (float)((centre.X - x) * Math.Cos(angleRadian) - (centre.Y - y) * Math.Sin(angleRadian) + x);
            fP.Y = (float)((centre.X - x) * Math.Sin(angleRadian) + (centre.Y - y) * Math.Cos(angleRadian) + y);
            centre.X = Convert.ToInt32(fP.X); // вращение центра
            centre.Y = Convert.ToInt32(fP.Y);
        }

        // Метод для нахождения центра фигуры
        public void find_centre()
        {
            float xmax = VertexList[0].X;
            float xmin = VertexList[0].X;
            float ymax = VertexList[0].Y;
            float ymin = VertexList[0].Y;
            for (int i = 1; i < VertexList.Count; i++)
            {
                if (xmax <= VertexList[i].X)
                    xmax = VertexList[i].X;
                if (ymax <= VertexList[i].Y)
                    ymax = VertexList[i].Y;
                if (xmin >= VertexList[i].X)
                    xmin = VertexList[i].X;
                if (ymin >= VertexList[i].Y)
                    ymin = VertexList[i].Y;
            }
            centre.X = (Convert.ToInt32(xmax) - Convert.ToInt32(xmin)) / 2 + Convert.ToInt32(xmin);
            centre.Y = (Convert.ToInt32(ymax) - Convert.ToInt32(ymin)) / 2 + Convert.ToInt32(ymin);
        }

        // Метод для очистки списка вершин
        public void Clear()
        {
            VertexList.Clear();
            centre = new Point();
            fl_centre = true;
        }
    }
}"
