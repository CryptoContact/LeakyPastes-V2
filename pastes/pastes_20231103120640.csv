id,title,username,language,date,content
HnPyJ1WA,data741,TestGuy1,JSON,Friday 3rd of November 2023 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'ab0e17616591dd018ab14fcaa5b2e37c4deedb42f7184405e7d7616153153f110b8a933192183c00bb911c65a4e8c987c784aea8aaec63aa40436f65b46e8a846322cfc69dfcf37e34c2ef9f03fe1927f3428d5353c279d591d8d79c78aca46600a2817a513ec37a695d251a3f4fafc9708a6351db6f3f4a5c57b17dc364f728',
  otherdata: [
    '18ca99963627a82b82779b882a8c3914',
    '08144ca811401b3d4e97a236dd008c5a',
    'b778b971966c041149015a9682488ae1',
    '7ebc729ce5184248806e0504bcd8b3aa',
    '720a19de1eea916ab6f8945c2da2ca62',
    'a200c21ba2c325e174cb6f650e371a96',
    '2a523ee10bedff2e431e2a0dca99c990',
    '946d800308c6f47cf453d7ab30bcfd34'
  ]
}"
te323YBH,Untitled,kwest87,C#,Friday 3rd of November 2023 06:57:31 AM CDT,"[StartCode]
using System;

namespace ConsoleApp29
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int startNumber = 2;
            int multipleNumber = startNumber;
            int degreeNumber = 1;
            int minimumNumber = 1;
            int maximumNumber = 100;
            int numberRandom = random.Next(minimumNumber, maximumNumber);

            while (startNumber<=numberRandom)
            {
                startNumber *= multipleNumber;
                degreeNumber++;
            }

            Console.WriteLine($""Полученное случайное число - {numberRandom} , оно меньше чем минимальная степень {multipleNumber} в степени {degreeNumber} или {startNumber}"");
        }
    }
}
[EndCode]"
63yMyqQT,Untitled,3o_3v,Java,Friday 3rd of November 2023 06:49:02 AM CDT,"package com.example.reactive;

import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import reactor.core.publisher.BaseSubscriber;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
import reactor.core.scheduler.Scheduler;
import reactor.core.scheduler.Schedulers;

import java.util.Random;

@SpringBootApplication
public class ReactiveApplication {

    public static void main(String[] args) {
        SpringApplication.run(ReactiveApplication.class, args);
    }

    @Bean
    public CommandLineRunner runner() {
        return (args) -> hardAndEasy();
    }

    public void hardAndEasy() throws InterruptedException {
        Flux<Integer> publisher = Flux.just(2, 4, -2, 0, 9);
        Scheduler hard = Schedulers.newParallel(""hard"", 10);
        Scheduler easy = Schedulers.newParallel(""easy"", 2);
        Flux<Integer> result = publisher
                .publishOn(easy)
                .doOnNext((x) -> System.out.println(""easy: "" + Thread.currentThread().getName()))
                .flatMap(number -> {
                    Random random = new Random();
                    int randomDelay = random.nextInt(3000);
                    return Mono.just(number)
                            .subscribeOn(hard)
                            .doOnNext((x) -> System.out.println(""hard: "" + Thread.currentThread().getName()))
                            // hard work
                            .delayElement(java.time.Duration.ofMillis(randomDelay))
                            .map(x -> x * x);
                })
                .publishOn(easy);
        result
                .doOnNext((x) -> System.out.println(""result: "" + Thread.currentThread().getName()))
                .subscribe(System.out::println);
        Thread.sleep(5000);
        easy.dispose();
        hard.dispose();
    }

    public void saveOrder() throws InterruptedException {
        Flux<Integer> publisher = Flux.just(2, 4, -2, 0, 9);
        Scheduler s = Schedulers.parallel();
        Flux<Integer> result = publisher
                .doOnNext((x) -> System.out.println(""Processing: "" + x))
                .flatMapSequential(number -> {
                    Random random = new Random();
                    int randomDelay = random.nextInt(3000);
                    return Mono.just(number)
                        .subscribeOn(s)
                        // hard work
                        .delayElement(java.time.Duration.ofMillis(randomDelay))
                        .map(x -> x * x);
        });
        result.publishOn(Schedulers.single())
                .subscribe(System.out::println);
        Thread.sleep(5000);
        s.dispose();
    }

    private void A() {
        Flux.<String>generate((sink) -> {
            sink.next(""Hello"");
        })
                .take(4)
                .subscribe(System.out::println);
    }

    private void B() {
        Flux.generate(
                () -> 1,
                (state, sink) -> {
                    if (state > 5) {
                        sink.complete();
                    }
                    sink.next(state);
                    return state + 1;
                }).subscribe(System.out::println);
    }

    private void C() {
        Flux<Object> publisher = getSomePublisher();

        Flux.create(sink -> publisher.subscribe(new BaseSubscriber<>() {
            @Override
            protected void hookOnNext(Object value) {
                sink.next(value);
            }

            @Override
            protected void hookOnComplete() {
                sink.complete();
            }
        })).subscribe(System.out::println);
    }

    public void D() {
        Flux<Object> publisher = getSomePublisher();

        Flux.create(sink -> {
            sink.onRequest(r -> {
                sink.next(""DB returns: "" + publisher.blockFirst());
            });
        }).subscribe(System.out::println);
    }

    public void firstChain() {
        // первый дженерик - отвечает за то что выдаем, второй - за то, что есть state
        Flux<Integer> a = Flux.<Integer, Integer>generate(() -> 0,
                (state, sink) -> {
                    if (state > 5) sink.complete();
                    sink.next(state);
                    return state + 1;
                })
                .doOnNext(i -> System.out.println(""Before: "" + Thread.currentThread().getName()))
                .publishOn(Schedulers.newParallel(""test""))
                .doOnNext(i -> System.out.println(""After: "" + Thread.currentThread().getName()))
                .map(i -> {
                    System.out.println(""In map: ""  + Thread.currentThread().getName());
                    return i * i;
                });

        a.subscribe((i) -> {
            System.out.println(""In subscriber: "" + Thread.currentThread().getName());
        });
    }

    public void secondChain() {
        Flux<Integer> a = Flux.<Integer, Integer>generate(() -> 0,
                        (state, sink) -> {
                            if (state > 5) sink.complete();
                            sink.next(state);
                            return state + 1;
                        })
                .doOnNext(i -> System.out.println(""Before: "" + Thread.currentThread().getName()))
                //.subscribeOn(Schedulers.newParallel(""subs_1""))
                //.publishOn(Schedulers.newParallel(""test""))
                .doOnNext(i -> System.out.println(""After: "" + Thread.currentThread().getName()))
                .map(i -> {
                    System.out.println(""In map: ""  + Thread.currentThread().getName());
                    return i * i;
                })
                .subscribeOn(Schedulers.newParallel(""subs_2""));

        a.subscribe((i) -> {
            System.out.println(""In subscriber: "" + Thread.currentThread().getName());
        });
    }

    private Flux<Object> getSomePublisher() {
        return Flux.generate(
                () -> 0,
                (state, sink) -> {
                    if (state > 5) sink.complete();
                    sink.next(state + "";"");
                    return state + 1;
                }
        );
    }
}
"
Qyscqknn,Untitled,kwest87,C#,Friday 3rd of November 2023 06:48:48 AM CDT,"[StartCode]
using System;

namespace ConsoleApp27
{
    internal class Program
    {
        static void Main(string[] args)
        {
            bool isWork = true;
            int attempt = 3;
            string password = ""777"";
            string input;

            if (isWork == false)
            {
                for (int i = 0; i < attempt; i++)
                {
                    Console.Clear();
                    Console.WriteLine($""Введите пароль , попыток осталось : {attempt - i}"");
                    Console.Write(""ПАРОЛЬ : "");
                    input = Console.ReadLine();

                    if (password == input)
                    {
                        Console.WriteLine(""Секретные данные"");
                        isWork = false;
                    }
                    else
                    {
                        Console.WriteLine(""Пароль не верный"");
                        Console.ReadKey();
                    }
                }
            }
        }
    }
}
[EndCode]"
g9mxZgyj,Untitled,kwest87,C#,Friday 3rd of November 2023 06:35:22 AM CDT,"[StartCode]
using System;

namespace ConsoleApp26
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string edging = """";
            int numberEdging = 2;
            Console.Write(""Введите ваше имя : "");
            string name = Console.ReadLine();
            Console.Write(""Введите символ : "");
            char symbol = Console.ReadKey().KeyChar;
            Console.WriteLine();
            numberEdging += name.Length;

            for (int i = 0; i < numberEdging; i++)
            {
                edging = edging + symbol.ToString();
            }

            Console.WriteLine(edging);
            Console.WriteLine(symbol + name + symbol);
            Console.WriteLine(edging);
        }
    }
}
[EndCode]"
ANnM4rHB,send-media,vampire0817,Python,Friday 3rd of November 2023 06:25:21 AM CDT,"import csv
import requests
import time
import threading
from queue import Queue

api_url = ""https://repy.in/send-media""
jwt_token = ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFscGhhQGdtYWlsLmNvbSIsImNsaW5lSWQiOiJkcmI2ZGxjdTYzdHBoenMiLCJpYXQiOjE2OTg5ODk2OTJ9.Tm0h_GLDgnIKr2kbfwBgRvUepl6NEdS22v0rqmnzjvk""

# Function to send media to a phone number
def send_media(phone, media_url):
    headers = {
        ""Authorization"": f""Bearer {jwt_token}"",
        ""Content-Type"": ""application/json"",
    }

    payload = {
        ""phone"": phone,
        ""mediaUrl"": media_url,
    }

    retries = 3
    success = False
    while retries > 0:
        response = requests.post(api_url, json=payload, headers=headers)

        if response.status_code == 200:
            success = True
            print(f""Media sent to {phone} successfully"")
            break
        else:
            try:
                error_message = response.json()[""message""]
                print(f""Failed to send media to {phone}. Error message: {error_message}"")
            except:
                print(f""Failed to send media to {phone}. Unable to parse error message."")
            retries -= 1
            time.sleep(1)  # Wait for 1 second before retrying

    if not success:
        # Append the failed data to a CSV file
        with open(""failed_records.csv"", ""a"", newline="""") as file:
            writer = csv.writer(file)
            writer.writerow([phone, media_url])
            
# Function to process the CSV file
def process_csv():
    processed_phones = set()  # To keep track of processed phone numbers
    while not csv_queue.empty():
        phone, media_url = csv_queue.get()
        if phone not in processed_phones:
            send_media(phone, media_url)
            processed_phones.add(phone)
        csv_queue.task_done()

# Limit API calls to 40 per minute
def throttle_api_calls():
    while not csv_queue.empty():
        for _ in range(40):
            if not csv_queue.empty():
                phone, media_url = csv_queue.get()
                send_media(phone, media_url)
                csv_queue.task_done()
            else:
                break

# Read phone numbers and media URLs from a CSV file
csv_file = ""demo.csv""

csv_queue = Queue()
with open(csv_file, ""r"") as file:
    reader = csv.DictReader(file)
    for row in reader:
        phone = row[""phone""]
        media_url = row[""mediaUrl""]
        csv_queue.put((phone, media_url))

# Start a separate thread to limit API calls
api_thread = threading.Thread(target=throttle_api_calls)
api_thread.start()

# Process the CSV file
process_csv()

# Wait for the API thread and CSV processing to finish
api_thread.join()
csv_queue.join()"
2CKbBCCD,XPFarm,Kohjin,Lua,Friday 3rd of November 2023 05:42:04 AM CDT,"settings = {
    [""attacks""] = 64,
    [""valuable""] = { ""TConstruct:materials"", ""TConstruct:heartCanister"", ""minecraft:skull"", ""OpenBlocks:trophy"" }
}
 
function inList(list, item)
  for index, value in ipairs(list) do
    if value == item then
      return true
    end
  end
  return false
end
 
function depositItems()
  for i=1, 16 do
    if turtle.getItemCount(i) ~= 0 then
       local data = turtle.getItemDetail(i)
       print(""Slot: "" .. i .. "" | Item: "" .. data.name)
       
       turtle.select(i)
       
       if inList(settings.valuable, data.name) then
        print(""Valuable!"")
        turtle.turnRight()
        turtle.turnRight()
        turtle.drop()   
        turtle.turnLeft()
        turtle.turnLeft()     
       end
       
       if data.name == ""minecraft:coal"" then
         turtle.turnRight()
         turtle.drop()
         turtle.turnLeft()
       end
       
       if data.name == ""minecraft:bone"" then
          turtle.turnLeft()
          turtle.drop()
          turtle.turnRight()       
       end
       
       if data.name == ""ThermalFoundation:material"" then
          turtle.dropDown()     
       end
    end
  end
end
 
while true do
  print(""Attacking..."")
  for i=1, settings.attacks do
    turtle.attack()
    sleep(0)
  end
 
  print(""Collecting... Sorting..."")
  turtle.suck()
  turtle.suck()
  turtle.suck()
  turtle.suck()
  depositItems()
  
  turtle.select(1)

  sleep(0)
end"
b53Se2J7,Untitled,Arkess,HTML,Friday 3rd of November 2023 05:25:38 AM CDT,"<!-- ADG Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MGN845WH');</script>
<!-- End Google Tag Manager -->"
EtN15sdD,SP Rupok,s4elim,Python,Friday 3rd of November 2023 05:21:40 AM CDT,"import cv2
import mediapipe as mp
import pyautogui

cap = cv2.VideoCapture(0)
hand_detector = mp.solutions.hands.Hands()
drawing_utils = mp.solutions.drawing_utils

# Get screen size
screen_width, screen_height = pyautogui.size()

# Initialize index coordinates
index_x = 0
index_y = 0

while True:
    _, frame = cap.read()
    frame = cv2.flip(frame, 1)
    frame_height, frame_width, _ = frame.shape
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    output = hand_detector.process(rgb_frame)
    hands = output.multi_hand_landmarks

    if hands:
        for hand in hands:
            drawing_utils.draw_landmarks(frame, hand)
            landmarks = hand.landmark

            for id, landmark in enumerate(landmarks):
                x = int(landmark.x * frame_width)
                y = int(landmark.y * frame_height)

                if id == 8:  # Index finger tip
                    cv2.circle(img=frame, center=(x, y), radius=10, color=(0, 255, 255))
                    index_x = int(screen_width / frame_width * x)
                    index_y = int(screen_height / frame_height * y)

                if id == 4:  # Thumb tip
                    cv2.circle(img=frame, center=(x, y), radius=10, color=(0, 255, 255))
                    thumb_x = int(screen_width / frame_width * x)
                    thumb_y = int(screen_height / frame_height * y)

                    # Check for a click if thumb is close to the index finger
                    if abs(index_x - thumb_x) < 20 and abs(index_y - thumb_y) < 20:
                        pyautogui.click()
                    else:
                        # Move the mouse cursor to the index finger's position
                        pyautogui.moveTo(index_x, index_y)

    cv2.imshow('Virtual Mouse', frame)

    # Exit the loop if the 'q' key is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the camera and close OpenCV window
cap.release()
cv2.destroyAllWindows()
"
y7UGuEYC,Find which shared libraries an ELF binary depends on,Tritonio,Bash,Friday 3rd of November 2023 05:16:01 AM CDT,readelf -d luajit | grep NEEDED
MDyBB5Lg,scrapy_phone_spider,ystefanova,Python,Friday 3rd of November 2023 05:09:23 AM CDT,"import scrapy

from technopolis_scraper.items import SmartphoneItem

main_categories = {}
sub_categories = {}


def get_all_main_categories(response):
    main_categories_url = response.css("".item .item-link-wrap"")
    for main_category in main_categories_url:
        main_category_name = main_category.css(""a"").attrib[""title""]
        main_category_url = (
                ""https://www.technopolis.bg"" + main_category.css(""a"").attrib[""href""]
        )
        main_categories[main_category_name] = main_category_url


def get_target_main_category_url(keywords):
    for main_category in main_categories:
        for keyword in keywords:
            if keyword in main_category:
                return main_categories[main_category]

    return ""NOT FOUND""


class PhoneSpiderSpider(scrapy.Spider):
    name = ""phone_spider""
    allowed_domains = [""www.technopolis.bg""]
    start_urls = [""https://www.technopolis.bg""]

    custom_settings = {
        ""FEEDS"": {""phones_data_new.csv"": {""format"": ""csv"", ""overwrite"": True}}
    }

    keywords = [""телефон"", ""смартфон""]
    # keywords = [""Компютри"", ""Настолни""]

    def parse(self, response):
        get_all_main_categories(response)
        target_main_category_url = get_target_main_category_url(self.keywords)

        yield response.follow(
            target_main_category_url, callback=self.parse_main_category_page
        )

    def parse_main_category_page(self, response):
        target_sub_category_url = None
        sub_categories_url = response.css(""figcaption"")
        for sub_category in sub_categories_url:
            sub_category_name = sub_category.css(""a::text"").get()
            sub_category_url = (
                    ""https://www.technopolis.bg"" + sub_category.css(""a"").attrib[""href""]
            )

            for keyword in self.keywords:
                if keyword in sub_category_name:
                    target_sub_category_url = sub_category_url
                    break

            if target_sub_category_url:
                break

        yield response.follow(
            target_sub_category_url, callback=self.parse_sub_category_page
        )

    def parse_sub_category_page(self, response):

        phones_count = int(response.css(""span.highlight ::text"").get())
        phones = response.css(""h3>a"")

        for phone in phones:
            relative_url = phone.css(""a::attr('href')"").get()
            phone_url = ""https://www.technopolis.bg"" + relative_url

            yield response.follow(phone_url, callback=self.parse_phone_page)

        print(100 * ""*"")
        print(""Phones count:"", phones_count)
        print(100 * ""*"")

    def parse_phone_page(self, response):
        def clean_price(lev, stotinki):
            if not lev and not stotinki:
                return ""null""
            return lev + ""."" + stotinki

        phone = response.css("".product-block"")
        current_price_lev = phone.css("".price-value::text"").get()
        current_price_stotinki = phone.css("".price-value>sup::text"").get()
        old_price_lev = phone.css("".old-price .price-value::text"").get()
        old_price_stotinki = phone.css("".old-price .price-value >sup::text"").get()

        phone_item = SmartphoneItem()

        phone_item[""name""] = phone.css('h1.product-name::text').get()
        phone_item[""current_price""] = clean_price(current_price_lev, current_price_stotinki)
        phone_item[""old_price""] = clean_price(old_price_lev, old_price_stotinki)
        phone_item[""product_url""] = response.url
        phone_item[""description""] = """"
        phone_item[""availability""] = phone.css('.status>.status::text').get()

        yield phone_item"
w76TuUEj,Untitled,bodarev,JSON,Friday 3rd of November 2023 04:58:42 AM CDT,"const ecommerce = element.data('ecommerce');
    window.dataLayer = window.dataLayer || [];
    dataLayer.push({
        'ecommerce': {
            'currencyCode': 'USD',
            'checkout': {
                'actionField': {'step': 5},
                'products': ecommerce
            }
        },
        'event': 'gtm-ee-event',
        'gtm-ee-event-category': 'Enhanced Ecommerce',
        'gtm-ee-event-action': 'Checkout Step 5',
        'gtm-ee-event-non-interaction': 'False',
    });"
bnqLfrRW,map(),Grossos,JavaScript,Friday 3rd of November 2023 04:24:16 AM CDT,"// Storage
// Write a function that takes a certain number of items and their quantity. If the same item appears more than once,
// add the new amount to the existing one. In the end, print all the items and their amount without sorting them. The
// input comes as an array of strings. Try using a Map().

function solve(arr) {

    let map = new Map();

    for (let string of arr) {
        let tokens = string.split(' ');
        let product = tokens[0];
        let quantity = Number(tokens[1]);

        if(!map.has(product)) {
            map.set(product, +quantity);
        } else {
            let currQuantity = map.get(product)
            let newQuantity = currQuantity += quantity;
            map.set(product, newQuantity);
        }
    }

    for (let kvp of map) {
        console.log(`${kvp[0]} -> ${kvp[1]}`);
    }

}
"
EFU6GUPe,Untitled,kwest87,C#,Friday 3rd of November 2023 04:11:04 AM CDT,"[StartCode]
using System;

namespace ConsoleApp27
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int attempt = 3;
            string password = ""777"";
            string input;

            for (int i = 0; i < attempt;) 
            {
                Console.Clear();
                Console.WriteLine($""Введите пароль , попыток осталось : {attempt}"");
                Console.Write(""ПАРОЛЬ : "");
                input = Console.ReadLine();

                if(password == input)
                {
                    Console.WriteLine(""Секретные данные"");
                    break;
                }
                else
                {
                    Console.WriteLine(""Пароль не верный"");
                    Console.ReadKey();
                    attempt--;
                    continue;
                }
            }
        }
    }
}
[EndCode]"
SmapQHSB,QB Invoice Sample Payloadd,rahuldatainsights,JSON,Friday 3rd of November 2023 04:08:36 AM CDT,"{
  ""Id"": ""12"",
  ""DocNumber"": ""INV0003""""Line"": [
    {
      ""DetailType"": ""SalesItemLineDetail"",
      ""Amount"": 100.0,
      ""SalesItemLineDetail"": {
        ""ItemRef"": {
          ""name"": ""Services"",
          ""value"": ""1""
        }
      }
    }
  ],
  ""CustomerRef"": {
    ""value"": ""180""
  }
}"
bLMmPMjE,Response,iko1133,JavaScript,Friday 3rd of November 2023 04:04:02 AM CDT,"{
	""config"": {
		""adapter"": [""xhr"", ""http""],
		""baseURL"": ""https://api.benefits.ge/api/v1.0/"",
		""data"": ""travelInfo%5BcoverageZoneId%5D=10&travelInfo%5BcurrencyId%5D=10&travelInfo%5BtravelStartDate%5D=2023-11-02T20%3A00%3A00.000Z&travelInfo%5BtravelEndDate%5D=2023-11-03T20%3A00%3A00.000Z&travelInfo%5BhasLuggageInsurance%5D=false&travelInfo%5BcontractPackageId%5D=26722&client%5BisSelfInsurance%5D=true&client%5BisOthersInsurance%5D=false&client%5BpersonalNumber%5D=01008056427&client%5BbirthDate%5D=1993-08-17T00%3A00%3A00&client%5BfirstName%5D=%E1%83%90%E1%83%9C%E1%83%90&client%5BlastName%5D=%E1%83%A8%E1%83%A3%E1%83%91%E1%83%9A%E1%83%90%E1%83%AB%E1%83%94&client%5BfirstNameEng%5D=Ana&client%5BlastNameEng%5D=Shubladze&client%5Bemail%5D=ashubladze%40benefits.ge&client%5BphoneNumber%5D=599177434&client%5BpassportNumber%5D=20AB60553&client%5BgenderId%5D=1&client%5BaddressActual%5D=%E1%83%90%E1%83%A2%E1%83%94%E1%83%9C%E1%83%98%E1%83%A1%20%E1%83%A5.%2018%E1%83%90%20&client%5BamountText%5D=0"",
		""env"": {
			""Blob"": [Function Blob],
			""FormData"": [Function FormData]
		},
		""headers"": [Object],
		""maxBodyLength"": -1,
		""maxContentLength"": -1,
		""method"": ""post"",
		""timeout"": 0,
		""transformRequest"": [
			[Function transformRequest]
		],
		""transformResponse"": [
			[Function transformResponse]
		],
		""transitional"": {
			""clarifyTimeoutError"": false,
			""forcedJSONParsing"": true,
			""silentJSONParsing"": true
		},
		""url"": ""PolicyTravel/Application"",
		""validateStatus"": [Function validateStatus],
		""xsrfCookieName"": ""XSRF-TOKEN"",
		""xsrfHeaderName"": ""X-XSRF-TOKEN""
	},
	""data"": null,
	""duration"": 258,
	""headers"": {
		""content-length"": ""0"",
		""date"": ""Thu, 02 Nov 2023 23:57:50 GMT"",
		""strict-transport-security"": ""max-age=2592000""
	},
	""ok"": false,
	""originalError"": [AxiosError: Request failed with status code 415],
	""problem"": ""CLIENT_ERROR"",
	""status"": 415
}"
eN1TmyqS,14.1.15,myloyo,C#,Friday 3rd of November 2023 04:01:25 AM CDT,"using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Globalization;

namespace myloyorrr
{
    class SPoint: IComparable<SPoint> 
    {
        public int x, y;
        public SPoint(int x, int y)
        {
            this.x = x; this.y = y;
        }
        public double Distance()
        {
            return Math.Sqrt(x * x + y * y);
        }
        public double DistanceTo(SPoint obj)
        {
            return Math.Sqrt((obj.x - x)* (obj.x - x) + (obj.y - y)* (obj.y - y));
        }
        public int CompareTo(SPoint obj)            //проводим переопределением метода
        {
                                                    // CompareTo(T) так, чтобы сравнение элементов
            if (this.Distance() == obj.Distance())  // типа SPoint проводилось по возрастанию
            {                                       //расстоянию от точки до начала координат
                return 0;
            }
            else
            {
                if (this.Distance() > obj.Distance())
                {
                    return 1;
                }
                else
                {
                    return -1;
                }
            }
        }

    }
    class Program
    {
        static void Main()
        {
            using (StreamReader sr = new StreamReader(""C:/Настя/in.txt""))
            {
                using (StreamWriter sw = new StreamWriter(""C:/Настя/out.txt""))
                {
                    int x, y, n;
                    string s;
                    s = sr.ReadLine();
                    n = int.Parse(s);
                    SPoint[] a = new SPoint[n];
                    while ((s = sr.ReadLine()) != null)
                    {
                        string[] l = s.Split(' ');
                        x = Convert.ToInt32(l[0]);
                        y = Convert.ToInt32(l[1]);
                        a[a.Length - 1] = new SPoint(x, y);
                    }

                    double[] dist = new double[n];
                    double mr = 0;
                    for (int i = 0; i < n; i++)
                    {
                        double sum = 0;
                        for (int j = 0; j < n; j++)
                        {
                            if (i != j)
                            {
                                sum += a[i].DistanceTo(a[j]);
                            }
                        }
                        dist[i] = sum;
                        mr = Math.Min(mr, sum);
                    }
                    for(int i = 0; i < n; i++)
                    {
                        if (dist[i] == mr)
                        {
                            sw.WriteLine(""({0}, {1})"", a[i].x, a[i].y);
                        }
                    }

                    sr.Close();
                    sw.Close();
                    
                }
            }
        }
    }
}
6
1 2
15 10
25 26
3 8
4 4
6 9"
ktSf7zkJ,AFK Ship v2.0 available steam,darei,Lua,Friday 3rd of November 2023 04:01:09 AM CDT,"#Persistent
#NoEnv

WinGetClass, WinClass, Trove
Active := false

F3::
if (Active)
{
SetTimer, SendBackground, Off
Active := false
}
Else
{
SetTimer, SendBackground, 100
Active := True
}
Return

F2::
SetTimer, SendBackground, Off
Active := false
Return

SendBackground:
Controlsend,, {Numpad0 down}, ahk_class %WinClass%
Sleep 100
Controlsend,, {2 down}, ahk_class %WinClass%
Sleep 200
Controlsend,, {2 up}, ahk_class %WinClass%
Sleep 30000
Controlsend,, {e down}, ahk_class %WinClass%
Sleep 500
Controlsend,, {e up}, ahk_class %WinClass%
return"
KPDNwdrz,Untitled,kwest87,C#,Friday 3rd of November 2023 03:56:15 AM CDT,"[StartCode]
using System;

namespace ConsoleApp26
{
    internal class Program
    {
        static void Main(string[] args)
        {
            char symbol;
            int numberEdging = 2;
            string name;
            Console.Write(""Введите ваше имя : "");
            name = Console.ReadLine();
            Console.Write(""Введите символ : "");
            symbol = Console.ReadKey().KeyChar;
            Console.WriteLine();

            for (int i = 0; i < name.Length; i++)
            {
                numberEdging++;
            }

            for (int i = 0; i < numberEdging; i++) 
            {
                Console.Write(symbol);
            }

            Console.WriteLine();
            Console.WriteLine(symbol+name+symbol);

            for (int i = 0; i < numberEdging; i++)
            {
                Console.Write(symbol);
            }
        }
    }
}
[EndCode]"
AediGyUe,Day 5 - Creative Day - Using Binary counting to control more lights,stilenor,C++,Friday 3rd of November 2023 03:41:55 AM CDT,"/*
 * 30 Days - Lost in Space
 * Day 5 - Creative Day - Using Binary to control more lights
 * with the same 3 switches
 * have an ""All Lights On"" mode to catch any intruders
 *
 * Learn more at https://inventr.io/adventure
 *
Binary counting:
Binary uses only 0's and 1's. Switches have either on or off so we can use them
for Binary counting. 
If a switch is off the number would be 0 and if it's on the number would be 1
As we have 3 switches, Switch 1 = 1, Switch 2 = 2, and Switch 3 = 4
If Switch 1 and Switch 3 are in the on position the count would be 1 + 4 which = 5

If there were more switches, binary counting would see it as (if turned on):
Switch 1 = 1
Switch 2 = 2
Switch 3 = 4
Switch 4 = 8
Switch 5 = 16
Switch 6 = 32
Switch 7 = 64
Switch 8 = 128

If all were turned on it would be 1+2+4+8+16+32+64+128 which would = 255

 */

#include ""Arduino.h""  // include information about our HERO



const byte ENGINEROOM_LIGHTS_PIN = 7;    // pin controlling the engine room lights
const byte AIRLOCK_LIGHTS_PIN = 8;  // pin controlling the airlock lights
const byte BATHROOM_LIGHTS_PIN = 9;  // pin controlling the bathroom lights
const byte CABIN_LIGHTS_PIN = 10;    // pin controlling the cabin lights
const byte STORAGE_LIGHTS_PIN = 11;  // pin controlling the storage lights
const byte COCKPIT_LIGHTS_PIN = 12;  // pin controlling the exterior lights
int whichlight; //Store for Binary count


// We will use a different input pin for each of our DIP switches and
// we'll label them using binary state that switch represents.

const byte BINARY1_SWITCH_PIN = 2;    // cabin lights controlled by switch 1
const byte BINARY2_SWITCH_PIN = 3;  // storage lights controlled by switch 2
const byte BINARY4_SWITCH_PIN = 4;  // exterior lights controlled by switch 3

// the setup function runs once when you press reset or power the board
void setup() {
   Serial.begin(9600);  // Initialize Serial, set speed to 9600 bits/second (baud)

  // Configure our LED control pins as OUTPUT pins
  pinMode(ENGINEROOM_LIGHTS_PIN, OUTPUT);    // pin controlling the engine room lights
  pinMode(AIRLOCK_LIGHTS_PIN, OUTPUT);  // pin controlling the airlock lights
  pinMode(BATHROOM_LIGHTS_PIN, OUTPUT);  // pin controlling the bathroom lights
  pinMode(CABIN_LIGHTS_PIN, OUTPUT);    // pin controlling the cabin lights
  pinMode(STORAGE_LIGHTS_PIN, OUTPUT);  // pin controlling the storage lights
  pinMode(COCKPIT_LIGHTS_PIN, OUTPUT);  // pin controlling the exterior lights

  // Configure the switch pins as INPUT pins
  pinMode(BINARY1_SWITCH_PIN, INPUT);    // pin connected to switch 1 (Binary count 1)
  pinMode(BINARY2_SWITCH_PIN, INPUT);  // pin connected to switch 2 (Binary count 2)
  pinMode(BINARY4_SWITCH_PIN, INPUT);  // pin connected to switch 3 (Binary count 4)
}

// Each time through loop() we will check each switch in turn and set each light's
// state appropriately.
void loop() {
whichlight = 0;
// using individual if statements, aware there are other methods but this was simple and 
// easy to read
if (digitalRead(BINARY1_SWITCH_PIN) == HIGH){
  whichlight = whichlight + 1;
}
if (digitalRead(BINARY2_SWITCH_PIN) == HIGH){
  whichlight = whichlight + 2;
}
if (digitalRead(BINARY4_SWITCH_PIN) == HIGH){
  whichlight = whichlight + 4;
}

// individual if statements again, switchcase would have probably been better here
// but it's still easy to read
if (whichlight == 0) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", All Lights Off"");
}
if (whichlight == 1) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, HIGH);  // Engine Room lights on
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Engine Room Lights On"");
}
if (whichlight == 2) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, HIGH);  // Airlock lights on
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Airlock Lights On"");
}
if (whichlight == 3) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, HIGH);  // Bathroom lights on
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Bathroom Lights Lights On"");
}
if (whichlight == 4) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, HIGH);  // Cabin lights on
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Cabin Lights On"");
}
if (whichlight == 5) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, HIGH);  // Storage lights on
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Storage Lights On"");
}
if (whichlight == 6) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, HIGH);  // Cockpit lights on
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Cockpit Lights On"");
}
if (whichlight == 7) { //had a spare result so decided to make it the opposite of all off (binary 0)
  digitalWrite(ENGINEROOM_LIGHTS_PIN, HIGH);  // Engine Room lights on
  digitalWrite(AIRLOCK_LIGHTS_PIN, HIGH);  // Airlock lights on
  digitalWrite(BATHROOM_LIGHTS_PIN, HIGH);  // Bathroom lights on
  digitalWrite(CABIN_LIGHTS_PIN, HIGH);  // Cabin lights on
  digitalWrite(STORAGE_LIGHTS_PIN, HIGH);  // Storage lights on
  digitalWrite(COCKPIT_LIGHTS_PIN, HIGH);  // Cockpit lights on
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", All Lights On"");
}

}"
MbVisYPV,LC2919,pb_jiang,C++,Friday 3rd of November 2023 03:35:17 AM CDT,"class Solution {
public:
    long long minIncrementOperations(vector<int>& ns, int k) {
        using ll = long long;
        int n = ns.size();
        vector<ll> dp(n, LLONG_MAX / 2);
        for (int i = 0; i < 3; ++i) dp[i] = (ns[i] >= k ? 0 : k - ns[i]);
        for (int i = 0; i < n; ++i) {
            for (int j = 1; j <= 3 && i + j < n; ++j) {
                ll costj = (ns[i + j] >= k ? 0 : k - ns[i + j]);
                dp[i + j] = min(dp[i + j], dp[i] + costj);
            }
        }
        return min({dp[n-1], dp[n-2], dp[n-3]});
    }
};"
gpw9wHEz,Day 5 - Creative Day - Using Binary to control more lights,stilenor,C++,Friday 3rd of November 2023 03:29:05 AM CDT,"/*
 * 30 Days - Lost in Space
 * Day 5 - Creative Day - Using Binary to control more lights
 * with the same 3 switches
 * have an ""All Lights On"" mode to catch any intruders
 *
 * Learn more at https://inventr.io/adventure
 *

 */

#include ""Arduino.h""  // include information about our HERO



const byte ENGINEROOM_LIGHTS_PIN = 7;    // pin controlling the engine room lights
const byte AIRLOCK_LIGHTS_PIN = 8;  // pin controlling the airlock lights
const byte BATHROOM_LIGHTS_PIN = 9;  // pin controlling the bathroom lights
const byte CABIN_LIGHTS_PIN = 10;    // pin controlling the cabin lights
const byte STORAGE_LIGHTS_PIN = 11;  // pin controlling the storage lights
const byte COCKPIT_LIGHTS_PIN = 12;  // pin controlling the exterior lights
int whichlight; //Store for Binary count


// We will use a different input pin for each of our DIP switches and
// we'll label them using binary state that switch represents.

const byte BINARY1_SWITCH_PIN = 2;    // cabin lights controlled by switch 1
const byte BINARY2_SWITCH_PIN = 3;  // storage lights controlled by switch 2
const byte BINARY4_SWITCH_PIN = 4;  // exterior lights controlled by switch 3

// the setup function runs once when you press reset or power the board
void setup() {
   Serial.begin(9600);  // Initialize Serial, set speed to 9600 bits/second (baud)

  // Configure our LED control pins as OUTPUT pins
  pinMode(ENGINEROOM_LIGHTS_PIN, OUTPUT);    // pin controlling the engine room lights
  pinMode(AIRLOCK_LIGHTS_PIN, OUTPUT);  // pin controlling the airlock lights
  pinMode(BATHROOM_LIGHTS_PIN, OUTPUT);  // pin controlling the bathroom lights
  pinMode(CABIN_LIGHTS_PIN, OUTPUT);    // pin controlling the cabin lights
  pinMode(STORAGE_LIGHTS_PIN, OUTPUT);  // pin controlling the storage lights
  pinMode(COCKPIT_LIGHTS_PIN, OUTPUT);  // pin controlling the exterior lights

  // Configure the switch pins as INPUT pins
  pinMode(BINARY1_SWITCH_PIN, INPUT);    // pin connected to switch 1 (Binary count 1)
  pinMode(BINARY2_SWITCH_PIN, INPUT);  // pin connected to switch 2 (Binary count 2)
  pinMode(BINARY4_SWITCH_PIN, INPUT);  // pin connected to switch 3 (Binary count 4)
}

// Each time through loop() we will check each switch in turn and set each light's
// state appropriately.
void loop() {
whichlight = 0;
// using individual if statements, aware there are other methods but this was simple and 
// easy to read
if (digitalRead(BINARY1_SWITCH_PIN) == HIGH){
  whichlight = whichlight + 1;
}
if (digitalRead(BINARY2_SWITCH_PIN) == HIGH){
  whichlight = whichlight + 2;
}
if (digitalRead(BINARY4_SWITCH_PIN) == HIGH){
  whichlight = whichlight + 4;
}

// individual if statements again, switchcase would have probably been better here
// but it's still easy to read
if (whichlight == 0) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", All Lights Off"");
}
if (whichlight == 1) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, HIGH);  // Engine Room lights on
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Engine Room Lights On"");
}
if (whichlight == 2) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, HIGH);  // Airlock lights on
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Airlock Lights On"");
}
if (whichlight == 3) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, HIGH);  // Bathroom lights on
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Bathroom Lights Lights On"");
}
if (whichlight == 4) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, HIGH);  // Cabin lights on
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Cabin Lights On"");
}
if (whichlight == 5) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, HIGH);  // Storage lights on
  digitalWrite(COCKPIT_LIGHTS_PIN, LOW);  // Cockpit lights off
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Storage Lights On"");
}
if (whichlight == 6) {
  digitalWrite(ENGINEROOM_LIGHTS_PIN, LOW);  // Engine Room lights off
  digitalWrite(AIRLOCK_LIGHTS_PIN, LOW);  // Airlock lights off
  digitalWrite(BATHROOM_LIGHTS_PIN, LOW);  // Bathroom lights off
  digitalWrite(CABIN_LIGHTS_PIN, LOW);  // Cabin lights off
  digitalWrite(STORAGE_LIGHTS_PIN, LOW);  // Storage lights off
  digitalWrite(COCKPIT_LIGHTS_PIN, HIGH);  // Cockpit lights on
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", Cockpit Lights On"");
}
if (whichlight == 7) { //had a spare result so decided to make it the opposite of all off (binary 0)
  digitalWrite(ENGINEROOM_LIGHTS_PIN, HIGH);  // Engine Room lights on
  digitalWrite(AIRLOCK_LIGHTS_PIN, HIGH);  // Airlock lights on
  digitalWrite(BATHROOM_LIGHTS_PIN, HIGH);  // Bathroom lights on
  digitalWrite(CABIN_LIGHTS_PIN, HIGH);  // Cabin lights on
  digitalWrite(STORAGE_LIGHTS_PIN, HIGH);  // Storage lights on
  digitalWrite(COCKPIT_LIGHTS_PIN, HIGH);  // Cockpit lights on
  Serial.print(whichlight);  // show whichlight value
  Serial.println("", All Lights On"");
}

}"
UiPsWWPA,count_all_possible_paths_in_matrix.c,dmilicev,C,Friday 3rd of November 2023 03:20:49 AM CDT,"/*

    count_all_possible_paths_in_matrix.c

Count all possible paths from top left to bottom right of a r x c matrix.

https://www.w3resource.com/c-programming-exercises/array/c-array-exercise-85.php

First, we set the matrix elements in the first column and first row to 1.
Each internal element of the matrix can be reached from the top or from the left.
That's why for each internal element we write the sum of its upper and its left element.
Then the sum of all possible paths from top left to bottom right element is
in the bottom right element.

    You can find all my C programs at Dragan Milicev's pastebin:

    https://pastebin.com/u/dmilicev

*/

#include <stdio.h>

#define MAX_SIZE 100    // maximum size of matrix M[100][100]

// Displays a matrix M[rows][columns] of integers with text before and after the matrix
void PrintMatrix(char *text_before, int M[][MAX_SIZE], int rows, int columns, char *text_after){
    printf(""%s"", text_before);
    for(int r=0;r<rows;r++){
        for(int c=0;c<columns;c++)
            printf(""%3d"",M[r][c]);
        printf(""\n\n"");
    }
    printf(""%s"", text_after);
}

// Displays a matrix M[rows][columns] of integers
void DisplayMatrix(int M[][MAX_SIZE], int rows, int columns){
    for (int r = 0; r < rows; r++){
        for (int c = 0; c < columns; c++)
            printf(""%3d"",M[r][c]);
        printf(""\n\n"");
    }
}

int PathCounting(int r, int c){
    int M[MAX_SIZE][MAX_SIZE];

// First, we set the matrix elements in the first column and first row to 1.
    printf(""\n Assign the value 1 to the elements of the first column: \n"");
    printf(""\n begin M[i][0] = 1; \n\n"");
    for (int i = 0; i < r; i++){
        M[i][0] = 1;
        printf(""\t * i=%d , j=0, M[%d][0] = %d \n"", i, i, M[i][0]);
        PrintMatrix(""\n"",M,r,c,""\n"");
    }
    printf("" end M[i][0] = 1; \n"");

    printf(""\n Assign the value 1 to the elements of the first row: \n"");
    printf(""\n begin M[0][j] = 1; \n\n"");
    for (int j = 0; j < c; j++){
        M[0][j] = 1;
        printf(""\t * i=0 , j=%d, M[0][%d] = %d \n"", j, j, M[0][j]);
        PrintMatrix(""\n"",M,r,c,""\n"");
    }
    printf("" end M[0][j] = 1; \n"");

// Each internal element of the matrix can be reached from the top or from the left.
// That's why for each internal element we write the sum of its upper and its left element.
    printf(""\n Assign the values to the inner elements: \n"");
    printf(""\n begin M[i][j] = M[i-1][j] + M[i][j-1]; \n\n"");
    for (int i = 1; i < r; i++)
        for (int j = 1; j < c; j++){
            M[i][j] = M[i-1][j] + M[i][j-1];

            printf(""\t * i=%d , j=%d, M[%d][%d] = M[%d-1][%d] + M[%d][%d-1] = \n\t\t\t        M[%3d][%d] + M[%d][%3d] = %d + %d = %d \n"",
                    i, j, i, j, i, j, i, j,  i-1, j,  i, j-1,  M[i-1][j], M[i][j-1], M[i][j]);

            PrintMatrix(""\n"",M,r,c,""\n"");
        }
    printf("" end M[i][j] = M[i-1][j] + M[i][j-1]; \n"");

// Then the sum of all possible paths from top left to bottom right element is
// in the bottom right element.
    return M[r-1][c-1];
}

int main(void)
{
    int r=4, c=4;   // Matrix of 4 rows and 4 columns.

    printf(""\n\n The all possible paths of matrix %d x %d \n from top left to bottom right is: %d \n\n"",
            r, c, PathCounting(r,c) );

    return 0;
}
"
cpx5hrs5,Test python libraries,varli_ketanpl,Python,Friday 3rd of November 2023 03:20:29 AM CDT,"import numpy as np
print(""Succes importare numpy"")

import pandas as pandas
print(""Succes importare pandas"")

import scipy as scipy
print(""Succes importare scipy"")

import sklearn as sklearn
print(""Succes importare scikit-learn"")

import skimage as skimage
print(""Succes importare skimage"")

import matplotlib as matplotlib
print(""Succes importare matplotlib"")

import cv2 as cv2
print(""Succes importare cv2"")

import pywt as pywt 
print(""Succes importare pywt"")"
wBhsU5fm,AAA-Sync.bat,GlobalAccessSoftware,Batch,Friday 3rd of November 2023 01:57:57 AM CDT,"

::: RC7
:start
  @echo off
  set timethen=%time%
  set datethen=%date%
  if not defined vers set vers=v8.7.0.07 20231013024512 by -JpE-
  set ttl=** Auto Rapid Backup of/by JpE:  LAUNCHED %datethen% @ %timethen% **
  set /a exit2=0
  :: exit2 ^ var for processes to flag an exception or redirection.
  set bats=C:\Users\%username%\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite
  REM set util1=""%bats%\utility1.bat""


:restart
  title  %ttl%
  set mstr=** Master-Program - Maintenance Ultra Deluxe Pro 8 **
  set filename2=""%bats%\overrider3.txt""
  set /a override1=0
  if exist %filename2% set /a override1=1 & del /f /s /q %filename2%
  REM echo . & echo override1 == %override1% & echo . & pause & echo . & exit
  if %override1% equ 0 cls
  echo .
  echo .
  :: 
  ::::::::::::::::::::::::::::::::::
  :::::::: Global Variables ::::::::
  ::::::::::::::::::::::::::::::::::
  :: 
  :: Set Alias for Long Line, Short Line, Docs & LogFile.
  set sl=         /*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\/*\
  set l1=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
  set l2=\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
  ::
  set dir=C:\Users\%username%\Documents
  cd %dir%
  :: 
  rem LOGs could BE DEVELOPED, FOR ALL MODULES.
  set lf=""%dir%\AAA-Sync_LogFile.txt""
  :::::::::::::::::::::::::::::::::::::
  set smsg=""%bats%\caller_check_showmsg.bat""
  set oldr=""%bats%\SyncOlderPhotos.bat""
  set outs=""%bats%\outlook_handler.bat""
  set sams=""%bats%\phone_backups.bat""
  :: Actual Error Handling Routine (under dev)
  set errr=""%bats%\ErrorHandling.bat""
  :: Rev 2 v7.9.2.36 adds: v testfile
  set fileo=""%bats%\caller_check.txt""
  ::  ^v these are predefined in SOP also.
  set exidos=""%bats%\exit_main.bat""
  :: split out v7.9.4.42 20220921032112
  set copy=""%bats%\copy_control.bat""
  :: Test file declaration.
  set test=""D:\Copies\My Documents\AAA Sync2Laptop\good1.txt""

  set /a backout=0
  set /a samsung=0
  set /a wipe=0
  set /a r3v3rs3=0
  set /a clrphodest=0
  set /a clroutdest=0
  set /a code2=0

  echo %sl%
  echo          *** Syncs Key Folders with ALL Copies! ***
  echo %sl%
  echo          **  %vers%   **
  echo %sl%
  echo .
  echo %l1%
  echo       ***   This will backup your Basic folders.   ***
  echo %l1%
  :: 
  if exist %fileo% call %smsg%
  if exist %fileo% del /f /s /q %fileo%
  REM echo . & echo override1 == %override1% & echo . & pause & echo .
  if %override1% neq 1 goto input
  
  set /a skiy=1
  set /a backout=1
  set /a clr=1
  set /a out=1
  set /a dest=1
  set /a full=2
  set /a samsung=1
  set /a clrphodest=2
  set /a olde=2
  set /a review=2
  echo . 
  REM echo Made it to Here! & pause & echo . & exit
  goto control

  :::::::::::::::::::::::::::::::::[ USER INPUT ]:::::::::::::::::::::::
:input
  echo .
  set msg=""=*=*=*=>  Is this a Rescue/Recovery Mission? (y/N): ""
  choice /c yn /n /t 3 /d n /m %msg%
  if %errorlevel% equ 1 goto recover
  echo . & echo %l1% & echo .
  :: 
  echo To make further prompting unneccessary and speed it up
  set msg=""===> Shall we skip wipe of all destinations? (Y/n): ""
  choice /c yn /n /t 15 /d y /m %msg%
  set skiy=%errorlevel%
  echo . & echo %l1% & echo .
  if %skiy% equ 1 goto lookout
  :: 
  echo OR,
  set msg=""Should we wipe every destination now online? (y/N): ""
  choice /c yn /n /t 11 /d n /m %msg%
  echo . & echo %l1% & echo .
  if %errorlevel% equ 1 set skiy=3 & goto lookout
  ::
  set msg=""Shall I just wipe the external Destinations? (Y/n): ""
  ::: Won't wipe Q: it's setup as a catch-all.
  choice /c yn /n /t 11 /d y /m %msg%
  echo . & echo %l1% & echo .
  if %errorlevel% equ 1 set skiy=4


:lookout
  set msg=""=*=*=*=*=*=> Backup Outlook Files as well? (Y/n/c): ""
  choice /c ync /n /t 7 /d y /m %msg%
  if %errorlevel% equ 3 goto exit3
  set /a backout=%errorlevel%
  :: 
  if %backout% neq 1 goto phone
  echo .
  echo Outlook Files:
  set msg=""*=*=*=*=*=> Clear the Outlook Backups first? (Y/n): ""
  choice /c yn /n /t 7 /d y /m %msg%
  if %errorlevel% equ 2 goto phone
  :: And leave clroutdest==0 ^
  set /a clr=%errorlevel%
  :: == 1 ^ is now implicite
  echo .
  echo Outlook Files:
  set msg=""=*=*=> Shall I also clear all backup drives? (Y/n): ""
  choice /c yn /n /t 7 /d y /m %msg%
  set /a out=%errorlevel%

  :::::::::::::::::::::::::::::::::::::::::
  :: 0==wipe none
  :: 1==just backups on D:
  :: 2==all backup drives.
  :: 3==network systems also.
  :: 4==MAYBE full circle back to source?
  :::::::::::::::::::::::::::::::::::::::::

  echo .
  echo Outlook Files:
  set msg=""> Shall we also clear all Networked Systems? (Y/n): ""
  choice /c yn /n /t 7 /d y /m %msg%
  set /a dest=%errorlevel%

  echo .
  echo Outlook Files:
  set msg=""*=*=*=> Shall WE MAKE IT A FULL CIRCLE SYNC? (y/N): ""
  choice /c yn /n /t 7 /d n /m %msg%
  set /a full=%errorlevel%


:phone
  echo .
  echo %l1%
  echo .
  :: 
  set msg=""=*=*=*=*=> Backup Samsung Backups as well? (Y/n/c): ""
  choice /c ync /n /t 7 /d y /m %msg%
  if %errorlevel% equ 3 goto exit3
  set /a samsung=%errorlevel%
  if %samsung% neq 1 goto photos
  echo .
  echo  Phone Backups:
  set msg="">Wipe all backup destinations now available? (y/N): ""
  choice /c yn /n /t 7 /d n /m %msg%
  set /a clrphodest=%errorlevel%


:photos
  echo .
  echo %l1%
  echo .
  :: 
  set msg=""==> Would you like to then check Old Photos? (y/N): ""
  choice /c yn /n /t 12 /d n /m %msg%
  set /a olde=%errorlevel%
  echo .
  echo %l1%
  echo .
  :: 
  set msg=""==> Did you want to then Pause at the End? (y/N/c): ""
  choice /c ync /n /t 19 /d n /m %msg%
  if %errorlevel% equ 3 goto exit3
  set /a review=%errorlevel%
  echo .


  :::::::::::::::::::::::::::[ MAIN BODY ]:::::::::::::::::::::::::::::

  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  :: NOTE: backup Playlists, Desktop, Documents, Photos,
  :: Favorites & Downloads :: Only Restores Source from D:\
  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:control
  if not exist %copy% echo .
  if not exist %copy% echo %sl%
  if not exist %copy% echo            ***  Ctrl Program NOT Found.  ***
  if not exist %copy% echo %sl%
  if not exist %copy% echo .
  if not exist %copy% goto outlook
  :: 
  set /a sgnl=0
  call %copy%
  :: 
  if %sgnl% equ 2 goto exit3

  :: V7.9.7.xx rote mods
  if %sgnl% equ 5 goto recover
  if %sgnl% equ 4 if exist %test% goto start
  if %sgnl% neq 4 goto outlook

  echo .
  echo %sl%
  echo             **** Dummy forgot to Unlock D: ****
  echo %sl%
  echo .

  set msg=""Try again to update D: (Y/n)? ""
  choice /c ynoc /n /t 300 /d o /m %msg%
  if %errorlevel% equ 1 goto start
  if %errorlevel% equ 3 pause
  if %errorlevel% equ 4 goto exit3
  goto outlook


  :::::::::::::::::::::::::::::::::::::::::::
  :: Recovery Restores Sources from Copies ::
  :::::::::::::::::::::::::::::::::::::::::::
:recover
  echo .
  echo %sl%
  echo                      **  ********  **
  echo                 ***     -WARNING!-     ***
  echo       *****   You are on the road to Recovery!   *****
  echo                 ***     -WARNING!-     ***
  echo                      **  ********  **
  echo %sl%
  echo .
  echo %l1%
  echo .
  set msg=""*=*=*=*=*=>  Recopy Destinations to Sources? (y/N): ""
  choice /c yn /n /t 45 /d n /m %msg%
  if %errorlevel% neq 1 goto start
  set /a r3v3rs3=2
  goto control


  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  :: Sync Outlook with D: && I: && X: && Daddio when available.  ::
  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:outlook
  set /a exit2=0
  if %backout% neq 1 goto exit1
  :: exit2 var is used in called processes to flag an exception.
  set nf=could not be found.
  if not exist %outs% echo The Outlook ""Handler Program"" %nf%
  if not exist %outs% echo ****
  if not exist %outs% echo %outs%
  if not exist %outs% goto exit1
  :: 
  call %outs%


  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  ::        *** Tasks Completed, Main Program Exiting ***        ::
  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  title %mstr%
  if %exit2% gtr 0 goto exit2

:exit1
  echo %l2%
  echo      **   Computer Backups Completed Successfully!   **
  echo %l2%

  :: But only after backing up my phone backups.
:exit2
  if %r3v3rs3% equ 2 goto exit3
  if %samsung% neq 1 goto exit0
  if exist %sams% call %sams%
  :: 
  if %exit2% neq 0 goto exit0
  echo .
  echo %sl%
  echo            *** Victoria Backup is Backed Up!  ***
  echo %sl%
  echo .

:exit0
  if %olde% neq 1 goto exit3
  if not exist %oldr% goto exit3
  if exist %smsg% call %smsg%
  echo .
  if not exist %fileo% copy /a /v /y %errr%,%fileo%
  :: 
  :::::::::::::::
  set /a exit2=0
  call %oldr%
  :::::::::::::::
  :: 
  if %exit2% neq 0 goto exit3
  echo .
  echo %l2%
  echo ** Old Photos Synced up to date! %date% @ %time% **
  echo %l2%
  REM echo .

:exit3
  set /a exit2=0
  if exist %exidos% call %exidos%
  :: See: exit_main.bat for more info.
  if %exit2% equ 4 goto restart
  exit /b %errorlevel%



::       100% -JpE-



"
PF5mGgJD,utility1.bat,GlobalAccessSoftware,Batch,Friday 3rd of November 2023 01:55:32 AM CDT,"

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: utility1.bat Split from Silent_Mode.bat for Free Use   :::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: Original version 8.5.6.75 20230716132435 by -JpE-
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

  if not defined vers set vers=v8.7.0.03 20231006232214 by -JpE-
  set /a size3=0
  if not defined util3 set util3=""%bats%\utility3.bat""
  if not exist %util3% (
    echo . & echo Can't find utility3.bat! & echo . & pause & echo . & exit /b)
  if not defined sizer set sizer=""%bats%\string_length.bat""
  if not exist %sizer% (
    echo . & echo Can't find %sizer% & echo . & pause & echo . & exit /b)
  set charsForPadding=*=
  set txt1= Introducing:  My-ShotCaller! %vers% 
  if exist %sizer% call %sizer% charsLen charsForPadding
  if exist %sizer% call %sizer% actualSize2 txt1
  if %charsLen% gtr 0 set /a size2=((%actualSize2% + (2*%charsLen%)) / %charsLen%)
  call :padme %size2%
  set line1=%line1%%charsForPadding%
  echo . & echo . & VER & echo .
  echo . & echo %line1%
  echo =%charsForPadding%%txt1%%charsForPadding%*
  echo %line1% & echo .
  exit /b

::: Pads string %line1% to passed length
:padme <intVar lengthOfTheStringRequired>
  set line1=
  for /l %%k in (1, 1, %~1) do ( call :loop3
    if %errorlevel% gtr 1 echo errorlevel: %errorlevel% & set /a code2=7 & exit /b )
  exit /b
  
:loop3
  set line1=%line1%%charsForPadding%
  exit /b



  :::   100% -JpE-


"
cynD0N56,backupschdltsks.bat,GlobalAccessSoftware,Batch,Friday 3rd of November 2023 01:53:06 AM CDT,"
  ::: RC9

  @echo off
  set source=""C:\WINDOWS\Tasks\""*.*
  set destin=""D:\My WorkSpace\Backup Scheduled Tasks""

  set ""caller=Defined""
  if not defined vers set ""caller=Not %caller%""
  if not defined vers set vers=v8.7.0.02 20231006232214 by -JpE-
  set ttl=Backup Scheduled Tasks
  title %ttl% %vers%
  if not exist %source% or not exist %destin% echo OUCH! & goto exit
  echo . & echo %l1% & echo   %ttl% %vers% & echo %l1% & echo .

  REM del /f /s /q %destin%""\""*.*
  xcopy %source% %destin% /D /V /C /F /G /R /K /O /X /Y /B /J
  echo . & echo Successful System Backup to External Drive! & echo .
  REM call ""C:\Users\Daddio\Documents\AAA Sync2Laptop\Batch Files\A1-Sync.exe""
:exit
  echo Goodbye now! Caller %caller%!
  if ""%caller%"" neq ""Defined"" pause & echo .
  rem if equ then it's outside caller. Skip pause.
  exit /b %errorlevel%



    ::: 100% -JpE- 
    
    
    
    

"
uppqRhGS,runtime_display.bat,GlobalAccessSoftware,Batch,Friday 3rd of November 2023 01:49:52 AM CDT,"

::: RC8 Update! ::: 

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: Split out from SyncOlderPhotos.bat Sept 8th, 2022   :::
::: For reUsages with other things. see set vars below. :::
::: set vers=v7.9.7.64 20221104054808 by -JpE-          :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::   Runtime Display Module Copyright 2023 by -JpE-    :::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::: <These vars must be set:>
::: set timethen=%time%
::: set datethen=%date%
::: <ASSURE ^ THESE ARE SET IN START OF ALL CALLERS!>

  set /a test21=(1)
  
  rem Have made untested changes that could fix it. 783 ???
  
REM Seems to be a bug at Zulu hour, double zeros or such. It begins to manifest between Pause 1 and 2 with missing operator or something, then between 4 and 4b maybe as soon as 4a, then it becomes fatal somewhere after 8 and 9 somewhere which crashes the program until the bad or zulu numbers don't appear anymore. Once the missing operator (or whatever err that is) goes away, (time has passed) then it goes away and everything works fine again. Zulu hour definetly suspect, but unconfirmed. Check into the logic there. It might be as simple as replacing a "" "" or """" with a ""0"" or zero. (without the quotes)

  ::: Set test21 ^ to 7 for trace mode, else it's off.
  if not defined vers set vers=v8.7.0.01 20231006203911 by -JpE-

:runtime
  echo    %sl%
  echo                  Runtime Display Ultra Pro Deluxe 8
  echo    %sl%
  echo                 %vers%
  echo    %sl%
  echo .
  echo **%l1%**
  set calcdate=%date%
  set calctime=%time%

  ::: =====================[ NOW BEGIN ]=====================
  set ""yearnow=%date:~0,4%""
  set /a yrn=(%yearnow%)
  :::
  set ""montnow=%date:~5,2%""
  if ""%montnow:~0,1%"" equ "" "" set montnow=%montnow:~1,1%
  if ""%montnow:~0,1%"" equ ""0"" set montnow=%montnow:~1,1%
  if ""%montnow%"" equ """" set montnow=0
  set /a mtn=(%montnow%)
  :::
  set ""daysnow=%date:~8,2%""
  if ""%daysnow:~0,1%"" equ "" "" set daysnow=%daysnow:~1,1%
  if ""%daysnow:~0,1%"" equ ""0"" set daysnow=%daysnow:~1,1%
  if ""%daysnow%"" equ """" set daysnow=0
  set /a dyn=(%daysnow%)  
  if %test21% == 7 echo . & echo pause-1 & echo . & pause & echo .


  :::::::::::::::::::::::::::::::::
  ::: Hours | Minutes | Seconds :::
  :::::::::::::::::::::::::::::::::  
  REM Tracking Zulu Hour Bugs... I think I got it v85!
  set ""hournow=%time:~0,2%""
  if ""%hournow:~0,1%"" equ "" "" set hournow=%hournow:~1,1%
  if ""%hournow:~0,1%"" equ ""0"" set hournow=%hournow:~1,1%
REM echo hournow == %hournow% & pause
  if ""%hournow:~1,1%"" equ "" "" set hournow=""0""
    if ""%hournow%"" equ """" set hournow=0
  set /a hrn=(%hournow%)
REM echo hournow == %hournow%, hrn == %hrn% & pause
  :::
  if %test21% == 7 echo . & echo pause-2 & echo . & pause & echo .
  set ""minsnow=%time:~3,2%""
  if ""%minsnow:~0,1%"" equ "" "" set minsnow=%minsnow:~1,1%
  if ""%minsnow:~0,1%"" equ ""0"" set minsnow=%minsnow:~1,1%
  if ""%minsnow:~1,1%"" equ "" "" set minsnow=""0""
    if ""%minsnow%"" equ """" set minsnow=0
  set /a min=(%minsnow%)
  :::
  if %test21% == 7 echo . & echo pause-2a & echo . & pause & echo .
  set ""secsnow=%time:~6,2%""
  if ""%secsnow:~0,1%"" equ "" "" set secsnow=%secsnow:~1,1%
  if ""%secsnow:~0,1%"" equ ""0"" set secsnow=%secsnow:~1,1%
  if ""%secsnow:~1,1%"" equ "" "" set secsnow=""0""
    if ""%secsnow%"" equ """" set secsnow=0
  set /a scn=(%secsnow%)
  :::
  if %test21% == 7 echo . & echo pause-2b & echo . & pause & echo .
  set ""centinow=%time:~9,2%""
  if ""%centinow:~0,1%"" equ "" "" set centinow=%centinow:~1,1%
  if ""%centinow:~0,1%"" equ ""0"" set centinow=%centinow:~1,1%
  if ""%centinow:~1,1%"" equ "" "" set centinow=""0""
    if ""%centinow%"" equ """" set centinow=0
  set /a mln=(%centinow%)
  if %test21% == 7 echo . & echo pause-3 & echo . & pause & echo .


  ::: =====================[ NOW END ]=====================
  :::       SUPER-PARSER DELUXE : PARSING EXAMPLE
  ::: =====================================================

  ::::::::::::::::::::::::[ THEN BEGIN ]:::::::::::::::::::::
  set ""yearthen=%datethen:~0,4%""
  set /a yrt=(%yearthen%)
  :::
  set ""montthen=%datethen:~5,2%""
  if ""%montthen:~0,1%"" equ "" "" set montthen=%montthen:~1,1%
  if ""%montthen:~0,1%"" equ ""0"" set montthen=%montthen:~1,1%
  if ""%montthen%"" equ """" set montthen=0
  set /a mtt=(%montthen%)
  if %test21% == 7 echo . & echo pause-4 & echo . & pause & echo .
  :::
  set ""daysthen=%datethen:~8,2%""
  if ""%daysthen:~0,1%"" equ "" "" set daysthen=%daysthen:~1,1%
  if ""%daysthen:~0,1%"" equ ""0"" set daysthen=%daysthen:~1,1%
  if ""%daysthen%"" equ """" set daysthen=0
  set /a dyt=(%daysthen%)
  if %test21% == 7 echo . & echo pause-4a & echo . & pause & echo .
  :::
  set ""hourthen=%timethen:~0,2%""
  if ""%hourthen:~0,1%"" equ "" "" set hourthen=%hourthen:~1,1%
  if ""%hourthen:~0,1%"" equ ""0"" set hourthen=%hourthen:~1,1%
  if ""%hourthen:~1,1%"" equ "" "" set hourthen=""0""
  if ""%hourthen%"" equ """" set hourthen=0
  set /a hrt=(%hourthen%)  
  if %test21% == 7 echo . & echo pause-5 & echo . & pause & echo .
  :::
  set ""minsthen=%timethen:~3,2%""
  if ""%minsthen:~0,1%"" equ "" "" set minsthen=%minsthen:~1,1%
  if ""%minsthen:~0,1%"" equ ""0"" set minsthen=%minsthen:~1,1%
  if ""%minsthen:~1,1%"" equ "" "" set minsthen=""0""
  if ""%minsthen%"" equ """" set minsthen=0
  set /a mit=(%minsthen%)
  :::
  set ""secsthen=%timethen:~6,2%""
  if ""%secsthen:~0,1%"" equ "" "" set secsthen=%secsthen:~1,1%
  if ""%secsthen:~0,1%"" equ ""0"" set secsthen=%secsthen:~1,1%
  if ""%secsthen:~1,1%"" equ "" "" set secsthen=""0""
  if ""%secsthen%"" equ """" set secsthen=0
  set /a sct=(%secsthen%)
  :::
  set ""centithen=%timethen:~9,2%""
  if ""%centithen:~0,1%"" equ "" "" set centithen=%centithen:~1,1%
  if ""%centithen:~0,1%"" equ ""0"" set centithen=%centithen:~1,1%
  if ""%centithen:~1,1%"" equ "" "" set centithen=""0""
  if ""%centinow%"" equ """" set centinow=0
  set /a mlt=(%centithen%)
  ::::::::::::::::::::::::[ THEN END ]:::::::::::::::::::::


  ::::::::::::::::::::::::::::::::::::::::::::
  ::: Days In Month aka dim, I know right. :::
  ::::::::::::::::::::::::::::::::::::::::::::
  set /a day=365
  set /a ""mod=%yrn% %% 4%""
  if %mod% equ 0 set /a day=366
  set /a dim=31
  if %mtn% neq 2 goto notfeb

  ::: February regular or Leap Year!
  set /a dim=28
  if %mod% equ 0 set /a dim=29

:notfeb
  ::: 30 days hath September, April, June, && November!!!
  ::: (all the rest have 31, except for february which
  ::: has 28, unless the year / 4 == whole-number,
  ::: in which case it's leap year & Feb has 29 days! (above) -ed
  if %mtn% equ 9 set /a dim=30 
  if %mtn% equ 4 set /a dim=30
  if %mtn% equ 6 set /a dim=30 
  if %mtn% equ 11 set /a dim=30

  :::::::::::::::::::::
  ::: Month as Word :::
  :::::::::::::::::::::
  set mt=January
  if %mtn% equ 2 set mt=February
  if %mtn% equ 3 set mt=March
  if %mtn% equ 4 set mt=April
  if %mtn% equ 5 set mt=May
  if %mtn% equ 6 set mt=June
  if %mtn% equ 7 set mt=July
  if %mtn% equ 8 set mt=August
  if %mtn% equ 9 set mt=September
  if %mtn% equ 10 set mt=October
  if %mtn% equ 11 set mt=November
  if %mtn% equ 12 set mt=December


  :::::::::::::::::::::::::::::::
  ::: Day of Week as a Word:  :::
  :::::::::::::::::::::::::::::::
  set util2=""%bats%\utility2.bat""
  if exist %util2% call %util2% dayOfWeek
  ::: Mod 20230718030330 v8.5.6.77 :::
  ::::::::::::::::::::::::::::::::::::
  if %test21% == 7 echo . & echo pause-6 & echo . & pause & echo .


  ::::::::::::::::::::::::::::::::::::
  ::: Partial Duplicate to Screen. :::
  ::::::::::::::::::::::::::::::::::::
  set ext=th
  set ned=th
  if %dyn% == 1 set ned=st
  if %dyn% == 21 set ned=st
  if %dyn% == 31 set ned=st
  if %mtn% == 1 set ext=st
  if %dyn% == 2 set ned=nd
  if %dyn% == 22 set ned=nd
  if %mtn% == 2 set ext=nd
  if %dyn% == 3 set ned=rd
  if %dyn% == 23 set ned=rd
  if %mtn% == 3 set ext=rd
  if %mod% == 0 set msg=IT'S LEAPYEAR!

  if %test21% == 7 echo . & echo pause-7 & echo . & pause & echo .

  ::: !!! R3 mods !!!
  set mlclc=%calctime:~9,2%
  if ""%mlclc:~0,1%"" equ "" "" set mlclc=%mlclc:~1,1%
  if ""%mlclc:~0,1%"" equ ""0"" set mlclc=%mlclc:~1,1%
  set /a mlclc=(%mlclc%)
  set nowtime=%time%
  :::  ^ for syncronization precision below.

  ::: strings to numbers...
  set mlnow=%nowtime:~9,2%
  if ""%mlnow:~0,1%"" equ "" "" set mlnow=%mlnow:~1,1%
  if ""%mlnow:~0,1%"" equ ""0"" set mlnow=%mlnow:~1,1%
  set /a mlnow=(%mlnow%)

  ::: Now Do the numerical calculations...
  set /a rtp=(%mlnow%-%mlclc%)
  if %rtp% lss 0 set /a rtp+=100
  ::: add -num is subtraction ^

  ::: Then our new numbers go back to padded strings!
  set rtpt=%rtp%
  if %rtp% leq 9 set ""rtpt=0%rtpt%""

  ::: To display.
  echo **%sl%         **
  echo **%l1%**
  
  ::: !!! revised RC8-v8.5.6.80 mods CONDENSED - REUSABLE !!!
  set strlen=""%bats%\string_length.bat""
  set pads=""%bats%\add_padding.bat""
  ::: vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
  set line=It's %dayOfWeek% %mt% %daysnow%%ned%, %yearnow% @ %nowtime%
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  if %test21% == 7 echo . & echo pause-8 & echo . & pause & echo .
  ::: ^v extended uses of set line=bla & call %pads%
  set line=Processing Time was: 0.%rtpt% seconds on this System!
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  echo **%l1%**
  if %test21% == 7 echo . & echo pause-9 & echo . & pause & echo .
  ::: 
  set line=Program Started: %datethen% @ %timethen%
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  ::: 
  set line=Program Finish:  %calcdate% @ %calctime%
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  echo **%l1%**
  ::: 
  set line=%mt% is the %mtn%%ext% month. %mt% has %dim% days.
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  ::: 
  REM if %test21% == 7 echo . & echo pause-9v & echo . & pause & echo .
  if %mod% equ 0 set line=%msg% & if exist %pads% if exist %strlen% call %pads% & echo **%l1%** & echo **      %line%**
  if %test21% == 7 echo . & echo pause-10 & echo . & pause & echo .
  ::: end R8 mods


  :::::::::::::::::::::::::::::::::::::
  :: Calculate how long it has been. ::
  :::::::::::::::::::::::::::::::::::::
  set /a centi=(%mln%-%mlt%)
  if %centi% lss 0 set /a scn-=1 & set /a ""centi=(100+%centi%)""

  set /a secs=(%scn%-%sct%)
  if %secs% lss 0 set /a min-=1 & set /a ""secs=(60+%secs%)""

  set /a mins=(%min%-%mit%)
  if %mins% lss 0 set /a hrn-=1 & set /a ""mins=(60+%mins%)""

  set /a hour=(%hrn%-%hrt%)
  if %hour% lss 0 set /a dyn-=1 & set /a ""hour=(24+%hour%)""

  set /a days=(%dyn%-%dyt%)
  if %days% lss 0 set /a mtn-=1 & set /a ""days=(%dim%+%days%)""

  set /a mnth=(%mtn%-%mtt%)
  if %mnth% lss 0 set /a yrn-=1 & set /a ""mnth=(12+%mnth%)""

  set /a year=(%yrn%-%yrt%)
  if %year% lss 0 set /a ""year=0""

  if %test21% == 7 echo . & echo pause-11 & echo . & pause & echo .


  ::::::::::::::::::::::::::::::::::
  :: Check all values and Pad text
  ::::::::::::::::::::::::::::::::::
  if %year% lss 0 goto err

  set yrs=%year%
  if %year% lss 10 set yrs=0%year%
  ::
  if %mnth% lss 0 goto err
  if %mnth% gtr 12 goto err

  if %test21% == 7 echo . & echo pause-12 & echo . & pause & echo .

  set mts=%mnth%
  if %mnth% lss 10 set mts=0%mnth%
  ::
  if %days% lss 0 goto err
  if %days% gtr %dim% goto err

  set dys=%days%
  if %days% lss 10 set dys=0%days%
  ::
  if %hour% lss 0 goto err
  if %hour% gtr 23 goto err

  set hrs=%hour%
  if %hour% lss 10 set hrs=0%hour%
  ::
  if %mins% lss 0 goto err
  if %mins% gtr 59 goto err

  if %test21% == 7 echo . & echo pause-13 & echo . & pause & echo .

  set mns=%mins%
  if %mins% lss 10 set mns=0%mins%
  ::
  if %secs% lss 0 goto err
  if %secs% gtr 59 goto err

  set scs=%secs%
  if %secs% lss 10 set scs=0%secs%
  ::
  if %centi% lss 0 goto err
  if %centi% gtr 99 goto err

  set mli=%centi%
  if %centi% lss 10 set mli=0%centi%

  if %test21% == 7 echo . & echo pause-14 & echo . & pause & echo .

  ::::::::::::::::::::
  :: Log Code 7     ::
  ::::::::::::::::::::
  :: RESULTS CHECK  ::
  ::::::::::::::::::::
  echo **%l1%**
  set line=Runtime Calculated with RunT-8.7.1
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  set line= ==================================
  if exist %pads% if exist %strlen% call %pads%
  echo **     %line% **
  set line=%yrs% years, %mts% months,  %dys% days,
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  set line=%hrs% hours, %mns% minutes, %scs%.%mli% seconds.
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  echo **%l1%**
  set line=Bye Bye For Now! Fare Well. Come Again. Adios!
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  echo **%l1%**
  echo .
  goto return

:err
  echo **%l2%**
  set line=Error Detected, Please Review it.
  if exist %pads% if exist %strlen% call %pads%
  echo **      %line%**
  echo **%l2%**
  :: Programmatic pause for beta test user action.
  pause
  echo %l2%

:return
  if %test21% == 7 echo Pause-END & pause
  exit /b %errorlevel%



  ::: 100% -JpE-


"
sAquen8s,eponential_powers.bat,GlobalAccessSoftware,Batch,Friday 3rd of November 2023 01:47:54 AM CDT,"

::: RC8

  if not defined vers set vers=v8.5.7.84

::: SAMPLE USAGE and Function
::: set /a base=10 & set /a exponent=5
::: set fn=""%bats%\exponential_powers.bat""
::: call %fn% answer %baseNum% %exponent%
::: echo . & echo The Answer for 10\5 is: %answer%.
::: echo . & pause & echo .

::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:powers <intVar rslt, intVar base, intVar expo>
  setlocal
  set rslt=%~1 & set base=%~2
  set expo=%~3 & set /a answ=1
  for /l %%n in (1, 1, %expo%) do (
    if %answ% gtr 2147483647 pause & break
    if %answ% leq 0 pause & break
    set /a answ*=%base%
    )
  if %answ% gtr 2147483647 (
    goto oops ) else (
      if %answ% leq 0 goto oops )
:end
  endlocal & set %~1=%answ% 
  exit /b %errorlevel%
::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:oops
  set answ=That number is out of range.
  goto end


  :::  100%  -JpE-
"
1c7Nm28K,KPI (Key performance indicators) Landing,tamkin,JavaScript,Friday 3rd of November 2023 01:07:49 AM CDT,"import { AddOutlined, SaveAlt } from ""@mui/icons-material"";
import { Tooltip } from ""@mui/material"";
import { useFormik } from ""formik"";
import { useEffect, useMemo, useState } from ""react"";
import { shallowEqual, useDispatch, useSelector } from ""react-redux"";
import { useHistory } from ""react-router-dom"";
import { toast } from ""react-toastify"";
import AntTable from ""../../../../common/AntTable"";
import MasterFilter from ""../../../../common/MasterFilter"";
import NoResult from ""../../../../common/NoResult"";
import PrimaryButton from ""../../../../common/PrimaryButton"";
import Loading from ""../../../../common/loading/Loading"";
import NotPermittedPage from ""../../../../common/notPermitted/NotPermittedPage"";
import { setFirstLevelNameAction } from ""../../../../commonRedux/reduxForLocalStorage/actions"";
import { gray900 } from ""../../../../utility/customColor"";
import useDebounce from ""../../../../utility/customHooks/useDebounce"";
import { getKPIsLanding, kpisLandingColumn } from ""./helper"";

const initData = {
  search: """",
};

const KpiLanding = () => {
  const { orgId, buId, employeeId } = useSelector(
    (state) => state?.auth?.profileData,
    shallowEqual
  );

  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(setFirstLevelNameAction(""Performance Management System""));
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // permission

  const { permissionList } = useSelector((state) => state?.auth, shallowEqual);
  const permission = useMemo(
    () => permissionList?.find((item) => item?.menuReferenceId === 30356),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );

  const searchData = (keywords, allData, setRowDto) => {
    try {
      const regex = new RegExp(keywords?.toLowerCase());
      let newDta = allData?.filter(
        (item) =>
          regex.test(item?.strPmtype?.toLowerCase()) ||
          regex.test(item?.strObjective?.toLowerCase()) ||
          regex.test(item?.strKpis?.toLowerCase()) ||
          regex.test(item?.strAggregationType?.toLowerCase()) ||
          regex.test(item?.kpiformat?.toLowerCase()) ||
          regex.test(item?.strMinMax?.toLowerCase())
      );
      setRowDto(newDta);
    } catch {
      setRowDto([]);
    }
  };

  const history = useHistory();
  const debounce = useDebounce();

  // states
  const [loading, setLoading] = useState(false);
  const [rowDto, setRowDto] = useState([]);

  const [allData, setAllData] = useState([]);

  const [pages, setPages] = useState({
    current: 1,
    pageSize: 20,
    total: 0,
  });

  const { values, setFieldValue } = useFormik({
    initialValues: initData,
  });

  const getData = () => {
    getKPIsLanding(
      buId,
      orgId,
      setAllData,
      setRowDto,
      setLoading,
      pages,
      setPages
    );
  };

  const handleTableChange = ({ pagination }) => {
    setPages((prev) => ({ ...prev, ...pagination }));
    if (
      (pages?.current === pagination?.current &&
        pages?.pageSize !== pagination?.pageSize) ||
      pages?.current !== pagination?.current
    ) {
      return getKPIsLanding(
        buId,
        orgId,
        setAllData,
        setRowDto,
        setLoading,
        pagination,
        setPages
      );
    }
  };

  useEffect(() => {
    getData();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [orgId, buId]);

  return (
    <>
      {loading && <Loading />}
      {permission?.isView ? (
        <form>
          <div className=""table-card"">
            <div className=""table-card-heading heading pt-0"">
              <div className=""d-flex justify-content-between align-items-center"">
                <Tooltip title=""Export CSV"" arrow>
                  <button
                    type=""button""
                    className=""btn-save""
                    onClick={(e) => {
                      e.stopPropagation();
                      return toast.warn(""comming soon"");
                    }}
                  >
                    <SaveAlt
                      sx={{
                        color: gray900,
                        fontSize: ""14px"",
                      }}
                    />
                  </button>
                </Tooltip>
                <div className=""ml-2"">
                  {rowDto?.length > 0 ? (
                    <>
                      <h6 className=""count"">Total {pages?.total} Objectives</h6>
                    </>
                  ) : (
                    <>
                      <h6 className=""count"">Total result 0</h6>
                    </>
                  )}
                </div>
              </div>
              <div className=""table-card-head-right"">
                <ul>
                  <li>
                    <MasterFilter
                      isHiddenFilter
                      styles={{
                        marginRight: ""0px"",
                      }}
                      width=""200px""
                      inputWidth=""200px""
                      value={values?.search}
                      setValue={(value) => {
                        debounce(() => {
                          searchData(value, allData, setRowDto);
                        }, 500);
                        setFieldValue(""search"", value);
                      }}
                      cancelHandler={() => {
                        getData();
                        setFieldValue(""search"", """");
                      }}
                    />
                  </li>
                  <li>
                    <PrimaryButton
                      type=""button""
                      className=""btn btn-default flex-center""
                      label={""New KPI""}
                      icon={
                        <AddOutlined
                          sx={{
                            marginRight: ""0px"",
                            fontSize: ""15px"",
                          }}
                        />
                      }
                      onClick={() => {
                        if (!permission?.isCreate)
                          return toast.warn(""You don't have permission"");
                        history.push(`/pms/configuration/kpis/create`);
                      }}
                    />
                  </li>
                </ul>
              </div>
            </div>
            <div>
              {rowDto?.length > 0 ? (
                <div className=""table-card-styled employee-table-card tableOne table-responsive mt-4"">
                  <AntTable
                    data={rowDto?.length > 0 ? rowDto : []}
                    columnsData={kpisLandingColumn(
                      pages?.current,
                      pages?.pageSize,
                      history,
                      orgId,
                      employeeId,
                      setLoading,
                      getData
                    )}
                    pages={pages?.pageSize}
                    pagination={pages}
                    handleTableChange={handleTableChange}
                  />
                </div>
              ) : (
                <NoResult />
              )}
            </div>
          </div>
        </form>
      ) : (
        <NotPermittedPage />
      )}
    </>
  );
};

export default KpiLanding;
"
YXHKHKLu,Reusable ant table component,tamkin,JavaScript,Friday 3rd of November 2023 01:02:52 AM CDT,"import { Table } from ""antd"";
import _ from ""lodash"";
import React, { useState } from ""react"";
import { useEffect } from ""react"";
import { antFilterData } from ""../utility/AntFIlterData"";
import { dateFormatter } from ""../utility/dateFormatter"";

export const AntPageSize = 100;
const AntTable = ({
  data,
  columnsData,
  setColumnsData,
  removePagination = false,
  onRowClick,
  rowClassName,
  rowKey,
  setPage,
  setPaginationSize,
  handleTableChange,
  pages,
  pagination,
  extraPageSizeOptions,
  showSizeChanger,
  tableContainerClass,
}) => {
  const [filteredInfo, setFilteredInfo] = useState({});
  const [filterList, setFIlterList] = useState([]);

  useEffect(() => {
    const filterList = Array.isArray(data) ? [...data] : [];
    setFIlterList(filterList);
  }, [data]);
  let columns = columnsData.map((item) => {
    return {
      ...item,
      sorter: item?.sorter
        ? item?.isNumber
          ? (a, b) => a?.[item?.dataIndex] - b?.[item?.dataIndex]
          : item?.isDate
          ? (a, b) => {
              return (
                new Date(dateFormatter(a?.[item?.dataIndex])) -
                new Date(dateFormatter(b?.[item?.dataIndex]))
              );
            }
          : (a, b) =>
              a?.[item?.dataIndex]?.length - b?.[item?.dataIndex]?.length
        : """",
      filters: item?.filter
        ? item?.isDate
          ? _.uniqWith(
              antFilterData(filterList)((i) =>
                dateFormatter(i?.[item?.dataIndex])
              ),
              _.isEqual
            )
          : _.uniqWith(
              antFilterData(filterList)((i) => i?.[item?.dataIndex]),
              _.isEqual
            )
        : """",
      filteredValue: filteredInfo?.[item?.dataIndex] || null,
      onFilter: (value, record) =>
        item?.isDate
          ? dateFormatter(record?.[item?.dataIndex])?.startsWith(value)
          : record?.[item?.dataIndex]?.startsWith(value),
      filterSearch: true,
    };
  });

  const handleChange = (pagination, filters, sorter, newRowDto) => {
    setFilteredInfo(filters);
    setColumnsData?.(newRowDto?.currentDataSource);
    setFIlterList?.(newRowDto?.currentDataSource);
    handleTableChange?.({ pagination, filters, sorter, newRowDto });
  };
  return (
    <div className={tableContainerClass || """"}>
      <Table
        size=""small""
        columns={columns}
        dataSource={data}
        onChange={handleChange}
        pagination={
          !removePagination
            ? {
                ...(pagination
                  ? {
                      ...pagination,
                      showSizeChanger: showSizeChanger || true,
                      totalBoundaryShowSizeChanger: 25,
                    }
                  : {
                      onChange(current, pageSize) {
                        setPage?.(current);
                        setPaginationSize?.(pageSize);
                      },
                      defaultPageSize: pages ? pages : AntPageSize,
                      showSizeChanger: showSizeChanger || true,
                    }),
                pageSizeOptions: [
                  ""5"",
                  ""10"",
                  ""15"",
                  ""25"",
                  ""100"",
                  ...(extraPageSizeOptions?.length > 0
                    ? extraPageSizeOptions
                    : []),
                ],
              }
            : false
        }
        onRow={(dataRow, index) => {
          return {
            onClick: (e) => {
              e.stopPropagation();
              onRowClick?.(dataRow, index);
            },
          };
        }}
        rowKey={rowKey}
        rowClassName={rowClassName || """"}
      />
    </div>
  );
};

export default AntTable;
"
uPZdqRpY,kit_sdl2_kmixerAsync.c as of 2023-11-02,Kitomas,C,Friday 3rd of November 2023 12:58:23 AM CDT,"#include ""../include/kit_sdl2/kit_kmixer.h""
#include ""../_private/include/_kit_privmacro.h""
#include ""../_private/include/_kit_kmixerAllPrivate.h""




void _kit_kmixerAsyncRemoveCallback(void* _userdata){
  if(_userdata != NULL){
    _kit_kmixerAsyncUserdata* userdata = _userdata;

    //destroy all of the track mutexes
    _kit_kmixerAsyncTrack* tracks = userdata->tracks;
    Uint32              numTracks = userdata->numTracks;
    for(Uint32 i=0; i<numTracks; ++i){
      if(tracks[i].lock != NULL){
        SDL_DestroyMutex(tracks[i].lock);
        tracks[i].lock = NULL;
      }
    }

    //destroy main userdata mutex
    if(userdata->lock != NULL){
      SDL_DestroyMutex(userdata->lock);
      userdata->lock = NULL;
    }

    SDL_free(userdata);
  }
}



void _kit_kmixerAsyncTrackCallback(void* userdata, void* _stream, int size, SDL_bool hasInput){
  _kit_kmixerAsyncTrack* track = userdata;
  kit_acodecPCM*           pcm = track->pcm;

  SDL_LockMutex(track->lock);

  kit_coreMemset(_stream,0,size);
  //if pcm is NULL, the clip has finished playing, and will be deactivated by the main voice
  if(pcm == NULL) goto _exit_early;
  kit_kmixerVoiceSpec* vspec = track->vspec;

  //lower volume to 0 within 10ms if speed reaches 0
  #define speed0DeltaVolMS 10.0f
  const float speed0DeltaVol = -( (1000.0f/speed0DeltaVolMS) / vspec->freq);


  if(track->timeStamp){
    //loops will count down to 0, whereupon the clip will finish (-1 for endless loop)
    track->loops = pcm->loopCount;

    //calculate position based on difference between device and clip timestamps
    Uint64  trackTimeStamp = track->timeStamp;
    Uint64 deviceTimeStamp = track->device->_timeStampEnd;

    //device->_timeStampEnd is used instead of Start, so the clip's time stamp
     //can be compared to the last time the device callback exited
    double difference = (double)(trackTimeStamp-deviceTimeStamp)/1000;
    difference *= vspec->freq; //convert seconds to samples
    track->position = -(difference*track->speed); //starts playing when position reaches 0

    track->timeStamp = 0; //to ensure that this only occurs once per clip queued
  }


  float        pan = track->pan;
  double  position = track->position;
  float      speed = track->speed;
  Uint16     loops = track->loops;
  Uint16  stopping = track->stopping;
  Uint64 loopStart = pcm->loopStart;
  Uint64   loopEnd = pcm->loopEnd-1;
  //Uint64 src_len = pcm->numSamples; (unnecessary, as loopEnd is used instead)
  Uint16   dst_len = size / (sizeof(float)<<vspec->stereo);

  //make sure volume is clamped before applying it to the first sample,
   //since volume is only clamped after deltaVol is applied otherwise
  track->volume.l = CLAMP(track->volume.l, 0.0f,1.0f);
  track->volume.r = CLAMP(track->volume.r, 0.0f,1.0f);


  if(vspec->stereo){
    kit_acodecPCM_F32S* dst = _stream,  *src = pcm->f32s;

    if(track->linear){ //linear resampling
      for(Uint32 i=0; i<dst_len; ++i) _stereo_iteration(_stereo_linear)
    } else { //nearest-neighbor resampling
      for(Uint32 i=0; i<dst_len; ++i) _stereo_iteration(_stereo_nearest)
    }

  } else { //mono
    float* dst = _stream,  *src = pcm->f32;

    if(track->linear){ //linear resampling
      for(Uint32 i=0; i<dst_len; ++i) _mono_iteration(_mono_linear)
    } else { //nearest-neighbor resampling
      for(Uint32 i=0; i<dst_len; ++i) _mono_iteration(_mono_nearest)
    }

  }


  //update some values
  //track->pcm      = pcm; (unnecessary)
  track->position = position;
  track->speed    = speed;
  track->loops    = loops;
  track->stopping = stopping;

  //if the track's stopOnMute condition is met, mark track as finished,
   //so it'll be deactivated until a new clip is queued
  if(!vspec->stereo) track->volume.r = track->volume.l;
  if(track->volume.l<=0 && track->volume.r<=0  && track->stopOnMute)
    track->stopping = SDL_TRUE;

  _exit_early:
  SDL_UnlockMutex(track->lock);
}



void _kit_kmixerAsyncVoiceCallback(void* _userdata, void* _stream, int size, SDL_bool hasInput){
  _kit_kmixerAsyncUserdata* userdata = _userdata;

  SDL_LockMutex(userdata->lock);
  if(!kit_kmixerAsyncGetActiveTracks(userdata->device, userdata->rawIndex)){
    kit_coreMemset(_stream,0,size);
    goto _exit_early;
  }

  float                  pan = userdata->pan;
  kit_kmixerVoiceSpec* vspec = &userdata->vspec;
  Uint16             dst_len = size / (sizeof(float)<<vspec->stereo);

  userdata->volume.l = CLAMP(userdata->volume.l, 0.0f,1.0f);
  userdata->volume.r = CLAMP(userdata->volume.r, 0.0f,1.0f);


  if(vspec->stereo){
    kit_acodecPCM_F32S* dst = _stream;
    for(Uint32 i=0; i<dst_len; ++i){
      kit_acodecPCM_F32S sample = _stereo_volume(dst[i], (void*)userdata);
      dst[i] = _apply_pan(_stereo_clamp(sample), pan);
      _stereo_deltaVol((void*)userdata);
    }

  } else { //mono
    float* dst = _stream;
    for(Uint32 i=0; i<dst_len; ++i){
      dst[i] = _mono_clamp(_mono_volume(dst[i], (void*)userdata));
      _mono_deltaVol((void*)userdata);
    }

  }


  SDL_bool* main_active_p = kit_kmixerVoiceGetActiveRef(userdata->device, userdata->rawIndex);
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  Uint32              numTracks = userdata->numTracks;

  //force all tracks to deactivate if main voice's stopOnMute condition is met
  if(!vspec->stereo) userdata->volume.r = userdata->volume.l;
  if(userdata->volume.l<=0 && userdata->volume.r<=0  &&  userdata->stopOnMute){
    for(Uint32 ti=0; ti<numTracks; ++ti){
      _kit_kmixerAsyncTrack* track = &tracks[ti];
      _deactivate_track_if(track->pcm!=NULL, track);
    }
    //setting active to false here directly should be safe,
     //since voices are always locked during their callback
    //*main_active_p = SDL_FALSE;

  //otherwise, just deactivate the tracks that have finished playing its queued clip
  } else {
    //Uint32 inactiveTracks = 0;
    for(Uint32 ti=0; ti<numTracks; ++ti){
      _kit_kmixerAsyncTrack* track = &tracks[ti];

      if(kit_kmixerVoiceExists(track->device, track->rawIndex)<1) continue;
      SDL_bool track_active = kit_kmixerVoiceGetActive(track->device, track->rawIndex);

      _deactivate_track_if(track->stopping, track);
      //if(!track_active) ++inactiveTracks;

    }

    //deactivate main voice if all of its tracks are inactive
    //if(inactiveTracks == numTracks) *main_active_p = SDL_FALSE;
  }

  _exit_early:
  SDL_UnlockMutex(userdata->lock);
}




Uint32 kit_kmixerAsyncAdd(kit_kmixerDevice* device,
                          SDL_bool linearInterpolation, SDL_bool stereo,
                          Uint32 outputVoiceID, Uint32 numTracks)
{
  Uint32 mainVoiceID = 0; //0 for error by default
  _DEVICE_VALIDITY_CHECK(0)
  _IF_SDLERR(numTracks==0,;,""!numTracks"")
  int outputExists = kit_kmixerVoiceExists(device, outputVoiceID);
  _IF_SDLERR(outputExists<0,;,""outputVoiceID out of bounds"")
  _IF_SDLERR(!outputExists,;,""output voice doesn't exist"")

  //create main voice
   //(userdata is contiguous with the track data)
  size_t userdataSize = sizeof(_kit_kmixerAsyncUserdata);
  userdataSize += sizeof(_kit_kmixerAsyncTrack)*numTracks;

  kit_kmixerVoiceSpec vspec = kit_kmixerVoiceGetSpec(device,0);
  _IF_GOTO_ERROR(vspec.format==0,;)

  vspec.remove   = _kit_kmixerAsyncRemoveCallback;
  vspec.callback = _kit_kmixerAsyncVoiceCallback;
  _IF_GOTO_ERROR(kit_coreRealloc(&vspec.userdata,0,userdataSize),;)
  vspec.stereo   = stereo&1; //stereo is the only non-pointer member that's different

  mainVoiceID = kit_kmixerVoiceAdd(device,&vspec,outputVoiceID);
  _IF_GOTO_ERROR(!mainVoiceID, SDL_free(vspec.userdata) )
  kit_kmixerVoiceSetActive(device, mainVoiceID, SDL_TRUE);


  //fill in userdata
  _kit_kmixerAsyncUserdata* userdata = vspec.userdata;
  userdata->type       = type_UDAT; //U[SER]DAT[A]
  userdata->volume.l   = 1.0f;
  userdata->volume.r   = 1.0f;
  userdata->stopOnMute = SDL_FALSE; //unlike track, main's stopOnMute is false by default
  userdata->rawIndex   = mainVoiceID;
  userdata->device     = device;
  userdata->vspec      = vspec;
  userdata->tracks     = (void*)userdata+sizeof(_kit_kmixerAsyncUserdata);
  userdata->numTracks  = numTracks;
  userdata->lock       = SDL_CreateMutex();
  _IF_GOTO_ERROR(userdata->lock==NULL, kit_kmixerVoiceRemove(device, mainVoiceID) )


  //create tracks
  vspec.remove   = NULL; //only the main voice should be doing the free()'ing
  vspec.callback = _kit_kmixerAsyncTrackCallback;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  for(Uint32 ti=0; ti<numTracks; ++ti){
    _kit_kmixerAsyncTrack* track = vspec.userdata = &tracks[ti];
    track->type       = type_TRCK; //TR[A]CK
    track->volume.l   = 1.0f;
    track->volume.r   = 1.0f;
    track->stopOnMute = SDL_TRUE;
    track->rawIndex   = kit_kmixerVoiceAdd(device,&vspec,mainVoiceID);
    track->device     = device;
    track->lock       = SDL_CreateMutex();
    track->vspec      = &userdata->vspec;
    track->linear     = linearInterpolation&1;
    if(!track->rawIndex || track->lock==NULL){
      kit_kmixerVoiceRemove(device, mainVoiceID); return 0;
    }
    kit_kmixerVoiceSetActive(device, track->rawIndex, SDL_TRUE);
  }


  _noerr_:
  _error_:
  return mainVoiceID;
}



Uint32 kit_kmixerAsyncPlayPVS(kit_kmixerDevice* device, Uint32 voiceID, kit_acodecPCM* pcm,
                              float pan, float volumeL, float volumeR, double speedMultiplier)
{
  Uint64 trackTimeStamp = SDL_GetTicks64();
  Uint32 trackNum = -1; //set to -1 for error by default
  SDL_bool udat_lock = SDL_FALSE,  trck_lock = SDL_FALSE;
  _kit_kmixerAsyncUserdata* userdata = NULL;
  _kit_kmixerAsyncTrack* track = NULL;

  _IF_SDLERR(pcm==NULL,;,""!pcm"")
  _IF_SDLERR(!NORMALIZED(pan),;,""pan must be -1.0f -> 1.0f"")
  _IF_SDLERR(volumeL<0,;,""volumeL < 0"")
  _IF_SDLERR(volumeR<0,;,""volumeR < 0"")
  _IF_SDLERR(speedMultiplier<=0,;,""speedMultiplier <= 0"")

  kit_kmixerVoiceSpec vspec = kit_kmixerVoiceGetSpec(device, voiceID);
  _IF_GOTO_ERROR(!vspec.format,;)
  userdata = vspec.userdata;
  _IF_SDLERR(userdata==NULL,;,""invalid async voice"")
  _IF_SDLERR(userdata->type!=type_UDAT,;,""invalid async voice"")

  _IF_SDLERR(pcm->magic!=KPCM_MAGIC,;,""invalid pcm struct"")
  _IF_SDLERR(pcm->format!=AUDIO_F32,;,""pcm->format != AUDIO_F32"")
  _IF_SDLERR(pcm->loopStart>=pcm->loopEnd,;,""pcm->loopStart >= pcm->loopEnd"")
  _IF_SDLERR(pcm->loopEnd>pcm->numSamples,;,""pcm->loopEnd > pcm->numSamples"")
  _IF_SDLERR(pcm->numSamples<2,;,""pcm->numSamples < 2"")
  _IF_SDLERR(pcm->sampleRate!=vspec.freq,;,""pcm->sampleRate != device freq"")
  _IF_SDLERR((pcm->channels-1)!=vspec.stereo,;,""pcm->channels is invalid"")


  //look for empty track to queue pcm clip with
kit_kmixerDeviceLock(device, SDL_TRUE);
  SDL_LockMutex(userdata->lock);  udat_lock = SDL_TRUE;
  Uint32              numTracks = userdata->numTracks;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;

  for(Uint32 i=0; i<numTracks; ++i){
    track = &tracks[i];
    SDL_LockMutex(track->lock);  trck_lock = SDL_TRUE;
    while(device->_timeStampStart > device->_timeStampEnd) SDL_Delay(1);
    if(!track->stopping && track->pcm==NULL){
      int exists = kit_kmixerVoiceExists(device, track->rawIndex);
      _IF_SDLERR(!exists,;,""track %u's voice doesn't exist"",i)
      trackNum = i; break;
    }

    SDL_UnlockMutex(track->lock);  trck_lock = SDL_FALSE;

  }
kit_kmixerDeviceLock(device, SDL_FALSE);
  SDL_UnlockMutex(userdata->lock);  udat_lock = SDL_FALSE;
  _IF_GOTO(trackNum==-1,_noerr_,;) //exit early if no free track was found


  //track = &tracks[trackNum]; (track was already set inside the loop)
  track->pan        = pan;
  track->volume.l   = volumeL;
  track->volume.r   = volumeR;
  track->delta.l    = 0.0f;
  track->delta.r    = 0.0f;
  track->stopOnMute = SDL_TRUE;

  track->pcm        = pcm;
  track->timeStamp  = trackTimeStamp;
  track->speed      = speedMultiplier;
  track->deltaS     = 0.0;


  //kit_kmixerVoiceSetActive(device, track->rawIndex, SDL_TRUE);
  //if(!kit_kmixerVoiceGetActive(device, voiceID)) kit_kmixerVoiceSetActive(device, voiceID, SDL_TRUE);
  _noerr_: if(trackNum == -1) trackNum = -2; //-2 for 'no available track found; no error'
  _error_:
  if(udat_lock) SDL_UnlockMutex(userdata->lock);
  if(trck_lock) SDL_UnlockMutex(track->lock);
  return trackNum;
}




//returns -1 (U64_MAX) pointer on error
#define UDAT_ERROR ((void*)U64_MAX) //(also used for GetTrack's error)
_kit_kmixerAsyncUserdata* _kit_kmixerAsyncGetUserdata(kit_kmixerDevice* device, Uint32 voiceID){
  kit_kmixerVoiceSpec vspec = kit_kmixerVoiceGetSpec(device, voiceID);
  _IF_GOTO_ERROR(!vspec.format,;)

  _kit_kmixerAsyncUserdata* userdata = vspec.userdata;
  _IF_SDLERR(userdata==NULL,;,""invalid async voice"")
  _IF_SDLERR(userdata->type!=type_UDAT,;,""invalid async voice"")

  /*!err*/ return userdata;
  _error_: return UDAT_ERROR; // = (void*)0xffffffffffffffff
}



_kit_kmixerAsyncTrack* _kit_kmixerAsyncGetTrack(kit_kmixerDevice* device,
                                                _kit_kmixerAsyncUserdata* userdata, Uint32 trackNum)
{
  _IF_SDLERR(trackNum>=userdata->numTracks,;,""trackNum out of bounds"")
  _kit_kmixerAsyncTrack* track = &userdata->tracks[trackNum];

  int exists = kit_kmixerVoiceExists(device, track->rawIndex);
  _IF_SDLERR(!exists,;,""track %u's voice nonexistent"",trackNum)

  /*!err*/ return track; //will not error even if no clip is queued (track->pcm = NULL)
  _error_: return UDAT_ERROR; // = (void*)0xffffffffffffffff
}




int kit_kmixerAsyncStopTrack(kit_kmixerDevice* device, Uint32 voiceID,
                             Uint32 trackNum)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)


  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  if(track->pcm == NULL) return 1; //already stopped; return a 1
  else track->pcm = NULL;


  int exists = kit_kmixerVoiceExists(device, track->rawIndex);
  _IF_SDLERR(!exists,;,""track %u's voice nonexistent"",trackNum)

  //_IF_GOTO_ERROR(kit_kmixerVoiceSetActive(device, track->rawIndex, SDL_FALSE),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerAsyncStopAllTracks(kit_kmixerDevice* device, Uint32 voiceID){
  int returnStatus = -1;
  SDL_bool locked = SDL_FALSE;
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)
  _IF_GOTO_ERROR(kit_kmixerVoiceLock(device, voiceID)<0,;)
  locked = SDL_TRUE;


  Uint32              numTracks = userdata->numTracks;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  SDL_bool tracksAlreadyStopped = SDL_TRUE; //set to false if any track was halted
  for(Uint32 i=0; i<numTracks; ++i){
    if(tracks[i].pcm != NULL) tracksAlreadyStopped = SDL_FALSE;
    tracks[i].pcm = NULL;

    Uint32 rawIndex = tracks[i].rawIndex;

    int exists = kit_kmixerVoiceExists(device, rawIndex);
    _IF_SDLERR(!exists,;,""track %u's voice nonexistent"",rawIndex)

    //_IF_GOTO_ERROR(kit_kmixerVoiceSetActive(device, rawIndex, SDL_FALSE),;)
  }


  returnStatus = tracksAlreadyStopped;

  _error_:
  if(locked && kit_kmixerVoiceUnlock(device, voiceID)<0) returnStatus = -1;
  return returnStatus;
}




Uint32 kit_kmixerAsyncGetActiveTracks(kit_kmixerDevice* device, Uint32 voiceID){
  Uint32 activeTracks = -1; //-1 for error by default
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)


  activeTracks = 0; //there are no errors past this, so setting to 0 is safe here
  Uint32              numTracks = userdata->numTracks;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  for(Uint32 i=0; i<numTracks; ++i){
    if(tracks[i].pcm != NULL) ++activeTracks;
  }


  _error_: return activeTracks;
}



Uint32 kit_kmixerAsyncGetNumTracks(kit_kmixerDevice* device, Uint32 voiceID){
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  if(userdata==UDAT_ERROR) return -1;
  else return userdata->numTracks;
}



int kit_kmixerAsyncGetTrackPlayState(kit_kmixerDevice* device, Uint32 voiceID,
                                     Uint32 trackNum)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  /*!err*/ return track->pcm != NULL;
  _error_: return -1;
}



double kit_kmixerAsyncGetTrackPosition(kit_kmixerDevice* device, Uint32 voiceID,
                                       Uint32 trackNum)
{
  double position = NAN; //NaN for error by default
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)


  Sint32 freq = userdata->vspec.freq; //sample rate
  position = track->position*freq; //position, in seconds


  _error_:
  return position;
}



int kit_kmixerAsyncSetTrackStopOnMute(kit_kmixerDevice* device, Uint32 voiceID,
                                      Uint32 trackNum, SDL_bool stopOnMute)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  track->stopOnMute = stopOnMute; //changing stopOnMute doesn't require a lock

  /*!err*/ return  0;
  _error_: return -1;
}




int kit_kmixerAsyncSetTrackDeltaS(kit_kmixerDevice* device, Uint32 voiceID,
                                  Uint32 trackNum, double deltaS)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  track->deltaS = deltaS; //changing deltaS doesn't require a lock

  /*!err*/ return  0;
  _error_: return -1;
}

"
jTQfEjXp,kit_sdl2_kmixerVoice as of 2023-11-02,Kitomas,C,Friday 3rd of November 2023 12:56:58 AM CDT,"#include ""../include/kit_sdl2/kit_kmixer.h""
#include ""../_private/include/_kit_privmacro.h""
#include ""../_private/include/_kit_kmixerAllPrivate.h""

/* example of simd stereo to mono without sse3's hadd
static inline void _sse1_s_to_m(float* dst, __m128 vector){
  __m128 shuffled = _mm_shuffle_ps(vector,vector, _MM_SHUFFLE(2,3,0,1));
  __m128 sum = _mm_add_ps(vector,shuffled);
  __m128 result = _mm_shuffle_ps(sum,sum, _MM_SHUFFLE(3,1,2,0));
  _mm_storel_pi((__m64*)dst,result);
}
*/


//for visual clarity during ProcChannels
 //(this could also just be an enum probably, but w/e)
#define _M_to_M (0) //  mono->mono
#define _M_to_S (1) //  mono->stereo
#define _S_to_M (2) //stereo->mono
#define _S_to_S (3) //stereo->stereo
/* i think i need to fix this
#define _MM256_SHUFFLE(c7,c6,c5,c4,c3,c2,c1,c0) \
  ((_MM_SHUFFLE(c7,c6,c5,c4)<<8)|_MM_SHUFFLE(c3,c2,c1,c0)) */



//converts u8, i16, and i32 samples to f32 samples
 //(will basically just copy input to output if input is also f32)
static inline void _kit_kmixerVoiceProcFromTypeFallback(void* _dataIn, float* dataOut,
                                                        Uint32 numSamples, SDL_AudioFormat typeIn)
{ //if nothing else works
  kit_acodecPCMSamples dataIn = { .data = _dataIn };
  float rawSample; //used for max(original_sample,-1) basically
  switch(typeIn){
  case AUDIO_U8 : for(Uint32 i=0; i<numSamples; ++i){ rawSample = (float)(dataIn.u_8[i]-0x80)*inv_i_8;
                                                      dataOut[i] = (rawSample>=-1.0f)?rawSample:-1.0f; } break;
  case AUDIO_S16: for(Uint32 i=0; i<numSamples; ++i){ rawSample = (float) dataIn.i16[i]      *inv_i16;
                                                      dataOut[i] = (rawSample>=-1.0f)?rawSample:-1.0f; } break;
  case AUDIO_S32: for(Uint32 i=0; i<numSamples; ++i){ rawSample = (float) dataIn.i32[i]      *inv_i32;
                                                      dataOut[i] = (rawSample>=-1.0f)?rawSample:-1.0f; } break;
  case AUDIO_F32: for(Uint32 i=0; i<numSamples; ++i){ dataOut[i] =        dataIn.f32[i];               } }
}
void _kit_kmixerVoiceProcFromType(void* dataIn, void* dataOut,
                                  Uint32 sampleFrames, SDL_AudioFormat typeIn, SDL_bool isStereo)
{
  Uint32 numSamples = sampleFrames<<isStereo;
  _kit_kmixerVoiceProcFromTypeFallback(dataIn,dataOut,numSamples,typeIn);
}




//converts f32 samples to u8, i16, and i32 samples
static inline void _kit_kmixerVoiceProcToTypeFallback(float* dataIn, void* _dataOut,
                                                      Uint32 numSamples, SDL_AudioFormat typeOut)
{ //if nothing else works
  kit_acodecPCMSamples dataOut = { .data = _dataOut };
  float rawSample, rawSampleB;
  switch(typeOut){
  case AUDIO_U8 : for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.u_8[i] = (rawSampleB<=1.0f)?rawSampleB*I_8_MAX+0x80:I_8_MAX; } break;
  case AUDIO_S16: for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.i16[i] = (rawSampleB<=1.0f)?rawSampleB*I16_MAX:I16_MAX; } break;
  case AUDIO_S32: for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.i32[i] = (rawSampleB<=1.0f)?rawSampleB*I32_MAX:I32_MAX; } break;
  case AUDIO_F32: for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.f32[i] = (rawSampleB<=1.0f)?rawSampleB:1.0f; } }
}
void _kit_kmixerVoiceProcToType(void* dataIn, void* dataOut,
                                Uint32 sampleFrames, SDL_AudioFormat typeOut, SDL_bool isStereo)
{
  Uint32 numSamples = sampleFrames<<isStereo;
  _kit_kmixerVoiceProcToTypeFallback(dataIn,dataOut,numSamples,typeOut);
}




//assumes samples are f32
static inline void _kit_kmixerVoiceProcChannelsFallback(float* dataInM, float* dataOutM,
                                                        Uint32 sampleFrames, int channelInfo)
{ //if nothing else works
  kit_acodecPCM_F32S* dataInS  = (void*)dataInM;
  kit_acodecPCM_F32S* dataOutS = (void*)dataOutM;
  switch(channelInfo){
  case _M_to_S: for(Uint32 i=0; i<sampleFrames; ++i){ dataOutS[i].l=dataOutS[i].r = dataInM[i]; } break;
  case _S_to_M: for(Uint32 i=0; i<sampleFrames; ++i){ dataOutM[i] = (dataInS[i].l+dataInS[i].r)*0.5f; } break;
  case _S_to_S: sampleFrames<<=1; SDL_FALLTHROUGH; //multiply mono by 2 to make length of stereo
  case _M_to_M: for(Uint32 i=0; i<sampleFrames; ++i){ dataOutM[i] = dataInM[i]; }
  }
}
void _kit_kmixerVoiceProcChannels(void* dataIn, void* dataOut, Uint32 sampleFrames, int channelInfo){
  _kit_kmixerVoiceProcChannelsFallback(dataIn,dataOut, sampleFrames,channelInfo);
}




#define _CH_INFO(a,b) (((a)<<1)|(b))
//assumes input AND output samples are f32 (intermediate type is determined by the given voice)
int _kit_kmixerVoiceProc(void* data){ //(this is an SDL_ThreadFunction)
  _kit_kmixerVoice* voice = data;
  if(voice == NULL) return 1; //skip if voice is NULL
  if(voice->lock == NULL) return 2; //skip if voice was removed
  if(voice->output == U32_MAX) return 3; //skip if voice is voice 0
  SDL_LockMutex(voice->lock);


  void *ibuffer  = voice->bufferInput.data,  *obuffer = voice->bufferOutput.data;
  void *ubuffer  = voice->bufferUser.data,   *cbuffer = voice->bufferConvert.data;
  void *userdata = voice->spec.userdata,  *_stream = ubuffer;
   ///
  SDL_bool hasInput = voice->inputs!=NULL;
  SDL_bool ustereo  = voice->spec.stereo;
  SDL_bool ostereo  = voice->stereoOutput;
   ///
  SDL_AudioFormat uformat = voice->spec.format;
  Uint32           frames = voice->spec.samples;
  Uint32     ubuffer_size = voice->spec._size;


  //convert (if necessary) input type (format) from f32
  int userTypeIsF32 = uformat==AUDIO_F32;
  if(userTypeIsF32) _stream = ibuffer; //input and user are identical; just reroute
  else _kit_kmixerVoiceProcToType(ibuffer, ubuffer, frames,uformat,ustereo);


  //the actual user callback
  voice->spec.callback(userdata, _stream, ubuffer_size, hasInput);


  //convert (if necessary) to f32 and channels, sending result to output
  int sameChannels = ustereo==ostereo;
  if(sameChannels){ //convert type (or just copy contents if _stream is f32)
    _kit_kmixerVoiceProcFromType(_stream,obuffer, frames,uformat,ustereo);

  } else if(userTypeIsF32){ //convert channels
    _kit_kmixerVoiceProcChannels(_stream,obuffer, frames,_CH_INFO(ustereo,ostereo));

  } else { //convert type and channels
    _kit_kmixerVoiceProcFromType(_stream,cbuffer, frames,uformat,ustereo);
    _kit_kmixerVoiceProcChannels(cbuffer,obuffer, frames,_CH_INFO(ustereo,ostereo));

  }


  SDL_UnlockMutex(voice->lock);
  return 0;
}




//assumes all samples are f32
//if nothing else works
static inline void _kit_kmixerVoiceMixFallback(_kit_kmixerVoice* voiceO){
  kit_coreVector**  raw_p = &voiceO->device->_raw;
  _kit_kmixerVoice* raw   = (*raw_p)->data;

  Uint32*              inputs      = voiceO->inputs->data;
  Uint32               inputs_len  = voiceO->inputs->x;
  kit_acodecPCM_F32S*  samplesO    = voiceO->bufferInput.f32s;
  Uint32               samples_len = voiceO->spec.samples;

  size_t bufferSize = (samples_len*sizeof(float))<<voiceO->spec.stereo;
  kit_coreMemset(voiceO->bufferInput.data, 0, bufferSize);
  //so stereo volume can apply even to a mono stream
   //(assuming volR is set to volL)
  samples_len >>= !voiceO->spec.stereo;


  for(Uint32 v=0; v<inputs_len; ++v){
    _kit_kmixerVoice* voiceI = &raw[ inputs[v] ];
    if(voiceI->lock == NULL){ inputs[v] = 0; continue; }
    if(!voiceI->active) continue; //also skip if voice is inactive
    SDL_LockMutex(voiceI->lock);
    kit_acodecPCM_F32S* samplesI = voiceI->bufferOutput.f32s;

    float volL = CLAMP(voiceI->volL, 0.0f,1.0f);
    float volR = MIN(voiceI->volR, 1.0f);
    if(!voiceI->stereoOutput || volR<0) volR = volL;

    if(     volL==0.0f && volR==0.0f) continue; //volume is muted; skip
    else if(volL==1.0f && volR==1.0f) goto _normal_volume; //because sample*1=sample
    else if(volL>=0.0f){
      for(Uint32 i=0; i<samples_len; ++i){
        samplesO[i].l += samplesI[i].l*volL;
        samplesO[i].r += samplesI[i].r*volR;
      }

    } else { _normal_volume:
      for(Uint32 i=0; i<samples_len; ++i){
        samplesO[i].l += samplesI[i].l;
        samplesO[i].r += samplesI[i].r;
      }

    }

    SDL_UnlockMutex(voiceI->lock);
  }


  //hard clip output samples to between -1.0f and 1.0f
  for(Uint32 i=0; i<samples_len; ++i){
    float sampleL = samplesO[i].l;
    float sampleR = samplesO[i].r;
    samplesO[i].l = CLAMP(sampleL, -1.0f,1.0f);
    samplesO[i].r = CLAMP(sampleR, -1.0f,1.0f);
  }
}
//(this should only be called if the voice has inputs)
int _kit_kmixerVoiceMix(void* data){ //(this is an SDL_ThreadFunction)
  _kit_kmixerVoice* voiceO = data;
  if(voiceO == NULL) return 1; //skip if the voice is NULL
  if(voiceO->lock == NULL) return 2; //skip in case voice was removed

  SDL_LockMutex(voiceO->lock);
  //don't mix if voice has no inputs...
  if(voiceO->inputs == NULL){
    size_t bufferSize = (voiceO->spec.samples*sizeof(float)) << voiceO->spec.stereo;
    //...but still make sure the input buffer is zeroed out
    kit_coreMemset(voiceO->bufferInput.data, 0, bufferSize);
    SDL_UnlockMutex(voiceO->lock);
    return 3;
  }

  _kit_kmixerVoiceMixFallback(voiceO);

  SDL_UnlockMutex(voiceO->lock);
  return 0;
}




//used to check whether an element in the raw voice list is valid or not
SDL_bool _kit_kmixerVoiceRawUnitCallback(void* unit, Uint32 size){
  _kit_kmixerVoice* voice = unit;
  return voice->lock == NULL;
}



//same thing, but with an element in ord instead of raw
SDL_bool _kit_kmixerVoiceOrdUnitCallback(void* unit, Uint32 size){
  _kit_kmixerVoice** voice_p = unit;
  if(*voice_p == NULL) return SDL_TRUE;
  return (*voice_p)->lock == NULL;
}




//(assumes device is locked)
//should be called when voices are created, destroyed, or raw is altered in general
int _kit_kmixerVoiceRebuildOrd(kit_kmixerDevice* device){
  kit_coreVector* ord_new = NULL;
  kit_coreVector**  ord_p = &device->_ord;
  kit_coreVector**  raw_p = &device->_raw;

  _kit_kmixerVoice* raw = (*raw_p)->data;
  Uint32      numVoices = (*raw_p)->x;

  Uint32  hiStageLen =    0; //ord->x
  Uint32  hiStage    =    0; //ord->y
  Uint32* stageLens  = NULL; //temporary space for stage lengths


  //find highest chain stage (for ord's y axis)
  for(Uint32 v=0; v<numVoices; ++v){
    if(raw[v].lock == NULL) continue; //skip any removed voice
    if(hiStage < raw[v].chainStage) hiStage = raw[v].chainStage;
  }
  ++hiStage; //should now equal ord->y


  //find highest index of a chain stage (for ord's x axis)
  _IF_SDLERR(kit_coreRealloc(&stageLens,0,hiStage*sizeof(Uint32)),;,""!stageLens"")
  for(Uint32 v=0; v<numVoices; ++v){
    if(raw[v].lock == NULL) continue; //skip any removed voice
    Uint32 stageLen = ++stageLens[raw[v].chainStage];
    if(hiStageLen < stageLen) hiStageLen = stageLen;
  }
  SAFE_FREE(stageLens);
  if(!hiStageLen) hiStageLen = 1; //vectors can't have sizes of 0


  //create new ord vector with new dimensions
  ord_new = kit_coreVectorCreate(hiStageLen,hiStage,1, sizeof(_kit_kmixerVoice*),0);
  _IF_SDLERR(ord_new==NULL,;,""!ord_new"")
  kit_coreVectorDestroy(ord_p); //doink the old one
  *ord_p = ord_new;


  //fill ord with new references from raw
  for(Uint32 v=0; v<numVoices; ++v){
    if(raw[v].lock == NULL) continue; //skip any removed voice
    _kit_kmixerVoice* voiceRef = &raw[v];
    Uint32 chainStage = voiceRef->chainStage;
    _IF_GOTO_ERROR(kit_coreVectorInsert(ord_p, &voiceRef, chainStage,0,
                                        _kit_kmixerVoiceOrdUnitCallback)==U32_MAX,;)
  }


  /*!err*/ return  0;
  _error_: return -1;
}




//(assumes device is already locked)
//output voice is locked here
int _kit_kmixerVoiceRemoveInput(kit_kmixerDevice* device,
                                Uint32 outputID, Uint32 inputID)
{
  _kit_kmixerVoice* voiceO = &_VOICE_QUERY(outputID);
  Uint32* inputs     = voiceO->inputs->data;
  Uint32  inputs_len = voiceO->inputs->x;

  _IF_GOTO_ERROR(SDL_LockMutex(voiceO->lock),;)


  //remove input voice from output voice's input list
  for(Uint32 v=0; v<inputs_len; ++v){
    if(inputs[v] == inputID){
      inputs[v] = 0; break;
    }
  }


  //trim input list to make sure only active inputs are included
  _IF_GOTO_ERROR(kit_coreVectorTrim(&voiceO->inputs,'x',NULL),;)
  //destroy input list if all inputs have been removed
  if(!voiceO->inputs->lens[0]) kit_coreVectorDestroy(&voiceO->inputs);


  _IF_GOTO_ERROR(SDL_UnlockMutex(voiceO->lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



//(assumes device is already locked)
//input and output voices are locked here
 //(also, input voice's lock should be created BEFORE calling this)
int _kit_kmixerVoiceAddInput(kit_kmixerDevice* device,
                             Uint32 inputID, Uint32 outputID)
{
  //since everything relevant is locked currently, i can assign pointers
   //without the risk of the data moving somewhere else by a kit_coreVectorSet or something
  _kit_kmixerVoice* voiceI = &_VOICE_QUERY(inputID);
  _kit_kmixerVoice* voiceO = &_VOICE_QUERY(outputID);


  //set input voice accordingly
  _IF_GOTO_ERROR(SDL_LockMutex(voiceI->lock),;)

  voiceI->output       = voiceO->index; // = outputID basically
  voiceI->stereoOutput = voiceO->spec.stereo;
  //set chain processing stage one higher,
   //to ensure this voice is processed before the output
  voiceI->chainStage   = voiceO->chainStage+1;

  _IF_GOTO_ERROR(SDL_UnlockMutex(voiceI->lock),;)


  //create input list in output voice if it's NULL
  if(voiceO->inputs == NULL){
    voiceO->inputs = kit_coreVectorCreate(1,1,1, sizeof(Uint32),0);
    _IF_GOTO_ERROR(voiceO->inputs==NULL,;)
  }


  //add input to the output voice's input list
  _IF_GOTO_ERROR(SDL_LockMutex(voiceO->lock),;)

   //first, check to see if input is already in the list...
  Uint32* inputs     = voiceO->inputs->data;
  Uint32  inputs_len = voiceO->inputs->x;
  SDL_bool found = SDL_FALSE;
  for(Uint32 i=0; i<inputs_len; ++i){
    if(inputs[i] == inputID){
      found = SDL_TRUE; break;
    }
  }

   //...inserting only if the input was not found in the list
  if(!found) _IF_GOTO_ERROR(kit_coreVectorInsert(&voiceO->inputs, &inputID, 0,0, NULL)==U32_MAX,;)

  _IF_GOTO_ERROR(SDL_UnlockMutex(voiceO->lock),;)


  /*!err*/ return  0;
  _error_: return -1;
}




int kit_kmixerVoiceRemove(kit_kmixerDevice* device, Uint32 voiceID){
  _DEVICE_VALIDITY_CHECK(0)
  //only allow voice 0 to be removed when device->_closing is set
  _IF_SDLERR(!voiceID && !device->_closing,;,""cannot remove voice 0"")

  //if bit 31 is set, call is assumed to be the result of recursion
  SDL_bool rootCall = (!(voiceID&U32_MSb)) ? SDL_TRUE : SDL_FALSE;
  voiceID &= I32_MAX; //unset bit 31 now that rootCall is set


  kit_coreVector**   raw_p = &device->_raw;
  _IF_SDLERR(voiceID>=(*raw_p)->x,;,""voiceID out of bounds"")
  _IF_GOTO(_VOICE_QUERY(voiceID).lock==NULL,_noerr_,;) //return normally if voice already removed
  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)


  //loop through and remove any inputs the voice might have (recursive)
  if(_VOICE_QUERY(voiceID).inputs != NULL){
    //the voice's inputs vector shouldn't change, since the voice is locked,
     //so it should be safe to do pointer assignment here
    kit_coreVector* inputs = _VOICE_QUERY(voiceID).inputs;

    for(Uint32 i=0; i<inputs->x; ++i){
      Uint32 index = VECTOR_INDEX_C(Uint32, inputs, i);
      if(!index) continue; //an index of 0 indicates a voice that was already removed
      if(_VOICE_QUERY(index).lock != NULL) //(bit 31 is set to indicate recursion)
        _IF_GOTO_ERROR(kit_kmixerVoiceRemove(device,U32_MSb|index),;)
    }

    //(kit_coreVectorDestroy automatically sets pointer to NULL)
    _IF_GOTO_ERROR(kit_coreVectorDestroy(&_VOICE_QUERY(voiceID).inputs),;)
  }


  //free buffers
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferInput.data);
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferUser.data);
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferConvert.data);
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferOutput.data);


  //call the user's 'userdata removal' callback
  if(_VOICE_QUERY(voiceID).spec.remove != NULL)
    _VOICE_QUERY(voiceID).spec.remove(_VOICE_QUERY(voiceID).spec.userdata);


  //destroy lock
  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)
  SDL_DestroyMutex(_VOICE_QUERY(voiceID).lock);
  _VOICE_QUERY(voiceID).lock       = NULL; //a mutex of NULL indicates a removed voice
  _VOICE_QUERY(voiceID).chainStage =    0; //(as to not confuse VoiceRebuildOrd)


  if(rootCall){ //if this call is not the result of recursion
    if(!device->_closing) kit_kmixerDeviceLock(device, SDL_TRUE);

    //trim raw and rebuild ord
    _IF_GOTO_ERROR(kit_coreVectorTrim(raw_p,'x',_kit_kmixerVoiceRawUnitCallback),;)
    _IF_GOTO_ERROR(_kit_kmixerVoiceRebuildOrd(device),;)

    //remove input from output's input list
    Uint32 outputID = VECTOR_INDEX_C(_kit_kmixerVoice, *raw_p, voiceID).output;

    if(outputID != U32_MAX){ //(only if output != -1, which should only be possible for voice 0)
      _IF_GOTO_ERROR(_kit_kmixerVoiceRemoveInput(device, outputID,voiceID),
                     kit_kmixerDeviceLock(device, SDL_FALSE))
    }

    if(!device->_closing) kit_kmixerDeviceLock(device, SDL_FALSE);
  }


  _noerr_: return  0;
  _error_: return -1;
}



Uint32 kit_kmixerVoiceAdd(kit_kmixerDevice* device, kit_kmixerVoiceSpec* vspec,
                          Uint32 outputVoiceID)
{
  Uint32 newIndex = 0; //0 for error by default
  _kit_kmixerVoice  voice  = { .lock = NULL }; //voice struct to be copied to raw
  _kit_kmixerVoice* voiceI = NULL; //reference to voice inside raw

  SDL_bool inRaw   = SDL_FALSE; //set to true if successfully inserted into raw
  SDL_bool success = SDL_FALSE;
  SDL_bool locked  = SDL_FALSE;
  _DEVICE_VALIDITY_CHECK(0)
  _IF_SDLERR(vspec==NULL,;,""!vspec"")

  _IF_SDLERR(vspec->callback==NULL,;,""!vspec->callback"")
  _IF_GOTO_ERROR(kit_kmixerDeviceLock(device, SDL_TRUE)<0,;)
  locked = SDL_TRUE;

  //get reference to output voice
  int exists = kit_kmixerVoiceExists(device, outputVoiceID);
  _IF_SDLERR(exists<0,;,""outputVoiceID out of bounds"")
  _IF_SDLERR(!exists,;,""output voice doesn't exist"")


  //fill in info for voice spec and the voice struct itself
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddFillSpec(device, vspec),;)
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddFillVoice(device, vspec, &voice, outputVoiceID),;)
  voice.device = device; //the only thing not filled in by FillVoice


  //add voice to raw
  newIndex = kit_coreVectorInsert(&device->_raw, &voice, 0,0, _kit_kmixerVoiceRawUnitCallback);
  _IF_GOTO_ERROR(newIndex==U32_MAX,;)
  voiceI = &_VOICE_QUERY(newIndex);
  voiceI->index = newIndex;
  inRaw = SDL_TRUE;


  //add voice to output's input list
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddInput(device, newIndex, outputVoiceID),;)


  //finally, rebuild ord to reflect new state of raw
  _IF_GOTO_ERROR(_kit_kmixerVoiceRebuildOrd(device),;)

  _noerr_:
  success = SDL_TRUE;
  _error_:
  if(!success){
    //the buffer pointers will be the same between voice and *voiceI,
     //and they must be freed either way if this function aborts
    if(!inRaw) voiceI = &voice;

    if(voiceI->lock != NULL) SDL_DestroyMutex(voiceI->lock);
    kit_coreVectorDestroy(&voiceI->inputs);
    SAFE_FREE(voiceI->bufferInput.data);
    SAFE_FREE(voiceI->bufferUser.data);
    SAFE_FREE(voiceI->bufferConvert.data);
    SAFE_FREE(voiceI->bufferOutput.data);
    voiceI->lock = NULL;

    //(make newIndex indicate an error again, regardless of its prev. value)
    newIndex = 0;
  }
  if(locked) kit_kmixerDeviceLock(device, SDL_FALSE);
  return newIndex;
}




//updates a voice's chain stage after redirecting
void _kit_kmixerVoiceCascadeChainStage(kit_kmixerDevice* device, Uint32 voiceID){
  Uint32 outputID = _VOICE_QUERY(voiceID).output;

  //set input voice's chain stage to one higher than the output
  _VOICE_QUERY(voiceID).chainStage = _VOICE_QUERY(outputID).chainStage+1;

  //if input voice itself has inputs, call VoiceCascade on all of them
   //(this should be recursive)
  if(_VOICE_QUERY(voiceID).inputs != NULL){
    kit_coreVector* inputs = _VOICE_QUERY(voiceID).inputs;
    for(Uint32 i=0; i<inputs->x; ++i){
      Uint32 input = VECTOR_INDEX_C(Uint32, inputs, i);
      if(!input) continue; //skip any invalid or removed voices
      _kit_kmixerVoiceCascadeChainStage(device,input);
    }
  }
}



int kit_kmixerVoiceRedirect(kit_kmixerDevice* device,
                            Uint32 inputVoiceID, Uint32 outputVoiceID)
{
  int returnStatus = 0;
  SDL_bool locked = SDL_FALSE;
  _DEVICE_VALIDITY_CHECK(0)
  _IF_GOTO_ERROR(kit_kmixerDeviceLock(device, SDL_TRUE)<0,;)
  locked = SDL_TRUE;

  _IF_SDLERR(!inputVoiceID,;,""cannot redirect voice 0"")

  int exists = kit_kmixerVoiceExists(device, inputVoiceID);
  _IF_SDLERR(exists<0,;,""inputVoiceID out of bounds"")
  _IF_SDLERR(!exists,;,""input voice doesn't exist"")

  exists = kit_kmixerVoiceExists(device, outputVoiceID);
  _IF_SDLERR(exists<0,;,""outputVoiceID out of bounds"")
  _IF_SDLERR(!exists,;,""output voice doesn't exist"")

  _IF_SDLERR(_VOICE_QUERY(outputVoiceID).output==inputVoiceID,;,""output can't be circular"")


  //disconnect from the old output, before connecting to the new output
  Uint32 outputVoiceID_old = _VOICE_QUERY(inputVoiceID).output;
  _IF_GOTO_ERROR(_kit_kmixerVoiceRemoveInput(device, outputVoiceID_old, inputVoiceID),;)
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddInput(device, inputVoiceID, outputVoiceID),;)


  //update every chainStage value up the voice chain,
   //to accomodate the stage of the new output
  _kit_kmixerVoiceCascadeChainStage(device,inputVoiceID);


  //update ord to reflect changes
  _IF_GOTO_ERROR(_kit_kmixerVoiceRebuildOrd(device),;)


  _noerr_: ++returnStatus;
  _error_: --returnStatus;
  if(locked && kit_kmixerDeviceLock(device, SDL_FALSE)<0) returnStatus = -1;
  return returnStatus;
}



int kit_kmixerVoiceExists(kit_kmixerDevice* device, Uint32 voiceID){
  _DEVICE_VALIDITY_CHECK(0)
  _IF_SDLERR(voiceID>=device->_raw->x,;,""voiceID out of bounds"")
  _noerr_: return _VOICE_QUERY(voiceID).lock != NULL;
  _error_: return -1;
}




Uint32 kit_kmixerVoiceGetNumInputs(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  if(_VOICE_QUERY(voiceID).inputs == NULL) return 0;
  /*!err*/ return _VOICE_QUERY(voiceID).inputs->x;
  _error_: return U32_MAX;
}



kit_coreVector* kit_kmixerVoiceGetInputs(kit_kmixerDevice* device, Uint32 voiceID){
  kit_coreVector* inputs = NULL;
  _VOICE_CHECK(voiceID)

  _IF_SDLERR(_VOICE_QUERY(voiceID).inputs==NULL,;,""no inputs found"")
  inputs = kit_coreVectorCopy(_VOICE_QUERY(voiceID).inputs);

  _error_:
  return inputs;
}



Uint32 kit_kmixerVoiceGetOutput(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)

  _IF_SDLERR(_VOICE_QUERY(voiceID).output==U32_MAX,;,""voice 0 has no output!"")

  /*!err*/ return _VOICE_QUERY(voiceID).output;
  _error_: return U32_MAX;
}



SDL_bool* kit_kmixerVoiceGetActiveRef(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return &_VOICE_QUERY(voiceID).active;
  _error_: return NULL;
}



int kit_kmixerVoiceGetActive(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).active;
  _error_: return -1;
}



int kit_kmixerVoiceSetActive(kit_kmixerDevice* device, Uint32 voiceID, SDL_bool isActive){
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).active = isActive;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



void _kit_kmixerVoiceCascadeActive(kit_kmixerDevice* device, Uint32 voiceID, SDL_bool isActive){
  _VOICE_QUERY(voiceID).active = isActive;

  //recursively set the active state on all input voices (if there are any)
  if(_VOICE_QUERY(voiceID).inputs != NULL){
    //it should be safe to dereference inputs here, since the whole device
     //should be locked at this point
    Uint32* inputs     = _VOICE_QUERY(voiceID).inputs->data;
    Uint32  inputs_len = _VOICE_QUERY(voiceID).inputs->x;
    for(Uint32 i=0; i<inputs_len; ++i){
      if(!inputs[i]) continue; //skip any invalid or removed voices
      _kit_kmixerVoiceCascadeActive(device,inputs[i], isActive);
    }
  }
}



int kit_kmixerVoiceSetActiveChain(kit_kmixerDevice* device, Uint32 voiceID, SDL_bool isActive){
  int returnStatus = 0;
  SDL_bool locked = SDL_FALSE;
  _DEVICE_VALIDITY_CHECK(0)
  _IF_GOTO_ERROR(kit_kmixerDeviceLock(device, SDL_TRUE)<0,;)
  locked = SDL_TRUE;

  //now that the device is locked, CascadeActive can safely be called,
   //(much like CascadeChainStage)
  _kit_kmixerVoiceCascadeActive(device, voiceID, isActive);

  _noerr_: ++returnStatus;
  _error_: --returnStatus;
  if(locked && kit_kmixerDeviceLock(device, SDL_FALSE)<0) returnStatus = -1;
  return returnStatus;
}




Uint32 kit_kmixerVoiceGetChainStage(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).chainStage;
  _error_: return U32_MAX;
}




kit_kmixerVoiceSpec kit_kmixerVoiceGetSpec(kit_kmixerDevice* device, Uint32 voiceID){
  kit_kmixerVoiceSpec vspec = {0};
  _VOICE_CHECK(voiceID)

  vspec = _VOICE_QUERY(voiceID).spec;

  _error_:
  return vspec;
}



kit_kmixerVoiceSpec* kit_kmixerVoiceGetSpecRef(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return &_VOICE_QUERY(voiceID).spec;
  _error_: return NULL;
}



void* kit_kmixerVoiceGetSpecUserdata(kit_kmixerDevice* device, Uint32 voiceID){
  _IF_SDLERR(!voiceID,;,""voice 0 has no userdata"")
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).spec.userdata;
  _error_: return NULL;
}



int kit_kmixerVoiceSetSpecRemove(kit_kmixerDevice* device, Uint32 voiceID,
                                 kit_kmixerVoiceRemoveCallback remove)
{
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).spec.remove = remove;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetSpecCallback(kit_kmixerDevice* device, Uint32 voiceID,
                                   kit_kmixerVoiceCallback callback)
{
  //(remove and userdata can be NULL, but the voice callback itself cannot)
  _IF_SDLERR(callback==NULL,;,""!callback"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).spec.callback = callback;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetSpecUserdata(kit_kmixerDevice* device, Uint32 voiceID, void* userdata){
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).spec.userdata = userdata;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}




float kit_kmixerVoiceGetVolL(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).volL;
  _error_: return NAN;
}



float kit_kmixerVoiceGetVolR(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).volR;
  _error_: return NAN;
}



int kit_kmixerVoiceSetVolL(kit_kmixerDevice* device, Uint32 voiceID, float volL){
  _IF_SDLERR(volL<0,;,""volL must be >=0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).volL = volL;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetVolR(kit_kmixerDevice* device, Uint32 voiceID, float volR){
  _IF_SDLERR(volR<0,;,""volR must be >=0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).volR = volR;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetVolume(kit_kmixerDevice* device, Uint32 voiceID, float volL, float volR){
  _IF_SDLERR(volL<0,;,""volL must be >=0"")
  _IF_SDLERR(volR<0,;,""volR must be >=0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).volL = volL;
  _VOICE_QUERY(voiceID).volR = volR;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetPan(kit_kmixerDevice* device, Uint32 voiceID, float pan){
  _IF_SDLERR(!NORMALIZED(pan),;,""pan must be -1.0f -> 1.0f"")
  _VOICE_CHECK(voiceID)
  _IF_SDLERR(_VOICE_QUERY(voiceID).spec.stereo,;,""voice cannot be mono"")

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  //for example, if pan = -0.6f, volL and volR would be 1.0f and 0.4f respectively
  _VOICE_QUERY(voiceID).volL = MIN(1.0f+pan, 1.0f);
  _VOICE_QUERY(voiceID).volR = MIN(1.0f-pan, 1.0f);

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}




int kit_kmixerVoiceUnlock(kit_kmixerDevice* device, Uint32 voiceID){
  _IF_SDLERR(!voiceID,;,""cannot unlock voice 0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceLock(kit_kmixerDevice* device, Uint32 voiceID){
  _IF_SDLERR(!voiceID,;,""cannot lock voice 0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}




#if defined(_KIT_KMIXER_DEBUG) || defined(_KIT_ALL_DEBUG)
void _kit_kmixerVoice_TestCallback(void* userdata, void* _stream, int size, SDL_bool hasInput){
}
/*
because kmixer compiles with -O3, i get this error if i attempt to compile the test:
""warning:  may be used uninitialized in this function [-Wmaybe-uninitialized]|""
i have very little doubt that this is a bug, so i can't do much about it other than
turn down optimization for this specific function
*/
//(for some reason, it started working again after i added some seemingly
 //unrelated stuff, so i'll comment this out for now)
//__attribute__((optimize(""-O0"")))
int kit_kmixerVoice_Test(){
  float bufferInputA[16], bufferUserA[16], bufferConvertA[16], bufferOutputA[16];
  float bufferInputB[16], bufferUserB[16], bufferConvertB[16], bufferOutputB[16];
  float bufferInputC[16], bufferUserC[16], bufferConvertC[16], bufferOutputC[16];


  _kit_kmixerVoice voiceA={
    .spec={
      .callback = _kit_kmixerVoice_TestCallback,
      .userdata = NULL,
      .freq     = 44100,
      ._size    = 16*sizeof(float),
      .stereo   = SDL_FALSE,
      .samples  = 16,
      .format   = AUDIO_F32
    },

    .bufferInput   = { .data=bufferInputA   },
    .bufferUser    = { .data=bufferUserA    },
    .bufferConvert = { .data=bufferConvertA },
    .bufferOutput  = { .data=bufferOutputA  },

    .inputs = NULL,
    .lock   = NULL,

    .chainStage = 2,
    .index      = 3,

    .volL = 1.0f,
    .volR = 1.0f,

    .stereoOutput = SDL_FALSE,
  };

  _kit_kmixerVoice voiceB={
    .spec={
      .callback = _kit_kmixerVoice_TestCallback,
      .userdata = NULL,
      .freq     = 44100,
      ._size    = 16*sizeof(float),
      .stereo   = SDL_FALSE,
      .samples  = 16,
      .format   = AUDIO_F32
    },

    .bufferInput   = { .data=bufferInputB   },
    .bufferUser    = { .data=bufferUserB    },
    .bufferConvert = { .data=bufferConvertB },
    .bufferOutput  = { .data=bufferOutputB  },

    .inputs = NULL,
    .lock   = NULL,

    .chainStage = 2,
    .index      = 2,

    .volL = 1.0f,
    .volR = 1.0f,

    .stereoOutput = SDL_FALSE,
  };

  _kit_kmixerVoice voiceC={
    .spec={
      .callback = _kit_kmixerVoice_TestCallback,
      .userdata = NULL,
      .freq     = 44100,
      ._size    = 16*sizeof(float),
      .stereo   = SDL_FALSE,
      .samples  = 16,
      .format   = AUDIO_F32
    },

    .bufferInput   = { .data=bufferInputC   },
    .bufferUser    = { .data=bufferUserC    },
    .bufferConvert = { .data=bufferConvertC },
    .bufferOutput  = { .data=bufferOutputC  },

    .inputs = NULL,
    .lock   = NULL,

    .chainStage = 1,
    .index      = 1,

    .volL = 1.0f,
    .volR = 1.0f,

    .stereoOutput = SDL_FALSE,
  };


  //example streams
  Uint8  u_8_A[16]={0x00,0x3F,0x10,0x80,0xFF,0x4E,0x24,0x6D,0x21,0xFE,0xED,0x86,0x3A,0xAB,0xDA,0x4C};
  Sint16 i16_A[16]={-32768,13106,-16384,6553,32767,2553,-26214,25937,22337,-13102,9553,-32467,-9830,0,-19661,-22938};
  Sint32 i32_A[16]={-2147483648,2147483647,2,547760950,-978102134,-1901782676,973752665,-2054956051,-1793070550,2100284199,1386177656,-70287364,-799099289,-594127329,1025429360,-570645197};
  float  f32_A[16]={ 0.8,-0.2, 0.0,-0.6,-0.6, 0.4, 1.0, 2.0, 0.6, 0.9, 0.8, 0.3, 0.6,-1.4,-0.1, 0.1};
  float  f32_B[16]={-0.1,-0.4, 0.1, 0.3,-0.6, 0.6, 0.6,-0.6,-0.1, 0.2,-0.2, 0.8, 0.4, 0.8, 0.4, 0.7};


  //test to and from type conversion
   //u_8
  SDL_memcpy(voiceA.bufferUser.u_8, u_8_A, 16*sizeof(Uint8));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.u_8,voiceA.bufferConvert.f32, 16,AUDIO_U8,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.u_8, 16,AUDIO_U8,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if(voiceA.bufferUser.u_8[i] != MAX(u_8_A[i],1)){
      SDL_SetError(""u_8 type conv. (%u:%X!=%X)"",
        i, voiceA.bufferUser.u_8[i], MAX(u_8_A[i],1) ); return -999;
    }
  }
   //i16
  SDL_memcpy(voiceA.bufferUser.i16, i16_A, 16*sizeof(Sint16));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.i16,voiceA.bufferConvert.f32, 16,AUDIO_S16,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.i16, 16,AUDIO_S16,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if(voiceA.bufferUser.i16[i] != MAX(i16_A[i],-32767)){
      SDL_SetError(""i16 type conv. (%u:%i!=%i)"",
        i, voiceA.bufferUser.i16[i], MAX(i16_A[i],-32767) ); return -999;
    }
  }
   //i32 (products of conversion are actually approximations with a max error of 64)
  SDL_memcpy(voiceA.bufferUser.i32, i32_A, 16*sizeof(Sint32));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.i32,voiceA.bufferConvert.f32, 16,AUDIO_S32,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.i32, 16,AUDIO_S32,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if((voiceA.bufferUser.i32[i] < (MAX(i32_A[i],-2147483647)-64)) &&
       (voiceA.bufferUser.i32[i] > (MAX(i32_A[i],-2147483647)+64)))
    {
      SDL_SetError(""i32 type conv. (%u:%i!=%i)"",
        i, voiceA.bufferUser.i32[i], MAX(i32_A[i],-2147483647) ); return -999;
    }
  }
   //f32
  SDL_memcpy(voiceA.bufferUser.f32, f32_A, 16*sizeof(float));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.f32,voiceA.bufferConvert.f32, 16,AUDIO_F32,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.f32, 16,AUDIO_F32,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if(voiceA.bufferUser.f32[i] != CLAMP(f32_A[i], -1.0f,1.0f)){
      SDL_SetError(""f32 type conv. (%u:%.1f!=%.1f)"",
        i, voiceA.bufferUser.f32[i], CLAMP(f32_A[i], -1.0f,1.0f) ); return -999;
    }
  }


  //test channel conversion
   //  mono-stereo
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32s, 8,_M_to_S);
  for(Uint32 i=0; i<16; i+=2){
    //kit_coreLog(""%2u: %9f, %9f"",i, voiceA.bufferConvert.m[i], voiceA.bufferConvert.m[i+1]);
    if(voiceA.bufferConvert.f32[i] != voiceA.bufferConvert.f32[i+1]){
      SDL_SetError(""mn.->st. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i], voiceA.bufferConvert.f32[i+1] ); return -999;
    }
  }
   //stereo-mono
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32,  8,_S_to_M);
  for(Uint32 i=0; i<16; i+=2){
    //kit_coreLog(""%2u: %9f,%9f -> %9f"",i, f32_A[i],f32_A[i+1], voiceA.bufferConvert.m[i>>1]);
    if(voiceA.bufferConvert.f32[i>>1] != (f32_A[i]+f32_A[i+1])*.5f){
      SDL_SetError(""st.->mn. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i>>1], (f32_A[i]+f32_A[i+1])*.5f ); return -999;
    }
  }
   //stereo-stereo
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32s,  8,_S_to_S);
  for(Uint32 i=0; i<16; ++i){
    //kit_coreLog(""%2u: %9f"",i, voiceA.bufferConvert.m[i]);
    if(voiceA.bufferConvert.f32[i] != f32_A[i]){
      SDL_SetError(""st.->st. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i], f32_A[i] ); return -999;
    }
  }
   //  mono-mono
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32, 16,_M_to_M);
  for(Uint32 i=0; i<16; ++i){
    //kit_coreLog(""%2u: %9f"",i, voiceA.bufferConvert.m[i]);
    if(voiceA.bufferConvert.f32[i] != f32_A[i]){
      SDL_SetError(""mn.->mn. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i], f32_A[i] ); return -999;
    }
  }


  //test VoiceProc itself here


  //test mixing (might want to add in other volume settings at some point)
  voiceA.lock=SDL_CreateMutex();
  voiceB.lock=SDL_CreateMutex();
  voiceC.lock=SDL_CreateMutex();
  kit_coreVector* ivoices=kit_coreVectorCreate(2,0,0, sizeof(_kit_kmixerVoice),0);
  if(voiceA.lock==NULL || voiceB.lock==NULL || voiceC.lock==NULL || ivoices==NULL){
    if(voiceA.lock != NULL) SDL_DestroyMutex(voiceA.lock);
    if(voiceB.lock != NULL) SDL_DestroyMutex(voiceB.lock);
    if(voiceC.lock != NULL) SDL_DestroyMutex(voiceC.lock);
    if(ivoices != NULL) kit_coreVectorDestroy(&ivoices);
  }

  SDL_memcpy(voiceA.bufferOutput.f32, f32_A, 16*sizeof(float));
  SDL_memcpy(voiceB.bufferOutput.f32, f32_B, 16*sizeof(float));
  _kit_kmixerVoice _ivoices[2]={voiceA,voiceB};
  memcpy(ivoices->data, _ivoices, sizeof(_kit_kmixerVoice)*2);
   //mono, 1.0,1.0
  //_kit_kmixerVoiceMix(&voiceC);
  for(Uint32 i=0; i<16; ++i){
    float mixed=voiceC.bufferInput.f32[i];
    float real=CLAMP(voiceA.bufferOutput.f32[i]+voiceB.bufferOutput.f32[i], -1.0f,1.0f);
    if(mixed != real){ SDL_SetError(""mn. mixing (%u:%.1f!=%.1f)"",
                         i, mixed, real ); return -999;
    }
  }
   //stereo, 1.0,1.0
  voiceA.stereoOutput=SDL_TRUE;
  voiceB.stereoOutput=SDL_TRUE;
  voiceA.spec.samples=8;
  voiceB.spec.samples=8;
  voiceC.spec.samples=8;
  //_kit_kmixerVoiceMix(&voiceC);
  for(Uint32 i=0; i<16; ++i){
    float mixed=voiceC.bufferInput.f32[i];
    float real=CLAMP(voiceA.bufferOutput.f32[i]+voiceB.bufferOutput.f32[i], -1.0f,1.0f);
    if(mixed != real){ SDL_SetError(""st. mixing (%u:%.1f!=%.1f)"",
                         i, mixed, real ); return -999;
    }
  }

  if(voiceA.lock != NULL) SDL_DestroyMutex(voiceA.lock);
  if(voiceB.lock != NULL) SDL_DestroyMutex(voiceB.lock);
  if(voiceC.lock != NULL) SDL_DestroyMutex(voiceC.lock);
  if(ivoices != NULL) kit_coreVectorDestroy(&ivoices);


  //test adding and removing possibly


  //kit_coreLog(""sizeof(_kit_kmixerVoice)=%u"",(unsigned int)sizeof(_kit_kmixerVoice));


  return 0;
}
void kit_kmixerVoicePrintRawOrd(kit_kmixerDevice* device){
  kit_coreVector** raw_p = &device->_raw;
  kit_coreVector** ord_p = &device->_ord;
  Uint32 rawLen = (*raw_p)->x;
  Uint32 ordLen = (*ord_p)->x;
  Uint32 maxStage = (*ord_p)->y-1;
  _kit_kmixerVoice* raw = (*raw_p)->data;
  _kit_kmixerVoice** ord = (*ord_p)->data;


  printf(""\n~~~ RAW ~~~\n"");
  for(Uint32 v=0; v<rawLen; ++v){
    _kit_kmixerVoice* voice = &raw[v];
    printf(""--- %02u/%02u (%p) ---\n"", v, rawLen-1, voice);
    if(voice->lock == NULL){ printf(""  (REMOVED)\n""); continue; }
    Uint32 numInputs = 0,  *inputs = NULL;
    if(voice->inputs != NULL){
      numInputs = voice->inputs->x;
         inputs = voice->inputs->data;
    }

    printf(""  voice%u->inputs     = %p: "",v, voice->inputs);
    if(inputs != NULL){
      printf(""{\n    "");
      for(Uint32 i=0; i<numInputs; ++i){
        if(inputs[i]!=0) printf(""%02u, "",inputs[i]);
        else printf(""RM, ""); //removed voice
        if((i+1)==numInputs) printf(""\n"");
        else if((i%5)==4) printf(""\n    "");
      }
      printf(""  }\n"");
    } else printf(""(NULL)\n"");

    printf(""  voice%u->output     = %2i\n"",v, voice->output);
    printf(""  voice%u->chainStage = %2u\n"",v, voice->chainStage);
    printf(""  voice%u->active     = %s\n"", v, boolstr[voice->active]);
    printf(""  voice%u->spec       = {\n"",  v);
    printf(""    .remove   = %p\n"",voice->spec.remove);
    printf(""    .callback = %p\n"",voice->spec.callback);
    printf(""    .userdata = %p\n"",voice->spec.userdata);
    printf(""    .freq     = %i\n"",voice->spec.freq);
    printf(""    ._size    = %u\n"",voice->spec._size);
    printf(""    .stereo   = %s\n"",boolstr[voice->spec.stereo]);
    printf(""    .samples  = %u\n"",voice->spec.samples);
    printf(""    .format   = %X\n"",voice->spec.format);
    printf(""  }\n"");

    printf(""\n"");
  }


  printf(""\n~~~ ORD ~~~\n"");
  for(Uint32 yi=maxStage; yi!=U32_MAX; --yi){
    printf(""stage %02u:  "", yi);
    for(Uint32 xi=0; xi<ordLen; ++xi){
      _kit_kmixerVoice* voice = ord[xi + yi*ordLen];

      if(voice == NULL) printf(""NL, "");
      else if(voice->lock == NULL) printf(""RM, "");
      else printf(""%02u, "",voice->index);
    }
    printf(""\n"");
  }
  printf(""\n"");

}
#else
int kit_kmixerVoice_Test(){
  SDL_SetError(""!defined(_KIT_KMIXER_DEBUG)"");
  return 999;
}
void kit_kmixerVoicePrintRawOrd(kit_kmixerDevice* device){}
#endif
"
NHehYhb6,Nigerian scammers [3-11-1/2023],bombaires,AIMMS,Friday 3rd of November 2023 12:46:55 AM CDT,"<a href=""mailto:of9824714@gmail.com"">of9824714@gmail.com</a>
<a href=""mailto:of.98247.1.4@gmail.com"">of.98247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.824.71.4@gmail.com"">o.f.9.824.71.4@gmail.com</a>
<a href=""mailto:o.f.9.82.4.7.1.4@gmail.com"">o.f.9.82.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f98247.1.4@gmail.com"">o.f98247.1.4@gmail.com</a>
<a href=""mailto:of.982.4.714@gmail.com"">of.982.4.714@gmail.com</a>
<a href=""mailto:of9.8.2.4.714@gmail.com"">of9.8.2.4.714@gmail.com</a>
<a href=""mailto:of982471.4@gmail.com"">of982471.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4714@gmail.com"">o.f.9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f.9824714@gmail.com"">o.f.9824714@gmail.com</a>
<a href=""mailto:o.f.98.2.47.1.4@gmail.com"">o.f.98.2.47.1.4@gmail.com</a>
<a href=""mailto:o.f9.824714@gmail.com"">o.f9.824714@gmail.com</a>
<a href=""mailto:o.f98.2.4.714@gmail.com"">o.f98.2.4.714@gmail.com</a>
<a href=""mailto:o.f98.2.4.7.1.4@gmail.com"">o.f98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.98.2.4714@gmail.com"">o.f.98.2.4714@gmail.com</a>
<a href=""mailto:o.f.98.2.4.7.1.4@gmail.com"">o.f.98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.7.1.4@gmail.com"">o.f.9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of9824.7.1.4@gmail.com"">of9824.7.1.4@gmail.com</a>
<a href=""mailto:of9.82.4.71.4@gmail.com"">of9.82.4.71.4@gmail.com</a>
<a href=""mailto:o.f98.2.47.14@gmail.com"">o.f98.2.47.14@gmail.com</a>
<a href=""mailto:o.f9.8.2.47.14@gmail.com"">o.f9.8.2.47.14@gmail.com</a>
<a href=""mailto:of9.82.471.4@gmail.com"">of9.82.471.4@gmail.com</a>
<a href=""mailto:o.f.9.8.24.7.1.4@gmail.com"">o.f.9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4.7.1.4@gmail.com"">of.9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of9.82.4.714@gmail.com"">of9.82.4.714@gmail.com</a>
<a href=""mailto:o.f9824.7.14@gmail.com"">o.f9824.7.14@gmail.com</a>
<a href=""mailto:o.f.9.8.2.471.4@gmail.com"">o.f.9.8.2.471.4@gmail.com</a>
<a href=""mailto:of.98.2.47.1.4@gmail.com"">of.98.2.47.1.4@gmail.com</a>
<a href=""mailto:of9.8.2.4.7.1.4@gmail.com"">of9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of9824.7.14@gmail.com"">of9824.7.14@gmail.com</a>
<a href=""mailto:o.f.98247.1.4@gmail.com"">o.f.98247.1.4@gmail.com</a>
<a href=""mailto:of.9824.714@gmail.com"">of.9824.714@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.7.14@gmail.com"">o.f.9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:of.98.2471.4@gmail.com"">of.98.2471.4@gmail.com</a>
<a href=""mailto:of9.824.7.14@gmail.com"">of9.824.7.14@gmail.com</a>
<a href=""mailto:of.98.24.7.14@gmail.com"">of.98.24.7.14@gmail.com</a>
<a href=""mailto:o.f982.471.4@gmail.com"">o.f982.471.4@gmail.com</a>
<a href=""mailto:o.f.9.82471.4@gmail.com"">o.f.9.82471.4@gmail.com</a>
<a href=""mailto:o.f.982471.4@gmail.com"">o.f.982471.4@gmail.com</a>
<a href=""mailto:of.982.471.4@gmail.com"">of.982.471.4@gmail.com</a>
<a href=""mailto:o.f9.82.4.71.4@gmail.com"">o.f9.82.4.71.4@gmail.com</a>
<a href=""mailto:of98.247.1.4@gmail.com"">of98.247.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.47.1.4@gmail.com"">of.9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.47.14@gmail.com"">o.f.9.8.2.47.14@gmail.com</a>
<a href=""mailto:of.98.24.7.1.4@gmail.com"">of.98.24.7.1.4@gmail.com</a>
<a href=""mailto:of.98.247.1.4@gmail.com"">of.98.247.1.4@gmail.com</a>
<a href=""mailto:of9.8247.1.4@gmail.com"">of9.8247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82.47.1.4@gmail.com"">o.f.9.82.47.1.4@gmail.com</a>
<a href=""mailto:of9.8.2.47.14@gmail.com"">of9.8.2.47.14@gmail.com</a>
<a href=""mailto:o.f.98.2.471.4@gmail.com"">o.f.98.2.471.4@gmail.com</a>
<a href=""mailto:of9824714@gmail.com"">of9824714@gmail.com</a>
<a href=""mailto:o.f98247.14@gmail.com"">o.f98247.14@gmail.com</a>
<a href=""mailto:of.9.824.7.1.4@gmail.com"">of.9.824.7.1.4@gmail.com</a>
<a href=""mailto:of982.4.7.14@gmail.com"">of982.4.7.14@gmail.com</a>
<a href=""mailto:o.f.98.2.47.14@gmail.com"">o.f.98.2.47.14@gmail.com</a>
<a href=""mailto:of9.8.24.7.1.4@gmail.com"">of9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f.98.24714@gmail.com"">o.f.98.24714@gmail.com</a>
<a href=""mailto:o.f.982.47.1.4@gmail.com"">o.f.982.47.1.4@gmail.com</a>
<a href=""mailto:of982.47.14@gmail.com"">of982.47.14@gmail.com</a>
<a href=""mailto:o.f.98.247.1.4@gmail.com"">o.f.98.247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.47.1.4@gmail.com"">o.f.9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:of98.2.4714@gmail.com"">of98.2.4714@gmail.com</a>
<a href=""mailto:of98.24714@gmail.com"">of98.24714@gmail.com</a>
<a href=""mailto:o.f982.47.14@gmail.com"">o.f982.47.14@gmail.com</a>
<a href=""mailto:of.98.247.14@gmail.com"">of.98.247.14@gmail.com</a>
<a href=""mailto:of9.82.4714@gmail.com"">of9.82.4714@gmail.com</a>
<a href=""mailto:o.f9.8.2.4714@gmail.com"">o.f9.8.2.4714@gmail.com</a>
<a href=""mailto:of.982.4714@gmail.com"">of.982.4714@gmail.com</a>
<a href=""mailto:of.9.8.24.7.14@gmail.com"">of.9.8.24.7.14@gmail.com</a>
<a href=""mailto:of982.4.714@gmail.com"">of982.4.714@gmail.com</a>
<a href=""mailto:o.f982471.4@gmail.com"">o.f982471.4@gmail.com</a>
<a href=""mailto:of.982471.4@gmail.com"">of.982471.4@gmail.com</a>
<a href=""mailto:of.9.82.471.4@gmail.com"">of.9.82.471.4@gmail.com</a>
<a href=""mailto:o.f9.82.47.1.4@gmail.com"">o.f9.82.47.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4714@gmail.com"">of.9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f9.824.7.14@gmail.com"">o.f9.824.7.14@gmail.com</a>
<a href=""mailto:of9824.71.4@gmail.com"">of9824.71.4@gmail.com</a>
<a href=""mailto:o.f.9824.7.14@gmail.com"">o.f.9824.7.14@gmail.com</a>
<a href=""mailto:o.f9.82.4.714@gmail.com"">o.f9.82.4.714@gmail.com</a>
<a href=""mailto:o.f98.24.7.1.4@gmail.com"">o.f98.24.7.1.4@gmail.com</a>
<a href=""mailto:of.9.82.47.1.4@gmail.com"">of.9.82.47.1.4@gmail.com</a>
<a href=""mailto:o.f9.8247.1.4@gmail.com"">o.f9.8247.1.4@gmail.com</a>
<a href=""mailto:of98.24.71.4@gmail.com"">of98.24.71.4@gmail.com</a>
<a href=""mailto:of98.2.471.4@gmail.com"">of98.2.471.4@gmail.com</a>
<a href=""mailto:o.f.98.24.7.14@gmail.com"">o.f.98.24.7.14@gmail.com</a>
<a href=""mailto:of982.4.7.1.4@gmail.com"">of982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f9824714@gmail.com"">o.f9824714@gmail.com</a>
<a href=""mailto:of.9.8.247.14@gmail.com"">of.9.8.247.14@gmail.com</a>
<a href=""mailto:of982.4714@gmail.com"">of982.4714@gmail.com</a>
<a href=""mailto:of.9.824.71.4@gmail.com"">of.9.824.71.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.7.1.4@gmail.com"">o.f9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.714@gmail.com"">o.f.9.8.2.4.714@gmail.com</a>
<a href=""mailto:of.9.824714@gmail.com"">of.9.824714@gmail.com</a>
<a href=""mailto:o.f9.8.24.7.14@gmail.com"">o.f9.8.24.7.14@gmail.com</a>
<a href=""mailto:of98.2.47.14@gmail.com"">of98.2.47.14@gmail.com</a>
<a href=""mailto:of9.8.2.4.71.4@gmail.com"">of9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f982.47.1.4@gmail.com"">o.f982.47.1.4@gmail.com</a>
<a href=""mailto:of982.47.1.4@gmail.com"">of982.47.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82.4714@gmail.com"">o.f.9.82.4714@gmail.com</a>
<a href=""mailto:of9.8.24.71.4@gmail.com"">of9.8.24.71.4@gmail.com</a>
<a href=""mailto:of9.8.2.4.7.14@gmail.com"">of9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:of9.8.247.1.4@gmail.com"">of9.8.247.1.4@gmail.com</a>
<a href=""mailto:of9.82471.4@gmail.com"">of9.82471.4@gmail.com</a>
<a href=""mailto:of.98.2.4714@gmail.com"">of.98.2.4714@gmail.com</a>
<a href=""mailto:o.f9.8.24.714@gmail.com"">o.f9.8.24.714@gmail.com</a>
<a href=""mailto:of.9824714@gmail.com"">of.9824714@gmail.com</a>
<a href=""mailto:o.f.9.8.24.71.4@gmail.com"">o.f.9.8.24.71.4@gmail.com</a>
<a href=""mailto:o.f.9824.71.4@gmail.com"">o.f.9824.71.4@gmail.com</a>
<a href=""mailto:of.9.8247.1.4@gmail.com"">of.9.8247.1.4@gmail.com</a>
<a href=""mailto:o.f98.2.4714@gmail.com"">o.f98.2.4714@gmail.com</a>
<a href=""mailto:o.f9.82471.4@gmail.com"">o.f9.82471.4@gmail.com</a>
<a href=""mailto:o.f.9.8247.14@gmail.com"">o.f.9.8247.14@gmail.com</a>
<a href=""mailto:of.9.82.4.714@gmail.com"">of.9.82.4.714@gmail.com</a>
<a href=""mailto:o.f9.82.471.4@gmail.com"">o.f9.82.471.4@gmail.com</a>
<a href=""mailto:of98.2.4.7.14@gmail.com"">of98.2.4.7.14@gmail.com</a>
<a href=""mailto:of98.24.7.14@gmail.com"">of98.24.7.14@gmail.com</a>
<a href=""mailto:of9.8.24.714@gmail.com"">of9.8.24.714@gmail.com</a>
<a href=""mailto:o.f.9.8.247.14@gmail.com"">o.f.9.8.247.14@gmail.com</a>
<a href=""mailto:of.982.4.7.14@gmail.com"">of.982.4.7.14@gmail.com</a>
<a href=""mailto:o.f.9.824.7.14@gmail.com"">o.f.9.824.7.14@gmail.com</a>
<a href=""mailto:of.98.2.4.7.1.4@gmail.com"">of.98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of98247.1.4@gmail.com"">of98247.1.4@gmail.com</a>
<a href=""mailto:of.98.2.471.4@gmail.com"">of.98.2.471.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.471.4@gmail.com"">o.f9.8.2.471.4@gmail.com</a>
<a href=""mailto:of.9.8.24714@gmail.com"">of.9.8.24714@gmail.com</a>
<a href=""mailto:o.f.9.8.24714@gmail.com"">o.f.9.8.24714@gmail.com</a>
<a href=""mailto:o.f9.8.2.47.1.4@gmail.com"">o.f9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4.71.4@gmail.com"">of.9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:of.9.824.714@gmail.com"">of.9.824.714@gmail.com</a>
<a href=""mailto:o.f.982.471.4@gmail.com"">o.f.982.471.4@gmail.com</a>
<a href=""mailto:of.9824.7.1.4@gmail.com"">of.9824.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.247.1.4@gmail.com"">o.f.9.8.247.1.4@gmail.com</a>
<a href=""mailto:o.f982.4.7.1.4@gmail.com"">o.f982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.2.47.1.4@gmail.com"">o.f98.2.47.1.4@gmail.com</a>
<a href=""mailto:of982.471.4@gmail.com"">of982.471.4@gmail.com</a>
<a href=""mailto:o.f982.4.7.14@gmail.com"">o.f982.4.7.14@gmail.com</a>
<a href=""mailto:of9.824.714@gmail.com"">of9.824.714@gmail.com</a>
<a href=""mailto:o.f.9.824714@gmail.com"">o.f.9.824714@gmail.com</a>
<a href=""mailto:o.f.98.247.14@gmail.com"">o.f.98.247.14@gmail.com</a>
<a href=""mailto:of9.8.2.4714@gmail.com"">of9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f.9.824.7.1.4@gmail.com"">o.f.9.824.7.1.4@gmail.com</a>
<a href=""mailto:of98.2.4.71.4@gmail.com"">of98.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f.982.47.14@gmail.com"">o.f.982.47.14@gmail.com</a>
<a href=""mailto:of.98.24714@gmail.com"">of.98.24714@gmail.com</a>
<a href=""mailto:of98.2.47.1.4@gmail.com"">of98.2.47.1.4@gmail.com</a>
<a href=""mailto:of.9.8247.14@gmail.com"">of.9.8247.14@gmail.com</a>
<a href=""mailto:o.f.98.2.4.71.4@gmail.com"">o.f.98.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f9.824.7.1.4@gmail.com"">o.f9.824.7.1.4@gmail.com</a>
<a href=""mailto:of.982.47.1.4@gmail.com"">of.982.47.1.4@gmail.com</a>
<a href=""mailto:o.f982.4.71.4@gmail.com"">o.f982.4.71.4@gmail.com</a>
<a href=""mailto:o.f.9.8.24.7.14@gmail.com"">o.f.9.8.24.7.14@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.714@gmail.com"">o.f9.8.2.4.714@gmail.com</a>
<a href=""mailto:of.982.4.71.4@gmail.com"">of.982.4.71.4@gmail.com</a>
<a href=""mailto:o.f98.247.14@gmail.com"">o.f98.247.14@gmail.com</a>
<a href=""mailto:o.f9.8247.14@gmail.com"">o.f9.8247.14@gmail.com</a>
<a href=""mailto:o.f.982.4.71.4@gmail.com"">o.f.982.4.71.4@gmail.com</a>
<a href=""mailto:of.98.24.71.4@gmail.com"">of.98.24.71.4@gmail.com</a>
<a href=""mailto:of.982.47.14@gmail.com"">of.982.47.14@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.71.4@gmail.com"">o.f9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f9824.7.1.4@gmail.com"">o.f9824.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.2471.4@gmail.com"">o.f98.2471.4@gmail.com</a>
<a href=""mailto:o.f982.4714@gmail.com"">o.f982.4714@gmail.com</a>
<a href=""mailto:o.f9.82.4714@gmail.com"">o.f9.82.4714@gmail.com</a>
<a href=""mailto:of9.824.71.4@gmail.com"">of9.824.71.4@gmail.com</a>
<a href=""mailto:o.f98.2.4.7.14@gmail.com"">o.f98.2.4.7.14@gmail.com</a>
<a href=""mailto:o.f.9.8.24.714@gmail.com"">o.f.9.8.24.714@gmail.com</a>
<a href=""mailto:of.9.82.47.14@gmail.com"">of.9.82.47.14@gmail.com</a>
<a href=""mailto:of.98.2.4.71.4@gmail.com"">of.98.2.4.71.4@gmail.com</a>
<a href=""mailto:of.9.8.24.7.1.4@gmail.com"">of.9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:of9.82.47.1.4@gmail.com"">of9.82.47.1.4@gmail.com</a>
<a href=""mailto:o.f9824.714@gmail.com"">o.f9824.714@gmail.com</a>
<a href=""mailto:of9.824.7.1.4@gmail.com"">of9.824.7.1.4@gmail.com</a>
<a href=""mailto:of.9.82.4.7.1.4@gmail.com"">of.9.82.4.7.1.4@gmail.com</a>
<a href=""mailto:of.98.2.4.714@gmail.com"">of.98.2.4.714@gmail.com</a>
<a href=""mailto:o.f98.2.471.4@gmail.com"">o.f98.2.471.4@gmail.com</a>
<a href=""mailto:o.f.9824.7.1.4@gmail.com"">o.f.9824.7.1.4@gmail.com</a>
<a href=""mailto:of.98.2.47.14@gmail.com"">of.98.2.47.14@gmail.com</a>
<a href=""mailto:o.f9.8.24.7.1.4@gmail.com"">o.f9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.247.1.4@gmail.com"">o.f9.8.247.1.4@gmail.com</a>
<a href=""mailto:of9.8.24714@gmail.com"">of9.8.24714@gmail.com</a>
<a href=""mailto:o.f.9.82.47.14@gmail.com"">o.f.9.82.47.14@gmail.com</a>
<a href=""mailto:o.f.98.24.714@gmail.com"">o.f.98.24.714@gmail.com</a>
<a href=""mailto:o.f.98.2471.4@gmail.com"">o.f.98.2471.4@gmail.com</a>
<a href=""mailto:of.9.8.2.471.4@gmail.com"">of.9.8.2.471.4@gmail.com</a>
<a href=""mailto:of.9.8.247.1.4@gmail.com"">of.9.8.247.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.7.14@gmail.com"">o.f9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:o.f9.82.4.7.14@gmail.com"">o.f9.82.4.7.14@gmail.com</a>
<a href=""mailto:of.98.2.4.7.14@gmail.com"">of.98.2.4.7.14@gmail.com</a>
<a href=""mailto:of98.24.7.1.4@gmail.com"">of98.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82.4.71.4@gmail.com"">o.f.9.82.4.71.4@gmail.com</a>
<a href=""mailto:o.f.98.24.71.4@gmail.com"">o.f.98.24.71.4@gmail.com</a>
<a href=""mailto:o.f982.4.714@gmail.com"">o.f982.4.714@gmail.com</a>
<a href=""mailto:o.f.9.82.4.7.14@gmail.com"">o.f.9.82.4.7.14@gmail.com</a>
<a href=""mailto:o.f.982.4.7.1.4@gmail.com"">o.f.982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.982.4.7.14@gmail.com"">o.f.982.4.7.14@gmail.com</a>
<a href=""mailto:of.9824.71.4@gmail.com"">of.9824.71.4@gmail.com</a>
<a href=""mailto:o.f98.247.1.4@gmail.com"">o.f98.247.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2471.4@gmail.com"">o.f9.8.2471.4@gmail.com</a>
<a href=""mailto:of98.2.4.7.1.4@gmail.com"">of98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.24.71.4@gmail.com"">o.f98.24.71.4@gmail.com</a>
<a href=""mailto:of.982.4.7.1.4@gmail.com"">of.982.4.7.1.4@gmail.com</a>
<a href=""mailto:guterres1@msn.com"">guterres1@msn.com</a>
<a href=""mailto:officenkem43@gmail.com"">officenkem43@gmail.com</a>
<a href=""mailto:off.i.ce.nk.em4.3@gmail.com"">off.i.ce.nk.em4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.enk.e.m4.3@gmail.com"">o.ff.i.c.enk.e.m4.3@gmail.com</a>
<a href=""mailto:off.icen.ke.m4.3@gmail.com"">off.icen.ke.m4.3@gmail.com</a>
<a href=""mailto:o.f.fi.c.en.k.em43@gmail.com"">o.f.fi.c.en.k.em43@gmail.com</a>
<a href=""mailto:o.f.fic.e.n.ke.m43@gmail.com"">o.f.fic.e.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ic.e.n.kem.4.3@gmail.com"">o.ff.ic.e.n.kem.4.3@gmail.com</a>
<a href=""mailto:of.fic.en.k.em.43@gmail.com"">of.fic.en.k.em.43@gmail.com</a>
<a href=""mailto:of.f.ic.e.n.kem.43@gmail.com"">of.f.ic.e.n.kem.43@gmail.com</a>
<a href=""mailto:of.f.ice.nke.m.4.3@gmail.com"">of.f.ice.nke.m.4.3@gmail.com</a>
<a href=""mailto:officen.ke.m43@gmail.com"">officen.ke.m43@gmail.com</a>
<a href=""mailto:of.f.ic.en.ke.m43@gmail.com"">of.f.ic.en.ke.m43@gmail.com</a>
<a href=""mailto:of.f.ic.en.k.em4.3@gmail.com"">of.f.ic.en.k.em4.3@gmail.com</a>
<a href=""mailto:of.f.ic.e.n.k.em.4.3@gmail.com"">of.f.ic.e.n.k.em.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.enkem4.3@gmail.com"">o.ff.i.c.enkem4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.enk.em.43@gmail.com"">o.ff.i.c.enk.em.43@gmail.com</a>
<a href=""mailto:off.ic.e.nk.e.m.43@gmail.com"">off.ic.e.nk.e.m.43@gmail.com</a>
<a href=""mailto:off.ic.enke.m4.3@gmail.com"">off.ic.enke.m4.3@gmail.com</a>
<a href=""mailto:o.ffi.ce.n.k.em.43@gmail.com"">o.ffi.ce.n.k.em.43@gmail.com</a>
<a href=""mailto:o.f.fi.c.enk.e.m.4.3@gmail.com"">o.f.fi.c.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:offi.ce.n.ke.m43@gmail.com"">offi.ce.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ice.n.kem4.3@gmail.com"">o.ff.ice.n.kem4.3@gmail.com</a>
<a href=""mailto:o.ff.icenke.m4.3@gmail.com"">o.ff.icenke.m4.3@gmail.com</a>
<a href=""mailto:office.n.k.e.m.4.3@gmail.com"">office.n.k.e.m.4.3@gmail.com</a>
<a href=""mailto:of.fi.ce.nk.e.m.4.3@gmail.com"">of.fi.ce.nk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ff.icen.k.e.m.43@gmail.com"">o.ff.icen.k.e.m.43@gmail.com</a>
<a href=""mailto:of.fi.c.e.nkem4.3@gmail.com"">of.fi.c.e.nkem4.3@gmail.com</a>
<a href=""mailto:o.f.fic.en.k.em.4.3@gmail.com"">o.f.fic.en.k.em.4.3@gmail.com</a>
<a href=""mailto:offic.e.n.kem4.3@gmail.com"">offic.e.n.kem4.3@gmail.com</a>
<a href=""mailto:office.nkem43@gmail.com"">office.nkem43@gmail.com</a>
<a href=""mailto:offi.c.enk.e.m4.3@gmail.com"">offi.c.enk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.en.kem.43@gmail.com"">o.ff.i.c.en.kem.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.enke.m43@gmail.com"">o.ff.i.c.enke.m43@gmail.com</a>
<a href=""mailto:o.ffi.c.en.ke.m4.3@gmail.com"">o.ffi.c.en.ke.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.ce.nke.m4.3@gmail.com"">o.ff.i.ce.nke.m4.3@gmail.com</a>
<a href=""mailto:o.f.fi.cen.ke.m43@gmail.com"">o.f.fi.cen.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ic.e.nk.em.43@gmail.com"">o.ff.ic.e.nk.em.43@gmail.com</a>
<a href=""mailto:o.ffi.ce.nke.m.43@gmail.com"">o.ffi.ce.nke.m.43@gmail.com</a>
<a href=""mailto:o.ff.ic.en.k.e.m43@gmail.com"">o.ff.ic.en.k.e.m43@gmail.com</a>
<a href=""mailto:o.ff.i.cenke.m.43@gmail.com"">o.ff.i.cenke.m.43@gmail.com</a>
<a href=""mailto:offic.e.n.kem.4.3@gmail.com"">offic.e.n.kem.4.3@gmail.com</a>
<a href=""mailto:of.f.i.cenkem43@gmail.com"">of.f.i.cenkem43@gmail.com</a>
<a href=""mailto:o.ffi.c.e.n.k.e.m4.3@gmail.com"">o.ffi.c.e.n.k.e.m4.3@gmail.com</a>
<a href=""mailto:of.fi.c.en.kem.4.3@gmail.com"">of.fi.c.en.kem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.cenk.e.m.43@gmail.com"">o.f.f.i.cenk.e.m.43@gmail.com</a>
<a href=""mailto:of.fice.n.ke.m43@gmail.com"">of.fice.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ffi.ce.n.k.e.m.4.3@gmail.com"">o.ffi.ce.n.k.e.m.4.3@gmail.com</a>
<a href=""mailto:off.icenkem.4.3@gmail.com"">off.icenkem.4.3@gmail.com</a>
<a href=""mailto:offi.cen.k.em4.3@gmail.com"">offi.cen.k.em4.3@gmail.com</a>
<a href=""mailto:o.ff.icen.kem.43@gmail.com"">o.ff.icen.kem.43@gmail.com</a>
<a href=""mailto:offi.cen.k.em.43@gmail.com"">offi.cen.k.em.43@gmail.com</a>
<a href=""mailto:o.f.fi.cenkem.4.3@gmail.com"">o.f.fi.cenkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.icenk.e.m.43@gmail.com"">o.f.f.icenk.e.m.43@gmail.com</a>
<a href=""mailto:offic.enk.e.m.4.3@gmail.com"">offic.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.fic.e.n.k.e.m.43@gmail.com"">o.f.fic.e.n.k.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.icen.k.em.43@gmail.com"">o.ff.icen.k.em.43@gmail.com</a>
<a href=""mailto:o.f.f.i.c.en.k.e.m.43@gmail.com"">o.f.f.i.c.en.k.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.n.kem43@gmail.com"">o.ff.i.c.e.n.kem43@gmail.com</a>
<a href=""mailto:off.ic.e.nkem.4.3@gmail.com"">off.ic.e.nkem.4.3@gmail.com</a>
<a href=""mailto:o.f.fi.cenke.m.43@gmail.com"">o.f.fi.cenke.m.43@gmail.com</a>
<a href=""mailto:o.f.fi.c.enke.m4.3@gmail.com"">o.f.fi.c.enke.m4.3@gmail.com</a>
<a href=""mailto:officenk.em.43@gmail.com"">officenk.em.43@gmail.com</a>
<a href=""mailto:of.fic.e.n.kem43@gmail.com"">of.fic.e.n.kem43@gmail.com</a>
<a href=""mailto:of.f.ic.enk.e.m.4.3@gmail.com"">of.f.ic.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ffi.cen.k.e.m43@gmail.com"">o.ffi.cen.k.e.m43@gmail.com</a>
<a href=""mailto:of.fi.ce.nkem.4.3@gmail.com"">of.fi.ce.nkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.en.ke.m4.3@gmail.com"">o.f.f.ic.en.ke.m4.3@gmail.com</a>
<a href=""mailto:o.fficenk.e.m4.3@gmail.com"">o.fficenk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ffic.e.n.k.e.m.43@gmail.com"">o.ffic.e.n.k.e.m.43@gmail.com</a>
<a href=""mailto:of.fic.enke.m.4.3@gmail.com"">of.fic.enke.m.4.3@gmail.com</a>
<a href=""mailto:o.ff.ice.n.k.em43@gmail.com"">o.ff.ice.n.k.em43@gmail.com</a>
<a href=""mailto:o.f.fic.e.nk.e.m43@gmail.com"">o.f.fic.e.nk.e.m43@gmail.com</a>
<a href=""mailto:offi.c.en.kem4.3@gmail.com"">offi.c.en.kem4.3@gmail.com</a>
<a href=""mailto:o.ff.ic.enke.m4.3@gmail.com"">o.ff.ic.enke.m4.3@gmail.com</a>
<a href=""mailto:offi.c.en.kem.43@gmail.com"">offi.c.en.kem.43@gmail.com</a>
<a href=""mailto:of.fi.ce.n.ke.m.43@gmail.com"">of.fi.ce.n.ke.m.43@gmail.com</a>
<a href=""mailto:officen.k.em.43@gmail.com"">officen.k.em.43@gmail.com</a>
<a href=""mailto:o.ffic.e.nkem.4.3@gmail.com"">o.ffic.e.nkem.4.3@gmail.com</a>
<a href=""mailto:offi.c.e.nk.em.4.3@gmail.com"">offi.c.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.nkem.4.3@gmail.com"">o.f.f.i.ce.nkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.ice.n.kem.43@gmail.com"">o.f.f.ice.n.kem.43@gmail.com</a>
<a href=""mailto:o.f.fi.cenk.em.43@gmail.com"">o.f.fi.cenk.em.43@gmail.com</a>
<a href=""mailto:o.ffi.ce.n.kem4.3@gmail.com"">o.ffi.ce.n.kem4.3@gmail.com</a>
<a href=""mailto:of.f.icen.kem.43@gmail.com"">of.f.icen.kem.43@gmail.com</a>
<a href=""mailto:o.ffic.e.nkem4.3@gmail.com"">o.ffic.e.nkem4.3@gmail.com</a>
<a href=""mailto:office.nkem4.3@gmail.com"">office.nkem4.3@gmail.com</a>
<a href=""mailto:of.fic.e.nk.e.m4.3@gmail.com"">of.fic.e.nk.e.m4.3@gmail.com</a>
<a href=""mailto:offi.cenke.m.43@gmail.com"">offi.cenke.m.43@gmail.com</a>
<a href=""mailto:o.f.fic.e.nk.em.43@gmail.com"">o.f.fic.e.nk.em.43@gmail.com</a>
<a href=""mailto:of.f.i.cen.kem.43@gmail.com"">of.f.i.cen.kem.43@gmail.com</a>
<a href=""mailto:office.nke.m43@gmail.com"">office.nke.m43@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.n.ke.m.4.3@gmail.com"">o.f.f.ic.e.n.ke.m.4.3@gmail.com</a>
<a href=""mailto:off.i.cenk.em.43@gmail.com"">off.i.cenk.em.43@gmail.com</a>
<a href=""mailto:off.ic.e.nk.em.4.3@gmail.com"">off.ic.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.n.ke.m43@gmail.com"">o.f.f.i.ce.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ice.nkem.43@gmail.com"">o.ff.ice.nkem.43@gmail.com</a>
<a href=""mailto:o.ffice.n.kem4.3@gmail.com"">o.ffice.n.kem4.3@gmail.com</a>
<a href=""mailto:o.ff.i.ce.nkem.4.3@gmail.com"">o.ff.i.ce.nkem.4.3@gmail.com</a>
<a href=""mailto:o.ff.ic.en.kem4.3@gmail.com"">o.ff.ic.en.kem4.3@gmail.com</a>
<a href=""mailto:offi.c.en.ke.m.4.3@gmail.com"">offi.c.en.ke.m.4.3@gmail.com</a>
<a href=""mailto:o.fficenkem.43@gmail.com"">o.fficenkem.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.enk.e.m.43@gmail.com"">o.ff.i.c.enk.e.m.43@gmail.com</a>
<a href=""mailto:o.ffi.cenkem43@gmail.com"">o.ffi.cenkem43@gmail.com</a>
<a href=""mailto:of.fi.cen.k.em.4.3@gmail.com"">of.fi.cen.k.em.4.3@gmail.com</a>
<a href=""mailto:o.ffice.nke.m.43@gmail.com"">o.ffice.nke.m.43@gmail.com</a>
<a href=""mailto:o.ff.ic.en.k.em4.3@gmail.com"">o.ff.ic.en.k.em4.3@gmail.com</a>
<a href=""mailto:off.ic.e.n.ke.m4.3@gmail.com"">off.ic.e.n.ke.m4.3@gmail.com</a>
<a href=""mailto:o.ffi.c.enke.m.43@gmail.com"">o.ffi.c.enke.m.43@gmail.com</a>
<a href=""mailto:o.f.fic.enk.e.m.43@gmail.com"">o.f.fic.enk.e.m.43@gmail.com</a>
<a href=""mailto:offi.cenkem.43@gmail.com"">offi.cenkem.43@gmail.com</a>
<a href=""mailto:o.ff.i.ce.nk.e.m4.3@gmail.com"">o.ff.i.ce.nk.e.m4.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.enkem.43@gmail.com"">o.f.f.ic.enkem.43@gmail.com</a>
<a href=""mailto:o.ffi.c.en.k.e.m4.3@gmail.com"">o.ffi.c.en.k.e.m4.3@gmail.com</a>
<a href=""mailto:o.ff.ice.n.k.em.43@gmail.com"">o.ff.ice.n.k.em.43@gmail.com</a>
<a href=""mailto:off.ice.nk.e.m43@gmail.com"">off.ice.nk.e.m43@gmail.com</a>
<a href=""mailto:o.fficen.k.e.m43@gmail.com"">o.fficen.k.e.m43@gmail.com</a>
<a href=""mailto:offic.enkem.4.3@gmail.com"">offic.enkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e.nke.m43@gmail.com"">o.f.f.i.c.e.nke.m43@gmail.com</a>
<a href=""mailto:of.ficenkem4.3@gmail.com"">of.ficenkem4.3@gmail.com</a>
<a href=""mailto:o.ffic.e.nke.m4.3@gmail.com"">o.ffic.e.nke.m4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enk.em4.3@gmail.com"">o.f.f.i.c.enk.em4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enke.m.43@gmail.com"">o.f.f.i.c.enke.m.43@gmail.com</a>
<a href=""mailto:office.nk.em.43@gmail.com"">office.nk.em.43@gmail.com</a>
<a href=""mailto:offic.e.nk.em.4.3@gmail.com"">offic.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:of.f.i.cenke.m43@gmail.com"">of.f.i.cenke.m43@gmail.com</a>
<a href=""mailto:offic.enkem4.3@gmail.com"">offic.enkem4.3@gmail.com</a>
<a href=""mailto:o.ffice.n.k.em43@gmail.com"">o.ffice.n.k.em43@gmail.com</a>
<a href=""mailto:of.fi.cen.kem.43@gmail.com"">of.fi.cen.kem.43@gmail.com</a>
<a href=""mailto:of.fi.c.e.n.ke.m4.3@gmail.com"">of.fi.c.e.n.ke.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.cen.k.em43@gmail.com"">o.ff.i.cen.k.em43@gmail.com</a>
<a href=""mailto:offic.en.k.em.4.3@gmail.com"">offic.en.k.em.4.3@gmail.com</a>
<a href=""mailto:of.f.ice.nk.e.m.4.3@gmail.com"">of.f.ice.nk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ffic.en.k.e.m43@gmail.com"">o.ffic.en.k.e.m43@gmail.com</a>
<a href=""mailto:o.f.f.ice.nk.em4.3@gmail.com"">o.f.f.ice.nk.em4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.cenke.m43@gmail.com"">o.f.f.i.cenke.m43@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.nkem.4.3@gmail.com"">o.ff.i.c.e.nkem.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.cenk.e.m.43@gmail.com"">o.ff.i.cenk.e.m.43@gmail.com</a>
<a href=""mailto:of.fic.enke.m43@gmail.com"">of.fic.enke.m43@gmail.com</a>
<a href=""mailto:o.ffi.ce.nk.e.m43@gmail.com"">o.ffi.ce.nk.e.m43@gmail.com</a>
<a href=""mailto:o.ff.i.c.enkem43@gmail.com"">o.ff.i.c.enkem43@gmail.com</a>
<a href=""mailto:of.f.ice.n.ke.m.4.3@gmail.com"">of.f.ice.n.ke.m.4.3@gmail.com</a>
<a href=""mailto:of.fi.c.e.nk.em.43@gmail.com"">of.fi.c.e.nk.em.43@gmail.com</a>
<a href=""mailto:offic.e.n.ke.m43@gmail.com"">offic.e.n.ke.m43@gmail.com</a>
<a href=""mailto:of.fi.ce.n.k.e.m.43@gmail.com"">of.fi.ce.n.k.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.ice.nk.e.m.43@gmail.com"">o.ff.ice.nk.e.m.43@gmail.com</a>
<a href=""mailto:off.icen.k.em43@gmail.com"">off.icen.k.em43@gmail.com</a>
<a href=""mailto:off.i.c.e.nk.em.43@gmail.com"">off.i.c.e.nk.em.43@gmail.com</a>
<a href=""mailto:of.ficen.k.em43@gmail.com"">of.ficen.k.em43@gmail.com</a>
<a href=""mailto:offi.c.en.k.e.m43@gmail.com"">offi.c.en.k.e.m43@gmail.com</a>
<a href=""mailto:of.fic.e.n.k.e.m.43@gmail.com"">of.fic.e.n.k.e.m.43@gmail.com</a>
<a href=""mailto:o.f.f.icenk.em.4.3@gmail.com"">o.f.f.icenk.em.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.en.k.e.m4.3@gmail.com"">o.ff.i.c.en.k.e.m4.3@gmail.com</a>
<a href=""mailto:off.i.c.e.n.ke.m43@gmail.com"">off.i.c.e.n.ke.m43@gmail.com</a>
<a href=""mailto:o.fficenkem4.3@gmail.com"">o.fficenkem4.3@gmail.com</a>
<a href=""mailto:o.ffic.e.nk.e.m4.3@gmail.com"">o.ffic.e.nk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.cen.kem43@gmail.com"">o.ff.i.cen.kem43@gmail.com</a>
<a href=""mailto:off.i.c.e.n.kem43@gmail.com"">off.i.c.e.n.kem43@gmail.com</a>
<a href=""mailto:offi.cen.kem43@gmail.com"">offi.cen.kem43@gmail.com</a>
<a href=""mailto:o.ffice.nk.e.m.43@gmail.com"">o.ffice.nk.e.m.43@gmail.com</a>
<a href=""mailto:o.f.f.icen.k.em4.3@gmail.com"">o.f.f.icen.k.em4.3@gmail.com</a>
<a href=""mailto:o.ffi.cen.k.e.m.4.3@gmail.com"">o.ffi.cen.k.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.n.k.em43@gmail.com"">o.f.f.i.ce.n.k.em43@gmail.com</a>
<a href=""mailto:of.fic.e.nke.m.43@gmail.com"">of.fic.e.nke.m.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.n.k.em4.3@gmail.com"">o.ff.i.c.e.n.k.em4.3@gmail.com</a>
<a href=""mailto:of.fi.ce.nk.e.m.43@gmail.com"">of.fi.ce.nk.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.ice.n.k.e.m4.3@gmail.com"">o.ff.ice.n.k.e.m4.3@gmail.com</a>
<a href=""mailto:o.f.fic.enk.em43@gmail.com"">o.f.fic.enk.em43@gmail.com</a>
<a href=""mailto:of.f.i.cen.k.em4.3@gmail.com"">of.f.i.cen.k.em4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.en.kem4.3@gmail.com"">o.f.f.i.c.en.kem4.3@gmail.com</a>
<a href=""mailto:o.fficen.ke.m.4.3@gmail.com"">o.fficen.ke.m.4.3@gmail.com</a>
<a href=""mailto:of.fi.c.en.ke.m.43@gmail.com"">of.fi.c.en.ke.m.43@gmail.com</a>
<a href=""mailto:offi.cenk.e.m.4.3@gmail.com"">offi.cenk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.fice.nkem4.3@gmail.com"">o.f.fice.nkem4.3@gmail.com</a>
<a href=""mailto:of.fice.n.kem.43@gmail.com"">of.fice.n.kem.43@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enk.em.43@gmail.com"">o.f.f.i.c.enk.em.43@gmail.com</a>
<a href=""mailto:o.f.fice.n.k.em.4.3@gmail.com"">o.f.fice.n.k.em.4.3@gmail.com</a>
<a href=""mailto:o.ffic.enk.e.m.4.3@gmail.com"">o.ffic.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:of.fice.nk.em.4.3@gmail.com"">of.fice.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.n.ke.m.43@gmail.com"">o.f.fi.c.e.n.ke.m.43@gmail.com</a>
<a href=""mailto:off.i.c.enke.m4.3@gmail.com"">off.i.c.enke.m4.3@gmail.com</a>
<a href=""mailto:of.fi.c.enk.e.m4.3@gmail.com"">of.fi.c.enk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ffice.nkem43@gmail.com"">o.ffice.nkem43@gmail.com</a>
<a href=""mailto:of.ficen.k.e.m.4.3@gmail.com"">of.ficen.k.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ffic.enk.em.4.3@gmail.com"">o.ffic.enk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.cenk.em43@gmail.com"">o.f.f.i.cenk.em43@gmail.com</a>
<a href=""mailto:of.f.i.c.e.nk.em.4.3@gmail.com"">of.f.i.c.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.nk.em.43@gmail.com"">o.ff.i.c.e.nk.em.43@gmail.com</a>
<a href=""mailto:o.f.fic.e.n.kem43@gmail.com"">o.f.fic.e.n.kem43@gmail.com</a>
<a href=""mailto:o.ffi.c.en.ke.m.4.3@gmail.com"">o.ffi.c.en.ke.m.4.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.enk.e.m.43@gmail.com"">o.f.f.ic.enk.e.m.43@gmail.com</a>
<a href=""mailto:of.f.ice.nk.e.m43@gmail.com"">of.f.ice.nk.e.m43@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.n.k.e.m.4.3@gmail.com"">o.f.fi.c.e.n.k.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enke.m43@gmail.com"">o.f.f.i.c.enke.m43@gmail.com</a>
<a href=""mailto:offi.cenke.m43@gmail.com"">offi.cenke.m43@gmail.com</a>
<a href=""mailto:o.f.f.i.cen.k.e.m.43@gmail.com"">o.f.f.i.cen.k.e.m.43@gmail.com</a>
<a href=""mailto:o.f.f.ice.n.k.e.m4.3@gmail.com"">o.f.f.ice.n.k.e.m4.3@gmail.com</a>
<a href=""mailto:o.f.fi.ce.n.ke.m4.3@gmail.com"">o.f.fi.ce.n.ke.m4.3@gmail.com</a>
<a href=""mailto:offic.en.kem43@gmail.com"">offic.en.kem43@gmail.com</a>
<a href=""mailto:o.f.fice.nk.em.43@gmail.com"">o.f.fice.nk.em.43@gmail.com</a>
<a href=""mailto:o.f.fice.nke.m4.3@gmail.com"">o.f.fice.nke.m4.3@gmail.com</a>
<a href=""mailto:of.fi.cenk.em.43@gmail.com"">of.fi.cenk.em.43@gmail.com</a>
<a href=""mailto:info@email-mkts.fi"">info@email-mkts.fi</a>
<a href=""mailto:qbank3677@gmail.com"">qbank3677@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.677@gmail.com"">q.b.a.nk.3.677@gmail.com</a>
<a href=""mailto:qba.n.k.36.7.7@gmail.com"">qba.n.k.36.7.7@gmail.com</a>
<a href=""mailto:qbank.3677@gmail.com"">qbank.3677@gmail.com</a>
<a href=""mailto:q.ban.k.3.67.7@gmail.com"">q.ban.k.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k367.7@gmail.com"">qb.a.n.k367.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k3.67.7@gmail.com"">q.b.a.n.k3.67.7@gmail.com</a>
<a href=""mailto:qbank3677@gmail.com"">qbank3677@gmail.com</a>
<a href=""mailto:qban.k36.77@gmail.com"">qban.k36.77@gmail.com</a>
<a href=""mailto:q.b.an.k.367.7@gmail.com"">q.b.an.k.367.7@gmail.com</a>
<a href=""mailto:q.ba.nk3.67.7@gmail.com"">q.ba.nk3.67.7@gmail.com</a>
<a href=""mailto:q.ba.nk.36.77@gmail.com"">q.ba.nk.36.77@gmail.com</a>
<a href=""mailto:qb.a.n.k.367.7@gmail.com"">qb.a.n.k.367.7@gmail.com</a>
<a href=""mailto:qba.n.k.3.67.7@gmail.com"">qba.n.k.3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k36.7.7@gmail.com"">q.b.a.n.k36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.36.77@gmail.com"">q.b.an.k.36.77@gmail.com</a>
<a href=""mailto:qbank.3.67.7@gmail.com"">qbank.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k3.677@gmail.com"">qb.a.n.k3.677@gmail.com</a>
<a href=""mailto:q.b.an.k.3.67.7@gmail.com"">q.b.an.k.3.67.7@gmail.com</a>
<a href=""mailto:qb.ank367.7@gmail.com"">qb.ank367.7@gmail.com</a>
<a href=""mailto:qba.nk.36.7.7@gmail.com"">qba.nk.36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.36.7.7@gmail.com"">q.b.an.k.36.7.7@gmail.com</a>
<a href=""mailto:q.b.ank36.77@gmail.com"">q.b.ank36.77@gmail.com</a>
<a href=""mailto:q.ban.k.367.7@gmail.com"">q.ban.k.367.7@gmail.com</a>
<a href=""mailto:q.b.a.nk367.7@gmail.com"">q.b.a.nk367.7@gmail.com</a>
<a href=""mailto:q.b.an.k3.6.77@gmail.com"">q.b.an.k3.6.77@gmail.com</a>
<a href=""mailto:qb.a.n.k3677@gmail.com"">qb.a.n.k3677@gmail.com</a>
<a href=""mailto:q.b.a.nk.367.7@gmail.com"">q.b.a.nk.367.7@gmail.com</a>
<a href=""mailto:q.ban.k36.77@gmail.com"">q.ban.k36.77@gmail.com</a>
<a href=""mailto:q.b.ank.3.67.7@gmail.com"">q.b.ank.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k.3.6.7.7@gmail.com"">qb.a.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qb.ank.3.677@gmail.com"">qb.ank.3.677@gmail.com</a>
<a href=""mailto:qbank3.6.77@gmail.com"">qbank3.6.77@gmail.com</a>
<a href=""mailto:qb.a.nk367.7@gmail.com"">qb.a.nk367.7@gmail.com</a>
<a href=""mailto:qba.nk3.67.7@gmail.com"">qba.nk3.67.7@gmail.com</a>
<a href=""mailto:q.bank3.6.77@gmail.com"">q.bank3.6.77@gmail.com</a>
<a href=""mailto:qba.n.k36.7.7@gmail.com"">qba.n.k36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.3.677@gmail.com"">q.b.an.k.3.677@gmail.com</a>
<a href=""mailto:qb.an.k3.6.7.7@gmail.com"">qb.an.k3.6.7.7@gmail.com</a>
<a href=""mailto:qban.k3677@gmail.com"">qban.k3677@gmail.com</a>
<a href=""mailto:q.b.ank.3.677@gmail.com"">q.b.ank.3.677@gmail.com</a>
<a href=""mailto:q.b.a.n.k.367.7@gmail.com"">q.b.a.n.k.367.7@gmail.com</a>
<a href=""mailto:qbank.3.6.77@gmail.com"">qbank.3.6.77@gmail.com</a>
<a href=""mailto:qb.ank.36.7.7@gmail.com"">qb.ank.36.7.7@gmail.com</a>
<a href=""mailto:qban.k3.6.7.7@gmail.com"">qban.k3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.6.7.7@gmail.com"">q.b.a.nk.3.6.7.7@gmail.com</a>
<a href=""mailto:qba.n.k367.7@gmail.com"">qba.n.k367.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.677@gmail.com"">qb.a.nk.3.677@gmail.com</a>
<a href=""mailto:qb.a.n.k36.7.7@gmail.com"">qb.a.n.k36.7.7@gmail.com</a>
<a href=""mailto:q.bank.367.7@gmail.com"">q.bank.367.7@gmail.com</a>
<a href=""mailto:q.ban.k.36.77@gmail.com"">q.ban.k.36.77@gmail.com</a>
<a href=""mailto:q.b.ank.367.7@gmail.com"">q.b.ank.367.7@gmail.com</a>
<a href=""mailto:q.ba.n.k.36.7.7@gmail.com"">q.ba.n.k.36.7.7@gmail.com</a>
<a href=""mailto:qb.a.n.k.3.67.7@gmail.com"">qb.a.n.k.3.67.7@gmail.com</a>
<a href=""mailto:qban.k.3.6.7.7@gmail.com"">qban.k.3.6.7.7@gmail.com</a>
<a href=""mailto:q.bank.3.67.7@gmail.com"">q.bank.3.67.7@gmail.com</a>
<a href=""mailto:q.bank3.67.7@gmail.com"">q.bank3.67.7@gmail.com</a>
<a href=""mailto:qb.an.k.3677@gmail.com"">qb.an.k.3677@gmail.com</a>
<a href=""mailto:q.ba.nk3.6.77@gmail.com"">q.ba.nk3.6.77@gmail.com</a>
<a href=""mailto:q.b.an.k3.677@gmail.com"">q.b.an.k3.677@gmail.com</a>
<a href=""mailto:q.bank.36.77@gmail.com"">q.bank.36.77@gmail.com</a>
<a href=""mailto:q.bank3677@gmail.com"">q.bank3677@gmail.com</a>
<a href=""mailto:q.ba.n.k3.6.77@gmail.com"">q.ba.n.k3.6.77@gmail.com</a>
<a href=""mailto:qb.an.k36.77@gmail.com"">qb.an.k36.77@gmail.com</a>
<a href=""mailto:q.ban.k367.7@gmail.com"">q.ban.k367.7@gmail.com</a>
<a href=""mailto:qba.n.k.3677@gmail.com"">qba.n.k.3677@gmail.com</a>
<a href=""mailto:q.ba.nk.3.677@gmail.com"">q.ba.nk.3.677@gmail.com</a>
<a href=""mailto:qba.n.k.3.6.7.7@gmail.com"">qba.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qbank36.7.7@gmail.com"">qbank36.7.7@gmail.com</a>
<a href=""mailto:qba.nk.367.7@gmail.com"">qba.nk.367.7@gmail.com</a>
<a href=""mailto:qb.a.n.k.3.677@gmail.com"">qb.a.n.k.3.677@gmail.com</a>
<a href=""mailto:qb.ank3.6.7.7@gmail.com"">qb.ank3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.ank3.677@gmail.com"">q.b.ank3.677@gmail.com</a>
<a href=""mailto:qban.k3.677@gmail.com"">qban.k3.677@gmail.com</a>
<a href=""mailto:qban.k367.7@gmail.com"">qban.k367.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.6.77@gmail.com"">qb.a.nk.3.6.77@gmail.com</a>
<a href=""mailto:q.b.a.nk3.677@gmail.com"">q.b.a.nk3.677@gmail.com</a>
<a href=""mailto:qbank3.67.7@gmail.com"">qbank3.67.7@gmail.com</a>
<a href=""mailto:qb.ank.36.77@gmail.com"">qb.ank.36.77@gmail.com</a>
<a href=""mailto:qba.n.k.3.6.77@gmail.com"">qba.n.k.3.6.77@gmail.com</a>
<a href=""mailto:q.ban.k.3.677@gmail.com"">q.ban.k.3.677@gmail.com</a>
<a href=""mailto:qb.a.nk.36.7.7@gmail.com"">qb.a.nk.36.7.7@gmail.com</a>
<a href=""mailto:qb.ank3.67.7@gmail.com"">qb.ank3.67.7@gmail.com</a>
<a href=""mailto:qb.an.k.367.7@gmail.com"">qb.an.k.367.7@gmail.com</a>
<a href=""mailto:q.ban.k.36.7.7@gmail.com"">q.ban.k.36.7.7@gmail.com</a>
<a href=""mailto:qb.an.k.3.6.7.7@gmail.com"">qb.an.k.3.6.7.7@gmail.com</a>
<a href=""mailto:q.bank.3.6.77@gmail.com"">q.bank.3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.3677@gmail.com"">q.ba.n.k.3677@gmail.com</a>
<a href=""mailto:q.b.ank367.7@gmail.com"">q.b.ank367.7@gmail.com</a>
<a href=""mailto:q.ban.k36.7.7@gmail.com"">q.ban.k36.7.7@gmail.com</a>
<a href=""mailto:q.bank3.677@gmail.com"">q.bank3.677@gmail.com</a>
<a href=""mailto:q.ban.k3.677@gmail.com"">q.ban.k3.677@gmail.com</a>
<a href=""mailto:q.b.ank3.6.77@gmail.com"">q.b.ank3.6.77@gmail.com</a>
<a href=""mailto:qbank36.77@gmail.com"">qbank36.77@gmail.com</a>
<a href=""mailto:qb.a.nk3.6.77@gmail.com"">qb.a.nk3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.3.677@gmail.com"">q.ba.n.k.3.677@gmail.com</a>
<a href=""mailto:q.ban.k.3677@gmail.com"">q.ban.k.3677@gmail.com</a>
<a href=""mailto:qba.n.k36.77@gmail.com"">qba.n.k36.77@gmail.com</a>
<a href=""mailto:qba.nk3.6.77@gmail.com"">qba.nk3.6.77@gmail.com</a>
<a href=""mailto:qb.a.n.k3.67.7@gmail.com"">qb.a.n.k3.67.7@gmail.com</a>
<a href=""mailto:qb.an.k3.67.7@gmail.com"">qb.an.k3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.nk36.7.7@gmail.com"">q.b.a.nk36.7.7@gmail.com</a>
<a href=""mailto:qbank.36.7.7@gmail.com"">qbank.36.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk.36.77@gmail.com"">qb.a.nk.36.77@gmail.com</a>
<a href=""mailto:qbank.36.77@gmail.com"">qbank.36.77@gmail.com</a>
<a href=""mailto:qb.ank.3.6.7.7@gmail.com"">qb.ank.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.ank.36.7.7@gmail.com"">q.b.ank.36.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.6.7.7@gmail.com"">qb.a.nk.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k3677@gmail.com"">q.b.a.n.k3677@gmail.com</a>
<a href=""mailto:qb.a.n.k36.77@gmail.com"">qb.a.n.k36.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.367.7@gmail.com"">q.ba.n.k.367.7@gmail.com</a>
<a href=""mailto:q.b.an.k3677@gmail.com"">q.b.an.k3677@gmail.com</a>
<a href=""mailto:q.b.a.n.k.36.7.7@gmail.com"">q.b.a.n.k.36.7.7@gmail.com</a>
<a href=""mailto:q.bank36.77@gmail.com"">q.bank36.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k36.77@gmail.com"">q.b.a.n.k36.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k.3.6.77@gmail.com"">q.b.a.n.k.3.6.77@gmail.com</a>
<a href=""mailto:qba.n.k.367.7@gmail.com"">qba.n.k.367.7@gmail.com</a>
<a href=""mailto:qban.k.36.77@gmail.com"">qban.k.36.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k3.677@gmail.com"">q.b.a.n.k3.677@gmail.com</a>
<a href=""mailto:qb.a.nk3.6.7.7@gmail.com"">qb.a.nk3.6.7.7@gmail.com</a>
<a href=""mailto:qb.an.k3.6.77@gmail.com"">qb.an.k3.6.77@gmail.com</a>
<a href=""mailto:qb.an.k.36.7.7@gmail.com"">qb.an.k.36.7.7@gmail.com</a>
<a href=""mailto:qbank3.6.7.7@gmail.com"">qbank3.6.7.7@gmail.com</a>
<a href=""mailto:q.ba.nk.3.6.77@gmail.com"">q.ba.nk.3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k3.67.7@gmail.com"">q.ba.n.k3.67.7@gmail.com</a>
<a href=""mailto:q.ba.nk.367.7@gmail.com"">q.ba.nk.367.7@gmail.com</a>
<a href=""mailto:q.ba.n.k3677@gmail.com"">q.ba.n.k3677@gmail.com</a>
<a href=""mailto:q.b.ank3.6.7.7@gmail.com"">q.b.ank3.6.7.7@gmail.com</a>
<a href=""mailto:qban.k.3.677@gmail.com"">qban.k.3.677@gmail.com</a>
<a href=""mailto:q.ba.nk.3.67.7@gmail.com"">q.ba.nk.3.67.7@gmail.com</a>
<a href=""mailto:qbank367.7@gmail.com"">qbank367.7@gmail.com</a>
<a href=""mailto:q.ba.nk.3677@gmail.com"">q.ba.nk.3677@gmail.com</a>
<a href=""mailto:q.ba.n.k367.7@gmail.com"">q.ba.n.k367.7@gmail.com</a>
<a href=""mailto:q.bank3.6.7.7@gmail.com"">q.bank3.6.7.7@gmail.com</a>
<a href=""mailto:qba.nk.3.6.77@gmail.com"">qba.nk.3.6.77@gmail.com</a>
<a href=""mailto:qb.ank3677@gmail.com"">qb.ank3677@gmail.com</a>
<a href=""mailto:q.ba.nk3.677@gmail.com"">q.ba.nk3.677@gmail.com</a>
<a href=""mailto:qb.a.nk3677@gmail.com"">qb.a.nk3677@gmail.com</a>
<a href=""mailto:qb.ank3.6.77@gmail.com"">qb.ank3.6.77@gmail.com</a>
<a href=""mailto:qb.an.k367.7@gmail.com"">qb.an.k367.7@gmail.com</a>
<a href=""mailto:qb.ank.3677@gmail.com"">qb.ank.3677@gmail.com</a>
<a href=""mailto:q.bank.3677@gmail.com"">q.bank.3677@gmail.com</a>
<a href=""mailto:q.b.an.k.3677@gmail.com"">q.b.an.k.3677@gmail.com</a>
<a href=""mailto:q.ba.n.k.36.77@gmail.com"">q.ba.n.k.36.77@gmail.com</a>
<a href=""mailto:qb.an.k.3.6.77@gmail.com"">qb.an.k.3.6.77@gmail.com</a>
<a href=""mailto:q.b.ank36.7.7@gmail.com"">q.b.ank36.7.7@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.6.77@gmail.com"">q.b.a.nk.3.6.77@gmail.com</a>
<a href=""mailto:q.b.an.k3.6.7.7@gmail.com"">q.b.an.k3.6.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk3.67.7@gmail.com"">qb.a.nk3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.nk3677@gmail.com"">q.b.a.nk3677@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.67.7@gmail.com"">q.b.a.nk.3.67.7@gmail.com</a>
<a href=""mailto:qb.ank.3.6.77@gmail.com"">qb.ank.3.6.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k3.6.77@gmail.com"">q.b.a.n.k3.6.77@gmail.com</a>
<a href=""mailto:q.bank.3.6.7.7@gmail.com"">q.bank.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.nk.36.77@gmail.com"">q.b.a.nk.36.77@gmail.com</a>
<a href=""mailto:q.ba.nk36.7.7@gmail.com"">q.ba.nk36.7.7@gmail.com</a>
<a href=""mailto:q.ban.k.3.6.7.7@gmail.com"">q.ban.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qba.nk3677@gmail.com"">qba.nk3677@gmail.com</a>
<a href=""mailto:qb.ank36.77@gmail.com"">qb.ank36.77@gmail.com</a>
<a href=""mailto:qb.ank36.7.7@gmail.com"">qb.ank36.7.7@gmail.com</a>
<a href=""mailto:q.b.ank3677@gmail.com"">q.b.ank3677@gmail.com</a>
<a href=""mailto:q.b.ank.3.6.7.7@gmail.com"">q.b.ank.3.6.7.7@gmail.com</a>
<a href=""mailto:q.bank367.7@gmail.com"">q.bank367.7@gmail.com</a>
<a href=""mailto:q.ba.n.k36.77@gmail.com"">q.ba.n.k36.77@gmail.com</a>
<a href=""mailto:q.ban.k3.67.7@gmail.com"">q.ban.k3.67.7@gmail.com</a>
<a href=""mailto:qban.k.3.67.7@gmail.com"">qban.k.3.67.7@gmail.com</a>
<a href=""mailto:qbank3.677@gmail.com"">qbank3.677@gmail.com</a>
<a href=""mailto:qb.a.nk.3677@gmail.com"">qb.a.nk.3677@gmail.com</a>
<a href=""mailto:q.ba.n.k.3.6.7.7@gmail.com"">q.ba.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k.36.77@gmail.com"">q.b.a.n.k.36.77@gmail.com</a>
<a href=""mailto:q.b.ank.3677@gmail.com"">q.b.ank.3677@gmail.com</a>
<a href=""mailto:q.b.ank.36.77@gmail.com"">q.b.ank.36.77@gmail.com</a>
<a href=""mailto:qb.a.nk36.7.7@gmail.com"">qb.a.nk36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.3.6.77@gmail.com"">q.b.an.k.3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k3.677@gmail.com"">q.ba.n.k3.677@gmail.com</a>
<a href=""mailto:qb.a.nk3.677@gmail.com"">qb.a.nk3.677@gmail.com</a>
<a href=""mailto:qbank.3.677@gmail.com"">qbank.3.677@gmail.com</a>
<a href=""mailto:qb.a.n.k.36.77@gmail.com"">qb.a.n.k.36.77@gmail.com</a>
<a href=""mailto:qb.an.k.36.77@gmail.com"">qb.an.k.36.77@gmail.com</a>
<a href=""mailto:q.ba.nk.3.6.7.7@gmail.com"">q.ba.nk.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.ank3.67.7@gmail.com"">q.b.ank3.67.7@gmail.com</a>
<a href=""mailto:qban.k3.6.77@gmail.com"">qban.k3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.3.67.7@gmail.com"">q.ba.n.k.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k3.6.77@gmail.com"">qb.a.n.k3.6.77@gmail.com</a>
<a href=""mailto:qba.nk.3677@gmail.com"">qba.nk.3677@gmail.com</a>
<a href=""mailto:qb.an.k36.7.7@gmail.com"">qb.an.k36.7.7@gmail.com</a>
<a href=""mailto:q.ban.k.3.6.77@gmail.com"">q.ban.k.3.6.77@gmail.com</a>
<a href=""mailto:qba.n.k3677@gmail.com"">qba.n.k3677@gmail.com</a>
<a href=""mailto:q.b.an.k36.7.7@gmail.com"">q.b.an.k36.7.7@gmail.com</a>
<a href=""mailto:q.ba.nk367.7@gmail.com"">q.ba.nk367.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k.3.6.7.7@gmail.com"">q.b.a.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.67.7@gmail.com"">qb.a.nk.3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.nk3.6.7.7@gmail.com"">q.b.a.nk3.6.7.7@gmail.com</a>
<a href=""mailto:q.ban.k3677@gmail.com"">q.ban.k3677@gmail.com</a>
<a href=""mailto:qb.ank.3.67.7@gmail.com"">qb.ank.3.67.7@gmail.com</a>
<a href=""mailto:qba.n.k3.6.77@gmail.com"">qba.n.k3.6.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k.3677@gmail.com"">q.b.a.n.k.3677@gmail.com</a>
<a href=""mailto:qba.nk3.6.7.7@gmail.com"">qba.nk3.6.7.7@gmail.com</a>
<a href=""mailto:qba.nk367.7@gmail.com"">qba.nk367.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k367.7@gmail.com"">q.b.a.n.k367.7@gmail.com</a>
<a href=""mailto:q.b.a.nk3.67.7@gmail.com"">q.b.a.nk3.67.7@gmail.com</a>
<a href=""mailto:fidelity.info.plc@gmail.com"">fidelity.info.plc@gmail.com</a>
<a href=""mailto:fide.li.ty...in.fo...p.l.c@gmail.com"">fide.li.ty...in.fo...p.l.c@gmail.com</a>
<a href=""mailto:fi.de.l.it.y..i.nfo...p.lc@gmail.com"">fi.de.l.it.y..i.nfo...p.lc@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y...i.n.fo...plc@gmail.com"">fid.e.l.i.t.y...i.n.fo...plc@gmail.com</a>
<a href=""mailto:f.id.elit.y..info..p.lc@gmail.com"">f.id.elit.y..info..p.lc@gmail.com</a>
<a href=""mailto:f.ide.l.ity..i.n.fo...p.lc@gmail.com"">f.ide.l.ity..i.n.fo...p.lc@gmail.com</a>
<a href=""mailto:fid.e.lit.y..i.n.fo..p.lc@gmail.com"">fid.e.lit.y..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:f.i.de.l.i.t.y.in.f.o..plc@gmail.com"">f.i.de.l.i.t.y.in.f.o..plc@gmail.com</a>
<a href=""mailto:fid.el.i.t.y...i.nfo..p.lc@gmail.com"">fid.el.i.t.y...i.nfo..p.lc@gmail.com</a>
<a href=""mailto:f.ide.li.t.y..info.p.lc@gmail.com"">f.ide.li.t.y..info.p.lc@gmail.com</a>
<a href=""mailto:f.idel.i.t.y...info...plc@gmail.com"">f.idel.i.t.y...info...plc@gmail.com</a>
<a href=""mailto:f.id.eli.ty..in.f.o..p.lc@gmail.com"">f.id.eli.ty..in.f.o..p.lc@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y...inf.o...p.l.c@gmail.com"">f.ide.l.i.t.y...inf.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.it.y.inf.o..plc@gmail.com"">fid.e.l.it.y.inf.o..plc@gmail.com</a>
<a href=""mailto:f.i.de.lity..in.f.o..p.lc@gmail.com"">f.i.de.lity..in.f.o..p.lc@gmail.com</a>
<a href=""mailto:fi.d.elit.y..in.f.o.plc@gmail.com"">fi.d.elit.y..in.f.o.plc@gmail.com</a>
<a href=""mailto:fidelit.y..info...p.l.c@gmail.com"">fidelit.y..info...p.l.c@gmail.com</a>
<a href=""mailto:fi.de.li.ty.i.nfo..pl.c@gmail.com"">fi.de.li.ty.i.nfo..pl.c@gmail.com</a>
<a href=""mailto:f.id.e.li.ty.in.f.o...p.l.c@gmail.com"">f.id.e.li.ty.in.f.o...p.l.c@gmail.com</a>
<a href=""mailto:f.i.d.el.it.y..i.n.f.o..p.lc@gmail.com"">f.i.d.el.it.y..i.n.f.o..p.lc@gmail.com</a>
<a href=""mailto:fid.el.i.ty...i.nfo.plc@gmail.com"">fid.el.i.ty...i.nfo.plc@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y...inf.o..pl.c@gmail.com"">fid.e.l.i.t.y...inf.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.e.li.t.y.i.nf.o..plc@gmail.com"">f.i.d.e.li.t.y.i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.id.elit.y..i.n.f.o..p.lc@gmail.com"">f.id.elit.y..i.n.f.o..p.lc@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..i.nfo..pl.c@gmail.com"">f.ide.l.i.ty..i.nfo..pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.t.y...inf.o..p.l.c@gmail.com"">fid.e.li.t.y...inf.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.de.lity..i.n.f.o..p.l.c@gmail.com"">fi.de.lity..i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.l.it.y..in.f.o.pl.c@gmail.com"">f.i.de.l.it.y..in.f.o.pl.c@gmail.com</a>
<a href=""mailto:fi.d.elity..inf.o...plc@gmail.com"">fi.d.elity..inf.o...plc@gmail.com</a>
<a href=""mailto:f.i.d.el.i.t.y..i.n.fo.p.lc@gmail.com"">f.i.d.el.i.t.y..i.n.fo.p.lc@gmail.com</a>
<a href=""mailto:fi.de.l.it.y..in.fo..plc@gmail.com"">fi.de.l.it.y..in.fo..plc@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y..inf.o..p.l.c@gmail.com"">f.i.de.li.t.y..inf.o..p.l.c@gmail.com</a>
<a href=""mailto:fid.el.i.t.y.in.f.o...plc@gmail.com"">fid.el.i.t.y.in.f.o...plc@gmail.com</a>
<a href=""mailto:fi.d.e.l.i.ty..i.nf.o..plc@gmail.com"">fi.d.e.l.i.ty..i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.id.e.lity...in.f.o..plc@gmail.com"">f.id.e.lity...in.f.o..plc@gmail.com</a>
<a href=""mailto:f.i.d.elit.y...i.n.fo..p.l.c@gmail.com"">f.i.d.elit.y...i.n.fo..p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.ty...i.n.fo..pl.c@gmail.com"">f.id.eli.ty...i.n.fo..pl.c@gmail.com</a>
<a href=""mailto:fid.eli.t.y..in.f.o...p.l.c@gmail.com"">fid.eli.t.y..in.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fideli.ty..inf.o..p.lc@gmail.com"">fideli.ty..inf.o..p.lc@gmail.com</a>
<a href=""mailto:f.i.deli.ty..in.f.o..pl.c@gmail.com"">f.i.deli.ty..in.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.eli.t.y..inf.o...pl.c@gmail.com"">f.i.d.eli.t.y..inf.o...pl.c@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y...inf.o...plc@gmail.com"">fid.e.l.i.t.y...inf.o...plc@gmail.com</a>
<a href=""mailto:fi.delity..in.f.o..pl.c@gmail.com"">fi.delity..in.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.id.el.i.t.y...i.n.f.o..p.lc@gmail.com"">f.id.el.i.t.y...i.n.f.o..p.lc@gmail.com</a>
<a href=""mailto:fid.e.lity...i.n.fo..plc@gmail.com"">fid.e.lity...i.n.fo..plc@gmail.com</a>
<a href=""mailto:f.ide.l.ity...i.nf.o.p.l.c@gmail.com"">f.ide.l.ity...i.nf.o.p.l.c@gmail.com</a>
<a href=""mailto:f.id.elity..info...p.lc@gmail.com"">f.id.elity..info...p.lc@gmail.com</a>
<a href=""mailto:fi.deli.ty.i.n.fo...plc@gmail.com"">fi.deli.ty.i.n.fo...plc@gmail.com</a>
<a href=""mailto:f.i.deli.t.y..i.n.f.o.p.l.c@gmail.com"">f.i.deli.t.y..i.n.f.o.p.l.c@gmail.com</a>
<a href=""mailto:fi.d.el.ity..i.nf.o..p.l.c@gmail.com"">fi.d.el.ity..i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:f.id.e.l.i.t.y..i.nf.o..plc@gmail.com"">f.id.e.l.i.t.y..i.nf.o..plc@gmail.com</a>
<a href=""mailto:fid.e.l.it.y...i.n.fo.pl.c@gmail.com"">fid.e.l.it.y...i.n.fo.pl.c@gmail.com</a>
<a href=""mailto:fi.d.eli.ty.i.n.fo..plc@gmail.com"">fi.d.eli.ty.i.n.fo..plc@gmail.com</a>
<a href=""mailto:fi.del.i.t.y..in.f.o..p.lc@gmail.com"">fi.del.i.t.y..in.f.o..p.lc@gmail.com</a>
<a href=""mailto:f.ideli.t.y..in.fo.p.lc@gmail.com"">f.ideli.t.y..in.fo.p.lc@gmail.com</a>
<a href=""mailto:fi.delity..in.fo..p.lc@gmail.com"">fi.delity..in.fo..p.lc@gmail.com</a>
<a href=""mailto:fide.l.ity..in.fo.p.l.c@gmail.com"">fide.l.ity..in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y..i.n.fo.p.l.c@gmail.com"">f.i.de.li.t.y..i.n.fo.p.l.c@gmail.com</a>
<a href=""mailto:fi.del.i.t.y...in.f.o..plc@gmail.com"">fi.del.i.t.y...in.f.o..plc@gmail.com</a>
<a href=""mailto:f.ide.lity...i.nf.o.pl.c@gmail.com"">f.ide.lity...i.nf.o.pl.c@gmail.com</a>
<a href=""mailto:fi.d.e.l.ity..i.n.f.o...pl.c@gmail.com"">fi.d.e.l.ity..i.n.f.o...pl.c@gmail.com</a>
<a href=""mailto:f.idelity...info.p.lc@gmail.com"">f.idelity...info.p.lc@gmail.com</a>
<a href=""mailto:fideli.ty..inf.o..plc@gmail.com"">fideli.ty..inf.o..plc@gmail.com</a>
<a href=""mailto:f.i.de.l.i.ty..i.nf.o...p.l.c@gmail.com"">f.i.de.l.i.ty..i.nf.o...p.l.c@gmail.com</a>
<a href=""mailto:fidel.ity.in.fo..plc@gmail.com"">fidel.ity.in.fo..plc@gmail.com</a>
<a href=""mailto:fid.e.lity.info..p.l.c@gmail.com"">fid.e.lity.info..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.l.i.t.y..in.f.o...plc@gmail.com"">fi.d.e.l.i.t.y..in.f.o...plc@gmail.com</a>
<a href=""mailto:f.i.d.el.ity..info...p.l.c@gmail.com"">f.i.d.el.ity..info...p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.t.y..i.n.f.o.plc@gmail.com"">f.id.eli.t.y..i.n.f.o.plc@gmail.com</a>
<a href=""mailto:f.ide.l.ity.info.p.l.c@gmail.com"">f.ide.l.ity.info.p.l.c@gmail.com</a>
<a href=""mailto:f.i.del.i.ty...info..pl.c@gmail.com"">f.i.del.i.ty...info..pl.c@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y.info..plc@gmail.com"">f.ide.l.i.t.y.info..plc@gmail.com</a>
<a href=""mailto:fid.eli.ty..i.nfo..p.l.c@gmail.com"">fid.eli.ty..i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.elit.y..i.nf.o...p.lc@gmail.com"">fi.d.elit.y..i.nf.o...p.lc@gmail.com</a>
<a href=""mailto:fi.del.it.y...in.f.o.pl.c@gmail.com"">fi.del.it.y...in.f.o.pl.c@gmail.com</a>
<a href=""mailto:fi.d.elity..info...p.lc@gmail.com"">fi.d.elity..info...p.lc@gmail.com</a>
<a href=""mailto:fide.lit.y.inf.o..plc@gmail.com"">fide.lit.y.inf.o..plc@gmail.com</a>
<a href=""mailto:f.id.eli.t.y..i.n.f.o...p.l.c@gmail.com"">f.id.eli.t.y..i.n.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fi.del.i.ty.in.fo..p.l.c@gmail.com"">fi.del.i.ty.in.fo..p.l.c@gmail.com</a>
<a href=""mailto:fi.de.l.i.ty..i.nf.o...p.l.c@gmail.com"">fi.de.l.i.ty..i.nf.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y..i.n.f.o..p.l.c@gmail.com"">fid.e.l.i.t.y..i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.delity..i.n.fo..p.lc@gmail.com"">fi.delity..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:fid.elity..in.fo.p.l.c@gmail.com"">fid.elity..in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.lit.y.info.p.lc@gmail.com"">f.i.de.lit.y.info.p.lc@gmail.com</a>
<a href=""mailto:f.id.el.ity..in.f.o..plc@gmail.com"">f.id.el.ity..in.f.o..plc@gmail.com</a>
<a href=""mailto:f.i.d.el.i.t.y..info.plc@gmail.com"">f.i.d.el.i.t.y..info.plc@gmail.com</a>
<a href=""mailto:f.i.de.l.ity..i.nf.o...p.lc@gmail.com"">f.i.de.l.ity..i.nf.o...p.lc@gmail.com</a>
<a href=""mailto:f.i.del.ity..i.nfo..plc@gmail.com"">f.i.del.ity..i.nfo..plc@gmail.com</a>
<a href=""mailto:fi.d.e.l.it.y..inf.o..plc@gmail.com"">fi.d.e.l.it.y..inf.o..plc@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y..info..p.l.c@gmail.com"">f.ide.l.i.t.y..info..p.l.c@gmail.com</a>
<a href=""mailto:f.id.e.l.i.t.y..in.fo..p.l.c@gmail.com"">f.id.e.l.i.t.y..in.fo..p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.ity..in.f.o...p.lc@gmail.com"">fid.e.l.ity..in.f.o...p.lc@gmail.com</a>
<a href=""mailto:fi.del.i.t.y..i.nfo..p.l.c@gmail.com"">fi.del.i.t.y..i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:fide.l.it.y..i.nfo...pl.c@gmail.com"">fide.l.it.y..i.nfo...pl.c@gmail.com</a>
<a href=""mailto:fideli.ty..i.nfo..p.l.c@gmail.com"">fideli.ty..i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:fide.lity..in.fo...p.lc@gmail.com"">fide.lity..in.fo...p.lc@gmail.com</a>
<a href=""mailto:f.id.el.i.t.y..i.n.f.o..pl.c@gmail.com"">f.id.el.i.t.y..i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:fid.elity..inf.o...pl.c@gmail.com"">fid.elity..inf.o...pl.c@gmail.com</a>
<a href=""mailto:f.i.d.e.l.i.ty..in.fo.pl.c@gmail.com"">f.i.d.e.l.i.ty..in.fo.pl.c@gmail.com</a>
<a href=""mailto:fid.eli.t.y.i.nf.o..p.l.c@gmail.com"">fid.eli.t.y.i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fid.el.ity..i.nf.o...plc@gmail.com"">fid.el.ity..i.nf.o...plc@gmail.com</a>
<a href=""mailto:fide.li.t.y..info..p.lc@gmail.com"">fide.li.t.y..info..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.eli.ty..inf.o..plc@gmail.com"">f.i.d.eli.ty..inf.o..plc@gmail.com</a>
<a href=""mailto:f.i.del.it.y..info.p.lc@gmail.com"">f.i.del.it.y..info.p.lc@gmail.com</a>
<a href=""mailto:fideli.ty...in.f.o.pl.c@gmail.com"">fideli.ty...in.f.o.pl.c@gmail.com</a>
<a href=""mailto:f.i.del.it.y...i.nf.o...pl.c@gmail.com"">f.i.del.it.y...i.nf.o...pl.c@gmail.com</a>
<a href=""mailto:fi.d.el.ity...info..pl.c@gmail.com"">fi.d.el.ity...info..pl.c@gmail.com</a>
<a href=""mailto:f.id.elit.y..in.f.o...p.l.c@gmail.com"">f.id.elit.y..in.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.el.i.t.y..i.nf.o.plc@gmail.com"">fid.el.i.t.y..i.nf.o.plc@gmail.com</a>
<a href=""mailto:fi.de.li.t.y..i.nf.o...pl.c@gmail.com"">fi.de.li.t.y..i.nf.o...pl.c@gmail.com</a>
<a href=""mailto:f.ide.li.t.y..i.n.f.o.p.l.c@gmail.com"">f.ide.li.t.y..i.n.f.o.p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.lity...in.f.o.p.l.c@gmail.com"">fi.d.e.lity...in.f.o.p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.l.it.y..i.nfo.p.lc@gmail.com"">fi.d.e.l.it.y..i.nfo.p.lc@gmail.com</a>
<a href=""mailto:f.id.elit.y..i.nfo.pl.c@gmail.com"">f.id.elit.y..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..in.f.o...p.lc@gmail.com"">f.ide.l.i.ty..in.f.o...p.lc@gmail.com</a>
<a href=""mailto:f.id.el.ity..i.n.f.o...pl.c@gmail.com"">f.id.el.ity..i.n.f.o...pl.c@gmail.com</a>
<a href=""mailto:f.i.d.e.lity.i.n.f.o.pl.c@gmail.com"">f.i.d.e.lity.i.n.f.o.pl.c@gmail.com</a>
<a href=""mailto:fidel.i.t.y.info...p.lc@gmail.com"">fidel.i.t.y.info...p.lc@gmail.com</a>
<a href=""mailto:f.idel.i.ty..i.nf.o..p.l.c@gmail.com"">f.idel.i.ty..i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fidel.i.t.y.i.nf.o..p.lc@gmail.com"">fidel.i.t.y.i.nf.o..p.lc@gmail.com</a>
<a href=""mailto:f.id.e.l.it.y.info.p.l.c@gmail.com"">f.id.e.l.it.y.info.p.l.c@gmail.com</a>
<a href=""mailto:fid.eli.ty..i.nfo.pl.c@gmail.com"">fid.eli.ty..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:f.i.d.el.ity.in.fo..p.lc@gmail.com"">f.i.d.el.ity.in.fo..p.lc@gmail.com</a>
<a href=""mailto:fid.el.i.ty..inf.o.p.l.c@gmail.com"">fid.el.i.ty..inf.o.p.l.c@gmail.com</a>
<a href=""mailto:f.idel.i.t.y...i.nf.o..p.l.c@gmail.com"">f.idel.i.t.y...i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.deli.ty..inf.o..p.lc@gmail.com"">fi.deli.ty..inf.o..p.lc@gmail.com</a>
<a href=""mailto:f.idelity.in.f.o..p.lc@gmail.com"">f.idelity.in.f.o..p.lc@gmail.com</a>
<a href=""mailto:fidel.i.ty...i.n.fo..p.lc@gmail.com"">fidel.i.ty...i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:fidelity..i.nfo.pl.c@gmail.com"">fidelity..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:fi.d.el.ity..i.n.f.o..p.l.c@gmail.com"">fi.d.el.ity..i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.ty..inf.o..pl.c@gmail.com"">f.id.eli.ty..inf.o..pl.c@gmail.com</a>
<a href=""mailto:fide.l.i.ty...info..pl.c@gmail.com"">fide.l.i.ty...info..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.el.ity..i.nfo..p.lc@gmail.com"">f.i.d.el.ity..i.nfo..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.e.li.t.y..in.fo..p.l.c@gmail.com"">f.i.d.e.li.t.y..in.fo..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.elity.inf.o.pl.c@gmail.com"">fi.d.elity.inf.o.pl.c@gmail.com</a>
<a href=""mailto:fide.li.ty.i.nf.o.p.lc@gmail.com"">fide.li.ty.i.nf.o.p.lc@gmail.com</a>
<a href=""mailto:fid.el.ity..i.n.f.o.p.lc@gmail.com"">fid.el.ity..i.n.f.o.p.lc@gmail.com</a>
<a href=""mailto:f.id.eli.t.y..i.n.fo..plc@gmail.com"">f.id.eli.t.y..i.n.fo..plc@gmail.com</a>
<a href=""mailto:fi.d.el.it.y..info.pl.c@gmail.com"">fi.d.el.it.y..info.pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.ty.inf.o.pl.c@gmail.com"">fid.e.li.ty.inf.o.pl.c@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y..i.n.fo..p.lc@gmail.com"">f.i.de.li.t.y..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:f.idel.ity..in.fo...plc@gmail.com"">f.idel.ity..in.fo...plc@gmail.com</a>
<a href=""mailto:fi.del.it.y.in.fo.p.lc@gmail.com"">fi.del.it.y.in.fo.p.lc@gmail.com</a>
<a href=""mailto:f.ideli.ty..i.n.fo..p.lc@gmail.com"">f.ideli.ty..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:fide.l.i.ty..i.n.f.o.pl.c@gmail.com"">fide.l.i.ty..i.n.f.o.pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.t.y...i.n.fo.p.lc@gmail.com"">fid.e.li.t.y...i.n.fo.p.lc@gmail.com</a>
<a href=""mailto:fid.elit.y.i.n.fo..plc@gmail.com"">fid.elit.y.i.n.fo..plc@gmail.com</a>
<a href=""mailto:fide.l.ity...i.nfo...p.l.c@gmail.com"">fide.l.ity...i.nfo...p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.l.ity..i.nf.o..p.l.c@gmail.com"">f.i.de.l.ity..i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.i.ty..info...pl.c@gmail.com"">fid.e.l.i.ty..info...pl.c@gmail.com</a>
<a href=""mailto:f.ideli.t.y..i.n.fo..plc@gmail.com"">f.ideli.t.y..i.n.fo..plc@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y.i.n.fo..pl.c@gmail.com"">f.ide.l.i.t.y.i.n.fo..pl.c@gmail.com</a>
<a href=""mailto:fi.de.l.i.ty..i.nfo.p.lc@gmail.com"">fi.de.l.i.ty..i.nfo.p.lc@gmail.com</a>
<a href=""mailto:f.id.el.i.ty.i.n.f.o..pl.c@gmail.com"">f.id.el.i.ty.i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y...in.f.o..p.lc@gmail.com"">f.i.de.li.t.y...in.f.o..p.lc@gmail.com</a>
<a href=""mailto:fide.li.ty..i.n.fo...plc@gmail.com"">fide.li.ty..i.n.fo...plc@gmail.com</a>
<a href=""mailto:fi.de.lity..i.nf.o...p.lc@gmail.com"">fi.de.lity..i.nf.o...p.lc@gmail.com</a>
<a href=""mailto:f.i.d.eli.t.y..i.n.fo..p.l.c@gmail.com"">f.i.d.eli.t.y..i.n.fo..p.l.c@gmail.com</a>
<a href=""mailto:fide.lity...i.n.f.o..p.l.c@gmail.com"">fide.lity...i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.li.ty.i.nfo...p.l.c@gmail.com"">fi.d.e.li.ty.i.nfo...p.l.c@gmail.com</a>
<a href=""mailto:f.ideli.t.y.info..p.lc@gmail.com"">f.ideli.t.y.info..p.lc@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y...i.nfo...plc@gmail.com"">f.i.de.li.t.y...i.nfo...plc@gmail.com</a>
<a href=""mailto:fide.li.ty..i.nfo.pl.c@gmail.com"">fide.li.ty..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:f.i.del.i.ty.info...p.lc@gmail.com"">f.i.del.i.ty.info...p.lc@gmail.com</a>
<a href=""mailto:fidel.i.ty.i.n.fo.p.l.c@gmail.com"">fidel.i.ty.i.n.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.ide.li.ty..info...plc@gmail.com"">f.ide.li.ty..info...plc@gmail.com</a>
<a href=""mailto:fid.elity..info.plc@gmail.com"">fid.elity..info.plc@gmail.com</a>
<a href=""mailto:fi.de.lit.y..in.fo..p.lc@gmail.com"">fi.de.lit.y..in.fo..p.lc@gmail.com</a>
<a href=""mailto:fidelit.y..info..pl.c@gmail.com"">fidelit.y..info..pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.ty.in.fo.pl.c@gmail.com"">fid.e.li.ty.in.fo.pl.c@gmail.com</a>
<a href=""mailto:f.id.e.l.i.ty..inf.o..pl.c@gmail.com"">f.id.e.l.i.ty..inf.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.elity..i.nfo...pl.c@gmail.com"">f.i.d.elity..i.nfo...pl.c@gmail.com</a>
<a href=""mailto:fi.delit.y...i.nfo...pl.c@gmail.com"">fi.delit.y...i.nfo...pl.c@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..i.n.f.o...pl.c@gmail.com"">f.ide.l.i.ty..i.n.f.o...pl.c@gmail.com</a>
<a href=""mailto:f.i.delity.i.nfo...plc@gmail.com"">f.i.delity.i.nfo...plc@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y..i.n.fo..p.lc@gmail.com"">fid.e.l.i.t.y..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.elit.y..i.nf.o..plc@gmail.com"">f.i.d.elit.y..i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.id.e.l.i.ty..in.f.o..plc@gmail.com"">f.id.e.l.i.ty..in.f.o..plc@gmail.com</a>
<a href=""mailto:f.id.elity..in.fo...p.lc@gmail.com"">f.id.elity..in.fo...p.lc@gmail.com</a>
<a href=""mailto:f.id.el.it.y..i.n.f.o..plc@gmail.com"">f.id.el.it.y..i.n.f.o..plc@gmail.com</a>
<a href=""mailto:f.i.de.lity..i.n.f.o...p.l.c@gmail.com"">f.i.de.lity..i.n.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.e.lity..info...plc@gmail.com"">fid.e.lity..info...plc@gmail.com</a>
<a href=""mailto:f.ide.lit.y.in.fo.p.l.c@gmail.com"">f.ide.lit.y.in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.i.d.el.it.y..i.n.f.o..pl.c@gmail.com"">f.i.d.el.it.y..i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.id.el.it.y...inf.o..p.l.c@gmail.com"">f.id.el.it.y...inf.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.de.li.ty...i.nfo..p.l.c@gmail.com"">fi.de.li.ty...i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.ty..info..plc@gmail.com"">f.id.eli.ty..info..plc@gmail.com</a>
<a href=""mailto:fi.d.el.it.y.i.n.f.o.plc@gmail.com"">fi.d.el.it.y.i.n.f.o.plc@gmail.com</a>
<a href=""mailto:fidelit.y.in.f.o...plc@gmail.com"">fidelit.y.in.f.o...plc@gmail.com</a>
<a href=""mailto:f.ide.lit.y..in.fo.p.l.c@gmail.com"">f.ide.lit.y..in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.ideli.t.y...i.nf.o..plc@gmail.com"">f.ideli.t.y...i.nf.o..plc@gmail.com</a>
<a href=""mailto:fi.d.eli.ty.i.n.f.o..pl.c@gmail.com"">fi.d.eli.ty.i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.de.l.i.t.y..i.nf.o..p.lc@gmail.com"">f.i.de.l.i.t.y..i.nf.o..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.el.i.t.y..inf.o.p.lc@gmail.com"">f.i.d.el.i.t.y..inf.o.p.lc@gmail.com</a>
<a href=""mailto:fi.d.elit.y.i.nfo.p.lc@gmail.com"">fi.d.elit.y.i.nfo.p.lc@gmail.com</a>
<a href=""mailto:fideli.ty..in.fo.plc@gmail.com"">fideli.ty..in.fo.plc@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..i.nf.o..plc@gmail.com"">f.ide.l.i.ty..i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.i.d.e.li.t.y.i.nf.o..p.lc@gmail.com"">f.i.d.e.li.t.y.i.nf.o..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.e.lit.y..info..p.lc@gmail.com"">f.i.d.e.lit.y..info..p.lc@gmail.com</a>
<a href=""mailto:fi.delity..i.n.f.o...p.lc@gmail.com"">fi.delity..i.n.f.o...p.lc@gmail.com</a>
<a href=""mailto:fide.l.it.y..in.fo...p.lc@gmail.com"">fide.l.it.y..in.fo...p.lc@gmail.com</a>"
HN8FBiBn,input for Doc,rvdraws,JSON,Friday 3rd of November 2023 12:30:08 AM CDT,"{
   [
        {
            ""memberUuid"": ""23145256346"",
            ""description"": ""some data"",
            ""documentType"": ""PAN""
         
        },
        {
           ""memberUuid"": ""12343235"",
            ""description"": ""abcdef"",
            ""documentType"": ""VOTER_ID""
        }
    ]
}"
sV8aXhH3,secret snowy business updated,coinwalk,JavaScript,Friday 3rd of November 2023 12:02:21 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/80).toFixed(8));
var burp = nudie;
var taget = (smiley*20000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var bilance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux); 
var stuffed = (bolance-smiley);
var manboobs = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)) {
    burp = burp*2
    sexual = parseFloat(bolance);
}else if (burp>=(smiley/17)){
    burp = nudie;
    sexual = 0;
}else if (burp>=(bolance/17)){
    burp = nudie;
    sexual = 0;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
YJXKPs4v,secret snowy business updated,coinwalk,JavaScript,Thursday 2nd of November 2023 11:45:44 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/80).toFixed(8));
var burp = nudie;
var taget = (smiley*20000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var bilance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux); 
var stuffed = (bolance-smiley);
var manboobs = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)) {
    burp = burp*2
    sexual = parseFloat(bolance);
}else if (burp>=(smiley/24)){
    burp = nudie;
    sexual = 0;
}else if (burp>=(bolance/24)){
    burp = nudie;
    sexual = 0;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
reuWfsEB,result,INVINCIBLE202,C,Thursday 2nd of November 2023 10:32:20 PM CDT,"#include <stdio.h>

int main() {
    int marks[5];
    float percentage;
    int last_2_digitID;
    printf(""Enter marks for five subjects:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""Subject %d: "", i + 1);
        scanf(""%d"", &marks[i]);
    }
    printf(""Enter the last 2 digits of your ID: "");
    scanf(""%d"", &last_2_digitID);
    int total_marks = 0;
    for (int i = 0; i < 5; i++) {
        total_marks += marks[i];
    }
    percentage = (float)total_marks / 5;
    char grade;
    if (percentage >= 90 * (last_2_digitID / 100)) {
        grade = 'A';
    } else if (percentage >= 80 * (last_2_digitID / 100)) {
        grade = 'B';
    } else if (percentage >= 70 * (last_2_digitID / 100)) {
        grade = 'C';
    } else if (percentage >= 60 * (last_2_digitID / 100)) {
        grade = 'D';
    } else if (percentage >= 40 * (last_2_digitID / 100)) {
        grade = 'E';
    } else {
        grade = 'F';
    }
    printf(""Percentage: %.2f%%\n"", percentage);
    printf(""Grade: %c\n"", grade);

    return 0;
}
"
bDxvUfkD,Change the WP Page Template to Elementor Canvas with Post ID.,fauzanjeg,PHP,Thursday 2nd of November 2023 10:09:52 PM CDT,"/**
 * Change the WP Page Template to Elementor Canvas with Post ID.
 */
function jkit_change_post_template() {
	/**
	 * Please enter the Post ID you want to change its Page Template to Elementor Canvas.
	 */
	$post_template_id = array( 11, 26 ); /** The Example is 11 and 26 */

	foreach ( $post_template_id as $id ) {
		$page_template = get_post_meta( $id, '_wp_page_template', true );
		$search_key    = 'elementor_';

		if ( strpos( $page_template, $search_key ) === false ) {
			update_post_meta( $id, '_wp_page_template', 'elementor_canvas' );
		}
	}
}
add_action( 'init', 'jkit_change_post_template' );"
R59ADhG9,functions.lua,Ni_Jay_Ni,Lua,Thursday 2nd of November 2023 09:33:59 PM CDT,"-- works like PHP's print_r(), returning the output instead of printing it to STDOUT
-- daniel speakmedia com
--[[ jaywha: added _G for easy Global access in ComputerCraft
-- also removed leading Lua addresses like ""table:4a89a0"" to make it more JSON-esque --]]

function dumpvar(data)
    -- cache of tables already printed, to avoid infinite recursive loops
    local tablecache = {}
    local buffer = """"
    local padder = ""    ""

    local function _dumpvar(d, depth)
        local t = type(d)
        local str = tostring(d)
        if (t == ""table"") then
            if (tablecache[str]) then
                -- table already dumped before, so we dont
                -- dump it again, just mention it
                buffer = buffer..""\n""
            else
                tablecache[str] = (tablecache[str] or 0) + 1
                buffer = buffer..""{\n""
                for k, v in pairs(d) do
                    buffer = buffer..string.rep(padder, depth+1)..""\""""..k..""\"" => ""
                    _dumpvar(v, depth+1)
                end
                buffer = buffer..string.rep(padder, depth)..""}\n""
            end
        elseif (t == ""number"") then
            buffer = buffer..str..""\n""
        else
            buffer = buffer..""\""""..str..""\""\n""
        end
    end
    _dumpvar(data, 0)
    return buffer
end

_G.dumpvar = dumpvar"
8uNKdadu,Time thingy,Royalzombie222,Lua,Thursday 2nd of November 2023 09:20:21 PM CDT,"local peripheral = peripheral.wrap(""top"")

peripheral.write(textutils.formatTime(os.time()).."" ""..os.day(""ingame"").."" Days"")
while true do
    os.sleep(1)
    peripheral.clear()
    peripheral.setCursorPos(1,1)
    peripheral.write(textutils.formatTime(os.time()).."" ""..os.day(""ingame"").."" Days"")
    peripheral.setCursorPos(1,2)
    if os.time() >= 6 and os.time() <18 then
        peripheral.write(""Day"")
    elseif os.time() >= 18 then
        peripheral.write(""Night"")
    elseif os.time() <6 then
        peripheral.write(""Night"")
    end
end"
9dqGNhny,2023-11-02_stats.json,rdp_snitch,JSON,Thursday 2nd of November 2023 07:18:29 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""62.204.41.146"": 18,
    ""111.61.253.55"": 6,
    ""167.94.138.33"": 3,
    ""87.251.75.145"": 9,
    ""198.235.24.81"": 9,
    ""5.181.80.139"": 3,
    ""5.181.80.119"": 18,
    ""66.175.209.48"": 24,
    ""52.39.43.153"": 12,
    ""135.125.247.178"": 6,
    ""13.233.85.4"": 33,
    ""35.77.91.5"": 15,
    ""97.107.140.137"": 18,
    ""187.18.100.143"": 3,
    ""172.233.73.85"": 12,
    ""20.231.76.245"": 117,
    ""212.70.149.146"": 15,
    ""185.170.144.3"": 6,
    ""88.99.235.217"": 6,
    ""87.251.75.120"": 3,
    ""54.68.37.201"": 6,
    ""205.210.31.205"": 9,
    ""203.124.37.152"": 3,
    ""52.13.124.170"": 6,
    ""149.28.87.113"": 3,
    ""152.89.198.133"": 12,
    ""62.122.184.165"": 12,
    ""51.75.160.42"": 18,
    ""83.97.73.77"": 9,
    ""185.36.81.28"": 3,
    ""81.19.135.47"": 9,
    ""152.32.206.247"": 3,
    ""198.235.24.122"": 9,
    ""87.251.75.64"": 3,
    ""43.154.91.97"": 27,
    ""176.113.115.58"": 3,
    ""45.227.254.55"": 6,
    ""172.188.48.214"": 3,
    ""106.116.169.71"": 3,
    ""42.112.31.53"": 3,
    ""45.129.14.208"": 9,
    ""198.235.24.106"": 9,
    ""103.232.53.123"": 12
  },
  ""asn"": {
    ""AS57523"": 48,
    ""AS59425"": 18,
    ""AS24547"": 6,
    ""AS398324"": 3,
    ""AS208091"": 15,
    ""AS396982"": 36,
    ""AS50360"": 21,
    ""AS63949"": 54,
    ""AS16509"": 72,
    ""AS16276"": 24,
    ""AS22689"": 3,
    ""AS8075"": 120,
    ""AS204428"": 15,
    ""AS197414"": 6,
    ""AS24940"": 6,
    ""AS7590"": 3,
    ""AS20473"": 3,
    ""AS208312"": 9,
    ""AS209605"": 3,
    ""AS209588"": 9,
    ""AS135377"": 3,
    ""AS132203"": 27,
    ""AS57678"": 3,
    ""AS267784"": 6,
    ""AS4134"": 3,
    ""AS18403"": 3,
    ""AS198465"": 9,
    ""AS63737"": 12
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 48,
    ""Horizon LLC"": 18,
    ""China Mobile communications corporation"": 6,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions LP"": 21,
    ""Google LLC"": 36,
    ""Tamatiya EOOD"": 21,
    ""Akamai Technologies, Inc."": 54,
    ""Amazon.com, Inc."": 39,
    ""OVH SAS"": 24,
    ""Amazon Technologies Inc."": 33,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 3,
    ""Microsoft Corporation"": 117,
    ""SS-Net"": 15,
    ""Hetzner Online GmbH"": 6,
    ""COMSATS"": 3,
    ""The Constant Company"": 3,
    ""Red Byte LLC"": 9,
    ""SERVEROFFER LT"": 3,
    ""Flyservers S.A."": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 27,
    ""Cat Technologies Co. Limited"": 3,
    ""Microsoft"": 3,
    ""Chinanet"": 3,
    ""Vietnam Internet Network Information Center"": 3,
    ""BtHoster LTD"": 9,
    ""VIETSERVER"": 12
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 36,
    ""Horizon LLC"": 18,
    ""China Mobile"": 6,
    ""Censys, Inc"": 3,
    ""Xhost Internet Solutions"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Tamatiya EOOD"": 21,
    ""Linode"": 42,
    ""AWS EC2 (us-west-2)"": 24,
    ""OVH GmbH"": 6,
    ""AWS EC2 (ap-south-1)"": 33,
    ""AWS EC2 (ap-northeast-1)"": 15,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 3,
    ""Akamai Technologies, Inc."": 12,
    ""Microsoft Azure Cloud (eastus)"": 117,
    ""4Media Ltd"": 15,
    ""Xhostis"": 6,
    ""Hetzner Online GmbH"": 6,
    ""CIS HQ"": 3,
    ""Vultr Holdings, LLC"": 3,
    ""Starcrecium Limited"": 12,
    ""OVH Ltd"": 18,
    ""Red Byte LLC"": 9,
    ""Unknown"": 6,
    ""Alviva Holding Limited"": 9,
    ""Ucloud Information Technology"": 3,
    ""Tencent Cloud Computing"": 27,
    ""Cat Technologies Co. Limited"": 3,
    ""UAB Host Baltic"": 6,
    ""Microsoft Azure Cloud (southeastasia)"": 3,
    ""Chinanet HE"": 3,
    ""BtHoster LTD"": 9,
    ""VietServer Services technology company limited"": 12
  },
  ""regionName"": {
    ""Moscow"": 78,
    ""Hebei"": 9,
    ""Michigan"": 3,
    ""North Holland"": 21,
    ""California"": 39,
    ""Plovdiv"": 36,
    ""New Jersey"": 42,
    ""Oregon"": 24,
    ""Hesse"": 6,
    ""Maharashtra"": 33,
    ""Tokyo"": 15,
    ""Parana"": 3,
    ""\u014csaka"": 12,
    ""Virginia"": 120,
    ""Saxony"": 6,
    ""Punjab"": 3,
    ""England"": 27,
    ""Kaunas"": 3,
    ""Sverdlovsk Oblast"": 9,
    ""Central and Western District"": 27,
    ""Vilnius"": 6,
    ""Central Singapore"": 3,
    ""Hanoi"": 15
  },
  ""country"": {
    ""Russia"": 87,
    ""China"": 9,
    ""United States"": 228,
    ""Netherlands"": 21,
    ""Bulgaria"": 36,
    ""Germany"": 12,
    ""India"": 33,
    ""Japan"": 27,
    ""Brazil"": 3,
    ""Pakistan"": 3,
    ""United Kingdom"": 27,
    ""Lithuania"": 9,
    ""Hong Kong"": 27,
    ""Singapore"": 3,
    ""Vietnam"": 15
  },
  ""account"": {
    ""Domain"": 78,
    ""Test"": 30,
    ""(empty)"": 12,
    ""Administr"": 48,
    ""xeurlzXkH"": 3,
    ""RlJhwP"": 3,
    ""tAxtXP"": 3,
    ""hello"": 183,
    ""142.93.8.59"": 150,
    ""YgKMwUvzA"": 3,
    ""mqWbdP"": 3,
    ""WXrrwK"": 3,
    ""Administrator"": 3,
    ""codSKEseN"": 3,
    ""MBqCpV"": 3,
    ""WDZxTd"": 3,
    ""njwzNGRaw"": 3,
    ""JxObrq"": 3,
    ""scRhnd"": 3
  },
  ""keyboard"": {
    ""Unknown"": 540
  },
  ""client_build"": {
    ""Unknown"": 540
  },
  ""client_name"": {
    ""Unknown"": 540
  },
  ""ip_type"": {
    ""Unknown"": 156,
    ""mobile"": 6,
    ""hosting"": 366,
    ""proxy"": 12
  }
}"
AfSS8nAF,2023-11-02_stats.json,rdp_snitch,JSON,Thursday 2nd of November 2023 07:16:15 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""62.204.41.146"": 12,
    ""111.61.253.55"": 4,
    ""167.94.138.33"": 2,
    ""87.251.75.145"": 6,
    ""198.235.24.81"": 6,
    ""5.181.80.139"": 2,
    ""5.181.80.119"": 12,
    ""66.175.209.48"": 16,
    ""52.39.43.153"": 8,
    ""135.125.247.178"": 4,
    ""13.233.85.4"": 22,
    ""35.77.91.5"": 10,
    ""97.107.140.137"": 12,
    ""187.18.100.143"": 2,
    ""172.233.73.85"": 8,
    ""20.231.76.245"": 78,
    ""212.70.149.146"": 10,
    ""185.170.144.3"": 4,
    ""88.99.235.217"": 4,
    ""87.251.75.120"": 2,
    ""54.68.37.201"": 4,
    ""205.210.31.205"": 6,
    ""203.124.37.152"": 2,
    ""52.13.124.170"": 4,
    ""149.28.87.113"": 2,
    ""152.89.198.133"": 8,
    ""62.122.184.165"": 8,
    ""51.75.160.42"": 12,
    ""83.97.73.77"": 6,
    ""185.36.81.28"": 2,
    ""81.19.135.47"": 6,
    ""152.32.206.247"": 2,
    ""198.235.24.122"": 6,
    ""87.251.75.64"": 2,
    ""43.154.91.97"": 18,
    ""176.113.115.58"": 2,
    ""45.227.254.55"": 4,
    ""172.188.48.214"": 2,
    ""106.116.169.71"": 2,
    ""42.112.31.53"": 2,
    ""45.129.14.208"": 6,
    ""198.235.24.106"": 6,
    ""103.232.53.123"": 8
  },
  ""asn"": {
    ""AS57523"": 32,
    ""AS59425"": 12,
    ""AS24547"": 4,
    ""AS398324"": 2,
    ""AS208091"": 10,
    ""AS396982"": 24,
    ""AS50360"": 14,
    ""AS63949"": 36,
    ""AS16509"": 48,
    ""AS16276"": 16,
    ""AS22689"": 2,
    ""AS8075"": 80,
    ""AS204428"": 10,
    ""AS197414"": 4,
    ""AS24940"": 4,
    ""AS7590"": 2,
    ""AS20473"": 2,
    ""AS208312"": 6,
    ""AS209605"": 2,
    ""AS209588"": 6,
    ""AS135377"": 2,
    ""AS132203"": 18,
    ""AS57678"": 2,
    ""AS267784"": 4,
    ""AS4134"": 2,
    ""AS18403"": 2,
    ""AS198465"": 6,
    ""AS63737"": 8
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 32,
    ""Horizon LLC"": 12,
    ""China Mobile communications corporation"": 4,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions LP"": 14,
    ""Google LLC"": 24,
    ""Tamatiya EOOD"": 14,
    ""Akamai Technologies, Inc."": 36,
    ""Amazon.com, Inc."": 26,
    ""OVH SAS"": 16,
    ""Amazon Technologies Inc."": 22,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 2,
    ""Microsoft Corporation"": 78,
    ""SS-Net"": 10,
    ""Hetzner Online GmbH"": 4,
    ""COMSATS"": 2,
    ""The Constant Company"": 2,
    ""Red Byte LLC"": 6,
    ""SERVEROFFER LT"": 2,
    ""Flyservers S.A."": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 18,
    ""Cat Technologies Co. Limited"": 2,
    ""Microsoft"": 2,
    ""Chinanet"": 2,
    ""Vietnam Internet Network Information Center"": 2,
    ""BtHoster LTD"": 6,
    ""VIETSERVER"": 8
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 24,
    ""Horizon LLC"": 12,
    ""China Mobile"": 4,
    ""Censys, Inc"": 2,
    ""Xhost Internet Solutions"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Tamatiya EOOD"": 14,
    ""Linode"": 28,
    ""AWS EC2 (us-west-2)"": 16,
    ""OVH GmbH"": 4,
    ""AWS EC2 (ap-south-1)"": 22,
    ""AWS EC2 (ap-northeast-1)"": 10,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 2,
    ""Akamai Technologies, Inc."": 8,
    ""Microsoft Azure Cloud (eastus)"": 78,
    ""4Media Ltd"": 10,
    ""Xhostis"": 4,
    ""Hetzner Online GmbH"": 4,
    ""CIS HQ"": 2,
    ""Vultr Holdings, LLC"": 2,
    ""Starcrecium Limited"": 8,
    ""OVH Ltd"": 12,
    ""Red Byte LLC"": 6,
    ""Unknown"": 4,
    ""Alviva Holding Limited"": 6,
    ""Ucloud Information Technology"": 2,
    ""Tencent Cloud Computing"": 18,
    ""Cat Technologies Co. Limited"": 2,
    ""UAB Host Baltic"": 4,
    ""Microsoft Azure Cloud (southeastasia)"": 2,
    ""Chinanet HE"": 2,
    ""BtHoster LTD"": 6,
    ""VietServer Services technology company limited"": 8
  },
  ""regionName"": {
    ""Moscow"": 52,
    ""Hebei"": 6,
    ""Michigan"": 2,
    ""North Holland"": 14,
    ""California"": 26,
    ""Plovdiv"": 24,
    ""New Jersey"": 28,
    ""Oregon"": 16,
    ""Hesse"": 4,
    ""Maharashtra"": 22,
    ""Tokyo"": 10,
    ""Parana"": 2,
    ""\u014csaka"": 8,
    ""Virginia"": 80,
    ""Saxony"": 4,
    ""Punjab"": 2,
    ""England"": 18,
    ""Kaunas"": 2,
    ""Sverdlovsk Oblast"": 6,
    ""Central and Western District"": 18,
    ""Vilnius"": 4,
    ""Central Singapore"": 2,
    ""Hanoi"": 10
  },
  ""country"": {
    ""Russia"": 58,
    ""China"": 6,
    ""United States"": 152,
    ""Netherlands"": 14,
    ""Bulgaria"": 24,
    ""Germany"": 8,
    ""India"": 22,
    ""Japan"": 18,
    ""Brazil"": 2,
    ""Pakistan"": 2,
    ""United Kingdom"": 18,
    ""Lithuania"": 6,
    ""Hong Kong"": 18,
    ""Singapore"": 2,
    ""Vietnam"": 10
  },
  ""account"": {
    ""Domain"": 52,
    ""Test"": 20,
    ""(empty)"": 8,
    ""Administr"": 32,
    ""xeurlzXkH"": 2,
    ""RlJhwP"": 2,
    ""tAxtXP"": 2,
    ""hello"": 122,
    ""142.93.8.59"": 100,
    ""YgKMwUvzA"": 2,
    ""mqWbdP"": 2,
    ""WXrrwK"": 2,
    ""Administrator"": 2,
    ""codSKEseN"": 2,
    ""MBqCpV"": 2,
    ""WDZxTd"": 2,
    ""njwzNGRaw"": 2,
    ""JxObrq"": 2,
    ""scRhnd"": 2
  },
  ""keyboard"": {
    ""Unknown"": 360
  },
  ""client_build"": {
    ""Unknown"": 360
  },
  ""client_name"": {
    ""Unknown"": 360
  },
  ""ip_type"": {
    ""Unknown"": 104,
    ""mobile"": 4,
    ""hosting"": 244,
    ""proxy"": 8
  }
}"
1PJjkxbL,2023-11-02_stats.json,rdp_snitch,JSON,Thursday 2nd of November 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""62.204.41.146"": 6,
    ""111.61.253.55"": 2,
    ""167.94.138.33"": 1,
    ""87.251.75.145"": 3,
    ""198.235.24.81"": 3,
    ""5.181.80.139"": 1,
    ""5.181.80.119"": 6,
    ""66.175.209.48"": 8,
    ""52.39.43.153"": 4,
    ""135.125.247.178"": 2,
    ""13.233.85.4"": 11,
    ""35.77.91.5"": 5,
    ""97.107.140.137"": 6,
    ""187.18.100.143"": 1,
    ""172.233.73.85"": 4,
    ""20.231.76.245"": 39,
    ""212.70.149.146"": 5,
    ""185.170.144.3"": 2,
    ""88.99.235.217"": 2,
    ""87.251.75.120"": 1,
    ""54.68.37.201"": 2,
    ""205.210.31.205"": 3,
    ""203.124.37.152"": 1,
    ""52.13.124.170"": 2,
    ""149.28.87.113"": 1,
    ""152.89.198.133"": 4,
    ""62.122.184.165"": 4,
    ""51.75.160.42"": 6,
    ""83.97.73.77"": 3,
    ""185.36.81.28"": 1,
    ""81.19.135.47"": 3,
    ""152.32.206.247"": 1,
    ""198.235.24.122"": 3,
    ""87.251.75.64"": 1,
    ""43.154.91.97"": 9,
    ""176.113.115.58"": 1,
    ""45.227.254.55"": 2,
    ""172.188.48.214"": 1,
    ""106.116.169.71"": 1,
    ""42.112.31.53"": 1,
    ""45.129.14.208"": 3,
    ""198.235.24.106"": 3,
    ""103.232.53.123"": 4
  },
  ""asn"": {
    ""AS57523"": 16,
    ""AS59425"": 6,
    ""AS24547"": 2,
    ""AS398324"": 1,
    ""AS208091"": 5,
    ""AS396982"": 12,
    ""AS50360"": 7,
    ""AS63949"": 18,
    ""AS16509"": 24,
    ""AS16276"": 8,
    ""AS22689"": 1,
    ""AS8075"": 40,
    ""AS204428"": 5,
    ""AS197414"": 2,
    ""AS24940"": 2,
    ""AS7590"": 1,
    ""AS20473"": 1,
    ""AS208312"": 3,
    ""AS209605"": 1,
    ""AS209588"": 3,
    ""AS135377"": 1,
    ""AS132203"": 9,
    ""AS57678"": 1,
    ""AS267784"": 2,
    ""AS4134"": 1,
    ""AS18403"": 1,
    ""AS198465"": 3,
    ""AS63737"": 4
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 16,
    ""Horizon LLC"": 6,
    ""China Mobile communications corporation"": 2,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions LP"": 7,
    ""Google LLC"": 12,
    ""Tamatiya EOOD"": 7,
    ""Akamai Technologies, Inc."": 18,
    ""Amazon.com, Inc."": 13,
    ""OVH SAS"": 8,
    ""Amazon Technologies Inc."": 11,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 1,
    ""Microsoft Corporation"": 39,
    ""SS-Net"": 5,
    ""Hetzner Online GmbH"": 2,
    ""COMSATS"": 1,
    ""The Constant Company"": 1,
    ""Red Byte LLC"": 3,
    ""SERVEROFFER LT"": 1,
    ""Flyservers S.A."": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 9,
    ""Cat Technologies Co. Limited"": 1,
    ""Microsoft"": 1,
    ""Chinanet"": 1,
    ""Vietnam Internet Network Information Center"": 1,
    ""BtHoster LTD"": 3,
    ""VIETSERVER"": 4
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 12,
    ""Horizon LLC"": 6,
    ""China Mobile"": 2,
    ""Censys, Inc"": 1,
    ""Xhost Internet Solutions"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Tamatiya EOOD"": 7,
    ""Linode"": 14,
    ""AWS EC2 (us-west-2)"": 8,
    ""OVH GmbH"": 2,
    ""AWS EC2 (ap-south-1)"": 11,
    ""AWS EC2 (ap-northeast-1)"": 5,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 1,
    ""Akamai Technologies, Inc."": 4,
    ""Microsoft Azure Cloud (eastus)"": 39,
    ""4Media Ltd"": 5,
    ""Xhostis"": 2,
    ""Hetzner Online GmbH"": 2,
    ""CIS HQ"": 1,
    ""Vultr Holdings, LLC"": 1,
    ""Starcrecium Limited"": 4,
    ""OVH Ltd"": 6,
    ""Red Byte LLC"": 3,
    ""Unknown"": 2,
    ""Alviva Holding Limited"": 3,
    ""Ucloud Information Technology"": 1,
    ""Tencent Cloud Computing"": 9,
    ""Cat Technologies Co. Limited"": 1,
    ""UAB Host Baltic"": 2,
    ""Microsoft Azure Cloud (southeastasia)"": 1,
    ""Chinanet HE"": 1,
    ""BtHoster LTD"": 3,
    ""VietServer Services technology company limited"": 4
  },
  ""regionName"": {
    ""Moscow"": 26,
    ""Hebei"": 3,
    ""Michigan"": 1,
    ""North Holland"": 7,
    ""California"": 13,
    ""Plovdiv"": 12,
    ""New Jersey"": 14,
    ""Oregon"": 8,
    ""Hesse"": 2,
    ""Maharashtra"": 11,
    ""Tokyo"": 5,
    ""Parana"": 1,
    ""\u014csaka"": 4,
    ""Virginia"": 40,
    ""Saxony"": 2,
    ""Punjab"": 1,
    ""England"": 9,
    ""Kaunas"": 1,
    ""Sverdlovsk Oblast"": 3,
    ""Central and Western District"": 9,
    ""Vilnius"": 2,
    ""Central Singapore"": 1,
    ""Hanoi"": 5
  },
  ""country"": {
    ""Russia"": 29,
    ""China"": 3,
    ""United States"": 76,
    ""Netherlands"": 7,
    ""Bulgaria"": 12,
    ""Germany"": 4,
    ""India"": 11,
    ""Japan"": 9,
    ""Brazil"": 1,
    ""Pakistan"": 1,
    ""United Kingdom"": 9,
    ""Lithuania"": 3,
    ""Hong Kong"": 9,
    ""Singapore"": 1,
    ""Vietnam"": 5
  },
  ""account"": {
    ""Domain"": 26,
    ""Test"": 10,
    ""(empty)"": 4,
    ""Administr"": 16,
    ""xeurlzXkH"": 1,
    ""RlJhwP"": 1,
    ""tAxtXP"": 1,
    ""hello"": 61,
    ""142.93.8.59"": 50,
    ""YgKMwUvzA"": 1,
    ""mqWbdP"": 1,
    ""WXrrwK"": 1,
    ""Administrator"": 1,
    ""codSKEseN"": 1,
    ""MBqCpV"": 1,
    ""WDZxTd"": 1,
    ""njwzNGRaw"": 1,
    ""JxObrq"": 1,
    ""scRhnd"": 1
  },
  ""keyboard"": {
    ""Unknown"": 180
  },
  ""client_build"": {
    ""Unknown"": 180
  },
  ""client_name"": {
    ""Unknown"": 180
  },
  ""ip_type"": {
    ""Unknown"": 52,
    ""mobile"": 2,
    ""hosting"": 122,
    ""proxy"": 4
  }
}"
mdZp1331,Find Missing And Repeating,jayati,C++,Thursday 2nd of November 2023 06:56:06 PM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

// } Driver Code Ends
class Solution{
public:
    vector<int> findTwoElement(vector<int> arr, int n) {
        // code here
        int ans=-1,ans1=-1;
       
        
        int a[n+1]={0};
        for(int i=0;i<arr.size();i++)
        {
            a[arr[i]]+=1;
        }
        for(int i=1;i<=n;i++)
        {
            if(a[i]==0)
            {
                if(ans!=-1)
                {
                    continue;
                }
                ans=i;
            }
            if(a[i]==2)
            {
                if(ans1!=-1)
                {
                    continue;
                }
                ans1=i;
            }
            if(ans!=-1 && ans1!=-1)
            {
                break;
            }
        }
        return {ans1,ans};
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }
        Solution ob;
        auto ans = ob.findTwoElement(a, n);
        cout << ans[0] << "" "" << ans[1] << ""\n"";
    }
    return 0;
}
// } Driver Code Ends"
cJi8vtxK,Untitled,35657,C++,Thursday 2nd of November 2023 06:49:10 PM CDT,"
//Лилия а зачем здесь названия комнат???
//Это математическая задачка, здесь нужны только параметы комнат, а также размеры и цена обоев.




#include <iostream>
#include <iomanip>
#include <conio.h>

using namespace std;


class Room {
public:

    Room() : room_length_(0), room_width_(0), room_height_(0), ceiling_(0) {};


    void SetRoom(double lenght, double width, double height, bool ceiling) {
        room_length_ = lenght;
        room_width_ = width;
        room_height_ = height;
        ceiling_ = ceiling;
    }

    double room_length_; //длинна
    double room_width_; // ширина
    double room_height_; // высота
    bool ceiling_; // здесь подойдет bool (0 - не оклеивать, 1 - оклеивать)
};


class Wallpaper {
public:
    Wallpaper() : wallpaper_name_(""""), wallpaper_length_(0), wallpaper_width_(0), price_roll_(0) {};
    Wallpaper(const char* name, const double wallpaper_length, const double wallpaper_width, double price_roll) : wallpaper_name_(name), wallpaper_length_(wallpaper_length), wallpaper_width_(wallpaper_width), price_roll_(price_roll) {};

    const char* wallpaper_name_; // название обоев
    double wallpaper_length_; //длинна обоев в рулоне
    double wallpaper_width_; //ширина обоев в рулоне
    double price_roll_; // стоимость рулона обоев



};

class Flat {
public:

    Flat(const int new_rooms_count) : rooms_count_(new_rooms_count), rooms_(new Room[new_rooms_count]) {}; // параметризованный конструктор, параметр - количество комнат в квартире


    int rooms_count_;// количество комнат в квартире
    Room* rooms_; // массив комнат (массив комнат а не названий комнат!!!)
    



    ~Flat() {
        delete[]  rooms_;
    }

};




int main() {
    setlocale(LC_ALL, ""Russian"");

    // здесь запрашиваем количество комнат, создаем Flat под заданное количество комнат, потом циклом запрашиваем параметры комнат и записываем эти параметры в каждую комнату с помощью SetRoom

    // потом запрашиваем параметры обоев (можно сделать только с одним видом обоев, рассчитать все под него)

    // ну и можно например посчитать площадь всех стен в комнатах квартиры, площадь одного рулона обоев, и исходя из этого количество обоев и их общую стоимость (необходимые для расчета методы можете добавить сами



}"
YKURP8Pu,Untitled,bombaires,AIMMS,Thursday 2nd of November 2023 06:44:56 PM CDT,"<a href=""mailto:visionthomasmark@skiff.com"">visionthomasmark@skiff.com</a>
<a href=""mailto:infofed178@gmail.com"">infofed178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d1.7.8@gmail.com"">i.nf.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:infofe.d17.8@gmail.com"">infofe.d17.8@gmail.com</a>
<a href=""mailto:i.nf.ofe.d178@gmail.com"">i.nf.ofe.d178@gmail.com</a>
<a href=""mailto:inf.of.e.d1.7.8@gmail.com"">inf.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:in.fof.ed17.8@gmail.com"">in.fof.ed17.8@gmail.com</a>
<a href=""mailto:i.n.fofe.d17.8@gmail.com"">i.n.fofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d178@gmail.com"">i.n.fo.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d.1.78@gmail.com"">i.nf.o.fe.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fofed.1.7.8@gmail.com"">i.n.fofed.1.7.8@gmail.com</a>
<a href=""mailto:in.fof.e.d17.8@gmail.com"">in.fof.e.d17.8@gmail.com</a>
<a href=""mailto:in.f.o.fed17.8@gmail.com"">in.f.o.fed17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d17.8@gmail.com"">i.nf.of.e.d17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.1.78@gmail.com"">i.nf.of.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nf.of.e.d178@gmail.com"">i.nf.of.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed178@gmail.com"">i.n.f.o.f.ed178@gmail.com</a>
<a href=""mailto:in.fofed178@gmail.com"">in.fofed178@gmail.com</a>
<a href=""mailto:i.n.f.o.fe.d.17.8@gmail.com"">i.n.f.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed.1.78@gmail.com"">i.n.fof.ed.1.78@gmail.com</a>
<a href=""mailto:infof.ed.178@gmail.com"">infof.ed.178@gmail.com</a>
<a href=""mailto:in.f.o.f.e.d.17.8@gmail.com"">in.f.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:in.f.of.ed.178@gmail.com"">in.f.of.ed.178@gmail.com</a>
<a href=""mailto:in.fofe.d178@gmail.com"">in.fofe.d178@gmail.com</a>
<a href=""mailto:infofed1.7.8@gmail.com"">infofed1.7.8@gmail.com</a>
<a href=""mailto:infof.e.d.1.7.8@gmail.com"">infof.e.d.1.7.8@gmail.com</a>
<a href=""mailto:in.fo.f.e.d.1.78@gmail.com"">in.fo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d.1.7.8@gmail.com"">i.n.fo.fe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fed.1.7.8@gmail.com"">i.n.f.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:in.f.of.e.d178@gmail.com"">in.f.of.e.d178@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d1.78@gmail.com"">i.nfo.f.e.d1.78@gmail.com</a>
<a href=""mailto:in.f.ofe.d.1.78@gmail.com"">in.f.ofe.d.1.78@gmail.com</a>
<a href=""mailto:in.f.o.fe.d178@gmail.com"">in.f.o.fe.d178@gmail.com</a>
<a href=""mailto:info.fe.d.178@gmail.com"">info.fe.d.178@gmail.com</a>
<a href=""mailto:info.f.e.d.178@gmail.com"">info.f.e.d.178@gmail.com</a>
<a href=""mailto:infof.e.d.17.8@gmail.com"">infof.e.d.17.8@gmail.com</a>
<a href=""mailto:in.fof.e.d178@gmail.com"">in.fof.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed.17.8@gmail.com"">i.n.f.o.f.ed.17.8@gmail.com</a>
<a href=""mailto:in.f.o.fed.1.78@gmail.com"">in.f.o.fed.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d.178@gmail.com"">i.nf.o.fe.d.178@gmail.com</a>
<a href=""mailto:in.f.o.f.ed.1.78@gmail.com"">in.f.o.f.ed.1.78@gmail.com</a>
<a href=""mailto:inf.o.f.e.d1.7.8@gmail.com"">inf.o.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.178@gmail.com"">i.nfo.f.e.d.178@gmail.com</a>
<a href=""mailto:i.n.f.of.ed.1.78@gmail.com"">i.n.f.of.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.fof.ed1.78@gmail.com"">i.n.fof.ed1.78@gmail.com</a>
<a href=""mailto:in.fo.fe.d.17.8@gmail.com"">in.fo.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.f.o.fe.d.17.8@gmail.com"">in.f.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:info.fe.d.17.8@gmail.com"">info.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.fof.e.d.1.7.8@gmail.com"">in.fof.e.d.1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.1.78@gmail.com"">i.nfo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:in.f.ofed.1.7.8@gmail.com"">in.f.ofed.1.7.8@gmail.com</a>
<a href=""mailto:inf.ofe.d17.8@gmail.com"">inf.ofe.d17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.17.8@gmail.com"">i.nf.of.e.d.17.8@gmail.com</a>
<a href=""mailto:in.fofe.d.1.7.8@gmail.com"">in.fofe.d.1.7.8@gmail.com</a>
<a href=""mailto:in.fo.fed.17.8@gmail.com"">in.fo.fed.17.8@gmail.com</a>
<a href=""mailto:inf.ofe.d1.78@gmail.com"">inf.ofe.d1.78@gmail.com</a>
<a href=""mailto:in.f.o.fe.d.178@gmail.com"">in.f.o.fe.d.178@gmail.com</a>
<a href=""mailto:infof.ed.17.8@gmail.com"">infof.ed.17.8@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d.17.8@gmail.com"">i.n.f.of.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed.178@gmail.com"">i.n.fof.ed.178@gmail.com</a>
<a href=""mailto:infof.e.d178@gmail.com"">infof.e.d178@gmail.com</a>
<a href=""mailto:inf.ofed.178@gmail.com"">inf.ofed.178@gmail.com</a>
<a href=""mailto:inf.ofed.1.7.8@gmail.com"">inf.ofed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed.178@gmail.com"">i.n.fo.f.ed.178@gmail.com</a>
<a href=""mailto:inf.o.fe.d.17.8@gmail.com"">inf.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.f.o.f.e.d.178@gmail.com"">in.f.o.f.e.d.178@gmail.com</a>
<a href=""mailto:inf.o.f.e.d.1.7.8@gmail.com"">inf.o.f.e.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d17.8@gmail.com"">i.n.f.of.e.d17.8@gmail.com</a>
<a href=""mailto:infofe.d.1.78@gmail.com"">infofe.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fofe.d1.7.8@gmail.com"">i.n.fofe.d1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofed178@gmail.com"">in.f.ofed178@gmail.com</a>
<a href=""mailto:i.nfofed1.78@gmail.com"">i.nfofed1.78@gmail.com</a>
<a href=""mailto:in.fo.fed1.7.8@gmail.com"">in.fo.fed1.7.8@gmail.com</a>
<a href=""mailto:in.fof.e.d.1.78@gmail.com"">in.fof.e.d.1.78@gmail.com</a>
<a href=""mailto:in.f.of.ed17.8@gmail.com"">in.f.of.ed17.8@gmail.com</a>
<a href=""mailto:i.nfof.e.d1.7.8@gmail.com"">i.nfof.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d17.8@gmail.com"">i.nf.o.fe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fofe.d.1.7.8@gmail.com"">i.n.fofe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fed1.78@gmail.com"">i.n.f.o.fed1.78@gmail.com</a>
<a href=""mailto:in.fo.f.ed.17.8@gmail.com"">in.fo.f.ed.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed1.78@gmail.com"">i.n.fo.f.ed1.78@gmail.com</a>
<a href=""mailto:i.nfof.e.d.17.8@gmail.com"">i.nfof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.f.ofe.d1.7.8@gmail.com"">i.n.f.ofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.ofed1.7.8@gmail.com"">i.nf.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofe.d.17.8@gmail.com"">in.f.ofe.d.17.8@gmail.com</a>
<a href=""mailto:i.nfo.fed178@gmail.com"">i.nfo.fed178@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d1.7.8@gmail.com"">i.n.fo.fe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.1.78@gmail.com"">i.nf.o.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d.1.78@gmail.com"">i.n.fo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:inf.of.e.d178@gmail.com"">inf.of.e.d178@gmail.com</a>
<a href=""mailto:infofed178@gmail.com"">infofed178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d.1.78@gmail.com"">i.n.f.o.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.ed178@gmail.com"">i.nf.o.f.ed178@gmail.com</a>
<a href=""mailto:i.n.fofed178@gmail.com"">i.n.fofed178@gmail.com</a>
<a href=""mailto:i.n.fof.e.d.17.8@gmail.com"">i.n.fof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d1.78@gmail.com"">i.nfofe.d1.78@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed.17.8@gmail.com"">i.n.fo.f.ed.17.8@gmail.com</a>
<a href=""mailto:in.fofe.d.17.8@gmail.com"">in.fofe.d.17.8@gmail.com</a>
<a href=""mailto:i.nfo.fed.1.7.8@gmail.com"">i.nfo.fed.1.7.8@gmail.com</a>
<a href=""mailto:i.nf.ofe.d17.8@gmail.com"">i.nf.ofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed1.7.8@gmail.com"">i.n.fof.ed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.fe.d.17.8@gmail.com"">i.nfo.fe.d.17.8@gmail.com</a>
<a href=""mailto:info.f.ed17.8@gmail.com"">info.f.ed17.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.17.8@gmail.com"">i.nfo.f.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d1.7.8@gmail.com"">i.n.fo.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofed1.7.8@gmail.com"">i.nfofed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d1.7.8@gmail.com"">i.nfo.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fofed.1.78@gmail.com"">i.n.fofed.1.78@gmail.com</a>
<a href=""mailto:info.fed1.7.8@gmail.com"">info.fed1.7.8@gmail.com</a>
<a href=""mailto:i.nfof.ed.178@gmail.com"">i.nfof.ed.178@gmail.com</a>
<a href=""mailto:in.fof.e.d.17.8@gmail.com"">in.fof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d178@gmail.com"">i.n.fof.e.d178@gmail.com</a>
<a href=""mailto:inf.of.ed17.8@gmail.com"">inf.of.ed17.8@gmail.com</a>
<a href=""mailto:inf.ofed178@gmail.com"">inf.ofed178@gmail.com</a>
<a href=""mailto:i.nf.ofe.d1.7.8@gmail.com"">i.nf.ofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofe.d178@gmail.com"">i.nfofe.d178@gmail.com</a>
<a href=""mailto:i.n.f.ofe.d1.78@gmail.com"">i.n.f.ofe.d1.78@gmail.com</a>
<a href=""mailto:inf.o.fe.d178@gmail.com"">inf.o.fe.d178@gmail.com</a>
<a href=""mailto:i.n.fofed.178@gmail.com"">i.n.fofed.178@gmail.com</a>
<a href=""mailto:info.f.e.d1.7.8@gmail.com"">info.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofe.d.1.7.8@gmail.com"">i.nfofe.d.1.7.8@gmail.com</a>
<a href=""mailto:in.f.o.fed.178@gmail.com"">in.f.o.fed.178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d1.78@gmail.com"">i.nf.of.e.d1.78@gmail.com</a>
<a href=""mailto:inf.of.ed1.78@gmail.com"">inf.of.ed1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fed.1.7.8@gmail.com"">i.nf.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.ofed17.8@gmail.com"">i.n.f.ofed17.8@gmail.com</a>
<a href=""mailto:inf.of.e.d17.8@gmail.com"">inf.of.e.d17.8@gmail.com</a>
<a href=""mailto:i.nfofed.178@gmail.com"">i.nfofed.178@gmail.com</a>
<a href=""mailto:inf.of.e.d1.78@gmail.com"">inf.of.e.d1.78@gmail.com</a>
<a href=""mailto:info.fe.d1.7.8@gmail.com"">info.fe.d1.7.8@gmail.com</a>
<a href=""mailto:in.f.of.e.d1.7.8@gmail.com"">in.f.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.of.ed.17.8@gmail.com"">i.n.f.of.ed.17.8@gmail.com</a>
<a href=""mailto:in.fo.f.ed1.78@gmail.com"">in.fo.f.ed1.78@gmail.com</a>
<a href=""mailto:inf.o.fe.d1.78@gmail.com"">inf.o.fe.d1.78@gmail.com</a>
<a href=""mailto:infofe.d1.7.8@gmail.com"">infofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d1.7.8@gmail.com"">i.n.fof.e.d1.7.8@gmail.com</a>
<a href=""mailto:in.fof.ed.1.78@gmail.com"">in.fof.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.f.ofed.17.8@gmail.com"">i.n.f.ofed.17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d.17.8@gmail.com"">i.nfofe.d.17.8@gmail.com</a>
<a href=""mailto:infofe.d178@gmail.com"">infofe.d178@gmail.com</a>
<a href=""mailto:infof.ed.1.78@gmail.com"">infof.ed.1.78@gmail.com</a>
<a href=""mailto:inf.ofed1.78@gmail.com"">inf.ofed1.78@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed17.8@gmail.com"">i.n.f.o.f.ed17.8@gmail.com</a>
<a href=""mailto:i.nfo.fe.d.1.78@gmail.com"">i.nfo.fe.d.1.78@gmail.com</a>
<a href=""mailto:i.nfo.fed.1.78@gmail.com"">i.nfo.fed.1.78@gmail.com</a>
<a href=""mailto:i.nfof.ed.1.78@gmail.com"">i.nfof.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d178@gmail.com"">i.n.f.o.f.e.d178@gmail.com</a>
<a href=""mailto:in.fof.ed.178@gmail.com"">in.fof.ed.178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d1.7.8@gmail.com"">i.n.f.o.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d.1.78@gmail.com"">i.n.fof.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nfo.f.ed.178@gmail.com"">i.nfo.f.ed.178@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed1.7.8@gmail.com"">i.n.fo.f.ed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.ed.1.7.8@gmail.com"">i.nfo.f.ed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d17.8@gmail.com"">i.n.fo.f.e.d17.8@gmail.com</a>
<a href=""mailto:info.f.ed178@gmail.com"">info.f.ed178@gmail.com</a>
<a href=""mailto:in.fofe.d17.8@gmail.com"">in.fofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.f.ofed1.78@gmail.com"">i.n.f.ofed1.78@gmail.com</a>
<a href=""mailto:i.n.fof.ed.17.8@gmail.com"">i.n.fof.ed.17.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d178@gmail.com"">i.nfo.f.e.d178@gmail.com</a>
<a href=""mailto:i.nfof.ed17.8@gmail.com"">i.nfof.ed17.8@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed1.78@gmail.com"">i.n.f.o.f.ed1.78@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d178@gmail.com"">i.n.f.of.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.fed.17.8@gmail.com"">i.n.f.o.fed.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fed.1.7.8@gmail.com"">i.n.fo.fed.1.7.8@gmail.com</a>
<a href=""mailto:info.fed.178@gmail.com"">info.fed.178@gmail.com</a>
<a href=""mailto:i.nf.ofed.1.7.8@gmail.com"">i.nf.ofed.1.7.8@gmail.com</a>
<a href=""mailto:i.nfof.ed.1.7.8@gmail.com"">i.nfof.ed.1.7.8@gmail.com</a>
<a href=""mailto:infof.ed1.7.8@gmail.com"">infof.ed1.7.8@gmail.com</a>
<a href=""mailto:info.f.ed.1.78@gmail.com"">info.f.ed.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d178@gmail.com"">i.nf.o.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.178@gmail.com"">i.nf.of.e.d.178@gmail.com</a>
<a href=""mailto:i.nf.ofed17.8@gmail.com"">i.nf.ofed17.8@gmail.com</a>
<a href=""mailto:inf.o.fed.1.7.8@gmail.com"">inf.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:info.fe.d17.8@gmail.com"">info.fe.d17.8@gmail.com</a>
<a href=""mailto:in.fo.fe.d178@gmail.com"">in.fo.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.ofe.d.178@gmail.com"">i.nf.ofe.d.178@gmail.com</a>
<a href=""mailto:in.f.of.ed.17.8@gmail.com"">in.f.of.ed.17.8@gmail.com</a>
<a href=""mailto:info.f.ed1.78@gmail.com"">info.f.ed1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.17.8@gmail.com"">i.nf.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:i.nf.o.f.ed1.78@gmail.com"">i.nf.o.f.ed1.78@gmail.com</a>
<a href=""mailto:in.f.ofe.d1.78@gmail.com"">in.f.ofe.d1.78@gmail.com</a>
<a href=""mailto:info.fed178@gmail.com"">info.fed178@gmail.com</a>
<a href=""mailto:inf.o.fed1.7.8@gmail.com"">inf.o.fed1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d.17.8@gmail.com"">i.n.f.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:inf.ofed1.7.8@gmail.com"">inf.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofe.d17.8@gmail.com"">in.f.ofe.d17.8@gmail.com</a>
<a href=""mailto:info.fed.17.8@gmail.com"">info.fed.17.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fe.d17.8@gmail.com"">i.n.f.o.fe.d17.8@gmail.com</a>
<a href=""mailto:inf.ofe.d.1.7.8@gmail.com"">inf.ofe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed17.8@gmail.com"">i.n.fo.f.ed17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fed.17.8@gmail.com"">i.n.fo.fed.17.8@gmail.com</a>
<a href=""mailto:in.fofed17.8@gmail.com"">in.fofed17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d1.7.8@gmail.com"">i.nfofe.d1.7.8@gmail.com</a>
<a href=""mailto:in.fo.f.e.d17.8@gmail.com"">in.fo.f.e.d17.8@gmail.com</a>
<a href=""mailto:in.fofe.d1.78@gmail.com"">in.fofe.d1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.178@gmail.com"">i.nf.o.f.e.d.178@gmail.com</a>
<a href=""mailto:in.fof.e.d1.7.8@gmail.com"">in.fof.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.fed178@gmail.com"">i.nf.o.fed178@gmail.com</a>
<a href=""mailto:i.n.f.ofed1.7.8@gmail.com"">i.n.f.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.o.f.ed1.78@gmail.com"">in.f.o.f.ed1.78@gmail.com</a>
<a href=""mailto:infofe.d1.78@gmail.com"">infofe.d1.78@gmail.com</a>
<a href=""mailto:inf.ofe.d.17.8@gmail.com"">inf.ofe.d.17.8@gmail.com</a>
<a href=""mailto:vinhoxie@gmail.com"">vinhoxie@gmail.com</a>
<a href=""mailto:v.i.n.ho.x.i.e@gmail.com"">v.i.n.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.h.oxi.e@gmail.com"">vi.n.h.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nhox.ie@gmail.com"">v.i.nhox.ie@gmail.com</a>
<a href=""mailto:v.i.n.hox.i.e@gmail.com"">v.i.n.hox.i.e@gmail.com</a>
<a href=""mailto:vin.h.oxi.e@gmail.com"">vin.h.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nho.xi.e@gmail.com"">v.i.nho.xi.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.x.ie@gmail.com"">v.i.n.h.o.x.ie@gmail.com</a>
<a href=""mailto:vin.hox.ie@gmail.com"">vin.hox.ie@gmail.com</a>
<a href=""mailto:vi.nho.x.ie@gmail.com"">vi.nho.x.ie@gmail.com</a>
<a href=""mailto:v.i.nho.x.ie@gmail.com"">v.i.nho.x.ie@gmail.com</a>
<a href=""mailto:vin.ho.x.i.e@gmail.com"">vin.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.nh.o.xi.e@gmail.com"">vi.nh.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.h.oxie@gmail.com"">v.in.h.oxie@gmail.com</a>
<a href=""mailto:v.in.ho.x.i.e@gmail.com"">v.in.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.nhox.ie@gmail.com"">vi.nhox.ie@gmail.com</a>
<a href=""mailto:vinhox.ie@gmail.com"">vinhox.ie@gmail.com</a>
<a href=""mailto:v.in.h.o.x.i.e@gmail.com"">v.in.h.o.x.i.e@gmail.com</a>
<a href=""mailto:vin.h.ox.i.e@gmail.com"">vin.h.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.h.oxie@gmail.com"">vi.n.h.oxie@gmail.com</a>
<a href=""mailto:v.i.nho.x.i.e@gmail.com"">v.i.nho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.ho.x.ie@gmail.com"">v.i.n.ho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.hox.i.e@gmail.com"">vi.n.hox.i.e@gmail.com</a>
<a href=""mailto:v.i.nh.o.x.i.e@gmail.com"">v.i.nh.o.x.i.e@gmail.com</a>
<a href=""mailto:vin.h.o.xie@gmail.com"">vin.h.o.xie@gmail.com</a>
<a href=""mailto:v.inh.ox.i.e@gmail.com"">v.inh.ox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.x.i.e@gmail.com"">v.i.n.h.o.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.xie@gmail.com"">v.i.n.h.o.xie@gmail.com</a>
<a href=""mailto:v.inhox.i.e@gmail.com"">v.inhox.i.e@gmail.com</a>
<a href=""mailto:vinho.x.ie@gmail.com"">vinho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.h.o.xi.e@gmail.com"">vi.n.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.inho.x.i.e@gmail.com"">v.inho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.ox.ie@gmail.com"">v.i.n.h.ox.ie@gmail.com</a>
<a href=""mailto:v.inho.xie@gmail.com"">v.inho.xie@gmail.com</a>
<a href=""mailto:vinh.oxi.e@gmail.com"">vinh.oxi.e@gmail.com</a>
<a href=""mailto:vi.n.h.ox.i.e@gmail.com"">vi.n.h.ox.i.e@gmail.com</a>
<a href=""mailto:v.in.hoxi.e@gmail.com"">v.in.hoxi.e@gmail.com</a>
<a href=""mailto:vi.n.h.o.x.ie@gmail.com"">vi.n.h.o.x.ie@gmail.com</a>
<a href=""mailto:vi.nh.ox.ie@gmail.com"">vi.nh.ox.ie@gmail.com</a>
<a href=""mailto:v.in.hoxie@gmail.com"">v.in.hoxie@gmail.com</a>
<a href=""mailto:v.i.nh.o.xie@gmail.com"">v.i.nh.o.xie@gmail.com</a>
<a href=""mailto:vi.nh.oxie@gmail.com"">vi.nh.oxie@gmail.com</a>
<a href=""mailto:v.i.n.h.oxie@gmail.com"">v.i.n.h.oxie@gmail.com</a>
<a href=""mailto:vi.n.h.o.x.i.e@gmail.com"">vi.n.h.o.x.i.e@gmail.com</a>
<a href=""mailto:vinhoxie@gmail.com"">vinhoxie@gmail.com</a>
<a href=""mailto:v.inhoxi.e@gmail.com"">v.inhoxi.e@gmail.com</a>
<a href=""mailto:vi.nh.o.xie@gmail.com"">vi.nh.o.xie@gmail.com</a>
<a href=""mailto:vi.nh.ox.i.e@gmail.com"">vi.nh.ox.i.e@gmail.com</a>
<a href=""mailto:vi.nh.oxi.e@gmail.com"">vi.nh.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nhox.i.e@gmail.com"">v.i.nhox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.hox.ie@gmail.com"">v.i.n.hox.ie@gmail.com</a>
<a href=""mailto:vinhoxi.e@gmail.com"">vinhoxi.e@gmail.com</a>
<a href=""mailto:vi.nhox.i.e@gmail.com"">vi.nhox.i.e@gmail.com</a>
<a href=""mailto:vinho.x.i.e@gmail.com"">vinho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.nhoxie@gmail.com"">v.i.nhoxie@gmail.com</a>
<a href=""mailto:v.inhoxie@gmail.com"">v.inhoxie@gmail.com</a>
<a href=""mailto:v.in.h.ox.ie@gmail.com"">v.in.h.ox.ie@gmail.com</a>
<a href=""mailto:vi.nh.o.x.i.e@gmail.com"">vi.nh.o.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.ho.xie@gmail.com"">v.i.n.ho.xie@gmail.com</a>
<a href=""mailto:vin.hox.i.e@gmail.com"">vin.hox.i.e@gmail.com</a>
<a href=""mailto:vinh.o.xie@gmail.com"">vinh.o.xie@gmail.com</a>
<a href=""mailto:vin.h.oxie@gmail.com"">vin.h.oxie@gmail.com</a>
<a href=""mailto:v.i.nh.o.x.ie@gmail.com"">v.i.nh.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.h.ox.i.e@gmail.com"">v.i.n.h.ox.i.e@gmail.com</a>
<a href=""mailto:v.i.nh.ox.i.e@gmail.com"">v.i.nh.ox.i.e@gmail.com</a>
<a href=""mailto:vin.ho.x.ie@gmail.com"">vin.ho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.ho.xi.e@gmail.com"">vi.n.ho.xi.e@gmail.com</a>
<a href=""mailto:v.in.hox.i.e@gmail.com"">v.in.hox.i.e@gmail.com</a>
<a href=""mailto:vi.nhoxi.e@gmail.com"">vi.nhoxi.e@gmail.com</a>
<a href=""mailto:v.inh.o.x.i.e@gmail.com"">v.inh.o.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.ho.x.ie@gmail.com"">vi.n.ho.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.h.o.xi.e@gmail.com"">v.i.n.h.o.xi.e@gmail.com</a>
<a href=""mailto:vin.hoxie@gmail.com"">vin.hoxie@gmail.com</a>
<a href=""mailto:v.inh.o.xie@gmail.com"">v.inh.o.xie@gmail.com</a>
<a href=""mailto:v.in.h.oxi.e@gmail.com"">v.in.h.oxi.e@gmail.com</a>
<a href=""mailto:vinh.o.x.i.e@gmail.com"">vinh.o.x.i.e@gmail.com</a>
<a href=""mailto:v.inh.o.xi.e@gmail.com"">v.inh.o.xi.e@gmail.com</a>
<a href=""mailto:vi.nhoxie@gmail.com"">vi.nhoxie@gmail.com</a>
<a href=""mailto:v.in.h.o.xi.e@gmail.com"">v.in.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.ho.xie@gmail.com"">v.in.ho.xie@gmail.com</a>
<a href=""mailto:v.inh.oxie@gmail.com"">v.inh.oxie@gmail.com</a>
<a href=""mailto:v.in.h.o.x.ie@gmail.com"">v.in.h.o.x.ie@gmail.com</a>
<a href=""mailto:v.in.h.ox.i.e@gmail.com"">v.in.h.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.hoxi.e@gmail.com"">vi.n.hoxi.e@gmail.com</a>
<a href=""mailto:v.in.ho.xi.e@gmail.com"">v.in.ho.xi.e@gmail.com</a>
<a href=""mailto:vinh.oxie@gmail.com"">vinh.oxie@gmail.com</a>
<a href=""mailto:vin.h.ox.ie@gmail.com"">vin.h.ox.ie@gmail.com</a>
<a href=""mailto:v.i.nhoxi.e@gmail.com"">v.i.nhoxi.e@gmail.com</a>
<a href=""mailto:vin.h.o.x.ie@gmail.com"">vin.h.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.nh.oxie@gmail.com"">v.i.nh.oxie@gmail.com</a>
<a href=""mailto:vinho.xie@gmail.com"">vinho.xie@gmail.com</a>
<a href=""mailto:v.in.ho.x.ie@gmail.com"">v.in.ho.x.ie@gmail.com</a>
<a href=""mailto:vinh.ox.ie@gmail.com"">vinh.ox.ie@gmail.com</a>
<a href=""mailto:v.inhox.ie@gmail.com"">v.inhox.ie@gmail.com</a>
<a href=""mailto:vin.hoxi.e@gmail.com"">vin.hoxi.e@gmail.com</a>
<a href=""mailto:v.i.nho.xie@gmail.com"">v.i.nho.xie@gmail.com</a>
<a href=""mailto:v.i.n.hoxi.e@gmail.com"">v.i.n.hoxi.e@gmail.com</a>
<a href=""mailto:vinhox.i.e@gmail.com"">vinhox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.oxi.e@gmail.com"">v.i.n.h.oxi.e@gmail.com</a>
<a href=""mailto:vinho.xi.e@gmail.com"">vinho.xi.e@gmail.com</a>
<a href=""mailto:vi.n.ho.xie@gmail.com"">vi.n.ho.xie@gmail.com</a>
<a href=""mailto:vi.nho.x.i.e@gmail.com"">vi.nho.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.hoxie@gmail.com"">vi.n.hoxie@gmail.com</a>
<a href=""mailto:v.inh.ox.ie@gmail.com"">v.inh.ox.ie@gmail.com</a>
<a href=""mailto:vi.nh.o.x.ie@gmail.com"">vi.nh.o.x.ie@gmail.com</a>
<a href=""mailto:vi.nho.xie@gmail.com"">vi.nho.xie@gmail.com</a>
<a href=""mailto:vi.n.hox.ie@gmail.com"">vi.n.hox.ie@gmail.com</a>
<a href=""mailto:vinh.o.xi.e@gmail.com"">vinh.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.hox.ie@gmail.com"">v.in.hox.ie@gmail.com</a>
<a href=""mailto:v.inho.xi.e@gmail.com"">v.inho.xi.e@gmail.com</a>
<a href=""mailto:vi.n.h.ox.ie@gmail.com"">vi.n.h.ox.ie@gmail.com</a>
<a href=""mailto:vin.h.o.xi.e@gmail.com"">vin.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.i.nh.o.xi.e@gmail.com"">v.i.nh.o.xi.e@gmail.com</a>
<a href=""mailto:v.i.nh.ox.ie@gmail.com"">v.i.nh.ox.ie@gmail.com</a>
<a href=""mailto:vin.ho.xie@gmail.com"">vin.ho.xie@gmail.com</a>
<a href=""mailto:vi.n.h.o.xie@gmail.com"">vi.n.h.o.xie@gmail.com</a>
<a href=""mailto:v.inho.x.ie@gmail.com"">v.inho.x.ie@gmail.com</a>
<a href=""mailto:vi.nho.xi.e@gmail.com"">vi.nho.xi.e@gmail.com</a>
<a href=""mailto:v.inh.oxi.e@gmail.com"">v.inh.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nh.oxi.e@gmail.com"">v.i.nh.oxi.e@gmail.com</a>
<a href=""mailto:vinh.o.x.ie@gmail.com"">vinh.o.x.ie@gmail.com</a>
<a href=""mailto:v.inh.o.x.ie@gmail.com"">v.inh.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.ho.xi.e@gmail.com"">v.i.n.ho.xi.e@gmail.com</a>
<a href=""mailto:vinh.ox.i.e@gmail.com"">vinh.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.ho.x.i.e@gmail.com"">vi.n.ho.x.i.e@gmail.com</a>
<a href=""mailto:v.in.h.o.xie@gmail.com"">v.in.h.o.xie@gmail.com</a>
<a href=""mailto:vin.ho.xi.e@gmail.com"">vin.ho.xi.e@gmail.com</a>
<a href=""mailto:v.i.n.hoxie@gmail.com"">v.i.n.hoxie@gmail.com</a>
<a href=""mailto:vin.h.o.x.i.e@gmail.com"">vin.h.o.x.i.e@gmail.com</a>"
qNEx2jLH,Zombie Waves (NOT FINISHED),memenorio,Python,Thursday 2nd of November 2023 06:42:54 PM CDT,"import pygame
from pygame.locals import *
from os.path import join
import random as r
import math

pygame.init()

# Variabili costanti
WIDTH = 1200
HEIGHT = 900
PLAYER_WIDTH = 40
PLAYER_HEIGHT = 80
TILE_WIDTH = 70
COIN_WIDTH = 20
GUN_WIDTH = 30
SHOOT_WIDTH = 10
SHOOT_SPEED = 25
ZOMBIE_SPEED = 3
PLAYER_SPEED = 5
MINIMUM_DISTANCE = 300

# Setup
screen = pygame.display.set_mode((WIDTH, HEIGHT))
screen_rect = screen.get_rect()
pygame.display.set_caption(""Zombie Waves"")

bgcolor = (0, 0, 0)
screen.fill(bgcolor)

tile = pygame.image.load(join(""Assets"", ""tile.png"")).convert()
tile = pygame.transform.scale(tile, (TILE_WIDTH, TILE_WIDTH))

bg = screen.copy()

# Creazione sfondo
for i in range(0, WIDTH, TILE_WIDTH):
        for j in range(0, HEIGHT, TILE_WIDTH):
            bg.blit(tile, (i, j))

# Creazione giocatore, pistola e moneta
player_image = pygame.image.load(join(""Assets"", ""player.png"")).convert()
player_image = pygame.transform.scale(player_image, (PLAYER_WIDTH, PLAYER_HEIGHT))
player = player_image.copy()

gun_image = pygame.image.load(join(""Assets"", ""gun.png"")).convert_alpha()
gun_image = pygame.transform.scale(gun_image, (GUN_WIDTH, GUN_WIDTH))
gun = gun_image.copy()
gun_rect = gun.get_rect()
looks_right = True

player_rect = player.get_rect()
player_rect.center = screen_rect.center

xspeed = 0
yspeed = 0

coin = pygame.Surface((COIN_WIDTH, COIN_WIDTH))
coin.fill(""yellow"")
pygame.draw.line(coin, ""orange"", (COIN_WIDTH/2, COIN_WIDTH/4), (COIN_WIDTH/2, COIN_WIDTH*(3/4)), 9)

# Controllo che la moneta non si generi a contatto col giocatore
while True:
    if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
        coin_rect = coin.get_rect()
        coin_rect.topleft = coordinates
        break
    
shoots = []
zombies = []

clock = pygame.time.Clock()
run = True

milliseconds = 2000
pygame.time.set_timer(USEREVENT, milliseconds)

while run:
    # Movimento del giocatore, che viene impedito se va contro il bordo
    player_rect.topleft = (player_rect.topleft[0] + (
        xspeed if player_rect.left > 0 and player_rect.right < screen.get_width() else (
            1 if player_rect.left <= 0 else -1)), player_rect.topleft[1] + (
        yspeed if player_rect.top > 0 and player_rect.bottom < screen.get_height() else (
            1 if player_rect.top <= 0 else -1)))

    # Rotazione della pistola per seguire il cursore
    pos = pygame.mouse.get_pos()
    delta_x = gun_rect.center[0] - pos[0]
    delta_y = gun_rect.center[1] - pos[1]
    angle = ((math.degrees(math.atan2(delta_y, delta_x)) + 180)*-1)
    gun = pygame.transform.rotate(gun_image, angle) 
    gun_rect.midleft = player_rect.midright

    # Aggiornamento posizione
    screen.blit(bg, (0, 0))
    screen.blit(player, player_rect)
    screen.blit(gun, gun_rect)
    screen.blit(coin, coin_rect)

    # Controllo collisione con la moneta. In caso positivo, cambia la posizione della moneta
    if player_rect.colliderect(coin_rect):
        while True:
            if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
                coin_rect = coin.get_rect()
                coin_rect.topleft = coordinates
                break
            
    for event in pygame.event.get():
        if event.type == QUIT: # Esce dal gioco
            run = False
        elif event.type == KEYDOWN or event.type == KEYUP: # Tasti per il movimento
            if event.key == K_w:
                yspeed -= (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_s:
                yspeed += (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_a:
                if looks_right:
                    player = pygame.transform.flip(player, True, False)
                    looks_right = False
                xspeed -= (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_d:
                if not looks_right:
                    player = pygame.transform.flip(player, True, False)
                    looks_right = True               
                xspeed += (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
        elif event.type == MOUSEBUTTONDOWN:
            if event.button == BUTTON_LEFT: # Creazione del proiettile
                shoot = pygame.Surface((SHOOT_WIDTH, SHOOT_WIDTH))
                shoot.fill(""red"")
                shoot_rect = shoot.get_rect()
                shoot_rect.center = gun_rect.center
                shoots.append((shoot, shoot_rect, angle))
        elif event.type == USEREVENT: # Creazione dello zombie ogni breve arco di tempo
            pygame.time.set_timer(USEREVENT, 0)
            if milliseconds >= 520:
                milliseconds -= 20
            pygame.time.set_timer(USEREVENT, milliseconds)
            zombie = pygame.Surface((PLAYER_WIDTH, PLAYER_WIDTH))
            zombie.fill(""green"")
            zombie_rect = zombie.get_rect()
            # Controllo che lo zombie non si generi troppo vicino al giocatore
            while pygame.math.Vector2(player_rect.center[0], player_rect.center[1]).distance_to((coordinates := (r.randint(0, WIDTH - PLAYER_WIDTH), r.randint(0, HEIGHT - PLAYER_HEIGHT)))) < MINIMUM_DISTANCE:
                coordinates = r.randint(0, WIDTH - PLAYER_WIDTH), r.randint(0, HEIGHT - PLAYER_HEIGHT)
            zombie_rect.center = coordinates
            zombies.append((zombie, zombie_rect))

    # Tutti i controlli sui proiettili: collisioni, movimento
    if len(shoots) > 0:
        for shoot, shoot_rect, angle in shoots:
            angle_radians = math.radians(angle)
            direction = pygame.Vector2(math.cos(angle_radians), math.sin(angle_radians))
            direction.normalize_ip()

            shoot_rect.topleft = (shoot_rect.topleft[0] + direction.x * SHOOT_SPEED, shoot_rect.topleft[1] + (direction.y*-1) * SHOOT_SPEED)

            screen.blit(shoot, shoot_rect)

            if not screen.get_rect().colliderect(shoot_rect):
                shoots.remove((shoot, shoot_rect, angle))

    # Tutti i controlli sulli zombie: Aggiornamento direzione e movimento, collisione col giocatore, collisione col proiettile
    if len(zombies) > 0:
        for zombie, zombie_rect in zombies:
            pos = player_rect.center
            delta_x = zombie_rect.center[0] - pos[0]
            delta_y = zombie_rect.center[1] - pos[1]
            angle = ((math.degrees(math.atan2(delta_y, delta_x)) + 180)*-1)
            angle_radians = math.radians(angle)
            direction = pygame.Vector2(math.cos(angle_radians), math.sin(angle_radians))
            direction.normalize_ip()

            zombie_rect.topleft = (zombie_rect.topleft[0] + direction.x * ZOMBIE_SPEED, zombie_rect.topleft[1] + (direction.y*-1) * ZOMBIE_SPEED)

            screen.blit(zombie, zombie_rect)

            # Collisione col proiettile
            for shoot, shoot_rect, angle in shoots:
                if shoot_rect.colliderect(zombie_rect):
                    zombies.remove((zombie, zombie_rect))
                    shoots.remove((shoot, shoot_rect, angle))

            # Collisione col giocatore, reset di tutto
            if zombie_rect.colliderect(player_rect):
                pygame.time.set_timer(USEREVENT, 0)
                pygame.time.wait(2000)
                milliseconds = 2000
                pygame.time.set_timer(USEREVENT, milliseconds)
                zombies.clear()
                shoots.clear()
                player_rect.center = screen_rect.center
                while True:
                    if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
                        coin_rect = coin.get_rect()
                        coin_rect.topleft = coordinates
                        break

    

    pygame.display.update()
    clock.tick(60)
    
pygame.quit()
"
ZFnTw4Bb,Koikatsu List Scraper V1.21,Skelun,JavaScript,Thursday 2nd of November 2023 06:39:53 PM CDT,"/* --------------------------------------------------------------------
-- Transforms embedded links into actual Hyperlinks
----------------------------------------------------------------------- */

function createHyperlink() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

  // Get the selected range
  var range = sheet.getActiveRange();
  var richTextValues = range.getRichTextValues();

  for (var i = 0; i < richTextValues.length; i++) {
    for (var j = 0; j < richTextValues[0].length; j++) {
      var textValue = richTextValues[i][j].getText();
      var link = richTextValues[i][j].getLinkUrl();

      if (link) {
        // Creates a hyperlink formula
        var formula = '=HYPERLINK(""' + link + '"", ""Here"")';

        // Set the formula in the cell
        sheet.getRange(range.getRow() + i, range.getColumn() + j).setFormula(formula);
      }
    }
  }
}

/* --------------------------------------------------------------------
-- MOON RATING
-----------------------------------------------------------------------
-- I'm using this because it was the easier way
-- to simulate rating stars.
----------------------------------------------------------------------- */

function moonRating(number) {
  // Is it a number?
  if (!isNaN(number)) {
    var votes;

    // Is it an interger?
    if (number % 1 === 0) {
      votes=""🌕"".repeat(number);
      votes+=""🌑"".repeat(5-number);
    
    // Or is it a float?
    } else {
      let n = Math.floor(number);
      votes=""🌕"".repeat(n);
      votes+=""🌗"";
      votes+=""🌑"".repeat(4-n);
    }
    return votes;
  } else {
    // If no votes
    return ""------""
  }
}
  
/* --------------------------------------------------------------------
-- Scraping data using Cheerio library
-- (https://github.com/tani/cheeriogs)
-- Script ID: 1ReeQ6WO8kKNxoaA_O0XEQ589cIrRvEBA9qcWpNqdOP17i47u6N9M5Xh0
----------------------------------------------------------------------- */

// Cheerio method to scrape
function getContent(url) {
    return UrlFetchApp.fetch(url).getContentText()
}
  
/* --------------------------------------------------------------------
-- Actual scrape function
----------------------------------------------------------------------- */

function scrapeData(force) {

  // Selects the active sheet
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

  // Get selected cells
  var selectedRange = sheet.getActiveRange();

  // Get the values from the selected cells
  var selectedValues = selectedRange.getRichTextValues(); 

  // Iterate through cells
  for (var i = 0; i < selectedValues.length; i++) {

    // It assumes the URLs are in the first column of the selected column
    var urlFromLink = selectedValues[i][0].getLinkUrl();
    var urlFromCellValue = selectedValues[i][0].getText(); // Get text value from the cell

    // Check if there is a link URL, and use it if available; otherwise, use the URL from the cell value
    var url = urlFromLink ? urlFromLink : urlFromCellValue;

    // If the value is not empty...
    if (url && isValidURL(url)) {

      // Grabs the HTML data
      var content = getContent(url);
      
      // Parses the HTML data
      var $ = Cheerio.load(content);

      /* --------------------------------------------------------------------
      -- [TITLE]
      -------------------------------------------------------------------- */
      var threadTitle = $('h1.p-title-value');

      var rawTitle = threadTitle.contents().filter(function() {
        return this.type === 'text';
      }).text();

      var titleREGEX = /(.+?)\s*\[(.+?)\](?:\s*\[(.+?)\])?/.exec(rawTitle);

      // We should check if titleREGEX is not null before accessing its indices
      if (titleREGEX) {
        var title = titleREGEX[1];
        var version = titleREGEX[2];
      } else {
        var title = ""Title Problem ⚠️"";
        var version = ""Version Problem ⚠️"";        
      }

      var devBackup = titleREGEX[3] ? titleREGEX[3] + "" ❓"" : ""Not found ⚠️"";

      /* --------------------------------------------------------------------
      -- [STATUS] (ACTIVE - ABANDONED - ONHOLD)
      -------------------------------------------------------------------- */
      // Default status
      var status = 'Active';

      // Search for ""Abandoned"" or ""Onhold""
      threadTitle.find('span').each(function() {
        var spanText = $(this).text();
        if (['Completed','Abandoned','Onhold'].includes(spanText)) {
          status = spanText;
          return false;
        }
      });

      /* --------------------------------------------------------------------
      -- [ENGINE]
      ----------------------------------------------------------------------- */
      // If there's no engine info, it returns ""unknown""
      var engine = '⚠️ Unknown';

      // Checks if there's one of these strings
      threadTitle.find('span').each(function() {
        var spanText = $(this).text();
        if (['ADRIFT','Flash','Java','Others','QSP','RAGS','RPGM',""Ren'Py"",'Tads','Unity','Unreal Engine','WebGL','Wolf RPG','HTML'].includes(spanText)) {
          engine = spanText;
          return false; // Stop searching once a match is found
        }
      });

      /* --------------------------------------------------------------------
      -- [TAGS]
      ----------------------------------------------------------------------- */
      // Selects the element containing the tags
      var tagList = $('span.js-tagList');

      // Grabs the tags and separate them by comma
      var tags = tagList.find('a.tagItem').map(function() {
        return $(this).text();
      }).get().join(', ');

      /* --------------------------------------------------------------------
      -- GAMEPLAY
      ----------------------------------------------------------------------- */
      var gameplay;

      // Assumes the [Gameplay] type by using the tags
      switch (true) {
        case tags.includes('sandbox'):
          gameplay = 'Sandbox';
          break;
        case tags.includes('turn based combat'):
          gameplay = 'TBC';
          break;
        case tags.includes('management'):
          gameplay = 'Management';
          break;
        case tags.includes('simulator'):
          gameplay = 'Simulator';
          break;
        case tags.includes('rpg'):
          gameplay = 'RPG';
          break;
        default:
          gameplay = 'Visual Novel';
      }
      
      /* --------------------------------------------------------------------
      -- - Thread [Start] Date
      ----------------------------------------------------------------------- */

      // Selects the first 'article' element
      var firstArticle = $('article').first();

      // Find the 'header.message-attribution' element
      var messageAttributionHeader = firstArticle.find('header.message-attribution');

      // Find the 'time' element with class 'u-dt'
      var timeElement = messageAttributionHeader.find('time.u-dt');

      // Check if the time element exists
      if (timeElement.length > 0) {
          // Extract the 'datetime' attribute
          var start = timeElement.attr('datetime');
          start = start.split('T')[0]; // Get the date part only

      } else {
          Logger.log(""<time> element not found."");
      }

      /* --------------------------------------------------------------------
      -- EXTRA INFORMATION
      -----------------------------------------------------------------------
      -- - Thread [Updated] Date
      -- - [Release] Date
      -- - [Dev] name
      -- - [Censored]
      ----------------------------------------------------------------------- */
      // Selects the first message body (which is the one containing the game info)
      var articleText = $('article.message-body').first().text();

      // Uses regular expressions to match and capture the information
      // When it was updated
      var updatedREGEX = /Thread Updated: ([^\s]+)/.exec(articleText);
      // When it was released
      var releaseREGEX = /Release Date: ([^\s]+)/.exec(articleText);
      // Who is the dev
      var devREGEX = /Developer: ([^\s]+)/.exec(articleText);
      // It is censored?
      var censoredREGEX = /Censored: (.+?)(?=\n|\r|\r\n)/.exec(articleText);

      // Extract the captured values or provide default values if not found
      var updated = updatedREGEX ? updatedREGEX[1] : ""Not found ⚠️"";
      var release = releaseREGEX ? releaseREGEX[1] : ""Not found ⚠️"";
      
      //Converts to string due to Google Sheets altering the type
      updated = updated.toString()
      release = release.toString()

      var dev = devREGEX ? devREGEX[1] : devBackup;
      var censored = censoredREGEX ? censoredREGEX[1] : ""Not found ⚠️"";

      /* --------------------------------------------------------------------
      -- [RATING] & [VOTES]
      ----------------------------------------------------------------------- */
      // Grabs the JSON generated by F95 forum
      var jsonInfo = $('script[type=""application/ld+json""]').last();
      
      // Uses regular expression to match and caputre the information
      var ratingREGEX = /""ratingValue"": ""(\d+(?:\.\d+)?)""/.exec(jsonInfo);
      var votesREGEX = /""ratingCount"": ""(\d+)""/.exec(jsonInfo);

      // Extract the captured values or provide default values if not found
      var rating = ratingREGEX ? ratingREGEX[1] : ""No rating yet"";
      var votes = votesREGEX ? votesREGEX[1] : ""0"";

      /* --------------------------------------------------------------------
      -- LAST UPDATE CHECK
      -- --------------------------------------------------------------------
      -- It will ignore the game if it was updated less than 30 days ago
      ----------------------------------------------------------------------- */

      // Gets today's date
      var today = new Date();

      // Parses the update & release info
      var updatedDate = new Date(updated);
      var releaseDate = new Date(release);
      
      // Subtracts both dates to get days gap
      var daysSinceLastUpdate = Math.floor((today - updatedDate) / (1000 * 60 * 60 * 24));
      var daysSinceRelease = Math.floor((today - releaseDate) / (1000 * 60 * 60 * 24));

      if (force === true || daysSinceRelease < 30 || daysSinceLastUpdate > 30) {

          /* --------------------------------------------------------------------
          -- OUTPUTS THE VALUE INTO DIFFERENT CELLS
          ----------------------------------------------------------------------- */

          // Write the scraped data to the same row
          var outputRow = selectedRange.getRow() + i;

          // Write the scraped data to adjacent columns
          var outputColumn = selectedRange.getColumn() + 1;

          // All values that will be written
          var newValues = [
              rawTitle,
              title,
              version,
              status,
              engine,
              gameplay,
              tags,
              moonRating(rating),
              votes,
              updated,
              release,
              start,
              dev,
              censored
          ];

          // Read existing values in the row
          var rangeToWrite = sheet.getRange(outputRow, outputColumn, 1, newValues.length);
          var existingValues = rangeToWrite.getValues()[0];

          // Compare existing values with new values
          for (var j = 0; j < existingValues.length; j++) {

            // If the new value is empty, keep the existing value
            if (newValues[j] === """" || newValues[j] == null) {
              newValues[j] = existingValues[j];
            }
          }

          // Set only the new non-empty values
          rangeToWrite.setValues([newValues]);
      }

    }

  }

}

/* --------------------------------------------------------------------
-- IGNORE DATE RESTRICTION
----------------------------------------------------------------------- */

function forceScrapeData() {
  scrapeData(true);
}

/* --------------------------------------------------------------------
-- CHECK IF THE STRING IS A VALID URL
----------------------------------------------------------------------- */
function isValidURL(str) {
  var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
  '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
  '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR an IP Address
  '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
  '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
  '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
  return pattern.test(str);
}

/* --------------------------------------------------------------------
-- CREATES AN EXTRA MENU OPTION
----------------------------------------------------------------------- */
  
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('Extra Functions')
      .addItem('Scrape Data', 'scrapeData')
      .addItem('Force Scrape', 'forceScrapeData')
      .addItem('Create Hyperlink','createHyperlink')
      .addToUi();
}"
4JC9mkaU,Untitled,Rofyda_Elghadban1,C++,Thursday 2nd of November 2023 06:39:52 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 //#define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  int n,counter=0;
  cin>>n;
  vector<int>aa,bb,a1,b1;
  while(n--){
    int a,b;
    cin>>a>>b;
    aa.push_back(a);
    bb.push_back(b);
  }
  map<int,int>mpa,mpb;
  for(int i=0;i<aa.size();i++){
    mpa[aa[i]]=i;
    mpb[bb[i]]=i;
  }
  for(auto i:mpa){
    a1.push_back(i.first);
  }
  for(auto i:mpb){
    b1.push_back(i.first);
  }
  if(mpa[a1[aa.size()-1]]!=mpb[b1[bb.size()-1]]||mpa[a1[0]]!=mpb[b1[0]]){
    cout<<""Happy Alex""<<""\n"";
  }else{
    cout<<""Poor Alex""<<""\n"";
  }
 }

 int main(){
  Rofyda_Elghadban();
  // int t;
  // cin>>t;
  // while(t--){
  //   solve();
  // }
  solve();
  return 0;
 }

"
