id,title,username,language,date,content
9XWXDzcV,Calculator,webbersof,Python,Sunday 27th of August 2023 06:52:23 AM CDT,"def exit_condition():
    return 'Thank you for using the calculator. Goodbye!'

def invalid_condition():
    return 'Invalid input. Please try again.'

def error_statement():
    return 'Error: Cannot divide by zero!'

def comparing(x, y):
    if x > y:
        return f'{x} > {y}'
    elif x < y:
        return f'{x} < {y}'
    else:
        return f'{x} = {y}'

def _execute_operation(choice, x, y):
    operations = {
        ""1"": lambda: x + y,
        ""2"": lambda: x - y,
        ""3"": lambda: x * y,
        ""4"": lambda: x / y if y != 0 else error_statement(),
        ""5"": lambda: x ** y,
        ""6"": lambda: x % y if y != 0 else error_statement(),
        ""7"": lambda: comparing(x, y),
    }
    return operations[choice]()

def calculator():
    print(""Welcome to the Advanced Calculator!"")

    while True:
        print(""\nSelect an operation:"")
        print(""1. Addition"")
        print(""2. Subtraction"")
        print(""3. Multiplication"")
        print(""4. Division"")
        print(""5. Grading"")
        print(""6. Modulo"")
        print(""7. Comparing"")
        print(""8. Exit"")

        choice = input(""Enter the operation number (1/2/3/4/5/6/7/8): "")

        if choice == ""8"":
            print(exit_condition())
            break
        elif choice not in (""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7""):
            print(invalid_condition())
            continue

        num1 = float(input(""Enter the first number: ""))
        num2 = float(input(""Enter the second number: ""))

        operation_result = _execute_operation(choice, num1, num2)
        print(f""Result: {operation_result}"")

if __name__ == ""__main__"":
    calculator()
"
JxdB2QzC,Untitled,itsspynex,C++,Sunday 27th of August 2023 06:41:57 AM CDT,"#include <SFML/Audio.hpp>
#include <SFML/Graphics.hpp>
#include <SFML/Network.hpp>
#include <SFML/Main.hpp>
#include <SFML/System.hpp>
#include <SFML/Window.hpp>
#include <SFML/OpenGL.hpp>
#include ""PerlinNoise-master/PerlinNoise.hpp""
#include <iostream>

using namespace std;


    const int screen_width = 800;
    const int screen_height = 800;
    const int a = 800;
    const int b = 800;
    sf::Uint8* pixels = new sf::Uint8[a * b * 4];

void regen()
{
    uint8_t * pixel = new uint8_t[a * b * 4];
    
    //Noise function perameters
    int random = rand();
    const siv::PerlinNoise::seed_type seed = rand();
    const siv::PerlinNoise perlin{ seed };

    //Draw Pixels
    std::vector<int[screen_width]> arr(screen_height);
    std::vector<int[screen_width]> arr1(screen_height);
    std::vector<int[screen_width]> arr2(screen_height);
    for(int32_t i = 0; i < screen_height; ++i)
    {
        for(int32_t j = 0; j < screen_width; ++j)
        {
            int p_value[3];
            const double noise = perlin.octave2D_01((i * 0.01), (j * 0.01), 4);
            if(noise <= 0.5) 
            {
                arr[i][j] = {0};
                arr1[i][j] = {66};
                arr2[i][j] = {137}; 
            }
            else
            {
                arr[i][j] = {66};
                arr1[i][j] = {98};
                arr2[i][j] = {32};
            }


            //Convert 2d representation of each index to 1d
            int CurrentPixelIndex2 = ((i * screen_height) + j);
            pixel[4 * CurrentPixelIndex2] = arr[i][j];
            pixel[4 * CurrentPixelIndex2 +1] = arr1[i][j];
            pixel[4 * CurrentPixelIndex2 +2] = arr2[i][j];
            pixel[4 * CurrentPixelIndex2 +3] = 255;
        }
    }
    for(int32_t i = 0; i < screen_width*screen_height; i+=4)
    {
        pixels[i] = pixel[i];
        pixels[i+1] = pixel[i+1];
        pixels[i+2] = pixel[i+2];
        pixels[i+3] = pixel[i+3];
    }


}



int main()
{


    //window renderer
    sf::RenderWindow window(sf::VideoMode(screen_width, screen_height), ""Procedural Generation"");
    window.setVerticalSyncEnabled(true);


    //Texture
    sf::Texture Texture;
    Texture.create(screen_width, screen_height);


    //Sprite
    sf::Sprite sprite(Texture);


    //TODO: i need to make a 2d array with some grayscale intensity values in each row
    //R, G, B
    //Next row...

    // then make 1 dimentional pixel and pixels pointer int arrays, one to be used for sfml to store pixel data with width*height*4(for each grayscale value RGBA)

    //CurrentPixelIndex2 int maps the 2D position of the pixel to its linear index in the pixel array.

    //The same value from arr2[x][y] is assigned to all color components (R, G, B) of the pixel at that index.


    
    while (window.isOpen()) //Main Game Loop
    {

        sf::Event event;
        while (window.pollEvent(event))
        {

            if (event.type == sf::Event::Closed)
                window.close();
            
            if(event.type == sf::Event::KeyReleased && event.key.code == sf::Keyboard::Enter)
                regen();

        };

        
        Texture.update(pixels);
        window.clear();
        window.draw(sprite);
        window.display();

    }

    return 0;
}
"
jYp5CMf3,SubtitleEdit: FixExtraSpaces,ivandrofly,C#,Sunday 27th of August 2023 06:39:14 AM CDT,"public static string FixExtraSpaces(this string s)
{
	if (string.IsNullOrEmpty(s))
	{
		return s;
	}

	const char whiteSpace = ' ';
	var k = -1;
	for (var i = s.Length - 1; i >= 0; i--)
	{
		var ch = s[i];
		if (k < 2)
		{
			if (ch == whiteSpace)
			{
				k = i + 1;
			}
		}
		else if (ch != whiteSpace)
		{
			// only keep white space if it doesn't succeed/precede CRLF
			// 2: when we `if (k - (i + skipCount) >= 1) = > 0`
			var skipCount = (ch == '\n' || ch == '\r') || (k < s.Length && (s[k] == '\n' || s[k] == '\r')) ? 1 : 2;

			// extra space found
			if (k - (i + skipCount) >= 1)
			{
				s = s.Remove(i + 1, k - (i + skipCount));
			}

			// Reset remove length.
			k = -1;
		}
	}

	return s;
}


Note: there is a note that explain why we return 2!"
M3n3kvEz,just variables,RealSpeshul,JSON,Sunday 27th of August 2023 06:24:31 AM CDT,"{
  ""changelog"": [
    {
     ""details"": {
        ""date"": ""August 27, 2023"",
        ""semver"": ""Patch"",
        ""stamp"": ""1693125288"",
        ""url"": ""https://pastebin.com/raw/k7QSpdQb""
      },
        ""title"": ""0.0.6""
    },
    {
     ""details"": {
        ""date"": ""August 27, 2023"",
        ""semver"": ""Patch"",
        ""stamp"": ""1693125000"",
        ""url"": ""https://pastebin.com/raw/k7QSpdQb""
      },
        ""title"": ""0.0.5""
    }
  ]
}"
TVMNPcke,data677,TestGuy1,JSON,Sunday 27th of August 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '863dd69b1b1c6e77a6ea35d726454b562fce7f84ce0351d199b83ad8ea918e89500d7aaac8fc02a2662229cdc70887c7bf859272d741208c0775ad7152f141a8cdf2973556a240e559e76bdbb97731b68443fe0301fa9898d5b225c35c9eb548aca5c6b8176ad6d5dca455745180cc4be36f1248c09f368fb13cd846f4b3b418',
  otherdata: [
    '62bbd957114e340ca4fd3f9e0570e299',
    '1eca4db493ebedfa93b729f71fa15e03',
    '55bf80beff3c67a03d7631021022cfc7',
    'f8b23cdf3124654fbfda0822cd0d6418',
    'a0f77f5a03d878caf1affe532e1bdf8f',
    'b6d65c56e9b1e0be7ae30f711bd89847',
    '86e258090ba093fea8e8dddeb3093549',
    'bd5e916df64063555caa124e7a51e6ae'
  ]
}"
Yg4DZkr9,Untitled,Josif_tepe,C++,Sunday 27th of August 2023 05:37:03 AM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
using namespace std;
typedef long long ll;
const int maxn = 3e5 + 10;
vector<int> graph[maxn];
ll dp[maxn][1 << 5];
int color[maxn];
ll dfs(int node, int bitmask, int length) {
    if(dp[node][bitmask] != -1) {
        return dp[node][bitmask];
    }
    ll res = 0;
    if(dp[node][bitmask] != -1) {
        return dp[node][bitmask];
    }
    if(length >= 2) {
        res++;
    }
    for(int neighbour : graph[node]) {
        if(!(bitmask & (1 << color[neighbour]))) {
            res += dfs(neighbour, bitmask | (1 << color[neighbour]), length + 1);
        }
    }
    return dp[node][bitmask] = res;
}
int main(int argc, const char * argv[]) {
    int n, m, k;
    cin >> n >> m >> k;
    
    for(int i = 0; i < n; i++) {
        cin >> color[i];
        color[i]--;
    }
    for(int i = 0; i < m; i++) {
        int a, b;
        cin >> a >> b;
        a--;
        b--;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    memset(dp, -1, sizeof dp);
    ll res = 0;
    for(int i = 0; i < n; i++) {
        res += dfs(i, (1 << color[i]), 1);
    }
    cout << res << endl;
    return 0;
}

//4 3 3 1 2 1 3 1 2
//2 3
//4 2
"
Y6fwFWnm,PrintTable,Urara_Chiya,Lua,Sunday 27th of August 2023 04:48:01 AM CDT,"key = """"
function PrintTable(table , level)
  level = level or 1
  local indent = """"
  for i = 1, level do
    indent = indent..""  ""
  end

  if key ~= """" then
    print(indent..key.."" ""..""="".."" ""..""{"")
  else
    print(indent .. ""{"")
  end

  key = """"
  for k,v in pairs(table) do
     if type(v) == ""table"" then
        key = k
        PrintTable(v, level + 1)
     else
        local content = string.format(""%s%s = %s"", indent .. ""  "",tostring(k), tostring(v))
      print(content)  
      end
  end
  print(indent .. ""}"")

end"
cyUtnx7V,CodinGame_2023_08_27__11_45_06__mars_lander.java,MonsterScripter,Java,Sunday 27th of August 2023 04:45:27 AM CDT,"import java.util.*;
import java.io.*;
import java.math.*;

class Player {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        
        int surfaceN = in.nextInt(); // le nombre de points utilisés pour dessiner la surface de Mars.
        for (int i = 0; i < surfaceN; i++) {
            int landX = in.nextInt(); // Coordonnée X d'un point de la surface.
            int landY = in.nextInt(); // Coordonnée Y d'un point de la surface. En reliant tous les points ensemble de manière séquentielle, vous formez la surface de Mars.
        }

        // Boucle de jeu
        int prevVSpeed = 0;
        while (true) {
            int X = in.nextInt();
            int Y = in.nextInt();
            int hSpeed = in.nextInt(); // la vitesse horizontale (en m/s), peut être négative.
            int vSpeed = in.nextInt(); // la vitesse verticale (en m/s), peut être négative.
            int fuel = in.nextInt(); // la quantité de carburant restante en litres.
            int rotate = in.nextInt(); // l'angle de rotation en degrés (-90 à 90).
            int power = in.nextInt(); // la puissance des fusées (0 à 4).
            rotate = 0; // la zone d'atterrissage est juste en dessous du robot. Vous pouvez donc ignorer la rotation et toujours indiquer 0 en angle de rotation.
            if (vSpeed <= -40) {
                power = 4;
            }
            if (vSpeed > -40) {
                power = 0;
            }
            System.out.println(String.format(""%d %d"", rotate, power));
        }
    }
}

/**

 	Objectif
L'objectif de votre programme est de faire atterrir, sans crash, la capsule ""Mars Lander"" qui contient le rover Opportunity. La capsule “Mars Lander” permettant de débarquer le rover est pilotée par un programme qui échoue trop souvent dans le simulateur de la NASA.

Notez que ce problème peut sembler difficile, mais en réalité il est simple à résoudre. Ce puzzle constitue le premier des trois niveaux, par conséquent, certains contrôles sont présentés mais ne sont pas nécessaires pour résoudre ce premier niveau.
 	Règles
Sous forme de jeu, le simulateur place Mars Lander dans une zone du ciel de Mars.

	La zone fait 7000m de large et 3000m de haut.

Pour ce niveau, Mars Lander se situe au dessus de la zone d’atterrissage, en position verticale, avec aucune vitesse initiale.

Il existe une unique zone d'atterrissage plane sur la surface de Mars et elle mesure au moins 1000 mètres de large.Toutes les secondes, en fonction des paramètres d’entrée (position, vitesse, fuel, etc.), le programme doit fournir le nouvel angle de rotation souhaité ainsi que la nouvelle puissance des fusées de Mars Lander:
	Angle de -90° à 90°. Puissance des fusées de 0 à 4.

Pour ce niveau, vous n'avez besoin de contrôler que la puissance des fusées : l'angle doit rester à 0.Le jeu modélise une chute libre sans atmosphère. La gravité sur Mars est de 3,711 m/s². Pour une puissance des fusées de X, on génère une poussée équivalente à X m/s² et on consomme X litres de fuel. Il faut donc une poussée de 4 quasi verticale pour compenser la gravité de Mars.

Pour qu’un atterrissage soit réussi, la capsule doit :
atterrir sur un sol plat
atterrir dans une position verticale (angle = 0°)
la vitesse verticale doit être limitée ( ≤ 40 m/s en valeur absolue)
la vitesse horizontale doit être limitée ( ≤ 20 m/s en valeur absolue)

Souvenez-vous que ce puzzle a été simplifié, ainsi :
la zone d'atterrissage est juste en dessous du robot. Vous pouvez donc ignorer la rotation et toujours indiquer 0 en angle de rotation.
vous n'avez pas besoin de tenir compte des coordonnées de la surface.
il vous suffit que votre vitesse d'atterrissage soit entre 0 et 40m/s.
lorsque la capsule descend vers le sol, la vitesse verticale est négative. Lorsque la capsule s'élève dans les airs, la vitesse verticale est positive.
 	Note
Pour ce premier niveau d'introduction, Mars Lander doit passer un unique test.

Les validateurs sont différents des tests mais restent très similaires. Un programme qui passe un test passera le validateur correspondant sans problème.
 	Entrées du jeu
Le programme doit d'abord lire les données d'initialisation depuis l'entrée standard, puis, dans une boucle infinie, lire depuis l'entrée standard les données relatives à Mars Lander et fournir sur la sortie standard les instructions de mouvement de Mars Lander.
Entrées d'initialisation
Ligne 1 : le nombre surfaceN de points formant le sol de Mars.
Les surfaceN lignes suivantes : un couple d'entiers landX landY donnant les coordonnées d’un point du sol. En reliant les points entre eux de manière séquentielle on obtient la surface de Mars formée de segments. Pour le premier point, landX = 0 et pour le dernier point, landX = 6999.
Entrées pour un tour de jeu
Une ligne unique constituée de 7 entiers : X Y hSpeed vSpeed fuel rotate power
X,Y sont les coordonnées en mètres de la capsule.
hSpeed et vSpeed sont respectivement la vitesse horizontale et la vitesse verticale de Mars Lander (en m/s). Suivant le déplacement de Mars Lander, les vitesses peuvent être négatives.
fuel est la quantité de fuel restant en litre. Quand le fuel vient à manquer, la puissance des fusées tombe à zéro.
rotate est l’angle de rotation de Mars Lander en degré.
power est la puissance des fusées de la capsule.
Sortie pour un tour de jeu
Une ligne unique constituée de 2 entiers : rotate power
rotate est l’angle de rotation souhaité pour Mars Lander. à noter que la rotation effective d’un tour à l’autre est limitée à +/- 15° par rapport à l’angle du tour précedent.
power est la puissance des fusées. 0 = éteintes. 4 = puissance maximum. La puissance effective d'un tour à l'autre est limitée à +/- 1.
Contraintes
2 ≤ surfaceN < 30
0 ≤ X < 7000
0 ≤ Y < 3000
-500 < hSpeed, vSpeed < 500
0 ≤ fuel ≤ 2000
-90 ≤ rotate ≤ 90
0 ≤ power ≤ 4
Temps de réponse pour un tour ≤ 100ms
Exemple
Entrée d'initialisation
6         	(surfaceN) Surface faite de 6 points
0 1500      	(landX landY)
1000 2000	(landX landY)
2000 500	(landX landY) Début zone de plat
3500 500	(landX landY) Fin zone de plat
5000 1500	(landX landY)
6999 1000	(landX landY)
Aucune sortie attendue
Vous pouvez ignorer ceci mais vous devez toutefois lire les données.
Entrée pour le tour 1
2500 2500 0 0 500 0 0 	(X Y hSpeed vSpeed fuel rotate power)
Sortie pour le tour 1
0 3
Entrée pour le tour 2
2500 2499 0 -3 499 0 1 	(X Y hSpeed vSpeed fuel rotate power)
Sortie pour le tour 2
0 3
Entrée pour le tour 3
2500 2495 0 -4 497 0 2 	(X Y hSpeed vSpeed fuel rotate power)
Sortie pour le tour 3
0 2
 */
"
cU2m4sJR,Lyrics,TUYU01,Python,Sunday 27th of August 2023 04:24:31 AM CDT,"import re
import requests
from bs4 import BeautifulSoup

def get_lyrics(query):
    headers = {
        ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36""
    }
    try:
        req = requests.get(f""https://www.google.com/search?q={query.replace(' ', '+')}+lyrics"", headers=headers).text
        soup = BeautifulSoup(req, ""html.parser"")
        data = soup.findAll(""div"", {""data-lyricid"": True})
        if data:
            content = re.sub('</span></div><div.*?>', ""\n</span>"", str(data[0]))
            parse = BeautifulSoup(content, ""html.parser"")
            lyrics = ""\n"".join([x.get_text() for x in parse.find_all(""span"", attrs={""jsname"": True})])
            author = soup.find(""div"", attrs={""class"": ""auw0zb""}).text
            return {""message"": ""success"", ""lyrics"": lyrics, ""author"": author if author else ""unknown"", ""source"": ""google.com""}
        else:
            url = requests.get(f""https://www.musixmatch.com/search/{query.replace(' ', '+')}"", headers=headers).text
            try:
               mxm = re.search('<a class=""title"" href=""(.*?)""', url).group(1)
            except AttributeError:
               return {""message"": ""Sorry, no result found.""}
            if mxm:
                sop = BeautifulSoup(requests.get(f""https://www.musixmatch.com{mxm}"", headers=headers).text, ""html.parser"")
                mxm_data = sop.findAll(class_=""lyrics__content__ok"", text=True)
                if len(mxm_data) > 0:
                   lyrics = ""\n"".join(x.text for x in mxm_data)
                else:
                   lyrics = sop.find(class_=""lyrics__content__warning"", text=True)
                author = sop.select_one('.mxm-track-title__artist-link').text
                return {""message"": ""success"", ""lyrics"": lyrics if lyrics else f""https://www.musixmatch.com{mxm}"", ""author"": author, ""source"": ""musixmatch.com""}
    except Exception as e:
        print(e)
        return ""Sorry, an error occurred.""
    
lyrics = get_lyrics(""miku"")
print(lyrics)"
QcdBywRF,Untitled,Josif_tepe,C++,Sunday 27th of August 2023 04:22:56 AM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
using namespace std;
const int maxn = 50005;
int color[maxn];
int invitation[maxn];
vector<int> graph[maxn];
int main(int argc, const char * argv[]) {
    int n;
    cin >> n;
    for(int i = 0; i < n; i++) {
        cin >> invitation[i];
    }
    int m;
    cin >> m;
    for(int i = 0; i < m; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    queue<int> q;
    int initial_accepts = 0;
    memset(color, 0, sizeof color);
    for(int i = 0; i < n; i++) {
        if(invitation[i] == 1) {
            color[i] = 1;
            q.push(i);
            initial_accepts++;
        }
        if((int) graph[i].size() == 0) {
            color[i] = 0;
        }
    }
    while(!q.empty()) {
        int node = q.front();
        q.pop();
        if(color[node] == 1) {
            for(int neighbour : graph[node]) {
                if(color[neighbour] == 0) {
                    color[neighbour] = 2;
                    q.push(neighbour);
                }
                else if(color[neighbour] == 1) {
                    color[neighbour] = 3;
                    q.push(neighbour);
                }
            }
        }
        else if(color[node] == 2) {
            for(int neighbour : graph[node]) {
                if(color[neighbour] == 0) {
                    color[neighbour] = 1;
                    q.push(neighbour);
                }
                else if(color[neighbour] == 2) {
                    color[neighbour] = 3;
                    q.push(neighbour);
                }
            }
        }
        else if(color[node] == 3) {
            for(int neighbour : graph[node]) {
                if(color[neighbour] != 3) {
                    color[neighbour] = 3;
                    q.push(neighbour);
                }
            }
        }
    }
    for(int i = 0; i < n; i++) {
        if(color[i] == 3) {
            q.push(i);
        }
    }
    vector<bool> visited(n, false);
    while(!q.empty()) {
        int node = q.front();
        q.pop();
        for(int neighbour : graph[node]) {
            if(!visited[neighbour]) {
                visited[neighbour] = true;
                color[neighbour] = 3;
                q.push(neighbour);
            }
        }
    }
    int ones = 0, twos = 0, threes = 0;
    for(int i = 0; i < n; i++) {
        if(color[i] == 1) {
            ones++;
        }
        else if(color[i] == 2) {
            twos++;
        }
        else if(color[i] == 3) {
            threes++;
        }
    }
    int res1 = threes + max(ones, twos);
    cout << max(res1, initial_accepts) << endl;
    return 0;
}
"
in0URm1G,paginator_test,Coolaidman,Python,Sunday 27th of August 2023 04:01:31 AM CDT,"{""embed"": {""title"": ""title"", ""description"": ""description""}}"
L073xueJ,Untitled,Dawate,Lua,Sunday 27th of August 2023 02:50:14 AM CDT,"local component = require(""component"")
for 1, 20 do
component.note_block.trigger()
end"
3MMKhERY,Unreal Engine - video 12,fcamuso,C++,Sunday 27th of August 2023 02:10:58 AM CDT,"//teletrasportatore.h

// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include ""CoreMinimal.h""
#include ""Components/ActorComponent.h""
#include ""Teletrasportatore.generated.h""


UCLASS( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )
class FPS_TEST_API UTeletrasportatore : public UActorComponent
{
	GENERATED_BODY()

public:	
	// Sets default values for this component's properties
	UTeletrasportatore();

protected:
	// Called when the game starts
	virtual void BeginPlay() override;

	UInputComponent* InputComponent;
	

	public:	
	// Called every frame
	virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;
	
	UFUNCTION(BlueprintCallable, Category = ""Movement"")
	 void TentaTeletrasporto(float DeltaTime, bool forzato = false);

private:
	AActor* owner = nullptr;
	float TempoTrascorso = 0.0;

	UPROPERTY(EditAnywhere)
		bool AutoTele = false;
		
};
//==================================================================================
//==================================================================================
//==================================================================================


//teletrasportatore.cpp
// Fill out your copyright notice in the Description page of Project Settings.


#include ""Teletrasportatore.h""

// Sets default values for this component's properties
UTeletrasportatore::UTeletrasportatore()
{
	// Set this component to be initialized when the game starts, and to be ticked every frame.  You can turn these features
	// off to improve performance if you don't need them.
	PrimaryComponentTick.bCanEverTick = true;
	
	// ...
}


// Called when the game starts
void UTeletrasportatore::BeginPlay()
{
	Super::BeginPlay();
	owner = GetOwner();


	// ...
	
}


// Called every frame
void UTeletrasportatore::TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)
{
	Super::TickComponent(DeltaTime, TickType, ThisTickFunction);

	if (!AutoTele) return;

	TentaTeletrasporto(DeltaTime);
}

void UTeletrasportatore::TentaTeletrasporto(float DeltaTime, bool forzato)
{
	TempoTrascorso += DeltaTime;

	if (TempoTrascorso >= 5 || forzato)
	{

		if (FMath::FRand() > 0.99 || forzato)
		{
			TempoTrascorso = 0;

			owner->SetActorLocation(FVector(1500, 1500, 0) + FVector(
				FMath::RandRange(0, 100),
				FMath::RandRange(0, 100),
				400));
		}
	}
}

"
BKqpLwyU,Solving doors in RS by distance to anchor,WarPie90,Delphi,Sunday 27th of August 2023 01:09:24 AM CDT,"program new;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I SRL/osr.simba}

(*
  This solution assumes that you have an anchor that is either perpendicular or parallel to the door
  So it's either in the angle of facing the closed door, or it's facing the open door.

  Concept: 
    Find the door, and find an object which we call anchor, in this case it's a black ledger
    
    Now we can use the distance from the ledger to the door to determine if the door is open. The door state
    can be defined as; if the distance is less than some value we can state that the door is open because
    the door in this state would be closer to the anchor.

    The door is closed if it's above this value. So for example an open door would have a distance between
    18..19, while a closed door would have a distance between 21..22.. we can now say the cutoff between
    the states is approximately 20..

    This implementation, how you choose to attack it is up to you.. so long as you can generate a varying distance
    value between states to something else (an anchor), you can use this concept.  
*)

var
  door,ledger: TPointArray;
  p,q: Vector3;
  me,ledger_pt,door_pt: TPoint;
  ATPA: T2DPointArray;
  LeadgerSearchBox, DoorSearchBox: TBox;
  RSW: TRSWalker;
begin
  RSW.Setup([[2656-500, 2734-500, 2656+500, 2734+500]]);
  RSClient.Image.setFontSize(15);
  RSClient.Image.setFontAntialiasing(False);
  WriteLn RSW.GetMyPos();

  while True do
  begin
    MM2MS.ZoomLevel := Options.GetZoomLevel();

    // my location for efficieny, avoidng computing twice
    me := RSW.GetMyPos();

    // rough area of where the ledger and door is
    LeadgerSearchBox := RSW.GetTileMSEx(me, [2656, 2734]).Expand(10).Bounds();
    DoorSearchBox    := RSW.GetTileMSEx(me, [2646, 2754]).Expand(30).Bounds();

    // find the ledger, and the door tpas
    srl.FindColors(ledger, CTS2(1776416, 1, 0.01, 0.01),  LeadgerSearchBox);
    srl.FindColors(door,   CTS2(1993096, 13, 0.08, 1.02), DoorSearchBox);

    // cluster door just in case of noise... and get the big one
    door := door.Erode(1).Grow(1);
    ATPA := door.Cluster(2);
    door := ATPA.Biggest();

    // cluster ledger just in case of noise... and get the big one
    ATPA := ledger.Cluster(2);
    ledger := ATPA.Biggest();

    // ensure no failure
    if (length(ledger) = 0) or (length(door) = 0) then continue;

    // find the point in the ledger that's closest to the door and vice versa
    // alternatively we could just use the mean and skip this step in many cases.
    ledger.Sort(door.Mean());
    ledger_pt := ledger[0];

    door.Sort(ledger_pt);
    door_pt := door[0];


    // convert to minimap to work in 2d space, so distance is always the same no matter position,
    // camera angle and zoom.
    p := MainScreen.PointToMM(door_pt);
    q := MainScreen.PointToMM(ledger_pt);

    WriteLn p.Distance(q); // write the distance output for debugging

    // draw state on client
    RSClient.Image.Clear();
    if p.Distance(q) <= 20 then
      RSClient.Image.DrawText('Open', Door.Mean(), 1)
    else
      RSClient.Image.DrawText('Closed', Door.Mean(), 1);

    RSClient.Image.DrawTPA(TPAFromLine(door_pt, ledger_pt), 255); // draw distance line
  end;
end."
2PjeuFkx,CodinGame_2023_08_26__22_14_56__nearest_zero.cpp,MonsterScripter,C++,Sunday 27th of August 2023 12:59:59 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <climits>
#include <cstdlib>

using namespace std;

/**
 * Objectif
 * Dans cet exercice, vous devez analyser un relevé de températures pour trouver quelle température se rapproche le plus de zéro.
 * 
 * Exemple de températures
 * Ici, -1 est le plus proche de 0.
 * 
 * Règles
 * Écrivez un programme qui affiche la température la plus proche de 0 parmi les données d'entrée.
 * Si deux nombres sont aussi proches de zéro, alors l'entier positif sera considéré comme étant le plus proche de zéro
 * (par exemple, si les températures sont -5 et 5, alors afficher 5).
 * 
 * Entrées du jeu
 * Votre programme doit lire les données depuis l'entrée standard et écrire le résultat sur la sortie standard.
 * 
 * Entrée
 * Ligne 1 : Le nombre N de températures à analyser.
 * Ligne 2 : Une chaîne de caractères contenant les N températures exprimées sous la forme de nombres entiers allant de -273 à 5526
 * 
 * Sortie
 * Affichez 0 (zéro) si aucune température n'est fournie. Sinon, affichez la température la plus proche de 0.
 * 
 * Contraintes
 * 0 ≤ N < 10000
 * 
 * Exemple
 * Entrée
 * 5
 * 1 -2 -8 4 5
 * Sortie
 * 1
 */

int main()
{
    int n; // Le nombre de températures à analyser
    cin >> n; cin.ignore();
    int nearZero = n != 0 ? abs(INT_MAX) : 0;
    for (int i = 0; i < n; i++) {
        int t; // Une température exprimée sous forme d'un entier allant de -273 à 5526
        cin >> t; cin.ignore();
        nearZero = (abs(t) <= abs(nearZero) ? (abs(t) == nearZero ? abs(t) : t) : nearZero);
    }
    cout << nearZero << endl;
    return EXIT_SUCCESS; // Indique que le programme s'est exécuté avec succès
}
"
cuetWBBb,CodinGame_2023_08_26__20_08_44__planet_attacked.sh,MonsterScripter,Bash,Sunday 27th of August 2023 12:59:22 AM CDT,"#!/bin/bash

# Objectif
# Votre programme doit détruire les vaisseaux ennemis en tirant sur l'ennemi le plus proche à chaque tour.

# Règles
# Les vaisseaux ennemis approchent en ligne droite vers votre canon.
# À chaque début d'un tour de jeu (dans la boucle game loop), vous obtenez les informations des deux ennemis les plus proches :
# - variable enemy1 : le nom de l'ennemi 1.
# - variable dist1 : la distance à laquelle se trouve l'ennemi 1.
# - variable enemy2 : le nom de l'ennemi 2.
# - variable dist2 : la distance à laquelle se trouve l'ennemi 2.
# Avant la fin du tour (fin de la boucle), vous devez indiquer en sortie le nom de l'ennemi le plus proche.
# Pour afficher le nom de l'ennemi le plus proche, vous devez utiliser la variable enemy1 ou enemy2.

# Boucle de jeu
while true; do
    # enemy1: nom de l'ennemi 1
    read -r enemy1
    # dist1: distance jusqu'à l'ennemi 1
    read -r dist1
    # enemy2: nom de l'ennemi 2
    read -r enemy2
    # dist2: distance jusqu'à l'ennemi 2
    read -r dist2
    
    # Condition pour choisir le nom de l'ennemi le plus proche
    if [ ""$dist1"" -lt ""$dist2"" ]; then
        echo ""$enemy1""
    else
        echo ""$enemy2""
    fi
done
"
vYqyEyTr,CodinGame_2023_08_26__19_39_00__largest_ascii.cpp,MonsterScripter,C++,Sunday 27th of August 2023 12:58:44 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>

using namespace std;

/**
 * Objectif
 * Retourner le code ASCII le plus grand parmi les caractères contenus dans le mot !
 *
 * Entrée
 * Ligne 1 : le mot
 *
 * Sortie
 * Ligne 1 : le code ASCII le plus grand
 *
 * Contraintes
 * 1 <= longueur(mot) <= 100
 * Le mot ne contient pas d'espace.
 *
 * Exemple
 * Entrée
 * a
 * Sortie
 * 97
 */

int main()
{
    string word;
    getline(cin, word);
    sort(word.begin(), word.end()); // Trie le mot par ordre croissant des caractères ASCII
    cout << (int) word[word.length() - 1] << endl; // Affiche le code ASCII du dernier caractère (le plus grand)
    return EXIT_SUCCESS;
}
"
WEvs2Jss,CodinGame_2023_08_26__18_45_00__thor.sh,MonsterScripter,Bash,Sunday 27th of August 2023 12:58:29 AM CDT,"#!/bin/bash

width=40
height=18

# lightX: la position X de la lumière de puissance
# lightY: la position Y de la lumière de puissance
# initialTX: la position X initiale de Thor
# initialTY: la position Y initiale de Thor
read -r lightX lightY initialTX initialTY

# Boucle de jeu
while true; do
    # remainingTurns: Le nombre de tours restants pendant lesquels Thor peut se déplacer. Ne pas supprimer cette ligne.
    read -r remainingTurns
    
    # Si la position Y de la lumière est inférieure à la position Y de Thor et que la position Y de Thor est supérieure à 0
    if [[ ""$lightY"" -lt ""$initialTY"" && ""$initialTY"" -gt 0 ]] ; then
        echo ""N""
        ((initialTY--)) # Décrémente la position Y de Thor
    fi

    # Si la position Y de la lumière est supérieure à la position Y de Thor et que la position Y de Thor est inférieure à la hauteur
    if [[ ""$lightY"" -gt ""$initialTY"" && ""$initialTY"" -lt ""$height"" ]] ; then
        echo ""S""
        ((initialTY++)) # Incrémente la position Y de Thor
    fi

    # Si la position X de la lumière est supérieure à la position X de Thor et que la position X de Thor est inférieure à la largeur
    if [[ ""$lightX"" -gt ""$initialTX"" && ""$initialTX"" -lt ""$width"" ]] ; then
        echo ""E""
        ((initialTX++)) # Incrémente la position X de Thor
    fi

    # Si la position X de la lumière est inférieure à la position X de Thor et que la position X de Thor est supérieure à 0
    if [[ ""$lightX"" -lt ""$initialTX"" && ""$initialTX"" -gt 0 ]] ; then
        echo ""W""
        ((initialTX--)) # Décrémente la position X de Thor
    fi

done
"
XbMHm9hj,CodinGame_2023_08_26__18_25_36__stars_string.cpp,MonsterScripter,C++,Sunday 27th of August 2023 12:58:11 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Programme pour encadrer une chaîne de caractères avec des étoiles.
 * 
 * @param a La chaîne de caractères à encadrer
 */
int main() {
    string a;
    getline(cin, a); // Lecture de la chaîne de caractères

    string s1(a.size() + 4, '*'); // Création d'une ligne d'étoiles

    // Affichage de la première ligne d'étoiles
    cout << s1 << endl;

    // Affichage de la ligne encadrant la chaîne avec des étoiles
    cout << ""* "" << a << "" *"" << endl;

    // Affichage de la dernière ligne d'étoiles
    cout << s1 << endl;
    
    return 0; // Retourner 0 pour indiquer que le programme s'est exécuté correctement
}
"
WtqVepP2,CodinGame_2023_08_26__18_24_46__sort_numbers.cpp,MonsterScripter,C++,Sunday 27th of August 2023 12:57:54 AM CDT,"#include iostream
#include string
#include vector
#include algorithm
#include cstdlib  Inclusion de la bibliothèque cstdlib pour le retour EXIT_SUCCESS

using namespace std;


  Résolution de l'exercice de tri de nombres
  en ordre décroissant et affichage.
  
  @param n Le nombre d'entiers à trier et afficher
 
int main() {
    int n;
    cin  n;  Lecture du nombre d'entiers à trier
    cin.ignore();

    vectorint v;
    for (int i = 0; i  n; i++) {
        int digit;
        cin  digit;  Lecture d'un entier
        cin.ignore();
        v.push_back(digit);  Ajout de l'entier au vecteur
    }

     Tri du vecteur en ordre décroissant
    sort(v.begin(), v.end(), [](const int a, const int b) {
        return a  b;
    });

     Affichage des entiers triés
    for (auto const& x  v) {
        cout  x;
    }
    cout  endl;

    return EXIT_SUCCESS;  Retour de la valeur EXIT_SUCCESS pour indiquer que le programme s'est exécuté correctement
}
"
TXbrtyZK,CodinGame_2023_08_26__18_21_49__thor.php,MonsterScripter,PHP,Sunday 27th of August 2023 12:57:38 AM CDT,"<?php

$width = 40;
$height = 18;

// $lightX: the X position of the light of power
// $lightY: the Y position of the light of power
// $initialTx: Thor's starting X position
// $initialTy: Thor's starting Y position
fscanf(STDIN, ""%d %d %d %d"", $lightX, $lightY, $initialTx, $initialTy);

// game loop
while (TRUE)
{
    // $remainingTurns: The remaining amount of turns Thor can move. Do not remove this line.
    fscanf(STDIN, ""%d"", $remainingTurns);
    if ($lightY < $initialTy && $initialTy > 0) {
        echo(""N"");
        $initialTy--;
    }
    if ($lightY > $initialTy && $initialTy < $height) {
        echo(""S"");
        $initialTy++;
    }
    if ($lightX > $initialTx && $initialTx < $width) {
        echo(""E"");
        $initialTx++;
    }
    if ($lightX < $initialTx && $initialTx > 0) {
        echo(""W"");
        $initialTx--;  
    }
    echo(""\n"");
}


/*
 	Objectif
Votre programme doit permettre à Thor de rejoindre l'éclair de puissance.
 	Règles
Thor évolue sur une carte de 40 cases de large et 18 cases de hauteur. Notez que les coordonnées (X et Y) commencent en partant du haut ! Ainsi la case la plus en haut à gauche a pour coordonnées ""X=0,Y=0"" et celle située le plus en bas à droite a pour coordonnées ""X=39,Y=17"".

Au début du programme vous recevez :
la variable lightX : la position X de l'éclair que Thor doit rejoindre.
la variable lightY : la position Y de l'éclair que Thor doit rejoindre.
la variable initialTX : la position X initiale de Thor.
la variable initialTY : la position Y initiale de Thor.
À la fin du tour de jeu, vous devez afficher la direction que Thor doit prendre parmi :

N (Nord)
NE (Nord-Est)
E (Est)
SE (Sud-Est)
S (Sud)
SW (Sud-Ouest)
W (Ouest)
NW (Nord-Ouest)

Chaque déplacement fait bouger Thor de 1 case dans la direction choisie.

Conditions de victoire
Vous gagnez lorsque Thor arrive sur l'éclair de puissance
 
Conditions de défaite
Thor sort de la carte

Note
N'oubliez pas d'exécuter les tests depuis la fenêtre ""Jeu de tests"".
Attention : les tests fournis et les validateurs utilisés pour le calcul du score sont légèrement différents pour éviter les solutions codées en dur
 	Entrées du jeu
Le programme doit d'abord lire les données d'initialisation depuis l'entrée standard, puis, dans une boucle infinie fournir sur la sortie standard les instructions de mouvement de Thor.
Entrées d'initialisation
Ligne 1 : 4 entiers lightX lightY initialTX initialTY. (lightX, lightY) indique la position de l'éclair. (initialTX, initialTY) indique la position initiale de Thor.
Entrée pour un tour de jeu
Ligne 1 : le nombre de déplacements restant pour permettre à Thor de rejoindre l'éclair de puissance remainingTurns. Vous pouvez ignorer cette valeur mais vous devez la lire.
Sortie pour un tour de jeu
Une ligne unique indiquant le mouvement à effectuer : N NE E SE S SW W ou NW
Contraintes
0 ≤ lightX < 40
0 ≤ lightY < 18
0 ≤ initialTX < 40
0 ≤ initialTY < 18
Temps de réponse pour un tour ≤ 100ms

*/

/*

Sortie console

Informations de jeuAction (Sortie standard)Debug (Sortie d'erreurs)
Informations :
Thor's ready to go.
Thor position = (0,0). Light position = (36,17). Energy = 36
00
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (1,1). Light position = (36,17). Energy = 35
01
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (2,2). Light position = (36,17). Energy = 34
02
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (3,3). Light position = (36,17). Energy = 33
03
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (4,4). Light position = (36,17). Energy = 32
04
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (5,5). Light position = (36,17). Energy = 31
05
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (6,6). Light position = (36,17). Energy = 30
06
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (7,7). Light position = (36,17). Energy = 29
07
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (8,8). Light position = (36,17). Energy = 28
08
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (9,9). Light position = (36,17). Energy = 27
09
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (10,10). Light position = (36,17). Energy = 26
10
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (11,11). Light position = (36,17). Energy = 25
11
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (12,12). Light position = (36,17). Energy = 24
12
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (13,13). Light position = (36,17). Energy = 23
13
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (14,14). Light position = (36,17). Energy = 22
14
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (15,15). Light position = (36,17). Energy = 21
15
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (16,16). Light position = (36,17). Energy = 20
16
36
Sortie standard :
SE
Informations :
Thor's moving...
Thor position = (17,17). Light position = (36,17). Energy = 19
17
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (18,17). Light position = (36,17). Energy = 18
18
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (19,17). Light position = (36,17). Energy = 17
19
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (20,17). Light position = (36,17). Energy = 16
20
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (21,17). Light position = (36,17). Energy = 15
21
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (22,17). Light position = (36,17). Energy = 14
22
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (23,17). Light position = (36,17). Energy = 13
23
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (24,17). Light position = (36,17). Energy = 12
24
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (25,17). Light position = (36,17). Energy = 11
25
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (26,17). Light position = (36,17). Energy = 10
26
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (27,17). Light position = (36,17). Energy = 9
27
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (28,17). Light position = (36,17). Energy = 8
28
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (29,17). Light position = (36,17). Energy = 7
29
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (30,17). Light position = (36,17). Energy = 6
30
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (31,17). Light position = (36,17). Energy = 5
31
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (32,17). Light position = (36,17). Energy = 4
32
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (33,17). Light position = (36,17). Energy = 3
33
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (34,17). Light position = (36,17). Energy = 2
34
36
Sortie standard :
E
Informations :
Thor's moving...
Thor position = (35,17). Light position = (36,17). Energy = 1
35
36
Sortie standard :
E
Informations :
Success: Thor reached the flash of power in time!
Thor position = (36,17). Light position = (36,17). Energy = 0

**/
?>"
e1SMY3P1,CodinGame_2023_08_27__07_55_36__mime_type.scala,MonsterScripter,Scala,Sunday 27th of August 2023 12:55:48 AM CDT,"import scala.collection.mutable.Map
import scala.io.StdIn._

/**
 * Objectif
 * Le type MIME est utilisé dans de nombreux protocoles internet pour associer un type de média (html, image, vidéo, ...) avec le contenu envoyé.
 * Vous devez écrire un programme qui permet de détecter le type MIME d'un fichier à partir de son nom.
 *
 * Règles
 * Une table qui associe un type MIME avec une extension de fichier vous est fournie.
 * Une liste de noms de fichier à transférer vous sera aussi fournie et vous devrez déduire pour chacun d'eux, le type MIME à utiliser.
 * L'extension d'un fichier se définit par la partie du nom qui se trouve après le dernier point qui le compose.
 * Si l'extension du fichier est présente dans la table d'association (la casse ne compte pas. ex : TXT est équivalent à txt), alors affichez le type MIME correspondant.
 * S'il n'est pas possible de trouver le type MIME associé à un fichier, ou si le fichier n'a pas d'extensions, affichez UNKNOWN.
 *
 * Entrées du jeu
 * Entrée
 * Ligne 1: Nombre N d’éléments composant la table d'association.
 * Ligne 2 : Nombre Q de noms de fichiers à analyser.
 * N lignes suivantes : Une extension de fichier par ligne et son type MIME correspondant (séparé par un espace).
 * Q lignes suivantes : Un nom de fichier par ligne.
 *
 * Sortie
 * Pour chacun des Q noms de fichiers, afficher sur une ligne le type MIME associé. S'il n'y a pas de correspondance, afficher UNKNOWN.
 *
 * Contraintes
 * 0 < N < 10000
 * 0 < Q < 10000
 * Les extensions de fichiers sont composées d'un maximum de 10 caractères ascii alphanumériques.
 * Les type MIME sont composés d'un maximum de 50 caractères ascii alphanumérique et de ponctuations.
 * Les noms de fichiers sont composés d'un maximum de 256 caractères ascii alphanumériques et points.
 * Il n'y a pas d'espaces dans les noms de fichiers, les extensions et les types MIME.
 *
 * Exemple
 * Entrée
 * 2
 * 4
 * html text/html
 * png image/png
 * test.html
 * noextension
 * portrait.png
 * doc.TXT
 *
 * Sortie
 * text/html
 * UNKNOWN
 * image/png
 * UNKNOWN
 */

object Solution extends App {
    val n = readLine.toInt // Nombre d'éléments constituant la table d'association.
    val q = readLine.toInt // Nombre Q de noms de fichiers à analyser.
    var mtMap: Map[String, String] = Map()
    
    // Remplissage de la table d'association entre les extensions et les types MIME
    for (i <- 0 until n) {
        val Array(ext, mt) = readLine split "" ""
        mtMap = mtMap + (ext.toLowerCase -> mt)
    }
    
    // Analyse des noms de fichiers
    for (i <- 0 until q) {
        val fname = readLine // Un nom de fichier par ligne.
        val fnameSplit = fname.split('.')
        
        if (fnameSplit.length <= 1 || (fname.lastIndexOf('.') == fname.length() - 1)) {
            println(""UNKNOWN"")
        } else {
            val extension = fnameSplit(fnameSplit.length - 1).toLowerCase
            val e: Option[String] = mtMap.get(extension)
            println(if (e.isDefined) e.get else ""UNKNOWN"")
        }
    }
}
"
cEGPv8SN,MOK layout Morse,dksetiavan,JSON,Sunday 27th of August 2023 12:46:36 AM CDT,"OK_Layout_Begin
Name:Kode Morse
[MC:.––––][MC:..–––][MC:...––][MC:....–][MC:.....][MC:–....][MC:––...][MC:–––..][MC:––––.][MC:––––‐]
[MC:––.–][MC:.––].[MC:.–.]–[MC:–.––][MC:..–][MC:..][MC:–––][MC:.––.]
[MC:.–][MC:...][MC:–..][MC:..–.][MC:––.][MC:....][MC:.–––][MC:–.–][MC:.–..][MC:––––]
[MC:––..][MC:––.–][MC:–.–.][MC:...–][MC:–...][MC:–.][MC:––]/
1234567890
qwertyuiop
asdfghjkl[MC:kh]
zxcvbnm/
1234567890
QWERTYUIOP
ASDFGHJKL[MC:KH]
ZXCVBNM/
/[MC:–.––..][MC:–.––.––][MC:–....–][MC:–...––][MC:–..–.]
[MC:...–...–...–][MC:.–..–][MC:...–.][MC:.–.–.][MC:.–...]
[MC:...–.–][MC:........][MC:...–––...][MC:–.––.][MC:–.–]
[MC:.––––.][MC:.–..–.][MC:–.–.–.][MC:–––...][MC:––..––][MC:.–.–.–]
 ()-=/
[MC:VVV][MC:RA][MC:SN][MC:AR][MC:AS]
[MC:SK][MC:HH][MC:SOS][MC:KN]K
'"";:.,
OK_Layout_End
"
kdywHjnK,MOK layout Leet,dksetiavan,JSON,Sunday 27th of August 2023 12:45:05 AM CDT,"OK_Layout_Begin
Name:Leet
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
qw3r7yu10p
45df6hjkl
zxcvbnm
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
q[MC:\\/\\/]3[MC:|2]7[MC:`/][MC:(_)]!0[MC:|D]
45[MC:|)][MC:|=]9[MC:|-|][MC:_|][MC:|<][MC:|_]
2[MC:><]([MC:\\/][MC:|3][MC:|\\|][MC:/\\/\\]
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
qwertyuiop
asdfghjkl
zxcvbnm
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
?[MC:\\|/]3[MC:|2]+[MC:`/][MC:|_|]!0[MC:|>]
45[MC:|)][MC:|#]6[MC:|-|][MC:_)][MC:|(]1
[MC:7_]%([MC:\\/]8[MC:|\\|][MC:|\\/|]
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
[MC:(,)][MC:'//]&[MC:1²][MC:'|'][MC:'/][MC:(_)]![MC:()][MC:|D]
4$[MC:[)][MC:|=]&#[MC:,|][MC:|{]#
[MC:""/_]%([MC:\/]6[MC:(\)][MC:(\/)]
OK_Layout_End
"
vC4atF03,MOK layout AOSP,dksetiavan,YAML,Sunday 27th of August 2023 12:44:03 AM CDT,"{
""title"":""AOSP"",
""onScreen"":{
""main"":[
""[XK:q1][XK:w2][XK:e3][XK:r4][XK:t5][XK:y6][XK:u7][XK:i8][XK:o9][XK:p0]"",
""[XK:a@][XK:s#][XK:d$][XK:f%][XK:g&][XK:h-][XK:j+][XK:k(][XK:l)]"",
""[SHIFT][XK:z*][XK:x\""][XK:c'][XK:v:][XK:b;][XK:n!][XK:m?][DEL]"",
""[123]/[LANGS][SPACE][][][][][XK:.,&%+\""-:'@;/()#!,?][ENTER]""
],

""sym"":[
""~`|[XK:•♣♠♪♥♦]√[XK:πΠ]÷×[XK:¶§]∆"",
""£€$¢[XK:^←↑↓→][XK:°′″][XK:=∞≠≈]{}"",
""[123]\\©®™℅[LB][RB][DEL]"",
""[TOOL]‍[XK:<‹≤«][SPACE][][][XK:>›≥»]‌[ENTER]""
],

""num"":[
""[XK:1½⅓¼⅛][XK:2²⅔][XK:3⅜³¾][XK:4⁴][XK:5⅝]6[XK:7⅞]89[XK:0∅ⁿ]"",
""@#[XK:₹₱£¥€$¢][XK:%‰]&[XK:-—_–·][XK:+±][XK:(<{[][XK:)>}]"",
""[SYM][XK:*†‡★][XK:\"" „“”«»][XK:'‚‘’‹›]:;[XK:!¡][XK:?¿][DEL]"",
""[LOCK],_[SPACE][][][XK:.…][ENTER]""
],

""shiftedAuto"":[
""[XK:q1][XK:w2][XK:e3][XK:r4][XK:t5][XK:y6][XK:u7][XK:i8][XK:o9][XK:p0]"",
""[XK:a@][XK:s#][XK:d$][XK:f%][XK:g&][XK:h-][XK:j+][XK:k(][XK:l)]"",
""[SHIFT][XK:z*][XK:x\""][XK:c'][XK:v:][XK:b;][XK:n!][XK:m?][DEL]"",
""[123]/[LANGS][SPACE][][][][][XK:.,&%+\""-:'@;/()#!,?][ENTER]""
]
}
}
    "
wwsGNjfy,Untitled,PolskieBracie,C#,Sunday 27th of August 2023 12:03:06 AM CDT,"//This code is used to create a Vault game
//User has to figure out the password.

//https://prnt.sc/B4cKkqoT-Q6E - the dialog
//https://prnt.sc/UozgFEiV7FpU - wrong password
//https://prnt.sc/Bujp8gx6YKzL - right password = prize


integer defaultTime = 30;//default cooldown between attempts
integer counter;//used to keep track of time

//Custom function to update Hover Text
setHover(string text, vector color){
    llSetText(text,color,1);    
}

//Internal Channel to Listen for events
integer internalChannel;

//The player that will be trying to open the vault
key av;

//The generated password
integer pass;

//Password Generator - from 000 to
genPass(){
    
    //llFrand() returns a random float from 0 to 9, we must parse to integer
    integer a = (integer)llFrand(9);
    integer b = (integer)llFrand(9);
    integer c = (integer)llFrand(9);
    
    //Concatenate the 3 results into a single password
    pass = (integer)((string)a+""""+(string)b+""""+(string)c);
     
}

default
{
    state_entry()
    {
        //Generate random negative number to be the listener
        internalChannel= (integer) llFrand(250000)*-1;
        
        //Start Listener
        llListen(internalChannel,"""","""","""");
        
        //Generate random password
        genPass();
        
        //update hover text
        setHover(""Help us open this safe and get paid!\n"",<0.000, 1, 0.000>);

    }

    touch_start(integer total_number)
    {
        //Check if someone is already using
        if(av == """"){
            
            //No one is using, lets start;
            //Set player as the person using.
            av = llDetectedKey(0); 
            
            //Send a pop up asking for password
            llTextBox(av,""\nGuess the 3 number password.\n \nFrom 000 to 999\n \nDo not hit ENTER!\n "",internalChannel);  
 
        } else if (av != """" && av == llDetectedKey(0)){
            
            //Same player - Send a pop up asking for password
            llTextBox(av,""\nGuess the 3 number password.\n \nFrom 000 to 999\n \nDo not hit ENTER!\n "",internalChannel); 

        } else {
            
            //Send a warning to this user, vault in use.
            llInstantMessage(llDetectedKey(0),""Someone else is already using it!"");    
        }      
    }
    
    listen(integer channel, string name, key id, string message){
        if((string)pass == message){
            
            //Send public message that this person got the password
            llSay(0,llGetDisplayName(id)+"" was able to open the safe!\nThe Password was ""+(string)pass); 
               
            //Generate random password
            genPass();
            
            //Check if name is valid
            if(llGetInventoryName(INVENTORY_OBJECT,0) != """"){
                
                //Then send it to player
                llGiveInventory(id, llGetInventoryName(INVENTORY_OBJECT,0));
            }
            
            //Now set a longer cooldown
            counter = defaultTime*4;
            
            //Start timer
            llSetTimerEvent(1);
            
            //Clear player key
            av = """";
            
        } else {
            
            //Wrong password
            llInstantMessage(id,""<You try to open the safe but the password does not match and the door does not open."");   

            //Set cooldown
            counter = defaultTime;
            
            //Start Timer
            llSetTimerEvent(1); 
            
            //Clear player key
            av = """";

        }        
    }
    
    timer(){
        
        //If timer is activated, counter should be > than 0
        if(counter > 0){
            
            //remove time
            counter--;
            
            //update hover text
            setHover(""Cooldown...\n""+(string)counter+"" seconds"",<1.000, 0.502, 0.000>);
            
        } else {
            
            // turn off timer
            llSetTimerEvent(0);
            
            //update hover text
            setHover(""Help us open this safe and get paid!\n"",<0.000, 1, 0.000>);
        }    
    }
}
"
0eeyzHJA,(loadstring) 1% Finish - Roblox Game - Script,choosai,Lua,Saturday 26th of August 2023 11:56:44 PM CDT,"loadstring(""https://pastebin.com/raw/2EK8VQxK"")()"
J16mXLid,Prevent Volume Up When Bluetooth Headset Disconnects,Lorenzo501,Autohotkey,Saturday 26th of August 2023 10:45:40 PM CDT,"#Requires AutoHotkey 2.0.5
#NoTrayIcon
SetWinDelay(-1) ; commented-out will make Window functions use a 100ms delay unless a custom delay is specified (zero delay is good for WinExist)
ProcessSetPriority(""High"")
Persistent()

#hotIf MouseIsOver(""ahk_class Shell_TrayWnd"") ; Argument is WinTitle (can add 3 other optional string arguments seperated with a comma)
*Volume_Up::
{
    static taskbar    := ""ahk_class Shell_TrayWnd""
    static previewWnd := ""ahk_class XamlExplorerHostIslandWindow""

    for Wnd in [taskbar, previewWnd] {
        if WinExist(Wnd) {
            WinActivate()
            WinWaitNotActive()
        }
    }
}
#hotIf
*Volume_Up::return

Volume_Up(false)

wmi  := ComObjGet(""winmgmts:"")
sink := ComObject(""WbemScripting.SWbemSink"")
ComObjConnect(sink, ""SINK_"")

wmi.ExecNotificationQueryAsync(sink, ""SELECT * FROM __InstanceCreationEvent WITHIN 1 WHERE TargetInstance ISA `""Win32_PnPEntity`"""")
wmi.ExecNotificationQueryAsync(sink, ""SELECT * FROM __InstanceDeletionEvent WITHIN 1 WHERE TargetInstance ISA `""Win32_PnPEntity`"""")

OnExit(StopListening)

SINK_OnObjectReady(Obj, *)
{
    Event      := (Obj.Path_.Class = ""__InstanceCreationEvent"" ? ""Connected"" : ""Disconnected"")
    DeviceName := Obj.TargetInstance.Name

    if (DeviceName = ""Bluetooth Audio Renderer (2- Bluetooth stereo-audio)"")
        if (Event = ""Connected"")
            Volume_Up(true)
        else
            Hotkey(""*Volume_Up Up"", (*) => (Send(""{Volume_Up}""), ExitApp()), ""On"")
}

StopListening(*) => ComObjConnect(sink)

Volume_Up(hk := """")
{
    status := hk ? ""On"" : ""Off""
    Hotif(""MouseIsOver(`""ahk_class Shell_TrayWnd`"")"")
    Hotkey(""*Volume_Up"", status)
    Hotif()
    Hotkey(""*Volume_Up"", status)
}

MouseIsOver(params_WinTitle_WinText_ExcludeTitle_ExcludeText*) => (MouseGetPos(,, &winId), winId = WinExist(params_WinTitle_WinText_ExcludeTitle_ExcludeText*))"
GEC4AfAm,Spammers and Scammers [8-7/2023],bombaires,HTML,Saturday 26th of August 2023 10:00:57 PM CDT,"<a href=""mailto:mattosbw1@googlemail.com"">mattosbw1@googlemail.com</a>
<a href=""mailto:ma.t.t.o.sbw1@googlemail.com"">ma.t.t.o.sbw1@googlemail.com</a>
<a href=""mailto:mat.t.o.s.bw.1@googlemail.com"">mat.t.o.s.bw.1@googlemail.com</a>
<a href=""mailto:m.a.t.to.sbw.1@googlemail.com"">m.a.t.to.sbw.1@googlemail.com</a>
<a href=""mailto:mattosbw1@googlemail.com"">mattosbw1@googlemail.com</a>
<a href=""mailto:ma.tt.o.sbw.1@googlemail.com"">ma.tt.o.sbw.1@googlemail.com</a>
<a href=""mailto:m.att.o.s.b.w.1@googlemail.com"">m.att.o.s.b.w.1@googlemail.com</a>
<a href=""mailto:ma.tt.o.sb.w1@googlemail.com"">ma.tt.o.sb.w1@googlemail.com</a>
<a href=""mailto:ma.t.to.s.bw.1@googlemail.com"">ma.t.to.s.bw.1@googlemail.com</a>
<a href=""mailto:mat.to.sb.w1@googlemail.com"">mat.to.sb.w1@googlemail.com</a>
<a href=""mailto:m.atto.sb.w1@googlemail.com"">m.atto.sb.w1@googlemail.com</a>
<a href=""mailto:ma.t.t.os.bw.1@googlemail.com"">ma.t.t.os.bw.1@googlemail.com</a>
<a href=""mailto:m.at.t.o.s.bw1@googlemail.com"">m.at.t.o.s.bw1@googlemail.com</a>
<a href=""mailto:m.a.tto.sb.w.1@googlemail.com"">m.a.tto.sb.w.1@googlemail.com</a>
<a href=""mailto:m.at.tos.b.w.1@googlemail.com"">m.at.tos.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.tosb.w.1@googlemail.com"">m.a.t.tosb.w.1@googlemail.com</a>
<a href=""mailto:m.att.osbw.1@googlemail.com"">m.att.osbw.1@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.bw1@googlemail.com"">m.a.t.t.os.bw1@googlemail.com</a>
<a href=""mailto:matto.s.b.w1@googlemail.com"">matto.s.b.w1@googlemail.com</a>
<a href=""mailto:ma.tt.o.s.bw1@googlemail.com"">ma.tt.o.s.bw1@googlemail.com</a>
<a href=""mailto:mat.tos.b.w1@googlemail.com"">mat.tos.b.w1@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.s.bw1@googlemail.com"">m.a.t.t.o.s.bw1@googlemail.com</a>
<a href=""mailto:m.a.t.to.sb.w.1@googlemail.com"">m.a.t.to.sb.w.1@googlemail.com</a>
<a href=""mailto:ma.t.to.s.bw1@googlemail.com"">ma.t.to.s.bw1@googlemail.com</a>
<a href=""mailto:ma.t.t.os.b.w.1@googlemail.com"">ma.t.t.os.b.w.1@googlemail.com</a>
<a href=""mailto:mat.tos.bw.1@googlemail.com"">mat.tos.bw.1@googlemail.com</a>
<a href=""mailto:m.atto.s.b.w1@googlemail.com"">m.atto.s.b.w1@googlemail.com</a>
<a href=""mailto:ma.t.t.o.s.bw1@googlemail.com"">ma.t.t.o.s.bw1@googlemail.com</a>
<a href=""mailto:m.atto.s.bw1@googlemail.com"">m.atto.s.bw1@googlemail.com</a>
<a href=""mailto:m.at.tos.bw.1@googlemail.com"">m.at.tos.bw.1@googlemail.com</a>
<a href=""mailto:ma.ttos.bw.1@googlemail.com"">ma.ttos.bw.1@googlemail.com</a>
<a href=""mailto:m.a.ttosb.w1@googlemail.com"">m.a.ttosb.w1@googlemail.com</a>
<a href=""mailto:m.a.t.to.s.bw1@googlemail.com"">m.a.t.to.s.bw1@googlemail.com</a>
<a href=""mailto:m.at.tosb.w1@googlemail.com"">m.at.tosb.w1@googlemail.com</a>
<a href=""mailto:m.att.osb.w1@googlemail.com"">m.att.osb.w1@googlemail.com</a>
<a href=""mailto:m.attos.b.w.1@googlemail.com"">m.attos.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.ttos.b.w1@googlemail.com"">m.a.ttos.b.w1@googlemail.com</a>
<a href=""mailto:mattos.bw1@googlemail.com"">mattos.bw1@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.b.w1@googlemail.com"">m.a.t.t.os.b.w1@googlemail.com</a>
<a href=""mailto:matto.sb.w1@googlemail.com"">matto.sb.w1@googlemail.com</a>
<a href=""mailto:m.a.tto.sb.w1@googlemail.com"">m.a.tto.sb.w1@googlemail.com</a>
<a href=""mailto:ma.ttos.b.w.1@googlemail.com"">ma.ttos.b.w.1@googlemail.com</a>
<a href=""mailto:m.atto.s.b.w.1@googlemail.com"">m.atto.s.b.w.1@googlemail.com</a>
<a href=""mailto:m.at.to.sbw1@googlemail.com"">m.at.to.sbw1@googlemail.com</a>
<a href=""mailto:m.at.t.os.bw1@googlemail.com"">m.at.t.os.bw1@googlemail.com</a>
<a href=""mailto:m.at.t.os.bw.1@googlemail.com"">m.at.t.os.bw.1@googlemail.com</a>
<a href=""mailto:mattosb.w1@googlemail.com"">mattosb.w1@googlemail.com</a>
<a href=""mailto:ma.t.to.sbw1@googlemail.com"">ma.t.to.sbw1@googlemail.com</a>
<a href=""mailto:mat.to.s.bw.1@googlemail.com"">mat.to.s.bw.1@googlemail.com</a>
<a href=""mailto:matt.osbw1@googlemail.com"">matt.osbw1@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.b.w.1@googlemail.com"">m.a.t.t.os.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.tto.sbw.1@googlemail.com"">m.a.tto.sbw.1@googlemail.com</a>
<a href=""mailto:ma.tto.sb.w.1@googlemail.com"">ma.tto.sb.w.1@googlemail.com</a>
<a href=""mailto:ma.t.to.sb.w1@googlemail.com"">ma.t.to.sb.w1@googlemail.com</a>
<a href=""mailto:mat.tosb.w1@googlemail.com"">mat.tosb.w1@googlemail.com</a>
<a href=""mailto:mat.t.o.s.bw1@googlemail.com"">mat.t.o.s.bw1@googlemail.com</a>
<a href=""mailto:m.a.tt.os.bw1@googlemail.com"">m.a.tt.os.bw1@googlemail.com</a>
<a href=""mailto:m.a.tt.o.s.b.w1@googlemail.com"">m.a.tt.o.s.b.w1@googlemail.com</a>
<a href=""mailto:m.a.t.to.s.bw.1@googlemail.com"">m.a.t.to.s.bw.1@googlemail.com</a>
<a href=""mailto:m.at.t.o.s.b.w.1@googlemail.com"">m.at.t.o.s.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.to.s.b.w.1@googlemail.com"">m.a.t.to.s.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.to.sb.w1@googlemail.com"">m.a.t.to.sb.w1@googlemail.com</a>
<a href=""mailto:m.att.os.b.w.1@googlemail.com"">m.att.os.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.tto.s.bw.1@googlemail.com"">m.a.tto.s.bw.1@googlemail.com</a>
<a href=""mailto:ma.t.tos.bw1@googlemail.com"">ma.t.tos.bw1@googlemail.com</a>
<a href=""mailto:ma.tt.o.sb.w.1@googlemail.com"">ma.tt.o.sb.w.1@googlemail.com</a>
<a href=""mailto:m.a.tt.o.sb.w1@googlemail.com"">m.a.tt.o.sb.w1@googlemail.com</a>
<a href=""mailto:ma.t.t.o.sb.w.1@googlemail.com"">ma.t.t.o.sb.w.1@googlemail.com</a>
<a href=""mailto:m.att.osb.w.1@googlemail.com"">m.att.osb.w.1@googlemail.com</a>
<a href=""mailto:matto.s.bw1@googlemail.com"">matto.s.bw1@googlemail.com</a>
<a href=""mailto:m.att.o.sbw.1@googlemail.com"">m.att.o.sbw.1@googlemail.com</a>
<a href=""mailto:m.a.tto.s.b.w.1@googlemail.com"">m.a.tto.s.b.w.1@googlemail.com</a>
<a href=""mailto:m.attosb.w1@googlemail.com"">m.attosb.w1@googlemail.com</a>
<a href=""mailto:m.a.tt.osb.w1@googlemail.com"">m.a.tt.osb.w1@googlemail.com</a>
<a href=""mailto:mat.t.o.sb.w1@googlemail.com"">mat.t.o.sb.w1@googlemail.com</a>
<a href=""mailto:m.att.o.s.b.w1@googlemail.com"">m.att.o.s.b.w1@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.s.bw.1@googlemail.com"">m.a.t.t.o.s.bw.1@googlemail.com</a>
<a href=""mailto:m.a.t.tos.bw.1@googlemail.com"">m.a.t.tos.bw.1@googlemail.com</a>
<a href=""mailto:m.at.tosb.w.1@googlemail.com"">m.at.tosb.w.1@googlemail.com</a>
<a href=""mailto:mattos.b.w1@googlemail.com"">mattos.b.w1@googlemail.com</a>
<a href=""mailto:m.at.t.o.sbw.1@googlemail.com"">m.at.t.o.sbw.1@googlemail.com</a>
<a href=""mailto:m.a.tt.o.sb.w.1@googlemail.com"">m.a.tt.o.sb.w.1@googlemail.com</a>
<a href=""mailto:m.a.ttos.bw1@googlemail.com"">m.a.ttos.bw1@googlemail.com</a>
<a href=""mailto:matt.osbw.1@googlemail.com"">matt.osbw.1@googlemail.com</a>
<a href=""mailto:mat.t.os.bw.1@googlemail.com"">mat.t.os.bw.1@googlemail.com</a>
<a href=""mailto:matto.sbw1@googlemail.com"">matto.sbw1@googlemail.com</a>
<a href=""mailto:mat.t.osb.w.1@googlemail.com"">mat.t.osb.w.1@googlemail.com</a>
<a href=""mailto:m.att.o.s.bw.1@googlemail.com"">m.att.o.s.bw.1@googlemail.com</a>
<a href=""mailto:mattos.b.w.1@googlemail.com"">mattos.b.w.1@googlemail.com</a>
<a href=""mailto:ma.t.tosbw1@googlemail.com"">ma.t.tosbw1@googlemail.com</a>
<a href=""mailto:m.a.tt.o.sbw1@googlemail.com"">m.a.tt.o.sbw1@googlemail.com</a>
<a href=""mailto:ma.tt.o.s.b.w1@googlemail.com"">ma.tt.o.s.b.w1@googlemail.com</a>
<a href=""mailto:ma.tt.os.b.w.1@googlemail.com"">ma.tt.os.b.w.1@googlemail.com</a>
<a href=""mailto:matt.o.sb.w.1@googlemail.com"">matt.o.sb.w.1@googlemail.com</a>
<a href=""mailto:ma.t.tos.b.w.1@googlemail.com"">ma.t.tos.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.tos.b.w.1@googlemail.com"">m.a.t.tos.b.w.1@googlemail.com</a>
<a href=""mailto:matt.o.s.b.w1@googlemail.com"">matt.o.s.b.w1@googlemail.com</a>
<a href=""mailto:ma.tto.sb.w1@googlemail.com"">ma.tto.sb.w1@googlemail.com</a>
<a href=""mailto:mat.t.o.sbw1@googlemail.com"">mat.t.o.sbw1@googlemail.com</a>
<a href=""mailto:mat.to.sbw1@googlemail.com"">mat.to.sbw1@googlemail.com</a>
<a href=""mailto:m.a.t.tosbw.1@googlemail.com"">m.a.t.tosbw.1@googlemail.com</a>
<a href=""mailto:m.at.to.s.bw.1@googlemail.com"">m.at.to.s.bw.1@googlemail.com</a>
<a href=""mailto:ma.ttosb.w.1@googlemail.com"">ma.ttosb.w.1@googlemail.com</a>
<a href=""mailto:m.a.tto.s.b.w1@googlemail.com"">m.a.tto.s.b.w1@googlemail.com</a>
<a href=""mailto:matt.o.sbw1@googlemail.com"">matt.o.sbw1@googlemail.com</a>
<a href=""mailto:ma.tt.osb.w1@googlemail.com"">ma.tt.osb.w1@googlemail.com</a>
<a href=""mailto:ma.tto.s.b.w.1@googlemail.com"">ma.tto.s.b.w.1@googlemail.com</a>
<a href=""mailto:m.att.o.s.bw1@googlemail.com"">m.att.o.s.bw1@googlemail.com</a>
<a href=""mailto:m.at.t.o.s.b.w1@googlemail.com"">m.at.t.o.s.b.w1@googlemail.com</a>
<a href=""mailto:m.at.tos.b.w1@googlemail.com"">m.at.tos.b.w1@googlemail.com</a>
<a href=""mailto:matt.os.bw.1@googlemail.com"">matt.os.bw.1@googlemail.com</a>
<a href=""mailto:m.at.to.s.b.w1@googlemail.com"">m.at.to.s.b.w1@googlemail.com</a>
<a href=""mailto:mat.t.osbw1@googlemail.com"">mat.t.osbw1@googlemail.com</a>
<a href=""mailto:m.a.tt.o.s.bw1@googlemail.com"">m.a.tt.o.s.bw1@googlemail.com</a>
<a href=""mailto:m.a.tt.os.b.w1@googlemail.com"">m.a.tt.os.b.w1@googlemail.com</a>
<a href=""mailto:ma.tto.sbw1@googlemail.com"">ma.tto.sbw1@googlemail.com</a>
<a href=""mailto:mat.to.s.bw1@googlemail.com"">mat.to.s.bw1@googlemail.com</a>
<a href=""mailto:ma.tt.os.bw.1@googlemail.com"">ma.tt.os.bw.1@googlemail.com</a>
<a href=""mailto:mat.t.o.s.b.w1@googlemail.com"">mat.t.o.s.b.w1@googlemail.com</a>
<a href=""mailto:m.attosbw1@googlemail.com"">m.attosbw1@googlemail.com</a>
<a href=""mailto:ma.t.t.os.bw1@googlemail.com"">ma.t.t.os.bw1@googlemail.com</a>
<a href=""mailto:ma.t.t.o.sbw.1@googlemail.com"">ma.t.t.o.sbw.1@googlemail.com</a>
<a href=""mailto:ma.tt.osb.w.1@googlemail.com"">ma.tt.osb.w.1@googlemail.com</a>
<a href=""mailto:m.at.to.sb.w.1@googlemail.com"">m.at.to.sb.w.1@googlemail.com</a>
<a href=""mailto:mattosb.w.1@googlemail.com"">mattosb.w.1@googlemail.com</a>
<a href=""mailto:m.a.tt.os.b.w.1@googlemail.com"">m.a.tt.os.b.w.1@googlemail.com</a>
<a href=""mailto:ma.t.to.sb.w.1@googlemail.com"">ma.t.to.sb.w.1@googlemail.com</a>
<a href=""mailto:mat.to.sbw.1@googlemail.com"">mat.to.sbw.1@googlemail.com</a>
<a href=""mailto:mat.tosb.w.1@googlemail.com"">mat.tosb.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.bw.1@googlemail.com"">m.a.t.t.os.bw.1@googlemail.com</a>
<a href=""mailto:m.a.t.tosbw1@googlemail.com"">m.a.t.tosbw1@googlemail.com</a>
<a href=""mailto:ma.ttos.bw1@googlemail.com"">ma.ttos.bw1@googlemail.com</a>
<a href=""mailto:m.a.t.t.osbw1@googlemail.com"">m.a.t.t.osbw1@googlemail.com</a>
<a href=""mailto:ma.t.tosbw.1@googlemail.com"">ma.t.tosbw.1@googlemail.com</a>
<a href=""mailto:mat.tos.bw1@googlemail.com"">mat.tos.bw1@googlemail.com</a>
<a href=""mailto:m.at.to.sbw.1@googlemail.com"">m.at.to.sbw.1@googlemail.com</a>
<a href=""mailto:m.a.tto.s.bw1@googlemail.com"">m.a.tto.s.bw1@googlemail.com</a>
<a href=""mailto:m.attos.b.w1@googlemail.com"">m.attos.b.w1@googlemail.com</a>
<a href=""mailto:m.att.o.sbw1@googlemail.com"">m.att.o.sbw1@googlemail.com</a>
<a href=""mailto:mat.t.o.sbw.1@googlemail.com"">mat.t.o.sbw.1@googlemail.com</a>
<a href=""mailto:ma.t.to.s.b.w.1@googlemail.com"">ma.t.to.s.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.tos.bw1@googlemail.com"">m.a.t.tos.bw1@googlemail.com</a>
<a href=""mailto:matto.s.bw.1@googlemail.com"">matto.s.bw.1@googlemail.com</a>
<a href=""mailto:m.at.t.o.s.bw.1@googlemail.com"">m.at.t.o.s.bw.1@googlemail.com</a>
<a href=""mailto:m.a.tt.o.s.bw.1@googlemail.com"">m.a.tt.o.s.bw.1@googlemail.com</a>
<a href=""mailto:m.a.ttos.b.w.1@googlemail.com"">m.a.ttos.b.w.1@googlemail.com</a>
<a href=""mailto:mat.t.osbw.1@googlemail.com"">mat.t.osbw.1@googlemail.com</a>
<a href=""mailto:m.a.t.to.s.b.w1@googlemail.com"">m.a.t.to.s.b.w1@googlemail.com</a>
<a href=""mailto:m.a.t.tosb.w1@googlemail.com"">m.a.t.tosb.w1@googlemail.com</a>
<a href=""mailto:m.at.t.osbw.1@googlemail.com"">m.at.t.osbw.1@googlemail.com</a>
<a href=""mailto:m.a.tt.osbw1@googlemail.com"">m.a.tt.osbw1@googlemail.com</a>
<a href=""mailto:m.att.os.b.w1@googlemail.com"">m.att.os.b.w1@googlemail.com</a>
<a href=""mailto:m.atto.sbw.1@googlemail.com"">m.atto.sbw.1@googlemail.com</a>
<a href=""mailto:mat.tosbw.1@googlemail.com"">mat.tosbw.1@googlemail.com</a>
<a href=""mailto:m.a.t.to.sbw1@googlemail.com"">m.a.t.to.sbw1@googlemail.com</a>
<a href=""mailto:m.attosb.w.1@googlemail.com"">m.attosb.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.sbw.1@googlemail.com"">m.a.t.t.o.sbw.1@googlemail.com</a>
<a href=""mailto:m.a.ttos.bw.1@googlemail.com"">m.a.ttos.bw.1@googlemail.com</a>
<a href=""mailto:ma.t.tosb.w1@googlemail.com"">ma.t.tosb.w1@googlemail.com</a>
<a href=""mailto:ma.tt.os.bw1@googlemail.com"">ma.tt.os.bw1@googlemail.com</a>
<a href=""mailto:m.att.o.sb.w.1@googlemail.com"">m.att.o.sb.w.1@googlemail.com</a>
<a href=""mailto:ma.t.tos.bw.1@googlemail.com"">ma.t.tos.bw.1@googlemail.com</a>
<a href=""mailto:m.a.tt.o.sbw.1@googlemail.com"">m.a.tt.o.sbw.1@googlemail.com</a>
<a href=""mailto:m.atto.s.bw.1@googlemail.com"">m.atto.s.bw.1@googlemail.com</a>
<a href=""mailto:m.att.os.bw1@googlemail.com"">m.att.os.bw1@googlemail.com</a>
<a href=""mailto:m.attosbw.1@googlemail.com"">m.attosbw.1@googlemail.com</a>
<a href=""mailto:m.a.tt.osb.w.1@googlemail.com"">m.a.tt.osb.w.1@googlemail.com</a>
<a href=""mailto:m.a.tt.os.bw.1@googlemail.com"">m.a.tt.os.bw.1@googlemail.com</a>
<a href=""mailto:m.attos.bw1@googlemail.com"">m.attos.bw1@googlemail.com</a>
<a href=""mailto:m.atto.sb.w.1@googlemail.com"">m.atto.sb.w.1@googlemail.com</a>
<a href=""mailto:mat.to.s.b.w1@googlemail.com"">mat.to.s.b.w1@googlemail.com</a>
<a href=""mailto:m.at.t.osb.w1@googlemail.com"">m.at.t.osb.w1@googlemail.com</a>
<a href=""mailto:m.at.t.o.sbw1@googlemail.com"">m.at.t.o.sbw1@googlemail.com</a>
<a href=""mailto:ma.t.tosb.w.1@googlemail.com"">ma.t.tosb.w.1@googlemail.com</a>
<a href=""mailto:mat.t.os.b.w1@googlemail.com"">mat.t.os.b.w1@googlemail.com</a>
<a href=""mailto:m.at.t.o.sb.w1@googlemail.com"">m.at.t.o.sb.w1@googlemail.com</a>
<a href=""mailto:ma.ttos.b.w1@googlemail.com"">ma.ttos.b.w1@googlemail.com</a>
<a href=""mailto:ma.t.to.s.b.w1@googlemail.com"">ma.t.to.s.b.w1@googlemail.com</a>
<a href=""mailto:m.at.tos.bw1@googlemail.com"">m.at.tos.bw1@googlemail.com</a>
<a href=""mailto:ma.tto.s.bw.1@googlemail.com"">ma.tto.s.bw.1@googlemail.com</a>
<a href=""mailto:m.a.t.tos.b.w1@googlemail.com"">m.a.t.tos.b.w1@googlemail.com</a>
<a href=""mailto:ma.t.t.o.s.b.w1@googlemail.com"">ma.t.t.o.s.b.w1@googlemail.com</a>
<a href=""mailto:matt.o.sbw.1@googlemail.com"">matt.o.sbw.1@googlemail.com</a>
<a href=""mailto:m.at.to.sb.w1@googlemail.com"">m.at.to.sb.w1@googlemail.com</a>
<a href=""mailto:ma.tto.s.b.w1@googlemail.com"">ma.tto.s.b.w1@googlemail.com</a>
<a href=""mailto:ma.ttosb.w1@googlemail.com"">ma.ttosb.w1@googlemail.com</a>
<a href=""mailto:mat.t.os.b.w.1@googlemail.com"">mat.t.os.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.tto.sbw1@googlemail.com"">m.a.tto.sbw1@googlemail.com</a>
<a href=""mailto:ma.tto.sbw.1@googlemail.com"">ma.tto.sbw.1@googlemail.com</a>
<a href=""mailto:mat.t.os.bw1@googlemail.com"">mat.t.os.bw1@googlemail.com</a>
<a href=""mailto:matt.osb.w.1@googlemail.com"">matt.osb.w.1@googlemail.com</a>
<a href=""mailto:ma.t.t.osb.w1@googlemail.com"">ma.t.t.osb.w1@googlemail.com</a>
<a href=""mailto:ma.tt.osbw1@googlemail.com"">ma.tt.osbw1@googlemail.com</a>
<a href=""mailto:ma.t.t.osbw1@googlemail.com"">ma.t.t.osbw1@googlemail.com</a>
<a href=""mailto:mat.t.o.s.b.w.1@googlemail.com"">mat.t.o.s.b.w.1@googlemail.com</a>
<a href=""mailto:ma.ttosbw.1@googlemail.com"">ma.ttosbw.1@googlemail.com</a>
<a href=""mailto:matt.o.s.b.w.1@googlemail.com"">matt.o.s.b.w.1@googlemail.com</a>
<a href=""mailto:matt.o.sb.w1@googlemail.com"">matt.o.sb.w1@googlemail.com</a>
<a href=""mailto:matto.s.b.w.1@googlemail.com"">matto.s.b.w.1@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.s.b.w1@googlemail.com"">m.a.t.t.o.s.b.w1@googlemail.com</a>
<a href=""mailto:matt.os.b.w1@googlemail.com"">matt.os.b.w1@googlemail.com</a>
<a href=""mailto:mattosbw2@googlemail.com"">mattosbw2@googlemail.com</a>
<a href=""mailto:ma.tt.o.s.b.w2@googlemail.com"">ma.tt.o.s.b.w2@googlemail.com</a>
<a href=""mailto:mat.t.os.b.w.2@googlemail.com"">mat.t.os.b.w.2@googlemail.com</a>
<a href=""mailto:ma.tto.s.bw2@googlemail.com"">ma.tto.s.bw2@googlemail.com</a>
<a href=""mailto:matt.osb.w2@googlemail.com"">matt.osb.w2@googlemail.com</a>
<a href=""mailto:m.at.to.s.bw.2@googlemail.com"">m.at.to.s.bw.2@googlemail.com</a>
<a href=""mailto:m.a.tt.o.s.bw.2@googlemail.com"">m.a.tt.o.s.bw.2@googlemail.com</a>
<a href=""mailto:ma.tto.s.b.w.2@googlemail.com"">ma.tto.s.b.w.2@googlemail.com</a>
<a href=""mailto:m.att.osbw2@googlemail.com"">m.att.osbw2@googlemail.com</a>
<a href=""mailto:ma.ttosbw.2@googlemail.com"">ma.ttosbw.2@googlemail.com</a>
<a href=""mailto:ma.t.tos.b.w2@googlemail.com"">ma.t.tos.b.w2@googlemail.com</a>
<a href=""mailto:ma.t.t.o.s.bw2@googlemail.com"">ma.t.t.o.s.bw2@googlemail.com</a>
<a href=""mailto:ma.tto.sb.w.2@googlemail.com"">ma.tto.sb.w.2@googlemail.com</a>
<a href=""mailto:matto.s.bw.2@googlemail.com"">matto.s.bw.2@googlemail.com</a>
<a href=""mailto:ma.t.tos.bw.2@googlemail.com"">ma.t.tos.bw.2@googlemail.com</a>
<a href=""mailto:ma.t.t.os.b.w.2@googlemail.com"">ma.t.t.os.b.w.2@googlemail.com</a>
<a href=""mailto:m.a.tt.osbw.2@googlemail.com"">m.a.tt.osbw.2@googlemail.com</a>
<a href=""mailto:ma.tt.osbw.2@googlemail.com"">ma.tt.osbw.2@googlemail.com</a>
<a href=""mailto:m.a.ttos.b.w2@googlemail.com"">m.a.ttos.b.w2@googlemail.com</a>
<a href=""mailto:mat.to.sbw.2@googlemail.com"">mat.to.sbw.2@googlemail.com</a>
<a href=""mailto:m.att.o.s.bw2@googlemail.com"">m.att.o.s.bw2@googlemail.com</a>
<a href=""mailto:m.at.tosb.w2@googlemail.com"">m.at.tosb.w2@googlemail.com</a>
<a href=""mailto:mat.to.sb.w.2@googlemail.com"">mat.to.sb.w.2@googlemail.com</a>
<a href=""mailto:m.a.ttosb.w.2@googlemail.com"">m.a.ttosb.w.2@googlemail.com</a>
<a href=""mailto:ma.t.tos.bw2@googlemail.com"">ma.t.tos.bw2@googlemail.com</a>
<a href=""mailto:m.a.t.t.osb.w2@googlemail.com"">m.a.t.t.osb.w2@googlemail.com</a>
<a href=""mailto:ma.t.t.o.sb.w2@googlemail.com"">ma.t.t.o.sb.w2@googlemail.com</a>
<a href=""mailto:matt.osbw2@googlemail.com"">matt.osbw2@googlemail.com</a>
<a href=""mailto:ma.tt.osb.w2@googlemail.com"">ma.tt.osb.w2@googlemail.com</a>
<a href=""mailto:ma.t.t.o.sb.w.2@googlemail.com"">ma.t.t.o.sb.w.2@googlemail.com</a>
<a href=""mailto:ma.t.to.s.bw2@googlemail.com"">ma.t.to.s.bw2@googlemail.com</a>
<a href=""mailto:mat.t.o.s.b.w.2@googlemail.com"">mat.t.o.s.b.w.2@googlemail.com</a>
<a href=""mailto:m.a.t.to.s.bw2@googlemail.com"">m.a.t.to.s.bw2@googlemail.com</a>
<a href=""mailto:mat.t.o.sbw.2@googlemail.com"">mat.t.o.sbw.2@googlemail.com</a>
<a href=""mailto:mat.t.o.sbw2@googlemail.com"">mat.t.o.sbw2@googlemail.com</a>
<a href=""mailto:matt.os.bw.2@googlemail.com"">matt.os.bw.2@googlemail.com</a>
<a href=""mailto:m.a.t.tosbw.2@googlemail.com"">m.a.t.tosbw.2@googlemail.com</a>
<a href=""mailto:m.at.t.os.b.w2@googlemail.com"">m.at.t.os.b.w2@googlemail.com</a>
<a href=""mailto:mat.t.os.bw.2@googlemail.com"">mat.t.os.bw.2@googlemail.com</a>
<a href=""mailto:m.atto.sbw2@googlemail.com"">m.atto.sbw2@googlemail.com</a>
<a href=""mailto:mat.to.sb.w2@googlemail.com"">mat.to.sb.w2@googlemail.com</a>
<a href=""mailto:m.a.tt.o.s.b.w.2@googlemail.com"">m.a.tt.o.s.b.w.2@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.sbw.2@googlemail.com"">m.a.t.t.o.sbw.2@googlemail.com</a>
<a href=""mailto:mat.tosb.w.2@googlemail.com"">mat.tosb.w.2@googlemail.com</a>
<a href=""mailto:m.at.t.o.sb.w.2@googlemail.com"">m.at.t.o.sb.w.2@googlemail.com</a>
<a href=""mailto:mat.t.os.b.w2@googlemail.com"">mat.t.os.b.w2@googlemail.com</a>
<a href=""mailto:ma.ttosbw2@googlemail.com"">ma.ttosbw2@googlemail.com</a>
<a href=""mailto:m.at.tosbw.2@googlemail.com"">m.at.tosbw.2@googlemail.com</a>
<a href=""mailto:m.a.t.t.osbw.2@googlemail.com"">m.a.t.t.osbw.2@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.s.b.w.2@googlemail.com"">m.a.t.t.o.s.b.w.2@googlemail.com</a>
<a href=""mailto:ma.t.to.sb.w2@googlemail.com"">ma.t.to.sb.w2@googlemail.com</a>
<a href=""mailto:m.attos.bw2@googlemail.com"">m.attos.bw2@googlemail.com</a>
<a href=""mailto:ma.t.to.sbw.2@googlemail.com"">ma.t.to.sbw.2@googlemail.com</a>
<a href=""mailto:m.at.tos.b.w2@googlemail.com"">m.at.tos.b.w2@googlemail.com</a>
<a href=""mailto:m.at.to.sb.w2@googlemail.com"">m.at.to.sb.w2@googlemail.com</a>
<a href=""mailto:mat.t.os.bw2@googlemail.com"">mat.t.os.bw2@googlemail.com</a>
<a href=""mailto:m.at.t.o.s.bw.2@googlemail.com"">m.at.t.o.s.bw.2@googlemail.com</a>
<a href=""mailto:matto.sbw2@googlemail.com"">matto.sbw2@googlemail.com</a>
<a href=""mailto:m.atto.s.b.w2@googlemail.com"">m.atto.s.b.w2@googlemail.com</a>
<a href=""mailto:ma.t.t.o.s.b.w2@googlemail.com"">ma.t.t.o.s.b.w2@googlemail.com</a>
<a href=""mailto:ma.tt.osb.w.2@googlemail.com"">ma.tt.osb.w.2@googlemail.com</a>
<a href=""mailto:ma.t.t.o.sbw2@googlemail.com"">ma.t.t.o.sbw2@googlemail.com</a>
<a href=""mailto:ma.tt.o.sbw.2@googlemail.com"">ma.tt.o.sbw.2@googlemail.com</a>
<a href=""mailto:m.a.t.t.osb.w.2@googlemail.com"">m.a.t.t.osb.w.2@googlemail.com</a>
<a href=""mailto:matt.o.sbw.2@googlemail.com"">matt.o.sbw.2@googlemail.com</a>
<a href=""mailto:mat.t.osbw2@googlemail.com"">mat.t.osbw2@googlemail.com</a>
<a href=""mailto:m.a.ttosbw.2@googlemail.com"">m.a.ttosbw.2@googlemail.com</a>
<a href=""mailto:m.at.t.os.bw.2@googlemail.com"">m.at.t.os.bw.2@googlemail.com</a>
<a href=""mailto:m.a.tto.sbw.2@googlemail.com"">m.a.tto.sbw.2@googlemail.com</a>
<a href=""mailto:m.att.os.b.w2@googlemail.com"">m.att.os.b.w2@googlemail.com</a>
<a href=""mailto:ma.tt.o.s.b.w.2@googlemail.com"">ma.tt.o.s.b.w.2@googlemail.com</a>
<a href=""mailto:ma.t.t.osbw2@googlemail.com"">ma.t.t.osbw2@googlemail.com</a>
<a href=""mailto:m.attos.b.w2@googlemail.com"">m.attos.b.w2@googlemail.com</a>
<a href=""mailto:m.at.tos.bw2@googlemail.com"">m.at.tos.bw2@googlemail.com</a>
<a href=""mailto:m.a.ttos.bw.2@googlemail.com"">m.a.ttos.bw.2@googlemail.com</a>
<a href=""mailto:m.a.tto.s.b.w.2@googlemail.com"">m.a.tto.s.b.w.2@googlemail.com</a>
<a href=""mailto:matto.sb.w2@googlemail.com"">matto.sb.w2@googlemail.com</a>
<a href=""mailto:m.a.t.to.sb.w.2@googlemail.com"">m.a.t.to.sb.w.2@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.b.w.2@googlemail.com"">m.a.t.t.os.b.w.2@googlemail.com</a>
<a href=""mailto:m.a.tt.o.sb.w2@googlemail.com"">m.a.tt.o.sb.w2@googlemail.com</a>
<a href=""mailto:m.a.tt.o.s.bw2@googlemail.com"">m.a.tt.o.s.bw2@googlemail.com</a>
<a href=""mailto:ma.tt.o.sb.w2@googlemail.com"">ma.tt.o.sb.w2@googlemail.com</a>
<a href=""mailto:mat.tosbw.2@googlemail.com"">mat.tosbw.2@googlemail.com</a>
<a href=""mailto:ma.tt.o.s.bw2@googlemail.com"">ma.tt.o.s.bw2@googlemail.com</a>
<a href=""mailto:ma.t.t.osb.w2@googlemail.com"">ma.t.t.osb.w2@googlemail.com</a>
<a href=""mailto:m.at.t.osb.w2@googlemail.com"">m.at.t.osb.w2@googlemail.com</a>
<a href=""mailto:m.at.to.sbw2@googlemail.com"">m.at.to.sbw2@googlemail.com</a>
<a href=""mailto:matt.os.b.w.2@googlemail.com"">matt.os.b.w.2@googlemail.com</a>
<a href=""mailto:mat.t.o.s.b.w2@googlemail.com"">mat.t.o.s.b.w2@googlemail.com</a>
<a href=""mailto:m.at.t.osb.w.2@googlemail.com"">m.at.t.osb.w.2@googlemail.com</a>
<a href=""mailto:ma.tt.o.sb.w.2@googlemail.com"">ma.tt.o.sb.w.2@googlemail.com</a>
<a href=""mailto:matt.o.sb.w2@googlemail.com"">matt.o.sb.w2@googlemail.com</a>
<a href=""mailto:m.a.tt.o.sb.w.2@googlemail.com"">m.a.tt.o.sb.w.2@googlemail.com</a>
<a href=""mailto:m.a.ttos.bw2@googlemail.com"">m.a.ttos.bw2@googlemail.com</a>
<a href=""mailto:matt.os.b.w2@googlemail.com"">matt.os.b.w2@googlemail.com</a>
<a href=""mailto:mat.t.o.s.bw2@googlemail.com"">mat.t.o.s.bw2@googlemail.com</a>
<a href=""mailto:m.a.t.tos.bw.2@googlemail.com"">m.a.t.tos.bw.2@googlemail.com</a>
<a href=""mailto:m.at.to.s.b.w2@googlemail.com"">m.at.to.s.b.w2@googlemail.com</a>
<a href=""mailto:m.at.tos.b.w.2@googlemail.com"">m.at.tos.b.w.2@googlemail.com</a>
<a href=""mailto:m.at.t.o.s.b.w.2@googlemail.com"">m.at.t.o.s.b.w.2@googlemail.com</a>
<a href=""mailto:m.at.t.os.b.w.2@googlemail.com"">m.at.t.os.b.w.2@googlemail.com</a>
<a href=""mailto:m.att.os.bw.2@googlemail.com"">m.att.os.bw.2@googlemail.com</a>
<a href=""mailto:m.attosbw2@googlemail.com"">m.attosbw2@googlemail.com</a>
<a href=""mailto:m.at.to.sbw.2@googlemail.com"">m.at.to.sbw.2@googlemail.com</a>
<a href=""mailto:mattos.bw.2@googlemail.com"">mattos.bw.2@googlemail.com</a>
<a href=""mailto:matto.s.b.w.2@googlemail.com"">matto.s.b.w.2@googlemail.com</a>
<a href=""mailto:m.attosbw.2@googlemail.com"">m.attosbw.2@googlemail.com</a>
<a href=""mailto:ma.t.tosbw2@googlemail.com"">ma.t.tosbw2@googlemail.com</a>
<a href=""mailto:m.att.os.bw2@googlemail.com"">m.att.os.bw2@googlemail.com</a>
<a href=""mailto:m.at.t.osbw2@googlemail.com"">m.at.t.osbw2@googlemail.com</a>
<a href=""mailto:m.a.t.to.sb.w2@googlemail.com"">m.a.t.to.sb.w2@googlemail.com</a>
<a href=""mailto:m.atto.sb.w2@googlemail.com"">m.atto.sb.w2@googlemail.com</a>
<a href=""mailto:ma.t.t.o.sbw.2@googlemail.com"">ma.t.t.o.sbw.2@googlemail.com</a>
<a href=""mailto:m.a.tto.s.bw2@googlemail.com"">m.a.tto.s.bw2@googlemail.com</a>
<a href=""mailto:m.attosb.w2@googlemail.com"">m.attosb.w2@googlemail.com</a>
<a href=""mailto:ma.t.to.sb.w.2@googlemail.com"">ma.t.to.sb.w.2@googlemail.com</a>
<a href=""mailto:m.a.tt.osbw2@googlemail.com"">m.a.tt.osbw2@googlemail.com</a>
<a href=""mailto:m.a.t.tos.b.w.2@googlemail.com"">m.a.t.tos.b.w.2@googlemail.com</a>
<a href=""mailto:ma.t.tos.b.w.2@googlemail.com"">ma.t.tos.b.w.2@googlemail.com</a>
<a href=""mailto:matt.o.sb.w.2@googlemail.com"">matt.o.sb.w.2@googlemail.com</a>
<a href=""mailto:mat.tos.b.w2@googlemail.com"">mat.tos.b.w2@googlemail.com</a>
<a href=""mailto:mat.t.osb.w2@googlemail.com"">mat.t.osb.w2@googlemail.com</a>
<a href=""mailto:m.a.tto.s.bw.2@googlemail.com"">m.a.tto.s.bw.2@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.s.bw.2@googlemail.com"">m.a.t.t.o.s.bw.2@googlemail.com</a>
<a href=""mailto:mat.tos.b.w.2@googlemail.com"">mat.tos.b.w.2@googlemail.com</a>
<a href=""mailto:m.a.tto.sb.w.2@googlemail.com"">m.a.tto.sb.w.2@googlemail.com</a>
<a href=""mailto:m.at.to.s.b.w.2@googlemail.com"">m.at.to.s.b.w.2@googlemail.com</a>
<a href=""mailto:mat.to.sbw2@googlemail.com"">mat.to.sbw2@googlemail.com</a>
<a href=""mailto:m.att.osbw.2@googlemail.com"">m.att.osbw.2@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.s.bw2@googlemail.com"">m.a.t.t.o.s.bw2@googlemail.com</a>
<a href=""mailto:m.atto.s.b.w.2@googlemail.com"">m.atto.s.b.w.2@googlemail.com</a>
<a href=""mailto:m.att.o.sb.w2@googlemail.com"">m.att.o.sb.w2@googlemail.com</a>
<a href=""mailto:ma.ttosb.w.2@googlemail.com"">ma.ttosb.w.2@googlemail.com</a>
<a href=""mailto:m.at.tosb.w.2@googlemail.com"">m.at.tosb.w.2@googlemail.com</a>
<a href=""mailto:m.attos.bw.2@googlemail.com"">m.attos.bw.2@googlemail.com</a>
<a href=""mailto:m.a.ttosbw2@googlemail.com"">m.a.ttosbw2@googlemail.com</a>
<a href=""mailto:m.at.to.sb.w.2@googlemail.com"">m.at.to.sb.w.2@googlemail.com</a>
<a href=""mailto:mat.t.osb.w.2@googlemail.com"">mat.t.osb.w.2@googlemail.com</a>
<a href=""mailto:m.attosb.w.2@googlemail.com"">m.attosb.w.2@googlemail.com</a>
<a href=""mailto:mattosb.w.2@googlemail.com"">mattosb.w.2@googlemail.com</a>
<a href=""mailto:m.atto.sbw.2@googlemail.com"">m.atto.sbw.2@googlemail.com</a>
<a href=""mailto:ma.ttos.bw.2@googlemail.com"">ma.ttos.bw.2@googlemail.com</a>
<a href=""mailto:matt.osb.w.2@googlemail.com"">matt.osb.w.2@googlemail.com</a>
<a href=""mailto:m.att.o.s.bw.2@googlemail.com"">m.att.o.s.bw.2@googlemail.com</a>
<a href=""mailto:mat.to.s.bw.2@googlemail.com"">mat.to.s.bw.2@googlemail.com</a>
<a href=""mailto:ma.t.to.s.b.w2@googlemail.com"">ma.t.to.s.b.w2@googlemail.com</a>
<a href=""mailto:mat.tos.bw2@googlemail.com"">mat.tos.bw2@googlemail.com</a>
<a href=""mailto:m.attos.b.w.2@googlemail.com"">m.attos.b.w.2@googlemail.com</a>
<a href=""mailto:m.att.o.s.b.w.2@googlemail.com"">m.att.o.s.b.w.2@googlemail.com</a>
<a href=""mailto:ma.t.to.sbw2@googlemail.com"">ma.t.to.sbw2@googlemail.com</a>
<a href=""mailto:m.a.tt.osb.w2@googlemail.com"">m.a.tt.osb.w2@googlemail.com</a>
<a href=""mailto:m.at.t.os.bw2@googlemail.com"">m.at.t.os.bw2@googlemail.com</a>
<a href=""mailto:ma.tt.o.s.bw.2@googlemail.com"">ma.tt.o.s.bw.2@googlemail.com</a>
<a href=""mailto:matto.sb.w.2@googlemail.com"">matto.sb.w.2@googlemail.com</a>
<a href=""mailto:m.att.o.sb.w.2@googlemail.com"">m.att.o.sb.w.2@googlemail.com</a>
<a href=""mailto:m.att.os.b.w.2@googlemail.com"">m.att.os.b.w.2@googlemail.com</a>
<a href=""mailto:mattos.b.w2@googlemail.com"">mattos.b.w2@googlemail.com</a>
<a href=""mailto:matt.o.s.b.w2@googlemail.com"">matt.o.s.b.w2@googlemail.com</a>
<a href=""mailto:ma.tto.sbw2@googlemail.com"">ma.tto.sbw2@googlemail.com</a>
<a href=""mailto:m.a.ttos.b.w.2@googlemail.com"">m.a.ttos.b.w.2@googlemail.com</a>
<a href=""mailto:m.a.tt.o.sbw2@googlemail.com"">m.a.tt.o.sbw2@googlemail.com</a>
<a href=""mailto:m.at.t.o.sb.w2@googlemail.com"">m.at.t.o.sb.w2@googlemail.com</a>
<a href=""mailto:mattos.bw2@googlemail.com"">mattos.bw2@googlemail.com</a>
<a href=""mailto:m.a.tt.osb.w.2@googlemail.com"">m.a.tt.osb.w.2@googlemail.com</a>
<a href=""mailto:m.at.tos.bw.2@googlemail.com"">m.at.tos.bw.2@googlemail.com</a>
<a href=""mailto:ma.t.t.os.b.w2@googlemail.com"">ma.t.t.os.b.w2@googlemail.com</a>
<a href=""mailto:mat.to.s.bw2@googlemail.com"">mat.to.s.bw2@googlemail.com</a>
<a href=""mailto:m.a.t.t.o.sb.w.2@googlemail.com"">m.a.t.t.o.sb.w.2@googlemail.com</a>
<a href=""mailto:ma.ttos.b.w2@googlemail.com"">ma.ttos.b.w2@googlemail.com</a>
<a href=""mailto:ma.tt.os.b.w2@googlemail.com"">ma.tt.os.b.w2@googlemail.com</a>
<a href=""mailto:m.a.t.to.s.bw.2@googlemail.com"">m.a.t.to.s.bw.2@googlemail.com</a>
<a href=""mailto:ma.ttos.b.w.2@googlemail.com"">ma.ttos.b.w.2@googlemail.com</a>
<a href=""mailto:m.att.o.sbw.2@googlemail.com"">m.att.o.sbw.2@googlemail.com</a>
<a href=""mailto:matt.osbw.2@googlemail.com"">matt.osbw.2@googlemail.com</a>
<a href=""mailto:m.at.t.o.s.b.w2@googlemail.com"">m.at.t.o.s.b.w2@googlemail.com</a>
<a href=""mailto:m.a.t.to.sbw.2@googlemail.com"">m.a.t.to.sbw.2@googlemail.com</a>
<a href=""mailto:m.a.t.tosb.w2@googlemail.com"">m.a.t.tosb.w2@googlemail.com</a>
<a href=""mailto:m.a.tto.sbw2@googlemail.com"">m.a.tto.sbw2@googlemail.com</a>
<a href=""mailto:ma.tt.os.bw.2@googlemail.com"">ma.tt.os.bw.2@googlemail.com</a>
<a href=""mailto:m.a.tto.sb.w2@googlemail.com"">m.a.tto.sb.w2@googlemail.com</a>
<a href=""mailto:ma.t.t.os.bw2@googlemail.com"">ma.t.t.os.bw2@googlemail.com</a>
<a href=""mailto:mat.t.o.sb.w2@googlemail.com"">mat.t.o.sb.w2@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.bw2@googlemail.com"">m.a.t.t.os.bw2@googlemail.com</a>
<a href=""mailto:mat.to.s.b.w.2@googlemail.com"">mat.to.s.b.w.2@googlemail.com</a>
<a href=""mailto:m.a.tt.o.s.b.w2@googlemail.com"">m.a.tt.o.s.b.w2@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.bw.2@googlemail.com"">m.a.t.t.os.bw.2@googlemail.com</a>
<a href=""mailto:m.a.tt.os.b.w2@googlemail.com"">m.a.tt.os.b.w2@googlemail.com</a>
<a href=""mailto:mat.tosbw2@googlemail.com"">mat.tosbw2@googlemail.com</a>
<a href=""mailto:matt.o.s.bw2@googlemail.com"">matt.o.s.bw2@googlemail.com</a>
<a href=""mailto:mat.to.s.b.w2@googlemail.com"">mat.to.s.b.w2@googlemail.com</a>
<a href=""mailto:m.at.t.osbw.2@googlemail.com"">m.at.t.osbw.2@googlemail.com</a>
<a href=""mailto:mat.tos.bw.2@googlemail.com"">mat.tos.bw.2@googlemail.com</a>
<a href=""mailto:m.att.osb.w.2@googlemail.com"">m.att.osb.w.2@googlemail.com</a>
<a href=""mailto:ma.t.tosb.w.2@googlemail.com"">ma.t.tosb.w.2@googlemail.com</a>
<a href=""mailto:m.a.t.to.s.b.w.2@googlemail.com"">m.a.t.to.s.b.w.2@googlemail.com</a>
<a href=""mailto:mattosbw2@googlemail.com"">mattosbw2@googlemail.com</a>
<a href=""mailto:m.a.t.t.os.b.w2@googlemail.com"">m.a.t.t.os.b.w2@googlemail.com</a>
<a href=""mailto:m.atto.s.bw2@googlemail.com"">m.atto.s.bw2@googlemail.com</a>
<a href=""mailto:ma.tt.o.sbw2@googlemail.com"">ma.tt.o.sbw2@googlemail.com</a>
<a href=""mailto:ma.t.t.osb.w.2@googlemail.com"">ma.t.t.osb.w.2@googlemail.com</a>
<a href=""mailto:mat.t.o.s.bw.2@googlemail.com"">mat.t.o.s.bw.2@googlemail.com</a>
<a href=""mailto:amygmouton@googlemail.com"">amygmouton@googlemail.com</a>
<a href=""mailto:a.my.g.m.ou.ton@googlemail.com"">a.my.g.m.ou.ton@googlemail.com</a>
<a href=""mailto:a.mygm.o.uto.n@googlemail.com"">a.mygm.o.uto.n@googlemail.com</a>
<a href=""mailto:am.y.g.m.out.on@googlemail.com"">am.y.g.m.out.on@googlemail.com</a>
<a href=""mailto:amy.gm.o.u.ton@googlemail.com"">amy.gm.o.u.ton@googlemail.com</a>
<a href=""mailto:amyg.m.o.ut.on@googlemail.com"">amyg.m.o.ut.on@googlemail.com</a>
<a href=""mailto:a.my.g.m.ou.t.o.n@googlemail.com"">a.my.g.m.ou.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.ygm.ou.ton@googlemail.com"">a.m.ygm.ou.ton@googlemail.com</a>
<a href=""mailto:am.y.gm.o.u.to.n@googlemail.com"">am.y.gm.o.u.to.n@googlemail.com</a>
<a href=""mailto:am.yg.m.out.on@googlemail.com"">am.yg.m.out.on@googlemail.com</a>
<a href=""mailto:amy.g.mou.t.o.n@googlemail.com"">amy.g.mou.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.mo.uto.n@googlemail.com"">a.m.y.g.mo.uto.n@googlemail.com</a>
<a href=""mailto:amygm.out.o.n@googlemail.com"">amygm.out.o.n@googlemail.com</a>
<a href=""mailto:amy.gmou.t.on@googlemail.com"">amy.gmou.t.on@googlemail.com</a>
<a href=""mailto:am.y.gm.ou.to.n@googlemail.com"">am.y.gm.ou.to.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.m.ou.t.o.n@googlemail.com"">a.m.y.g.m.ou.t.o.n@googlemail.com</a>
<a href=""mailto:amy.g.mo.u.t.o.n@googlemail.com"">amy.g.mo.u.t.o.n@googlemail.com</a>
<a href=""mailto:am.y.gmo.u.ton@googlemail.com"">am.y.gmo.u.ton@googlemail.com</a>
<a href=""mailto:a.m.y.g.mo.ut.o.n@googlemail.com"">a.m.y.g.mo.ut.o.n@googlemail.com</a>
<a href=""mailto:am.y.g.m.ou.ton@googlemail.com"">am.y.g.m.ou.ton@googlemail.com</a>
<a href=""mailto:a.my.g.mo.u.t.o.n@googlemail.com"">a.my.g.mo.u.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.ygmout.on@googlemail.com"">a.m.ygmout.on@googlemail.com</a>
<a href=""mailto:a.m.yg.mout.on@googlemail.com"">a.m.yg.mout.on@googlemail.com</a>
<a href=""mailto:amy.gm.outo.n@googlemail.com"">amy.gm.outo.n@googlemail.com</a>
<a href=""mailto:am.ygmout.o.n@googlemail.com"">am.ygmout.o.n@googlemail.com</a>
<a href=""mailto:a.mygm.ou.ton@googlemail.com"">a.mygm.ou.ton@googlemail.com</a>
<a href=""mailto:a.mygm.o.u.t.on@googlemail.com"">a.mygm.o.u.t.on@googlemail.com</a>
<a href=""mailto:amy.g.mou.ton@googlemail.com"">amy.g.mou.ton@googlemail.com</a>
<a href=""mailto:a.my.g.mo.uto.n@googlemail.com"">a.my.g.mo.uto.n@googlemail.com</a>
<a href=""mailto:a.my.gmou.ton@googlemail.com"">a.my.gmou.ton@googlemail.com</a>
<a href=""mailto:amygm.out.on@googlemail.com"">amygm.out.on@googlemail.com</a>
<a href=""mailto:amy.g.mo.ut.o.n@googlemail.com"">amy.g.mo.ut.o.n@googlemail.com</a>
<a href=""mailto:a.myg.mou.t.on@googlemail.com"">a.myg.mou.t.on@googlemail.com</a>
<a href=""mailto:a.my.g.m.o.ut.o.n@googlemail.com"">a.my.g.m.o.ut.o.n@googlemail.com</a>
<a href=""mailto:amyg.mout.o.n@googlemail.com"">amyg.mout.o.n@googlemail.com</a>
<a href=""mailto:am.yg.mout.on@googlemail.com"">am.yg.mout.on@googlemail.com</a>
<a href=""mailto:a.m.ygmo.uto.n@googlemail.com"">a.m.ygmo.uto.n@googlemail.com</a>
<a href=""mailto:a.m.ygmout.o.n@googlemail.com"">a.m.ygmout.o.n@googlemail.com</a>
<a href=""mailto:a.mygm.o.ut.on@googlemail.com"">a.mygm.o.ut.on@googlemail.com</a>
<a href=""mailto:a.myg.m.o.uto.n@googlemail.com"">a.myg.m.o.uto.n@googlemail.com</a>
<a href=""mailto:a.mygmou.ton@googlemail.com"">a.mygmou.ton@googlemail.com</a>
<a href=""mailto:am.yg.mo.u.to.n@googlemail.com"">am.yg.mo.u.to.n@googlemail.com</a>
<a href=""mailto:a.m.ygmo.ut.on@googlemail.com"">a.m.ygmo.ut.on@googlemail.com</a>
<a href=""mailto:am.ygm.o.ut.on@googlemail.com"">am.ygm.o.ut.on@googlemail.com</a>
<a href=""mailto:a.m.yg.m.out.on@googlemail.com"">a.m.yg.m.out.on@googlemail.com</a>
<a href=""mailto:a.my.gmo.u.t.o.n@googlemail.com"">a.my.gmo.u.t.o.n@googlemail.com</a>
<a href=""mailto:amygmouton@googlemail.com"">amygmouton@googlemail.com</a>
<a href=""mailto:a.myg.mou.t.o.n@googlemail.com"">a.myg.mou.t.o.n@googlemail.com</a>
<a href=""mailto:am.y.g.m.o.ut.o.n@googlemail.com"">am.y.g.m.o.ut.o.n@googlemail.com</a>
<a href=""mailto:a.m.y.gm.ou.t.o.n@googlemail.com"">a.m.y.gm.ou.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.yg.m.outo.n@googlemail.com"">a.m.yg.m.outo.n@googlemail.com</a>
<a href=""mailto:amyg.mo.ut.on@googlemail.com"">amyg.mo.ut.on@googlemail.com</a>
<a href=""mailto:am.y.g.mo.uto.n@googlemail.com"">am.y.g.mo.uto.n@googlemail.com</a>
<a href=""mailto:a.m.y.gmouto.n@googlemail.com"">a.m.y.gmouto.n@googlemail.com</a>
<a href=""mailto:am.y.g.m.o.uton@googlemail.com"">am.y.g.m.o.uton@googlemail.com</a>
<a href=""mailto:am.ygmo.uton@googlemail.com"">am.ygmo.uton@googlemail.com</a>
<a href=""mailto:am.y.gm.o.u.t.o.n@googlemail.com"">am.y.gm.o.u.t.o.n@googlemail.com</a>
<a href=""mailto:am.y.gmou.t.o.n@googlemail.com"">am.y.gmou.t.o.n@googlemail.com</a>
<a href=""mailto:amy.gmo.ut.on@googlemail.com"">amy.gmo.ut.on@googlemail.com</a>
<a href=""mailto:a.mygmouton@googlemail.com"">a.mygmouton@googlemail.com</a>
<a href=""mailto:a.my.gm.ou.t.on@googlemail.com"">a.my.gm.ou.t.on@googlemail.com</a>
<a href=""mailto:am.yg.mou.t.on@googlemail.com"">am.yg.mou.t.on@googlemail.com</a>
<a href=""mailto:amy.gm.ou.t.o.n@googlemail.com"">amy.gm.ou.t.o.n@googlemail.com</a>
<a href=""mailto:am.y.g.m.outo.n@googlemail.com"">am.y.g.m.outo.n@googlemail.com</a>
<a href=""mailto:a.m.y.gmo.uton@googlemail.com"">a.m.y.gmo.uton@googlemail.com</a>
<a href=""mailto:a.my.gm.o.uton@googlemail.com"">a.my.gm.o.uton@googlemail.com</a>
<a href=""mailto:a.m.ygmou.ton@googlemail.com"">a.m.ygmou.ton@googlemail.com</a>
<a href=""mailto:am.y.gmout.o.n@googlemail.com"">am.y.gmout.o.n@googlemail.com</a>
<a href=""mailto:a.mygm.o.ut.o.n@googlemail.com"">a.mygm.o.ut.o.n@googlemail.com</a>
<a href=""mailto:am.y.gm.out.o.n@googlemail.com"">am.y.gm.out.o.n@googlemail.com</a>
<a href=""mailto:amyg.m.ou.t.on@googlemail.com"">amyg.m.ou.t.on@googlemail.com</a>
<a href=""mailto:a.m.y.gm.o.u.t.on@googlemail.com"">a.m.y.gm.o.u.t.on@googlemail.com</a>
<a href=""mailto:a.m.y.gm.out.o.n@googlemail.com"">a.m.y.gm.out.o.n@googlemail.com</a>
<a href=""mailto:a.myg.mo.uton@googlemail.com"">a.myg.mo.uton@googlemail.com</a>
<a href=""mailto:amy.g.m.o.uto.n@googlemail.com"">amy.g.m.o.uto.n@googlemail.com</a>
<a href=""mailto:am.ygm.o.ut.o.n@googlemail.com"">am.ygm.o.ut.o.n@googlemail.com</a>
<a href=""mailto:a.my.g.m.out.o.n@googlemail.com"">a.my.g.m.out.o.n@googlemail.com</a>
<a href=""mailto:amy.gmou.t.o.n@googlemail.com"">amy.gmou.t.o.n@googlemail.com</a>
<a href=""mailto:amygmo.u.ton@googlemail.com"">amygmo.u.ton@googlemail.com</a>
<a href=""mailto:a.my.gmouton@googlemail.com"">a.my.gmouton@googlemail.com</a>
<a href=""mailto:am.ygm.outo.n@googlemail.com"">am.ygm.outo.n@googlemail.com</a>
<a href=""mailto:am.y.gm.o.u.ton@googlemail.com"">am.y.gm.o.u.ton@googlemail.com</a>
<a href=""mailto:a.m.y.g.mouton@googlemail.com"">a.m.y.g.mouton@googlemail.com</a>
<a href=""mailto:a.m.y.gm.o.u.ton@googlemail.com"">a.m.y.gm.o.u.ton@googlemail.com</a>
<a href=""mailto:a.mygmou.t.o.n@googlemail.com"">a.mygmou.t.o.n@googlemail.com</a>
<a href=""mailto:amy.g.m.o.ut.o.n@googlemail.com"">amy.g.m.o.ut.o.n@googlemail.com</a>
<a href=""mailto:am.y.gm.o.ut.on@googlemail.com"">am.y.gm.o.ut.on@googlemail.com</a>
<a href=""mailto:am.y.g.m.o.u.t.on@googlemail.com"">am.y.g.m.o.u.t.on@googlemail.com</a>
<a href=""mailto:a.m.y.gm.outon@googlemail.com"">a.m.y.gm.outon@googlemail.com</a>
<a href=""mailto:a.m.y.g.m.o.u.t.o.n@googlemail.com"">a.m.y.g.m.o.u.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.yg.m.out.o.n@googlemail.com"">a.m.yg.m.out.o.n@googlemail.com</a>
<a href=""mailto:a.myg.mou.to.n@googlemail.com"">a.myg.mou.to.n@googlemail.com</a>
<a href=""mailto:a.my.g.mo.uton@googlemail.com"">a.my.g.mo.uton@googlemail.com</a>
<a href=""mailto:am.yg.mou.t.o.n@googlemail.com"">am.yg.mou.t.o.n@googlemail.com</a>
<a href=""mailto:a.mygmo.u.t.o.n@googlemail.com"">a.mygmo.u.t.o.n@googlemail.com</a>
<a href=""mailto:amy.g.mout.on@googlemail.com"">amy.g.mout.on@googlemail.com</a>
<a href=""mailto:a.m.y.gmo.u.t.o.n@googlemail.com"">a.m.y.gmo.u.t.o.n@googlemail.com</a>
<a href=""mailto:a.mygmou.to.n@googlemail.com"">a.mygmou.to.n@googlemail.com</a>
<a href=""mailto:a.mygm.ou.to.n@googlemail.com"">a.mygm.ou.to.n@googlemail.com</a>
<a href=""mailto:am.ygmouto.n@googlemail.com"">am.ygmouto.n@googlemail.com</a>
<a href=""mailto:am.y.gmo.ut.o.n@googlemail.com"">am.y.gmo.ut.o.n@googlemail.com</a>
<a href=""mailto:amygmou.t.on@googlemail.com"">amygmou.t.on@googlemail.com</a>
<a href=""mailto:a.m.y.gmouton@googlemail.com"">a.m.y.gmouton@googlemail.com</a>
<a href=""mailto:a.my.gmout.on@googlemail.com"">a.my.gmout.on@googlemail.com</a>
<a href=""mailto:a.my.gmo.ut.o.n@googlemail.com"">a.my.gmo.ut.o.n@googlemail.com</a>
<a href=""mailto:a.m.yg.m.ou.t.on@googlemail.com"">a.m.yg.m.ou.t.on@googlemail.com</a>
<a href=""mailto:a.m.y.g.mo.u.t.o.n@googlemail.com"">a.m.y.g.mo.u.t.o.n@googlemail.com</a>
<a href=""mailto:a.my.g.mout.on@googlemail.com"">a.my.g.mout.on@googlemail.com</a>
<a href=""mailto:a.m.y.g.mo.ut.on@googlemail.com"">a.m.y.g.mo.ut.on@googlemail.com</a>
<a href=""mailto:amy.gmo.uton@googlemail.com"">amy.gmo.uton@googlemail.com</a>
<a href=""mailto:am.yg.m.o.ut.on@googlemail.com"">am.yg.m.o.ut.on@googlemail.com</a>
<a href=""mailto:a.m.ygm.o.uto.n@googlemail.com"">a.m.ygm.o.uto.n@googlemail.com</a>
<a href=""mailto:a.m.y.gmou.t.o.n@googlemail.com"">a.m.y.gmou.t.o.n@googlemail.com</a>
<a href=""mailto:a.mygm.out.on@googlemail.com"">a.mygm.out.on@googlemail.com</a>
<a href=""mailto:am.ygmou.to.n@googlemail.com"">am.ygmou.to.n@googlemail.com</a>
<a href=""mailto:am.y.gm.o.ut.o.n@googlemail.com"">am.y.gm.o.ut.o.n@googlemail.com</a>
<a href=""mailto:amyg.mo.ut.o.n@googlemail.com"">amyg.mo.ut.o.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.mout.on@googlemail.com"">a.m.y.g.mout.on@googlemail.com</a>
<a href=""mailto:a.mygmo.u.t.on@googlemail.com"">a.mygmo.u.t.on@googlemail.com</a>
<a href=""mailto:a.my.gm.out.on@googlemail.com"">a.my.gm.out.on@googlemail.com</a>
<a href=""mailto:a.m.y.g.mouto.n@googlemail.com"">a.m.y.g.mouto.n@googlemail.com</a>
<a href=""mailto:amyg.mouton@googlemail.com"">amyg.mouton@googlemail.com</a>
<a href=""mailto:a.m.ygm.ou.to.n@googlemail.com"">a.m.ygm.ou.to.n@googlemail.com</a>
<a href=""mailto:amyg.mo.uto.n@googlemail.com"">amyg.mo.uto.n@googlemail.com</a>
<a href=""mailto:a.m.yg.mou.t.on@googlemail.com"">a.m.yg.mou.t.on@googlemail.com</a>
<a href=""mailto:am.ygm.ou.ton@googlemail.com"">am.ygm.ou.ton@googlemail.com</a>
<a href=""mailto:a.my.gm.outo.n@googlemail.com"">a.my.gm.outo.n@googlemail.com</a>
<a href=""mailto:amygmo.uto.n@googlemail.com"">amygmo.uto.n@googlemail.com</a>
<a href=""mailto:amy.gm.o.uto.n@googlemail.com"">amy.gm.o.uto.n@googlemail.com</a>
<a href=""mailto:a.my.gmo.ut.on@googlemail.com"">a.my.gmo.ut.on@googlemail.com</a>
<a href=""mailto:am.yg.mo.u.t.o.n@googlemail.com"">am.yg.mo.u.t.o.n@googlemail.com</a>
<a href=""mailto:amygm.ou.to.n@googlemail.com"">amygm.ou.to.n@googlemail.com</a>
<a href=""mailto:amy.gmo.u.to.n@googlemail.com"">amy.gmo.u.to.n@googlemail.com</a>
<a href=""mailto:amyg.m.o.u.t.on@googlemail.com"">amyg.m.o.u.t.on@googlemail.com</a>
<a href=""mailto:a.m.y.gmo.uto.n@googlemail.com"">a.m.y.gmo.uto.n@googlemail.com</a>
<a href=""mailto:am.yg.mout.o.n@googlemail.com"">am.yg.mout.o.n@googlemail.com</a>
<a href=""mailto:am.y.gmo.uto.n@googlemail.com"">am.y.gmo.uto.n@googlemail.com</a>
<a href=""mailto:am.yg.m.o.ut.o.n@googlemail.com"">am.yg.m.o.ut.o.n@googlemail.com</a>
<a href=""mailto:am.y.g.m.ou.to.n@googlemail.com"">am.y.g.m.ou.to.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.m.o.uton@googlemail.com"">a.m.y.g.m.o.uton@googlemail.com</a>
<a href=""mailto:a.m.y.gm.ou.ton@googlemail.com"">a.m.y.gm.ou.ton@googlemail.com</a>
<a href=""mailto:a.mygmo.ut.o.n@googlemail.com"">a.mygmo.ut.o.n@googlemail.com</a>
<a href=""mailto:amy.gm.out.on@googlemail.com"">amy.gm.out.on@googlemail.com</a>
<a href=""mailto:amy.g.mou.to.n@googlemail.com"">amy.g.mou.to.n@googlemail.com</a>
<a href=""mailto:am.ygmo.u.t.o.n@googlemail.com"">am.ygmo.u.t.o.n@googlemail.com</a>
<a href=""mailto:am.yg.m.ou.t.on@googlemail.com"">am.yg.m.ou.t.on@googlemail.com</a>
<a href=""mailto:amygm.o.uton@googlemail.com"">amygm.o.uton@googlemail.com</a>
<a href=""mailto:amy.gm.ou.t.on@googlemail.com"">amy.gm.ou.t.on@googlemail.com</a>
<a href=""mailto:a.m.yg.mo.u.t.o.n@googlemail.com"">a.m.yg.mo.u.t.o.n@googlemail.com</a>
<a href=""mailto:am.ygm.out.o.n@googlemail.com"">am.ygm.out.o.n@googlemail.com</a>
<a href=""mailto:a.m.yg.mou.t.o.n@googlemail.com"">a.m.yg.mou.t.o.n@googlemail.com</a>
<a href=""mailto:a.mygmo.u.to.n@googlemail.com"">a.mygmo.u.to.n@googlemail.com</a>
<a href=""mailto:amygm.ou.t.on@googlemail.com"">amygm.ou.t.on@googlemail.com</a>
<a href=""mailto:amygm.o.ut.o.n@googlemail.com"">amygm.o.ut.o.n@googlemail.com</a>
<a href=""mailto:a.myg.m.o.u.t.o.n@googlemail.com"">a.myg.m.o.u.t.o.n@googlemail.com</a>
<a href=""mailto:am.ygm.out.on@googlemail.com"">am.ygm.out.on@googlemail.com</a>
<a href=""mailto:am.yg.m.ou.to.n@googlemail.com"">am.yg.m.ou.to.n@googlemail.com</a>
<a href=""mailto:a.myg.m.o.u.to.n@googlemail.com"">a.myg.m.o.u.to.n@googlemail.com</a>
<a href=""mailto:amygmo.u.t.o.n@googlemail.com"">amygmo.u.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.mo.u.t.on@googlemail.com"">a.m.y.g.mo.u.t.on@googlemail.com</a>
<a href=""mailto:a.m.ygm.ou.t.on@googlemail.com"">a.m.ygm.ou.t.on@googlemail.com</a>
<a href=""mailto:a.myg.m.out.on@googlemail.com"">a.myg.m.out.on@googlemail.com</a>
<a href=""mailto:am.y.g.mou.t.on@googlemail.com"">am.y.g.mou.t.on@googlemail.com</a>
<a href=""mailto:am.yg.m.outo.n@googlemail.com"">am.yg.m.outo.n@googlemail.com</a>
<a href=""mailto:a.m.y.gmo.u.to.n@googlemail.com"">a.m.y.gmo.u.to.n@googlemail.com</a>
<a href=""mailto:a.my.g.mou.ton@googlemail.com"">a.my.g.mou.ton@googlemail.com</a>
<a href=""mailto:amy.gm.o.ut.on@googlemail.com"">amy.gm.o.ut.on@googlemail.com</a>
<a href=""mailto:a.m.yg.m.o.ut.o.n@googlemail.com"">a.m.yg.m.o.ut.o.n@googlemail.com</a>
<a href=""mailto:am.ygmouton@googlemail.com"">am.ygmouton@googlemail.com</a>
<a href=""mailto:a.m.yg.m.outon@googlemail.com"">a.m.yg.m.outon@googlemail.com</a>
<a href=""mailto:a.m.yg.mou.ton@googlemail.com"">a.m.yg.mou.ton@googlemail.com</a>
<a href=""mailto:a.m.y.g.m.outon@googlemail.com"">a.m.y.g.m.outon@googlemail.com</a>
<a href=""mailto:amyg.m.o.u.t.o.n@googlemail.com"">amyg.m.o.u.t.o.n@googlemail.com</a>
<a href=""mailto:amygmo.ut.on@googlemail.com"">amygmo.ut.on@googlemail.com</a>
<a href=""mailto:a.mygm.outon@googlemail.com"">a.mygm.outon@googlemail.com</a>
<a href=""mailto:amyg.mou.t.on@googlemail.com"">amyg.mou.t.on@googlemail.com</a>
<a href=""mailto:am.ygm.ou.t.o.n@googlemail.com"">am.ygm.ou.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.m.o.ut.on@googlemail.com"">a.m.y.g.m.o.ut.on@googlemail.com</a>
<a href=""mailto:amygm.ou.t.o.n@googlemail.com"">amygm.ou.t.o.n@googlemail.com</a>
<a href=""mailto:a.my.g.mouto.n@googlemail.com"">a.my.g.mouto.n@googlemail.com</a>
<a href=""mailto:amy.gm.out.o.n@googlemail.com"">amy.gm.out.o.n@googlemail.com</a>
<a href=""mailto:am.y.gmou.ton@googlemail.com"">am.y.gmou.ton@googlemail.com</a>
<a href=""mailto:a.m.y.g.m.outo.n@googlemail.com"">a.m.y.g.m.outo.n@googlemail.com</a>
<a href=""mailto:amy.gm.o.ut.o.n@googlemail.com"">amy.gm.o.ut.o.n@googlemail.com</a>
<a href=""mailto:am.ygm.outon@googlemail.com"">am.ygm.outon@googlemail.com</a>
<a href=""mailto:a.m.yg.m.ou.ton@googlemail.com"">a.m.yg.m.ou.ton@googlemail.com</a>
<a href=""mailto:a.myg.mo.u.ton@googlemail.com"">a.myg.mo.u.ton@googlemail.com</a>
<a href=""mailto:a.m.ygmouto.n@googlemail.com"">a.m.ygmouto.n@googlemail.com</a>
<a href=""mailto:a.m.yg.mo.u.ton@googlemail.com"">a.m.yg.mo.u.ton@googlemail.com</a>
<a href=""mailto:amyg.mo.u.t.on@googlemail.com"">amyg.mo.u.t.on@googlemail.com</a>
<a href=""mailto:amy.g.m.out.o.n@googlemail.com"">amy.g.m.out.o.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.mo.u.ton@googlemail.com"">a.m.y.g.mo.u.ton@googlemail.com</a>
<a href=""mailto:a.my.gmo.u.ton@googlemail.com"">a.my.gmo.u.ton@googlemail.com</a>
<a href=""mailto:am.yg.m.ou.ton@googlemail.com"">am.yg.m.ou.ton@googlemail.com</a>
<a href=""mailto:a.m.y.g.mo.uton@googlemail.com"">a.m.y.g.mo.uton@googlemail.com</a>
<a href=""mailto:a.mygm.ou.t.o.n@googlemail.com"">a.mygm.ou.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.y.g.m.o.ut.o.n@googlemail.com"">a.m.y.g.m.o.ut.o.n@googlemail.com</a>
<a href=""mailto:am.yg.mo.uton@googlemail.com"">am.yg.mo.uton@googlemail.com</a>
<a href=""mailto:a.mygm.o.u.t.o.n@googlemail.com"">a.mygm.o.u.t.o.n@googlemail.com</a>
<a href=""mailto:a.m.yg.m.o.uto.n@googlemail.com"">a.m.yg.m.o.uto.n@googlemail.com</a>
<a href=""mailto:am.yg.m.o.uto.n@googlemail.com"">am.yg.m.o.uto.n@googlemail.com</a>"
c026tEVW,MOK layout Sans-serit bold/italic/bold italic,dksetiavan,JSON,Saturday 26th of August 2023 09:21:07 PM CDT,"OK_Layout_Begin
Name:Sans-Serif Bold/Italic/Bold-italic
1234567890
[MC:𝗾][MC:𝘄][MC:𝗲][MC:𝗿][MC:𝘁][MC:𝘆][MC:𝘂][MC:𝗶][MC:𝗼][MC:𝗽]
[MC:𝗮][MC:𝘀][MC:𝗱][MC:𝗳][MC:𝗴][MC:𝗵][MC:𝗷][MC:𝗸][MC:𝗹]
[MC:𝘇][MC:𝘅][MC:𝗰][MC:𝘃][MC:𝗯][MC:𝗻][MC:𝗺]
!@#$%^&*()
[MC:𝗤][MC:𝗪][MC:𝗘][MC:𝗥][MC:𝗧][MC:𝗬][MC:𝗨][MC:𝗜][MC:𝗢][MC:𝗣]
[MC:𝗔][MC:𝗦][MC:𝗗][MC:𝗙][MC:𝗚][MC:𝗛][MC:𝗝][MC:𝗞][MC:𝗟]
[MC:𝗭][MC:𝗫][MC:𝗖][MC:𝗩][MC:𝗕][MC:𝗡][MC:𝗠]
1234567890
[MC:𝙦][MC:𝙬][MC:𝙚][MC:𝙧][MC:𝙩][MC:𝙮][MC:𝙪][MC:𝙞][MC:𝙤][MC:𝙥]
[MC:𝙖][MC:𝙨][MC:𝙙][MC:𝙛][MC:𝙜][MC:𝙝][MC:𝙟][MC:𝙠][MC:𝙡]
[MC:𝙯][MC:𝙭][MC:𝙘][MC:𝙫][MC:𝙗][MC:𝙣][MC:𝙢]
1234567890
[MC:𝘲][MC:𝘸][MC:𝘦][MC:𝘳][MC:𝘵][MC:𝘺][MC:𝘶][MC:𝘪][MC:𝘰][MC:𝘱]
[MC:𝘢][MC:𝘴][MC:𝘥][MC:𝘧][MC:𝘨][MC:𝘩][MC:𝘫][MC:𝘬][MC:𝘭]
[MC:𝘻][MC:𝘹][MC:𝘤][MC:𝘷][MC:𝘣][MC:𝘯][MC:𝘮]
!@#$%^&*()
[MC:𝘘][MC:𝘞][MC:𝘌][MC:𝘙][MC:𝘛][MC:𝘠][MC:𝘜][MC:𝘐][MC:𝘖][MC:𝘗]
[MC:𝘈][MC:𝘚][MC:𝘋][MC:𝘍][MC:𝘎][MC:𝘏][MC:𝘑][MC:𝘒][MC:𝘓]
[MC:𝘡][MC:𝘟][MC:𝘊][MC:𝘝][MC:𝘉][MC:𝘕][MC:𝘔]
!@#$%^&*()
[MC:𝙌][MC:𝙒][MC:𝙀][MC:𝙍][MC:𝙏][MC:𝙔][MC:𝙐][MC:𝙄][MC:𝙊][MC:𝙋]
[MC:𝘼][MC:𝙎][MC:𝘿][MC:𝙁][MC:𝙂][MC:𝙃][MC:𝙅][MC:𝙆][MC:𝙇]
[MC:𝙕][MC:𝙓][MC:𝘾][MC:𝙑][MC:𝘽][MC:𝙉][MC:𝙈]
OK_Layout_End
"
vAsa1uHW,MOK layout Sans-serif,dksetiavan,JSON,Saturday 26th of August 2023 09:09:32 PM CDT,"OK_Layout_Begin
Name:Sans-Serif
1234567890
[MC:𝗊][MC:𝗐][MC:𝖾][MC:𝗋][MC:𝗍][MC:𝗒][MC:𝗎][MC:𝗂][MC:𝗈][MC:𝗉]
[MC:𝖺][MC:𝗌][MC:𝖽][MC:𝖿][MC:𝗀][MC:𝗁][MC:𝗃][MC:𝗄][MC:𝗅]
[MC:𝗓][MC:𝗑][MC:𝖼][MC:𝗏][MC:𝖻][MC:𝗇][MC:𝗆]
!@#$%^&*()
[MC:𝖰][MC:𝖶][MC:𝖤][MC:𝖱][MC:𝖳][MC:𝖸][MC:𝖴][MC:𝖨][MC:𝖮][MC:𝖯]
[MC:𝖠][MC:𝖲][MC:𝖣][MC:𝖥][MC:𝖦][MC:𝖧][MC:𝖩][MC:𝖪][MC:𝖫]
[MC:𝖹][MC:𝖷][MC:𝖢][MC:𝖵][MC:𝖡][MC:𝖭][MC:𝖬]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
1234567890
OK_Layout_End
"
eDSFBHtC,config.json,denperss,YAML,Saturday 26th of August 2023 08:54:38 PM CDT,"{
  ""global"": {
    ""loglevel"": ""debug"",
    ""sessionSecret"": ""hidden"",
    ""frontPopupEnable"": true,
    ""frontPopupTitle"": ""DISCLAIMER"",
    ""frontPopupContent"": """",
    ""searchLocation"": ""bottom"",
    ""theme"": ""EN"",
    ""monitorName"": ""Pagermon""
  },
  ""database"": {
    ""file"": ""./messages.db"",
    ""type"": ""sqlite3"",
    ""aliasRefreshRequired"": 0
  },
  ""messages"": {
    ""maxLimit"": 120,
    ""defaultLimit"": 20,
    ""duplicateFiltering"": false,
    ""duplicateLimit"": 10,
    ""duplicateTime"": 60,
    ""rotationEnabled"": true,
    ""rotateDays"": 7,
    ""rotateKeep"": 4,
    ""replaceText"": [
      {
        ""match"": ""firecall"",
        ""replace"": ""This is a call about fires""
      },
      {
        ""match"": ""alert"",
        ""highlight"": true,
        ""replace"": """"
      },
      {
        ""match"": ""aba"",
        ""replace"": ""Brandalarm"",
        ""highlight"": true,
        ""selected"": true
      },
      {
        ""match"": ""PRÃ˜VE"",
        ""replace"": ""Radio PrÃ¸ve"",
        ""selected"": true,
        ""highlight"": true
      },
      {
        ""match"": ""Min. forurening-Oliefilm pÃ¥ vand"",
        ""replace"": ""Min. forurening-Oliefilm pÃ¥ vand"",
        ""selected"": true,
        ""highlight"": true
      },
      {
        ""match"": ""Bygn.brand-Lejlighed"",
        ""replace"": ""Bygn.brand-Lejlighed"",
        ""selected"": true,
        ""highlight"": true
      },
      {
        ""match"": ""Bygn.brand-Villa"",
        ""replace"": ""Bygn.brand-Villa"",
        ""selected"": true,
        ""highlight"": true
      },
      {
        ""match"": ""Ass.-"",
        ""replace"": ""Assistance"",
        ""selected"": true,
        ""highlight"": true
      },
      {
        ""match"": ""Skraldespand i det fri-Brand"",
        ""replace"": ""Skraldespand i det fri-Brand"",
        ""selected"": true,
        ""highlight"": true
      }
    ],
    ""pdwMode"": false,
    ""adminShow"": false,
    ""HideCapcode"": false,
    ""HideSource"": false,
    ""apiSecurity"": false
  },
  ""auth"": {
    ""registration"": true,
    ""user"": ""admin"",
    ""encPass"": ""$2a$08$DeHIDDEN"",
    ""keys"": [
      {
        ""name"": ""PDW"",
        ""key"": ""HIDDEN"",
        ""selected"": true
      },
      {
        ""name"": ""HBR"",
        ""key"": ""HIDDEN"",
        ""selected"": true
      }
    ]
  },
  ""monitoring"": {
    ""azureEnable"": false,
    ""azureKey"": """",
    ""gaEnable"": false,
    ""gaTrackingCode"": """"
  },
  ""plugins"": {
    ""Template"": {
      ""enable"": false
    },
    ""SimpleWebhook"": {
      ""enable"": true,
      ""URL"": """",
      ""filterMode"": {
        ""value"": ""2"",
        ""text"": ""All messages""
      },
      ""sendAddress"": true,
      ""sendMessage"": true,
      ""sendSource"": true,
      ""sendTimestamp"": true,
      ""sendAgency"": true,
      ""sendAlias"": true,
      ""sendAliasId"": true,
      ""sendIcon"": true,
      ""sendColor"": true
    },
    ""MessageRepeat"": {
      ""enable"": false
    },
    ""Telegram"": {
      ""enable"": true,
      ""teleAPIKEY"": ""hidden""
    }
  }
}"
4Y3bhSkV,Untitled,ptr727,YAML,Saturday 26th of August 2023 08:44:20 PM CDT,"sensor:
  - platform: pulse_counter
    pin:
      number: GPIO32
      mode: 
        input: true
        pullup: true
    update_interval: 60s
    use_pcnt: false
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    internal_filter: 100ms
    unit_of_measurement: 'gal/min'
    name: ${device_name}_water_meter
    icon: 'mdi:water'
    filters:
      - multiply: 10
    total:
      name: ${device_name}_water_meter_total
      icon: 'mdi:water'
      device_class: 'water'
      state_class: 'total_increasing'
      id: water_total
      unit_of_measurement: 'gal'
      filters:
        - multiply: 10"
Nz0C0BQT,MOK layout Doublestruct,dksetiavan,JSON,Saturday 26th of August 2023 08:11:39 PM CDT,"OK_Layout_Begin
Name:Doublestruck
[MC:𝟙][MC:𝟚][MC:𝟛][MC:𝟜][MC:𝟝][MC:𝟞][MC:𝟟][MC:𝟠][MC:𝟡][MC:𝟘]
[MC:𝕢][MC:𝕨][MC:𝕖][MC:𝕣][MC:𝕥][MC:𝕪][MC:𝕦][MC:𝕚][MC:𝕠][MC:𝕡]
[MC:𝕒][MC:𝕤][MC:𝕕][MC:𝕗][MC:𝕘][MC:𝕙][MC:𝕛][MC:𝕜][MC:𝕝]
[MC:𝕫][MC:𝕩][MC:𝕔][MC:𝕧][MC:𝕓][MC:𝕟][MC:𝕞]
[MC:𝟙][MC:𝟚][MC:𝟛][MC:𝟜][MC:𝟝][MC:𝟞][MC:𝟟][MC:𝟠][MC:𝟡][MC:𝟘]
[MC:ℚ][MC:𝕎][MC:𝔼][MC:ℝ][MC:𝕋][MC:𝕐][MC:𝕌][MC:𝕀][MC:𝕆][MC:ℙ]
[MC:𝔸][MC:𝕊][MC:𝔻][MC:𝔽][MC:𝔾][MC:ℍ][MC:𝕁][MC:𝕂][MC:𝕃]
[MC:ℤ][MC:𝕏][MC:ℂ][MC:𝕍][MC:𝔹][MC:ℕ][MC:𝕄]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
―∑éə®†Ωœøπ•·¡
æß∂ðƒ©ªº∆≠℥∞¿
ʒΩ≈çþ∫ŋµ≤≥°
OK_Layout_End
"
cN4AN6Mw,MOK layout monospace,dksetiavan,JSON,Saturday 26th of August 2023 08:06:56 PM CDT,"OK_Layout_Begin
Name:Monospace
[MC:𝟷][MC:𝟸][MC:𝟹][MC:𝟺][MC:𝟻][MC:𝟼][MC:𝟽][MC:𝟾][MC:𝟿][MC:𝟶]
[MC:𝚚][MC:𝚠][MC:𝚎][MC:𝚛][MC:𝚝][MC:𝚢][MC:𝚞][MC:𝚒][MC:𝚘][MC:𝚙]
[MC:𝚊][MC:𝚜][MC:𝚍][MC:𝚏][MC:𝚐][MC:𝚑][MC:𝚓][MC:𝚔][MC:𝚕]
[MC:𝚣][MC:𝚡][MC:𝚌][MC:𝚟][MC:𝚋][MC:𝚗][MC:𝚖]
[MC:𝟷][MC:𝟸][MC:𝟹][MC:𝟺][MC:𝟻][MC:𝟼][MC:𝟽][MC:𝟾][MC:𝟿][MC:𝟶]
[MC:𝚀][MC:𝚆][MC:𝙴][MC:𝚁][MC:𝚃][MC:𝚈][MC:𝚄][MC:𝙸][MC:𝙾][MC:𝙿]
[MC:𝙰][MC:𝚂][MC:𝙳][MC:𝙵][MC:𝙶][MC:𝙷][MC:𝙹][MC:𝙺][MC:𝙻]
[MC:𝚉][MC:𝚇][MC:𝙲][MC:𝚅][MC:𝙱][MC:𝙽][MC:𝙼]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
―∑éə®†Ωœøπ•·¡
æß∂ðƒ©ªº∆≠℥∞¿
ʒΩ≈çþ∫ŋµ≤≥°
OK_Layout_End
"
Z4KacdVa,MOK layout bold italic,dksetiavan,JSON,Saturday 26th of August 2023 08:04:34 PM CDT,"OK_Layout_Begin
Name:Bold italic
1234567890
[MC:𝒒][MC:𝒘][MC:𝒆][MC:𝒓][MC:𝒕][MC:𝒚][MC:𝒖][MC:𝒊][MC:𝒐][MC:𝒑]
[MC:𝒂][MC:𝒔][MC:𝒅][MC:𝒇][MC:𝒈][MC:𝒉][MC:𝒋][MC:𝒌][MC:𝒍]
[MC:𝒛][MC:𝒙][MC:𝒄][MC:𝒗][MC:𝒃][MC:𝒏][MC:𝒎]
!@#$%^&*()
[MC:𝑸][MC:𝑾][MC:𝑬][MC:𝑹][MC:𝑻][MC:𝒀][MC:𝑼][MC:𝑰][MC:𝑶][MC:𝑷]
[MC:𝑨][MC:𝑺][MC:𝑫][MC:𝑭][MC:𝑮][MC:𝑯][MC:𝑱][MC:𝑲][MC:𝑳]
[MC:𝒁][MC:𝑿][MC:𝑪][MC:𝑽][MC:𝑩][MC:𝑵][MC:𝑴]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
ˉˋˇ´¨˙˚¸﹐˛˘˜ˆ
―∑éə®†Ωœøπ•·¡
æß∂ðƒ©ªº∆≠℥∞¿
ʒΩ≈çþ∫ŋµ≤≥°
OK_Layout_End
"
ujQfnXgU,MOK layout italic,dksetiavan,JSON,Saturday 26th of August 2023 08:03:54 PM CDT,"OK_Layout_Begin
Name:Italic
1234567890
[MC:𝑞][MC:𝑤][MC:𝑒][MC:𝑟][MC:𝑡][MC:𝑦][MC:𝑢][MC:𝑖][MC:𝑜][MC:𝑝]
[MC:𝑎][MC:𝑠][MC:𝑑][MC:𝑓][MC:𝑔]ℎ[MC:𝑗][MC:𝑘][MC:𝑙]
[MC:𝑧][MC:𝑥][MC:𝑐][MC:𝑣][MC:𝑏][MC:𝑛][MC:𝑚]
!@#$%^&*()
[MC:𝑄][MC:𝑊][MC:𝐸][MC:𝑅][MC:𝑇][MC:𝑌][MC:𝑈][MC:𝐼][MC:𝑂][MC:𝑃]
[MC:𝐴][MC:𝑆][MC:𝐷][MC:𝐹][MC:𝐺][MC:𝐻][MC:𝐽][MC:𝐾][MC:𝐿]
[MC:𝑍][MC:𝑋][MC:𝐶][MC:𝑉][MC:𝐵][MC:𝑁][MC:𝑀]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
[MC:𝜕][MC:𝜖][MC:𝜗][MC:𝜘][MC:𝜙][MC:𝜚][MC:𝜛]
'[MC:𝜍][MC:𝜖][MC:𝜌][MC:𝜏][MC:𝜃][MC:𝜐][MC:𝜄][MC:𝜊][MC:𝜋]
[MC:𝛼][MC:𝜎][MC:𝛿][MC:𝜑][MC:𝛾][MC:𝜂][MC:𝜉][MC:𝜅][MC:𝜆]
[MC:𝜁][MC:𝜒][MC:𝜓][MC:𝜔][MC:𝛽][MC:𝜈][MC:𝜇]

[MC:𝛻] [MC:𝛦][MC:𝛲][MC:𝛵][MC:𝛶][MC:𝛩][MC:𝛪][MC:𝛰][MC:𝛱]
[MC:𝛢][MC:𝛴][MC:𝛥][MC:𝛷][MC:𝛤][MC:𝛨][MC:𝛯][MC:𝛫][MC:𝛬]
[MC:𝛧][MC:𝛸][MC:𝛹][MC:𝛺][MC:𝛣][MC:𝛮][MC:𝛭]
OK_Layout_End
"
YrXdK8qa,Untitled,samipote,JavaScript,Saturday 26th of August 2023 07:53:57 PM CDT,"process.env.NODE_TLS_REJECT_UNAUTHORIZED = ""0"";
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');

app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors()); // Enable CORS
app.use(methodOverride('_method')); // Enable method override

const https = require('https');

const agent = new https.Agent({
    rejectUnauthorized: false,
});


// Replace with your MongoDB connection string
const connectionString = 'mongodb://localhost:27017/streaming';

// Connect to MongoDB
mongoose
  .connect(connectionString, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a Mongoose schema for our Game model
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});

// Create the Game model
const Game = mongoose.model('Game', gameSchema);

// Serve static files from the public directory
app.use(express.static(path.join(__dirname, 'public')));

const proxyAddress = 'http://localhost:8080/';

// A function that returns a modified URL for .ts files
function getTSURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'ts/' + targetURL.replace('https://', '');
}

function resolveURL(base, relative) {
  const baseURL = new URL(base);
  return new URL(relative, baseURL).toString();
}

app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/proxy/', 'https://') + search;

  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    try {
      const m3u8Response = await fetch(targetURL);
      let m3u8Content = await m3u8Response.text();

      m3u8Content = m3u8Content.split('\n').map(line => {
        if (line.endsWith('.ts')) {
          const tsURL = line.startsWith('http') ? line : resolveURL(targetURL, line);
          return getTSURL(tsURL);
        } else {
          return line;
        }
      }).join('\n');

      res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      res.setHeader('Access-Control-Allow-Origin', '*');
      res.send(m3u8Content);
    } catch (err) {
      console.error('Failed to fetch m3u8:', err.message);
      res.status(500).send('Proxy Error');
    }
    return;
  }
	const proxyRequestOptions = {
		url: targetURL,
		headers: { ...req.headers },
		agent: agent
		};


  const proxyRequest = request(proxyRequestOptions);

  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else {
        res.setHeader('Content-Type', 'application/x-mpegURL');
      }
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });

  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });

  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });

  req.pipe(restream()).pipe(proxyRequest);
});

// A new route for handling .ts requests
app.use('/ts/', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/ts/', 'https://') + search;

  const proxyRequestOptions = {
    url: targetURL,
		headers: { ...req.headers },
		agent: agent
  };
  const proxyRequest = request(proxyRequestOptions);

  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      res.setHeader('Content-Type', 'video/MP2T');
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });

  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });

  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });

  req.pipe(restream()).pipe(proxyRequest);
});

function getBaseURL() {
  return `http://${app.get('host')}/`;
}

app.get('/', (req, res) => {
  res.render('main.ejs');
});

// Route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    const updatedGame = await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));"
5NVQEKZS,MOK layout bold,dksetiavan,JSON,Saturday 26th of August 2023 07:50:03 PM CDT,"OK_Layout_Begin
Name:Bold
[MC:𝟏][MC:𝟐][MC:𝟑][MC:𝟒][MC:𝟓][MC:𝟔][MC:𝟕][MC:𝟖][MC:𝟗][MC:𝟎]
[MC:𝐪][MC:𝐰][MC:𝐞][MC:𝐫][MC:𝐭][MC:𝐲][MC:𝐮][MC:𝐢][MC:𝐨][MC:𝐩]
[MC:𝐚][MC:𝐬][MC:𝐝][MC:𝐟][MC:𝐠][MC:𝐡][MC:𝐣][MC:𝐤][MC:𝐥]
[MC:𝐳][MC:𝐱][MC:𝐜][MC:𝐯][MC:𝐛][MC:𝐧][MC:𝐦]
!@#$%^&*()
[MC:𝐐][MC:𝐖][MC:𝐄][MC:𝐑][MC:𝐓][MC:𝐘][MC:𝐔][MC:𝐈][MC:𝐎][MC:𝐏]
[MC:𝐀][MC:𝐒][MC:𝐃][MC:𝐅][MC:𝐆][MC:𝐇][MC:𝐉][MC:𝐊][MC:𝐋]
[MC:𝐙][MC:𝐗][MC:𝐂][MC:𝐕][MC:𝐁][MC:𝐍][MC:𝐌]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
[MC:𝛛][MC:𝛜][MC:𝛝][MC:𝛞][MC:𝛟][MC:𝛠]
[MC:𝛡][MC:𝛓][MC:𝛆][MC:𝛒][MC:𝛕][MC:𝛖][MC:𝛉][MC:𝛊][MC:𝛐][MC:𝛑]
[MC:𝛂][MC:𝛔][MC:𝛅][MC:𝛗][MC:𝛄][MC:𝛈][MC:𝛏][MC:𝛋][MC:𝛌]
[MC:𝛇][MC:𝛘][MC:𝛙][MC:𝛚][MC:𝛃][MC:𝛎][MC:𝛍]
 
[MC:𝛻] [MC:𝛦][MC:𝛲][MC:𝛵][MC:𝛶][MC:𝛩][MC:𝛪][MC:𝛰][MC:𝛱]
[MC:𝛢][MC:𝛴][MC:𝛥][MC:𝛷][MC:𝛤][MC:𝛨][MC:𝛯][MC:𝛫][MC:𝛬]
[MC:𝛧][MC:𝛸][MC:𝛹][MC:𝛺][MC:𝛣][MC:𝛮][MC:𝛭]
OK_Layout_End
"
JwTbxzQJ,MOK layout script,dksetiavan,JSON,Saturday 26th of August 2023 07:48:42 PM CDT,"OK_Layout_Begin
Name:script
1234567890
[MC:𝓆][MC:𝓌][MC:ℯ][MC:𝓇][MC:𝓉][MC:𝓎][MC:𝓊][MC:𝒾][MC:ℴ][MC:𝓅]
[MC:𝒶][MC:𝓈][MC:𝒹][MC:𝒻][MC:ℊ][MC:𝒽][MC:𝒿][MC:𝓀][MC:𝓁]
[MC:𝓏][MC:𝓍][MC:𝒸][MC:𝓋][MC:𝒷][MC:𝓃][MC:𝓂]
!@#$%^&*()
[MC:𝓠][MC:𝓦][MC:𝓔][MC:𝓡][MC:𝓣][MC:𝓨][MC:𝓤][MC:𝓘][MC:𝓞][MC:𝓟]
[MC:𝓐][MC:𝓢][MC:𝓓][MC:𝓕][MC:𝓖][MC:𝓗][MC:𝓙][MC:𝓚][MC:𝓛]
[MC:𝓩][MC:𝓧][MC:𝓒][MC:𝓥][MC:𝓑][MC:𝓝][MC:𝓜]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
1234567890
[MC:𝓺][MC:𝔀][MC:𝓮][MC:𝓻][MC:𝓽][MC:𝔂][MC:𝓾][MC:𝓲][MC:𝓸][MC:𝓹]
[MC:𝓪][MC:𝓼][MC:𝓭][MC:𝓯][MC:𝓰][MC:𝓱][MC:𝓳][MC:𝓴][MC:𝓵]
[MC:𝔃][MC:𝔁][MC:𝓬][MC:𝓿][MC:𝓫][MC:𝓷][MC:𝓶]
!@#$%^&*()
[MC:𝓠][MC:𝓦][MC:𝓔][MC:𝓡][MC:𝓣][MC:𝓨][MC:𝓤][MC:𝓘][MC:𝓞][MC:𝓟]
[MC:𝓐][MC:𝓢][MC:𝓓][MC:𝓕][MC:𝓖][MC:𝓙][MC:𝓚][MC:𝓛]
[MC:𝓩][MC:𝓧][MC:𝓒][MC:𝓥][MC:𝓑][MC:𝓝][MC:𝓜]
OK_Layout_End
"
Y5gUAxcc,2023-08-26_stats.json,rdp_snitch,JSON,Saturday 26th of August 2023 07:18:02 PM CDT,"{
  ""ip"": {
    ""194.26.135.222"": 12,
    ""103.167.91.133"": 42,
    ""139.162.36.51"": 3,
    ""194.165.16.73"": 6,
    ""106.116.169.71"": 6,
    ""45.79.108.4"": 48,
    ""60.205.170.161"": 9,
    ""198.235.24.236"": 9,
    ""172.233.207.85"": 3,
    ""172.233.212.101"": 18,
    ""194.165.16.37"": 9,
    ""87.251.75.145"": 6,
    ""36.91.222.100"": 6,
    ""51.255.96.20"": 6,
    ""194.26.135.170"": 3,
    ""185.73.124.50"": 6,
    ""87.251.75.120"": 3,
    ""159.223.84.25"": 6,
    ""45.129.14.230"": 18,
    ""152.89.198.113"": 6,
    ""194.165.16.11"": 6,
    ""185.170.144.3"": 6,
    ""45.140.17.16"": 9,
    ""205.210.31.242"": 9,
    ""196.190.117.7"": 6,
    ""80.66.88.15"": 18,
    ""172.104.59.96"": 9,
    ""188.166.250.143"": 3,
    ""213.6.148.83"": 3,
    ""185.198.240.73"": 3,
    ""45.227.254.8"": 6,
    ""45.143.201.62"": 6,
    ""159.223.55.67"": 9,
    ""185.170.144.113"": 18,
    ""198.235.24.202"": 9,
    ""87.251.75.64"": 3,
    ""94.232.41.205"": 9,
    ""112.5.87.34"": 3,
    ""103.153.68.198"": 9,
    ""139.162.116.79"": 6,
    ""115.29.241.246"": 6,
    ""80.66.88.31"": 3,
    ""157.245.213.128"": 6,
    ""198.235.24.165"": 9
  },
  ""asn"": {
    ""AS57523"": 21,
    ""AS63737"": 42,
    ""AS63949"": 87,
    ""AS48721"": 21,
    ""AS4134"": 6,
    ""AS37963"": 15,
    ""AS396982"": 36,
    ""AS208091"": 48,
    ""AS7713"": 6,
    ""AS16276"": 6,
    ""AS14061"": 24,
    ""AS198465"": 18,
    ""AS197414"": 24,
    ""AS198953"": 9,
    ""AS24757"": 6,
    ""AS12975"": 3,
    ""AS62240"": 3,
    ""AS267784"": 6,
    ""AS210950"": 6,
    ""AS9808"": 3,
    ""AS131366"": 9
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 21,
    ""Vietserver Services Technology Company Limited"": 42,
    ""Akamai Technologies, Inc."": 78,
    ""Flyservers S.A."": 27,
    ""Chinanet"": 6,
    ""Hangzhou Alibaba Advertising Co"": 15,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 51,
    ""PT Telekomunikasi Indonesia"": 6,
    ""OVH SAS"": 6,
    ""DigitalOcean, LLC"": 24,
    ""BtHoster LTD"": 18,
    ""Proton66 OOO"": 9,
    ""Ethiotelecom"": 6,
    ""Xhost Internet Solutions"": 21,
    ""Akamai Technologies"": 9,
    ""Palestine Telecommunications Company"": 3,
    ""Clouvider Limited"": 3,
    ""TOV E-RISHENNYA"": 6,
    ""China Mobile"": 3,
    ""TAM"": 9
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 15,
    ""Vietserver Viet NAM Service Technology Company Limited"": 42,
    ""Linode, LLC"": 9,
    ""Flyservers S.A"": 21,
    ""Chinanet HE"": 6,
    ""Linode"": 57,
    ""Aliyun Computing Co., LTD"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Akamai Technologies, Inc."": 21,
    ""Xhost Internet Solutions"": 12,
    ""Telekomunikasi Indonesia"": 6,
    ""jadon linsone"": 6,
    ""Xhostis"": 30,
    ""DigitalOcean, LLC"": 21,
    ""BtHosting"": 18,
    ""Starcrecium Limited"": 6,
    ""Proton66 LLC"": 9,
    ""Unknown"": 9,
    ""XHOSTIS"": 21,
    ""Digitalocean"": 3,
    ""Palestine Telecommunications Company"": 3,
    ""UAB Host Baltic"": 6,
    ""TOV VAIZ PARTNER"": 6,
    ""Dmitriy Panchenko"": 9,
    ""China Mobile Communications Corporation"": 3,
    ""TAM Media Technology Joint Stock Company"": 9
  },
  ""regionName"": {
    ""Moscow"": 54,
    ""Tinh Hung Yen"": 42,
    ""North West"": 12,
    ""Kaunas"": 21,
    ""Hebei"": 6,
    ""California"": 84,
    ""Beijing"": 9,
    ""Virginia"": 3,
    ""Illinois"": 18,
    ""England"": 18,
    ""Jakarta"": 6,
    ""Hauts-de-France"": 6,
    ""South West"": 18,
    ""Chi\u0219in\u0103u Municipality"": 18,
    ""Addis Ababa"": 6,
    ""Drenthe"": 21,
    ""Rafah"": 3,
    ""New Jersey"": 9,
    ""Vilnius"": 6,
    ""Kyiv City"": 6,
    ""Perm Krai"": 9,
    ""Fujian"": 3,
    ""Hanoi"": 9,
    ""Tokyo"": 6,
    ""Zhejiang"": 6
  },
  ""country"": {
    ""Russia"": 63,
    ""Vietnam"": 51,
    ""Singapore"": 30,
    ""Lithuania"": 27,
    ""China"": 24,
    ""United States"": 114,
    ""United Kingdom"": 18,
    ""Indonesia"": 6,
    ""France"": 6,
    ""Moldova"": 18,
    ""Ethiopia"": 6,
    ""Netherlands"": 21,
    ""Palestine"": 3,
    ""Ukraine"": 6,
    ""Japan"": 6
  },
  ""account"": {
    ""Administr"": 48,
    ""hello"": 186,
    ""Test"": 39,
    ""(empty)"": 12,
    ""ltSaaRYtr"": 3,
    ""NCHzeb"": 3,
    ""UQavtw"": 3,
    ""Domain"": 78,
    ""oyLSTjHiE"": 3,
    ""aatWjm"": 3,
    ""CgSpgv"": 3,
    ""qisjOhzbX"": 3,
    ""AqtIYB"": 3,
    ""YhXrPP"": 3,
    ""jxPbwQeZw"": 3,
    ""TuITsI"": 3,
    ""EIiyht"": 3
  },
  ""keyboard"": {
    ""Unknown"": 399
  },
  ""client_build"": {
    ""Unknown"": 399
  },
  ""client_name"": {
    ""Unknown"": 399
  },
  ""ip_type"": {
    ""proxy"": 18,
    ""Unknown"": 201,
    ""hosting"": 159,
    ""mobile"": 9,
    ""hosting & proxy"": 12
  }
}"
GjgXbpFf,2023-08-26_stats.json,rdp_snitch,JSON,Saturday 26th of August 2023 07:16:14 PM CDT,"{
  ""ip"": {
    ""194.26.135.222"": 8,
    ""103.167.91.133"": 28,
    ""139.162.36.51"": 2,
    ""194.165.16.73"": 4,
    ""106.116.169.71"": 4,
    ""45.79.108.4"": 32,
    ""60.205.170.161"": 6,
    ""198.235.24.236"": 6,
    ""172.233.207.85"": 2,
    ""172.233.212.101"": 12,
    ""194.165.16.37"": 6,
    ""87.251.75.145"": 4,
    ""36.91.222.100"": 4,
    ""51.255.96.20"": 4,
    ""194.26.135.170"": 2,
    ""185.73.124.50"": 4,
    ""87.251.75.120"": 2,
    ""159.223.84.25"": 4,
    ""45.129.14.230"": 12,
    ""152.89.198.113"": 4,
    ""194.165.16.11"": 4,
    ""185.170.144.3"": 4,
    ""45.140.17.16"": 6,
    ""205.210.31.242"": 6,
    ""196.190.117.7"": 4,
    ""80.66.88.15"": 12,
    ""172.104.59.96"": 6,
    ""188.166.250.143"": 2,
    ""213.6.148.83"": 2,
    ""185.198.240.73"": 2,
    ""45.227.254.8"": 4,
    ""45.143.201.62"": 4,
    ""159.223.55.67"": 6,
    ""185.170.144.113"": 12,
    ""198.235.24.202"": 6,
    ""87.251.75.64"": 2,
    ""94.232.41.205"": 6,
    ""112.5.87.34"": 2,
    ""103.153.68.198"": 6,
    ""139.162.116.79"": 4,
    ""115.29.241.246"": 4,
    ""80.66.88.31"": 2,
    ""157.245.213.128"": 4,
    ""198.235.24.165"": 6
  },
  ""asn"": {
    ""AS57523"": 14,
    ""AS63737"": 28,
    ""AS63949"": 58,
    ""AS48721"": 14,
    ""AS4134"": 4,
    ""AS37963"": 10,
    ""AS396982"": 24,
    ""AS208091"": 32,
    ""AS7713"": 4,
    ""AS16276"": 4,
    ""AS14061"": 16,
    ""AS198465"": 12,
    ""AS197414"": 16,
    ""AS198953"": 6,
    ""AS24757"": 4,
    ""AS12975"": 2,
    ""AS62240"": 2,
    ""AS267784"": 4,
    ""AS210950"": 4,
    ""AS9808"": 2,
    ""AS131366"": 6
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 14,
    ""Vietserver Services Technology Company Limited"": 28,
    ""Akamai Technologies, Inc."": 52,
    ""Flyservers S.A."": 18,
    ""Chinanet"": 4,
    ""Hangzhou Alibaba Advertising Co"": 10,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 34,
    ""PT Telekomunikasi Indonesia"": 4,
    ""OVH SAS"": 4,
    ""DigitalOcean, LLC"": 16,
    ""BtHoster LTD"": 12,
    ""Proton66 OOO"": 6,
    ""Ethiotelecom"": 4,
    ""Xhost Internet Solutions"": 14,
    ""Akamai Technologies"": 6,
    ""Palestine Telecommunications Company"": 2,
    ""Clouvider Limited"": 2,
    ""TOV E-RISHENNYA"": 4,
    ""China Mobile"": 2,
    ""TAM"": 6
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 10,
    ""Vietserver Viet NAM Service Technology Company Limited"": 28,
    ""Linode, LLC"": 6,
    ""Flyservers S.A"": 14,
    ""Chinanet HE"": 4,
    ""Linode"": 38,
    ""Aliyun Computing Co., LTD"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Akamai Technologies, Inc."": 14,
    ""Xhost Internet Solutions"": 8,
    ""Telekomunikasi Indonesia"": 4,
    ""jadon linsone"": 4,
    ""Xhostis"": 20,
    ""DigitalOcean, LLC"": 14,
    ""BtHosting"": 12,
    ""Starcrecium Limited"": 4,
    ""Proton66 LLC"": 6,
    ""Unknown"": 6,
    ""XHOSTIS"": 14,
    ""Digitalocean"": 2,
    ""Palestine Telecommunications Company"": 2,
    ""UAB Host Baltic"": 4,
    ""TOV VAIZ PARTNER"": 4,
    ""Dmitriy Panchenko"": 6,
    ""China Mobile Communications Corporation"": 2,
    ""TAM Media Technology Joint Stock Company"": 6
  },
  ""regionName"": {
    ""Moscow"": 36,
    ""Tinh Hung Yen"": 28,
    ""North West"": 8,
    ""Kaunas"": 14,
    ""Hebei"": 4,
    ""California"": 56,
    ""Beijing"": 6,
    ""Virginia"": 2,
    ""Illinois"": 12,
    ""England"": 12,
    ""Jakarta"": 4,
    ""Hauts-de-France"": 4,
    ""South West"": 12,
    ""Chi\u0219in\u0103u Municipality"": 12,
    ""Addis Ababa"": 4,
    ""Drenthe"": 14,
    ""Rafah"": 2,
    ""New Jersey"": 6,
    ""Vilnius"": 4,
    ""Kyiv City"": 4,
    ""Perm Krai"": 6,
    ""Fujian"": 2,
    ""Hanoi"": 6,
    ""Tokyo"": 4,
    ""Zhejiang"": 4
  },
  ""country"": {
    ""Russia"": 42,
    ""Vietnam"": 34,
    ""Singapore"": 20,
    ""Lithuania"": 18,
    ""China"": 16,
    ""United States"": 76,
    ""United Kingdom"": 12,
    ""Indonesia"": 4,
    ""France"": 4,
    ""Moldova"": 12,
    ""Ethiopia"": 4,
    ""Netherlands"": 14,
    ""Palestine"": 2,
    ""Ukraine"": 4,
    ""Japan"": 4
  },
  ""account"": {
    ""Administr"": 32,
    ""hello"": 124,
    ""Test"": 26,
    ""(empty)"": 8,
    ""ltSaaRYtr"": 2,
    ""NCHzeb"": 2,
    ""UQavtw"": 2,
    ""Domain"": 52,
    ""oyLSTjHiE"": 2,
    ""aatWjm"": 2,
    ""CgSpgv"": 2,
    ""qisjOhzbX"": 2,
    ""AqtIYB"": 2,
    ""YhXrPP"": 2,
    ""jxPbwQeZw"": 2,
    ""TuITsI"": 2,
    ""EIiyht"": 2
  },
  ""keyboard"": {
    ""Unknown"": 266
  },
  ""client_build"": {
    ""Unknown"": 266
  },
  ""client_name"": {
    ""Unknown"": 266
  },
  ""ip_type"": {
    ""proxy"": 12,
    ""Unknown"": 134,
    ""hosting"": 106,
    ""mobile"": 6,
    ""hosting & proxy"": 8
  }
}"
WGuv515Z,managecustomer.java,xXGoziXx,Java,Saturday 26th of August 2023 07:15:39 PM CDT,"/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package aaptaba.aaptaba;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

/**
 *
 * @author ooolu
 */
public class ManageCustomers {
    public static void main(String[] args) throws IOException {
        // store the output that will be written to the file
        String missingCountry = """";
        String japanese_customers = """";
        Scanner scan = new Scanner(new File(""C:/Users/ooolu/OneDrive - National College of Ireland/Desktop/NCIRL 2nd Semester/AAP/TABA/customers.txt""));
        // read the file line by line. Part 1
        while (scan.hasNextLine()) {
            String line = scan.nextLine() + ""\n"";
            // print the content of the file to the standard output
            String[] customer = line.split("","");
            // trim() method removes leading and trailing spaces. Part 3
            if (customer[4].trim().equals("""")) {
                missingCountry += line;
            }
            // checking if the country is Japan.   Part 4
            if (customer[4].trim().equals(""Japan"")) {
                japanese_customers += line;
            }
        }
        // write to the missing country file.
        writeToFile(""C:/Users/ooolu/OneDrive - National College of Ireland/Desktop/NCIRL 2nd Semester/AAP/TABA/MissingCountry.txt"", missingCountry);
        // write to the Japanese file
        writeToFile(""C:/Users/ooolu/OneDrive - National College of Ireland/Desktop/NCIRL 2nd Semester/AAP/TABA/Japanese_customers.txt"", japanese_customers);
    }

    public static void writeToFile(String fileName, String output) {
        // create a new file
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
            System.out.println(output);
            // write the output to the file
            bw.write(output);
        } catch (IOException e) {
            System.out.println(""Error writing to file: "" + e.getMessage());
        }
    }
}"
uDkKBser,2023-08-26_stats.json,rdp_snitch,JSON,Saturday 26th of August 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""194.26.135.222"": 4,
    ""103.167.91.133"": 14,
    ""139.162.36.51"": 1,
    ""194.165.16.73"": 2,
    ""106.116.169.71"": 2,
    ""45.79.108.4"": 16,
    ""60.205.170.161"": 3,
    ""198.235.24.236"": 3,
    ""172.233.207.85"": 1,
    ""172.233.212.101"": 6,
    ""194.165.16.37"": 3,
    ""87.251.75.145"": 2,
    ""36.91.222.100"": 2,
    ""51.255.96.20"": 2,
    ""194.26.135.170"": 1,
    ""185.73.124.50"": 2,
    ""87.251.75.120"": 1,
    ""159.223.84.25"": 2,
    ""45.129.14.230"": 6,
    ""152.89.198.113"": 2,
    ""194.165.16.11"": 2,
    ""185.170.144.3"": 2,
    ""45.140.17.16"": 3,
    ""205.210.31.242"": 3,
    ""196.190.117.7"": 2,
    ""80.66.88.15"": 6,
    ""172.104.59.96"": 3,
    ""188.166.250.143"": 1,
    ""213.6.148.83"": 1,
    ""185.198.240.73"": 1,
    ""45.227.254.8"": 2,
    ""45.143.201.62"": 2,
    ""159.223.55.67"": 3,
    ""185.170.144.113"": 6,
    ""198.235.24.202"": 3,
    ""87.251.75.64"": 1,
    ""94.232.41.205"": 3,
    ""112.5.87.34"": 1,
    ""103.153.68.198"": 3,
    ""139.162.116.79"": 2,
    ""115.29.241.246"": 2,
    ""80.66.88.31"": 1,
    ""157.245.213.128"": 2,
    ""198.235.24.165"": 3
  },
  ""asn"": {
    ""AS57523"": 7,
    ""AS63737"": 14,
    ""AS63949"": 29,
    ""AS48721"": 7,
    ""AS4134"": 2,
    ""AS37963"": 5,
    ""AS396982"": 12,
    ""AS208091"": 16,
    ""AS7713"": 2,
    ""AS16276"": 2,
    ""AS14061"": 8,
    ""AS198465"": 6,
    ""AS197414"": 8,
    ""AS198953"": 3,
    ""AS24757"": 2,
    ""AS12975"": 1,
    ""AS62240"": 1,
    ""AS267784"": 2,
    ""AS210950"": 2,
    ""AS9808"": 1,
    ""AS131366"": 3
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 7,
    ""Vietserver Services Technology Company Limited"": 14,
    ""Akamai Technologies, Inc."": 26,
    ""Flyservers S.A."": 9,
    ""Chinanet"": 2,
    ""Hangzhou Alibaba Advertising Co"": 5,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 17,
    ""PT Telekomunikasi Indonesia"": 2,
    ""OVH SAS"": 2,
    ""DigitalOcean, LLC"": 8,
    ""BtHoster LTD"": 6,
    ""Proton66 OOO"": 3,
    ""Ethiotelecom"": 2,
    ""Xhost Internet Solutions"": 7,
    ""Akamai Technologies"": 3,
    ""Palestine Telecommunications Company"": 1,
    ""Clouvider Limited"": 1,
    ""TOV E-RISHENNYA"": 2,
    ""China Mobile"": 1,
    ""TAM"": 3
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 5,
    ""Vietserver Viet NAM Service Technology Company Limited"": 14,
    ""Linode, LLC"": 3,
    ""Flyservers S.A"": 7,
    ""Chinanet HE"": 2,
    ""Linode"": 19,
    ""Aliyun Computing Co., LTD"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Akamai Technologies, Inc."": 7,
    ""Xhost Internet Solutions"": 4,
    ""Telekomunikasi Indonesia"": 2,
    ""jadon linsone"": 2,
    ""Xhostis"": 10,
    ""DigitalOcean, LLC"": 7,
    ""BtHosting"": 6,
    ""Starcrecium Limited"": 2,
    ""Proton66 LLC"": 3,
    ""Unknown"": 3,
    ""XHOSTIS"": 7,
    ""Digitalocean"": 1,
    ""Palestine Telecommunications Company"": 1,
    ""UAB Host Baltic"": 2,
    ""TOV VAIZ PARTNER"": 2,
    ""Dmitriy Panchenko"": 3,
    ""China Mobile Communications Corporation"": 1,
    ""TAM Media Technology Joint Stock Company"": 3
  },
  ""regionName"": {
    ""Moscow"": 18,
    ""Tinh Hung Yen"": 14,
    ""North West"": 4,
    ""Kaunas"": 7,
    ""Hebei"": 2,
    ""California"": 28,
    ""Beijing"": 3,
    ""Virginia"": 1,
    ""Illinois"": 6,
    ""England"": 6,
    ""Jakarta"": 2,
    ""Hauts-de-France"": 2,
    ""South West"": 6,
    ""Chi\u0219in\u0103u Municipality"": 6,
    ""Addis Ababa"": 2,
    ""Drenthe"": 7,
    ""Rafah"": 1,
    ""New Jersey"": 3,
    ""Vilnius"": 2,
    ""Kyiv City"": 2,
    ""Perm Krai"": 3,
    ""Fujian"": 1,
    ""Hanoi"": 3,
    ""Tokyo"": 2,
    ""Zhejiang"": 2
  },
  ""country"": {
    ""Russia"": 21,
    ""Vietnam"": 17,
    ""Singapore"": 10,
    ""Lithuania"": 9,
    ""China"": 8,
    ""United States"": 38,
    ""United Kingdom"": 6,
    ""Indonesia"": 2,
    ""France"": 2,
    ""Moldova"": 6,
    ""Ethiopia"": 2,
    ""Netherlands"": 7,
    ""Palestine"": 1,
    ""Ukraine"": 2,
    ""Japan"": 2
  },
  ""account"": {
    ""Administr"": 16,
    ""hello"": 62,
    ""Test"": 13,
    ""(empty)"": 4,
    ""ltSaaRYtr"": 1,
    ""NCHzeb"": 1,
    ""UQavtw"": 1,
    ""Domain"": 26,
    ""oyLSTjHiE"": 1,
    ""aatWjm"": 1,
    ""CgSpgv"": 1,
    ""qisjOhzbX"": 1,
    ""AqtIYB"": 1,
    ""YhXrPP"": 1,
    ""jxPbwQeZw"": 1,
    ""TuITsI"": 1,
    ""EIiyht"": 1
  },
  ""keyboard"": {
    ""Unknown"": 133
  },
  ""client_build"": {
    ""Unknown"": 133
  },
  ""client_name"": {
    ""Unknown"": 133
  },
  ""ip_type"": {
    ""proxy"": 6,
    ""Unknown"": 67,
    ""hosting"": 53,
    ""mobile"": 3,
    ""hosting & proxy"": 4
  }
}"
DakYTJem,Untitled,samipote,JavaScript,Saturday 26th of August 2023 07:11:44 PM CDT,"const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');

app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors()); // Enable CORS
app.use(methodOverride('_method')); // Enable method override

// Replace with your MongoDB connection string
const connectionString = 'mongodb://localhost:27017/streaming';

// Connect to MongoDB
mongoose
  .connect(connectionString, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a Mongoose schema for our Game model
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});

// Create the Game model
const Game = mongoose.model('Game', gameSchema);

// Serve static files from the public directory
app.use(express.static(path.join(__dirname, 'public')));

const proxyAddress = 'http://localhost:8080/';
process.env.NODE_TLS_REJECT_UNAUTHORIZED = ""0"";

// A function that returns a modified URL for .ts files
function getTSURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'ts/' + targetURL.replace('https://', '');
}

function resolveURL(base, relative) {
  const baseURL = new URL(base);
  return new URL(relative, baseURL).toString();
}

app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/proxy/', 'https://') + search;

  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    try {
      const m3u8Response = await fetch(targetURL);
      let m3u8Content = await m3u8Response.text();

      m3u8Content = m3u8Content.split('\n').map(line => {
        if (line.endsWith('.ts')) {
          const tsURL = line.startsWith('http') ? line : resolveURL(targetURL, line);
          return getTSURL(tsURL);
        } else {
          return line;
        }
      }).join('\n');

      res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      res.setHeader('Access-Control-Allow-Origin', '*');
      res.send(m3u8Content);
    } catch (err) {
      console.error('Failed to fetch m3u8:', err.message);
      res.status(500).send('Proxy Error');
    }
    return;
  }
	const proxyRequestOptions = {
		url: targetURL,
		headers: { ...req.headers, 'Connection': 'keep-alive', 'Host': new URL(targetURL).host }
		};


  const proxyRequest = request(proxyRequestOptions);

  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else {
        res.setHeader('Content-Type', 'application/x-mpegURL');
      }
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });

  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });

  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });

  req.pipe(restream()).pipe(proxyRequest);
});

// A new route for handling .ts requests
app.use('/ts/', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/ts/', 'https://') + search;

  const proxyRequestOptions = {
    url: targetURL,
    headers: {
      'Connection': 'keep-alive'
    }
  };
  const proxyRequest = request(proxyRequestOptions);

  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      res.setHeader('Content-Type', 'video/MP2T');
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });

  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });

  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });

  req.pipe(restream()).pipe(proxyRequest);
});

function getBaseURL() {
  return `http://${app.get('host')}/`;
}

app.get('/', (req, res) => {
  res.render('main.ejs');
});

// Route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    const updatedGame = await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));"
AdktAQ0A,邀您一起看：书签管理：「编辑」-✎修改,xiaomianao666,JavaScript,Saturday 26th of August 2023 06:37:14 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥书签管理：「编辑」-✎修改@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWwjbm9SZWNvcmRIaXN0b3J5I1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIn0iLCJ0aXRsZSI6IuS5puetvueuoeeQhu+8muOAjOe8lui+keOAjS3inI7kv67mlLkifQ==
i3msuW2x,Untitled,samipote,JavaScript,Saturday 26th of August 2023 06:28:04 PM CDT,"// Import required modules
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');
const zlib = require('zlib');
const m3u8 = require('m3u8');
const url = require('url');


// Use middleware functions
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors({ origin: '*', methods: ['GET', 'PUT', 'DELETE', 'OPTIONS'], allowedHeaders: ['x-vsaas-session', 'x-no-redirect', 'origin', 'authorization', 'x-real-ip', 'accept', 'range'] })); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use(express.static(path.join(__dirname, 'public'))); // Serve static files from the public directory

// Connect to MongoDB
const connectionString = 'mongodb://localhost:27017/streaming'; // Replace with your MongoDB connection string
mongoose.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a schema and a model for Game
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});
const Game = mongoose.model('Game', gameSchema);

// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'segment/' + targetURL.replace(/^https:\/\//, ''); // Use regex to only remove the protocol at the beginning of the URL
}

// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  // Get the base path of the target URL
  const basePath = new URL(targetURL).origin + new URL(targetURL).pathname;
  return baseURL + 'proxy/' + targetURL.replace(/^https:\/\//, '') + '?base=' + encodeURIComponent(basePath); // Use regex to only remove the protocol at the beginning of the URL and add a query parameter for the base path
}

// A function that returns the base URL of the app
function getBaseURL() {
  return `http://${app.get('host')}/`;
}

// Improved header handling for proxy requests
function setProxyHeaders(originalReq, targetURL) {
  const urlObject = new URL(targetURL);

  // Start by cloning the headers from the original request.
  let headers = { ...originalReq.headers };

  // Override specific headers or set default values.
  headers['host'] = urlObject.hostname; // set the 'host' to the target's hostname
  headers['user-agent'] = headers['user-agent'] || 'Mozilla/5.0'; // Default user-agent
  headers['referer'] = urlObject.origin; // Override referer

  // Remove headers that you don't want to spoof or are unnecessary.
  // For instance, the 'host' header needs to be set to the target's hostname,[^1^][1]
  // not the original hostname your server received. Similarly, content-length
  // might not be appropriate if you modify the request body in any way.
  delete headers['content-length'];
  delete headers['origin']; // You might want to set this manually if needed

  return headers;
}

// A function that decompresses Brotli-compressed content
function decompressBrotli(buffer) {
  return zlib.brotliDecompressSync(buffer);
}

async function handleM3U8Request(req, res, targetURL) {
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL)
  };

  request(proxyRequestOptions)
    .on('response', function(sourceResponse) {
      Object.keys(sourceResponse.headers).forEach(headerKey => {
        res.setHeader(headerKey, sourceResponse.headers[headerKey]);
      });

      res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      res.setHeader('Access-Control-Allow-Origin', '*');

      // Decompress the content if it is compressed
      if (sourceResponse.headers['content-encoding'] === 'gzip') {
        sourceResponse = sourceResponse.pipe(zlib.createGunzip());
      } else if (sourceResponse.headers['content-encoding'] === 'deflate') {
        sourceResponse = sourceResponse.pipe(zlib.createInflate());
      } else if (sourceResponse.headers['content-encoding'] === 'br') {
        sourceResponse = sourceResponse.pipe(decompressBrotli);
      }

      // Handle relative path links inside the .m3u8 files
      const m3u8Parser = m3u8.createStream();
      sourceResponse.pipe(m3u8Parser);
      m3u8Parser.on('item', item => {
        if (item.get('uri')) {
          item.set('uri', url.resolve(targetURL, item.get('uri')));
        }
      });
      m3u8Parser.pipe(res);
    })
    .on('error', function(err) {
      console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
      res.status(500).send('Proxy Error');
    });
}


// A function that handles proxy requests for other files (.ts and .wbp)
async function handleOtherRequest(req, res, targetURL) {
  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL) // Copy all headers from original request
  };

  const proxyRequest = request(proxyRequestOptions);

  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });

    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else if (extname === '.wbp') {
        res.setHeader('Content-Type', 'video/webm'); // Assume webm format for .wbp files
      } else {
        res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      }
    }

    res.setHeader('Access-Control-Allow-Origin', '*');

    if (sourceResponse.headers['content-encoding'] === 'br') {
      // Decompress the Brotli-compressed content
      sourceResponse = sourceResponse.pipe(decompressBrotli);
    }

    sourceResponse.pipe(res);
  });

  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });

  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });

  req.pipe(proxyRequest);
}


// A route for handling proxy requests
app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);

  console.log(`Received request for URL: ${fullURL}`);

  const targetURL = pathname.replace('/proxy/', 'https://') + search;

  // Check if the request is for an m3u8 file
  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    handleM3U8Request(req, res, targetURL);
    return;
  }

  // Handle other requests
  handleOtherRequest(req, res, targetURL);
});

// A route for handling segment requests
app.use('/segment/*', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for URL: ${fullURL}`);
  
  // Capture the segment path from the wildcard
  const segmentPath = req.params[0];

  // Construct the targetURL with the captured segment path
  const targetURL = 'https://' + segmentPath;

  // Handle the request
  handleOtherRequest(req, res, targetURL);
});

// A route for serving the main page
app.get('/', (req, res) => {
  res.render('main.ejs');
});

// A route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for updating a game
app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
"
qqgECWwp,Untitled,bolo17,C++,Saturday 26th of August 2023 05:58:24 PM CDT,"The include bits/stdc++.h is a header file that we use in our code to include all the standard libraries. It is quite helpful in programming ...
https://www.gulf-up.com/5jexslku418y"
N9T6j4Zm,Untitled,bolo17,Python,Saturday 26th of August 2023 05:47:07 PM CDT,"1. Learn Python 
2. Practice using Google Colab 
 
Take these 2 free courses:
 
• Introduction to Python Programming (Udacity)
• Machine Learning Crash Course (Google)
https://www.gulf-up.com/1mqvj8dnrbwu"
EJ9yLaLq,Burst Balloons Optimally SRBD,Mohammad_Dipu_Sultan,C++,Saturday 26th of August 2023 05:44:47 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int a[15], n;
vector<int>seen;

int sum(int ind){
    int store = 1;
    bool f=false;

    for(int i = ind+1; i<n; i++){
        if(seen[i] == 0){
            store = store*a[i];
            f=true;
            break; 
        }
    }

    for(int i=ind-1; i>=0; i--){
        if(seen[i]==0){
            store = store * a[i];
            f=true;
            break;
        }
    }

    if(f==true){
        return store;
    }
    else{
        return a[ind];
    }
}

int Brust(int ind){

    if(ind==n){
        return 0;
    }

    int ans = INT_MIN;
    for(int i = 0; i < n; i++){
        if(seen[i]==0){
            seen[i]=1;
            ans = max(ans, Brust(ind+1)+sum(i));
            seen[i]=0;
        }
    }

    return ans;
}


int main(){

    cin >> n;
    for( int i = 0; i < n; i++){
        cin >> a[i];
    }

    seen.assign(n, 0);
    cout << Brust(0) << endl;

    return 0;
}"
