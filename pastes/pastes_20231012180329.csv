id,title,username,language,date,content
5Nc8XKnS,duckfootbeer.com CSS Backup,vojin,CSS,Thursday 12th of October 2023 12:48:34 PM CDT,"/* cta in menu ----------- */
header .et_pb_fullwidth_menu.custom-fw-menu .et_pb_menu__menu>nav>ul {
align-self: center;
}

header .et_pb_fullwidth_menu.custom-fw-menu .et_pb_menu__menu>nav>ul>li a{
padding: 0 15px;
}

header .et_pb_fullwidth_menu.custom-fw-menu .divi-life-cta-menu a {
background-color: #ff9012 !important;
padding: 15px 15px !important;
border-radius: 50px;
text-transform: uppercase;
color: #ff9012 !important;
font-size: 14px;
text-align: center;
}

header .et_pb_fullwidth_menu.custom-fw-menu .divi-life-cta-menu2 a {
background-color: #1c6eff !important;
padding: 12px 12px !important;
border-radius: 50px;
border: 2px solid #fff;
text-transform: uppercase;
color: #fff !important;
font-size: 14px;
text-align: center;
}

.breathing {
-webkit-animation:divi-bar-breathing 7s ease-out infinite normal;
animation:divi-bar-breathing 7s ease-out infinite normal
}
@keyframes wiggle{2%{-webkit-transform:translateX(3px) rotate(2deg);transform:translateX(3px) rotate(2deg)}4%{-webkit-transform:translateX(-3px) rotate(-2deg);transform:translateX(-3px) rotate(-2deg)}6%{-webkit-transform:translateX(3px) rotate(2deg);transform:translateX(3px) rotate(2deg)}8%{-webkit-transform:translateX(-3px) rotate(-2deg);transform:translateX(-3px) rotate(-2deg)}10%{-webkit-transform:translateX(2px) rotate(1deg);transform:translateX(2px) rotate(1deg)}12%{-webkit-transform:translateX(-2px) rotate(-1deg);transform:translateX(-2px) rotate(-1deg)}14%{-webkit-transform:translateX(2px) rotate(1deg);transform:translateX(2px) rotate(1deg)}16%{-webkit-transform:translateX(-2px) rotate(-1deg);transform:translateX(-2px) rotate(-1deg)}18%{-webkit-transform:translateX(1px) rotate(0);transform:translateX(1px) rotate(0)}20%{-webkit-transform:translateX(-1px) rotate(0);transform:translateX(-1px) rotate(0)}}.divi-bar-breathing{-webkit-animation:divi-bar-breathing 7s ease-out infinite normal;animation:divi-bar-breathing 7s ease-out infinite normal}@-webkit-keyframes divi-bar-breathing{0%{-webkit-transform:scale(0.9);transform:scale(0.9)}25%{-webkit-transform:scale(1);transform:scale(1)}60%{-webkit-transform:scale(0.9);transform:scale(0.9)}100%{-webkit-transform:scale(0.9);transform:scale(0.9)}}@keyframes divi-bar-breathing{0%{-webkit-transform:scale(0.9);-ms-transform:scale(0.9);transform:scale(0.9)}25%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}60%{-webkit-transform:scale(0.9);-ms-transform:scale(0.9);transform:scale(0.9)}100%{-webkit-transform:scale(0.9);-ms-transform:scale(0.9);transform:scale(0.9)}}"
stjpd4Cz,Untitled,DeividasBalysevas,JavaScript,Thursday 12th of October 2023 12:38:57 PM CDT,"Example:
// Sample data after a successful purchase
var transactionData = {
  transaction_id: ""12345"",  // Replace with actual transaction ID
  value: 100.00,            // Replace with actual transaction value
  currency: ""USD"",          // Replace with actual currency type
  tax: 10.00,               // Replace with actual tax amount or use default value 0.00
  items: [                  // Replace with actual items array
    {
      item_id: ""prod01"",
      item_name: ""Sample Product"",
      price: 50.00,
      quantity: 2
    }
  ]
};

// Push the purchase event to dataLayer
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  event: ""purchase"",
  ecommerce: {
    purchase: transactionData
  }
});
"
EXrk8x2A,Untitled,Stawlie0,C++,Thursday 12th of October 2023 12:35:49 PM CDT,"local Casino = {}

local component = require(""component"")
local chatbox = component.chat_box

function Casino:new()
    local newObj = {
        items = {},       -- список предметов, их шансы и дополнительные свойства
        totalChance = 0,   -- общий шанс (сумма всех шансов)
        addressMoneyChest = nil, -- Адрес сундука с деньгами
        goodWin = 20, -- Последний хороший выигрыш
    }
    self.__index = self
    return setmetatable(newObj, self)
end

function Casino:addItem(name, title, count, chance)
    table.insert(self.items, {
        name = name,
        title = title,
        count = count,
        chance = chance,
        address = nil,
        slot = nil,
    })

    self.totalChance = self.totalChance + chance
end
math.randomseed(os.time())

function Casino:roll(chance)
    local randomValue = math.random() * self.totalChance
    local accumulatedChance = 0

    if self.goodWin <= 0 then
        self.goodWin = self.goodWin - 1
        self.totalChance = self.totalChance - chance
    end

    for _, item in ipairs(self.items) do
        accumulatedChance = accumulatedChance + item.chance
        if randomValue <= accumulatedChance then
            if item.chance == 0.001 then
                self.goodWin = 100
            end
            return item
        end
    end
end

function Casino:SearchMoney()
    if not self.addressMoneyChest then
        chatbox.say(""Address is nil."")
        os.sleep(0.5)
        return nil
    end
    local trans = component.proxy(self.addressMoneyChest)
    if not trans or not trans.getStackInSlot then     -- Проверка успешности получения прокси
        chatbox.say(""Не удалось получить прокси компонента для адреса.: "" .. tostring(address))
        os.sleep(0.5)
        return nil
    end
    local stack = trans.getStackInSlot(0, 1)

    if stack and stack.name == ""contenttweaker:money"" and stack.size then     -- Проверка наличия стека денег и обновление общего баланса
        return stack.size
    end
    return nil
end

function Casino:search_transposers()
    -- Предварительное создание маппинга элементов для быстрого поиска
    local itemMap = {}

    for _, item in ipairs(self.items or {}) do
        itemMap[item.name] = item
    end

    for address in component.list(""transposer"") do
        local trans = component.proxy(address)
        if not trans then return end

        local invName = trans.getInventoryName(0)
        if invName == ""appliedenergistics2:interface"" then
            local size = trans.getInventorySize(0) or 0
            for i = 1, size do
                local stack = trans.getStackInSlot(0, i)
                if stack then
                    local item = itemMap[stack.name] or itemMap[stack.label]
                    if item then
                        item.address = address
                        item.slot = i
                    end
                end
            end
        else -- Интерфейс хранения валюты
            self.addressMoneyChest = address
            if chatbox then chatbox.say(""§fСохранил адрес сундука с деньгами: "" .. address) end
        end
    end
end

function Casino:get_list()
    local result = {}
    table.insert(result, ""\n"")
    for _, item in ipairs(self.items or {}) do
        local displayName = string.gsub(item.name, ""&"", ""§"", 1)
        if item.count == 1 then
            table.insert(result, ""§l"" .. displayName .. "" Шанс: ""  .. item.chance * 100 * 10 .. ""%"")
        else
            table.insert(result, ""§l"" .. displayName .. "" x"" .. item.count.. "" Шанс: ""  .. item.chance * 100 * 10 .. ""%"")
        end
    end
    local resultString = table.concat(result, ""\n"")
end

function Casino:sendMoney(count)
    component.proxy(self.addressMoneyChest).transferItem(0, 1, count, 1, 1)
end

function Casino:generateWeightedArray()
    local weightedArray = {}
    for i, item in ipairs(self.items) do
        -- Умножаем вероятность на 100, чтобы получить целое число для повторений
        local repetitions = math.floor(item.chance * 100)
        for j = 1, repetitions do
            table.insert(weightedArray, i)  -- сохраняем индекс предмета в массив
        end
    end
    return weightedArray
end

function Casino:weightedRoll()
    local weightedArray = self:generateWeightedArray()
    local randomIndex = math.random(1, #weightedArray)
    local itemIndex = weightedArray[randomIndex]
    return self.items[itemIndex]
end

return Casino

"
XNiLyRDR,LabaSqlGraph,PavloSerg,T-SQL,Thursday 12th of October 2023 12:32:04 PM CDT,"--Создание схем как на паре
create schema [Nodes]
go
create schema [Edges]
go


--Создание графовых таблиц с человеческими названиями
create table Nodes.SprayPaints
(
    Id    int primary key,
    Name  nvarchar(35) not null,
    Color char(1)      not null
) as Node

create table Nodes.Squares
(
    Id   int primary key,
    Name nvarchar(35) not null
) as Node

create table Edges.Paints
(
    Datetime datetime not null,
    Volume   tinyint  not null
) as Edge


--Заполение таблиц
insert into Nodes.SprayPaints(Id, Name, Color)
select *
from dbo.utV

insert into Nodes.Squares(Id, Name)
select *
from dbo.utQ


insert into Edges.Paints($from_id, $to_id, Volume, Datetime)
select SprayPaints.$node_id as from_id,
    Squares.$node_id as to_id,
    utB.B_VOL as Volume,
    utB.B_DATETIME as Datetime
from Nodes.SprayPaints
    join dbo.utB on SprayPaints.Id = utB.B_V_ID
    join Nodes.Squares on utB.B_Q_ID = Squares.Id


--Запросы
--1) Найти квадраты, которые окрашивались красной краской.
--Вывести идентификатор квадрата и объем красной краски.
select Squares.Id,
       sum(Paints.Volume) as RedVolume
from Nodes.SprayPaints,
     Edges.Paints,
     Nodes.Squares
where match(SprayPaints - (Paints) -> Squares)
  and SprayPaints.Color = 'R'
group by Squares.Id


--2) Найти квадраты, которые окрашивались как красной, так и синей краской.
--Вывести: название квадрата.
select Squares.Name
from Nodes.SprayPaints,
     Edges.Paints,
     Nodes.Squares
where match(SprayPaints - (Paints) -> Squares) and SprayPaints.Color in ('R', 'B')
group by Squares.Id, Squares.Name
having count(distinct SprayPaints.Color) = 2

--3) Найти квадраты, которые окрашивались всеми тремя цветами.
select Squares.Id
from Nodes.SprayPaints,
     Edges.Paints,
     Nodes.Squares
where match(SprayPaints - (Paints) -> Squares)
group by Squares.Id
having count(distinct SprayPaints.Color) = 3

--4) Найти баллончики, которыми окрашивали более одного квадрата.
select SprayPaints.Id
from Nodes.SprayPaints,
     Edges.Paints,
     Nodes.Squares
where match(SprayPaints - (Paints) -> Squares)
group by SprayPaints.Id
having count(distinct Squares.Id) > 1

--Свои запросы
--1) Найти баллончик(и) которым(ими) окрашивали наибольшое количество квадратов и вывести это количество
select top 1 with ties SprayPaints.Id, count(distinct Squares.Id) SquaresCount
from Nodes.SprayPaints,
     Edges.Paints,
     Nodes.Squares
where match(SprayPaints - (Paints) -> Squares)
group by SprayPaints.Id
order by SquaresCount desc


--2) Найти черные(не покрашенные) квадраты
select Squares.Id
from Nodes.Squares
except
select Squares.Id
from Nodes.SprayPaints,
     Edges.Paints,
     Nodes.Squares
where match(SprayPaints - (Paints) -> Squares)
group by Squares.Id

--3) Найти белые квадраты
with RedVolumes as (
        select Squares.Id,
               sum(Paints.Volume) as RedVolume
        from Nodes.SprayPaints,
             Edges.Paints,
             Nodes.Squares
        where match(SprayPaints - (Paints) -> Squares)
          and SprayPaints.Color = 'R'
        group by Squares.Id
    ),
    BlueVolumes as (
        select Squares.Id,
                   sum(Paints.Volume) as BlueVolume
            from Nodes.SprayPaints,
                 Edges.Paints,
                 Nodes.Squares
            where match(SprayPaints - (Paints) -> Squares)
              and SprayPaints.Color = 'B'
            group by Squares.Id
    ),
    GreenVolumes as (
        select Squares.Id,
                   sum(Paints.Volume) as GreenVolume
            from Nodes.SprayPaints,
                 Edges.Paints,
                 Nodes.Squares
            where match(SprayPaints - (Paints) -> Squares)
              and SprayPaints.Color = 'G'
            group by Squares.Id
    )
select RedVolumes.Id,
       BlueVolume,
       RedVolume,
       GreenVolume
from RedVolumes
join BlueVolumes on BlueVolumes.Id = RedVolumes.Id
join GreenVolumes on GreenVolumes.Id = RedVolumes.Id
where BlueVolume = 255 and RedVolume = 255 and GreenVolume = 255"
i3JVBYdG,Untitled,EddyCZ,M68000 Assembler,Thursday 12th of October 2023 12:17:53 PM CDT,".model small
.data
seed dw 0

.code
org 100h  ; Set the program entry point to 100h

main:
    mov ax, 40h     ; Function to get system time
    int 21h         ; Call DOS interrupt
    mov bx, dx      ; Store the time in bx (a 16-bit register)

    mov ax, bx      ; Use bx as the seed
    imul ax, 25173  ; Multiply by a constant
    add ax, 13849  ; Add another constant
    xor dx, dx      ; Clear dx
    div word ptr [seed]  ; Divide by the seed (word_87CA in your original code)
    mov [seed], ax  ; Store the new seed

    ; Now, ax contains a pseudo-random number between 0 and 65535

    ; Your code here to use the random number as needed

    int 20h         ; Terminate the program

end main
"
iVN1NkuL,minibae convert directory of midis to wav,zefie,Winbatch,Thursday 12th of October 2023 12:05:03 PM CDT,"@ECHO OFF
SETLOCAL EnableDelayedExpansion


SET PATCHES=patches-wtv-uncompressed.hsb
SET IN_DIRECTORY=midi
SET OUT_DIRECTORY=wav

for /f ""tokens=*"" %%f IN ('DIR !IN_DIRECTORY!\*.mid /A /B') do (
    echo Converting !IN_DIRECTORY!\%%f ...
    playbae -q -p %PATCHES% -o ""!OUT_DIRECTORY!\%%~nf.wav"" -f ""!IN_DIRECTORY!\%%f""
)"
bYPrieNt,WINAPI CLOWN_PIANO,Tiranka1861,C++ (WinAPI),Thursday 12th of October 2023 12:04:06 PM CDT,"#include <Windows.h> 
#pragma comment(lib, ""Winmm.lib"")

typedef	char MIDIKey;

#define COLOR_WHITE			0
#define COLOR_BLACK			1

#define IS_BLACK(k) (0X54A & (1 << ((k) % 12)))

#define PIANO_WHITEHEIGHT	290
#define PIANO_WHITEWIDHT	46
#define PIANO_BLACKHEIGHT	170
#define PIANO_BLACKWIDHT	30

#define MIDIKEY_FIRST		48
#define MIDIKEY_LAST		71

HMIDIOUT	hMidiOut;
HBRUSH		hbrWhite, hbrBlack;
RECT		keyRects[128];

void CalcKeyRect(RECT *pRects, MIDIKey mkFirst, MIDIKey mkLast) 
{
	RECT rcWhite, rcBlack;
	MIDIKey key;

	//if (IS_BLACK(mkFirst))
	//	mkFirst--;

	//mkFirst = IS_BLACK(mkFirst) ? mkFirst - 1 : mkFirst;

	mkFirst -= !!IS_BLACK(mkFirst);
	mkLast += !!IS_BLACK(mkLast);		//Грязный код фу!

	SetRect(&rcWhite, 0, 0, PIANO_WHITEWIDHT, PIANO_WHITEHEIGHT);
	SetRect(&rcBlack, -PIANO_BLACKWIDHT / 2, 0, PIANO_BLACKWIDHT / 2, PIANO_BLACKHEIGHT);
	for (key = mkFirst; key <= mkLast; key++)
	{
		if (IS_BLACK(key))
		{
			CopyRect(&pRects[key], &rcBlack);
		}
		else
		{
			CopyRect(&pRects[key], &rcWhite);
			OffsetRect(&rcWhite, PIANO_WHITEWIDHT, 0);
			OffsetRect(&rcBlack, PIANO_WHITEWIDHT, 0);
		}

		
	}
}


void DrawPiano(HDC hdc, MIDIKey mkFirst, MIDIKey mkLast)
{
	char color;
	MIDIKey key;

	mkFirst -= !!IS_BLACK(mkFirst);
	mkLast += !!IS_BLACK(mkLast);

	SaveDC(hdc);

	for(color = COLOR_WHITE; color <= COLOR_BLACK; color++)
	{
		if (COLOR_BLACK == color) 
			SelectObject(hdc, hbrBlack);
		else
			SelectObject(hdc, hbrWhite);
		for (key = mkFirst; key <= mkLast; ++key)
			if (!IS_BLACK(key) ^ color)
				Rectangle(hdc, keyRects[key].left, keyRects[key].top, keyRects[key].right, keyRects[key].bottom);
	}
	RestoreDC(hdc, -1);
}


LRESULT CALLBACK WindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
	PAINTSTRUCT ps;
	switch (uMsg)
	{
	case WM_PAINT:
		BeginPaint(hWnd, &ps);
		DrawPiano(ps.hdc, MIDIKEY_FIRST, MIDIKEY_LAST);
		EndPaint(hWnd, &ps);
		break;
	case WM_KEYDOWN:
		midiOutShortMsg(hMidiOut, 0x7F4090); //7f - Сила нажатия, 40 - номер ноты, 90 -  
		break;
	case WM_KEYUP:
		midiOutShortMsg(hMidiOut, 0x7F4080); //7f - Сила нажатия, 40 - номер ноты, 90 -  
		break;

	case WM_DESTROY:
		PostQuitMessage(0);
		break;
	}
	return DefWindowProc(hWnd, uMsg, wParam, lParam);
}

INT WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR lpCmdLine, INT nCmdShow)
{
	WNDCLASSEX wcex;
	MSG msg;

	memset(&wcex, 0, sizeof(wcex)); //Сразу все поля инициализирует 0 
	wcex.cbSize = sizeof(WNDCLASSEX);
	wcex.lpfnWndProc = WindowProc;
	wcex.hInstance = hInstance;
	wcex.hCursor = LoadCursor(0, IDC_CROSS);
	wcex.hbrBackground = (HBRUSH)(COLOR_HIGHLIGHT + 1);
	wcex.lpszClassName = L""MyCoolWindowClass"";
	RegisterClassEx(&wcex);

	CalcKeyRect(keyRects, MIDIKEY_FIRST, MIDIKEY_LAST);
	
	midiOutOpen(&hMidiOut, MIDI_MAPPER, 0, 0, CALLBACK_NULL);
	//Для работы был добавлен winmm.lib (ппроект->свойства->компоновщик->ввод->winmm.lib; 

	hbrBlack = CreateSolidBrush(0x000000);
	hbrWhite = CreateSolidBrush(0xFFFFFF);

	midiOutShortMsg(hMidiOut, 0x7F4090); //7f - Сила нажатия, 40 - номер ноты, 90 -  
	midiOutShortMsg(hMidiOut, 0x7F4390);
	midiOutShortMsg(hMidiOut, 0x7F4790);

	CreateWindowEx(0, wcex.lpszClassName, L""ClownPiano!"", WS_OVERLAPPEDWINDOW | WS_VISIBLE, 0, 0, 400, 300, 0, 0, hInstance, NULL);

	while (GetMessage(&msg, 0, 0, 0))
	{
		DispatchMessage(&msg);
	}
	DeleteObject(hbrBlack);
	DeleteObject(hbrWhite);
	DeleteObject(hMidiOut);
	midiOutClose(hMidiOut);
	return msg.wParam;
}"
QtkAM45a,Untitled,Josif_tepe,C++,Thursday 12th of October 2023 11:59:12 AM CDT,"#include <iostream>
#include <vector>
#include <queue>
#include <set>
#include <fstream>
using namespace std;
const int maxn=5555;
const int INF = 2e9;
vector<pair<int, int> > graph[maxn];
int bfs(int S, int k) {
    vector<bool> visited(maxn, false);
    visited[S] = true;
    queue<int> q;
    q.push(S);
    q.push(INF);
    int res = 0;
    while(!q.empty()) {
        int node = q.front();
        q.pop();
        int dist = q.front();
        q.pop();
        
        if(node != S and dist >= k) {
            res++;
        }
        for(int i = 0; i < (int) graph[node].size(); i++) {
            int neighbour = graph[node][i].first;
            int weight = graph[node][i].second;
            
            if(!visited[neighbour]) {
                visited[neighbour] = true;
                q.push(neighbour);
                q.push(min(dist, weight));
            }
        }
    }
    return res;
}
int main() {
    ifstream cin(""mootube.in"");
    ofstream cout(""mootube.out"");
    int n, q;
    cin >> n >> q;
    
    for(int i = 0; i < n - 1; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
        int k;
        cin >> k;
        
        graph[a].push_back(make_pair(b, k));
        graph[b].push_back(make_pair(a, k));
    }
    
    for(int i = 0; i < q; i++) {
        int a, k;
        cin >> k >> a;
        a--;
        
        cout << bfs(a, k) << endl;
        
    }
    
    return 0;
}
"
fMSjUNZS,Untitled,tomdodd4598,Python,Thursday 12th of October 2023 11:53:27 AM CDT,"from urllib.request import urlopen

# Get data as string
x = urlopen('https://www.nsstc.uah.edu/data/msu/v6.0/tlt/uahncdc_lt_6.0.txt').read().decode('utf-8')

# Split data by line
x = x.split('\n')

# Remove non-data lines
x = x[1:539]

# Split data by whitespace
x = [y.split() for y in x]

# Enumerate over Jan-Sep in years >= 2015
x = tuple((i - 433, float(y[2])) for i, y in enumerate(x) if int(y[0]) >= 2015 and int(y[1]) < 10)

# Now plot this data with your tool of choice
print(x)
"
h6w3p3Ak,Untitled,Josif_tepe,C++,Thursday 12th of October 2023 11:29:40 AM CDT,"#include <iostream>
#include <vector>
#include <queue>
#include <set>
using namespace std;
const int maxn=500000;

int main() {
    int n;
    cin >> n;
    
    int nodes_as_trees = 0;
    set<int> st;
    for(int i = 1; i <= n; i++) {
        int x;
        cin >> x;
        if(x == i) {
            nodes_as_trees++;
        }
        else {
            st.insert(x);
        }
    }
    cout << (int) st.size() / 2 + nodes_as_trees << endl;

    return 0;
}
"
ZanYiASf,Untitled,EddyCZ,C,Thursday 12th of October 2023 11:22:34 AM CDT,"undefined4 __cdecl16near FUN_0000_059a(undefined2 param_1)

{
  byte *pbVar1;
  byte *pbVar2;
  code *pcVar3;
  undefined2 in_AX;
  undefined2 uVar4;
  int iVar5;
  int iVar6;
  undefined2 in_DX;
  byte *extraout_DX;
  byte *pbVar7;
  byte *pbVar8;
  undefined2 unaff_ES;
  undefined2 unaff_DS;
  undefined in_CF;
  bool bVar9;
  undefined in_ZF;
  
  *(undefined2 *)FUN_0000_059a = in_DX;
  FUN_0000_03ad();
  FUN_0000_03ad();
  pcVar3 = (code *)swi(0x21);
  uVar4 = (*pcVar3)();
  if (!(bool)in_CF) {
    *(undefined2 *)0x5ac = uVar4;
    do {
      pcVar3 = (code *)swi(0x21);
      (*pcVar3)(register0x00000010);
      if ((bool)in_CF) goto LAB_0000_0618;
      pbVar7 = (byte *)0x5ae;
      iVar5 = 0x10;
      pbVar8 = extraout_DX;
      do {
        if (iVar5 == 0) break;
        iVar5 = iVar5 + -1;
        pbVar2 = pbVar8;
        pbVar8 = pbVar8 + 1;
        pbVar1 = pbVar7;
        pbVar7 = pbVar7 + 1;
        in_CF = *pbVar1 < *pbVar2;
        in_ZF = *pbVar1 == *pbVar2;
      } while ((bool)in_ZF);
    } while (!(bool)in_ZF);
    bVar9 = false;
    pcVar3 = (code *)swi(0x21);
    (*pcVar3)();
    if (!bVar9) {
      iVar6 = 0x10;
      pcVar3 = (code *)swi(0x21);
      iVar5 = (*pcVar3)();
      if ((!bVar9) && (iVar5 == iVar6)) {
        pcVar3 = (code *)swi(0x21);
        (*pcVar3)();
      }
    }
  }
LAB_0000_0618:
  return CONCAT22(in_AX,param_1);
}
"
1GhVkHBz,Untitled,taina1,TypeScript,Thursday 12th of October 2023 11:21:45 AM CDT,"function loadCSVFile(userCommand: string): string[][] | null {
        const [command, filePath, ...flags] = userCommand.split(' ');
      
        const includeHeader = flags.includes('--header');
      
        if (command.toLowerCase() === 'load_file' && mockedDataMap.hasOwnProperty(filePath)) {
          const data = mockedDataMap[filePath];
          sensitiveHeaders
          
          if (includeHeader) {
            // If the --header flag is set, return the entire data including the header
            // store header variable
        
            const header = data.slice(1)
          } else {
            // If the --header flag is not set, return the data excluding the header
            
          }
        } else {
          if (command !===  
        }
        return null;
      }

    
const mockedDataMap: Record<string, any[][]> = {
  ""normal.csv"": [
    [""name"", ""age""],
    [""Jay"", ""21""],
    [""Blake"", ""20""],
    [""Tiffney"", ""20""],
  ],
  ""gradeBook.csv"": [
    [""Student ID"", ""Name"", ""Grade"", ""Gender""],
    [""1001"", ""Alice"", ""A"", ""Female""],
    [""1002"", ""Bob"", ""C"", ""Male""],
    [""1003"", ""Charlie"", ""B"", ""Male""],
    [""1004"", ""David"", ""B"", ""Male""],
  ],

  ""missingColumn.csv"": [
    [""Product"", ""Price""],
    [""Widget"", ""10.99"", ""100""],
    [""Gadget"", ""19.99"", ""75""],
    [""Doodad"", ""5.49"", ""200""],
    [""Thingamajig"", ""15.79"", ""50""],
  ],
  ""noHeader.csv"": [
    [""1"", ""Alice"", ""25"", ""New York""],
    [""2"", ""Bob"", ""30"", ""Los Angeles""],
    [""3"", ""Charlie"", ""28"", ""Chicago""],
    [""4"", ""David"", ""22"", ""San Francisco""],
    [""5"", ""Eve"", ""29"", ""Miami""],
  ],
};

// Accessing a dataset using a pretend file path
const selectedDataset = mockedDataMap[""exampleCSV1.csv""];

// Example: Iterate through the dataset
for (const row of selectedDataset) {
  console.log(row.join("", ""));
}
"
3vTcCBEs,Untitled,Josif_tepe,C++,Thursday 12th of October 2023 11:05:50 AM CDT,"#include <iostream>
#include <vector>
#include <queue>
using namespace std;
const int maxn=500000;
vector<int> graph[maxn];
pair<int, int> bfs(int S) {
    queue<int> q;
    q.push(S);
    q.push(0);
    vector<bool> visited(maxn, false);
    visited[S] = true;
    
    int max_dist = 0;
    int furthest_node = -1;
    while(!q.empty()) {
        int node = q.front();
        q.pop();
        int dist = q.front();
        q.pop();
        
        if(max_dist < dist) {
            max_dist = dist;
            furthest_node = node;
        }
        for(int i = 0; i < (int) graph[node].size(); i++) {
            int neighbour = graph[node][i];
            if(!visited[neighbour]) {
                visited[neighbour] = true;
                q.push(neighbour);
                q.push(dist + 1);
            }
        }
        
    }
    return make_pair(furthest_node, max_dist);
}
int main() {
    int n;
    cin >> n;
    if(n == 1) {
        cout << 0 << endl;
        return 0;
    }
    for(int i = 1; i < n; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    int farthest_node_from_node_0 = bfs(0).first;
    int res = bfs(farthest_node_from_node_0).second;
    
    cout << res << endl;
    return 0;
}
"
e8kRZYWm,Binary to Decimal Conversion,X6Galixia,C++,Thursday 12th of October 2023 10:59:17 AM CDT,"#include <iostream>
#include <cmath>

#define p(x) std::cout<<x;
#define i(y) std::cin>>y;

int btd(long n){
  int dc = 0, i = 0, rm;
  while(n != 0){
    rm = n % 10;
    dc += rm * pow(2,i);
    n /= 10;
    i++;
  }
  return dc;
}

int main(){
  int input;
  p(""enter a binary number: "");
  i(input);

  p(""decimal conversion: "");
  p(btd(input));
}
"
1QJLxSv5,Untitled,Josif_tepe,C++,Thursday 12th of October 2023 10:42:57 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int max_=500000;
int tree_size[max_];
vector<int> neig[max_];
int r(int node){
    tree_size[node] = 1;

    for(int i=0; i<neig[node].size(); i++){
        r(neig[node][i]);
        tree_size[node] += tree_size[neig[node][i]];
        
    }
return tree_size[node]+1;
}
int main()
{
    int n;
    cin>>n;
    for(int i=2; i<=n; i++){
        int clen;
        cin>>clen;
        neig[clen].push_back(i);
    }
    r(1);
    for(int i=1; i<=n; i++){
        cout<<tree_size[i] - 1<<"" "";
    }
    return 0;
}
"
RPXHGXy6,Untitled,Josif_tepe,C++,Thursday 12th of October 2023 10:38:51 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int max_=500000;
int tree_size[max_];
vector<int> neig[max_];
int r(int node){
if(neig[node].size()==0){
    return 1;
}
else{
    for(int i=0; i<neig[node].size(); i++){
        tree_size[node]+=r(neig[node][i]);
    }
}
return tree_size[node]+1;
}
int main()
{
    int n;
    cin>>n;
    for(int i=2; i<=n; i++){
        int clen;
        cin>>clen;
        neig[clen].push_back(i);
    }
    r(1);
    for(int i=1; i<=n; i++){
        cout<<tree_size[i]<<"" "";
    }
    return 0;
}
"
5SrxBfMr,Decimal to Binary Conversion,X6Galixia,C++,Thursday 12th of October 2023 10:38:11 AM CDT,"#include <iostream>

#define p(x) std::cout<<x;
#define i(y) std::cin>>y;

void dtb(int n){
  int bn[32];
  int i = 0;
  while(n > 0){
    bn[i] = n % 2;
    n = n / 2;
    i++;
  }
  for (int j = i - 1; j >= 0; j--){
   p(bn[j]);
  }
}

int main(){
  int input = 0;

  p(""enter a decimal number :"");
  i(input);
  
  p(""binary conversion: "");
  dtb(input);

  return 0;
}"
naPHmQNu,AMW,ggscript,Lua,Thursday 12th of October 2023 10:23:23 AM CDT,"gg.alert(""analik"")
"
dv2WiC3R,avtmarket - robots.txt,Korzunov,Robots,Thursday 12th of October 2023 10:21:02 AM CDT,"User-agent: *
Disallow: *.pdf
Disallow: */user/
Disallow: */basket/
Disallow: *search=
Disallow: *load_more=
Disallow: *i=
Disallow: */login/
Disallow: /cron.php
Disallow: /install.php
Disallow: /update.php
Disallow: /admin
Disallow: /comment/reply
Disallow: /user
Disallow: /ajax_register

User-agent: AdsBot-Google
Disallow: *.pdf
Disallow: */user/
Disallow: */basket/
Disallow: *search=
Disallow: *load_more=
Disallow: *i=
Disallow: */login/
Disallow: /cron.php
Disallow: /install.php
Disallow: /update.php
Disallow: /admin
Disallow: /comment/reply
Disallow: /user
Disallow: /ajax_register


Sitemap: https://avtmarket.com.ua/sitemap.xml"
tK2LyrvK,Untitled,AdamMathieson,Lua,Thursday 12th of October 2023 09:50:40 AM CDT,"-- Monitoring for Fission Reactor

Reactor = peripheral.wrap(""fissionReactorLogicAdapter_0"")
Boiler = peripheral.wrap(""boilerValve_0"")
Monitor = peripheral.wrap(""monitor_2"")
PositiveStep = 0.05
NegativeStep = 0.75
HoldTime = 1500


counter = 11
icon = false
lastMove = ""-""
nextIncr = os.epoch(""local"")
Monitor.setTextScale(1)
Monitor.setTextColour(2)
Monitor.clear()
term.clear()
os.loadAPI(""bigfont"")

while true do
	waterQ = Boiler.getWaterFilledPercentage()
	coolantQ = Reactor.getCoolantFilledPercentage()
	damage = Reactor.getDamagePercent()
	BOOST = redstone.getInput(""left"")
	
	if waterQ < 0.25 or damage > 0.1 then
		Reactor.setBurnRate(0)
		redstone.setOutput(""top"", true)
	else
		redstone.setOutput(""top"", false)
		if BOOST then
			if waterQ < 0.95 or coolantQ < 0.95 then
				step = math.max((1-waterQ) * NegativeStep, (1-coolantQ) * NegativeStep)
				Reactor.setBurnRate(math.max(0.2, Reactor.getBurnRate() - step))
				lastMove = ""v""
			end
			if waterQ >= 0.99 and nextIncr <= os.epoch(""local"") and damage < 0.1 then
				Reactor.setBurnRate(math.min(15, Reactor.getBurnRate() + PositiveStep))
				lastMove = ""^""
				nextIncr = os.epoch(""local"") + HoldTime
			end
		else
			Reactor.setBurnRate(0.2)
		end
	end
	
	term.clear()
	term.setCursorPos(1, 1)
	term.write(""Burn Rate: "" .. Reactor.getBurnRate() .. "" "" .. lastMove)
	term.setCursorPos(1, 2)
	term.write(""Next Incr:"" .. (nextIncr - os.epoch(""local"")) .. ""ms"")
	Monitor.clear()
	Monitor.setCursorPos(1, 1)
	bigfont.writeOn(Monitor,1, tostring(Reactor.getBurnRate()) .. "" "" .. lastMove,4,2)
	if icon then
		w,h = term.getSize()
		term.setCursorPos(w, h)
		term.write(""*"")
		w,h = Monitor.getSize()
		Monitor.setCursorPos(w, h)
		Monitor.write(""*"")
	else
		w,h = term.getSize()
		term.setCursorPos(w, h)
		term.write("" "")
		w,h = Monitor.getSize()
		Monitor.setCursorPos(w, h)
		Monitor.write("" "")
	end
	if BOOST then
		term.setCursorPos(1, 3)
		term.write(""BOOST Mode"")
		w,h = Monitor.getSize()
		Monitor.setCursorPos(1, h)
		Monitor.write(""BOOST"")
	else
		term.setCursorPos(1, 3)
		term.write(""Sleep Mode"")
		w,h = Monitor.getSize()
		Monitor.setCursorPos(1, h)
		Monitor.write(""Sleep..."")
	end
	if counter >= 5 then
		icon = not icon
		lastMove = ""-""
		counter = 0
	end
	counter = counter + 1
end"
EezQw79P,Licznik Ostry elektronika,wiktortokumpel,Java,Thursday 12th of October 2023 09:31:36 AM CDT,"package licznik;

public class Licznik {
	private double wskazanieGlobalne;
	private double wskazanieLokalne;
	private int test;
	public double getwskazanieGlobalne(){
		return wskazanieGlobalne;
	}
	{
		test=100;
	}
	public Licznik(){
		wskazanieGlobalne=0;
		wskazanieLokalne=0;
	}
	public Licznik(double wartosc){
		wskazanieGlobalne=wartosc;
		wskazanieLokalne=0;
	}
	public Licznik(double wskazanieGlobalne,double wskazanieLokalne){
		this.wskazanieGlobalne=wskazanieGlobalne;
		this.wskazanieLokalne=wskazanieLokalne;
	}
	public void setwskazanieGlobalne(double x){
		
	}
	public void setwskazanieLokalne(double x){
		wskazanieLokalne=0;
	}
	public void reset(){
		wskazanieLokalne=0;
	}
	public void wsyswietlwskazanieGlobalne(){
		System.out.println(wskazanieGlobalne);
	}
	public void wsyswietlwskazanieLokalne(){
		System.out.println(wskazanieLokalne);
	}
	public void zwieksz(int dx){
		wskazanieGlobalne+=dx;
		wskazanieLokalne+=dx;
	}
	public void zwieksz(double dx){
		wskazanieGlobalne+=dx;
		wskazanieLokalne+=dx;
	}
	public static void main(String []args){
		Licznik l=new Licznik(153, 25);
		System.out.println(l.test);
		l.wsyswietlwskazanieGlobalne();
		l.wsyswietlwskazanieLokalne();
		
		l.setwskazanieGlobalne(100);
		l.setwskazanieLokalne(100);
		
		l.wsyswietlwskazanieGlobalne();
		l.wsyswietlwskazanieLokalne();
		
		l.zwieksz(20.3);
		
		l.wsyswietlwskazanieGlobalne();
		l.wsyswietlwskazanieLokalne();
		System.out.println(""aktualne wskazanie licznika:""+l.getwskazanieGlobalne());
	}
	
}
"
RqMCkJyM,News Oct12 23,Newscaster_Ned,Email,Thursday 12th of October 2023 08:39:38 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎y‎o‎u‎ ‎J‎e‎w‎ ‎m‎o‎n‎k‎e‎y‎ ‎f‎r‎e‎a‎k‎s‎.‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎H‎e‎r‎z‎o‎g‎ ‎B‎l‎a‎s‎t‎s‎ ‎C‎N‎N‎ ‎f‎o‎r‎ ‎A‎c‎c‎u‎s‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎o‎f‎ ‎'‎W‎a‎r‎ ‎C‎r‎i‎m‎e‎'‎
L‎e‎B‎r‎o‎n‎ ‎J‎a‎m‎e‎s‎ ‎C‎o‎n‎d‎e‎m‎n‎s‎ ‎H‎a‎m‎a‎s‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎:‎ ‎'‎U‎n‎a‎c‎c‎e‎p‎t‎a‎b‎l‎e‎'‎
M‎a‎r‎l‎o‎w‎’‎s‎ ‎B‎o‎m‎b‎s‎h‎e‎l‎l‎ ‎B‎o‎o‎k‎ ‎‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎ ‎L‎a‎n‎d‎s‎ ‎o‎n‎ ‎N‎Y‎T‎ ‎B‎e‎s‎t‎ ‎S‎e‎l‎l‎e‎r‎s‎ ‎L‎i‎s‎t‎
I‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎S‎t‎i‎l‎l‎ ‎T‎o‎o‎ ‎H‎o‎t‎:‎ ‎C‎o‎n‎s‎u‎m‎e‎r‎ ‎P‎r‎i‎c‎e‎s‎ ‎R‎i‎s‎e‎ ‎F‎a‎s‎t‎e‎r‎ ‎T‎h‎a‎n‎ ‎E‎x‎p‎e‎c‎t‎e‎d‎
W‎a‎t‎c‎h‎:‎ ‎S‎e‎n‎.‎ ‎J‎o‎h‎n‎ ‎F‎e‎t‎t‎e‎r‎m‎a‎n‎ ‎E‎x‎p‎l‎a‎i‎n‎s‎ ‎‘‎A‎m‎e‎r‎i‎c‎a‎ ‎I‎s‎ ‎N‎o‎t‎ ‎S‎e‎n‎d‎i‎n‎g‎ ‎T‎h‎e‎i‎r‎ ‎B‎e‎s‎t‎'‎
N‎o‎ ‎P‎o‎w‎e‎r‎ ‎o‎r‎ ‎W‎a‎t‎e‎r‎ ‎U‎n‎t‎i‎l‎ ‎A‎l‎l‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎S‎a‎y‎s‎ ‎I‎s‎r‎a‎e‎l‎
N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎S‎a‎n‎c‎t‎i‎o‎n‎s‎ ‎o‎n‎ ‎C‎o‎u‎n‎t‎r‎i‎e‎s‎ ‎t‎h‎a‎t‎ ‎H‎a‎r‎b‎o‎r‎ ‎H‎a‎m‎a‎s‎
H‎a‎r‎p‎e‎r‎'‎s‎ ‎B‎a‎z‎a‎a‎r‎ ‎E‎I‎C‎ ‎K‎n‎o‎c‎k‎e‎d‎ ‎f‎o‎r‎ ‎S‎a‎y‎i‎n‎g‎ ‎G‎a‎z‎a‎ ‎S‎i‎e‎g‎e‎ ‎'‎M‎o‎s‎t‎ ‎I‎n‎h‎u‎m‎a‎n‎ ‎T‎h‎i‎n‎g‎'‎
W‎h‎y‎ ‎‘‎S‎m‎a‎r‎t‎ ‎M‎o‎n‎e‎y‎’‎ ‎I‎s‎ ‎U‎s‎i‎n‎g‎ ‎a‎ ‎B‎a‎c‎k‎d‎o‎o‎r‎ ‎W‎a‎y‎ ‎t‎o‎ ‎P‎l‎a‎y‎ ‎A‎I‎’‎s‎ ‎$‎1‎5‎ ‎T‎r‎i‎l‎l‎i‎o‎n‎ ‎B‎o‎o‎m‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
W‎A‎T‎C‎H‎:‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎H‎e‎r‎z‎o‎g‎ ‎B‎l‎a‎s‎t‎s‎ ‎C‎N‎N‎ ‎f‎o‎r‎ ‎A‎c‎c‎u‎s‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎o‎f‎ ‎‘‎W‎a‎r‎ ‎C‎r‎i‎m‎e‎’‎
I‎s‎a‎a‎c‎ ‎H‎e‎r‎z‎o‎g‎ ‎(‎K‎e‎v‎i‎n‎ ‎D‎i‎e‎t‎s‎c‎h‎ ‎/‎ ‎G‎e‎t‎t‎y‎)‎
I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎I‎s‎a‎a‎c‎ ‎H‎e‎r‎z‎o‎g‎ ‎s‎l‎a‎m‎m‎e‎d‎ ‎C‎N‎N‎ ‎o‎n‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎ ‎f‎o‎r‎ ‎a‎c‎c‎u‎s‎i‎n‎g‎ ‎h‎i‎s‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎o‎f‎ ‎c‎o‎m‎m‎i‎t‎t‎i‎n‎g‎ ‎a‎ ‎“‎w‎a‎r‎ ‎c‎r‎i‎m‎e‎”‎ ‎b‎y‎ ‎i‎m‎p‎o‎s‎i‎n‎g‎ ‎h‎a‎r‎d‎s‎h‎i‎p‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎f‎ ‎G‎a‎z‎a‎ ‎a‎s‎ ‎i‎t‎ ‎r‎e‎s‎p‎o‎n‎d‎s‎ ‎t‎o‎ ‎a‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎t‎e‎r‎r‎o‎r‎ ‎a‎t‎t‎a‎c‎k‎ ‎b‎y‎ ‎t‎h‎e‎ ‎H‎a‎m‎a‎s‎ ‎t‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎g‎r‎o‎u‎p‎,‎ ‎w‎h‎i‎c‎h‎ ‎o‎p‎e‎r‎a‎t‎e‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎G‎a‎z‎a‎ ‎S‎t‎r‎i‎p‎.‎

J‎O‎E‎L‎ ‎B‎.‎ ‎P‎O‎L‎L‎A‎K‎1‎3‎1‎
🎉…‎B‎R‎E‎A‎K‎I‎N‎G‎ ‎B‎I‎D‎E‎N‎’‎ ‎M‎A‎K‎E‎S‎ ‎N‎E‎W‎ ‎Y‎O‎R‎K‎ ‎T‎I‎M‎E‎S‎’‎ ‎B‎E‎S‎T‎ ‎S‎E‎L‎L‎E‎R‎S‎ ‎L‎I‎S‎T‎🎉…	‎…‎

A‎ ‎p‎i‎c‎t‎u‎r‎e‎ ‎t‎a‎k‎e‎n‎ ‎o‎n‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎0‎,‎ ‎2‎0‎2‎3‎,‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎c‎l‎o‎s‎e‎d‎ ‎g‎a‎t‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎R‎a‎f‎a‎h‎ ‎b‎o‎r‎d‎e‎r‎ ‎c‎r‎o‎s‎s‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎E‎g‎y‎p‎t‎.‎ ‎G‎a‎z‎a‎'‎s‎ ‎b‎o‎r‎d‎e‎r‎ ‎c‎r‎o‎s‎s‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎E‎g‎y‎p‎t‎,‎ ‎i‎t‎s‎ ‎o‎n‎l‎y‎ ‎o‎n‎e‎ ‎t‎h‎a‎t‎ ‎b‎y‎p‎a‎s‎s‎e‎s‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎w‎a‎s‎ ‎h‎i‎t‎ ‎b‎y‎ ‎a‎n‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎a‎i‎r‎ ‎s‎t‎r‎i‎k‎e‎ ‎o‎n‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎0‎,‎ ‎2‎0‎2‎3‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎s‎e‎c‎o‎n‎d‎ ‎t‎i‎m‎e‎ ‎i‎n‎ ‎2‎4‎ ‎h‎o‎u‎r‎s‎,‎ ‎w‎i‎t‎n‎e‎s‎s‎e‎s‎ ‎a‎n‎d‎ ‎a‎ ‎r‎i‎g‎h‎t‎s‎ ‎g‎r‎o‎u‎p‎ ‎s‎a‎i‎d‎.‎ ‎W‎i‎t‎n‎e‎s‎s‎e‎s‎ ‎s‎a‎i‎d‎ ‎t‎h‎e‎ ‎s‎t‎r‎i‎k‎e‎ ‎h‎i‎t‎ ‎t‎h‎e‎ ‎n‎o‎-‎m‎a‎n‎'‎s‎ ‎l‎a‎n‎d‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎t‎h‎e‎ ‎E‎g‎y‎p‎t‎i‎a‎n‎ ‎a‎n‎d‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎g‎a‎t‎e‎s‎,‎ ‎d‎a‎m‎a‎g‎i‎n‎g‎ ‎t‎h‎e‎ ‎h‎a‎l‎l‎ ‎o‎n‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎s‎i‎d‎e‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎S‎A‎I‎D‎ ‎K‎H‎A‎T‎I‎B‎ ‎/‎ ‎A‎F‎P‎)‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎S‎A‎I‎D‎ ‎K‎H‎A‎T‎I‎B‎/‎A‎F‎P‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
E‎g‎y‎p‎t‎ ‎F‎o‎r‎t‎i‎f‎i‎e‎s‎ ‎B‎o‎r‎d‎e‎r‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎P‎o‎s‎s‎i‎b‎l‎e‎ ‎E‎x‎o‎d‎u‎s‎ ‎o‎f‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎
6‎6‎4‎

R‎e‎p‎o‎r‎t‎:‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎S‎o‎l‎d‎i‎e‎r‎s‎ ‎F‎i‎n‎d‎ ‎D‎e‎a‎d‎ ‎B‎a‎b‎i‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎H‎a‎m‎a‎s‎ ‎A‎t‎t‎a‎c‎k‎
6‎,‎2‎4‎8‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎F‎r‎e‎e‎z‎e‎ ‎I‎r‎a‎n‎'‎s‎ ‎$‎6‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎F‎r‎e‎e‎z‎e‎ ‎I‎r‎a‎n‎'‎s‎ ‎$‎6‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎
7‎,‎2‎4‎7‎
B‎i‎l‎l‎ ‎A‎c‎k‎m‎a‎n‎ ‎C‎a‎l‎l‎s‎ ‎o‎n‎ ‎H‎a‎r‎v‎a‎r‎d‎ ‎t‎o‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎N‎a‎m‎e‎s‎ ‎o‎f‎ ‎P‎r‎o‎-‎T‎e‎r‎r‎o‎r‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎
B‎i‎l‎l‎ ‎A‎c‎k‎m‎a‎n‎ ‎C‎a‎l‎l‎s‎ ‎o‎n‎ ‎H‎a‎r‎v‎a‎r‎d‎ ‎t‎o‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎N‎a‎m‎e‎s‎ ‎o‎f‎ ‎P‎r‎o‎-‎T‎e‎r‎r‎o‎r‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎
6‎0‎9‎
I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎H‎e‎r‎z‎o‎g‎ ‎B‎l‎a‎s‎t‎s‎ ‎C‎N‎N‎ ‎f‎o‎r‎ ‎A‎c‎c‎u‎s‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎o‎f‎ ‎'‎W‎a‎r‎ ‎C‎r‎i‎m‎e‎'‎
I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎H‎e‎r‎z‎o‎g‎ ‎B‎l‎a‎s‎t‎s‎ ‎C‎N‎N‎ ‎f‎o‎r‎ ‎A‎c‎c‎u‎s‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎o‎f‎ ‎'‎W‎a‎r‎ ‎C‎r‎i‎m‎e‎'‎
1‎3‎1‎
N‎e‎t‎a‎n‎y‎a‎h‎u‎:‎ ‎H‎a‎m‎a‎s‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎P‎u‎t‎ ‎T‎i‎r‎e‎s‎ ‎A‎r‎o‎u‎n‎d‎ ‎P‎e‎o‎p‎l‎e‎ ‎a‎n‎d‎ ‎B‎u‎r‎n‎e‎d‎ ‎T‎h‎e‎m‎ ‎A‎l‎i‎v‎e‎
N‎e‎t‎a‎n‎y‎a‎h‎u‎:‎ ‎H‎a‎m‎a‎s‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎P‎u‎t‎ ‎T‎i‎r‎e‎s‎ ‎A‎r‎o‎u‎n‎d‎ ‎P‎e‎o‎p‎l‎e‎ ‎a‎n‎d‎ ‎B‎u‎r‎n‎e‎d‎ ‎T‎h‎e‎m‎ ‎A‎l‎i‎v‎e‎
8‎,‎3‎9‎3‎
A‎O‎C‎ ‎D‎e‎n‎o‎u‎n‎c‎e‎s‎ ‎N‎Y‎C‎ ‎R‎a‎l‎l‎y‎ ‎C‎h‎e‎e‎r‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎m‎:‎ ‎‘‎U‎n‎a‎c‎c‎e‎p‎t‎a‎b‎l‎e‎'‎
A‎O‎C‎ ‎D‎e‎n‎o‎u‎n‎c‎e‎s‎ ‎N‎Y‎C‎ ‎R‎a‎l‎l‎y‎ ‎C‎h‎e‎e‎r‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎m‎:‎ ‎‘‎U‎n‎a‎c‎c‎e‎p‎t‎a‎b‎l‎e‎'‎
7‎8‎2‎
W‎a‎t‎c‎h‎:‎ ‎S‎e‎n‎.‎ ‎J‎o‎h‎n‎ ‎F‎e‎t‎t‎e‎r‎m‎a‎n‎ ‎E‎x‎p‎l‎a‎i‎n‎s‎ ‎‘‎A‎m‎e‎r‎i‎c‎a‎ ‎I‎s‎ ‎N‎o‎t‎ ‎S‎e‎n‎d‎i‎n‎g‎ ‎T‎h‎e‎i‎r‎ ‎B‎e‎s‎t‎'‎
W‎a‎t‎c‎h‎:‎ ‎S‎e‎n‎.‎ ‎J‎o‎h‎n‎ ‎F‎e‎t‎t‎e‎r‎m‎a‎n‎ ‎E‎x‎p‎l‎a‎i‎n‎s‎ ‎‘‎A‎m‎e‎r‎i‎c‎a‎ ‎I‎s‎ ‎N‎o‎t‎ ‎S‎e‎n‎d‎i‎n‎g‎ ‎T‎h‎e‎i‎r‎ ‎B‎e‎s‎t‎'‎
4‎8‎
B‎l‎a‎c‎k‎ ‎L‎i‎v‎e‎s‎ ‎M‎a‎t‎t‎e‎r‎ ‎S‎h‎o‎w‎s‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎H‎a‎m‎a‎s‎ ‎A‎m‎i‎d‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎
B‎l‎a‎c‎k‎ ‎L‎i‎v‎e‎s‎ ‎M‎a‎t‎t‎e‎r‎ ‎S‎h‎o‎w‎s‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎H‎a‎m‎a‎s‎ ‎A‎m‎i‎d‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎
7‎,‎0‎2‎0‎
G‎O‎P‎ ‎R‎e‎p‎.‎ ‎M‎i‎l‎l‎s‎:‎ ‎I‎ ‎H‎a‎d‎ ‎t‎o‎ ‎H‎e‎l‎p‎ ‎G‎e‎t‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎o‎u‎t‎ ‎o‎f‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎B‎i‎d‎e‎n‎ ‎W‎o‎n‎'‎t‎
G‎O‎P‎ ‎R‎e‎p‎.‎ ‎M‎i‎l‎l‎s‎:‎ ‎I‎ ‎H‎a‎d‎ ‎t‎o‎ ‎H‎e‎l‎p‎ ‎G‎e‎t‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎o‎u‎t‎ ‎o‎f‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎B‎i‎d‎e‎n‎ ‎W‎o‎n‎'‎t‎

 ‎N‎o‎'‎l‎e‎a‎n‎s‎ ‎N‎i‎g‎g‎a‎ ‎H‎o‎l‎d‎s‎ ‎W‎h‎i‎t‎e‎ ‎B‎i‎t‎c‎h‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎e‎r‎ ‎W‎i‎l‎l‎ ‎a‎n‎d‎ ‎R‎a‎p‎e‎s‎ ‎H‎e‎r‎.‎

N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎,‎ ‎c‎o‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎c‎r‎a‎b‎s‎,‎ ‎s‎t‎a‎y‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎y‎o‎u‎ ‎g‎o‎t‎ ‎r‎a‎p‎e‎d‎ ‎b‎y‎ ‎a‎ ‎n‎e‎g‎r‎o‎.‎


M‎i‎n‎n‎e‎a‎p‎o‎l‎i‎s‎ ‎M‎u‎d‎f‎l‎a‎p‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎2‎ ‎W‎o‎m‎e‎n‎.‎


N‎e‎g‎r‎o‎ ‎D‎o‎v‎e‎r‎ ‎A‎i‎r‎ ‎F‎o‎r‎c‎e‎ ‎B‎a‎s‎e‎ ‎A‎i‎r‎m‎a‎n‎ ‎G‎e‎t‎s‎ ‎1‎5‎ ‎Y‎e‎a‎r‎s‎ ‎f‎o‎r‎ ‎H‎a‎v‎i‎n‎g‎ ‎S‎e‎x‎ ‎w‎i‎t‎h‎ ‎1‎5‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎


P‎a‎c‎k‎ ‎o‎f‎ ‎N‎e‎g‎r‎o‎ ‎T‎e‎e‎n‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎C‎u‎t‎t‎i‎n‎g‎ ‎i‎n‎ ‎L‎i‎n‎e‎ ‎a‎t‎ ‎S‎i‎x‎ ‎F‎l‎a‎g‎s‎ ‎a‎n‎d‎ ‎P‎u‎m‎m‎e‎l‎i‎n‎g‎ ‎F‎a‎m‎i‎l‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎G‎r‎o‎u‎n‎d‎.‎


P‎h‎o‎e‎n‎i‎x‎v‎i‎l‎l‎e‎ ‎C‎o‎o‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎D‎e‎a‎d‎l‎y‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎.‎


O‎l‎d‎ ‎N‎i‎g‎g‎a‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎u‎n‎n‎i‎n‎g‎ ‎O‎v‎e‎r‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎i‎n‎ ‎H‎o‎m‎e‎ ‎D‎e‎p‎o‎t‎ ‎P‎a‎r‎k‎i‎n‎g‎ ‎l‎o‎t‎.‎


N‎e‎g‎r‎e‎s‎s‎ ‎S‎e‎t‎s‎ ‎K‎a‎n‎s‎a‎s‎ ‎C‎i‎t‎y‎ ‎A‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎o‎n‎ ‎F‎i‎r‎e‎ ‎a‎n‎d‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎R‎e‎s‎i‎d‎e‎n‎t‎s‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎B‎o‎r‎d‎e‎r‎-‎H‎o‎p‎p‎e‎r‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎D‎r‎u‎n‎k‎e‎n‎ ‎C‎r‎a‎s‎h‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎ ‎b‎e‎t‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎w‎i‎l‎l‎ ‎c‎h‎e‎e‎r‎ ‎y‎o‎u‎ ‎u‎p‎.‎

T‎o‎d‎a‎y‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎7‎°‎
/‎6‎8‎°‎
4‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎2‎ ‎|‎ ‎D‎a‎y‎
8‎7‎°‎
4‎%‎
S‎
1‎2‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎e‎a‎r‎l‎y‎,‎ ‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎p‎a‎r‎t‎i‎a‎l‎ ‎c‎l‎e‎a‎r‎i‎n‎g‎.‎ ‎H‎i‎g‎h‎ ‎8‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎0‎2‎ ‎p‎m‎
T‎h‎u‎ ‎1‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎8‎°‎
1‎3‎%‎
S‎
1‎1‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎t‎o‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎6‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
5‎:‎3‎4‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
6‎:‎1‎1‎ ‎p‎m‎
F‎r‎i‎ ‎1‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎2‎°‎
/‎6‎2‎°‎
2‎1‎%‎
W‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎4‎
S‎u‎n‎n‎y‎
8‎2‎°‎
/‎5‎6‎°‎
0‎%‎
N‎ ‎1‎5‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎5‎
S‎u‎n‎n‎y‎
7‎9‎°‎
/‎5‎2‎°‎
0‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎6‎
S‎u‎n‎n‎y‎
7‎7‎°‎
/‎4‎8‎°‎
2‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎7‎
S‎u‎n‎n‎y‎
7‎9‎°‎
/‎5‎2‎°‎
2‎%‎
E‎N‎E‎ ‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎1‎°‎
4‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎2‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎0‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎1‎°‎
/‎5‎9‎°‎
3‎3‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎5‎9‎°‎
2‎1‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎5‎9‎°‎
1‎7‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎3‎
S‎u‎n‎n‎y‎
8‎3‎°‎
/‎5‎8‎°‎
5‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎4‎
S‎u‎n‎n‎y‎
8‎1‎°‎
/‎5‎8‎°‎
4‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎9‎°‎
/‎5‎8‎°‎
1‎3‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎0‎°‎
/‎5‎9‎°‎
1‎6‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎S‎a‎n‎t‎a‎ ‎r‎a‎c‎e‎ ‎w‎a‎r‎.‎ ‎🎅🏼🎅🏿

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

G‎a‎r‎f‎i‎e‎l‎d‎
T‎h‎e‎ ‎c‎o‎m‎i‎c‎ ‎s‎t‎r‎i‎p‎,‎ ‎m‎o‎v‎i‎e‎,‎ ‎a‎n‎d‎ ‎t‎e‎l‎e‎v‎i‎s‎i‎o‎n‎ ‎s‎h‎o‎w‎ ‎a‎r‎e‎ ‎a‎l‎l‎ ‎a‎b‎o‎u‎t‎ ‎a‎ ‎f‎a‎t‎ ‎l‎a‎s‎a‎g‎n‎a‎-‎c‎r‎a‎z‎e‎d‎ ‎g‎e‎n‎d‎e‎r‎f‎l‎u‎i‎d‎ ‎p‎u‎5‎5‎y‎.‎ ‎T‎h‎e‎ ‎p‎l‎o‎t‎ ‎n‎e‎v‎e‎r‎ ‎t‎h‎i‎c‎k‎e‎n‎s‎.‎ ‎D‎u‎e‎ ‎t‎o‎ ‎i‎t‎s‎ ‎e‎x‎t‎r‎e‎m‎e‎l‎y‎ ‎h‎i‎g‎h‎ ‎l‎e‎v‎e‎l‎ ‎o‎f‎ ‎u‎n‎f‎u‎n‎n‎y‎,‎ ‎G‎a‎r‎f‎i‎e‎l‎d‎ ‎i‎s‎ ‎a‎ ‎f‎r‎e‎q‎u‎e‎n‎t‎ ‎t‎a‎r‎g‎e‎t‎ ‎o‎f‎ ‎P‎h‎o‎t‎o‎s‎h‎o‎p‎p‎e‎r‎s‎.‎ ‎S‎o‎m‎e‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎G‎a‎r‎f‎i‎e‎l‎d‎ ‎i‎s‎ ‎a‎ ‎r‎e‎h‎a‎s‎h‎ ‎o‎f‎ ‎""‎A‎ ‎C‎h‎r‎i‎s‎t‎m‎a‎s‎ ‎C‎a‎r‎o‎l‎""‎ ‎w‎i‎t‎h‎ ‎G‎a‎r‎f‎i‎e‎l‎d‎ ‎a‎s‎ ‎S‎c‎r‎o‎o‎g‎e‎ ‎a‎n‎d‎ ‎N‎e‎r‎m‎a‎l‎ ‎a‎s‎ ‎T‎i‎n‎y‎ ‎T‎i‎m‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎f‎a‎m‎o‎u‎s‎ ‎G‎a‎r‎f‎i‎e‎l‎d‎ ‎s‎t‎r‎i‎p‎ ‎o‎f‎ ‎a‎l‎l‎ ‎t‎i‎m‎e‎ ‎w‎a‎s‎ ‎p‎l‎a‎g‎i‎a‎r‎i‎z‎e‎d‎ ‎b‎y‎ ‎J‎i‎m‎ ‎D‎a‎v‎i‎s‎ ‎f‎r‎o‎m‎ ‎a‎n‎ ‎I‎t‎a‎l‎i‎a‎n‎ ‎c‎a‎r‎t‎o‎o‎n‎.‎

T‎h‎e‎ ‎c‎o‎m‎i‎c‎ ‎i‎t‎s‎e‎l‎f‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎i‎n‎ ‎1‎9‎7‎8‎.‎ ‎I‎t‎s‎ ‎b‎i‎r‎t‎h‎d‎a‎y‎s‎ ‎a‎r‎e‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎e‎d‎ ‎e‎v‎e‎r‎y‎ ‎y‎e‎a‎r‎ ‎i‎n‎ ‎D‎a‎v‎i‎s‎'‎ ‎s‎t‎o‎r‎i‎e‎s‎,‎ ‎y‎e‎t‎ ‎t‎h‎a‎t‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎c‎a‎t‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎w‎a‎n‎t‎ ‎t‎o‎ ‎d‎i‎e‎ ‎a‎n‎y‎w‎a‎y‎.‎ ‎S‎o‎m‎e‎ ‎a‎r‎g‎u‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎a‎ ‎p‎r‎o‎o‎f‎ ‎o‎f‎ ‎G‎a‎r‎f‎i‎e‎l‎d‎'‎s‎ ‎s‎u‎p‎e‎r‎p‎o‎w‎e‎r‎s‎,‎ ‎a‎l‎t‎h‎o‎u‎g‎h‎ ‎i‎n‎ ‎f‎a‎c‎t‎ ‎i‎t‎'‎s‎ ‎o‎n‎l‎y‎ ‎o‎n‎e‎ ‎o‎f‎ ‎m‎a‎n‎y‎ ‎s‎c‎i‎e‎n‎t‎i‎f‎i‎c‎a‎l‎l‎y‎ ‎p‎r‎o‎v‎e‎n‎ ‎i‎d‎i‎o‎t‎i‎c‎ ‎w‎a‎y‎s‎ ‎o‎f‎ ‎t‎i‎c‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎d‎a‎y‎ ‎o‎f‎f‎ ‎f‎o‎r‎ ‎a‎n‎ ‎a‎u‎t‎h‎o‎r‎.‎ ‎J‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎o‎t‎h‎e‎r‎ ‎c‎l‎a‎s‎s‎i‎c‎a‎l‎ ‎h‎i‎l‎a‎r‎i‎o‎u‎s‎ ‎j‎o‎k‎e‎s‎ ‎l‎i‎k‎e‎ ‎""‎I‎ ‎h‎a‎t‎e‎ ‎m‎o‎n‎d‎a‎y‎s‎""‎,‎ ‎""‎W‎h‎e‎r‎e‎ ‎i‎s‎ ‎m‎y‎ ‎f‎u‎c‎k‎i‎n‎'‎ ‎f‎o‎o‎d‎""‎,‎ ‎""‎K‎i‎l‎l‎ ‎a‎ ‎S‎p‎i‎d‎e‎r‎ ‎W‎e‎e‎k‎""‎ ‎e‎t‎c‎.‎


(‎(‎ ‎T‎H‎E‎ ‎C‎A‎T‎ ‎H‎A‎S‎ ‎Y‎O‎U‎R‎ ‎P‎I‎P‎E‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎b‎a‎l‎a‎ ‎s‎h‎a‎r‎k‎ ‎(‎B‎a‎l‎a‎n‎t‎i‎o‎c‎h‎e‎i‎l‎o‎s‎ ‎m‎e‎l‎a‎n‎o‎p‎t‎e‎r‎u‎s‎)‎ ‎i‎s‎ ‎a‎ ‎f‎i‎s‎h‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎C‎y‎p‎r‎i‎n‎i‎d‎a‎e‎,‎ ‎a‎n‎d‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎w‎o‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎g‎e‎n‎u‎s‎ ‎B‎a‎l‎a‎n‎t‎i‎o‎c‎h‎e‎i‎l‎o‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎f‎o‎u‎n‎d‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎e‎ ‎M‎a‎l‎a‎y‎ ‎P‎e‎n‎i‎n‎s‎u‎l‎a‎,‎ ‎S‎u‎m‎a‎t‎r‎a‎,‎ ‎a‎n‎d‎ ‎B‎o‎r‎n‎e‎o‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎a‎ ‎s‎i‎l‎v‎e‎r‎ ‎b‎o‎d‎y‎ ‎w‎i‎t‎h‎ ‎b‎l‎a‎c‎k‎ ‎m‎a‎r‎g‎i‎n‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎d‎o‎r‎s‎a‎l‎,‎ ‎c‎a‎u‎d‎a‎l‎,‎ ‎a‎n‎a‎l‎,‎ ‎a‎n‎d‎ ‎p‎e‎l‎v‎i‎c‎ ‎f‎i‎n‎s‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎b‎i‎g‎ ‎e‎y‎e‎s‎ ‎w‎h‎i‎c‎h‎ ‎i‎t‎ ‎u‎s‎e‎s‎ ‎t‎o‎ ‎f‎i‎n‎d‎ ‎a‎n‎d‎ ‎c‎a‎t‎c‎h‎ ‎i‎t‎s‎ ‎p‎r‎e‎y‎.‎ ‎T‎h‎e‎ ‎b‎a‎l‎a‎ ‎s‎h‎a‎r‎k‎ ‎h‎a‎s‎ ‎a‎ ‎m‎a‎x‎i‎m‎u‎m‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎3‎5‎ ‎c‎m‎ ‎(‎1‎4‎ ‎i‎n‎)‎.‎ ‎B‎a‎l‎a‎ ‎s‎h‎a‎r‎k‎s‎ ‎a‎r‎e‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎m‎i‎d‎w‎a‎t‎e‎r‎ ‎d‎e‎p‎t‎h‎s‎ ‎i‎n‎ ‎l‎a‎r‎g‎e‎ ‎a‎n‎d‎ ‎m‎e‎d‎i‎u‎m‎-‎s‎i‎z‎e‎d‎ ‎r‎i‎v‎e‎r‎s‎ ‎a‎n‎d‎ ‎l‎a‎k‎e‎s‎.‎ ‎T‎h‎e‎y‎ ‎f‎e‎e‎d‎ ‎o‎n‎ ‎p‎h‎y‎t‎o‎p‎l‎a‎n‎k‎t‎o‎n‎,‎ ‎b‎u‎t‎ ‎m‎o‎s‎t‎l‎y‎ ‎o‎n‎ ‎s‎m‎a‎l‎l‎ ‎c‎r‎u‎s‎t‎a‎c‎e‎a‎n‎s‎,‎ ‎r‎o‎t‎i‎f‎e‎r‎s‎,‎ ‎a‎n‎d‎ ‎i‎n‎s‎e‎c‎t‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎i‎r‎ ‎l‎a‎r‎v‎a‎e‎.‎ ‎T‎h‎e‎ ‎b‎a‎l‎a‎ ‎s‎h‎a‎r‎k‎ ‎i‎s‎ ‎l‎i‎s‎t‎e‎d‎ ‎a‎s‎ ‎a‎ ‎v‎u‎l‎n‎e‎r‎a‎b‎l‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎b‎y‎ ‎t‎h‎e‎ ‎I‎U‎C‎N‎ ‎R‎e‎d‎ ‎L‎i‎s‎t‎,‎ ‎h‎a‎v‎i‎n‎g‎ ‎b‎e‎c‎o‎m‎e‎ ‎r‎a‎r‎e‎ ‎o‎r‎ ‎e‎x‎t‎i‎n‎c‎t‎ ‎i‎n‎ ‎m‎a‎n‎y‎ ‎r‎i‎v‎e‎r‎ ‎b‎a‎s‎i‎n‎s‎ ‎o‎f‎ ‎i‎t‎s‎ ‎n‎a‎t‎i‎v‎e‎ ‎r‎a‎n‎g‎e‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎l‎a‎r‎g‎e‎ ‎n‎u‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎a‎r‎e‎ ‎b‎r‎e‎d‎ ‎i‎n‎ ‎c‎a‎p‎t‎i‎v‎i‎t‎y‎ ‎a‎n‎d‎ ‎e‎x‎p‎o‎r‎t‎e‎d‎ ‎f‎r‎o‎m‎ ‎T‎h‎a‎i‎l‎a‎n‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎q‎u‎a‎r‎i‎u‎m‎ ‎t‎r‎a‎d‎e‎.‎ ‎T‎h‎i‎s‎ ‎b‎a‎l‎a‎ ‎s‎h‎a‎r‎k‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎a‎t‎ ‎K‎a‎r‎l‎s‎r‎u‎h‎e‎ ‎Z‎o‎o‎ ‎i‎n‎ ‎K‎a‎r‎l‎s‎r‎u‎h‎e‎,‎ ‎G‎e‎r‎m‎a‎n‎y‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎H‎.‎ ‎Z‎e‎l‎l‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎n‎o‎w‎ ‎a‎n‎d‎ ‎w‎a‎t‎c‎h‎ ‎t‎h‎a‎t‎ ‎N‎e‎g‎r‎e‎s‎s‎ ‎W‎a‎n‎d‎a‎ ‎S‎y‎k‎e‎s‎ ‎d‎o‎ ‎o‎n‎e‎ ‎o‎f‎ ‎h‎e‎r‎ ‎c‎o‎m‎e‎d‎y‎ ‎r‎o‎u‎t‎i‎n‎e‎s‎.‎"
m49hZDPs,Illuminati Lock,Spocoman,Python,Thursday 12th of October 2023 08:31:06 AM CDT,"n = int(input())

print(f""{'.' * n}{'#' * n}{'.' * n}"")

for i in range(0, n - 2, 2):
    print(f""{'.' * (n - i - 2)}##{'.' * i}#{'.' * (n - 2)}#{'.' * i}##{'.' * (n - i - 2)}"")

for i in range(n - 3, -1, -2):
    print(f""{'.' * (n - i - 2)}##{'.' * i}#{'.' * (n - 2)}#{'.' * i}##{'.' * (n - i - 2)}"")

print(f""{'.' * n}{'#' * n}{'.' * n}"")
"
q1vJv8ur,cs50 credit,Kaze79,C,Thursday 12th of October 2023 08:29:09 AM CDT,"#include <stdio.h>
#include <string.h>


int addAllDigits(char digits[], int doubleTheDigit) {
    int length = sizeof(digits)/sizeof(digits[0]);
    int finalSum = 0;
    for(int i = 0; i < length; i++) {
        int digit;
        if(doubleTheDigit == 1) {
            digit = (digits[i] - '0')*2;
        } else {
            digit = digits[i] - '0';
        }
        if(digit >= 10) {
            digit = digit/10 + digit%10;
        }
        finalSum += digit;
    }
    
    return finalSum;
}

int main() {
    char cardNumber[] = ""4003600000000014"";
    
    int length = strlen(cardNumber);
    
    char digits2double[20];
    int digitIndex = 0;
    for(int cardIndex = length-2; cardIndex >= 0; cardIndex -= 2) {
        digits2double[digitIndex] = cardNumber[cardIndex];
        digitIndex++;
    }
    int doubledSum = addAllDigits(digits2double, 1);
    
    char digits[20];
    digitIndex = 0;
    for(int cardIndex = length-1; cardIndex >= 0; cardIndex -= 2) {
        digits[digitIndex] = cardNumber[cardIndex];
        digitIndex++;
    }
    int sum = addAllDigits(digits, 0);
    
    printf(""--> %d + %d = %d\n"", doubledSum, sum, doubledSum + sum);
}
"
YWG71Mak,let's NOT learn C programme from zero!,Lemon7777,C,Thursday 12th of October 2023 08:23:19 AM CDT,"#include <stdio.h>

int function(int n) {
    if (n == 0) {
        return 1;
    } else {
        return n * function(n - 1);
    }
}

int main() {
    int n = 5;
    printf(""%d"", function(n));
    return 0;
}
"
HVXX7Q5S,TopBar,noobHasan,C#,Thursday 12th of October 2023 08:21:40 AM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;
using DG.Tweening;

public class TopBar : MonoBehaviour
{
    [Header(""Prefabs"")]
    [SerializeField] private GameObject _moneyPrefab;
    [SerializeField] private GameObject _diamondPrefab;
    //[SerializeField] private Transform EnginePos;

    [Header(""MoneySpawning"")]
    private int SpawnPointAmount;
    private Transform currentPos;

    [Header(""Objects for Diamond"")]
    public GameObject _diamondIcon;
    public List<Transform> diamondList = new List<Transform>();
    private int currentDiamondIndex;

    [Header(""Objects for money"")]
    [SerializeField] private GameObject _moneyIcon;
    [SerializeField] public TextMeshProUGUI _moneyText;
    public List<Transform> moneyList = new List<Transform>();
    private int currentMoneyIndex;
    public Transform moneyParent;
    public Transform moneyPos;

    [Header(""Variables for money"")]
    public int _money;
    public bool isMonumentLevel = false;
    private Vector3 _moneySize;

    [Header(""Variables for diamond"")]
    public int _diamond;
    public TextMeshProUGUI _diamondText;
    private Vector3 _diamondSize;

    [Header(""Scripts"")]
    [SerializeField] private TopBatTween _topBarTweenScr;

    public static TopBar Instance;

    private void Awake()
    {
        Instance = this;
        _moneySize = _moneyIcon.transform.localScale;
        _diamondSize = _diamondIcon.transform.localScale;

#if UNITY_EDITOR
        //ES3.Save(GameConstants.Money, 0);
        _money = ES3.Load(GameConstants.Money, 0);
        _moneyText.text = $""{_money}"";
        //ES3.Save(GameConstants.Diamond, 5000);
        _diamond = ES3.Load(GameConstants.Diamond, 0);
        _diamondText.text = $""{_diamond}"";
#endif
        _money = ES3.Load(GameConstants.Money, 0);
        _moneyText.text = $""{_money}"";

        _diamond = ES3.Load(GameConstants.Diamond, 0);
        _diamondText.text = $""{_diamond}"";
    }

    private void Start()
    {
        CreateMoneyList();
        CreateDiamondList();
    }

    private void CreateMoneyList()
    {
        for (int i = 0; i < 200; i++)
        {
            Transform newMoney = Instantiate(_moneyPrefab.transform);
            newMoney.parent = moneyParent.transform;
            newMoney.gameObject.SetActive(false);
            moneyList.Add(newMoney);

        }
    }

    private void CreateDiamondList()
    {
        for (int i = 0; i < 200; i++)
        {
            Transform newDiamond = Instantiate(_diamondPrefab.transform);
            newDiamond.parent = transform;
            newDiamond.gameObject.SetActive(false);
            diamondList.Add(newDiamond);
        }
    }


    public IEnumerator GetMoney()
    {
        SpawnPointAmount = Random.Range(0, Train.Instance.MoneySpawnPos.Length);
        currentPos = Train.Instance.MoneySpawnPos[SpawnPointAmount];
        GameObject money = moneyList[currentMoneyIndex].gameObject;
        currentMoneyIndex++;
        money.transform.SetParent(currentPos);
        money.SetActive(true);
        money.transform.localPosition = new Vector3(currentPos.transform.localPosition.x, currentPos.transform.localPosition.y + 2, currentPos.transform.localPosition.z);

        money.transform.DOLocalJump(new Vector3(0, 2f, 0), 3f, 1, 0.25f, false);
        yield return new WaitForSeconds(0.5f);

        money.transform.SetParent(transform);
        money.transform.DORotate(_topBarTweenScr.MoneyRotationDegree, _topBarTweenScr.MoneyRotationDuration, RotateMode.WorldAxisAdd).SetEase(_topBarTweenScr.MoneyRotationEase);
        money.transform.DOScale(_moneyIcon.transform.localScale, _topBarTweenScr.MoveDuration).SetEase(_topBarTweenScr.MoveEase);
        //money.transform.localPosition = _moneyIcon.transform.localPosition;
        money.transform.DOLocalMove(moneyPos.transform.localPosition, _topBarTweenScr.MoveDuration).SetEase(_topBarTweenScr.MoveEase);
        yield return new WaitForSeconds(_topBarTweenScr.MoveDuration);

        Destroy(money);
        _diamond++;
        _diamondText.text = $""{_diamond}"";
        //ES3.Save(GameConstants.Diamond, _diamond);
        //DiamondPanelControl.Instance.UpdateDiamondCount(_diamond);
        _moneyText.text = $""{_money}"";
        _moneyIcon.transform.DOKill();

        _moneyIcon.transform.localScale = _moneySize;
        _moneyIcon.transform.DOShakeScale(_topBarTweenScr.ShakeMoneyDuration, _topBarTweenScr.ShakeMoneyStrength, _topBarTweenScr.ShakeMoneyVibrato, _topBarTweenScr.ShakeMoneyRandomness);
    }

    public IEnumerator GetDiamond()
    {
        SpawnPointAmount = Random.Range(0, Train.Instance.MoneySpawnPos.Length);
        currentPos = Train.Instance.MoneySpawnPos[SpawnPointAmount];
        GameObject diamond = diamondList[currentDiamondIndex].gameObject;
        currentDiamondIndex++;
        diamond.transform.SetParent(currentPos);
        diamond.SetActive(true);
        diamond.transform.localPosition = new Vector3(currentPos.transform.localPosition.x, currentPos.transform.localPosition.y + 2, currentPos.transform.localPosition.z);

        diamond.transform.DOLocalJump(new Vector3(0, 2f, 0), 3f, 1, 0.25f, false);
        yield return new WaitForSeconds(0.5f);

        diamond.transform.SetParent(transform);
        diamond.transform.DORotate(_topBarTweenScr.MoneyRotationDegree, _topBarTweenScr.MoneyRotationDuration, RotateMode.WorldAxisAdd).SetEase(_topBarTweenScr.MoneyRotationEase);
        diamond.transform.DOScale(_diamondIcon.transform.localScale, _topBarTweenScr.MoveDuration).SetEase(_topBarTweenScr.MoveEase);
        diamond.transform.DOLocalMove(_diamondIcon.transform.localPosition, _topBarTweenScr.MoveDuration).SetEase(_topBarTweenScr.MoveEase);
        yield return new WaitForSeconds(_topBarTweenScr.MoveDuration);

        Destroy(diamond);
        _diamondIcon.transform.DOKill();
        _diamondIcon.transform.localScale = _diamondSize;
        //_diamondIcon.transform.DOShakeScale(_topBarTweenScr.ShakeMoneyDuration, _topBarTweenScr.ShakeMoneyStrength, _topBarTweenScr.ShakeMoneyVibrato, _topBarTweenScr.ShakeMoneyRandomness);
    }

    public Transform peoplePos;
    /*
    public IEnumerator GetMoneyForVIPPassenger(Station stationScript)
    {
        currentPos = stationScript._people[0].gameObject.transform;

        GameObject money = moneyList[currentMoneyIndex].gameObject;
        currentMoneyIndex++;
        money.transform.SetParent(currentPos);
        money.SetActive(true);
        money.transform.localPosition = new Vector3(currentPos.transform.localPosition.x, currentPos.transform.localPosition.y + 2, currentPos.transform.localPosition.z);

        money.transform.DOLocalJump(new Vector3(0, 2f, 0), 3f, 1, 0.25f, false);
        yield return new WaitForSeconds(0.5f);
        money.transform.SetParent(transform);
        money.transform.DORotate(_topBarTweenScr.MoneyRotationDegree, _topBarTweenScr.MoneyRotationDuration, RotateMode.WorldAxisAdd).SetEase(_topBarTweenScr.MoneyRotationEase);
        money.transform.DOScale(_moneyIcon.transform.localScale, _topBarTweenScr.MoveDuration).SetEase(_topBarTweenScr.MoveEase);
        money.transform.DOLocalMove(_moneyIcon.transform.localPosition, _topBarTweenScr.MoveDuration).SetEase(_topBarTweenScr.MoveEase);
        yield return new WaitForSeconds(_topBarTweenScr.MoveDuration);

        Destroy(money);
        _money += 1000;
        //_moneyText.text = $""{_money}"";
        _moneyIcon.transform.DOKill();
        _moneyIcon.transform.localScale = _moneySize;
        _moneyIcon.transform.DOShakeScale(_topBarTweenScr.ShakeMoneyDuration, _topBarTweenScr.ShakeMoneyStrength, _topBarTweenScr.ShakeMoneyVibrato, _topBarTweenScr.ShakeMoneyRandomness);
    }
    */
}
"
EqdAXLZV,let's NOT learn C programme from zero! example,Lemon7777,C,Thursday 12th of October 2023 08:13:54 AM CDT,"int sum(int k);

int main() {
  int result = sum(10);		//start condition is k=10
  printf(""%d"", result);
  return 0;
}

int sum(int k) {
  if (k > 0) {				//active condition
    return k + sum(k - 1);	//recall itself >> sum() function
  } else {
    return 0;
  }
}"
Vv77Hstm,Untitled,tuomasvaltanen,Python,Thursday 12th of October 2023 08:13:33 AM CDT,"# koodipaja, 12.10.2023
print(""Tervetuloa!"")

# UUSI TIEDOSTO

# esimerkki, mitä jos on kaksi erotinmerkkiä tunnisteessa
# => miten käytetään split():iä tässä tapauksessa
code = ""TILAUS1432_A175467*2023""

# halkaistaan ensin koko koodi alaviivalla
# lopputuloksena:
# 0 => TILAUS1432
# 1 => A175467*2023
parts = code.split(""_"")

# ensimmäinen elementti on ok, pistetään talteen
first = parts[0]

# indeksi 1 => tässä on jäljellä vielä *:llä jaottelu
# => jatketaan pilkkomista
subcode = parts[1]

# pilkotaan jäljellä oleva koodi *:n perusteella
subparts = subcode.split(""*"")

# katsotaan mitä on sisällä
# print(subparts)

# kaikki ok, tallennetaan omiin muuttujiin
second = subparts[0]
year = subparts[1]

# kaikki ok, tulostetaan
print(first)
print(second)
print(year)

# UUSI TIEDOSTO

# esimerkki, mitä jos on kaksi erotinmerkkiä tunnisteessa
# => miten käytetään split():iä tässä tapauksessa
code = ""JOTAIN123-20456-123456-123A""

parts = code.split(""-"")
print(parts)

# kasataan muuttujat osista
# huom: tämä logiiika ei toimi enää
# jos käytetään uudempia 2000-luvulta eteenpäin
# olevia henkilötunnuksia
first = parts[0]
second = parts[1]
security_number = parts[2] + ""-"" + parts[3]

print(first)
print(second)
print(security_number)

# tämä tilanne on haastava, koska datan sisällä on käytössä
# sama merkki kuin merkki jota käytetään erottimena

# tapoja joilla käsitellä:
# liimataan jälkikäteen uuteen muuttujaan yhteen kaksi viimeistä osaa
# eli 123456 ja 123A

# jos mahdollista vaikuttaa dataformaattiin (esim. ulkoinen toimija)
# pyydetään voi vaihtaa erotinmerkkiä
# esim. erottimena | eikä -

# UUSI TIEDOSTO

# esimerkki, dictistä arvot listaan ja keskiarvon laskeminen
measurements = {
    ""temperature"": 3.5,
    ""humidity"": 0.85,
    ""wind"": 3.5
}

# dictin arvot listaksi
numbers = list(measurements.values())

# voit kokeilla tulostaa numbersin, se on lista
# => eli dictionaryn arvot listana (pelkät arvot, avaimet jää pois)
# print(numbers)

# keskiarvon määritelmä = lukujen summa / lukujen määrä
total = sum(numbers)
amount = len(numbers)

# lasketaan keskiarvo ja pyöristetään
average = total / amount
average = round(average, 1)
print(average)

"
K6pgk0Z0,Illuminati Lock,Spocoman,JavaScript,Thursday 12th of October 2023 07:59:37 AM CDT,"function illuminatiLock(input) {
    let n = Number(input[0]);

    console.log(`${'.'.repeat(n)}${'#'.repeat(n)}${'.'.repeat(n)}`);

    for (let i = 0; i < n - 1; i += 2) {
        console.log(`${'.'.repeat(n - i - 2)}##${'.'.repeat(i)}#${'.'.repeat(n - 2)}#${'.'.repeat(i)}##${'.'.repeat(n - i - 2)}`);
    }

    for (let i = n - 3; i >= 0; i -= 2) {
        console.log(`${'.'.repeat(n - i - 2)}##${'.'.repeat(i)}#${'.'.repeat(n - 2)}#${'.'.repeat(i)}##${'.'.repeat(n - i - 2)}`);
    }

    console.log(`${'.'.repeat(n)}${'#'.repeat(n)}${'.'.repeat(n)}`);

    return;
}"
vzmJWEZ9,Illuminati Lock,Spocoman,C++,Thursday 12th of October 2023 07:45:14 AM CDT,"#include <iostream>
#include <string>

using namespace std;

string repeat(char s, int n) {
    string result;
    for (int i = 0; i < n; i++) {
        result += s;
    }
    return result;
}

int main() {
    int n;
    cin >> n;

    printf(""%s%s%s\n"", repeat('.', n).c_str(), repeat('#', n).c_str(), repeat('.', n).c_str());

    for (int i = 0; i < n - 1; i += 2) {
        printf(""%s##%s#%s#%s##%s\n"", repeat('.', n - i - 2).c_str(), repeat('.', i).c_str(), repeat('.', n - 2).c_str(), repeat('.', i).c_str(), repeat('.', n - i - 2).c_str());
    }

    for (int i = n - 3; i >= 0; i -= 2) {
        printf(""%s##%s#%s#%s##%s\n"", repeat('.', n - i - 2).c_str(), repeat('.', i).c_str(), repeat('.', n - 2).c_str(), repeat('.', i).c_str(), repeat('.', n - i - 2).c_str());
    }

    printf(""%s%s%s\n"", repeat('.', n).c_str(), repeat('#', n).c_str(), repeat('.', n).c_str());

    return 0;
}"
JCXtGxFU,PASTEL,brunoflix,XML,Thursday 12th of October 2023 07:21:02 AM CDT,"portal""http://magm1giillmig.funtogether.xyz:8080/""
00:1A:79:B6:7F:D0"
hfsbKcMi,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:23 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
D1ppqivX,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:21 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
urnYLrie,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:19 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
wFBQMv8g,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:18 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
64Sp442H,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:16 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
hJd8xeWy,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:15 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
Xz7gXMjh,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:11 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
dDkKKTwV,Hashed Email With Exclude,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:09 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
1i7swzR1,Hashed Email - Full,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:08 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
NxWSTHeF,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 12th of October 2023 07:19:06 AM CDT,"Pasted at: 12/10/2023 13:19
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
sNXjpgaB,Diameter of a binary tree,jayati,C++,Thursday 12th of October 2023 07:00:12 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

/* A binary tree node has data, pointer to left child
   and a pointer to right child */
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};
Node* newNode(int val) {
    Node* temp = new Node;
    temp->data = val;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}
Node* buildTree(string str) {
    // Corner Case
    if (str.length() == 0 || str[0] == 'N') return NULL;

    // Creating vector of strings from input
    // string after spliting by space
    vector<string> ip;

    istringstream iss(str);
    for (string str; iss >> str;) ip.push_back(str);

    // Create the root of the tree
    Node* root = newNode(stoi(ip[0]));

    // Push the root to the queue
    queue<Node*> queue;
    queue.push(root);

    // Starting from the second element
    int i = 1;
    while (!queue.empty() && i < ip.size()) {

        // Get and remove the front of the queue
        Node* currNode = queue.front();
        queue.pop();

        // Get the current node's value from the string
        string currVal = ip[i];

        // If the left child is not null
        if (currVal != ""N"") {

            // Create the left child for the current node
            currNode->left = newNode(stoi(currVal));

            // Push it to the queue
            queue.push(currNode->left);
        }

        // For the right child
        i++;
        if (i >= ip.size()) break;
        currVal = ip[i];

        // If the right child is not null
        if (currVal != ""N"") {

            // Create the right child for the current node
            currNode->right = newNode(stoi(currVal));

            // Push it to the queue
            queue.push(currNode->right);
        }
        i++;
    }

    return root;
}


// } Driver Code Ends
/* Tree node structure  used in the program

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */

class Solution {
  public:
    // Function to return the diameter of a Binary Tree.
    int solve(Node* root,int &ans)
    {
        if(root==NULL)
        {
            return 0;
        }
        int l=solve(root->left,ans);
        int r=solve(root->right,ans);
        ans = max(ans,l+r+1);
        
        return 1+max(l,r);
    }
    int diameter(Node* root) {
        // Your code here
        int ans=INT_MIN;
        solve(root,ans);
        return ans;
    }
};

//{ Driver Code Starts.

/* Driver program to test size function*/
int main() {
    int t;
    scanf(""%d\n"", &t);
    while (t--) {
        string s;
        getline(cin, s);
        Node* root = buildTree(s);
        Solution ob;
        cout << ob.diameter(root) << endl;
    }
    return 0;
}

// } Driver Code Ends"
tnVSkmJM,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:47 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
2gS4Wpd5,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:45 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
XYKV8Kad,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:44 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
MAu3NbeK,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:42 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
7Q80XFsp,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:41 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
usvFEJnQ,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:39 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
xWh34YE5,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:36 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
RMC8Bj4r,Hashed Email With Exclude,wheresTheAnyKey,C,Thursday 12th of October 2023 06:55:34 AM CDT,"Pasted at: 12/10/2023 12:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
