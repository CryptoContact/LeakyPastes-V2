id,title,username,language,date,content
8J8AJ60b,ü§ëG2A.com Free Gift Card Guide June 2024 NEWü§ë,BitcoinScript2020,GetText,Tuesday 11th of June 2024 01:02:23 PM CDT,"G2A.com free gift card & games updated guide!.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!.
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
June 11 2024"
mqanV7dS,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,FeasModz514,Python,Tuesday 11th of June 2024 12:58:19 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11 2024

"
RaJBVKT1,‚ù§Ô∏è5713 NETFLIX PREMIUM ACCOUNTS‚ù§Ô∏è,Mivious,GetText,Tuesday 11th of June 2024 12:56:13 PM CDT,"‚ù§Ô∏è5713 NETFLIX PREMIUM ACCOUNTS‚ù§Ô∏è
------------------------------
LINK: https://shrinkme.vip/kjJn0NJk2LM82
------------------------------
EACH ACCOUNT HAS PREMIUM PLAN.
ACCOUNTS CRACKED 12:41 PM 11/6/2024.
DON'T CHANGE PASSWORD SO IT DOESN'T CATCH ON.
ACCOUNTS BY LOAKP.
DO NOT STEAL.
EDUCATIONAL PURPOSES ONLY."
vi1Mce5Y,ü§ëG2A.com Free Gift Card Guide June 2024 NEWü§ë,x2w,GetText,Tuesday 11th of June 2024 12:54:51 PM CDT,"G2A.com free gift card & games updated guide
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
11 June 2024"
Lf59N8bj,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,kjihu25,Python,Tuesday 11th of June 2024 12:51:46 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
651qSGXb,üéÅG2A.com Free Gift Card Guide June 2024 NEWü§ë,kaka440ka,GetText,Tuesday 11th of June 2024 12:46:19 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
11 June 2024"
t4Xhy58V,Untitled,Josif_tepe,C++,Tuesday 11th of June 2024 12:46:01 PM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <math.h>


int main(int argc, char * argv[]) {
    char niza[2000];
    scanf(""%s"", niza);

    char niza2[2000];
    strcpy(niza2, niza);

    printf(""%s\n"", niza2);

   
}

 
/*
6
2 4 5 7 11 23

**/"
q1eKTnMt,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,Bufayez,Python,Tuesday 11th of June 2024 12:45:39 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
Xe8pu40S,ü§ëG2A.com Free Gift Card Guide June 2024 NEWüéÅ,ssss50wa,GetText,Tuesday 11th of June 2024 12:42:50 PM CDT,"G2A.com free gift card & games updated guide..
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
June 11 2024"
4FxHnEEA,Untitled,Josif_tepe,C++,Tuesday 11th of June 2024 12:42:06 PM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <math.h>


int main(int argc, char * argv[]) {
    char niza[2000];
    scanf(""%s"", niza);

    for(int i = 0; i < strlen(niza); i++) {
        printf(""%c "", niza[i]);
    }
   
}

 
/*
6
2 4 5 7 11 23

**/"
Sk1ECPxb,üéÅG2A.com Free Gift Card Guide June 2024 NEWüéÅ,ssss50ws,GetText,Tuesday 11th of June 2024 12:41:50 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
June 11 2024"
uqi6gur9,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,buch,Python,Tuesday 11th of June 2024 12:39:39 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
TVdPGRhE,rte_config.h,tomba2k,C,Tuesday 11th of June 2024 12:38:40 PM CDT,"/* SPDX-License-Identifier: BSD-3-Clause
 * Copyright(c) 2017 Intel Corporation
 */

/**
 * @file Header file containing DPDK compilation parameters
 *
 * Header file containing DPDK compilation parameters. Also include the
 * meson-generated header file containing the detected parameters that
 * are variable across builds or build environments.
 */
#ifndef _RTE_CONFIG_H_
#define _RTE_CONFIG_H_

#include <rte_build_config.h>

/* legacy defines */
#ifdef RTE_EXEC_ENV_LINUX
#define RTE_EXEC_ENV_LINUXAPP 1
#endif
#ifdef RTE_EXEC_ENV_FREEBSD
#define RTE_EXEC_ENV_BSDAPP 1
#endif

/* String that appears before the version number */
#define RTE_VER_PREFIX ""DPDK""

/****** library defines ********/

/* EAL defines */
#define RTE_CACHE_GUARD_LINES 1
#define RTE_MAX_HEAPS 32
#define RTE_MAX_MEMSEG_LISTS 128
#define RTE_MAX_MEMSEG_PER_LIST 8192
#define RTE_MAX_MEM_MB_PER_LIST 32768
#define RTE_MAX_MEMSEG_PER_TYPE 32768
#define RTE_MAX_MEM_MB_PER_TYPE 65536
#define RTE_MAX_TAILQ 32
#define RTE_LOG_DP_LEVEL RTE_LOG_INFO
#define RTE_MAX_VFIO_CONTAINERS 64

/* bsd module defines */
#define RTE_CONTIGMEM_MAX_NUM_BUFS 64
#define RTE_CONTIGMEM_DEFAULT_NUM_BUFS 1
#define RTE_CONTIGMEM_DEFAULT_BUF_SIZE (512*1024*1024)

/* mempool defines */
#define RTE_MEMPOOL_CACHE_MAX_SIZE 512
/* RTE_LIBRTE_MEMPOOL_STATS is not set */
/* RTE_LIBRTE_MEMPOOL_DEBUG is not set */

/* mbuf defines */
#define RTE_MBUF_DEFAULT_MEMPOOL_OPS ""ring_mp_mc""
#define RTE_PKTMBUF_HEADROOM 128

/* ether defines */
#define RTE_MAX_QUEUES_PER_PORT 1024
#define RTE_ETHDEV_QUEUE_STAT_CNTRS 16 /* max 256 */
#define RTE_ETHDEV_RXTX_CALLBACKS 1
#define RTE_MAX_MULTI_HOST_CTRLS 4

/* cryptodev defines */
#define RTE_CRYPTO_MAX_DEVS 64
#define RTE_CRYPTODEV_NAME_LEN 64
#define RTE_CRYPTO_CALLBACKS 1

/* compressdev defines */
#define RTE_COMPRESS_MAX_DEVS 64

/* regexdev defines */
#define RTE_MAX_REGEXDEV_DEVS 32

/* eventdev defines */
#define RTE_EVENT_MAX_DEVS 16
#define RTE_EVENT_MAX_PORTS_PER_DEV 255
#define RTE_EVENT_MAX_QUEUES_PER_DEV 255
#define RTE_EVENT_MAX_PROFILES_PER_PORT 8
#define RTE_EVENT_TIMER_ADAPTER_NUM_MAX 32
#define RTE_EVENT_ETH_INTR_RING_SIZE 1024
#define RTE_EVENT_CRYPTO_ADAPTER_MAX_INSTANCE 32
#define RTE_EVENT_ETH_TX_ADAPTER_MAX_INSTANCE 32
#define RTE_EVENT_DMA_ADAPTER_MAX_INSTANCE 32

/* rawdev defines */
#define RTE_RAWDEV_MAX_DEVS 64

/* ip_fragmentation defines */
#define RTE_LIBRTE_IP_FRAG_MAX_FRAG 8
// RTE_LIBRTE_IP_FRAG_TBL_STAT is not set

/* rte_power defines */
#define RTE_MAX_LCORE_FREQS 64
#define RTE_MAX_UNCORE_FREQS 64

/* rte_graph defines */
#define RTE_GRAPH_BURST_SIZE 256
#define RTE_LIBRTE_GRAPH_STATS 1

/****** driver defines ********/

/* Packet prefetching in PMDs */
#define RTE_PMD_PACKET_PREFETCH 1

/* QuickAssist device */
/* Max. number of QuickAssist devices which can be attached */
#define RTE_PMD_QAT_MAX_PCI_DEVICES 48
#define RTE_PMD_QAT_COMP_SGL_MAX_SEGMENTS 16
#define RTE_PMD_QAT_COMP_IM_BUFFER_SIZE 65536

/* virtio crypto defines */
#define RTE_MAX_VIRTIO_CRYPTO 32

/* DPAA SEC max cryptodev devices*/
#define RTE_LIBRTE_DPAA_MAX_CRYPTODEV	4

/* fm10k defines */
#define RTE_LIBRTE_FM10K_RX_OLFLAGS_ENABLE 1

/* hns3 defines */
#define RTE_LIBRTE_HNS3_MAX_TQP_NUM_PER_PF 256

/* i40e defines */
#define RTE_LIBRTE_I40E_RX_ALLOW_BULK_ALLOC 1
// RTE_LIBRTE_I40E_16BYTE_RX_DESC is not set
#define RTE_LIBRTE_I40E_QUEUE_NUM_PER_PF 64
#define RTE_LIBRTE_I40E_QUEUE_NUM_PER_VF 4
#define RTE_LIBRTE_I40E_QUEUE_NUM_PER_VM 4

/* Ring net PMD settings */
#define RTE_PMD_RING_MAX_RX_RINGS 16
#define RTE_PMD_RING_MAX_TX_RINGS 16

/* QEDE PMD defines */
#define RTE_LIBRTE_QEDE_FW """"

/* DLB2 defines */
// RTE_LIBRTE_PMD_DLB2_QUELL_STATS is not set

#endif /* _RTE_CONFIG_H_ */
"
RNgfyt3H,üéÅG2A.com Free Gift Card Guide June 2024 NEWüéÅ,wwxcwx,GetText,Tuesday 11th of June 2024 12:36:25 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!.
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
June 11 2024"
0JpnjDzX,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,Alfonso1119,Python,Tuesday 11th of June 2024 12:33:40 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
2f0mkU9m,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,Garoam,Python,Tuesday 11th of June 2024 12:27:41 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Playstation gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
BMVsy7sP,Untitled,AnrDaemon,INI file,Tuesday 11th of June 2024 12:26:37 PM CDT,"$ php-fpm8 -nm
[PHP Modules]
cgi-fcgi
Core
date
filter
hash
json
libxml
pcre
phpdbg_webhelper
readline
Reflection
SPL
standard
zlib

[Zend Modules]
"
R6YxMscX,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,atakan1983,Python,Tuesday 11th of June 2024 12:21:41 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
m2bQaVUa,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,bgill55,Python,Tuesday 11th of June 2024 12:14:35 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11 2024

"
YqPvJRSe,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX ü§ë,jusst2k4,GetText,Tuesday 11th of June 2024 12:12:43 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_659510.pdf

Working as of:
11 June 2024"
dq1AMeJT,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,FreeRobux12345,Python,Tuesday 11th of June 2024 12:08:28 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11 2024

"
nyX6ANV4,crontab,wickedjackal,Bash,Tuesday 11th of June 2024 12:07:37 PM CDT,"# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
## Half-Life Talking Clock hourly chime
0 * * * * /usr/bin/perl /home/wickedjackal/Downloads/half_life_talking_clock/half-life_clock.pl
"
syDCPn8h,Sorta flight sim programmed by ChatGPT,Hadlock,Rust,Tuesday 11th of June 2024 12:06:57 PM CDT,"use minifb::{Key, Window, WindowOptions};
use std::time::{Duration, Instant};
const WIDTH: usize = 800;
const HEIGHT: usize = 600;
const FRAME_RATE: u64 = 240;

fn main() {
    // Create a window with blue background
    let mut window = Window::new(
        ""3D Wireframe Cube"",
        WIDTH,
        HEIGHT,
        WindowOptions {
            resize: true,
            scale: minifb::Scale::X1,
            ..Default::default()
        },
    )
    .unwrap_or_else(|e| {
        panic!(""{}"", e);
    });
    window.set_background_color(0xFF, 0xFF, 0xFF);

    // Cube vertices, edges, and initial positions
    let mut vertices = [
        [-1.0, -1.0, -1.0],
        [1.0, -1.0, -1.0],
        [1.0, 1.0, -1.0],
        [-1.0, 1.0, -1.0],
        [-1.0, -1.0, 1.0],
        [1.0, -1.0, 1.0],
        [1.0, 1.0, 1.0],
        [-1.0, 1.0, 1.0],
    ];

    // Cube edges
    let edges = [
        (0, 1),
        (1, 2),
        (2, 3),
        (3, 0),
        (4, 5),
        (5, 6),
        (6, 7),
        (7, 4),
        (0, 4),
        (1, 5),
        (2, 6),
        (3, 7),
    ];

    // Cube position
    let mut cube_x = 0.0;
    let mut cube_y = 0.0;
    let mut cube_z = 0.0;

    // Square vertices and edges
    let square_vertices = [
        [-2.0, -4.0, -2.0],
        [2.0, -4.0, -2.0],
        [2.0, -4.0, 2.0],
        [-2.0, -4.0, 2.0],
    ];

    let square_edges = [
        (0, 1),
        (1, 2),
        (2, 3),
        (3, 0),
    ];

    // Camera rotation angle
    let mut angle = 180.0;

    // Camera position
    let mut camera_x = 0.0;
    let mut camera_y = 0.0;

    let frame_duration = Duration::from_secs_f64(1.0 / FRAME_RATE as f64);
    let mut last_frame_time = Instant::now();

    while window.is_open() && !window.is_key_down(Key::Escape) {
        let elapsed = last_frame_time.elapsed();
        if elapsed < frame_duration {
            std::thread::sleep(frame_duration - elapsed);
        }
        last_frame_time = Instant::now();

        let mut buffer: Vec<u32> = vec![0; WIDTH * HEIGHT];
        window.update_with_buffer(&buffer, WIDTH, HEIGHT).unwrap();

        // Rotate the camera
        //angle += 0.001;

        // Handle camera movement
        if window.is_key_down(Key::Up) {
            camera_y += 0.1;
        }
        if window.is_key_down(Key::Down) {
            camera_y -= 0.1;
        }
        if window.is_key_down(Key::Left) {
            camera_x -= 0.1;
        }
        if window.is_key_down(Key::Right) {
            camera_x += 0.1;
        }
        if window.is_key_down(Key::Comma) {
            angle -= 0.01; // Turn camera left
        }
        if window.is_key_down(Key::Period) {
            angle += 0.01; // Turn camera right
        }

        // Handle cube movement
        if window.is_key_down(Key::W) {
            cube_z += 0.1;
        }
        if window.is_key_down(Key::S) {
            cube_z -= 0.1;
        }
        if window.is_key_down(Key::A) {
            cube_x -= 0.1;
        }
        if window.is_key_down(Key::D) {
            cube_x += 0.1;
        }
        if window.is_key_down(Key::Q) {
            cube_y -= 0.1; // Move cube down
        }
        if window.is_key_down(Key::E) {
            cube_y += 0.1; // Move cube up
        }
        if window.is_key_down(Key::J) {
            // Rotate cube around the center of its z-axis
            let center_x = (vertices[0][0] + vertices[6][0]) / 2.0;
            let center_y = (vertices[0][1] + vertices[6][1]) / 2.0;
            let center_z = (vertices[0][2] + vertices[6][2]) / 2.0;
            let rotated_vertices = rotate_around_z(vertices, center_x, center_y, center_z, 0.01);
            for i in 0..vertices.len() {
                vertices[i] = rotated_vertices[i];
            }
        }
        if window.is_key_down(Key::L) {
            // Rotate cube around the center of its z-axis
            let center_x = (vertices[0][0] + vertices[6][0]) / 2.0;
            let center_y = (vertices[0][1] + vertices[6][1]) / 2.0;
            let center_z = (vertices[0][2] + vertices[6][2]) / 2.0;
            let rotated_vertices = rotate_around_z(vertices, center_x, center_y, center_z, -0.01);
            for i in 0..vertices.len() {
                vertices[i] = rotated_vertices[i];
            }
        }
        if window.is_key_down(Key::I) {
            // Rotate cube around the center of its x-axis
            let center_x = (vertices[0][0] + vertices[6][0]) / 2.0;
            let center_y = (vertices[0][1] + vertices[6][1]) / 2.0;
            let center_z = (vertices[0][2] + vertices[6][2]) / 2.0;
            let rotated_vertices = rotate_around_x(vertices, center_x, center_y, center_z, 0.01);
            for i in 0..vertices.len() {
                vertices[i] = rotated_vertices[i];
            }
        }
        if window.is_key_down(Key::K) {
            // Rotate cube around the center of its x-axis
            let center_x = (vertices[0][0] + vertices[6][0]) / 2.0;
            let center_y = (vertices[0][1] + vertices[6][1]) / 2.0;
            let center_z = (vertices[0][2] + vertices[6][2]) / 2.0;
            let rotated_vertices = rotate_around_x(vertices, center_x, center_y, center_z, -0.01);
            for i in 0..vertices.len() {
                vertices[i] = rotated_vertices[i];
            }
        }
        if window.is_key_down(Key::U) {
            // Rotate cube around the center of its y-axis
            let center_x = (vertices[0][0] + vertices[6][0]) / 2.0;
            let center_y = (vertices[0][1] + vertices[6][1]) / 2.0;
            let center_z = (vertices[0][2] + vertices[6][2]) / 2.0;
            let rotated_vertices = rotate_around_y(vertices, center_x, center_y, center_z, 0.01);
            for i in 0..vertices.len() {
                vertices[i] = rotated_vertices[i];
            }
        }
        if window.is_key_down(Key::O) {
            // Rotate cube around the center of its y-axis
            let center_x = (vertices[0][0] + vertices[6][0]) / 2.0;
            let center_y = (vertices[0][1] + vertices[6][1]) / 2.0;
            let center_z = (vertices[0][2] + vertices[6][2]) / 2.0;
            let rotated_vertices = rotate_around_y(vertices, center_x, center_y, center_z, -0.01);
            for i in 0..vertices.len() {
                vertices[i] = rotated_vertices[i];
            }
        }

        // Project and draw the cube edges
        fn is_front_edge(i: usize, j: usize) -> bool {
            // Define the indices of the front edges
            let front_edges = vec![
                (0, 1), (1, 2), (2, 3), (3, 0), // Front face
                //(4, 5), (5, 6), (6, 7), (7, 4), // Back face
                //(0, 4), (1, 5), (2, 6), (3, 7), // Connecting edges
            ];

            // Check if the given indices represent a front edge
            front_edges.contains(&(i, j)) || front_edges.contains(&(j, i))
        }
        fn is_rear_edge(i: usize, j: usize) -> bool {
            // Define the indices of the rear edges
            let rear_edges = vec![
                (4, 5), (5, 6), (6, 7), (7, 4), // Rear face
                //(0, 1), (1, 2), (2, 3), (3, 0), // Front face
                //(0, 4), (1, 5), (2, 6), (3, 7), // Connecting edges
            ];

            // Check if the given indices represent a rear edge
            rear_edges.contains(&(i, j)) || rear_edges.contains(&(j, i))
        }
        fn is_bottom_edge(i: usize, j: usize) -> bool {
            // Define the indices of the bottom edges
            let bottom_edges = vec![
                (4, 5), (5, 6), (6, 7), (7, 4), // Bottom face
                //(0, 4), (1, 5), (2, 6), (3, 7), // Connecting edges
            ];

            // Check if the given indices represent a bottom edge
            bottom_edges.contains(&(i, j)) || bottom_edges.contains(&(j, i))
        }

        for &(i, j) in &edges {
            let p1 = project(vertices[i], angle, camera_x, camera_y, cube_x, cube_y, cube_z);
            let p2 = project(vertices[j], angle, camera_x, camera_y, cube_x, cube_y, cube_z);
            if is_front_edge(i, j) {
                draw_line_with_color(&mut buffer, p1, p2, WIDTH, 0x0000FF); // Set front cube edges to blue
            } else {
                draw_line(&mut buffer, p1, p2, WIDTH);
            }
        }

        // Project and draw the square edges
        for &(i, j) in &square_edges {
            let p1 = project(square_vertices[i], angle, camera_x, camera_y, 0.0, 0.0, -3.0);
            let p2 = project(square_vertices[j], angle, camera_x, camera_y, 0.0, 0.0, -3.0);
            draw_line_with_color(&mut buffer, p1, p2, WIDTH, 0x00FF00); // Set square color to green
        }

        

        // Draw the x-axis line (red)
        let p1 = project([-1.0, 0.0, 0.0], angle, camera_x, camera_y, 0.0, 0.0, 0.0);
        let p2 = project([1.0, 0.0, 0.0], angle, camera_x, camera_y, 0.0, 0.0, 0.0);
        draw_line_with_color(&mut buffer, p1, p2, WIDTH, 0xFF0000);

        // Draw the y-axis line (dark green)
        let p1 = project([0.0, -1.0, 0.0], angle, camera_x, camera_y, 0.0, 0.0, 0.0);
        let p2 = project([0.0, 1.0, 0.0], angle, camera_x, camera_y, 0.0, 0.0, 0.0);
        draw_line_with_color(&mut buffer, p1, p2, WIDTH, 0x006400);

        // Draw the z-axis line (cyan blue)
        let p1 = project([0.0, 0.0, -1.0], angle, camera_x, camera_y, 0.0, 0.0, 0.0);
        let p2 = project([0.0, 0.0, 1.0], angle, camera_x, camera_y, 0.0, 0.0, 0.0);
        draw_line_with_color(&mut buffer, p1, p2, WIDTH, 0x00FFFF);

        window.update_with_buffer(&buffer, WIDTH, HEIGHT).unwrap();
    }
}

// Project a 3D point onto a 2D plane
fn project(
    point: [f32; 3],
    angle: f32,
    camera_x: f32,
    camera_y: f32,
    cube_x: f32,
    cube_y: f32,
    cube_z: f32,
) -> (usize, usize) {
    let x = point[0] + cube_x;
    let y = point[1] + cube_y;
    let z = point[2] + cube_z;

    let sin_a = angle.sin();
    let cos_a = angle.cos();

    let x2 = x * cos_a - z * sin_a;
    let y2 = y + camera_y;
    let z2 = x * sin_a + z * cos_a;

    let scale = 2.0 / (z2 + 3.0);
    let x3 = x2 * scale + camera_x;
    let y3 = y2 * scale;

    let screen_x = (WIDTH as f32 / 2.0 + x3 * WIDTH as f32 / 4.0) as usize;
    let screen_y = (HEIGHT as f32 / 2.0 - y3 * HEIGHT as f32 / 4.0) as usize;

    (screen_x, screen_y)
}

fn draw_line(buffer: &mut Vec<u32>, p1: (usize, usize), p2: (usize, usize), width: usize) {
    let (x1, y1) = p1;
    let (x2, y2) = p2;

    let dx = (x2 as isize - x1 as isize).abs();
    let dy = (y2 as isize - y1 as isize).abs();
    let sx = if x1 < x2 { 1 } else { -1 };
    let sy = if y1 < y2 { 1 } else { -1 };
    let mut err = dx - dy;

    let mut x = x1 as isize;
    let mut y = y1 as isize;

    while x != x2 as isize || y != y2 as isize {
        if x >= 0 && x < width as isize && y >= 0 && y < HEIGHT as isize {
            buffer[(y as usize) * width + (x as usize)] = 0xFFFFFF;
        }

        let e2 = 2 * err;
        if e2 > -dy {
            err -= dy;
            x += sx;
        }
        if e2 < dx {
            err += dx;
            y += sy;
        }
    }
}

fn draw_line_with_color(buffer: &mut Vec<u32>, p1: (usize, usize), p2: (usize, usize), width: usize, color: u32) {
    let (x1, y1) = p1;
    let (x2, y2) = p2;

    let dx = (x2 as isize - x1 as isize).abs();
    let dy = (y2 as isize - y1 as isize).abs();
    let sx = if x1 < x2 { 1 } else { -1 };
    let sy = if y1 < y2 { 1 } else { -1 };
    let mut err = dx - dy;

    let mut x = x1 as isize;
    let mut y = y1 as isize;

    while x != x2 as isize || y != y2 as isize {
        if x >= 0 && x < width as isize && y >= 0 && y < HEIGHT as isize {
            buffer[(y as usize) * width + (x as usize)] = color;
        }

        let e2 = 2 * err;
        if e2 > -dy {
            err -= dy;
            x += sx;
        }
        if e2 < dx {
            err += dx;
            y += sy;
        }
    }
}

fn rotate_around_z(vertices: [[f32; 3]; 8], center_x: f32, center_y: f32, center_z: f32, angle: f32) -> [[f32; 3]; 8] {
    let sin_a = angle.sin();
    let cos_a = angle.cos();

    let mut rotated_vertices = [[0.0; 3]; 8];
    for i in 0..vertices.len() {
        let x = vertices[i][0] - center_x;
        let y = vertices[i][1] - center_y;
        let z = vertices[i][2] - center_z;

        rotated_vertices[i][0] = x * cos_a - y * sin_a + center_x;
        rotated_vertices[i][1] = x * sin_a + y * cos_a + center_y;
        rotated_vertices[i][2] = z + center_z;
    }

    rotated_vertices
}

fn rotate_around_x(vertices: [[f32; 3]; 8], center_x: f32, center_y: f32, center_z: f32, angle: f32) -> [[f32; 3]; 8] {
    let sin_a = angle.sin();
    let cos_a = angle.cos();

    let mut rotated_vertices = [[0.0; 3]; 8];
    for i in 0..vertices.len() {
        let x = vertices[i][0] - center_x;
        let y = vertices[i][1] - center_y;
        let z = vertices[i][2] - center_z;

        rotated_vertices[i][0] = x + center_x;
        rotated_vertices[i][1] = y * cos_a - z * sin_a + center_y;
        rotated_vertices[i][2] = y * sin_a + z * cos_a + center_z;
    }

    rotated_vertices
}

fn rotate_around_y(vertices: [[f32; 3]; 8], center_x: f32, center_y: f32, center_z: f32, angle: f32) -> [[f32; 3]; 8] {
    let sin_a = angle.sin();
    let cos_a = angle.cos();

    let mut rotated_vertices = [[0.0; 3]; 8];
    for i in 0..vertices.len() {
        let x = vertices[i][0] - center_x;
        let y = vertices[i][1] - center_y;
        let z = vertices[i][2] - center_z;

        rotated_vertices[i][0] = x * cos_a + z * sin_a + center_x;
        rotated_vertices[i][1] = y + center_y;
        rotated_vertices[i][2] = -x * sin_a + z * cos_a + center_z;
    }

    rotated_vertices
}"
5L4zKgDs,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,coderpradip,Python,Tuesday 11th of June 2024 12:02:24 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
aJbwwMxm,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,mikyser,Python,Tuesday 11th of June 2024 11:56:20 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11 2024

"
V4YQzJJh,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,Ohtaku,Python,Tuesday 11th of June 2024 11:50:21 AM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
A6kwqTrY,Asus PN41 / Celeron N4500 / 16 GiB / 128 GB NVMe,SerW,Bash,Tuesday 11th of June 2024 11:49:32 AM CDT,"dragonserw@debian-PN41:~$ inxi -b
System:
  Host: debian-PN41 Kernel: 6.1.0-21-amd64 arch: x86_64 bits: 64
    Desktop: GNOME v: 43.9 Distro: Debian GNU/Linux 12 (bookworm)
Machine:
  Type: Mini-pc Mobo: ASUSTeK model: PN41 serial: <superuser required>
    UEFI: ASUSTeK v: 0810 date: 12/15/2022
CPU:
  Info: dual core Intel Celeron N4500 [MCP] speed (MHz): avg: 785
    min/max: 800/2800
Graphics:
  Device-1: Intel JasperLake [UHD Graphics] driver: i915 v: kernel
  Device-2: Logitech B525 HD Webcam type: USB driver: snd-usb-audio,uvcvideo
  Display: wayland server: X.Org v: 1.22.1.9 with: Xwayland v: 22.1.9
    compositor: gnome-shell driver: dri: iris gpu: i915
    resolution: 1920x1200~60Hz
  API: OpenGL v: 4.6 Mesa 22.3.6 renderer: Mesa Intel UHD Graphics (JSL)
Network:
  Device-1: Intel Wi-Fi 6 AX201 160MHz driver: iwlwifi
  Device-2: Realtek RTL8125 2.5GbE driver: r8169
Drives:
  Local Storage: total: 119.24 GiB used: 11.9 GiB (10.0%)
Info:
  Processes: 207 Uptime: 9m Memory: 15.36 GiB used: 2.56 GiB (16.7%)
  Shell: Bash inxi: 3.3.26
dragonserw@debian-PN41:~$ "
afucdnHf,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,Elii,Python,Tuesday 11th of June 2024 11:44:22 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
A6wS44CU,Untitled,clain_Txt,JSON,Tuesday 11th of June 2024 11:44:17 AM CDT,"{
  ""discord"": {
    ""id"": 412181116443688981,
    ""name"": ""noreply"",
	""tag"": ""_noreply."",
	""avatar"": ""https://cdn.discordapp.com/avatars/1010224290374893709/e32e0bff85e7dc3dabefdf9e89ce4738.webp?size=512""
  },
  ""telegram"": {
    ""name"": ""alotofgreenwood""
  },
  ""github"": {
    ""name"": ""assnest""
  }, ""other"": {""description"": ""Node JS/React developer"", ""spoiler"": ""–î–ª—è —Å–≤—è–∑–∏ –ø–∏—à–∏—Ç–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º""}
}"
4Dsb2zmB,Building system roblox,CrownedFigure,Lua,Tuesday 11th of June 2024 11:41:15 AM CDT,"----------------------------------------------------------------
---   THIS IS THE CLIENT HANDLING------------------------------
--------------------------------------------------------------
local plr = game.Players.LocalPlayer
local Mouse = plr:GetMouse()

local hitCircle = nil --this will be used to find parts in a range for the perdiction system
local MousePlane = nil -- this plane will be use to catch the mouse.hit so we can use it and find the nearest part 

local Guideblock = nil -- this will be the ghost block that the player sees when trying to place a block
local equiped = false
local character = nil -- For safty, the character is set when equiped and set to nil when unequiped
local MaxRange = 20
local GuideMaxRange = 50



local BlocksInPerdictionRange = {} -- list of building blocks in range
-- were going to use a table for mouse Target filter since Target Filter is not a stackable











local studStep = 3 -- snap amount

-- surface offets for surface placement
local SurfaceFaceOffset = {
	Top = Vector3.new(0, 1, 0),
	Bottom = Vector3.new(0, -1, 0),
	Left = Vector3.new(-1, 0, 0),
	Right = Vector3.new(1, 0, 0),
	Front = Vector3.new(0, 0, -1),
	Back = Vector3.new(0, 0, 1),
}

--These Parts will track the mouse position and the parts in range
local function MakeMouseHitCircle()

	hitCircle = Instance.new(""Part"")
	hitCircle.Parent = game.Workspace
	hitCircle.Shape = Enum.PartType.Cylinder
	hitCircle.Transparency = 0.5
	hitCircle.Massless = true
	hitCircle.Position = Vector3.new(character:WaitForChild(""HumanoidRootPart"").Position.X, character:WaitForChild(""HumanoidRootPart"").Position.Y-12, character:WaitForChild(""HumanoidRootPart"").Position.Z)
	hitCircle.CanCollide = false
	hitCircle.Orientation = Vector3.new(0,0,90)
	hitCircle.Size = Vector3.new(15,50,50)
	--weld to player (less laggy than using CFrame and runservice)
	local cyl_weld = Instance.new(""WeldConstraint"")
	cyl_weld.Parent = hitCircle
	cyl_weld.Part0 = hitCircle
	cyl_weld.Part1 = character:WaitForChild(""HumanoidRootPart"")
	
	Mouse.TargetFilter = hitCircle
	
	
	MousePlane = Instance.new(""Part"")
	MousePlane.Parent = game.Workspace
	MousePlane.Shape = Enum.PartType.Cylinder
	MousePlane.Transparency = 0.5
	MousePlane.Massless = true
	MousePlane.Position = Vector3.new(character:WaitForChild(""HumanoidRootPart"").Position.X, character:WaitForChild(""HumanoidRootPart"").Position.Y-5, character:WaitForChild(""HumanoidRootPart"").Position.Z)
	MousePlane.CanCollide = false
	MousePlane.Orientation = Vector3.new(0,0,90)
	MousePlane.Size = Vector3.new(0.5,50,50)
	--weld to player (less laggy than using CFrame and runservice)
	local cyl_weld2 = Instance.new(""WeldConstraint"")
	cyl_weld2.Parent = MousePlane
	cyl_weld2.Part0 = MousePlane
	cyl_weld2.Part1 = character:WaitForChild(""HumanoidRootPart"")
	

	
end





--store the building blocks that are in the range for predictive placment so they can be called later
game:GetService(""RunService"").Heartbeat:Connect(function()
	if equiped then
		local PartsInRange = hitCircle:GetTouchingParts()

		for ind, block in ipairs(BlocksInPerdictionRange) do
			if not table.find(PartsInRange, block) then
				table.remove(BlocksInPerdictionRange, ind)
			end
		end

		for _, v in pairs(PartsInRange) do
			local isInDict = false
			
			if v.Name == ""BuildingBlock"" and not table.find(BlocksInPerdictionRange, v) then
				table.insert(BlocksInPerdictionRange, v)
			end
		end
	end
end)

-- We are going to find the closest part and get the surface that is being touched by the ray from the mouse
local function FindClosestPartAndSurface()
	if Mouse.Target == MousePlane then 

		local PartsAndLens = {}
		local ShortestRay = 0

		for i,v in pairs(BlocksInPerdictionRange)do
			local castRayParams = RaycastParams.new()
			castRayParams.FilterType = Enum.RaycastFilterType.Include
			castRayParams.FilterDescendantsInstances = BlocksInPerdictionRange
			local castRay = game.Workspace:Raycast(Mouse.Hit.Position, (v.Position - Mouse.Hit.Position).Unit * (v.Position - Mouse.Hit.Position).magnitude,castRayParams)
			--require(script.RaycastVisualizer).VisualizeCast(castRay, Mouse.Hit.Position, (v.Position - Mouse.Hit.Position).Unit * (v.Position - Mouse.Hit.Position).magnitude,0.5)
			if castRay then
				PartsAndLens[castRay.Distance] = {castRay.Position, castRay.Normal}
			end
		end

		local index = 0
		for key, position in pairs(PartsAndLens)do
			index += 1
			if index == 1 then
				ShortestRay = key
			else
				if key < ShortestRay then
					ShortestRay = key
				end
			end
		end

		if ShortestRay == 0 then

			return nil
		else

			return PartsAndLens[ShortestRay][1], PartsAndLens[ShortestRay][2]
			
		end


	end
end


-- get the information of the playes mouse and adjusts the ""GhostBlock/GuideBlock"" (NOTE: I learned this clever grid methood from dev fourm, I did not make this methood)

local function PartPlacement()
	if equiped then
		if (character:WaitForChild(""HumanoidRootPart"").Position - Mouse.Hit.Position).magnitude < GuideMaxRange then
			
			
			---------------------------------------

			Guideblock.Transparency = 0.4
			Guideblock.SelectionBox.Visible = true
			---------------------------------------
			for i = 1,2 do
				local PerdictivePos, PerdictiveVector = FindClosestPartAndSurface()
				
				local MousePos = PerdictivePos or Mouse.Hit.Position
				local surface = Mouse.TargetSurface.Name
				local surfaceVector = PerdictiveVector or SurfaceFaceOffset[surface]
				local PlacePos = Vector3.new(0,Guideblock.Size.Y/2,0)
				PlacePos += MousePos
				----------------------------------------------
				local adjustedX = MousePos.X + surfaceVector.X -- surface vector of part mouse is touching
				local adjustedY = MousePos.Y + surfaceVector.Y
				local adjustedZ = MousePos.Z + surfaceVector.Z
				----------------------------------------------
				local X = math.round(adjustedX / studStep) * studStep -- round to the nearest cordinate in the grid
				local Y = math.round(adjustedY / studStep) * studStep
				local Z = math.round(adjustedZ / studStep) * studStep
				-----------------------------------------------------
				PlacePos = Vector3.new(X,Y,Z)
				Guideblock.Position = PlacePos
				----------------------------------------------------------------------------------------------------------
				pcall(function() 
				if (character:WaitForChild(""HumanoidRootPart"").Position - Guideblock.Position).magnitude < MaxRange then
					Guideblock:FindFirstChild(""SelectionBox"").Color3 = Color3.fromRGB(25, 92, 116)
				else
					Guideblock:FindFirstChild(""SelectionBox"").Color3 = Color3.new(0.886275, 0, 0)
				end
				end)
				-----------------------------------------------------------------------------------------------------------
				task.wait(0.1)
			end
		elseif Guideblock then
			if Guideblock then
				Guideblock.Transparency = 1
				Guideblock.SelectionBox.Visible = false
			end
		end
	end
end

-- Create the guide block when equiped
script.Parent.Equipped:Connect(function()
	if Guideblock then
		Guideblock:Destroy()
	end
	character =  plr.Character or plr.CharacterAdded:Wait()
	MakeMouseHitCircle()
	equiped = true
	Guideblock = Instance.new(""Part"")
	Guideblock.Size = Vector3.new(3,3,3)
	Guideblock.Transparency = 0.4
	Guideblock.Parent = script
	Guideblock.CanCollide = false
	Guideblock.Anchored = true
	Guideblock.CanTouch = false
	Guideblock.CanQuery = false

	local outline = Instance.new(""SelectionBox"")
	outline.Parent = Guideblock
	outline.Adornee = Guideblock



	PartPlacement()


end)

script.Parent.Unequipped:Connect(function()
	BlocksInPerdictionRange = {}
	equiped = false
	hitCircle:Destroy()
	MousePlane:Destroy()
	hitCircle = nil
	character = nil
end)





--sends the GuideBlock position to the server when the plaler invokes the funtion(Player activates build tool)
script.Parent:WaitForChild(""build"").RemoteFunction.OnClientInvoke = function()
	local char = plr.Character
	if (char:WaitForChild(""HumanoidRootPart"").Position - Guideblock.Position).magnitude < MaxRange then -- check if the player is in range
		local animation = script.Parent:WaitForChild(""activate"")
		local anim = char:WaitForChild(""Humanoid""):LoadAnimation(animation)
		anim:Play()
	end

	return Guideblock.Position

end

Mouse.Move:Connect(PartPlacement)
script.Parent.Activated:Connect(PartPlacement)

-----------------------------------------------------------------------------------------
--------------------SERVER SIDE HANDLING-------------------------------------------------
----------------------------------------------------------------------------------------
local tool = script.Parent
local MaxRange = 20

cooldown = false -- Will be used for a cooldown lateron to prevent auto clicking


script.Parent.Activated:Connect(function()
	local plr = game.Players:GetPlayerFromCharacter(script.Parent.Parent)
	local pos = script.RemoteFunction:InvokeClient(game.Players:GetPlayerFromCharacter(script.Parent.Parent)) -- Get the position of the block thats going to be placed
	
	if (script.Parent.Parent:WaitForChild(""HumanoidRootPart"").Position - pos).magnitude < MaxRange and cooldown == false  then -- make sure its in range
        cooldown = true
		local placeSound = script.Parent.Handle.Place:Clone()
		local DestroyByRocket = script:WaitForChild(""DestroyByRocket""):Clone()-- This may be scraped later on since tags exist now
		local part = Instance.new(""Part"")
		
		-- these values will allow me to make a destroy mechanic later on
		local Health = Instance.new(""IntValue"",part)
		local HeathStatus = Instance.new(""IntValue"",part)
		Health.Name = ""Health""
		HeathStatus.Name = ""HealthStatus""
		
		-- add decals for the crack for the destroy/mine mechanic
		for i = 1,6 do
			local decal = script.Parent:WaitForChild(""Cracks""):Clone()
			decal.Parent = part
			if i == 1 then
				decal.Face = Enum.NormalId.Front
			elseif i == 2  then
				decal.Face = Enum.NormalId.Back
			elseif i == 3 then
				decal.Face = Enum.NormalId.Left
			elseif i == 4 then
				decal.Face = Enum.NormalId.Right
			elseif i == 5 then
				decal.Face = Enum.NormalId.Top
			else
				decal.Face = Enum.NormalId.Bottom
			end
		end
		
		HeathStatus.Value = 3
		Health.Value = 3
		
		-- again, this may be scraped soon
		DestroyByRocket.Parent = part
		DestroyByRocket.Enabled = true
	
		placeSound.Parent = part
		placeSound:Play()
		
		part.Size = Vector3.new(3,3,3)
		part.Name = ""BuildingBlock""
		part.Anchored = true
		part.Parent = game.Workspace:WaitForChild(""Builds"")
		print(pos)
		part.Position = pos
		task.wait(0.085)
		cooldown = false
	end
end)

"
RfB03biT,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,guywithabigheart,Python,Tuesday 11th of June 2024 11:38:23 AM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
uXjcya9e,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,PetrikDev,Python,Tuesday 11th of June 2024 11:32:23 AM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11 2024

"
3gSrJ622,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,x3kiN,Python,Tuesday 11th of June 2024 11:26:25 AM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
eFs3TqUg,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,FeasModz514,Python,Tuesday 11th of June 2024 11:20:25 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
jy7QHAqX,Automazione irrigazione,nisu66,YAML,Tuesday 11th of June 2024 11:19:41 AM CDT,"alias: Automazione Irrigazione Completa
description: """"
trigger:
  - platform: time
    at: input_datetime.irrigation_start_time
condition:
  - condition: state
    entity_id: input_boolean.irrigation_pause
    state: ""off""
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.irrigation_monday
            state: ""on""
          - condition: time
            weekday:
              - mon
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.irrigation_tuesday
            state: ""on""
          - condition: time
            weekday:
              - tue
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.irrigation_wednesday
            state: ""on""
          - condition: time
            weekday:
              - wed
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.irrigation_thursday
            state: ""on""
          - condition: time
            weekday:
              - thu
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.irrigation_friday
            state: ""on""
          - condition: time
            weekday:
              - fri
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.irrigation_saturday
            state: ""on""
          - condition: time
            weekday:
              - sat
      - condition: and
        conditions:
"
bjfr0WTL,Card irrigazione,nisu66,YAML,Tuesday 11th of June 2024 11:17:56 AM CDT,"type: custom:button-card
color_type: card
entity: input_boolean.irrigation_monday
name: Luned√¨
state:
  - value: 'on'
    icon: mdi:calendar-check
    styles:
      card:
        - background-color: green
        - box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1)
        - transition: background-color 0.3s ease
  - value: 'off'
    icon: mdi:calendar-remove
    styles:
      card:
        - background-color: red
        - box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1)
        - transition: background-color 0.3s ease
styles:
  card:
    - border-radius: 15px
    - height: 70px
    - width: 160px
  name:
    - font-weight: bold
    - font-size: 14px
"
8cdFytt8,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,kiraezwhethe,Python,Tuesday 11th of June 2024 11:14:25 AM CDT,"G2A.com complimentary voucher & games guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
brMxqT2j,"""LED Control"" rev_02",pleasedontcode,Arduino,Tuesday 11th of June 2024 11:09:07 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""LED Control""
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2024-06-11 16:08:42

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* This code will 5 leds. The one entered in the app */
	/* will light up when the time comes, until the */
	/* person turns off the alarm */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <SoftwareSerial.h>
#include <EasyButton.h>  //https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);
void onAlarmButtonPressed(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t alarmButton_PushButton_PIN_D5 = 5;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t LEDRGB_Red_PIN_D2 = 2;
const uint8_t LEDRGB_Green_PIN_D3 = 3;
const uint8_t LEDRGB_Blue_PIN_D4 = 4;
const uint8_t LED1_PIN_D6 = 6;
const uint8_t LED2_PIN_D7 = 7;
const uint8_t LED3_PIN_D8 = 8;
const uint8_t LED4_PIN_D9 = 9;
const uint8_t LED5_PIN_D10 = 10;

/***** DEFINITION OF Software Serial *****/
const uint8_t HC05_mySerial_PIN_SERIAL_TX_A0 = A0;
const uint8_t HC05_mySerial_PIN_SERIAL_RX_A1 = A1;
SoftwareSerial HC05_mySerial(HC05_mySerial_PIN_SERIAL_RX_A1, HC05_mySerial_PIN_SERIAL_TX_A0);

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool LEDRGB_Red_PIN_D2_rawData = 0;
bool LEDRGB_Green_PIN_D3_rawData = 0;
bool LEDRGB_Blue_PIN_D4_rawData = 0;
bool LED1_PIN_D6_rawData = 0;
bool LED2_PIN_D7_rawData = 0;
bool LED3_PIN_D8_rawData = 0;
bool LED4_PIN_D9_rawData = 0;
bool LED5_PIN_D10_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float LEDRGB_Red_PIN_D2_phyData = 0.0;
float LEDRGB_Green_PIN_D3_phyData = 0.0;
float LEDRGB_Blue_PIN_D4_phyData = 0.0;
float LED1_PIN_D6_phyData = 0.0;
float LED2_PIN_D7_phyData = 0.0;
float LED3_PIN_D8_phyData = 0.0;
float LED4_PIN_D9_phyData = 0.0;
float LED5_PIN_D10_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton alarmButton(alarmButton_PushButton_PIN_D5);

void setup(void) {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println();
  Serial.println("">>> EasyButton example with alarm button <<<"");

  pinMode(LEDRGB_Red_PIN_D2, OUTPUT);
  pinMode(LEDRGB_Green_PIN_D3, OUTPUT);
  pinMode(LEDRGB_Blue_PIN_D4, OUTPUT);
  pinMode(LED1_PIN_D6, OUTPUT);
  pinMode(LED2_PIN_D7, OUTPUT);
  pinMode(LED3_PIN_D8, OUTPUT);
  pinMode(LED4_PIN_D9, OUTPUT);
  pinMode(LED5_PIN_D10, OUTPUT);

  HC05_mySerial.begin(9600);

  // Initialize the button
  alarmButton.begin();
  alarmButton.onPressed(onAlarmButtonPressed);
}

void loop(void) {
  // put your main code here, to run repeatedly:
  alarmButton.read();  // Read the button state
  updateOutputs();     // Refresh output data
}

void updateOutputs() {
  digitalWrite(LEDRGB_Red_PIN_D2, LEDRGB_Red_PIN_D2_rawData);
  digitalWrite(LEDRGB_Green_PIN_D3, LEDRGB_Green_PIN_D3_rawData);
  digitalWrite(LEDRGB_Blue_PIN_D4, LEDRGB_Blue_PIN_D4_rawData);
  digitalWrite(LED1_PIN_D6, LED1_PIN_D6_rawData);
  digitalWrite(LED2_PIN_D7, LED2_PIN_D7_rawData);
  digitalWrite(LED3_PIN_D8, LED3_PIN_D8_rawData);
  digitalWrite(LED4_PIN_D9, LED4_PIN_D9_rawData);
  digitalWrite(LED5_PIN_D10, LED5_PIN_D10_rawData);
}

void onAlarmButtonPressed() {
  Serial.println(""Alarm button pressed"");
  // Add additional actions to be performed when the alarm button is pressed
  // For example, turn off all LEDs
  LEDRGB_Red_PIN_D2_rawData = 0;
  LEDRGB_Green_PIN_D3_rawData = 0;
  LEDRGB_Blue_PIN_D4_rawData = 0;
  LED1_PIN_D6_rawData = 0;
  LED2_PIN_D7_rawData = 0;
  LED3_PIN_D8_rawData = 0;
  LED4_PIN_D9_rawData = 0;
  LED5_PIN_D10_rawData = 0;
  updateOutputs();
}

/* END CODE */"
XMFnSb7T,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,ColtM4A2,Python,Tuesday 11th of June 2024 11:08:21 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
0SjaZAhn,"""LED Control"" rev_01",pleasedontcode,Arduino,Tuesday 11th of June 2024 11:08:00 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""LED Control""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-06-11 16:06:26

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* This code will 5 leds. The one entered in the app */
	/* will light up when the time comes, until the */
	/* person turns off the alarm */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <SoftwareSerial.h>
#include <EasyButton.h>  //https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);
void onAlarmButtonPressed(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t alarmButton_PushButton_PIN_D5 = 5;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t LEDRGB_Red_PIN_D2 = 2;
const uint8_t LEDRGB_Green_PIN_D3 = 3;
const uint8_t LEDRGB_Blue_PIN_D4 = 4;
const uint8_t LED1_PIN_D6 = 6;
const uint8_t LED2_PIN_D7 = 7;
const uint8_t LED3_PIN_D8 = 8;
const uint8_t LED4_PIN_D9 = 9;
const uint8_t LED5_PIN_D10 = 10;

/***** DEFINITION OF Software Serial *****/
const uint8_t HC05_mySerial_PIN_SERIAL_TX_A0 = A0;
const uint8_t HC05_mySerial_PIN_SERIAL_RX_A1 = A1;
SoftwareSerial HC05_mySerial(HC05_mySerial_PIN_SERIAL_RX_A1, HC05_mySerial_PIN_SERIAL_TX_A0);

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool LEDRGB_Red_PIN_D2_rawData = 0;
bool LEDRGB_Green_PIN_D3_rawData = 0;
bool LEDRGB_Blue_PIN_D4_rawData = 0;
bool LED1_PIN_D6_rawData = 0;
bool LED2_PIN_D7_rawData = 0;
bool LED3_PIN_D8_rawData = 0;
bool LED4_PIN_D9_rawData = 0;
bool LED5_PIN_D10_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float LEDRGB_Red_PIN_D2_phyData = 0.0;
float LEDRGB_Green_PIN_D3_phyData = 0.0;
float LEDRGB_Blue_PIN_D4_phyData = 0.0;
float LED1_PIN_D6_phyData = 0.0;
float LED2_PIN_D7_phyData = 0.0;
float LED3_PIN_D8_phyData = 0.0;
float LED4_PIN_D9_phyData = 0.0;
float LED5_PIN_D10_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton alarmButton(alarmButton_PushButton_PIN_D5);

void setup(void) {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println();
  Serial.println("">>> EasyButton example with alarm button <<<"");

  pinMode(LEDRGB_Red_PIN_D2, OUTPUT);
  pinMode(LEDRGB_Green_PIN_D3, OUTPUT);
  pinMode(LEDRGB_Blue_PIN_D4, OUTPUT);
  pinMode(LED1_PIN_D6, OUTPUT);
  pinMode(LED2_PIN_D7, OUTPUT);
  pinMode(LED3_PIN_D8, OUTPUT);
  pinMode(LED4_PIN_D9, OUTPUT);
  pinMode(LED5_PIN_D10, OUTPUT);

  HC05_mySerial.begin(9600);

  // Initialize the button
  alarmButton.begin();
  alarmButton.onPressed(onAlarmButtonPressed);
}

void loop(void) {
  // put your main code here, to run repeatedly:
  alarmButton.read();  // Read the button state
  updateOutputs();     // Refresh output data
}

void updateOutputs() {
  digitalWrite(LEDRGB_Red_PIN_D2, LEDRGB_Red_PIN_D2_rawData);
  digitalWrite(LEDRGB_Green_PIN_D3, LEDRGB_Green_PIN_D3_rawData);
  digitalWrite(LEDRGB_Blue_PIN_D4, LEDRGB_Blue_PIN_D4_rawData);
  digitalWrite(LED1_PIN_D6, LED1_PIN_D6_rawData);
  digitalWrite(LED2_PIN_D7, LED2_PIN_D7_rawData);
  digitalWrite(LED3_PIN_D8, LED3_PIN_D8_rawData);
  digitalWrite(LED4_PIN_D9, LED4_PIN_D9_rawData);
  digitalWrite(LED5_PIN_D10, LED5_PIN_D10_rawData);
}

void onAlarmButtonPressed() {
  Serial.println(""Alarm button pressed"");
  // Add additional actions to be performed when the alarm button is pressed
  // For example, turn off all LEDs
  LEDRGB_Red_PIN_D2_rawData = 0;
  LEDRGB_Green_PIN_D3_rawData = 0;
  LEDRGB_Blue_PIN_D4_rawData = 0;
  LED1_PIN_D6_rawData = 0;
  LED2_PIN_D7_rawData = 0;
  LED3_PIN_D8_rawData = 0;
  LED4_PIN_D9_rawData = 0;
  LED5_PIN_D10_rawData = 0;
  updateOutputs();
}

/* END CODE */"
WbvM26k1,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,Skarface-MKL,Python,Tuesday 11th of June 2024 11:02:21 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
jJZsjKDr,"""Wi-Fi Sync"" rev_03",pleasedontcode,Arduino,Tuesday 11th of June 2024 11:00:34 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Wi-Fi Sync""
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-06-11 15:53:49

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Develop ESP32 code for LED blinking patterns on */
	/* two ESP32 devices using GPIO pins 23, 22, 21, and */
	/* 19 for Yellow, Red, Green and  Blue LEDs with pre- */
	/* programmed delays. Integrate Firebase for web */
	/* hosting, authentication, and real-time database. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* Firebase authentication to both esp32 devices and */
	/* logins are not hardcoded but authenticated by */
	/* firebase. user UIDs are stored in Firebase user */
	/* can register email/password for login or use */
	/* google login. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <WiFi.h>
#include <FirebaseESP32.h>  //https://github.com/mobizt/Firebase-ESP32
#include <addons/TokenHelper.h> // Include the token helper header
#include <addons/RTDBHelper.h>  // Include the RTDB helper header

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);
void blinkLEDs(void);

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t GPIO23_LED_PIN_D4 = 23;
const uint8_t GPIO22_LED_PIN_D13 = 22;
const uint8_t GPIO21_LED_PIN_D14 = 21;
const uint8_t GPIO19_LED_PIN_D16 = 19;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool GPIO23_LED_PIN_D4_rawData = 0;
bool GPIO22_LED_PIN_D13_rawData = 0;
bool GPIO21_LED_PIN_D14_rawData = 0;
bool GPIO19_LED_PIN_D16_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float GPIO23_LED_PIN_D4_phyData = 0.0;
float GPIO22_LED_PIN_D13_phyData = 0.0;
float GPIO21_LED_PIN_D14_phyData = 0.0;
float GPIO19_LED_PIN_D16_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;

/* WiFi credentials */
#define WIFI_SSID ""WIFI_AP""
#define WIFI_PASSWORD ""WIFI_PASSWORD""

/* Firebase project API Key */
#define API_KEY ""API_KEY""

/* Firebase Realtime Database URL */
#define DATABASE_URL ""URL"" //<databaseName>.firebaseio.com or <databaseName>.<region>.firebasedatabase.app

/* Firebase user Email and password */
#define USER_EMAIL ""USER_EMAIL""
#define USER_PASSWORD ""USER_PASSWORD""

unsigned long previousMillis = 0; // will store last time LED was updated
const long interval = 1000; // interval at which to blink (milliseconds)

void setup(void)
{
    // Initialize serial communication
    Serial.begin(115200);

    // Initialize GPIO pins as outputs
    pinMode(GPIO23_LED_PIN_D4, OUTPUT);
    pinMode(GPIO22_LED_PIN_D13, OUTPUT);
    pinMode(GPIO21_LED_PIN_D14, OUTPUT);
    pinMode(GPIO19_LED_PIN_D16, OUTPUT);

    // Connect to Wi-Fi
    WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
    Serial.print(""Connecting to Wi-Fi"");
    while (WiFi.status() != WL_CONNECTED)
    {
        Serial.print(""."");
        delay(300);
    }
    Serial.println();
    Serial.print(""Connected with IP: "");
    Serial.println(WiFi.localIP());

    // Configure Firebase
    config.api_key = API_KEY;
    auth.user.email = USER_EMAIL;
    auth.user.password = USER_PASSWORD;
    config.database_url = DATABASE_URL;

    // Enable automatic reconnect to Wi-Fi
    Firebase.reconnectWiFi(true);
    fbdo.setResponseSize(4096);
    config.token_status_callback = tokenStatusCallback; // see addons/TokenHelper.h
    Firebase.begin(&config, &auth);
}

void loop(void)
{
    // Refresh output data
    updateOutputs();
    // Blink LEDs based on interval
    blinkLEDs();
}

void updateOutputs()
{
    // Update the state of the LEDs
    digitalWrite(GPIO23_LED_PIN_D4, GPIO23_LED_PIN_D4_rawData);
    digitalWrite(GPIO22_LED_PIN_D13, GPIO22_LED_PIN_D13_rawData);
    digitalWrite(GPIO21_LED_PIN_D14, GPIO21_LED_PIN_D14_rawData);
    digitalWrite(GPIO19_LED_PIN_D16, GPIO19_LED_PIN_D16_rawData);
}

void blinkLEDs()
{
    unsigned long currentMillis = millis();

    // Check if the interval has passed
    if (currentMillis - previousMillis >= interval)
    {
        // Save the last time the LEDs were updated
        previousMillis = currentMillis;

        // Toggle the state of the LEDs
        GPIO23_LED_PIN_D4_rawData = !GPIO23_LED_PIN_D4_rawData;
        GPIO22_LED_PIN_D13_rawData = !GPIO22_LED_PIN_D13_rawData;
        GPIO21_LED_PIN_D14_rawData = !GPIO21_LED_PIN_D14_rawData;
        GPIO19_LED_PIN_D16_rawData = !GPIO19_LED_PIN_D16_rawData;
    }
}

/* END CODE */"
0rev47NT,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,thepplayz,Python,Tuesday 11th of June 2024 10:56:21 AM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
N7VWL0mD,Algoverse_adesh_15,kucheasysa,Python,Tuesday 11th of June 2024 10:45:23 AM CDT,"class Solution:
    def minOperations(self, boxes: str) -> List[int]:
        a = [0]*len(boxes)
        count1, cost1, count2, cost2, n = 0, 0, 0, 0, len(boxes)
        for i in range(1, n):
            if boxes[i-1] == '1': count1 += 1
            cost1 += count1 
            a[i] = cost1
        for j in range(n-2, -1, -1):
            if boxes[j+1] == '1': count2 += 1
            cost2 += count2
            a[j] += cost2
        return a"
998Uhgta,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,sayid83,Python,Tuesday 11th of June 2024 10:44:18 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11 2024

"
dwAicbJp,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,PetrikDev,Python,Tuesday 11th of June 2024 10:38:17 AM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
wZ9uqFuH,ü§ëG2A.com Free Gift Card June 2024 Updatedü§ë,x3kiN,Python,Tuesday 11th of June 2024 10:32:16 AM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11th 2024

"
NYSTaSeR,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,FeasModz514,Python,Tuesday 11th of June 2024 10:26:16 AM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Xbox gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
11th of June 2024

"
up5nxDAa,FusionReactor,bldng1,Lua,Tuesday 11th of June 2024 10:24:59 AM CDT,"function periphalsearch(pname)
   local names = peripheral.getNames()
   local i, name
   for i, name in pairs(names) do
      if peripheral.getType(name) == pname then
         return peripheral.wrap(name)
      end
   end
   return nil
end
monitor=periphalsearch(""monitor"")
if not monitor then
	monitor=term
end
    
function clear()
   monitor.clear()
end
function getSize()
	return monitor.getSize()
end
function draw_text(x, y, text, text_color, bg_color)
   monitor.setBackgroundColor(bg_color)
   monitor.setTextColor(text_color)
   monitor.setCursorPos(x,y)
   monitor.write(text)
 end
function draw_line(x, y, length, color)
   draw_text(x,y,string.rep("" "", length),color,color)
end
function progress_bar(x, y, length, minVal, maxVal, bar_color, bg_color)
   draw_line(x, y, length, bg_color) --backgoround bar
   local barSize = math.floor((minVal/maxVal) * length) 
   draw_line(x, y, barSize, bar_color) --progress so far
end
 function button(x, y, length, text, txt_color, bg_color)
   draw_line(x, y, length, bg_color)
   draw_text((x+2), y, text, txt_color, bg_color)
   if clicked and mx>=x-1 and mx<=x+length+1 and my>=y-1 and my<=y+1 then
      return true
   end
   return false
 end

function round(num,s)
   return math.floor((num*(10^s))+0.5)/(10^s)
end
clicked=false
mx=0
my=0
function handletouch()
   clicked=false
   mx=0
   my=0
   local event, button, x, y = os.pullEvent(""monitor_touch"")
   clicked=true
   mx=x
   my=y
end
updatetime=1
function timeout()
   sleep(updatetime)
end
function unit(amount)
   if amount > 1000000 then
      return round(amount/1000000,1)..""M""
   elseif amount > 1000 then
      return round(amount/1000,1)..""K""
   else
      return amount
   end
end
reactor=periphalsearch(""fusionReactorLogicAdapter"")
function update()
   draw_text(3,2,""Reactor Control"",colors.yellow,colors.black)
   tanks=(redstone.getAnalogInput(""front"")/15)
   tanks=math.min(tanks,reactor.getTritium().amount/1000)
   tanks=math.min(tanks,reactor.getDeuterium().amount/1000)
   inj=reactor.getInjectionRate()
   draw_text(3,3,""Tanks"",colors.white,colors.black)
   progress_bar(3,4,20,tanks*100,100,colors.green, colors.white)
   draw_text(3,5,""Injection Rate"",colors.white,colors.black)
   draw_text(3,6,inj,colors.white,colors.black)
   draw_text(3,7,""Generating"",colors.white,colors.black)
   draw_text(3,8,unit(reactor.getPassiveGeneration(false)/2500)..""RF/T"",colors.white,colors.black)
   if tanks>0.7 then
      draw_text(3,9,""Injecting DT Fuel"",colors.red,colors.black)
      redstone.setAnalogOutput(""top"",15)
      updatetime=0.05
   else
      draw_text(3,9,""Tank Level too low not injecting"",colors.white,colors.black)
      redstone.setAnalogOutput(""top"",0)
      updatetime=1
   end
end
clear()
while true do
   parallel.waitForAny(timeout,handletouch)
   update()
end





"
Mz1jq2ki,ü§ëG2A.com Free Gift Card June 2024 UpdatedüéÅ,kjihu25,Python,Tuesday 11th of June 2024 10:20:16 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?592

Working as of:
June 11 2024

"
