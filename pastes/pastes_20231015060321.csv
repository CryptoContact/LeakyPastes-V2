id,title,username,language,date,content
CicT1sp3,206. Reverse Linked List,micahbales,JavaScript,Sunday 15th of October 2023 12:52:06 AM CDT,"/**
* Problem statement: https://leetcode.com/problems/reverse-linked-list/
*
* This iterative solution has O(n) time complexity.
*/

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var reverseList = function(head) {
    if (head === null) return null;
    
    let past = null;
    let curr = head;
    let next;
    while (next !== null) {
        // grab the next node before we reassign
        next = curr.next;
        // reverse the node to set the previous node as 'next'
        curr.next = past;
        // reassign variables for the next iteration, if there will be one
        if (next !== null) {
            past = curr;
            curr = next;
        }
    }
    return curr;
};"
bSrqUhAG,Game3,PrintModule,JavaScript,Sunday 15th of October 2023 12:48:44 AM CDT,"{
`13159078156`: true
}"
dcBsGCxd,os,TIMAS_Bro,Lua,Sunday 15th of October 2023 12:42:16 AM CDT,"os.loadAPI(""lg"")
local _shell = _G.shell
_G.shell = shell
os.loadAPI(""tos"")
_G.shell = shell 
lg.setup(""term"")
lg.setBackgroundColor(colors.white)
lg.fillScreen(colors.white)
lg.setTextColor(colors.black)
lg.fill(1, 26, 2, 2, colors.red)
lg.drawBT(""bank"",3,8,4,7,colors.black,colors.orange,"" crea\n bank"")
lg.drawBT('shell', 11,16,4,7,colors.green,colors.black,"" Bios"")
lg.drawBT('updater', 3,8,9,12,colors.white,colors.blue,"" Upd\n ate"")



while true do
local event, button, x, y = os.pullEvent( ""mouse_click"" )
if (lg.isButton(x,y) == ""bank"") then
tos.openFile('/bank/bank')
elseif (lg.isButton(x,y) == ""updater"") then
tos.openFile(""/upd/upd"")
elseif (lg.isButton(x,y) == ""shell"") then
  --lg.drawImage(1,15,""gui.nfp"")
  term.clear()
  term.setCursorPos(1,1)
  break
end
end
lg.exit()
"
vuDezp7C,upd,TIMAS_Bro,Lua,Sunday 15th of October 2023 12:37:19 AM CDT,"os.loadAPI(""uap"")
os.loadAPI(""lg"")
os.loadAPI(""json"")
lg.setup(""term"")
lg.clearScreen()
lg.fillScreen(colors.yellow)
lg.fill(1,lg.getSize().x,3,3,colors.white)
lg.drawText(2,3,colors.black,colors.white,""Updates:"")
str = nil
obj = nil
str = http.get(""https://raw.githubusercontent.com/Timasbro/creatopico_os/main/apps.json"").readAll()
obj = json.decode(str)
local object = json.decodeFromFile(""/apps.json"")
local offset = 5
for key,value in pairs( obj ) do
   for key2,value2 in pairs( object ) do
       if (key == key2) then
         if (value ~= value2) then
           lg.drawBT(key,2,string.len(value)+1,offset,offset,colors.white,colors.orange,key.."" -> ""..value)
           offset = offset + 2
           obj[key] = nil
         else
           obj[key] = nil 
         end
       end
   end
end
for key,value in pairs( obj ) do
  lg.drawBT(key,2,string.len(value)+1,offset,offset,colors.white,colors.orange,key.."" -> INSTALL"")
  offset = offset + 2
end
uap.upd()
while true do
  local event, button, x, y = os.pullEvent( ""mouse_click"" )
  if (lg.isButton(x,y) ~= false) then
    str = nil
    obj = nil
    str = http.get(""https://raw.githubusercontent.com/Timasbro/creatopico_os/main/pastebins.json"").readAll()
    obj = json.decode(str)
    for key,value in pairs( obj ) do
      if (key == lg.isButton(x,y)) then
        shell.run(""delete"",key)
        shell.run(""pastebin"",""get"",value,""/""..key..""/""..key)
        str2 = http.get(""https://raw.githubusercontent.com/Timasbro/creatopico_os/main/apps.json"").readAll()
        obj2 = json.decode(str2)
        local object = json.decodeFromFile(""/apps.json"")
        local name = lg.isButton(x,y)
        local ver = ""latest""
        for key,value in pairs( obj2 ) do
          if (key == name) then
            ver = value
          end
        end
        object[name] = ver
        prettystring = json.encodePretty(object)
        local file = fs.open(""apps.json"",""w"")
        file.write(prettystring)
        file.close()
        os.reboot()
      end
    end
  else
  end
end
term.setCursorPos(1,lg.getSize().y)
lg.exit()
"
2aEfnGEM,Untitled,Sreekar_0125,C++,Sunday 15th of October 2023 12:33:18 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define int long long

class RangeGcdST
{
public:
    int n;
    vector<int> v, tree;
    void build(int low, int high, int ind)
    {
        if (low == high)
        {
            tree[ind] = v[low];
            return;
        }
        int mid = (low + high) >> 1;

        build(low, mid, 2 * ind + 1);
        build(mid + 1, high, 2 * ind + 2);

        tree[ind] = __gcd(tree[2 * ind + 1], tree[2 * ind + 2]);
    }
    RangeGcdST(vector<int> &v)
    {
        this->v = v;
        this->n = v.size();
        tree.resize(4 * n);
        this->build(0, n - 1, 0);
    }
    int query(int low, int high, int l, int r, int ind)
    {
        int mid = (low + high) >> 1;
        if (low > r || high < l)
        {
            return 0;
        }
        if (low >= l && high <= r)
        {
            return tree[ind];
        }

        int left = query(low, mid, l, r, 2 * ind + 1);
        int right = query(mid + 1, high, l, r, 2 * ind + 2);

        return __gcd(left, right);
    }
};

class RangeMaxST
{
public:
    int n;
    vector<int> v, tree;
    void build(int low, int high, int ind)
    {
        if (low == high)
        {
            tree[ind] = v[low];
            return;
        }
        int mid = (low + high) >> 1;

        build(low, mid, 2 * ind + 1);
        build(mid + 1, high, 2 * ind + 2);

        tree[ind] = max(tree[2 * ind + 1], tree[2 * ind + 2]);
    }
    RangeMaxST(vector<int> &v)
    {
        this->v = v;
        this->n = v.size();
        tree.resize(4 * n);
        this->build(0, n - 1, 0);
    }
    int query(int low, int high, int l, int r, int ind)
    {
        int mid = (low + high) >> 1;
        if (low > r || high < l)
        {
            return LLONG_MIN;
        }
        if (low >= l && high <= r)
        {
            return tree[ind];
        }

        int left = query(low, mid, l, r, 2 * ind + 1);
        int right = query(mid + 1, high, l, r, 2 * ind + 2);

        return max(left, right);
    }
};
void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void solve()
{
    int n;
    cin >> n;

    vector<int> v(n);
    for (int i = 0; i < n; i++)
    {
        cin >> v[i];
    }

    RangeGcdST st1(v);
    RangeMaxST st2(v);

    int G;
    cin >> G;

    map<pair<int, int>, int> mp;
    int maxans = 0;

    while (G--)
    {
        int l, r;
        cin >> l >> r;
        l--;
        r--;

        int gcd = st1.query(0, n - 1, l, r, 0);
        int maxi = st2.query(0, n - 1, l, r, 0);

        int val = maxi / gcd;
        mp[{l + 1, r + 1}] = val;
        maxans = max(maxans, val);
    }
    for (auto i : mp)
    {
        if (i.second == maxans)
        {
            cout << i.first.first << ' ' << i.first.second << ' ' << maxans << endl;
            return;
        }
    }
}

signed main()
{
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
}"
GkSpGyBz,409. Longest Palindrome,micahbales,JavaScript,Sunday 15th of October 2023 12:10:08 AM CDT,"/**
* Problem statement: https://leetcode.com/problems/longest-palindrome/
*
* Note: Longest palindrome will be the number of evenly duplicated letters, plus one non-duplicate letter (which can live at the center)
*/

/**
 * @param {string} s
 * @return {number}
 */
var longestPalindrome = function(s) {
    const map = getAlphabetMap(s);

    // iterate over map and keep running total of values with a pair (an even number for each letter)
    let runningCount = 0;
    for (const val of map.values()) {
        if (val > 1) {
            runningCount += getHighestEvenNumber(val);
        }
    }

    // add one to the total if there are any unpaired letters
    // (a single, unpaired letter is allowed at the center of a palindrome)
    return (s.length > runningCount) ? runningCount + 1 : runningCount;
};

function getAlphabetMap(s) {
    const map = new Map();
    for (const letter of s) {
        const existingValue = map.get(letter);
        if (existingValue) {
            map.set(letter, existingValue + 1);
        } else {
            map.set(letter, 1);
        }
    }
    return map;
}

function getHighestEvenNumber(num) {
    return Math.floor(num / 2) * 2;
}"
FEyreUqi,70. Climbing Stairs,micahbales,JavaScript,Saturday 14th of October 2023 11:26:15 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/climbing-stairs/
*
* Obnoxiously, this problem is just a cover for asking you to calculate a Fibonacci sequence. 
*
* The whole problem consists in: a) Knowing what a Fibonacci sequence is, and b) realizing that this problem mirrors that sequence.
**/

/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function(n) {
    if (n < 3) return n;

    let lastVal = 1;
    let currentVal = 2;
    for (i = 3; i <= n; i++) {
        const tmp = currentVal;
        currentVal = lastVal + tmp;
        lastVal = tmp;
    }
    
    return currentVal;
};"
RYfSCZyR,383. Ransom Note,micahbales,JavaScript,Saturday 14th of October 2023 11:06:49 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/ransom-note/description/
*
* First (uncommented) solution is dramatically more efficient. Commented-out solution used a dictionary and was my initial solution. It is much less efficient.
**/

/**
 * @param {string} ransomNote
 * @param {string} magazine
 * @return {boolean}
 */
var canConstruct = function(ransomNoteStr, magazineStr) {
    for (const letter of magazineStr) {
        ransomNoteStr = ransomNoteStr.replace(letter, '');
    }
    return !!(ransomNoteStr.length === 0);
};

// /**
//  * @param {string} ransomNote
//  * @param {string} magazine
//  * @return {boolean}
//  */
// var canConstruct = function(ransomNoteStr, magazineStr) {
//     const magazineDict = getAlphabetDict(magazineStr);

//     for (i = 0; i < ransomNoteStr.length; i++) {
//         const currentLetter = ransomNoteStr.charAt(i);
//         if (magazineDict[currentLetter] >= 1) {
//             magazineDict[currentLetter] -= 1;
//         } else {
//             return false
//         }
//     }
//     return true;
// };

// function getAlphabetDict(str) {
//     return str.split('').reduce((dict, letter) => ({
//         ...dict,
//         [letter] : dict[letter] ? dict[letter] + 1 : 1,
//     }), {});
// }"
Yk2XnpN0,Untitled,jatloe,JavaScript,Saturday 14th of October 2023 10:45:48 PM CDT,"let ss = SpreadsheetApp.getActiveSpreadsheet();

function onEdit() {
  let range = ss.getSheets()[1].getRange(""A2:Z1000"").getValues();
  let scoreMap = new Map();

  for (let x of range) {
    if (x[0] != """") {
      if (!scoreMap.has(x[1])) {
        scoreMap.set(x[1],[""--"",""--"",""--""]);
      }
      for (let i = 0; i < 3; i++) {
        if (x[i+2] != """") scoreMap.get(x[1])[i] = """"+x[i+2];
      }
    }
  }

  let ind = 0;
  Logger.log([...scoreMap.entries()]);

  for (let [y,irrelevant] of scoreMap) {
    Logger.log(""wow"")
    ans = scoreMap.get(y);
    writeDown = ans[0]+ans[1]+ans[2];
    ss.getSheets()[0].getRange(""A""+(ind+1)+"":B""+(ind+1)).setValues([[y,writeDown]]);
    ind++;
    Logger.log([y,writeDown]);
  }
}"
SdyB9xrd,278. First Bad Version,micahbales,JavaScript,Saturday 14th of October 2023 10:40:45 PM CDT,"/**
* Problem statement at: https://leetcode.com/problems/first-bad-version/description/
*
* This solution employs binary search and has a time complexity of O(logN).
*/

/**
 * Definition for isBadVersion()
 * 
 * @param {integer} version number
 * @return {boolean} whether the version is bad
 * isBadVersion = function(version) {
 *     ...
 * };
 */

/**
 * @param {function} isBadVersion()
 * @return {function}
 */
var solution = function(isBadVersion) {
    /**
     * @param {integer} n Total versions
     * @return {integer} The first bad version
     */
    return function(n) {
        let low = 1;
        let high = n;
        let mid = getMid(low, high);
        while(high !== low) {
            if (isBadVersion(mid)) {
                high = mid;
                mid = getMid(low, high);
            } else {
                low = mid + 1;
                mid = getMid(low, high);
            }
        }
        return mid;
    };
};

function getMid(low, high) {
    return Math.floor((low + high) / 2);
}"
vk39Ttfb,sd,Raising43,Lua,Saturday 14th of October 2023 10:30:56 PM CDT,"local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v10,v11)local v12={};for v17=1, #v10 do v6(v12,v0(v4(v1(v2(v10,v17,v17 + 1 )),v1(v2(v11,1 + (v17% #v11) ,1 + (v17% #v11) + 1 )))%256 ));end return v5(v12);end local v8=gg.getTargetPackage();if (v8~=v7(""\210\204\214\107\242\190\201\29\212\205\207\107\245\190\209\27\223\208\210\43"",""\126\177\163\187\69\134\219\167"")) then local v18=1525 -(893 + 632) ;while true do if (v18==0) then gg.alert(v7(""\20\223\37\203\251\99\253\43\198\247\34\202\47"",""\156\67\173\74\165""));os.exit();break;end end end local v9=gg.getTargetInfo();if (v9.versionName~=v7(""\101\249\25\88\236\104\21"",""\38\84\215\41\118\220\70"")) then local v19=0;local v20;while true do if ((277 -(160 + 117))==v19) then v20=0;while true do if (v20==(1558 -(1533 + 25))) then gg.alert(v7(""\99\21\48\27\238\68\86\43\1\190\95\3\54\22\255\68\19\38"",""\158\48\118\66\114""));os.exit();break;end end break;end end end if true then local v21=gg.searchNumber;local v22=function(...)local v31=0 + 0 ;local v32;local v33;while true do if (0==v31) then v32=0 -0 ;v33=nil;v31=900 -(503 + 396) ;end if (v31==1) then while true do if (v32==1) then local v164=181 -(92 + 89) ;while true do if (v164==(0 -0)) then if gg.isVisible() then while true do x1();end end return v33;end end end if ((0 + 0)==v32) then gg.setVisible(false);v33=v21(...);v32=1 + 0 ;end end break;end end end;gg.searchNumber=v22;end function x1()local v13=0;local v14;while true do if (v13==(0 -0)) then v14=0 + 0 ;while true do if (v14==1) then local v51=0 -0 ;while true do if (v51==0) then gg.processKill();gg.alert(""Please Do Not Open GG during script execution. \n -- Game(process) is Killed. \n -- Please restart the game \n\nProtection"");v51=1 + 0 ;end if (v51==(1 + 0)) then v14=5 -3 ;break;end end end if (v14==0) then gg.clearList();gg.clearResults();v14=1 + 0 ;end if (v14==(2 -0)) then os.exit();break;end end break;end end end if true then local v24=gg.getResults;local v25=function(...)gg.setVisible(false);local v34=v24(...);if gg.isVisible() then while true do x1();end end return v34;end;gg.getResults=v25;end function x1()local v15=0;while true do if (v15==(1246 -(485 + 759))) then os.exit();break;end if (v15==1) then gg.processKill();gg.alert(""Please Do Not Open GG during script execution. \n -- Game(process) is Killed. \n -- Please restart the game \n\nProtection"");v15=4 -2 ;end if (v15==(1189 -(442 + 747))) then gg.clearList();gg.clearResults();v15=1136 -(832 + 303) ;end end end if gg.isPackageInstalled(v7(""\184\55\4\57\124\169\181\164\42\28\47\61\166\244\166\106\3\37\103\170\244\167"",""\155\203\68\112\86\19\197"")) then gg.alert(""⚠⚠uninstall ss tool Noob⚠⚠"");os.exit();end if gg.isPackageInstalled(v7(""\68\212\56\178\77\108\171\232\74\200\37\178\67\121\235\249\84\196"",""\152\38\189\86\156\32\24\133"")) then local v27=946 -(88 + 858) ;while true do if (v27==(0 + 0)) then gg.alert(v7(""\212\86\164\77\188\118\183\86\188\115\162\82\249\84\179\67\248"",""\38\156\55\199""));os.exit();break;end end end if gg.isPackageInstalled(v7(""\184\113\125\49\22\102\180\77\167\111\113\41\31\58\244\83"",""\35\200\29\28\72\115\20\154"")) then local v28=0 + 0 ;while true do if (v28==(0 + 0)) then gg.alert(v7(""\49\190\210\212\205\13\36\9\255\245\218\153\41\55\13\186\213"",""\84\121\223\177\191\237\76""));os.exit();break;end end end if gg.isPackageInstalled(v7(""\168\69\221\175\53\92\126\206\181\90\208\238\57\95\61\143\168\69\221\175\53\92"",""\161\219\54\169\192\90\48\80"")) then local v29=0;local v30;while true do if (v29==(789 -(766 + 23))) then v30=0 -0 ;while true do if (v30==(0 -0)) then gg.alert(""⚠⚠uninstall ss tool Noob⚠⚠"");os.exit();break;end end break;end end end gg.alert(""Youtube Official : Zerras Official \n Discord : Zerras#8452 \n Line : douzyokai \n The official script only from my discord or line,if u get the script from shopee or ebay or etc it's not from me and I'm not responsible for it"");gg.alert(v7(""\30\2\36\32\72\70\12\60\9\113\9\43\9\106\1\38\66\2\2\60\9\120\5\55\72\81"",""\69\41\34\96""),v7(""\145\198\217\31\66\3\189\192\220"",""\75\220\163\183\106\98""));while true do local v16=0;while true do if (v16==2) then local v35=0 -0 ;while true do if (v35==(3 -2)) then function pointer()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v52==(1086 -(1036 + 37))) then v61=v61[10 + 4 ];function getRanges()local v296=0 -0 ;local v297;local v298;local v299;local v300;while true do if (v296==1) then local v398=0 + 0 ;while true do if (v398==1) then v296=2;break;end if (v398==0) then v299=gg.getRangesList(""^/data/*.so*$"");v300=v7(""\185\32\160\69\200\64\16"",""\105\204\78\203\43\167\55\126"");v398=1481 -(641 + 839) ;end end end if (v296==(913 -(910 + 3))) then v297={[7 -4 ]=v7(""\106\25\33"",""\235\18\33\23\229\158""),[1724 -(1466 + 218) ]=v7(""\113\136\236"",""\219\48\218\161""),[62]=v7(""\252\41\42\4\141\27"",""\128\132\17\28\41\187\47""),[85 + 98 ]=v7(""\32\19\20\57\85\87\102"",""\61\97\82\102\90"")};v298={};v296=1;end if (v296==(1150 -(556 + 592))) then for v399,v400 in ipairs(v299) do local v401=0;while true do if (v401==(0 + 0)) then if (v400.type:sub(810 -(329 + 479) ,856 -(174 + 680) )==""-"") then local v443=0 -0 ;local v444;local v445;while true do if (v443==(0 -0)) then v444=0 + 0 ;v445=nil;v443=740 -(396 + 343) ;end if (v443==(1 + 0)) then while true do if (v444==0) then v445=gg.getValues({{[v7(""\164\174\39\12\22\23\212"",""\49\197\202\67\126\115\100\167"")]=v400.start,[v7(""\49\87\222\46\147"",""\62\87\59\191\73\224\54"")]=gg.TYPE_DWORD},{[v7(""\230\6\254\219\226\17\233"",""\169\135\98\154"")]=v400.start + (67 -49) ,[v7(""\205\123\37\83\238"",""\168\171\23\68\52\157\83"")]=gg.TYPE_WORD}});if (v445[4 -3 ].value==1179403647) then local v479=0 + 0 ;while true do if (v479==0) then v300=v297[v445[1529 -(389 + 1138) ].value];if (v300==nil) then v300=v7(""\225\127\254\163\42\58\137"",""\231\148\17\149\205\69\77"");end break;end end end break;end end break;end end end if (v400.type:sub(2,576 -(102 + 472) )==""w"") then v400.arch=v300;table.insert(v298,v400);end break;end end end return v298;end end end function out()local v301=0;local v302;local v303;local v304;local v305;local v306;local v307;while true do if (v301==(2 + 0)) then v305={};v306=false;v301=2 + 1 ;end if (v301==4) then while v306 do local v402=gg.getValues(v305);v305,v306={},false;for v413,v414 in pairs(v402) do if (v413.offset==nil) then table.insert(v304,v414);else local v430=0 + 0 ;while true do if (v430==(1545 -(320 + 1225))) then if  not v302.x64 then v414.value=v414.value & 4294967295 ;end for v462,v463 in pairs(v413.offset) do local v464=0;while true do if (v464==(0 -0)) then v463.address=v414.value + v462 ;v305[v463],v306=v463,true;break;end end end break;end end end end end gg.loadResults(v304);break;end if (v301==3) then v307={};for v403,v404 in ipairs(v61) do local v405=0;while true do if (v405==(0 + 0)) then if (v404.map.new==nil) then local v447=v404.map.internalName:gsub(""^.*/"","""");for v450,v451 in ipairs(v303) do local v452=v451.internalName:gsub(""^.*/"","""");if ((v447==v452) and (v404.map.state==v451.state)) then if ((v307[v447]==nil) and (v404.map.arch~=v451.arch)) then local v475=1464 -(157 + 1307) ;local v476;local v477;while true do if (1==v475) then while true do if (v476==(1859 -(821 + 1038))) then v477=0;while true do if (v477==(0 -0)) then v307[v447]=true;gg.alert(v7(""\213\192\55\186\252\51\238\75\241\220\114\243\252\112\251\71\239\205\32\251\251\53\248\2\231\199\32\186\251\56\249\2"",""\34\129\168\82\154\143\80\156"")   .. v447   .. v7(""\197\190\58\9\90\79\155\156\242\36\2\92\70\201"",""\233\229\210\83\107\40\46"")   .. v404.map.arch   .. v7(""\129\67\32\213\13\200\86\55\213\17\212\80\55\154\69\192\76\54\150\28\206\87\114\213\13\206\81\55\150\4\129\82\32\217\6\196\81\33\150\18\201\71\32\211\69\213\74\55\150"",""\101\161\34\82\182"")   .. v447   .. v7(""\168\1\80\252\201\227\144\55\168\5\88\237\155\227\140\110"",""\78\136\109\57\158\187\130\226"")   .. v451.arch   .. "" architecture.\n\nChains may be loaded incorrectly."" );break;end end break;end end break;end if (v475==(0 + 0)) then v476=0 -0 ;v477=nil;v475=1;end end end v404.map.new=v451;break;end end end if (v404.map.new~=nil) then for v453,v454 in ipairs(v404) do v454.address=(v454.address-v404.map.start) + v404.map.new.start ;v305[v454],v306=v454,true;end end break;end end end v301=2 + 2 ;end if ((2 -1)==v301) then v303=getRanges();v304={};v301=2;end if (v301==0) then v302=gg.getTargetInfo();if ((v302.packageName~=v61.packageName) or (v302.versionCode~=v61.versionCode) or (v302.versionName~=v61.versionName) or (v302.x64~=v61.x64)) then local v415={[true]=v7(""\152\241\147"",""\159\224\199\167\155\55""),[false]=v7(""\239\160\110"",""\178\151\147\92"")};gg.alert(""The script is generated for the process\n\n""   .. v61.packageName   .. "" ""   .. v61.versionName   .. v7(""\204\198"",""\26\236\157\44\82\114\44"")   .. v61.versionCode   .. v7(""\23\110"",""\59\74\78\181"")   .. v415[v61.x64]   .. ""\n\nYou selected the process\n\n""   .. v302.packageName   .. "" ""   .. v302.versionName   .. v7(""\101\234"",""\211\69\177\58\58"")   .. v302.versionCode   .. v7(""\138\165"",""\171\215\133\25\149\137"")   .. v415[v302.x64]   .. ""\n\nChains may be loaded incorrectly."" );end v301=1027 -(834 + 192) ;end end end out();break;end if (v52==(1 + 5)) then v62=v61[3 + 7 ];v62[1 + 7 ]=v61[2 -0 ];v62=v61[315 -(300 + 4) ];v62[v7(""\84\40\178\69\72\79"",""\45\59\78\212\54"")]=v61[4 + 8 ];v52=18 -11 ;end if (v52==1) then v62[506 -(112 + 250) ]=v61[2];v62=v61[2 + 2 ];v62[0 -0 ]=v61[6 + 3 ];v62=v61[3 + 2 ];v52=2 + 0 ;end if (v52==(6 + 5)) then v62=v61[16 + 5 ];v62[v7(""\181\82\176\83\191\64"",""\32\218\52\214"")]=v61[1420 -(1001 + 413) ];v62=v61[51 -28 ];v62[v7(""\65\17\55\187\244\164"",""\58\46\119\81\200\145\208\37"")]=v61[17];v52=894 -(244 + 638) ;end if (2==v52) then local v196=0;while true do if (v196==(694 -(627 + 66))) then v62[8 -5 ]=v61[610 -(512 + 90) ];v62[1910 -(1665 + 241) ]=v61[724 -(373 + 344) ];v196=1 + 1 ;end if (v196==0) then v62[1 + 0 ]=v61[49 -30 ];v62[2 -0 ]=v61[1120 -(35 + 1064) ];v196=1 + 0 ;end if (v196==(4 -2)) then v52=3;break;end end end if (v52==(1 + 8)) then v62=v61[1252 -(298 + 938) ];v62[v7(""\31\80\133\152\131\58"",""\144\112\54\227\235\230\78\205"")]=v61[13];v62=v61[17];v62[1263 -(233 + 1026) ]=v61[1668 -(636 + 1030) ];v52=10;end if (v52==(3 + 1)) then local v203=0 + 0 ;while true do if ((1 + 1)==v203) then v52=1 + 4 ;break;end if (v203==0) then v62[230 -(55 + 166) ]=v61[11];v62[v7(""\117\134\62"",""\119\24\231\78"")]=v61[20];v203=1 + 0 ;end if (v203==(1 + 0)) then v62=v61[22 -16 ];v62[297 -(36 + 261) ]=v61[22];v203=2;end end end if (v52==(20 -8)) then local v204=1368 -(34 + 1334) ;while true do if (v204==(1 + 1)) then v52=11 + 2 ;break;end if (v204==(1283 -(1035 + 248))) then v62=v61[24];v62[249 -(20 + 1) ]=v61[2 + 0 ];v204=320 -(134 + 185) ;end if (v204==(1134 -(549 + 584))) then v62=v61[710 -(314 + 371) ];v62[v7(""\36\138\54\191\172\169"",""\86\75\236\80\204\201\221"")]=v61[3 -2 ];v204=2;end end end if (v52==7) then v62=v61[12];v62[968 -(478 + 490) ]=v61[2 + 0 ];v62=v61[13];v62[1272 -(786 + 386) ]=v61[2];v52=25 -17 ;end if (v52==(1379 -(1055 + 324))) then gg.clearResults();v53,v54,v55,v56,v57,v58,v59,v60,v61,v62=v7(""\185\237\223\214\189\250\200"",""\164\216\137\187""),v7(""\196\231\61\167\163"",""\107\178\134\81\210\198\158""),v7(""\62\2\131\193\185"",""\202\88\110\226\166""),v7(""\205\14\143\242"",""\170\163\111\226\151""),v7(""\23\34\183\61\84\50"",""\73\113\80\210\88\46\87""),v7(""\135\62\200\23\253\132\24\212\2\226"",""\135\225\76\173\114""),v7(""\28\255\189\181\182\184\129\8\226\181"",""\199\122\141\216\208\204\221""),v7(""\171\207\21\245\98\243\153\210"",""\150\205\189\112\144\24""),nil;v61={{[128 + 16 ]=nil},{[v55]=4,[v53]=508230023428 -  -34764476 ,[v54]= -(1416889056 -628442847)},{[v55]=9 -5 ,[v53]=508260604884,[v54]= -788429825},{[0 -0 ]=nil},{nil,nil,nil,nil,nil,nil,nil,nil,nil,[v7(""\40\133\175"",""\112\69\228\223\44\100\232\113"")]=nil},{[0]=nil},{[v55]=11 + 21 ,[v7(""\219\25\1\192\179\104"",""\230\180\127\103\179\214\28"")]=nil,[v53]=508345045376,[v54]=508264787676},{[v55]=133 -101 ,[v7(""\131\3\89\85\225\85"",""\128\236\101\63\38\132\33"")]=nil,[v53]=508345015824 -0 ,[v54]=509669599392 -1408994508 },{[v55]=4,[v53]=508279181678 -(1291 + 267) ,[v54]= -788298753},{[5 + 3 ]=nil},{[v55]=149 -(16 + 101) ,[v7(""\163\175\23\87\179\255"",""\175\204\201\113\36\214\139"")]=nil,[v53]=508345046467 -(966 + 5) ,[v54]=508264788715 -(721 + 90) },{[0 -0 ]=nil},{[162 -62 ]=nil},{nil,[v7(""\87\205\54\215\5\64\201\27\221\9\66"",""\100\39\172\85\188"")]=v7(""\174\119\180\206\39\168\118\186\133\61\185\54\170\133\37\168\118\170\137\61"",""\83\205\24\217\224""),[v7(""\240\192\223\46\239\202\195\19\231\200\200"",""\93\134\165\173"")]=v7(""\239\188\145\140\106\128\225"",""\30\222\146\161\162\90\174\210""),[v7(""\253\24\36"",""\106\133\46\16"")]=true,[v7(""\78\37\97\239\83\79\86\3\124\248\95"",""\32\56\64\19\156\58"")]=1089 + 4914 },{[0]=nil},{[v55]=24 + 8 ,[v7(""\85\206\227\69\95\230"",""\224\58\168\133\54\58\146"")]=nil,[v53]=508830836919 -485791447 ,[v54]=508264787804},{[517 -(203 + 310) ]=nil},{[v55]=3 + 29 ,[v7(""\86\80\77\238\112\146"",""\107\57\54\43\157\21\230\231"")]=nil,[v53]=508345045480,[v54]=508264789430 -(709 + 825) },{[v55]=58 -26 ,[v7(""\212\141\23\230\188\200"",""\175\187\235\113\149\217\188"")]=nil,[v53]=508344869576,[v54]=508084227466 -  -194952654 },{[v7(""\57\161\133"",""\24\92\207\225\44\131\25"")]=508349231104 -0 ,[v56]=""/data/app/com.tencent.sevensin-wr2e2wNHffVHsEoGNjXeqg==/lib/arm64/libil2cpp.so"",[v7(""\74\193\187\68"",""\29\43\179\216\44\123"")]=v7(""\156\248\50\79\181\143\116"",""\44\221\185\64""),[v7(""\18\243\73\75\118"",""\19\97\135\40\63"")]=v7(""\141\88"",""\81\206\60\83\91\79""),[v7(""\90\178\192\119"",""\196\46\203\176\18\79\163\45"")]=v7(""\170\53\51\14"",""\143\216\66\30\126\68\155""),[v7(""\163\198\25\206\215\173\214\237\132\201\0\206"",""\129\202\168\109\171\165\195\183"")]=""/data/app/com.tencent.sevensin-wr2e2wNHffVHsEoGNjXeqg==/lib/arm64/libil2cpp.so"",[v7(""\49\76\54\202\202"",""\134\66\56\87\184\190\116"")]=508341227520 -0 },{[v55]=125 -(4 + 89) ,[v7(""\51\55\15\168\28\255"",""\85\92\81\105\219\121\139\65"")]=nil,[v53]=508258244844 -  -86770972 ,[v54]=508225329561 -  -35274987 },{[v55]=4,[v53]=508260606034 -(35 + 1451) ,[v54]= -(132445620 -(28 + 1425))},{[v55]=2025 -(941 + 1052) ,[v7(""\242\181\86\86\121\203"",""\191\157\211\48\37\28"")]=nil,[v53]=508345046042 -(419 + 135) ,[v54]=509287004729 -1022216829 },{[517 -(120 + 169) ]=nil},{[v55]=77 -45 ,[v7(""\208\25\242\15\63\203"",""\90\191\127\148\124"")]=nil,[v53]=508345045400,[v54]=508264788193 -(114 + 319) }};v62=v61[1 -0 ];v52=1 -0 ;end if (v52==(2 + 1)) then v62[7 -2 ]=v61[25];v62[12 -6 ]=v61[1979 -(556 + 1407) ];v62[1213 -(741 + 465) ]=v61[18];v62[473 -(170 + 295) ]=v61[23];v52=3 + 1 ;end if (v52==5) then v62=v61[7 + 0 ];v62[v7(""\141\43\163\89\217\84"",""\113\226\77\197\42\188\32"")]=v61[59 -35 ];v62=v61[8];v62[v7(""\53\16\242\166\63\2"",""\213\90\118\148"")]=v61[13 + 2 ];v52=4 + 2 ;end if (v52==(5 + 3)) then v62=v61[1244 -(957 + 273) ];v62[1]=v61[2 + 3 ];v62=v61[15];v62[0]=v61[2 + 1 ];v52=9;end if (v52==(38 -28)) then v62=v61[47 -29 ];v62[v7(""\188\46\9\239\213\79"",""\59\211\72\111\156\176"")]=v61[30 -20 ];v62=v61[94 -75 ];v62[v7(""\65\129\229\62\75\147"",""\77\46\231\131"")]=v61[1784 -(389 + 1391) ];v52=7 + 4 ;end end end v16=1 + 2 ;break;end if (v35==(0 -0)) then function ch6()gg.clearResults();gg.setRanges(gg.REGION_CODE_APP);gg.searchNumber(v7(""\150\24\32\64\232\82\148\5\35\88\235\71\150"",""\126\167\52\16\116\217""),gg.TYPE_DWORD);gg.getResults(100);if gg.isVisible() then local v172=951 -(783 + 168) ;while true do if (v172==0) then gg.setVisible(false);gg.clearResults(true);v172=3 -2 ;end if (v172==(1 + 0)) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});os.exit();break;end end end gg.editAll(v7(""\153\98\112\212\230\85\165\154\122\108\216\229\78"",""\156\168\78\64\224\212\121""),gg.TYPE_DWORD);gg.clearResults();gg.toast(v7(""\52\254\160\203\3\174\138\192"",""\174\103\142\197""));end function ch5()local v63=0 -0 ;local v64;local v65;while true do if (v63==(1213 -(1090 + 122))) then while true do if ((0 + 0)==v64) then v65=0 -0 ;while true do if (v65==(1 + 0)) then gg.searchNumber(v7(""\7\100\15\108\119\18\161\4\124\19\96\116\9"",""\152\54\72\63\88\69\62""),gg.TYPE_DWORD);gg.getResults(100);v65=1120 -(628 + 490) ;end if (v65==2) then local v416=0 + 0 ;while true do if (v416==1) then v65=3;break;end if (v416==0) then if gg.isVisible() then local v457=0 -0 ;local v458;while true do if (v457==(0 -0)) then v458=774 -(431 + 343) ;while true do if (v458==0) then local v478=0 -0 ;while true do if (v478==(2 -1)) then v458=1 + 0 ;break;end if (v478==(0 + 0)) then gg.setVisible(false);gg.clearResults(true);v478=1;end end end if (v458==(1696 -(556 + 1139))) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});os.exit();break;end end break;end end end gg.editAll(v7(""\133\136\190\8\133\136\189\13\135\136\188\5\133"",""\60\180\164\142""),gg.TYPE_DWORD);v416=1;end end end if (v65==0) then gg.clearResults();gg.setRanges(gg.REGION_CODE_APP);v65=1;end if (v65==3) then gg.clearResults();gg.toast(v7(""\107\78\0\44\35\173\61\94\88"",""\114\56\62\101\73\71\141""));break;end end break;end end break;end if (v63==0) then v64=15 -(6 + 9) ;v65=nil;v63=1;end end end v35=1;end end end if (v16==(1 + 2)) then function pointer1()local v37=0 + 0 ;local v38;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;while true do if ((171 -(28 + 141))==v37) then local v66=0 + 0 ;while true do if (v66==(3 -0)) then v47[7]=v46[25 + 9 ];v37=3;break;end if (v66==(1318 -(486 + 831))) then v47[7 -4 ]=v46[17];v47[4]=v46[52 -37 ];v66=2;end if (v66==0) then v47[1 + 0 ]=v46[81 -55 ];v47[1265 -(668 + 595) ]=v46[4];v66=1;end if (v66==(2 + 0)) then v47[5]=v46[2 + 7 ];v47[16 -10 ]=v46[8];v66=3;end end end if ((297 -(23 + 267))==v37) then local v67=1944 -(1129 + 815) ;while true do if (v67==3) then v47[v7(""\227\174\5\215\89\248"",""\60\140\200\99\164"")]=v46[411 -(371 + 16) ];v37=1758 -(1326 + 424) ;break;end if (v67==0) then v47[v7(""\63\24\134\11\68\36"",""\33\80\126\224\120"")]=v46[3 -1 ];v47=v46[18];v67=1;end if (v67==2) then v47[277 -201 ]=v46[146 -(88 + 30) ];v47=v46[20];v67=3;end if (v67==(772 -(720 + 51))) then v47[228]=v46[30 -16 ];v47=v46[19];v67=1778 -(421 + 1355) ;end end end if (v37==(4 -1)) then v47[4 + 4 ]=v46[1116 -(286 + 797) ];v47[32 -23 ]=v46[4 -1 ];v47[449 -(397 + 42) ]=v46[4 + 6 ];v47[811 -(24 + 776) ]=v46[55 -19 ];v47[12]=v46[798 -(222 + 563) ];v47[28 -15 ]=v46[1 + 0 ];v47[14]=v46[210 -(23 + 167) ];v37=1802 -(690 + 1108) ;end if (v37==0) then gg.clearResults();v38,v39,v40,v41,v42,v43,v44,v45,v46,v47=v7(""\63\59\253\227\59\44\234"",""\145\94\95\153""),v7(""\235\204\24\192\75"",""\215\157\173\116\181\46""),v7(""\51\184\138\245\201"",""\186\85\212\235\146""),v7(""\204\128\27\251"",""\56\162\225\118\158\89\142""),v7(""\90\23\197\170\56\221"",""\184\60\101\160\207\66""),v7(""\55\144\121\185\43\135\72\165\33\135"",""\220\81\226\28""),v7(""\21\199\135\254\240\194\53\199\141\246"",""\167\115\181\226\155\138""),v7(""\228\48\226\89\97\116\242\237"",""\166\130\66\135\60\27\17""),nil;v46={{[v40]=32,[v7(""\75\76\200\102\53\80"",""\80\36\42\174\21"")]=nil,[v38]=508345044368,[v39]=508264681634 -(158 + 212) },{[16]=nil},{[v40]=32,[v7(""\65\22\49\105\75\4"",""\26\46\112\87"")]=nil,[v38]=508345045271 -(566 + 633) ,[v39]=508264758992},{[v40]=603 -(47 + 524) ,[v7(""\182\37\173\103\186\171"",""\212\217\67\203\20\223\223\37"")]=nil,[v38]=508345028712 -0 ,[v39]=508261298640 -0 },{[1858 -(1165 + 561) ]=nil},{nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,[v7(""\183\140\184"",""\178\218\237\200"")]=nil},{[108 -60 ]=nil},{[v40]=64 -32 ,[v7(""\185\179\224\195\179\161"",""\176\214\213\134"")]=nil,[v38]=508345044048,[v39]=509244425447 -979666483 },{[v40]=157 -125 ,[v7(""\251\171\176\199\173\66"",""\57\148\205\214\180\200\54"")]=nil,[v38]=508345029899 -(671 + 492) ,[v39]=508261298915 -(143 + 92) },{[v40]=32,[v7(""\29\251\51\39\115\6"",""\22\114\157\85\84"")]=nil,[v38]=508345044112,[v39]=508264759004},{[256]=nil},{[v40]=28 + 4 ,[v7(""\203\205\21\215\88\226"",""\200\164\171\115\164\61\150"")]=nil,[v38]=508345058705 -(1036 + 909) ,[v39]=508261300399 -(1065 + 730) },{[v40]=1324 -(641 + 651) ,[v7(""\177\242\5\86\134\170"",""\227\222\148\99\37"")]=nil,[v38]=508345044303 -(135 + 40) ,[v39]=508264759220},{[v40]=3 + 1 ,[v38]=508164085226 -  -100673994 ,[v39]= -(1720270046 -273124562)},{[v40]=32,[v7(""\60\84\84\229\252\39"",""\153\83\50\50\150"")]=nil,[v38]=508345028728,[v39]=508261298848 -(50 + 126) },{[8]=nil},{[v40]=32,[v7(""\82\112\117\15\118\191"",""\45\61\22\19\124\19\203"")]=nil,[v38]=508345028720,[v39]=508261300077 -(1233 + 180) },{[1649 -(107 + 1314) ]=nil},{[76]=nil},{[v40]=97 -65 ,[v7(""\206\20\11\230\7\100"",""\217\161\114\109\149\98\16"")]=nil,[v38]=508345056752 -0 ,[v39]=510375499737 -2114201273 },{[5 + 231 ]=nil},{[v40]=507 -(74 + 429) ,[v38]=508264681264 -0 ,[v39]= -(65544778 + 66702787)},{[567 -319 ]=nil},{[153 + 63 ]=nil},{[v7(""\23\46\60"",""\20\114\64\88\28\220"")]=509235136931 -885905827 ,[v41]=""/data/app/com.tencent.sevensin-wr2e2wNHffVHsEoGNjXeqg==/lib/arm64/libil2cpp.so"",[v7(""\48\19\209\188"",""\221\81\97\178\212\152\176"")]=v7(""\236\198\15\248\18\155\179"",""\122\173\135\125\155""),[v7(""\151\213\1\173\58"",""\168\228\161\96\217\95\81"")]=v7(""\248\213"",""\55\187\177\78\60\79""),[v7(""\57\215\79\238"",""\224\77\174\63\139\38\175"")]=v7(""\150\86\21\62"",""\78\228\33\56""),[v7(""\199\112\166\6\151\192\127\190\45\132\195\123"",""\229\174\30\210\99"")]=""/data/app/com.tencent.sevensin-wr2e2wNHffVHsEoGNjXeqg==/lib/arm64/libil2cpp.so"",[v7(""\8\249\135\67\249"",""\89\123\141\230\49\141\93"")]=508341227953 -(279 + 154) },{[v40]=32,[v7(""\252\119\240\31\21\94"",""\42\147\17\150\108\112"")]=nil,[v38]=508345028893 -(4 + 185) ,[v39]=509773622047 -1512323415 },{[0 + 0 ]=nil},{[v40]=4,[v38]=508261299863 -(1058 + 125) ,[v39]= -(271311002 + 1175757673)},{[0 -0 ]=nil},{nil,[v7(""\31\167\46\116\230\239\10\136\44\114\226"",""\136\111\198\77\31\135"")]=v7(""\1\6\170\24\169\225\25\170\7\7\179\24\174\225\1\172\12\26\174\88"",""\201\98\105\199\54\221\132\119""),[v7(""\175\9\145\50\11\58\162\151\13\142\36"",""\204\217\108\227\65\98\85"")]=v7(""\15\141\165\171\124\142\13"",""\160\62\163\149\133\76""),[v7(""\206\246\89"",""\163\182\192\109\79"")]=true,[v7(""\34\35\18\211\252\59\40\35\207\241\49"",""\149\84\70\96\160"")]=1433 + 4570 },{[1938 -(41 + 1857) ]=nil},{[216]=nil},{[v40]=82 -50 ,[v7(""\55\0\11\254\61\18"",""\141\88\102\109"")]=nil,[v38]=509251292970 -906248906 ,[v39]=508264758984},{[v40]=32,[v7(""\188\85\204\99\31\41"",""\161\211\51\170\16\122\93\53"")]=nil,[v38]=508345044716 -(585 + 75) ,[v39]=508264758972},{[0]=nil},{[v40]=32,[v7(""\244\168\180\59\254\186"",""\72\155\206\210"")]=nil,[v38]=508345044120,[v39]=508215337716 -  -49421372 }};v47=v46[1872 -(1323 + 548) ];v47[v7(""\73\124\82\29\54\82"",""\83\38\26\52\110"")]=v46[85 -56 ];v47=v46[681 -(642 + 37) ];v47[4 + 12 ]=v46[5 + 23 ];v37=2 -1 ;end if (v37==(463 -(233 + 221))) then v47[v7(""\136\242\2\53\167\147"",""\194\231\148\100\70"")]=v46[15 -8 ];v47=v46[24 + 3 ];v47[1541 -(718 + 823) ]=v46[28];v47=v46[19 + 10 ];v47[0]=v46[827 -(266 + 539) ];v47=v46[84 -54 ];v47[1]=v46[6];v37=10;end if (v37==(1237 -(636 + 589))) then function out()local v165=0 -0 ;local v166;local v167;local v168;local v169;local v170;local v171;while true do if (0==v165) then v166=gg.getTargetInfo();if ((v166.packageName~=v46.packageName) or (v166.versionCode~=v46.versionCode) or (v166.versionName~=v46.versionName) or (v166.x64~=v46.x64)) then local v347=0 -0 ;local v348;local v349;while true do if (v347==(0 + 0)) then v348=0 + 0 ;v349=nil;v347=1016 -(657 + 358) ;end if (v347==1) then while true do if (v348==(0 -0)) then v349={[true]=v7(""\8\66\102"",""\194\112\116\82\149\182\206""),[false]=v7(""\33\251\30"",""\110\89\200\44\120\160\130"")};gg.alert(""The script is generated for the process\n\n""   .. v46.packageName   .. "" ""   .. v46.versionName   .. v7(""\235\248"",""\45\203\163\43\38\35\42\91"")   .. v46.versionCode   .. v7(""\239\197"",""\52\178\229\188\67\231\201"")   .. v349[v46.x64]   .. ""\n\nYou selected the process\n\n""   .. v166.packageName   .. "" ""   .. v166.versionName   .. v7(""\97\122"",""\67\65\33\48\100\151\60"")   .. v166.versionCode   .. v7(""\226\167"",""\147\191\135\206\184"")   .. v349[v166.x64]   .. ""\n\nChains may be loaded incorrectly."" );break;end end break;end end end v165=2 -1 ;end if (v165==(1188 -(1151 + 36))) then v167=getRanges();v168={};v165=2 + 0 ;end if (v165==(1 + 1)) then v169={};v170=false;v165=3;end if (3==v165) then v171={};for v312,v313 in ipairs(v46) do local v314=0 -0 ;while true do if (v314==0) then if (v313.map.new==nil) then local v426=v313.map.internalName:gsub(""^.*/"","""");for v431,v432 in ipairs(v167) do local v433=v432.internalName:gsub(""^.*/"","""");if ((v426==v433) and (v313.map.state==v432.state)) then if ((v171[v426]==nil) and (v313.map.arch~=v432.arch)) then v171[v426]=true;gg.alert(v7(""\176\32\163\129\203\80\160\141\56\178\129\209\64\242\131\45\168\196\202\82\166\129\44\230\199\215\65\242\144\32\163\129"",""\210\228\72\198\161\184\51"")   .. v426   .. v7(""\118\69\250\18\97\207\36\80\179\7\122\218\62\9"",""\174\86\41\147\112\19"")   .. v313.map.arch   .. v7(""\27\1\159\8\45\6\5\174\88\20\152\25\32\67\81\170\85\4\205\18\42\26\81\168\83\15\158\14\101\14\81\187\73\15\142\14\54\28\81\188\83\5\159\14\101\27\25\174\27"",""\203\59\96\237\107\69\111\113"")   .. v426   .. v7(""\100\26\165\227\35\241\197\61\86\164\224\34\176\214\42\86"",""\183\68\118\204\129\81\144"")   .. v432.arch   .. "" architecture.\n\nChains may be loaded incorrectly."" );end v313.map.new=v432;break;end end end if (v313.map.new~=nil) then for v434,v435 in ipairs(v313) do local v436=1832 -(1552 + 280) ;while true do if (v436==(834 -(64 + 770))) then v435.address=(v435.address-v313.map.start) + v313.map.new.start ;v169[v435],v170=v435,true;break;end end end end break;end end end v165=3 + 1 ;end if (v165==4) then while v170 do local v315=0 -0 ;local v316;local v317;local v318;while true do if (v315==(1 + 0)) then v318=nil;while true do if (v316==(1243 -(157 + 1086))) then v317=0;v318=nil;v316=1 -0 ;end if (v316==(4 -3)) then while true do if (0==v317) then v318=gg.getValues(v169);v169,v170={},false;v317=1;end if ((1 -0)==v317) then for v466,v467 in pairs(v318) do if (v466.offset==nil) then table.insert(v168,v467);else local v472=0;while true do if (v472==(0 -0)) then if  not v166.x64 then v467.value=v467.value & 4294967295 ;end for v480,v481 in pairs(v466.offset) do local v482=819 -(599 + 220) ;while true do if (v482==(0 -0)) then v481.address=v467.value + v480 ;v169[v481],v170=v481,true;break;end end end break;end end end end break;end end break;end end break;end if (v315==0) then v316=1931 -(1813 + 118) ;v317=nil;v315=1;end end end gg.loadResults(v168);break;end end end out();break;end if (v37==(4 + 1)) then v47[v7(""\131\58\66\241\86\22"",""\98\236\92\36\130\51"")]=v46[1244 -(841 + 376) ];v47=v46[14 -4 ];v47[v7(""\171\31\10\169\64\188"",""\80\196\121\108\218\37\200\213"")]=v46[8 + 24 ];v47=v46[29 -18 ];v47[1115 -(464 + 395) ]=v46[35 -21 ];v47=v46[12];v47[v7(""\15\117\4\108\78\26"",""\234\96\19\98\31\43\110"")]=v46[10 + 9 ];v37=843 -(467 + 370) ;end if (v37==11) then local v110=0 -0 ;while true do if (v110==(1 + 0)) then v47[0 -0 ]=v46[3 + 11 ];v47=v46[36];v110=4 -2 ;end if (v110==2) then v47[v7(""\77\232\95\147\71\250"",""\224\34\142\57"")]=v46[525 -(150 + 370) ];v46=v46[1312 -(74 + 1208) ];v110=3;end if (v110==(7 -4)) then function getRanges()local v308={[14 -11 ]=v7(""\198\255\147"",""\110\190\199\165\189\19\145\61""),[29 + 11 ]=v7(""\251\217\90"",""\167\186\139\23\136\235""),[62]=v7(""\2\237\222\64\76\225"",""\109\122\213\232""),[573 -(14 + 376) ]=v7(""\207\214\176\51\230\161\246"",""\80\142\151\194"")};local v309={};local v310=gg.getRangesList(""^/data/*.so*$"");local v311=v7(""\22\200\124\66\12\209\121"",""\44\99\166\23"");for v319,v320 in ipairs(v310) do local v321=0 -0 ;while true do if (v321==0) then if (v320.type:sub(2 + 0 ,2 + 0 )==""-"") then local v427=0 + 0 ;local v428;while true do if (v427==0) then v428=gg.getValues({{[v7(""\125\243\45\36\54\183\111"",""\196\28\151\73\86\83"")]=v320.start,[v7(""\245\15\40\23\145"",""\22\147\99\73\112\226\56\120"")]=gg.TYPE_DWORD},{[v7(""\185\113\230\231\136\171\102"",""\237\216\21\130\149"")]=v320.start + 18 ,[v7(""\132\66\94\88\163"",""\62\226\46\63\63\208\169"")]=gg.TYPE_WORD}});if (v428[1 + 0 ].value==(1179403725 -(23 + 55))) then local v468=0 -0 ;local v469;while true do if (v468==(0 + 0)) then v469=0 + 0 ;while true do if (v469==0) then v311=v308[v428[2].value];if (v311==nil) then v311=v7(""\240\23\94\141\16\26\33"",""\62\133\121\53\227\127\109\79"");end break;end end break;end end end break;end end end if (v320.type:sub(2 -0 ,2)==""w"") then local v429=0 + 0 ;while true do if (0==v429) then v320.arch=v311;table.insert(v309,v320);break;end end end break;end end end return v309;end v37=913 -(652 + 249) ;break;end if (v110==(0 -0)) then v47[v7(""\143\250\132\101\53\252"",""\118\224\156\226\22\80\136\214"")]=v46[1891 -(708 + 1160) ];v47=v46[95 -60 ];v110=1;end end end if (v37==4) then v47[15]=v46[12];v47[v7(""\219\128\239"",""\191\182\225\159\41"")]=v46[45 -20 ];v47=v46[34 -(10 + 17) ];v47[11 + 37 ]=v46[1760 -(1400 + 332) ];v47=v46[15 -7 ];v47[v7(""\36\20\46\70\142\147"",""\162\75\114\72\53\235\231"")]=v46[1919 -(242 + 1666) ];v47=v46[4 + 5 ];v37=5;end if (v37==8) then local v122=0 + 0 ;while true do if ((0 + 0)==v122) then v47=v46[961 -(850 + 90) ];v47[412 -176 ]=v46[14];v122=1391 -(360 + 1030) ;end if (v122==(1 + 0)) then v47=v46[64 -41 ];v47[340 -92 ]=v46[1675 -(909 + 752) ];v122=1225 -(109 + 1114) ;end if (v122==(5 -2)) then v47=v46[26];v37=4 + 5 ;break;end if (v122==(244 -(6 + 236))) then local v279=0 + 0 ;while true do if (v279==(1 + 0)) then v122=6 -3 ;break;end if (v279==(0 -0)) then v47=v46[24];v47[216]=v46[1161 -(1076 + 57) ];v279=1 + 0 ;end end end end end if (v37==(690 -(579 + 110))) then v47=v46[3];v47[v7(""\87\17\33\85\93\3"",""\38\56\119\71"")]=v46[2 + 16 ];v47=v46[4];v47[v7(""\252\233\94\197\32\66"",""\54\147\143\56\182\69"")]=v46[28 + 3 ];v47=v46[5];v47[71 + 61 ]=v46[421 -(174 + 233) ];v47=v46[16 -10 ];v37=2;end if ((10 -4)==v37) then local v133=0 + 0 ;while true do if (v133==(1174 -(663 + 511))) then local v280=0;while true do if (v280==0) then v47=v46[13];v47[v7(""\9\25\84\212\169\102"",""\235\102\127\50\167\204\18"")]=v46[32 + 3 ];v280=1;end if (v280==(1 + 0)) then v133=2 -1 ;break;end end end if (v133==3) then v47=v46[17];v37=5 + 2 ;break;end if (v133==(2 -1)) then v47=v46[15];v47[v7(""\95\167\243\48\65\58"",""\78\48\193\149\67\36"")]=v46[38 -22 ];v133=1 + 1 ;end if (v133==(3 -1)) then local v285=0 + 0 ;while true do if (v285==(1 + 0)) then v133=725 -(478 + 244) ;break;end if (v285==(517 -(440 + 77))) then v47=v46[8 + 8 ];v47[8]=v46[28];v285=3 -2 ;end end end end end if (v37==(1566 -(655 + 901))) then v47=v46[6 + 25 ];v47[31 + 9 ]=v46[19 + 9 ];v47=v46[32];v47[870 -654 ]=v46[1459 -(695 + 750) ];v47=v46[112 -79 ];v47[v7(""\73\74\199\176\243\220"",""\168\38\44\161\195\150"")]=v46[32 -11 ];v47=v46[136 -102 ];v37=362 -(285 + 66) ;end end end if (menuk==1) then START();end break;end if (v16==(2 -1)) then local v36=0;while true do if (v36==0) then function dumb()local v144=1310 -(682 + 628) ;local v145;while true do if (v144==(1 + 1)) then local v286=299 -(176 + 123) ;while true do if (v286==0) then v145[1 + 0 ].value=1384120320;v145[1].freeze=true;v286=1 + 0 ;end if (v286==(270 -(239 + 30))) then gg.addListItems(v145);v144=1 + 2 ;break;end end end if (v144==(4 + 0)) then v145[1]={};v145[1 -0 ].address=p[2 -1 ].address + 4 ;v145[316 -(306 + 9) ].flags=4;v144=5;end if (v144==(3 -2)) then v145[1]={};v145[1].address=p[1 + 0 ].address-(0 + 0) ;v145[1].flags=2 + 2 ;v144=2;end if (v144==(0 -0)) then p=gg.getResults(1378 -(1140 + 235) );if gg.isVisible() then local v322=0;while true do if (v322==2) then os.exit();break;end if (v322==(0 + 0)) then gg.setVisible(false);gg.clearResults(true);v322=1 + 0 ;end if (1==v322) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v322=1 + 1 ;end end end v145={};v144=1;end if (v144==(58 -(33 + 19))) then gg.clearList();gg.clearResults();gg.toast(v7(""\170\243\38\84\238\166\159\245"",""\199\235\144\82\61\152""));break;end if (v144==5) then local v293=0;while true do if ((1 + 0)==v293) then gg.addListItems(v145);v144=6;break;end if (v293==(0 -0)) then v145[1 + 0 ].value= -(1369657367 -671241175);v145[1].freeze=true;v293=1;end end end if (v144==(3 + 0)) then local v294=0;while true do if (v294==(689 -(586 + 103))) then p=gg.getResults(3);if gg.isVisible() then local v406=0 + 0 ;while true do if (v406==(0 -0)) then gg.setVisible(false);gg.clearResults(true);v406=1;end if ((1489 -(1309 + 179))==v406) then local v437=0;while true do if (v437==(1 -0)) then v406=2;break;end if (v437==(0 + 0)) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v437=1;end end end if (v406==(2 + 0)) then os.exit();break;end end end v294=1;end if (v294==1) then v145={};v144=7 -3 ;break;end end end end end function block()local v146=0 -0 ;local v147;local v148;while true do if (v146==(609 -(295 + 314))) then v147=0 -0 ;v148=nil;v146=1963 -(1300 + 662) ;end if (v146==(3 -2)) then while true do if (v147==3) then q=gg.getResults(1763 -(1178 + 577) );if gg.isVisible() then gg.setVisible(false);gg.clearResults(true);print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();os.exit();end v148={};v148[1 + 0 ]={};v148[1].address=q[2].address-(0 -0) ;v148[1].flags=1409 -(851 + 554) ;v147=4 + 0 ;end if (9==v147) then q=gg.getResults(22 -14 );if gg.isVisible() then local v407=0 -0 ;while true do if ((304 -(115 + 187))==v407) then os.exit();break;end if (v407==(0 + 0)) then gg.setVisible(false);gg.clearResults(true);v407=1 + 0 ;end if (v407==(3 -2)) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v407=2;end end end v148={};v148[1]={};v148[1162 -(160 + 1001) ].address=q[4 + 0 ].address-(0 + 0) ;v148[1 -0 ].flags=362 -(237 + 121) ;v147=907 -(525 + 372) ;end if (v147==(1 -0)) then local v369=0 -0 ;while true do if (v369==(145 -(96 + 46))) then v147=2;break;end if ((778 -(643 + 134))==v369) then gg.addListItems(v148);q=gg.getResults(4 + 5 );v369=4 -2 ;end if (v369==2) then if gg.isVisible() then local v438=0;while true do if (1==v438) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v438=2;end if (v438==2) then os.exit();break;end if (v438==0) then gg.setVisible(false);gg.clearResults(true);v438=1 + 0 ;end end end v148={};v369=5 -2 ;end if (v369==(0 -0)) then v148[1].value=3573751839;v148[720 -(316 + 403) ].freeze=true;v369=1;end end end if (v147==0) then q=gg.getResults(6 + 2 );if gg.isVisible() then gg.setVisible(false);gg.clearResults(true);print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();os.exit();end v148={};v148[1 + 0 ]={};v148[2 -1 ].address=q[1 + 0 ].address-(0 + 0) ;v148[3 -2 ].flags=19 -15 ;v147=1 -0 ;end if (v147==12) then gg.clearList();gg.clearResults();break;end if (v147==(1 + 4)) then v148[1]={};v148[1 -0 ].address=q[1 + 1 ].address + (11 -7) ;v148[18 -(12 + 5) ].flags=4;v148[3 -2 ].value=3596551104;v148[1].freeze=true;gg.addListItems(v148);v147=12 -6 ;end if (v147==7) then v148[1].value=3573751839;v148[1 -0 ].freeze=true;gg.addListItems(v148);q=gg.getResults(19 -11 );if gg.isVisible() then local v408=0;while true do if (v408==(1 + 1)) then os.exit();break;end if (1==v408) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v408=2;end if (v408==(1973 -(1656 + 317))) then gg.setVisible(false);gg.clearResults(true);v408=1;end end end v148={};v147=8;end if (v147==6) then q=gg.getResults(8 + 0 );if gg.isVisible() then gg.setVisible(false);gg.clearResults(true);print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();os.exit();end v148={};v148[2 -1 ]={};v148[4 -3 ].address=q[3].address-(354 -(5 + 349)) ;v148[4 -3 ].flags=4;v147=7;end if (v147==(1281 -(266 + 1005))) then local v383=0 + 0 ;while true do if (v383==(10 -7)) then v147=11;break;end if (v383==(1 -0)) then gg.addListItems(v148);q=gg.getResults(1704 -(561 + 1135) );v383=2;end if (v383==(0 -0)) then v148[3 -2 ].value=3573752905 -(507 + 559) ;v148[2 -1 ].freeze=true;v383=3 -2 ;end if (v383==(390 -(212 + 176))) then if gg.isVisible() then local v439=0;while true do if (v439==1) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v439=2;end if (v439==(5 -3)) then os.exit();break;end if (v439==(0 -0)) then gg.setVisible(false);gg.clearResults(true);v439=1;end end end v148={};v383=4 -1 ;end end end if (v147==(1967 -(1869 + 87))) then local v384=0 -0 ;while true do if (3==v384) then v147=1913 -(484 + 1417) ;break;end if (v384==2) then local v421=0 -0 ;while true do if (v421==0) then v148[1 -0 ].freeze=true;gg.addListItems(v148);v421=1;end if (v421==(774 -(48 + 725))) then v384=4 -1 ;break;end end end if (v384==(0 -0)) then v148[1 + 0 ]={};v148[1].address=q[10 -6 ].address + 4 ;v384=1 + 0 ;end if (v384==1) then v148[1].flags=2 + 2 ;v148[1].value=3596551957 -(152 + 701) ;v384=1313 -(430 + 881) ;end end end if (v147==(2 + 2)) then v148[1].value=3573751839;v148[896 -(557 + 338) ].freeze=true;gg.addListItems(v148);q=gg.getResults(8);if gg.isVisible() then local v409=0 + 0 ;while true do if (v409==(5 -3)) then os.exit();break;end if ((0 -0)==v409) then gg.setVisible(false);gg.clearResults(true);v409=2 -1 ;end if (v409==(2 -1)) then local v440=801 -(499 + 302) ;while true do if ((867 -(39 + 827))==v440) then v409=5 -3 ;break;end if (v440==(0 -0)) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v440=1 -0 ;end end end end end v148={};v147=1 + 4 ;end if ((5 -3)==v147) then v148[1 + 0 ]={};v148[1 -0 ].address=q[105 -(103 + 1) ].address + (558 -(475 + 79)) ;v148[2 -1 ].flags=4;v148[3 -2 ].value=4302266161 -705715057 ;v148[1].freeze=true;gg.addListItems(v148);v147=14 -11 ;end if (v147==(22 -14)) then v148[944 -(533 + 410) ]={};v148[1].address=q[3].address + 2 + 2 ;v148[1].flags=323 -(27 + 292) ;v148[1].value=3476428979 -  -120122125 ;v148[1 -0 ].freeze=true;gg.addListItems(v148);v147=9;end end break;end end end v36=1;end if (v36==1) then function wn()p=gg.getResults(3);if gg.isVisible() then gg.setVisible(false);gg.clearResults(true);print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();os.exit();end local v149={};v149[1 -0 ]={};v149[1 -0 ].address=p[3].address + 0 ;v149[140 -(43 + 96) ].flags=16 -12 ;v149[1].value=2178216032 -794095712 ;v149[1 + 0 ].freeze=true;gg.addListItems(v149);gg.clearList();p=gg.getResults(1 + 2 );if gg.isVisible() then gg.setVisible(false);gg.clearResults(true);print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();os.exit();end local v149={};v149[1]={};v149[1 + 0 ].address=p[5 -2 ].address + 2 + 2 ;v149[1 + 0 ].flags=1755 -(1414 + 337) ;v149[1].value= -(698418132 -(1642 + 298));v149[1].freeze=true;gg.addListItems(v149);p=gg.getResults(7 -4 );if gg.isVisible() then local v173=0;local v174;while true do if (v173==(0 -0)) then v174=0;while true do if (v174==0) then gg.setVisible(false);gg.clearResults(true);v174=2 -1 ;end if (v174==(1 + 0)) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v174=2;end if (v174==(974 -(357 + 615))) then os.exit();break;end end break;end end end local v149={};v149[1 + 0 ]={};v149[1].address=p[2].address + (0 -0) ;v149[1 + 0 ].flags=8 -4 ;v149[1].value=1384120352;v149[1 + 0 ].freeze=true;gg.addListItems(v149);gg.clearList();p=gg.getResults(1 + 2 );if gg.isVisible() then local v175=0 + 0 ;local v176;while true do if (v175==(1301 -(384 + 917))) then v176=0;while true do if (1==v176) then local v410=697 -(128 + 569) ;local v411;while true do if (v410==0) then v411=0;while true do if (1==v411) then v176=2;break;end if (v411==(1543 -(1407 + 136))) then local v461=1887 -(687 + 1200) ;while true do if (v461==1) then v411=1711 -(556 + 1154) ;break;end if (v461==(0 -0)) then print({os.date(""Don't Try to see values. I'm still watching you %X [%p]\n"")});gg.clearList();v461=1;end end end end break;end end end if (v176==2) then os.exit();break;end if (v176==(421 -(275 + 146))) then local v412=0 + 0 ;while true do if (v412==0) then local v441=64 -(29 + 35) ;while true do if (v441==(0 -0)) then gg.setVisible(false);gg.clearResults(true);v441=2 -1 ;end if (v441==1) then v412=4 -3 ;break;end end end if (v412==(1 + 0)) then v176=1;break;end end end end break;end end end local v149={};v149[1]={};v149[1013 -(53 + 959) ].address=p[2].address + (412 -(312 + 96)) ;v149[1].flags=4;v149[1].value= -698416192;v149[1 -0 ].freeze=true;gg.addListItems(v149);gg.clearList();gg.clearResults();gg.toast(v7(""\38\21\173\34\17\23\173\46"",""\75\103\118\217""));end v16=287 -(147 + 138) ;break;end end end if (v16==(899 -(813 + 86))) then if gg.isVisible(true) then local v50=0 + 0 ;while true do if (v50==0) then menuk=1 -0 ;gg.setVisible(false);break;end end end START=1;function START()local v48=492 -(18 + 474) ;local v49;while true do if (v48==(0 + 0)) then v49=0;while true do if ((0 -0)==v49) then menu=gg.choice({v7(""\38\175\134\53\153\39\180\142\58\192"",""\185\98\218\235\87""),v7(""\226\50\52\242\223\164\223\124\16\239\208"",""\202\171\92\71\134\190""),v7(""\26\209\41\141\45\129\3\134"",""\232\73\161\76""),v7(""\136\201\71\88\26\251\246\68\91"",""\126\219\185\34\61""),v7(""\41\214\87\102"",""\135\108\174\62\18\30\23\147"")},nil,v7(""\155\236\36\222\88\134\50\196\189"",""\167\214\137\74\171\120\206\83""));if (menu==1) then local v323=0 + 0 ;local v324;while true do if (v323==(1240 -(988 + 252))) then v324=0;while true do if (v324==1) then pointer1();dumb();break;end if (v324==0) then pointer();block();v324=1;end end break;end end end v49=1 + 0 ;end if (v49==(1 + 0)) then local v295=1970 -(49 + 1921) ;while true do if (v295==(891 -(223 + 667))) then v49=54 -(51 + 1) ;break;end if (v295==(0 -0)) then local v397=0 -0 ;while true do if (1==v397) then v295=1126 -(146 + 979) ;break;end if ((0 + 0)==v397) then if (menu==2) then pointer();block();pointer1();wn();end if (menu==3) then ch6();end v397=606 -(311 + 294) ;end end end end end if (v49==2) then if (menu==4) then ch5();end if (menu==(13 -8)) then local v325=0 + 0 ;while true do if (1==v325) then gg.clearList();os.exit();break;end if (v325==(1443 -(496 + 947))) then print(""Thank You For Using My Hack \n Youtube Channel : Zerras Official"");gg.clearResults();v325=1359 -(1233 + 125) ;end end end v49=2 + 1 ;end if (v49==(3 + 0)) then if (menu==nil) then else end menuk= -(1 + 0);break;end end break;end end end v16=1646 -(963 + 682) ;end end end"
kXGD8AzY,CSE115 Hangman,BlackBoltRakin,C,Saturday 14th of October 2023 09:14:10 PM CDT,"#include <stdio.h>

int main(){
    int life=10,flag=0;
    char secword[50],guess;
    printf(""Enter the secret word: "");
    scanf(""%s"",secword);
    
    while (life>0){
        for (int i=0;secword[i]!='\0';i++){
            if (secword[i]!='_')
                break;
            else{
                flag = -1;
                printf(""Let's hangout, man!!! :D"");
            }
        }

        if (flag!=-1){
            printf(""Enter a guessing letter: "");
            scanf("" %c"",&guess);

            for (int j=0;secword[j]!='\0';j++){
                if (secword[j]==guess){
                    flag = 1;
                    break;
                    secword[j]== '_';
                }
                else
                    flag = 0;
            }

            if (flag==1)
                printf(""Correct Guess!!\n"");
            else{
                life--;
                if (life>0)
                    printf(""Wrong Guess. Remaining Lives = %d\n"",life);
                else
                    printf(""Let's hang, man!!! :D"");
            }
        }
    }
}"
dE8CiXNT,Untitled,Ibnballo,Ruby,Saturday 14th of October 2023 08:11:25 PM CDT,"def aping_bpong
  (1..100).each do |nums|
    if nums % 15 == 0
      puts 'APINGBPONG'
    elsif nums % 5 == 0
      puts 'BPONG'
    elsif nums % 3 == 0
      puts 'APONG'
    else
      puts nums
    end
  end
end"
HDVKrtgg,2023-10-14_stats.json,rdp_snitch,JSON,Saturday 14th of October 2023 07:18:04 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 9,
    ""201.149.47.84"": 3,
    ""193.142.147.9"": 9,
    ""141.98.11.35"": 18,
    ""173.239.240.22"": 3,
    ""198.235.24.66"": 9,
    ""141.98.11.128"": 18,
    ""87.251.75.145"": 3,
    ""141.98.81.39"": 6,
    ""185.170.144.3"": 6,
    ""62.204.41.145"": 6,
    ""58.218.204.183"": 9,
    ""87.251.75.120"": 3,
    ""45.143.201.62"": 15,
    ""198.235.24.69"": 9,
    ""45.140.17.16"": 3,
    ""94.232.41.205"": 3,
    ""152.89.198.133"": 6,
    ""62.122.184.165"": 6,
    ""89.248.170.88"": 6,
    ""101.36.106.136"": 3,
    ""198.235.24.136"": 9,
    ""87.251.75.64"": 3,
    ""172.188.48.214"": 3,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""198.235.24.166"": 9,
    ""103.101.203.159"": 3,
    ""111.61.253.55"": 3,
    ""106.116.169.71"": 3
  },
  ""asn"": {
    ""AS208046"": 18,
    ""AS14178"": 3,
    ""AS209605"": 36,
    ""AS396356"": 3,
    ""AS396982"": 36,
    ""AS208091"": 12,
    ""AS209588"": 6,
    ""AS197414"": 6,
    ""AS59425"": 6,
    ""AS4134"": 12,
    ""AS210950"": 15,
    ""AS198953"": 3,
    ""AS57523"": 36,
    ""AS202425"": 6,
    ""AS135377"": 3,
    ""AS8075"": 3,
    ""AS36007"": 3,
    ""AS24547"": 3
  },
  ""isp"": {
    ""ColocationX Ltd."": 18,
    ""Megacable Comunicaciones de Mexico, S.A. de C.V."": 3,
    ""UAB Host Baltic"": 36,
    ""LogicWeb Inc."": 3,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 18,
    ""Flyservers S.A."": 6,
    ""Horizon LLC"": 6,
    ""Chinanet"": 12,
    ""TOV E-RISHENNYA"": 15,
    ""Proton66 OOO"": 3,
    ""Chang Way Technologies Co. Limited"": 36,
    ""IP Volume inc"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Microsoft"": 3,
    ""Kamatera, Inc."": 3,
    ""China Mobile communications corporation"": 3
  },
  ""org"": {
    ""ColocationX Ltd"": 9,
    ""Megacable Comunicaciones de Mexico, S.A. de C.V"": 3,
    ""x33 Networks IBC"": 9,
    ""Unknown"": 39,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 9,
    ""Flyservers S.A"": 6,
    ""Xhostis"": 6,
    ""Horizon LLC"": 6,
    ""Chinanet JS"": 9,
    ""TOV VAIZ PARTNER"": 15,
    ""Proton66 LLC"": 3,
    ""Dmitriy Panchenko"": 3,
    ""Starcrecium Limited"": 6,
    ""Chang Way Technologies Co. Limited"": 30,
    ""Quasi Networks LTD."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Microsoft Azure Cloud (southeastasia)"": 3,
    ""Cloud Web Manage"": 3,
    ""China Mobile"": 3,
    ""Chinanet HE"": 3
  },
  ""regionName"": {
    ""North Holland"": 21,
    ""Mexico City"": 3,
    ""English River"": 9,
    ""Kaunas"": 36,
    ""New Jersey"": 3,
    ""California"": 36,
    ""England"": 9,
    ""Drenthe"": 6,
    ""Moscow"": 45,
    ""Jiangsu"": 9,
    ""Kyiv City"": 15,
    ""Perm Krai"": 3,
    ""Central and Western District"": 3,
    ""Central Singapore"": 3,
    ""Illinois"": 3,
    ""Hebei"": 6
  },
  ""country"": {
    ""Netherlands"": 27,
    ""Mexico"": 3,
    ""Seychelles"": 9,
    ""Lithuania"": 36,
    ""United States"": 42,
    ""United Kingdom"": 9,
    ""Russia"": 48,
    ""China"": 15,
    ""Ukraine"": 15,
    ""Hong Kong"": 3,
    ""Singapore"": 3
  },
  ""account"": {
    ""Domain"": 60,
    ""(empty)"": 12,
    ""devel"": 18,
    ""CjcKOk"": 3,
    ""lEAuMqZsb"": 3,
    ""JvSuPq"": 3,
    ""Administr"": 60,
    ""hello"": 21,
    ""pHhWgoEYE"": 3,
    ""tKPeNO"": 3,
    ""oAarrF"": 3,
    ""Administrator"": 3,
    ""otjXLhoEr"": 3,
    ""dWqqxr"": 3,
    ""PGSQQt"": 3,
    ""YcGDTJHtC"": 3,
    ""vjAOGZ"": 3,
    ""wYufmL"": 3
  },
  ""keyboard"": {
    ""Unknown"": 210
  },
  ""client_build"": {
    ""Unknown"": 210
  },
  ""client_name"": {
    ""Unknown"": 210
  },
  ""ip_type"": {
    ""Unknown"": 156,
    ""proxy"": 9,
    ""hosting"": 42,
    ""mobile"": 3
  }
}"
u3rip5Zn,2023-10-14_stats.json,rdp_snitch,JSON,Saturday 14th of October 2023 07:16:11 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 6,
    ""201.149.47.84"": 2,
    ""193.142.147.9"": 6,
    ""141.98.11.35"": 12,
    ""173.239.240.22"": 2,
    ""198.235.24.66"": 6,
    ""141.98.11.128"": 12,
    ""87.251.75.145"": 2,
    ""141.98.81.39"": 4,
    ""185.170.144.3"": 4,
    ""62.204.41.145"": 4,
    ""58.218.204.183"": 6,
    ""87.251.75.120"": 2,
    ""45.143.201.62"": 10,
    ""198.235.24.69"": 6,
    ""45.140.17.16"": 2,
    ""94.232.41.205"": 2,
    ""152.89.198.133"": 4,
    ""62.122.184.165"": 4,
    ""89.248.170.88"": 4,
    ""101.36.106.136"": 2,
    ""198.235.24.136"": 6,
    ""87.251.75.64"": 2,
    ""172.188.48.214"": 2,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""198.235.24.166"": 6,
    ""103.101.203.159"": 2,
    ""111.61.253.55"": 2,
    ""106.116.169.71"": 2
  },
  ""asn"": {
    ""AS208046"": 12,
    ""AS14178"": 2,
    ""AS209605"": 24,
    ""AS396356"": 2,
    ""AS396982"": 24,
    ""AS208091"": 8,
    ""AS209588"": 4,
    ""AS197414"": 4,
    ""AS59425"": 4,
    ""AS4134"": 8,
    ""AS210950"": 10,
    ""AS198953"": 2,
    ""AS57523"": 24,
    ""AS202425"": 4,
    ""AS135377"": 2,
    ""AS8075"": 2,
    ""AS36007"": 2,
    ""AS24547"": 2
  },
  ""isp"": {
    ""ColocationX Ltd."": 12,
    ""Megacable Comunicaciones de Mexico, S.A. de C.V."": 2,
    ""UAB Host Baltic"": 24,
    ""LogicWeb Inc."": 2,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 12,
    ""Flyservers S.A."": 4,
    ""Horizon LLC"": 4,
    ""Chinanet"": 8,
    ""TOV E-RISHENNYA"": 10,
    ""Proton66 OOO"": 2,
    ""Chang Way Technologies Co. Limited"": 24,
    ""IP Volume inc"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Microsoft"": 2,
    ""Kamatera, Inc."": 2,
    ""China Mobile communications corporation"": 2
  },
  ""org"": {
    ""ColocationX Ltd"": 6,
    ""Megacable Comunicaciones de Mexico, S.A. de C.V"": 2,
    ""x33 Networks IBC"": 6,
    ""Unknown"": 26,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 6,
    ""Flyservers S.A"": 4,
    ""Xhostis"": 4,
    ""Horizon LLC"": 4,
    ""Chinanet JS"": 6,
    ""TOV VAIZ PARTNER"": 10,
    ""Proton66 LLC"": 2,
    ""Dmitriy Panchenko"": 2,
    ""Starcrecium Limited"": 4,
    ""Chang Way Technologies Co. Limited"": 20,
    ""Quasi Networks LTD."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Microsoft Azure Cloud (southeastasia)"": 2,
    ""Cloud Web Manage"": 2,
    ""China Mobile"": 2,
    ""Chinanet HE"": 2
  },
  ""regionName"": {
    ""North Holland"": 14,
    ""Mexico City"": 2,
    ""English River"": 6,
    ""Kaunas"": 24,
    ""New Jersey"": 2,
    ""California"": 24,
    ""England"": 6,
    ""Drenthe"": 4,
    ""Moscow"": 30,
    ""Jiangsu"": 6,
    ""Kyiv City"": 10,
    ""Perm Krai"": 2,
    ""Central and Western District"": 2,
    ""Central Singapore"": 2,
    ""Illinois"": 2,
    ""Hebei"": 4
  },
  ""country"": {
    ""Netherlands"": 18,
    ""Mexico"": 2,
    ""Seychelles"": 6,
    ""Lithuania"": 24,
    ""United States"": 28,
    ""United Kingdom"": 6,
    ""Russia"": 32,
    ""China"": 10,
    ""Ukraine"": 10,
    ""Hong Kong"": 2,
    ""Singapore"": 2
  },
  ""account"": {
    ""Domain"": 40,
    ""(empty)"": 8,
    ""devel"": 12,
    ""CjcKOk"": 2,
    ""lEAuMqZsb"": 2,
    ""JvSuPq"": 2,
    ""Administr"": 40,
    ""hello"": 14,
    ""pHhWgoEYE"": 2,
    ""tKPeNO"": 2,
    ""oAarrF"": 2,
    ""Administrator"": 2,
    ""otjXLhoEr"": 2,
    ""dWqqxr"": 2,
    ""PGSQQt"": 2,
    ""YcGDTJHtC"": 2,
    ""vjAOGZ"": 2,
    ""wYufmL"": 2
  },
  ""keyboard"": {
    ""Unknown"": 140
  },
  ""client_build"": {
    ""Unknown"": 140
  },
  ""client_name"": {
    ""Unknown"": 140
  },
  ""ip_type"": {
    ""Unknown"": 104,
    ""proxy"": 6,
    ""hosting"": 28,
    ""mobile"": 2
  }
}"
2A7N86Ln,2023-10-14_stats.json,rdp_snitch,JSON,Saturday 14th of October 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""193.142.146.17"": 3,
    ""201.149.47.84"": 1,
    ""193.142.147.9"": 3,
    ""141.98.11.35"": 6,
    ""173.239.240.22"": 1,
    ""198.235.24.66"": 3,
    ""141.98.11.128"": 6,
    ""87.251.75.145"": 1,
    ""141.98.81.39"": 2,
    ""185.170.144.3"": 2,
    ""62.204.41.145"": 2,
    ""58.218.204.183"": 3,
    ""87.251.75.120"": 1,
    ""45.143.201.62"": 5,
    ""198.235.24.69"": 3,
    ""45.140.17.16"": 1,
    ""94.232.41.205"": 1,
    ""152.89.198.133"": 2,
    ""62.122.184.165"": 2,
    ""89.248.170.88"": 2,
    ""101.36.106.136"": 1,
    ""198.235.24.136"": 3,
    ""87.251.75.64"": 1,
    ""172.188.48.214"": 1,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""198.235.24.166"": 3,
    ""103.101.203.159"": 1,
    ""111.61.253.55"": 1,
    ""106.116.169.71"": 1
  },
  ""asn"": {
    ""AS208046"": 6,
    ""AS14178"": 1,
    ""AS209605"": 12,
    ""AS396356"": 1,
    ""AS396982"": 12,
    ""AS208091"": 4,
    ""AS209588"": 2,
    ""AS197414"": 2,
    ""AS59425"": 2,
    ""AS4134"": 4,
    ""AS210950"": 5,
    ""AS198953"": 1,
    ""AS57523"": 12,
    ""AS202425"": 2,
    ""AS135377"": 1,
    ""AS8075"": 1,
    ""AS36007"": 1,
    ""AS24547"": 1
  },
  ""isp"": {
    ""ColocationX Ltd."": 6,
    ""Megacable Comunicaciones de Mexico, S.A. de C.V."": 1,
    ""UAB Host Baltic"": 12,
    ""LogicWeb Inc."": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 6,
    ""Flyservers S.A."": 2,
    ""Horizon LLC"": 2,
    ""Chinanet"": 4,
    ""TOV E-RISHENNYA"": 5,
    ""Proton66 OOO"": 1,
    ""Chang Way Technologies Co. Limited"": 12,
    ""IP Volume inc"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Microsoft"": 1,
    ""Kamatera, Inc."": 1,
    ""China Mobile communications corporation"": 1
  },
  ""org"": {
    ""ColocationX Ltd"": 3,
    ""Megacable Comunicaciones de Mexico, S.A. de C.V"": 1,
    ""x33 Networks IBC"": 3,
    ""Unknown"": 13,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 3,
    ""Flyservers S.A"": 2,
    ""Xhostis"": 2,
    ""Horizon LLC"": 2,
    ""Chinanet JS"": 3,
    ""TOV VAIZ PARTNER"": 5,
    ""Proton66 LLC"": 1,
    ""Dmitriy Panchenko"": 1,
    ""Starcrecium Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 10,
    ""Quasi Networks LTD."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Microsoft Azure Cloud (southeastasia)"": 1,
    ""Cloud Web Manage"": 1,
    ""China Mobile"": 1,
    ""Chinanet HE"": 1
  },
  ""regionName"": {
    ""North Holland"": 7,
    ""Mexico City"": 1,
    ""English River"": 3,
    ""Kaunas"": 12,
    ""New Jersey"": 1,
    ""California"": 12,
    ""England"": 3,
    ""Drenthe"": 2,
    ""Moscow"": 15,
    ""Jiangsu"": 3,
    ""Kyiv City"": 5,
    ""Perm Krai"": 1,
    ""Central and Western District"": 1,
    ""Central Singapore"": 1,
    ""Illinois"": 1,
    ""Hebei"": 2
  },
  ""country"": {
    ""Netherlands"": 9,
    ""Mexico"": 1,
    ""Seychelles"": 3,
    ""Lithuania"": 12,
    ""United States"": 14,
    ""United Kingdom"": 3,
    ""Russia"": 16,
    ""China"": 5,
    ""Ukraine"": 5,
    ""Hong Kong"": 1,
    ""Singapore"": 1
  },
  ""account"": {
    ""Domain"": 20,
    ""(empty)"": 4,
    ""devel"": 6,
    ""CjcKOk"": 1,
    ""lEAuMqZsb"": 1,
    ""JvSuPq"": 1,
    ""Administr"": 20,
    ""hello"": 7,
    ""pHhWgoEYE"": 1,
    ""tKPeNO"": 1,
    ""oAarrF"": 1,
    ""Administrator"": 1,
    ""otjXLhoEr"": 1,
    ""dWqqxr"": 1,
    ""PGSQQt"": 1,
    ""YcGDTJHtC"": 1,
    ""vjAOGZ"": 1,
    ""wYufmL"": 1
  },
  ""keyboard"": {
    ""Unknown"": 70
  },
  ""client_build"": {
    ""Unknown"": 70
  },
  ""client_name"": {
    ""Unknown"": 70
  },
  ""ip_type"": {
    ""Unknown"": 52,
    ""proxy"": 3,
    ""hosting"": 14,
    ""mobile"": 1
  }
}"
Db5Lmya6,Untitled,azatris,HTML,Saturday 14th of October 2023 06:56:53 PM CDT,"      <h1>Privacy Policy</h1>

      <p>At Product Vision Aligner, accessible from https://apps.shopify.com/b1b12e4900a1e82a027841f70262d7e2, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Product Vision Aligner and how we use it.</p>

      <p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.</p>

      <h2>Log Files</h2>

      <p>Product Vision Aligner follows a standard procedure of using log files. These files log visitors when they visit website or apps. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website or app, and gathering demographic information.</p>

      <h2>Cookies and Web Beacons</h2>

      <p>Like any other website or app, Product Vision Aligner uses ""cookies"". These cookies are used to store information including visitors' preferences, and the pages on the website or app that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.</p>

      <h2>Privacy Policies</h2>

      <p>You may consult this list to find the Privacy Policy for each of the advertising partners of Product Vision Aligner.</p>

      <p>Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Product Vision Aligner, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on website or apps that you visit.</p>

      <p>Note that Product Vision Aligner has no access to or control over these cookies that are used by third-party advertisers.</p>

      <h2>Third Party Privacy Policies</h2>

      <p>Product Vision Aligner's Privacy Policy does not apply to other advertisers or website or apps. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. </p>

      <p>You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective website or apps. What Are Cookies?</p>

      <h2>Children's Information</h2>

      <p>Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.</p>

      <p>Product Vision Aligner does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website or app, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.</p>

      <h2>Online Privacy Policy Only</h2>

      <p>This Privacy Policy applies only to our online activities and is valid for visitors to our website or app with regards to the information that they shared and/or collect in Product Vision Aligner. This policy is not applicable to any information collected offline or via channels other than this website or app.</p>

      <h2>Consent</h2>

      <p>By using our website or app, you hereby consent to our Privacy Policy and agree to its Terms and Conditions.</p>"
bHucRm48,LeetCode 567 - Permutation in String - NeetCode solution,nathanwailes,Python,Saturday 14th of October 2023 06:03:15 PM CDT,"class Solution:
    def checkInclusion(self, s1: str, s2: str) -> bool:
        if len(s1) > len(s2): return False

        s1Count, s2Count = [0] * 26, [0] * 26
        for i in range(len(s1)):
            s1Count[ord(s1[i]) - ord('a')] += 1
            s2Count[ord(s2[i]) - ord('a')] += 1
        
        matches = 0
        for i in range(26):
            matches += (1 if s1Count[i] == s2Count[i] else 0)
        
        l = 0
        for r in range(len(s1), len(s2)):
            if matches == 26: return True

            index = ord(s2[r]) - ord('a')
            s2Count[index] += 1
            if s1Count[index] == s2Count[index]:
                matches += 1
            elif s1Count[index] + 1 == s2Count[index]:
                matches -= 1
            
            index = ord(s2[l]) - ord('a')
            s2Count[index] -= 1
            if s1Count[index] == s2Count[index]:
                matches += 1
            elif s1Count[index] - 1 == s2Count[index]:
                matches -= 1
            l += 1
        return matches == 26
"
GvP0gd2U,Untitled,abstract_abstract,C++,Saturday 14th of October 2023 05:27:05 PM CDT,"#include <mutex>

class Letter {
  public:
  enum class Type {
    E_A_UPPER_CASE,
    E_B_UPPER_CASE,
    E_C_UPPER_CASE,
    E_D_UPPER_CASE,
    E_E_UPPER_CASE,
    E_F_UPPER_CASE,
    E_G_UPPER_CASE,
    E_H_UPPER_CASE,
    E_I_UPPER_CASE,
    E_J_UPPER_CASE,
    E_K_UPPER_CASE,
    E_L_UPPER_CASE,
    E_M_UPPER_CASE,
    E_N_UPPER_CASE,
    E_O_UPPER_CASE,
    E_P_UPPER_CASE,
    E_Q_UPPER_CASE,
    E_R_UPPER_CASE,
    E_S_UPPER_CASE,
    E_T_UPPER_CASE,
    E_U_UPPER_CASE,
    E_V_UPPER_CASE,
    E_W_UPPER_CASE,
    E_X_UPPER_CASE,
    E_Y_UPPER_CASE,
    E_Z_UPPER_CASE,
    E_A_LOWER_CASE,
    E_B_LOWER_CASE,
    E_C_LOWER_CASE,
    E_D_LOWER_CASE,
    E_E_LOWER_CASE,
    E_F_LOWER_CASE,
    E_G_LOWER_CASE,
    E_H_LOWER_CASE,
    E_I_LOWER_CASE,
    E_J_LOWER_CASE,
    E_K_LOWER_CASE,
    E_L_LOWER_CASE,
    E_M_LOWER_CASE,
    E_N_LOWER_CASE,
    E_O_LOWER_CASE,
    E_P_LOWER_CASE,
    E_Q_LOWER_CASE,
    E_R_LOWER_CASE,
    E_S_LOWER_CASE,
    E_T_LOWER_CASE,
    E_U_LOWER_CASE,
    E_V_LOWER_CASE,
    E_W_LOWER_CASE,
    E_X_LOWER_CASE,
    E_Y_LOWER_CASE,
    E_Z_LOWER_CASE,
    E_SPACE,
    E_QUESTIONMARK,
    E_FULLSTOP,
    E_COMMA
  };
private:
  Type type;
public:
  
  Letter(Type t){
    type = t;
  }
  Letter( std::string fromStr )
  {
    if(fromStr.length()!=1) throw std::exception();
    if(fromStr==""A"") type = Type::E_A_UPPER_CASE;
    if(fromStr==""B"") type = Type::E_B_UPPER_CASE;
    if(fromStr==""C"") type = Type::E_C_UPPER_CASE;
    if(fromStr==""D"") type = Type::E_D_UPPER_CASE;
    if(fromStr==""E"") type = Type::E_E_UPPER_CASE;
    if(fromStr==""F"") type = Type::E_F_UPPER_CASE;
    if(fromStr==""G"") type = Type::E_G_UPPER_CASE;
    if(fromStr==""H"") type = Type::E_H_UPPER_CASE;
    if(fromStr==""I"") type = Type::E_I_UPPER_CASE;
    if(fromStr==""J"") type = Type::E_J_UPPER_CASE;
    if(fromStr==""K"") type = Type::E_K_UPPER_CASE;
    if(fromStr==""L"") type = Type::E_L_UPPER_CASE;
    if(fromStr==""M"") type = Type::E_M_UPPER_CASE;
    if(fromStr==""N"") type = Type::E_N_UPPER_CASE;
    if(fromStr==""O"") type = Type::E_O_UPPER_CASE;
    if(fromStr==""P"") type = Type::E_P_UPPER_CASE;
    if(fromStr==""Q"") type = Type::E_Q_UPPER_CASE;
    if(fromStr==""R"") type = Type::E_R_UPPER_CASE;
    if(fromStr==""S"") type = Type::E_S_UPPER_CASE;
    if(fromStr==""T"") type = Type::E_T_UPPER_CASE;
    if(fromStr==""U"") type = Type::E_U_UPPER_CASE;
    if(fromStr==""V"") type = Type::E_V_UPPER_CASE;
    if(fromStr==""W"") type = Type::E_W_UPPER_CASE;
    if(fromStr==""X"") type = Type::E_X_UPPER_CASE;
    if(fromStr==""Y"") type = Type::E_Y_UPPER_CASE;
    if(fromStr==""Z"") type = Type::E_Z_UPPER_CASE;
    if(fromStr==""a"") type = Type::E_A_LOWER_CASE;
    if(fromStr==""b"") type = Type::E_B_LOWER_CASE;
    if(fromStr==""c"") type = Type::E_C_LOWER_CASE;
    if(fromStr==""d"") type = Type::E_D_LOWER_CASE;
    if(fromStr==""e"") type = Type::E_E_LOWER_CASE;
    if(fromStr==""f"") type = Type::E_F_LOWER_CASE;
    if(fromStr==""g"") type = Type::E_G_LOWER_CASE;
    if(fromStr==""h"") type = Type::E_H_LOWER_CASE;
    if(fromStr==""i"") type = Type::E_I_LOWER_CASE;
    if(fromStr==""j"") type = Type::E_J_LOWER_CASE;
    if(fromStr==""k"") type = Type::E_K_LOWER_CASE;
    if(fromStr==""l"") type = Type::E_L_LOWER_CASE;
    if(fromStr==""m"") type = Type::E_M_LOWER_CASE;
    if(fromStr==""n"") type = Type::E_N_LOWER_CASE;
    if(fromStr==""o"") type = Type::E_O_LOWER_CASE;
    if(fromStr==""p"") type = Type::E_P_LOWER_CASE;
    if(fromStr==""q"") type = Type::E_Q_LOWER_CASE;
    if(fromStr==""r"") type = Type::E_R_LOWER_CASE;
    if(fromStr==""s"") type = Type::E_S_LOWER_CASE;
    if(fromStr==""t"") type = Type::E_T_LOWER_CASE;
    if(fromStr==""u"") type = Type::E_U_LOWER_CASE;
    if(fromStr==""v"") type = Type::E_V_LOWER_CASE;
    if(fromStr==""w"") type = Type::E_W_LOWER_CASE;
    if(fromStr==""x"") type = Type::E_X_LOWER_CASE;
    if(fromStr==""y"") type = Type::E_Y_LOWER_CASE;
    if(fromStr==""z"") type = Type::E_Z_LOWER_CASE;
    if(fromStr=="" "") type = Type::E_SPACE;
    if(fromStr==""?"") type = Type::E_QUESTIONMARK;
    if(fromStr==""."") type = Type::E_FULLSTOP;
    if(fromStr=="","") type = Type::E_COMMA;
    
    *this = Letter(type);
  }
  
  std::string toString() const {
    std::string ret;
    switch(type) {
        case Type::E_A_UPPER_CASE: ret.push_back('A'); break;
        case Type::E_B_UPPER_CASE: ret.push_back('B'); break;
        case Type::E_C_UPPER_CASE: ret.push_back('C'); break;
        case Type::E_D_UPPER_CASE: ret.push_back('D'); break;
        case Type::E_E_UPPER_CASE: ret.push_back('E'); break;
        case Type::E_F_UPPER_CASE: ret.push_back('F'); break;
        case Type::E_G_UPPER_CASE: ret.push_back('G'); break;
        case Type::E_H_UPPER_CASE: ret.push_back('H'); break;
        case Type::E_I_UPPER_CASE: ret.push_back('I'); break;
        case Type::E_J_UPPER_CASE: ret.push_back('J'); break;
        case Type::E_K_UPPER_CASE: ret.push_back('K'); break;
        case Type::E_L_UPPER_CASE: ret.push_back('L'); break;
        case Type::E_M_UPPER_CASE: ret.push_back('M'); break;
        case Type::E_N_UPPER_CASE: ret.push_back('N'); break;
        case Type::E_O_UPPER_CASE: ret.push_back('O'); break;
        case Type::E_P_UPPER_CASE: ret.push_back('P'); break;
        case Type::E_Q_UPPER_CASE: ret.push_back('Q'); break;
        case Type::E_R_UPPER_CASE: ret.push_back('R'); break;
        case Type::E_S_UPPER_CASE: ret.push_back('S'); break;
        case Type::E_T_UPPER_CASE: ret.push_back('T'); break;
        case Type::E_U_UPPER_CASE: ret.push_back('U'); break;
        case Type::E_V_UPPER_CASE: ret.push_back('V'); break;
        case Type::E_W_UPPER_CASE: ret.push_back('W'); break;
        case Type::E_X_UPPER_CASE: ret.push_back('X'); break;
        case Type::E_Y_UPPER_CASE: ret.push_back('Y'); break;
        case Type::E_Z_UPPER_CASE: ret.push_back('Z'); break;
        case Type::E_A_LOWER_CASE: ret.push_back('a'); break;
        case Type::E_B_LOWER_CASE: ret.push_back('b'); break;
        case Type::E_C_LOWER_CASE: ret.push_back('c'); break;
        case Type::E_D_LOWER_CASE: ret.push_back('d'); break;
        case Type::E_E_LOWER_CASE: ret.push_back('e'); break;
        case Type::E_F_LOWER_CASE: ret.push_back('f'); break;
        case Type::E_G_LOWER_CASE: ret.push_back('g'); break;
        case Type::E_H_LOWER_CASE: ret.push_back('h'); break;
        case Type::E_I_LOWER_CASE: ret.push_back('i'); break;
        case Type::E_J_LOWER_CASE: ret.push_back('j'); break;
        case Type::E_K_LOWER_CASE: ret.push_back('k'); break;
        case Type::E_L_LOWER_CASE: ret.push_back('l'); break;
        case Type::E_M_LOWER_CASE: ret.push_back('m'); break;
        case Type::E_N_LOWER_CASE: ret.push_back('n'); break;
        case Type::E_O_LOWER_CASE: ret.push_back('o'); break;
        case Type::E_P_LOWER_CASE: ret.push_back('p'); break;
        case Type::E_Q_LOWER_CASE: ret.push_back('q'); break;
        case Type::E_R_LOWER_CASE: ret.push_back('r'); break;
        case Type::E_S_LOWER_CASE: ret.push_back('s'); break;
        case Type::E_T_LOWER_CASE: ret.push_back('t'); break;
        case Type::E_U_LOWER_CASE: ret.push_back('u'); break;
        case Type::E_V_LOWER_CASE: ret.push_back('v'); break;
        case Type::E_W_LOWER_CASE: ret.push_back('w'); break;
        case Type::E_X_LOWER_CASE: ret.push_back('x'); break;
        case Type::E_Y_LOWER_CASE: ret.push_back('y'); break;
        case Type::E_Z_LOWER_CASE: ret.push_back('z'); break;
        case Type::E_SPACE: ret.push_back(' '); break;
        case Type::E_QUESTIONMARK: ret.push_back('?'); break;
        case Type::E_FULLSTOP: ret.push_back('.'); break;
        case Type::E_COMMA: ret.push_back(','); break;
        default: throw std::exception();
    }
    return ret;
  }
};

class Text {
  private:
  std::vector<Letter> data;
  public:
  Text(){}
  Text(const std::string& n){
    std::vector<Letter> letterLibrary;
    letterLibrary.push_back(Letter(""A""));
    letterLibrary.push_back(Letter(""B""));
    letterLibrary.push_back(Letter(""C""));
    letterLibrary.push_back(Letter(""D""));
    letterLibrary.push_back(Letter(""E""));
    letterLibrary.push_back(Letter(""F""));
    letterLibrary.push_back(Letter(""G""));
    letterLibrary.push_back(Letter(""H""));
    letterLibrary.push_back(Letter(""I""));
    letterLibrary.push_back(Letter(""J""));
    letterLibrary.push_back(Letter(""K""));
    letterLibrary.push_back(Letter(""L""));
    letterLibrary.push_back(Letter(""M""));
    letterLibrary.push_back(Letter(""N""));
    letterLibrary.push_back(Letter(""O""));
    letterLibrary.push_back(Letter(""P""));
    letterLibrary.push_back(Letter(""Q""));
    letterLibrary.push_back(Letter(""R""));
    letterLibrary.push_back(Letter(""S""));
    letterLibrary.push_back(Letter(""T""));
    letterLibrary.push_back(Letter(""U""));
    letterLibrary.push_back(Letter(""V""));
    letterLibrary.push_back(Letter(""W""));
    letterLibrary.push_back(Letter(""X""));
    letterLibrary.push_back(Letter(""Y""));
    letterLibrary.push_back(Letter(""Z""));
    letterLibrary.push_back(Letter(""a""));
    letterLibrary.push_back(Letter(""b""));
    letterLibrary.push_back(Letter(""c""));
    letterLibrary.push_back(Letter(""d""));
    letterLibrary.push_back(Letter(""e""));
    letterLibrary.push_back(Letter(""f""));
    letterLibrary.push_back(Letter(""g""));
    letterLibrary.push_back(Letter(""h""));
    letterLibrary.push_back(Letter(""i""));
    letterLibrary.push_back(Letter(""j""));
    letterLibrary.push_back(Letter(""k""));
    letterLibrary.push_back(Letter(""l""));
    letterLibrary.push_back(Letter(""m""));
    letterLibrary.push_back(Letter(""n""));
    letterLibrary.push_back(Letter(""o""));
    letterLibrary.push_back(Letter(""p""));
    letterLibrary.push_back(Letter(""q""));
    letterLibrary.push_back(Letter(""r""));
    letterLibrary.push_back(Letter(""s""));
    letterLibrary.push_back(Letter(""t""));
    letterLibrary.push_back(Letter(""u""));
    letterLibrary.push_back(Letter(""v""));
    letterLibrary.push_back(Letter(""w""));
    letterLibrary.push_back(Letter(""x""));
    letterLibrary.push_back(Letter(""y""));
    letterLibrary.push_back(Letter(""z""));
    letterLibrary.push_back(Letter(Letter::Type::E_SPACE));
    letterLibrary.push_back(Letter(Letter::Type::E_QUESTIONMARK));
    letterLibrary.push_back(Letter(Letter::Type::E_FULLSTOP));
    letterLibrary.push_back(Letter(Letter::Type::E_COMMA));
    
    for(const char& c : n){
      bool found = false;
      for(const auto& letter : letterLibrary){
        if(std::string(1, c) == letter.toString()){
          data.push_back(letter);
          found = true;
          break;
        }
      }
      if(!found) throw std::exception();
    }
  }

  void add(Text t) {
    for(const auto& letter : t.data){
      data.push_back(letter);
    }
  }
  
  std::string toString() {
    std::string ret;
    for(const auto& letter : data) {
      ret += letter.toString();
    }
    return ret;
  }
};

std::string greet(const std::string& n){
  auto firstPart = Text(""Hello, "");
  auto middlePart = Text(n);
  auto lastPart = Text("" how are you doing today?"");
  auto total = Text();
  total.add(firstPart);
  total.add(middlePart);
  total.add(lastPart);
  return total.toString();
}
"
yx9w1Et6,LeetCode 567 - Permutation in String - 2023.10.15 solution,nathanwailes,Python,Saturday 14th of October 2023 05:07:13 PM CDT,"class Solution:
    def checkInclusion(self, s1: str, s2: str) -> bool:
        """""" We can't just check if the characters (and their numbers) of s1 is in
        s2 because all the characters need to be adjacent.
        """"""
        chars_in_s1 = _get_chars_in_s1(s1)
        chars_to_counts = _get_initial_window(s1, s2)
        
        l = 0
        r = len(s1)
        
        while r <= len(s2):
            if _chars_are_the_same(chars_in_s1, chars_to_counts):
                return True
    
            chars_to_counts[s2[l]] -= 1

            if r < len(s2):
                chars_to_counts[s2[r]] += 1
    
            l += 1
            r += 1
    
        return False
 
 
def _chars_are_the_same(chars_in_s1, chars_to_counts):
    for c in chars_in_s1.keys():
        if chars_to_counts[c] != chars_in_s1[c]:
            return False
    return True
 
 
def _get_chars_in_s1(s1):
    chars_in_s1 = defaultdict(int)
    for c in s1:
        chars_in_s1[c] += 1
    return chars_in_s1
 
 
def _get_initial_window(s1, s2):
    chars_to_counts = defaultdict(int)
    if len(s2) == 0:
        return chars_to_counts
    for i, c in enumerate(s2):
        if i >= len(s1):
            return chars_to_counts
        chars_to_counts[c] += 1
    return chars_to_counts
"
fdsw76Qw,Jenseits.der.Stille.1996.Deu.720p.BDRip.h264.dts.Subs-bp,bpmircea,BrainFuck,Saturday 14th of October 2023 04:39:07 PM CDT,"Jenseits der Stille (Beyond Silence) (Caroline Link, 1996)
aka
Jenseits.der.Stille.1996.Deu.720p.BDRip.h264.dts.Subs-bp
https://www.imdb.com/title/tt0116692/

Uploading..."
dRbiiDuz,Untitled,ReshiramZekrom,Pawn,Saturday 14th of October 2023 04:23:19 PM CDT,"#include <open.mp>


#include <izcmd>
#include <sscanf2>

main () {}

new skinid[MAX_PLAYERS];


public OnGameModeInit() {



    return 1;
}


COMMAND:skin(playerid,params[])
{
  	new skin1;
  	if(sscanf(params, ""d"", skin1)) return SendClientMessage(playerid, -1, ""Use: /skin [id]"");
  	if(skin1 < 0 || skin1 > 311) return SendClientMessage(playerid,-1,""invalid skin id"");
	SetPlayerSkin(playerid, skin1);
	skinid[playerid] = skin1;

	SendClientMessage(playerid, -1, ""skin set"");
	return 1;
}


COMMAND:sync(playerid,params[])
{

	new Float:HP1, Float:HP2, Float:PosX,Float:PosY,Float:PosZ,Float:PosRZ, Int, VirtualWorld, CurrWep;
	GetPlayerHealth(playerid, HP1);
	GetPlayerArmour(playerid, HP2);

	CurrWep = WEAPON:GetPlayerWeapon(playerid);

	GetPlayerPos(playerid, PosX, PosY, PosZ);
	GetPlayerFacingAngle(playerid, PosRZ);

	Int = GetPlayerInterior(playerid);
	VirtualWorld = GetPlayerVirtualWorld(playerid);


	new Weapons[13][2];
	for(new i = 0; i < 13; i++) {
     	GetPlayerWeaponData(playerid, WEAPON_SLOT:i, WEAPON:Weapons[i][0], Weapons[i][1]);
	}

	ClearAnimations(playerid);

	if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
	SetPlayerPos(playerid, 0, 0, 0);
	SpawnPlayer(playerid);

	SetPlayerSkin(playerid, skinid[playerid]);

    SetPlayerHealth(playerid, HP1);
    SetPlayerArmour(playerid, HP2);

    SetPlayerPos(playerid, PosX, PosY, PosZ);

    SetPlayerFacingAngle(playerid,PosRZ);
    SetCameraBehindPlayer(playerid);

    SetPlayerInterior(playerid, Int);
    SetPlayerVirtualWorld(playerid, VirtualWorld);
    ResetPlayerWeapons(playerid);
    for(new i = 0; i < 13; i++) {
        GivePlayerWeapon(playerid, WEAPON:Weapons[i][0], Weapons[i][1]);
    }

    SetPlayerArmedWeapon(playerid, WEAPON:CurrWep);

    SendClientMessage(playerid, -1, ""successfully synced"");
    return 1;
}
"
dtxESNfu,Untitled,Stawlie0,C++,Saturday 14th of October 2023 04:16:30 PM CDT,"    require(""package"").loaded[""doublebuffer""] = nil
    require(""package"").loaded[""control""] = nil
    require(""package"").loaded[""casino""] = nil
    require(""package"").loaded[""sgui""] = nil
    
    local controlLib = require(""control"")
    local charSpace = ' '
    
    local component = require(""component"")
    local computer = require(""computer"")
    local event = require(""event"")
    local unicode = require(""unicode"")
    local thread = require(""thread"")
    
    local Casino = require(""casino"")
    local gui = require(""sgui"")
    
    local gpu = component.gpu
    local radar = component.radar
    local chatbox = component.chat_box
    
    chatbox.setName(""§6BAZAR CASINO§7§o"")
    chatbox.say(""§aМодули успешно загружены"")
    
    local width, height = gpu.getResolution()
    
    gpu.setResolution(112,50)
    
    local win = {}
    --Резервируем места
    local function reservWin()
        local x = 10 -- начальная Координата x
        local y = 6  -- начальная координата y
        for i = 1, 63 do
            local id = controlLib.createLabel{
                x = x;
                y = y;
                text = """"
            }
            table.insert(win, id)
            x = x + 36 
            if x > 108 then
                x = 10
                y = y+2
            end
        end
        local id = controlLib.createLabel{
            x = 46;
            y = y;
            text = """"
        } 
        table.insert(win, id)
    end
    
    reservWin()
    
    local function ClearWin()
        for i = 1, 64 do
            controlLib.updateControl(win[i], {
                text = """"
            })
        end
    end
    
    local myCasino = Casino:new()
    
    myCasino:addItem(""&fАккумулятор"", ""contenttweaker:modelbatre"", 1, 0.99)
    myCasino:addItem(""&fЭнергетический кристалл"", ""contenttweaker:modelbatcrystal"", 1, 0.99)
    myCasino:addItem(""&f8-битный чип"", ""contenttweaker:chip_8bit"", 1, 0.99)
    myCasino:addItem(""&fФрагметное завихрение"", ""contenttweaker:blakk_vw"", 1, 0.99)
    myCasino:addItem(""&fУглепластик"", ""Carbon Plate"", 1, 0.99)
    myCasino:addItem(""&fКомпозит"", ""Advanced Alloy"", 1, 0.99)
    myCasino:addItem(""&fЭлектросхема"", ""Electronic Circuit"", 1, 0.99)
    myCasino:addItem(""&fУлучшенная Электросхема"", ""Advanced Circuit"", 1, 0.99)
    myCasino:addItem(""&fОбсидиан"", ""minecraft:obsidian"", 32, 0.99)
    
    myCasino:addItem(""&bЛогический процессор"", ""Logic Processor"", 1, 0.4)
    myCasino:addItem(""&bЛазуротроновый Кристалл"", ""contenttweaker:modelbatlamacrystal"", 1, 0.4)
    myCasino:addItem(""&b16-битный чип"", ""contenttweaker:chip_16bit"", 1, 0.4)
    myCasino:addItem(""&bУскоритель"", ""Overclocker Upgrade"", 1, 0.4)
    myCasino:addItem(""&bТрансформатор"", ""Transformer Upgrade"", 1, 0.4)
    myCasino:addItem(""&bПанель 2-го уровня"", ""Low Voltage Solar Array"", 1, 0.4)
    myCasino:addItem(""&bИридиевая руда"", ""Iridium Ore"", 1, 0.4)
    myCasino:addItem(""&bЭндер-Жемчуг"", ""minecraft:ender_pearl"", 16, 0.4)
    myCasino:addItem(""&bРэдстоуновая руда"", ""minecraft:redstone_ore"", 48, 0.4)
    
    myCasino:addItem(""&bФлаксовый разъем"", ""fluxnetworks:fluxplug"", 1, 0.4)
    myCasino:addItem(""&bФлаксовый контроллер"", ""fluxnetworks:fluxcontroller"", 1, 0.4)
    myCasino:addItem(""&b32-битный чип"", ""contenttweaker:chip_32bit"", 1, 0.4)
    myCasino:addItem(""&bЗавихрение Виверны"", ""contenttweaker:drei_vw"", 1, 0.4)
    myCasino:addItem(""&bАметист"", ""contenttweaker:amethyst"", 1, 0.4)
    myCasino:addItem(""&bНуклеус Виверны"", ""contenttweaker:vyverncore_vw"", 1, 0.4)
    myCasino:addItem(""&bЯдро Дракона"", ""draconicevolution:draconic_core"", 1, 0.4)
    myCasino:addItem(""&bПлутоний"", ""Plutonium"", 4, 0.4)
    myCasino:addItem(""&bЯйцо Дракона"", ""minecraft:dragon_egg"", 1, 0.4)
    
    myCasino:addItem(""&dФлакс Точка"", ""fluxnetworks:fluxpoint"", 1, 0.2)
    myCasino:addItem(""&dФлаксобур Основной"", ""Fluxbore (Basic)"", 1, 0.2)
    myCasino:addItem(""&dСовершенная материя"", ""ic2stuff:pf_matter"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный шлем"", ""ic2:nano_helmet"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный Жилет"", ""ic2:nano_chestplate"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный Поножи"", ""ic2:nano_leggings"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный Ботинки"", ""ic2:nano_boots"", 1, 0.2)
    myCasino:addItem(""&dПереносная ячейка"", ""appliedenergistics2:portable_cell"", 1, 0.2)
    myCasino:addItem(""&dЗвезда Ада"", ""minecraft:nether_star"", 1, 0.2)
    
    myCasino:addItem(""&dПанель 3-го уровня"", ""Medium Voltage Solar Array"", 1, 0.2)
    myCasino:addItem(""&dФлаксобур Резонирующий"", ""Fluxbore (Resonant)"", 1, 0.2)
    myCasino:addItem(""&d64-битный чип"", ""contenttweaker:chip_64bit"", 1, 0.2)
    myCasino:addItem(""&dЗавихрение Дракона"", ""contenttweaker:vier_vw"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный нагрудник"", ""gravisuite:advancednanochestplate"", 1, 0.2)
    myCasino:addItem(""&dНуклеус Дракона"", ""contenttweaker:dragoncore_vw"", 1, 0.2)
    myCasino:addItem(""&dЯдро Виверны"", ""draconicevolution:wyvern_core"", 1, 0.2)
    myCasino:addItem(""&dПыль Синерия"", ""Synerium Dust"", 16, 0.2)
    myCasino:addItem(""&dСердце Дракона"", ""draconicevolution:dragon_heart"", 1, 0.2)
    
    myCasino:addItem(""&cКонденсатор Виверны"", ""Wyvern Flux Capacitor"", 1, 0.1)
    myCasino:addItem(""&cМеч Виверны"", ""draconicevolution:wyvern_sword"", 1, 0.1)
    myCasino:addItem(""&cЛук Виверны"", ""draconicevolution:wyvern_bow"", 1, 0.1)
    myCasino:addItem(""&cКирка Виверны"", ""draconicevolution:wyvern_pick"", 1, 0.1)
    myCasino:addItem(""&cТопор Виверны"", ""draconicevolution:wyvern_axe"", 1, 0.1)
    myCasino:addItem(""&cШлем Виверны"", ""draconicevolution:wyvern_helm"", 1, 0.1)
    myCasino:addItem(""&cНагрудник Виверны"", ""draconicevolution:wyvern_chest"", 1, 0.1)
    myCasino:addItem(""&cПоножи Виверны"", ""draconicevolution:wyvern_legs"", 1, 0.1)
    myCasino:addItem(""&cБотинки Виверны"", ""draconicevolution:wyvern_boots"", 1, 0.1)
    
    myCasino:addItem(""&4Конденсатор Дракона"", ""Draconic Flux Capacitor"", 1, 0.03)
    myCasino:addItem(""&4Меч Дракона"", ""draconicevolution:draconic_sword"", 1, 0.03)
    myCasino:addItem(""&4Лук Дракона"", ""draconicevolution:draconic_bow"", 1, 0.03)
    myCasino:addItem(""&4Кирка Дракона"", ""draconicevolution:draconic_pick"", 1, 0.03)
    myCasino:addItem(""&4Топор Дракона"", ""draconicevolution:draconic_axe"", 1, 0.03)
    myCasino:addItem(""&4Шлем Дракона"", ""draconicevolution:draconic_helm"", 1, 0.03)
    myCasino:addItem(""&4Поножи Дракона"", ""draconicevolution:draconic_legs"", 1, 0.03)
    myCasino:addItem(""&4Ботинки Дракона"", ""draconicevolution:draconic_boots"", 1, 0.03)
    myCasino:addItem(""&4Ядро Дракона"", ""draconicevolution:awakened_core"", 1, 0.03)
    
    myCasino:addItem(""&6Квантовая Кирка"", ""apex:quantum_pickaxe"", 1, 0.01)
    myCasino:addItem(""&6Квантовый Генератор"", ""Quantum Generator"", 1, 0.01)
    myCasino:addItem(""&6Нагрудник Дракона"", ""draconicevolution:draconic_chest"", 1, 0.01)
    
    myCasino:search_transposers()
    --myCasino:get_list()
    
    controlLib.drawAll()
    --myCasino:displayItems()
    
    local function mainCasino(money)
        local rewardsList = {}
        local itemCounts = {}
        myCasino:sendMoney(money)
        chatbox.say(""§6Баланс пополнен на §a$"" .. money)
        for i = 1, 64 do
            controlLib.updateControl(win[i], {
                text = string.rep("" "", 36),
            })
        end
        controlLib.drawAll()
    
        for i = 1, money do
            local reward = myCasino:weightedRoll()
            local displayName = string.gsub(reward.name, ""&"", ""§"", 1)
    
            component.proxy(reward.address).transferItem(0, 1, reward.count, reward.slot, i)
    
            local secondChar = string.sub(reward.name, 2, 2)
            local modifiedString = string.sub(reward.name, 3)
    
            if reward and reward.name and reward.count then
                -- Суммируем количество одинаковых предметов и сохраняем шанс
                if itemCounts[displayName] then
                    itemCounts[displayName].count = itemCounts[displayName].count + reward.count
                else
                    itemCounts[displayName] = {count = reward.count, chance = reward.chance}
                end
            end
            controlLib.updateControl(win[i], {
                text = modifiedString,
                foreColor = gui.colors[secondChar],
            })
            controlLib.drawAll()
            os.sleep(0.5) 
        end
    
        -- Создаем список для отсортированных результатов
        for name, data in pairs(itemCounts) do
            table.insert(rewardsList, {name = name, count = data.count, chance = data.chance})
        end
    
        table.sort(rewardsList, function(a, b) return a.chance < b.chance end)
    
        local results = {}
        for _, item in ipairs(rewardsList) do
            table.insert(results, item.name .. "": "" .. item.count .. ""x"")
        end
        local resultString = ""\n"" .. table.concat(results, ""\n"")
        chatbox.say(resultString)        
    end
    
    local totalCash = 0
    
    local permissions = {}
    permissions[""Stawlie_""] = true
    permissions[""NikkyFreaky""] = true
    permissions[""FrameGame""] = true
    
    local function chatMessageHandler()
        chatbox.say(""Модуль чата запущен"")
        while true do
            local _, address, nick, msg = event.pull(0.1, ""chat_message"")
            local words = {}
            local countWords = 0
    
            if msg then
                msg = string.lower(msg)
                for word in msg:gmatch(""%S+"") do
                    table.insert(words, word)
                    countWords = countWords + 1
                end
                
                if msg == ""@list"" then
                    myCasino:get_list()
                end
                
                if permissions[nick] then
                    if words[1] == ""@try"" then
                        chatbox.say(""§fПопыток: §a§l"" .. totalCash)
                    elseif words[1] == ""@off"" then
                        chatbox.say(""§e§lПерезагружаюсь"")
                        computer.shutdown(true)
                    elseif words[1] == ""@add"" then
                        if words[2] then
                            mainCasino(tonumber(words[2]))
                        end
                    elseif words[1] == ""@owner"" then
                        if words[2] then
                            permissions[words[2]] = true
                        end
                    end
                end
            end
        end
    end
    
    thread.create(chatMessageHandler)
    
    local colors = { {0xFF0000, 0x0000FF}, {0x0000FF, 0x00FF00}, {0x00FF00, 0xFF0000} }
    local indexColorGradient = 1
    
    while true do
        gui.drawMain(""[Casino BAZAR]"", 0.3, colors[indexColorGradient][1], colors[indexColorGradient][2])

        indexColorGradient = indexColorGradient % #colors + 1

        local money = myCasino:SearchMoney()

        while money and money > 3 do
            mainCasino(3)
            money = money - 3
            totalCash = totalCash + 3
        end

        if money and money <= 3 and money > 0 then
            mainCasino(money)
            totalCash = totalCash + money
        end

        computer.pullSignal(2)
    end
    
    --Проблемы
    --Если существует 2 одинаковых предмета, например камень с шансом 0.3 и камень с шансом 0.2, алгоритм записывает адрес только первого камня, который попадется в списке
    --Ultimate Hybrid и Hybrid разные места"
Fr719f1P,Asterisk VozIp,homzode,Bash,Saturday 14th of October 2023 04:16:13 PM CDT,"/** roceso instalacion de Asterisk en Ubuntu
/** Actualizando el systema
apt-get update
/** Instalando dependencias requeridas
apt-get install build-essential
apt-get install git-core 
apt-get install pkg-config
apt-get install subversion
apt-get install libjansson-dev
apt-get install sqlite 
apt-get install autoconf
apt-get install automake
apt-get install libtool
apt-get install libxml2-dev
apt-get install libncurses5-dev
apt-get install unixodbc
apt-get install unixodbc-dev
apt-get install libasound2-dev
apt-get install libogg-dev
apt-get install libvorbis-dev
apt-get install libneon27-dev
apt-get install libsrtp0-dev
apt-get install libspandsp-dev
apt-get install uuid uuid-dev
apt-get install sqlite3 
apt-get install libsqlite3-dev
apt-get install libgnutls-dev
apt-get install libedit-dev
apt-get install doxygen
/** Reiniciando el sistema
shutdown -r now
/** instalando asterisk 20
wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-20-current.tar.gz
tar zxf asterisk-20-current.tar.gz
cd asterisk-20.4.0
/**mp3 modules
contrib/scripts/get_mp3_source.sh
contrib/scripts/install_prereq install
/** Configurando Asterisk
./configure
/** Si se presenta error en versión de libjansson-dev
./configure --with-jansson-bundled
/** Opcional si desea retirar o agregar modulos a instalar
make menuselect
/** Compilando módulos 30 minutos en pentium 4 2GB ram
make
make install
make progdocs ***opcional requiere doxygen
make samples
make config
ldconfig
make basic-pbx
/** Arrancando el servidor Asterisk
systemctl start asterisk
/** reiniciar 
systemctl restart asterisk
/** Configurar para activación en el arranque del sistema
systemctl enable asterisk
/** Consultar estado
systemctl status asterisk
/** Conectando desde CLI
asterisk -rvv
/** Deteniendo el servidor Asterisk
systemctl stop asterisk"
ReBHHNLx,.,Frostyy22,C#,Saturday 14th of October 2023 04:01:30 PM CDT,"using Unity.Services.Core;
using Unity.Services.Economy;
using Unity.Services.Economy.Model;
using UnityEngine;

public class Economy : MonoBehaviour
{
    string slurpCoins = ""SLURP_COINS"";
    
    private async void Start()
    {
        await UnityServices.InitializeAsync();
        await EconomyService.Instance.Configuration.SyncConfigurationAsync();

        GetBalance();
    }

    private async void GetBalance()
    {
        CurrencyDefinition slurpCurrencyDefinition = EconomyService.Instance.Configuration.GetCurrency(slurpCoins);
        PlayerBalance playersSlurpCoinsBalance = await slurpCurrencyDefinition.GetPlayerBalanceAsync();

        if (playersSlurpCoinsBalance != null)
        {
            Debug.Log($""Player's balance: {playersSlurpCoinsBalance.Balance}"");
        }
        else
        {
            Debug.LogError(""Failed to get player's balance."");
        }      
    }
}"
sCkEwBGG,LeetCode 424 - Longest Repeating Character Replacement - Rewritten NeetCode solution,nathanwailes,Python,Saturday 14th of October 2023 03:54:33 PM CDT,"class Solution:
    def characterReplacement(self, s: str, k: int) -> int:
        chars_in_the_current_window = defaultdict(int)
        longest_substring = 0

        l = 0
        for r in range(len(s)):
            chars_in_the_current_window[s[r]] += 1

            while _chars_other_than_the_most_common(l, r, chars_in_the_current_window) > k:
                chars_in_the_current_window[s[l]] -= 1
                l += 1
            
            longest_substring = max(longest_substring, _the_window_size(l, r))
        return longest_substring

def _chars_other_than_the_most_common(l, r, chars_in_the_current_window):
    return _the_window_size(l, r) - _the_number_of_occurrences_of_the_most_common_character(chars_in_the_current_window)

def _the_window_size(l, r):
    return r - l + 1

def _the_number_of_occurrences_of_the_most_common_character(chars_in_the_current_window):
    return max(chars_in_the_current_window.values())
"
8N21ZaLC,code,Luckus,Python,Saturday 14th of October 2023 03:18:40 PM CDT,"class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        small_value, big_value = -1, -1
        left, right = 0, len(nums) - 1

        while left <= right:
            middle = (left + right) // 2
            if nums[middle] < target:
                left = middle + 1
            if nums[middle] > target:
                right = middle - 1
            if nums[middle] == target:
                small_value = middle
                big_value = middle
                break

        left_pointer, right_pointer = small_value, big_value

        while left_pointer >= 0 and nums[left_pointer] == target:
            small_value = left_pointer
            left_pointer -= 1

        while (
            right_pointer != -1
            and right_pointer < len(nums)
            and nums[right_pointer] == target
        ):
            big_value = right_pointer
            right_pointer += 1

        return [small_value, big_value]
"
cbbP9s8k,Random Wallpaper Downloader Rev 3.5 *New*,nitestryker,Bash,Saturday 14th of October 2023 03:10:32 PM CDT,"#!/bin/bash

###################################################################### 
# Copyright (C) 2023  Nitestryker 
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
###################################################################### 

# Revision 3.5 (October 2023)
# 
# Enhancements:
# - Restored the dialog window for an improved user experience.
# - Addressed and resolved issues related to conditional statements, enhancing script reliability.
# - Improved screen resolution detection to prevent downloaded images from being cut off at the top.

# Revision 3.4
# 
# Enhancements:
# - Introduced a visually appealing colored banner at the script's startup.
# - Temporarily removed the dialogue window with plans to reintroduce it in a future release upon issue resolution.

# Revision 3.3 
# 
# Improvements:
# - Conducted bug fixes, addressing minor issues to enhance script stability.

# Revision 3.2
# 
# New Features:
# - Implemented screen resolution detection to dynamically set the DESIRED_RESOLUTION variable.
# - Added download statistics to provide insights into the download process.
# - Resolved an issue related to calculating downloaded images, ensuring accurate tracking.

# Revision 3.1
# 
# Functionalities:
# - Introduced the capability to calculate MD5 hashes for downloaded images.
# - Established a mechanism to store MD5 hashes in the download_history.txt file, replacing previous URL-based tracking.
# - Implemented a check in the script to skip downloads of images already present in the download history.

# Revision 3
# 
# Feature Additions:
# - Introduced user-defined wallpaper resolution handling.
# - Implemented a download history feature to record and manage downloaded wallpapers.
# - Enhanced the script with the ability for users to choose between random and keyword-based wallpaper downloads.

# Define color codes
HEADER=""\033[95m""
OKBLUE=""\033[94m""
OKGREEN=""\033[92m""
WARNING=""\033[93m""
FAIL=""\033[91m""
ENDC=""\033[0m""
BOLD=""\033[1m""
UNDERLINE=""\033[4m""

# Script Title 
backtitle=""Wallpaper Downloader""
title=""Wallpaper Downloader""

# Get the current logged-in user
user=$(whoami)
# Define the directory where wallpapers will be stored
WALLPAPER_DIR=""/home/${user}/Pictures""

# Detect screen resolution and set DESIRED_RESOLUTION
SCREEN_RESOLUTION=$(xrandr | awk '/\*/ {print $1}' | sed 's/x/*/g')
DESIRED_RESOLUTION=""$SCREEN_RESOLUTION""

# Path to the download history file
DOWNLOAD_HISTORY_FILE=""$WALLPAPER_DIR/download_history.txt""

# Function to download the wallpaper with a specific keyword or at random
download_wallpaper() {
    # Generate a unique filename based on the current timestamp
    UNIQUE_FILENAME=""wallpaper_$(date +'%Y%m%d%H%M%S').jpg""

    if [ ""$DOWNLOAD_MODE"" == ""random"" ]; then
        # Download a random image from Unsplash
        IMAGE_URL=$(curl -Ls -w %{url_effective} -o /dev/null ""https://source.unsplash.com/random/$DESIRED_RESOLUTION"")
    elif [ ""$DOWNLOAD_MODE"" == ""keyword"" ]; then
        # Download an image with the specified keyword
        IMAGE_URL=$(curl -Ls -w %{url_effective} -o /dev/null ""https://source.unsplash.com/featured/$DESIRED_RESOLUTION/?$KEYWORD"")
    else
        echo ""Invalid download mode: $DOWNLOAD_MODE""
        return 1
    fi

    # Calculate the MD5 hash of the image
    IMAGE_HASH=$(curl -Lf ""$IMAGE_URL"" | md5sum | awk '{print $1}')

    # Check if the image hash is already in the download history
    if grep -q ""$IMAGE_HASH"" ""$DOWNLOAD_HISTORY_FILE""; then
        echo ""Skipping an already downloaded wallpaper: $IMAGE_URL""
        return 0
    fi

    # Save the image to the wallpaper directory with the unique filename
    curl -Lf ""$IMAGE_URL"" > ""$WALLPAPER_DIR/$UNIQUE_FILENAME""

    # Append the image hash to the download history file
    echo ""$IMAGE_HASH"" >> ""$DOWNLOAD_HISTORY_FILE""

    # Increment the downloaded wallpaper counter
    ((DOWNLOADED_WALLPAPERS++))
}

# Function to show a countdown timer
show_countdown() {
    for ((i = SLEEP_DURATION; i >= 0; i--)); do
        printf ""\rDownloading wallpaper %d of %d... Time left: %02d:%02d "" ""$DOWNLOADED_WALLPAPERS"" ""$MAX_WALLPAPERS"" $((i / 60)) $((i % 60))
        sleep 1
    done
    echo """"
}

###  ENTRY POINT #######
########################

# Clear the screen before showing the banner
clear 

# Banner 
banner=$(cat << ""EOF""
░█░█░█▀█░█░░░█░░░█▀█░█▀█░█▀█░█▀▀░█▀▄░░░█▀▄░█▀█░█░█░█▀█░█░░░█▀█░█▀█░█▀▄░█▀▀░█▀▄
░█▄█░█▀█░█░░░█░░░█▀▀░█▀█░█▀▀░█▀▀░█▀▄░░░█░█░█░█░█▄█░█░█░█░░░█░█░█▀█░█░█░█▀▀░█▀▄
░▀░▀░▀░▀░▀▀▀░▀▀▀░▀░░░▀░▀░▀░░░▀▀▀░▀░▀░░░▀▀░░▀▀▀░▀░▀░▀░▀░▀▀▀░▀▀▀░▀░▀░▀▀░░▀▀▀░▀░▀
EOF
)

echo -e ""${OKBLUE}$banner${ENDC}""
echo -e ""${OKGREEN}Rev 3.5 by ${FAIL}Nitestryker${ENDC}""

# Wait for two seconds
sleep 2

# Clear the screen again 
clear

## GET USERS INPUT ###
######################

# Ask the user to choose the download mode (random or keyword)
exec 3>&1;
DOWNLOAD_MODE=""$(dialog --backtitle ""$backtitle"" --inputbox ""Choose the download mode (random/keyword):"" 15 30 2>&1 1>&3)""
[[ ""$DOWNLOAD_MODE"" ]] || exit

if [ ""$DOWNLOAD_MODE"" == ""keyword"" ]; then
    exec 3>&1;
    KEYWORD=""$(dialog --backtitle ""$backtitle"" --inputbox ""Enter a keyword for wallpapers:"" 15 30 2>&1 1>&3)""
    [[ ""$KEYWORD"" ]] || exit
elif [ ""$DOWNLOAD_MODE"" != ""random"" ]; then
    echo ""Invalid download mode: $DOWNLOAD_MODE""
    exit 1  # Exit the script with an error code
fi

exec 3>&1;
MAX_WALLPAPERS=""$(dialog --backtitle ""$backtitle"" --inputbox ""Enter the maximum number of wallpapers to download (default: 100)"" 15 30 2>&1 1>&3)""
[[ ""$MAX_WALLPAPERS"" ]] || exit

# Ask the user to input the sleep duration in seconds
exec 3>&1;
SLEEP_DURATION=""$(dialog --backtitle ""$backtitle"" --inputbox ""Enter the sleep duration in seconds between downloading wallpapers (default: 300)"" 15 30 2>&1 1>&3)""
[[ ""$SLEEP_DURATION"" ]] || exit

# If the user didn't enter any value, set the default value to 300 seconds (5 minutes)
SLEEP_DURATION=${SLEEP_DURATION:-300}

# Sleep for one second
sleep 1

# Clear the screen 
clear

# Create the directory if it doesn't exist
if [ ! -d ""$WALLPAPER_DIR"" ]; then
    mkdir ""$WALLPAPER_DIR""
fi

# Create the download history file if it doesn't exist
touch ""$DOWNLOAD_HISTORY_FILE""

# Set the initial value of the downloaded wallpaper counter to 0
DOWNLOADED_WALLPAPERS=0

#### Main loop #####
####################

while [ ""$DOWNLOADED_WALLPAPERS"" -lt ""$MAX_WALLPAPERS"" ]; do
    # Download the wallpaper based on the chosen mode (random or keyword)
    download_wallpaper

    # Show a notice and countdown before sleeping
    echo ""Downloading wallpaper $DOWNLOADED_WALLPAPERS of $MAX_WALLPAPERS...""
    show_countdown
done

# Calculate the total download time
TOTAL_DOWNLOAD_TIME=$((MAX_WALLPAPERS * SLEEP_DURATION))

# Calculate the total data consumed in bytes
TOTAL_DATA_CONSUMED=$(du -c -b ""$WALLPAPER_DIR"" | grep ""total$"" | awk '{print $1}')

# Calculate the average download speed in bytes per second
if [ ""$TOTAL_DOWNLOAD_TIME"" -eq 0 ]; then
    AVERAGE_DOWNLOAD_SPEED=0
else
    AVERAGE_DOWNLOAD_SPEED=$(echo ""scale=2; $TOTAL_DATA_CONSUMED / $TOTAL_DOWNLOAD_TIME"" | bc)
fi

# Convert download statistics to appropriate units (bytes to MB or GB, seconds to minutes)
if (( $(echo ""$TOTAL_DATA_CONSUMED > 1073741824"" | bc -l) )); then
    TOTAL_DATA_CONSUMED=$(echo ""scale=2; $TOTAL_DATA_CONSUMED / 1073741824"" | bc)
    DATA_UNIT=""GB""
elif (( $(echo ""$TOTAL_DATA_CONSUMED > 1048576"" | bc -l) )); then
    TOTAL_DATA_CONSUMED=$(echo ""scale=2; $TOTAL_DATA_CONSUMED / 1048576"" | bc)
    DATA_UNIT=""MB""
else
    TOTAL_DATA_CONSUMED=$(echo ""scale=2; $TOTAL_DATA_CONSUMED / 1024"" | bc)
    DATA_UNIT=""KB""
fi

if (( $(echo ""$AVERAGE_DOWNLOAD_SPEED > 1048576"" | bc -l) )); then
    AVERAGE_DOWNLOAD_SPEED=$(echo ""scale=2; $AVERAGE_DOWNLOAD_SPEED / 1048576"" | bc)
    SPEED_UNIT=""MB/s""
elif (( $(echo ""$AVERAGE_DOWNLOAD_SPEED > 1024"" | bc -l) )); then
    AVERAGE_DOWNLOAD_SPEED=$(echo ""scale=2; $AVERAGE_DOWNLOAD_SPEED / 1024"" | bc)
    SPEED_UNIT=""KB/s""
else
    SPEED_UNIT=""B/s""
fi

# Clear the screen
clear

# Display download statistics
echo ""Download Statistics:""
echo ""Number of Wallpapers Downloaded: $DOWNLOADED_WALLPAPERS""
echo ""Total Data Consumed: $TOTAL_DATA_CONSUMED $DATA_UNIT""
echo ""Average Download Speed: $AVERAGE_DOWNLOAD_SPEED $SPEED_UNIT""

# Exit the script once the maximum number of wallpapers is downloaded
echo ""Maximum number of wallpapers ($MAX_WALLPAPERS) downloaded. Exiting..."""
iji6M9d5,busqueda archivos,teslariu,Python,Saturday 14th of October 2023 03:08:08 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
""""""
Script que busca archivos en forma recursiva denttro de un directorio
dada una ruta y una extension
Ej de uso:
buscar.py <ruta> <extension>
""""""
import os
import sys

hallados = 0
# verifico la cantidad de argumentos
if len(sys.argv) != 3:
	sys.exit(""Error: ejecute 'buscar.py <ruta> <extension>'"")
	
# asigno los parametros	
ruta, extension = sys.argv[1:]

# verifico si existe la ruta
if not os.path.exists(ruta):
	sys.exit(f""Error: no existe la ruta '{ruta}'"")
	
# busqueda recursiva dentro de la ruta
# os.walk() devuelve 3 iteradores en cada iteración
# 1. carpeta actual
# 2. lista de subcarpetas dentro de la carpeta actual
# 3. lista de archivos dentro de la carpeta actual
for carpeta_actual, lista_carpetas, lista_archivos in os.walk(ruta):
	for archivo  in lista_archivos:
		if archivo.endswith(extension):
			print(os.path.join(carpeta_actual, archivo))
			hallados += 1
			
if not hallados:
	print(f""No se hallaron archivos con extension '{extension}' en la ruta '{ruta}'"")
else:
	print(f""\nTotal: {hallados} archivos"")



"
AuFv6pfC,Heilstaetten.2018.Deu.720p.h264.aac.Subs-bp,bpmircea,BrainFuck,Saturday 14th of October 2023 02:49:21 PM CDT,"Heilstätten (Haunted Hospital) (Michael David Pate, 2018)
aka
Heilstaetten.2018.Deu.720p.h264.aac.Subs-bp
https://www.imdb.com/title/tt7214470/

Uploading..."
RcvWig5h,Monitor Test,glitchdetector,Lua,Saturday 14th of October 2023 02:32:36 PM CDT,"local monitor = peripheral.wrap(""top"")

local n = 0
while true do
    local w, h = monitor.getSize()
    monitor.clear()
    monitor.setCursorPos(1, h)
    monitor.blit(""-"", ""0"", ""e"")
    monitor.setCursorPos(w, h)
    monitor.blit(""+"", ""0"", ""d"")

    monitor.setCursorPos(1, 1)
    monitor.write(""COUNTER"")

    monitor.setCursorPos(1, 2)
    monitor.write((""%.0f""):format(n))

    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
    if xPos == 1 and yPos == h then
        n = n - 1
    elseif xPos == w and yPos == h then
        n = n + 1
    end
end"
FwkP8TDt,noice 5 trillion max msp,sousastep,HTML,Saturday 14th of October 2023 02:29:16 PM CDT,"<pre><code>
----------begin_max5_patcher----------
4651.3oc6cs0bqhiD94jeEr9rOLWxwqjPHfo1olr09v9xtOs6ayYpTXC1gYv
.CfykyTS9su5BfwNfs.Z3jc1jZlbBfMR8WeQcqtkzuc8UKVk7TP9Biuy3GMt
5pe65qtRdKwMtp75qVry6o0Qd4xO1h3fGSV8yKtQ8nhfmJj2NJwyeWPdtAEU
8r386BiiBJjeOb4MS8JVeeX716xBVWnZWWWxRzMFTJU7O11heS32x3mN7hR1
Wb5aRcqhmSCTulEKp+Bg9x9Due9Qhi0BwM+8quV7qaFGU9ygEK2FsTb89r.i
a878RKLPF25Gty.6RPFXjCxn2P.lXgjDOSQ8lnK.Bjt.AdO7tsQ2U1CWbSmv
BYHvhWQQ19vJpSbk71aRhKxC+bPeIaBVQnV1RI.rEBVduk6h5FOyaWPQP1cA
wdqhjeMDb.PZRdXQXR7PA.FVB.lTKfA.anAfNTL15UDXfMvsB.jyH3aZYqnb
rTPf.K8SY.p7WXrZ.Z1VHIkQsLkzIYnJ1q7h2JTmCiK5fVGjgtMQI7NPEUsI
Iammrmy5KchrkDniiiTf1cnzofFkzZqDoo6zJP+fWVL+0pTpETYP1Oh+oWIJ
jZjGEt89hOtNKIcnF6cU591zgJyehs9VALLaQydRPVITThEbVdXTvCAY4BqW
GZLtsszzF29pFeEA.9yIxWjyM02JLVcKV8sxBdHr56ipuqWFGOJ3fgrKy6lO
wnKN7ZR7Cxh4VXEcE0M4rxxtjjoIXO4odqUeYAus5wGPXaSk3mRjjQk3L0Ac
.h4REaiRV+KA9M6cKRRChCiSyBxChK7JNoyuvOXi29nh6pGuSzKEZzs77Mkc
wVeXsL1eKKzKplB1lE5mDK5DGwJD2tp4DVTTiU1jXjehXuzV9xbo.NtzwCy4
D497UdYBNUoRDo5gEIIQG+n5uWTvlhxGmFFGeBJVjj18CyD5Mc+3UI7Gt6bu
a4Sxuaer5o2wEJJtK26giQ6BunnRU6ie8O4EGxswETDpXADT8CUFRtOmqTGE
cD8pdxCs7DetP95fGC8KtW1PMEF3e7vzJgnE0bY+vsA4EGeuBus4Gem7hmUf
diaseUoRLWmeWZDmJN9CvUOByKxuO4w7xOXkfVS.3f+9MUpaZm7n6etALZeP
iNsF1kEQShbLRLS4Dvq7Br6wOzbLjSMKZt3nNTGijbU0nIklgFHhczHLcD0D
ZoKYwHQOhzSJGaMPO7YQutPM7hYFUvCERbkF9wJSk1noCQbrmaLAMTLwV5XF
FglbLgAIlLE1avp3LvT2YxdC1wZNs3LEXlCctgrY0Hc0HqMaSu33jCdAt3Ce
v3ej4sxvyHMISbWijM7KdHzOHwvK12f67Z3lmMBKL9vGZ9dZFTgHfgziZkzr
jhDAxbHvivmhN56GF7nzKrvnvhmekl4lM4AkLIIaAcBWQ4mqeF2EiZ+WPMd9
5nv0+Rw8YI62d+oO6UtD85G9P6OT0pUts17Iq1J7x+TxXURluJ5DTmRnWPDU
IUhckV8MsT16X5aiqlA7vmWp3SK4xH7FZw4jj6HJrWIOaifzrnDU5bn.z4AJ
tRrK+GaWl5GDkGdjD7Lq+8PGWPW3vwoYuecxtcAwG6Tr7aD6G7TifAAA6T84
gNNZqfG1VazC0Ef3NZ.4P.gQgwc4lujjDOucjJOYe15JloxqOtIkinGdjMEg
w0FF+wZepEeNs3S8sOXpYePnjwcAdh5Ep2tV8CAybxPC4Pi8.OXG8IOXm8MQ
myp8NG9MQmizdmi7lnygauyYNQcNqd04rmWYt904nyqLW+5blyqLGSaSZlSp
IMas6GVSZ+voWLq16Gk2rZlqWHlcR+6TyD6chjFFtZegZ74lSEeulwvsQIq7
hNYZ9ZaBEu9PmquoFY+tU0QDoe5MXkovm4zdnhvjIHr0LkZStmXq3BPFeZwe
eeVF2mrui+mFeP7q+CO7vH0kshRzyfRNp3SXH0TQXOpDl0ADgAL6mYAaCdJ0
3q9g+52+I9O9e8W8Ce+WI+qey72+5u8O+0F2lueEWSofKZa7I4O2zaYmRToL
aoD5kRWp0YQkl+eqHDxcZJNDhuwtm+3iIYQ9F25EWD5EE5kyGw9VdnQqShRx
LvKO7e2leumexi2s1KmKFKpmjcdE24GtYy97fi+j7v3erHowaOx6Y9Wg+lqp
AAiOhWhrrXFeDsjgrLP7uUUNmL9WIwdqST2PDatAoVMRXkbcxdULGj5DB2Qx
p5MKkolXZKU9gMc.TP+PrjKNJybbYH33toYAoAw9FxaLTLfJw.aXqxCrs8+q
omSvpJcgpxYwTqmiwngfPUwf+pQDTiCrnUcD9.PEbkv+sWbtw+TjqyVwFzYD
Vpxdc43mJDB2IzT8px2mJRbctZlgZf+MABjIj.QgX7uICFTYpfRJydOnv.AP
MlcqWxMbu1yO3k9V9SrxhlAKyfmyfK+sc6iJBWeuWbbPTd31XNWoM8.tcRPI
6Ug+5dO+1oZ1Eo5xhczFuzZZo5AYdj6gdQ+KnuJcVkEdZ0u6Kk0oauNrYxqW
Q9FUkb1P..lJyqpQ8FBqsa..RM2MgQb.jG1EW3g6STVvutOHd8yh4B231hjT
tiZae1PHIDjwc2p3diakwiaPLtkaiIMIl6d18bqaohFpmHkoDhXkN7RcGJT4
GtV31mW1ysBXTqY.vvTD5RXFsAlEk73PfrRgKWIVQYzoBxXeYqjRWEYRvSX7
y1yUkA+s8unfYXEmsb7P2gN9PWkJq8fTIJR1tMp2k3dEsXZOtQD5jVny0zfD
ElxiLsclo4kA.jD.nvt5NrgbzfO1eIUGhpt8U9uMARpXXcXSTl9uvG8BysE6
sKUTCjbCL8kpsTiYYVVIprAagpEG3tQa25rQ.hMeigYuW5Bk1osJKfavY9LH
mbpgp9VIgqVeF.q9xb.kERc5KOrbomY0L88fxBsAk.6slpa4xpYxDQYfRej9
qCpVzfSGAZAJAhGp.5jQezEiNwPbJIbG2y2FSSWeW5m18KUQ7NScKhFj6uLy
YxsI9ft9AQdO+hnxaQHwb6KFZKu+x5LyxXpU01LyYhmrHFv9dT3Ee+Kmm5wW
dlxXLUkcylXp2BRK2e6f8rjVRnfq3aQluXfp7gnLdNviAxBOeJyEdo790K8d
MtqlQPGGrJWXSrzK0FZc2zv3JSXmpBO9bDVhN11kATTtH36O7v6mqS3Xy5tV
ir.lmvgMAwXroj46XhlnoHlNWyHv1fBQsrXrKLJJLOfC798dF8vHkAtR3.WF
Hc2ZFlWLQfsgIl.mumu4ECzR5vGJuLAHDk7N1dhMGfgzM8MYI6xed2pj9WJ.
VDkruZlaswvlFbHmOfWsDzzevN0rBnVn+1vtgVXC3d1QTRhnjFRxJFHEpVh+
PumcvlugxyCh3zTRllSH1YljDaLtQXLWtVtFs9rq4hoKDEW1fMrYaxT92nVr
XCeqMPaffLg.Aa3V3sU65GLUZ8lCf.fn0ZYyuXZ14KJq2gIcmu.6hdemu38c
9h224Kdemu.nc9h22wBdeGK38crf22wBdeGK38crf22wBdeGK38crf2p6XA8
bE25LuqUYHVgo+QZE29VYEHCxxz17s7Bbm7VdqA.++iapB+AZ6n3M8F4w7tE
n.x9DyeT1DA5bt12Gm5s9W5coTTV8wXjpVJF9Bm+PEGetIV2A3xfRRyCNuBN
kUSOQkWA7TWHIXGzDlfESxXSgNSU9.yPBVreijCcJVs0HnRvDz4PeX0b9.KE
FSGUQQwNr.eoN.VILXlyLkM4Bi7BurBiOsPlAYzmVzYs1qAffUq4aLx7BLWZ
ml1D8FgkMU2o5bC3LGe.X1LtJYwVp4zcB47rYiyi379AjJzRHnjWScF5nXk7
UYencnfB7YfQnQX+2SfT0zGFqV5lngVkWMOELNqzLnKNndurDp1BjHSz5BCa
4BJSs+GqIL0vPll0C.AME5Lm1iLopps1YbTS2FjlsShGg+kCUd0jnXpTXcpv
ZPKhFQtC81F7JBzxgQQLt+OTGL5radQ5S9Jg4R1uZAVXZAF4CoA3OGsL+vpL
u2LXKk8WSv2rwvVPVIVRVobmvBYPZ2OJqy5iLSsfCjBxNVC0MpxQYp9+NsUM
rxsuKAbzRCzx9ygUGgXNt5cNS0SYXPOHsF5dKRMMppe3IX2EASgTWsZKCiLf
f7XM1F7Xl.yLgr5QUyhiAY.NEVQkpcFNl4HcAta0SHcFLM4QCb+UOKoUKkGg
zAOB6FtxSGjooyh4aS9rh2gmxM4SLwcl7Z5O8WFCS0ZjKRuywTwSwpZ3S7u+
9XeQUMXP9zhAuPNTk6MF3isRLwZBrB+4jjcCULubWZ0AX5D6NAzoW756SxF5
XqtpfebAdHGr4DPoRaB8uFzcUq3L0Du3h.lPIvuixlG4sx3VQ4paT3uLKova
4O+TdusVUU78kkZ5vCBP2yX3Z+dj63sU06kKEisYhh9h4hvtx+h+OHaGdmZY
YtvfA+TqvGCwRcJNoHbyyC83oknbQw0Zrmdqcrx0vPF+PVfmeOWatmaGnnJc
a1UQEOrkla6TNfqG2zHumW40eCe3xsT.EAVdFDRPCyUlt7AcX9l0EG1OLOMI
O.NlLFqRmTIHTt6aCFW1DP1bWXRyIgG..AUkCFkXOCV.gLK.hWVAjHBtoHho
MrHBjVBhBeHX4Vuv3WZaks85m1y88LLVk+BUkGfEq3p9tqU+pROnbFlTABbi
nSl2vPhXg9Tlh55I4D0xJ+mbtnkvGUGI0EPxYJkjG7h1Gjr40qBtCu9nj3sc
irG8Q2w4Qxx4eIp0mFJqWkOZiZ844beZKzrkp.51dO6iCKpWfQzqaVzMPVdK
9dqew.2+xZnRDiTt2xcIGNZSJ.CrGn6RdHLn+63IMplcQ.TCNU1snpnoCnfN
uOBjPcjKb3rWXSZtfx3+QtmmXMjqz1D+k7vU.6RPhBUBYb6igw9IOVeFMfwX
tG3LwVhK2A0pqHHS9ePH76KOsFpZI31oUpO64sUAzpRB8YLiadtf.14wMc7T
8T3zEevRCa6xu2wEAthYcZw2UxxdcQ2wraVgjcUvcTaUs61pfg1sEUq1x5nJ
r9jpNbjMN5RMNoQkEN31hPY5zVU8nY.TITq1AU73Zbwwu8kITFDzoKd1ZJa1
b0Tr4inzglbfPhT3O0gBBuiVhhUenw2RHcZoQqQqE7YABeBoQKINjpZ9o1E5
mlvihNuNw0LwrpWtmpfcnVsbYY4afcX10WNZbRKAZaHjyDGCUMVPImEoFqjl
3nvQWthIHsk4rzVJLDMKXH43E7RGsEyDBSPHcFSzg.gTniVCA5h.YLPsjBAg
rrzQvndU4Mx1xd1ZKk+tWT4hBxPtHcLFpZqwpbYpiTHwzcRbs1RKU.K5Q9Eb
75vZDNqMeBODs.YPbWSdPcd415Dy2uxM.Goa.lkEMc4.8xKgVHPuNrnnFmh3
PrzaXL3bPCeQB0Er1hnUaMZWbLczJVDzYk3nDkqkpZafGbJpsKUkyC1hwZ4R
Ltbq519vkegLYgQ5ndQQp7bvsvUeI3cXFUKoNmov.OSGSrrIYrElNJ111ewZ
Z0Lffg1fldH9jXKkokcbWHhHPOpj1NUNN2FN4s1UbprYiJYsSkliqo0YVKXP
vJ0JJHJaJzS0ZxVk9+MZhTmQHsfXtMbr0klFcnxVy07B5nEeBhfW0SXbhlQb
ScU4.WaWu19zY2Fp3vzqwcwe4P8SyVAP1er0QCxFh4+wVmAsrgHHGaczfp5N
ii0QzxCOxjHy5fzk0M1gNr0YpfXNyGfNI5g1ZEZrTYcz.JRqo8ACRT35n2YA
QSwblsVRqwofXbeSsxG34izFoNtycTq1IKUb2GeElJiB2UMGWxqFqqQ5v1MI
PAQWzgE6oPkUy4dG+EqsIzIInAsHaokJBHlO5oB.TNFwzqTFnfT0K8PHdbxM
DsYditozYbaKHrAnSCQAIKhyWKQlsVxb1ZIslVPPZJslPdPZIpNUbPc5LGme
GyGixdVguKOFJXMEVqlBCB.dw1hAShtzK4SfTwjZwsvfXSmn0joCxbCni67P
PRNZM7AArlBqSSMZYcKGsyd83aK8xTNHPnlklg0Q.cWkQfa4tFoEosKwphLP
bFdUcI3typWgUiMAovp0JEQvToPTsl+RXFWTuQqLc.qsvZ0VyT8KXNMS.soV
08J1c1lfuSEofpNDvty2nmZ4UOTsEYXkVoZE3bxgemnUN4Pu6jC7tWeX208A
c2oGxcx815tNb6t92u9+BCEP5rC
-----------end_max5_patcher-----------
</code></pre>
"
eLHSyF7f,Untitled,samipote,Python,Saturday 14th of October 2023 02:28:28 PM CDT,"odds_shark['game_date'] = pd.to_datetime(odds_shark['Date']).dt.date

combined_team_performance = combined_team_performance.merge(odds_shark,
                                                            left_on=['game_date', 'home_team', 'away_team'],
                                                            right_on=['game_date', 'Home Name', 'Away Name'])

combined_team_performance['is_home_team'] = (combined_team_performance['home_team'] == combined_team_performance['team_ID']).astype(int)

combined_team_performance = combined_team_performance.sort_values(by='game_date')

# Converting string to numpy datetime64
train_cutoff_date = np.datetime64('2023-03-01')
test_cutoff_date = np.datetime64('2023-03-01')

print('Min date:', combined_team_performance['game_date'].min())
print('Max date:', combined_team_performance['game_date'].max())

train_data = combined_team_performance[combined_team_performance['game_date'] <= train_cutoff_date]
test_data = combined_team_performance[combined_team_performance['game_date'] > test_cutoff_date]

X_train = train_data[['lagged_OPS', 'lagged_DPS', 'lagged_GPS', 'lagged_PS', 'lagged_adj_OGAR', 'lagged_adj_DGAR', 'lagged_adj_GGAR', 'lagged_adj_GAR', 'Home MoneyLine','Away MoneyLine','home_team_elo', 'away_team_elo', 'is_home_team']]
y_train = train_data['won_game']

X_test = test_data[['lagged_OPS', 'lagged_DPS', 'lagged_GPS', 'lagged_PS', 'lagged_adj_OGAR', 'lagged_adj_DGAR', 'lagged_adj_GGAR', 'lagged_adj_GAR', 'Home MoneyLine','Away MoneyLine','home_team_elo', 'away_team_elo', 'is_home_team']]
y_test = test_data['won_game']

rfc = xgb.XGBClassifier(objective='binary:logistic', use_label_encoder=False, eval_metric='logloss')

tscv = TimeSeriesSplit(n_splits=5)

def evaluate_model(model, X, y, folds):
    cross_val_scores = []
    for train_index, val_index in folds.split(X, y):
        X_train_fold, X_val_fold = X.iloc[train_index], X.iloc[val_index]
        y_train_fold, y_val_fold = y.iloc[train_index], y.iloc[val_index]

        # Point 2: Impute within cross-validation loop to avoid leakage
        imputer = SimpleImputer()  # or another imputer as per your requirement
        X_train_fold_imputed = imputer.fit_transform(X_train_fold)
        X_val_fold_imputed = imputer.transform(X_val_fold)

        model.fit(X_train_fold_imputed, y_train_fold)
        calibrated_model = CalibratedClassifierCV(model, method='sigmoid', cv='prefit')
        calibrated_model.fit(X_val_fold_imputed, y_val_fold)

        y_pred_cali = calibrated_model.predict_proba(X_val_fold_imputed)
        loss = log_loss(y_val_fold, y_pred_cali)
        cross_val_scores.append(loss)

        print(""Log loss:"", loss)

    print(""Cross-validation scores:"", cross_val_scores)
    print(""Mean cross-validation score:"", np.mean(cross_val_scores))

evaluate_model(rfc, X_train, y_train, tscv)

# Refit the model with all training data before evaluation on the test set
imputer = SimpleImputer()
X_train_imputed = imputer.fit_transform(X_train)
X_test_imputed = imputer.transform(X_test)

rfc.fit(X_train_imputed, y_train)"
Xb5frKYs,Untitled,michelangelodr,Arduino,Saturday 14th of October 2023 02:27:38 PM CDT,"// Emula tasti pc CTRL e ALT 
const int altButtonPin = 1;  // Pin per il pulsante che emula ALT
const int ctrlButtonPin = 2;  // Pin per il pulsante che emula CTRL

void setup() {
  pinMode(altButtonPin, INPUT_PULLUP);
  pinMode(ctrlButtonPin, INPUT_PULLUP);
  Keyboard.begin();
}

void loop() {
  // Leggi lo stato dei pulsanti
  int altButtonState = digitalRead(altButtonPin);
  int ctrlButtonState = digitalRead(ctrlButtonPin);

  // Emula la pressione del tasto ALT se il pulsante ALT è premuto
  if (altButtonState == LOW) {
    Keyboard.press(KEY_LEFT_ALT);
    delay(10);  // Attendi brevemente per evitare la pressione continua
  } else {
    Keyboard.release(KEY_LEFT_ALT);
  }

  // Emula la pressione del tasto CTRL se il pulsante CTRL è premuto
  if (ctrlButtonState == LOW) {
    Keyboard.press(KEY_LEFT_CTRL);
    delay(10);  // Attendi brevemente per evitare la pressione continua
  } else {
    Keyboard.release(KEY_LEFT_CTRL);
  }
}
"
XdYLJw4q,Untitled,nq1s788,Python,Saturday 14th of October 2023 01:59:26 PM CDT,"x = int(input()) #число в десятичной системе
print(bin(x)[2:]) #переводит в двоичную систему
ostatki = '' #все остатки от деления
while x > 0:
    ostatki = str(x % 2) + ostatki
    x //= 2 #x = x // 2
print(ostatki)"
t1yQrcRN,Untitled,EAnchugov,Java,Saturday 14th of October 2023 01:39:00 PM CDT,"import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.util.Arrays;

public class UpdateClassFile {
    //Прописать путь до папки с апдейтами
    static String source = ""src/task/update"";
    static String updateTarget = ""src/task/"";

    public static void main(String[] args) {
        update();
    }

    public static void update () {
        updateFolder(source);
    }

    // Рекурсивно проходим по дереву, вытаскиваем все файлы по одному в заданном порядке и передаем на обработку
    public static void updateFolder (String folderPath) {
        File folder = new File(folderPath);
        File[] files = folder.listFiles();
        if (files == null || files.length == 0) {
            System.out.println(""Папка пуста или указана неверно"");
        } else {
            Arrays.sort(files);
            for (File file: files) {
                if (file.isDirectory()) {
                    updateFolder(file.getPath());
                } else {
//                    System.out.println(file.getClass().getCanonicalName());
                    prepareToCopy(file.getPath());
                }
            }
        }
    }

    //Подготавливаем файл к копированию
    private static void prepareToCopy(String path) {
        try {
            byte[] bytecode = Files.readAllBytes(Path.of(path));
            String bytecodeAsString = new String(bytecode);
            getPathFromBytecodeString(bytecodeAsString);
            //Передаем файл на копирование
            moveFileTo(path,getPathFromBytecodeString(bytecodeAsString));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //Получаем директорию из байткода файла
    // Не уверен, что учел все случаи
    private static String getPathFromBytecodeString(String bytecodeAsString) {
        int end;
        int begin;
        StringBuilder stringBuffer = new StringBuilder(bytecodeAsString);
        begin = stringBuffer.indexOf(""com/tehnologia"");
        stringBuffer.delete(0,begin);
        end = stringBuffer.indexOf(""Version"") - 6;
        if (end > 0 ) {
            stringBuffer.delete(end,stringBuffer.length());
        }
        end = stringBuffer.indexOf(""init"") - 7;
        if (end > 0 ) {
            stringBuffer.delete(end,stringBuffer.length());
        }
        return String.valueOf(stringBuffer);
    }

//Копируем и удаляем
    private static void moveFileTo(String from, String to) {
        StringBuilder stringBuffer = new StringBuilder(from);
        stringBuffer.delete(0,stringBuffer.lastIndexOf(""/""));
        Path source = Path.of(from);
        Path target = Path.of(updateTarget + to + stringBuffer);
        try {
            Files.createDirectories(target.getParent());
            Files.copy(source, target, StandardCopyOption.REPLACE_EXISTING);
            Files.delete(Path.of(from));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
"
ikYQ4bQR,archivos,teslariu,Python,Saturday 14th of October 2023 01:38:25 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

""""""
Script que genera un archivo con temperaturas en ºC. Luego, genera otro 
similar a partir del primero pero con las temperaturas en ºF

funciones: open,close,read,write,readline,writeline,readlines,writelines 

========= ===============================================================
Character Meaning
--------- ---------------------------------------------------------------
'r'       open for reading (default)
'w'       open for writing, truncating the file first
'x'       create a new file and open it for writing
'a'       open for writing, appending to the end of the file if it exists
'b'       binary mode
't'       text mode (default)
'+'       open a disk file for updating (reading and writing)
'U'       universal newline mode (deprecated)
========= ===============================================================

The default mode is 'rt' (open for reading text). For binary random
access, the mode 'w+b' opens and truncates the file to 0 bytes, while
'r+b' opens the file without truncation. The 'x' mode implies 'w' and
raises an `FileExistsError` if the file already exists.
""""""
# creo un archivo nuevo ""celsius.txt""
try:
	f = open(""celsius.txt"", ""x"")
except FileExistsError:
	f = open(""celsius.txt"",""a"")

# creo una lista de datos
datos = [""10ºC\n"",""12.5ºC\n"",""-0.58ºC\n"", ""215ºC\n"", ""-25.8ºC\n""]

# escribo los datos en el archivo
f.writelines(datos)

# cierro el archivo
f.close()

# abro de nuevo el archivo para agregarle datos. Esta forma de apertura
# LO CIERRA AUTOMATICAMENTE
with open(""celsius.txt"",""a"") as f:
	f.write(""11.5ºC\n"")
	
# imprimo el contenido
with open(""celsius.txt"") as f:
	print(f.read())
	
# creo el archivo ""farenheit.txt""
try:
	f = open(""farenheit.txt"", ""x"")
except FileExistsError:
	f = open(""farenheit.txt"",""a"")
	
# abro celsius.txt para leer sus datos
with open(""celsius.txt"") as f1:
	datos = f1.readlines()
	
# lleno el archivo farenheit con los datos
for dato in datos:
	temp, _ = dato.split(""º"")
	temp = float(temp) * 1.8 + 32
	f.write(f""{temp:.1f}ºF\n"")
	
# cierro el archivo farenheit
f.close()

# imprimo el contenido de farenheit
with open(""farenheit.txt"") as f:
	print(f.read())















"
4XWdEpY7,IhateEratikS's Data,azimuths,JSON,Saturday 14th of October 2023 12:55:07 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-66""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""1780""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""63""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""-170""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""138""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""209""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""83""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4006""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1697305723""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""2425""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Nick(19)350122""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""65""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""131""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""65""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5542""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""616""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""226""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Nick""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""19""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""}},""Skilltree"":[],""Copy"":[]}"
3Wqhrqcj,Open DB Accurate,jamboljack,PHP,Saturday 14th of October 2023 12:46:14 PM CDT,"public function koneksiaccurate()
    {
        $dataMeta    = $this->db->get_where('app_meta', array('meta_id' => 1))->row();
        $accessToken = $this->gettoken();
        $IDAccurate  = $dataMeta->meta_id_accurate;
        $header      = array(
            ""Authorization: Basic "" . $accessToken,
        );

        $url  = ""https://account.accurate.id/api/open-db.do?id="" . $IDAccurate;
        $opts = array(""http"" => array(
            ""method""        => ""GET"",
            ""header""        => $header,
            ""ignore_errors"" => true,
        ),
        );
        $context  = stream_context_create($opts);
        $response = file_get_contents($url, false, $context);
        print_r($response);
    }"
c09ddRCF,BWR - Changelog 14/10/23,SSilver,Diff,Saturday 14th of October 2023 12:45:47 PM CDT,"Halloween
~ Fixed post-kill item spawns for medieval halloween maps spawning both ammo and health, now only spawning health
+ Crit pumpkins now show a team-colored aura, only being collectable by the team of the killer
Team-colored pumpkins meant to make sure your own teammates aren't punished by a pumpkin you generate.

Weapon Switching
+ Fixed bug where slower holster would persist while M1 was held
Compression Blast
+ Dragon's Fury push-force was altered to be more consistent
+ Increased base force by +15%
- Backburner push-force corrected from being slightly too high
Correcting some bugged behavior with the mod. Airblast force was given a slight tweak, backburner's should still remain the same while other flamethrowers get a slightly higher kick.

Thermal Thruster
+ Hover initial horizontal force increased by 33%
+ Hold JUMP during Hover to increase vertical force
- Hover initial vertical force decreased by 50%
Hover was given more flexibility, able to cover more horizontal ground while giving the user the option to gain significant height if they wish.

Ullapool Caber
+ Decreased deploy penalty to 75% slower (was 100%)
Changed to make the Caber slightly less punishing to switch to, particularly compared to sword options with their extra range.

Neon Annihilator
+ Weapon starts intact on spawn
- Increased deploy penalty to 75% slower (was 50%)
In making the initial blast available out of spawn, the deploy speed was slowed due to the blast being more active in conjunction with the added range.

Reserve Shooter
+ Added: Mini-crits while airblast jumping
An experiment to give the weapon an additional use case on pyro, combing with his standard movement ability.

Claidheamh Mor
+ Added: Kills with this weapon reloads your primary & secondary clips by 1
An additional tweak to the weapon to synergize better with hybrid loadouts and have a useful function even when used on stock demo."
3ESE7JU3,DaVinci Resolve at Linux Mint,Rnery,Bash,Saturday 14th of October 2023 12:37:39 PM CDT,"#!/usr/bin/env bash

check_system_support() {
  if [ ""$(uname -m)"" != ""x86_64"" ]; then
    echo ""O DaVinci Resolve não é suportado em sistemas não x86_64.""
    exit 1
  fi
}

install_dependencies() {
  apt update
  apt install -y libssl1.0.0 ocl-icd-opencl-dev
}

download_davinci_resolve() {
  wget https://www.blackmagicdesign.com/api/download/download-file/70649d347acc47f6b06c19cc4a92dce3/1a96819669ac4f7a8133df983f9852e2/linux
}

extract_davinci_resolve() {
  tar -xJf DaVinci_Resolve_*.tar.xz
}

install_davinci_resolve() {
  cd DaVinci_Resolve_*
  ./DaVinci_Resolve_*.run
  cd ..
}

cleanup_files() {
  rm -rf DaVinci_Resolve_*.tar.xz DaVinci_Resolve_*
}

install_davinci_resolve_main() {
  check_system_support
  install_dependencies
  download_davinci_resolve
  extract_davinci_resolve
  install_davinci_resolve
  cleanup_files
  echo ""DaVinci Resolve foi instalado com sucesso.""
}

install_davinci_resolve_main
"
zPWZcDDY,BuildStraightWall,Phemto,Lua,Saturday 14th of October 2023 12:32:29 PM CDT,"--Create a wall of a give height and length
--Start in block that's the one end of the wall with chest behind holding extra material
--also have chest above and behind the supply chess to hold anything it picks up. 

width = 9	--width of the area to mine. (Actually 2 * width +1
theta = 246 --sweep of the spiral
step = 0.001 --change in theta each step
b = 0.14   --growth factor for spiral
columnList = "" "" --list of columns visited
radius = 9 --radius of the dome
AR = 0.8	--aspect ratio. 1 = spherical
firstEmptyChest = 4
Vertical_Offset = -6	--Move the dome up/down by this much relative to the starting point

wallLength = 82			--length of the wall
wallHeight = 30			--height of the wall


curX = 0 	--current X position relative to the start
curY = 0	--current Y position relative to the start
curZ = 0	--current Z position relative to the start
facing = 0	--what direction is the turtle facing (0,1,2,3)
			--0 is toward positive Z
waterLevel = -1000 --the highest location that water has been found
lavaSum = 0

function fuel(direction)
		--called periodically, and also when lava is detected. 
		--print(""refueling "", direction)
		turtle.select(1)
		--Now let's pickup the lava 
		if direction == 1 then
			--its in front
			turtle.place()
		elseif direction == 2 then
			turtle.placeDown()
			lavaSum = lavaSum + curY
			lavaCount = lavaCount + 1
		elseif direction == 3 then
			turtle.placeUp()
			lavaSum = lavaSum + curY
			lavaCount = lavaCount + 1
		end
		if turtle.getFuelLevel() < 19000 then
				for slot = 4,16,1 do
					turtle.select(slot)
					turtle.refuel()
					if turtle.compareTo(1) then
						turtle.transferTo(1)
					end
					if turtle.getFuelLevel() > 19000 then
						break
					end
				end
			if curY >=0 and turtle.getFuelLevel() < 1000 then
				local oldY = curY
				for i=1,4,1 do
					if not turtle.detectUp() then Up() end
				end
				repeat 
					--Time to refuel
					for slot = 4,16,1 do
						turtle.select(slot)
						turtle.refuel()
						if turtle.compareTo(1) then
							turtle.transferTo(1)
						end
					end
				until (turtle.getFuelLevel() > 1000)   --don't stop trying if the level is too low
				MoveTo(curX,oldY,curZ)
			end
		end
		turtle.select(1)
	    print(turtle.getFuelLevel(), "" "", theta)
end

function lavaFuel()
		--refuel from onboard lava buckets. 
		--if fuel is full, then dump excess in lava repository below (0,0,0)
		if turtle.getFuelLevel() < 19000 then
				for slot = 4,16,1 do
					turtle.select(slot)
					turtle.refuel()
					if turtle.compareTo(1) then
						turtle.transferTo(1)
					end
					if turtle.getFuelLevel() > 19000 then
						break
					end
				end
		end
		lava = 0 
		for slot = 4,16,1 do
			local data = turtle.getItemDetail(slot)
			if data and string.find(data.name,""lava"") then 
				lava = lava + 1
			end
		end
		while lava > 0 or turtle.getFuelLevel() < 2000 do
			--either we have excess fuel or level is too low. 
			--time to go to the repository
			print(""Going down to repository"")
			MoveTo(0,curY,0)
			local success, data = turtle.inspectDown()
			while not success or 
					  not ( 	(success and 
									string.find(data.name,""bedrock"")
								) or 
									success and string.find(data.name, "":lava"") 
					  ) do
				Down()
				success, data = turtle.inspectDown()
			end
			--We're now either over lava or over bedrock
			if turtle.getFuelLevel() < 2000 then 
				--we're here to pick up lava
				done = 0
				while done==0 do
					for i=0,3,1 do
						fuel(""f"")
						TRight()
					end
					fuel(""d"")
					Down()
					if turtle.getFuelLevel() > 15000 or turtle.detectDown() then
						done = 1
					end
				end
			else 
				--we're here to deposit
				local done = 0
				local dir = 0
				while done == 0 do 
					done = 1
					for s = 4,16,1 do 
						data = turtle.getItemDetail(s)
						if data and string.find(data.name,""lava"") then 
							turtle.select(s)
							if dir < 4 then 
								TurnTo(dir)
								if turtle.place() then
									turtle.transferTo(1)
								end
							else
								--we've already gone in all directions.
								Up()
								if turtle.placeDown() then 
									turtle.transferTo(1)
								end
								dir = -1
							end
							done = 0
							dir = dir + 1
						end
					end
				end
			end
			if curY == -1 then
				--we've filled the repository 
				MoveTo(0,10,0)
				os.exit()
			end
			MoveTo(0,1,0)
			if turtle.getFuelLevel() < 2000 then
				MoveTo(0,1,1)   --park position
				sleep(120)
				fuel(""n"")				
			end
			MoveTo(0,1,0)
			lava = 0 
			for slot = 4,16,1 do
				local data = turtle.getItemDetail(slot)
				if data and string.find(data.name,""lava"") then 
					lava = lava + 1
				end
			end	
		end
end

function SlotItems(slot)
	turtle.select(slot)
	if turtle.getItemCount() == 0 then
		return ""nothing""
	else 
		local data =  turtle.getItemDetail()
		return data.name
	end
end		

function TRight()
    --Turn the turtle to the right
    turtle.turnRight()
    facing = facing +1
    if facing > 3 then
        facing = facing - 4
    end
end

function TLeft()
    --Turn the turtle to the right
    turtle.turnLeft()
    facing = facing - 1
    if facing < 0 then
        facing = facing + 4
    end
end
 
function Forward()
	 local success, data = turtle.inspect()
     if success then
		local count = 0
		if string.find(data.name, ""urtle"") then 
			local p=0
        	while success do
 	 			if not p then 
					print(""Turtle detected: Can't move forward!"")
					p=1
				end
				sleep(math.random(10))
				success, data = turtle.inspect()
				count = count + 1
				if count > 4 and count % 10 == 4 then
					if not turtle.detectUp() then
						Up()
						sleep(12)
						Down()
					elseif not turtle.detectDown() then
						Down()
						sleep(12)
						Up()
					end
				end
			end
		end
		if success and string.find(data.name, ""lava"") then
				fuel(1)
		end
	end
	while not turtle.forward() do
		        	turtle.dig()
	end
    if facing == 0 then
		curZ = curZ + 1
	elseif facing == 1 then
		curX = curX +1
	elseif facing == 2 then
		curZ = curZ - 1
	else
		curX = curX - 1
	end
end
 
function Up()
	local success, data = turtle.inspectUp()
     if success then
		local count = 0
		if string.find(data.name, ""urtle"") then
			local p = 0
    	    while success do
 		 		if not p then 
					print(""Turtle detected: Can't move up!"")
					p=1
				end
				sleep(math.random(10))
				success, data = turtle.inspectUp()
				count = count +1
				if count > 3 and count % 10 == 4 then
					local olddir = facing
					while turtle.detect() do
						TRight()
					end
					Forward()
					sleep(12)
					TRight()
					TRight()
					Forward()
					TurnTo(olddir)
				end
			end
		end
		if success and string.find(data.name, ""lava"") then
				fuel(3)
		end
	end
    while not turtle.up() do
        turtle.digUp()
    end
	curY = curY + 1
end
 
function Down()
		local success, data = turtle.inspectDown()
        if success then
			--print(data.name)
			local count = 0
			if string.find(data.name, ""urtle"") then
				local p = 0
				while success do
 					if not p then 
						print(""Turtle detected: Can't move down"")
						p=1
					end
					sleep(math.random(10))
					success, data = turtle.inspectDown()
					count = count +1
					if count > 3 and count % 10 == 4 then
						local olddir = facing
						while turtle.detect() do
							TRight()
						end
						Forward()
						sleep(12)
						TRight()
						TRight()
						Forward()
						TurnTo(olddir)
					end
					if count > 200 then
						turtle.digDown()  --the turtle is not getting out of the way. Eat it. 
					end
				end
			end
		end
		if success and string.find(data.name, ""lava"") and not string.find(data.name, ""flowing"") then
			fuel(2)
		end
		if success and string.find(data.name, ""bedrock"") then
			--we've hit bedrock. We can't go further. 
			--print(""hit bedrock. Returning 0"")
			return 0
		end
    while not turtle.down() do
        turtle.digDown()
    end
	curY = curY - 1
	return 1
end

function TurnTo(face)
	if (face - facing) % 4 == 1 then 
		while (facing ~= face) do
			TRight()
		end
	else
		while (facing ~= face) do
			TLeft()
		end
	end		
end

function MoveTo (MoveToX, MoveToY, MoveToZ) 
	--Move the turtle to the desired position
	--first X
	--print(MoveToX, "" "" , MoveToY, "" "" ,MoveToZ)
	UseY = MoveToY 
	if MoveToX < curX then 
		TurnTo(3)
		while MoveToX < curX do
			Forward()
		end
	elseif MoveToX > curX then
		TurnTo(1) 
		while MoveToX > curX do
			Forward()
		end
	end 
	--Now Z
	if MoveToZ < curZ then 
		TurnTo(2)
		while MoveToZ < curZ do
			Forward()
		end
	elseif MoveToZ > curZ then
		TurnTo(0) 
		while MoveToZ > curZ do
			Forward()
		end
	end 
	--Now Y
	if UseY < curY then
		while UseY < curY do 
			Down()
		end
	end
	while UseY > curY do
		Up()
	end
end --MoveTo

function cobbleBelow()
	local success, data = turtle.inspectDown()
	if success then 
 		if string.find(data.name, ""cobble"") or string.find(data.name, ""urtle"") then
			return 1
		end
	end
	return nil
end

function Set(direction,StartSlot,EndSlot)
	--print(""Setting block"", direction, StartSlot, EndSlot)
		for slot = StartSlot,EndSlot,1 do
			turtle.select(slot)
			if turtle.getItemCount() > 1 then
				if string.find(direction, ""d"") then
					turtle.placeDown()
					return(1)
				elseif string.find(direction, ""u"") then
					turtle.placeUp()
					return(1)
				else 
					--forward
					turtle.place()
					return(1)
				end
				turtle.transferTo(StartSlot)
			end
		end
			--if we made it this far, then we must be out
			--return to home and wait to be reloaded
	replenishCobble()
	Set(direction, StartSlot, EndSlot)
end

function replenishCobble()
	--return to the chests and load up on cobble.
	local XX = curX
	local YY = curY
	local ZZ = curZ
	oldfacing = facing
	if curX < 0 then 
		MoveTo(curX+3,curY,curZ) 
	else 
		MoveTo(curX-3,curY,curZ) 
	end
	if curZ < 0 then 
		MoveTo(curX,curY,curZ+3) 
	else 
		MoveTo(curX,curY,curZ-3) 
	end
	MoveTo(curX,5,curZ)
	MoveTo(0,0,0)
	local chestNum = 11
	local needMore = 1
	for slot = 1,16,1 do
		turtle.select(slot)
		turtle.suckDown()	
		if turtle.getItemCount() < 64 then 
			needMore = 1
		end
	end
	MoveTo(0,5,0)
	MoveTo(math.floor(XX*0.9),5,math.floor(ZZ*0.9))
	MoveTo(math.floor(XX*0.9),0,math.floor(ZZ*0.9))
	MoveTo(XX,YY,ZZ)
	TurnTo(oldfacing)
end


--Start the program
for z=0,wallLength,1 do 
	for y=1,wallHeight+1,1 do 
		MoveTo(curX,y,z)
		Set(""d"",1,15)
		turtle.select(15)
		if turtle.getItemCount(15) < 2 then
			MoveTo(curX,wallHeight+1,curZ)
			MoveTo(curX,wallHeight+1,-1)
			MoveTo(curX,1,-1)
			TurnTo(2)
			turtle.select(16)
			turtle.drop()
			for i=1,15,1 do
				turtle.select(i)
				turtle.suckDown(64 - turtle.getItemCount(i))
			end
		end
	end
	MoveTo(curX,curY,z+1)
end
			
		"
ADtMiKkm,Config,noif,INI file,Saturday 14th of October 2023 12:23:14 PM CDT,"[custom]
enable_rule_generator=true
overwrite_original_rules=true
clash_rule_base=https://pastebin.com/raw/e7JBB1ar

ruleset=🎯 全球直连,https://pastebin.com/raw/acwmKkTR
ruleset=🚀 节点选择,https://pastebin.com/raw/sQzBPr74

ruleset=🎯 全球直连,[]RULE-SET,applications
ruleset=🎯 全球直连,[]DOMAIN,clash.razord.top
ruleset=🎯 全球直连,[]DOMAIN,yacd.haishan.me
ruleset=🎯 全球直连,[]RULE-SET,private
ruleset=🍃 广告净化,[]RULE-SET,reject

ruleset=📺 Bahamut,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bahamut.list
ruleset=📺 Bilibili,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/SteamCN.list
ruleset=🎮 Steam,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list
ruleset=🌍 国外媒体,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list
ruleset=Ⓜ️ 微软云盘,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/OneDrive.list
ruleset=Ⓜ️ 微软服务,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list

ruleset=🎯 全球直连,[]RULE-SET,icloud
ruleset=🎯 全球直连,[]RULE-SET,apple
ruleset=🎯 全球直连,[]RULE-SET,google
ruleset=📢 谷歌服务,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Google.list
ruleset=🚀 节点选择,[]RULE-SET,proxy
ruleset=🎯 全球直连,[]RULE-SET,direct
ruleset=🎯 全球直连,[]RULE-SET,lancidr
ruleset=🎯 全球直连,[]RULE-SET,cncidr
ruleset=📲 电报信息,[]RULE-SET,telegramcidr

ruleset=🎯 全球直连,[]GEOIP,LAN
ruleset=🎯 全球直连,[]GEOIP,CN
ruleset=🐟 漏网之鱼,[]MATCH
 
custom_proxy_group=🚀 节点选择`select`[]DIRECT`.*
custom_proxy_group=🚀 大流量`select`[]🚀 节点选择`[]DIRECT`.*
custom_proxy_group=📺 Bahamut`select`[]🚀 节点选择`[]🚀 大流量`[]🎯 全球直连`.*
custom_proxy_group=📺 Bilibili`select`[]🚀 节点选择`[]🚀 大流量`[]🎯 全球直连`.*
custom_proxy_group=🎮 Steam`select`[]🚀 节点选择`[]🚀 大流量`[]🎯 全球直连`.*
custom_proxy_group=🌍 国外媒体`select`[]🚀 节点选择`[]🚀 大流量`[]🎯 全球直连`.*
custom_proxy_group=📢 谷歌服务`select`[]🚀 节点选择`[]🎯 全球直连`.*
custom_proxy_group=📲 电报信息`select`[]🚀 节点选择`[]🚀 大流量`[]🎯 全球直连`.*
custom_proxy_group=Ⓜ️ 微软云盘`select`[]🚀 节点选择`[]🚀 大流量`[]🎯 全球直连`.*
custom_proxy_group=Ⓜ️ 微软服务`select`[]🚀 节点选择`[]🎯 全球直连`.*
custom_proxy_group=🍃 广告净化`select`[]REJECT`[]🚀 节点选择`[]🎯 全球直连
custom_proxy_group=🎯 全球直连`select`[]DIRECT`[]🚀 节点选择
custom_proxy_group=🐟 漏网之鱼`select`[]🚀 节点选择`[]🚀 大流量`[]🎯 全球直连`.*
"
7TRcQp53,EMC Graphing,glitchdetector,Lua,Saturday 14th of October 2023 12:19:30 PM CDT,"-- Computercraft Program
-- by glitchdetector

function ReadableNumber(num, places, full)
    num = tonumber(num)
    if not num then return 0 end
    local ret
    local placeValue = (""%%.%df""):format(places or 0)
    local isNegative = num < 0
    num = math.abs(num)
    if num >= 1000000000000 then
        ret = placeValue:format(num / 1000000000000) .. (full and "" trillion"" or ""T"") -- trillion
    elseif num >= 1000000000 then
        ret = placeValue:format(num / 1000000000) .. (full and "" billion"" or ""B"") -- billion
    elseif num >= 1000000 then
        ret = placeValue:format(num / 1000000) .. (full and "" million"" or ""M"") -- million
    elseif num >= 1000 and not full then
        ret = placeValue:format(num / 1000) .. ""k"" -- thousand
    elseif num >= 1 then
        ret = (""%.0f""):format(num) -- hundreds
    else
        ret = num
    end
    return (isNegative and ""- "" or """") .. ret
end

function GetEMC(link)
    local items = link.list()
    if not items then return 0 end
    if not items[1] then return 0 end
    return items[1].count or 0
end

function ClearScreen(monitor)
    monitor.clear()
    monitor.setCursorPos(1, 1)
end

function NextLine(monitor)
    local x, y = monitor.getCursorPos()
    monitor.setCursorPos(1, y + 1)
end

function WriteCenterAligned(monitor, text)
    local w, h = monitor.getSize()
    local x, y = monitor.getCursorPos()
    monitor.setCursorPos(math.ceil(w / 2 - #text / 2), y)
    monitor.write(text)
end

function WriteLeftAligned(monitor, text)
    local x, y = monitor.getCursorPos()
    monitor.setCursorPos(1, y)
    monitor.write(text)
end

function WriteRightAligned(monitor, text)
    local w, h = monitor.getSize()
    local x, y = monitor.getCursorPos()
    monitor.setCursorPos(w - #text + 1, y)
    monitor.write(text)
end

-- Program Code

local Users = {
    {""top"", ""Glitch""},
    {""right"", ""Collins""},
}

for _, user in next, Users do
    user[3] = peripheral.wrap(user[1])
end

local monitor = peripheral.wrap(""monitor_0"")
local graph = peripheral.wrap(""monitor_2"")
local last = 0
local timespan = 1
local timespanFactor = 60 / timespan

local Histories = {}
function CalculateHistory(name, new, limit)
    if not Histories[name] then Histories[name] = {} end
    local history = Histories[name]

    table.insert(history, new)
    while #history > limit do
        table.remove(history, 1)
    end
    local sum = 0
    for _, v in next, history do
        sum = sum + v
    end
    return sum / #history
end

function GraphData(monitor, data, title)
    local w, h = monitor.getSize()
    local max = -math.huge
    local min = math.huge
    for _, v in next, data do
        if v > max then max = v end
        if v < min then min = v end
    end

    local range = max - min
    min = min - range * 0.1
    max = max + range * 0.1
    range = max - min

    local scale = h / range
    if range == 0 then scale = 1 end
    
    local nData = #data
    local dataScale = nData / w
    local lastPos = 0
    for i = 1, w do
        print(""monitor "" .. i .. "" of "" .. w)
        -- get data closest to i
        local dataIndex = math.floor(i * dataScale)
        local v = data[dataIndex] or 0
        
        local bar = math.ceil((v - min) * scale)
        local vPos = math.floor(h - bar + 1)
        
        if i > 1 then
            for j = math.min(vPos, lastPos), math.max(vPos, lastPos) do
                monitor.setCursorPos(i - 1, j)
                monitor.blit("" "", ""f"", ""0"")
            end
        end
        lastPos = vPos

        monitor.setCursorPos(i, vPos)
        monitor.blit("" "", ""f"", ""0"")
    end

    -- Draw min and max values
    monitor.setCursorPos(1, 1)
    monitor.write(ReadableNumber(max, 2, false))
    monitor.setCursorPos(1, h)
    monitor.write(ReadableNumber(min, 2, false))

    -- Draw current value
    local current = data[#data]
    local currentV = lastPos
    local text = ReadableNumber(current, 2, false)
    local textLen = #text
    local textX = math.floor(w - textLen - 2)
    monitor.setCursorPos(textX, currentV)
    monitor.write(text)

    -- Draw title
    local titleLen = #title
    local titleX = math.floor(w / 2 - titleLen / 2)
    monitor.setCursorPos(titleX, 1)
    monitor.write(title)
end

function Graph(monitor, data, title, timeName)
    local w, h = monitor.getSize()
    local x, y = monitor.getCursorPos()
    local max = -math.huge
    local min = math.huge
    for _, v in next, data do
        if v > max then max = v end
        if v < min then min = v end
    end

    local range = max - min
    min = min - range * 0.1
    max = max + range * 0.1
    range = max - min

    local scale = h / range
    if range == 0 then scale = 1 end
    local lastPos = 0
    for i = 1, #data do
        local v = data[i]
        local bar = math.ceil((v - min) * scale)
        local vPos = math.floor(h - bar + 1)
        if i > 1 then
            for j = math.min(vPos, lastPos), math.max(vPos, lastPos) do
                monitor.setCursorPos(i - 1, j)
                monitor.blit("" "", ""f"", ""0"")
            end
        end
        lastPos = vPos
        monitor.setCursorPos(i, vPos)
        monitor.blit("" "", ""f"", ""0"")
    end
    -- Draw min and max values
    monitor.setCursorPos(1, 1)
    monitor.write(ReadableNumber(max, 2, false))
    monitor.setCursorPos(1, h)
    monitor.write(ReadableNumber(min, 2, false))

    -- Draw current value
    local current = data[#data]
    local currentV = lastPos
    local text = ReadableNumber(current, 2, false)
    local textLen = #text
    local textX = math.floor(w - textLen - 2)
    monitor.setCursorPos(textX, currentV)
    monitor.write(text)

    -- Draw title
    local titleLen = #title
    local titleX = math.floor(w / 2 - titleLen / 2)
    monitor.setCursorPos(titleX, 1)
    monitor.write(title)

    -- Footer with time name
    local footer = (""<- %s %s ->""):format(#data, timeName)
    local footerLen = #footer
    local footerX = math.floor(w / 2 - footerLen / 2)
    monitor.setCursorPos(footerX, h)
    monitor.write(footer)
end

-- load list of minutes from file
local minutes = {}
local log = fs.open(""minutes.log"", ""r"")
if log then
    Histories[""sum""] = {}
    local line = log.readLine()
    while line do
        table.insert(Histories[""sum""], tonumber(line))
        line = log.readLine()
    end
    log.close()
end

local tick = 0
while true do
    ClearScreen(monitor)
    WriteCenterAligned(monitor, ""Energy Matter Covalence"")
    NextLine(monitor)
    local sum = 0
    for n, user in next, Users do
        WriteLeftAligned(monitor, user[2])
        local EMC = GetEMC(user[3])
        sum = sum + EMC
        WriteRightAligned(monitor, ReadableNumber(EMC, 2, false) .. "" EMC"")
        NextLine(monitor)
    end
    WriteCenterAligned(monitor, ReadableNumber(sum, 2, true) .. "" EMC"")

    NextLine(monitor)
    local difference = (sum - last)
    local avgDiff = CalculateHistory(""diff"", difference, timespanFactor)
    local isNeg = avgDiff < 0
    if isNeg then
        monitor.setTextColour(colors.red)
    else
        monitor.setTextColour(colors.green)
    end
    last = sum
    WriteCenterAligned(monitor, (isNeg and """" or ""+ "") .. ReadableNumber(avgDiff, 2, true) .. "" / minute"")
    monitor.setTextColour(colors.white)

    graph.setBackgroundColor(colors.black)

    if tick % timespanFactor == 0 then
        local w, h = graph.getSize()
        CalculateHistory(""sum"", sum, w)
        ClearScreen(graph)
        Graph(graph, Histories[""sum""], ""EMC HISTORY"", "" minutes"")

        local log = fs.open(""minutes.log"", ""a"")
        log.writeLine(sum)
        log.close()
    end
    
    tick = tick + 1
    sleep(timespan)
end"
e7JBB1ar,BaseConfig,noif,YAML,Saturday 14th of October 2023 12:11:23 PM CDT,"# HTTP 代理端口
port: 7890

# SOCKS5 代理端口
socks-port: 7891

# Linux 和 macOS 的 redir 代理端口 (如需使用此功能，请取消注释)
# redir-port: 7892

# 允许局域网的连接（可用来共享代理）
allow-lan: true
bind-address: ""*""

# 规则模式：Rule（规则） / Global（全局代理）/ Direct（全局直连）
mode: Rule

# 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / error / warning / info / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。
log-level: info

# Clash 的 RESTful API
external-controller: '127.0.0.1:9090'

dns:
  enable: true
  use-hosts: true
  listen: 0.0.0.0:53
  # fake-ip
  enhanced-mode: fake-ip
  fake-ip-filter:
    - +.stun.*.*
    - +.stun.*.*.*
    - +.stun.*.*.*.*
    - +.stun.*.*.*.*.*
    - ""*.n.n.srv.nintendo.net""
    - +.stun.playstation.net
    - xbox.*.*.microsoft.com
    - ""*.*.xboxlive.com""
    - ""*.msftncsi.com""
    - ""*.msftconnecttest.com""
    - WORKGROUP
  # nameserver
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 114.114.114.114
    - 'https://doh.pub/dns-query'
    - 'https://dns.alidns.com/dns-query'
  # fallback
  fallback:
    - 8.8.8.8 # 谷歌DNS
    - 1.1.1.1 # Cloudflare DNS
    - tls://dns.rubyfish.cn:853
    - tls://1.0.0.1:853
    - tls://dns.google:853
    - 'https://doh.dns.sb/dns-query'
    - 'https://dns.cloudflare.com/dns-query'
    - 'https://dns.twnic.tw/dns-query'
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
    domain:
      - '+.google.com'
      - '+.facebook.com'
      - '+.youtube.com'

cfw-latency-timeout: 3000
cfw-latency-url: http://www.gstatic.com/generate_204

rule-providers:
  reject:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt""
    path: ./ruleset/reject.yaml
    interval: 86400

  icloud:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt""
    path: ./ruleset/icloud.yaml
    interval: 86400

  apple:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt""
    path: ./ruleset/apple.yaml
    interval: 86400

  google:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt""
    path: ./ruleset/google.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt""
    path: ./ruleset/proxy.yaml
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt""
    path: ./ruleset/direct.yaml
    interval: 86400

  private:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt""
    path: ./ruleset/private.yaml
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt""
    path: ./ruleset/gfw.yaml
    interval: 86400

  tld-not-cn:
    type: http
    behavior: domain
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt""
    path: ./ruleset/tld-not-cn.yaml
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt""
    path: ./ruleset/telegramcidr.yaml
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt""
    path: ./ruleset/cncidr.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt""
    path: ./ruleset/lancidr.yaml
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: ""https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt""
    path: ./ruleset/applications.yaml
    interval: 86400"
yxbLKZUY,Clase cliente tp5,LEANDRONIEVA,Java,Saturday 14th of October 2023 12:09:04 PM CDT,"import java.util.Random;
import javax.lang.model.element.Element;

public class Cliente extends Thread{

	private String nombre;
    private static int indice = 0;
    private Mostrador<Element> cola;
	private Random random = new Random();
	private int lim_superior_compra = 400;
	private int lim_inferior_compra = 200;
	private int lim_superior_llegada = 1500;
	private int lim_inferior_llegada = 800;
	
	public Cliente(Mostrador<Element> mostrador) {
		indice++;
		this.nombre = ""Cliente ""+ indice;
		this.cola = mostrador;
	}
	
	public void run() {

		try {
			Thread.sleep(random.nextInt(this.lim_inferior_llegada, this.lim_superior_llegada));
		} catch (InterruptedException e) {
			Thread.currentThread().interrupt();
		}
		
		if(cola.noHayBizc()&&cola.noHayFact()) {
			System.out.println(""Mostrador vacío, cliente ""+indice+"" esperando"");
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		int bizcocho = cola.comprarBizcocho();
		int factura = cola.comprarFactura();

		System.out.println(this.nombre + "" compró: bizcocho "" + bizcocho + "" y facura "" + factura);
		try {
			Thread.sleep(random.nextInt(this.lim_inferior_compra, this.lim_superior_compra));
		} catch (InterruptedException e) {
			Thread.currentThread().interrupt();
		}
	}
}
"
LJXLB0DQ,Clase Mostardor,LEANDRONIEVA,Java,Saturday 14th of October 2023 12:08:22 PM CDT,"import java.util.LinkedList;

public class Mostrador<T> {

    private LinkedList<Integer> bizcochos = new LinkedList<>();
    private LinkedList<Integer> facturas = new LinkedList<>();

    public Mostrador() {
    	
    }
    
    public synchronized boolean noHayBizc() {
    	if (bizcochos.size()<=0) return true;
    	notifyAll();
    	return false;
    }
    
    public synchronized boolean noHayFact() {
    	if (facturas.size()<=0) return true;
    	notifyAll();
    	return false;
    }
    
    public synchronized void agregarBizcocho(int elemento) {
    	 bizcochos.addLast(elemento);
         notifyAll();
    }
    
    public synchronized void agregarFactura(int elemento) {
    	facturas.addLast(elemento);
    	notifyAll();
    }
    
    public synchronized int comprarBizcocho() {
    	while(bizcochos.size()<=0) {
    		try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    	}
    	  int elemento = bizcochos.removeFirst();
          notifyAll();
          return elemento;
    }
    
    public synchronized int comprarFactura() {
    	while(facturas.size()<=0) {
    		try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    	}
    	  int elemento = facturas.removeFirst();
          notifyAll();
          return elemento;
    }
}
"
jbRXHPg2,Clase Factura,LEANDRONIEVA,Java,Saturday 14th of October 2023 12:07:42 PM CDT,"import java.util.Random;
import javax.lang.model.element.Element;

public class Factura extends Thread{

	private static int contador = 0;
    private int indice;
	private Mostrador<Element> cola;
	private Random random = new Random();
	private int lim_superior = 1300;
	private int lim_inferior = 1000;

	public Factura(Mostrador<Element> mostrador) {
		contador++;
		this.indice = contador;
		this.cola = mostrador;
	}

	public void run() {
		while (true) {
			// System.out.println((cola.toString()));
			int elemento = this.indice;
			cola.agregarFactura(elemento);
			System.out.println(""Factura "" + this.indice +"" se añadió al mostrador"");
			try {
				Thread.sleep(random.nextInt(this.lim_inferior, this.lim_superior));
			} catch (InterruptedException e) {
				Thread.currentThread().interrupt();
			}
		}
	}
}
"
acmXsnQj,Clase Bizcocho,LEANDRONIEVA,Java,Saturday 14th of October 2023 12:07:03 PM CDT,"import java.util.Random;
import javax.lang.model.element.Element;

public class Bizcocho extends Thread{

    private static int contador = 0;
    private int indice;
    private Mostrador<Element> cola;
	private Random random = new Random();
    private int lim_superior = 600;
    private int lim_inferior = 400;
    
    public Bizcocho(Mostrador<Element> mostrador) {
    	contador++;
    	this.indice = contador;
    	this.cola = mostrador;
    }
    
    public void run() {
        while (true) {
            // System.out.println((cola.toString()));
        	cola.agregarBizcocho(this.indice);
            System.out.println(""Bizcocho "" + this.indice +"" se añadió al mostrador"");
            try {
                Thread.sleep(random.nextInt(this.lim_inferior, this.lim_superior));
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
    }
}
"
gkqWZx78,PC_Tp5_Punto2Main,LEANDRONIEVA,Java,Saturday 14th of October 2023 12:06:12 PM CDT,"import javax.lang.model.element.Element;

public class Punto2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Mostrador<Element> m = new Mostrador<Element>();

		while(true) {
			Cliente cliente = new Cliente(m);
			Factura factura = new Factura(m);
			Bizcocho bizcocho = new Bizcocho(m);
			
			cliente.start();
			factura.start();
			bizcocho.start();
		}
	}

}
"
