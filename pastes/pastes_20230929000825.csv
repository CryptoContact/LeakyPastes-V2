id,title,username,language,date,content
6n3ZkUGz,Permutations of a given string,jayati,C++,Thursday 28th of September 2023 06:55:57 PM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
	public:
	void permute(int l,string &s,set<string> &ans)
	{
	    if(l==s.size())
	    {
	        ans.insert(s);
	        return;
	    }
	    for(int i=l;i<s.size();i++)
	    {
	        swap(s[i],s[l]);
	        permute(l+1,s,ans);
	        swap(s[i],s[l]);
	    }
	}
		vector<string>find_permutation(string S)
		{
		  set<string> ans;
		  sort(S.begin(),S.end());
		  permute(0,S,ans);
		  vector<string> res(ans.begin(),ans.end());
		  return res;
		}
};



//{ Driver Code Starts.
int main(){
    int t;
    cin >> t;
    while(t--)
    {
	    string S;
	    cin >> S;
	    Solution ob;
	    vector<string> ans = ob.find_permutation(S);
	    sort(ans.begin(),ans.end());
	    for(auto i: ans)
	    {
	    	cout<<i<<"" "";
	    }
	    cout<<""\n"";
    }
	return 0;
}

// } Driver Code Ends"
SKd19JUU,Untitled,eilon,CSS,Thursday 28th of September 2023 06:37:23 PM CDT,".talk-bubble-alt {
    margin-top: 10px;
    display: inline-block;
    position: relative;
    min-width: 115px;
    width: auto;
    height: auto;
    background-color: #EE4B2B;
    max-width: 90%;
    word-wrap: break-word;
    clear: both;
    box-shadow: -1px 1px .5px rgba(0, 0, 0, .33);
    -moz-box-shadow: -1px 1px .5px rgba(0, 0, 0, .33);
    -webkit-box-shadow: -1px 1px .5px rgba(0, 0, 0, .33)
}

.right-top-alt {
    margin-right: 17px;
    float: right;
    background-color: #EE4B2B
}

.right-top-alt .talktext .date {
    left: 28px
}

.right-top-alt .talktext .read,
.right-top-alt .talktext .unread,
.right-top-alt .talktext .loading {
    background-size: 16px;
    width: 16px;
    height: 16px;
    position: absolute;
    left: 12px;
    bottom: 3px;
    background-repeat: no-repeat
}

.left-top-alt {
    margin-left: 17px;
    float: left
}

.tri-right-alt.left-top:after {
    content: ' ';
    position: absolute;
    width: 0;
    height: 0;
    left: -10px;
    right: auto;
    top: 0;
    bottom: auto;
    border: 10px solid;
    border-color: #fff transparent transparent transparent
}

.tri-right-alt.right-top:after {
    content: ' ';
    position: absolute;
    width: 0;
    height: 0;
    left: auto;
    right: -10px;
    top: 0;
    bottom: auto;
    border: 10px solid;
    border-color: #def5cd transparent transparent transparent
}

.talk-bubble.deleted:after {
    content: "" "";
    border-color: #EE4B2B transparent transparent transparent;
}

.talk-bubble.deleted {
    background-color: #EE4B2B;
}"
vsmNzX6k,curso_postgresql,homzode,PostgreSQL,Thursday 28th of September 2023 06:32:57 PM CDT,"-- Lista las bases de datos
\l
-- Crea base de datos almacen
create database almacen;
-- Se conecta a base de datos almacen
\c almacen
-- Crea la tabla productos crea tabla productos_codigo_seq para el campo codigo
CREATE TABLE productos (
  codigo serial,
  nombre varchar(45) DEFAULT NULL,
  precio numeric(10,2) NOT NULL,
  inventario numeric(5) NOT NULL,
  PRIMARY KEY (codigo)
);
- Lista las tablas
\d
-- Muestra la estructura de la tabla productos
\d productos
-- Sintaxis de Insert a la tabla productos
INSERT INTO productos (nombre, precio, inventario) VALUES ('Naranja', 12500, 120);"
jWjS8se5,Untitled,Skos_Martren,C++,Thursday 28th of September 2023 05:20:22 PM CDT,"class Solution {
public:
    vector<int> findClosestElements(vector<int>& arr, int k, int target) {
        
        if(arr.size() == k){return arr;}

        auto ItCheck_target = lower_bound(arr.begin(), arr.end(), target);

        if(ItCheck_target == arr.begin()){return {arr.begin(), arr.begin() + k};} // My ex 2 / 2.1
        if(ItCheck_target == arr.end()){return {arr.end() - k, arr.end()};} // My ex 3

        function<bool(int, int)>  Operator = [target](const int a, const int b){

            assert(a <= b);
            return target - a <= b - target;
        };

		int left = 0;
		int right = (int)arr.size() - k; // если не делать "" - k"" затруднительно написать условие выхода из while
        cout << right  << '\n';
		
        while (1 != right - left + 1) { 
            
            const int mid = left + (right - left) / 2;
            // target - arr[mid] > arr[mid + k] - target <--> arr[mid] не должен быть в ответе
            // target - arr[mid] <= arr[mid + k] - target <--> arr[mid + k] не должен быть в ответе
            Operator(arr[mid], arr[mid + k]) ?  right = mid : left = mid + 1; // why ""+1""?!
            cout << mid << ' ' << left << ' ' << right  << '\n';
        }

        return {arr.begin() + left, arr.begin() + left + k};        
    }
};"
NfxvTRcu,Min mag from b.,Kestable,Python,Thursday 28th of September 2023 05:18:33 PM CDT,"from control.matlab import *
import matplotlib.pyplot as plt

m = 100
c1 = 300
c2 = 100
# b константу мы пока убираем в сторону и зададим диапазон b т 10 до 200
# b = 10
b_arr = [i for i in range(10, 201)]
s = tf('s')

# наша модель теперь тоже не может зависить от константы b, мы
# проинициализируем каждую модель для своего b в массиве
# w = -m*s*s/(m*s*s + b*s + c)

w_arr = [-m*s*s/(m*s*s + c1 + (c2*b*s/(b*s + c2))) for b in b_arr]
# print(w)

# теперь мы пройдёмся по всем моделям с разными значениями b и
# запишем максимальное значение mag в отдельный список
# mag, phase, omega = bode(w, dB=True)

max_mag = []
for w in w_arr:
    mag, phase, omega = bode(w, dB=True, plot=False)
    max_mag.append(max(mag))

# теперь мы можем построить зависимость максимальной амплитуды от значения b
# а так же найти значение этого b
idx = max_mag.index(min(max_mag))
min_mag_b = b_arr[idx]
print(min_mag_b)

plt.plot(b_arr, max_mag)
plt.ylabel('max_mag(b) (dB)')
plt.xlabel('b (N*sec/m)')
plt.show()"
zEu9hjzp,7.4.15,myloyo,C#,Thursday 28th of September 2023 04:55:58 PM CDT,"using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace myloyorrr
{
    internal class Program
    {
        static void In(out int[][] a)
        {
            int n = int.Parse(Console.ReadLine());
            a = new int[n][];

            for (int i = 0; i < a.GetLength(0); i++)
            {
                int m = int.Parse(Console.ReadLine());
                string[]s = Console.ReadLine().Split();
                a[i] = new int[m];
                for (int j = 0; j < m; j++)
                {
                    a[i][j] = int.Parse(s[j]);
                    
                }

            }
        }
        static void Out(int[] a)
        {
            for (int i = 0; i < a.GetLength(0); i++)
            {
                
               Console.Write(a[i] + "" "");
                
            }
        }

        static void Main()
        {
            int[][] a;
            In(out a);
            int k1 = int.Parse(Console.ReadLine());
            int k2 = int.Parse(Console.ReadLine());

            int r = a.GetLength(0);
            int[] ans;
            ans = new int[r];

            for (int i = 0; i < a.GetLength(0); i++)
            {
                int sum = 1;
                for (int j = k1; j <= k2; j++)
                {
                    sum *= a[i][j];
                }
                ans[i] = sum;

            }

            Out(ans);
        }
    }
}"
u8EUDSW0,1H_v1,Korotkodul,C++,Thursday 28th of September 2023 04:19:48 PM CDT,"#include <cmath>
#include <ctime>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;
using std::swap;


vector<int> srt5(vector<int> vv) {
    for (int ii = 0; ii < 5; ++ii) {
        for (int jj = 0; jj < 4; ++jj) {
            if (vv[jj] > vv[jj + 1]) {
                swap(vv[jj], vv[jj + 1]);
            }
        }
    }
    return vv;
}

vector<int> getB(vector<int> aa) {
    vector<int> bb;
    for (int ii = 0; ii < aa.size(); ++ii) {
        vector <int> vv = {aa[ii], aa[ii + 1], aa[ii + 2], aa[ii + 3], aa[ii + 4]};
        vv = srt5(vv);
        bb.push_back(vv[2]);
    }
    return bb;
}




vector<int> Partition(vector<int> aa) {
  int nn = aa.size();
  if (nn <= 1) {
    return aa;
  }
  int piv = DQS(aa);
  vector<int> bb;
  vector<int> cc;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] >= piv) {
      cc.push_back(aa[ii]);
    } else {
      bb.push_back(aa[ii]);
    }
  }
  bb = F(bb);
  cc = F(cc);
  vector<int> dd;
  for (int ii : bb) {
    dd.push_back(ii);
  }
  for (int ii : cc) {
    dd.push_back(ii);
  }
  return dd;
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int inf = 2e9;
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii : aa) {
    cin >> ii;
  }
  while (a.size() % 5 != 0) {
    aa.push_back(inf);
  }
  aa = F(aa);
  for (int ii : aa) {
    cout << ii << ' ';
  }
}
"
pD6s8rDe,Untitled,AleksiAguiar,Bash,Thursday 28th of September 2023 04:07:53 PM CDT,"quero ver se vai funcionar direitinho 
 
timbrasil
 
asdlaksdlkasldkasldk
asldkasldkalsdklaskdlaskdlkalsk"
EJUTaYAr,Untitled,mark-naylor-1701,Lisp,Thursday 28th of September 2023 03:47:22 PM CDT,"(defun square (n) (* n n))

(defun head-tail (&optional head &rest tail)
  (when head
    (insert (format ""%d\n"" (square head)))
    (apply #'head-tail tail)))


(defun head-tail (&optional head &rest tail)
  (when head
    (cons (square head) (apply #'head-tail tail))))


(head-tail 1 2 3 4 5)
"
9L3SWSmA,present_delivery,bAngelov,Python,Thursday 28th of September 2023 03:38:19 PM CDT,"presents = int(input())
neighborhood = int(input())
neighborhood = [input().split() for row in range(neighborhood)]
position = [(r,c) for r in range(len(neighborhood)) for c in range(len(neighborhood[r])) if neighborhood[r][c] == ""S""][0]
directions = {""up"":(-1,0),""down"":(1,0),""left"":(0,-1),""right"":(0,1)}
all_nice_kids = len([cell for row in neighborhood for cell in row if cell == ""V""])

def move(direction):
    global position,generous,presents
    neighborhood[position[0]][position[1]] = ""-""
    direction = directions[direction]
    r,c = position[0]+direction[0],position[1]+direction[1]
    if r in range(len(neighborhood)) and c in range(len(neighborhood[r])):
        house = neighborhood[r][c]
        if neighborhood[r][c] == ""C"":
            neighborhood[r][c] = ""-""
            for direction in directions.values():
                nr,nc = r+direction[0],c+direction[1]
                if nr in range(len(neighborhood)) and nc in range(len(neighborhood[nr])) and neighborhood[nr][nc] in ""VX"":
                    presents -= 1
                    neighborhood[nr][nc] = ""-""
                    if presents == 0: break
        else:
            if house == ""V"":
                presents -= 1
            elif house == ""C"":
                generous = True
            position = (r,c)
        neighborhood[r][c] = ""S""



while presents:
    command = input()
    if command == ""Christmas morning"":
        break
    move(command)

nice_kids_remeaining = len([cell for row in neighborhood for cell in row if cell == ""V""])
if not presents and nice_kids_remeaining:
    print(""Santa ran out of presents!"")
print(*list("" "".join(row) for row in neighborhood),sep=""\n"")
if nice_kids_remeaining:
    print(f""No presents for {nice_kids_remeaining} nice kid/s."")
else:
    print(f""Good job, Santa! {all_nice_kids} happy nice kid/s."")"
atWwL1Ng,Рифмовка,pasholnahuy,C++,Thursday 28th of September 2023 03:37:45 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <tuple>

using namespace std;

vector<int> zfunc(const string& s){
    vector<int> z(s.size());
    int first = 0;
    int last = 1;
    for (int i = 1; i < s.size(); ++i){
        if (i >= first && i < last && z[i - first] + i < last){
            z[i] = z[i - first];
        } else {
            z[i] = max(0, last - i);
            first = i;
            while (s[i + z[i]] == s[z[i]] && i + z[i] < s.size()){
                ++z[i];
            }
            last = i + z[i];
        }
    }
    return z;
}

int main() {
    string s;
    cin >> s;
    reverse(s.begin(), s.end());
    vector<int> z = zfunc(s);
    vector<int> z_val(s.size(), 1);
    z_val[0] = 2;
    for (int i = 0; i < s.size(); ++i){
        ++z_val[z[i]];
    }
    for (int i = s.size() - 1; i >= 0; --i){
        if (z_val[i] > 1){
            cout << i;
            return 0;
        }
    }
    return 0;
};"
wsCKLcFc,Bloodbath DMG everybody,SparrowTheDev,Lua,Thursday 28th of September 2023 02:49:46 PM CDT,"--Any issues? contact me here, Discord: Sparrow#3427, server: https://discord.gg/3rcVeX2qaX

coroutine.wrap(function()
game.StarterGui:SetCore(""SendNotification"", {Title = ""Bloodbath""; Text = ""EXECUTED""; Duration = 3})
wait(1.5)
game.StarterGui:SetCore(""SendNotification"", {Title = ""Bloodbath""; Text = ""Press X to damage everybody expect you""; Duration = 10})
wait(3)
game.StarterGui:SetCore(""SendNotification"", {Title = ""Bloodbath""; Text = ""I recommend spamming the X :)""; Duration = 5})
wait(1)
game.StarterGui:SetCore(""SendNotification"", {Title = ""Bloodbath""; Text = ""Contact any issues, Discord: Sparrow#3427, https://discord.gg/3rcVeX2qaX""; Duration = 10})
end)()

game:GetService(""UserInputService"").InputBegan:Connect(function(t,p)
 

if t.KeyCode == Enum.KeyCode.X and not p then

for i,v in pairs(game.Players:GetPlayers()) do

if v ~= game.Players.LocalPlayer then

local char = v.Character or v.CharacterAdded:Wait()
if char:FindFirstChildOfClass(""Humanoid"") then
if char:FindFirstChildOfClass(""Humanoid"").Health > 0 then
local args = {
    [1] = char:FindFirstChild(""HumanoidRootPart""),
    [2] = Vector3.new(176.7394256591797, 3.5243191719055176, 27.117347717285156),
    [3] = Vector3.new(0.9303097724914551, -0.3596072494983673, -0.07215556502342224),
    [4] = Enum.Material.Ice,
    [5] = CFrame.new(-0.28345489501953125, -0.7436447143554688, 0.3240814208984375, -0.7721382975578308, 0.30535632371902466, 0.5572794675827026, 0.6264837980270386, 0.5126399397850037, 0.5871272683143616, -0.10640066862106323, 0.8024700284004211, -0.5871297121047974),
    [6] = 454467254
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Assets""):WaitForChild(""Remotes""):WaitForChild(""hitBullet""):FireServer(unpack(args))

end
end
end
end
end
end)"
dQGjYZ6X,Untitled,Skos_Martren,C++,Thursday 28th of September 2023 02:41:13 PM CDT,"class Solution {
public:
    vector<int> findClosestElements(vector<int>& arr, int k, int target) {
        
        if(arr.size() == k){return arr;}

        function<bool(int, int)>  Operator = [target](const int a, const int b){

            assert(a <= b);
            return target - a <= b - target;
        };

		int left = 0;
		int right = (int)arr.size() - k;

		while (2 != right - left + 1) { 
            
            const int mid = left + (right - left) / 2;
            Operator(arr[left], arr[mid + k]) ?  right = mid : left = mid; 
        }

        return {arr.begin() + left, arr.begin() + left + k};        
    }
};"
MLXSm6qE,Agregar etiquetas personalizadas a traves de atributos woo,oscarviedma,PHP,Thursday 28th of September 2023 02:38:31 PM CDT,"function ov_mostrar_atributo_etiqueta_producto()
{
    global $product;

    $etiqueta_term = $product->get_attribute('etiqueta');

    if ($etiqueta_term) {
        $etiqueta_terms = explode(',', $etiqueta_term);

        $etiqueta_classes = '';

        foreach ($etiqueta_terms as $term) {
            $term = trim($term); 
            $term = remove_accents($term); 
            $term = preg_replace('/[^a-zA-Z0-9\s]/', '', $term);
            $term = str_replace('%', '', $term);

            if (is_numeric(substr($term, 0, 1))) {
                $term_class = 'desc-' . strtolower(str_replace(' ', '-', $term));
            } else {
                $term_class = strtolower(str_replace(' ', '-', $term));
            }

            $etiqueta_classes .= ' ' . $term_class;
        }

        echo '<div class=""ov-tag-producto' . $etiqueta_classes . '"">' . $etiqueta_term . '</div>';
    }
}

add_action('woocommerce_before_shop_loop_item_title', 'ov_mostrar_atributo_etiqueta_producto', 10);
"
Pvd91iUt,LeetCode 1 - Two Sum - 2023.09.29 solution,nathanwailes,Python,Thursday 28th of September 2023 02:06:58 PM CDT,"class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        """""" Sort the array and then work inwards from the outer ends:
        constant memory and nlogn time.

        Use a dict to keep track of seen numbers, and if you find a match,
        return that: constant time and o(n) memory.

        """"""
        seen_nums = dict()

        for i, num in enumerate(nums):
            difference = target - num
            if difference in seen_nums:
                return seen_nums[difference], i
            
            seen_nums[num] = i"
ZZYck7x1,Untitled,1fractal,Python,Thursday 28th of September 2023 02:02:44 PM CDT,"import os
import pandas as pd

# Specify the directory where your CSV files are located
directory = '/path/to/your/directory'

# Get a list of all CSV files in the directory
csv_files = [file for file in os.listdir(directory) if file.endswith('.csv')]

# Create an empty DataFrame to store the combined data
combined_data = pd.DataFrame()

# Iterate through each CSV file and extract the specified columns
for file in csv_files:
    file_path = os.path.join(directory, file)
    
    # Read the CSV file with only the ""SNP"" and ""P"" columns
    # Assuming the columns ""SNP"" and ""P"" exist in all CSV files
    data = pd.read_csv(file_path, usecols=['SNP', 'P'])
    
    # Append the extracted data to the combined DataFrame
    combined_data = combined_data.append(data, ignore_index=True)

# Print the first few rows of the combined data
print(combined_data.head())

# Optionally, you can save the combined data to a new CSV file
combined_data.to_csv('combined_data.csv', index=False)"
LdKk3ETk,ПОиск подстроки,pasholnahuy,C++,Thursday 28th of September 2023 01:59:46 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <tuple>

using namespace std;

vector<int> zfunc(const string& s){
    vector<int> z(s.size());
    int first = 0;
    int last = 1;
    for (int i = 1; i < s.size(); ++i){
        if (i >= first && i < last && z[i - first] + i < last){
            z[i] = z[i - first];
        } else {
            z[i] = max(0, last - i);
            first = i;
            while (s[i + z[i]] == s[z[i]] && i + z[i] < s.size()){
                ++z[i];
            }
            last = i + z[i];
        }
    }
    return z;
}

int main() {
    string s1, s2;
    cin >> s1 >> s2;
    string s = s2 + ""#"" + s1;
    vector<int> z = zfunc(s);
    for (size_t i = s2.size() + 1; i < s.size(); ++i){
        if (z[i] == s2.size()){
            cout << i - s2.size() - 1 << "" "";
        }
    }
    return 0;
};"
EA26dmgx,обратная префикс функция,pasholnahuy,C++,Thursday 28th of September 2023 01:49:21 PM CDT,"#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> pref(n);
    for (int i = 0; i < n; ++i){
        cin >> pref[i];
    }
    char symb = 'a';
    vector<char> s = {'a'};
    for (int i = 1; i < n; ++i){
        if (pref[i] == 0) {
            ++symb;
            s.emplace_back(symb);
        } else {
            s.emplace_back(s[pref[i-1]]);
        }
    }
    for (auto el: s){
        cout << el;
    }
    return 0;
}
"
CcTtrh03,sbdrbdr,gadungw71,PHP,Thursday 28th of September 2023 01:47:33 PM CDT,"https://groups.google.com/g/1080pa-haunting-in-venice/c/RILxgl10flo
https://colab.research.google.com/drive/1g1fjKum_o8IjHuo-XLT43RMobrWaeM5r
https://lookerstudio.google.com/reporting/a4a15fef-2715-4ab9-8a53-8ceea073883d
https://lookerstudio.google.com/s/jQYauL-MUaM
https://sites.google.com/view/a-haunting-in-venice-2023-hd
https://wandb.ai/deraakesatria631/pg-soft/reports/---Vmlldzo1NTMzMTAw?accessToken=zcpgso0ybntu93lef513f931qdj74aor2quzfbvdjlbllw7a1mwad6ojdgmcjno9
https://wandb.ai/deraakesatria631/mobile/reports/-2023-1080p--Vmlldzo1NTMzMTM5?accessToken=a4ffznmx1ysim2ixkzobgpcn1m3tpf8y8dglxa1qz3s3pwwslrvsb6zzz109b18u
https://groups.google.com/g/a-haunting-in-venice-hd-1080/c/_8eLYKQWEX0
https://colab.research.google.com/drive/1CLcYzhG0W2VkSrdFamvuIB2pOovnu2xh
https://lookerstudio.google.com/s/rfQuqfv2_7M
https://sites.google.com/view/2023-1080p4k/beranda
https://wandb.ai/fkusuma167/pt%20ahong/reports/-HD-A-Haunting-in-Venice-2023---Vmlldzo1NTMzNDMw?accessToken=0sw8vm1fgiznbsnkqpi22q9bpf4w15gufqz6mmac7mm51i7vp31nam8dnd18s831
https://colab.research.google.com/drive/1r74mqgPDu9rzyXC9qlXP5NStkS7AACkU
https://groups.google.com/g/saw-10-hd/c/Lrh70GRhySI
https://colab.research.google.com/drive/1tUge_-YzLpO8lfJ59DSG7At6bIhd1feJ
https://lookerstudio.google.com/reporting/9d194a9c-36a3-4e83-968b-ce0a15f5e822
https://sites.google.com/view/101080p/halaman-muka
https://wandb.ai/guioogera656/gergeh/reports/ZH-10-2023---Vmlldzo1NTM3MjQ3?accessToken=9e9raagvc0c2s46y0x266u9jtb4mv9tq5ifcrk1jtldm0m74hndru7aqmnijqr61
https://m.facebook.com/media/set/?set=a.122098828934061613"
zRXgnnvw,Хоффман длина кода,pasholnahuy,C++,Thursday 28th of September 2023 01:26:19 PM CDT,"#include <iostream>
#include <vector>
#include <set>
using namespace std;


int main() {
    int n;
    cin >> n;
    vector<int> vec(n);
    vector<int> depth(n, 0);
    set<pair<int, vector<int>>> temp;
    for (int i = 0; i < n; ++i){
        cin >> vec[i];
        temp.insert({vec[i], {i}});
    }
    for (int i = 0; i < n - 1; ++i){
        auto el1 = *temp.begin();
        temp.erase(temp.begin());
        auto el2 = *temp.begin();
        temp.erase(temp.begin());
        for (auto ind: el1.second){
            ++depth[ind];
        }
        for (auto ind: el2.second){
            ++depth[ind];
            el1.second.push_back(ind);
        }
        el1.first += el2.first;
        temp.insert(el1);
    }
    int ans = 0;
    for (int i = 0; i < n; ++i){
        ans += vec[i] * depth[i];
    }
    cout << ans;
    return 0;
}"
Z8fgmdtN,Untitled,1fractal,Python,Thursday 28th of September 2023 01:24:26 PM CDT,"import pandas as pd

# Step 1: Read the CSV file
# Replace 'example.csv' with the path to your CSV file
df = pd.read_csv('example.csv')

# Step 2: Access and manipulate the data
# Access the first 5 rows of the DataFrame
print(""First 5 rows of the DataFrame:"")
print(df.head())

# Access a specific column by name
names = df['Name']
print(""\nNames column:"")
print(names)

# Filter rows based on a condition (e.g., age greater than 30)
older_than_30 = df[df['Age'] > 30]
print(""\nPeople older than 30:"")
print(older_than_30)

# Perform various data operations (e.g., calculate mean age)
mean_age = df['Age'].mean()
print(""\nMean age:"", mean_age)

# Step 3: Save the extracted data to a new CSV file
# Save the filtered data to a new CSV file
older_than_30.to_csv('older_than_30.csv', index=False)

# Save the entire DataFrame to a new CSV file
df.to_csv('output_data.csv', index=False)

print(""\nData saved to 'older_than_30.csv' and 'output_data.csv'."")"
Ausymsbx,Untitled,1fractal,Python,Thursday 28th of September 2023 01:23:09 PM CDT,"import pandas as pd

df = pd.read_csv('your_file.csv')

print(df.head())

# Access a specific column by name
column_data = df['ColumnName']

# Filter rows based on a condition
filtered_data = df[df['Column1'] > 50]
"
SL7PKtFy,hw2-2,WoodThrush,Java,Thursday 28th of September 2023 01:20:20 PM CDT,"public class ThreeStackDeque {

    private Stack<E> front;
    private Stack<E> back;
    private Stack<E> temp;

    private int sizeFront;
    private int sizeBack;

    public ThreeStackDeque() {
        front = new Stack();
        back = new Stack();
        temp = new Stack();
    }

    public boolean isEmpty() {
        return front.isEmpty() && back.isEmpty();
    }

    public void addFront(int x) {
        front.push(x);
        sizeFront++;
    }

    public int removeFront() {
        if (front.isEmpty()) {           // no elements in front stack
            if (back.isEmpty()) {        // no elements in front or back = empty deque
                return -1;
            } else if (sizeBack > 1) {         // enough elements, >=2, to split between front and back
                split(back , front, sizeBack);
                // adjust size of front and back after split, last floor(n/2) elements in back stack moved to front
                sizeFront += floor(sizeBack/2);
                sizeBack = sizeBack - sizeFront;
                sizeFront--;            // sizeFront decremented again for pop
                return front.pop();
            } else {
                sizeBack--;
                return back.pop();   // sizeFront == 1, only element in deque
            }
        } else {
            sizeFront--;
            return front.pop();
        }
    }


    public void addBack(int x) {
        back.push(x);
        sizeBack++;
    }

    public int removeBack() {
        if (back.isEmpty()) {           // no elements in back stack
            if (front.isEmpty()) {        // no elements in front or back = empty deque
                return -1;
            } else if (sizeFront > 1) {         // enough elements, >=2, to split between front and back
                split(front , back, sizeFront);
                // adjust sizes of front & back after split, last floor(n/2) elements in front stack moved to back stack
                sizeBack += floor(sizeFront/2);
                sizeFront = sizeFront - sizeBack;
                sizeBack--;     // sizeBack decremented again for pop
                return back.pop();
            } else {
                sizeFront--;
                return front.pop();   // sizeFront == 1, only element in deque
            }
        } else {
            sizeBack--;
            return back.pop();
        }
    }

    private void split(Stack full, Stack empty, int size) {

        int adjust = floor(size / 2);
        for (int i = 0; i < adjust; i++) {
            temp.push(full.pop());
        }
        while (!full.isEmpty()) {
            empty.push(full.pop());
        }
        while (!temp.isEmpty()) {
            full.push(temp.pop());
        }
    }"
948MNiLy,Pro,Zeinab_Hamdy,C++,Thursday 28th of September 2023 01:09:15 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  solution  ================================ */

vector < ll > vec;

vector < vector < ll > > dp;


ll  n ;
const int invalid = 1e9 ;

ll rec(int idx , int cnt ){
    
    if(idx >= n  or cnt > 5 ) return invalid;
    if(idx == n-1 ){
        if(cnt >= 2 and cnt <= 5 ) return vec[idx]-vec[idx-cnt];
        else return invalid ;
    }

    ll & ret = dp[idx][cnt];
    if(~ret) 
        return ret ;

    

    ret = invalid;
    ret = min( ret , rec(idx + 1 , cnt+1 ));   
    if(cnt <= 4 and cnt >= 2)
      ret = min( ret , rec(idx + 1 , 0) + vec[idx]-vec[idx-cnt]);
     
    
    // cout << ret << nl;
    
    return ret;   
}



void myCode(){


cin >> n ;
vector < ll > v(n) ;
cin(v);

dp.assign(n+1 , vector < ll > ( 6 , -1));



vec = v;
sort(all(vec));



cout << rec(0 , 0 ) << nl;

}


int main(){
                                   FastCode ;
                                     // Zainab() ;

        int testCase=1;
            // cin >> testCase ;
        for(int i=1 ; i<= testCase ; i++){
            myCode();
        }
      

    return 0;
}"
gyyH8wvf,JSON conversion with jc,metalx1000,Bash,Thursday 28th of September 2023 12:58:55 PM CDT,"cat people.csv|jc --csv --pretty
ps aux | jc -p --ps

LC_ALL=C date | jc --date --pretty

jc --pretty dig www.google.com

arp | jc -p --arp 
ifconfig | jc -p --ifconfig

ifconfig wlp0s20f3|grep 'inet '|awk '{print $2}'
ifconfig | jc --ifconfig -p|jq -r '.[]|select(.name==""wlp0s20f3"").ipv4_addr'

ls -l /usr/bin | jc -p --ls

ping 8.8.8.8 -c 3 | jc -p --ping 
uptime | jc -p --uptime

wget -qO- ""https://www.w3schools.com/xml/cd_catalog.xml""| jc -p --xml"
UugJHQX2,Code box with Copy Text Button,MADmadisson,HTML,Thursday 28th of September 2023 12:53:07 PM CDT,"<button onclick=""myFunction()"" style=""color:#783f04;background-color: rgba(252,229,205,1);border-color: rgba(252,229,205,1);height: 27.0pt;font-size: 13.0pt;font-weight: 700;font-family: 'Nunito', sans-serif;border-radius: 4px;transition: background .2s .1s;width: 100%;border-style: solid;"">Copy Text</button><br>
<div style=""margin-top:10px;background-color:#0000000f;padding: 10px;border-radius: 10px;""><textarea type=""text"" style=""height:100px;border: none;position: relative;width: 100%;background-color: transparent;color: #666666;font-family: Courier;"" id=""myInput"">

TEXT GOES HERE


</textarea></div>



<script>
function myFunction() {
  // Get the text field
  var copyText = document.getElementById(""myInput"");

  // Select the text field
  copyText.select();
  copyText.setSelectionRange(0, 99999); // For mobile devices

  // Copy the text inside the text field
  navigator.clipboard.writeText(copyText.value);
  
  // Alert the copied text
  alert(""Copied the text: "" + copyText.value);
}
</script>
<link rel=""preconnect"" href=""https://fonts.googleapis.com"">
<link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
<link href=""https://fonts.googleapis.com/css2?family=Nunito:wght@700&display=swap"" rel=""stylesheet"">"
4KUL0amd,CC Glass watch all rednet communication,goldfiction,Lua,Thursday 28th of September 2023 12:25:24 PM CDT,"function findAndWrap(devType)
  local devices = peripheral.getNames()
  for id, devName in pairs(devices) do
    if peripheral.getType(devName) == devType then
      return peripheral.wrap(devName)
    end
  end
end

glass = findAndWrap(""openperipheral_bridge"")
rednet.open(""right"")

function addBox()
  glass.addBox(1,1,200,100,0xFFFFFF,0.2)
end

function timeDis(message)
  -- time = textutils.formatTime(os.time(), false)
  local msg=table.concat(split(message, "",""),""\n"")
  glass.addText(5,100, msg, 0xFF0000)
end

function start()
 print(""watching rednet messages"")
 while true do
    local senderId, message, protocal = rednet.receive()
    glass.clear()
    -- addBox()
    timeDis(message)
    glass.sync()
    sleep(0.1)
  end
end

start()"
pEyX0sD3,CC_Wget,goldfiction,Lua,Thursday 28th of September 2023 12:23:23 PM CDT,"local function wget(option, url, ziel)
  if type(url) ~= ""string"" and type(ziel) ~= ""string"" then
        return
  elseif type(option) == ""string"" and option ~= ""-f"" and type(url) == ""string"" then
        ziel = url
        url = option
  end
  if http.checkURL(url) then
        if fs.exists(ziel) and option ~= ""-f"" then
          printError(""<Error> Target exists already"")
          return
        else
          term.write(""Downloading ... "")
          local timer = os.startTimer(60)
          http.request(url)
          while true do
                local event, id, data = os.pullEvent()
                if event == ""http_success"" then
                  print(""success"")
                  local f = io.open(ziel, ""w"")
                  f:write(data.readAll())
                  f:close()
                  data:close()
                  print(""Saved as "" .. ziel)
                  return true
                elseif event == ""timer"" and timer == id then
                  printError(""<Error> Timeout"")
                  return
                elseif event == ""http_failure"" then
                  printError(""<Error> Download"")
                  os.cancelAlarm(timer)
                  return
                end
          end
        end
  else
        printError(""<Error> URL"")
        return
  end
end

-- wget(""http://example.org/"", ""testing"")
-- wget(""-f"", ""http://example.org/"", ""testing"")"
y1tDCSDG,MCjPAhyz cc glass os,goldfiction,Lua,Thursday 28th of September 2023 12:22:49 PM CDT,"-- MCjPAhyz

local p = peripheral.wrap(""back"")
p.clear()
local mon = {}

mon.minY = 8 * 9
mon.maxY = 24 * 9 + 4
mon.minX = 0 * 6
mon.maxX = 68 * 6 + 4
mon.rows = math.floor((mon.maxY - mon.minY) / 9)
mon.cols = math.floor((mon.maxX - mon.minX) / 6)
mon.lines = {}
mon.mtrx = {}
for i = 1, mon.rows do
 mon.mtrx[i] = {}
end
mon.scale = 1
mon.curr = 1
mon.curc = 1
mon.cur = p.addText(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2, math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2, "" "", 0)
mon.colors = {[1] = 0xffffff, [2] = 0xffc125, [4] = 0xff3e96, [8] = 0x836fff, [16] = 0xffff00, [32] = 0x00ff00, [64] = 0xff82ab, [128] = 0x444444, [256] = 0x999999, [512] = 0x009acd, [1024] = 0x9400d3, [2048] = 0x0000ff, [4096] = 0x8b5a2b, [8192] = 0x458b00, [16384] = 0xff0000, [32768] = 0}

mon.bgColor = 0
mon.color = 0xffffff
mon.box = p.addBox(mon.minX, mon.minY, mon.maxX - mon.minX + 1, mon.maxY - mon.minY + 1, mon.bgColor, 0)
mon.box.setZIndex(-1)

mon.write = function(s)
 for i = 1, #s do
  local x = math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2
  local y = math.floor((mon.curr - 1) * 9 * mon.scale) + mon.minY + 2
  local j = 1
  local t = mon.mtrx[mon.curr][mon.curc]
  if t then
   t.delete()
  end
  t = p.addText(x, y, s:sub(i,i), mon.color)
  mon.mtrx[mon.curr][mon.curc] = t
  mon.lines[#mon.lines + 1] = t
  mon.curc = mon.curc + 1
  if mon.curc > mon.cols then
   mon.curc = 1
   if mon.curr == mon.rows then
    return
   else
    mon.curr = mon.curr + 1
   end
  end
 end
 mon.cur.setX(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2)
 mon.cur.setY(math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2)
end

mon.clear = function()
 for i = 1, #mon.lines do
  mon.lines[i].delete()
  mon.lines[i] = nil
 end
end

mon.clearLine = function(n)
 local y = math.floor(((n or mon.curr) - 1) * 9 * mon.scale) + mon.minY + 2
 local i = 1
 while i <= #mon.lines do
  if not mon.lines[i].getY() or mon.lines[i].getY() == y then
   mon.lines[i].delete()
   mon.lines[i] = mon.lines[#mon.lines]
   mon.lines[#mon.lines] = nil
  else
   i = i + 1
  end
 end
end

mon.scroll = function()
 mon.clearLine(1)
 local i = 1
 while i <= #mon.lines do
  if not mon.lines[i].getY() then
   mon.lines[i].delete()
   mon.lines[i] = mon.lines[#mon.lines]
   mon.lines[#mon.lines] = nil
  else
   mon.lines[i].setY(mon.lines[i].getY() - (9 * mon.scale))
   i = i + 1
  end
 end
 for i = 1, mon.rows - 1 do
  mon.mtrx[i] = mon.mtrx[i + 1]
 end
 mon.mtrx[mon.rows] = {}
end

mon.setBackgroundColor = function(n)
 if mon.colors[n] then
  n = mon.colors[n]
 end
 mon.bgColor = n
 mon.box.setColor(n)
 mon.box.setOpacity(n == 0 and 0 or 0.40)
end

mon.setBackgroundColour = mon.setBackgroundColor

mon.setTextColor = function(n)
 if mon.colors[n] then
  n = mon.colors[n]
 end
 mon.color = n
 mon.cur.setColor(n)
end

mon.setTextColour = mon.setTextColor

mon.setTextScale = function(n)
 mon.rows = math.floor((mon.maxY - mon.minY - 4)/(9 * n))
 mon.cols = math.floor((mon.maxX - mon.minX - 4)/(6 * n))
 local y = nil
 local x = nil
 if n > mon.scale then
  y = math.floor((mon.rows + 1) * 9 * mon.scale) + mon.minY + 2
  x = math.floor((mon.cols + 1) * 6 * mon.scale) + mon.minX + 2
 end
 local i = 1
 while i < #mon.lines do
  if not mon.lines.getY() or y and (mon.lines[i].getY() >= y or mon.lines[i].getX() >= x) then
   mon.lines[i].delete()
   mon.lines[i] = mon.lines[#mon.lines]
   mon.lines[#mon.lines] = nil
  else
   local ny = (mon.lines[i].getY() - mon.minY - 2) / mon.scale * n
   local nx = (mon.lines[i].getX() - mon.minX - 2) / mon.scale * n
   mon.lines[i].setY(ny)
   mon.lines[i].setX(nx)
   mon.lines[i].setScale(n)
   i = i + 1
  end
 end
 for i = 1, mon.rows do
  if not mon.mtrx[i] then
   mon.mtrx[i] = {}
  end
 end
 mon.scale = n
 mon.cur.setX(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2)
 mon.cur.setY(math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2)
end

mon.setCursorPos = function(x,y)
 mon.curc = x
 mon.curr = y
 mon.cur.setX(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2)
 mon.cur.setY(math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2)
end

mon.getCursorPos = function()
 return mon.curc, mon.curr
end

mon.getSize = function()
 return mon.cols, mon.rows
end

local blink = true
local blinkstate = false
local nextBlink = os.startTimer(0.3)
mon.setCursorBlink = function(b)
 blink = b
end

local function doBlink()
 blinkstate = not blinkstate
 mon.cur.setText(blinkstate and blink and ""_"" or "" "")
 nextBlink = os.startTimer(0.3)
end

mon.isColor = function() return true end
mon.isColour = function() return true end

local pullEvent = os.pullEvent
local charQueue = """"
os.pullEvent = function(...)
 while true do
  if charQueue ~= """" then
   local c = charQueue:sub(1,1)
   charQueue = charQueue:sub(2)
   if c == ""\\"" then
    c = charQueue:sub(1,1)
    charQueue = charQueue:sub(2)
    if c == ""\\"" then
     return ""char"",c
    elseif c == ""n"" then
     return ""key"",28
    elseif c == ""b"" then
     return ""key"",14
    elseif c == ""t"" then
     error(""Terminated"")
    elseif c == ""r"" then
     os.reboot()
    elseif c == ""s"" then
     os.shutdown()
    end
   end
   return ""char"",c
  end
  local t = {pullEvent(...)}
  if t[1] == ""chat_command"" then
   charQueue = charQueue..t[2]
   local c = charQueue:sub(1,1)
   charQueue = charQueue:sub(2)
   if c == ""\\"" then 
    charQueue = c..charQueue 
   else
    return ""char"",c
   end
  elseif t[1] == ""timer"" and t[2] == nextBlink then
   doBlink()
  else
   return unpack(t)
  end
 end
end

local reboot = os.reboot
os.reboot = function()
 p.clear()
 mon.box.delete()
 mon.cur.delete()
 reboot()
end

local shutdown = os.shutdown
os.shutdown = function()
 p.clear()
 shutdown()
end

term.redirect(mon)

print(""Welcome to CcGlasses!"")"
nxZa3WnR,1H,Korotkodul,C++,Thursday 28th of September 2023 12:20:46 PM CDT,"#include <cmath>
#include <ctime>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

vector<int> F(vector<int> aa) {
  int nn = aa.size();
  if (nn <= 1) {
    return aa;
  }
  int pivid = rand() % nn;
  int piv = aa[pivid];
  vector<int> bb;
  vector<int> cc;
  for (int ii = 0; ii < nn; ++ii) {
    if (aa[ii] >= piv) {
      cc.push_back(aa[ii]);
    } else {
      bb.push_back(aa[ii]);
    }
  }
  bb = F(bb);
  cc = F(cc);
  vector<int> dd;
  for (int ii : bb) {
    dd.push_back(ii);
  }
  for (int ii : cc) {
    dd.push_back(ii);
  }
  return dd;
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  int nn;
  cin >> nn;
  vector<int> aa(nn);
  for (int& ii : aa) {
    cin >> ii;
  }
  aa = F(aa);
  for (int ii : aa) {
    cout << ii << ' ';
  }
}
"
8eDUpLK5,Bulk Rename Files with Vim using vidir,metalx1000,Bash,Thursday 28th of September 2023 12:15:49 PM CDT,"#install vidir
sudo apt install moreutils

#set editor
export EDITOR=nvim
export EDITOR=vim

#create example files
touch file_{00..10}.txt
touch img_{00..10}.jpg

vidir


"
the36GsY,Iplan telecomunicaciones - Nss sa - Pablo Saubidet,bombaires,HTML,Thursday 28th of September 2023 12:12:58 PM CDT,"<div class=""mas"">iplan.com.ar - iplanisp.com.ar - iplan-wholesale.com - iplanisp.com.ar - iplanisp.com - iplanliv.com.ar - iplannetworks.net - nss.com.ar</div>
<div class=""report"">See <a href=""http://www.senderbase.org/senderbase_queries/detailip?search_string=190.2.0.19"">
Iplan</a> spam reports.</div>
<div class=""cuit""><strong>CUIT:</strong> 30-70265297-5</div>
<div class=""name""><strong>Real names - Los nombres reales:</strong>
Pablo Saubidet - Daniel Alejandro Nofal - Fernando Devesa - Ezequiel Torres - Carina Fernanda Gómes</div>
<div class=""cuit""><strong>CUIT (Pablo Saubidet):</strong>
20-16844586-6</div>
<div class=""dni""><strong>DNI (Pablo Saubidet):</strong>
16844586</div>
<div class=""born""><strong>Date of birth - Fecha de nacimiento
<span style=""font-size:x-small;font-weight:normal"">[mm/dd/yyyy]</span> (Pablo
Saubidet):</strong> 10/16/1964</div>
<div class=""cuit""><strong>CUIT (Daniel Alejandro Nofal):</strong>
20-22501089-8</div>
<div class=""dni""><strong>DNI (Daniel Alejandro Nofal):</strong>
22501089</div>
<div class=""born""><strong>Date of birth - Fecha de nacimiento
<span style=""font-size:x-small;font-weight:normal"">[mm/dd/yyyy]</span> (Daniel
Alejandro Nofal):</strong> 11/15/1971</div>
<div class=""address""><strong>Physical address - Dirección
real:</strong> Reconquista 865 - 1003 Capital
Federal&nbsp;<a class=""visit"" target=""_blank"" href=""https://www.google.com/maps/place/Reconquista+865,+Buenos+Aires,+Ciudad+Aut%C3%B3noma+de+Buenos+Aires,+Argentina/@-34.5977447,-58.3729061,17z/data=!3m1!4b1!4m2!3m1!1s0x95bccacb2101afbf:0xbad5a1ab3abfdbf8?hl=es"">Pay
the spammer a visit!</a><br>
Uruguay 3359, UF 26, San Fernando - 1644 Buenos Aires (Pablo
Saubidet private)<br>
Juez Tedin 2709 - C1425CWA Palermo (Daniel Alejandro Nofal
private)</div>
<div class=""phone""><strong>Phone - Teléfono:</strong> <a href=""tel:+548003450000"">+54 800 345 0000</a><br><a href=""tel:+541152464410"">+54 (0)11 5246-4410</a><br>
+54 (0)11 5031-6482<br>
+54 (0)11 5031-6482<br>
+54 (0)800 345-0112<br>
+54 (0)11 5032-0000<br>
+54 (0)11 5031-6301 (fax)<br>
+54 (0)11 5352-1546<br>
+54 (0)11 5031-6570<br>
+54 (0)11 5031-6411<br>
+54 (0)11 5031-6502</div>
<br>
Pablo Saubidet <a class=""email"" href=""mailto:psaubidet@iplan.com.ar"">psaubidet@iplan.com.ar</a><br>
Pablo Saubidet <a class=""email"" href=""mailto:psaubidet@nss.com.ar"">psaubidet@nss.com.ar</a><br>
Daniel Martin Cabrera <a class=""email"" href=""mailto:mcabrera@iplan.com.ar"">mcabrera@iplan.com.ar</a><br>
Javier Aldamiz <a class=""email"" href=""mailto:jaldamiz@iplan.com.ar"">jaldamiz@iplan.com.ar</a><br>
Lucas Urquiza <a class=""email"" href=""mailto:lurquiza@iplan.com.ar"">lurquiza@iplan.com.ar</a><br>
Emilio Nogueiras <a class=""email"" href=""mailto:enogueiras@iplan.com.ar"">enogueiras@iplan.com.ar</a><br>
Daniel Alejandro Nofal <a class=""email"" href=""mailto:dnofal@nss.com.ar"">dnofal@nss.com.ar</a><br>
Daniel Alejandro Nofal <a class=""email"" href=""mailto:dnofal@wikilife.org"">dnofal@wikilife.org</a><br>
Horacio Farias <a class=""email"" href=""mailto:hfarias@iplan.com.ar"">hfarias@iplan.com.ar</a><br>
Horacio Farias <a class=""email"" href=""mailto:abuse-iplan@iplan.com.ar"">abuse-iplan@iplan.com.ar</a><br>
Ezequiel Torres <a class=""email"" href=""mailto:etorres@iplan.com.ar"">etorres@iplan.com.ar</a><br>
Leonardo Semenzín <a class=""email"" href=""mailto:lsemenzin@iplan.com.ar"">lsemenzin@iplan.com.ar</a><br>
Rodrigo Alonso <a class=""email"" href=""mailto:ralonso@iplan.com.ar"">ralonso@iplan.com.ar</a><br>
Fernando Devesa <a class=""email"" href=""mailto:fdevesa@iplan.com.ar"">fdevesa@iplan.com.ar</a><br>
Jose Manuel Pantin <a class=""email"" href=""mailto:jpantin@iplan.com.ar"">jpantin@iplan.com.ar</a><br>
Mariana Herencic <a class=""email"" href=""mailto:mherencic@iplan.com.ar"">mherencic@iplan.com.ar</a><br>
Yanina Barrios <a class=""email"" href=""mailto:ybarrios@iplan.com.ar"">ybarrios@iplan.com.ar</a><br>
Carina Fernanda Gómes <a class=""email"" href=""mailto:cgomes@iplan.com.ar"">cgomes@iplan.com.ar</a><br>
Julián Ercolessi <a class=""email"" href=""mailto:jercolessi@iplan.com.ar"">jercolessi@iplan.com.ar</a><br>
Hernan Arcidiacono <a class=""email"" href=""mailto:harcidiacono@iplan.com.ar"">harcidiacono@iplan.com.ar</a><br>
Ivan Kowalczuk <a class=""email"" href=""mailto:ikowalczuk@iplan.com.ar"">ikowalczuk@iplan.com.ar</a><br>
Eliana Villanueva <a class=""email"" href=""mailto:evillanueva@iplan.com.ar"">evillanueva@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:hostmaster@iplan.com.ar"">hostmaster@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:hostmaster@iplanisp.com.ar"">hostmaster@iplanisp.com.ar</a><br>
<a class=""email"" href=""mailto:postmaster@iplan.com.ar"">postmaster@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:info@iplan.com.ar"">info@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:atencionalcliente@iplan.com.ar"">atencionalcliente@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:ventas@iplan.com.ar"">ventas@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:datospersonales@iplan.com.ar"">datospersonales@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:soporte@iplan.com.ar"">soporte@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:rrhh@iplan.com.ar"">rrhh@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:serviciocloud@iplan.com.ar"">serviciocloud@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:iplanliv@iplan.com.ar"">iplanliv@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:web@iplan.com.ar"">web@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:mailto:serviciocloud@iplan.com.ar"">mailto:serviciocloud@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:info@envios.iplan.com.ar"">info@envios.iplan.com.ar</a><br>
<a class=""email"" href=""mailto:operaciones@iplan.com.ar"">operaciones@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:noc@iplan.com.ar"">noc@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:admin@envios.iplan.com.ar"">admin@envios.iplan.com.ar</a><br>
<a class=""email"" href=""mailto:telefoniacloud@envios.iplan.com.ar"">telefoniacloud@envios.iplan.com.ar</a><br>
<img alt=""Pablo Saubidet"" title=""Pablo Saubidet"" style=""height:150px"" src=""http://www.aer.org.ar/wp-content/uploads/2009/03/iplan-pablo-saubidet.jpg"">"
4XUNyvdu,Untitled,dllbridge,C,Thursday 28th of September 2023 12:07:30 PM CDT,"

#include    <stdio.h>


int nStartPrice = 1000,
    nDelta      =   55;


int Serial (int n);
int Ostatok(int n);
     
   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	int nX;// = Serial(2);
	
	
	
	
	

    scanf(""%d"", &nX);  // 8
    
    int nS = nX/7,
        nO = nX%7;
    
    
    nO = Ostatok(nO);
    nS =  Serial(nS);

    nX = nO + nS;

    printf(""Summa = %d\n"", nX);
	
}   

     
////////////////////////////////////////////////////////     
int Ostatok(int n) // <= 7!
{
	
	int nSumma =    0,
	    nSP    = 1000;//nStartPrice;  
	

    for(int i = 0; i < n; i ++)
	{
		nSumma = nSumma + nSP;
		

		nSP -= 55;	//	nSP  = nSP - 55;
	}  
	
return nSumma;	  
}
     
          
     
     
     
////////////////////////////////////////////////////////     
int Serial(int n)
{
	
	int nSumma =    0,
	    nSP    = 1000;//nStartPrice;  
	

    for(int i = 0; i < 7; i ++)
	{
		nSumma = nSumma + nSP;
		

		nSP -= 55;	//	nSP  = nSP - 55;
	}  
	
return nSumma * n;	  
}
     
     "
mV23iaGx,Untitled,Josif_tepe,C++,Thursday 28th of September 2023 12:00:21 PM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
#include <iostream>
#include <set>
#include <cstring>
#include <stack>
#include <algorithm>
//#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 3e5 + 10;
const ll INF = 3e16 + 10;

struct node {
    int y, x1, x2;
    bool up;
    node () {}
    node(int _y, int _x1, int _x2, bool _up) {
        y = _y;
        x1 = _x1;
        x2 = _x2;
        up = _up;
    }
    bool operator < (const node &tmp) const {
        return y < tmp.y;
    }
};
int main() {
    ios_base::sync_with_stdio(false);
    int L, W;
    cin >> L >> W;
    int months;
    cin >> months;
    int n;
    cin >> n;
    vector<pair<int, int>> buildings(n);
    vector<node> v;
    for(int i = 0; i < n; i++) {
        cin >> buildings[i].first >> buildings[i].second;
        
        v.push_back(node(max(1, buildings[i].second - months), max(1, buildings[i].first - months), min(L, buildings[i].first + months), true));
        v.push_back(node(min(W, buildings[i].second + months), max(1, buildings[i].first - months), min(L, buildings[i].first + months), false));
    }
    sort(v.begin(), v.end());
    stack<int> st;
    ll result = 0;
    for(int x = 1; x <= L; x++) {
        int st_max = 0;

        for(int i = 0; i < (int) v.size(); i++) {
            if(v[i].x1 <=  x and x <= v[i].x2) {
                if(v[i].up) {
                    st.push(v[i].y);
                }
                else {
                    if(st.size() == 1) {
                        result += v[i].y - max(st.top(), st_max) + 1;
                        st_max = v[i].y + 1;
                    }
                    st.pop();
                }
            }
        }
        
    }
    cout << result << endl;
    return 0;
}
"
ktvQD4t2,AnimationsLumineuses01_2023,claudiusmarius,C++,Thursday 28th of September 2023 11:41:11 AM CDT,"// ATTENTION SOIGNER LE DECOUPLAGE SINON ALEAS POSSIBLES
  // By Claude DUFOURMONT YouTube
  #include <Adafruit_NeoPixel.h>
  #include <initializer_list>                   // Inclut la bibliothèque pour utiliser des listes d'initialisation

  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  // La bibliothèque <initializer_list> est utilisée pour travailler avec des listes d'initialisation en C++. 
  // Une liste d'initialisation est une séquence de valeurs délimitée par des accolades {}. 
  // Elle est souvent utilisée pour initialiser des conteneurs ou des structures de données. 
  // Dans ce code, cette bibliothèque peut être utilisée pour initialiser des objets ou des variables avec une liste de valeurs spécifiques. 
  // Elle est incluse au début du code pour que l'on puisse l'utiliser ultérieurement dans le programme
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  
  #define BrocheNeopixel01 7
  #define BrocheNeopixel02 8
  #define BrocheBuzzer A6 // Broche du buzzer
  #define BrochePotarSelection A3
  
  #define NLed01 8                              // Nbre de Leds Barette
  #define NLed02 25                             // Nbre de Leds Matrice

  #define Luminosite01 20                       // Luminosité Barette (de 0 à 255)
  #define Luminosite02 6                        // Lumunosité Matrice (de 0 à 255)
  
  #define NCouleurs01 14                        // Nombre de couleurs (RGB) pour les cercles de l'Animation01                      
  
  Adafruit_NeoPixel Strip01(NLed01, BrocheNeopixel01, NEO_GRB + NEO_KHZ800);  // Création de l'objet Adafruit_NeoPixel 01 (Barette de 8 Leds)
  Adafruit_NeoPixel Strip02(NLed02, BrocheNeopixel02, NEO_GRB + NEO_KHZ800);  // Création de l'objet Adafruit_NeoPixel 02 (Matrice de 5X5 Leds)

  // ===============================Définition des couleurs en RGB ici (par exemple, Rouge, Vert, Bleu)============================================================
  int CouleurCercle[NCouleurs01][14] =            
  {
  {200, 0, 0},   // Rouge
  {10, 0, 0},
  {0, 255, 0},   // Vert
  {0, 10, 0},
  {0, 0, 255},    // Bleu
  {0, 0, 10},
  {200, 200, 0},  // Jaune
  {10, 10, 0},
  {0, 0, 0},
  {200, 0, 200},
  {10, 0, 10},
  {0, 200, 200},
  {0, 10, 10},
  {180, 180, 180} // Blanc
  };
  // ==============================================================================================================================================================
  
  int ValeurAnalogiquePotar;                            // Valeur analogique en provenance du curseur du potentiomètre (de 0 à 1023 points)
  
  unsigned long Time00 = 500;                           // Temps d'enchainement Animation00 (ms)
  unsigned long Time01 = 60;                            // Temps d'enchainement Animation01(ms)
  
  unsigned long TempsPrecedentAnimation = 0;            // Dernier temps de début de l'animation (valable pour l'Animation00 et  l'Animation01)         
  
  int animationStep = 0;                                // Première étape de l'Animation00 (10 étapes)

  // =============================================Définition de la position des Leds pour les 3 cercles============================================================
  int PetitCercle[] = {12}; // LED centrale           
  int CercleMoyen[] = {6, 7, 8, 11, 13, 16, 17, 18}; 
  int GrandCercle[] = {0, 1, 2, 3, 4, 5, 9, 10, 14, 15, 19, 20, 21, 22, 23, 24}; 
  // ==============================================================================================================================================================
  
  int CercleActuel = 0;                                 // Indice du cercle actuel (0: petit, 1: moyen, 2: grand)
  int IndiceCouleur = 0;                                // Indice de la couleur actuelle (0: rouge, 1: vert, 2: bleu)

  int CouleursLed[NLed02][3];                           // Tableau pour stocker les couleurs actuelles de chaque LED

  void setup() 
  {
  // ===========================================Initialisation de la matrice 5X5 avec les couleurs éteintes==================================================
  for (int i = 0; i < NLed02; i++) 
  {
  for (int j = 0; j < 3; j++) 
  {
  CouleursLed[i][j] = 0;
  }
  }
  analogReadResolution(10);                           // Paramètrage du Seeeduino XIAO en résolution 10 bits en lecture (0 à 1023 points)
  pinMode(BrocheNeopixel01, OUTPUT);
  pinMode(BrocheNeopixel02, OUTPUT);
  pinMode(BrocheBuzzer, OUTPUT); 

  Strip01.begin();                                    // Initialisation de la barette Néopixel  de 8 Leds
  Strip01.setBrightness(Luminosite01);                

  Strip02.begin();                                    // Initialisation de la matrice Néopixel  de 5X5 Leds
  Strip02.setBrightness(Luminosite02);
  
  buzz(50, 10, 6);                                    // Actionnement du Buzzer au démarrage (Haut à 50 ms puis Bas à 10 ms) X 6
  }

  void loop() 
  {
  ValeurAnalogiquePotar = analogRead(BrochePotarSelection);  // Lecture en points de la tension sur le curseur du potentiomètre et affection et affectation à ValeurAnalogiquePotar 
  static int ZonePrecedente = -1;                           // Variable pour stocker la zone précédente

  int ZoneActuelle = -1;                                    // Variable pour stocker la zone actuelle

  // ===============Selon la valeur lue, détermination de la zone dans laquelle nous sommes et quel figure afficher ou quelle Animation effectuer==================
  if (ValeurAnalogiquePotar < 128) 
  {
  ZoneActuelle = 0;
  figure00();
  } 
  else if (ValeurAnalogiquePotar < 256) 
  {
  ZoneActuelle = 1;
  figure01();
  } 
  else if (ValeurAnalogiquePotar < 384) 
  {
  ZoneActuelle = 2;
  figure02();
  } 
  else if (ValeurAnalogiquePotar < 512) 
  {
  ZoneActuelle = 3;
  figure03();
  } 
  else if (ValeurAnalogiquePotar < 640) 
  {
  ZoneActuelle = 4;
  figure04();
  } 
  else if (ValeurAnalogiquePotar < 768) 
  {
  ZoneActuelle = 5;
  figure05();
  } 
  else if (ValeurAnalogiquePotar < 896) 
  {
  ZoneActuelle = 6;
  Animation00();
  } 
  else 
  {
  ZoneActuelle = 7;
  Animation01();
  }
  // ===============================================================================================================================================================
  
  // ============================================Emission d'un bip seulement en cas de changement de zone=====================================================
  if (ZoneActuelle != ZonePrecedente) 
  {
  buzz(10, 2, 4);
  Strip01.clear();
  Strip01.setPixelColor(ZoneActuelle, 255, 255, 0);

  ZonePrecedente = ZoneActuelle;
  }
  Strip01.show();
  Strip02.show();
  }

  // =========================================================Fonctions pour les figures statiques==================================================================
  
  void figure00() 
  {
  Strip02.clear();
  Strip02.setPixelColor(12, 255, 0, 0);
  }

  void figure01() 
  {
  Strip02.clear();
  for (int i : {6, 7, 8, 11, 13, 16, 17, 18}) 
  {
  Strip02.setPixelColor(i, 0, 255, 0);
  }
  }

  void figure02() 
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 3, 4, 5, 9, 10, 14, 15, 19, 20, 21, 22, 23, 24}) 
  {
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void figure03() 
  {
  Strip02.clear();
  Strip02.setPixelColor(12, 0, 0, 255);
  }

  void figure04() 
  {
  Strip02.clear();
  for (int i : {6, 7, 8, 11, 13, 16, 17, 18}) 
  {
  Strip02.setPixelColor(i, 255, 0, 0);
  }
  }

  void figure05() 
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 3, 4, 5, 9, 10, 14, 15, 19, 20, 21, 22, 23, 24}) 
  {
  Strip02.setPixelColor(i, 0, 255, 0);
  }
  }

  void figure06() 
  {
  Strip02.clear();
  for (int i = 0; i < NLed02; i++) 
  {
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void figure07() 
  {
  Strip02.clear();
  for (int i = 0; i < NLed02; i++) 
  {
  Strip02.setPixelColor(i, 255, 255, 0);
  }
  }
  // ==============================================================================================================================================================


  // ===================================================Fonctions pour les Chiffres 0 à 9 =========================================================================
  void Chiffre00()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 7, 9, 10, 12, 17, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 6, 8, 11, 13, 16, 18, 21, 22, 23}) 
  {
  Strip02.setPixelColor(i, 190, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }
  
  void Chiffre01() 
  {
  Strip02.clear();
  //for (int i : {2, 7, 12, 17 , 22}) 
  for (int i : {3, 6, 13, 16 , 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  Strip02.setPixelColor(i, 0, 210, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre02()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 7, 10, 11, 12, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 6, 11, 12, 13, 18, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre03()  
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 7, 10, 11, 12, 17, 20, 21, 22}) 
  for (int i : {1, 2, 3, 6, 11, 12, 13, 16, 21, 22, 23})
  {
  Strip02.setPixelColor(i, 190, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  } 

  void Chiffre04()  
  {
  Strip02.clear();
  for (int i : {0, 7, 9, 10, 11, 12, 17, 22}) 
  //for (int i : {1, 6, 8, 11, 12, 13, 16, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  Strip02.setPixelColor(i, 0, 210, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre05()  
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 9, 10, 11, 12, 17, 20, 21, 22}) 
  for (int i : {1, 2, 3, 8, 11, 12, 13, 16, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre06()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 9, 10, 11, 12, 17, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 8, 11, 12, 13, 16, 18, 21, 22, 23}) 
  {
  Strip02.setPixelColor(i, 190, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre07() 
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 7, 12, 17 , 22}) 
  for (int i : {1, 2, 3, 6, 13, 16 , 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  Strip02.setPixelColor(i, 0, 210, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre08()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 7, 9, 10, 11, 12, 17, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 6, 8, 11, 12, 13, 16, 18, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre09()  
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 7, 9, 10, 11, 12, 17,20, 21, 22}) 
  for (int i : {1, 2, 3, 6, 8, 11, 12, 13, 16, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  Strip02.setPixelColor(i, 150, 150, 150);
  }
  }

  // =========================================================Fonctions pour les Animations===================================================================
  
  void Animation00()                                    // Animation de défilement de Chiffres 
  
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  // La fonction Animation00 gère une animation de défilement de chiffres. 
  // Elle bascule entre différents chiffres (de 0 à 9) en fonction de la variable animationStep. 
  // À chaque étape, elle appelle une fonction spécifique (par exemple, Chiffre00, Chiffre01, etc.) pour afficher le chiffre correspondant sur votre matrice de LED. 
  // Le délai entre chaque chiffre est déterminé par la variable Time00. Lorsque l'animation est terminée, elle revient à zéro.
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
   
  {
  unsigned long TempsActuel = millis();
  if (TempsActuel - TempsPrecedentAnimation >= Time00)  // Changement de chiffre à chaque fois que le temps écoulé de la présentation du chiffre dépasse ou est égal à Time00
  {
  TempsPrecedentAnimation = TempsActuel;                // On réactualise le dernier temps de début de l 'Animation
  switch (animationStep)                                // On passe au Chiffre suivant
  {
  case 0:
  Chiffre00();
  break;
  case 1:
  Chiffre01();
  break;
  case 2:
  Chiffre02();
  break;
  case 3:
  Chiffre03();
  break;
  case 4:
  Chiffre04();
  break;
  case 5:
  Chiffre05();
  break;
  case 6:
  Chiffre06();
  break;
  case 7:
  Chiffre07();
  break;
  case 8:
  Chiffre08();
  break;
  case 9:
  Chiffre09();
  break;
  }

  animationStep = (animationStep + 1) % 10;           // On incrémente et si nous sommes à 10 c'est zéro
  Strip02.show();                                     // Affichage du Chiffre                             
  }
  }

  void Animation01()                                  // Animation de défilement de Figures  
  
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  // La fonction Animation01 gère une animation de défilement de formes géométriques sur la matrice 5X5 LEDs. 
  // Elle alterne entre trois cercles différents (petit, moyen, grand) et applique une couleur spécifique à chaque LED dans le cercle en cours. 
  // Les délais entre les changements de cercles sont déterminés par la variable Time01. 
  // Elle utilise également une variable IndiceCouleur pour alterner entre différentes couleurs définies au préalable dans le tableau CouleurCercle.
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  {
  unsigned long TempsActuel = millis();
  if (TempsActuel - TempsPrecedentAnimation >= Time01) 
  {
  TempsPrecedentAnimation = TempsActuel;
  Strip02.clear();

 
  // .................................................Allumage du cercle actuel avec la couleur actuelle.............................................................
  int* LedsActuelles;                                     // Tableau des LEDs pour le cercle actuel
  int size;

  if (CercleActuel == 0) 
  {
  LedsActuelles = PetitCercle;                            // Utilisation du tableau des LEDs pour le petit cercle
  size = sizeof(PetitCercle) / sizeof(PetitCercle[0]);    // Calcul de la taille du petit cercle
  } 
  else if (CercleActuel == 1) 
  {
  LedsActuelles = CercleMoyen;                            // Utilisation du tableau des LEDs pour le cercle moyen
  size = sizeof(CercleMoyen) / sizeof(CercleMoyen[0]);    // Calcul de la taille du cercle moyen
  } 
  else 
  {
  LedsActuelles = GrandCercle;                            // Utilisation du tableau des LEDs pour le grand cercle
  size = sizeof(GrandCercle) / sizeof(GrandCercle[0]);    // Calcul de la taille du grand cercle
  }
  
  for (int i = 0; i < size; i++) 
  {
  int ledIndex = LedsActuelles[i];
  for (int j = 0; j < 3; j++) 
  {
  CouleursLed[ledIndex][j] = CouleurCercle[IndiceCouleur][j];
  }
  }

  // .....................................................Application des couleurs actuelles à la matrice..........................................................
  for (int i = 0; i < NLed02; i++) 
  {
  Strip02.setPixelColor(i, CouleursLed[i][0], CouleursLed[i][1], CouleursLed[i][2]);
  }
  Strip02.show();

  // ......................................................Passage au cercle suivant (petit, moyen, grand).........................................................
  CercleActuel = (CercleActuel + 1) % 3;                     // Passage au cercle suivant tout en restant inférieur ou égal à 2 ( 0 à 2 -->3)

  // .....................................................Passage à la couleur suivante (rouge, vert, bleu)........................................................
  if (CercleActuel == 0) 
  {
  IndiceCouleur = (IndiceCouleur + 1) % NCouleurs01;
  }
  }
  }

  
  // ==================================================================Fonction Buzzer==============================================================================
  
  void buzz (int TempsHIGH, int TempsLOW, int NombreCycles)
  {
  for (int x = 1; x <= NombreCycles; x++)
  {
  digitalWrite(BrocheBuzzer, HIGH);
  delay (TempsHIGH);
  digitalWrite(BrocheBuzzer, LOW);
  delay (TempsLOW);
  }
  }"
kQCCKKQX,Untitled,soyl,Java,Thursday 28th of September 2023 11:39:34 AM CDT,"import java.time.Duration;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Objects;

class Practicum {
    // Задайте форматирование для времени и даты в формате часы:минуты день.месяц.год
    // Пример - 12:15 02.11.21
    public static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm dd.MM.yy"");
    // Задайте форматирование для времени в формате часы:минуты
    public static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm"");

    public static void main(String[] args) {
        System.out.println(""Тест №1:"");
        printFlightInformation(
                ""12:15 02.11.21"",
                ""VKO"",
                ""LED"",
                30,
                1,
                55
        );

        System.out.println(""\nТест №2:"");
        printFlightInformation(
                ""14:00 03.10.21"",
                ""SVX"",
                ""VVO"",
                0,
                9,
                5
        );

        System.out.println(""\nТест №3:"");
        printFlightInformation(
                ""06:00 12.12.21"",
                ""DME"",
                ""VVO"",
                0,
                12,
                0
        );

        System.out.println(""\nТест №4:"");
        printFlightInformation(
                ""23:00 29.03.22"",
                ""LED"",
                ""SVX"",
                0,
                2,
                55
        );


    }

    private static void printFlightInformation(
            String formattedDepartureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            int delay,
            int flightDurationHours,
            int flightDurationMinutes
    ) {
        Airport departureAirport;
        Airport arrivalAirport;
        // С помощью класса AirportDatabase получите данные об аэропортах вылета и посадки.
        // При получении исключения выведите сообщение исключения.
        try {
            departureAirport =  AirportDatabase.getAirportByCode(departureAirportCode);
            arrivalAirport = AirportDatabase.getAirportByCode(arrivalAirportCode);
            // исполняемый код
        } catch (IllegalStateException e) {
            System.out.println(e.getMessage());
            return;
        }
        LocalDateTime departureTime = LocalDateTime.parse(formattedDepartureTime,DATE_TIME_FORMATTER);


        ZoneId departureZone = ZoneId.of(Objects.requireNonNull(departureAirport).getZone());

        // Создайте экземпляр ZonedDateTime с помощью formattedDepartureTime и зоны аэропорта вылета.
        ZonedDateTime departure = ZonedDateTime.of(departureTime,departureZone);

        // Выведите информацию о том, между какими городами будет перелёт.

        System.out.println(""Ваш билет на рейс "" + departureAirport.getCity() + "" - "" + Objects.requireNonNull(arrivalAirport).getCity() + "": "");

        // Найдите продолжительность полёта.
        Duration flightDuration = Duration.ofHours(flightDurationHours).plusMinutes(flightDurationMinutes);
        // Найдите время прибытия с учётом зоны прилёта.
        ZoneId arrivalZonedId = ZoneId.of(arrivalAirport.getZone());
        ZonedDateTime arrival = departure.plus(flightDuration).withZoneSameLocal(arrivalZonedId);

        // Заполните данные для передачи в метод печати билета.
        // Город вылета

        String departureCity = departureAirport.getCityForTicket();
        // Город прилёта
        String arrivalCity = arrivalAirport.getCityForTicket();
        // Отформатированное время прилёта
        String formattedArrivalTime = arrival.format(DATE_TIME_FORMATTER);
        // Только время вылета
        String departureTimeOnly = departure.format(TIME_FORMATTER);

        printTicket(
                formattedDepartureTime,
                departureAirportCode,
                arrivalAirportCode,
                departureCity,
                arrivalCity,
                formattedArrivalTime,
                departureTimeOnly
        );

        // Добавьте проверку на случай задержки.
        if (delay > 0) {
            // Определите продолжительность задержки.
            Duration delayDuration = Duration.ofMinutes(delay);
            // Вычислите время вылета с учётом задержки.
            ZonedDateTime departureWithDelay = departure.plus(delayDuration);
            // Вычислите время прилёта с учётом задержки.
            ZonedDateTime arrivalWithDelay = arrival.plus(delayDuration);

            System.out.println(""Ваш вылет задерживается."");
            // Выведите продолжительность задержки в формате часы:минуты
            System.out.println(""Задержка: "" + delayDuration.toHours()
            + "":"" + delayDuration.toMinutesPart());
            // Выведите отформатированное время вылета с учётом задержки.
            System.out.println(""Обновлённое время вылета: "" + departureWithDelay.format(DATE_TIME_FORMATTER));
            // Выведите отформатированное время прилёта с учётом задержки.
            System.out.println(""Обновлённое время прилёта: "" + arrivalWithDelay.format(DATE_TIME_FORMATTER));
        } else {
            System.out.println(""Удачного полёта!"");
        }
    }

    private static void printTicket(
            String departureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            String departureCity,
            String arrivalCity,
            String arrivalTime,
            String departureTimeOnly
    ) {
        System.out.println(
                "" _______________________________________________________\n"" +
                        ""|                                            |          |\n"" +
                        ""|  "" + departureCity + ""|"" + departureAirportCode + ""      ""
                        + departureTime + ""  |   "" + departureAirportCode + ""    |\n"" +
                        ""|  "" + arrivalCity + ""|"" + arrivalAirportCode + ""      ""
                        + arrivalTime + ""  |   "" + arrivalAirportCode + ""    |\n"" +
                        ""|                                            |          |\n"" +
                        ""|  BOARDING TIME   --:--      SEAT  1A       |   "" + departureTimeOnly + ""  |\n"" +
                        ""|  GATE  23                                  |   1A     |\n"" +
                        ""|____________________________________________|__________|"");
    }
}"
Si1SmwXb,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 28th of September 2023 11:39:33 AM CDT,"Pasted at: 28/09/2023 17:39
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Y1QrSnEH,startup,bullseye224,Lua,Thursday 28th of September 2023 11:39:21 AM CDT,"-------------------------------
--Select a slot
-------------------------------
function ss(num)
    turtle.select(num)
end

-------------------------------
--Turning Functions 
-------------------------------
--Turn Right
function tr(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        turtle.turnRight()
    end.
end

--Turn Left
function tl(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        turtle.turnLeft()
    end
end

-------------------------------
--Movement Functions
-------------------------------
--Go forward
function gf(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        while turtle.detect() do
            turtle.dig()
        end
        turtle.forward()
    end
end

--Go Back
function gb(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        turtle.back()
    end
end

--Go Up
function gu(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        while turtle.detectUp() do
            turtle.digUp()
        end
        turtle.up()
    end
end

--Go Down
function gd(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        if turtle.detectDown() then
            turtle.digDown()
            turtle.down()
        else
            turtle.down()
        end
    end
end

-------------------------------
--Digging Functions 
-------------------------------
-- Dig Forward
function df()
    while turtle.detect() do
        turtle.dig()
    end
end

--Dig Up
function du()
    while turtle.detectUp() do
        turtle.digUp()
    end
end

--Dig Down
function dd()
    while turtle.detectDown() do
        turtle.digDown()
    end
end

-------------------------------
--Placing Functions 
-------------------------------
--Place Forward
function pf(num)
    if (num == nil or num == '') then
        turtle.place()
    else
        ss(num)
        turtle.place()
    end
end

--Place Up
function pu(num)
    if (num == nil or num == '') then
        turtle.placeUp()
    else
        ss(num)
        turtle.placeUp()
    end
end

--Place Down
function pd(num)
    if (num == nil or num == '') then
        turtle.placeDown()
    else
        ss(num)
        turtle.placeDown()
    end
end
 
-------------------------------
--Refuels the turtle
-------------------------------
function refuel(num) 
    if (num == nil or num == '') then
        turtle.refuel())
    else
        ss(num)
        turtle.refuel()
    end
end

----------------------------------
--Start
----------------------------------
refuel(16)
--Startup Destination
goalx = 1 --Please Update after moving
goaly = 1 --Please Update after moving
goalz = 1 --Please Update after moving

--Get GPS Location
x,y,z = gps.locate( 2, true )

-- Go to the correct Z location
if z > goalz then
	for i=z, goalz, -1
	do
        gd()
    end
    print(""Z Position Found"")
end
if z < goalz then
	for i=z, goalz, 1
	do
        gu()
    end
        print(""Z Position Found"")
end
-- Go to the correct X location
if x == goalx then
    print(""X Position Found"")
else
	gf()
    newx,newy,newz = gps.locate( 2, true )
    
    --Make sure we are on the correct axis
    if newx == x then
        tr()
    	newx,newy,newz = gps.locate( 2, true )
    end
    
    --Make sure we are facing the right way
    if ( math.abs( goalx - newx ) ) > ( math.abs( goalx - x) ) then
        tr(2)
    end
    
    if newx > goalx then
        for i=newx, goalx, -1
        do
            gf()
        end
        print(""X Position Found"")
    end
    if newx < goalx then
        for i=newx, goalx, 1
        do
            gf()
        end
        print(""X Position Found"")
    end
    
end

-- Go to the correct Y location
if y == goaly then
    print(""Y Position Found"")
else
	gf()
    newx,newy,newz = gps.locate( 2, true )
    
    --Make sure we are on the correct axis
    if newy == y then
        tr()
    	newx,newy,newz = gps.locate( 2, true )
    end
    
    --Make sure we are facing the right way
    if ( math.abs( goaly - newy ) ) > ( math.abs( goaly - y) ) then
        tr(2)
    end
    
    if newy > goaly then
        for i=newy, goaly, -1
        do
            gf()
        end
        print(""Y Position Found"")
    end
    if newy < goaly then
        for i=newy, goaly, 1
        do
            gf()
        end
        print(""Y Position Found"")
    end
    
end
"
hURPYR97,trial,coinwalk,JavaScript,Thursday 28th of September 2023 11:34:45 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((0.00001).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1000;
var lol = true
var synch = ((Math.floor(smmly/bogs))*bogs);
var distj = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
nemo = document.getElementById('pct_balance').value;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo<(sysch+(bogs*3)))) {
	blert = blert*2;
    	circuit = parseFloat(nemo);
}
if ((nemo>(sysch+(bogs*3)))&&(nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))) {
	blert = nudle*2;
	fatt = 1;
	lol = false; 
	circuit = parseFloat(nemo);
	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo<(sysch-(bogs*3)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
distj = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(distj);
$('#a_lo').click();
var dog = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
5ftrCzHd,[site-reviews] [wc_verified_owner] shortcode,geminilabs,PHP Brief,Thursday 28th of September 2023 11:20:03 AM CDT,"/**
 * Registers the [wc_verified_owner][/wc_verified_owner] shortcode
 * 
 * @param array $atts
 * @param string $content
 * @return ?string
 */
add_shortcode('wc_verified_owner', function ($atts, $content = '') {
    if (!function_exists('wc_customer_bought_product') || !function_exists('wc_get_product')) {
        return;
    }
    if (empty($content)) {
        return;
    }
    $product = wc_get_product(get_the_ID());
    if (!$product) {
        return;
    }
    $defaults = [
        'message' => esc_html_e('Only logged in customers who have purchased this product may leave a review.', 'woocommerce'),
    ];
    $atts = shortcode_atts($defaults, $atts, 'wc_verified_owner');
    $isProductOwner = wc_customer_bought_product('', get_current_user_id(), $product->get_id());
    $verificationRequired = 'yes' === get_option('woocommerce_review_rating_verification_required');
    if (!$isProductOwner && $verificationRequired) {
        $message = sanitize_text_field($atts['message']);
        if (!empty($message)) {
            $message = sprintf('<p class=""woocommerce-verification-required"">%s</p>', $message);
        }
        return $message;
    }
    return do_shortcode($content);
}, 10, 2);"
cuEPL6uU,moouseP,maskub1234,Lua,Thursday 28th of September 2023 11:13:33 AM CDT,"local Player = game.Players.LocalPlayer
local mouse = Player:GetMouse()
local hitPosition = mouse.Hit.p

print(hitPosition)
setclipboard(tostring(hitPosition))
"
8xgXpSvh,Untitled,Don_Mag,Swift,Thursday 28th of September 2023 11:03:44 AM CDT,"class MoveImageScrollVC: UIViewController, UIScrollViewDelegate {
	
	var exampleConstraint: NSLayoutConstraint!
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		let scrollView = UIScrollView()
		scrollView.backgroundColor = .systemYellow
		scrollView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(scrollView)
		
		let g = view.safeAreaLayoutGuide
		let cg = scrollView.contentLayoutGuide
		let fg = scrollView.frameLayoutGuide
		
		NSLayoutConstraint.activate([
			// constrain scroll view to safe area, inset by 20-points
			scrollView.topAnchor.constraint(equalTo: g.topAnchor, constant: 20.0),
			scrollView.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),
			scrollView.bottomAnchor.constraint(equalTo: g.bottomAnchor, constant: -20.0),
			scrollView.widthAnchor.constraint(equalToConstant: 100.0),
		])
		
		let tallLabel = UILabel()
		tallLabel.backgroundColor = .cyan
		tallLabel.numberOfLines = 0
		tallLabel.textAlignment = .center
		tallLabel.font = .systemFont(ofSize: 24.0, weight: .light)
		
		var str: String = ""1""
		for i in 2...50 {
			str += ""\n\(i)""
		}
		tallLabel.text = str
		
		tallLabel.translatesAutoresizingMaskIntoConstraints = false
		scrollView.addSubview(tallLabel)
		
		NSLayoutConstraint.activate([
			tallLabel.topAnchor.constraint(equalTo: cg.topAnchor, constant: 8.0),
			tallLabel.leadingAnchor.constraint(equalTo: cg.leadingAnchor, constant: 8.0),
			tallLabel.trailingAnchor.constraint(equalTo: cg.trailingAnchor, constant: 0.0),
			tallLabel.bottomAnchor.constraint(equalTo: cg.bottomAnchor, constant: -8.0),
			tallLabel.widthAnchor.constraint(equalTo: fg.widthAnchor, constant: -16.0),
		])
		
		let anchorView = UILabel()
		anchorView.backgroundColor = .yellow
		anchorView.textAlignment = .center
		anchorView.text = ""Anchor View""

		let constrainedView = UIImageView()
		if let img = UIImage(named: ""sampleImage"") {
			constrainedView.image = img
		}
		
		anchorView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(anchorView)
		constrainedView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(constrainedView)
		
		exampleConstraint = constrainedView.bottomAnchor.constraint(equalTo: anchorView.topAnchor, constant: 0.0)
		exampleConstraint.priority = .required - 1
		
		NSLayoutConstraint.activate([
			
			anchorView.leadingAnchor.constraint(equalTo: scrollView.trailingAnchor, constant: 20.0),
			anchorView.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),
			anchorView.bottomAnchor.constraint(equalTo: scrollView.bottomAnchor, constant: 0.0),
			anchorView.heightAnchor.constraint(equalToConstant: 40.0),

			exampleConstraint,
			constrainedView.topAnchor.constraint(greaterThanOrEqualTo: scrollView.topAnchor),
			constrainedView.leadingAnchor.constraint(equalTo: anchorView.leadingAnchor, constant: 0.0),
			constrainedView.trailingAnchor.constraint(equalTo: anchorView.trailingAnchor, constant: 0.0),
			constrainedView.heightAnchor.constraint(equalToConstant: 120.0),
		])
		
		scrollView.delegate = self
	}
	
	func scrollViewDidScroll(_ scrollView: UIScrollView) {
		let up = scrollView.contentOffset.y
		print(""up \(up)"")
		exampleConstraint.constant = -up
	}
	
}
"
ErDAmUNx,Untitled,yungKKKK,Java,Thursday 28th of September 2023 11:02:24 AM CDT,"int int_position = 0;
        Uri uri;
        Cursor cursor;
        int column_index_data, column_index_folder_name,column_id,thum;

        String absolutePathOfImage = null;
        uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;

        String[] projection = {MediaStore.MediaColumns.DATA, MediaStore.Video.Media.BUCKET_DISPLAY_NAME,MediaStore.Video.Media._ID,MediaStore.Video.Thumbnails.DATA};

        final String orderBy = MediaStore.Images.Media.DATE_TAKEN;
        cursor = getApplicationContext().getContentResolver().query(uri, projection, null, null, orderBy + "" DESC"");

        column_index_data = cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DATA);
        column_index_folder_name = cursor.getColumnIndexOrThrow(MediaStore.Video.Media.BUCKET_DISPLAY_NAME);
        column_id = cursor.getColumnIndexOrThrow(MediaStore.Video.Media._ID);
        thum = cursor.getColumnIndexOrThrow(MediaStore.Video.Thumbnails.DATA);

        while (cursor.moveToNext()) {
            absolutePathOfImage = cursor.getString(column_index_data);
            Log.e(""Column"", absolutePathOfImage);
            Log.e(""Folder"", cursor.getString(column_index_folder_name));
            Log.e(""column_id"", cursor.getString(column_id));
            Log.e(""thum"", cursor.getString(thum));

            Model_Video obj_model = new Model_Video();
            obj_model.setBoolean_selected(false);
            obj_model.setStr_path(absolutePathOfImage);
            obj_model.setStr_thumb(cursor.getString(thum));

            al_video.add(obj_model);

        }"
KmLszdRE,Untitled,Josif_tepe,C++,Thursday 28th of September 2023 10:58:57 AM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
#include <iostream>
#include <set>
#include <cstring>
#include <stack>
//#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 3e5 + 10;
const ll INF = 3e16 + 10;

int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    vector<pair<int, int>> points(n);
    
    for(int i = 0; i < n; i++) {
        cin >> points[i].first >> points[i].second;
    }
    sort(points.begin(), points.end());
    set<pair<int, int>> st;
    st.insert(make_pair(points[0].first, points[0].second));
    ll shortest_distance = 1e9, result = 1e18;
    for(int i = 1; i < n; i++) {
        set<pair<int, int>>::iterator it1 = st.lower_bound(make_pair(points[i].first - shortest_distance, points[i].second - shortest_distance));
        
        set<pair<int, int>>::iterator it2 = st.upper_bound(make_pair(points[i].first, points[i].second + shortest_distance));
        
        if(it1 == st.end()) {
            continue;
        }
        
        for(set<pair<int, int>>::iterator it = it1; it != it2; it++) {
            ll dist = (points[i].first - it->first) * (points[i].first - it->first) + (points[i].second - it->second) * (points[i].second - it->second);
            result = min(result, dist);
        }
        st.insert(make_pair (points[i].first, points[i].second));
    }
    cout << sqrt(result) << endl;
    return 0;
}
"
Pec3CuRN,ADB_Labs,DevilVeNom,T-SQL,Thursday 28th of September 2023 10:49:23 AM CDT,"-- Q.NO.1
CREATE TABLE DEPARTMENT(
	ID INT IDENTITY(1,1),
	Dept_Name VARCHAR(50) NOT NULL,
	Dept_Location VARCHAR(50) NOT NULL,
	CONSTRAINT PK_DEPARTMENT_DNUMBER PRIMARY KEY(ID)
)
GO

-- Insert data in departments
INSERT INTO DEPARTMENT (Dept_Name, Dept_Location)
VALUES
    ('Human Resources', 'Kathmandu'),
    ('Marketing', 'Pokhara'),
    ('Finance', 'Biratnagar'),
    ('Engineering', 'Lalitpur');

GO

CREATE TABLE EMPLOYEE(
	ID INT IDENTITY(1,1), 
	Fname VARCHAR(50) NOT NULL,
	Mname VARCHAR(50),
	Lname VARCHAR(50) NOT NULL,
	FullName AS CONCAT(Fname, ' ', Lname),
	Gender CHAR(1) NOT NULL,
	DOB DATE NOT NULL,
	[Address] VARCHAR(50) NOT NULL,
	Salary DECIMAL(18,2) NOT NULL,
	Supervisor_ID INT NOT NULL,
	Dept_ID INT,
	CONSTRAINT PK_EMPLOYEE_SSN PRIMARY KEY(ID),
	CONSTRAINT FK_EMPLOYEE_DEPT_ID FOREIGN KEY(Dept_ID) REFERENCES DEPARTMENT(ID)
)
GO

-- Insert data in employee
INSERT INTO EMPLOYEE (Fname, Mname, Lname, Gender, DOB, [Address], Salary, Supervisor_ID, Dept_ID)
VALUES
    ('Ramesh', 'Kumar', 'Shrestha', 'M', '1990-05-15', 'Kathmandu, Nepal', 55000.00, 1, 1)
GO

ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_SUPERVISOR_ID FOREIGN KEY(Supervisor_ID) REFERENCES EMPLOYEE(ID)
GO

INSERT INTO EMPLOYEE (Fname, Mname, Lname, Gender, DOB, [Address], Salary, Supervisor_ID, Dept_ID)
VALUES
    ('Sita', '', 'Rai', 'F', '1985-12-10', 'Pokhara, Nepal', 48000.00, 1, 2),
    ('Hari', 'Bahadur', 'Tamang', 'M', '1993-08-25', 'Lalitpur, Nepal', 60000.00, 1, 3),
    ('Gita', 'Devi', 'Thapa', 'F', '1988-03-20', 'Biratnagar, Nepal', 52000.00, 1, 4),
    ('Nabin', 'Shankar', 'Bista', 'M', '1995-06-05', 'Kathmandu, Nepal', 56000.00, 1, 1);
GO

CREATE TABLE PROJECT(
	ID INT IDENTITY(1,1),
	Pname VARCHAR(50) NOT NULL,
	Dept_ID INT,
	CONSTRAINT PK_PROJECT_PNUM_PLOC PRIMARY KEY(ID),
	CONSTRAINT FK_PROJECT_DEPT_ID FOREIGN KEY(Dept_ID) REFERENCES DEPARTMENT(ID)
)
GO

-- Inserting values into the PROJECT table
INSERT INTO PROJECT (Pname, Dept_ID)
VALUES
    ('Project A', 1),
    ('Project B', 2),
    ('Project C', 1),
    ('Project D', 3);
GO

CREATE TABLE [DEPENDENT](
	ID INT IDENTITY(1,1),
	EMP_ID INT NOT NULL,
	Dependent_Name VARCHAR(50) NOT NULL,
	Gender CHAR(1) NOT NULL,
	DOB DATE NOT NULL,
	Relationship VARCHAR(50) NOT NULL,
	CONSTRAINT PK_DEPENDENT_ID PRIMARY KEY(ID),
	CONSTRAINT FK_DEPENDENT_EMP_ID FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(ID)
)
GO

-- Inserting one dependent for each employee
INSERT INTO [DEPENDENT] (EMP_ID, Dependent_Name, Gender, DOB, Relationship)
VALUES
    (1, 'Sarita Shrestha', 'F', '2010-02-28', 'Daughter'),
    (2, 'Amit Rai', 'M', '2008-07-15', 'Son'),
    (3, 'Sushma Tamang', 'F', '2015-09-10', 'Daughter'),
    (4, 'Rohan Thapa', 'M', '2012-04-05', 'Son'),
    (5, 'Sima Bista', 'F', '2017-11-20', 'Daughter');
GO

SELECT TOP 1 FullName, D.Dept_Name, P.Pname, E.Salary 
FROM EMPLOYEE E
		INNER JOIN DEPARTMENT D ON E.Dept_ID = D.ID
		INNER JOIN PROJECT P ON P.Dept_ID = D.ID
ORDER BY E.Salary DESC

==========================================================================================================================

-- Q.NO. 2

CREATE TABLE EMPLOYEE(
	ID INT IDENTITY(1,1)
	, [NAME] VARCHAR(50)
	, OCCUPATION VARCHAR(50)
	, WORKING_DATE DATE
	, WORKING_HOUR INT
	, CONSTRAINT PK_EMPLOYEE_ID PRIMARY KEY(ID)
)
GO


CREATE TRIGGER BEFORE_EMPLOYEE_INSERT
ON EMPLOYEE
INSTEAD OF INSERT
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO EMPLOYEE([NAME], OCCUPATION, WORKING_DATE, WORKING_HOUR)
	SELECT i.[name], i.OCCUPATION, i.WORKING_DATE, (CASE WHEN i.WORKING_HOUR >0 THEN i.WORKING_HOUR ELSE 0 END)
	FROM inserted i
END
GO

SELECT * FROM EMPLOYEE

INSERT INTO EMPLOYEE([NAME], OCCUPATION, WORKING_DATE, WORKING_HOUR)
VALUES  ('John Doe', 'Engineer', '2023-09-28', 8),
		('Jane Smith', 'Manager', '2023-09-28', -2),
		('Alice Johnson', 'Designer', '2023-09-27', 6),
		('Bob Brown', 'Technician', '2023-09-27', 0),
		('Eva Davis', 'Analyst', '2023-09-26', -4);"
cvsJSPuA,News Sep28 23,Newscaster_Ned,Email,Thursday 28th of September 2023 10:38:16 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎,‎ ‎i‎t‎'‎s‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎ ‎L‎e‎t‎ ‎d‎a‎d‎d‎y‎ ‎N‎e‎d‎ ‎g‎i‎v‎e‎ ‎i‎t‎ ‎t‎o‎ ‎y‎a‎.‎

F‎o‎r‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎W‎r‎i‎t‎e‎r‎s‎,‎ ‎H‎u‎m‎a‎n‎s‎ ‎H‎a‎v‎e‎ ‎W‎o‎n‎ ‎t‎h‎e‎ ‎B‎a‎t‎t‎l‎e‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎A‎I‎ ‎.‎.‎.‎ ‎F‎o‎r‎ ‎N‎o‎w‎
K‎e‎r‎r‎y‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎D‎o‎e‎s‎n‎'‎t‎ ‎W‎a‎n‎t‎ ‎t‎o‎ ‎B‎e‎ ‎‘‎A‎c‎c‎e‎s‎s‎o‎r‎y‎ ‎t‎o‎ ‎a‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎’‎s‎ ‎J‎o‎u‎r‎n‎e‎y‎’‎
B‎r‎u‎c‎e‎ ‎S‎p‎r‎i‎n‎g‎s‎t‎e‎e‎n‎ ‎P‎o‎s‎t‎p‎o‎n‎e‎s‎ ‎R‎e‎m‎a‎i‎n‎i‎n‎g‎ ‎2‎0‎2‎3‎ ‎T‎o‎u‎r‎ ‎D‎a‎t‎e‎s‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎H‎o‎u‎s‎e‎ ‎H‎o‎l‎d‎s‎ ‎F‎i‎r‎s‎t‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎i‎n‎ ‎B‎i‎d‎e‎n‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎I‎n‎q‎u‎i‎r‎y‎
S‎t‎u‎d‎y‎:‎ ‎G‎o‎o‎g‎l‎e‎ ‎S‎e‎a‎r‎c‎h‎e‎s‎ ‎B‎i‎a‎s‎e‎d‎ ‎i‎n‎ ‎F‎a‎v‎o‎r‎ ‎o‎f‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎R‎F‎K‎ ‎J‎r‎,‎ ‎G‎O‎P‎
'‎H‎a‎r‎r‎y‎ ‎P‎o‎t‎t‎e‎r‎'‎ ‎S‎t‎a‎r‎ ‎M‎i‎c‎h‎a‎e‎l‎ ‎G‎a‎m‎b‎o‎n‎,‎ ‎W‎h‎o‎ ‎P‎l‎a‎y‎e‎d‎ ‎D‎u‎m‎b‎l‎e‎d‎o‎r‎e‎,‎ ‎D‎e‎a‎d‎ ‎a‎t‎ ‎8‎2‎
H‎o‎u‎s‎e‎ ‎B‎l‎o‎c‎k‎s‎ ‎P‎r‎o‎p‎o‎s‎a‎l‎s‎ ‎t‎o‎ ‎E‎n‎d‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎A‎i‎d‎,‎ ‎T‎r‎a‎n‎s‎f‎e‎r‎ ‎o‎f‎ ‎C‎l‎u‎s‎t‎e‎r‎ ‎B‎o‎m‎b‎s‎
O‎u‎t‎r‎a‎g‎e‎ ‎a‎s‎ ‎O‎n‎e‎ ‎o‎f‎ ‎B‎r‎i‎t‎a‎i‎n‎'‎s‎ ‎M‎o‎s‎t‎ ‎F‎a‎m‎o‎u‎s‎ ‎T‎r‎e‎e‎s‎ ‎C‎u‎t‎ ‎D‎o‎w‎n‎ ‎O‎v‎e‎r‎n‎i‎g‎h‎t‎
C‎h‎e‎r‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎H‎i‎r‎i‎n‎g‎ ‎F‎o‎u‎r‎ ‎M‎e‎n‎ ‎t‎o‎ ‎K‎i‎d‎n‎a‎p‎ ‎H‎e‎r‎ ‎S‎o‎n‎
M‎o‎r‎e‎ ‎D‎e‎a‎t‎h‎s‎ ‎a‎s‎ ‎I‎m‎p‎o‎r‎t‎e‎d‎ ‎G‎a‎n‎g‎ ‎V‎i‎o‎l‎e‎n‎c‎e‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎s‎ ‎i‎n‎ ‎S‎w‎e‎d‎e‎n‎
M‎a‎r‎s‎h‎a‎ ‎B‎l‎a‎c‎k‎b‎u‎r‎n‎ ‎E‎n‎d‎o‎r‎s‎e‎s‎ ‎D‎a‎v‎e‎ ‎M‎c‎C‎o‎r‎m‎i‎c‎k‎'‎s‎ ‎B‎i‎d‎ ‎t‎o‎ ‎U‎n‎s‎e‎a‎t‎ ‎B‎o‎b‎ ‎C‎a‎s‎e‎y‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎F‎i‎r‎s‎t‎ ‎B‎i‎d‎e‎n‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎H‎e‎a‎r‎i‎n‎g‎

C‎o‎r‎r‎u‎p‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎a‎b‎u‎s‎e‎ ‎o‎f‎ ‎p‎u‎b‎l‎i‎c‎ ‎o‎f‎f‎i‎c‎e‎

T‎h‎e‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎:‎ ‎E‎m‎a‎i‎l‎s‎,‎ ‎T‎e‎x‎t‎s‎,‎ ‎B‎a‎n‎k‎ ‎R‎e‎c‎o‎r‎d‎s‎

T‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎f‎ ‎R‎e‎p‎r‎e‎s‎e‎n‎t‎a‎t‎i‎v‎e‎s‎ ‎w‎i‎l‎l‎ ‎h‎o‎l‎d‎ ‎i‎t‎s‎ ‎f‎i‎r‎s‎t‎ ‎h‎e‎a‎r‎i‎n‎g‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎i‎n‎q‎u‎i‎r‎y‎ ‎i‎n‎t‎o‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎o‎n‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎,‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎ ‎2‎8‎.‎

B‎R‎E‎I‎T‎B‎A‎R‎T‎ ‎N‎E‎W‎S‎5‎2‎
…‎H‎U‎N‎T‎E‎R‎ ‎R‎E‎F‎E‎R‎R‎E‎D‎ ‎T‎O‎ ‎S‎E‎L‎L‎I‎N‎G‎ ‎A‎C‎C‎E‎S‎S‎ ‎T‎O‎ ‎D‎A‎D‎ ‎A‎S‎ ‎‘‎K‎E‎Y‎S‎’‎ ‎T‎O‎ ‎‘‎M‎Y‎ ‎F‎A‎M‎I‎L‎Y‎’‎S‎ ‎O‎N‎L‎Y‎ ‎A‎S‎S‎E‎T‎’‎
W‎E‎N‎D‎E‎L‎L‎ ‎H‎U‎S‎E‎B‎Ø‎
8‎7‎
*‎T‎H‎E‎ ‎U‎N‎I‎V‎I‎S‎I‎O‎N‎ ‎D‎E‎B‎A‎T‎E‎!‎*‎

B‎I‎D‎E‎N‎ ‎G‎E‎T‎S‎ ‎P‎A‎S‎S‎

R‎E‎P‎U‎B‎L‎I‎C‎A‎N‎ ‎R‎U‎M‎P‎U‎S‎:‎ ‎E‎V‎E‎R‎Y‎O‎N‎E‎ ‎S‎P‎E‎A‎K‎S‎ ‎–‎ ‎A‎T‎ ‎S‎A‎M‎E‎ ‎T‎I‎M‎E‎

D‎I‎D‎ ‎T‎R‎U‎M‎P‎ ‎W‎I‎N‎?‎

D‎I‎D‎ ‎D‎E‎S‎A‎N‎T‎I‎S‎ ‎C‎H‎A‎N‎G‎E‎ ‎M‎O‎M‎E‎N‎T‎U‎M‎?‎

C‎H‎R‎I‎S‎T‎I‎E‎ ‎C‎H‎E‎E‎S‎E‎ ‎B‎A‎L‎L‎:‎ ‎T‎R‎O‎T‎S‎ ‎O‎U‎T‎ ‎H‎A‎C‎K‎N‎E‎Y‎E‎D‎ ‎’‎D‎O‎N‎A‎L‎D‎ ‎D‎U‎C‎K‎’‎ ‎L‎I‎N‎E‎

F‎O‎X‎ ‎U‎S‎E‎S‎ ‎R‎E‎A‎G‎A‎N‎ ‎T‎O‎ ‎P‎U‎S‎H‎ ‎A‎M‎N‎E‎S‎T‎Y‎…‎
M‎A‎T‎T‎H‎E‎W‎ ‎B‎O‎Y‎L‎E‎
6‎,‎9‎4‎8‎
…‎T‎R‎U‎M‎P‎ ‎C‎A‎M‎P‎A‎I‎G‎N‎ ‎T‎O‎ ‎R‎N‎C‎:‎ ‎E‎N‎D‎ ‎T‎H‎E‎M‎,‎ ‎S‎A‎V‎E‎ ‎R‎E‎S‎O‎U‎R‎C‎E‎S‎ ‎F‎O‎R‎ ‎B‎E‎A‎T‎I‎N‎G‎ ‎B‎I‎D‎E‎N‎
H‎A‎N‎N‎A‎H‎ ‎B‎L‎E‎A‎U‎
8‎8‎
T‎R‎U‎M‎P‎ ‎T‎O‎ ‎A‎U‎T‎O‎ ‎W‎O‎R‎K‎E‎R‎S‎:‎ ‎‘‎Y‎O‎U‎ ‎B‎U‎I‎L‎T‎ ‎T‎H‎I‎S‎ ‎C‎O‎U‎N‎T‎R‎Y‎’‎
J‎O‎H‎N‎ ‎C‎A‎R‎N‎E‎Y‎
2‎2‎3‎
N‎E‎W‎S‎O‎M‎ ‎D‎I‎S‎M‎I‎S‎S‎E‎S‎ ‎P‎A‎R‎E‎N‎T‎S‎’‎ ‎R‎I‎G‎H‎T‎ ‎T‎O‎ ‎K‎N‎O‎W‎ ‎A‎B‎O‎U‎T‎ ‎K‎I‎D‎S‎’‎ ‎G‎E‎N‎D‎E‎R‎ ‎T‎R‎A‎N‎S‎I‎T‎I‎O‎N‎S‎
J‎O‎E‎L‎ ‎B‎.‎ ‎P‎O‎L‎L‎A‎K‎
3‎5‎9‎

B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎D‎i‎g‎e‎s‎t‎:‎ ‎C‎a‎n‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎M‎e‎e‎t‎ ‎t‎h‎e‎ ‎U‎A‎W‎ ‎S‎t‎r‎i‎k‎e‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎?‎
1‎,‎2‎1‎9‎

T‎r‎u‎m‎p‎ ‎F‎r‎a‎u‎d‎ ‎C‎a‎s‎e‎:‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎J‎u‎d‎g‎e‎,‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎P‎r‎o‎s‎e‎c‎u‎t‎o‎r‎,‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎C‎i‎t‎y‎
1‎0‎,‎2‎6‎7‎
B‎i‎d‎e‎n‎ ‎D‎o‎e‎s‎ ‎N‎o‎t‎ ‎M‎e‎n‎t‎i‎o‎n‎ ‎H‎i‎s‎ ‎E‎V‎ ‎M‎a‎n‎d‎a‎t‎e‎s‎ ‎i‎n‎ ‎V‎i‎s‎i‎t‎ ‎w‎i‎t‎h‎ ‎S‎t‎r‎i‎k‎i‎n‎g‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎
B‎i‎d‎e‎n‎ ‎D‎o‎e‎s‎ ‎N‎o‎t‎ ‎M‎e‎n‎t‎i‎o‎n‎ ‎H‎i‎s‎ ‎E‎V‎ ‎M‎a‎n‎d‎a‎t‎e‎s‎ ‎i‎n‎ ‎V‎i‎s‎i‎t‎ ‎w‎i‎t‎h‎ ‎S‎t‎r‎i‎k‎i‎n‎g‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎
5‎,‎1‎5‎6‎
*‎*‎*‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎M‎e‎e‎t‎ ‎A‎u‎t‎o‎w‎o‎r‎k‎e‎r‎s‎,‎ ‎O‎t‎h‎e‎r‎s‎ ‎D‎e‎b‎a‎t‎e‎
*‎*‎*‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎M‎e‎e‎t‎ ‎A‎u‎t‎o‎w‎o‎r‎k‎e‎r‎s‎,‎ ‎O‎t‎h‎e‎r‎s‎ ‎D‎e‎b‎a‎t‎e‎
6‎,‎9‎4‎8‎
T‎r‎u‎m‎p‎:‎ ‎B‎i‎d‎e‎n‎ ‎G‎e‎t‎s‎ ‎H‎i‎s‎ ‎H‎a‎n‎d‎s‎ ‎D‎i‎r‎t‎y‎ ‎t‎o‎ ‎A‎c‎c‎e‎p‎t‎ ‎C‎a‎s‎h‎ ‎f‎r‎o‎m‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎C‎o‎u‎n‎t‎r‎i‎e‎s‎
T‎r‎u‎m‎p‎:‎ ‎B‎i‎d‎e‎n‎ ‎G‎e‎t‎s‎ ‎H‎i‎s‎ ‎H‎a‎n‎d‎s‎ ‎D‎i‎r‎t‎y‎ ‎t‎o‎ ‎A‎c‎c‎e‎p‎t‎ ‎C‎a‎s‎h‎ ‎f‎r‎o‎m‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎C‎o‎u‎n‎t‎r‎i‎e‎s‎
7‎2‎6‎
A‎n‎t‎h‎r‎o‎p‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎o‎c‎i‎e‎t‎i‎e‎s‎ ‎B‎a‎n‎ ‎D‎i‎s‎c‎u‎s‎s‎i‎o‎n‎ ‎o‎f‎ ‎B‎i‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎e‎x‎
A‎n‎t‎h‎r‎o‎p‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎o‎c‎i‎e‎t‎i‎e‎s‎ ‎B‎a‎n‎ ‎D‎i‎s‎c‎u‎s‎s‎i‎o‎n‎ ‎o‎f‎ ‎B‎i‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎e‎x‎
1‎5‎7‎
'‎U‎n‎w‎a‎t‎c‎h‎a‎b‎l‎e‎'‎:‎ ‎V‎i‎e‎w‎e‎r‎s‎ ‎B‎l‎a‎s‎t‎ ‎R‎N‎C‎,‎ ‎F‎o‎x‎ ‎f‎o‎r‎ ‎I‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎U‎n‎i‎v‎i‎s‎i‎o‎n‎ ‎i‎n‎ ‎D‎e‎b‎a‎t‎e‎
'‎U‎n‎w‎a‎t‎c‎h‎a‎b‎l‎e‎'‎:‎ ‎V‎i‎e‎w‎e‎r‎s‎ ‎B‎l‎a‎s‎t‎ ‎R‎N‎C‎,‎ ‎F‎o‎x‎ ‎f‎o‎r‎ ‎I‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎U‎n‎i‎v‎i‎s‎i‎o‎n‎ ‎i‎n‎ ‎D‎e‎b‎a‎t‎e‎
6‎6‎0‎
E‎n‎e‎r‎g‎y‎ ‎I‎n‎d‎u‎s‎t‎r‎y‎ ‎C‎o‎n‎f‎r‎o‎n‎t‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎ ‎o‎f‎ ‎P‎r‎o‎d‎u‎c‎i‎n‎g‎ ‎w‎h‎e‎n‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎s‎p‎i‎s‎e‎s‎ ‎T‎h‎e‎m‎
E‎n‎e‎r‎g‎y‎ ‎I‎n‎d‎u‎s‎t‎r‎y‎ ‎C‎o‎n‎f‎r‎o‎n‎t‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎ ‎o‎f‎ ‎P‎r‎o‎d‎u‎c‎i‎n‎g‎ ‎w‎h‎e‎n‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎s‎p‎i‎s‎e‎s‎ ‎T‎h‎e‎m‎
3‎,‎4‎1‎0‎
C‎N‎N‎'‎s‎ ‎C‎o‎o‎p‎e‎r‎:‎ ‎W‎h‎y‎ ‎I‎s‎ ‎H‎u‎n‎t‎e‎r‎ ‎L‎i‎s‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎D‎a‎d‎'‎s‎ ‎A‎d‎d‎r‎e‎s‎s‎ ‎o‎n‎ ‎W‎i‎r‎e‎s‎ ‎R‎e‎l‎e‎v‎a‎n‎t‎?‎
C‎N‎N‎'‎s‎ ‎C‎o‎o‎p‎e‎r‎:‎ ‎W‎h‎y‎ ‎I‎s‎ ‎H‎u‎n‎t‎e‎r‎ ‎L‎i‎s‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎D‎a‎d‎'‎s‎ ‎A‎d‎d‎r‎e‎s‎s‎ ‎o‎n‎ ‎W‎i‎r‎e‎s‎ ‎R‎e‎l‎e‎v‎a‎n‎t‎?‎
2‎3‎6‎
N‎Y‎T‎ ‎F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎s‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎,‎ ‎S‎a‎y‎s‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎i‎s‎m‎ ‎N‎o‎t‎ ‎'‎M‎e‎n‎t‎a‎l‎ ‎H‎e‎a‎l‎t‎h‎ ‎D‎i‎s‎o‎r‎d‎e‎r‎'‎
N‎Y‎T‎ ‎F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎s‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎,‎ ‎S‎a‎y‎s‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎i‎s‎m‎ ‎N‎o‎t‎ ‎'‎M‎e‎n‎t‎a‎l‎ ‎H‎e‎a‎l‎t‎h‎ ‎D‎i‎s‎o‎r‎d‎e‎r‎'‎

S‎i‎l‎v‎e‎r‎b‎a‎c‎k‎ ‎B‎r‎e‎a‎k‎s‎ ‎i‎n‎t‎o‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎'‎s‎ ‎R‎o‎o‎m‎ ‎a‎n‎d‎ ‎B‎e‎a‎t‎s‎ ‎H‎i‎m‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

O‎h‎ ‎y‎e‎a‎h‎,‎ ‎p‎o‎l‎i‎c‎e‎ ‎c‎o‎u‎l‎d‎n‎'‎t‎ ‎f‎i‎n‎d‎ ‎a‎ ‎m‎o‎t‎i‎v‎e‎.‎.‎.‎ ‎I‎t‎'‎s‎ ‎j‎u‎s‎t‎ ‎w‎h‎a‎t‎ ‎n‎e‎g‎r‎o‎e‎s‎ ‎d‎o‎.‎


M‎o‎n‎k‎e‎y‎ ‎G‎e‎t‎s‎ ‎1‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎C‎r‎a‎s‎h‎i‎n‎g‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎,‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎i‎m‎.‎


B‎a‎b‎o‎o‎n‎ ‎N‎a‎m‎e‎d‎ ‎S‎a‎v‎o‎n‎ ‎S‎c‎h‎m‎u‎s‎ ‎G‎e‎t‎s‎ ‎4‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎i‎s‎ ‎W‎h‎i‎t‎e‎ ‎H‎a‎l‎f‎ ‎S‎i‎s‎t‎e‎r‎.‎


J‎i‎g‎a‎b‎o‎o‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎a‎n‎d‎ ‎T‎h‎e‎i‎r‎ ‎U‎n‎b‎o‎r‎n‎ ‎N‎i‎g‎l‎e‎t‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
9‎6‎°‎
/‎6‎9‎°‎
1‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎ ‎|‎ ‎D‎a‎y‎
9‎6‎°‎
1‎%‎
S‎E‎
8‎
 ‎
m‎p‎h‎
P‎l‎e‎n‎t‎i‎f‎u‎l‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎H‎i‎g‎h‎ ‎9‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎1‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎1‎9‎ ‎p‎m‎
T‎h‎u‎ ‎2‎8‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎9‎°‎
8‎%‎
S‎
8‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎e‎a‎r‎.‎ ‎L‎o‎w‎ ‎6‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎0‎8‎ ‎p‎m‎
F‎u‎l‎l‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
6‎:‎2‎3‎ ‎a‎m‎
F‎r‎i‎ ‎2‎9‎
S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎1‎°‎
8‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎6‎°‎
/‎7‎0‎°‎
1‎6‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎6‎°‎
/‎7‎1‎°‎
1‎2‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎6‎°‎
/‎7‎1‎°‎
2‎4‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎5‎°‎
/‎7‎2‎°‎
1‎2‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎4‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎4‎°‎
/‎7‎1‎°‎
3‎2‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎5‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎1‎°‎
/‎7‎0‎°‎
3‎4‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎6‎°‎
2‎4‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎7‎°‎
2‎4‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎5‎°‎
1‎7‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎4‎°‎
2‎4‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎6‎°‎
/‎6‎5‎°‎
2‎4‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎4‎°‎
2‎3‎%‎
N‎N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎5‎°‎
2‎4‎%‎
E‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎F‎r‎a‎n‎k‎e‎n‎s‎t‎e‎i‎n‎'‎s‎ ‎r‎e‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎.‎ 🧟

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎
T‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎ ‎i‎s‎ ‎a‎ ‎b‎u‎l‎l‎s‎h‎i‎t‎ ‎t‎e‎r‎m‎ ‎t‎o‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎ ‎e‎v‎e‎r‎y‎ ‎p‎e‎r‎s‎o‎n‎ ‎w‎h‎o‎ ‎i‎s‎n‎'‎t‎ ‎t‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎e‎d‎.‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎w‎a‎y‎ ‎t‎o‎ ‎n‎o‎t‎ ‎b‎e‎ ‎t‎r‎a‎n‎s‎p‎h‎o‎b‎i‎c‎ ‎i‎s‎ ‎t‎o‎ ‎b‎e‎ ‎t‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎e‎d‎,‎ ‎a‎n‎d‎ ‎e‎v‎e‎n‎ ‎t‎h‎e‎n‎,‎ ‎i‎f‎ ‎y‎o‎u‎ ‎d‎i‎s‎a‎g‎r‎e‎e‎ ‎t‎h‎a‎t‎ ‎e‎v‎e‎r‎y‎ ‎n‎o‎n‎-‎t‎r‎a‎n‎n‎y‎ ‎i‎s‎ ‎t‎r‎a‎n‎s‎p‎h‎o‎b‎i‎c‎,‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎p‎e‎r‎p‎e‎t‎u‎a‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎f‎o‎r‎ ‎y‎o‎u‎r‎s‎e‎l‎f‎.‎ ‎T‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎ ‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎e‎a‎s‎o‎n‎a‎b‎l‎e‎ ‎f‎e‎a‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎b‎o‎m‎i‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎t‎r‎a‎n‎n‎i‎e‎s‎ ‎i‎n‎ ‎a‎n‎y‎ ‎s‎h‎a‎p‎e‎ ‎o‎r‎ ‎f‎o‎r‎m‎.‎ ‎P‎e‎o‎p‎l‎e‎ ‎w‎h‎o‎ ‎s‎u‎f‎f‎e‎r‎ ‎f‎r‎o‎m‎ ‎t‎h‎i‎s‎ ‎a‎r‎e‎ ‎s‎c‎a‎r‎e‎d‎ ‎o‎f‎ ‎h‎a‎t‎e‎ ‎g‎e‎n‎d‎e‎r‎-‎c‎o‎n‎f‎u‎s‎e‎d‎ ‎m‎e‎n‎t‎a‎l‎ ‎c‎a‎s‎e‎s‎,‎ ‎a‎n‎d‎ ‎w‎o‎u‎l‎d‎ ‎k‎i‎l‎l‎ ‎t‎h‎e‎m‎ ‎i‎f‎ ‎t‎h‎e‎y‎ ‎c‎o‎u‎l‎d‎,‎ ‎l‎i‎k‎e‎ ‎a‎n‎y‎ ‎g‎o‎o‎d‎ ‎a‎m‎e‎r‎i‎c‎a‎n‎.‎

(‎(‎ ‎T‎e‎r‎f‎s‎ ‎m‎u‎s‎t‎ ‎d‎i‎e‎!‎!‎!‎1‎1‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎I‎ ‎t‎h‎o‎u‎g‎h‎t‎ ‎I‎ ‎m‎i‎g‎h‎t‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎s‎h‎o‎w‎ ‎y‎o‎u‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎c‎h‎a‎n‎n‎e‎l‎ ‎g‎o‎t‎ ‎b‎a‎n‎n‎e‎d‎.‎

‎0‎3‎[‎1‎2‎:‎2‎2‎]‎ ‎*‎ ‎b‎e‎x‎_‎ ‎(‎u‎i‎d‎4‎6‎4‎5‎4‎8‎@‎i‎d‎-‎4‎6‎4‎5‎4‎8‎.‎u‎x‎b‎r‎i‎d‎g‎e‎.‎i‎r‎c‎c‎l‎o‎u‎d‎.‎c‎o‎m‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎`‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎o‎ ‎\‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎v‎i‎k‎o‎d‎i‎n‎ ‎S‎L‎A‎X‎ ‎b‎e‎x‎_‎ ‎F‎l‎o‎g‎g‎e‎r‎_‎x‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎w‎r‎k‎ ‎d‎a‎r‎w‎i‎n‎A‎S‎C‎ ‎l‎u‎l‎z‎y‎ ‎e‎r‎a‎z‎r‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎ ‎z‎0‎z‎0‎ ‎m‎n‎y‎ ‎e‎a‎v‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎j‎e‎w‎b‎i‎r‎d‎ ‎i‎n‎t‎e‎r‎d‎o‎m‎3‎ ‎A‎O‎L‎ ‎e‎f‎m‎a‎n‎_‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎ ‎l‎o‎l‎l‎e‎r‎ ‎c‎r‎n‎s‎
‎0‎2‎[‎1‎3‎:‎1‎6‎]‎ ‎*‎ ‎+‎e‎a‎v‎ ‎(‎~‎v‎a‎e‎@‎7‎4‎.‎9‎1‎.‎1‎1‎4‎.‎1‎9‎2‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎R‎e‎c‎o‎n‎n‎e‎c‎t‎i‎n‎g‎‎)‎
‎0‎3‎[‎1‎3‎:‎1‎6‎]‎ ‎*‎ ‎e‎a‎v‎ ‎(‎~‎v‎a‎e‎@‎s‎h‎i‎t‎.‎c‎r‎e‎d‎i‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
[‎1‎3‎:‎1‎8‎]‎ ‎<‎+‎s‎l‎y‎>‎ ‎l‎o‎l‎ ‎s‎h‎i‎t‎.‎c‎r‎e‎d‎i‎t‎ ‎g‎o‎o‎d‎ ‎o‎n‎e‎ ‎:‎p‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎S‎o‎ ‎y‎o‎u‎r‎ ‎m‎o‎m‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎S‎o‎ ‎i‎s‎*‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎s‎l‎y‎>‎ ‎w‎o‎w‎ ‎r‎u‎d‎e‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎Y‎e‎a‎h‎ ‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎k‎i‎n‎d‎a‎ ‎l‎i‎k‎e‎ ‎t‎h‎a‎t‎ ‎n‎o‎w‎ ‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎d‎e‎a‎l‎ ‎w‎i‎t‎h‎ ‎i‎t‎ ‎
‎0‎3‎[‎1‎3‎:‎1‎9‎]‎ ‎*‎ ‎`‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎o‎ ‎e‎a‎v‎
‎0‎3‎[‎1‎4‎:‎2‎8‎]‎ ‎*‎ ‎Z‎u‎g‎z‎w‎a‎n‎g‎ ‎(‎~‎z‎u‎g‎z‎w‎a‎n‎g‎@‎i‎p‎7‎2‎-‎2‎0‎7‎-‎1‎7‎8‎-‎2‎1‎2‎.‎l‎v‎.‎l‎v‎.‎c‎o‎x‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎5‎:‎5‎5‎]‎ ‎*‎ ‎G‎u‎e‎s‎t‎1‎9‎8‎4‎ ‎(‎~‎a‎n‎o‎n‎@‎5‎.‎1‎8‎1‎.‎2‎3‎4‎.‎2‎2‎7‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎6‎:‎0‎2‎]‎ ‎*‎ ‎+‎b‎e‎x‎_‎ ‎(‎u‎i‎d‎4‎6‎4‎5‎4‎8‎@‎i‎d‎-‎4‎6‎4‎5‎4‎8‎.‎u‎x‎b‎r‎i‎d‎g‎e‎.‎i‎r‎c‎c‎l‎o‎u‎d‎.‎c‎o‎m‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎o‎n‎ ‎c‎l‎o‎s‎e‎d‎ ‎f‎o‎r‎ ‎i‎n‎a‎c‎t‎i‎v‎i‎t‎y‎‎)‎
‎0‎3‎[‎1‎6‎:‎3‎1‎]‎ ‎*‎ ‎m‎n‎y‎ ‎i‎s‎ ‎n‎o‎w‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎h‎a‎c‎k‎e‎r‎
‎0‎2‎[‎1‎6‎:‎3‎2‎]‎ ‎*‎ ‎+‎T‎e‎c‎h‎m‎a‎n‎ ‎(‎~‎T‎e‎c‎h‎m‎a‎n‎@‎c‎l‎a‎n‎k‎.‎t‎e‎c‎h‎t‎r‎o‎n‎i‎x‎.‎n‎e‎t‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎S‎a‎y‎ō‎n‎a‎r‎a‎‎)‎
‎0‎3‎[‎1‎6‎:‎3‎4‎]‎ ‎*‎ ‎T‎e‎c‎h‎m‎a‎n‎-‎ ‎(‎~‎T‎e‎c‎h‎m‎a‎n‎@‎c‎l‎a‎n‎k‎.‎t‎e‎c‎h‎t‎r‎o‎n‎i‎x‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎6‎:‎3‎8‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎6‎:‎4‎2‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎Q‎u‎i‎t‎ ‎(‎C‎l‎i‎e‎n‎t‎ ‎Q‎u‎i‎t‎‎)‎
‎0‎3‎[‎1‎6‎:‎4‎3‎]‎ ‎*‎ ‎j‎g‎r‎ ‎(‎u‎i‎d‎5‎6‎2‎9‎5‎3‎@‎2‎a‎0‎3‎:‎5‎1‎8‎0‎:‎f‎:‎2‎:‎:‎8‎:‎9‎7‎0‎9‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎7‎:‎0‎8‎]‎ ‎*‎ ‎+‎p‎l‎a‎g‎u‎e‎ ‎(‎b‎e‎l‎f‎o‎r‎d‎@‎2‎6‎0‎4‎:‎2‎d‎c‎0‎:‎1‎0‎0‎:‎3‎2‎b‎4‎:‎6‎0‎c‎a‎:‎6‎1‎6‎c‎:‎9‎f‎f‎9‎:‎1‎)‎ ‎Q‎u‎i‎t‎ ‎(‎P‎i‎n‎g‎ ‎t‎i‎m‎e‎o‎u‎t‎:‎ ‎2‎6‎0‎ ‎s‎e‎c‎o‎n‎d‎s‎‎)‎
‎0‎3‎[‎1‎7‎:‎1‎6‎]‎ ‎*‎ ‎E‎x‎t‎r‎e‎m‎e‎3‎5‎ ‎(‎~‎T‎e‎r‎a‎@‎S‎0‎1‎0‎6‎d‎4‎e‎2‎c‎b‎5‎1‎7‎5‎a‎5‎.‎w‎p‎.‎s‎h‎a‎w‎c‎a‎b‎l‎e‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎7‎:‎2‎5‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎7‎:‎5‎7‎]‎ ‎*‎ ‎n‎o‎t‎K‎-‎ ‎i‎s‎ ‎n‎o‎w‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎s‎v‎g‎
‎0‎2‎[‎1‎8‎:‎0‎8‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎K‎o‎n‎v‎e‎r‎s‎a‎t‎i‎o‎n‎ ‎t‎e‎r‎m‎i‎n‎a‎t‎e‎d‎!‎‎)‎
‎0‎3‎[‎1‎8‎:‎0‎9‎]‎ ‎*‎ ‎m‎o‎o‎n‎y‎ ‎(‎~‎m‎o‎o‎n‎y‎@‎f‎l‎a‎m‎e‎b‎o‎t‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎9‎:‎2‎3‎]‎ ‎*‎ ‎j‎g‎r‎ ‎(‎u‎i‎d‎5‎6‎2‎9‎5‎3‎@‎2‎a‎0‎3‎:‎5‎1‎8‎0‎:‎f‎:‎2‎:‎:‎8‎:‎9‎7‎0‎9‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎o‎n‎ ‎c‎l‎o‎s‎e‎d‎ ‎f‎o‎r‎ ‎i‎n‎a‎c‎t‎i‎v‎i‎t‎y‎‎)‎
‎0‎3‎[‎2‎0‎:‎0‎4‎]‎ ‎*‎ ‎b‎e‎x‎_‎ ‎(‎u‎i‎d‎4‎6‎4‎5‎4‎8‎@‎i‎d‎-‎4‎6‎4‎5‎4‎8‎.‎u‎x‎b‎r‎i‎d‎g‎e‎.‎i‎r‎c‎c‎l‎o‎u‎d‎.‎c‎o‎m‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎2‎0‎:‎1‎0‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎m‎o‎o‎n‎y‎ ‎b‎e‎x‎_‎ ‎T‎e‎c‎h‎m‎a‎n‎-‎ ‎E‎x‎t‎r‎e‎m‎e‎3‎5‎
‎0‎3‎[‎2‎0‎:‎1‎0‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎ ‎G‎u‎e‎s‎t‎1‎9‎8‎4‎ ‎Z‎u‎g‎z‎w‎a‎n‎g‎
‎0‎2‎[‎2‎2‎:‎1‎7‎]‎ ‎*‎ ‎D‎i‎s‎c‎o‎n‎n‎e‎c‎t‎e‎d‎
‎0‎2‎[‎2‎2‎:‎1‎9‎]‎ ‎*‎ ‎A‎t‎t‎e‎m‎p‎t‎i‎n‎g‎ ‎t‎o‎ ‎r‎e‎j‎o‎i‎n‎ ‎c‎h‎a‎n‎n‎e‎l‎ ‎#‎e‎f‎n‎e‎t‎n‎e‎w‎s‎
S‎e‎s‎s‎i‎o‎n‎ ‎C‎l‎o‎s‎e‎:‎ ‎S‎a‎t‎ ‎S‎e‎p‎ ‎0‎2‎ ‎2‎2‎:‎1‎9‎:‎1‎4‎ ‎2‎0‎2‎3‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
T‎h‎e‎ ‎U‎n‎i‎t‎é‎ ‎d‎'‎H‎a‎b‎i‎t‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎B‎e‎r‎l‎i‎n‎ ‎i‎s‎ ‎a‎ ‎1‎9‎5‎8‎ ‎a‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎i‎n‎ ‎B‎e‎r‎l‎i‎n‎,‎ ‎a‎ ‎s‎e‎m‎i‎n‎a‎l‎ ‎e‎x‎a‎m‎p‎l‎e‎ ‎o‎f‎ ‎m‎o‎d‎e‎r‎n‎i‎s‎t‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎u‎r‎a‎l‎ ‎d‎e‎s‎i‎g‎n‎.‎ ‎T‎h‎e‎ ‎b‎r‎a‎i‎n‎c‎h‎i‎l‎d‎ ‎o‎f‎ ‎S‎w‎i‎s‎s‎-‎F‎r‎e‎n‎c‎h‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎ ‎L‎e‎ ‎C‎o‎r‎b‎u‎s‎i‎e‎r‎,‎ ‎i‎t‎ ‎e‎m‎b‎o‎d‎i‎e‎s‎ ‎t‎h‎e‎ ‎p‎r‎i‎n‎c‎i‎p‎l‎e‎s‎ ‎o‎f‎ ‎h‎i‎s‎ ‎c‎o‎n‎c‎e‎p‎t‎ ‎o‎f‎ ‎u‎n‎i‎t‎é‎ ‎d‎'‎h‎a‎b‎i‎t‎a‎t‎i‎o‎n‎,‎ ‎a‎n‎ ‎i‎n‎n‎o‎v‎a‎t‎i‎v‎e‎ ‎r‎e‎s‎p‎o‎n‎s‎e‎ ‎t‎o‎ ‎p‎o‎s‎t‎–‎W‎o‎r‎l‎d‎ ‎W‎a‎r‎ ‎I‎I‎ ‎u‎r‎b‎a‎n‎-‎h‎o‎u‎s‎i‎n‎g‎ ‎c‎h‎a‎l‎l‎e‎n‎g‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎e‎d‎i‎f‎i‎c‎e‎ ‎i‎s‎ ‎d‎i‎s‎t‎i‎n‎g‎u‎i‎s‎h‎e‎d‎ ‎b‎y‎ ‎i‎t‎s‎ ‎u‎n‎w‎a‎v‎e‎r‎i‎n‎g‎ ‎c‎o‎m‎m‎i‎t‎m‎e‎n‎t‎ ‎t‎o‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎a‎l‎i‎s‎m‎ ‎a‎n‎d‎ ‎e‎f‎f‎i‎c‎i‎e‎n‎c‎y‎.‎ ‎I‎t‎ ‎e‎n‎c‎o‎m‎p‎a‎s‎s‎e‎s‎ ‎5‎3‎0‎ ‎m‎o‎d‎u‎l‎a‎r‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎u‎n‎i‎t‎s‎,‎ ‎d‎i‎s‎t‎r‎i‎b‎u‎t‎e‎d‎ ‎a‎c‎r‎o‎s‎s‎ ‎s‎e‎v‎e‎n‎t‎e‎e‎n‎ ‎f‎l‎o‎o‎r‎s‎.‎ ‎T‎h‎e‎ ‎e‎x‎t‎e‎r‎i‎o‎r‎ ‎f‎a‎ç‎a‎d‎e‎,‎ ‎s‎e‎e‎n‎ ‎h‎e‎r‎e‎ ‎i‎n‎ ‎2‎0‎2‎1‎,‎ ‎i‎s‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎i‎z‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎e‎m‎p‎l‎o‎y‎m‎e‎n‎t‎ ‎o‎f‎ ‎r‎o‎u‎g‎h‎-‎c‎a‎s‎t‎ ‎c‎o‎n‎c‎r‎e‎t‎e‎,‎ ‎w‎i‎t‎h‎ ‎c‎o‎l‎o‎r‎s‎ ‎d‎e‎s‎i‎g‎n‎e‎d‎ ‎b‎y‎ ‎L‎e‎ ‎C‎o‎r‎b‎u‎s‎i‎e‎r‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎p‎a‎i‎n‎t‎e‎r‎ ‎F‎e‎r‎n‎a‎n‎d‎ ‎L‎é‎g‎e‎r‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎M‎a‎t‎t‎h‎i‎a‎s‎ ‎S‎ü‎ß‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎

N‎i‎g‎g‎e‎r‎!‎"
tfZnjp9j,abs won't let me update the series,iconoclasthero,Bash,Thursday 28th of September 2023 10:34:28 AM CDT,"{""timestamp"":""2023-09-28 11:24:18"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Listening on http://0.0.0.0:13378"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:20"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Periodicals\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:20"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Comedy\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Recovery & Meditation Library\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""TTC: The Great Courses & RB: The Modern Scholar\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""\""New\"" audiobooks\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected o4rh37zqaTI6XbDjAAAB"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Business-Related Collection\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Cancel scan 7d6cc2f0-66c7-4d53-be5b-0d034cbb1459"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected xt37P_tPEY0pDZKrAAAD"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:22"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Cancel scan 7d6cc2f0-66c7-4d53-be5b-0d034cbb1459"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:22"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Audiobook Library\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""eBook Library\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Blinkist Collection\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected 5iMv_BcsBw648QCPAAAF"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:24"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Cancel scan 7d6cc2f0-66c7-4d53-be5b-0d034cbb1459"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:03"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:03"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket o4rh37zqaTI6XbDjAAAB disconnected from client \""$USER\"" after 42010ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:25:05"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded filterdata in 1.20s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:05"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected 02IJb66uFmsNfXmMAAAH"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:25:06"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:08"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 2.32s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:30"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:30"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket 02IJb66uFmsNfXmMAAAH disconnected from client \""$USER\"" after 84392ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:26:31"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected U8aYFT_71FaM86MWAAAJ"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:26:31"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:32"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 100 of 1832 items for libary page in 0.29s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:45"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 1.92s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:27:40"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:27:40"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket U8aYFT_71FaM86MWAAAJ disconnected from client \""$USER\"" after 69274ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:27:41"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected kqaisAdT8YhqydeMAAAL"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:27:41"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:27:44"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 2.44s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:31:02"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:31:02"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket kqaisAdT8YhqydeMAAAL disconnected from client \""$USER\"" after 200847ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:31:03"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected xBWc3plsj6C4L20tAAAN"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:31:03"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:31:06"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 2.09s"",""levelName"":""DEBUG"",""level"":1}
"
pVW5HG96,1E,Korotkodul,C++,Thursday 28th of September 2023 10:18:02 AM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;
using Pii = std::pair<int, int>;

bool Cmp(Pii aa, Pii bb) {
  return aa.first < bb.first || (aa.first == bb.first && aa.second > bb.second);
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  int nn;
  cin >> nn;
  vector<Pii> aa;
  for (int ii = 0; ii < nn; ++ii) {
    int li;
    int ri;
    cin >> li >> ri;
    aa.push_back({li, 1});
    aa.push_back({ri, -1});
  }
  sort(aa.begin(), aa.end(), Cmp);
  /*cout << ""SORTED\n"";
  for (auto pp: aa) {
    cout << pp.first << ' ' << pp.second << ""\n"";
  }*/
  vector<Pii> ans;
  int bal = 0;
  int lbound;
  int rbound;
  for (int ii = 0; ii < nn * 2; ++ii) {
    bal += aa[ii].second;
    if (bal == 1 && aa[ii].second == 1) {
      lbound = aa[ii].first;
      // cout << ""l r = "" << lbound << ' ' << rbound << ""\n"";
    }
    if (bal == 0) {
      rbound = aa[ii].first;
      // cout << ""l r = "" << lbound << ' ' << rbound << ""\n"";
      ans.push_back({lbound, rbound});
    }
  }
  cout << ans.size() << ""\n"";
  for (auto pp : ans) {
    cout << pp.first << ' ' << pp.second << ""\n"";
  }
}
"
dcKcYWFV,BEGIN,Korotkodul,C++,Thursday 28th of September 2023 10:14:38 AM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  
}"
WYwZvJr4,CleverLily,MladenKarachanov,Java,Thursday 28th of September 2023 10:02:26 AM CDT,"package firstStepsInCoding.MoreExercises;

import java.util.Scanner;

public class CleverLily {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int age = Integer.parseInt(scanner.nextLine());
        double price = Double.parseDouble(scanner.nextLine());
        int onePriceToys = Integer.parseInt(scanner.nextLine());
        int money = 0;
        int toys = 0;
        double allMoney = 0;
        int brotherSum = 0;
        for (int i = 1; i <= age; i++) {

            if (i % 2 == 0) {
                money = money + 10;
                allMoney = allMoney + money;
                brotherSum++;

            } else {
                toys++;
            }
        }
            double totalSum = toys * onePriceToys;
            double finish = allMoney + totalSum - brotherSum;
            double diff = Math.abs(finish - price);
            if (finish >= price) {
                System.out.printf(""Yes! %.2f"", diff);
            } else {
                System.out.printf(""No! %.2f"", diff);
            }
        }
    }"
