id,title,username,language,date,content
JYRHhjUK,data782,TestGuy1,JSON,Thursday 14th of December 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '5de68ae5795e9903d3f488271f828aa5e85856795011b43c5f0a677cce3aaf510a28b4c543b88de6414302f4be72c9fe027ea10a22849e7bebb8ba83d24637a4111ea71a82c221e3e438a2a0afb8f6c27cbf485d79a6d6ebd6431e2180af2307d02a910995b36b22cea8efb90aba6360730de0efa5ffc06562f473974cea0bbb',
  otherdata: [
    '91754c6ac3e5ab6d51f3052b7b9fd82b',
    '355f15c102d2cb42efe9ba7f9d373136',
    '4a048458002c558c9554e2e89b53e39d',
    '9328bee7c6b3844fefa1e2b562252872',
    '6ffd3cbd43db1c64feacae4beab68eca',
    'c42447bf1d1f734fa3b074f809f3e74a',
    'e14be00e80474aa72ffcfa1ed09004b5',
    'ee95c451032dbc7b70bbd349ad5842e5'
  ]
}"
Z0kKXXCW,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Thursday 14th of December 2023 05:46:43 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-263396"
J2Q8x6sy,Record a new blog comment as an activity in BuddyPress,vapvarun,PHP,Thursday 14th of December 2023 05:38:24 AM CDT,"/**
 * Record a new blog comment as an activity in BuddyPress.
 *
 * @param int $comment_ID The comment ID.
 * @param int $comment_approved 1 if the comment is approved, 0 if not.
 */
function wbcom_record_blog_comment_as_activity( $comment_ID, $comment_approved ) {
    if ( 1 !== $comment_approved ) {
        return;
    }

    $comment = get_comment( $comment_ID );
    $user_id = $comment->user_id;
    $user_info = get_userdata($user_id);
    $username = $user_info->user_nicename;
    $post_id = $comment->comment_post_ID;
    $post_title = get_the_title( $post_id );
    $comment_link = get_comment_link( $comment_ID );
    $content = sprintf( 'Commented on the post, <a href=""%s"">%s</a>: ""%s""', $comment_link, $post_title, $comment->comment_content );

    bp_activity_add( array(
        'user_id'   => $user_id,
        'action'    => sprintf( '%s posted a new comment on the post, <a href=""%s"">%s</a>', $username, get_permalink($post_id), $post_title ),
        'content'   => $content,
        'component' => 'activity',
        'type'      => 'new_blog_comment',
    ) );
}
add_action( 'comment_post', 'wbcom_record_blog_comment_as_activity', 10, 2 );
"
L54NjXFN,Untitled,35657,C++,Thursday 14th of December 2023 05:24:42 AM CDT,"#include<stdlib.h> // в этом файле содержатся rand и srand
#include<time.h> // в этом файле содержится функция time

#include <iostream>

using namespace std;

template <typename T>
void ShowArray(T arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << "" "";
    }
    cout << endl;
}

void InitArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 100;
    }
}

template <typename T>
void SelectSort(T arr[], int size) {
    for (int i = 0; i < size; i++) {
        T x = arr[i];
        int k = i;
        for (int j = i + 1; j < size; j++) {
            if (arr[j] < x) {
                x = arr[j];
                k = j;
            }
        }
        if (k != i) {
            arr[k] = arr[i];
            arr[i] = x;
        }
    }
}

int main() {

    srand(time(NULL));

    setlocale(LC_ALL, ""ru"");

    const int size = 10;
    int arr[size];

    InitArray(arr, size);
    ShowArray(arr, size);

    SelectSort(arr, size);
    ShowArray(arr, size);

    double arr2[size]{ 3.5, 4.2, 1.1, 6.7, 8.3, 5.4, 4.4, 6.7, 8.3, 2.1 };
    ShowArray(arr2, size);
    SelectSort(arr2, size);
    ShowArray(arr2, size);
}"
iSAd6Bxv,MyInt,jasio77,C++,Thursday 14th of December 2023 05:05:53 AM CDT,"MyInt.h:

#ifndef MYINT_H
#define MYINT_H

class MyInt {
 private:
  int _count;  // to moze byc liczba elementow
  int* _data;  // to moze byc tablica (no albo wsk na 1 inta)

 public:
  MyInt(int count = 0);
  ~MyInt();                   // rule of three, jak juz wiemy, ze mamy destruktor, to lecimy z reszta
  MyInt(const MyInt& other);  // kopiujacy (rvalue tez moze sie zbindowac technicznie do tego, ale wygra przeladowanie &&)
  MyInt(MyInt&& other);       // przenoszacy

  MyInt& operator=(const MyInt& other);  // operator= kopiujacy
  MyInt& operator=(MyInt&& other);       // operator= przenoszacy
};

#endif /* MYINT_H */

MyInt.cpp:

#include ""MyInt.h""
#include <cstring>
#include <utility>  // std::move & std::exchange

MyInt::MyInt(int count)
    : _count{count}, _data{new int[_count]} {}

MyInt::~MyInt() {
  delete[] _data;
}

MyInt::MyInt(const MyInt& other)
    : _count{other._count}, _data{new int[other._count]} {
  std::memcpy(_data, other._data, sizeof(int) * _count);
}

MyInt::MyInt(MyInt&& other)
    : _count{std::exchange(other._count, 0)}, _data{std::exchange(other._data, nullptr)} {}

MyInt& MyInt::operator=(const MyInt& other) {
  if (this != &other) {
    // check for resource reuse availability
    if (_count != other._count) {
      // the arrays are NOT the same size
      delete[] _data;
      _count = other._count;
      _data = new int[_count];  // now we can use just _i
    }

    // if the arrays were the same size, just copy over
    std::memcpy(_data, other._data, sizeof(int) * _count);
  }

  return *this;
}

MyInt& MyInt::operator=(MyInt&& other) {
  if (this != &other) {
    _count = std::exchange(other._count, 0);
    _data = std::exchange(other._data, nullptr);
  }

  return *this;
}
"
g4FRv60H,Untitled,35657,C++,Thursday 14th of December 2023 04:39:41 AM CDT,"#include <iostream>

using namespace std;

template <typename T>
void sort(T array[], int size) {
    for (int k = 0; k < size; k++) {
        for (int j = 0; j < size - k - 1; j++) {
            if (array[j] > array[j + 1]) {
                T temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}

template <typename T>
void display(T array[], int size) {
    for (int i = 0; i < size; i++) {
        cout << array[i] << "" "";
    }
    cout << endl;
}

void display(char array[], int size) {
    for (int i = 0; i < size; i++) {
        cout << array[i];
    }
    cout << endl;
}

int main() {
    setlocale(LC_ALL, ""ru"");

    int array[]{ 1, 3, 7, -4, -2, 4 };
    int size = 6;
    cout << ""Original int Array : "";
    display(array, size);
    sort(array, size);
    cout << ""Sorted   int Array : "";
    display(array, size);


    double doublearray[]{ 3.5, 2.5, 3.7, 1.0, 3.3 };
    size = 5;
    cout << ""Original double Array : "";
    display(doublearray, size);
    sort(doublearray, size);
    cout << ""Sorted double Array : "";
    display(doublearray, size);

    char arr[]{ ""Привет"" };
    display(arr, 6);
}
"
zP8AZZ6G,Untitled,35657,C++,Thursday 14th of December 2023 04:39:09 AM CDT,"#include <iostream>

using namespace std;

template <typename T>
void sort(T array[], int size) {
    for (int k = 0; k < size; k++) {
        for (int j = 0; j < size - k - 1; j++) {
            if (array[j] > array[j + 1]) {
                T temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}

template <typename T>
void display(T array[], int size) {
    for (int i = 0; i < size; i++) {
        cout << array[i] << "" "";
    }
    cout << endl;
}


int main() {
    setlocale(LC_ALL, ""ru"");

    int array[]{ 1, 3, 7, -4, -2, 4 };
    int size = 6;
    cout << ""Original int Array : "";
    display(array, size);
    sort(array, size);
    cout << ""Sorted   int Array : "";
    display(array, size);


    double doublearray[]{ 3.5, 2.5, 3.7, 1.0, 3.3 };
    size = 5;
    cout << ""Original double Array : "";
    display(doublearray, size);
    sort(doublearray, size);
    cout << ""Sorted double Array : "";
    display(doublearray, size);

    char arr[]{ ""Привет"" };
    display(arr, 6);
}
"
vV5E6YQn,Untitled,35657,C++,Thursday 14th of December 2023 04:36:43 AM CDT,"#include <iostream>

using namespace std;


void sort(int array[], int size) {
    for (int k = 0; k < size; k++) {
        for (int j = 0; j < size - k - 1; j++) {
            if (array[j] > array[j + 1]) {
                int temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}



void display(int array[], int size) {
    for (int i = 0; i < size; i++) {
        cout << array[i] << "" "";
    }
    cout << endl;
}


int main() {
    int array[]{ 1, 3, 7, -4, -2, 4 };
    int size = 6;
    cout << ""Original int Array : "";
    display(array, size);
    sort(array, size);
    cout << ""Sorted   int Array : "";
    display(array, size);


	// будет ли работать с double?
    // double doubleArray[]{ 3.5, 2.5, 3.7, 1.0, 3.3 };
    // size = 5;
    // cout << ""Original double Array : "";
    // display(doubleArray, size);
    // sort(doubleArray, size);
    // cout << ""Sorted double Array : "";
    // display(doubleArray, size);
}
"
dJt7LK4D,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Thursday 14th of December 2023 04:34:00 AM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

470149"
1uP1N6eQ,enqueue,dimkiriaoks,PHP,Thursday 14th of December 2023 04:32:35 AM CDT,"// Δήλωση

    wp_enqueue_style(
        'style',
        get_stylesheet_directory_uri() . '/assets/css/style.css',
        ['bootstrap'],
        DRK_LISTINGS_DEBUG ? time() : wp_get_theme()->Version,
        'all'
    );


// Αποτέλεσμα
<link rel='stylesheet' id='style-css' href='https://kosdirectory.local/wp-content/themes/drk-listings/assets/css/style.css?ver=1702549887' type='text/css' media='all' />
"
XKTM6634,esp_dac_dds_ino,Arnemi,Arduino,Thursday 14th of December 2023 04:31:41 AM CDT,"/*
 * INFO:
 * This code demonstrates how to use the ESP32 DAC in an interrupt based configuration.
 * The sampling frequency and resolution of the samples and the DAC can be adjusted and experimented with
 *
 * Note: the ESP32 DAC has a fixed resolution of 8 bits, so the possibility for varying
 * DAC resolution is simulated by representing the desired resolution within an 8 bit range.
 */

/*
 * Global constants for the array of samples to be written to the DAC.
 * Default is a sine wave of 16 values between 0 and 255.
 */
const int sampleArrayLen = 16;
const int sampleArray[sampleArrayLen] = {
  0x80,
  0xb0,
  0xda,
  0xf5,
  0xff,
  0xf5,
  0xda,
  0xb0,
  0x80,
  0x4f,
  0x25,
  0xa,
  0x0,
  0xa,
  0x25,
  0x4f,
};

//Change these parameters in order to change the sampling properties of the system
#define SAMPLING_PERIOD 100  //In microseconds, should be at least 50.
#define DAC_RESOLUTION 8     //Resolution of the DAC. Must be between 1 and 8 bits.

//Hardware configuration
#define DAC_PIN 26

// Variable for storing the timer properties. Leave this alone.
hw_timer_t *timer = NULL;

// Constant with a mask for setting the correct DAC resolution. Leave this alone.
const int resolution_mask = ~((1 << (8 - DAC_RESOLUTION)) - 1);

/* 
 * Interrupt service routine that runs every with a period SAMPLING_PERIOD. 
 * Used for sampling, signal processing and digital to analog conversion.
 */
void ARDUINO_ISR_ATTR onTimer() {
  //Variable for storing the actual value to be written to the DAC.
  static int sampleDAC;

  //Current index of the sampleArray. Defined as static as its only used in this function.
  static int i = 0;

  //Using the DAC to convert and write the sampleDAC variable on DAC_PIN with the given resolution for the DAC.
  dacWrite(DAC_PIN, (sampleArray[i] & resolution_mask));

  if (i >= sampleArrayLen - 1) {
    //Reached end of sampleArray. Resetting i.
    i = 0;
  } else {
    //Incrementing i.
    i++;
  }
}

//--------The code below this point can be left alone--------

void setup() {
  //Initializing timer with 1Mhz frequency. This means one tick every microsecond.
  timer = timerBegin(1000000);
  timerAttachInterrupt(timer, &onTimer);

  //Call the onTimer function with the given period (in microseconds), repeating te timer and with unlimited count.
  timerAlarm(timer, SAMPLING_PERIOD, true, 0);
}

void loop() {
  //empty loop
}
"
qepML2cC,esp_adc_dac_isr_ino,Arnemi,Arduino,Thursday 14th of December 2023 04:27:02 AM CDT,"/*
 * INFO:
 * This code demonstrates how to use the ESP32 DAC and ADC in an interrupt based configuration.
 * The code samples a signal with the ADC and converts the signal back to analog values with the DAC, 
 * allowing it to be processed digitally. 
 * 
 * The sampling frequency and resolution of the ADC and the DAC can be adjusted and experimented with
 *
 * Note: the ESP32 DAC has a fixed resolution of 8 bits, so the possibility for varying
 * DAC resolution is simulated by representing the desired resolution within an 8 bit range.
 */

// Variable for storing the timer properties. Leave it be.
hw_timer_t *timer = NULL;

//Change these parameters in order to change the sampling properties of the system
#define SAMPLING_PERIOD 50  //In microseconds, should be at least 50.
#define ADC_RESOLUTION 12   //Resolution of the ADC. Must be between 9 and 12 bits.
#define DAC_RESOLUTION 8    //Resolution of the DAC. Must be between 1 and 8 bits.

//Hardware configuration
#define ADC_PIN 27
#define DAC_PIN 26

/* 
 * Interrupt service routine that runs every with a period SAMPLING_PERIOD. 
 * Used for sampling, signal processing and digital to analog conversion.
 */
void ARDUINO_ISR_ATTR onTimer() {
  /*
   * Variables for storing the samples from the ADC and the sample to be written to the DAC.
   * Defined as
   */
  static int sampleADC;
  static int sampleDAC;

  //Sampling with the ADC from the ADC_PIN
  sampleADC = analogRead(ADC_PIN);

  //Changing the resolution of the ADC sample to the resolution of the DAC.
  sampleDAC = sampleADC >> ADC_RESOLUTION - DAC_RESOLUTION;

  //Your signal processing code here
  sampleDAC *= 1.2;

  //Using the DAC to convert and write the sampleDAC variable on DAC_PIN, while making sure the sample is 8 bits.
  dacWrite(DAC_PIN, (sampleDAC << 8 - DAC_RESOLUTION));
}

//--------The code below this point can be left alone--------

void setup() {
  // put your setup code here, to run once:

  analogReadResolution(ADC_RESOLUTION);

  //Initializing timer with 1Mhz frequency
  timer = timerBegin(1000000);
  timerAttachInterrupt(timer, &onTimer);

  //Call the onTimer function with the given period (in microseconds), repeating te timer and with unlimited count.
  timerAlarm(timer, SAMPLING_PERIOD, true, 0);
}

void loop() {
  //empty loop
}
"
aAaQd0Xb,dasdas,selebry,Kotlin,Thursday 14th of December 2023 04:17:24 AM CDT,"package murad

data class Book(val title: String, val author: String)
val library = sequenceOf(
    Book(""The Great Gatsby"", ""F. Scott Fitzgerald""),
    Book(""To Kill a Mockingbird"", ""Harper Lee""),
    Book(""1984"", ""George Orwell""),
    Book(""The Catcher in the Rye"", ""J.D. Salinger""),
    Book(""The Lord of the Rings"", ""J.R.R. Tolkien""),
    Book(""The Hobbit"", ""J.R.R. Tolkien""),
    Book(""The Da Vinci Code"", ""Dan Brown""),
    Book(""The Girl with the Dragon Tattoo"", ""Stieg Larsson""),
    Book(""The Hunger Games"", ""Suzanne Collins""),
    Book(""The Fault in Our Stars"", ""John Green"")
)


fun main() {
    val uniqueAuthors = library.map { it.author }.toSet()
    println(""Уникальные авторы:"")
    uniqueAuthors.forEach{author -> println(author)}

    val author = ""J.R.R. Tolkien""
    val booksByAuthor = library.filter { it.author == author }.toList()
    println(""Книги от $author"")
    booksByAuthor.forEach{book -> println(book)}

}



package murad
data class Country(val name: String, val continent: String, val population: Long, val area: Double) {
    override fun toString(): String {
        return ""Название: $name, Континент: $continent, Население: $population, Площадь: $area км^2""
    }
}

val countries = sequenceOf(
    Country(""United States"", ""North America"", 331002651, 9525067.0),
    Country(""Canada"", ""North America"", 37742154, 9984670.0),
    Country(""China"", ""Asia"", 1444216107, 9596961.0),
    Country(""India"", ""Asia"", 1380004385, 3287263.0),
    Country(""Australia"", ""Australia/Oceania"", 25696886, 7692024.0),
    Country(""Brazil"", ""South America"", 212559417, 8515767.0),
    Country(""Russia"", ""Europe"", 145934462, 17098242.0),
    Country(""Germany"", ""Europe"", 83783942, 357022.0),
    Country(""Japan"", ""Asia"", 126476461, 377973.0),
    Country(""United Kingdom"", ""Europe"", 67886011, 242495.0)
)

fun main() {
        val europeanCountries = countries.filter { it.continent == ""Europe"" }
        println(""Европейский страны:"")
        europeanCountries.forEach { country -> println(country.toString()) }

        println(""\n\nЕсть ли в европе страны с население, более 50м человек: ${if (europeanCountries.any { it.population > 50000000 }) ""Да"" else ""Нет""}"")

        val largeCountries = countries.filter { it.area > 500000.0 }
        println(""\n\nСтраны с площадью более 500 тыс км^2:"")
        largeCountries.forEach { country -> println(country.toString()) }

        println(""\n\nВсе ли Большие страны с населением меньше 100 млн: ${if (largeCountries.all { it.population < 100000000 }) ""Да"" else ""Нет""}"")
}

package murad

data class SportsActivity(val participantName: String, val sportType: String, val duration: Int)

val activities = sequenceOf(
    SportsActivity(""Alice"", ""Running"", 30),
    SportsActivity(""Pavel"", ""Running"", 40),
    SportsActivity(""Bob"", ""Cycling"", 45),
    SportsActivity(""Charlie"", ""Swimming"", 60),
    SportsActivity(""Dave"", ""Gym"", 75),
    SportsActivity(""Eve"", ""Yoga"", 45),
    SportsActivity(""Frank"", ""Soccer"", 90),
    SportsActivity(""Grace"", ""Tennis"", 60),
    SportsActivity(""Hannah"", ""Basketball"", 90),
    SportsActivity(""Ivan"", ""Hiking"", 120),
    SportsActivity(""Jane"", ""Golf"", 90)
)

fun main() {
    val activitiesString = activities.map { ""Участник: ${it.participantName}, Вид спорта: ${it.sportType}, Длительность: ${it.duration} мин."" }
    println(""Исходные активности:"")
    activitiesString.forEach { activity -> println(activity) }

    val activitiesBySportType = activities.groupBy { it.sportType }
    println(""\nАктивности, сгруппированные по виду спорта:"")
    activitiesBySportType.forEach { (sportType, activities) ->
        println(""$sportType: ${activities.map { ""Участник: ${it.participantName}, Вид спорта: ${it.sportType}, Длительность: ${it.duration} мин."" }.joinToString("", "")}"")
    }

    val averageDurationBySportType = activitiesBySportType.map { (sportType, activities) ->
        val averageDuration = activities.map { it.duration }.average().toInt()
        ""Вид спорта: $sportType, Средняя длительность: $averageDuration мин.""
    }.asSequence()
    println(""\nСредняя длительность активности для каждого вида спорта:"")
    averageDurationBySportType.forEach { println(it) }
}


package murad

data class Student(val name: String, val age: Int, val averageGrade: Double, val missedClasses: Int)
val students = sequenceOf(
    Student(""Алексей"", 20, 85.0, 2),
    Student(""Борис"", 21, 88.0, 0),
    Student(""Василий"", 19, 90.0, 3),
    Student(""Григорий"", 22, 87.0, 1),
    Student(""Дмитрий"", 20, 89.0, 0),
    Student(""Евгений"", 21, 91.0, 2),
    Student(""Федор"", 19, 92.0, 1),
    Student(""Георгий"", 22, 88.0, 3),
    Student(""Иван"", 20, 90.0, 0),
    Student(""Константин"", 21, 89.0, 2)
)
fun main() {


    val sortedStudents = students.sortedByDescending { it.averageGrade }
    println(""Студенты отсортированы по среднему баллу в порядке убывания:"")
    sortedStudents.forEach { println(""${it.name}: ${it.averageGrade}"") }

    val averageAge = sortedStudents.map { it.age }.average()
    println(""Средний возраст студентов: $averageAge"")

    val studentsOver20 = sortedStudents.takeWhile { it.age > 20 }
    println(""Студенты старше 20 лет:"")
    studentsOver20.forEach { println(""${it.name}: ${it.age}"") }

    val bestStudent = sortedStudents.find { it.averageGrade == sortedStudents.maxOf { student -> student.averageGrade } }
    println(""Студент с максимальным средним баллом: ${bestStudent?.name} с средним баллом ${bestStudent?.averageGrade}"")
}"
pTnkXw4i,stairminer,aregrubb,Lua,Thursday 14th of December 2023 03:58:34 AM CDT,"print(""How deep?"")
steps = tonumber(read())

function gravelorsand()
        local success, ifgravel = turtle.inspect()
        while success do
                local success, ifgravel = turtle.inspect()
                if ifgravel.name == ""minecraft:gravel"" then
                        turtle.dig()
                elseif ifgravel.name == ""minecraft:sand"" then
                        turtle.dig()
                else
                        break
                end
        end
end
 
function gravelorsandUp()
        local success, ifgravel = turtle.inspectUp()
        while success do
                local success, ifgravel = turtle.inspectUp()
                if ifgravel.name == ""minecraft:gravel"" then
                        turtle.digUp()
                elseif ifgravel.name == ""minecraft:sand"" then
                        turtle.digUp()
                else
                        break
                end
        end
end

for a = 1,steps,1 do
    turtle.digDown()
    turtle.down()
    turtle.dig()
	gravelorsand()
    turtle.forward()
    turtle.digUp()
	gravelorsandUp()
    turtle.up()
    turtle.digUp()
	gravelorsandUp()
    turtle.down()
end
"
1mGDWfNG,Voucher Sample For ERP With Attachment List 2,Krypton_25,JSON,Thursday 14th of December 2023 03:58:30 AM CDT,"[
   {
      ""app_organization_branch_id"":2,
      ""created_on"":""05-10-2023 08:39:30.346"",
      ""date"":""2023-10-03 00:00:00.0"",
      ""description"":""Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
      ""domain_name"":""VendorTransactionMaster"",
      ""is_posted"":true,
      ""is_reconciliated"":""TRANSFERRED"",
      ""journal_no"":""PJV10020459/23"",
      ""payment_type"":""BANK"",
      ""posting_date"":""2023-10-04 00:00:00.0"",
      ""voucher_no"":""JV10020389/23"",
      ""voucher_type"":""Journal Voucher"",
      ""transfer_type"":null,
      ""old_id"":80543,
      ""is_backdated"":true,
      ""created_by_id"":16390,
      ""details"":[
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":1068860,
            ""is_independent"":false,
            ""project_id"":120,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684766,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":1,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":""000"",
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":1068860,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":120,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684767,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":2,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":""000"",
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":1068860,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":120,
            ""old_id"":684768,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":3,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":1068860,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684769,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":4,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":1140,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":441,
            ""old_id"":684770,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":5,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":1140,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684771,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":6,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1022,
            ""credit"":0,
            ""debit"":108780,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684772,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":7,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":108780,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684775,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":10,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":7740,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798695925,
            ""old_id"":684776,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":11,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":7740,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684777,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":12,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":4180,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798702875,
            ""old_id"":684778,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":13,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":4180,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684779,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":14,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":1140,
            ""is_independent"":false,
            ""project_id"":441,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684780,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":15,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":1140,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":441,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684781,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":16,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":7740,
            ""is_independent"":false,
            ""project_id"":171798695925,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684782,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":17,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":7740,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798695925,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684783,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":18,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":4180,
            ""is_independent"":false,
            ""project_id"":171798702875,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684784,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":19,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":4180,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798702875,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684785,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":20,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         }
      ],
      ""attachments"":[
         {
            ""hoid"":17926,
            ""transactionNo"":""TRNB-27074"",
            ""typename"":""comparativeStatement"",
            ""attachmentname"":""TRNB-27074_comparativeStatement"",
            ""journalmasterid"":null,
            ""attachmentfilepath"":""https://tender.brac.net/myDashboard.newTab#restTender/procComState?tenderRefId=206158435757""
         }
      ]
   }
]"
rAjZR4HH,birthday2,shawagol,XML,Thursday 14th of December 2023 03:51:30 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<BODY>
    <DATE>
        <DAY>4</DAY>
        <MONTH>12</MONTH>
        <YEAR>2023</YEAR>
    </DATE>
    <active>1</active>
    <NAMES>
        <name>Вакульчик Александр Александрович</name>
        <name>Вража Наталья Александровна</name>
        <name>Кивачук Елена Викторовна</name>
        <name>Климук Альдона Кондратьевна</name>
        <name>Коноплицкий Антон Викторович</name>
        <name>Конючко Кристина Ивановна</name>
        <name>Литвинко Валентина Степановна</name>
        <name>Мисовская Ольга Степановна</name>
        <name>Новик Валерий Васильевич</name>
        <name>Сушкова Светлана Викторовна</name>
        <name>Шиндарёва Галина Павловна</name>
        <name>*                 *                 *</name>
    </NAMES>
    <POSITIONS>
        <position>мастер</position>
        <position>обработчик рыбы и морепродуктов</position>
        <position>обработчик рыбы и морепродуктов</position>
        <position>старший обработчик рыбы и морепродуктов</position>
        <position>обработчик рыбы и морепродуктов</position>
        <position>обработчик рыбы и морепродуктов</position>
        <position>уборщик помещений</position>
        <position>укладчик-упаковщик</position>
        <position>кладовщик</position>
        <position>обработчик рыбы и морепродуктов</position>
        <position>укладчик-упаковщик</position>
        <position>*                 *                 *</position>
    </POSITIONS>
    <PODRAZDEL>цех  3 уч. ИКРА

Цех  4 Филе сельди

Цех  4 Филе сельди

производственный цех 5 участок ""морепродукты""

ЦЕХ ПО ПЕРЕРАБ.РЫБОПРОДУКЦИИ  1 (упаковка)

Цех  4 Стеклобанка

УЧАСТОК ПО ОБСЛУЖИВАНИЮ ПОМЕЩЕНИЙ

Цех  4 Филе сельди

МАТЕРИАЛЬНЫЙ СКЛАД

цех  3 уч. СПРЭДЫ

ДЕКРЕТЧИКИ
*                 *                 *</PODRAZDEL>
</BODY>
"
iD91UDP0,Untitled,35657,C++,Thursday 14th of December 2023 03:49:21 AM CDT,"#include<stdlib.h> // в этом файле содержатся rand и srand
#include<time.h> // в этом файле содержится функция time

#include <iostream>

using namespace std;

void ShowArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << "" "";
    }
    cout << endl;
}

void InitArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 100;
    }
}

void BubbleSort(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {

	srand(time(NULL));

	setlocale(LC_ALL, ""ru"");

    const int size = 10;
    int arr[size];

    InitArray(arr, size);
    ShowArray(arr, size);

    BubbleSort(arr, size);
    ShowArray(arr, size);
}"
1E3tNa4f,Voucher Sample For ERP With Attachment List,Krypton_25,JSON,Thursday 14th of December 2023 03:37:09 AM CDT,"[
   {
      ""app_organization_branch_id"":2,
      ""created_on"":""05-10-2023 08:39:30.346"",
      ""date"":""2023-10-03 00:00:00.0"",
      ""description"":""Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
      ""domain_name"":""VendorTransactionMaster"",
      ""is_posted"":true,
      ""is_reconciliated"":""TRANSFERRED"",
      ""journal_no"":""PJV10020459/23"",
      ""payment_type"":""BANK"",
      ""posting_date"":""2023-10-04 00:00:00.0"",
      ""voucher_no"":""JV10020389/23"",
      ""voucher_type"":""Journal Voucher"",
      ""transfer_type"":null,
      ""old_id"":80543,
      ""is_backdated"":true,
      ""created_by_id"": 16390,
      ""details"":[
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":1068860,
            ""is_independent"":false,
            ""project_id"":120,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684766,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":1,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":""000"",
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":1068860,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":120,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684767,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":2,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":""000"",
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":1068860,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":120,
            ""old_id"":684768,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":3,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":1068860,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684769,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":4,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":1140,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":441,
            ""old_id"":684770,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":5,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":1140,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684771,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":6,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1022,
            ""credit"":0,
            ""debit"":108780,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684772,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":7,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":108780,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684775,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":10,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":7740,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798695925,
            ""old_id"":684776,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":11,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":7740,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684777,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":12,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":0,
            ""debit"":4180,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798702875,
            ""old_id"":684778,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":13,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":68,
            ""credit"":4180,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798691960,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684779,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":14,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":1140,
            ""is_independent"":false,
            ""project_id"":441,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684780,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":15,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":1140,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":441,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684781,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":16,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":7740,
            ""is_independent"":false,
            ""project_id"":171798695925,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684782,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":17,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":7740,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798695925,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684783,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":18,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":1021,
            ""credit"":0,
            ""debit"":4180,
            ""is_independent"":false,
            ""project_id"":171798702875,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":null,
            ""old_id"":684784,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":19,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         },
         {
            ""chart_of_accounts_id"":18,
            ""credit"":4180,
            ""debit"":0,
            ""is_independent"":false,
            ""project_id"":171798702875,
            ""remarks"":""Advance Adjust: Paid to  Healthcare Information System Ltd agst. VP00009068 through bank A/C no. 2009019110043 with BRAC Bank Limited dated 03/10/2023"",
            ""subsidiary_ledger_id"":null,
            ""to_project_id"":171798691960,
            ""old_id"":684785,
            ""app_organization_branch_id"":2,
            ""control_branch_id"":null,
            ""recon_code_id"":null,
            ""sl"":20,
            ""area_code"":null,
            ""reconciliation_type"":""TRANSFERRED"",
            ""department_code"":null,
            ""is_ho_reconciled"":0
         }
      ],
        ""attachments"": [
            {
                ""hoid"": 1671,
                ""transactionNo"": ""JV03007314/23"",
                ""typename"": """",
                ""attachmentname"": ""JV0300731423_PIN-153597.pdf"",
                ""journalmasterid"": 23922,
                ""attachmentfilepath"": """"
            },
            {
                ""hoid"": 407,
                ""transactionNo"": ""JV01000466/23"",
                ""typename"": """",
                ""attachmentname"": ""JV0100046623_189945 calculation sheet.pdf"",
                ""journalmasterid"": 1842,
                ""attachmentfilepath"": """"
            },
            {
                ""hoid"": 408,
                ""transactionNo"": ""JV01000466/23"",
                ""typename"": """",
                ""attachmentname"": ""JV0100046623_0100493.pdf"",
                ""journalmasterid"": 1842,
                ""attachmentfilepath"": """"
            }
        ]
   }
]"
v41Gmc54,Query Portfolio Kelas,ma39isy,Oracle 11,Thursday 14th of December 2023 03:29:27 AM CDT,"SELECT
	DISTINCT
    SUBJECTID,
	COURSEID,
	CLOMAPPINGID,
	SCOREMINIMUM,
	CLOCLOID,
	CLONAME,
	CONCAT( 'CLO-', lpad( CLONUMBER, 2, '0' ) ) AS CLONUMBER,
	CLOPLOID,
	CONCAT( 'PLO-', lpad( PLONUMBER, 2, '0' ) ) AS PLONUMBER,
	CLOASSESSMENTTOOLSNAME AS ASSESSMENTTOOL,
	ROUND( AVG(NILAI_CLO), 2 ) AS RATARATA_CLO,
	SUM( CASE WHEN NILAI_CLO > 50.01 THEN 1 ELSE 0 END ) AS DIATAS,
	SUM( CASE WHEN NILAI_CLO = 50.01 THEN 1 ELSE 0 END ) AS SESUAI,
	SUM( CASE WHEN NILAI_CLO < 50.01 THEN 1 ELSE 0 END ) AS DIBAWAH,
	ROUND( SUM( CASE WHEN NILAI_CLO >= 50.01 THEN 1 ELSE 0 END ) / COUNT(NILAI_CLO) * 100, 2 ) AS REALISASI,
	ROUND( ( SUM( CASE WHEN NILAI_CLO >= 50.01 THEN 1 ELSE 0 END ) / COUNT(NILAI_CLO) * 100 ) - 85, 2 ) AS GAP_PENINGKATAN,
	EVALUATION,
	IMPROVEMENT,
	CASE
		WHEN ROUND( AVG(NILAI_CLO), 2 ) >= 50.01 THEN
                        'TERCAPAI'
		ELSE 'TIDAK TERCAPAI'
	END AS STATUS_KETERCAPAIAN
FROM
	(
	SELECT
		A.STUDYPROGRAMID,
		A.STUDYPROGRAMNAME,
		A.SUBJECTID,
		A.SUBJECTCODE,
		A.SUBJECTNAME,
		A.CLOPLOID,
		A.SCOREMINIMUM,
		A.PLONUMBER,
		A.CLOCLOID,
		A.CLONAME,
		A.CLONUMBER,
		A.COURSEID,
		A.CLASS,
		A.STUDENTID,
		A.SCHOOLYEAR,
		A.SEMESTER,
		A.CLOMAPPINGID,
		A.PERCENTAGE_CLO,
		A.EVALUATION,
		A.IMPROVEMENT,
		(
		SELECT
			REGEXP_REPLACE( ( listagg ( E.CLOASSESSMENTTOOLSNAME, ',' ) WITHIN GROUP ( ORDER BY E.CLOASSESSMENTTOOLSNAME ) ), '([^,]*)(, )+($|,)', ' ' )
		FROM
			(
			SELECT
				DISTINCT
                                SUBJECTCODE,
				STUDYPROGRAMID,
				SCHOOLYEAR,
				SEMESTER,
				CLOASSESSMENTTOOLSNAME,
				CLOASSESSMENTTOOLSID,
				CLOMAPPINGID
			FROM
				CLOASSESSMENTTOOLS
			JOIN CLOQUESTION Q ON
				( CLOASSESSMENTTOOLSID = Q.CLOASSESMENTID ) 
                            ) E
		WHERE
			SUBJECTCODE = A.SUBJECTCODE
			AND STUDYPROGRAMID = A.STUDYPROGRAMID
			AND SCHOOLYEAR = A.SCHOOLYEAR
			AND SEMESTER = A.SEMESTER
			AND CLOMAPPINGID = A.CLOMAPPINGID 
                        ) AS CLOASSESSMENTTOOLSNAME,
		(SUM(NILAIPERQUEST) / PERCENTAGE_CLO) * 100 AS NILAI_CLO
	FROM
		(
		SELECT
			B.STUDYPROGRAMID,
			B.STUDYPROGRAMNAME,
			D.SUBJECTCODE,
			H.SUBJECTID,
			H.SUBJECTNAME,
			A.CLOPLOID,
			A.SCOREMINIMUM,
			A.PLONUMBER,
			A.PLONAME,
			C.CLOCLOID,
			C.CLONUMBER,
			C.CLONAME,
			D.SCHOOLYEAR,
			D.SEMESTER,
			CSP.COURSEID,
			COURSE.CLASS,
			CQ.QUESTIONDESCRIPTION,
			CQ.PERCENTAGE,
			D.CLOMAPPINGID,
			CQ.CLOASSESMENTID,
			CSP.STUDENTID,
			CE.EVALUATION,
			CE.IMPROVEMENT,
			SUM(CQ.PERCENTAGE) OVER ( PARTITION BY C.CLOPLOID,
			H.SUBJECTID,
			CSP.STUDENTID ) AS PERCENTAGE_PLO,
			SUM(CQ.PERCENTAGE) OVER ( PARTITION BY C.CLOCLOID,
			H.SUBJECTID,
			CSP.STUDENTID ) AS PERCENTAGE_CLO,
			NVL( CSP.CLOPOINT, 0 ) * ( CQ.PERCENTAGE / 100 ) AS NILAIPERQUEST
		FROM
			ACADEMIC.CLOPLO A
		LEFT JOIN MASTERDATA.STUDYPROGRAM B ON
			( A.STUDYPROGRAMID = B.STUDYPROGRAMID )
		LEFT JOIN ACADEMIC.CLOCLO C ON
			( A.CLOPLOID = C.CLOPLOID )
		LEFT JOIN ACADEMIC.CLOMAPPING D ON
			( C.CLOCLOID = D.CLOCLOID
				AND D.ACTIVESTATUS = 'Y' )
		LEFT JOIN ACADEMIC.SUBJECTS H ON
			( D.SUBJECTCODE = H.SUBJECTCODE
				AND A.STUDYPROGRAMID = H.STUDYPROGRAMID
				AND H.ACTIVESTATUS = 'YA' )
		LEFT JOIN ACADEMIC.CLOQUESTION CQ ON
			( D.CLOMAPPINGID = CQ.CLOMAPPINGID )
		LEFT JOIN ACADEMIC.CLOSTUDENTPOINT CSP ON
			( CQ.CLOQUESTIONID = CSP.CLOQUESTIONID )
		LEFT JOIN ACADEMIC.COURSE ON
			( CSP.COURSEID = COURSE.COURSEID )
		LEFT JOIN ACADEMIC.CLO_CLO_EVALUATION CE ON
			( COURSE.COURSEID = CE.COURSEID
				AND D.CLOMAPPINGID = CE.CLOMAPPINGID )
		JOIN (
			SELECT
				STUDENTSTUDYCARDID,
				COURSEID,
				STUDENTID
			FROM
				STUDENTSTUDYCARD
			WHERE
				STATUS = 'BERLAKU'
				AND COURSEID = '1229654') STC ON
			(CSP.COURSEID = STC.COURSEID
				AND CSP.STUDENTID = STC.STUDENTID)
		WHERE
			CSP.COURSEID = '1229654' 
                        ) A
	GROUP BY
		A.STUDYPROGRAMID,
		A.STUDYPROGRAMNAME,
		A.SUBJECTID,
		A.SUBJECTCODE,
		A.SUBJECTNAME,
		A.CLOPLOID,
		A.SCOREMINIMUM,
		A.PLONUMBER,
		A.CLOCLOID,
		A.CLONAME,
		A.CLONUMBER,
		A.COURSEID,
		A.CLASS,
		A.STUDENTID,
		A.SCHOOLYEAR,
		A.SEMESTER,
		A.CLOMAPPINGID,
		A.PERCENTAGE_CLO,
		A.EVALUATION,
		A.IMPROVEMENT 
                    )
WHERE
	STUDYPROGRAMID = '31'
GROUP BY
	SUBJECTID,
	COURSEID,
	CLOMAPPINGID,
	SCOREMINIMUM,
	CLOCLOID,
	CLONAME,
	CLONUMBER,
	CLOPLOID,
	PLONUMBER,
	CLOASSESSMENTTOOLSNAME,
	EVALUATION,
	IMPROVEMENT
ORDER BY
	CLONUMBER,
	PLONUMBER ASC"
2GrK6WMY,Query Portfolio Matakuliah,ma39isy,Oracle 11,Thursday 14th of December 2023 03:28:37 AM CDT,"SELECT
	DISTINCT
                        SUBJECTID,
	CLOMAPPINGID,
	SCOREMINIMUM,
	CLOCLOID,
	CLONAME,
	CONCAT( 'CLO-', lpad( CLONUMBER, 2, '0' ) ) AS CLONUMBER,
	CLOPLOID,
	CONCAT( 'PLO-', lpad( PLONUMBER, 2, '0' ) ) AS PLONUMBER,
	CLOASSESSMENTTOOLSNAME AS ASSESSMENTTOOL,
	ROUND( AVG(NILAI_CLO), 2 ) AS RATARATA_CLO,
	SUM( CASE WHEN NILAI_CLO > 50.01 THEN 1 ELSE 0 END ) AS DIATAS,
	SUM( CASE WHEN NILAI_CLO = 50.01 THEN 1 ELSE 0 END ) AS SESUAI,
	SUM( CASE WHEN NILAI_CLO < 50.01 THEN 1 ELSE 0 END ) AS DIBAWAH,
	ROUND( SUM( CASE WHEN NILAI_CLO >= 50.01 THEN 1 ELSE 0 END ) / COUNT(NILAI_CLO) * 100, 2 ) AS REALISASI,
	ROUND( ( SUM( CASE WHEN NILAI_CLO >= 50.01 THEN 1 ELSE 0 END ) / COUNT(NILAI_CLO) * 100 ) - 85, 2 ) AS GAP_PENINGKATAN,
	EVALUATION,
	IMPROVMENT AS IMPROVEMENT,
	CASE
		WHEN ROUND( AVG(NILAI_CLO), 2 ) >= 50.01 THEN
                            'TERCAPAI'
		ELSE 'TIDAK TERCAPAI'
	END AS STATUS_KETERCAPAIAN
FROM
	(
	SELECT
		A.STUDYPROGRAMID,
		A.STUDYPROGRAMNAME,
		A.SUBJECTID,
		A.SUBJECTCODE,
		A.SUBJECTNAME,
		A.CLOPLOID,
		A.SCOREMINIMUM,
		A.PLONUMBER,
		A.CLOCLOID,
		A.CLONAME,
		A.CLONUMBER,
		A.COURSEID,
		A.CLASS,
		A.STUDENTID,
		A.SCHOOLYEAR,
		A.SEMESTER,
		A.CLOMAPPINGID,
		A.PERCENTAGE_CLO,
		A.EVALUATION,
		A.IMPROVMENT,
		(
		SELECT
			REGEXP_REPLACE( ( listagg ( E.CLOASSESSMENTTOOLSNAME, ',' ) WITHIN GROUP ( ORDER BY E.CLOASSESSMENTTOOLSNAME ) ), '([^,]*)(, )+($|,)', ' ' )
		FROM
			(
			SELECT
				DISTINCT
                                    SUBJECTCODE,
				STUDYPROGRAMID,
				SCHOOLYEAR,
				SEMESTER,
				CLOASSESSMENTTOOLSNAME,
				CLOASSESSMENTTOOLSID,
				CLOMAPPINGID
			FROM
				CLOASSESSMENTTOOLS
			JOIN CLOQUESTION Q ON
				( CLOASSESSMENTTOOLSID = Q.CLOASSESMENTID ) 
                                ) E
		WHERE
			SUBJECTCODE = A.SUBJECTCODE
			AND STUDYPROGRAMID = A.STUDYPROGRAMID
			AND SCHOOLYEAR = A.SCHOOLYEAR
			AND SEMESTER = A.SEMESTER
			AND CLOMAPPINGID = A.CLOMAPPINGID 
                            ) AS CLOASSESSMENTTOOLSNAME,
		ROUND( SUM(NILAIPERQUEST) / PERCENTAGE_CLO, 2 ) * 100 AS NILAI_CLO
	FROM
		(
		SELECT
			B.STUDYPROGRAMID,
			B.STUDYPROGRAMNAME,
			D.SUBJECTCODE,
			H.SUBJECTID,
			H.SUBJECTNAME,
			A.CLOPLOID,
			A.SCOREMINIMUM,
			A.PLONUMBER,
			A.PLONAME,
			C.CLOCLOID,
			C.CLONUMBER,
			C.CLONAME,
			D.SCHOOLYEAR,
			D.SEMESTER,
			CSP.COURSEID,
			COURSE.CLASS,
			CQ.QUESTIONDESCRIPTION,
			CQ.PERCENTAGE,
			D.CLOMAPPINGID,
			CQ.CLOASSESMENTID,
			CSP.STUDENTID,
			CE.EVALUATION,
			CE.IMPROVMENT,
			SUM(CQ.PERCENTAGE) OVER ( PARTITION BY C.CLOPLOID,
			H.SUBJECTID,
			CSP.STUDENTID ) AS PERCENTAGE_PLO,
			SUM(CQ.PERCENTAGE) OVER ( PARTITION BY C.CLOCLOID,
			H.SUBJECTID,
			CSP.STUDENTID ) AS PERCENTAGE_CLO,
			NVL( CSP.CLOPOINT, 0 ) * ( CQ.PERCENTAGE / 100 ) AS NILAIPERQUEST
		FROM
			ACADEMIC.CLOPLO A
		LEFT JOIN MASTERDATA.STUDYPROGRAM B ON
			( A.STUDYPROGRAMID = B.STUDYPROGRAMID )
		LEFT JOIN ACADEMIC.CLOCLO C ON
			( A.CLOPLOID = C.CLOPLOID )
		LEFT JOIN ACADEMIC.CLOMAPPING D ON
			( C.CLOCLOID = D.CLOCLOID
				AND D.ACTIVESTATUS = 'Y' )
		LEFT JOIN ACADEMIC.SUBJECTS H ON
			( D.SUBJECTCODE = H.SUBJECTCODE
				AND A.STUDYPROGRAMID = H.STUDYPROGRAMID
				AND H.ACTIVESTATUS = 'YA' )
		LEFT JOIN ACADEMIC.CLOQUESTION CQ ON
			( D.CLOMAPPINGID = CQ.CLOMAPPINGID )
		LEFT JOIN ACADEMIC.CLOSTUDENTPOINT CSP ON
			( CQ.CLOQUESTIONID = CSP.CLOQUESTIONID )
		LEFT JOIN ACADEMIC.COURSE ON
			( CSP.COURSEID = COURSE.COURSEID )
		LEFT JOIN ACADEMIC.CLO_SUBJECTS_EVALUATION CE ON
			( COURSE.SUBJECTID = CE.SUBJECTID
				AND D.CLOMAPPINGID = CE.CLOMAPPINGID
				AND CE.SCHOOLYEAR = COURSE.SCHOOLYEAR
				AND CE.SEMESTER = COURSE.SEMESTER)
		JOIN (
			SELECT
				AAA.COURSEID,
				AAA.STUDENTID
			FROM
				STUDENTSTUDYCARD AAA
			JOIN COURSE BBB ON
				( AAA.COURSEID = BBB.COURSEID )
			WHERE
				BBB.SCHOOLYEAR = 2223
				AND BBB.SEMESTER = 1
				AND BBB.SUBJECTID = 25814
				AND AAA.STATUS = 'BERLAKU' 
                                    ) STC ON
			( CSP.COURSEID = STC.COURSEID
				AND STC.STUDENTID = CSP.STUDENTID )
		WHERE
			ACADEMIC.COURSE.SUBJECTID = 25814
			AND ACADEMIC.COURSE.SCHOOLYEAR = 2223
			AND ACADEMIC.COURSE.SEMESTER = 1 
                            ) A
	WHERE
		STUDYPROGRAMID = '31'
	GROUP BY
		A.STUDYPROGRAMID,
		A.STUDYPROGRAMNAME,
		A.SUBJECTID,
		A.SUBJECTCODE,
		A.SUBJECTNAME,
		A.CLOPLOID,
		A.SCOREMINIMUM,
		A.PLONUMBER,
		A.CLOCLOID,
		A.CLONAME,
		A.CLONUMBER,
		A.COURSEID,
		A.CLASS,
		A.STUDENTID,
		A.SCHOOLYEAR,
		A.SEMESTER,
		A.CLOMAPPINGID,
		A.PERCENTAGE_CLO,
		A.EVALUATION,
		A.IMPROVMENT 
                        )
GROUP BY
	SUBJECTID,
	CLOMAPPINGID,
	SCOREMINIMUM,
	CLOCLOID,
	CLONAME,
	CLONUMBER,
	CLOPLOID,
	PLONUMBER,
	CLOASSESSMENTTOOLSNAME,
	EVALUATION,
	IMPROVMENT
ORDER BY
	CLONUMBER,
	PLONUMBER ASC;"
kCvaD3Ve,Dictionary And Hash Set,Priyasadik,C++,Thursday 14th of December 2023 03:25:10 AM CDT,"#include <iostream>
#include <unordered_set>
#include <unordered_map>
#include <string>
using namespace std;

int main() {
    // Creating an unordered_set (hash set) of integers
    unordered_set<int> mySet;

    // Inserting elements into the set
    mySet.insert(5);
    mySet.insert(10);
    mySet.insert(15);

    // Checking if an element exists in the set
    if (mySet.find(10) != mySet.end()) {
        cout << ""Element 10 found in the set."" << endl;
    }

    // Removing an element from the set
    mySet.erase(5);

    // Iterating through the set
    cout << ""Elements in the set:"";
    for (int element : mySet) {
        cout << "" "" << element;
    }
    cout << endl << endl;

    // Creating an unordered_map (dictionary) with string keys and integer values
    unordered_map<string, int> myMap;

    // Inserting key-value pairs into the map
    myMap[""apple""] = 5;
    myMap[""banana""] = 10;
    myMap[""orange""] = 15;

    // Accessing values using keys
    cout << ""Value associated with 'banana': "" << myMap[""banana""] << endl;

    // Checking if a key exists in the map
    if (myMap.find(""apple"") != myMap.end()) {
        cout << ""Key 'apple' found in the map."" << endl;
    }

    // Removing a key-value pair from the map
    myMap.erase(""orange"");

    // Iterating through the map
    cout << ""Key-Value pairs in the map:"" << endl;
    for (const auto& pair : myMap) {
        cout << pair.first << "": "" << pair.second << endl;
    }

    return 0;
}
"
b7YkipZ5,Function in c++,Priyasadik,C++,Thursday 14th of December 2023 03:23:51 AM CDT,"#include <iostream>
using namespace std;

// Void function without parameters
void greet() {
    cout << ""Hello! Welcome to functions in C++."" << endl;
}

// Function with parameters and return value
int sum(int a, int b) {
    return a + b;
}

// Function with side effects (modifying parameter)
void modifyValue(int &x) {
    x *= 2;
}

// Recursive function
int factorial(int n) {
    if (n <= 1) {
        return 1;
    }
    return n * factorial(n - 1);
}

// Function overloading
float sum(float a, float b) {
    return a + b;
}

int main() {
    // Calling void function
    greet();

    // Calling function with parameters and return value
    int result = sum(5, 7);
    cout << ""Sum: "" << result << endl;

    // Calling function with side effects
    int value = 10;
    modifyValue(value);
    cout << ""Modified value: "" << value << endl;

    // Calling recursive function
    int fact = factorial(5);
    cout << ""Factorial of 5: "" << fact << endl;

    // Calling overloaded function
    float resultFloat = sum(3.5f, 2.5f);
    cout << ""Sum of floats: "" << resultFloat << endl;

    return 0;
}
"
DT43Jscq,Linear Data Types in c++,Priyasadik,C++,Thursday 14th of December 2023 03:22:40 AM CDT,"#include <iostream>
#include <stack>
#include <queue>
#include <vector>
using namespace std;

int main() {
    // Array
    int arr[5] = {1, 2, 3, 4, 5};

    // Linked List (Singly Linked)
    struct Node {
        int data;
        Node* next;
    };
    Node* head = nullptr;
    Node* temp = nullptr;
    for (int i = 0; i < 5; ++i) {
        Node* newNode = new Node();
        newNode->data = arr[i];
        newNode->next = nullptr;
        if (head == nullptr) {
            head = newNode;
            temp = newNode;
        } else {
            temp->next = newNode;
            temp = temp->next;
        }
    }

    // Stack
    stack<int> myStack;
    for (int i = 0; i < 5; ++i) {
        myStack.push(arr[i]);
    }

    // Queue
    queue<int> myQueue;
    for (int i = 0; i < 5; ++i) {
        myQueue.push(arr[i]);
    }

    // Vector
    vector<int> myVector(arr, arr + sizeof(arr) / sizeof(arr[0]));

    // Displaying elements from different data structures
    cout << ""Array elements: "";
    for (int i = 0; i < 5; ++i) {
        cout << arr[i] << "" "";
    }
    cout << endl;

    cout << ""Linked List elements: "";
    Node* current = head;
    while (current != nullptr) {
        cout << current->data << "" "";
        current = current->next;
    }
    cout << endl;

    cout << ""Stack elements: "";
    while (!myStack.empty()) {
        cout << myStack.top() << "" "";
        myStack.pop();
    }
    cout << endl;

    cout << ""Queue elements: "";
    while (!myQueue.empty()) {
        cout << myQueue.front() << "" "";
        myQueue.pop();
    }
    cout << endl;

    cout << ""Vector elements: "";
    for (int i = 0; i < myVector.size(); ++i) {
        cout << myVector[i] << "" "";
    }
    cout << endl;

    return 0;
}"
1Rsgv8FB,Loops in c++,Priyasadik,C++,Thursday 14th of December 2023 03:21:14 AM CDT,"// Example of a for loop
for (int i = 0; i < 5; ++i) {
    cout << ""Iteration "" << i + 1 << endl;
}

// Example of a while loop
int count = 0;
while (count < 5) {
    cout << ""Count: "" << count << endl;
    ++count;
}

// Example of a do-while loop
int x = 5;
do {
    cout << ""x: "" << x << endl;
    --x;
} while (x > 0);"
YXaW4Dx7,If Else c++,Priyasadik,C++,Thursday 14th of December 2023 03:20:01 AM CDT,"int num = 10;

// If statement
if (num > 5) {
    cout << ""Number is greater than 5."" << endl;
} else {
    cout << ""Number is not greater than 5."" << endl;
}

// Another example
bool isSunny = false;
bool isRainy = true;

if (isSunny) {
    cout << ""It's sunny outside!"" << endl;
} else if (isRainy) {
    cout << ""It's rainy outside!"" << endl;
} else {
    cout << ""The weather is not sunny or rainy."" << endl;
}"
xbkyBrMr,string in c++,Priyasadik,C++,Thursday 14th of December 2023 03:18:09 AM CDT,"// Declaring and initializing strings
string greeting = ""Hello, "";
string name = ""Alice"";

// Concatenating strings
string message = greeting + name + ""! Welcome to C++."";

// Finding the length of a string
int length = message.length();

// Accessing individual characters in a string
char firstChar = message[0]; // Accessing the first character

// Checking if a string is empty
bool isEmpty = message.empty();

// Substring
string partOfMessage = message.substr(7, 5); // Extracts ""Alice"" from the message

// Finding a character or substring in a string
size_t found = message.find(""Welcome""); // Find the position of ""Welcome"" in the message

// Replacing a substring in a string
string replacedMessage = message;
size_t replacePos = replacedMessage.find(""C++"");
replacedMessage.replace(replacePos, 3, ""programming"");

// Comparing strings
string str1 = ""hello"";
string str2 = ""world"";
int comparisonResult = str1.compare(str2);

// Printing strings and their properties
cout << ""Message: "" << message << endl;
cout << ""Length of message: "" << length << endl;
cout << ""First character: "" << firstChar << endl;
cout << ""Is message empty? "" << boolalpha << isEmpty << endl;
cout << ""Substring: "" << partOfMessage << endl;
cout << ""Position of 'Welcome': "" << found << endl;
cout << ""Replaced Message: "" << replacedMessage << endl;
cout << ""Comparison result: "" << comparisonResult << endl;

// Inputting a string from the user
string userInput;
cout << ""Enter your name: "";
getline(cin, userInput); // getline() allows input with spaces
cout << ""Hello, "" << userInput << ""! Nice to meet you."" << endl;"
dfy8NUpp,Mathematics Operation in c++,Priyasadik,C++,Thursday 14th of December 2023 03:17:12 AM CDT,"int a = 10;
int b = 4;

// Addition
int sum = a + b;
cout << ""Sum: "" << sum << endl;

// Subtraction
int difference = a - b;
cout << ""Difference: "" << difference << endl;

// Multiplication
int product = a * b;
cout << ""Product: "" << product << endl;

// Division
int division = a / b;
cout << ""Division: "" << division << endl;

// Modulus (Remainder)
int modulus = a % b;
cout << ""Modulus: "" << modulus << endl;

// Increment and Decrement
int num = 5;
num++; // Incrementing num by 1
cout << ""Incremented num: "" << num << endl;

num--; // Decrementing num by 1
cout << ""Decremented num: "" << num << endl;"
PmjUfzfa,TakeUserInput c++,Priyasadik,C++,Thursday 14th of December 2023 03:16:08 AM CDT,"// Variable declaration
int age;
double temperature;
char initial;
bool isStudent;

// Taking input from the user
cout << ""Enter your age: "";
cin >> age;

cout << ""Enter the temperature: "";
cin >> temperature;

cout << ""Enter your initial: "";
cin >> initial;

cout << ""Are you a student? (1 for yes, 0 for no): "";
cin >> isStudent;

// Printing the values entered by the user
cout << ""Age: "" << age << endl;
cout << ""Temperature: "" << temperature << endl;
cout << ""Initial: "" << initial << endl;
cout << ""Is Student: "" << boolalpha << isStudent << endl;"
2gALJsUJ,Variable Declaration,Priyasadik,C++,Thursday 14th of December 2023 03:13:48 AM CDT,"// Variable declaration
int age; // Declaring an integer variable named 'age'
double temperature; // Declaring a double variable named 'temperature'
char initial; // Declaring a character variable named 'initial'
bool isStudent; // Declaring a boolean variable named 'isStudent'

// Variable initialization
age = 25; // Assigning a value of 25 to the 'age' variable
temperature = 98.6; // Assigning a value of 98.6 to the 'temperature' variable
initial = 'J'; // Assigning the character 'J' to the 'initial' variable
isStudent = true; // Assigning the value 'true' to the 'isStudent' variable

// Printing the initialized variables
cout << ""Age: "" << age << endl;
cout << ""Temperature: "" << temperature << endl;
cout << ""Initial: "" << initial << endl;
cout << ""Is Student: "" << boolalpha << isStudent << endl;"
5jh5CR9p,Primitive DataType in c++,Priyasadik,C++,Thursday 14th of December 2023 03:12:28 AM CDT,"// Integer types
int intValue = 10;
short shortValue = 5;
long long longValue = 1234567890;
long long longLongValue = 987654321098765432;

// Floating-point types
float floatValue = 3.14f;
double doubleValue = 2.71828;
long double longDoubleValue = 123.45678901234567890L;

// Character types
char charValue = 'A';
wchar_t wideCharValue = L'Ω'; // Unicode character for Omega

// Boolean type
bool boolValue = true;

// Printing values
std::cout << ""Integer value: "" << intValue << std::endl;
std::cout << ""Short value: "" << shortValue << std::endl;
std::cout << ""Long value: "" << longValue << std::endl;
std::cout << ""Long long value: "" << longLongValue << std::endl;

std::cout << ""Float value: "" << floatValue << std::endl;
std::cout << ""Double value: "" << doubleValue << std::endl;
std::cout << ""Long double value: "" << longDoubleValue << std::endl;

std::cout << ""Character value: "" << charValue << std::endl;
std::wcout << L""Unicode wide character value: "" << wideCharValue << std::endl;

std::cout << ""Boolean value: "" << std::boolalpha << boolValue << std::endl;"
ndzJXy5m,Print to Console in c++,Priyasadik,C++,Thursday 14th of December 2023 03:11:01 AM CDT,"// Printing to the console
std::cout << ""Hello, world!"" << std::endl;

int number = 10;
std::cout << ""The value of number is: "" << number << std::endl;"
vv9zSxTv,Comments in c++,Priyasadik,C++,Thursday 14th of December 2023 03:09:04 AM CDT,"// This is a single-line comment in C++
int x = 5; // Variable declaration

/* This is a
multi-line comment
in C++ */    	"
8JnQyTqV,error_log [251 Moodle],hafiizhekom,Apache Log,Thursday 14th of December 2023 02:33:47 AM CDT,"[Thu Dec 14 12:10:38.084205 2023] [mpm_event:notice] [pid 5728:tid 139848094316736] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 12:10:39.243010 2023] [suexec:notice] [pid 20709:tid 140501547960512] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 12:10:39.264792 2023] [lbmethod_heartbeat:notice] [pid 20709:tid 140501547960512] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 12:10:39.272850 2023] [mpm_event:notice] [pid 20709:tid 140501547960512] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 12:10:39.272914 2023] [core:notice] [pid 20709:tid 140501547960512] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 12:16:42.216499 2023] [mpm_event:notice] [pid 20709:tid 140501547960512] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 12:16:56.569566 2023] [suexec:notice] [pid 21142:tid 140581364533440] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 12:16:56.593675 2023] [lbmethod_heartbeat:notice] [pid 21142:tid 140581364533440] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 12:16:56.597963 2023] [mpm_event:notice] [pid 21142:tid 140581364533440] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 12:16:56.597993 2023] [core:notice] [pid 21142:tid 140581364533440] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 13:01:45.880147 2023] [mpm_event:notice] [pid 21142:tid 140581364533440] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 13:01:47.036915 2023] [suexec:notice] [pid 23614:tid 140249294837952] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 13:01:47.085924 2023] [lbmethod_heartbeat:notice] [pid 23614:tid 140249294837952] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 13:01:47.116383 2023] [mpm_event:notice] [pid 23614:tid 140249294837952] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 PHP/7.3.33 configured -- resuming normal operations
[Thu Dec 14 13:01:47.116431 2023] [core:notice] [pid 23614:tid 140249294837952] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 13:06:41.013241 2023] [mpm_event:notice] [pid 23614:tid 140249294837952] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 13:06:42.160109 2023] [suexec:notice] [pid 24016:tid 140223281510592] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 13:06:42.189236 2023] [lbmethod_heartbeat:notice] [pid 24016:tid 140223281510592] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 13:06:42.195706 2023] [mpm_event:notice] [pid 24016:tid 140223281510592] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 13:06:42.195754 2023] [core:notice] [pid 24016:tid 140223281510592] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 13:10:42.711421 2023] [mpm_event:notice] [pid 24016:tid 140223281510592] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 13:10:43.854424 2023] [suexec:notice] [pid 24357:tid 139754122332352] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 13:10:43.886694 2023] [lbmethod_heartbeat:notice] [pid 24357:tid 139754122332352] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 13:10:43.892826 2023] [mpm_event:notice] [pid 24357:tid 139754122332352] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 13:10:43.892871 2023] [core:notice] [pid 24357:tid 139754122332352] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 13:14:13.301985 2023] [mpm_event:notice] [pid 24357:tid 139754122332352] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 13:14:14.437006 2023] [suexec:notice] [pid 25024:tid 140346171848896] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 13:14:14.462515 2023] [lbmethod_heartbeat:notice] [pid 25024:tid 140346171848896] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 13:14:14.467723 2023] [mpm_event:notice] [pid 25024:tid 140346171848896] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 13:14:14.467755 2023] [core:notice] [pid 25024:tid 140346171848896] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 13:25:06.620873 2023] [mpm_event:notice] [pid 25024:tid 140346171848896] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 13:25:07.751976 2023] [suexec:notice] [pid 25401:tid 139894541478080] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 13:25:07.775691 2023] [lbmethod_heartbeat:notice] [pid 25401:tid 139894541478080] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 13:25:07.781017 2023] [mpm_event:notice] [pid 25401:tid 139894541478080] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 13:25:07.781068 2023] [core:notice] [pid 25401:tid 139894541478080] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 15:20:36.834061 2023] [autoindex:error] [pid 25404:tid 139893963470592] [client 10.248.140.110:62775] AH01276: Cannot serve directory /var/www/html/: No matching DirectoryIndex (index.html,index.php,index.php) found, and server-generated directory index forbidden by Options directive
[Thu Dec 14 15:20:36.834338 2023] [core:error] [pid 25404:tid 139893963470592] [client 10.248.140.110:62775] AH00037: Symbolic link not allowed or link target not accessible: /usr/share/httpd/noindex/index.html

[Thu Dec 14 16:06:39.044401 2023] [mpm_event:notice] [pid 25401:tid 139894541478080] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 16:06:40.193531 2023] [suexec:notice] [pid 29268:tid 140168433178816] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 16:06:40.219458 2023] [lbmethod_heartbeat:notice] [pid 29268:tid 140168433178816] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 16:06:40.225153 2023] [mpm_event:notice] [pid 29268:tid 140168433178816] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 16:06:40.225195 2023] [core:notice] [pid 29268:tid 140168433178816] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 16:10:18.269392 2023] [mpm_event:notice] [pid 29268:tid 140168433178816] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 16:10:25.184915 2023] [suexec:notice] [pid 29537:tid 140181640534208] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 16:10:25.213209 2023] [lbmethod_heartbeat:notice] [pid 29537:tid 140181640534208] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 16:10:25.218957 2023] [mpm_event:notice] [pid 29537:tid 140181640534208] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 16:10:25.218996 2023] [core:notice] [pid 29537:tid 140181640534208] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 16:11:58.906603 2023] [mpm_event:notice] [pid 29537:tid 140181640534208] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 16:12:00.055834 2023] [suexec:notice] [pid 29675:tid 139733927758016] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 16:12:00.083130 2023] [lbmethod_heartbeat:notice] [pid 29675:tid 139733927758016] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 16:12:00.088789 2023] [mpm_event:notice] [pid 29675:tid 139733927758016] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 16:12:00.088846 2023] [core:notice] [pid 29675:tid 139733927758016] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
[Thu Dec 14 16:37:04.389226 2023] [mpm_event:notice] [pid 29675:tid 139733927758016] AH00492: caught SIGWINCH, shutting down gracefully
[Thu Dec 14 16:37:05.540060 2023] [suexec:notice] [pid 30295:tid 139633786886336] AH01232: suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
AH00557: httpd: apr_sockaddr_info_get() failed for moddleapps.astra.co.id
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
[Thu Dec 14 16:37:05.570805 2023] [lbmethod_heartbeat:notice] [pid 30295:tid 139633786886336] AH02282: No slotmem from mod_heartmonitor
[Thu Dec 14 16:37:05.576616 2023] [mpm_event:notice] [pid 30295:tid 139633786886336] AH00489: Apache/2.4.58 (codeit) OpenSSL/3.0.12+quic mod_fcgid/2.3.9 configured -- resuming normal operations
[Thu Dec 14 16:37:05.576657 2023] [core:notice] [pid 30295:tid 139633786886336] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
"
YDXuneB9,Interface in Python,Priyasadik,Python,Thursday 14th of December 2023 02:09:23 AM CDT,"class Animal:
    def sound(self):
        return ""Some generic sound""

class Dog(Animal):
    def sound(self):
        return ""Woof!""

# Interface Implemetation
from abc import ABC, abstractmethod

class Shape(ABC):
    @abstractmethod
    def area(self):
        pass

    @abstractmethod
    def perimeter(self):
        pass

class Rectangle(Shape):
    def __init__(self, width, height):
        self.width = width
        self.height = height

    def area(self):
        return self.width * self.height

    def perimeter(self):
        return 2 * (self.width + self.height)

rect = Rectangle(5, 10)
print(rect.area())  # Outputs: 50
print(rect.perimeter())  # Outputs: 30"
n8cVC5DA,Class In Python,Priyasadik,Python,Thursday 14th of December 2023 02:08:01 AM CDT,"class MyClass:
    # Attributes or class variables
    my_variable = 10

    # Methods or functions within the class
    def my_method(self):
        return ""This is a method inside MyClass""
		

my_object = MyClass()  # Creating an instance of MyClass

# accessing object
print(my_object.my_variable)  # Outputs: 10
print(my_object.my_method())  # Outputs: ""This is a method inside MyClass""

#constructor

class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

person1 = Person(""Alice"", 30)
print(person1.name)  # Outputs: ""Alice""
print(person1.age)  # Outputs: 30"
Cn2VRcPa,Dictionary and sets,Priyasadik,Python,Thursday 14th of December 2023 02:06:50 AM CDT,"#Creating a Dictionary:
my_dict = {""key1"": ""value1"", ""key2"": ""value2"", ""key3"": ""value3""}

#Accessing Values in a Dictionary:
print(my_dict[""key2""])  # Outputs: value2

# Modifying a Dictionary:
my_dict[""key1""] = ""new_value""  # Updates the value of key1

#Creating a Set:
my_set = {1, 2, 3, 4, 5}

#Adding and Removing Elements in a Set:
my_set.add(6)
my_set.remove(3)

#Operation on sets
set1 = {1, 2, 3}
set2 = {3, 4, 5}

print(set1.union(set2))  # Outputs: {1, 2, 3, 4, 5}
print(set1.intersection(set2))  # Outputs: {3}"
t92h0YLV,Function in Python,Priyasadik,Python,Thursday 14th of December 2023 02:05:39 AM CDT,"def greet(name):
	return f""Hello, {name}!""

# Calling the function
print(greet(""Alice""))  # Outputs: Hello, Alice!

#Anonymous Functions (Lambda Functions):
add = lambda x, y: x + y
print(add(3, 5))  # Outputs: 8

#recursive
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

print(factorial(5))  # Outputs: 120

#Generator Functions:
def square_numbers(nums):
    for num in nums:
        yield num * num

my_nums = square_numbers([1, 2, 3, 4, 5])
for num in my_nums:
    print(num)"
Dv0tGmp3,Linear Data Types,Priyasadik,Python,Thursday 14th of December 2023 02:04:10 AM CDT,"#Lists are ordered, mutable (changeable), and allow duplicate elements. They are defined using square brackets []
my_list = [1, 2, 3, 4, 5]

#Tuples are ordered and immutable (unchangeable) sequences. They are defined using parentheses ().
my_tuple = (1, 2, 3, 4, 5)

#Strings are sequences of characters and are immutable. They are defined using single quotes '', double quotes """", or triple quotes ''' '''
my_string = ""Hello, Python!""


#Python also has an array module that provides a way to create arrays that are more efficient for storing elements of the same data type (unlike lists, which can contain different types). 

import array
my_array = array.array('i', [1, 2, 3, 4, 5])  # 'i' represents integer type

from queue import Queue

# Create a queue
my_queue = Queue()

# Enqueue elements
my_queue.put(1)
my_queue.put(2)
my_queue.put(3)

# Dequeue elements
print(my_queue.get())  # Outputs: 1
print(my_queue.get())  # Outputs: 2

from collections import deque

my_queue = deque()

# Enqueue elements
my_queue.append(1)
my_queue.append(2)
my_queue.append(3)

# Dequeue elements
print(my_queue.popleft())  # Outputs: 1
print(my_queue.popleft())  # Outputs: 2

my_stack = []

# Push elements onto the stack
my_stack.append(1)
my_stack.append(2)
my_stack.append(3)

# Pop elements from the stack
print(my_stack.pop())  # Outputs: 3
print(my_stack.pop())  # Outputs: 2"
RkGCRF7M,Untitled,phatboislym,Python,Thursday 14th of December 2023 02:04:09 AM CDT,"class Solution:
    def onesMinusZeros(self, grid: List[List[int]]) -> List[List[int]]:
        def getColumn(column: int) -> list:
            return [row[column] for row in grid]
        
        rows: int = len(grid)
        cols: int = len(grid[0])
        onesCol: list = []
        zerosCol: list = []
        onesRow: list = []
        zerosRow: list = []

        for i in range(cols):
            col: list = getColumn(i)
            onesCol.append(col.count(1))
            zerosCol.append(col.count(0))

        for i in range(rows):
            onesRow.append(grid[i].count(1))
            zerosRow.append(grid[i].count(0))

        diff: list = [[0] * cols for i in range(rows)]

        for i in range(rows):

            for j in range(cols):

                diff[i][j] = onesRow[i] + onesCol[j] - zerosRow[i] - zerosCol[j]

        return diff

"
J6ZzDJHG,Bridgetown ruby component error,ReinisI,Ruby,Thursday 14th of December 2023 02:03:31 AM CDT,"```navbar.rb
class Shared::Navbar < Bridgetown::Component
  def initialize(metadata:, resource:, links: site.data.nav)
    @metadata, @resource, @links = metadata, resource, links
  end
end
```

```navbar.erb
<nav>
  <ul>
    <% links do |link| %>
        <li><%= link_to link.title, link.url %></li>
    <% end %>
  </ul>
</nav>
```

```nav.yml
- title: Home
  url: /
- title: About
  url: /about
- title: Posts
  url: /posts
```

```ERROR
Exception raised: NoMethodError
undefined method `data' for nil:NilClass 
1: /home/reinis/Documents/Sites/Playground/bridgetown/erb-test/src/_components/shared/navbar.rb:
2:in `initialize'
```"
nmXnGTEK,Loops in Python,Priyasadik,Python,Thursday 14th of December 2023 02:02:08 AM CDT,"fruits = [""apple"", ""banana"", ""cherry""]
for fruit in fruits:
    print(fruit)
# Outputs:
# apple
# banana
# cherry

for i in range(5):
    print(i)
# Outputs: 0 1 2 3 4

count = 0
while count < 5:
    print(count)
    count += 1
# Outputs: 0 1 2 3 4

i = 0
while i < 10:
    i += 1
    if i == 3:
        continue  # Skips printing 3
    if i == 7:
        break  # Stops the loop at 7
    print(i)
# Outputs: 1 2 4 5 6

person = {""name"": ""Alice"", ""age"": 30, ""city"": ""New York""}

for key, value in person.items():
    print(key, "":"", value)
# Outputs:
# name : Alice
# age : 30
# city : New York"
Xq3q5Udz,If Else Python,Priyasadik,Python,Thursday 14th of December 2023 02:00:43 AM CDT,"x = 10 
if x > 10:
    print(""x is greater than 10"")
elif x == 10:
    print(""x is equal to 10"")
else:
    print(""x is less than 10"")"
06AzKnbA,string in python,Priyasadik,Python,Thursday 14th of December 2023 01:51:28 AM CDT,"single_quoted = 'Hello, World!'
double_quoted = ""Python Programming""
triple_quoted = '''This is a 
multiline string'''

str1 = ""Hello""
str2 = ""World""
concatenated = str1 + "", "" + str2 + ""!""
print(concatenated)  # Outputs: Hello, World!

message = ""Python""
print(message[0])  # Outputs: P (Accessing first character)
print(message[-1])  # Outputs: n (Accessing last character)

print(message[2:5])  # Outputs: thon (Slicing from index 2 to 4)
print(message[:4])  # Outputs: Pyth (Slicing from start to index 3)
print(message[2:])  # Outputs: thon (Slicing from index 2 to end)

print(len(message))  # Outputs: 6 (Length of the string)

text = ""   Python Programming   ""
print(text.upper())  # Outputs: ""   PYTHON PROGRAMMING   ""
print(text.strip())  # Outputs: ""Python Programming"" (Removes leading/trailing whitespace)
print(text.replace(""Python"", ""CSharp""))  # Outputs: ""   CSharp Programming   ""
print(text.find(""Programming""))  # Outputs: 8 (Returns the index of the substring)

name = ""Alice""
age = 30
print(f""My name is {name} and I am {age} years old."")  # Using f-string
print(""My name is {}, and I am {} years old."".format(name, age))  # Using format() method"
7K8XZFYW,curs 11 fibonacii pe fuga,visoft,C,Thursday 14th of December 2023 01:48:49 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

// f(i) = f(i-1) + f(i-2)

unsigned long nr_apel_rec = 0;

int fibo_rec(int i){
    int f1, f2;
    nr_apel_rec++;
    if(i <= 0){
        return 0;
    }
    if (i <= 1){
        return 1;
    }
    f1 = fibo_rec(i-1);
    f2 = fibo_rec(i-2);
    return f1 + f2;
}



double fibo_algebric(int i){

    double phi = (1+sqrt(5))/2;
    double psi = (1-sqrt(5))/2;
    double rez = (pow(phi, i) + pow(psi ,i)) / sqrt(5);
    int rez_int = round(rez);
    return rez;

}


int main()
{
    printf(""Hello world!\n"");
    nr_apel_rec = 0;
    int n = 21;
    int f = fibo_rec(n);
    printf(""%d   apeluri: %ld\n"", f, nr_apel_rec);

    double f1 = fibo_algebric(n);
    printf(""%f \n"", f1);

    return 0;
}
"
yC0bb4m5,Advent of code 2023 day 14,hhoppe,Python,Thursday 14th of December 2023 01:05:59 AM CDT,"@numba.njit  # numba decorator is optional; ~4x speedup.
def day14_slide_left(grid):
  for row in grid:
    open = -1
    for x, ch in enumerate(row):
      if ch == '.':
        if open < 0:
          open = x
      elif ch == '#':
        open = -1
      elif open >= 0:  # (ch == 'O').
        row[open], row[x] = 'O', '.'
        open += 1


def day14(s, *, part2=False):
  grid = np.rot90(np.array([list(line) for line in s.splitlines()]))  # North is left.

  if not part2:
    day14_slide_left(grid)

  else:
    remaining = 1_000_000_000
    configs: dict[Any, int] = {}  # hashed_grid -> index.
    period = -1
    for index in itertools.count():
      if period < 0:
        if (prev_index := configs.setdefault(grid.tobytes(), index)) != index:
          period = index - prev_index
          remaining %= period
          print(f'At {index=}, found cycle with {period=}; now {remaining=}.')
      if remaining == 0:
        break
      for _ in range(4):
        day14_slide_left(grid)
        grid = np.rot90(grid, -1)
      remaining -= 1

  return sum(len(grid[0]) - x for (_, x), ch in np.ndenumerate(grid) if ch == 'O')"
PNwa4v6Y,Palindrome Python,IMustRemainUnknown,Python,Thursday 14th of December 2023 12:25:58 AM CDT,"exit_word = ""imUnknown""

while True:
    my_text = input(""Word: "")
    splitted = my_text.split(' ')

    my_text = """".join(splitted)

    left = """"
    right = """"

    for i in range(int(len(my_text)/2)):
        left = my_text[i].lower()
        right = my_text[-(i+1)].lower()

        if left != right:
            print(my_text, ""is not palindrome"")
            break
    else:
        print(my_text, ""is a palindrome word"")

    if my_text == exit_word:
        break
    else:
        print(""------------------------------------------------"")



"
ZhLLHbKw,Miical's code,Miical,Python,Thursday 14th of December 2023 12:24:47 AM CDT,"
from typing import Any
from .pyxspcomm import *
import sys

# PinBind
PinBind__old__setattr__ = PinBind.__setattr__
def PinBind__setattr__(self: PinBind, name, value):
    if name != ""value"":
        return PinBind__old__setattr__(self, name, value)
    return self.Set(value)

PinBind.__setattr__ = PinBind__setattr__


# XData
XData_old__init__ = XData.__init__
def XData__init__(self: XData, width: int, direction = XData.In, raw_args = None):
    if raw_args is not None:
        return XData_old__init__(self, *(width, direction, *raw_args))
    return XData_old__init__(self, width, direction)

def XData__str__(self: XData):
    return f""XData(width={self.mWidth}, value=0x{self.String()})""

XData_old__setattr__ = XData.__setattr__
def XData__setattr__(self: XData, name, value):
    if name != ""value"":
        return XData_old__setattr__(self, name, value)
    if type(value) is bool:
        return self.Set(1 if value else 0)
    if type(value) is int:
        if value.bit_length() <= 64:
            return self.Set(value)
        self.SetVU8(value.to_bytes((value.bit_length() + 7) // 8, byteorder='little'))
    else:
        return self.Set(value)

XData_old__getattribute__ = XData.__getattribute__
def XData__getattribute__(self: XData, name):
    if name != ""value"":
        return XData_old__getattribute__(self, name)
    if self.W() <= 64:
        return self.U()
    return int.from_bytes(self.GetVU8(), 'little')

def XData__getitem__(self: XData, key):
    return self.At(key).AsInt32()

def XData__setitem__(self: XData, key, value):
    self.At(key).Set(value)

XData.__init__ = XData__init__
XData.__str__ = XData__str__
XData.__setattr__ = XData__setattr__
XData.__getattribute__ = XData__getattribute__
XData.__getitem__ = XData__getitem__
XData.__setitem__ = XData__setitem__

# XPort
XPort_old__init__ = XPort.__init__
def XPort__init__(self: XPort, prefix = """"):
    return XPort_old__init__(self, prefix)

def XPort__str__(self: XPort):
    return f""XPort(prefix={self.prefix}, size={self.PortCount()})""

def XPort__getitem__(self: XPort, key):
    return self.Get(key)

def XPort__setitem__(self: XPort, key, value):
    self.At(key).Set(value)


XPort.__init__ = XPort__init__
XPort.__str__ = XPort__str__
XPort.__getitem__ = XPort__getitem__
XPort.__setitem__ = XPort__setitem__

# XClock
class xclock_cb_step(cb_int_bool):
    """"""XClock step call back""""""
    def __init__(self, func):
        cb_int_bool.__init__(self)
        self.func = func
    def call(self, dump: bool):
        return self.func(dump)

class xclock_cb_step_rf(cb_void_u64_voidp):
    """"""XClock step Ris/Fal call back""""""
    def __init__(self, func, args, kwargs):
        cb_void_u64_voidp.__init__(self)
        self.func = func
        self.args = args
        self.kwargs = kwargs
    def call(self, cycle: int, args=None):
        return self.func(cycle, *self.args, **self.kwargs)

import asyncio
XClock_old_init__ = XClock.__init__
def XClock__init__(self, step_func):
    self._step_event = asyncio.Event()
    self._step_event.clear()
    fc = xclock_cb_step(step_func)
    fc.set_force_callable()
    return XClock_old_init__(self, fc.__disown__())

XClock.__init__ = XClock__init__

def XClock__getEvent(self):
    return self._step_event

XClock.getEvent = XClock__getEvent

XClock_old_StepRis = XClock.StepRis
XClock_old_StepFal = XClock.StepFal
def XClock_StepRis(self, call_back, args=(), kwargs={}):
    fc = xclock_cb_step_rf(call_back, args, kwargs)
    fc.set_force_callable()
    return XClock_old_StepRis(self, fc.__disown__(), None, call_back.__name__)

def XClock_StepFal(self, call_back, args=(), kwargs={}):
    fc = xclock_cb_step_rf(call_back, args, kwargs)
    fc.set_force_callable()
    return XClock_old_StepFal(self, fc.__disown__(), None, call_back.__name__)

XClock.StepRis = XClock_StepRis
XClock.StepFal = XClock_StepFal

XClock__old_Step = XClock.Step
def XClock_Step(self, cycle: int):
    for i in range(cycle):
        XClock__old_Step(self, 1)
        self._step_event.set()
        self._step_event.clear()

async def XClock_AStep(self, cycle: int):
    for i in range(cycle):
        await self._step_event.wait()

async def XClock_ACondition(self, condition):
    assert callable(condition), ""condition must be callable""
    while not condition():
        await self._step_event.wait()

async def XClock_ANext(self):
    return await self._step_event.wait()

async def XClock_RunStep(self, cycle: int):
    for i in range(cycle):
        XClock_Step(self, 1)
        await asyncio.sleep(0)

XClock.Step = XClock_Step
XClock.AStep = XClock_AStep
XClock.ACondition = XClock_ACondition
XClock.ANext =XClock_ANext
XClock.RunStep = XClock_RunStep

class XPin:
    def __init__(self, xdata, event):
        self.xdata = xdata
        self.event = event

    def getXData(self):
        return self.xdata

    def getEvent(self):
        return self.event

    def __str__(self):
        return f""XPin({self.xdata})""

    def __getattribute__(self, name) -> Any:
        if name != ""event"":
            self.xdata.__getattribute__(name)
        else:
            return self.event

    def __setattr__(self, name, value):
        self.xdata.__setattr__(name, value)

    def __getitem__(self, key):
        return self.xdata[key]

    def __setitem__(self, key, value):
        self.xdata[key] = value


xcomm_version = ""0.0.1""
if xcomm_version != version():
    print(""Warn: python wrapper version(%s) conflict with _pyxcomm.so version(%s)"", xcomm_version, version())

__version__ = version()
"
j8PduqbC,Advent of Code 2023 - Day 14,mgla,C#,Wednesday 13th of December 2023 11:56:44 PM CDT,"var input = File.ReadAllLines(""input.txt"").Select(s => s.ToCharArray()).ToArray();

TiltNorth();

var part1 = 0;

for (var score = input.Length; score > 0; score--)
{
    part1 += input[^score].Count(c => c == 'O') * score;
}

Console.WriteLine($""Part 1: {part1}"");

var cache = new Dictionary<string, int>();
var cycle = 1;

while (cycle <= 1_000_000_000)
{
    TiltNorth();
    TiltWest();
    TiltSouth();
    TiltEast();

    var current = string.Join(string.Empty, input.SelectMany(c => c));

    if (cache.TryGetValue(current, out var cached))
    {
        var remaining = 1_000_000_000 - cycle - 1;
        var loop = cycle - cached;

        var loopRemaining = remaining % loop;
        cycle = 1_000_000_000 - loopRemaining - 1;
    }

    cache[current] = cycle++;
}

var part2 = 0;

for (var score = input.Length; score > 0; score--)
{
    part2 += input[^score].Count(c => c == 'O') * score;
}

Console.WriteLine($""Part 2: {part2}"");
return;

void TiltNorth()
{
    for (var row = 1; row < input.Length; row++)
    {
        for (var col = 0; col < input[row].Length; col++)
        {
            var c = input[row][col];

            if (c != 'O')
            {
                continue;
            }

            var previous = 1;
            while (input[row - previous][col] == '.')
            {
                input[row - previous][col] = 'O';
                input[row - previous + 1][col] = '.';
                previous++;

                if (row - previous < 0)
                {
                    break;
                }
            }
        }
    }
}

void TiltSouth()
{
    for (var row = input.Length - 2; row >= 0; row--)
    {
        for (var col = 0; col < input[row].Length; col++)
        {
            var c = input[row][col];

            if (c != 'O')
            {
                continue;
            }

            var previous = 1;
            while (input[row + previous][col] == '.')
            {
                input[row + previous][col] = 'O';
                input[row + previous - 1][col] = '.';
                previous++;

                if (row + previous >= input.Length)
                {
                    break;
                }
            }
        }
    }
}

void TiltWest()
{
    for (var row = 0; row < input.Length; row++)
    {
        for (var col = 1; col < input[row].Length; col++)
        {
            var c = input[row][col];

            if (c != 'O')
            {
                continue;
            }

            var previous = 1;
            while (input[row][col - previous] == '.')
            {
                input[row][col - previous] = 'O';
                input[row][col - previous + 1] = '.';
                previous++;

                if (col - previous < 0)
                {
                    break;
                }
            }
        }
    }
}

void TiltEast()
{
    for (var row = 0; row < input.Length; row++)
    {
        for (var col = input[row].Length - 2; col >= 0; col--)
        {
            var c = input[row][col];

            if (c != 'O')
            {
                continue;
            }

            var previous = 1;
            while (input[row][col + previous] == '.')
            {
                input[row][col + previous] = 'O';
                input[row][col + previous - 1] = '.';
                previous++;

                if (col + previous >= input[row].Length)
                {
                    break;
                }
            }
        }
    }
}"
KAVYF0WE,Taiko Active Provers,dCodex21,JavaScript,Wednesday 13th of December 2023 11:30:33 PM CDT,"http://128.199.9.128:9876,http://ttko.web3cript.xyz:9876,http://148.251.232.183:9876,http://5.189.173.184:9876,https://taiko-a5-prover.zkpool.io,http://107.167.95.10:9876,http://31.220.93.48:9876,http://109.123.255.248:9876,http://158.220.119.160:9876,http://taiko-a5-prover-simple.zkpool.io,http://88.198.62.61:9876,http://207.182.130.26:9876,http://prover.taiko.lovan.com.ar:9876,http://194.163.178.64:9876"
uhVqfDtM,CMDER.ahk,Najeebsk,Autohotkey,Wednesday 13th of December 2023 10:32:56 PM CDT,";#Warn
#NoEnv
#SingleInstance, Force
SetWorkingDir %A_ScriptDir%
global winTitle
winTitle := ""ahk_class ConsoleWindowClass""
Gui, -DPIScale
Gui,Font,s12 CYellow,Lucida Console
Gui,Color,Black, Black
;--------------------------
List =
(Ltrim Join|
BOOKS\CHANNELS.txt
BOOKS\CMD.txt
BOOKS\COM.txt
BOOKS\DOSKEY.ahk
BOOKS\F.txt
BOOKS\FFMPEG.txt
BOOKS\FOLDER.txt
BOOKS\HELP.txt
BOOKS\I.txt
BOOKS\MAGICK.txt
BOOKS\MOVIES.txt
BOOKS\N.txt
YOUTUBE\BOOKS\NIRCMD.txt
BOOKS\R.txt
BOOKS\RAR.txt
BOOKS\SEARCH-TEXT.au3
BOOKS\SEARCH.txt
BOOKS\SOFTWARES.ahk
BOOKS\W.txt
BOOKS\WEB.txt
BOOKS\WGET.txt
BOOKS\WHERE.txt
BOOKS\WMIC.txt
BOOKS\Y.txt
BOOKS\YOUTUBE.txt
)
Gui,Font,s12 CYellow,Lucida Console
Gui,Color,Black, Black
Gui, Add, DropDownList, x10 y10 vFilePath gCMD2 w800, % List
Gui, Add, DropDownList, x10 y40 vCmdDropdown gCMD w800
Gui, Add, Edit, vCmdEdit x10 y80 w800 h60
Gui, Add, Button, x10 y160 Default, Run Command
Gui, Add, Button, x160 y160 gREF,REFRESH
; Add your predefined commands to the dropdown list
;Commands := ""dir|ipconfig|ping|netstat|systeminfo|notepad""
    
Gui, Show, w820 h200 , NAJEEB CMD Command Runner

GuiDropFiles:
Loop, parse, A_GuiEvent, `n
   GuiControl,,FilePath,%A_LoopField%
return
CMD2:
    Gui, Submit, NoHide
    GuiControl, -Redraw, CmdDropdown ; Clear the dropdown list
    
    FileRead, Commands, %FilePath%
    Loop, Parse, Commands, `n, `r
    {
        GuiControl,, CmdDropdown, %A_LoopField%
    }
    
    GuiControl, +Redraw, CmdDropdown ; Redraw the dropdown list
return
GuiClose:
ExitApp
CMD:
Gui, Submit, NoHide
GuiControl,,CmdEdit, %CmdDropdown% ; Clear the dropdown list
return  

ButtonRunCommand:
    Gui, Submit, NoHide
    SelectedCmd := CmdEdit       ;CmdDropdown

    if (SelectedCmd != """") {
        ; Run the CMD command
        RunWait, %ComSpec% /c %SelectedCmd%, , Hide
    }
return
REF:
    Gui, Submit, NoHide
Reload
return
;============ END SCRIPT ==============
#R::Reload
#S::Suspend
#P::Pause
#ESC::ExitApp"
