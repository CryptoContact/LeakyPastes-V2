id,title,username,language,date,content
LtzhkDBq,testing-alert,zombiesByte,JavaScript,Wednesday 10th of April 2024 07:04:36 AM CDT,alert('frompastebin');
6QtQ78rM,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Wednesday 10th of April 2024 06:41:12 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_304805.pdf

Working as of:
10 April 2024"
Yvz6zvpD,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,x2w,GetText,Wednesday 10th of April 2024 06:36:54 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing

Working as of:
10 April 2024"
a5DP5sLK,target_practice.lua,opencomputerstest2,Lua,Wednesday 10th of April 2024 06:14:38 AM CDT,"local m = peripheral.find(""monitor"")
local hits = {}

m.setTextScale(1)

local function getHit()
	local ret
	repeat
		os.pullEvent(""redstone"")
		ret = rs.getAnalogInput(""right"")
	until ret ~= 0
	return ret
end

local function avg(t)
  local sum=0
  for k,v in pairs(t) do
      sum = sum + v
  end
  return (sum / #t)
end
	
while true do
	local lastHit = getHit()
	table.insert(hits,lastHit)
	m.clear()
	m.setCursorPos(1,1)
	m.write(lastHit)
	m.setCursorPos(1,2)
	m.write(avg(hits))
end"
RArErGcx,data892,TestGuy1,JSON,Wednesday 10th of April 2024 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3104989d96418ed7ce0f1d0f697c9e41728e38e9e969802634ad3d4d407174cc28d6f36d84393749803e33e5224ac0450290a28d79bfe3541cede24be351f944fa8702ee5ab9044c7cac9f4ac7e8eaa36d1eb868d5a1ce844a363f0e29feeef9dc5659188ac4e5f7df6ceae68fdb14127f7a5014439820c76f9c1c85891f96c3',
  otherdata: [
    '1d7d93afcf7d2d84fb870128cc4c4ea0',
    '495c56c403044c7928c7108618bfa0cc',
    '35647c49c23f1d14d6592b9af62de2c1',
    '35562a6004b761c018b0c51af25f4397',
    '5906ff27500c2a9b755b7d3e2397760b',
    '1bcb3f223cfd26fc2929656cc2fd0c3a',
    'a0b32e2e6c795011951a800b78f93da4',
    '06c36e2979c409c1d8b5b68c2b276973'
  ]
}"
VxCfxRG9,Mad,Unknown_No_1,PHP,Wednesday 10th of April 2024 05:54:24 AM CDT,EidMubarakToEveryOne
YwFNuax7,Roblox Player List and Server Info,scriptingtales,Lua,Wednesday 10th of April 2024 05:03:53 AM CDT,"Part0 = Instance.new(""Part"")
SurfaceGui1 = Instance.new(""SurfaceGui"")
TextLabel2 = Instance.new(""TextLabel"")
ScrollingFrame3 = Instance.new(""ScrollingFrame"")
UIListLayout4 = Instance.new(""UIListLayout"")
TextLabel5 = Instance.new(""TextLabel"")
ImageLabel6 = Instance.new(""ImageLabel"")
TextLabel7 = Instance.new(""TextLabel"")
TextLabel8 = Instance.new(""TextLabel"")
TextLabel9 = Instance.new(""TextLabel"")
Frame10 = Instance.new(""Frame"")
TextLabel11 = Instance.new(""TextLabel"")
CreditsLabel = Instance.new(""TextLabel"")


Part0.Name = ""LocInfo""
Part0.Parent = script
Part0.CFrame = CFrame.new(-9.5, 13, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part0.Position = Vector3.new(0, 13, 25)
Part0.Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
Part0.Size = Vector3.new(35, 26, 0.10000000149011612)
Part0.Anchored = true
Part0.BottomSurface = Enum.SurfaceType.Smooth
Part0.BrickColor = BrickColor.new(""Really black"")
Part0.TopSurface = Enum.SurfaceType.Smooth
Part0.brickColor = BrickColor.new(""Really black"")
SurfaceGui1.Name = ""Info""
SurfaceGui1.Parent = Part0
SurfaceGui1.ClipsDescendants = true
SurfaceGui1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
SurfaceGui1.MaxDistance = 1000
TextLabel2.Name = ""Players""
TextLabel2.Parent = SurfaceGui1
TextLabel2.Position = UDim2.new(0, 25, 0, 20)
TextLabel2.Size = UDim2.new(0, 672, 0, 83)
TextLabel2.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel2.BackgroundTransparency = 1
TextLabel2.BorderColor = BrickColor.new(""Really black"")
TextLabel2.BorderColor3 = Color3.new(0, 0, 0)
TextLabel2.BorderSizePixel = 0
TextLabel2.Font = Enum.Font.GothamBold
TextLabel2.FontSize = Enum.FontSize.Size14
TextLabel2.Text = ""Players""
TextLabel2.TextColor = BrickColor.new(""Institutional white"")
TextLabel2.TextColor3 = Color3.new(1, 1, 1)
TextLabel2.TextScaled = true
TextLabel2.TextSize = 14
TextLabel2.TextWrap = true
TextLabel2.TextWrapped = true
ScrollingFrame3.Name = ""MainFrame""
ScrollingFrame3.Parent = SurfaceGui1
ScrollingFrame3.Position = UDim2.new(0, 0, 0, 125)
ScrollingFrame3.Size = UDim2.new(0, 725, 0, 1300)
ScrollingFrame3.Active = true
ScrollingFrame3.BackgroundColor = BrickColor.new(""Earth green"")
ScrollingFrame3.BackgroundColor3 = Color3.new(0.215686, 0.215686, 0.215686)
ScrollingFrame3.BorderColor = BrickColor.new(""Really black"")
ScrollingFrame3.BorderColor3 = Color3.new(0, 0, 0)
ScrollingFrame3.BorderSizePixel = 0
UIListLayout4.Parent = ScrollingFrame3
UIListLayout4.HorizontalAlignment = Enum.HorizontalAlignment.Right
UIListLayout4.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout4.Padding = UDim.new(0, 25)
TextLabel5.Name = ""MAINLB""
TextLabel5.Position = UDim2.new(0.206896558, 0, 0, 0)
TextLabel5.Size = UDim2.new(0, 575, 0, 150)
TextLabel5.BackgroundColor = BrickColor.new(""Really black"")
TextLabel5.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel5.BackgroundTransparency = 0.5
TextLabel5.BorderColor = BrickColor.new(""Crimson"")
TextLabel5.BorderColor3 = Color3.new(0.666667, 0, 0)
TextLabel5.BorderSizePixel = 0
TextLabel5.Font = Enum.Font.GothamBold
TextLabel5.FontSize = Enum.FontSize.Size18
TextLabel5.Text = ""Player1""
TextLabel5.TextColor = BrickColor.new(""Institutional white"")
TextLabel5.TextColor3 = Color3.new(1, 1, 1)
TextLabel5.TextScaled = true
TextLabel5.TextSize = 15
TextLabel5.TextStrokeColor3 = Color3.new(1, 1, 1)
TextLabel5.TextWrap = true
TextLabel5.TextWrapped = true
TextLabel5.TextYAlignment = Enum.TextYAlignment.Top
ImageLabel6.Name = ""Headshot""
ImageLabel6.Parent = TextLabel5
ImageLabel6.Position = UDim2.new(0, -150, 0, 0)
ImageLabel6.Size = UDim2.new(0, 150, 0, 150)
ImageLabel6.BackgroundColor = BrickColor.new(""Institutional white"")
ImageLabel6.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel6.BorderColor = BrickColor.new(""Really black"")
ImageLabel6.BorderColor3 = Color3.new(0, 0, 0)
ImageLabel6.BorderSizePixel = 0
ImageLabel6.Image = ""rbxasset://textures/ui/GuiImagePlaceholder.png""
TextLabel7.Name = ""Country""
TextLabel7.Parent = TextLabel5
TextLabel7.Position = UDim2.new(0.0142667573, 0, 0.690058112, 0)
TextLabel7.Size = UDim2.new(0.546202123, 0, 0.304063827, 0)
TextLabel7.BackgroundColor = BrickColor.new(""Really black"")
TextLabel7.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel7.BackgroundTransparency = 1
TextLabel7.BorderColor = BrickColor.new(""Crimson"")
TextLabel7.BorderColor3 = Color3.new(0.666667, 0, 0)
TextLabel7.BorderSizePixel = 0
TextLabel7.Font = Enum.Font.GothamBold
TextLabel7.FontSize = Enum.FontSize.Size14
TextLabel7.Text = ""[KR] Krakozhia""
TextLabel7.TextColor = BrickColor.new(""Institutional white"")
TextLabel7.TextColor3 = Color3.new(1, 1, 1)
TextLabel7.TextScaled = true
TextLabel7.TextSize = 14
TextLabel7.TextStrokeColor3 = Color3.new(1, 1, 1)
TextLabel7.TextWrap = true
TextLabel7.TextWrapped = true
TextLabel8.Name = ""Ping""
TextLabel8.Parent = TextLabel5
TextLabel8.Position = UDim2.new(0.560468912, 0, 0.690058172, 0)
TextLabel8.Size = UDim2.new(0.426111728, 0, 0.304063857, 0)
TextLabel8.BackgroundColor = BrickColor.new(""Really black"")
TextLabel8.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel8.BackgroundTransparency = 1
TextLabel8.BorderColor = BrickColor.new(""Crimson"")
TextLabel8.BorderColor3 = Color3.new(0.666667, 0, 0)
TextLabel8.BorderSizePixel = 0
TextLabel8.Font = Enum.Font.GothamBold
TextLabel8.FontSize = Enum.FontSize.Size14
TextLabel8.Text = ""NaN ms""
TextLabel8.TextColor = BrickColor.new(""Institutional white"")
TextLabel8.TextColor3 = Color3.new(1, 1, 1)
TextLabel8.TextScaled = true
TextLabel8.TextSize = 14
TextLabel8.TextStrokeColor3 = Color3.new(1, 1, 1)
TextLabel8.TextWrap = true
TextLabel8.TextWrapped = true
TextLabel9.Name = ""ServerInfo""
TextLabel9.Parent = SurfaceGui1
TextLabel9.Position = UDim2.new(0, 725, 0, 0)
TextLabel9.Size = UDim2.new(0, 1025, 0, 125)
TextLabel9.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel9.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel9.BackgroundTransparency = 1
TextLabel9.BorderColor = BrickColor.new(""Really black"")
TextLabel9.BorderColor3 = Color3.new(0, 0, 0)
TextLabel9.BorderSizePixel = 0
TextLabel9.Font = Enum.Font.GothamBold
TextLabel9.FontSize = Enum.FontSize.Size14
TextLabel9.Text = ""Server Info""
TextLabel9.TextColor = BrickColor.new(""Institutional white"")
TextLabel9.TextColor3 = Color3.new(1, 1, 1)
TextLabel9.TextScaled = true
TextLabel9.TextSize = 14
TextLabel9.TextWrap = true
TextLabel9.TextWrapped = true
Frame10.Name = ""InfoGDisplayer""
Frame10.Parent = SurfaceGui1
Frame10.Position = UDim2.new(0, 725, 0, 125)
Frame10.Size = UDim2.new(0, 1025, 0, 1175)
Frame10.BackgroundColor = BrickColor.new(""Medium brown"")
Frame10.BackgroundColor3 = Color3.new(0.235294, 0.235294, 0.235294)
Frame10.BorderColor = BrickColor.new(""Really black"")
Frame10.BorderColor3 = Color3.new(0, 0, 0)
Frame10.BorderSizePixel = 0
TextLabel11.Name = ""ServerLocation""
TextLabel11.Parent = Frame10
TextLabel11.Position = UDim2.new(0, 0, 0, 0)
TextLabel11.Size = UDim2.new(0, 1025, 0, 1175)
TextLabel11.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel11.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel11.BackgroundTransparency = 1
TextLabel11.BorderColor = BrickColor.new(""Really black"")
TextLabel11.BorderColor3 = Color3.new(0, 0, 0)
TextLabel11.BorderSizePixel = 0
TextLabel11.Font = Enum.Font.SourceSans
TextLabel11.FontSize = Enum.FontSize.Size60
TextLabel11.Text = """"
TextLabel11.TextColor = BrickColor.new(""Institutional white"")
TextLabel11.TextColor3 = Color3.new(1, 1, 1)
TextLabel11.TextSize = 60
TextLabel11.TextWrap = true
TextLabel11.TextWrapped = true
TextLabel11.TextXAlignment = Enum.TextXAlignment.Left
CreditsLabel.Name = ""Credits""
CreditsLabel.Position = UDim2.new(0, 625, 0, 1100)
CreditsLabel.Parent = Frame10
CreditsLabel.Size = UDim2.new(0, 400, 0, 75)
CreditsLabel.BackgroundTransparency = 1
CreditsLabel.Font = Enum.Font.GothamMedium
CreditsLabel.Text = ""Credits to Kaiji#7888""
CreditsLabel.TextColor3 = Color3.fromRGB(122, 122, 122)
CreditsLabel.TextScaled = true
CreditsLabel.FontFace.Style = Enum.FontStyle.Italic

SurfaceGui1.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud



local HttpDoServicio = game:GetService(""HttpService"")



local success, result = pcall(function()
	return HttpDoServicio:GetAsync(""http://country.io/names.json"")
end)

if success and result then
	Countries = HttpDoServicio:JSONDecode(result)
end


local url = ""http://ip-api.com/json/""


local getasyncinfo = HttpDoServicio:GetAsync(url)
local decodedinfo = HttpDoServicio:JSONDecode(getasyncinfo)




TextLabel11.Text = ""Server Details""..""\n\n""
	..""Location: ""..decodedinfo[""country""]..""\n""
	..""Country Code: ""..decodedinfo[""countryCode""]..""\n""
	..""Region: ""..decodedinfo[""region""]..""\n""
	..""Region Name: ""..decodedinfo[""regionName""]..""\n""
	..""Timezone: ""..decodedinfo[""timezone""]..""\n\n""
	..""City: ""..decodedinfo[""city""]..""\n""
	..""Zip Code: ""..decodedinfo[""zip""]..""\n\n""
	..""Latitude: ""..decodedinfo[""lat""]..""\n""
	..""Longitude: ""..decodedinfo[""lon""]..""\n\n""
	..""ISP: ""..decodedinfo[""isp""]..""\n""
	..""Autonomous System: ""..decodedinfo[""as""]..""\n""
	..""Query: ""..decodedinfo[""query""]..""\n""




while true do
	for i,plr:Player in ipairs(game.Players:GetChildren()) do
		local LocalizationService = game:GetService(""LocalizationService"")
		local Players = game:GetService(""Players"")
		
		local clone = TextLabel5:Clone()
		clone.Name = 'CloneTemplate'
		clone.Parent = ScrollingFrame3
		task.wait()
		clone.LayoutOrder = i
		clone.Visible = true
		clone.Text = plr.Name

		local success, code = pcall(LocalizationService.GetCountryRegionForPlayerAsync, LocalizationService, plr)
		if success and code then
			clone.Country.Text = ""[""..code..""] ""..tostring(Countries[code]) 
		end
		function roundNumber(num, numDecimalPlaces)
			return tonumber(string.format(""%."" .. (numDecimalPlaces or 0) .. ""f"", num))
		end
		clone.Ping.Text = roundNumber((plr:GetNetworkPing()*1000),1) .."" ms""

		local thumbType = Enum.ThumbnailType.HeadShot
		local thumbSize = Enum.ThumbnailSize.Size420x420
		local content, isReady = Players:GetUserThumbnailAsync(plr.UserId, thumbType, thumbSize)
		clone.Headshot.Image = content

	end
	task.wait(5)
	for _,v in ipairs(ScrollingFrame3:GetChildren()) do
		if v:IsA(""TextLabel"") and v.Name == ""CloneTemplate"" then
			v:Destroy()
		end
	end
end"
hN5y0wwJ,邀您一起看：今夕,xiaomianao666,JavaScript,Wednesday 10th of April 2024 04:42:03 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥今夕@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWwjbm9SZWNvcmRIaXN0b3J5I1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIixcInBhZ2VzXCI6XCJbXVwifSIsInRpdGxlIjoi5LuK5aSVIn0=
nYG3Ft23,stupid lcd,DanielKrastev-bit,Arduino,Wednesday 10th of April 2024 04:19:54 AM CDT,"#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// Set the LCD address to 0x27 for a 16 chars and 2 line display
LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup() {
  // Initialize the LCD with the I2C address and dimensions
  lcd.init();
  // Turn on the backlight (if available on your module)
  lcd.backlight();
  // Print a message to the LCD.
  lcd.print(""Hello, World!"");
}

void loop() {
  // Nothing here for a one-time display
}
"
LqYGKzi0,Untitled,PandaGreen,C#,Wednesday 10th of April 2024 04:13:38 AM CDT,"using System;
using System.IO;
using System.Text;

namespace itProger {
    class Program {
        static void Main(string[] args) {
            string file_name = @""text.txt"";
            string words = ""Some new information"";

            FileStream fs = File.Open(file_name, FileMode.Create);
            byte[] writeStrByte = Encoding.Default.GetBytes(words);

            fs.Write(writeStrByte, 0, writeStrByte.Length);

            fs.Position = 0;
            
			//Вот здесь не понимаю зачем нужен ещё один массив
            byte[] readStrByte = new byte[writeStrByte.Length];
			// Зачем создавать ещё один байтовый массив? В консоли проверял, результат один и тот же
            for (int i = 0; i < writeStrByte.Length; i++)
                readStrByte[i] = (byte)fs.ReadByte();
            
            Console.WriteLine(Encoding.Default.GetString(readStrByte));

            fs.Close();

            Console.ReadKey();
        }

    }
}"
s9H6P1aY,SGD format v001,plirof2,JavaScript,Wednesday 10th of April 2024 04:03:27 AM CDT,"I have a DOS ascii text database file with the specification I give below. Each line is one record.
Can you make me a PHP script that reads a file,speperates fields and prints them on screen?
The current database format is:

Field        Start Length  Notes

Name             1     36
Year            38      4  Year-2000 compliant :-)
Publisher       43     36
Memory          80      3  Either one of "" 16"", "" 48"", ""128"", ""4/1"", ""US0"",
                           "" +2"", "" +3"" or ""Pen""
# Players       84      1
Together        86      1  Only 'Y' if > 1 player, space otherwise
Joysticks       88      5  Shrunk leftward, order is 'K12CR' for
                           Kempston, Intf2#1, Intf2#2, Cursor and Redefineable.
PC-Name         94     12  The '.'s are aligned (raw name padded)
Type           107      7
PathIndex      115      3  Index number of the appropriate `GameDir' entry
FileSize       119      7  Is '+' if the size has more than 7 digits
Orig screen    127      1  'Y' if checked, space otherwise
Origin         129      1  ' ' = (unknown)
                           'O' = Original release
                           'R' = Re-release
                           'C' = Compilation release
                           'M' = Magazine conver-tape version
                           'T' = Type-in
                           'H' = Hacked/cracked version
                           'I' = Incomplete version
                           'B' = Buggered/corrupted version
FloppyId       131      4  Marked floppy number, or 0 for harddisk etc.
Emul override  136      2  -1 = none
                           0  = Z80
                           1  = JPP
                           2  = Warajevo
                           3  = X128
                           4  = WSpecEm
                           5  = ZX
                           6  = Spanish
                           7  = ZX-32
                           8  = R80
                           9  = Russian/Shalayev
                           10 = Russian/Yudin
AYSound        139      1  'Y' if checked, space otherwise
MultiLoad      141      1  'Y' if multi-load in both 48K and 128K mode
                           '4' if multi-load only in 48K mode
                           ' ' if not multi-load at all
Language       143      3
Score          147      3  0  = not set
Author         151    100

All fields are seperated with 1 space, each line is exactly 250 characters.
Numerical fields are aligned right, plain text fields are aligned left."
NFvueed2,Venyx Ui Lib,hacimiks,Lua,Wednesday 10th of April 2024 04:01:29 AM CDT,"local library = loadstring(game:HttpGet(""https://raw.githubusercontent.com/aoki0x/UI-Libraries/main/Azure/source.lua"", true))();
local run = game:service(""RunService"");
local runcon;players=game:service(""Players"");
player=players.LocalPlayer;camera=workspace.CurrentCamera;
local uis=game:service(""UserInputService"");
local curc;
local mouse=player:GetMouse();
local toggles={abk=Enum.UserInputType.MouseButton2;iag=false;};local traced={};local tsp=Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2 + 400);local gs=game:GetService(""GuiService""):GetGuiInset();local sc=Vector2.new(camera.ViewportSize.X/2,camera.ViewportSize.Y/2);local mousemoverel = mousemoverel or Input.MoveMouse;local hookfunction = hookfunction or detour_function or replaceclosure;local getnamecallmethod=getnamecallmethod or get_namecall_method;
local combat = library:CreateWindow('Aimbot');
local visuals = library:CreateWindow('Visuals');
visuals:Section('ESP');
visuals:Toggle('Tracers', {location = toggles,flag = ""tracers""})
visuals:Toggle('Name ESP' ,{location = toggles ,flag = ""nESP""});
visuals:Toggle('Box ESP' ,{location = toggles ,flag = ""hESP""});
combat:Section('Aimbot')
combat:Toggle('Aimbot',{location=toggles,flag='aimbot'});
combat:Bind('Aimbot Hotkey', {location=toggles, flag='abk', kbonly=false, default=Enum.UserInputType.MouseButton2},
function(k,b)
    toggles.iag=b;
end);
combat:Dropdown('Aimpart', {location=toggles,flag='abp', list={""Head"",""UpperTorso"",""LowerTorso"",""HumanoidRootPart""}});
combat:Toggle('Draw FOV circle', {location=toggles, flag='showfov'})
combat:Toggle('Filled FOV circle', {location=toggles, flag='filled'})
combat:Slider('FOV', {location=toggles, flag='fov', precise=false, default=50, min=50, max=500});
function createline()
	local a=Drawing.new(""Line"");a.Thickness=1.5;a.Transparency=1;a.Visible=true;a.Color=Color3.fromRGB(0,240,90);
    a.From=tsp;
    return a;
end;
function createname(text)
    local a=Drawing.new(""Text"");a.Transparency=1;a.Visible=true;a.Color=Color3.fromRGB(0,240,90);a.Text=text;a.Size=15;
    return a;   
end;
function createcircle()
    local a=Drawing.new('Circle');a.Transparency=0.3;a.Thickness=1.5;a.Visible=true;a.Color=Color3.fromRGB(0,240,90);a.Filled=false;a.Radius=toggles.fov;
    return a;
end;
function createsquare()
    local a=Drawing.new('Square');a.Transparency=1;a.Thickness=1.5;a.Visible=true;a.Color=Color3.fromRGB(0,240,90);a.Filled=false;
    return a;
end;
curc=createcircle();
function isInTeam(char)
	if player and players:GetPlayerFromCharacter(char) and players:GetPlayerFromCharacter(char).Team and player.Team then
		if player.FriendlyFire.Value then
			return false;
		else
			return (player.Team==players:GetPlayerFromCharacter(char).Team);
		end;	
	end;
end;
local gc = function()
	local nearest = math.huge
	local nearplr;
	for i,v in pairs(players:GetPlayers()) do
		if v ~= player and v.Character and not isInTeam(v.Character) and v.Character:FindFirstChild(toggles.abp) then
			local pos = camera:WorldToScreenPoint(v.Character[toggles.abp].Position)
			local diff = math.sqrt((pos.X - sc.X)^2 + (pos.Y+gs.Y - sc.Y)^2)
			if diff < nearest and diff < toggles.fov then
				nearest=diff;
				nearplr=v;
			end
		end;
	end;
	return nearplr
end;
local getrel = function(x, y)
	local newy;
	local newy;
	if x > sc.X then
		newx = -(sc.X - x)
		newx = newx/5
	else
		newx = x - sc.X
		newx = newx/5
	end;
	if y > sc.Y then
		newy = -(sc.Y - y)
		newy = newy/5
	else
		newy = y - sc.Y
		newy = newy/5
	end;
	return newx, newy
end;

run.Stepped:Connect(function()
    spawn(function()
        for i,v in pairs(players:GetChildren()) do
            if v.Character and v.Character:FindFirstChild(toggles.abp) and (not isInTeam(v.Character)) and (toggles.tracers or toggles.nESP or toggles.hESP) then
                if not traced[v.Name] then
                    traced[v.Name]={v.Character};    
                end;  
                local vector, onScreen= camera:WorldToScreenPoint(v.Character[toggles.abp].Position)
                if toggles.tracers then
                    if traced[v.Name][2] then
                        traced[v.Name][2].Visible=(onScreen and toggles.tracers);traced[v.Name][2].To=Vector2.new(vector.X, vector.Y+gs.Y);	
                    else
                        traced[v.Name][2]=createline();traced[v.Name][2].Visible=(onScreen and toggles.tracers);traced[v.Name][2].To=Vector2.new(vector.X, vector.Y+gs.Y);
                    end;
                end;
                if toggles.nESP then    
                    if traced[v.Name][3] then
                        traced[v.Name][3].Visible=(onScreen and toggles.nESP);traced[v.Name][3].Position=Vector2.new(vector.X, vector.Y+(gs.Y/2));	
                    else
                        traced[v.Name][3]=createname(v.Name);traced[v.Name][3].Visible=(onScreen and toggles.nESP);traced[v.Name][3].Position=Vector2.new(vector.X, vector.Y+(gs.Y/2));
                    end;   
				end;
				if toggles.hESP then
					if traced[v.Name][4] then
                        traced[v.Name][4].Visible=(onScreen and toggles.hESP);traced[v.Name][4].Size=Vector2.new(1400/vector.Z,1400/vector.Z);traced[v.Name][4].Position=Vector2.new((vector.X)-traced[v.Name][4].Size.X/2, (vector.Y+(gs.Y))-traced[v.Name][4].Size.Y/2);
                    else
                        traced[v.Name][4]=createsquare();traced[v.Name][4].Visible=(onScreen and toggles.hESP);traced[v.Name][4].Size=Vector2.new(1400/vector.Z,1400/vector.Z);traced[v.Name][4].Position=Vector2.new((vector.X)-traced[v.Name][4].Size.X/2, (vector.Y+(gs.Y))-traced[v.Name][4].Size.Y/2);
                    end; 
				end		
            else
                if traced[v.Name] then
                    if traced[v.Name][2] then
                        traced[v.Name][2]:Remove();traced[v.Name][2]=nil;
                    end;   
                    if traced[v.Name][3] then
                        traced[v.Name][3]:Remove();traced[v.Name][3]=nil;
					end
					if traced[v.Name][4] then
                        traced[v.Name][4]:Remove();traced[v.Name][4]=nil;
                    end
                end;   
            end;    
        end;       
    end);
    spawn(function()
        if toggles.showfov then
            curc.Visible=true;curc.Position = Vector2.new(mouse.X, mouse.Y+gs.Y);curc.Radius=toggles.fov;
        else
            curc.Visible=false;
        end;    
    end);
    spawn(function()
        if toggles.filled then
            toggles.showfov = true
            curc.Filled = true
        else
            curc.Filled = false
        end 
    end)
    spawn(function()
        if toggles.aimbot and toggles.iag then
            if gc()~=nil and gc().Character:FindFirstChild(toggles.abp) then
                local pos=camera:WorldToScreenPoint(gc().Character[toggles.abp].Position)
                local x,y=getrel(pos.X, pos.Y+gs.Y)
                mousemoverel(x,y)
            end;
        end;    
    end);   
end);    
local fr;
players.PlayerRemoving:Connect(function(p)
    if traced[p.Name] then 
        if traced[p.Name][2] then 
            traced[p.Name][2]:Remove();traced[p.Name][2]=nil;
        end;
        if traced[p.Name][3] then
             traced[p.Name][3]:Remove();traced[p.Name][3]=nil;
            end;
            if traced[p.Name][4] then 
                traced[p.Name][4]:Remove();traced[p.Name][4]=nil;
            end;traced[p.Name]=nil;
        end;
    end);"
s1E8VbFF,partToLua.lua,kll91,Lua,Wednesday 10th of April 2024 03:41:37 AM CDT,"local PropertyToString = loadstring(game:HttpGet(""https://pastebin.com/raw/CBPpjFnE""))()
local API = loadstring(game:HttpGet(""https://pastebin.com/raw/jR005R6m""))()

local apiFetched = false
local function partToLua(part)
	local selectedItem = part
	local awaitReference = {}
	local defaultObjects = {}
	setmetatable(defaultObjects, {
		__index = function(self, index)
			local b = {'TouchTransmitter'}
			local obj = Instance.new(index)
			rawset(defaultObjects, index, obj)
			return obj
		end;
	})
	if (not apiFetched) then
		apiFetched = true
		local success, returnVal = pcall(function()
			return API:Fetch()
		end)
		if ((not success) or (not returnVal)) then
			apiFetched = false
			return
		end
	end
	local codeBuilder = {}
	codeBuilder[#codeBuilder + 1] = ""local partsWithId = {}\nlocal awaitRef = {}\n\nlocal root = ""
	local ref = {}
	local idCount = 0
	local objectIds = {}
	local function GetProperties(obj)
		local properties = {}
		print(obj, obj.ClassName)
		local default = defaultObjects[obj.ClassName]
		local class = API.ClassesByName[obj.ClassName]
		for propName,propInfo in pairs(class:GetAllProperties(true)) do
			if ((not propInfo.ReadOnly) and (not propInfo.Hidden) and propName ~= ""Parent"") then
				local val = obj[propName]
				if (default[propName] ~= val) then
					local valStr, isRef = PropertyToString(propInfo.ValueType, val, propName)
					if (isRef) then
						properties[propName] = (""\""_R:%s_\""""):format(objectIds[val] or ""E"")
					else
						properties[propName] = valStr
					end
				end
			end
		end
		return properties
	end
	local function Scan(obj, indentLvl)
		local b = {'TouchTransmitter'}
		if table.find(b,obj.ClassName) then return end
		local indent = (""\t""):rep(indentLvl)
		if (indentLvl ~= 0) then
			codeBuilder[#codeBuilder + 1] = ""\n"" .. indent
		end
		codeBuilder[#codeBuilder + 1] = ""{\n"" .. indent .. ""\tID = "" .. objectIds[obj] .. "";\n"" .. indent .. ""\tType = \"""" .. obj.ClassName .. ""\"";\n"" .. indent .. ""\tProperties = {""
		local props = GetProperties(obj)
		if (next(props)) then
			for propName,propVal in pairs(props) do
				codeBuilder[#codeBuilder + 1] = ""\n"" .. indent .. ""\t\t"" .. propName .. "" = "" .. propVal .. "";""
			end
			codeBuilder[#codeBuilder + 1] = ""\n"" .. indent .. ""\t};""
		else
			codeBuilder[#codeBuilder + 1] = ""};""
		end
		local children = obj:GetChildren()
		if (#children > 0) then
			codeBuilder[#codeBuilder + 1] = ""\n"" .. indent .. ""\tChildren = {""
			for _,child in pairs(children) do
				Scan(child, indentLvl + 2)
			end
			codeBuilder[#codeBuilder + 1] = ""\n"" .. indent .. ""\t};\n"" .. indent .. ""};""
		else
			codeBuilder[#codeBuilder + 1] = ""\n"" .. indent .. ""\tChildren = {};\n"" .. indent .. ""};""
		end
	end
	objectIds[selectedItem] = idCount
	for _,v in pairs(selectedItem:GetDescendants()) do
		idCount = (idCount + 1)
		objectIds[v] = idCount
	end
	Scan(selectedItem, 0)
	codeBuilder[#codeBuilder + 1] = ""local function Scan(item, parent) local obj = Instance.new(item.Type) if (item.ID) then local awaiting = awaitRef[item.ID] if (awaiting) then awaiting[1][awaiting[2]] = obj awaitRef[item.ID] = nil else partsWithId[item.ID] = obj end end for p,v in pairs(item.Properties) do if (type(v) == \""string\"") then local id = tonumber(v:match(\""^_R:(%w+)_$\"")) if (id) then if (partsWithId[id]) then v = partsWithId[id] else awaitRef[id] = {obj, p} v = nil end end end obj[p] = v end for _,c in pairs(item.Children) do Scan(c, obj) end obj.Parent = parent return obj end\nScan(root, workspace)""
	local source = table.concat(codeBuilder, """")
	print(source)
end
partToLua(...)"
PFzexmP7,Estudantes de Educação Especial por Tipo de Deficiência (2022),rodrigosantosbr,Python,Wednesday 10th of April 2024 03:31:29 AM CDT,"import matplotlib.pyplot as plt

# Categorias em Português
categories_pt = [
    'Deficiência Intelectual', 'Autismo', 'Deficiência Física', 
    'Deficiência Múltipla', 'Baixa Visão', 'Deficiência Auditiva', 
    'Altas Habilidades/Superdotação', 'Surdez', 'Cegueira', 'Surdocegueira'
]
percentages = [51.8, 24.3, 9.0, 4.9, 4.6, 2.3, 1.5, 1.2, 0.4, 0.0]  # Percentuais

# Criando o gráfico de barras com rótulos em português
plt.figure(figsize=(10, 8))
plt.barh(categories_pt[::-1], percentages[::-1], color='purple')
plt.xlabel('Porcentagem')
plt.title('Estudantes de Educação Especial por Tipo de Deficiência')
plt.xlim(0, 55)  # Extendendo o eixo x para ajustar à barra mais longa

# Adicionando o texto com os percentuais nas barras
for i, v in enumerate(percentages[::-1]):
    plt.text(v + 1, i, f""{v}%"", color='black', va='center')

plt.show()
"
jR005R6m,API.lua,kll91,Lua,Wednesday 10th of April 2024 03:25:46 AM CDT,"local API = {}
local API_URL = ""https://anaminus.github.io/rbx/json/api/latest.json""
function FetchAPI()
	local successGetAsync, data = pcall(function()
		return game:HttpGet(API_URL)
	end)
	if (not successGetAsync) then
		warn(""Failed to fetch Roblox API: "" .. tostring(data))
		return
	end
	local successParse, dataArray = pcall(function()
		return game:GetService(""HttpService""):JSONDecode(data)
	end)
	if (not successParse) then
		warn(""Failed to parse Roblox API: "" .. tostring(dataArray))
		return
	end
	return dataArray
end
function BuildClasses(api)
	local classes, classesByName = {}, {}
	local function ApplyTags(item)
		if (item.tags) then
			for i = 1,#item.tags do
				local tag = item.tags[i]
				if (tag:match(""Security$"")) then
					item.Security = tag
				elseif (tag == ""readonly"") then
					item.ReadOnly = true
				elseif (tag == ""hidden"") then
					item.Hidden = true
				elseif (tag == ""notCreatable"") then
					item.NotCreatable = true
				elseif (tag == ""notbrowsable"") then
					item.NotBrowsable = true
				end
			end
		end
	end
	-- Collect all classes:
	for i = 1,#api do
		local item = api[i]
		if (item.type == ""Class"") then
			classes[#classes + 1] = item
			classesByName[item.Name] = item
			item.Subclasses = {}
			item.Properties = {}
			item.Methods = {}
			item.Events = {}
			ApplyTags(item)
			for _,key in pairs{""Properties"", ""Methods"", ""Events""} do
				setmetatable(item[key], {
					__index = function(self, index)
						return item.Superclass and item.Superclass[key][index]
					end;
				})
			end
			function item:GetAllProperties(discludeSecure)
				local properties = {}
				local class = item
				while (class) do
					for propName,propInfo in pairs(class.Properties) do
						if ((not propInfo.Security) or (not discludeSecure)) then
							properties[propName] = propInfo
						end
					end
					class = class.Superclass
				end
				return properties
			end
		end
	end
	-- Reference superclasses:
	for i = 1,#classes do
		local class = classes[i]
		if (class.Superclass) then
			class.Superclass = classesByName[class.Superclass]
			table.insert(class.Superclass.Subclasses, class)
		end
	end
	-- Collect properties, methods, and events:
	for i = 1,#api do
		local item = api[i]
		if (item.type == ""Property"") then
			local class = classesByName[item.Class]
			ApplyTags(item)
			class.Properties[item.Name] = item
		elseif (item.type == ""Function"") then
			local class = classesByName[item.Class]
			ApplyTags(item)
			class.Methods[item.Name] = item
		elseif (item.type == ""Event"") then
			local class = classesByName[item.Class]
			ApplyTags(item)
			class.Events[item.Name] = item
		end
	end
	return classes, classesByName
end
function BuildEnums(api)
	local enums, enumsByName = {}, {}
	-- Collect enums:
	for i = 1,#api do
		local item = api[i]
		if (item.type == ""Enum"") then
			enums[#enums + 1] = item
			enumsByName[item.Name] = item
			item.EnumItems = {}
		end
	end
	-- Collect enum items:
	for i = 1,#api do
		local item = api[i]
		if (item.type == ""EnumItem"") then
			local enum = enumsByName[item.Enum]
			table.insert(enum.EnumItems, item)
		end
	end
	return enums, enumsByName
end
function API:Fetch()
	if (self._fetched) then
		warn(""API already fetched"")
		return
	end
	if (self._fetching) then
		warn(""API is already in the process of being fetched"")
		return
	end
	self._fetching = true
	local api = FetchAPI()
	self._fetching = nil
	if (not api) then return end
	API.Classes, API.ClassesByName = BuildClasses(api)
	API.Enums, API.EnumsByName = BuildEnums(api)
	self._fetched = true
	return true
end
return API"
CBPpjFnE,PropertyToString.lua,kll91,Lua,Wednesday 10th of April 2024 03:20:41 AM CDT,"local PropertyToString
local CONCAT = table.concat
local FLOOR = math.floor
local types = {}
local function GCD(a, b)
	while (b > 0) do
		local _b = b
		b = a % b
		a = _b
	end
	return a
end
local function ColorValue(c)
	c = FLOOR(c * 255)
	if (c == 0) then
		return ""0""
	elseif (c == 255) then
		return ""1""
	end
	local gcd = GCD(c, 255)
	return (c / gcd .. ""/"" .. (255 / gcd))
end
types.Axes = function(value)
	local returnValue = {""Axes.new(""}
	local args = {}
	local props = {""X"", ""Y"", ""Z""}
	for i = 1,#props do
		local prop = props[i]
		if (value[prop]) then
			args[#args + 1] = ""Enum.Axis."" .. prop
		end
	end
	returnValue[#returnValue + 1] = CONCAT(args, "","") .. "")""
	return CONCAT(returnValue, """")
end
types.BrickColor = function(value)
	local r = ColorValue(value.r)
	local g = ColorValue(value.g)
	local b = ColorValue(value.b)
	return ""BrickColor.new("" .. r .. "","" .. g .. "","" .. b .. "")""
end
types.CFrame = function(value)
	local c = {value:components()}
	return ""CFrame.new("" .. CONCAT(c, "","") .. "")""
end
types.Color3 = function(value)
	local r = ColorValue(value.r)
	local g = ColorValue(value.g)
	local b = ColorValue(value.b)
	return ""Color3.new("" .. r .. "","" .. g .. "","" .. b .. "")""
end
types.ColorSequence = function(value)
	local keypoints = value.Keypoints
	local keypointsStr = {}
	for _,keypoint in pairs(keypoints) do
		keypointsStr[#keypointsStr + 1] = PropertyToString(""ColorSequenceKeypoint"", keypoint)
	end
	return ""ColorSequence.new({"" .. CONCAT(keypointsStr, "","") .. ""})""
end
types.ColorSequenceKeypoint = function(value)
	return ""ColorSequenceKeypoint.new("" .. value.Time .. "","" .. PropertyToString(""Color3"", value.Value) .. "")""
end
types.DockWidgetPluginGuiInfo = function(value)
	return ""DockWidgetPluginGuiInfo.new(Enum.InitialDockState."" .. value.InitialDockState.Name ..
		"","" .. value.InitialEnabled .. "","" .. value.InitialEnabledShouldOverrideRestore ..
		"","" .. value.FloatingXSize .. "","" .. value.FloatingYSize .. "","" .. value.MinWidth ..
		"","" .. value.MinHeight .. "")""
end
types.Faces = function(value)
	local faces = {""Top"", ""Bottom"", ""Back"", ""Front"", ""Right"", ""Left""}
	local args = {}
	for i = 1,#faces do
		local prop = faces[i]
		if (value[prop]) then
			args[#args + 1] = ""Enum.NormalId."" .. prop
		end
	end
	return ""Faces.new("" .. CONCAT(args, "","") .. "")""
end
types.NumberRange = function(value)
	local min, max = value.Min, value.Max
	if (min == max) then
		return ""NumberRange.new("" .. min .. "")""
	else
		return ""NumberRange.new("" .. min .. "","" .. max .. "")""
	end
end
types.NumberSequence = function(value)
	local keypoints = value.Keypoints
	local keypointsStr = {}
	for _,keypoint in pairs(keypoints) do
		keypointsStr[#keypointsStr + 1] = PropertyToString(""NumberSequenceKeypoint"", keypoint)
	end
	return ""NumberSequence.new({"" .. CONCAT(keypointsStr, "","") .. ""})""
end
types.NumberSequenceKeypoint = function(value)
	return ""NumberSequenceKeypoint.new("" .. value.Time .. "","" .. value.Value .. "","" .. value.Envelope .. "")""
end
types.PathWaypoint = function(value)
	return ""PathWaypoint.new("" .. PropertyToString(""Vector3"", value.Position) .. "",Enum.PathWaypointAction."" .. value.Action.Name .. "")""
end
types.PhysicalProperties = function(value)
	return ""PhysicalProperties.new("" .. value.Density .. "","" .. value.Friction .. "","" .. value.Elasticity ..
		"","" .. value.FrictionWeight .. "","" .. value.ElasticityWeight .. "")""
end
types.Ray = function(value)
	return ""Ray.new("" .. PropertyToString(""Vector3"", value.Origin) .. "","" .. PropertyToString(""Vector3"", value.Direction) .. "")""
end
types.Rect2D = function(value)
	return ""Rect.new("" .. PropertyToString(""Vector2"", value.Min) .. "","" .. PropertyToString(""Vector2"", value.Max) .. "")""
end
types.Region3 = function(value)
	local sh = value.Size * 0.5
	local pos = value.CFrame.p
	local min = pos - sh
	local max = pos + sh
	return ""Region3.new("" .. PropertyToString(""Vector3"", min) .. "","" .. PropertyToString(""Vector3"", max) .. "")""
end
types.Region3int16 = function(value)
	return ""Region3int16.new("" .. PropertyToString(""Vector3int16"", value.Min) .. "","" .. PropertyToString(""Vector3int16"", value.Max) .. "")""
end
types.TweenInfo = function(value)
	return ""TweenInfo.new("" .. value.Time .. "",Enum.EasingStyle."" .. value.EasingStyle.Name ..
		"",Enum.EasingDirection."" .. value.EasingDirection.Name .. "","" .. value.RepeatCount .. "","" ..
		value.Reverses .. "","" .. value.DelayTime .. "")""
end
types.UDim = function(value)
	if (value.Scale == 0 and value.Offset == 0) then
		return ""UDim.new()""
	elseif (value.Offset == 0) then
		return ""UDim.new("" .. value.Scale .. "")""
	else
		return ""UDim.new("" .. value.Scale .. "","" .. value.Offset .. "")""
	end
end
types.UDim2 = function(value)
	if (value.X.Scale == 0 and value.X.Offset == 0 and value.Y.Scale == 0 and value.Y.Offset == 0) then
		return ""UDim2.new()""
	else
		return ""UDim2.new("" .. value.X.Scale .. "","" .. value.X.Offset .. "","" .. value.Y.Scale .. "","" .. value.Y.Offset .. "")""
	end
end
types.Vector2 = function(value)
	if (value.X == 0 and value.Y == 0) then
		return ""Vector2.new()""
	else
		return ""Vector2.new("" .. value.X .. "","" .. value.Y .. "")""
	end
end
types.Vector3 = function(value)
	if (value.X == 0 and value.Y == 0 and value.Z == 0) then
		return ""Vector3.new()""
	else
		return ""Vector3.new("" .. value.X .. "","" .. value.Y .. "","" .. value.Z .. "")""
	end
end
types.Vector3int16 = function(value)
	if (value.X == 0 and value.Y == 0 and value.Z == 0) then
		return ""Vector3int16.new()""
	else
		return ""Vector3int16.new("" .. value.X .. "","" .. value.Y .. "","" .. value.Z .. "")""
	end
end
types.string = function(value)
	return (""%q""):format(value)
end
types.Content = types.string
types.CoordinateFrame = types.CFrame
local enumsByName = {}
for _,enum in pairs(Enum:GetEnums()) do enumsByName[tostring(enum)] = enum end
PropertyToString = function(name, value, propName)
	local returnValue = tostring(value)
	local serializeFunc = types[name]
	if (serializeFunc) then
		returnValue = serializeFunc(value)
	elseif (enumsByName[name]) then
		return ""Enum."" .. name .. ""."" .. value.Name
	else
		if (name:match(""^Class:"") and value ~= nil) then
			return nil, true
		end
	end
	return returnValue
end

return PropertyToString"
CVsKki9C,СПРИНТ № 6 | Просто о сложности. Теория быстродействия | Урок 12: Дедупликатор документов,chevengur,C++,Wednesday 10th of April 2024 03:13:33 AM CDT,"document.h

#pragma once

enum class DocumentStatus {
    ACTUAL,
    IRRELEVANT,
    BANNED,
    REMOVED,
};

struct Document {
    Document() = default;

    Document(int id, double relevance, int rating);

    int id = 0;
    double relevance = 0.0;
    int rating = 0;
};

***************************************************************************************************************************************

paginator.h

#pragma once
#include <iostream>

template <typename Iterator>
struct IteratorRange {
    Iterator begin;
    Iterator end;
    IteratorRange(Iterator begin, Iterator end) :begin(begin), end(end) {}
};

template <typename Iterator>
class Paginator {
public:

    Paginator(Iterator begin, Iterator end, int size)
        :page_size_(size) {
        vector test(begin, end);
        Iterator temp = begin;
        for (; temp + size < end; temp += size) {
            pages_.push_back(IteratorRange(temp, temp + size));
        }
        if (temp < end) {
            pages_.push_back(IteratorRange(temp, end));
        }
    }

    auto begin() const {
        return pages_.begin();
    }
    auto end() const {
        return pages_.end();
    }
    int size() const {
        return page_size_;
    }

private:
    int page_size_;
    vector<IteratorRange<Iterator>> pages_;
};

template <typename Container>
auto Paginate(const Container& c, size_t page_size) {
    return Paginator(begin(c), end(c), page_size);
}

template<typename Iterator>
ostream& operator<< (ostream& out, IteratorRange<Iterator> p) {
    for (auto i = p.begin; i < p.end; i++) {
        out << *i;
    }
    return out;
}

***************************************************************************************************************************************

read_input_functions.h

#pragma once
#include <iostream>
#include <vector>
#include <string>

std::string ReadLine();

int ReadLineWithNumber();

std::vector<std::string> SplitIntoWords(const std::string&);

***************************************************************************************************************************************

remove_duplicates.h

#pragma once
#include ""search_server.h""


void RemoveDuplicates(SearchServer& search_server);

***************************************************************************************************************************************

request_queue.h

#pragma once
#include <iostream>
#include <vector>
#include <deque>
#include ""document.h""
#include ""search_server.h""

class RequestQueue {
public:
    explicit RequestQueue(const SearchServer& search_server);

    // сделаем ""обертки"" для всех методов поиска, чтобы сохранять результаты для нашей статистики
    template <typename DocumentPredicate>
    std::vector<Document> AddFindRequest(const string& raw_query, DocumentPredicate document_predicate) {
        const auto result = search_server_.FindTopDocuments(raw_query, document_predicate);
        AddRequest(result.size());
        return result;
    }
    vector<Document> AddFindRequest(const string& raw_query, DocumentStatus status);/* {
        const auto result = search_server_.FindTopDocuments(raw_query, status);
        AddRequest(result.size());
        return result;
    }*/
    vector<Document> AddFindRequest(const string& raw_query); /*{
        const auto result = search_server_.FindTopDocuments(raw_query);
        AddRequest(result.size());
        return result;
    }*/
    int GetNoResultRequests() const;

private:
    struct QueryResult {
        uint64_t timestamp;
        int results;
    };
    std::deque<QueryResult> requests_;
    const SearchServer& search_server_;
    int no_results_requests_;
    uint64_t current_time_;
    const static int min_in_day_ = 1440;

    void AddRequest(int results_num);
};

***************************************************************************************************************************************

search_server.h

#pragma once 
#include <iostream> 
#include <algorithm> 
#include <map> 
#include <cmath> 
#include <vector> 
#include ""document.h"" 
#include ""read_input_functions.h"" 
#include ""string_processing.h"" 


const int MAX_RESULT_DOCUMENT_COUNT = 5;
const double VALUE = 1e-6;

class SearchServer {
public:
    template <typename StringContainer>
    explicit SearchServer(const StringContainer& stop_words);

    explicit SearchServer(const string& stop_words_text);

    void AddDocument(int document_id, const string& document, DocumentStatus status,
        const vector<int>& ratings);

    template <typename DocumentPredicate>
    vector<Document> FindTopDocuments(const string& raw_query,
        DocumentPredicate document_predicate) const;

    vector<Document> FindTopDocuments(const string& raw_query, DocumentStatus status) const;

    vector<Document> FindTopDocuments(const string& raw_query) const;

    int GetDocumentCount() const;

    set<int>::const_iterator begin() const;
    set<int>::const_iterator end() const;

    tuple<vector<string>, DocumentStatus> MatchDocument(const string& raw_query,
        int document_id) const;
    const map<string, double>& GetWordFrequencies(int document_id) const;
    void RemoveDocument(int document_id);

    bool IsStopWord(const string& word) const;

private:
    struct DocumentData {
        int rating;
        DocumentStatus status;
    };
    const set<string> stop_words_;
    map<string, map<int, double>> word_to_document_freqs_;
    map<int, DocumentData> documents_;
    set<int> document_ids_;
    map<int, map<string, double>> remove_word_to_document_freqs_;



    static bool IsValidWord(const string& word);

    vector<string> SplitIntoWordsNoStop(const string& text) const;

    static int ComputeAverageRating(const vector<int>& ratings);

    struct QueryWord {
        string data;
        bool is_minus;
        bool is_stop;
    };

    QueryWord ParseQueryWord(const string& text) const;

    struct Query {
        set<string> plus_words;
        set<string> minus_words;
    };

    Query ParseQuery(const string& text) const;

    // Existence required 
    double ComputeWordInverseDocumentFreq(const string& word) const;

    template <typename DocumentPredicate>
    vector<Document> FindAllDocuments(const Query& query,
        DocumentPredicate document_predicate) const;
};

template <typename StringContainer>
SearchServer::SearchServer(const StringContainer& stop_words)
    : stop_words_(MakeUniqueNonEmptyStrings(stop_words))  // Extract non-empty stop words 
{
    if (!all_of(stop_words_.begin(), stop_words_.end(), IsValidWord)) {
        throw invalid_argument(""Some of stop words are invalid""s);
    }
}

template <typename DocumentPredicate>
vector<Document> SearchServer::FindTopDocuments(const string& raw_query,
    DocumentPredicate document_predicate) const {
    const auto query = ParseQuery(raw_query);

    auto matched_documents = FindAllDocuments(query, document_predicate);

    sort(matched_documents.begin(), matched_documents.end(), [](const Document& lhs, const Document& rhs) {
        if (std::abs(lhs.relevance - rhs.relevance) < VALUE) {
            return lhs.rating > rhs.rating;
        }
        else {
            return lhs.relevance > rhs.relevance;
        }
        });
    if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
        matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
    }

    return matched_documents;
}

template <typename DocumentPredicate>
vector<Document> SearchServer::FindAllDocuments(const Query& query,
    DocumentPredicate document_predicate) const {
    map<int, double> document_to_relevance;
    for (const string& word : query.plus_words) {
        if (word_to_document_freqs_.count(word) == 0) {
            continue;
        }
        const double inverse_document_freq = ComputeWordInverseDocumentFreq(word);
        for (const auto& [document_id, term_freq] : word_to_document_freqs_.at(word)) {
            const auto& document_data = documents_.at(document_id);
            if (document_predicate(document_id, document_data.status, document_data.rating)) {
                document_to_relevance[document_id] += term_freq * inverse_document_freq;
            }
        }
    }
    for (const string& word : query.minus_words) {
        if (word_to_document_freqs_.count(word) == 0) {
            continue;
        }
        for (const auto& [document_id, _] : word_to_document_freqs_.at(word)) {
            document_to_relevance.erase(document_id);
        }
    }

    vector<Document> matched_documents;
    for (const auto& [document_id, relevance] : document_to_relevance) {
        matched_documents.push_back(
            { document_id, relevance, documents_.at(document_id).rating });
    }
    return matched_documents;
}

***************************************************************************************************************************************

string_processing.h

#pragma once
#include <iostream>
#include <set>
#include ""document.h""

using namespace std;

template <typename StringContainer>
std::set<std::string> MakeUniqueNonEmptyStrings(const StringContainer& strings) {
    std::set<std::string> non_empty_strings;
    for (const std::string& str : strings) {
        if (!str.empty()) {
            non_empty_strings.insert(str);
        }
    }
    return non_empty_strings;
}

std::ostream& operator << (std::ostream& out, const Document search);

***************************************************************************************************************************************

document.cpp

#include ""document.h""

Document::Document(int id, double relevance, int rating)
    : id(id)
    , relevance(relevance)
    , rating(rating) {
}

***************************************************************************************************************************************

main.cpp

#include ""search_server.h""
#include ""request_queue.h""
#include ""paginator.h""
#include ""remove_duplicates.h""


int main() {
    SearchServer search_server(""and with""s);
    search_server.AddDocument(1, ""funny pet and nasty rat""s, DocumentStatus::ACTUAL, { 7, 2, 7 });
    search_server.AddDocument(2, ""funny pet with curly hair""s, DocumentStatus::ACTUAL, { 1, 2 });

    // дубликат документа 2, будет удалён
    search_server.AddDocument(3, ""funny pet with curly hair""s, DocumentStatus::ACTUAL, { 1, 2 });

    // отличие только в стоп-словах, считаем дубликатом
    search_server.AddDocument(4, ""funny pet and curly hair""s, DocumentStatus::ACTUAL, { 1, 2 });

    // множество слов такое же, считаем дубликатом документа 1
    search_server.AddDocument(5, ""funny funny pet and nasty nasty rat""s, DocumentStatus::ACTUAL, { 1, 2 });

    // добавились новые слова, дубликатом не является
    search_server.AddDocument(6, ""funny pet and not very nasty rat""s, DocumentStatus::ACTUAL, { 1, 2 });

    // множество слов такое же, как в id 6, несмотря на другой порядок, считаем дубликатом
    search_server.AddDocument(7, ""very nasty rat and not very funny pet""s, DocumentStatus::ACTUAL, { 1, 2 });

    // есть не все слова, не является дубликатом
    search_server.AddDocument(8, ""pet with rat and rat and rat""s, DocumentStatus::ACTUAL, { 1, 2 });

    // слова из разных документов, не является дубликатом
    search_server.AddDocument(9, ""nasty rat with curly hair""s, DocumentStatus::ACTUAL, { 1, 2 });

    cout << ""Before duplicates removed: ""s << search_server.GetDocumentCount() << endl;
    RemoveDuplicates(search_server);
    cout << ""After duplicates removed: ""s << search_server.GetDocumentCount() << endl;
}

***************************************************************************************************************************************

read_input_functions.cpp

#include ""read_input_functions.h""

std::string ReadLine() {
    std::string s;
    std::getline(std::cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result;
    std::cin >> result;
    ReadLine();
    return result;
}

std::vector<std::string> SplitIntoWords(const std::string& text) {
    std::vector<std::string> words;
    std::string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

***************************************************************************************************************************************

remove_duplicates.cpp

#include ""remove_duplicates.h""

void RemoveDuplicates(SearchServer& search_server) {
    
    std::set<int> id_remove;
    map<set<string>, int> unique_doc;
    for (const auto& document_id : search_server)
    {
        map<string, double> words_in_browse = search_server.GetWordFrequencies(document_id);        // получил документ

        set<string> uniq_word;

        for (const auto& [word, stat] : words_in_browse)
        {
            uniq_word.insert(word);
        }
        
        if (unique_doc.count(uniq_word))
        {
            id_remove.insert(document_id);
            
        }
        else
        {
            unique_doc.insert({ uniq_word, document_id });
        }

    }

    for (const auto& l : id_remove)
    {
        cout << ""Found duplicate document id "" << l << endl;
        search_server.RemoveDocument(l);
    }
}
***************************************************************************************************************************************

request_queue.cpp

#include ""request_queue.h""

RequestQueue::RequestQueue(const SearchServer& search_server)
    : search_server_(search_server)
    , no_results_requests_(0)
    , current_time_(0) {
}

vector<Document> RequestQueue::AddFindRequest(const string& raw_query) {
    const auto result = search_server_.FindTopDocuments(raw_query);
    AddRequest(result.size());
    return result;
}

vector<Document> RequestQueue::AddFindRequest(const string& raw_query, DocumentStatus status) {
    const auto result = search_server_.FindTopDocuments(raw_query, status);
    AddRequest(result.size());
    return result;
}

int RequestQueue::GetNoResultRequests() const {
    return no_results_requests_;
}

void RequestQueue::AddRequest(int results_num) {
    // новый запрос - новая секунда
    ++current_time_;
    // удаляем все результаты поиска, которые устарели
    while (!requests_.empty() && min_in_day_ <= current_time_ - requests_.front().timestamp) {
        if (0 == requests_.front().results) {
            --no_results_requests_;
        }
        requests_.pop_front();
    }
    // сохраняем новый результат поиска
    requests_.push_back({ current_time_, results_num });
    if (0 == results_num) {
        ++no_results_requests_;
    }
}

***************************************************************************************************************************************

search_server.cpp

#include ""search_server.h""

SearchServer::SearchServer(const string& stop_words_text)
    : SearchServer(
        SplitIntoWords(stop_words_text))  // Invoke delegating constructor from string container
{
}

void SearchServer::AddDocument(int document_id, const string& document, DocumentStatus status,
    const vector<int>& ratings) {
    if ((document_id < 0) || (documents_.count(document_id) > 0)) {
        throw invalid_argument(""Invalid document_id""s);
    }
    const auto words = SplitIntoWordsNoStop(document);

    const double inv_word_count = 1.0 / words.size();
    for (const string& word : words) {
        remove_word_to_document_freqs_[document_id][word] += inv_word_count;
        word_to_document_freqs_[word][document_id] += inv_word_count;
    }
    documents_.emplace(document_id, DocumentData{ ComputeAverageRating(ratings), status });
    document_ids_.insert(document_id);
}

vector<Document> SearchServer::FindTopDocuments(const string& raw_query, DocumentStatus status) const {
    return FindTopDocuments(
        raw_query, [status](int document_id, DocumentStatus document_status, int rating) {
            return document_status == status;
        });
}

vector<Document> SearchServer::FindTopDocuments(const string& raw_query) const {
    return FindTopDocuments(raw_query, DocumentStatus::ACTUAL);
}

int SearchServer::GetDocumentCount() const {
    return documents_.size();
}

const map<string, double>& SearchServer::GetWordFrequencies(int document_id) const
{
    map <string, double> empty_map;

    if (remove_word_to_document_freqs_.count(document_id))
    {
        return remove_word_to_document_freqs_.at(document_id);
    }

    return empty_map;
}

void SearchServer::RemoveDocument(int document_id)
{
    if (document_ids_.find(document_id) != document_ids_.end())
    {
        for (const auto& [word, stat] : remove_word_to_document_freqs_[document_id])
        {
            auto erase_word = word_to_document_freqs_[word].find(document_id);      // нахожу слово в нужном мне документе
            word_to_document_freqs_[word].erase(erase_word);                        // удаляю данные к слову из документа
        }
    }

    documents_.erase(document_id);
    document_ids_.erase(document_id);
    remove_word_to_document_freqs_.erase(document_id);
}

set<int>::const_iterator SearchServer::begin() const
{
    return document_ids_.begin();
}

set<int>::const_iterator SearchServer::end() const
{
    return document_ids_.end();
}

tuple<vector<string>, DocumentStatus> SearchServer::MatchDocument(const string& raw_query,
    int document_id) const {
    const auto query = ParseQuery(raw_query);

    vector<string> matched_words;
    for (const string& word : query.plus_words) {
        if (word_to_document_freqs_.count(word) == 0) {
            continue;
        }
        if (word_to_document_freqs_.at(word).count(document_id)) {
            matched_words.push_back(word);
        }
    }
    for (const string& word : query.minus_words) {
        if (word_to_document_freqs_.count(word) == 0) {
            continue;
        }
        if (word_to_document_freqs_.at(word).count(document_id)) {
            matched_words.clear();
            break;
        }
    }
    return { matched_words, documents_.at(document_id).status };
}

bool SearchServer::IsStopWord(const string& word) const {
    return stop_words_.count(word) > 0;
}

bool SearchServer::IsValidWord(const string& word) {
    // A valid word must not contain special characters
    return none_of(word.begin(), word.end(), [](char c) {
        return c >= '\0' && c < ' ';
        });
}

vector<string> SearchServer::SplitIntoWordsNoStop(const string& text) const {
    vector<string> words;
    for (const string& word : SplitIntoWords(text)) {
        if (!IsValidWord(word)) {
            throw invalid_argument(""Word ""s + word + "" is invalid""s);
        }
        if (!IsStopWord(word)) {
            words.push_back(word);
        }
    }
    return words;
}

int SearchServer::ComputeAverageRating(const vector<int>& ratings) {
    if (ratings.empty()) {
        return 0;
    }
    int rating_sum = 0;
    for (const int rating : ratings) {
        rating_sum += rating;
    }
    return rating_sum / static_cast<int>(ratings.size());
}

SearchServer::QueryWord SearchServer::ParseQueryWord(const string& text) const {
    if (text.empty()) {
        throw invalid_argument(""Query word is empty""s);
    }
    string word = text;
    bool is_minus = false;
    if (word[0] == '-') {
        is_minus = true;
        word = word.substr(1);
    }
    if (word.empty() || word[0] == '-' || !IsValidWord(word)) {
        throw invalid_argument(""Query word ""s + text + "" is invalid"");
    }

    return { word, is_minus, IsStopWord(word) };
}

SearchServer::Query SearchServer::ParseQuery(const string& text) const {
    Query result;
    for (const string& word : SplitIntoWords(text)) {
        const auto query_word = ParseQueryWord(word);
        if (!query_word.is_stop) {
            if (query_word.is_minus) {
                result.minus_words.insert(query_word.data);
            }
            else {
                result.plus_words.insert(query_word.data);
            }
        }
    }
    return result;
}

double SearchServer::ComputeWordInverseDocumentFreq(const std::string& word) const {
    return std::log(GetDocumentCount() * 1.0 /word_to_document_freqs_.at(word).size());
}

***************************************************************************************************************************************

string_processing.cpp

#include ""string_processing.h""


std::ostream& operator << (std::ostream& out, const Document search) {
    return out << ""{ document_id = "" << search.id << "", relevance = "" << search.relevance << "", rating = "" << search.rating << "" }"";
}
"
PBqK9Fdz,triple_des_set_key (partial),and_cesbo,Go,Wednesday 10th of April 2024 02:42:39 AM CDT,"func desSetOddParity(key []byte) {
	kOddParity := []byte{
		1, 1, 2, 2, 4, 4, 7, 7, 8, 8, 11, 11, 13, 13, 14,
		14, 16, 16, 19, 19, 21, 21, 22, 22, 25, 25, 26, 26, 28, 28,
		31, 31, 32, 32, 35, 35, 37, 37, 38, 38, 41, 41, 42, 42, 44,
		44, 47, 47, 49, 49, 50, 50, 52, 52, 55, 55, 56, 56, 59, 59,
		61, 61, 62, 62, 64, 64, 67, 67, 69, 69, 70, 70, 73, 73, 74,
		74, 76, 76, 79, 79, 81, 81, 82, 82, 84, 84, 87, 87, 88, 88,
		91, 91, 93, 93, 94, 94, 97, 97, 98, 98, 100, 100, 103, 103, 104,
		104, 107, 107, 109, 109, 110, 110, 112, 112, 115, 115, 117, 117, 118, 118,
		121, 121, 122, 122, 124, 124, 127, 127, 128, 128, 131, 131, 133, 133, 134,
		134, 137, 137, 138, 138, 140, 140, 143, 143, 145, 145, 146, 146, 148, 148,
		151, 151, 152, 152, 155, 155, 157, 157, 158, 158, 161, 161, 162, 162, 164,
		164, 167, 167, 168, 168, 171, 171, 173, 173, 174, 174, 176, 176, 179, 179,
		181, 181, 182, 182, 185, 185, 186, 186, 188, 188, 191, 191, 193, 193, 194,
		194, 196, 196, 199, 199, 200, 200, 203, 203, 205, 205, 206, 206, 208, 208,
		211, 211, 213, 213, 214, 214, 217, 217, 218, 218, 220, 220, 223, 223, 224,
		224, 227, 227, 229, 229, 230, 230, 233, 233, 234, 234, 236, 236, 239, 239,
		241, 241, 242, 242, 244, 244, 247, 247, 248, 248, 251, 251, 253, 253, 254,
		254,
	}

	for i := 0; i < len(key); i++ {
		key[i] = kOddParity[key[i]]
	}
}

func TripleDesSchedule(deskey []byte, key []byte) []byte {
	if len(deskey) != 14 {
		panic(""deskey must be 14 bytes"")
	}

	tmp := make([]byte, 14)
	copy(tmp, deskey[:])

	for i := 0; i < len(key); i++ {
		tmp[(i % len(tmp))] ^= key[i]
	}

	tripleDesKey := make([]byte, 16)
	tripleDesKey[0] = tmp[0] & 0xfe
	tripleDesKey[1] = ((tmp[0] << 7) | (tmp[1] >> 1)) & 0xfe
	tripleDesKey[2] = ((tmp[1] << 6) | (tmp[2] >> 2)) & 0xfe
	tripleDesKey[3] = ((tmp[2] << 5) | (tmp[3] >> 3)) & 0xfe
	tripleDesKey[4] = ((tmp[3] << 4) | (tmp[4] >> 4)) & 0xfe
	tripleDesKey[5] = ((tmp[4] << 3) | (tmp[5] >> 5)) & 0xfe
	tripleDesKey[6] = ((tmp[5] << 2) | (tmp[6] >> 6)) & 0xfe
	tripleDesKey[7] = tmp[6] << 1
	tripleDesKey[8] = tmp[7] & 0xfe
	tripleDesKey[9] = ((tmp[7] << 7) | (tmp[8] >> 1)) & 0xfe
	tripleDesKey[10] = ((tmp[8] << 6) | (tmp[9] >> 2)) & 0xfe
	tripleDesKey[11] = ((tmp[9] << 5) | (tmp[10] >> 3)) & 0xfe
	tripleDesKey[12] = ((tmp[10] << 4) | (tmp[11] >> 4)) & 0xfe
	tripleDesKey[13] = ((tmp[11] << 3) | (tmp[12] >> 5)) & 0xfe
	tripleDesKey[14] = ((tmp[12] << 2) | (tmp[13] >> 6)) & 0xfe
	tripleDesKey[15] = tmp[13] << 1

	desSetOddParity(tripleDesKey[:8])
	desSetOddParity(tripleDesKey[8:])

	return tripleDesKey
}
"
9rkvHQwH,triple_des_set_key,and_cesbo,C,Wednesday 10th of April 2024 02:41:24 AM CDT,"#include <stdio.h>
#include <stdint.h>
#include <string.h>
#include <openssl/des.h>

// Build: gcc $(pkg-config --libs --cflags libcrypto) -o x x.c

static void triple_des_set_key(const uint8_t *des_key, const uint8_t *key, size_t key_size) {
    uint8_t tmp_key[14];
    memcpy(tmp_key, des_key, sizeof(tmp_key));

    // set key
    for(size_t i = 0; i < key_size; ++i)
        tmp_key[i % sizeof(tmp_key)] ^= key[i];

    uint8_t triple_des_key[16];
    DES_key_schedule ks1;
    DES_key_schedule ks2;

    triple_des_key[0] = tmp_key[0] & 0xfe;
    triple_des_key[1] = ((tmp_key[0] << 7) | (tmp_key[1] >> 1)) & 0xfe;
    triple_des_key[2] = ((tmp_key[1] << 6) | (tmp_key[2] >> 2)) & 0xfe;
    triple_des_key[3] = ((tmp_key[2] << 5) | (tmp_key[3] >> 3)) & 0xfe;
    triple_des_key[4] = ((tmp_key[3] << 4) | (tmp_key[4] >> 4)) & 0xfe;
    triple_des_key[5] = ((tmp_key[4] << 3) | (tmp_key[5] >> 5)) & 0xfe;
    triple_des_key[6] = ((tmp_key[5] << 2) | (tmp_key[6] >> 6)) & 0xfe;
    triple_des_key[7] = tmp_key[6] << 1;
    triple_des_key[8] = tmp_key[7] & 0xfe;
    triple_des_key[9] = ((tmp_key[7] << 7) | (tmp_key[8] >> 1)) & 0xfe;
    triple_des_key[10] = ((tmp_key[8] << 6) | (tmp_key[9] >> 2)) & 0xfe;
    triple_des_key[11] = ((tmp_key[9] << 5) | (tmp_key[10] >> 3)) & 0xfe;
    triple_des_key[12] = ((tmp_key[10] << 4) | (tmp_key[11] >> 4)) & 0xfe;
    triple_des_key[13] = ((tmp_key[11] << 3) | (tmp_key[12] >> 5)) & 0xfe;
    triple_des_key[14] = ((tmp_key[12] << 2) | (tmp_key[13] >> 6)) & 0xfe;
    triple_des_key[15] = tmp_key[13] << 1;

    DES_set_odd_parity((DES_cblock *)&triple_des_key[0]);
    DES_set_odd_parity((DES_cblock *)&triple_des_key[8]);

    DES_key_sched((DES_cblock *)&triple_des_key[0], &ks1);
    DES_key_sched((DES_cblock *)&triple_des_key[8], &ks2);

    const uint8_t *ks1_ptr = (const uint8_t *)&ks1;
    printf(""ks1: 0x"");
    for(int i = 0; i < sizeof(ks1); i++)
        printf(""%02x"", ks1_ptr[i]);
    printf(""\n"");

    const uint8_t *ks2_ptr = (const uint8_t *)&ks2;
    printf(""ks2: 0x"");
    for(int i = 0; i < sizeof(ks2); i++)
        printf(""%02x"", ks2_ptr[i]);
    printf(""\n"");
} /* triple_des_set_key */

int main() {
    const uint8_t des_key[] = {
        0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
        0x09, 0x10, 0x11, 0x12, 0x13, 0x14
    };

    const uint8_t key[] = {
        0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
        0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D,
    };

    triple_des_set_key(des_key, key, sizeof(key));

    return 0;
}
"
Vzmw8vux,Ocearium Lib,hacimiks,Lua,Wednesday 10th of April 2024 02:20:55 AM CDT,"local Library = loadstring(game:HttpGet(""https://raw.githubusercontent.com/slf0Dev/Ocerium_Project/main/Library.lua""))()
local Window = Library.Main(""RemiAPE"",""LeftAlt"") -- change ""LeftAlt"" to key that you want will hide gui


local Tab = Window.NewTab(""Main"")
local Section = Tab.NewSection(""Auto Farm"")
local EnabledToggle = Section.NewToggle(""Auto Win"",function(bool)
    _G.autowinfarm = bool;
    while wait(.1) do
        if _G.autowinfarm == true and  game.Players.LocalPlayer.Character and  game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-236, 180, 360, 1, 0, 0, 0, 1, 0, 0, 0, 1)
        end
    end
end)

local Section2 = Tab.NewSection(""Other"")
 local EnabledToggle = Section2.NewToggle(""Remove Fall Damage (Auto)"", function(bool)
    __G.NoFallDamage = bool;
                            while wait(0.5) do
                                    if _G.NoFallDamage == true then
                            local FallDamageScript = (game.Players.LocalPlayer.Character ~= nil) and game.Players.LocalPlayer.Character:FindFirstChild(""FallDamageScript"") or nil
                            if FallDamageScript then
                            FallDamageScript:Destroy()
                            end end end
            end)

local EnabledToggle = Section2.NewToggle(""Walk On Water"", function(bool)
    if bool == false then do game.Workspace.WaterLevel.CanCollide = false
        game.Workspace.WaterLevel.Size = Vector3.new(10, 1, 10)
    end
end
        if bool == true then do game.Workspace.WaterLevel.CanCollide = true
            game.Workspace.WaterLevel.Size = Vector3.new(5000, 1, 5000)
        end
    end
end)

local Button = Section2.NewButton(""Remove Blizzard Ui"", function()
    game.Players.LocalPlayer.PlayerGui.BlizzardGui:destroy()
end)

local Button = Section2.NewButton(""Remove Sandstorm Ui"", function()
    game.Players.LocalPlayer.PlayerGui.SandStormGui:destroy()
end)

local Section3 = Tab.NewSection(""Gamepass"")
local EnabledToggle = Section3.NewToggle(""Vote Map (Compass)"", function(bool)
    if bool == false then do game.Players.LocalPlayer.PlayerGui.MainGui.MapVotePage.Visible = false
    end
end
            if bool == true then do game.Players.LocalPlayer.PlayerGui.MainGui.MapVotePage.Visible = true
            end
        end
    end)

local Section4 = Tab.NewSection(""Teleport"")
local Button = Section4.NewButton(""Island"", function(bool)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-123.5, 38.5, -27.5, -1, 0, 0, 0, 1, 0, 0, 0, -1) --Game Island
end)

local Button = Section4.NewButton(""Island"", function(bool)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-320, 170, 341, 1, 0, 0, 0, 1, 0, 0, 0, 1) --Spawn Tower
end)

local Tab2 = Window.NewTab(""Miscellaneous"")
local Section5 = Tab2.NewSection(""Extras"")
local Button = Section5.NewButton(""Infinite Yield"", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

local Button = Section5.NewButton(""Mobile Keyboard"", function()
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt"", true))()
end)

local Button = Section5.NewButton(""Fly Gui V3"", function()
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt""))()
end)

local Button = Section5.NewButton(""Headless (Client)"", function()
    loadstring(game:HttpGet(""https://pastebin.com/raw/um5UETpy""))()
end)

local Section6 = Tab2.NewSection(""Troll"")
local Button = Section6.NewButton(""FE Universal Admin"", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub/main/FE%20Trolling%20GUI.luau'))()
end)

local Button = Section6.NewButton(""FE Server Crasher"", function()
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/ZhenX201/FE-Server-Crash/main/source""))()
end)

local Button = Section6.NewButton(""FE Server Lagger"", function()
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/ZhenX201/FE-server-lag/main/source""))()
end)

local Button = Section6.NewButton(""FE Admin Commands"", function()
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/JoeScriptHub/GrimEx-Admin/main/GrimEx%20Admin""))()
end)

local Section7 = Tab2.NewSection(""Universal Esp"")
local Button = Section7.NewButton(""Lightux Esp"", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/3cKjwUCG'))()
end)"
v98gnUgn,Code used in video,GamearooCodes,Lua,Wednesday 10th of April 2024 02:20:17 AM CDT,"local component = require(""component"");
local traffic = component.traffic_light_card
local os = require(""os"")
local thread = require(""thread"")

local sides = require(""sides"")
local computer = require(""computer"")

-- Warning this script contains bulbs from a custom edited version of traffic control to use this script fine Left2 and Right2 for yellows and remove the 2 from that and it will work

local colors = require(""colors"")

local rs = component.redstone


function setBundledOutput(color, state)


    rs.setBundledOutput(sides.back, {[color] = state})



  end


  function getBundledoutput(color)

   return  rs.getBundledInput(sides.back, color);

  end

  setBundledOutput(colors.white, 200)

trafficLight = {}
lightPOS = traffic.listBlockPos()

for i = 1, #lightPOS do
  trafficLight[i] = lightPOS[i]
end



function setLights(id,state,mode,forceClear)
  -- F is the boolean for Flashing, S is the boolean for Steady/On
  local f = false
  local s = false

  --  Clear signal if flag to forceClear isn't set to false
  if forceClear ~= false then
    if (type(id) == ""table"") then
      for itr = 1, #id do
        traffic.clearStates(trafficLight[id[itr]][1],trafficLight[id[itr]][2],trafficLight[id[itr]][3])
      end
    elseif (type(id) == ""string"") then
      traffic.clearStates(trafficLight[id][1],trafficLight[id][2],trafficLight[id][3])
    end
  end

  --  Determine mode
  if mode ~= nil then
    --    Flashing
    if string.lower(mode) == ""flash"" then
      s = true
      f = true
    --   Steady
    elseif string.lower(mode) == ""on"" then
      s = true
      f = false
      --    Off
    else
      s = false
      f = false
    end
  else
    s = false
    f = false
  end

  --  Apply to signal
  if (type(id) == ""table"" and state ~= nil) then
    for itr = 1, #id do
      traffic.setState(trafficLight[id[itr]][1],trafficLight[id[itr]][2],trafficLight[id[itr]][3],state,s,f)
    end

  elseif (type(id) == ""string"" and state ~= nil) then
    traffic.setState(trafficLight[id][1],trafficLight[id][2],trafficLight[id][3],state,s,f)
  end
end
-- key
-- S Stright
-- Y stright bulb
-- T Turn Bulb
-- L Left
-- R Right
-- Middle Frame


-- north 1 LT, 2 YS , 3 YS , 4 RT
-- south 5 LT, 6 YS, 7 YS , 8 RT
-- east 9 L , 10 ML , 11 MR,12 R
-- west 13 L, 14 R


local phase1leftbulb = {1,2,3,4}
local phase1sbulb = {5,6,7,8}
local phase2rightbulb = {9,10}
local phase2sbulb = {11,12,13,14,15,16}

os.sleep(60)
-- start script

setBundledOutput(colors.cyan, 200)

os.sleep(8)

 
local loop2 = thread.create(function()

    while true do
     
     if(getBundledoutput(colors.red) >= 1) then
        setBundledOutput(colors.cyan, 0)
     end
     if(getBundledoutput(colors.cyan) >= 1) then
        if(getBundledoutput(colors.red) <= 0) then
        setBundledOutput(colors.cyan, 200)
        os.sleep(8)
     end
    end
-- phase
        if(getBundledoutput(colors.red) <= 0) then
            print(""Triffic light us18 Dirt Road"")
        setLights(phase1leftbulb, ""GreenArrowLeft"", ""on"")
        setLights(phase1sbulb, ""StraightGreen"", ""on"")
        os.sleep(32)
    end
    if(getBundledoutput(colors.red) <= 0) then
        setLights(phase1leftbulb, ""YellowArrowLeft"", ""on"")
        setLights(phase1sbulb, ""StraightYellow"", ""on"")
        os.sleep(3)
    end
    if(getBundledoutput(colors.red) <= 0) then
   
        setLights(phase1leftbulb, ""RedArrowLeft"", ""on"")
        setLights(phase1sbulb, ""StraightRed"", ""on"")
        os.sleep(1.3)
    end
    if(getBundledoutput(colors.red) <= 0) then
        setLights(phase2rightbulb, ""GreenArrowRight"", ""on"")
        setLights(phase2sbulb, ""StraightGreen"", ""on"")
        os.sleep(32)
    end
    if(getBundledoutput(colors.red) <= 0) then
        setLights(phase2leftbulb, ""YellowArrowRight"", ""on"")
        setLights(phase2sbulb, ""StraightYellow"", ""on"")
        os.sleep(3)
    end
    if(getBundledoutput(colors.red) <= 0) then
        setLights(phase2leftbulb, ""RedArrowRight"", ""on"")
        setLights(phase2sbulb, ""StraightRed"", ""on"")
        os.sleep(1.3)
    end

    if(getBundledoutput(colors.red) >= 1) then
        
        os.sleep(1)
    end




     

    end


  end)




      thread.waitForAny({loop2})


"
aXbq34Jz,BAse Code,GamearooCodes,Lua,Wednesday 10th of April 2024 02:19:36 AM CDT,"local component = require(""component"");
local traffic = component.traffic_light_card
local os = require(""os"")
local thread = require(""thread"")

local sides = require(""sides"")
local computer = require(""computer"")

-- Warning this script contains bulbs from a custom edited version of traffic control to use this script fine Left2 and Right2 for yellows and remove the 2 from that and it will work

local colors = require(""colors"")

local rs = component.redstone


function setBundledOutput(color, state)


    rs.setBundledOutput(sides.back, {[color] = state})



  end


  function getBundledoutput(color)

   return  rs.getBundledInput(sides.back, color);

  end

  setBundledOutput(colors.white, 200)

trafficLight = {}
lightPOS = traffic.listBlockPos()

for i = 1, #lightPOS do
  trafficLight[i] = lightPOS[i]
end



function setLights(id,state,mode,forceClear)
  -- F is the boolean for Flashing, S is the boolean for Steady/On
  local f = false
  local s = false

  --  Clear signal if flag to forceClear isn't set to false
  if forceClear ~= false then
    if (type(id) == ""table"") then
      for itr = 1, #id do
        traffic.clearStates(trafficLight[id[itr]][1],trafficLight[id[itr]][2],trafficLight[id[itr]][3])
      end
    elseif (type(id) == ""string"") then
      traffic.clearStates(trafficLight[id][1],trafficLight[id][2],trafficLight[id][3])
    end
  end

  --  Determine mode
  if mode ~= nil then
    --    Flashing
    if string.lower(mode) == ""flash"" then
      s = true
      f = true
    --   Steady
    elseif string.lower(mode) == ""on"" then
      s = true
      f = false
      --    Off
    else
      s = false
      f = false
    end
  else
    s = false
    f = false
  end

  --  Apply to signal
  if (type(id) == ""table"" and state ~= nil) then
    for itr = 1, #id do
      traffic.setState(trafficLight[id[itr]][1],trafficLight[id[itr]][2],trafficLight[id[itr]][3],state,s,f)
    end

  elseif (type(id) == ""string"" and state ~= nil) then
    traffic.setState(trafficLight[id][1],trafficLight[id][2],trafficLight[id][3],state,s,f)
  end
end
-- key
-- S Stright
-- Y stright bulb
-- T Turn Bulb
-- L Left
-- R Right
-- Middle Frame


-- north 1 LT, 2 YS , 3 YS , 4 RT
-- south 5 LT, 6 YS, 7 YS , 8 RT
-- east 9 L , 10 ML , 11 MR,12 R
-- west 13 L, 14 R





os.sleep(60)
-- start script

setBundledOutput(colors.cyan, 200)

os.sleep(8)

local loop2 = thread.create(function()

    while true do
     print(""Triffic light us18 Dirt Road"")
-- phase 1 sl&ss
     

     

    end


  end)




      thread.waitForAny({loop2})


"
ZxpXfCLj,villager-force.lua,opencomputerstest2,Lua,Wednesday 10th of April 2024 01:23:04 AM CDT,"turtle.dig()

local x = peripheral.find(""plethora:sensor"")

local vId
do
    local d2
    local ents = x.sense()
    for _, v in ipairs(ents) do
        if v.key == ""minecraft:villager"" then
            local vD2 = vector.new(v.x, v.y, v.z)
            vD2 = vD2:dot(vD2)
            if not d2 or vD2 < d2 then
                vId = v.id
            end
        end
    end
end

print(""Found: ""..vId)

while true do
    local meta = x.getMetaByID(vId)
    for k, v in pairs(meta) do
        if k:sub(1, 1) == ""h"" then
            print(k.."": ""..v)
        end
    end
	os.pullEvent(""key"")
end
"
Nr6r0bYG,Untitled,coinwalk,JavaScript,Wednesday 10th of April 2024 01:11:18 AM CDT,https://altquick.com/?aKey=6a3e7813d1ff1147e18f5df309f8de880c6131d1
Syu6TLkm,OnlineStore v3,RedFlys,C#,Wednesday 10th of April 2024 12:14:18 AM CDT,"Good iPhone12 = new Good(""IPhone 12"");
Good iPhone11 = new Good(""IPhone 11"");

Warehouse warehouse = new Warehouse();

Shop shop = new Shop(warehouse);

warehouse.Delive(iPhone12, 10);
warehouse.Delive(iPhone11, 1);

//Вывод всех товаров на складе с их остатком

Cart cart = shop.Cart();
cart.Add(iPhone12, 4);
cart.Add(iPhone11, 3); //при такой ситуации возникает ошибка так, как нет нужного количества товара на складе

//Вывод всех товаров в корзине

Console.WriteLine(cart.Order().Paylink);

cart.Add(iPhone12, 9); //Ошибка, после заказа со склада убираются заказанные товары


public class Warehouse : IDeliveryWarehouse
{
    private readonly Dictionary<Good, int> _goods;

    public Warehouse()
    {
        GoodEqualityCompare goodEqualityCompare = new();
        _goods = new(goodEqualityCompare);
    }

    public void Delive(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good) == false)
            _goods[good] = 0;

        _goods[good] += countGoods;
    }

    public bool CanIssue(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.TryGetValue(good, out int count) == false)
            return false;
            
        return count >= countGoods;        
    }

    public void TransferForDelivery(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good) == false || _goods[good] < countGoods)
            throw new ArgumentOutOfRangeException();
        
        _goods[good] -= countGoods;
    }
}

public class Shop
{
    private readonly Warehouse _warehouse;

    public Shop(Warehouse warehouse) => _warehouse = warehouse ?? throw new ArgumentNullException();
    
    public Cart Cart()
    {
        return new Cart(_warehouse);
    }
}

public class Cart
{
    private readonly Dictionary<Good, int> _goods;
    private readonly IDeliveryWarehouse _warehouse;

    public Cart(IDeliveryWarehouse warehouse) 
    {
        _warehouse = warehouse ?? throw new ArgumentNullException();

        GoodEqualityCompare goodEqualityCompare = new();
        _goods = new(goodEqualityCompare);
    }

    public void Add(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_warehouse.CanIssue(good, countGoods) == false)
            throw new InvalidOperationException();

        if (_goods.ContainsKey(good) == false)
            _goods[good] = 0;

        _goods[good] += countGoods;          
    }

    public PayOrder Order()
    {
        foreach(var goods in _goods)
        {
            _warehouse.TransferForDelivery(goods.Key, goods.Value);
        }

        _goods.Clear();
        return new PayOrder();
    }
}

public class Good
{
    public Good(string name)
    {
        if (string.IsNullOrEmpty(name))
            throw new ArgumentNullException();

        Name = name;
    }

    public string Name { get; }
}

public class PayOrder
{
    public PayOrder() { }

    public string Paylink { get; }
}

public interface IDeliveryWarehouse
{
    public bool CanIssue(Good good, int countGoods);

    public void TransferForDelivery(Good good, int countGoods);
}

public class GoodEqualityCompare : IEqualityComparer<Good>
{
    public bool Equals(Good? good1, Good? good2)
    {
        if (ReferenceEquals(good1, good2)) 
            return true;

        if (good1 == null || good2 == null)
            return false;

        return good1.Name == good2.Name;
    }

    public int GetHashCode(Good good) => good.Name.GetHashCode();
}"
UL7iFex0,WeeWX CSV Import Config,lightmaster,SSH Config,Tuesday 9th of April 2024 11:09:44 PM CDT,"# EXAMPLE CONFIGURATION FILE FOR IMPORTING FROM CSV FILES
#
# Copyright (c) 2009-2024 Tom Keffer <tkeffer@gmail.com> and Gary Roderick.
# See the file LICENSE.txt for your rights.

##############################################################################

# Specify the source. Available options are:
#   CSV - import obs from a single CSV format file
#   WU - import obs from a Weather Underground PWS history
#   Cumulus - import obs from a one or more Cumulus monthly log files
#   WD - import obs from a one or more WD monthly log files
#   WeatherCat - import obs from a one or more WeatherCat monthly .cat files
# Format is:
#   source = (CSV | WU | Cumulus | WD | WeatherCat)
source = CSV

##############################################################################

[CSV]
    # Parameters used when importing from a CSV file

    # Path and name of our CSV source file. Format is:
    #   file = full path and filename
    file = /tmp/meteobridge.csv

    # Specify the character used to separate fields. The character must be
    # enclosed in quotes. Format is:
    #   delimiter = '<single character>'
    # Default is ',' (comma).
    delimiter = ','
    
    # Specify the character used as the decimal point. The character must be
    # enclosed in quotes.
    # Format is:
    #   decimal = '<single character>'
    #   or
    # Default is '.' (period).
    decimal = '.'

    # If there is no mapped interval field how will the interval field be
    # determined for the imported records. Available options are:
    #   derive - Derive the interval field from the timestamp of successive
    #            records. This setting is best used when there are no missing
    #            records from period being imported. Missing records will cause
    #            the interval field to be incorrectly calculated for some
    #            records.
    #   conf   - Use the interval setting from weewx.conf. This setting is best
    #            used if the records to be imported have been produced by WeeWX
    #            or some other means with the same archive interval as set in
    #            weewx.conf on this machine.
    #   x      - Use a fixed interval of 'x' minutes for every record where 'x'
    #            is a number. This setting is best used if the records to be
    #            imported are equally spaced in time but there are some missing
    #            records.
    #
    # Note: If there is a mapped interval field this setting will be ignored.
    # Format is:
    #   interval = (derive | conf | x)
    # Default is derive.
    interval = derive

    # Should the [StdQC] max/min limits in weewx.conf be applied to the
    # imported data. This may be useful if the source has extreme values that
    # are clearly incorrect for some observations. Available options are:
    #   True  - weewx.conf [StdQC] max/min limits are applied.
    #   False - weewx.conf [StdQC] max/min limits are not applied.
    # Format is:
    #   qc = (True | False)
    # Default is True.
    qc = True

    # Should any missing derived observations be calculated from the imported
    # data if possible. Available options are:
    #   True  - Any missing derived observations are calculated.
    #   False - Any missing derived observations are not calculated.
    # Format is:
    #   calc_missing = (True | False)
    # Default is True.
    calc_missing = True

    # Specify how imported data fields that contain invalid data (eg a numeric
    # field containing non-numeric data) are handled. Available options are:
    #   True  - The invalid data is ignored, the WeeWX target field is set to
    #           None and the import continues.
    #   False - The import is halted.
    # Format is:
    #   ignore_invalid_data = (True | False)
    # Default is True.
    ignore_invalid_data = True

    # Imported records are written to archive in transactions of 'tranche'
    # records at a time. Increase for faster throughput, decrease to reduce
    # memory requirements. Format is:
    #   tranche = x
    # where x is an integer
    # Default is 250.
    tranche = 250

    # Specify whether a UV sensor was used to produce UV observation data.
    # Available options are:
    #   True  - UV sensor was used and UV data will be imported.
    #   False - UV sensor was not used and any UV data will not be imported.
    #           UV field will be set to None/NULL.
    # For a CSV import UV_sensor should be set to False if a UV sensor was
    # NOT present when the import data was created. Otherwise it may be set to
    # True or omitted. Format is:
    #   UV_sensor = (True | False)
    # Default is True.
    UV_sensor = True

    # Specify whether a solar radiation sensor was used to produce solar
    # radiation observation data. Available options are:
    #   True  - Solar radiation sensor was used and solar radiation data will
    #           be imported.
    #   False - Solar radiation sensor was not used and any solar radiation
    #           data will not be imported. radiation field will be set to
    #           None/NULL.
    # For a CSV import solar_sensor should be set to False if a solar radiation
    # sensor was NOT present when the import data was created. Otherwise it may
    # be set to True or omitted. Format is:
    #   solar_sensor = (True | False)
    # Default is True.
    solar_sensor = True

    # Date-time format of CSV field from which the WeeWX archive record
    # dateTime field is to be extracted. The import utility first attempts to
    # interpret date-time data in this format, if this fails it then attempts
    # to interpret it as a timestamp and if this fails an error is raised. Uses
    # Python strptime() format codes. Format is:
    #   raw_datetime_format = Python strptime() format string
    raw_datetime_format = %Y-%m-%d %H:%M:%S

    # Lower and upper bounds for imported wind direction. It is possible,
    # particularly for a calculated direction, to have a value (eg -45) outside
    # of the WeeWX limits (0 to 360 inclusive). Format is:
    #
    # wind_direction = lower,upper
    #
    # where :
    #   lower is the lower limit of acceptable wind direction in degrees
    #   (may be negative)
    #   upper is the upper limit of acceptable wind direction in degrees
    #
    # Imported values from lower to upper will be normalised to the range 0 to
    # 360. Values outside of the parameter range will be stored as None.
    # Default is -360,360.
    wind_direction = 0,360

    # Map CSV record fields to WeeWX archive fields. Format for each map entry
    # is:
    #
    #   [[[weewx_archive_field_name]]]
    #       source_field = csv_field_name
    #       unit = weewx_unit_name
    #       is_cumulative = True | False
    #       is_text = True | False
    #
    # where:
    #   weewx_archive_field_name - An observation name in the WeeWX database
    #                              schema.
    #   source_field             - Config option specifying the CSV field being
    #                              mapped.
    #   csv_field_name           - The name of a field from the CSV file.
    #   unit                     - Config option specifying the unit used by
    #                              the CSV field being mapped.
    #   weewx_unit_name          - The WeeWX unit name for the the units used
    #                              by csv_field_name.
    #   is_cumulative            - Config option specifying whether the CSV
    #                              field being mapped is cumulative,
    #                              e.g: dayrain. Optional, default value is
    #                              False.
    #   is_text                  - Config option specifying whether the CSV
    #                              field being mapped is text. Optional,
    #                              default value is False.
    # For example,
    #   [[[outTemp]]]
    #       source_field = Temp
    #       unit = degree_C
    # would map the CSV field 'Temp', in degrees C, to the WeeWX archive field
    # 'outTemp'.
    #
    # A mapping for WeeWX field 'dateTime' is mandatory and the WeeWX unit name
    # for the 'dateTime' mapping must be 'unix_epoch'. For example,
    #   [[[dateTime]]]
    #       source_field = csv_date_and_time
    #       unit = unix_epoch
    # would map the CSV field 'csv_date_and_time' to the WeeWX 'dateTime' field
    # with the 'csv_date_and_time' field being interpreted first using the
    # format specified at the 'raw_datetime_format' config option and if that
    # fails as a unix epoch timestamp.
    #
    # If the CSV data contains a field with WeeWX 'usUnits' data the field may
    # be mapped to WeeWX field 'usUnits' and this value will be used to
    # determine the units used for each CSV field. If a 'usUnits' mapping is
    # included the 'unit' option may be omitted as the 'usUnits' value is
    # unitless. If the 'unit' option is set it will be ignored. If a 'usUnits'
    # mapping is included the 'unit' option for all other fields may be
    # omitted.
    #
    # WeeWX archive fields that do not exist in the CSV data may be omitted.
    # Any omitted fields that are derived (eg 'dewpoint') may be calculated
    # during import using the equivalent of the WeeWX StdWXCalculate service
    # through setting the 'calc-missing' parameter above.
    [[FieldMap]]
        [[[dateTime]]]
            source_field = dateTime
            unit = unix_epoch
        [[[outTemp]]]
            source_field = outTemp
            unit = degree_F
        [[[inTemp]]]
            source_field = inTemp
            unit = degree_F
        [[[outHumidity]]]
            source_field = outHumidity
            unit = percent
        [[[inHumidity]]]
            source_field = inHumidity
            unit = percent
        [[[dewpoint]]]
            source_field = dewpoint
            unit = degree_F
        [[[heatindex]]]
            source_field = heatindex
            unit = degree_F
        [[[windchill]]]
            source_field = windchill
            unit = degree_F
        [[[barometer]]]
            source_field = barometer
            unit = hPa
        [[[rain]]]
            source_field = rain
            unit = inch
            is_cumulative = True
        [[[rainRate]]]
            source_field = rainRate
            unit = inch_per_hour
        [[[windSpeed]]]
            source_field = windSpeed
            unit = mile_per_hour
        [[[windDir]]]
            source_field = windDir
            unit = degree_compass
        [[[windGust]]]
            source_field = windGust
            unit = mile_per_hour
        [[[radiation]]]
            source_field = radiation
            unit = watt_per_meter_squared
        [[[UV]]]
            source_field = UV
            unit = uv_index
        [[[inDewpoint]]]
            source_field = inDewpoint
            unit = degree_F
        [[[pressure]]]
            source_field = pressure
            unit = hPa"
SWL6NcFD,subarray repeat numbers,SaNik74,C#,Tuesday 9th of April 2024 11:02:57 PM CDT,"internal class Program
{
    static void Main(string[] args)
    {
        Random random = new Random();
        int minRandomValue = 1;
        int maxRandomValue = 10;
        int sizeNumberArray = 30;
        int[] numbersArray = new int[sizeNumberArray];
        int countRepeatNumber = 1;
        int tempCountRepeatNumber = 1;
        int valueMaxRepeatNumber = 0;
        bool isSameNumberRepeat = false;

        Console.WriteLine(""Массив чисел:"");

        for (int i = 0; i < numbersArray.Length; i++)
        {
            numbersArray[i] = random.Next(minRandomValue, maxRandomValue);
            Console.Write(numbersArray[i] + "" "");
        }

        for (int i = 0; i < numbersArray.Length - 1; i++)
        {
            if (numbersArray[i] == numbersArray[i + 1])
            {
                tempCountRepeatNumber++;
            }
            else if (numbersArray[i] != numbersArray[i + 1] && countRepeatNumber < tempCountRepeatNumber)
            {
                countRepeatNumber = tempCountRepeatNumber;
                tempCountRepeatNumber = 1;
                valueMaxRepeatNumber = numbersArray[i - 1];
                isSameNumberRepeat = false;
            }
            else if (numbersArray[i] != numbersArray[i + 1] && countRepeatNumber == tempCountRepeatNumber)
            {
                tempCountRepeatNumber = 1;
                isSameNumberRepeat = true;
            }
            else
            {
                tempCountRepeatNumber = 1;
            }
        }

        Console.WriteLine();

        if (isSameNumberRepeat == true)
        {
            Console.WriteLine(""Нет самого длинного подмассива."");
        }
        else
        {
            Console.WriteLine($""Число {valueMaxRepeatNumber} повторяется {countRepeatNumber} раз."");
        }
    }
}"
JjZkRKcz,sea otter animations,jayhillx,Java,Tuesday 9th of April 2024 07:56:36 PM CDT,"(in SeaOtterModel class)
    public void setupAnim(T entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
        this.root().getAllParts().forEach(ModelPart::resetPose);
        this.head.xRot = headPitch * 0.017453292F;
        this.head.yRot = netHeadYaw * 0.017453292F;

        if (entity.isInWaterOrBubble()) {
            this.animateWalk(SeaOtterAnimation.SEA_OTTER_SWIMMING, limbSwing, limbSwingAmount, 10.0F, 8.5F);
        }

        this.animate(entity.idleAnimationState, SeaOtterAnimation.SEA_OTTER_IDLE, ageInTicks);
    }
    
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(in SeaOtter entity class)

    public void tick() {
        super.tick();
        if (this.level().isClientSide()) {
            this.idleAnimationState.animateWhen(this.isInWaterOrBubble() && !this.walkAnimation.isMoving(), this.tickCount);
        }
    }"
FMNH8q06,RUN.bat,Jack282,Batch,Tuesday 9th of April 2024 07:51:23 PM CDT,"SET CMAKE_BUILD_TYPE=Release
SET LOC=%~dp0
SET APPDATA=%LOC%AppData
SET CMAKE_PREFIX_PATH=D:\Users\JackHarro\Projects\Forks\Animated cursors in OBS\win64\include
SET QTDIR=D:\Users\JackHarro\Projects\Forks\Animated cursors in OBS\win64\qt\5.15.2\msvc2019_64\include
SET Qt5Widgets_DIR=%QTDIR%

CMAKE -S . -B .\release
REM CD release
REM CMAKE --build . --profile Release"
7aHbFQB5,2024-04-09_stats.json,rdp_snitch,JSON,Tuesday 9th of April 2024 07:18:15 PM CDT,"{
  ""ip"": {
    ""37.27.54.170"": 9,
    ""167.94.138.51"": 3,
    ""194.165.16.37"": 6,
    ""87.251.75.145"": 9,
    ""96.8.115.25"": 3,
    ""198.235.24.217"": 9,
    ""194.165.16.76"": 6,
    ""45.227.254.9"": 3,
    ""162.142.125.214"": 3,
    ""162.142.125.11"": 3,
    ""112.4.139.162"": 3,
    ""185.170.144.3"": 6,
    ""212.41.9.11"": 9,
    ""2.57.149.186"": 6,
    ""80.94.95.203"": 3,
    ""165.154.12.38"": 3,
    ""198.235.24.182"": 9,
    ""103.237.86.229"": 6,
    ""103.20.97.235"": 3,
    ""198.135.49.131"": 6,
    ""62.204.41.225"": 12,
    ""212.70.149.146"": 3,
    ""159.223.124.42"": 12,
    ""45.33.43.165"": 3,
    ""194.165.16.73"": 6,
    ""36.137.3.251"": 12,
    ""81.19.135.47"": 9,
    ""45.227.254.8"": 6,
    ""116.140.196.215"": 3,
    ""198.235.24.73"": 9,
    ""46.19.143.42"": 3,
    ""196.190.117.7"": 3,
    ""84.201.2.2"": 6,
    ""80.66.88.211"": 3,
    ""198.235.24.118"": 9,
    ""199.45.154.23"": 3
  },
  ""asn"": {
    ""AS24940"": 9,
    ""AS398324"": 9,
    ""AS48721"": 18,
    ""AS208091"": 12,
    ""AS36352"": 3,
    ""AS396982"": 36,
    ""AS267784"": 9,
    ""AS56046"": 3,
    ""AS197414"": 6,
    ""AS49505"": 9,
    ""AS208312"": 6,
    ""AS204428"": 6,
    ""AS135377"": 3,
    ""AS150860"": 6,
    ""AS150880"": 3,
    ""AS396073"": 6,
    ""AS59425"": 12,
    ""AS14061"": 12,
    ""AS63949"": 3,
    ""AS9808"": 12,
    ""AS209588"": 9,
    ""AS4837"": 3,
    ""AS51852"": 3,
    ""AS24757"": 3,
    ""AS44066"": 6,
    ""AS398722"": 3
  },
  ""isp"": {
    ""Hetzner Online GmbH"": 9,
    ""Censys, Inc."": 12,
    ""Flyservers S.A."": 36,
    ""Xhost Internet Solutions LP"": 15,
    ""HostPapa"": 3,
    ""Google LLC"": 36,
    ""China Mobile Communications Corporation"": 3,
    ""OOO \""Network of data-centers \""Selectel\"""": 9,
    ""Red Byte LLC"": 6,
    ""SS-Net"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""JETCLOUD TECHNOLOGY CO., LTD"": 6,
    ""Fast Byte Fast Data Company Limited"": 3,
    ""Majestic Hosting Solutions, LLC"": 6,
    ""Horizon LLC"": 12,
    ""DigitalOcean, LLC"": 12,
    ""Akamai Technologies, Inc."": 3,
    ""China Mobile"": 12,
    ""China Unicom CHINA169 Network"": 3,
    ""Private Layer INC"": 3,
    ""Ethiotelecom"": 3,
    ""www.accelerated.de"": 6,
    ""Xhost Internet Solutions"": 3
  },
  ""org"": {
    ""Hetzner Online GmbH"": 9,
    ""Censys, Inc"": 3,
    ""Flyservers S.A"": 18,
    ""Xhost Internet Solutions"": 9,
    ""Michael Charlery"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""UAB Host Baltic"": 9,
    ""Censys Inc"": 6,
    ""China Mobile Communications Corporation"": 15,
    ""Xhostis"": 6,
    ""Unknown"": 12,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Unmanaged LTD"": 3,
    ""Ucloud Information Technology"": 3,
    ""Jetcloud Technology Co., LTD"": 6,
    ""FASTBYTE"": 3,
    ""Majestic Hosting Solutions, LLC"": 6,
    ""Horizon LLC"": 12,
    ""4Media Ltd"": 3,
    ""DigitalOcean, LLC"": 12,
    ""Linode"": 3,
    ""Alviva Holding Limited"": 9,
    ""China United Network Communications Corporation Limited"": 3,
    ""Client1096"": 3,
    ""diva-e Datacenters GmbH"": 6,
    ""XHOSTIS"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""Uusimaa"": 9,
    ""Michigan"": 9,
    ""Kaunas"": 18,
    ""North Holland"": 15,
    ""Texas"": 9,
    ""California"": 39,
    ""Vilnius"": 9,
    ""Jiangsu"": 3,
    ""Moscow"": 21,
    ""Lesser Poland"": 6,
    ""Budapest"": 3,
    ""Dubai"": 3,
    ""Ho Chi Minh"": 9,
    ""Sliven"": 3,
    ""New Jersey"": 12,
    ""Guangdong"": 12,
    ""Hesse"": 15,
    ""Beijing"": 3,
    ""Zurich"": 3,
    ""Addis Ababa"": 3,
    ""Drenthe"": 3,
    ""New York"": 3
  },
  ""country"": {
    ""Finland"": 9,
    ""United States"": 72,
    ""Lithuania"": 27,
    ""The Netherlands"": 18,
    ""China"": 18,
    ""Russia"": 21,
    ""Poland"": 6,
    ""Hungary"": 3,
    ""United Arab Emirates"": 3,
    ""Vietnam"": 9,
    ""Bulgaria"": 3,
    ""Germany"": 15,
    ""Switzerland"": 3,
    ""Ethiopia"": 3
  },
  ""account"": {
    ""hello"": 36,
    ""(empty)"": 18,
    ""Test"": 39,
    ""Administr"": 30,
    ""nNrhnrV"": 3,
    ""bWuLYriPJ"": 3,
    ""ItQEFz"": 3,
    ""CQAUGs"": 3,
    ""Domain"": 30,
    ""Administrator"": 3,
    ""ITdYiQyDF"": 3,
    ""ldpTpq"": 3,
    ""sYktCY"": 3,
    ""v5fzyhlx"": 12,
    ""beio"": 3,
    ""NrurbHUzU"": 3,
    ""OKGyad"": 3,
    ""jZtmaA"": 3,
    ""MItbGTcXh"": 3,
    ""zMtlvu"": 3,
    ""suDFHo"": 3
  },
  ""keyboard"": {
    ""Unknown"": 210
  },
  ""client_build"": {
    ""Unknown"": 210
  },
  ""client_name"": {
    ""Unknown"": 210
  },
  ""ip_type"": {
    ""hosting"": 90,
    ""Unknown"": 99,
    ""mobile"": 21
  }
}"
ZWy2xhFQ,blur v1,Theo107,C,Tuesday 9th of April 2024 07:17:29 PM CDT,"void blur(int height, int width, RGBTRIPLE image[height][width])
{
    // Create a copy of image
    RGBTRIPLE copy[height][width];
    for (int i = 0; i < height; i++)
    {
        for (int j = 0; j < width; j++)
        {
            copy[i][j] = image[i][j];
        }
    }

    for (int i = 0; i < height; i++)
    {
        for (int j = 0; j < width; j++)
        {
            int newRed = 0;
            int newGreen = 0;
            int newBlue = 0;
            float avgCount = 0.0;

            for (int k = -1; k <= 1; k++)
            {
                for (int l = -1; l <= -1; l++)
                {
                    if (!(i + k == -1) && !(i + k == height) && !(j + l == -1) && !(j + l == width))
                    {
                        newRed += copy[(i+k)][(j+l)].rgbtRed;
                        newGreen += copy[(i+k)][(j+l)].rgbtGreen;
                        newBlue += copy[(i+k)][(j+l)].rgbtBlue;
                        avgCount += 1.0;
                    }
                }
            }

            image[i][j].rgbtRed = round(newRed / avgCount);
            image[i][j].rgbtGreen = round(newGreen / avgCount);
            image[i][j].rgbtBlue = round(newBlue / avgCount);
        }
    }
    return;
}"
VxS9JTAc,2024-04-09_stats.json,rdp_snitch,JSON,Tuesday 9th of April 2024 07:16:06 PM CDT,"{
  ""ip"": {
    ""37.27.54.170"": 6,
    ""167.94.138.51"": 2,
    ""194.165.16.37"": 4,
    ""87.251.75.145"": 6,
    ""96.8.115.25"": 2,
    ""198.235.24.217"": 6,
    ""194.165.16.76"": 4,
    ""45.227.254.9"": 2,
    ""162.142.125.214"": 2,
    ""162.142.125.11"": 2,
    ""112.4.139.162"": 2,
    ""185.170.144.3"": 4,
    ""212.41.9.11"": 6,
    ""2.57.149.186"": 4,
    ""80.94.95.203"": 2,
    ""165.154.12.38"": 2,
    ""198.235.24.182"": 6,
    ""103.237.86.229"": 4,
    ""103.20.97.235"": 2,
    ""198.135.49.131"": 4,
    ""62.204.41.225"": 8,
    ""212.70.149.146"": 2,
    ""159.223.124.42"": 8,
    ""45.33.43.165"": 2,
    ""194.165.16.73"": 4,
    ""36.137.3.251"": 8,
    ""81.19.135.47"": 6,
    ""45.227.254.8"": 4,
    ""116.140.196.215"": 2,
    ""198.235.24.73"": 6,
    ""46.19.143.42"": 2,
    ""196.190.117.7"": 2,
    ""84.201.2.2"": 4,
    ""80.66.88.211"": 2,
    ""198.235.24.118"": 6,
    ""199.45.154.23"": 2
  },
  ""asn"": {
    ""AS24940"": 6,
    ""AS398324"": 6,
    ""AS48721"": 12,
    ""AS208091"": 8,
    ""AS36352"": 2,
    ""AS396982"": 24,
    ""AS267784"": 6,
    ""AS56046"": 2,
    ""AS197414"": 4,
    ""AS49505"": 6,
    ""AS208312"": 4,
    ""AS204428"": 4,
    ""AS135377"": 2,
    ""AS150860"": 4,
    ""AS150880"": 2,
    ""AS396073"": 4,
    ""AS59425"": 8,
    ""AS14061"": 8,
    ""AS63949"": 2,
    ""AS9808"": 8,
    ""AS209588"": 6,
    ""AS4837"": 2,
    ""AS51852"": 2,
    ""AS24757"": 2,
    ""AS44066"": 4,
    ""AS398722"": 2
  },
  ""isp"": {
    ""Hetzner Online GmbH"": 6,
    ""Censys, Inc."": 8,
    ""Flyservers S.A."": 24,
    ""Xhost Internet Solutions LP"": 10,
    ""HostPapa"": 2,
    ""Google LLC"": 24,
    ""China Mobile Communications Corporation"": 2,
    ""OOO \""Network of data-centers \""Selectel\"""": 6,
    ""Red Byte LLC"": 4,
    ""SS-Net"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""JETCLOUD TECHNOLOGY CO., LTD"": 4,
    ""Fast Byte Fast Data Company Limited"": 2,
    ""Majestic Hosting Solutions, LLC"": 4,
    ""Horizon LLC"": 8,
    ""DigitalOcean, LLC"": 8,
    ""Akamai Technologies, Inc."": 2,
    ""China Mobile"": 8,
    ""China Unicom CHINA169 Network"": 2,
    ""Private Layer INC"": 2,
    ""Ethiotelecom"": 2,
    ""www.accelerated.de"": 4,
    ""Xhost Internet Solutions"": 2
  },
  ""org"": {
    ""Hetzner Online GmbH"": 6,
    ""Censys, Inc"": 2,
    ""Flyservers S.A"": 12,
    ""Xhost Internet Solutions"": 6,
    ""Michael Charlery"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 6,
    ""Censys Inc"": 4,
    ""China Mobile Communications Corporation"": 10,
    ""Xhostis"": 4,
    ""Unknown"": 8,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Unmanaged LTD"": 2,
    ""Ucloud Information Technology"": 2,
    ""Jetcloud Technology Co., LTD"": 4,
    ""FASTBYTE"": 2,
    ""Majestic Hosting Solutions, LLC"": 4,
    ""Horizon LLC"": 8,
    ""4Media Ltd"": 2,
    ""DigitalOcean, LLC"": 8,
    ""Linode"": 2,
    ""Alviva Holding Limited"": 6,
    ""China United Network Communications Corporation Limited"": 2,
    ""Client1096"": 2,
    ""diva-e Datacenters GmbH"": 4,
    ""XHOSTIS"": 2,
    ""Censys, Inc."": 2
  },
  ""regionName"": {
    ""Uusimaa"": 6,
    ""Michigan"": 6,
    ""Kaunas"": 12,
    ""North Holland"": 10,
    ""Texas"": 6,
    ""California"": 26,
    ""Vilnius"": 6,
    ""Jiangsu"": 2,
    ""Moscow"": 14,
    ""Lesser Poland"": 4,
    ""Budapest"": 2,
    ""Dubai"": 2,
    ""Ho Chi Minh"": 6,
    ""Sliven"": 2,
    ""New Jersey"": 8,
    ""Guangdong"": 8,
    ""Hesse"": 10,
    ""Beijing"": 2,
    ""Zurich"": 2,
    ""Addis Ababa"": 2,
    ""Drenthe"": 2,
    ""New York"": 2
  },
  ""country"": {
    ""Finland"": 6,
    ""United States"": 48,
    ""Lithuania"": 18,
    ""The Netherlands"": 12,
    ""China"": 12,
    ""Russia"": 14,
    ""Poland"": 4,
    ""Hungary"": 2,
    ""United Arab Emirates"": 2,
    ""Vietnam"": 6,
    ""Bulgaria"": 2,
    ""Germany"": 10,
    ""Switzerland"": 2,
    ""Ethiopia"": 2
  },
  ""account"": {
    ""hello"": 24,
    ""(empty)"": 12,
    ""Test"": 26,
    ""Administr"": 20,
    ""nNrhnrV"": 2,
    ""bWuLYriPJ"": 2,
    ""ItQEFz"": 2,
    ""CQAUGs"": 2,
    ""Domain"": 20,
    ""Administrator"": 2,
    ""ITdYiQyDF"": 2,
    ""ldpTpq"": 2,
    ""sYktCY"": 2,
    ""v5fzyhlx"": 8,
    ""beio"": 2,
    ""NrurbHUzU"": 2,
    ""OKGyad"": 2,
    ""jZtmaA"": 2,
    ""MItbGTcXh"": 2,
    ""zMtlvu"": 2,
    ""suDFHo"": 2
  },
  ""keyboard"": {
    ""Unknown"": 140
  },
  ""client_build"": {
    ""Unknown"": 140
  },
  ""client_name"": {
    ""Unknown"": 140
  },
  ""ip_type"": {
    ""hosting"": 60,
    ""Unknown"": 66,
    ""mobile"": 14
  }
}"
ZbcLmsUE,2024-04-09_stats.json,rdp_snitch,JSON,Tuesday 9th of April 2024 07:15:07 PM CDT,"{
  ""ip"": {
    ""37.27.54.170"": 3,
    ""167.94.138.51"": 1,
    ""194.165.16.37"": 2,
    ""87.251.75.145"": 3,
    ""96.8.115.25"": 1,
    ""198.235.24.217"": 3,
    ""194.165.16.76"": 2,
    ""45.227.254.9"": 1,
    ""162.142.125.214"": 1,
    ""162.142.125.11"": 1,
    ""112.4.139.162"": 1,
    ""185.170.144.3"": 2,
    ""212.41.9.11"": 3,
    ""2.57.149.186"": 2,
    ""80.94.95.203"": 1,
    ""165.154.12.38"": 1,
    ""198.235.24.182"": 3,
    ""103.237.86.229"": 2,
    ""103.20.97.235"": 1,
    ""198.135.49.131"": 2,
    ""62.204.41.225"": 4,
    ""212.70.149.146"": 1,
    ""159.223.124.42"": 4,
    ""45.33.43.165"": 1,
    ""194.165.16.73"": 2,
    ""36.137.3.251"": 4,
    ""81.19.135.47"": 3,
    ""45.227.254.8"": 2,
    ""116.140.196.215"": 1,
    ""198.235.24.73"": 3,
    ""46.19.143.42"": 1,
    ""196.190.117.7"": 1,
    ""84.201.2.2"": 2,
    ""80.66.88.211"": 1,
    ""198.235.24.118"": 3,
    ""199.45.154.23"": 1
  },
  ""asn"": {
    ""AS24940"": 3,
    ""AS398324"": 3,
    ""AS48721"": 6,
    ""AS208091"": 4,
    ""AS36352"": 1,
    ""AS396982"": 12,
    ""AS267784"": 3,
    ""AS56046"": 1,
    ""AS197414"": 2,
    ""AS49505"": 3,
    ""AS208312"": 2,
    ""AS204428"": 2,
    ""AS135377"": 1,
    ""AS150860"": 2,
    ""AS150880"": 1,
    ""AS396073"": 2,
    ""AS59425"": 4,
    ""AS14061"": 4,
    ""AS63949"": 1,
    ""AS9808"": 4,
    ""AS209588"": 3,
    ""AS4837"": 1,
    ""AS51852"": 1,
    ""AS24757"": 1,
    ""AS44066"": 2,
    ""AS398722"": 1
  },
  ""isp"": {
    ""Hetzner Online GmbH"": 3,
    ""Censys, Inc."": 4,
    ""Flyservers S.A."": 12,
    ""Xhost Internet Solutions LP"": 5,
    ""HostPapa"": 1,
    ""Google LLC"": 12,
    ""China Mobile Communications Corporation"": 1,
    ""OOO \""Network of data-centers \""Selectel\"""": 3,
    ""Red Byte LLC"": 2,
    ""SS-Net"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""JETCLOUD TECHNOLOGY CO., LTD"": 2,
    ""Fast Byte Fast Data Company Limited"": 1,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""Horizon LLC"": 4,
    ""DigitalOcean, LLC"": 4,
    ""Akamai Technologies, Inc."": 1,
    ""China Mobile"": 4,
    ""China Unicom CHINA169 Network"": 1,
    ""Private Layer INC"": 1,
    ""Ethiotelecom"": 1,
    ""www.accelerated.de"": 2,
    ""Xhost Internet Solutions"": 1
  },
  ""org"": {
    ""Hetzner Online GmbH"": 3,
    ""Censys, Inc"": 1,
    ""Flyservers S.A"": 6,
    ""Xhost Internet Solutions"": 3,
    ""Michael Charlery"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 3,
    ""Censys Inc"": 2,
    ""China Mobile Communications Corporation"": 5,
    ""Xhostis"": 2,
    ""Unknown"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Unmanaged LTD"": 1,
    ""Ucloud Information Technology"": 1,
    ""Jetcloud Technology Co., LTD"": 2,
    ""FASTBYTE"": 1,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""Horizon LLC"": 4,
    ""4Media Ltd"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Linode"": 1,
    ""Alviva Holding Limited"": 3,
    ""China United Network Communications Corporation Limited"": 1,
    ""Client1096"": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""XHOSTIS"": 1,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Uusimaa"": 3,
    ""Michigan"": 3,
    ""Kaunas"": 6,
    ""North Holland"": 5,
    ""Texas"": 3,
    ""California"": 13,
    ""Vilnius"": 3,
    ""Jiangsu"": 1,
    ""Moscow"": 7,
    ""Lesser Poland"": 2,
    ""Budapest"": 1,
    ""Dubai"": 1,
    ""Ho Chi Minh"": 3,
    ""Sliven"": 1,
    ""New Jersey"": 4,
    ""Guangdong"": 4,
    ""Hesse"": 5,
    ""Beijing"": 1,
    ""Zurich"": 1,
    ""Addis Ababa"": 1,
    ""Drenthe"": 1,
    ""New York"": 1
  },
  ""country"": {
    ""Finland"": 3,
    ""United States"": 24,
    ""Lithuania"": 9,
    ""The Netherlands"": 6,
    ""China"": 6,
    ""Russia"": 7,
    ""Poland"": 2,
    ""Hungary"": 1,
    ""United Arab Emirates"": 1,
    ""Vietnam"": 3,
    ""Bulgaria"": 1,
    ""Germany"": 5,
    ""Switzerland"": 1,
    ""Ethiopia"": 1
  },
  ""account"": {
    ""hello"": 12,
    ""(empty)"": 6,
    ""Test"": 13,
    ""Administr"": 10,
    ""nNrhnrV"": 1,
    ""bWuLYriPJ"": 1,
    ""ItQEFz"": 1,
    ""CQAUGs"": 1,
    ""Domain"": 10,
    ""Administrator"": 1,
    ""ITdYiQyDF"": 1,
    ""ldpTpq"": 1,
    ""sYktCY"": 1,
    ""v5fzyhlx"": 4,
    ""beio"": 1,
    ""NrurbHUzU"": 1,
    ""OKGyad"": 1,
    ""jZtmaA"": 1,
    ""MItbGTcXh"": 1,
    ""zMtlvu"": 1,
    ""suDFHo"": 1
  },
  ""keyboard"": {
    ""Unknown"": 70
  },
  ""client_build"": {
    ""Unknown"": 70
  },
  ""client_name"": {
    ""Unknown"": 70
  },
  ""ip_type"": {
    ""hosting"": 30,
    ""Unknown"": 33,
    ""mobile"": 7
  }
}"
TX53BBJm,nancy drew games.json,princesselsa,JSON,Tuesday 9th of April 2024 07:07:57 PM CDT,"{""secrets can kill"": ""#1	Secrets Can Kill / Secrets Can Kill Remastered	(SCK) | Setting: Paseo del Mar, Florida | Released November 5, 1998 (Windows), Discontinued July 31, 2010 / August 24, 2010 (Windows, Mac) | Based on Nancy Drew Files #1: Secrets Can Kill"",
""1"": ""#1	Secrets Can Kill / Secrets Can Kill Remastered	(SCK) | Setting: Paseo del Mar, Florida | Released November 5, 1998 (Windows), Discontinued July 31, 2010 / August 24, 2010 (Windows, Mac) | Based on Nancy Drew Files #1: Secrets Can Kill"",
""#1"": ""#1	Secrets Can Kill / Secrets Can Kill Remastered	(SCK) | Setting: Paseo del Mar, Florida | Released November 5, 1998 (Windows), Discontinued July 31, 2010 / August 24, 2010 (Windows, Mac) | Based on Nancy Drew Files #1: Secrets Can Kill"",
""sck"": ""#1	Secrets Can Kill / Secrets Can Kill Remastered	(SCK) | Setting: Paseo del Mar, Florida | Released November 5, 1998 (Windows), Discontinued July 31, 2010 / August 24, 2010 (Windows, Mac) | Based on Nancy Drew Files #1: Secrets Can Kill"",
""florida"": ""#1	Secrets Can Kill / Secrets Can Kill Remastered	(SCK) | Setting: Paseo del Mar, Florida | Released November 5, 1998 (Windows), Discontinued July 31, 2010 / August 24, 2010 (Windows, Mac) | Based on Nancy Drew Files #1: Secrets Can Kill"",
""paseo del mar"": ""#1	Secrets Can Kill / Secrets Can Kill Remastered	(SCK) | Setting: Paseo del Mar, Florida | Released November 5, 1998 (Windows), Discontinued July 31, 2010 / August 24, 2010 (Windows, Mac) | Based on Nancy Drew Files #1: Secrets Can Kill"",
""stay tuned for danger"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""stfd"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""2"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""#2"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""nyc"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""new york city"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""new york new york"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""new york, new york"": ""#2	Stay Tuned for Danger	(STFD) | Setting: New York, NY | Released November 13, 1999 (Windows), Discontinued November 17, 2011, Re-released August 10, 2016 | Based on Nancy Drew Files #17: Stay Tuned for Danger"",
""message in a haunted mansion"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""mhm"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""message haunted mansion"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""3"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""#3"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""sf"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""san francisco"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""san fran"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""sanfran"": ""#3	Message in a Haunted Mansion	(MHM) | Setting: San Francisco, CA | Released November 24, 2000 (Windows), November 15, 2001 (GBA) | Based on Nancy Drew #122: The Message in the Haunted Mansion"",
""treasure in the royal tower"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""trt"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""4"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""#4"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""wisconsin"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""butter ridge"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""wi"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""butter ridge, wi"": ""#4	Treasure in the Royal Tower	(TRT) | Setting: Butter Ridge, Wisconsin | Released August 1, 2001 (Windows) | Based on Nancy Drew #128: The Treasure in the Royal Tower"",
""the final scene"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""final scene"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""fin"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""#5"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""5"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""st louis"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""st. louis"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""st. louis, mo"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""st louis mo"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""missouri"": ""#5	The Final Scene	(FIN) | Setting: St. Louis, MO | Released November 1, 2001 (Windows) | Based on Nancy Drew Files #38: The Final Scene"",
""secret of the scarlet hand"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""ssh"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""scarlet hand"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""washington, dc"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""washington, d.c."": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""washington dc"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""6"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""#6"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""dc"": ""#6	Secret of the Scarlet Hand	(SSH) | Setting: Washington, D.C. | Released August 12, 2002 (Windows) | Based on Nancy Drew #124: The Secret of the Scarlet Hand"",
""ghost dogs of moon lake"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""dog"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""moon lake"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""ghost dogs"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""7"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""#7"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""pennsylvania"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""penn"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""pa"": ""#7	Ghost Dogs of Moon Lake	(DOG) | Setting: Moon Lake, Pennsylvania | Released November 1, 2002 (Windows) | Based on Nancy Drew Ghost Stories: 'Ghost Dogs of Whispering Oaks', Nancy Drew #167: Mystery by Moonlight"",
""the haunted carousel"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""haunted carousel"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""carousel"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""car"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""new jersey"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""jersey"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""nj"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""8"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""#8"": ""#8	The Haunted Carousel	(CAR) | Setting: Captain's Cove, New Jersey | Released August 22, 2003 (Windows) | Based on Nancy Drew #72: The Haunted Carousel"",
""danger on deception island"": ""#9	Danger on Deception Island	(DDI) | Setting: Coast of Washington State | Released October 3, 2003 (Windows) | Based on Nancy Drew #153: Whispers in the Fog"",
""ddi"": ""#9	Danger on Deception Island	(DDI) | Setting: Coast of Washington State | Released October 3, 2003 (Windows) | Based on Nancy Drew #153: Whispers in the Fog"",
""washington"": ""#9	Danger on Deception Island	(DDI) | Setting: Coast of Washington State | Released October 3, 2003 (Windows) | Based on Nancy Drew #153: Whispers in the Fog"",
""washington state"": ""#9	Danger on Deception Island	(DDI) | Setting: Coast of Washington State | Released October 3, 2003 (Windows) | Based on Nancy Drew #153: Whispers in the Fog"",
""deception island"": ""#9	Danger on Deception Island	(DDI) | Setting: Coast of Washington State | Released October 3, 2003 (Windows) | Based on Nancy Drew #153: Whispers in the Fog"",
""9"": ""#9	Danger on Deception Island	(DDI) | Setting: Coast of Washington State | Released October 3, 2003 (Windows) | Based on Nancy Drew #153: Whispers in the Fog"",
""#9"": ""#9	Danger on Deception Island	(DDI) | Setting: Coast of Washington State | Released October 3, 2003 (Windows) | Based on Nancy Drew #153: Whispers in the Fog"",
""the secret of shadow ranch"": ""#10	The Secret of Shadow Ranch	(SHA) | Setting: Arizona | Released August 30, 2004 (Windows) | Based on Nancy Drew #5: The Secret of Shadow Ranch"",
""shadow ranch"": ""#10	The Secret of Shadow Ranch	(SHA) | Setting: Arizona | Released August 30, 2004 (Windows) | Based on Nancy Drew #5: The Secret of Shadow Ranch"",
""sha"": ""#10	The Secret of Shadow Ranch	(SHA) | Setting: Arizona | Released August 30, 2004 (Windows) | Based on Nancy Drew #5: The Secret of Shadow Ranch"",
""arizona"": ""#10	The Secret of Shadow Ranch	(SHA) | Setting: Arizona | Released August 30, 2004 (Windows) | Based on Nancy Drew #5: The Secret of Shadow Ranch"",
""10"": ""#10	The Secret of Shadow Ranch	(SHA) | Setting: Arizona | Released August 30, 2004 (Windows) | Based on Nancy Drew #5: The Secret of Shadow Ranch"",
""#10"": ""#10	The Secret of Shadow Ranch	(SHA) | Setting: Arizona | Released August 30, 2004 (Windows) | Based on Nancy Drew #5: The Secret of Shadow Ranch"",
""curse of blackmoor manor"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""blackmoor manor"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""cur"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""11"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""#11"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""london"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""london, england"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""england"": ""#11	Curse of Blackmoor Manor	(CUR) | Setting: London, England | Released October 5, 2004 (Windows), June 25, 2007 (DVD game) | Based on Nancy Drew #77: The Bluebeard Room"",
""secret of the old clock"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""old clock"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""the old clock"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""clk"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""clock"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""12"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""#12"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""titusville"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""titusville, il"": ""#12	Secret of the Old Clock	(CLK) | Setting: Titusville, Illinois | Released July 12, 2005 (Windows) | Based on Nancy Drew #1: The Secret of the Old Clock"",
""last train to blue moon canyon"": ""#13	Last Train to Blue Moon Canyon	(TRN) | Setting: Copper Gorge, Colorado | Released September 15, 2005 (Windows) | Based on Nancy Drew and Hardy Boys SuperMystery #9: Mystery Train"",
""blue moon canyon"": ""#13	Last Train to Blue Moon Canyon	(TRN) | Setting: Copper Gorge, Colorado | Released September 15, 2005 (Windows) | Based on Nancy Drew and Hardy Boys SuperMystery #9: Mystery Train"",
""trn"": ""#13	Last Train to Blue Moon Canyon	(TRN) | Setting: Copper Gorge, Colorado | Released September 15, 2005 (Windows) | Based on Nancy Drew and Hardy Boys SuperMystery #9: Mystery Train"",
""train"": ""#13	Last Train to Blue Moon Canyon	(TRN) | Setting: Copper Gorge, Colorado | Released September 15, 2005 (Windows) | Based on Nancy Drew and Hardy Boys SuperMystery #9: Mystery Train"",
""last train"": ""#13	Last Train to Blue Moon Canyon	(TRN) | Setting: Copper Gorge, Colorado | Released September 15, 2005 (Windows) | Based on Nancy Drew and Hardy Boys SuperMystery #9: Mystery Train"",
""13"": ""#13	Last Train to Blue Moon Canyon	(TRN) | Setting: Copper Gorge, Colorado | Released September 15, 2005 (Windows) | Based on Nancy Drew and Hardy Boys SuperMystery #9: Mystery Train"",
""#13"": ""#13	Last Train to Blue Moon Canyon	(TRN) | Setting: Copper Gorge, Colorado | Released September 15, 2005 (Windows) | Based on Nancy Drew and Hardy Boys SuperMystery #9: Mystery Train"",
""danger by design"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""dan"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""14"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""#14"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""paris"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""france"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""paris, france"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""paris, fr"": ""#14	Danger by Design	(DAN) | Setting: Paris, France | Released July 24, 2006 (Windows) | Based on Nancy Drew Files #30: Death by Design"",
""the creature of kapu cave"": ""#15	The Creature of Kapu Cave	(CRE) | Setting: The Big Island, Hawaii | Released October 1, 2006 (Windows) | Based on Nancy Drew #143: Mystery on Maui  Super Mystery #14: Tropic of FearThe Nancy Drew Files #23: Sinister  Paradise"",
""kapu cave"": ""#15	The Creature of Kapu Cave	(CRE) | Setting: The Big Island, Hawaii | Released October 1, 2006 (Windows) | Based on Nancy Drew #143: Mystery on Maui  Super Mystery #14: Tropic of FearThe Nancy Drew Files #23: Sinister  Paradise"",
""cre"": ""#15	The Creature of Kapu Cave	(CRE) | Setting: The Big Island, Hawaii | Released October 1, 2006 (Windows) | Based on Nancy Drew #143: Mystery on Maui  Super Mystery #14: Tropic of FearThe Nancy Drew Files #23: Sinister  Paradise"",
""hawaii"": ""#15	The Creature of Kapu Cave	(CRE) | Setting: The Big Island, Hawaii | Released October 1, 2006 (Windows) | Based on Nancy Drew #143: Mystery on Maui  Super Mystery #14: Tropic of FearThe Nancy Drew Files #23: Sinister  Paradise"",
""creature"": ""#15	The Creature of Kapu Cave	(CRE) | Setting: The Big Island, Hawaii | Released October 1, 2006 (Windows) | Based on Nancy Drew #143: Mystery on Maui  Super Mystery #14: Tropic of FearThe Nancy Drew Files #23: Sinister  Paradise"",
""15"": ""#15	The Creature of Kapu Cave	(CRE) | Setting: The Big Island, Hawaii | Released October 1, 2006 (Windows) | Based on Nancy Drew #143: Mystery on Maui  Super Mystery #14: Tropic of FearThe Nancy Drew Files #23: Sinister  Paradise"",
""#15"": ""#15	The Creature of Kapu Cave	(CRE) | Setting: The Big Island, Hawaii | Released October 1, 2006 (Windows) | Based on Nancy Drew #143: Mystery on Maui  Super Mystery #14: Tropic of FearThe Nancy Drew Files #23: Sinister  Paradise"",
""the white wolf of icicle creek"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""white wolf"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""icicle creek"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""ice"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""16"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""#16"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""alberta"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""alberta, ca"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""alberta, canada"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""canada"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""white wolf of icicle creek"": ""#16	The White Wolf of Icicle Creek	(ICE) | Setting: Alberta, Canada | Released June 7, 2007 (Windows), December 2, 2008 (Wii) | Based on Nancy Drew #164: The Mystery of the Mother Wolf  Nancy Drew #175: Werewolf in a Winter Wonderland"",
""legend of the crystal skull"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""crystal skull"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""cry"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""the crystal skull"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""new orleans"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""nawlins"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""new orleans, la"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""new orleans, louisiana"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""new orleans la"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""new orleans louisiana"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""louisiana"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""17"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""#17"": ""#17	Legend of the Crystal Skull	(CRY) | Setting: New Orleans, LA | Released October 8, 2007 (Windows) | Based on Nancy Drew #81: The Mardi Gras Mystery"",
""the phantom of venice"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""phantom of venice"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""venice"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""ven"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""italy"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""phantom"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""the phantom"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""the phantom of venice"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""18"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""#18"": ""#18	The Phantom of Venice	(VEN) | Setting: Venice, Italy | Released July 11, 2008 (Windows) | Based on Nancy Drew #78: The Phantom of Venice"",
""the haunting of castle malloy"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""castle malloy"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""hau"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""the haunting"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""haunting"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""19"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""#19"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""bailor"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""bailor, ireland"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""bailor ireland"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""ireland"": ""#19	The Haunting of Castle Malloy	(HAU) | Setting: Bailor, Ireland | Released October 16, 2008 (Windows) | Based on Nancy Drew #168: The Bike Tour Mystery"",
""ransom of the seven ships"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""the ransom of the seven ships"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""seven ships"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""ran"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""ransom"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""20"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""#20"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""bahamas"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""the bahamas"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""half-moon bay"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""half-moon cay"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""halfmoon bay"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""half moon bay"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""halfmoon cay"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""half moon cay"": ""#20	Ransom of the Seven Ships	(RAN) | Setting: Half-Moon Cay, Bahamas | Released July 14, 2009 (Windows), Discontinued July 24, 2020 | Based on Nancy Drew #70: The Broken Anchor"",
""warnings at waverly academy"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""waverly academy"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""waverly"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""wac"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""21"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""#21"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""averyville"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""new york"": ""#21	Warnings at Waverly Academy	(WAC) | Setting: Averyville, New York | Released October 13, 2009 (Windows) | Based on Nancy Drew #158: The Curse of the Black Cat"",
""trail of the twister"": ""#22	Trail of the Twister	(TOT) | Setting: Oklahoma | Released June 29, 2010 (Windows, Mac) | Based on Nancy Drew #155: The Mystery in Tornado Alley"",
""the twister"": ""#22	Trail of the Twister	(TOT) | Setting: Oklahoma | Released June 29, 2010 (Windows, Mac) | Based on Nancy Drew #155: The Mystery in Tornado Alley"",
""twister"": ""#22	Trail of the Twister	(TOT) | Setting: Oklahoma | Released June 29, 2010 (Windows, Mac) | Based on Nancy Drew #155: The Mystery in Tornado Alley"",
""tot"": ""#22	Trail of the Twister	(TOT) | Setting: Oklahoma | Released June 29, 2010 (Windows, Mac) | Based on Nancy Drew #155: The Mystery in Tornado Alley"",
""22"": ""#22	Trail of the Twister	(TOT) | Setting: Oklahoma | Released June 29, 2010 (Windows, Mac) | Based on Nancy Drew #155: The Mystery in Tornado Alley"",
""#22"": ""#22	Trail of the Twister	(TOT) | Setting: Oklahoma | Released June 29, 2010 (Windows, Mac) | Based on Nancy Drew #155: The Mystery in Tornado Alley"",
""oklahoma"": ""#22	Trail of the Twister	(TOT) | Setting: Oklahoma | Released June 29, 2010 (Windows, Mac) | Based on Nancy Drew #155: The Mystery in Tornado Alley"",
""shadow at the water's edge"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""shadow at the waters edge"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""saw"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""water's edge"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""waters edge"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""shadow"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""shadow at the water's edge"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""23"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""#23"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""misawa"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""japan"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""kyoto"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""kyoto, japan"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""kyoto japan"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""matsue"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""matsue, japan"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""matsue japan"": ""#23	Shadow at the Water's Edge	(SAW) | Setting: Misawa, Japan | Released October 19, 2010 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #13: Tour of Danger    Nancy Drew #56: The Thirteenth Pearl"",
""the captive curse"": ""#24	The Captive Curse	(CAP) | Setting: Germany | Released June 28, 2011 (Windows, Mac) | Based on Nancy Drew #64: Captive Witness"",
""captive curse"": ""#24	The Captive Curse	(CAP) | Setting: Germany | Released June 28, 2011 (Windows, Mac) | Based on Nancy Drew #64: Captive Witness"",
""cap"": ""#24	The Captive Curse	(CAP) | Setting: Germany | Released June 28, 2011 (Windows, Mac) | Based on Nancy Drew #64: Captive Witness"",
""24"": ""#24	The Captive Curse	(CAP) | Setting: Germany | Released June 28, 2011 (Windows, Mac) | Based on Nancy Drew #64: Captive Witness"",
""#24"": ""#24	The Captive Curse	(CAP) | Setting: Germany | Released June 28, 2011 (Windows, Mac) | Based on Nancy Drew #64: Captive Witness"",
""germany"": ""#24	The Captive Curse	(CAP) | Setting: Germany | Released June 28, 2011 (Windows, Mac) | Based on Nancy Drew #64: Captive Witness"",
""alibi in ashes"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""alibi"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""ashes"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""ash"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""25"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""#25"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""river heights"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""river heights, il"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""river heights, illinois"": ""#25	Alibi in Ashes	(ASH) | Setting: River Heights, Illinois | Released October 18, 2011 (Windows, Mac) | Based on Nancy Drew Files #43: False Impressions    Nancy Drew #163: The Clues Challenge"",
""tomb of the lost queen"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""tomb"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""tmb"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""26"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""#26"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""cairo"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""egypt"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""cairo, egypt"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""cairo egypt"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""mummy"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""pyramid"": ""#26	Tomb of the Lost Queen	(TMB) | Setting: Cairo, Egypt | Released May 8, 2012 (Windows, Mac) | Based on Nancy Drew and Hardy Boys SuperMystery #25: Secrets of the Nile"",
""the deadly device"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""deadly device"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""27"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""#27"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""ded"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""colorado springs"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""colorado springs co"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""colorado springs, co"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""colorado springs, colorado"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""colorado springs colorado"": ""#27	The Deadly Device	(DED) | Setting: Colorado Springs, CO | Released October 23, 2012 (Windows, Mac) | Based on Nancy Drew #165: The Crime Lab Case    Nancy Drew on Campus #22: In and Out of Love"",
""ghost of thornton hall"": ""#28	Ghost of Thornton Hall	(GTH) | Setting: Georgia, United States | Released May 14, 2013 (Windows, Mac), March 4, 2014 (iOS) | Based on Nancy Drew: Girl Detective #10: Uncivil Acts"",
""thornton hall"": ""#28	Ghost of Thornton Hall	(GTH) | Setting: Georgia, United States | Released May 14, 2013 (Windows, Mac), March 4, 2014 (iOS) | Based on Nancy Drew: Girl Detective #10: Uncivil Acts"",
""gth"": ""#28	Ghost of Thornton Hall	(GTH) | Setting: Georgia, United States | Released May 14, 2013 (Windows, Mac), March 4, 2014 (iOS) | Based on Nancy Drew: Girl Detective #10: Uncivil Acts"",
""thornton"": ""#28	Ghost of Thornton Hall	(GTH) | Setting: Georgia, United States | Released May 14, 2013 (Windows, Mac), March 4, 2014 (iOS) | Based on Nancy Drew: Girl Detective #10: Uncivil Acts"",
""28"": ""#28	Ghost of Thornton Hall	(GTH) | Setting: Georgia, United States | Released May 14, 2013 (Windows, Mac), March 4, 2014 (iOS) | Based on Nancy Drew: Girl Detective #10: Uncivil Acts"",
""#28"": ""#28	Ghost of Thornton Hall	(GTH) | Setting: Georgia, United States | Released May 14, 2013 (Windows, Mac), March 4, 2014 (iOS) | Based on Nancy Drew: Girl Detective #10: Uncivil Acts"",
""georgia"": ""#28	Ghost of Thornton Hall	(GTH) | Setting: Georgia, United States | Released May 14, 2013 (Windows, Mac), March 4, 2014 (iOS) | Based on Nancy Drew: Girl Detective #10: Uncivil Acts"",
""the silent spy"": ""#29	The Silent Spy	(SPY) | Setting: Scotland | Released October 22, 2013 (Windows, Mac) | Based on Nancy Drew #41: The Clue of the Whistling Bagpipes"",
""silent spy"": ""#29	The Silent Spy	(SPY) | Setting: Scotland | Released October 22, 2013 (Windows, Mac) | Based on Nancy Drew #41: The Clue of the Whistling Bagpipes"",
""spy"": ""#29	The Silent Spy	(SPY) | Setting: Scotland | Released October 22, 2013 (Windows, Mac) | Based on Nancy Drew #41: The Clue of the Whistling Bagpipes"",
""29"": ""#29	The Silent Spy	(SPY) | Setting: Scotland | Released October 22, 2013 (Windows, Mac) | Based on Nancy Drew #41: The Clue of the Whistling Bagpipes"",
""#29"": ""#29	The Silent Spy	(SPY) | Setting: Scotland | Released October 22, 2013 (Windows, Mac) | Based on Nancy Drew #41: The Clue of the Whistling Bagpipes"",
""scotland"": ""#29	The Silent Spy	(SPY) | Setting: Scotland | Released October 22, 2013 (Windows, Mac) | Based on Nancy Drew #41: The Clue of the Whistling Bagpipes"",
""the shattered medallion"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""shattered medallion"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""medallion"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""med"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""30"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""#30"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""nz"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""new zealand"": ""#30	The Shattered Medallion	(MED) | Setting: New Zealand | Released May 20, 2014 (Windows, Mac) | Based on Nancy Drew: Girl Detective Super Mystery #3: Real Fake"",
""labyrinth of lies"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""lies"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""labyrinth"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""lie"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""greece"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""minotaur"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""31"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""#31"": ""#31	Labyrinth of Lies	(LIE) | Setting: Greece | Released October 14, 2014 (Windows, Mac) | Based on Nancy Drew #60: The Greek Symbol Mystery"",
""sea of darkness"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""sea"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""32"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""#32"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""skipbrot"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""skipbrot, iceland"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""skipbrot iceland"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""iceland"": ""#32	Sea of Darkness	(SEA) | Setting: Skipbrot, Iceland | Released May 19, 2015 (Windows, Mac) | Based on Nancy Drew #27: The Secret of the Wooden Lady"",
""midnight in salem"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""mid"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""salem"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""33"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""#33"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""salem, ma"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""salem, mass"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""salem, massachussetts"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""salem, massachussets"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""massachussets"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""salem massachussets"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""salem ma"": ""#33	Midnight in Salem	(MID) | Setting: Salem, MA | Released December 3, 2019 (Windows, Mac) | Based on Nancy Drew #33: The Witch Tree Symbol"",
""mystery of the seven keys"": ""#34	Mystery of the Seven Keys | Setting: Prague, Czech Republic | Released TBD | Based on Nancy Drew Files #83: Diamond Deceit"",
""key"": ""#34	Mystery of the Seven Keys | Setting: Prague, Czech Republic | Released TBD | Based on Nancy Drew Files #83: Diamond Deceit"",
""34"": ""#34	Mystery of the Seven Keys | Setting: Prague, Czech Republic | Released TBD | Based on Nancy Drew Files #83: Diamond Deceit"",
""#34"": ""#34	Mystery of the Seven Keys | Setting: Prague, Czech Republic | Released TBD | Based on Nancy Drew Files #83: Diamond Deceit"",
""prague"": ""#34	Mystery of the Seven Keys | Setting: Prague, Czech Republic | Released TBD | Based on Nancy Drew Files #83: Diamond Deceit"",
""czech"": ""#34	Mystery of the Seven Keys | Setting: Prague, Czech Republic | Released TBD | Based on Nancy Drew Files #83: Diamond Deceit"",
""czech republic"": ""#34	Mystery of the Seven Keys | Setting: Prague, Czech Republic | Released TBD | Based on Nancy Drew Files #83: Diamond Deceit""}"
CUz1qr8G,cve_2023_4762_google_chrome_v8,Python253,Python,Tuesday 9th of April 2024 06:41:54 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2023_4762_google_chrome_v8.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2023-4762

""""""
Description:
This script checks for the presence of vulnerable configurations related to the CVE-2023-4762 Type Confusion Vulnerability in Google Chromium V8.
It does this by comparing the installed version of Google Chrome with the affected software configurations using WMI.
If the installed version is found to be vulnerable, it displays a warning message. Otherwise, it indicates that the system is not vulnerable.

Requirements:
- Python 3.x
- WMI module (install using `pip install wmi`)

Usage:
Run the script using the command `python cve_2023_4762_google_chrome_v8.py`.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine using the WMI module.

Important Notes:
- The predefined list of affected software configurations corresponds to the CVE-2023-4762 Type Confusion Vulnerability in Google Chromium V8.
""""""

import re
import requests
import wmi

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the installed software with a predefined list of affected software configurations
    and displays a warning message if the system is found to be vulnerable.
    """"""
    installed_software = get_installed_software()
    vulnerable_software = [""Google Chrome""]
    if any(software in vulnerable_software for software in installed_software):
        print(""\nWarning:\nGoogle Chrome is installed on your system and may be vulnerable to the Type Confusion Vulnerability in Google Chromium V8."")
    else:
        print(""\nAll clear!\nGoogle Chrome is not installed on your system or it is not vulnerable to the Type Confusion Vulnerability in Google Chromium V8.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable configurations..."")
    check_for_vulnerabilities()

"
N81UJgDM,cve_2024_21412_windows_shortcut,Python253,Python,Tuesday 9th of April 2024 06:31:28 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2024_21412_windows_shortcut.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2024-21412

""""""
Description:
This script checks for the presence of vulnerable configurations related to the CVE-2024-21412 Internet Shortcut Files Security Feature Bypass vulnerability.
It retrieves the Windows version and compares it with a predefined list of affected software configurations.
If the Windows version is found to be vulnerable, it displays a warning message. Otherwise, it indicates that the system is not vulnerable.

Requirements:
- Python 3.x

Usage:
Run the script using the command `python cve_2024_21412_windows.py`.

Functions:
- get_windows_version(): Retrieves the version of the installed Windows operating system.
- check_for_vulnerabilities(): Compares the Windows version with a predefined list of affected software configurations and displays a warning message if necessary.

Important Notes:
- The predefined list of affected software configurations corresponds to the CVE-2024-21412 Internet Shortcut Files Security Feature Bypass vulnerability.
""""""

import platform

def get_windows_version():
    """"""
    Retrieves the version of the installed Windows operating system.
    
    Returns:
        str: A string representing the Windows version.
    """"""
    return platform.win32_ver()[0]

def check_for_vulnerabilities():
    """"""
    Compares the Windows version with a predefined list of affected software configurations
    and displays a warning message if the system is found to be vulnerable.
    """"""
    windows_version = get_windows_version()
    vulnerable_versions = [
        ""10.0.17763.5458"", ""10.0.19044.4046"", ""10.0.19045.4046"", 
        ""10.0.22000.2777"", ""10.0.22621.3155"", ""10.0.22631.3155"",
        ""10.0.25398.709""
    ]
    if windows_version in vulnerable_versions:
        print(""\nWarning:\nYour Windows version ({}) is vulnerable to the Internet Shortcut Files Security Feature Bypass vulnerability."".format(windows_version))
    else:
        print(""\nAll clear!\nYour Windows version ({}) is not vulnerable to the Internet Shortcut Files Security Feature Bypass vulnerability.\n"".format(windows_version))

if __name__ == ""__main__"":
    print(""Verifying vulnerable configurations..."")
    check_for_vulnerabilities()

"
2YCSv1xA,cve_2024_21351_windows_smartscreen,Python253,Python,Tuesday 9th of April 2024 06:28:30 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2024_21351_windows_smartscreen.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2024-21351

""""""
Description:
This script checks for the presence of vulnerable configurations related to the CVE-2024-21351 Windows SmartScreen Security Feature Bypass vulnerability.
It retrieves the Windows version and compares it with a predefined list of affected software configurations.
If the Windows version is found to be vulnerable, it displays a warning message. Otherwise, it indicates that the system is not vulnerable.

Requirements:
- Python 3.x

Usage:
Run the script using the command `python cve_2024_21351_windows.py`.

Functions:
- get_windows_version(): Retrieves the version of the installed Windows operating system.
- check_for_vulnerabilities(): Compares the Windows version with a predefined list of affected software configurations and displays a warning message if necessary.

Important Notes:
- The predefined list of affected software configurations corresponds to the CVE-2024-21351 Windows SmartScreen Security Feature Bypass vulnerability.
""""""

import platform

def get_windows_version():
    """"""
    Retrieves the version of the installed Windows operating system.
    
    Returns:
        str: A string representing the Windows version.
    """"""
    return platform.win32_ver()[0]

def check_for_vulnerabilities():
    """"""
    Compares the Windows version with a predefined list of affected software configurations
    and displays a warning message if the system is found to be vulnerable.
    """"""
    windows_version = get_windows_version()
    vulnerable_versions = [
        ""10.0.10240.20469"", ""10.0.14393.6709"", ""10.0.17763.5458"", ""10.0.19044.4046"", 
        ""10.0.19045.4046"", ""10.0.22000.2777"", ""10.0.22621.3155"", ""10.0.22631.3155"",
        ""10.0.17763.5458"", ""10.0.20348.2322"", ""10.0.25398.709""
    ]
    if windows_version in vulnerable_versions:
        print(""\nWarning:\nYour Windows version ({}) is vulnerable to the SmartScreen Security Feature Bypass vulnerability."".format(windows_version))
    else:
        print(""\nAll clear!\nYour Windows version ({}) is not vulnerable to the SmartScreen Security Feature Bypass vulnerability.\n"".format(windows_version))

if __name__ == ""__main__"":
    print(""Verifying vulnerable configurations..."")
    check_for_vulnerabilities()

"
n1nhWXPf,cve_2020_3259_cisco_asa_ftd,Python253,Python,Tuesday 9th of April 2024 06:22:53 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2020_3259_cisco_asa_ftd.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2020-3259

""""""
Description:
This script checks for the presence of vulnerable configurations related to the CVE-2020-3259 vulnerability 
on Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software. 
It retrieves a list of installed software using the WMI module and compares it with a predefined list 
of vulnerable configurations associated with the CVE. If any vulnerable configurations are found, 
it displays a warning message to prompt the user to take immediate action to mitigate the vulnerability.

Requirements:
- Python 3.x: The script is written in Python 3 and requires a Python interpreter of version 3 or higher to run.
- WMI Module: The script uses the WMI module to interact with the Windows Management Instrumentation (WMI) API 
  to retrieve a list of installed software on a Windows system. Ensure that the WMI module is installed. 
  You can install it using pip: `pip install WMI`.

Usage:
1. Ensure Python 3.x is installed on your system.
2. Install the WMI module by running `pip install WMI`.
3. Run the script using the command `python cve_2020_3259_asa_ftd.py`.
4. The script will verify if any vulnerable configurations are installed on your machine 
   and provide instructions for mitigation if necessary.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine using the WMI module.
- check_for_vulnerabilities(): Compares the list of installed software with a predefined list of vulnerable 
  configurations and displays a warning message if any vulnerable configurations are found.

Important Notes:
- The predefined list of vulnerable configurations in this script corresponds to the CVE-2020-3259 vulnerability.
""""""

import wmi

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the list of installed software with a predefined list of vulnerable configurations 
    and displays a warning message if any vulnerable configurations are found.
    """"""
    installed_software = get_installed_software()
    vulnerable_versions = [
        ""Cisco Firepower Threat Defense 6.2.3 up to (excluding) 6.2.3.16"",
        ""Cisco Firepower Threat Defense 6.3.0 up to (excluding) 6.3.0.6"",
        ""Cisco Firepower Threat Defense 6.4.0 up to (excluding) 6.4.0.9"",
        ""Cisco Firepower Threat Defense 6.5.0 up to (excluding) 6.5.0.5"",
        ""Cisco Adaptive Security Appliance (ASA) Software 9.8 up to (excluding) 9.8.4.20"",
        ""Cisco Adaptive Security Appliance (ASA) Software 9.9 up to (excluding) 9.9.2.67"",
        ""Cisco Adaptive Security Appliance (ASA) Software 9.10 up to (excluding) 9.10.1.40"",
        ""Cisco Adaptive Security Appliance (ASA) Software 9.12 up to (excluding) 9.12.3.9"",
        ""Cisco Adaptive Security Appliance (ASA) Software 9.13 up to (excluding) 9.13.1.10""
    ]
    vulnerable_installed = [software for software in installed_software if software in vulnerable_versions]
    if vulnerable_installed:
        print(""\nWarning:\nThe following vulnerable configurations are installed on your machine:"")
        for software in vulnerable_installed:
            print(""- "" + software)
        print(""\nPlease take immediate action to mitigate the vulnerability by applying mitigations per vendor instructions or discontinuing use of the product if mitigations are unavailable.\n"")
    else:
        print(""\nAll clear!\nNone of the vulnerable configurations are installed on your machine.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable configurations..."")
    check_for_vulnerabilities()

"
zjaNztvp,cve_2023_29360_streaming_service,Python253,Python,Tuesday 9th of April 2024 06:19:16 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2023_29360_streaming_service.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2023-29360

""""""
Description:
This script checks for the presence of vulnerable configurations related to the CVE-2023-29360 vulnerability 
on the user's machine. It retrieves a list of installed software using the WMI module and compares it with 
a predefined list of vulnerable configurations associated with the CVE. If any vulnerable configurations 
are found, it displays a warning message to prompt the user to take immediate action to mitigate the vulnerability.

Requirements:
- Python 3.x: The script is written in Python 3 and requires a Python interpreter of version 3 or higher to run.
- WMI Module: The script uses the WMI module to interact with the Windows Management Instrumentation (WMI) API 
  to retrieve a list of installed software on a Windows system. Ensure that the WMI module is installed. 
  You can install it using pip: `pip install WMI`.

Usage:
1. Ensure Python 3.x is installed on your system.
2. Install the WMI module by running `pip install WMI`.
3. Run the script using the command `python cve_2023_29360_streaming_service.py`.
4. The script will verify if any vulnerable configurations are installed on your machine 
   and provide instructions for mitigation if necessary.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine using the WMI module.
- check_for_vulnerabilities(): Compares the list of installed software with a predefined list of vulnerable 
  configurations and displays a warning message if any vulnerable configurations are found.

Important Notes:
- The predefined list of vulnerable configurations in this script corresponds to the CVE-2023-29360 vulnerability.
""""""

import wmi

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the list of installed software with a predefined list of vulnerable configurations 
    and displays a warning message if any vulnerable configurations are found.
    """"""
    installed_software = get_installed_software()
    vulnerable_versions = [
        ""Microsoft Windows 10 1607 x64 up to (excluding) 10.0.14393.5989"",
        ""Microsoft Windows 10 1607 x86 up to (excluding) 10.0.14393.5989"",
        ""Microsoft Windows 10 1809 arm64 up to (excluding) 10.0.17763.4499"",
        ""Microsoft Windows 10 1809 x64 up to (excluding) 10.0.17763.4499"",
        ""Microsoft Windows 10 1809 x86 up to (excluding) 10.0.17763.4499"",
        ""Microsoft Windows 10 21H2 arm64 up to (excluding) 10.0.19044.3086"",
        ""Microsoft Windows 10 21H2 x64 up to (excluding) 10.0.19044.3086"",
        ""Microsoft Windows 10 21H2 x86 up to (excluding) 10.0.19044.3086"",
        ""Microsoft Windows 10 22H2 arm64 up to (excluding) 10.0.19045.3086"",
        ""Microsoft Windows 10 22H2 x64 up to (excluding) 10.0.19045.3086"",
        ""Microsoft Windows 10 22H2 x86 up to (excluding) 10.0.19045.3086"",
        ""Microsoft Windows 11 21H2 arm64 up to (excluding) 10.0.22000.2057"",
        ""Microsoft Windows 11 21H2 x64 up to (excluding) 10.0.22000.2057"",
        ""Microsoft Windows 11 22H2 arm64 up to (including) 10.0.22621.1848"",
        ""Microsoft Windows 11 22H2 x64 up to (including) 10.0.22621.1848"",
        ""Microsoft Windows Server 2016 up to (excluding) 10.0.14393.5989"",
        ""Microsoft Windows Server 2019 up to (excluding) 10.0.17763.4499"",
        ""Microsoft Windows Server 2022 up to (excluding) 10.0.20348.1784""
    ]
    vulnerable_installed = [software for software in installed_software if software in vulnerable_versions]
    if vulnerable_installed:
        print(""\nWarning:\nThe following vulnerable configurations are installed on your machine:"")
        for software in vulnerable_installed:
            print(""- "" + software)
        print(""\nPlease take immediate action to mitigate the vulnerability by applying updates per vendor instructions or discontinuing use of the product if mitigations are unavailable.\n"")
    else:
        print(""\nAll clear!\nNone of the vulnerable configurations are installed on your machine.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable configurations..."")
    check_for_vulnerabilities()

"
pq6v681k,cve_2024_21338_kernel,Python253,Python,Tuesday 9th of April 2024 06:16:51 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2024_21338_kernel.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2024-21338

""""""
Description:
This script checks for the presence of vulnerable configurations related to the CVE-2024-21338 vulnerability 
on the user's machine. It retrieves a list of installed software using the WMI module and compares it with 
a predefined list of vulnerable Windows Kernel configurations associated with the CVE. If any vulnerable configurations 
are found, it displays a warning message to prompt the user to take immediate action to mitigate the vulnerability.

Requirements:
- Python 3.x: The script is written in Python 3 and requires a Python interpreter of version 3 or higher to run.
- WMI Module: The script uses the WMI module to interact with the Windows Management Instrumentation (WMI) API 
  to retrieve a list of installed software on a Windows system. Ensure that the WMI module is installed. 
  You can install it using pip: `pip install WMI`.

Usage:
1. Ensure Python 3.x is installed on your system.
2. Install the WMI module by running `pip install WMI`.
3. Run the script using the command `python cve_2024_21338_kernel.py`.
4. The script will verify if any vulnerable Windows Kernel configurations are installed on your machine 
   and provide instructions for mitigation if necessary.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine using the WMI module.
- check_for_vulnerabilities(): Compares the list of installed software with a predefined list of vulnerable 
  Windows Kernel configurations and displays a warning message if any vulnerable configurations are found.

Important Notes:
- The predefined list of vulnerable Windows Kernel configurations in this script corresponds to the CVE-2024-21338 vulnerability.
""""""

import wmi

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the list of installed software with a predefined list of vulnerable Windows Kernel configurations 
    and displays a warning message if any vulnerable configurations are found.
    """"""
    installed_software = get_installed_software()
    vulnerable_kernel_versions = [
        ""Microsoft Windows 10 1809 up to (excluding) 10.0.17763.5458"",
        ""Microsoft Windows 10 21H2 up to (excluding) 10.0.19044.4046"",
        ""Microsoft Windows 10 22H2 up to (excluding) 10.0.19045.4046"",
        ""Microsoft Windows 11 21H2 up to (excluding) 10.0.22000.2777"",
        ""Microsoft Windows 11 22H2 up to (excluding) 10.0.22621.3155"",
        ""Microsoft Windows 11 23H2 up to (excluding) 10.0.22631.3155"",
        ""Microsoft Windows Server 2019 up to (excluding) 10.0.17763.5458"",
        ""Microsoft Windows Server 2022 up to (excluding) 10.0.20348.2322"",
        ""Microsoft Windows Server 2022 23H2 up to (including) 10.0.25398.709""
    ]
    vulnerable_installed = [software for software in installed_software if software in vulnerable_kernel_versions]
    if vulnerable_installed:
        print(""\nWarning:\nThe following vulnerable Windows Kernel configurations are installed on your machine:"")
        for software in vulnerable_installed:
            print(""- "" + software)
        print(""\nPlease take immediate action to mitigate the vulnerability by applying updates per vendor instructions or discontinuing use of the product if mitigations are unavailable.\n"")
    else:
        print(""\nAll clear!\nNone of the vulnerable Windows Kernel configurations are installed on your machine.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable Windows Kernel configurations..."")
    check_for_vulnerabilities()

"
xZHkKbEN,cve_2016_4171_flash,Python253,Python,Tuesday 9th of April 2024 05:53:36 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2016_4171_flash.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2016-4171

""""""
Description:
This script checks for the presence of vulnerable Adobe Flash Player configurations on the user's machine 
in relation to the CVE-2016-4171 vulnerability. It retrieves a list of installed software using the WMI module 
and compares it with a predefined list of vulnerable Adobe Flash Player configurations associated with the CVE.
If any vulnerable configurations are found, it displays a warning message to prompt the user to take 
immediate action to mitigate the vulnerability.

Requirements:
- Python 3.x: The script is written in Python 3 and requires a Python interpreter of version 3 or higher to run.
- WMI Module: The script uses the WMI module to interact with the Windows Management Instrumentation (WMI) API 
  to retrieve a list of installed software on a Windows system. Ensure that the WMI module is installed. 
  You can install it using pip: `pip install WMI`.

Usage:
1. Ensure Python 3.x is installed on your system.
2. Install the WMI module by running `pip install WMI`.
3. Run the script using the command `python cve_2016_4171_flash.py`.
4. The script will verify if any vulnerable Adobe Flash Player configurations are installed on your machine 
   and provide instructions for mitigation if necessary.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine using the WMI module.
- check_for_vulnerabilities(): Compares the list of installed software with a predefined list of vulnerable 
  Adobe Flash Player configurations and displays a warning message if any vulnerable configurations are found.

Important Notes:
- The predefined list of vulnerable Adobe Flash Player configurations in this script corresponds to the CVE-2016-4171 vulnerability.
""""""

import wmi

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the list of installed software with a predefined list of vulnerable Adobe Flash Player configurations 
    and displays a warning message if any vulnerable configurations are found.
    """"""
    installed_software = get_installed_software()
    vulnerable_flash_versions = [
        ""Adobe Flash Player 21.0.0.242"",
        ""Adobe Flash Player for Linux up to (including) 11.2.202.621 running on/with Linux Kernel"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Apple MacOS X"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Microsoft Windows"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Google Chrome OS"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Microsoft Internet Explorer up to (including) 21.0.0.242 running on/with Microsoft Windows 8.1"",
        ""Adobe Flash Player up to (including) 18.0.0.352 running on/with Apple MacOS X"",
        ""Adobe Flash Player up to (including) 18.0.0.352 running on/with Microsoft Windows"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Microsoft Edge up to (including) 21.0.0.242 running on/with Microsoft Windows 10"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Redhat Enterprise Linux Desktop 5.0, 6.0"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Redhat Enterprise Linux Server 5.0, 6.0"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Redhat Enterprise Linux Workstation 5.0, 6.0"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with OpenSuse 13.1, 13.2"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Suse Linux Enterprise Desktop 12, 12 SP1"",
        ""Adobe Flash Player up to (including) 21.0.0.242 running on/with Suse Linux Enterprise Workstation Extension 12, 12 SP1""
    ]
    vulnerable_installed = [software for software in installed_software if software in vulnerable_flash_versions]
    if vulnerable_installed:
        print(""\nWarning:\nThe following vulnerable Adobe Flash Player configurations are installed on your machine:"")
        for software in vulnerable_installed:
            print(""- "" + software)
        print(""\nPlease take immediate action to mitigate the vulnerability by applying updates per vendor instructions.\n"")
    else:
        print(""\nAll clear!\nNone of the vulnerable Adobe Flash Player configurations are installed on your machine.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable Adobe Flash Player configurations..."")
    check_for_vulnerabilities()

"
NLDBrWm6,cve_2014_7169_bash,Python253,Python,Tuesday 9th of April 2024 05:52:59 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2014_7169_bash.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2014-7169

""""""
Description:
This script checks for the presence of vulnerable software configurations on the user's machine 
in relation to the CVE-2014-7169 vulnerability. It compares the list of installed software on 
the system with a predefined list of vulnerable software configurations associated with the CVE.
If any vulnerable software configurations are found, it displays a warning message to prompt 
the user to take immediate action to mitigate the vulnerability.

Requirements:
- Python 3.x: The script is written in Python 3 and requires a Python interpreter of version 3 or higher to run.
- WMI Module: The script uses the WMI module to interact with the Windows Management Instrumentation (WMI) API 
  to retrieve a list of installed software on a Windows system. Ensure that the WMI module is installed. 
  You can install it using pip: `pip install WMI`.

Usage:
1. Ensure Python 3.x is installed on your system.
2. Install the WMI module by running `pip install WMI`.
3. Run the script using the command `python cve_2014_7169_bash.py`.
4. The script will verify if any vulnerable software configurations are installed on your machine and 
   provide instructions for mitigation if necessary.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine using the WMI module.
- check_for_vulnerabilities(): Compares the list of installed software with a predefined list of vulnerable 
  software configurations and displays a warning message if any vulnerable software configurations are found.

Important Notes:
- The predefined list of vulnerable software configurations in this script corresponds to the CVE-2014-7169 vulnerability.
- The script only supports Windows systems due to its dependency on the WMI module for retrieving installed software information.
""""""

import wmi

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the list of installed software with a predefined list of vulnerable software configurations 
    and displays a warning message if any vulnerable software configurations are found.
    """"""
    installed_software = get_installed_software()
    vulnerable_software = [
        ""GNU Bash 1.14.0"",
        ""GNU Bash 1.14.1"",
        ""GNU Bash 1.14.2"",
        ""GNU Bash 1.14.3"",
        ""GNU Bash 1.14.4"",
        ""GNU Bash 1.14.5"",
        ""GNU Bash 1.14.6"",
        ""GNU Bash 1.14.7"",
        ""GNU Bash 2.0"",
        ""GNU Bash 2.01"",
        ""GNU Bash 2.01.1"",
        ""GNU Bash 2.02"",
        ""GNU Bash 2.02.1"",
        ""GNU Bash 2.03"",
        ""GNU Bash 2.04"",
        ""GNU Bash 2.05"",
        ""GNU Bash 2.05:a"",
        ""GNU Bash 2.05:b"",
        ""GNU Bash 3.0"",
        ""GNU Bash 3.0.16"",
        ""GNU Bash 3.1"",
        ""GNU Bash 3.2"",
        ""GNU Bash 3.2.48"",
        ""GNU Bash 4.0"",
        ""GNU Bash 4.0:rc1"",
        ""GNU Bash 4.1"",
        ""GNU Bash 4.2"",
        ""GNU Bash 4.3""
    ]
    vulnerable_installed = [software for software in installed_software if software in vulnerable_software]
    if vulnerable_installed:
        print(""\nWarning:\nThe following vulnerable software configurations are installed on your machine:"")
        for software in vulnerable_installed:
            print(""- "" + software)
        print(""\nPlease take immediate action to mitigate the vulnerability by applying updates per vendor instructions.\n"")
    else:
        print(""\nAll clear!\nNone of the vulnerable software configurations are installed on your machine.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable software configurations..."")
    check_for_vulnerabilities()

"
tGieZ1Vi,BBS ReCaptcha Fix,Degritone,JavaScript,Tuesday 9th of April 2024 05:46:39 PM CDT,"// ==UserScript==
// @name         BBS ReCaptcha Fix
// @version      1.0
// @description  Fix the BBS's ReCaptcha
// @author       Degritone
// @match        *://dollars-bbs.org/*
// @grant        none
// @run-at       document-end
// ==/UserScript==

window.nameWithoutCollision = window.location.href.match(/\.org\/.+?\//)[0].replace("".org"","""").replace(""/"","""")+""/kareha.pl"";
window.self = window;

window.preview_post = function(formid,thread){
  let form=document.getElementById(formid);
  let preview=document.getElementById(""preview""+thread);

  if(!form||!preview) return;

  preview.style.display="""";
  preview.innerHTML=""<em>Loading...</em>"";
  let text;
  text=""task=preview"";
  text+=""&comment=""+encodeURIComponent(form.comment.value);
  text+=""&markup=""+encodeURIComponent(form.markup.value);
  if(thread) text+=""&thread=""+thread;

  let xmlhttp=get_xmlhttp();
  xmlhttp.open(""POST"",nameWithoutCollision);
  xmlhttp.onreadystatechange=function() {
    if(xmlhttp.readyState==4) preview.innerHTML=xmlhttp.responseText;
  }
  if(is_ie()||xmlhttp.setRequestHeader) xmlhttp.setRequestHeader(""Content-Type"",""application/x-www-form-urlencoded"");
  xmlhttp.send(text);
}"
c7YDqV5r,cve_2021_44228_apache_log4j,Python253,Python,Tuesday 9th of April 2024 05:30:53 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2021_44228_apache_log4j.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2021-44228

""""""
Description:
This script checks for the presence of vulnerable software configurations on the user's machine 
in relation to the CVE-2021-44228 vulnerability. It compares the list of installed software on 
the system with a predefined list of vulnerable software configurations associated with the CVE.
If any vulnerable software configurations are found, it displays a warning message to prompt 
the user to take immediate action to mitigate the vulnerability.

Requirements:
- Python 3.x: The script is written in Python 3 and requires a Python interpreter of version 3 or higher to run.

Usage:
1. Run the script using the command `python cve_2021_44228_apache_log4j.py`.
2. The script will verify if any vulnerable software configurations are installed on your machine and 
   provide instructions for mitigation if necessary.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine.
- check_for_vulnerabilities(): Compares the list of installed software with a predefined list of vulnerable 
  software configurations and displays a warning message if any vulnerable software configurations are found.

Important Notes:
- The predefined list of vulnerable software configurations in this script corresponds to the CVE-2021-44228 vulnerability.
""""""

import wmi

vulnerable_software = [
    ""Apache Log4j 2.0 up to (excluding) 2.12.2"",
    ""Apache Log4j 2.13.0 up to (excluding) 2.16.0""
]

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the list of installed software with a predefined list of vulnerable software configurations 
    and displays a warning message if any vulnerable software configurations are found.
    """"""
    installed_software = get_installed_software()
    vulnerable_installed = [software for software in installed_software if software in vulnerable_software]
    if vulnerable_installed:
        print(""\nWarning:\nThe following vulnerable software configurations are installed on your machine:"")
        for software in vulnerable_installed:
            print(""- "" + software)
        print(""\nPlease take immediate action to mitigate the vulnerability by applying updates per vendor instructions.\n"")
    else:
        print(""\nAll clear!\nNone of the vulnerable software configurations are installed on your machine.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable software configurations..."")
    check_for_vulnerabilities()

"
uq6UYaGn,Untitled,dereksir,Go,Tuesday 9th of April 2024 05:30:22 PM CDT,"package main

import (
    ""io""
    ""log""
    ""net/http""
)

func main() {
    client := &http.Client{}
    req, err := http.NewRequest(""GET"", ""https://api.zenrows.com/v1/?apikey=<YOUR_ZENROWS_API_KEY>&url=https%3A%2F%2Fwww.g2.com%2Fproducts%2Fvisual-studio%2Freviews&js_render=true&premium_proxy=true"", nil)
    resp, err := client.Do(req)
    if err != nil {
        log.Fatalln(err)
    }
    defer resp.Body.Close()

    body, err := io.ReadAll(resp.Body)
    if err != nil {
        log.Fatalln(err)
    }

    log.Println(string(body))
}"
GaEDLtve,cve_2021_45046_apache_log4j,Python253,Python,Tuesday 9th of April 2024 05:16:37 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: cve_2021_45046_apache_log4j.py
# Version: 1.0.0
# Author: Jeoi Reqi
# Vulnerability Source: https://nvd.nist.gov/vuln/detail/CVE-2021-45046

""""""
Description:
This script checks for the presence of vulnerable software configurations on the user's machine 
in relation to the CVE-2021-45046 vulnerability. It compares the list of installed software on 
the system with a predefined list of vulnerable software configurations associated with the CVE.
If any vulnerable software configurations are found, it displays a warning message to prompt 
the user to take immediate action to mitigate the vulnerability.

Requirements:
- Python 3.x: The script is written in Python 3 and requires a Python interpreter of version 3 or higher to run.
- WMI Module: The script uses the WMI module to interact with the Windows Management Instrumentation (WMI) API 
  to retrieve a list of installed software on a Windows system. Ensure that the WMI module is installed. 
  You can install it using pip: `pip install WMI`.

Usage:
1. Ensure Python 3.x is installed on your system.
2. Install the WMI module by running `pip install WMI`.
3. Run the script using the command `python cve_2021_45046.py`.
4. The script will verify if any vulnerable software configurations are installed on your machine and 
   provide instructions for mitigation if necessary.

Functions:
- get_installed_software(): Retrieves a list of installed software on the user's machine using the WMI module.
- check_for_vulnerabilities(): Compares the list of installed software with a predefined list of vulnerable 
  software configurations and displays a warning message if any vulnerable software configurations are found.

Important Notes:
- The predefined list of vulnerable software configurations in this script corresponds to the CVE-2021-45046 vulnerability.
- The script only supports Windows systems due to its dependency on the WMI module for retrieving installed software information.
""""""

import wmi

# List of vulnerable software configurations
vulnerable_software = [
    ""Apache Log4j 2.0 up to (excluding) 2.12.2"",
    ""Apache Log4j 2.13.0 up to (excluding) 2.16.0""
]

def get_installed_software():
    """"""
    Retrieves a list of installed software on the user's machine using the WMI module.
    
    Returns:
        list: A list containing the names of installed software.
    """"""
    c = wmi.WMI()
    installed_software = []
    for item in c.Win32_Product():
        installed_software.append(item.Caption)
    return installed_software

def check_for_vulnerabilities():
    """"""
    Compares the list of installed software with a predefined list of vulnerable software configurations 
    and displays a warning message if any vulnerable software configurations are found.
    """"""
    installed_software = get_installed_software()
    vulnerable_installed = [software for software in installed_software if software in vulnerable_software]
    if vulnerable_installed:
        print(""\nWarning:\nThe following vulnerable software configurations are installed on your machine:"")
        for software in vulnerable_installed:
            print(""- "" + software)
        print(""\nPlease take immediate action to mitigate the vulnerability by applying updates per vendor instructions.\n"")
    else:
        print(""\nAll clear!\nNone of the vulnerable software configurations are installed on your machine.\n"")

if __name__ == ""__main__"":
    print(""Verifying vulnerable software configurations..."")
    check_for_vulnerabilities()

"
n7ixsssT,Untitled,alexander_bazhenov,JavaScript,Tuesday 9th of April 2024 04:37:26 PM CDT,"foo = ""aaa""
bar = foo + null
console.log(foo);
// aaa
 
foo = null
bar = foo + ""aaa""
console.log(foo);
// null
 
foo = ""aaa""
bar = foo + 5
console.log(foo);
// aaa
 
foo = 5
bar = foo + ""aaa""
console.log(foo);
// 5
 
// особенно мне нравится конверсия из int в str:
// https://stackoverflow.com/questions/5765398/whats-the-best-way-to-convert-a-number-to-a-string-in-javascript
// я то думал str(5) ))"
39MSdjjU,blur v0,Theo107,C,Tuesday 9th of April 2024 04:31:22 PM CDT,"void blur(int height, int width, RGBTRIPLE image[height][width])
{
    // Create a copy of image
    RGBTRIPLE copy[height][width];
    for (int i = 0; i < height; i++)
    {
        for (int j = 0; j < width; j++)
        {
            copy[i][j] = image[i][j];
        }
    }
    for (int i = 0, n = height; i < n; i++)
    {
        for (int j = 0, o = width; j < o; j++)
        {
            int startx = 0;
            int endx = 0;
            int starty = 0;
            int endy = 0;

            if (j == 0)
            {
                startx = 0;
                endx = 1;
            }
            else if (j == (width - 1))
            {
                startx = (width - 2);
                endx = (width - 1);
            }
            else
            {
                startx = (j - 1);
                endx = (j + 1);
            }

            if (i == 0)
            {
                starty = 0;
                endy = 1;
            }
            else if (i == (height - 1))
            {
                starty = (height - 2);
                endy = (height - 1);
            }
            else
            {
                starty = (i - 1);
                endy = (i + 1);
            }

            long newRed = 0;
            long newGreen = 0;
            long newBlue = 0;

            float avgCount = 0.0;
            for (int x = startx; x <= endx; x++)
            {
                for (int y = starty; y <= endy; y++)
                {
                    newRed += copy[x][y].rgbtRed;
                    newGreen += copy[x][y].rgbtGreen;
                    newBlue += copy[x][y].rgbtBlue;
                    avgCount += 1.0;
                }
            }
            image[i][j].rgbtRed = round( newRed / avgCount);
            image[i][j].rgbtGreen = round( newGreen / avgCount);
            image[i][j].rgbtBlue = round( newBlue / avgCount);
        }
    }
    return;
}"
SWWc3X8v,Working Radar Base (XYZ) (Radar can e rotated),LuaPacyk,Lua,Tuesday 9th of April 2024 04:31:15 PM CDT,"m=math
pi=m.pi
pi2=pi*2
cos=m.cos
sin=m.sin
sc=screen
dc=sc.drawCircle
dr=sc.drawRect
dt=sc.drawText
dtb=sc.drawTextBox
gn=input.getNumber
gb=input.getBool
color=sc.setColor

-------------------- aliases

function radarstab(xr, yr, tiltl, tiltf) 
--give info of target from radar and tilt forwardside and left side as here: https://imgur.com/a/aJGYLWj
	tiltl = -tiltl*pi2
	return xr*cos(tiltl) - yr*sin(tiltl), xr*sin(tiltl) + yr*cos(tiltl)+tiltf
end -- returns yaw angle and elevate angle

function locationCalc(azsh, gpsx, gpsy, yaw, elev, altsh, distance, rotate) -- calculanig target coordinates
	local taraz = (-azsh+yaw+rotate)*pi2-pi/2
	local alttar = sin(elev*pi2)*distance+altsh
	local absdist = cos(elev*pi2)*distance
	local x = gpsx+cos(taraz)*absdist
	local y = gpsy+ -sin(taraz)*absdist
	return x, y, alttar
end  -- returns x, y, alt of target

function isPointInRectangle(x, y, rX, rY, rW, rH)
	return x > rX and y > rY and x < rX+rW and y < rY+rH
end

function onTick() -- taking info from outside 
	gpsx, gpsy = gn(1), gn(2)
	azsh, altsh = gn(5), gn(6)
	x, y, distance, detect = gn(8), gn(9), gn(7), gb(1)
	tll, tlf = gn(3), gn(4)
	px, py, prp, prt = gn(10), gn(11), gb(2), gb(3)
    rotate = gn(12)
end

function onDraw() 
	w = screen.getWidth()
	h = screen.getHeight()
	color(255, 255, 255)
    -- lets call some functions
	Ytar, Etar = radarstab(x, y, tll, tlf) 
	x, y, z = locationCalc(azsh, gpsx, gpsy, Ytar, Etar, altsh, distance, rotate)
	dt(2, 2, x)
	dt(2, 10, y) --print coordinates
	dt(2, 18, z)
end
"
BzmxtNDT,last none,max2201111,Python,Tuesday 9th of April 2024 04:30:17 PM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    #print(f""Position: {board.fen()}"")
    if board.is_checkmate():
     ###   print(f""Position: {board.fen()}, return -1000"")
        return -1000  # Mat protihráči
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
     ###   print(f""Position: {board.fen()}, return 0"")

        return 0  # Remíza
    else:
        #print(f""Position: {board.fen()}, return None"")
        return None  # Hra pokračuje


def create_AR_entry(result, children, last_move):
    return {""result"": result, ""children"": children, ""last_move"": last_move, ""best_child"": None} 


def update_best_case(best_case):
    if best_case == 0:
        return best_case
    if best_case > 0:
        return best_case - 1
    else:
        return best_case + 1



def update_AR_for_mate_in_k(board, AR, max_k=1000):
    for k in range(1, max_k + 1):
        changed = False
      #  for _ in range(2):  # Dvakrát pro každou hodnotu k
        for fen in list(AR.keys()):
            board.set_fen(fen)
            if AR[fen].get('result') is not None:
                continue  # Tato pozice již byla ohodnocena

            evaluations = []
            for move in board.legal_moves:
                board.push(move)
                next_fen = simplify_fen_string(board.fen())
                if next_fen not in AR:
                    result = evaluate_position(board)
                    AR[next_fen] = create_AR_entry(result, [], move)
                board.pop()  # Vracíme šachovnici do původního stavu

                if AR[next_fen].get('result') is not None or True:
                    evaluations.append(AR[next_fen]['result'])

            # Aktualizujte výsledek na základě evaluací
            if evaluations:
                if all(item is not None for item in evaluations):
                    max_eval = -min(evaluations)
                if all(item is not None for item in evaluations) and max_eval == -1001 + k:
                    AR[fen]['result'] = 1000 - k
                    changed = True
                elif all(item is not None for item in evaluations) and max_eval == 1001 - k:
                    AR[fen]['result'] = -1000 + k
                    changed = True
                elif all(item is not None for item in evaluations) and max_eval == 0:
                    AR[fen]['result'] = 0
                    changed = True

        if not changed:
            break  # Konec cyklu, pokud nedošlo k žádné změně

        if not changed:
            break  # Konec hlavního cyklu, pokud dosáhneme max_k nebo nedošlo k žádné změně


def print_draw_positions(AR):
    """"""
    Vytiskne všechny remízové pozice (hodnota 0) zaznamenané v slovníku AR.
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if True or (value > 990 and value < 1000):
            print(f""FEN>: {fen}, Hodnota: {value}"",""\n"",chess.Board(fen),""<\n"")

def find_path_to_end(AR, fen):
    if AR[fen]['result'] is None:
        print(f""Unfortunately, there is no path that is known to be the best"")
    
    fen_i = fen
    print(chess.Board(fen_i),""\n<"")
    path = fen
    while AR[fen_i]['best_child'] is not None:
        fen_i = AR[fen_i]['best_child']
        print(chess.Board(fen_i),""\n<"")
        
        path = path + "", "" + fen_i
    
    print(f""Path is: {path}"")
    
 
            
def main():

    initial_fen = ""1k6/5P2/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen_original = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    initial_fen_mate_in_one_aka_one_ply = ""3r1k2/5r1p/5Q1K/2p3p1/1p4P1/8/8/8 w - - 2 56""
    initial_fen_mate_in_two_aka_three_plies = ""r5k1/2r3p1/pb6/1p2P1N1/3PbB1P/3pP3/PP1K1P2/3R2R1 b - - 4 28""
    initial_fen_mated_in_two_plies = ""r5k1/2r3p1/p7/bp2P1N1/3PbB1P/3pP3/PP1K1P2/3R2R1 w - - 5 29""
    
    mate_in_two_aka_three_plies_simple = ""8/8/8/8/3R4/5K2/8/4k3 w - - 0 1""
    mated_in_one_aka_two_plies_simple = ""8/8/3R4/8/8/5K2/8/4k3 b - - 1 1""
    mate_in_one_aka_one_ply_simple = ""8/8/3R4/8/8/5K2/8/5k2 w - - 2 2""

    initial_fen = mate_in_two_aka_three_plies_simple
    
    
    initial_fen = ""1k6/5P2/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen = ""1k6/8/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen = ""8/8/8/8/8/7N/1k5K/6B1 w - - 0 1""
    initial_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""
    initial_fen = ""8/3k4/8/2K2R2/8/8/8/8 w - - 0 1""
    
 #   initial_fen = ""8/2k5/8/8/3K4/8/8/8 w - - 0 1""
   
    simplified_fen = simplify_fen_string(initial_fen)
    
    board = chess.Board(initial_fen)
    AR = {simplified_fen: {""result"": None, ""last_move"": None, ""children"": None, ""best_child"": None}}  # Inicializace AR s počáteční pozicí
    
    #update_AR_for_mate_in_k(board, AR, simplified_fen, max_k=58)  # Aktualizace AR
    update_AR_for_mate_in_k(board, AR, max_k=1000)
    # Tělo funkce zůstává stejné...

    
    #print_draw_positions(AR)
    print(f""AR for initial fen is = {AR[simplified_fen]}"")
    find_path_to_end(AR, simplified_fen)
    

main()"
