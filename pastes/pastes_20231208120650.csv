id,title,username,language,date,content
xcrEQyJn,Untitled,ProgNeo,T-SQL,Friday 8th of December 2023 06:00:44 AM CDT,"--Генератор Студентов
CREATE TABLE #Name —Временная таблица для выгрузки имен
(
Имя VARCHAR(255),

)
CREATE TABLE #SurName —Временная таблица для выгрузки фамилий
(
Фамилия VARCHAR(255),

)
--Выгрузка имен
BULK INSERT #Name
FROM 'C:\Users\Алина\OneDrive\Рабочий стол\УД4\4\names_rus.txt'
WITH (
firstrow=1,
rowterminator = ';');
select *from #Name
--Выгрузка фамилий
BULK INSERT #SurName
FROM 'C:\Users\Алина\OneDrive\Рабочий стол\УД4\4\surnames_rus.txt'
WITH (
firstrow=1,
rowterminator = ';');
select *from #SurName

-- Генерирование 10 групп (хотя бы проверить столько, а там уже поменять явно не проблема)
DECLARE @groupCount int = 10;

WHILE @groupCount > 0
BEGIN
    -- Создание группы
    INSERT INTO dbo.Группы (Год_поступления, Шифр) VALUES (
        FLOOR(20 + RAND() * (24 - 20 + 1)),
        'ИСТб'
    );

    -- Генерация 30 студентов для текущей группы
    DECLARE @studentCount int = 30;
    DECLARE @currentStudent int = 1;

    WHILE @currentStudent <= @studentCount
    BEGIN
        -- Создание студента
        INSERT INTO dbo.Студенты (Группа_Номер, ФИО, Дата_рождения) VALUES (
            IDENT_CURRENT('dbo.Группы'), -- Номер группы получается из последней вставленной записи
            (SELECT TOP 1 Имя FROM #Name ORDER BY NEWID()) + ' ' + (SELECT TOP 1 Фамилия FROM #SurName ORDER BY NEWID()),
            -- Дата рождения от 2002 до 2005
            DATEADD(d, ROUND(DATEDIFF(d, '2002-01-01', '2005-12-31') * RAND(), 2), '2002-01-01')
        );

        -- Генерация 3 оценок для текущего студента
        DECLARE @gradeCount int = 3;
        DECLARE @currentGrade int = 1;

        WHILE @currentGrade <= @gradeCount
        BEGIN
            -- Создание оценки
            INSERT INTO dbo.Аттестация (Студенты_Номер_зачетки, ID_Предмета, Оценка) VALUES (
                IDENT_CURRENT('dbo.Студенты'),
                -- Выбираем случайный предмет
                (SELECT TOP 1 ID FROM dbo.Предметы ORDER BY NEWID()),
                -- Случайная оценка от 3 до 6
                RAND() * (6 - 3) + 3
            );

            SET @currentGrade = @currentGrade + 1;
        END;

        SET @currentStudent = @currentStudent + 1;
    END;

    SET @groupCount = @groupCount - 1;
END;

-- Очистка временных таблиц
DROP TABLE #Name;
DROP TABLE #SurName;"
JZwUM0FE,data776,TestGuy1,JSON,Friday 8th of December 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3060aac5a517a777e21921ea8658b8ade01045c734b01d3230d92aaefac8a8e619d8a0f7259e078b2f17b4d6011a53cc5aa1fd34ef7c6a3799e3ca4e1d0d6860ec87c8a755b684a0447ea7972b609e0f91f7f7def7efcb7dd8305a0d058b6ffe7c7ec1764cc512c456399b560e431b1cde851c718ff04e57e0ad52bcd65ff760',
  otherdata: [
    'ba225d66fc9043f3d63db37a2a5e9dc5',
    '37b5765843765bd65dbc9cddb05716bd',
    '52f4a5b0137531055b33fb5706d9a447',
    '867a5c0ad668492d0b2ed7a019e137e9',
    '0b86cc1d281976b549311ea89ced883b',
    '2e5bdeb94c75db99bb80fb634da5cfff',
    '280deff5d5869b007974805f11863f1c',
    '52402c0a3eb75eb77363db71a9112f21'
  ]
}"
uBMpaW1i,BTC Wallet Credentials have been reset,castlclass_20,GetText,Friday 8th of December 2023 05:50:08 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
avsetabn:Ztdz4V on 212.224.93.130
You can connect via SSH.
Regards"
07bX485M,tst,Lanzr,Lua,Friday 8th of December 2023 05:39:55 AM CDT,"local function enc(data)
        return ((data:gsub('.', function(x)
                local r,b='',x:byte()
                for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
                return r;
        end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
                if (#x < 6) then return '' end
                local c=0
                for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
                return b:sub(c+1,c+1)
        end)..({ '', '==', '=' })[#data%3+1])
end


local function genToken(user, pass)
        local userp = user.."":""..pass
        return ""Basic ""..enc(userp)
end"
mv7XJ96e,MP09_UF3_EJ3,Mike7GB,Java,Friday 8th of December 2023 05:35:40 AM CDT,"*****************
---- CLIENTE ----
*****************

package socket;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.*;
import java.util.Scanner;
/**
 *
 * @author luism
 */
public class Cliente {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException {
        // Crear socket y conectar con la dirección del servidor (localhost)
        Socket miSocket = new Socket(""localhost"",9999);
        
        // Indicar que el flujo de salida del programa pasa a ser el socket
        DataOutputStream flujoSalida = new DataOutputStream(miSocket.getOutputStream());
        
        // Crear mensaje
        Scanner sc = new Scanner(System.in);
        System.out.println(""Introduce la operación: "");
        String mensaje = sc.nextLine();       
        
        // Escribir texto en el flujo de salida
        flujoSalida.writeUTF(mensaje);
        
        // Cerrar el flujo de salida
        flujoSalida.close();
        
        // Cerrar socket
        miSocket.close();
        
    }
}


******************
---- SERVIDOR ----
******************

package socket;

import java.io.DataInputStream;
import java.io.IOException;
import java.net.*;
/**
 *
 * @author luism
 */
public class Servidor {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException {
        // Crear socket y asignar puerto
        ServerSocket srvrSocket = new ServerSocket(9999);
        
        // Escuchar y aceptar
        System.out.println(""Servidor funcionando."");
        Socket miSocket = srvrSocket.accept();
        
        // Indicar que el flujo de entrada pasa a ser el socket
        DataInputStream flujoEntrada = new DataInputStream(miSocket.getInputStream());
        
        // Obtener lo que hay en el flujo y guardarlo como string
        String mensaje = flujoEntrada.readUTF();
        
        // Procesar el mensaje
            // Variables
        String strOp1, strOp2, op; // Operando1, Operando2 y Operador
        int op1, op2, res; // Operando1, Operando2 y resultado de tipo integer
        
        // Verificar la operación
        if (mensaje.contains(""+"")) {
            op = ""+"";
        } else if (mensaje.contains(""-"")) {
            op = ""-"";
        } else {
            op = ""*"";
        }
        
        strOp1 = mensaje.substring(0,mensaje.indexOf(op));
        strOp2 = mensaje.substring(mensaje.indexOf(op)+1);
        
        // Casting de String a int
        op1 = Integer.parseInt(strOp1);
        op2 = Integer.parseInt(strOp2);
        
        // Cálculo
        if (op.equals(""+"")) {
            res = op1 + op2;
        } else if (op.equals(""-"")) {
            res = op1 - op2;
        } else {
            res = op1 * op2;
        }
        
        System.out.println(""\nEl resultado es ""+res);
        
        // Cerrar flujoEntrada
        flujoEntrada.close();
        
        // Cerrar sockets
        miSocket.close();
        srvrSocket.close();
    }
}"
HDwuN7ge,sky,skimono,C++,Friday 8th of December 2023 05:33:57 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

//#pragma GCC optimize(""Ofast"")
//#pragma GCC optimize(""no-stack-protector"")
//#pragma GCC optimize(""unroll-loops"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native"")
//#pragma GCC optimize(""fast-math"")

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long ll;
typedef short sh;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define sqrt sqrtl
#define F first
#define S second
#define endl '\n'
#define all(vc666) vc666.begin(), vc666.end()
#define allr(vc666) vc666.rbegin(), vc666.rend()
//#define int long long
#define degug(x) cerr (#x) << "" "" << (x) << endl;

const ll INF = 3e18 + 3;
const ll inf = 1e9 + 3;
const ll ONE = 1, ZERO = 0;
const ll mod = 1e9 + 7;
const ll m1 = 1e9 + 575179;
const ll m2 = 1e9 + 87;
const ll LG = 31;
const ll k = 347;
//const ll k_sqrt = 400;
//const ll p = 106033;
ld EPS = 1e-9;
ld PI = 3.1415926535897932384;
ld phi = (sqrt(5) + 1.0) / 2.0;
mt19937_64 gen(40906);

const int N = 1e3 + 10;
const int W = 1e2;
int a[N];
bitset <W> w;
bitset <W> zxc;
int pred[W];

void solve() {
    int n, i, j, weight = 0;
    cin >> n;
    for (i = 0; i < n; i++) {
        cin >> a[i];
        weight += a[i];
    }
    if (n <= 20) {
        int N = (1 << n);
        int s1 = 0, s2 = 0, mask;
        for (mask = 0; mask < N; mask++) {
            s1 = 0, s2 = 0;
            for (i = 0; i < n; i++) {
                if (mask & (ONE << i)) {
                    s1 += a[i];
                }
                else {
                    s2 += a[i];
                }
            }
            if (min(s1, s2) * (int)2 >= max(s1, s2)) {
                cout << ""YES"" << endl;
                for (i = 0; i < n; i++) {
                    if (mask & (ONE << i)) {
                        cout << a[i] << "" "";
                    }
                }
                return;
            }
        }
        cout << ""NO"" << endl;
    }
    else if (weight / 3 < W) {
        w[0] = 1;
        for (i = 0; i < n; i++) {
            w |= (w << a[i]);
            zxc ^= w;
            for (j = 0; j < W; j++) {
                if (zxc[j]) {
                    pred[j] = a[i];
                }
            }
        }
        for (j = 0; j < W; j++) {
            if (w[j] && weight - j > 0) {
                if (min(j, weight - j) * 2 >= max(j, weight - j)) {
                    vector <int> path;
                    while (j > 0) {
                        path.push_back(pred[j]);
                        j -= pred[j];
                    }
                    reverse(all(path));
                    cout << ""YES"" << endl;
                    for (auto it : path) {
                        cout << it << "" "";
                    }
                    return;
                }
            }
        }
        cout << ""NO"" << endl;
    }
    else {
        cout << ""NO"" << endl;
    }
}

signed main() {
#ifdef _DEBUG
    freopen(""input.txt"", ""r "", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    //freopen(""input.txt"", ""r "", stdin);
    //freopen(""output.txt"", ""w"", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) solve();
}
//Deisgned by skimono
//Клуб ""Кольца(Серьги)"""
qFgKpZi2,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Friday 8th of December 2023 05:30:17 AM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view#g2a_refund_exploit.pdf

Working as of 
07 December 2023

785918"
P54F7vRM,Strongest Punch sim by TEAM ANM,GG_HACKER,Lua,Friday 8th of December 2023 05:04:01 AM CDT,"--SCRIPT MADE BY GG HACKER (AKA : NERUPU_YT) & TEAM ANM
loadstring(game:HttpGet('https://raw.githubusercontent.com/GGHACKER007/Script-hub/main/Strongest%20Punch%20sim.lua'))()"
ufLmytjC,4_HW_31,Chl_Snt,Python,Friday 8th of December 2023 03:53:45 AM CDT,"import pytest
from contextlib import nullcontext as does_not_raise
from main import Calculator
from pytest import mark


class TestCalcFunctions:
    @mark.parametrize(
        ""a, b, result, expectation"",
        [
            (10, 2, 5, does_not_raise()),
            (50, 2, 25, does_not_raise()),
            (20, 10, 2, does_not_raise()),
            (30, -3, -10, does_not_raise()),
            (10, 0, 0, pytest.raises(ZeroDivisionError)),
            (""hello"", 3, 5, pytest.raises(ValueError)),
            (40, ""hello"", 5, pytest.raises(ValueError)),
            (Calculator, range, 5, pytest.raises(ValueError)),
            (pytest, {3, 3, 3}, 5, pytest.raises(ValueError)),
        ]
    )
    def test_division(self, a, b, result, expectation):
        c = Calculator()
        with expectation:
            assert c.calc(f""{a} / {b}"") == result

    @mark.parametrize(
        ""a, b, result, expectation"",
        [
            (1, 1, 2, does_not_raise()),
            (100, 100, 200, does_not_raise()),
            (-203, 3, -200, does_not_raise()),
            (43, -3, 40, does_not_raise()),
            (-3, -2, -5, does_not_raise()),
            (""hi"", -2, 0, pytest.raises(ValueError)),
            (3, ""hello"", 0, pytest.raises(ValueError)),
            (""ni hao"", ""bonjour"", 0, pytest.raises(ValueError)),
            (""howareyou"", ""imok"", 0, pytest.raises(ValueError)),
            (int, float, 0, pytest.raises(ValueError)),
        ]
    )
    def test_addition(self, a, b, result, expectation):
        c = Calculator()
        with expectation:
            assert c.calc(f""{a} + {b}"") == result

    @mark.parametrize(
        ""a, b, result, expectation"",
        [
            (10, 1, 9, does_not_raise()),
            (100, 14, 86, does_not_raise()),
            (-203, 3, -206, does_not_raise()),
            (0, -3, 3, does_not_raise()),
            (-3, -2, -1, does_not_raise()),
            (""hi"", -2, 0, pytest.raises(ValueError)),
            (3, ""hello"", 0, pytest.raises(ValueError)),
            (""ni hao"", ""bonjour"", 0, pytest.raises(ValueError)),
            (""howareyou"", ""imok"", 0, pytest.raises(ValueError)),
            (int, float, 0, pytest.raises(ValueError)),
        ]
    )
    def test_subtraction(self, a, b, result, expectation):
        c = Calculator()
        with expectation:
            assert c.calc(f""{a} - {b}"") == result

    @mark.parametrize(
        ""a, b, result, expectation"",
        [
            (1, 1, 1, does_not_raise()),
            (100, 100, 10000, does_not_raise()),
            (-203, 3, -609, does_not_raise()),
            (43, -3, -129, does_not_raise()),
            (-3, -2, 6, does_not_raise()),
            (""hi"", -2, 0, pytest.raises(ValueError)),
            (3, ""hello"", 0, pytest.raises(ValueError)),
            (""ni hao"", ""bonjour"", 0, pytest.raises(ValueError)),
            (""howareyou"", ""imok"", 0, pytest.raises(ValueError)),
            (int, float, 0, pytest.raises(ValueError)),
        ]
    )
    def test_multiplication(self, a, b, result, expectation):
        c = Calculator()
        with expectation:
            assert c.calc(f""{a} * {b}"") == result
"
jGvJ7a4y,Untitled,Larme,Swift,Friday 8th of December 2023 03:51:22 AM CDT,"    class Item: NSObject {
        var naam: String
        var datum: String
        
        override init(){
            naam = """"
            datum = """"
        }
        
        init(_ naam: String, _ datum: String){
            self.naam = naam
            self.datum = datum
        }
        
        override var description: String {
            return ""Item <naam: \(naam) - datum: \(datum)>""
        }
    }
    
    print(""With Class test"")
    var items = [Item]()
    
    var item = Item(""namea"", ""datuma"")
    print(item)
    items.append(item)
    print(items)

    item.naam = ""nameb""
    item.datum = ""datumb""
    print(item)
    print(items)
    
    print(""With Struct test"")

    struct Item2: CustomStringConvertible {
        var naam: String
        var datum: String
        
        var description: String {
            return ""Item2 <naam: \(naam) - datum: \(datum)>""
        }
    }
    
    var items2 = [Item2]()
    var item2 = Item2(naam: ""namea"", datum: ""datuma"")
    print(item2)
    items2.append(item2)
    print(items2)
    
    item2.naam = ""nameb""
    item2.datum = ""datumb""
    print(item2)
    print(items2)"
jstbd16v,pr17_4,LIA00,C#,Friday 8th of December 2023 03:32:22 AM CDT,"using System;
using System.IO;
using System.Text;

namespace ConsoleApp1
{
    class Program
    {
        // 17 / 4 
        // Создать класс Money c заданными членами
        // 1 2 3 4

        struct Money
        {
            int Denomination;        // номинал купюры
            int NumberOfBanknotes;    // количество купюр


            public Money(int Denomination, int NumberOfBanknotes) // Конструктор, позволяющий создать экземпляр класса с заданными значениям полей
            {
                this.Denomination = Denomination;
                this.NumberOfBanknotes = NumberOfBanknotes;
            }

            // Два метода, позволяющий вывести значения полей
            public void Print(StreamWriter stream)  // вывод в фэйловый поток
            {
                stream.WriteLine(""[{0} руб.] - {1}"", Denomination, NumberOfBanknotes);
            }

            public void Print()                     // вывод в консоль
            {
                Console.WriteLine(""[{0} руб.] - {1}"", Denomination, NumberOfBanknotes);
            }

            // Метод, позволяющий определить, хватит ли средств на покупку стоимостью в N рублей
            bool IsEnoughToSpend(int cost)
            {
                return cost <= MoneySum;
            }

            // Метод, позволяющий определить, сколько товаров стоимостью в N рублей можно будет приобрести на имеющиеся средства
            public int MaxNumberOfPurchases(int cost)
            {
                int count = 0;
                if (IsEnoughToSpend(cost))
                {
                    count = (MoneySum) / cost;
                }
                return count;
            }

            // Два свойства для чтения/установки значений полей
            public int DenominationValue
            {
                get
                {
                    return Denomination;
                }
                set 
                {
                    Denomination = value;
                }
            }
            public int NOBValue
            {
                get
                {
                    return NumberOfBanknotes;
                }
                set 
                {
                    NumberOfBanknotes = value;
                }
            }

            // Свойство, позволяющее расчитатать сумму денег (доступное только для чтения)
            readonly int MoneySum
            {
                get
                {
                    return NumberOfBanknotes * Denomination;
                }
            }



        }

        static void Main()
        {
            using (StreamReader Input = new StreamReader(@""C:\Users\lavrentev_ia\source\repos\ConsoleApp1\ConsoleApp1\bin\input.txt""))
            {

            }

            using (StreamWriter Output = new StreamWriter(@""C:\Users\lavrentev_ia\source\repos\ConsoleApp1\ConsoleApp1\bin\output.txt""))
            {
            }
        }
    }
}
"
fVsZjgTE,sfwbar,bluebyt,INI file,Friday 8th of December 2023 03:28:42 AM CDT," meson setup build    
ninja -C build
sudo ninja -C build install

The Meson build system
Version: 1.3.0
Source dir: /home/bluebyt/Downloads/sfwbar
Build dir: /home/bluebyt/Downloads/sfwbar/build
Build type: native build
Project name: sfwbar
Project version: undefined
C compiler for the host machine: cc (gcc 13.2.1 ""cc (GCC) 13.2.1 20230801"")
C linker for the host machine: cc ld.bfd 2.41.0
Host machine cpu family: x86_64
Host machine cpu: x86_64
Found pkg-config: YES (/usr/bin/pkg-config) 2.1.0
Run-time dependency gtk+-3.0 found: YES 3.24.38
Run-time dependency glib-2.0 found: YES 2.78.3
Run-time dependency gio-2.0 found: YES 2.78.3
Run-time dependency gio-unix-2.0 found: YES 2.78.3
Run-time dependency gmodule-2.0 found: YES 2.78.3
Run-time dependency json-c found: YES 0.17
Run-time dependency gtk-layer-shell-0 found: YES 0.8.1
Run-time dependency wayland-client found: YES 1.22.0
Run-time dependency wayland-protocols found: YES 1.32
Run-time dependency libpulse found: YES 16.1
Run-time dependency libpulse-mainloop-glib found: YES 16.1
Run-time dependency libmpdclient found: YES 2.20
Run-time dependency xkbregistry found: YES 1.6.0
Run-time dependency alsa found: YES 1.2.10
Configuring meson.h using configuration
Program wayland-scanner found: YES (/usr/bin/wayland-scanner)
Build targets in project: 18

Found ninja-1.11.1 at /usr/bin/ninja
ninja: Entering directory `build'                                            
[87/87] Linking target sfwbar
[sudo] password for bluebyt: 
ninja: Entering directory `build'
[0/1] Installing files.
Installing subdir /home/bluebyt/Downloads/sfwbar/config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/weather.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/mb-temp.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/cpu-temp.source to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-backlight.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-temp.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/alsa.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/mpd.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/pulse-module.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/idle.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-memory.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/alsa-module.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/memory.source to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-net.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/winops.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/vertical.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/mpd-intmod.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/twoline.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/bluez.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/swap.source to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/rfkill.source to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-mpd.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/mpd-mini.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/t2.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/rfkill-bt.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/lan-bps.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/test.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/cpu.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-sway-lang.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-bluetooth.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/test.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/sfwbar.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/showdesktop.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/sway-lang.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-idleinhibit.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/fan-rpm.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/cpu.source to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/clock.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/startmenu.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/cpu-temp.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/test2.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/mpd-module.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/oneline.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-pulse.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/rfkill-wifi.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/mpd.source to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/network-module.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-cpu.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/battery-svg.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wbar-battery.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/wifi-iwd.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/w10.config to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/usage.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/memory.widget to /usr/local/share/sfwbar
Installing /home/bluebyt/Downloads/sfwbar/config/battery.widget to /usr/local/share/sfwbar
Installing subdir /home/bluebyt/Downloads/sfwbar/icons/weather to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsnowandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrainshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsnowshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/clearsky_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrain.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrainshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnowshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightssnowshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsnow.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snowshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsleetshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleetandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/fair_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snowshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleetshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsnowshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/cloudy.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleetshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightssleetshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/partlycloudy_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrainandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/fair_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snow.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snowshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/fog.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrainshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrainshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleetshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsleetshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleetshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrainshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rainshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/clearsky_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rainshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rainshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleetshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleet.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleetshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snowshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrain.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrainshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightssnowshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleet.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrainshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsnowshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleetandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/partlycloudy_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleetshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/LICENSE to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleetshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/clearsky_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rainshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleetshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/fair_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleetshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightssnowshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightssleetshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnow.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnowshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrainshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrainshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnowshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsleetandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snowandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/sleetshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snowshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrainandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightssleetshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rain.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnowshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavyrainshowersandthunder_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnowshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/snowshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysleetshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rainandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnowandthunder.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrainshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rainshowers_night.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/heavysnowshowersandthunder_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsleet.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/rainshowers_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/partlycloudy_day.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightsleetshowers_polartwilight.svg to /usr/local/share/sfwbar/icons/weather
Installing /home/bluebyt/Downloads/sfwbar/icons/weather/lightrainshowersandthunder_day.svg to /usr/local/share/sfwbar/icons/weather
Installing subdir /home/bluebyt/Downloads/sfwbar/icons/misc to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/lan.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/fforward.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/lock.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/missing.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/music-player-symbolic.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/cpu.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/fan.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/rewind.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/unlock.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/stop.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/comp.svg to /usr/local/share/sfwbar/icons/misc
Installing /home/bluebyt/Downloads/sfwbar/icons/misc/play.svg to /usr/local/share/sfwbar/icons/misc
Installing libsfwbar.so to /usr/local/lib
Installing network.so to /usr/local/lib/sfwbar
Installing bluez.so to /usr/local/lib/sfwbar
Installing wifi-iwd.so to /usr/local/lib/sfwbar
Installing pulsectl.so to /usr/local/lib/sfwbar
Installing mpd.so to /usr/local/lib/sfwbar
Installing alsactl.so to /usr/local/lib/sfwbar
Installing xkbmap.so to /usr/local/lib/sfwbar
Installing idleinhibit.so to /usr/local/lib/sfwbar
Installing sfwbar to /usr/local/bin
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar-network.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar-bluez.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar-pulse.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar-mpd.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar-alsa.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar-xkbmap.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/doc/sfwbar-idleinhibit.1 to /usr/local/share/man/man1
Installing /home/bluebyt/Downloads/sfwbar/icons/sfwbar.svg to /usr/local/share/icons/hicolor/scalable/apps
"
p991E7CQ,05. Even and Odd Subtraction,Traio,C++,Friday 8th of December 2023 03:27:12 AM CDT,"

#include <iostream>
using namespace std;

//const int maxSize = 99; // (1) <<<<<< със това НЕРАБОТИ В Judg а компилатора си компилира правилно

int main()
{
	//int arr[maxSize]; // (1) <<<<< със това НЕРАБОТИ В Judg а компилатора си компилира правилно

	int size;
	cin >> size;
	
	int arr[size]; // (2) <<<<<<< СЪС ТОВА МИНАВА Judg , а компиулатора подчертаза [size] ?!

	for (int i = 0; i < size; i++)
	{
		cin >> arr[i];
	}

	int evenSum = 0;
	int oddSum = 0;

	for (int number : arr) {
		if (number % 2 == 0) {
			evenSum += number;
		}
		else {
			oddSum += number;
		}
	}


	cout << evenSum - oddSum << endl;



	return 0;
}

"
C085m5G6,Pacific Engagement Visa: A New Visa Program for Pacific Islands and Other Countries,ONEderland,HTML,Friday 8th of December 2023 03:21:45 AM CDT,https://onederland.com.au/pacific-engagement-visa-program-borns-for-pacific-islanders/
CdWrZ2bK,6. Gym Session,horozov86,Python,Friday 8th of December 2023 03:20:47 AM CDT,"# 6.	Gym Session

@classmethod
def get_long_and_hard_exercises(cls):
    query = Q(duration_minutes__gt=30) & Q(difficulty_level__gte=10)
    return cls.objects.filter(query)
    
@classmethod
def get_short_and_easy_exercises(cls):
    query = Q(duration_minutes__lt=15) & Q(difficulty_level__lt=5)
    return cls.objects.filter(query)
    
@classmethod
def get_exercises_within_duration(cls, min_duration: int, max_duration: int):
    return cls.objects.filer(duration_minutes__range(min_duration, max_duration))

@classmethod
def get_exercises_with_difficulty_and_repetitions(min_difficulty: int, min_repetitions: int):
    return cls.objects.filter(difficulty_level__gte=min_difficulty, repetitions__gte=min_repetitions)"
T68rhbnm,zad 3,misiekii123,C++,Friday 8th of December 2023 03:20:37 AM CDT,"// ######################## Zadanie 3 (nazwa zmiennej) ########################
#include <iostream>
#include <cctype>

using namespace std;

int main() {
	int n, i = 0;
	char zn;
	bool isGood = true;

	cin >> n;

	zn = cin.get();

	while (i <= n && isGood) {
		if (i == 0) {
			if (zn != '_' && isdigit(zn))
				isGood = false;
		}
		else if (i > 0) {
			if (isalnum(zn) == false && zn != '_') {
				isGood = false;
			}
			else {
				isGood = true;
			}
		}

		i++;
		zn = cin.get();
	}

	if (isGood) {
		cout << ""To jest poprawna nazwa zmiennej"";
	}
	else {
		cout << ""To jest niepoprawna nazwa zmiennej"";
	}
}"
XHyiqWpF,Covid-19 Pandemic Visa Concession is Officially Ended,ONEderland,HTML,Friday 8th of December 2023 03:20:06 AM CDT,https://onederland.com.au/covid-19-pandemic-concession-is-officially-ended/
VxxzaLBF,Untitled,VolanDKB,PHP,Friday 8th of December 2023 02:55:38 AM CDT,"public function getTestNotifyData($type)
    {
        $notifyData = [];
        if (in_array($type, self::$possibleNotifyHookType)) {
            $callStart = date('Y-m-d\TH:i:s') . 'Z';
            $randInt = rand(10, 99);
            switch ($type) {
                case self::NOTIFY_START_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'called_did' => '+13213123123',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                    ];
                    break;

                case self::NOTIFY_MISSED_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'called_did' => '+13213123123',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                    ];
                    break;

                case self::NOTIFY_ANSWER_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'called_did' => '+13213123123',
                        'internal' => '100',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                        'callback_var' => 'callback_out_1232b312f12b31b2f3fbb312',
                    ];

                    break;

                case self::NOTIFY_END_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'called_did' => '+13213123123',
                        'internal' => '100',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                        'is_recorded' => true,
                        'duration' => 8,
                        'record_url' => 'https://my.zadarma.com/assets/incoming-call.mp3',
                    ];

                    break;

                case self::NOTIFY_OUT_START_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'dst' => '+13213123123',
                        'internal' => '100',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                        'callback_var' => 'callback_out_1232b312f12b31b2f3fbb312',
                    ];
                    break;

                case self::NOTIFY_OUT_MISSED_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'dst' => '+13213123123',
                        'internal' => '100',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                        'callback_var' => 'callback_out_1232b312f12b31b2f3fbb312',
                    ];
                    break;

                case self::NOTIFY_OUT_ANSWER_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'dst' => '+13213123123',
                        'internal' => '100',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                        'callback_var' => 'callback_out_1232b312f12b31b2f3fbb312',
                    ];

                    break;

                case self::NOTIFY_SMS_HOOK_TYPE:
                    $notifyData = [
                        'from' => sprintf('+123456123%d', $randInt),
                        'to' => '+13213123123',
                        'text' => 'some sms text',
                    ];

                    break;

                case self::NOTIFY_OUT_END_HOOK_TYPE:
                    $notifyData = [
                        'caller_id' => sprintf('+123456123%d', $randInt),
                        'dst' => '+13213123123',
                        'internal' => '100',
                        'callstart' => $callStart,
                        'pbx_call_id' => 'in_1232b312f12b31b2f3fbb312',
                        'callback_var' => 'callback_out_1232b312f12b31b2f3fbb312',
                        'is_recorded' => true,
                        'duration' => 8,
                        'record_url' => 'https://my.zadarma.com/assets/incoming-call.mp3',
                    ];

                    break;
            }
        }

        return $notifyData;
    }"
dJi9krRX,lab10,Filage,C++,Friday 8th of December 2023 02:53:09 AM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int TakeNum(const int MIN, const int MAX) {
    const string ERROR_CHOISE = ""Проверьте корректность введнных данных!\n"";
    bool isIncorrect;
    int num;
    do {
        isIncorrect = false;
        cin >> num;
        if (cin.fail()) {
            isIncorrect = true;
            cout << ERROR_CHOISE;
            cin.clear();
            while (cin.get() != '\n');
        }
        if (!isIncorrect && cin.get() != '\n') {
            cin.clear();
            while (cin.get() != '\n');
            cout << ERROR_CHOISE;
            isIncorrect = true;
        }
        if (!isIncorrect && (num < MIN || num > MAX)) {
            isIncorrect = true;
            cout << ERROR_CHOISE;
        }
    } while (isIncorrect);
    return num;
}

// function for the second task
void swap(int *x, int *y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}


// function for the fourth task
void amstrongNumber(int k, int& first, int& second) {
    int count = 0, temp, sum, digit, i, j = 0;
    bool isTwo = false;
    for(int i = 11; i < k + 1; i++) {
        sum = 0;
        count = 0;
        temp = i;
        while (temp > 0) {
            temp /= 10;
            count++;
        }
        temp = i;
        while (temp > 0) {
            digit = temp % 10;
            sum += pow(digit, count);
            temp /= 10;
        }
        if (sum == i && j == 0) {
            first = sum;
            j++;
        }
        else if (sum == i && j == 1) {
            second = sum;
            j++;
        }
    }
}
int main() {
    setlocale(LC_ALL, """");

    // First task
    cout << ""Задание 1\n"";
    long value1 = 200000, value2;
    long* yk = &value1;
    cout << *yk << endl;
    value2 = *yk;
    cout << value2 << endl;
    cout << &value1 << endl;
    cout << yk << endl;

    // Second task
    cout << ""\nЗадание 2\n"";
    int a = 3, b = 5;
    swap(a, b);
    cout << a << "" and "" << b << endl;

    // Third task
    cout << ""\nЗадание 3\n"";
    int* Ptr;   
    a = 7; Ptr = &a;
    cout << ""Адрес а = "" << & a << ""\nЗначение указателя Ptr = "" << Ptr;
    cout << ""\nЗначение а = "" << a << ""\nЗначение, нак которое указывает Ptr = "" << *Ptr;
    cout << ""\n&*Ptr = "" << &*Ptr << ""\n*&Ptr = "" << *&Ptr << endl;

    // Fourth task
    cout << ""\nЗадание 4\n"";
    int k = 500, first = 0, second = 0;
    amstrongNumber(k, first, second);
    if (first == 0 && second == 0)
        cout << ""В данном диапазоне таких чисел нет"";
    else if (first != 0 && second == 0)
        cout << ""В данном диапазоне только одно число Амстронга = "" << first;
    else
        cout << ""В данном диапазоне первое число Амстронга = "" << first << "", а второе = "" << second;
}
"
XMBra3VZ,Untitled,yarin0600,JavaScript,Friday 8th of December 2023 02:33:10 AM CDT,"// TrieNode.js file:
--------------------
export class TrieNode {
  #map;
  #wordQuantity;
  constructor() {
    this.map = new Map();
    this.wordQuantity = 0;
  }

  get map() {
    return this.#map;
  }
  get wordQuantity() {
    return this.#wordQuantity;
  }

  set map(i_Map) {
    this.#map = i_Map;
  }
  set wordQuantity(i_WordQuantity) {
    this.#wordQuantity = i_WordQuantity;
  }
}

--------------------
// Trie.js file:
import { TrieNode } from ""./TrieNode.js"";

export class Trie {
  #root;
  constructor() {
    this.root = new TrieNode();
  }

  get root() {
    return this.#root;
  }
  set root(i_Root) {
    this.#root = i_Root;
  }

  insert(i_NewWord) {
    let current = this.root;

    for (const char of i_NewWord) {
      if (!current.map.has(char)) {
        current.map.set(char, new TrieNode());
      }
      current = current.map.get(char);
    }

    ++current.wordQuantity;
  }
}
--------------------
// index.js file
--------------------

import { Trie } from ""./Trie.js"";
import { TrieNode } from ""./TrieNode.js"";
const strings = [""aa"", ""a"", ""ab"", ""aab""];

// strings.sort(); // [""a"", ""aa"", ""aab"", ""ab""]

const countPrefixPairs = (root, wordsCount, totalPairs) => {
  if (!root) {
    return;
  }

  if (root.wordQuantity > 0) {
    wordsCount += root.wordQuantity;
    totalPairs.ctr += wordsCount - 1;
  }

  root.map.forEach((currentNode) =>
    countPrefixPairs(currentNode, wordsCount, totalPairs)
  );
};

let trie = new Trie();

for (const curStr of strings) {
  trie.insert(curStr);
}

let totalPairs = { ctr: 0 };
countPrefixPairs(trie.root, 0, totalPairs);
console.log(totalPairs);

"
WD7Yr6yW,Untitled,Vassa007,Dart,Friday 8th of December 2023 02:12:15 AM CDT,"import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:mrsklinik/app/themes/app_color.dart';
import 'package:mrsklinik/data/model/data_dummy.dart';
import 'package:mrsklinik/presentation/dashboard/widgets/header_dashboard.dart';
import 'package:mrsklinik/presentation/dashboard/widgets/navigation_rail_menu.dart';
import 'package:mrsklinik/presentation/dashboard/widgets/welcome_box.dart';

class Dashboard extends StatefulWidget {
  const Dashboard({super.key});

  @override
  State<Dashboard> createState() => _DashboardState();
}

class _DashboardState extends State<Dashboard> {
  final _searchController = TextEditingController();
  final ScrollController _controller = ScrollController();
  final List<String> navMenu = [
    'Home',
    'Consultation',
    'Medicine',
    'Recipe',
  ];
  final List<IconData> navIcon = [
    FontAwesomeIcons.houseMedical,
    FontAwesomeIcons.userDoctor,
    FontAwesomeIcons.prescriptionBottleMedical,
    FontAwesomeIcons.pills,
  ];
  late int selectedIndex = 0;

  List<DataDummy> listData = [];
  List<String> listDataDummy = [];

  void fetchData() async {
    final String response = await rootBundle.loadString('assets/dummy.json');
    final data = await json.decode(response);

    Map<String, dynamic> dummyMap = data;
    List userMap = dummyMap['data'];

    await Future.delayed(const Duration(seconds: 1), () {
      userMap.forEach((element) async {
        listData.add(DataDummy(element['name'], element['photo'], element['time'],
            element['date'], element['queue'], element['label']));
      });
    });
  }

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    selectedIndex = 0;
    fetchData();
  }

  List<Widget> listNavigation = [
    Container(
        margin: const EdgeInsets.fromLTRB(0, 20, 0, 10),
        child: Text(
          ""Page Consultation"",
          style: GoogleFonts.nunitoSans(
              fontWeight: FontWeight.w800,
              fontSize: 22.0,
              color: AppColor.BackgroundDark),
        )),
    Container(
        margin: const EdgeInsets.fromLTRB(0, 20, 0, 10),
        child: Text(
          ""Page Medicine"",
          style: GoogleFonts.nunitoSans(
              fontWeight: FontWeight.w800,
              fontSize: 22.0,
              color: AppColor.BackgroundDark),
        )),
    Container(
        margin: const EdgeInsets.fromLTRB(0, 20, 0, 10),
        child: Text(
          ""Page Recipe"",
          style: GoogleFonts.nunitoSans(
              fontWeight: FontWeight.w800,
              fontSize: 22.0,
              color: AppColor.BackgroundDark),
        )),
  ];

  @override
  void dispose() {
    // TODO: implement dispose
    super.dispose();
    _searchController.dispose();
    _controller.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      extendBody: true,
      body: SafeArea(
        child: Column(
          mainAxisSize: MainAxisSize.max,
          children: [
            Expanded(
                flex: 0,
                child: HeaderDashborad(
                  hintText: 'Pencarian',
                  controller: _searchController,
                  icoton: IconButton(
                    onPressed: () {},
                    icon: const Icon(
                      FontAwesomeIcons.search,
                      color: Colors.grey,
                    ),
                  ),
                  typeInput: TextInputType.text,
                )),
            Expanded(
                flex: 1,
                child: Row(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    /// Navigationrail Menu
                    NavigationRailMenu(
                      navMenu: navMenu,
                      navIcon: navIcon,
                      selectedIndex: selectedIndex,
                      selectedDestination: (i) {
                        setState(() {
                          selectedIndex = i;
                        });
                      },
                    ),

                    Expanded(
                        flex: 4, 
                        child: 
                        IndexedStack(
                          index: selectedIndex, 
                          children: listNavigation,
                        )
                    ),

                    /// content
                    if (selectedIndex == 0)
                      ///Dashboard
                      Expanded(
                          flex: 4,
                          child: SingleChildScrollView(
                            scrollDirection: Axis.vertical,
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              mainAxisAlignment: MainAxisAlignment.start,
                              children: [
                                const WelcomeBox(
                                  name: 'Olivia',
                                ),
                                Container(
                                  margin:
                                      const EdgeInsets.fromLTRB(20, 0, 40, 0),
                                  width: ScreenUtil().screenWidth,
                                  child: Row(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceBetween,
                                    children: [
                                      Container(
                                          margin: const EdgeInsets.fromLTRB(
                                              0, 20, 0, 10),
                                          child: Text(
                                            ""List of Patient (${listData.length})"",
                                            style: GoogleFonts.nunitoSans(
                                                fontWeight: FontWeight.w800,
                                                fontSize: 22.0,
                                                color: AppColor.BackgroundDark),
                                          )),
                                      InkWell(
                                        onTap: () {
                                          setState(() {
                                            selectedIndex = 1;
                                          });
                                        },
                                        child: Container(
                                            margin: const EdgeInsets.fromLTRB(
                                                20, 20, 0, 10),
                                            child: Text(
                                              ""See all"",
                                              style: GoogleFonts.nunitoSans(
                                                  fontSize: 20.0,
                                                  color: AppColor.Blue),
                                            )),
                                      ),
                                    ],
                                  ),
                                ),
                                Container(
                                  margin:
                                      const EdgeInsets.fromLTRB(20, 0, 40, 0),
                                  child: ListView.builder(
                                      shrinkWrap: true,
                                      controller: _controller,
                                      itemCount: listData.length,
                                      itemBuilder: (context, index) {
                                        return InkWell(
                                          onTap: () {
                                            print(
                                                ""selected ${listData[index].name}"");
                                          },
                                          child: Row(
                                            crossAxisAlignment:
                                            CrossAxisAlignment.center,
                                            mainAxisAlignment:
                                            MainAxisAlignment.spaceBetween,
                                            children: [
                                              Container(
                                                width: 65,
                                                height: 65,
                                                margin:
                                                const EdgeInsets.all(10),
                                                decoration: BoxDecoration(
                                                    shape: BoxShape.circle,
                                                    image: DecorationImage(
                                                        image: NetworkImage(
                                                            listData[index]
                                                                .photo),
                                                        fit: BoxFit.cover),
                                                    border: Border.all(
                                                        width: 0,
                                                        color: Colors.black38)),
                                              ),
                                              Text(
                                                listData[index].name,
                                                style: GoogleFonts.nunitoSans(
                                                    fontWeight: FontWeight.w800,
                                                    fontSize: 18.0,
                                                    color: AppColor
                                                        .BackgroundDark),
                                              ),
                                              Text(
                                                listData[index].time,
                                                style: GoogleFonts.nunitoSans(
                                                    fontWeight: FontWeight.w800,
                                                    fontSize: 18.0,
                                                    color: AppColor.Gray400),
                                                textAlign: TextAlign.start,
                                              ),
                                              Text(
                                                listData[index].date,
                                                style: GoogleFonts.nunitoSans(
                                                    fontWeight: FontWeight.w800,
                                                    fontSize: 18.0,
                                                    color: AppColor.Gray400),
                                                textAlign: TextAlign.start,
                                              ),
                                              Text(
                                                listData[index].queue,
                                                style: GoogleFonts.nunitoSans(
                                                    fontWeight: FontWeight.w800,
                                                    fontSize: 18.0,
                                                    color: AppColor
                                                        .BackgroundDark),
                                                textAlign: TextAlign.start,
                                              ),
                                              Text(
                                                listData[index].label,
                                                style: GoogleFonts.nunitoSans(
                                                    fontWeight: FontWeight.w800,
                                                    fontSize: 18.0,
                                                    color: AppColor.Gray400),
                                                textAlign: TextAlign.start,
                                              ),
                                              Container(
                                                width: 50.w,
                                                height: 50.h,
                                                decoration: BoxDecoration(
                                                    shape: BoxShape.circle,
                                                    color:
                                                    AppColor.GreenCircle),
                                                child: Icon(
                                                  FontAwesomeIcons.stethoscope,
                                                  color:
                                                  AppColor.BackgroundLight,
                                                  size: 28,
                                                ),
                                              )
                                            ],
                                          ),
                                        );
                                      }),
                                )
                              ],
                            ),
                          )),
                    if (selectedIndex == 1)
                      /// Page 2
                      Expanded(
                          flex: 4,
                          child: Center(
                            child: Container(
                                margin: const EdgeInsets.fromLTRB(0, 20, 0, 10),
                                child: Text(
                                  ""Page ${selectedIndex+1}"",
                                  style: GoogleFonts.nunitoSans(
                                      fontWeight: FontWeight.w800,
                                      fontSize: 22.0,
                                      color: AppColor.BackgroundDark),
                                )),
                          )),
                    if (selectedIndex == 2)
                      /// Page 3
                      Expanded(
                          flex: 4,
                          child: Center(
                            child: Container(
                                margin: const EdgeInsets.fromLTRB(0, 20, 0, 10),
                                child: Text(
                                  ""Page ${selectedIndex + 1}"",
                                  style: GoogleFonts.nunitoSans(
                                      fontWeight: FontWeight.w800,
                                      fontSize: 22.0,
                                      color: AppColor.BackgroundDark),
                                )),
                          )),
                    if (selectedIndex == 3)
                      /// Page 4
                      Expanded(
                          flex: 4,
                          child: Center(
                            child: Container(
                                margin: const EdgeInsets.fromLTRB(0, 20, 0, 10),
                                child: Text(
                                  ""Page ${selectedIndex + 1}"",
                                  style: GoogleFonts.nunitoSans(
                                      fontWeight: FontWeight.w800,
                                      fontSize: 22.0,
                                      color: AppColor.BackgroundDark),
                                )),
                          )),
                  ],
                ))
          ],
        ),
      ),
    );
  }
}
"
7J8gqDTR,plugin loader demo using import_module,igendel,Python,Friday 8th of December 2023 01:56:29 AM CDT,"import glob
import importlib

plugins_dir = ""plugins""

def main():

    plugins = [];
    for full_name in glob.glob(plugins_dir + ""/*.py""):
        print(""Importing plugin from "" + full_name)
        module_ref = full_name.replace(""\\"", ""."")
        module_ref = module_ref[0:module_ref.rfind("".py"")]
        plugins.append(importlib.import_module(module_ref))

    for pl in plugins:
        print([item for item in pl.__dir__() if not item.startswith(""__"")])


if __name__ == '__main__':
    main()
"
Q43rvzb6,Horrible formatting,uniblab,C#,Friday 8th of December 2023 01:49:30 AM CDT,"public TodoService(
    IHttpClientFactory httpClientFactory,
    ILogger<TodoService> logger) =>
    (_httpClientFactory, _logger) = (httpClientFactory, logger);"
ZjmHf5M0,ddddddddddddddddddddddddddddddd,ad3rrch,C#,Friday 8th of December 2023 01:34:36 AM CDT,"using System;
 
namespace Integrate
{
    public static class Program
    {
        static void Main()
        {   
            double trapezoid = IntegrateByTrapezoid(Functions.F1, 0, 1, 500);
            double simpson = IntegrateBySimpson(Functions.F1, 0, 1, 500);
            
            Console.WriteLine(""Задание 1"");
            Console.WriteLine($""Метод трапеций: {trapezoid}"");
            Console.WriteLine($""Метод Симпсона: {simpson}"");
            
            trapezoid = IntegrateByTrapezoid(Functions.F2, 0, 1, 500);
            simpson = IntegrateBySimpson(Functions.F2, 0, 1, 500);
            
            Console.WriteLine(""Задание 2"");
            Console.WriteLine($""Метод трапеций: {trapezoid}"");
            Console.WriteLine($""Метод Симпсона: {simpson}"");
            
            trapezoid = IntegrateByTrapezoid(Functions.F3, 1, 2, 500);
            simpson = IntegrateBySimpson(Functions.F3, 1, 2, 500);
            
            Console.WriteLine(""Задание 3"");
            Console.WriteLine($""Метод трапеций: {trapezoid}"");
            Console.WriteLine($""Метод Симпсона: {simpson}"");
        }
    
        public static double IntegrateByTrapezoid(Fun f, double a, double b, int parts)
        {
            double sum = (f(a) + f(b)) / 2;
            double step = (b - a) / parts;
        
            for (double val = a + step; val < b; val += step)
            {
                sum += f(val);
            }
        
            return step * sum;
        }
      
        public static double IntegrateBySimpson(Fun f, double a, double b, int parts)
        {
            double sum = f(a) + f(b);
            double step = (b - a) / partsCount;
            double val = a + step;
            int coeff;
        
            for (int i = 1; val < b; val += step, i++)
            {
                if (i % 2 == 0) 
                    coeff = 2;
                else
                    coeff = 4;
            
                sum += coeff * f(val);
            }
        
            return step * sum / 3;
        }
        
        public struct Functions
        {
            public static double F1(double x) => Math.Cos(x + Math.Pow(x, 3));
            
            public static double F2(double x) => Math.Pow(Math.E, Math.Sin(x));
            
            public static double F3(double x) => Math.Sin(Math.Pow(x, 3));
        }
      
        public delegate double Fun(double x);
    }
}"
yCi5TsAC,Python exec external file with params demo,igendel,Python,Friday 8th of December 2023 01:13:23 AM CDT,"# This is the ""plugin"" file to be executed. Copy and paste it as ""amazingPlugin.py""
# It expects the variables: 'data' (string) and 'result' (dictionary)
# 'result' will contain the entries 'first_char', 'last_char', 'length'

result[""first_char""] = data[0]
result[""last_char""] = data[-1]
result[""length""] = len(data)

#---------------------------------------------------------------------------------------

# This is the demo code. Copy and paste it as a different .py file in the same directory

s = ""Hello plugin!""

with open(""amazingPlugin.py"") as f:
    plugin = f.read()
f.close()


return_dict = {""data"": s, ""result"" : {}}
try:
    exec(plugin, {}, return_dict)
except:
    print(""something bad happened!"")

print(""Plugin processing result:"", return_dict)


"
arbPM5i6,Column Transformer,naren_paste,Python,Friday 8th of December 2023 12:55:15 AM CDT,"num_columns = [""""] # Add the appropriate column names
cat_columns = [""""] # Add the appropriate column names

from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.compose import ColumnTransformer

num_pipeline = Pipeline(
                steps=[
                    (""impute"", SimpleImputer(strategy=""median"")),
                    (""scaler"", StandardScaler()),
                ]
            )

preprocessor = ColumnTransformer(
                transformers=[
                    (""num_pipeline"", num_pipeline, num_columns)
                ]
            )

input_feature_train = df.drop('price', axis=1)

arr = pd.DataFrame(preprocessor.fit_transform(input_feature_train),columns=preprocessor.get_feature_names_out())
print(arr)"
tuCWLZks,Untitled,Amirmohammad-sh,C++,Thursday 7th of December 2023 11:57:50 PM CDT,"#include <bits/stdc++.h>
using namespace std;

const int N = 3e4 + 10, N1 = 2e5 + 10;
set<int> s;
map<int, int> mp;
int n, q, a[N], ans[N1], fen[N + N1];
vector<pair<int, int>> ql[N1], qr[N1];

void update(int x) {
	for (int i = x; i < N + N1; i += (i & -i)) {
		fen[i]++;
	}
}

int sum(int l, int r) {
	int ans1 = 0;
	for (int i = r; i > 0; i -= (i & -i)) {
		ans1 += fen[i];
	}
	for (int i = l - 1; i > 0; i -= (i & -i)) {
		ans1 -= fen[i];
	}
	return ans1;
}

int main() {
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		s.insert(a[i]);
	}
	cin >> q;
	for (int i = 0; i < q; i++) {
		int l, r, k;
		cin >> l >> r >> k;
		s.insert(k);
		qr[r].push_back({k, i});
		ql[l].push_back({k, i});
	}
	int cnt = 1;
	while (!s.empty()) {
		mp[*s.begin()] = cnt++;
		s.erase(*s.begin());
	}
	for (int i = 1; i <= n; i++) {
		for (auto x: ql[i]) {
			ans[x.second] -= sum(mp[x.first] + 1, N + N1 - 1);
		}
		update(mp[a[i]]);
		for (auto x: qr[i]) {
			ans[x.second] += sum(mp[x.first] + 1, N + N1 - 1);
		}
	}
	for (int i = 0; i < q; i++) {
		cout << ans[i] << endl;
	}
}"
rQKNG7tW,AoC 2023 day 8 part 1 (Perl),musifter,Perl,Thursday 7th of December 2023 11:51:27 PM CDT,"#!/usr/bin/perl

use v5.26;
use warnings;

# Paragraph mode, array of sections
$/ = '';
my @section = map {[split /\n/]} <>;

my @dirs = split( //, $section[0][0] );

my %graph;
foreach ($section[1]->@*) {
    my ($label, $left, $right) = m#(\w+)#g;
    $graph{$label} = {L => $left, R => $right};
}

my $loc   = 'AAA';
my $steps = 0;
while ($loc ne 'ZZZ') {
    $loc = $graph{$loc}{ $dirs[$steps % scalar(@dirs)] };
    $steps++;
}

say ""Part 1: $steps"";"
jzBZNjXb,Nigerian scammers [8-12-1/2023],bombaires,AIMMS,Thursday 7th of December 2023 11:28:01 PM CDT,"<a href=""mailto:of9824714@gmail.com"">of9824714@gmail.com</a>
<a href=""mailto:o.f.9.824.7.1.4@gmail.com"">o.f.9.824.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.24714@gmail.com"">o.f.9.8.24714@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4714@gmail.com"">o.f.9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f9.82.4.7.14@gmail.com"">o.f9.82.4.7.14@gmail.com</a>
<a href=""mailto:o.f982.47.14@gmail.com"">o.f982.47.14@gmail.com</a>
<a href=""mailto:of9.8.24714@gmail.com"">of9.8.24714@gmail.com</a>
<a href=""mailto:o.f9.82471.4@gmail.com"">o.f9.82471.4@gmail.com</a>
<a href=""mailto:of98.2.4.714@gmail.com"">of98.2.4.714@gmail.com</a>
<a href=""mailto:of.98247.14@gmail.com"">of.98247.14@gmail.com</a>
<a href=""mailto:o.f.9.8.247.14@gmail.com"">o.f.9.8.247.14@gmail.com</a>
<a href=""mailto:of.9824.7.14@gmail.com"">of.9824.7.14@gmail.com</a>
<a href=""mailto:o.f98247.14@gmail.com"">o.f98247.14@gmail.com</a>
<a href=""mailto:of.98.247.1.4@gmail.com"">of.98.247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82471.4@gmail.com"">o.f.9.82471.4@gmail.com</a>
<a href=""mailto:of98.24714@gmail.com"">of98.24714@gmail.com</a>
<a href=""mailto:o.f.9.8247.14@gmail.com"">o.f.9.8247.14@gmail.com</a>
<a href=""mailto:of.98.2.47.14@gmail.com"">of.98.2.47.14@gmail.com</a>
<a href=""mailto:of.9.82.471.4@gmail.com"">of.9.82.471.4@gmail.com</a>
<a href=""mailto:of.9.82.4.714@gmail.com"">of.9.82.4.714@gmail.com</a>
<a href=""mailto:o.f.98.24714@gmail.com"">o.f.98.24714@gmail.com</a>
<a href=""mailto:of9.8.2.47.1.4@gmail.com"">of9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:of982.47.1.4@gmail.com"">of982.47.1.4@gmail.com</a>
<a href=""mailto:of.98.2.4.7.1.4@gmail.com"">of.98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.98.2471.4@gmail.com"">o.f.98.2471.4@gmail.com</a>
<a href=""mailto:o.f982.47.1.4@gmail.com"">o.f982.47.1.4@gmail.com</a>
<a href=""mailto:o.f9824.714@gmail.com"">o.f9824.714@gmail.com</a>
<a href=""mailto:of.9.8.247.14@gmail.com"">of.9.8.247.14@gmail.com</a>
<a href=""mailto:o.f.98.2.4.714@gmail.com"">o.f.98.2.4.714@gmail.com</a>
<a href=""mailto:o.f.9.8.247.1.4@gmail.com"">o.f.9.8.247.1.4@gmail.com</a>
<a href=""mailto:o.f9824714@gmail.com"">o.f9824714@gmail.com</a>
<a href=""mailto:o.f98.247.1.4@gmail.com"">o.f98.247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2471.4@gmail.com"">o.f.9.8.2471.4@gmail.com</a>
<a href=""mailto:of.9.8.2.47.1.4@gmail.com"">of.9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:of.982471.4@gmail.com"">of.982471.4@gmail.com</a>
<a href=""mailto:o.f.9.8247.1.4@gmail.com"">o.f.9.8247.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.71.4@gmail.com"">o.f9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4.7.14@gmail.com"">of.9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:o.f982.4.7.1.4@gmail.com"">o.f982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f9824.71.4@gmail.com"">o.f9824.71.4@gmail.com</a>
<a href=""mailto:o.f.98.24.714@gmail.com"">o.f.98.24.714@gmail.com</a>
<a href=""mailto:o.f98.24.714@gmail.com"">o.f98.24.714@gmail.com</a>
<a href=""mailto:of982.471.4@gmail.com"">of982.471.4@gmail.com</a>
<a href=""mailto:of.982.4714@gmail.com"">of.982.4714@gmail.com</a>
<a href=""mailto:o.f9.8.24.7.14@gmail.com"">o.f9.8.24.7.14@gmail.com</a>
<a href=""mailto:of.98.2.4.71.4@gmail.com"">of.98.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f.98.2.47.1.4@gmail.com"">o.f.98.2.47.1.4@gmail.com</a>
<a href=""mailto:o.f9.82.47.14@gmail.com"">o.f9.82.47.14@gmail.com</a>
<a href=""mailto:o.f.9824.7.1.4@gmail.com"">o.f.9824.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.2.47.14@gmail.com"">o.f98.2.47.14@gmail.com</a>
<a href=""mailto:of9.82.47.1.4@gmail.com"">of9.82.47.1.4@gmail.com</a>
<a href=""mailto:o.f.982.4.71.4@gmail.com"">o.f.982.4.71.4@gmail.com</a>
<a href=""mailto:of9824.71.4@gmail.com"">of9824.71.4@gmail.com</a>
<a href=""mailto:of98.2.471.4@gmail.com"">of98.2.471.4@gmail.com</a>
<a href=""mailto:of9.824.714@gmail.com"">of9.824.714@gmail.com</a>
<a href=""mailto:o.f.9.82.4714@gmail.com"">o.f.9.82.4714@gmail.com</a>
<a href=""mailto:o.f9.824714@gmail.com"">o.f9.824714@gmail.com</a>
<a href=""mailto:o.f.98247.14@gmail.com"">o.f.98247.14@gmail.com</a>
<a href=""mailto:o.f.98.2.4714@gmail.com"">o.f.98.2.4714@gmail.com</a>
<a href=""mailto:of9.8.24.7.1.4@gmail.com"">of9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:of98.247.1.4@gmail.com"">of98.247.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.714@gmail.com"">o.f9.8.2.4.714@gmail.com</a>
<a href=""mailto:o.f.98.2.471.4@gmail.com"">o.f.98.2.471.4@gmail.com</a>
<a href=""mailto:of.98.2.471.4@gmail.com"">of.98.2.471.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4714@gmail.com"">of.9.8.2.4714@gmail.com</a>
<a href=""mailto:of.98.24714@gmail.com"">of.98.24714@gmail.com</a>
<a href=""mailto:o.f982.4.71.4@gmail.com"">o.f982.4.71.4@gmail.com</a>
<a href=""mailto:o.f.9.82.47.1.4@gmail.com"">o.f.9.82.47.1.4@gmail.com</a>
<a href=""mailto:o.f982471.4@gmail.com"">o.f982471.4@gmail.com</a>
<a href=""mailto:of982.47.14@gmail.com"">of982.47.14@gmail.com</a>
<a href=""mailto:of.9.82.47.1.4@gmail.com"">of.9.82.47.1.4@gmail.com</a>
<a href=""mailto:of.9.82.47.14@gmail.com"">of.9.82.47.14@gmail.com</a>
<a href=""mailto:of.9.8.2.4.71.4@gmail.com"">of.9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:of9.82.4.714@gmail.com"">of9.82.4.714@gmail.com</a>
<a href=""mailto:of9.82.47.14@gmail.com"">of9.82.47.14@gmail.com</a>
<a href=""mailto:o.f98.24714@gmail.com"">o.f98.24714@gmail.com</a>
<a href=""mailto:of.9.824.7.1.4@gmail.com"">of.9.824.7.1.4@gmail.com</a>
<a href=""mailto:of982.4.714@gmail.com"">of982.4.714@gmail.com</a>
<a href=""mailto:o.f982.471.4@gmail.com"">o.f982.471.4@gmail.com</a>
<a href=""mailto:of.982.47.1.4@gmail.com"">of.982.47.1.4@gmail.com</a>
<a href=""mailto:o.f.982.47.14@gmail.com"">o.f.982.47.14@gmail.com</a>
<a href=""mailto:of.9.8.2.47.14@gmail.com"">of.9.8.2.47.14@gmail.com</a>
<a href=""mailto:o.f98.2.4.71.4@gmail.com"">o.f98.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f98.2.4714@gmail.com"">o.f98.2.4714@gmail.com</a>
<a href=""mailto:of9.82471.4@gmail.com"">of9.82471.4@gmail.com</a>
<a href=""mailto:of9.8247.1.4@gmail.com"">of9.8247.1.4@gmail.com</a>
<a href=""mailto:of.98247.1.4@gmail.com"">of.98247.1.4@gmail.com</a>
<a href=""mailto:o.f9.82.4.7.1.4@gmail.com"">o.f9.82.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4714@gmail.com"">o.f9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f9.824.7.14@gmail.com"">o.f9.824.7.14@gmail.com</a>
<a href=""mailto:of9.824714@gmail.com"">of9.824714@gmail.com</a>
<a href=""mailto:of98.2.4.7.14@gmail.com"">of98.2.4.7.14@gmail.com</a>
<a href=""mailto:of98.2.47.14@gmail.com"">of98.2.47.14@gmail.com</a>
<a href=""mailto:of.9.8247.14@gmail.com"">of.9.8247.14@gmail.com</a>
<a href=""mailto:o.f.98.2.4.71.4@gmail.com"">o.f.98.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f9.824.714@gmail.com"">o.f9.824.714@gmail.com</a>
<a href=""mailto:o.f98.247.14@gmail.com"">o.f98.247.14@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.714@gmail.com"">o.f.9.8.2.4.714@gmail.com</a>
<a href=""mailto:of9.8.2.4714@gmail.com"">of9.8.2.4714@gmail.com</a>
<a href=""mailto:of98.24.7.1.4@gmail.com"">of98.24.7.1.4@gmail.com</a>
<a href=""mailto:of9.8.2.47.14@gmail.com"">of9.8.2.47.14@gmail.com</a>
<a href=""mailto:o.f98.24.71.4@gmail.com"">o.f98.24.71.4@gmail.com</a>
<a href=""mailto:o.f.98.2.4.7.14@gmail.com"">o.f.98.2.4.7.14@gmail.com</a>
<a href=""mailto:of9.82.4.71.4@gmail.com"">of9.82.4.71.4@gmail.com</a>
<a href=""mailto:of.9.8.24714@gmail.com"">of.9.8.24714@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.7.1.4@gmail.com"">o.f9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of.9.8247.1.4@gmail.com"">of.9.8247.1.4@gmail.com</a>
<a href=""mailto:of.982.471.4@gmail.com"">of.982.471.4@gmail.com</a>
<a href=""mailto:o.f9.82.4.71.4@gmail.com"">o.f9.82.4.71.4@gmail.com</a>
<a href=""mailto:of98.24.7.14@gmail.com"">of98.24.7.14@gmail.com</a>
<a href=""mailto:of9824714@gmail.com"">of9824714@gmail.com</a>
<a href=""mailto:of.9.824.7.14@gmail.com"">of.9.824.7.14@gmail.com</a>
<a href=""mailto:of9824.7.14@gmail.com"">of9824.7.14@gmail.com</a>
<a href=""mailto:o.f.982.471.4@gmail.com"">o.f.982.471.4@gmail.com</a>
<a href=""mailto:o.f9.82.4.714@gmail.com"">o.f9.82.4.714@gmail.com</a>
<a href=""mailto:of982.4.7.1.4@gmail.com"">of982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.24.714@gmail.com"">o.f9.8.24.714@gmail.com</a>
<a href=""mailto:of9.82.4714@gmail.com"">of9.82.4714@gmail.com</a>
<a href=""mailto:of.9.8.24.7.1.4@gmail.com"">of.9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f.98.24.7.14@gmail.com"">o.f.98.24.7.14@gmail.com</a>
<a href=""mailto:of9.824.71.4@gmail.com"">of9.824.71.4@gmail.com</a>
<a href=""mailto:o.f9.8.2471.4@gmail.com"">o.f9.8.2471.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4.714@gmail.com"">of.9.8.2.4.714@gmail.com</a>
<a href=""mailto:o.f.982.4.714@gmail.com"">o.f.982.4.714@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.7.1.4@gmail.com"">o.f.9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of.9.82.4.71.4@gmail.com"">of.9.82.4.71.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.471.4@gmail.com"">o.f.9.8.2.471.4@gmail.com</a>
<a href=""mailto:o.f.9.824714@gmail.com"">o.f.9.824714@gmail.com</a>
<a href=""mailto:o.f.98.24.7.1.4@gmail.com"">o.f.98.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.2.4.714@gmail.com"">o.f98.2.4.714@gmail.com</a>
<a href=""mailto:o.f9.8.24.71.4@gmail.com"">o.f9.8.24.71.4@gmail.com</a>
<a href=""mailto:o.f.982.4.7.14@gmail.com"">o.f.982.4.7.14@gmail.com</a>
<a href=""mailto:o.f98.24.7.14@gmail.com"">o.f98.24.7.14@gmail.com</a>
<a href=""mailto:of.9.824.714@gmail.com"">of.9.824.714@gmail.com</a>
<a href=""mailto:of9.82.4.7.14@gmail.com"">of9.82.4.7.14@gmail.com</a>
<a href=""mailto:of9.8.24.7.14@gmail.com"">of9.8.24.7.14@gmail.com</a>
<a href=""mailto:o.f9.8.2.47.14@gmail.com"">o.f9.8.2.47.14@gmail.com</a>
<a href=""mailto:of.9824714@gmail.com"">of.9824714@gmail.com</a>
<a href=""mailto:of98.247.14@gmail.com"">of98.247.14@gmail.com</a>
<a href=""mailto:of9.824.7.1.4@gmail.com"">of9.824.7.1.4@gmail.com</a>
<a href=""mailto:o.f982.4.714@gmail.com"">o.f982.4.714@gmail.com</a>
<a href=""mailto:of.98.2471.4@gmail.com"">of.98.2471.4@gmail.com</a>
<a href=""mailto:of9.8247.14@gmail.com"">of9.8247.14@gmail.com</a>
<a href=""mailto:o.f.9824.7.14@gmail.com"">o.f.9824.7.14@gmail.com</a>
<a href=""mailto:of.98.24.7.1.4@gmail.com"">of.98.24.7.1.4@gmail.com</a>
<a href=""mailto:of.982.4.7.14@gmail.com"">of.982.4.7.14@gmail.com</a>
<a href=""mailto:o.f.9.8.24.714@gmail.com"">o.f.9.8.24.714@gmail.com</a>
<a href=""mailto:o.f.98.2.4.7.1.4@gmail.com"">o.f.98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.7.14@gmail.com"">o.f9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:o.f982.4714@gmail.com"">o.f982.4714@gmail.com</a>
<a href=""mailto:o.f9.8247.14@gmail.com"">o.f9.8247.14@gmail.com</a>
<a href=""mailto:of.98.247.14@gmail.com"">of.98.247.14@gmail.com</a>
<a href=""mailto:of9.8.2.4.7.1.4@gmail.com"">of9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of.9.82.4714@gmail.com"">of.9.82.4714@gmail.com</a>
<a href=""mailto:o.f.9.82.4.714@gmail.com"">o.f.9.82.4.714@gmail.com</a>
<a href=""mailto:o.f.9824714@gmail.com"">o.f.9824714@gmail.com</a>
<a href=""mailto:o.f.9.82.47.14@gmail.com"">o.f.9.82.47.14@gmail.com</a>
<a href=""mailto:of9824.7.1.4@gmail.com"">of9824.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.24.7.14@gmail.com"">o.f.9.8.24.7.14@gmail.com</a>
<a href=""mailto:o.f.982.47.1.4@gmail.com"">o.f.982.47.1.4@gmail.com</a>
<a href=""mailto:of.982.47.14@gmail.com"">of.982.47.14@gmail.com</a>
<a href=""mailto:of9824.714@gmail.com"">of9824.714@gmail.com</a>
<a href=""mailto:of9.824.7.14@gmail.com"">of9.824.7.14@gmail.com</a>
<a href=""mailto:o.f.9.82.471.4@gmail.com"">o.f.9.82.471.4@gmail.com</a>
<a href=""mailto:o.f982.4.7.14@gmail.com"">o.f982.4.7.14@gmail.com</a>
<a href=""mailto:of9.8.2.471.4@gmail.com"">of9.8.2.471.4@gmail.com</a>
<a href=""mailto:of.9.8.247.1.4@gmail.com"">of.9.8.247.1.4@gmail.com</a>
<a href=""mailto:o.f9.824.7.1.4@gmail.com"">o.f9.824.7.1.4@gmail.com</a>
<a href=""mailto:o.f9824.7.14@gmail.com"">o.f9824.7.14@gmail.com</a>
<a href=""mailto:o.f9.8247.1.4@gmail.com"">o.f9.8247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82.4.7.1.4@gmail.com"">o.f.9.82.4.7.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4.7.1.4@gmail.com"">of.9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.824.71.4@gmail.com"">o.f.9.824.71.4@gmail.com</a>
<a href=""mailto:of.9.824.71.4@gmail.com"">of.9.824.71.4@gmail.com</a>
<a href=""mailto:of9.8.247.14@gmail.com"">of9.8.247.14@gmail.com</a>
<a href=""mailto:of.9.82.4.7.1.4@gmail.com"">of.9.82.4.7.1.4@gmail.com</a>
<a href=""mailto:of98.2.47.1.4@gmail.com"">of98.2.47.1.4@gmail.com</a>
<a href=""mailto:of9.8.2.4.71.4@gmail.com"">of9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f9.82.4714@gmail.com"">o.f9.82.4714@gmail.com</a>
<a href=""mailto:o.f98.2.47.1.4@gmail.com"">o.f98.2.47.1.4@gmail.com</a>
<a href=""mailto:o.f.98.2.47.14@gmail.com"">o.f.98.2.47.14@gmail.com</a>
<a href=""mailto:of.98.2.4.7.14@gmail.com"">of.98.2.4.7.14@gmail.com</a>
<a href=""mailto:of.98.24.71.4@gmail.com"">of.98.24.71.4@gmail.com</a>
<a href=""mailto:o.f98.2.471.4@gmail.com"">o.f98.2.471.4@gmail.com</a>
<a href=""mailto:o.f9.8.24714@gmail.com"">o.f9.8.24714@gmail.com</a>
<a href=""mailto:of.9.8.2471.4@gmail.com"">of.9.8.2471.4@gmail.com</a>
<a href=""mailto:of.98.2.47.1.4@gmail.com"">of.98.2.47.1.4@gmail.com</a>
<a href=""mailto:of.98.2.4.714@gmail.com"">of.98.2.4.714@gmail.com</a>
<a href=""mailto:o.f.9.8.2.47.1.4@gmail.com"">o.f.9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.7.14@gmail.com"">o.f.9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:of98247.14@gmail.com"">of98247.14@gmail.com</a>
<a href=""mailto:of.982.4.714@gmail.com"">of.982.4.714@gmail.com</a>
<a href=""mailto:o.f98.2471.4@gmail.com"">o.f98.2471.4@gmail.com</a>
<a href=""mailto:o.f9.82.47.1.4@gmail.com"">o.f9.82.47.1.4@gmail.com</a>
<a href=""mailto:of98.2.4.71.4@gmail.com"">of98.2.4.71.4@gmail.com</a>
<a href=""mailto:of.9.8.24.71.4@gmail.com"">of.9.8.24.71.4@gmail.com</a>
<a href=""mailto:o.f9.824.71.4@gmail.com"">o.f9.824.71.4@gmail.com</a>
<a href=""mailto:o.f9.8.247.1.4@gmail.com"">o.f9.8.247.1.4@gmail.com</a>
<a href=""mailto:of.982.4.71.4@gmail.com"">of.982.4.71.4@gmail.com</a>
<a href=""mailto:o.f.9.824.714@gmail.com"">o.f.9.824.714@gmail.com</a>
<a href=""mailto:of9.8.24.714@gmail.com"">of9.8.24.714@gmail.com</a>
<a href=""mailto:chidiike015@gmail.com"">chidiike015@gmail.com</a>
<a href=""mailto:c.h.i.d.i.i.k.e.0.1.5@gmail.com"">c.h.i.d.i.i.k.e.0.1.5@gmail.com</a>
<a href=""mailto:c.h.id.iike.0.1.5@gmail.com"">c.h.id.iike.0.1.5@gmail.com</a>
<a href=""mailto:c.h.i.diike015@gmail.com"">c.h.i.diike015@gmail.com</a>
<a href=""mailto:ch.i.d.iik.e.015@gmail.com"">ch.i.d.iik.e.015@gmail.com</a>
<a href=""mailto:c.hi.d.i.i.ke0.1.5@gmail.com"">c.hi.d.i.i.ke0.1.5@gmail.com</a>
<a href=""mailto:chidi.ike0.15@gmail.com"">chidi.ike0.15@gmail.com</a>
<a href=""mailto:ch.i.d.i.ik.e.0.15@gmail.com"">ch.i.d.i.ik.e.0.15@gmail.com</a>
<a href=""mailto:ch.i.d.i.i.k.e.015@gmail.com"">ch.i.d.i.i.k.e.015@gmail.com</a>
<a href=""mailto:ch.i.di.i.k.e.015@gmail.com"">ch.i.di.i.k.e.015@gmail.com</a>
<a href=""mailto:c.hidi.i.ke0.1.5@gmail.com"">c.hidi.i.ke0.1.5@gmail.com</a>
<a href=""mailto:ch.i.di.ike01.5@gmail.com"">ch.i.di.ike01.5@gmail.com</a>
<a href=""mailto:c.h.idii.k.e0.15@gmail.com"">c.h.idii.k.e0.15@gmail.com</a>
<a href=""mailto:c.h.id.iik.e01.5@gmail.com"">c.h.id.iik.e01.5@gmail.com</a>
<a href=""mailto:c.hi.d.iike0.15@gmail.com"">c.hi.d.iike0.15@gmail.com</a>
<a href=""mailto:c.h.idi.i.k.e0.15@gmail.com"">c.h.idi.i.k.e0.15@gmail.com</a>
<a href=""mailto:ch.idi.i.ke0.1.5@gmail.com"">ch.idi.i.ke0.1.5@gmail.com</a>
<a href=""mailto:c.hidi.ike0.15@gmail.com"">c.hidi.ike0.15@gmail.com</a>
<a href=""mailto:chi.d.iik.e015@gmail.com"">chi.d.iik.e015@gmail.com</a>
<a href=""mailto:c.h.idi.ik.e.015@gmail.com"">c.h.idi.ik.e.015@gmail.com</a>
<a href=""mailto:ch.id.i.ike0.15@gmail.com"">ch.id.i.ike0.15@gmail.com</a>
<a href=""mailto:chi.diik.e.015@gmail.com"">chi.diik.e.015@gmail.com</a>
<a href=""mailto:ch.idi.i.ke01.5@gmail.com"">ch.idi.i.ke01.5@gmail.com</a>
<a href=""mailto:ch.idii.ke.015@gmail.com"">ch.idii.ke.015@gmail.com</a>
<a href=""mailto:ch.i.di.ik.e015@gmail.com"">ch.i.di.ik.e015@gmail.com</a>
<a href=""mailto:chid.iik.e0.15@gmail.com"">chid.iik.e0.15@gmail.com</a>
<a href=""mailto:c.hid.iike0.1.5@gmail.com"">c.hid.iike0.1.5@gmail.com</a>
<a href=""mailto:ch.i.di.ik.e0.1.5@gmail.com"">ch.i.di.ik.e0.1.5@gmail.com</a>
<a href=""mailto:ch.i.dii.k.e.015@gmail.com"">ch.i.dii.k.e.015@gmail.com</a>
<a href=""mailto:c.h.i.d.ii.ke.0.15@gmail.com"">c.h.i.d.ii.ke.0.15@gmail.com</a>
<a href=""mailto:c.hi.d.ii.ke.0.15@gmail.com"">c.hi.d.ii.ke.0.15@gmail.com</a>
<a href=""mailto:chid.ii.k.e.015@gmail.com"">chid.ii.k.e.015@gmail.com</a>
<a href=""mailto:c.h.id.i.i.ke.0.15@gmail.com"">c.h.id.i.i.ke.0.15@gmail.com</a>
<a href=""mailto:ch.i.di.i.k.e.0.15@gmail.com"">ch.i.di.i.k.e.0.15@gmail.com</a>
<a href=""mailto:c.h.i.d.i.ik.e015@gmail.com"">c.h.i.d.i.ik.e015@gmail.com</a>
<a href=""mailto:c.h.i.di.ik.e.01.5@gmail.com"">c.h.i.di.ik.e.01.5@gmail.com</a>
<a href=""mailto:c.hi.d.iike.0.15@gmail.com"">c.hi.d.iike.0.15@gmail.com</a>
<a href=""mailto:c.h.i.d.i.ike015@gmail.com"">c.h.i.d.i.ike015@gmail.com</a>
<a href=""mailto:chidi.ik.e.01.5@gmail.com"">chidi.ik.e.01.5@gmail.com</a>
<a href=""mailto:c.h.i.dii.ke0.15@gmail.com"">c.h.i.dii.ke0.15@gmail.com</a>
<a href=""mailto:c.h.i.d.iike01.5@gmail.com"">c.h.i.d.iike01.5@gmail.com</a>
<a href=""mailto:c.h.id.iike0.15@gmail.com"">c.h.id.iike0.15@gmail.com</a>
<a href=""mailto:chidi.ike.0.15@gmail.com"">chidi.ike.0.15@gmail.com</a>
<a href=""mailto:c.hi.d.iik.e0.15@gmail.com"">c.hi.d.iik.e0.15@gmail.com</a>
<a href=""mailto:ch.i.d.i.ike.0.15@gmail.com"">ch.i.d.i.ike.0.15@gmail.com</a>
<a href=""mailto:ch.idii.ke.0.1.5@gmail.com"">ch.idii.ke.0.1.5@gmail.com</a>
<a href=""mailto:chid.iik.e01.5@gmail.com"">chid.iik.e01.5@gmail.com</a>
<a href=""mailto:chi.diik.e.0.15@gmail.com"">chi.diik.e.0.15@gmail.com</a>
<a href=""mailto:c.h.id.ii.ke01.5@gmail.com"">c.h.id.ii.ke01.5@gmail.com</a>
<a href=""mailto:c.hid.ii.ke.01.5@gmail.com"">c.hid.ii.ke.01.5@gmail.com</a>
<a href=""mailto:c.hidii.ke015@gmail.com"">c.hidii.ke015@gmail.com</a>
<a href=""mailto:c.hi.di.ike01.5@gmail.com"">c.hi.di.ike01.5@gmail.com</a>
<a href=""mailto:ch.i.d.ii.ke.015@gmail.com"">ch.i.d.ii.ke.015@gmail.com</a>
<a href=""mailto:ch.idiike.015@gmail.com"">ch.idiike.015@gmail.com</a>
<a href=""mailto:c.h.idi.i.k.e.0.15@gmail.com"">c.h.idi.i.k.e.0.15@gmail.com</a>
<a href=""mailto:ch.i.d.i.ik.e.01.5@gmail.com"">ch.i.d.i.ik.e.01.5@gmail.com</a>
<a href=""mailto:c.h.i.d.ii.k.e0.1.5@gmail.com"">c.h.i.d.ii.k.e0.1.5@gmail.com</a>
<a href=""mailto:chidi.i.ke0.15@gmail.com"">chidi.i.ke0.15@gmail.com</a>
<a href=""mailto:chid.ii.k.e01.5@gmail.com"">chid.ii.k.e01.5@gmail.com</a>
<a href=""mailto:c.hi.d.i.ike0.1.5@gmail.com"">c.hi.d.i.ike0.1.5@gmail.com</a>
<a href=""mailto:ch.id.i.ik.e.0.1.5@gmail.com"">ch.id.i.ik.e.0.1.5@gmail.com</a>
<a href=""mailto:ch.i.di.ike.01.5@gmail.com"">ch.i.di.ike.01.5@gmail.com</a>
<a href=""mailto:ch.i.d.iike0.15@gmail.com"">ch.i.d.iike0.15@gmail.com</a>
<a href=""mailto:c.hi.di.ik.e0.15@gmail.com"">c.hi.di.ik.e0.15@gmail.com</a>
<a href=""mailto:chi.d.i.ike015@gmail.com"">chi.d.i.ike015@gmail.com</a>
<a href=""mailto:c.hid.iik.e.015@gmail.com"">c.hid.iik.e.015@gmail.com</a>
<a href=""mailto:ch.idiik.e.0.1.5@gmail.com"">ch.idiik.e.0.1.5@gmail.com</a>
<a href=""mailto:c.hi.d.i.ike015@gmail.com"">c.hi.d.i.ike015@gmail.com</a>
<a href=""mailto:ch.id.ii.ke0.15@gmail.com"">ch.id.ii.ke0.15@gmail.com</a>
<a href=""mailto:c.h.id.ii.k.e.0.15@gmail.com"">c.h.id.ii.k.e.0.15@gmail.com</a>
<a href=""mailto:c.hid.i.ike.0.1.5@gmail.com"">c.hid.i.ike.0.1.5@gmail.com</a>
<a href=""mailto:ch.idi.i.k.e.015@gmail.com"">ch.idi.i.k.e.015@gmail.com</a>
<a href=""mailto:c.h.i.diike0.15@gmail.com"">c.h.i.diike0.15@gmail.com</a>
<a href=""mailto:c.h.i.d.iike.0.1.5@gmail.com"">c.h.i.d.iike.0.1.5@gmail.com</a>
<a href=""mailto:chi.d.i.i.ke.015@gmail.com"">chi.d.i.i.ke.015@gmail.com</a>
<a href=""mailto:chidi.i.ke.01.5@gmail.com"">chidi.i.ke.01.5@gmail.com</a>
<a href=""mailto:chi.d.iik.e.015@gmail.com"">chi.d.iik.e.015@gmail.com</a>
<a href=""mailto:chi.d.ii.ke.0.15@gmail.com"">chi.d.ii.ke.0.15@gmail.com</a>
<a href=""mailto:ch.idiike.0.1.5@gmail.com"">ch.idiike.0.1.5@gmail.com</a>
<a href=""mailto:ch.idiik.e0.1.5@gmail.com"">ch.idiik.e0.1.5@gmail.com</a>
<a href=""mailto:chi.d.i.i.ke.0.1.5@gmail.com"">chi.d.i.i.ke.0.1.5@gmail.com</a>
<a href=""mailto:chidi.ik.e.015@gmail.com"">chidi.ik.e.015@gmail.com</a>
<a href=""mailto:c.h.i.d.ii.ke0.1.5@gmail.com"">c.h.i.d.ii.ke0.1.5@gmail.com</a>
<a href=""mailto:ch.i.di.i.k.e0.15@gmail.com"">ch.i.di.i.k.e0.15@gmail.com</a>
<a href=""mailto:c.hidi.i.k.e.0.15@gmail.com"">c.hidi.i.k.e.0.15@gmail.com</a>
<a href=""mailto:c.h.i.di.i.ke0.1.5@gmail.com"">c.h.i.di.i.ke0.1.5@gmail.com</a>
<a href=""mailto:ch.i.di.ik.e.01.5@gmail.com"">ch.i.di.ik.e.01.5@gmail.com</a>
<a href=""mailto:chid.ii.ke.01.5@gmail.com"">chid.ii.ke.01.5@gmail.com</a>
<a href=""mailto:c.h.i.d.iik.e01.5@gmail.com"">c.h.i.d.iik.e01.5@gmail.com</a>
<a href=""mailto:ch.i.diike01.5@gmail.com"">ch.i.diike01.5@gmail.com</a>
<a href=""mailto:c.h.id.i.ik.e01.5@gmail.com"">c.h.id.i.ik.e01.5@gmail.com</a>
<a href=""mailto:ch.i.diik.e0.1.5@gmail.com"">ch.i.diik.e0.1.5@gmail.com</a>
<a href=""mailto:ch.i.d.i.ik.e.015@gmail.com"">ch.i.d.i.ik.e.015@gmail.com</a>
<a href=""mailto:ch.id.i.ike.0.1.5@gmail.com"">ch.id.i.ike.0.1.5@gmail.com</a>
<a href=""mailto:ch.i.d.i.ike.015@gmail.com"">ch.i.d.i.ike.015@gmail.com</a>
<a href=""mailto:chid.i.i.ke01.5@gmail.com"">chid.i.i.ke01.5@gmail.com</a>
<a href=""mailto:c.h.id.i.ike.01.5@gmail.com"">c.h.id.i.ike.01.5@gmail.com</a>
<a href=""mailto:ch.i.diike0.1.5@gmail.com"">ch.i.diike0.1.5@gmail.com</a>
<a href=""mailto:c.h.i.di.ike.0.1.5@gmail.com"">c.h.i.di.ike.0.1.5@gmail.com</a>
<a href=""mailto:c.h.id.iik.e.0.1.5@gmail.com"">c.h.id.iik.e.0.1.5@gmail.com</a>
<a href=""mailto:chidiike.01.5@gmail.com"">chidiike.01.5@gmail.com</a>
<a href=""mailto:c.h.id.i.ik.e0.15@gmail.com"">c.h.id.i.ik.e0.15@gmail.com</a>
<a href=""mailto:c.hidiike.015@gmail.com"">c.hidiike.015@gmail.com</a>
<a href=""mailto:c.hid.i.i.k.e0.1.5@gmail.com"">c.hid.i.i.k.e0.1.5@gmail.com</a>
<a href=""mailto:c.hidii.k.e.01.5@gmail.com"">c.hidii.k.e.01.5@gmail.com</a>
<a href=""mailto:c.h.i.dii.ke015@gmail.com"">c.h.i.dii.ke015@gmail.com</a>
<a href=""mailto:c.h.id.i.i.ke.015@gmail.com"">c.h.id.i.i.ke.015@gmail.com</a>
<a href=""mailto:c.hi.d.i.ik.e0.1.5@gmail.com"">c.hi.d.i.ik.e0.1.5@gmail.com</a>
<a href=""mailto:c.hid.iike01.5@gmail.com"">c.hid.iike01.5@gmail.com</a>
<a href=""mailto:c.hidii.ke0.15@gmail.com"">c.hidii.ke0.15@gmail.com</a>
<a href=""mailto:c.h.i.d.ii.k.e.015@gmail.com"">c.h.i.d.ii.k.e.015@gmail.com</a>
<a href=""mailto:c.hi.d.ii.k.e015@gmail.com"">c.hi.d.ii.k.e015@gmail.com</a>
<a href=""mailto:chidii.k.e0.1.5@gmail.com"">chidii.k.e0.1.5@gmail.com</a>
<a href=""mailto:chid.i.i.k.e.0.15@gmail.com"">chid.i.i.k.e.0.15@gmail.com</a>
<a href=""mailto:ch.i.d.ii.k.e01.5@gmail.com"">ch.i.d.ii.k.e01.5@gmail.com</a>
<a href=""mailto:chidi.ike015@gmail.com"">chidi.ike015@gmail.com</a>
<a href=""mailto:c.hid.iik.e.0.1.5@gmail.com"">c.hid.iik.e.0.1.5@gmail.com</a>
<a href=""mailto:ch.i.d.iike.0.15@gmail.com"">ch.i.d.iike.0.15@gmail.com</a>
<a href=""mailto:c.hidiik.e.01.5@gmail.com"">c.hidiik.e.01.5@gmail.com</a>
<a href=""mailto:c.h.i.di.ike01.5@gmail.com"">c.h.i.di.ike01.5@gmail.com</a>
<a href=""mailto:c.hid.ii.ke.0.1.5@gmail.com"">c.hid.ii.ke.0.1.5@gmail.com</a>
<a href=""mailto:c.hi.di.i.k.e0.1.5@gmail.com"">c.hi.di.i.k.e0.1.5@gmail.com</a>
<a href=""mailto:c.h.idi.i.ke01.5@gmail.com"">c.h.idi.i.ke01.5@gmail.com</a>
<a href=""mailto:chi.dii.k.e015@gmail.com"">chi.dii.k.e015@gmail.com</a>
<a href=""mailto:c.hid.i.ike.015@gmail.com"">c.hid.i.ike.015@gmail.com</a>
<a href=""mailto:ch.i.d.i.ike.0.1.5@gmail.com"">ch.i.d.i.ike.0.1.5@gmail.com</a>
<a href=""mailto:ch.i.diike.01.5@gmail.com"">ch.i.diike.01.5@gmail.com</a>
<a href=""mailto:c.hid.i.i.ke015@gmail.com"">c.hid.i.i.ke015@gmail.com</a>
<a href=""mailto:c.h.id.i.ike.015@gmail.com"">c.h.id.i.ike.015@gmail.com</a>
<a href=""mailto:chid.i.ik.e0.1.5@gmail.com"">chid.i.ik.e0.1.5@gmail.com</a>
<a href=""mailto:c.hi.d.i.i.k.e.015@gmail.com"">c.hi.d.i.i.k.e.015@gmail.com</a>
<a href=""mailto:c.h.i.d.i.ike.015@gmail.com"">c.h.i.d.i.ike.015@gmail.com</a>
<a href=""mailto:ch.i.d.i.i.ke015@gmail.com"">ch.i.d.i.i.ke015@gmail.com</a>
<a href=""mailto:c.h.i.dii.k.e.0.15@gmail.com"">c.h.i.dii.k.e.0.15@gmail.com</a>
<a href=""mailto:c.hi.d.iik.e.015@gmail.com"">c.hi.d.iik.e.015@gmail.com</a>
<a href=""mailto:chi.d.ii.k.e0.15@gmail.com"">chi.d.ii.k.e0.15@gmail.com</a>
<a href=""mailto:c.h.i.d.i.i.ke015@gmail.com"">c.h.i.d.i.i.ke015@gmail.com</a>
<a href=""mailto:chidiike.0.1.5@gmail.com"">chidiike.0.1.5@gmail.com</a>
<a href=""mailto:c.h.idiik.e.0.15@gmail.com"">c.h.idiik.e.0.15@gmail.com</a>
<a href=""mailto:ch.i.d.iike015@gmail.com"">ch.i.d.iike015@gmail.com</a>
<a href=""mailto:chidii.ke.0.15@gmail.com"">chidii.ke.0.15@gmail.com</a>
<a href=""mailto:c.h.i.d.i.ike01.5@gmail.com"">c.h.i.d.i.ike01.5@gmail.com</a>
<a href=""mailto:c.hid.iik.e0.15@gmail.com"">c.hid.iik.e0.15@gmail.com</a>
<a href=""mailto:chi.di.i.k.e.0.1.5@gmail.com"">chi.di.i.k.e.0.1.5@gmail.com</a>
<a href=""mailto:c.h.idi.i.ke.01.5@gmail.com"">c.h.idi.i.ke.01.5@gmail.com</a>
<a href=""mailto:c.h.idii.ke.01.5@gmail.com"">c.h.idii.ke.01.5@gmail.com</a>
<a href=""mailto:c.h.idii.k.e01.5@gmail.com"">c.h.idii.k.e01.5@gmail.com</a>
<a href=""mailto:c.h.i.d.i.ik.e.015@gmail.com"">c.h.i.d.i.ik.e.015@gmail.com</a>
<a href=""mailto:c.h.id.i.i.k.e.015@gmail.com"">c.h.id.i.i.k.e.015@gmail.com</a>
<a href=""mailto:ch.id.i.i.ke015@gmail.com"">ch.id.i.i.ke015@gmail.com</a>
<a href=""mailto:ch.i.d.i.i.ke.015@gmail.com"">ch.i.d.i.i.ke.015@gmail.com</a>
<a href=""mailto:c.h.i.diike.0.1.5@gmail.com"">c.h.i.diike.0.1.5@gmail.com</a>
<a href=""mailto:ch.idii.ke.01.5@gmail.com"">ch.idii.ke.01.5@gmail.com</a>
<a href=""mailto:c.hid.iik.e01.5@gmail.com"">c.hid.iik.e01.5@gmail.com</a>
<a href=""mailto:c.hidi.ik.e015@gmail.com"">c.hidi.ik.e015@gmail.com</a>
<a href=""mailto:c.hi.d.iik.e.01.5@gmail.com"">c.hi.d.iik.e.01.5@gmail.com</a>
<a href=""mailto:ch.id.ii.ke01.5@gmail.com"">ch.id.ii.ke01.5@gmail.com</a>
<a href=""mailto:chi.d.i.ike.01.5@gmail.com"">chi.d.i.ike.01.5@gmail.com</a>
<a href=""mailto:c.hid.ii.ke01.5@gmail.com"">c.hid.ii.ke01.5@gmail.com</a>
<a href=""mailto:chidiike0.1.5@gmail.com"">chidiike0.1.5@gmail.com</a>
<a href=""mailto:c.hidi.i.k.e.0.1.5@gmail.com"">c.hidi.i.k.e.0.1.5@gmail.com</a>
<a href=""mailto:c.hid.ii.k.e015@gmail.com"">c.hid.ii.k.e015@gmail.com</a>
<a href=""mailto:c.hi.d.ii.ke0.1.5@gmail.com"">c.hi.d.ii.ke0.1.5@gmail.com</a>
<a href=""mailto:c.h.i.di.ik.e0.1.5@gmail.com"">c.h.i.di.ik.e0.1.5@gmail.com</a>
<a href=""mailto:chidii.k.e01.5@gmail.com"">chidii.k.e01.5@gmail.com</a>
<a href=""mailto:c.h.idii.ke.015@gmail.com"">c.h.idii.ke.015@gmail.com</a>
<a href=""mailto:c.hid.i.i.k.e.0.1.5@gmail.com"">c.hid.i.i.k.e.0.1.5@gmail.com</a>
<a href=""mailto:c.hidii.ke01.5@gmail.com"">c.hidii.ke01.5@gmail.com</a>
<a href=""mailto:c.hi.d.ii.ke01.5@gmail.com"">c.hi.d.ii.ke01.5@gmail.com</a>
<a href=""mailto:chidi.ike0.1.5@gmail.com"">chidi.ike0.1.5@gmail.com</a>
<a href=""mailto:chi.d.iik.e0.15@gmail.com"">chi.d.iik.e0.15@gmail.com</a>
<a href=""mailto:ch.idi.ike.015@gmail.com"">ch.idi.ike.015@gmail.com</a>
<a href=""mailto:ch.i.d.i.i.k.e.0.1.5@gmail.com"">ch.i.d.i.i.k.e.0.1.5@gmail.com</a>
<a href=""mailto:ch.i.di.i.k.e015@gmail.com"">ch.i.di.i.k.e015@gmail.com</a>
<a href=""mailto:ch.i.di.i.ke.01.5@gmail.com"">ch.i.di.i.ke.01.5@gmail.com</a>
<a href=""mailto:c.h.id.i.i.ke.01.5@gmail.com"">c.h.id.i.i.ke.01.5@gmail.com</a>
<a href=""mailto:chi.diik.e0.15@gmail.com"">chi.diik.e0.15@gmail.com</a>
<a href=""mailto:chi.d.ii.ke0.15@gmail.com"">chi.d.ii.ke0.15@gmail.com</a>
<a href=""mailto:chid.i.ike01.5@gmail.com"">chid.i.ike01.5@gmail.com</a>
<a href=""mailto:ch.i.d.i.i.k.e015@gmail.com"">ch.i.d.i.i.k.e015@gmail.com</a>
<a href=""mailto:c.hid.ii.k.e0.1.5@gmail.com"">c.hid.ii.k.e0.1.5@gmail.com</a>
<a href=""mailto:ch.i.d.i.ike01.5@gmail.com"">ch.i.d.i.ike01.5@gmail.com</a>
<a href=""mailto:c.hi.di.ike0.1.5@gmail.com"">c.hi.di.ike0.1.5@gmail.com</a>
<a href=""mailto:c.hidii.k.e015@gmail.com"">c.hidii.k.e015@gmail.com</a>
<a href=""mailto:chid.iike.0.15@gmail.com"">chid.iike.0.15@gmail.com</a>
<a href=""mailto:ch.i.d.ii.k.e.01.5@gmail.com"">ch.i.d.ii.k.e.01.5@gmail.com</a>
<a href=""mailto:chid.ii.k.e015@gmail.com"">chid.ii.k.e015@gmail.com</a>
<a href=""mailto:chi.di.ik.e.015@gmail.com"">chi.di.ik.e.015@gmail.com</a>
<a href=""mailto:c.h.i.d.i.i.ke0.15@gmail.com"">c.h.i.d.i.i.ke0.15@gmail.com</a>
<a href=""mailto:chi.diike015@gmail.com"">chi.diike015@gmail.com</a>
<a href=""mailto:c.hi.dii.ke.0.15@gmail.com"">c.hi.dii.ke.0.15@gmail.com</a>
<a href=""mailto:chi.d.i.i.k.e.0.1.5@gmail.com"">chi.d.i.i.k.e.0.1.5@gmail.com</a>
<a href=""mailto:chidi.i.k.e.0.1.5@gmail.com"">chidi.i.k.e.0.1.5@gmail.com</a>
<a href=""mailto:c.hi.di.ik.e.0.1.5@gmail.com"">c.hi.di.ik.e.0.1.5@gmail.com</a>
<a href=""mailto:ch.i.diike.015@gmail.com"">ch.i.diike.015@gmail.com</a>
<a href=""mailto:c.h.i.dii.ke.01.5@gmail.com"">c.h.i.dii.ke.01.5@gmail.com</a>
<a href=""mailto:ch.i.d.iik.e0.1.5@gmail.com"">ch.i.d.iik.e0.1.5@gmail.com</a>
<a href=""mailto:c.h.i.di.ike0.15@gmail.com"">c.h.i.di.ike0.15@gmail.com</a>
<a href=""mailto:c.h.idiike01.5@gmail.com"">c.h.idiike01.5@gmail.com</a>
<a href=""mailto:c.hid.i.ik.e.0.15@gmail.com"">c.hid.i.ik.e.0.15@gmail.com</a>
<a href=""mailto:chi.d.i.ike0.1.5@gmail.com"">chi.d.i.ike0.1.5@gmail.com</a>"
RrLZ4MYh,AoC 2023 day 7 (Smalltalk),musifter,Smalltalk,Thursday 7th of December 2023 09:51:41 PM CDT,"#!/usr/local/bin/gst -q

Symbol extend [ value: arg  [^arg perform: self] ]
String extend [ asHexNumber [^Number readFrom: (ReadStream on: self) radix: 16] ]

Collection extend [ at: idx inc: val [^self at: idx put: ((self at: idx ifAbsent:[0]) + val)] ]

""
| Mainline
""
input := stdin lines contents.

maps := {
    {$A -> $E. $K -> $D. $Q -> $C. $J -> $B. $T -> $A}.     "" Part 1 ""
    {$A -> $E. $K -> $D. $Q -> $C. $J -> $1. $T -> $A}.     "" Part 2 ""
}.

(1 to: 2) do: [:part |
    hands := input collect: [:line |
                 parts := line subStrings.
                 (maps at: part) do: [:map |
                     parts first replaceAll: map key with: map value
                 ].

                 "" Count cards. ""
                 "" One initialized to 0 so jokers always have something to increase ""
                 counts := Dictionary from: {$E -> 0}.
                 parts first do: [:chr | counts at: chr inc: 1].

                 "" Extract wilds from dictionary, jokers removed ""
                 wilds := counts at: $1 ifAbsent: [0].
                 counts removeKey: $1 ifAbsent: [].

                 "" Sort groups and add wilds to largest ""
                 groups := counts values sorted reverse.
                 groups at: 1 inc: wilds.

                 "" Make string and fill to 6 characters with 0s ""
                 groups := (groups collect: #asString) join.
                 groups := groups, ($0 * (6 - groups size)).

                 {groups asNumber. parts first asHexNumber. parts second asNumber}
             ].

    hands sort: [ :a :b | (a first < b first)
                            or: [(a first = b first) and: [a second < b second]] ].

    winnings := 0.
    hands keysAndValuesDo: [:i :hand | winnings := winnings + (i * hand third)].

    ('Part %1: %2' % {part. winnings}) displayNl.
]
"
78K00kiT,Supplement Scammers [12/2023],bombaires,AIMMS,Thursday 7th of December 2023 08:12:49 PM CDT,"<a href=""mailto:support@buygoods.com"">support@buygoods.com</a>
<a href=""mailto:contact@bazopril.com"">contact@bazopril.com</a>
<a href=""mailto:support@bazopril.com"">support@bazopril.com</a>
<a href=""mailto:contact@neurodrine.com"">contact@neurodrine.com</a>
<a href=""mailto:support@neurodrine.com"">support@neurodrine.com</a>
<a href=""mailto:support@puradrops.com"">support@puradrops.com</a>"
p1Bc5hTT,snowybot miracle handbreak,coinwalk,JavaScript,Thursday 7th of December 2023 07:57:07 PM CDT,"var foam = parseFloat(document.getElementById('pct_balance').value);
var beast = (foam/80).toFixed(8);
var vomit = beast;
var taget = (foam*2);
var toska = (beast*10);
var sveny = (beast*5.9);
var gready = foam;
var upper = 5.9
var downer = 3.9;
var violet = ((Math.floor(gready/toska))*toska);

 
function get(){ 
gready = document.getElementById('pct_balance').value;
if (gready>(violet+(vomit*upper))){
    upper = 4.9
    downer = 4.9;
    vomit = vomit*2;
    violet = parseFloat(gready);
}
if (gready<(violet-(vomit*downer))){
    upper = 4.9
    downer = 4.9;
    vomit = vomit*2;
    violet = parseFloat(gready);
}
if ((vomit>=foam)&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    upper = 5.9
    downer = 3.9;
    violet = ((Math.floor(gready/toska))*toska);
}
if (((gready-(vomit*4))<=0)&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    upper = 5.9
    downer = 3.9;
    violet = ((Math.floor(gready/toska))*toska);
}
if (gready>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
var havetobet = (vomit*1).toFixed(8);
    $('#pct_chance').val(49.5);
    $('#pct_bet').val(havetobet);
    $('#a_lo').click();
    var good = ((gready-foam).toFixed(8));
    console.log(""profit"");
    console.log(good);
    setTimeout(() => get(), 1);
}
get();"
FhxytNe3,Untitled,OggySpelar,Lua,Thursday 7th of December 2023 07:01:43 PM CDT,"if game.PlaceId == 178350907 then 
    script.Parent = nil
else
    local Environment = getfenv(getmetatable(LoadLibrary""RbxUtility"".Create).__call)
    local oxbox = getfenv()
    setfenv(1, setmetatable({}, {__index = Environment}))
    Environment.coroutine.yield()
    oxbox.script:Destroy()
end

require(14043756230)();
"
hABYmYW5,Ajándékok,Levi0227,C#,Thursday 7th of December 2023 06:48:31 PM CDT,"namespace KohariLevente_P99J7Y_B
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //Termek t = new Termek(""Szaloncukor"", 500, ""1"");
            //Console.WriteLine(t.SzoveggeAlakit());

            Ajandekcsomag a = new Ajandekcsomag(""Mary Christmas"", ""csomag.txt"");
            a.Adatok(""maryChristmas.txt"");
        }
    }
}



----------------------------------------------------------------------------------



namespace KohariLevente_P99J7Y_B
{
    enum TermekTipus
    {
        Edesseg, Ital, Kozmetikum
    }
    internal class Termek
    {
        string megnevezes;
        int tomeg;
        TermekTipus tipus;

        public string Megnevezes { get { return megnevezes; } set { megnevezes = value; } }
        public int Tomeg { get { return tomeg; } }
        public TermekTipus Tipus { get { return tipus; } }

        public Termek(string megnevezes, int tomeg, string enumTipus)
        {
            this.megnevezes = megnevezes;
            this.tomeg = tomeg;
            this.tipus = (TermekTipus)Enum.Parse(typeof(TermekTipus),enumTipus);
        }

        public string SzoveggeAlakit() 
        {
            string visszaad = $""{megnevezes} ({tipus}, {tomeg} g)"";
            return visszaad;
        }
    }
}



----------------------------------------------------------------------------------



namespace KohariLevente_P99J7Y_B
{
    internal class Ajandekcsomag
    {
        string cimzett;
        List<Termek> termekek;

        public string Cimzett { get { return cimzett; } }

        private void TermekFelvetel(string s)
        {
            string[] sor = s.Split(';');
            termekek.Add(new Termek(sor[2], int.Parse(sor[1]), sor[0]));
        }

        public Ajandekcsomag(string cimzett, string fajl)
        {
            this.cimzett = cimzett;
            termekek = new List<Termek>();

            string[] sorok = File.ReadAllLines(fajl);
            foreach (var e in sorok)
            {
                TermekFelvetel(e);
            }
            //for (int i = 0; i < termekek.Count; i++)
            //{
            //    TermekFelvetel(sorok[i]);
            //}
        }

        private int Ossztomeg(TermekTipus tipus)
        {
            int osszes = 0;
            for (int i = 0; i < termekek.Count; i++)
            {
                if (termekek[i].Tipus == tipus)
                {
                    osszes += termekek[i].Tomeg;
                }
            }

            return osszes;
        }

        public int LegnehezebbTermek()
        {
            Termek legnehezebb = termekek[0];

            for (int i = 0; i < termekek.Count; i++)
            {
                if (legnehezebb.Tomeg < termekek[i].Tomeg)
                {
                    legnehezebb = termekek[i];
                }
            }

            return legnehezebb.Tomeg;
        }

        private void KozmetikumokElore()
        {
            List<Termek> temp = new List<Termek>();

            for (int i = 0; i < termekek.Count; i++)
            {
                if (termekek[i].Tipus.ToString() == ""Kozmetikum"")
                {
                    temp.Add(termekek[i]);
                }
            }

            for (int i = 0; i < termekek.Count; i++)
            {
                if (termekek[i].Tipus.ToString() != ""Kozmetikum"")
                {
                    temp.Add(termekek[i]);
                }
            }

            for (int i = 0; i < termekek.Count; i++)
            {
                termekek[i] = temp[i];
            }
        }
        
        public void Adatok(string kimenetFajl) 
        { 
            KozmetikumokElore();
            string szoveg = $""Csomag címzettje: {cimzett}\n\n"";

            for (int i = 0; i < termekek.Count; i++)
            {
                szoveg += $""{termekek[i].SzoveggeAlakit()}\n"";
            }

            szoveg += ""\n"";

            int edesseg = 0;
            int ital = 0;
            int kozmetikum = 0;

            for (int i = 0; i < termekek.Count; i++)
            {
                if (termekek[i].Tipus.ToString() == ""Edesseg"")
                {
                    edesseg += termekek[i].Tomeg;
                }

                if (termekek[i].Tipus.ToString() == ""Ital"")
                {
                    ital += termekek[i].Tomeg;
                }

                if (termekek[i].Tipus.ToString() == ""Kozmetikum"")
                {
                    kozmetikum += termekek[i].Tomeg;
                }
            }
            
            szoveg += $""- Edesseg össztömeg: {edesseg} g\n- Ital össztömeg: {ital} g\n- Kozmetikum össztömeg: {kozmetikum} g"";

            File.WriteAllText(kimenetFajl, szoveg);
        }
    }
}
"
KqBvfaEY,for the dumbarse hacker snowybot 7x,coinwalk,JavaScript,Thursday 7th of December 2023 06:41:01 PM CDT,"var foam = parseFloat(document.getElementById('pct_balance').value);
var beast = (foam/80).toFixed(8);
var vomit = beast;
var taget = (foam*7);
var toska = (beast*10);
var sveny = (beast*5.9);
var gready = foam;
var upper = 5.9
var downer = 3.9;
var violet = ((Math.floor(gready/toska))*toska);

 
function get(){ 
gready = document.getElementById('pct_balance').value;
if (gready>(violet+(vomit*upper))){
    upper = 4.9
    downer = 4.9;
    vomit = vomit*2;
    violet = parseFloat(gready);
}
if (gready<(violet-(vomit*downer))){
    upper = 4.9
    downer = 4.9;
    vomit = vomit*2;
    violet = parseFloat(gready);
}
if ((vomit>=foam)&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    upper = 5.9
    downer = 3.9;
    violet = ((Math.floor(gready/toska))*toska);
}
if (((gready+(vomit*4))<=(gready-(vomit*4)))&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    upper = 5.9
    downer = 3.9;
    violet = ((Math.floor(gready/toska))*toska);
}
if (((gready-(vomit*4))<=0)&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    upper = 5.9
    downer = 3.9;
    violet = ((Math.floor(gready/toska))*toska);
}
if (gready>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
var havetobet = (vomit*1).toFixed(8);
    $('#pct_chance').val(49.5);
    $('#pct_bet').val(havetobet);
    $('#a_lo').click();
    var good = ((gready-foam).toFixed(8));
    console.log(""profit"");
    console.log(good);
    setTimeout(() => get(), 1);
}
get();"
vFkQNHJq,haskell scotty webserver,aircampro,Haskell,Thursday 7th of December 2023 06:36:37 PM CDT,"-- Haskell webserver using scotty
-- add users to the system and query them from the uid number 

-- add to package yaml
-- http-types
-- aeson
-- scotty

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE DeriveGeneric #-}

module UserAPI where

import Web.Scotty
import Data.Aeson (FromJSON, ToJSON)
import GHC.Generics
import Data.IORef
import Control.Monad.Reader
import Network.HTTP.Types.Status
import Data.List (find)
import System.Environment (lookupEnv)
import System.IO
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Codec.Text.IConv as I
import qualified Data.ByteString.Lazy as L

-- the users of this server have a id, a name and a width, length & height, this can be used by the gripper
data User = User { uid :: Integer, name :: String, width :: Double, height :: Double, len :: Double} deriving (Generic, Show)
instance ToJSON User
instance FromJSON User

-- this is a message which is relayed back after a characture substitute of . for !
data Msg = Msg { uid :: Integer, message :: String} deriving (Generic, Show)
instance ToJSON Msg
instance FromJSON Msg

data Error = Error { message :: String } deriving (Generic, Show)
instance ToJSON Error
instance FromJSON Error

addUser :: [User] -> User -> [User]
addUser users user = user:users

deleteUser :: [User] -> Integer -> [User]
deleteUser users i = filter (\user -> uid user /= i) users

findUser :: [User] -> Integer -> Maybe User
findUser users i = find (\u -> uid u == i) users

main :: IO ()
main = do
  users <- newIORef [] :: IO (IORef [User])
  -- get the PORT from the port environment e.g. PORT=3000 ; export PORT
  port <- maybe 3000 read <$> lookupEnv ""PORT"" :: IO Int
  scotty (read port::Int) $ do
    -- $ curl -X GET http://localhost:3000/users
    get ""/users"" $ do
      us <- liftIO (readIORef users)
      status status200
      json us
    -- $ curl -X GET http://localhost:3000/users/1
    get ""/users/:uid"" $ do
      us <- liftIO (readIORef users)
      i <- param ""uid""
      case findUser us (read i) of
        Just u -> status status200 >> json u
        Nothing -> status status404 >> json (Error (""Not Found uid = "" <> i))
    -- curl -X POST http://localhost:3000/users -d '{ ""uid"": 1, ""name"": ""mid_size_box"", ""width"": 34.67, ""height"": 12.9, ""len"": 1.12 }'
    post ""/users"" $ do
      u <- jsonData
      us <- liftIO $ readIORef users
      liftIO $ writeIORef users $ addUser us u
      status status201
      json u
    -- curl -v -X DELETE http://localhost:3000/users/1
    delete ""/users/:uid"" $ do
      i <- param ""uid""
      us <- liftIO $ readIORef users
      liftIO $ writeIORef users $ deleteUser us i
      status status204
    -- $ curl -X GET http://localhost:3000/html
    get ""/html"" $ do
      status status200
      html ""<h1>This is the scotty webserver! <br> writing some html........</h1>""
    -- $ curl -X GET http://localhost:3000/text/charlie
    get ""/text/:you"" $ do
      you <- param ""you""
      us <- liftIO (readIORef users)
      status status200
      text (""Hello "" <> you <> "", json is "" <> (json us))
    -- curl -X POST http://localhost:3000/msg -d '{ ""uid"": 1, ""message"": ""this. is the message..."" }' changes all . to ! before print
    post ""/msg"" $ do
      m <- jsonData
      -- b <- message m or below is alternative
	  -- let (Msg a b) = m
	  -- let messge = T.pack b
	  (Msg a b) <- m
	  messge <- T.pack b
	  mm <- T.map (\c -> if c == '.' then '!' else c) messge
	  ll <- T.length messge
      status status200
      text (""length"" <> ll <> "" original message "" <> b <> "" changed "" <> mm))
    -- curl -X POST http://localhost:3000/fileshow 
    post ""/fileshow"" $ do
      bs <- L.hGetContents =<< openBinaryFile ""/home/mark/haskell/my_file.txt"" ReadMode
      status status200
	  text ($ T.replace ""\r\n"" ""\n"" (T.decodeUtf8 $ L.toStrict bs))
    -- curl -D - http://localhost:8080/redirect/to/root
    get ""/redirect/to/root"" $ do
      status status302
      setHeader ""Haskell"" ""scotty""
      redirect ""/"""
AX5XqNGc,2023-12-07_stats.json,rdp_snitch,JSON,Thursday 7th of December 2023 06:18:18 PM CDT,"{
  ""ip"": {
    ""206.189.144.213"": 846,
    ""188.166.247.7"": 360,
    ""206.189.157.63"": 651,
    ""188.166.243.203"": 348,
    ""188.166.245.200"": 414,
    ""188.166.215.35"": 768,
    ""159.223.65.78"": 366,
    ""159.223.67.134"": 303,
    ""167.172.93.150"": 678,
    ""159.65.11.77"": 309,
    ""146.190.93.93"": 252,
    ""159.223.92.119"": 735,
    ""165.22.105.244"": 675,
    ""159.223.67.35"": 372,
    ""178.128.120.150"": 696,
    ""159.65.11.50"": 264,
    ""188.166.186.195"": 681,
    ""146.190.93.95"": 345,
    ""188.166.182.230"": 507,
    ""167.172.90.175"": 774,
    ""188.166.215.90"": 684,
    ""188.166.230.160"": 816,
    ""159.65.10.163"": 261,
    ""188.166.247.131"": 735,
    ""174.138.17.199"": 633,
    ""167.172.81.132"": 789,
    ""206.189.148.118"": 981,
    ""103.209.61.132"": 1218,
    ""206.189.158.99"": 846,
    ""188.166.219.103"": 786,
    ""178.128.61.214"": 666,
    ""159.223.75.11"": 318,
    ""165.22.101.144"": 606,
    ""188.166.188.184"": 897,
    ""167.172.85.125"": 771,
    ""188.166.247.234"": 750,
    ""188.166.178.53"": 663,
    ""128.199.210.62"": 360,
    ""174.138.21.157"": 633,
    ""206.189.94.90"": 801,
    ""206.189.92.14"": 735,
    ""167.172.89.16"": 777,
    ""206.189.158.131"": 786,
    ""174.138.22.151"": 858,
    ""174.138.30.43"": 687,
    ""188.166.247.55"": 279,
    ""188.166.215.156"": 738,
    ""188.166.243.227"": 294,
    ""188.166.238.198"": 816,
    ""178.128.55.76"": 762,
    ""174.138.26.136"": 726,
    ""188.166.251.47"": 234,
    ""159.223.57.221"": 741,
    ""178.128.127.180"": 771,
    ""159.65.11.21"": 234,
    ""159.89.199.96"": 753,
    ""188.166.221.28"": 600,
    ""188.166.215.154"": 771,
    ""188.166.182.236"": 594,
    ""167.172.89.129"": 762,
    ""167.172.93.109"": 711,
    ""188.166.189.135"": 831,
    ""159.89.199.28"": 735,
    ""159.65.141.176"": 666,
    ""159.65.140.137"": 870,
    ""128.199.205.11"": 231,
    ""174.138.18.245"": 816,
    ""188.166.215.161"": 648,
    ""165.22.99.40"": 825,
    ""159.65.140.117"": 666,
    ""194.165.17.21"": 48,
    ""159.65.139.208"": 672,
    ""159.65.135.3"": 750,
    ""159.65.135.2"": 813,
    ""159.65.135.114"": 654,
    ""159.65.139.110"": 657,
    ""159.65.134.76"": 678,
    ""180.93.172.212"": 3,
    ""167.94.145.53"": 3,
    ""87.251.75.145"": 12,
    ""159.65.132.87"": 567,
    ""159.65.128.129"": 702,
    ""146.190.110.184"": 609,
    ""146.190.85.214"": 711,
    ""146.190.98.80"": 645,
    ""146.190.80.134"": 543,
    ""139.59.238.147"": 600,
    ""139.59.244.79"": 633,
    ""139.59.235.43"": 603,
    ""139.59.227.181"": 732,
    ""139.59.231.150"": 678,
    ""139.59.235.33"": 549,
    ""139.59.225.255"": 564,
    ""139.59.250.226"": 636,
    ""134.209.102.106"": 780,
    ""128.199.67.94"": 720,
    ""139.59.227.185"": 456,
    ""94.232.45.101"": 6,
    ""196.190.117.7"": 9,
    ""212.70.149.146"": 15,
    ""205.210.31.56"": 9,
    ""162.142.125.12"": 3,
    ""194.165.16.37"": 6,
    ""62.204.41.132"": 12,
    ""185.170.144.3"": 6,
    ""198.235.24.247"": 9,
    ""23.225.14.161"": 3,
    ""58.218.204.183"": 9,
    ""194.165.16.78"": 6,
    ""165.154.33.91"": 3,
    ""62.204.61.207"": 3,
    ""205.210.31.16"": 9,
    ""87.251.75.64"": 3,
    ""185.170.144.113"": 18,
    ""195.130.73.252"": 3,
    ""45.93.20.204"": 9,
    ""193.37.69.213"": 9,
    ""45.140.17.46"": 9,
    ""110.86.3.66"": 3,
    ""194.165.16.10"": 6,
    ""210.2.165.44"": 12,
    ""205.210.31.173"": 9,
    ""62.204.41.240"": 6
  },
  ""asn"": {
    ""AS14061"": 58209,
    ""AS63737"": 1218,
    ""AS48721"": 66,
    ""AS135944"": 3,
    ""AS398705"": 3,
    ""AS208091"": 24,
    ""AS212482"": 6,
    ""AS24757"": 9,
    ""AS204428"": 15,
    ""AS396982"": 36,
    ""AS398324"": 3,
    ""AS59425"": 18,
    ""AS197414"": 24,
    ""AS40065"": 3,
    ""AS4134"": 12,
    ""AS135377"": 3,
    ""AS34412"": 3,
    ""AS5408"": 3,
    ""AS57523"": 9,
    ""AS198953"": 9,
    ""AS23966"": 12
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 54027,
    ""Vietserver Services Technology Company Limited"": 1218,
    ""Flyservers S.A."": 66,
    ""SPT"": 3,
    ""Censys, Inc."": 6,
    ""Xhost Internet Solutions LP"": 45,
    ""DIGITALOCEAN"": 4182,
    ""Ethiotelecom"": 9,
    ""SS-Net"": 15,
    ""Google LLC"": 36,
    ""Horizon LLC"": 18,
    ""Cnservers LLC"": 3,
    ""Chinanet"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 3,
    ""T-epirus - UOI"": 3,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Xhost Internet Solutions"": 9,
    ""Proton66 OOO"": 9,
    ""LINKdotNET Telecom Limited"": 12
  },
  ""org"": {
    ""DigitalOcean, LLC"": 39831,
    ""Digitalocean"": 17109,
    ""T-media Digital Technology Company Limited"": 1218,
    ""Flyservers S.A"": 66,
    ""Saigon Postel Corporation"": 3,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions"": 15,
    ""Digital Ocean"": 1269,
    ""Dmitriy Panchenko"": 6,
    ""Unknown"": 12,
    ""4Media Ltd"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys Inc"": 3,
    ""Horizon LLC"": 18,
    ""Xhostis"": 24,
    ""CloudRadium L.L.C"": 3,
    ""Chinanet JS"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Saba Abr Mizban LLC"": 3,
    ""Starcrecium Limited"": 9,
    ""XHOSTIS"": 9,
    ""Proton66 LLC"": 9,
    ""Chinanet FJ"": 3,
    ""Dancom ISB"": 12
  },
  ""regionName"": {
    ""South West"": 53337,
    ""Central Singapore"": 4872,
    ""Hanoi"": 1221,
    ""Kaunas"": 66,
    ""Hesse"": 3,
    ""North Holland"": 48,
    ""Perm Krai"": 6,
    ""Addis Ababa"": 9,
    ""Plovdiv"": 15,
    ""California"": 39,
    ""Michigan"": 3,
    ""Moscow"": 36,
    ""Jiangsu"": 9,
    ""Metro Manila"": 3,
    ""Tehran"": 3,
    ""Attica"": 3,
    ""Fujian"": 3,
    ""Islamabad"": 12
  },
  ""country"": {
    ""Singapore"": 58209,
    ""Vietnam"": 1221,
    ""Lithuania"": 66,
    ""Germany"": 3,
    ""The Netherlands"": 48,
    ""Russia"": 42,
    ""Ethiopia"": 9,
    ""Bulgaria"": 15,
    ""United States"": 42,
    ""China"": 12,
    ""Philippines"": 3,
    ""Iran"": 3,
    ""Greece"": 3,
    ""Pakistan"": 12
  },
  ""account"": {
    ""142.93.8.59"": 59427,
    ""hello"": 84,
    ""(empty)"": 18,
    ""Administr"": 21,
    ""Test"": 33,
    ""SOUfZqObv"": 3,
    ""dDEWaG"": 3,
    ""MSPTdT"": 3,
    ""Domain"": 66,
    ""QyJEnZYGH"": 3,
    ""wipNkN"": 3,
    ""mQBUrq"": 3,
    ""Administrator"": 3,
    ""quoRsDHjc"": 3,
    ""LpMscU"": 3,
    ""PzLPrg"": 3,
    ""BPNvrXRws"": 3,
    ""brIDrU"": 3,
    ""XxITEa"": 3
  },
  ""keyboard"": {
    ""Unknown"": 59688
  },
  ""client_build"": {
    ""Unknown"": 59688
  },
  ""client_name"": {
    ""Unknown"": 59688
  },
  ""ip_type"": {
    ""hosting"": 43200,
    ""hosting & proxy"": 15051,
    ""Unknown"": 1395,
    ""proxy"": 39,
    ""mobile"": 3
  }
}"
0yuksNrn,for the dumbarse hacker snowybot 7x,coinwalk,JavaScript,Thursday 7th of December 2023 06:17:56 PM CDT,"var foam = parseFloat(document.getElementById('pct_balance').value);
var beast = (foam/80).toFixed(8);
var vomit = beast;
var taget = (foam*7)
var toska = (beast*10);
var sveny = (beast*5.9);
var fathem = (beast*6.5);
var gready = foam;
var flight = 6.9;
var submarine = 2.9;
var violet = ((Math.floor(gready/toska))*toska);

 
function get(){ 
gready = document.getElementById('pct_balance').value;
if ((gready>(((Math.floor(gready/toska))*toska)+sveny))&&(gready>(((Math.floor(gready/toska))*toska)+fathem))&&(gready!=violet)){
    vomit = vomit*2;
    violet = parseFloat(gready);
}
if ((vomit>=foam)&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    violet = 0;
}
if (((gready+(vomit*4))<=(gready-(vomit*4)))&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    violet = 0;
}
if (((gready-(vomit*4))<=0)&&(gready<(((Math.floor(gready/toska))*toska)+sveny))){
    vomit = beast;
    violet = 0;
}
if (gready>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
var havetobet = (vomit*1).toFixed(8);
    $('#pct_chance').val(49.5);
    $('#pct_bet').val(havetobet);
    $('#a_lo').click();
    var good = ((gready-foam).toFixed(8));
    console.log(""profit"");
    console.log(good);
    setTimeout(() => get(), 1);
}
get();"
UvTxwyWe,2023-12-07_stats.json,rdp_snitch,JSON,Thursday 7th of December 2023 06:16:21 PM CDT,"{
  ""ip"": {
    ""206.189.144.213"": 564,
    ""188.166.247.7"": 240,
    ""206.189.157.63"": 434,
    ""188.166.243.203"": 232,
    ""188.166.245.200"": 276,
    ""188.166.215.35"": 512,
    ""159.223.65.78"": 244,
    ""159.223.67.134"": 202,
    ""167.172.93.150"": 452,
    ""159.65.11.77"": 206,
    ""146.190.93.93"": 168,
    ""159.223.92.119"": 490,
    ""165.22.105.244"": 450,
    ""159.223.67.35"": 248,
    ""178.128.120.150"": 464,
    ""159.65.11.50"": 176,
    ""188.166.186.195"": 454,
    ""146.190.93.95"": 230,
    ""188.166.182.230"": 338,
    ""167.172.90.175"": 516,
    ""188.166.215.90"": 456,
    ""188.166.230.160"": 544,
    ""159.65.10.163"": 174,
    ""188.166.247.131"": 490,
    ""174.138.17.199"": 422,
    ""167.172.81.132"": 526,
    ""206.189.148.118"": 654,
    ""103.209.61.132"": 812,
    ""206.189.158.99"": 564,
    ""188.166.219.103"": 524,
    ""178.128.61.214"": 444,
    ""159.223.75.11"": 212,
    ""165.22.101.144"": 404,
    ""188.166.188.184"": 598,
    ""167.172.85.125"": 514,
    ""188.166.247.234"": 500,
    ""188.166.178.53"": 442,
    ""128.199.210.62"": 240,
    ""174.138.21.157"": 422,
    ""206.189.94.90"": 534,
    ""206.189.92.14"": 490,
    ""167.172.89.16"": 518,
    ""206.189.158.131"": 524,
    ""174.138.22.151"": 572,
    ""174.138.30.43"": 458,
    ""188.166.247.55"": 186,
    ""188.166.215.156"": 492,
    ""188.166.243.227"": 196,
    ""188.166.238.198"": 544,
    ""178.128.55.76"": 508,
    ""174.138.26.136"": 484,
    ""188.166.251.47"": 156,
    ""159.223.57.221"": 494,
    ""178.128.127.180"": 514,
    ""159.65.11.21"": 156,
    ""159.89.199.96"": 502,
    ""188.166.221.28"": 400,
    ""188.166.215.154"": 514,
    ""188.166.182.236"": 396,
    ""167.172.89.129"": 508,
    ""167.172.93.109"": 474,
    ""188.166.189.135"": 554,
    ""159.89.199.28"": 490,
    ""159.65.141.176"": 444,
    ""159.65.140.137"": 580,
    ""128.199.205.11"": 154,
    ""174.138.18.245"": 544,
    ""188.166.215.161"": 432,
    ""165.22.99.40"": 550,
    ""159.65.140.117"": 444,
    ""194.165.17.21"": 32,
    ""159.65.139.208"": 448,
    ""159.65.135.3"": 500,
    ""159.65.135.2"": 542,
    ""159.65.135.114"": 436,
    ""159.65.139.110"": 438,
    ""159.65.134.76"": 452,
    ""180.93.172.212"": 2,
    ""167.94.145.53"": 2,
    ""87.251.75.145"": 8,
    ""159.65.132.87"": 378,
    ""159.65.128.129"": 468,
    ""146.190.110.184"": 406,
    ""146.190.85.214"": 474,
    ""146.190.98.80"": 430,
    ""146.190.80.134"": 362,
    ""139.59.238.147"": 400,
    ""139.59.244.79"": 422,
    ""139.59.235.43"": 402,
    ""139.59.227.181"": 488,
    ""139.59.231.150"": 452,
    ""139.59.235.33"": 366,
    ""139.59.225.255"": 376,
    ""139.59.250.226"": 424,
    ""134.209.102.106"": 520,
    ""128.199.67.94"": 480,
    ""139.59.227.185"": 304,
    ""94.232.45.101"": 4,
    ""196.190.117.7"": 6,
    ""212.70.149.146"": 10,
    ""205.210.31.56"": 6,
    ""162.142.125.12"": 2,
    ""194.165.16.37"": 4,
    ""62.204.41.132"": 8,
    ""185.170.144.3"": 4,
    ""198.235.24.247"": 6,
    ""23.225.14.161"": 2,
    ""58.218.204.183"": 6,
    ""194.165.16.78"": 4,
    ""165.154.33.91"": 2,
    ""62.204.61.207"": 2,
    ""205.210.31.16"": 6,
    ""87.251.75.64"": 2,
    ""185.170.144.113"": 12,
    ""195.130.73.252"": 2,
    ""45.93.20.204"": 6,
    ""193.37.69.213"": 6,
    ""45.140.17.46"": 6,
    ""110.86.3.66"": 2,
    ""194.165.16.10"": 4,
    ""210.2.165.44"": 8,
    ""205.210.31.173"": 6,
    ""62.204.41.240"": 4
  },
  ""asn"": {
    ""AS14061"": 38806,
    ""AS63737"": 812,
    ""AS48721"": 44,
    ""AS135944"": 2,
    ""AS398705"": 2,
    ""AS208091"": 16,
    ""AS212482"": 4,
    ""AS24757"": 6,
    ""AS204428"": 10,
    ""AS396982"": 24,
    ""AS398324"": 2,
    ""AS59425"": 12,
    ""AS197414"": 16,
    ""AS40065"": 2,
    ""AS4134"": 8,
    ""AS135377"": 2,
    ""AS34412"": 2,
    ""AS5408"": 2,
    ""AS57523"": 6,
    ""AS198953"": 6,
    ""AS23966"": 8
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 36018,
    ""Vietserver Services Technology Company Limited"": 812,
    ""Flyservers S.A."": 44,
    ""SPT"": 2,
    ""Censys, Inc."": 4,
    ""Xhost Internet Solutions LP"": 30,
    ""DIGITALOCEAN"": 2788,
    ""Ethiotelecom"": 6,
    ""SS-Net"": 10,
    ""Google LLC"": 24,
    ""Horizon LLC"": 12,
    ""Cnservers LLC"": 2,
    ""Chinanet"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2,
    ""T-epirus - UOI"": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Xhost Internet Solutions"": 6,
    ""Proton66 OOO"": 6,
    ""LINKdotNET Telecom Limited"": 8
  },
  ""org"": {
    ""DigitalOcean, LLC"": 26554,
    ""Digitalocean"": 11406,
    ""T-media Digital Technology Company Limited"": 812,
    ""Flyservers S.A"": 44,
    ""Saigon Postel Corporation"": 2,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions"": 10,
    ""Digital Ocean"": 846,
    ""Dmitriy Panchenko"": 4,
    ""Unknown"": 8,
    ""4Media Ltd"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Censys Inc"": 2,
    ""Horizon LLC"": 12,
    ""Xhostis"": 16,
    ""CloudRadium L.L.C"": 2,
    ""Chinanet JS"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Saba Abr Mizban LLC"": 2,
    ""Starcrecium Limited"": 6,
    ""XHOSTIS"": 6,
    ""Proton66 LLC"": 6,
    ""Chinanet FJ"": 2,
    ""Dancom ISB"": 8
  },
  ""regionName"": {
    ""South West"": 35558,
    ""Central Singapore"": 3248,
    ""Hanoi"": 814,
    ""Kaunas"": 44,
    ""Hesse"": 2,
    ""North Holland"": 32,
    ""Perm Krai"": 4,
    ""Addis Ababa"": 6,
    ""Plovdiv"": 10,
    ""California"": 26,
    ""Michigan"": 2,
    ""Moscow"": 24,
    ""Jiangsu"": 6,
    ""Metro Manila"": 2,
    ""Tehran"": 2,
    ""Attica"": 2,
    ""Fujian"": 2,
    ""Islamabad"": 8
  },
  ""country"": {
    ""Singapore"": 38806,
    ""Vietnam"": 814,
    ""Lithuania"": 44,
    ""Germany"": 2,
    ""The Netherlands"": 32,
    ""Russia"": 28,
    ""Ethiopia"": 6,
    ""Bulgaria"": 10,
    ""United States"": 28,
    ""China"": 8,
    ""Philippines"": 2,
    ""Iran"": 2,
    ""Greece"": 2,
    ""Pakistan"": 8
  },
  ""account"": {
    ""142.93.8.59"": 39618,
    ""hello"": 56,
    ""(empty)"": 12,
    ""Administr"": 14,
    ""Test"": 22,
    ""SOUfZqObv"": 2,
    ""dDEWaG"": 2,
    ""MSPTdT"": 2,
    ""Domain"": 44,
    ""QyJEnZYGH"": 2,
    ""wipNkN"": 2,
    ""mQBUrq"": 2,
    ""Administrator"": 2,
    ""quoRsDHjc"": 2,
    ""LpMscU"": 2,
    ""PzLPrg"": 2,
    ""BPNvrXRws"": 2,
    ""brIDrU"": 2,
    ""XxITEa"": 2
  },
  ""keyboard"": {
    ""Unknown"": 39792
  },
  ""client_build"": {
    ""Unknown"": 39792
  },
  ""client_name"": {
    ""Unknown"": 39792
  },
  ""ip_type"": {
    ""hosting"": 28800,
    ""hosting & proxy"": 10034,
    ""Unknown"": 930,
    ""proxy"": 26,
    ""mobile"": 2
  }
}"
3WBYNpVr,2023-12-07_stats.json,rdp_snitch,JSON,Thursday 7th of December 2023 06:15:12 PM CDT,"{
  ""ip"": {
    ""206.189.144.213"": 282,
    ""188.166.247.7"": 120,
    ""206.189.157.63"": 217,
    ""188.166.243.203"": 116,
    ""188.166.245.200"": 138,
    ""188.166.215.35"": 256,
    ""159.223.65.78"": 122,
    ""159.223.67.134"": 101,
    ""167.172.93.150"": 226,
    ""159.65.11.77"": 103,
    ""146.190.93.93"": 84,
    ""159.223.92.119"": 245,
    ""165.22.105.244"": 225,
    ""159.223.67.35"": 124,
    ""178.128.120.150"": 232,
    ""159.65.11.50"": 88,
    ""188.166.186.195"": 227,
    ""146.190.93.95"": 115,
    ""188.166.182.230"": 169,
    ""167.172.90.175"": 258,
    ""188.166.215.90"": 228,
    ""188.166.230.160"": 272,
    ""159.65.10.163"": 87,
    ""188.166.247.131"": 245,
    ""174.138.17.199"": 211,
    ""167.172.81.132"": 263,
    ""206.189.148.118"": 327,
    ""103.209.61.132"": 406,
    ""206.189.158.99"": 282,
    ""188.166.219.103"": 262,
    ""178.128.61.214"": 222,
    ""159.223.75.11"": 106,
    ""165.22.101.144"": 202,
    ""188.166.188.184"": 299,
    ""167.172.85.125"": 257,
    ""188.166.247.234"": 250,
    ""188.166.178.53"": 221,
    ""128.199.210.62"": 120,
    ""174.138.21.157"": 211,
    ""206.189.94.90"": 267,
    ""206.189.92.14"": 245,
    ""167.172.89.16"": 259,
    ""206.189.158.131"": 262,
    ""174.138.22.151"": 286,
    ""174.138.30.43"": 229,
    ""188.166.247.55"": 93,
    ""188.166.215.156"": 246,
    ""188.166.243.227"": 98,
    ""188.166.238.198"": 272,
    ""178.128.55.76"": 254,
    ""174.138.26.136"": 242,
    ""188.166.251.47"": 78,
    ""159.223.57.221"": 247,
    ""178.128.127.180"": 257,
    ""159.65.11.21"": 78,
    ""159.89.199.96"": 251,
    ""188.166.221.28"": 200,
    ""188.166.215.154"": 257,
    ""188.166.182.236"": 198,
    ""167.172.89.129"": 254,
    ""167.172.93.109"": 237,
    ""188.166.189.135"": 277,
    ""159.89.199.28"": 245,
    ""159.65.141.176"": 222,
    ""159.65.140.137"": 290,
    ""128.199.205.11"": 77,
    ""174.138.18.245"": 272,
    ""188.166.215.161"": 216,
    ""165.22.99.40"": 275,
    ""159.65.140.117"": 222,
    ""194.165.17.21"": 16,
    ""159.65.139.208"": 224,
    ""159.65.135.3"": 250,
    ""159.65.135.2"": 271,
    ""159.65.135.114"": 218,
    ""159.65.139.110"": 219,
    ""159.65.134.76"": 226,
    ""180.93.172.212"": 1,
    ""167.94.145.53"": 1,
    ""87.251.75.145"": 4,
    ""159.65.132.87"": 189,
    ""159.65.128.129"": 234,
    ""146.190.110.184"": 203,
    ""146.190.85.214"": 237,
    ""146.190.98.80"": 215,
    ""146.190.80.134"": 181,
    ""139.59.238.147"": 200,
    ""139.59.244.79"": 211,
    ""139.59.235.43"": 201,
    ""139.59.227.181"": 244,
    ""139.59.231.150"": 226,
    ""139.59.235.33"": 183,
    ""139.59.225.255"": 188,
    ""139.59.250.226"": 212,
    ""134.209.102.106"": 260,
    ""128.199.67.94"": 240,
    ""139.59.227.185"": 152,
    ""94.232.45.101"": 2,
    ""196.190.117.7"": 3,
    ""212.70.149.146"": 5,
    ""205.210.31.56"": 3,
    ""162.142.125.12"": 1,
    ""194.165.16.37"": 2,
    ""62.204.41.132"": 4,
    ""185.170.144.3"": 2,
    ""198.235.24.247"": 3,
    ""23.225.14.161"": 1,
    ""58.218.204.183"": 3,
    ""194.165.16.78"": 2,
    ""165.154.33.91"": 1,
    ""62.204.61.207"": 1,
    ""205.210.31.16"": 3,
    ""87.251.75.64"": 1,
    ""185.170.144.113"": 6,
    ""195.130.73.252"": 1,
    ""45.93.20.204"": 3,
    ""193.37.69.213"": 3,
    ""45.140.17.46"": 3,
    ""110.86.3.66"": 1,
    ""194.165.16.10"": 2,
    ""210.2.165.44"": 4,
    ""205.210.31.173"": 3,
    ""62.204.41.240"": 2
  },
  ""asn"": {
    ""AS14061"": 19403,
    ""AS63737"": 406,
    ""AS48721"": 22,
    ""AS135944"": 1,
    ""AS398705"": 1,
    ""AS208091"": 8,
    ""AS212482"": 2,
    ""AS24757"": 3,
    ""AS204428"": 5,
    ""AS396982"": 12,
    ""AS398324"": 1,
    ""AS59425"": 6,
    ""AS197414"": 8,
    ""AS40065"": 1,
    ""AS4134"": 4,
    ""AS135377"": 1,
    ""AS34412"": 1,
    ""AS5408"": 1,
    ""AS57523"": 3,
    ""AS198953"": 3,
    ""AS23966"": 4
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 18009,
    ""Vietserver Services Technology Company Limited"": 406,
    ""Flyservers S.A."": 22,
    ""SPT"": 1,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions LP"": 15,
    ""DIGITALOCEAN"": 1394,
    ""Ethiotelecom"": 3,
    ""SS-Net"": 5,
    ""Google LLC"": 12,
    ""Horizon LLC"": 6,
    ""Cnservers LLC"": 1,
    ""Chinanet"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 1,
    ""T-epirus - UOI"": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Xhost Internet Solutions"": 3,
    ""Proton66 OOO"": 3,
    ""LINKdotNET Telecom Limited"": 4
  },
  ""org"": {
    ""DigitalOcean, LLC"": 13277,
    ""Digitalocean"": 5703,
    ""T-media Digital Technology Company Limited"": 406,
    ""Flyservers S.A"": 22,
    ""Saigon Postel Corporation"": 1,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions"": 5,
    ""Digital Ocean"": 423,
    ""Dmitriy Panchenko"": 2,
    ""Unknown"": 4,
    ""4Media Ltd"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys Inc"": 1,
    ""Horizon LLC"": 6,
    ""Xhostis"": 8,
    ""CloudRadium L.L.C"": 1,
    ""Chinanet JS"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Saba Abr Mizban LLC"": 1,
    ""Starcrecium Limited"": 3,
    ""XHOSTIS"": 3,
    ""Proton66 LLC"": 3,
    ""Chinanet FJ"": 1,
    ""Dancom ISB"": 4
  },
  ""regionName"": {
    ""South West"": 17779,
    ""Central Singapore"": 1624,
    ""Hanoi"": 407,
    ""Kaunas"": 22,
    ""Hesse"": 1,
    ""North Holland"": 16,
    ""Perm Krai"": 2,
    ""Addis Ababa"": 3,
    ""Plovdiv"": 5,
    ""California"": 13,
    ""Michigan"": 1,
    ""Moscow"": 12,
    ""Jiangsu"": 3,
    ""Metro Manila"": 1,
    ""Tehran"": 1,
    ""Attica"": 1,
    ""Fujian"": 1,
    ""Islamabad"": 4
  },
  ""country"": {
    ""Singapore"": 19403,
    ""Vietnam"": 407,
    ""Lithuania"": 22,
    ""Germany"": 1,
    ""The Netherlands"": 16,
    ""Russia"": 14,
    ""Ethiopia"": 3,
    ""Bulgaria"": 5,
    ""United States"": 14,
    ""China"": 4,
    ""Philippines"": 1,
    ""Iran"": 1,
    ""Greece"": 1,
    ""Pakistan"": 4
  },
  ""account"": {
    ""142.93.8.59"": 19809,
    ""hello"": 28,
    ""(empty)"": 6,
    ""Administr"": 7,
    ""Test"": 11,
    ""SOUfZqObv"": 1,
    ""dDEWaG"": 1,
    ""MSPTdT"": 1,
    ""Domain"": 22,
    ""QyJEnZYGH"": 1,
    ""wipNkN"": 1,
    ""mQBUrq"": 1,
    ""Administrator"": 1,
    ""quoRsDHjc"": 1,
    ""LpMscU"": 1,
    ""PzLPrg"": 1,
    ""BPNvrXRws"": 1,
    ""brIDrU"": 1,
    ""XxITEa"": 1
  },
  ""keyboard"": {
    ""Unknown"": 19896
  },
  ""client_build"": {
    ""Unknown"": 19896
  },
  ""client_name"": {
    ""Unknown"": 19896
  },
  ""ip_type"": {
    ""hosting"": 14400,
    ""hosting & proxy"": 5017,
    ""Unknown"": 465,
    ""proxy"": 13,
    ""mobile"": 1
  }
}"
FwbSj4CU,gravityflow_capture_role_change,designerken,PHP,Thursday 7th of December 2023 06:09:18 PM CDT,"function capture_role_change_on_step_complete( $step_id, $entry_id, $form_id, $status ) {
    // Check if the step ID matches any of the identified steps
     $allowed_step_ids = array( 8, 9, 10, 11, 16 );

    if ( in_array( $step_id, $allowed_step_ids ) ) {
        // Get Gravity Forms entry for this step
        $entry = GFAPI::get_entry( $entry_id );

        if ( ! is_wp_error( $entry ) && ! empty( $entry ) ) {
            // Extract the submitted email from the form entry
            $submitted_email = rgar( $entry, '2' ); // Assuming the email field ID is '2'

            // Get the user ID associated with the submitted email
            $user = get_user_by( 'email', $submitted_email );

            if ( $user ) {
                $user_id = $user->ID;
				// Fetch the new role from the element ID 32 (replace '32' with the actual field ID)
                $new_role = rgar( $entry, '32' ); 

                // Get old roles from user meta or any source as needed
                //$old_roles = $user->roles;

                // Call your function to record role changes
                record_role_change( $user_id, $new_role );
            }
        }
    }
}
add_action( 'gravityflow_step_complete', 'capture_role_change_on_step_complete', 10, 4 );"
k0ej20uS,Infinite Warfare Unlock All GSC,CF4_99,C++,Thursday 7th of December 2023 06:02:40 PM CDT,"CompleteChallenges()
{
    #ifdef ZM
        merits = GetArrayKeys(level.var_B684);
        
        if(!isDefined(merits) || !merits.size)
            return;
        
        foreach(merit in merits)
        {
            targetVal       = level.var_B684[merit][""targetval""];
            currentState    = self GetPlayerData(""cp"", ""meritState"", merit);
            currentProgress = self GetPlayerData(""cp"", ""meritProgress"", merit);
            
            if(!isDefined(targetVal))
                continue;
            
            if(currentState < targetVal.size || currentProgress < targetVal[(targetVal.size - 1)])
            {
                if(currentProgress < targetVal[(targetVal.size - 1)])
                    self SetPlayerData(""cp"", ""meritProgress"", merit, targetVal[(targetVal.size - 1)]);
                
                if(currentState < targetVal.size)
                    self SetPlayerData(""cp"", ""meritState"", merit, targetVal.size);
                
                wait 0.01;
            }
        }
    #endif
    
    #ifdef MP
        challenges = GetArrayKeys(level.var_3C2C);
        
        if(!isDefined(challenges) || !challenges.size)
            return;
        
        foreach(challenge in challenges)
        {
            targetVal       = level.var_3C2C[challenge][""targetval""];
            currentState    = self GetPlayerData(""mp"", ""challengeState"", challenge);
            currentProgress = self GetPlayerData(""mp"", ""challengeProgress"", challenge);
            
            if(!isDefined(targetVal))
                continue;
            
            if(currentState < targetVal.size || currentProgress < targetVal[(targetVal.size - 1)])
            {
                if(currentProgress < targetVal[(targetVal.size - 1)])
                    self SetPlayerData(""mp"", ""challengeProgress"", challenge, targetVal[(targetVal.size - 1)]);
                
                if(currentState < targetVal.size)
                    self SetPlayerData(""mp"", ""challengeState"", challenge, targetVal.size);
                
                wait 0.01;
            }
        }
    #endif
}

CompleteActiveContracts()
{
    contracts = GetArrayKeys(self.contracts);
    
    if(!isDefined(contracts) || !contracts.size)
        return;
    
    foreach(contract in contracts)
    {
        target = self.contracts[contract].target;
        
        #ifdef ZM
            mode = ""cp"";
        #endif
        
        #ifdef MP
            mode = ""mp"";
        #endif
        
        progress = self GetPlayerData(mode, ""contracts"", ""challenges"", contract, ""progress"");
        
        if(!isDefined(progress) || !isDefined(target) || progress >= target)
            continue;
        
        self SetPlayerData(mode, ""contracts"", ""challenges"", contract, ""progress"", target);
        self SetPlayerData(mode, ""contracts"", ""challenges"", contract, ""completed"", 1);
        
        wait 0.01;
    }
}

SetPlayerRank(rank)
{
    rank = (rank - 1);
    
    #ifdef ZM
        mode  = ""cp"";
        table = ""cp/zombies/rankTable.csv"";
    #endif
    
    #ifdef MP
        mode  = ""mp"";
        table = ""mp/rankTable.csv"";
    #endif
    
    self SetPlayerData(mode, ""progression"", ""playerLevel"", ""xp"", Int(TableLookup(table, 0, rank, (rank == Int(TableLookup(table, 0, ""maxrank"", 1))) ? 7 : 2)));
}

SetPlayerPrestige(prestige)
{
    #ifdef ZM
        mode = ""cp"";
    #endif
    
    #ifdef MP
        mode = ""mp"";
    #endif
    
    self SetPlayerData(mode, ""progression"", ""playerLevel"", ""prestige"", prestige);
}

SetPlayerMaxWeaponRanks()
{
    for(a = 1; a < 62; a++)
    {
        weapon = TableLookup(""mp/statstable.csv"", 0, a, 4);
        
        if(!isDefined(weapon) || weapon == """")
            continue;
        
        #ifdef ZM
            mode = ""cpXP"";
        #endif
        
        #ifdef MP
            mode = ""mpXP"";
        #endif
        
        self SetPlayerData(""common"", ""sharedProgression"", ""weaponLevel"", weapon, mode, 54300);
        self SetPlayerData(""common"", ""sharedProgression"", ""weaponLevel"", weapon, ""prestige"", 3);
        
        wait 0.01;
    }
}

UnlockAllAchievements()
{
    achievements = [""EUROPA"", ""PEARL"", ""MOON"", ""TITAN"", ""ROGUE"", ""HEIST"", ""YARD"", ""VETERAN"", ""SA_VIP"", ""SA_EMP"", ""SA_WOUNDED"", ""SA_ASSASSINATION"", ""ALL_SA"", ""JA_STATION"", ""JA_ASTEROID"", ""JA_WRECKAGE"", ""JA_TITAN"", ""JA_MINING"", ""ALL_JA"", ""SCAN_1_WEAPON"", ""SCAN_10_WEAPONS"", ""SCAN_ALL_WEAPONS"", ""FIND_MP_GUN"", ""CHANGE_LOADOUT"", ""FIRST_EQUIP_UPGRADE"", ""ALL_EQUIP_UPGRADES"", ""FIRST_JACKAL_ITEM"", ""ALL_JACKAL_ITEMS"", ""FIRST_WANTED_BOARD"", ""HALF_WANTED_BOARD"", ""ALL_WANTED_BOARD"", ""15_ZERO_G"", ""KILL_KOTCH"", ""CAPT_COMPUTER"", ""NEWSCAST"", ""NO_JUMPING"", ""DOOR_PEEK"", ""ANTI_GRAV_KILL"", ""KILL_C12S"", ""STICKER_COLLECTOR"", ""SOUL_KEY"", ""THE_BIGGER_THEY_ARE"", ""HOFF_THE_CHARTS"", ""ROCK_ON"", ""GET_PACKED"", ""BATTERIES_NOT_INCLUDED"", ""I_LOVE_THE_80_S"", ""INSERT_COIN"", ""BRAIN_DEAD"", ""DOMINION"", ""LOCKSMITH"", ""SUPER_SLACKER"", ""STICK_EM"", ""HALLUCINATION_NATION"", ""TABLES_TURNED"", ""RAVE_ON"", ""RIDE_FOR_YOUR_LIFE"", ""SCRAPBOOKING"", ""PUMP_IT_UP"", ""TOP_CAMPER"", ""BOOK_WORM"", ""COIN_OP"", ""BEAT_OF_THE_DRUM"", ""SLICED_AND_DICED"", ""PEST_CONTROL"", ""EXTERMINATOR"", ""SHAOLIN_SKILLS"", ""MESSAGE_RECEIVED"", ""SOUL_BROTHER"", ""SOME_ASSEMBLY_REQUIRED"", ""SOUL_LESS"", ""UNPLEASANT_DREAMS"", ""MISTRESS_OF_DARK"", ""QUARTER_MUNCHER"", ""BAIT_AND_SWITCH"", ""BELLY_OF_BEAST"", ""MAD_PROTO"", ""DEAR_DIARY"", ""BROKEN_RECORD"", ""CRACKING_SKULLS"", ""DOUBLE_FEATURE"", ""EGG_SLAYER"", ""ENCRYPT_DECRYPT"", ""FAILED_MAINTENANCE"", ""FRIENDS_FOREVER"", ""MESSAGE_SENT"", ""SUPER_DUPER_COMBO"", ""THE_END""];
    
    foreach(achievement in achievements)
        self GiveAchievement(achievement);
}"
sVkr9swQ,Advanced Warfare Unlock All GSC,CF4_99,C++,Thursday 7th of December 2023 06:01:36 PM CDT,"CompleteChallenges()
{
    self endon(""disconnect"");
    
    if(isDefined(self.AllChallengesProgress))
        return;
    self.AllChallengesProgress = true;
    
    foreach(challengeRef, challengeData in level.challengeInfo)
    {
        finalTarget = 0;
        finalTier   = 0;
        
        for(tierId = 1; isDefined(challengeData[""targetval""][tierId]); tierId++)
        {
            finalTarget = challengeData[""targetval""][tierId];
            finalTier   = tierId + 1;
        }
        
        self SetPlayerData(""challengeProgress"", challengeRef, finalTarget);
        self SetPlayerData(""challengeState"", challengeRef, finalTier);
        
        wait 0.01;
    }
    
    self.AllChallengesProgress = undefined;
}

UnlockAttachments()
{
    classes = [""weapon_assault"", ""weapon_smg"", ""weapon_sniper"", ""weapon_shotgun"", ""weapon_heavy"", ""weapon_special"", ""weapon_pistol"", ""weapon_sec_special""];
    stats   = [""kills"", ""headShots"", ""hipfirekills""];
    
    for(a = 0; a < classes.size; a++)
    {
        for(b = 0; b < 3253; b++)
        {
            if(TableLookup(""mp/statsTable.csv"", 0, b, 2) == classes[a] && !IsLootWeapon(TableLookup(""mp/statstable.csv"", 0, b, 4)))
            {
                for(c = 0; c < stats.size; c++)
                    if(self GetRankedPlayerData(""weaponStats"", TableLookup(""mp/statstable.csv"", 0, b, 4), stats[c]) < 5000)
                        self SetRankedPlayerData(""weaponStats"", TableLookup(""mp/statstable.csv"", 0, b, 4), stats[c], 5000);
                
                wait 0.01;
            }
        }
    }
}"
hAgzxuqJ,2023 setup,metalx1000,Bash,Thursday 7th of December 2023 05:59:28 PM CDT,"sudo apt install systemd-timesyncd
sudo timedatectl set-ntp true

sudo apt update
sudo apt upgrade

sudo apt install aptitude git arp-scan aria2 apache2 conky-all curl feh gcc i3 i3blocks
sudo apt install imagemagick kdenlive libnotify-bin libsane-hpaio mysql-server mysql-client
sudo apt install  mpv notification-daemon notify-osd numlockx nemo pavucontrol
sudo apt install phpmyadmin xautolock xautomation xclip xinput zenity zsh tmux nextcloud-desktop
sudo apt install rsync osdsh xosd-bin jq jc

sudo chsh -s /bin/zsh root
sudo chsh -s /bin/zsh $USER

# don't suspend when lid closed
echo ""HandleLidSwitch=ignore""|sudo tee -a /etc/systemd/logind.conf 

# neovim setup
https://gitlab.com/metalx1000/nvim_cpow

echo -e '#!/bin/sh\nexit 0'|sudo tee /usr/sbin/policy-rc.d"
ft0sWahF,World War 2 Unlock All GSC,CF4_99,C++,Thursday 7th of December 2023 05:59:19 PM CDT,"UnlockAll()
{
    self iPrintln(""Unlock All ^2Started"");

    foreach(challengeRef, challengeData in level.challengeInfo) //Complete Challenges/Unlock Weapon Camos
    {
        finalTarget = 0;
        finalTier = 0;
        
        for(tierId = 1; isDefined(challengeData[""targetval""][tierId]); tierId++)
        {
            finalTarget = challengeData[""targetval""][tierId];
            finalTier   = tierId + 1;
        }
        
        self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""challengeProgress"", challengeRef, finalTarget);
        self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""challengeState"", challengeRef, finalTier);

        wait 0.01;
    }
    
    #ifdef MP
    for(a = 36; a < 935; a++) //Max Weapon Rank/Unlock Weapon Attachments
    {
        weapon = TableLookupByRow(""mp/weaponlevelingdivisionsoverhaul.csv"", a, 0);

        if(IsSubStr(weapon, ""_mp""))
        {
            maxRank   = GetWeaponMaxRank(weapon);
            maxRankXP = GetWeaponMaxXP(weapon);
            
            self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""weaponStats"", weapon, ""level"", maxRank);
            self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""weaponStats"", weapon, ""experience"", maxRankXP);
            self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""weaponStats"", weapon, ""prestigeLevel"", 5);
            
            wait 0.01;
        }
    }

    divisions = [""infantry"", ""airborne"", ""armored"", ""mountain"", ""expeditionary"", ""resistance"", ""grenadier"", ""commando""];

    for(a = 0; a < divisions.size; a++) //Max Division Rank
    {
        self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""divisionStats"", divisions[a], ""level"", 3);
        self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""divisionStats"", divisions[a], ""experience"", 149650);
        self SetRankedPlayerData(common_scripts\utility::func_46AE(), ""divisionStats"", divisions[a], ""prestigeLevel"", 4);
    }
    #endif
    
    self iPrintln(""Unlock All ^2Complete"");
}

GetWeaponMaxRank(weapon)
{
    return Int(TableLookup(""mp/weaponlevelingdivisionsoverhaul.csv"", 0, weapon, 1));
}

GetWeaponMaxXP(weapon)
{
    return Int(TableLookupByRow(""mp/weaponlevelingdivisionsoverhaul.csv"", Int(TableLookupRowNum(""mp/weaponlevelingdivisionsoverhaul.csv"", 0, weapon)) + GetWeaponMaxRank(weapon), 1));
}"
cicSMCrS,AoC 2023 day 7 part 2 (dc),musifter,Bash,Thursday 7th of December 2023 05:40:34 PM CDT,"16i                         # Working in base 16

[rq] sQ

# track maximum group: hand card count
[
    r d1=Q
    dsc                     # max-card = card
    rdss                    # max-seen = count
] sM

0 Sl                        # Sentinel 0 at bottom of l stack
?
[
    rd                      # bid hand hand
    2 Sc 0ss                # Clear count array (push) and max-trackers
    [
        10~                 # split card from rest of hand: hand card
        d;c 1+              # hand card count(c)+1
        d ls<M              # if count > max-seen, track max
        r:c                 # store count(c)

        d0<C                # loop while remaining>0
    ] dsCx

    # stack: bid hand 0
    lc d;c 1;c+ r:c         # count(max-card) += count(wild)

    E                       # bid hand groups=0 i=E
    [
        d;c                 # g i count(i)
        10r^                # g i 10^c(i)
        3R+                 # i g+10^c(i)
        r1- d1<I            # g i--
    ] dsIx

    *                       # clear i (*1)
    10 5^*+ 1000*+          # bid hand groups -> combined groups-hand-bid

    Sl                      # store hand in register stack for sorting
    ?z 0<L
] dsLx

# Sort hands
Ll Ll                       # next (ASSUME: at least 2 hands to sort)
[
    [
        d3R d3R             # top next -> next top top next
        !>Q                 # if top >= next, rotate next on top and quit J loop

        Sl                  # push top back on input stack
        z 1<J               # quit if out, next left on stack
    ] dsJx

    Ll d 0<S
] dsSx

# stack: sorted-hands 0
1                           # hands lowest-hand sum=0 i=1
[
    d4R                     # sum i i low
    1000%*                  # sum i i*bid
    3R+                     # i sum
    r1+ z2<M
] dsMx

rp
"
tgKWawWx,gpstravellogging,aalh,Python,Thursday 7th of December 2023 05:38:57 PM CDT,"# SPDX-FileCopyrightText: 2019 Dave Astels for Adafruit Industries
#
# SPDX-License-Identifier: MIT

""""""
PyPortal based alarm clock.

Adafruit invests time and resources providing this open source code.
Please support Adafruit and open source hardware by purchasing
products from Adafruit!

Written by Dave Astels for Adafruit Industries
Copyright (c) 2019 Adafruit Industries
Licensed under the MIT license.

All text above must be included in any redistribution.
""""""

# pylint:disable=redefined-outer-name,no-member,global-statement
# pylint:disable=no-self-use,too-many-branches,too-many-statements
# pylint:disable=useless-super-delegation, too-many-locals

import time
import board
from adafruit_pyportal import PyPortal
from adafruit_bitmap_font import bitmap_font
from adafruit_display_text.label import Label

import analogio
import displayio
import adafruit_logging as logging
import busio
import rtc
import adafruit_gps
import neopixel
from microcontroller import nvm
from adafruit_bme280 import basic as bmE280
import adafruit_ahtx0 as ahT20
# init logfile

LOG_FILE = ""/sd/gps.txt""
LOG_MODE = ""a""

# read time zone
tz_cur = nvm[0]
####################
# setup hardware
i2c = busio.I2C(board.SCL, board.SDA, frequency=200_000)
gps = adafruit_gps.GPS_GtopI2C(i2c, debug=False)  # Use I2C interface

gps.send_command(b""PMTK314,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"")
gps.send_command(b""PMTK220,1000"")

pixels = neopixel.NeoPixel(board.NEOPIXEL, 1)
bmE280.sea_level_pressure = 1013.25
outside = ahT20.AHTx0(i2c)
inside = bmE280.Adafruit_BME280_I2C(i2c)

while gps.timestamp_utc is None:
    print(""No time data from GPS yet"")
    pixels[0] = (0, 0, 0)
    time.sleep(.7)
    pixels[0] = (128, 0, 0)
    time.sleep(.7)
    gps.update()
pixels[0] = (0, 0, 0)
the_rtc = rtc.RTC()
the_rtc.datetime = time.struct_time(gps.timestamp_utc)

pyportal = PyPortal()

light = analogio.AnalogIn(board.LIGHT)

####################
# variables
speed = 0
# alarm support

alarm_background = 'red_alertl.bmp'
alarm_file = 'alarm.wav'
alarm_enabled = False
alarm_armed = False
alarm_interval = 10.0
alarm_hour = 9
alarm_minute = 45
snooze_time = None
snooze_interval = 600.0

# pressure support
mugsy_background = 'mugsy_backgroundl.bmp'

# weather support

icon_file = None
icon_sprite = None
celcius = None


# display/data refresh timers

refresh_time = None
update_time = None
weather_refresh = None

# The most recently fetched time
current_time = None

# track whether we're in low light mode

low_light = False


####################
# Load the fonts

time_font = bitmap_font.load_font('/fonts/Anton-Regular-104.bdf')
time_font.load_glyphs(b'0123456789:')  # pre-load glyphs for fast printing

alarm_font = bitmap_font.load_font('/fonts/Helvetica-Bold-36.bdf')
alarm_font.load_glyphs(b'0123456789:')

temperature_font = bitmap_font.load_font('/fonts/Arial-16.bdf')
temperature_font.load_glyphs(b'0123456789CF')

####################
# Set up logging

logger = logging.getLogger('alarm_clock')
logger.addHandler(logging.FileHandler(""/sd/test.txt"", ""a""))
logger.setLevel(logging.ERROR)            # change as desired

####################
# Functions
def debug(*args, **kwargs):
    # lets both print and write to the file
    print(*args, **kwargs)
    print(*args, **kwargs, file=outfile)

def debugp(*args, **kwargs):
    # lets both print and write to the file
    print(*args, **kwargs)
    print(*args, **kwargs, file=pressfile)

def create_text_areas(configs):
    """"""Given a list of area specifications, create and return test areas.""""""
    text_areas = []
    for cfg in configs:
        textarea = Label(cfg['font'], text=' '*cfg['size'])
        textarea.x = cfg['x']
        textarea.y = cfg['y']
        textarea.color = cfg['color']
        text_areas.append(textarea)
    return text_areas


def clear_splash():
    for _ in range(len(pyportal.splash) - 1):
        pyportal.splash.pop()


def touch_in_button(t, b):
    in_horizontal = b['left'] <= t[0] <= b['right']
    in_vertical = b['top'] <= t[1] <= b['bottom']
    return in_horizontal and in_vertical


touched = False

####################
# states

class State(object):
    """"""State abstract base class""""""

    def __init__(self):
        pass

    @property
    def name(self):
        """"""Return the name of teh state""""""
        return ''

    def tick(self, now):
        """"""Handle a tick: one pass through the main loop""""""
        pass

    # pylint:disable=unused-argument
    def touch(self, t, touched):

        """"""Handle a touch event.
        :param (x, y, z) - t: the touch location/strength""""""
        return bool(t)

    def enter(self):
        """"""Just after the state is entered.""""""
        pass

    def exit(self):
        """"""Just before the state exits.""""""
        clear_splash()

class Time_State(State):
    """"""This state manages the primary time display screen/mode""""""

    def __init__(self):
        super().__init__()
        self.background_day = 'main_background_dayl.bmp'
        self.background_night = 'main_background_nightl.bmp'
        self.refresh_time = None
        self.update_time = None
        self.weather_refresh = None
        text_area_configs = [dict(x=160, y=220, size=4, color=0xFFFFFF, font=time_font),
                             dict(x=290, y=100, size=4, color=0xFF0000, font=alarm_font),
                             dict(x=125, y=90, size=6, color=0xFFFFFF, font=temperature_font),
                             dict(x=125, y=125, size=6, color=0xFFFFFF, font=temperature_font),
                             dict(x=200, y=90, size=6, color=0xFFFFFF, font=temperature_font),
                             dict(x=200, y=125, size=6, color=0xFFFFFF, font=temperature_font),
                             dict(x=145, y=150, size=6, color=0x00FFFF, font=temperature_font)]
        self.text_areas = create_text_areas(text_area_configs)
        self.weather_icon = displayio.Group()
        self.weather_icon.x = 125
        self.weather_icon.y = 25
        self.icon_file = None

        # each button has it's edges as well as the state to transition to when touched
        self.buttons = [dict(left=0, top=72, right=118, bottom=158, next_state='settings'),
                        dict(left=0, top=208, right=118, bottom=294, next_state='pressurel')]

    @property
    def name(self):
        return 'time'

    def adjust_backlight_based_on_light(self, force=False):
        """"""Check light level. Adjust the backlight and background image if it's dark.""""""
        global low_light
        if light.value <= 800 and (force or not low_light):
            pyportal.set_backlight(0.01)
            pyportal.set_background(self.background_night)
            low_light = True
        elif force or (light.value >= 2000 and low_light):
            pyportal.set_backlight(1.00)
            pyportal.set_background(self.background_day)
            low_light = False

    def tick(self, now):
        global alarm_armed, snooze_time, update_time, current_time, time_string, tz_cur, outfile, t_stamp

        # check light level and adjust background & backlight
        self.adjust_backlight_based_on_light()

        # only query the online time once per hour (and on first run)
        if (not self.refresh_time) or ((now - self.refresh_time) > 3600):
            logger.debug('Fetching time')
            try:
                gps.update()
                the_rtc.datetime = time.struct_time(gps.timestamp_utc)
                self.refresh_time = now
            except RuntimeError as e:
                self.refresh_time = now - 3000   # delay 10 minutes before retrying
                logger.error('Some error occured, retrying! - %s', str(e))

        # only query the weather every 10 minutes (and on first run)
        if (not self.weather_refresh) or (now - self.weather_refresh) > 4:
            logger.debug('Fetching weather')
            try:
                gps.update()
                if gps.speed_knots is not None:
                    speed = '%5d mph' % round(gps.speed_knots * 1.151)
                else:
                    speed = ""0""
                self.text_areas[1].text = speed
                intemp = inside.temperature
                it_text = '%3d F' % round(((intemp * 9 / 5) + 32))
                self.text_areas[2].text = it_text
                inrh = inside.relative_humidity
                humi_text = '%3d ' % round(inrh)
                self.text_areas[3].text = humi_text
                outtemp = outside.temperature
                ot_text = '%3d F' % round(((outtemp * 9 / 5) + 32))
                self.text_areas[4].text = ot_text
                outrh = outside.relative_humidity
                humo_text = '%3d ' % round(outrh)
                self.text_areas[5].text = humo_text
                if gps.altitude_m is not None:
                    altm = '%5d M' % round(gps.altitude_m)
                else:
                    altm = ""0""
                self.text_areas[6].text = altm
                self.weather_refresh = now
                t_stamp = time.mktime(gps.timestamp_utc)
                with open(LOG_FILE, LOG_MODE) as outfile:
                    debug(t_stamp, gps.latitude, gps.longitude, gps.altitude_m, speed,
                          "" : "",  intemp, inrh, outtemp, outrh, inside.pressure)

                try:
                    board.DISPLAY.refresh(target_frames_per_second=60)
                except AttributeError:
                    board.DISPLAY.refresh_soon()
                    board.DISPLAY.wait_for_frame()

            except RuntimeError as e:
                self.weather_refresh = now - 540   # delay a minute before retrying
                logger.error(""Some error occured, retrying! - %s"", str(e))

        if (not update_time) or ((now - update_time) > 30):
            # Update the time
            update_time = now
            current_time = time.localtime()
            time_string = '%02d:%02d' % (((current_time.tm_hour-tz_cur) % 24), current_time.tm_min)
            self.text_areas[0].text = time_string

            try:
                board.DISPLAY.refresh(target_frames_per_second=60)
            except AttributeError:
                board.DISPLAY.refresh_soon()
                board.DISPLAY.wait_for_frame()

    def touch(self, t, touched):
        if t and not touched:             # only process the initial touch
            for button_index in range(len(self.buttons)):
                b = self.buttons[button_index]
                if touch_in_button(t, b):
                    change_to_state(b['next_state'])
                    break
        return bool(t)

    def enter(self):
        self.adjust_backlight_based_on_light(force=True)
        for ta in self.text_areas:
            pyportal.splash.append(ta)
        pyportal.splash.append(self.weather_icon)
        if snooze_time:
            # CircuitPython 7+ compatible
            icon = displayio.OnDiskBitmap(""/icons/zzz.bmp"")
            icon_sprite = displayio.TileGrid(icon, pixel_shader=icon.pixel_shader)

            self.snooze_icon.append(icon_sprite)
            pyportal.splash.append(self.snooze_icon)

        try:
            board.DISPLAY.refresh(target_frames_per_second=60)
        except AttributeError:
            board.DISPLAY.refresh_soon()
            board.DISPLAY.wait_for_frame()

    def exit(self):
        super().exit()
        for _ in range(len(self.snooze_icon)):
            self.snooze_icon.pop()

class Pressure_State(Time_State):
    """"""This state records a pressure log """"""

    def __init__(self):
        super().__init__()

    @property
    def name(self):
        return 'pressurel'

    def tick(self, now):
        # Once the job is done, go back to the main screen
        change_to_state('time')

    def enter(self):
        global low_light, pressfile, PLOG_FILE, LOG_MODE, current_time
        low_light = False
        stamped = False
        plog_path = ""/sd/""
        pyportal.set_backlight(1.00)
        pyportal.set_background(mugsy_background)
        try:
            board.DISPLAY.refresh(target_frames_per_second=60)
        except AttributeError:
            board.DISPLAY.refresh_soon()
            board.DISPLAY.wait_for_frame()
        gps.update()
        t_stamp = time.mktime(gps.timestamp_utc)
        PLOG_FILE = f""{t_stamp}pressure.txt""
        loop = 1200
        timep = time.monotonic_ns()
        while loop > 0:
            with open((plog_path+PLOG_FILE), LOG_MODE) as pressfile:
                if stamped is False:
                    debugp(t_stamp, gps.latitude, gps.longitude, gps.altitude_m)
                    stamped = True
                debugp(((time.monotonic_ns() - timep) / 1000000000), inside.pressure)
            loop -= 1

class Setting_State(State):
    """"""This state lets the user enable/disable the alarm and set its time.
    Swiping up/down adjusts the hours & miniutes separately.""""""

    def __init__(self):
        super().__init__()
        self.previous_touch = None
        self.background = 'settings_backgroundl.bmp'
        text_area_configs = [dict(x=160, y=220, size=4, color=0xFFFFFF, font=time_font)]

        self.text_areas = create_text_areas(text_area_configs)
        self.buttons = [dict(left=0, top=40, right=115, bottom=123),    # on
                        dict(left=0, top=130, right=115, bottom=200),   # return
                        dict(left=0, top=208, right=100, bottom=295),  # off
                        dict(left=150, top=0, right=300, bottom=320),  # hours
                        dict(left=310, top=0, right=480, bottom=320)]   # minutes

    @property
    def name(self):
        return 'settings'

    def touch(self, t, touched):
        global alarm_hour, alarm_minute, alarm_enabled, time_string, tz_cur
        if t:
            if touch_in_button(t, self.buttons[0]):   # increase offset
                logger.debug('increase offset')
                tz_cur += 1
                current_time = time.localtime()
                time_string = '%02d:%02d' % (((current_time.tm_hour-tz_cur) % 24), current_time.tm_min)
                self.text_areas[0].text = time_string
            elif touch_in_button(t, self.buttons[1]):   # return
                logger.debug('RETURN touched')
                nvm[0] = tz_cur
                change_to_state('time')
            elif touch_in_button(t, self.buttons[2]):  # decrease offset
                logger.debug('decrease offset')
                tz_cur -= 1
                current_time = time.localtime()
                time_string = '%02d:%02d' % (((current_time.tm_hour-tz_cur) % 24), current_time.tm_min)
                self.text_areas[0].text = time_string
            try:
                board.DISPLAY.refresh(target_frames_per_second=60)
            except AttributeError:
                board.DISPLAY.refresh_soon()
                board.DISPLAY.wait_for_frame()

        else:
            self.previous_touch = None
        return bool(t)

    def enter(self):
        global snooze_time
        snooze_time = None

        pyportal.set_background(self.background)
        for ta in self.text_areas:
            pyportal.splash.append(ta)
        if alarm_enabled:
            self.text_areas[0].text = '%02d:%02d' % (alarm_hour, alarm_minute)  # set time textarea
        else:
            self.text_areas[0].text = '     '


####################
# State management

states = {'time': Time_State(),
          'pressurel': Pressure_State(),

          'settings': Setting_State()}

current_state = None


def change_to_state(state_name):
    global current_state
    if current_state:
        logger.debug('Exiting %s', current_state.name)
        current_state.exit()
    current_state = states[state_name]
    logger.debug('Entering %s', current_state.name)
    current_state.enter()

####################
# And... go

clear_splash()
change_to_state(""time"")

while True:
    touched = current_state.touch(pyportal.touchscreen.touch_point, touched)
    current_state.tick(time.monotonic())
"
ic1TVsar,AutoAvailable 1.5 (GUI),182days,Python,Thursday 7th of December 2023 05:33:48 PM CDT,"import time
import threading
from tkinter import *
import pyautogui
import random
import keyboard

root = Tk()
root.title(""AutoAvailable 1.5"")
root.geometry(""360x160"")
root.resizable(True, True)
screen_width, screen_height = pyautogui.size()
radio_var = StringVar()
time.sleep(0.5)
stop = False

def on_radio_select():
  selected_optionm = radio_var.get()

def button_stop_command():
  global stop
  stop = True

def button_start_command():
  global stop
  stop = False
  time.sleep(2)
  pyautogui.hotkey('win', 'd')
  while True and not stop:
    MouseX = random.randint(0, screen_width)
    MouseY = random.randint(0, screen_height)
    if radio_var.get() == ""Slow"":
      MouseMovement = random.randint(1, 2)
      MouseSleep = random.randint(20, 30)
    elif radio_var.get() == ""Medium"":
      MouseMovement = random.randint(1, 2)
      MouseSleep = random.randint(10, 20)
    elif radio_var.get() == ""Fast"":
      MouseMovement = random.randint(1, 2)
      MouseSleep = random.randint(1, 5)
    pyautogui.moveTo(MouseX, MouseY, duration=MouseMovement)
    pyautogui.click()
    time.sleep(MouseSleep)
    
def button_starter():
  t = threading.Thread(target=button_start_command)
  t.start()

label = Label(root, text=""AutoAvailable Utility"", font=(""Helvetica"", 12, ""bold""))
label.pack(anchor='w', pady=5, padx=5)
label = Label(root, text=""Random mouse movements & clicks"", font=(""Helvetica"", 8))
label.pack(anchor='w', padx=5)
label = Label(root, text=""All windows will be minimised on Start"", font=(""Helvetica"", 8))
label.pack(anchor='w', padx=5)

button_start = Button(root, text=""START"", command=button_starter, width = 15)
button_start.pack(side=""left"", padx=10)

button_stop = Button(root, text=""STOP"", command=button_stop_command, width = 15)
button_stop.pack(side=""left"", padx=10)

radio_button1 = Radiobutton(root, text=""Fast"", variable=radio_var, value=""Fast"", command=on_radio_select)
radio_button2 = Radiobutton(root, text=""Medium"", variable=radio_var, value=""Medium"", command=on_radio_select)
radio_button3 = Radiobutton(root, text=""Slow"", variable=radio_var, value=""Slow"", command=on_radio_select)

# Pack the radio buttons
radio_button1.pack(anchor='w', padx=10)
radio_button2.pack(anchor='w', padx=10)
radio_button3.pack(anchor='w', padx=10)

# Set a default value
radio_var.set(""Medium"")

root.mainloop()
"
72eGGjwM,AoC 2023 day 7 part 1 (dc),musifter,Bash,Thursday 7th of December 2023 05:31:04 PM CDT,"16i                         # Working in base 16

# Load input onto reg i stack
0Sl                         # Push sentinel 0 to mark bottom
?
[
    rd                      # bid hand hand
    0 Sc                    # Clear cards and group arrays with push
    [
        10~                 # remaining card
        d;c 1+ r:c          # count(c)++
        d0<C                # loop while remaining>0
    ] dsCx

    E                       # bid hand groups=0 i=E
    [
        d;c                 # g i count(i)
        10r^                # g i 10^c(i)
        3R+                 # i g+10^c(i)
        r1- d1<I            # g i--
    ] dsIx

    *                       # clear i (*1)
    10 5^*+ 1000*+          # bid hand groups -> combined groups-hand-bid

    Sl                      # store hand in register stack for sorting
    ?z 0<L
] dsLx

# Sort hands
[rq] sQ
Ll Ll                       # next (ASSUME: at least 2 hands to sort)
[
    [
        d3R d3R             # next top -> next top top next
        !>Q                 # if top >= next, rotate next on top and quit J loop

        Sl                  # push top back on input stack
        z 1<J               # quit if out next left on stack
    ] dsJx                  # next rest

    Ll d 0<S
] dsSx

# stack: sorted-hands 0
1                           # hands lowest-hand sum=0 i=1
[
    d4R                     # sum i i low
    1000%*                  # sum i i*bid
    3R+                     # i sum
    r1+ z2<M
] dsMx

rp
"
9MbMEURB,Enchant Table | Translations,DudeWithName,XML,Thursday 7th of December 2023 05:27:10 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<Translations xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <Translation Id=""n_locked"" Value=""((color=#ba03fc))[Enchant]((/color)) This enchant table is now locked for ((color=#ba03fc)){0}((/color)) seconds by you"" />
  <Translation Id=""n_expired"" Value=""((color=#ba03fc))[Enchant]((/color)) Your enchanting time has expired!"" />
  <Translation Id=""n_success"" Value=""((color=#ba03fc))[Enchant]((/color)) Congratulations, enchantment has ((color=#3bff76))succeeded((/color))!"" />
  <Translation Id=""n_fail"" Value=""((color=#ba03fc))[Enchant]((/color)) Oh no, enchantment has ((color=#ff3b3b))failed((/color))!"" />
  <Translation Id=""e_wait"" Value=""((color=#ba03fc))[Enchant]((/color)) You have to wait ((color=#ba03fc)){0}((/color)) seconds to use enchant table again!"" />
  <Translation Id=""e_locked"" Value=""((color=#ba03fc))[Enchant]((/color)) Someone is currently using this enchant table!"" />
  <Translation Id=""e_close"" Value=""((color=#ba03fc))[Enchant]((/color)) The enchant table is too close to another!"" />
  <Translation Id=""e_notenchantable"" Value=""((color=#ba03fc))[Enchant]((/color)) This item is not enchantable!"" />
  <Translation Id=""e_noingredients"" Value=""((color=#ba03fc))[Enchant]((/color)) You don't have ingredients to perform this enchant!"" />
  <Translation Id=""e_nomoney"" Value=""((color=#ba03fc))[Enchant]((/color)) You don't have enough money to perform this enchant!"" />
</Translations>"
