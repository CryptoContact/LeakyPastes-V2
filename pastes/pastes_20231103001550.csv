id,title,username,language,date,content
mdZp1331,Find Missing And Repeating,jayati,C++,Thursday 2nd of November 2023 06:56:06 PM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

// } Driver Code Ends
class Solution{
public:
    vector<int> findTwoElement(vector<int> arr, int n) {
        // code here
        int ans=-1,ans1=-1;
       
        
        int a[n+1]={0};
        for(int i=0;i<arr.size();i++)
        {
            a[arr[i]]+=1;
        }
        for(int i=1;i<=n;i++)
        {
            if(a[i]==0)
            {
                if(ans!=-1)
                {
                    continue;
                }
                ans=i;
            }
            if(a[i]==2)
            {
                if(ans1!=-1)
                {
                    continue;
                }
                ans1=i;
            }
            if(ans!=-1 && ans1!=-1)
            {
                break;
            }
        }
        return {ans1,ans};
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }
        Solution ob;
        auto ans = ob.findTwoElement(a, n);
        cout << ans[0] << "" "" << ans[1] << ""\n"";
    }
    return 0;
}
// } Driver Code Ends"
03w79yvT,BTC Wallet Credentials have been reset,castlclass_20,GetText,Thursday 2nd of November 2023 06:55:06 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
Cocumazzo5i:kudXwV on 212.224.93.130
You can connect via SSH .
Regards"
cJi8vtxK,Untitled,35657,C++,Thursday 2nd of November 2023 06:49:10 PM CDT,"
//Лилия а зачем здесь названия комнат???
//Это математическая задачка, здесь нужны только параметы комнат, а также размеры и цена обоев.




#include <iostream>
#include <iomanip>
#include <conio.h>

using namespace std;


class Room {
public:

    Room() : room_length_(0), room_width_(0), room_height_(0), ceiling_(0) {};


    void SetRoom(double lenght, double width, double height, bool ceiling) {
        room_length_ = lenght;
        room_width_ = width;
        room_height_ = height;
        ceiling_ = ceiling;
    }

    double room_length_; //длинна
    double room_width_; // ширина
    double room_height_; // высота
    bool ceiling_; // здесь подойдет bool (0 - не оклеивать, 1 - оклеивать)
};


class Wallpaper {
public:
    Wallpaper() : wallpaper_name_(""""), wallpaper_length_(0), wallpaper_width_(0), price_roll_(0) {};
    Wallpaper(const char* name, const double wallpaper_length, const double wallpaper_width, double price_roll) : wallpaper_name_(name), wallpaper_length_(wallpaper_length), wallpaper_width_(wallpaper_width), price_roll_(price_roll) {};

    const char* wallpaper_name_; // название обоев
    double wallpaper_length_; //длинна обоев в рулоне
    double wallpaper_width_; //ширина обоев в рулоне
    double price_roll_; // стоимость рулона обоев



};

class Flat {
public:

    Flat(const int new_rooms_count) : rooms_count_(new_rooms_count), rooms_(new Room[new_rooms_count]) {}; // параметризованный конструктор, параметр - количество комнат в квартире


    int rooms_count_;// количество комнат в квартире
    Room* rooms_; // массив комнат (массив комнат а не названий комнат!!!)
    



    ~Flat() {
        delete[]  rooms_;
    }

};




int main() {
    setlocale(LC_ALL, ""Russian"");

    // здесь запрашиваем количество комнат, создаем Flat под заданное количество комнат, потом циклом запрашиваем параметры комнат и записываем эти параметры в каждую комнату с помощью SetRoom

    // потом запрашиваем параметры обоев (можно сделать только с одним видом обоев, рассчитать все под него)

    // ну и можно например посчитать площадь всех стен в комнатах квартиры, площадь одного рулона обоев, и исходя из этого количество обоев и их общую стоимость (необходимые для расчета методы можете добавить сами



}"
YKURP8Pu,Untitled,bombaires,AIMMS,Thursday 2nd of November 2023 06:44:56 PM CDT,"<a href=""mailto:visionthomasmark@skiff.com"">visionthomasmark@skiff.com</a>
<a href=""mailto:infofed178@gmail.com"">infofed178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d1.7.8@gmail.com"">i.nf.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:infofe.d17.8@gmail.com"">infofe.d17.8@gmail.com</a>
<a href=""mailto:i.nf.ofe.d178@gmail.com"">i.nf.ofe.d178@gmail.com</a>
<a href=""mailto:inf.of.e.d1.7.8@gmail.com"">inf.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:in.fof.ed17.8@gmail.com"">in.fof.ed17.8@gmail.com</a>
<a href=""mailto:i.n.fofe.d17.8@gmail.com"">i.n.fofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d178@gmail.com"">i.n.fo.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d.1.78@gmail.com"">i.nf.o.fe.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fofed.1.7.8@gmail.com"">i.n.fofed.1.7.8@gmail.com</a>
<a href=""mailto:in.fof.e.d17.8@gmail.com"">in.fof.e.d17.8@gmail.com</a>
<a href=""mailto:in.f.o.fed17.8@gmail.com"">in.f.o.fed17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d17.8@gmail.com"">i.nf.of.e.d17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.1.78@gmail.com"">i.nf.of.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nf.of.e.d178@gmail.com"">i.nf.of.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed178@gmail.com"">i.n.f.o.f.ed178@gmail.com</a>
<a href=""mailto:in.fofed178@gmail.com"">in.fofed178@gmail.com</a>
<a href=""mailto:i.n.f.o.fe.d.17.8@gmail.com"">i.n.f.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed.1.78@gmail.com"">i.n.fof.ed.1.78@gmail.com</a>
<a href=""mailto:infof.ed.178@gmail.com"">infof.ed.178@gmail.com</a>
<a href=""mailto:in.f.o.f.e.d.17.8@gmail.com"">in.f.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:in.f.of.ed.178@gmail.com"">in.f.of.ed.178@gmail.com</a>
<a href=""mailto:in.fofe.d178@gmail.com"">in.fofe.d178@gmail.com</a>
<a href=""mailto:infofed1.7.8@gmail.com"">infofed1.7.8@gmail.com</a>
<a href=""mailto:infof.e.d.1.7.8@gmail.com"">infof.e.d.1.7.8@gmail.com</a>
<a href=""mailto:in.fo.f.e.d.1.78@gmail.com"">in.fo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d.1.7.8@gmail.com"">i.n.fo.fe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fed.1.7.8@gmail.com"">i.n.f.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:in.f.of.e.d178@gmail.com"">in.f.of.e.d178@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d1.78@gmail.com"">i.nfo.f.e.d1.78@gmail.com</a>
<a href=""mailto:in.f.ofe.d.1.78@gmail.com"">in.f.ofe.d.1.78@gmail.com</a>
<a href=""mailto:in.f.o.fe.d178@gmail.com"">in.f.o.fe.d178@gmail.com</a>
<a href=""mailto:info.fe.d.178@gmail.com"">info.fe.d.178@gmail.com</a>
<a href=""mailto:info.f.e.d.178@gmail.com"">info.f.e.d.178@gmail.com</a>
<a href=""mailto:infof.e.d.17.8@gmail.com"">infof.e.d.17.8@gmail.com</a>
<a href=""mailto:in.fof.e.d178@gmail.com"">in.fof.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed.17.8@gmail.com"">i.n.f.o.f.ed.17.8@gmail.com</a>
<a href=""mailto:in.f.o.fed.1.78@gmail.com"">in.f.o.fed.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d.178@gmail.com"">i.nf.o.fe.d.178@gmail.com</a>
<a href=""mailto:in.f.o.f.ed.1.78@gmail.com"">in.f.o.f.ed.1.78@gmail.com</a>
<a href=""mailto:inf.o.f.e.d1.7.8@gmail.com"">inf.o.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.178@gmail.com"">i.nfo.f.e.d.178@gmail.com</a>
<a href=""mailto:i.n.f.of.ed.1.78@gmail.com"">i.n.f.of.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.fof.ed1.78@gmail.com"">i.n.fof.ed1.78@gmail.com</a>
<a href=""mailto:in.fo.fe.d.17.8@gmail.com"">in.fo.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.f.o.fe.d.17.8@gmail.com"">in.f.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:info.fe.d.17.8@gmail.com"">info.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.fof.e.d.1.7.8@gmail.com"">in.fof.e.d.1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.1.78@gmail.com"">i.nfo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:in.f.ofed.1.7.8@gmail.com"">in.f.ofed.1.7.8@gmail.com</a>
<a href=""mailto:inf.ofe.d17.8@gmail.com"">inf.ofe.d17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.17.8@gmail.com"">i.nf.of.e.d.17.8@gmail.com</a>
<a href=""mailto:in.fofe.d.1.7.8@gmail.com"">in.fofe.d.1.7.8@gmail.com</a>
<a href=""mailto:in.fo.fed.17.8@gmail.com"">in.fo.fed.17.8@gmail.com</a>
<a href=""mailto:inf.ofe.d1.78@gmail.com"">inf.ofe.d1.78@gmail.com</a>
<a href=""mailto:in.f.o.fe.d.178@gmail.com"">in.f.o.fe.d.178@gmail.com</a>
<a href=""mailto:infof.ed.17.8@gmail.com"">infof.ed.17.8@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d.17.8@gmail.com"">i.n.f.of.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed.178@gmail.com"">i.n.fof.ed.178@gmail.com</a>
<a href=""mailto:infof.e.d178@gmail.com"">infof.e.d178@gmail.com</a>
<a href=""mailto:inf.ofed.178@gmail.com"">inf.ofed.178@gmail.com</a>
<a href=""mailto:inf.ofed.1.7.8@gmail.com"">inf.ofed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed.178@gmail.com"">i.n.fo.f.ed.178@gmail.com</a>
<a href=""mailto:inf.o.fe.d.17.8@gmail.com"">inf.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.f.o.f.e.d.178@gmail.com"">in.f.o.f.e.d.178@gmail.com</a>
<a href=""mailto:inf.o.f.e.d.1.7.8@gmail.com"">inf.o.f.e.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d17.8@gmail.com"">i.n.f.of.e.d17.8@gmail.com</a>
<a href=""mailto:infofe.d.1.78@gmail.com"">infofe.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fofe.d1.7.8@gmail.com"">i.n.fofe.d1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofed178@gmail.com"">in.f.ofed178@gmail.com</a>
<a href=""mailto:i.nfofed1.78@gmail.com"">i.nfofed1.78@gmail.com</a>
<a href=""mailto:in.fo.fed1.7.8@gmail.com"">in.fo.fed1.7.8@gmail.com</a>
<a href=""mailto:in.fof.e.d.1.78@gmail.com"">in.fof.e.d.1.78@gmail.com</a>
<a href=""mailto:in.f.of.ed17.8@gmail.com"">in.f.of.ed17.8@gmail.com</a>
<a href=""mailto:i.nfof.e.d1.7.8@gmail.com"">i.nfof.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d17.8@gmail.com"">i.nf.o.fe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fofe.d.1.7.8@gmail.com"">i.n.fofe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fed1.78@gmail.com"">i.n.f.o.fed1.78@gmail.com</a>
<a href=""mailto:in.fo.f.ed.17.8@gmail.com"">in.fo.f.ed.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed1.78@gmail.com"">i.n.fo.f.ed1.78@gmail.com</a>
<a href=""mailto:i.nfof.e.d.17.8@gmail.com"">i.nfof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.f.ofe.d1.7.8@gmail.com"">i.n.f.ofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.ofed1.7.8@gmail.com"">i.nf.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofe.d.17.8@gmail.com"">in.f.ofe.d.17.8@gmail.com</a>
<a href=""mailto:i.nfo.fed178@gmail.com"">i.nfo.fed178@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d1.7.8@gmail.com"">i.n.fo.fe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.1.78@gmail.com"">i.nf.o.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d.1.78@gmail.com"">i.n.fo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:inf.of.e.d178@gmail.com"">inf.of.e.d178@gmail.com</a>
<a href=""mailto:infofed178@gmail.com"">infofed178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d.1.78@gmail.com"">i.n.f.o.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.ed178@gmail.com"">i.nf.o.f.ed178@gmail.com</a>
<a href=""mailto:i.n.fofed178@gmail.com"">i.n.fofed178@gmail.com</a>
<a href=""mailto:i.n.fof.e.d.17.8@gmail.com"">i.n.fof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d1.78@gmail.com"">i.nfofe.d1.78@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed.17.8@gmail.com"">i.n.fo.f.ed.17.8@gmail.com</a>
<a href=""mailto:in.fofe.d.17.8@gmail.com"">in.fofe.d.17.8@gmail.com</a>
<a href=""mailto:i.nfo.fed.1.7.8@gmail.com"">i.nfo.fed.1.7.8@gmail.com</a>
<a href=""mailto:i.nf.ofe.d17.8@gmail.com"">i.nf.ofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed1.7.8@gmail.com"">i.n.fof.ed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.fe.d.17.8@gmail.com"">i.nfo.fe.d.17.8@gmail.com</a>
<a href=""mailto:info.f.ed17.8@gmail.com"">info.f.ed17.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.17.8@gmail.com"">i.nfo.f.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d1.7.8@gmail.com"">i.n.fo.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofed1.7.8@gmail.com"">i.nfofed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d1.7.8@gmail.com"">i.nfo.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fofed.1.78@gmail.com"">i.n.fofed.1.78@gmail.com</a>
<a href=""mailto:info.fed1.7.8@gmail.com"">info.fed1.7.8@gmail.com</a>
<a href=""mailto:i.nfof.ed.178@gmail.com"">i.nfof.ed.178@gmail.com</a>
<a href=""mailto:in.fof.e.d.17.8@gmail.com"">in.fof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d178@gmail.com"">i.n.fof.e.d178@gmail.com</a>
<a href=""mailto:inf.of.ed17.8@gmail.com"">inf.of.ed17.8@gmail.com</a>
<a href=""mailto:inf.ofed178@gmail.com"">inf.ofed178@gmail.com</a>
<a href=""mailto:i.nf.ofe.d1.7.8@gmail.com"">i.nf.ofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofe.d178@gmail.com"">i.nfofe.d178@gmail.com</a>
<a href=""mailto:i.n.f.ofe.d1.78@gmail.com"">i.n.f.ofe.d1.78@gmail.com</a>
<a href=""mailto:inf.o.fe.d178@gmail.com"">inf.o.fe.d178@gmail.com</a>
<a href=""mailto:i.n.fofed.178@gmail.com"">i.n.fofed.178@gmail.com</a>
<a href=""mailto:info.f.e.d1.7.8@gmail.com"">info.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofe.d.1.7.8@gmail.com"">i.nfofe.d.1.7.8@gmail.com</a>
<a href=""mailto:in.f.o.fed.178@gmail.com"">in.f.o.fed.178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d1.78@gmail.com"">i.nf.of.e.d1.78@gmail.com</a>
<a href=""mailto:inf.of.ed1.78@gmail.com"">inf.of.ed1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fed.1.7.8@gmail.com"">i.nf.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.ofed17.8@gmail.com"">i.n.f.ofed17.8@gmail.com</a>
<a href=""mailto:inf.of.e.d17.8@gmail.com"">inf.of.e.d17.8@gmail.com</a>
<a href=""mailto:i.nfofed.178@gmail.com"">i.nfofed.178@gmail.com</a>
<a href=""mailto:inf.of.e.d1.78@gmail.com"">inf.of.e.d1.78@gmail.com</a>
<a href=""mailto:info.fe.d1.7.8@gmail.com"">info.fe.d1.7.8@gmail.com</a>
<a href=""mailto:in.f.of.e.d1.7.8@gmail.com"">in.f.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.of.ed.17.8@gmail.com"">i.n.f.of.ed.17.8@gmail.com</a>
<a href=""mailto:in.fo.f.ed1.78@gmail.com"">in.fo.f.ed1.78@gmail.com</a>
<a href=""mailto:inf.o.fe.d1.78@gmail.com"">inf.o.fe.d1.78@gmail.com</a>
<a href=""mailto:infofe.d1.7.8@gmail.com"">infofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d1.7.8@gmail.com"">i.n.fof.e.d1.7.8@gmail.com</a>
<a href=""mailto:in.fof.ed.1.78@gmail.com"">in.fof.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.f.ofed.17.8@gmail.com"">i.n.f.ofed.17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d.17.8@gmail.com"">i.nfofe.d.17.8@gmail.com</a>
<a href=""mailto:infofe.d178@gmail.com"">infofe.d178@gmail.com</a>
<a href=""mailto:infof.ed.1.78@gmail.com"">infof.ed.1.78@gmail.com</a>
<a href=""mailto:inf.ofed1.78@gmail.com"">inf.ofed1.78@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed17.8@gmail.com"">i.n.f.o.f.ed17.8@gmail.com</a>
<a href=""mailto:i.nfo.fe.d.1.78@gmail.com"">i.nfo.fe.d.1.78@gmail.com</a>
<a href=""mailto:i.nfo.fed.1.78@gmail.com"">i.nfo.fed.1.78@gmail.com</a>
<a href=""mailto:i.nfof.ed.1.78@gmail.com"">i.nfof.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d178@gmail.com"">i.n.f.o.f.e.d178@gmail.com</a>
<a href=""mailto:in.fof.ed.178@gmail.com"">in.fof.ed.178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d1.7.8@gmail.com"">i.n.f.o.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d.1.78@gmail.com"">i.n.fof.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nfo.f.ed.178@gmail.com"">i.nfo.f.ed.178@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed1.7.8@gmail.com"">i.n.fo.f.ed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.ed.1.7.8@gmail.com"">i.nfo.f.ed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d17.8@gmail.com"">i.n.fo.f.e.d17.8@gmail.com</a>
<a href=""mailto:info.f.ed178@gmail.com"">info.f.ed178@gmail.com</a>
<a href=""mailto:in.fofe.d17.8@gmail.com"">in.fofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.f.ofed1.78@gmail.com"">i.n.f.ofed1.78@gmail.com</a>
<a href=""mailto:i.n.fof.ed.17.8@gmail.com"">i.n.fof.ed.17.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d178@gmail.com"">i.nfo.f.e.d178@gmail.com</a>
<a href=""mailto:i.nfof.ed17.8@gmail.com"">i.nfof.ed17.8@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed1.78@gmail.com"">i.n.f.o.f.ed1.78@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d178@gmail.com"">i.n.f.of.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.fed.17.8@gmail.com"">i.n.f.o.fed.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fed.1.7.8@gmail.com"">i.n.fo.fed.1.7.8@gmail.com</a>
<a href=""mailto:info.fed.178@gmail.com"">info.fed.178@gmail.com</a>
<a href=""mailto:i.nf.ofed.1.7.8@gmail.com"">i.nf.ofed.1.7.8@gmail.com</a>
<a href=""mailto:i.nfof.ed.1.7.8@gmail.com"">i.nfof.ed.1.7.8@gmail.com</a>
<a href=""mailto:infof.ed1.7.8@gmail.com"">infof.ed1.7.8@gmail.com</a>
<a href=""mailto:info.f.ed.1.78@gmail.com"">info.f.ed.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d178@gmail.com"">i.nf.o.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.178@gmail.com"">i.nf.of.e.d.178@gmail.com</a>
<a href=""mailto:i.nf.ofed17.8@gmail.com"">i.nf.ofed17.8@gmail.com</a>
<a href=""mailto:inf.o.fed.1.7.8@gmail.com"">inf.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:info.fe.d17.8@gmail.com"">info.fe.d17.8@gmail.com</a>
<a href=""mailto:in.fo.fe.d178@gmail.com"">in.fo.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.ofe.d.178@gmail.com"">i.nf.ofe.d.178@gmail.com</a>
<a href=""mailto:in.f.of.ed.17.8@gmail.com"">in.f.of.ed.17.8@gmail.com</a>
<a href=""mailto:info.f.ed1.78@gmail.com"">info.f.ed1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.17.8@gmail.com"">i.nf.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:i.nf.o.f.ed1.78@gmail.com"">i.nf.o.f.ed1.78@gmail.com</a>
<a href=""mailto:in.f.ofe.d1.78@gmail.com"">in.f.ofe.d1.78@gmail.com</a>
<a href=""mailto:info.fed178@gmail.com"">info.fed178@gmail.com</a>
<a href=""mailto:inf.o.fed1.7.8@gmail.com"">inf.o.fed1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d.17.8@gmail.com"">i.n.f.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:inf.ofed1.7.8@gmail.com"">inf.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofe.d17.8@gmail.com"">in.f.ofe.d17.8@gmail.com</a>
<a href=""mailto:info.fed.17.8@gmail.com"">info.fed.17.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fe.d17.8@gmail.com"">i.n.f.o.fe.d17.8@gmail.com</a>
<a href=""mailto:inf.ofe.d.1.7.8@gmail.com"">inf.ofe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed17.8@gmail.com"">i.n.fo.f.ed17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fed.17.8@gmail.com"">i.n.fo.fed.17.8@gmail.com</a>
<a href=""mailto:in.fofed17.8@gmail.com"">in.fofed17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d1.7.8@gmail.com"">i.nfofe.d1.7.8@gmail.com</a>
<a href=""mailto:in.fo.f.e.d17.8@gmail.com"">in.fo.f.e.d17.8@gmail.com</a>
<a href=""mailto:in.fofe.d1.78@gmail.com"">in.fofe.d1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.178@gmail.com"">i.nf.o.f.e.d.178@gmail.com</a>
<a href=""mailto:in.fof.e.d1.7.8@gmail.com"">in.fof.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.fed178@gmail.com"">i.nf.o.fed178@gmail.com</a>
<a href=""mailto:i.n.f.ofed1.7.8@gmail.com"">i.n.f.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.o.f.ed1.78@gmail.com"">in.f.o.f.ed1.78@gmail.com</a>
<a href=""mailto:infofe.d1.78@gmail.com"">infofe.d1.78@gmail.com</a>
<a href=""mailto:inf.ofe.d.17.8@gmail.com"">inf.ofe.d.17.8@gmail.com</a>
<a href=""mailto:vinhoxie@gmail.com"">vinhoxie@gmail.com</a>
<a href=""mailto:v.i.n.ho.x.i.e@gmail.com"">v.i.n.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.h.oxi.e@gmail.com"">vi.n.h.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nhox.ie@gmail.com"">v.i.nhox.ie@gmail.com</a>
<a href=""mailto:v.i.n.hox.i.e@gmail.com"">v.i.n.hox.i.e@gmail.com</a>
<a href=""mailto:vin.h.oxi.e@gmail.com"">vin.h.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nho.xi.e@gmail.com"">v.i.nho.xi.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.x.ie@gmail.com"">v.i.n.h.o.x.ie@gmail.com</a>
<a href=""mailto:vin.hox.ie@gmail.com"">vin.hox.ie@gmail.com</a>
<a href=""mailto:vi.nho.x.ie@gmail.com"">vi.nho.x.ie@gmail.com</a>
<a href=""mailto:v.i.nho.x.ie@gmail.com"">v.i.nho.x.ie@gmail.com</a>
<a href=""mailto:vin.ho.x.i.e@gmail.com"">vin.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.nh.o.xi.e@gmail.com"">vi.nh.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.h.oxie@gmail.com"">v.in.h.oxie@gmail.com</a>
<a href=""mailto:v.in.ho.x.i.e@gmail.com"">v.in.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.nhox.ie@gmail.com"">vi.nhox.ie@gmail.com</a>
<a href=""mailto:vinhox.ie@gmail.com"">vinhox.ie@gmail.com</a>
<a href=""mailto:v.in.h.o.x.i.e@gmail.com"">v.in.h.o.x.i.e@gmail.com</a>
<a href=""mailto:vin.h.ox.i.e@gmail.com"">vin.h.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.h.oxie@gmail.com"">vi.n.h.oxie@gmail.com</a>
<a href=""mailto:v.i.nho.x.i.e@gmail.com"">v.i.nho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.ho.x.ie@gmail.com"">v.i.n.ho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.hox.i.e@gmail.com"">vi.n.hox.i.e@gmail.com</a>
<a href=""mailto:v.i.nh.o.x.i.e@gmail.com"">v.i.nh.o.x.i.e@gmail.com</a>
<a href=""mailto:vin.h.o.xie@gmail.com"">vin.h.o.xie@gmail.com</a>
<a href=""mailto:v.inh.ox.i.e@gmail.com"">v.inh.ox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.x.i.e@gmail.com"">v.i.n.h.o.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.xie@gmail.com"">v.i.n.h.o.xie@gmail.com</a>
<a href=""mailto:v.inhox.i.e@gmail.com"">v.inhox.i.e@gmail.com</a>
<a href=""mailto:vinho.x.ie@gmail.com"">vinho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.h.o.xi.e@gmail.com"">vi.n.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.inho.x.i.e@gmail.com"">v.inho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.ox.ie@gmail.com"">v.i.n.h.ox.ie@gmail.com</a>
<a href=""mailto:v.inho.xie@gmail.com"">v.inho.xie@gmail.com</a>
<a href=""mailto:vinh.oxi.e@gmail.com"">vinh.oxi.e@gmail.com</a>
<a href=""mailto:vi.n.h.ox.i.e@gmail.com"">vi.n.h.ox.i.e@gmail.com</a>
<a href=""mailto:v.in.hoxi.e@gmail.com"">v.in.hoxi.e@gmail.com</a>
<a href=""mailto:vi.n.h.o.x.ie@gmail.com"">vi.n.h.o.x.ie@gmail.com</a>
<a href=""mailto:vi.nh.ox.ie@gmail.com"">vi.nh.ox.ie@gmail.com</a>
<a href=""mailto:v.in.hoxie@gmail.com"">v.in.hoxie@gmail.com</a>
<a href=""mailto:v.i.nh.o.xie@gmail.com"">v.i.nh.o.xie@gmail.com</a>
<a href=""mailto:vi.nh.oxie@gmail.com"">vi.nh.oxie@gmail.com</a>
<a href=""mailto:v.i.n.h.oxie@gmail.com"">v.i.n.h.oxie@gmail.com</a>
<a href=""mailto:vi.n.h.o.x.i.e@gmail.com"">vi.n.h.o.x.i.e@gmail.com</a>
<a href=""mailto:vinhoxie@gmail.com"">vinhoxie@gmail.com</a>
<a href=""mailto:v.inhoxi.e@gmail.com"">v.inhoxi.e@gmail.com</a>
<a href=""mailto:vi.nh.o.xie@gmail.com"">vi.nh.o.xie@gmail.com</a>
<a href=""mailto:vi.nh.ox.i.e@gmail.com"">vi.nh.ox.i.e@gmail.com</a>
<a href=""mailto:vi.nh.oxi.e@gmail.com"">vi.nh.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nhox.i.e@gmail.com"">v.i.nhox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.hox.ie@gmail.com"">v.i.n.hox.ie@gmail.com</a>
<a href=""mailto:vinhoxi.e@gmail.com"">vinhoxi.e@gmail.com</a>
<a href=""mailto:vi.nhox.i.e@gmail.com"">vi.nhox.i.e@gmail.com</a>
<a href=""mailto:vinho.x.i.e@gmail.com"">vinho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.nhoxie@gmail.com"">v.i.nhoxie@gmail.com</a>
<a href=""mailto:v.inhoxie@gmail.com"">v.inhoxie@gmail.com</a>
<a href=""mailto:v.in.h.ox.ie@gmail.com"">v.in.h.ox.ie@gmail.com</a>
<a href=""mailto:vi.nh.o.x.i.e@gmail.com"">vi.nh.o.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.ho.xie@gmail.com"">v.i.n.ho.xie@gmail.com</a>
<a href=""mailto:vin.hox.i.e@gmail.com"">vin.hox.i.e@gmail.com</a>
<a href=""mailto:vinh.o.xie@gmail.com"">vinh.o.xie@gmail.com</a>
<a href=""mailto:vin.h.oxie@gmail.com"">vin.h.oxie@gmail.com</a>
<a href=""mailto:v.i.nh.o.x.ie@gmail.com"">v.i.nh.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.h.ox.i.e@gmail.com"">v.i.n.h.ox.i.e@gmail.com</a>
<a href=""mailto:v.i.nh.ox.i.e@gmail.com"">v.i.nh.ox.i.e@gmail.com</a>
<a href=""mailto:vin.ho.x.ie@gmail.com"">vin.ho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.ho.xi.e@gmail.com"">vi.n.ho.xi.e@gmail.com</a>
<a href=""mailto:v.in.hox.i.e@gmail.com"">v.in.hox.i.e@gmail.com</a>
<a href=""mailto:vi.nhoxi.e@gmail.com"">vi.nhoxi.e@gmail.com</a>
<a href=""mailto:v.inh.o.x.i.e@gmail.com"">v.inh.o.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.ho.x.ie@gmail.com"">vi.n.ho.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.h.o.xi.e@gmail.com"">v.i.n.h.o.xi.e@gmail.com</a>
<a href=""mailto:vin.hoxie@gmail.com"">vin.hoxie@gmail.com</a>
<a href=""mailto:v.inh.o.xie@gmail.com"">v.inh.o.xie@gmail.com</a>
<a href=""mailto:v.in.h.oxi.e@gmail.com"">v.in.h.oxi.e@gmail.com</a>
<a href=""mailto:vinh.o.x.i.e@gmail.com"">vinh.o.x.i.e@gmail.com</a>
<a href=""mailto:v.inh.o.xi.e@gmail.com"">v.inh.o.xi.e@gmail.com</a>
<a href=""mailto:vi.nhoxie@gmail.com"">vi.nhoxie@gmail.com</a>
<a href=""mailto:v.in.h.o.xi.e@gmail.com"">v.in.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.ho.xie@gmail.com"">v.in.ho.xie@gmail.com</a>
<a href=""mailto:v.inh.oxie@gmail.com"">v.inh.oxie@gmail.com</a>
<a href=""mailto:v.in.h.o.x.ie@gmail.com"">v.in.h.o.x.ie@gmail.com</a>
<a href=""mailto:v.in.h.ox.i.e@gmail.com"">v.in.h.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.hoxi.e@gmail.com"">vi.n.hoxi.e@gmail.com</a>
<a href=""mailto:v.in.ho.xi.e@gmail.com"">v.in.ho.xi.e@gmail.com</a>
<a href=""mailto:vinh.oxie@gmail.com"">vinh.oxie@gmail.com</a>
<a href=""mailto:vin.h.ox.ie@gmail.com"">vin.h.ox.ie@gmail.com</a>
<a href=""mailto:v.i.nhoxi.e@gmail.com"">v.i.nhoxi.e@gmail.com</a>
<a href=""mailto:vin.h.o.x.ie@gmail.com"">vin.h.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.nh.oxie@gmail.com"">v.i.nh.oxie@gmail.com</a>
<a href=""mailto:vinho.xie@gmail.com"">vinho.xie@gmail.com</a>
<a href=""mailto:v.in.ho.x.ie@gmail.com"">v.in.ho.x.ie@gmail.com</a>
<a href=""mailto:vinh.ox.ie@gmail.com"">vinh.ox.ie@gmail.com</a>
<a href=""mailto:v.inhox.ie@gmail.com"">v.inhox.ie@gmail.com</a>
<a href=""mailto:vin.hoxi.e@gmail.com"">vin.hoxi.e@gmail.com</a>
<a href=""mailto:v.i.nho.xie@gmail.com"">v.i.nho.xie@gmail.com</a>
<a href=""mailto:v.i.n.hoxi.e@gmail.com"">v.i.n.hoxi.e@gmail.com</a>
<a href=""mailto:vinhox.i.e@gmail.com"">vinhox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.oxi.e@gmail.com"">v.i.n.h.oxi.e@gmail.com</a>
<a href=""mailto:vinho.xi.e@gmail.com"">vinho.xi.e@gmail.com</a>
<a href=""mailto:vi.n.ho.xie@gmail.com"">vi.n.ho.xie@gmail.com</a>
<a href=""mailto:vi.nho.x.i.e@gmail.com"">vi.nho.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.hoxie@gmail.com"">vi.n.hoxie@gmail.com</a>
<a href=""mailto:v.inh.ox.ie@gmail.com"">v.inh.ox.ie@gmail.com</a>
<a href=""mailto:vi.nh.o.x.ie@gmail.com"">vi.nh.o.x.ie@gmail.com</a>
<a href=""mailto:vi.nho.xie@gmail.com"">vi.nho.xie@gmail.com</a>
<a href=""mailto:vi.n.hox.ie@gmail.com"">vi.n.hox.ie@gmail.com</a>
<a href=""mailto:vinh.o.xi.e@gmail.com"">vinh.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.hox.ie@gmail.com"">v.in.hox.ie@gmail.com</a>
<a href=""mailto:v.inho.xi.e@gmail.com"">v.inho.xi.e@gmail.com</a>
<a href=""mailto:vi.n.h.ox.ie@gmail.com"">vi.n.h.ox.ie@gmail.com</a>
<a href=""mailto:vin.h.o.xi.e@gmail.com"">vin.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.i.nh.o.xi.e@gmail.com"">v.i.nh.o.xi.e@gmail.com</a>
<a href=""mailto:v.i.nh.ox.ie@gmail.com"">v.i.nh.ox.ie@gmail.com</a>
<a href=""mailto:vin.ho.xie@gmail.com"">vin.ho.xie@gmail.com</a>
<a href=""mailto:vi.n.h.o.xie@gmail.com"">vi.n.h.o.xie@gmail.com</a>
<a href=""mailto:v.inho.x.ie@gmail.com"">v.inho.x.ie@gmail.com</a>
<a href=""mailto:vi.nho.xi.e@gmail.com"">vi.nho.xi.e@gmail.com</a>
<a href=""mailto:v.inh.oxi.e@gmail.com"">v.inh.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nh.oxi.e@gmail.com"">v.i.nh.oxi.e@gmail.com</a>
<a href=""mailto:vinh.o.x.ie@gmail.com"">vinh.o.x.ie@gmail.com</a>
<a href=""mailto:v.inh.o.x.ie@gmail.com"">v.inh.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.ho.xi.e@gmail.com"">v.i.n.ho.xi.e@gmail.com</a>
<a href=""mailto:vinh.ox.i.e@gmail.com"">vinh.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.ho.x.i.e@gmail.com"">vi.n.ho.x.i.e@gmail.com</a>
<a href=""mailto:v.in.h.o.xie@gmail.com"">v.in.h.o.xie@gmail.com</a>
<a href=""mailto:vin.ho.xi.e@gmail.com"">vin.ho.xi.e@gmail.com</a>
<a href=""mailto:v.i.n.hoxie@gmail.com"">v.i.n.hoxie@gmail.com</a>
<a href=""mailto:vin.h.o.x.i.e@gmail.com"">vin.h.o.x.i.e@gmail.com</a>"
qNEx2jLH,Zombie Waves (NOT FINISHED),memenorio,Python,Thursday 2nd of November 2023 06:42:54 PM CDT,"import pygame
from pygame.locals import *
from os.path import join
import random as r
import math

pygame.init()

# Variabili costanti
WIDTH = 1200
HEIGHT = 900
PLAYER_WIDTH = 40
PLAYER_HEIGHT = 80
TILE_WIDTH = 70
COIN_WIDTH = 20
GUN_WIDTH = 30
SHOOT_WIDTH = 10
SHOOT_SPEED = 25
ZOMBIE_SPEED = 3
PLAYER_SPEED = 5
MINIMUM_DISTANCE = 300

# Setup
screen = pygame.display.set_mode((WIDTH, HEIGHT))
screen_rect = screen.get_rect()
pygame.display.set_caption(""Zombie Waves"")

bgcolor = (0, 0, 0)
screen.fill(bgcolor)

tile = pygame.image.load(join(""Assets"", ""tile.png"")).convert()
tile = pygame.transform.scale(tile, (TILE_WIDTH, TILE_WIDTH))

bg = screen.copy()

# Creazione sfondo
for i in range(0, WIDTH, TILE_WIDTH):
        for j in range(0, HEIGHT, TILE_WIDTH):
            bg.blit(tile, (i, j))

# Creazione giocatore, pistola e moneta
player_image = pygame.image.load(join(""Assets"", ""player.png"")).convert()
player_image = pygame.transform.scale(player_image, (PLAYER_WIDTH, PLAYER_HEIGHT))
player = player_image.copy()

gun_image = pygame.image.load(join(""Assets"", ""gun.png"")).convert_alpha()
gun_image = pygame.transform.scale(gun_image, (GUN_WIDTH, GUN_WIDTH))
gun = gun_image.copy()
gun_rect = gun.get_rect()
looks_right = True

player_rect = player.get_rect()
player_rect.center = screen_rect.center

xspeed = 0
yspeed = 0

coin = pygame.Surface((COIN_WIDTH, COIN_WIDTH))
coin.fill(""yellow"")
pygame.draw.line(coin, ""orange"", (COIN_WIDTH/2, COIN_WIDTH/4), (COIN_WIDTH/2, COIN_WIDTH*(3/4)), 9)

# Controllo che la moneta non si generi a contatto col giocatore
while True:
    if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
        coin_rect = coin.get_rect()
        coin_rect.topleft = coordinates
        break
    
shoots = []
zombies = []

clock = pygame.time.Clock()
run = True

milliseconds = 2000
pygame.time.set_timer(USEREVENT, milliseconds)

while run:
    # Movimento del giocatore, che viene impedito se va contro il bordo
    player_rect.topleft = (player_rect.topleft[0] + (
        xspeed if screen_rect.left < player_rect.left < player_rect.right < screen_rect.right else (
            1 if screen_rect.left >= player_rect.left else -1)), player_rect.topleft[1] + (
        yspeed if screen_rect.top < player_rect.top < player_rect.bottom < screen_rect.bottom else (
            1 if screen_rect.top >= player_rect.top else -1)))

    # Rotazione della pistola per seguire il cursore
    pos = pygame.mouse.get_pos()
    delta_x = gun_rect.center[0] - pos[0]
    delta_y = gun_rect.center[1] - pos[1]
    angle = ((math.degrees(math.atan2(delta_y, delta_x)) + 180)*-1)
    gun = pygame.transform.rotate(gun_image, angle) 
    gun_rect.midleft = player_rect.midright

    # Aggiornamento posizione
    screen.blit(bg, (0, 0))
    screen.blit(player, player_rect)
    screen.blit(gun, gun_rect)
    screen.blit(coin, coin_rect)

    # Controllo collisione con la moneta. In caso positivo, cambia la posizione della moneta
    if player_rect.colliderect(coin_rect):
        while True:
            if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
                coin_rect = coin.get_rect()
                coin_rect.topleft = coordinates
                break
            
    for event in pygame.event.get():
        if event.type == QUIT: # Esce dal gioco
            run = False
        elif event.type == KEYDOWN or event.type == KEYUP: # Tasti per il movimento
            if event.key == K_w:
                yspeed -= (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_s:
                yspeed += (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_a:
                if looks_right:
                    player = pygame.transform.flip(player, True, False)
                    looks_right = False
                xspeed -= (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_d:
                if not looks_right:
                    player = pygame.transform.flip(player, True, False)
                    looks_right = True               
                xspeed += (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
        elif event.type == MOUSEBUTTONDOWN:
            if event.button == BUTTON_LEFT: # Creazione del proiettile
                shoot = pygame.Surface((SHOOT_WIDTH, SHOOT_WIDTH))
                shoot.fill(""red"")
                shoot_rect = shoot.get_rect()
                shoot_rect.center = gun_rect.center
                shoots.append((shoot, shoot_rect, angle))
        elif event.type == USEREVENT: # Creazione dello zombie ogni breve arco di tempo
            pygame.time.set_timer(USEREVENT, 0)
            if milliseconds >= 520:
                milliseconds -= 20
            pygame.time.set_timer(USEREVENT, milliseconds)
            zombie = pygame.Surface((PLAYER_WIDTH, PLAYER_WIDTH))
            zombie.fill(""green"")
            zombie_rect = zombie.get_rect()
            # Controllo che lo zombie non si generi troppo vicino al giocatore
            while pygame.math.Vector2(player_rect.center[0], player_rect.center[1]).distance_to((coordinates := (r.randint(0, WIDTH - PLAYER_WIDTH), r.randint(0, HEIGHT - PLAYER_HEIGHT)))) < MINIMUM_DISTANCE:
                coordinates = r.randint(0, WIDTH - PLAYER_WIDTH), r.randint(0, HEIGHT - PLAYER_HEIGHT)
            zombie_rect.center = coordinates
            zombies.append((zombie, zombie_rect))

    # Tutti i controlli sui proiettili: collisioni, movimento
    if len(shoots) > 0:
        for shoot, shoot_rect, angle in shoots:
            angle_radians = math.radians(angle)
            direction = pygame.Vector2(math.cos(angle_radians), math.sin(angle_radians))
            direction.normalize_ip()

            shoot_rect.topleft = (shoot_rect.topleft[0] + direction.x * SHOOT_SPEED, shoot_rect.topleft[1] + (direction.y*-1) * SHOOT_SPEED)

            screen.blit(shoot, shoot_rect)

            if not screen.get_rect().colliderect(shoot_rect):
                shoots.remove((shoot, shoot_rect, angle))

    # Tutti i controlli sulli zombie: Aggiornamento direzione e movimento, collisione col giocatore, collisione col proiettile
    if len(zombies) > 0:
        for zombie, zombie_rect in zombies:
            pos = player_rect.center
            delta_x = zombie_rect.center[0] - pos[0]
            delta_y = zombie_rect.center[1] - pos[1]
            angle = ((math.degrees(math.atan2(delta_y, delta_x)) + 180)*-1)
            angle_radians = math.radians(angle)
            direction = pygame.Vector2(math.cos(angle_radians), math.sin(angle_radians))
            direction.normalize_ip()

            zombie_rect.topleft = (zombie_rect.topleft[0] + direction.x * ZOMBIE_SPEED, zombie_rect.topleft[1] + (direction.y*-1) * ZOMBIE_SPEED)

            screen.blit(zombie, zombie_rect)

            # Collisione col proiettile
            for shoot, shoot_rect, angle in shoots:
                if shoot_rect.colliderect(zombie_rect):
                    zombies.remove((zombie, zombie_rect))
                    shoots.remove((shoot, shoot_rect, angle))

            # Collisione col giocatore, reset di tutto
            if zombie_rect.colliderect(player_rect):
                pygame.time.set_timer(USEREVENT, 0)
                pygame.time.wait(2000)
                milliseconds = 2000
                pygame.time.set_timer(USEREVENT, milliseconds)
                zombies.clear()
                shoots.clear()
                player_rect.center = screen_rect.center
                while True:
                    if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
                        coin_rect = coin.get_rect()
                        coin_rect.topleft = coordinates
                        break

    

    pygame.display.flip()
    clock.tick(60)
    
pygame.quit()
"
ZFnTw4Bb,Koikatsu List Scraper V1.21,Skelun,JavaScript,Thursday 2nd of November 2023 06:39:53 PM CDT,"/* --------------------------------------------------------------------
-- Transforms embedded links into actual Hyperlinks
----------------------------------------------------------------------- */

function createHyperlink() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

  // Get the selected range
  var range = sheet.getActiveRange();
  var richTextValues = range.getRichTextValues();

  for (var i = 0; i < richTextValues.length; i++) {
    for (var j = 0; j < richTextValues[0].length; j++) {
      var textValue = richTextValues[i][j].getText();
      var link = richTextValues[i][j].getLinkUrl();

      if (link) {
        // Creates a hyperlink formula
        var formula = '=HYPERLINK(""' + link + '"", ""Here"")';

        // Set the formula in the cell
        sheet.getRange(range.getRow() + i, range.getColumn() + j).setFormula(formula);
      }
    }
  }
}

/* --------------------------------------------------------------------
-- MOON RATING
-----------------------------------------------------------------------
-- I'm using this because it was the easier way
-- to simulate rating stars.
----------------------------------------------------------------------- */

function moonRating(number) {
  // Is it a number?
  if (!isNaN(number)) {
    var votes;

    // Is it an interger?
    if (number % 1 === 0) {
      votes=""🌕"".repeat(number);
      votes+=""🌑"".repeat(5-number);
    
    // Or is it a float?
    } else {
      let n = Math.floor(number);
      votes=""🌕"".repeat(n);
      votes+=""🌗"";
      votes+=""🌑"".repeat(4-n);
    }
    return votes;
  } else {
    // If no votes
    return ""------""
  }
}
  
/* --------------------------------------------------------------------
-- Scraping data using Cheerio library
-- (https://github.com/tani/cheeriogs)
-- Script ID: 1ReeQ6WO8kKNxoaA_O0XEQ589cIrRvEBA9qcWpNqdOP17i47u6N9M5Xh0
----------------------------------------------------------------------- */

// Cheerio method to scrape
function getContent(url) {
    return UrlFetchApp.fetch(url).getContentText()
}
  
/* --------------------------------------------------------------------
-- Actual scrape function
----------------------------------------------------------------------- */

function scrapeData(force) {

  // Selects the active sheet
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

  // Get selected cells
  var selectedRange = sheet.getActiveRange();

  // Get the values from the selected cells
  var selectedValues = selectedRange.getRichTextValues(); 

  // Iterate through cells
  for (var i = 0; i < selectedValues.length; i++) {

    // It assumes the URLs are in the first column of the selected column
    var urlFromLink = selectedValues[i][0].getLinkUrl();
    var urlFromCellValue = selectedValues[i][0].getText(); // Get text value from the cell

    // Check if there is a link URL, and use it if available; otherwise, use the URL from the cell value
    var url = urlFromLink ? urlFromLink : urlFromCellValue;

    // If the value is not empty...
    if (url && isValidURL(url)) {

      // Grabs the HTML data
      var content = getContent(url);
      
      // Parses the HTML data
      var $ = Cheerio.load(content);

      /* --------------------------------------------------------------------
      -- [TITLE]
      -------------------------------------------------------------------- */
      var threadTitle = $('h1.p-title-value');

      var rawTitle = threadTitle.contents().filter(function() {
        return this.type === 'text';
      }).text();

      var titleREGEX = /(.+?)\s*\[(.+?)\](?:\s*\[(.+?)\])?/.exec(rawTitle);

      // We should check if titleREGEX is not null before accessing its indices
      if (titleREGEX) {
        var title = titleREGEX[1];
        var version = titleREGEX[2];
      } else {
        var title = ""Title Problem ⚠️"";
        var version = ""Version Problem ⚠️"";        
      }

      var devBackup = titleREGEX[3] ? titleREGEX[3] + "" ❓"" : ""Not found ⚠️"";

      /* --------------------------------------------------------------------
      -- [STATUS] (ACTIVE - ABANDONED - ONHOLD)
      -------------------------------------------------------------------- */
      // Default status
      var status = 'Active';

      // Search for ""Abandoned"" or ""Onhold""
      threadTitle.find('span').each(function() {
        var spanText = $(this).text();
        if (['Completed','Abandoned','Onhold'].includes(spanText)) {
          status = spanText;
          return false;
        }
      });

      /* --------------------------------------------------------------------
      -- [ENGINE]
      ----------------------------------------------------------------------- */
      // If there's no engine info, it returns ""unknown""
      var engine = '⚠️ Unknown';

      // Checks if there's one of these strings
      threadTitle.find('span').each(function() {
        var spanText = $(this).text();
        if (['ADRIFT','Flash','Java','Others','QSP','RAGS','RPGM',""Ren'Py"",'Tads','Unity','Unreal Engine','WebGL','Wolf RPG','HTML'].includes(spanText)) {
          engine = spanText;
          return false; // Stop searching once a match is found
        }
      });

      /* --------------------------------------------------------------------
      -- [TAGS]
      ----------------------------------------------------------------------- */
      // Selects the element containing the tags
      var tagList = $('span.js-tagList');

      // Grabs the tags and separate them by comma
      var tags = tagList.find('a.tagItem').map(function() {
        return $(this).text();
      }).get().join(', ');

      /* --------------------------------------------------------------------
      -- GAMEPLAY
      ----------------------------------------------------------------------- */
      var gameplay;

      // Assumes the [Gameplay] type by using the tags
      switch (true) {
        case tags.includes('sandbox'):
          gameplay = 'Sandbox';
          break;
        case tags.includes('turn based combat'):
          gameplay = 'TBC';
          break;
        case tags.includes('management'):
          gameplay = 'Management';
          break;
        case tags.includes('simulator'):
          gameplay = 'Simulator';
          break;
        case tags.includes('rpg'):
          gameplay = 'RPG';
          break;
        default:
          gameplay = 'Visual Novel';
      }
      
      /* --------------------------------------------------------------------
      -- - Thread [Start] Date
      ----------------------------------------------------------------------- */

      // Selects the first 'article' element
      var firstArticle = $('article').first();

      // Find the 'header.message-attribution' element
      var messageAttributionHeader = firstArticle.find('header.message-attribution');

      // Find the 'time' element with class 'u-dt'
      var timeElement = messageAttributionHeader.find('time.u-dt');

      // Check if the time element exists
      if (timeElement.length > 0) {
          // Extract the 'datetime' attribute
          var start = timeElement.attr('datetime');
          start = start.split('T')[0]; // Get the date part only

      } else {
          Logger.log(""<time> element not found."");
      }

      /* --------------------------------------------------------------------
      -- EXTRA INFORMATION
      -----------------------------------------------------------------------
      -- - Thread [Updated] Date
      -- - [Release] Date
      -- - [Dev] name
      -- - [Censored]
      ----------------------------------------------------------------------- */
      // Selects the first message body (which is the one containing the game info)
      var articleText = $('article.message-body').first().text();

      // Uses regular expressions to match and capture the information
      // When it was updated
      var updatedREGEX = /Thread Updated: ([^\s]+)/.exec(articleText);
      // When it was released
      var releaseREGEX = /Release Date: ([^\s]+)/.exec(articleText);
      // Who is the dev
      var devREGEX = /Developer: ([^\s]+)/.exec(articleText);
      // It is censored?
      var censoredREGEX = /Censored: (.+?)(?=\n|\r|\r\n)/.exec(articleText);

      // Extract the captured values or provide default values if not found
      var updated = updatedREGEX ? updatedREGEX[1] : ""Not found ⚠️"";
      var release = releaseREGEX ? releaseREGEX[1] : ""Not found ⚠️"";
      
      //Converts to string due to Google Sheets altering the type
      updated = updated.toString()
      release = release.toString()

      var dev = devREGEX ? devREGEX[1] : devBackup;
      var censored = censoredREGEX ? censoredREGEX[1] : ""Not found ⚠️"";

      /* --------------------------------------------------------------------
      -- [RATING] & [VOTES]
      ----------------------------------------------------------------------- */
      // Grabs the JSON generated by F95 forum
      var jsonInfo = $('script[type=""application/ld+json""]').last();
      
      // Uses regular expression to match and caputre the information
      var ratingREGEX = /""ratingValue"": ""(\d+(?:\.\d+)?)""/.exec(jsonInfo);
      var votesREGEX = /""ratingCount"": ""(\d+)""/.exec(jsonInfo);

      // Extract the captured values or provide default values if not found
      var rating = ratingREGEX ? ratingREGEX[1] : ""No rating yet"";
      var votes = votesREGEX ? votesREGEX[1] : ""0"";

      /* --------------------------------------------------------------------
      -- LAST UPDATE CHECK
      -- --------------------------------------------------------------------
      -- It will ignore the game if it was updated less than 30 days ago
      ----------------------------------------------------------------------- */

      // Gets today's date
      var today = new Date();

      // Parses the update & release info
      var updatedDate = new Date(updated);
      var releaseDate = new Date(release);
      
      // Subtracts both dates to get days gap
      var daysSinceLastUpdate = Math.floor((today - updatedDate) / (1000 * 60 * 60 * 24));
      var daysSinceRelease = Math.floor((today - releaseDate) / (1000 * 60 * 60 * 24));

      if (force === true || daysSinceRelease < 30 || daysSinceLastUpdate > 30) {

          /* --------------------------------------------------------------------
          -- OUTPUTS THE VALUE INTO DIFFERENT CELLS
          ----------------------------------------------------------------------- */

          // Write the scraped data to the same row
          var outputRow = selectedRange.getRow() + i;

          // Write the scraped data to adjacent columns
          var outputColumn = selectedRange.getColumn() + 1;

          // All values that will be written
          var newValues = [
              rawTitle,
              title,
              version,
              status,
              engine,
              gameplay,
              tags,
              moonRating(rating),
              votes,
              updated,
              release,
              start,
              dev,
              censored
          ];

          // Read existing values in the row
          var rangeToWrite = sheet.getRange(outputRow, outputColumn, 1, newValues.length);
          var existingValues = rangeToWrite.getValues()[0];

          // Compare existing values with new values
          for (var j = 0; j < existingValues.length; j++) {

            // If the new value is empty, keep the existing value
            if (newValues[j] === """" || newValues[j] == null) {
              newValues[j] = existingValues[j];
            }
          }

          // Set only the new non-empty values
          rangeToWrite.setValues([newValues]);
      }

    }

  }

}

/* --------------------------------------------------------------------
-- IGNORE DATE RESTRICTION
----------------------------------------------------------------------- */

function forceScrapeData() {
  scrapeData(true);
}

/* --------------------------------------------------------------------
-- CHECK IF THE STRING IS A VALID URL
----------------------------------------------------------------------- */
function isValidURL(str) {
  var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
  '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
  '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR an IP Address
  '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
  '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
  '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
  return pattern.test(str);
}

/* --------------------------------------------------------------------
-- CREATES AN EXTRA MENU OPTION
----------------------------------------------------------------------- */
  
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('Extra Functions')
      .addItem('Scrape Data', 'scrapeData')
      .addItem('Force Scrape', 'forceScrapeData')
      .addItem('Create Hyperlink','createHyperlink')
      .addToUi();
}"
4JC9mkaU,Untitled,Rofyda_Elghadban1,C++,Thursday 2nd of November 2023 06:39:52 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 //#define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  int n,counter=0;
  cin>>n;
  vector<int>aa,bb,a1,b1;
  while(n--){
    int a,b;
    cin>>a>>b;
    aa.push_back(a);
    bb.push_back(b);
  }
  map<int,int>mpa,mpb;
  for(int i=0;i<aa.size();i++){
    mpa[aa[i]]=i;
    mpb[bb[i]]=i;
  }
  for(auto i:mpa){
    a1.push_back(i.first);
  }
  for(auto i:mpb){
    b1.push_back(i.first);
  }
  if(mpa[a1[aa.size()-1]]!=mpb[b1[bb.size()-1]]||mpa[a1[0]]!=mpb[b1[0]]){
    cout<<""Happy Alex""<<""\n"";
  }else{
    cout<<""Poor Alex""<<""\n"";
  }
 }

 int main(){
  Rofyda_Elghadban();
  // int t;
  // cin>>t;
  // while(t--){
  //   solve();
  // }
  solve();
  return 0;
 }

"
zrFPBrnd,styles.css,Mangus875,CSS,Thursday 2nd of November 2023 05:24:41 PM CDT,"body {
	/*
	display: flex;
	align-items: center;
	align-content: flex-start;
	flex-wrap: wrap;
	*/
	overflow: hidden;
}

/*
div.metronome {
	transition: 0.5;
}
*/

div.metronome[met-display=bounce] {
	background-color: #e00000;
	
	position: absolute;
	transform: rotate(50deg) translate(0%, -50%);
	left: 50%;
	top: 70%;
	height: 40%;
	width: 2vw;
	
	border-radius: 100% 100% 0vw 0vw;
}"
geCsDjEF,index.html,Mangus875,HTML,Thursday 2nd of November 2023 05:24:03 PM CDT,"<!DOCTYPE html>

<html>
	<head>
		<title>Metronome</title>
		<link rel=""icon"" href=""icon.bmp"">
		
		<link rel=""stylesheet"" href=""styles.css""/>
		<script src='script.js'></script>
	</head>
	
	<body>
		<div
			class='metronome'
			id='met1'
			
			
			met-display =				'bounce'
			met-program =				'{}'
			
			met-bpm =						'168'
			met-meter =					'4'
			met-subcounts =			'1'
			
			met-accent =				'true'
			met-playsound =			'false'
			met-sound1 =				'sounds/snap.wav'
			met-sound2 =				'sounds/clap.wav'
			met-sound3 =				'sounds/tick.wav'
			met-sound-preset =	'0'
		><audio
			preload='auto'
			src='sounds/click.wav'
		></audio></div>
	</body>
</html>

<!--
	Default			Attribute					Description

	'bounce'		met-display				specifies how to display the metronome (bounce/blink/swing/none)
	'{}'				met-program				JSON program of instructions for meter, tempo, subdivision, etc. changes
	'100'				met-bpm						metronome bpm (number)
	'4'					et-meter					time signature (how many counts before an accented note is played)
	'1'					met-subcounts			beat subdivision (how many clicks per beat)
	'true'			met-accent				play accented not at beginning of measure (boolean)
	'true'			met-playsound			play metronome sound (boolean)
	''					met-sound1				normal click sound
	''					met-sound2				accented click sound
	''					met-sound3				subdivision click sound
	'Doctor'		met-preset				preset sounds for met-sound1-3 (overridden by met-sound1-3)
-->"
YLJ93Vy0,JSON for ai,amitdutta121,JSON,Thursday 2nd of November 2023 05:05:40 PM CDT,"{
	
	""back"":[
		{
			""productDescription"":""Adult Haloween"",
			""mainProductDisclaimer"":"""",
			""subProductDisclaimer"":"""",
			""logoType"":""FSC/PEFC"",
			""dateOfPrint"":""sdlfjnsdljkfhbsdjkhfb"",
			""internalJobNumber"":""kdsjnfjhabsdfjkhbdf"" // optional
		}
	]
}




{
	""front"":[
			{
				""productBenifit"":""dsaklfjhbasdjkhfbasdhjkfb"",
				""sellingPrice"":{
					""cz"":""xxxx"",
					""sk"":""xxx"",
					""hu"":""xxxx""
				},
				
			}
	],
	""back"":[
		{
			""sizeRangeType"":""ZEROTOFOUR/fOURPLUS/NEWBORN"",
			""sizeLowerRange"":13,
			""sizeUpperRange"":12,
			""productDescriptions"":[
				""en"":""sdkjfsd"",
				""cz"":""kdsjbnfkjsdbf"",
				""sk"":""klsdjnfkljsdnf"",
				""hu"":""sdkjfnsdjknf""
			],
			""logoType"":""FSC/PEFC"",
			""barcodeNumber"":""278635126783512"",
			""madeInText"":""Made in bangadesh/ Slovak translation/ Hu transaltion"",
			""dateOfPrint"":""kdsfjbngjksdfhbghjksdfbg"",
			""eqosNUmber"":""xxxxxxxx"",
			""longDescription"":""sdkjhfbjksdhbfbsdf"",
			""sellingPrice"":{
					""cz"":""xxxx"",
					""sk"":""xxx"",
					""hu"":""xxxx""
				},
		}
	]
}"
RnuXmHc5,Zad1 Kursova Rabota,borko_panterata,C++,Thursday 2nd of November 2023 04:53:28 PM CDT,"#include <iostream>

int sumaOtr(int array[])
{
    int suma = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] < 0) suma += array[i];
    } 
    return suma;
}

double avgPolChisla(int min, int max, int array[])
{
    double sumaPol = 0;
    double polChislaCounter = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] >= min && array[i] <= max)
        {
            sumaPol += array[i];
            polChislaCounter++;
        }
    }
    return sumaPol / polChislaCounter;
}

int nullCount(int array[])
{
    int brojNuli = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] == 0) brojNuli++;
    }
    return brojNuli;
}

int maxPolChislo(int array[])
{
    int maxNum = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] > maxNum)
        {
            maxNum = array[i];
        }
    }
    return maxNum;
}
/*
int arrayCut(int array[], int cutIndex)
{
    int array2[cutIndex];
    for(int i = int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
}
*/

int main()
{
    int arraySize;
    int masiv[25];
    int min;
    int max;
    char functionChoice;
    while (true)
    {
        std::cout << ""Enter size of the array: "";
        std::cin >> arraySize;
        if (arraySize > 25 || arraySize <= 0) std::cout << ""The count of the array elements must be within the range [1-25]!!"";
        else break;
    }

    for (int i = 0; i < 25; i++)
    {
        if (i < arraySize) std::cin >> masiv[i];
        else masiv[i] = 0;
    }

    while (true) 
    {
        std::cout << ""Please enter one of the selcted options:"" << std::endl;
        std::cout << ""Enter '1' for getting the sum of the negative numbers."" << std::endl;
        std::cout << ""Enter '2' for getting the average of the array elements within [min - max]."" << std::endl;
        std::cout << ""Enter '3' for getting the count of the array elements equal to null."" << std::endl;
        std::cout << ""Enter '4' for getting the highest positive number and it's place in the array."" << std::endl;
        std::cout << ""Enter 'x' for exiting the program."" << std:: endl;
        std::cin >> functionChoice;

        switch (functionChoice)
        {
            case '1':
                sumaOtr(masiv);
                break;
            case '2':
                std::cout << ""Please enter min value: "";
                std::cin >> min; // PROVERI VALIDNOST POLOJITELNO!!!
                std::cout << ""Please enter max value: "";
                std::cin >> max; // PROVERI VALIDNOST POLOJITELNO!!!
                avgPolChisla(min, max, masiv);
                break;
            case '3':
                std:: cout << ""The count of the elements equal to 0 is: "" << nullCount(masiv);
                break;
            case '4':
                std::cout << ""The highest positive number is: "" << maxPolChislo(masiv); //MQSTO V MASIVA
                break;
            case 'x':
                std::cout << ""Slynchev i usmihnat den uvajaemi gospodine/uvajaema gospojo :)"";
                return 0;
            default: 
                std::cout << ""Please enter a valid symbol to access one of the listed options!"";
                break;
        }
    }
    
    return 0;
}"
tuZVe3df,Untitled,borko_panterata,C++,Thursday 2nd of November 2023 04:52:53 PM CDT,"#include <iostream>


int main()
{
    while(true)
    {
        int x;
        int sumaOtr = 0;
        int min = 1;
        int max = 6;
        int sumaInterval = 0;
        int counterInterval = 0;
        double avgInterval = 0;
        int nuliCounter = 0;
        int maxNumber;
        int maxNumberPosition = 1;
        std:: cout << ""Please enter number count:"";
        std:: cin >> x;
        if(x > 25) std:: cout << ""Please ENTER LESS THAN 25 NUMBERS"";
        else
        {
            int masiv[x];
            for(int i = 0; i < x; i++)
            {
                std:: cin >> masiv[i];
                if(i == 0) maxNumber = masiv[i];
                else if(masiv[i] > maxNumber){
                    maxNumber = masiv[i];
                    maxNumberPosition = i + 1;
                }
                if(masiv[i] < 0) sumaOtr += masiv[i];
                else if(masiv[i] == 0) nuliCounter++;
                else if(masiv[i] >= min && masiv[i] <= max){
                    sumaInterval += masiv[i];
                    counterInterval++;
                }
            } 
            avgInterval = (double)sumaInterval / counterInterval;
            std:: cout << ""Suma ot otricatelni chisla: "" << sumaOtr << ""\n"";
            std:: cout << ""Sredno aritmetichno ot polojitelni chisla v interval ["" << min << "" "" << max << ""]: "" << avgInterval  << ""\n"";
            std:: cout << ""Broj nuli v masiva: "" << nuliCounter << ""\n"";
            std:: cout << ""Naj-golqmo chislo v masiva i negoviq nomer: "" << maxNumber << "", "" << maxNumberPosition << "" mqsto"" << ""\n"";
            std:: cout << ""Vyvedeni chisla v masiva: "";
            for(int i = 0; i < x; i++) std:: cout << masiv[i] << "" "";
            break;
            int n;
        }
        
    }

    return 0;
}"
H9nQxv3t,Untitled,cyberjab,C++,Thursday 2nd of November 2023 04:38:35 PM CDT,"Старт программы
--------------------------------------------------------------------------------------------------
//#pragma GCC optimize(""03"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")
#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

using namespace std;
using ll = long long;
using db = double;
using ldb = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vint = vector<int>;
using vll = vector<ll>;
#define all(x) x.begin(), x.end()
#define size(x) int(x.size())
#define rep(x) for(int rep_i = 0; rep_i < x; ++rep_i)
#define forp(s, i, f) for(int i = s; i < f; ++i)
#define form(s, i, f) for(int i = s; i > f; --i)

const int MOD = 1e9 + 7;
const int MOD2 = 998244353;
const int INF = 2e9 + 7;
const ll LINF = 1e18 + 7;
const double EPS = 1e-9;
const long double PI = acosl(-1.0);

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
}
---------------------------------------------------------------------------------------------------
sqrt
---------------------------------------------------------------------------------------------------
#include <math.h>

double sqrt(double x) {
    if (x <= 0)
        return 0;       // if negative number throw an exception?
    int exp = 0;
    x = frexp(x, &exp); // extract binary exponent from x
    if (exp & 1) {      // we want exponent to be even
        exp--;
        x *= 2;
    }
    double y = (1+x)/2; // first approximation
    double z = 0;
    while (y != z) {    // yes, we CAN compare doubles here!
        z = y;
        y = (y + x/y) / 2;
    }
    return ldexp(y, exp/2); // multiply answer by 2^(exp/2)
}
--------------------------------------------------------------------------------------------------
Быстрое возведение в степень по модулю
--------------------------------------------------------------------------------------------------
#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

unsigned powmod(unsigned base, unsigned exp, unsigned modulo)
{
    unsigned res = 1;

    while (exp != 0)
    {
        if ((exp & 1) != 0)
        {
            res = (1ll * res * base) % modulo;
        }

        base = (1ll * base * base) % modulo;
        exp >>= 1;
    }

    return res;
}
----------------------------------------------------------------------------------------------------
НОК и НОД
----------------------------------------------------------------------------------------------------
#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

int gcd1(int a, int b) {
    if (b == 0)
        return a;
    return gcd1(b, a % b);
}

int gcd2(int a, int b) {
    while (b > 0) {
        a %= b;
        swap(a, b);
    }
    return a;
}

int lcm(int a, int b) {
    return a * b / gcd1(a, b);
}

int main() {
    long a, b;
    cin >> a >> b;
    cout << lcm(a, b);
    return 0;
}
--------------------------------------------------------------------------------------------------
Расширенный алгоритм Эвклида
--------------------------------------------------------------------------------------------------
#include <iostream>
#include <cmath>

using namespace std;

int gcd_ext(int a, int b, int& x, int& y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = gcd_ext(b, a % b, x, y);
    x -= (a / b) * y;
    swap(x, y);
    return d;
}

int main() {
    return 0;
}
---------------------------------------------------------------------------------------------------
Решето Эратосфена
---------------------------------------------------------------------------------------------------
#include <iostream>
#include<cmath>
#include <vector>

using namespace std;

int main() {
    long n = 15485864;
    vector <int> prime(n + 1, 1);
    prime[0] = prime[1] = 0;
    long k = 0;
    long stop;
    cin >> stop;
    long ans;
    for (int i = 2; i <= n; ++i) {
        if (!prime[i] || i * 1ll * i > n) {
            continue;
        }
        for (int j = i * i; j <= n; j += i)
            prime[j] = 0;
    }
    for (long i = 1; i < n; i++) {
        if (prime[i] == 1) {
            k++;
        }
        if (k == stop) {
            ans = i;
            break;
        }
    }
    cout << ans;
    return 0;
}
------------------------------------------------------------------------------------------------------
Задача с бором
------------------------------------------------------------------------------------------------------
//#pragma GCC optimize(""03"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")
#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

#define forp(i, s, f) for(int i = s; i < f; i++)

using namespace std;
using ll = long long;

ll cnt = 0;

int dfs(vector<vector<int>> &bor, int row, int k, int ans) {
    k++;
    int a = 0;
    forp(i, 0, 27) {
        if (bor[row][i] != 0) {
            a = dfs(bor, bor[row][i], k, 0);
            bor[row][27] -= a;
            bor[row][28] -= a;
            ans += a;
        }
    }
    int c = 0;
    if (bor[row][27] >= bor[row][28]) {
        c = bor[row][28];
        cnt += k * c;
        ans += c;
        bor[row][27] -= c;
        bor[row][28] = 0;
    }
    else {
        c = bor[row][27];
        cnt += k * c;
        ans += c;
        bor[row][28] -= c;
        bor[row][27] = 0;
    }
    return ans;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
    int t;
    long long ans;
    cin >> t;
    string s;
    vector <int> p(29, 0);
    vector<vector<int>> bor;
    bor.push_back(p);
    bor[0][27] = t;
    bor[0][28] = t;
    int last_row = 1;
    forp(i, 0, t) {
        cin >> s;
        s += ""$"";
        int row = 0;
        reverse(s.begin(), s.end());
        /*cout << s << endl;*/
        for (auto now : s) {
            int x = (int)now - 96;
            if (x > 0 and bor[row][x] == 0) {
                bor.push_back(p);
                bor[row][x] = last_row;
                bor[last_row][27]++;
                row = last_row;
                last_row++;
            }
            else if (x > 0 and bor[row][x] != 0) {
                bor[bor[row][x]][27]++;
                row = bor[row][x];
            }
        }
    }
    forp(i, 0, t) {
        cin >> s;
        s += ""$"";
        int row = 0;
        reverse(s.begin(), s.end());
        /*cout << s << endl;*/
        for (auto now : s) {
            int x = (int)now - 96;
            if (x > 0 and bor[row][x] == 0) {
                bor.push_back(p);
                bor[row][x] = last_row;
                bor[last_row][28]++;
                row = last_row;
                last_row++;
            }
            else if (x > 0 and bor[row][x] != 0) {
                bor[bor[row][x]][28]++;
                row = bor[row][x];
            }
        }
    }
    /*for (auto now : bor) {
        for (auto n : now) {
            cout << setw(3);
            cout << n << "" "";
        }
        cout << endl;
    }*/
    dfs(bor, 0, -1, 0);
    cout << cnt;
}
----------------------------------------------------------------------------------------------------
Задача на алгоритм Флойда
----------------------------------------------------------------------------------------------------
//#pragma GCC optimize(""03"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")
#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

using namespace std;

const int N = 107;
int graf[N][N];
int cnt = 0;
set <pair<int, int>> st;

bool floyd(int n) {
    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (k != i and k != j) {
                    if (graf[i][j] == graf[i][k] + graf[k][j]) {
                        st.insert(make_pair(i, j));
                        st.insert(make_pair(j, i));
                    }
                    else if (graf[i][j] > graf[i][k] + graf[k][j]) {
                        //graf[i][j] = graf[i][k] + graf[k][j];
                        return false;
                    }
                }
            }
        }
    }
    return true;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
    int n, x;
    cin >> n;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> x;
            graf[i][j] = x;
        }
    }
    if (floyd(n)) {
        cout << st.size() / 2;
    }
    else {
        cout << -1;
    }
}
--------------------------------------------------------------------------------------------------
"
Uh42cV7i,Пособие/«Центр Дерева»,Bobert0032,C++,Thursday 2nd of November 2023 04:25:42 PM CDT,"#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

vector<vector<int>> G; // G - список смежности
vector<int> d; // d[i] = x, это означает, что кратчайшее расстояние от начальной вершины до i-ой равняется x
               // d[i] = -1, означает, что мы ещё не посетили i-ую вершину
vector<int> p; // p[i] = x, означает, что последнее ребро на кратчайшем пути от начальной вершины до i-ой - это x->i

void dfs(int v) { // dfs(v) обходит все непосещённые вершины, достижимые из v. Этот dfs также вычисляет кратчайшее расстояние до этих вершин и последнее ребро на этих путях
    for (int nxt : G[v]) { // Обходим вершины, смежные с v-ой
        if (d[nxt] == -1) {  // Если nxt-ая вершины ещё не посещена, то нужно её рассмотреть
            d[nxt] = d[v] + 1; // Кратчайшее расстояние до nxt-ой вершины - это кратчайшее расстояние до v + 1 (1 - это длина ребра v->nxt)
            p[nxt] = v; // Кратчаший путь в nxt заканчивается ребром v->nxt
            dfs(nxt); // Запускаем dfs из nxt-ой вершины
        }
    }
}

void solve() {
    int n;
    cin >> n; // считываем кол-во вершин в графе
    G.resize(n);
    d.resize(n, -1); // Изначально заполняем массив расстояний -1, d[v] = -1 будет означать, что вершина ещё не посещена
    p.resize(n);
    for (int i = 1; i < n; ++i) { // Итерируемся по рёбрам графа
        int x;
        cin >> x; // Считываем предка i-ой вершины
        x--; // Уменьшаем x на 1, так как в задаче нумерация идёт с 1, а нам было бы проще, если бы она шла с 0
        // Так как граф неориентированный, то нужно добавить как ребро i->x, так и ребро x->i
        G[i].push_back(x);
        G[x].push_back(i);
    }
    // Сначала нужно найти диаметр дерева, а именно его начало и конец
    d[0] = 0; // Расстояние до 0-ой вершины от самой себя равно 0
    dfs(0); // Запускаем dfs из 0-ой вершины
    int start_d = 0; // start_d - это один из концов диаметра.
                     // Эта вершина характерна тем, что расстояние от 0-ой вершины до неё максимально среди всех вершин.
                     // Изначально мы присваем хоть какое-то значение start_d, допустим - это 0
    for (int i = 0; i < n; ++i) { // Перебираем вершину
        if (d[i] > d[start_d]) { // Если расстояние от 0-ой вершины i-ой больше, чем до start_d-ой, то нужно обновить значение start_d
            start_d = i;
        }
    }
    // Сбрасываем значение массива кратчайших расстояний
    for (int i = 0; i < n; ++i) {
        d[i] = -1;
    }
    d[start_d] = 0; // Расстояние от start_d-ой вершины до самой себя равняется 0
    dfs(start_d); // Запускаем dfs из start_d-ой вершины
    int end_d = 0; // end_d - второй конец диаметра.
                   // Эта вершина характерна тем, что расстояние от start_d-ой вершины до неё максимально среди всех вершин.
                   // Изначально мы присваем хоть какое-то значение end_d, допустим - это 0
    for (int i = 0; i < n; ++i) { // Перебираем вершину
        if (d[i] > d[end_d]) { // Если расстояние от start_d-ой вершины до i-ой больше, чем до end_d, то нужно обновить значение end_d
            end_d = i;
        }
    }
    vector<int> path; // path - это вершины, принадлежащие одному диаметру. Эти вершины записаны в path так, чтобы между соседними имелось ребро, и path[0] и path.back() - это концы диаметра
    int at = end_d; // at - это текущая вершина пути. Начинаем обходить с end_d
    while (at != start_d) { // Пока мы не пришли в start_d продолжаем цикл
        path.push_back(at); // Добавляем в путь текущую вершину
        at = p[at]; // Переходим к следующей вершине на пути
    }
    path.push_back(at); // В конце концов, добавляем в путь start_d (at == start_d)
    vector<int> ans; // ans - это искомые центральные вершины
    if (path.size() % 2 == 0) { // Если на диаметре лежит чётное кол-во вершин, то центрами буду 2 вершину, находящиеся посередине этого пути
        ans.push_back(path[path.size() / 2 - 1]);
        ans.push_back(path[path.size() / 2]);
    } else { // Если на диаметре лежит нечётное кол-во вершин, то центром будет вершина, лежащая посередине этого пути
        ans.push_back(path[path.size() / 2]);
    }
    sort(ans.begin(), ans.end()); // По условию задачи, в ответе нужно вывести вершины в порядке возрастания
    for (auto el : ans) {
        cout << el + 1 << ' '; // Так как в коде используется нумерация с 0, а в задаче с 1, то нужно ко всем вершинам в ответе прибавить 1
    }
}

int main() {
    solve();
    return 0;
}"
cByjdNKA,Chat_W3.html,Thunder-Menu,HTML,Thursday 2nd of November 2023 03:50:48 PM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Emoji Chat</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }

        #chat-box {
            width: 70%;
            max-height: 400px;
            border: 1px solid #ccc;
            overflow-y: scroll;
            padding: 10px;
            float: left;
            clear: both;
        }

        #controls {
            width: 30%;
            padding: 10px;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        #message-controls {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        #emoji-list {
            display: none;
            flex-wrap: wrap;
            gap: 5px;
            padding-top: 10px;
            border-top: 1px solid #ccc;
            position: absolute;
            background-color: white;
            z-index: 1;
        }

        .emoji {
            cursor: pointer;
            width: 20px;
            height: 20px;
        }

        .chat-message {
            margin-bottom: 5px;
        }

        .username-label {
            cursor: pointer;
            text-decoration: underline;
        }

        .user-options {
            display: none;
            flex-direction: column;
            gap: 10px;
            position: absolute;
            background-color: white;
            z-index: 1;
            padding: 10px;
        }
    </style>
</head>

<body>
    <h1>Emoji Chat</h1>
    <div id=""chat-box""></div>
    <div id=""controls"">
        <div id=""message-controls"">
            <textarea id=""message-input"" rows=""5"" cols=""40"" placeholder=""Message""></textarea>
            <button id=""emoji-button"">Emojis</button>
            <button onclick=""sendMessage()"">Envoyer</button>
            <textarea id=""username"" placeholder=""Nom d'utilisateur""></textarea>
            <select id=""user-list"" size=""5""></select>
            <button id=""delete-button"" onclick=""deleteConfig()"">Supprimer la configuration</button>
        </div>

    <div id=""emoji-list""></div>
    <div id=""admin-controls"" style=""display: none;"">
        <h2>Exclure un Utilisateur</h2>
        <label for=""usernameExclude"">Nom d'utilisateur à exclure :</label>
        <input type=""text"" id=""usernameExclude"">
        <button id=""exclude-button"">Exclure</button>

        <h2>Vérifier et Supprimer les Exclusions</h2>
        <label for=""usernameCheck"">Nom d'utilisateur :</label>
        <input type=""text"" id=""usernameCheck"">
        <button id=""check-button"">Vérifier</button>
        <div id=""result""></div>
        <label for=""excludedUsers"">Utilisateurs exclus :</label>
        <select id=""excludedUsers""></select>
        <button id=""remove-button"">Supprimer l'exclusion</button>
    </div>
</div>

    <script>
        const chatBox = document.getElementById(""chat-box"");
        const userList = document.getElementById(""user-list"");
        const usernameInput = document.getElementById(""username"");
        const messageInput = document.getElementById(""message-input"");
        const emojiButton = document.getElementById(""emoji-button"");
        const emojiList = document.getElementById(""emoji-list"");
        const deleteButton = document.getElementById(""delete-button"");

        const userLabel = document.createElement(""label"");
        userLabel.className = ""username-label"";
        const savedUsername = localStorage.getItem(""chatUsername"");
        userLabel.textContent = savedUsername || ""Changer le nom d'utilisateur"";
        userLabel.addEventListener(""click"", openUserOptions);
        document.body.insertBefore(userLabel, document.getElementById(""chat-box""));

        const userOptionsContainer = document.createElement(""div"");
        userOptionsContainer.className = ""user-options"";
        userOptionsContainer.style.left = userLabel.offsetLeft + ""px"";
        userOptionsContainer.style.top = userLabel.offsetTop + userLabel.offsetHeight + ""px"";
        document.body.appendChild(userOptionsContainer);

        const emojis = [""😀"", ""😄"", ""😁"", ""😆"", ""😅"", ""🤣"", ""😂"", ""🙂"", ""🙃"", ""😉""];
        emojis.forEach(emoji => {
            const emojiElement = document.createElement(""span"");
            emojiElement.className = ""emoji"";
            emojiElement.textContent = emoji;
            emojiElement.addEventListener(""click"", () => insertEmoji(emoji));
            emojiList.appendChild(emojiElement);
        });

        emojiButton.addEventListener(""click"", toggleEmojiList);

        function toggleEmojiList() {
            emojiList.style.display = emojiList.style.display === ""block"" ? ""none"" : ""block"";
        }

function sendMessage() {
    const message = messageInput.value;

    if (message === ""!More"") {
        document.getElementById(""admin-controls"").style.display = ""block"";
        return;
    }
    if (currentUser && message) {
        const newMessage = document.createElement(""div"");
        newMessage.className = ""chat-message"";
        newMessage.innerHTML = `<strong>${currentUser}:</strong> ${message}`;
        chatBox.appendChild(newMessage);
        saveMessage(currentUser, message);
        messageInput.value = """";
  updateUserLastActive(currentUser);
    }
}




        function insertEmoji(emoji) {
            messageInput.focus();
            const startPosition = messageInput.selectionStart;
            const endPosition = messageInput.selectionEnd;
            const textBefore = messageInput.value.substring(0, startPosition);
            const textAfter = messageInput.value.substring(endPosition);
            messageInput.value = `${textBefore}${emoji}${textAfter}`;
            messageInput.setSelectionRange(startPosition + emoji.length, startPosition + emoji.length);
            emojiList.style.display = ""none"";
        }

        function deleteConfig() {
            localStorage.removeItem(""chatUsers"");
            localStorage.removeItem(""chatUsername"");
            localStorage.removeItem(""chatMessages"");
            userList.innerHTML = """";
            deleteButton.style.display = ""none"";
            usernameInput.style.display = ""block"";
            loadUserList();
        }

        function loadUserList() {
            userList.innerHTML = """";
    const onlineUsers = getOnlineUsers();
    onlineUsers.forEach(user => {
        addUserToComboBox(user);
    });
            const savedUsers = JSON.parse(localStorage.getItem(""chatUsers"")) || [];
            savedUsers.forEach(user => {
                addUserToComboBox(user);
            });

            if (savedUsers.length > 0) {
                deleteButton.style.display = ""block"";
            }
if (savedUsername) {
    userList.value = savedUsername;
}

}
let currentUser = """";

function addUserToComboBox(username) {
    const optionExists = [...userList.options].some(option => option.value === username);
    if (!optionExists) {
        const newUserOption = new Option(username, username);
        userList.appendChild(newUserOption);
    }
    currentUser = username;
}



        function saveUser(user) {
            const savedUsers = JSON.parse(localStorage.getItem(""chatUsers"")) || [];
            if (!savedUsers.includes(user)) {
                savedUsers.push(user);
                localStorage.setItem(""chatUsers"", JSON.stringify(savedUsers));
                loadUserList();
            }
        }

        if (savedUsername) {
            usernameInput.style.display = ""none"";
            saveUser(savedUsername);
        }

        usernameInput.addEventListener(""blur"", () => {
            const newUsername = usernameInput.value.trim();
            if (newUsername) {
                usernameInput.style.display = ""none"";
                saveUser(newUsername);
                localStorage.setItem(""chatUsername"", newUsername);
                userLabel.textContent = newUsername;
            }
        });

        loadMessages();

function loadMessages() {
    chatBox.innerHTML = ''; // Vider la boîte de chat
    const savedMessages = JSON.parse(localStorage.getItem(""chatMessages"")) || {};
    Object.keys(savedMessages).forEach(user => {
        savedMessages[user].forEach(message => {
            const newMessage = document.createElement(""div"");
            newMessage.className = ""chat-message"";
            newMessage.innerHTML = `<strong>${user}:</strong> ${message}`;
            chatBox.appendChild(newMessage);
        });
    });
}


        function saveMessage(user, message) {
            const savedMessages = JSON.parse(localStorage.getItem(""chatMessages"")) || {};
            if (!savedMessages[user]) {
                savedMessages[user] = [];
            }
            savedMessages[user].push(message);
            localStorage.setItem(""chatMessages"", JSON.stringify(savedMessages));
        }

        loadUserList();

        function openUserOptions() {
            userOptionsContainer.style.display = ""block"";
            const setUsernameOption = document.createElement(""button"");
            setUsernameOption.textContent = ""Changer le nom d'utilisateur"";
            setUsernameOption.addEventListener(""click"", changeUsername);
            userOptionsContainer.appendChild(setUsernameOption);

            const deleteUserOption = document.createElement(""button"");
            deleteUserOption.textContent = ""Supprimer la configuration"";
            deleteUserOption.addEventListener(""click"", deleteConfig);
            userOptionsContainer.appendChild(deleteUserOption);

            document.addEventListener(""click"", (e) => {
                if (!userOptionsContainer.contains(e.target) && e.target !== userLabel) {
                    userOptionsContainer.style.display = ""none"";
                    setUsernameOption.remove();
                    deleteUserOption.remove();
                }
            });
        }

        function changeUsername() {
            usernameInput.style.display = ""block"";
            usernameInput.value = savedUsername;
            userOptionsContainer.style.display = ""none"";
        }

    let excludedUsers = JSON.parse(localStorage.getItem(""excludedUsers"")) || [];
    const excludedUsersSelect = document.getElementById(""excludedUsers"");
    const resultDiv = document.getElementById(""result"");
    const excludeButton = document.getElementById(""exclude-button"");
    const checkButton = document.getElementById(""check-button"");

    if (excludedUsers.includes(localStorage.getItem(""chatUsername""))) {
            document.body.innerHTML = '<a href=""about:blank"">Vous avez été exclu</a>';
            throw new Error(""L'utilisateur est exclu""); // Arrêter l'exécution du script
    }

        function refreshExcludedUsersOptions() {
            excludedUsersSelect.innerHTML = """";
            excludedUsers.forEach(username => {
                const option = document.createElement(""option"");
                option.text = username;
                excludedUsersSelect.add(option);
            });
        }

        excludeButton.addEventListener(""click"", excludeUser);

        function excludeUser() {
            const usernameInput = document.getElementById(""usernameExclude"");
            const username = usernameInput.value.trim();
            if (username) {
                excludedUsers.push(username);
                localStorage.setItem(""excludedUsers"", JSON.stringify(excludedUsers));
                usernameInput.value = """";
                refreshExcludedUsersOptions();
                resultDiv.innerHTML = ""<h2>Utilisateur exclu avec succès !</h2>"";
            }
        }

        checkButton.addEventListener(""click"", () => {
            const username = document.getElementById(""usernameCheck"").value.trim();
            if (excludedUsers.includes(username)) {
                resultDiv.innerHTML = ""<h2>Utilisateur exclu</h2>"";
            } else {
                resultDiv.innerHTML = ""<h2>Utilisateur non exclu</h2>"";
            }
        });

        refreshExcludedUsersOptions();

        const removeButton = document.getElementById(""remove-button"");

        removeButton.addEventListener(""click"", () => {
            const selectedUsername = excludedUsersSelect.value;
            if (selectedUsername) {
                const index = excludedUsers.indexOf(selectedUsername);
                if (index !== -1) {
                    excludedUsers.splice(index, 1);
                    localStorage.setItem(""excludedUsers"", JSON.stringify(excludedUsers));
                    refreshExcludedUsersOptions();
                    resultDiv.innerHTML = ""<h2>Exclusion supprimée avec succès !</h2>"";
                }
            }
        });


let lastMessageCount = 0; // Variable pour stocker le nombre de messages la dernière fois qu'ils ont été chargés
const refreshInterval = setInterval(refreshChat, 5000); // 5000ms équivaut à 5 secondes

function refreshChat() {
    // Vérifier si un nouvel utilisateur a été banni
    if (excludedUsers.includes(localStorage.getItem(""chatUsername""))) {
        document.body.innerHTML = '<a href=""about:blank"">Vous avez été exclu</a>';
        clearInterval(refreshInterval); // Arrêtez le rafraîchissement si l'utilisateur est exclu.
        return;
    }

    loadMessages(); // Charger de nouveaux messages
}
function updateUserLastActive(username) {
    const userLastActive = JSON.parse(localStorage.getItem(""userLastActive"")) || {};
    userLastActive[username] = Date.now(); // L'heure actuelle en millisecondes
    localStorage.setItem(""userLastActive"", JSON.stringify(userLastActive));
}
function getOnlineUsers() {
    const userLastActive = JSON.parse(localStorage.getItem(""userLastActive"")) || {};
    const onlineUsers = [];
    const FIVE_MINUTES = 5 * 1000; // 5 minutes en millisecondes

    for (const user in userLastActive) {
        if (Date.now() - userLastActive[user] < FIVE_MINUTES) {
            onlineUsers.push(user);
        }
    }

    return onlineUsers;
}


setInterval(refreshChat, 5000); // Rafraîchir le chat toutes les 5 secondes

    </script>

</body>

</html>
"
jwSGpqbf,countdown.py,ssoni,Python,Thursday 2nd of November 2023 03:41:33 PM CDT,"import time

x=int(input('Start at what number? '))
while x>=1:
    print(x)
    x=x-1
    time.sleep(1)
print ('blast off!')
"
26Xd6VeR,secret snowy business updated,coinwalk,JavaScript,Thursday 2nd of November 2023 03:30:53 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/100).toFixed(8));
var burp = nudie;
var taget = (smiley*2);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp*2)>=(smiley/5)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
if ((burp*2)>=(bolance/5)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
pLSEdUX0,9.2.15,myloyo,C#,Thursday 2nd of November 2023 03:20:45 PM CDT,"using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Globalization;

namespace myloyorrr
{
    class Program
    {
        static void Main()
        {
            using (StreamReader sr = new StreamReader(""C:/Настя/in.txt""))
            {
                using (StreamWriter sw = new StreamWriter(""C:/Настя/out.txt""))
                {
                    int x, y;
                    string s;
                    while ((s = sr.ReadLine()) != null)
                    {
                        string[] a = s.Split(' ');
                        x = Convert.ToInt32(a[0]);
                        y = Convert.ToInt32(a[1]);
                        sw.WriteLine(Math.Max(x, y));
                    }
                    
                }
            }
        }
    }
}
"
Qfa1fq0J,Codice per Simone Alan,homezappa,C++,Thursday 2nd of November 2023 03:18:53 PM CDT,"#include <Adafruit_NeoPixel.h>

Adafruit_NeoPixel strip = Adafruit_NeoPixel(16, 15, NEO_GRB + NEO_KHZ800); //15 LEDS, 

/* Questa funzione accende in sequenza i led dal numero 0 al numero massimo (definito sopra: 16)
 * nel colore indicato, aspettando il tempo wait fra l'accensione dei led 
 * */
void  accensione_sequenziale(uint32_t c, uint16_t wait)
{
  for(uint16_t i=0; i<strip.numPixels(); i++) {
    strip.setPixelColor(i, c);
    strip.show();
    delay(wait);
  }
  //spegni tutti i leds
  strip.clear();
  strip.show();
  delay(wait);
}

/* Questa funzione accende in sequenza i led dal numero 0 al numero metà del massimo 
 * nel colore1 indicato, aspettando il tempo wait fra l'accensione dei led 
 * poi accende in sequenza il resto (dalla metà in poi) fino alla fine, nel colore 2
 * */
void  accensione_sequenziale_due_colori(uint32_t c1, uint32_t c2, uint16_t wait)
{
  /* accendo la metà dei led nel colore 1 */
  for(uint16_t i=0; i<strip.numPixels()/2; i++) {
    strip.setPixelColor(i, c1);
    strip.show();
    delay(wait);
  }
  /* accendo l'altra metà dei led nel colore 2 */
  for(uint16_t i=strip.numPixels()/2; i<strip.numPixels(); i++) {
    strip.setPixelColor(i, c2);
    strip.show();
    delay(wait);
  }
  //spegni tutti i leds
  strip.clear();
  strip.show();
  delay(wait);
}

void setup() {
  //SETUP LEDS NEOPIXELS
  strip.begin();
  strip.setBrightness(80); //[0-255]
  strip.clear(); // metti ad off tutti i leds
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {  //ACCENSIONE SEQUENZIALE CON COLORE FISSO
  /* creo i due colori */
  uint32_t colorRed = strip.Color(255,0,0); //RED-GREEN-BLUE
  uint32_t colorBlue = strip.Color(0,0,255); //Spero che sia così, il blu!!!
  /* chiamo le funzioni: prima tutti rossi, poi tutti blu, poi metà rossi e metà blu */
  accensione_sequenziale(colorRed, 60);
  delay(60);
  accensione_sequenziale(colorBlue, 60);
  delay(60);
  accensione_sequenziale_due_colori(colorRed,colorBlue,60);
  delay(60);
}
"
iXWrz8TT,WTF,IvanNenov,JavaScript,Thursday 2nd of November 2023 03:05:53 PM CDT,"function suplicesforSchool(input) {

    let pens = Number(input[0]);
    let markets = Number(input[1]);
    let preparation = Number(input[2]);
    let percent = Number(input[3]);

    let pensPrice = pens * 5.80;
    let marketsPrice = markets * 7.20;
    let preparationPrice = preparation * 1.20;
    let totalPercent = percent / 100;
    
    let totalMaterialPrice = pensPrice + marketsPrice + preparationPrice;
    let totalprice = totalMaterialPrice - (totalMaterialPrice / totalPercent);
}
suplicesforSchool([""2 "",""3 "",""4 "",""25 ""]);"
mz97CsGw,secret snowy business,coinwalk,JavaScript,Thursday 2nd of November 2023 02:53:42 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/80).toFixed(8));
var burp = nudie;
var taget = (smiley*2);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp*5.01)>=smiley){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
if ((burp*5.01)>=bolance){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
4umWfXYY,secret snowy business,coinwalk,JavaScript,Thursday 2nd of November 2023 02:40:21 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/800).toFixed(8));
var burp = nudie;
var taget = (smiley*2);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp*50.01)>=smiley){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
if ((burp*50.01)>=bolance){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
fUiJtsgv,turtleStorage,Josqus,Lua,Thursday 2nd of November 2023 02:15:57 PM CDT,"currentX = 0
currentY = 0

function moveToCoordinates(targetX, targetY)
    --local currentX, currentY = getPosition() -- You'll need to implement this function
    local safeY = 3 -- Choose a safe height that is above all chests

    -- Move up to a safe height first
	if currentX ~= 0 then
		turtle.back()
	end
    while currentY < safeY do
        turtle.up()
        currentY = currentY + 1
    end

    -- Move to the correct X coordinate
    while currentX < targetX do
        turtle.forward()
        currentX = currentX + 1
    end
    while currentX > targetX do
        turtle.back()
        currentX = currentX - 1
    end

    -- Move down to the target Y coordinate
    while currentY > targetY do
        turtle.down()
        currentY = currentY - 1
    end
	while currentY < targetY do
        turtle.down()
        currentY = currentY + 1
    end
end

--moveToCoordinates(2, , targetZ)"
rWaiU6Zz,zad2,AntonioWF,Java,Thursday 2nd of November 2023 02:15:02 PM CDT,"import java.util.Scanner;

class SLLNode<E> {
    protected E element;
    protected SLLNode<E> succ;

    public SLLNode(E elem, SLLNode<E> succ) {
        this.element = elem;
        this.succ = succ;
    }

    @Override
    public String toString() {
        return element.toString();
    }
}

class SLL<E> {
    private SLLNode<E> first;

    public SLL() {
        // Construct an empty SLL
        this.first = null;
    }

    public void deleteList() {
        first = null;
    }

    public int size() {
        int listSize = 0;
        SLLNode<E> tmp = first;
        while(tmp != null) {
            listSize++;
            tmp = tmp.succ;
        }
        return listSize;
    }

    @Override
    public String toString() {
        String ret = new String();
        if (first != null) {
            SLLNode<E> tmp = first;
            ret += tmp;
            while (tmp.succ != null) {
                tmp = tmp.succ;
                ret += "" "" + tmp;
            }
        } else
            ret = ""Prazna lista!!!"";
        return ret;
    }

    public void insertFirst(E o) {
        SLLNode<E> ins = new SLLNode<E>(o, null);
        ins.succ = first;
        //SLLNode<E> ins = new SLLNode<E>(o, first);
        first = ins;
    }

    public void insertAfter(E o, SLLNode<E> node) {
        if (node != null) {
            SLLNode<E> ins = new SLLNode<E>(o, node.succ);
            node.succ = ins;
        } else {
            System.out.println(""Dadenot jazol e null"");
        }
    }
    public void insertBefore(E o, SLLNode<E> before) {

        if (first != null) {
            SLLNode<E> tmp = first;
            if(first==before){
                this.insertFirst(o);
                return;
            }
            //ako first!=before
            while (tmp.succ != before && tmp.succ!=null)
                tmp = tmp.succ;
            if (tmp.succ == before) {
                tmp.succ = new SLLNode<E>(o, before);;
            } else {
                System.out.println(""Elementot ne postoi vo listata"");
            }
        } else {
            System.out.println(""Listata e prazna"");
        }
    }

    public void insertLast(E o) {
        if (first != null) {
            SLLNode<E> tmp = first;
            while (tmp.succ != null)
                tmp = tmp.succ;
            tmp.succ = new SLLNode<E>(o, null);
        } else {
            insertFirst(o);
        }
    }

    public E deleteFirst() {
        if (first != null) {
            SLLNode<E> tmp = first;
            first = first.succ;
            return tmp.element;
        } else {
            System.out.println(""Listata e prazna"");
            return null;
        }
    }

    public E delete(SLLNode<E> node) {
        if (first != null) {
            SLLNode<E> tmp = first;
            if(first == node) {
                return this.deleteFirst();
            }
            while (tmp.succ != node && tmp.succ.succ != null)
                tmp = tmp.succ;
            if (tmp.succ == node) {
                tmp.succ = tmp.succ.succ;
                return node.element;
            } else {
                System.out.println(""Elementot ne postoi vo listata"");
                return null;
            }
        } else {
            System.out.println(""Listata e prazna"");
            return null;
        }

    }

    public SLLNode<E> getFirst() {
        return first;
    }

    public SLLNode<E> find(E o) {
        if (first != null) {
            SLLNode<E> tmp = first;
            while (!tmp.element.equals(o) && tmp.succ != null)
                tmp = tmp.succ;
            if (tmp.element.equals(o)) {
                return tmp;
            } else {
                System.out.println(""Elementot ne postoi vo listata"");
            }
        } else {
            System.out.println(""Listata e prazna"");
        }
        return null;
    }

    public void merge (SLL<E> in){
        if (first != null) {
            SLLNode<E> tmp = first;
            while(tmp.succ != null)
                tmp = tmp.succ;
            tmp.succ = in.getFirst();
        }
        else{
            first = in.getFirst();
        }
    }

    public void mirror() {
        if (first != null) {
            //m=nextsucc, p=tmp,q=next
            SLLNode<E> tmp = first;
            SLLNode<E> newsucc = null;
            SLLNode<E> next;

            while(tmp != null){
                next = tmp.succ;
                tmp.succ = newsucc;
                newsucc = tmp;
                tmp = next;
            }
            first = newsucc;
        }
    }
}

public class SpecialSLLDelete<E> {

    //TODO: implement method
    public void specialDelete(SLL<E> list, int m) {
    if (list.size() <= 1 || m <= 1) {
        // Nothing to delete or invalid value of m
        return;
    }

    SLLNode<E> current = list.getFirst();
    SLLNode<E> previous = null;
    int count = 0;

    while (current != null) {
        count++;
        if (count % m == 0) {
            // Delete the current node
            SLLNode<E> next = current.succ;
            list.delete(current);
            current = next;
        } else {
            // Move to the next node
            previous = current;
            current = current.succ;
        }
    }
}


    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int n = input.nextInt();

        SLL<Integer> list = new SLL<>();
        for(int i=0;i<n;i++) {
            list.insertLast(input.nextInt());
        }

        int m = input.nextInt();

        SpecialSLLDelete<Integer> tmp = new SpecialSLLDelete<>();

        tmp.specialDelete(list, m);
        
        System.out.println(list);
    }

}"
QeLRYjYJ,riddles,Okami,JSON,Thursday 2nd of November 2023 02:10:29 PM CDT,"{
	""Riddles"": [
		{
			""Riddle"": ""What is the price of your sanity, And the smell of rotting flesh and bones?"",
			""Answers"": [
				""Death"",
				""A madhouse"",
				""Patient"",
				""Doctor"",
				""Ghost""
			]
		}
	]
}"
JkbUWmNY,"Grammatik aktiv A1-B1, 2. aktualisierte Ausgabe",bpmircea,BrainFuck,Thursday 2nd of November 2023 02:08:14 PM CDT,"Grammatik aktiv A1-B1

Übungsgrammatik
2. aktualisierte Ausgabe
Verstehen ✓
Üben ✓
Sprechen ✓
Autor/-in: Jin, Friederike; Voß, Ute
Verlag: Cornelsen
Fach: Deutsch als Fremdsprache
Format: .pdf, .mp3, .mp4
Seitenzahl: 260

✔ Grammatik lernen leicht gemacht:
 Die Übungsgrammatik ist ideal für alle, die die deutsche Grammatik von Niveau A1 bis B1 üben und wiederholen möchten. Sie eignet sich sowohl zum Selbstlernen als auch für den Einsatz im Unterricht.
 Die 2. aktualisierte Ausgabe bietet unterhaltsame Grammatik-Videos zur Erklärung grammatikalischer Phänomene.

✔ Mit dem Doppelseiten-Prinzip zum Erfolg:
 Die 85 Kapitel sind übersichtlich aufgebaut: Auf der linken Seite finden Sie die einfachen, visuell gestützten Erklärungen, auf der rechten Seite die abwechslungsreichen Übungen mit niveaugerechtem Wortschatz.
 
 Die Vorteile auf einen Blick:
• Vollständige Grundstufengrammatik A1–B1
• Einfache und anschauliche Erklärungen
• Abwechslungsreiche Übungen mit Kennzeichnung der Niveaustufe
• Niveaugerechter Wortschatz aus vielen thematischen Bereichen
• Hilfreiche Merksätze zu vielen Regeln
• 11 Partnerseiten mit kooperativen Sprechübungen
• 88 Sprechübungen
• 26 motivierende Grammatik-Videos zur Erklärung der Grammatik

Uploading...


https://i.imgur.com/5PdjtU2.png"
cDd5RY2P,active,VssA,C#,Thursday 2nd of November 2023 01:58:41 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
 
namespace Reflection.Randomness
{
    public class Generator<T> where T : new()
    {
        private Dictionary<PropertyInfo, IContinousDistribution> properties;
        private string temporaryPropertyName;
 
        public Generator()
        {
            properties = typeof(T)
                .GetProperties()
                .Where(x => x.GetCustomAttributes(typeof(FromDistribution), false).Length != 0)
                .ToDictionary(x => x,
                              x => ((FromDistribution)x
                                  .GetCustomAttribute(typeof(FromDistribution), false))
                                  .Distribution);
        }
 
        public T Generate(Random rnd)
        {
            var bindings = properties
                .Select(property => Expression.Bind(property.Key,
                                                    Expression.Constant(property.Value.Generate(rnd))))
                .Cast<MemberBinding>()
                .ToList();
 
            var body = Expression.MemberInit(
                Expression.New(typeof(T).GetConstructor(new Type[0])),
                bindings
                );
            return Expression.Lambda<Func<T>>(body).Compile()();
        }
 
        public Generator<T> For(Expression<Func<T, double>> func)
        {
            var temporaryProperty = func.Body as MemberExpression;
            temporaryPropertyName = temporaryProperty.Member.Name;
 
            return this;
        }
 
        public Generator<T> Set(IContinousDistribution distr)
        {
            var property = typeof(T)
                .GetProperties()
                .First(x => x.Name == temporaryPropertyName);
            properties[property] = distr;
 
            return this;
        }
    }
 
    public class FromDistribution:Attribute
    {
        public IContinousDistribution Distribution { get; set; }
 
        public FromDistribution(Type type, params object[] parameters)
        {
            Distribution = (IContinousDistribution) Activator.CreateInstance(type, parameters);
        }
 
    }
}
"
34Vc2BQr,factorize + eratho_sieve,vojta249,Python,Thursday 2nd of November 2023 01:44:40 PM CDT,"def factorize(num):
    n = num
    upper = num
    primes = eratho(upper)
    result = []
    while num > 1:
        for i in range(len(primes)):
            if num % primes[i] == 0:
                result.append(primes[i])
                num = num // primes[i]
    result.sort()
    print(n, ""="", end="" "")
    for i in range(len(result)):
        if i<len(result)-1:
            print(result[i], ""* "", end="""")
        else:
            print(result[i])


def eratho(n):
    result = []
    printer = []
    for i in range(n+1):
        result.append(True)
    for j in range(n+1):
        if j <= 1:
            result[j] = False
        else:
            for i in range(2, n+1):
                if j % i == 0 and j != i:
                    result[j] = False
    for i in range(len(result)):
        if result[i]:
            printer.append(i)
    return(printer)"
WRxTJNB6,zad1,AntonioWF,Java,Thursday 2nd of November 2023 01:44:35 PM CDT,"import java.util.Scanner;


@SuppressWarnings(""unchecked"")
class Array<E> {
    private E data[]; // declared to be an Object since it would be too
    // complicated with generics
    private int size;

    public Array(int capacity) {
        this.data = (E[]) new Object[capacity];
        this.size = 0;
    }

    public void insertLast(E o) {
        //check if there is enough capacity, and if not - resize
        if(size + 1 > data.length)
            this.resize();
        data[size++] = o;
    }

    public void insert(int position, E o) {
        // before all we check if position is within range
        if (position >= 0 && position <= size) {
            //check if there is enough capacity, and if not - resize
            if(size + 1 > data.length)
                this.resize();
            //copy the data, before doing the insertion
            for(int i=size;i>position;i--) {
                data[i] = data[i-1];
            }
            data[position] = o;
            size++;
        } else {
            System.out.println(""Ne mozhe da se vmetne element na taa pozicija"");
        }
    }

    public void set(int position, E o) {
        if (position >= 0 && position < size)
            data[position] = o;
        else
            System.out.println(""Ne moze da se vmetne element na dadenata pozicija"");
    }

    public E get(int position) {
        if (position >= 0 && position < size)
            return data[position];
        else
            System.out.println(""Ne e validna dadenata pozicija"");
        return null;
    }

    public int find(E o) {
        for (int i = 0; i < size; i++) {
            if(o.equals(data[i]))
                return i;
        }
        return -1;
    }

    public int getSize() {
        return size;
    }

    public void delete(int position) {
        // before all we check if position is within range
        if (position >= 0 && position < size) {
            // first resize the storage array
            E[] newData = (E[]) new Object[size - 1];
            // copy the data prior to the delition
            for (int i = 0; i < position; i++)
                newData[i] = data[i];
            // move the data after the deletion
            for (int i = position + 1; i < size; i++)
                newData[i - 1] = data[i];
            // replace the storage with the new array
            data = newData;
            size--;
        }
    }

    public void resize() {
        // first resize the storage array
        E[] newData = (E[]) new Object[size*2];
        // copy the data
        for (int i = 0; i < size; i++)
            newData[i] = data[i];
        // replace the storage with the new array
        this.data = newData;
    }

    @Override
    public String toString() {
        String ret = new String();
        if(size>0) {
            ret = ""{"";
            ret += data[0];
            for(int i=1;i<size;i++) {
                ret += "","" + data[i];
            }
            ret+=""}"";
            return ret;
        }
        else {
            ret = ""Prazna niza!"";
        }
        return ret;
    }

}

public class ArrayMeanWordLength {

    //TODO: implement function
        public static String wordClosestToAverageLength(Array<String> arr) {
    int sumOfLengths = 0;
    for (int i = 0; i < arr.getSize(); i++) {
        sumOfLengths += arr.get(i).length();
    }

    double averageLength = (double) sumOfLengths / arr.getSize();

    String closestWord = """";
    double closestLengthDifference = Integer.MAX_VALUE;

    for (int i = 0; i < arr.getSize(); i++) {
        String word = arr.get(i);
        double lengthDifference = Math.abs(word.length() - averageLength);
        double currentWordLength = closestWord.length();

        if (lengthDifference < closestLengthDifference || (lengthDifference == closestLengthDifference && word.length() > currentWordLength)) {
            closestWord = word;
            closestLengthDifference = lengthDifference;
        }
    }

    return closestWord;
}

    

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int N = input.nextInt();
        Array<String> arr = new Array<>(N);
        input.nextLine();

        for(int i=0;i<N;i++) {
            arr.insertLast(input.nextLine());
        }

        System.out.println(wordClosestToAverageLength(arr));
    }
}"
y1H2QHW7,eratho_sieve,vojta249,Python,Thursday 2nd of November 2023 01:44:04 PM CDT,"def eratho(n):
    result = []
    printer = []
    for i in range(n+1):
        result.append(True)
    for j in range(n+1):
        if j <= 1:
            result[j] = False
        else:
            for i in range(2, n+1):
                if j % i == 0 and j != i:
                    result[j] = False
    for i in range(len(result)):
        if result[i]:
            printer.append(i)
    return(printer)"
DeFwnPXX,letter_pi_ascii,vojta249,Python,Thursday 2nd of November 2023 01:42:01 PM CDT,"def letter_pi(size):
    for row in range(1, size+1):
        for collumn in range(1, size+1):
            if collumn == 2 or collumn == size-1:
                print(""#"", end = """")
            elif row == 1 and collumn != size:
                print(""#"",end = """")
            elif row == size and collumn == size:
                print(""#"", end="""")
            else:
                print(""."", end="""")
        print()"
H2RYub29,Türklingel,breti76,YAML,Thursday 2nd of November 2023 01:09:44 PM CDT,"alias: Wf Türklingel Tablet Eingang
description: """"
trigger:
  - platform: device
    domain: homematicip_local
    device_id: 9fc4324d7ed1fe8798932729536b7135
    event_type: homematic.keypress
    interface_id: ccu-BidCos-RF
    address: GEQ0015408
    type: press_short
    subtype: 4
  - platform: device
    domain: homematicip_local
    device_id: 9fc4324d7ed1fe8798932729536b7135
    event_type: homematic.keypress
    interface_id: ccu-BidCos-RF
    address: GEQ0015408
    type: press_long
    subtype: 4
condition: []
action:
  - service: media_player.volume_set
    data:
      volume_level: 0.9
    target:
      device_id: 12a8f5bc5fe031bf86f6d07eefe321e2
  - data:
      media_content_id: media-source://media_source/local/Vibraphone 6027_80_3_preview.mp3
      media_content_type: music
    service: media_player.play_media
    target:
      device_id: 12a8f5bc5fe031bf86f6d07eefe321e2
mode: single
"
s71x9Y1Q,Untitled,Josif_tepe,C++,Thursday 2nd of November 2023 01:04:12 PM CDT,"#include <iostream>
#include <queue>
#include <vector>
#include <fstream>
#include <cstring>
using namespace std;
const int maxn = 3e5 + 10;
const int logn = 24;
int n;
int id_node[maxn];
int parent[maxn];
int depth[maxn];
int up_node[maxn][logn];
int LCA(int A, int B) {
    if(depth[A] < depth[B]) {
        swap(A, B);
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(depth[A] - (1 << i) >= depth[B]) {
            A = up_node[A][i];
        }
    }
    if(A == B) {
        return A;
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(up_node[A][i] != -1 and up_node[A][i] != up_node[B][i]) {
            A = up_node[A][i];
            B = up_node[B][i];
        }
    }
    return up_node[A][0];
                   
}
int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    depth[0] = 0;
    parent[0] = 0;
    vector<int> queries(n + 1, -1);
    vector<pair<int, pair<int, int> > > find_LCA;
    for(int i = 1; i <= n; i++) {
        char c;
        cin >> c;
        if(c == 'a') {
            int x;
            cin >> x;
            x = id_node[x];
            id_node[i] = i;
            parent[i] = x;
            depth[i] = depth[parent[i]] + 1;
        }
        else if(c == 'b') {
            int x;
            cin >> x;
            x = id_node[x];
            id_node[i] = parent[x];
            queries[i] = x;
        }
        else if(c == 'c') {
            int x, y;
            cin >> x >> y;
            x = id_node[x];
            y = id_node[y];
            id_node[i] = x;
            find_LCA.push_back(make_pair(i, make_pair(x, y)));
            
        }
    }
    for(int i = 0; i <= n; i++) {
        up_node[i][0] = parent[i];
        for(int j = 1; j < logn; j++) {
            up_node[i][j] = up_node[up_node[i][j - 1]][j - 1];
        }
    }
    for(int i = 0; i < find_LCA.size(); i++) {
        int a = find_LCA[i].second.first;
        int b = find_LCA[i].second.second;
        queries[find_LCA[i].first] = depth[LCA(a, b)];
    }
    for(int i = 1; i <= n; i++) {
        if(queries[i] != -1) {
            cout << queries[i] << endl;
        }
    }
    return 0;
}

/*
 12
 1 2
 2 4
 2 5
 4 7
 5 8
 1 3
 3 6
 6 9
 6 10
 6 11
 11 12
 
 **/
"
v0vsPuqg,Untitled,arvind_iyer_2001,Latex,Thursday 2nd of November 2023 01:00:04 PM CDT,"\documentclass[a4paper,10pt]{article}
\usepackage{url}
\usepackage{parskip} 	
\usepackage{tabularx}
\usepackage[usenames,dvipsnames]{xcolor}
\usepackage[scale=0.9]{geometry}
\usepackage{enumitem}
\usepackage{titlesec}
\usepackage{multirow}
\usepackage[style=authoryear,sorting=ynt,maxbibnames=2]{biblatex}
\usepackage[unicode, draft=false]{hyperref}
\usepackage{fontawesome5}

\definecolor{linkcolour}{rgb}{0,0.2,0.6}
\hypersetup{colorlinks,breaklinks,urlcolor=linkcolour,linkcolor=linkcolour}
\addbibresource{citations.bib}
\setlength\bibitemsep{1em}

\newcolumntype{C}{>{\centering\arraybackslash}X} 
\newlength{\fullcollw}
\setlength{\fullcollw}{0.4\textwidth}

\titleformat{\section}{\Large\scshape\raggedright}{}{0em}{}[\titlerule]
\titlespacing{\section}{0pt}{10pt}{10pt}

\pagestyle{empty} 

\begin{document}

%----------------------------------------------------------------------------------------
%	TITLE
%----------------------------------------------------------------------------------------

\begin{tabularx}{\linewidth}{@{} C @{}}
\Huge{Arvind Iyer} \\[9pt]

\href{https://www.linkedin.com/in/arvindiyer2001}{\raisebox{-0.05\height}\faLinkedin\ arvindiyer2001} \ $|$ \href{mailto:arvind.iyer.2001@gmail.com}{\raisebox{-0.05\height}\faEnvelope \ arvind.iyer.2001@gmail.com} \ $|$ 
\ 
\href{tel:+91-9108279418}{\raisebox{-0.05\height}\faMobile \ +91-9108279418} 
$|$ \ 
\href{https://github.com/arvind-iyer-2001}{\raisebox{-0.05\height}\faGithub\ arvind-iyer-2001}
\\
\end{tabularx}

%----------------------------------------------------------------------------------------
% EXPERIENCE SECTIONS
%----------------------------------------------------------------------------------------

\section{Education}
\begin{tabularx}{\linewidth}{@{}l X@{}}	
2019 - 2023 
& Bachelors of Engineering - \textbf{Birla Institute of Technology and Science, Pilani}
\hfill (GPA: 6.78) 
\\ 

2017 - 2019 
& Class 12th CBSE - National Public School, Koromangala, Bengaluru
\hfill  (92\%) 
\\

2017 
& Class 10th ICSE - Bethany High School, Koromangala, Bengaluru
\hfill  (90\%) 
\\
\end{tabularx}



\section{Work Experience}
\begin{tabularx}{\linewidth}{ @{}l r@{} }
\textbf{Software Developer Intern - {TheONCompany, New York (Remote)}} & \hfill {May 2023 - Aug 2023} \\
\multicolumn{2}{@{}X@{}}{- TheONCompany is an American Music Ed-Tech start up, which is building brands such as \textbf{CarnaticON} and Artificial Intelligence powered products with patented technologies to democratize online music education at scale.} \\
\multicolumn{2}{@{}X@{}}{- Developed the web technologies for the prototype of a meetings application, capable of grading music in an online music class using Twilio Video SDK, Web Audio APIs and libraries such as Essentia.js to perform music processing.} \\
\multicolumn{2}{@{}X@{}}{- Developed a website for CarnaticON to increase SEO and discoverability of instructors and courses on the internet.}\\
% Learning Management System(LMS) to aid instructors to generate content and learning materials, manage students and schedule classes. Learning materials are interactive and help students learn music.
\\
\textbf{Hardware Engineering Intern - {Samsung Semiconductor India Research (SSIR)}} & \hfill {July 2022 - December 2022} \\
\multicolumn{2}{@{}X@{}}{- Worked in the Foundry Hardware Design Team to perform low power management, implementation and validation using Unified Power Format(UPF)(IEEE Standard 1801).}\\
\multicolumn{2}{@{}X@{}}{- Performed automation of UPF Generation and CI/CD Operations using Perl Scripting, Perforce and XLS sheets reducing development and testing time from a few weeks to 2 hours.}\\
\multicolumn{2}{@{}X@{}}{- Tools and Softwares - \textit{UPF, Verilog, Cadence and Synopsys Tools, TCL, Perl Language, Libreoffice, Linux Shell, Perforce.}}\\
\end{tabularx}
%Projects
\section{Development Projects}
\begin{tabularx}{\linewidth}{ @{}l @{}X }
\textbf{\underline{DevOverflow, a Stack Overflow clone} - \href{https://github.com/arvind-iyer-2001/devoverflow}{GitHub Repo}}\\
\multicolumn{2}{@{}X@{}}{- A developer forum with built-in GPT answer generation for instant code solutions, smart recommendation system and optimized data fetching for high-speed page loading, enhancing developer experience and knowledge acquisition.}\\ 
\multicolumn{2}{@{}X@{}}{- Tech Stack - \textit{Next 13(Full Stack Framework), React.js, Shadcn-ui, Clerk, MongoDB, Prism.js, OpenAI GPT APIs}}\\ 
\\
\textbf{\underline{e-Commerce Demo - Admin Dashboard \& Store Application} - \href{https://github.com/arvind-iyer-2001/ecommerce-demo-monorepo}{GitHub Repo}}\\

\multicolumn{2}{@{}X@{}}{- Designed an admin dashboard for multi-store e-commerce management, enabling user profile setup, store creation, and sales analytics; also developed a customer-facing store app for easy purchasing.}\\ 
\multicolumn{2}{@{}X@{}}{- Tech Stack - \textit{Next 13(Full Stack Framework), React.js, Shadcn-ui, Clerk, MySQL2, Cloudinary(CDN), Stripe API}.}\\  
\\
\textbf{\underline{Urjaa Mobile Application} - \href{https://github.com/arvind-iyer-2001/urjaa}{GitHub Repo}}\\
\multicolumn{2}{@{}X@{}}{- Designed Urjaa Mobile App for connecting dietitians and patients, streamlining appointment scheduling, diet plan access, document management and PayTM payments.}\\ 
% Urjaa is a service that helps dieticians connect and manage their patients with a mobile application created for patients to upload and view appointments, diet plans, and documents, and for dieticians to upload diet plans, notes, and access appointments and patient data.
\multicolumn{2}{@{}X@{}}{- Tech Stack - \textit{Flutter, Firebase (Firestore, Auth, Storage, Cloud Messaging, Cloud Functions), Hive, Google Calendar APIs.}}\\ 

\end{tabularx}

\section{Positions of Responsibility}
\begin{tabularx}{\linewidth}{ @{}l r@{} }
{\textbf {Department of Backstage:} \emph{Chief Technical Coordinator and Research Head}} & \hfill {May 2021- April 2022}\\
\multicolumn{2}{@{}X@{}}{- Led a team of over 50 Students to provide Backstage, Infrastructure and Production Support for all student events and fests of BITS Pilani Goa like Waves, Spree, Quark etc.}\\
\multicolumn{2}{@{}X@{}}{- Provided consultation on upgrades to the audio-visual requirements of the college campus and auditorium of BITS Goa.}\\
\\
\textbf{Flutter Development for Beginners and Amateurs:} \emph{Course Instructor and Mentor}&\hfill {June 2021 - August 2021}\\
\multicolumn{2}{@{}X@{}}{- Mentored over 100 beginners through a well-structured course on Flutter Development using local and cloud databases, through assignments and one-to-one assistance to develop a personal profile website and blog.}\\
\end{tabularx}

\section{Technical Proficiency}
\begin{tabularx}{\linewidth}{@{}l X@{}}
Programming Languages &  \normalsize{JavaScript, TypeScript, Dart, Java, Python, Perl, C, SQL.}\\
Development Tools \& SDKs & \normalsize{ Next.js, React.js, Redux, Express.js, Node.js, Shadcn-ui, Flutter, HTML, CSS, DrizzleORM. }\\  
APIs and Services &  \normalsize{ MongoDB, Clerk, Mux, Cloudinary, Stripe, PlanetScale(MySQL), Web Audio, WebRTC. }\\

Softwares and Tools & \normalsize{Android Studio, XCode, VS Code,  Docker. } \\
Operating System &  \normalsize{Windows, macOS, Linux (Ubuntu, Kali). }\\
\end{tabularx}

\end{document}
"
KLtYxwXb,DKL,abhyash,Java,Thursday 2nd of November 2023 12:56:54 PM CDT,"class Solution {
    public int minAddToMakeValid(String s) {
        Stack<Character>stack = new Stack<>();

        for(char c : s.toCharArray()){
            if(c=='('){
                stack.push(c);
            }else if(c == ')' && !stack.isEmpty() && stack.peek()=='('){
                stack.pop();
            }else{
                stack.push(c);
            }
        }
        return stack.size();
        
    }
}"
9jrMpTFM,Grafana Apache Echarts - Change line style,Superstar,JavaScript,Thursday 2nd of November 2023 12:55:27 PM CDT,"function transformData(data, types) {
  const processedColors = {};

  data.forEach((item, index) => {
      // Extracts color property from the item
      const { color } = item;
      
      if (processedColors[color]) {
          const previousTypeIndex = types.indexOf(processedColors[color]);

          let nextItemIndex = previousTypeIndex + 1;
          if (types.length > nextItemIndex) {
            item.lineStyle = types[nextItemIndex] || '';
          } else {
            item.lineStyle = '';
          }
          processedColors[color] = item.lineStyle;
      } else {
          item.lineStyle = types[0];
          processedColors[color] = types[0];
      }
  });
  
  return data;
}

let data = [
  {
    color: 'green'
  },
  {
    color: 'green'
  },
  {
    color: 'green'
  },
  {
    color: 'green'
  }
];

let types = ['solid', 'dashed', 'dotted'];

data = transformData(data, types);

console.log(data);
"
kqPqsQVp,Count Nodes Equal to Average of Subtree,jayati,C++,Thursday 2nd of November 2023 12:14:17 PM CDT,"class Solution {
public:
    int count = 0;
    
    pair<int, int> postOrder(TreeNode* root) {
        if (root == NULL) {
            return {0, 0};
        }
        
        // First iterate over left and right subtrees.
        pair<int, int> left = postOrder(root->left);
        pair<int, int> right = postOrder(root->right);
        
        int nodeSum = left.first + right.first + root->val;
        int nodeCount = left.second + right.second + 1;

        // Check if the average of the subtree is equal to the node value.
        if (root->val == nodeSum / (nodeCount)) {
            count++;
        }
        
        // Return the sum of nodes and the count in the subtree.
        return {nodeSum, nodeCount};
    }
    
    int averageOfSubtree(TreeNode* root) {
        postOrder(root);
        return count;
    }
};"
3GiBWyg4,Untitled,Josif_tepe,C++,Thursday 2nd of November 2023 12:12:15 PM CDT,"#include <iostream>
#include <queue>
#include <vector>
#include <fstream>
#include <cstring>
using namespace std;
const int maxn = 2e5 + 10;
const int logn = 24;
int n;
vector<int> graph[maxn];
int timer = 0;
int in_dfs[maxn], out_dfs[maxn];
int parent[maxn];
int up_node[maxn][logn];
int depth[maxn];
void dfs(int node, int parent, int dist) {
    timer++;
    in_dfs[node] = timer;
    up_node[node][0] = parent;
    depth[node] = dist;
    for(int i = 1; i < logn; i++) {
        up_node[node][i] = up_node[up_node[node][i - 1]][i - 1];
    }
    for(int neighbour : graph[node]) {
        if(neighbour != parent) {
            dfs(neighbour, node, dist + 1);
        }
    }
    timer++;
    out_dfs[node] = timer;
    
}
bool is_ancestor(int A, int B) {
    if(in_dfs[A] <= in_dfs[B] and out_dfs[A] >= out_dfs[B]) {
        return true;
    }
    return false;
}
int LCA(int A, int B) {
    if(is_ancestor(A, B)) {
        return A;
    }
    if(is_ancestor(B, A)) {
        return B;
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(!is_ancestor(up_node[A][i], B)) {
            A = up_node[A][i];
        }
    }
//    cout << A << endl;
    return up_node[A][0];
}
int main() {
    int q;
    cin >> n >> q;
    parent[1] = 0;
    for(int i = 2; i <= n; i++) {
        int a, b;
        cin >> a >> b;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    dfs(1, 1, 0);
    

    for(int i = 0; i < q; i++) {
        int a, b;
        cin >> a >> b;
        int res = depth[a] + depth[b] - 2 * depth[LCA(a, b)];
        cout << res << endl;
    }
    
    return 0;
}

/*
 12
 1 2
 2 4
 2 5
 4 7
 5 8
 1 3
 3 6
 6 9
 6 10
 6 11
 11 12
 
 **/
"
NdXjAM9S,Extreme Reactors Turbine,thetaz1009,Lua,Thursday 2nd of November 2023 12:09:48 PM CDT,"-----BigReactor Control
-----by SparkyBearBomb
-----Debug and suggestions by Taz1009
-----orinally jaranvil aka jared314
 
-----feel free to use and/or modify this code
-----------------------------------------------
 
local version = 1.4

--peripherals
local mon
 
--monitor size
local monX
local monY
 
term.clear()
-------------------FORMATTING-------------------------------
function clear()
    mon.setBackgroundColor(colors.black)
    mon.clear()
    mon.setCursorPos(1,1)
end
 
--display text on computer's terminal screen
function draw_text_term(x, y, text, text_color, bg_color)
    term.setTextColor(text_color)
    term.setBackgroundColor(bg_color)
    term.setCursorPos(x,y)
    write(text)
end
 
--display text text on monitor, ""mon"" peripheral
function draw_text(x, y, text, text_color, bg_color)
    mon.setBackgroundColor(bg_color)
    mon.setTextColor(text_color)
    mon.setCursorPos(x,y)
    mon.write(text)
end
 
--draw line on computer terminal
function draw_line(x, y, length, color)
        mon.setBackgroundColor(color)
        mon.setCursorPos(x,y)
        mon.write(string.rep("" "", length))
end
 
--draw line on computer terminal 
function draw_line_term(x, y, length, color)
        term.setBackgroundColor(color)
        term.setCursorPos(x,y)
        term.write(string.rep("" "", length))
end
 
-- Round Decimal Numbers
function roundNumber(num, n)
  local mult = 10^(n or 0)
  return math.floor(num * mult + 0.5) / mult
end
 
--create progress bar
--draws two overlapping lines
--background line of bg_color
--main line of bar_color as a percentage of minVal/maxVal
function progress_bar(x, y, length, minVal, maxVal, bar_color, bg_color)
    draw_line(x, y, length, bg_color) --background bar
    local barSize = math.floor((minVal/maxVal) * length) 
    draw_line(x, y, barSize, bar_color) --progress so far
end

--create status bar
--draws three overlapping lines
--background line of bg_color
function status_bar(x, y, length, minVal, medVal, maxVal, bar_color1, bar_color2, bg_color)
  draw_line(x, y, length, bg_color) --backgoround bar
  local barSize1 = math.floor((medVal/maxVal) * length)
  local barSize2 = math.floor((minVal/maxVal) * length)
  draw_line(x, y, barSize1, bar_color1) --progress so far
  draw_line(x, y, barSize2, bar_color2) --progress so far
end
 
--same as above but on the computer terminal
function progress_bar_term(x, y, length, minVal, maxVal, bar_color, bg_color)
    draw_line_term(x, y, length, bg_color) --backgoround bar
    local barSize = math.floor((minVal/maxVal) * length) 
    draw_line_term(x, y, barSize, bar_color)    --progress so far
end
 
--create button on monitor
function button(x, y, length, text, txt_color, bg_color)
    draw_line(x, y, length, bg_color)
    draw_text((x+2), y, text, txt_color, bg_color)
end
 
--header and footer bars on monitor
function menu_bar()
    draw_line(1, 1, monX, colors.purple)
    draw_text(2, 1, ""Power    Tools    Settings"", colors.white, colors.purple)
    draw_line(1, 26, monX, colors.purple)
    draw_text(2, 26, ""      Turbine Control"", colors.white, colors.purple)
end
 
--dropdown menu for power options
function power_menu()
  draw_line(1, 2, 9, colors.gray)
  draw_line(1, 3, 9, colors.gray)
  draw_line(1, 4, 9, colors.gray)
  if active then
    draw_text(2, 2, ""ON"", colors.lightGray, colors.gray)
    draw_text(2, 3, ""OFF"", colors.white, colors.gray)
  else
    draw_text(2, 2, ""ON"", colors.white, colors.gray)
    draw_text(2, 3, ""OFF"", colors.lightGray, colors.gray)
  end
  draw_text(2, 4, ""Auto"", colors.white, colors.gray)
end
 
--dropbox menu for tools
function tools_menu()
    draw_line(10, 2, 14, colors.gray)
    draw_line(10, 3, 14, colors.gray)
    draw_text(11, 2, ""Flow Rate"", colors.white, colors.gray)
    draw_text(11, 3, ""Coils"", colors.white, colors.gray)
end
 
--dropdown menu for settings 
function settings_menu()
    draw_line(12, 2, 18, colors.gray)
    draw_line(12, 3, 18, colors.gray)
    draw_text(13, 2, ""Check for Updates"", colors.white, colors.gray)
    draw_text(13, 3, ""Reset peripherals"", colors.white, colors.gray)
end
 
--basic popup screen with title bar and exit button
function popup_screen(y, title, height)
    clear()
    menu_bar()
 
    draw_line(4, y, 22, colors.blue)
    draw_line(25, y, 1, colors.red)
 
    for counter = y+1, height+y do
        draw_line(4, counter, 22, colors.white)
    end
 
    draw_text(25, y, ""X"", colors.white, colors.red)
    draw_text(5, y, title, colors.white, colors.blue)
end
 
--write settings to config file
function save_config()
    sw = fs.open(""turbine_config.txt"", ""w"")     
        sw.writeLine(version)
        sw.writeLine(side)
        sw.writeLine(name)
        sw.writeLine(auto_string)
        sw.writeLine(on)
        sw.writeLine(off)
    sw.close()
end
 
--read settings from file
function load_config()
    sr = fs.open(""turbine_config.txt"", ""r"")
        version = tonumber(sr.readLine())
        side = sr.readLine()
        name = sr.readLine()
        auto_string = sr.readLine()
        on = tonumber(sr.readLine())
        off = tonumber(sr.readLine())
    sr.close()
end

function speed()
	if RPMswitch == 0 then
		draw_text(9, 5, "" LOW "", colors.gray, colors.green)
		draw_text(17, 5, "" HIGH "", colors.black, colors.gray)
	else
		draw_text(9, 5, "" LOW "", colors.black, colors.gray)
		draw_text(17, 5, "" HIGH "", colors.gray, colors.red)
	end
	
end

function autoPower()
	if auto == 1 then
		draw_text(9, 21, "" Online "", colors.gray, colors.green)
		draw_text(17, 21, "" Offline "", colors.black, colors.gray)		
	else
		draw_text(9, 21, "" Online "", colors.black, colors.gray)
		draw_text(17, 21, "" Offline "", colors.gray, colors.red)
	end	
end
		

 
--------------------------HOMEPAGE----------------------------------

function homepage()
    while true do
        clear()
        menu_bar()
        terminal_screen()
		speed()
		autoPower()

        energy_stored = (turbine.battery()).stored()
        RPM = (turbine.rotor()).RPM()
		
		
---------------------POWER STAT-----------------------------------
        
		active = turbine.active()
        draw_text(2, 3, ""Power:"", colors.lightGray, colors.black)
        if active then
            draw_text(9, 3, "" ONLINE "", colors.gray, colors.green)
            draw_text(17, 3, "" OFFLINE "", colors.black, colors.gray)
        else
            draw_text(9, 3, "" ONLINE "", colors.black, colors.gray)
            draw_text(17, 3, "" OFFLINE "", colors.gray, colors.red)
        end
		        
---------------------Toggle Turbine Speed-------------------------     
			
		draw_text(2, 5, ""Speed:"", colors.lightGray, colors.black)

------------------------Router speed-------------------------------
      
        draw_text(2, 7, ""Router Speed: "", colors.yellow, colors.black)
        local maxVal = 2200
        local minVal = math.floor((turbine.rotor()).RPM())
        draw_text(19, 7, minVal.."" rpm"", colors.white, colors.black)
 
            if minVal < 700 then
            progress_bar(2, 8, monX-2, minVal, maxVal, colors.lightBlue, colors.gray)
			elseif minVal < 900 then   
                progress_bar(2, 8, monX-2, minVal, maxVal, colors.lime, colors.gray)
			elseif minVal < 1700 then
				progress_bar(2, 8, monX-2, minVal, maxVal, colors.lightBlue, colors.gray)
			elseif minVal < 1900 then
				progress_bar(2, 8, monX-2, minVal, maxVal, colors.lime, colors.gray)
			elseif minVal < 2000 then
				progress_bar(2, 8, monX-2, minVal, maxVal, colors.yellow, colors.gray)
			elseif minVal >= 2000 then
				progress_bar(2, 8, monX-2, minVal, maxVal, colors.red, colors.gray)
                                
			end
 
        -----------Steam Level---------------------
		
        draw_text(2, 10, ""Steam Amount: "", colors.yellow, colors.black)
        local maxVal = 8800
        local minVal = math.floor(((turbine.fluidTank()).input()).amount()) 
        draw_text(19, 10, minVal.."" mB"", colors.white, colors.black)
        progress_bar(2, 11, monX-2, minVal, maxVal, colors.lightGray, colors.gray)  
 
        -------------OUTPUT-------------------
		
        draw_text(2, 13, ""RF/tick: "", colors.yellow, colors.black)
        rft = math.floor((turbine.battery()).producedLastTick())
        draw_text(19, 13, rft.."" RF/T"", colors.white, colors.black)
        progress_bar(2, 14, monX-2, minVal, maxVal, colors.lightGray, colors.gray)  
 
        -----------RF STORAGE---------------
		
        draw_text(2, 16, ""RF Stored:"", colors.lightGray, colors.black)
        energy_max = (turbine.battery()).capacity()
        energy_stored_percent = math.floor((energy_stored/energy_max)*100)
        local maxVal = 100
        local minVal = energy_stored_percent
        draw_text(13, 16, energy_stored_percent..""% (""..energy_stored.."" RF)"", colors.white, colors.black)
     
        progress_bar(2, 17, monX-2, minVal, maxVal, colors.green, colors.gray)
         
        ------------FLOW RATE---------------  
		
        draw_text(2, 19, ""Flow Rate: "", colors.yellow, colors.black)
        flow_rate = (turbine.fluidTank()).nominalFlowRate()
        draw_text(19, 19, flow_rate.."" mB/t"", colors.white, colors.black)
 
 		--------Toggle Auto Power-----------------               
		
        draw_text(2, 21, ""Auto:"", colors.lightGray, colors.black)

        ------------COILS---------------------------
		
		engaged = turbine.coilEngaged()
        draw_text(2, 23, ""Coils: "", colors.lightGray, colors.black)
		if engaged then
            draw_text(9, 23, ""Engaged "", colors.gray, colors.green)
            draw_text(17, 23, "" Disengaged"", colors.black, colors.gray)
        else
            draw_text(9, 23, ""Engaged "", colors.black, colors.gray)
            draw_text(17, 23, "" Disengaged"", colors.gray, colors.red)
        end
        sleep(0.5)
    end
end

------------------------------------------MENU SCREENS---------------------------------------------------

-------------------Tools----------------------

function flow_rate_menu()
    popup_screen(3, ""Flow Rate"", 12)
    flow_rate = (turbine.fluidTank()).nominalFlowRate()
    current_flow = (turbine.fluidTank()).flowLastTick()
 
    draw_text(5, 5, ""Steam consumption"", colors.lime, colors.white)
    draw_text(5, 6, ""last tick:"", colors.lime, colors.white)
    draw_text(13, 8, current_flow.."" mB"", colors.black, colors.white)
 
    draw_text(5, 10, ""Flow Rate Setting:"", colors.lime, colors.white)
    draw_text(8, 12, "" < "", colors.white, colors.black)
    draw_text(13, 12, flow_rate.."" mB"", colors.black, colors.white)
    draw_text(21, 12, "" > "", colors.white, colors.black)
 
    draw_text(13, 14, "" Okay "", colors.white, colors.black)
 
    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
 
    --decrease
    if yPos == 12 and xPos >= 8 and xPos <= 11 then 
        (turbine.fluidTank()).setNominalFlowRate(flow_rate-10)
        flow_rate_menu()
    --increase
    elseif yPos == 12 and xPos >= 21 and xPos <= 24 then 
        (turbine.fluidTank()).setNominalFlowRate(flow_rate+10)
        flow_rate_menu()
    end
 
    --Okay button
    if yPos == 14 and xPos >= 13 and xPos <= 19 then 
        call_homepage()
    end
 
    --Exit button
    if yPos == 3 and xPos == 25 then 
        call_homepage()
    end
    call_homepage()
end
 
function coil_menu()
    engaged = turbine.coilEngaged()
 
    popup_screen(3, ""Induction Coils"", 8)
    draw_text(5, 5, ""Coil Status:"", colors.black, colors.white)
 
    if engaged then
        draw_text(5, 6, ""Engaged"", colors.lime, colors.white)
        draw_text(10, 8, "" Disengage "", colors.white, colors.black)
    else
        draw_text(5, 6, ""Disengaged"", colors.red, colors.white)
        draw_text(10, 8, "" Engage "", colors.white, colors.black)
    end
 
    draw_text(12, 10, "" Okay "", colors.white, colors.black)
 
 
    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
 
    if yPos == 8 and xPos >= 10 and xPos <= 21 then
        if engaged then
            turbine.setCoilEngaged(false)
            coil_menu()
        else
            turbine.setCoilEngaged(true)
            coil_menu()
        end
    end
 
    --okay button
    if yPos == 10 and xPos >= 12 and xPos <= 18 then
        call_homepage()
    end
    
    coil_menu()
end
 
-----------------------Settings--------------------------------
 
function install_update(program, pastebin)
        clear()
        draw_line(4, 5, 22, colors.blue)
 
        for counter = 6, 10 do
            draw_line(4, counter, 22, colors.white)
        end
 
        draw_text(5, 5, ""Updating..."", colors.white, colors.blue)
        draw_text(5, 7, ""Open computer"", colors.black, colors.white)
        draw_text(5, 8, ""terminal."", colors.black, colors.white)
 
        if fs.exists(""install"") then fs.delete(""install"") end
        shell.run(""pastebin get p4zeq7Ma install"")
        shell.run(""install"")
 
end
 
function update()
    popup_screen(5, ""Updates"", 4)
    draw_text(5, 7, ""Connecting to"", colors.black, colors.white)
    draw_text(5, 8, ""pastebin..."", colors.black, colors.white)
 
    sleep(0.5)
    
    shell.run(""pastebin get rqiSp0Ff current_version.txt"")
    sr = fs.open(""current_version.txt"", ""r"")
    current_version = tonumber(sr.readLine())
    sr.close()
    fs.delete(""current_version.txt"")
    terminal_screen()
 
    if current_version > version then
 
        popup_screen(5, ""Updates"", 7)
        draw_text(5, 7, ""Update Available!"", colors.black, colors.white)
        draw_text(11, 9, "" Intall "", colors.white, colors.black)
        draw_text(11, 11, "" Ignore "", colors.white, colors.black)
 
        local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
 
        --Instatll button
        if yPos == 9 and xPos >= 11 and xPos <= 17 then 
            install_update()
        end
 
        --Exit button
        if yPos == 5 and xPos == 25 then 
            call_homepage()
        end
        call_homepage()
 
    else
        popup_screen(5, ""Updates"", 5)
        draw_text(5, 7, ""You are up to date!"", colors.black, colors.white)
        draw_text(11, 9, "" Okay "", colors.white, colors.black)
 
        local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
 
        --Okay button
        if yPos == 9 and xPos >= 11 and xPos <= 17 then 
            call_homepage()
        end
 
        --Exit button
        if yPos == 5 and xPos == 25 then 
            call_homepage()
        end
        call_homepage()
    end
 
    
 
end
 
function reset_peripherals()
    clear()
    draw_line(4, 5, 22, colors.blue)
 
    for counter = 6, 10 do
        draw_line(4, counter, 22, colors.white)
    end
 
    draw_text(5, 5, ""Reset Peripherals"", colors.white, colors.blue)
    draw_text(5, 7, ""Open computer"", colors.black, colors.white)
    draw_text(5, 8, ""terminal."", colors.black, colors.white)
    setup_wizard()
 
end
 
--stop running status screen if monitors was touched
function stop()
  while true do
    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
      x = xPos
      y = yPos
      stop_function = ""monitor_touch""
    return
  end
end
 
function mon_touch()

-------------------------when the monitor is touch on the homepage--------------------------------------------
  
    if y == 1 then
        if x > 0 and x < 8 then
        power_menu()
            local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
            if xPos < 9 then
                if yPos == 2 then
                turbine.setActive(true)
                call_homepage()
                elseif yPos == 3 then
                turbine.setActive(false)
                call_homepage()
				elseif yPos == 4 then
                auto = 0
                call_homepage()
                else
                call_homepage()
				end
			end
		end
	end
	
	if y == 1 then
		if x > 10 and x < 16 then
		tools_menu()
			local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
			if xPos < 25 and xPos > 10 then
				if yPos == 2 then
				flow_rate_menu()
				elseif yPos == 3 then
				coil_menu()
				else
				call_homepage()                 
				end
			end
            
		elseif x > 19 and x < 28 then
		settings_menu()
			local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
			if xPos > 13 then
				if yPos == 2 then
				update()
				elseif yPos == 3 then
				reset_peripherals() 
				else
				call_homepage()
				end
				
			end
			call_homepage()
		end
		call_homepage()
		
---------------------------------------------Power On or Off------------------------------------------------------------

		elseif y == 3 then 
			if x > 9 and x < 17 then
				turbine.setActive(true)
				timer = 0 --reset anytime the reactor is turned on/off
				call_homepage()
				elseif x > 17 and x < 26 then
				turbine.setActive(false)
				timer = 0 --reset anytime the reactor is turned on/off
				call_homepage()
			else
			call_homepage()
		end
				
		
-------------------------------------------- Speed Low or High-----------------------------------------------------------

		elseif y == 5 then 
			if x > 9 and x < 13 then
				-- low speed
				RPMswitch = 0
					(turbine.fluidTank()).setNominalFlowRate(6000)	
				call_homepage()

			elseif x > 17 and x < 22 then
				-- high speed
				RPMswitch = 1
					(turbine.fluidTank()).setNominalFlowRate(11000)
				call_homepage()
			else
			call_homepage()
		end
        
		
----------------------------------------------Auto Power On & Off---------------------------------------------------------
		
    	elseif y == 21 then
        	if x > 9 and x < 17 then
				auto = 1
					while true do 
						while auto == 1 do
								if energy_stored_percent >= 99 then
								turbine.setActive(false)
								sleep(0.2)
														
								elseif energy_stored_percent <= 25 then	
									turbine.setActive(true)
									sleep(0.2)
									
								end
						end
					end
						
			elseif x > 17 and x < 24 then  
				auto = 0
				timer = 0 --reset anytime the reactor is turned on/off
				sleep(0.2)
				call_homepage()
		end
    
-------------------------------------------Coils Engaged or Disengaged----------------------------------------------------
	
		elseif y == 23 then 
			if x > 9 and x < 17 then
			turbine.setCoilEngaged(true)
			timer = 0 --reset anytime the reactor is turned on/off
			call_homepage()
			elseif x > 17 and x < 24 then
			turbine.setCoilEngaged(false)
			timer = 0 --reset anytime the reactor is turned on/off
			call_homepage()
			else
			call_homepage()
		end
		call_homepage()
	end
	call_homepage()
end


function terminal_screen()
    term.clear()
    draw_line_term(1, 1, 55, colors.blue)
    draw_text_term(13, 1, ""BigReactor Controls"", colors.white, colors.blue)
    draw_line_term(1, 19, 55, colors.blue)
    draw_text_term(13, 19, ""by SparkyBearBomb & Taz1009"", colors.white, colors.blue)
 
    draw_text_term(1, 3, ""Current program:"", colors.white, colors.black)
    draw_text_term(1, 4, ""Turbine Control v""..version, colors.blue, colors.black)
    
    draw_text_term(1, 6, ""Installer:"", colors.white, colors.black)
    draw_text_term(1, 7, ""pastebin.com/p4zeq7Ma"", colors.blue, colors.black)
 
    draw_text_term(1, 9, ""Please give me your feedback, suggestions,"", colors.white, colors.black)
    draw_text_term(1, 10, ""and errors!"", colors.white, colors.black)
 
    draw_text_term(1, 11, ""reddit.com/r/br_controls"", colors.blue, colors.black)
end
 
--run both homepage() and stop() until one returns
function call_homepage()
    clear()
    parallel.waitForAny(homepage, stop) 
 
    if stop_function == ""terminal_screen"" then 
        stop_function = ""nothing""
        setup_wizard()
    else if stop_function == ""monitor_touch"" then
        stop_function = ""nothing""
        mon_touch()
    end
    end
end
 
--try to wrap peripherals
--catch any errors
    function test_turbine_connection()
        turbine = peripheral.wrap(""top"")  --wrap reactor
        c = turbine.getConnected() 
        if unexpected_condition then error() end   
    end
 
    function test_monitor_connection()
        mon = peripheral.wrap(side) --wrap mon
        monX, monY = mon.getSize() --get mon size () 
        if unexpected_condition then error() end   
    end
 
--test if the entered monitor and reactor can be wrapped
function test_configs()
term.clear()
 
draw_line_term(1, 1, 55, colors.purple)
draw_text_term(10, 1, ""Turbine Controls"", colors.white, colors.purple)
 
draw_line_term(1, 19, 55, colors.purple)
draw_text_term(10, 19, ""by SparkyBearBomb & Taz1009"", colors.white, colors.purple)
 
draw_text_term(1, 3, ""Searching for a peripherals..."", colors.white, colors.black)
sleep(1)
 
turbine = turbineSearch()
mon = monitorSearch()
 
 
draw_text_term(2, 5, ""Connecting to turbine..."", colors.white, colors.black)
sleep(0.5)
    if turbine == null then
    draw_text_term(1, 8, ""Error:"", colors.red, colors.black)
    draw_text_term(1, 9, ""Could not connect to turbine"", colors.red, colors.black)
    draw_text_term(1, 10, ""Turbine must be connected with networking cable"", colors.white, colors.black)
    draw_text_term(1, 11, ""and modems or the computer is directly beside"", colors.white, colors.black)
    draw_text_term(1, 12,""the turbine computer port."", colors.white, colors.black)
    draw_text_term(1, 14, ""Press Enter to continue..."", colors.gray, colors.black)
    wait = read()
    setup_wizard()
    else
      draw_text_term(27, 5, ""success"", colors.green, colors.black)
      sleep(0.5)
    end
 
draw_text_term(2, 6, ""Connecting to monitor..."", colors.white, colors.black)
sleep(0.5)
    if mon == null then
    draw_text_term(1, 7, ""Error:"", colors.red, colors.black)
    draw_text_term(1, 8, ""Could not connect to a monitor. Place a 3x4 advanced monitor"", colors.red, colors.black)
    draw_text_term(1, 11, ""Press Enter to continue..."", colors.gray, colors.black)
    wait = read()
    setup_wizard()
    else
    monX, monY = mon.getSize()
    draw_text_term(27, 6, ""success"", colors.green, colors.black)
    sleep(0.5)
    end
draw_text_term(2, 7, ""saving configuration..."", colors.white, colors.black)  
 
save_config()
 
sleep(0.1)
draw_text_term(1, 9, ""Setup Complete!"", colors.green, colors.black)
sleep(1)
 
auto = auto_string == ""true""
call_homepage()
 
end
----------------SETUP-------------------------------
 
function setup_wizard()
 
term.clear()
 
 
draw_text_term(1, 1, ""Turbine Controls v""..version, colors.green, colors.black)
draw_text_term(1, 2, ""Peripheral setup"", colors.white, colors.black)
draw_text_term(1, 4, ""Step 1:"", colors.green, colors.black)
draw_text_term(1, 5, ""-Place 3 wide x 4 tall advanced monitors next to computer."", colors.white, colors.black)
draw_text_term(1, 7, ""Step 2:"", colors.green, colors.black)
draw_text_term(1, 8, ""-Place a wired modem on this computer and on the "", colors.white, colors.black)
draw_text_term(1, 9, "" computer port of the Turbine."", colors.white, colors.black)
draw_text_term(1, 10, ""-connect modems with network cable."", colors.white, colors.black)
draw_text_term(1, 11, ""-right click modems to activate."", colors.white, colors.black)
draw_text_term(1, 13, ""Press Enter when ready..."", colors.gray, colors.black)
   
wait = read()
test_configs()
 
   
end
 
-- peripheral searching thanks to /u/kla_sch
function turbineSearch()
   local names = peripheral.getNames()
   local i, name
   for i, name in pairs(names) do
      if peripheral.getType(name) == ""BiggerReactors_Turbine"" then
         return peripheral.wrap(name)
      else
         --return null
      end
   end
end
 
function monitorSearch()
   local names = peripheral.getNames()
   local i, name
   for i, name in pairs(names) do
      if peripheral.getType(name) == ""monitor"" then
        test = name
         return peripheral.wrap(name)
      else
         --return null
      end
   end
end
  
function start()
    --if configs exists, load values and test
    if fs.exists(""turbine_config.txt"") then
            load_config()
 
            test_configs()
    else
        setup_wizard()
    end
end
 
start()"
pBGuYELB,wo_ror_addons,Shuraken007,Python,Thursday 2nd of November 2023 12:03:54 PM CDT,"#!/usr/bin/python3.3
import os.path
import urllib.request
import zipfile
from bs4 import BeautifulSoup
import requests
import re
import os

TMP_DIR = ""C:\\tmp""
DOWNLOADS_DIR_UNZIPPED = ""C:\\Games\\WOROR\\Interface\\AddOns""
url = 'https://tools.idrinth.de/addons/'

if not os.path.exists(TMP_DIR):
    os.makedirs(TMP_DIR)

reqs = requests.get(url)
soup = BeautifulSoup(reqs.text, 'html.parser')
urls = []
links = [ 'https://tools.idrinth.de/' + x.get('href') for x in soup.find_all(href=re.compile(""/download/""))]

for link in links:
    link = link.strip()
    print('Link: ' + link)
    name = link.rsplit('/', 4)[-4]

    filename = os.path.join(TMP_DIR, name)

    if not os.path.isfile(filename):
        try:
            urllib.request.urlretrieve(link, filename + '.zip')
            with zipfile.ZipFile(filename + '.zip', 'r') as zip_ref:
                print('Downloading: ' + DOWNLOADS_DIR_UNZIPPED + '/' + name)
                zip_ref.extractall(DOWNLOADS_DIR_UNZIPPED)
        except Exception as inst:
            print(inst)
            print('  Encountered unknown error. Continuing.')"
Ws7FidXr,Untitled,parv28,C++,Thursday 2nd of November 2023 12:03:41 PM CDT,"/*
class TreeNode {
    public:
        int data;
        TreeNode* left;
        TreeNode* right;
    
        TreeNode() {
        }
        
        TreeNode(int data) {
            this->data = data;
        }
        
        TreeNode(int data, TreeNode* left, TreeNode* right) {
            this->data = data;
            this->left = left;
            this->right = right;
        }
};
*/

class Solution {
public:
    int pre_order_index = 0;

    int get_index(vector<int>& inorder, int start, int end, int val) {
        for(int i=start;i<=end;i++) {
            if(inorder[i]==val) return i;
        }
        return end;
    }

    TreeNode* constructTree(vector<int>& preorder, vector<int>& inorder, int start, int end) {
        if(start>end) return nullptr;
        
        int curr_val = preorder[pre_order_index++];
        TreeNode* root = new TreeNode(curr_val);
        
        // search for the index in inorder
        int index = get_index(inorder, start, end, curr_val);
        
        root->left = constructTree(preorder, inorder, start, index-1);
        root->right = constructTree(preorder, inorder, index+1, end);
        
        return root;
    }

	TreeNode*  buildTree(vector<int>& preorder, vector<int>& inorder) {
		int n = preorder.size();
        return constructTree(preorder, inorder, 0, n-1);
	}
};"
pxFMBUzN,Untitled,MeehoweCK,C++,Thursday 2nd of November 2023 12:03:21 PM CDT,"// main.cpp
#include ""VolleyballSet.h""

int main() {
	std::string vTeam1{ ""Polska"" }, vTeam2{ ""Brazylia"" };
	VolleyballSet volleyballSet{ vTeam1, vTeam2 };
	volleyballSet.play();
	return 0;
}

// VolleyballSet.h
#pragma once
#include <iostream>

class VolleyballSet {
	std::string mTeam1;
	std::string mTeam2;
	short int mPointsRequired{ 25 };
	short int mPointsTeam1{ 0 };
	short int mPointsTeam2{ 0 };
	bool continueSet() const;
	void givePoint();
	void printResult() const;
	void printStatus() const;
public:
	VolleyballSet(const std::string& aTeam1, const std::string& aTeam2) : mTeam1(aTeam1), mTeam2(aTeam2) {}
	void play();
};

// VolleyballSet.cpp
#include ""VolleyballSet.h""
#include <conio.h>
#include <cstdlib>
#include <ctime>

void VolleyballSet::play() {
	do {
		printStatus();
		_getch();
		givePoint();
	} while (continueSet());
	printResult();
}

bool VolleyballSet::continueSet() const {
	if (mPointsTeam1 >= mPointsRequired) {
		if (mPointsTeam1 - mPointsTeam2 > 1) {
			return false;
		}
	}
	if (mPointsTeam2 >= mPointsRequired) {
		if (mPointsTeam2 - mPointsTeam1 > 1) {
			return false;
		}
	}
	return true;
}

void VolleyballSet::givePoint() {
	srand(time(nullptr));
	rand() % 2 == 0 ? ++mPointsTeam1 : ++mPointsTeam2;
}

void VolleyballSet::printResult() const {
	if (mPointsTeam1 > mPointsTeam2) {
		std::cout << ""Druzyna "" << mTeam1 << "" wygrywa set "" << mPointsTeam1 << ':' << mPointsTeam2 << std::endl;
	}
	else {
		std::cout << ""Druzyna "" << mTeam2 << "" wygrywa set "" << mPointsTeam2 << ':' << mPointsTeam1 << std::endl;
	}
}

void VolleyballSet::printStatus() const {
	std::cout << mTeam1 << '\t' << mPointsTeam1 << ':' << mPointsTeam2 << '\t' << mTeam2 << std::endl;
}"
wuc7nrVX,Untitled,Josif_tepe,C++,Thursday 2nd of November 2023 12:02:16 PM CDT,"#include <iostream>
#include <queue>
#include <vector>
#include <fstream>
#include <cstring>
using namespace std;
const int maxn = 2e5 + 10;
const int logn = 24;
int n;
vector<int> graph[maxn];
int timer = 0;
int in_dfs[maxn], out_dfs[maxn];
int parent[maxn];
int up_node[maxn][logn];

void dfs(int node, int parent) {
    timer++;
    in_dfs[node] = timer;
    up_node[node][0] = parent;
    
    for(int i = 1; i < logn; i++) {
        up_node[node][i] = up_node[up_node[node][i - 1]][i - 1];
    }
    for(int neighbour : graph[node]) {
        if(neighbour != parent) {
            dfs(neighbour, node);
        }
    }
    timer++;
    out_dfs[node] = timer;
    
}
bool is_ancestor(int A, int B) {
    if(in_dfs[A] <= in_dfs[B] and out_dfs[A] >= out_dfs[B]) {
        return true;
    }
    return false;
}
int LCA(int A, int B) {
    if(is_ancestor(A, B)) {
        return A;
    }
    if(is_ancestor(B, A)) {
        return B;
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(!is_ancestor(up_node[A][i], B)) {
            A = up_node[A][i];
        }
    }
//    cout << A << endl;
    return up_node[A][0];
}
int main() {
    int q;
    cin >> n >> q;
    parent[1] = 0;
    for(int i = 2; i <= n; i++) {
        int p;
        cin >> p;
        
        graph[i].push_back(p);
        graph[p].push_back(i);
        parent[i] = p;
    }
    dfs(1, 1);
    

    for(int i = 0; i < q; i++) {
        int a, b;
        cin >> a >> b;
        cout << LCA(a, b) << endl;
    }
    
    return 0;
}

/*
 12
 1 2
 2 4
 2 5
 4 7
 5 8
 1 3
 3 6
 6 9
 6 10
 6 11
 11 12
 
 **/
"
kr7hYapG,People,bulgakoff08,JSON,Thursday 2nd of November 2023 11:53:03 AM CDT,"[
	{""ssn"":""698-21-1037"", ""firstName"":""Airi"", ""lastName"":""Satoru"", ""gender"":""M"", ""age"":33, ""office"":""Tokyo"", ""department"":""Accounting"", ""position"":""Accountant"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":162700, ""employDate"":""2008-11-27T22:00:00.000Z""},
	{""ssn"":""401-90-8422"", ""firstName"":""Alex"", ""lastName"":""Popov"", ""gender"":""M"", ""age"":22, ""office"":""Edinburgh"", ""department"":""Development"", ""position"":""Junior AJAX Developer"", ""fullTime"":""N"", ""profession"":""Technical"", ""salary"":24400, ""employDate"":""2019-09-04T07:37:34.065Z""},
	{""ssn"":""544-37-4095"", ""firstName"":""Angelica"", ""lastName"":""Ramos"", ""gender"":""F"", ""age"":47, ""office"":""London"", ""department"":""Management"", ""position"":""Chief Executive Officer"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":1200000, ""employDate"":""2009-10-08T21:00:00.000Z""},
	{""ssn"":""458-99-4226"", ""firstName"":""Ashton"", ""lastName"":""Cox"", ""gender"":""M"", ""age"":66, ""office"":""San Francisco"", ""department"":""Inventory"", ""position"":""Junior Technical Author"", ""fullTime"":""N"", ""profession"":""General"", ""salary"":86000, ""employDate"":""2009-01-11T22:00:00.000Z""},
	{""ssn"":""611-84-5317"", ""firstName"":""Bradley"", ""lastName"":""Greer"", ""gender"":""M"", ""age"":41, ""office"":""London"", ""department"":""Development"", ""position"":""Software Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":132000, ""employDate"":""2012-10-12T21:00:00.000Z""},
	{""ssn"":""197-35-0709"", ""firstName"":""Brenden"", ""lastName"":""Wagner"", ""gender"":""M"", ""age"":28, ""office"":""San Francisco"", ""department"":""Development"", ""position"":""Software Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":206850, ""employDate"":""2011-06-06T21:00:00.000Z""},
	{""ssn"":""172-62-3669"", ""firstName"":""Braille"", ""lastName"":""Williamson"", ""gender"":""F"", ""age"":61, ""office"":""New York"", ""department"":""Support"", ""position"":""Integration Specialist"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":372000, ""employDate"":""2012-12-01T22:00:00.000Z""},
	{""ssn"":""735-74-0554"", ""firstName"":""Bruno"", ""lastName"":""Nash"", ""gender"":""M"", ""age"":38, ""office"":""London"", ""department"":""Development"", ""position"":""Software Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":163500, ""employDate"":""2011-05-02T21:00:00.000Z""},
	{""ssn"":""809-14-1134"", ""firstName"":""Caesar"", ""lastName"":""Vance"", ""gender"":""M"", ""age"":21, ""office"":""New York"", ""department"":""Support"", ""position"":""Presales Support"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":106450, ""employDate"":""2011-12-11T22:00:00.000Z""},
	{""ssn"":""103-23-9896"", ""firstName"":""Cara"", ""lastName"":""Stevens"", ""gender"":""F"", ""age"":46, ""office"":""New York"", ""department"":""Sales"", ""position"":""Sales Assistant"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":145600, ""employDate"":""2011-12-05T22:00:00.000Z""},
	{""ssn"":""562-58-5439"", ""firstName"":""Cedric"", ""lastName"":""Kelly"", ""gender"":""M"", ""age"":22, ""office"":""Edinburgh"", ""department"":""Development"", ""position"":""Senior Javascript Developer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":433060, ""employDate"":""2012-03-28T21:00:00.000Z""},
	{""ssn"":""435-17-0143"", ""firstName"":""Chard"", ""lastName"":""Marshall"", ""gender"":""F"", ""age"":36, ""office"":""San Francisco"", ""department"":""Management"", ""position"":""Regional Director"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":470600, ""employDate"":""2008-10-15T21:00:00.000Z""},
	{""ssn"":""174-94-6130"", ""firstName"":""Colleen"", ""lastName"":""Hurst"", ""gender"":""M"", ""age"":39, ""office"":""San Francisco"", ""department"":""Development"", ""position"":""Javascript Developer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":205500, ""employDate"":""2009-09-14T21:00:00.000Z""},
	{""ssn"":""727-94-4819"", ""firstName"":""Dai"", ""lastName"":""Rios"", ""gender"":""M"", ""age"":35, ""office"":""Edinburgh"", ""department"":""Management"", ""position"":""Personnel Lead"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":217500, ""employDate"":""2012-09-25T21:00:00.000Z""},
	{""ssn"":""800-71-8019"", ""firstName"":""Donna"", ""lastName"":""Snider"", ""gender"":""F"", ""age"":27, ""office"":""New York"", ""department"":""Support"", ""position"":""Customer Support"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":112000, ""employDate"":""2011-01-24T22:00:00.000Z""},
	{""ssn"":""726-76-9921"", ""firstName"":""Doris"", ""lastName"":""Wilder"", ""gender"":""F"", ""age"":23, ""office"":""Sidney"", ""department"":""Sales"", ""position"":""Sales Assistant"", ""fullTime"":""N"", ""profession"":""General"", ""salary"":85600, ""employDate"":""2010-09-19T21:00:00.000Z""},
	{""ssn"":""650-34-2667"", ""firstName"":""Finn"", ""lastName"":""Camacho"", ""gender"":""M"", ""age"":47, ""office"":""San Francisco"", ""department"":""Support"", ""position"":""Support Engineer"", ""fullTime"":""N"", ""profession"":""Technical"", ""salary"":87500, ""employDate"":""2009-07-06T21:00:00.000Z""},
	{""ssn"":""277-75-4031"", ""firstName"":""Fiona"", ""lastName"":""Green"", ""gender"":""F"", ""age"":48, ""office"":""San Francisco"", ""department"":""Management"", ""position"":""Chief Operating Officer"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":850000, ""employDate"":""2010-03-10T22:00:00.000Z""},
	{""ssn"":""898-99-5854"", ""firstName"":""Garrett"", ""lastName"":""Winters"", ""gender"":""M"", ""age"":63, ""office"":""Tokyo"", ""department"":""Accounting"", ""position"":""Accountant"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":170750, ""employDate"":""2011-07-24T21:00:00.000Z""},
	{""ssn"":""734-70-0234"", ""firstName"":""Gavin"", ""lastName"":""Cortez"", ""gender"":""M"", ""age"":22, ""office"":""San Francisco"", ""department"":""Development"", ""position"":""Team Leader"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":235500, ""employDate"":""2008-10-25T21:00:00.000Z""},
	{""ssn"":""878-74-0876"", ""firstName"":""Gavin"", ""lastName"":""Joyce"", ""gender"":""M"", ""age"":42, ""office"":""Edinburgh"", ""department"":""Development"", ""position"":""Developer"", ""fullTime"":""N"", ""profession"":""Technical"", ""salary"":92575, ""employDate"":""2010-12-21T22:00:00.000Z""},
	{""ssn"":""454-68-2098"", ""firstName"":""Gloria"", ""lastName"":""Little"", ""gender"":""F"", ""age"":59, ""office"":""New York"", ""department"":""Information Technologies"", ""position"":""Systems Administrator"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":237500, ""employDate"":""2009-04-09T21:00:00.000Z""},
	{""ssn"":""424-58-8544"", ""firstName"":""Haley"", ""lastName"":""Kennedy"", ""gender"":""F"", ""age"":43, ""office"":""London"", ""department"":""Advertisement"", ""position"":""Senior Marketing Designer"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":313500, ""employDate"":""2012-12-17T22:00:00.000Z""},
	{""ssn"":""720-23-5609"", ""firstName"":""Hermione"", ""lastName"":""Butler"", ""gender"":""F"", ""age"":47, ""office"":""London"", ""department"":""Management"", ""position"":""Regional Director"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":356250, ""employDate"":""2011-03-20T22:00:00.000Z""},
	{""ssn"":""119-92-9522"", ""firstName"":""Herod"", ""lastName"":""Chandler"", ""gender"":""M"", ""age"":59, ""office"":""San Francisco"", ""department"":""Sales"", ""position"":""Sales Assistant"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":137500, ""employDate"":""2012-08-05T21:00:00.000Z""},
	{""ssn"":""262-61-1588"", ""firstName"":""Hope"", ""lastName"":""Fuentes"", ""gender"":""F"", ""age"":41, ""office"":""San Francisco"", ""department"":""Inventory"", ""position"":""Secretary"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":109850, ""employDate"":""2010-02-11T22:00:00.000Z""},
	{""ssn"":""113-67-1129"", ""firstName"":""Howard"", ""lastName"":""Hatfield"", ""gender"":""M"", ""age"":51, ""office"":""San Francisco"", ""department"":""Inventory"", ""position"":""Office Manager"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":164500, ""employDate"":""2008-12-15T22:00:00.000Z""},
	{""ssn"":""795-41-3485"", ""firstName"":""Jackson"", ""lastName"":""Bradshaw"", ""gender"":""M"", ""age"":65, ""office"":""New York"", ""department"":""Management"", ""position"":""Director"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":645750, ""employDate"":""2008-09-25T21:00:00.000Z""},
	{""ssn"":""638-06-9982"", ""firstName"":""Jena"", ""lastName"":""Gaines"", ""gender"":""F"", ""age"":30, ""office"":""London"", ""department"":""Inventory"", ""position"":""Office Manager"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":90560, ""employDate"":""2008-12-18T22:00:00.000Z""},
	{""ssn"":""299-64-1716"", ""firstName"":""Jeanette"", ""lastName"":""Caldwell"", ""gender"":""F"", ""age"":30, ""office"":""New York"", ""department"":""Development"", ""position"":""Development Lead"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":345000, ""employDate"":""2011-09-02T21:00:00.000Z""},
	{""ssn"":""112-42-4156"", ""firstName"":""Jennifer"", ""lastName"":""Acosta"", ""gender"":""F"", ""age"":43, ""office"":""Edinburgh"", ""department"":""Development"", ""position"":""Junior Javascript Developer"", ""fullTime"":""N"", ""profession"":""Technical"", ""salary"":75650, ""employDate"":""2013-01-31T22:00:00.000Z""},
	{""ssn"":""426-78-9936"", ""firstName"":""Jennifer"", ""lastName"":""Chang"", ""gender"":""F"", ""age"":28, ""office"":""Singapore"", ""department"":""Management"", ""position"":""Regional Director"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":357650, ""employDate"":""2010-11-13T22:00:00.000Z""},
	{""ssn"":""140-91-4638"", ""firstName"":""Jonas"", ""lastName"":""Alexander"", ""gender"":""M"", ""age"":30, ""office"":""San Francisco"", ""department"":""Development"", ""position"":""Developer"", ""fullTime"":""N"", ""profession"":""Technical"", ""salary"":86500, ""employDate"":""2010-07-13T21:00:00.000Z""},
	{""ssn"":""559-69-0244"", ""firstName"":""Lael"", ""lastName"":""Greer"", ""gender"":""M"", ""age"":21, ""office"":""London"", ""department"":""Information Technologies"", ""position"":""Systems Administrator"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":103500, ""employDate"":""2009-02-26T22:00:00.000Z""},
	{""ssn"":""618-49-1337"", ""firstName"":""Martina"", ""lastName"":""Mccray"", ""gender"":""F"", ""age"":46, ""office"":""Edinburgh"", ""department"":""Support"", ""position"":""Sales Support"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":324050, ""employDate"":""2011-03-08T22:00:00.000Z""},
	{""ssn"":""288-28-3828"", ""firstName"":""Michael"", ""lastName"":""Bruce"", ""gender"":""M"", ""age"":29, ""office"":""Singapore"", ""department"":""Development"", ""position"":""Javascript Developer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":183000, ""employDate"":""2011-06-26T21:00:00.000Z""},
	{""ssn"":""242-50-8525"", ""firstName"":""Michael"", ""lastName"":""Silva"", ""gender"":""M"", ""age"":66, ""office"":""London"", ""department"":""Advertisement"", ""position"":""Marketing Designer"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":198500, ""employDate"":""2012-11-26T22:00:00.000Z""},
	{""ssn"":""477-57-3419"", ""firstName"":""Michelle"", ""lastName"":""House"", ""gender"":""F"", ""age"":37, ""office"":""Sidney"", ""department"":""Support"", ""position"":""Integration Specialist"", ""fullTime"":""N"", ""profession"":""Technical"", ""salary"":95400, ""employDate"":""2011-06-01T21:00:00.000Z""},
	{""ssn"":""592-61-1531"", ""firstName"":""Olivia"", ""lastName"":""Liang"", ""gender"":""F"", ""age"":64, ""office"":""Singapore"", ""department"":""Support"", ""position"":""Support Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":234500, ""employDate"":""2011-02-02T22:00:00.000Z""},
	{""ssn"":""645-30-1023"", ""firstName"":""Paul"", ""lastName"":""Byrd"", ""gender"":""M"", ""age"":64, ""office"":""New York"", ""department"":""Finance"", ""position"":""Chief Financial Officer"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":725000, ""employDate"":""2010-06-08T21:00:00.000Z""},
	{""ssn"":""552-13-0673"", ""firstName"":""Prescott"", ""lastName"":""Bartlett"", ""gender"":""M"", ""age"":27, ""office"":""London"", ""department"":""Inventory"", ""position"":""Technical Author"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":145000, ""employDate"":""2011-05-06T21:00:00.000Z""},
	{""ssn"":""536-32-8133"", ""firstName"":""Quinn"", ""lastName"":""Flynn"", ""gender"":""F"", ""age"":22, ""office"":""Edinburgh"", ""department"":""Support"", ""position"":""Support Lead"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":342000, ""employDate"":""2013-03-02T22:00:00.000Z""},
	{""ssn"":""631-65-9469"", ""firstName"":""Rhona"", ""lastName"":""Davidson"", ""gender"":""F"", ""age"":55, ""office"":""Tokyo"", ""department"":""Support"", ""position"":""Integration Specialist"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":327900, ""employDate"":""2010-10-13T21:00:00.000Z""},
	{""ssn"":""463-68-9850"", ""firstName"":""Sakura"", ""lastName"":""Yamamoto"", ""gender"":""F"", ""age"":37, ""office"":""Tokyo"", ""department"":""Support"", ""position"":""Support Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":139575, ""employDate"":""2009-08-18T21:00:00.000Z""},
	{""ssn"":""284-43-2868"", ""firstName"":""Serge"", ""lastName"":""Baldwin"", ""gender"":""M"", ""age"":64, ""office"":""Singapore"", ""department"":""Marketing"", ""position"":""Data Coordinator"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":138575, ""employDate"":""2012-04-08T21:00:00.000Z""},
	{""ssn"":""722-63-9562"", ""firstName"":""Shad"", ""lastName"":""Decker"", ""gender"":""M"", ""age"":51, ""office"":""Edinburgh"", ""department"":""Management"", ""position"":""Regional Director"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":183000, ""employDate"":""2008-11-12T22:00:00.000Z""},
	{""ssn"":""885-16-6831"", ""firstName"":""Shou"", ""lastName"":""Itou"", ""gender"":""M"", ""age"":20, ""office"":""Tokyo"", ""department"":""Marketing"", ""position"":""Regional Marketing"", ""fullTime"":""Y"", ""profession"":""General"", ""salary"":163000, ""employDate"":""2011-08-13T21:00:00.000Z""},
	{""ssn"":""648-37-7366"", ""firstName"":""Sonya"", ""lastName"":""Frost"", ""gender"":""F"", ""age"":23, ""office"":""Edinburgh"", ""department"":""Development"", ""position"":""Software Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":103600, ""employDate"":""2008-12-12T22:00:00.000Z""},
	{""ssn"":""221-97-8867"", ""firstName"":""Suki"", ""lastName"":""Burks"", ""gender"":""F"", ""age"":53, ""office"":""London"", ""department"":""Development"", ""position"":""Developer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":114500, ""employDate"":""2009-10-21T21:00:00.000Z""},
	{""ssn"":""521-59-3725"", ""firstName"":""Tatyana"", ""lastName"":""Fitzpatrick"", ""gender"":""F"", ""age"":19, ""office"":""London"", ""department"":""Management"", ""position"":""Regional Director"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":385750, ""employDate"":""2010-03-16T22:00:00.000Z""},
	{""ssn"":""203-50-9332"", ""firstName"":""Thor"", ""lastName"":""Walton"", ""gender"":""M"", ""age"":61, ""office"":""New York"", ""department"":""Development"", ""position"":""Developer"", ""fullTime"":""N"", ""profession"":""Technical"", ""salary"":98540, ""employDate"":""2013-08-10T21:00:00.000Z""},
	{""ssn"":""731-48-4893"", ""firstName"":""Tiger"", ""lastName"":""Nixon"", ""gender"":""M"", ""age"":61, ""office"":""Edinburgh"", ""department"":""Development"", ""position"":""System Architect"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":320800, ""employDate"":""2011-04-24T21:00:00.000Z""},
	{""ssn"":""158-77-9818"", ""firstName"":""Timothy"", ""lastName"":""Mooney"", ""gender"":""M"", ""age"":37, ""office"":""London"", ""department"":""Inventory"", ""position"":""Office Manager"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":136200, ""employDate"":""2008-12-10T22:00:00.000Z""},
	{""ssn"":""863-75-3805"", ""firstName"":""Unity"", ""lastName"":""Butler"", ""gender"":""M"", ""age"":47, ""office"":""San Francisco"", ""department"":""Advertisement"", ""position"":""Marketing Designer"", ""fullTime"":""N"", ""profession"":""General"", ""salary"":85675, ""employDate"":""2009-12-08T22:00:00.000Z""},
	{""ssn"":""625-88-1262"", ""firstName"":""Vivian"", ""lastName"":""Harrell"", ""gender"":""F"", ""age"":62, ""office"":""San Francisco"", ""department"":""Finance"", ""position"":""Financial Controller"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":452500, ""employDate"":""2009-02-13T22:00:00.000Z""},
	{""ssn"":""291-42-0274"", ""firstName"":""Yuri"", ""lastName"":""Berry"", ""gender"":""M"", ""age"":40, ""office"":""New York"", ""department"":""Marketing"", ""position"":""Chief Marketing Officer"", ""fullTime"":""Y"", ""profession"":""Management"", ""salary"":675000, ""employDate"":""2009-06-24T21:00:00.000Z""},
	{""ssn"":""494-90-1069"", ""firstName"":""Zenaida"", ""lastName"":""Frank"", ""gender"":""F"", ""age"":63, ""office"":""New York"", ""department"":""Development"", ""position"":""Software Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":125250, ""employDate"":""2010-01-03T22:00:00.000Z""},
	{""ssn"":""821-36-9283"", ""firstName"":""Zorina"", ""lastName"":""Serrano"", ""gender"":""F"", ""age"":56, ""office"":""San Francisco"", ""department"":""Development"", ""position"":""Software Engineer"", ""fullTime"":""Y"", ""profession"":""Technical"", ""salary"":115000, ""employDate"":""2012-05-31T21:00:00.000Z""}
]"
5mrLReyg,patt,STANAANDREY,VeriLog,Thursday 2nd of November 2023 11:48:48 AM CDT,"module patt(
	input clk, rst,
	input x,
	output reg o
);
	localparam S0 = 0, S1 = 1, S2 = 2, S3 = 3, S4 = 4;
	reg st, st_nxt;
	always @(*)
		case (st)
		S0: 
			if (x) st_nxt = S1;
			else st_nxt = S0;
		S1:
			if (!x) st_nxt = S2;
			else st_nxt = S1;
		S2:
			if (x) st_nxt = S3;
			else st_nxt = S0;
		S3:
			if (x) st_nxt = S4;
			else st_nxt = S2;
		S4:
			if (x) st_nxt = S1;
			else st_nxt = S2;
		endcase
	always @(*) begin
		o = 0;
		case (st)
		S3: if (x) o = 1;
		endcase
	end
	always @(posedge clk, negedge rst)
		if (!rst) st <= S0;
		else st <= st_nxt;
endmodule


module patt_tb;
	reg clk, rst, x;
	wire o;
	patt inst(.clk(clk), .rst(rst), .x(x));
	localparam CLK_PERIOD = 100, RST_PULSE = 10, CLK_CYCLES = 5;
    initial begin
        clk = 0;
        repeat (2*CLK_CYCLES)
            #(CLK_PERIOD/2) clk=~clk;
    end
    initial begin
        rst = 0;
        #(RST_PULSE) rst = 1;
    end
    initial begin
        x=0;
        #(1*CLK_PERIOD) x=0;
        #(1*CLK_PERIOD) x=1;
        #(1*CLK_PERIOD) x=1;
    end
endmodule
"
WdYZiPr8,modals,Arexils,Python,Thursday 2nd of November 2023 11:36:10 AM CDT,"class NameModal(miru.Modal):
    name = miru.TextInput(
        label='Name',
        required=True,
    )

    async def callback(self, ctx: miru.ModalContext) -> None:
        await ctx.respond(f""Your name: `{self.name.value}`"")


class BasicView(miru.View):
    @miru.button(label='Input name', style=hikari.ButtonStyle.PRIMARY)
    async def modal_button(self, button: miru.Button, ctx: miru.ViewContext) -> None:
        modal = NameModal(title='Your name?')
        await ctx.respond_with_modal(modal)


@command_test.child()
@lightbulb.command(
    'test_1',
    'nothing',
    pass_options=True,
    auto_defer=True,
)
@lightbulb.implements(lightbulb.SlashSubCommand)
async def command_test_1(
    ctx: lightbulb.Context,
):
    view = BasicView(timeout=60)
    message = await ctx.respond(components=view)
    await view.start(message)

    # How to get value from modal here. But not in callback
    value_from_modal = '?'
"
507tzvTB,test,Royalzombie222,Lua,Thursday 2nd of November 2023 11:34:12 AM CDT,"

function godKit(plr)
    commands.exec(""give ""..plr.."" netherite_axe{Enchantments:[{id:sharpness,lvl:255},{id:fire_aspect,lvl:1}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
    commands.exec(""give ""..plr.."" netherite_pickaxe{Enchantments:[{id:efficiency,lvl:4},{id:fortune,lvl:5}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
    commands.exec(""give ""..plr.."" netherite_shovel{Enchantments:[{id:efficiency,lvl:4}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
    commands.exec(""give ""..plr.."" netherite_sword{Enchantments:[{id:sharpness,lvl:255}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
    commands.exec(""give ""..plr.."" netherite_helmet{Enchantments:[{id:protection,lvl:255}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
    commands.exec(""give ""..plr.."" netherite_chestplate{Enchantments:[{id:protection,lvl:255}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
    commands.exec(""give ""..plr.."" netherite_leggings{Enchantments:[{id:protection,lvl:255}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
    commands.exec(""give ""..plr.."" netherite_boots{Enchantments:[{id:protection,lvl:255}],Unbreakable:1,affix_data:{rarity:'rare', affixes:{'apotheosis:socket':6.0}}}"")
end

godKit(""Butt_Hunter69"")
"
24YbZKEw,31. Infamous {Registro},elirosecodes,HTML,Thursday 2nd of November 2023 11:27:02 AM CDT,"<link href=""https://dl.dropboxusercontent.com/scl/fi/7pewbms1lz0bvvk7nvznz/infame.css?rlkey=fhaxjh2tjj37johd4unfsrkn8&dl=0"" rel=""stylesheet""><link rel=""stylesheet"" href=""//icons.cappuccicons.com/cpf.css""><div class=""infame""><div class=""infame-bdy""><div class=""infame-b1""><div class=""inf-ic""><i class=""cp cp-stars""></i></div><div class=""inf-b1t"">this is infamous</div><div class=""inf-b1s"">registro de fama simple</div></div><div class=""infame-b2""><div class=""inf-b2t"">Texto descriptivo sobre el registro.</div></div><div class=""infame-b3"">

<div class=""inf-bx""><div class=""inf-bx1"" style=""background-image:url(https://via.placeholder.com/70)""></div><div class=""inf-bx2""><div class=""inf-bx2a""><div class=""inf-bx2a1"">Nombre del personaje</div><div class=""inf-bx2a2""><i class=""cp cp-star""></i><i class=""cp cp-star-o""></i><i class=""cp cp-star-o""></i><i class=""cp cp-star-o""></i><i class=""cp cp-star-o""></i></div></div><div class=""inf-bx2b"">Descripción del personaje/fama.</div></div></div>

</div><div class=""infame-b4""><div class=""inf-b4b""><a href=""/"">link 01</a></div><div class=""inf-b4b""><a href=""/"">link 02</a></div><div class=""inf-b4b""><a href=""/"">link 03</a></div><div class=""inf-b4b""><a href=""/"">link 04</a></div></div></div></div><a href=""https://elirosecodes.tumblr.com/""><div class=""gnomo"">elirose</div></a><style>:root{--fm-cl:#F2A65A;--fm-bk:#333333;--fm-bg:#414141;--fm-tx:#ADADAD;}</style>"
jJ8PyFJy,Untitled,soyl,Java,Thursday 2nd of November 2023 11:25:07 AM CDT,"import UI.controller.FilmController;
import UI.model.Film;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import java.time.LocalDate;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@WebMvcTest(FilmController.class)
public class FilmControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @MockBean
    private FilmController filmController;

    private ObjectMapper objectMapper = new ObjectMapper();

    @Test
    public void testCheckBodyWhenFilmNameIsEmptyThenThrowValidationException() throws Exception {
        Film film = new Film(1,""ab"",""dec"",LocalDate.now(),2);
        mockMvc.perform(post(""/film"")
                        .content(objectMapper.writeValueAsString(film))
                        .contentType(MediaType.APPLICATION_JSON))
                .andExpect(status().isBadRequest());
    }

    @Test
    public void testCheckBodyWhenFilmDescriptionIsLongerThan200CharactersThenThrowValidationException() throws Exception {
        String longDescription = new String(new char[201]).replace(""\0"", ""a"");
        Film film = new Film(1,""ab"",longDescription,LocalDate.now(), 120);
        mockMvc.perform(post(""/film"")
                        .content(objectMapper.writeValueAsString(film))
                        .contentType(MediaType.APPLICATION_JSON))
                .andExpect(status().isBadRequest());
    }

    @Test
    public void testCheckBodyWhenFilmReleaseDateIsBefore28thDecember1895ThenThrowValidationException() throws Exception {
        Film film = new Film(1,""dec"",""description"", LocalDate.of(1895, 12, 27), 120);
        mockMvc.perform(post(""/film"")
                        .content(objectMapper.writeValueAsString(film))
                        .contentType(MediaType.APPLICATION_JSON))
                .andExpect(status().isBadRequest());
    }

    @Test
    public void testCheckBodyWhenFilmDurationIsZeroThenThrowValidationException() throws Exception {
        Film film = new Film(1,""ab"",""dec"",LocalDate.now(), 0);
        mockMvc.perform(post(""/film"")
                        .content(objectMapper.writeValueAsString(film))
                        .contentType(MediaType.APPLICATION_JSON))
                .andExpect(status().isBadRequest());
    }

    @Test
    public void testCheckBodyWhenFilmIsValidThenNoExceptionThrown() throws Exception {
        Film film = new Film(1,""ab"",""dec"",LocalDate.now(), 120);
        mockMvc.perform(post(""/film"")
                        .content(objectMapper.writeValueAsString(film))
                        .contentType(MediaType.APPLICATION_JSON))
                .andExpect(status().isOk());
    }
}"
qHfFgwdx,sadd,STANAANDREY,VeriLog,Thursday 2nd of November 2023 11:16:41 AM CDT,"module sadd(
	input clk, rst,
	input x, y,
	output reg z
);
	localparam S0 = 0, S1 = 1;
	reg st, st_nxt;
	always @(*)
		case (st)
		S0:
			if (x & y) st_nxt = S1;
			else st_nxt = S0;
		S1:
			if ((~x) & (~y)) st_nxt = S0;
			else st_nxt = S1;
		endcase

	always @(*) begin
		z = 0;
		case (st)
		S0:
			if (x ^ y) z = 1;
		S1:
			if (x ~^ y) z = 1;
		endcase
	end
		
	always @(posedge clk, negedge rst)
		if (!rst) st <= S0;
		else st <= st_nxt;
endmodule


module sadd_tb;
	reg clk, rst, x, y;
	wire z;
	sadd inst(.clk(clk), .rst(rst), .x(x), .y(y));
	localparam CLK_PERIOD = 100, RST_PULSE = 10, CLK_CYCLES = 5;
	initial begin
		clk = 0;
		repeat (2*CLK_CYCLES)
			#(CLK_PERIOD/2) clk=~clk;
	end
	initial begin
		rst = 0;
		#(RST_PULSE) rst = 1;
	end
	initial begin
		{x,y}='b01;
		#(1*CLK_PERIOD) {x,y}='b10;
		#(1*CLK_PERIOD) {x,y}='b11;
		#(1*CLK_PERIOD) {x,y}='b00;
	end
	
endmodule
"
