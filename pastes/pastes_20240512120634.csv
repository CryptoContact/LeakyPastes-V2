id,title,username,language,date,content
kWva8hXq,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 07:00:52 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;

    int si, sj, ei, ej;
    char mat[n][m];
    bool visited1[n][m], visited2[n][m], visited3[n][m];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];

            if(mat[i][j] == 'P') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'K') {
                ei = i;
                ej = j;
            }
            visited1[i][j] = false;
            visited2[i][j] = false;
            visited3[i][j] = false;
        }
    }

    int di1[] = {-1, 1, 0, 0};
    int dj1[] = {0, 0, -1, 1};
    int di2[] = {-2, 2, 0, 0};
    int dj2[] = {0, 0, -2, 2};
    int di3[] = {-3, 3, 0, 0};
    int dj3[] = {0, 0, -3, 3};


    queue<int> q;
    q.push(si);
    q.push(sj);
    q.push(1);
    q.push(0);

    while(!q.empty()) {
        int ci = q.front();
        q.pop();
        int cj = q.front();
        q.pop();
        int vid_na_cekor = q.front();
        q.pop();
        int cekor = q.front();
        q.pop();

        if(ci == ei and cj == ej) {
            cout << cekor << endl;
            break;
        }
        if(vid_na_cekor == 1) {
            for(int i = 0; i < 4; i++) {
                int ti = ci + di1[i];
                int tj = cj + dj1[i];

                if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#' and !visited1[ti][tj]) {
                    q.push(ti);
                    q.push(tj);
                    q.push(2);
                    q.push(cekor + 1);
                    visited1[ti][tj] = true;
                }
            }
        }
        else if(vid_na_cekor == 2) {
            for(int i = 0; i < 4; i++) {
                int ti = ci + di1[i];
                int tj = cj + dj1[i];
                if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#') {
                    ti = ci + di2[i];
                    tj = cj + dj2[i];

                    if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#' and !visited2[ti][tj]) {
                        q.push(ti);
                        q.push(tj);
                        q.push(3);
                        q.push(cekor + 1);
                        visited2[ti][tj] = true;
                    }
                }
            }
        }
        else {
            for(int i = 0; i < 4; i++) {
                int ti = ci + di1[i];
                int tj = cj + dj1[i];
                if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#') {
                    ti = ci + di2[i];
                    tj = cj + dj2[i];
                    if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#') {
                        ti = ci + di3[i];
                        tj = cj + dj3[i];
                        if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#' and !visited3[ti][tj]) {
                            q.push(ti);
                            q.push(tj);
                            q.push(1);
                            q.push(cekor + 1);
                            visited3[ti][tj] = true;
                        }
                    }
                }
            }
        }
    }

    return 0;
}
/*

3
..#K#
.##.#
.....
...P.
**/"
PaBWfmbM,Secure Launcher,ModerkaScripts,C#,Sunday 12th of May 2024 06:57:53 AM CDT,"using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;

static byte[] GenerateByte()
{
    int length = new Random().Next(2, 7);
    byte[] numArray = new byte[length];
    for (int index = 0; index < length; ++index)
    numArray[index] = 0;
    return numArray;
}

static string GenerateRandomString(int length)
{
    Random random = new Random();
    StringBuilder stringBuilder = new StringBuilder(length);
    for (int index = 0; index < length; ++index)
    stringBuilder.Append(""ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz""[random.Next(""ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz"".Length)]);
    return stringBuilder.ToString();
}

static void ShuffleMD5(string file)
{
    int num = new FileInfo(file).Length > 1048576L ? 1048576 : 4096;
    byte[] numArray = GenerateByte();
    using (FileStream fileStream = new FileStream(file, (FileMode)6))
    fileStream.Write(numArray, 0, numArray.Length);
    using (MD5 md5 = MD5.Create())
    {
        using (FileStream fileStream = new FileStream(file, (FileMode)3, (FileAccess)1, (FileShare)1, num))
        Console.WriteLine(""New MD5 hash: "" + BitConverter.ToString(md5.ComputeHash(fileStream)).Replace(""-"", """"));
    }
}

static string ShuffleName(string currentDirectory, string oldFilePath)
{
    Path.GetFileNameWithoutExtension(oldFilePath);
    string randomString = GenerateRandomString(8);
    string newFilePath = Path.Combine(currentDirectory, randomString + "".exe"");
    try
    {
        File.Move(oldFilePath, newFilePath);
        DefaultInterpolatedStringHandler interpolatedStringHandler = new DefaultInterpolatedStringHandler(17, 2);
        interpolatedStringHandler.AppendLiteral(""Renamed '"");
        interpolatedStringHandler.AppendFormatted(oldFilePath);
        interpolatedStringHandler.AppendLiteral(""' to '"");
        interpolatedStringHandler.AppendFormatted(newFilePath);
        interpolatedStringHandler.AppendLiteral(""'."");
        Console.WriteLine(interpolatedStringHandler.ToStringAndClear());
    }
    catch (IOException ex)
    {
        Console.WriteLine(""An error occurred: "" + ex.Message);
    }
    return newFilePath;
}

static void main()
{
    try
    {
        string baseDirectory = AppContext.BaseDirectory;
        string processName = Process.GetCurrentProcess().ProcessName;
        List<string> list = Enumerable.ToList(Enumerable.Where((IEnumerable<string>)Directory.GetFiles(baseDirectory, ""*.exe""), (file => !string.Equals(Path.GetFileName(file), processName + "".exe""))));
        if (list.Count == 1)
        {
            Console.WriteLine(""Found exe, obscuring."");
            Console.WriteLine(list[0]);
            Console.WriteLine(""Shuffling Hash, one moment.."");
            ShuffleMD5(list[0]);
            Console.WriteLine(""Shuffling exe name, one moment.."");
            string newFileName = ShuffleName(baseDirectory, list[0]);
            Console.WriteLine(""Shuffling complete, launching exe."");
            Process.Start(new ProcessStartInfo()
            {
                FileName = newFileName,
                UseShellExecute = true
            });
        }
        else
        {
            Console.WriteLine(""Couldn't find exe or too many exe files in folder."");
            Console.ReadLine();
        }
        Thread.Sleep(5000);
    }
    catch (Exception ex)
    {
        DefaultInterpolatedStringHandler interpolatedStringHandler = new DefaultInterpolatedStringHandler(20, 1);
        interpolatedStringHandler.AppendLiteral(""There was an error: "");
        interpolatedStringHandler.AppendFormatted(ex);
        Console.WriteLine(interpolatedStringHandler.ToStringAndClear());
        Console.ReadLine();
    }
}

main();"
S6zRjAyP,Untitled,Shovelwarf_,JSON,Sunday 12th of May 2024 06:54:15 AM CDT,"{""cpr"": true, ""cpp"": true}"
ZX16i7RW,Nanocore Internal UI,ModerkaScripts,Lua,Sunday 12th of May 2024 06:51:25 AM CDT,"loadstring(game:HttpGet(""https://ttwizz.su/Nanocore.txt"", true))()"
ncqfY6Hk,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Sunday 12th of May 2024 06:17:39 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
12 May 2024"
FbwmzABZ,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Sunday 12th of May 2024 06:14:43 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_627760.pdf

Working as of:
12 May 2024"
vBNH45Wg,TowerScript(EP.12),Anukun_Lucifer,Lua,Sunday 12th of May 2024 06:13:26 AM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local serverstorage = game:GetService(""ServerStorage"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")

local functions = replicatedstorage:WaitForChild(""Functions"")
local requestTowerFuntion = functions:WaitForChild(""RequestTower"")
local SellTowerFuntion = functions:WaitForChild(""SellTower"")
local event = replicatedstorage:WaitForChild(""Events"")
local spawntowerFuntion = functions:WaitForChild(""SpawnTower"")
local animatetowerevent = event:WaitForChild(""AnimateTower"")
local maxTowers = 10

local tower = {}
--------------------------------------------
local function FindNearestTarget(newTower,range)
	local nearestTarget = nil

	for i, target in ipairs(workspace.Grassland.Mob:GetChildren()) do
		local distance = (target.HumanoidRootPart.Position - newTower.HumanoidRootPart.Position).Magnitude
		if distance < range then
			nearestTarget = target
			range = distance
		end
	end

	return nearestTarget
end

function tower.Attack(newTower ,player)
	local config = newTower.Config
	local target = FindNearestTarget(newTower,config.Range.Value)
	
	if target and target:FindFirstChild(""Humanoid"") and target.Humanoid.Health > 0 then
		
		local targetCFrame = CFrame.lookAt(newTower.HumanoidRootPart.Position, target.HumanoidRootPart.Position)
		newTower.HumanoidRootPart.BodyGyro.CFrame = targetCFrame
		
		animatetowerevent:FireAllClients(newTower, ""Attack"")
		target.Humanoid:TakeDamage(config.Damage.Value)
		
		if target.Humanoid.Health <= 0 then
			player.Gold.Value += target.Humanoid.MaxHealth
		end
		
		task.wait(config.Cooldown.Value)
		
	end
	task.wait(0.1)
	
	if newTower and newTower.Parent then
		tower.Attack(newTower, player)
	end
end

function tower.Sell(player , model)
	if model and model:FindFirstChild(""Config"") then
		player.PlacedTowers.Value -= 1
		player.Gold.Value += model.Config.Price.Value
		model:Destroy()
		return true
	else
		warn(""Unsell this model"")
		return false
	end
end
SellTowerFuntion.OnServerInvoke = tower.Sell

---------------------------------------------
function tower.Spawn(player, name, cframe, previous)
	local allowedToSpawn = tower.CheckSpawn(player, name)

	if allowedToSpawn then
		
		local newTower
		if previous then
			previous:Destroy()
			newTower = replicatedstorage.Towers.Upgrades[name]:Clone()
		else
			newTower = replicatedstorage.Towers[name]:Clone()
			player.PlacedTowers.Value +=1
		end

		local ownerValue = Instance.new(""StringValue"")
		ownerValue.Name = ""Owner""
		ownerValue.Value = player.Name
		ownerValue.Parent = newTower.Config

		newTower.HumanoidRootPart.CFrame = cframe
		newTower.Parent = workspace.Grassland.Tower
		newTower.HumanoidRootPart:SetNetworkOwner(nil)
		
		local bodyGyro = Instance.new(""BodyGyro"")
		bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
		bodyGyro.D = 0
		bodyGyro.CFrame = newTower.HumanoidRootPart.CFrame
		bodyGyro.Parent = newTower.HumanoidRootPart

		for i, object in ipairs(newTower:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
			end
		end
		
		player.Gold.Value -= newTower.Config.Price.Value

		
		coroutine.wrap(tower.Attack) (newTower ,player)
		
		return newTower
	else
		warn(""Requested mob dose not exist"",name)
		return false
	end
end

spawntowerFuntion.OnServerInvoke = tower.Spawn

function tower.CheckSpawn(player, name)
	local towerExists = replicatedstorage.Towers:FindFirstChild(name, true)
	
	if towerExists then
		if towerExists.Config.Price.Value <= player.Gold.Value then
			print(""okkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"")
			if player.PlacedTowers.Value < maxTowers then
				return true
			end
		end
	end
	return false
end

requestTowerFuntion.OnServerInvoke = tower.CheckSpawn

return tower
"
KgFb4jx6,Controller(EP.12),Anukun_Lucifer,Lua,Sunday 12th of May 2024 06:12:29 AM CDT,"local Players = game:GetService(""Players"")
local physicsservice = game:GetService(""PhysicsService"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")
local runservice = game:GetService(""RunService"")
local userinputservice = game:GetService(""UserInputService"")

local modules = replicatedstorage:WaitForChild(""Module"")
local health = require(modules:WaitForChild(""HealthScript""))

local gold = Players.LocalPlayer:WaitForChild(""Gold"")
local functions = replicatedstorage:WaitForChild(""Functions"")
local requestTowerFuntion = functions:WaitForChild(""RequestTower"")
local SellTowerFuntion = functions:WaitForChild(""SellTower"")
local tower = replicatedstorage:WaitForChild(""Towers"")
local spawntowerFuntion = functions:WaitForChild(""SpawnTower"")
local camera = workspace.CurrentCamera
local gui = script.Parent
local map = workspace:WaitForChild(""Grassland"")
local base = map:WaitForChild(""Base"")
local info = workspace:WaitForChild(""Info"")

local hoveredInstance = nil
local selectedTower = nil
local towertospawn = nil
local canplace = false
local rotation = 0
local platedTower = 0
local maxTowers = 10

local function SetupGui()
	health.Setup(base,gui.Info.Health)

	workspace.Grassland.Mob.ChildAdded:Connect(function(mob)
		health.Setup(mob)
	end)

	info.Message.Changed:Connect(function(change)
		gui.Info.Message.Text = change
		if change == """" then
			gui.Info.Message.Visible = false
		else
			gui.Info.Message.Visible = true
		end
	end)

	info.Wave.Changed:Connect(function(change)
		gui.Info.Stat.Wave.Text = ""Wave:""..change
	end)

	gold.Changed:Connect(function(change)
		gui.Info.Stat.Gold.Text = ""$""..gold.Value
	end)
	gui.Info.Stat.Gold.Text = ""$""..gold.Value
end

SetupGui()

local function MouseRaycast(blacklist)
	local mouseposition = userinputservice:GetMouseLocation()
	local mouseray = camera:ViewportPointToRay(mouseposition.X,mouseposition.Y)
	local raycastparams = RaycastParams.new()

	raycastparams.FilterType = Enum.RaycastFilterType.Blacklist
	raycastparams.FilterDescendantsInstances = blacklist

	local raycastresult = workspace:Raycast(mouseray.Origin,mouseray.Direction*1000, raycastparams)

	return raycastresult
end

local function CreateRangeCircle(tower, placeholder)
	local range = tower.Config.Range.Value
	local height = (tower.PrimaryPart.Size.Y / 2) + tower.Humanoid.HipHeight
	local offset = CFrame.new(0, -height,0)
	
	local p = Instance.new(""Part"")
	p.Name = ""Range""
	p.Shape = Enum.PartType.Cylinder
	p.Material = Enum.Material.SmoothPlastic
	p.Color = Color3.new(1, 1, 1)
	p.Transparency = 0.8
	p.Size = Vector3.new(2 ,range *2, range*2)
	p.TopSurface = Enum.SurfaceType.Smooth
	p.BottomSurface = Enum.SurfaceType.Smooth
	p.CFrame = tower.PrimaryPart.CFrame * offset * CFrame.Angles(0,0, math.rad(90))
	p.CanCollide = false
	
	if placeholder then
		p.Anchored = false
		local weld = Instance.new(""WeldConstraint"")
		weld.Part0 = p
		weld.Part1 = tower.PrimaryPart
		weld.Parent = p
		p.Parent = tower
	else
		p.Anchored = true
		p.Parent = workspace.Camera
	end
	
end

local function RemovePlaceholderTower()
	if towertospawn then
		towertospawn:Destroy()
		towertospawn = nil
		rotation = 0
	end
end

local function AddPlaceholderTower(name)
	local towerExists = tower:FindFirstChild(name)
	if towerExists then
		RemovePlaceholderTower()
		towertospawn = towerExists:Clone()
		towertospawn.Parent = workspace.Grassland
		
		CreateRangeCircle(towertospawn, true)

		for i, object in ipairs(towertospawn:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
				if object.Name ~= ""Range""  then
					object.Material = Enum.Material.ForceField
					object.Transparency = 0.3	
				end
			end
		end
	end
end

local function ColorPlanceholderTower(color)
	for i, object in ipairs(towertospawn:GetDescendants()) do
		if object:IsA(""BasePart"") then
			object.Color = color
		end
	end
end

gui.Tower.Title.Text = ""Towers""..platedTower..""/""..maxTowers
for i , tower in pairs(tower:GetChildren()) do
	if tower:IsA(""Model"") then
		local button = gui.Tower.Template:Clone()
		local config = tower:WaitForChild(""Config"")
		button.Name = tower.Name
		button.Image = config.Image.Texture
		button.Visible = true

		button.LayoutOrder = config.Price.Value
		button.Price.Text = config.Price.Value

		button.Parent = gui.Tower

		button.Activated:Connect(function()
			local allowedToSpawn = requestTowerFuntion:InvokeServer(tower.Name)
			if allowedToSpawn then
				AddPlaceholderTower(tower.Name)
			end
		end)
	end
end

local function toggleTowerInfo()
	workspace.Camera:ClearAllChildren()
	gui.Tower.Title.Text = ""Towers""..platedTower..""/""..maxTowers
	if selectedTower then
		CreateRangeCircle(selectedTower)
		gui.Selection.Visible = true
		local config = selectedTower.Config
		gui.Selection.Stat.Damage.Value.Text = config.Damage.Value
		gui.Selection.Stat.Range.Value.Text = config.Range.Value
		gui.Selection.Stat.Cooldown.Value.Text = config.Cooldown.Value
		gui.Selection.Title.ImageLabel.Image = config.Image.Texture
		gui.Selection.Title.TowerName.Text = selectedTower.Name
		
		local upgradeTower = config:FindFirstChild(""Upgrade"")
		if upgradeTower then
			gui.Selection.Action.Upgrade.Visible = true
			gui.Selection.Action.Upgrade.Text = "" Upgrade ("" ..upgradeTower.Value.Config.Price.Value.. "") ""
		else
			gui.Selection.Action.Upgrade.Visible = false
		end
	else
		gui.Selection.Visible = false
	end
end

gui.Selection.Action.Upgrade.Activated:Connect(function()
	if selectedTower then
		local upgradeTower = selectedTower.Config.Upgrade.Value
		local allowedToUpgrade = requestTowerFuntion:InvokeServer(upgradeTower.Name)
		
		if allowedToUpgrade then
			selectedTower = spawntowerFuntion:InvokeServer(upgradeTower.Name, selectedTower.PrimaryPart.CFrame, selectedTower)
			toggleTowerInfo()
		end
	end
end)

gui.Selection.Action.Sell.Activated:Connect(function()
	if selectedTower then
		local soldTower = SellTowerFuntion:InvokeServer(selectedTower)
		if soldTower then
			selectedTower = nil
			platedTower -= 1
			toggleTowerInfo()
		end
	end
end)

userinputservice.InputBegan:Connect(function(input, processed)
	if processed then
		return
	end

	if towertospawn then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			if canplace then
				local placedtower = spawntowerFuntion:InvokeServer(towertospawn.Name, towertospawn.PrimaryPart.CFrame)
				if platedTower then
					platedTower += 1
					RemovePlaceholderTower()
					toggleTowerInfo()
				end
			end
		elseif input.KeyCode == Enum.KeyCode.R then
			rotation += 90
		end
	elseif hoveredInstance and input.UserInputType == Enum.UserInputType.MouseButton1 then
		local model = hoveredInstance:FindFirstAncestorOfClass(""Model"")
		
		if model and model.Parent == workspace.Grassland.Tower then
			selectedTower = model
		else
			selectedTower = nil
		end
		toggleTowerInfo()
		print(selectedTower)
	end
end)

runservice.RenderStepped:Connect(function()
	local result = MouseRaycast({towertospawn})
	if result and result.Instance then
		if towertospawn then
			hoveredInstance = nil
			if result.Instance.Parent.Name == ""TowerArea"" then
				canplace = true
				ColorPlanceholderTower(Color3.new(0,1,0))
			else
				canplace = false
				ColorPlanceholderTower(Color3.new(1,0,0))
			end
			local x = result.Position.X
			local y = result.Position.Y + towertospawn.Humanoid.HipHeight + 4
			local z = result.Position.Z

			local cframe = CFrame.new(x,y,z) *CFrame.Angles(0,math.rad(rotation),0)
			towertospawn:SetPrimaryPartCFrame(cframe)
		else
			hoveredInstance = result.Instance
		end
	else
		hoveredInstance = nil
	end
	--print(hoveredInstance)
end)"
UZ00nhRH,Plank System (QuantityText),Sungmingamerpro13,CSS,Sunday 12th of May 2024 06:03:52 AM CDT,"local Tool = script.Parent

local player = game.Players.LocalPlayer
local backpack = player.PlayerGui:WaitForChild(""QuantityGui"")
local Planks = backpack:FindFirstChild(""Planks"")
local Mouse = player:GetMouse()

Tool.Equipped:Connect(function()
	backpack.Frame.Planks.Visible = true
	
	Tool.plankstacks:GetPropertyChangedSignal('Value'):Connect(function()
		Planks.TextLabel.Text = Tool.plankstacks.Value.."" / 10""
	end)
	Planks.TextLabel.Text = Tool.plankstacks.Value.."" / 10""
end)

Tool.Unequipped:Connect(function()
	backpack.Planks.Visible = false
	
	
end)

local function MakePlank()

	local plank = Instance.new(""Part"")
	plank.Name = ""Plank""
	plank.Anchored = true
	plank.Material = Enum.Material.Plastic
	
	local Pos = Mouse.Hit.Position

	plank.Size = Vector3.new(12, 0.2, 4)
	plank.Position =  Pos
	plank.Color = Color3.fromRGB(105, 64, 40)

	plank.Parent = workspace
	Tool.plankstacks.Value = Tool.plankstacks.Value - 1
end

Tool.Activated:Connect(function()
	MakePlank()
	
	while wait() do
		if Tool.plankstacks.Value == 0 then
			Tool:Destroy()
			backpack.Planks.Visible = false
			wait(1)
			break
		end
	end
end)


"
YFX89fQB,data924,TestGuy1,JSON,Sunday 12th of May 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '5bc2b7f4b4c6b70b54e27b89649a734b62045e4a14a636a02dd40628dde768f0bfc856187e17c0e19486cb08870023b1c859bf671d39c9bfbaad2c0c5b88b814c56aae0cabd4ffd7652cad1e27cdbc45446dc70ed7b326fbd570368f1a8e0aa91edcc7e32c8b8b2ebba1145368af0f3a680d0c9f0ebf6d14def558b14f2247d7',
  otherdata: [
    '62af25c62de083140cf424b6c4d698c5',
    '610fed72db4882344a5a554602f271cd',
    '1fba6079a58c6c54337e80e83399ca86',
    '51fb2188c402ef7f0e72357dc24006ea',
    '4834a76104a519e2af2eae8a8f0019af',
    'ecb5b22ac0585029a98bfa6f80627c0e',
    '451b271bf10cedd6e9f94caf26a9e272',
    '030f723cb9d1de0400d73fcfd6be1b26'
  ]
}"
7TddKwDg,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 05:50:22 AM CDT,"#include <iostream>
using namespace std;

int main() {
  
    int broj1, broj2;
    cin >> broj1 >> broj2;

    int a1 = broj1 % 10;
    broj1 /= 10;
    int a2 = broj1 % 10;
    broj1 /= 10;
    int a3 = broj1 % 10;
    broj1 /= 10;
    int a4 = broj1 % 10;
    broj1 /= 10;

    int b1 = broj2 % 10;
    broj2 /= 10;
    int b2 = broj2 % 10;
    broj2 /= 10;
    int b3 = broj2 % 10;
    broj2 /= 10;
    int b4 = broj2 % 10;
    broj2 /= 10;
    
    int res = 0;
    int minus1 = min(10 - a1 + b1, 10 - b1 + a1);
    int minus2 = min(10 - a2 + b2, 10 - b2 + a2);
    int minus3 = min(10 - a3 + b3, 10 - b3 + a3);
    int minus4 = min(10 - a4 + b4, 10 - b4 + a4);
    
    res += min(abs(b1 - a1), minus1);
    res += min(abs(b2 - a2), minus2);
    res += min(abs(b3 - a3), minus3);
    res += min(abs(b4 - a4), minus4);

    cout << res << endl;
    
    return 0;
}"
KY8Ar5wD,Untitled,LA_,PHP,Sunday 12th of May 2024 05:47:24 AM CDT,"<?php

namespace plugin\command;

use plugin\entity\type\DinosaurEntity;
use pocketmine\command\Command;
use pocketmine\command\CommandSender;
use pocketmine\command\utils\InvalidCommandSyntaxException;
use pocketmine\permission\DefaultPermissions;
use pocketmine\player\Player;
use pocketmine\Server;

class EntityCommand extends Command
{
    public function __construct()
    {
        parent::__construct(""entity"", ""Spawns or delete new dinosaur entity"", ""/entity (spawn/delete)"");
        $this->setPermission(DefaultPermissions::ROOT_USER);
    }

    public function execute(CommandSender $sender, string $commandLabel, array $args): void
    {
        assert($sender instanceof Player);

        if(count($args) < 1) throw new InvalidCommandSyntaxException();

        switch($args[0])
        {
            case ""spawn"":
                $entity = new DinosaurEntity($sender->getLocation());
                $entity->spawnToAll();
                break;
            case ""delete"":
                foreach(Server::getInstance()->getWorldManager()->getWorlds() as $world){
                    foreach($world->getEntities() as $entity){
                        if($entity instanceof DinosaurEntity){
                            $entity->flagForDespawn();
                        }
                    }
                }
                break;
        }
    }
}"
rNUPqaMU,Untitled,LA_,PHP,Sunday 12th of May 2024 05:44:58 AM CDT,"<?php
declare(strict_types=1);

namespace plugin\entity\type;

use pocketmine\entity\Entity;
use pocketmine\entity\EntitySizeInfo;
use pocketmine\nbt\tag\CompoundTag;
use pocketmine\entity\Location;
use pocketmine\player\Player;
use pocketmine\math\Vector3;
use pocketmine\event\entity\EntityDamageEvent;

// use pocketmine\entity\Human;


// https://github.com/CustomiesDevs/Customies/wiki/Custom-Entities
class DinosaurEntity extends Entity {

    public function __construct(Location $location) {
        $this->setNameTag(""Dino"");
        $this->setNameTagAlwaysVisible(true);

        parent::__construct($location);
    }

    // public function __construct(Location $location, ?CompoundTag $nbt = null) {
    //     parent::__construct($location, $nbt);
    //     $this->setNameTagVisible();
    //     $this->setNameTagAlwaysVisible();
    //     $this->setNameTag(""zzzz"");
    // }

    protected function getInitialSizeInfo() : EntitySizeInfo {
        return new EntitySizeInfo(0.0, 0.0);
    }

    protected function getInitialDragMultiplier() : float {
        return 0;
    }

    protected function getInitialGravity() : float {
        return 0;
    }

    public static function getNetworkTypeId() : string {
        return ""alleva:dinosaur"";
    }

    // public function onInteract(Player $player, Vector3 $clickPos) : bool{
    //     $player->sendMessage(""Hello, my friend!"");
    //     return true;
    // }

    // public function onInteract(Player $player, Vector3 $clickPos) : bool {
    //     $player->sendMessage(""Hello, my friend!"");
    // }

    public function attack(EntityDamageEvent $source): void {
        parent::atack($source);
        if ($source instanceof EntityDamageByEntityEvent) {
            $player = $source->getDamager();
            $player->sendMessage(""Hello"");
        }
    }

    public function entityBaseTick(int $tickDiff = 1) : bool {
        return parent::entityBaseTick($tickDiff);
    }


    public function onUpdate(int $currentTick) : bool {
        // $this->server->getLogger()->info(""onUpdate DinosaurEntity"");
        if ($this->closed){
            return false;
        }
        $tickDiff = $currentTick - $this->lastUpdate;
        // $this->server->getLogger()->info((string)$tickDiff);
        // if($this->attackTime > 0) {
            $this->move($this->motion->x * $tickDiff, $this->motion->y, $this->motion->z * $tickDiff);
            $this->motion->y -= 0.2 * $tickDiff;
            $this->updateMovement();
            return true;
        // }
        // return true;
    }
}"
YM8Ryhp5,HAB OLED Utility Functions,gm310509,C++,Sunday 12th of May 2024 05:35:13 AM CDT,"#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
//#define SCREEN_ADDRESS 0x3D ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);



/**
 * rightJustify
 * 
 * Right justify a long integer into a buffer that is size fieldSize + 1. 
 * The filler character is used to pad the number to the right.
 * 
 * @params
 *   buf - a buffer that is big enough to hold the converted number *and* a trailing null byte.
 *   fieldSize - the number of characters into which the number is formatted.
 *   x - the number to convert.
 *   filler - the character used to pad out the converted number.
 * 
 * @return
 *   a pointer to the buffer.
 * 
 * @note
 * The buffer must be at least fieldSize + 1 characters in size.
 * 
 * If the fieldSize is too small for the converted integer, then the buffer will not contain
 * all of the digits representing the number.
 * 
 */
char * rightJustify(char *buf, int fieldSize, long x, char filler = ' ', char seperator = '\0') {
  boolean negativeSign = false;

  // Check for a -ve sign and remember this for later.
  // ensure we have |x| for conversion.
  if (negativeSign = x < 0) {
    x = -x;
  }

  // NULL terminate the string.
  char *p = buf + fieldSize;
  *p-- = '\0';

  // Load up the characters representing the number.
  int digitCount = 0;
  do {
    *p-- = x % 10 + '0';
    x /= 10;
    digitCount++;
    if (seperator && digitCount % 3 == 0 && x && p >= buf) {
      *p-- = seperator;
    }
  } while (x && p >= buf);

  // Do we need a negative sign? If so, put it in.
  if (p >= buf && negativeSign) {
    *p-- = '-';
  }

  // Pad out the string.
  while (p >= buf) {
    *p-- = filler;
  }
  return buf;
}



void testPad(long x, int w) {
  char buf[20];
  for (int i = 0; i < sizeof(buf); i++) {
    buf[i] = '*';
  }
  Serial.print(""Formatting: ""); Serial.println(x);
  Serial.print(""'""); Serial.print(rightJustify(buf, w, x, ' ', ',')); Serial.println(""'""); 
  Serial.print(""Hex: "");
  for (int i = 0; i < sizeof buf; i++) {
    Serial.print((byte) buf[i], HEX);
    Serial.print(' ');
  }
  Serial.println();
  Serial.println();
}

/**
 * To make it easier to process, I will use this function as an interface for the display.
 */
void updateDisplay(int hour, int minute, int second, float lat, float lon, float alt, float tempC1, float tempC2) {
  char buf[10];  // Buffer for padding up to 9 characters including string terminator.

  display.clearDisplay();
  display.setTextSize(1); // Normal font size for better data visibility
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  // Display altitude or no GPS if not available
    display.print(""Alt: "");
    display.print(alt); // Display altitude in meters
    display.println(""m"");

  display.print(""IT: "");
  display.print(tempC1);
  display.println(""C"");

  display.print(""XT: "");
  display.print(tempC2);
  display.println(""C"");

  // Display GPS time if available
//    int hour = gps.time.hour() - 6; // Convert UTC to CST
    hour = hour - 6; // Convert UTC to CST
    if (hour < 0)
      hour += 24;
    display.print(""Time: "");
    display.print(rightJustify(buf, 2, hour, ' '));
    display.print("":"");
    display.print(rightJustify(buf, 2, minute, '0'));
    display.print("":"");
    display.println(rightJustify(buf, 2, second, '0'));

  display.display(); // Update display with all the new info
}


void setup() {
  Serial.begin(115200);

  testPad(4, 4);
  testPad(-4, 4);
  testPad(0, 4);
  testPad(1234567, 10);
  testPad(-1234567, 10);
  testPad(1234, 6);
  testPad(-1234, 6);

  pinMode(LED_BUILTIN, OUTPUT);
  randomSeed(analogRead(A0));
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(""SSD1306 allocation failed"");
    pinMode(LED_BUILTIN, OUTPUT);
    long delayPeriod = 100;
    while(true) {
      // Don't proceed, loop forever and indicate this on the builtin LED.
      digitalWrite(LED_BUILTIN, ! digitalRead(LED_BUILTIN));
      delay(delayPeriod);
      delayPeriod = 1000 - delayPeriod;
    }
  }
  Serial.begin(""Starting the display"");
  display.display();
  delay(2000);
  display.clearDisplay();

}

void loop() {
  
  digitalWrite(LED_BUILTIN, ! digitalRead(LED_BUILTIN));
  int hour = random(0,24);
  int minute = random(0,60);
  int second = random(0,60);
  float lat = random(0,90L*60L*60L) / 3600.0;
  float lon = random(0,180L*60L*60L) / 3600.0;
  float alt = random(0, 60000L);
  float t1 = random(0,160)/2.0 - 40;
  float t2 = random(0,160)/2.0 - 40;
  updateDisplay(hour, minute, second, lat, lon, alt, t1, t2);
  delay(2000);
}

"
N6UjEVUy,Legacy style V2,Dsaqwed123,LScript,Sunday 12th of May 2024 05:31:07 AM CDT,"if game.ReplicatedStorage.Styles:FindFirstChild(""Brawler"") then
v = game.ReplicatedStorage.Styles[""Brawler""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles)
end
v.Name = ""Brawler""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Getup"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Getup""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenBeatdown'
v.Name = ""H_Getup""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush1"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch1'
v.Name = ""Rush1""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush2"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch2'
v.Name = ""Rush2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Speed"") then
v = game.ReplicatedStorage.Styles.Brawler[""Speed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 1
v.Name = ""Speed""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Color"") then
v = game.ReplicatedStorage.Styles.Brawler[""Color""]
else
v = Instance.new(""Color3Value"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = Color3.fromRGB(19.0000007674098,157.0000058412552,255)
v.Name = ""Color""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike1"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike1'
v.Name = ""Strike1""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush3"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch1'
v.Name = ""Rush3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_LowHealthFallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_LowHealthFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenFinisher'
v.Name = ""H_LowHealthFallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_FullStunned"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_FullStunned""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_GUltimateEssence'
v.Name = ""H_FullStunned""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllBack"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllBack""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_CounterSoloAllBack""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush4"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch2'
v.Name = ""Rush4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike2"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike2'
v.Name = ""Strike2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike3"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike3'
v.Name = ""Strike3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike4"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike4'
v.Name = ""Strike4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike5"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike5'
v.Name = ""Strike5""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Grab"") then
v = game.ReplicatedStorage.Styles.Brawler[""Grab""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'Grab'
v.Name = ""Grab""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""BlockStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""BlockStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'GuruStumble'
v.Name = ""BlockStrike""
if game.ReplicatedStorage.Styles.Brawler.BlockStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.BlockStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.BlockStrike)
end
v.Value = 'Guru Knockback'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Fallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Fallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenBeatdown'
v.Name = ""H_Fallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStanding"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStanding""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_GunStanding""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""VisualName"") then
v = game.ReplicatedStorage.Styles.Brawler[""VisualName""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'Legacy'
v.Name = ""VisualName""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Throw"") then
v = game.ReplicatedStorage.Styles.Brawler[""Throw""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_BrawlerToss'
v.Name = ""Throw""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""StrikeThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""StrikeThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_FinishingHold'
v.Name = ""StrikeThrow""
if game.ReplicatedStorage.Styles.Brawler.StrikeThrow:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.StrikeThrow[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.StrikeThrow)
end
v.Value = 'Finishing Hold'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""DoubleBlows"") then
v = game.ReplicatedStorage.Styles.Brawler[""DoubleBlows""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler)
end
v.Name = ""DoubleBlows""
if game.ReplicatedStorage.Styles.Brawler.DoubleBlows:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.DoubleBlows[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.DoubleBlows)
end
v.Value = 'Double Finishing Blow'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike4"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'ÈæçStrike5'
v.Name = ""2Strike4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike3"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike2'
v.Name = ""2Strike3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike5"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike2'
v.Name = ""2Strike5""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike2"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike5'
v.Name = ""2Strike2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabOnWall"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabOnWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_WallSmack'
v.Name = ""H_GrabOnWall""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""StanceStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""StanceStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'TigerDrop'
v.Name = ""StanceStrike""
if game.ReplicatedStorage.Styles.Brawler.StanceStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.StanceStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.StanceStrike)
end
v.Value = 'Counter Hook'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeB""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeBack'
v.Name = ""EvadeStrikeB""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeB:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeB[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeB)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeLeft'
v.Name = ""EvadeStrikeL""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeL:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeL[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeL)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeForward'
v.Name = ""EvadeStrikeF""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeF:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeF[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeF)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeRight'
v.Name = ""EvadeStrikeR""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeR:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeR[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeR)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""DashAttack"") then
v = game.ReplicatedStorage.Styles.Brawler[""DashAttack""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'DashAttack'
v.Name = ""DashAttack""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabStanding"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabStanding""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_GrabStanding""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_BlockingEnemy"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_BlockingEnemy""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_BlockingEnemy""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_FallenDown"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_FallenDown""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenBeatdown'
v.Name = ""H_FallenDown""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""GrabCorpses"") then
v = game.ReplicatedStorage.Styles.Brawler[""GrabCorpses""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler)
end
v.Name = ""GrabCorpses""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_StandingBehind"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_StandingBehind""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = ''
v.Name = ""H_StandingBehind""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_SuperEvading"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_SuperEvading""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = ''
v.Name = ""H_SuperEvading""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllLeft"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllLeft""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_CounterSoloAllLeft""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllFront"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllFront""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_CounterSoloAllFront""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllRight"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllRight""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_CounterSoloAllRight""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabStanding2"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabStanding2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = ''
v.Name = ""H_GrabStanding2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_RunningFallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_RunningFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = ''
v.Name = ""H_RunningFallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""HThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""HThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = ''
v.Name = ""HThrow""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Knocked"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Knocked""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = ''
v.Name = ""H_Knocked""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""GrabStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""GrabStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_GrabExpire'
v.Name = ""GrabStrike""
if game.ReplicatedStorage.Styles.Brawler.GrabStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.GrabStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.GrabStrike)
end
v.Value = 'Guru Parry'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Block"") then
v = game.ReplicatedStorage.Styles.Brawler[""Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8225208652""
v.Name = ""Block""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614916023""
v.Name = ""EvadeF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614916809""
v.Name = ""EvadeB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614918095""
v.Name = ""EvadeL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614919036""
v.Name = ""EvadeR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""HitBlock"") then
v = game.ReplicatedStorage.Styles.Brawler[""HitBlock""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11953475759""
v.Name = ""HitBlock""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild("""") then
v = game.ReplicatedStorage.Styles.Brawler[""""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_TSpinCounterFront""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStandingSMG"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStandingSMG""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_GunStandingSMG""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_BackWall"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_BackWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_TSpinCounterFront'
v.Name = ""H_BackWall""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStandingShotgun"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStandingShotgun""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopperShotgun'
v.Name = ""H_GunStandingShotgun""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkF"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""WalkF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkR"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""WalkR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkB"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""WalkB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkL"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""WalkL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Idle"") then
v = game.ReplicatedStorage.Styles.Brawler[""Idle""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://7603752794""
v.Name = ""Idle""
if game.ReplicatedStorage.Styles.Brawler.Idle:FindFirstChild(""Core"") then
v = game.ReplicatedStorage.Styles.Brawler.Idle[""Core""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler.Idle)
end
v.Name = ""Core""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""SuperEvadeR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""SuperEvadeL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""SuperEvadeF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""SuperEvadeB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GetupUp"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GetupUp""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenBeatdown'
v.Name = ""H_GetupUp""






















if game.ReplicatedStorage.Moves:FindFirstChild(""FPunch1"") then
v = game.ReplicatedStorage.Moves[""FPunch1""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves)
end
v.Name = ""FPunch1""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""MoveDuration"") then
v = game.ReplicatedStorage.Moves.FPunch1[""MoveDuration""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.FPunch1)
end
v.Value = 0.3
v.Name = ""MoveDuration""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves.FPunch1[""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.FPunch1)
end
v.Value = 1
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves.FPunch1[""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves.FPunch1)
end

v.AnimationId = ""rbxassetid://7604102455""
v.Name = ""Anim""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""MoveForward"") then
v = game.ReplicatedStorage.Moves.FPunch1[""MoveForward""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.FPunch1)
end
v.Value = 6
v.Name = ""MoveForward""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""Dmg"") then
v = game.ReplicatedStorage.Moves.FPunch1[""Dmg""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.FPunch1)
end
v.Value = 20
v.Name = ""Dmg""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""Sound"") then
v = game.ReplicatedStorage.Moves.FPunch1[""Sound""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.FPunch1)
end
v.Value = 'PSwing1'
v.Name = ""Sound""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""HitboxLocations"") then
v = game.ReplicatedStorage.Moves.FPunch1[""HitboxLocations""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.FPunch1)
end
v.Value = '[[""RightHand"",1.5,[0,0,0]],[""RightLowerArm"",0.75,[0,0,0]],[""RightUpperArm"",0.5,[0,0,0]]]'
v.Name = ""HitboxLocations""
if game.ReplicatedStorage.Moves.FPunch1:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves.FPunch1[""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.FPunch1)
end
v.Value = 0.3
v.Name = ""ComboAt""
















if game.ReplicatedStorage.Moves:FindFirstChild(""FPunch2"") then
v = game.ReplicatedStorage.Moves[""FPunch2""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves)
end
v.Name = ""FPunch2""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""Dmg"") then
v = game.ReplicatedStorage.Moves.FPunch2[""Dmg""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.FPunch2)
end
v.Value = 40
v.Name = ""Dmg""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""MoveForward"") then
v = game.ReplicatedStorage.Moves.FPunch2[""MoveForward""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.FPunch2)
end
v.Value = 6
v.Name = ""MoveForward""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""Sound"") then
v = game.ReplicatedStorage.Moves.FPunch2[""Sound""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.FPunch2)
end
v.Value = 'PSwing2'
v.Name = ""Sound""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves.FPunch2[""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves.FPunch2)
end

v.AnimationId = ""rbxassetid://7604134993""
v.Name = ""Anim""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""MoveDuration"") then
v = game.ReplicatedStorage.Moves.FPunch2[""MoveDuration""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.FPunch2)
end
v.Value = 0.3
v.Name = ""MoveDuration""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves.FPunch2[""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.FPunch2)
end
v.Value = 1
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""HitboxLocations"") then
v = game.ReplicatedStorage.Moves.FPunch2[""HitboxLocations""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.FPunch2)
end
v.Value = '[[""LeftHand"",1.5,[0,0,0]],[""LeftLowerArm"",0.75,[0,0,0]],[""LeftUpperArm"",0.5,[0,0,0]]]'
v.Name = ""HitboxLocations""
if game.ReplicatedStorage.Moves.FPunch2:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves.FPunch2[""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.FPunch2)
end
v.Value = 0.3
v.Name = ""ComboAt""









if game.ReplicatedStorage.Moves:FindFirstChild(""TFPunch1"") then
v = game.ReplicatedStorage.Moves[""TFPunch1""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves)
end
v.Name = ""TFPunch1""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""MoveDuration"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""MoveDuration""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Value = 1
v.Name = ""MoveDuration""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Value = 1
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves.TFPunch1)
end

v.AnimationId = ""rbxassetid://7604102455""
v.Name = ""Anim""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""MoveForward"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""MoveForward""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Value = 6
v.Name = ""MoveForward""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""Dmg"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""Dmg""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Value = 20
v.Name = ""Dmg""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""Sound"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""Sound""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Value = 'PSwing1'
v.Name = ""Sound""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""HitboxLocations"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""HitboxLocations""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Value = '[[""RightHand"",1.5,[0,0,0]],[""RightLowerArm"",0.75,[0,0,0]],[""RightUpperArm"",0.5,[0,0,0]]]'
v.Name = ""HitboxLocations""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""FirstMove"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""FirstMove""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Name = ""FirstMove""
if game.ReplicatedStorage.Moves.TFPunch1:FindFirstChild(""ComboAt"") then
v = game.ReplicatedStorage.Moves.TFPunch1[""ComboAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.TFPunch1)
end
v.Value = 1
v.Name = ""ComboAt""













local plr = game.Players.LocalPlayer
local status = plr.Status
local pgui = plr.PlayerGui
local interf = pgui.Interface
local bt = interf.Battle

game.ReplicatedStorage.Moves.BStrike3.Anim.AnimationId = ""rbxassetid://7603759847""
game.ReplicatedStorage.Moves.TigerDrop.Anim.AnimationId = ""rbxassetid://7603759847""
game.ReplicatedStorage.Moves.BRCounter1.Anim.AnimationId = ""rbxassetid://8706178663""
game.ReplicatedStorage.Moves.BRCounter2.Anim.AnimationId = ""rbxassetid://8706178663""


interf.Client.Disabled = true
task.wait(0.1)
interf.Client.Disabled = false






local plr = game.Players.LocalPlayer
local status = plr.Status
local pgui = plr.PlayerGui
local interf = pgui.Interface
local bt = interf.Battle

game.ReplicatedStorage.Moves.EvadeF.Anim.AnimationId = ""rbxassetid://8223592585""
game.ReplicatedStorage.Moves.EvadeB.Anim.AnimationId = ""rbxassetid://8223592585""
game.ReplicatedStorage.Moves.EvadeL.Anim.AnimationId = ""rbxassetid://8223592585""
game.ReplicatedStorage.Moves.EvadeR.Anim.AnimationId = ""rbxassetid://8223592585""


interf.Client.Disabled = true
task.wait(0.1)
interf.Client.Disabled = false







local plr = game.Players.LocalPlayer
local status = plr.Status
local pgui = plr.PlayerGui
local interf = pgui.Interface
local bt = interf.Battle

game.ReplicatedStorage.Moves.SuperEvadeF.Anim.AnimationId = ""rbxassetid://8223592585""
game.ReplicatedStorage.Moves.SuperEvadeB.Anim.AnimationId = ""rbxassetid://8223592585""
game.ReplicatedStorage.Moves.SuperEvadeL.Anim.AnimationId = ""rbxassetid://8223592585""
game.ReplicatedStorage.Moves.SuperEvadeR.Anim.AnimationId = ""rbxassetid://8223592585""


interf.Client.Disabled = true
task.wait(0.1)
interf.Client.Disabled = false




local plr = game.Players.LocalPlayer
local status = plr.Status
local pgui = plr.PlayerGui
local interf = pgui.Interface
local bt = interf.Battle

game.ReplicatedStorage.Moves.WalkF.Anim.AnimationId = ""rbxassetid://12313793138""
game.ReplicatedStorage.Moves.WalkB.Anim.AnimationId = ""rbxassetid://12313791263""
game.ReplicatedStorage.Moves.WalkL.Anim.AnimationId = ""rbxassetid://12313796155""
game.ReplicatedStorage.Moves.WalkR.Anim.AnimationId = ""rbxassetid://12313794960""


interf.Client.Disabled = true
task.wait(0.1)
interf.Client.Disabled = false










"
Lnd52vjd,snowybot trial,coinwalk,JavaScript,Sunday 12th of May 2024 05:30:12 AM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = 0.00001;
var beast = betbse;
var tens = (betbse*10);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var chickendinner = (olderest*24000);
var great = olderest;
var original = olderest;
var flyt = 6.9;
var miss = 2.9;
var vimmi = ((Math.floor(olderest/tens))*tens);
var olfen = olderest;
var dork = olderest;
var fart = 0.02;
var joe = 0;
var jim = 0;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(vimmi+(beast*flyt)))&&(jim<=1)) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    joe = joe-1;
    jim = jim+1;
    vimmi = parseFloat(great);
}
if ((great>(vimmi+(beast*flyt)))&&(jim>=2)&&(jim<3)) {
    beast = beast*2;
    flyt = 0.9;
    miss = 4.9;
    joe = joe-1;
    jim = jim+1;
    vimmi = parseFloat(great);
}
if ((great>(vimmi+(beast*flyt)))&&(jim>=3)) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    joe = 0;
    jim = 0;
    vimmi = ((Math.floor(great/tens))*tens);
}
if ((great<(vimmi-(beast*miss)))&&(joe<=1)) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    joe = joe+1;
    jim = jim-1;
    vimmi = parseFloat(great);
} 
if ((great<(vimmi-(beast*miss)))&&(joe>=2)&&(joe<3)) {
    beast = beast*2;
    flyt = 4.9;
    miss = 1.9;
    joe = joe+1;
    jim = jim-1;
    vimmi = parseFloat(great);
}
 if ((great<(vimmi-(beast*miss)))&&(joe>=3)) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    joe = 0;
    jim = jim-1;
    vimmi = ((Math.floor(great/tens))*tens);
}
if (great>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();"
60vw4Lgw,snowybot trial,coinwalk,JavaScript,Sunday 12th of May 2024 05:25:19 AM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = 0.00001;
var beast = betbse;
var tens = (betbse*10);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var chickendinner = (olderest*24000);
var great = olderest;
var original = olderest;
var flyt = 6.9;
var miss = 2.9;
var vimmi = ((Math.floor(olderest/tens))*tens);
var olfen = olderest;
var dork = olderest;
var fart = 0.02;
var joe = 0;
var jim = 0;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(vimmi+(beast*flyt)))&&(jim<=1)) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    joe = joe-1;
    jim = jim+1;
    vimmi = parseFloat(great);
}
if ((great>(vimmi+(beast*flyt)))&&(jim>=2)&&(jim<3)) {
    beast = beast*2;
    flyt = 0.9;
    miss = 4.9;
    joe = joe-1;
    jim = jim+1;
    vimmi = parseFloat(great);
}
if ((great>(vimmi+(beast*flyt)))&&(jim>=3)) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    joe = 0;
    jim = 0;
    vimmi = ((Math.floor(great/tens))*tens);
}
if ((great<(vimmi-(beast*miss)))&&(joe<=1)) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    joe = joe+1;
    jim = jim-1;
    vimmi = parseFloat(great);
} 
if ((great<(vimmi-(beast*miss)))&&(joe>=2)&&(joe<3)) {
    beast = beast*2;
    flyt = 4.9;
    miss = 1.9;
    joe = joe+1;
    jim = jim-1;
    vimmi = parseFloat(great);
}
 if ((great<(vimmi-(beast*miss)))&&(joe>=3)) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    joe = 0;
    jim = 0;
    vimmi = ((Math.floor(great/tens))*tens);
}
if (great>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();"
tNYJJ8ap,Legacy style,Dsaqwed123,LScript,Sunday 12th of May 2024 05:24:25 AM CDT,"if game.ReplicatedStorage.Styles:FindFirstChild(""Brawler"") then
v = game.ReplicatedStorage.Styles[""Brawler""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles)
end
v.Name = ""Brawler""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Getup"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Getup""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_HeadPress'
v.Name = ""H_Getup""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush1"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch1'
v.Name = ""Rush1""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush2"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch2'
v.Name = ""Rush2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Speed"") then
v = game.ReplicatedStorage.Styles.Brawler[""Speed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 1.5
v.Name = ""Speed""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Color"") then
v = game.ReplicatedStorage.Styles.Brawler[""Color""]
else
v = Instance.new(""Color3Value"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = Color3.fromRGB(19.0000007674098,157.0000058412552,255)
v.Name = ""Color""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike1"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FStrike1'
v.Name = ""Strike1""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush3"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch1'
v.Name = ""Rush3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_LowHealthFallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_LowHealthFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenFinisher'
v.Name = ""H_LowHealthFallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_FullStunned"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_FullStunned""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_GUltimateEssence'
v.Name = ""H_FullStunned""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllBack"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllBack""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_SpinCounterBack'
v.Name = ""H_CounterSoloAllBack""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Rush4"") then
v = game.ReplicatedStorage.Styles.Brawler[""Rush4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FPunch2'
v.Name = ""Rush4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike2"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FStrike2'
v.Name = ""Strike2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike3"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FStrike3'
v.Name = ""Strike3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike4"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'FStrike4'
v.Name = ""Strike4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Strike5"") then
v = game.ReplicatedStorage.Styles.Brawler[""Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BStrike5'
v.Name = ""Strike5""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Grab"") then
v = game.ReplicatedStorage.Styles.Brawler[""Grab""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'Grab'
v.Name = ""Grab""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""BlockStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""BlockStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'GuruKnockback'
v.Name = ""BlockStrike""
if game.ReplicatedStorage.Styles.Brawler.BlockStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.BlockStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.BlockStrike)
end
v.Value = 'Guru Knockback'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Fallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Fallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenProne'
v.Name = ""H_Fallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStanding"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStanding""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopper'
v.Name = ""H_GunStanding""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""VisualName"") then
v = game.ReplicatedStorage.Styles.Brawler[""VisualName""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'Legacy'
v.Name = ""VisualName""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Throw"") then
v = game.ReplicatedStorage.Styles.Brawler[""Throw""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_BrawlerToss'
v.Name = ""Throw""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""StrikeThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""StrikeThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_FinishingHold'
v.Name = ""StrikeThrow""
if game.ReplicatedStorage.Styles.Brawler.StrikeThrow:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.StrikeThrow[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.StrikeThrow)
end
v.Value = 'Finishing Hold'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""DoubleBlows"") then
v = game.ReplicatedStorage.Styles.Brawler[""DoubleBlows""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler)
end
v.Name = ""DoubleBlows""
if game.ReplicatedStorage.Styles.Brawler.DoubleBlows:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.DoubleBlows[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.DoubleBlows)
end
v.Value = 'Double Finishing Blow'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike4"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'F2Strike3'
v.Name = ""2Strike4""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike3"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'F2Strike2'
v.Name = ""2Strike3""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike5"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'F2Strike4'
v.Name = ""2Strike5""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""2Strike2"") then
v = game.ReplicatedStorage.Styles.Brawler[""2Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'F2Strike1'
v.Name = ""2Strike2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabOnWall"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabOnWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_WallSmack'
v.Name = ""H_GrabOnWall""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""StanceStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""StanceStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'TigerDrop'
v.Name = ""StanceStrike""
if game.ReplicatedStorage.Styles.Brawler.StanceStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.StanceStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.StanceStrike)
end
v.Value = 'Counter Hook'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeB""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeBack'
v.Name = ""EvadeStrikeB""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeB:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeB[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeB)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeLeft'
v.Name = ""EvadeStrikeL""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeL:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeL[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeL)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeForward'
v.Name = ""EvadeStrikeF""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeF:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeF[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeF)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeStrikeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeStrikeR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'BEvadeStrikeRight'
v.Name = ""EvadeStrikeR""
if game.ReplicatedStorage.Styles.Brawler.EvadeStrikeR:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.EvadeStrikeR[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.EvadeStrikeR)
end
v.Value = 'Guru Dodge Shot'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""DashAttack"") then
v = game.ReplicatedStorage.Styles.Brawler[""DashAttack""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'DashAttack'
v.Name = ""DashAttack""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabStanding"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabStanding""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_SpinCounterFront'
v.Name = ""H_GrabStanding""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_BlockingEnemy"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_BlockingEnemy""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FaceTwist'
v.Name = ""H_BlockingEnemy""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_FallenDown"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_FallenDown""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FallenSupine'
v.Name = ""H_FallenDown""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""GrabCorpses"") then
v = game.ReplicatedStorage.Styles.Brawler[""GrabCorpses""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler)
end
v.Name = ""GrabCorpses""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_StandingBehind"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_StandingBehind""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_Chokehold'
v.Name = ""H_StandingBehind""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_SuperEvading"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_SuperEvading""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_Rolling'
v.Name = ""H_SuperEvading""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllLeft"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllLeft""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_SpinCounterLeft'
v.Name = ""H_CounterSoloAllLeft""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllFront"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllFront""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_SpinCounterFront'
v.Name = ""H_CounterSoloAllFront""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_CounterSoloAllRight"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_CounterSoloAllRight""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_SpinCounterRight'
v.Name = ""H_CounterSoloAllRight""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GrabStanding2"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GrabStanding2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_DoubleHeadCrush'
v.Name = ""H_GrabStanding2""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_RunningFallen"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_RunningFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_FinishingBlow'
v.Name = ""H_RunningFallen""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""HThrow"") then
v = game.ReplicatedStorage.Styles.Brawler[""HThrow""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_HeavyToss'
v.Name = ""HThrow""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_Knocked"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_Knocked""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_SolidCounter'
v.Name = ""H_Knocked""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""GrabStrike"") then
v = game.ReplicatedStorage.Styles.Brawler[""GrabStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_GuruParry'
v.Name = ""GrabStrike""
if game.ReplicatedStorage.Styles.Brawler.GrabStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Brawler.GrabStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler.GrabStrike)
end
v.Value = 'Guru Parry'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Block"") then
v = game.ReplicatedStorage.Styles.Brawler[""Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://8225208652""
v.Name = ""Block""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614916023""
v.Name = ""EvadeF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614916809""
v.Name = ""EvadeB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614918095""
v.Name = ""EvadeL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""EvadeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""EvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11614919036""
v.Name = ""EvadeR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""HitBlock"") then
v = game.ReplicatedStorage.Styles.Brawler[""HitBlock""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://11953475759""
v.Name = ""HitBlock""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStandingHandgun"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStandingHandgun""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopperHandgun'
v.Name = ""H_GunStandingHandgun""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStandingSMG"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStandingSMG""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopperSMG'
v.Name = ""H_GunStandingSMG""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_BackWall"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_BackWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_WallSmashing'
v.Name = ""H_BackWall""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GunStandingShotgun"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GunStandingShotgun""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_ShotStopperShotgun'
v.Name = ""H_GunStandingShotgun""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkF"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12313793138""
v.Name = ""WalkF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkR"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12313794960""
v.Name = ""WalkR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkB"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12313791263""
v.Name = ""WalkB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""WalkL"") then
v = game.ReplicatedStorage.Styles.Brawler[""WalkL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12313796155""
v.Name = ""WalkL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""Idle"") then
v = game.ReplicatedStorage.Styles.Brawler[""Idle""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://7603752794""
v.Name = ""Idle""
if game.ReplicatedStorage.Styles.Brawler.Idle:FindFirstChild(""Core"") then
v = game.ReplicatedStorage.Styles.Brawler.Idle[""Core""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Brawler.Idle)
end
v.Name = ""Core""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeR"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12908871170""
v.Name = ""SuperEvadeR""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeL"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12908873302""
v.Name = ""SuperEvadeL""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeF"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12908869198""
v.Name = ""SuperEvadeF""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""SuperEvadeB"") then
v = game.ReplicatedStorage.Styles.Brawler[""SuperEvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Brawler)
end

v.AnimationId = ""rbxassetid://12908875960""
v.Name = ""SuperEvadeB""
if game.ReplicatedStorage.Styles.Brawler:FindFirstChild(""H_GetupUp"") then
v = game.ReplicatedStorage.Styles.Brawler[""H_GetupUp""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'H_HeadPressUp'
v.Name = ""H_GetupUp"""
ewN3yYmd,Shakedown style,Dsaqwed123,LScript,Sunday 12th of May 2024 05:06:04 AM CDT,"-- Options
local KeyToPress = ""C"" -- Right click while holding C
local StyleName = ""Shakedown"" -- Style name
local StyleColor = Color3.fromRGB(255,211,50) -- Style color

-- Code
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Speed"") then
	v = game.ReplicatedStorage.Styles.Beast[""Speed""]
else
	v = Instance.new(""NumberValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = 0.75
v.Name = ""Speed""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Idle"") then
	v = game.ReplicatedStorage.Styles.Beast[""Idle""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://8485681263""
v.Name = ""Idle""
if game.ReplicatedStorage.Styles.Beast.Idle:FindFirstChild(""Core"") then
	v = game.ReplicatedStorage.Styles.Beast.Idle[""Core""]
else
	v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Beast.Idle)
end
v.Name = ""Core""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeL"") then
	v = game.ReplicatedStorage.Styles.Beast[""EvadeL""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""EvadeL""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeF"") then
	v = game.ReplicatedStorage.Styles.Beast[""EvadeF""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://11614916023""
v.Name = ""EvadeF""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_Fallen"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_Fallen""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_FallenSlam""
v.Name = ""H_Fallen""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_FallenDown"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_FallenDown""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_FallenGrate""
v.Name = ""H_FallenDown""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""LHThrow"") then
	v = game.ReplicatedStorage.Styles.Beast[""LHThrow""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""T_BHeavyToss""
v.Name = ""LHThrow""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""HThrow"") then
	v = game.ReplicatedStorage.Styles.Beast[""HThrow""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""T_HeavyToss""
v.Name = ""HThrow""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_Stunned"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_Stunned""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_Knockout""
v.Name = ""H_Stunned""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabOnFallen"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_GrabOnFallen""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_LobCrush""
v.Name = ""H_GrabOnFallen""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Block"") then
	v = game.ReplicatedStorage.Styles.Beast[""Block""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920916315""
v.Name = ""Block""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Hit1Block"") then
	v = game.ReplicatedStorage.Styles.Beast[""Hit1Block""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920902836""
v.Name = ""Hit1Block""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EndBlock"") then
	v = game.ReplicatedStorage.Styles.Beast[""EndBlock""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920912941""
v.Name = ""EndBlock""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Hit2Block"") then
	v = game.ReplicatedStorage.Styles.Beast[""Hit2Block""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920909417""
v.Name = ""Hit2Block""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Taunt"") then
	v = game.ReplicatedStorage.Styles.Beast[""Taunt""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""BeastTaunt""
v.Name = ""Taunt""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabStanding3"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_GrabStanding3""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_Entangle""
v.Name = ""H_GrabStanding3""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_TwoHandeds"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_TwoHandeds""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_SelfDestruct""
v.Name = ""H_TwoHandeds""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_AbsorbBlock"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_AbsorbBlock""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_Torment""
v.Name = ""H_AbsorbBlock""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabStanding"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_GrabStanding""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_Piledriver""
v.Name = ""H_GrabStanding""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""GrabCorpses"") then
	v = game.ReplicatedStorage.Styles.Beast[""GrabCorpses""]
else
	v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Beast)
end
v.Name = ""GrabCorpses""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_GrabOnWall"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_GrabOnWall""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_WallSmack""
v.Name = ""H_GrabOnWall""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeR"") then
	v = game.ReplicatedStorage.Styles.Beast[""EvadeR""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://8223592585""
v.Name = ""EvadeR""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Throw"") then
	v = game.ReplicatedStorage.Styles.Beast[""Throw""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""T_BeastToss""
v.Name = ""Throw""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""VisualName"") then
	v = game.ReplicatedStorage.Styles.Beast[""VisualName""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = StyleName
v.Name = ""VisualName""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""EvadeB"") then
	v = game.ReplicatedStorage.Styles.Beast[""EvadeB""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://11614916809""
v.Name = ""EvadeB""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Grab"") then
	v = game.ReplicatedStorage.Styles.Beast[""Grab""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""BGrab""
v.Name = ""Grab""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike4"") then
	v = game.ReplicatedStorage.Styles.Beast[""Strike4""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""DerekSlam""
v.Name = ""Strike4""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike3"") then
	v = game.ReplicatedStorage.Styles.Beast[""Strike3""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""DerekSlam""
v.Name = ""Strike3""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike2"") then
	v = game.ReplicatedStorage.Styles.Beast[""Strike2""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""DerekSlam""
v.Name = ""Strike2""

local e
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Strike1"") then
	e = game.ReplicatedStorage.Styles.Beast[""Strike1""]
else
	e = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end

e.Value = ""DerekSlam""
e.Name = ""Strike1""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""LThrow"") then
	v = game.ReplicatedStorage.Styles.Beast[""LThrow""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""T_LegToss""
v.Name = ""LThrow""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""H_LowHealthFallen"") then
	v = game.ReplicatedStorage.Styles.Beast[""H_LowHealthFallen""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""H_FallenFinisher""
v.Name = ""H_LowHealthFallen""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Color"") then
	v = game.ReplicatedStorage.Styles.Beast[""Color""]
else
	v = Instance.new(""Color3Value"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = StyleColor
v.Name = ""Color""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Rush3"") then
	v = game.ReplicatedStorage.Styles.Beast[""Rush3""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""DerekPunch3""
v.Name = ""Rush3""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Rush2"") then
	v = game.ReplicatedStorage.Styles.Beast[""Rush2""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""DerekPunch2""
v.Name = ""Rush2""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""GuardGrabHit"") then
	v = game.ReplicatedStorage.Styles.Beast[""GuardGrabHit""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""T_BearHug""
v.Name = ""GuardGrabHit""
if game.ReplicatedStorage.Styles.Beast.GuardGrabHit:FindFirstChild(""Ability"") then
	v = game.ReplicatedStorage.Styles.Beast.GuardGrabHit[""Ability""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast.GuardGrabHit)
end
v.Value = ""Bear Hug""
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""StartBlock"") then
	v = game.ReplicatedStorage.Styles.Beast[""StartBlock""]
else
	v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Beast)
end

v.AnimationId = ""rbxassetid://10920901524""
v.Name = ""StartBlock""
if game.ReplicatedStorage.Styles.Beast:FindFirstChild(""Rush1"") then
	v = game.ReplicatedStorage.Styles.Beast[""Rush1""]
else
	v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Beast)
end
v.Value = ""DerekPunch1""
v.Name = ""Rush1""

local uis = game:GetService(""UserInputService"")
game:GetService(""RunService"").Heartbeat:Connect(function()
	if uis:IsKeyDown(Enum.KeyCode[KeyToPress]) then
		e.Value = ""DerekCharge""
	else
		e.Value = ""DerekSlam""	
	end
end)"
xDTCEw4n,Vermilion style,Dsaqwed123,LScript,Sunday 12th of May 2024 04:58:16 AM CDT,"if game.ReplicatedStorage.Styles:FindFirstChild(""Rush"") then
v = game.ReplicatedStorage.Styles[""Rush""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles)
end
v.Name = ""Rush""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_EvadedF"") then
v = game.ReplicatedStorage.Styles.Rush[""H_EvadedF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkFront'
v.Name = ""H_EvadedF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Stunning"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Stunning""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_Reversal'
v.Name = ""H_Stunning""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""StartBlock"") then
v = game.ReplicatedStorage.Styles.Rush[""StartBlock""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://10848090844""
v.Name = ""StartBlock""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Taunt"") then
v = game.ReplicatedStorage.Styles.Rush[""Taunt""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'GoonTaunt'
v.Name = ""Taunt""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeB""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Speed"") then
v = game.ReplicatedStorage.Styles.Rush[""Speed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 2.8
v.Name = ""Speed""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Color"") then
v = game.ReplicatedStorage.Styles.Rush[""Color""]
else
v = Instance.new(""Color3Value"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = Color3.fromRGB(255,0,255)
v.Name = ""Color""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""VisualName"") then
v = game.ReplicatedStorage.Styles.Rush[""VisualName""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'Vermillion'
v.Name = ""VisualName""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_LowHealthFallen"") then
v = game.ReplicatedStorage.Styles.Rush[""H_LowHealthFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FallenFinisher'
v.Name = ""H_LowHealthFallen""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Fallen"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Fallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FallenStomp'
v.Name = ""H_Fallen""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_BackWall"") then
v = game.ReplicatedStorage.Styles.Rush[""H_BackWall""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_CrushingWall'
v.Name = ""H_BackWall""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Grab"") then
v = game.ReplicatedStorage.Styles.Rush[""Grab""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RSweep'
v.Name = ""Grab""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_CounterSolo"") then
v = game.ReplicatedStorage.Styles.Rush[""H_CounterSolo""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FrenzySpinCounter'
v.Name = ""H_CounterSolo""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeStrikeF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeStrikeF""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike2'
v.Name = ""EvadeStrikeF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Stunned"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Stunned""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FlyingKick'
v.Name = ""H_Stunned""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush2"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'BEvadeStrikeRight'
v.Name = ""Rush2""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush3"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'BEvadeStrikeLeft'
v.Name = ""Rush3""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush4"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'BEvadeStrikeRight'
v.Name = ""Rush4""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush5"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'B2Strike2'
v.Name = ""Rush5""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush6"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush6""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'BAttack4'
v.Name = ""Rush6""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush7"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush7""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RPunch7'
v.Name = ""Rush7""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush8"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush8""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RPunch8'
v.Name = ""Rush8""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike2"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike2""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '√©¬æ¬ç2Strike4'
v.Name = ""Strike2""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike3"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike3""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'DashAttack'
v.Name = ""Strike3""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike4"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'B2Strike2'
v.Name = ""Strike4""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike5"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike5""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'DashAttack'
v.Name = ""Strike5""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike6"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike6""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'P_SAttack3'
v.Name = ""Strike6""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike7"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike7""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike7'
v.Name = ""Strike7""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike8"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike8""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike8'
v.Name = ""Strike8""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike9"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike9""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'RStrike9'
v.Name = ""Strike9""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Rush1"") then
v = game.ReplicatedStorage.Styles.Rush[""Rush1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'BEvadeStrikeLeft'
v.Name = ""Rush1""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Strike1"") then
v = game.ReplicatedStorage.Styles.Rush[""Strike1""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'TigerDrop'
v.Name = ""Strike1""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Running4"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Running4""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_Terror'
v.Name = ""H_Running4""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_AirFallen"") then
v = game.ReplicatedStorage.Styles.Rush[""H_AirFallen""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_Whirl'
v.Name = ""H_AirFallen""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""GrabStrike"") then
v = game.ReplicatedStorage.Styles.Rush[""GrabStrike""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'T_CounterQuickstep'
v.Name = ""GrabStrike""
if game.ReplicatedStorage.Styles.Rush.GrabStrike:FindFirstChild(""Ability"") then
v = game.ReplicatedStorage.Styles.Rush.GrabStrike[""Ability""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush.GrabStrike)
end
v.Value = 'Counter Quickstep'
v.Name = ""Ability""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_FallenDown"") then
v = game.ReplicatedStorage.Styles.Rush[""H_FallenDown""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FallenKick'
v.Name = ""H_FallenDown""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_Distanced"") then
v = game.ReplicatedStorage.Styles.Rush[""H_Distanced""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkBack'
v.Name = ""H_Distanced""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710466763""
v.Name = ""EvadeF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710468004""
v.Name = ""EvadeL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710467557""
v.Name = ""EvadeR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710468479""
v.Name = ""EvadeB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710568545""
v.Name = ""EvadeCR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11710568875""
v.Name = ""EvadeCL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632563534""
v.Name = ""EvadeQCB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632565056""
v.Name = ""EvadeQCF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCL"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCL""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632564616""
v.Name = ""EvadeQCL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeQCR"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeQCR""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11632564233""
v.Name = ""EvadeQCR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCF"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCF""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11716395378""
v.Name = ""EvadeCF""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""EvadeCB"") then
v = game.ReplicatedStorage.Styles.Rush[""EvadeCB""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11716396028""
v.Name = ""EvadeCB""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Block"") then
v = game.ReplicatedStorage.Styles.Rush[""Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11776345813""
v.Name = ""Block""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_EvadedR"") then
v = game.ReplicatedStorage.Styles.Rush[""H_EvadedR""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkRight'
v.Name = ""H_EvadedR""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""H_EvadedL"") then
v = game.ReplicatedStorage.Styles.Rush[""H_EvadedL""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'H_FastFootworkLeft'
v.Name = ""H_EvadedL""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Idle"") then
v = game.ReplicatedStorage.Styles.Rush[""Idle""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://12120045620""
v.Name = ""Idle""
if game.ReplicatedStorage.Styles.Rush.Idle:FindFirstChild(""Core"") then
v = game.ReplicatedStorage.Styles.Rush.Idle[""Core""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Styles.Rush.Idle)
end
v.Name = ""Core""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Hit1Block"") then
v = game.ReplicatedStorage.Styles.Rush[""Hit1Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11959653217""
v.Name = ""Hit1Block""
if game.ReplicatedStorage.Styles.Rush:FindFirstChild(""Hit2Block"") then
v = game.ReplicatedStorage.Styles.Rush[""Hit2Block""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Styles.Rush)
end

v.AnimationId = ""rbxassetid://11959653217""
v.Name = ""Hit2Block""

if game.ReplicatedStorage.Moves:FindFirstChild(""BEvadeStrikeRight"") then
v = game.ReplicatedStorage.Moves[""BEvadeStrikeRight""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves)
end
v.Name = ""BEvadeStrikeRight""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""Sound"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""Sound""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 'KSwing1'
v.Name = ""Sound""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end

v.AnimationId = ""rbxassetid://11593137190""
v.Name = ""Anim""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""Dmg"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""Dmg""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 30
v.Name = ""Dmg""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 2
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""HitboxLocations"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""HitboxLocations""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = '[[""LeftFoot"",2,[0,0,0]],[""LeftLowerLeg"",1.5,[0,0,0]],[""LeftUpperLeg"",1,[0,0,0]]]'
v.Name = ""HitboxLocations""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""MoveDuration"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""MoveDuration""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 0.2
v.Name = ""MoveDuration""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""MoveForward"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""MoveForward""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 6
v.Name = ""MoveForward""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""Trail"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""Trail""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = ''
v.Name = ""Trail""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""RotateDeez"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""RotateDeez""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = -30
v.Name = ""RotateDeez""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""HitDur"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""HitDur""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 0.4
v.Name = ""HitDur""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""EndAt"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""EndAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 0.2
v.Name = ""EndAt""
if game.ReplicatedStorage.Moves.BEvadeStrikeRight:FindFirstChild(""ForceSF"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeRight[""ForceSF""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeRight)
end
v.Value = 0.05
v.Name = ""ForceSF""

if game.ReplicatedStorage.Moves:FindFirstChild(""BEvadeStrikeLeft"") then
v = game.ReplicatedStorage.Moves[""BEvadeStrikeLeft""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves)
end
v.Name = ""BEvadeStrikeLeft""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""Sound"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""Sound""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 'KSwing1'
v.Name = ""Sound""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end

v.AnimationId = ""rbxassetid://11593135371""
v.Name = ""Anim""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""Dmg"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""Dmg""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 30
v.Name = ""Dmg""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 2
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""HitboxLocations"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""HitboxLocations""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = '[[""RightFoot"",2,[0,0,0]],[""RightLowerLeg"",1.5,[0,0,0]],[""RightUpperLeg"",1,[0,0,0]]]'
v.Name = ""HitboxLocations""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""Trail"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""Trail""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = ''
v.Name = ""Trail""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""MoveForward"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""MoveForward""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 6
v.Name = ""MoveForward""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""MoveDuration"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""MoveDuration""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 0.2
v.Name = ""MoveDuration""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""RotateDeez"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""RotateDeez""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 30
v.Name = ""RotateDeez""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""HitDur"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""HitDur""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 0.4
v.Name = ""HitDur""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""EndAt"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""EndAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 0.2
v.Name = ""EndAt""
if game.ReplicatedStorage.Moves.BEvadeStrikeLeft:FindFirstChild(""ForceSF"") then
v = game.ReplicatedStorage.Moves.BEvadeStrikeLeft[""ForceSF""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.BEvadeStrikeLeft)
end
v.Value = 0.05
v.Name = ""ForceSF""

if game.ReplicatedStorage.Moves:FindFirstChild(""DashAttack"") then
v = game.ReplicatedStorage.Moves[""DashAttack""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves)
end
v.Name = ""DashAttack""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""Sound"") then
v = game.ReplicatedStorage.Moves.DashAttack[""Sound""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 'KSwing3'
v.Name = ""Sound""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""AniSpeed"") then
v = game.ReplicatedStorage.Moves.DashAttack[""AniSpeed""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 2
v.Name = ""AniSpeed""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""Dmg"") then
v = game.ReplicatedStorage.Moves.DashAttack[""Dmg""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 80
v.Name = ""Dmg""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""Anim"") then
v = game.ReplicatedStorage.Moves.DashAttack[""Anim""]
else
v = Instance.new(""Animation"", game.ReplicatedStorage.Moves.DashAttack)
end

v.AnimationId = ""rbxassetid://11907342085""
v.Name = ""Anim""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""KnockOut"") then
v = game.ReplicatedStorage.Moves.DashAttack[""KnockOut""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Name = ""KnockOut""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""Trail"") then
v = game.ReplicatedStorage.Moves.DashAttack[""Trail""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = ''
v.Name = ""Trail""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""HitboxLocations"") then
v = game.ReplicatedStorage.Moves.DashAttack[""HitboxLocations""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = '[[""RightFoot"",1.5,[0,0,0]],[""LeftFoot"",1.5,[0,0,0]]]'
v.Name = ""HitboxLocations""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""LockedDirection"") then
v = game.ReplicatedStorage.Moves.DashAttack[""LockedDirection""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Name = ""LockedDirection""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""Circle"") then
v = game.ReplicatedStorage.Moves.DashAttack[""Circle""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Name = ""Circle""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""SF"") then
v = game.ReplicatedStorage.Moves.DashAttack[""SF""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 0.4
v.Name = ""SF""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""HitDur"") then
v = game.ReplicatedStorage.Moves.DashAttack[""HitDur""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 0.3333333333333333
v.Name = ""HitDur""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""PhaseWhenH"") then
v = game.ReplicatedStorage.Moves.DashAttack[""PhaseWhenH""]
else
v = Instance.new(""Folder"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Name = ""PhaseWhenH""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""KnockoutDistance"") then
v = game.ReplicatedStorage.Moves.DashAttack[""KnockoutDistance""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 6
v.Name = ""KnockoutDistance""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""Heat"") then
v = game.ReplicatedStorage.Moves.DashAttack[""Heat""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 15
v.Name = ""Heat""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""EndAt"") then
v = game.ReplicatedStorage.Moves.DashAttack[""EndAt""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 1.5
v.Name = ""EndAt""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""Reaction"") then
v = game.ReplicatedStorage.Moves.DashAttack[""Reaction""]
else
v = Instance.new(""StringValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 'Turnaround'
v.Name = ""Reaction""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""MoveDuration"") then
v = game.ReplicatedStorage.Moves.DashAttack[""MoveDuration""]
else
v = Instance.new(""NumberValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 0.75
v.Name = ""MoveDuration""
if game.ReplicatedStorage.Moves.DashAttack:FindFirstChild(""MoveForward"") then
v = game.ReplicatedStorage.Moves.DashAttack[""MoveForward""]
else
v = Instance.new(""IntValue"", game.ReplicatedStorage.Moves.DashAttack)
end
v.Value = 20
v.Name = ""MoveForward""

--TigerDrop for akiyama
local plr = game.Players.LocalPlayer
local pgui = plr.PlayerGui
local interf = pgui.Interface

game.ReplicatedStorage.Moves.TigerDrop.Anim.AnimationId = ""rbxassetid://12338277925""
interf.Client.Disabled = true
task.wait(0.1)
interf.Client.Disabled = false

--Custom icon and health bar (credit to dundun)
game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.StyleBar.amount:GetPropertyChangedSignal(""Text""):Connect(function ()
    if game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.StyleBar.amount.Text == ""FISTICUFFS"" then
        game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.GUY.GUY.Image = ""http://www.roblox.com/asset/?id=13003066381""
    elseif game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.StyleBar.amount.Text == ""FRENZY"" then
        game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.GUY.GUY.Image = ""http://www.roblox.com/asset/?id=13003066381""
    elseif game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.StyleBar.amount.Text == ""BRUTE"" then
        game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.GUY.GUY.Image = ""http://www.roblox.com/asset/?id=13003066381""
    end
end)

--The Health
game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.Health.Fill.BackgroundColor3 = Color3.new(0.114958, 1, 0.00603008)

--The Damage Taken Indicator
game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.Health.BFill.BackgroundColor3 = Color3.new(255, 255, 255)

-- The MaxHealth
spawn(function ()
    while true do
        task.wait()
        game:GetService(""Players"").LocalPlayer.PlayerGui.Interface.Battle.Main.Health.BGFill.BackgroundColor3 = Color3.new(255, 255, 255)
    end
end)

--Taunt for akiyama (real idea from me)
local plr = game.Players.LocalPlayer
local pgui = plr.PlayerGui
local interf = pgui.Interface

game.ReplicatedStorage.Moves.GoonTaunt.Anim.AnimationId = ""http://www.roblox.com/asset/?id=10714345459""
interf.Client.Disabled = true
task.wait(0.1)
interf.Client.Disabled = false

--Inf heat (pack)
getfenv().Activated = true

local function FillHeat()
    local Event = game:GetService(""ReplicatedStorage"").Events.ME

    for i=1,6 do
        local A_1 =  {
            [1] = ""heat"", 
            [2] = game:GetService(""ReplicatedStorage"").Moves.Taunt
        }
        Event:FireServer(A_1)
    end
end

spawn(function()
    while true do
        task.wait()
        if not Activated then break end
        FillHeat()
    end
end)"
RrF4a1AF,"17 (–ø–∞—Ä–∞ –ø–æ–¥—Ä—è–¥, —Å—Ä–∞–≤–Ω–∏—Ç—å —Å –º–∞–∫—Å–∏–º—É–º–æ–º)",nq1s788,Python,Sunday 12th of May 2024 04:55:15 AM CDT,"#https://inf-ege.sdamgia.ru/problem?id=48438
data = open('17.txt').readlines()
mn = 10000000
for i in range(len(data)):
    a = int(data[i])
    if abs(a) % 10 == 7:
        mn = min(mn, a)
cnt = 0
mx = -10000000
for i in range(len(data) - 1):
    a = int(data[i])
    b = int(data[i + 1])
    if (a ** 2 + b ** 2 < mn ** 2) and (((abs(a) % 10 == 7) and (abs(b) % 10 != 7)) or ((abs(a) % 10 != 7) and (abs(b) % 10 == 7))):
        cnt += 1
        mx = max(mx, a ** 2 + b ** 2)
print(cnt, mx)"
kq1DSaBj,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 04:32:24 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int n, k;
    cin >> n >> k;

    vector<pair<int, int>> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i].first;
        v[i].second = i;
    }
    sort(v.begin(), v.end());

    for(int i = 0; i < n; i++) {
        int L = i + 1, R = n - 1;
        while(L < R) {
            if(v[L].first + v[R].first + v[i].first == k) {
                cout << v[i].second + 1 << "" "" << v[L].second + 1 << "" "" << v[R].second + 1 << endl;
                return 0;
                
            }
            if(v[L].first + v[R].first + v[i].first > k) {
                R--;
            }
            else {
                L++;
            }
        }
    }
    cout << ""IMPOSSIBLE"" << endl;
       return 0;
}"
tQqFmYKt,17 (—Ç—Ä–æ–π–∫–∞),nq1s788,Python,Sunday 12th of May 2024 04:31:22 AM CDT,"#https://inf-ege.sdamgia.ru/problem?id=39763
data = open('17.txt').readlines()
cnt = 0 # 5 6 7 8 9 10
mx = 0
for i in range(len(data) - 2):
    a = int(data[i])
    b = int(data[i + 1])
    c = int(data[i + 2])
    if a >= b and a >= c:
        if b ** 2 + c ** 2 > a ** 2:
            cnt += 1
            mx = max(mx, a + b + c)
    elif b >= a and b >= c:
        if c ** 2 + a ** 2 > b ** 2:
            cnt += 1
            mx = max(mx, a + b + c)
    elif c >= a and c >= b:
        if b ** 2 + a ** 2 > c ** 2:
            cnt += 1
            mx = max(mx, a + b + c)
print(cnt, mx)"
6n71haFS,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 04:17:16 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int n, k;
    cin >> n >> k;

    int niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }

    for(int i = 0; i < n; i++) {
        int sum = k - niza[i];
        unordered_map<int, int> mapa;
        for(int j = 0; j < n; j++) {
            if(i != j) {
                if(mapa.count(sum - niza[j])) {
                    cout << i + 1 << "" "" << mapa[sum - niza[j]] + 1 << "" "" << j + 1 << endl;
                    return 0;
                }
                mapa[niza[j]] = j;
            }
        }
    }

    cout << ""IMPOSSIBLE"" << endl;

       return 0;
}"
FPKtYR9R,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 04:02:01 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int n, k;
    cin >> n >> k;
    vector<pair<int, int>> v(n);

    for(int i = 0; i < n; i++) {
        cin >> v[i].first;
        v[i].second = i;
    }
    sort(v.begin(), v.end());
    int L = 0, R = n - 1;
    while(L < R) {
        if(v[L].first + v[R].first == k) {
            cout << v[L].second + 1 << "" "" << v[R].second + 1 << endl;
            return 0;
        }
        if(v[L].first + v[R].first > k) {
            R--;
        }
        else {
            L++;
        }

    }
    cout << ""IMPOSSIBLE"" << endl;
    return 0;
}"
k1xEnZVS,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 03:42:44 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int n, k;
    cin >> n >> k;

    int niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }

    map<int, int> mapa;
    for(int i = 0; i < n; i++) {
        if(mapa.count(k - niza[i])) {
            cout << mapa[k - niza[i]] + 1 << "" "" << i + 1 << endl;
            return 0;
        }

        mapa[niza[i]] = i;
    }
    cout << ""IMPOSSIBLE"" << endl;
    return 0;
}"
fWRunAXx,GPS Display rev_03,pleasedontcode,Arduino,Sunday 12th of May 2024 03:04:56 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: GPS Display
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-12 08:03:54

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* I want the North South and East West GPS */
	/* coordinates to appear on the display in addition */
	/* to the time, the module is a lilygo TTGO. oled is */
	/* 128x64   #define SCREEN_WIDTH 128  #define */
	/* SCREEN_HEIGHT 64  #define OLED_RESET -1  0x3C */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <Adafruit_SSD1306.h>	//https://github.com/stblassitude/Adafruit_SSD1306_Wemos_OLED.git

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t GPS_SSD1306OledDisplay_I2C_PIN_SDA_D21 = 21;
const uint8_t GPS_SSD1306OledDisplay_I2C_PIN_SCL_D22 = 22;
const uint8_t GPS_SSD1306OledDisplay_I2C_SLAVE_ADDRESS = 0x3C; // 0x3C is the I2C address for the OLED display

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Adafruit_SSD1306 display(GPS_SSD1306OledDisplay_I2C_PIN_SDA_D21, GPS_SSD1306OledDisplay_I2C_PIN_SCL_D22, GPS_SSD1306OledDisplay_I2C_SLAVE_ADDRESS);

void setup(void)
{
	// put your setup code here, to run once:
	display.begin(SSD1306_SWITCHCAPVCC, GPS_SSD1306OledDisplay_I2C_SLAVE_ADDRESS); // Initialize the display with the I2C address

	// Display GPS coordinates and time
	display.clearDisplay(); // Clear the display buffer
	display.setTextSize(1); // Set text size
	display.setTextColor(WHITE); // Set text color to white
	display.setCursor(0, 0); // Set cursor position
	display.println(""North: 45.1234""); // Display North GPS coordinate
	display.println(""South: 35.6789""); // Display South GPS coordinate
	display.println(""East: 100.9876""); // Display East GPS coordinate
	display.println(""West: 90.5432""); // Display West GPS coordinate
	display.println(""Time: 12:34:56""); // Display current time
	display.display(); // Update the display with the content
}

void loop(void)
{
	// put your main code here, to run repeatedly:

}
"
MMWvJtvy,GPS Tracker rev_02,pleasedontcode,Arduino,Sunday 12th of May 2024 03:02:12 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: GPS Tracker
	- Source Code compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-12 08:00:44

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* I want the North South and East West GPS */
	/* coordinates to appear on the display in addition */
	/* to the time, the module is a lilygo TTGO. */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <Adafruit_SSD1306.h>	//https://github.com/stblassitude/Adafruit_SSD1306_Wemos_OLED.git

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t GPS_SSD1306OledDisplay_I2C_PIN_SDA_D21 = 21;
const uint8_t GPS_SSD1306OledDisplay_I2C_PIN_SCL_D22 = 22;
const uint8_t GPS_SSD1306OledDisplay_I2C_SLAVE_ADDRESS = 60;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Adafruit_SSD1306 display(/*DC*/ 4, /*RST*/ -1, /*CS*/ -1); // Assuming reset pin is not connected

void setup(void)
{
	// put your setup code here, to run once:
	display.begin(SSD1306_SWITCHCAPVCC, 0x3C); // Initialize with I2C address 0x3C
	display.display();
	delay(2000);
	display.clearDisplay();
	display.drawPixel(10, 10, WHITE);
	display.display();
	delay(2000);
	// Add your additional setup code here

	// Display GPS coordinates and time on the OLED
	display.clearDisplay();
	display.setTextSize(1);
	display.setTextColor(WHITE);
	display.setCursor(0, 0);
	display.println(""GPS Coordinates:"");
	display.setTextSize(2);
	display.setCursor(0, 10);
	display.println(""N: 00.0000"");
	display.setCursor(0, 30);
	display.println(""E: 00.0000"");
	display.setTextSize(1);
	display.setCursor(0, 50);
	display.println(""Time: 12:00 PM"");
	display.display();
	delay(5000);
}

void loop(void)
{
	// put your main code here, to run repeatedly:
}

/* END CODE */"
4Cit0Naf,Untitled,baka_mashiro,HTML,Sunday 12th of May 2024 02:58:36 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""UTF-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>User Information Form</title>
    <link
      rel=""stylesheet""
      href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css""
    />
  </head>
  <body>
    <div class=""container mt-5"">
      <h2>User Information Form</h2>
      <form action=""/submit"" method=""post"" enctype=""multipart/form-data"">
        <div class=""form-group"">
          <label for=""studentID"">Student ID:</label>
          <input
            type=""text""
            class=""form-control""
            id=""studentID""
            name=""studentID""
            required
          />
        </div>
        <div class=""form-group"">
          <label for=""name"">Name:</label>
          <input
            type=""text""
            class=""form-control""
            id=""name""
            name=""name""
            required
          />
        </div>
        <div class=""form-group"">
          <label for=""grade"">Grade:</label>
          <input
            type=""text""
            class=""form-control""
            id=""grade""
            name=""grade""
            required
          />
        </div>
        <div class=""form-group"">
          <label for=""photo"">Photo:</label>
          <input
            type=""file""
            class=""form-control-file""
            id=""photo""
            name=""photo""
            accept=""image/*""
            required
          />
        </div>
        <button type=""submit"" class=""btn btn-primary"">Submit</button>
      </form>
    </div>
  </body>
</html>
"
5TKDxePj,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 02:56:34 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
   int k, n;
   cin >> k >> n;

    int a[n], b[n];

    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }
    for(int i = 0; i < n; i++) {
        cin >> b[i];
    }

    vector<int> cnt1(101, 0), cnt2(101, 0);
    for(int i = 0; i < n; i++) {
        cnt1[a[i]]++;
        cnt2[b[i]]++;
    }
    long long res = 0;
    for(int i = 0; i <= 100; i++) {
        long long c = 0;
        for(int j = 0; j <= 100; j++) {
            if(i + j >= k) {
                c += cnt2[j];
            }
        }
        res += c * cnt1[i];

    }
    cout << res << endl;
    return 0;
}"
3wfUcjBw,GPS Display rev_01,pleasedontcode,Arduino,Sunday 12th of May 2024 02:56:16 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: GPS Display
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-12 07:55:23

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* I want the North South and East West GPS */
	/* coordinates to appear on the display in addition */
	/* to the time, the module is a lilygo TTGO. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <Adafruit_SSD1306.h>	//https://github.com/stblassitude/Adafruit_SSD1306_Wemos_OLED.git

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t GPS_SSD1306OledDisplay_I2C_PIN_SDA_D21 = 21;
const uint8_t GPS_SSD1306OledDisplay_I2C_PIN_SCL_D22 = 22;
const uint8_t GPS_SSD1306OledDisplay_I2C_SLAVE_ADDRESS = 60;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Adafruit_SSD1306 display(/*DC*/ 4, /*RST*/ -1, /*CS*/ -1); // Assuming reset pin is not connected

void setup(void)
{
	// put your setup code here, to run once:
	display.begin(SSD1306_SWITCHCAPVCC, 0x3C); // Initialize with I2C address 0x3C
	display.display();
	delay(2000);
	display.clearDisplay();
	display.drawPixel(10, 10, WHITE);
	display.display();
	delay(2000);
	// Add your additional setup code here

	// Display GPS coordinates and time on the OLED
	display.clearDisplay();
	display.setTextSize(1);
	display.setTextColor(WHITE);
	display.setCursor(0, 0);
	display.println(""GPS Coordinates:"");
	display.setTextSize(2);
	display.setCursor(0, 10);
	display.println(""N: 00.0000"");
	display.setCursor(0, 30);
	display.println(""E: 00.0000"");
	display.setTextSize(1);
	display.setCursor(0, 50);
	display.println(""Time: 12:00 PM"");
	display.display();
	delay(5000);
}

void loop(void)
{
	// put your main code here, to run repeatedly:
}

/* END CODE */"
9CvWTQ55,Untitled,Josif_tepe,C++,Sunday 12th of May 2024 02:42:47 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;

    int niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }

    vector<int> cnt(101, 0);

    for(int i = 0; i < n; i++) {
        cnt[niza[i]]++;
    }
    for(int i = 0; i <= 100; i++) {
        for(int j = 0; j < cnt[i]; j++) {
            cout << i << "" "";
        }
    }

    


    return 0;
}"
neMabYbU,azure mod lite pre config,Actyrn,Lua,Sunday 12th of May 2024 02:15:09 AM CDT,"-- Credits to Elegant and Weda, the original script coders

-- If ur gonna put in vault / showcase, pls don't put the source code directly or loadstring, put the discord

-- DO NOT EDIT BELOW IF YOU DON'T KNOW WHAT YOU'RE DOING!!

repeat wait() until game:IsLoaded()

Drawing = Drawing
hookmetamethod = hookmetamethod
newcclosure = newcclosure
getnamecallmethod = getnamecallmethod

-- Variables

local UiLib = loadstring(game:HttpGet(""https://pastebin.com/raw/JFzC7iXS""))()

local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")

local Workspace = game:GetService(""Workspace"")
local Players = game:GetService(""Players"")

local CoreGui = game:GetService(""CoreGui"")
local CorePackages = game:GetService(""CorePackages"")

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local StarterGui = game:GetService(""StarterGui"")
local Stats = game:GetService(""Stats"")

local CamlockPlr
local LocalPlr = Players.LocalPlayer

local CamBindEnabled = false

local AntiCheatNamecall

local StrafeSpeed = 0

local SelfDotCircle = Drawing.new(""Circle"")
SelfDotCircle.Filled = true
SelfDotCircle.Thickness = 1
SelfDotCircle.Radius = 7

local SelfTracerLine = Drawing.new(""Line"")
SelfTracerLine.Thickness = 2

local CamFovCircle = Drawing.new(""Circle"")
CamFovCircle.Thickness = 1.5

local CamTracerLine = Drawing.new(""Line"")
CamTracerLine.Thickness = 2

local CamHighlight = Instance.new(""Highlight"", CoreGui)

local CameraAimbot = {
	Enabled = false, 
	Keybind = nil, 

	Prediction = nil, 
	RealPrediction = nil, 

	Resolver = false, 
	ResolverType = ""Recalculate"", 

	JumpOffset = 0, 
	RealJumpOffset = nil, 

	HitPart = ""HumanoidRootPart"", 
	RealHitPart = nil, 

	UseAirPart = false, 
	AirPart = ""LowerTorso"", 
	AirCheckType = ""Once in Air"", 

	AutoPred = false, 
	Notify = false, 

	KoCheck = false, 
	Tracer = false, 

	Highlight = false, 

	Smoothing = false, 
	Smoothness = nil, 

	UseFov = false
}

local AntiLock = {
	Enabled = false, 
	Mode = ""Up"", 

	DesyncVel = Vector3.new(0, 9e9, 0), 
	DesyncAngles = 0.5
}

local SelfDot = {
	Enabled = false, 
	Tracer = false, 

	RandomHitPart = false, 
	Prediction = 1, 

	HitPart = ""HumanoidRootPart"", 
	RealHitPart = nil
}

local TargetStrafe = {
	Enabled = false, 

	Speed = 1, 
	Distance = 1, 
	Height = 1
}

local Utilities = {
	NoJumpCooldown = false, 
	NoSlowdown = false, 

	AutoStomp = false, 
	AutoReload = false
}

local Movement = {
	SpeedEnabled = false, 
	SpeedAmount = 1, 

	AutoJump = false, 

	BunnyHop = false, 
	HopAmount = 1, 

	FlightEnabled = false, 
	FlightAmount = 1
}

-- Functions

function ClosestPlr(Part, UseFov, FovCircle)
	local Distance, Closest = math.huge, nil

	for I, Target in pairs(Players:GetPlayers()) do
		if Target ~= LocalPlr then
			local Position = Workspace.CurrentCamera:WorldToViewportPoint(Target.Character[Part].Position)
			local Magnitude = (Vector2.new(Position.X, Position.Y) - UserInputService:GetMouseLocation()).Magnitude

			if UseFov then
				if Magnitude < Distance and Magnitude < FovCircle.Radius then
					Closest = Target
					Distance = Magnitude
				end
			else
				if Magnitude < Distance then
					Closest = Target
					Distance = Magnitude
				end
			end
		end
	end

	return Closest
end

-- You've caught me, the resolver is skidded...

function Resolver(Target)
	local Part = Target.Character[CameraAimbot.RealHitPart]

	local CurrentPosition = Part.Position
	local CurrentTime = tick()

	wait()

	local NewPosition = Part.Position
	local NewTime = tick()
	local DistanceTraveled = (NewPosition - CurrentPosition)
	local TimeInterval = NewTime - CurrentTime
	local Velocity = DistanceTraveled / TimeInterval

	CurrentPosition = NewPosition
	CurrentTime = NewTime

	if CameraAimbot.Resolver and CameraAimbot.ResolverType == ""MoveDirection"" then
		return CamlockPlr.Character.Humanoid.MoveDirection * CamlockPlr.Character.Humanoid.WalkSpeed
	end

	return Velocity
end

-- Window

local Actyrn = UiLib:CreateWindow(""Azure Modded (LITE) | Actyrn"", Vector2.new(500, 600), Enum.KeyCode.RightShift)

-- Tabs

local MainTab = Actyrn:CreateTab(""Main"")
local MiscTab = Actyrn:CreateTab(""Misc"")

-- Sectors

-- MAIN

local CameraAimbotSec = MainTab:CreateSector(""Camera Aimbot"", ""left"")
local AntiLockSec = MainTab:CreateSector(""Anti Lock"", ""right"")
local SelfDotSec = MainTab:CreateSector(""Self Dot"", ""right"")
local TargetStrafeSec = MainTab:CreateSector(""Target Strafe"", ""right"")

-- MISC

local UtilitiesSec = MiscTab:CreateSector(""Utilities"", ""left"")
local MovementSec = MiscTab:CreateSector(""Movement"", ""right"")

-- Toggles

-- MAIN

-- Camera Aimbot

CameraAimbotSec:AddToggle(""Enabled"", true, function(Value)
	CameraAimbot.Enabled = Value
end, ""CameraEnabled"")

CameraAimbotSec:AddKeybind(""Keybind"", Enum.KeyCode.T, function(Value)
	CameraAimbot.Keybind = Value
end, ""CameraKeybind"")

CameraAimbotSec:AddTextbox(""Prediction"", 0, function(Value)
	CameraAimbot.Prediction = Value
	CameraAimbot.RealPrediction = Value
end, ""CameraPrediction"")

local CamResolverTog = CameraAimbotSec:AddToggle(""Antilock Resolver"", false, function(Value)
	CameraAimbot.Resolver = Value
end, ""CameraAntilockResolver"")

CamResolverTog:AddKeybind(Enum.KeyCode.B, ""CameraAntilockResolverKeybind"")

CameraAimbotSec:AddDropdown(""Resolver Type"", {""Recalculate"", ""MoveDirection""}, ""Recalculate"", false, function(Value)
	CameraAimbot.ResolverType = Value
end, ""CameraResolverType"")

CameraAimbotSec:AddSlider(""Jump Offset"", -2, 0, 2, 100, function(Value)
	CameraAimbot.JumpOffset = Value
	CameraAimbot.RealJumpOffset = Value
end, ""CameraJumpOffset"")

CameraAimbotSec:AddDropdown(""Hit Part"", {""Head"", ""HumanoidRootPart"", ""UpperTorso"", ""LowerTorso""}, ""HumanoidRootPart"", false, function(Value)
	CameraAimbot.HitPart = Value
	CameraAimbot.RealHitPart = Value
end, ""CameraHitPart"")

CameraAimbotSec:AddToggle(""Use Air Part"", false, function(Value)
	CameraAimbot.UseAirPart = Value
end, ""CameraUseAirPart"")

CameraAimbotSec:AddDropdown(""Air Part"", {""Head"", ""HumanoidRootPart"", ""UpperTorso"", ""LowerTorso"", ""RightHand"", ""LeftHand"", ""RightFoot"", ""LeftFoot""}, ""LowerTorso"", false, function(Value)
	CameraAimbot.AirPart = Value
end, ""CameraAirPart"")

CameraAimbotSec:AddDropdown(""Air Check Type"", {""Once in Air"", ""Once Freefalling""}, ""Once in Air"", false, function(Value)
	CameraAimbot.AirCheckType = Value
end, ""CameraAirCheckType"")

CameraAimbotSec:AddToggle(""Auto Pred"", true, function(Value)
	CameraAimbot.AutoPred = Value
end, ""CameraAutoPred"")

CameraAimbotSec:AddToggle(""Notify"", true, function(Value)
	CameraAimbot.Notify = Value
end, ""CameraNotify"")

CameraAimbotSec:AddToggle(""KO Check"", true, function(Value)
	CameraAimbot.KoCheck = Value
end, ""CameraKOCheck"")

local CamTracerTog = CameraAimbotSec:AddToggle(""Tracer"", true, function(Value)
	CameraAimbot.Tracer = Value
end, ""CameraTracer"")

CamTracerTog:AddColorpicker(Color3.fromRGB(170, 120, 210), function(Value)
	CamTracerLine.Color = Value
end, ""CameraTracerColor"")

local CamHighlightTog = CameraAimbotSec:AddToggle(""Highlight"", true, function(Value)
	CameraAimbot.Highlight = Value
end, ""CameraHighlight"")

CamHighlightTog:AddColorpicker(Color3.fromRGB(170, 120, 210), function(Value)
	CamHighlight.FillColor = Value
end, ""CameraHighlightFillColor"")

CamHighlightTog:AddColorpicker(Color3.fromRGB(90, 65, 110), function(Value)
	CamHighlight.OutlineColor = Value
end, ""CameraHighlightOutlineColor"")

CameraAimbotSec:AddToggle(""Smoothing"", false, function(Value)
	CameraAimbot.Smoothing = Value
end, ""CameraSmoothing"")

CameraAimbotSec:AddTextbox(""Smoothness"", nil, function(Value)
	CameraAimbot.Smoothness = Value
end, ""CameraSmoothness"")

CameraAimbotSec:AddToggle(""Use FOV"", true, function(Value)
	CameraAimbot.UseFov = Value
end, ""CameraUseFOV"")

local CamFovTog = CameraAimbotSec:AddToggle(""FOV Visible"", true, function(Value)
	CamFovCircle.Visible = Value
end, ""CameraFOVVisible"")

CamFovTog:AddColorpicker(Color3.fromRGB(80, 15, 180), function(Value)
	CamFovCircle.Color = Value
end, ""CameraFOVColor"")

CameraAimbotSec:AddToggle(""FOV Filled"", true, function(Value)
	CamFovCircle.Filled = Value
end, ""CameraFOVFilled"")

CameraAimbotSec:AddSlider(""FOV Transparency"", 0, 0.15, 1, 100, function(Value)
	CamFovCircle.Transparency = Value
end, ""CameraFOVTransparency"")

CameraAimbotSec:AddSlider(""FOV Size"", 5, 80, 500, 1, function(Value)
	CamFovCircle.Radius = Value * 2
end, ""CameraFOVSize"")

-- Anti Lock

local AntiLockTog = AntiLockSec:AddToggle(""Enabled"", false, function(Value)
	AntiLock.Enabled = Value
end, ""AntiLockEnabled"")

AntiLockTog:AddKeybind(Enum.KeyCode.C, ""AntiLockKeybind"")

AntiLockSec:AddDropdown(""Mode"", {""Up"", ""Down"", ""Prediction Disabler"", ""Spinbot Desync""}, ""Up"", false, function(Value)
	AntiLock.Mode = Value
end, ""AntiLockMode"")

AntiLockSec:AddLabel(""Spinbot Desync"")

AntiLockSec:AddDropdown(""Desync Velocity"", {""Sky"", ""Underground""}, ""Sky"", false, function(Value)
	if Value == ""Sky"" then
		AntiLock.DesyncVel = Vector3.new(0, 9e9, 0)
	elseif Value == ""Underground"" then
		AntiLock.DesyncVel = Vector3.new(0, -9e9, 0)
	end
end, ""AntiLockDesyncVelocity"")

AntiLockSec:AddSlider(""Desync Angles"", -50, 0.5, 50, 2, function(Value)
	AntiLock.DesyncAngles = Value
end, ""AntiLockDesyncAngles"")

-- Self Dot

local SelfDotTog = SelfDotSec:AddToggle(""Enabled"", true, function(Value)
	SelfDot.Enabled = Value
end, ""SelfDotEnabled"")

SelfDotTog:AddColorpicker(Color3.fromRGB(170, 120, 210), function(Value)
	SelfDotCircle.Color = Value
	SelfTracerLine.Color = Value
end, ""SelfDotCircleLineColor"")

SelfDotSec:AddToggle(""Tracer"", false, function(Value)
	SelfDot.Tracer = Value
end, ""SelfDotTracer"")

SelfDotSec:AddToggle(""Random Hit Part"", false, function(Value)
	SelfDot.RandomHitPart = Value
end, ""SelfDotRandomHitPart"")

SelfDotSec:AddSlider(""Prediction"", 1, 2.5, 5, 2, function(Value)
	SelfDot.Prediction = Value / 20
end, ""SelfDotPrediction"")

SelfDotSec:AddDropdown(""Hit Part"", {""Head"", ""Torso""}, ""Torso"", false, function(Value)
	if Value == ""Head"" then
		SelfDot.HitPart = ""Head""
		SelfDot.RealHitPart = ""Head""
	else
		SelfDot.HitPart = ""HumanoidRootPart""
		SelfDot.RealHitPart = ""HumanoidRootPart""
	end
end, ""SelfDotHitPart"")

-- Target Strafe

local TargStrafeTog = TargetStrafeSec:AddToggle(""Target Strafe"", false, function(Value)
	TargetStrafe.Enabled = Value
end, ""TargetStrafe"")

TargStrafeTog:AddKeybind(nil, ""TargetStrafeKeybind"")

TargetStrafeSec:AddSlider(""Speed"", 1, 10, 10, 2, function(Value)
	TargetStrafe.Speed = Value
end, ""TargetStrafeSpeed"")

TargetStrafeSec:AddSlider(""Distance"", 1, 10, 20, 2, function(Value)
	TargetStrafe.Distance = Value
end, ""TargetStrafeDistance"")

TargetStrafeSec:AddSlider(""Height"", 1, 5, 20, 2, function(Value)
	TargetStrafe.Height = Value
end, ""TargetStrafeHeight"")

-- MISC

-- Utilities

UtilitiesSec:AddToggle(""No Jump Cooldown"", true, function(Value)
	Utilities.NoJumpCooldown = Value
end, ""NoJumpCooldown"")

UtilitiesSec:AddToggle(""No Slowdown"", true, function(Value)
	Utilities.NoSlowdown = Value
end, ""NoSlowdown"")

UtilitiesSec:AddToggle(""Auto Stomp"", false, function(Value)
	Utilities.AutoStomp = Value
end, ""AutoStomp"")

UtilitiesSec:AddToggle(""Auto Reload"", true, function(Value)
	Utilities.AutoReload = Value
end, ""AutoReload"")

local TrashTalkTog = UtilitiesSec:AddToggle(""Trash Talk"", false, function(Value)
	if Value then
		local TrashTalkWords = {""gg/halalgaming"", ""gg/hUvujCnGMb"", ""FemboyAssPounder"", ""How to aim pls help"", ""wow my little brother was playing and beat you :rofl:"", ""Mobile player beat u Lol XD"", ""420 ping and u got SLAMMED"", ""ur bad"", ""seed"", ""im not locking ur just bad"", ""clown"", ""sonned"", ""LOLL UR BAD"", ""dont even try.. ur not enough for the alpha"", ""ez"", ""gg = get good"", ""my grandmas better than u :skull:"", ""hop off kid"", ""bro cannot aim"", ""u got absolutely DOGGED on"", ""i run this server son"", ""what is bro doing :skull:"", ""no way"", ""sorry my cat walked across my keyboard and i still won""}

		ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(TrashTalkWords[math.random(#TrashTalkWords)], ""All"")
	end
end, ""TrashTalk"")

TrashTalkTog:AddKeybind(nil, ""TrashTalkKeybind"")

-- Movement

local SpeedTog = MovementSec:AddToggle(""Speed"", false, function(Value)
	Movement.SpeedEnabled = Value
end, ""Speed"")

SpeedTog:AddKeybind(Enum.KeyCode.Z, ""SpeedKeybind"")

MovementSec:AddSlider(""Speed Amount"", 1, 1000, 5000, 1, function(Value)
	Movement.SpeedAmount = Value / 1000
end, ""SpeedAmount"")

MovementSec:AddToggle(""Auto Jump"", false, function(Value)
	Movement.AutoJump = Value
end, ""AutoJump"")

MovementSec:AddToggle(""Bunny Hop"", false, function(Value)
	Movement.BunnyHop = Value
end, ""BunnyHop"")

MovementSec:AddSlider(""Hop Amount"", 1, 1, 50, 1, function(Value)
	Movement.HopAmount = Value / 100
end, ""HopAmount"")

local FlightTog = MovementSec:AddToggle(""Flight"", false, function(Value)
	Movement.FlightEnabled = Value
end, ""Flight"")

FlightTog:AddKeybind(Enum.KeyCode.X, ""FlightKeybind"")

MovementSec:AddSlider(""Flight Amount"", 1, 2000, 5000, 1, function(Value)
	Movement.FlightAmount = Value / 20
end, ""FlightAmount"")

-- Code

if CorePackages.Packages then
	CorePackages.Packages:Destroy()
end

-- Heartbeat Functions

RunService.Heartbeat:Connect(function()
	local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(LocalPlr.Character[SelfDot.RealHitPart].Position + (LocalPlr.Character[SelfDot.RealHitPart].AssemblyLinearVelocity * SelfDot.Prediction))

	if SelfDot.Enabled and OnScreen then
		SelfDotCircle.Visible = true
		SelfDotCircle.Position = Vector2.new(Position.X, Position.Y)
	else
		SelfDotCircle.Visible = false
	end
end)

RunService.Heartbeat:Connect(function()
	local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(LocalPlr.Character[SelfDot.RealHitPart].Position + (LocalPlr.Character[SelfDot.RealHitPart].AssemblyLinearVelocity * SelfDot.Prediction))

	if SelfDot.Tracer and OnScreen then
		SelfTracerLine.Visible = true
		SelfTracerLine.From = UserInputService:GetMouseLocation()
		SelfTracerLine.To = Vector2.new(Position.X, Position.Y)
	else
		SelfTracerLine.Visible = false
	end
end)

RunService.Heartbeat:Connect(function()
	if AntiLock.Enabled then
		local RootPart = LocalPlr.Character.HumanoidRootPart
		local Velocity, Cframe = RootPart.AssemblyLinearVelocity, RootPart.CFrame

		if AntiLock.Mode == ""Up"" then
			RootPart.AssemblyLinearVelocity = Vector3.new(0, 9e9, 0)
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity

		elseif AntiLock.Mode == ""Down"" then
			RootPart.AssemblyLinearVelocity = Vector3.new(0, -9e9, 0)
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity

		elseif AntiLock.Mode == ""Prediction Disabler"" then
			RootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity

		elseif AntiLock.Mode == ""Spinbot Desync"" then
			RootPart.AssemblyLinearVelocity = AntiLock.DesyncVel
			RootPart.CFrame = Cframe * CFrame.Angles(0, math.rad(AntiLock.DesyncAngles), 0)
			RunService.RenderStepped:Wait()
			RootPart.AssemblyLinearVelocity = Velocity
		end
	end
end)

RunService.Heartbeat:Connect(function()
	if Movement.FlightEnabled and not AntiLock.Enabled then
		local FlyVelocity = Vector3.new(0, 0.9, 0)

		if not UserInputService:GetFocusedTextBox() then
			if UserInputService:IsKeyDown(Enum.KeyCode.W) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.lookVector * Movement.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.A) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.rightVector * -Movement.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.S) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.lookVector * -Movement.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.D) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.rightVector * Movement.FlightAmount)
			end
		end

		LocalPlr.Character.HumanoidRootPart.AssemblyLinearVelocity = FlyVelocity
		LocalPlr.Character.Humanoid:ChangeState(""Freefall"")
	end
end)

-- Stepped Functions

RunService.Stepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CamlockPlr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
		CameraAimbot.RealJumpOffset = CameraAimbot.JumpOffset
	else
		CameraAimbot.RealJumpOffset = 0
	end
end)

RunService.Stepped:Connect(function()
	local AirCheckType

	if CameraAimbot.AirCheckType == ""Once in Air"" then
		AirCheckType = CamlockPlr.Character.Humanoid.FloorMaterial == Enum.Material.Air
	else
		AirCheckType = CamlockPlr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall
	end

	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.UseAirPart and AirCheckType then
		CameraAimbot.RealHitPart = CameraAimbot.AirPart
	else
		CameraAimbot.RealHitPart = CameraAimbot.HitPart
	end
end)

RunService.Stepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.AutoPred then
		local Ping = math.round(Stats.Network.ServerStatsItem[""Data Ping""]:GetValue())

		if Ping < 10 then
			CameraAimbot.RealPrediction = 0.097

		elseif Ping < 20 then
			CameraAimbot.RealPrediction = 0.112

		elseif Ping < 30 then
			CameraAimbot.RealPrediction = 0.115

		elseif Ping < 40 then
			CameraAimbot.RealPrediction = 0.125

		elseif Ping < 50 then
			CameraAimbot.RealPrediction = 0.122

		elseif Ping < 60 then
			CameraAimbot.RealPrediction = 0.123

		elseif Ping < 70 then
			CameraAimbot.RealPrediction = 0.132

		elseif Ping < 80 then
			CameraAimbot.RealPrediction = 0.134

		elseif Ping < 90 then
			CameraAimbot.RealPrediction = 0.137

		elseif Ping < 100 then
			CameraAimbot.RealPrediction = 0.146

		elseif Ping < 110 then
			CameraAimbot.RealPrediction = 0.148

		elseif Ping < 120 then
			CameraAimbot.RealPrediction = 0.144

		elseif Ping < 130 then
			CameraAimbot.RealPrediction = 0.157

		elseif Ping < 140 then
			CameraAimbot.RealPrediction = 0.122

		elseif Ping < 150 then
			CameraAimbot.RealPrediction = 0.152

		elseif Ping < 160 then
			CameraAimbot.RealPrediction = 0.163

		elseif Ping < 170 then
			CameraAimbot.RealPrediction = 0.192

		elseif Ping < 180 then
			CameraAimbot.RealPrediction = 0.193

		elseif Ping < 190 then
			CameraAimbot.RealPrediction = 0.167

		elseif Ping < 200 then
			CameraAimbot.RealPrediction = 0.166

		elseif Ping < 210 then
			CameraAimbot.RealPrediction = 0.168

		elseif Ping < 220 then
			CameraAimbot.RealPrediction = 0.166

		elseif Ping < 230 then
			CameraAimbot.RealPrediction = 0.157

		elseif Ping < 240 then
			CameraAimbot.RealPrediction = 0.168

		elseif Ping < 250 then
			CameraAimbot.RealPrediction = 0.165

		elseif Ping < 260 then
			CameraAimbot.RealPrediction = 0.176

		elseif Ping < 270 then
			CameraAimbot.RealPrediction = 0.177

		elseif Ping < 280 then
			CameraAimbot.RealPrediction = 0.181

		elseif Ping < 290 then
			CameraAimbot.RealPrediction = 0.182

		elseif Ping < 300 then
			CameraAimbot.RealPrediction = 0.185
		end
	else
		CameraAimbot.RealPrediction = CameraAimbot.Prediction
	end
end)

RunService.Stepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and TargetStrafe.Enabled then
		StrafeSpeed = StrafeSpeed + TargetStrafe.Speed

		LocalPlr.Character.HumanoidRootPart.CFrame = CamlockPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(StrafeSpeed), 0) * CFrame.new(0, TargetStrafe.Height, TargetStrafe.Distance)
	end
end)

RunService.Stepped:Connect(function()
	LocalPlr.Character.Humanoid.UseJumpPower = not Utilities.NoJumpCooldown
end)

RunService.Stepped:Connect(function()
	if Utilities.NoSlowdown then
		local Slowdowns = LocalPlr.Character.BodyEffects.Movement:FindFirstChild(""NoJumping"") or LocalPlr.Character.BodyEffects.Movement:FindFirstChild(""ReduceWalk"") or LocalPlr.Character.BodyEffects.Movement:FindFirstChild(""NoWalkSpeed"")

		if Slowdowns then
			Slowdowns:Destroy()
		end

		if LocalPlr.Character.BodyEffects.Reload.Value then
			LocalPlr.Character.BodyEffects.Reload.Value = false
		end

		if LocalPlr.Character.BodyEffects.Reloading.Value then
			LocalPlr.Character.BodyEffects.Reloading.Value = false
		end
	end
end)

RunService.Stepped:Connect(function()
	if Utilities.AutoStomp then
		ReplicatedStorage.MainEvent:FireServer(""Stomp"")
	end
end)

RunService.Stepped:Connect(function()
	if Utilities.AutoReload and LocalPlr.Character:FindFirstChildWhichIsA(""Tool"").Ammo.Value <= 0 then
		ReplicatedStorage.MainEvent:FireServer(""Reload"", LocalPlr.Character:FindFirstChildWhichIsA(""Tool""))
	end
end)

RunService.Stepped:Connect(function()
	if Movement.SpeedEnabled then
		LocalPlr.Character.HumanoidRootPart.CFrame = LocalPlr.Character.HumanoidRootPart.CFrame + LocalPlr.Character.Humanoid.MoveDirection * Movement.SpeedAmount
	end
end)

RunService.Stepped:Connect(function()
	if Movement.AutoJump and LocalPlr.Character.Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall and LocalPlr.Character.Humanoid.MoveDirection.Magnitude > 0 then
		LocalPlr.Character.Humanoid:ChangeState(""Jumping"")
	end
end)

RunService.Stepped:Connect(function()
	if Movement.BunnyHop and LocalPlr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
		LocalPlr.Character.HumanoidRootPart.CFrame = LocalPlr.Character.HumanoidRootPart.CFrame + LocalPlr.Character.Humanoid.MoveDirection * Movement.HopAmount
	end
end)

-- RenderStepped Functions

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled then
		if CameraAimbot.Resolver then
			if CameraAimbot.Smoothing then
				Workspace.CurrentCamera.CFrame = Workspace.CurrentCamera.CFrame:Lerp(CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Resolver(CamlockPlr) * CameraAimbot.RealPrediction)), CameraAimbot.Smoothness, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
			else
				Workspace.CurrentCamera.CFrame = CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Resolver(CamlockPlr) * CameraAimbot.RealPrediction))
			end
		else
			if CameraAimbot.Smoothing then
				Workspace.CurrentCamera.CFrame = Workspace.CurrentCamera.CFrame:Lerp(CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction)), CameraAimbot.Smoothness, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
			else
				Workspace.CurrentCamera.CFrame = CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction))
			end
		end
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.KoCheck and (CamlockPlr.Character.Humanoid.Health <= 2.25 or LocalPlr.Character.Humanoid.Health <= 2.25) then
		CamBindEnabled = false
	end
end)

RunService.RenderStepped:Connect(function()
	local Position, OnScreen

	if CameraAimbot.Resolver then
		Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Resolver(CamlockPlr) * CameraAimbot.RealPrediction))
	else
		Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction))
	end

	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.Tracer and OnScreen then
		CamTracerLine.Visible = true
		CamTracerLine.From = UserInputService:GetMouseLocation()
		CamTracerLine.To = Vector2.new(Position.X, Position.Y)
	else
		CamTracerLine.Visible = false
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamBindEnabled and CameraAimbot.Highlight then
		CamHighlight.Parent = CamlockPlr.Character
	else
		CamHighlight.Parent = CoreGui
	end
end)

RunService.RenderStepped:Connect(function()
	CamFovCircle.Position = UserInputService:GetMouseLocation()
end)

RunService.RenderStepped:Connect(function()
	if (SelfDot.Enabled or SelfDot.Tracer) and SelfDot.RandomHitPart then
		local RandomHitParts = {""Head"", ""HumanoidRootPart"", ""UpperTorso"", ""LowerTorso"", ""RightUpperArm"", ""LeftUpperArm"", ""RightLowerArm"", ""LeftLowerArm"", ""RightUpperLeg"", ""LeftUpperLeg"", ""RightLowerLeg"", ""LeftLowerLeg""}

		SelfDot.RealHitPart = RandomHitParts[math.random(#RandomHitParts)]
		wait(0.6)
	else
		SelfDot.RealHitPart = SelfDot.HitPart
	end
end)

-- InputBegan Functions

UserInputService.InputBegan:Connect(function(Key)
	if CameraAimbot.Enabled and Key.KeyCode == CameraAimbot.Keybind and not UserInputService:GetFocusedTextBox() then
		local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(ClosestPlr(CameraAimbot.RealHitPart, CameraAimbot.UseFov, CamFovCircle).Character[CameraAimbot.RealHitPart].Position)

		if CamBindEnabled then
			CamBindEnabled = false

			if CameraAimbot.Notify then
				StarterGui:SetCore(""SendNotification"", {
					Title = ""Azure Modded [Actyrn]"", 
					Text = ""Untargeting: "" .. CamlockPlr.DisplayName, 
					Duration = 2.5
				})
			end
		else
			if OnScreen then
				CamBindEnabled = true
				CamlockPlr = ClosestPlr(CameraAimbot.RealHitPart, CameraAimbot.UseFov, CamFovCircle)

				if CameraAimbot.Notify then
					StarterGui:SetCore(""SendNotification"", {
						Title = ""Azure Modded [Actyrn]"", 
						Text = ""Targeting: "" .. CamlockPlr.DisplayName, 
						Duration = 2.5
					})
				end
			end
		end
	end
end)

-- Hookmetamethod functions

AntiCheatNamecall = hookmetamethod(game, ""__namecall"", newcclosure(function(Self, ...)
	local Arguments = {...}
	local AntiCheats = {""BreathingHAMON"", ""TeleportDetect"", ""JJARC"", ""TakePoisonDamage"", ""CHECKER_1"", ""CHECKER"", ""GUI_CHECK"", ""OneMoreTime"", ""checkingSPEED"", ""BANREMOTE"", ""PERMAIDBAN"", ""KICKREMOTE"", ""BR_KICKPC"", ""FORCEFIELD"", ""Christmas_Sock"", ""VirusCough"", ""Symbiote"", ""Symbioted"", ""RequestAFKDisplay""}

	if table.find(AntiCheats, Arguments[1]) and getnamecallmethod() == ""FireServer"" then
		return
	end

	return AntiCheatNamecall(Self, ...)
end))"
kp9bvaaM,index-profile,sriyanto,HTML,Saturday 11th of May 2024 11:43:29 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>My Portfolio</title>
    <link rel=""stylesheet"" href=""styles.css"">
</head>
<body>
    <header>
        <h1>My Portfolio</h1>
        <button id=""mode-switch"">Switch Mode</button>

    </header>
    <section id=""profile"">
        <img src=""/img/1.jpg"" alt=""Profile Picture"">
        <h2>About Me</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer eget ante id nisl pulvinar vestibulum.</p>
    </section>
    <section id=""gallery"">
      <h2>Photo Gallery</h2>
      <div class=""gallery-container"">
          <button id=""prevBtn"">&lt;</button>
          <div class=""gallery"">
              <img src=""/img/2.jpg"" alt=""Gallery Image 1"">
              <img src=""/img/3.jpg"" alt=""Gallery Image 2"">
              <img src=""/img/4.jpg"" alt=""Gallery Image 3"">
              <img src=""/img/5.jpg"" alt=""Gallery Image 1"">
              <img src=""/img/6.jpg"" alt=""Gallery Image 2"">
              <img src=""/img/7.jpg"" alt=""Gallery Image 3"">
              <img src=""/img/8.jpg"" alt=""Gallery Image 2"">
              <img src=""/img/9.jpg"" alt=""Gallery Image 3"">
              <!-- Add more images as needed -->
          </div>
          <button id=""nextBtn"">&gt;</button>
      </div>
  </section>
    <section id=""sports"">
        <h2>My Favorite Sports</h2>
        <ul>
            <li>Football</li>
            <li>Basketball</li>
            <li>Tennis</li>
            <!-- Add more sports as needed -->
        </ul>
    </section>
    <section id=""books"">
        <h2>My Favorite Books</h2>
        <ul>
            <li>The Great Gatsby</li>
            <li>To Kill a Mockingbird</li>
            <li>1984</li>
            <!-- Add more books as needed -->
        </ul>
    </section>
    <section id=""contact"">
        <h2>Contact Me</h2>
        <form id=""contact-form"">
            <input type=""text"" id=""name"" placeholder=""Your Name"" required>
            <input type=""email"" id=""email"" placeholder=""Your Email"" required>
            <textarea id=""message"" placeholder=""Your Message"" required></textarea>
            <button type=""submit"">Send</button>
        </form>
    </section>
    <script src=""script.js""></script>
</body>
</html>
"
DXBHHcQW,Pet Simulator 99 Script! (Ez HUB),Bacon_Script,Lua,Saturday 11th of May 2024 11:41:25 PM CDT,loadstring(game:HttpGet('https://egorikusa.space/4f41231d8cdf6534683ae0d0.lua'))()
3rvk9S3g,Pet Simulator 99 Script Auto Steal Bank In Backroom Update,Bacon_Script,Lua,Saturday 11th of May 2024 11:36:13 PM CDT,"loadstring(game:HttpGet('https://pastebin.com/raw/DXBHHcQW'))()

Copy and paste this to your executorüî•üò≥"
AG0u6Qhp,C Bitwise Operators,45b94806,C,Saturday 11th of May 2024 10:25:02 PM CDT,"#include <stdio.h>
 
int main()
{
   // BITWISE OPERATORS = special operators used in bit level programming
   //                                          (knowing binary is important for this topic)

   // & = AND
   // | = OR
   // ^ = XOR
   // <<  left shift
   // >>  right shift

   int x = 6;  //    6 = 00000110
   int y = 12; // 12 = 00001100 
   int z = 0;  //    0 = 00000000

   z = x & y;
   printf(""AND = %d\n"", z);

   z = x | y;
   printf(""OR = %d\n"", z);

   z = x ^ y;
   printf(""XOR = %d\n"", z);

   z = x << 2;
   printf(""SHIFT LEFT = %d\n"", z);

   z = x >> 2;
   printf(""SHIFT RIGHT = %d\n"", z);

   return 0;
}"
92en2e1J,Dl Important programs,nauseant,Lua,Saturday 11th of May 2024 09:50:08 PM CDT,"shell.run(""pastebin get mwCWeAEY update"")
shell.run(""delete startup"")"
ny1E14Kp,snowybot,coinwalk,JavaScript,Saturday 11th of May 2024 09:34:10 PM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = Number((olderest/1000).toFixed(8));
var beast = betbse;
var tens = (betbse*10);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var chickendinner = (olderest*24000);
var great = olderest;
var original = olderest;
var flyt = 6.9;
var miss = 2.9;
var vimmi = ((Math.floor(olderest/tens))*tens);
var olfen = olderest;
var fart = 7;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(vimmi+(beast*flyt))) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    vimmi = parseFloat(great);
} 
if (great<(vimmi-(beast*miss))) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    vimmi = parseFloat(great);
}  
if ((great<=(olfen-(olfen*0.02)))&&(great<(((Math.floor(great/tens))*tens)+sevens))) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    fart = 0;
    vimmi = ((Math.floor(great/tens))*tens);
    olfen = parseFloat(great);
}
if ((great>=(olfen+(olfen*0.04)))&&(great<(((Math.floor(great/tens))*tens)+sevens))) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    fart = 0;
    vimmi = ((Math.floor(great/tens))*tens);
    olfen = parseFloat(great);
}
if (great>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();"
c6AA00Lu,CC network remote,nauseant,Lua,Saturday 11th of May 2024 09:30:12 PM CDT,"local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(24)
while true do
    modem.transmit(24, 24, ""hello"")
    os.sleep(3)
end"
sJbSqF1q,diffusion,ethansmith2000,Python,Saturday 11th of May 2024 09:15:13 PM CDT,"import torch
import torch.nn as nn
import numpy as np
import matplotlib.pyplot as plt
import math
from tqdm import tqdm
import itertools
import torch.nn.functional as F
import pandas as pd
import seaborn as sns


class SinusoidalPositionalEmbedding(nn.Module):
    def __init__(self, embedding_dim=10, max_length=1000):
        super(SinusoidalPositionalEmbedding, self).__init__()
        self.embedding_dim = embedding_dim
        self.max_length = max_length
        
        # Compute the positional encodings once in log space
        self.positional_encodings = self._get_positional_encodings()

    def _get_positional_encodings(self):
        pe = torch.zeros(self.max_length, self.embedding_dim)
        position = torch.arange(0, self.max_length, dtype=torch.float).unsqueeze(1)
        div_term = torch.exp(torch.arange(0, self.embedding_dim, 2).float() * (-math.log(10000.0) / self.embedding_dim))
        
        pe[:, 0::2] = torch.sin(position * div_term)
        pe[:, 1::2] = torch.cos(position * div_term)
        # pe = pe.unsqueeze(0)
        return pe

    def forward(self, time):
        # Add positional embeddings to the input tensor
        return self.positional_encodings[time, :]

# Make the score diction network (i.e. same role as the UNet)
class ScoreNetwork(nn.Module):
    """"""
        Has a simple feed forward MLP structure. 

        Takes as input the data point and a embedding encoding time.
    """"""

    def __init__(self, data_dim=2, time_dim=2, dim=128, total_timesteps=1000):
        super(ScoreNetwork, self).__init__()
        self.data_dim = data_dim
        self.time_dim = time_dim
        # Make the positional embedding
        self.positional_embedding = SinusoidalPositionalEmbedding(
            time_dim, 
            total_timesteps
        )

        # act = nn.SiLU
        act = nn.LeakyReLU

        self.network = nn.Sequential(
            nn.Linear(data_dim + time_dim, dim),
            act(),
            nn.Linear(dim, dim),
            act(),
            nn.Linear(dim, data_dim),
        )


    def forward(self, x, time):
        """"""
            Forward pass of the network
        """"""
        # Map the time through a positional encoding
        time_embedding = self.positional_embedding(time)
        x = self.network(torch.cat([x, time_embedding], dim=-1))
        return x

# Make a Diffusion model object
class DiffusionModel(nn.Module):

    def __init__(
            self, 
            total_timesteps=1000,   
            data_dim=2, 
            time_dim=10,
            beta_start=0.0001,
            beta_end=0.02,
            offset=4.0,
            spread=1.0,
        ):
        super(DiffusionModel, self).__init__()

        self.total_timesteps = total_timesteps
        # Make a score network
        self.score_network = ScoreNetwork(
            data_dim=data_dim, 
            time_dim=time_dim
        )
        self.offset = offset
        self.spread = spread

        # Make alphas and betas
        self.betas = torch.linspace(beta_start, beta_end, total_timesteps) # Use linear schedule
        self.alphas = 1 - self.betas
        # Make cumulative products
        self.cumulative_alphas = torch.cumprod(self.alphas, dim=0)
        self.cumulative_betas = 1 - self.cumulative_alphas

        self.alphas_cumprod = torch.cumprod(self.alphas, axis=0)
        self.alphas_cumprod_prev = F.pad(
            self.alphas_cumprod[:-1], (1, 0), value=1.)

        # required for self.add_noise
        self.sqrt_alphas_cumprod = self.alphas_cumprod ** 0.5
        self.sqrt_one_minus_alphas_cumprod = (1 - self.alphas_cumprod) ** 0.5

        # required for reconstruct_x0
        self.sqrt_inv_alphas_cumprod = torch.sqrt(1 / self.alphas_cumprod)
        self.sqrt_inv_alphas_cumprod_minus_one = torch.sqrt(
            1 / self.alphas_cumprod - 1)

        # required for q_posterior
        self.posterior_mean_coef1 = self.betas * torch.sqrt(self.alphas_cumprod_prev) / (1. - self.alphas_cumprod)
        self.posterior_mean_coef2 = (1. - self.alphas_cumprod_prev) * torch.sqrt(self.alphas) / (1. - self.alphas_cumprod)

    def get_variance(self, t):
        if t == 0:
            return 0

        variance = self.betas[t] * (1. - self.alphas_cumprod_prev[t]) / (1. - self.alphas_cumprod[t])
        variance = variance.clip(1e-20)
        return variance
    
    def predict_noise(self, x, t):
        """"""
            Predicts the noise at a noisy sample and time step
        """"""
        return self.score_network(x, t)

    def step(self, model_output, timestep, x_t):
        t = timestep
        # Reconstruct the original sample
        s1 = self.sqrt_inv_alphas_cumprod[t].reshape(-1, 1)
        s2 = self.sqrt_inv_alphas_cumprod_minus_one[t].reshape(-1, 1)
        pred_original_sample = s1 * x_t - s2 * model_output
        # Predict the previous sample
        s1 = self.posterior_mean_coef1[t].reshape(-1, 1)
        s2 = self.posterior_mean_coef2[t].reshape(-1, 1)
        pred_prev_sample = s1 * pred_original_sample + s2 * x_t
        # Add noise back to the sample
        variance = 0
        if t > 0:
            noise = torch.randn_like(model_output)
            variance = (self.get_variance(t) ** 0.5) * noise
        # if t > 0:
        #     noise = torch.randn_like(model_output)
        #     variance = (self.get_variance(t) ** 0.5) * model_output

        pred_prev_sample = pred_prev_sample + variance

        return pred_prev_sample

    def add_noise(self, x_start, x_noise, timesteps):
        s1 = self.sqrt_alphas_cumprod[timesteps]
        s2 = self.sqrt_one_minus_alphas_cumprod[timesteps]

        s1 = s1.reshape(-1, 1)
        s2 = s2.reshape(-1, 1)

        return s1 * x_start + s2 * x_noise
    
    def sample(self, num_samples=1000, num_timesteps=1000, device='cpu'):
        orig_sample = torch.randn(num_samples, 2) * self.spread
        orig_sample[:, 0] -= self.offset

        sample = orig_sample.clone()
        timesteps = list(range(self.total_timesteps))[::-1]
        interemediate_values = torch.empty(num_samples, num_timesteps, 2)

        for i, t in enumerate(timesteps):
            t = torch.from_numpy(np.repeat(t, num_samples)).long()
            with torch.no_grad():
                residual = self.predict_noise(sample, t)
            sample = self.step(residual, t[0], sample)
            interemediate_values[:, i, :] = sample
        
        return orig_sample, sample, interemediate_values

# Train the model
def train(model, num_iterations=1000, batch_size=32, learning_rate=1e-4, device='cpu'):
    model = model.to(device)
    optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate, betas=(0.9, 0.98))
    loss_fn = nn.MSELoss()
    losses = []
    for i in tqdm(range(num_iterations)):
        optimizer.zero_grad()
        noise_free_data = torch.randn(batch_size, 2).to(device) * model.spread
        noise_free_data[:, 0] += model.offset

        time_steps = torch.randint(0, model.total_timesteps, (noise_free_data.shape[0],)) # Randomly sample time steps uniformly  
        noise = torch.randn(noise_free_data.shape) * model.spread
        noise[:, 0] -= model.offset

        noisy_data = model.add_noise(noise_free_data, noise, time_steps)
        predicted_noise = model.predict_noise(noisy_data, time_steps)
        loss = loss_fn(predicted_noise, noise)
        losses.append(loss.item())
        loss.backward()
        optimizer.step()
        if i % 10000 == 0:
            # Generate 1000 samples and plot them
            orig_sample, samples, _ = model.sample(num_samples=500, num_timesteps=1000, device=device)
            samples = samples.detach().cpu().numpy()
            plt.figure()
            # Plot the true data
            data = torch.randn(1000, 2).cpu().numpy() * model.spread
            data[:, 0] += model.offset

            plt.scatter(orig_sample[:, 0], orig_sample[:, 1], label='Noise dist', alpha=0.5)
            plt.scatter(data[:, 0], data[:, 1], label='True Data', alpha=0.5)
            plt.scatter(samples[:, 0], samples[:, 1], label='Samples', alpha=0.5)
            plt.legend()
            plt.savefig(f'samples_{i}.png')

    # Plot the losses
    plt.figure()
    losses = np.convolve(losses, np.ones(5000) / 5000, mode='valid')
    plt.plot(losses)
    plt.savefig('plots/losses.png')
"
R60RnUKP,openvpn ovpn server mikrotik,kiedtink,Bash,Saturday 11th of May 2024 09:05:41 PM CDT,"/certificate
add name=ca-cert common-name=ca-cert days-valid=3650 key-size=2048 key-usage=crl-sign,key-cert-sign
add name=server-cert common-name=server-cert days-valid=3650 key-size=2048 key-usage=digital-signature,key-encipherment,tls-server
add name=client-cert common-name=client-cert days-valid=3650 key-size=2048 key-usage=tls-client


/certificate
sign ca-cert ca-crl-host=GIVE.IP.WAN.HERE
sign server-cert ca=ca-cert
sign client-cert ca=ca-cert
set server-cert trusted=yes

/certificate
export-certificate ca-cert

/ppp profile
add local-address=10.10.21.254 name=endpoint only-one=yes rate-limit=""5M 0 0 0 8 1M""
add local-address=10.10.21.254 name=kied only-one=yes rate-limit=""100M 0 0 0 8 100M""
add local-address=10.31.136.3 name=Router_Distribusi only-one=yes
/ppp secret
add name=


/interface ovpn-server server
set certificate=server-cert cipher=aes256-cbc,aes128-gcm,aes192-gcm,aes256-gcm default-profile=endpoint enabled=yes protocol=udp"
ZkGpZqfB,Game Logic,sriyanto,Lua,Saturday 11th of May 2024 08:53:17 PM CDT,"local Round = require(script.RoundModule)

local Door = require(script.DoorModule)

local Status = game.ReplicatedStorage:WaitForChild(""Status"")

while wait() do
	
	repeat
		
		local availablePlayers = {}
		
		for i, plr in pairs(game.Players:GetPlayers()) do
			if not plr:FindFirstChild(""InMenu"") then
				table.insert(availablePlayers,plr)
			end
		end
		
		Status.Value = ""2 'Ready' players Needed (""..#availablePlayers..""/2)""
		
		wait(2)
		
	until #availablePlayers >= 1
	
	Round.Intermission(5)
	
	local chosenChapter = Round.SelectChapter() -- This is the map currently in the chapters folder
	
	local clonedChapter = chosenChapter:Clone()
	clonedChapter.Name = ""Map""
	clonedChapter.Parent = game.Workspace
	
	wait(2)
	
	if clonedChapter:FindFirstChild(""Doors"") then
		Door.ActivateDoors(clonedChapter.Doors)
	else
		warn(""Fatal error: You forgot to add the Doors folder to your map."")
	end
	
	
	
	local contestants = {}
	
	for i, v in pairs(game.Players:GetPlayers()) do
		if not v:FindFirstChild(""InMenu"") then
			table.insert(contestants,v)
			print(""Added player ""..v.Name.."" to contestants"")
		end
	end
	
	
	local chosenPiggy = Round.ChoosePiggy(contestants)
	
	for i, v in pairs(contestants) do
		if v == chosenPiggy then
			table.remove(contestants,i)
		end
	end

	for i, v in pairs(contestants) do
		if v ~= chosenPiggy then
			print(""Firing togglecrouch for player: ""..v.Name)
			game.ReplicatedStorage.ToggleCrouch:FireClient(v,true)
		end
	end


	
	wait(2)
	
	Round.DressPiggy(chosenPiggy)
	
	Round.TeleportPiggy(chosenPiggy)
	
	if clonedChapter:FindFirstChild(""PlayerSpawns"") then
		Round.TeleportPlayers(contestants, clonedChapter.PlayerSpawns:GetChildren())
	else
		warn(""Fatal Error: You didn't add a PlayerSpawns folder into your Map"")
	end
	
	Round.InsertTag(contestants,""Contestant"")
	Round.InsertTag({chosenPiggy},""Piggy"")
	
	Round.StartRound(600,chosenPiggy,clonedChapter)
	
	contestants = {}
	
	for i, v in pairs(game.Players:GetPlayers()) do
		if not v:FindFirstChild(""InMenu"") then
			table.insert(contestants,v)
		end
	end
	
	if game.Workspace.Lobby:FindFirstChild(""Spawns"") then
		Round.TeleportPlayers(contestants, game.Workspace.Lobby.Spawns:GetChildren())
	else
		warn(""Fatal Error: You have not added a Spawns folder into your Lobby with the SpawnLocations inside. Please do this to make the script work."")
	end
	
	clonedChapter:Destroy()
	
	Round.RemoveTags()
	
	wait(2)
end"
6W2sPYVd,[JS] C.AI GET ID FROM CHARACTER,WILDAN_IZZUDIN,JavaScript,Saturday 11th of May 2024 07:54:42 PM CDT,"const cheerio = require('cheerio')
const puppeteer = require('puppeteer')
const iPhone = puppeteer.devices['iPhone 12']

module.exports = async q => {
   const browser = await puppeteer.launch({
      headless: 'new',
      args: [
         ""--fast-start"",
         ""--disable-extensions"",
         ""--no-sandbox"",
         ""--disable-setuid-sandbox"",
         ""--no-gpu"",
         ""--disable-background-timer-throttling"",
         ""--disable-renderer-backgrounding"",
         ""--override-plugin-power-saver-for-testing=never"",
         ""--disable-extensions-http-throttling"",
      ]
   })
   try {
      const page = await browser.newPage()
      await page.emulate(iPhone)
      await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3');
      await page.setExtraHTTPHeaders({
         cookie: 'your_cookie_here'      
      })
      await page.goto('https://character.ai/', {
         waitUntil: 'networkidle2',
         timeout: 0
      })
      await page.type('input[placeholder=""Search for Characters""]', q)
      await page.keyboard.press('Enter')
      await page.waitForTimeout(1200)
      const html = await page.content()
      await browser.close()
      const $ = cheerio.load(html)
      const data = []
      $('div[class=""flex flex-col sm:gap-3 w-full h-full overflow-y-auto overflow-x-hidden""]').find('a[class=""group flex w-full flex-row justify-between hover:bg-surface-elevation-3 hover:rounded-spacing-m p-2 items-center""]').each((i,e) => data.push($(e).attr('href').split`/`[2]))
      if (data.length < 1) return ({
         status: false,
         msg: '[Character.AI]: I can\'t find the character!'
      })
      const result = data.splice(0, 20)
      return ({
         status: true,
         data: result
      }) 
   } catch (e) {
      await browser.close()
      return ({
         status: false,
         msg: '[Character.AI]: ' + e.message
      })
   }
}
"
eFQRiPrD,Arduino - Sketch 8 rel√®,webtronico,Arduino,Saturday 11th of May 2024 07:26:34 PM CDT,"const int relePin[8] = {3, 4, 5, 6, 7, 8, 9, 10}; // Array per i pin dei rel√®
const int pulsanteAntirimbalzo = 2; // Pin del pulsante antirimbalzo

int statoSequenza = 0; // Stato sequenza (0: spento, 1: acceso, 2: inversione)
int releAttivo = 0; // Indice del rel√® attivo
unsigned long tempoRitardo = 3000; // Tempo di ritardo in millisecondi (3 secondi)
unsigned long tempoAttivazione = 0; // Memorizza il tempo di attivazione dell'ultimo rel√®

void setup() {
  for (int i = 0; i < 8; i++) {
    pinMode(relePin[i], OUTPUT); // Configura i pin dei rel√® come output
  }
  pinMode(pulsanteAntirimbalzo, INPUT_PULLUP); // Configura il pin del pulsante come input con pullup interno
}

void loop() {
  // Controllo del pulsante antirimbalzo
  if (digitalRead(pulsanteAntirimbalzo) == LOW) {
    delay(50); // Debounce del pulsante
    if (digitalRead(pulsanteAntirimbalzo) == LOW) {
      // Pulsante premuto, gestisci la sequenza
      if (statoSequenza == 0) {
        attivaSequenza();
        statoSequenza = 1;
      } else if (statoSequenza == 1) {
        invertiSequenza();
        statoSequenza = 2;
      } else {
        disattivaSequenza();
        statoSequenza = 0;
      }
    }
  }

  // Controllo tempo di attivazione rel√®
  if ((statoSequenza == 1 || statoSequenza == 2) && millis() - tempoAttivazione >= tempoRitardo) {
    gestisciReleSuccessivo(); // Gestisci il rel√® successivo
  }
}

void attivaSequenza() {
  releAttivo = 0;
  tempoAttivazione = millis();
  attivaRele();
}

void invertiSequenza() {
  releAttivo = 7;
  tempoAttivazione = millis();
  attivaRele();
}

void disattivaSequenza() {
  releAttivo = 7;
  tempoAttivazione = millis();
  disattivaRele();
}

void attivaRele() {
  digitalWrite(relePin[releAttivo], HIGH);

  // Incrementa l'indice del rel√® attivo
  releAttivo = (releAttivo + 1) % 8;

  // Aggiorna il tempo di attivazione
  tempoAttivazione = millis();
}

void disattivaRele() {
  digitalWrite(relePin[releAttivo], LOW);

  // Decrementa l'indice del rel√® attivo
  releAttivo = (releAttivo - 1 + 8) % 8; // Modulo con offset per gestire l'indice in modo negativo

  // Aggiorna il tempo di attivazione
  tempoAttivazione = millis();
}

void gestisciReleSuccessivo() {
  if (statoSequenza == 1) {
    attivaRele();
  } else {
    disattivaRele();
  }
}"
JtYSUMyX,2024-05-11_stats.json,rdp_snitch,JSON,Saturday 11th of May 2024 07:18:24 PM CDT,"{
  ""ip"": {
    ""64.124.50.139"": 9,
    ""185.170.144.113"": 21,
    ""139.59.110.113"": 6,
    ""51.8.120.48"": 6,
    ""58.137.124.126"": 3,
    ""103.47.194.167"": 3,
    ""139.162.34.121"": 210,
    ""35.203.210.52"": 9,
    ""159.223.34.114"": 9,
    ""212.70.149.146"": 9,
    ""193.32.127.144"": 9,
    ""107.151.182.58"": 3,
    ""80.66.66.145"": 3,
    ""103.75.186.158"": 3,
    ""179.60.150.59"": 3,
    ""69.164.202.89"": 18,
    ""213.142.148.244"": 3,
    ""118.193.56.149"": 3,
    ""87.251.75.145"": 9,
    ""185.170.144.3"": 6,
    ""185.161.248.121"": 9,
    ""152.42.184.74"": 3,
    ""194.165.16.73"": 6,
    ""198.235.24.177"": 9,
    ""194.165.16.78"": 6,
    ""194.165.16.76"": 9,
    ""116.140.196.215"": 3,
    ""185.122.204.179"": 6,
    ""35.203.211.204"": 9,
    ""123.207.198.105"": 6,
    ""141.98.115.24"": 33,
    ""198.235.24.74"": 9
  },
  ""asn"": {
    ""AS6461"": 9,
    ""AS197414"": 27,
    ""AS14061"": 18,
    ""AS8075"": 6,
    ""AS4750"": 3,
    ""AS140832"": 3,
    ""AS63949"": 228,
    ""AS396982"": 36,
    ""AS204428"": 9,
    ""AS39351"": 9,
    ""AS21859"": 3,
    ""AS51765"": 3,
    ""AS135905"": 3,
    ""AS211179"": 3,
    ""AS212219"": 3,
    ""AS135377"": 3,
    ""AS208091"": 9,
    ""AS49202"": 9,
    ""AS48721"": 21,
    ""AS4837"": 3,
    ""AS57523"": 6,
    ""AS45090"": 6,
    ""AS210574"": 33
  },
  ""isp"": {
    ""Zayo Bandwidth"": 9,
    ""Xhost Internet Solutions LP"": 36,
    ""DIGITALOCEAN"": 6,
    ""Microsoft Germany"": 6,
    ""btnc"": 3,
    ""FTECH"": 3,
    ""Akamai Technologies, Inc."": 228,
    ""Google LLC"": 36,
    ""DigitalOcean, LLC"": 12,
    ""SS-Net"": 9,
    ""31173 Services AB"": 9,
    ""Zenlayer Inc"": 3,
    ""Oy Crea Nova Hosting Solution Ltd"": 3,
    ""Inet software one member company limited"": 3,
    ""Veraton Projects LTD"": 3,
    ""Hosting Dunyam Bilisim Teknolojileri Ticaret Limited Sirketi"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Kisara LLC"": 9,
    ""Flyservers S.A."": 21,
    ""China Unicom CHINA169 Network"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Shenzhen Tencent Computer Systems Company Limited"": 6,
    ""YUNUS EMRE ATILGAN trading as POYRAZ HOSTING"": 33
  },
  ""org"": {
    ""Microsoft Corporation"": 9,
    ""Xhostis"": 27,
    ""DigitalOcean, LLC"": 15,
    ""Microsoft Azure Cloud (germanynortheast)"": 6,
    ""Boutique Newcity Public Company"": 3,
    ""Unknown"": 3,
    ""Linode, LLC"": 210,
    ""Google Cloud (europe-west2)"": 18,
    ""4Media Ltd"": 9,
    ""31173 Services Switzerland"": 9,
    ""ZENLA"": 3,
    ""Xhost Internet Solutions"": 12,
    ""Inet software one member company limited"": 3,
    ""Maxwell Group LTD"": 3,
    ""Linode"": 18,
    ""Hosting Dunyam Bilisim Teknolojileri Ticaret Limited Sirketi"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Kisara LLC"": 9,
    ""Digital Ocean"": 3,
    ""Flyservers S.A"": 21,
    ""Palo Alto Networks, Inc"": 18,
    ""China United Network Communications Corporation Limited"": 3,
    ""Starcrecium Limited"": 6,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 6,
    ""Yunus Emre Atilgan Poyraz Hosting"": 33
  },
  ""regionName"": {
    ""Virginia"": 9,
    ""North Holland"": 36,
    ""South West"": 9,
    ""Saxony-Anhalt"": 6,
    ""Bangkok"": 6,
    ""Hanoi"": 6,
    ""North West"": 210,
    ""England"": 18,
    ""Central Singapore"": 9,
    ""Plovdiv"": 9,
    ""Zurich"": 9,
    ""California"": 21,
    ""Uusimaa"": 3,
    ""Distrito Federal"": 3,
    ""Texas"": 18,
    ""Istanbul"": 36,
    ""Moscow"": 15,
    ""Kaunas"": 21,
    ""Beijing"": 3,
    ""Guangdong"": 6
  },
  ""country"": {
    ""United States"": 48,
    ""The Netherlands"": 36,
    ""Singapore"": 228,
    ""Germany"": 6,
    ""Thailand"": 6,
    ""Vietnam"": 6,
    ""United Kingdom"": 18,
    ""Bulgaria"": 9,
    ""Switzerland"": 9,
    ""Finland"": 3,
    ""Venezuela"": 3,
    ""T\u00fcrkiye"": 3,
    ""Russia"": 15,
    ""Lithuania"": 21,
    ""China"": 9,
    ""Turkey"": 33
  },
  ""account"": {
    ""Test"": 30,
    ""(empty)"": 6,
    ""hello"": 93,
    ""Administrator"": 57,
    ""Admin"": 51,
    ""Whatuptime.com"": 51,
    ""Jakartakini123#"": 54,
    ""dhqictTza"": 3,
    ""JjVnya"": 3,
    ""YqASdr"": 3,
    ""Domain"": 42,
    ""op9ptg6z"": 3,
    ""Administr"": 30,
    ""PzIqokgnb"": 3,
    ""lHoZjk"": 3,
    ""QAgJtI"": 3,
    ""sGtDVmkRT"": 3,
    ""Tpblfq"": 3,
    ""rgOGGe"": 3,
    ""AKcgWawTC"": 3,
    ""BvyfBz"": 3,
    ""TtnmEy"": 3
  },
  ""keyboard"": {
    ""Unknown"": 453
  },
  ""client_build"": {
    ""Unknown"": 453
  },
  ""client_name"": {
    ""Unknown"": 453
  },
  ""ip_type"": {
    ""Unknown"": 138,
    ""hosting"": 297,
    ""hosting & proxy"": 9,
    ""mobile"": 3,
    ""proxy"": 6
  }
}"
arpRt0P5,2024-05-11_stats.json,rdp_snitch,JSON,Saturday 11th of May 2024 07:16:11 PM CDT,"{
  ""ip"": {
    ""64.124.50.139"": 6,
    ""185.170.144.113"": 14,
    ""139.59.110.113"": 4,
    ""51.8.120.48"": 4,
    ""58.137.124.126"": 2,
    ""103.47.194.167"": 2,
    ""139.162.34.121"": 140,
    ""35.203.210.52"": 6,
    ""159.223.34.114"": 6,
    ""212.70.149.146"": 6,
    ""193.32.127.144"": 6,
    ""107.151.182.58"": 2,
    ""80.66.66.145"": 2,
    ""103.75.186.158"": 2,
    ""179.60.150.59"": 2,
    ""69.164.202.89"": 12,
    ""213.142.148.244"": 2,
    ""118.193.56.149"": 2,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 4,
    ""185.161.248.121"": 6,
    ""152.42.184.74"": 2,
    ""194.165.16.73"": 4,
    ""198.235.24.177"": 6,
    ""194.165.16.78"": 4,
    ""194.165.16.76"": 6,
    ""116.140.196.215"": 2,
    ""185.122.204.179"": 4,
    ""35.203.211.204"": 6,
    ""123.207.198.105"": 4,
    ""141.98.115.24"": 22,
    ""198.235.24.74"": 6
  },
  ""asn"": {
    ""AS6461"": 6,
    ""AS197414"": 18,
    ""AS14061"": 12,
    ""AS8075"": 4,
    ""AS4750"": 2,
    ""AS140832"": 2,
    ""AS63949"": 152,
    ""AS396982"": 24,
    ""AS204428"": 6,
    ""AS39351"": 6,
    ""AS21859"": 2,
    ""AS51765"": 2,
    ""AS135905"": 2,
    ""AS211179"": 2,
    ""AS212219"": 2,
    ""AS135377"": 2,
    ""AS208091"": 6,
    ""AS49202"": 6,
    ""AS48721"": 14,
    ""AS4837"": 2,
    ""AS57523"": 4,
    ""AS45090"": 4,
    ""AS210574"": 22
  },
  ""isp"": {
    ""Zayo Bandwidth"": 6,
    ""Xhost Internet Solutions LP"": 24,
    ""DIGITALOCEAN"": 4,
    ""Microsoft Germany"": 4,
    ""btnc"": 2,
    ""FTECH"": 2,
    ""Akamai Technologies, Inc."": 152,
    ""Google LLC"": 24,
    ""DigitalOcean, LLC"": 8,
    ""SS-Net"": 6,
    ""31173 Services AB"": 6,
    ""Zenlayer Inc"": 2,
    ""Oy Crea Nova Hosting Solution Ltd"": 2,
    ""Inet software one member company limited"": 2,
    ""Veraton Projects LTD"": 2,
    ""Hosting Dunyam Bilisim Teknolojileri Ticaret Limited Sirketi"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Kisara LLC"": 6,
    ""Flyservers S.A."": 14,
    ""China Unicom CHINA169 Network"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Shenzhen Tencent Computer Systems Company Limited"": 4,
    ""YUNUS EMRE ATILGAN trading as POYRAZ HOSTING"": 22
  },
  ""org"": {
    ""Microsoft Corporation"": 6,
    ""Xhostis"": 18,
    ""DigitalOcean, LLC"": 10,
    ""Microsoft Azure Cloud (germanynortheast)"": 4,
    ""Boutique Newcity Public Company"": 2,
    ""Unknown"": 2,
    ""Linode, LLC"": 140,
    ""Google Cloud (europe-west2)"": 12,
    ""4Media Ltd"": 6,
    ""31173 Services Switzerland"": 6,
    ""ZENLA"": 2,
    ""Xhost Internet Solutions"": 8,
    ""Inet software one member company limited"": 2,
    ""Maxwell Group LTD"": 2,
    ""Linode"": 12,
    ""Hosting Dunyam Bilisim Teknolojileri Ticaret Limited Sirketi"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Kisara LLC"": 6,
    ""Digital Ocean"": 2,
    ""Flyservers S.A"": 14,
    ""Palo Alto Networks, Inc"": 12,
    ""China United Network Communications Corporation Limited"": 2,
    ""Starcrecium Limited"": 4,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 4,
    ""Yunus Emre Atilgan Poyraz Hosting"": 22
  },
  ""regionName"": {
    ""Virginia"": 6,
    ""North Holland"": 24,
    ""South West"": 6,
    ""Saxony-Anhalt"": 4,
    ""Bangkok"": 4,
    ""Hanoi"": 4,
    ""North West"": 140,
    ""England"": 12,
    ""Central Singapore"": 6,
    ""Plovdiv"": 6,
    ""Zurich"": 6,
    ""California"": 14,
    ""Uusimaa"": 2,
    ""Distrito Federal"": 2,
    ""Texas"": 12,
    ""Istanbul"": 24,
    ""Moscow"": 10,
    ""Kaunas"": 14,
    ""Beijing"": 2,
    ""Guangdong"": 4
  },
  ""country"": {
    ""United States"": 32,
    ""The Netherlands"": 24,
    ""Singapore"": 152,
    ""Germany"": 4,
    ""Thailand"": 4,
    ""Vietnam"": 4,
    ""United Kingdom"": 12,
    ""Bulgaria"": 6,
    ""Switzerland"": 6,
    ""Finland"": 2,
    ""Venezuela"": 2,
    ""T\u00fcrkiye"": 2,
    ""Russia"": 10,
    ""Lithuania"": 14,
    ""China"": 6,
    ""Turkey"": 22
  },
  ""account"": {
    ""Test"": 20,
    ""(empty)"": 4,
    ""hello"": 62,
    ""Administrator"": 38,
    ""Admin"": 34,
    ""Whatuptime.com"": 34,
    ""Jakartakini123#"": 36,
    ""dhqictTza"": 2,
    ""JjVnya"": 2,
    ""YqASdr"": 2,
    ""Domain"": 28,
    ""op9ptg6z"": 2,
    ""Administr"": 20,
    ""PzIqokgnb"": 2,
    ""lHoZjk"": 2,
    ""QAgJtI"": 2,
    ""sGtDVmkRT"": 2,
    ""Tpblfq"": 2,
    ""rgOGGe"": 2,
    ""AKcgWawTC"": 2,
    ""BvyfBz"": 2,
    ""TtnmEy"": 2
  },
  ""keyboard"": {
    ""Unknown"": 302
  },
  ""client_build"": {
    ""Unknown"": 302
  },
  ""client_name"": {
    ""Unknown"": 302
  },
  ""ip_type"": {
    ""Unknown"": 92,
    ""hosting"": 198,
    ""hosting & proxy"": 6,
    ""mobile"": 2,
    ""proxy"": 4
  }
}"
c4WQaVCL,2024-05-11_stats.json,rdp_snitch,JSON,Saturday 11th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""64.124.50.139"": 3,
    ""185.170.144.113"": 7,
    ""139.59.110.113"": 2,
    ""51.8.120.48"": 2,
    ""58.137.124.126"": 1,
    ""103.47.194.167"": 1,
    ""139.162.34.121"": 70,
    ""35.203.210.52"": 3,
    ""159.223.34.114"": 3,
    ""212.70.149.146"": 3,
    ""193.32.127.144"": 3,
    ""107.151.182.58"": 1,
    ""80.66.66.145"": 1,
    ""103.75.186.158"": 1,
    ""179.60.150.59"": 1,
    ""69.164.202.89"": 6,
    ""213.142.148.244"": 1,
    ""118.193.56.149"": 1,
    ""87.251.75.145"": 3,
    ""185.170.144.3"": 2,
    ""185.161.248.121"": 3,
    ""152.42.184.74"": 1,
    ""194.165.16.73"": 2,
    ""198.235.24.177"": 3,
    ""194.165.16.78"": 2,
    ""194.165.16.76"": 3,
    ""116.140.196.215"": 1,
    ""185.122.204.179"": 2,
    ""35.203.211.204"": 3,
    ""123.207.198.105"": 2,
    ""141.98.115.24"": 11,
    ""198.235.24.74"": 3
  },
  ""asn"": {
    ""AS6461"": 3,
    ""AS197414"": 9,
    ""AS14061"": 6,
    ""AS8075"": 2,
    ""AS4750"": 1,
    ""AS140832"": 1,
    ""AS63949"": 76,
    ""AS396982"": 12,
    ""AS204428"": 3,
    ""AS39351"": 3,
    ""AS21859"": 1,
    ""AS51765"": 1,
    ""AS135905"": 1,
    ""AS211179"": 1,
    ""AS212219"": 1,
    ""AS135377"": 1,
    ""AS208091"": 3,
    ""AS49202"": 3,
    ""AS48721"": 7,
    ""AS4837"": 1,
    ""AS57523"": 2,
    ""AS45090"": 2,
    ""AS210574"": 11
  },
  ""isp"": {
    ""Zayo Bandwidth"": 3,
    ""Xhost Internet Solutions LP"": 12,
    ""DIGITALOCEAN"": 2,
    ""Microsoft Germany"": 2,
    ""btnc"": 1,
    ""FTECH"": 1,
    ""Akamai Technologies, Inc."": 76,
    ""Google LLC"": 12,
    ""DigitalOcean, LLC"": 4,
    ""SS-Net"": 3,
    ""31173 Services AB"": 3,
    ""Zenlayer Inc"": 1,
    ""Oy Crea Nova Hosting Solution Ltd"": 1,
    ""Inet software one member company limited"": 1,
    ""Veraton Projects LTD"": 1,
    ""Hosting Dunyam Bilisim Teknolojileri Ticaret Limited Sirketi"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Kisara LLC"": 3,
    ""Flyservers S.A."": 7,
    ""China Unicom CHINA169 Network"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""YUNUS EMRE ATILGAN trading as POYRAZ HOSTING"": 11
  },
  ""org"": {
    ""Microsoft Corporation"": 3,
    ""Xhostis"": 9,
    ""DigitalOcean, LLC"": 5,
    ""Microsoft Azure Cloud (germanynortheast)"": 2,
    ""Boutique Newcity Public Company"": 1,
    ""Unknown"": 1,
    ""Linode, LLC"": 70,
    ""Google Cloud (europe-west2)"": 6,
    ""4Media Ltd"": 3,
    ""31173 Services Switzerland"": 3,
    ""ZENLA"": 1,
    ""Xhost Internet Solutions"": 4,
    ""Inet software one member company limited"": 1,
    ""Maxwell Group LTD"": 1,
    ""Linode"": 6,
    ""Hosting Dunyam Bilisim Teknolojileri Ticaret Limited Sirketi"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Kisara LLC"": 3,
    ""Digital Ocean"": 1,
    ""Flyservers S.A"": 7,
    ""Palo Alto Networks, Inc"": 6,
    ""China United Network Communications Corporation Limited"": 1,
    ""Starcrecium Limited"": 2,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 2,
    ""Yunus Emre Atilgan Poyraz Hosting"": 11
  },
  ""regionName"": {
    ""Virginia"": 3,
    ""North Holland"": 12,
    ""South West"": 3,
    ""Saxony-Anhalt"": 2,
    ""Bangkok"": 2,
    ""Hanoi"": 2,
    ""North West"": 70,
    ""England"": 6,
    ""Central Singapore"": 3,
    ""Plovdiv"": 3,
    ""Zurich"": 3,
    ""California"": 7,
    ""Uusimaa"": 1,
    ""Distrito Federal"": 1,
    ""Texas"": 6,
    ""Istanbul"": 12,
    ""Moscow"": 5,
    ""Kaunas"": 7,
    ""Beijing"": 1,
    ""Guangdong"": 2
  },
  ""country"": {
    ""United States"": 16,
    ""The Netherlands"": 12,
    ""Singapore"": 76,
    ""Germany"": 2,
    ""Thailand"": 2,
    ""Vietnam"": 2,
    ""United Kingdom"": 6,
    ""Bulgaria"": 3,
    ""Switzerland"": 3,
    ""Finland"": 1,
    ""Venezuela"": 1,
    ""T\u00fcrkiye"": 1,
    ""Russia"": 5,
    ""Lithuania"": 7,
    ""China"": 3,
    ""Turkey"": 11
  },
  ""account"": {
    ""Test"": 10,
    ""(empty)"": 2,
    ""hello"": 31,
    ""Administrator"": 19,
    ""Admin"": 17,
    ""Whatuptime.com"": 17,
    ""Jakartakini123#"": 18,
    ""dhqictTza"": 1,
    ""JjVnya"": 1,
    ""YqASdr"": 1,
    ""Domain"": 14,
    ""op9ptg6z"": 1,
    ""Administr"": 10,
    ""PzIqokgnb"": 1,
    ""lHoZjk"": 1,
    ""QAgJtI"": 1,
    ""sGtDVmkRT"": 1,
    ""Tpblfq"": 1,
    ""rgOGGe"": 1,
    ""AKcgWawTC"": 1,
    ""BvyfBz"": 1,
    ""TtnmEy"": 1
  },
  ""keyboard"": {
    ""Unknown"": 151
  },
  ""client_build"": {
    ""Unknown"": 151
  },
  ""client_name"": {
    ""Unknown"": 151
  },
  ""ip_type"": {
    ""Unknown"": 46,
    ""hosting"": 99,
    ""hosting & proxy"": 3,
    ""mobile"": 1,
    ""proxy"": 2
  }
}"
5ZehzXu2,WordFlow Detector v2 (ChatGPT),Krythic,C#,Saturday 11th of May 2024 07:09:00 PM CDT,"using System.Collections.Generic;

public class WordFlowDetector
{
    private HashSet<char> vowels = new HashSet<char> { 'a', 'e', 'i', 'o', 'u', 'y' };

    public bool IsWellFlowed(string word)
    {
        List<string> syllables = SplitIntoSyllables(word);
        bool isVowelStart = false;

        foreach (string syllable in syllables)
        {
            bool isSyllableWellFlowed = IsSyllableWellFlowed(syllable, isVowelStart);
            if (!isSyllableWellFlowed)
                return false;

            isVowelStart = !isVowelStart;
        }

        return true;
    }

    private List<string> SplitIntoSyllables(string word)
    {
        List<string> syllables = new List<string>();
        StringBuilder currentSyllable = new StringBuilder();

        for (int i = 0; i < word.Length; i++)
        {
            char currentChar = word[i];
            currentSyllable.Append(currentChar);

            if (i == word.Length - 1 || IsVowel(currentChar) != IsVowel(word[i + 1])))
            {
                syllables.Add(currentSyllable.ToString());
                currentSyllable.Clear();
            }
        }

        return syllables;
    }

    private bool IsSyllableWellFlowed(string syllable, bool isVowelStart)
    {
        bool isVowelExpected = IsVowel(syllable[0]) == isVowelStart;
        
        for (int i = 0; i < syllable.Length; i++)
        {
            if (IsVowel(syllable[i]) != isVowelExpected)
                return false;
        }

        return true;
    }

    private bool IsVowel(char c)
    {
        return vowels.Contains(c);
    }
}"
UADdpFE7,WordFlow Detector (ChatGPT),Krythic,C#,Saturday 11th of May 2024 07:05:24 PM CDT,"public class WordFlowDetector
{
    private HashSet<char> vowels = new HashSet<char> { 'a', 'e', 'i', 'o', 'u', 'y' };
    private HashSet<char> consonants = new HashSet<char> { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z' };

    public bool IsWellFlowed(string word)
    {
        word = word.ToLower();
        List<string> syllables = SplitIntoSyllables(word);
        bool isVowelStart = false;

        foreach (string syllable in syllables)
        {
            bool isSyllableWellFlowed = IsSyllableWellFlowed(syllable, isVowelStart);
            if (!isSyllableWellFlowed)
                return false;

            isVowelStart = !isVowelStart;
        }

        return true;
    }

    private List<string> SplitIntoSyllables(string word)
    {
        List<string> syllables = new List<string>();
        string currentSyllable = """";

        for (int i = 0; i < word.Length; i++)
        {
            char currentChar = word[i];
            currentSyllable += currentChar;

            if (i == word.Length - 1 || IsVowel(currentChar) != IsVowel(word[i + 1]))
            {
                syllables.Add(currentSyllable);
                currentSyllable = """";
            }
        }

        return syllables;
    }

    private bool IsSyllableWellFlowed(string syllable, bool isVowelStart)
    {
        char startChar = isVowelStart ? 'v' : 'c';

        foreach (char c in syllable)
        {
            if ((IsVowel(c) && startChar != 'v') || (!IsVowel(c) && startChar != 'c'))
                return false;

            startChar = (startChar == 'v') ? 'c' : 'v';
        }

        return true;
    }

    private bool IsVowel(char c)
    {
        return vowels.Contains(c);
    }
}"
