id,title,username,language,date,content
hDPvmSu7,Untitled,madhu_fresh,C++,Tuesday 6th of February 2024 06:02:27 AM CDT,"#include <algorithm>
#include <iostream>
#include <set>
#include <map>
#include <string>
#include <utility>
#include <vector>
#include <stdio.h>
#include <math.h>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result = 0;
    cin >> result;
    ReadLine();
    return result;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

struct Document {
    int id;
    double relevance;
};

struct Query
{
    set<string> minus_words_;
    set<string> plus_words_;
};


class SearchServer {
public:

    

    void SetStopWords(const string& text) {
        for (const string& word : SplitIntoWords(text)) {

            stop_words_.insert(word);
        }
    }

    void AddDocument(int document_id, const string& document) {

        ++document_count_;
        const vector<string> words = SplitIntoWordsNoStop(document);
        double added = 1.0 / words.size();

        for (const string& word : words)
        {
            map <int, double> m = word_to_document_freqs_[word];
            m[document_id] += added;
            word_to_document_freqs_[word] = m;
        }

    }

    vector<Document> FindTopDocuments(const string& raw_query) const {

        const Query query_words = ParseQuery(raw_query);
        auto matched_documents = FindAllDocuments(query_words);

        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
                return lhs.relevance > rhs.relevance;
            });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }
        return matched_documents;
    }

private:

    int document_count_ = 0;

    

    map<string, map<int, double>> word_to_document_freqs_;

    set <string> stop_words_;

    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    Query ParseQuery(const string& text) const {
        Query query_words;
        for (const string& word : SplitIntoWordsNoStop(text)) {

            if (word[0] == '-')
            {
                query_words.minus_words_.insert(word.substr(1));
            }
            else
            {
                query_words.plus_words_.insert(word);
            }
        }
        return query_words;
    }

    vector<Document> FindAllDocuments(const Query& query_words) const {
        
        vector<Document> matched_documents;

        map<int, double> document_to_relevance;        



        for (string plus_word : query_words.plus_words_)
        {

            double idf = log(static_cast<double>(document_count_) / word_to_document_freqs_.at(plus_word).size());

            if (word_to_document_freqs_.count(plus_word) != 0)
            {
                for (auto& [id, freq] : word_to_document_freqs_.at(plus_word))
                {
                    //if (word_to_document_freqs_.count(plus_word) < document_count_) {
                        document_to_relevance[id] += idf * freq;
                    //}
                }

            }
        }

        for (string minus_word : query_words.minus_words_)
        {
            if (word_to_document_freqs_.count(minus_word) != 0)
            {
                for (auto& [id, freq] : word_to_document_freqs_.at(minus_word))
                {
                    document_to_relevance.erase(id);
                }
            }
        }

        for (auto& [id, rel] : document_to_relevance)
        {
            matched_documents.push_back({ id, rel });
        }

        return matched_documents;

    }


};

SearchServer CreateSearchServer() {
    SearchServer search_server;
    search_server.SetStopWords(ReadLine());

    const int document_count = ReadLineWithNumber();
    for (int document_id = 0; document_id < document_count; ++document_id) {
        search_server.AddDocument(document_id, ReadLine());
    }

    return search_server;
}

int main() {
    const SearchServer search_server = CreateSearchServer();

    const string query = ReadLine();
    for (const auto& [document_id, relevance] : search_server.FindTopDocuments(query)) {
        cout << ""{ document_id = ""s << document_id << "", ""
            << ""relevance = ""s << relevance << "" }""s << endl;
    }
}"
w0mcd68S,data832,TestGuy1,JSON,Tuesday 6th of February 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'af6826392a644795d4bd63b3677c47f36a4b64413edf6b96a90bc6abfe1f0943b88124e14d3b9f3e62dd8144934dd930139222f0eddae8e2dd3ddcd4ca96c7df62a09b40f84d83a626abe018c2d290da0ae2991d89114fd09c496f141cdba0e912950198ad230b1b7edbb7fe4c9c702c3478c5e43fb96cae546a584f5751d53f',
  otherdata: [
    '0f42bf0eb03be251d54d3ac270d7d3cd',
    'e10ffe208014bc40909383adc27a0249',
    '719b7ec017da9268adefeb9831e2f134',
    '5b0f60b81a5982bb86a4d6940747cb8a',
    '90e3f2c6882b6b9c5955568bf946b9f8',
    '0bb8ad3ee8797ff98cec0d0791df2d62',
    'e918448171f80b5085da76590eb5b875',
    '6193723997b40ff2802586c0704c9495'
  ]
}"
L4HiSpS6,Untitled,karakall,C#,Tuesday 6th of February 2024 05:59:06 AM CDT,"double number = 0.12345;

Console.WriteLine(number.ToString(""F2""));
Console.WriteLine(number.ToString(""F3""));

Console.WriteLine($""{number:f2}"");
Console.WriteLine($""fifth example - {number:f5}"");
"
yBcYDPQc,Bulk email,Techguy95,PowerShell,Tuesday 6th of February 2024 05:55:30 AM CDT,"# Define the email parameters
$smtpServer = ""smtp.office365.com""
$smtpPort = 587 # adjust the port if necessary
$from = ""Mymail@something.dk""
$attachmentPath = ""C:\Users\xxx\Documents\ab421.pdf""

# Define SMTP credentials
$username = ""something""
$password = ""something"" | ConvertTo-SecureString -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential($username, $password)

# Define the body of the email (you can customize this)
$body = @""
Dear COMPANY_NAME,

I am writing to express my interest in [mention your purpose or reason].

Please find attached my resume for your consideration.

Thank you for your time.

Sincerely,
Your Name
""@

# Define the list of companies and their email addresses
$companies = @(
    @{
        Name = ""Trucks Company""
        Email = ""example@gmail.com""
    }
    # Add more companies as needed
)

# Loop through each company
foreach ($company in $companies) {
    $to = $company.Email
    $subject = ""Unsolicited Application""
    $bodyWithCompany = $body -replace ""COMPANY_NAME"", $company.Name

    # Create the mail message
    $mailMessage = New-Object System.Net.Mail.MailMessage $from, $to, $subject, $bodyWithCompany

    # Attach the file
    $attachment = New-Object System.Net.Mail.Attachment($attachmentPath)
    $mailMessage.Attachments.Add($attachment)

    # Create SMTP client
    $smtp = New-Object Net.Mail.SmtpClient($smtpServer, $smtpPort)
    $smtp.EnableSsl = $true

    # Send the email
    $smtp.Send($mailMessage)

    # Dispose of the attachment
    $attachment.Dispose()
}

Write-Host ""Bulk emails sent successfully."""
frMjjksM,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Tuesday 6th of February 2024 05:37:00 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_846426.pdf
 
Working as of
06 February 2024"
UzZRWCFA,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Tuesday 6th of February 2024 05:07:49 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://claim-netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://claim-netdrop.netlify.app/

462686"
AqdPynfd,Surviver,ERROR_CODE,Lua,Tuesday 6th of February 2024 04:57:59 AM CDT,"function createZombie()
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k==""script"" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new(""Model"",game:GetService(""Lighting""))
Model0 = Instance.new(""Model"")
Part1 = Instance.new(""Part"")
SpecialMesh2 = Instance.new(""SpecialMesh"")
Vector3Value3 = Instance.new(""Vector3Value"")
Motor6D4 = Instance.new(""Motor6D"")
Decal5 = Instance.new(""Decal"")
Sound6 = Instance.new(""Sound"")
Sound7 = Instance.new(""Sound"")
Sound8 = Instance.new(""Sound"")
Sound9 = Instance.new(""Sound"")
Sound10 = Instance.new(""Sound"")
Part11 = Instance.new(""Part"")
Vector3Value12 = Instance.new(""Vector3Value"")
BodyColors13 = Instance.new(""BodyColors"")
MeshPart14 = Instance.new(""MeshPart"")
Vector3Value15 = Instance.new(""Vector3Value"")
Motor6D16 = Instance.new(""Motor6D"")
Script17 = Instance.new(""Script"")
Humanoid18 = Instance.new(""Humanoid"")
Script19 = Instance.new(""Script"")
MeshPart20 = Instance.new(""MeshPart"")
Vector3Value21 = Instance.new(""Vector3Value"")
Motor6D22 = Instance.new(""Motor6D"")
MeshPart23 = Instance.new(""MeshPart"")
Vector3Value24 = Instance.new(""Vector3Value"")
Motor6D25 = Instance.new(""Motor6D"")
MeshPart26 = Instance.new(""MeshPart"")
Vector3Value27 = Instance.new(""Vector3Value"")
Motor6D28 = Instance.new(""Motor6D"")
MeshPart29 = Instance.new(""MeshPart"")
Vector3Value30 = Instance.new(""Vector3Value"")
Motor6D31 = Instance.new(""Motor6D"")
MeshPart32 = Instance.new(""MeshPart"")
Vector3Value33 = Instance.new(""Vector3Value"")
Motor6D34 = Instance.new(""Motor6D"")
MeshPart35 = Instance.new(""MeshPart"")
Vector3Value36 = Instance.new(""Vector3Value"")
Motor6D37 = Instance.new(""Motor6D"")
MeshPart38 = Instance.new(""MeshPart"")
Vector3Value39 = Instance.new(""Vector3Value"")
Motor6D40 = Instance.new(""Motor6D"")
MeshPart41 = Instance.new(""MeshPart"")
Vector3Value42 = Instance.new(""Vector3Value"")
Motor6D43 = Instance.new(""Motor6D"")
Script44 = Instance.new(""Script"")
MeshPart45 = Instance.new(""MeshPart"")
Vector3Value46 = Instance.new(""Vector3Value"")
Motor6D47 = Instance.new(""Motor6D"")
MeshPart48 = Instance.new(""MeshPart"")
Vector3Value49 = Instance.new(""Vector3Value"")
Motor6D50 = Instance.new(""Motor6D"")
MeshPart51 = Instance.new(""MeshPart"")
Vector3Value52 = Instance.new(""Vector3Value"")
Motor6D53 = Instance.new(""Motor6D"")
MeshPart54 = Instance.new(""MeshPart"")
Vector3Value55 = Instance.new(""Vector3Value"")
Motor6D56 = Instance.new(""Motor6D"")
MeshPart57 = Instance.new(""MeshPart"")
Vector3Value58 = Instance.new(""Vector3Value"")
Motor6D59 = Instance.new(""Motor6D"")
Script60 = Instance.new(""Script"")
Script61 = Instance.new(""Script"")
Script62 = Instance.new(""Script"")
StringValue63 = Instance.new(""StringValue"")
StringValue64 = Instance.new(""StringValue"")
Animation65 = Instance.new(""Animation"")
StringValue66 = Instance.new(""StringValue"")
Animation67 = Instance.new(""Animation"")
StringValue68 = Instance.new(""StringValue"")
Animation69 = Instance.new(""Animation"")
NumberValue70 = Instance.new(""NumberValue"")
Animation71 = Instance.new(""Animation"")
NumberValue72 = Instance.new(""NumberValue"")
StringValue73 = Instance.new(""StringValue"")
Animation74 = Instance.new(""Animation"")
StringValue75 = Instance.new(""StringValue"")
Animation76 = Instance.new(""Animation"")
StringValue77 = Instance.new(""StringValue"")
Animation78 = Instance.new(""Animation"")
StringValue79 = Instance.new(""StringValue"")
Animation80 = Instance.new(""Animation"")
StringValue81 = Instance.new(""StringValue"")
Animation82 = Instance.new(""Animation"")
StringValue83 = Instance.new(""StringValue"")
Animation84 = Instance.new(""Animation"")
Script85 = Instance.new(""Script"")
Model0.Name = ""Zombie""
Model0.Parent = mas
Part1.Name = ""Head""
Part1.Parent = Model0
Part1.CFrame = CFrame.new(-0.695644557, 4.56509781, -2.19861078, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
Part1.Orientation = Vector3.new(0, 90.1399994, 0)
Part1.Position = Vector3.new(-0.695644557, 4.56509781, -2.19861078)
Part1.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
Part1.Color = Color3.new(0.541176, 0.670588, 0.521569)
Part1.Size = Vector3.new(1, 1, 1)
Part1.BottomSurface = Enum.SurfaceType.Smooth
Part1.BrickColor = BrickColor.new(""Artichoke"")
Part1.TopSurface = Enum.SurfaceType.Smooth
Part1.brickColor = BrickColor.new(""Artichoke"")
Part1.FormFactor = Enum.FormFactor.Custom
Part1.formFactor = Enum.FormFactor.Custom
SpecialMesh2.Parent = Part1
SpecialMesh2.MeshId = ""http://www.roblox.com/asset?id=419776358""
SpecialMesh2.MeshType = Enum.MeshType.FileMesh
Vector3Value3.Name = ""OriginalSize""
Vector3Value3.Parent = Part1
Vector3Value3.Value = Vector3.new(1, 1, 1)
Motor6D4.Name = ""Neck""
Motor6D4.Parent = Part1
Motor6D4.C0 = CFrame.new(0.000338107347, 0.806032121, -0.015560925, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D4.C1 = CFrame.new(-2.72095203e-05, -0.565615535, 0.00386685133, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D4.Part0 = MeshPart14
Motor6D4.Part1 = Part1
Motor6D4.part1 = Part1
Decal5.Parent = Part1
Decal5.Texture = ""http://www.roblox.com/asset/?id=174393211""
Sound6.Name = ""Moan""
Sound6.Parent = Part1
Sound6.SoundId = ""rbxassetid://131060249""
Sound6.Volume = 1
Sound7.Name = ""Moan2""
Sound7.Parent = Part1
Sound7.SoundId = ""rbxassetid://131060145""
Sound7.Volume = 1
Sound8.Name = ""Moan3""
Sound8.Parent = Part1
Sound8.SoundId = ""rbxassetid://131060210""
Sound8.Volume = 1
Sound9.Name = ""Moan4""
Sound9.Parent = Part1
Sound9.SoundId = ""rbxassetid://131138835""
Sound9.Volume = 1
Sound10.Name = ""Death""
Sound10.Parent = Part1
Part11.Name = ""HumanoidRootPart""
Part11.Parent = Model0
Part11.CFrame = CFrame.new(-0.691856027, 2.32588005, -2.1985929, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
Part11.Orientation = Vector3.new(0, 90.1399994, 0)
Part11.CFrame = game.Players.LocalPlayer.Character.Torso.CFrame * CFrame.new(Vector3.new(0, -2.5, 10))
Part11.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
Part11.Transparency = 1
Part11.Size = Vector3.new(2, 2, 1)
Part11.CanCollide = false
Vector3Value12.Name = ""OriginalSize""
Vector3Value12.Parent = Part11
Vector3Value12.Value = Vector3.new(2, 2, 1)
BodyColors13.Parent = Model0
BodyColors13.HeadColor = BrickColor.new(""Artichoke"")
BodyColors13.HeadColor3 = Color3.new(0.541176, 0.670588, 0.521569)
BodyColors13.LeftArmColor = BrickColor.new(""Artichoke"")
BodyColors13.LeftArmColor3 = Color3.new(0.541176, 0.670588, 0.521569)
BodyColors13.LeftLegColor = BrickColor.new(""Burnt Sienna"")
BodyColors13.LeftLegColor3 = Color3.new(0.415686, 0.223529, 0.0352941)
BodyColors13.RightArmColor = BrickColor.new(""Artichoke"")
BodyColors13.RightArmColor3 = Color3.new(0.541176, 0.670588, 0.521569)
BodyColors13.RightLegColor = BrickColor.new(""Burnt Sienna"")
BodyColors13.RightLegColor3 = Color3.new(0.415686, 0.223529, 0.0352941)
BodyColors13.TorsoColor = BrickColor.new(""Burnt Sienna"")
BodyColors13.TorsoColor3 = Color3.new(0.415686, 0.223529, 0.0352941)
MeshPart14.Name = ""UpperTorso""
MeshPart14.Parent = Model0
MeshPart14.CFrame = CFrame.new(-0.676263928, 3.1934495, -2.19829226, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart14.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart14.Position = Vector3.new(-0.676263928, 3.1934495, -2.19829226)
MeshPart14.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart14.Color = Color3.new(0.156863, 0.498039, 0.278431)
MeshPart14.Size = Vector3.new(2.00029206, 1.60093355, 1.0005368)
MeshPart14.BrickColor = BrickColor.new(""Dark green"")
MeshPart14.brickColor = BrickColor.new(""Dark green"")
Vector3Value15.Name = ""OriginalSize""
Vector3Value15.Parent = MeshPart14
Vector3Value15.Value = Vector3.new(2.00029206, 1.60093355, 1.0005368)
Motor6D16.Name = ""Waist""
Motor6D16.Parent = MeshPart14
Motor6D16.C0 = CFrame.new(0.000280171633, 0.537143946, -0.0142721087, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D16.C1 = CFrame.new(0.000338107347, -0.463463932, -0.015560925, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D16.Part0 = MeshPart41
Motor6D16.Part1 = MeshPart14
Motor6D16.part1 = MeshPart14
Script17.Name = ""Damage Script""
Script17.Parent = MeshPart14
table.insert(cors,sandbox(Script17,function()
function onTouched(hit)
        local human = hit.Parent:findFirstChild(""Humanoid"")
        if (human ~= nil) then
                human.Health = human.Health - 999999999
        end
end
script.Parent.Touched:connect(onTouched)
end))
Humanoid18.Name = ""Zombie""
Humanoid18.Parent = Model0
Humanoid18.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Subject
Humanoid18.Health = 125
Humanoid18.HealthDisplayType = Enum.HumanoidHealthDisplayType.AlwaysOff
Humanoid18.HipHeight = 1.3500000238419
Humanoid18.LeftLeg = MeshPart45
Humanoid18.MaxHealth = 125
Humanoid18.NameOcclusion = Enum.NameOcclusion.NoOcclusion
Humanoid18.RigType = Enum.HumanoidRigType.R15
Humanoid18.RightLeg = MeshPart20
Humanoid18.Torso = Part11
Humanoid18.WalkSpeed = 20
Humanoid18.maxHealth = 125
Script19.Parent = Model0
table.insert(cors,sandbox(Script19,function()
local larm = script.Parent:FindFirstChild(""HumanoidRootPart"")
local rarm = script.Parent:FindFirstChild(""HumanoidRootPart"")
local char = script.Parent
local pathFinder = game:GetService(""PathfindingService"")
local path = pathFinder:CreatePath()

function findNearestTorso(pos)
	local list = game.Workspace:children()
	local torso = nil
	local dist = 100
	local temp = nil
	local human = nil
	local temp2 = nil
	for x = 1, #list do
		temp2 = list[x]
		if (temp2.className == ""Model"") and (temp2 ~= script.Parent) then
			temp = temp2:findFirstChild(""HumanoidRootPart"")
			human = temp2:findFirstChild(""Humanoid"")
			if (temp ~= nil) and (human ~= nil) and (human.Health > 0) then
				if (temp.Position - pos).magnitude < dist then
					torso = temp
					dist = (temp.Position - pos).magnitude
				end
			end
		end
	end
	return torso
end

while true do
	wait()
	local target = findNearestTorso(script.Parent.HumanoidRootPart.Position)
	if target ~= nil then
		path:ComputeAsync(char.HumanoidRootPart.Position, target.Position)

		for i, wayPoint in pairs(path:GetWaypoints()) do
			char.Zombie:MoveTo(wayPoint.Position)

			if wayPoint.Action == Enum.PathWaypointAction.Jump then
				char.Zombie:ChangeState(Enum.HumanoidStateType.Jumping)
			end

			char.Zombie.MoveToFinished:wait()
		end
	end
end

end))
MeshPart20.Name = ""RightUpperLeg""
MeshPart20.Parent = Model0
MeshPart20.CFrame = CFrame.new(-0.67828238, 1.46466565, -2.69960117, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart20.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart20.Position = Vector3.new(-0.67828238, 1.46466565, -2.69960117)
MeshPart20.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart20.Color = Color3.new(0.0509804, 0.411765, 0.67451)
MeshPart20.Size = Vector3.new(1.00027561, 1.5362649, 1.00092912)
MeshPart20.BrickColor = BrickColor.new(""Bright blue"")
MeshPart20.CanCollide = false
MeshPart20.brickColor = BrickColor.new(""Bright blue"")
Vector3Value21.Name = ""OriginalSize""
Vector3Value21.Parent = MeshPart20
Vector3Value21.Value = Vector3.new(1.00027561, 1.5362649, 1.00092912)
Motor6D22.Name = ""RightHip""
Motor6D22.Parent = MeshPart20
Motor6D22.C0 = CFrame.new(0.505080223, -0.243262246, 0.00102789141, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D22.C1 = CFrame.new(0.00382620096, 0.484913796, 0.000486815348, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D22.Part0 = MeshPart41
Motor6D22.Part1 = MeshPart20
Motor6D22.part1 = MeshPart20
MeshPart23.Name = ""RightUpperArm""
MeshPart23.Parent = Model0
MeshPart23.CFrame = CFrame.new(-0.685997844, 3.29312539, -3.69646788, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart23.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart23.Position = Vector3.new(-0.685997844, 3.29312539, -3.69646788)
MeshPart23.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart23.Color = Color3.new(0.992157, 0.917647, 0.552941)
MeshPart23.Size = Vector3.new(1.00027633, 1.39554, 1.00025082)
MeshPart23.BrickColor = BrickColor.new(""Cool yellow"")
MeshPart23.CanCollide = false
MeshPart23.brickColor = BrickColor.new(""Cool yellow"")
Vector3Value24.Name = ""OriginalSize""
Vector3Value24.Parent = MeshPart23
Vector3Value24.Value = Vector3.new(1.00027633, 1.39554, 1.00025082)
Motor6D25.Name = ""RightShoulder""
Motor6D25.Parent = MeshPart23
Motor6D25.C0 = CFrame.new(1.25031853, 0.5565539, -0.015560925, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D25.C1 = CFrame.new(-0.24787569, 0.456878304, -0.00944012403, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D25.Part0 = MeshPart14
Motor6D25.Part1 = MeshPart23
Motor6D25.part1 = MeshPart23
MeshPart26.Name = ""RightLowerLeg""
MeshPart26.Parent = Model0
MeshPart26.CFrame = CFrame.new(-0.678020656, 0.910310864, -2.69960189, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart26.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart26.Position = Vector3.new(-0.678020656, 0.910310864, -2.69960189)
MeshPart26.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart26.Color = Color3.new(0.0509804, 0.411765, 0.67451)
MeshPart26.Size = Vector3.new(1.00027585, 1.48964536, 1.00032854)
MeshPart26.BrickColor = BrickColor.new(""Bright blue"")
MeshPart26.CanCollide = false
MeshPart26.brickColor = BrickColor.new(""Bright blue"")
Vector3Value27.Name = ""OriginalSize""
Vector3Value27.Parent = MeshPart26
Vector3Value27.Value = Vector3.new(1.00027585, 1.48964536, 1.00032854)
Motor6D28.Name = ""RightKnee""
Motor6D28.Parent = MeshPart26
Motor6D28.C0 = CFrame.new(0.00382620096, -0.265086174, 0.000426991843, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D28.C1 = CFrame.new(0.00382620096, 0.289268613, 0.000145851634, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D28.Part0 = MeshPart20
Motor6D28.Part1 = MeshPart26
Motor6D28.part1 = MeshPart26
MeshPart29.Name = ""RightLowerArm""
MeshPart29.Parent = Model0
MeshPart29.CFrame = CFrame.new(-0.685555518, 2.90703535, -3.69646835, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart29.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart29.Position = Vector3.new(-0.685555518, 2.90703535, -3.69646835)
MeshPart29.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart29.Color = Color3.new(0.992157, 0.917647, 0.552941)
MeshPart29.Size = Vector3.new(1.00027657, 1.26567209, 1.00025082)
MeshPart29.BrickColor = BrickColor.new(""Cool yellow"")
MeshPart29.CanCollide = false
MeshPart29.brickColor = BrickColor.new(""Cool yellow"")
Vector3Value30.Name = ""OriginalSize""
Vector3Value30.Parent = MeshPart29
Vector3Value30.Value = Vector3.new(1.00027657, 1.26567209, 1.00025082)
Motor6D31.Name = ""RightElbow""
Motor6D31.Parent = MeshPart29
Motor6D31.C0 = CFrame.new(0.00214397907, -0.263139546, -0.00944012403, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D31.C1 = CFrame.new(0.00214457512, 0.122950554, -0.00989595056, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D31.Part0 = MeshPart23
Motor6D31.Part1 = MeshPart29
Motor6D31.part1 = MeshPart29
MeshPart32.Name = ""RightHand""
MeshPart32.Parent = Model0
MeshPart32.CFrame = CFrame.new(-0.680041432, 2.1668787, -3.69776106, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart32.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart32.Position = Vector3.new(-0.680041432, 2.1668787, -3.69776106)
MeshPart32.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart32.Color = Color3.new(0.992157, 0.917647, 0.552941)
MeshPart32.Size = Vector3.new(0.999299049, 0.335255772, 1.00029743)
MeshPart32.BrickColor = BrickColor.new(""Cool yellow"")
MeshPart32.CanCollide = false
MeshPart32.brickColor = BrickColor.new(""Cool yellow"")
Vector3Value33.Name = ""OriginalSize""
Vector3Value33.Parent = MeshPart32
Vector3Value33.Value = Vector3.new(0.999299049, 0.335255772, 1.00029743)
Motor6D34.Name = ""RightWrist""
Motor6D34.Parent = MeshPart32
Motor6D34.C0 = CFrame.new(0.00214457512, -0.682049513, -0.00989595056, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D34.C1 = CFrame.new(0.000865101814, 0.058106944, -0.0154390335, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D34.Part0 = MeshPart29
Motor6D34.Part1 = MeshPart32
Motor6D34.part1 = MeshPart32
MeshPart35.Name = ""RightFoot""
MeshPart35.Parent = Model0
MeshPart35.CFrame = CFrame.new(-0.677906275, 0.167736173, -2.69441152, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart35.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart35.Position = Vector3.new(-0.677906275, 0.167736173, -2.69441152)
MeshPart35.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart35.Color = Color3.new(0.0509804, 0.411765, 0.67451)
MeshPart35.Size = Vector3.new(1.00063133, 0.335407376, 1.00020337)
MeshPart35.BrickColor = BrickColor.new(""Bright blue"")
MeshPart35.CanCollide = false
MeshPart35.brickColor = BrickColor.new(""Bright blue"")
Vector3Value36.Name = ""OriginalSize""
Vector3Value36.Parent = MeshPart35
Vector3Value36.Value = Vector3.new(1.00063133, 0.335407376, 1.00020337)
Motor6D37.Name = ""RightAnkle""
Motor6D37.Parent = MeshPart35
Motor6D37.C0 = CFrame.new(0.00382620096, -0.710731506, 0.000283418223, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D37.C1 = CFrame.new(0.00901681185, 0.0318431854, 0.000155551359, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D37.Part0 = MeshPart26
Motor6D37.Part1 = MeshPart35
Motor6D37.part1 = MeshPart35
MeshPart38.Name = ""LeftFoot""
MeshPart38.Parent = Model0
MeshPart38.CFrame = CFrame.new(-0.675512314, 0.167736173, -1.70284736, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart38.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart38.Position = Vector3.new(-0.675512314, 0.167736173, -1.70284736)
MeshPart38.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart38.Color = Color3.new(0.0509804, 0.411765, 0.67451)
MeshPart38.Size = Vector3.new(1.00063133, 0.335407257, 1.00020337)
MeshPart38.BrickColor = BrickColor.new(""Bright blue"")
MeshPart38.CanCollide = false
MeshPart38.brickColor = BrickColor.new(""Bright blue"")
Vector3Value39.Name = ""OriginalSize""
Vector3Value39.Parent = MeshPart38
Vector3Value39.Value = Vector3.new(1.00063133, 0.335407257, 1.00020337)
Motor6D40.Name = ""LeftAnkle""
Motor6D40.Parent = MeshPart38
Motor6D40.C0 = CFrame.new(-0.00382620096, -0.710131407, 0.00030554086, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D40.C1 = CFrame.new(-0.00901681185, 0.032443285, 0.000177569687, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D40.Part0 = MeshPart51
Motor6D40.Part1 = MeshPart38
Motor6D40.part1 = MeshPart38
MeshPart41.Name = ""LowerTorso""
MeshPart41.Parent = Model0
MeshPart41.CFrame = CFrame.new(-0.677587926, 2.19284177, -2.19834709, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart41.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart41.Position = Vector3.new(-0.677587926, 2.19284177, -2.19834709)
MeshPart41.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart41.Color = Color3.new(0.156863, 0.498039, 0.278431)
MeshPart41.Size = Vector3.new(2.00017595, 0.400037616, 1.00021255)
MeshPart41.BrickColor = BrickColor.new(""Dark green"")
MeshPart41.brickColor = BrickColor.new(""Dark green"")
Vector3Value42.Name = ""OriginalSize""
Vector3Value42.Parent = MeshPart41
Vector3Value42.Value = Vector3.new(2.00017595, 0.400037616, 1.00021255)
Motor6D43.Name = ""Root""
Motor6D43.Parent = MeshPart41
Motor6D43.C1 = CFrame.new(0.000280171633, 0.133037761, -0.0142721087, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D43.Part0 = Part11
Motor6D43.Part1 = MeshPart41
Motor6D43.part1 = MeshPart41
Script44.Name = ""Damage Script""
Script44.Parent = MeshPart41
table.insert(cors,sandbox(Script44,function()
function onTouched(hit)
        local human = hit.Parent:findFirstChild(""Humanoid"")
        if (human ~= nil) then
                human.Health = human.Health - 999
        end
end
script.Parent.Touched:connect(onTouched)
end))
MeshPart45.Name = ""LeftUpperLeg""
MeshPart45.Parent = Model0
MeshPart45.CFrame = CFrame.new(-0.675863564, 1.46466565, -1.69765592, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart45.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart45.Position = Vector3.new(-0.675863564, 1.46466565, -1.69765592)
MeshPart45.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart45.Color = Color3.new(0.0509804, 0.411765, 0.67451)
MeshPart45.Size = Vector3.new(1.00027561, 1.5362649, 1.00092912)
MeshPart45.BrickColor = BrickColor.new(""Bright blue"")
MeshPart45.CanCollide = false
MeshPart45.brickColor = BrickColor.new(""Bright blue"")
Vector3Value46.Name = ""OriginalSize""
Vector3Value46.Parent = MeshPart45
Vector3Value46.Value = Vector3.new(1.00027561, 1.5362649, 1.00092912)
Motor6D47.Name = ""LeftHip""
Motor6D47.Parent = MeshPart45
Motor6D47.C0 = CFrame.new(-0.50451982, -0.243062243, 0.00122789107, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D47.C1 = CFrame.new(-0.00382620096, 0.4851138, 0.000686740503, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D47.Part0 = MeshPart41
Motor6D47.Part1 = MeshPart45
Motor6D47.part1 = MeshPart45
MeshPart48.Name = ""LeftUpperArm""
MeshPart48.Parent = Model0
MeshPart48.CFrame = CFrame.new(-0.678766429, 3.29312539, -0.700763106, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart48.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart48.Position = Vector3.new(-0.678766429, 3.29312539, -0.700763106)
MeshPart48.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart48.Color = Color3.new(0.992157, 0.917647, 0.552941)
MeshPart48.Size = Vector3.new(1.00027633, 1.39554, 1.00025082)
MeshPart48.BrickColor = BrickColor.new(""Cool yellow"")
MeshPart48.CanCollide = false
MeshPart48.brickColor = BrickColor.new(""Cool yellow"")
Vector3Value49.Name = ""OriginalSize""
Vector3Value49.Parent = MeshPart48
Vector3Value49.Value = Vector3.new(1.00027633, 1.39554, 1.00025082)
Motor6D50.Name = ""LeftShoulder""
Motor6D50.Parent = MeshPart48
Motor6D50.C0 = CFrame.new(-1.24955308, 0.556408584, -0.015560925, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D50.C1 = CFrame.new(0.247964978, 0.456732988, -0.00943991542, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D50.Part0 = MeshPart14
Motor6D50.Part1 = MeshPart48
Motor6D50.part1 = MeshPart48
MeshPart51.Name = ""LeftLowerLeg""
MeshPart51.Parent = Model0
MeshPart51.CFrame = CFrame.new(-0.67560178, 0.910310864, -1.69765651, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart51.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart51.Position = Vector3.new(-0.67560178, 0.910310864, -1.69765651)
MeshPart51.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart51.Color = Color3.new(0.0509804, 0.411765, 0.67451)
MeshPart51.Size = Vector3.new(1.00027585, 1.48964536, 1.00032866)
MeshPart51.BrickColor = BrickColor.new(""Bright blue"")
MeshPart51.CanCollide = false
MeshPart51.brickColor = BrickColor.new(""Bright blue"")
Vector3Value52.Name = ""OriginalSize""
Vector3Value52.Parent = MeshPart51
Vector3Value52.Value = Vector3.new(1.00027585, 1.48964536, 1.00032866)
Motor6D53.Name = ""LeftKnee""
Motor6D53.Parent = MeshPart51
Motor6D53.C0 = CFrame.new(-0.00382620096, -0.264486194, 0.000586740673, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D53.C1 = CFrame.new(-0.00382620096, 0.289868593, 0.00030554086, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D53.Part0 = MeshPart45
Motor6D53.Part1 = MeshPart51
Motor6D53.part1 = MeshPart51
MeshPart54.Name = ""LeftLowerArm""
MeshPart54.Parent = Model0
MeshPart54.CFrame = CFrame.new(-0.678323925, 2.90703535, -0.700764775, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart54.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart54.Position = Vector3.new(-0.678323925, 2.90703535, -0.700764775)
MeshPart54.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart54.Color = Color3.new(0.992157, 0.917647, 0.552941)
MeshPart54.Size = Vector3.new(1.00027657, 1.26567209, 1.00025082)
MeshPart54.BrickColor = BrickColor.new(""Cool yellow"")
MeshPart54.CanCollide = false
MeshPart54.brickColor = BrickColor.new(""Cool yellow"")
Vector3Value55.Name = ""OriginalSize""
Vector3Value55.Parent = MeshPart54
Vector3Value55.Value = Vector3.new(1.00027657, 1.26567209, 1.00025082)
Motor6D56.Name = ""LeftElbow""
Motor6D56.Parent = MeshPart54
Motor6D56.C0 = CFrame.new(-0.00166511536, -0.263139546, -0.00943991542, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D56.C1 = CFrame.new(-0.0016657114, 0.122950554, -0.00989592075, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D56.Part0 = MeshPart48
Motor6D56.Part1 = MeshPart54
Motor6D56.part1 = MeshPart54
MeshPart57.Name = ""LeftHand""
MeshPart57.Parent = Model0
MeshPart57.CFrame = CFrame.new(-0.67280364, 2.1668787, -0.699498653, -0.00241400092, 3.49997972e-05, 0.999997497, 0, 1, -3.499991e-05, -0.999997497, -8.44897698e-08, -0.00241400092)
MeshPart57.Orientation = Vector3.new(0, 90.1399994, 0)
MeshPart57.Position = Vector3.new(-0.67280364, 2.1668787, -0.699498653)
MeshPart57.Rotation = Vector3.new(179.169998, 89.8700027, -179.169998)
MeshPart57.Color = Color3.new(0.992157, 0.917647, 0.552941)
MeshPart57.Size = Vector3.new(0.999299049, 0.335255831, 1.00029743)
MeshPart57.BrickColor = BrickColor.new(""Cool yellow"")
MeshPart57.CanCollide = false
MeshPart57.brickColor = BrickColor.new(""Cool yellow"")
Vector3Value58.Name = ""OriginalSize""
Vector3Value58.Parent = MeshPart57
Vector3Value58.Value = Vector3.new(0.999299049, 0.335255831, 1.00029743)
Motor6D59.Name = ""LeftWrist""
Motor6D59.Parent = MeshPart57
Motor6D59.C0 = CFrame.new(-0.0016657114, -0.682255626, -0.00989592075, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D59.C1 = CFrame.new(-0.000386238098, 0.0579008311, -0.0154390335, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Motor6D59.Part0 = MeshPart54
Motor6D59.Part1 = MeshPart57
Motor6D59.part1 = MeshPart57
Script60.Name = ""Respawn""
Script60.Parent = Model0
table.insert(cors,sandbox(Script60,function()
z = script.Parent

backup = z:clone()

while true do
	wait(5)
	if z.Zombie.Health == 0 then
		z:Remove()
		wait(4)
		backup.Parent = game.Workspace
		backup.Head:MakeJoints()
		backup.Torso:MakeJoints()
	end
	if z == nil then
		wait(4)
		backup.Parent = game.Workspace
		backup.Head:MakeJoints()
		backup.Torso:MakeJoints()
	end
end 
end))
Script61.Name = ""Health""
Script61.Parent = Model0
table.insert(cors,sandbox(Script61,function()
--Responsible for regening a player's humanoid's health

-- declarations
local Figure = script.Parent
local Head = Figure:WaitForChild(""Head"")
local Humanoid = Figure:WaitForChild(""Humanoid"")
local regening = false

-- regeneration
function regenHealth()
	if regening then return end
	regening = true
	
	while Humanoid.Health < Humanoid.MaxHealth do
		local s = wait(1)
		local health = Humanoid.Health
		if health > 0 and health < Humanoid.MaxHealth then
			local newHealthDelta = 0.01 * s * Humanoid.MaxHealth
			health = health + newHealthDelta
			Humanoid.Health = math.min(health,Humanoid.MaxHealth)
		end
	end
	
	if Humanoid.Health > Humanoid.MaxHealth then
		Humanoid.Health = Humanoid.MaxHealth
	end
	
	regening = false
end

Humanoid.HealthChanged:connect(regenHealth)
  
end))
Script62.Name = ""Animate""
Script62.Parent = Model0
table.insert(cors,sandbox(Script62,function()
function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Humanoid = waitForChild(Figure, ""Zombie"")
local pose = ""Standing""

local currentAnim = """"
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = ""http://www.roblox.com/asset/?id=507766666"", weight = 1 },
				{ id = ""http://www.roblox.com/asset/?id=507766951"", weight = 1 },
				{ id = ""http://www.roblox.com/asset/?id=507766388"", weight = 9 }
			},
	walk = 	{ 	
				{ id = ""http://www.roblox.com/asset/?id=507777826"", weight = 10 } 
			}, 
	run = 	{
				{ id = ""http://www.roblox.com/asset/?id=507767714"", weight = 10 } 
			}, 
	swim = 	{
				{ id = ""http://www.roblox.com/asset/?id=507784897"", weight = 10 } 
			}, 
	swimidle = 	{
				{ id = ""http://www.roblox.com/asset/?id=507785072"", weight = 10 } 
			}, 
	jump = 	{
				{ id = ""http://www.roblox.com/asset/?id=507765000"", weight = 10 } 
			}, 
	fall = 	{
				{ id = ""http://www.roblox.com/asset/?id=507767968"", weight = 10 } 
			}, 
	climb = {
				{ id = ""http://www.roblox.com/asset/?id=507765644"", weight = 10 } 
			}, 
	sit = 	{
				{ id = ""http://www.roblox.com/asset/?id=507768133"", weight = 10 } 
			},	
	toolnone = {
				{ id = ""http://www.roblox.com/asset/?id=507768375"", weight = 10 } 
			},
	toolslash = {
				{ id = ""http://www.roblox.com/asset/?id=507768375"", weight = 10 } 
--				{ id = ""slash.xml"", weight = 10 } 
			},
	toollunge = {
				{ id = ""http://www.roblox.com/asset/?id=507768375"", weight = 10 } 
			},
	wave = {
				{ id = ""http://www.roblox.com/asset/?id=507770239"", weight = 10 } 
			},
	point = {
				{ id = ""http://www.roblox.com/asset/?id=507770453"", weight = 10 } 
			},
	dance = {
				{ id = ""http://www.roblox.com/asset/?id=507771019"", weight = 10 }, 
				{ id = ""http://www.roblox.com/asset/?id=507771955"", weight = 10 }, 
				{ id = ""http://www.roblox.com/asset/?id=507772104"", weight = 10 } 
			},
	dance2 = {
				{ id = ""http://www.roblox.com/asset/?id=507776043"", weight = 10 }, 
				{ id = ""http://www.roblox.com/asset/?id=507776720"", weight = 10 }, 
				{ id = ""http://www.roblox.com/asset/?id=507776879"", weight = 10 } 
			},
	dance3 = {
				{ id = ""http://www.roblox.com/asset/?id=507777268"", weight = 10 }, 
				{ id = ""http://www.roblox.com/asset/?id=507777451"", weight = 10 }, 
				{ id = ""http://www.roblox.com/asset/?id=507777623"", weight = 10 } 
			},
	laugh = {
				{ id = ""http://www.roblox.com/asset/?id=507770818"", weight = 10 } 
			},
	cheer = {
				{ id = ""http://www.roblox.com/asset/?id=507770677"", weight = 10 } 
			},
}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

math.randomseed(tick())

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print(""Loading anims "" .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA(""Animation"")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild(""Weight"")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
--				print(name .. "" ["" .. idx .. ""] "" .. animTable[name][idx].anim.AnimationId .. "" ("" .. animTable[name][idx].weight .. "")"")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new(""Animation"")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. "" ["" .. idx .. ""] "" .. anim.id .. "" ("" .. anim.weight .. "")"")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = ""None""
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.31

local toolTransitionTime = 0.1
local fallTransitionTime = 0.2

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = ""idle""
	end

	currentAnim = """"
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == ""End"") then
--		print(""Keyframe : "".. frameName)

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = ""idle""
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.15, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
	
--	print(animName .. "" "" .. idx .. "" ["" .. origRoll .. ""]"")
	
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = """"
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == ""End"") then
--		print(""Keyframe : "".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. "" * "" .. idx .. "" ["" .. origRoll .. ""]"")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = """"
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed > 0.01 then
		local scale = 15.0
		playAnimation(""walk"", 0.1, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = ""Running""
	else
		playAnimation(""idle"", 0.1, Humanoid)
		pose = ""Standing""
	end
end

function onDied()
	pose = ""Dead""
end

function onJumping()
	playAnimation(""jump"", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = ""Jumping""
end

function onClimbing(speed)
	local scale = 5.0
	playAnimation(""climb"", 0.1, Humanoid)
	setAnimationSpeed(speed / scale)
	pose = ""Climbing""
end

function onGettingUp()
	pose = ""GettingUp""
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation(""fall"", fallTransitionTime, Humanoid)
	end
	pose = ""FreeFall""
end

function onFallingDown()
	pose = ""FallingDown""
end

function onSeated()
	pose = ""Seated""
end

function onPlatformStanding()
	pose = ""PlatformStanding""
end

function onSwimming(speed)
	if speed > 1.00 then
		local scale = 10.0
		playAnimation(""swim"", 0.4, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = ""Swimming""
	else
		playAnimation(""swimidle"", 0.4, Humanoid)
		pose = ""Standing""
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == ""Tool"" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == ""toolanim"" and c.className == ""StringValue"" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == ""None"") then
		playToolAnimation(""toolnone"", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == ""Slash"") then
		playToolAnimation(""toolslash"", 0, Humanoid)
		return
	end

	if (toolAnim == ""Lunge"") then
		playToolAnimation(""toollunge"", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == ""FreeFall"" and jumpAnimTime <= 0) then
		playAnimation(""fall"", fallTransitionTime, Humanoid)
	elseif (pose == ""Seated"") then
		playAnimation(""sit"", 0.5, Humanoid)
		return
	elseif (pose == ""Running"") then
		playAnimation(""walk"", 0.1, Humanoid)
	elseif (pose == ""Dead"" or pose == ""GettingUp"" or pose == ""FallingDown"" or pose == ""Seated"" or pose == ""PlatformStanding"") then
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = ""None""
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = ""None""
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
script.msg.Changed:connect(function(msg)
	script.msg.Value = """"
	local emote = """"
	if (string.sub(msg, 1, 3) == ""/e "") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == ""/emote "") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == ""Standing"" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end
--	print(""===> "" .. string.sub(msg, 1, 3) .. ""("" .. emote .. "")"")
end)


-- main program

local runService = game:service(""RunService"");

-- print(""bottom"")

-- initialize to idle
playAnimation(""idle"", 0.1, Humanoid)
pose = ""Standing""

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue63.Name = ""msg""
StringValue63.Parent = Script62
StringValue64.Name = ""climb""
StringValue64.Parent = Script62
Animation65.Name = ""ClimbAnim""
Animation65.Parent = StringValue64
Animation65.AnimationId = ""http://www.roblox.com/asset/?id=616156119""
StringValue66.Name = ""fall""
StringValue66.Parent = Script62
Animation67.Name = ""FallAnim""
Animation67.Parent = StringValue66
Animation67.AnimationId = ""http://www.roblox.com/asset/?id=616157476""
StringValue68.Name = ""idle""
StringValue68.Parent = Script62
Animation69.Name = ""Animation1""
Animation69.Parent = StringValue68
Animation69.AnimationId = ""http://www.roblox.com/asset/?id=616158929""
NumberValue70.Name = ""Weight""
NumberValue70.Parent = Animation69
NumberValue70.Value = 9
Animation71.Name = ""Animation2""
Animation71.Parent = StringValue68
Animation71.AnimationId = ""http://www.roblox.com/asset/?id=616160636""
NumberValue72.Name = ""Weight""
NumberValue72.Parent = Animation71
NumberValue72.Value = 1
StringValue73.Name = ""jump""
StringValue73.Parent = Script62
Animation74.Name = ""JumpAnim""
Animation74.Parent = StringValue73
Animation74.AnimationId = ""http://www.roblox.com/asset/?id=616161997""
StringValue75.Name = ""sit""
StringValue75.Parent = Script62
Animation76.Name = ""SitAnim""
Animation76.Parent = StringValue75
Animation76.AnimationId = ""http://www.roblox.com/asset/?id=507768133""
StringValue77.Name = ""swim""
StringValue77.Parent = Script62
Animation78.Name = ""Swim""
Animation78.Parent = StringValue77
Animation78.AnimationId = ""http://www.roblox.com/asset/?id=616165109""
StringValue79.Name = ""swimidle""
StringValue79.Parent = Script62
Animation80.Name = ""SwimIdle""
Animation80.Parent = StringValue79
Animation80.AnimationId = ""http://www.roblox.com/asset/?id=616166655""
StringValue81.Name = ""toolnone""
StringValue81.Parent = Script62
Animation82.Name = ""ToolNoneAnim""
Animation82.Parent = StringValue81
Animation82.AnimationId = ""http://www.roblox.com/asset/?id=507768375""
StringValue83.Name = ""walk""
StringValue83.Parent = Script62
Animation84.Name = ""RunAnim""
Animation84.Parent = StringValue83
Animation84.AnimationId = ""http://www.roblox.com/asset/?id=616168032""
Script85.Name = ""SoundScript""
Script85.Parent = Model0
table.insert(cors,sandbox(Script85,function()
local moan = script.Parent.Head.Moan
local moan2 = script.parent.Head.Moan2
local moan3 = script.parent.Head.Moan3
local moan4 = script.Parent.Head.Moan4

while true do
	moan:Play()
	wait(8)
	
	moan2:Play()
	wait(5)
	
	moan3:Play()
	wait(7)
	
	moan4:Play()
	wait(6)
end


local death = script.Parent.Head.Death


end))
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end
end

for i = 1,5 do
createZombie()
end"
f0n2sUVG,Untitled,liwgfr,Java,Tuesday 6th of February 2024 04:33:59 AM CDT,"import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Task3 {
    public static void main(String[] args) {
//todo main
        List<String> poem = new ArrayList<>(List.of(
                ""A solis ortu usque ad occasum"",
                ""A prima facie никто"",
                ""В клоаке снега тщетных обещаний"",
                ""Найду себе ab ovo самого"",
                ""и как бы не старался сгинуть"",
                ""В дисперсии прекрасного ума"",
                ""Как зиккурат статичен и стабилен"",
                ""Над энтропийными оркестрами себя""));
        System.out.println(""Исходный стих: "");
        poem.stream().forEach(System.out::println);

        System.out.println(""\nTask2_1 ____________________________________________"");
        //Вывод варианта поиска только 'О' символа:
        System.out.
                printf(""Task1: Англ букв 'O' = %s, Русских букв 'O' = %s \n"",
                        countCharOInText(poem)[0],
                        countCharOInText(poem)[1]);

        System.out.println(""\nTask2_2 ____________________________________________"");
        System.out.println(""toUpperCase: "");
        System.out.println(toUppercase(poem));


        System.out.println(""\nTask2_3 ____________________________________________"");
        convertTextToAlternatingRegister(poem).stream().forEach(System.out::println);

        System.out.println(""\nTask2_4 ____________________________________________"");
        divideIntoStanzas(poem).stream().forEach(System.out::println);

        System.out.println(""\nTask2_4StreamAPI ____________________"");
        divideIntoStanzasStreamAPI(poem).stream().forEach(System.out::println);

    }


    //todo 1) Необходимо посчитать и вывести количество английских и русских букв 'o' в стихотворении
    //вариант поиска только 'О' символа:
    public static int[] countCharOInText(List<String> poem) {
        int countOfEng = 0;
        int countOfRus = 0;

        for (String s : poem) {
            for (int i = 0; i < s.length(); i++) {
                // fixme: Здесь можно упростить до:
//                if (s.toLowerCase().charAt(i) == 'o') {
//                    countOfEng++;
//                }
//                if (s.toLowerCase().charAt(i) == 'о') {
//                    countOfRus++;
//                }
                if (s.toLowerCase().charAt(i) == Character.toLowerCase('o')) countOfEng++;
                else if (s.toLowerCase().charAt(i) == Character.toLowerCase('о')) countOfRus++;
            }
        }
        return new int[]{countOfEng, countOfRus};
    }


    // todo 2) Необходимо каждое слово с тремя и более русскими гласными перевести в верхний регистр
    //Здесь не сразу допер раскидать по отдельным методам, поэтому такая вложенность.
    public static String toUppercase(List<String> poem) {
        String vowelLetters = ""аеёиоуыэюя"";
        // fixme: я убрал StringBuilder и сделал индексированный цикл ради строки 85
        for (int j = 0; j < poem.size(); j++) {
            String s = poem.get(j);
            String[] words = s.split("" "");
            for (String word : words) {
                int vowelCount = 0;
                for (int i = 0; i < word.length(); i++) {
                    // fixme: Просто как вариант, который мне кажется слегка покороче:
//                    if (vowelLetters.contains(String.valueOf(word.toLowerCase().charAt(i)))) vowelCount++;
                    if (vowelLetters.contains(String.valueOf(Character.toLowerCase(word.charAt(i))))) vowelCount++;
                }
                if (vowelCount >= 3) {
                    // fixme: Убрал StringBuilder. Мне кажется, что твоё решение было достойным, но оно добавляло лишние пробелы в конце каждой строки.
                    // Таким образом, представь, что эти пробелы (хоть и не видны) - дополнительные символы. Это по сути меняет исходный текст, делая его больше
                    s = s.replaceAll(word, word.toUpperCase());
                    poem.set(j, s);
                }
            }
        }
        // Возвращаю строку, используя Stream API
        return poem.stream().collect(Collectors.joining(""\n""));
    }

    // todo 3) Каждое пятое слово вне зависимости от предыдущих пунктов перевести в чередующийся регистр (Начинается с верхнего, Sergey -> SeRgEy)
    public static List<String> convertTextToAlternatingRegister(List<String> poem) {
        List<String> result = new ArrayList<>();
        int count = 1;
        for (String line : poem) { //для каждого предложения
            String[] wordsArray = line.split("" "");
            StringBuilder convertedLine = new StringBuilder();
            for (int i = 0; i < wordsArray.length; i++) { // для каждого слова
                if (count % 5 == 0) {
                    wordsArray[i] = convertWord(wordsArray[i]);
                }
                count++;
                convertedLine.append(wordsArray[i]).append("" "");
            }
            // fixme: Хорошее решение! И как раз .trim() для отрезания лишних пробелов. Ну а так, можно и как выше (в задаче 2) руководствоваться .replace.
            // В целом, отлично, но как будто с .replace подходом поприятнее - нам не нужно думать о пробелах и их удалении как в этом случае :)
            result.add(convertedLine.toString().trim());
        }
        return result;
    }

    public static String convertWord(String str) {
        String result = """";
        for (int i = 0; i < str.length(); i++) {
            if (i % 2 == 0) result += Character.toUpperCase(str.charAt(i));
            else result += str.charAt(i);
        }
        return result;
    }

    //todo 4) Разделить стихотворение по строфам (4 строки) отступом (то есть после 4-х строк должна идти
    // пустая перед продолжением последующих) и поставить точки в конце каждой строфы.

    public static List<String> divideIntoStanzas(List<String> poem) {
        List<String> result = new ArrayList<>();
        int count = 1;

        for (String line : poem) {
            if (count % 4 == 0) {
                result.add(editLine(line));
            } else result.add(line);
            count++;
        }
        return result;
    }

    public static String editLine(String line) {
        // fixme: опять же, как будто однострочное решение поприятнее:
        return line + "".\n"";
//        StringBuilder stringBuilder = new StringBuilder(line);
//        return stringBuilder.append(""."").append(""\n"").toString();
    }

    // fixme: Давай я напишу пример использования Stream API для последней задачки, например.
    // Насколько мы помним - всё, что связано с итерацией данных (циклами) может быть представлено в виде обработки стрима
    // Да, иногда это может быть хитро и нетривиально, но в целом ради практики стоит попробовать
    public static List<String> divideIntoStanzasStreamAPI(List<String> poem) {
        // Здесь для удобства мы используем IntStream.range(*НАЧАЛО*, *КОНЕЦ*).
        // Это позволяет нам представить индексируемый цикл и взаимодействовать с нашим индексом (i)
        return IntStream.range(0, poem.size())
                .mapToObj(i -> {
                    if ((i + 1) % 4 == 0) {
                        return editLine(poem.get(i));
                    }
                    return poem.get(i);
                }).toList();
    }
}"
Z8g8nLpV,DemoOOP,damesova,C#,Tuesday 6th of February 2024 04:22:13 AM CDT,"// Клас Student
 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.NetworkInformation;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;
 
namespace DemoOOP
{
    public class Student : Person
    {
        // Полета - Състояние
        private int Pin;
        private string Name;
        private string LastName;
        private double gradeBEL;
 
        public Student(int Pin, string Name, string LastName, double grade) : base(Pin, Name, LastName)
        {
            this.Pin = Pin;
            this.Name = Name;
            this.LastName = LastName;
            this.gradeBEL = grade;
        }
 
        // ctor с параметри)
 
 
 
        // Метод за изчисляване на средна оценка по два предмета
        public double CalcAvgGrade(double grade1, double grade2)
        {
            double avg = (grade1 + grade2)/2;
            
 
            return avg;
        }
 
        // Метод за принтиране данните на обект в конзолата
        public void PrintData()
        {
            Console.WriteLine(this.Pin);
            Console.WriteLine(this.Name);
            Console.WriteLine(this.LastName);
            Console.WriteLine(this.gradeBEL);
        }
 
    }
}
 
//==============================================
 
Клас Person
 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
 
namespace DemoOOP
{
    public class Person
    {
 
        private int Pin;
        private string Name;
        private string LastName;
 
 
        public Person( int Pin,  string Name, string LastName)
        {
            this.Pin = Pin;
            this.Name = Name;
            this.LastName = LastName;
        }
    }
}
 
 
//================================================
 
// Клас Program
 
namespace DemoOOP
{
    internal class Program
    {
        static void Main(string[] args)
        {
            
 
            Console.WriteLine(""=================================="");
 
            Console.WriteLine(""Created by ctor with parameters"");
            Student student2 = new Student(1234567890, ""Milena"", ""Damesova"", 4.55);
            student2.PrintData();
            Console.WriteLine(student2.CalcAvgGrade(4.55, 6.00));
 
 
        }
    }
}"
JM5V42RV,Квадратный стики слева с отложенным закрытием 10 секунд,Luxup,JavaScript,Tuesday 6th of February 2024 03:58:48 AM CDT,"<div id=""lx_noclick"" style=""width: 60px !important; left: 310px !important;bottom: 220px !important;height: 90px !important; position: absolute;""></div> 
<style> #%DIV_ID% {left: 49% !important; transform: translate(-49vw, 0) !important; padding-left: 0 !important;} 
#%DIV_ID% lx_close_button:before, #%DIV_ID% .lx_close_button span, #%DIV_ID% .lx_no_click{ display: none !important; } 
  #%DIV_ID% .lx_close_button {
	z-index: unset !important;
    top: 45px !important;
    height: 0 !important;
    left: 169px;
    position: relative !important;
    width: 0;
	visibility: visible !important;
    pointer-events: all !important;
  }
.lx_close_button svg {position: absolute !important; transform: rotate(90deg)}; 
</style> <script> document.querySelectorAll('button.lx_close_button').forEach(button => { button.innerHTML = '<svg width=""60"" height=""24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path d=""M10.485 6.06A8 8 0 0118.246 0h23.508a8 8 0 017.76 6.06l3.728 14.91A4 4 0 0057.123 24H60 0h2.877a4 4 0 003.88-3.03l3.728-14.91z"" fill=""#D1D6E0""></path><path d=""M24.793 6.793a1 1 0 000 1.414L28.586 12l-3.793 3.793a1 1 0 001.414 1.414L30 13.414l3.793 3.793a1 1 0 001.414-1.414L31.414 12l3.793-3.793a1 1 0 00-1.414-1.414L30 10.586l-3.793-3.793a1 1 0 00-1.414 0z"" fill=""#575C66""></path></svg>' + button.innerHTML; document.styleSheets[0].insertRule('button.lx_close_button::before { content: none !important; }', 0); }); 
</script>
<script>
function updateClickableZone() {
    const oldButton = document.querySelector('#%DIV_ID% .lx_close_button');
    const newButton = oldButton.cloneNode(true);
    newButton.innerHTML = '<svg width=""60"" height=""24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path d=""M10.485 6.06A8 8 0 0118.246 0h23.508a8 8 0 017.76 6.06l3.728 14.91A4 4 0 0057.123 24H60 0h2.877a4 4 0 003.88-3.03l3.728-14.91z"" fill=""#D1D6E0""></path><path id=""closeCross"" d=""M24.793 6.793a1 1 0 000 1.414L28.586 12l-3.793 3.793a1 1 0 001.414 1.414L30 13.414l3.793 3.793a1 1 0 001.414-1.414L31.414 12l3.793-3.793a1 1 0 00-1.414-1.414L30 10.586l-3.793-3.793a1 1 0 00-1.414 0z"" fill=""#575C66""></path><text x=""50%"" y=""50%"" dominant-baseline=""middle"" id=""svgCount"" text-anchor=""middle"" font-size=""12"" fill=""#575C66"">X</text></svg>';
    newButton.style.display='block';
    oldButton.parentNode.replaceChild(newButton, oldButton);
}

updateClickableZone();

var lxAdUnit      = document.querySelector(""#%DIV_ID%"");
        var lxCloseButton = document.querySelector(""#%DIV_ID% .lx_close_button"");

        function lxCloseUnit() {
            while (lxAdUnit.hasChildNodes()) {
                lxAdUnit.removeChild(lxAdUnit.lastChild);
            }
        };
let eventListener;
var closeButton = document.querySelector(""#%DIV_ID% .lx_close_button"");
var count = 10;
let closeCross = document.querySelector(""#closeCross"");
function updateStyles() {
  if (closeButton) {
    const textElement = closeButton.querySelector(""svg > text"");
    if (textElement) {
      textElement.textContent = count;

      if (count === 0) {
        textElement.style.display = ""none"";
        closeCross.style.display = ""block"";
        closeButton.classList.add(""lx_close_button_visible"");
        eventListener = true;
        lxCloseButton.addEventListener('click', lxCloseUnit);
      } else {
		textElement.style.display = ""block"";
        closeButton.classList.remove(""lx_close_button_visible"");
        count--;
        closeCross.style.display = ""none"";

        if (eventListener === true) {
          lxCloseButton.removeEventListener('click', lxCloseUnit);
        }

        setTimeout(updateStyles, 1000);
      }
    }
  }
}

let initialUpdateDone = false;

function handleDOMChange(mutationsList, observer) {
  for (let mutation of mutationsList) {
    if (mutation.type === ""childList"") {
      const closeButton = document.querySelector(""#%DIV_ID% .lx_close_button"");
      if (closeButton && !initialUpdateDone) {
        observer.disconnect();
        updateStyles();
        initialUpdateDone = true;
        break;
      }
    }
  }
}

const initialCloseButton = document.querySelector(""#%DIV_ID% .lx_close_button"");
if (initialCloseButton) {
  updateStyles();
  initialUpdateDone = true;
} else {
  const observer = new MutationObserver(handleDOMChange);
  observer.observe(document, { childList: true, subtree: true });
}

function resetTimer() {
  count = 10;
  const closeButton = document.querySelector(""#%DIV_ID% .lx_close_button"");
  if (closeButton) {
    closeButton.classList.remove(""lx_close_button_visible"");
  }
  updateStyles();
}
let resetTimerScheduled = false;

function waitForNotEmptyBlock() {
  const targetNode = document.querySelector(""#%DIV_ID%"");

  const config = { attributes: true, attributeFilter: [""class""] };

  const observer = new MutationObserver(function (mutationsList, observer) {
    for (let mutation of mutationsList) {
      if (
        mutation.type === ""attributes"" &&
        mutation.attributeName === ""class"" &&
        targetNode.classList.contains(""__lxG__not_empty_block"")
      ) {
        if (!resetTimerScheduled) {
          resetTimer();
          resetTimerScheduled = true;
          setTimeout(() => {
            resetTimerScheduled = false; 
          }, 5000);
        }
      }
    }
  });

  observer.observe(targetNode, config);
}

function waitForLoadingBlock() {
  const targetNode = document.querySelector(""#%DIV_ID%"");

  const config = { attributes: true, attributeFilter: [""class""] };

  const observer = new MutationObserver(function (mutationsList, observer) {
    for (let mutation of mutationsList) {
      if (
        mutation.type === ""attributes"" &&
        mutation.attributeName === ""class"" &&
        targetNode.classList.contains(""__lxG__loading_block"")
      ) {
        waitForNotEmptyBlock(); 
      }
    }
  });

  observer.observe(targetNode, config);
}
setTimeout(function() {
waitForLoadingBlock();
}, 5000);
</script>"
v9pYZu2Y,Untitled,slawfik,C++,Tuesday 6th of February 2024 03:49:26 AM CDT,"app_version:7.0.6
bAPP_NOTIFY 334694 thr#0 29.6062 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 334695 thr#0 29.6062 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 334697 thr#0 29.6062 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 334701 thr#0 29.6062 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 334706 thr#0 29.6062 { QEvent(UpdateLater, 78) receiver: GLWidget_Painter(obj_name->GLWidget_Painter) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 334710 thr#0 29.6062 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 334714 thr#0 29.6062 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 334732 thr#0 29.6062 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 335010 thr#1 29.6067 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 312732 thr#0 23.6344 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 312733 thr#0 23.6344 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 312737 thr#0 23.6344 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 312741 thr#0 23.6344 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 312747 thr#0 23.6344 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 312755 thr#0 23.6344 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 312998 thr#1 23.6349 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 1118387 thr#1 56.2938 { QEvent(EnabledChange, 98) receiver: QPushButton(obj_name->) parent_rec: PanelBrushes(obj_name->PanelBrushes) }
bAPP_NOTIFY 1118388 thr#1 56.2938 { QEvent(EnabledChange, 98) receiver: QPushButton(obj_name->) parent_rec: PanelBrushes(obj_name->PanelBrushes) }
bAPP_NOTIFY 1118389 thr#0 56.2948 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 1118393 thr#0 56.2948 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 1118396 thr#0 56.2948 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 1118403 thr#0 56.2948 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 1118410 thr#0 56.2948 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 1118465 thr#2 56.2948 { QEvent(MaxUser, 65535) receiver: QObject(obj_name->) }
bAPP_NOTIFY 1118628 thr#1 56.2948 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 809498 thr#0 154.8156 { QEvent(Paint, 12) receiver: DockWidgetLayers(obj_name->DockLayers) parent_rec: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 809499 thr#0 154.8156 { QEvent(Paint, 12) receiver: PanelLayers(obj_name->PanelLayers) parent_rec: DockWidgetLayers(obj_name->DockLayers) }
bAPP_NOTIFY 809500 thr#0 154.8156 { QEvent(Paint, 12) receiver: Spinbox(obj_name->spinboxOpacity) parent_rec: PanelLayers(obj_name->PanelLayers) }
bAPP_NOTIFY 809501 thr#0 154.8156 { QEvent(Paint, 12) receiver: QLineEdit(obj_name->) parent_rec: Spinbox(obj_name->spinboxOpacity) }
bAPP_NOTIFY 809502 thr#0 154.8156 { QEvent(Paint, 12) receiver: QSliderClickNGo(obj_name->sliderOpacity) parent_rec: PanelLayers(obj_name->PanelLayers) }
bAPP_NOTIFY 809503 thr#0 154.8156 { QEvent(Paint, 12) receiver: GLWidget(obj_name->GLWidget) parent_rec: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 809504 thr#0 154.8165 { QEvent(Paint, 12) receiver: GLWidget_Painter(obj_name->GLWidget_Painter) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 809505 thr#0 154.8165 { QEvent(Paint, 12) receiver: QLabel(obj_name->actionLabel) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 809816 thr#0 154.8215 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }

app_version:7.0.5
bAPP_NOTIFY 346036 thr#0 31.2659 { QEvent(Paint, 12) receiver: DialogProcessing(obj_name->DialogProcessing) parent_rec: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 346037 thr#0 31.2659 { QEvent(Paint, 12) receiver: QProgressBar(obj_name->progressbar) parent_rec: DialogProcessing(obj_name->DialogProcessing) }
bAPP_NOTIFY 346038 thr#0 31.2659 { QEvent(MetaCall, 43) receiver: LambdaConnectorHelper(obj_name->) }
bAPP_NOTIFY 346153 thr#0 31.2659 { QEvent(UpdateLater, 78) receiver: GLWidget_Painter(obj_name->GLWidget_Painter) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 346161 thr#0 31.2659 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 346168 thr#0 31.2659 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 346193 thr#0 31.2659 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 346196 thr#0 31.2659 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 346202 thr#0 31.2659 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 346497 thr#1 31.2669 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 22561345 thr#0 15582.3789 { QEvent(UpdateRequest, 77) receiver: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 22561346 thr#0 15582.3789 { QEvent(Paint, 12) receiver: GLWidget(obj_name->GLWidget) parent_rec: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 22561347 thr#1 15582.3789 { QEvent(MaxUser, 65535) receiver: QObject(obj_name->) }
bAPP_NOTIFY 22561358 thr#0 15582.3789 { QEvent(MetaCall, 43) receiver: QUnifiedTimer(obj_name->) }
bAPP_NOTIFY 22561359 thr#0 15582.3789 { QEvent(MetaCall, 43) receiver: LambdaConnectorHelper(obj_name->) }
bAPP_NOTIFY 22561524 thr#0 15582.3799 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 22561793 thr#1 15582.4033 { QEvent(Timer, 1) receiver: QEventDispatcherWin32(obj_name->) }
bAPP_NOTIFY 22561794 thr#1 15582.4033 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: PainterAquarelle(obj_name->Painter) }
bAPP_NOTIFY 22561817 thr#2 15582.4053 { QEvent(MaxUser, 65535) receiver: QObject(obj_name->) }

---
bAPP_NOTIFY 249920 thr#0 13.2366 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 249921 thr#0 13.2366 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 249926 thr#0 13.2366 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 249932 thr#0 13.2366 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 249933 thr#0 13.2366 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 249937 thr#0 13.2366 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 249941 thr#0 13.2366 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 249944 thr#0 13.2366 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 249953 thr#0 13.2366 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }

---
bAPP_NOTIFY 370326 thr#0 45.9515 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 370327 thr#0 45.9515 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 370328 thr#0 45.9515 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 370331 thr#0 45.9515 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 370332 thr#0 45.9515 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 370335 thr#0 45.9515 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 370339 thr#0 45.9515 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 370340 thr#0 45.9515 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 370341 thr#0 45.9515 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 370342 thr#0 45.9515 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 370603 thr#1 45.9515 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 338199 thr#0 22.0681 { QEvent(ChildRemoved, 71) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 338203 thr#0 22.0681 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 338207 thr#0 22.0681 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 338211 thr#0 22.0681 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 338216 thr#0 22.0681 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 338218 thr#0 22.0681 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 338222 thr#0 22.0681 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 338227 thr#0 22.0681 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 338230 thr#0 22.0681 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 338235 thr#0 22.0681 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 338428 thr#1 22.0691 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 575884 thr#0 24.4235 { QEvent(Paint, 12) receiver: QPushButton(obj_name->buttonPigments) parent_rec: PanelLayers(obj_name->PanelLayers) }
bAPP_NOTIFY 575885 thr#0 24.4235 { QEvent(Paint, 12) receiver: ComboBoxBase(obj_name->comboboxBlending) parent_rec: PanelLayers(obj_name->PanelLayers) }
bAPP_NOTIFY 575886 thr#0 24.4235 { QEvent(UpdateRequest, 77) receiver: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 575887 thr#0 24.4235 { QEvent(Paint, 12) receiver: GLWidget_Painter(obj_name->GLWidget_Painter) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 575888 thr#0 24.4235 { QEvent(MetaCall, 43) receiver: LambdaConnectorHelper(obj_name->) }
bAPP_NOTIFY 576005 thr#0 24.4235 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 576012 thr#0 24.4235 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 576021 thr#0 24.4235 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 576026 thr#0 24.4235 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 576030 thr#0 24.4245 { QEvent(UpdateRequest, 77) receiver: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 576038 thr#0 24.4245 { QEvent(Paint, 12) receiver: GLWidget_Painter(obj_name->GLWidget_Painter) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 576288 thr#0 24.4245 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }

app_version:7.0.3
bAPP_NOTIFY 305309 thr#0 24.9520 { QEvent(MaxUser, 65535) receiver: QObject(obj_name->) }
bAPP_NOTIFY 305314 thr#0 24.9520 { QEvent(MetaCall, 43) receiver: LambdaConnectorHelper(obj_name->) }
bAPP_NOTIFY 305450 thr#0 24.9520 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 305459 thr#0 24.9525 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 305460 thr#0 24.9525 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 305465 thr#0 24.9525 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 305471 thr#0 24.9525 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 305476 thr#0 24.9525 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 305481 thr#0 24.9525 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 305486 thr#0 24.9525 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 305495 thr#0 24.9525 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }

---
bAPP_NOTIFY 1895250 thr#0 426.3935 { QEvent(Leave, 11) receiver: QWidgetWindow(obj_name->QMenuClassWindow) }
bAPP_NOTIFY 1895251 thr#0 426.3935 { QEvent(Leave, 11) receiver: QMenu(obj_name->) parent_rec: PanelLayers(obj_name->PanelLayers) }
bAPP_NOTIFY 1895252 thr#0 426.3935 { QEvent(Enter, 10) receiver: QWidgetWindow(obj_name->MainWindowWindow) }
bAPP_NOTIFY 1895253 thr#0 426.3935 { QEvent(Enter, 10) receiver: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 1895254 thr#0 426.3935 { QEvent(Enter, 10) receiver: DockWidgetLayers(obj_name->DockLayers) parent_rec: MainWindow(obj_name->MainWindow) }
bAPP_NOTIFY 1895255 thr#0 426.3935 { QEvent(Enter, 10) receiver: PanelLayers(obj_name->PanelLayers) parent_rec: DockWidgetLayers(obj_name->DockLayers) }
bAPP_NOTIFY 1895256 thr#0 426.3935 { QEvent(Enter, 10) receiver: QFrame(obj_name->lineLayer_2) parent_rec: PanelLayers(obj_name->PanelLayers) }
bAPP_NOTIFY 1895257 thr#1 426.3935 { QEvent(Timer, 1) receiver: QEventDispatcherWin32(obj_name->) }
bAPP_NOTIFY 1895258 thr#1 426.3935 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: PainterAquarelle(obj_name->Painter) }
bAPP_NOTIFY 1895295 thr#0 426.3945 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 1895307 thr#0 426.3945 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 1895311 thr#2 426.3945 { QEvent(MaxUser, 65535) receiver: QObject(obj_name->) }

---
bAPP_NOTIFY 2917119 thr#0 228.5286 { QEvent(ZeroTimerEvent, 154) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 2917124 thr#0 228.5286 { QEvent(Timer, 1) receiver: QScrollBar(obj_name->) parent_rec: QWidget(obj_name->qt_scrollarea_vcontainer) }
bAPP_NOTIFY 2917129 thr#0 228.5286 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 2917134 thr#0 228.5286 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 2917136 thr#0 228.5286 { QEvent(UpdateLater, 78) receiver: GLWidget_Painter(obj_name->GLWidget_Painter) parent_rec: GLWidget(obj_name->GLWidget) }
bAPP_NOTIFY 2917141 thr#0 228.5286 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 2917146 thr#0 228.5286 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 2917164 thr#0 228.5286 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 2917165 thr#0 228.5286 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 2917170 thr#0 228.5286 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 2917453 thr#1 228.5286 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 348002 thr#0 25.5667 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 348009 thr#0 25.5667 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 348015 thr#0 25.5667 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 348019 thr#0 25.5667 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 348026 thr#0 25.5667 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 348033 thr#0 25.5667 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 348037 thr#0 25.5667 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 348044 thr#0 25.5667 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 348051 thr#0 25.5667 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 348148 thr#1 25.5667 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

app_version:7.0.2
bAPP_NOTIFY 334264 thr#0 20.4114 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 334269 thr#0 20.4114 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 334275 thr#0 20.4114 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 334281 thr#0 20.4114 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 334285 thr#0 20.4114 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 334291 thr#0 20.4114 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 334299 thr#0 20.4114 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 334498 thr#1 20.4114 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 317276 thr#0 16.3627 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 317282 thr#0 16.3627 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 317289 thr#0 16.3627 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 317294 thr#0 16.3627 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 317298 thr#0 16.3627 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 317304 thr#0 16.3627 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 317311 thr#0 16.3627 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 317525 thr#1 16.3627 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }

---
bAPP_NOTIFY 320645 thr#0 20.5633 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 320657 thr#0 20.5633 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 320661 thr#0 20.5633 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 320666 thr#0 20.5633 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 320670 thr#0 20.5633 { QEvent(Timer, 1) receiver: QWindowsGuiEventDispatcher(obj_name->QWindowsGuiEventDispatcher) parent_rec: Application(obj_name->) }
bAPP_NOTIFY 320677 thr#0 20.5633 { QEvent(Timer, 1) receiver: QTimer(obj_name->) parent_rec: CurveEditorRenderWidget(obj_name->curveEditor) }
bAPP_NOTIFY 320683 thr#0 20.5633 { QEvent(MetaCall, 43) receiver: QItemSelectionModel(obj_name->) parent_rec: LayersModel(obj_name->) }
bAPP_NOTIFY 320778 thr#1 20.5633 { QEvent(DynamicPropertyChange, 170) receiver: LayerEffectFilter(obj_name->) }"
5usjtvky,leveler.lua,adriannic,Lua,Tuesday 6th of February 2024 03:44:30 AM CDT,"function column()
    local height=0

    while turtle.detectUp() do
        turtle.digUp()
        turtle.up()
        height=height+1
    end

    while height ~= 0 do
        while not turtle.down() do
            turtle.digDown()
        end
        height=height-1
    end

    turtle.turnLeft()
    for i=1, 2 do
        checkColumn()
        turtle.turnRight()
    end
    checkColumn()
    turtle.turnLeft()
    turtle.back()
end

function checkColumn()
    if turtle.detect() then
        while not turtle.forward() do
            turtle.dig()
        end
        column()
    end
end

column()
"
tzDzVWXc,JobPosting,jaideep06,JSON,Tuesday 6th of February 2024 03:44:22 AM CDT,"{
  ""@context"": ""https://schema.org"",
  ""@graph"": {
    ""@type"": ""JobPosting"",
    ""title"": ""Computer Operator Jobs In Madhya Pradesh - Part &amp; Full-time"",
    ""description"": ""Discover Computer Operator roles in Madhya Pradesh. Part-time, full-time, remote positions in showrooms, offices, and premier companies for skillful pursuits."",
    ""baseSalary"": {
      ""@type"": ""MonetaryAmount"",
      ""currency"": ""INR"",
      ""value"": {
        ""@type"": ""QuantitativeValue"",
        ""value"": ""10,000.00-25,000.00"",
        ""unitText"": ""MONTH""
      }
    },
    ""datePosted"": ""2024-02-05"",
    ""validThrough"": ""2030-11-18"",
    ""employmentType"": [
      ""FULL_TIME"",
      ""PART_TIME""
    ],
    ""hiringOrganization"": {
      ""@type"": ""Organization"",
      ""name"": ""Naukri Mitra"",
      ""sameAs"": ""https://naukrimitra.in/"",
      ""logo"": ""https://naukrimitra.in/wp-content/uploads/2022/11/cropped-Untitled-design-23-1-1.webp""
    },
    ""experienceInPlaceOfEducation"": ""False"",
    ""experienceRequirements"": {
      ""@type"": ""OccupationalExperienceRequirements"",
      ""monthsOfExperience"": ""2""
    },
    ""jobLocation"": [
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""05 brahman gali, Hatpura Rd, Hatpura,"",
          ""addressLocality"": ""Agar,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""465441"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Neem Chowk, MG Rd,"",
          ""addressLocality"": ""Alirajpur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""457887"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""ward no 9, behind of tehsil office, Chetna Nagar,"",
          ""addressLocality"": ""Anuppur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""484224"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""1st Floor, Shankarpur, magarda, Chauraha, Aron Rd,"",
          ""addressLocality"": ""Ashoknagar,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""473331"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Prem Nagar, Moti Nagar,"",
          ""addressLocality"": ""Balaghat,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""481001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Silver scissors salon, near ketli the retro cafe,"",
          ""addressLocality"": ""Barwani,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""451551"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Behind Brahmkumari ashram near genda chowk, Itarsi Rd, Sadar,"",
          ""addressLocality"": ""Betul,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""460001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""petch, Street Number 1, Adarsh colony,"",
          ""addressLocality"": ""Bhind,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""477001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Stadium, 2nd Floor Block A Platinum Plaza, Mata Mandir Square, above Airtel Office, near TT Nagar,"",
          ""addressLocality"": ""Bhopal,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""462003"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Tulsi mall ,2nd floor, shop no.101,Railway station, Road, Lalbagh,"",
          ""addressLocality"": ""Burhanpur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""450331"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Shop No. 04, Apollo Cross Road Market, Busstand, opp. Jogindar petrol pump, Chetgiri Colony, Narayanpura, Khonp,"",
          ""addressLocality"": ""Chhatarpur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""471001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""shop no. 4, stadium complex, near Dainik Bhaskar ofc, beside MLB School, Rautha Wada,"",
          ""addressLocality"": ""Chhindwara,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""480001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""ward no.2, Moreganj purani, Galla Mandi Rd, manganj, Teen Gulli,"",
          ""addressLocality"": ""Damoh,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""470661"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Jhanda Guru Ki Gali, near Shiv Temple, Darugar Ki Pulia,"",
          ""addressLocality"": ""Datia,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""475661"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""3-A KOTHI ROAD, opp hotel khedha pati Civil line, pati, opposite hotel, Kheda,"",
          ""addressLocality"": ""Dewas,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""455001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""148, Silver Hills Colony,"",
          ""addressLocality"": ""Dhar,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""454001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Narmada Ganj Rd,"",
          ""addressLocality"": ""Dindori,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""481880"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""131, Indore Rd, Padam Nagar,"",
          ""addressLocality"": ""Khandwa,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""450001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Dubey colony, near Sahiyog hospital, Laxmi Ganj,"",
          ""addressLocality"": ""Guna,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""473001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""203,Anshiya Plaza,Near mayur plaza, Mayur Market, Thatipur,"",
          ""addressLocality"": ""Gwalior,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""474011"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""bus stand, Avaalon salon near MUFTI showroom, GP MALL ROAD, road,"",
          ""addressLocality"": ""Harda,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""461331"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""1st Floor, Narmada City Mall, in front of Central Bank, Ward No-3, Jagdish Pura,"",
          ""addressLocality"": ""Narmadapuram,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""461001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""111, near Gopur Square, Ahilya Nagar Extension, Ahilya Nagar,"",
          ""addressLocality"": ""Indore,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""452009"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Tayebali Petrol Pump Crossing Indian Overseas Bank Road, near CID Office, South Civil Lines,"",
          ""addressLocality"": ""Jabalpur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""482001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Shop No 20, Bus Stand,"",
          ""addressLocality"": ""Jhabua,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""457661"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Madhav Nagar,"",
          ""addressLocality"": ""Katni,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""483501"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Maharajpur,"",
          ""addressLocality"": ""Mandla,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""481665"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Gopinath ki puliya, Duttpura,"",
          ""addressLocality"": ""Morena,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""476001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Vaidy, Babu complex, Belapur Kar Ward,"",
          ""addressLocality"": ""Narsinghpur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""487001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Tagore Marg, Neemuch Chawni,"",
          ""addressLocality"": ""Neemuch,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""458441"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Near Ganesh Mandir, Chola Naka,"",
          ""addressLocality"": ""Niwari,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""472442"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Near Roopa beauty parlour, Jadia Colony, Dham Mohalla,"",
          ""addressLocality"": ""Panna,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""488001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Ward No. 9, 102, Talab Mohalla,"",
          ""addressLocality"": ""Raisen,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""464551"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Rana Pratap Marg, near Shalu cool place,"",
          ""addressLocality"": ""Rajgarh,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""465661"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Ghas Bazar Kalaigar Road, Killer Tailor Building 1st Floor, near Al-Rehmat Market,"",
          ""addressLocality"": ""Ratlam,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""457001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""beside joyti school infornt of nehru nagar gate, opposite samdirya hotel,"",
          ""addressLocality"": ""Rewa,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""486001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Civil lines sagar Hanuman mandir Gali, in front of mohan Store, Sagar, 470001"",
          ""addressLocality"": ""Sagar,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""470001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Gandhi Chowk, Ganpat Marg, Nazirabad,"",
          ""addressLocality"": ""Satna,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""485001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Main Road, opposite state bank of India,"",
          ""addressLocality"": ""Sehore,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""466001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Subhash Ward,"",
          ""addressLocality"": ""Seoni,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""480661"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Pandav Nagar Rd, in front of Indian coffee house, Pandav Nagar,"",
          ""addressLocality"": ""Shahdol,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""484001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Vijay Nagar,"",
          ""addressLocality"": ""Shajapur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""465001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""behind Jain Market, Chandni Market,"",
          ""addressLocality"": ""Sheopur,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""476337"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Kamlaganj , theme, road,"",
          ""addressLocality"": ""Shivpuri,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""473551"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Pooja Park, Near Bank Of Baroda, Hospital Chowk,"",
          ""addressLocality"": ""Sidhi,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""486661"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Singrauli Market Rd, Bhagat Singh Colony,"",
          ""addressLocality"": ""Singrauli,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""486889"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""near state bank, in front of vardman mall,"",
          ""addressLocality"": ""Tikamgarh,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""472001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Delight Tower, ground floor, Mahakal Vanijya Kendra,"",
          ""addressLocality"": ""Ujjain,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""456010"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Gandhi Chowk, near Yatayat Police station,"",
          ""addressLocality"": ""Umaria,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""484661"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""MIG. 30 Indra Complex, Front of LIC Office, Raisen Rd, Shastri Nagar,"",
          ""addressLocality"": ""Vidisha,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""464001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Petrol Pump, Bistan Rd, behind Jyoti Nagar, Jyoti Nagar, Rishika Nagar,"",
          ""addressLocality"": ""Khargone,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""451001"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""E.W.S 133, Patel Nagar, Ward Number 21,"",
          ""addressLocality"": ""Mandideep,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""462046"",
          ""addressCountry"": ""India""
        }
      },
      {
        ""@type"": ""Place"",
        ""Address"": {
          ""@type"": ""PostalAddress"",
          ""streetAddress"": ""Dusehera Ground Gate No.1,"",
          ""addressLocality"": ""Budhni,"",
          ""addressRegion"": ""Madhya Pradesh"",
          ""postalCode"": ""466445"",
          ""addressCountry"": ""India""
        }
      },
      ""jobLocation""
    ],
    ""mainEntityOfPage"": {
      ""@id"": ""https://naukrimitra.in/dir/computer-operator-jobs-in-madhya-pradesh/#webpage""
    }
  }
}"
2sgKffjN,Untitled,35657,C++,Tuesday 6th of February 2024 03:24:57 AM CDT,"
#define _CRT_SECURE_NO_WARNINGS 

#include <iostream>

using namespace std;

struct film {
	char name[40];
	char producer[40];
	char genre[40];
	int rating;
};

struct video_store {
	film store[100];
	int films_number = 0;
};

void show_all_movies(const video_store& some_store) {
	for (int i = 0; i < some_store.films_number; i++) {
		cout << some_store.store[i].name << "", продюсер: "" << some_store.store[i].producer << "", "" << some_store.store[i].genre << "", рейтинг - "" << some_store.store[i].rating << endl;
	}
	cout << endl;
}

void add_movie(video_store& some_store, const char* name, const char* producer, const char* genre, const int rating) {
	if (some_store.films_number == 100) {
		cout << ""Фильм не может быть добавлен"" << endl;
		return;
	}
	strcpy(some_store.store[some_store.films_number].name, name);
	strcpy(some_store.store[some_store.films_number].producer, producer);
	strcpy(some_store.store[some_store.films_number].genre, genre);
	some_store.store[some_store.films_number].rating = rating;
	some_store.films_number++;
}

void del_movie(video_store& some_store, const char* name) {
	for (int i = 0; i < some_store.films_number; i++) {
		if (!strcmp(some_store.store[i].name, name)) {
			for (int j = i; j < some_store.films_number - 1; j++) {
				some_store.store[j] = some_store.store[j + 1];
			}
			some_store.films_number--;
		}
	}
}

void find_movie_name(video_store& some_store, const char* name) {
	for (int i = 0; i < some_store.films_number; i++) {
		if (!strcmp(some_store.store[i].name, name)) {
			cout << some_store.store[i].name << "", продюсер: "" << some_store.store[i].producer << "", "" << some_store.store[i].genre << "", рейтинг - "" << some_store.store[i].rating << endl;
		}
	}
}

int main() {

	setlocale(LC_ALL, ""ru"");

	video_store my_store;

	add_movie(my_store, ""Пираты Карибского моря"", ""Гор Вербински"", ""фантастика"", 4);
	add_movie(my_store, ""Гарри Поттер"", ""Крис Коламбус"", ""фантастика"", 4);
	add_movie(my_store, ""Бриллиантовая рука"", ""Леонид Гайдай"", ""комедия"", 5);
	add_movie(my_store, ""Иван Васильевич меняет профессию"", ""Леонид Гайдай"", ""комедия"", 5);
	add_movie(my_store, ""Шерлок Холмс"", ""Гай Ричи"", ""детектив"", 5);
	add_movie(my_store, ""Карты, деньги, два ствола"", ""Гай Ричи"", ""комедия"", 5);

	show_all_movies(my_store);

	del_movie(my_store, ""Пираты Карибского моря"");

	show_all_movies(my_store);

	add_movie(my_store, ""Пираты Карибского моря"", ""Гор Вербински"", ""фантастика"", 4);

	show_all_movies(my_store);

	find_movie_name(my_store, ""Шерлок Холмс"");
}"
X66WTWHH,Untitled,Larme,Swift,Tuesday 6th of February 2024 03:20:17 AM CDT,"func decodingTypes() {
    let json = """"""
    [
    {
    ""type"": ""Type1"",
    ""name"": ""Name 1""
    },
    {
    ""type"": ""Type2"",
    ""value"": 3
    }
    ]
    """"""
    
    enum Typing: String, Codable {
        case type1 = ""Type1""
        case type2 = ""Type2""
    }
    
    struct MetaClass: Codable {
        let type: Typing //You might not really need this var and make a custom CodingKeys for decoding it since it's in the `holder` value
        let holder: Holder
        
        init(from decoder: Decoder) throws {
            let container = try decoder.container(keyedBy: CodingKeys.self)
            self.type = try container.decode(Typing.self, forKey: .type)
            switch type {
            case .type1:
                self.holder = .named(try .init(from: decoder))
            case .type2:
                self.holder = .numered(try .init(from: decoder))
            }
        }
    }
    
    //Enum to manage multiple possible objects
    enum Holder: Codable {
        case named(Named)
        case numered(Numered)
    }

    struct Named: Codable {
        let type: Typing
        let name: String
    }
    
    struct Numered: Codable {
        let type: Typing
        let value: Int
    }
    
    do {
        let decoded = try JSONDecoder().decode([MetaClass].self, from: Data(json.utf8))
        print(decoded)
    } catch {
        print(""Error while decoding: \(error)"")
    }
}

decodingTypes()"
QvpMJE6H,Знак рубля,chernov2000,CSS,Tuesday 6th of February 2024 03:16:42 AM CDT,"Можно указать не &#8381;, а его код в UNICODE:
p:after {
    content: ""\20BD"";
}

или

p:after {
    content: ""₽"";
}"
T1Ln9eDq,Untitled,fireflythemes,CSS,Tuesday 6th of February 2024 03:13:42 AM CDT,".product-categories-section .inner-block-shadow {
	border-radius: 12px;
}

.product-categories-section .products-category-content {
    border-top: none;
}"
NbgmW452,python lab (06/02/2024),brandblox,Python,Tuesday 6th of February 2024 03:03:56 AM CDT,"#Reverse
num = int(input(""Enter a number: ""))
reversed_num = 0
while num > 0:
    digit = num % 10
    reversed_num = (reversed_num * 10) + digit
    num = num // 10
print(f""The reversed number: {reversed_num}"")

#fibonacchi
num_terms = int(input(""Enter the number of terms for the Fibonacci series: ""))
if num_terms <= 0:
    print(""Invalid input. Please enter a positive integer."")
else:
    fib_series = [0, 1]
    while len(fib_series) < num_terms:
        fib_series.append(fib_series[-1] + fib_series[-2])
    sum_fib_series = sum(fib_series)
    print(f""The sum of the first {num_terms} terms in the Fibonacci series is: {sum_fib_series}"")

#armstrong
num = int(input(""Enter a number: ""))
original_num = num
num_digits = len(str(num))
sum_of_digits = 0
while num > 0:
    digit = num % 10
    sum_of_digits += digit ** num_digits
    num = num // 10
if original_num == sum_of_digits:
    print(f""{original_num} is an Armstrong number."")
else:
    print(f""{original_num} is not an Armstrong number."")


#positive negative sum
sum_positive = 0
sum_negative = 0
for i in range(10):
    num = float(input(f""Enter number {i + 1}: ""))

    if num > 0:
        sum_positive += num
    elif num < 0:
        sum_negative += num

print(f""Sum of positive numbers: {sum_positive}"")
print(f""Sum of negative numbers: {sum_negative}"")


#palindrome

num = int(input(""Enter a number: ""))
original_num = num
reversed_num = 0
while num > 0:
    digit = num % 10
    reversed_num = (reversed_num * 10) + digit
    num = num // 10
if original_num == reversed_num:
    print(f""{original_num} is a palindrome."")
else:
    print(f""{original_num} is not a palindrome."")

"
tiykv5pH,OracleProcedure,ab_random,Oracle 11,Tuesday 6th of February 2024 01:45:47 AM CDT,"procedure resolve_emergency_value
    ( p_event_id in event_log.id%type
    )
  is
    pragma autonomous_transaction;

    l_hysteresis number :=
      to_number(pkg_param.get_param(pkg_param.c_emergency_value_hysteresis)) / 100;

    l_incident_tab t_number := t_number();

    l_problem_tab t_string :=
      t_string
        ( pkg_problem.c_problem_g1_g2_max
        , pkg_problem.c_problem_p1_p2_min
        , pkg_problem.c_problem_p1_max
        , pkg_problem.c_problem_t1_max
        , pkg_problem.c_problem_g1_max
        , pkg_problem.c_problem_v1_max
        , pkg_problem.c_problem_p2_max
        , pkg_problem.c_problem_t2_max
        , pkg_problem.c_problem_g2_max
        , pkg_problem.c_problem_v2_max
        , pkg_problem.c_problem_p1_min
        , pkg_problem.c_problem_t1_min
        , pkg_problem.c_problem_g1_min
        , pkg_problem.c_problem_v1_min
        , pkg_problem.c_problem_p2_min
        , pkg_problem.c_problem_t2_min
        , pkg_problem.c_problem_g2_min
        , pkg_problem.c_problem_v2_min
        );

    cursor c_mpt (l_problem_code in nsi_problem.code%type) is
      select inc.id incident_id
        from measure_point     mpt
           , incident          inc
           , nsi_state         st
           , nsi_problem       pro
           , nsi_resource_type nrt
           , measure_point_rc_info_v   tmp
           , nsi_measure_type  nmt
           , (select nrm.regime_version_season_id
                   , nrm.measure_type_id
                   , nrm.emrg_upper_limit
                   , nrm.emrg_upper_limit - nrm.emrg_upper_limit * l_hysteresis h_emrg_upper_limit
                   , nrm.emrg_lower_limit
                   , nrm.emrg_lower_limit + nrm.emrg_upper_limit * l_hysteresis h_emrg_lower_limit
                from nsi_regime_map nrm
             ) nrm
       where mpt.deleted is null
         and inc.object_id = mpt.id
         and inc.deleted is null
         and inc.state_id = st.id
         and st.code = pkg_state_model.c_state_ps_registered
         and pro.id = inc.problem_id
         and pro.code = l_problem_code
         and inc.is_resolved = pkg_param.c_false
         and nrt.id = mpt.resource_type_id
         and nrt.code = case
                          when l_problem_code in ( pkg_problem.c_problem_g1_g2_max
                                                 , pkg_problem.c_problem_p1_p2_min
                                                 )
                            then pkg_object.c_resource_heating else nrt.code
                        end
         and mpt.measure_object_id = tmp.measure_object_id
         and nrm.regime_version_season_id = tmp.regime_version_season_id
         and tmp.resource_type_id = mpt.resource_type_id
         and nmt.id = nrm.measure_type_id
         and nmt.code =
           case l_problem_code
             when pkg_problem.c_problem_g1_g2_max then pkg_problem.c_mt_g1_g2 -- Разность расхода теплоносителя, т/ч
             when pkg_problem.c_problem_p1_p2_min then pkg_problem.c_mt_p1_p2 -- Разность давления, атм
             when pkg_problem.c_problem_p1_max    then pkg_problem.c_mt_p1    -- Давление теплоносителя в подающем трубопроводе, атм
             when pkg_problem.c_problem_t1_max    then pkg_problem.c_mt_t1    -- Температура теплоносителя в подающем трубопроводе, °С
             when pkg_problem.c_problem_g1_max    then pkg_problem.c_mt_g1    -- Масса теплоносителя, отпущенного по подающему трубопроводу, т/ч
             when pkg_problem.c_problem_v1_max    then pkg_problem.c_mt_v1    -- Объем теплоносителя, отпущенного по подающему трубопроводу, м3/ч
             when pkg_problem.c_problem_p2_max    then pkg_problem.c_mt_p2    -- давление теплоносителя в обратном трубопроводе , атм
             when pkg_problem.c_problem_t2_max    then pkg_problem.c_mt_t2    -- Температура теплоносителя в обратном трубопроводе, °С
             when pkg_problem.c_problem_g2_max    then pkg_problem.c_mt_g2    -- Масса теплоносителя, отпущенного по обратному трубопроводу, т/ч
             when pkg_problem.c_problem_v2_max    then pkg_problem.c_mt_v2    -- Объем теплоносителя, отпущенного по обратному трубопроводу, м3/ч
             when pkg_problem.c_problem_p1_min    then pkg_problem.c_mt_p1    -- Давление теплоносителя в подающем трубопроводе, атм
             when pkg_problem.c_problem_t1_min    then pkg_problem.c_mt_t1    -- Температура теплоносителя в подающем трубопроводе, °С
             when pkg_problem.c_problem_g1_min    then pkg_problem.c_mt_g1    -- Масса теплоносителя, отпущенного по подающему трубопроводу, т/ч
             when pkg_problem.c_problem_v1_min    then pkg_problem.c_mt_v1    -- Объем теплоносителя, отпущенного по подающему трубопроводу, м3/ч
             when pkg_problem.c_problem_p2_min    then pkg_problem.c_mt_p2    -- давление теплоносителя в обратном трубопроводе , атм
             when pkg_problem.c_problem_t2_min    then pkg_problem.c_mt_t2    -- Температура теплоносителя в обратном трубопроводе, °С
             when pkg_problem.c_problem_g2_min    then pkg_problem.c_mt_g2    -- Масса теплоносителя, отпущенного по обратному трубопроводу, т/ч
             when pkg_problem.c_problem_v2_min    then pkg_problem.c_mt_v2    -- Объем теплоносителя, отпущенного по обратному трубопроводу, м3/ч
           end
         and exists
           (select 0
              from tmp_incident_process_mv mvl
             where mvl.measure_point_id = mpt.id
               and
               (
                    (l_problem_code = pkg_problem.c_problem_g1_g2_max and not (mvl.m1 - mvl.m2 is not null and mvl.m1 - mvl.m2 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_p1_p2_min and not (mvl.p1 - mvl.p2 is not null and mvl.p1 - mvl.p2 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_p1_max    and not (mvl.p1 is not null and mvl.p1 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_t1_max    and not (mvl.t1 is not null and mvl.t1 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_g1_max    and not (mvl.m1 is not null and mvl.m1 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_v1_max    and not (mvl.q1 is not null and mvl.q1 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_p2_max    and not (mvl.p2 is not null and mvl.p2 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_t2_max    and not (mvl.t2 is not null and mvl.t2 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_g2_max    and not (mvl.m2 is not null and mvl.m2 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_v2_max    and not (mvl.q2 is not null and mvl.q2 > nrm.h_emrg_upper_limit))
                 or (l_problem_code = pkg_problem.c_problem_p1_min    and not (mvl.p1 is not null and mvl.p1 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_t1_min    and not (mvl.t1 is not null and mvl.t1 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_g1_min    and not (mvl.m1 is not null and mvl.m1 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_v1_min    and not (mvl.q1 is not null and mvl.q1 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_p2_min    and not (mvl.p2 is not null and mvl.p2 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_t2_min    and not (mvl.t2 is not null and mvl.t2 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_g2_min    and not (mvl.m2 is not null and mvl.m2 < nrm.h_emrg_lower_limit))
                 or (l_problem_code = pkg_problem.c_problem_v2_min    and not (mvl.q2 is not null and mvl.q2 < nrm.h_emrg_lower_limit))
               )
           )
       order by inc.id;
  begin
    for pro in l_problem_tab.first .. l_problem_tab.last loop
      for cur in c_mpt(l_problem_tab(pro)) loop
        begin
          resolve_automatic(cur.incident_id);
          l_incident_tab.extend;
          l_incident_tab(l_incident_tab.last) := cur.incident_id;
        exception
          when others then
            pkg_event.error_handler
              ( p_event_id   => p_event_id
              , p_err_code   => -20205
              , p_err_params => pkg_util.get_error_trace
              );
        end;
      end loop;

      set_resolve_incident_text(l_incident_tab, l_problem_tab(pro));
      l_incident_tab.delete;
    end loop;

    commit; -- autonomous_transaction
  end resolve_emergency_value;"
4YVr3tLK,bestie i think i fixed it,Ansuperope,HTML,Tuesday 6th of February 2024 12:59:59 AM CDT,"<!--

CODE BY @AUROREAN

  Terms of Use:
    https://toyhou.se/~bulletins/135562
  
  Commissions:
    https://avistellart.wordpress.com/code/
  
  Trades:
    https://toyhou.se/~bulletins/128014
  
  Donate:
    https://ko-fi.com/avistella
    https://payhip.com/b/Bscvf

---

CODE HELP
Please check the following links below first prior to messaging me for help!

  How to Use HTML: 
    https://toyhou.se/~forums/16.htmlcss-graphics/53428
  
  Help Thread: 
    https://toyhou.se/~forums/16.htmlcss-graphics/48845
  
  FAQ/ Troubleshooting: 
    https://toyhou.se/13737238.
  
  Other Coding Tutorials/ Tips:
    https://toyhou.se/AviCode/characters/folder:1637168
  
---

COLOURS USED

  BACKGROUND: #DFEDCC
  TEXT: #793600
  BORDERS: #709D5E
  HEADERS: #df8024

-->

<div class=""container-fluid"" style=""max-width:1500px;"">
  <div class=""row"">
    
    <!--HEADER-->
    <div class=""col-lg-12 p-1"">
      <!--top ""border""-->
      <div class=""card border-0 p-2"" style=""background-color:#709D5E; border-top-left-radius:1.5em; border-top-right-radius:1.5em; border-bottom-left-radius:0; border-bottom-right-radius:0;""></div>
      <!--text box-->
      <div class=""card border-0 rounded-0 my-1 p-1"" style=""background-color:709D5E;"">
        <div class=""card border-0 rounded-0 px-3 py-2"" style=""background-color:#DFEDCC; color:#793600;"">
          <h1 class=""display-3 mb-0"" style=""color:#df8024;"">𝔈𝔦𝔠𝔥𝔲𝔰𝔟𝔲𝔞𝔦𝔫</h1>
        </div>
      </div> <!--text box end-->
      <!--bottom ""border""-->
      <div class=""card border-0 p-2"" style=""background-color:#709D5E; border-bottom-left-radius:1.5em; border-bottom-right-radius:1.5em; border-top-left-radius:0; border-top-right-radius:0;""></div>
    </div> <!--header end-->
    
    <!--SIDE IMAGE-->
    <div class=""col-lg-3 p-1"">
      <div class=""card border-0 h-100 p-1"" style=""background-color:#709D5E min-height:250px; border-radius:1.5em;"">
        <div class=""card border-0 h-100"" style=""background-color:#DFEDCC; color:#793600; border-radius:1.5em; background-size:cover; background-position:center; 
        background-image:url('https://i.pinimg.com/564x/02/56/4f/02564fee8562fd7ad5c2c41d228446b7.jpg');""></div>
      </div>
    </div> <!--side image end-->
    
    <!--BASICS-->
    <div class=""col-lg-9 p-1"">
      <!--top ""border""-->
      <div class=""card border-0 p-2"" style=""background-color:#709D5E; border-top-left-radius:1.5em; border-top-right-radius:1.5em; border-bottom-left-radius:0; border-bottom-right-radius:0;""></div>
      
      <!--QUOTE BOX-->
      <div class=""card border-0 rounded-0 my-1 p-1"" style=""background-color:709D5E;"">
        <div class=""card border-0 rounded-0 px-3 py-2 text-center font-italic"" style=""background-color:#DFEDCC; color:#df8024;"">
          <p>""Of Horses and Harvest.""</p>
        </div>
      </div> <!--quote box end-->
      
      <!--TEXT BOX-->
      <div class=""card border-0 rounded-0 my-1 p-1"" style=""background-color:709D5E;"">
        <div class=""card border-0 rounded-0 px-3 pt-3 pb-2"" style=""background-color:#DFEDCC; color:#793600;"">
          
          <!--TEXT LIST-->
          <ul class=""mb-0 pl-4"" style=""list-style-type:square;"">
            <li class=""mb-1"">
              <span class=""text-uppercase"" style=""color:#df8024;"">TIME PERIOD:</span>
              Unknown
            </li>
            <li class=""mb-1"">
              <span class=""text-uppercase"" style=""color:#df8024;"">KEYWORDS:</span>
              Horses, Harvest, Orchards, 
            </li>
            <li class=""mb-1"">
              <span class=""text-uppercase"" style=""color:#df8024;"">AESTHETIC:</span>
              Medieval, Celtic, Equine
            </li>
          </ul> <!--text list end-->
          
          <!--MOODBOARD IMAGES-->
          <div class=""d-block text-center mt-1"">
            
            <!--IMAGE 1-->
            <div class=""card d-inline-block border-0 m-1 p-1"" style=""background-color:#709D5E; border-radius:1.5em; width:125px; height:125px;"">
              <div class=""card border-0 h-100"" style=""background-color:#DFEDCC; color:#793600; border-radius:1.5em; background-size:cover; background-position:center; 
              background-image:url('https://i.pinimg.com/564x/2b/b6/40/2bb640f72c8d07a569cc440f91a385ac.jpg');""></div>
            </div>
            
            <!--IMAGE 2-->
            <div class=""card d-inline-block border-0 m-1 p-1"" style=""background-color:#709D5E; border-radius:1.5em; width:125px; height:125px;"">
              <div class=""card border-0 h-100"" style=""background-color:#DFEDCC; color:#793600; border-radius:1.5em; background-size:cover; background-position:center; 
              background-image:url('https://i.pinimg.com/564x/83/4f/2f/834f2fc3f585668fb6c1ecd9a5e694c4.jpg');""></div>
            </div>
            
            <!--IMAGE 3-->
            <div class=""card d-inline-block border-0 m-1 p-1"" style=""background-color:#709D5E; border-radius:1.5em; width:125px; height:125px;"">
              <div class=""card border-0 h-100"" style=""background-color:#DFEDCC; color:#793600; border-radius:1.5em; background-size:cover; background-position:center; 
              background-image:url('https://i.pinimg.com/564x/80/98/c0/8098c044362033eb09bf9d63b87c02f7.jpg');""></div>
            </div>
            
            <!--IMAGE 4-->
            <div class=""card d-inline-block border-0 m-1 p-1"" style=""background-color:#709D5E; border-radius:1.5em; width:125px; height:125px;"">
              <div class=""card border-0 h-100"" style=""background-color:#DFEDCC; color:#793600; border-radius:1.5em; background-size:cover; background-position:center; 
              background-image:url('https://i.pinimg.com/564x/b6/6a/a8/b66aa8940476dfdaa1fae4e3b8bd3d4f.jpg');""></div>
            </div>
            
            <!--IMAGE 5-->
            <div class=""card d-inline-block border-0 m-1 p-1"" style=""background-color:#709D5E; border-radius:1.5em; width:125px; height:125px;"">
              <div class=""card border-0 h-100"" style=""background-color:#DFEDCC; color:#793600; border-radius:1.5em; background-size:cover; background-position:center; 
              background-image:url('https://i.pinimg.com/736x/23/1f/0f/231f0faf41c8b49bfaa290b9c257ab82.jpg');""></div>
            </div>
            
          </div> <!--moodboard images end-->
          
        </div>
      </div> <!--text box end-->
      
      <!--IMAGES ROW-->
      <div class=""row no-gutters"">
        
        <!--IMAGE 1-->
        <div class=""col-4 pt-0 pb-1 pl-0 pr-1"">
          <div class=""card border-0 rounded-0 p-1"" style=""background-color:#709D5E;"">
            <div class=""card border-0 rounded-0"" style=""background-color:#DFEDCC; color:#793600; height:150px; background-size:cover; background-position:center;
            background-image:url('https://i.pinimg.com/564x/6c/56/01/6c56014ff041f51696fdd8c92aed2a90.jpg');""></div>
          </div>
        </div>
        
        <!--IMAGE 2-->
        <div class=""col-4 pt-0 pb-1 px-1"">
          <div class=""card border-0 rounded-0 p-1"" style=""background-color:#709D5E;"">
            <div class=""card border-0 rounded-0"" style=""background-color:#DFEDCC; color:#793600; height:150px; background-size:cover; background-position:center;
            background-image:url('https://i.pinimg.com/564x/2b/d7/05/2bd705d2edd56ddf319e7cea7b942e8d.jpg');""></div>
          </div>
        </div>
        
        <!--IMAGE 3-->
        <div class=""col-4 pt-0 pb-1 pl-1 pr-0"">
          <div class=""card border-0 rounded-0 p-1"" style=""background-color:#709D5E;"">
            <div class=""card border-0 rounded-0"" style=""background-color:#DFEDCC; color:#793600; height:150px; background-size:cover; background-position:center;
            background-image:url('https://i.pinimg.com/564x/e3/e2/76/e3e276f025a9911b89f96ecb31f8060a.jpg');""></div>
          </div>
        </div>
        
      </div> <!--images row end-->
      
      <!--bottom ""border""-->
      <div class=""card border-0 p-2"" style=""background-color:#709D5E; border-bottom-left-radius:1.5em; border-bottom-right-radius:1.5em; border-top-left-radius:0; border-top-right-radius:0;""></div>
    </div> <!--basics end-->
    
    <!--PHYSICAL ENVIRONMENT-->
    <div class=""col-lg-5 p-1"">
      <div class=""card border-0 h-100"">
        <!--TEXT BOX-->
        <div class=""card border-0 rounded-0 my-1 p-1 h-100"" style=""background-color:#709D5E;"">
          <div class=""card border-0 rounded-0 px-3 pt-3 pb-2 h-100"" style=""background-color:#DFEDCC; color:#793600;"">
            <p class=""text-uppercase mb-2"" style=""color:#df8024;"">PHYSICAL ENVIRONMENT:</p>
            <ul class=""mb-0"" style=""list-style-type:square;"">
              <li class=""mb-1"">The castle of Eichusbuain, </li>
              <li class=""mb-1"">Maecenas nec velit tincidunt, posuere nulla nec, mollis nisi.</li>
              <li class=""mb-1"">Vivamus pellentesque purus eget nibh lobortis, eget placerat neque imperdiet.</li>
              <li class=""mb-1"">Aliquam a velit sit amet nisl elementum scelerisque in et nisi.</li>
              <li class=""mb-1"">Nullam et turpis luctus, egestas ante id, varius sem.</li>
            </ul>
          </div>
        </div> <!--text box end-->
      </div>
    </div> <!--physical environment end-->
    
    <!--MIDDLE IMAGE-->
    <div class=""col-lg-2 p-1"">
      <div class=""card border-0 h-100 p-1"" style=""background-color:#709D5E min-height:150px; border-radius:1.5em;"">
        <div class=""card border-0 h-100"" style=""background-color:#DFEDCC; color:#793600; border-radius:1.5em; background-size:cover; background-position:center; 
        background-image:url('https://images.unsplash.com/photo-1518891303332-9c3e25d1e6a8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=675&q=80');""></div>
      </div>
    </div> <!--middle image end-->
    
    <!--SOCIAL ENVIRONMENT-->
    <div class=""col-lg-5 p-1"">
      <div class=""card border-0 h-100"">
        <!--TEXT BOX-->
        <div class=""card border-0 rounded-0 my-1 p-1 h-100"" style=""background-color:#709D5E;"">
          <div class=""card border-0 rounded-0 px-3 pt-3 pb-2 h-100"" style=""background-color:#DFEDCC; color:#793600;"">
            <p class=""text-uppercase mb-2"" style=""color:#df8024;"">SOCIAL ENVIRONMENT:</p>
            <ul class=""mb-0"" style=""list-style-type:square;"">
              <li class=""mb-1"">Cras vehicula sapien vitae mauris vestibulum porta.</li>
              <li class=""mb-1"">Maecenas nec velit tincidunt, posuere nulla nec, mollis nisi.</li>
              <li class=""mb-1"">Vivamus pellentesque purus eget nibh lobortis, eget placerat neque imperdiet.</li>
              <li class=""mb-1"">Aliquam a velit sit amet nisl elementum scelerisque in et nisi.</li>
              <li class=""mb-1"">Nullam et turpis luctus, egestas ante id, varius sem.</li>
            </ul>
          </div>
        </div> <!--text box end-->
      </div>
    </div> <!--social environment end-->
    
    <!--PALETTE-->
    <div class=""col-lg-12 p-1"">
      <div class=""card border-0 h-100"" style=""background-color:#709D5E; border-radius:1.5em;"">
        <div class=""row no-gutters"">
          
          <!--LEFT MOST PALETTE-->
          <!--Make sure this is the FIRST colour in the palettes-->
          <div class=""col p-1"">
            <div class=""card border-0"" style=""border-top-left-radius:1.5em; border-top-right-radius:0; border-bottom-left-radius:1.5em; border-bottom-right-radius:0; height:30px;
            background-color:#84a5aa;""></div>
          </div> <!--left most palette end-->
          
          <!--MIDDLE PALETTE-->
          <div class=""col p-1"">
            <div class=""card border-0 rounded-0"" style=""height:30px;
            background-color:#e5d5ca;""></div>
          </div> <!--middle palette end-->
          
          <!--MIDDLE PALETTE-->
          <div class=""col p-1"">
            <div class=""card border-0 rounded-0"" style=""height:30px;
            background-color:#24626b;""></div>
          </div> <!--middle palette end-->
          
          <!--MIDDLE PALETTE-->
          <div class=""col p-1"">
            <div class=""card border-0 rounded-0"" style=""height:30px;
            background-color:#99c5cd;""></div>
          </div> <!--middle palette end-->
          
          <!--MIDDLE PALETTE-->
          <div class=""col p-1"">
            <div class=""card border-0 rounded-0"" style=""height:30px;
            background-color:#e4995e;""></div>
          </div> <!--middle palette end-->
          
          <!--MIDDLE PALETTE-->
          <div class=""col p-1"">
            <div class=""card border-0 rounded-0"" style=""height:30px;
            background-color:#457f87;""></div>
          </div> <!--middle palette end-->
          
          <!--RIGHT MOST PALETTE-->
          <!--Make sure this is the LAST colour in the palettes-->
          <div class=""col p-1"">
            <div class=""card border-0"" style=""border-top-left-radius:0; border-top-right-radius:1.5em; border-bottom-left-radius:0; border-bottom-right-radius:1.5em; height:30px;
            background-color:#d5e6ee;""></div>
          </div> <!--right most palette end-->
          
        </div>
      </div>
    </div> <!--palette end-->
    
    <!--TRIVIA-->
    <div class=""col-lg-12 p-1"">
      <div class=""card border-0 h-100"">
        
        <!--top ""border""-->
        <div class=""card border-0 p-2 h-100"" style=""background-color:#709D5E; border-top-left-radius:1.5em; border-top-right-radius:1.5em; border-bottom-left-radius:0; border-bottom-right-radius:0;""></div>
        
        <!--TEXT BOX-->
        <div class=""card border-0 rounded-0 my-1 p-1 h-100"" style=""background-color:#709D5E;"">
          <div class=""card border-0 rounded-0 px-3 pt-3 pb-2 h-100"" style=""background-color:#DFEDCC; color:#793600;"">
            <p class=""text-uppercase mb-2"" style=""color:#df8024;"">TRIVIA:</p>
            <ul class=""mb-0"" style=""list-style-type:square;"">
              <li class=""mb-1"">Cras vehicula sapien vitae mauris vestibulum porta.</li>
              <li class=""mb-1"">Maecenas nec velit tincidunt, posuere nulla nec, mollis nisi.</li>
              <li class=""mb-1"">Vivamus pellentesque purus eget nibh lobortis, eget placerat neque imperdiet.</li>
              <li class=""mb-1"">Aliquam a velit sit amet nisl elementum scelerisque in et nisi.</li>
              <li class=""mb-1"">Nullam et turpis luctus, egestas ante id, varius sem.</li>
            </ul>
          </div>
        </div> <!--text box end-->
        
        <!--bottom ""border""-->
        <div class=""card border-0 p-2 h-100"" style=""background-color:#709D5E; border-bottom-left-radius:1.5em; border-bottom-right-radius:1.5em; border-top-left-radius:0; border-top-right-radius:0;""></div>
      </div>
    </div> <!--trivia end-->
    
  </div>


<!--NEW CODE ALERT-->

<!--

CODE BY @AUROREAN

  Terms of Use:
    https://toyhou.se/~bulletins/135562
  
  Commissions:
    https://avistellart.wordpress.com/code/
  
  Trades:
    https://toyhou.se/~bulletins/128014
  
  Donate:
    https://ko-fi.com/avistella
    https://payhip.com/b/Bscvf

---

CODE HELP
Please check the following links below first prior to messaging me for help!

  How to Use HTML: 
    https://toyhou.se/~forums/16.htmlcss-graphics/53428
  
  Help Thread: 
    https://toyhou.se/~forums/16.htmlcss-graphics/48845
  
  FAQ/ Troubleshooting: 
    https://toyhou.se/13737238.
  
  Other Coding Tutorials/ Tips:
    https://toyhou.se/AviCode/characters/folder:1637168

-->

<!--
CUSTOMIZATION OPTIONS:
  Note: I suggest reading through my Coding Efficiency Tips, particularly how to replace words/ a line of code all at once for easier/ faster customization:
      https://toyhou.se/14400718.coding-efficiency-tips#replace-all

GENERAL:
  Line Height: 1.5
    --Change to a lower/ higher number to have the text closer to/ further apart from each other vertically
  Corners Roundness: 1rem
    --Change to ""0"" if you don't want rounded corners
  Image Caption Text Position: text-left
    --Change to ""text-center"" if you want the caption text to be in the center of the image
  Header Underline: 1px
    --Change to a larger size for a thicker line
  Header Underline Style: solid
    --Change to ""dotted"", ""dashed"", etc. for a more stylized line
        --Refer to the following site for border/ line style options:
            https://www.w3schools.com/css/css_border.asp
  Sidebox Border Size: 1.5px
    --Change to a larger size for a thicker line
  Sidebox Border Style: inset
    --Change to ""dotted"", ""dashed"", etc. for a more stylized line
        --Refer to the following site for border/ line style options:
            https://www.w3schools.com/css/css_border.asp
  Contents Navigation Border Size: .8px
    --Change to a larger size for a thicker line
  Contents Navigation Border Style: dashed
    --Change to ""dotted"", ""dashed"", etc. for a more stylized line
        --Refer to the following site for border/ line style options:
            https://www.w3schools.com/css/css_border.asp
  Floating Image Borders: 1.1px


FONT SIZES:
  Character Name Header: 36px
  Overall Content: 15px
  Sidebox Content: 12px
  Headers: 20px
  Subheaders: 18px
  Captions:12.5px;

FONTS:
--Remove the fonts as desired to use the default font
  Overall Text: Arial
  Character Name Header: 'Georgia',serif
  Headers: 'Times New Roman',serif
  Subheaders: 'Book Antiqua',serif
  Captions: 'Calibri',sans-serif
  

COLOURS:
--Remove the colours as desired to use the default text/ theme colour
  Background: #36271d
  Main Content Background: #fdf7ff
  Main Content Text: #2a232a
  Sidebox Background: #fefcff
  Sidebox Border: rgba(0,0,0,0.1)
  Sidebox Headers Background: #c587cf
  Sidebox Header Text: #fdf1ff
  Sidebox Info Headers Text: #893fa7
  Sidebox Content Text: #a97cbc
  Header Text: #59007e
  Subheader Text: #8f2cb8
  Contents Navigation Background: #fefbff
  Contents Navigation Header Text: #7a4592
  Contents Navigation Border: rgba(0,0,0,0.2)
  Floating Image Background: #f9ebff
  Floating Image Captions Text: #976fab
  Floating Image Border: rgba(0,0,0,0.3)
-->

<!--top ""border""-->

<div class=""row p-1"">
<div class=""col-12 card border-0 p-2"" style=""background-color:#709D5E; border-top-left-radius:1.5em; border-top-right-radius:1.5em; border-bottom-left-radius:0; border-bottom-right-radius:0;""></div>

  <div class=""card d-block border-0 p-3 mx-auto"" style=""background-color:#fdf7ff; color:#2a232a; max-width:1500px; border-radius:1rem; font-size:15px; font-family:Arial; line-height:1.5;"">
    
    <!--CHARACTER NAME-->
    <h1 class=""mb-4"" style=""font-size:36px; font-family:'Georgia',serif; color:#59007e;"">Character Name</h1>
    
    <!--SIDE BOX-->
    <!--Add ""border-0"" after ""card"" if you don't want a border-->
    <div class=""card mx-auto float-lg-right ml-lg-3 mb-3"" style=""background-color:#fefcff; color:#a97cbc; min-width:250px; max-width:350px; font-size:12px; border-radius:1rem; border-width:1.5px; border-style:inset; border-color:rgba(0,0,0,0.1);"">
      
      <!--CHARACTER NAME HEADER-->
      <div class=""card px-2 py-1 border-0 m-1"" style=""background-color:#c587cf; color:#fdf1ff; font-size:20px; font-family:'Times New Roman',serif; border-radius:1rem;"">
        <h1 class=""text-center font-weight-bold mb-0"">Character Name</h1>
      </div> <!--character name header end-->
      
      <!--OUTFIT BUTTONS-->
      <ul class=""nav nav-pills justify-content-center d-flex flex-wrap"">
        <li class=""nav-item m-1"">
          <a class=""nav-link active px-2 py-1"" style=""border-radius:1rem;"" data-toggle=""pill"" href=""#CC-OUTFIT-01"">Outfit 01</a>
        </li>
        <li class=""nav-item m-1"">
          <a class=""nav-link px-2 py-1"" style=""border-radius:1rem;"" data-toggle=""pill"" href=""#CC-OUTFIT-02"">Outfit 02</a>
        </li>
        <li class=""nav-item m-1"">
          <a class=""nav-link px-2 py-1"" style=""border-radius:1rem;"" data-toggle=""pill"" href=""#CC-OUTFIT-03"">Outfit 03</a>
        </li>
      </ul> <!--outfit buttons end-->
      
      <!--OUTFIT TAB CONTENT-->
      <div class=""tab-content"">
        
        <!--OUTFIT 01 SECTION-->
        <div class=""tab-pane fade show active"" id=""CC-OUTFIT-01"">
          <div class=""card bg-transparent border-0 rounded-0 m-1"" style=""height:350px; background-size:contain; background-repeat:no-repeat; background-position:center; background-image:url('https://f2.toyhou.se/file/f2-toyhou-se/images/27630645_EjJeoc79MeeoLWz.png?1603327783');""></div>
        </div> <!--outfit 01 section end-->
        
        <!--OUTFIT 02 SECTION-->
        <div class=""tab-pane fade"" id=""CC-OUTFIT-02"">
          <div class=""card bg-transparent border-0 rounded-0 m-1"" style=""height:350px; background-size:contain; background-repeat:no-repeat; background-position:center; background-image:url('https://f2.toyhou.se/file/f2-toyhou-se/images/27630640_AlmfPz7VGVCCFkm.png?1603327777');""></div>
        </div> <!--outfit 02 section end-->
        
        <!--OUTFIT 03 SECTION-->
        <div class=""tab-pane fade"" id=""CC-OUTFIT-03"">
          <div class=""card bg-transparent border-0 rounded-0 m-1"" style=""height:350px; background-size:contain; background-repeat:no-repeat; background-position:center; background-image:url('https://f2.toyhou.se/file/f2-toyhou-se/images/27630629_Aty08YZJuvEmKJV.png');""></div>
        </div> <!--outfit 02 section end-->
        
      </div> <!--outfit tab content end-->
      
      <!--HEADER-->
      <div class=""card px-2 py-1 mb-1 border-0 m-1"" style=""background-color:#c587cf; color:#fdf1ff; font-size:20px; font-family:'Times New Roman',serif; border-radius:1rem;"">
        <h3 class=""text-center font-weight-bold mb-0"">Header</h3>
      </div> <!--header end-->
      
      <!--ITEM-->
      <div class=""row no-gutters"">
        <!--header-->
        <div class=""col px-2 py-1"" style=""max-width:225px;"">
          <p class=""font-weight-bold"" style=""color:#893fa7;"">Item</p>
        </div>
        <!--content-->
        <div class=""col px-2 py-1"">
          <p>Unknown</p>
        </div>
      </div> <!--item end-->
      
      <!--DIVIDER LINE-->
      <div class=""row no-gutters""><div class=""col-12 p-1""><hr class=""m-0""></div></div>
      
      <!--ITEM-->
      <div class=""row no-gutters"">
        <!--header-->
        <div class=""col px-2 py-1"" style=""max-width:225px;"">
          <p class=""font-weight-bold"" style=""color:#893fa7;"">Item with link</p>
        </div>
        <!--content-->
        <div class=""col px-2 py-1"">
          <p><a href=""#"">Unknown</a></p>
        </div>
      </div> <!--item end-->
      
      <!--DIVIDER LINE-->
      <div class=""row no-gutters""><div class=""col-12 p-1""><hr class=""m-0""></div></div>
      
      <!--ITEM-->
      <div class=""row no-gutters"">
        <!--header-->
        <div class=""col px-2 py-1"" style=""max-width:225px;"">
          <p class=""font-weight-bold"" style=""color:#893fa7;"">Item with lists</p>
        </div>
        <!--content-->
        <div class=""col px-2 py-1"">
          <ul class=""mb-0 pl-2"">
            <li>Unknown</li>
            <li>Unknown</li>
            <li>Unknown</li>
          </ul>
        </div>
      </div> <!--item end-->
      
      <!--HEADER-->
      <div class=""card px-2 py-1 mb-1"" style=""background-color:#c587cf; color:#fdf1ff; font-size:20px; font-family:'Times New Roman',serif; border-radius:1rem;"">
        <h3 class=""text-center font-weight-bold mb-0"">Header</h3>
      </div> <!--header end-->
      
      <!--ITEM-->
      <div class=""row no-gutters"">
        <!--header-->
        <div class=""col px-2 py-1"" style=""max-width:225px;"">
          <p class=""font-weight-bold"" style=""color:#893fa7;"">Item</p>
        </div>
        <!--content-->
        <div class=""col px-2 py-1"">
          <p>Unknown</p>
        </div>
      </div> <!--item end-->
      
      <!--DIVIDER LINE-->
      <div class=""row no-gutters""><div class=""col-12 p-1""><hr class=""m-0""></div></div>
      
      <!--ITEM-->
      <div class=""row no-gutters"">
        <!--header-->
        <div class=""col px-2 py-1"" style=""max-width:225px;"">
          <p class=""font-weight-bold"" style=""color:#893fa7;"">Item with link</p>
        </div>
        <!--content-->
        <div class=""col px-2 py-1"">
          <p><a href=""#"">Unknown</a></p>
        </div>
      </div> <!--item end-->
      
      <!--DIVIDER LINE-->
      <div class=""row no-gutters""><div class=""col-12 p-1""><hr class=""m-0""></div></div>
      
      <!--ITEM-->
      <div class=""row no-gutters"">
        <!--header-->
        <div class=""col px-2 py-1"" style=""max-width:225px;"">
          <p class=""font-weight-bold"" style=""color:#893fa7;"">Item with lists</p>
        </div>
        <!--content-->
        <div class=""col px-2 py-1"">
          <ul class=""mb-0 pl-2"">
            <li>Unknown</li>
            <li>Unknown</li>
            <li>Unknown</li>
          </ul>
        </div>
      </div> <!--item end-->
      
    </div> <!--side box end-->
    
    <!--CONTENTS NAVIGATION-->
    <div class=""card mb-3"" style=""background-color:#fefbff; color:#7a4592; max-width:350px; border-radius:1rem; border-width:.8px; border-style:dashed; border-color:rgba(0,0,0,0.2);"">
      
      <!--HEADER-->
      <div class=""row no-gutters mx-1 mt-1"">
        <!--text header-->
        <div class=""col p-2"">
          <h3 class=""font-weight-bold mb-0"" style=""font-size:18px;"">
            <i class=""fal fa-list mr-1""></i> Contents
          </h3>
        </div>
        <!--""hide"" button-->
        <div class=""col-auto p-2"">
          [<a class=""mx-1"" data-toggle=""collapse"" href=""#CC-CONTENTS-NAVIGATION"">hide</a>]
        </div>
      </div> <!--header end-->
      
      <!--COLLAPSE CONTENT-->
      <div class=""collapse show"" id=""CC-CONTENTS-NAVIGATION"">
        
        <!--divider line-->
        <div class=""row no-gutters""><div class=""col-12 px-1 py-0""><hr class=""m-0""></div></div>
        
        <!--CONTENT-->
        <!--
          To add more sections, use an ID (i.e. href=""#"") that's different from the rest. Do NOT have links that are the same.
          
          To make a ""jump to"" section in the code, use the following code ABOVE where the link is SUPPOSED to jump to:
              <a name=""ID""></a>
          Do not put anything inside the code and ONLY change the ""ID"" to the SAME ID as your SECTION LINK. So if you make a section link that is href=""#RELATIONSHIPS"" then for your ""jump to"" section, you would put: <a name=""RELATIONSHIPS""></a> where the relationships section would be.
        -->
        <div class=""card-body p-2"">
          <ol class=""mb-0 pl-4"">
            
            <li>
              <a href=""#CC-SECTION-01"">Section 01</a>
                <ol class=""mb-0 pl-4"">
                  <li><a href=""#CC-SECTION-01-SUBCC-SECTION-01"">Subsection 01</a></li>
                  <li><a href=""#CC-SECTION-01-SUBCC-SECTION-02"">Subsection 02</a></li>
                  <li><a href=""#CC-SECTION-01-SUBCC-SECTION-03"">Subsection 03</a></li>
                </ol>
            </li>
            
            <li>
              <a href=""#CC-SECTION-02"">Section 02</a>
                <ol class=""mb-0 pl-4"">
                  <li><a href=""#CC-SECTION-02-SUBCC-SECTION-01"">Subsection 01</a></li>
                  <li><a href=""#CC-SECTION-02-SUBCC-SECTION-02"">Subsection 02</a></li>
                  <li><a href=""#CC-SECTION-02-SUBCC-SECTION-03"">Subsection 03</a></li>
                </ol>
            </li>
            
            <li>
              <a href=""#CC-SECTION-03"">Section 03</a>
                <ol class=""mb-0 pl-4"">
                  <li><a href=""#CC-SECTION-03-SUBCC-SECTION-01"">Subsection 01</a></li>
                  <li><a href=""#CC-SECTION-03-SUBCC-SECTION-02"">Subsection 02</a></li>
                  <li><a href=""#CC-SECTION-03-SUBCC-SECTION-03"">Subsection 03</a></li>
                </ol>
            </li>
            
            <li>
              <a href=""#CC-SECTION-04"">Section 04</a>
            </li>
            
            <li>
              <a href=""#CC-SECTION-05"">Section 05</a>
            </li>
            
            <li>
              <a href=""#CC-SECTION-TRIVIA"">Trivia</a>
            </li>
            
          </ol>
        </div> <!--content end-->
        
      </div> <!--collapse content end-->
      
    </div> <!--contents navigation end-->
    
    <!--SECTION 01-->
    <a name=""CC-SECTION-01""></a>
    <h1 class=""pb-2 mt-4 font-weight-bold"" style=""color:#59007e; font-size:20px; border-bottom-width:1px; border-bottom-style:solid; font-family:'Times New Roman',serif;"">Section 01 Header</h1>
    
    <!--LEFT FLOATING IMAGE-->
    <!--Add ""border-0"" after ""card"" if you don't want a border-->
    <div class=""card float-sm-left mr-sm-3 mx-auto mb-3 p-1"" style=""background-color:#f9ebff; color:#976fab; border-width:1.1px; border-style:dotted; border-color:rgba(0,0,0,0.3); font-family:'Calibri',sans-serif; font-size:12.5px; max-width:200px;"">
      <img class=""mb-1"" style=""max-width:250px;"" alt="""" src=""https://f2.toyhou.se/file/f2-toyhou-se/images/27050203_pzmfQQMJnsGZtjX.png"">
      <p class=""text-left"">Caption</p>
    </div> <!--left floating image end-->
    
    <p>Mauris euismod rutrum luctus. Mauris posuere est erat, finibus interdum risus consectetur eget. Quisque risus magna, mollis quis magna vel, fermentum accumsan lectus. Fusce sed turpis pharetra, venenatis justo vitae, eleifend justo. Integer hendrerit tortor vitae vestibulum vestibulum. Ut mauris dolor, dictum vel tincidunt in, euismod sit amet massa. Fusce ut purus eu nulla commodo facilisis et id odio. Maecenas eleifend posuere vulputate. Phasellus vehicula et lorem in efficitur. Donec fringilla mi id nulla porttitor condimentum. Ut egestas condimentum sollicitudin. In ac sem pellentesque, vehicula turpis at, interdum sem. Donec id orci vel magna egestas ullamcorper in eget enim. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec tincidunt neque a lorem viverra, ut aliquam sem sagittis. </p>
    
    <!--SECTION 01 SUBSECTION 01-->
    <a name=""CC-SECTION-01-SUBCC-SECTION-01""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 01, Subsection 01 Header</h3>
    
    <!--RIGHT FLOATING IMAGE-->
    <!--Add ""border-0"" after ""card"" if you don't want a border-->
    <div class=""card float-sm-right ml-sm-3 mx-auto mb-3 p-1"" style=""background-color:#f9ebff; color:#976fab; border-width:1.1px; border-style:dotted; border-color:rgba(0,0,0,0.3); font-family:'Calibri',sans-serif; font-size:12.5px; max-width:200px;"">
      <img class=""mb-1"" style=""max-width:250px;"" alt="""" src=""https://f2.toyhou.se/file/f2-toyhou-se/images/27050203_pzmfQQMJnsGZtjX.png"">
      <p class=""text-left"">Caption</p>
    </div> <!--right floating image end-->
    
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 01 SUBSECTION 02-->
    <a name=""CC-SECTION-01-SUBCC-SECTION-02""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 01, Subsection 02 Header</h3>
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 01 SUBSECTION 02-->
    <a name=""CC-SECTION-01-SUBCC-SECTION-03""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 01, Subsection 03 Header</h3>
    
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 02-->
    <a name=""CC-SECTION-02""></a>
    <h1 class=""pb-2 mt-4 font-weight-bold"" style=""color:#59007e; font-size:20px; border-bottom:1px solid inherit; font-family:'Times New Roman',serif;"">Section 02 Header</h1>
    <p>Mauris euismod rutrum luctus. Mauris posuere est erat, finibus interdum risus consectetur eget. Quisque risus magna, mollis quis magna vel, fermentum accumsan lectus. Fusce sed turpis pharetra, venenatis justo vitae, eleifend justo. Integer hendrerit tortor vitae vestibulum vestibulum. Ut mauris dolor, dictum vel tincidunt in, euismod sit amet massa. Fusce ut purus eu nulla commodo facilisis et id odio. Maecenas eleifend posuere vulputate. Phasellus vehicula et lorem in efficitur. Donec fringilla mi id nulla porttitor condimentum. Ut egestas condimentum sollicitudin. In ac sem pellentesque, vehicula turpis at, interdum sem. Donec id orci vel magna egestas ullamcorper in eget enim. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec tincidunt neque a lorem viverra, ut aliquam sem sagittis. </p>
    
    <!--SECTION 02 SUBSECTION 01-->
    <a name=""CC-SECTION-02-SUBCC-SECTION-01""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 02, Subsection 01 Header</h3>
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 02 SUBSECTION 02-->
    <a name=""CC-SECTION-02-SUBCC-SECTION-02""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 02, Subsection 02 Header</h3>
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 02 SUBSECTION 02-->
    <a name=""CC-SECTION-02-SUBCC-SECTION-03""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 02, Subsection 03 Header</h3>
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 03-->
    <a name=""CC-SECTION-03""></a>
    <h1 class=""pb-2 mt-4 font-weight-bold"" style=""color:#59007e; font-size:20px; border-bottom:1px solid inherit; font-family:'Times New Roman',serif;"">Section 03 Header</h1>
    <p>Mauris euismod rutrum luctus. Mauris posuere est erat, finibus interdum risus consectetur eget. Quisque risus magna, mollis quis magna vel, fermentum accumsan lectus. Fusce sed turpis pharetra, venenatis justo vitae, eleifend justo. Integer hendrerit tortor vitae vestibulum vestibulum. Ut mauris dolor, dictum vel tincidunt in, euismod sit amet massa. Fusce ut purus eu nulla commodo facilisis et id odio. Maecenas eleifend posuere vulputate. Phasellus vehicula et lorem in efficitur. Donec fringilla mi id nulla porttitor condimentum. Ut egestas condimentum sollicitudin. In ac sem pellentesque, vehicula turpis at, interdum sem. Donec id orci vel magna egestas ullamcorper in eget enim. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec tincidunt neque a lorem viverra, ut aliquam sem sagittis. </p>
    
    <!--SECTION 03 SUBSECTION 01-->
    <a name=""CC-SECTION-03-SUBCC-SECTION-01""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 03, Subsection 01 Header</h3>
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 03 SUBSECTION 02-->
    <a name=""CC-SECTION-03-SUBCC-SECTION-02""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 03, Subsection 02 Header</h3>
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION 03 SUBSECTION 02-->
    <a name=""CC-SECTION-03-SUBCC-SECTION-03""></a>
    <h3 class=""mt-4 font-weight-bold"" style=""color:#8f2cb8; font-size:18px; font-family:'Book Antiqua',serif;"">Section 03, Subsection 03 Header</h3>
    <p>Duis id aliquet velit, id maximus lectus. Praesent porttitor interdum ante id mattis. Ut volutpat enim et nisi pulvinar rutrum. Nulla id laoreet sem. Aenean vitae sagittis lacus. Nulla odio felis, malesuada sed efficitur at, accumsan quis enim. Vivamus sed nunc posuere, vestibulum velit nec, posuere mauris. Ut pretium, metus nec porta viverra, purus erat fermentum arcu, ut tristique nisi velit vitae felis. Curabitur lobortis justo a mattis scelerisque. Vivamus viverra nisl id sem congue, sit amet semper nisi rutrum. </p>
    
    <!--SECTION TRIVIA-->
    <a name=""CC-SECTION-TRIVIA""></a>
    <h1 class=""pb-2 mt-4 font-weight-bold"" style=""color:#59007e; font-size:20px; border-bottom:1px solid inherit; font-family:'Times New Roman',serif;"">Trivia Header</h1>
    <ul class=""pl-4"">
      
      <li>
        Mauris euismod rutrum luctus. Mauris posuere est erat, finibus interdum risus consectetur eget. Quisque risus magna, mollis quis magna vel, fermentum accumsan lectus.
        <!--sublist-->
        <ul style=""list-style-type:disc;"">
          <li>Fusce sed turpis pharetra, venenatis justo vitae, eleifend justo.</li>
          <li>Integer hendrerit tortor vitae vestibulum vestibulum.</li>
          <li>Ut mauris dolor, dictum vel tincidunt in, euismod sit amet massa.</li>
        </ul> <!--sublist end-->
      </li>
      
      <li>
        Mauris euismod rutrum luctus. Mauris posuere est erat, finibus interdum risus consectetur eget. Quisque risus magna, mollis quis magna vel, fermentum accumsan lectus.
        <!--sublist-->
        <ul style=""list-style-type:disc;"">
          <li>Fusce sed turpis pharetra, venenatis justo vitae, eleifend justo.</li>
          <li>Integer hendrerit tortor vitae vestibulum vestibulum.</li>
          <li>Ut mauris dolor, dictum vel tincidunt in, euismod sit amet massa.</li>
        </ul> <!--sublist end-->
      </li>
      
      <li>
        Mauris euismod rutrum luctus. Mauris posuere est erat, finibus interdum risus consectetur eget. Quisque risus magna, mollis quis magna vel, fermentum accumsan lectus.
        <!--sublist-->
        <ul style=""list-style-type:disc;"">
          <li>Fusce sed turpis pharetra, venenatis justo vitae, eleifend justo.</li>
          <li>Integer hendrerit tortor vitae vestibulum vestibulum.</li>
          <li>Ut mauris dolor, dictum vel tincidunt in, euismod sit amet massa.</li>
        </ul> <!--sublist end-->
      </li>
      
    </ul> <!--section trivia end-->
    
  </div>
</div>
</div>

<div class=""row no-gutters align-items-center"">
  <div class=""col p-0""><hr class=""m-0""></div>
  <div class=""col-auto p-0"">
    <a class=""btn btn-outline-secondary border-0 py-1 px-2 justify-content-center align-items-center d-inline-block tooltipster"" title=""by Aurorean"" style=""font-size:11px;"" href=""https://toyhou.se/14628199.customizable-wiki""><i class=""fas fa-code""></i></a>
  </div>
  <div class=""col p-0""><hr class=""m-0""></div>
</div>"
hZ1mPLGy,tvoirecepty.ru - Adfox HB config,Luxup,JavaScript,Tuesday 6th of February 2024 12:59:49 AM CDT,"<script>
  const adfoxBiddersMap = {
    'betweenDigital': '871789',
    'buzzoola': '880620',
	'myTarget': 'XXXXX', //вот сюда нужно добавить campaignId, которая была создана для myTarget
  };
  var adUnits = [{
    code: 'adfox_15749465979245021',
    codeType: 'inpage',
    bids: [{
      bidder: 'betweenDigital',
      params: {
        placementId: 3594039,
      }
    }, {
      bidder: 'buzzoola',
      params: {
        placementId: 859964,
      }
    }, ]
  }, {
    code: 'adfox_157493162691229333',
    sizes: [
      [300, 600]
    ],
    bids: [{
      bidder: 'myTarget',
      params: {
        placementId: 653454,
      }
    }, {
      bidder: 'betweenDigital',
      params: {
        placementId: 3594032,
      }
    }, {
      bidder: 'buzzoola',
      params: {
        placementId: 859949,
      }
    }, ]
  }, {
    code: 'adfox_157493172714469841',
    sizes: [
      [240, 400]
    ],
    bids: [{
      bidder: 'myTarget',
      params: {
        placementId: 652978,
      }
    }, {
      bidder: 'betweenDigital',
      params: {
        placementId: 3594033,
      }
    }, {
      bidder: 'buzzoola',
      params: {
        placementId: 859960,
      }
    }, ]
  }, {
    code: 'adfox_157493173979577944',
    sizes: [
      [336, 280],
      [300, 250]
    ],
    bids: [{
      bidder: 'myTarget',
      params: {
        placementId: 653456,
      }
    }, {
      bidder: 'betweenDigital',
      params: {
        placementId: 3594034,
      }
    }, {
      bidder: 'buzzoola',
      params: {
        placementId: 859961,
      }
    }, ]
  }, {
    code: 'adfox_157493174716332858',
    sizes: [
      [336, 280],
      [300, 250]
    ],
    bids: [{
      bidder: 'myTarget',
      params: {
        placementId: 653458,
      }
    }, {
      bidder: 'betweenDigital',
      params: {
        placementId: 3594035,
      }
    }, {
      bidder: 'buzzoola',
      params: {
        placementId: 859962,
      }
    }, ]
  }, {
    code: 'adfox_157493175734858977',
    sizes: [
      [300, 300],
      [300, 250]
    ],
    bids: [{
      bidder: 'myTarget',
      params: {
        placementId: 653460,
      }
    }, {
      bidder: 'betweenDigital',
      params: {
        placementId: 3594038,
      }
    }, {
      bidder: 'buzzoola',
      params: {
        placementId: 859963,
      }
    }, ]
  }, ];
  var userTimeout = 500;
  window.YaHeaderBiddingSettings = {
    biddersMap: adfoxBiddersMap,
    adUnits: adUnits,
    timeout: userTimeout
  };
</script>"
v7qj958J,Nigerian scammers [6-2-1/2024],bombaires,AIMMS,Tuesday 6th of February 2024 12:58:01 AM CDT,"<a href=""mailto:duheongggkim@gmail.com"">duheongggkim@gmail.com</a>
<a href=""mailto:duheo.ngg.g.kim@gmail.com"">duheo.ngg.g.kim@gmail.com</a>
<a href=""mailto:duhe.ongg.g.k.im@gmail.com"">duhe.ongg.g.k.im@gmail.com</a>
<a href=""mailto:du.he.on.g.gg.k.i.m@gmail.com"">du.he.on.g.gg.k.i.m@gmail.com</a>
<a href=""mailto:du.he.on.gggki.m@gmail.com"">du.he.on.gggki.m@gmail.com</a>
<a href=""mailto:d.uh.eonggg.kim@gmail.com"">d.uh.eonggg.kim@gmail.com</a>
<a href=""mailto:d.u.h.eon.g.gg.kim@gmail.com"">d.u.h.eon.g.gg.kim@gmail.com</a>
<a href=""mailto:du.h.eo.ngggk.i.m@gmail.com"">du.h.eo.ngggk.i.m@gmail.com</a>
<a href=""mailto:d.uh.e.o.n.gggkim@gmail.com"">d.uh.e.o.n.gggkim@gmail.com</a>
<a href=""mailto:d.u.heong.g.gk.im@gmail.com"">d.u.heong.g.gk.im@gmail.com</a>
<a href=""mailto:d.uhe.on.gggk.i.m@gmail.com"">d.uhe.on.gggk.i.m@gmail.com</a>
<a href=""mailto:d.u.heon.ggg.k.i.m@gmail.com"">d.u.heon.ggg.k.i.m@gmail.com</a>
<a href=""mailto:duheongggkim@gmail.com"">duheongggkim@gmail.com</a>
<a href=""mailto:duh.e.o.ngg.g.ki.m@gmail.com"">duh.e.o.ngg.g.ki.m@gmail.com</a>
<a href=""mailto:du.h.e.o.ng.gg.k.im@gmail.com"">du.h.e.o.ng.gg.k.im@gmail.com</a>
<a href=""mailto:du.h.e.ong.ggk.im@gmail.com"">du.h.e.ong.ggk.im@gmail.com</a>
<a href=""mailto:d.uhe.ongg.gkim@gmail.com"">d.uhe.ongg.gkim@gmail.com</a>
<a href=""mailto:du.h.eongg.g.k.im@gmail.com"">du.h.eongg.g.k.im@gmail.com</a>
<a href=""mailto:du.heonggg.k.im@gmail.com"">du.heonggg.k.im@gmail.com</a>
<a href=""mailto:d.uh.eo.n.ggg.k.i.m@gmail.com"">d.uh.eo.n.ggg.k.i.m@gmail.com</a>
<a href=""mailto:d.uheo.n.g.gg.kim@gmail.com"">d.uheo.n.g.gg.kim@gmail.com</a>
<a href=""mailto:d.u.h.eo.n.ggg.k.im@gmail.com"">d.u.h.eo.n.ggg.k.im@gmail.com</a>
<a href=""mailto:d.uheongg.gkim@gmail.com"">d.uheongg.gkim@gmail.com</a>
<a href=""mailto:du.heo.ngggk.i.m@gmail.com"">du.heo.ngggk.i.m@gmail.com</a>
<a href=""mailto:du.h.eo.n.gg.gk.im@gmail.com"">du.h.eo.n.gg.gk.im@gmail.com</a>
<a href=""mailto:d.u.h.eo.n.gggki.m@gmail.com"">d.u.h.eo.n.gggki.m@gmail.com</a>
<a href=""mailto:d.u.he.onggg.kim@gmail.com"">d.u.he.onggg.kim@gmail.com</a>
<a href=""mailto:d.u.h.e.on.g.g.gkim@gmail.com"">d.u.h.e.on.g.g.gkim@gmail.com</a>
<a href=""mailto:d.u.heong.g.gk.i.m@gmail.com"">d.u.heong.g.gk.i.m@gmail.com</a>
<a href=""mailto:duh.eo.n.ggg.k.i.m@gmail.com"">duh.eo.n.ggg.k.i.m@gmail.com</a>
<a href=""mailto:duheo.ng.g.gk.i.m@gmail.com"">duheo.ng.g.gk.i.m@gmail.com</a>
<a href=""mailto:du.h.e.o.ng.g.g.kim@gmail.com"">du.h.e.o.ng.g.g.kim@gmail.com</a>
<a href=""mailto:duheongg.gk.im@gmail.com"">duheongg.gk.im@gmail.com</a>
<a href=""mailto:d.u.he.on.gg.g.ki.m@gmail.com"">d.u.he.on.gg.g.ki.m@gmail.com</a>
<a href=""mailto:duh.e.ong.ggk.im@gmail.com"">duh.e.ong.ggk.im@gmail.com</a>
<a href=""mailto:d.uh.eo.n.g.ggkim@gmail.com"">d.uh.eo.n.g.ggkim@gmail.com</a>
<a href=""mailto:d.uheo.ng.g.g.k.i.m@gmail.com"">d.uheo.ng.g.g.k.i.m@gmail.com</a>
<a href=""mailto:d.u.he.o.n.g.gg.kim@gmail.com"">d.u.he.o.n.g.gg.kim@gmail.com</a>
<a href=""mailto:duheong.ggkim@gmail.com"">duheong.ggkim@gmail.com</a>
<a href=""mailto:du.h.e.on.g.g.g.ki.m@gmail.com"">du.h.e.on.g.g.g.ki.m@gmail.com</a>
<a href=""mailto:duh.eo.n.g.g.g.k.im@gmail.com"">duh.eo.n.g.g.g.k.im@gmail.com</a>
<a href=""mailto:du.he.o.ngggk.im@gmail.com"">du.he.o.ngggk.im@gmail.com</a>
<a href=""mailto:duh.e.o.nggg.k.i.m@gmail.com"">duh.e.o.nggg.k.i.m@gmail.com</a>
<a href=""mailto:du.he.o.n.g.gg.ki.m@gmail.com"">du.he.o.n.g.gg.ki.m@gmail.com</a>
<a href=""mailto:d.u.heo.ng.g.g.k.i.m@gmail.com"">d.u.heo.ng.g.g.k.i.m@gmail.com</a>
<a href=""mailto:d.u.heong.gg.ki.m@gmail.com"">d.u.heong.gg.ki.m@gmail.com</a>
<a href=""mailto:d.u.he.o.n.gg.gk.i.m@gmail.com"">d.u.he.o.n.gg.gk.i.m@gmail.com</a>
<a href=""mailto:duh.eo.n.g.gg.kim@gmail.com"">duh.eo.n.g.gg.kim@gmail.com</a>
<a href=""mailto:d.uh.e.o.n.g.g.g.kim@gmail.com"">d.uh.e.o.n.g.g.g.kim@gmail.com</a>
<a href=""mailto:duhe.on.g.gg.kim@gmail.com"">duhe.on.g.gg.kim@gmail.com</a>
<a href=""mailto:d.u.heo.n.g.gg.k.im@gmail.com"">d.u.heo.n.g.gg.k.im@gmail.com</a>
<a href=""mailto:d.uh.e.o.ng.g.gk.im@gmail.com"">d.uh.e.o.ng.g.gk.im@gmail.com</a>
<a href=""mailto:d.uhe.on.g.ggkim@gmail.com"">d.uhe.on.g.ggkim@gmail.com</a>
<a href=""mailto:d.u.heo.n.g.g.gkim@gmail.com"">d.u.heo.n.g.g.gkim@gmail.com</a>
<a href=""mailto:d.uheongg.g.kim@gmail.com"">d.uheongg.g.kim@gmail.com</a>
<a href=""mailto:d.uh.eo.n.g.g.gkim@gmail.com"">d.uh.eo.n.g.g.gkim@gmail.com</a>
<a href=""mailto:duhe.on.ggg.k.im@gmail.com"">duhe.on.ggg.k.im@gmail.com</a>
<a href=""mailto:duh.e.on.g.ggk.im@gmail.com"">duh.e.on.g.ggk.im@gmail.com</a>
<a href=""mailto:du.heo.nggg.k.im@gmail.com"">du.heo.nggg.k.im@gmail.com</a>
<a href=""mailto:du.h.eon.gg.gk.i.m@gmail.com"">du.h.eon.gg.gk.i.m@gmail.com</a>
<a href=""mailto:duh.e.o.ngg.gkim@gmail.com"">duh.e.o.ngg.gkim@gmail.com</a>
<a href=""mailto:du.h.eongg.gkim@gmail.com"">du.h.eongg.gkim@gmail.com</a>
<a href=""mailto:du.he.o.n.gg.g.ki.m@gmail.com"">du.he.o.n.gg.g.ki.m@gmail.com</a>
<a href=""mailto:duheo.n.g.ggk.i.m@gmail.com"">duheo.n.g.ggk.i.m@gmail.com</a>
<a href=""mailto:d.u.heon.gg.g.k.i.m@gmail.com"">d.u.heon.gg.g.k.i.m@gmail.com</a>
<a href=""mailto:d.u.h.eon.ggg.kim@gmail.com"">d.u.h.eon.ggg.kim@gmail.com</a>
<a href=""mailto:d.uh.e.ongg.g.kim@gmail.com"">d.uh.e.ongg.g.kim@gmail.com</a>
<a href=""mailto:d.uh.e.ongggk.im@gmail.com"">d.uh.e.ongggk.im@gmail.com</a>
<a href=""mailto:du.heo.n.g.ggkim@gmail.com"">du.heo.n.g.ggkim@gmail.com</a>
<a href=""mailto:du.he.o.ng.g.g.k.im@gmail.com"">du.he.o.ng.g.g.k.im@gmail.com</a>
<a href=""mailto:du.heo.ng.g.gk.im@gmail.com"">du.heo.ng.g.gk.im@gmail.com</a>
<a href=""mailto:du.heon.g.g.g.k.i.m@gmail.com"">du.heon.g.g.g.k.i.m@gmail.com</a>
<a href=""mailto:d.u.h.e.ongggk.im@gmail.com"">d.u.h.e.ongggk.im@gmail.com</a>
<a href=""mailto:duhe.o.n.g.ggk.im@gmail.com"">duhe.o.n.g.ggk.im@gmail.com</a>
<a href=""mailto:d.u.h.e.o.n.g.g.gki.m@gmail.com"">d.u.h.e.o.n.g.g.gki.m@gmail.com</a>
<a href=""mailto:d.uh.e.o.n.gg.gkim@gmail.com"">d.uh.e.o.n.gg.gkim@gmail.com</a>
<a href=""mailto:d.u.h.e.o.nggg.ki.m@gmail.com"">d.u.h.e.o.nggg.ki.m@gmail.com</a>
<a href=""mailto:du.heon.g.g.gkim@gmail.com"">du.heon.g.g.gkim@gmail.com</a>
<a href=""mailto:duh.eo.n.gg.gk.i.m@gmail.com"">duh.eo.n.gg.gk.i.m@gmail.com</a>
<a href=""mailto:duheon.g.g.gk.im@gmail.com"">duheon.g.g.gk.im@gmail.com</a>
<a href=""mailto:du.heo.ngggkim@gmail.com"">du.heo.ngggkim@gmail.com</a>
<a href=""mailto:du.he.on.gggk.i.m@gmail.com"">du.he.on.gggk.i.m@gmail.com</a>
<a href=""mailto:du.heo.n.g.g.g.k.im@gmail.com"">du.heo.n.g.g.g.k.im@gmail.com</a>
<a href=""mailto:d.u.h.eon.g.g.gkim@gmail.com"">d.u.h.eon.g.g.gkim@gmail.com</a>
<a href=""mailto:duh.eo.n.g.ggki.m@gmail.com"">duh.eo.n.g.ggki.m@gmail.com</a>
<a href=""mailto:du.he.ong.gg.k.i.m@gmail.com"">du.he.ong.gg.k.i.m@gmail.com</a>
<a href=""mailto:d.u.he.o.n.g.gg.k.im@gmail.com"">d.u.he.o.n.g.gg.k.im@gmail.com</a>
<a href=""mailto:d.uh.eon.ggg.kim@gmail.com"">d.uh.eon.ggg.kim@gmail.com</a>
<a href=""mailto:d.uh.e.on.g.ggk.im@gmail.com"">d.uh.e.on.g.ggk.im@gmail.com</a>
<a href=""mailto:duheo.ngggkim@gmail.com"">duheo.ngggkim@gmail.com</a>
<a href=""mailto:duh.e.o.n.ggg.k.i.m@gmail.com"">duh.e.o.n.ggg.k.i.m@gmail.com</a>
<a href=""mailto:d.uh.eon.g.gg.k.i.m@gmail.com"">d.uh.eon.g.gg.k.i.m@gmail.com</a>
<a href=""mailto:d.uh.e.ongg.g.k.im@gmail.com"">d.uh.e.ongg.g.k.im@gmail.com</a>
<a href=""mailto:d.u.he.o.ngggk.i.m@gmail.com"">d.u.he.o.ngggk.i.m@gmail.com</a>
<a href=""mailto:du.h.e.on.gggk.im@gmail.com"">du.h.e.on.gggk.im@gmail.com</a>
<a href=""mailto:d.uhe.o.n.g.ggk.im@gmail.com"">d.uhe.o.n.g.ggk.im@gmail.com</a>
<a href=""mailto:d.u.h.e.o.ng.gg.k.im@gmail.com"">d.u.h.e.o.ng.gg.k.im@gmail.com</a>
<a href=""mailto:d.uhe.on.g.g.gkim@gmail.com"">d.uhe.on.g.g.gkim@gmail.com</a>
<a href=""mailto:duh.e.ongggki.m@gmail.com"">duh.e.ongggki.m@gmail.com</a>
<a href=""mailto:duhe.on.gg.g.kim@gmail.com"">duhe.on.gg.g.kim@gmail.com</a>
<a href=""mailto:d.u.h.e.on.g.gg.k.im@gmail.com"">d.u.h.e.on.g.gg.k.im@gmail.com</a>
<a href=""mailto:du.he.on.g.g.g.kim@gmail.com"">du.he.on.g.g.g.kim@gmail.com</a>
<a href=""mailto:du.heongg.g.k.im@gmail.com"">du.heongg.g.k.im@gmail.com</a>
<a href=""mailto:du.he.o.n.g.g.g.k.im@gmail.com"">du.he.o.n.g.g.g.k.im@gmail.com</a>
<a href=""mailto:duheo.ng.g.g.k.im@gmail.com"">duheo.ng.g.g.k.im@gmail.com</a>
<a href=""mailto:d.u.heon.gg.gk.i.m@gmail.com"">d.u.heon.gg.gk.i.m@gmail.com</a>
<a href=""mailto:du.h.e.on.g.ggk.i.m@gmail.com"">du.h.e.on.g.ggk.i.m@gmail.com</a>
<a href=""mailto:d.uh.e.o.n.gg.gk.im@gmail.com"">d.uh.e.o.n.gg.gk.im@gmail.com</a>
<a href=""mailto:du.h.eong.g.gk.im@gmail.com"">du.h.eong.g.gk.im@gmail.com</a>
<a href=""mailto:du.h.eo.ngg.g.k.i.m@gmail.com"">du.h.eo.ngg.g.k.i.m@gmail.com</a>
<a href=""mailto:d.u.h.eo.n.gg.gk.i.m@gmail.com"">d.u.h.eo.n.gg.gk.i.m@gmail.com</a>
<a href=""mailto:duhe.o.ng.ggk.i.m@gmail.com"">duhe.o.ng.ggk.i.m@gmail.com</a>
<a href=""mailto:duh.e.o.n.g.g.g.kim@gmail.com"">duh.e.o.n.g.g.g.kim@gmail.com</a>
<a href=""mailto:du.h.e.onggg.k.i.m@gmail.com"">du.h.e.onggg.k.i.m@gmail.com</a>
<a href=""mailto:du.h.e.o.ng.g.gkim@gmail.com"">du.h.e.o.ng.g.gkim@gmail.com</a>
<a href=""mailto:d.u.heo.ngg.gk.im@gmail.com"">d.u.heo.ngg.gk.im@gmail.com</a>
<a href=""mailto:d.uheon.ggg.ki.m@gmail.com"">d.uheon.ggg.ki.m@gmail.com</a>
<a href=""mailto:du.h.eon.gg.gkim@gmail.com"">du.h.eon.gg.gkim@gmail.com</a>
<a href=""mailto:du.heo.n.g.gg.ki.m@gmail.com"">du.heo.n.g.gg.ki.m@gmail.com</a>
<a href=""mailto:d.uhe.o.n.g.gg.k.i.m@gmail.com"">d.uhe.o.n.g.gg.k.i.m@gmail.com</a>
<a href=""mailto:duh.eongggki.m@gmail.com"">duh.eongggki.m@gmail.com</a>
<a href=""mailto:d.u.heong.g.g.ki.m@gmail.com"">d.u.heong.g.g.ki.m@gmail.com</a>
<a href=""mailto:d.uh.eo.ngg.gkim@gmail.com"">d.uh.eo.ngg.gkim@gmail.com</a>
<a href=""mailto:d.u.h.e.o.n.gggk.i.m@gmail.com"">d.u.h.e.o.n.gggk.i.m@gmail.com</a>
<a href=""mailto:d.uh.eo.n.gg.g.k.i.m@gmail.com"">d.uh.eo.n.gg.g.k.i.m@gmail.com</a>
<a href=""mailto:du.heo.n.gggk.i.m@gmail.com"">du.heo.n.gggk.i.m@gmail.com</a>
<a href=""mailto:d.u.he.o.n.g.g.gk.i.m@gmail.com"">d.u.he.o.n.g.g.gk.i.m@gmail.com</a>
<a href=""mailto:d.uh.eongggkim@gmail.com"">d.uh.eongggkim@gmail.com</a>
<a href=""mailto:d.u.h.e.o.ngg.gkim@gmail.com"">d.u.h.e.o.ngg.gkim@gmail.com</a>
<a href=""mailto:du.he.o.n.g.ggk.i.m@gmail.com"">du.he.o.n.g.ggk.i.m@gmail.com</a>
<a href=""mailto:du.h.e.on.g.ggki.m@gmail.com"">du.h.e.on.g.ggki.m@gmail.com</a>
<a href=""mailto:d.uheon.g.gg.k.im@gmail.com"">d.uheon.g.gg.k.im@gmail.com</a>
<a href=""mailto:d.uh.eongg.gk.i.m@gmail.com"">d.uh.eongg.gk.i.m@gmail.com</a>
<a href=""mailto:du.he.o.n.gg.g.k.im@gmail.com"">du.he.o.n.gg.g.k.im@gmail.com</a>
<a href=""mailto:duh.eo.n.gggki.m@gmail.com"">duh.eo.n.gggki.m@gmail.com</a>
<a href=""mailto:du.h.e.ong.gg.kim@gmail.com"">du.h.e.ong.gg.kim@gmail.com</a>
<a href=""mailto:d.uhe.o.n.gg.g.ki.m@gmail.com"">d.uhe.o.n.gg.g.ki.m@gmail.com</a>
<a href=""mailto:d.uh.e.on.g.g.gk.i.m@gmail.com"">d.uh.e.on.g.g.gk.i.m@gmail.com</a>
<a href=""mailto:d.u.h.eonggg.k.i.m@gmail.com"">d.u.h.eonggg.k.i.m@gmail.com</a>
<a href=""mailto:du.heong.gg.ki.m@gmail.com"">du.heong.gg.ki.m@gmail.com</a>
<a href=""mailto:d.u.heon.g.g.gki.m@gmail.com"">d.u.heon.g.g.gki.m@gmail.com</a>
<a href=""mailto:duh.e.o.ngggkim@gmail.com"">duh.e.o.ngggkim@gmail.com</a>
<a href=""mailto:du.he.o.n.g.gg.k.i.m@gmail.com"">du.he.o.n.g.gg.k.i.m@gmail.com</a>
<a href=""mailto:duhe.o.n.g.ggki.m@gmail.com"">duhe.o.n.g.ggki.m@gmail.com</a>
<a href=""mailto:d.u.heongg.g.k.im@gmail.com"">d.u.heongg.g.k.im@gmail.com</a>
<a href=""mailto:d.u.he.o.ng.g.g.ki.m@gmail.com"">d.u.he.o.ng.g.g.ki.m@gmail.com</a>
<a href=""mailto:d.uhe.ong.gg.kim@gmail.com"">d.uhe.ong.gg.kim@gmail.com</a>
<a href=""mailto:du.h.eo.ngg.gk.im@gmail.com"">du.h.eo.ngg.gk.im@gmail.com</a>
<a href=""mailto:duh.eo.n.ggg.k.im@gmail.com"">duh.eo.n.ggg.k.im@gmail.com</a>
<a href=""mailto:d.u.h.e.o.n.gg.g.k.i.m@gmail.com"">d.u.h.e.o.n.gg.g.k.i.m@gmail.com</a>
<a href=""mailto:d.u.h.eo.n.g.gg.kim@gmail.com"">d.u.h.eo.n.g.gg.kim@gmail.com</a>
<a href=""mailto:du.h.eong.gg.ki.m@gmail.com"">du.h.eong.gg.ki.m@gmail.com</a>
<a href=""mailto:duhe.ong.gg.k.i.m@gmail.com"">duhe.ong.gg.k.i.m@gmail.com</a>
<a href=""mailto:du.h.eon.g.g.gkim@gmail.com"">du.h.eon.g.g.gkim@gmail.com</a>
<a href=""mailto:d.uheo.n.gg.g.k.im@gmail.com"">d.uheo.n.gg.g.k.im@gmail.com</a>
<a href=""mailto:duheo.ng.gg.k.i.m@gmail.com"">duheo.ng.gg.k.i.m@gmail.com</a>
<a href=""mailto:du.h.eong.ggk.i.m@gmail.com"">du.h.eong.ggk.i.m@gmail.com</a>
<a href=""mailto:d.u.h.e.on.g.g.g.ki.m@gmail.com"">d.u.h.e.on.g.g.g.ki.m@gmail.com</a>
<a href=""mailto:d.uh.eon.gg.g.k.im@gmail.com"">d.uh.eon.gg.g.k.im@gmail.com</a>
<a href=""mailto:d.u.he.ongg.g.kim@gmail.com"">d.u.he.ongg.g.kim@gmail.com</a>
<a href=""mailto:duheo.ng.g.g.ki.m@gmail.com"">duheo.ng.g.g.ki.m@gmail.com</a>
<a href=""mailto:duh.e.on.g.gg.kim@gmail.com"">duh.e.on.g.gg.kim@gmail.com</a>
<a href=""mailto:du.h.e.o.nggg.ki.m@gmail.com"">du.h.e.o.nggg.ki.m@gmail.com</a>
<a href=""mailto:du.he.o.n.ggg.ki.m@gmail.com"">du.he.o.n.ggg.ki.m@gmail.com</a>
<a href=""mailto:duh.eo.n.gg.gk.im@gmail.com"">duh.eo.n.gg.gk.im@gmail.com</a>
<a href=""mailto:du.h.e.o.ngg.g.kim@gmail.com"">du.h.e.o.ngg.g.kim@gmail.com</a>
<a href=""mailto:d.u.h.eong.g.g.ki.m@gmail.com"">d.u.h.eong.g.g.ki.m@gmail.com</a>
<a href=""mailto:duh.eo.n.gg.g.ki.m@gmail.com"">duh.eo.n.gg.g.ki.m@gmail.com</a>
<a href=""mailto:d.u.he.o.n.gg.g.k.im@gmail.com"">d.u.he.o.n.gg.g.k.im@gmail.com</a>
<a href=""mailto:d.u.heongg.gki.m@gmail.com"">d.u.heongg.gki.m@gmail.com</a>
<a href=""mailto:d.u.he.o.ng.gg.ki.m@gmail.com"">d.u.he.o.ng.gg.ki.m@gmail.com</a>
<a href=""mailto:du.h.eon.g.g.gk.i.m@gmail.com"">du.h.eon.g.g.gk.i.m@gmail.com</a>
<a href=""mailto:du.h.e.o.n.g.ggk.im@gmail.com"">du.h.e.o.n.g.ggk.im@gmail.com</a>
<a href=""mailto:du.h.e.o.ngggkim@gmail.com"">du.h.e.o.ngggkim@gmail.com</a>
<a href=""mailto:d.uh.e.o.ngg.gk.i.m@gmail.com"">d.uh.e.o.ngg.gk.i.m@gmail.com</a>
<a href=""mailto:duh.e.ongg.gk.i.m@gmail.com"">duh.e.ongg.gk.i.m@gmail.com</a>
<a href=""mailto:d.u.heo.n.g.ggki.m@gmail.com"">d.u.heo.n.g.ggki.m@gmail.com</a>
<a href=""mailto:du.heo.ng.g.gk.i.m@gmail.com"">du.heo.ng.g.gk.i.m@gmail.com</a>
<a href=""mailto:d.u.he.on.g.gg.ki.m@gmail.com"">d.u.he.on.g.gg.ki.m@gmail.com</a>
<a href=""mailto:duh.e.ong.g.g.k.i.m@gmail.com"">duh.e.ong.g.g.k.i.m@gmail.com</a>
<a href=""mailto:d.u.heon.ggg.k.im@gmail.com"">d.u.heon.ggg.k.im@gmail.com</a>
<a href=""mailto:duhe.onggg.k.im@gmail.com"">duhe.onggg.k.im@gmail.com</a>
<a href=""mailto:du.he.o.ng.ggk.i.m@gmail.com"">du.he.o.ng.ggk.i.m@gmail.com</a>
<a href=""mailto:du.h.e.o.nggg.kim@gmail.com"">du.h.e.o.nggg.kim@gmail.com</a>
<a href=""mailto:du.h.e.o.ngg.gk.im@gmail.com"">du.h.e.o.ngg.gk.im@gmail.com</a>
<a href=""mailto:du.h.eo.ng.g.gkim@gmail.com"">du.h.eo.ng.g.gkim@gmail.com</a>
<a href=""mailto:du.h.e.on.g.g.g.kim@gmail.com"">du.h.e.on.g.g.g.kim@gmail.com</a>
<a href=""mailto:duh.eon.ggg.ki.m@gmail.com"">duh.eon.ggg.ki.m@gmail.com</a>
<a href=""mailto:duh.e.o.n.gg.gk.i.m@gmail.com"">duh.e.o.n.gg.gk.i.m@gmail.com</a>
<a href=""mailto:duhe.ong.g.gk.i.m@gmail.com"">duhe.ong.g.gk.i.m@gmail.com</a>
<a href=""mailto:d.u.h.e.on.ggg.k.i.m@gmail.com"">d.u.h.e.on.ggg.k.i.m@gmail.com</a>
<a href=""mailto:d.uheon.g.gg.k.i.m@gmail.com"">d.uheon.g.gg.k.i.m@gmail.com</a>
<a href=""mailto:du.h.eo.ng.g.g.k.i.m@gmail.com"">du.h.eo.ng.g.g.k.i.m@gmail.com</a>
<a href=""mailto:d.uhe.o.n.gggki.m@gmail.com"">d.uhe.o.n.gggki.m@gmail.com</a>
<a href=""mailto:duh.eong.gg.k.im@gmail.com"">duh.eong.gg.k.im@gmail.com</a>
<a href=""mailto:du.he.o.n.gggki.m@gmail.com"">du.he.o.n.gggki.m@gmail.com</a>
<a href=""mailto:d.uheong.g.g.kim@gmail.com"">d.uheong.g.g.kim@gmail.com</a>
<a href=""mailto:du.h.e.o.ng.ggk.i.m@gmail.com"">du.h.e.o.ng.ggk.i.m@gmail.com</a>
<a href=""mailto:du.he.on.ggg.kim@gmail.com"">du.he.on.ggg.kim@gmail.com</a>
<a href=""mailto:duheo.n.g.g.gk.im@gmail.com"">duheo.n.g.g.gk.im@gmail.com</a>
<a href=""mailto:du.he.on.gg.gkim@gmail.com"">du.he.on.gg.gkim@gmail.com</a>"
Gn4Nx6Ze,Anime Last Stand Script 2024,Artani,Lua,Tuesday 6th of February 2024 12:14:45 AM CDT,"https://artanisrbx.com/anime-last-stand-script-pastebin-2024-working-free-gems/
ANIME LAST STAND SCRIPT PASTEBIN 2024
PUT LINK INTO BROWSER FOR SCRIPT! BRAND NEW FREE GEMS! WORKING ALL EXECUTORS RN"
yLWJU4J2,arabic101layout.ahk,jcunews,Autohotkey,Monday 5th of February 2024 11:44:49 PM CDT,";Arabic (101) keyboard layout for U.S. (QWERTY) keyboards.
;
;Version 1.0.1. For AutoHotkey v1 Unicode version only.
;https://pastebin.com/u/jcunews
;https://www.reddit.com/user/jcunews1
;
;Layout image: https://upload.wikimedia.org/wikipedia/commons/a/af/KB_Arabic.svg
;
;This script is for users whose system not yet have Arabic keyboard layout,
;and the users do not have access to add built in keyboard layouts.
;Use the ScrollLock key activate/deactivate (follows the ScrollLock LED).

#persistent

if (!a_isunicode) {
  msgbox This script requires Unicode version of AutoHotkey v1.
  exitapp
}
map:= {""'"": [""0637"", ""0651""]
  , "","": [""0648"", "",""]
  , ""."": [""0632"", "".""]
  , ""/"": [""0638"", ""061F""]
  , "";"": [""0643"", "":""]
  , ""["": [""062C"", ""<""]
  , ""\"": [""0630"", ""|""]
  , ""]"": [""062F"", "">""]
  , ""``"": [""0630"", ""0651""]
  , ""A"": [""0634"", ""0650""]
  , ""B"": [""06440627"", ""06440622""]
  , ""C"": [""0624"", ""0650""]
  , ""D"": [""064A"", ""]""]
  , ""E"": [""062B"", ""064F""]
  , ""F"": [""0628"", ""[""]
  , ""G"": [""0644"", ""06440623""]
  , ""H"": [""0627"", ""0623""]
  , ""I"": [""0647"", ""00F7""]
  , ""J"": [""062A"", ""0640""]
  , ""K"": [""0646"", ""060C""]
  , ""L"": [""0645"", ""/""]
  , ""M"": [""0629"", ""2019""]
  , ""N"": [""0649"", ""0622""]
  , ""O"": [""062E"", ""00D7""]
  , ""P"": [""062D"", ""061B""]
  , ""Q"": [""0636"", ""064E""]
  , ""R"": [""0642"", ""064C""]
  , ""S"": [""0633"", ""064D""]
  , ""T"": [""0641"", ""06440625""]
  , ""U"": [""0639"", ""2018""]
  , ""V"": [""0631"", ""064D""]
  , ""W"": [""0635"", ""064B""]
  , ""X"": [""0621"", ""0652""]
  , ""Y"": [""063A"", ""0625""]
  , ""Z"": [""0626"", ""~""]}
for k, v in map {
  loop 2 {
    if (strlen(v[a_index]) == 4) {
      v[a_index]:= chr(""0x"" v[a_index])
    } else if (strlen(v[a_index]) == 8) {
      v[a_index]:= chr(""0x"" substr(v[a_index], 1, 4)) chr(""0x"" substr(v[a_index], 5))
    }
  }
}
if (getkeystate(""scrolllock"", ""t""))
  check()
return

check() {
  global map
  if (getkeystate(""scrolllock"", ""t"")) {
    for k, v in map {
      hotkey, %k%, handler
      hotkey, +%k%, handler
    }
  } else {
    for k, v in map {
      hotkey, %k%, off
      hotkey, +%k%, off
    }
  }
}

~scrolllock::
keywait scrolllock
check()
return

handler:
i:= getkeystate(""capslock"", ""t"") ^ (substr(a_thishotkey, 1, 1) == ""+"")
send % map[substr(a_thishotkey, 0)][i + 1]
return
"
Rk8ay61y,part b,stormman,Python,Monday 5th of February 2024 11:36:10 PM CDT,"# PART B STEP 1: WRITE YOUR CODE BELOW

#prompting user to input a 10-digit faxnumber 
fax_num = int(input('Enter a 10-digit number: '))

#getting the area code/prefix/line number using // and %
area_code = int(fax_num // 1000000) #Using // to avoid decimal point

#using // to get the first six digits and % to get the last three
prefix = int((fax_num // 10000) % 1000)
line_num = int(fax_num % 10000) #using % to get the last four digits

#output
print (f'Your fax number is: ({area_code})-{prefix}-{line_num}')"
vW5fX4y7,Big_Chop,JW4L13,Lua,Monday 5th of February 2024 10:45:34 PM CDT,"function chop()
    k = 0
    turtle.dig()
    turtle.forward()
    while turtle.detectUp() do
        k = k + 1
        turtle.turnRight()
        turtle.dig()
        for i = 1, 2, 1 do
            turtle.turnLeft()
            turtle.dig()
        end
        turtle.forward()
        turtle.turnRight()
        turtle.turnRight()
        turtle.digUp()
        turtle.up()
    end
    turtle.turnRight()
    turtle.dig()
    for i = 1, 2, 1 do
        turtle.turnLeft()
        turtle.dig()
    end
    turtle.forward()
    turtle.turnRight()
    turtle.turnRight()
    for i = 1, k, 1 do
        turtle.down()
    end
end

function setup()
    key = ""minecraft:spruce_log""
end

function main()
    setup()
    while true do
        success, block = turtle.inspect()
        if success and block.name == key then
            chop()
        end
        os.sleep(5)
    end
end

main()"
chX5KH4D,MaxMNEco @pos4you  https://t.me/c/1594165489/1178,jiraff537,Bash,Monday 5th of February 2024 10:22:59 PM CDT,"after https://t.me/c/1594165489/1177

Не поленился и прояснил каждое ваше замечание  
.0 ""вы уже получили то, за чем пришли""
    -Еще не получил я за йогой -  я на пути :)
.1 ""Вам нужно было заявить о себе, и вы это сделали""
     -Ваше предположение о цели ""заявить о себе""  ошибочно я в хорошем настроении дал ответ на несколько реакций на ответы на заданный мной вопрос выше.
.2 ""Вы искали общение, и вы его нашли.""
     -Да было приятно получить на вопрос несколько подробных и теплых ответов.
.3 ""А если вы действительно ищете знаний и не лукавите, то перестаньте мерить всех  относительно собственного эго, одевать разноцветные штаны на мастеров и учеников, ""
     -Про знания и лукавство не ясно - знание что взять с собой на первое занятие я получил и благодарен ответившим; перечитайте сообщения я ни к кому меру не прикладывал да и тешить эго не мой путь 
(Я думаю юмор и самоирония над собой не менее и не более вас задели - я не понят вами - бывает;)

before https://t.me/c/1594165489/1180

"
0UNbQM8W,nautinix 2,nirajs,Python,Monday 5th of February 2024 10:21:04 PM CDT,"'''
nums = [1,2,3,1]
output : 2

[1,2,3,1] ->  2
[1,1,1,1] -> -1

[1,2,3,4,5,[6],3,4,[8],3,1,2,3,4]

-> 4, 8 ... 7



'''



def findPeakElement(nums) -> int:
    
    lo, hi = 0, len(nums) - 1
    
    while (lo <= hi):
        mid = (lo + hi) // 2
        print(""mid"", mid)
        # 2 1 .....
        if (mid == 0 and nums[mid] > nums[mid + 1]):
            return mid
        
        # else:
        #     return -1
         
        # ...... 1 2    
        if (mid == len(nums)- 1) and nums[mid] > nums[mid-1]:
            return mid
            
        # else:
        #     return -1
            
        # .... 3 5  1  ..    
        if (nums[mid-1] < nums[mid] > nums[mid+1]):
            return mid
            
        # go towards left
        if (nums[mid-1] > nums[mid]):
            hi = mid - 1
        
        else:
            lo = mid + 1
            
    return -1
    
nums = [1,2,3,4]  
""""""
4 
lo = 0 -> 1
hi = 3.   3

mid -> 1 -> 2
""""""
print(findPeakElement(nums))
            
            
        
            
             
        "
4jMJ7UTn,nutanix 1,nirajs,Python,Monday 5th of February 2024 10:20:53 PM CDT,"'''
Given a string s, find the length of the longest substring without repeating characters.
Input: s = ""abcabcbb""
Output: 3



left pointer  0
right pointer 0

expand right pointer till we can make substring with non repeating 

abcabcbb

left =  0
right = 0

hashmap -> (a 1,b 1,c 1)
abcabcbb
3

a | bc | a

bacabc
left = 2
right = 4

left
right 

I try to maximize window  by exapnding right pointers toward right

shrink by increamsing left


'''


from collections import defaultdict

def longestSubstring(s) -> int:
    freqCount = defaultdict(int)
        
    left = 0
    maxSubstring = 0
    for right in range(len(s)):
        c = s[right]
        
        # shrink
        while (freqCount[c] > 0):
            freqCount[s[left]] -=1
            left += 1
            
        freqCount[c] += 1
        maxSubstring = max(maxSubstring, right - left + 1)
        
    
    return maxSubstring
    
s = ""aaaaa""
print(longestSubstring(s))
        
        
        
    
    
        










"
MZEFPZmu,TestEnch,LiePyron,Lua,Monday 5th of February 2024 09:50:53 PM CDT,"function turtleService(ench,t) --PORCO DIOOOOOOOOOOOOOOOOOOOOOOOOOO
    for i = 1,#t do
        if t[i][1].displayName == ench then
            chest.pushItems(peripheral.getName(chestOut),t[i][2])
        end
    end
        if chestCheck.getItemDetail(1) ~= nil then 
            print(""OhMygos"")
           -- while chestCheck.getItemDetail(1) ~= nil do 
           --      redstone.setOutput(""right"",true)
           --  end 
           --  redstone.setOutput(""right"",false)
        end
end
function getAvbEnch()
    chest = peripheral.wrap(""minecraft:chest_2"")
    chestOut = peripheral.wrap(""blueprint:chest_2"")
    chestCheck = peripheral.wrap(""minecraft:chest_3"")    
        if not chest then print(""chest not found! :c"") 
        end
    
    local n = chest.list()
    local tabl = {}
    for i,item in pairs(n) do
        local riga = {}
       -- if item.displayName ~= nil then
            table.insert(tabl,riga)
            table.insert(riga,chest.getItemDetail(i))
            table.insert(riga,i)
            --table[i] = chest.getItemDetail(i)
            print(#tabl,"":"", tabl[#tabl][1].displayName)
        --end
    end
    return tabl
end
 
function menu(t,inp)
    x = tonumber(inp)
    for i = 1,#t do
    if x == i then
    print(""Printing:"",t[x][1].displayName)
            local c = t[x][1].displayName
            turtleService(c,t)
    elseif x ~= i then  
    end
end
end
print(""Type your book of choice"")
menu(getAvbEnch(),read())"
aLkjRBJ8,Induction Matrix Modern Monitor - Voxxie,MsVoxxie,Lua,Monday 5th of February 2024 09:27:00 PM CDT,"-- Initiate interfaces
-- Find our peripherals
local monitor = nil
repeat monitor = peripheral.find('monitor') until monitor

local matrix = nil
repeat matrix = peripheral.find('inductionPort') until matrix

-- Define Functions

function clearMonitor()
    monitor.setBackgroundColor(colors.black)
    monitor.clear()
    monitor.setCursorPos(1, 1)
end

function drawText(x, y, text, txtcol, bgcol)
    monitor.setBackgroundColor(bgcol)
    monitor.setTextColor(txtcol)
    monitor.setCursorPos(x, y)
    monitor.write(text)
end

function drawLine(x, y, len, size, color)
    for yPos = (y - len), y - 1 do
        monitor.setBackgroundColor(color)
        monitor.setCursorPos(x, yPos)
        monitor.write(string.rep(' ', size))
    end
end

function drawProgressBar(x, y, len, size, min, max, color, bgcolor)
    drawLine(x, y, len, size, bgcolor)
    local barSize = math.floor((min / max) * len)
    drawLine(x, y, barSize, size, color)
end

-- Draw Backdrop
function drawBackdrop()
    -- Draw PowerStats Box
    paintutils.drawBox(2, 2, monX - 10, monY - 1, colors.white)
    mainText = ' Power Stats '
    drawText(monX / 2 - #mainText / 2 - 2, 2, mainText, colors.white, colors.black)

    -- Draw Battery Box
    paintutils.drawBox(monX - 8, 2, monX - 1, monY - 1, colors.white)
    powerText = ' FE '
    drawText(monX - 11 / 2 - #powerText / 2 + 2, 2, powerText, colors.white, colors.black)
end

-- Generate Static Interface Text
-- @param leftAlign L/R starting position
-- @param startHeight U/D starting position
function drawIfaceText(leftAlign, startHeight)
    term.setBackgroundColor(colors.black)
    term.setCursorPos(leftAlign, startHeight)
    print('Max FE:')
    term.setCursorPos(leftAlign, startHeight + 1)
    print('Max IO:')

    term.setCursorPos(leftAlign, startHeight + 3)
    print('Cur In:')
    term.setCursorPos(leftAlign, startHeight + 4)
    print('Cur Out:')
    term.setCursorPos(leftAlign, startHeight + 5)
    print('Cur Bal:')

    term.setCursorPos(leftAlign, startHeight + 7)
    print('Stored:')
    term.setCursorPos(leftAlign, startHeight + 8)
    print('Filled:')
end

-- Center Align text
-- @param text Text to write
-- @param color Text color
-- @param yValue Where to place the Y Value
local function centerText(text, color, yValue)
    local x,y = term.getSize()
    local x2,y2 = term.getCursorPos()
    term.setTextColor(color)
    term.setCursorPos(math.ceil((x / 2) - (text:len() / 2)), yValue)
    write(text)
end
    
--
-- @param line The line to print on
-- @param text The text to print there
-- @param color The color to print in
-- @return void
function putValue(line, text, color)
    local align = 32 - string.len(text)
    term.setCursorPos(align, line)
    term.setTextColor(color)
    print(text)
end

-- Get a number in a human readable format
-- This is used to display numbers on screen
--
-- @param number The number to format
-- @return The formatted number
function putNumber(number)
    local round = 0
    local texts = """"

    if number >= 1000000000000000000 then
        round = (number / 1000000000000000000)
        texts = string.sub(round, 0, 5) .. "" EFE""
    else
        if number >= 1000000000000000 then
            round = (number / 1000000000000000)
            texts = string.sub(round, 0, 5) .. "" PFE""
        else
            if number >= 1000000000000 then
                round = (number / 1000000000000)
                texts = string.sub(round, 0, 5) .. "" TFE""
            else
                if number >= 1000000000 then
                    round = (number / 1000000000)
                    texts = string.sub(round, 0, 5) .. "" GFE""
                else
                    if number >= 1000000 then
                        round = (number / 1000000)
                        texts = string.sub(round, 0, 5) .. "" MFE""
                    else
                        if number >= 1000 then
                            round = (number / 1000)
                            texts = string.sub(round, 0, 5) .. "" kFE""
                        else
                            texts = string.sub(number, 0, 5) .. ""  FE""
                        end
                    end
                end
            end
        end
    end
    return texts
end

-- matrix Check Loop
-- @param leftAlign L/R starting positon
-- @param startHeight U/D starting position
-- @param height Height of the box
-- @param width Width of the box
function updateBatteryData(leftAlign, startHeight, height, width)
    term.setBackgroundColor(colors.black)
    -- Get our fixed matrix values
    batteryMaxCharge = mekanismEnergyHelper.joulesToFE(matrix.getMaxEnergy())
    batteryMaxInOuts = mekanismEnergyHelper.joulesToFE(matrix.getTransferCap())
    putValue(startHeight, putNumber(batteryMaxCharge), colors.lightBlue)
    putValue(startHeight + 1, putNumber(batteryMaxInOuts), colors.lightBlue)

    -- Get our input/output/balance matrix values
    batteryCurrentIn = mekanismEnergyHelper.joulesToFE(matrix.getLastInput())
    batteryCurrentOut = mekanismEnergyHelper.joulesToFE(matrix.getLastOutput())
    putValue(startHeight + 3, putNumber(batteryCurrentIn), colors.lightBlue)
    putValue(startHeight + 4, putNumber(batteryCurrentOut), colors.lightBlue)

    batteryCurrentBalance = batteryCurrentIn - batteryCurrentOut
    batteryCurrentColor = (batteryCurrentBalance >= 0) and colors.green or colors.red
    batteryCurrentSign = (batteryCurrentBalance >= 0) and ""+"" or """"
    putValue(startHeight + 5, batteryCurrentSign .. putNumber(batteryCurrentBalance), batteryCurrentColor)

    -- Get our statistical values
    batteryCurrentCharge = mekanismEnergyHelper.joulesToFE(matrix.getEnergy())
    putValue(startHeight + 7, putNumber(batteryCurrentCharge), colors.lightBlue)

    batteryCurrentColor = colors.red
    batteryCurrentPercentage = ((batteryCurrentCharge / batteryMaxCharge) * 100)
    if batteryCurrentPercentage > 30 then batteryCurrentColor = colors.orange end
    if batteryCurrentPercentage > 60 then batteryCurrentColor = colors.green end
    putValue(startHeight + 8, string.sub(putNumber(batteryCurrentPercentage), 0, 4) .. ""%"", batteryCurrentColor)

    -- Draw Battery
    drawProgressBar(monX - 7, monY - 1, monY - 4, 6, batteryCurrentPercentage, 100, batteryCurrentColor, colors.gray)
end

-- Check and bind monitor
    monitor.clear()
    monitor.setTextScale(1.0)
    monX, monY = monitor.getSize()
    term.redirect(monitor)
    term.setCursorPos(1, 1)
    term.setBackgroundColor(colors.black)

-- Clear Monitor
clearMonitor()
-- Draw backdrop
drawBackdrop()
-- Draw Static interface text
drawIfaceText(13, 6)

while true do
    updateBatteryData(3, 6, 12, 4)
--    os.sleep(2)
end
"
Aj8FNrg2,fffi,Gruzing,Lua,Monday 5th of February 2024 09:02:16 PM CDT,"-- AUTO REVIDE / FIGHT BACK / ATTACK PLAYER PK (REVIDAR)

setDefaultTab(""Main"")

-- vBot scripting services: F.Almeida#8019
-- if you like it, consider making a donation:
-- https://www.paypal.com/donate/?business=8XSU4KTS2V9PN&no_recurring=0&item_name=OTC+AND+OTS+SCRIPTS&currency_code=USD

-- ATTENTION:
-- Don't edit below this line unless you know what you're doing.
-- ATENÇÃO:
-- Não mexa em nada daqui para baixo, a não ser que saiba o que está fazendo.
-- ATENCIÓN:
-- No cambies nada desde aquí, solamente si sabes lo que estás haciendo.

local ignoreEmblems = {1,4} -- Guild Emblems (Allies)

local ui = setupUI([[
Panel
  height: 19

  BotSwitch
    id: title
    anchors.top: parent.top
    anchors.left: parent.left
    text-align: center
    width: 130
    !text: tr('Fight Back (Revide)')
    font: verdana-11px-rounded

  Button
    id: edit
    anchors.top: prev.top
    anchors.left: prev.right
    anchors.right: parent.right
    margin-left: 3
    height: 17
    text: Setup
    font: verdana-11px-rounded
]])

local edit = setupUI([[
RevideBox < CheckBox
  font: verdana-11px-rounded
  margin-top: 5
  margin-left: 5
  anchors.top: prev.bottom
  anchors.left: parent.left
  anchors.right: parent.right
  color: lightGray

Panel
  height: 123

  RevideBox
    id: pauseTarget
    anchors.top: parent.top
    text: Pause TargetBot 
    !tooltip: tr('Pause TargetBot While fighting back.')

  RevideBox
    id: pauseCave
    text: Pause CaveBot 
    !tooltip: tr('Pause CaveBot While fighting back.')

  RevideBox
    id: followTarget
    text: Follow Target 
    !tooltip: tr('Set Chase Mode to Follow While fighting back.')

  RevideBox
    id: ignoreParty
    text: Ignore Party Members

  RevideBox
    id: ignoreGuild
    text: Ignore Guild Members

  RevideBox
    id: attackAll
    text: Attack All Skulled
    !tooltip: tr(""Attack every skulled player, even if he didn't attacked you."")

  BotTextEdit
    id: esc
    width: 83
    anchors.bottom: parent.bottom
    anchors.right: parent.right
    text: Escape
    color: red
    font: verdana-11px-rounded

  Label
    text: Cancel Attack:
    font: verdana-11px-rounded
    anchors.left: parent.left
    margin-left: 5
    anchors.verticalCenter: esc.verticalCenter
]])
edit:hide()

local showEdit = false
ui.edit.onClick = function(widget)
  showEdit = not showEdit
  if showEdit then
    edit:show()
  else
    edit:hide()
  end
end
-- End Basic UI

-- Storage
local st = ""RevideFight""
storage[st] = storage[st] or {
  enabled = false,
  pauseTarget = true,
  pauseCave = true,
  followTarget = true,
  ignoreParty = false,
  ignoreGuild = false,
  attackAll = false,
  esc = ""Escape"",
}
local config = storage[st]

-- UI Functions
-- Main Button
ui.title:setOn(config.enabled)
ui.title.onClick = function(widget)
  config.enabled = not config.enabled
  widget:setOn(config.enabled)
end

-- Checkboxes
do
  edit.pauseTarget:setChecked(config.pauseTarget)
  edit.pauseTarget.onClick = function(widget)
    config.pauseTarget = not config.pauseTarget
    widget:setChecked(config.pauseTarget)
    widget:setImageColor(config.pauseTarget and ""green"" or ""red"")
  end
  edit.pauseTarget:setImageColor(config.pauseTarget and ""green"" or ""red"")
  
  edit.pauseCave:setChecked(config.pauseCave)
  edit.pauseCave.onClick = function(widget)
    config.pauseCave = not config.pauseCave
    widget:setChecked(config.pauseCave)
    widget:setImageColor(config.pauseCave and ""green"" or ""red"")
  end
  edit.pauseCave:setImageColor(config.pauseCave and ""green"" or ""red"")

  edit.followTarget:setChecked(config.followTarget)
  edit.followTarget.onClick = function(widget)
    config.followTarget = not config.followTarget
    widget:setChecked(config.followTarget)
    widget:setImageColor(config.followTarget and ""green"" or ""red"")
  end
  edit.followTarget:setImageColor(config.followTarget and ""green"" or ""red"")

  edit.ignoreParty:setChecked(config.ignoreParty)
  edit.ignoreParty.onClick = function(widget)
    config.ignoreParty = not config.ignoreParty
    widget:setChecked(config.ignoreParty)
    widget:setImageColor(config.ignoreParty and ""green"" or ""red"")
  end
  edit.ignoreParty:setImageColor(config.ignoreParty and ""green"" or ""red"")

  edit.ignoreGuild:setChecked(config.ignoreGuild)
  edit.ignoreGuild.onClick = function(widget)
    config.ignoreGuild = not config.ignoreGuild
    widget:setChecked(config.ignoreGuild)
    widget:setImageColor(config.ignoreGuild and ""green"" or ""red"")
  end
  edit.ignoreGuild:setImageColor(config.ignoreGuild and ""green"" or ""red"")

  edit.attackAll:setChecked(config.attackAll)
  edit.attackAll.onClick = function(widget)
    config.attackAll = not config.attackAll
    widget:setChecked(config.attackAll)
    widget:setImageColor(config.attackAll and ""green"" or ""red"")
  end
  edit.attackAll:setImageColor(config.attackAll and ""green"" or ""red"")
end

-- TextEdit
edit.esc:setText(config.esc)
edit.esc.onTextChange = function(widget, text)
  config.esc = text
end
edit.esc:setTooltip(""Hotkey to cancel attack."")

-- End of setup.

local target = nil
local c = config

-- Main Loop
macro(250, function()
  if not c.enabled then return end
  if not target then
    if c.pausedTarget then
      c.pausedTarget = false
      TargetBot.setOn()
    end
    if c.pausedCave then
      c.pausedCave = false
      CaveBot.setOn()
    end
    -- Search for attackers
    local creatures = getSpectators(false)
    for s, spec in ipairs(creatures) do
      if spec ~= player and spec:isPlayer() then
        if (c.attackAll and spec:getSkull() > 2) or spec:isTimedSquareVisible() then
          if c.ignoreParty or spec:getShield() < 3 then
            if c.ignoreGuild or not table.find(ignoreEmblems, spec:getEmblem()) then
              target = spec:getName()
              break
            end
          end
        end
      end
    end
    return
  end

  local creature = getPlayerByName(target)
  if not creature then target = nil return end
  if c.pauseTargetBot then
    c.pausedTarget = true
    TargetBot.setOff()
  end
  if c.pauseTarget then
    c.pausedTarget = true
    TargetBot.setOff()
  end
  if c.pauseCave then
    c.pausedCave = true
    CaveBot.setOff()
  end

  if c.followTarget then
    g_game.setChaseMode(2)
  end

  if g_game.isAttacking() then
    if g_game.getAttackingCreature():getName() == target then
      return
    end
  end
  g_game.attack(creature)
end)

onKeyDown(function(keys)
  if not c.enabled then return end
  if keys == config.esc then
    target = nil
  end
end)

UI.Separator()"
f7LPLiax,scgStdArg,j0h,C,Monday 5th of February 2024 08:33:58 PM CDT,"#include <stdarg.h>
#include <stdlib.h>

#include <stdio.h>
#include <string.h>
#include <math.h>

#include <stdbool.h>
//in my confussion, I put all of svg.h into this code, to try and figure out stdarg.h
//I think I got it, so this code is scratch. but I still want a copy. 

// --------------------------------------------------------
// STRUCT svg
// --------------------------------------------------------
typedef struct svg{
    char* svg;
    int height;
    int width;
    bool finalized;
} svg;

// --------------------------------------------------------
// FUNCTION PROTOTYPES
// --------------------------------------------------------
svg* svg_create(int width, int height);
void svg_finalize(svg* psvg);
void svg_print(svg* psvg);
void svg_save(svg* psvg, char* filepath);
void svg_free(svg* psvg);

void svg_circle(svg* psvg, char* stroke, int strokewidth, char* fill, int r, int cx, int cy);
void svg_line(svg* psvg, char* stroke, int strokewidth, int x1, int y1, int x2, int y2);
void svg_rectangle(svg* psvg, int width, int height, int x, int y, char* fill, char* stroke, int strokewidth, int radiusx, int radiusy);
void svg_fill(svg* psvg, char* fill);
void svg_text(svg* psvg, int x, int y, char* fontfamily, int fontsize, char* fill, char* stroke, char* text);
void svg_ellipse(svg* psvg, int cx, int cy, int rx, int ry, char* fill, char* stroke, int strokewidth);
void svg_polygon(svg* psvg, double cx, double cy, float radius, int nsides, char* fill, char* stroke, int strokewidth );
//void svg_animateTransform

void drawpolygons(void);

// Operator function that accepts variable arguments
void operator_function(int num_args, ...) {
    va_list args;
    va_start(args, num_args);

    for (int i = 0; i < num_args; i++) {
        // Get the function pointer from the variable arguments
        void (*func)(svg*, ...);
        func = va_arg(args, void (*)(svg*, ...));

        // Call the function with the remaining arguments
        if (func == svg_ellipse) {
            svg* psvg = va_arg(args, svg*);
            int cx = va_arg(args, int);
            int cy = va_arg(args, int);
            int rx = va_arg(args, int);
            int ry = va_arg(args, int);
            char* fill = va_arg(args, char*);
            char* stroke = va_arg(args, char*);
            int strokewidth = va_arg(args, int);
            svg_ellipse(psvg, cx, cy, rx, ry, fill, stroke, strokewidth);
        } else if (func == svg_polygon) {
            svg* psvg = va_arg(args, svg*);
            double cx = va_arg(args, double);
            double cy = va_arg(args, double);
            float radius = va_arg(args, double); // Note: float is promoted to double in va_arg
            int nsides = va_arg(args, int);
            char* fill = va_arg(args, char*);
            char* stroke = va_arg(args, char*);
            int strokewidth = va_arg(args, int);
            svg_polygon(psvg, cx, cy, radius, nsides, fill, stroke, strokewidth);
        }
        //more conditions go here
    }

    va_end(args);
}

int main() {
    // Example usage of the operator function
drawpolygons();
    return 0;
}

void drawpolygons(void){
	    svg* psvg = svg_create(512, 512);
//svg_polygon(svg* psvg, double cx, double cy, float radius, int nsides, char* fill, char* stroke, int strokewidth );
//0,0 is top left in svg
    if(psvg == NULL)    {
        puts(""psvg is NULL"");
    }    else    {
   // operator_function(2, svg_polygon, &psvg, 100.0, 100.0, 50.0, 5, ""blue"", ""green"", 1);
    //operator_function(8, svg_polygon, psvg, 100.0, 100.0, 50.0, 5, ""blue"", ""green"", 7);
    operator_function(8, svg_ellipse, psvg, 50, 50, 40, 20, ""red"", ""black"", 2, 8, svg_polygon, psvg, 100.0, 100.0, 50.0, 5, ""blue"", ""green"", 7);
   // svg_polygon(psvg, 100.0, 100.0, 50.0, 5, ""red"", ""green"", 1);
                      
    	 svg_finalize(psvg);
        svg_save(psvg, ""StdArgs.svg"");
        svg_free(psvg);
	}
}
// --------------------------------------------------------
// STATIC FUNCTION appendstringtosvg
// --------------------------------------------------------
static void appendstringtosvg(svg* psvg, char* text){
    int l = strlen(psvg->svg) + strlen(text) + 1;

    char* p = realloc(psvg->svg, l);

    if(p){
        psvg->svg = p;
    }

    strcat(psvg->svg, text);
}

// --------------------------------------------------------
// STATIC FUNCTION appendnumbertosvg
// --------------------------------------------------------
static void appendnumbertosvg(svg* psvg, int n){
    char sn[16];
    sprintf(sn, ""%d"", n);
    appendstringtosvg(psvg, sn);
}

// --------------------------------------------------------
// FUNCTION svg_create
// --------------------------------------------------------
svg* svg_create(int width, int height){
    svg* psvg = malloc(sizeof(svg));

    if(psvg != NULL)    {
        *psvg = (svg){.svg = NULL, .width = width, .height = height, .finalized = false};

        psvg->svg = malloc(1);

        sprintf(psvg->svg, ""%s"", ""\0"");

        appendstringtosvg(psvg, ""<svg width='"");
        appendnumbertosvg(psvg, width);
        appendstringtosvg(psvg, ""px' height='"");
        appendnumbertosvg(psvg, height);
        appendstringtosvg(psvg, ""px' xmlns='http://www.w3.org/2000/svg' version='1.1' xmlns:xlink='http://www.w3.org/1999/xlink'>\n"");

        return psvg;
    }    else    {
        return NULL;
    }
}

// --------------------------------------------------------
// FUNCTION svg_finalize
// --------------------------------------------------------
void svg_finalize(svg* psvg){
    appendstringtosvg(psvg, ""</svg>"");
    psvg->finalized = true;
}

// --------------------------------------------------------
// FUNCTION svg_print
// --------------------------------------------------------
void svg_print(svg* psvg){
    printf(""%s\n"", psvg->svg);
}

// --------------------------------------------------------
// FUNCTION svg_save
// --------------------------------------------------------
void svg_save(svg* psvg, char* filepath){
    if(!psvg->finalized){
        svg_finalize(psvg);
    }

    FILE* fp;
	fp = fopen(filepath, ""w"");

	if(fp != NULL){
		fwrite(psvg->svg, 1, strlen(psvg->svg), fp);

		fclose(fp);
	}
}

//----------------------------------------------------------------
// FUNCTION svg_free
//----------------------------------------------------------------
void svg_free(svg* psvg){
    free(psvg->svg);
    free(psvg);
}

//----------------------------------------------------------------
// FUNCTION svg_circle
//----------------------------------------------------------------
void svg_circle(svg* psvg, char* stroke, int strokewidth, char* fill, int r, int cx, int cy){
    appendstringtosvg(psvg, ""    <circle stroke='"");
    appendstringtosvg(psvg, stroke);
    appendstringtosvg(psvg, ""' stroke-width='"");
    appendnumbertosvg(psvg, strokewidth);
    appendstringtosvg(psvg, ""px' fill='"");
    appendstringtosvg(psvg, fill);
    appendstringtosvg(psvg, ""' r='"");
    appendnumbertosvg(psvg, r);
    appendstringtosvg(psvg, ""' cy='"");
    appendnumbertosvg(psvg, cy);
    appendstringtosvg(psvg, ""' cx='"");
    appendnumbertosvg(psvg, cx);
    appendstringtosvg(psvg, ""' />\n"");
}

//----------------------------------------------------------------
// FUNCTION svg_line
//----------------------------------------------------------------
void svg_line(svg* psvg, char* stroke, int strokewidth, int x1, int y1, int x2, int y2){
    appendstringtosvg(psvg, ""    <line stroke='"");
    appendstringtosvg(psvg, stroke);
    appendstringtosvg(psvg, ""' stroke-width='"");
    appendnumbertosvg(psvg, strokewidth);
    appendstringtosvg(psvg, ""px' y2='"");
    appendnumbertosvg(psvg, y2);
    appendstringtosvg(psvg, ""' x2='"");
    appendnumbertosvg(psvg, x2);
    appendstringtosvg(psvg, ""' y1='"");
    appendnumbertosvg(psvg, y1);
    appendstringtosvg(psvg, ""' x1='"");
    appendnumbertosvg(psvg, x1);
    appendstringtosvg(psvg, ""' />\n"");
}

//----------------------------------------------------------------
// FUNCTION svg_rectangle
//----------------------------------------------------------------
void svg_rectangle(svg* psvg, int width, int height, int x, int y, char* fill, char* stroke, int strokewidth, int radiusx, int radiusy){
    appendstringtosvg(psvg, ""    <rect fill='"");
    appendstringtosvg(psvg, fill);
    appendstringtosvg(psvg, ""' stroke='"");
    appendstringtosvg(psvg, stroke);
    appendstringtosvg(psvg, ""' stroke-width='"");
    appendnumbertosvg(psvg, strokewidth);
    appendstringtosvg(psvg, ""px' width='"");
    appendnumbertosvg(psvg, width);
    appendstringtosvg(psvg, ""' height='"");
    appendnumbertosvg(psvg, height);
    appendstringtosvg(psvg, ""' y='"");
    appendnumbertosvg(psvg, y);
    appendstringtosvg(psvg, ""' x='"");
    appendnumbertosvg(psvg, x);
    appendstringtosvg(psvg, ""' ry='"");
    appendnumbertosvg(psvg, radiusy);
    appendstringtosvg(psvg, ""' rx='"");
    appendnumbertosvg(psvg, radiusx);
    appendstringtosvg(psvg, ""' />\n"");
}

// --------------------------------------------------------
// FUNCTION svg_fill
// --------------------------------------------------------
void svg_fill(svg* psvg, char* Fill){
    svg_rectangle(psvg, psvg->width, psvg->height, 0, 0, Fill, Fill, 0, 0, 0);
}

//----------------------------------------------------------------
// FUNCTION svg_text
//----------------------------------------------------------------
void svg_text(svg* psvg, int x, int y, char* fontfamily, int fontsize, char* fill, char* stroke, char* text){
    appendstringtosvg(psvg, ""    <text x='"");
    appendnumbertosvg(psvg, x);
    appendstringtosvg(psvg, ""' y = '"");
    appendnumbertosvg(psvg, y);
    appendstringtosvg(psvg, ""' font-family='"");
    appendstringtosvg(psvg, fontfamily);
    appendstringtosvg(psvg, ""' stroke='"");
    appendstringtosvg(psvg, stroke);
    appendstringtosvg(psvg, ""' fill='"");
    appendstringtosvg(psvg, fill);
    appendstringtosvg(psvg, ""' font-size='"");
    appendnumbertosvg(psvg, fontsize);
    appendstringtosvg(psvg, ""px'>"");
    appendstringtosvg(psvg, text);
    appendstringtosvg(psvg, ""</text>\n"");
}

//----------------------------------------------------------------
// FUNCTION svg_ellipse
//----------------------------------------------------------------
void svg_ellipse(svg* psvg, int cx, int cy, int rx, int ry, char* fill, char* stroke, int strokewidth){
    appendstringtosvg(psvg, ""    <ellipse cx='"");
    appendnumbertosvg(psvg, cx);
    appendstringtosvg(psvg, ""' cy='"");
    appendnumbertosvg(psvg, cy);
    appendstringtosvg(psvg, ""' rx='"");
    appendnumbertosvg(psvg, rx);
    appendstringtosvg(psvg, ""' ry='"");
    appendnumbertosvg(psvg, ry);
    appendstringtosvg(psvg, ""' fill='"");
    appendstringtosvg(psvg, fill);
    appendstringtosvg(psvg, ""' stroke='"");
    appendstringtosvg(psvg, stroke);
    appendstringtosvg(psvg, ""' stroke-width='"");
    appendnumbertosvg(psvg, strokewidth);
    appendstringtosvg(psvg, ""' />\n"");
}


//----------------------------------------------------------------
// FUNCTION svg_polygon
//----------------------------------------------------------------
void svg_polygon(svg* psvg, double cx, double cy, float radius, int nsides, char* fill, char* stroke, int strokewidth ){
//cx,cy ==center point
//put xi ,yi in an array	
printf(""svg_polygon FUNCTION CALLED\n"");
float xi, yi=0.0;
	if (nsides<3){
	printf(""Error: Too Few Sides\n"");
    exit(0);
}

//start building the polygon:
    appendstringtosvg(psvg, ""    <polygon style=\""fill:"");
    appendstringtosvg(psvg, fill);
    appendstringtosvg(psvg, ""; stroke:"");
    appendstringtosvg(psvg, stroke);
    appendstringtosvg(psvg, ""; stroke-width:"");
    appendnumbertosvg(psvg, strokewidth);
    appendstringtosvg(psvg, ""\"" points='"");

	//calc x,y point cordinates. trig funtions take radians
	for (int i =1; i < nsides+1;  i++){
	xi= cx + radius * cos((2*M_PI/nsides) * i);
	    appendnumbertosvg(psvg, xi);
	    appendstringtosvg(psvg, "", "");
	yi= cy + radius * sin((2*M_PI/nsides) *  i);
	    appendnumbertosvg(psvg, yi);	
	    appendstringtosvg(psvg, "" "");	    
		printf(""%f , %f\n "", xi, yi);
		}
		printf(""\n"");
		//close polygon
     appendstringtosvg(psvg, ""' />\n"");
	}"
hwC0zV8B,Induction Matrix Ascii Monitor - Voxxie,MsVoxxie,Lua,Monday 5th of February 2024 08:26:03 PM CDT,"-- Power Monitor for Mekanism Induction Matrix
--
-- Writen by MsVoxxie
-- Inspired by Sven Marc 'cybrox' Gehring
--

-- Center Align text
-- @param text Text to write
-- @param color Text color
-- @param yValue Where to place the Y Value
local function centerText(text, color, yValue)
    local x,y = term.getSize()
    local x2,y2 = term.getCursorPos()
    term.setTextColor(color)
    term.setCursorPos(math.ceil((x / 2) - (text:len() / 2)), yValue)
    write(text)
end
    
-- Printing right aligned text on a line
-- This is used for printing our dynamic
-- values to the screen properly

--
-- @param line The line to print on
-- @param text The text to print there
-- @param color The color to print in
-- @return void
function putValue(line, text, color)
    local align = 32 - string.len(text)
    term.setCursorPos(align, line)
    term.setTextColor(color)
    print(text)
end

-- Get a number in a human readable format
-- This is used to display numbers on screen
--
-- @param number The number to format
-- @return The formatted number
function putNumber(number)
    local round = 0
    local texts = """"

    if number >= 1000000000000000000 then
        round = (number / 1000000000000000000)
        texts = string.sub(round, 0, 5) .. "" EFE""
    else
        if number >= 1000000000000000 then
            round = (number / 1000000000000000)
            texts = string.sub(round, 0, 5) .. "" PFE""
        else
            if number >= 1000000000000 then
                round = (number / 1000000000000)
                texts = string.sub(round, 0, 5) .. "" TFE""
            else
                if number >= 1000000000 then
                    round = (number / 1000000000)
                    texts = string.sub(round, 0, 5) .. "" GFE""
                else
                    if number >= 1000000 then
                        round = (number / 1000000)
                        texts = string.sub(round, 0, 5) .. "" MFE""
                    else
                        if number >= 1000 then
                            round = (number / 1000)
                            texts = string.sub(round, 0, 5) .. "" kFE""
                        else
                            texts = string.sub(number, 0, 5) .. ""  FE""
                        end
                    end
                end
            end
        end
    end
    return texts
end

-- Generate static fill volume box
-- @param leftAlign L/R starting positon
-- @param height Height of the box
-- @param width Width of the box
-- @param lineStr String to repeat for top and bottom lines.
function drawVolBox(leftAlign, height, width, lineStr)
    term.setTextColor(colors.white)
    term.setCursorPos(leftAlign, leftAlign)
    print('+' .. string.rep(lineStr, width) .. '+')
    term.setCursorPos(leftAlign, height)
    print('+' .. string.rep(lineStr, width) .. '+')
    for i = leftAlign + 1, height - 1 do
        term.setCursorPos(leftAlign, i)
        print('|')
        term.setCursorPos(width + 4, i)
        print('|')
    end
end

-- Generate Static Interface Text
-- @param leftAlign L/R starting position
-- @param startHeight U/D starting position
function drawIfaceText(leftAlign, startHeight)
    term.setCursorPos(leftAlign, startHeight)
    print('Max FE:')
    term.setCursorPos(leftAlign, startHeight + 1)
    print('Max Thru:')

    term.setCursorPos(leftAlign, startHeight + 3)
    print('Cur In:')
    term.setCursorPos(leftAlign, startHeight + 4)
    print('Cur Out:')
    term.setCursorPos(leftAlign, startHeight + 5)
    print('Cur Bal:')

    term.setCursorPos(leftAlign, startHeight + 7)
    print('Stored:')
    term.setCursorPos(leftAlign, startHeight + 8)
    print('Filled:')
end

-- matrix Check Loop
-- @param leftAlign L/R starting positon
-- @param startHeight U/D starting position
-- @param height Height of the box
-- @param width Width of the box
function updateBatteryData(leftAlign, startHeight, height, width)
    -- Get our fixed matrix values
    batteryMaxCharge = mekanismEnergyHelper.joulesToFE(matrix.getMaxEnergy())
    batteryMaxInOuts = mekanismEnergyHelper.joulesToFE(matrix.getTransferCap())
    putValue(startHeight, putNumber(batteryMaxCharge), colors.lightBlue)
    putValue(startHeight + 1, putNumber(batteryMaxInOuts), colors.lightBlue)

    -- Get our input/output/balance matrix values
    batteryCurrentIn = mekanismEnergyHelper.joulesToFE(matrix.getLastInput())
    batteryCurrentOut = mekanismEnergyHelper.joulesToFE(matrix.getLastOutput())
    putValue(startHeight + 3, putNumber(batteryCurrentIn), colors.lightBlue)
    putValue(startHeight + 4, putNumber(batteryCurrentOut), colors.lightBlue)

    batteryCurrentBalance = batteryCurrentIn - batteryCurrentOut
    batteryCurrentColor = (batteryCurrentBalance >= 0) and colors.green or colors.red
    batteryCurrentSign = (batteryCurrentBalance >= 0) and ""+"" or """"
    putValue(startHeight + 5, batteryCurrentSign .. putNumber(batteryCurrentBalance), batteryCurrentColor)

    -- Get our statistical values
    batteryCurrentCharge = mekanismEnergyHelper.joulesToFE(matrix.getEnergy())
    putValue(startHeight + 7, putNumber(batteryCurrentCharge), colors.lightBlue)

    batteryCurrentColor = colors.red
    batteryCurrentPercentage = ((batteryCurrentCharge / batteryMaxCharge) * 100)
    if batteryCurrentPercentage > 30 then batteryCurrentColor = colors.orange end
    if batteryCurrentPercentage > 60 then batteryCurrentColor = colors.green end
    putValue(startHeight + 8, string.sub(putNumber(batteryCurrentPercentage), 0, 4) .. ""%"", batteryCurrentColor)

    -- Draw the current charge graph
    batteryCurrentColor = colors.red
    if batteryCurrentPercentage > 30 then term.setTextColor(colors.orange) end
    if batteryCurrentPercentage > 60 then term.setTextColor(colors.green) end
    if batteryCurrentPercentage >= 100 then
        term.setTextColor(colors.lightBlue)
    end

    -- Draw Spacer
    for i = leftAlign + 1, height - 1 do
        term.setCursorPos(leftAlign + 1, i)
        print(string.rep(' ', width + 2))
    end

    iterator = 0
    for i = leftAlign + 1, height - 1 do
        local compare = (12.5 * iterator)
        if (batteryCurrentPercentage >= compare) then
            term.setCursorPos(leftAlign + 1, (height + 3 - i))
            local filler = ''
            for i = 1, width + 2 do
                local inhere = (compare + (i * 2))
                if batteryCurrentPercentage >= inhere then
                    filler = filler .. '#'
                else
                    if batteryCurrentPercentage >= (inhere - 1) then
                        filler = filler .. '='
                    else
                        filler = filler .. '_'
                    end
                end
            end
            print(filler)
        end
        iterator = iterator + 1
    end
end

-- Initiate interfaces
-- Find our peripherals
monitor = peripheral.find('monitor')
matrix = peripheral.find('inductionPort')

-- Check and bind monitor
if monitor == nil then
    error('ERR: No monitor found to display.')
else
    monitor.clear()
    monitor.setTextScale(1.5)
    term.redirect(monitor)
    term.setCursorPos(1, 1)
    term.setBackgroundColor(colors.black)
end

if matrix == nil then error('ERR: No Matrix connected to computer.') end

-- Draw Title
centerText('Matrix Power Levels', colors.blue, 1.5)

-- Draw Volume Box
drawVolBox(3, 12, 6, '-')

-- Draw Static interface text
drawIfaceText(13, 3)

-- Entering infinite loop of checking the matrix
-- Checking every 2 seconds
while true do
    updateBatteryData(3, 3, 12, 4)
    os.sleep(2)
end
"
gNXFfhYZ,Untitled,dani_fadli,JSON,Monday 5th of February 2024 08:04:14 PM CDT,"{
    ""status_code"": 200,
    ""message"": ""Data berhasil didapatkan"",
    ""data"": {
        ""products"": {
            ""current_page"": 1,
            ""data"": [
                {
                    ""id"": ""2b52434d-774f-47d2-8f5c-23798b07960a"",
                    ""name"": ""Baby Carrier Original"",
                    ""slug"": ""baby-carrier-original-yjB2UDNiak"",
                    ""price"": ""725000"",
                    ""discounted_price"": ""725000"",
                    ""discount_values"": [],
                    ""total_discount_value"": 0,
                    ""stock"": 38,
                    ""type"": ""combination"",
                    ""store_type"": ""brand_partner"",
                    ""active"": true,
                    ""product_type"": ""master_product"",
                    ""rating"": 0,
                    ""total_review"": 0,
                    ""total_sold"": 1,
                    ""is_wishlisted"": false,
                    ""is_reviewed"": false,
                    ""new_product"": false,
                    ""is_preorder"": false,
                    ""preorder_period"": 0,
                    ""event_ongoing"": {
                        ""event_sale"": [],
                        ""flash_sale"": [],
                        ""clearance_sale"": [],
                        ""pre_sale"": []
                    },
                    ""brand"": {
                        ""id"": ""e51bafc5-1e80-4e6d-8bfb-00fe3fb9f82a"",
                        ""name"": ""Baby Ktan"",
                        ""slug"": ""baby-ktan"",
                        ""active"": true
                    },
                    ""store"": {
                        ""id"": ""b20ff247-5b70-4c84-a2a4-a19bf3000a78"",
                        ""name"": ""Baby Ktan"",
                        ""slug"": ""baby-ktan-QEWtAz0RRJ"",
                        ""url"": null,
                        ""official"": true,
                        ""type"": ""brand_partner"",
                        ""rating"": 0,
                        ""main_branch_city"": ""Jakarta Timur"",
                        ""files"": [
                            {
                                ""id"": ""668ebbad-7586-45f1-a735-cfe28e22349d"",
                                ""name"": ""logo"",
                                ""filename"": ""xzni0hs7qq_store_1654667078.png"",
                                ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/xzni0hs7qq_store_1654667078.png"",
                                ""type"": ""image"",
                                ""variant"": ""original"",
                                ""sequence"": 1,
                                ""fileable_id"": ""b20ff247-5b70-4c84-a2a4-a19bf3000a78""
                            }
                        ]
                    },
                    ""files"": [
                        {
                            ""id"": ""41b17c45-7c28-499f-8386-4a99c6a78fdc"",
                            ""name"": ""image"",
                            ""filename"": ""g6rivvhvos_product_1667525854_thumbnail.jpg"",
                            ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/g6rivvhvos_product_1667525854_thumbnail.jpg"",
                            ""type"": ""image"",
                            ""variant"": ""thumbnail"",
                            ""sequence"": 1,
                            ""fileable_id"": ""2b52434d-774f-47d2-8f5c-23798b07960a""
                        },
                        {
                            ""id"": ""0204b511-068d-419f-b10c-b19ae67c7ce1"",
                            ""name"": ""image"",
                            ""filename"": ""g6rivvhvos_product_1667525854.jpg"",
                            ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/g6rivvhvos_product_1667525854.jpg"",
                            ""type"": ""image"",
                            ""variant"": ""original"",
                            ""sequence"": 1,
                            ""fileable_id"": ""2b52434d-774f-47d2-8f5c-23798b07960a""
                        }
                    ],
                    ""variant_categories"": [
                        {
                            ""id"": ""31f14313-95ab-4495-9912-5cdf95d2befa"",
                            ""name"": ""Warna"",
                            ""display_name"": ""Warna"",
                            ""slug"": ""warna-aokdsapso"",
                            ""value_type"": ""general"",
                            ""created_by"": null,
                            ""variants"": [
                                {
                                    ""id"": ""6b1c8fd6-6e8a-447a-9a28-c9533c935fcd"",
                                    ""name"": ""Eggplant"",
                                    ""value"": ""Eggplant"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""897d349b-31a9-4bd8-98cc-5d372548770d"",
                                    ""name"": ""Denim"",
                                    ""value"": ""Denim"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""52d3e5ce-1a94-4cb6-aac7-68cd17dd7c98"",
                                    ""name"": ""Black"",
                                    ""value"": ""Black"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""725694c3-4d93-4faf-8813-457a478e2247"",
                                    ""name"": ""Heather Gray"",
                                    ""value"": ""Heather Gray"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                }
                            ]
                        },
                        {
                            ""id"": ""ad9b0f94-0ce5-4aeb-997f-d05802b24234"",
                            ""name"": ""Ukuran"",
                            ""display_name"": ""Ukuran"",
                            ""slug"": ""ukuran-oaskpds"",
                            ""value_type"": ""general"",
                            ""created_by"": {
                                ""id"": ""8f0593d3-c150-4a26-bdaf-51cb11a79743"",
                                ""name"": ""Paninti Hub Indonesia"",
                                ""type"": ""store_partner"",
                                ""active"": true
                            },
                            ""variants"": [
                                {
                                    ""id"": ""64b17efa-6f5b-432c-b8fc-7a1434ed7577"",
                                    ""name"": ""XS"",
                                    ""value"": ""XS"",
                                    ""sequence"": 2,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""e1fe5060-fff7-4c85-9e7f-cacdc3b838c4"",
                                    ""name"": ""S"",
                                    ""value"": ""S"",
                                    ""sequence"": 2,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""d8e0ba44-6380-4d74-a4a8-bd9019a48cea"",
                                    ""name"": ""M"",
                                    ""value"": ""M"",
                                    ""sequence"": 2,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""b9463e38-7695-44b0-a01b-204e02ea8b8c"",
                                    ""name"": ""L"",
                                    ""value"": ""L"",
                                    ""sequence"": 2,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""ac6bcbda-472d-4beb-8436-5d6886c2f8e2"",
                                    ""name"": ""XL"",
                                    ""value"": ""XL"",
                                    ""sequence"": 2,
                                    ""created_by"": null
                                }
                            ]
                        }
                    ],
                    ""details"": [
                        {
                            ""id"": ""6526c7c0-b9a0-4128-abf9-66f188977e03"",
                            ""name"": ""Eggplant,XS"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": true,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""b7c99ce0-24f6-44dd-a336-35aaec58c74a"",
                                    ""name"": ""image"",
                                    ""filename"": ""0v5rsvrfrd_product_detail_1667525860_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/0v5rsvrfrd_product_detail_1667525860_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""6526c7c0-b9a0-4128-abf9-66f188977e03""
                                },
                                {
                                    ""id"": ""4836669d-4a25-4278-973e-06b2c886a668"",
                                    ""name"": ""image"",
                                    ""filename"": ""0v5rsvrfrd_product_detail_1667525860.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/0v5rsvrfrd_product_detail_1667525860.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""6526c7c0-b9a0-4128-abf9-66f188977e03""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""9b39712e-f3b6-4a62-981f-c2416903db23"",
                            ""name"": ""Eggplant,S"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""40007073-293e-4489-aae4-fe91e61ac623"",
                                    ""name"": ""image"",
                                    ""filename"": ""vzu5jfiqnb_product_detail_1667525861.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/vzu5jfiqnb_product_detail_1667525861.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""9b39712e-f3b6-4a62-981f-c2416903db23""
                                },
                                {
                                    ""id"": ""ed8d6160-f7f8-4019-a2dc-3569e38fdf60"",
                                    ""name"": ""image"",
                                    ""filename"": ""vzu5jfiqnb_product_detail_1667525861_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/vzu5jfiqnb_product_detail_1667525861_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""9b39712e-f3b6-4a62-981f-c2416903db23""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""36b5413e-61a2-4751-831c-30fb6aa914a1"",
                            ""name"": ""Eggplant,M"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""7e89c41e-8c4a-4d35-9fd8-c2b4828b56b5"",
                                    ""name"": ""image"",
                                    ""filename"": ""klwlejghxv_product_detail_1667525862.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/klwlejghxv_product_detail_1667525862.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""36b5413e-61a2-4751-831c-30fb6aa914a1""
                                },
                                {
                                    ""id"": ""093a8450-4f5c-46db-931d-06dca912eef4"",
                                    ""name"": ""image"",
                                    ""filename"": ""klwlejghxv_product_detail_1667525862_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/klwlejghxv_product_detail_1667525862_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""36b5413e-61a2-4751-831c-30fb6aa914a1""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""23871754-bdf6-44c3-9651-9194d595356a"",
                            ""name"": ""Eggplant,L"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""66b53f28-f4c7-48a7-9e3f-796067deb7a3"",
                                    ""name"": ""image"",
                                    ""filename"": ""gdlisq1jya_product_detail_1667525862.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/gdlisq1jya_product_detail_1667525862.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""23871754-bdf6-44c3-9651-9194d595356a""
                                },
                                {
                                    ""id"": ""f88b4f92-7932-45ab-aa24-55c112066feb"",
                                    ""name"": ""image"",
                                    ""filename"": ""gdlisq1jya_product_detail_1667525862_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/gdlisq1jya_product_detail_1667525862_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""23871754-bdf6-44c3-9651-9194d595356a""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""ef5a4e63-ecf0-4e5a-8b8b-9785bb2f1039"",
                            ""name"": ""Eggplant,XL"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""ae712837-5fe7-45b9-a281-0395cd41f8b3"",
                                    ""name"": ""image"",
                                    ""filename"": ""o9q4af2apg_product_detail_1667525863_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/o9q4af2apg_product_detail_1667525863_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""ef5a4e63-ecf0-4e5a-8b8b-9785bb2f1039""
                                },
                                {
                                    ""id"": ""a90cf2a6-7d1f-4f77-9044-082f841f19f5"",
                                    ""name"": ""image"",
                                    ""filename"": ""o9q4af2apg_product_detail_1667525863.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/o9q4af2apg_product_detail_1667525863.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""ef5a4e63-ecf0-4e5a-8b8b-9785bb2f1039""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""d20a9c72-8477-489a-9d8a-044521524fb1"",
                            ""name"": ""Denim,XS"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""9856e3ce-59e4-4cc0-aca2-8f0903418360"",
                                    ""name"": ""image"",
                                    ""filename"": ""ognyqvmrt9_product_detail_1667525863_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/ognyqvmrt9_product_detail_1667525863_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""d20a9c72-8477-489a-9d8a-044521524fb1""
                                },
                                {
                                    ""id"": ""33464ad8-3fa0-419b-b1da-2095692c58a2"",
                                    ""name"": ""image"",
                                    ""filename"": ""ognyqvmrt9_product_detail_1667525863.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/ognyqvmrt9_product_detail_1667525863.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""d20a9c72-8477-489a-9d8a-044521524fb1""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""7bc00b0a-3697-4bcb-8d85-f5804fdd933e"",
                            ""name"": ""Denim,S"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""838a3c93-f69c-408b-97cc-8f36c1d45167"",
                                    ""name"": ""image"",
                                    ""filename"": ""hy9782ap6z_product_detail_1667525864.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/hy9782ap6z_product_detail_1667525864.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""7bc00b0a-3697-4bcb-8d85-f5804fdd933e""
                                },
                                {
                                    ""id"": ""e99080cf-6f92-4f61-a70a-54a23b54a89b"",
                                    ""name"": ""image"",
                                    ""filename"": ""hy9782ap6z_product_detail_1667525864_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/hy9782ap6z_product_detail_1667525864_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""7bc00b0a-3697-4bcb-8d85-f5804fdd933e""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""3c2fd769-0208-4ec1-ac36-dceac5ff5bb8"",
                            ""name"": ""Denim,M"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 1,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""98490b6e-156e-4bdd-babd-34af5c9badac"",
                                    ""name"": ""image"",
                                    ""filename"": ""kf4l6z5hvo_product_detail_1667525865.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/kf4l6z5hvo_product_detail_1667525865.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""3c2fd769-0208-4ec1-ac36-dceac5ff5bb8""
                                },
                                {
                                    ""id"": ""4de8727b-d4b1-40ed-a186-57252ab88741"",
                                    ""name"": ""image"",
                                    ""filename"": ""kf4l6z5hvo_product_detail_1667525865_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/kf4l6z5hvo_product_detail_1667525865_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""3c2fd769-0208-4ec1-ac36-dceac5ff5bb8""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""1b7f6186-aafc-4dcf-abbb-3574687bc4ea"",
                            ""name"": ""Denim,L"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""0b414e06-0ca9-476d-a850-7662fc9694bd"",
                                    ""name"": ""image"",
                                    ""filename"": ""rtlmdomksr_product_detail_1667525865_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/rtlmdomksr_product_detail_1667525865_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""1b7f6186-aafc-4dcf-abbb-3574687bc4ea""
                                },
                                {
                                    ""id"": ""395f5e72-85a6-4b4b-9837-05a9b87aa7d0"",
                                    ""name"": ""image"",
                                    ""filename"": ""rtlmdomksr_product_detail_1667525865.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/rtlmdomksr_product_detail_1667525865.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""1b7f6186-aafc-4dcf-abbb-3574687bc4ea""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""3a876c20-360a-4ad5-8eda-6f3e0431ef68"",
                            ""name"": ""Denim,XL"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""aefd1f74-8110-4b53-a4b1-f5559d498669"",
                                    ""name"": ""image"",
                                    ""filename"": ""lewitqwru4_product_detail_1667525866.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/lewitqwru4_product_detail_1667525866.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""3a876c20-360a-4ad5-8eda-6f3e0431ef68""
                                },
                                {
                                    ""id"": ""8fa7a39d-24a9-4ac2-9878-aac4d69951a3"",
                                    ""name"": ""image"",
                                    ""filename"": ""lewitqwru4_product_detail_1667525866_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/lewitqwru4_product_detail_1667525866_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""3a876c20-360a-4ad5-8eda-6f3e0431ef68""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""7e3c309b-0960-4e7e-a6cf-6caed24c7d5f"",
                            ""name"": ""Black,XS"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""060811f7-fa84-4d29-9d4e-2edddb2d4467"",
                                    ""name"": ""image"",
                                    ""filename"": ""meavt9poh9_product_detail_1667525866_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/meavt9poh9_product_detail_1667525866_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""7e3c309b-0960-4e7e-a6cf-6caed24c7d5f""
                                },
                                {
                                    ""id"": ""1eca34da-fc3f-4fb3-a744-cf09e8645956"",
                                    ""name"": ""image"",
                                    ""filename"": ""meavt9poh9_product_detail_1667525866.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/meavt9poh9_product_detail_1667525866.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""7e3c309b-0960-4e7e-a6cf-6caed24c7d5f""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""95a08030-356c-406b-91cc-e6c52b42fb74"",
                            ""name"": ""Black,S"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""c5992bd3-ea86-4abb-bf87-dd4502cceb7e"",
                                    ""name"": ""image"",
                                    ""filename"": ""spy8pxhtaz_product_detail_1667525867_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/spy8pxhtaz_product_detail_1667525867_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""95a08030-356c-406b-91cc-e6c52b42fb74""
                                },
                                {
                                    ""id"": ""a6ea84b7-ae73-4020-be63-8596917fc9a7"",
                                    ""name"": ""image"",
                                    ""filename"": ""spy8pxhtaz_product_detail_1667525867.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/spy8pxhtaz_product_detail_1667525867.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""95a08030-356c-406b-91cc-e6c52b42fb74""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""706e8faa-1f88-4c3a-8c18-7e1339d0906c"",
                            ""name"": ""Black,M"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""4c6d16d7-f6e1-4454-a7d5-6041b357d3ae"",
                                    ""name"": ""image"",
                                    ""filename"": ""kt7eh3gm6u_product_detail_1667525867_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/kt7eh3gm6u_product_detail_1667525867_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""706e8faa-1f88-4c3a-8c18-7e1339d0906c""
                                },
                                {
                                    ""id"": ""ee585dbc-95ea-4e33-83d9-b36170f19e16"",
                                    ""name"": ""image"",
                                    ""filename"": ""kt7eh3gm6u_product_detail_1667525867.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/kt7eh3gm6u_product_detail_1667525867.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""706e8faa-1f88-4c3a-8c18-7e1339d0906c""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""3b54366b-c925-4c17-9b71-63155bb4bc87"",
                            ""name"": ""Black,L"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""273fa527-e6c5-47a4-88db-4077391502ae"",
                                    ""name"": ""image"",
                                    ""filename"": ""e7qg833tsn_product_detail_1667525868.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/e7qg833tsn_product_detail_1667525868.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""3b54366b-c925-4c17-9b71-63155bb4bc87""
                                },
                                {
                                    ""id"": ""2dee1a27-e41e-44e2-a3de-1caadd896168"",
                                    ""name"": ""image"",
                                    ""filename"": ""e7qg833tsn_product_detail_1667525868_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/e7qg833tsn_product_detail_1667525868_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""3b54366b-c925-4c17-9b71-63155bb4bc87""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""f2799ffe-0a22-4e73-9192-158304a682ce"",
                            ""name"": ""Black,XL"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""78ff945a-3118-4070-ac36-aca7d5e8e1e7"",
                                    ""name"": ""image"",
                                    ""filename"": ""9qoidztmoa_product_detail_1667525868_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/9qoidztmoa_product_detail_1667525868_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""f2799ffe-0a22-4e73-9192-158304a682ce""
                                },
                                {
                                    ""id"": ""2cda36a4-8bb9-4f30-81c4-2ba0ce37a462"",
                                    ""name"": ""image"",
                                    ""filename"": ""9qoidztmoa_product_detail_1667525868.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/9qoidztmoa_product_detail_1667525868.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""f2799ffe-0a22-4e73-9192-158304a682ce""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""c7ee80e0-33c4-4e62-a145-45206c0eaa5e"",
                            ""name"": ""Heather Gray,XS"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 1,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""cb8e6b63-31e8-47dd-b319-89ffe418b5fe"",
                                    ""name"": ""image"",
                                    ""filename"": ""9gd8ltm7x9_product_detail_1667525869.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/9gd8ltm7x9_product_detail_1667525869.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""c7ee80e0-33c4-4e62-a145-45206c0eaa5e""
                                },
                                {
                                    ""id"": ""402f2433-9ec4-4ab4-9dcc-a46e4bd18fcc"",
                                    ""name"": ""image"",
                                    ""filename"": ""9gd8ltm7x9_product_detail_1667525869_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/9gd8ltm7x9_product_detail_1667525869_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""c7ee80e0-33c4-4e62-a145-45206c0eaa5e""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""c9c29fce-3818-4395-b263-168ee12c4b29"",
                            ""name"": ""Heather Gray,S"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""8648c894-2e45-4ef9-9f37-362711ccabd8"",
                                    ""name"": ""image"",
                                    ""filename"": ""bdilhobcvp_product_detail_1667525870.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/bdilhobcvp_product_detail_1667525870.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""c9c29fce-3818-4395-b263-168ee12c4b29""
                                },
                                {
                                    ""id"": ""fd1a0ef4-53c2-4b25-a3d0-fd1cc6ad8870"",
                                    ""name"": ""image"",
                                    ""filename"": ""bdilhobcvp_product_detail_1667525870_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/bdilhobcvp_product_detail_1667525870_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""c9c29fce-3818-4395-b263-168ee12c4b29""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""4d6450db-a9a3-4cb9-bbbc-7631d2f41ed0"",
                            ""name"": ""Heather Gray,M"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""90c2acf2-0cce-434b-9c8c-0292a24c2fb9"",
                                    ""name"": ""image"",
                                    ""filename"": ""0ke0kmrxys_product_detail_1667525870_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/0ke0kmrxys_product_detail_1667525870_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""4d6450db-a9a3-4cb9-bbbc-7631d2f41ed0""
                                },
                                {
                                    ""id"": ""47a46aad-a030-4bdf-bd86-48fa8de00096"",
                                    ""name"": ""image"",
                                    ""filename"": ""0ke0kmrxys_product_detail_1667525870.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/0ke0kmrxys_product_detail_1667525870.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""4d6450db-a9a3-4cb9-bbbc-7631d2f41ed0""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""75f61775-b96a-45ff-85fe-69acb1d2d91b"",
                            ""name"": ""Heather Gray,L"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""01fd1670-cc96-4005-b524-0431a2a1bcc3"",
                                    ""name"": ""image"",
                                    ""filename"": ""lm2vc8vavy_product_detail_1667525871_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/lm2vc8vavy_product_detail_1667525871_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""75f61775-b96a-45ff-85fe-69acb1d2d91b""
                                },
                                {
                                    ""id"": ""fc3d4c20-9ae2-460d-bce5-5d303cce1617"",
                                    ""name"": ""image"",
                                    ""filename"": ""lm2vc8vavy_product_detail_1667525871.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/lm2vc8vavy_product_detail_1667525871.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""75f61775-b96a-45ff-85fe-69acb1d2d91b""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""4dcd80c6-d76c-4e52-9b3a-eb89320962dc"",
                            ""name"": ""Heather Gray,XL"",
                            ""price"": ""725000"",
                            ""discounted_price"": ""725000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""bd720fee-2a5e-4bcb-b9a9-d21ae3b6493a"",
                                    ""name"": ""image"",
                                    ""filename"": ""fvkwnp3gnb_product_detail_1667525871.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/fvkwnp3gnb_product_detail_1667525871.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""4dcd80c6-d76c-4e52-9b3a-eb89320962dc""
                                },
                                {
                                    ""id"": ""85d3f73f-a107-41b8-9682-74fa99f9d49d"",
                                    ""name"": ""image"",
                                    ""filename"": ""fvkwnp3gnb_product_detail_1667525871_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/fvkwnp3gnb_product_detail_1667525871_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""4dcd80c6-d76c-4e52-9b3a-eb89320962dc""
                                }
                            ],
                            ""event_sale_session"": null
                        }
                    ]
                },
                {
                    ""id"": ""20fe1b19-8219-4870-85aa-beb5b7f7f25e"",
                    ""name"": ""Baby Puree By OONEW Michelin Series TB-1510S"",
                    ""slug"": ""baby-puree-by-oonew-michelin-series-tb-1510s-cu2evlamdi"",
                    ""price"": ""2499000"",
                    ""discounted_price"": ""2499000"",
                    ""discount_values"": [],
                    ""total_discount_value"": 0,
                    ""stock"": 7,
                    ""type"": ""combination"",
                    ""store_type"": ""brand_partner"",
                    ""active"": true,
                    ""product_type"": ""master_product"",
                    ""rating"": 0,
                    ""total_review"": 0,
                    ""total_sold"": 0,
                    ""is_wishlisted"": false,
                    ""is_reviewed"": false,
                    ""new_product"": false,
                    ""is_preorder"": false,
                    ""preorder_period"": 0,
                    ""event_ongoing"": {
                        ""event_sale"": [],
                        ""flash_sale"": [],
                        ""clearance_sale"": [],
                        ""pre_sale"": []
                    },
                    ""brand"": {
                        ""id"": ""cdf0e003-4ad8-4c30-b0c1-8784629d8e0a"",
                        ""name"": ""Oonew"",
                        ""slug"": ""oonew"",
                        ""active"": true
                    },
                    ""store"": {
                        ""id"": ""e4a912b2-2e64-43c6-9984-8e9502ed54b4"",
                        ""name"": ""Oonew"",
                        ""slug"": ""oonew-xADXde4YEx"",
                        ""url"": null,
                        ""official"": true,
                        ""type"": ""brand_partner"",
                        ""rating"": 4.2,
                        ""main_branch_city"": ""Bandung"",
                        ""files"": [
                            {
                                ""id"": ""d061de1d-48d1-445c-af33-4bcea3d80908"",
                                ""name"": ""logo"",
                                ""filename"": ""gghcgun1si_store_1662481486_thumbnail.png"",
                                ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/gghcgun1si_store_1662481486_thumbnail.png"",
                                ""type"": ""image"",
                                ""variant"": ""thumbnail"",
                                ""sequence"": 1,
                                ""fileable_id"": ""e4a912b2-2e64-43c6-9984-8e9502ed54b4""
                            },
                            {
                                ""id"": ""742e4a53-72af-4aee-9472-f4b2950d3976"",
                                ""name"": ""logo"",
                                ""filename"": ""gghcgun1si_store_1662481486.png"",
                                ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/gghcgun1si_store_1662481486.png"",
                                ""type"": ""image"",
                                ""variant"": ""original"",
                                ""sequence"": 1,
                                ""fileable_id"": ""e4a912b2-2e64-43c6-9984-8e9502ed54b4""
                            }
                        ]
                    },
                    ""files"": [
                        {
                            ""id"": ""03b497bf-dc73-4ee1-a7e8-8011b9f65145"",
                            ""name"": ""image"",
                            ""filename"": ""5divejre1x_product_1685947850.jpg"",
                            ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/5divejre1x_product_1685947850.jpg"",
                            ""type"": ""image"",
                            ""variant"": ""original"",
                            ""sequence"": 1,
                            ""fileable_id"": ""20fe1b19-8219-4870-85aa-beb5b7f7f25e""
                        },
                        {
                            ""id"": ""aa55c113-2597-4e62-9260-76df2d573772"",
                            ""name"": ""image"",
                            ""filename"": ""5divejre1x_product_1685947850_thumbnail.jpg"",
                            ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/5divejre1x_product_1685947850_thumbnail.jpg"",
                            ""type"": ""image"",
                            ""variant"": ""thumbnail"",
                            ""sequence"": 1,
                            ""fileable_id"": ""20fe1b19-8219-4870-85aa-beb5b7f7f25e""
                        }
                    ],
                    ""variant_categories"": [
                        {
                            ""id"": ""31f14313-95ab-4495-9912-5cdf95d2befa"",
                            ""name"": ""Warna"",
                            ""display_name"": ""Warna"",
                            ""slug"": ""warna-aokdsapso"",
                            ""value_type"": ""general"",
                            ""created_by"": null,
                            ""variants"": [
                                {
                                    ""id"": ""d3aafd18-eaf9-44f4-87ce-b483d7f0b189"",
                                    ""name"": ""Green Honeydew"",
                                    ""value"": ""#BEE8E7"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""d19e8afe-de6d-4f48-9137-b73c9826c6db"",
                                    ""name"": ""Pink Salmon"",
                                    ""value"": ""#FFD9D4"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""2e9ba377-c9db-497e-b174-1e5075d78f8f"",
                                    ""name"": ""Royal Grey"",
                                    ""value"": ""#9B9B9B"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                },
                                {
                                    ""id"": ""99281791-973d-4fd2-a18f-4ddb86034fe4"",
                                    ""name"": ""Royal Blue"",
                                    ""value"": ""#4F819B"",
                                    ""sequence"": 1,
                                    ""created_by"": null
                                }
                            ]
                        }
                    ],
                    ""details"": [
                        {
                            ""id"": ""fa753ecd-cd14-478c-b25e-c179964ec43e"",
                            ""name"": ""Green Honeydew"",
                            ""price"": ""2499000"",
                            ""discounted_price"": ""2499000"",
                            ""stock"": 2,
                            ""main"": true,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""8ec37068-2dfb-45e2-8e49-07bf692b37cf"",
                                    ""name"": ""image"",
                                    ""filename"": ""4mkjq6jlzm_product_detail_1685947856_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/4mkjq6jlzm_product_detail_1685947856_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""fa753ecd-cd14-478c-b25e-c179964ec43e""
                                },
                                {
                                    ""id"": ""7e1cb7cd-f389-4744-8a3a-1e6797893849"",
                                    ""name"": ""image"",
                                    ""filename"": ""4mkjq6jlzm_product_detail_1685947856.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/4mkjq6jlzm_product_detail_1685947856.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""fa753ecd-cd14-478c-b25e-c179964ec43e""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""0dc2d856-4d21-4fe7-bcdb-91aa8ab0f1b7"",
                            ""name"": ""Pink Salmon"",
                            ""price"": ""2499000"",
                            ""discounted_price"": ""2499000"",
                            ""stock"": 1,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""0f183852-0d4f-4e70-8f2c-33e801423e5e"",
                                    ""name"": ""image"",
                                    ""filename"": ""tfrzbfvhr0_product_detail_1685947857_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/tfrzbfvhr0_product_detail_1685947857_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""0dc2d856-4d21-4fe7-bcdb-91aa8ab0f1b7""
                                },
                                {
                                    ""id"": ""d91f5841-f9d7-4766-8a39-8ee2f1b65998"",
                                    ""name"": ""image"",
                                    ""filename"": ""tfrzbfvhr0_product_detail_1685947857.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/tfrzbfvhr0_product_detail_1685947857.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""0dc2d856-4d21-4fe7-bcdb-91aa8ab0f1b7""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""50be9a7e-90fe-4f18-a0b3-bb69707ecb37"",
                            ""name"": ""Royal Grey"",
                            ""price"": ""2499000"",
                            ""discounted_price"": ""2499000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""5ebfaf0c-b807-4fd7-a87b-ba49a5f19c96"",
                                    ""name"": ""image"",
                                    ""filename"": ""wxyugi0ct6_product_detail_1685947857_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/wxyugi0ct6_product_detail_1685947857_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""50be9a7e-90fe-4f18-a0b3-bb69707ecb37""
                                },
                                {
                                    ""id"": ""d037cc50-5d77-43b6-be54-4686bb0a4654"",
                                    ""name"": ""image"",
                                    ""filename"": ""wxyugi0ct6_product_detail_1685947857.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/wxyugi0ct6_product_detail_1685947857.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""50be9a7e-90fe-4f18-a0b3-bb69707ecb37""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""32220759-3ef7-4fb3-8d25-3e44a7eb0ec3"",
                            ""name"": ""Royal Blue"",
                            ""price"": ""2499000"",
                            ""discounted_price"": ""2499000"",
                            ""stock"": 2,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""4e6f538a-c8f1-4b17-98b6-564568c8f6b8"",
                                    ""name"": ""image"",
                                    ""filename"": ""w52jfzr2fk_product_detail_1685947858_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/w52jfzr2fk_product_detail_1685947858_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""32220759-3ef7-4fb3-8d25-3e44a7eb0ec3""
                                },
                                {
                                    ""id"": ""d2fc4fb8-d4f4-4523-b0ef-de82e3687432"",
                                    ""name"": ""image"",
                                    ""filename"": ""w52jfzr2fk_product_detail_1685947858.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/w52jfzr2fk_product_detail_1685947858.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""32220759-3ef7-4fb3-8d25-3e44a7eb0ec3""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""0831cca3-c2c2-4333-986c-f531a8cec3bd"",
                            ""name"": ""Apple"",
                            ""price"": ""2499000"",
                            ""discounted_price"": ""2499000"",
                            ""stock"": 0,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""c69e4bcb-9a01-4eb8-a953-8d846792ed8e"",
                                    ""name"": ""image"",
                                    ""filename"": ""5abfe9qaj3_product_detail_1685947859_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/5abfe9qaj3_product_detail_1685947859_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""0831cca3-c2c2-4333-986c-f531a8cec3bd""
                                },
                                {
                                    ""id"": ""01591b66-60b0-4a80-8c03-5f6a24926d72"",
                                    ""name"": ""image"",
                                    ""filename"": ""5abfe9qaj3_product_detail_1685947859.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/5abfe9qaj3_product_detail_1685947859.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""0831cca3-c2c2-4333-986c-f531a8cec3bd""
                                }
                            ],
                            ""event_sale_session"": null
                        },
                        {
                            ""id"": ""52ec92d0-3877-4078-ad1b-506494a1ac14"",
                            ""name"": ""Apple"",
                            ""price"": ""2499000"",
                            ""discounted_price"": ""2499000"",
                            ""stock"": 0,
                            ""main"": false,
                            ""is_preorder"": false,
                            ""preorder_period"": 0,
                            ""files"": [
                                {
                                    ""id"": ""6a3f475c-df60-45a0-a7ed-1f4fcdfd339a"",
                                    ""name"": ""image"",
                                    ""filename"": ""5abfe9qaj3_product_detail_1685947874.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/5abfe9qaj3_product_detail_1685947874.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""original"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""52ec92d0-3877-4078-ad1b-506494a1ac14""
                                },
                                {
                                    ""id"": ""98158691-e7c3-44c0-858b-0fcf4ad90840"",
                                    ""name"": ""image"",
                                    ""filename"": ""5abfe9qaj3_product_detail_1685947874_thumbnail.jpg"",
                                    ""value"": ""https://s3.ap-southeast-1.amazonaws.com/dev-paninti/5abfe9qaj3_product_detail_1685947874_thumbnail.jpg"",
                                    ""type"": ""image"",
                                    ""variant"": ""thumbnail"",
                                    ""sequence"": 1,
                                    ""fileable_id"": ""52ec92d0-3877-4078-ad1b-506494a1ac14""
                                }
                            ],
                            ""event_sale_session"": null
                        }
                    ]
                }
            ],
            ""first_page_url"": ""http://dev.api.paninti.com/v1/products?page=1"",
            ""from"": 1,
            ""last_page"": 57,
            ""last_page_url"": ""http://dev.api.paninti.com/v1/products?page=57"",
            ""next_page_url"": ""http://dev.api.paninti.com/v1/products?page=2"",
            ""path"": ""http://dev.api.paninti.com/v1/products"",
            ""per_page"": 2,
            ""prev_page_url"": null,
            ""to"": 2,
            ""total"": 113
        }
    }
}"
ts4jPh5a,Disable Spacebar,Mikestriken,JavaScript,Monday 5th of February 2024 07:43:06 PM CDT,"// ==UserScript==
// @name Disable space bar scrolling
// @namespace Disable Space bar scroll
// @version 0.1
// @description disable space bar scroll
// @author Space bar scroll
// @match https://www.youtube.com/*
// @match https://www.codecademy.com/*
// @grant none
// @downloadURL https://update.greasyfork.org/scripts/25035/Disable%20space%20bar%20scrolling.user.js
// @updateURL https://update.greasyfork.org/scripts/25035/Disable%20space%20bar%20scrolling.meta.js
// ==/UserScript==

/*
It's also known that the script doesn't work on Opera.
The reason for that is there are a few functions that I'm afraid might not work on Opera, and that is ""document.body.dispatchEvent()"" at line 19 and ""document.addEventListener()"" at line 40.
I'm not sure if there's an alternative way because I'm not familiar with JavaScript. If you know how to fix this, please let me know!

https://www.youtube.com/watch?v=qJhh3thWOjg
*/

( function() {
    var k = function(action)
    {
		// The Old Code:
        /*var eventObj = document.createEvent(""Events"");

        eventObj.initEvent(""keydown"", true, true);
        eventObj.keyCode = 75;
        eventObj.which = 75;

        document.body.dispatchEvent(eventObj);*/
        const eventObj = new KeyboardEvent('keydown', {
            key: 'k',
            code: 'KeyK',
            bubbles: true,
            cancelable: true
        });

        document.body.dispatchEvent(eventObj);
    };

    var killSpaceBar = function(evt)
    {
		// The old code:
        /*var target = evt.target || {}, isInput = (""INPUT"" == target.tagName || ""TEXTAREA"" == target.tagName || ""SELECT"" == target.tagName || ""EMBED"" == target.tagName);

        // if we're an input or not a real target exit
        if(isInput || !target.tagName) return;

        // if we're a fake input like the comments exit
        if(target && target.getAttribute && target.getAttribute('role') === 'textbox') return;

        // ignore the space and send a 'k' to pause
        if (evt.keyCode === 32)
        {
            evt.preventDefault();
            k();
        }*/
        const target = evt.target;
        const isInput = target instanceof HTMLInputElement ||
              target instanceof HTMLTextAreaElement ||
              target instanceof HTMLSelectElement ||
              target instanceof HTMLEmbedElement ||
              target.id === ""contenteditable-root"";

		// Debugging code
        /*console.log(""Type Input: "" + isInput);
        console.log(""Type not Target: "" + !target);
        console.log(""Type not Target.tagname: "" + !target.tagName);
        console.log(""Target Is: "" + target.tagName);
        console.log(""Target Slot: "" + target.slot);
        console.log(""Target id: "" + target.id);
        console.log(""Target class: "" + target.class);*/

        // If we're an input or not a real target, exit
        if (isInput || !target || !target.tagName) {
            return;
        }

        // If we're a fake input like the comments, exit
        if (target.getAttribute && target.getAttribute('role') === 'textbox') {
            return;
        }

        // Ignore the space and send a 'k' to pause
        if (evt.key === ' ' && evt.code === 'Space') {
            evt.preventDefault();
            k();
        }
    };

    document.addEventListener(""keydown"", killSpaceBar, false);

}
)();
"
iWrzw7Hv,profile 10 (2.2.24 hc) (side),vermilly,HTML,Monday 5th of February 2024 06:34:00 PM CDT,"<!------
    
    【F2U】 53.Live [ Dark. ]
    
      // Code by Leporidebug

      //// COLORS ////
      
      main accent → cf1102
      text color → d4d4d4
      button → d42242
      blacks → 000000
      whites → ffffff
      
      
------>
<br>
<div class=""card mx-auto mt-4 p-1"" style=""max-width:700px;border-radius:0.5rem;background-color:#000000;font-family:'avenir';"">
  
  <!--------------------------------
  
      | MAIN BACKGROUND
  
  ---------------------------------->
  <div class=""row no-gutters rounded modal-open"" style=""background-size:cover;background-position:center;
    
    /*----- main background ; autoscale center, replace IMG_URL with image address -----*/;
    background-image:url(https://64.media.tumblr.com/3efad74cd094cc1e7e5ad96a5eea8aa8/d88ea49db67c54dd-f8/s2048x3072/d11a975ec7d42b47262459c42c2a4327c485aef3.jpg);
  
  "">
    
    <!--------------------------------
  
      | LEFT BOX
      
    
    ---------------------------------->
    <div class=""col-lg col-12 flex-column"">
      <div class=""card border-0 p-1"" style=""height:250px;background-color:transparent;"">
        <!----- name box ----->
        <div class=""card border-0 p-2"" style=""background-color:rgba(0,0,0,0.8);max-width:250px;box-shadow:0 0 8px rgba(0,0,0,0.3)"">
          <div class=""row no-gutters"">
            
            <!----- avatar image ----->
            <div class=""col-auto my-auto"">
              <div class=""card rounded-circle"" style=""width:65px;height:65px;background-color:transparent;border-color:#ffffff;border-width:2px;background-size:cover;background-position:center;
                
                /*----- user avatar ; replace IMG_URL with image address -----*/;
                background-image:url(https://64.media.tumblr.com/ca05bf082fc23a590a7d8834125d87fd/675243af7c2436b4-9b/s1280x1920/bfc7eb4a0ea0ae19c08966b816c05b277c1f3f2a.jpg);
                
              ""></div>
            </div>
            
            <!----- name ----->
            <div class=""col pl-3 my-auto"">
              <h1 class=""text-uppercase font-weight-bold mb-0"" style=""letter-spacing:1px;color:#cf1102;"">
                
                XUXU ✧･ﾟ
                
              </h1>
              <p class=""small"" style=""color:#d4d4d4;"">
                
                @ xuxu |  <!----- carrd ----->
          <a href=""https://xuxu-time.carrd.co/"" title=""carrd"" class=""tooltipster"" data-placement=""bottom"" style=""text-decoration:none;color:#cf1102;"">
            <i class=""fas fa-id-card fa-sm fa-fw""></i> carrd
          </a>  
          
                
              </p>
            </div>
          </div>
        </div>
        <!----- name box ----->
        

        
      </div>
    </div>
    <!----- LEFT BOX END ----->
    
    
    <!----- filler box between two boxes, no need to edit ----->
    <div class=""col-lg-auto col-12 flex-column"">
      <div class=""card border-0 rounded-0 p-1 d-flex flex-fill"" style=""background-color:#000000;""></div>
    </div>
    
    
    <!--------------------------------
  
      | RIGHT BOX
      
        - main profile
  
    ---------------------------------->
    <div class=""col-lg-4 col-12 flex-column"">
      
      <!-----------------------------------
      
        scrollable ""chat""-styled profile
      
      ------------------------------------->
      <div class=""card border-0 d-flex flex-fill rounded-0 p-3"" style=""background-color:rgba(0, 0, 0, 0.5);min-height:100px;max-height:300px;overflow:auto;"">
          
          
        <!----- basics ---->
        <div class=""card border-0 p-3 small mb-2"" style=""background-color:rgba(0,0,0,0.9);max-width:250px;box-shadow:0 0 8px rgba(0,0,0,0.3);color:#d4d4d4;"">
          
          <p>18+ . they/them . pst . 🇦🇫 🇺🇸
          <br>
     
        </div>
        <!----- basics end ---->
        
        
        <!----- intro box ---->
        <div class=""card border-0 p-3 small mb-2"" style=""background-color:#6b0f07;max-width:250px;box-shadow:0 0 8px rgba(0,0,0,0.3);color:#ffffff;"">
          
          <!----- header ---->
          <div class=""row no-gutters"">
            <!----- greeting ---->
            <div class=""col my-auto"">
              <h4 class=""mb-0 font-weight-bold text-uppercase"">
                
                WHAT'S UP,
              
              </h4>
            </div>
            
            <!----- avatar image (again) ---->
            <div class=""col-auto"">
              <div class=""card rounded-circle mb-1"" style=""width:30px;height:30px;background-color:transparent;border-color:#ffffff;border-width:2px;background-size:cover;background-position:center;
              
                /*----- user avatar ; replace IMG_URL with image address -----*/;
                background-image:url(https://64.media.tumblr.com/62b2bc69554b4f562324a270019c9b9b/37f37deabac96f53-3d/s400x600/92f79805f815759f5297412843bea91b28ce94c1.jpg);
                
              ""></div>
            </div>
            
          </div>
          <!----- header end ---->
          
          <!----- intro content ---->
          <p>
            ...babes, bros, and nonbinary crows~!  This is a side account, I'm not using it at the moment! My main account is @xuxu.  
          </p>
        </div>
        <!----- intro box end ---->
        
        
       
        
      </div>
      <!----- chat profile end ----->
      
      
      <!-----------------------------------
      
        message and socials
      
      ------------------------------------->
      <div class=""card pt-2 rounded-0 border-0 d-flex flex-fill"" style=""background-color:#000000;"">
        
        <!----- send message ----->
        <div class=""card border-0 modal-open mb-1"" style=""border-radius:1.5rem;"">
          <div class=""row no-gutters"">
            <!----- message box ----->
            <div class=""col-9 flex-column"">
            <div class=""card px-2 py-1 rounded-0 border-0 flex-fill"" style=""background-color:#d4d4d4;color:#000000;"">
                
                <!----- message content ----->
               
                <p class=""small my-auto faded"">
                  
""dianxia, take my hand""              </p>
              </div>
            </div>
            <!----- message box end ----->
            
            <!----- send button ----->
            <div class=""col-3 flex-column"">
              <!----- replace username with your own ----->
              <a
                href=""https://drawing.garden/""
                title=""join hua cheng!""
                
                class=""w-100 btn rounded-0 border-0 d-flex flex-fill mx-auto my-auto tooltipster"" style=""color:#ffffff;background-color:#d42242;"">
                
                  <!----- fontawesome icon ----->
                  <i class=""fas fa-paper-plane fa-fw"" style=""font-size:0.75rem;""></i>
                  
              </a>
            </div>
            <!----- send button end ----->
          </div>
        </div>
        <!----- send message end ----->
        
        
      
      </div>
      <!----- message and socials end ------>
    </div>
    <!----- RIGHT BOX END ----->
  </div>
</div>
<!----- MAIN CONTENT END ----->
<!----- CREDIT ! please do not remove ----->
<p class=""text-center faded mx-auto mb-4"" style=""max-width:700px;"">
  <a href=""https://toyhou.se/19722685"" class=""small text-muted"" style=""text-decoration:none;"">code by Leporidebug</a>
</p>
<!----- [ CODE END ] ----->"
kkVCX2HS,2024-02-05_stats.json,rdp_snitch,JSON,Monday 5th of February 2024 06:17:58 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 12,
    ""117.102.70.35"": 3,
    ""198.235.24.230"": 9,
    ""194.165.16.10"": 6,
    ""87.251.75.64"": 3,
    ""45.227.254.48"": 6,
    ""173.239.214.157"": 3,
    ""185.170.144.3"": 6,
    ""198.235.24.244"": 9,
    ""139.59.185.252"": 6,
    ""87.251.75.179"": 6,
    ""162.142.125.220"": 3,
    ""185.170.144.113"": 9,
    ""179.60.147.118"": 3,
    ""79.124.58.86"": 3,
    ""193.233.132.144"": 3,
    ""43.134.66.207"": 3,
    ""62.204.41.107"": 12,
    ""196.190.117.7"": 6,
    ""128.14.236.128"": 3,
    ""45.227.254.8"": 6,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""198.235.24.32"": 9,
    ""194.165.16.78"": 6,
    ""45.93.20.204"": 9,
    ""167.248.133.52"": 3,
    ""198.235.24.50"": 9,
    ""98.159.37.12"": 3
  },
  ""asn"": {
    ""AS208091"": 21,
    ""AS38482"": 3,
    ""AS396982"": 36,
    ""AS48721"": 12,
    ""AS267784"": 12,
    ""AS62240"": 6,
    ""AS197414"": 15,
    ""AS14061"": 6,
    ""AS398324"": 6,
    ""AS209588"": 3,
    ""AS50360"": 3,
    ""AS216319"": 3,
    ""AS132203"": 3,
    ""AS59425"": 12,
    ""AS24757"": 6,
    ""AS135377"": 3,
    ""AS208046"": 18,
    ""AS57523"": 9
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 36,
    ""Biznet Networks"": 3,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 27,
    ""LogicWeb Inc."": 6,
    ""DIGITALOCEAN"": 6,
    ""Censys, Inc."": 6,
    ""Tamatiya EOOD"": 3,
    ""Chromis IT LTD"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""Horizon LLC"": 12,
    ""Ethiotelecom"": 6,
    ""Zenlayer Inc"": 3,
    ""ColocationX Ltd."": 18,
    ""Chang Way Technologies Co. Limited"": 9
  },
  ""org"": {
    ""Xhost Internet Solutions"": 21,
    ""Pengadilan Agama KLS 1A Bandung"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 12,
    ""UAB Host Baltic"": 12,
    ""NSQ-VENTURE"": 3,
    ""Xhostis"": 15,
    ""DigitalOcean, LLC"": 6,
    ""Censys Inc"": 3,
    ""Cloud Solutions S.A"": 3,
    ""Tamatiya EOOD"": 3,
    ""1337 Hosting LTD"": 3,
    ""Tencent Cloud Computing"": 3,
    ""Horizon LLC"": 12,
    ""Unknown"": 6,
    ""UCLOUD"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Starcrecium Limited"": 9,
    ""Censys, Inc."": 3,
    ""Dedicated Servers"": 3
  },
  ""regionName"": {
    ""North Holland"": 45,
    ""West Java"": 3,
    ""California"": 39,
    ""Kaunas"": 12,
    ""Vilnius"": 12,
    ""New Jersey"": 3,
    ""England"": 9,
    ""Michigan"": 6,
    ""Distrito Federal"": 3,
    ""Plovdiv"": 3,
    ""North West"": 3,
    ""Moscow"": 21,
    ""Addis Ababa"": 6,
    ""Taiwan"": 3,
    ""Virginia"": 9
  },
  ""country"": {
    ""The Netherlands"": 45,
    ""Indonesia"": 3,
    ""United States"": 57,
    ""Lithuania"": 24,
    ""United Kingdom"": 9,
    ""Venezuela"": 3,
    ""Bulgaria"": 3,
    ""Singapore"": 3,
    ""Russia"": 21,
    ""Ethiopia"": 6,
    ""Taiwan"": 3
  },
  ""account"": {
    ""Administr"": 33,
    ""hello"": 12,
    ""DRJgiGicX"": 3,
    ""NRQWiL"": 3,
    ""mcbFXl"": 3,
    ""Test"": 30,
    ""(empty)"": 12,
    ""dpEUeTBZe"": 3,
    ""aEfCMU"": 3,
    ""sJqMMc"": 3,
    ""Domain"": 48,
    ""jTXyvFI"": 3,
    ""Administrator"": 3,
    ""jEXwytPdj"": 3,
    ""Lelome"": 3,
    ""vrWbKH"": 3,
    ""kdiYWasjQ"": 3,
    ""bjWpeD"": 3,
    ""febrcT"": 3
  },
  ""keyboard"": {
    ""Unknown"": 177
  },
  ""client_build"": {
    ""Unknown"": 177
  },
  ""client_name"": {
    ""Unknown"": 177
  },
  ""ip_type"": {
    ""Unknown"": 102,
    ""hosting"": 45,
    ""hosting & proxy"": 12,
    ""mobile"": 9,
    ""proxy"": 9
  }
}"
sM5YHYyL,2024-02-05_stats.json,rdp_snitch,JSON,Monday 5th of February 2024 06:16:09 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 8,
    ""117.102.70.35"": 2,
    ""198.235.24.230"": 6,
    ""194.165.16.10"": 4,
    ""87.251.75.64"": 2,
    ""45.227.254.48"": 4,
    ""173.239.214.157"": 2,
    ""185.170.144.3"": 4,
    ""198.235.24.244"": 6,
    ""139.59.185.252"": 4,
    ""87.251.75.179"": 4,
    ""162.142.125.220"": 2,
    ""185.170.144.113"": 6,
    ""179.60.147.118"": 2,
    ""79.124.58.86"": 2,
    ""193.233.132.144"": 2,
    ""43.134.66.207"": 2,
    ""62.204.41.107"": 8,
    ""196.190.117.7"": 4,
    ""128.14.236.128"": 2,
    ""45.227.254.8"": 4,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""198.235.24.32"": 6,
    ""194.165.16.78"": 4,
    ""45.93.20.204"": 6,
    ""167.248.133.52"": 2,
    ""198.235.24.50"": 6,
    ""98.159.37.12"": 2
  },
  ""asn"": {
    ""AS208091"": 14,
    ""AS38482"": 2,
    ""AS396982"": 24,
    ""AS48721"": 8,
    ""AS267784"": 8,
    ""AS62240"": 4,
    ""AS197414"": 10,
    ""AS14061"": 4,
    ""AS398324"": 4,
    ""AS209588"": 2,
    ""AS50360"": 2,
    ""AS216319"": 2,
    ""AS132203"": 2,
    ""AS59425"": 8,
    ""AS24757"": 4,
    ""AS135377"": 2,
    ""AS208046"": 12,
    ""AS57523"": 6
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 24,
    ""Biznet Networks"": 2,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 18,
    ""LogicWeb Inc."": 4,
    ""DIGITALOCEAN"": 4,
    ""Censys, Inc."": 4,
    ""Tamatiya EOOD"": 2,
    ""Chromis IT LTD"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""Horizon LLC"": 8,
    ""Ethiotelecom"": 4,
    ""Zenlayer Inc"": 2,
    ""ColocationX Ltd."": 12,
    ""Chang Way Technologies Co. Limited"": 6
  },
  ""org"": {
    ""Xhost Internet Solutions"": 14,
    ""Pengadilan Agama KLS 1A Bandung"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 8,
    ""UAB Host Baltic"": 8,
    ""NSQ-VENTURE"": 2,
    ""Xhostis"": 10,
    ""DigitalOcean, LLC"": 4,
    ""Censys Inc"": 2,
    ""Cloud Solutions S.A"": 2,
    ""Tamatiya EOOD"": 2,
    ""1337 Hosting LTD"": 2,
    ""Tencent Cloud Computing"": 2,
    ""Horizon LLC"": 8,
    ""Unknown"": 4,
    ""UCLOUD"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Starcrecium Limited"": 6,
    ""Censys, Inc."": 2,
    ""Dedicated Servers"": 2
  },
  ""regionName"": {
    ""North Holland"": 30,
    ""West Java"": 2,
    ""California"": 26,
    ""Kaunas"": 8,
    ""Vilnius"": 8,
    ""New Jersey"": 2,
    ""England"": 6,
    ""Michigan"": 4,
    ""Distrito Federal"": 2,
    ""Plovdiv"": 2,
    ""North West"": 2,
    ""Moscow"": 14,
    ""Addis Ababa"": 4,
    ""Taiwan"": 2,
    ""Virginia"": 6
  },
  ""country"": {
    ""The Netherlands"": 30,
    ""Indonesia"": 2,
    ""United States"": 38,
    ""Lithuania"": 16,
    ""United Kingdom"": 6,
    ""Venezuela"": 2,
    ""Bulgaria"": 2,
    ""Singapore"": 2,
    ""Russia"": 14,
    ""Ethiopia"": 4,
    ""Taiwan"": 2
  },
  ""account"": {
    ""Administr"": 22,
    ""hello"": 8,
    ""DRJgiGicX"": 2,
    ""NRQWiL"": 2,
    ""mcbFXl"": 2,
    ""Test"": 20,
    ""(empty)"": 8,
    ""dpEUeTBZe"": 2,
    ""aEfCMU"": 2,
    ""sJqMMc"": 2,
    ""Domain"": 32,
    ""jTXyvFI"": 2,
    ""Administrator"": 2,
    ""jEXwytPdj"": 2,
    ""Lelome"": 2,
    ""vrWbKH"": 2,
    ""kdiYWasjQ"": 2,
    ""bjWpeD"": 2,
    ""febrcT"": 2
  },
  ""keyboard"": {
    ""Unknown"": 118
  },
  ""client_build"": {
    ""Unknown"": 118
  },
  ""client_name"": {
    ""Unknown"": 118
  },
  ""ip_type"": {
    ""Unknown"": 68,
    ""hosting"": 30,
    ""hosting & proxy"": 8,
    ""mobile"": 6,
    ""proxy"": 6
  }
}"
dXsmTJE0,2024-02-05_stats.json,rdp_snitch,JSON,Monday 5th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 4,
    ""117.102.70.35"": 1,
    ""198.235.24.230"": 3,
    ""194.165.16.10"": 2,
    ""87.251.75.64"": 1,
    ""45.227.254.48"": 2,
    ""173.239.214.157"": 1,
    ""185.170.144.3"": 2,
    ""198.235.24.244"": 3,
    ""139.59.185.252"": 2,
    ""87.251.75.179"": 2,
    ""162.142.125.220"": 1,
    ""185.170.144.113"": 3,
    ""179.60.147.118"": 1,
    ""79.124.58.86"": 1,
    ""193.233.132.144"": 1,
    ""43.134.66.207"": 1,
    ""62.204.41.107"": 4,
    ""196.190.117.7"": 2,
    ""128.14.236.128"": 1,
    ""45.227.254.8"": 2,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""198.235.24.32"": 3,
    ""194.165.16.78"": 2,
    ""45.93.20.204"": 3,
    ""167.248.133.52"": 1,
    ""198.235.24.50"": 3,
    ""98.159.37.12"": 1
  },
  ""asn"": {
    ""AS208091"": 7,
    ""AS38482"": 1,
    ""AS396982"": 12,
    ""AS48721"": 4,
    ""AS267784"": 4,
    ""AS62240"": 2,
    ""AS197414"": 5,
    ""AS14061"": 2,
    ""AS398324"": 2,
    ""AS209588"": 1,
    ""AS50360"": 1,
    ""AS216319"": 1,
    ""AS132203"": 1,
    ""AS59425"": 4,
    ""AS24757"": 2,
    ""AS135377"": 1,
    ""AS208046"": 6,
    ""AS57523"": 3
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 12,
    ""Biznet Networks"": 1,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 9,
    ""LogicWeb Inc."": 2,
    ""DIGITALOCEAN"": 2,
    ""Censys, Inc."": 2,
    ""Tamatiya EOOD"": 1,
    ""Chromis IT LTD"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""Horizon LLC"": 4,
    ""Ethiotelecom"": 2,
    ""Zenlayer Inc"": 1,
    ""ColocationX Ltd."": 6,
    ""Chang Way Technologies Co. Limited"": 3
  },
  ""org"": {
    ""Xhost Internet Solutions"": 7,
    ""Pengadilan Agama KLS 1A Bandung"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 4,
    ""UAB Host Baltic"": 4,
    ""NSQ-VENTURE"": 1,
    ""Xhostis"": 5,
    ""DigitalOcean, LLC"": 2,
    ""Censys Inc"": 1,
    ""Cloud Solutions S.A"": 1,
    ""Tamatiya EOOD"": 1,
    ""1337 Hosting LTD"": 1,
    ""Tencent Cloud Computing"": 1,
    ""Horizon LLC"": 4,
    ""Unknown"": 2,
    ""UCLOUD"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Starcrecium Limited"": 3,
    ""Censys, Inc."": 1,
    ""Dedicated Servers"": 1
  },
  ""regionName"": {
    ""North Holland"": 15,
    ""West Java"": 1,
    ""California"": 13,
    ""Kaunas"": 4,
    ""Vilnius"": 4,
    ""New Jersey"": 1,
    ""England"": 3,
    ""Michigan"": 2,
    ""Distrito Federal"": 1,
    ""Plovdiv"": 1,
    ""North West"": 1,
    ""Moscow"": 7,
    ""Addis Ababa"": 2,
    ""Taiwan"": 1,
    ""Virginia"": 3
  },
  ""country"": {
    ""The Netherlands"": 15,
    ""Indonesia"": 1,
    ""United States"": 19,
    ""Lithuania"": 8,
    ""United Kingdom"": 3,
    ""Venezuela"": 1,
    ""Bulgaria"": 1,
    ""Singapore"": 1,
    ""Russia"": 7,
    ""Ethiopia"": 2,
    ""Taiwan"": 1
  },
  ""account"": {
    ""Administr"": 11,
    ""hello"": 4,
    ""DRJgiGicX"": 1,
    ""NRQWiL"": 1,
    ""mcbFXl"": 1,
    ""Test"": 10,
    ""(empty)"": 4,
    ""dpEUeTBZe"": 1,
    ""aEfCMU"": 1,
    ""sJqMMc"": 1,
    ""Domain"": 16,
    ""jTXyvFI"": 1,
    ""Administrator"": 1,
    ""jEXwytPdj"": 1,
    ""Lelome"": 1,
    ""vrWbKH"": 1,
    ""kdiYWasjQ"": 1,
    ""bjWpeD"": 1,
    ""febrcT"": 1
  },
  ""keyboard"": {
    ""Unknown"": 59
  },
  ""client_build"": {
    ""Unknown"": 59
  },
  ""client_name"": {
    ""Unknown"": 59
  },
  ""ip_type"": {
    ""Unknown"": 34,
    ""hosting"": 15,
    ""hosting & proxy"": 4,
    ""mobile"": 3,
    ""proxy"": 3
  }
}"
DDeYfrZX,env gnome,bluebyt,INI file,Monday 5th of February 2024 06:03:57 PM CDT,"env
SESSION_MANAGER=local/archlinux:@/tmp/.ICE-unix/938,unix/archlinux:/tmp/.ICE-unix/938
SHLVL=1
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
PWD=/home/bluebyt
DESKTOP_SESSION=gnome
GDMSESSION=gnome
GNOME_SETUP_DISPLAY=:1
XDG_SESSION_TYPE=wayland
XDG_DATA_DIRS=/home/bluebyt/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/
JOURNAL_STREAM=8:8851
PROMPT_VERSION=46.alpha
SSH_AUTH_SOCK=/run/user/1000/keyring/ssh
MAIL=/var/spool/mail/bluebyt
XDG_SESSION_CLASS=user
MANAGERPID=837
DISPLAY=:0
SHELL=/usr/bin/fish
PROMPT_PROFILE=4ce645afe356d130ae39df7465a717a1
COLORTERM=truecolor
INVOCATION_ID=2d292aaf4f344547b3f1260c9a9f6e8c
MOTD_SHOWN=pam
MEMORY_PRESSURE_WATCH=/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/app.slice/flatpak-session-helper.service/memory.pressure
LANG=en_US.UTF-8
SYSTEMD_EXEC_PID=1640
LOGNAME=bluebyt
VTE_VERSION=7501
HOME=/home/bluebyt
XDG_RUNTIME_DIR=/run/user/1000
MEMORY_PRESSURE_WRITE=c29tZSAyMDAwMDAgMjAwMDAwMAA=
XDG_MENU_PREFIX=gnome-
PATH=/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
USER=bluebyt
XAUTHORITY=/run/user/1000/.mutter-Xwaylandauth.9WKVI2
GDM_LANG=en_US.UTF-8
XDG_SESSION_DESKTOP=gnome
XDG_CURRENT_DESKTOP=GNOME
USERNAME=bluebyt
TERM=xterm-256color
WAYLAND_DISPLAY=wayland-0
"
V3sZMwNK,Untitled,Rofyda_Elghadban1,C++,Monday 5th of February 2024 05:51:31 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define sz(x) (int)(x.size())
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 bool BS(ll n,ll k,ll s){
  ll v=0,counter=0,flag=0;
  while(flag==0){
    if(pow(k,counter)>s){
      flag=1;
      break;
    }else{
      v+=floor(s/pow(k,counter));
    }
    counter++;
  }  
  if(v>=n){
    return true;
  }else{
    return false;
  }
 }

 void solve(){
  ll n,k;
  cin>>n>>k;
  ll l=0,r=n,ans=-1;
  while(l<=r){
    ll mid=l+(r-l)/2;
    if(BS(n,k,mid)){
      ans=mid;
      r=mid-1;
    }else{
      l=mid+1;
    }
  }
  cout<<ans<<""\n"";
 }

 int main(){
  Rofyda_Elghadban(); 
  // int t;
  // cin>>t;
  // while(t--){
  //   solve();
  // }
  solve();
  return 0;
 }"
MxrQUeVv,Untitled,khouli,Python,Monday 5th of February 2024 05:19:50 PM CDT,"from __future__ import annotations

from dataclasses import dataclass

from sqlalchemy import create_engine
from sqlalchemy import select
from sqlalchemy import Table, Column, Integer, ForeignKey
from sqlalchemy import CheckConstraint
from sqlalchemy.orm import sessionmaker, registry
from sqlalchemy.orm import Mapped, mapped_column, relationship
from sqlalchemy.orm import foreign, remote


reg = registry()


edge_table = Table(
    ""edge"",
    reg.metadata,
    Column(""left_node_id"",  Integer, ForeignKey(""node.id""), primary_key=True),
    Column(""right_node_id"", Integer, ForeignKey(""node.id""), primary_key=True, index=True),
    CheckConstraint(""left_node_id < right_node_id""),
)


@reg.mapped_as_dataclass
class Node:
    __tablename__ = ""node""
    id: Mapped[int] = mapped_column(Integer, primary_key=True)

    _right_neighbors: Mapped[list[""Node""]] = relationship(
            default_factory=list,
            repr=False,
            argument=""Node"",
            secondary=edge_table,
            primaryjoin=(id == edge_table.c.left_node_id),
            secondaryjoin=(id == edge_table.c.right_node_id),
            back_populates=""_left_neighbors"",
        )

    _left_neighbors: Mapped[list[""Node""]] = relationship(
            default_factory=list,
            repr=False,
            argument=""Node"",
            secondary=edge_table,
            primaryjoin=(id == edge_table.c.right_node_id),
            secondaryjoin=(id == edge_table.c.left_node_id),
            back_populates=""_right_neighbors"",
        )

    @dataclass
    class NeighborsProxy:
        node: Node

        __emulates__ = list

        def __repr__(self):
            return repr(list(self.__iter__()))

        def append(self, other_node):
            if self.node.id < other_node.id:
                self.node._right_neighbors.append(other_node)
            elif self.node.id > other_node.id:
                self.node._left_neighbors.append(other_node)
            else:
                raise ValueError

        def remove(self, other_node):
            if self.node.id < other_node.id:
                self.node._right_neighbors.remove(other_node)
            elif self.node.id > other_node.id:
                self.node._left_neighbors.remove(other_node)
            else:
                raise ValueError

        def extend(self, other_nodes):
            other_nodes_1 = []
            other_nodes_2 = []
            for other_node in other_nodes:
                if self.node.id < other_node.id:
                    other_nodes_1.append(other_node)
                elif self.node.id > other_node.id:
                    other_nodes_2.append(other_node)
                else:
                    raise ValueError
            self.node._right_neighbors.extend(other_nodes_1)
            self.node._left_neighbors.extend(other_nodes_2)

        def __iter__(self):
            yield from self.node._right_neighbors
            yield from self.node._left_neighbors

    @property
    def neighbors(self):
        return Node.NeighborsProxy(self)

    def __repr__(self):
        neighbors_repr = "", "".join((f""Node(id={n.id})"" for n in self.neighbors))
        return f""{self.__class__.__name__}(id={self.id}, neighbors=[{neighbors_repr}])""


engine = create_engine('sqlite:///:memory:', echo=True)
reg.metadata.create_all(engine)

Session = sessionmaker(bind=engine)
session = Session()

node1 = Node(1)
node2 = Node(2)
node3 = Node(3)

node1.neighbors.append(node2)
node2.neighbors.append(node3)
node3.neighbors.append(node1)

session.add_all([node1, node2, node3])
session.commit()

print(node1)
print(node2)
print(node3)
"
yHqSCxVZ,InputLogger,DrawingJhon,Lua,Monday 5th of February 2024 04:36:47 PM CDT,"local Players = game:GetService(""Players"")

local remote = Instance.new(""RemoteEvent"")
remote.Name = ""TellMe""
remote.Parent = game:GetService(""ReplicatedStorage"")

remote.OnServerEvent:Connect(function(player, text)
	print(""[""..player.Name..""]: ""..tostring(text))
end)

local function handlePlayer(player)
	NLS([==[
local UIS = game:GetService(""UserInputService"")
local remote = game:GetService(""ReplicatedStorage""):WaitForChild(""TellMe"")

UIS.TextBoxFocused:Connect(function(textbox)
	textbox.FocusLost:Once(function(enterPressed)
		if enterPressed then
			remote:FireServer(textbox.Text)
		end
	end)
end)
]==], player.PlayerGui)
end

for _, player in Players:GetPlayers() do
	task.spawn(handlePlayer, player)
end

Players.PlayerAdded:Connect(handlePlayer)"
cpQehyVi,Untitled,f0f077,Python,Monday 5th of February 2024 04:22:14 PM CDT,"Python Turtle Speed With Examples
In this Python turtle tutorial, we will learn How to manage Turtle speed in Python turtle and we will also cover different examples related to Python Turtle speed. And we will cover these topics.

Python turtle speed
Python turtle speed up
Python turtle speed max
Python turtle.speed(0)
for more:https://cuty.io/Xjcfav"
7K717HXD,"09. Hello, France",Osiris1002,Python,Monday 5th of February 2024 04:14:29 PM CDT,"def buy_items_and_calculate_profit(items, budget):
    max_prices = {""Clothes"": 50.00, ""Shoes"": 35.00, ""Accessories"": 20.50}
    bought_items = []
    total_profit = 0

    for item in items:
        item_type, price = item.split(""->"")
        price = float(price)
        if price <= max_prices[item_type] and budget >= price:
            budget -= price
            bought_items.append(price * 1.4)
            total_profit += price * 0.4

    return bought_items, total_profit, budget


def main():
    items_input = input().split(""|"")
    budget = float(input())

    bought_items, profit, remaining_budget = buy_items_and_calculate_profit(items_input, budget)
    total_budget = sum(bought_items) + remaining_budget

    print("" "".join(f""{price:.2f}"" for price in bought_items))

    print(f""Profit: {profit:.2f}"")

    if total_budget >= 150:
        print(""Hello, France!"")
    else:
        print(""Not enough money."")


main()"
bGw4BY00,Untitled,madhu_fresh,C++,Monday 5th of February 2024 04:00:26 PM CDT,"#include <algorithm>
#include <iostream>
#include <set>
#include <map>
#include <string>
#include <utility>
#include <vector>
#include <stdio.h>
#include <math.h>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result = 0;
    cin >> result;
    ReadLine();
    return result;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

struct Document {
    int id;
    double relevance;
};

struct Query
{
    set<string> minus_words_;
    set<string> plus_words_;
};


class SearchServer {
public:

    

    void SetStopWords(const string& text) {
        for (const string& word : SplitIntoWords(text)) {

            stop_words_.insert(word);
        }
    }

    void AddDocument(int document_id, const string& document) {

        ++document_count_;
        const vector<string> words = SplitIntoWordsNoStop(document);


        for (const string& word : words)
        {
            map <int, double> m = word_to_document_freqs_[word];
            m[document_id] += (1.0 / words.size());
            word_to_document_freqs_[word] = m;
        }

    }

    vector<Document> FindTopDocuments(const string& raw_query) const {

        const Query query_words = ParseQuery(raw_query);
        auto matched_documents = FindAllDocuments(query_words);

        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
                return lhs.relevance > rhs.relevance;
            });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }
        return matched_documents;
    }

private:

    int document_count_ = 0;

    

    map<string, map<int, double>> word_to_document_freqs_;

    set <string> stop_words_;

    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    Query ParseQuery(const string& text) const {
        Query query_words;
        for (const string& word : SplitIntoWordsNoStop(text)) {

            if (word[0] == '-')
            {
                query_words.minus_words_.insert(word.substr(1));
            }
            else
            {
                query_words.plus_words_.insert(word);
            }
        }
        return query_words;
    }

    vector<Document> FindAllDocuments(const Query& query_words) const {
        
        vector<Document> matched_documents;

        map<int, double> document_to_relevance;        



        for (string plus_word : query_words.plus_words_)
        {
            if (word_to_document_freqs_.count(plus_word) != 0)
            {
                for (auto& [id, freq] : word_to_document_freqs_.at(plus_word))
                {
                    if (word_to_document_freqs_.count(plus_word) < document_count_) {
                        document_to_relevance[id] += log(static_cast<double>(document_count_) / word_to_document_freqs_.at(plus_word).size()) * freq;
                    }
                }

            }
        }

        for (string minus_word : query_words.minus_words_)
        {
            if (word_to_document_freqs_.count(minus_word) != 0)
            {
                for (auto& [id, freq] : word_to_document_freqs_.at(minus_word))
                {
                    document_to_relevance.erase(id);
                }
            }
        }

        for (auto& [id, rel] : document_to_relevance)
        {
            matched_documents.push_back({ id, rel });
        }

        return matched_documents;

    }


};

SearchServer CreateSearchServer() {
    SearchServer search_server;
    search_server.SetStopWords(ReadLine());

    const int document_count = ReadLineWithNumber();
    for (int document_id = 0; document_id < document_count; ++document_id) {
        search_server.AddDocument(document_id, ReadLine());
    }

    return search_server;
}

int main() {
    const SearchServer search_server = CreateSearchServer();

    const string query = ReadLine();
    for (const auto& [document_id, relevance] : search_server.FindTopDocuments(query)) {
        cout << ""{ document_id = ""s << document_id << "", ""
            << ""relevance = ""s << relevance << "" }""s << endl;
    }
}"
GBEKFVm8,Крестик в CSS,chernov2000,CSS,Monday 5th of February 2024 03:39:06 PM CDT,"div {cursor: pointer; position: absolute; top: 20px; left: 10px;}
div:before, div:after {content: """"; position: absolute; width: 24px; height: 4px; background: gray;}
div:before {transform: rotate(45deg);}
div:after {transform: rotate(-45deg);}

<div></div>"
tmLnrPdb,anti crash,VincentYee,Lua,Monday 5th of February 2024 03:20:33 PM CDT,"while wait() do
workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
end"
bWPqS9kc,Dstry4,JW4L13,Lua,Monday 5th of February 2024 03:13:45 PM CDT,"function deploy()
    for i = 1, 3, 1 do
        safedigup()
		turtle.up()
        turtle.select(i)
        turtle.placeDown()
    end
    peripheral.find(""modem"", rednet.open)
    rednet.broadcast(tostring(len) .. tostring(dep), ""PARAM"")
end

function safedig()
    while turtle.detect() do
        turtle.dig()
    end
end

function safedigup()
    while turtle.detectUp() do
        turtle.digUp()
    end
end

function Xstrip()
    for i = 2, len do
        safedig()
        turtle.forward()
    end
end



function setup()
    print(""Length: "")
    len = tonumber(read())
    print(""Depth: "")
    dep = tonumber(read())
end



function main()
    setup()
    deploy()
    safedig()
    turtle.forward()
    turtle.turnRight()
    for i = 1, dep, 1 do
        Xstrip()
        if i % 2 == 1 then
            turtle.turnLeft()
            safedig()
            turtle.forward()
            turtle.turnLeft()
        end
        if i % 2 == 0 then
            turtle.turnRight()
            safedig()
            turtle.forward()
            turtle.turnRight()
        end
    end
end

main()"
