id,title,username,language,date,content
AyPffvfW,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Tuesday 20th of February 2024 11:41:34 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_650205.pdf

Working as of:
21 February 2024"
3ChUeqsE,dsfbndry,gadungw71,PHP,Tuesday 20th of February 2024 11:24:14 PM CDT,"https://www.charidy.com/fullhdmai2024?viewmode=1
https://www.charidy.com/1708449702728347751
https://www.charidy.com/xemphim-mai-2024-fullhd-vietsub
https://www.charidy.com/XemPhimMaiFullHDVietsub
https://www.charidy.com/xemphimquyCaufullhd
https://www.charidy.com/fullhd-quy-cau-xem-phim-online
https://www.charidy.com/xemphimquycau2024vietsub
https://www.charidy.com/1708489503033777700
https://www.charidy.com/demonslayer2024
https://www.charidy.com/xemphim-madam-web-hightquality
https://www.charidy.com/fullhd-madamwebxemphim-vietsub
https://forum.webnovel.com/d/164719-xem-phim-demon-slayer-to-the-hashira-training-2024-full-hd-vietsub
https://fshppi5145.expandcart.com/index.php?route=product/product&product_id=373
https://demo.hedgedoc.org/s/Q6lTs1Xqf
https://paiza.io/projects/F5gWAe1S5M7f1igqj_ZR8A
https://pastelink.net/85h20v2p
https://rentry.co/68fuaqmh
https://glot.io/snippets/gtlyudrcbj
https://paste.ec/paste/5lInq7sS#C-KZ0nz188dypBtjDB7zlNX2jhXxJyxAP8aCCCCD/I+
https://tempaste.com/YvzufwWUyUn"
4vSWuXCd,IMAGE-ENCRYPT-DECRYPT.py,Najeebsk,Python,Tuesday 20th of February 2024 11:16:01 PM CDT,"from tkinter import *
from tkinter import filedialog

root = Tk()
root.config(bg='black')
root.title('Najeeb Secret Image')
root.geometry(""320x100"")

def encrypt_image():
    file1 = filedialog.askopenfile(mode='rb', filetype=[('Image Files', '*.jpg;*.png;*.jpeg;*.bmp;*.gif')])
    if file1 is not None:
        file_name = file1.name
        key = entry1.get(1.0, END).strip()
        fi = open(file_name, 'rb')
        image = bytearray(fi.read())
        fi.close()
        for index, value in enumerate(image):
            image[index] = value ^ int(key)
        fil = open(file_name, 'wb')
        fil.write(image)
        fil.close()
Label(root.master, text='Enter Secret Key :', font='10', bg='black', fg='yellow').place(x=10, y=10)        
entry1 = Text(root, height=1, width=16)
entry1.place(x=150, y=10)

b1 = Button(root, text=""IMAGE ENCRYPT"", command=encrypt_image)
b1.place(x=15, y=50)
b1 = Button(root, text=""IMAGE DECRYPT"", command=encrypt_image)
b1.place(x=180, y=50)

root.mainloop()
"
eSGZ8ZVD,fromgreytext.sh,howtophil,Bash,Tuesday 20th of February 2024 11:08:23 PM CDT,"#!/bin/bash
#------------------------------------------------
# A way to send images over thin text-based 
# mediums.
#
# This one is ""fromgreytext.sh""
# get ""togreytext.sh"" here: https://pastebin.com/XLFaVVdB
#
# Following the concept of SSTV (Slow Scan TV),
# that images do not need to be perfect or large
# when transmitted over thin mediums, I have made
# This pair of scripts.
#
# The first one, ""togreytext.sh"" converts an image
# into a small 26-grays grayscale image composed
# of a substitution of letters for numbers in a PGM
# uncompressed image file.
#
# ./togreytext.sh ""infile.jpg"" 128
#
# This ""compressed"" PGM can then be sent over LoRa
# or text transmission methods.
#
# Once on the other side, ""fromgreytext.sh"" can
# be run on the resulting file. It will expand
# the letter back into numbers and set the
# header correctly again.
#
# ./fromgreytext.sh captured.txt>outfile.pgm
#
# That file is then a valid uncompressed PGM
# though grayscale and smaller than the original.
# That PGM can then be converted to your image
# format of choice.
#
# ~HowToPhil 2024/02/21 00:04 EST
#------------------------------------------------

# Put the args in pretty vars
FILE=""$1""

# Expand the header into a proper line-returned pgm header
head -n 1 ""$FILE"" |tr [:space:] ""\n""; echo

# Expand the letters into their ""clamped"" grayscale values
cat ""$FILE""|tail -n +1|sed 's/./& /g'\
|sed ""s/A/0/g""\
|sed ""s/B/10/g""\
|sed ""s/C/20/g""\
|sed ""s/D/30/g""\
|sed ""s/E/40/g""\
|sed ""s/F/50/g""\
|sed ""s/G/60/g""\
|sed ""s/H/70/g""\
|sed ""s/I/80/g""\
|sed ""s/J/90/g""\
|sed ""s/K/100/g""\
|sed ""s/L/110/g""\
|sed ""s/M/120/g""\
|sed ""s/N/130/g""\
|sed ""s/O/140/g""\
|sed ""s/P/150/g""\
|sed ""s/Q/160/g""\
|sed ""s/R/170/g""\
|sed ""s/S/180/g""\
|sed ""s/T/190/g""\
|sed ""s/U/200/g""\
|sed ""s/V/210/g""\
|sed ""s/W/220/g""\
|sed ""s/X/230/g""\
|sed ""s/Y/240/g""\
|sed ""s/Z/255/g""
"
XLFaVVdB,togreytext.sh,howtophil,Bash,Tuesday 20th of February 2024 11:04:49 PM CDT,"#!/bin/bash

#------------------------------------------------
# A way to send images over thin text-based 
# mediums.
#
# This one is ""togreytext.sh""
# get ""fromgreytext.sh"" here: https://pastebin.com/eSGZ8ZVD
#
# Following the concept of SSTV (Slow Scan TV),
# that images do not need to be perfect or large
# when transmitted over thin mediums, I have made
# This pair of scripts.
#
# The first one, ""togreytext.sh"" converts an image
# into a small 26-grays grayscale image composed
# of a substitution of letters for numbers in a PGM
# uncompressed image file.
#
# ./togreyutext.sh ""infile.jpg"" 128
#
# This ""compressed"" PGM can then be sent over LoRa
# or text transmission methods.
#
# Once on the other side, ""fromgreytext.sh"" can
# be run on the resulting file. It will expand
# the letter back into numbers and set the
# header correctly again.
#
# ./fromgreytext.sh captured.txt>outfile.pgm
#
# That file is then a valid uncompressed PGM
# though grayscale and smaller than the original.
# That PGM can then be converted to your image
# format of choice.
#
# ~HowToPhil 2024/02/21 00:04 EST
#------------------------------------------------

# Put the args into pretty vars
FILE=""$1"" #The image file to convert for transmission
SQUARE=""$2"" #The squared geometry of the sent image

#Preserve the pgm header but convert the line-returns to spaces for compactness
convert ""$FILE"" -scale $SQUAREx$SQUARE -compress none pgm: |head -n3| tr ""\n"" "" ""|sed 's/^[ \t]*//;s/[ \t]*$//';echo

# Convert the image to a scaled-down version.
# Make the image greyscale.
# This will be in uncompressed PGM format.
# Clamp grey values into 26 groups which will
# be represented by upper-case letters.
# Also remove all the spaces after the number-to-letters
# but is done.
# This essentially compresses and compacts the image
# for transmission as text.

convert ""$FILE"" -scale $SQUAREx$SQUARE -compress none pgm: |sed -e 1,3d\
|sed ""s/\b[0-9]\b/A/g"" 
|sed ""s/\b1[0-9]\b/B/g""
|sed ""s/\b2[0-9]\b/C/g""
|sed ""s/\b3[0-9]\b/D/g""
|sed ""s/\b4[0-9]\b/E/g""
|sed ""s/\b5[0-9]\b/F/g""
|sed ""s/\b6[0-9]\b/G/g""
|sed ""s/\b7[0-9]\b/H/g""
|sed ""s/\b8[0-9]\b/I/g""
|sed ""s/\b9[0-9]\b/J/g""
|sed ""s/\b10[0-9]\b/K/g""
|sed ""s/\b11[0-9]\b/L/g""
|sed ""s/\b12[0-9]\b/M/g""
|sed ""s/\b13[0-9]\b/N/g""
|sed ""s/\b14[0-9]\b/O/g""
|sed ""s/\b15[0-9]\b/P/g""
|sed ""s/\b16[0-9]\b/Q/g""
|sed ""s/\b17[0-9]\b/R/g""
|sed ""s/\b18[0-9]\b/S/g""
|sed ""s/\b19[0-9]\b/T/g""
|sed ""s/\b20[0-9]\b/U/g""
|sed ""s/\b21[0-9]\b/V/g""
|sed ""s/\b22[0-9]\b/W/g""
|sed ""s/\b23[0-9]\b/X/g""
|sed ""s/\b24[0-9]\b/Y/g""
|sed ""s/\b25[0-9]\b/Z/g""
|sed 's/[[:space:]]//g'
"
Q8tAWzXK,JK KING LOADER ALL IN ONE 22,Sinbaj,Java,Tuesday 20th of February 2024 10:55:33 PM CDT,https://pastebin.com/zZGSqGVk
KsMkwNx5,袁 P01,userwei,C++,Tuesday 20th of February 2024 10:53:28 PM CDT,"int32_t main(){
    string s;
    while((cin>>s)){
        int len=s.size(),count=0;
        char a[len];
        bool pa=true;
        strcpy(a,s.c_str());
        for(int i=0;i<len;i++){
            switch(a[i]){
                case 'A':case 'H':case 'M':case 'I':case 'O':case 'T':case 'U':case 'V':case 'W':case 'X':case 'Y':case '1':case '8':
                    count++;
                    break;
            }
        }
        for(int i=0;i<len;i++){
            int tail=len-1-i;
            if(a[i]!=a[tail]){
                pa=false;
                switch (a[i]){
                    case 'E':
                        if(a[tail]=='3')
                            count++;
                        break;
                    case 'J':
                        if(a[tail]=='L')
                            count++;
                        break;
                    case 'L':
                        if(a[tail]=='J')
                            count++;
                        break;
                    case 'S':
                    if(a[tail]=='2')
                            count++;
                        break;
                    case 'Z':
                        if(a[tail]=='5')
                            count++;
                        break;
                    case '2':
                        if(a[tail]=='S')
                            count++;
                        break;
                    case '3':
                        if(a[tail]=='E')
                            count++;
                        break;
                    case '5':
                        if(a[tail]=='Z')
                            count++;
                        break;
                }
            }    
        }
        if(pa==true){
            if(count==len)
                cout<<s<<"" -- is a mirrored palindrome.\n"";
            else
                cout<<s<<"" -- is a regular palindrome.\n"";
        }
        else if(count==len)
            cout<<s<<"" -- is a mirrored string.\n"";
        else
            cout<<s<<"" -- is not a palindrome.\n"";
    }

    return 0;
}"
zZGSqGVk,JK KING LOADER ALL IN ONE,Sinbaj,Java,Tuesday 20th of February 2024 10:40:25 PM CDT,"{
version : '1.5.0',
downloadlink : 'https://jk-king-ds4.online/88DS4J/SELECTEC%20PROFILES/UPDATENEW.zip',
Message : 'Close',
changelog : 'Something Amazing',
isClose : 'true'
}"
pmLtU7kY,CMDER.PY,Najeebsk,Python,Tuesday 20th of February 2024 10:38:10 PM CDT,"import tkinter as tk
from tkinter import ttk
import subprocess

class ConsoleWindow(tk.Toplevel):
    def __init__(self, parent):
        super().__init__(parent)
        self.geometry('1000x300')
        self.title(""Najeeb CMD ALIASES COMMONDS RUNNER"")
        self.iconbitmap('C.ico')  # Add icon to the title bar
        self.text_area = tk.Text(self, wrap=""word"", state=""disabled"")
        self.text_area.pack(expand=True, fill=""both"")
        self.scrollbar = tk.Scrollbar(self, command=self.text_area.yview)
        self.scrollbar.pack(side=""right"", fill=""y"")
        self.text_area.config(yscrollcommand=self.scrollbar.set)

    def append_text(self, text, tag=None):
        self.text_area.config(state=""normal"")
        if tag:
            self.text_area.insert(""end"", text, tag)
        else:
            self.text_area.insert(""end"", text)
        self.text_area.config(state=""disabled"")
        self.text_area.see(""end"")

class AliasButtonExample(tk.Tk):
    def __init__(self):
        super().__init__()
        self.geometry('1000x340')
        self.config(bg='green')
        self.title(""Najeeb CMD ALIASES COMMONDS RUNNER"")
        self.iconbitmap('C.ico')  # Add icon to the title bar

        self.aliases = {}

        self.create_widgets()

    def create_widgets(self):
        style = ttk.Style()
        style.configure(""TButton"", foreground=""blue"", background=""lightgray"", font=('Arial', 10, 'bold'))
        style.configure(""TLabel"", foreground=""darkblue"", background=""lightgray"", font=('Arial', 10))

        tk.Label(self, text=""Command:"").grid(row=0, column=0, padx=5, pady=5)
        tk.Label(self, text=""Alias:"").grid(row=1, column=0, padx=5, pady=5)
        tk.Label(self, text=""Aliases: Najeeb New Aliases Add And Save"").grid(row=2, column=0, sticky=""n"", padx=5, pady=5)

        self.command_entry = tk.Entry(self, width=250)  # Increase width here
        self.command_entry.grid(row=0, column=1, padx=5, pady=5)

        self.alias_entry = tk.Entry(self, width=250)
        self.alias_entry.grid(row=1, column=1, padx=5, pady=5)

        self.alias_button = ttk.Button(self, text=""Insert Alias"", command=self.insert_alias, style=""TButton"")
        self.alias_button.grid(row=1, column=2, padx=5, pady=5)

        self.run_button = ttk.Button(self, text=""Run Command"", command=self.run_command, style=""TButton"")
        self.run_button.grid(row=0, column=2, rowspan=1, padx=5, pady=5, sticky=""nsew"")

        self.save_button = ttk.Button(self, text=""Save Aliases"", command=self.save_aliases, style=""TButton"")
        self.save_button.grid(row=2, column=2, padx=5, pady=5)

        self.aliases_frame = tk.Frame(self)
        self.aliases_frame.grid(row=3, column=0, columnspan=3, padx=5, pady=5, sticky=""nsew"")

        self.aliases_text = tk.Text(self.aliases_frame, wrap=""word"", state=""normal"", height=10, width=120)
        self.aliases_text.grid(row=0, column=0, padx=5, pady=5, sticky=""nsew"")

        self.aliases_scrollbar = tk.Scrollbar(self.aliases_frame, orient=""vertical"", command=self.aliases_text.yview)
        self.aliases_scrollbar.grid(row=0, column=1, sticky=""ns"")
        self.aliases_text.config(yscrollcommand=self.aliases_scrollbar.set)

        self.search_label = tk.Label(self, text=""Search Aliases:"")
        self.search_label.grid(row=4, column=0, padx=5, pady=5, sticky=""e"")
        
        self.search_entry = tk.Entry(self, width=250)
        self.search_entry.grid(row=4, column=1, padx=5, pady=5)

        self.search_button = ttk.Button(self, text=""Search"", command=self.search_aliases, style=""TButton"")
        self.search_button.grid(row=4, column=2, padx=5, pady=5)

        self.console_window = ConsoleWindow(self)

        self.grid_columnconfigure(1, weight=1)  # Expand column 1

        self.read_aliases()  # Call read_aliases to load aliases when the GUI is initialized

    def insert_alias(self):
        alias = self.alias_entry.get()
        print(f""Attempting to insert alias: {alias}"")
        if alias in self.aliases:
            print(f""Alias found: {alias}"")
            self.command_entry.delete(0, tk.END)
            self.command_entry.insert(tk.END, self.aliases[alias])
        else:
            print(""Alias not found"")

    def run_command(self):
        command = self.command_entry.get()
        process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        stdout, stderr = process.communicate()
        output = stdout.decode()
        error = stderr.decode()
        self.console_window.append_text(output)
        if error:
            self.console_window.append_text(error, tag=""error"")

    def save_aliases(self):
        with open(""Aliases.txt"", ""a"") as f:
            alias = self.alias_entry.get()
            command = self.command_entry.get()
            f.write(f""{alias}={command}\n"")
            self.aliases[alias] = command
            self.aliases_text.insert(""end"", f""{alias}: {command}\n"")  # Also update the aliases_text field

    def read_aliases(self):
        try:
            with open(""Aliases.txt"", ""r"") as f:
                for line in f:
                    if '=' in line:
                        alias, command = line.strip().split(""="", 1)
                        self.aliases[alias] = command
                        self.aliases_text.insert(""end"", f""{alias}: {command}\n"")
        except FileNotFoundError:
            # If the file doesn't exist, do nothing
            pass

    def search_aliases(self):
        query = self.search_entry.get().strip().lower()
        self.aliases_text.delete('1.0', tk.END)  # Clear previous search results
        for alias, command in self.aliases.items():
            if query in alias.lower() or query in command.lower():
                self.aliases_text.insert(tk.END, f""{alias}: {command}\n"")

if __name__ == ""__main__"":
    app = AliasButtonExample()
    app.mainloop()
"
pfxwYdj4,Error pada check book,athairrahman53,JavaScript,Tuesday 20th of February 2024 10:24:48 PM CDT,"const books = [];
const booksComplete = [];
const RENDER_EVENT = ""render-books"";
const SAVED_STORAGE_KEY = ""books"";
const SAVED_COMPLETE_STORAGE_KEY = ""booksComplete"";
const SAVED_EVENT = ""saved-books"";

// membuat fungsi untuk melihat localStorage dicukung atau tidak oleh webBrowsur
const isLocalStorageSupport = () => {
  if (typeof Storage === undefined) {
    alert(""Browsur kamu tidak mendukung local Storage"");
    return false;
  }
  return true;
};

// membuat fungsi untuk menyimpan data di localStorage
const booksSave = () => {
  if (isLocalStorageSupport()) {
    const parsed = JSON.stringify(books);
    localStorage.setItem(SAVED_STORAGE_KEY, parsed);

    const parsedBookComplete = JSON.stringify(booksComplete);
    localStorage.setItem(SAVED_COMPLETE_STORAGE_KEY, parsedBookComplete);

    document.dispatchEvent(new Event(SAVED_EVENT));
  }
};

const generateId = () => {
  return +new Date();
};

// membuat fungsi untuk menampung data book yang diinput
const inputBookObject = (id, title, author, year, isComplete) => {
  return {
    id,
    title,
    author,
    year,
    isComplete,
  };
};

// fungsi untuk melakukan letarasi pada index
const fineBookIndex = (bookId) =>
  books.findIndex((books) => books.id === bookId);

// fungsi hapus buku
const removeBookFromReadBook = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === -1) return;
  books.splice(bookTarget, 1);
  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi pindahkan buku rak selesai dibaca
const moveBookToCompleted = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === -1) return;
  books[bookTarget].isComplete = true;
  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi untuk mengembalikan buku ke book yang belum selesai;
const backToBookFromReadBook = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === null) return;
  books[bookTarget].isComplete = false;
  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi untuk mengambil element judul,penulis, tahun, dan ID
const inputDataBooks = () => {
  const generatedID = generateId();
  const inputBookTitle = document.getElementById(""inputBookTitle"").value;
  const inputBookAuthor = document.getElementById(""inputBookAuthor"").value;
  const inputBookYear = parseInt(
    document.getElementById(""inputBookYear"").value
  );

  const bookObject = inputBookObject(
    generatedID,
    inputBookTitle,
    inputBookAuthor,
    inputBookYear,
    false
  );

  books.push(bookObject);
  booksSave();
  document.dispatchEvent(new Event(RENDER_EVENT));
};

// fungsi untuk mengload data dari localstorage ketika browsur dibuka kembali
const loadBookFromLocalStorage = () => {
  try {
    const serializedBooks = localStorage.getItem(SAVED_STORAGE_KEY);
    if (serializedBooks === null) {
      return null;
    }
    let parsedBooks = JSON.parse(serializedBooks);

    books.push(...parsedBooks);
    booksSave();
    document.dispatchEvent(new Event(RENDER_EVENT));
    return parsedBooks;
  } catch (error) {
    alert(""gagal dimuat data buku"", error);
    return null;
  }
};

// fungsi untuk menampilkan data buku yang telah diinput
const displayBook = (dataBook) => {
  const bookTitle = document.createElement(""h3"");
  bookTitle.innerText = dataBook.title;

  const bookWriter = document.createElement(""p"");
  bookWriter.innerText = dataBook.author;

  const bookPublication = document.createElement(""p"");
  bookPublication.innerText = dataBook.year;

  const clearBook = document.createElement(""button"");
  clearBook.innerText = ""Hapus"";
  clearBook.classList.add(""red"");

  const finisRead = document.createElement(""button"");
  finisRead.innerText = ""Selesai"";
  finisRead.classList.add(""green"");

  const backButton = document.createElement(""button"");
  backButton.innerText = ""Kembali"";
  backButton.classList.add(""green"");

  const action = document.createElement(""div"");
  action.classList.add(""action"");
  action.append(clearBook);

  if (dataBook.isComplete) {
    action.append(backButton);
    backButton.addEventListener(""click"", () => {
      backToBookFromReadBook(dataBook.id);
    });
  } else {
    action.append(finisRead);
    finisRead.addEventListener(""click"", () => {
      moveBookToCompleted(dataBook.id);
    });
  }

  const containerBookItem = document.createElement(""article"");
  containerBookItem.classList.add(""book_item"");
  containerBookItem.append(bookTitle, bookWriter, bookPublication);
  containerBookItem.append(action);
  containerBookItem.setAttribute(""id"", `book-${dataBook.id}`);

  clearBook.addEventListener(""click"", () => {
    removeBookFromReadBook(dataBook.id);
  });
  return containerBookItem;
};

// fungsi untuk mencari judul buku
const searchBookTitle = document.getElementById(""searchBookTitle"");
searchBookTitle.addEventListener(""input"", () => {
  const keyword = searchBookTitle.value.toLowerCase();
  const filteredBooks = books.filter((book) =>
    book.title.toLowerCase().includes(keyword)
  );
  renderBooks(filteredBooks);
});

// fungsi untuk merender buku pada pencaharian
const renderBooks = (books) => {
  const incompleteBookshelfList = document.getElementById(
    ""incompleteBookshelfList""
  );
  incompleteBookshelfList.innerHTML = "" "";

  const completeBookshelfList = document.getElementById(
    ""completeBookshelfList""
  );
  completeBookshelfList.innerHTML = "" "";

  books.forEach((book) => {
    const bookElement = displayBook(book);

    if (book.isComplete) {
      incompleteBookshelfList.appendChild(bookElement);
    }
  });

  booksComplete.forEach((book) => {
    const bookElement = displayBook(book);
    // if (book.isComplete && !books.find((b) => b.id === book.id)) {
    completeBookshelfList.appendChild(bookElement);
    // }
  });
};

// membuat event submit untuk melakukan penyimpanan data pada form yang telah diinput
document.addEventListener(""DOMContentLoaded"", () => {
  const inuputAllDataBook = document.getElementById(""inputBook"");
  inuputAllDataBook.addEventListener(""submit"", (e) => {
    e.preventDefault();
    inputDataBooks();
  });

  if (isLocalStorageSupport()) {
    const loadedBooks = loadBookFromLocalStorage();
    if (!loadedBooks) {
      alert(""tidak ada buku yang disimpan"");
    }
  }
});

// Event untuk merender semua data
document.addEventListener(RENDER_EVENT, () => {
  const incompleteBookshelfList = document.getElementById(
    ""incompleteBookshelfList""
  );
  incompleteBookshelfList.innerHTML = "" "";

  const completeBookshelfList = document.getElementById(
    ""completeBookshelfList""
  );
  completeBookshelfList.innerHTML = "" "";

  for (const bookItem of books) {
    const bookElement = displayBook(bookItem);
    if (bookItem.isComplete) {
      completeBookshelfList.append(bookElement);
    } else {
      incompleteBookshelfList.append(bookElement);
    }
  }
});

// event untuk melakukan agar book yang diinput ketika dilakukan checkbook langsung masuk ke rak selesai dibaca
const inputBookForm = document.getElementById(""inputBook"");
inputBookForm.addEventListener(""submit"", (e) => {
  e.preventDefault();
  const inputBookTitle = document.getElementById(""inputBookTitle"").value;
  const inputBookAuthor = document.getElementById(""inputBookAuthor"").value;
  const inputBookYear = parseInt(
    document.getElementById(""inputBookYear"").value
  );
  // fungsi untuk melakukan checklist pada book input buku yang sudah selesai dibaca
  const inputBookIsComplete = document.getElementById(
    ""inputBookIsComplete""
  ).checked;

  const bookObject = inputBookObject(
    generateId(),
    inputBookTitle,
    inputBookAuthor,
    inputBookYear,
    inputBookIsComplete
  );

  if (inputBookIsComplete) {
    booksComplete.push(bookObject);
  } else {
    books.push(bookObject);
  }

  booksSave();
  document.dispatchEvent(new Event(RENDER_EVENT));
  // if (isComplete) {
  //   renderBooks(booksComplete);
  // } else {
  // //   renderBooks(books);
  // }
  renderBooks();
});
"
QWfHNfBR,Insere texto com quebra de linha na IMAGEM,MizunoBrasil,JavaScript,Tuesday 20th of February 2024 10:02:13 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Enviar Imagem</title>
  <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"">
  <style>
    #imageContainer {
      position: relative;
      display: inline-block;
    }
    #textOverlay {
      position: absolute;
      bottom: 10px;
      right: 10px;
      color: white;
      font-size: 18px;
      text-shadow: 2px 2px 2px black;
      background-color: rgba(0, 0, 0, 0.5);
      padding: 10px;
      border-radius: 5px;
      white-space: pre-wrap; /* Para manter quebras de linha */
    }
  </style>
</head>
<body>
  <div class=""container mt-5"">
    <form id=""imageForm"" enctype=""multipart/form-data"">
      <div class=""form-group"">
        <label for=""image"">Selecione uma imagem:</label>
        <input type=""file"" class=""form-control-file"" id=""image"" accept=""image/*"" required>
      </div>
      <div class=""form-group"">
        <label for=""caption"">Insira o texto desejado:</label>
        <textarea class=""form-control"" id=""caption"" rows=""3""></textarea>
      </div>
      <button type=""submit"" class=""btn btn-primary"">Enviar</button>
    </form>
  </div>

  <script>
    document.getElementById('imageForm').addEventListener('submit', function(event) {
      event.preventDefault();
      const fileInput = document.getElementById('image');
      const file = fileInput.files[0];
      const caption = document.getElementById('caption').value.trim(); // Obter texto do textarea e remover espaços em branco extras
      
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          const imageData = e.target.result;
          const image = new Image();
          image.src = imageData;
          
          image.onload = function() {
            const canvas = document.createElement('canvas');
            const context = canvas.getContext('2d');
            canvas.width = image.width;
            canvas.height = image.height;
            context.drawImage(image, 0, 0);
            
            context.fillStyle = 'white';
            context.font = '18px Arial';
            context.textAlign = 'right';
            context.textBaseline = 'bottom';

            const lines = caption.split('\n').reverse(); // Invertendo a ordem das linhas
            const lineHeight = 25;
            lines.forEach((line, index) => {
              context.fillText(line, canvas.width - 10, canvas.height - 10 - (index * lineHeight));
            });

            const imageWithText = canvas.toDataURL('image/png');
            const link = document.createElement('a');
            link.href = imageWithText;
            link.download = 'image_with_text.png';
            link.click();
          };

        }
        reader.readAsDataURL(file);
      }
    });
  </script>
</body>
</html>
"
4W2Quiey,atomic snowybot,coinwalk,JavaScript,Tuesday 20th of February 2024 09:58:20 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var madman = 0.0001;
var tens = (madman*10);
var sevens = (madman*6.9);
var eights = (madman*7.9);
var fran = madman;
var norbble = original;
var james = ((Math.floor(original/tens))*tens);
var filfy = ((Math.floor(original/tens))*tens);
var stinky = 6.9;
var smelly = 2.9;
var fart = 1;
var good = (((norbble-original)*1).toFixed(8));
 
function dobet(){
norbble = document.getElementById('pct_balance').value;
good = (((norbble-original)*1).toFixed(8));
console.log(""profit"");
console.log(good);
if (norbble>(filfy+(fran*stinky))){
    stinky = 4.9;
    smelly = 4.9;
    fran = fran*2;
    filfy = parseFloat(norbble);
}  
if (norbble<(filfy-(fran*smelly))){
    stinky = 4.9;
    smelly = 4.9;
    fran = fran*2;
    fart = 0;
    filfy = parseFloat(norbble);
}
if ((norbble>=(james+(tens*fart)))&&(norbble<(((Math.floor(norbble/tens))*tens)+sevens))){
    stinky = 6.9;
    smelly = 2.9;
    fart = 1;
    fran = madman;
    filfy = ((Math.floor(norbble/tens))*tens);
    james = ((Math.floor(norbble/tens))*tens);
}
if (norbble>=150000){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((fran*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1);
} 
dobet();"
sdqeb8Kt,Quarry,deaddigger,Lua,Tuesday 20th of February 2024 08:55:52 PM CDT,"--needs fuel in 1, EnderStorage Chest with fuel in 2, EnderStorage Chest to clear inventory in 3(needs to be cleaned in some way in between) and a chunkloader in 4

local args = {...}
local Z -- deepth
local X -- width
local Y -- height
local DIRECTION -- left(1) or right(0)

--[[
	GET ARGS
]]--

if (#args == 1) then
        Z,X,Y,DIRECTION = tonumber(args[1]),tonumber(args[1]),256,0
elseif (#args == 2) then
        Z,X,Y,DIRECTION = tonumber(args[1]),tonumber(args[2]),256,0
elseif (#args == 3) then
        Z,X,Y,DIRECTION = tonumber(args[1]),tonumber(args[2]),tonumber(args[3]),0
elseif (#args >= 4) then
        Z,X,Y,DIRECTION = tonumber(args[1]),tonumber(args[2]),tonumber(args[3]),tonumber(args[4])
else
        print( ""Usage: quarry <sq. size/depth> <optional width > <optional fixed height>"" )
        return
end

local function clearInventoryToEnderChest()
 
  turtle.select(2)
  turtle.dig()
  turtle.place()
 
  for i=5,16 do
    while not (turtle.getItemCount(i)==0) do
 
      turtle.select(i)
      turtle.drop()
 
      if not (turtle.getItemCount(i)==0) then
        sleep(60)
      end
    end
  end
  turtle.select(2)
  turtle.dig()
 return true
end
 
local function getFuelFromEnderChest()
  turtle.select(1)
  turtle.dig()
  turtle.place()
  turtle.suck()
  while not (turtle.refuel(0)) do
    turtle.drop()
    sleep(60)
    turtle.suck()
  end
  turtle.dig()  
end

local function checkFreeSlot()
    for i=1,16 do
        if turtle.getItemCount(i)==0 then
			return
        end
    end
    clearInventoryToEnderChest()
end

local function refuelIfNeeded(moves)
	local fuelLevel = turtle.getFuelLevel()
	if (fuelLevel<=moves) then 
	if not (turtle.refuel(0)) then
		getFuelFromEnderChest()
	end
	end
end

local function digStep()
      turtle.digUp()
      turtle.dig()
      turtle.digDown()
	  checkFreeSlot()
end

local function digLine()
    for i=1,Z-1 do
      digStep()
      turtle.forward()
    end
	turtle.digUp()
    turtle.digDown()
	refuelIfNeeded(Z-1)
end

local function moveLine()
    for i=1,Z-1 do
      turtle.forward()
    end
end
  
local function digLevelRight()
	turtle.digDown()
	turtle.down()
    for i=1,X-1 do
		if (i % 2 == 0) then
			digLine()
			turtle.turnLeft()
			turtle.dig()
			turtle.forward()
			turtle.turnLeft()
		else
			digLine()
			turtle.turnRight()
			turtle.dig()
			turtle.forward()
			turtle.turnRight()
		end
    end
	digLine()
	turtle.turnRight()
	turtle.turnRight()
end

local function digLevelLeft()
	turtle.digDown()
	turtle.down()
    for i=1,X-1 do
		if (i % 2 == 0) then
			digLine()
			turtle.turnRight()
			turtle.dig()
			turtle.forward()
			turtle.turnRight()
		else
			digLine()
			turtle.turnLeft()
			turtle.dig()
			turtle.forward()
			turtle.turnLeft()
		end
    end
	digLine()
	turtle.turnLeft()
	turtle.turnLeft()
end
	
	  
local function QuarryRight()
	refuelIfNeeded(Z)
	digLevelRight()
	for i=2,Y/3 do
		turtle.digDown()
		turtle.down()
		turtle.digDown()
		turtle.down()
		digLevelRight()
	end
end

local function QuarryLeft()
	refuelIfNeeded(Z)
	digLevelLeft()
	for i=2,Y/3 do
		turtle.digDown()
		turtle.down()
		turtle.digDown()
		turtle.down()
		digLevelLeft()
	end
end
	
--[[
 
  MAIN PROGRAM
 
--]]

getFuelFromEnderChest()
turtle.digUp()
turtle.select(4)
turtle.placeUp()
while true do
	if (DIRECTION == 0) then	
		QuarryRight()
	else 
		QuarryLeft()
	end
	if (Y/3 % 2 > 1) then
		refuelIfNeeded(Y-1)
		for i=1,Y-1 do 
			turtle.up()
		end
	else
		if (X % 2 == 0) then
			if (DIRECTION == 0) then
			turtle.turnLeft()
			refuelIfNeeded(X-1)
				for i=1,X-1 do
					turtle.forward()
				end
				turtle.turnRight()
				refuelIfNeeded(Y-1)
				for i=1,Y-1 do 
					turtle.up()
				end
			else
				if (DIRECTION == 0) then
					turtle.turnRight()
					refuelIfNeeded(X-1)
					for i=1,X-1 do
						turtle.forward()
					end
					turtle.turnLeft()
					refuelIfNeeded(Y-1)
					for i=1,Y-1 do 
						turtle.up()
					end
				end
			end
		else
			if (X==1) then
				digLine()
				turtle.turnLeft()
				turtle.turnLeft()
				refuelIfNeeded(Y-1)
				for i=1,Y-1 do 
					turtle.up()
				end
			else
				if (DIRECTION == 1) then
				turtle.turnRight()
				refuelIfNeeded(X-1)
					for i=1,X-1 do
						turtle.forward()
					end
					turtle.turnRight()
					refuelIfNeeded(Y-1)
					for i=1,Y-1 do 
						turtle.up()
					end
				else
					if (DIRECTION == 0) then
						turtle.turnLeft()
						refuelIfNeeded(X-1)
						for i=1,X-1 do
							turtle.forward()
						end
						turtle.turnLeft()
						refuelIfNeeded(Y-1)
						for i=1,Y-1 do 
							turtle.up()
						end
					end
				end
			end
		end
	end
	-- set new Chunkloader
	moveLine()
	turtle.digUp()
	turtle.select(4)
	turtle.placeUp()
	--remove old chunkloader
	turtle.turnLeft()
	turtle.turnLeft()
	moveLine()
	turtle.digUp()
	--go back to new start
	turtle.turnLeft()
	turtle.turnLeft()
	moveLine()
end	
	"
2Pgci7Ue,djlightlaser be,CreativeMasterBonin,Java,Tuesday 20th of February 2024 08:45:23 PM CDT,"public class DJLaserLightBE extends BlockEntity {
    public int ticks;
    public boolean hidePose;
    public int distance = 16;
    public int color = 0;
    public DJLaserLightBE(BlockPos pPos, BlockState pBlockState) {
        super(TBlockEntities.DJ_LASER_LIGHT_BE.get(), pPos, pBlockState);
    }

    public ClientboundBlockEntityDataPacket getUpdatePacket(){return ClientboundBlockEntityDataPacket.create(this);}

    public static void clientTick(Level lvl, BlockPos bp, BlockState bs, DJLaserLightBE be){
        ++be.ticks;
        if(!be.getLevel().hasNearbyAlivePlayer((double)bp.getX() + 0.5, (double)bp.getY() + 0.5, (double)bp.getZ() + 0.5, 8)){
            be.hidePose = true;
        }
        else{
            be.hidePose = false;
        }
    }

    @Override
    protected void saveAdditional(CompoundTag pTag) {
        super.saveAdditional(pTag);
    }

    @Override
    public void load(CompoundTag pTag) {
        super.load(pTag);
    }

    public static void serverTick(Level slvl, BlockPos sbp, BlockState sbs, DJLaserLightBE sbe){
        ++sbe.ticks;
    }
}"
eRyr5Ntd,Mad,Unknown_No_1,PHP,Tuesday 20th of February 2024 08:10:38 PM CDT,MadGamerTG
Xy0vGFCk,Archival Log,Alexr360,Lua,Tuesday 20th of February 2024 07:30:12 PM CDT,"-- Function to log item changes in a chest
local function logItemChanges()
	local chest = peripheral.find(""storagedrawers:controller"")
    local itemsBefore = {}
    
    -- Store item counts before waiting
    for _, item in pairs(chest.list()) do
        itemsBefore[item.name] = item.count
    end

    -- Wait for 1 minute
    sleep(15)

    local itemsAfter = {}
    
    -- Store item counts after waiting
    for _, item in pairs(chest.list()) do
        itemsAfter[item.name] = item.count
    end

    -- Compare item counts before and after
    for name, countBefore in pairs(itemsBefore) do
        local countAfter = itemsAfter[name] or 0
        local countChange = countAfter - countBefore
        if countChange ~= 0 then
            print(""Item '"" .. name .. ""' count changed by "" .. countChange)
        end
    end
end

-- Main loop
while true do
    logItemChanges()
end
"
45adBYhZ,StarTest,cepxuozab,C++,Tuesday 20th of February 2024 06:27:35 PM CDT,"void StarTest() {
        {
            Document doc;
            Star s(Point{50.0, 20.0}, 10.0, 4.0, 5);
            s.Draw(doc);
            doc.Render(cout);
            cout << endl;
        } {
            Document doc;
            Star s(Point{30.0, 20.0}, 13.0, 2.0, 1);
            s.Draw(doc);
            doc.Render(cout);
             cout << endl;
              cout << endl;
               cout << endl;
        }
    }


<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <polyline points=""50,10 52.3511,16.7639 59.5106,16.9098 53.8042,21.2361 55.8779,28.0902 50,24 44.1221,28.0902 46.1958,21.2361 40.4894,16.9098 47.6489,16.7639 50,10"" fill=""red"" stroke=""black""/>
</svg>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <polyline points=""30,7 30,22 30,7"" fill=""red"" stroke=""black""/>
</svg>

"
qVxWp5QM,Nigerian scammers [20-2-2/2024],bombaires,AIMMS,Tuesday 20th of February 2024 06:25:58 PM CDT,"<a href=""mailto:officemail407@aol.com"">officemail407@aol.com</a>
<a href=""mailto:francisedyer@gmail.com"">francisedyer@gmail.com</a>
<a href=""mailto:f.r.anc.ised.yer@gmail.com"">f.r.anc.ised.yer@gmail.com</a>
<a href=""mailto:franc.ise.dye.r@gmail.com"">franc.ise.dye.r@gmail.com</a>
<a href=""mailto:fran.c.i.s.e.dy.e.r@gmail.com"">fran.c.i.s.e.dy.e.r@gmail.com</a>
<a href=""mailto:fra.n.ci.se.d.yer@gmail.com"">fra.n.ci.se.d.yer@gmail.com</a>
<a href=""mailto:fra.ncised.y.e.r@gmail.com"">fra.ncised.y.e.r@gmail.com</a>
<a href=""mailto:fr.anci.s.e.dy.er@gmail.com"">fr.anci.s.e.dy.er@gmail.com</a>
<a href=""mailto:fr.a.n.c.i.s.ed.yer@gmail.com"">fr.a.n.c.i.s.ed.yer@gmail.com</a>
<a href=""mailto:f.r.an.ci.s.e.dy.e.r@gmail.com"">f.r.an.ci.s.e.dy.e.r@gmail.com</a>
<a href=""mailto:f.r.a.nc.i.s.e.d.ye.r@gmail.com"">f.r.a.nc.i.s.e.d.ye.r@gmail.com</a>
<a href=""mailto:fr.an.ci.s.ed.y.e.r@gmail.com"">fr.an.ci.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.ci.s.e.dy.e.r@gmail.com"">f.r.a.n.ci.s.e.dy.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.c.is.ed.ye.r@gmail.com"">f.r.a.n.c.is.ed.ye.r@gmail.com</a>
<a href=""mailto:fran.c.i.sedye.r@gmail.com"">fran.c.i.sedye.r@gmail.com</a>
<a href=""mailto:fr.a.nc.i.sed.y.er@gmail.com"">fr.a.nc.i.sed.y.er@gmail.com</a>
<a href=""mailto:fran.c.is.ed.y.e.r@gmail.com"">fran.c.is.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.ncis.e.dye.r@gmail.com"">f.r.a.ncis.e.dye.r@gmail.com</a>
<a href=""mailto:f.ran.c.ise.d.y.e.r@gmail.com"">f.ran.c.ise.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.anc.i.s.ed.y.er@gmail.com"">f.r.anc.i.s.ed.y.er@gmail.com</a>
<a href=""mailto:f.rancis.e.d.ye.r@gmail.com"">f.rancis.e.d.ye.r@gmail.com</a>
<a href=""mailto:fr.anc.i.s.ed.yer@gmail.com"">fr.anc.i.s.ed.yer@gmail.com</a>
<a href=""mailto:f.ra.nc.i.se.dyer@gmail.com"">f.ra.nc.i.se.dyer@gmail.com</a>
<a href=""mailto:fr.a.nci.s.e.d.y.er@gmail.com"">fr.a.nci.s.e.d.y.er@gmail.com</a>
<a href=""mailto:fr.a.n.cisedyer@gmail.com"">fr.a.n.cisedyer@gmail.com</a>
<a href=""mailto:f.rancise.d.y.e.r@gmail.com"">f.rancise.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ra.n.ci.s.edyer@gmail.com"">f.ra.n.ci.s.edyer@gmail.com</a>
<a href=""mailto:fra.n.c.i.s.e.d.y.e.r@gmail.com"">fra.n.c.i.s.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ra.nc.i.sedy.e.r@gmail.com"">f.ra.nc.i.sedy.e.r@gmail.com</a>
<a href=""mailto:francised.yer@gmail.com"">francised.yer@gmail.com</a>
<a href=""mailto:fr.an.c.i.sedy.er@gmail.com"">fr.an.c.i.sedy.er@gmail.com</a>
<a href=""mailto:f.r.a.n.c.i.s.e.dye.r@gmail.com"">f.r.a.n.c.i.s.e.dye.r@gmail.com</a>
<a href=""mailto:fra.nc.is.e.d.y.er@gmail.com"">fra.nc.is.e.d.y.er@gmail.com</a>
<a href=""mailto:fr.an.ci.se.d.y.er@gmail.com"">fr.an.ci.se.d.y.er@gmail.com</a>
<a href=""mailto:f.r.a.nci.s.ed.ye.r@gmail.com"">f.r.a.nci.s.ed.ye.r@gmail.com</a>
<a href=""mailto:fra.ncise.d.y.e.r@gmail.com"">fra.ncise.d.y.e.r@gmail.com</a>
<a href=""mailto:fra.n.c.ise.d.y.er@gmail.com"">fra.n.c.ise.d.y.er@gmail.com</a>
<a href=""mailto:f.ran.cise.d.y.er@gmail.com"">f.ran.cise.d.y.er@gmail.com</a>
<a href=""mailto:f.r.ancisedye.r@gmail.com"">f.r.ancisedye.r@gmail.com</a>
<a href=""mailto:f.r.an.ci.se.d.yer@gmail.com"">f.r.an.ci.se.d.yer@gmail.com</a>
<a href=""mailto:fr.a.n.c.i.se.dy.e.r@gmail.com"">fr.a.n.c.i.se.dy.e.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.is.e.d.ye.r@gmail.com"">f.ra.n.c.is.e.d.ye.r@gmail.com</a>
<a href=""mailto:f.ra.n.ci.s.ed.y.e.r@gmail.com"">f.ra.n.ci.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:fra.n.cis.e.dy.er@gmail.com"">fra.n.cis.e.dy.er@gmail.com</a>
<a href=""mailto:f.ran.c.i.se.d.y.e.r@gmail.com"">f.ran.c.i.se.d.y.e.r@gmail.com</a>
<a href=""mailto:fr.a.n.cis.edy.er@gmail.com"">fr.a.n.cis.edy.er@gmail.com</a>
<a href=""mailto:f.r.a.nci.s.e.d.ye.r@gmail.com"">f.r.a.nci.s.e.d.ye.r@gmail.com</a>
<a href=""mailto:fran.cis.ed.yer@gmail.com"">fran.cis.ed.yer@gmail.com</a>
<a href=""mailto:fr.anci.s.e.d.ye.r@gmail.com"">fr.anci.s.e.d.ye.r@gmail.com</a>
<a href=""mailto:f.r.a.n.c.i.s.e.d.ye.r@gmail.com"">f.r.a.n.c.i.s.e.d.ye.r@gmail.com</a>
<a href=""mailto:f.r.a.ncis.ed.y.er@gmail.com"">f.r.a.ncis.ed.y.er@gmail.com</a>
<a href=""mailto:fr.an.cisedy.er@gmail.com"">fr.an.cisedy.er@gmail.com</a>
<a href=""mailto:fran.cise.dye.r@gmail.com"">fran.cise.dye.r@gmail.com</a>
<a href=""mailto:f.ran.ci.s.e.dye.r@gmail.com"">f.ran.ci.s.e.dye.r@gmail.com</a>
<a href=""mailto:f.r.an.c.i.s.ed.ye.r@gmail.com"">f.r.an.c.i.s.ed.ye.r@gmail.com</a>
<a href=""mailto:fran.cis.e.dy.er@gmail.com"">fran.cis.e.dy.er@gmail.com</a>
<a href=""mailto:f.r.anc.is.e.dyer@gmail.com"">f.r.anc.is.e.dyer@gmail.com</a>
<a href=""mailto:f.ra.ncis.ed.y.e.r@gmail.com"">f.ra.ncis.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.r.an.c.is.e.dyer@gmail.com"">f.r.an.c.is.e.dyer@gmail.com</a>
<a href=""mailto:f.r.a.n.cis.e.d.yer@gmail.com"">f.r.a.n.cis.e.d.yer@gmail.com</a>
<a href=""mailto:f.ra.nci.s.e.d.yer@gmail.com"">f.ra.nci.s.e.d.yer@gmail.com</a>
<a href=""mailto:fr.anci.se.d.y.e.r@gmail.com"">fr.anci.se.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.ci.s.e.d.yer@gmail.com"">f.r.a.n.ci.s.e.d.yer@gmail.com</a>
<a href=""mailto:fran.cis.ed.ye.r@gmail.com"">fran.cis.ed.ye.r@gmail.com</a>
<a href=""mailto:f.ra.nc.i.se.d.y.e.r@gmail.com"">f.ra.nc.i.se.d.y.e.r@gmail.com</a>
<a href=""mailto:fr.a.n.c.ised.y.er@gmail.com"">fr.a.n.c.ised.y.er@gmail.com</a>
<a href=""mailto:fr.a.nci.se.d.ye.r@gmail.com"">fr.a.nci.se.d.ye.r@gmail.com</a>
<a href=""mailto:fr.a.n.c.is.ed.y.er@gmail.com"">fr.a.n.c.is.ed.y.er@gmail.com</a>
<a href=""mailto:fra.nci.sed.ye.r@gmail.com"">fra.nci.sed.ye.r@gmail.com</a>
<a href=""mailto:f.ra.nc.isedyer@gmail.com"">f.ra.nc.isedyer@gmail.com</a>
<a href=""mailto:fran.c.i.sed.yer@gmail.com"">fran.c.i.sed.yer@gmail.com</a>
<a href=""mailto:fran.c.ised.y.e.r@gmail.com"">fran.c.ised.y.e.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.isedy.e.r@gmail.com"">f.ra.n.c.isedy.e.r@gmail.com</a>
<a href=""mailto:fra.nci.s.ed.ye.r@gmail.com"">fra.nci.s.ed.ye.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.i.s.e.d.y.e.r@gmail.com"">f.ra.n.c.i.s.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ran.c.i.sed.y.er@gmail.com"">f.ran.c.i.sed.y.er@gmail.com</a>
<a href=""mailto:fr.an.ci.s.e.dy.e.r@gmail.com"">fr.an.ci.s.e.dy.e.r@gmail.com</a>
<a href=""mailto:f.r.an.c.i.sed.y.er@gmail.com"">f.r.an.c.i.sed.y.er@gmail.com</a>
<a href=""mailto:f.ran.c.i.s.e.dye.r@gmail.com"">f.ran.c.i.s.e.dye.r@gmail.com</a>
<a href=""mailto:fran.c.i.se.d.y.e.r@gmail.com"">fran.c.i.se.d.y.e.r@gmail.com</a>
<a href=""mailto:fr.a.n.c.is.edyer@gmail.com"">fr.a.n.c.is.edyer@gmail.com</a>
<a href=""mailto:fra.nci.s.e.d.y.er@gmail.com"">fra.nci.s.e.d.y.er@gmail.com</a>
<a href=""mailto:fran.c.ise.dye.r@gmail.com"">fran.c.ise.dye.r@gmail.com</a>
<a href=""mailto:f.r.a.nci.sed.yer@gmail.com"">f.r.a.nci.sed.yer@gmail.com</a>
<a href=""mailto:fra.nci.se.dy.e.r@gmail.com"">fra.nci.se.dy.e.r@gmail.com</a>
<a href=""mailto:f.r.an.c.i.s.ed.y.e.r@gmail.com"">f.r.an.c.i.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.r.anc.i.s.e.d.y.e.r@gmail.com"">f.r.anc.i.s.e.d.y.e.r@gmail.com</a>
<a href=""mailto:fr.a.n.c.i.s.ed.y.e.r@gmail.com"">fr.a.n.c.i.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.nc.ise.d.yer@gmail.com"">f.r.a.nc.ise.d.yer@gmail.com</a>
<a href=""mailto:f.rancised.yer@gmail.com"">f.rancised.yer@gmail.com</a>
<a href=""mailto:fr.a.n.c.i.sed.yer@gmail.com"">fr.a.n.c.i.sed.yer@gmail.com</a>
<a href=""mailto:f.ran.ci.s.ed.y.e.r@gmail.com"">f.ran.ci.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.ran.c.ised.y.e.r@gmail.com"">f.ran.c.ised.y.e.r@gmail.com</a>
<a href=""mailto:fr.a.nc.i.sed.ye.r@gmail.com"">fr.a.nc.i.sed.ye.r@gmail.com</a>
<a href=""mailto:f.r.ancised.yer@gmail.com"">f.r.ancised.yer@gmail.com</a>
<a href=""mailto:f.ra.nc.i.s.ed.y.e.r@gmail.com"">f.ra.nc.i.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.ran.c.is.e.d.y.e.r@gmail.com"">f.ran.c.is.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.cis.edye.r@gmail.com"">f.r.a.n.cis.edye.r@gmail.com</a>
<a href=""mailto:fr.a.nci.sed.yer@gmail.com"">fr.a.nci.sed.yer@gmail.com</a>
<a href=""mailto:f.ra.nc.is.edye.r@gmail.com"">f.ra.nc.is.edye.r@gmail.com</a>
<a href=""mailto:fr.a.n.cise.dyer@gmail.com"">fr.a.n.cise.dyer@gmail.com</a>
<a href=""mailto:f.r.anci.s.e.dy.e.r@gmail.com"">f.r.anci.s.e.dy.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.cise.dy.e.r@gmail.com"">f.r.a.n.cise.dy.e.r@gmail.com</a>
<a href=""mailto:fra.nci.se.dye.r@gmail.com"">fra.nci.se.dye.r@gmail.com</a>
<a href=""mailto:f.r.an.c.i.s.edy.er@gmail.com"">f.r.an.c.i.s.edy.er@gmail.com</a>
<a href=""mailto:fra.n.c.ised.y.e.r@gmail.com"">fra.n.c.ised.y.e.r@gmail.com</a>
<a href=""mailto:fran.c.i.s.edy.e.r@gmail.com"">fran.c.i.s.edy.e.r@gmail.com</a>
<a href=""mailto:f.r.a.nc.is.edy.e.r@gmail.com"">f.r.a.nc.is.edy.e.r@gmail.com</a>
<a href=""mailto:f.r.an.c.isedye.r@gmail.com"">f.r.an.c.isedye.r@gmail.com</a>
<a href=""mailto:fr.an.c.is.e.d.y.e.r@gmail.com"">fr.an.c.is.e.d.y.e.r@gmail.com</a>
<a href=""mailto:fra.nc.ise.d.y.e.r@gmail.com"">fra.nc.ise.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ra.nc.i.s.e.dy.er@gmail.com"">f.ra.nc.i.s.e.dy.er@gmail.com</a>
<a href=""mailto:f.rancised.ye.r@gmail.com"">f.rancised.ye.r@gmail.com</a>
<a href=""mailto:f.r.an.ci.se.d.ye.r@gmail.com"">f.r.an.ci.se.d.ye.r@gmail.com</a>
<a href=""mailto:fr.a.nci.s.edy.er@gmail.com"">fr.a.nci.s.edy.er@gmail.com</a>
<a href=""mailto:fra.ncis.e.dy.e.r@gmail.com"">fra.ncis.e.dy.e.r@gmail.com</a>
<a href=""mailto:fr.a.nc.is.e.dy.er@gmail.com"">fr.a.nc.is.e.dy.er@gmail.com</a>
<a href=""mailto:fra.nc.ise.d.ye.r@gmail.com"">fra.nc.ise.d.ye.r@gmail.com</a>
<a href=""mailto:f.ra.n.ci.s.e.d.y.e.r@gmail.com"">f.ra.n.ci.s.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.an.cise.d.y.e.r@gmail.com"">f.r.an.cise.d.y.e.r@gmail.com</a>
<a href=""mailto:fra.nc.i.s.e.dy.er@gmail.com"">fra.nc.i.s.e.dy.er@gmail.com</a>
<a href=""mailto:f.r.an.c.is.e.d.y.e.r@gmail.com"">f.r.an.c.is.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ran.c.is.ed.y.er@gmail.com"">f.ran.c.is.ed.y.er@gmail.com</a>
<a href=""mailto:f.ranc.i.s.e.d.y.e.r@gmail.com"">f.ranc.i.s.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.an.c.ise.dy.er@gmail.com"">f.r.an.c.ise.dy.er@gmail.com</a>
<a href=""mailto:f.r.a.nci.se.d.yer@gmail.com"">f.r.a.nci.se.d.yer@gmail.com</a>
<a href=""mailto:f.r.a.n.ci.se.dy.e.r@gmail.com"">f.r.a.n.ci.se.dy.e.r@gmail.com</a>
<a href=""mailto:f.rancis.edy.er@gmail.com"">f.rancis.edy.er@gmail.com</a>
<a href=""mailto:f.ra.ncise.dyer@gmail.com"">f.ra.ncise.dyer@gmail.com</a>
<a href=""mailto:f.r.a.n.c.i.sed.yer@gmail.com"">f.r.a.n.c.i.sed.yer@gmail.com</a>
<a href=""mailto:f.ra.ncisedy.er@gmail.com"">f.ra.ncisedy.er@gmail.com</a>
<a href=""mailto:f.r.an.ci.sed.ye.r@gmail.com"">f.r.an.ci.sed.ye.r@gmail.com</a>
<a href=""mailto:f.r.anci.s.edye.r@gmail.com"">f.r.anci.s.edye.r@gmail.com</a>
<a href=""mailto:fr.anc.i.s.edyer@gmail.com"">fr.anc.i.s.edyer@gmail.com</a>
<a href=""mailto:fran.c.is.e.d.y.e.r@gmail.com"">fran.c.is.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ranci.sedyer@gmail.com"">f.ranci.sedyer@gmail.com</a>
<a href=""mailto:f.ra.n.c.i.s.edye.r@gmail.com"">f.ra.n.c.i.s.edye.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.i.se.dy.e.r@gmail.com"">f.ra.n.c.i.se.dy.e.r@gmail.com</a>
<a href=""mailto:franc.is.e.d.yer@gmail.com"">franc.is.e.d.yer@gmail.com</a>
<a href=""mailto:fran.cis.edye.r@gmail.com"">fran.cis.edye.r@gmail.com</a>
<a href=""mailto:f.r.anci.se.dyer@gmail.com"">f.r.anci.se.dyer@gmail.com</a>
<a href=""mailto:f.ra.nc.is.e.d.y.e.r@gmail.com"">f.ra.nc.is.e.d.y.e.r@gmail.com</a>
<a href=""mailto:fra.n.c.ise.dye.r@gmail.com"">fra.n.c.ise.dye.r@gmail.com</a>
<a href=""mailto:francisedyer@gmail.com"">francisedyer@gmail.com</a>
<a href=""mailto:f.ra.nci.s.edye.r@gmail.com"">f.ra.nci.s.edye.r@gmail.com</a>
<a href=""mailto:f.r.a.n.c.i.s.ed.y.e.r@gmail.com"">f.r.a.n.c.i.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:f.r.an.c.i.sedy.er@gmail.com"">f.r.an.c.i.sedy.er@gmail.com</a>
<a href=""mailto:f.ranc.i.s.edy.e.r@gmail.com"">f.ranc.i.s.edy.e.r@gmail.com</a>
<a href=""mailto:f.r.anc.ise.dy.e.r@gmail.com"">f.r.anc.ise.dy.e.r@gmail.com</a>
<a href=""mailto:fr.a.nc.i.s.e.dye.r@gmail.com"">fr.a.nc.i.s.e.dye.r@gmail.com</a>
<a href=""mailto:f.r.an.cis.e.d.ye.r@gmail.com"">f.r.an.cis.e.d.ye.r@gmail.com</a>
<a href=""mailto:f.r.an.cis.e.dy.e.r@gmail.com"">f.r.an.cis.e.dy.e.r@gmail.com</a>
<a href=""mailto:fr.a.nci.s.ed.yer@gmail.com"">fr.a.nci.s.ed.yer@gmail.com</a>
<a href=""mailto:fr.a.nc.i.s.edy.er@gmail.com"">fr.a.nc.i.s.edy.er@gmail.com</a>
<a href=""mailto:franci.s.ed.yer@gmail.com"">franci.s.ed.yer@gmail.com</a>
<a href=""mailto:fr.an.c.i.s.ed.yer@gmail.com"">fr.an.c.i.s.ed.yer@gmail.com</a>
<a href=""mailto:f.r.a.n.cised.ye.r@gmail.com"">f.r.a.n.cised.ye.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.i.s.edy.e.r@gmail.com"">f.ra.n.c.i.s.edy.e.r@gmail.com</a>
<a href=""mailto:f.ra.ncis.e.d.ye.r@gmail.com"">f.ra.ncis.e.d.ye.r@gmail.com</a>
<a href=""mailto:f.ranc.ise.dyer@gmail.com"">f.ranc.ise.dyer@gmail.com</a>
<a href=""mailto:f.ra.nc.ised.y.er@gmail.com"">f.ra.nc.ised.y.er@gmail.com</a>
<a href=""mailto:fran.c.i.s.edy.er@gmail.com"">fran.c.i.s.edy.er@gmail.com</a>
<a href=""mailto:fran.c.i.sed.ye.r@gmail.com"">fran.c.i.sed.ye.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.is.e.d.y.e.r@gmail.com"">f.ra.n.c.is.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ra.nci.se.d.y.e.r@gmail.com"">f.ra.nci.se.d.y.e.r@gmail.com</a>
<a href=""mailto:fran.ci.sedye.r@gmail.com"">fran.ci.sedye.r@gmail.com</a>
<a href=""mailto:f.ran.cis.edy.er@gmail.com"">f.ran.cis.edy.er@gmail.com</a>
<a href=""mailto:fra.n.c.ised.ye.r@gmail.com"">fra.n.c.ised.ye.r@gmail.com</a>
<a href=""mailto:fr.an.ci.se.d.y.e.r@gmail.com"">fr.an.ci.se.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.ncised.y.e.r@gmail.com"">f.r.a.ncised.y.e.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.i.sed.y.er@gmail.com"">f.ra.n.c.i.sed.y.er@gmail.com</a>
<a href=""mailto:fr.anc.i.s.e.d.y.e.r@gmail.com"">fr.anc.i.s.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.ran.cis.e.dy.e.r@gmail.com"">f.ran.cis.e.dy.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.cis.e.dye.r@gmail.com"">f.r.a.n.cis.e.dye.r@gmail.com</a>
<a href=""mailto:f.ran.ci.sedye.r@gmail.com"">f.ran.ci.sedye.r@gmail.com</a>
<a href=""mailto:fra.n.c.is.edy.e.r@gmail.com"">fra.n.c.is.edy.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.c.ise.d.y.er@gmail.com"">f.r.a.n.c.ise.d.y.er@gmail.com</a>
<a href=""mailto:fra.n.cise.d.ye.r@gmail.com"">fra.n.cise.d.ye.r@gmail.com</a>
<a href=""mailto:fr.an.cise.dy.er@gmail.com"">fr.an.cise.dy.er@gmail.com</a>
<a href=""mailto:f.r.anci.sed.ye.r@gmail.com"">f.r.anci.sed.ye.r@gmail.com</a>
<a href=""mailto:franc.isedye.r@gmail.com"">franc.isedye.r@gmail.com</a>
<a href=""mailto:francised.ye.r@gmail.com"">francised.ye.r@gmail.com</a>
<a href=""mailto:f.r.an.c.is.edy.e.r@gmail.com"">f.r.an.c.is.edy.e.r@gmail.com</a>
<a href=""mailto:f.ra.n.c.i.s.ed.y.er@gmail.com"">f.ra.n.c.i.s.ed.y.er@gmail.com</a>
<a href=""mailto:franc.i.se.dy.e.r@gmail.com"">franc.i.se.dy.e.r@gmail.com</a>
<a href=""mailto:f.r.an.cis.e.d.y.e.r@gmail.com"">f.r.an.cis.e.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.ci.sedye.r@gmail.com"">f.r.a.n.ci.sedye.r@gmail.com</a>
<a href=""mailto:f.r.anc.is.ed.ye.r@gmail.com"">f.r.anc.is.ed.ye.r@gmail.com</a>
<a href=""mailto:fra.n.cised.y.e.r@gmail.com"">fra.n.cised.y.e.r@gmail.com</a>
<a href=""mailto:franci.sed.y.er@gmail.com"">franci.sed.y.er@gmail.com</a>
<a href=""mailto:f.r.an.ci.s.ed.y.e.r@gmail.com"">f.r.an.ci.s.ed.y.e.r@gmail.com</a>
<a href=""mailto:fran.cise.d.y.e.r@gmail.com"">fran.cise.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.an.c.is.e.d.ye.r@gmail.com"">f.r.an.c.is.e.d.ye.r@gmail.com</a>
<a href=""mailto:f.rancis.ed.ye.r@gmail.com"">f.rancis.ed.ye.r@gmail.com</a>
<a href=""mailto:f.rancise.dye.r@gmail.com"">f.rancise.dye.r@gmail.com</a>
<a href=""mailto:fra.nc.i.se.dyer@gmail.com"">fra.nc.i.se.dyer@gmail.com</a>
<a href=""mailto:fr.a.nc.i.se.d.y.e.r@gmail.com"">fr.a.nc.i.se.d.y.e.r@gmail.com</a>
<a href=""mailto:f.r.ancised.y.e.r@gmail.com"">f.r.ancised.y.e.r@gmail.com</a>
<a href=""mailto:f.r.a.n.cised.yer@gmail.com"">f.r.a.n.cised.yer@gmail.com</a>
<a href=""mailto:f.r.a.nc.is.ed.ye.r@gmail.com"">f.r.a.nc.is.ed.ye.r@gmail.com</a>
<a href=""mailto:fra.nc.ised.ye.r@gmail.com"">fra.nc.ised.ye.r@gmail.com</a>
<a href=""mailto:f.r.ancis.ed.yer@gmail.com"">f.r.ancis.ed.yer@gmail.com</a>"
Pe40s35F,2024-02-20_stats.json,rdp_snitch,JSON,Tuesday 20th of February 2024 06:18:07 PM CDT,"{
  ""ip"": {
    ""185.170.144.113"": 9,
    ""188.117.146.202"": 6,
    ""194.165.16.73"": 6,
    ""27.8.44.19"": 3,
    ""45.227.254.8"": 6,
    ""198.235.24.51"": 9,
    ""123.56.20.194"": 6,
    ""87.251.75.145"": 3,
    ""80.66.76.80"": 12,
    ""68.183.175.171"": 3,
    ""40.71.20.231"": 3,
    ""81.19.135.47"": 9,
    ""87.251.75.120"": 6,
    ""45.83.64.130"": 3,
    ""61.91.43.232"": 3,
    ""205.210.31.15"": 9,
    ""178.128.15.195"": 12,
    ""185.198.240.20"": 3,
    ""58.218.204.183"": 9,
    ""194.165.16.78"": 6,
    ""212.70.149.142"": 9,
    ""194.165.16.37"": 6,
    ""36.91.222.100"": 3,
    ""45.131.195.22"": 3,
    ""120.240.145.8"": 3,
    ""118.194.238.196"": 3,
    ""198.235.24.193"": 9,
    ""62.204.41.107"": 12,
    ""167.94.146.57"": 3,
    ""84.201.2.2"": 6,
    ""152.89.198.42"": 3,
    ""185.170.144.3"": 3,
    ""45.131.195.114"": 3,
    ""205.210.31.250"": 9,
    ""152.32.206.51"": 3
  },
  ""asn"": {
    ""AS197414"": 12,
    ""AS31242"": 6,
    ""AS48721"": 18,
    ""AS4837"": 3,
    ""AS267784"": 6,
    ""AS396982"": 36,
    ""AS37963"": 6,
    ""AS208091"": 21,
    ""AS14061"": 15,
    ""AS8075"": 3,
    ""AS209588"": 9,
    ""AS208843"": 3,
    ""AS7470"": 3,
    ""AS62240"": 9,
    ""AS4134"": 9,
    ""AS204428"": 9,
    ""AS7713"": 3,
    ""AS56040"": 3,
    ""AS135377"": 6,
    ""AS59425"": 12,
    ""AS398705"": 3,
    ""AS44066"": 6,
    ""AS57523"": 3
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 33,
    ""P4 Sp. z o.o."": 6,
    ""Flyservers S.A."": 33,
    ""China Unicom Chongqing Province Network"": 3,
    ""Google LLC"": 36,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""DigitalOcean, LLC"": 15,
    ""Microsoft Corporation"": 3,
    ""INTERNET-RESEARCH"": 3,
    ""True Internet Corporation CO. Ltd."": 3,
    ""Clouvider Limited"": 3,
    ""Chinanet"": 9,
    ""SS-Net"": 9,
    ""PT Telekomunikasi Indonesia"": 3,
    ""VPN"": 6,
    ""China Mobile communications corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Horizon LLC"": 12,
    ""Censys, Inc."": 3,
    ""diva-e Datacenters GmbH"": 6,
    ""Chang Way Technologies Co. Limited"": 3
  },
  ""org"": {
    ""Xhostis"": 12,
    ""TKP S.A."": 6,
    ""Flyservers S.A"": 18,
    ""Unknown"": 9,
    ""UAB Host Baltic"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Aliyun Computing Co., LTD"": 6,
    ""Xhost Internet Solutions"": 21,
    ""DigitalOcean, LLC"": 3,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Alviva Holding Limited"": 9,
    ""True Internet Corporation CO. LTD"": 3,
    ""Digitalocean"": 12,
    ""Chinanet JS"": 9,
    ""4Media Ltd"": 9,
    ""Telekomunikasi Indonesia"": 3,
    ""VPN-Consumer-US"": 6,
    ""China Mobile"": 3,
    ""Ucloud Information Technology"": 6,
    ""Horizon LLC"": 12,
    ""Censys, Inc."": 3,
    ""www.accelerated.de"": 6,
    ""Starcrecium Limited"": 3
  },
  ""regionName"": {
    ""North Holland"": 33,
    ""Silesia"": 6,
    ""Kaunas"": 18,
    ""Chongqing"": 3,
    ""Vilnius"": 6,
    ""California"": 51,
    ""Beijing"": 6,
    ""Virginia"": 6,
    ""Hesse"": 18,
    ""Land Berlin"": 3,
    ""Bangkok"": 3,
    ""New Jersey"": 9,
    ""Jiangsu"": 9,
    ""Plovdiv"": 9,
    ""Jakarta"": 3,
    ""Guangdong"": 3,
    ""Metro Manila"": 3,
    ""Moscow"": 15
  },
  ""country"": {
    ""The Netherlands"": 33,
    ""Poland"": 6,
    ""Lithuania"": 24,
    ""China"": 21,
    ""United States"": 66,
    ""Germany"": 21,
    ""Thailand"": 3,
    ""Bulgaria"": 9,
    ""Indonesia"": 3,
    ""Philippines"": 3,
    ""Russia"": 15
  },
  ""account"": {
    ""Domain"": 30,
    ""Administrator"": 12,
    ""Test"": 45,
    ""Administr"": 27,
    ""vRgYocSnN"": 3,
    ""PjsPNF"": 3,
    ""rciYAM"": 3,
    ""hello"": 18,
    ""beio"": 3,
    ""user"": 3,
    ""(empty)"": 18,
    ""HqGzVYkOp"": 3,
    ""HNVoTS"": 3,
    ""GgomRE"": 3,
    ""yubrhw31"": 12,
    ""aBPAJpNXr"": 3,
    ""RDdtHb"": 3,
    ""hBJNIS"": 3,
    ""mrWLJvZAJ"": 3,
    ""Pvtrbq"": 3,
    ""RBAWNO"": 3
  },
  ""keyboard"": {
    ""Unknown"": 204
  },
  ""client_build"": {
    ""Unknown"": 204
  },
  ""client_name"": {
    ""Unknown"": 204
  },
  ""ip_type"": {
    ""Unknown"": 117,
    ""hosting"": 57,
    ""hosting & proxy"": 24,
    ""mobile"": 3,
    ""proxy"": 3
  }
}"
pjh9v5zy,2024-02-20_stats.json,rdp_snitch,JSON,Tuesday 20th of February 2024 06:16:10 PM CDT,"{
  ""ip"": {
    ""185.170.144.113"": 6,
    ""188.117.146.202"": 4,
    ""194.165.16.73"": 4,
    ""27.8.44.19"": 2,
    ""45.227.254.8"": 4,
    ""198.235.24.51"": 6,
    ""123.56.20.194"": 4,
    ""87.251.75.145"": 2,
    ""80.66.76.80"": 8,
    ""68.183.175.171"": 2,
    ""40.71.20.231"": 2,
    ""81.19.135.47"": 6,
    ""87.251.75.120"": 4,
    ""45.83.64.130"": 2,
    ""61.91.43.232"": 2,
    ""205.210.31.15"": 6,
    ""178.128.15.195"": 8,
    ""185.198.240.20"": 2,
    ""58.218.204.183"": 6,
    ""194.165.16.78"": 4,
    ""212.70.149.142"": 6,
    ""194.165.16.37"": 4,
    ""36.91.222.100"": 2,
    ""45.131.195.22"": 2,
    ""120.240.145.8"": 2,
    ""118.194.238.196"": 2,
    ""198.235.24.193"": 6,
    ""62.204.41.107"": 8,
    ""167.94.146.57"": 2,
    ""84.201.2.2"": 4,
    ""152.89.198.42"": 2,
    ""185.170.144.3"": 2,
    ""45.131.195.114"": 2,
    ""205.210.31.250"": 6,
    ""152.32.206.51"": 2
  },
  ""asn"": {
    ""AS197414"": 8,
    ""AS31242"": 4,
    ""AS48721"": 12,
    ""AS4837"": 2,
    ""AS267784"": 4,
    ""AS396982"": 24,
    ""AS37963"": 4,
    ""AS208091"": 14,
    ""AS14061"": 10,
    ""AS8075"": 2,
    ""AS209588"": 6,
    ""AS208843"": 2,
    ""AS7470"": 2,
    ""AS62240"": 6,
    ""AS4134"": 6,
    ""AS204428"": 6,
    ""AS7713"": 2,
    ""AS56040"": 2,
    ""AS135377"": 4,
    ""AS59425"": 8,
    ""AS398705"": 2,
    ""AS44066"": 4,
    ""AS57523"": 2
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 22,
    ""P4 Sp. z o.o."": 4,
    ""Flyservers S.A."": 22,
    ""China Unicom Chongqing Province Network"": 2,
    ""Google LLC"": 24,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""DigitalOcean, LLC"": 10,
    ""Microsoft Corporation"": 2,
    ""INTERNET-RESEARCH"": 2,
    ""True Internet Corporation CO. Ltd."": 2,
    ""Clouvider Limited"": 2,
    ""Chinanet"": 6,
    ""SS-Net"": 6,
    ""PT Telekomunikasi Indonesia"": 2,
    ""VPN"": 4,
    ""China Mobile communications corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Horizon LLC"": 8,
    ""Censys, Inc."": 2,
    ""diva-e Datacenters GmbH"": 4,
    ""Chang Way Technologies Co. Limited"": 2
  },
  ""org"": {
    ""Xhostis"": 8,
    ""TKP S.A."": 4,
    ""Flyservers S.A"": 12,
    ""Unknown"": 6,
    ""UAB Host Baltic"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Aliyun Computing Co., LTD"": 4,
    ""Xhost Internet Solutions"": 14,
    ""DigitalOcean, LLC"": 2,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Alviva Holding Limited"": 6,
    ""True Internet Corporation CO. LTD"": 2,
    ""Digitalocean"": 8,
    ""Chinanet JS"": 6,
    ""4Media Ltd"": 6,
    ""Telekomunikasi Indonesia"": 2,
    ""VPN-Consumer-US"": 4,
    ""China Mobile"": 2,
    ""Ucloud Information Technology"": 4,
    ""Horizon LLC"": 8,
    ""Censys, Inc."": 2,
    ""www.accelerated.de"": 4,
    ""Starcrecium Limited"": 2
  },
  ""regionName"": {
    ""North Holland"": 22,
    ""Silesia"": 4,
    ""Kaunas"": 12,
    ""Chongqing"": 2,
    ""Vilnius"": 4,
    ""California"": 34,
    ""Beijing"": 4,
    ""Virginia"": 4,
    ""Hesse"": 12,
    ""Land Berlin"": 2,
    ""Bangkok"": 2,
    ""New Jersey"": 6,
    ""Jiangsu"": 6,
    ""Plovdiv"": 6,
    ""Jakarta"": 2,
    ""Guangdong"": 2,
    ""Metro Manila"": 2,
    ""Moscow"": 10
  },
  ""country"": {
    ""The Netherlands"": 22,
    ""Poland"": 4,
    ""Lithuania"": 16,
    ""China"": 14,
    ""United States"": 44,
    ""Germany"": 14,
    ""Thailand"": 2,
    ""Bulgaria"": 6,
    ""Indonesia"": 2,
    ""Philippines"": 2,
    ""Russia"": 10
  },
  ""account"": {
    ""Domain"": 20,
    ""Administrator"": 8,
    ""Test"": 30,
    ""Administr"": 18,
    ""vRgYocSnN"": 2,
    ""PjsPNF"": 2,
    ""rciYAM"": 2,
    ""hello"": 12,
    ""beio"": 2,
    ""user"": 2,
    ""(empty)"": 12,
    ""HqGzVYkOp"": 2,
    ""HNVoTS"": 2,
    ""GgomRE"": 2,
    ""yubrhw31"": 8,
    ""aBPAJpNXr"": 2,
    ""RDdtHb"": 2,
    ""hBJNIS"": 2,
    ""mrWLJvZAJ"": 2,
    ""Pvtrbq"": 2,
    ""RBAWNO"": 2
  },
  ""keyboard"": {
    ""Unknown"": 136
  },
  ""client_build"": {
    ""Unknown"": 136
  },
  ""client_name"": {
    ""Unknown"": 136
  },
  ""ip_type"": {
    ""Unknown"": 78,
    ""hosting"": 38,
    ""hosting & proxy"": 16,
    ""mobile"": 2,
    ""proxy"": 2
  }
}"
j5qtk3yb,2024-02-20_stats.json,rdp_snitch,JSON,Tuesday 20th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""185.170.144.113"": 3,
    ""188.117.146.202"": 2,
    ""194.165.16.73"": 2,
    ""27.8.44.19"": 1,
    ""45.227.254.8"": 2,
    ""198.235.24.51"": 3,
    ""123.56.20.194"": 2,
    ""87.251.75.145"": 1,
    ""80.66.76.80"": 4,
    ""68.183.175.171"": 1,
    ""40.71.20.231"": 1,
    ""81.19.135.47"": 3,
    ""87.251.75.120"": 2,
    ""45.83.64.130"": 1,
    ""61.91.43.232"": 1,
    ""205.210.31.15"": 3,
    ""178.128.15.195"": 4,
    ""185.198.240.20"": 1,
    ""58.218.204.183"": 3,
    ""194.165.16.78"": 2,
    ""212.70.149.142"": 3,
    ""194.165.16.37"": 2,
    ""36.91.222.100"": 1,
    ""45.131.195.22"": 1,
    ""120.240.145.8"": 1,
    ""118.194.238.196"": 1,
    ""198.235.24.193"": 3,
    ""62.204.41.107"": 4,
    ""167.94.146.57"": 1,
    ""84.201.2.2"": 2,
    ""152.89.198.42"": 1,
    ""185.170.144.3"": 1,
    ""45.131.195.114"": 1,
    ""205.210.31.250"": 3,
    ""152.32.206.51"": 1
  },
  ""asn"": {
    ""AS197414"": 4,
    ""AS31242"": 2,
    ""AS48721"": 6,
    ""AS4837"": 1,
    ""AS267784"": 2,
    ""AS396982"": 12,
    ""AS37963"": 2,
    ""AS208091"": 7,
    ""AS14061"": 5,
    ""AS8075"": 1,
    ""AS209588"": 3,
    ""AS208843"": 1,
    ""AS7470"": 1,
    ""AS62240"": 3,
    ""AS4134"": 3,
    ""AS204428"": 3,
    ""AS7713"": 1,
    ""AS56040"": 1,
    ""AS135377"": 2,
    ""AS59425"": 4,
    ""AS398705"": 1,
    ""AS44066"": 2,
    ""AS57523"": 1
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 11,
    ""P4 Sp. z o.o."": 2,
    ""Flyservers S.A."": 11,
    ""China Unicom Chongqing Province Network"": 1,
    ""Google LLC"": 12,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""DigitalOcean, LLC"": 5,
    ""Microsoft Corporation"": 1,
    ""INTERNET-RESEARCH"": 1,
    ""True Internet Corporation CO. Ltd."": 1,
    ""Clouvider Limited"": 1,
    ""Chinanet"": 3,
    ""SS-Net"": 3,
    ""PT Telekomunikasi Indonesia"": 1,
    ""VPN"": 2,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Horizon LLC"": 4,
    ""Censys, Inc."": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""Chang Way Technologies Co. Limited"": 1
  },
  ""org"": {
    ""Xhostis"": 4,
    ""TKP S.A."": 2,
    ""Flyservers S.A"": 6,
    ""Unknown"": 3,
    ""UAB Host Baltic"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Aliyun Computing Co., LTD"": 2,
    ""Xhost Internet Solutions"": 7,
    ""DigitalOcean, LLC"": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Alviva Holding Limited"": 3,
    ""True Internet Corporation CO. LTD"": 1,
    ""Digitalocean"": 4,
    ""Chinanet JS"": 3,
    ""4Media Ltd"": 3,
    ""Telekomunikasi Indonesia"": 1,
    ""VPN-Consumer-US"": 2,
    ""China Mobile"": 1,
    ""Ucloud Information Technology"": 2,
    ""Horizon LLC"": 4,
    ""Censys, Inc."": 1,
    ""www.accelerated.de"": 2,
    ""Starcrecium Limited"": 1
  },
  ""regionName"": {
    ""North Holland"": 11,
    ""Silesia"": 2,
    ""Kaunas"": 6,
    ""Chongqing"": 1,
    ""Vilnius"": 2,
    ""California"": 17,
    ""Beijing"": 2,
    ""Virginia"": 2,
    ""Hesse"": 6,
    ""Land Berlin"": 1,
    ""Bangkok"": 1,
    ""New Jersey"": 3,
    ""Jiangsu"": 3,
    ""Plovdiv"": 3,
    ""Jakarta"": 1,
    ""Guangdong"": 1,
    ""Metro Manila"": 1,
    ""Moscow"": 5
  },
  ""country"": {
    ""The Netherlands"": 11,
    ""Poland"": 2,
    ""Lithuania"": 8,
    ""China"": 7,
    ""United States"": 22,
    ""Germany"": 7,
    ""Thailand"": 1,
    ""Bulgaria"": 3,
    ""Indonesia"": 1,
    ""Philippines"": 1,
    ""Russia"": 5
  },
  ""account"": {
    ""Domain"": 10,
    ""Administrator"": 4,
    ""Test"": 15,
    ""Administr"": 9,
    ""vRgYocSnN"": 1,
    ""PjsPNF"": 1,
    ""rciYAM"": 1,
    ""hello"": 6,
    ""beio"": 1,
    ""user"": 1,
    ""(empty)"": 6,
    ""HqGzVYkOp"": 1,
    ""HNVoTS"": 1,
    ""GgomRE"": 1,
    ""yubrhw31"": 4,
    ""aBPAJpNXr"": 1,
    ""RDdtHb"": 1,
    ""hBJNIS"": 1,
    ""mrWLJvZAJ"": 1,
    ""Pvtrbq"": 1,
    ""RBAWNO"": 1
  },
  ""keyboard"": {
    ""Unknown"": 68
  },
  ""client_build"": {
    ""Unknown"": 68
  },
  ""client_name"": {
    ""Unknown"": 68
  },
  ""ip_type"": {
    ""Unknown"": 39,
    ""hosting"": 19,
    ""hosting & proxy"": 8,
    ""mobile"": 1,
    ""proxy"": 1
  }
}"
WF4UZufs,mc compose example,hpf3,YAML,Tuesday 20th of February 2024 05:51:09 PM CDT,"version: ""3""

services:
  mc:
    #my favorite docker mc server, docs can be found at: https://docker-minecraft-server.readthedocs.io/en/latest/
    image: itzg/minecraft-server
    ports:
      - ""25565:25565/tcp""  #this is the standard mc server port, this and the one below tell the server to link/open it to the host
      - ""24454:24454/udp""  #this is for the vc mod, the line can be removed if you dont use it
    environment:
      EULA: ""TRUE""
      TYPE: ""FORGE"" #this type sets up a basic forge server for the minecraft version below
      VERSION: ""1.19.2""
      MOTD: ""Haven: CaveBlock 1.2.7"" #what shows up under the server-name when you add a server to the server list
      MEMORY: ""16G"" #how much memory to use, probably want to change this
      USE_AIKAR_FLAGS: ""true"" #some usefull java optimizations for mc, in very rare occasions this can cause issues... or so ive heard, haven't encountered any yet
      
      #generic packs are zip files that are designed to be unzipped over an initialized forge server, many serverpacks distributed nowadays are like this, but you should double check
      GENERIC_PACKS_PREFIX: ""/archive/"" #the folder path that was the target of the bind farther down, don't change this
      GENERIC_PACKS_SUFFIX: "".zip""  #we are looking for .zip files
      GENERIC_PACKS: ""ServerFiles"" #this is the name of the server-pack that we downloaded and renamed, with the above, it will be seen as /archive/ServerFiles.zip
      #if desired, you can add aditional packs, ie. for custom configs, by adding additional names to the GENERIC_PACKS var sepperated by a ',', resulting in something like ""ServerFiles,MyCustomPack""

      ALLOW_FLIGHT: ""true"" #I enable this since some mods will trigger the anti-flight detection and kick you from the server
      LEVEL_TYPE: ""skyblockbuilder:skyblock"" #important for modpacks like this one, will cause the skyblock/stoneblock stuff to be used
      WHITELIST: | #this is where you would set your whitelist players, make sure to maintain the spaces before, as this is a yaml file and whitespace matters
        user1
        user2
        user3
      EXISTING_WHITELIST_FILE: ""SYNC_FILE_MERGE_LIST"" #will merge the list with the one that is already there
      OPS: | #same as the whitelist, but for the ops
        user1
        user2
        user3
      EXISTING_OPS_FILE: ""SYNC_FILE_MERGE_LIST""
      STOP_SERVER_ANNOUNCE_DELAY: 30 #this is how long the server will wait in seconds after being told to shutdown by docker, helps prevent confusion if you have an auto-update system, but ofc it will be slower to shutdown
    tty: true
    stdin_open: true
    restart: unless-stopped #if the server crashes, or the host restarts, the server will restart itself
    stop_grace_period: 1m30s #this is how long docker will wait for the server to fully stop before forcefully killing it
    volumes:
      - type: bind #this links to a folder on the host machine
        source: /home/hpf3/minecraftBackups/Modpacks/Haven-CaveBlock #this is where i keep my server-pack .zip
        target: /archive #this is the path that the folder will have inside the container, don't change this
        read_only: true #there is no reason for the server to write to the folder, so i leave it as read-only for safety
      - type: volume #this is a virtual disk, it is easy to manage as far as deleting and keeping it seperate, but if you plan to mess with the files often, i recommend using a bind instead
        source: Data #this is the name of the volume created at the bottom of the file
        target: /data #this is the path where the server creates all of its files, don't change it
        read_only: false

        
volumes:
  Data:
    external: false #this means that docker will create(if it doesn't already exist) a new volume named something like ""StackName-Data"" for its use"
gW66gzt0,Bastion Reciever,Alexr360,Lua,Tuesday 20th of February 2024 05:19:12 PM CDT,"local bridgeGateOpen = true
local courtyardGateOpen = true
local lockdownEnabled = true

local function bastion()
	local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
    modem.open(15) -- Open 43 so we can receive replies

    -- Send our message
    modem.transmit(43, 15, ""Bastion Network Online"")

    -- And wait for a reply
    local event, side, channel, replyChannel, message, distance
    repeat
      event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    until channel == 15

    -- Process the received message based on its content
    if message == ""Bridge"" then
        print(""Toggling Bridge Gate"")
        redstone.setOutput(""left"", true)  -- Emit a redstone signal to the right
        os.sleep(1)  -- Keep the signal for 1 seconds
        redstone.setOutput(""left"", false)  -- Turn off the redstone signal
        bridgeGateOpen = not bridgeGateOpen
        if bridgeGateOpen
	        print(""Opening Bridge Gate"")
	        modem.transmit(43, 15, ""Opening Bridge Gate"")
        else
	        print(""Closing Bridge Gate"")
	        modem.transmit(43, 15, ""Closing Bridge Gate"")
		end

    elseif message == ""Courtyard"" then
        redstone.setOutput(""right"", true)  -- Emit a redstone signal to the right
        os.sleep(1)  -- Keep the signal for 1 seconds
        redstone.setOutput(""right"", false)  -- Turn off the redstone signal
        courtyardGateOpen = not courtyardGateOpen
        if courtyardGateOpen
	        print(""Opening Courtyard Gate"")
	        modem.transmit(43, 15, ""Opening Courtyard Gate"")
        else
	        print(""Closing Courtyard Gate"")        
	        modem.transmit(43, 15, ""Closing Courtyard Gate"")
		end
        
    elseif message == ""Remote Connected"" then
        modem.transmit(43, 15, ""Connected to Bastion Network"")
        print(""Remote Connected"")

    elseif message == ""Lockdown"" then
        print(""Enabling Lockdown"")
        redstone.setOutput(""front"", true)  -- Emit a redstone signal to the right
        os.sleep(1)  -- Keep the signal for 1 seconds
        redstone.setOutput(""front"", false)  -- Turn off the redstone signal
        lockdownEnabled = not lockdownEnabled
        if lockdownEnabled
	        print(""Enabling Lockdown"")
            modem.transmit(43, 15, ""Enabling Lockdown"")
            local speaker = peripheral.find(""speaker"")
            speaker.playSound(""alexscaves:nuclear_siren"")
        else
	        print(""Disabling Lockdown"")
            modem.transmit(43, 15, ""Disabling Lockdown"")
            local speaker = peripheral.find(""speaker"")
		end
    else
      print(""Received a reply with an unrecognized option:"", tostring(message))
    end
end

-- Main loop
while true do
    bastion()
end"
EYsBgP7Y,Restart Alexa Media Player every morning at 5:30,energywave,YAML,Tuesday 20th of February 2024 05:10:23 PM CDT,"  # Ricarica integrazione Alexa tutte le notti
  - id: 7a85ce07-9175-4f67-a728-c87968b5a80c
    alias: Alexa - Fix - Riavvia integrazione
    trigger:
      - platform: time_pattern
        hours: ""5""
        minutes: ""30""
    action:
      - service: homeassistant.reload_config_entry
        data: {}
        target:
          entity_id: media_player.pian_terreno  "
uhBz6kyr,Review Pastes,xxsa,PHP,Tuesday 20th of February 2024 05:09:28 PM CDT,https://pastes.io/pages/pastebin-alternative
Czt0xUgp,Bastion Remote,Alexr360,Lua,Tuesday 20th of February 2024 05:09:10 PM CDT,"local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(43) -- Open 43 so we can receive replies

modem.transmit(15, 43, ""Remote Connected"")

local event, side, channel, replyChannel, message, distance
repeat
  event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 43

print(tostring(message))


-- Send our message
print(""Enter your message:"")
local userMessage = read()
modem.transmit(15, 43, userMessage)

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
  event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 43

print(tostring(message))"
teD89ALd,LLM Error,PyNoob1,Python,Tuesday 20th of February 2024 05:00:38 PM CDT,"'
This the parent widget code to which I want to add the web scraper that i have also provided

# Parent Widget Code:

#!/usr/bin/env python3

import tkinter as tk
from tkinter import messagebox, PhotoImage, font
from tkinter.ttk import Frame, Button
from io import StringIO
import sys
from ttkthemes import ThemedTk
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.common.keys import Keys
from bs4 import BeautifulSoup
import time

# Function to redirect console output to text widget
class TextRedirector(object):
    def __init__(self, widget):
        self.widget = widget

    def write(self, str):
        self.widget.insert(tk.END, str)
        self.widget.see(tk.END)

    def flush(self):
        # This could be left empty as Tkinter's Text widget doesn't need flushing
        pass

# Your functions
def get_profile():
    profile = webdriver.FirefoxProfile()
    profile.set_preference(""browser.privatebrowsing.autostart"", True)
    return profile

def scroll_to_end(browser):
    scroll_pause_time = 5
    last_height = browser.execute_script(""return document.body.scrollHeight"")

    while True:
        browser.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
        time.sleep(scroll_pause_time)
        new_height = browser.execute_script(""return document.body.scrollHeight"")
        if new_height == last_height:
            break
        last_height = new_height

def save_html(browser, path):
    html_content = browser.page_source
    soup = BeautifulSoup(html_content, 'html.parser')
    pretty_html = soup.prettify()

    with open(path, 'w', encoding='utf-8') as f:
        f.write(pretty_html)

def scrape_website():
    options = Options()
    options.profile = get_profile()
    browser = webdriver.Firefox(options=options)
    browser.get(""https://www.oddsportal.com/matches/football/20240222/"")
    
    scroll_to_end(browser)
    save_html(browser, r""/home/harshad/Projects/Predictor/Football Predictor/research/website_soup.txt"")
    
    browser.quit()
    print(""Website scraped successfully!"")

def refresh_selections():
    print(""Selections updated successfully!"")

def predict():
    print(""Prediction completed successfully!"")

# Create the main window
root = ThemedTk(theme=""arc"")
root.title(""Football Predictor"")

# Create a text widget
output = tk.Text(root)
output.pack()

# Redirect console output to text widget
sys.stdout = TextRedirector(output)

# Create a frame for the buttons
button_frame = Frame(root)
button_frame.pack(fill=tk.BOTH, expand=True)

# Create buttons for each action
scrape_button = Button(button_frame, text=""Scrape Website"", command=scrape_website)
update_button = Button(button_frame, text=""Refresh Selections"", command=refresh_selections)
predict_button = Button(button_frame, text=""Predict"", command=predict)

# Add the buttons to the window
scrape_button.grid(row=0, column=0, sticky='ew')
update_button.grid(row=1, column=0, sticky='ew')
predict_button.grid(row=2, column=0, sticky='ew')

# Configure the rows and columns for responsiveness
button_frame.columnconfigure(0, weight=1)
for i in range(3):
    button_frame.rowconfigure(i, weight=1)

# Start the main loop
root.mainloop()

above is the parent code. 

the below is an existing code that scrapes the data from the website:

# Existing Scraper Code

def parse_data(url, return_urls=False):
    print(f'Parsing URL: {url}\n')
    browser = create_driver()
    browser.get(url)
    # Wait for the first match element to be present
    wait = WebDriverWait(browser, 20)
    # Wait for the team names to be present
    team_name_class = ""participant-name""
    wait.until(EC.presence_of_element_located((By.CLASS_NAME, team_name_class)))

    # Now, check if the first match element contains match data
    match_element_class = ""border-black-borders.group.flex""  # Class of the match element
    first_match_element = browser.find_element(By.CSS_SELECTOR, f"".{match_element_class}"")
    match_data_indicator = ""participant-name""  # Class indicating match data
    wait.until(EC.presence_of_element_located((By.CLASS_NAME, match_data_indicator)))

    # ########## For page to scroll to the end ###########
    scroll_pause_time = 4
    try:
        # Get scroll height
        last_height = browser.execute_script(""return document.body.scrollHeight"")

        while True:
            import time
            # Scroll down to bottom
            browser.execute_script(""window.scrollTo(0, 0);"")  # Scroll to the top
            # Wait to load page
            time.sleep(1)  # Wait briefly
            browser.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")  # Scroll down
            time.sleep(scroll_pause_time)
            # Calculate new scroll height and compare with last scroll height
            new_height = browser.execute_script(""return document.body.scrollHeight"")
            if new_height == last_height:
                break
            last_height = new_height
        # ########## For page to scroll to the end ###########
        # If browser stalls and gives a timeout exception, refresh the browser
    except TimeoutException:
        print(""Timeout exception occurred, refreshing the page..."")
        browser.refresh()

    html_content = browser.page_source

    soup = bs(html_content, 'html.parser')
    pretty_html = soup.prettify()

    with open(r""C:\Users\harshad\Documents\Harshad Projects\Python Projects\Football Predictor\Files\z.Research\website_soup.txt"", 'w', encoding='utf-8') as f:
        f.write(pretty_html)

    # Using lxml and XPath
    tree = html.fromstring(html_content)

    # Extracting the date from the header
    date = tree.xpath('//h1[@id=""next-matches-h1""]/text()')[0]

    # Splitting the date string to get the date part
    date = date.split("", "")[-1]

    data = []

    # Initialize initial values for Country and League
    current_country = None
    current_league = None

    # Extracting match rows
    match_rows = tree.xpath('//div[contains(@class, ""eventRow"")]')

    # Iterate through each match row
    for match_row in match_rows:
        country = match_row.xpath('.//a[contains(@class, ""font-normal"")]/p[contains(@class, ""truncate"")]/text()')
        league = match_row.xpath('.//a[contains(@class, ""truncate"")]/text()')

        if country:
            current_country = country[0].strip()
        else:
            country = [current_country]

        if league:
            current_league = league[0].strip()
        else:
            league = [current_league]

        # Extract Game Teams
        team1_elements = match_row.xpath('.//a[starts-with(@href, ""/football/"")][1]/div/p/text()')
        team1 = team1_elements[0].strip() if team1_elements else ''
        team2_elements = match_row.xpath('.//a[starts-with(@href, ""/football/"")][2]/div/p/text()')
        team2 = team2_elements[0].strip() if team2_elements else ''
        game_teams_str = f""{team1} - {team2}""

        
        time = match_row.xpath('.//div/p/text()')[0].strip()
        score1_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold"")]/text()'
        score2_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold font-bold"")]/text()'
        # Extract the scores
        scores_xpath = './/a/div[contains(@class, ""ml-auto mr-3 flex font-bold"")]/text()'
        scores = match_row.xpath(scores_xpath)
        scores = [score.strip() for score in scores]

        if len(scores) >= 2:
            score1, score2 = scores[:2]
            score = f""{score1}:{score2}""
        else:
            score = None
        # Check if ""&nbsp;"" is in the score
        if score and ""&nbsp;"" in score:
            try:
                score1_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold next-m:!hidden"")]/text()'
                score2_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold next-m:!hidden font-bold"")]/text()'
                # Extract the scores
                score1 = match_row.xpath(score1_xpath)[0]
                print(""Score1 List: "", score1)
                score1 = score1[0] if score1 else None

                score2 = match_row.xpath(score2_xpath)[0]
                print(""Score2 List: "", score2)
                score2 = score2[0] if score2 else None

                if score1 and score2:
                    score = f""{score1.strip()}:{score2.strip()}""
            except IndexError:
                score_list = match_row.xpath('//div[@data-v-0398e93e=""""]/p/text()')
                print(""Score List: "", score_list)
                score = score_list[0].strip() if score_list else None
        # Extract odds and handle the case where odds are not present
        odds = match_row.xpath('.//p[contains(@class, ""height-content"")]/text()')
        odds = [s.strip() for s in odds if s.strip().replace('.', '', 1).isdigit()]
        home_odds = odds[0] if odds else None
        draw_odds = odds[1] if len(odds) > 1 else None
        away_odds = odds[2] if len(odds) > 2 else None

        # Append extracted data to the data list
        data.append({
            ""country"": country[0],  # Take the first element as the value
            ""league"": league[0],  # Take the first element as the value
            ""date"": date,
            ""time"": time,
            ""game"": game_teams_str,
            ""score"": score,
            ""home_odds"": home_odds,
            ""draw_odds"": draw_odds,
            ""away_odds"": away_odds
        })

        # Data validation
    if not data:
        print(f""No valid data extracted for URL: {url}"")
        return None  # Skip this URL and return None

    # Create a DataFrame from the data list
    df = pd.DataFrame(data)

    # Convert the DataFrame to a formatted table
    table = tabulate(df, headers='keys', tablefmt='pretty')
    print(f""Table for URL: {url}\n{table}"")

    # Return the DataFrame for this URL
    return df

    I want to refactor this scraper to the parent widget code.

    Please provide me the refactored code.
    '"
aZYzL6n8,Converte link do GoogleDrive para link direto.,RibaSoft,JavaScript,Tuesday 20th of February 2024 04:45:46 PM CDT,"  function ConverteLink(){
	var Edit = document.getElementById('edit');
	var Texto = Edit.value;
     
  	if(Texto.substring(0, 32) != 'https://drive.google.com/file/d/'){
		alert('Link Inválido!');		
		return;
	}
      
	var T = 'https://drive.google.com/file/d/';
	var Inicio = T.length;
	var Fim = Texto.indexOf('/view?usp=sharing');
	var ID = Texto.substring(Inicio, Fim);
	var NovoLink = 'https://docs.google.com/uc?export=download&id=' + ID;
	Edit.value = NovoLink;
   	alert('Convertido!');
  }"
THfJe585,auto Spirit soul steel ingot Ragna7 v1.6,mickael49300_fr,Lua,Tuesday 20th of February 2024 04:42:29 PM CDT,"-- fix drop iron
print("" auto Spirit soul steel ingot Ragna7 "")
print("" programme V1.6"")
print("" by Mickael49300_fr "")
print("" en attente de ressource "")
while true do
sleep(.1)

  while rs.getInput(""back"") do -- attente du signal de redstone pour lancer le programe
-- chargement des items
print("" lancement du programme "")
print("" 16 Burnt Otherstone"")
turtle.select(1)
turtle.suck(16) -- prend les 16 Burnt Otherstone

turtle.up()
turtle.up()
turtle.up()

turtle.forward()
turtle.forward()
turtle.turnRight()
print("" drop des 16 Burnt Otherstone"")
turtle.dropDown() -- drop les 16 Burnt Otherstone

turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.down()
sleep(35)
-- craft du soul powder block
print("" craft du soul powder"")
turtle.suckDown(4)
turtle.select(2)
turtle.suckDown(4)
turtle.select(5)
turtle.suckDown(4)
turtle.select(6)
turtle.suckDown(4)
turtle.select(1)
turtle.craft() -- craft les 4 soul powder block
-- fin du craft
print("" prend le reste des items"")
turtle.forward()
turtle.forward()

turtle.select(2)
turtle.suckDown(1) -- prend 1 soul soil

turtle.forward()
turtle.select(3)
turtle.suckDown(1) -- prend 1 iron ingot 

turtle.forward()
turtle.select(4)
turtle.suckDown(1) -- prend 1 flint and steel
print("" pose les bloc pour le rituel"")

-- modif

turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.up()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.down()
turtle.down()
turtle.select(1)
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.up()
turtle.select(2)
turtle.placeDown() -- place 1 soul soil
turtle.up()

-- fin modif

turtle.select(4)
turtle.placeDown() -- utilise le flint and steel

turtle.select(3)
turtle.dropDown() -- drop iron ingot
print("" retour maison et depose du flint and steel"")
turtle.forward()
turtle.forward()
turtle.down()
turtle.select(4)
turtle.dropDown() -- drop le flint and steel dans le coffre

turtle.forward()
turtle.forward()
turtle.forward()

turtle.down()
turtle.down()
sleep(1)
print("" en attente de ressource"")
   
  end
end"
Pue7egLA,auto build Neural Machine Frame pour Ragnamod 7,mickael49300_fr,Lua,Tuesday 20th of February 2024 04:37:02 PM CDT,"print("" auto build Neural Machine Frame pour Ragnamod 7 "")
print("" programme V.1 "")
print("" by Mickael49300_fr "")
print("" en attente de ressource "")
while true do
sleep(.1)

  while rs.getInput(""back"") do -- attente du signal de redstone pour lancer le programe
-- chargement des block
print("" chargement des block "")
sleep(1)
turtle.select(1) -- Steel Casing
turtle.suck(1)
turtle.select(2) -- Black Plastic Block
turtle.turnLeft()
turtle.suck(26)
turtle.turnLeft()
turtle.turnLeft()
turtle.select(3) -- Redstone Servo
turtle.suck(1)
turtle.turnLeft()

-- construction du Neural Machine Frame
print("" construction du Neural Machine Frame"")

-- 1er etage

print("" build du 1er etage "")
turtle.up()
turtle.up()
turtle.up()
turtle.select(2)
turtle.forward()
turtle.turnRight()
turtle.placeDown()  -- pose le 1er Neural Machine Frame 
turtle.forward()
turtle.turnLeft()
turtle.placeDown()  -- pose le 2eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 3eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 4eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 5eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 6eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 7eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 8eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 9eme Neural Machine Frame


-- 2eme etage

print("" build du 2eme etage "")
turtle.up()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 10eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 11eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 12eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 13eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 14eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 15eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 16eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 17eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.select(1)
turtle.placeDown()  -- pose le Steel Casing
turtle.select(2)
turtle.forward()

-- 3eme etage

print("" build du 3eme etage "")
turtle.up()
turtle.turnLeft()
turtle.placeDown()  -- pose le 18eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 19eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 20eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 21eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 22eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 23eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 24eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 25eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 26eme Neural Machine Frame

-- drop du Gaia Spirit
print("" drop du Redstone"")
turtle.up()
turtle.select(3)
turtle.dropDown()
  -- retour vers la zone d'attente
print("" pause de 15sec "")  
sleep(10)
print("" retour au point de depart "")
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.turnLeft()
turtle.down()
turtle.down()
turtle.down()
turtle.down()
turtle.down()
turtle.down()
sleep(1)
print(""en attente de ressource"")
   
  end
end"
iHXsjZki,Simple parsing of text formatting,RedstoneHair,Python,Tuesday 20th of February 2024 04:12:31 PM CDT,"from html.parser import HTMLParser
from collections import deque

fonts = ['regular', 'bold', 'italic', 'bold_italic']
colors = ['white', 'yellow']
color_map = {
    'attack': 'yellow',
}
gimmicks = ['solid']


class AdvancedTextParser(HTMLParser):
    def __init__(self):
        super().__init__()
        self.current_font = deque(fonts[0:1])
        self.current_color = deque(colors[0:1])
        self.current_gimmick = deque(gimmicks[0:1])
        self.letters = []

    def handle_starttag(self, tag, attrs):
        if tag in fonts:
            if tag == 'italic' and 'bold' in self.current_font:
                self.current_font.append('bold_italic')
            elif tag == 'bold' and 'italic' in self.current_font:
                self.current_font.append('bold_italic')
            else:
                self.current_font.append(tag)
        elif tag in colors:
            self.current_color.append(tag)
        elif tag in color_map:
            self.current_color.append(color_map[tag])
        elif tag in gimmicks:
            self.current_gimmick.append(tag)

    def handle_endtag(self, tag):
        if tag in fonts:
            self.current_font.pop()
        elif tag in colors:
            self.current_color.pop()
        elif tag in color_map:
            self.current_color.pop()
        elif tag in gimmicks:
            self.current_gimmick.pop()

    def handle_data(self, data):
        for letter in data:
            self.letters.append((letter, self.current_color[-1], self.current_font[-1], self.current_gimmick[-1]))


def parse_text(text):
    parser = AdvancedTextParser()
    lines = []
    for line in text.splitlines():
        parser.feed(line)
        lines.append(parser.letters)
        parser.letters = []
    print(lines)
    return lines"
vavXjgqb,Untitled,buonaseva_fatelo,C++,Tuesday 20th of February 2024 03:53:24 PM CDT,"#include <iostream>


using namespace std;

struct Studente {
    char nome[10];
    int votoItaliano;
    int votoMatematica;
    int votoInformatica;
    float media;
};

int main() {
    const int NUM_STUDENTI = 5;
    Studente studenti[NUM_STUDENTI];

    for (int i = 0; i < NUM_STUDENTI; i++) {
        cout << ""Inserisci il nome dello studente: "";
        cin >> studenti[i].nome;

        cout << ""Inserisci il voto di italiano: "";
        cin >> studenti[i].votoItaliano;

        cout << ""Inserisci il voto di matematica: "";
        cin >> studenti[i].votoMatematica;

        cout << ""Inserisci il voto di informatica: "";
        cin >> studenti[i].votoInformatica;

        studenti[i].media = (studenti[i].votoItaliano + studenti[i].votoMatematica + studenti[i].votoInformatica) / 3.0;
    //media= (voto_materia1 + voto_materia2...) / (numero materie)
    }

    cout << ""\nNome\tItaliano\tMatematica\tInformatica\tMedia\n"";
    for (int i = 0; i < NUM_STUDENTI; i++) {
        cout << studenti[i].nome << ""\t""
             << studenti[i].votoItaliano << ""\t\t""
             << studenti[i].votoMatematica << ""\t\t""
             << studenti[i].votoInformatica << ""\t\t""
             << studenti[i].media << ""\n"";
    }

    return 0;
}
"
tVh3Z6VC,atcmd.sh,snowgum,Bash,Tuesday 20th of February 2024 03:28:23 PM CDT,"#!/bin/sh

ROOTER=/usr/lib/rooter
ATCMDD=$1

CURRMODEM=$(uci get modem.general.miscnum)
COMMPORT=""/dev/ttyUSB""$(uci get modem.modem$CURRMODEM.commport)

M2=$(echo ""$ATCMDD"" | sed -e ""s#~#\""#g"")
COPS=""+cops=?""
QOPS=""+qops?""
QSCAN=""+qscan=2""
M3=$(echo ""$M2"" | awk '{print tolower($0)}')
if `echo ${M3} | grep ""${COPS}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
elif `echo ${M3} | grep ""${QOPS}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
elif `echo ${M3} | grep ""${QSCAN}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
else
	export TIMEOUT=""5""
fi
OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
echo ""$OX"" > /tmp/result$CURRMODEM.at
"
sM3tVh1S,dddd,FeelKe,Python,Tuesday 20th of February 2024 03:20:14 PM CDT,"from __future__ import annotations

import time
from time import sleep
from urllib.parse import unquote
import pandas as pd
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException, StaleElementReferenceException
from selenium.webdriver.common.by import By
from selenium.webdriver.remote.webdriver import WebDriver
from selenium.webdriver.remote.webelement import WebElement
import pathes

TABLE_COLUMNS = ['Название', 'Телефон', 'Адрес', 'Ссылка']
TABLE = {column: [] for column in TABLE_COLUMNS}


def get_element_text(driver: WebDriver, path: str) -> str:
    try:
        return driver.find_element(By.XPATH, path).text
    except NoSuchElementException:
        return ''


def move_to_element(driver: WebDriver, element: WebElement | WebDriver) -> None:
    try:
        webdriver.ActionChains(driver).move_to_element(element).perform()
    except StaleElementReferenceException:
        pass


def element_click(driver: WebDriver | WebElement, path: str) -> bool:
    try:
        driver.find_element(By.XPATH, path).click()
        return True
    except:
        return False


def main():
    search_query = 'Вкусно и точка'
    url = f'https://2gis.ru/ufa/search/{search_query}'
    driver = webdriver.Edge()
    driver.maximize_window()
    driver.get(url)
    element_click(driver, pathes.main_banner)
    element_click(driver, pathes.cookie_banner)
    count_all_items = int(get_element_text(driver, pathes.items_count))
    pages = round(count_all_items / 12 + 0.5)
    for _ in range(pages):
        main_block = driver.find_element(By.XPATH, pathes.main_block)
        count_items = len(main_block.find_elements(By.XPATH, 'div'))
        for item in range(1, count_items + 1):
            if main_block.find_element(By.XPATH, f'div[{item}]').get_attribute('class'):
                continue
            item_clicked = element_click(main_block, f'div[{item}]/div/div[2]')
            if not item_clicked:
                driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
                element_click(main_block, f'div[{item}]/div/div[2]')
            element_click(driver, pathes.btnreviews)
            sleep(2)
            full_element = driver.find_element(By.XPATH, pathes.scroll)
            while True:
                prev_height = driver.execute_script(""return arguments[0].scrollHeight;"", full_element)
                driver.execute_script(""arguments[0].scrollTo(0, arguments[0].scrollHeight);"", full_element)
                time.sleep(0.5)
                new_height = driver.execute_script(""return arguments[0].scrollHeight;"", full_element)
                if new_height > prev_height:
                    pass
                else:
                    break
            title = get_element_text(driver, pathes.title)
            phone_btn_clicked = element_click(driver, pathes.phone_btn)
            phone = get_element_text(driver, pathes.phone) if phone_btn_clicked else ''
            move_to_element(driver, main_block)
            link = unquote(driver.current_url)
            address = get_element_text(driver, pathes.address)
            TABLE['Название'].append(title)
            TABLE['Телефон'].append(phone)
            TABLE['Адрес'].append(address)
            TABLE['Ссылка'].append(link)
        driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
        element_click(driver, pathes.next_page_btn)
        sleep(0.5)
    driver.quit()
    pd.DataFrame(TABLE).to_excel(f""{search_query}.xlsx"")


if __name__ == '__main__':
    main()
"
d7UeTswn,minotaur sass/css,Apollyna,CSS,Tuesday 20th of February 2024 03:07:39 PM CDT,"/****************************************************************************************************/
/* DECLARE VARIABLES */
$PO-header-order: 1 !important;
/* 1 or 3 */
$PO-max-width: 900px !important;
$PO-accent: #6663d3 !important;
$PO-accent-utility: #6663d3;
$PO-accent-hover: #ff5dae !important;
$PO-side-subheader: mix($PO-accent-utility, rgba(0, 0, 0, 0), 50%) !important;
$PO-side-header: mix($PO-accent-utility, rgba(0, 0, 0, 0), 75%) !important;

/****************************************************************************************************/
/* APPLY VARIABLES */
a {
  color: $PO-accent;
}

a:hover {
  color: $PO-accent-hover;
  transition: 100ms ease-in-out;
}

.PO-accent,
.text-primary {
  color: $PO-accent;
}

li.header {
  color: #fff !important;
  background-color: $PO-side-header;
}

li.header a {
  color: #fff !important;
}

li.subheader {
  background-color: $PO-side-subheader;
}

li.subheader a {
  color: #fff !important;
}

/****************************************************************************************************/
/* BUTTONS AND BADGES */
/* navbar buttons */
.navbar .btn {
  color: #fff !important;
  background: $PO-accent;
  border-color: $PO-accent;
}

.navbar .btn :hover,
.navbar .btn-primary :hover,
.badge-primary:focus,
.btn-primary:hover,
a.badge-primary:focus,
a.btn-primary:hover,
.btn-primary.active,
.btn-primary:active,
.show>.btn-primary.dropdown-toggle,
{
color: #fff !important;
background: $PO-accent-hover;
border-color: $PO-accent-hover;
}

.side-nav li.active>a,
.side-nav li.active>a:focus,
.side-nav li.active>a:hover,
.side-nav li.active>a:link,
{
color: $accent !important;
}

/* page badges */
.page-body .badge,
.page-body .badge-primary,
a.badge-primary,
.btn-primary {
  color: #fff !important;
  background: $PO-accent;
  border-color: $PO-accent;
}

.btn-danger,
.btn-danger a {
  color: #fff !important;
}

#header .dropdown-item,
#header .nav-link,
#header .navbar-brand {
  color: hsla(0, 0%, 100%, .5) !important;
}

.page-body .badge :hover,
.page-body .badge-primary :hover,
.badge-primary:focus,
.badge-primary:hover,
a.badge-primary:focus,
a.badge-primary:hover,
.badge-primary.active,
.badge-primary:active,
.show>.badge-primary.dropdown-toggle {
  color: #fff !important;
  background: $PO-accent-hover;
  border-color: $PO-accent-hover;
}

/* header badge font color */
.profile-tags-content a {
  color: #fff !important;
}

/****************************************************************************************************/
/* STREAMLINING */
.profile-gallery-content {
  text-align: center;
}

.profile-content-title {
  display: none;
}

div.character-profile {
  max-width: 1500px;
}

.profile-content-content .user-content {
  max-width: 1300px;
  margin-left: auto;
  margin-right: auto;
}

.row .profile-header {
  flex-direction: column !important;
  width: 100%;
  max-width: $PO-max-width;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1rem !important;
}

@media (min-width: 992px) {
  .profile-header {
    order: $PO-header-order;
  }

  .profile-info-section {
    padding: 0 !important;
  }

  .profile-name-section {
    padding: 0 !important;
  }
}

@media (min-width: 576px) {
  .character-profile {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
}"
T6pjCWUg,Untitled,sissou123,HTML,Tuesday 20th of February 2024 03:04:42 PM CDT,"50 Projects In 50 Days - HTML, CSS & JavaScript
Sharpen your skills by building 50 quick, unique & fun mini projects 
What you'll learn
Project based teaching to sharpen your HTML, CSS & JavaScript skills
Perfect for beginners looking for things to build unique projects in a short timeframe 
for more:https://d-aa.com/rVEMj
"
sScVKw4D,minotaur html,Apollyna,HTML,Tuesday 20th of February 2024 02:59:02 PM CDT,"<div class=""container p-0 mb-3 text-muted"" style=""max-width: 900px;font-size: 1em;"">
	<!-- FLOATING DECOR ================================================== -->
	<div class=""PO-accent hidden-md-down"">
		<!-- top left ========== -->
		<div style=""position:absolute; top:0;bottom:0;left:0;right:0;"">
			<!-- --><i class=""fa far fa-shield-xmark"" style=""position: absolute;top: -0.4em;left: -0.8em;font-size: 6em;/transform: rotate(45deg);""></i>
			<!-- --><i class=""fa fal /fa-flip fa-globe"" style=""position: absolute;top: 0.8em;left: -1.1em;font-size: 7em;animation-duration: 5s;""></i>
			<!-- --><i class=""fa far fa-key"" style=""position: absolute;top: 3em;left: -0.9em;font-size: 5em;/transform: scaleX(-1);""></i>
		</div>
		<!-- bottom right ========== -->
		<div style=""position:absolute; top:0;bottom:0;left:0;right:0;"">
			<!-- --><i class=""fa far fa-lock"" style=""position: absolute;bottom: 2.7em;right: -0.6em;font-size: 5em;""></i>
			<!-- --><i class=""fa fal /fa-flip fa-file"" style=""position: absolute;bottom: 0.7em;right: -0.9em;font-size: 7em;animation-duration: 5s;""></i>
			<!-- --><i class=""fa far fa-xs fa-fingerprint"" style=""position: absolute;bottom: 0.2em;right: -0.7em;font-size: 4em;""></i>
		</div>
	</div>
	<!-- CONTENT COLUMN ================================================== -->
	<div class=""p-3 card bg-faded"">
		<div class=""card bg-faded border-0 flex-row row no-gutters"" style=""/border: 4px solid rgba(4,71,142,0.25);"">
			<!-- CONTENT BOX -->
			<div class=""order-2 order-lg-1 col-lg-7 my-n3"">
				<!-- MUSIC BOX  -->
				<div class=""card border-0 my-3"">
					<div class=""p-3"">
						<div class=""px-3 px-md-4"">
							<div class=""flex-row my-2 /p-5 row no-gutters justify-content-center display-4"" style=""font-size:1.5em; /border: 1px solid rgba(97,170,160,0.5);"">
								<div class=""col px-3 pl-5 my-auto"">
									<hr class=""bg-dark"" style=""/background-color: #53a494;opacity: 0.2;"">
								</div>
								<div class=""col-auto my-auto px-3"">
									<a class=""melody-embed p-3 d-flex rounded overflow-hidden"" style=""border:0;position:relative;height: 2.5rem;width: 2.5rem;z-index:2;/color: #8c9d74;"">
										<iframe style=""opacity:.01;position:absolute;top:-115px;left:-20px;"" src=""https://www.youtube-nocookie.com/embed/D7B5I7ZO2jg?controls=1"" frameborder=""0""></iframe><i class=""fa fa-thin fa-compact-disc fa-spin /fa-fw /fa-play-pause /fa-fade"" style=""z-index:-1;position:absolute;left:0;top:0;font-size: 2.5rem;/text-align:center; /height:100%; /width:100%;""></i></a>
								</div>
								<div class=""col px-3 pr-5 my-auto"">
									<hr class=""bg-dark"" style=""/background-color: #53a494;opacity: 0.2;"">
								</div>
								<div class=""col-12 text-center mt-3"">
									<!-- show on small screens ========== -->
									<div class=""d-md-none mt-n1 px-md-2 px-lg-0"">
										<a class=""text-reset text-uppercase"" href=""https://www.youtube.com/watch?v=D7B5I7ZO2jg"" id="""" rel=""noopener noreferrer"" style=""/color: #8c9d74;"" target=""_blank"">
											<!-- -->
											<!-- --><span style=""white-space:nowrap;"">Banned From Living</span>
											<!-- --><span>&nbsp;</span>
											<!-- --><span class=""faded"" style=""white-space:nowrap;"">// GLOOMCVLT</span>
										</a>
									</div>
									<!-- show on large screens ========== -->
									<div class=""d-none d-md-inline-block /text-uppercase font-italic align-items-center /mr-n3"">
										<a class=""text-reset"" href=""https://www.youtube.com/watch?v=D7B5I7ZO2jg"" id="""" rel=""noopener noreferrer"" style=""/color: #8c9d74;word-break: break-word;"" target=""_blank"">
											<!-- -->
											<!-- --><span style=""white-space:nowrap;"">Banned From Living</span>
											<!-- --><span>&nbsp;</span><span>&nbsp;</span>
											<!-- --><span class=""faded"" style=""white-space:nowrap;"">- GLOOMCVLT</span>
										</a>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<!-- BIO BOX -->
				<div class=""card border-0 p-4 my-3"">
					<div class=""d-none PO-accent text-primary flex-column border-0 mb-1 display-4 text-uppercase justify-content-between align-items-center flex-fill align-items-end"" style=""color: #3a96c3;font-size:1.7em;""><span style=""
    font-size: 1.5em;
    font-weight: 100;"">TBN</span><span class=""text-lowercase mt-1 /ml-2"" style=""font-size:1rem;""><em>pr / ns</em></span><i class=""d-none fa fal fa-sparkles faded /mt-1 /mx-3 ml-auto""></i></div>
					<hr class=""d-none w-100"">
					<div>
						<p class=""align-items-end text-center text-lg-left""><span class=""display-4"">TBN</span><span class=""mx-3"">&mdash;</span><em>it / they</em></p>
						<p><a href=""https://www.pinterest.com/apollyna/z0-vaporvvaves-plug-suit-minotaur-adopt/"" id="""" rel=""noopener noreferrer"" target=""_blank"">[ pinterest moodboard ]</a></p>
						<p>adopted 2024/02/11</p>
						<p class=""mb-3"">plans:</p>
						<ul class=""pl-4 m-0"" style=""list-style-type: circle;"">
							<li class=""mb-2"">slick scifi minotaur theme, creepily &quot;pleasant&quot; humanoid face</li>
							<li class=""mb-2"">an antivirus. tricks/traps malware into Quarantine - a seemingly infinite labyrinth - and then hunts them down</li>
							<li class=""mb-2"">androgynous voice. sounds filter-y, synth-y, techy. speech is even-toned, and emotionless.</li>
							<li class=""mb-2"">chunky mech-y legs, shape reminiscent of hooves</li>
						</ul>
					</div>
				</div>
			</div>
			<!-- MOODBOARD -->
			<div class=""order-1 order-lg-2 col-lg d-flex flex-lg-column rounded overflow-hidden ml-lg-3 mb-3 mb-lg-0"" style=""min-height:15em;position:relative;"">
				<div class=""card border-0 rounded-0 flex-fill /mb-1"">
					<div class=""card-img-overlay bg-dark /rounded overflow-hidden"" style=""background-image:url(https://i.pinimg.com/564x/67/22/a0/6722a0df5a0fe22b30bd5cb7e03d5020.jpg);background-size:cover;background-position:center;min-height:10em;"">&nbsp;</div>
				</div>
				<div class=""card border-0 rounded-0 flex-fill /mb-1"">
					<div class=""card-img-overlay bg-dark /rounded overflow-hidden"" style=""background-image:url(https://i.pinimg.com/originals/5a/c5/c3/5ac5c3caec66cce5df9ca308b9b6043f.gif);background-size:cover;background-position:center;min-height:10em;"">&nbsp;</div>
				</div>
				<div class=""card border-0 rounded-0 flex-fill /mb-1"">
					<div class=""card-img-overlay bg-dark /rounded overflow-hidden"" style=""background-image:url(https://i.pinimg.com/564x/11/81/f8/1181f8d8f15c97f680888ebc283e3b58.jpg);background-size:cover;background-position:33% 33%;min-height:10em;"">&nbsp;</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- th.circlejourney.net import code ================================================== -->
<p><u id=""allow-thcj-import"">&nbsp;</u></p>"
6LrPuE6D,the lift whit function,Nenogzar,Python,Tuesday 20th of February 2024 02:55:05 PM CDT,"def distribute_people(people, lift):
    for wagon, spaces in enumerate(lift):
        if spaces < 4:
            available = 4 - spaces
            if people - available >= 0:
                people -= available
                lift[wagon] += available
            else:
                lift[wagon] += people
                people = 0

    return people

def main():
    people = int(input())
    lift = list(map(int, input().split()))

    remaining_people = distribute_people(people, lift)

    if remaining_people == 0:
        if any(spaces < 4 for spaces in lift):
            print('The lift has empty spots!')
        print(*lift)
    elif all(spaces == 4 for spaces in lift):
        print(*lift)
    else:
        print(f""There isn't enough space! {remaining_people} people in a queue!"")
        print(*lift)

if __name__ == ""__main__"":
    main()"
i4hPLPjG,Untitled,f0f077,Python,Tuesday 20th of February 2024 02:44:28 PM CDT,"The Complete Python Bootcamp From Zero to Hero in Python
Learn Python like a Professional Start from the basics and go all the way to creating your own applications and games
What you'll learn
You will learn how to leverage the power of Python to solve tasks.
You will build games and programs that use Python libraries.
You will be able to use Python for your own work problems or personal projects.
You will create a portfolio of Python based projects you can share.
for more:https://d-aa.com/QOUbT"
EThmv8K3,Plugin pom.xml,TerenceFerut,XML,Tuesday 20th of February 2024 02:41:34 PM CDT,"<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>3.2.0</version> <!-- Use the latest version -->
    <configuration>
        <archive>
            <manifest>
                <addClasspath>true</addClasspath>
                <classpathPrefix>lib/</classpathPrefix>
                <mainClass>com.ynov.helloworld.helloworld.HelloApplication</mainClass>
            </manifest>
        </archive>
    </configuration>
</plugin>"
ReNSgeK1,Untitled,Kalgon,Pawn,Tuesday 20th of February 2024 02:22:15 PM CDT,"package com.zenyte;

import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 
@author Jack @ The CErver | Feb 5th, 2024
This file should be in com.zenyte on a Zenyte code base.
*/

public class DiscordLog {
    public static final String ERROR_WEBHOOK = ""YOUR URL GOES HERE"";
    public static void error(String message) {
        try {
            URL url = new URL(ERROR_WEBHOOK);
            LocalDateTime timestamp1 = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(""yyyy-MM-dd HH:mm:ss"");
            String timestamp = timestamp1.format(formatter);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod(""POST"");
            connection.setRequestProperty(""Content-Type"", ""application/json"");
            connection.setDoOutput(true);

            String jsonPayload = ""{\""content\"":\""```[""+ timestamp + ""] The CErver Logs: "" + message + ""```\""}"";

            try (OutputStream os = connection.getOutputStream()) {
                byte[] input = jsonPayload.getBytes(""utf-8"");
                os.write(input, 0, input.length);
            }

            int responseCode = connection.getResponseCode();
            if (responseCode == 204) {
                System.out.println(""Message sent to Discord successfully."");
            } else {
                System.out.println(""Failed to send message to Discord. HTTP Response Code: "" + responseCode);
                System.out.println(""Failed to send to Discord. HTTP Response Code: "" + responseCode);
            }

        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    // 1: Add your custom channel logs here. Copy the public from error to get started.
    // 2: Underneath public static final String ERROR_WEBHOOK, copy the line and rename ERROR_WEBHOOK to your new hook name.
    // 3: Create your void here. Format: public static void NAME(String message) {
    // 4: Fill the contents with the code from error
    // 5: Change the URL line to the NAME_WEBHOOK you defined in step 2
    // 6: Call your function using DiscordLog.name(""Log string"");
}"
SDAqXSyt,SubarrayOfNumberRepetitions,UrayFenn,C#,Tuesday 20th of February 2024 02:21:42 PM CDT,"namespace SubarrayOfNumberRepetitions
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int minNumber = 1;
            int maxNumber = 7;
            int arrayLength = 30;
            int count = 1;
            int maxCount = 0;
            Random random = new Random();
            int[] numbers = new int[arrayLength];
            string repetitionsNumber = """";

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(minNumber, maxNumber);
                Console.Write(numbers[i] + "" "");
            }

            for (int i = 0; i < numbers.Length - 1; i++)
            {
                if(numbers[i] == numbers[i + 1])
                {
                    count++;

                    if(count > maxCount)
                    {
                        maxCount = count;
                        repetitionsNumber = numbers[i].ToString() + "" "";
                    }
                    else if(maxCount == count)
                    {
                        repetitionsNumber += numbers[i].ToString() + "" "";
                    }
                }
                else
                {
                    count = 1;
                }
            }

            Console.WriteLine($""\nЧисло {repetitionsNumber} повторяется {maxCount} раз подряд."");
        }
    }
}"
i0hPGrhL,the lift,Nenogzar,Python,Tuesday 20th of February 2024 02:21:01 PM CDT,"people = int(input())
lift = list(map(int, input().split()))

for wagon, spaces in enumerate(lift):
    if spaces < 4:
        available = 4 - spaces
        if people - available >= 0:
            people -= available
            lift[wagon] += available
        else:
            lift[wagon] += people
            people -= people

not_balance = True

for count in range(len(lift)):
    if lift[count] < 4:
        not_balance = False

if not_balance and people == 0:
    print(*lift)
elif people == 0:
    print('The lift has empty spots!')
    print(*lift)
else:
    print(f""There isn't enough space! {people} people in a queue!"")
    print(*lift)"
vSNU2d3n,PROLOG_lab2_var5(NT),VladimirKostovsky,Prolog,Tuesday 20th of February 2024 02:17:04 PM CDT,"% Domains
list = list

% Predicates
nondeterm medicine(symbol, integer, list, list, integer, symbol).
nondeterm recommended_medicine(list, integer, symbol).
nondeterm has_contraindications(symbol, list).
nondeterm patient_has(symbol).

% Clauses
patient_has('Pregnancy').
patient_has('Peptic ulcer disease').
patient_has('Allergy').
% Add more facts as needed

% Contraindications for medicines
has_contraindications('Aspirin', ['Pregnancy']).
has_contraindications('Paracetamol', []).
has_contraindications('Ibuprofen', ['Peptic ulcer disease']).
has_contraindications('Cetirizine', ['Pregnancy']).
has_contraindications('Amoxicillin', ['Allergy']).
has_contraindications('Loratadine', []).

% Medicine facts
medicine('Aspirin', 18, ['Headache', 'Fever'], ['Pregnancy'], 50, 'Available').
medicine('Paracetamol', 12, ['Headache', 'Fever'], [], 30, 'Available').
medicine('Ibuprofen', 16, ['Headache', 'Toothache'], ['Peptic ulcer disease'], 40, 'Available').
medicine('Cetirizine', 6, ['Allergy'], ['Pregnancy'], 25, 'Available').
medicine('Amoxicillin', 20, ['Throat', 'Fever'], ['Allergy'], 60, 'Available').
medicine('Loratadine', 10, ['Allergy'], [], 35, 'Not available').

% Recommended medicines rules
recommended_medicine(Symptoms, Age, Medicine) :-
    medicine(Medicine, AgeLimit, Symptoms, Contraindications, _, 'Available'),
    Age >= AgeLimit,
    not(has_contraindications(Medicine, Contraindications)).

% Check for contraindications
has_contraindications(_, []) :- !.
has_contraindications(Medicine, [Contraindication | Rest]) :-
    patient_has(Contraindication),
    write('Contraindication for '), write(Medicine), write(': '), writeln(Contraindication),
    has_contraindications(Medicine, Rest).

% Goal
goal
    recommended_medicine(['Fever'], 22, Medicine).

% ERRORS:
% E;Test_Goal, pos: 11, 3 Illegal keyword"
wRkTt3Kb,linearSearch.js,c-mcbride,JavaScript,Tuesday 20th of February 2024 02:16:07 PM CDT,"function linearSearch (arr, target) {
  for(let i = 0; i < arr.length; i++){
    if(arr[i] === target){
      return i;
    }
  }
  return -1;
};

function binarySearch(arr, target) {
  // Set integers pointing to the high and low range of possible indices
  let lo = 0;
  let high = arr.length - 1;

  // While high and low indices do not overlap...
  while(high >= lo){
    // Find the midpoint between high and low indices
    let midPoint = Math.floor((high + lo) / 2);

    // Compare the target value to the midpoint value
    // If the target equals the midpoint...
    if(arr[midPoint] === target){
      // Return the midpoint index
      return midPoint;
    }
    if (arr[midPoint] < target){
      // If the target is higher than the midpoint...
      // Move the low pointer to midpoint + 1
      lo = midPoint + 1;
    }

    // If the target is less than the midpoint...
    // Move the high pointer to midpoint - 1
    if(arr[midPoint] > target){
      high = midPoint - 1;
    }
  }
  // Return -1 if the loop exits with overlapping pointers
  return -1;
}"
yf52f3vv,passtote,Nil000,C#,Tuesday 20th of February 2024 02:08:23 PM CDT,"using Microsoft.VisualStudio.TestPlatform.Common;
using Newtonsoft.Json;
using NUnit.Framework;
using System.Net;
using System.Text;
[Binding]
public class FirstFeatureSteps
{
    private readonly ScenarioContext _context;
    private HttpResponseMessage _response;
 
 
    public FirstFeatureSteps(ScenarioContext context)
    {  
        _context = context;
    }
 
    [Given(@""I have generated request data for a new user with name """"(.*)"""" and email """"(.*)"""""")]
    public void GivenIhaveGeneratedRequestDataForANewUserWithNameAndEmail(string name, string email)
    {
        var requestData = new UserBuilder()
            .WithName(name)
            .WithEmail(email)
            .BuildAsJson();
        _context.Set(requestData, ""requestData"");
    }
 
    [Given(@""I have generated request data for a new user with name """"(.*)"""" but without an email"")]
    public void GivenIHaveGeneratedRequestDataForAnewUserWithNameButWithoutAnEmail(string name)
    {
        var requestData = new UserBuilder()
            .WithName(name)
            .WithoutEmail()
            .BuildAsJson();
        _context.Set(requestData, ""requestData"");
    }
 
    [When(@""I submit the request to the user registration endpoint"")]
    public async Task WhenISubmitTheRequestToTheUserRegistrationEndpoint()
    {
        var client = new HttpClient();
        var requestData = _context.Get<string>(""requestData"");
        _response = await client.PostAsync(""http://localhost:5184/api/user"",
            new StringContent(requestData, Encoding.UTF8, ""application/json""));
        _context.Set(_response, ""apiResponse"");
        //check response
        if (!_response.IsSuccessStatusCode)
        {
            Console.WriteLine($""API call failed with status code: {_response.StatusCode}"");
            return;
        }
    }
 
    [Then(@""The response should be a success"")]
    public async Task ThenTheReponseShouldBeASuccess()    
    {
        var response = _context.Get<HttpResponseMessage>(""apiResponse"");
 
        //assert response has status 200
        Assert.IsTrue(response.IsSuccessStatusCode, $""Expected a success response but got {response.StatusCode}."");
 
        //read response content as a string
        var responseContent = await response.Content.ReadAsStringAsync();
 
        //validate content against Json schema
        var schemaFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ""Schemas"", ""FirstFeature.json"");
        bool isValid = await SchemaValidator.IsValidJsonPayloadAgainstSchema(responseContent, schemaFilePath);
        //assert response matches schema
        Assert.IsTrue(isValid, ""The response does not match the schema"");
    }
 
    [Then(@""The response should indicate a failure"")]
    public async Task ThenTheResponseShouldIndicateAFailure()
    {
        var requestData = _context.Get<string>(""requestData"");
 
        var response = _context.Get<HttpResponseMessage>(""apiResponse"");
       
        var responseContent = await response.Content.ReadAsStringAsync();
 
        if(string.IsNullOrWhiteSpace(responseContent))
        {
            throw new InvalidOperationException(""The response content is empty or null."");
        }
 
        Assert.AreEqual(HttpStatusCode.BadRequest, response.StatusCode, ""Expected a BadRequest response."");
 
        dynamic errorResponse = JsonConvert.DeserializeObject<dynamic>(responseContent);
 
        var errorMessage = (string)errorResponse.errors.email[0];
 
        Assert.AreEqual(""The Email field is required."", errorMessage, ""Expected error message is not present"");
    }
 
}"
u2ey5fkZ,Password Screen,Alexr360,Lua,Tuesday 20th of February 2024 01:56:15 PM CDT,"-- Set your desired password here
local password = ""your_password""

-- Function to clear the screen
local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

-- Function to display login prompt
local function displayLoginPrompt()
  clearScreen()
  print(""Welcome to the secure system!"")
  print(""Please enter the password to access:"")
  write(""Password: "")
end

-- Main function to check password
local function checkPassword()
  displayLoginPrompt()
  local enteredPassword = read(""*"")

  if enteredPassword == password then
    clearScreen()
    print(""Access granted!"")
    -- Your code for allowing access goes here
  else
    clearScreen()
    print(""Incorrect password. Access denied."")
    sleep(2)
    checkPassword()  -- Retry password
  end
end

-- Run the main function
checkPassword()
"
gkqSSC31,Untitled,panther5482,VeriLog,Tuesday 20th of February 2024 01:47:46 PM CDT,"module ledTest2(
    (* side=RIGHT, colors={WHITE,MAGENTA,ORANGE} *)
    output [2:0] lights
);

(* analog *)
reg sel;
reg [2:0] lightsRaw;
reg [2:0] lightsRaw_n;
reg clk;

RandomizerAnalog ar (
	.Min(0),
	.Max(8),
	.Q(sel)
);

DeMux16Analog d16 (
	.I(1),
	.S(sel),
	.O(lightsRaw)
);

Square s (
	.Pd(10),
	.Q(clk)
);

Inverter i [2:0] (
	.I0(lightsRaw),
	.O0(lightsRaw_n)
);

FlipFlopJK ff [2:0] (
	.J(lightsRaw),
	.K(lightsRaw_n),
	.CLK(clk),
	.Q(lights)
);
"
ieRZBnAw,ussd.sh,snowgum,Bash,Tuesday 20th of February 2024 01:39:09 PM CDT,"#!/bin/sh

CURRMODEM=$(uci get modem.general.modemnum)
COMMPORT=""/dev/ttyUSB""$(uci get modem.modem$CURRMODEM.commport)
ROOTER=/usr/lib/rooter

if [ -n ""$1"" ]; then
	echo ""$1"" > /tmp/ussd_arg$CURRMODEM
fi

while true; do
	if [ -e /tmp/ussd_arg$CURRMODEM ]; then
		read USSDSTR < /tmp/ussd_arg$CURRMODEM
		rm /tmp/ussd_arg$CURRMODEM
	fi
	if [ -n ""$USSDSTR"" ]; then
		ATCMDD=""AT+CUSD=1,\""$USSDSTR\"",15""
		OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""ussd.gcom"" ""$CURRMODEM"" ""$ATCMDD"" | tr ""\n"" ""\v"")
		USSD=$(echo ""$OX"" | grep -o ""+CUSD: .\+\"",[0-9]\+"" | tr ""\v"" ""\n"")
		USSDL=${#USSD}
		USSDLx=$((USSDL - 2))
		DCS=$(printf ""${USSD:$USSDLx:2}"")
		if [ $USSDL -ge 14 ]; then
			USSDL=$((USSDL - 14))
			USSD=$(printf ""${USSD:10:$USSDL}"")
			if [ $DCS -eq ""72"" ]; then
				USSDx=""""
				USSDL=${#USSD}
				nV=0
				until [ $nV -ge $USSDL ]; do
					UU=$(printf ""%d"" ""0x""${USSD:$nV:4})
					if [[ $UU -lt 128 ]]; then
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UU"")"")
					elif [[ $UU -lt 2048 ]]; then
						UUU=$(((($UU & 1984) >> 6) | 192))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
						UUU=$((($UU & 63) | 128))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
					else
						UUU=$(((($UU & 61440) >> 12) | 224))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
						UUU=$(((($UU & 4032) >> 6) | 128))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
						UUU=$((($UU & 63) | 128))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
					fi
					nV=$(( $nV + 4 ))
				done
				USSD=""$USSDx""
			fi
		else
			USSD=$(echo ""$OX"" | tr ""\v"" ""\n"")
		fi
		echo
		echo ""-----------------------------------------------------------""
		echo ""$USSD""
		echo ""-----------------------------------------------------------""
		echo
	fi
	printf ""Enter blank to quit, or a USSD string to send: ""; read USSDSTR
	if [ -z ""$USSDSTR"" ]; then
		break
	fi
done
ATCMDD=""AT+CUSD=2""
OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
exit 0
"
eULSV9bj,"procHandler Class-updated, returns class to allow access to exitCode, stdOut and stdErr individually",TheCalisto1994,Java,Tuesday 20th of February 2024 01:37:05 PM CDT,"import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;

/*
 * Process Handler
 *
 * Allows PHP-like shell_exec() calls
 * returns the stdOut, stdErr and exitCode of the process that was executed.
 *
 */
public class procHandler {
    private static boolean waitFor = false;
    public static String stdOut = new String();
    public static String stdErr = new String();
    public int exitCode = 0;

    public procHandler shell_exec (String command) throws InterruptedException { // Run a command, return its stdOut
        String[] results = {new String(), new String()};
        String result = new String();
        try {
            Process process = Runtime.getRuntime().exec(procHandler.StrtoStrA(command));
            if (waitFor) {   // Only if .waitFor(true) was declared, use a blocking process
                process.waitFor();
                this.exitCode = process.exitValue();
            }
            InputStream inputStream = process.getInputStream();
            Scanner scanner = new Scanner(inputStream);

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line != null)
                    result += String.format(""%s\n"", line);
            }
            scanner.close();
            this.stdOut = result;
            result = new String();

            InputStream errorStream = process.getErrorStream();
            scanner = new Scanner(errorStream);
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line != null)
                    result += String.format(""%s\n"", line);
            }
            scanner.close();
            this.stdErr = result;

        } catch (IOException ioe) {
            ioe.printStackTrace();
            this.exitCode = 0;
            this.stdOut = new String();
            this.stdErr = ""Error: Process execution failed."";
        }
        return(this);
    }

    // STRING OPERATIONS

    public static String StrAtoStr (String[] args) { // Converts a string array (like the command-line arguments) to a String.
        String Out = new String(); // Initialize string
        if (args.length > 0) { // Check if there's any arguments provided
            for (int i = 0; i < args.length; i++) { // Convert through a ""for""-Loop
                Out += args[i] + "" ""; // concatenate arguments
                if (i != args.length - 1) Out += "" ""; // Add a whitespace, if it's not the last argument
            }

        }
        return(Out);
    }

    public static String[] StrtoStrA (String args) { // convert a String to a String Array (e.g. to use for shell_execute)
        return args.split("" "");
    }

    // BUILDER OPERATIONS (allows for default values for certain parameters which may be called like .waitFor(true))
    public procHandler waitFor (boolean waitFor) {
        this.waitFor = waitFor;
        return this;
    }
}"
