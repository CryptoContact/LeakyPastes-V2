id,title,username,language,date,content
KvHUArsH,üí≤ G2A.com Free Gift Card Guide 08 June 2024 üí≤,portalxwe,GetText,Saturday 8th of June 2024 01:02:09 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
.June 08 2024."
w2bqry3D,ü§ëG2A.com Free Gift Card Guide June 2024 FIXü§ë,x2w,GetText,Saturday 8th of June 2024 01:01:20 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of;
June 08 2024"
D5WVa8PR,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,FeasModz514,JavaScript,Saturday 8th of June 2024 12:59:10 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
59r8Z7G0,üéÅG2A.com Free Gift Card Guide June 2024 FIXüéÅ,kaka440ka,GetText,Saturday 8th of June 2024 12:56:51 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
8 June 2024"
1Swcf7p0,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,kjihu25,JavaScript,Saturday 8th of June 2024 12:53:11 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
5HfgttNy,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Bufayez,JavaScript,Saturday 8th of June 2024 12:47:09 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
FEPHQpbA,geoLocate,Gooble,Lua,Saturday 8th of June 2024 12:43:00 PM CDT,"function printLocat()
    x,y,z = gps.locate()
    print(""I am currently at:"")
    print(x,y,z)
end

function turnAround()
    turtle.turnLeft()
    turtle.turnLeft()
end

function boot()
    geoLocate()
    geoLocateMath()    
end

function geoLocate()
    boot1x,boot1y,boot1z = gps.locate()
    turtle.forward()
    boot2x,boot2y,boot2z = gps.locate()
    turtle.turnRight()
    turtle.forward()
    boot3x,boot3y,boot3z = gps.locate()
    turnAround()
    turtle.forward()
    turtle.turnLeft()
    turtle.forward()
    turnAround()
end

function geoLocateMath()
    	--This is from boot1 to boot2    
    if boot1x > boot2x    then
        print(""You are moving North"")
    end
    if boot1x < boot2x    then
        print(""You are moving South"")
    end
    if boot1z > boot2z    then
        print(""You are going North"")
    end
    if boot1z < boot2z    then
        print(""You are going South"")
    end
    	-- This is from boot2 to boot3 
    if boot2x > boot3x    then
        print(""You are moving North"")
    end
    if boot2x < boot3x    then
        print(""You are moving South"")
    end
    if boot2z > boot3z    then
        print(""You are going East"")
    end
    if boot2z < boot3z    then
        print(""You are going West"")
    end
end
boot()
"
ccaScKkR,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,buch,JavaScript,Saturday 8th of June 2024 12:41:09 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
X6cNkicq,üí≤ G2A.com Free Gift Card Guide 08 June 2024üéÅ,ssss50w,GetText,Saturday 8th of June 2024 12:39:10 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view


Working as of:
June 08 2024
"
x0Hy5fKi,ü§ëG2A.com Free Gift Card Guide June 2024 FIXüéÅ,ssss50wa,GetText,Saturday 8th of June 2024 12:37:39 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
08 June 2024."
ZB2nBHnQ,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Alfonso1119,JavaScript,Saturday 8th of June 2024 12:35:08 PM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
Rsq1V5VG,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Garoam,JavaScript,Saturday 8th of June 2024 12:29:08 PM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
1aJQCj6y,doubleOrNothing.lua,PASTEMSHROOM,Lua,Saturday 8th of June 2024 12:27:10 PM CDT,"local money = 50 --money to start with

print(""welcome to double or nothing!"")

local function main() --start of game
	print("" "") -- help with being able to see
	if money == 0 then --check if money is zero to do good responce
		print(""you have no money"")
	else
		print(""you have "".. money.. "" dollars!"") --shows money amount
	end
	print(""play? (Y/QUIT)"") --question #1
	io.write(""> "") -- show that there is an input
	local input = io.read() --get input from user
	if string.find(input:lower(), ""quit"") then --check if the string contains ""quit""
		print(""quit chosen!"")
		print(""alr bye bye"")
		return 0 --end script
	else
		if string.find(input:lower(), ""y"") then --check if the string contains ""y""
			
			print(""yes chosen!"")
			local function fallback() -- used to help with bad responces
				print(""how much would you like to deposit into double or nothing? (number)"")
				io.write(""> "") --show that there is an input
				local input = io.read() --get input from user
				local a2p = tonumber(input) --used to check if the responce is only numbers
				local toby = tonumber(input) --used for the math
				if not a2p then
					print(""this answer contains characters other than numbers, try again"")
					fallback() -- call for bad responce
				end
				local af =  math.random(1,2) --1: nothing, 2: double
				money = money - toby --remove requested amount
				if af == 1 then --check if nothing selected
					print(""nothing!"")
					print(""you lost "".. toby.. "" dollars!"")
					main() --reload
				else
					if af == 2 then --check if double selected
						money = money + (toby * 2) --double their money
						print(""double!"")
						print(""you got "".. (toby * 2).. "" dollars!"") --tell them how much it got doubled by
						main() --reload
					end
				end
			end
			fallback() --start the ""fallback"" function
		else
			print(""please choose a valid yes"") -- used if the responce does not contain ""quit"" or ""y""
			main() --reload 
		end
	end
end
main() --start the game"
u6m26erq,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,atakan1983,JavaScript,Saturday 8th of June 2024 12:23:09 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
D7SjhEYy,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,tajdiqul,JavaScript,Saturday 8th of June 2024 12:17:05 PM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
rjaffUNH,Untitled,dllbridge,C,Saturday 8th of June 2024 12:12:30 PM CDT,"
#include   <stdio.h>
#include  <locale.h>       //  –∑–¥–µ—Å—å ""–∂–∏–≤—ë—Ç"" setlocale(LC_ALL, ""rus"");

 
int n  = 1,
    n2 = 8; 
    
char sz[35] = ""SONY"";    
 
///////////////////////////////////////////
int main()
{
	

    sz[1] = 'N'; 

    printf(""%s\n"",  sz   );
    printf(""%d\n"",  sz   );    
    printf(""%d\n"", &sz[0]);   
    
    for(int i = 1;  i < 35; i++)
    {
            
         printf(""address sz[%2d] = %d\n"", i, &sz[i]);    
    }
    
    
       
return 0;
}


/*

#include <stdio.h>
#include <locale.h>

float      y,    //  jhdfsjghdkjgh 
           x;    //  fdkljdfklj
char i = '+';

////////////////////////////////////////////////////
int main()  
{        
                              
    setlocale(LC_ALL, ""Russian"");
	
    float     y,
              x;
              
    printf(""Address local f = %d\n"", &y);          
              
    return 0;          
    
    char i= '+';

    while(i != '0')
    {
        printf(""<< - + / * >> –í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª: "");
        scanf(""%c%*c"", &i);

        if(i == '0') { return 0; break;}

	if(i == '-' || '+' || '/'|| '*'){
		printf(""–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "");
		scanf(""%f%*c"", &y);
		printf(""–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "");
		scanf(""%f%*c"", &x);

	    switch(i)
            {
		   case '-': printf(""%.4f\n"", y - x);
		   	     break;
		   	
		   case '+': printf(""%.4f\n"", y + x);
		   	     break;
		   	
		   case '*': printf(""%.4f\n"", y * x);
                             break;
                             
		   case '/': if (y != 0) printf(""%.4f\n"", y / x);
		   	     else        printf(""–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!!!!\n"");
		    
		
		}	
	}
	else printf(""–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–º–≤–æ–ª\n "");	
    }	
}





*/

"
kPBXkrJ6,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,notgoodatscripting,JavaScript,Saturday 8th of June 2024 12:11:04 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
VCHbq1Qd,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX ü§ë,jusst2k4,GetText,Saturday 8th of June 2024 12:10:58 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_766841.pdf

Working as of:
08 June 2024"
47qTPbwg,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,bgill55,JavaScript,Saturday 8th of June 2024 12:05:03 PM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
5jjwrUeC,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,FreeRobux12345,JavaScript,Saturday 8th of June 2024 11:58:57 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
Jq4m2KB5,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,coderpradip,JavaScript,Saturday 8th of June 2024 11:52:57 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
0mjmneAp,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,mikyser,JavaScript,Saturday 8th of June 2024 11:46:58 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
m1Zw1hRX,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Ohtaku,JavaScript,Saturday 8th of June 2024 11:41:00 AM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
JHQmYcsi,Exerc√≠cio de impostos..,Rnery,Python,Saturday 8th of June 2024 11:36:15 AM CDT,"# Parte 1: Calcular m√©dias e identificar maior e menor m√©dia

# Fun√ß√£o para calcular a m√©dia de uma lista de n√∫meros
def calcular_media(lista):
    return sum(lista) / len(lista)

# Ler 12 valores do usu√°rio
valores = []
print(""Digite 12 valores:"")
for i in range(12):
    valor = float(input(f""Valor {i+1}: ""))
    valores.append(valor)

# Dividir os valores em 3 partes
parte1 = valores[0:4]
parte2 = valores[4:8]
parte3 = valores[8:12]

# Calcular a m√©dia de cada parte
media_parte1 = calcular_media(parte1)
media_parte2 = calcular_media(parte2)
media_parte3 = calcular_media(parte3)

# Encontrar a maior e a menor m√©dia
maior_media = max(media_parte1, media_parte2, media_parte3)
menor_media = min(media_parte1, media_parte2, media_parte3)

# Imprimir os resultados
print(f""M√©dia da parte 1: {media_parte1}"")
print(f""M√©dia da parte 2: {media_parte2}"")
print(f""M√©dia da parte 3: {media_parte3}"")
print(f""Maior m√©dia: {maior_media}"")
print(f""Menor m√©dia: {menor_media}"")

# Parte 2: An√°lise de lucratividade dos produtos

# Fun√ß√£o para calcular o pre√ßo de venda com margem de lucro
def calcular_preco_venda(custo, margem_lucro):
    return custo * (1 + margem_lucro)

# Fun√ß√£o para calcular o lucro por pe√ßa ap√≥s impostos
def calcular_lucro(custo, imposto, margem_lucro, icms=0):
    preco_venda = calcular_preco_venda(custo, margem_lucro)
    preco_com_imposto = preco_venda * (1 + imposto) * (1 + icms)
    lucro = preco_com_imposto - custo
    return lucro

# Dados do Produto 1
custo_produto1 = 1.25
imposto_produto1 = 0.05
margem_lucro_produto1 = 10.0  # 1000%
vendas_produto1 = 1200

# Dados do Produto 2
custo_produto2 = 15.00
imposto_produto2 = 0.32
margem_lucro_produto2 = 0.20  # 20%
icms_produto2 = 0.10
vendas_produto2 = 1

# Calcular o lucro por pe√ßa de cada produto
lucro_por_peca_produto1 = calcular_lucro(custo_produto1, imposto_produto1, margem_lucro_produto1)
lucro_por_peca_produto2 = calcular_lucro(custo_produto2, imposto_produto2, margem_lucro_produto2, icms_produto2)

# Calcular o lucro di√°rio de cada produto
lucro_diario_produto1 = lucro_por_peca_produto1 * vendas_produto1
lucro_diario_produto2 = lucro_por_peca_produto2 * vendas_produto2

# Imprimir os resultados
print(f""Lucro di√°rio do Produto 1: R${lucro_diario_produto1:.2f}"")
print(f""Lucro di√°rio do Produto 2: R${lucro_diario_produto2:.2f}"")

# An√°lise de lucratividade
if lucro_diario_produto1 > lucro_diario_produto2:
    print(""O Produto 1 √© mais lucrativo."")
else:
    print(""O Produto 2 √© mais lucrativo."")
"
Mf3WCnhD,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Elii,JavaScript,Saturday 8th of June 2024 11:35:02 AM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
rYfLy76t,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,guywithabigheart,JavaScript,Saturday 8th of June 2024 11:29:03 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
YH3W0gLM,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,PetrikDev,JavaScript,Saturday 8th of June 2024 11:23:03 AM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
tMp8LcqM,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,x3kiN,JavaScript,Saturday 8th of June 2024 11:17:02 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
d75uS1tG,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,FeasModz514,JavaScript,Saturday 8th of June 2024 11:11:04 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
WMZp8bZX,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,kiraezwhethe,JavaScript,Saturday 8th of June 2024 11:04:47 AM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
iKBALvGu,Middle school Thesis,NUCLEARESOL,C#,Saturday 8th of June 2024 11:02:52 AM CDT,"using System;
using System.Diagnostics;
using System.Threading;
using System.Globalization;

class Program
{

    static void Main()
    {
        int version = 1;
        string type = ""parabola"";
        double gravitationalA = 9.81d;
        double[] startPoint = {5,10};
        double[] endpoint = { 0, 0 };
        double[] rangex = { 5, 10 };
        double[] rangey = { 5, 10 };
        const Boolean calculateDistance = false;
        Boolean researchMode = false;

        Console.WriteLine(""Following Variables are used:"");
        Console.WriteLine(""Gravitational Accel: "" + gravitationalA + "" m/s"");
        Console.WriteLine(""Goal: "" + endpoint[0] + "","" + endpoint[1]);
        Console.WriteLine(""Start: "" + startPoint[0] + "","" + startPoint[1]);
        Console.WriteLine(""Calculate Distance"" + calculateDistance);
        Console.WriteLine(""Research Mode"" + researchMode);
        Console.WriteLine(""y/n"");
        string confirmation = Console.ReadLine();

        if (confirmation != ""y"")
        {
            Console.WriteLine("""");
            Console.WriteLine(""Abort, Please change the variable"");
            Console.WriteLine(""graph type"");
            type = Console.ReadLine();
            Console.WriteLine(""Gravitational Acceleration"");
            gravitationalA = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
            Console.WriteLine(""Research Mode"");
            researchMode = bool.Parse(Console.ReadLine());
            if (researchMode != true)
            {
                Console.WriteLine(""Start Point X"");
                startPoint[0] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
                Console.WriteLine(""Start Point Y"");
                startPoint[1] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
            }
            else
            {
                Console.WriteLine(""X min"");
                rangex[0] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
                Console.WriteLine(""X max"");
                rangex[1] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);

                Console.WriteLine(""Y min"");
                rangey[0] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
                Console.WriteLine(""Y max"");
                rangey[1] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
            }
            Console.WriteLine("""");
            Console.WriteLine(""Following Variables are used:"");
            Console.WriteLine(""Gravitational Accel: "" + gravitationalA + "" m/s"");
            Console.WriteLine(""Goal: "" + endpoint[0] + "","" + endpoint[1]);
            Console.WriteLine(""Start: "" + startPoint[0] + "","" + startPoint[1]);
            //Thread.Sleep(3000);
        }

        // Console.WriteLine("""");
        // Console.WriteLine(""Starting calculation"");
        double x = startPoint[0];
        double velX = 0f;
        const double timestep = 0.001f;
        double time = 0f;
        double initialCollvar = 1;
        double initialCollvarStep = 0.1f;
        double zeroInAccuracy = 0.000001f;
        double maxTime = double.PositiveInfinity;
        double limit = 400;
        string strg = """";
        Console.WriteLine(limit);
        var start = Process.GetCurrentProcess().TotalProcessorTime;
        int i = 0;
        static double NewtonsMethod(double target, double initialGuess, double tolerance, int maxIterations)
        {
            double x = initialGuess;

            for (int i = 0; i < maxIterations; i++)
            {
                double fx = (2 * x - Math.Sin(2 * x)) / (1 - Math.Cos(2 * x));
                double derivative = -2 * ((x / Math.Tan(x)) - 1) * Math.Pow(1 / Math.Sin(x), 2);
                Console.WriteLine(x + "" "" + fx + "" "" + derivative);
                //Thread.Sleep(1000);
                if (Math.Abs(fx - target) < tolerance)
                {
                    Console.WriteLine($""Converged after {i} iterations."");
                    return x;
                }

                x = x - (fx - target) / derivative;
            }

            Console.WriteLine(""Did not converge within the specified number of iterations."");
            return x;
        }
        static void Print2DArray<T>(T[,] matrix)
        {
            for (int i = 0; i < matrix.GetLength(0); i++)
            {
                for (int j = 0; j < matrix.GetLength(1); j++)
                {
                    Console.Write(matrix[i, j] + ""\t"");
                }
                Console.WriteLine();
            }
        }
        Tuple<double, double> calculateAcceleration(double X, double collVar, double depvar1, double depvar2)
        {
            double localSlope = 2.0f * collVar * (X - depvar1);

            //Console.WriteLine(-(float)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA));
            return Tuple.Create(-(double)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA), localSlope);
        }
        Tuple<double, double> calculateAccelerationCircle(double X, double Y, double collVar, double h, double k)
        {
            double localSlope = (h - X) / (Y - k);

            //return -(float)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA);
            return Tuple.Create(-(double)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA), localSlope);
        }
        Tuple<double, double> calculateAccelerationCubic(double X, double collVar, double h, double k)
        {
            double localSlope = collVar*3.0d*Math.Pow(X-h,2.0);

            //return -(float)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA);
            return Tuple.Create(-(double)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA), localSlope);
        }

        Console.WriteLine(strg);
        Console.WriteLine("""");
        strg = """";
        Tuple<double, double, double, double> CalculateTimeParabola(double initialCollvar)
        {
            double h = 0;
            double k = 0;
            double distance = 0;
            double deltaX = 0;
            i = i + 1;
            x = startPoint[0];
            velX = 0f;
            time = 0f;
            distance = 0f;
            h = 0.5f * (startPoint[0] - (startPoint[1] / (startPoint[0] * initialCollvar)));
            k = -initialCollvar * (double)Math.Pow(h, 2);
            //Console.WriteLine(h + "","" + k);
            if (h < startPoint[0] && k > startPoint[1])
            {
                return Tuple.Create(limit, initialCollvar, h, k);
            }
            while (x>= 0 && time < limit)
            {
                Tuple<double, double> calculatedValues = calculateAcceleration(x, initialCollvar, h, k);
                x = x - timestep;
                double y = initialCollvar * Math.Pow((x - h),2) + k;
                velX = Math.Sqrt(2 * gravitationalA * (startPoint[1]-y)) / (Math.Sqrt(Math.Pow(calculatedValues.Item2,2)+1));
                if (Double.IsNaN(velX) )
                {
                    return Tuple.Create(limit, initialCollvar, h, k);
                }
                time = time + Math.Abs(timestep / velX);
              
                //Console.Write(""("" + x + "","" + velX + ""),"");
            }

            //Console.WriteLine(Math.Abs(Math.Abs(initialCollvarStep) * 100 - 100) + "" % complete"");
            //Console.WriteLine();
            //Console.WriteLine(time);
            if (Double.IsNaN(time))
            {
                time = limit;
                Console.WriteLine(time);
            }
            //Thread.Sleep(200000);
            return Tuple.Create(time, initialCollvar, h, k);
        }

        Tuple<double, double, double, double> CalculateTimeCircle(double initialCollvar)
        {
            if (initialCollvar < (double)Math.Sqrt(Math.Pow(startPoint[1], 2) + Math.Pow((Math.Pow(startPoint[1], 2) - Math.Pow(startPoint[0], 2)) / (-2 * startPoint[0]), 2)))
            {
                return Tuple.Create(limit, initialCollvar, 0.0d, 0.0d);
            }
            double q = Math.Sqrt(Math.Pow(startPoint[1], 2) + Math.Pow(startPoint[0], 2));
            double x3 = startPoint[0] / 2;
            double y3 = startPoint[1] / 2;


            double h = x3 + (Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(q / 2, 2)) * (-startPoint[1])) / q;
            double k = y3 + (Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(q / 2, 2)) * (startPoint[0])) / q;

            double distance = 0;
            double deltaX = 0;
            i = i + 1;
            x = startPoint[0];
            velX = 0f;
            time = 0f;
            distance = 0f;
            double y = k - Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(x - h, 2));
            while (x >= 0 && time < limit)
            {
                Tuple<double, double> calculatedValues = calculateAccelerationCircle(x, y, initialCollvar, h, k);
                x = x - timestep;
                y = k - Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(x - h, 2));
                velX = Math.Sqrt(2 * gravitationalA * (startPoint[1] - y)) / (Math.Sqrt(Math.Pow(calculatedValues.Item2, 2) + 1));
                if (Double.IsNaN(velX))
                {
                    return Tuple.Create(limit, initialCollvar, h, k);
                }
                time = time + Math.Abs(timestep / velX);


            }
            // while (x >= 0 && time < limit)
            // {
            // y = k - Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(x - h, 2));
            //Tuple<double, double> calculatedVales = calculateAccelerationCircle(x, y, initialCollvar, h, k);
            // deltaX = (double)(velX * timestep + 0.5f * calculatedVales.Item1 * Math.Pow(timestep, 2));
            // x = (double)(x + deltaX);
            // velX = velX + (0 + calculateAccelerationCircle(x, y, initialCollvar, h, k).Item1) * timestep / 1f;
            //  if (calculateDistance)
            // {
            //     distance = distance + (double)Math.Sqrt(deltaX * deltaX * (calculatedVales.Item2 * calculatedVales.Item2 + 1.0f));
            //  }
            //  time = time + timestep;
            //  }
            if (Double.IsNaN(time))
            {
                time = limit;
                Console.WriteLine(time);
            }
            return Tuple.Create(time, initialCollvar, h, k);
        }
        Tuple<double, double, double, double> CalculateTimeCubic(double initialCollvar)
        {
            double h = 0;
            double k = 0;
            double distance = 0;
            double deltaX = 0;
            i = i + 1;
            x = startPoint[0];
            velX = 0f;
            time = 0f;
            distance = 0f;
            if (initialCollvar <= 0 |initialCollvar >= 12.0 * startPoint[1] / (3.0 * Math.Pow(startPoint[0], 3)))
            {
                return Tuple.Create(limit+100, initialCollvar, h, k);
            }

            h = (3.0d * Math.Pow(startPoint[0], 2) - Math.Sqrt(9.0d * Math.Pow(startPoint[0], 4) - 4.0 * 3.0 * startPoint[0] * (Math.Pow(startPoint[0], 3) - startPoint[1] / initialCollvar))) / (2 * 3 * startPoint[0]);
            k = initialCollvar * (double)Math.Pow(h, 3);
            while (x >= 0 && time < limit)
            {
                Tuple<double, double> calculatedValues = calculateAccelerationCubic(x, initialCollvar, h, k);
                x = x - timestep;
                double y = initialCollvar * Math.Pow((x - h), 3) + k;
                velX = Math.Sqrt(2 * gravitationalA * (startPoint[1] - y)) / (Math.Sqrt(Math.Pow(calculatedValues.Item2, 2) + 1));
                if (Double.IsNaN(velX))
                {
                    return Tuple.Create(limit, initialCollvar, h, k);
                }
                time = time + Math.Abs(timestep / velX);

                //Console.Write(""("" + x + "","" + velX + ""),"");
            }
            //while (x >= 0 && time < limit)
           // {
              //  Tuple<double, double> calculatedVales = calculateAccelerationCubic(x, initialCollvar, h, k);
            //    deltaX = (double)(velX * timestep + 0.5f * calculatedVales.Item1 * Math.Pow(timestep, 2));
            //    x = (double)(x + deltaX);
             //   velX = velX + (0 + calculateAccelerationCubic(x, initialCollvar, h, k).Item1) * timestep / 1f;
             //   if (calculateDistance)
               // {
               //     distance = distance + (double)Math.Sqrt(deltaX * deltaX * (calculatedVales.Item2 * calculatedVales.Item2 + 1.0f));
            //    }
            //    time = time + timestep;
           // }
           //Console.WriteLine(initialCollvarStep);
           // Thread.Sleep(100);
            if (Double.IsNaN(time))
            {
                time = limit;
               // Console.WriteLine(time);
            }

            return Tuple.Create(time, initialCollvar, h, k);
        }

        Tuple<double, double, double, double, double, double> jumpingDecend()
        {
           Console.WriteLine(Math.Abs(initialCollvarStep)+"",""+zeroInAccuracy);
            Thread.Sleep(1000);
            double var1 = 0;
            double var2 = 0;
            double var3 = 0;
            double var4 = 0;
            if (type == ""parabola"")
            {
                var1 = 0;
                var2 = 0;
            }
            if (type == ""circle"")
            {
                initialCollvar = (double)Math.Sqrt(Math.Pow(startPoint[1], 2) + Math.Pow((Math.Pow(startPoint[1], 2) - Math.Pow(startPoint[0], 2)) / (-2 * startPoint[0]), 2));
                //  Console.WriteLine(initialCollvar+""RADIUS"");
            }
            if (type == ""cubic"")
            {
                initialCollvar = (12.0 * startPoint[1] / (3.0 * Math.Pow(startPoint[0], 3)))/2;
                initialCollvarStep = (12.0 * startPoint[1] / (3.0 * Math.Pow(startPoint[0], 3))) / 20;
                zeroInAccuracy = initialCollvar / 100000;
               // zeroInAccuracy = 0.0;
               // Console.WriteLine(initialCollvar+""RADIUS"");
            }

            while (Math.Abs(initialCollvarStep) >= zeroInAccuracy)
            {
                // --  Console.Write(""BOB"");
                initialCollvar = initialCollvar + initialCollvarStep;
                if (type == ""parabola"")
                {
                    time = CalculateTimeParabola(initialCollvar).Item1;
                }
                else if (type == ""circle"")
                {
                    time = CalculateTimeCircle(initialCollvar).Item1;
                }
                else if (type == ""cubic"")
                {
                    time = CalculateTimeCubic(initialCollvar).Item1;
                    //Console.WriteLine(time + "","" + (time - maxTime));
                }
                // Console.WriteLine(distance);
                //  Console.WriteLine(initialCollvar + ""(x-"" + h + "")^2+"" + k);
                strg = strg + ""("" + initialCollvar + "","" + time + "")"" + "","";
                if (maxTime > time)
                {
                    maxTime = time;
                    initialCollvarStep = initialCollvarStep * 2;
                }

                else if (time > maxTime)
                {
                    if (time >= limit)
                    {
                        initialCollvar = initialCollvar - initialCollvarStep;
                        initialCollvarStep = -initialCollvarStep / 4;
                    }
                    else if (Math.Abs(time - maxTime) > 0.0000000001)
                    {
                        //Console.WriteLine(Math.Abs(time - maxTime));
                        initialCollvarStep = -initialCollvarStep;
                    }
                    else if (Math.Abs(time - maxTime) < 0.0000000001)
                    {
                        initialCollvarStep = initialCollvarStep / 2;
                       // Console.WriteLine(""EQUAL"");
                    }
                }
                else
                {
                    initialCollvarStep = initialCollvarStep / 2;

                }
            }
           
            if (type == ""circle"")
            {
                Tuple<double, double, double, double> resultcal = CalculateTimeCircle(initialCollvar);
                time = CalculateTimeCircle(initialCollvar).Item1;
                var1 = resultcal.Item1;
                var2 = resultcal.Item3;
                var3 = resultcal.Item4;
            }
            else if (type == ""parabola"")
            {
                Tuple<double, double, double, double> resultcal = CalculateTimeParabola(initialCollvar);
                time = CalculateTimeParabola(initialCollvar).Item1;
                var1 = resultcal.Item2;
                var2 = resultcal.Item3;
                var3 = resultcal.Item4;
            }
            else if (type == ""cubic"")
            {
                Tuple<double, double, double, double> resultcal = CalculateTimeCubic(initialCollvar);
                time = CalculateTimeCubic(initialCollvar).Item1;
                var1 = resultcal.Item2;
                var2 = resultcal.Item3;
                var3 = resultcal.Item4;
            }
            if (time > limit)
            {

                if (type == ""circle"")
                {
                    initialCollvar = initialCollvar - initialCollvarStep / 2;
                    Tuple<double, double, double, double> resultcal = CalculateTimeCircle(initialCollvar);
                    time = resultcal.Item1;
                    var1 = resultcal.Item2;
                    var2 = resultcal.Item3;
                    var3 = resultcal.Item4;
                }
                else if (type == ""parabola"")
                {
                    initialCollvar = initialCollvar - initialCollvarStep / 2;
                    Tuple<double, double, double, double> resultcal = CalculateTimeParabola(initialCollvar);
                    time = resultcal.Item1;
                    var1 = resultcal.Item2;
                    var2 = resultcal.Item3;
                    var3 = resultcal.Item4;
                }
                else if (type == ""cubic"")
                {
                    initialCollvar = initialCollvar - initialCollvarStep / 2;
                    Tuple<double, double, double, double> resultcal = CalculateTimeCubic(initialCollvar);
                    time = resultcal.Item1;
                    var1 = resultcal.Item2;
                    var2 = resultcal.Item3;
                    var3 = resultcal.Item4;
                }
            }
            Console.WriteLine(""Finished"");
            return Tuple.Create(initialCollvar, time, var1, var2, var3, var4);
        }
       if (researchMode != true)
        {
            Tuple<double, double, double, double, double, double> resultTuple = jumpingDecend();
            var stop = Process.GetCurrentProcess().TotalProcessorTime;

            Console.WriteLine("""");
            Console.WriteLine(""time taken "" + resultTuple.Item2 + "" seconds"");
            Console.WriteLine(""At variable = "" + resultTuple.Item1);
            Console.WriteLine(""h = "" + resultTuple.Item4);
            Console.WriteLine(""k = "" + resultTuple.Item5);
            Console.WriteLine();
            // stopwatch.Stop();
            Console.WriteLine("""");
            Console.WriteLine(""Calculation Time is "" + (stop - start).TotalMilliseconds);
            Console.WriteLine(""Cal amt"" + i);
            //  Console.WriteLine(""Starting control group in 5 seconds"");
            Console.WriteLine(strg);
            Thread.Sleep(60000);
            start = Process.GetCurrentProcess().TotalProcessorTime;
            double theta = NewtonsMethod(startPoint[0] / startPoint[1], 1, 1e-20, 2000);
            double D = 2 * startPoint[1] / (1 - Math.Cos(theta * 2));
            Console.WriteLine(D);
            double t = Math.Sqrt(2 * D / gravitationalA) * theta;
            Console.WriteLine(t);
            stop = Process.GetCurrentProcess().TotalProcessorTime;
            Console.WriteLine(""Calculation Time is "" + (stop - start).TotalMilliseconds);
            strg = """";
        }
       else
        {
            double[,] timetable = new double[(int)(rangex[1] - rangex[0] + 1), (int)(rangey[1] - rangey[0] + 1)];
            double[,] vartable = new double[(int)(rangex[1] - rangex[0] + 1), (int)(rangey[1] - rangey[0] + 1)];
            for (int iterx = (int)rangex[0]; iterx <= (int)rangex[1]; iterx++)
            {
                for (int itery = (int)rangey[0]; itery <= (int)rangey[1]; itery++)
                {
                    startPoint[0]= (double)iterx;
                    startPoint[1]= (double)itery;
                    initialCollvarStep = 1;
                    initialCollvarStep = 0.1f;
                    maxTime = double.PositiveInfinity;
                    time = 0f;
                    Tuple<double, double, double, double, double, double> resultTuple = jumpingDecend();
                    Console.WriteLine((int)(100 * ((rangey[1] - rangey[0] + 1) * (iterx - rangex[0]) + 1 + itery - rangey[0]) / ((rangex[1] - rangex[0] + 1) * (rangey[1] - rangey[0]+1)))+""% done"");
                    timetable[iterx-1, itery-1] = resultTuple.Item2;
                    vartable[iterx-1, itery-1] = resultTuple.Item1;
                    //  Console.WriteLine(startPoint[0]+"":"" +startPoint[1]);
                    // Console.WriteLine(""time taken "" + resultTuple.Item2 + "" seconds"");
                    // Console.WriteLine(""At variable = "" + resultTuple.Item1);
                    //Print2DArray(timetable);
                   // Console.WriteLine(""h = "" + resultTuple.Item4);
                   // Console.WriteLine(""k = "" + resultTuple.Item5);

                }
            }
            Console.WriteLine(""TIME TABLE"");
            Print2DArray(timetable);
            Console.WriteLine(""VALUE TABLE"");
            Print2DArray(vartable);
        }
    }
}"
n7fW42R9,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,ColtM4A2,JavaScript,Saturday 8th of June 2024 10:58:28 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
gr17XgEQ,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,thepplayz,JavaScript,Saturday 8th of June 2024 10:46:29 AM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
V9pL6ZTV,Jenkins Small Fast PRNG,ulfben,C++,Saturday 8th of June 2024 10:44:58 AM CDT,"#include <cstdint>
#include <limits>
#include <concepts>
#include <cmath> //for abs
#include <cassert>
/*
A C++ 64-bit three-rotate implementation of the famous Jenkins Small Fast PRNG.
C++ implementation by Ulf Benjaminsson (public domain, use freely!)
Original C-code and writeup by Bob Jenkins: https://burtleburtle.net/bob/rand/smallprng.html
*/
class SmallPRNG
 {
public:
    using u8 = uint64_t;
    using i8 = int64_t;
    using Float = float;
    
    SmallPRNG() = delete;
    
    constexpr SmallPRNG(u8 seed) noexcept : a(0xf1ea5eed), b(seed), c(seed), d(seed) {        
        // warmup: run the generator a couple of cycles to mix the state thoroughly
        for (int i = 0; i < 20; ++i) {
            next();
        }
    }

    constexpr u8 max() noexcept{
        return std::numeric_limits<u8>::max();
    }
  
  	constexpr bool coinToss() noexcept{
        return next() & 1; //checks the least significant bit
    }

    template<std::integral IntType>
    constexpr IntType between(IntType min, IntType max) noexcept {
        assert(min < max);
        const auto range = max-min;
        if constexpr (std::is_unsigned_v<IntType>) {
            return min + next() % (range + 1);
        } else {           
            using UT = std::make_unsigned_t<IntType>;
            UT abs_range = static_cast<UT>(std::abs(range));
            UT num = static_cast<UT>(next() % (abs_range + 1));
            return min + static_cast<IntType>(num);
        }
    }

    constexpr Float between(Float min, Float max) noexcept {
        return min + (max - min) * normalized();
    }

    constexpr Float normalized() noexcept {
        return static_cast<Float>(next()) / (static_cast<double>(max()) + 1.0);
    }

    constexpr u8 next() noexcept {
        const u8 e = a - rot(b, 7);
        a = b ^ rot(c, 13);
        b = c + rot(d, 37);
        c = d + e;
        d = e + a;
        return d;
    }

private:    
    u8 a;
    u8 b;
    u8 c;
    u8 d;    

    constexpr u8 rot(u8 x, u8 k) const noexcept {
        return (x << k) | (x >> (64 - k));
    }
};

int main() {
    SmallPRNG rg(223456721);

    auto random_unsigned = rg.between(10u, 50u); 
    int random_int = rg.between(-50, -20); 
    float random_normalized = rg.normalized(); 
    float random_float_value = rg.between(1.0f, 5.0f); 

    return random_int;
}"
rdBCSLuk,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,sirmikey,JavaScript,Saturday 8th of June 2024 10:40:30 AM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
gPWzKye3,Untitled,gustavohenriquefs,Python,Saturday 8th of June 2024 10:36:04 AM CDT,"# CODEFORCES - https://codeforces.com/gym/103373/problem/E
# WA - Test 4

import math
from decimal import Decimal, getcontext

getcontext().prec = 150

EPSILON = Decimal('1e-80')

def function(x):
    return Decimal(count_eatcoin(x) - initial_value - 10**99)

def bisection(a, b):
    c = a
    
    while max(abs(b - a), abs(a - b)) >= EPSILON:
        c = (a + b) / 2
        
        if function(c) <= 0:
            a = c
        else:
            b = c
    return c

def sq_a_e5(d):
    return Decimal(math.pow(Decimal(d * (d + 1)) / 2, 2)) * Decimal((2 * d * d + 2 * d - 1) / 3)

def count_eatcoin(d):
    return Decimal(-1 * p * d + q * sq_a_e5(d) - initial_value)

def eatcoin(d):
    return Decimal(-1 * p + q * d**5)

p, q = map(Decimal, input().split())

initial_value = Decimal(- p)
idx = Decimal(1)
aux = eatcoin(idx)

while aux <= 0:
    initial_value += aux
    idx += 1
    aux = eatcoin(idx)

print(format(-1*initial_value, '.0f'))
print(bisection(Decimal(1), Decimal(1e18) + 44).to_integral_value())"
gmaUM0bu,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,sayid83,JavaScript,Saturday 8th of June 2024 10:34:29 AM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
StuR0u1K,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,PetrikDev,JavaScript,Saturday 8th of June 2024 10:28:31 AM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
KH4aubbt,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,x3kiN,JavaScript,Saturday 8th of June 2024 10:22:32 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
JKmzYwbD,Untitled,Sininerebane,C#,Saturday 8th of June 2024 10:18:04 AM CDT,"namespace Themostmaxelement
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.OutputEncoding = Encoding.UTF8;
            Random random = new Random();
            int size = 10;
            int[,] array = new int[size, size];
            int maxElement = int.MinValue;
            int minValue = 0;
            int maxValue = 10;
            int replacementMaxNumber = 0;

            Console.WriteLine(""–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞\n"");
            for (int i = 0; i < array.GetLength(0); i++)
            {
                for (int j = 0; j < array.GetLength(1); j++)
                {
                    array[i, j] = random.Next(minValue, maxValue);
                    Console.Write(array[i, j] + "" "");

                    if (array[i, j] > maxElement)
                    {
                        maxElement = array[i, j];
                    }
                }

                Console.WriteLine(); 
            }

            Console.WriteLine($""–ù–∞–∏–±–æ–ª—å—à–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Ç—Ä–∏—Ü–∞ {maxElement}\n"");
            Console.WriteLine(""–ü–æ–ª—É—á–µ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞\n"");

            for (int i = 0; i < array.GetLength(0); i++)
            {
                for (int j = 0; j < array.GetLength(1); j++)
                {
                   if (array[i, j] == maxElement)
                    {
                        array[i, j] = replacementMaxNumber;
                    }                   
                    Console.Write(array[i, j] + "" "");
                }

                Console.WriteLine();       
            }

            Console.ReadKey();
        }
    }
}"
RNYRS4kJ,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,FeasModz514,JavaScript,Saturday 8th of June 2024 10:16:33 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
wcMtP8rn,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,kjihu25,JavaScript,Saturday 8th of June 2024 10:10:33 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
FR3F3kxw,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Bufayez,JavaScript,Saturday 8th of June 2024 10:04:33 AM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7 2024

"
gVNm9xwm,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,buch,JavaScript,Saturday 8th of June 2024 09:58:31 AM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
SVnNNW0r,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Alfonso1119,JavaScript,Saturday 8th of June 2024 09:52:31 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
sCRjwwWX,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Garoam,JavaScript,Saturday 8th of June 2024 09:46:31 AM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
5ydwudhd,Untitled,Ilya_Bykonya,C++,Saturday 8th of June 2024 09:45:17 AM CDT,"
namespace sh {
    struct ILocalizationMap {
        virtual std::optional<std::string> get_translation(hash_t lang, hash_t key) const = 0;
        virtual ILocalizationMap() = default;
    };
}"
EwpTf6R0,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,atakan1983,JavaScript,Saturday 8th of June 2024 09:40:31 AM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
7nd of June 2024

"
qYDqaKgv,Untitled,guttermonk,Bash,Saturday 8th of June 2024 09:35:08 AM CDT,"ProtonUp-Qt 2.9.2 by DavidoTek. Build Info: Official AppImage by DavidoTek.
Python 3.10.4 (main, Apr  2 2022, 09:04:19) [GCC 11.2.0], PySide 6.7.0
Platform: 1;34 https://github.com/NixOS/nixpkgs/issues Linux-6.6.32-x86_64-with-glibc2.39
qt.core.plugin.factoryloader: checking directory path ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms"" ...
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqlinuxfb.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqlinuxfb.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""linuxfb""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QLinuxFbIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""linuxfb"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqvkkhrdisplay.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqvkkhrdisplay.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""vkkhrdisplay""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QVkKhrDisplayIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""vkkhrdisplay"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/qt6.conf""
qt.core.plugin.loader: Failed to find metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/qt6.conf: '/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/qt6.conf' is not a valid ELF object (invalid signature)
qt.core.plugin.factoryloader: ""Failed to extract plugin meta data from '/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/qt6.conf': '/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/qt6.conf' is not a valid ELF object (invalid signature)""
         not a plugin
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqwayland-egl.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqwayland-egl.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""wayland-egl""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QWaylandEglPlatformIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""wayland-egl"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqxcb.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqxcb.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""xcb""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QXcbIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""xcb"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqminimal.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqminimal.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""minimal""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QMinimalIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""minimal"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqminimalegl.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqminimalegl.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""minimalegl""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QMinimalEglIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""minimalegl"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqwayland-generic.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqwayland-generic.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""wayland""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QWaylandIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""wayland"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqoffscreen.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqoffscreen.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""offscreen""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QOffscreenIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""offscreen"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqvnc.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqvnc.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""vnc""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QVncIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""vnc"")
qt.core.plugin.factoryloader: looking at ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqeglfs.so""
qt.core.plugin.loader: Found metadata in lib /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqeglfs.so, metadata=
{
    ""IID"": ""org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3"",
    ""MetaData"": {
        ""Keys"": [
            ""eglfs""
        ]
    },
    ""archlevel"": 1,
    ""className"": ""QEglFSIntegrationPlugin"",
    ""debug"": false,
    ""version"": 395008
}


qt.core.plugin.factoryloader: Got keys from plugin meta data QList(""eglfs"")
qt.core.plugin.factoryloader: checking directory path ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/bin/platforms"" ...
qt.core.library: ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqxcb.so"" cannot load: Cannot load library /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqxcb.so:
qt.core.plugin.loader: QLibraryPrivate::loadPlugin failed on ""/nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqxcb.so"" : ""Cannot load library /nix/store/rlld7lac80a11i8ag141g3ziv1bi0qq1-protonup-qt-2.9.2-extracted/usr/local/lib/python3.10/dist-packages/PySide6/Qt/plugins/platforms/libqxcb.so: ""
qt.qpa.plugin: From 6.5.0, xcb-cursor0 or libxcb-cursor0 is needed to load the Qt xcb platform plugin.
qt.qpa.plugin: Could not load the Qt platform plugin ""xcb"" in """" even though it was found.
This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.

Available platform plugins are: linuxfb, vkkhrdisplay, wayland-egl, xcb, minimal, minimalegl, wayland, offscreen, vnc, eglfs."
RutbiVQ9,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,tajdiqul,JavaScript,Saturday 8th of June 2024 09:34:27 AM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?972

Working as of:
June 7nd 2024

"
