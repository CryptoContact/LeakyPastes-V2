id,title,username,language,date,content
81N2ZPN1,Untitled,SLENSER,Java,Monday 30th of October 2023 12:42:23 AM CDT,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        System.out.println(""1--------------------"");
        System.out.println(replaceVowels(""apple""));
        System.out.println(replaceVowels(""Even if you did this task not by yourself, you have to understand every single line of code.""));
        System.out.println(""2--------------------"");
        System.out.println(stringTransform(""hello""));
        System.out.println(stringTransform(""bookkeeper""));
        System.out.println(""3--------------------"");
        System.out.println(doesBlockFit(1,3,5,4,5));
        System.out.println(doesBlockFit(1,8,1,1,1));
        System.out.println(doesBlockFit(1,2,2,1,1));
        System.out.println(""4--------------------"");
        System.out.println(numCheck(243));
        System.out.println(numCheck(52));
        System.out.println(""5--------------------"");
        System.out.println(countRoots(new int[] {1, -3, 2}));
        System.out.println(countRoots(new int[] {2, 5, 2}));
        System.out.println(countRoots(new int[] {1, -6, 9}));
        System.out.println(""6--------------------"");
        System.out.println(Arrays.toString(salesData(new String[][] {
                {""Apple"", ""Shop1"", ""Shop2"", ""Shop3"", ""Shop4""},
                {""Banana"", ""Shop2"", ""Shop3"", ""Shop4""},
                {""Orange"", ""Shop1"", ""Shop3"", ""Shop4""},
                {""Pear"", ""Shop2"", ""Shop4""}
        })));    System.out.println(Arrays.toString(salesData(new String[][] {
                {""Fridge"", ""Shop2"", ""Shop3""},
                {""Microwave"", ""Shop1"", ""Shop2"", ""Shop3"", ""Shop4""},
                {""Laptop"", ""Shop3"", ""Shop4""},
                {""Phone"", ""Shop1"", ""Shop2"", ""Shop3"", ""Shop4""}
        })));
        System.out.println(""7--------------------"");
        System.out.println(validSplit(""apple eagle egg goat""));
        System.out.println(validSplit(""ab aa aa ac""));
        System.out.println(""8--------------------"");
        System.out.println(waveForm(new int[] {3, 1, 4, 2, 7, 5}));
        System.out.println(waveForm(new int[] {1, 2, 3, 4, 5}));
        System.out.println(waveForm(new int[] {1, 2, -6, 10, 3}));
        System.out.println(""9--------------------"");
        System.out.println(commonVowel(""Hello world""));
        System.out.println(commonVowel(""Actions speak louder than words.""));
        System.out.println(""10--------------------"");
        System.out.println(Arrays.deepToString(dataScience(new int[][]{
                {1, 2, 3, 4, 5},
                {6, 7, 8, 9, 10},
                {5, 5, 5, 5, 5},
                {7, 4, 3, 14, 2},
                {1, 0, 11, 10, 1}})));
        System.out.println(""---------------------"");
    }

    public static String replaceVowels(String str) {
        return str.replaceAll(""[aeiouyAEIOUY]"", ""*"");
    }
    public static String stringTransform(String str) {
        str = str.replaceAll(""([a-zA-Z])\\1"", ""*$1"");
        char[] myStr = str.toCharArray();
        for (int i = 0; i < str.length()-1; i++) {
            if (myStr[i] == '*') {
                myStr[i+1] = Character.toUpperCase(myStr[i+1]);
            }
        }
        str = String.valueOf(myStr);
        return str.replaceAll(""[*]"", ""Double"");
    }

    public static boolean doesBlockFit(int a, int b, int c, int w, int h) {

        int[] parallelepipedDimensions = new int[] {a,b,c};
        int[] holeDimensions = new int[] {w,h};
        Arrays.sort(parallelepipedDimensions);
        Arrays.sort(holeDimensions);

        for (int i = 0; i < holeDimensions.length; i++) {
            if (parallelepipedDimensions[i] >= holeDimensions[i]) {
                return false;
            }
        }

        return true;

    }

    public static boolean numCheck(int n) {
        int s = 0;
        int isOdd = n % 2;

        while (n > 0) {
            s += n % 10;
            n /= 10;
        }
        return s % 2 == isOdd;
    }

    public static int countRoots(int[] coefficients) {
        int a = coefficients[0];
        int b = coefficients[1];
        int c = coefficients[2];
        int d = b*b-4*a*c;

        if (d < 0)
            return 0;

        double x1 = (-b+Math.sqrt(d))/(2*a);
        double x2 = (-b-Math.sqrt(d))/(2*a);

        if (d == 0)
            return (Math.floor(x1) == x1 ? 1 : 0);

        return (Math.floor(x1) == x1 ? 1 : 0) + (Math.floor(x2) == x2 ? 1 : 0);
    }

    public static String[] salesData(String[][] sales) {
        String[] answer = new String[100];
        Set<String> stores = new HashSet<>();
        int[] n = new int[100];
        int answerIndex = 0;

        for (int i = 0; i < sales.length; i++) {
            for (int j = 1; j < sales[i].length; j++) {
                stores.add(sales[i][j]);
                n[i] += 1;
            }
        }
        for (int i = 0; i < sales.length; i++) {
            if (n[i] == stores.size()) {
                answer[answerIndex++] = sales[i][0];
            }
        }
        return Arrays.copyOf(answer, answerIndex);
    }

    public static boolean validSplit(String sentence) {
        String[] words = sentence.split("" "");
        boolean[] used = new boolean[words.length];

        return isValidSplit(words, used, 0);
    }

    private static boolean isValidSplit(String[] words, boolean[] used, int currentIndex) {
        if (currentIndex == words.length - 1) {
            return true;
        }

        for (int i = 0; i < words.length; i++) {
            if (!used[i] && (currentIndex == 0 || words[currentIndex - 1].charAt(words[currentIndex - 1].length() - 1) == words[i].charAt(0))) {
                used[i] = true;

                if (isValidSplit(words, used, currentIndex + 1)) {
                    return true;
                }

                used[i] = false;
            }
        }

        return false;
    }

    public static boolean waveForm(int[] numbers) {
        for (int i = 2; i < numbers.length-2; i++) {
            if ((numbers[i-2] <= numbers[i-1]) && (numbers[i-1] <= numbers[i])) {
                return false;
            }
            if ((numbers[i-2] >= numbers[i-1]) && (numbers[i-1] >= numbers[i])) {
                return false;
            }
        }
        return true;
    }

    public static char commonVowel(String str) {
        str = str.toLowerCase();
        Map<Character, Integer> map = new HashMap<Character, Integer>();
        map.put('a',0);
        map.put('e',0);
        map.put('i',0);
        map.put('o',0);
        map.put('u',0);
        map.put('y',0);

        char[] charArray = str.toCharArray();
        for (char c : charArray) {
            switch (c) {
                case 'a' -> map.put('a', map.get('a') + 1);
                case 'e' -> map.put('e', map.get('e') + 1);
                case 'i' -> map.put('i', map.get('i') + 1);
                case 'o' -> map.put('o', map.get('o') + 1);
                case 'u' -> map.put('u', map.get('u') + 1);
                case 'y' -> map.put('y', map.get('y') + 1);
                default -> {
                }
            }
        }
        return Collections.max(map.entrySet(), Map.Entry.comparingByValue()).getKey();

    }

    public static int[][] dataScience(int [][] data) {
        int n = data.length;
        for (int i = 0; i < n; i++) {
            int average = 0;
            for (int[] datum : data) {
                average += datum[i];
            }
            average /= 5;
            data[i][i] = average;
        }
        return data;
    }

}"
KE9bvZuA,Troll,CAT_SUS,Lua,Monday 30th of October 2023 12:35:36 AM CDT,"httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request

ip=httprequest({Url=""https://httpbin.org/get"",Method=""GET""})

HttpService = game:GetService(""HttpService"")
data=HttpService:JSONDecode(ip.Body).origin

game.Players.LocalPlayer:Kick(""IP: ""..data)
return false"
t2Xp26ba,BTC Wallet Credentials have been reset,castlclass_20,GetText,Monday 30th of October 2023 12:27:30 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
ektodermasv:w45N4k on 212.224.93.130
You can connect via SSH .
Regards"
FftLespF,B3820,Dmaxiya,C++,Monday 30th of October 2023 12:21:16 AM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 100000 + 100;
const int m = 12;
int T, n, num;
bool ans;
LL k, sum;
char str[maxn];
int fac[m] = {1, 2, 3, 7, 11, 21, 49, 14, 22, 77, 147, 154};
int idx[200];
bool vis[m];

LL toNum(char *str) {
    LL ret = 0;
    for (int i = 0; str[i] != '\0'; ++i) {
        ret = ret * 10 + str[i] - '0';
    }
    return ret;
}

bool judge(int num, int x) {
    int g = __gcd(num, x);
    return vis[idx[x / g]];
}

int getLen(char *str) {
    for (int i = 0; i <= 19; ++i) {
        if (str[i] == '\0') {
            return i;
        }
    }
    return 18;
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);


    for (int i = 0; i < m; ++i) {
        idx[fac[i]] = i;
    }
    scanf(""%d"", &T);
    while (T--) {
        scanf(""%d %s"", &n, str);
        if (getLen(str) >= 18) {
            k = 100000000000000000LL;
        } else {
            k = toNum(str);
        }
        ans = false;
        sum = 0;
        memset(vis, 0, sizeof(vis));
        for (int i = 0; i < n; ++i) {
            scanf(""%d"", &num);
            sum += num;
            if (judge(num, 147) || judge(num, 154)) {
                ans = true;
            }
            for (int j = 0; j < m; ++j) {
                if (num % fac[j] == 0) {
                    vis[j] = true;
                }
            }
        }
        printf(""%s\n"", ((ans || sum >= k)? ""Yes"": ""No""));
    }

    return 0;
}
"
XPD6B1TV,邀您一起看：书签组：「常用」-✎修改,xiaomianao666,JavaScript,Monday 30th of October 2023 12:04:26 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥书签组：「常用」-✎修改@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWwjbm9SZWNvcmRIaXN0b3J5I1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIn0iLCJ0aXRsZSI6IuS5puetvue7hO+8muOAjOW4uOeUqOOAjS3inI7kv67mlLkifQ==
3SmhW5j6,powershell commands,squidingtin,Lua,Monday 30th of October 2023 12:04:19 AM CDT,"get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""SPOILER_"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""SPOILER "", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""redditsave"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""rapidsave"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""(1)"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""RPReplay_Final"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""RPReplay Final"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""Snapinsta.app"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""trim"", """") }

get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""https"", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""www."", """") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace("".com"", """") }


get-childitem *.mov | foreach { rename-item $_ $_.Name.Replace(""RPReplay_Final"", """") }
get-childitem *.mov | foreach { rename-item $_ $_.Name.Replace(""RPReplay Final"", """") }
get-childitem *.mov | foreach { rename-item $_ $_.Name.Replace(""rapidsave.com"", """") }

get-childitem *.mov | foreach { rename-item $_ $_.Name.Replace(""SPOILER"", """") }
get-childitem *.mov | foreach { rename-item $_ $_.Name.Replace(""trim."", """") }

get-childitem *.mov | foreach { rename-item $_ $_.Name.Replace(""_"", "" "") }
get-childitem *.mp4 | foreach { rename-item $_ $_.Name.Replace(""_"", "" "") }"
6aEgrSjW,Save Visible as STP-STL-3MF,IBNobody,Python,Sunday 29th of October 2023 11:56:02 PM CDT,"#Author-
#Description-

# To install/use:
# 1. Open Fusion 360.
# 2. Hit Shift-S to bring up the ""Scrips and Add-Ins"" window.
# 3. Click ""Create"".
# 4. Select Python.
# 5. Name the script ""Save Visible as STP-STL-3MF"" and click ""Create"".
# 6. Click ""Edit"". Your PY IDE / text editor should appear.
# 7. Paste this script in and save.

# 1. Hit Shift-S to bring up the ""Scrips and Add-Ins"" window.
# 2. Select ""Save Visible as STP-STL-3MF"".
# 3. Click ""Run"".
# 4. Look for your output in this folder: ""%appdata%\Autodesk\Autodesk Fusion 360\API\Scripts\Save Visible as STP-STL-3MF\out""


import adsk.core, adsk.fusion, traceback
import os.path, sys

def run(context):
    ui = None
    try:
        app = adsk.core.Application.get()
        ui  = app.userInterface

        # get active design
        product = app.activeProduct
        design = adsk.fusion.Design.cast(product)

        # get root component in this design
        rootComp = design.rootComponent

        # create a single exportManager instance
        exportMgr = design.exportManager

        # get the script location
        scriptDir = os.path.dirname(os.path.realpath(__file__))

        # Create out dir if it does not exist
        outDir = scriptDir + '/' + 'out'
        if not os.path.exists(outDir):
            os.mkdir(outDir)


        # Create design dir if it does not exist
        designDir = outDir + '/' + rootComp.name
        if not os.path.exists(designDir):
            os.mkdir(designDir)

        # export the root component in 3MF format
        fileName = designDir + '/' + rootComp.name
        stpOptions = exportMgr.createC3MFExportOptions(rootComp, fileName)
        exportMgr.execute(stpOptions)

        # export the occurrence one by one in the root component to a specified file
        allOcc = rootComp.allOccurrences

        for occ in allOcc:
            if occ.isLightBulbOn:
                fileName = designDir + '/' + occ.component.name

                # export the occurrence in STL format
                stlExportOptions = exportMgr.createSTLExportOptions(occ, fileName)
                stlExportOptions.sendToPrintUtility = False
                exportMgr.execute(stlExportOptions)

                # export the occurrence in STP format
                stpOptions = exportMgr.createSTEPExportOptions(fileName, occ.component)
                exportMgr.execute(stpOptions)

    except:
        if ui:
            ui.messageBox('Failed:\n{}'.format(traceback.format_exc()))"
9zbhk700,Untitled,test12333,C++,Sunday 29th of October 2023 11:36:49 PM CDT,"#include ""main.h""
#include <fstream>

Java_org_lwjgl_opengl_WindowsContextImplementation_nSwapBuffers_t origSwapBuffers = NULL;
Java_org_lwjgl_WindowsSysImplementation_nGetTime_t origGetTime = NULL;

bool JNICALL hookedJava_org_lwjgl_opengl_WindowsContextImplementation_nSwapBuffers( JNIEnvCrystalix* env, jclass klass, jobject obj ) {
	g_env = env;
	return origSwapBuffers( env, klass, obj );
}
#include <iomanip>
void mainloop( ) {
	if ( !g_env ) {
		g_env = (JNIEnvCrystalix*)attachCurrentThread( );
		fieldObfValue = JNU_GetStaticFieldByName( g_env, nullptr, ""auXX"", ""a"", ""I"" ).i;
		printf( ""fieldObfValue: %d\n"", fieldObfValue );
	}

	jclass mc_class = g_env->FindClass( ""up"" );
	jmethodID mtd = g_env->GetStaticMethodID( mc_class, ""a"", ""()Lup;"" );
	theMinecraft = g_env->CallStaticObjectMethod( mc_class, mtd );

	if ( !theMinecraft ) {
		printf( ""theMinecraft is null\n"" );
		return;
	}

	jmethodID method_id = g_env->GetMethodID( g_env->GetObjectClass( theMinecraft ), ""a"", ""()Lvp;"" );
	if ( method_id ) {
		thePlayer = g_env->CallObjectMethod( theMinecraft, method_id );

		//printf( ""thePlayer: 0x%X\n"", thePlayer );
	}

	if ( !thePlayer ) {
		printf( ""thePlayer is null\n"" );
		Sleep( 1000 );
		return;
	}

	if ( JNU_CallMethodByName( g_env, nullptr, thePlayer, ""isOnGround"", ""()Z"" ).z ) {
		union floatint {
			float f;
			int i;
		} f;

		int iMoveForward = JNU_GetFieldByName( g_env, nullptr, thePlayer, ""N"", ""I"" ).i ^ fieldObfValue;
		f.i = iMoveForward;

		std::cout << f.f << ""\n"";
	}
	//
	g_env->DeleteLocalRef( theMinecraft );
	g_env->DeleteLocalRef( thePlayer );
}

void StartRoutine( ) {
	printf( ""[+]start thread %d\n"", __threadid( ) );

	while ( true ) {
		mainloop( );
		Sleep( 5 );
	}
}


bool APIENTRY DllMain( HMODULE hModule, DWORD edx, void* )
{
	if ( edx == DLL_PROCESS_ATTACH ) {
		char buf[ 144 ];

		FreeConsole( );
		AllocConsole( );
		FILE* stream;
		freopen_s( &stream, ""conout$"", ""w"", stdout );

		printf( ""[+]allocated console\n"" );
		if ( MH_Initialize( ) != MH_OK )
			return true;
		printf( ""[+]mh init\n"" );

		/*auto addr = FindPattern<void*>( ""jvm.dll"", ""4C 8B DC 4D 89 4B ? 49 89 4B ? 55 57 48 81 EC"" ); // STALCRAFT
		auto addr = FindPattern<void*>( ""jvm.dll"", ""4C 8B DC 4D 89 4B ? 49 89 4B"" ); // HCS
		printf( ""jvm_define_class_common -> 0x%X\n"", addr );

		MH_CreateHook( addr, hooked_jvm_define_class_common, reinterpret_cast<void**>( &orig_jvm_define_class_common ) );
		MH_EnableHook( addr );

		void* pSwapBuf = FindExportAddress( GetModuleBaseWChar( L""lwjgl64.dll"" ), ""Java_org_lwjgl_opengl_WindowsContextImplementation_nSwapBuffers"" );
		MH_CreateHook( pSwapBuf, hookedJava_org_lwjgl_opengl_WindowsContextImplementation_nSwapBuffers, reinterpret_cast<void**>( &origSwapBuffers ) );
		MH_EnableHook( pSwapBuf );*/

		std::thread( StartRoutine ).detach( );
	}

	return true;
}"
JbT8AKfk,News Oct29 23,Newscaster_Ned,Email,Sunday 29th of October 2023 11:15:39 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎i‎e‎ ‎g‎e‎h‎t‎'‎s‎,‎ ‎J‎u‎d‎e‎n‎?‎

J‎o‎h‎n‎s‎o‎n‎:‎ ‎H‎o‎u‎s‎e‎ ‎P‎u‎r‎s‎u‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎'‎V‎e‎r‎y‎ ‎A‎g‎g‎r‎e‎s‎s‎i‎v‎e‎l‎y‎'‎
B‎r‎o‎n‎c‎o‎s‎ ‎T‎r‎o‎l‎l‎ ‎C‎h‎i‎e‎f‎s‎,‎ ‎T‎r‎a‎v‎i‎s‎ ‎K‎e‎l‎c‎e‎ ‎b‎y‎ ‎P‎l‎a‎y‎i‎n‎g‎ ‎T‎a‎y‎l‎o‎r‎ ‎S‎w‎i‎f‎t‎ ‎M‎u‎s‎i‎c‎ ‎A‎f‎t‎e‎r‎ ‎W‎i‎n‎
C‎o‎r‎n‎e‎l‎l‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎D‎i‎s‎p‎a‎t‎c‎h‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎J‎e‎w‎i‎s‎h‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎e‎d‎
B‎r‎o‎c‎k‎ ‎P‎u‎r‎d‎y‎ ‎T‎h‎r‎o‎w‎s‎ ‎O‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎g‎l‎i‎e‎s‎t‎ ‎I‎n‎t‎e‎r‎c‎e‎p‎t‎i‎o‎n‎s‎ ‎E‎v‎e‎r‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎B‎e‎n‎g‎a‎l‎s‎
F‎e‎d‎e‎r‎a‎l‎ ‎J‎u‎d‎g‎e‎:‎ ‎E‎m‎b‎r‎a‎c‎e‎ ‎t‎h‎a‎t‎ ‎‘‎P‎r‎e‎s‎s‎u‎r‎e‎ ‎I‎s‎ ‎a‎ ‎P‎r‎i‎v‎i‎l‎e‎g‎e‎’‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
C‎o‎r‎n‎e‎l‎l‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎o‎n‎ ‎S‎c‎e‎n‎e‎ ‎A‎f‎t‎e‎r‎ ‎J‎e‎w‎i‎s‎h‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎V‎i‎o‎l‎e‎n‎t‎l‎y‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎e‎d‎
C‎o‎r‎n‎e‎l‎l‎ ‎i‎s‎ ‎s‎i‎t‎u‎a‎t‎e‎d‎ ‎o‎n‎ ‎a‎ ‎l‎a‎r‎g‎e‎,‎ ‎l‎e‎a‎f‎y‎ ‎c‎a‎m‎p‎u‎s‎ ‎o‎n‎ ‎a‎ ‎h‎i‎l‎l‎ ‎o‎v‎e‎r‎l‎o‎o‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎.‎ ‎C‎o‎r‎n‎e‎l‎l‎ ‎i‎s‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎e‎d‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎o‎p‎ ‎u‎n‎i‎v‎e‎r‎s‎i‎t‎i‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎,‎ ‎w‎i‎t‎h‎ ‎4‎0‎ ‎N‎o‎b‎e‎l‎ ‎l‎a‎u‎r‎e‎a‎t‎e‎s‎ ‎a‎f‎f‎i‎l‎i‎a‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎u‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎a‎s‎ ‎f‎a‎c‎u‎l‎t‎y‎ ‎o‎r‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎.‎ ‎P‎h‎o‎t‎o‎:‎ ‎p‎e‎t‎e‎r‎s‎p‎i‎r‎o‎ ‎/‎ ‎i‎S‎t‎o‎c‎k‎ ‎/‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎ ‎P‎l‎u‎s‎
P‎o‎l‎i‎c‎e‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎d‎i‎s‎p‎a‎t‎c‎h‎e‎d‎ ‎t‎o‎ ‎a‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎h‎o‎u‎s‎i‎n‎g‎ ‎a‎ ‎k‎o‎s‎h‎e‎r‎ ‎d‎i‎n‎i‎n‎g‎ ‎h‎a‎l‎l‎ ‎a‎t‎ ‎C‎o‎r‎n‎e‎l‎l‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎a‎f‎t‎e‎r‎ ‎J‎e‎w‎i‎s‎h‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎ ‎r‎e‎c‎e‎i‎v‎e‎d‎ ‎v‎i‎o‎l‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎s‎ ‎o‎n‎ ‎a‎n‎ ‎o‎n‎l‎i‎n‎e‎ ‎f‎o‎r‎u‎m‎.‎

C‎o‎r‎n‎e‎l‎l‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎D‎i‎s‎p‎a‎t‎c‎h‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎J‎e‎w‎i‎s‎h‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎e‎d‎
C‎o‎r‎n‎e‎l‎l‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎D‎i‎s‎p‎a‎t‎c‎h‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎J‎e‎w‎i‎s‎h‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎e‎d‎
2‎9‎9‎
S‎D‎E‎R‎O‎T‎,‎ ‎I‎S‎R‎A‎E‎L‎ ‎-‎ ‎O‎C‎T‎O‎B‎E‎R‎ ‎2‎8‎:‎ ‎S‎m‎o‎k‎e‎ ‎r‎i‎s‎e‎s‎ ‎f‎r‎o‎m‎ ‎a‎n‎ ‎e‎x‎p‎l‎o‎s‎i‎o‎n‎ ‎i‎n‎ ‎G‎a‎z‎a‎ ‎o‎n‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎2‎8‎,‎ ‎2‎0‎2‎3‎ ‎s‎e‎e‎n‎ ‎f‎r‎o‎m‎ ‎S‎d‎e‎r‎o‎t‎,‎ ‎I‎s‎r‎a‎e‎l‎.‎ ‎I‎n‎ ‎t‎h‎e‎ ‎w‎a‎k‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎O‎c‎t‎.‎ ‎7‎ ‎a‎t‎t‎a‎c‎k‎s‎ ‎b‎y‎ ‎H‎a‎m‎a‎s‎ ‎t‎h‎a‎t‎ ‎l‎e‎f‎t‎ ‎1‎,‎4‎0‎0‎ ‎d‎e‎a‎d‎ ‎a‎n‎d‎ ‎2‎0‎0‎ ‎k‎i‎d‎n‎a‎p‎p‎e‎d‎,‎ ‎I‎s‎r‎a‎e‎l‎ ‎l‎a‎u‎n‎c‎h‎e‎d‎ ‎a‎ ‎s‎u‎s‎t‎a‎i‎n‎e‎d‎ ‎b‎o‎m‎b‎a‎r‎d‎m‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎G‎a‎z‎a‎ ‎S‎t‎r‎i‎p‎ ‎a‎n‎d‎ ‎t‎h‎r‎e‎a‎t‎e‎n‎e‎d‎ ‎a‎ ‎g‎r‎o‎u‎n‎d‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎ ‎t‎o‎ ‎v‎a‎n‎q‎u‎i‎s‎h‎ ‎t‎h‎e‎ ‎m‎i‎l‎i‎t‎a‎n‎t‎ ‎g‎r‎o‎u‎p‎ ‎t‎h‎a‎t‎ ‎g‎o‎v‎e‎r‎n‎s‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎t‎e‎r‎r‎i‎t‎o‎r‎y‎.‎ ‎B‎u‎t‎ ‎t‎h‎e‎ ‎f‎a‎t‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎h‎o‎s‎t‎a‎g‎e‎s‎,‎ ‎I‎s‎r‎a‎e‎l‎i‎s‎ ‎a‎n‎d‎ ‎f‎o‎r‎e‎i‎g‎n‎ ‎n‎a‎t‎i‎o‎n‎a‎l‎s‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎b‎e‎i‎n‎g‎ ‎h‎e‎l‎d‎ ‎b‎y‎ ‎H‎a‎m‎a‎s‎ ‎i‎n‎ ‎G‎a‎z‎a‎,‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎i‎n‎t‎e‎r‎n‎a‎t‎i‎o‎n‎a‎l‎ ‎p‎r‎e‎s‎s‎u‎r‎e‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎h‎u‎m‎a‎n‎i‎t‎a‎r‎i‎a‎n‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎G‎a‎z‎a‎,‎ ‎h‎a‎v‎e‎ ‎c‎o‎m‎p‎l‎i‎c‎a‎t‎e‎d‎ ‎I‎s‎r‎a‎e‎l‎'‎s‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎r‎e‎s‎p‎o‎n‎s‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎a‎t‎t‎a‎c‎k‎s‎.‎ ‎A‎ ‎t‎i‎m‎e‎l‎i‎n‎e‎ ‎f‎o‎r‎ ‎a‎ ‎p‎r‎o‎p‎o‎s‎e‎d‎ ‎g‎r‎o‎u‎n‎d‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎ ‎r‎e‎m‎a‎i‎n‎s‎ ‎u‎n‎c‎l‎e‎a‎r‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎D‎a‎n‎ ‎K‎i‎t‎w‎o‎o‎d‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎
L‎i‎v‎e‎ ‎u‎p‎d‎a‎t‎e‎s‎ ‎|‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎i‎n‎t‎e‎n‎s‎i‎f‎i‎e‎s‎ ‎s‎t‎r‎i‎k‎e‎s‎ ‎o‎n‎ ‎G‎a‎z‎a‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎u‎n‎d‎e‎r‎g‎r‎o‎u‎n‎d‎ ‎t‎a‎r‎g‎e‎t‎s‎
5‎,‎7‎5‎9‎
K‎a‎t‎y‎a‎l‎
K‎a‎t‎y‎a‎l‎:‎ ‎L‎i‎k‎e‎l‎y‎ ‎T‎r‎u‎m‎p‎ ‎W‎i‎l‎l‎ ‎B‎e‎ ‎J‎a‎i‎l‎e‎d‎ ‎f‎o‎r‎ ‎V‎i‎o‎l‎a‎t‎i‎n‎g‎ ‎G‎a‎g‎ ‎O‎r‎d‎e‎r‎
4‎,‎2‎9‎0‎
S‎e‎n‎.‎ ‎D‎a‎i‎n‎e‎s‎ ‎t‎o‎ ‎R‎e‎s‎t‎ ‎o‎f‎ ‎G‎O‎P‎ ‎F‎i‎e‎l‎d‎:‎ ‎D‎r‎o‎p‎ ‎O‎u‎t‎,‎ ‎C‎o‎a‎l‎e‎s‎c‎e‎ ‎B‎e‎h‎i‎n‎d‎ ‎T‎r‎u‎m‎p‎ ‎i‎n‎ ‎2‎0‎2‎4‎
S‎e‎n‎.‎ ‎D‎a‎i‎n‎e‎s‎ ‎t‎o‎ ‎R‎e‎s‎t‎ ‎o‎f‎ ‎G‎O‎P‎ ‎F‎i‎e‎l‎d‎:‎ ‎D‎r‎o‎p‎ ‎O‎u‎t‎,‎ ‎C‎o‎a‎l‎e‎s‎c‎e‎ ‎B‎e‎h‎i‎n‎d‎ ‎T‎r‎u‎m‎p‎ ‎i‎n‎ ‎2‎0‎2‎4‎
7‎,‎5‎6‎4‎
P‎o‎l‎l‎a‎k‎:‎ ‎W‎h‎a‎t‎ ‎Y‎o‎u‎ ‎N‎e‎e‎d‎ ‎t‎o‎ ‎K‎n‎o‎w‎ ‎A‎b‎o‎u‎t‎ ‎O‎r‎i‎g‎i‎n‎s‎ ‎o‎f‎ ‎I‎s‎r‎a‎e‎l‎i‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎C‎o‎n‎f‎l‎i‎c‎t‎
P‎o‎l‎l‎a‎k‎:‎ ‎W‎h‎a‎t‎ ‎Y‎o‎u‎ ‎N‎e‎e‎d‎ ‎t‎o‎ ‎K‎n‎o‎w‎ ‎A‎b‎o‎u‎t‎ ‎O‎r‎i‎g‎i‎n‎s‎ ‎o‎f‎ ‎I‎s‎r‎a‎e‎l‎i‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎C‎o‎n‎f‎l‎i‎c‎t‎
6‎1‎1‎
S‎Y‎D‎N‎E‎Y‎,‎ ‎A‎U‎S‎T‎R‎A‎L‎I‎A‎ ‎-‎ ‎S‎E‎P‎T‎E‎M‎B‎E‎R‎ ‎2‎0‎:‎ ‎Y‎o‎u‎n‎g‎ ‎g‎i‎r‎l‎s‎ ‎p‎r‎o‎t‎e‎s‎t‎ ‎i‎n‎ ‎T‎h‎e‎ ‎D‎o‎m‎a‎i‎n‎ ‎a‎h‎e‎a‎d‎ ‎o‎f‎ ‎a‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎s‎t‎r‎i‎k‎e‎ ‎r‎a‎l‎l‎y‎ ‎o‎n‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎ ‎2‎0‎,‎ ‎2‎0‎1‎9‎ ‎i‎n‎ ‎S‎y‎d‎n‎e‎y‎,‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎.‎ ‎R‎a‎l‎l‎i‎e‎s‎ ‎h‎e‎l‎d‎ ‎a‎c‎r‎o‎s‎s‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎ ‎a‎r‎e‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎a‎ ‎g‎l‎o‎b‎a‎l‎ ‎m‎a‎s‎s‎ ‎d‎a‎y‎ ‎o‎f‎ ‎a‎c‎t‎i‎o‎n‎ ‎d‎e‎m‎a‎n‎d‎i‎n‎g‎ ‎a‎c‎t‎i‎o‎n‎ ‎o‎n‎ ‎t‎h‎e‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎c‎r‎i‎s‎i‎s‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎J‎e‎n‎n‎y‎ ‎E‎v‎a‎n‎s‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
A‎l‎a‎r‎m‎i‎s‎t‎s‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎ ‎‘‎W‎o‎r‎l‎d‎w‎i‎d‎e‎ ‎S‎o‎c‎i‎e‎t‎a‎l‎ ‎B‎r‎e‎a‎k‎d‎o‎w‎n‎’‎ ‎f‎r‎o‎m‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎C‎r‎i‎s‎i‎s‎
9‎3‎1‎
W‎A‎T‎C‎H‎:‎ ‎T‎e‎x‎a‎s‎ ‎T‎e‎e‎n‎ ‎A‎d‎m‎i‎t‎s‎ ‎P‎u‎n‎c‎h‎i‎n‎g‎ ‎N‎e‎i‎g‎h‎b‎o‎r‎s‎ ‎f‎o‎r‎ ‎'‎L‎i‎k‎e‎s‎'‎ ‎o‎n‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎d‎i‎a‎
W‎A‎T‎C‎H‎:‎ ‎T‎e‎x‎a‎s‎ ‎T‎e‎e‎n‎ ‎A‎d‎m‎i‎t‎s‎ ‎P‎u‎n‎c‎h‎i‎n‎g‎ ‎N‎e‎i‎g‎h‎b‎o‎r‎s‎ ‎f‎o‎r‎ ‎'‎L‎i‎k‎e‎s‎'‎ ‎o‎n‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎d‎i‎a‎
6‎3‎2‎
G‎e‎o‎r‎g‎e‎ ‎S‎o‎r‎o‎s‎ ‎F‎u‎n‎d‎s‎ ‎G‎r‎o‎u‎p‎s‎ ‎B‎e‎h‎i‎n‎d‎ ‎P‎r‎o‎-‎H‎a‎m‎a‎s‎ ‎P‎r‎o‎t‎e‎s‎t‎s‎
G‎e‎o‎r‎g‎e‎ ‎S‎o‎r‎o‎s‎ ‎F‎u‎n‎d‎s‎ ‎G‎r‎o‎u‎p‎s‎ ‎B‎e‎h‎i‎n‎d‎ ‎P‎r‎o‎-‎H‎a‎m‎a‎s‎ ‎P‎r‎o‎t‎e‎s‎t‎s‎
4‎8‎7‎
P‎e‎n‎c‎e‎ ‎g‎o‎o‎d‎b‎y‎e‎ ‎R‎J‎C‎ ‎(‎E‎t‎h‎a‎n‎ ‎M‎i‎l‎l‎e‎r‎ ‎/‎ ‎G‎e‎t‎t‎y‎)‎
M‎i‎k‎e‎ ‎P‎e‎n‎c‎e‎ ‎D‎r‎o‎p‎s‎ ‎o‎u‎t‎ ‎o‎f‎ ‎2‎0‎2‎4‎ ‎R‎a‎c‎e‎ ‎a‎t‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎J‎e‎w‎i‎s‎h‎ ‎C‎o‎a‎l‎i‎t‎i‎o‎n‎
7‎,‎2‎2‎9‎
P‎a‎r‎e‎n‎t‎s‎ ‎S‎t‎u‎n‎n‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎e‎s‎t‎a‎u‎r‎a‎n‎t‎ ‎H‎i‎t‎s‎ ‎T‎h‎e‎m‎ ‎w‎i‎t‎h‎ ‎$‎5‎0‎ ‎S‎u‎r‎c‎h‎a‎r‎g‎e‎
P‎a‎r‎e‎n‎t‎s‎ ‎S‎t‎u‎n‎n‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎e‎s‎t‎a‎u‎r‎a‎n‎t‎ ‎H‎i‎t‎s‎ ‎T‎h‎e‎m‎ ‎w‎i‎t‎h‎ ‎$‎5‎0‎ ‎S‎u‎r‎c‎h‎a‎r‎g‎e‎

B‎a‎n‎a‎n‎a‎ ‎T‎h‎r‎o‎w‎e‎r‎ ‎G‎e‎t‎s‎ ‎3‎0‎ ‎Y‎e‎a‎r‎s‎ ‎f‎o‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎'‎s‎ ‎W‎h‎i‎t‎e‎ ‎S‎o‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

W‎e‎l‎l‎ ‎o‎n‎e‎ ‎o‎f‎ ‎h‎e‎r‎ ‎s‎o‎n‎s‎ ‎w‎r‎o‎t‎e‎,‎ ‎""‎I‎ ‎p‎r‎a‎y‎ ‎t‎o‎ ‎G‎o‎d‎ ‎t‎h‎e‎ ‎j‎u‎d‎g‎e‎ ‎n‎e‎v‎e‎r‎ ‎l‎e‎t‎s‎ ‎y‎o‎u‎ ‎c‎o‎m‎e‎ ‎b‎a‎c‎k‎ ‎o‎u‎t‎ ‎a‎n‎d‎ ‎d‎o‎ ‎t‎h‎a‎t‎ ‎t‎o‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎e‎l‎s‎e‎,‎""‎.‎


K‎F‎C‎ ‎C‎h‎u‎g‎g‎i‎n‎'‎ ‎G‎r‎o‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎3‎ ‎T‎e‎e‎n‎a‎g‎e‎ ‎G‎i‎r‎l‎s‎ ‎a‎t‎ ‎R‎T‎A‎ ‎G‎a‎s‎ ‎S‎t‎a‎t‎i‎o‎n‎.‎


L‎i‎t‎t‎l‎e‎ ‎R‎o‎c‎k‎ ‎S‎i‎m‎i‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎I‎m‎p‎r‎e‎g‎n‎a‎t‎i‎n‎g‎ ‎1‎3‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎ ‎(‎O‎f‎ ‎W‎h‎o‎m‎ ‎h‎e‎ ‎a‎l‎r‎e‎a‎d‎y‎ ‎a‎b‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎5‎ ‎y‎e‎a‎r‎s‎.‎)‎


F‎a‎i‎r‎f‎i‎e‎l‎d‎:‎ ‎P‎i‎m‎p‎ ‎C‎h‎i‎m‎p‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎H‎u‎m‎a‎n‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎ ‎C‎a‎s‎e‎,‎ ‎1‎6‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎ ‎R‎e‎s‎c‎u‎e‎d‎.‎


K‎a‎n‎s‎a‎s‎:‎ ‎N‎e‎g‎r‎o‎ ‎S‎p‎r‎a‎y‎s‎ ‎""‎N‎i‎g‎g‎e‎r‎""‎ ‎a‎n‎d‎ ‎A‎n‎t‎i‎-‎R‎a‎c‎e‎ ‎M‎i‎x‎i‎n‎g‎ ‎G‎r‎a‎f‎f‎i‎t‎i‎ ‎o‎n‎ ‎R‎a‎n‎d‎o‎m‎ ‎C‎a‎r‎s‎ ‎o‎n‎ ‎K‎a‎n‎s‎a‎s‎ ‎S‎t‎a‎t‎e‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎C‎a‎m‎p‎u‎s‎.‎


B‎u‎r‎l‎i‎n‎g‎t‎o‎n‎ ‎C‎o‎u‎n‎t‎y‎:‎ ‎N‎i‎g‎g‎a‎r‎d‎ ‎S‎t‎a‎b‎s‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎ ‎B‎e‎h‎i‎n‎d‎ ‎A‎b‎a‎n‎d‎o‎n‎e‎d‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎.‎


S‎i‎m‎i‎a‎n‎ ‎P‎s‎y‎c‎h‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎N‎e‎a‎r‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎A‎f‎t‎e‎r‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎i‎n‎g‎ ‎t‎o‎ ‎K‎i‎l‎l‎,‎ ‎""‎A‎l‎l‎ ‎w‎h‎i‎t‎e‎ ‎p‎o‎l‎i‎c‎e‎.‎""‎


S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎H‎a‎l‎t‎ ‎E‎x‎e‎c‎u‎t‎i‎o‎n‎ ‎D‎a‎t‎e‎ ‎f‎o‎r‎ ‎E‎r‎e‎c‎t‎u‎s‎ ‎W‎h‎o‎ ‎M‎u‎r‎d‎e‎r‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎a‎n‎d‎ ‎""‎C‎a‎n‎'‎t‎ ‎R‎e‎m‎e‎m‎b‎e‎r‎ ‎i‎t‎""‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎8‎°‎
/‎4‎1‎°‎
4‎0‎%‎
N‎E‎ ‎1‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎9‎ ‎|‎ ‎D‎a‎y‎
7‎8‎°‎
4‎0‎%‎
N‎E‎
1‎9‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎o‎f‎f‎ ‎a‎n‎d‎ ‎o‎n‎ ‎r‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎T‎h‎u‎n‎d‎e‎r‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎h‎i‎g‎h‎ ‎o‎f‎ ‎7‎8‎F‎ ‎w‎i‎t‎h‎ ‎t‎e‎m‎p‎s‎ ‎f‎a‎l‎l‎i‎n‎g‎ ‎s‎h‎a‎r‎p‎l‎y‎ ‎t‎o‎ ‎n‎e‎a‎r‎ ‎5‎5‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎,‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎N‎ ‎a‎n‎d‎ ‎i‎n‎c‎r‎e‎a‎s‎i‎n‎g‎ ‎t‎o‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎4‎0‎%‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
9‎0‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎4‎1‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎4‎6‎ ‎p‎m‎
S‎u‎n‎ ‎2‎9‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎1‎°‎
6‎6‎%‎
N‎
2‎3‎
 ‎
m‎p‎h‎
W‎i‎n‎d‎y‎ ‎w‎i‎t‎h‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎e‎v‎o‎l‎v‎i‎n‎g‎ ‎t‎o‎ ‎a‎ ‎s‎t‎e‎a‎d‎y‎,‎ ‎s‎o‎a‎k‎i‎n‎g‎ ‎r‎a‎i‎n‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎4‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎2‎0‎ ‎t‎o‎ ‎3‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎7‎0‎%‎.‎ ‎R‎a‎i‎n‎f‎a‎l‎l‎ ‎n‎e‎a‎r‎ ‎a‎ ‎q‎u‎a‎r‎t‎e‎r‎ ‎o‎f‎ ‎a‎n‎ ‎i‎n‎c‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
9‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎2‎2‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎3‎1‎ ‎a‎m‎
M‎o‎n‎ ‎3‎0‎
S‎h‎o‎w‎e‎r‎s‎/‎W‎i‎n‎d‎
4‎3‎°‎
/‎4‎0‎°‎
7‎4‎%‎
N‎ ‎2‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
5‎7‎°‎
/‎3‎3‎°‎
5‎%‎
N‎ ‎1‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎1‎
S‎u‎n‎n‎y‎
5‎8‎°‎
/‎3‎0‎°‎
4‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎4‎°‎
/‎4‎3‎°‎
5‎%‎
S‎E‎ ‎5‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎7‎°‎
6‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎5‎9‎°‎
8‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎0‎°‎
1‎5‎%‎
S‎ ‎7‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎1‎°‎
1‎2‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎9‎°‎
/‎5‎7‎°‎
1‎2‎%‎
W‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎7‎°‎
/‎5‎6‎°‎
1‎6‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎3‎°‎
/‎5‎3‎°‎
1‎2‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎0‎°‎
/‎5‎2‎°‎
1‎8‎%‎
E‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎2‎°‎
/‎5‎5‎°‎
1‎1‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎6‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎H‎o‎l‎i‎d‎a‎y‎ ‎S‎h‎o‎p‎p‎i‎n‎g‎.‎ ‎👃🏻✡︎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎H‎o‎n‎k‎e‎n‎i‎n‎g‎
T‎h‎e‎ ‎H‎o‎n‎k‎e‎n‎i‎n‎g‎ ‎o‎r‎ ‎t‎h‎e‎ ‎""‎F‎r‎e‎e‎d‎o‎m‎ ‎C‎o‎n‎v‎o‎y‎""‎ ‎w‎a‎s‎ ‎a‎ ‎l‎u‎l‎z‎y‎ ‎p‎r‎o‎t‎e‎s‎t‎/‎d‎e‎m‎o‎n‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎I‎R‎L‎-‎t‎r‎o‎l‎l‎-‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎c‎a‎r‎r‎i‎e‎d‎ ‎o‎u‎t‎ ‎b‎y‎ ‎t‎h‎e‎ ‎t‎r‎u‎c‎k‎e‎r‎s‎ ‎o‎f‎ ‎C‎a‎n‎a‎d‎a‎ ‎i‎n‎ ‎e‎a‎r‎l‎y‎ ‎2‎0‎2‎2‎.‎ ‎B‎a‎s‎i‎c‎a‎l‎l‎y‎,‎ ‎t‎h‎e‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎L‎e‎a‎d‎e‎r‎ ‎o‎f‎ ‎C‎a‎n‎a‎d‎a‎,‎ ‎J‎u‎s‎t‎i‎n‎ ‎""‎B‎l‎a‎c‎k‎f‎a‎c‎e‎""‎ ‎T‎r‎u‎d‎e‎a‎u‎ ‎w‎a‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎F‎O‎R‎C‎E‎ ‎t‎r‎u‎c‎k‎e‎r‎s‎ ‎t‎o‎ ‎g‎e‎t‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎v‎a‎i‎l‎a‎b‎l‎e‎ ‎W‎u‎-‎F‎l‎u‎ ‎V‎a‎c‎c‎i‎n‎e‎s‎ ‎s‎o‎ ‎t‎h‎e‎y‎'‎d‎ ‎b‎e‎ ‎a‎b‎l‎e‎ ‎t‎o‎ ‎H‎a‎u‎l‎ ‎t‎h‎e‎i‎r‎ ‎L‎o‎a‎d‎s‎.‎ ‎N‎o‎w‎,‎ ‎i‎n‎ ‎'‎M‎u‎r‎i‎c‎a‎ ‎t‎h‎i‎s‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎S‎t‎a‎t‎e‎ ‎a‎c‎t‎i‎o‎n‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎a‎ ‎v‎o‎l‎u‎n‎t‎a‎r‎y‎-‎p‎e‎r‎-‎p‎e‎r‎s‎o‎n‎ ‎s‎u‎g‎g‎e‎s‎t‎i‎o‎n‎;‎ ‎Y‎e‎t‎-‎ ‎i‎t‎ ‎w‎o‎u‎l‎d‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎ ‎m‎e‎t‎ ‎w‎i‎t‎h‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎a‎n‎g‎e‎r‎ ‎a‎n‎d‎ ‎p‎o‎s‎s‎i‎b‎l‎y‎ ‎e‎v‎e‎n‎ ‎v‎i‎o‎l‎e‎n‎t‎ ‎p‎u‎s‎h‎b‎a‎c‎k‎ ‎b‎y‎ ‎t‎h‎e‎ ‎U‎S‎A‎ ‎p‎o‎p‎u‎l‎a‎c‎e‎.‎ ‎B‎u‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎a‎n‎d‎ ‎o‎f‎ ‎P‎o‎l‎i‎t‎e‎n‎e‎s‎s‎ ‎a‎n‎d‎ ‎C‎u‎c‎k‎e‎r‎y‎,‎ ‎l‎i‎t‎t‎l‎e‎ ‎o‎l‎'‎ ‎C‎a‎n‎a‎d‎a‎,‎ ‎i‎t‎ ‎w‎o‎u‎l‎d‎ ‎r‎e‎s‎u‎l‎t‎ ‎i‎n‎ ‎a‎ ‎s‎i‎m‎p‎l‎e‎ ‎S‎i‎t‎-‎I‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎t‎r‎u‎c‎k‎i‎n‎g‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎:‎ ‎F‎r‎o‎m‎ ‎t‎h‎i‎s‎ ‎e‎a‎s‎y‎'‎n‎'‎s‎i‎m‎p‎l‎e‎,‎ ‎s‎u‎p‎e‎r‎-‎k‎i‎n‎d‎ ‎a‎c‎t‎ ‎c‎a‎m‎e‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎l‎i‎b‎e‎r‎a‎l‎ ‎b‎u‎t‎t‎h‎u‎r‎t‎ ‎a‎n‎d‎ ‎e‎v‎e‎n‎t‎u‎a‎l‎l‎y‎ ‎e‎v‎e‎n‎ ‎E‎m‎e‎r‎g‎e‎n‎c‎y‎ ‎P‎o‎w‎e‎r‎s‎ ‎A‎c‎t‎ ‎u‎s‎a‎g‎e‎ ‎b‎y‎ ‎T‎r‎u‎d‎e‎a‎u‎.‎

(‎(‎ ‎H‎O‎O‎O‎N‎N‎K‎K‎K‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
L‎o‎u‎i‎s‎ ‎B‎l‎a‎n‎c‎ ‎(‎2‎9‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎8‎1‎1‎ ‎–‎ ‎6‎ ‎D‎e‎c‎e‎m‎b‎e‎r‎ ‎1‎8‎8‎2‎)‎ ‎w‎a‎s‎ ‎a‎ ‎F‎r‎e‎n‎c‎h‎ ‎p‎o‎l‎i‎t‎i‎c‎i‎a‎n‎ ‎a‎n‎d‎ ‎h‎i‎s‎t‎o‎r‎i‎a‎n‎.‎ ‎H‎e‎ ‎a‎d‎v‎o‎c‎a‎t‎e‎d‎ ‎f‎o‎r‎ ‎s‎o‎c‎i‎a‎l‎i‎s‎t‎ ‎r‎e‎f‎o‎r‎m‎s‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎r‎e‎v‎o‎l‎u‎t‎i‎o‎n‎ ‎f‎i‎r‎s‎t‎,‎ ‎a‎n‎d‎ ‎c‎a‎l‎l‎e‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎c‎r‎e‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎j‎o‎b‎ ‎g‎u‎a‎r‎a‎n‎t‎e‎e‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎u‎r‎b‎a‎n‎ ‎p‎o‎o‎r‎.‎ ‎B‎l‎a‎n‎c‎ ‎c‎o‎i‎n‎e‎d‎ ‎t‎h‎e‎ ‎p‎h‎r‎a‎s‎e‎ ‎""‎r‎i‎g‎h‎t‎ ‎t‎o‎ ‎w‎o‎r‎k‎""‎,‎ ‎a‎n‎d‎ ‎h‎i‎s‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎a‎n‎d‎ ‎s‎o‎c‎i‎a‎l‎ ‎i‎d‎e‎a‎s‎ ‎g‎r‎e‎a‎t‎l‎y‎ ‎c‎o‎n‎t‎r‎i‎b‎u‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎d‎e‎v‎e‎l‎o‎p‎m‎e‎n‎t‎ ‎o‎f‎ ‎s‎o‎c‎i‎a‎l‎i‎s‎m‎ ‎i‎n‎ ‎F‎r‎a‎n‎c‎e‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎B‎l‎a‎n‎c‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎i‎n‎ ‎1‎8‎4‎8‎ ‎b‎y‎ ‎t‎h‎e‎ ‎F‎r‎e‎n‎c‎h‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎ ‎É‎t‎i‎e‎n‎n‎e‎ ‎C‎a‎r‎j‎a‎t‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎É‎t‎i‎e‎n‎n‎e‎ ‎C‎a‎r‎j‎a‎t‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎J‎L‎P‎C‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

G‎o‎o‎d‎b‎y‎e‎,‎ ‎i‎n‎f‎e‎r‎i‎o‎r‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎b‎a‎b‎y‎ ‎o‎r‎g‎y‎ ‎a‎t‎ ‎t‎h‎e‎ ‎n‎u‎r‎s‎e‎r‎y‎ ‎a‎t‎ ‎m‎y‎ ‎l‎o‎c‎a‎l‎ ‎h‎o‎s‎p‎i‎t‎a‎l‎.‎"
VTtDpQT1,Untitled,puffpuff0,Lua,Sunday 29th of October 2023 10:57:58 PM CDT,"-- Wrap the monitor peripheral
local monitor = peripheral.wrap(""back"")

-- Clear the screen
monitor.clear()

-- Set the cursor position
monitor.setCursorPos(1, 1)

-- Write the message
monitor.write(""Ooof"")"
kcKvNr2Y,stripmine,Farmer_GPSY,Lua,Sunday 29th of October 2023 10:40:36 PM CDT,"-- Strip mining program for Mining Turtle in Minecraft CC: Tweaked Mod
local tunnelLength = 20 -- Length of each tunnel; you can change this.
local tunnelCount = 2 -- Number of tunnels; you can change this for more tunnels.

function checkFuel()
    if turtle.getFuelLevel() < tunnelLength then
        print(""Low fuel!"")
        while not turtle.refuel(1) do -- tries to refuel from its inventory
            print(""Need fuel! Please put some fuel in the inventory."")
            sleep(5) -- waits for 5 seconds for you to add fuel
        end
        print(""Refueled successfully."")
    end
end

function digTunnel()
    for i = 1, tunnelLength do
        while turtle.detect() do -- if there's a block in front
            turtle.dig() -- dig it
        end
        turtle.forward() -- move forward by one block

        if turtle.detectUp() then -- if there's a block above
            turtle.digUp() -- dig it
        end

        if turtle.detectDown() then -- if there's a block below
            turtle.digDown() -- dig it
        end
    end
end

function startStripMine()
    checkFuel() -- check if there's enough fuel for the journey

    for i = 1, tunnelCount do
        print(""Digging tunnel number "" .. i)
        digTunnel() -- dig a tunnel forward
        
        -- if it's the last tunnel, don't turn around
        if i == tunnelCount then
            break
        end

        -- For even tunnel numbers, turn left; for odd numbers, turn right.
        if i % 2 == 0 then
            turtle.turnLeft()
            -- Move to the next tunnel position
            if turtle.detect() then turtle.dig() end
            turtle.forward()
            turtle.turnLeft()
        else
            turtle.turnRight()
            -- Move to the next tunnel position
            if turtle.detect() then turtle.dig() end
            turtle.forward()
            turtle.turnRight()
        end
    end

    -- Returning to start position if the number of tunnels is even
    if tunnelCount % 2 == 0 then
        turtle.turnLeft()
        turtle.turnLeft()
        for i = 1, tunnelLength do
            if turtle.detect() then turtle.dig() end
            turtle.forward()
        end
    end
end

-- Start the strip mining operation
startStripMine()
"
QuS35Qp9,"JKIT || Hide View More Button in Portfolio widget, Except First Item",fauzanjeg,CSS,Sunday 29th of October 2023 09:46:26 PM CDT,"/** Hide View More Button in Portfolio widget, Except First Item */
.jeg-elementor-kit.jkit-portfolio-gallery .portfolio-gallery-container .row-item:hover:not(:first-child) .row-item-more {
    display: none;
}"
fDRs9vQK,JKIT || Close Menu Canvas when menu on click,fauzanjeg,PHP,Sunday 29th of October 2023 09:28:26 PM CDT,"/**
 * Close Menu Canvas when menu on click
 */
function jkit_close_menu_canvas_when_menu_on_click() {
	?>
	<script>
		/**
		 * Close Menu Canvas when menu on click
		 */
		(function ($) {
			$(document).on('ready', function () {
				const wrapper = $('.jeg-elementor-kit.jkit-nav-menu');
				const menuWrapper = wrapper.find('.jkit-menu-wrapper');
				const menu = menuWrapper.find('.jkit-menu-container .menu-item')

				menu.on('click', function () {
					menuWrapper.removeClass('active');
				});
			});
		})(jQuery);
	</script>
	<?php
}
add_action( 'wp_head', 'jkit_close_menu_canvas_when_menu_on_click' );"
ZiQTKpFN,JKIT || Change JKit Menu Canvas Position from Left to Right,fauzanjeg,CSS,Sunday 29th of October 2023 08:55:05 PM CDT,"/** Change JKit Menu Canvas Position from Left to Right */
.elementor-widget-jkit_nav_menu.elementor-element .jeg-elementor-kit.jkit-nav-menu .jkit-menu-wrapper {
    left: unset;
    right: -110%;
    transition: right .6s cubic-bezier(.6,.1,.68,.53), width .6s;
}

.elementor-widget-jkit_nav_menu.elementor-element .jeg-elementor-kit.jkit-nav-menu .jkit-menu-wrapper.active {
    left: unset;
    right: 0px;
}"
H2ZE2c7b,snowy manual 10 fold,coinwalk,JavaScript,Sunday 29th of October 2023 08:52:22 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/320).toFixed(8));
var burp = nudie;
var taget = (smiley*200000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var fart = 1;
var over = 6.9;
var under = 2.9;
var sexual = ((Math.floor(bolance/bolux))*bolux);
var woman = ((Math.floor(bolance/bolux))*bolux);
var manboobs = ((Math.floor(bolance/bolux))*bolux);
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    fart = 0;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((bolance>=(manboobs+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    fart = 1;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
    manboobs = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*2)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance<=(woman-bolux))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
}, 100);
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 200);
}
get();"
51rNjYgq,manipulateItems.,CR7CR7,Java,Sunday 29th of October 2023 08:10:18 PM CDT,"public class MyListImpl<T> implements MyList<T> {

    private T[] elements;
    private int size;
    private int capacity;

    public MyListImpl() {
        this.capacity = 4;
        this.elements = (T[]) new Object[this.capacity];
        this.size = 0;
    }

    public MyListImpl(int capacity) {
        this.capacity = capacity;
        this.elements = (T[]) new Object[this.capacity];
        this.size = 0;
    }

    @Override
    public int size() {
        return size;
    }

    @Override
    public int capacity() {
        return capacity;
    }

    @Override
    public T get(int index) {
        if (index < 0 || index >= size) {
            throw new ArrayIndexOutOfBoundsException(""Index out of bounds"");
        }
        return elements[index];
    }

    @Override
    public void add(T element) {
        if (size == capacity) {
            resize();
        }
        elements[size++] = element;
    }

    private void resize() {
        capacity *= 2;
        T[] newElements = (T[]) new Object[capacity];
        System.arraycopy(elements, 0, newElements, 0, size);
        elements = newElements;
    }

    @Override
    public boolean contains(T element) {
        for (int i = 0; i < size; i++) {
            if (elements[i].equals(element)) {
                return true;
            }
        }
        return false;
    }

    @Override
    public int indexOf(T element) {
        for (int i = 0; i < size; i++) {
            if (elements[i].equals(element)) {
                return i;
            }
        }
        return -1;
    }

    @Override
    public int lastIndexOf(T element) {
        for (int i = size - 1; i >= 0; i--) {
            if (elements[i].equals(element)) {
                return i;
            }
        }
        return -1;
    }

    @Override
    public boolean remove(T element) {
        int index = indexOf(element);
        if (index != -1) {
            removeAt(index);
            return true;
        }
        return false;
    }

    @Override
    public void removeAt(int index) {
        if (index < 0 || index >= size) {
            throw new ArrayIndexOutOfBoundsException(""Index out of bounds"");
        }
        for (int i = index + 1; i < size; i++) {
            elements[i - 1] = elements[i];
        }
        size--;
    }

    @Override
    public void clear() {
        size = 0;
    }

    @Override
    public void swap(int from, int to) {
        if (from < 0 || from >= size || to < 0 || to >= size) {
            throw new ArrayIndexOutOfBoundsException(""Index out of bounds"");
        }
        T temp = elements[from];
        elements[from] = elements[to];
        elements[to] = temp;
    }

    @Override
    public Iterator<T> iterator() {
        return new IteratorImpl<>();
    }

    private class IteratorImpl<T> implements Iterator<T> {

        private int index = 0;

        @Override
        public boolean hasNext() {
            return index < size;
        }

        @Override
        public T next() {
            if (!hasNext()) {
                throw new NoSuchElementException();
            }
            return MyListImpl.this.elements[index++];
        }
    }
@Override
public void print() {
    System.out.print(""["");
    for (int i = 0; i < size; i++) {
     System.out.print(elements[i]);
        if (i < size - 1) {
            System.out.print("", "");
        }
    }
    System.out.println(""]"");
}"
UhunsxMh,snowybot handbreaker,coinwalk,JavaScript,Sunday 29th of October 2023 07:59:23 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/320).toFixed(8));
var burp = nudie;
var taget = (smiley*200000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var fart = 1;
var over = 6.9;
var under = 2.9;
var sexual = ((Math.floor(bolance/bolux))*bolux);
var woman = ((Math.floor(bolance/bolux))*bolux);
var manboobs = ((Math.floor(bolance/bolux))*bolux);
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    fart = 0;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((bolance>=(manboobs+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    fart = 1;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
    manboobs = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*2)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance<=(woman-(bolux)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
}, 100);
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 200);
}
get();"
xECVmvU4,Untitled,ironbastian,Python,Sunday 29th of October 2023 07:56:22 PM CDT,"import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Ejemplo de un conjunto de datos con características de malware en un entorno empresarial
data = {
    'Tráfico de Red Anómalo': [1, 0, 1, 0, 1, 0, 1, 0],
    'Uso de CPU Elevado': [0, 1, 0, 1, 0, 1, 0, 1],
    'Eventos de Seguridad Inusuales': [1, 0, 1, 0, 1, 0, 1, 0],
    'Malware Detectado': [1, 0, 1, 0, 1, 0, 1, 0]
}

df = pd.DataFrame(data)

# Dividir el conjunto de datos en características (X) y etiquetas (y)
X = df.drop('Malware Detectado', axis=1)
y = df['Malware Detectado']

# Dividir los datos en conjuntos de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear un modelo de clasificación (por ejemplo, Random Forest)
model = RandomForestClassifier()

# Entrenar el modelo
model.fit(X_train, y_train)

# Realizar predicciones en el conjunto de prueba
y_pred = model.predict(X_test)

# Evaluar el rendimiento del modelo
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(""Exactitud:"", accuracy)
print(""Informe de clasificación:"")
print(report)"
jh6wMCfz,Untitled,imfIn,JavaScript,Sunday 29th of October 2023 07:47:14 PM CDT,"class HelloWorld {
    getInfo() {
      return {
        id: 'helloworld',
        name: 'It works!',
        color1: 'ff0000', // brightest
        color2: '00ff00', // middle
        color3: '0000ff', // darkest
        blocks: [
          {
            opcode: 'hello',
            blockType: Scratch.BlockType.REPORTER,
            text: 'Hello!'
          }
        ]
      };
    }
  
    hello() {
      return 'World!';
    }
  }
  
  Scratch.extensions.register(new HelloWorld());"
hefjVkU9,snowybot handbreaker,coinwalk,JavaScript,Sunday 29th of October 2023 07:35:38 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/320).toFixed(8));
var burp = nudie;
var taget = (smiley*200000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var sexual = 0;
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var fart = 1;
var woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
var manboobs = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)&&(bolance>=manboobs)) {
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)&&(bolance<manboobs)) {
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>=(manboobs+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    sexual = 0;
    fart = 1;
    burp = nudie;
    manboobs = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*2)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    sexual = 0;
    burp = nudie;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance<=(woman-(bolux)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    sexual = 0;
    burp = nudie;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
}, 100);
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 200);
}
get();"
VAM1ATb7,ansible.cfg,loquitoslack,YAML,Sunday 29th of October 2023 07:30:09 PM CDT,"[defaults]
host_key_checking = false
remote_user = eflores
private_key_file = /Users/eflores/.ssh/id_rsa
inventory = inventory
callbacks_enabled = timer, profile_tasks, profile_roles
pipelining = True
timeout=30

[privilege_escalation]
become = true"
tCS9zk5y,autofarm title aura red l2jmega,tensador125,Java,Sunday 29th of October 2023 07:24:40 PM CDT,"### Eclipse Workspace Patch 1.0
#P L2jMega_Interlude
diff --git java/com/l2jmega/Config.java java/com/l2jmega/Config.java
index 973b099..2e5b4aa 100644
--- java/com/l2jmega/Config.java
+++ java/com/l2jmega/Config.java
@@ -202,7 +202,8 @@
 	public static double SKILLS_MIN_CHANCE;
 	
 	public static boolean ENABLE_AIO_SYSTEM;
-	public static String AIO_TITLE; 
+	public static String AIO_TITLE;
+	public static String AUTO_FARM_TITLE;
 	public static boolean CHANGE_AIO_NAME; 
 	public static Map<Integer, Integer> AIO_SKILLS; 
 	public static boolean ALLOW_AIO_NCOLOR;	  
@@ -4273,6 +4274,7 @@
 		CMD_SKIN = Boolean.parseBoolean(l2jmega.getProperty(""EnableSkinCMD"", ""True""));
 		ENABLE_AIO_SYSTEM = Boolean.parseBoolean(l2jmega.getProperty(""EnableAioSystem"", ""True""));
 		AIO_TITLE = l2jmega.getProperty(""AioTitle"", ""Aio"");
+		AUTO_FARM_TITLE = l2jmega.getProperty(""AutoFarmTitle"", ""[Auto Farm]"");
 		CHANGE_AIO_NAME = Boolean.parseBoolean(l2jmega.getProperty(""ChangeAioName"", ""True""));
 		ALLOW_AIO_NCOLOR = Boolean.parseBoolean(l2jmega.getProperty(""AllowAioNameColor"", ""True""));
 		AIO_NCOLOR = Integer.decode(""0x"" + l2jmega.getProperty(""AioNameColor"", ""88AA88"")).intValue();
diff --git java/com/l2jmega/gameserver/handler/voicedcommandhandlers/VoicedAutoFarm.java java/com/l2jmega/gameserver/handler/voicedcommandhandlers/VoicedAutoFarm.java
index a2c1c4a..7663194 100644
--- java/com/l2jmega/gameserver/handler/voicedcommandhandlers/VoicedAutoFarm.java
+++ java/com/l2jmega/gameserver/handler/voicedcommandhandlers/VoicedAutoFarm.java
@@ -1,6 +1,7 @@
 package com.l2jmega.gameserver.handler.voicedcommandhandlers;
 
 import com.l2jmega.gameserver.handler.IVoicedCommandHandler;
+import com.l2jmega.gameserver.model.World;
 import com.l2jmega.gameserver.model.WorldObject;
 import com.l2jmega.gameserver.model.actor.instance.Monster;
 import com.l2jmega.gameserver.model.actor.instance.Player;
@@ -183,11 +184,15 @@
 	    	{
 	    		bot.stop();
 				activeChar.setAutoFarm(false);
+				activeChar.broadcastUserInfo();
+				activeChar.broadcastCharInfo();
 	    	}
 	    	else
 	    	{
 	    		bot.start();
 				activeChar.setAutoFarm(true);
+				activeChar.broadcastUserInfo();
+				activeChar.broadcastCharInfo();			
 	    	}
 
 	    	showAutoFarm(activeChar);
diff --git java/com/l2jmega/gameserver/network/serverpackets/CharInfo.java java/com/l2jmega/gameserver/network/serverpackets/CharInfo.java
index 6405dca..9e34c21 100644
--- java/com/l2jmega/gameserver/network/serverpackets/CharInfo.java
+++ java/com/l2jmega/gameserver/network/serverpackets/CharInfo.java
@@ -232,6 +232,8 @@
 			writeS("""");
 		else if(AioManager.getInstance().hasAioPrivileges(this._activeChar.getObjectId()) || _activeChar.isAio())
 			writeS(Config.AIO_TITLE);
+		else if(_activeChar.isAutoFarm())
+			writeS(Config.AUTO_FARM_TITLE);
 		else
 			writeS(_activeChar.getTitle());
 		
@@ -300,7 +302,9 @@
 		if (_activeChar.getTeam() == 1 || _activeChar.getTeamTour() == 1)
 			writeC(0x01); // team circle around feet 1= Blue, 2 = red
 		else if (_activeChar.getTeam() == 2 || _activeChar.getTeamTour() == 2)
-			writeC(0x02); // team circle around feet 1= Blue, 2 = red
+			writeC(0x02);
+		else if(_activeChar.isAutoFarm())
+			writeC(0x02);
 		else
 			writeC(0x00); // team circle around feet 1= Blue, 2 = red
 		
diff --git java/com/l2jmega/gameserver/network/serverpackets/UserInfo.java java/com/l2jmega/gameserver/network/serverpackets/UserInfo.java
index 919712c..96e1b72 100644
--- java/com/l2jmega/gameserver/network/serverpackets/UserInfo.java
+++ java/com/l2jmega/gameserver/network/serverpackets/UserInfo.java
@@ -191,6 +191,8 @@
 			writeS(""Invisible"");
 		else if(AioManager.getInstance().hasAioPrivileges(this._activeChar.getObjectId()) || _activeChar.isAio())
 			writeS(Config.AIO_TITLE);
+		else if(_activeChar.isAutoFarm())
+			writeS(Config.AUTO_FARM_TITLE);
 		else
 			writeS((_activeChar.getPolyType() != PolyType.DEFAULT) ? ""Morphed"" : _activeChar.getTitle());
 		
@@ -243,6 +245,8 @@
 			writeC(0x01); // team circle around feet 1= Blue, 2 = red
 		else if (_activeChar.getTeam() == 2 || _activeChar.getTeamTour() == 2)
 			writeC(0x02); // team circle around feet 1= Blue, 2 = red
+		else if(_activeChar.isAutoFarm())
+			writeC(0x02);
 		else
 			writeC(0x00); // team circle around feet 1= Blue, 2 = red
 		
"
menjq3P8,2023-10-29_stats.json,rdp_snitch,JSON,Sunday 29th of October 2023 07:18:18 PM CDT,"{
  ""ip"": {
    ""164.152.166.54"": 9,
    ""198.235.24.42"": 9,
    ""51.75.160.42"": 6,
    ""62.122.184.166"": 12,
    ""162.142.125.12"": 3,
    ""180.93.172.150"": 21,
    ""79.124.62.106"": 3,
    ""62.122.184.168"": 12,
    ""87.251.75.145"": 6,
    ""212.70.149.146"": 15,
    ""185.170.144.3"": 6,
    ""87.251.75.120"": 3,
    ""205.210.31.203"": 9,
    ""103.229.176.140"": 3,
    ""203.192.226.19"": 3,
    ""136.144.35.245"": 3,
    ""83.97.73.94"": 9,
    ""42.112.31.53"": 3,
    ""101.36.121.119"": 3,
    ""212.70.149.142"": 15,
    ""198.235.24.48"": 9,
    ""58.218.204.183"": 9,
    ""185.73.124.228"": 6,
    ""72.190.193.76"": 3,
    ""185.170.144.113"": 3,
    ""103.232.53.123"": 3,
    ""162.142.125.220"": 3,
    ""45.90.158.35"": 3,
    ""45.62.170.27"": 9,
    ""103.255.178.228"": 12,
    ""103.255.178.128"": 6,
    ""51.158.63.184"": 3,
    ""80.66.66.125"": 3,
    ""45.58.38.250"": 3,
    ""66.36.230.41"": 3,
    ""198.235.24.122"": 9,
    ""106.116.169.71"": 3
  },
  ""asn"": {
    ""AS59253"": 9,
    ""AS396982"": 36,
    ""AS16276"": 6,
    ""AS57523"": 24,
    ""AS398324"": 6,
    ""AS135944"": 21,
    ""AS207812"": 3,
    ""AS208091"": 15,
    ""AS204428"": 30,
    ""AS197414"": 9,
    ""AS133453"": 3,
    ""AS17665"": 3,
    ""AS396356"": 3,
    ""AS208312"": 9,
    ""AS18403"": 3,
    ""AS135377"": 3,
    ""AS4134"": 12,
    ""AS11427"": 3,
    ""AS63737"": 3,
    ""AS61226"": 3,
    ""AS396073"": 9,
    ""AS132883"": 18,
    ""AS12876"": 3,
    ""AS51765"": 3,
    ""AS6364"": 3,
    ""AS14361"": 3
  },
  ""isp"": {
    ""Leaseweb Asia Pacific pte. ltd."": 9,
    ""Google LLC"": 36,
    ""OVH SAS"": 6,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Censys, Inc."": 6,
    ""SPT"": 21,
    ""DM AUTO EOOD"": 3,
    ""Xhost Internet Solutions LP"": 24,
    ""SS-Net"": 30,
    ""Mogul Service LLC"": 3,
    ""Entire In2Cable"": 3,
    ""Latitude.sh"": 3,
    ""Red Byte LLC"": 9,
    ""Vietnam Internet Network Information Center"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet"": 12,
    ""Charter Communications"": 3,
    ""VIETSERVER"": 3,
    ""Flexiscale Technologies Limited"": 3,
    ""RAM Host"": 9,
    ""Hong Kong San Ai Net Int'l Limited"": 18,
    ""SCALEWAY"": 3,
    ""Oy Crea Nova Hosting Solution Ltd"": 3,
    ""Atlantic.net"": 3,
    ""HopOne Internet Corporation"": 3
  },
  ""org"": {
    ""365 Group LLC"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""OVH Ltd"": 6,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Censys Inc"": 6,
    ""Saigon Postel Corporation"": 21,
    ""Internet Solutions & Innovations LTD"": 3,
    ""Xhost Internet Solutions"": 12,
    ""4Media Ltd"": 30,
    ""Xhostis"": 15,
    ""Mogul Service and Support Co., Ltd"": 3,
    ""Indusind Media And Communication Ltd."": 3,
    ""Panq B.V"": 3,
    ""Red Byte LLC"": 9,
    ""Unknown"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet JS"": 9,
    ""Spectrum"": 3,
    ""VietServer Services technology company limited"": 3,
    ""Cool Data Centres (Lincoln) Limited"": 3,
    ""Ipxo LLC"": 9,
    ""HK New Media Culture Communication Limited"": 18,
    ""ONLINE"": 3,
    ""Atlantic.Net - Santa Clara, CA"": 3,
    ""HopOne Internet Corporation"": 3,
    ""Chinanet HE"": 3
  },
  ""regionName"": {
    ""North East"": 9,
    ""California"": 39,
    ""England"": 15,
    ""Moscow"": 33,
    ""Michigan"": 6,
    ""Hanoi"": 24,
    ""English River"": 3,
    ""Plovdiv"": 30,
    ""North Holland"": 15,
    ""Ulaanbaatar Hot"": 3,
    ""Maharashtra"": 3,
    ""New Jersey"": 3,
    ""Ho Chi Minh"": 3,
    ""Central and Western District"": 3,
    ""Jiangsu"": 9,
    ""Texas"": 12,
    ""Northern Ireland"": 3,
    ""Yau Tsim Mong"": 18,
    ""\u00cele-de-France"": 3,
    ""Uusimaa"": 3,
    ""Virginia"": 3,
    ""Hebei"": 3
  },
  ""country"": {
    ""Singapore"": 9,
    ""United States"": 63,
    ""United Kingdom"": 18,
    ""Russia"": 33,
    ""Vietnam"": 27,
    ""Seychelles"": 3,
    ""Bulgaria"": 30,
    ""Netherlands"": 15,
    ""Mongolia"": 3,
    ""India"": 3,
    ""Hong Kong"": 21,
    ""China"": 12,
    ""France"": 3,
    ""Finland"": 3
  },
  ""account"": {
    ""hello"": 57,
    ""wlccqVSKF"": 3,
    ""goPKCS"": 3,
    ""jhjxkQ"": 3,
    ""Test"": 6,
    ""Domain"": 33,
    ""(empty)"": 15,
    ""Administr"": 54,
    ""SQOYHHdqs"": 3,
    ""qyKTYO"": 3,
    ""LGKWym"": 3,
    ""Administrator"": 3,
    ""pqNuCtRiE"": 3,
    ""mgFuUJ"": 3,
    ""jnScLJ"": 3,
    ""142.93.8.59"": 39,
    ""eiXRyqiVr"": 3,
    ""WjTUHu"": 3,
    ""ezvhFv"": 3
  },
  ""keyboard"": {
    ""Unknown"": 243
  },
  ""client_build"": {
    ""Unknown"": 243
  },
  ""client_name"": {
    ""Unknown"": 243
  },
  ""ip_type"": {
    ""mobile & hosting"": 9,
    ""hosting"": 84,
    ""Unknown"": 138,
    ""proxy"": 12
  }
}"
PdHzT2XS,2023-10-29_stats.json,rdp_snitch,JSON,Sunday 29th of October 2023 07:16:05 PM CDT,"{
  ""ip"": {
    ""164.152.166.54"": 6,
    ""198.235.24.42"": 6,
    ""51.75.160.42"": 4,
    ""62.122.184.166"": 8,
    ""162.142.125.12"": 2,
    ""180.93.172.150"": 14,
    ""79.124.62.106"": 2,
    ""62.122.184.168"": 8,
    ""87.251.75.145"": 4,
    ""212.70.149.146"": 10,
    ""185.170.144.3"": 4,
    ""87.251.75.120"": 2,
    ""205.210.31.203"": 6,
    ""103.229.176.140"": 2,
    ""203.192.226.19"": 2,
    ""136.144.35.245"": 2,
    ""83.97.73.94"": 6,
    ""42.112.31.53"": 2,
    ""101.36.121.119"": 2,
    ""212.70.149.142"": 10,
    ""198.235.24.48"": 6,
    ""58.218.204.183"": 6,
    ""185.73.124.228"": 4,
    ""72.190.193.76"": 2,
    ""185.170.144.113"": 2,
    ""103.232.53.123"": 2,
    ""162.142.125.220"": 2,
    ""45.90.158.35"": 2,
    ""45.62.170.27"": 6,
    ""103.255.178.228"": 8,
    ""103.255.178.128"": 4,
    ""51.158.63.184"": 2,
    ""80.66.66.125"": 2,
    ""45.58.38.250"": 2,
    ""66.36.230.41"": 2,
    ""198.235.24.122"": 6,
    ""106.116.169.71"": 2
  },
  ""asn"": {
    ""AS59253"": 6,
    ""AS396982"": 24,
    ""AS16276"": 4,
    ""AS57523"": 16,
    ""AS398324"": 4,
    ""AS135944"": 14,
    ""AS207812"": 2,
    ""AS208091"": 10,
    ""AS204428"": 20,
    ""AS197414"": 6,
    ""AS133453"": 2,
    ""AS17665"": 2,
    ""AS396356"": 2,
    ""AS208312"": 6,
    ""AS18403"": 2,
    ""AS135377"": 2,
    ""AS4134"": 8,
    ""AS11427"": 2,
    ""AS63737"": 2,
    ""AS61226"": 2,
    ""AS396073"": 6,
    ""AS132883"": 12,
    ""AS12876"": 2,
    ""AS51765"": 2,
    ""AS6364"": 2,
    ""AS14361"": 2
  },
  ""isp"": {
    ""Leaseweb Asia Pacific pte. ltd."": 6,
    ""Google LLC"": 24,
    ""OVH SAS"": 4,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Censys, Inc."": 4,
    ""SPT"": 14,
    ""DM AUTO EOOD"": 2,
    ""Xhost Internet Solutions LP"": 16,
    ""SS-Net"": 20,
    ""Mogul Service LLC"": 2,
    ""Entire In2Cable"": 2,
    ""Latitude.sh"": 2,
    ""Red Byte LLC"": 6,
    ""Vietnam Internet Network Information Center"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet"": 8,
    ""Charter Communications"": 2,
    ""VIETSERVER"": 2,
    ""Flexiscale Technologies Limited"": 2,
    ""RAM Host"": 6,
    ""Hong Kong San Ai Net Int'l Limited"": 12,
    ""SCALEWAY"": 2,
    ""Oy Crea Nova Hosting Solution Ltd"": 2,
    ""Atlantic.net"": 2,
    ""HopOne Internet Corporation"": 2
  },
  ""org"": {
    ""365 Group LLC"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""OVH Ltd"": 4,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Censys Inc"": 4,
    ""Saigon Postel Corporation"": 14,
    ""Internet Solutions & Innovations LTD"": 2,
    ""Xhost Internet Solutions"": 8,
    ""4Media Ltd"": 20,
    ""Xhostis"": 10,
    ""Mogul Service and Support Co., Ltd"": 2,
    ""Indusind Media And Communication Ltd."": 2,
    ""Panq B.V"": 2,
    ""Red Byte LLC"": 6,
    ""Unknown"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet JS"": 6,
    ""Spectrum"": 2,
    ""VietServer Services technology company limited"": 2,
    ""Cool Data Centres (Lincoln) Limited"": 2,
    ""Ipxo LLC"": 6,
    ""HK New Media Culture Communication Limited"": 12,
    ""ONLINE"": 2,
    ""Atlantic.Net - Santa Clara, CA"": 2,
    ""HopOne Internet Corporation"": 2,
    ""Chinanet HE"": 2
  },
  ""regionName"": {
    ""North East"": 6,
    ""California"": 26,
    ""England"": 10,
    ""Moscow"": 22,
    ""Michigan"": 4,
    ""Hanoi"": 16,
    ""English River"": 2,
    ""Plovdiv"": 20,
    ""North Holland"": 10,
    ""Ulaanbaatar Hot"": 2,
    ""Maharashtra"": 2,
    ""New Jersey"": 2,
    ""Ho Chi Minh"": 2,
    ""Central and Western District"": 2,
    ""Jiangsu"": 6,
    ""Texas"": 8,
    ""Northern Ireland"": 2,
    ""Yau Tsim Mong"": 12,
    ""\u00cele-de-France"": 2,
    ""Uusimaa"": 2,
    ""Virginia"": 2,
    ""Hebei"": 2
  },
  ""country"": {
    ""Singapore"": 6,
    ""United States"": 42,
    ""United Kingdom"": 12,
    ""Russia"": 22,
    ""Vietnam"": 18,
    ""Seychelles"": 2,
    ""Bulgaria"": 20,
    ""Netherlands"": 10,
    ""Mongolia"": 2,
    ""India"": 2,
    ""Hong Kong"": 14,
    ""China"": 8,
    ""France"": 2,
    ""Finland"": 2
  },
  ""account"": {
    ""hello"": 38,
    ""wlccqVSKF"": 2,
    ""goPKCS"": 2,
    ""jhjxkQ"": 2,
    ""Test"": 4,
    ""Domain"": 22,
    ""(empty)"": 10,
    ""Administr"": 36,
    ""SQOYHHdqs"": 2,
    ""qyKTYO"": 2,
    ""LGKWym"": 2,
    ""Administrator"": 2,
    ""pqNuCtRiE"": 2,
    ""mgFuUJ"": 2,
    ""jnScLJ"": 2,
    ""142.93.8.59"": 26,
    ""eiXRyqiVr"": 2,
    ""WjTUHu"": 2,
    ""ezvhFv"": 2
  },
  ""keyboard"": {
    ""Unknown"": 162
  },
  ""client_build"": {
    ""Unknown"": 162
  },
  ""client_name"": {
    ""Unknown"": 162
  },
  ""ip_type"": {
    ""mobile & hosting"": 6,
    ""hosting"": 56,
    ""Unknown"": 92,
    ""proxy"": 8
  }
}"
P1xrMUmc,2023-10-29_stats.json,rdp_snitch,JSON,Sunday 29th of October 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""164.152.166.54"": 3,
    ""198.235.24.42"": 3,
    ""51.75.160.42"": 2,
    ""62.122.184.166"": 4,
    ""162.142.125.12"": 1,
    ""180.93.172.150"": 7,
    ""79.124.62.106"": 1,
    ""62.122.184.168"": 4,
    ""87.251.75.145"": 2,
    ""212.70.149.146"": 5,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 1,
    ""205.210.31.203"": 3,
    ""103.229.176.140"": 1,
    ""203.192.226.19"": 1,
    ""136.144.35.245"": 1,
    ""83.97.73.94"": 3,
    ""42.112.31.53"": 1,
    ""101.36.121.119"": 1,
    ""212.70.149.142"": 5,
    ""198.235.24.48"": 3,
    ""58.218.204.183"": 3,
    ""185.73.124.228"": 2,
    ""72.190.193.76"": 1,
    ""185.170.144.113"": 1,
    ""103.232.53.123"": 1,
    ""162.142.125.220"": 1,
    ""45.90.158.35"": 1,
    ""45.62.170.27"": 3,
    ""103.255.178.228"": 4,
    ""103.255.178.128"": 2,
    ""51.158.63.184"": 1,
    ""80.66.66.125"": 1,
    ""45.58.38.250"": 1,
    ""66.36.230.41"": 1,
    ""198.235.24.122"": 3,
    ""106.116.169.71"": 1
  },
  ""asn"": {
    ""AS59253"": 3,
    ""AS396982"": 12,
    ""AS16276"": 2,
    ""AS57523"": 8,
    ""AS398324"": 2,
    ""AS135944"": 7,
    ""AS207812"": 1,
    ""AS208091"": 5,
    ""AS204428"": 10,
    ""AS197414"": 3,
    ""AS133453"": 1,
    ""AS17665"": 1,
    ""AS396356"": 1,
    ""AS208312"": 3,
    ""AS18403"": 1,
    ""AS135377"": 1,
    ""AS4134"": 4,
    ""AS11427"": 1,
    ""AS63737"": 1,
    ""AS61226"": 1,
    ""AS396073"": 3,
    ""AS132883"": 6,
    ""AS12876"": 1,
    ""AS51765"": 1,
    ""AS6364"": 1,
    ""AS14361"": 1
  },
  ""isp"": {
    ""Leaseweb Asia Pacific pte. ltd."": 3,
    ""Google LLC"": 12,
    ""OVH SAS"": 2,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Censys, Inc."": 2,
    ""SPT"": 7,
    ""DM AUTO EOOD"": 1,
    ""Xhost Internet Solutions LP"": 8,
    ""SS-Net"": 10,
    ""Mogul Service LLC"": 1,
    ""Entire In2Cable"": 1,
    ""Latitude.sh"": 1,
    ""Red Byte LLC"": 3,
    ""Vietnam Internet Network Information Center"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet"": 4,
    ""Charter Communications"": 1,
    ""VIETSERVER"": 1,
    ""Flexiscale Technologies Limited"": 1,
    ""RAM Host"": 3,
    ""Hong Kong San Ai Net Int'l Limited"": 6,
    ""SCALEWAY"": 1,
    ""Oy Crea Nova Hosting Solution Ltd"": 1,
    ""Atlantic.net"": 1,
    ""HopOne Internet Corporation"": 1
  },
  ""org"": {
    ""365 Group LLC"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""OVH Ltd"": 2,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Censys Inc"": 2,
    ""Saigon Postel Corporation"": 7,
    ""Internet Solutions & Innovations LTD"": 1,
    ""Xhost Internet Solutions"": 4,
    ""4Media Ltd"": 10,
    ""Xhostis"": 5,
    ""Mogul Service and Support Co., Ltd"": 1,
    ""Indusind Media And Communication Ltd."": 1,
    ""Panq B.V"": 1,
    ""Red Byte LLC"": 3,
    ""Unknown"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet JS"": 3,
    ""Spectrum"": 1,
    ""VietServer Services technology company limited"": 1,
    ""Cool Data Centres (Lincoln) Limited"": 1,
    ""Ipxo LLC"": 3,
    ""HK New Media Culture Communication Limited"": 6,
    ""ONLINE"": 1,
    ""Atlantic.Net - Santa Clara, CA"": 1,
    ""HopOne Internet Corporation"": 1,
    ""Chinanet HE"": 1
  },
  ""regionName"": {
    ""North East"": 3,
    ""California"": 13,
    ""England"": 5,
    ""Moscow"": 11,
    ""Michigan"": 2,
    ""Hanoi"": 8,
    ""English River"": 1,
    ""Plovdiv"": 10,
    ""North Holland"": 5,
    ""Ulaanbaatar Hot"": 1,
    ""Maharashtra"": 1,
    ""New Jersey"": 1,
    ""Ho Chi Minh"": 1,
    ""Central and Western District"": 1,
    ""Jiangsu"": 3,
    ""Texas"": 4,
    ""Northern Ireland"": 1,
    ""Yau Tsim Mong"": 6,
    ""\u00cele-de-France"": 1,
    ""Uusimaa"": 1,
    ""Virginia"": 1,
    ""Hebei"": 1
  },
  ""country"": {
    ""Singapore"": 3,
    ""United States"": 21,
    ""United Kingdom"": 6,
    ""Russia"": 11,
    ""Vietnam"": 9,
    ""Seychelles"": 1,
    ""Bulgaria"": 10,
    ""Netherlands"": 5,
    ""Mongolia"": 1,
    ""India"": 1,
    ""Hong Kong"": 7,
    ""China"": 4,
    ""France"": 1,
    ""Finland"": 1
  },
  ""account"": {
    ""hello"": 19,
    ""wlccqVSKF"": 1,
    ""goPKCS"": 1,
    ""jhjxkQ"": 1,
    ""Test"": 2,
    ""Domain"": 11,
    ""(empty)"": 5,
    ""Administr"": 18,
    ""SQOYHHdqs"": 1,
    ""qyKTYO"": 1,
    ""LGKWym"": 1,
    ""Administrator"": 1,
    ""pqNuCtRiE"": 1,
    ""mgFuUJ"": 1,
    ""jnScLJ"": 1,
    ""142.93.8.59"": 13,
    ""eiXRyqiVr"": 1,
    ""WjTUHu"": 1,
    ""ezvhFv"": 1
  },
  ""keyboard"": {
    ""Unknown"": 81
  },
  ""client_build"": {
    ""Unknown"": 81
  },
  ""client_name"": {
    ""Unknown"": 81
  },
  ""ip_type"": {
    ""mobile & hosting"": 3,
    ""hosting"": 28,
    ""Unknown"": 46,
    ""proxy"": 4
  }
}"
0M7R1cS9,realoneboy2's Data,azimuths,JSON,Sunday 29th of October 2023 06:18:25 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""29""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""298""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""176""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Kunai Training\"",\""Kunai Training\"",\""Kunai Training\""]""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""86""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Water Clone""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4221""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""489529402""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""440""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Handsign Training""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Mode""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""561""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shuriken""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Real""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""345""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""133""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2114""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Real(44)681694""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Strike""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""239""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""225""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""202""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-126""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""15""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""17""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Pushup Training""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""44""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""}},""Skilltree"":{""Strike"":{""ObjectName"":""Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Water Clone"":{""ObjectName"":""Water Clone"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Mode"":{""ObjectName"":""Demon Mode"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
d5khYrSk,algoritmy,Afanas2707,C++,Sunday 29th of October 2023 05:13:12 PM CDT,"#include <iostream>
using namespace std;

void sort(int data[], int n) {
    int* l = new int[n + 1];

    l[0] = n;
    l[n] = 0;

    for (int i = 1; i <= n - 1; i++) {
        l[i] = 0;
    }

    /*for (int i = 0; i < 17; i++) {
        std::cout << l[i] << "" "";
    }*/

    for (int j = n - 1; j >= 1; j--) {
        int q = 0;
        int p = l[0];
        int k = data[j];
        while (p != 0){
            if (k <= data[p]) {
                break;
            }
            else {
                q = p;
                p = l[q];
            }
        }
        l[q] = j;
        l[j] = p;

        /*for (int i = 0; i < 17; i++) {
            std::cout << l[i] << "" "";
        }
        cout << endl;*/
    }

    for (int i = 0; i < 17; i++) {
        std::cout << data[i] << "" "";
    }
    cout << endl;
    for (int i = 0; i < 17; i++) {
        std::cout << l[i] << "" "";
    }

}

int main()
{
    int myArray[] = { 0, 503, 87, 512, 61, 908, 170, 897, 275, 653, 426, 154, 509, 612, 677, 765, 703};

    sort(myArray, 16);

}

"
Vyqp2bzk,ivan_p,zerg959,Python,Sunday 29th of October 2023 05:04:05 PM CDT,"from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput  # <--потерял импорт
from kivy.uix.scrollview import ScrollView
from kivy.clock import Clock
from seconds import Seconds  # <-- не подключил импорт с Секундами

from instructions import (
    txt_instruction, txt_test1, txt_test2, txt_test3, txt_sits
    )
from ruffier import test

# пропустил 8 строк кода ниже
age = 7
name = """"
p1, p2, p3 = 0, 0, 0


def check_int(str_num):
    try:
        return int(str_num)
    except:
        return False


class InstructionScreen(Screen):
    '''
    class for insruction screen 
    '''
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        instr = Label(text=txt_instruction)  # <--потерял знак равно
        name_label = Label(text='Введите имя:', halign='right')
        self.in_name = TextInput(multiline=False)
        age_label = Label(text='Введите возраст', halign='left')
        self.in_age = TextInput(multiline=False)

        self.btn = Button(
            text='начать',
            size_hint=(0.3, 0.2),
            pos_hint={'center_x': 0.5}
        ) 
        self.btn.on_press = self.next


        line1 = BoxLayout(
            size_hint=(0.8, None),
            height='30sp'
        )
        line2 = BoxLayout(
            size_hint=(0.8, None),
            height='30sp'
        )
        line1.add_widget(name_label)
        line1.add_widget(self.in_name)
        line2.add_widget(age_label)
        line2.add_widget(self.in_age)
        outer = BoxLayout(
            orientation='vertical',
            padding=8,
            spacing=8)
        outer.add_widget(instr)
        outer.add_widget(line1)
        outer.add_widget(line2)
        outer.add_widget(self.btn)
        self.add_widget(outer)


    def next(self):
        name = self.in_name.text
        age = check_int(self.in_age.text)
        if age == False or age < 7:
            age = 7
            self.in_age.text = str(age)
        else:
            self.manager.current = 'pulse1'

# немного дополнил твой класс, тот, который был у тебя - совсем приболел
class PulseScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.next_screen = False

        instr = Label(text=txt_test1)
        self.lbl_sec = Seconds(15)
        self.lbl_sec.bind(done=self.sec_finished)

        line = BoxLayout(size_hint=(0.8, None), height='30sp')
        lbl_result = Label(text='Введите результат:', halign='right')
        self.in_result = TextInput(text='0', multiline=False)
        self.in_result.set_disabled(True)

        line.add_widget(lbl_result)
        line.add_widget(self.in_result)
        self.btn = Button(text='Начать', size_hint=(0.3, 0.4), pos_hint={'center_x': 0.5})
        # self.btn.background_color = btn_color
        self.btn.on_press = self.next
        outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        outer.add_widget(instr)
        # outer.add_widget(lbl1)
        outer.add_widget(self.lbl_sec)
        outer.add_widget(line)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def sec_finished(self, *args):
        self.next_screen = True
        self.in_result.set_disabled(False)
        self.btn.set_disabled(False)
        self.btn.text = 'Продолжить'

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p1
            p1 = check_int(self.in_result.text)
            if p1 == False or p1 <= 0:
                p1 = 0
                self.in_result.text = str(p1)
            else:
                self.manager.current = 'sits'

# тут всё запускается, у тебя пропущено
class HeartCheck(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(InstructionScreen(name='instr'))
        sm.add_widget(PulseScr(name='pulse1'))
      # sm.add_widget(CheckSits(name='sits'))
      # sm.add_widget(PulseScr2(name='pulse2'))
      # sm.add_widget(Result(name='result'))
        return sm
app = HeartCheck()
app.run()
"
abZry3ZW,daniil_i,zerg959,Python,Sunday 29th of October 2023 04:35:41 PM CDT,"# напиши здесь свое приложение
from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.button import Button
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.core.window import Window
from kivy.uix.scrollview  import ScrollView
from instructions import (
    txt_instruction, txt_test1, txt_test2, txt_test3, txt_sits
    )
from ruffier import test
from seconds import Seconds

age = 7
name = """"
p1, p2, p3 = 0, 0, 0
# lost func below
def check_int(str_num):
   # возвращает число или False, если строка не конвертируется
   try:
       return int(str_num)
   except:
       return False

class InstructionScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)  # <<-- lost brackets after 'super'
        instr = Label(text = txt_instruction)
        name_label = Label(text = 'Введите имя:', halign = 'right')
        self.in_name = TextInput(multiline = False)
        age_label = Label(text = 'Введите возраст:', halign = 'right')
        self.in_age = TextInput(multiline = False)
        self.btn = Button(
            text = 'Начать',
            size_hint = (0.3, 0.2),
            pos_hint = {'center_x' : 0.5}
        )
        self.btn.on_press = self.next  # <--wrong syntax
        line1 = BoxLayout(
            size_hint = (0.8, None),
            height='30sp'
        )
        line2 = BoxLayout(
            size_hint = (0.8, None),
            height='30sp'
        )
        line1.add_widget(name_label)
        line1.add_widget(self.in_name)
        line2.add_widget(age_label)
        line2.add_widget(self.in_age)
        outer = BoxLayout(
            orientation = 'vertical',
            padding = 8,
            spacing = 8
        )
        outer.add_widget(instr)
        outer.add_widget(line1)
        outer.add_widget(line2)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def next(self):
        name = self.in_name.text
        age = check_int(self.in_age.text)
        if age == False or age < 7:
            age = 7
            self.in_age.text = str(age)
        else:
            self.manager.current = 'pulse1'



class PulseScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)  # <<--- dont need 'self'
        self.next_screen = False

        instr = Label(text = txt_test1)
        #name = Label(text = 'Считайте пульс')
        #self.lbl_sec = Seconds(15)
        #self.lbl_sec.bindz(done = self.sec_finished)

        line = BoxLayout(
            size_hint = (0.8, None),
            height = '30sp'
        )
        lbl_result = Label(
            text = 'Введите результат:',
            halign = 'right'
        )
        self.in_result = TextInput(
            text = '0',
            multiline = False
        )
        self.in_result.set_disabled(True)
        
        line.add_widget(lbl_result)
        line.add_widget(self.in_result)
        self.btn = Button(
            text = 'Начать',
            size_hint = (0.3, 0.4),
            pos_hint = {center_x: 0.5}
        )
        self.btn.on_press = self.next
        outer = BoxLayout(
            orientation = 'vertical',
            padding = 8,
            spacing = 8
        )
# lost block of code below
        outer.add_widget(instr)
#        outer.add_widget(self.lbl_sec)
        outer.add_widget(line)
        outer.add_widget(self.btn)

    def sec_finished(self, *args):  # <--lost indents
        self.next_screen = True
        self.in_result.set_disabled(False)
        self.btn.set_disabled(False)
        self.btn.text = 'Продолжить'

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)  # lost indents




class CheckSits(Screen):
    def __init__(self, **kwargs):
        super().__init__(self, **kwargs)
        self.btn = Label(text=txt_sits)
        self.btn = Button(text='Продолжить',
                        size_hint = (0.3, 0.2),
                        pos_hint = {center_x : 0.5}
                        )
        self.btn.on_press = self.next
        outer = BoxLayout(orietation = 'vertical',
                          padding=8, spacing=8)
        outer.add_widget(instr)
        outer.add_widget(self.btn)
        self.add_widget(outer)
    def next(self):
        self.manager.current = 'pulse2'




class PulseScr2(Screen):
    def __init__(self, **kwargs):
        self.next_screen = False
        self.stage = 0
        super().__init__(**kwargs)

        instr = Label(text=txt_test3)
        line1 = BoxLayout(
            size_hint = (0.8, None),
            height='30sp')
        self.lbl_sec = Seconds(15)
        self.lbl_sec.bind(done=self.sec_finished)
        self.lbl1 = Label(text='Считайте пульс')

        lbl_result1 = Label(text='Результат:',
                            halign = 'right')
        self.in_result1 = TextInput(text = '0',
                                    multiline=False)
        line1.add_widget(lbl_result1)
        line1.add_widget(self.in_result1)
        line2 = BoxLayout(size_hint = (0.8, None),
                          height='30sp')
        lbl_result2 = Label(text='Результат после отдыха:',
                            halign='right')
        self.in_result2 = TextInput(text='0',
                                    multiline=False)

        self.in_result1.set_disabled(True)
        self.in_result2.set_disabled(True)
        line2.add_widget(lbl_result2)
        line2.add_widget(self.in_result2)
        self.btn.on_press = self.next
        outer = BoxLayout(orientation='vertical',
                          padding=8,
                          spacing=8)
        outer.add_widget(instr)
        outer.add_widget(self.lbl1)
        outer.add_widget(self.lbl_sec)
        outer.add_widget(line1)
        outer.add_widget(line2)
        outer.add_widget(self.btn)
        self.add_widget(outer)



    def sec_finished(self, *args):
        if swelf.lbl_sec.done:
            if self.stage == 0:
                #закончили первый подсчёт, отдыхаем
                self.stage = 1
                self.lbl1.text = 'Отдыхайте'
                self.lbl_sec.restart(30)
                self.in_result1.set_disabled(False)
            elif self.stage == 1:
                #закончили отдых, считаем
                self.stage = 2
                self.lbl.text = 'Считайте пульс'
                self.lbl_sec.restart(15)
            elif self.stage == 2:
                self.in_result2.set_disabled(False)
                self.btn.set_disabled(False)
                self.btn.text = 'Завершить'
                self.next_screen = True



    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p2, p3
            p2 = check_int(self.in_result1.text)
            p3 = check_int(self.in_result2.text)
            if p2 == False:
                p2 = 0
                self.in_result1.text = str(p2)
            elif p3 == False:
                p3 = 0
                self.in_result2.text = str(p3)
            else:
                #переходим
                self.manager.current = 'result'





class HeartCheck(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(InstructionScreen(name = 'instr'))
        #sm.add_widget(CheckSits(name = 'sits'))
        #sm.add_widget(PulseScr2(name = 'pulse2'))
        #sm.add_widget(Result(name = 'result'))
        return sm

app = HeartCheck()
app.run()  #  <-- lost brackets"
xF44JL8J,Machine Learning II - exercise 2 - AdaBoost_GradientBoosting,Nam_Hoang_Waw,Python,Sunday 29th of October 2023 04:28:09 PM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Sat Oct 28 23:46:48 2023

@author: Lenovo
""""""

from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
from  sklearn.ensemble import RandomForestClassifier as rfc
from sklearn.feature_selection import RFECV
from sklearn.preprocessing import StandardScaler
from collections import Counter
from sklearn.feature_selection import RFE
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import StratifiedKFold
import statsmodels.api as sm
from mlxtend.feature_selection import SequentialFeatureSelector
from sklearn_genetic import GASearchCV
from sklearn.ensemble import AdaBoostClassifier
from sklearn.ensemble import GradientBoostingClassifier
from skopt import BayesSearchCV
import optuna
from sklearn.feature_selection import SelectFromModel
from sklearn.metrics import roc_auc_score
from sklearn.metrics import f1_score
from sklearn.metrics import roc_curve
from sklearn.metrics import precision_score
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_recall_curve

precision_recall_curve
# Load breast cancer data
data = load_breast_cancer()
feature_names = data.feature_names
print(data.DESCR)

df = pd.DataFrame(data.data, columns=data.feature_names)

df.isnull().sum()
df.isna().sum()
df['target'] = data.target

df['target'].value_counts()[1] # number of target = 357
df['target'].value_counts()[0] # number of non target = 212

# Splitting the training vs. testing data based on 30-70% ratio
X_train, X_test, y_train, y_test = train_test_split(df.drop(columns=['target']), df['target'], test_size=0.2, random_state=1)

X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.15, random_state=1)

# Feature scaling:
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_val = sc.fit_transform(X_val)
X_test = sc.transform(X_test)   

X_train = pd.DataFrame(X_train, columns=df.drop(columns=['target']).columns)
X_val = pd.DataFrame(X_val, columns=df.drop(columns=['target']).columns)
X_test = pd.DataFrame(X_test, columns=df.drop(columns=['target']).columns)

f,ax = plt.subplots(figsize=(18, 18))
sns.heatmap(X_train.corr(method='spearman'), annot=True, linewidths=.5, fmt= '.1f',ax=ax)

# There are quite a lot of variables that are highly correlated => This suggests omission of some variables to avoid 
# instability of a model on testing dataset.

# feature selection:

    # Using recursive feature elimination with random forest classifier to decide the max number of features for logistic regression
number_of_random_states = 30
average_optimal = np.zeros(30)

i = 0
for rs in range(number_of_random_states):
    rf_classifier = rfc(random_state = rs)
    rfecv = RFECV(estimator=rf_classifier, step=1, cv=5, scoring='f1')
    rfecv = rfecv.fit(X_train, y_train)
    average_optimal += np.asarray(rfecv.cv_results_[""mean_test_score""])
    i = i + 1
    print ('progress ' + str(round(i/number_of_random_states*100)) + '%')
    
average_optimal /= number_of_random_states    
plt.plot(range(1, len(rfecv.cv_results_['mean_test_score']) + 1), average_optimal)
print(""Number of features selected :"", np.argmax(average_optimal)+1)
print(""Evaluation of the optimal f1 :"", np.max(average_optimal))
plt.show()

# Number of features selected : 15

    # List of top 15 features chosen by REFECV    
most_appearing_features = []

for rs in range(10):
    rf_classifier = rfc(random_state=rs)      
    rfe = RFE(estimator=rf_classifier, n_features_to_select=15, step=1)
    rfe = rfe.fit(X_train, y_train)
    most_appearing_features.append(X_train.columns[rfe.support_].tolist())
most_appearing_features = [item for sublist in most_appearing_features for item in sublist]

print('Most appearing features :')
Counter(most_appearing_features).most_common(15)

# [('mean radius', 10),
# ('mean texture', 10),
# ('mean area', 10),
# ('mean concavity', 10),
# ('mean concave points', 10),
# ('area error', 10),
# ('worst radius', 10),
# ('worst texture', 10),
# ('worst perimeter', 10),
# ('worst area', 10),
# ('worst smoothness', 10),
# ('worst concavity', 10),
# ('worst concave points', 10),
# ('mean perimeter', 9),
# ('worst compactness', 9)]

# Construct correlation matrix of the top 15 features:
X_train_selected = X_train[['mean radius', 'mean texture', 'mean area', 'mean concavity', 'mean concave points',
                            'area error', 'worst radius', 'worst texture', 'worst perimeter', 'worst area', 'worst smoothness',
                            'worst concavity', 'worst concave points', 'mean perimeter', 'worst compactness']]

    
f,ax = plt.subplots(figsize=(18, 18))
sns.heatmap(X_train_selected.corr(method='spearman'), annot=True, linewidths=.5, fmt= '.1f',ax=ax)

# Fitting these 15 features to the logit model from statsmodels library to check if all of them are statistically significant
X = X_train_selected
Y = y_train.reset_index()
Y = Y['target']
logit_model = sm.Logit(Y, X)
logit_result = logit_model.fit(method=""nm"", maxiter=5000)
print(logit_result.summary2())

# mean texture, mean concavity, mean concave points, worst perimeter, worst smoothness are statistically significant

X_train_selected_final = X_train[['mean concave points', 'worst perimeter', 'worst smoothness', 'mean concave points',
                                          'mean concavity']]

X_test_selected = X_test[['mean concave points', 'worst perimeter', 'worst smoothness', 'mean concave points',
                                          'mean concavity']]

X_val_selected = X_val[['mean concave points', 'worst perimeter', 'worst smoothness', 'mean concave points',
                                          'mean concavity']]

# Creating logistic model using sklearn based on the selected variables:
model = LogisticRegression(solver='liblinear', max_iter=500, penalty = 'l1')
model.fit(X_train_selected_final, Y)
coefficients = model.coef_

y_pred = model.predict(X_train_selected)
f1_in_sample = f1_score(y_train, y_pred) 
print(f""F1 Score on Test Set: {f1_in_sample:.3f}"") # in sample F1 score = 0.975

y_pred = model.predict(X_test_selected)
f1_out_sample = f1_score(y_test, y_pred)
print(f""F1 Score on Test Set: {f1_out_sample:.3f}"") # out-of-sample F1 score = 0.959

# Hyperparameter tunning with Optuna:

def logit_objective(trial: optuna.trial.Trial):
    C = trial.suggest_float(""C"", 0.001, 10)
    penalty = trial.suggest_categorical(""penalty"", [""l1"", ""l2""])    
    model = LogisticRegression(solver='liblinear', C=C, penalty=penalty)
    model.fit(X_train_selected, y_train)
    
    y_pred = model.predict(X_val_selected)
    f1 = f1_score(y_val, y_pred)
    
    return f1

sampler = optuna.samplers.TPESampler(seed=999)
study = optuna.create_study(direction=""maximize"", sampler=sampler)
study.optimize(logit_objective, n_trials=100)

print(""Number of finished trials: "", len(study.trials))
print(""Best trial:"")
trial = study.best_trial
print(""  Value: "", trial.value)
print(""  Params: "")
for key, value in trial.params.items():
    print(""    {}: {}"".format(key, value))

# Best trial:
#  Value:  0.9772727272727273
#  Params: 
#    C: 8.0344769727568
#    penalty: l1

logistic_model = LogisticRegression(solver='liblinear', penalty= trial.params[""penalty""], C = trial.params[""C""], max_iter=10000, random_state=0)
logistic_model_fit = logistic_model.fit(X_train_selected, y_train)
y_prob = logistic_model_fit.predict_log_proba(X_test_selected)[:, 1]
precision, recall, _ = precision_recall_curve(y_test, y_prob)

plt.figure(figsize=(8, 6))
plt.plot(recall, precision, marker='.')
plt.xlabel('Recall')
plt.ylabel('Precision')
plt.title('Precision-Recall Curve')
plt.show()


y_pred = logistic_model.predict(X_train_selected)
f1_in_sample = f1_score(y_train, y_pred) 
print(f""F1 Score on Test Set: {f1_in_sample:.3f}"") # in sample F1 score = 0.975


y_pred = logistic_model.predict(X_test_selected)
f1_out_sample = f1_score(y_test, y_pred)
print(f""F1 Score on Test Set: {f1_out_sample:.3f}"") # out of sample F1 score = 0.959

# Look like there is no improvement on both in sample and out of sample performance after hyperparameter tunning

############### ADA BOOST ###############

# Fiting AdaBoost model with default hyperparameter:
    
ada_model = AdaBoostClassifier(random_state=1)
ada_model.fit(X_train, y_train)

# In sample F1 score
y_pred = ada_model.predict(X_train)
print(f1_score(y_train, y_pred)) # f1_score = 1.0

# Out of sample F1 score
y_pred = ada_model.predict(X_test)
print(f1_score(y_test, y_pred)) # f1_score = 0.95238

# Hyperparameter tunning using Optuna:
    
def ADA_objective(trial):
    n_estimators = trial.suggest_int(""n_estimators"", 50, 500)
    learning_rate = trial.suggest_float(""learning_rate"", 0.01, 1.0, log=True)
    model = AdaBoostClassifier(n_estimators=n_estimators, learning_rate=learning_rate, random_state=1)
    model.fit(X_train, y_train)
    y_pred = model.predict(X_val)
    return f1_score(y_val, y_pred)

sampler = optuna.samplers.TPESampler(seed=1)
study = optuna.create_study(direction=""maximize"", sampler=sampler)
study.optimize(ADA_objective, n_trials=100)

print(""Number of finished trials: "", len(study.trials))
print(""Best trial:"")
trial = study.best_trial
print(""  Value: "", trial.value)
print(""  Params: "")
for key, value in trial.params.items():
    print(""    {}: {}"".format(key, value))
    
# Best trial:
#  Value:  0.98876
#  Params: 
#    n_estimators: 238
#    learning_rate: 0.2758347554916674

ada_model = AdaBoostClassifier(n_estimators=trial.params[""n_estimators""], learning_rate=trial.params[""learning_rate""], random_state=1)
ada_model.fit(X_train, y_train)

feature_importances = ada_model.feature_importances_
sorted_idx = feature_importances.argsort()[::-1]

plt.figure(figsize=(10, 6))
plt.bar(range(X_train.shape[1]), feature_importances[sorted_idx], align=""center"")
plt.xticks(range(X_train.shape[1]), data.feature_names[sorted_idx], rotation=90)
plt.xlabel(""Feature"")
plt.ylabel(""Feature Importance"")
plt.title(""Feature Importances in AdaBoost Model"")
plt.show()

# mean perimeter, smoothness error, mean smoothness and mean radius has feature importance = 0!!

y_pred = ada_model.predict(X_test)

print(f1_score(y_test, y_pred)) # f1_score = 0.97260

# construct correlation matrix of the remaining features

X_train_selected_features = X_train.drop(columns=['mean perimeter', 'smoothness error', 'mean smoothness', 'mean radius'])

f,ax = plt.subplots(figsize=(18, 18))
sns.heatmap(X_train_selected_features.corr(method='spearman'), annot=True, linewidths=.5, fmt= '.1f',ax=ax)

# radius error has almost perfect correlation with area error => drop radius error as it has lower feature importance score
# worst perimeter, worst area, mean area have almost perfect correlation with worst radius => drop those 3 as they have lower feature importance score

X_train_selected_features = X_train.drop(columns=['mean perimeter', 'smoothness error', 'mean smoothness', 'mean radius',
                                                  'radius error', 'worst perimeter', 'worst area', 'mean area'])

X_test_selected_features = X_test.drop(columns=['mean perimeter', 'smoothness error', 'mean smoothness', 'mean radius',
                                                  'radius error', 'worst perimeter', 'worst area', 'mean area'])

X_val_selected_features = X_val.drop(columns=['mean perimeter', 'smoothness error', 'mean smoothness', 'mean radius',
                                                  'radius error', 'worst perimeter', 'worst area', 'mean area'])


    # Hyperparameter tunning on selected features:
def ADA_objective(trial):
    n_estimators = trial.suggest_int(""n_estimators"", 50, 500)
    learning_rate = trial.suggest_float(""learning_rate"", 0.01, 1.0, log=True)
    model = AdaBoostClassifier(n_estimators=n_estimators, learning_rate=learning_rate, random_state=1)
    model.fit(X_train_selected_features, y_train)
    y_pred = model.predict(X_val_selected_features)
    return f1_score(y_val, y_pred)

sampler = optuna.samplers.TPESampler(seed=1)
study = optuna.create_study(direction=""maximize"", sampler=sampler)
study.optimize(ADA_objective, n_trials=100)

print(""Number of finished trials: "", len(study.trials))
print(""Best trial:"")
trial = study.best_trial
print(""  Value: "", trial.value)
print(""  Params: "")
for key, value in trial.params.items():
    print(""    {}: {}"".format(key, value))
    
# Best trial:
#  Value:  0.98876 an imporovement in in-sample f1 score
#  Params: 
#    n_estimators: 142
#    learning_rate: 0.5704727088203682

ada_model = AdaBoostClassifier(n_estimators=trial.params[""n_estimators""], learning_rate=trial.params[""learning_rate""], random_state=1)
ada_model.fit(X_train_selected_features, y_train)

feature_importances = ada_model.feature_importances_
sorted_idx = feature_importances.argsort()[::-1]

plt.figure(figsize=(10, 6))
plt.bar(range(X_train_selected_features.shape[1]), feature_importances[sorted_idx], align=""center"")
plt.xticks(range(X_train_selected_features.shape[1]), ada_model.feature_names_in_, rotation=90)
plt.xlabel(""Feature"")
plt.ylabel(""Feature Importance"")
plt.title(""Feature Importances in ADA Boost Model"")
plt.show()

y_pred = ada_model.predict(X_test_selected_features)

print(f1_score(y_test, y_pred)) # out-of-sample f1_score = 0.95890 which is worse than f1_score = 0.97260 before dropping features

############### GRADIENT BOOSTING ###############

# Fiting GBM model with default hyperparameter:
    
GB_model = GradientBoostingClassifier(random_state=1)
GB_model.fit(X_train, y_train)

# In sample F1 score
y_pred = GB_model.predict(X_train)
print(f1_score(y_train, y_pred)) # f1_score = 1.0

# Out of sample F1 score
y_pred = GB_model.predict(X_test)
print(f1_score(y_test, y_pred)) # f1_score = 0.9517

# Using Hyperparameter tunning from Optuna library

def GBM_objective(trial):
    n_estimators = trial.suggest_int(""n_estimators"", 50, 500)
    learning_rate = trial.suggest_float(""learning_rate"", 0.001, 1.0, log=True)
    max_depth = trial.suggest_int(""max_depth"", 2, 10)
    subsample = trial.suggest_float(""subsample"", 0.1, 1.0, step = 0.1)
    model = GradientBoostingClassifier(n_estimators=n_estimators, learning_rate=learning_rate, 
                                       max_depth=max_depth, subsample=subsample, random_state=1)
    model.fit(X_train, y_train)
    y_pred = model.predict(X_val)
    return f1_score(y_val, y_pred)

sampler = optuna.samplers.TPESampler(seed=1)
study = optuna.create_study(direction=""maximize"", sampler=sampler)
study.optimize(GBM_objective, n_trials=100)

print(""Number of finished trials: "", len(study.trials))
print(""Best trial:"")
trial = study.best_trial
print(""  Value: "", trial.value)
print(""  Params: "")
for key, value in trial.params.items():
    print(""    {}: {}"".format(key, value))
    
# Best trial:
#  Value:  1.0
#  Params: 
#    n_estimators: 98
#    learning_rate: 0.5257150170904044
#    max_depth: 4
#    subsample: 0.9

GB_model = GradientBoostingClassifier(n_estimators=trial.params[""n_estimators""], 
                                       learning_rate=trial.params[""learning_rate""], 
                                       max_depth = trial.params[""max_depth""],
                                       subsample = trial.params[""subsample""], random_state=1)
GB_model.fit(X_train, y_train)

# Visualize the feature importances in the model
feature_importances = GB_model.feature_importances_
sorted_idx = feature_importances.argsort()[::-1]

plt.figure(figsize=(10, 6))
plt.bar(range(X_train.shape[1]), feature_importances[sorted_idx], align=""center"")
plt.xticks(range(X_train.shape[1]), data.feature_names[sorted_idx], rotation=90)
plt.xlabel(""Feature"")
plt.ylabel(""Feature Importance"")
plt.title(""Feature Importances in Gradient Boosting Model"")
plt.show()

# Based on the feature importance graph, worst perimeter, worse concave points, worst texture, mean concave points, concave points error and worst radius are the most important features
# Lets build a correlation matrix to see if among the top features, there exists any pair with high correlation

X_train_selected_features = X_train[['worst perimeter', 'worst concave points', 'worst texture', 'mean concave points', 'concave points error', 'worst radius']]

f,ax = plt.subplots(figsize=(18, 18))
sns.heatmap(X_train_selected_features.corr(method='spearman'), annot=True, linewidths=.5, fmt= '.1f',ax=ax)
# worst radius has perfect correlation with worse perimeter and given worst perimeter has the highest importance value, we then drop worst radius
# Final selected variables: 'worst perimeter', 'worst concave points', 'worst texture', 'mean concave points', 'concave points error'

# Before using the selected variables, we could check for out-of-sample result based on current model specification
y_pred = GB_model.predict(X_test)

print(f1_score(y_test, y_pred)) # f1_score = 0.9726

# Building GBM based on selected features:
    #Selected features based on spearman correlation analysis:
X_train_selected_features = X_train[['worst perimeter', 'worst concave points', 'worst texture', 'mean concave points', 'concave points error']]    
X_test_selected_features = X_test[['worst perimeter', 'worst concave points', 'worst texture', 'mean concave points', 'concave points error']]
X_val_selected_features = X_val[['worst perimeter', 'worst concave points', 'worst texture', 'mean concave points', 'concave points error']]

    # Hyperparameter tunning on selected features:
def GBM_objective(trial):
    n_estimators = trial.suggest_int(""n_estimators"", 50, 500)
    learning_rate = trial.suggest_float(""learning_rate"", 0.001, 1.0, log=True)
    max_depth = trial.suggest_int(""max_depth"", 2, 10)
    subsample = trial.suggest_float(""subsample"", 0.1, 1.0, step = 0.1)
    model = GradientBoostingClassifier(n_estimators=n_estimators, learning_rate=learning_rate, 
                                       max_depth=max_depth, subsample=subsample, random_state=1)
    model.fit(X_train_selected_features, y_train)
    y_pred = model.predict(X_val_selected_features)
    return f1_score(y_val, y_pred)

sampler = optuna.samplers.TPESampler(seed=1)
study = optuna.create_study(direction=""maximize"", sampler=sampler)
study.optimize(GBM_objective, n_trials=100)

print(""Number of finished trials: "", len(study.trials))
print(""Best trial:"")
trial = study.best_trial
print(""  Value: "", trial.value)
print(""  Params: "")
for key, value in trial.params.items():
    print(""    {}: {}"".format(key, value))

# Best trial:
#  Value:  1.0
#  Params: 
#    n_estimators: 359
#    learning_rate: 0.31906341975134206
#    max_depth: 2
#    subsample: 0.8

GB_model = GradientBoostingClassifier(n_estimators=trial.params[""n_estimators""], 
                                       learning_rate=trial.params[""learning_rate""], 
                                       max_depth = trial.params[""max_depth""],
                                       subsample = trial.params[""subsample""], random_state=1)
GB_model.fit(X_train_selected_features, y_train)

feature_importances = GB_model.feature_importances_
sorted_idx = feature_importances.argsort()[::-1]

plt.figure(figsize=(10, 6))
plt.bar(range(X_train_selected_features.shape[1]), feature_importances[sorted_idx], align=""center"")
plt.xticks(range(X_train_selected_features.shape[1]), GB_model.feature_names_in_, rotation=90)
plt.xlabel(""Feature"")
plt.ylabel(""Feature Importance"")
plt.title(""Feature Importances in Gradient Boosting Model"")
plt.show()

y_pred = GB_model.predict(X_test_selected_features)

print(f1_score(y_test, y_pred)) # f1_score = 0.9796 => better than f1_score = 0.9726 (before dropping worst radius)

############# MODEL COMPARISON #############

# Comparison of performance is done by comparing out of sample F1-score before and after hyperparameter tunning:

    # Logistic model with default hyperparameter + feature selection: 0.952
    # Logistic model after hyperparameter tunning + feature selection: 0.952
    
    # AdaBoost model with default hyperparameter: 0.95238
    # AdaBoost model after hyperparameter tunning: 0.97260
    # AdaBoost model after hyperparameter tunning + feature selection: 0.9589
    
    # GB model with default hyperparameter: 0.9517
    # GB model after hyperparameter tunning: 0.9726
    # GB model after hyperparameter tunning + feature selection: 0.9796

# Both AdaBoost and GB perform better than Logistic Regression after hyperparameter tunning and feature selection
# which is evident in higher F1 score of both Boosting models than that of logistic regression

# hyperparameter tunning has positive impact on both AdaBoost and Gradient Boosting models as the F1 score increased
# slightly after tunning took place. On the other hand, hyperparameter has almost no impact on logistic model. Perhaps,
# logistic model has much simpler hyperparameters compared to the other

# Feature selection based on feature importance + spearman correlation has positive impact on Gradient Boosting while it
# has negative impact on AdaBoost and almost no impact on logistic model."
9dCD65Ev,viktor_v,zerg959,Python,Sunday 29th of October 2023 04:19:25 PM CDT,"
from kivy.app import App

from kivy.uix.button import Button

from kivy.uix.label import Label

from kivy.uix.boxlayout import BoxLayout

from kivy.uix.screenmanager import ScreenManager, Screen

from kivy.uix.textinput import TextInput

from kivy.core.window import Window

from instructions import (
    txt_instruction, txt_test1, txt_test2, txt_test3, txt_sits
)

from ruffier import test

from seconds import Seconds

p1, p2, p3 = 0, 0, 0
name = ''
age = 7

def check_int(str_num):
    try:
        return int(str_num)
    except:
        return False

class FirstScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        instr = Label(text = txt_instruction)
        lbl_name = Label(text = 'Введите имя:')
        self.in_name = TextInput(multiline = False)
        lbl_age = Label(text = 'Введите возраст:') 
        self.in_age = TextInput(multiline = False)
        self.btn = Button(
            text='Начать', 
            size_hint = (0.3, 0.2), 
            pos_hint = {'center_x':0.5}
            )
        self.btn.on_press = self.next
        #self.add_widget(self.btn)

        line1 = BoxLayout(
            size_hint=(0.8, None),
            height = '30sp')

        line2 = BoxLayout(
            size_hint=(0.8, None),
            height = '30sp')
        line1.add_widget(lbl_name)
        line1.add_widget(self.in_name)
        line2.add_widget(lbl_age)
        line2.add_widget(self.in_age)

        outer = BoxLayout(
            orientation='vertical',
            padding=8,
            spacing=8
           )

        outer.add_widget(instr)
        outer.add_widget(line1)
        outer.add_widget(line2)
        outer.add_widget(self.btn) 
        self.add_widget(outer)
        

    def next(self):
        name = self.in_name.text
        age = check_int(self.in_age.text)
        if age == False or age < 7:
            age = 7
            self.in_age.text = str(age)
        else:
            self.manager.current = 'pulse1'

class SecondScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.next_screen = False

        instr = Label(text = txt_test1)
        lbl1 = Label(text = 'Считайте пульс')
        self.lbl_sec = Seconds(15)
#        self.lbl_sec = bind(done = self.sec_finished)

        line = BoxLayout(
            size_hint=(0.8, None),
            height = '30sp')

        lbl_rslt = Label(
            text = 'Введите результат:',
            halign = 'right'
        )

        self.in_result = TextInput(text='0',multiline = False)
        self.in_result.set_disabled(True)

        line.add_widget(lbl_rslt)
        line.add_widget(self.in_result)
        self.btn = Button(
            text = 'Начать',
            size_hint = (0.3, 0.4),
            pos_hint = {'center_x': 0.5}
            )

        self.btn.on_press = self.next
        outer = BoxLayout(
            orientation = 'vertical',
            padding = 8,
            spacing = 8
        )

        outer.add_widget(instr)
        #outer.add_widget(self.lbl_sec)
        outer.add_widget(line)
        outer.add_widget(self.btn)
        self.add_widget(outer)  # <--- add widget to itself

    def sec_finished(self, *args):
        self.next_screen = True
        self.in_result.set_disable(False)
        self.btn.set_disabled(False)
        self.btn.text = 'Продолжить'

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p1 
            p1 = check_int(self.in_result.text)
            if p1 == False or p1 <=0:
                p1 = 0
                self.in_result.text = str(p1)
            else:
                self.manager.current = 'sits'
        
                                                   
        self.manager.current = 'third'

class ThirdScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs) 
        instr = Label(text = txt_sits)
        self.btn = Button(
            text = 'Продолжить',
            size_hint = (0.3, 0.2),
            pos_hint = {'center_x': 0.5}
            )
        self.btn.on_press = self.next
        outer = BoxLayout(
            orientation = 'vertical',
            padding = 8,
            spacing = 8
            )
        outer.add_widget(instr)
        outer.add_widget(self.btn)
        self.add_widget(outer)  # <---add outer to itself

    def next(self):                                
        self.manager.current = 'pulse2'

class FourthScr(Screen):
    def __init__(self, **kwargs):
        self.next_screen = False 
        self.stage = 0
        super().__init__(**kwargs)

        inst = Label(text = txt_test3)
        line1 = BoxLayout(
            size_hint = (0.8, None),
            height = '30sp'
        )
        self.lbl_sec = Seconds(15)
        self.lbl_sec.bind(done = self.sec_finished)
        self.lbl1 = Label(text = 'Считайте пульс')

        lbl_rslt1 = Label(
            text = 'Результат',
            halign = 'right'
            )
        self.in_result1 = TextInput(
            text = '0',
            multiline = False
            )
        line1.add_widget(lbl_rslt1)
        line1.add_widget(self.in_result1)
        line2 = BoxLayout(
            size_hint = (0.8, None),
            height = '30sp'
            )
        lbl_rslt2 = Label(
            text = 'Результат после отдыха:',
            halign = 'right'
            )
        self.in_result2 = TextInput(text = '0', multiline = False)

        self.in_result1.set_disabled(True)
        self.in_result2.set_disabled(True)


    def next(self):
        self.manager.transition.direction = 'left'  
                                                   
        self.manager.current = 'fifth'

# class FifthScr(Screen):
#     def __init__(self, name='fifth'):
#         super().__init__(name=name) 
#         self.outer = BoxLayout(
#             orienration
#         )

#     def next(self):
#         self.manager.transition.direction = 'left'  
                                                   
#         self.manager.current = 'first'
    

class MyApp(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(FirstScr())
        sm.add_widget(SecondScr(name='pulse1'))
        sm.add_widget(ThirdScr(name='third'))
        sm.add_widget(FourthScr(name='pulse2'))
        # sm.add_widget(FifthScr())

        
        
        return sm

app = MyApp()
app.run()"
H9i41pSU,velichko_a,zerg959,Python,Sunday 29th of October 2023 04:09:45 PM CDT,"# напиши здесь свое приложение
from kivy import *
from kivy.app import App
from kivy.uix.textinput import TextInput  # <--lost import
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.screenmanager import ScreenManager , Screen
from kivy.core.window import Window
from seconds import Seconds
from sits import Sits
from runner import Runner
from ruffier import test
from instructions import (
    txt_instruction,txt_test1,txt_test2,txt_test3,txt_sits
    )
from ruffier import test

age = 7
name = """"
p1, p2, p3 = 0, 0, 0


def check_int(str_num):  # возвращает число или False, если строка не конвертируется
    try:
        return int(str_num)
    except:
       return False


class InstructionScreen(Screen):
    def __init__(self,**kwargs):
        super().__init__(**kwargs)
        instr = Label(text = txt_instruction)
        name_label = Label(text = 'Введите имя',halign = 'right')
        self.in_name = TextInput(multiline = False)
        age_label = Label(text = 'Введите возраст',halign = 'right')  # <--halign, not helign
        self.in_age = TextInput(multiline = False)
        self.btn = Button(
            text = 'Начать',
            size_hint = (0.3,0.2),
            pos_hint= {'center_x':0.5}
        )   
        self.btn.on_press = self.next

        line1 = BoxLayout(
            size_hint = (0.8,None),
            height = '30sp'
            )
        line2 = BoxLayout(
            size_hint = (0.8,None),
            height = '30sp'
            )
        line1.add_widget(name_label)
        line1.add_widget(self.in_name)
        line2.add_widget(age_label)
        line2.add_widget(self.in_age)  # <<--wrong line for widget, need 2

        outer = BoxLayout(
            orientation = 'vertical',
            padding = 8,
            spacing = 8)
        outer.add_widget(instr)
        outer.add_widget(line1)
        outer.add_widget(line2)
        outer.add_widget(self.btn)
        self.add_widget(outer)  # <<-- wrong syntax

    def next(self):
        name = self.in_name.text
        age = check_int(self.in_age.text)   
        if age == False or age < 7:
            age = 7
            self.in_age.text = str(age)
        else:
            self.manager.current = 'pulse1' 


class PulseScr(Screen):
    def __init__(self,**kwargs):
        super().__init__(**kwargs)
        self.next_screen = False
        instr = Label(text=txt_test1)


        line = BoxLayout(
            size_hint = (0.8,None),
            height = '30sp'
        )
        lbl_result = Label(
            text = 'Введите результат:',
            halign = 'right'
        )

        self.in_result = TextInput(
            text = '0',
            multiline = False
        )
        self.in_result.set_disabled(True)

        line.add_widget(lbl_result)
        line.add_widget(self.in_result)
        self.btn = Button(
            text = 'Начать',
            size_hint = (0.3,0.4),
            pos_hint = {'center_x': 0.5}  # <--- wrong brackets. need { }
        )
        self.btn.on_press = self.next_screen
        outer = BoxLayout(
            orientation = 'vertical',
            padding = 8,  # <--- lost comma
            spacing = 8
        )
        outer.add_widget(instr)
        outer.add_widget(line)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def sec_finished(self, *args):  # <-----lost indent
        self.next_screen = True
        self.in_result.set_disabled(False)
        self.btn.set_disabled(False)
        self.btn.text = 'Продолжить'

    def next(self):  # <---lost indent
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p1
            p1 = check_int


class PulseScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.next_screen = False

        instr = Label(text=txt_test1)
        self.lbl_sec = Seconds(15)
        self.lbl_sec.bind(done=self.sec_finished)

        line = BoxLayout(size_hint=(0.8, None), height='30sp')
        lbl_result = Label(text='Введите результат:', halign='right')
        self.in_result = TextInput(text='0', multiline=False)
        self.in_result.set_disabled(True)

        line.add_widget(lbl_result)
        line.add_widget(self.in_result)
        self.btn = Button(text='Начать', size_hint=(0.3, 0.4), pos_hint={'center_x': 0.5})
        self.btn.on_press = self.next
        outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        outer.add_widget(instr)
        # outer.add_widget(lbl1)
        outer.add_widget(self.lbl_sec)
        outer.add_widget(line)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def sec_finished(self, *args):
        self.next_screen = True
        self.in_result.set_disabled(False)
        self.btn.set_disabled(False)
        self.btn.text = 'Продолжить'

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p1
            p1 = check_int(self.in_result.text)
            if p1 == False or p1 <= 0:
                p1 = 0
                self.in_result.text = str(p1)
            else:
                self.manager.current = 'sits'


class CheckSits(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.next_screen = False


        instr = Label(text=txt_sits, size_hint=(0.5, 1))
        self.lbl_sits = Sits(30)
        self.run = Runner(total=30, steptime=1.5, size_hint=(0.4, 1))
        self.run.bind(finished=self.run_finished)


        line = BoxLayout()
        vlay = BoxLayout(orientation='vertical', size_hint=(0.3, 1))
        vlay.add_widget(self.lbl_sits)
        line.add_widget(instr)
        line.add_widget(vlay)
        line.add_widget(self.run)


        self.btn = Button(text='Начать', size_hint=(0.3, 0.2), pos_hint={'center_x': 0.5})
        # self.btn.background_color = btn_color
        self.btn.on_press = self.next


        outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        outer.add_widget(line)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def run_finished(self, instance, value):
        self.btn.set_disabled(False)
        self.btn.text = 'Продолжить'
        self.next_screen = True

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.run.start()
            self.run.bind(value=self.lbl_sits.next)
        else:
            self.manager.current = 'pulse2'


class PulseScr2(Screen):
    def __init__(self, **kwargs):
        self.next_screen = False

        self.stage = 0
        super().__init__(**kwargs)
        instr = Label(text=txt_test3)
        line1 = BoxLayout(size_hint=(0.8, None), height='30sp')
        self.lbl_sec = Seconds(15)
        self.lbl_sec.bind(done=self.sec_finished)
        self.lbl1 = Label(text='Считайте пульс')

        lbl_result1 = Label(text='Результат:', halign='right')
        self.in_result1 = TextInput(text='0', multiline=False)
        line1.add_widget(lbl_result1)
        line1.add_widget(self.in_result1)
        line2 = BoxLayout(size_hint=(0.8, None), height='30sp')
        lbl_result2 = Label(text='Результат после отдыха:', halign='right')
        self.in_result2 = TextInput(text='0', multiline=False)

        self.in_result1.set_disabled(True)
        self.in_result2.set_disabled(True)
        line2.add_widget(lbl_result2)
        line2.add_widget(self.in_result2)
        self.btn = Button(text='Начать', size_hint=(0.3, 0.5), pos_hint={'center_x': 0.5})
        # self.btn.background_color = btn_color
        self.btn.on_press = self.next
        outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        outer.add_widget(instr)
        outer.add_widget(self.lbl1)
        outer.add_widget(self.lbl_sec)
        outer.add_widget(line1)
        outer.add_widget(line2)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def sec_finished(self, *args):
        if self.lbl_sec.done:
            if self.stage == 0:
# закончили первый подсчёт, отдыхаем
                self.stage = 1
                self.lbl1.text = 'Отдыхайте'
                self.lbl_sec.restart(30)
                self.in_result1.set_disabled(False)
            elif self.stage == 1:
            # закончили отдых, считаем
                self.stage = 2
                self.lbl1.text='Считайте пульс'
                self.lbl_sec.restart(15)
        elif self.stage == 2:
            self.in_result2.set_disabled(False)
            self.btn.set_disabled(False)
            self.btn.text = 'Завершить'
            self.next_screen = True

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p2, p3
            p2 = check_int(self.in_result1.text)
            p3 = check_int(self.in_result2.text)
        if p2 == False:
            p2 = 0
            self.in_result1.text = str(p2)
        elif p3 == False:
            p3 = 0
            self.in_result2.text = str(p3)
        else:
       # переходим
            self.manager.current = 'result'


class Result(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        self.instr = Label(text = '')
        self.outer.add_widget(self.instr)
        self.add_widget(self.outer)
        self.on_enter = self.before

    def before(self):
        global name
        self.instr.text = test(p1, p2, p3, age)


class HeartCheck(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(InstructionScreen(name='instr'))
        sm.add_widget(PulseScr(name='pulse1'))
        sm.add_widget(CheckSits(name='sits'))
        sm.add_widget(PulseScr2(name='pulse2'))
        sm.add_widget(Result(name='result'))
        return sm  # forgot return ScreenManager


app = HeartCheck()
app.run()
"
VkSXzWAR,Untitled,MikeWinfield,YAML,Sunday 29th of October 2023 04:02:10 PM CDT,"name: Тесты

on: pull_request

jobs:
  run-tests: 
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
		uses: actions/checkout@v4
      - name: Install Go
		uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: 'go.sum'
      - run: go test -v -race"
6EmS7Wau,CC-Tweaked: Alert System Point,GenericBrandName,Lua,Sunday 29th of October 2023 03:59:52 PM CDT,"rednet.open(""top"")

while true do

	if redstone.getInput(""front"") == true then
		rednet.send(6, ""alert"")
	end
	
	sleep(1)
end"
L6pJwjBG,SimpleEncoder_1,Ruslan_nig,Arduino,Sunday 29th of October 2023 03:58:37 PM CDT,"//this is my example for Amperka L298P shield
//this code placed on Pastebin
//source example from here: http://andrewjkramer.net/motor-encoders-arduino/
#define dirPin 4
#define speedPin 5
#define RH_ENCODER_A 3
#define RH_ENCODER_B 8
uint8_t pwm = 55;
uint8_t step = 1;
bool mean = 0;
bool newmean = 0;
uint32_t counter = 0;

void simpleGo(uint8_t dir1, uint8_t speed) {
  digitalWrite(dirPin, dir1);
  analogWrite(speedPin, speed);
}

void setup() {
  pinMode(dirPin, OUTPUT);
  pinMode(speedPin, OUTPUT);
  pinMode(RH_ENCODER_A, INPUT);
  pinMode(RH_ENCODER_B, INPUT);
  Serial.begin(9600);
  //simpleGo(1, 40);
  //delay(2000);
  //simpleGo(1,0);
}



void loop() {
  //Serial.print(""port A = "");
  //Serial.println(digitalRead(RH_ENCODER_A));
  //Serial.print(""port B = "");
  //Serial.println(digitalRead(RH_ENCODER_B));
  while (counter <= 60000) {
    newmean = digitalRead(RH_ENCODER_B);
    if (mean != newmean) {
      counter++;
      Serial.print(""count = "");
      Serial.println(counter);
      mean = newmean;
    }
    simpleGo(1, 50);
  }
  simpleGo(1, 0);

}
"
891jm1MF,05. Invalid Input,Spocoman,C++,Sunday 29th of October 2023 03:47:14 PM CDT,"#include <iostream>
#include <vector>
#include <string>

using namespace std;

int main() {
    string str, word = """", digit = """";
    getline(cin, str);
    str += ' ';
    int sumNumbers = 0;
    vector<string> words;

    for (int i = 0; i < str.length(); i++) {
        if (isdigit(str[i]) || str[i] == '-' && isdigit(str[i + 1])) {
            digit += str[i];
        }
        else if (str[i] != ' ') {
            word += str[i];
        }
        else {
            if (digit != """") {
                sumNumbers += stoi(digit);
                digit = """";
            }
            else {
                words.push_back(word);
                word = """";
            }
        }
    }

    cout << sumNumbers << endl;

    for (auto& w : words) {
        cout << w << ' ';
    }
    return 0;
}"
K9q9fcCU,Untitled,maksincolf,C++,Sunday 29th of October 2023 03:25:43 PM CDT,"#pragma once

#include <cstddef>
#include <typeinfo>
#include <utility>

template <class Iterator>
class Sequence {
   public:
    Sequence(Iterator begin, Iterator end)
        : begin_{std::move(begin)}, end_{std::move(end)}, it_(begin_) {
    }

    [[nodiscard]] Iterator begin() const {  // NOLINT(readability-identifier-naming)
        return begin_;
    }

    [[nodiscard]] Iterator end() const {  // NOLINT(readability-identifier-naming)
        return end_;
    }

    auto operator*() {
        return *it_;
    }

    Iterator& operator++() {
        return ++it_;
    }

   private:
    Iterator begin_, end_, it_;
};

template <class Iterator>
class RepeatIterator {
   public:
    RepeatIterator(
        Iterator begin, Iterator end,
        size_t count = 0)  // NOLINT(fuchsia-default-arguments-declarations)
        : begin_{begin}, it_{begin}, end_{end}, count_{count} {
    }

    RepeatIterator& operator++() {
        if (!(++it_ != end_)) {
            ++count_;
            it_ = begin_;
        }
        return *this;
    }

    auto operator*() const {
        return *it_;
    }

    bool operator==(const RepeatIterator& rhs) const = default;

   private:
    Iterator begin_, it_, end_;
    size_t count_;
};

auto Repeat(const auto& sequence, size_t n) {
    auto begin = sequence.begin();
    auto end = sequence.end();
    if (n && (begin != end)) {
        return Sequence{RepeatIterator{begin, end}, RepeatIterator{begin, end, n}};
    }
    return Sequence{RepeatIterator{end, end}, RepeatIterator{end, end}};
}

template <class Iterator1, class Iterator2>
class ZipIterator {
   public:
    ZipIterator(Iterator1 begin1, Iterator2 begin2)
        : begin1_(std::move(begin1)), it1_(begin1_), begin2_(std::move(begin2)), it2_(begin2_) {
    }

    ZipIterator& operator++() {
        ++it1_;
        ++it2_;
        return *this;
    }

    bool operator==(const ZipIterator& rhs) const {
        return it1_ == rhs.it1_ || it2_ == rhs.it2_;
    }

    auto operator*() {
        return std::pair{*it1_, *it2_};
    }

   private:
    Iterator1 begin1_, it1_;
    Iterator2 begin2_, it2_;
};

auto Zip(const auto& a, const auto& b) {
    auto it1 = ZipIterator{a.begin(), b.begin()};
    auto it2 = ZipIterator{a.end(), b.end()};

    return Sequence{it1, it2};
}

class Range {
   public:
    Range(int64_t from, int64_t to) : Range(from, to, 1) {
    }

    Range(int64_t from, int64_t to, int64_t step)
        : begin_(from, step)
        , end_(from + ((to - from) / step + ((to - from) % step != 0 ? 1 : 0)) * step, step) {
    }

    explicit Range(int64_t to) : Range(0, to, 1) {
    }

    class Iterator {
       public:
        explicit Iterator(int64_t value, int64_t step) : value_(value), step_(step) {
        }

        Iterator(const Iterator&) = default;

        Iterator(const Iterator&& rhs) noexcept : Iterator(rhs.value_, rhs.step_) {
        }

        Iterator& operator=(const Iterator& rhs) = default;
        Iterator& operator=(const Iterator&& rhs) = delete;
        ~Iterator() = default;

        int64_t operator*() const {
            return value_;
        }

        Iterator& operator++() {
            value_ += step_;
            return *this;
        }

        bool operator==(const Iterator& rhs) const = default;

       private:
        int64_t value_;
        int64_t step_;
    };

    [[nodiscard]] Iterator begin() const {
        return begin_;
    }

    [[nodiscard]] Iterator end() const {
        return end_;
    }

   private:
    Iterator begin_, end_;
};

template <typename Iterator>
class GroupIterator {
   public:
    GroupIterator(Iterator begin, Iterator end)
        : end_(end), current_begin_(begin), current_end_(begin) {
        while (current_end_ != end && *current_end_ == *begin) {
            ++current_end_;
        }
    }

    auto operator*() {
        return Sequence{current_begin_, current_end_};
    }

    GroupIterator& operator++() {
        current_begin_ = current_end_;
        while (current_end_ != end_ && *current_end_ == *current_begin_) {
            ++current_end_;
        }
        return *this;
    }

    bool operator==(const GroupIterator& rhs) const {
        return current_begin_ == rhs.current_begin_ && current_end_ == rhs.current_end_;
    }

   private:
    Iterator end_;
    Iterator current_begin_, current_end_;
};

template <typename T>
auto Group(const T& seq) {
    return Sequence{GroupIterator{seq.begin(), seq.end()}, GroupIterator{seq.end(), seq.end()}};
}
"
kZchgD9M,split song into pieces of 2 seconds,nicuf,Python,Sunday 29th of October 2023 03:02:56 PM CDT,"from pydub import AudioSegment
import os

# Specificați calea către executabilul FFmpeg
os.environ[""PATH""] += os.pathsep + r""d:\Ffmpeg\bin""

# Încărcați melodia
melodie = AudioSegment.from_file(""d:/Downloads/uuu/Rastafair - Emtiness.mp3"")

# Stabiliți durata intervalului de extragere (în milisecunde, 2 secunde = 2000 milisecunde)
interval = 2000

# Specificați directorul în care să salvați bucațile
director_ieșire = r""d:\Bucati Melodii""

# Verificați dacă directorul de ieșire există și, dacă nu, creați-l
if not os.path.exists(director_ieșire):
    os.makedirs(director_ieșire)

# Parcurgeți melodia și extrageți bucațile la fiecare interval
for i in range(0, len(melodie), interval):
    fragment = melodie[i:i + interval]

    # Salvați fragmentul în directorul de ieșire
    nume_fisier = os.path.join(director_ieșire, f""fragment_{i // interval + 1}.mp3"")
    fragment.export(nume_fisier, format=""mp3"")
    print(f""Extras: {nume_fisier}"")

print(""Extragerile au fost finalizate cu succes."")
"
jK6JWu64,convert html pages to PDF,nicuf,Python,Sunday 29th of October 2023 02:56:37 PM CDT,"import os
import pdfkit

# Specificați calea către executabilul wkhtmltopdf
config = pdfkit.configuration(wkhtmltopdf=r'c:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe')

# Specificați directorul în care se află fișierele HTML
director_html = r'j:\DE SCANAT\socc\Van Llewyn, Sophie'

# Specificați un director în care să salvați fișierele PDF generate
director_pdf = r'C:\calea\catre\director\pdf'

# Verificați dacă directorul de ieșire există și, dacă nu, creați-l
if not os.path.exists(director_pdf):
    os.makedirs(director_pdf)

# Obțineți lista fișierelor HTML din director
fisiere_html = [f for f in os.listdir(director_html) if f.endswith('.html')]

# Parcurgeți lista de fișiere HTML și convertiți-le în PDF
for fisier_html in fisiere_html:
    cale_html = os.path.join(director_html, fisier_html)
    cale_pdf = os.path.join(director_pdf, fisier_html.replace('.html', '.pdf'))

    pdfkit.from_file(cale_html, cale_pdf, configuration=config)

print(""Conversia HTML în PDF a fost finalizată cu succes."")
"
7i3LgMWC,roman_m,zerg959,Python,Sunday 29th of October 2023 02:31:15 PM CDT,"'''Импортирование классов из библиотеки ""kivy""'''
from kivy.app import App #Импортирование управляющего класса
from kivy.uix.button import Button #Импортирование класса кнопок
from kivy.uix.screenmanager import Screen,ScreenManager #Импортирование мэнеджера экрана и самого экрана
from kivy.uix.label import Label #Импортирование класса надписей
from kivy.uix.boxlayout import BoxLayout #Импортирование лэйаутов
from kivy.uix.textinput import TextInput #Импортирование поля ввода
from kivy.core.window import Window #Импортирование окна
from kivy.clock import Clock
from kivy.properties import BooleanProperty
from seconds import Seconds

age = 7
name = ''
p1, p2, p3 = 0,0,0
from instructions import (
    txt_instruction, txt_sits, txt_test1, 
    txt_test2, txt_test3
    )
from ruffier import test

def check_int(str_num):
    try:
        return int(str_num)
    except:
        return False
class Instruction_Screen(Screen):
    '''Класс для обьяснения человеку о том, что надо делать'''
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        instruction = Label(text=txt_instruction)
        name_label = Label(text='Введите имя:', halign='right')
        self.in_name = TextInput(multiline=False)
        age_label = Label(text='Введите возраст:', halign='right')
        self.in_age = TextInput(text='7',multiline=False)

        self.button = Button(text='Начать',
        size_hint=(0.3, 0.2),
        pos_hint={'center_x':0.5})
        self.button.on_press = self.next

        first_layout = BoxLayout(
        size_hint=(0.8,None),
        height ='30sp')

        second_layout = BoxLayout(
        size_hint=(0.8,None),
        height='30sp')

        first_layout.add_widget(name_label)
        first_layout.add_widget(self.in_name)
        second_layout.add_widget(age_label)
        second_layout.add_widget(self.in_age)

        outer=BoxLayout(orientation='vertical', 
        padding=8,
        spacing=8)

        outer.add_widget(instruction)
        outer.add_widget(first_layout)
        outer.add_widget(second_layout)
        outer.add_widget(self.button)
        self.add_widget(outer)

    def next(self):
        name = self.in_name.text
        age = check_int(self.in_age.text)
        if age == False or age < 7:
            age = 7 
            self.in_age.text=str(age)
        else:
            self.manager.current = 'pulse1'


class PulseScr(Screen):
    def __init__(self,**kwargs):
        super().__init__(**kwargs)
        self.next_screen = False
        instr = Label(text=txt_test1)
        lbl1 = Label(text='Считайте пульс')
        self.lbl_sec = Seconds(5)
        self.lbl_sec.bind(done=self.sec_finished)

        line = BoxLayout(size_hint=(0.8,None),
        height='30sp')

        label_result = Label(text='Введите результат',
        halign='right')

        self.in_result = TextInput(text='0',multiline=False)
        self.in_result.set_disabled(True)

        line.add_widget(label_result)
        line.add_widget(self.in_result)

        self.btn = Button(text='Начать', size_hint=(0.3,0.4),
        pos_hint={'center_x':0.5}
        )
        self.btn.on_press = self.next  # <<<-------проверь синтаксис
        outer = BoxLayout(orientation='vertical',
        padding=8,
        spacing=8)
        outer.add_widget(instr)
        outer.add_widget(self.lbl_sec)  # <--add widget
        outer.add_widget(line)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def sec_finished(self, *args):  # <-- lost *args
        self.next_screen = True
        self.in_result.set_disabled(False)
        self.btn.set_disabled(False)
        self.btn.text = 'Продолжить'

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)  # <--lost True
            self.lbl_sec.start()
        else:
            global p1
            p1 = check_int(self.in_result.text)
            if p1 == False or p1 <= 0:
                p1 = 0
                self.in_result.text = str(p1)
            else:
                self.manager.current = 'sits'


class CheckSits(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        instr = Label(text=txt_sits)

        self.btn = Button(text='Продолжить', 
        size_hint=(0.3,0.2), 
        pos_hint={'center_x':0.5})
        self.btn.on_press = self.next

        outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        outer.add_widget(instr)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def next(self):
        self.manager.current = 'pulse2'

class PulseScr2(Screen):
    def __init__(self, **kwargs):
        self.next_screen = False
        self.stage = 0
        super().__init__(**kwargs)
        instr=Label(text=txt_test3)
        line1 =BoxLayout(size_hint=(0.8, None), height='30sp')

        self.lbl_sec = Seconds(15)
        self.lbl_sec.bind(done=self.sec_finished)
        # self.lbl1 = Label(text='Считайте пульс')

        lbl_result1 = Label(text='Результат:', halign='right')
        self.in_result1 = TextInput(text='0', multiline=False)

        line1.add_widget(lbl_result1)
        line1.add_widget(self.in_result1)
        line2 = BoxLayout(size_hint=(0.8,None), height='30sp')
        lbl_result2 = Label(text='Результат после отдыха:', halign='right')

        self.in_result2 = TextInput(text='0', multiline=False)
        self.in_result1.set_disabled(True)
        self.in_result2.set_disabled(True)

        line2.add_widget(lbl_result2)
        line2.add_widget(self.in_result2)

        self.btn = Button(text='Начать',
                          size_hint=(0.3,0.5),
                          pos_hint={'center_x':0.5})
        self.btn.on_press = self.next

        outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        outer.add_widget(instr)
        outer.add_widget(self.lbl1)
        outer.add_widget(self.lbl_sec)
        outer.add_widget(line1)
        outer.add_widget(line2)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def sec_finished(self, *args):
        if self.lbl_sec.done:
            if self.stage == 0:
                self.stage = 1 
                self.lbl1.text='Отдыхайте'
                self.lbl_sec.restart(30)
                self.in_result1.set_disabled(False)

            elif self.stage == 1:
                self.stage = 2
                self.lbl1.text = 'Считайте пульс'
                self.lbl_sec.restart(15)
                
            elif self.stage == 2:
                self.in_result2.set_disabled(False)
                self.btn.set_disabled(False)
                self.btn.text='Завершить'
                self.next_screen = True

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()
        else:
            global p2,p3
            p2 = check_int(self.in_result1.text)
            p3 = check_int(self.in_result2.text)
            if p2 == False:
                p2 = 0
                self.in_result1.text = str(p2)
            elif p3 == False:
                p3 =0
                self.in_result2.text = str(p3)
            else:
                self.manager.current = 'result'
class Result(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.outer = BoxLayout(orientation='vertical', padding=8, spacing=8)
        self.instr = Label(text='')
        self.outer.add_widget(self.instr)
        self.add_widget(self.outer)
        self.on_enter = self.before
    def before(self):
        global name
        self.instr.text = name + '\n' + text(p1,p2,p3)
        


class HeartCheck(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(Instruction_Screen(name='instr'))
        sm.add_widget(PulseScr(name='pulse1'))
        sm.add_widget(CheckSits(name='sits'))
        sm.add_widget(PulseScr2(name='pulse2'))
        sm.add_widget(Result(name='result'))
        return sm

app = HeartCheck()
app.run()
"
WqdTizsL,player_seeking_missiles_launchers.lua,FoxSGR,Lua,Sunday 29th of October 2023 02:23:36 PM CDT,"local PORT = 55111

local modem = peripheral.find('modem')
modem.open(PORT)

local function findPeripherals(name)
    local peripheralNames = {}
    for _, p in pairs(peripheral.getNames()) do
        if string.find(p, name) then
            table.insert(peripheralNames, peripheral.wrap(p))
        end
    end
    return peripheralNames
end

local function hashKey(input)
    local hash = 0
    for i = 1, #input do
        local byte = string.byte(input, i)
        hash = (hash * 31 + byte) % 4294967296  -- 4294967296 is 2^32
    end
    return hash
end

local currentLauncher = 0

local function launch(targetPosition)
    local launchers = findPeripherals('silocontroller')
    local launcher = launchers[currentLauncher + 1]

    print('Firing from launcher ' .. currentLauncher)
    launcher.launchWithPosition(targetPosition.x, targetPosition.y, targetPosition.z)

    currentLauncher = currentLauncher + 1
    if currentLauncher >= #launchers then
        currentLauncher = 0
    end
end

local AUTH_KEY = 55399117

local function reply(message, channel)
    modem.transmit(channel, PORT, message)
end

local function handleMessage(message, callbackChannel)
    if hashKey(message.authKey) ~= AUTH_KEY then
        print('Received message with invalid authKey')
        return
    end

    if message.type == 'launch' then
        print('Received launch message to ' ..
                message.targetPosition.x ..
                ', ' ..
                message.targetPosition.y ..
                ', ' ..
                message.targetPosition.z)
        launch(message.targetPosition)
        reply({ type = 'ack' }, callbackChannel)
    elseif message.type == 'status' then
        local launchers = findPeripherals('silocontroller')
        reply(
                {
                    type = 'status',
                    launchers = #launchers,
                    currentLauncher = currentLauncher
                },
                callbackChannel
        )
    else
        print('Received message with invalid type')
    end
end

print('Listening for messages on port ' .. PORT)

-- Receive messages
while true do
    local event, modemSide, senderChannel, replyChannel, payload, senderDistance = os.pullEvent('modem_message')

    if payload and type(payload) == 'table' then
        local status, err = pcall(handleMessage, payload, replyChannel)
        if not status then
            print('Error handling message: ' .. err)
        end
    end
end
"
1QnaZgF7,simple Hbridge and PWM example,Ruslan_nig,Arduino,Sunday 29th of October 2023 02:13:07 PM CDT,"//this is my example for demonstration H-bridge on n-p-n transistors (BJT - Bipolar Junction Transistors) and for PWM
//simpleGo function is for H-bridge presentation
//PWMmotor - simple PWM example
//this code placed on Pastebin
uint8_t pwm = 55; 
uint8_t step = 1;
void setup() {
  pinMode(6, OUTPUT);
  pinMode(3, OUTPUT);
  Serial.begin(9600);
}

void simpleGo(){
  digitalWrite(6, 1);
  digitalWrite(3, 0);
  delay(2000);
  digitalWrite(6, 0);
  digitalWrite(3, 0);
  delay(2000);
  digitalWrite(6, 0);
  digitalWrite(3, 1);
  delay(2000);
  digitalWrite(6, 0);
  digitalWrite(3, 0);
  delay(2000);
}
void PWMmotor(){
while(pwm<=254) {
    analogWrite(6, pwm);
    delay(100);
    pwm  = pwm + step;
    Serial.print(""INCREASE"");
    Serial.println(pwm);
}

while(pwm>=55) {
    analogWrite(6, pwm);
    delay(100);
    pwm  = pwm - step;
    Serial.print(""decrease decrease decresase"");
    Serial.println(pwm);
}

}

void loop() {
//simpleGo();
//PWMmotor();
analogWrite(6,120);
}
"
vHJ57myT,string,salexame,C++,Sunday 29th of October 2023 02:12:02 PM CDT,"#include <algorithm>
#include <iostream>
#include <cstring>

class String {
 public:
  String() : size_(0), capacity_(1) {
    data_ = new char[capacity_];
    data_[size_] = '\0';
  }

  String(const char *string) : size_(strlen(string)), capacity_(strlen(string) + 1) {
    data_ = new char[capacity_];
    std::copy(string, string + size_, data_);
    data_[size_] = '\0';
  }

  String(char sym) : String(1, sym) {
  }

  String(size_t size, char sym) : size_(size), capacity_(size + 1) {
    data_ = new char[size + 1];
    std::fill(data_, data_ + size_, sym);
    data_[size] = '\0';
  }

  String(const String& other) : size_(other.size_), capacity_(other.capacity_) {
    data_ = new char[capacity_];
    std::copy(other.data_, other.data_ + size_, data_);
    data_[size_] = '\0';
  }

  String& operator=(String other) {
    Swap(other);
    return *this;
  }

  char& operator[](size_t index) { return data_[index]; }

  char operator[](size_t index) const { return data_[index]; }

  friend std::istream &operator>>(std::istream &in, String& str);

  friend std::ostream &operator<<(std::ostream &out, const String& str);

  size_t size() const { return size_; };

  size_t capacity() const { return capacity_; }

  size_t length() const { return size_; }

  void push_back(char sym) {
    if (size_ + 1 == capacity_) {
      Reallocation(2 * capacity_);
      capacity_ *= 2;
    }
    data_[size_] = sym;
    size_++;
    data_[size_] = '\0';
  }

  void pop_back() {
    size_--;
    data_[size_] = '\0';
  }

  char& front() { return data_[0]; }

  char front() const { return data_[0]; }

  char& back() { return data_[size_ - 1]; }

  char back() const { return data_[size_ - 1]; }

  String& operator+= (const String& other) {
    if (capacity_ <= size_ + other.size_) {
      Reallocation(size_ + other.size_ + 1);
      capacity_ = size_ + other.size_ + 1;
    }
    std::copy(other.data_, other.data_ + other.size_, data_ + size_);
    size_ += other.size_;
    data_[size_] = '\0';
    return *this;
  }

  String& operator+= (char sym) {
    String sm(1, sym);
    return *this += sm;
  }

  size_t find(const String& substring) const {
    if (substring.size() > size_) {
      return size_;
    }
    size_t count = 0;
    size_t last = size_;
    for (size_t i = 0; i < size_; ++i) {
      if (data_[i] == substring[count]) {
        count++;
        if (last == size_) {
          last = i;
        }
        if (count == substring.size_) {
          return last;
        }
      } else {
        count = 0;
        last = size_;
      }
    }
    return size_;
  }

  size_t rfind(const String& substring) const {
    if (substring.size() > size_) {
      return size_;
    }
    size_t count = 0;
    for (int i = static_cast<int>(size_) - 1; i >= 0; --i) {
      if (data_[i] == substring[substring.size() - count - 1]) {
        ++count;
        if (count == substring.size_) {
          return i;
        }
      } else {
        count = 0;
      }
    }
    return size_;
  }

  String substr(size_t start, size_t count) const {
    String ret(new char[count + 1]);
    for (size_t i = start; i < start + count; ++i) {
      ret[i - start] = data_[i];
    }
    ret.size_ = count;
    ret.capacity_ = count + 1;
    ret.data_[count] = '\0';
    return ret;
  }

  bool empty() const {return size_ == 0;}

  void clear() {
    size_ = 0;
    data_[size_] = '\0';
  }

  void shrink_to_fit() {
    if (size_ + 1 == capacity_) {
      return;
    }
    capacity_ = size_ + 1;
    char* new_data = new char[size_ + 1];

    std::copy(data_, data_ + size_ + 1, new_data);
    delete[] data_;
    data_ = new_data;
  }

  char* data() const {return data_;}

  ~String() {
    delete[] data_;
  }

 private:
  void Swap(String& other) {
    std::swap(data_, other.data_);
    std::swap(size_, other.size_);
    std::swap(capacity_, other.capacity_);
  }

  void Reallocation(size_t capacity) {
    char* new_data = new char[capacity];
    std::copy(data_, data_ + size_, new_data);
    delete[] data_;
    data_ = new_data;
  }

  char *data_;
  size_t size_;
  size_t capacity_;

};

std::istream& operator>>(std::istream& in, String& str) {
  char cur;
  cur = in.get();
  char* init = new char[1];
  init[0] = '\0';
  size_t size = 0;
  size_t capacity = 1;
  while (!std::isspace(cur) || size == 0) {
    if (std::isspace(cur) && size != 0) {
      break;
    }
    if (std::isspace(cur)) {
      cur = in.get();
      continue;
    }
    if (size + 1 == capacity) {
      capacity *= 2;
      char* new_str = new char[capacity]();
      char* tmp = init;
      std::copy(init, init + size, new_str);
      init = new_str;
      delete[] tmp;
    }
    init[size] = cur;
    ++size;
    init[size] = '\0';
    cur = in.get();
  }
  delete[] str.data_;
  str.data_ = init;
  str.size_ = size;
  str.capacity_ = capacity;
  return in;
}

std::ostream& operator<<(std::ostream& out, const String& str) {
  out << str.data_;
  return out;
}

String operator+(const String& first, const String& second) {
  String copy = first;
  copy += second;
  return copy;
}

bool operator<(const String& first, const String& second) {
  size_t it1 = 0;
  size_t it2 = 0;
  while (it1 < first.size() && it2 < second.size()) {
    if (first[it1] < second[it2]) {
      return true;
    }
    if (first[it1] > second[it2]) {
      return false;
    }
    ++it1;
    ++it2;
  }
  if (it1 == first.size()) {
    return false;
  }
  if (it2 == second.size()) {
    return true;
  }
  return false;
}

bool operator>(const String& first, const String& second) {
  return second < first;
}

bool operator<=(const String& first, const String& second) {
  return !(second > first);
}

bool operator>=(const String& first, const String& second) {
  return !(second < first);
}

bool operator==(const String& first, const String& second) {
  return first <= second && first >= second;
}

bool operator!= (const String& first, const String& second) {
  return !(first == second);
}

String operator+(char sym, const String& str) {
  String copy(1, sym);
  copy += str;
  return copy;
}

String operator+(const String& str, char sym) {
  return str + String(1, sym);
}
"
SgW0sCHw,antonov_m,zerg959,Python,Sunday 29th of October 2023 02:07:31 PM CDT,"# напиши здесь свое приложение
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.textinput import TextInput
from kivy.core.window import Window
from kivy.uix.scrollview import ScrollView
from instructions import (
    txt_instruction, txt_test1, txt_test2, txt_test3, txt_sits
    )
from ruffier import test
from seconds import Seconds
age = 7
name = """"
p1, p2, p3 = 0, 0, 0


def check_int(str_num):
    try:
        return int(str_num)
    except:
        return False


class InstructionScreans(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        instr = Label(text=txt_instruction)
        name_label = Label(text='Dtlbnt bvz',halign='right')  # <<<---halign
        self.in_name = TextInput(multiline=False)  # <<<--multiline
        age_label = Label(text='tggt', halign='right')   # <<<---halign
        self.in_age = TextInput(multiline=False)  # <<<<<<---multiline
        self.btn = Button(
            text='начать', 
            size_hint=(0.3, 0.2), 
            pos_hint={'center_x': 0.5}  # <<<---- двоеточие, а не запятая
        )
        self.btn.on_press = self.next

        line1 = BoxLayout(
            size_hint=(0.8, None),
            height='30sp'
        )

        line2 = BoxLayout(
            size_hint=(0.8, None),
            height='30sp'
        )

        line1.add_widget(name_label)
        line1.add_widget(self.in_name)
        line2.add_widget(age_label)
        line2.add_widget(self.in_age)
        outer = BoxLayout(
            orientation='vertical',
            padding=8,
            spacing=8
        )
        outer.add_widget(instr)  # <<<<-----создал outer, а используешь outher
        outer.add_widget(line1)  # <<<<-----создал outer, а используешь outher
        outer.add_widget(line2)  # <<<<-----создал outer, а используешь outher
        outer.add_widget(self.btn) # <<<<-----создал outer, а используешь outher, self.btn
        self.add_widget(outer)
        
    def next(self):  # <<<<---уехал отступ
        name = self.in_name.text
        age = check_int(self.in_age.text)
        if age == False or age < 7:
            age = 7
            self.in_age.text = str(age)
        else:
            self.manager.current = 'pulse1'  # <<----тут задал имя pullsel, а ниже используешь pulse1


class PulseScr(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.next_screen = False

        instr = Label(text=txt_test1)
        self.lbl_sec = Seconds(15)  # <---lost string
        self.lbl_sec.bind(done=self.sec_finished)  # <--lost string
        line = BoxLayout(size_hint=(0.8, None), height='30sp') # <<<<----size_hint, not height, height, not haign
        lbl_result = Label(text='Введите результат:', halign='right')
        self.in_result = TextInput(text='0', multiline=False)
        self.in_result.set_disabled(True)

        line.add_widget(lbl_result)
        line.add_widget(self.in_result)
        self.btn = Button(
            text='начать',
            size_hint=(0.3, 0.4),
            pos_hint={'center_x': 0.5}
        )
        self.btn.on_press = self.next  # <-next, ot next_screen
        outer = BoxLayout(  # <---lost block of code
            orientation='vertical',
            padding=8,
            spacing=8
        )
        outer.add_widget(instr)  # <---lost widget with instructions
        outer.add_widget(self.lbl_sec)  # <-lost widget with seconds
        outer.add_widget(line)
        outer.add_widget(self.btn)
        self.add_widget(outer)

    def sec_finished(self, *args):  # <---lost identation block
        self.next_screen = True
        self.in_result.set_disabled(False)  # <----dot, not comma
        self.btn.set_disabled(False)
        self.btn.text = 'продолжить'

    def next(self):
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.lbl_sec.start()  # <-- start, not star
        else:
            global p1  # <--p1 not pl
            p1 = check_int(self.in_result.text)
            if p1 == False or p1 <= 0:
                p1 = 0
                self.in_result.text = str(p1)
            else:
                self.manager.current = 'sits'


# class CheckSits(Screen):
#     def __init__(self, **kwargs):
#         super().__init__(**kwargs)
#         self.btn = Button(
#             text='Продолжить',
#             size_hint=(0.3, 0.2),
#             pos_hint={'center_x': 0.5}
#         )
#         self.btn.on_press = self.next
#         outer = BoxLayout(orientation='vertical',
#                            padding=8, spacing=8
#                           )
#         outer.add_widget(instr)
#         outer.add_widget(self.btn)
#         self.add_widget(outer)
#
#     def next(self):
#         self.maneger.current = 'pulse2'


# class PulseScr2(Screen)
#     def __init__(self, **kwargs)
#        self.next_screen = False
#
#    self.stage = 0
#     super().__init__(**Kwargs)
#

class HeartCheck(App):
    def build(self):  # <<<<--- нет метода bulid, есть build
        sm = ScreenManager()
        sm.add_widget(InstructionScreans(name='instr'))
        sm.add_widget(PulseScr(name='pulse1'))
        # sm.add_widget(CheckSits(name='sits'))
        #sm.add_widget(PulseScr2(name='pulse2'))
        #sm.add_widget(Result(name='result'))
        return sm

app = HeartCheck()
app.run()"
q6V0X1wD,Nigerian scammers [29-10-1/2023],bombaires,AIMMS,Sunday 29th of October 2023 01:44:53 PM CDT,"<a href=""mailto:info.christiancaman@myyahoo.com"">info.christiancaman@myyahoo.com</a>
<a href=""mailto:deliveryman0010@gmail.com"">deliveryman0010@gmail.com</a>
<a href=""mailto:de.l.iverym.a.n00.10@gmail.com"">de.l.iverym.a.n00.10@gmail.com</a>
<a href=""mailto:d.elive.ryman0.0.1.0@gmail.com"">d.elive.ryman0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.liv.e.ry.m.a.n0.010@gmail.com"">d.e.liv.e.ry.m.a.n0.010@gmail.com</a>
<a href=""mailto:d.e.liv.er.y.man.0.0.1.0@gmail.com"">d.e.liv.er.y.man.0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.li.v.e.r.ym.a.n0.010@gmail.com"">d.e.li.v.e.r.ym.a.n0.010@gmail.com</a>
<a href=""mailto:de.liv.e.r.yman.0.01.0@gmail.com"">de.liv.e.r.yman.0.01.0@gmail.com</a>
<a href=""mailto:d.eli.v.ery.m.a.n0.0.1.0@gmail.com"">d.eli.v.ery.m.a.n0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.l.i.v.e.ry.ma.n0010@gmail.com"">d.e.l.i.v.e.ry.ma.n0010@gmail.com</a>
<a href=""mailto:de.l.i.ve.r.ym.an001.0@gmail.com"">de.l.i.ve.r.ym.an001.0@gmail.com</a>
<a href=""mailto:d.e.l.i.very.man.0.01.0@gmail.com"">d.e.l.i.very.man.0.01.0@gmail.com</a>
<a href=""mailto:d.e.l.iv.er.y.ma.n0.0.10@gmail.com"">d.e.l.iv.er.y.ma.n0.0.10@gmail.com</a>
<a href=""mailto:de.l.ive.ry.ma.n0.01.0@gmail.com"">de.l.ive.ry.ma.n0.01.0@gmail.com</a>
<a href=""mailto:de.liv.ery.m.a.n.0.0.10@gmail.com"">de.liv.ery.m.a.n.0.0.10@gmail.com</a>
<a href=""mailto:de.l.i.v.er.y.m.a.n00.1.0@gmail.com"">de.l.i.v.er.y.m.a.n00.1.0@gmail.com</a>
<a href=""mailto:d.eli.v.e.r.ym.a.n.0010@gmail.com"">d.eli.v.e.r.ym.a.n.0010@gmail.com</a>
<a href=""mailto:d.eli.v.e.ry.m.a.n0.0.1.0@gmail.com"">d.eli.v.e.ry.m.a.n0.0.1.0@gmail.com</a>
<a href=""mailto:deliv.er.yman0.0.10@gmail.com"">deliv.er.yman0.0.10@gmail.com</a>
<a href=""mailto:deliv.e.rym.a.n.00.1.0@gmail.com"">deliv.e.rym.a.n.00.1.0@gmail.com</a>
<a href=""mailto:d.eli.ve.rym.an0.0.10@gmail.com"">d.eli.ve.rym.an0.0.10@gmail.com</a>
<a href=""mailto:d.e.li.v.erym.an.001.0@gmail.com"">d.e.li.v.erym.an.001.0@gmail.com</a>
<a href=""mailto:del.i.v.ery.ma.n0010@gmail.com"">del.i.v.ery.ma.n0010@gmail.com</a>
<a href=""mailto:d.e.liver.yman.001.0@gmail.com"">d.e.liver.yman.001.0@gmail.com</a>
<a href=""mailto:de.l.i.ver.y.m.a.n00.10@gmail.com"">de.l.i.ver.y.m.a.n00.10@gmail.com</a>
<a href=""mailto:d.e.li.ve.ry.man00.1.0@gmail.com"">d.e.li.ve.ry.man00.1.0@gmail.com</a>
<a href=""mailto:d.e.l.i.verym.an.0010@gmail.com"">d.e.l.i.verym.an.0010@gmail.com</a>
<a href=""mailto:de.l.i.ver.y.m.an0.0.10@gmail.com"">de.l.i.ver.y.m.an0.0.10@gmail.com</a>
<a href=""mailto:d.e.li.ver.yman.0.01.0@gmail.com"">d.e.li.ver.yman.0.01.0@gmail.com</a>
<a href=""mailto:d.e.li.v.e.rym.a.n.0.010@gmail.com"">d.e.li.v.e.rym.a.n.0.010@gmail.com</a>
<a href=""mailto:de.li.ve.r.y.man001.0@gmail.com"">de.li.ve.r.y.man001.0@gmail.com</a>
<a href=""mailto:de.l.iv.e.r.y.man.0010@gmail.com"">de.l.iv.e.r.y.man.0010@gmail.com</a>
<a href=""mailto:d.e.liver.y.m.an.0.010@gmail.com"">d.e.liver.y.m.an.0.010@gmail.com</a>
<a href=""mailto:d.eli.v.e.r.yma.n0.01.0@gmail.com"">d.eli.v.e.r.yma.n0.01.0@gmail.com</a>
<a href=""mailto:d.e.liv.eryman0.01.0@gmail.com"">d.e.liv.eryman0.01.0@gmail.com</a>
<a href=""mailto:d.eli.ver.ym.an.0.0.1.0@gmail.com"">d.eli.ver.ym.an.0.0.1.0@gmail.com</a>
<a href=""mailto:de.l.i.v.er.yma.n0.0.1.0@gmail.com"">de.l.i.v.er.yma.n0.0.1.0@gmail.com</a>
<a href=""mailto:del.iveryman.001.0@gmail.com"">del.iveryman.001.0@gmail.com</a>
<a href=""mailto:de.li.ve.rym.an0.0.10@gmail.com"">de.li.ve.rym.an0.0.10@gmail.com</a>
<a href=""mailto:d.eliverym.a.n.0010@gmail.com"">d.eliverym.a.n.0010@gmail.com</a>
<a href=""mailto:de.li.v.erym.an0.010@gmail.com"">de.li.v.erym.an0.010@gmail.com</a>
<a href=""mailto:de.li.v.e.ry.ma.n00.10@gmail.com"">de.li.v.e.ry.ma.n00.10@gmail.com</a>
<a href=""mailto:de.l.iv.e.ryman00.1.0@gmail.com"">de.l.iv.e.ryman00.1.0@gmail.com</a>
<a href=""mailto:d.eliveryma.n.00.10@gmail.com"">d.eliveryma.n.00.10@gmail.com</a>
<a href=""mailto:d.e.li.ver.yman.00.1.0@gmail.com"">d.e.li.ver.yman.00.1.0@gmail.com</a>
<a href=""mailto:del.iv.e.ryman.001.0@gmail.com"">del.iv.e.ryman.001.0@gmail.com</a>
<a href=""mailto:d.el.iv.erym.a.n00.1.0@gmail.com"">d.el.iv.erym.a.n00.1.0@gmail.com</a>
<a href=""mailto:del.iv.er.yma.n.0010@gmail.com"">del.iv.er.yma.n.0010@gmail.com</a>
<a href=""mailto:d.e.li.v.er.y.ma.n.0.010@gmail.com"">d.e.li.v.er.y.ma.n.0.010@gmail.com</a>
<a href=""mailto:del.i.ver.ym.a.n.00.10@gmail.com"">del.i.ver.ym.a.n.00.10@gmail.com</a>
<a href=""mailto:d.el.i.ver.ym.an0010@gmail.com"">d.el.i.ver.ym.an0010@gmail.com</a>
<a href=""mailto:del.i.v.eryma.n0.010@gmail.com"">del.i.v.eryma.n0.010@gmail.com</a>
<a href=""mailto:de.l.i.ve.r.y.m.an.0010@gmail.com"">de.l.i.ve.r.y.m.an.0010@gmail.com</a>
<a href=""mailto:d.e.li.ver.y.m.an0.010@gmail.com"">d.e.li.ver.y.m.an0.010@gmail.com</a>
<a href=""mailto:d.elive.r.y.m.an.0010@gmail.com"">d.elive.r.y.m.an.0010@gmail.com</a>
<a href=""mailto:de.live.r.ym.a.n.00.1.0@gmail.com"">de.live.r.ym.a.n.00.1.0@gmail.com</a>
<a href=""mailto:d.el.i.ver.y.man0.0.1.0@gmail.com"">d.el.i.ver.y.man0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.liver.yman.0.0.1.0@gmail.com"">d.e.liver.yman.0.0.1.0@gmail.com</a>
<a href=""mailto:d.eliv.e.r.ym.an00.10@gmail.com"">d.eliv.e.r.ym.an00.10@gmail.com</a>
<a href=""mailto:d.eliveryman.0.01.0@gmail.com"">d.eliveryman.0.01.0@gmail.com</a>
<a href=""mailto:delive.r.y.m.a.n.0.010@gmail.com"">delive.r.y.m.a.n.0.010@gmail.com</a>
<a href=""mailto:d.e.l.ive.ryman.0.010@gmail.com"">d.e.l.ive.ryman.0.010@gmail.com</a>
<a href=""mailto:d.eli.v.ery.ma.n00.1.0@gmail.com"">d.eli.v.ery.ma.n00.1.0@gmail.com</a>
<a href=""mailto:de.l.ive.rym.an.00.1.0@gmail.com"">de.l.ive.rym.an.00.1.0@gmail.com</a>
<a href=""mailto:del.i.ve.r.y.m.an.00.10@gmail.com"">del.i.ve.r.y.m.an.00.10@gmail.com</a>
<a href=""mailto:d.el.i.ve.ry.m.an0.0.10@gmail.com"">d.el.i.ve.ry.m.an0.0.10@gmail.com</a>
<a href=""mailto:d.el.i.v.e.rym.an.00.10@gmail.com"">d.el.i.v.e.rym.an.00.10@gmail.com</a>
<a href=""mailto:delive.r.yman001.0@gmail.com"">delive.r.yman001.0@gmail.com</a>
<a href=""mailto:d.e.liv.eryman00.1.0@gmail.com"">d.e.liv.eryman00.1.0@gmail.com</a>
<a href=""mailto:del.i.v.ery.m.a.n00.1.0@gmail.com"">del.i.v.ery.m.a.n00.1.0@gmail.com</a>
<a href=""mailto:deliv.e.r.y.m.a.n.001.0@gmail.com"">deliv.e.r.y.m.a.n.001.0@gmail.com</a>
<a href=""mailto:d.e.l.i.ve.ry.man.0.0.1.0@gmail.com"">d.e.l.i.ve.ry.man.0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.l.i.v.e.rym.a.n.001.0@gmail.com"">d.e.l.i.v.e.rym.a.n.001.0@gmail.com</a>
<a href=""mailto:d.e.liv.er.yman00.10@gmail.com"">d.e.liv.er.yman00.10@gmail.com</a>
<a href=""mailto:deli.v.e.r.y.m.an.00.10@gmail.com"">deli.v.e.r.y.m.an.00.10@gmail.com</a>
<a href=""mailto:d.e.l.ive.r.yman00.10@gmail.com"">d.e.l.ive.r.yman00.10@gmail.com</a>
<a href=""mailto:d.e.l.ive.rym.a.n0010@gmail.com"">d.e.l.ive.rym.a.n0010@gmail.com</a>
<a href=""mailto:del.iver.yman00.10@gmail.com"">del.iver.yman00.10@gmail.com</a>
<a href=""mailto:d.el.i.v.eryman.0.0.1.0@gmail.com"">d.el.i.v.eryman.0.0.1.0@gmail.com</a>
<a href=""mailto:d.elive.ry.m.an0.010@gmail.com"">d.elive.ry.m.an0.010@gmail.com</a>
<a href=""mailto:d.e.liv.er.y.ma.n0.0.1.0@gmail.com"">d.e.liv.er.y.ma.n0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.l.i.ve.r.y.ma.n.00.10@gmail.com"">d.e.l.i.ve.r.y.ma.n.00.10@gmail.com</a>
<a href=""mailto:d.el.i.v.ery.ma.n.0010@gmail.com"">d.el.i.v.ery.ma.n.0010@gmail.com</a>
<a href=""mailto:de.l.ive.r.ym.a.n.0.010@gmail.com"">de.l.ive.r.ym.a.n.0.010@gmail.com</a>
<a href=""mailto:de.liv.e.r.yma.n0010@gmail.com"">de.liv.e.r.yma.n0010@gmail.com</a>
<a href=""mailto:de.l.i.v.e.ry.man00.10@gmail.com"">de.l.i.v.e.ry.man00.10@gmail.com</a>
<a href=""mailto:de.l.i.v.e.ry.m.an.0.0.10@gmail.com"">de.l.i.v.e.ry.m.an.0.0.10@gmail.com</a>
<a href=""mailto:de.l.ive.r.y.ma.n.0.010@gmail.com"">de.l.ive.r.y.ma.n.0.010@gmail.com</a>
<a href=""mailto:d.e.l.iv.e.r.y.ma.n0.010@gmail.com"">d.e.l.iv.e.r.y.ma.n0.010@gmail.com</a>
<a href=""mailto:d.e.l.i.v.e.r.ym.an.0.0.10@gmail.com"">d.e.l.i.v.e.r.ym.an.0.0.10@gmail.com</a>
<a href=""mailto:del.iv.e.ry.man.0010@gmail.com"">del.iv.e.ry.man.0010@gmail.com</a>
<a href=""mailto:d.elive.r.y.m.a.n.0.0.1.0@gmail.com"">d.elive.r.y.m.a.n.0.0.1.0@gmail.com</a>
<a href=""mailto:d.el.iv.ery.ma.n.00.10@gmail.com"">d.el.iv.ery.ma.n.00.10@gmail.com</a>
<a href=""mailto:d.e.l.i.ver.y.m.an0010@gmail.com"">d.e.l.i.ver.y.m.an0010@gmail.com</a>
<a href=""mailto:del.iver.y.m.an.0.0.1.0@gmail.com"">del.iver.y.m.an.0.0.1.0@gmail.com</a>
<a href=""mailto:de.live.r.y.m.an0.010@gmail.com"">de.live.r.y.m.an0.010@gmail.com</a>
<a href=""mailto:d.e.liv.e.r.yma.n0010@gmail.com"">d.e.liv.e.r.yma.n0010@gmail.com</a>
<a href=""mailto:de.liv.e.r.ym.a.n00.1.0@gmail.com"">de.liv.e.r.ym.a.n00.1.0@gmail.com</a>
<a href=""mailto:de.l.i.ver.y.man.0.0.10@gmail.com"">de.l.i.ver.y.man.0.0.10@gmail.com</a>
<a href=""mailto:de.live.ry.ma.n.0.010@gmail.com"">de.live.ry.ma.n.0.010@gmail.com</a>
<a href=""mailto:d.e.liver.yman.00.10@gmail.com"">d.e.liver.yman.00.10@gmail.com</a>
<a href=""mailto:del.iv.er.y.man0010@gmail.com"">del.iv.er.y.man0010@gmail.com</a>
<a href=""mailto:d.eli.ve.r.y.m.a.n.00.1.0@gmail.com"">d.eli.ve.r.y.m.a.n.00.1.0@gmail.com</a>
<a href=""mailto:d.eliver.y.m.an.0.010@gmail.com"">d.eliver.y.m.an.0.010@gmail.com</a>
<a href=""mailto:del.iv.e.ry.m.a.n.0010@gmail.com"">del.iv.e.ry.m.a.n.0010@gmail.com</a>
<a href=""mailto:de.l.i.ver.yman.0.010@gmail.com"">de.l.i.ver.yman.0.010@gmail.com</a>
<a href=""mailto:d.e.liv.e.ry.m.an.00.1.0@gmail.com"">d.e.liv.e.ry.m.an.00.1.0@gmail.com</a>
<a href=""mailto:deliver.y.m.an001.0@gmail.com"">deliver.y.m.an001.0@gmail.com</a>
<a href=""mailto:del.i.v.er.yman.00.1.0@gmail.com"">del.i.v.er.yman.00.1.0@gmail.com</a>
<a href=""mailto:d.el.i.ve.ry.m.a.n0.0.10@gmail.com"">d.el.i.ve.ry.m.a.n0.0.10@gmail.com</a>
<a href=""mailto:de.li.v.ery.ma.n0.010@gmail.com"">de.li.v.ery.ma.n0.010@gmail.com</a>
<a href=""mailto:de.liv.e.ry.m.a.n0.01.0@gmail.com"">de.liv.e.ry.m.a.n0.01.0@gmail.com</a>
<a href=""mailto:d.eli.ver.yman0.0.1.0@gmail.com"">d.eli.ver.yman0.0.1.0@gmail.com</a>
<a href=""mailto:de.li.verym.an001.0@gmail.com"">de.li.verym.an001.0@gmail.com</a>
<a href=""mailto:d.el.i.v.e.rym.a.n.00.10@gmail.com"">d.el.i.v.e.rym.a.n.00.10@gmail.com</a>
<a href=""mailto:del.ive.r.yma.n.0010@gmail.com"">del.ive.r.yma.n.0010@gmail.com</a>
<a href=""mailto:deliv.e.ry.ma.n00.10@gmail.com"">deliv.e.ry.ma.n00.10@gmail.com</a>
<a href=""mailto:delive.rym.an.001.0@gmail.com"">delive.rym.an.001.0@gmail.com</a>
<a href=""mailto:de.l.ive.r.yma.n0010@gmail.com"">de.l.ive.r.yma.n0010@gmail.com</a>
<a href=""mailto:d.eliv.e.ry.man00.10@gmail.com"">d.eliv.e.ry.man00.10@gmail.com</a>
<a href=""mailto:d.eliveryma.n0.0.1.0@gmail.com"">d.eliveryma.n0.0.1.0@gmail.com</a>
<a href=""mailto:del.i.ve.r.y.man.0010@gmail.com"">del.i.ve.r.y.man.0010@gmail.com</a>
<a href=""mailto:d.eli.ve.ryman001.0@gmail.com"">d.eli.ve.ryman001.0@gmail.com</a>
<a href=""mailto:d.e.l.ive.ry.m.a.n0.01.0@gmail.com"">d.e.l.ive.ry.m.a.n0.01.0@gmail.com</a>
<a href=""mailto:d.e.l.i.v.eryman001.0@gmail.com"">d.e.l.i.v.eryman001.0@gmail.com</a>
<a href=""mailto:d.e.live.r.y.m.an.0.0.1.0@gmail.com"">d.e.live.r.y.m.an.0.0.1.0@gmail.com</a>
<a href=""mailto:de.l.iverym.an.00.10@gmail.com"">de.l.iverym.an.00.10@gmail.com</a>
<a href=""mailto:del.i.v.ery.man0.010@gmail.com"">del.i.v.ery.man0.010@gmail.com</a>
<a href=""mailto:de.l.i.ve.ryma.n.0.0.1.0@gmail.com"">de.l.i.ve.ryma.n.0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.liv.er.y.m.an.0.0.10@gmail.com"">d.e.liv.er.y.m.an.0.0.10@gmail.com</a>
<a href=""mailto:d.e.l.iv.ery.m.a.n.0.0.10@gmail.com"">d.e.l.iv.ery.m.a.n.0.0.10@gmail.com</a>
<a href=""mailto:de.liverym.a.n00.1.0@gmail.com"">de.liverym.a.n00.1.0@gmail.com</a>
<a href=""mailto:d.el.i.ver.yman0.0.10@gmail.com"">d.el.i.ver.yman0.0.10@gmail.com</a>
<a href=""mailto:d.e.l.i.v.e.r.ym.a.n0.0.1.0@gmail.com"">d.e.l.i.v.e.r.ym.a.n0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.liv.er.yma.n.0.01.0@gmail.com"">d.e.liv.er.yma.n.0.01.0@gmail.com</a>
<a href=""mailto:d.e.l.iver.yma.n00.10@gmail.com"">d.e.l.iver.yma.n00.10@gmail.com</a>
<a href=""mailto:de.l.i.v.er.y.m.a.n0.01.0@gmail.com"">de.l.i.v.er.y.m.a.n0.01.0@gmail.com</a>
<a href=""mailto:d.el.i.v.e.r.y.man001.0@gmail.com"">d.el.i.v.e.r.y.man001.0@gmail.com</a>
<a href=""mailto:d.el.iv.er.yma.n00.10@gmail.com"">d.el.iv.er.yma.n00.10@gmail.com</a>
<a href=""mailto:d.el.iver.y.m.an001.0@gmail.com"">d.el.iver.y.m.an001.0@gmail.com</a>
<a href=""mailto:de.liv.e.r.y.m.an00.1.0@gmail.com"">de.liv.e.r.y.m.an00.1.0@gmail.com</a>
<a href=""mailto:d.e.l.i.veryman0.0.1.0@gmail.com"">d.e.l.i.veryman0.0.1.0@gmail.com</a>
<a href=""mailto:d.el.i.ver.y.man00.10@gmail.com"">d.el.i.ver.y.man00.10@gmail.com</a>
<a href=""mailto:d.el.iv.er.y.man0.0.10@gmail.com"">d.el.iv.er.y.man0.0.10@gmail.com</a>
<a href=""mailto:deliv.er.y.ma.n.00.10@gmail.com"">deliv.er.y.ma.n.00.10@gmail.com</a>
<a href=""mailto:del.ivery.m.a.n0.010@gmail.com"">del.ivery.m.a.n0.010@gmail.com</a>
<a href=""mailto:d.el.iv.erym.a.n0.0.1.0@gmail.com"">d.el.iv.erym.a.n0.0.1.0@gmail.com</a>
<a href=""mailto:de.liv.e.rym.a.n.00.10@gmail.com"">de.liv.e.rym.a.n.00.10@gmail.com</a>
<a href=""mailto:de.l.i.verym.a.n.0.0.10@gmail.com"">de.l.i.verym.a.n.0.0.10@gmail.com</a>
<a href=""mailto:d.eli.ver.yman.0010@gmail.com"">d.eli.ver.yman.0010@gmail.com</a>
<a href=""mailto:d.e.liv.er.y.ma.n0.010@gmail.com"">d.e.liv.er.y.ma.n0.010@gmail.com</a>
<a href=""mailto:d.e.l.iv.e.r.y.m.an.0.0.10@gmail.com"">d.e.l.iv.e.r.y.m.an.0.0.10@gmail.com</a>
<a href=""mailto:deli.ver.y.m.a.n001.0@gmail.com"">deli.ver.y.m.a.n001.0@gmail.com</a>
<a href=""mailto:de.li.ve.r.y.ma.n.00.1.0@gmail.com"">de.li.ve.r.y.ma.n.00.1.0@gmail.com</a>
<a href=""mailto:de.l.i.v.ery.ma.n.0.01.0@gmail.com"">de.l.i.v.ery.ma.n.0.01.0@gmail.com</a>
<a href=""mailto:deli.v.e.rym.a.n.0.0.10@gmail.com"">deli.v.e.rym.a.n.0.0.10@gmail.com</a>
<a href=""mailto:d.e.liv.e.rym.an.0.0.10@gmail.com"">d.e.liv.e.rym.an.0.0.10@gmail.com</a>
<a href=""mailto:del.ive.ry.man001.0@gmail.com"">del.ive.ry.man001.0@gmail.com</a>
<a href=""mailto:d.e.li.ve.r.ym.a.n00.10@gmail.com"">d.e.li.ve.r.ym.a.n00.10@gmail.com</a>
<a href=""mailto:del.i.v.ery.ma.n00.1.0@gmail.com"">del.i.v.ery.ma.n00.1.0@gmail.com</a>
<a href=""mailto:de.li.ve.r.ym.a.n0.010@gmail.com"">de.li.ve.r.ym.a.n0.010@gmail.com</a>
<a href=""mailto:deli.very.ma.n.00.10@gmail.com"">deli.very.ma.n.00.10@gmail.com</a>
<a href=""mailto:d.e.liver.yma.n.0010@gmail.com"">d.e.liver.yma.n.0010@gmail.com</a>
<a href=""mailto:deli.ve.r.ym.a.n0.0.10@gmail.com"">deli.ve.r.ym.a.n0.0.10@gmail.com</a>
<a href=""mailto:de.live.ry.man0.0.1.0@gmail.com"">de.live.ry.man0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.liv.ery.man.00.10@gmail.com"">d.e.liv.ery.man.00.10@gmail.com</a>
<a href=""mailto:d.eliv.e.r.ym.an.0.010@gmail.com"">d.eliv.e.r.ym.an.0.010@gmail.com</a>
<a href=""mailto:d.elive.r.yma.n.001.0@gmail.com"">d.elive.r.yma.n.001.0@gmail.com</a>
<a href=""mailto:d.el.iv.er.ym.an.0010@gmail.com"">d.el.iv.er.ym.an.0010@gmail.com</a>
<a href=""mailto:de.l.ive.r.yman.0.0.10@gmail.com"">de.l.ive.r.yman.0.0.10@gmail.com</a>
<a href=""mailto:d.e.li.ver.ym.a.n001.0@gmail.com"">d.e.li.ver.ym.a.n001.0@gmail.com</a>
<a href=""mailto:d.e.li.very.m.an.0.0.1.0@gmail.com"">d.e.li.very.m.an.0.0.1.0@gmail.com</a>
<a href=""mailto:del.i.ve.r.y.ma.n.0010@gmail.com"">del.i.ve.r.y.ma.n.0010@gmail.com</a>
<a href=""mailto:de.l.i.ver.y.man001.0@gmail.com"">de.l.i.ver.y.man001.0@gmail.com</a>
<a href=""mailto:d.e.li.ve.ryma.n0.0.10@gmail.com"">d.e.li.ve.ryma.n0.0.10@gmail.com</a>
<a href=""mailto:d.e.l.i.veryma.n.00.1.0@gmail.com"">d.e.l.i.veryma.n.00.1.0@gmail.com</a>
<a href=""mailto:del.i.ver.y.m.an00.1.0@gmail.com"">del.i.ver.y.m.an00.1.0@gmail.com</a>
<a href=""mailto:de.liv.e.ry.ma.n.0.01.0@gmail.com"">de.liv.e.ry.ma.n.0.01.0@gmail.com</a>
<a href=""mailto:d.e.l.i.ve.r.ym.an0.01.0@gmail.com"">d.e.l.i.ve.r.ym.an0.01.0@gmail.com</a>
<a href=""mailto:d.e.l.iv.ery.m.a.n.00.10@gmail.com"">d.e.l.iv.ery.m.a.n.00.10@gmail.com</a>
<a href=""mailto:d.e.live.r.y.m.a.n0.01.0@gmail.com"">d.e.live.r.y.m.a.n0.01.0@gmail.com</a>
<a href=""mailto:de.l.iver.y.m.an0.0.10@gmail.com"">de.l.iver.y.m.an0.0.10@gmail.com</a>
<a href=""mailto:del.i.ver.ym.a.n00.10@gmail.com"">del.i.ver.ym.a.n00.10@gmail.com</a>
<a href=""mailto:d.eli.v.e.r.yma.n.0.0.10@gmail.com"">d.eli.v.e.r.yma.n.0.0.10@gmail.com</a>
<a href=""mailto:d.el.ive.r.ym.a.n0.0.10@gmail.com"">d.el.ive.r.ym.a.n0.0.10@gmail.com</a>
<a href=""mailto:d.e.li.ver.ym.a.n0.0.1.0@gmail.com"">d.e.li.ver.ym.a.n0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.liv.er.y.m.a.n0.0.10@gmail.com"">d.e.liv.er.y.m.a.n0.0.10@gmail.com</a>
<a href=""mailto:de.live.ryma.n.00.1.0@gmail.com"">de.live.ryma.n.00.1.0@gmail.com</a>
<a href=""mailto:de.liv.e.ryman.0010@gmail.com"">de.liv.e.ryman.0010@gmail.com</a>
<a href=""mailto:d.e.li.ve.r.ym.an001.0@gmail.com"">d.e.li.ve.r.ym.an001.0@gmail.com</a>
<a href=""mailto:deli.v.e.r.y.ma.n.00.10@gmail.com"">deli.v.e.r.y.ma.n.00.10@gmail.com</a>
<a href=""mailto:del.iver.ym.a.n00.10@gmail.com"">del.iver.ym.a.n00.10@gmail.com</a>
<a href=""mailto:d.el.i.v.e.r.yman0.0.10@gmail.com"">d.el.i.v.e.r.yman0.0.10@gmail.com</a>
<a href=""mailto:de.li.verym.an.0.010@gmail.com"">de.li.verym.an.0.010@gmail.com</a>
<a href=""mailto:de.li.ver.y.ma.n.0.0.1.0@gmail.com"">de.li.ver.y.ma.n.0.0.1.0@gmail.com</a>
<a href=""mailto:d.e.live.rym.an0.0.10@gmail.com"">d.e.live.rym.an0.0.10@gmail.com</a>
<a href=""mailto:de.l.i.v.er.yma.n.0.01.0@gmail.com"">de.l.i.v.er.yma.n.0.01.0@gmail.com</a>
<a href=""mailto:del.iv.er.ym.an.0.0.1.0@gmail.com"">del.iv.er.ym.an.0.0.1.0@gmail.com</a>
<a href=""mailto:del.ive.r.yman.00.10@gmail.com"">del.ive.r.yman.00.10@gmail.com</a>
<a href=""mailto:d.e.live.r.y.ma.n.0.0.1.0@gmail.com"">d.e.live.r.y.ma.n.0.0.1.0@gmail.com</a>
<a href=""mailto:d.el.i.ve.ry.ma.n0.0.1.0@gmail.com"">d.el.i.ve.ry.ma.n0.0.1.0@gmail.com</a>
<a href=""mailto:de.l.iveryma.n0.01.0@gmail.com"">de.l.iveryma.n0.01.0@gmail.com</a>
<a href=""mailto:freelanceg051@gmail.com"">freelanceg051@gmail.com</a>
<a href=""mailto:fre.ela.n.ce.g0.51@gmail.com"">fre.ela.n.ce.g0.51@gmail.com</a>
<a href=""mailto:freel.a.nc.e.g0.51@gmail.com"">freel.a.nc.e.g0.51@gmail.com</a>
<a href=""mailto:f.r.eelan.ceg.051@gmail.com"">f.r.eelan.ceg.051@gmail.com</a>
<a href=""mailto:freel.a.n.c.eg.051@gmail.com"">freel.a.n.c.eg.051@gmail.com</a>
<a href=""mailto:f.reelanceg05.1@gmail.com"">f.reelanceg05.1@gmail.com</a>
<a href=""mailto:fr.e.el.a.n.c.eg0.51@gmail.com"">fr.e.el.a.n.c.eg0.51@gmail.com</a>
<a href=""mailto:f.ree.l.ance.g05.1@gmail.com"">f.ree.l.ance.g05.1@gmail.com</a>
<a href=""mailto:fr.eela.nc.eg05.1@gmail.com"">fr.eela.nc.eg05.1@gmail.com</a>
<a href=""mailto:fre.ela.nc.eg0.51@gmail.com"">fre.ela.nc.eg0.51@gmail.com</a>
<a href=""mailto:f.re.el.a.n.ceg0.5.1@gmail.com"">f.re.el.a.n.ceg0.5.1@gmail.com</a>
<a href=""mailto:fre.e.l.a.nc.e.g051@gmail.com"">fre.e.l.a.nc.e.g051@gmail.com</a>
<a href=""mailto:fr.e.e.la.n.ceg05.1@gmail.com"">fr.e.e.la.n.ceg05.1@gmail.com</a>
<a href=""mailto:fr.e.e.lanc.eg0.5.1@gmail.com"">fr.e.e.lanc.eg0.5.1@gmail.com</a>
<a href=""mailto:fre.el.a.n.c.e.g05.1@gmail.com"">fre.el.a.n.c.e.g05.1@gmail.com</a>
<a href=""mailto:f.re.e.l.a.n.ceg051@gmail.com"">f.re.e.l.a.n.ceg051@gmail.com</a>
<a href=""mailto:f.re.e.l.an.c.e.g.0.51@gmail.com"">f.re.e.l.an.c.e.g.0.51@gmail.com</a>
<a href=""mailto:f.re.ela.n.ceg.05.1@gmail.com"">f.re.ela.n.ceg.05.1@gmail.com</a>
<a href=""mailto:fr.ee.l.ance.g0.5.1@gmail.com"">fr.ee.l.ance.g0.5.1@gmail.com</a>
<a href=""mailto:freela.nc.eg.051@gmail.com"">freela.nc.eg.051@gmail.com</a>
<a href=""mailto:f.reelan.c.e.g.05.1@gmail.com"">f.reelan.c.e.g.05.1@gmail.com</a>
<a href=""mailto:f.r.e.elan.c.eg051@gmail.com"">f.r.e.elan.c.eg051@gmail.com</a>
<a href=""mailto:free.la.nce.g05.1@gmail.com"">free.la.nce.g05.1@gmail.com</a>
<a href=""mailto:fr.e.e.lan.ce.g.0.5.1@gmail.com"">fr.e.e.lan.ce.g.0.5.1@gmail.com</a>
<a href=""mailto:fre.e.lanceg05.1@gmail.com"">fre.e.lanceg05.1@gmail.com</a>
<a href=""mailto:fre.ela.nc.e.g05.1@gmail.com"">fre.ela.nc.e.g05.1@gmail.com</a>
<a href=""mailto:free.lance.g051@gmail.com"">free.lance.g051@gmail.com</a>
<a href=""mailto:fr.e.ela.nce.g.05.1@gmail.com"">fr.e.ela.nce.g.05.1@gmail.com</a>
<a href=""mailto:freel.anceg051@gmail.com"">freel.anceg051@gmail.com</a>
<a href=""mailto:f.reelanc.eg.0.5.1@gmail.com"">f.reelanc.eg.0.5.1@gmail.com</a>
<a href=""mailto:f.re.e.l.a.n.c.e.g.0.5.1@gmail.com"">f.re.e.l.a.n.c.e.g.0.5.1@gmail.com</a>
<a href=""mailto:f.re.el.a.n.ce.g.05.1@gmail.com"">f.re.el.a.n.ce.g.05.1@gmail.com</a>
<a href=""mailto:f.r.e.ela.n.c.e.g05.1@gmail.com"">f.r.e.ela.n.c.e.g05.1@gmail.com</a>
<a href=""mailto:fre.e.l.a.nceg.0.5.1@gmail.com"">fre.e.l.a.nceg.0.5.1@gmail.com</a>
<a href=""mailto:f.r.e.el.a.nceg05.1@gmail.com"">f.r.e.el.a.nceg05.1@gmail.com</a>
<a href=""mailto:free.lan.c.e.g.051@gmail.com"">free.lan.c.e.g.051@gmail.com</a>
<a href=""mailto:f.re.ela.nc.e.g.0.5.1@gmail.com"">f.re.ela.nc.e.g.0.5.1@gmail.com</a>
<a href=""mailto:f.reela.nceg051@gmail.com"">f.reela.nceg051@gmail.com</a>
<a href=""mailto:free.la.nce.g0.51@gmail.com"">free.la.nce.g0.51@gmail.com</a>
<a href=""mailto:f.reel.a.nce.g.0.51@gmail.com"">f.reel.a.nce.g.0.51@gmail.com</a>
<a href=""mailto:f.r.ee.la.nceg.051@gmail.com"">f.r.ee.la.nceg.051@gmail.com</a>
<a href=""mailto:freela.n.ce.g.051@gmail.com"">freela.n.ce.g.051@gmail.com</a>
<a href=""mailto:f.reel.a.nce.g.0.5.1@gmail.com"">f.reel.a.nce.g.0.5.1@gmail.com</a>
<a href=""mailto:f.r.eelance.g.0.5.1@gmail.com"">f.r.eelance.g.0.5.1@gmail.com</a>
<a href=""mailto:fr.eel.a.n.c.eg.0.5.1@gmail.com"">fr.eel.a.n.c.eg.0.5.1@gmail.com</a>
<a href=""mailto:f.r.eelan.ceg05.1@gmail.com"">f.r.eelan.ceg05.1@gmail.com</a>
<a href=""mailto:fr.e.e.l.anc.eg.051@gmail.com"">fr.e.e.l.anc.eg.051@gmail.com</a>
<a href=""mailto:f.r.ee.l.a.n.ceg.05.1@gmail.com"">f.r.ee.l.a.n.ceg.05.1@gmail.com</a>
<a href=""mailto:f.ree.lan.ce.g05.1@gmail.com"">f.ree.lan.ce.g05.1@gmail.com</a>
<a href=""mailto:freel.a.n.c.e.g0.51@gmail.com"">freel.a.n.c.e.g0.51@gmail.com</a>
<a href=""mailto:freel.anc.eg05.1@gmail.com"">freel.anc.eg05.1@gmail.com</a>
<a href=""mailto:f.r.eela.nc.eg0.51@gmail.com"">f.r.eela.nc.eg0.51@gmail.com</a>
<a href=""mailto:f.r.e.el.an.c.e.g05.1@gmail.com"">f.r.e.el.an.c.e.g05.1@gmail.com</a>
<a href=""mailto:f.r.eela.n.ce.g051@gmail.com"">f.r.eela.n.ce.g051@gmail.com</a>
<a href=""mailto:f.r.ee.l.ance.g.051@gmail.com"">f.r.ee.l.ance.g.051@gmail.com</a>
<a href=""mailto:f.r.e.e.lanceg051@gmail.com"">f.r.e.e.lanceg051@gmail.com</a>
<a href=""mailto:fr.e.elanc.eg.051@gmail.com"">fr.e.elanc.eg.051@gmail.com</a>
<a href=""mailto:fre.e.l.anc.eg.0.5.1@gmail.com"">fre.e.l.anc.eg.0.5.1@gmail.com</a>
<a href=""mailto:f.re.ela.n.ceg.051@gmail.com"">f.re.ela.n.ceg.051@gmail.com</a>
<a href=""mailto:fre.el.a.nceg05.1@gmail.com"">fre.el.a.nceg05.1@gmail.com</a>
<a href=""mailto:f.ree.lan.ceg.0.51@gmail.com"">f.ree.lan.ceg.0.51@gmail.com</a>
<a href=""mailto:fr.e.el.a.nc.eg.0.5.1@gmail.com"">fr.e.el.a.nc.eg.0.5.1@gmail.com</a>
<a href=""mailto:f.r.eelanc.eg05.1@gmail.com"">f.r.eelanc.eg05.1@gmail.com</a>
<a href=""mailto:f.r.ee.lanc.e.g051@gmail.com"">f.r.ee.lanc.e.g051@gmail.com</a>
<a href=""mailto:freel.a.nc.e.g05.1@gmail.com"">freel.a.nc.e.g05.1@gmail.com</a>
<a href=""mailto:fr.ee.l.an.ceg.05.1@gmail.com"">fr.ee.l.an.ceg.05.1@gmail.com</a>
<a href=""mailto:f.r.ee.l.anceg.05.1@gmail.com"">f.r.ee.l.anceg.05.1@gmail.com</a>
<a href=""mailto:f.re.e.la.n.c.eg.0.51@gmail.com"">f.re.e.la.n.c.eg.0.51@gmail.com</a>
<a href=""mailto:fr.e.ela.nc.e.g0.51@gmail.com"">fr.e.ela.nc.e.g0.51@gmail.com</a>
<a href=""mailto:f.r.e.e.l.a.n.ce.g0.5.1@gmail.com"">f.r.e.e.l.a.n.ce.g0.5.1@gmail.com</a>
<a href=""mailto:f.r.eel.a.n.ceg0.5.1@gmail.com"">f.r.eel.a.n.ceg0.5.1@gmail.com</a>
<a href=""mailto:fr.e.e.l.a.nc.e.g.0.51@gmail.com"">fr.e.e.l.a.nc.e.g.0.51@gmail.com</a>
<a href=""mailto:fr.eel.a.nceg.051@gmail.com"">fr.eel.a.nceg.051@gmail.com</a>
<a href=""mailto:f.re.ela.n.c.e.g0.5.1@gmail.com"">f.re.ela.n.c.e.g0.5.1@gmail.com</a>
<a href=""mailto:f.r.e.e.l.a.nc.eg0.51@gmail.com"">f.r.e.e.l.a.nc.eg0.51@gmail.com</a>
<a href=""mailto:fr.e.e.la.nc.eg0.51@gmail.com"">fr.e.e.la.nc.eg0.51@gmail.com</a>
<a href=""mailto:f.reel.a.n.ce.g.05.1@gmail.com"">f.reel.a.n.ce.g.05.1@gmail.com</a>
<a href=""mailto:fre.el.an.c.eg.05.1@gmail.com"">fre.el.an.c.eg.05.1@gmail.com</a>
<a href=""mailto:f.r.ee.l.a.nc.eg.05.1@gmail.com"">f.r.ee.l.a.nc.eg.05.1@gmail.com</a>
<a href=""mailto:fr.e.elanc.e.g.0.51@gmail.com"">fr.e.elanc.e.g.0.51@gmail.com</a>
<a href=""mailto:fr.ee.la.n.c.eg0.5.1@gmail.com"">fr.ee.la.n.c.eg0.5.1@gmail.com</a>
<a href=""mailto:f.r.ee.l.ance.g.05.1@gmail.com"">f.r.ee.l.ance.g.05.1@gmail.com</a>
<a href=""mailto:fr.ee.l.anceg.051@gmail.com"">fr.ee.l.anceg.051@gmail.com</a>
<a href=""mailto:fre.e.l.a.nceg05.1@gmail.com"">fre.e.l.a.nceg05.1@gmail.com</a>
<a href=""mailto:f.r.eel.a.nceg.0.5.1@gmail.com"">f.r.eel.a.nceg.0.5.1@gmail.com</a>
<a href=""mailto:fr.ee.l.an.ceg0.5.1@gmail.com"">fr.ee.l.an.ceg0.5.1@gmail.com</a>
<a href=""mailto:fre.e.l.a.n.c.e.g0.51@gmail.com"">fre.e.l.a.n.c.e.g0.51@gmail.com</a>
<a href=""mailto:f.re.el.a.nc.e.g0.51@gmail.com"">f.re.el.a.nc.e.g0.51@gmail.com</a>
<a href=""mailto:f.r.eelance.g051@gmail.com"">f.r.eelance.g051@gmail.com</a>
<a href=""mailto:free.l.a.n.ceg.0.5.1@gmail.com"">free.l.a.n.ceg.0.5.1@gmail.com</a>
<a href=""mailto:fr.eela.nc.eg.05.1@gmail.com"">fr.eela.nc.eg.05.1@gmail.com</a>
<a href=""mailto:f.ree.lanc.e.g0.51@gmail.com"">f.ree.lanc.e.g0.51@gmail.com</a>
<a href=""mailto:fre.ela.n.ceg.05.1@gmail.com"">fre.ela.n.ceg.05.1@gmail.com</a>
<a href=""mailto:fre.e.lanc.eg.0.51@gmail.com"">fre.e.lanc.eg.0.51@gmail.com</a>
<a href=""mailto:f.reelan.c.eg.051@gmail.com"">f.reelan.c.eg.051@gmail.com</a>
<a href=""mailto:f.ree.l.ance.g.0.5.1@gmail.com"">f.ree.l.ance.g.0.5.1@gmail.com</a>
<a href=""mailto:f.r.e.el.a.n.ce.g.05.1@gmail.com"">f.r.e.el.a.n.ce.g.05.1@gmail.com</a>
<a href=""mailto:f.re.el.a.nc.eg05.1@gmail.com"">f.re.el.a.nc.eg05.1@gmail.com</a>
<a href=""mailto:fr.eel.a.nce.g.05.1@gmail.com"">fr.eel.a.nce.g.05.1@gmail.com</a>
<a href=""mailto:fre.e.lanc.e.g.05.1@gmail.com"">fre.e.lanc.e.g.05.1@gmail.com</a>
<a href=""mailto:f.r.e.e.l.a.n.ce.g.0.51@gmail.com"">f.r.e.e.l.a.n.ce.g.0.51@gmail.com</a>
<a href=""mailto:f.r.e.e.lan.c.e.g.051@gmail.com"">f.r.e.e.lan.c.e.g.051@gmail.com</a>
<a href=""mailto:f.re.el.a.n.c.e.g.051@gmail.com"">f.re.el.a.n.c.e.g.051@gmail.com</a>
<a href=""mailto:fr.ee.l.a.nce.g0.5.1@gmail.com"">fr.ee.l.a.nce.g0.5.1@gmail.com</a>
<a href=""mailto:f.r.eela.nc.eg05.1@gmail.com"">f.r.eela.nc.eg05.1@gmail.com</a>
<a href=""mailto:fre.el.anc.e.g051@gmail.com"">fre.el.anc.e.g051@gmail.com</a>
<a href=""mailto:f.re.el.an.ceg.05.1@gmail.com"">f.re.el.an.ceg.05.1@gmail.com</a>
<a href=""mailto:fr.e.el.an.ce.g.0.51@gmail.com"">fr.e.el.an.ce.g.0.51@gmail.com</a>
<a href=""mailto:f.r.e.e.l.a.n.c.eg051@gmail.com"">f.r.e.e.l.a.n.c.eg051@gmail.com</a>
<a href=""mailto:free.la.n.c.eg0.51@gmail.com"">free.la.n.c.eg0.51@gmail.com</a>
<a href=""mailto:fre.el.anceg.05.1@gmail.com"">fre.el.anceg.05.1@gmail.com</a>
<a href=""mailto:fr.e.ela.n.ceg.05.1@gmail.com"">fr.e.ela.n.ceg.05.1@gmail.com</a>
<a href=""mailto:f.re.ela.nc.eg.051@gmail.com"">f.re.ela.nc.eg.051@gmail.com</a>
<a href=""mailto:f.r.eel.an.c.e.g05.1@gmail.com"">f.r.eel.an.c.e.g05.1@gmail.com</a>
<a href=""mailto:fr.ee.la.nc.eg051@gmail.com"">fr.ee.la.nc.eg051@gmail.com</a>
<a href=""mailto:f.re.e.lan.c.e.g.051@gmail.com"">f.re.e.lan.c.e.g.051@gmail.com</a>
<a href=""mailto:f.re.el.a.nceg.0.51@gmail.com"">f.re.el.a.nceg.0.51@gmail.com</a>
<a href=""mailto:f.re.el.a.nc.e.g051@gmail.com"">f.re.el.a.nc.e.g051@gmail.com</a>
<a href=""mailto:fre.el.a.n.ceg05.1@gmail.com"">fre.el.a.n.ceg05.1@gmail.com</a>
<a href=""mailto:f.r.e.el.a.n.c.e.g.0.51@gmail.com"">f.r.e.el.a.n.c.e.g.0.51@gmail.com</a>
<a href=""mailto:free.la.nc.eg05.1@gmail.com"">free.la.nc.eg05.1@gmail.com</a>
<a href=""mailto:f.re.el.a.n.c.e.g.0.51@gmail.com"">f.re.el.a.n.c.e.g.0.51@gmail.com</a>
<a href=""mailto:f.r.e.ela.n.ce.g051@gmail.com"">f.r.e.ela.n.ce.g051@gmail.com</a>
<a href=""mailto:free.l.a.n.c.eg.0.51@gmail.com"">free.l.a.n.c.eg.0.51@gmail.com</a>
<a href=""mailto:f.r.ee.l.a.n.ceg0.51@gmail.com"">f.r.ee.l.a.n.ceg0.51@gmail.com</a>
<a href=""mailto:freela.nc.eg0.51@gmail.com"">freela.nc.eg0.51@gmail.com</a>
<a href=""mailto:f.r.eela.nc.e.g0.51@gmail.com"">f.r.eela.nc.e.g0.51@gmail.com</a>
<a href=""mailto:f.re.e.l.a.nceg.0.5.1@gmail.com"">f.re.e.l.a.nceg.0.5.1@gmail.com</a>
<a href=""mailto:fr.ee.l.a.nc.e.g.0.5.1@gmail.com"">fr.ee.l.a.nc.e.g.0.5.1@gmail.com</a>
<a href=""mailto:f.re.elan.c.eg05.1@gmail.com"">f.re.elan.c.eg05.1@gmail.com</a>
<a href=""mailto:fr.e.el.anceg.0.51@gmail.com"">fr.e.el.anceg.0.51@gmail.com</a>
<a href=""mailto:f.reela.n.c.eg.0.5.1@gmail.com"">f.reela.n.c.eg.0.5.1@gmail.com</a>
<a href=""mailto:fr.e.e.l.a.n.ce.g0.5.1@gmail.com"">fr.e.e.l.a.n.ce.g0.5.1@gmail.com</a>
<a href=""mailto:f.reelanceg.0.5.1@gmail.com"">f.reelanceg.0.5.1@gmail.com</a>
<a href=""mailto:f.reela.n.ce.g.0.51@gmail.com"">f.reela.n.ce.g.0.51@gmail.com</a>
<a href=""mailto:freel.a.nceg.05.1@gmail.com"">freel.a.nceg.05.1@gmail.com</a>
<a href=""mailto:fre.e.la.nc.e.g0.51@gmail.com"">fre.e.la.nc.e.g0.51@gmail.com</a>
<a href=""mailto:fr.e.e.l.a.n.ceg0.51@gmail.com"">fr.e.e.l.a.n.ceg0.51@gmail.com</a>
<a href=""mailto:free.l.a.nceg05.1@gmail.com"">free.l.a.nceg05.1@gmail.com</a>
<a href=""mailto:f.r.ee.l.a.nceg051@gmail.com"">f.r.ee.l.a.nceg051@gmail.com</a>
<a href=""mailto:f.re.ela.nceg051@gmail.com"">f.re.ela.nceg051@gmail.com</a>
<a href=""mailto:f.r.eel.a.nceg.051@gmail.com"">f.r.eel.a.nceg.051@gmail.com</a>
<a href=""mailto:f.r.ee.lan.c.eg05.1@gmail.com"">f.r.ee.lan.c.eg05.1@gmail.com</a>
<a href=""mailto:fre.e.l.an.ce.g05.1@gmail.com"">fre.e.l.an.ce.g05.1@gmail.com</a>
<a href=""mailto:fre.e.la.n.ceg0.51@gmail.com"">fre.e.la.n.ceg0.51@gmail.com</a>
<a href=""mailto:fr.e.el.a.n.ceg.0.51@gmail.com"">fr.e.el.a.n.ceg.0.51@gmail.com</a>
<a href=""mailto:fr.eela.nceg05.1@gmail.com"">fr.eela.nceg05.1@gmail.com</a>
<a href=""mailto:fr.e.e.la.n.c.e.g05.1@gmail.com"">fr.e.e.la.n.c.e.g05.1@gmail.com</a>
<a href=""mailto:fr.e.e.l.ance.g.0.5.1@gmail.com"">fr.e.e.l.ance.g.0.5.1@gmail.com</a>
<a href=""mailto:fr.e.el.anceg.051@gmail.com"">fr.e.el.anceg.051@gmail.com</a>
<a href=""mailto:f.r.e.ela.n.ceg.0.51@gmail.com"">f.r.e.ela.n.ceg.0.51@gmail.com</a>
<a href=""mailto:fr.e.e.l.a.nc.eg05.1@gmail.com"">fr.e.e.l.a.nc.eg05.1@gmail.com</a>
<a href=""mailto:fre.el.a.nc.e.g051@gmail.com"">fre.el.a.nc.e.g051@gmail.com</a>
<a href=""mailto:f.ree.l.anc.e.g0.5.1@gmail.com"">f.ree.l.anc.e.g0.5.1@gmail.com</a>
<a href=""mailto:f.r.e.elan.c.e.g.05.1@gmail.com"">f.r.e.elan.c.e.g.05.1@gmail.com</a>
<a href=""mailto:f.r.eel.a.nceg0.51@gmail.com"">f.r.eel.a.nceg0.51@gmail.com</a>
<a href=""mailto:f.r.eel.a.n.c.e.g.0.5.1@gmail.com"">f.r.eel.a.n.c.e.g.0.5.1@gmail.com</a>
<a href=""mailto:f.reel.anceg0.51@gmail.com"">f.reel.anceg0.51@gmail.com</a>
<a href=""mailto:fre.el.anc.eg0.5.1@gmail.com"">fre.el.anc.eg0.5.1@gmail.com</a>
<a href=""mailto:free.l.a.nceg0.5.1@gmail.com"">free.l.a.nceg0.5.1@gmail.com</a>
<a href=""mailto:f.re.elan.c.e.g05.1@gmail.com"">f.re.elan.c.e.g05.1@gmail.com</a>
<a href=""mailto:f.re.ela.n.c.eg051@gmail.com"">f.re.ela.n.c.eg051@gmail.com</a>
<a href=""mailto:f.r.eela.n.c.eg.0.51@gmail.com"">f.r.eela.n.c.eg.0.51@gmail.com</a>
<a href=""mailto:f.re.elan.c.e.g0.5.1@gmail.com"">f.re.elan.c.e.g0.5.1@gmail.com</a>
<a href=""mailto:f.r.ee.l.anc.e.g0.5.1@gmail.com"">f.r.ee.l.anc.e.g0.5.1@gmail.com</a>
<a href=""mailto:fre.el.a.nc.eg0.5.1@gmail.com"">fre.el.a.nc.eg0.5.1@gmail.com</a>
<a href=""mailto:fr.eela.n.ceg.0.51@gmail.com"">fr.eela.n.ceg.0.51@gmail.com</a>
<a href=""mailto:f.re.e.la.n.ceg.051@gmail.com"">f.re.e.la.n.ceg.051@gmail.com</a>
<a href=""mailto:fre.el.a.n.c.e.g0.51@gmail.com"">fre.el.a.n.c.e.g0.51@gmail.com</a>
<a href=""mailto:f.r.eela.nc.eg.0.51@gmail.com"">f.r.eela.nc.eg.0.51@gmail.com</a>
<a href=""mailto:fr.ee.l.anc.eg.05.1@gmail.com"">fr.ee.l.anc.eg.05.1@gmail.com</a>
<a href=""mailto:f.ree.l.a.nceg0.5.1@gmail.com"">f.ree.l.a.nceg0.5.1@gmail.com</a>
<a href=""mailto:fr.e.e.l.a.n.ce.g.0.51@gmail.com"">fr.e.e.l.a.n.ce.g.0.51@gmail.com</a>
<a href=""mailto:fre.ela.nc.e.g.051@gmail.com"">fre.ela.nc.e.g.051@gmail.com</a>
<a href=""mailto:f.r.e.el.a.nc.e.g.05.1@gmail.com"">f.r.e.el.a.nc.e.g.05.1@gmail.com</a>
<a href=""mailto:f.r.ee.l.anc.e.g.0.5.1@gmail.com"">f.r.ee.l.anc.e.g.0.5.1@gmail.com</a>
<a href=""mailto:f.r.e.el.a.nc.eg.0.51@gmail.com"">f.r.e.el.a.nc.eg.0.51@gmail.com</a>
<a href=""mailto:f.ree.l.anc.eg.051@gmail.com"">f.ree.l.anc.eg.051@gmail.com</a>
<a href=""mailto:f.r.e.e.l.a.n.c.eg.05.1@gmail.com"">f.r.e.e.l.a.n.c.eg.05.1@gmail.com</a>
<a href=""mailto:fr.eela.n.ceg051@gmail.com"">fr.eela.n.ceg051@gmail.com</a>
<a href=""mailto:fr.eela.n.ceg0.51@gmail.com"">fr.eela.n.ceg0.51@gmail.com</a>
<a href=""mailto:fr.e.e.l.an.ce.g.0.51@gmail.com"">fr.e.e.l.an.ce.g.0.51@gmail.com</a>
<a href=""mailto:free.la.n.ce.g05.1@gmail.com"">free.la.n.ce.g05.1@gmail.com</a>
<a href=""mailto:f.r.eel.an.c.eg051@gmail.com"">f.r.eel.an.c.eg051@gmail.com</a>
<a href=""mailto:fr.e.e.la.n.ceg051@gmail.com"">fr.e.e.la.n.ceg051@gmail.com</a>
<a href=""mailto:fr.eel.anc.eg0.5.1@gmail.com"">fr.eel.anc.eg0.5.1@gmail.com</a>
<a href=""mailto:fr.e.el.a.n.c.e.g0.51@gmail.com"">fr.e.el.a.n.c.e.g0.51@gmail.com</a>
<a href=""mailto:f.r.ee.l.a.nce.g05.1@gmail.com"">f.r.ee.l.a.nce.g05.1@gmail.com</a>
<a href=""mailto:f.re.el.a.n.ceg.0.51@gmail.com"">f.re.el.a.n.ceg.0.51@gmail.com</a>
<a href=""mailto:f.reel.a.n.ceg.0.51@gmail.com"">f.reel.a.n.ceg.0.51@gmail.com</a>
<a href=""mailto:f.r.e.e.l.a.nce.g.0.51@gmail.com"">f.r.e.e.l.a.nce.g.0.51@gmail.com</a>
<a href=""mailto:f.ree.l.anc.eg.05.1@gmail.com"">f.ree.l.anc.eg.05.1@gmail.com</a>
<a href=""mailto:fr.eelan.ceg.051@gmail.com"">fr.eelan.ceg.051@gmail.com</a>
<a href=""mailto:free.la.n.c.eg.05.1@gmail.com"">free.la.n.c.eg.05.1@gmail.com</a>
<a href=""mailto:f.r.e.e.lance.g.0.51@gmail.com"">f.r.e.e.lance.g.0.51@gmail.com</a>
<a href=""mailto:f.r.eel.an.c.eg.0.51@gmail.com"">f.r.eel.an.c.eg.0.51@gmail.com</a>
<a href=""mailto:f.r.e.ela.nc.e.g05.1@gmail.com"">f.r.e.ela.nc.e.g05.1@gmail.com</a>
<a href=""mailto:f.ree.l.an.ce.g.0.5.1@gmail.com"">f.ree.l.an.ce.g.0.5.1@gmail.com</a>
<a href=""mailto:fr.e.e.lanc.eg.0.5.1@gmail.com"">fr.e.e.lanc.eg.0.5.1@gmail.com</a>
<a href=""mailto:f.r.ee.l.anc.e.g.05.1@gmail.com"">f.r.ee.l.anc.e.g.05.1@gmail.com</a>
<a href=""mailto:f.r.ee.la.n.ce.g.051@gmail.com"">f.r.ee.la.n.ce.g.051@gmail.com</a>
<a href=""mailto:mj778192@gmail.com"">mj778192@gmail.com</a>
<a href=""mailto:mj.77.8192@gmail.com"">mj.77.8192@gmail.com</a>
<a href=""mailto:m.j7.7.8192@gmail.com"">m.j7.7.8192@gmail.com</a>
<a href=""mailto:mj.77.819.2@gmail.com"">mj.77.819.2@gmail.com</a>
<a href=""mailto:mj77.8.192@gmail.com"">mj77.8.192@gmail.com</a>
<a href=""mailto:m.j.7781.92@gmail.com"">m.j.7781.92@gmail.com</a>
<a href=""mailto:m.j.7.78.192@gmail.com"">m.j.7.78.192@gmail.com</a>
<a href=""mailto:m.j778192@gmail.com"">m.j778192@gmail.com</a>
<a href=""mailto:mj7.78192@gmail.com"">mj7.78192@gmail.com</a>
<a href=""mailto:m.j77.8.1.9.2@gmail.com"">m.j77.8.1.9.2@gmail.com</a>
<a href=""mailto:mj7.78.1.9.2@gmail.com"">mj7.78.1.9.2@gmail.com</a>
<a href=""mailto:mj.77.8.1.92@gmail.com"">mj.77.8.1.92@gmail.com</a>
<a href=""mailto:mj.7.7.8.192@gmail.com"">mj.7.7.8.192@gmail.com</a>
<a href=""mailto:m.j.7.78.1.9.2@gmail.com"">m.j.7.78.1.9.2@gmail.com</a>
<a href=""mailto:m.j7.78192@gmail.com"">m.j7.78192@gmail.com</a>
<a href=""mailto:mj77.8.19.2@gmail.com"">mj77.8.19.2@gmail.com</a>
<a href=""mailto:mj7.7.8.1.9.2@gmail.com"">mj7.7.8.1.9.2@gmail.com</a>
<a href=""mailto:mj.778.192@gmail.com"">mj.778.192@gmail.com</a>
<a href=""mailto:mj.7.78.1.9.2@gmail.com"">mj.7.78.1.9.2@gmail.com</a>
<a href=""mailto:mj7.78.1.92@gmail.com"">mj7.78.1.92@gmail.com</a>
<a href=""mailto:m.j.7.7.8.19.2@gmail.com"">m.j.7.7.8.19.2@gmail.com</a>
<a href=""mailto:m.j7.781.9.2@gmail.com"">m.j7.781.9.2@gmail.com</a>
<a href=""mailto:m.j.778.19.2@gmail.com"">m.j.778.19.2@gmail.com</a>
<a href=""mailto:mj778.192@gmail.com"">mj778.192@gmail.com</a>
<a href=""mailto:m.j7.78.1.92@gmail.com"">m.j7.78.1.92@gmail.com</a>
<a href=""mailto:m.j7.7819.2@gmail.com"">m.j7.7819.2@gmail.com</a>
<a href=""mailto:m.j7.781.92@gmail.com"">m.j7.781.92@gmail.com</a>
<a href=""mailto:m.j.77.81.92@gmail.com"">m.j.77.81.92@gmail.com</a>
<a href=""mailto:m.j7.7.8.1.92@gmail.com"">m.j7.7.8.1.92@gmail.com</a>
<a href=""mailto:mj77.8.1.9.2@gmail.com"">mj77.8.1.9.2@gmail.com</a>
<a href=""mailto:m.j.77.819.2@gmail.com"">m.j.77.819.2@gmail.com</a>
<a href=""mailto:m.j778.1.9.2@gmail.com"">m.j778.1.9.2@gmail.com</a>
<a href=""mailto:m.j7.7.81.92@gmail.com"">m.j7.7.81.92@gmail.com</a>
<a href=""mailto:m.j.7.7819.2@gmail.com"">m.j.7.7819.2@gmail.com</a>
<a href=""mailto:mj.7.78.1.92@gmail.com"">mj.7.78.1.92@gmail.com</a>
<a href=""mailto:mj.7.7819.2@gmail.com"">mj.7.7819.2@gmail.com</a>
<a href=""mailto:m.j77.819.2@gmail.com"">m.j77.819.2@gmail.com</a>
<a href=""mailto:m.j77.81.9.2@gmail.com"">m.j77.81.9.2@gmail.com</a>
<a href=""mailto:m.j.7.78.1.92@gmail.com"">m.j.7.78.1.92@gmail.com</a>
<a href=""mailto:mj.7.7.8.1.92@gmail.com"">mj.7.7.8.1.92@gmail.com</a>
<a href=""mailto:m.j.7781.9.2@gmail.com"">m.j.7781.9.2@gmail.com</a>
<a href=""mailto:mj7.7.8.192@gmail.com"">mj7.7.8.192@gmail.com</a>
<a href=""mailto:m.j7.7.8.19.2@gmail.com"">m.j7.7.8.19.2@gmail.com</a>
<a href=""mailto:mj7.781.9.2@gmail.com"">mj7.781.9.2@gmail.com</a>
<a href=""mailto:mj77819.2@gmail.com"">mj77819.2@gmail.com</a>
<a href=""mailto:mj778.19.2@gmail.com"">mj778.19.2@gmail.com</a>
<a href=""mailto:mj.7.7.8192@gmail.com"">mj.7.7.8192@gmail.com</a>
<a href=""mailto:mj7781.9.2@gmail.com"">mj7781.9.2@gmail.com</a>
<a href=""mailto:mj77.8.1.92@gmail.com"">mj77.8.1.92@gmail.com</a>
<a href=""mailto:m.j.7.7.8.192@gmail.com"">m.j.7.7.8.192@gmail.com</a>
<a href=""mailto:mj7.7.81.92@gmail.com"">mj7.7.81.92@gmail.com</a>
<a href=""mailto:mj.77.8.19.2@gmail.com"">mj.77.8.19.2@gmail.com</a>
<a href=""mailto:mj7.78.192@gmail.com"">mj7.78.192@gmail.com</a>
<a href=""mailto:m.j7.7.819.2@gmail.com"">m.j7.7.819.2@gmail.com</a>
<a href=""mailto:m.j7781.92@gmail.com"">m.j7781.92@gmail.com</a>
<a href=""mailto:mj77.8192@gmail.com"">mj77.8192@gmail.com</a>
<a href=""mailto:m.j.778192@gmail.com"">m.j.778192@gmail.com</a>
<a href=""mailto:mj7.7.8.19.2@gmail.com"">mj7.7.8.19.2@gmail.com</a>
<a href=""mailto:m.j.7.7.8.1.9.2@gmail.com"">m.j.7.7.8.1.9.2@gmail.com</a>
<a href=""mailto:m.j.7.7.8192@gmail.com"">m.j.7.7.8192@gmail.com</a>
<a href=""mailto:mj.7.7.8.19.2@gmail.com"">mj.7.7.8.19.2@gmail.com</a>
<a href=""mailto:m.j7.7.81.9.2@gmail.com"">m.j7.7.81.9.2@gmail.com</a>
<a href=""mailto:m.j.7.78192@gmail.com"">m.j.7.78192@gmail.com</a>
<a href=""mailto:mj.778192@gmail.com"">mj.778192@gmail.com</a>
<a href=""mailto:mj.7781.9.2@gmail.com"">mj.7781.9.2@gmail.com</a>
<a href=""mailto:m.j.7.781.92@gmail.com"">m.j.7.781.92@gmail.com</a>
<a href=""mailto:m.j.7.7.81.9.2@gmail.com"">m.j.7.7.81.9.2@gmail.com</a>
<a href=""mailto:mj77.81.9.2@gmail.com"">mj77.81.9.2@gmail.com</a>
<a href=""mailto:mj.7.7.81.92@gmail.com"">mj.7.7.81.92@gmail.com</a>
<a href=""mailto:mj7.7819.2@gmail.com"">mj7.7819.2@gmail.com</a>
<a href=""mailto:m.j.7.7.8.1.92@gmail.com"">m.j.7.7.8.1.92@gmail.com</a>
<a href=""mailto:mj.77.81.9.2@gmail.com"">mj.77.81.9.2@gmail.com</a>
<a href=""mailto:m.j.77.8.192@gmail.com"">m.j.77.8.192@gmail.com</a>
<a href=""mailto:mj7.78.19.2@gmail.com"">mj7.78.19.2@gmail.com</a>
<a href=""mailto:m.j7.78.192@gmail.com"">m.j7.78.192@gmail.com</a>
<a href=""mailto:m.j.778.1.92@gmail.com"">m.j.778.1.92@gmail.com</a>
<a href=""mailto:mj7.7.8192@gmail.com"">mj7.7.8192@gmail.com</a>
<a href=""mailto:mj.77.8.1.9.2@gmail.com"">mj.77.8.1.9.2@gmail.com</a>
<a href=""mailto:m.j77.8.1.92@gmail.com"">m.j77.8.1.92@gmail.com</a>
<a href=""mailto:m.j7.78.1.9.2@gmail.com"">m.j7.78.1.9.2@gmail.com</a>
<a href=""mailto:m.j7.7.8.192@gmail.com"">m.j7.7.8.192@gmail.com</a>
<a href=""mailto:mj.778.19.2@gmail.com"">mj.778.19.2@gmail.com</a>
<a href=""mailto:mj7.7.8.1.92@gmail.com"">mj7.7.8.1.92@gmail.com</a>
<a href=""mailto:mj.7.781.92@gmail.com"">mj.7.781.92@gmail.com</a>
<a href=""mailto:mj.7.781.9.2@gmail.com"">mj.7.781.9.2@gmail.com</a>
<a href=""mailto:m.j.7.781.9.2@gmail.com"">m.j.7.781.9.2@gmail.com</a>
<a href=""mailto:m.j.7.78.19.2@gmail.com"">m.j.7.78.19.2@gmail.com</a>
<a href=""mailto:m.j778.192@gmail.com"">m.j778.192@gmail.com</a>
<a href=""mailto:m.j778.19.2@gmail.com"">m.j778.19.2@gmail.com</a>
<a href=""mailto:m.j778.1.92@gmail.com"">m.j778.1.92@gmail.com</a>
<a href=""mailto:m.j77.8.19.2@gmail.com"">m.j77.8.19.2@gmail.com</a>
<a href=""mailto:m.j.7.7.81.92@gmail.com"">m.j.7.7.81.92@gmail.com</a>
<a href=""mailto:mj.7.78.19.2@gmail.com"">mj.7.78.19.2@gmail.com</a>
<a href=""mailto:mj77.81.92@gmail.com"">mj77.81.92@gmail.com</a>
<a href=""mailto:mj.77.81.92@gmail.com"">mj.77.81.92@gmail.com</a>
<a href=""mailto:mj.7.7.81.9.2@gmail.com"">mj.7.7.81.9.2@gmail.com</a>
<a href=""mailto:mj.778.1.9.2@gmail.com"">mj.778.1.9.2@gmail.com</a>
<a href=""mailto:mj778192@gmail.com"">mj778192@gmail.com</a>
<a href=""mailto:mj.7781.92@gmail.com"">mj.7781.92@gmail.com</a>
<a href=""mailto:mj.77.8.192@gmail.com"">mj.77.8.192@gmail.com</a>
<a href=""mailto:m.j.77.81.9.2@gmail.com"">m.j.77.81.9.2@gmail.com</a>
<a href=""mailto:m.j77819.2@gmail.com"">m.j77819.2@gmail.com</a>
<a href=""mailto:m.j.77.8.19.2@gmail.com"">m.j.77.8.19.2@gmail.com</a>
<a href=""mailto:mj778.1.9.2@gmail.com"">mj778.1.9.2@gmail.com</a>
<a href=""mailto:m.j77.8192@gmail.com"">m.j77.8192@gmail.com</a>
<a href=""mailto:m.j.778.1.9.2@gmail.com"">m.j.778.1.9.2@gmail.com</a>
<a href=""mailto:m.j.77.8192@gmail.com"">m.j.77.8192@gmail.com</a>
<a href=""mailto:mj7.781.92@gmail.com"">mj7.781.92@gmail.com</a>
<a href=""mailto:mj.7.7.8.1.9.2@gmail.com"">mj.7.7.8.1.9.2@gmail.com</a>
<a href=""mailto:m.j.7.7.819.2@gmail.com"">m.j.7.7.819.2@gmail.com</a>
<a href=""mailto:m.j7781.9.2@gmail.com"">m.j7781.9.2@gmail.com</a>
<a href=""mailto:m.j.778.192@gmail.com"">m.j.778.192@gmail.com</a>
<a href=""mailto:m.j77.81.92@gmail.com"">m.j77.81.92@gmail.com</a>
<a href=""mailto:m.j7.78.19.2@gmail.com"">m.j7.78.19.2@gmail.com</a>
<a href=""mailto:m.j.77.8.1.92@gmail.com"">m.j.77.8.1.92@gmail.com</a>
<a href=""mailto:m.j77.8.192@gmail.com"">m.j77.8.192@gmail.com</a>
<a href=""mailto:mj.77819.2@gmail.com"">mj.77819.2@gmail.com</a>
<a href=""mailto:m.j.77.8.1.9.2@gmail.com"">m.j.77.8.1.9.2@gmail.com</a>
<a href=""mailto:m.j7.7.8.1.9.2@gmail.com"">m.j7.7.8.1.9.2@gmail.com</a>
<a href=""mailto:mj.7.78.192@gmail.com"">mj.7.78.192@gmail.com</a>
<a href=""mailto:mj.7.7.819.2@gmail.com"">mj.7.7.819.2@gmail.com</a>
<a href=""mailto:m.j.77819.2@gmail.com"">m.j.77819.2@gmail.com</a>
<a href=""mailto:mj77.819.2@gmail.com"">mj77.819.2@gmail.com</a>
<a href=""mailto:mj7.7.81.9.2@gmail.com"">mj7.7.81.9.2@gmail.com</a>
<a href=""mailto:mj.7.78192@gmail.com"">mj.7.78192@gmail.com</a>
<a href=""mailto:mj.778.1.92@gmail.com"">mj.778.1.92@gmail.com</a>
<a href=""mailto:mj778.1.92@gmail.com"">mj778.1.92@gmail.com</a>
<a href=""mailto:mj7781.92@gmail.com"">mj7781.92@gmail.com</a>
<a href=""mailto:mj7.7.819.2@gmail.com"">mj7.7.819.2@gmail.com</a>"
Vh1yEABi,atlasoss login stystem,atlasim,Lua,Sunday 29th of October 2023 01:43:47 PM CDT,"-- AtlasOS Login System

local users = { {""user1"", ""user1""}, {""user2"", ""user2""} }
local loggedin = false
old_terminate = os.pullEvent
os.pullEvent = os.pullEventRaw
currentuser = ""none""

function titlebar(title)
    term.clear()
    term.setTextColor(colors.yellow)
    term.setCursorPos(1,1)
    term.write(title)
    term.setTextColor(colors.white)
    term.setCursorPos(1,2)
end

while loggedin == false do 
    titlebar(""Login"")
    term.setCursorPos(1,2)

    term.write(""Username > "")
    local user = read()

    term.setCursorPos(1,3)
    local pass = read(""*"")

    for _,u in pairs(users) do
        if user == ""shutdown"" then
            os.shutdown()
        elseif (user == u[1]) and (pass == u[2]) then
            term.clear()
            temr.setCursorPos(1,1)
            os.pullEvent = old_terminate
            currentuser = u[1]
            shell.run(""/rom/programs/shell.lua"")
            os.pullEvent = os.pullEventRaw
            currentuser = ""none""
        else
            local a = 1
        end
    end
end
"
bKfzRDh9,Google App Script,shihabsikder,JavaScript,Sunday 29th of October 2023 12:50:42 PM CDT,"function updateSheetWithCalendarEvents() {
    var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
    var calendar = CalendarApp.getCalendarById('YOUR_GMAIL');
    
    // Preserve initial data rows
    var initialData = sheet.getRange(2, 1, sheet.getLastRow(), 4).getValues();

    // Clear the entire sheet
    sheet.clear();

    // Re-write the headers and initial data rows
    sheet.getRange(1, 1, 1, 4).setValues([['First name', 'Surname', 'Email', 'Company']]);
    sheet.getRange(2, 1, initialData.length, 4).setValues(initialData);
    
    var learnerEmails = initialData.map(row => row[2]);
    var emailRowMapping = createEmailRowMapping(sheet, learnerEmails); 
    
    var startDate = new Date();
    startDate.setMonth(6);  // 0-based month, so 6 is July
    startDate.setDate(1);
    
    var endDate = new Date(startDate);
    endDate.setFullYear(startDate.getFullYear() + 1);
    
    var events;
    try {
        events = calendar.getEvents(startDate, endDate);
    } catch (e) {
        Logger.log('Error fetching events: ' + e.toString());
        return;
    }
    
    var relevantEvents = events.filter(function(event) {
        return event.getGuestList().some(guest => learnerEmails.includes(guest.getEmail()));
    });

    var monthYearColumns = {};

    for (var event of relevantEvents) {
        var date = event.getStartTime();
        var title = event.getTitle();
        var monthYear = date.toLocaleDateString('default', { month: 'short', year: 'numeric' });
        
        if (!monthYearColumns[monthYear]) {
            monthYearColumns[monthYear] = findMonthYearColumn(sheet, monthYear);
        }
        
        var eventColumn = monthYearColumns[monthYear];
        var uniqueTitle = title + "" "" + date.toLocaleDateString();
        var guests = event.getGuestList().map(guest => guest.getEmail()).filter(email => learnerEmails.includes(email));
        
        for (var guestEmail of guests) {
            var guestRow = emailRowMapping[guestEmail] || -1;
            if (guestRow !== -1) {
                sheet.getRange(guestRow, eventColumn).setValue(uniqueTitle);
                sheet.getRange(guestRow, eventColumn).setBackground(""#ADD8E6"");
            }
        }
    }
    highlightCallsToBeBooked(sheet);
    beautifySheet(sheet);
    freezePanes(sheet);
}

function createEmailRowMapping(sheet, emails) {
    var mapping = {};
    var lastRow = sheet.getLastRow();
    var sheetEmails = sheet.getRange(2, 3, lastRow - 1, 1).getValues();
    for (var i = 0; i < sheetEmails.length; i++) {
        if (emails.includes(sheetEmails[i][0])) {
            mapping[sheetEmails[i][0]] = i + 2;
        }
    }
    return mapping;
}

function findMonthYearColumn(sheet, monthYear) {
    var lastColumn = sheet.getLastColumn();
    var headers = sheet.getRange(1, 1, 1, lastColumn).getValues()[0];
    
    var monthColumnIndex = headers.indexOf(monthYear);
    if (monthColumnIndex !== -1) {
        return monthColumnIndex + 1;
    } else {
        var newColumnIndex = 5;
        while (headers[newColumnIndex - 1] && newColumnIndex <= lastColumn) {
            newColumnIndex++;
        }
        sheet.getRange(1, newColumnIndex).setValue(monthYear);
        return newColumnIndex;
    }
}

function highlightCallsToBeBooked(sheet) {
    var lastRow = sheet.getLastRow();
    var currentDate = new Date();
    var nextMonthYear = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1).toLocaleDateString('default', { month: 'short', year: 'numeric' });
    
    for (var i = 2; i <= lastRow; i++) {
        var lastEventDate = null;
        var lastColumnWithEvent = 4;
        while (sheet.getRange(i, lastColumnWithEvent).getValue()) {
            var cellValue = sheet.getRange(i, lastColumnWithEvent).getValue();
            var eventDate = new Date(cellValue.split(' ').slice(-1)[0]);
            lastEventDate = eventDate;
            lastColumnWithEvent++;
        }
        
        if (lastEventDate) {
            var timeDiff = currentDate - lastEventDate;
            var diffWeeks = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 7));
            if (diffWeeks >= 4) {
                var nextMonthColumn = findMonthYearColumn(sheet, nextMonthYear);
                sheet.getRange(i, nextMonthColumn).setBackground(""#FF0000"");
            }
        }
    }
}

function beautifySheet(sheet) {
    var lastRow = sheet.getLastRow();
    var lastColumn = sheet.getLastColumn();
    
    sheet.getRange(1, 1, 1, lastColumn).setFontWeight('bold').setBackground('#DCEEFB');
    
    for (var i = 2; i <= lastRow; i+=2) {
        sheet.getRange(i, 1, 1, lastColumn).setBackground('#E9F5FE');
    }
    
    sheet.getRange(1, 1, lastRow, lastColumn).setBorder(true, true, true, true, true, true);
    sheet.autoResizeColumns(1, lastColumn);
}

function freezePanes(sheet) {
    sheet.setFrozenRows(1);
    sheet.setFrozenColumns(4);
}

// [The New Function]

function beautifyMetricsSheet() {
  var sheet = SpreadsheetApp.getActive().getSheetByName(""User Metrics"");
  var lastRow = sheet.getLastRow();
  var lastColumn = sheet.getLastColumn();

  // Apply styles to the header row
  var headerRange = sheet.getRange(1, 1, 1, lastColumn);
  headerRange.setFontWeight('bold');
  headerRange.setBackground('#DCEEFB');

  // Apply alternating row background color
  for (var i = 2; i <= lastRow; i += 2) {
    var dataRange = sheet.getRange(""A:I"")
    dataRange.setBackground('#E9F5FE');
  }

  // Apply borders to all cells
  var borderRange = sheet.getRange(""A:I"")
  borderRange.setBorder(true, true, true, true, true, true);

  // Set data background color, border, and center-align text for the ""Last Contacted Week"" column
  var weeksAgoColumn = sheet.getRange(2, 9, lastRow - 1);
  weeksAgoColumn.setBackground('#d9edf7'); // Data background color
  weeksAgoColumn.setBorder(true, true, true, true, true, true, '#31708f', SpreadsheetApp.BorderStyle.SOLID); // Data border
  weeksAgoColumn.setHorizontalAlignment('center'); // Center-align text

  // Set hover text for the ""Last Contacted Week"" column
  var tooltips = [];
  for (var i = 0; i < lastRow - 1; i++) {
    var weeksAgoValue = sheet.getRange(i + 2, 9).getValue();
    var tooltip = weeksAgoValue + ' ago';
    tooltips.push([tooltip]);
  }
  weeksAgoColumn.setNotes(tooltips);
}

function getMonthName(month) {
  var monthNames = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""];
  return monthNames[month];
}

function createUserMetrics() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var dataSheet = ss.getSheetByName(""Sheet1"");
  var data = dataSheet.getRange(2, 1, dataSheet.getLastRow() - 1, dataSheet.getLastColumn()).getValues();

  // Clear the existing ""User Metrics"" sheet, if it exists
  var metricsSheet = ss.getSheetByName('User Metrics');
  if (metricsSheet) {
    ss.deleteSheet(metricsSheet);
  }

  var eventCounts = [];

  // Initialize counts for each event type
  for (var i = 0; i < data.length; i++) {
    var rowData = data[i];
    var counts = {
      'LSC Call': 0,
      'Progress Review': 0,
      'Kick Off Call': 0
    };
    
    var latestEncounterDate = new Date(0); // Initialize with the earliest possible date
    var hasDate = false; // Flag to check if the row contains at least one date

    // Iterate through the columns containing events
    for (var j = 4; j < rowData.length; j++) {
      var event = rowData[j];
      if (event) {
        if (event.indexOf('LSC Call') !== -1) {
          counts['LSC Call']++;
        }
        if (event.indexOf('Progress Review') !== -1) {
          counts['Progress Review']++;
        }
        if (event.indexOf('Kick Off Call') !== -1) {
          counts['Kick Off Call']++;
        }

        // Extract the date from the event description
        var dateMatch = event.match(/\d{1,2}\/\d{1,2}\/\d{4}/);
        if (dateMatch) {
          var encounterDate = new Date(dateMatch[0]);
          if (encounterDate > latestEncounterDate && encounterDate <= new Date()) {
            latestEncounterDate = encounterDate;
          }
          hasDate = true;
        }
      }
    }

    // Include the ""First name,"" ""Surname,"" ""Email,"" ""Company,"" event counts, and the latest encounter date (if it exists)
    var firstName = rowData[0];
    var surname = rowData[1];
    var email = rowData[2];
    var company = rowData[3];

    // Calculate weeks ago
    var weeksAgo = calculateWeeksAgo(latestEncounterDate);

    // Check if there are no dates in the row and format it red
    if (!hasDate) {
      eventCounts.push([firstName, surname, email, company, counts['LSC Call'], counts['Progress Review'], counts['Kick Off Call'], '', '']);
    } else {
      var weeksAgoText = weeksAgo;
      eventCounts.push([firstName, surname, email, company, counts['LSC Call'], counts['Progress Review'], counts['Kick Off Call'], latestEncounterDate, weeksAgoText]);
    }
  }

  // Create a new sheet to display the user metrics
  var metricsSheet = ss.insertSheet('User Metrics');
  metricsSheet.getRange(1, 1, 1, 9).setValues([['First name', 'Surname', 'Email', 'Company', 'LSC Call Count', 'Progress Review Count', 'Kick Off Call Count', 'Latest Encounter Date', 'Last Contacted Week']]);
  metricsSheet.getRange(2, 1, eventCounts.length, 9).setValues(eventCounts);

  // Auto-resize columns for better formatting
  metricsSheet.autoResizeColumns(1, 9);
  metricsSheet.setFrozenRows(1);
  metricsSheet.setFrozenColumns(4);
  
  // Set the date format for the ""Latest Encounter Date"" column
  var dateColumn = metricsSheet.getRange(2, 8, eventCounts.length);
  dateColumn.setNumberFormat('dd mmmm yyyy');
  
  // Apply conditional formatting to the ""Latest Encounter Date"" column
  var now = new Date();
  var fourWeeksAgo = new Date(now.getTime() - 4 * 7 * 24 * 60 * 60 * 1000); // 4 weeks ago
  
  var rule1 = SpreadsheetApp.newConditionalFormatRule()
    .whenDateEqualTo(fourWeeksAgo)
    .whenDateAfter(fourWeeksAgo)
    .setBackground('#00FF00') // Green
    .setRanges([dateColumn])
    .build();
  
  var rule2 = SpreadsheetApp.newConditionalFormatRule()
    .whenDateBefore(fourWeeksAgo)
    .setBackground('#FF0000') // Red
    .setRanges([dateColumn])
    .build();
  
  var rules = [rule1, rule2];
  metricsSheet.setConditionalFormatRules(rules);

   // Apply styles to the ""Last Contacted Week"" column
  var weeksAgoColumn = metricsSheet.getRange(2, 9, eventCounts.length);

  // Set styles for the data in the ""Last Contacted Week"" column
  weeksAgoColumn.setBackground('#d9edf7'); // Data background color
  weeksAgoColumn.setBorder(true, true, true, true, true, true, '#31708f', SpreadsheetApp.BorderStyle.SOLID); // Data border
  weeksAgoColumn.setHorizontalAlignment('center'); // Center-align text

  // Set hover text for the ""Last Contacted Week"" column
  var tooltips = [];
  for (var i = 0; i < eventCounts.length; i++) {
    var weeksAgoValue = eventCounts[i][8];
    var tooltip = weeksAgoValue + ' ago';
    tooltips.push([tooltip]);
  }
  weeksAgoColumn.setNotes(tooltips);

  // Auto-resize columns for better formatting
  metricsSheet.autoResizeColumns(1, 9);
  metricsSheet.setFrozenRows(1);
  metricsSheet.setFrozenColumns(4);
  // createVisualizations();
  beautifyMetricsSheet();
}

function calculateWeeksAgo(date) {
  var now = new Date();
  var diff = now - date;
  var days = Math.floor(diff / (24 * 60 * 60 * 1000));
  var weeks = Math.floor(days / 7);
  var remainingDays = days % 7;
  var result = '';

  if (weeks > 0) {
    result += weeks + (weeks === 1 ? ' week' : ' weeks');
    if (remainingDays > 0) {
      result += ' ' + remainingDays + (remainingDays === 1 ? ' day' : ' days');
    }
  } else {
    result = remainingDays + (remainingDays === 1 ? ' day' : ' days');
  }
  return result;
}

function prepareDataForVisualizations() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var metricsSheet = ss.getSheetByName('User Metrics');
  var dataRange = metricsSheet.getDataRange().getValues();
  
  var weeksData = {}

  var weekdayData = {
    'Saturday': 0,
    'Sunday': 0,
    'Monday': 0,
    'Tuesday': 0,
    'Wednesday': 0,
    'Thursday': 0,
    'Friday': 0,
  };

  var redUsers = 0;
  var greenUsers = 0;
  
  for (var i = 1; i < dataRange.length; i++) { // Start from row 2 to skip the header
    var weeksAgo = dataRange[i][8]; // Assuming the ""Last Contacted Week"" column is in column 9
    var latestEncounterDate = new Date(dataRange[i][7]); // Assuming the ""Latest Encounter Date"" column is in column 8
    var isRed = latestEncounterDate <= new Date() - (4 * 7 * 24 * 60 * 60 * 1000); // Red if last contact is 4+ weeks ago

    // Update weeksData
    var weekNo = weeksAgo.split("" "")[0]
    Logger.log(`${weekNo} Weeks`)
    if(weekNo)
      weeksData[`${weekNo} Weeks`] = weeksData[`${weekNo} Weeks`]? weeksData[`${weekNo} Weeks`]+1:1;
    // Update weekdayData
    if (latestEncounterDate) {
      var dayOfWeek = latestEncounterDate.getDay();
      var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      if(dayNames[dayOfWeek])
        weekdayData[dayNames[dayOfWeek]]++;
    }

    // Update red and green user counts
    if (isRed) {
      redUsers++;
    } else {
      greenUsers++;
    }
  }

  var data = {
    weeksData: weeksData,
    weekdayData: weekdayData,
    redUsers: redUsers,
    greenUsers: greenUsers,
  };

  return data;
}

function createVisualizations(){
  const data = prepareDataForVisualizations()
  createWeeksBarChart(data.weeksData)
  createWeekdayBarChart(data.weekdayData)
  generateCombinedChart()
}

function createWeeksBarChart(weeksData) {
  Logger.log(weeksData)
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(""User Metrics"");
  // Define the range where you want to place the chart data
  var chartRange = sheet.getRange(""J10:K14"");
  
  // Prepare the data and set it to the range
  var data = [
    [""2 Weeks"", weeksData[""2 Weeks""] || 0],
    [""3 Weeks"", weeksData[""3 Weeks""] || 0],
    [""4 Weeks"", weeksData[""4 Weeks""] || 0],
    [""5 Weeks"", weeksData[""5 Weeks""] || 0],
    [""6 Weeks"", weeksData[""6 Weeks""] || 0]
  ];
  
  chartRange.setValues(data);

  // Create the chart
  var chartBuilder = sheet.newChart();
  var chart = chartBuilder
    .setChartType(Charts.ChartType.BAR)
    .addRange(chartRange)
    .setPosition(1, 10, 0, 0)
    .setOption('title', 'Number of User vs Contactless Weeks')
    .setOption('height',250)
    .setOption('width',400)
    .setOption('vAxis', { title: 'Weeks' })
    .setOption('hAxis', { title: 'Frequency' })
    .build();
  // Insert the chart into the sheet
  sheet.insertChart(chart);
}

function createWeekdayBarChart(weekdayData) {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(""User Metrics"");
  // Define the range where you want to place the chart data
  var chartRange = sheet.getRange(""L10:M16"");
  
  // Prepare the data and set it to the range
  var data = [
    [""Monday"", weekdayData[""Monday""] || 0],
    [""Tuesday"", weekdayData[""Tuesday""] || 0],
    [""Wednesday"", weekdayData[""Wednesday""] || 0],
    [""Thursday"", weekdayData[""Thursday""] || 0],
    [""Friday"", weekdayData[""Friday""] || 0],
    [""Saturday"", weekdayData[""Saturday""] || 0],
    [""Sunday"", weekdayData[""Sunday""] || 0]
  ];
  
  chartRange.setValues(data);

  // Create the chart
  var chartBuilder = sheet.newChart();
  var chart = chartBuilder
    .setChartType(Charts.ChartType.COLUMN)
    .addRange(chartRange)
    .setPosition(14,10, 0, 0)
    .setOption('title', 'Weekday vs. Frequency')
    .setOption('hAxis', { title: 'Weekday' })
    .setOption('vAxis', { title: 'Frequency' })
    .setOption('height',250)
    .setOption('width',400)
    .build();

  // Insert the chart into the sheet
  sheet.insertChart(chart);
}

function countMonthlyCallCounts() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(""Sheet1"");
  var data = sheet.getDataRange().getValues();
  var monthlyCounts = {};

  for (var i = 1; i < data.length; i++) {
    var rowData = data[i];

    for (var j = 4; j < rowData.length; j++) {
      var event = rowData[j];
      if (event) {
        // Extract the date from the event description
        var dateMatch = event.match(/\d{1,2}\/\d{1,2}\/\d{4}/);
        if (dateMatch) {
          var eventDate = new Date(dateMatch[0]);
          var monthYear = eventDate.toLocaleDateString('default', { month: 'short', year: '2-digit' });

          if (!monthlyCounts[monthYear]) {
            monthlyCounts[monthYear] = { 'LSC Call': 0, 'Progress Review': 0, 'Kick Off Call': 0 };
          }

          if (event.indexOf('LSC Call') !== -1) {
            monthlyCounts[monthYear]['LSC Call']++;
          } else if (event.indexOf('Progress Review') !== -1) {
            monthlyCounts[monthYear]['Progress Review']++;
          } else if (event.indexOf('Kick Off Call') !== -1) {
            monthlyCounts[monthYear]['Kick Off Call']++;
          }
        }
      }
    }
  }

  // Sort the monthlyCounts object by keys (month and year)
  var sortedMonthlyCounts = {};
  Object.keys(monthlyCounts)
    .sort(function (a, b) {
      // Convert keys (e.g., ""Jul 22"") to sortable date format (e.g., ""2022-07-01"")
      var aDate = new Date('20' + a.split(' ')[1], monthNames.indexOf(a.split(' ')[0]), 1);
      var bDate = new Date('20' + b.split(' ')[1], monthNames.indexOf(b.split(' ')[0]), 1);

      return aDate - bDate;
    })
    .forEach(function (key) {
      sortedMonthlyCounts[key] = monthlyCounts[key];
    });

  Logger.log(sortedMonthlyCounts);
  return sortedMonthlyCounts;
}

var monthNames = [
  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
];


function generateCombinedChart() {
  var data = countMonthlyCallCounts();
  
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(""User Metrics""); // Replace with your sheet name

  var chartData = [[""Month"", ""LSC Call"", ""Progress Review"", ""Kick Off Call""]];
  
  for (var month in data) {
    chartData.push([
      month,
      data[month][""LSC Call""] || 0,
      data[month][""Progress Review""] || 0,
      data[month][""Kick Off Call""] || 0
    ]);
  }
  
  createCombinedChart(sheet, chartData);
}

function createCombinedChart(sheet, chartData) {
  var chartRange = sheet.getRange(2, 14, chartData.length, 4);
  chartRange.setValues(chartData);

  var chartBuilder = sheet.newChart();
  var chart = chartBuilder
    .setChartType(Charts.ChartType.COLUMN)
    .addRange(chartRange)
    .setPosition(2, 14, 0, 0)
    .setOption('title', 'Monthly Call Types')
    .setOption('hAxis', { title: 'Month' })
    .setOption('vAxis', { title: 'Frequency' })
    .setOption('series', {
      0: { color: 'blue' },
      1: { color: 'red' },
      2: { color: 'green' }
    })
    .setOption('height',250)
    .setOption('width',400)
    .setOption('dataLabels', 'value')
    .setOption('dataLabelFormat', {
      0: '#,##0',
      1: '#,##0',
      2: '#,##0'
    })
    .setOption('displayExactValues', true)
    .setOption('legend', { position: 'top', textStyle: { fontSize: 12 } }) // Add legend here
    .setOption('seriesType', 'bars')
    .setOption('series', { 3: { type: 'line' } })
    .setOption('series', {
      0: { labelInLegend: 'LSC Call' },
      1: { labelInLegend: 'Progress Review' },
      2: { labelInLegend: 'Kick Off Call' }
    })
    .build();

  sheet.insertChart(chart);
}






"
qkNbfiH5,Untitled,sissou123,Python,Sunday 29th of October 2023 12:38:15 PM CDT,"Python GUI Development with Tkinter: Build Pro Desktop Apps!
Mastering Python GUI Development with Tkinter: Build Professional Desktop Applications with Confidence and Ease
for more:https://cuty.io/TtOMV"
m7VHE3Ta,snowybot handbreaker,coinwalk,JavaScript,Sunday 29th of October 2023 12:35:58 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/320).toFixed(8));
var burp = nudie;
var taget = (smiley*200000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var sexual = 0;
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var fart = 1;
var woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
var manboobs = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)&&(bolance>=manboobs)) {
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)&&(bolance<manboobs)) {
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>=(manboobs+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    sexual = 0;
    fart = 1;
    burp = nudie;
    manboobs = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*3)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    sexual = 0;
    burp = nudie;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance<=(woman-(bolux*6)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    sexual = 0;
    burp = nudie;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
}, 100);
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 200);
}
get();"
PJGeW3BV,04. Replace All,Spocoman,C++,Sunday 29th of October 2023 11:54:53 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string str, oldStr, newStr;
    getline(cin, str);
    getline(cin, oldStr);
    getline(cin, newStr);

    while (str.find(oldStr) != -1) {
        str.replace(str.find(oldStr), oldStr.length(), newStr);
    }

    cout << str << endl;
    return 0;
}"
