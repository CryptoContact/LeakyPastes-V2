id,title,username,language,date,content
PB1DapWD,2024-06-29_stats.json,rdp_snitch,JSON,Saturday 29th of June 2024 07:18:09 PM CDT,"{
  ""ip"": {
    ""104.248.154.46"": 33,
    ""98.143.255.25"": 27,
    ""194.165.16.37"": 6,
    ""104.237.129.112"": 27,
    ""45.227.254.49"": 12,
    ""96.51.53.164"": 6,
    ""164.92.104.215"": 12,
    ""81.19.135.2"": 9,
    ""172.105.126.198"": 6,
    ""194.165.16.76"": 6,
    ""205.210.31.220"": 9,
    ""194.165.16.78"": 6,
    ""94.232.247.117"": 12,
    ""185.94.26.5"": 12,
    ""104.237.142.26"": 3,
    ""64.124.50.139"": 6,
    ""118.71.209.116"": 3,
    ""172.232.116.115"": 3,
    ""183.80.4.255"": 3,
    ""212.70.149.146"": 9,
    ""185.170.144.3"": 6,
    ""191.96.207.190"": 6,
    ""205.210.31.218"": 9,
    ""117.173.153.116"": 3,
    ""172.233.107.196"": 3,
    ""188.119.66.107"": 3,
    ""185.196.220.41"": 9,
    ""45.227.254.54"": 12,
    ""43.134.186.29"": 3,
    ""194.165.16.11"": 6,
    ""51.103.90.130"": 3,
    ""198.235.24.168"": 9,
    ""157.20.241.207"": 9,
    ""162.210.245.77"": 6,
    ""223.166.31.100"": 3,
    ""157.20.241.215"": 3,
    ""198.235.24.77"": 9,
    ""116.140.196.215"": 3,
    ""134.209.104.88"": 3
  },
  ""asn"": {
    ""AS14061"": 48,
    ""AS3367"": 27,
    ""AS48721"": 24,
    ""AS63949"": 42,
    ""AS267784"": 24,
    ""AS6327"": 6,
    ""AS209588"": 9,
    ""AS396982"": 36,
    ""AS44477"": 12,
    ""AS62537"": 12,
    ""AS6461"": 6,
    ""AS18403"": 6,
    ""AS204428"": 9,
    ""AS197414"": 6,
    ""AS199654"": 6,
    ""AS9808"": 3,
    ""AS57523"": 3,
    ""AS208046"": 9,
    ""AS132203"": 3,
    ""AS8075"": 3,
    ""AS152565"": 12,
    ""AS397651"": 6,
    ""AS17621"": 3,
    ""AS4837"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 48,
    ""Xplornet Communications Inc."": 27,
    ""Flyservers S.A."": 57,
    ""Akamai Technologies, Inc."": 36,
    ""Shaw Communications Inc."": 6,
    ""Akamai Technologies"": 6,
    ""Google LLC"": 36,
    ""Stark Industries Solutions LTD"": 12,
    ""Sauce Labs Inc"": 12,
    ""Zayo Bandwidth"": 6,
    ""fpt"": 3,
    ""Vietnam Internet Network Information Center"": 3,
    ""SS-Net"": 9,
    ""Xhost Internet Solutions LP"": 6,
    ""Oxide Group Limited"": 6,
    ""China Mobile communications corporation"": 3,
    ""Chang Way Technologies Co. Limited"": 3,
    ""ColocationX Ltd."": 9,
    ""Aceville Pte.ltd"": 3,
    ""Microsoft"": 3,
    ""JOY SERVICES"": 12,
    ""RCI Broadband"": 6,
    ""China Unicom Shanghai Province Network"": 3,
    ""China Unicom CHINA169 Network"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 48,
    ""Unknown"": 39,
    ""Flyservers S.A"": 24,
    ""Linode"": 36,
    ""UAB Host Baltic"": 24,
    ""Shaw Communications Inc"": 6,
    ""Alviva Holding Limited"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Stark Industries Solutions LTD"": 12,
    ""Sauce Labs Inc"": 12,
    ""Microsoft Corporation"": 6,
    ""Akamai Technologies, Inc."": 6,
    ""4Media Ltd"": 9,
    ""Xhostis"": 6,
    ""Hosting Solutions"": 6,
    ""China Mobile"": 3,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Makut Investments"": 9,
    ""Microsoft Azure Cloud (francecentral)"": 3,
    ""JOY Services"": 12,
    ""10x Servers"": 6,
    ""China United Network Communications Corporation Limited"": 3
  },
  ""regionName"": {
    ""Central Singapore"": 33,
    ""New Brunswick"": 27,
    ""Kaunas"": 24,
    ""Texas"": 30,
    ""Vilnius"": 24,
    ""Alberta"": 6,
    ""California"": 48,
    ""Hesse"": 21,
    ""North West"": 9,
    ""\u00cele-de-France"": 15,
    ""Virginia"": 21,
    ""Ho Chi Minh"": 3,
    ""Tamil Nadu"": 3,
    ""Hanoi"": 3,
    ""Sofia-Capital"": 9,
    ""North Holland"": 6,
    ""Limburg"": 6,
    ""Sichuan"": 3,
    ""Madrid"": 3,
    ""Moscow"": 3,
    ""National Capital Territory of Delhi"": 12,
    ""Shanghai"": 3,
    ""Beijing"": 3,
    ""South West"": 3
  },
  ""country"": {
    ""Singapore"": 45,
    ""Canada"": 33,
    ""Lithuania"": 48,
    ""United States"": 99,
    ""Germany"": 21,
    ""France"": 15,
    ""Vietnam"": 6,
    ""India"": 15,
    ""Bulgaria"": 9,
    ""The Netherlands"": 12,
    ""China"": 9,
    ""Spain"": 3,
    ""Russia"": 3
  },
  ""account"": {
    ""hello"": 162,
    ""Test"": 63,
    ""Domain"": 27,
    ""AjtxDYkQF"": 3,
    ""KwiwyU"": 3,
    ""RYWgPE"": 3,
    ""rngqqag5"": 12,
    ""(empty)"": 9,
    ""Administr"": 9,
    ""VLVLdBbfZ"": 3,
    ""MBNEgH"": 3,
    ""ojENoq"": 3,
    ""DhrbHtqBk"": 3,
    ""ztiSBJ"": 3,
    ""lUCVhn"": 3,
    ""xDwzeLdpH"": 3,
    ""EbSuMw"": 3,
    ""IfPpnk"": 3
  },
  ""keyboard"": {
    ""Unknown"": 318
  },
  ""client_build"": {
    ""Unknown"": 318
  },
  ""client_name"": {
    ""Unknown"": 318
  },
  ""ip_type"": {
    ""hosting"": 132,
    ""Unknown"": 150,
    ""proxy"": 33,
    ""mobile"": 3
  }
}"
TJUzMqWB,🤑G2A.com Free Gift Card FIX July 2024🤑,mikyser,JavaScript,Saturday 29th of June 2024 07:17:30 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
1st of July 2024

"
paSrneXb,2024-06-29_stats.json,rdp_snitch,JSON,Saturday 29th of June 2024 07:16:12 PM CDT,"{
  ""ip"": {
    ""104.248.154.46"": 22,
    ""98.143.255.25"": 18,
    ""194.165.16.37"": 4,
    ""104.237.129.112"": 18,
    ""45.227.254.49"": 8,
    ""96.51.53.164"": 4,
    ""164.92.104.215"": 8,
    ""81.19.135.2"": 6,
    ""172.105.126.198"": 4,
    ""194.165.16.76"": 4,
    ""205.210.31.220"": 6,
    ""194.165.16.78"": 4,
    ""94.232.247.117"": 8,
    ""185.94.26.5"": 8,
    ""104.237.142.26"": 2,
    ""64.124.50.139"": 4,
    ""118.71.209.116"": 2,
    ""172.232.116.115"": 2,
    ""183.80.4.255"": 2,
    ""212.70.149.146"": 6,
    ""185.170.144.3"": 4,
    ""191.96.207.190"": 4,
    ""205.210.31.218"": 6,
    ""117.173.153.116"": 2,
    ""172.233.107.196"": 2,
    ""188.119.66.107"": 2,
    ""185.196.220.41"": 6,
    ""45.227.254.54"": 8,
    ""43.134.186.29"": 2,
    ""194.165.16.11"": 4,
    ""51.103.90.130"": 2,
    ""198.235.24.168"": 6,
    ""157.20.241.207"": 6,
    ""162.210.245.77"": 4,
    ""223.166.31.100"": 2,
    ""157.20.241.215"": 2,
    ""198.235.24.77"": 6,
    ""116.140.196.215"": 2,
    ""134.209.104.88"": 2
  },
  ""asn"": {
    ""AS14061"": 32,
    ""AS3367"": 18,
    ""AS48721"": 16,
    ""AS63949"": 28,
    ""AS267784"": 16,
    ""AS6327"": 4,
    ""AS209588"": 6,
    ""AS396982"": 24,
    ""AS44477"": 8,
    ""AS62537"": 8,
    ""AS6461"": 4,
    ""AS18403"": 4,
    ""AS204428"": 6,
    ""AS197414"": 4,
    ""AS199654"": 4,
    ""AS9808"": 2,
    ""AS57523"": 2,
    ""AS208046"": 6,
    ""AS132203"": 2,
    ""AS8075"": 2,
    ""AS152565"": 8,
    ""AS397651"": 4,
    ""AS17621"": 2,
    ""AS4837"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 32,
    ""Xplornet Communications Inc."": 18,
    ""Flyservers S.A."": 38,
    ""Akamai Technologies, Inc."": 24,
    ""Shaw Communications Inc."": 4,
    ""Akamai Technologies"": 4,
    ""Google LLC"": 24,
    ""Stark Industries Solutions LTD"": 8,
    ""Sauce Labs Inc"": 8,
    ""Zayo Bandwidth"": 4,
    ""fpt"": 2,
    ""Vietnam Internet Network Information Center"": 2,
    ""SS-Net"": 6,
    ""Xhost Internet Solutions LP"": 4,
    ""Oxide Group Limited"": 4,
    ""China Mobile communications corporation"": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""ColocationX Ltd."": 6,
    ""Aceville Pte.ltd"": 2,
    ""Microsoft"": 2,
    ""JOY SERVICES"": 8,
    ""RCI Broadband"": 4,
    ""China Unicom Shanghai Province Network"": 2,
    ""China Unicom CHINA169 Network"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 32,
    ""Unknown"": 26,
    ""Flyservers S.A"": 16,
    ""Linode"": 24,
    ""UAB Host Baltic"": 16,
    ""Shaw Communications Inc"": 4,
    ""Alviva Holding Limited"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Stark Industries Solutions LTD"": 8,
    ""Sauce Labs Inc"": 8,
    ""Microsoft Corporation"": 4,
    ""Akamai Technologies, Inc."": 4,
    ""4Media Ltd"": 6,
    ""Xhostis"": 4,
    ""Hosting Solutions"": 4,
    ""China Mobile"": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Makut Investments"": 6,
    ""Microsoft Azure Cloud (francecentral)"": 2,
    ""JOY Services"": 8,
    ""10x Servers"": 4,
    ""China United Network Communications Corporation Limited"": 2
  },
  ""regionName"": {
    ""Central Singapore"": 22,
    ""New Brunswick"": 18,
    ""Kaunas"": 16,
    ""Texas"": 20,
    ""Vilnius"": 16,
    ""Alberta"": 4,
    ""California"": 32,
    ""Hesse"": 14,
    ""North West"": 6,
    ""\u00cele-de-France"": 10,
    ""Virginia"": 14,
    ""Ho Chi Minh"": 2,
    ""Tamil Nadu"": 2,
    ""Hanoi"": 2,
    ""Sofia-Capital"": 6,
    ""North Holland"": 4,
    ""Limburg"": 4,
    ""Sichuan"": 2,
    ""Madrid"": 2,
    ""Moscow"": 2,
    ""National Capital Territory of Delhi"": 8,
    ""Shanghai"": 2,
    ""Beijing"": 2,
    ""South West"": 2
  },
  ""country"": {
    ""Singapore"": 30,
    ""Canada"": 22,
    ""Lithuania"": 32,
    ""United States"": 66,
    ""Germany"": 14,
    ""France"": 10,
    ""Vietnam"": 4,
    ""India"": 10,
    ""Bulgaria"": 6,
    ""The Netherlands"": 8,
    ""China"": 6,
    ""Spain"": 2,
    ""Russia"": 2
  },
  ""account"": {
    ""hello"": 108,
    ""Test"": 42,
    ""Domain"": 18,
    ""AjtxDYkQF"": 2,
    ""KwiwyU"": 2,
    ""RYWgPE"": 2,
    ""rngqqag5"": 8,
    ""(empty)"": 6,
    ""Administr"": 6,
    ""VLVLdBbfZ"": 2,
    ""MBNEgH"": 2,
    ""ojENoq"": 2,
    ""DhrbHtqBk"": 2,
    ""ztiSBJ"": 2,
    ""lUCVhn"": 2,
    ""xDwzeLdpH"": 2,
    ""EbSuMw"": 2,
    ""IfPpnk"": 2
  },
  ""keyboard"": {
    ""Unknown"": 212
  },
  ""client_build"": {
    ""Unknown"": 212
  },
  ""client_name"": {
    ""Unknown"": 212
  },
  ""ip_type"": {
    ""hosting"": 88,
    ""Unknown"": 100,
    ""proxy"": 22,
    ""mobile"": 2
  }
}"
f7qZuEm1,2024-06-29_stats.json,rdp_snitch,JSON,Saturday 29th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""104.248.154.46"": 11,
    ""98.143.255.25"": 9,
    ""194.165.16.37"": 2,
    ""104.237.129.112"": 9,
    ""45.227.254.49"": 4,
    ""96.51.53.164"": 2,
    ""164.92.104.215"": 4,
    ""81.19.135.2"": 3,
    ""172.105.126.198"": 2,
    ""194.165.16.76"": 2,
    ""205.210.31.220"": 3,
    ""194.165.16.78"": 2,
    ""94.232.247.117"": 4,
    ""185.94.26.5"": 4,
    ""104.237.142.26"": 1,
    ""64.124.50.139"": 2,
    ""118.71.209.116"": 1,
    ""172.232.116.115"": 1,
    ""183.80.4.255"": 1,
    ""212.70.149.146"": 3,
    ""185.170.144.3"": 2,
    ""191.96.207.190"": 2,
    ""205.210.31.218"": 3,
    ""117.173.153.116"": 1,
    ""172.233.107.196"": 1,
    ""188.119.66.107"": 1,
    ""185.196.220.41"": 3,
    ""45.227.254.54"": 4,
    ""43.134.186.29"": 1,
    ""194.165.16.11"": 2,
    ""51.103.90.130"": 1,
    ""198.235.24.168"": 3,
    ""157.20.241.207"": 3,
    ""162.210.245.77"": 2,
    ""223.166.31.100"": 1,
    ""157.20.241.215"": 1,
    ""198.235.24.77"": 3,
    ""116.140.196.215"": 1,
    ""134.209.104.88"": 1
  },
  ""asn"": {
    ""AS14061"": 16,
    ""AS3367"": 9,
    ""AS48721"": 8,
    ""AS63949"": 14,
    ""AS267784"": 8,
    ""AS6327"": 2,
    ""AS209588"": 3,
    ""AS396982"": 12,
    ""AS44477"": 4,
    ""AS62537"": 4,
    ""AS6461"": 2,
    ""AS18403"": 2,
    ""AS204428"": 3,
    ""AS197414"": 2,
    ""AS199654"": 2,
    ""AS9808"": 1,
    ""AS57523"": 1,
    ""AS208046"": 3,
    ""AS132203"": 1,
    ""AS8075"": 1,
    ""AS152565"": 4,
    ""AS397651"": 2,
    ""AS17621"": 1,
    ""AS4837"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 16,
    ""Xplornet Communications Inc."": 9,
    ""Flyservers S.A."": 19,
    ""Akamai Technologies, Inc."": 12,
    ""Shaw Communications Inc."": 2,
    ""Akamai Technologies"": 2,
    ""Google LLC"": 12,
    ""Stark Industries Solutions LTD"": 4,
    ""Sauce Labs Inc"": 4,
    ""Zayo Bandwidth"": 2,
    ""fpt"": 1,
    ""Vietnam Internet Network Information Center"": 1,
    ""SS-Net"": 3,
    ""Xhost Internet Solutions LP"": 2,
    ""Oxide Group Limited"": 2,
    ""China Mobile communications corporation"": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""ColocationX Ltd."": 3,
    ""Aceville Pte.ltd"": 1,
    ""Microsoft"": 1,
    ""JOY SERVICES"": 4,
    ""RCI Broadband"": 2,
    ""China Unicom Shanghai Province Network"": 1,
    ""China Unicom CHINA169 Network"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 16,
    ""Unknown"": 13,
    ""Flyservers S.A"": 8,
    ""Linode"": 12,
    ""UAB Host Baltic"": 8,
    ""Shaw Communications Inc"": 2,
    ""Alviva Holding Limited"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Stark Industries Solutions LTD"": 4,
    ""Sauce Labs Inc"": 4,
    ""Microsoft Corporation"": 2,
    ""Akamai Technologies, Inc."": 2,
    ""4Media Ltd"": 3,
    ""Xhostis"": 2,
    ""Hosting Solutions"": 2,
    ""China Mobile"": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Makut Investments"": 3,
    ""Microsoft Azure Cloud (francecentral)"": 1,
    ""JOY Services"": 4,
    ""10x Servers"": 2,
    ""China United Network Communications Corporation Limited"": 1
  },
  ""regionName"": {
    ""Central Singapore"": 11,
    ""New Brunswick"": 9,
    ""Kaunas"": 8,
    ""Texas"": 10,
    ""Vilnius"": 8,
    ""Alberta"": 2,
    ""California"": 16,
    ""Hesse"": 7,
    ""North West"": 3,
    ""\u00cele-de-France"": 5,
    ""Virginia"": 7,
    ""Ho Chi Minh"": 1,
    ""Tamil Nadu"": 1,
    ""Hanoi"": 1,
    ""Sofia-Capital"": 3,
    ""North Holland"": 2,
    ""Limburg"": 2,
    ""Sichuan"": 1,
    ""Madrid"": 1,
    ""Moscow"": 1,
    ""National Capital Territory of Delhi"": 4,
    ""Shanghai"": 1,
    ""Beijing"": 1,
    ""South West"": 1
  },
  ""country"": {
    ""Singapore"": 15,
    ""Canada"": 11,
    ""Lithuania"": 16,
    ""United States"": 33,
    ""Germany"": 7,
    ""France"": 5,
    ""Vietnam"": 2,
    ""India"": 5,
    ""Bulgaria"": 3,
    ""The Netherlands"": 4,
    ""China"": 3,
    ""Spain"": 1,
    ""Russia"": 1
  },
  ""account"": {
    ""hello"": 54,
    ""Test"": 21,
    ""Domain"": 9,
    ""AjtxDYkQF"": 1,
    ""KwiwyU"": 1,
    ""RYWgPE"": 1,
    ""rngqqag5"": 4,
    ""(empty)"": 3,
    ""Administr"": 3,
    ""VLVLdBbfZ"": 1,
    ""MBNEgH"": 1,
    ""ojENoq"": 1,
    ""DhrbHtqBk"": 1,
    ""ztiSBJ"": 1,
    ""lUCVhn"": 1,
    ""xDwzeLdpH"": 1,
    ""EbSuMw"": 1,
    ""IfPpnk"": 1
  },
  ""keyboard"": {
    ""Unknown"": 106
  },
  ""client_build"": {
    ""Unknown"": 106
  },
  ""client_name"": {
    ""Unknown"": 106
  },
  ""ip_type"": {
    ""hosting"": 44,
    ""Unknown"": 50,
    ""proxy"": 11,
    ""mobile"": 1
  }
}"
9wRZTYEt,2024_ponteiros_lista_ex6a,gpsgiraldi,C,Saturday 29th of June 2024 07:14:30 PM CDT,"/******************************************************************************
CORRIJA: 
 int a, *p;
 a = 5;
 p = a;
 printf(“Conteúdo de p: %i\n”, p);
*******************************************************************************/
#include <stdio.h>
#include <string.h>

int main()
{

    int a;
    int *p;
    a = 5;
    p = &a;
    printf(""Conteúdo de p: %i\n"", *p);
    
    return 0;
}"
8UTPZjZU,🤑G2A.com Free Gift Card FIX July 2024🎁,Skarface-MKL,JavaScript,Saturday 29th of June 2024 07:14:11 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
July 1 2024

"
zKHbxsN2,🤑G2A.com Free Gift Card FIX July 2024🎁,Ohtaku,JavaScript,Saturday 29th of June 2024 07:11:26 PM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
1st of July 2024

"
tKjkCTFY,🤑G2A.com Free Gift Card FIX July 2024🎁,thepplayz,JavaScript,Saturday 29th of June 2024 07:08:09 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
July 1 2024

"
M6Tpejqq,2024_strings_lista_ex5,gpsgiraldi,C,Saturday 29th of June 2024 07:06:52 PM CDT,"/******************************************************************************
5 – Faça um programa em C para criptografar uma frase dada pelo usuário. A
criptografia troca as vogais da frase por *. Por exemplo:
Frase: EU ESTOU NA ESCOLA
Saída: ** *ST** N* *SC*L*
*******************************************************************************/
#include <stdio.h>
#include <string.h>

int main()
{
    char string[100];
    int i,tamanho;
    
    fgets(string,99,stdin);
    tamanho=strlen(string);
    
    for(i=0;i<tamanho-1;i++){
        if(string[i]=='a'||string[i]=='e'||string[i]=='i'||string[i]=='o'||string[i]=='u'
         ||string[i]=='A'||string[i]=='E'||string[i]=='I'||string[i]=='O'||string[i]=='U'){
             string[i]='*';
         }
    }
    fputs(string,stdout);
    
    return 0;
}
"
AyExxcXq,🤑G2A.com Free Gift Card FIX July 2024🎁,Elii,JavaScript,Saturday 29th of June 2024 07:05:24 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
July 1 2024

"
JzpP8q6X,🤑G2A.com Free Gift Card FIX July 2024🎁,sirmikey,JavaScript,Saturday 29th of June 2024 07:01:54 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
1st of July 2024

"
wj8Ua2i4,🤑G2A.com Free Gift Card FIX July 2024🤑,guywithabigheart,JavaScript,Saturday 29th of June 2024 06:59:22 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
1st of July 2024

"
CLk6n00Q,2024_strings_lista_ex4,gpsgiraldi,C,Saturday 29th of June 2024 06:57:10 PM CDT,"/*******************************************************************
4 - Faça um programa em C que leia uma string e imprima uma mensagem dizendo se
ela é um palíndromo ou não. Um palíndromo é uma palavra que tem a propriedade de
poder ser lida tanto da direita para a esquerda como da esquerda para a direita.
Exemplo: ovo, arara, rever, asa, osso etc.
*******************************************************************/
#include <stdio.h>
#include <string.h>

int main()
{
//    char string1[]={""Papa""}, string2[]={""Papa""};
    char string1[99],string2[99];
    int i,j=0;
    

    fgets(string1,98,stdin);
    
    int tamanho = strlen(string1);
    
//'j' funciona como uma espécie de while dentro de um laço for
    for(i=(tamanho-1);i>=0;i--){
        string2[j]=string1[i];
        j++;
    }

//saída para a string2
    printf(""\n"");
    fputs(string2,stdout);


//comparando as duas strings
    if(strcmp(string1,string2)==0){
        printf(""\nPalíndromo!"");
    }
    return 0;
}"
BSKf4GQi,🤑G2A.com Free Gift Card FIX July 2024🤑,sayid83,JavaScript,Saturday 29th of June 2024 06:55:50 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
July 1 2024

"
WU3Drtjp,🤑G2A.com Free Gift Card FIX July 2024🎁,PetrikDev,JavaScript,Saturday 29th of June 2024 06:53:11 PM CDT,"G2A.com free voucher & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
July 1 2024

"
e97gABnf,🤑G2A.com Free Gift Card FIX July 2024🎁,PetrikDev,JavaScript,Saturday 29th of June 2024 06:49:46 PM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
1st of July 2024

"
QC523QSG,🤑G2A.com Free Gift Card FIX July 2024🎁,x3kiN,JavaScript,Saturday 29th of June 2024 06:47:08 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
July 1 2024

"
x3yRN2L3,🤑G2A.com Free Gift Card FIX July 2024🎁,x3kiN,JavaScript,Saturday 29th of June 2024 06:43:44 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
1st of July 2024

"
BH1iPzX9,🎁 G2A.COM FREE GIFT CARD GUIDE JUN 2024 V4 🎁,jusst2k4,GetText,Saturday 29th of June 2024 06:42:20 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_217191.pdf
 
Working as of:
30 June 2024"
X4Z9PkWB,🤑G2A.com Free Gift Card FIX July 2024🎁,FeasModz514,JavaScript,Saturday 29th of June 2024 06:41:05 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
1st of July 2024

"
i5WDmAm9,🤑G2A.com Free Gift Card FIX July 2024🎁,FeasModz514,JavaScript,Saturday 29th of June 2024 06:37:41 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
July 1 2024

"
amf7QaRS,🤑G2A.com Free Gift Card FIX July 2024🤑,kiraezwhethe,JavaScript,Saturday 29th of June 2024 06:35:03 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
July 1 2024

"
WDHnqgf6,🤑G2A.com Free Gift Card FIX July 2024🤑,kjihu25,JavaScript,Saturday 29th of June 2024 06:31:39 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
July 1 2024

"
wpLHKcfF,🤑G2A.com Free Gift Card FIX July 2024🤑,7AcxeMC,JavaScript,Saturday 29th of June 2024 06:28:43 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
July 1 2024

"
ibKRqwTu,🤑G2A.com Free Gift Card FIX July 2024🤑,Bufayez,JavaScript,Saturday 29th of June 2024 06:25:36 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
July 1 2024

"
M3HfY9PC,🤑G2A.com Free Gift Card FIX July 2024🎁,tvprekointerneta00,JavaScript,Saturday 29th of June 2024 06:22:38 PM CDT,"G2A.com free voucher & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?56620

Working as of:
1st of July 2024

"
w2Ai7dJ5,🤑G2A.com Free Gift Card FIX July 2024🎁,buch,JavaScript,Saturday 29th of June 2024 06:19:33 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?70259

Working as of:
1st of July 2024

"
VdP4e4e7,Install Nerd Dictation voice to text,metalx1000,Bash,Saturday 29th of June 2024 06:08:50 PM CDT,"pip3 install --break-system-packages vosk
cd ~/.config
git clone https://github.com/ideasman42/nerd-dictation.git
cd nerd-dictation
wget https://alphacephei.com/kaldi/models/vosk-model-small-en-us-0.15.zip
unzip vosk-model-small-en-us-0.15.zip
mv vosk-model-small-en-us-0.15 model"
CMtx9zYu,Untitled,UnrestrainedGTA,Lua,Saturday 29th of June 2024 05:46:48 PM CDT,"AutoUpdate = 1
if AutoUpdate == 1 then
gg.alert(""🎮 'Script Dice Dreams'\n\n Please go to download latest script on telegram."")
else
end"
N9yKUSNF,JavaScript Window innerWidth-Height,1xptolevitico69,HTML,Saturday 29th of June 2024 05:44:45 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
   <head>
      <meta charset=""UTF-8"" />
      <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
      <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
      <title>SETUP</title>
      <style>


         body {
            margin: 0;
         }

         * {
            box-sizing: border-box;
            font-family: arial black;
         }

         .top {
            width: 100%;
            height: 100vh;
            border: 0;
            outline: 0;
            background-color: white;
         }

         .top a {
            display: block;
            color: red;
            margin: 0 5px;
            text-decoration: none;
            font-weight: 900;
            font-size: 25px;
         }

         .top input {
            display: inline-block;
            margin: 3px;
         }

         h1 {
            margin: 30px 0;
         }

         .search {
            outline: 3px solid red;
            font-size: 20px;
            width: 150px;
            text-align: center;
            border: 2px solid white;
            color: red;
            background-color: red;
            color: white;
         }

         @media (orientation: portrait) and (max-width:425px){
            .top input {
               display: block;
               margin: 9px auto;
            }

            h1 {
               font-size: 20px;
            }
         }

         @media (orientation: landscape) and (max-width: 640px) {
            h1 {
               font-size: 20px;
            }

            .avatar {
               margin: auto;
            }
         }
      </style>
   </head>

   <body>
      <audio id=""audio"" loop src=""https://1xpto.netlify.app/audio/trance.mp3""></audio>

      <button class=""top"">
         <a href=""https://1xpto.netlify.app/"">Home</a>
         <a href=""https://www.facebook.com/ManuelJSAndrade/"">Facebook</a>

         <h1>JavaScript Window innerWidth-Height</h1>

         <input class=""search"" onclick=""Style()"" type=""button"" value=""Src Code"" />
         <input class=""search"" onclick=""web()"" type=""button"" value=""HTML"" />
      </button>

      <script>
         function Style() {
            audio.play();
            foo = window.open(""https://1xpto.netlify.app/articles/window%20innerwidth-height/local/index.txt"");
         }

         function web() {
            audio.pause();
            window.open(""https://1xpto.netlify.app/articles/window%20innerwidth-height/local/"", ""_self"");
            foo.close();
         }
      </script>
   </body>
</html>"
pCu7Bvme,Textarea constraints,1xptolevitico69,HTML,Saturday 29th of June 2024 05:37:07 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
   <head>
      <meta charset=""UTF-8"" />
      <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
      <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
      <title>SETUP</title>
      <style>


         body {
            margin: 0;
         }

         * {
            box-sizing: border-box;
            font-family: arial black;
         }

         .top {
            width: 100%;
            height: 100vh;
            border: 0;
            outline: 0;
            background-color: white;
         }

         .top a {
            display: block;
            color: red;
            margin: 0 5px;
            text-decoration: none;
            font-weight: 900;
            font-size: 25px;
         }

         .top input {
            display: inline-block;
            margin: 3px;
         }

         h1 {
            margin: 30px 0;
         }

         .search {
            outline: 3px solid red;
            font-size: 20px;
            width: 150px;
            text-align: center;
            border: 2px solid white;
            color: red;
            background-color: red;
            color: white;
         }

         @media (orientation: portrait) and (max-width:425px){
            .top input {
               display: block;
               margin: 9px auto;
            }

            h1 {
               font-size: 20px;
            }
         }

         @media (orientation: landscape) and (max-width: 640px) {
            h1 {
               font-size: 20px;
            }

            .avatar {
               margin: auto;
            }
         }
      </style>
   </head>

   <body>
      <audio id=""audio"" loop src=""https://1xpto.netlify.app/audio/trance.mp3""></audio>

      <button class=""top"">
         <a href=""https://1xpto.netlify.app/"">Home</a>
         <a href=""https://www.facebook.com/ManuelJSAndrade/"">Facebook</a>

         <h1>Textarea constraints</h1>

         <input class=""search"" onclick=""Style()"" type=""button"" value=""Src Code"" />
         <input class=""search"" onclick=""web()"" type=""button"" value=""HTML"" />
      </button>

      <script>
         function Style() {
            audio.play();
            foo = window.open(""https://1xpto.netlify.app/articles/textarea%20constraints/local/index.txt"");
         }

         function web() {
            audio.pause();
            window.open(""https://1xpto.netlify.app/articles/textarea%20constraints/local/"", ""_self"");
            foo.close();
         }
      </script>
   </body>
</html>"
USw4EiBt,no A printed,max2201111,Python,Saturday 29th of June 2024 04:19:23 PM CDT,"import chess

# Definujte nový typ figurky Amazon
AMAZON = 7

# Rozšiřte existující typy figur o Amazon
PIECE_TYPES = [chess.PAWN, chess.KNIGHT, chess.BISHOP, chess.ROOK, chess.QUEEN, chess.KING, AMAZON]
PIECE_SYMBOLS = [None, ""p"", ""n"", ""b"", ""r"", ""q"", ""k"", ""a""]

class CustomPiece(chess.Piece):
    def __init__(self, piece_type, color):
        super().__init__(piece_type, color)

class Amazon(CustomPiece):
    def __init__(self, color):
        super().__init__(AMAZON, color)

    def symbol(self):
        return 'A' if self.color == chess.WHITE else 'a'

class CustomBoard(chess.Board):
    def __init__(self, fen=None):
        self.amazons = chess.BB_EMPTY
        self.custom_pieces = {
            'A': Amazon(chess.WHITE), 'a': Amazon(chess.BLACK)
        }
        super().__init__(fen)

    def set_piece_at(self, square, piece, promoted=False):
        super().set_piece_at(square, piece, promoted)
        if piece.piece_type == AMAZON:
            self.amazons |= chess.BB_SQUARES[square]

    def remove_piece_at(self, square):
        piece = self.piece_at(square)
        if piece and piece.piece_type == AMAZON:
            self.amazons &= ~chess.BB_SQUARES[square]
        super().remove_piece_at(square)

    def set_fen(self, fen):
        parts = fen.split(' ')
        while len(parts) < 6:
            parts.append(""0"")
        board_part = parts[0]
        turn_part = parts[1]
        castling_part = parts[2]
        en_passant_part = parts[3]
        halfmove_clock = parts[4]
        fullmove_number = parts[5]

        self.set_board_fen(board_part)
        self.turn = chess.WHITE if turn_part == 'w' else chess.BLACK
        self.castling_rights = chess.BB_EMPTY if castling_part == '-' else chess.SquareSet.from_square(chess.parse_square(castling_part))
        self.ep_square = None if en_passant_part == '-' else chess.parse_square(en_passant_part)
        self.halfmove_clock = int(halfmove_clock)
        self.fullmove_number = int(fullmove_number)

    def set_board_fen(self, fen):
        self.clear()
        self.amazons = chess.BB_EMPTY  # Clear amazons bitboard
        rows = fen.split('/')
        for rank, row in enumerate(rows):
            file = 0
            for char in row:
                if char.isdigit():
                    file += int(char)
                else:
                    square = chess.square(file, 7 - rank)
                    if char in self.custom_pieces:
                        self.set_piece_at(square, self.custom_pieces[char])
                    else:
                        self.set_piece_at(square, chess.Piece.from_symbol(char))
                    file += 1

    def __str__(self):
        builder = []
        for rank in range(7, -1, -1):
            empty = 0
            for file in range(8):
                piece = self.piece_at(chess.square(file, rank))
                if piece:
                    if empty > 0:
                        builder.append(str(empty))
                        empty = 0
                    builder.append(piece.symbol())
                else:
                    empty += 1
            if empty > 0:
                builder.append(str(empty))
            if rank > 0:
                builder.append(""/"")
        return """".join(builder)

def print_custom_board(fen):
    board = CustomBoard()
    board.set_fen(fen)
    for rank in range(7, -1, -1):
        line = """"
        for file in range(8):
            piece = board.piece_at(chess.square(file, rank))
            if piece:
                line += piece.symbol() + "" ""
            else:
                line += "". ""
        print(line)

# Testovací pozice
start_fen = ""8/6A1/8/8/8/k1K5/8/8 w - - 0 1""
print_custom_board(start_fen)"
sjgKFqC3,Untitled,RedFoxy,YAML,Saturday 29th of June 2024 03:26:04 PM CDT,"substitutions:
  devicename:    test 2
  devicename_id: test-2
  board_type:    d1_mini


esphome:
  name: $devicename_id
  friendly_name: $devicename

esp8266:
  board: $board_type

logger:

api:
  encryption:
    key: !secret api_encryption

ota:
- platform:     esphome
  password:     !secret ota_password
  id:           my_ota

wifi:
  networks:
  - ssid:      !secret wifi_iot_ssid
    password:  !secret wifi_iot_pass

  ap:
    ssid:      $devicename Hotspot
    password:  !secret ap_password

captive_portal:

web_server:
  port: 80

globals:
  - id: tank_act_level
    type: float
    restore_value: no
    initial_value: '0'

time:
  - platform: sntp
    timezone: !secret time_zone
    servers:  !secret ntp_servers

button:
  - platform: restart
    name: ""$devicename Riavvia""

text_sensor:
  - platform: version
    name: $devicename ESPHome Version
  - platform: wifi_info
    ip_address:
      name: $devicename IP
    ssid:
      name: $devicename SSID
    bssid:
      name: $devicename BSSID

binary_sensor:
- platform: status
  name: $devicename Stato

#-------------------------------------------------
- platform: gpio
  name: ""D0""
  pin:
    number: D0
    mode:
      input: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D1""
  pin:
    number: D1
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D2""
  pin:
    number: D2
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D3""
  pin:
    number: D3
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D4""
  pin:
    number: D4
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D5""
  pin:
    number: D5
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D6""
  pin:
    number: D6
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D7""
  pin:
    number: D7
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms

#-------------------------------------------------
- platform: gpio
  name: ""D8""
  pin:
    number: D8
    mode:
      input: true
      pullup: true
  filters: 
    - invert:
    - delayed_on: 10ms
"
1Z8sMM14,rajput.py,HR16G5978,Python,Saturday 29th of June 2024 02:42:11 PM CDT,"import requests
import asyncio
from telegram import Bot

# Credentials
login_url = 'https://wingoxd.in/api/webapi/login'
username = '7777777777'
password = '7777777777'
telegram_token = '7115429644:AAEj6kHov3nGO5L9EdBzPbWXx-6zdw-IBSo'
telegram_chat_id = '-1002030982037'

# Initialize Telegram bot
bot = Bot(token=telegram_token)

# Function to handle login and send notification
async def login_and_notify():
    for attempt in range(3):  # Retry login up to 3 times
        try:
            session = requests.Session()
            session.headers.update({'User-Agent': 'Mozilla/5.0'})
            login_data = {'username': username, 'pwd': password}
            response = session.post(login_url, data=login_data)

            if response.status_code == 200 and response.json().get('status') is True:
                await bot.send_message(chat_id=telegram_chat_id, text=""✅ Login Successful! ✅"")
                return  # Exit function if login is successful
            else:
                await bot.send_message(chat_id=telegram_chat_id, text=""❌ Login failed. Retrying... ❌"")

        except Exception as e:
            print(f""Login attempt {attempt + 1} failed: {e}"")
            await asyncio.sleep(5)  # Wait before retrying

    # If all attempts fail
    await bot.send_message(chat_id=telegram_chat_id, text=""❌ Login failed after multiple attempts. ❌"")

# Run the login and notification process
if __name__ == ""__main__"":
    asyncio.run(login_and_notify())
"
eNH9aP0g,Untitled,Yui5680,JSON,Saturday 29th of June 2024 01:33:52 PM CDT,"[
    {
      ""name"": ""image1"",
	  ""image"": ""https://i.imgur.com/QzgRzTH.gif""
    },
    {
      ""name"": ""image2"",
	  ""image"": ""https://i.imgur.com/QzgRzTH.gif""
    }
]"
jTGyFVdM,iOS update,Lizalovv,JSON,Saturday 29th of June 2024 01:08:31 PM CDT,"{
    ""version"": 1.0,
    ""title"": ""New Version Available"",
    ""message"": ""There are new features available, please update your app."",
    ""btnText"": ""Update"",
    ""url"": ""https://example.com/update""
}"
WbDWsy1Y,2024_lista_strings_ex3,gpsgiraldi,C,Saturday 29th of June 2024 01:08:10 PM CDT,"/************************************************************
3 – Escreva um programa em C que peça ao usuário para digitar 
um texto e um caractere (vogal ou consoante), sendo uma entrada 
por linha. A saída deve mostrar o número de vogais do texto 
digitado e imprimir um novo texto: as vogais do texto
original devem ser substituídas pelo caractere digitado.
*************************************************************/
#include <stdio.h>
#include <string.h>

int main()
{
    
//declaração
    int i,soma=0,tamanho;
    char frase[200],caractere;

    
//código de entrada
    printf(""Insira um texto sem acentos: \n"");
    fgets(frase,199,stdin);
    printf(""\nAgora insira um caractere(vogais ou consoantes apenas: \n"");
    scanf(""%s"",&caractere);

//laço de leitura e condicional para substituir as vogais
    tamanho=strlen(frase);
    for(i=0;i<tamanho;i++){
        if  (frase[i]=='a'||frase[i]=='e'||frase[i]=='i'||frase[i]=='o'||frase[i]=='u'//minúsculas sem acento
           ||frase[i]=='A'||frase[i]=='E'||frase[i]=='I'||frase[i]=='O'||frase[i]=='U'){//maiúsculas sem acento
            frase[i]=caractere;
        }    
    }
    
//código de saída
    fputs(frase,stdout);
    return 0;
}"
LMhgwWmv,Crear puerto impresora TCP/IP desde Powershell,EmilianoRoldanR,PowerShell,Saturday 29th of June 2024 01:05:36 PM CDT,"#Ejecutar Powershell como administrador.
#Cambiar la palabra IP por el puerto que queremos crear.
#Luego asignarlo como siempre a la impresora.

#Con este comando nos ahorramos el tiempo de espera al crear un puerto de red.

Add-PrinterPort -Name ""IP"" -PrinterHostAddress ""IP""

"
rP8aAWvf,"""Blynk Relay"" rev_01",pleasedontcode,Arduino,Saturday 29th of June 2024 12:43:01 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Blynk Relay""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-06-29 17:42:07

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The system should control a relay module connected */
	/* to digital pin D2 using the Relay library. The */
	/* relay on off same as switch on off at blynk */
/****** SYSTEM REQUIREMENT 2 *****/
	/* Create a system to manage a relay module on */
	/* digital pin D2 with the Relay library. The relay */
	/* should respond to a Blynk app switch, ensuring */
	/* synchronized on/off states for efficient remote */
	/* control. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Relay.h>  //https://github.com/rafaelnsantos/Relay
#include <BlynkSimpleStream.h>  // Blynk library for serial communication

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);
BLYNK_WRITE(V1); // Blynk function to handle virtual pin V1 writes

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t relay_RelayModule_Signal_PIN_D2 = 2;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool relay_RelayModule_Signal_PIN_D2_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float relay_RelayModule_Signal_PIN_D2_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Relay light(relay_RelayModule_Signal_PIN_D2, true); // Initialize relay on pin 2, Normally Open

/****** BLYNK AUTH TOKEN *****/
char auth[] = ""YourAuthToken""; // Replace with your Blynk Auth Token

void setup(void)
{
    // put your setup code here, to run once:
    Serial.begin(9600); // Initialize serial communication
    Blynk.begin(Serial, auth); // Initialize Blynk with serial communication
    light.begin(); // Initialize the pin
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    Blynk.run(); // Run Blynk
    updateOutputs(); // Refresh output data
}

void updateOutputs()
{
    // Example of using the Relay library functions
    relay_RelayModule_Signal_PIN_D2_rawData = light.getState(); // Get relay state
}

// Blynk function to handle virtual pin V1 writes
BLYNK_WRITE(V1)
{
    int pinValue = param.asInt(); // Get the value from the Blynk app
    if (pinValue == 1) {
        light.turnOn(); // Turn relay on
    } else {
        light.turnOff(); // Turn relay off
    }
}
"
ntmYuVbv,"Roe2Js :: ""/test dictionary/scripts/json/includes/js includes.csv""",jargon,JavaScript,Saturday 29th of June 2024 12:32:20 PM CDT,"
/* {{ #/test dictionary/scripts/js/host.js }} */
/* {{ #/test dictionary/scripts/js/legacy/mnemonics.js }} */

/* {{ #layers=/test dictionary/scripts/json/gamevars/layers.json }} */

/* {{ #special=/test dictionary/scripts/json/gamevars/special tiles.json }} */

/* {{ #/test dictionary/scripts/js/legacy/files.js }} */

/* {{ #/test dictionary/scripts/json/includes/js header includes.csv }} */

/* {{ #/test dictionary/scripts/js/legacy/debug.js }} */
/* {{ #/test dictionary/scripts/js/legacy/array blocks lohi.js }} */
/* {{ #/test dictionary/scripts/js/legacy/legacy basic.js }} */
/* {{ #/test dictionary/scripts/js/legacy/dice.js }} */

/* {{ #/test dictionary/scripts/js/constraints.js }} */
/* {{ #/test dictionary/scripts/js/load game data.js }} */

/* {{ #/test dictionary/scripts/js/canvas/canvasGuiCommands.js }} */
/* {{ #/test dictionary/scripts/js/canvas/canvasRenderView.js }} */
/* {{ #/test dictionary/scripts/js/canvas/canvasRenderPurse.js }} */
/* {{ #/test dictionary/scripts/js/canvas/canvasRenderCommands.js }} */

/* {{ #/test dictionary/scripts/js/create gui.js }} */
/* {{ #/test dictionary/scripts/js/render gui.js }} */
/* {{ #/test dictionary/scripts/js/event manager.js }} */
"
P5ZRMWJk,Untitled,enkiduuu,JavaScript,Saturday 29th of June 2024 12:27:07 PM CDT,"Server is running at http://localhost:3000
/Users/Desktop/postgre/World+Capital+Quiz/node_modules/pg-protocol/dist/parser.js:287
        const message = name === 'notice' ? new messages_1.NoticeMessage(length, messageValue) : new messages_1.DatabaseError(messageValue, length, name);
                                                                                                 ^
error: database ""world"" does not exist
    at Parser.parseErrorMessage (/Users/daryllvillanueva/Desktop/postgre/World+Capital+Quiz/node_modules/pg-protocol/dist/parser.js:287:98)
    at Parser.handlePacket (/Users/daryllvillanueva/Desktop/postgre/World+Capital+Quiz/node_modules/pg-protocol/dist/parser.js:126:29)
    at Parser.parse (/Users/daryllvillanueva/Desktop/postgre/World+Capital+Quiz/node_modules/pg-protocol/dist/parser.js:39:38)
    at Socket.<anonymous> (/Users/daryllvillanueva/Desktop/postgre/World+Capital+Quiz/node_modules/pg-protocol/dist/index.js:11:42)
    at Socket.emit (node:events:519:28)
    at addChunk (node:internal/streams/readable:559:12)
    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)
    at Readable.push (node:internal/streams/readable:390:5)
    at TCP.onStreamRead (node:internal/stream_base_commons:191:23) {
  length: 90,
  severity: 'FATAL',
  code: '3D000',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postinit.c',
  line: '947',
  routine: 'InitPostgres'
}"
mKgAXF4V,still doesn't work A in ASCII,max2201111,Python,Saturday 29th of June 2024 12:23:06 PM CDT,"import chess
import time
from functools import lru_cache

class CustomPiece(chess.Piece):
    def __init__(self, piece_type, color):
        super().__init__(piece_type, color)

class Amazon(CustomPiece):
    def __init__(self, color):
        super().__init__(chess.BISHOP, color)  # Placeholder for custom piece type

    def symbol(self):
        return 'A' if self.color == chess.WHITE else 'a'

class Bob(CustomPiece):
    def __init__(self, color):
        super().__init__(chess.ROOK, color)

    def symbol(self):
        return 'B' if self.color == chess.WHITE else 'b'

class Cyryl(CustomPiece):
    def __init__(self, color):
        super().__init__(chess.QUEEN, color)

    def symbol(self):
        return 'C' if self.color == chess.WHITE else 'c'

class CustomBoard(chess.Board):
    def __init__(self, fen=None):
        self.custom_pieces = {
            'A': Amazon(chess.WHITE), 'a': Amazon(chess.BLACK),
            'B': Bob(chess.WHITE), 'b': Bob(chess.BLACK),
            'C': Cyryl(chess.WHITE), 'c': Cyryl(chess.BLACK)
        }
        super().__init__(fen)

    def set_fen(self, fen):
        parts = fen.split(' ')
        while len(parts) < 6:
            parts.append(""0"")
        board_part = parts[0]
        turn_part = parts[1]
        castling_part = parts[2]
        en_passant_part = parts[3]
        halfmove_clock = parts[4]
        fullmove_number = parts[5]

        self.set_board_fen(board_part)
        self.turn = chess.WHITE if turn_part == 'w' else chess.BLACK
        self.castling_rights = chess.BB_EMPTY if castling_part == '-' else chess.SquareSet.from_square(chess.parse_square(castling_part))
        self.ep_square = None if en_passant_part == '-' else chess.parse_square(en_passant_part)
        self.halfmove_clock = int(halfmove_clock)
        self.fullmove_number = int(fullmove_number)

    def set_board_fen(self, fen):
        self.clear()
        rows = fen.split('/')
        for rank, row in enumerate(rows):
            file = 0
            for char in row:
                if char.isdigit():
                    file += int(char)
                else:
                    square = chess.square(file, 7 - rank)
                    if char in self.custom_pieces:
                        self.set_piece_at(square, self.custom_pieces[char])
                    else:
                        self.set_piece_at(square, chess.Piece.from_symbol(char))
                    file += 1

    def piece_symbol(self, piece):
        if piece is None:
            return '.'
        if isinstance(piece, Amazon):
            return 'A'
        if isinstance(piece, Bob):
            return 'B'
        if isinstance(piece, Cyryl):
            return 'C'
        return piece.symbol()

    def generate_legal_moves(self, from_mask=chess.BB_ALL, to_mask=chess.BB_ALL):
        for move in super().generate_legal_moves(from_mask, to_mask):
            yield move
        
        for square in self.piece_map():
            piece = self.piece_at(square)
            if piece.symbol().lower() in ['a', 'b', 'c']:
                yield from self.generate_custom_piece_moves(square, piece)

    def generate_custom_piece_moves(self, square, piece):
        knight_moves = [
            (2, 1), (2, -1), (-2, 1), (-2, -1),
            (1, 2), (1, -2), (-1, 2), (-1, -2)
        ]
        
        directions = []
        if piece.symbol().lower() == 'a':  # Amazon: Bishop + Knight moves
            directions = [(1, 1), (1, -1), (-1, 1), (-1, -1)]
            moves = self.generate_sliding_moves(square, directions) + self.generate_knight_moves(square, knight_moves)
        elif piece.symbol().lower() == 'b':  # Bob: Rook + Knight moves
            directions = [(1, 0), (0, 1), (-1, 0), (0, -1)]
            moves = self.generate_sliding_moves(square, directions) + self.generate_knight_moves(square, knight_moves)
        elif piece.symbol().lower() == 'c':  # Cyryl: Queen + Knight moves
            directions = [(1, 1), (1, -1), (-1, 1), (-1, -1), (1, 0), (0, 1), (-1, 0), (0, -1)]
            moves = self.generate_sliding_moves(square, directions) + self.generate_knight_moves(square, knight_moves)
        
        for move in moves:
            if self.is_pseudo_legal(move):
                yield move

    def generate_sliding_moves(self, square, directions):
        moves = []
        for dx, dy in directions:
            x, y = chess.square_file(square), chess.square_rank(square)
            while True:
                x, y = x + dx, y + dy
                if 0 <= x < 8 and 0 <= y < 8:
                    dest_square = chess.square(x, y)
                    move = chess.Move(square, dest_square)
                    moves.append(move)
                    if self.piece_at(dest_square):
                        break
                else:
                    break
        return moves

    def generate_knight_moves(self, square, knight_moves):
        moves = []
        for dx, dy in knight_moves:
            file = chess.square_file(square) + dx
            rank = chess.square_rank(square) + dy
            if 0 <= file < 8 and 0 <= rank < 8:
                dest_square = chess.square(file, rank)
                move = chess.Move(square, dest_square)
                moves.append(move)
        return moves

@lru_cache(maxsize=None)
def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme pouze informace o pozici
    if len(parts) < 6:
        simplified_fen += "" 0 1""
    return simplified_fen

def print_custom_board(fen):
    board = CustomBoard(fen)
    for rank in range(7, -1, -1):
        line = []
        for file in range(8):
            piece = board.piece_at(chess.square(file, rank))
            symbol = board.piece_symbol(piece)
            line.append(symbol)
        print(' '.join(line))

# Startovní pozice
start_fen = ""8/6A1/8/8/8/k1K5/8/8 w - - 0 1""
print_custom_board(start_fen)  # Tisk ASCII šachovnice pro startovní pozici
simplified_POZ2 = simplify_fen_string(start_fen)
POZ = {1: simplified_POZ2}

AR = {simplified_POZ2: {'used': 0, 'to_end': 0}}
N = 1
M = 0

start_time = time.time()

def format_elapsed_time(elapsed_time):
    hours, remainder = divmod(elapsed_time, 3600)
    minutes, seconds = divmod(remainder, 60)
    return f""{int(hours)}h {int(minutes)}m {int(seconds)}s""

def print_elapsed_time(total_time, level_time):
    print(f""{format_elapsed_time(total_time)} / {format_elapsed_time(level_time)}"")

while M < N:
    M += 1
    current_fen = POZ[M]
    board = CustomBoard(current_fen)
    simplified_current_fen = simplify_fen_string(current_fen)

    if simplified_current_fen not in AR:
        AR[simplified_current_fen] = {'used': 0, 'to_end': 0}

    if AR[simplified_current_fen]['used'] == 0:
        AR[simplified_current_fen]['used'] = 1
        for move in board.generate_legal_moves():
            # Check if the move is a promotion
            if move.promotion:
                move.promotion = chess.QUEEN  # Set promotion to queen only

            board.push(move)
            POZ2 = board.fen()
            simplified_POZ2 = simplify_fen_string(POZ2)

            if simplified_POZ2 not in AR:
                AR[simplified_POZ2] = {'used': None, 'to_end': 0}

            if AR[simplified_POZ2]['used'] is None:
                N += 1
                POZ[N] = simplified_POZ2
                AR[simplified_POZ2] = {'used': 0, 'to_end': 0}

            board.pop()  # Vrátíme tah zpět

print(f""Počet pozic je {N}"")

# Přidání kontroly pro mat, remízu a výchozí hodnotu
F = 0
for i in range(1, N + 1):
    current_fen = POZ[i]
    board = CustomBoard(current_fen)
    simplified_current_fen = simplify_fen_string(current_fen)

    if simplified_current_fen not in AR:
        AR[simplified_current_fen] = {'used': 0, 'to_end': 0}

    if board.is_checkmate():
        AR[simplified_current_fen]['to_end'] = -1000
        F += 1
    elif board.is_stalemate() or board.is_insufficient_material() or board.is_seventyfive_moves() or board.is_fivefold_repetition():
        AR[simplified_current_fen]['to_end'] = 0
    else:
        AR[simplified_current_fen]['to_end'] = 0

print(f""Počet pozic v matu je {F}"")

uroven = 0
while F > 0:
    uroven += 1
    level_start_time = time.time()
    print(f""Výpočet v úrovni {uroven}"")
    
    F = 0
    current_level_positions = 0
    for i in range(1, N + 1):
        current_fen = POZ[i]
        board = CustomBoard(current_fen)
        simplified_current_fen = simplify_fen_string(current_fen)
        if AR[simplified_current_fen]['to_end'] == 0:
            hod = -2000
            for move in board.generate_legal_moves():
                # Check if the move is a promotion
                if move.promotion:
                    move.promotion = chess.QUEEN  # Set promotion to queen only

                board.push(move)
                POZ2 = board.fen()
                simplified_POZ2 = simplify_fen_string(POZ2)
                if simplified_POZ2 not in AR or AR[simplified_POZ2]['to_end'] is None:
                    hod2 = 0
                else:
                    hod2 = -AR[simplified_POZ2]['to_end']
                if hod2 > hod:
                    hod = hod2
                board.pop()  # Vrátíme tah zpět
            if hod == 1001 - uroven:
                AR[simplified_current_fen]['to_end'] = 1000 - uroven
                F += 1
                current_level_positions += 1
            if hod == -1001 + uroven:
                AR[simplified_current_fen]['to_end'] = -1000 + uroven
                F += 1
                current_level_positions += 1
    level_end_time = time.time()
    total_elapsed_time = level_end_time - start_time
    level_elapsed_time = level_end_time - level_start_time
    print(f""Nalezeno {current_level_positions} pozic v úrovni {uroven}"")
    print_elapsed_time(total_elapsed_time, level_elapsed_time)

print(f""Nalezeno {F} pozic celkem"")

# Výpis všech pozic s to_end == 17
print(""Pozice s to_end == 17:"")
for fen, data in AR.items():
    if data['to_end'] is not None and data['to_end'] < 983 and data['to_end'] > 0:
        print(f""{fen} -> to_end: {data['to_end']}"")

print(""*****"")

print(""Pozice s to_end == -20:"")
for fen, data in AR.items():
    if data['to_end'] is not None and data['to_end'] > -981 and data['to_end'] < 0:
        print(f""{fen} -> to_end: {data['to_end']}"")

current_fen = POZ[1]
board = CustomBoard(current_fen)
simplified_current_fen = simplify_fen_string(current_fen)
hod = AR[simplified_current_fen]['to_end']
print(f""Hodnocení počáteční pozice je {hod}"")

# Závěrečný kód pro procházení nejlepších tahů
current_fen = start_fen
simplified_current_fen = simplify_fen_string(current_fen)

optimal_moves = []
while AR[simplified_current_fen]['to_end'] is not None and AR[simplified_current_fen]['to_end'] > -1000:
    board = CustomBoard(current_fen)
    simplified_current_fen = simplify_fen_string(current_fen)
    hod = -2000
    for move in board.generate_legal_moves():
        # Check if the move is a promotion
        if move.promotion:
            move.promotion = chess.QUEEN  # Set promotion to queen only

        board.push(move)
        POZ2 = board.fen()
        simplified_POZ2 = simplify_fen_string(POZ2)
        if simplified_POZ2 not in AR or AR[simplified_POZ2]['to_end'] is None:
            hod2 = 0
        else:
            hod2 = -AR[simplified_POZ2]['to_end']
        if hod2 > hod:
            hod = hod2
            best_fen = simplified_POZ2
        board.pop()  # Vrátíme tah zpět

    optimal_moves.append(best_fen)
    current_fen = best_fen
    simplified_current_fen = simplify_fen_string(current_fen)

# Tisk šachovnic v opačném pořadí
for fen in reversed(optimal_moves):
    print_custom_board(fen)
    print(""\n"")
"
gFFJ7rMp,2024_strings_lista_ex2_WIP,gpsgiraldi,C,Saturday 29th of June 2024 12:21:33 PM CDT,"/************************************************************
2 – Faça um programa em C que receba uma frase, calcule e mostre 
a quantidade de vogais da frase digitada. O programa deverá 
considerar e contar as vogais maiúsculas e minúsculas.
*************************************************************/
#include <stdio.h>
#include <string.h>

int main()
{
    
//declaração
    int i,soma=0,tamanho;
    char frase[200];

//código de entrada
    fgets(frase,199,stdin);

//laço de leitura e condicional para calcular as vogais
    tamanho=strlen(frase);
    for(i=0;i<tamanho;i++){
        if(frase[i]=='a'||frase[i]=='e'||frase[i]=='i'||frase[i]=='o'||frase[i]=='u'//minúsculas sem acento
         ||frase[i]=='A'||frase[i]=='E'||frase[i]=='I'||frase[i]=='O'||frase[i]=='U'//maiúsculas sem acento
         ||frase[i]=='ã'||frase[i]=='â'||frase[i]=='Ã'||frase[i]=='Â'//'a's acentuados exceto agudos
         ||frase[i]=='ê'||frase[i]=='Ê'//'e's acentuados exceto agudos
         ||frase[i]=='í'//'i' acentuado exceto maiúsculo
         ||frase[i]=='õ'||frase[i]=='Õ'||frase[i]=='ô'||frase[i]=='Ô'//'o's acentuados
         ||frase[i]=='Á'||frase[i]=='É'||frase[i]=='Í'||frase[i]=='Ó'||frase[i]=='Ú'){//Maiúsculas agudas
        soma=soma+1;
        }    
    }
    
//código de saída
    printf(""São %d vogais em %d letras."",soma,tamanho-1);
    
    return 0;
}
"
gti7AhKb,yay got bot to work finally snowybot rocks in head,coinwalk,JavaScript,Saturday 29th of June 2024 11:57:14 AM CDT,"var nion = parseFloat(document.getElementById('pct_balance').value);
var smartz = nion;
var prefit = Number((nion/1000).toFixed(8));
var smow = Number((nion/1000).toFixed(8));
var winnerdinner = nion;
var bolance = nion;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var hundreds = (prefit*100);
var james = ((Math.floor(bolance/hundreds))*hundreds);
var belance = 0;
var snowy = 0;
var snow = bolance;
var beast = prefit;
var bill = true;
var joe = true;
var fran = ((Math.floor(bolance/tens))*tens);
var greedy =  nion;
 
 
 
function go(){
if (greedy!=belance){
belance = parseFloat(document.getElementById('pct_balance').value);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=snowy)){
        beast = beast*2;
        snowy = parseFloat(belance);
}
if ((belance>(((Math.floor(snow/hundreds))*hundreds)+(smow*35)))&&(joe)&&(bill)){
prefit = (smow*10);
snowy = 0;
tens = (prefit*10);
sevens = (prefit*6.9);
eights = (prefit*7.9);
beast = prefit;
joe = false;
bill = false;
hundreds = (prefit*100);
snow = ((Math.floor(belance/hundreds))*hundreds);
}
if ((belance<(fran-fives))&&(belance<(((Math.floor(belance/tens))*tens)+fives))){
snowy = 0;
beast = prefit;
fran = ((Math.floor(belance/tens))*tens);
}
if ((beast>=nion)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
prefit = smow;
snowy = 0;
tens = (prefit*10);
sevens = (prefit*6.9);
eights = (prefit*7.9);
beast = prefit;
bill = true;
joe = true;
hundreds = (prefit*100);
fran = ((Math.floor(belance/tens))*tens);
snow = ((Math.floor(belance/hundreds))*hundreds);
james = ((Math.floor(belance/hundreds))*hundreds);
}
if ((belance>=(james+(smow*100)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
prefit = smow;
snowy = 0;
tens = (prefit*10);
sevens = (prefit*6.9)
eights = (prefit*7.9)
beast = prefit;
bill = true;
joe = true;
hundreds = (prefit*100);
fran = ((Math.floor(belance/tens))*tens);
snow = ((Math.floor(belance/hundreds))*hundreds);
james = ((Math.floor(belance/hundreds))*hundreds);
}
if (belance>=(winnerdinner*24000)) {
console.log(""winner winner chicken dinner"");
    return;
}
var cat = ((belance-smartz).toFixed(8));
console.log(""profit"");
console.log(cat);
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
greedy =  parseFloat(document.getElementById('pct_balance').value);
setTimeout(() => go(), 1);
}
 
go();"
z1DgVnkv,2024_strings_lista_ex1,gpsgiraldi,C,Saturday 29th of June 2024 11:38:02 AM CDT,"/************************************************************
1 – Faça um programa em C que peça para o usuário digitar um 
texto e imprima as quatro primeiras letras.
*************************************************************/
#include <stdio.h>
#include <string.h>

int main()
{
    
//declaração
    int i;
    char texto[99];

//código de entrada
    fgets(texto,98,stdin);
//código de saída
    for(i=0;i<5;i++){
        printf(""%c"",texto[i]);
    }
    
    return 0;
}
"
M6n4cjX4,Yahoo Finance - code in Python,elena1234,Python,Saturday 29th of June 2024 11:30:25 AM CDT,"#1.Importing the Library and Setting the Stock of Interest 
import yfinance as yahooFinance
import pandas as pd
pd.set_option('display.max_rows', None)

total_energies = yahooFinance.Ticker(""TTE.PA"")


#2.Retrieving Stock Information
total_energies.info


#3.Holders
total_energies.major_holders
total_energies.institutional_holders


#4.Actions
total_energies.actions

total_energies.dividends
df = pd.DataFrame(total_energies.dividends)
df_new = df.groupby(['Date']).agg({'Dividends': 'sum'}).reset_index()
df_new['Date_in_Datetime'] = pd.to_datetime(df_new['Date'])
df_new['Year'] = df_new['Date_in_Datetime'].dt.year
df_converted= df_new.groupby(['Year']).agg({'Dividends': 'sum'}).reset_index()

import matplotlib.pyplot as plt #plot the dividends by years
plt.figure(figsize=(10, 6))
plt.bar(df_converted['Year'], df_converted['Dividends'])
plt.xlabel('Year')
plt.ylabel('Total Dividends')
plt.title('Dividends by Year')
plt.show()


total_energies.splits


#5.Financial Statements
total_energies.income_stmt
total_energies.quarterly_income_stmt

total_energies.balance_sheet
total_energies.quarterly_balance_sheet

total_energies.cash_flow
total_energies.quarterly_cashflow

_____________________________________________________________________________________________________

#QuantStats: Portfolio analytics for quants
%matplotlib inline
import quantstats as qs


# extend pandas functionality with metrics, etc.
qs.extend_pandas()

# fetch the daily returns for a stock
stock = qs.utils.download_returns('TTE.PA')
stock


# show sharpe ratio
qs.stats.sharpe(stock)


# or using extend_pandas() :)
stock.sharpe()


#Visualize stock performance
qs.plots.snapshot(stock, title='TotalEnergies Performance', show=True)
"
9cRTSCHZ,Restaurant Customers,matheus_monteiro,C++,Saturday 29th of June 2024 09:33:26 AM CDT,"#include ""bits/stdc++.h""
using namespace std;

int main() {
    int n;
    cin >> n;

    vector<pair<int, int>> v;
    for(int i = 0; i < n; ++i) {
        int a, b;
        cin >> a >> b;
        v.push_back({a, b});
    }

    set<int> S;
    for(auto [a, b] : v) {
        S.insert(a);
        S.insert(b);
    }

    map<int, int> mapTo;
    int nextNum = 1;

    for(int num : S) 
        mapTo[num] = nextNum++;
    
    for(int i = 0; i < n; ++i) {
        v[i].first = mapTo[ v[i].first ];
        v[i].second = mapTo[ v[i].second ];
    }

    // ------- solução em baixo

    vector<int> cnt(500000);

    for(int i = 0; i < n; ++i) {
        cnt[ v[i].first ]++;
        cnt[ v[i].second + 1 ]--;
    }

    int ans = 0;
    for(int i = 1; i < cnt.size(); ++i) {
        cnt[i] += cnt[i - 1];
        ans = max(ans, cnt[i]);
    }

    cout << ans << '\n';

    return 0;
}"
1kEEcEu0,Coffee,mechanicker,Swift,Saturday 29th of June 2024 09:17:20 AM CDT,"import Foundation
import IOKit.pwr_mgt

var assertionID : IOPMAssertionID = IOPMAssertionID(0)
var description : CFString = ""Cup of coffee"" as CFString

let success = IOPMAssertionDeclareUserActivity(description, kIOPMUserActiveLocal, &assertionID)
if success == kIOReturnSuccess {
    // IOPMAssertionRelease(assertionID)
}
"
LeAs64Ue,Untitled,artemsemkin,HTML,Saturday 29th of June 2024 09:12:42 AM CDT,"<a href=""mailto:user@example.com"">Contact me</a>"
1d9UtMzT,Untitled,mohammadqatanani,YAML,Saturday 29th of June 2024 09:03:27 AM CDT,"type: custom:mod-card
card:
  type: custom:fluid-level-background-card
  card:
    show_name: true
    show_icon: true
    show_state: false
    type: glance
    entities:
      - entity: valve.khzn_1_switch_1
        tap_action:
          action: toggle
        double_tap_action:
          action: more-info
    state_color: false
  full_value: 100
  severity:
    - color:
        - 3
        - 169
        - 244
      value: 60
  entity: sensor.accent_battery_level
  show-bubbles: true
  bubbles-color: white
style: |
  ha-card {
    position: relative;
    overflow: hidden;
  }
  .bubble {
    position: absolute;
    bottom: 0;
    width: 20px;
    height: 20px;
    background: rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    opacity: 0.5;
    animation: rise 5s infinite;
  }
  @keyframes rise {
    0% {
      transform: translateY(0);
      opacity: 0.5;
    }
    50% {
      transform: translateY(-200px);
      opacity: 0.7;
    }
    100% {
      transform: translateY(-400px);
      opacity: 0;
    }
  }
  .bubble:nth-child(1) {
    left: 10%;
    animation-delay: 0s;
  }
  .bubble:nth-child(2) {
    left: 30%;
    animation-delay: 2s;
  }
  .bubble:nth-child(3) {
    left: 50%;
    animation-delay: 4s;
  }
  .bubble:nth-child(4) {
    left: 70%;
    animation-delay: 1s;
  }
  .bubble:nth-child(5) {
    left: 90%;
    animation-delay: 3s;
  }
extra_styles: |
  <style>
    .bubble {
      position: absolute;
      bottom: 0;
      width: 20px;
      height: 20px;
      background: rgba(255, 255, 255, 0.7);
      border-radius: 50%;
      opacity: 0.5;
      animation: rise 5s infinite;
    }
    @keyframes rise {
      0% {
        transform: translateY(0);
        opacity: 0.5;
      }
      50% {
        transform: translateY(-200px);
        opacity: 0.7;
      }
      100% {
        transform: translateY(-400px);
        opacity: 0;
      }
    }
    .bubble:nth-child(1) {
      left: 10%;
      animation-delay: 0s;
    }
    .bubble:nth-child(2) {
      left: 30%;
      animation-delay: 2s;
    }
    .bubble:nth-child(3) {
      left: 50%;
      animation-delay: 4s;
    }
    .bubble:nth-child(4) {
      left: 70%;
      animation-delay: 1s;
    }
    .bubble:nth-child(5) {
      left: 90%;
      animation-delay: 3s;
    }
  </style>
  <div class=""bubbles-container"">
    <div class=""bubble""></div>
    <div class=""bubble""></div>
    <div class=""bubble""></div>
    <div class=""bubble""></div>
    <div class=""bubble""></div>
  </div>"
