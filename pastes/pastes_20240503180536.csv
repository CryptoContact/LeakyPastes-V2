id,title,username,language,date,content
SS9Qi0cq,Bullet Projectile,AlewAlow,Lua,Friday 3rd of May 2024 12:57:03 PM CDT,"local RunService = game:GetService(""RunService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Signal = require(ReplicatedStorage.Libs.Signal)
local Trove = require(ReplicatedStorage.Libs.Trove)

local IS_CLIENT = RunService:IsClient()
local DEFAULT_SPEED = 50
local DEFAULT_PARAMS = RaycastParams.new()

local Bullet = {}
Bullet.__index = Bullet

function Bullet.new(projectileProperties)
	local self = setmetatable({}, Bullet)
	self.Properties = projectileProperties
	self.Position = projectileProperties.StartPosition
	self.Params = projectileProperties.Params or DEFAULT_PARAMS
	self.Speed = projectileProperties.Speed or DEFAULT_SPEED
	
	if IS_CLIENT then
		self.Instance = script.BulletTemplate:Clone()
		self.Instance.Name = ""sigma""
		self.Instance.Position = self.Position
		self.Instance.Parent = workspace
	end
	
	self.Hit = Signal.new()
	self.Destroyed = Signal.new()
	self.Destroyed:Connect(function()
		if self.Instance then
			self.Instance:Destroy()
		end
	end)
	
	local distance =
		(projectileProperties.StartPosition
		- projectileProperties.TargetPosition).Magnitude
	
	self.Lifetime = distance / self.Speed
	
	return self
end

function Bullet:Update(_deltaTime)
	local timePassed = workspace:GetServerTimeNow() - self.Properties.StartTime
	local timePercentage = timePassed / self.Lifetime
	if timePercentage > 1 then
		self.Destroyed:Fire()
		return
	end
	
	local lastPosition = self.Position
	local currentPosition = self.Properties.StartPosition:Lerp(self.Properties.TargetPosition, timePercentage)
	local direction = currentPosition - lastPosition
	local result = workspace:Raycast(
		lastPosition,
		direction,
		self.Params
	)
	
	if result then
		self.Position = result.Position
		self.Hit:Fire(result.Instance)
		self.Destroyed:Fire()
		return
	end
	
	self.Position = currentPosition
	
	if self.Instance then
		self.Instance.Position = self.Position
	end
end

return Bullet"
iKUg8BU0,Projectile Manager 3,AlewAlow,Lua,Friday 3rd of May 2024 12:56:19 PM CDT,"local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local HttpService = game:GetService(""HttpService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local ServerScriptService = game:GetService(""ServerScriptService"")

local IS_SERVER = RunService:IsServer()

local Signal = require(ReplicatedStorage.Libs.Signal)
local Trove = require(ReplicatedStorage.Libs.Trove)

local DamageManager = require(ReplicatedStorage.Modules.DamageManager)

local ProjectileTypes = require(script.ProjectileTypes)
local ProjectileManager = {}

ProjectileManager.ProjectileAdded = Signal.new()
ProjectileManager.Projectiles = {}

function ProjectileManager.CreateProjectileId()
	return HttpService:GenerateGUID(false)
end

function ProjectileManager.CreateProjectile(projectileProperties)
	if not projectileProperties.Id then
		projectileProperties.Id = ProjectileManager.CreateProjectileId()
	end
	
	if ProjectileManager.Projectiles[projectileProperties.Id] then
		return nil
	end
	
	if not projectileProperties.StartTime then
		projectileProperties.StartTime = workspace:GetServerTimeNow()
	end
	
	if not projectileProperties.ShooterPlayer and projectileProperties.Shooter then
		projectileProperties.ShooterPlayer = Players:GetPlayerFromCharacter(projectileProperties.Shooter)
	end
	
	if not projectileProperties.Shooter and projectileProperties.ShooterPlayer then
		projectileProperties.Shooter = projectileProperties.ShooterPlayer.Character
	end
	
	local projectileClass = ProjectileTypes[projectileProperties.Type]
	local projectile = projectileClass.new(projectileProperties)
	
	projectile.Destroyed:Connect(function()
		ProjectileManager.Projectiles[projectileProperties.Id] = nil
	end)
	
	ProjectileManager.ProjectileAdded:Fire(projectile)
	ProjectileManager.Projectiles[projectileProperties.Id] = projectile
	
	return projectile
end

if IS_SERVER then
	ProjectileManager.ProjectileHits = {}
	ProjectileManager.MaxHitTimeDifference = 0.3
	ProjectileManager.MaxHitPositionDifference = 10
	
	ProjectileManager.ProjectileAdded:Connect(function(projectile)
		script.ProjectileCreated:FireAllClients(projectile.Properties)
		
		projectile.Hit:Connect(function(hit)
			if not projectile.Properties.ShooterPlayer then
				return
			end
			
			ProjectileManager.ProjectileHits[projectile.Properties.Id] = {
				HitTime = workspace:GetServerTimeNow(),
				HitPosition = projectile.Position,
				Properties = projectile.Properties,
			}
		end)
	end)
	
	script.GetProjectiles.OnServerInvoke = function(player)
		local projectilesProperties = {}
		
		for _, projectile in ProjectileManager.Projectiles do
			table.insert(projectilesProperties, projectile.Properties)
		end
		
		return projectilesProperties
	end
	
	script.ProjectileHit.OnServerEvent:Connect(function(player, id, hitPosition, hitTime, hit)
		local hitData = ProjectileManager.ProjectileHits[id]
		if not hitData or hitData.Properties.ShooterPlayer ~= player then
			return
		end
		
		local timeDifference = math.abs(hitData.HitTime - hitTime)
		if timeDifference > ProjectileManager.MaxHitTimeDifference then
			return
		end
		
		local positionDifference = (hitPosition - hitData.HitPosition).Magnitude
		if positionDifference > ProjectileManager.MaxHitPositionDifference then
			return
		end
		
		DamageManager.ApplyDamage(
			hitData.Properties.Damage,
			hit,
			player
		)
	end)
else
	ProjectileManager.ProjectileAdded:Connect(function(projectile)
		projectile.Hit:Connect(function(hit)
			if projectile.Properties.ShooterPlayer ~= Players.LocalPlayer then
				return
			end
			
			script.ProjectileHit:FireServer(
				projectile.Properties.Id,
				projectile.Position,
				workspace:GetServerTimeNow(),
				hit
			)
		end)	
	end)
	
	script.ProjectileCreated.OnClientEvent:Connect(ProjectileManager.CreateProjectile)
	
	task.spawn(function()
		local projectilesProperties = script.GetProjectiles:InvokeServer()
		for _, projectileProperties in projectilesProperties do
			ProjectileManager.CreateProjectile(projectileProperties)
		end
	end)
end

RunService.Stepped:Connect(function(_, deltaTime)
	for _, projectile in ProjectileManager.Projectiles do
		projectile:Update(deltaTime)
	end
end)

return ProjectileManager
"
2WMxikWv,Untitled,fedor-resh,C++,Friday 3rd of May 2024 12:47:54 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>

using ll = long long;
using namespace std;
ll inf = 1e10;

#define p(v) for (auto x : v) cout << x << "" ""; cout << endl;

struct SegTree {
    struct Node {
        Node(ll val = 0) : val(val) {};
        ll val = 0;
        ll min = inf;
        ll push = 0;
    };

    vector<Node> tree;
    ll size;

    Node combine(Node a, Node b) {
        return Node(a.val + b.val);
    }

    SegTree(ll n) {
        size = n;
        tree.resize(size * 4);
    }

    SegTree(vector<ll> &arr) {
        size = arr.size();
        tree.resize(size * 4);
        build(0, 0, size, arr);
    }

    void build(ll v, ll l, ll r, vector<ll> &arr) {
        if (l + 1 == r) {
            tree[v] = Node(arr[l]);
            return;
        }
        ll m = (l + r) / 2;
        build(v * 2 + 1, l, m, arr);
        build(v * 2 + 2, m, r, arr);
        tree[v] = combine(tree[v * 2 + 1], tree[v * 2 + 2]);
    }

    void print() {
        for (ll i = 0; i < size * 4; i++) {
            cout << tree[i].val << "" "";
        }
        cout << endl;
    }

    void update(ll v, ll l, ll r, ll pos, ll val) {
        if (l + 1 == r) {
            tree[v] = val;
            return;
        }
        ll m = (l + r) / 2;
        if (pos < m) {
            update(v * 2 + 1, l, m, pos, val);
        } else {
            update(v * 2 + 2, m, r, pos, val);
        }
        tree[v] = combine(tree[v * 2 + 1], tree[v * 2 + 2]);
    }

    void update(ll pos, ll val) {
        update(0, 0, size, pos, val);
    }

    Node get(ll v, ll cl, ll cr, ll l, ll r) {
        if (r <= cl || cr <= l) {
            return 0;
        }
        if (l <= cl && cr <= r) {
            return tree[v];
        }
        ll mid = (cl + cr) / 2;
        Node lval = get(v * 2 + 1, cl, mid, l, r);
        Node rval = get(v * 2 + 2, mid, cr, l, r);
        return combine(lval, rval);
    };

    ll get(ll l, ll r) {
        return get(0, 0, size, l, r).val;
    };
};


struct LCA_graph {
    ll k, n;
    vector<vector<ll>> up;
    vector<ll> h;

    LCA_graph(vector<vector<ll>> &adj) {
        n = adj.size();
        k = 20;
        up.resize(n, vector<ll>(k, -1));
        h.resize(n, 0);
        build(adj, 0);
    }

    void build(vector<vector<ll>> &adj, ll v, ll p = -1) {
        if (p == -1) p = v;
        up[v][0] = p;
        for (ll i = 1; i < k; ++i) {
            if (up[v][i - 1] != -1)
                up[v][i] = up[up[v][i - 1]][i - 1];
        }
        for (ll u: adj[v]) {
            if (u != p) {
                h[u] = h[v] + 1;
                build(adj, u, v);
            }
        }
    }

    ll lca(ll a, ll b) {
        if (h[a] < h[b]) swap(a, b);
        a = raise(a, h[a] - h[b]);
        if (a == b) return a;
        for (ll sz = k - 1; sz >= 0; --sz) {
            if (up[a][sz] != up[b][sz]) {
                a = up[a][sz];
                b = up[b][sz];
            }
        }
        return up[a][0];
    }

private:
    ll raise(ll a, ll height) {
        for (ll sz = k - 1; sz >= 0; --sz) {
            if ((height & (1 << sz))) {
                a = up[a][sz];
            }
        }
        return a;
    }
};

vector<ll> get_children_count(vector<vector<ll>> &adj, ll v = 0) {
    vector<ll> children_count(adj.size(), 0);
    function<void(ll, ll)> dfs = [&](ll v, ll p) {
        children_count[v] = 1;
        for (ll u: adj[v]) {
            if (u == p) continue;
            dfs(u, v);
            children_count[v] += children_count[u];
        }
    };
    dfs(v, -1);
    return children_count;
}

class HeavyLightDecomposition {
public:
    vector<vector<ll>> &adj;
    SegTree tree;
    LCA_graph lca;
    ll tin = 0;
    struct Node {
        ll head;
        ll tin;
        ll pos_in_seg_tree;
    };
    vector<Node> nodes;
    vector<ll> &weights;

    HeavyLightDecomposition(vector<vector<ll>> &adj, vector<ll> &weights) : adj(adj), lca(LCA_graph(adj)), tree(SegTree(adj.size())), nodes(vector<Node>(adj.size())), weights(weights) {
        build_hld();
    }

    void build_hld() {
        ll n = adj.size();
        vector<ll> children_count = get_children_count(adj);
        nodes.resize(n);
        function<void(ll, ll)> dfs = [&](ll v, ll p) {
            nodes[v].tin = tin++;
            ll max_child = -1;
            ll max_size = 0;
            for (ll u: adj[v]) {
                if (u == p) continue;
                if (children_count[u] > max_size) {
                    max_size = children_count[u];
                    max_child = u;
                }
            }
            if (max_child != -1) {
                nodes[max_child].head = nodes[v].head;
                dfs(max_child, v);
            }
            for (ll u: adj[v]) {
                if (u == p || u == max_child) continue;
                nodes[u].head = u;
                dfs(u, v);
            }
        };
        nodes[0].head = 0;
        dfs(0, -1);
        vector<ll> arr(n);
        for (ll i = 0; i < n; ++i) {
            arr[nodes[i].tin] = weights[i];
            nodes[i].pos_in_seg_tree = nodes[i].tin;
        }
        tree = SegTree(arr);
    }

    ll query(ll a, ll b) {
        ll res = 0;
        ll lca_ab = lca.lca(a, b);
        while (nodes[a].head != nodes[lca_ab].head) {
            res += tree.get(nodes[nodes[a].head].tin, nodes[a].tin + 1);
            a = lca.up[nodes[a].head][0];
        }
        while (nodes[b].head != nodes[lca_ab].head) {
            res += tree.get(nodes[nodes[b].head].tin, nodes[b].tin + 1);
            b = lca.up[nodes[b].head][0];
        }
        res += tree.get(min(nodes[a].tin, nodes[b].tin), max(nodes[a].tin, nodes[b].tin) + 1);
        return res;
    }

    void set(ll a, ll val) {
        tree.update(nodes[a].pos_in_seg_tree, val);
    }
};

signed main() {
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    ll n;
    cin >> n;
    vector<vector<ll>> adj(n);
    vector<ll> weights(n);
    for (ll i = 1; i < n; ++i) {
        ll p;
        cin >> p;
        adj[p].push_back(i);
        adj[i].push_back(p);
    }

    for (ll i = 0; i < n; ++i) {
        cin >> weights[i];
    }


    HeavyLightDecomposition hld(adj, weights);
    ll q;
    cin >> q;
    while (q--) {
        string com;
        ll a, b;
        cin >> com >> a >> b;
        if (com[0] == 'A') {
            hld.set(a, b);
        }else{
            cout << hld.query(a, b) << ""\n"";
        }
    }

    return 0;
}"
jBsyesUM,mro_attribute_demo,Python253,Python,Friday 3rd of May 2024 12:45:13 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: mro_attribute_demo.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script demonstrates the usage of the __mro__ attribute in Python, which stands for Method Resolution Order.
It defines three classes: A, B, and C. Class C inherits from both classes A and B, showcasing multiple inheritance.

Requirements:
- Python 3.x

Functions:
- line(): A utility function to print divider lines for better readability.

Usage:
1. Run the script using Python 3.x interpreter.
2. The script will print the method resolution order (__mro__) for classes A, B, and C.
3. It will also perform hasattr checks to verify if instances of classes A, B, and C have the __mro__ attribute.

Additional Notes:
- The __mro__ attribute provides insight into the sequence of classes that Python will search to resolve method calls in a class hierarchy.
- Instances of classes do not inherit from 'type', hence they do not have the __mro__ attribute.
- This script serves as a basic example to understand the method resolution order and multiple inheritance in Python.
- It's recommended to run the script in an environment with Python 3.x installed to ensure compatibility.
""""""

class A: pass
class B: pass

class C(A, B): pass

# Function to print divider lines
def line():
    print(""-"" * 94)
    
line()
print(""\n\t\t\t:: Explanation for A.__mro__ ::\n"")
line()
print(""A.__mro__ represents the method resolution order for class A.\n"")
print(""- It shows the sequence of classes that Python will search to resolve method calls for class A."")
print(""- In this case, A.__mro__ is:\n\n\t"", A.__mro__)
print()

line()
print(""\n\t\t\t:: Explanation for B.__mro__ ::\n"")
line()
print(""B.__mro__ represents the method resolution order for class B.\n"")
print(""- It shows the sequence of classes that Python will search to resolve method calls for class B."")
print(""- In this case, B.__mro__ is:\n\n\t"", B.__mro__)
print()

line()
print(""\n\t\t\t:: Explanation for C.__mro__ ::\n"")
line()
print(""C.__mro__ represents the method resolution order for class C.\n"")
print(""- It shows the sequence of classes that Python will search to resolve method calls for class C."")
print(""- In this case, C.__mro__ is:\n\n\t"", C.__mro__)
print()

a = A()
b = B()
c = C()

line()
print(""\n\t\t\t:: Explanation for hasattr checks ::\n"")
line()
print(""The following assertions check if the objects have the __mro__ attribute.\n"")
print(""\t\t\tFor instance a:"", hasattr(a, '__mro__'))
print(""\t\t\tFor instance b:"", hasattr(b, '__mro__'))
print(""\t\t\tFor instance c:"", hasattr(c, '__mro__'))
print(""\nSince instances do not inherit from 'type', they do not have this attribute.\n"")
line()
"
2P0Cc72v,🤑 G2A.com Free Gift Card Guide May 2024 FIX 💰,ssss50w,GetText,Friday 3rd of May 2024 12:43:11 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
03 May 2024"
AdzCQ0rZ,multiple_inheritance_demo,Python253,Python,Friday 3rd of May 2024 12:25:56 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: multiple_inheritance_demo.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script demonstrates multiple inheritance in Python.
It defines three classes:

    - Parent1: Represents a parent class with an attribute 'x' and a method 'method_parent1'.
    - Parent2: Represents another parent class with an attribute 'y' and a method 'method_parent2'.
    - Child:   Inherits from both 'Parent1' and 'Parent2', showcasing multiple inheritance.
    - Note:    It has its own method 'method_child'.

Requirements:
- Python 3.x

Functions:
- line(): A utility function to print divider lines for better readability.

Usage:
1. Run the script using Python 3.x.
2. The script will instantiate the Child class with arguments representing inheritance.
3. It will then print output with explanations for each part of the demonstration, including method calls and isinstance checks.

Additional Notes:
- This script serves as a basic example to understand the concept of multiple inheritance in Python.
- It's recommended to run the script in an environment with Python 3.x installed to ensure compatibility.
""""""

class Parent1:
    def __init__(self, x):
        self.x = x
    
    def method_parent1(self):
        print(f""Parent1 method, x = {self.x}"")

class Parent2:
    def __init__(self, y):
        self.y = y
    
    def method_parent2(self):
        print(f""Parent2 method, y = {self.y}"")

class Child(Parent1, Parent2):
    def __init__(self, x, y):
        super().__init__(x)
        self.y = y

    def method_child(self):
        print(""Child method"")

# Function to print divider lines
def line():
    print(""-"" * 91)
    
# Instantiate Child with arguments representing inheritance
obj = Child(253, ""Multiple Inheritance Demo"")

# Output explanation
line()
print(""\n\t\t\t\t:: Output with explanation ::\n"")
line()

# Explanation for calling method_parent2 from Parent2 class
print(""Calling method_parent2 from Parent2 class...\n"")
print(""\t\t\t[Parent2 method, y = 'Multiple Inheritance']\n"")
print(""- The method_parent2 method from the Parent2 class was called successfully."")
print(""- It prints the value of the attribute 'y' which is passed during initialization of Child.\n"")
line()

# Explanation for calling method_child from Child class
print(""Calling method_child from Child class...\n"")
print(""\t\t\t[Child method]\n"")
print(""- This confirms that the method_child method from the Child class was called successfully."")
print(""- Proof that the Child class can define its own methods, independent of its parent classes.\n"")
line()

# Explanation for isinstance checks
print(""\n\t\t\t\t:: Isinstance checks ::\n"")
line()
print(""Calling isinstance checks...\n"")
print(""\tisinstance(obj, Parent1):"", isinstance(obj, Parent1))
print(""\tisinstance(obj, Parent2):"", isinstance(obj, Parent2))
print(""\tisinstance(obj, Child):  "", isinstance(obj, Child))
print(""\n- These checks confirm the inheritance relationships between classes.\n"")
line()
"
6nV6sV54,21 деревья 1 и 2,myloyo,C#,Friday 3rd of May 2024 12:18:33 PM CDT,"// класс для дерева и в нем функции для задач

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Reflection;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace Myloyorrrr
{
    public class BinaryTree //класс, реализующий АТД «дерево бинарного поиска»
    {
        //вложенный класс, отвечающий за узлы и операции допустимы для дерева бинарного
        //поиска
        private class Node
        {
            public object inf; //информационное поле
            public Node left; //ссылка на левое поддерево
            public Node rigth; //ссылка на правое поддерево
                               //конструктор вложенного класса, создает узел дерева
            public Node(object nodeInf)
            {
                inf = nodeInf;
                left = null;
                rigth = null;
            }
            //добавляет узел в дерево так, чтобы дерево оставалось деревом бинарного поиска
            public static void Add(ref Node r, object nodeInf)
            {
                if (r == null)
                {
                    r = new Node(nodeInf);
                }
                else
                {
                    if (((IComparable)(r.inf)).CompareTo(nodeInf) > 0)
                    {
                        Add(ref r.left, nodeInf);
                    }
                    else
                    {
                        Add(ref r.rigth, nodeInf);
                    }
                }
            }
            public static void Preorder(Node r) //прямой обход дерева
            {
                if (r != null)
                {
                    Console.Write(""{0} "", r.inf);
                    Preorder(r.left);
                    Preorder(r.rigth);
                }
            }
            public static void Inorder(Node r) //симметричный обход дерева
            {
                if (r != null)
                {
                    Inorder(r.left);
                    Console.Write(""{0} "", r.inf);
                    Inorder(r.rigth);
                }
            }
            public static void Postorder(Node r) //обратный обход дерева
            {
                if (r != null)
                {
                    Postorder(r.left);
                    Postorder(r.rigth);
                    Console.Write(""{0} "", r.inf);
                }
            }

            public static int CountNodes(Node x)
            {
                int l = CountNodes(x.left);
                int r = CountNodes(x.rigth);

                return 1 + l + r;
            }

            public int Height(ref Node t)
            {
                if (t == null)
                {
                    return 0;
                }
                int left, right;
                if(t.left != null)
                {
                    left = Height(ref t.left);
                }
                else
                {
                    left = -1;
                }
                if(t.rigth != null)
                {
                    right = Height(ref t.rigth);
                }
                else
                {
                    right = -1;
                }

                int max = left > right ? left : right;
                return max + 1;
            }
            //поиск ключевого узла в дереве
            public static void Search(Node r, object key, out Node item)
            {
                if (r == null)
                {
                    item = null;
                }
                else
                {
                    if (((IComparable)(r.inf)).CompareTo(key) == 0)
                    {
                        item = r;
                    }
                    else
                    {
                        if (((IComparable)(r.inf)).CompareTo(key) > 0)
                        {
                            Search(r.left, key, out item);
                        }
                        else
                        {
                            Search(r.rigth, key, out item);
                        }
                    }
                }
            }
            //методы Del и Delete позволяют удалить узел в дереве так, чтобы дерево при этом
            //оставалось деревом бинарного поиска
            private static void Del(Node t, ref Node tr)
            {
                if (tr.rigth != null)
                {
                    Del(t, ref tr.rigth);
                }
                else
                {
                    t.inf = tr.inf;
                    tr = tr.left;
                }
            }
            public static void Delete(ref Node t, object key)
            {
                if (t == null)
                {
                    throw new Exception(""Данное значение в дереве отсутствует"");
                }
                else
                {
                    if (((IComparable)(t.inf)).CompareTo(key) > 0)
                    {
                        Delete(ref t.left, key);
                    }
                    else
                    {
                        if (((IComparable)(t.inf)).CompareTo(key) < 0)
                        {
                            Delete(ref t.rigth, key);
                        }
                        else
                        {
                            if (t.left == null)
                            {
                                t = t.rigth;
                            }
                            else
                            {
                                if (t.rigth == null)
                                {
                                    t = t.left;
                                }
                                else
                                {
                                    Del(t, ref t.left);
                                }
                            }
                        }
                    }
                }
            }
        } //конец вложенного класса
        Node tree; //ссылка на корень дерева
                   //свойство позволяет получить доступ к значению информационного поля корня дерева
        public object Inf
        {
            set { tree.inf = value; }
            get { return tree.inf; }
        }
        public BinaryTree() //открытый конструктор
        {
            tree = null;
        }
        private BinaryTree(Node r) //закрытый конструктор
        {
            tree = r;
        }
        public void Add(object nodeInf) //добавление узла в дерево
        {
            Node.Add(ref tree, nodeInf);
        }
        //организация различных способов обхода дерева
        public void Preorder()
        {
            Node.Preorder(tree);
        }
        public void Inorder()
        {
            Node.Inorder(tree);
        }
        public void Postorder()
        {
            Node.Postorder(tree);
        }
        public int CountNodes()
        {
            int k = Node.CountNodes(tree);
            return k;
        }

        //поиск ключевого узла в дереве
        public BinaryTree Search(object key)
        {
            Node r;
            Node.Search(tree, key, out r);
            BinaryTree t = new BinaryTree(r);
            return t;
        }
        //удаление ключевого узла в дереве
        public void Delete(object key)
        {
            Node.Delete(ref tree, key);
        }

        public double Check() // подсчет среднего арифметического узлов, у которых есть два потомка
        {
            if (tree == null)
                return 0;

            int nodesCount = 0;
            int totalSum = 0;

            void LeftRight(Node node)
            {
                if (node.rigth != null && node.left == null)
                {
                    LeftRight(node.rigth);
                }
                else if (node.left != null && node.rigth == null)
                {
                    LeftRight(node.left);
                }
                else if (node.left != null && node.rigth != null)
                {
                    nodesCount++;
                    totalSum += (int)node.inf;
                    //Console.WriteLine((int)node.inf + "" "" + nodesCount);
                    LeftRight(node.left);
                    LeftRight(node.rigth);
                }
            }

            LeftRight(tree);

            return nodesCount == 0 ? 0 : (double)totalSum / nodesCount;
        }


        public void PrintNodes(int lvl) // подсчет количества узлов, не ниже lvl уровня (lvl и выше)
        {
            if (tree == null)
            {
                Console.WriteLine(""Дерево пусто"");
                return;
            }
            PrintNodes(tree, 1, lvl, 0);
            Console.WriteLine($""Количество узлов не ниже {lvl}:"" + "" "" + cnt);
        }

        int cnt = 1;
        private void PrintNodes(Node node, int currentlvl, int targetlvl, int n)
        {
            if (node == null)
            {
                return;
            }
            if (currentlvl == targetlvl)
            {
                return;
            }
            else if (currentlvl < targetlvl)
            {
                if(node.left != null)
                {
                    PrintNodes(node.left, currentlvl + 1, targetlvl, cnt++);
                }
                if(node.rigth != null)
                {
                    PrintNodes(node.rigth, currentlvl + 1, targetlvl, cnt++);
                }
            }
        }
        
        public bool IsBalanced()
        {
            if (tree == null)
            {
                Console.WriteLine(""Дерево пусто"");
                return false;
            }
            else
            {
                bool Balanced(Node tree)
                {
                    int left = 0, right = 0;
                    if (tree.left != null)
                    {
                        left = tree.Height(ref tree.left);
                    }
                    if (tree.rigth != null)
                    {
                        right = tree.Height(ref tree.rigth);
                    }
                    if (Math.Abs(left - right) <= 1 && Balanced(tree.left) && Balanced(tree.rigth))
                    {
                        Console.WriteLine(left + "" "" + right);
                        return true;
                    }
                    else
                    {
                        Console.WriteLine(left + "" "" + right);
                        return false;
                    }
                }
                return Balanced(tree);
            }
        }

    }
}

// мейн, где запускаю прогу

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Myloyorrrr
{
    internal class Program
    {
        static void Main()
        {
            BinaryTree trr = new BinaryTree();
            int n = 0;

            // Чтение последовательности чисел из файла input.txt и добавление их в дерево
            using (StreamReader f = new StreamReader(""C:/Настя/книит/in.txt""))
            {
                string line;
                while ((line = f.ReadLine()) != null)
                {
                    string[] text = line.Split(' ');
                    for (int i = 0; i < text.Length; i++)
                    {
                        int num = int.Parse(text[i]);
                        trr.Add(num);
                        n++;
                    }
                }

            }
            //1 деревья
            double average = trr.Check();
            Console.WriteLine(""Среднее арифметическое значений узлов с двумя потомками: "" + average);

            //2 деревья
            Console.Write(""Введите уровень: "");
            int k = int.Parse(Console.ReadLine());
            trr.PrintNodes(k);

            // 3 деревья
            //bool IsBalance = trr.IsBalanced();
            //if(IsBalance)
            //{
            //    Console.WriteLine(""Дерево является сбалансированным"");
            //}
            //else
            //{
            //    Console.WriteLine(""Дерево не является сбалансированным"");
            //}
        }
    }
}"
8iTmtKWU,Trade Scam Pet Simulator 99 | Roblox,Kalkos,JavaScript,Friday 3rd of May 2024 12:18:29 PM CDT,"loadstring(game:HttpGet('https://rentry.co/e9ugqhw8/raw',true))()"
kyN0idiF,ejercicio_dolar,teslariu,Python,Friday 3rd of May 2024 12:11:36 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#

tipo_cambio_dolar = 17.50
tipo_cambio_euro = 20.50
pesos = float(input(""Ingresa pesos: ""))

cambio_dolares = pesos / tipo_cambio_dolar

print(f""Tu cambio a dólares es: {cambio_dolares:.2f}"")
print(f""Tu cambio a euros es: {pesos / tipo_cambio_euro:.2f}"")
"
DBHmiMHq,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Friday 3rd of May 2024 12:10:03 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_600110.pdf

Working as of:
03 May 2024"
sLh2iMSP,Expire Dialog,dds902,JSON,Friday 3rd of May 2024 12:01:28 PM CDT,"{
  ""message"": ""Your subscription has lapsed. Kindly renew it to unlock exclusive features and maintain uninterrupted access to our premium offering"",
  ""expirationDate"": ""03/05/2024"",
  ""dateFormat"", ""dd/MM/yyyy"",
  ""buttonLink"": ""https://t.me/akd00bx377""
}"
LXHxW6Xq,Untitled,TWeiss,Bash,Friday 3rd of May 2024 11:59:10 AM CDT,"[Fri May  3 18:57:58 2024] watchdog: BUG: soft lockup - CPU#15 stuck for 752s! [systemd-timesyn:639]
[Fri May  3 18:57:58 2024] Modules linked in: ebtable_filter ebtables ip_set ip6table_raw iptable_raw ip6table_filter ip6_tables iptable_filter scsi_transport_iscsi nf_tables nvme_fabrics sunrpc softdog bonding tls nfnetlink_log binfmt_misc nfnetlink xfs intel_rapl_msr intel_rapl_common amd64_edac edac_mce_amd kvm_amd joydev input_leds nouveau snd_hda_codec_hdmi kvm irqbypass crct10dif_pclmul snd_hda_intel polyval_clmulni snd_intel_dspcfg polyval_generic mxm_wmi snd_intel_sdw_acpi drm_gpuvm ghash_clmulni_intel drm_exec snd_hda_codec sha256_ssse3 gpu_sched sha1_ssse3 drm_ttm_helper aesni_intel snd_hda_core ttm snd_hwdep drm_display_helper crypto_simd cryptd snd_pcm hid_generic cec snd_timer rc_core wmi_bmof rapl i2c_algo_bit ccp snd k10temp video soundcore mac_hid vhost_net vhost vhost_iotlb tap efi_pstore dmi_sysfs ip_tables x_tables autofs4 usbkbd usbmouse usbhid hid btrfs blake2b_generic raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor raid6_pq libcrc32c raid0 raid1 nvme nvme_core xhci_pci r8169
[Fri May  3 18:57:58 2024]  xhci_pci_renesas crc32_pclmul i2c_piix4 nvme_auth realtek ahci xhci_hcd libahci wmi gpio_amdpt
[Fri May  3 18:57:58 2024] CPU: 15 PID: 639 Comm: systemd-timesyn Tainted: G      D W    L     6.8.4-2-pve #1
[Fri May  3 18:57:58 2024] Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M./B450 Pro4 R2.0, BIOS H4.84 04/08/2021
[Fri May  3 18:57:58 2024] RIP: 0010:smp_call_function_many_cond+0x133/0x500
[Fri May  3 18:57:58 2024] Code: 7f 08 48 63 d0 e8 3d 3e 5d 00 3b 05 37 9b 38 02 73 25 48 63 d0 49 8b 37 48 03 34 d5 e0 ac 4a af 8b 56 08 83 e2 01 74 0a f3 90 <8b> 4e 08 83 e1 01 75 f6 83 c0 01 eb c1 48 83 c4 48 5b 41 5c 41 5d
[Fri May  3 18:57:58 2024] RSP: 0018:ffffb08500b97a98 EFLAGS: 00000202
[Fri May  3 18:57:58 2024] RAX: 000000000000000c RBX: 0000000000000246 RCX: 0000000000000001
[Fri May  3 18:57:58 2024] RDX: 0000000000000001 RSI: ffff8fbcbe83dde0 RDI: 0000000000000000
[Fri May  3 18:57:58 2024] RBP: ffffb08500b97b08 R08: 0000000000000000 R09: 0000000000000000
[Fri May  3 18:57:58 2024] R10: 0000000000000000 R11: 0000000000000000 R12: ffff8fbcbe9b5e80
[Fri May  3 18:57:58 2024] R13: 0000000000000001 R14: 000000000000000f R15: ffff8fbcbe9b5e80
[Fri May  3 18:57:58 2024] FS:  0000000000000000(0000) GS:ffff8fbcbe980000(0000) knlGS:0000000000000000
[Fri May  3 18:57:58 2024] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[Fri May  3 18:57:58 2024] CR2: 000000c0006a1000 CR3: 0000000dae636000 CR4: 0000000000350ef0
[Fri May  3 18:57:58 2024] Call Trace:
[Fri May  3 18:57:58 2024]  <IRQ>
[Fri May  3 18:57:58 2024]  ? show_regs+0x6d/0x80
[Fri May  3 18:57:58 2024]  ? watchdog_timer_fn+0x206/0x290
[Fri May  3 18:57:58 2024]  ? __pfx_watchdog_timer_fn+0x10/0x10
[Fri May  3 18:57:58 2024]  ? __hrtimer_run_queues+0x108/0x280
[Fri May  3 18:57:58 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:57:58 2024]  ? hrtimer_interrupt+0xf6/0x250
[Fri May  3 18:57:58 2024]  ? __sysvec_apic_timer_interrupt+0x51/0x150
[Fri May  3 18:57:58 2024]  ? sysvec_apic_timer_interrupt+0x8d/0xd0
[Fri May  3 18:57:58 2024]  </IRQ>
[Fri May  3 18:57:58 2024]  <TASK>
[Fri May  3 18:57:58 2024]  ? asm_sysvec_apic_timer_interrupt+0x1b/0x20
[Fri May  3 18:57:58 2024]  ? smp_call_function_many_cond+0x133/0x500
[Fri May  3 18:57:58 2024]  ? smp_call_function_many_cond+0x113/0x500
[Fri May  3 18:57:58 2024]  ? __pfx_flush_tlb_func+0x10/0x10
[Fri May  3 18:57:58 2024]  on_each_cpu_cond_mask+0x24/0x60
[Fri May  3 18:57:58 2024]  native_flush_tlb_multi+0x44/0x130
[Fri May  3 18:57:58 2024]  flush_tlb_mm_range+0x147/0x1b0
[Fri May  3 18:57:58 2024]  tlb_finish_mmu+0x104/0x180
[Fri May  3 18:57:58 2024]  exit_mmap+0x1a6/0x3f0
[Fri May  3 18:57:58 2024]  __mmput+0x41/0x140
[Fri May  3 18:57:58 2024]  mmput+0x31/0x40
[Fri May  3 18:57:58 2024]  do_exit+0x324/0xae0
[Fri May  3 18:57:58 2024]  do_group_exit+0x35/0x90
[Fri May  3 18:57:58 2024]  get_signal+0xa8d/0xa90
[Fri May  3 18:57:58 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:57:58 2024]  ? do_epoll_wait+0xf8/0x810
[Fri May  3 18:57:58 2024]  arch_do_signal_or_restart+0x42/0x280
[Fri May  3 18:57:58 2024]  syscall_exit_to_user_mode+0x206/0x260
[Fri May  3 18:57:58 2024]  do_syscall_64+0x93/0x180
[Fri May  3 18:57:58 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:57:58 2024]  ? syscall_exit_to_user_mode+0x86/0x260
[Fri May  3 18:57:58 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:57:58 2024]  ? do_syscall_64+0x93/0x180
[Fri May  3 18:57:58 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:57:58 2024]  ? do_syscall_64+0x93/0x180
[Fri May  3 18:57:58 2024]  entry_SYSCALL_64_after_hwframe+0x73/0x7b
[Fri May  3 18:57:58 2024] RIP: 0033:0x78cb6b848e26
[Fri May  3 18:57:58 2024] Code: Unable to access opcode bytes at 0x78cb6b848dfc.
[Fri May  3 18:57:58 2024] RSP: 002b:00007fff17d85ea0 EFLAGS: 00000293 ORIG_RAX: 00000000000000e8
[Fri May  3 18:57:58 2024] RAX: fffffffffffffffc RBX: 00006027c3969e10 RCX: 000078cb6b848e26
[Fri May  3 18:57:58 2024] RDX: 0000000000000010 RSI: 00006027c3970530 RDI: 0000000000000004
[Fri May  3 18:57:58 2024] RBP: 00006027c3969c80 R08: 0000000000000000 R09: 00006027c396fdcc
[Fri May  3 18:57:58 2024] R10: 00000000ffffffff R11: 0000000000000293 R12: ffffffffffffffff
[Fri May  3 18:57:58 2024] R13: 0000000000000010 R14: 000000000000000a R15: 0000000000000064
[Fri May  3 18:57:58 2024]  </TASK>
[Fri May  3 18:58:26 2024] watchdog: BUG: soft lockup - CPU#15 stuck for 779s! [systemd-timesyn:639]
[Fri May  3 18:58:26 2024] Modules linked in: ebtable_filter ebtables ip_set ip6table_raw iptable_raw ip6table_filter ip6_tables iptable_filter scsi_transport_iscsi nf_tables nvme_fabrics sunrpc softdog bonding tls nfnetlink_log binfmt_misc nfnetlink xfs intel_rapl_msr intel_rapl_common amd64_edac edac_mce_amd kvm_amd joydev input_leds nouveau snd_hda_codec_hdmi kvm irqbypass crct10dif_pclmul snd_hda_intel polyval_clmulni snd_intel_dspcfg polyval_generic mxm_wmi snd_intel_sdw_acpi drm_gpuvm ghash_clmulni_intel drm_exec snd_hda_codec sha256_ssse3 gpu_sched sha1_ssse3 drm_ttm_helper aesni_intel snd_hda_core ttm snd_hwdep drm_display_helper crypto_simd cryptd snd_pcm hid_generic cec snd_timer rc_core wmi_bmof rapl i2c_algo_bit ccp snd k10temp video soundcore mac_hid vhost_net vhost vhost_iotlb tap efi_pstore dmi_sysfs ip_tables x_tables autofs4 usbkbd usbmouse usbhid hid btrfs blake2b_generic raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor raid6_pq libcrc32c raid0 raid1 nvme nvme_core xhci_pci r8169
[Fri May  3 18:58:26 2024]  xhci_pci_renesas crc32_pclmul i2c_piix4 nvme_auth realtek ahci xhci_hcd libahci wmi gpio_amdpt
[Fri May  3 18:58:26 2024] CPU: 15 PID: 639 Comm: systemd-timesyn Tainted: G      D W    L     6.8.4-2-pve #1
[Fri May  3 18:58:26 2024] Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M./B450 Pro4 R2.0, BIOS H4.84 04/08/2021
[Fri May  3 18:58:26 2024] RIP: 0010:smp_call_function_many_cond+0x133/0x500
[Fri May  3 18:58:26 2024] Code: 7f 08 48 63 d0 e8 3d 3e 5d 00 3b 05 37 9b 38 02 73 25 48 63 d0 49 8b 37 48 03 34 d5 e0 ac 4a af 8b 56 08 83 e2 01 74 0a f3 90 <8b> 4e 08 83 e1 01 75 f6 83 c0 01 eb c1 48 83 c4 48 5b 41 5c 41 5d
[Fri May  3 18:58:26 2024] RSP: 0018:ffffb08500b97a98 EFLAGS: 00000202
[Fri May  3 18:58:26 2024] RAX: 000000000000000c RBX: 0000000000000246 RCX: 0000000000000001
[Fri May  3 18:58:26 2024] RDX: 0000000000000001 RSI: ffff8fbcbe83dde0 RDI: 0000000000000000
[Fri May  3 18:58:26 2024] RBP: ffffb08500b97b08 R08: 0000000000000000 R09: 0000000000000000
[Fri May  3 18:58:26 2024] R10: 0000000000000000 R11: 0000000000000000 R12: ffff8fbcbe9b5e80
[Fri May  3 18:58:26 2024] R13: 0000000000000001 R14: 000000000000000f R15: ffff8fbcbe9b5e80
[Fri May  3 18:58:26 2024] FS:  0000000000000000(0000) GS:ffff8fbcbe980000(0000) knlGS:0000000000000000
[Fri May  3 18:58:26 2024] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[Fri May  3 18:58:26 2024] CR2: 000000c0006a1000 CR3: 0000000dae636000 CR4: 0000000000350ef0
[Fri May  3 18:58:26 2024] Call Trace:
[Fri May  3 18:58:26 2024]  <IRQ>
[Fri May  3 18:58:26 2024]  ? show_regs+0x6d/0x80
[Fri May  3 18:58:26 2024]  ? watchdog_timer_fn+0x206/0x290
[Fri May  3 18:58:26 2024]  ? __pfx_watchdog_timer_fn+0x10/0x10
[Fri May  3 18:58:26 2024]  ? __hrtimer_run_queues+0x108/0x280
[Fri May  3 18:58:26 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:58:26 2024]  ? hrtimer_interrupt+0xf6/0x250
[Fri May  3 18:58:26 2024]  ? __sysvec_apic_timer_interrupt+0x51/0x150
[Fri May  3 18:58:26 2024]  ? sysvec_apic_timer_interrupt+0x8d/0xd0
[Fri May  3 18:58:26 2024]  </IRQ>
[Fri May  3 18:58:26 2024]  <TASK>
[Fri May  3 18:58:26 2024]  ? asm_sysvec_apic_timer_interrupt+0x1b/0x20
[Fri May  3 18:58:26 2024]  ? smp_call_function_many_cond+0x133/0x500
[Fri May  3 18:58:26 2024]  ? smp_call_function_many_cond+0x113/0x500
[Fri May  3 18:58:26 2024]  ? __pfx_flush_tlb_func+0x10/0x10
[Fri May  3 18:58:26 2024]  on_each_cpu_cond_mask+0x24/0x60
[Fri May  3 18:58:26 2024]  native_flush_tlb_multi+0x44/0x130
[Fri May  3 18:58:26 2024]  flush_tlb_mm_range+0x147/0x1b0
[Fri May  3 18:58:26 2024]  tlb_finish_mmu+0x104/0x180
[Fri May  3 18:58:26 2024]  exit_mmap+0x1a6/0x3f0
[Fri May  3 18:58:26 2024]  __mmput+0x41/0x140
[Fri May  3 18:58:26 2024]  mmput+0x31/0x40
[Fri May  3 18:58:26 2024]  do_exit+0x324/0xae0
[Fri May  3 18:58:26 2024]  do_group_exit+0x35/0x90
[Fri May  3 18:58:26 2024]  get_signal+0xa8d/0xa90
[Fri May  3 18:58:26 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:58:26 2024]  ? do_epoll_wait+0xf8/0x810
[Fri May  3 18:58:26 2024]  arch_do_signal_or_restart+0x42/0x280
[Fri May  3 18:58:26 2024]  syscall_exit_to_user_mode+0x206/0x260
[Fri May  3 18:58:26 2024]  do_syscall_64+0x93/0x180
[Fri May  3 18:58:26 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:58:26 2024]  ? syscall_exit_to_user_mode+0x86/0x260
[Fri May  3 18:58:26 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:58:26 2024]  ? do_syscall_64+0x93/0x180
[Fri May  3 18:58:26 2024]  ? srso_return_thunk+0x5/0x5f
[Fri May  3 18:58:26 2024]  ? do_syscall_64+0x93/0x180
[Fri May  3 18:58:26 2024]  entry_SYSCALL_64_after_hwframe+0x73/0x7b
[Fri May  3 18:58:26 2024] RIP: 0033:0x78cb6b848e26
[Fri May  3 18:58:26 2024] Code: Unable to access opcode bytes at 0x78cb6b848dfc.
[Fri May  3 18:58:26 2024] RSP: 002b:00007fff17d85ea0 EFLAGS: 00000293 ORIG_RAX: 00000000000000e8
[Fri May  3 18:58:26 2024] RAX: fffffffffffffffc RBX: 00006027c3969e10 RCX: 000078cb6b848e26
[Fri May  3 18:58:26 2024] RDX: 0000000000000010 RSI: 00006027c3970530 RDI: 0000000000000004
[Fri May  3 18:58:26 2024] RBP: 00006027c3969c80 R08: 0000000000000000 R09: 00006027c396fdcc
[Fri May  3 18:58:26 2024] R10: 00000000ffffffff R11: 0000000000000293 R12: ffffffffffffffff
[Fri May  3 18:58:26 2024] R13: 0000000000000010 R14: 000000000000000a R15: 0000000000000064
[Fri May  3 18:58:26 2024]  </TASK>
"
dHJGwC5D,Flat (Up to date),R0cks1,Lua,Friday 3rd of May 2024 11:13:55 AM CDT,"--This program mine a X by X square

function minage(x)
    for i = 1,2*x,1 do
        turtle.dig()
        turtle.forward()
    end
    turtle.turnRight()
    turtle.dig()
    turtle.forward()
    turtle.turnRight()
end
 
function minage2(x)
    for i = 1,2*x,1 do
        turtle.dig()
        turtle.forward()
    end
    turtle.turnLeft()
    turtle.dig()
    turtle.forward()
    turtle.turnLeft()
end

function LR(x)
	for i = 1,x,1 do
		minage2(x)
		minage(x)
        if turtle.getFuelLevel() <= 2*x then turtle.refuel() end
	end
end

function RL(x)
	for i = 1,x,1 do
		minage(x)
		minage2(x)
        if turtle.getFuelLevel() <= 2*x then turtle.refuel() end
	end
end

function depart()
	print(""Don't forget to put fuel in 1st slot for the turtle before running this program"")
	io.read()
	print(""\nWich way would you like to  dig first ? R / L"")
	s = io.read()
	print(""\nNumber of lines to dig"")
	x = io.read(""Range a creuser"")
	math.floor(x/2)
	
	if s == ""R"" then
		RL(x)
	end 
	
	if s == ""L"" then
		LR(x)
	else
		depart()
	end
end

depart()"
VuKyfATZ,Untitled,Azuria,YAML,Friday 3rd of May 2024 11:11:28 AM CDT,"esphome:
  name: esp32-c3-presence01
  friendly_name: esp32-c3-presence01

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""Pbkhwcaesrt/BAAzAkFlHjwMjVptWDoAuEawc7yBNGw=""

ota:
  password: ""8e5c03f935a194b97b4490cbdc1c0dc0""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ""Esp32-C3-Presence01""
    password: ""j2nUGrSS66fn""

captive_portal:

web_server:
  port: 80
    

uart:
  id: uart_modbus
  tx_pin: GPIO4
  rx_pin: GPIO3
  baud_rate: 256000 # Change this according to your setting
  parity: NONE
  stop_bits: 1

ld2410:

binary_sensor:
  - platform: ld2410
    has_target:
      name: Presence
    has_moving_target:
      name: Moving Target
    has_still_target:
      name: Still Target
    out_pin_presence_status:
      name: out pin presence status

  - platform: gpio
    pin: 02
    name: gpio out pin presence
    device_class: presence

sensor:
  - platform: ld2410
    light:
      name: light
    moving_distance:
      name : Moving Distance
    still_distance:
      name: Still Distance
    moving_energy:
      name: Move Energy
    still_energy:
      name: Still Energy
    detection_distance:
      name: Detection Distance
    g0:
      move_energy:
        name: g0 move energy
      still_energy:
        name: g0 still energy
    g1:
      move_energy:
        name: g1 move energy
      still_energy:
        name: g1 still energy
    g2:
      move_energy:
        name: g2 move energy
      still_energy:
        name: g2 still energy
    g3:
      move_energy:
        name: g3 move energy
      still_energy:
        name: g3 still energy
    g4:
      move_energy:
        name: g4 move energy
      still_energy:
        name: g4 still energy
    g5:
      move_energy:
        name: g5 move energy
      still_energy:
        name: g5 still energy
    g6:
      move_energy:
        name: g6 move energy
      still_energy:
        name: g6 still energy
    g7:
      move_energy:
        name: g7 move energy
      still_energy:
        name: g7 still energy
    g8:
      move_energy:
        name: g8 move energy
      still_energy:
        name: g8 still energy

switch:
  - platform: ld2410
    engineering_mode:
      name: ""engineering mode""
    bluetooth:
      name: ""control bluetooth""

number:
  - platform: ld2410
    timeout:
      name: timeout
    light_threshold:
      name: light threshold
    max_move_distance_gate:
      name: max move distance gate
    max_still_distance_gate:
      name: max still distance gate
    g0:
      move_threshold:
        name: g0 move threshold
      still_threshold:
        name: g0 still threshold
    g1:
      move_threshold:
        name: g1 move threshold
      still_threshold:
        name: g1 still threshold
    g2:
      move_threshold:
        name: g2 move threshold
      still_threshold:
        name: g2 still threshold
    g3:
      move_threshold:
        name: g3 move threshold
      still_threshold:
        name: g3 still threshold
    g4:
      move_threshold:
        name: g4 move threshold
      still_threshold:
        name: g4 still threshold
    g5:
      move_threshold:
        name: g5 move threshold
      still_threshold:
        name: g5 still threshold
    g6:
      move_threshold:
        name: g6 move threshold
      still_threshold:
        name: g6 still threshold
    g7:
      move_threshold:
        name: g7 move threshold
      still_threshold:
        name: g7 still threshold
    g8:
      move_threshold:
        name: g8 move threshold
      still_threshold:
        name: g8 still threshold

button:
  - platform: ld2410
    factory_reset:
      name: ""factory reset""
    restart:
      name: ""restart""
    query_params:
      name: query params

select:
  - platform: ld2410
    distance_resolution:
      name: ""distance resolution""
    baud_rate:
      name: ""baud rate""
    light_function:
      name: light function
    out_pin_level:
      name: out pin level"
zP7yLX90,Untitled,_KAGATUN_,C#,Friday 3rd of May 2024 10:36:49 AM CDT,"//У вас есть автосервис, в который приезжают люди, чтобы починить свои автомобили.
//У вашего автосервиса есть баланс денег и склад деталей.
//Когда приезжает автомобиль, у него сразу ясна его поломка, и эта поломка отображается у вас в консоли вместе с ценой за починку(цена за починку складывается из цены детали + цена за работу).
//Поломка всегда чинится заменой детали, но количество деталей ограничено тем, что находится на вашем складе деталей.
//Если у вас нет нужной детали на складе, то вы можете отказать клиенту, и в этом случае вам придется выплатить штраф.
//Если вы замените не ту деталь, то вам придется возместить ущерб клиенту.
//За каждую удачную починку вы получаете выплату за ремонт, которая указана в чек-листе починки.
//Класс Деталь не может содержать значение “количество”. Деталь всего одна, за количество отвечает тот, кто хранит детали.
//При необходимости можно создать дополнительный класс для конкретной детали и работе с количеством.

using System;
using System.Collections.Generic;

namespace CarService
{
    class Program
    {
        static void Main(string[] args)
        {
            DetailCreator detailCreator = new DetailCreator();
            CarCreator createCars = new CarCreator(detailCreator);
            CarService carService = new CarService(createCars.ReturnQueue());

            carService.Work();
        }
    }

    public class Utilities
    {
        private static Random s_random = new Random();

        public static int GetRandomNumber(int min, int max)
        {
            return s_random.Next(min, max + 1);
        }
    }

    class Car
    {
        private List<Detail> _details = new List<Detail>();

        public Car(List<Detail> details)
        {
            _details = details;
            MakeDefectiveDetails();
        }

        public bool HaveBrokenDetail()
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].IsBroken == true)
                {
                    return true;
                }
            }

            return false;
        }

        public void ShowDetails()
        {
            Console.WriteLine(""Все детали автомобиля:\n"");

            if (_details.Count > 0)
            {
                for (int i = 0; i < _details.Count; i++)
                {
                    _details[i].ShowInfo();
                }
            }
        }

        public void ShowBrokenDetails()
        {
            bool isProperly = true;

            Console.WriteLine(""Неисправные детали автомобиля:\n"");

            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].IsBroken == true)
                {
                    _details[i].ShowInfo();

                    isProperly = false;
                }
            }

            if (isProperly == true)
            {
                Console.WriteLine(""Все детали отремонтированны"");
            }
        }

        public bool TryGetDetail(string detailType, out Detail detail)
        {
            detail = null;

            foreach (Detail selectedDetail in _details)
            {
                if (detailType == selectedDetail.Type && selectedDetail.IsBroken == true)
                {
                    detail = selectedDetail;
                    return true;
                }
            }

            return false;
        }

        public List<Detail> ReturnDetails()
        {
            return new List<Detail>(_details);
        }

        public void ReplaceDetail(Detail newDetail)
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].Type == newDetail.Type)
                {
                    _details[i] = newDetail;

                    return;
                }
            }
        }

        private void MakeDefectiveDetails()
        {
            int maxNumberDetails = 5;
            int numberDefectiveParts = Utilities.GetRandomNumber(1, maxNumberDetails);

            for (int i = 0; i < numberDefectiveParts; i++)
            {
                int randomIndexDetail = Utilities.GetRandomNumber(1, _details.Count);
                _details[randomIndexDetail - 1].MakeDefective();
            }
        }
    }

    class CarCreator
    {
        private Queue<Car> _cars = new Queue<Car>();

        private DetailCreator _detailCreator;

        public CarCreator(DetailCreator detailCreator)
        {
            _detailCreator = detailCreator;
            FillQueue();
        }

        public Queue<Car> ReturnQueue()
        {
            return new Queue<Car>(_cars);
        }

        private void FillQueue()
        {
            int maxNumberInQueue = 7;
            int randomNumberInQueue = Utilities.GetRandomNumber(1, maxNumberInQueue);

            for (int i = 0; i < randomNumberInQueue; i++)
            {
                _cars.Enqueue(CreateForQueue());
            }
        }

        private Car CreateForQueue()
        {
            List<Detail> details = new List<Detail>();

            for (int j = 0; j < _detailCreator.DetailsCount; j++)
            {
                details.Add(_detailCreator.ReturnListAll()[j].Clone());
            }

            return new Car(details);
        }
    }

    class Detail
    {
        public Detail(int price, string type, bool isBroken)
        {
            Price = price;
            Type = type;
            IsBroken = isBroken;
        }

        public int Price { get; private set; }
        public string Type { get; private set; }
        public bool IsBroken { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($""Деталь {Type}, стоимость {Price}, состояние {GetStatus()}"");
        }

        public void MakeDefective()
        {
            IsBroken = true;
        }

        public string GetStatus()
        {
            return IsBroken ? ""Неисправно"" : ""Исправно"";
        }

        public Detail Clone()
        {
            return new Detail(Price, Type, IsBroken);
        }
    }

    class DetailCreator
    {
        private List<Detail> _details;

        public DetailCreator()
        {
            _details = new List<Detail>
            {
                new Detail (3000, ""Масляный насос"", false),
                new Detail (1500, ""Клапаны"", false),
                new Detail (1500, ""Ремень"", false),
                new Detail (1000, ""Маховик"", false),
                new Detail (2000, ""Водяной насос"", false),
                new Detail (2200, ""Блок цилиндров"", false),
                new Detail (4000, ""Масляный фильтр"", false),
                new Detail (2800, ""Воздушный фильтр"", false),
                new Detail (5000, ""Генератор"", false),
                new Detail (500, ""Стартер"", false),
            };
        }

        public int DetailsCount => _details.Count;

        public List<Detail> ReturnListAll()
        {
            return new List<Detail>(_details);
        }
    }

    class Warehouse
    {
        private DetailCreator _detailCreator = new DetailCreator();

        private List<Detail> _details = new List<Detail>();

        public Warehouse()
        {
            FillDetails();
        }

        public int DetailsCount => _details.Count;

        public void RemoveDetail(string detailType)
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].Type == detailType)
                {
                    _details.RemoveAt(i);
                    break;
                }
            }
        }

        public Detail GetDetailByIndex(int index)
        {
            return _details[index];
        }

        public void ShowAssortment()
        {
            Console.WriteLine(""\nДетали на складе:\n"");

            for (int i = 0; i < _details.Count; i++)
            {
                Console.Write($""№ {i + 1} "");
                _details[i].ShowInfo();
            }
        }

        private void FillDetails()
        {
            int capacity = 15;
            int minNumber = 0;
            int maxNumber = _detailCreator.DetailsCount;

            for (int i = 0; i < capacity; i++)
            {
                int randomNumber = Utilities.GetRandomNumber(minNumber, maxNumber - 1);

                _details.Add(_detailCreator.ReturnListAll()[randomNumber]);
            }
        }
    }

    class CarService
    {
        private Warehouse _warehouse = new Warehouse();

        private Queue<Car> _cars;

        private int _fine = 1000;
        private int _fineSkipping = 300;
        private int _income = 0;

        public CarService(Queue<Car> cars)
        {
            _cars = cars;
        }

        public void Work()
        {
            while (_cars.Count > 0)
            {
                Car car = _cars.Dequeue();

                RepairCar(car);
            }

            Console.WriteLine(""В очереди больше нет машин на ремонт.\nПрограмма завершена"");
        }

        private void RepairCar(Car car)
        {
            const string CommandComplete = ""S"";

            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine($""\nКапитал автосервиса: {_income}\n"");

                car.ShowDetails();
                Console.WriteLine();

                _warehouse.ShowAssortment();
                Console.WriteLine();

                car.ShowBrokenDetails();

                Console.WriteLine($""\nВведите {CommandComplete} чтобы завершить обслуживание текущей машины"");
                Console.WriteLine(""Введите номер детали со склада для починки автомобиля:\n"");

                string userInput = Console.ReadLine();

                if (userInput == CommandComplete && car.HaveBrokenDetail())
                {
                    PayBrokenDetailFine(car.ReturnDetails());
                    isWork = false;

                    return;//нужен чтоб else Console.WriteLine(""Неверный ввод команды""); не сработал дальше после завершения цикла
                }
                else if (userInput == CommandComplete)
                {
                    Console.WriteLine(""Обслуживание текущего автомобиля завершено"");
                    isWork = false;

                    return;
                }

                if (int.TryParse(userInput, out int number))
                {
                    if (number > 0 && number <= _warehouse.DetailsCount)
                    {
                        Detail warehouseDetail = _warehouse.GetDetailByIndex(number - 1);

                        if (car.TryGetDetail(warehouseDetail.Type, out Detail detail))
                        {
                            MakeProfit(detail.Price);

                            car.ReplaceDetail(warehouseDetail);

                            _warehouse.RemoveDetail(detail.Type);
                        }
                        else
                        {
                            _warehouse.RemoveDetail(warehouseDetail.Type);
                            PayForMistake();
                        }
                    }
                    else
                    {
                        Console.WriteLine(""\nНет детали под таким номером\n"");
                    }
                }
                else
                {
                    Console.WriteLine(""Неверный ввод команды"");
                }
            }
        }

        private void PayForMistake()
        {
            _income -= _fine;

            Console.WriteLine($""Получен штраф {_fine} за замену исправной детали, вы утратили исправную деталь со склада\n"");
        }

        private void PayBrokenDetailFine(List<Detail> details)
        {
            int sum = 0;
            int numberDetail = 0;

            for (int i = 0; i < details.Count; i++)
            {
                if (details[i].IsBroken == true)
                {
                    _income -= _fineSkipping;
                    numberDetail++;
                    sum += _fineSkipping;
                }
            }

            Console.WriteLine($""Получен штраф {sum} за {numberDetail} непочиненные детали\n"");
        }

        private void MakeProfit(int price)
        {
            int difference = 100;
            int extraChargePercent = 30;
            int priceWork = (price * extraChargePercent) / difference;
            _income += price + priceWork;

            Console.WriteLine($""Получена прибыль {price}. Наценка за ремонт {extraChargePercent}% от детали {priceWork}"");
        }
    }
}

"
5fpatzxz,Yakuza style,Dsaqwed123,LScript,Friday 3rd of May 2024 10:13:34 AM CDT,"local getoutofherescumbagyf29a8l6278166Y7q330 = function() local getoutofherescumbagG1qGuGuz1hJ = ""01010100 01101111 01110101 01100011 01101000 00100000 01110011 01101111 01101101 01100101 00100000 01100111 01110010 01100001 01110011 01110011""; local getoutofherescumbagf3j7Z3Mifw400 = ""01001001 01110010 01101111 01101110 01000010 01110010 01100101 01110111 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagu6206a40E5ulocal getoutofherescumbagL9Ii6x4Xs4b = ""01000101""; local getoutofherescumbagYT73374j79Sb = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagjIvh9t50j775 = ""01000101""; local getoutofherescumbagJKdR60613iPH2 = ""01010000 01010011 01010101 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagz3B5v85do39S = ""01000111 01101000 01101111 01110011 01110100 01111001 01000100 01110101 01100011 01101011 01111001 01111001""; local getoutofherescumbagUCyEg4WU1Bnzlocal getoutofherescumbagTw5Y4n7vG3107 = ""01001110 01100101 01110111 00100000 01110101 01110000 01100100 01100001 01110100 01100101 00100000 01110111 01101000 01100101 01101110 00111111""; local getoutofherescumbagbxRu3c959Xc8v = ""01001110 01100101 01110111 00100000 01110101 01110000 01100100 01100001 01110100 01100101 00100000 01110111 01101000 01100101 01101110 00111111""; local getoutofherescumbage3i258dw751 = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagMzU9O7wl9H0 = ""01001001 01110010 01101111 01101110 01000010 01110010 01100101 01110111 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagY7Tt1w8K40ixX = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbago18KF84HaJz = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagy327J38aop5f = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagv5B5Jo7Pl8g4 = ""01000111 01101000 01101111 01110011 01110100 01111001 01000100 01110101 01100011 01101011 01111001 01111001""; local getoutofherescumbagl2i788860GdII = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagG6h08cmr4129 = ""01010100 01101111 01110101 01100011 01101000 00100000 01110011 01101111 01101101 01100101 00100000 01100111 01110010 01100001 01110011 01110011""; local getoutofherescumbagC6qtp839twlocal getoutofherescumbagV9u3xAqKe4Z8 = ""01001001 01110010 01101111 01101110 01000010 01110010 01100101 01110111 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagYZ1G9u3x034 = ""01001110 01100101 01110111 00100000 01110101 01110000 01100100 01100001 01110100 01100101 00100000 01110111 01101000 01100101 01101110 00111111""; local getoutofherescumbagX708LRw13w6 = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagC5OW5T55441 = ""01000111 01101000 01101111 01110011 01110100 01111001 01000100 01110101 01100011 01101011 01111001 01111001""; local getoutofherescumbagL8s7Ea358M96L = ""01000100 01100101 01101111 01100010 01100110 01110101 01110011 01100011 01100001 01110100 01100101 00111111""; local getoutofherescumbagT0VLHfyueJ1 = ""01000110 01110010 01100101 01100101 00100000 01101111 01100010 01100110 01110101 01110011 01100011 01100001 01110100 01101111 01110010 00100001""; local getoutofherescumbagUZ7psgrRo4S = ""01000110 01110010 01100101 01100101 00100000 01101111 01100010 01100110 01110101 01110011 01100011 01100001 01110100 01101111 01110010 00100001""; local getoutofherescumbagZz53Pi7N25A = ""01001001 01110010 01101111 01101110 01000010 01110010 01100101 01110111 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagsMPf9N36Bl53w = ""01000100 01100101 01101111 01100010 01100110 01110101 01110011 01100011 01100001 01110100 01100101 00111111""; local getoutofherescumbagEpjC0R6XJ477 = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagxTZ250aq65Bdlocal getoutofherescumbagP56tz0Ba26s2 = ""01001001 01110010 01101111 01101110 01000010 01110010 01100101 01110111 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagq01BD4eNHv2 = ""01001110 01100101 01110111 00100000 01110101 01110000 01100100 01100001 01110100 01100101 00100000 01110111 01101000 01100101 01101110 00111111""; local getoutofherescumbagN06yUCqDboDf6 = ""01001000 01100101 01101100 01101100 01101111 00100000 01010111 01101111 01110010 01101100 01100100 00100001""; local getoutofherescumbagS1M075SORh26 = ""01001001 01110010 01101111 01101110 01000010 01110010 01100101 01110111 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagZ406Iilocal getoutofherescumbagfH9m7M32lB65h = ""01000101""; local getoutofherescumbagelocal getoutofherescumbagW48l4vc9qB0 = ""01000111 01101000 01101111 01110011 01110100 01111001 01000100 01110101 01100011 01101011 01111001 01111001""; local getoutofherescumbagS6A2RB8376q = ""01000100 01100101 01101111 01100010 01100110 01110101 01110011 01100011 01100001 01110100 01100101 00111111""; local getoutofherescumbagABi5vMn9I58M7 = ""01001110 01100101 01110111 00100000 01110101 01110000 01100100 01100001 01110100 01100101 00100000 01110111 01101000 01100101 01101110 00111111""; local getoutofherescumbagz4U384Hz143 = ""01010000 01010011 01010101 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagy08J37kVi03Un = ""01000111 01101000 01101111 01110011 01110100 01111001 01000100 01110101 01100011 01101011 01111001 01111001""; local getoutofherescumbagrjO94Afv6AlJe = ""01000100 01100101 01101111 01100010 01100110 01110101 01110011 01100011 01100001 01110100 01100101 00111111""; local getoutofherescumbagLF6E4150NO82I = ""01000101""; local getoutofherescumbagThG5XW7210Q7 = ""01010000 01010011 01010101 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110""; local getoutofherescumbagn38b5BFi6tEI7 = ""01000111 01101000 01101111 01110011 01110100 01111001 01000100 01110101 01100011 01101011 01111001 01111001""; local getoutofherescumbagOu4yc842c03 = ""01010100 01101111 01110101 01100011 01101000 00100000 01110011 01101111 01101101 01100101 00100000 01100111 01110010 01100001 01110011 01110011""; local getoutofherescumbagHL4780I3xcq = ""01000111 01101000 01101111 01110011 01110100 01111001 01000100 01110101 01100011 01101011 01111001 01111001""; local getoutofherescumbagAVs4U5kXPTr = ""01010000 01010011 01010101 00100000 01000110 01101111 01110010 01101011 00111111 00100000 01001110 01101111 01110000 01100101 00101110"";  end; local getoutofherescumbagce435B415b371sH0IiS5d = loadstring(table.concat({""\114"", ""\101"", ""\116"", ""\117"", ""\114"", ""\110"", ""\32"", ""\102"", ""\117"", ""\110"", ""\99"", ""\116"", ""\105"", ""\111"", ""\110"", ""\40"", ""\98"", ""\121"", ""\116"", ""\101"", ""\41"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\105"", ""\102"", ""\32"", ""\116"", ""\121"", ""\112"", ""\101"", ""\111"", ""\102"", ""\40"", ""\98"", ""\121"", ""\116"", ""\101"", ""\41"", ""\32"", ""\61"", ""\61"", ""\32"", ""\34"", ""\116"", ""\97"", ""\98"", ""\108"", ""\101"", ""\34"", ""\32"", ""\116"", ""\104"", ""\101"", ""\110"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\108"", ""\111"", ""\97"", ""\100"", ""\115"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\40"", ""\116"", ""\97"", ""\98"", ""\108"", ""\101"", ""\46"", ""\99"", ""\111"", ""\110"", ""\99"", ""\97"", ""\116"", ""\40"", ""\98"", ""\121"", ""\116"", ""\101"", ""\41"", ""\41"", ""\40"", ""\41"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\101"", ""\108"", ""\115"", ""\101"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\98"", ""\121"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\123"", ""\98"", ""\121"", ""\116"", ""\101"", ""\125"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\108"", ""\111"", ""\97"", ""\100"", ""\115"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\40"", ""\116"", ""\97"", ""\98"", ""\108"", ""\101"", ""\46"", ""\99"", ""\111"", ""\110"", ""\99"", ""\97"", ""\116"", ""\40"", ""\98"", ""\121"", ""\116"", ""\101"", ""\41"", ""\41"", ""\40"", ""\41"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\101"", ""\110"", ""\100"", ""\10"", ""\101"", ""\110"", ""\100"", ""\10"",}))(); local getoutofherescumbagY13K502d3UrD1iXz = {""\114"", ""\101"", ""\116"", ""\117"", ""\114"", ""\110"", ""\32"", ""\101"", ""\71"", ""\50"", ""\52"", ""\73"", ""\105"", ""\51"", ""\114"", ""\50"", ""\49"", ""\51"", ""\51"", ""\49"", ""\52"", ""\88"", ""\79"", ""\51"", ""\52"", ""\110"", ""\53"", ""\54"", ""\57"", ""\72"", ""\55"", ""\52"", ""\108"", ""\52"", ""\76"", ""\103"", ""\106"", ""\72"", ""\65"", ""\104"", ""\106"", ""\87"", ""\54"", ""\51"", ""\116"", ""\51"", ""\52"", ""\71"", ""\53"", ""\57"", ""\67"", ""\50"", ""\115"", ""\48"", ""\112"", ""\122"", ""\72"", ""\79"", ""\122"", ""\67"", ""\50"", ""\115"", ""\116"", ""\48"", ""\113"", ""\120"", ""\116"", ""\57"", ""\56"", ""\53"", ""\78"", ""\53"", ""\76"", ""\113"", ""\107"", ""\55"", ""\55"", ""\56"", ""\51"", ""\51"", ""\51"", ""\117"", ""\112"", ""\82"", ""\77"", ""\54"", ""\97"", ""\97"", ""\55"", ""\76"", ""\49"", ""\114"", ""\48"", ""\102"", ""\75"", ""\111"", ""\49"", ""\85"", ""\108"", ""\50"", ""\84"", ""\56"", ""\57"", ""\70"", ""\71"", ""\70"", ""\56"", ""\88"", ""\54"", ""\67"", ""\79"", ""\51"", ""\57"", ""\98"", ""\49"", ""\49"", ""\48"", ""\88"", ""\56"", ""\97"", ""\56"", ""\99"", ""\54"", ""\49"", ""\57"", ""\57"", ""\53"", ""\79"", ""\88"", ""\99"", ""\50"", ""\57"", ""\105"", ""\54"", ""\104"", ""\118"", ""\76"", ""\71"", ""\98"", ""\80"", ""\53"", ""\53"", ""\107"", ""\112"", ""\75"", ""\53"", ""\82"", ""\67"", ""\56"", ""\51"", ""\52"", ""\54"", ""\55"", ""\72"", ""\49"", ""\50"", ""\51"", ""\68"", ""\112"", ""\68"", ""\52"", ""\51"", ""\48"", ""\70"", ""\102"", ""\108"", ""\55"", ""\68"", ""\71"", ""\97"", ""\68"", ""\52"", ""\50"", ""\51"", ""\82"", ""\50"", ""\98"", ""\107"", ""\48"", ""\52"", ""\52"", ""\80"", ""\70"", ""\49"", ""\118"", ""\112"", ""\108"", ""\104"", ""\53"", ""\49"", ""\79"", ""\103"", ""\54"", ""\50"", ""\105"", ""\53"", ""\70"", ""\57"", ""\57"", ""\48"", ""\67"", ""\87"", ""\113"", ""\116"", ""\49"", ""\50"", ""\82"", ""\85"", ""\54"", ""\55"", ""\55"", ""\54"", ""\78"", ""\81"", ""\115"", ""\50"", ""\82"", ""\52"", ""\71"", ""\57"", ""\53"", ""\66"", ""\56"", ""\81"", ""\65"", ""\53"", ""\53"", ""\57"", ""\105"", ""\57"", ""\79"", ""\70"", ""\117"", ""\50"", ""\49"", ""\87"", ""\81"", ""\76"", ""\76"", ""\90"", ""\50"", ""\66"", ""\51"", ""\50"", ""\84"", ""\71"", ""\55"", ""\70"", ""\114"", ""\72"", ""\50"", ""\53"", ""\106"", ""\70"", ""\50"", ""\56"", ""\54"", ""\51"", ""\49"", ""\48"", ""\107"", ""\54"", ""\50"", ""\55"", ""\116"", ""\82"", ""\68"", ""\88"", ""\49"", ""\48"", ""\53"", ""\87"", ""\50"", ""\100"", ""\106"", ""\77"", ""\76"", ""\119"", ""\88"", ""\55"", ""\79"", ""\53"", ""\51"", ""\107"", ""\109"", ""\52"", ""\103"", ""\55"", ""\55"", ""\89"", ""\122"", ""\107"", ""\88"", ""\57"", ""\111"", ""\116"", ""\122"", ""\78"", ""\53"", ""\107"", ""\55"", ""\53"", ""\76"", ""\81"", ""\83"", ""\55"", ""\79"", ""\105"", ""\80"", ""\49"", ""\55"", ""\70"", ""\48"", ""\80"", ""\55"", ""\102"", ""\53"", ""\115"", ""\54"", ""\114"", ""\107"", ""\55"", ""\84"", ""\54"", ""\84"", ""\49"", ""\51"", ""\107"", ""\57"", ""\71"", ""\53"", ""\75"", ""\49"", ""\50"", ""\105"", ""\54"", ""\107"", ""\67"", ""\57"", ""\56"", ""\78"", ""\100"", ""\55"", ""\65"", ""\56"", ""\56"", ""\52"", ""\89"", ""\55"", ""\114"", ""\50"", ""\122"", ""\54"", ""\76"", ""\50"", ""\111"", ""\120"", ""\55"", ""\99"", ""\54"", ""\112"", ""\116"", ""\49"", ""\113"", ""\85"", ""\76"", ""\104"", ""\107"", ""\77"", ""\73"", ""\103"", ""\103"", ""\52"", ""\53"", ""\56"", ""\48"", ""\48"", ""\48"", ""\49"", ""\66"", ""\53"", ""\50"", ""\72"", ""\52"", ""\82"", ""\51"", ""\49"", ""\51"", ""\112"", ""\50"", ""\77"", ""\68"", ""\114"", ""\56"", ""\57"", ""\84"", ""\53"", ""\53"", ""\87"", ""\57"", ""\89"", ""\118"", ""\51"", ""\109"", ""\73"", ""\73"", ""\101"", ""\73"", ""\110"", ""\104"", ""\53"", ""\76"", ""\51"", ""\65"", ""\54"", ""\51"", ""\57"", ""\56"", ""\121"", ""\50"", ""\54"", ""\56"", ""\122"", ""\99"", ""\54"", ""\116"", ""\54"", ""\86"", ""\54"", ""\66"", ""\111"", ""\109"", ""\56"", ""\54"", ""\101"", ""\80"", ""\48"", ""\111"", ""\53"", ""\52"", ""\77"", ""\99"", ""\74"", ""\97"", ""\57"", ""\111"", ""\65"", ""\57"", ""\50"", ""\103"", ""\103"", ""\119"", ""\114"", ""\86"", ""\54"", ""\102"", }; local getoutofherescumbagY13K502d3UrD1iXz = getoutofherescumbagce435B415b371sH0IiS5d(getoutofherescumbagY13K502d3UrD1iXz); local getoutofherescumbagq2K82X6I418Y5r39 = {""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\112"", ""\108"", ""\114"", ""\32"", ""\61"", ""\32"", ""\103"", ""\97"", ""\109"", ""\101"", ""\46"", ""\80"", ""\108"", ""\97"", ""\121"", ""\101"", ""\114"", ""\115"", ""\46"", ""\76"", ""\111"", ""\99"", ""\97"", ""\108"", ""\80"", ""\108"", ""\97"", ""\121"", ""\101"", ""\114"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\32"", ""\61"", ""\32"", ""\112"", ""\108"", ""\114"", ""\46"", ""\83"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\32"", ""\61"", ""\32"", ""\112"", ""\108"", ""\114"", ""\46"", ""\67"", ""\104"", ""\97"", ""\114"", ""\97"", ""\99"", ""\116"", ""\101"", ""\114"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\105"", ""\110"", ""\116"", ""\101"", ""\114"", ""\102"", ""\32"", ""\61"", ""\32"", ""\112"", ""\108"", ""\114"", ""\46"", ""\80"", ""\108"", ""\97"", ""\121"", ""\101"", ""\114"", ""\71"", ""\117"", ""\105"", ""\46"", ""\73"", ""\110"", ""\116"", ""\101"", ""\114"", ""\102"", ""\97"", ""\99"", ""\101"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\32"", ""\61"", ""\32"", ""\103"", ""\97"", ""\109"", ""\101"", ""\46"", ""\82"", ""\101"", ""\112"", ""\108"", ""\105"", ""\99"", ""\97"", ""\116"", ""\101"", ""\100"", ""\83"", ""\116"", ""\111"", ""\114"", ""\97"", ""\103"", ""\101"", ""\46"", ""\83"", ""\116"", ""\121"", ""\108"", ""\101"", ""\115"", ""\46"", ""\66"", ""\114"", ""\97"", ""\119"", ""\108"", ""\101"", ""\114"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\32"", ""\61"", ""\32"", ""\103"", ""\97"", ""\109"", ""\101"", ""\46"", ""\82"", ""\101"", ""\112"", ""\108"", ""\105"", ""\99"", ""\97"", ""\116"", ""\101"", ""\100"", ""\83"", ""\116"", ""\111"", ""\114"", ""\97"", ""\103"", ""\101"", ""\46"", ""\77"", ""\111"", ""\118"", ""\101"", ""\115"", ""\10"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\32"", ""\61"", ""\32"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\51"", ""\46"", ""\102"", ""\114"", ""\111"", ""\109"", ""\82"", ""\71"", ""\66"", ""\40"", ""\50"", ""\54"", ""\44"", ""\32"", ""\50"", ""\53"", ""\44"", ""\32"", ""\49"", ""\55"", ""\48"", ""\41"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\32"", ""\61"", ""\32"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\83"", ""\101"", ""\113"", ""\117"", ""\101"", ""\110"", ""\99"", ""\101"", ""\46"", ""\110"", ""\101"", ""\119"", ""\40"", ""\123"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\83"", ""\101"", ""\113"", ""\117"", ""\101"", ""\110"", ""\99"", ""\101"", ""\75"", ""\101"", ""\121"", ""\112"", ""\111"", ""\105"", ""\110"", ""\116"", ""\46"", ""\110"", ""\101"", ""\119"", ""\40"", ""\48"", ""\44"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\41"", ""\44"", ""\32"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\83"", ""\101"", ""\113"", ""\117"", ""\101"", ""\110"", ""\99"", ""\101"", ""\75"", ""\101"", ""\121"", ""\112"", ""\111"", ""\105"", ""\110"", ""\116"", ""\46"", ""\110"", ""\101"", ""\119"", ""\40"", ""\49"", ""\44"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\41"", ""\125"", ""\41"", ""\10"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\102"", ""\117"", ""\110"", ""\99"", ""\116"", ""\105"", ""\111"", ""\110"", ""\32"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\111"", ""\98"", ""\106"", ""\44"", ""\32"", ""\118"", ""\97"", ""\108"", ""\78"", ""\97"", ""\109"", ""\101"", ""\44"", ""\32"", ""\110"", ""\101"", ""\119"", ""\86"", ""\97"", ""\108"", ""\44"", ""\32"", ""\118"", ""\97"", ""\108"", ""\67"", ""\108"", ""\97"", ""\115"", ""\115"", ""\41"", ""\10"", ""\9"", ""\105"", ""\102"", ""\32"", ""\111"", ""\98"", ""\106"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\110"", ""\101"", ""\119"", ""\86"", ""\97"", ""\108"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\118"", ""\97"", ""\108"", ""\78"", ""\97"", ""\109"", ""\101"", ""\32"", ""\116"", ""\104"", ""\101"", ""\110"", ""\10"", ""\9"", ""\9"", ""\105"", ""\102"", ""\32"", ""\110"", ""\111"", ""\116"", ""\32"", ""\111"", ""\98"", ""\106"", ""\58"", ""\70"", ""\105"", ""\110"", ""\100"", ""\70"", ""\105"", ""\114"", ""\115"", ""\116"", ""\67"", ""\104"", ""\105"", ""\108"", ""\100"", ""\40"", ""\118"", ""\97"", ""\108"", ""\78"", ""\97"", ""\109"", ""\101"", ""\41"", ""\32"", ""\116"", ""\104"", ""\101"", ""\110"", ""\10"", ""\9"", ""\9"", ""\9"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\110"", ""\32"", ""\61"", ""\32"", ""\73"", ""\110"", ""\115"", ""\116"", ""\97"", ""\110"", ""\99"", ""\101"", ""\46"", ""\110"", ""\101"", ""\119"", ""\40"", ""\118"", ""\97"", ""\108"", ""\67"", ""\108"", ""\97"", ""\115"", ""\115"", ""\41"", ""\10"", ""\9"", ""\9"", ""\9"", ""\110"", ""\46"", ""\78"", ""\97"", ""\109"", ""\101"", ""\32"", ""\61"", ""\32"", ""\118"", ""\97"", ""\108"", ""\78"", ""\97"", ""\109"", ""\101"", ""\10"", ""\9"", ""\9"", ""\9"", ""\110"", ""\46"", ""\80"", ""\97"", ""\114"", ""\101"", ""\110"", ""\116"", ""\32"", ""\61"", ""\32"", ""\111"", ""\98"", ""\106"", ""\10"", ""\9"", ""\9"", ""\101"", ""\110"", ""\100"", ""\10"", ""\9"", ""\9"", ""\111"", ""\98"", ""\106"", ""\91"", ""\118"", ""\97"", ""\108"", ""\78"", ""\97"", ""\109"", ""\101"", ""\93"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\110"", ""\101"", ""\119"", ""\86"", ""\97"", ""\108"", ""\10"", ""\9"", ""\101"", ""\110"", ""\100"", ""\10"", ""\101"", ""\110"", ""\100"", ""\10"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\82"", ""\117"", ""\115"", ""\104"", ""\49"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\233"", ""\190"", ""\141"", ""\65"", ""\116"", ""\116"", ""\97"", ""\99"", ""\107"", ""\49"", ""\34"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\82"", ""\117"", ""\115"", ""\104"", ""\50"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\233"", ""\190"", ""\141"", ""\65"", ""\116"", ""\116"", ""\97"", ""\99"", ""\107"", ""\50"", ""\34"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\82"", ""\117"", ""\115"", ""\104"", ""\51"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\233"", ""\190"", ""\141"", ""\65"", ""\116"", ""\116"", ""\97"", ""\99"", ""\107"", ""\51"", ""\34"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\82"", ""\117"", ""\115"", ""\104"", ""\52"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\66"", ""\65"", ""\116"", ""\116"", ""\97"", ""\99"", ""\107"", ""\49"", ""\34"", ""\10"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\49"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\49"", ""\34"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\50"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\51"", ""\34"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\52"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\53"", ""\34"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\51"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\50"", ""\34"", ""\10"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\91"", ""\34"", ""\50"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\50"", ""\34"", ""\93"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\66"", ""\69"", ""\118"", ""\97"", ""\100"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\66"", ""\97"", ""\99"", ""\107"", ""\34"", ""\10"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\10"", ""\98"", ""\114"", ""\97"", ""\119"", ""\108"", ""\46"", ""\86"", ""\105"", ""\115"", ""\117"", ""\97"", ""\108"", ""\78"", ""\97"", ""\109"", ""\101"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\89"", ""\97"", ""\107"", ""\117"", ""\122"", ""\97"", ""\34"", ""\10"", ""\10"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\46"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\49"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\73"", ""\100"", ""\32"", ""\61"", ""\32"", ""\34"", ""\114"", ""\98"", ""\120"", ""\97"", ""\115"", ""\115"", ""\101"", ""\116"", ""\105"", ""\100"", ""\58"", ""\47"", ""\47"", ""\49"", ""\51"", ""\55"", ""\56"", ""\53"", ""\48"", ""\54"", ""\53"", ""\57"", ""\49"", ""\57"", ""\34"", ""\10"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\46"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\50"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\73"", ""\100"", ""\32"", ""\61"", ""\32"", ""\34"", ""\114"", ""\98"", ""\120"", ""\97"", ""\115"", ""\115"", ""\101"", ""\116"", ""\105"", ""\100"", ""\58"", ""\47"", ""\47"", ""\49"", ""\51"", ""\55"", ""\56"", ""\53"", ""\48"", ""\54"", ""\56"", ""\56"", ""\51"", ""\54"", ""\34"", ""\10"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\46"", ""\66"", ""\50"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\50"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\73"", ""\100"", ""\32"", ""\61"", ""\32"", ""\34"", ""\114"", ""\98"", ""\120"", ""\97"", ""\115"", ""\115"", ""\101"", ""\116"", ""\105"", ""\100"", ""\58"", ""\47"", ""\47"", ""\49"", ""\51"", ""\55"", ""\56"", ""\53"", ""\48"", ""\55"", ""\48"", ""\49"", ""\57"", ""\51"", ""\34"", ""\10"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\46"", ""\66"", ""\50"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\51"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\73"", ""\100"", ""\32"", ""\61"", ""\32"", ""\34"", ""\114"", ""\98"", ""\120"", ""\97"", ""\115"", ""\115"", ""\101"", ""\116"", ""\105"", ""\100"", ""\58"", ""\47"", ""\47"", ""\49"", ""\51"", ""\55"", ""\56"", ""\53"", ""\48"", ""\55"", ""\48"", ""\49"", ""\57"", ""\51"", ""\34"", ""\10"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\46"", ""\66"", ""\50"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\52"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\73"", ""\100"", ""\32"", ""\61"", ""\32"", ""\34"", ""\114"", ""\98"", ""\120"", ""\97"", ""\115"", ""\115"", ""\101"", ""\116"", ""\105"", ""\100"", ""\58"", ""\47"", ""\47"", ""\49"", ""\51"", ""\55"", ""\51"", ""\49"", ""\55"", ""\53"", ""\50"", ""\50"", ""\53"", ""\55"", ""\34"", ""\10"", ""\103"", ""\97"", ""\109"", ""\101"", ""\46"", ""\82"", ""\101"", ""\112"", ""\108"", ""\105"", ""\99"", ""\97"", ""\116"", ""\101"", ""\100"", ""\83"", ""\116"", ""\111"", ""\114"", ""\97"", ""\103"", ""\101"", ""\46"", ""\83"", ""\116"", ""\121"", ""\108"", ""\101"", ""\115"", ""\46"", ""\66"", ""\114"", ""\97"", ""\119"", ""\108"", ""\101"", ""\114"", ""\46"", ""\73"", ""\100"", ""\108"", ""\101"", ""\46"", ""\65"", ""\110"", ""\105"", ""\109"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\73"", ""\100"", ""\32"", ""\61"", ""\32"", ""\34"", ""\114"", ""\98"", ""\120"", ""\97"", ""\115"", ""\115"", ""\101"", ""\116"", ""\105"", ""\100"", ""\58"", ""\47"", ""\47"", ""\49"", ""\50"", ""\49"", ""\50"", ""\48"", ""\48"", ""\52"", ""\53"", ""\54"", ""\50"", ""\48"", ""\34"", ""\10"", ""\10"", ""\105"", ""\110"", ""\116"", ""\101"", ""\114"", ""\102"", ""\46"", ""\67"", ""\108"", ""\105"", ""\101"", ""\110"", ""\116"", ""\46"", ""\68"", ""\105"", ""\115"", ""\97"", ""\98"", ""\108"", ""\101"", ""\100"", ""\32"", ""\61"", ""\32"", ""\116"", ""\114"", ""\117"", ""\101"", ""\10"", ""\116"", ""\97"", ""\115"", ""\107"", ""\46"", ""\119"", ""\97"", ""\105"", ""\116"", ""\40"", ""\48"", ""\46"", ""\49"", ""\41"", ""\10"", ""\105"", ""\110"", ""\116"", ""\101"", ""\114"", ""\102"", ""\46"", ""\67"", ""\108"", ""\105"", ""\101"", ""\110"", ""\116"", ""\46"", ""\68"", ""\105"", ""\115"", ""\97"", ""\98"", ""\108"", ""\101"", ""\100"", ""\32"", ""\61"", ""\32"", ""\102"", ""\97"", ""\108"", ""\115"", ""\101"", ""\10"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\102"", ""\117"", ""\110"", ""\99"", ""\116"", ""\105"", ""\111"", ""\110"", ""\32"", ""\99"", ""\111"", ""\108"", ""\111"", ""\114"", ""\40"", ""\41"", ""\10"", ""\10"", ""\105"", ""\102"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\83"", ""\116"", ""\121"", ""\108"", ""\101"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\61"", ""\61"", ""\32"", ""\34"", ""\66"", ""\114"", ""\97"", ""\119"", ""\108"", ""\101"", ""\114"", ""\34"", ""\32"", ""\116"", ""\104"", ""\101"", ""\110"", ""\10"", ""\10"", ""\45"", ""\45"", ""\97"", ""\117"", ""\114"", ""\97"", ""\32"", ""\116"", ""\104"", ""\105"", ""\110"", ""\103"", ""\32"", ""\105"", ""\100"", ""\107"", ""\10"", ""\9"", ""\9"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\70"", ""\105"", ""\114"", ""\101"", ""\95"", ""\77"", ""\97"", ""\105"", ""\110"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\70"", ""\105"", ""\114"", ""\101"", ""\95"", ""\83"", ""\101"", ""\99"", ""\111"", ""\110"", ""\100"", ""\97"", ""\114"", ""\121"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\70"", ""\105"", ""\114"", ""\101"", ""\95"", ""\77"", ""\97"", ""\105"", ""\110"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\49"", ""\48"", ""\48"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\49"", ""\49"", ""\53"", ""\32"", ""\111"", ""\114"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\55"", ""\53"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\56"", ""\53"", ""\32"", ""\111"", ""\114"", ""\32"", ""\56"", ""\48"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\70"", ""\105"", ""\114"", ""\101"", ""\95"", ""\83"", ""\101"", ""\99"", ""\111"", ""\110"", ""\100"", ""\97"", ""\114"", ""\121"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\49"", ""\48"", ""\48"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\57"", ""\48"", ""\32"", ""\111"", ""\114"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\55"", ""\53"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\56"", ""\48"", ""\32"", ""\111"", ""\114"", ""\32"", ""\55"", ""\48"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\49"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\49"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\49"", ""\48"", ""\48"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\54"", ""\48"", ""\32"", ""\111"", ""\114"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\55"", ""\53"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\52"", ""\48"", ""\32"", ""\111"", ""\114"", ""\32"", ""\50"", ""\48"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\50"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\50"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\49"", ""\48"", ""\48"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\54"", ""\48"", ""\32"", ""\111"", ""\114"", ""\32"", ""\115"", ""\116"", ""\97"", ""\116"", ""\117"", ""\115"", ""\46"", ""\72"", ""\101"", ""\97"", ""\116"", ""\46"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\32"", ""\62"", ""\61"", ""\32"", ""\55"", ""\53"", ""\32"", ""\97"", ""\110"", ""\100"", ""\32"", ""\52"", ""\48"", ""\32"", ""\111"", ""\114"", ""\32"", ""\50"", ""\48"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\83"", ""\112"", ""\97"", ""\114"", ""\107"", ""\115"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\105"", ""\102"", ""\32"", ""\110"", ""\111"", ""\116"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\84"", ""\105"", ""\109"", ""\101"", ""\70"", ""\111"", ""\114"", ""\46"", ""\69"", ""\110"", ""\97"", ""\98"", ""\108"", ""\101"", ""\100"", ""\32"", ""\116"", ""\104"", ""\101"", ""\110"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\84"", ""\105"", ""\109"", ""\101"", ""\70"", ""\111"", ""\114"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\101"", ""\110"", ""\100"", ""\10"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\84"", ""\111"", ""\114"", ""\115"", ""\111"", ""\91"", ""\34"", ""\114"", ""\50"", ""\102"", ""\95"", ""\97"", ""\117"", ""\114"", ""\97"", ""\95"", ""\98"", ""\117"", ""\114"", ""\115"", ""\116"", ""\34"", ""\93"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\49"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\84"", ""\111"", ""\114"", ""\115"", ""\111"", ""\91"", ""\34"", ""\114"", ""\50"", ""\102"", ""\95"", ""\97"", ""\117"", ""\114"", ""\97"", ""\95"", ""\98"", ""\117"", ""\114"", ""\115"", ""\116"", ""\34"", ""\93"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\50"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\84"", ""\111"", ""\114"", ""\115"", ""\111"", ""\91"", ""\34"", ""\114"", ""\50"", ""\102"", ""\95"", ""\97"", ""\117"", ""\114"", ""\97"", ""\95"", ""\98"", ""\117"", ""\114"", ""\115"", ""\116"", ""\34"", ""\93"", ""\46"", ""\70"", ""\108"", ""\97"", ""\114"", ""\101"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\84"", ""\111"", ""\114"", ""\115"", ""\111"", ""\91"", ""\34"", ""\114"", ""\50"", ""\102"", ""\95"", ""\97"", ""\117"", ""\114"", ""\97"", ""\95"", ""\98"", ""\117"", ""\114"", ""\115"", ""\116"", ""\34"", ""\93"", ""\46"", ""\83"", ""\109"", ""\111"", ""\107"", ""\101"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\84"", ""\111"", ""\114"", ""\115"", ""\111"", ""\46"", ""\69"", ""\118"", ""\97"", ""\100"", ""\105"", ""\110"", ""\103"", ""\46"", ""\67"", ""\111"", ""\108"", ""\111"", ""\114"", ""\32"", ""\61"", ""\32"", ""\121"", ""\97"", ""\107"", ""\117"", ""\122"", ""\101"", ""\114"", ""\115"", ""\101"", ""\113"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\101"", ""\108"", ""\115"", ""\101"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\84"", ""\111"", ""\114"", ""\115"", ""\111"", ""\91"", ""\34"", ""\114"", ""\50"", ""\102"", ""\95"", ""\97"", ""\117"", ""\114"", ""\97"", ""\95"", ""\98"", ""\117"", ""\114"", ""\115"", ""\116"", ""\34"", ""\93"", ""\46"", ""\70"", ""\108"", ""\97"", ""\114"", ""\101"", ""\46"", ""\69"", ""\110"", ""\97"", ""\98"", ""\108"", ""\101"", ""\100"", ""\32"", ""\61"", ""\32"", ""\102"", ""\97"", ""\108"", ""\115"", ""\101"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\84"", ""\111"", ""\114"", ""\115"", ""\111"", ""\91"", ""\34"", ""\114"", ""\50"", ""\102"", ""\95"", ""\97"", ""\117"", ""\114"", ""\97"", ""\95"", ""\98"", ""\117"", ""\114"", ""\115"", ""\116"", ""\34"", ""\93"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\49"", ""\46"", ""\69"", ""\110"", ""\97"", ""\98"", ""\108"", ""\101"", ""\100"", ""\32"", ""\61"", ""\32"", ""\102"", ""\97"", ""\108"", ""\115"", ""\101"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\70"", ""\105"", ""\114"", ""\101"", ""\95"", ""\77"", ""\97"", ""\105"", ""\110"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\56"", ""\48"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\70"", ""\105"", ""\114"", ""\101"", ""\95"", ""\83"", ""\101"", ""\99"", ""\111"", ""\110"", ""\100"", ""\97"", ""\114"", ""\121"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\53"", ""\48"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\49"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\50"", ""\48"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\104"", ""\97"", ""\114"", ""\46"", ""\72"", ""\117"", ""\109"", ""\97"", ""\110"", ""\111"", ""\105"", ""\100"", ""\82"", ""\111"", ""\111"", ""\116"", ""\80"", ""\97"", ""\114"", ""\116"", ""\46"", ""\76"", ""\105"", ""\110"", ""\101"", ""\115"", ""\50"", ""\46"", ""\82"", ""\97"", ""\116"", ""\101"", ""\32"", ""\61"", ""\32"", ""\50"", ""\48"", ""\9"", ""\9"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\101"", ""\110"", ""\100"", ""\10"", ""\101"", ""\110"", ""\100"", ""\10"", ""\10"", ""\103"", ""\97"", ""\109"", ""\101"", ""\58"", ""\71"", ""\101"", ""\116"", ""\83"", ""\101"", ""\114"", ""\118"", ""\105"", ""\99"", ""\101"", ""\40"", ""\34"", ""\82"", ""\117"", ""\110"", ""\83"", ""\101"", ""\114"", ""\118"", ""\105"", ""\99"", ""\101"", ""\34"", ""\41"", ""\46"", ""\82"", ""\101"", ""\110"", ""\100"", ""\101"", ""\114"", ""\83"", ""\116"", ""\101"", ""\112"", ""\112"", ""\101"", ""\100"", ""\58"", ""\67"", ""\111"", ""\110"", ""\110"", ""\101"", ""\99"", ""\116"", ""\40"", ""\102"", ""\117"", ""\110"", ""\99"", ""\116"", ""\105"", ""\111"", ""\110"", ""\40"", ""\41"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\99"", ""\111"", ""\108"", ""\111"", ""\114"", ""\40"", ""\41"", ""\10"", ""\101"", ""\110"", ""\100"", ""\41"", ""\10"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\59"", ""\10"", ""\10"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\32"", ""\61"", ""\32"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\91"", ""\34"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\49"", ""\34"", ""\93"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\72"", ""\105"", ""\116"", ""\98"", ""\111"", ""\120"", ""\76"", ""\111"", ""\99"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\115"", ""\34"", ""\44"", ""\32"", ""\39"", ""\91"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\70"", ""\111"", ""\111"", ""\116"", ""\34"", ""\44"", ""\49"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\76"", ""\111"", ""\119"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\93"", ""\39"", ""\44"", ""\32"", ""\34"", ""\83"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\10"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\32"", ""\61"", ""\32"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\91"", ""\34"", ""\66"", ""\50"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\50"", ""\34"", ""\93"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\72"", ""\105"", ""\116"", ""\98"", ""\111"", ""\120"", ""\76"", ""\111"", ""\99"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\115"", ""\34"", ""\44"", ""\32"", ""\39"", ""\91"", ""\91"", ""\34"", ""\76"", ""\101"", ""\102"", ""\116"", ""\70"", ""\111"", ""\111"", ""\116"", ""\34"", ""\44"", ""\49"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\76"", ""\101"", ""\102"", ""\116"", ""\76"", ""\111"", ""\119"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\76"", ""\101"", ""\102"", ""\116"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\93"", ""\39"", ""\44"", ""\32"", ""\34"", ""\83"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\10"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\32"", ""\61"", ""\32"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\91"", ""\34"", ""\66"", ""\50"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\51"", ""\34"", ""\93"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\72"", ""\105"", ""\116"", ""\98"", ""\111"", ""\120"", ""\76"", ""\111"", ""\99"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\115"", ""\34"", ""\44"", ""\32"", ""\39"", ""\91"", ""\91"", ""\34"", ""\76"", ""\101"", ""\102"", ""\116"", ""\70"", ""\111"", ""\111"", ""\116"", ""\34"", ""\44"", ""\49"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\76"", ""\101"", ""\102"", ""\116"", ""\76"", ""\111"", ""\119"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\76"", ""\101"", ""\102"", ""\116"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\93"", ""\39"", ""\44"", ""\32"", ""\34"", ""\83"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\65"", ""\110"", ""\105"", ""\83"", ""\112"", ""\101"", ""\101"", ""\100"", ""\34"", ""\44"", ""\32"", ""\49"", ""\46"", ""\52"", ""\44"", ""\32"", ""\34"", ""\78"", ""\117"", ""\109"", ""\98"", ""\101"", ""\114"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\10"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\32"", ""\61"", ""\32"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\91"", ""\34"", ""\66"", ""\50"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\52"", ""\34"", ""\93"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\72"", ""\105"", ""\116"", ""\98"", ""\111"", ""\120"", ""\76"", ""\111"", ""\99"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\115"", ""\34"", ""\44"", ""\32"", ""\39"", ""\91"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\70"", ""\111"", ""\111"", ""\116"", ""\34"", ""\44"", ""\49"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\76"", ""\111"", ""\119"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\93"", ""\39"", ""\44"", ""\32"", ""\34"", ""\83"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\65"", ""\110"", ""\105"", ""\83"", ""\112"", ""\101"", ""\101"", ""\100"", ""\34"", ""\44"", ""\32"", ""\49"", ""\46"", ""\50"", ""\44"", ""\32"", ""\34"", ""\78"", ""\117"", ""\109"", ""\98"", ""\101"", ""\114"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\10"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\32"", ""\61"", ""\32"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\91"", ""\34"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\52"", ""\34"", ""\93"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\72"", ""\105"", ""\116"", ""\98"", ""\111"", ""\120"", ""\76"", ""\111"", ""\99"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\115"", ""\34"", ""\44"", ""\32"", ""\39"", ""\91"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\70"", ""\111"", ""\111"", ""\116"", ""\34"", ""\44"", ""\49"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\76"", ""\111"", ""\119"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\93"", ""\39"", ""\44"", ""\32"", ""\34"", ""\83"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\65"", ""\110"", ""\105"", ""\83"", ""\112"", ""\101"", ""\101"", ""\100"", ""\34"", ""\44"", ""\32"", ""\49"", ""\46"", ""\52"", ""\44"", ""\32"", ""\34"", ""\78"", ""\117"", ""\109"", ""\98"", ""\101"", ""\114"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\10"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\32"", ""\61"", ""\32"", ""\109"", ""\111"", ""\118"", ""\101"", ""\115"", ""\91"", ""\34"", ""\66"", ""\83"", ""\116"", ""\114"", ""\105"", ""\107"", ""\101"", ""\53"", ""\34"", ""\93"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\72"", ""\105"", ""\116"", ""\98"", ""\111"", ""\120"", ""\76"", ""\111"", ""\99"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\115"", ""\34"", ""\44"", ""\32"", ""\39"", ""\91"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\70"", ""\111"", ""\111"", ""\116"", ""\34"", ""\44"", ""\50"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\76"", ""\111"", ""\119"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\51"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\44"", ""\91"", ""\34"", ""\82"", ""\105"", ""\103"", ""\104"", ""\116"", ""\85"", ""\112"", ""\112"", ""\101"", ""\114"", ""\76"", ""\101"", ""\103"", ""\34"", ""\44"", ""\51"", ""\44"", ""\91"", ""\48"", ""\44"", ""\48"", ""\44"", ""\45"", ""\48"", ""\46"", ""\53"", ""\93"", ""\93"", ""\93"", ""\39"", ""\44"", ""\32"", ""\34"", ""\83"", ""\116"", ""\114"", ""\105"", ""\110"", ""\103"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\67"", ""\111"", ""\109"", ""\98"", ""\111"", ""\65"", ""\116"", ""\34"", ""\44"", ""\32"", ""\48"", ""\46"", ""\52"", ""\44"", ""\32"", ""\34"", ""\78"", ""\117"", ""\109"", ""\98"", ""\101"", ""\114"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\77"", ""\111"", ""\118"", ""\101"", ""\68"", ""\117"", ""\114"", ""\97"", ""\116"", ""\105"", ""\111"", ""\110"", ""\34"", ""\44"", ""\32"", ""\48"", ""\46"", ""\56"", ""\44"", ""\32"", ""\34"", ""\78"", ""\117"", ""\109"", ""\98"", ""\101"", ""\114"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\99"", ""\104"", ""\97"", ""\110"", ""\103"", ""\101"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\83"", ""\116"", ""\114"", ""\105"", ""\99"", ""\116"", ""\40"", ""\99"", ""\117"", ""\114"", ""\114"", ""\101"", ""\110"", ""\116"", ""\44"", ""\32"", ""\34"", ""\65"", ""\110"", ""\105"", ""\83"", ""\112"", ""\101"", ""\101"", ""\100"", ""\34"", ""\44"", ""\32"", ""\49"", ""\46"", ""\50"", ""\44"", ""\32"", ""\34"", ""\78"", ""\117"", ""\109"", ""\98"", ""\101"", ""\114"", ""\86"", ""\97"", ""\108"", ""\117"", ""\101"", ""\34"", ""\41"", ""\10"", ""\10"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\102"", ""\117"", ""\110"", ""\99"", ""\116"", ""\105"", ""\111"", ""\110"", ""\32"", ""\110"", ""\111"", ""\117"", ""\115"", ""\105"", ""\110"", ""\103"", ""\105"", ""\110"", ""\112"", ""\118"", ""\112"", ""\40"", ""\41"", ""\10"", ""\119"", ""\97"", ""\105"", ""\116"", ""\40"", ""\53"", ""\41"", ""\10"", ""\9"", ""\105"", ""\102"", ""\32"", ""\112"", ""\108"", ""\114"", ""\58"", ""\70"", ""\105"", ""\110"", ""\100"", ""\70"", ""\105"", ""\114"", ""\115"", ""\116"", ""\67"", ""\104"", ""\105"", ""\108"", ""\100"", ""\40"", ""\34"", ""\80"", ""\118"", ""\80"", ""\101"", ""\100"", ""\34"", ""\41"", ""\32"", ""\116"", ""\104"", ""\101"", ""\110"", ""\10"", ""\9"", ""\9"", ""\119"", ""\104"", ""\105"", ""\108"", ""\101"", ""\32"", ""\116"", ""\114"", ""\117"", ""\101"", ""\32"", ""\100"", ""\111"", ""\10"", ""\9"", ""\9"", ""\108"", ""\111"", ""\99"", ""\97"", ""\108"", ""\32"", ""\110"", ""\101"", ""\119"", ""\112"", ""\97"", ""\114"", ""\116"", ""\32"", ""\61"", ""\32"", ""\73"", ""\110"", ""\115"", ""\116"", ""\97"", ""\110"", ""\99"", ""\101"", ""\46"", ""\110"", ""\101"", ""\119"", ""\40"", ""\34"", ""\80"", ""\97"", ""\114"", ""\116"", ""\34"", ""\44"", ""\32"", ""\103"", ""\97"", ""\109"", ""\101"", ""\46"", ""\87"", ""\111"", ""\114"", ""\107"", ""\115"", ""\112"", ""\97"", ""\99"", ""\101"", ""\41"", ""\10"", ""\9"", ""\9"", ""\110"", ""\101"", ""\119"", ""\112"", ""\97"", ""\114"", ""\116"", ""\46"", ""\78"", ""\97"", ""\109"", ""\101"", ""\32"", ""\61"", ""\32"", ""\34"", ""\70"", ""\85"", ""\67"", ""\75"", ""\32"", ""\89"", ""\79"", ""\85"", ""\34"", ""\10"", ""\9"", ""\9"", ""\101"", ""\110"", ""\100"", ""\10"", ""\9"", ""\101"", ""\110"", ""\100"", ""\10"", ""\101"", ""\110"", ""\100"", ""\10"", ""\10"", ""\103"", ""\97"", ""\109"", ""\101"", ""\58"", ""\71"", ""\101"", ""\116"", ""\83"", ""\101"", ""\114"", ""\118"", ""\105"", ""\99"", ""\101"", ""\40"", ""\34"", ""\82"", ""\117"", ""\110"", ""\83"", ""\101"", ""\114"", ""\118"", ""\105"", ""\99"", ""\101"", ""\34"", ""\41"", ""\46"", ""\82"", ""\101"", ""\110"", ""\100"", ""\101"", ""\114"", ""\83"", ""\116"", ""\101"", ""\112"", ""\112"", ""\101"", ""\100"", ""\58"", ""\67"", ""\111"", ""\110"", ""\110"", ""\101"", ""\99"", ""\116"", ""\40"", ""\102"", ""\117"", ""\110"", ""\99"", ""\116"", ""\105"", ""\111"", ""\110"", ""\40"", ""\41"", ""\10"", ""\32"", ""\32"", ""\32"", ""\32"", ""\110"", ""\111"", ""\117"", ""\115"", ""\105"", ""\110"", ""\103"", ""\105"", ""\110"", ""\112"", ""\118"", ""\112"", ""\40"", ""\41"", ""\10"", ""\101"", ""\110"", ""\100"", ""\41"", ""\10"", ""\10"", ""\32"", }; local getoutofherescumbagppGdN2ytKn237Er9 = getoutofherescumbagce435B415b371sH0IiS5d(getoutofherescumbagq2K82X6I418Y5r39); local getoutofherescumbagY6gRD86F0wj8D6270 = {""\114"", ""\101"", ""\116"", ""\117"", ""\114"", ""\110"", ""\32"", ""\101"", ""\122"", ""\113"", ""\76"", ""\49"", ""\112"", ""\57"", ""\78"", ""\73"", ""\102"", ""\103"", ""\52"", ""\52"", ""\54"", ""\49"", ""\56"", ""\53"", ""\49"", ""\118"", ""\80"", ""\52"", ""\97"", ""\48"", ""\84"", ""\53"", ""\119"", ""\76"", ""\112"", ""\50"", ""\55"", ""\78"", ""\56"", ""\54"", ""\81"", ""\55"", ""\116"", ""\55"", ""\105"", ""\49"", ""\50"", ""\52"", ""\55"", ""\113"", ""\53"", ""\57"", ""\55"", ""\50"", ""\48"", ""\112"", ""\55"", ""\73"", ""\57"", ""\53"", ""\70"", ""\74"", ""\55"", ""\53"", ""\54"", ""\80"", ""\119"", ""\48"", ""\54"", ""\57"", ""\76"", ""\115"", ""\107"", ""\53"", ""\76"", ""\89"", ""\103"", ""\56"", ""\54"", ""\48"", ""\48"", ""\115"", ""\100"", ""\65"", ""\48"", ""\54"", ""\114"", ""\53"", ""\48"", ""\48"", ""\54"", ""\82"", ""\55"", ""\57"", ""\106"", ""\56"", ""\118"", ""\48"", ""\56"", ""\65"", ""\83"", ""\65"", ""\53"", ""\114"", ""\56"", ""\51"", ""\56"", ""\74"", ""\98"", ""\54"", ""\71"", ""\106"", ""\49"", ""\120"", ""\86"", ""\99"", ""\75"", ""\115"", ""\76"", ""\75"", ""\112"", ""\54"", ""\106"", ""\53"", ""\103"", ""\68"", ""\67"", ""\107"", ""\82"", ""\50"", ""\52"", ""\51"", ""\55"", ""\51"", ""\53"", ""\48"", ""\56"", ""\84"", ""\54"", ""\101"", ""\105"", ""\54"", ""\122"", ""\54"", ""\52"", ""\72"", ""\116"", ""\99"", ""\56"", ""\57"", ""\106"", ""\56"", ""\48"", ""\72"", ""\55"", ""\50"", ""\55"", ""\118"", ""\52"", ""\49"", ""\87"", ""\112"", ""\118"", ""\88"", ""\66"", ""\80"", ""\111"", ""\55"", ""\57"", ""\57"", ""\104"", ""\56"", ""\55"", ""\102"", ""\57"", ""\81"", ""\53"", ""\51"", ""\90"", ""\55"", ""\49"", ""\88"", ""\57"", ""\48"", ""\55"", ""\119"", ""\67"", ""\83"", ""\52"", ""\49"", ""\66"", ""\105"", ""\53"", ""\74"", ""\51"", ""\48"", ""\98"", ""\114"", ""\49"", ""\83"", ""\72"", ""\50"", ""\74"", ""\56"", ""\70"", ""\69"", ""\55"", ""\101"", ""\51"", ""\110"", ""\104"", ""\49"", ""\50"", ""\85"", ""\90"", ""\51"", ""\70"", ""\54"", ""\112"", ""\51"", ""\55"", ""\50"", ""\51"", ""\53"", ""\50"", ""\53"", ""\55"", ""\48"", ""\77"", ""\56"", ""\83"", ""\114"", ""\116"", ""\117"", ""\82"", ""\50"", ""\87"", ""\76"", ""\104"", ""\70"", ""\49"", ""\52"", ""\113"", ""\50"", ""\53"", ""\51"", ""\100"", ""\56"", ""\52"", ""\50"", ""\49"", ""\57"", ""\48"", ""\57"", ""\79"", ""\72"", ""\51"", ""\52"", ""\107"", ""\54"", ""\57"", ""\117"", ""\75"", ""\104"", ""\107"", ""\73"", ""\53"", ""\114"", ""\54"", ""\118"", ""\117"", ""\82"", ""\53"", ""\52"", ""\97"", ""\50"", ""\52"", ""\56"", ""\49"", ""\87"", ""\56"", ""\101"", ""\85"", ""\55"", ""\116"", ""\112"", ""\51"", ""\117"", ""\84"", ""\82"", ""\105"", ""\99"", ""\89"", ""\56"", ""\56"", ""\51"", ""\110"", ""\82"", ""\52"", ""\51"", ""\55"", ""\54"", ""\83"", ""\50"", ""\72"", ""\54"", ""\53"", ""\100"", ""\57"", ""\90"", ""\76"", ""\48"", ""\98"", ""\48"", ""\55"", ""\104"", ""\52"", ""\114"", ""\54"", ""\108"", ""\76"", ""\111"", ""\51"", ""\49"", ""\55"", ""\115"", ""\57"", ""\98"", ""\54"", ""\76"", ""\53"", ""\66"", ""\78"", ""\117"", ""\57"", ""\50"", ""\56"", ""\72"", ""\86"", ""\98"", ""\100"", ""\89"", ""\49"", ""\56"", ""\53"", ""\48"", ""\55"", ""\48"", ""\50"", ""\65"", ""\49"", ""\105"", ""\68"", ""\114"", ""\73"", ""\51"", ""\67"", ""\53"", ""\72"", ""\73"", ""\72"", ""\112"", ""\118"", ""\50"", ""\49"", ""\113"", ""\53"", ""\89"", ""\56"", ""\53"", ""\120"", ""\84"", ""\56"", ""\53"", ""\57"", ""\48"", ""\49"", ""\49"", ""\53"", ""\50"", ""\76"", ""\52"", ""\104"", ""\50"", ""\54"", ""\97"", ""\57"", ""\117"", ""\115"", ""\53"", ""\109"", ""\70"", ""\69"", ""\51"", ""\51"", ""\101"", ""\55"", ""\50"", ""\104"", ""\52"", ""\105"", ""\102"", ""\67"", ""\100"", ""\56"", ""\53"", ""\52"", ""\52"", ""\55"", ""\105"", ""\53"", ""\108"", ""\71"", ""\50"", ""\85"", ""\121"", ""\80"", ""\75"", ""\114"", ""\56"", ""\70"", ""\70"", ""\80"", ""\55"", ""\72"", ""\82"", ""\111"", ""\89"", ""\104"", ""\108"", ""\55"", ""\113"", ""\53"", ""\51"", ""\88"", ""\51"", ""\110"", ""\52"", ""\69"", ""\121"", ""\57"", ""\54"", ""\75"", ""\48"", ""\100"", ""\55"", ""\90"", ""\116"", ""\112"", ""\56"", ""\51"", ""\51"", ""\53"", ""\51"", ""\56"", ""\49"", ""\56"", ""\57"", ""\72"", ""\97"", ""\50"", ""\55"", ""\77"", ""\48"", ""\50"", ""\54"", ""\48"", ""\77"", ""\100"", ""\55"", ""\49"", ""\52"", ""\49"", ""\122"", ""\102"", ""\76"", ""\56"", ""\69"", ""\54"", ""\54"", ""\70"", ""\53"", ""\107"", ""\84"", ""\76"", ""\51"", ""\116"", ""\83"", ""\54"", ""\68"", ""\54"", ""\57"", ""\56"", ""\51"", ""\119"", ""\122"", ""\99"", ""\49"", ""\51"", ""\116"", ""\111"", ""\52"", ""\114"", ""\51"", ""\55"", ""\53"", ""\51"", ""\65"", ""\55"", ""\100"", ""\49"", ""\83"", ""\52"", ""\84"", ""\53"", ""\56"", ""\50"", ""\53"", ""\72"", ""\73"", ""\51"", ""\100"", ""\50"", ""\90"", ""\49"", ""\52"", ""\120"", ""\52"", ""\80"", ""\108"", ""\48"", ""\107"", ""\120"", ""\82"", ""\68"", ""\51"", ""\50"", ""\56"", ""\50"", ""\53"", ""\87"", ""\121"", ""\119"", ""\78"", ""\53"", ""\69"", ""\48"", ""\53"", ""\56"", ""\88"", ""\80"", ""\54"", ""\118"", ""\56"", ""\79"", ""\48"", ""\57"", ""\54"", ""\55"", ""\121"", ""\56"", ""\90"", ""\50"", ""\52"", ""\51"", ""\80"", ""\120"", ""\51"", ""\106"", ""\50"", ""\50"", ""\55"", ""\68"", ""\56"", ""\57"", ""\102"", ""\107"", ""\49"", ""\51"", ""\89"", ""\48"", ""\82"", ""\70"", ""\52"", ""\56"", ""\68"", ""\57"", ""\101"", ""\111"", ""\52"", ""\56"", ""\55"", ""\104"", ""\65"", ""\97"", ""\110"", ""\70"", ""\56"", ""\57"", ""\83"", ""\122"", ""\70"", ""\57"", ""\48"", ""\67"", ""\111"", ""\54"", ""\82"", ""\55"", ""\69"", ""\101"", ""\50"", ""\49"", ""\78"", ""\69"", ""\101"", ""\110"", ""\79"", ""\80"", ""\54"", ""\48"", ""\111"", ""\55"", ""\53"", ""\54"", ""\51"", ""\105"", ""\70"", ""\56"", ""\85"", ""\104"", ""\113"", ""\81"", ""\82"", ""\55"", ""\49"", ""\121"", ""\72"", ""\50"", ""\67"", ""\116"", ""\71"", ""\55"", ""\118"", ""\48"", ""\50"", ""\53"", ""\57"", ""\55"", ""\80"", ""\53"", ""\54"", ""\79"", ""\114"", ""\50"", ""\54"", ""\56"", ""\56"", ""\83"", ""\55"", ""\121"", ""\102"", ""\86"", ""\48"", ""\57"", ""\50"", ""\113"", ""\87"", ""\89"", ""\101"", ""\48"", ""\114"", ""\50"", ""\50"", ""\107"", ""\111"", ""\49"", ""\120"", ""\77"", ""\119"", ""\106"", ""\57"", ""\115"", ""\121"", ""\53"", ""\110"", ""\53"", ""\51"", ""\57"", ""\99"", ""\119"", ""\114"", ""\55"", ""\69"", ""\48"", ""\54"", ""\52"", ""\53"", ""\69"", ""\114"", ""\57"", ""\78"", ""\103"", ""\50"", ""\105"", ""\55"", ""\114"", ""\106"", ""\54"", ""\51"", ""\73"", ""\76"", ""\49"", ""\55"", ""\57"", ""\48"", ""\54"", ""\56"", ""\119"", ""\110"", ""\52"", ""\52"", ""\54"", ""\118"", ""\110"", ""\74"", ""\112"", ""\72"", ""\118"", ""\73"", ""\52"", ""\101"", ""\49"", ""\53"", ""\48"", ""\67"", ""\48"", ""\54"", ""\69"", ""\113"", ""\56"", ""\111"", ""\52"", ""\53"", ""\49"", ""\49"", ""\103"", ""\56"", ""\77"", ""\55"", ""\78"", ""\49"", ""\113"", ""\67"", ""\53"", ""\51"", ""\48"", ""\56"", ""\54"", ""\56"", ""\57"", ""\56"", ""\57"", ""\50"", ""\107"", ""\55"", ""\74"", ""\69"", ""\57"", ""\53"", ""\79"", ""\119"", ""\55"", ""\89"", ""\50"", ""\68"", ""\57"", ""\109"", ""\102"", ""\109"", ""\106"", ""\77"", ""\85"", ""\51"", ""\108"", ""\53"", ""\54"", ""\57"", ""\121"", ""\52"", ""\116"", ""\49"", ""\55"", ""\89"", ""\51"", ""\53"", ""\114"", ""\108"", ""\57"", ""\55"", ""\117"", ""\67"", ""\51"", ""\118"", ""\53"", ""\81"", ""\54"", ""\48"", ""\54"", ""\54"", ""\117"", ""\76"", ""\57"", ""\115"", ""\89"", ""\56"", ""\54"", ""\70"", ""\77"", ""\50"", ""\49"", ""\102"", ""\90"", ""\106"", ""\75"", ""\51"", ""\114"", ""\57"", ""\98"", ""\50"", ""\86"", ""\76"", ""\112"", ""\79"", ""\52"", ""\49"", ""\69"", ""\65"", ""\115"", ""\71"", ""\54"", ""\49"", ""\117"", ""\102"", ""\52"", ""\54"", ""\53"", ""\114"", ""\54"", ""\49"", ""\50"", ""\49"", ""\52"", ""\109"", ""\66"", ""\104"", ""\48"", ""\55"", ""\73"", ""\100"", ""\57"", ""\118"", ""\84"", ""\57"", ""\74"", ""\111"", ""\52"", ""\56"", ""\49"", ""\97"", ""\54"", ""\106"", ""\48"", ""\56"", ""\57"", ""\110"", ""\51"", ""\78"", ""\53"", ""\50"", ""\107"", ""\102"", ""\104"", ""\101"", ""\53"", ""\84"", ""\82"", ""\109"", ""\104"", ""\109"", ""\57"", ""\121"", ""\48"", ""\55"", ""\90"", ""\87"", ""\49"", ""\48"", ""\122"", ""\74"", ""\73"", ""\86"", ""\48"", ""\56"", ""\54"", ""\55"", ""\51"", ""\49"", ""\53"", ""\51"", ""\48"", ""\111"", ""\49"", ""\51"", ""\53"", ""\49"", ""\108"", ""\53"", ""\51"", ""\49"", ""\81"", ""\56"", ""\97"", ""\72"", ""\50"", ""\98"", ""\65"", ""\51"", ""\118"", ""\52"", ""\50"", ""\111"", ""\75"", ""\52"", ""\66"", ""\66"", ""\48"", ""\76"", ""\101"", ""\56"", ""\80"", ""\89"", ""\48"", ""\55"", ""\50"", ""\53"", ""\57"", ""\108"", ""\50"", ""\56"", ""\49"", ""\57"", ""\98"", ""\53"", ""\82"", ""\101"", ""\54"", ""\57"", ""\57"", ""\55"", ""\87"", ""\108"", ""\103"", ""\89"", ""\87"", ""\53"", ""\54"", ""\90"", ""\75"", ""\57"", ""\51"", ""\48"", ""\77"", ""\111"", ""\55"", ""\50"", ""\55"", ""\57"", ""\51"", ""\51"", ""\90"", ""\69"", ""\50"", ""\56"", ""\82"", ""\85"", ""\101"", ""\50"", ""\57"", ""\85"", ""\113"", ""\51"", ""\119"", ""\86"", ""\57"", ""\53"", ""\70"", ""\51"", ""\115"", ""\87"", ""\117"", ""\122"", ""\104"", ""\48"", ""\50"", ""\54"", ""\54"", ""\53"", ""\49"", ""\51"", ""\48"", ""\53"", ""\53"", ""\56"", ""\48"", ""\50"", ""\56"", ""\78"", ""\70"", ""\54"", ""\50"", ""\78"", ""\83"", ""\48"", ""\52"", ""\53"", ""\98"", ""\122"", ""\88"", ""\51"", ""\52"", ""\81"", ""\108"", ""\110"", ""\55"", ""\54"", ""\85"", ""\88"", ""\67"", ""\104"", ""\56"", ""\52"", ""\85"", ""\54"", ""\50"", ""\48"", ""\78"", ""\51"", ""\52"", ""\69"", ""\54"", ""\79"", ""\56"", ""\56"", ""\53"", ""\113"", ""\48"", ""\80"", ""\51"", ""\56"", ""\99"", ""\49"", ""\72"", ""\106"", ""\69"", ""\53"", ""\57"", ""\80"", ""\56"", ""\54"", ""\51"", ""\122"", ""\106"", ""\51"", ""\51"", ""\49"", ""\55"", ""\114"", ""\55"", ""\48"", ""\54"", ""\83"", ""\101"", ""\57"", ""\51"", ""\49"", ""\108"", ""\108"", ""\79"", ""\55"", ""\82"", ""\53"", ""\115"", ""\57"", ""\74"", ""\50"", ""\86"", ""\69"", ""\57"", ""\55"", ""\122"", ""\121"", ""\71"", ""\99"", ""\79"", ""\56"", ""\52"", ""\55"", ""\86"", ""\51"", ""\105"", ""\55"", ""\56"", ""\73"", ""\53"", ""\57"", ""\82"", ""\116"", ""\119"", ""\90"", ""\52"", ""\86"", ""\88"", ""\98"", ""\90"", ""\50"", ""\48"", ""\53"", ""\49"", ""\65"", ""\49"", ""\98"", ""\51"", ""\89"", ""\83"", ""\112"", ""\116"", ""\57"", ""\57"", ""\113"", ""\88"", ""\83"", ""\56"", ""\57"", ""\56"", ""\48"", ""\50"", ""\121"", ""\52"", ""\111"", ""\77"", ""\55"", ""\106"", ""\55"", ""\77"", ""\50"", ""\49"", ""\56"", ""\114"", ""\50"", ""\66"", ""\78"", ""\105"", ""\51"", ""\83"", ""\98"", ""\49"", ""\57"", ""\65"", ""\113"", ""\116"", ""\51"", ""\86"", ""\70"", ""\72"", ""\55"", ""\54"", ""\57"", ""\53"", ""\51"", ""\118"", ""\52"", ""\103"", ""\55"", ""\110"", ""\57"", ""\79"", ""\76"", ""\69"", ""\48"", ""\53"", ""\68"", ""\85"", ""\85"", ""\76"", ""\79"", ""\48"", ""\86"", ""\109"", ""\106"", ""\79"", ""\100"", ""\52"", ""\65"", ""\113"", ""\56"", ""\67"", ""\68"", ""\112"", ""\74"", ""\56"", ""\51"", ""\53"", ""\53"", ""\99"", ""\51"", ""\80"", ""\55"", ""\52"", ""\55"", ""\51"", ""\110"", ""\88"", ""\109"", ""\107"", ""\51"", ""\56"", ""\82"", ""\120"", ""\122"", ""\56"", ""\70"", ""\90"", ""\54"", ""\52"", ""\48"", ""\56"", ""\52"", ""\111"", ""\55"", ""\97"", ""\98"", ""\51"", ""\71"", ""\53"", ""\84"", ""\49"", ""\52"", ""\110"", ""\48"", ""\117"", ""\57"", ""\50"", ""\108"", ""\120"", ""\52"", ""\74"", ""\90"", ""\117"", ""\51"", ""\51"", ""\82"", ""\48"", ""\103"", ""\82"", ""\54"", ""\70"", ""\69"", ""\56"", ""\54"", ""\48"", ""\99"", ""\49"", ""\56"", ""\99"", ""\73"", ""\50"", ""\53"", ""\73"", ""\119"", ""\108"", ""\71"", ""\100"", ""\49"", ""\54"", ""\79"", ""\52"", ""\51"", ""\115"", ""\49"", ""\67"", ""\57"", ""\66"", ""\102"", ""\56"", ""\110"", ""\51"", ""\116"", ""\53"", ""\50"", ""\49"", ""\119"", ""\81"", ""\98"", ""\51"", ""\51"", ""\113"", ""\81"", ""\53"", ""\49"", ""\53"", ""\107"", ""\48"", ""\112"", ""\84"", ""\53"", ""\56"", ""\51"", ""\52"", ""\48"", ""\67"", ""\52"", ""\105"", ""\68"", ""\86"", ""\118"", ""\51"", ""\56"", ""\57"", ""\55"", ""\50"", ""\75"", ""\56"", ""\114"", ""\50"", ""\50"", ""\50"", ""\118"", ""\108"", ""\57"", ""\77"", ""\82"", ""\51"", ""\73"", ""\105"", ""\49"", ""\57"", ""\66"", ""\56"", ""\53"", ""\100"", ""\70"", ""\106"", ""\57"", ""\120"", ""\89"", ""\71"", ""\102"", ""\116"", ""\66"", ""\116"", ""\68"", ""\50"", ""\50"", ""\48"", ""\65"", ""\53"", ""\100"", ""\66"", ""\49"", ""\86"", ""\83"", ""\75"", ""\52"", ""\56"", ""\78"", ""\103"", ""\77"", ""\49"", ""\78"", ""\48"", ""\97"", ""\57"", ""\114"", ""\120"", ""\53"", ""\49"", ""\116"", ""\54"", ""\103"", ""\49"", ""\57"", ""\48"", ""\98"", ""\71"", ""\57"", ""\51"", ""\111"", ""\55"", ""\101"", ""\89"", ""\57"", ""\50"", ""\51"", ""\120"", ""\98"", ""\103"", ""\56"", ""\81"", ""\120"", ""\118"", ""\79"", ""\57"", ""\118"", ""\117"", ""\50"", ""\106"", ""\49"", ""\51"", ""\52"", ""\75"", ""\76"", ""\51"", ""\57"", ""\52"", ""\57"", ""\107"", ""\102"", ""\69"", ""\83"", ""\56"", ""\69"", ""\77"", ""\56"", ""\108"", ""\109"", ""\70"", ""\71"", ""\79"", ""\49"", ""\50"", ""\54"", ""\106"", ""\48"", ""\88"", ""\72"", ""\48"", ""\99"", ""\56"", ""\104"", ""\71"", ""\50"", ""\56"", ""\108"", ""\49"", ""\90"", ""\55"", ""\102"", ""\82"", ""\56"", ""\54"", ""\57"", ""\75"", ""\118"", ""\52"", ""\50"", ""\107"", ""\52"", ""\53"", ""\120"", ""\73"", ""\97"", ""\103"", ""\99"", ""\120"", ""\85"", ""\55"", ""\48"", ""\54"", ""\50"", ""\53"", ""\56"", ""\52"", ""\85"", ""\81"", ""\117"", ""\51"", ""\54"", ""\68"", ""\122"", ""\51"", ""\103"", ""\48"", ""\54"", ""\56"", ""\98"", ""\116"", ""\55"", ""\53"", ""\49"", ""\110"", ""\106"", ""\101"", ""\49"", ""\77"", ""\55"", ""\85"", ""\51"", ""\70"", ""\67"", ""\120"", ""\55"", ""\112"", ""\52"", ""\57"", ""\54"", ""\113"", ""\115"", ""\90"", ""\56"", ""\72"", ""\49"", ""\54"", ""\83"", ""\100"", ""\106"", ""\105"", ""\82"", ""\54"", ""\56"", ""\54"", ""\53"", ""\87"", ""\50"", ""\102"", ""\49"", ""\50"", ""\121"", ""\53"", ""\48"", ""\102"", ""\79"", ""\53"", ""\67"", ""\53"", ""\76"", ""\111"", ""\82"", ""\65"", ""\49"", ""\56"", ""\74"", ""\80"", ""\115"", ""\57"", ""\84"", ""\51"", ""\108"", ""\116"", ""\101"", ""\56"", ""\54"", ""\53"", ""\77"", ""\56"", ""\111"", ""\65"", ""\107"", ""\107"", ""\74"", ""\52"", ""\52"", ""\52"", ""\52"", ""\85"", ""\72"", ""\86"", ""\66"", ""\57"", ""\121"", ""\80"", ""\113"", ""\119"", ""\54"", ""\120"", ""\53"", ""\56"", ""\53"", ""\114"", ""\49"", ""\51"", ""\78"", ""\88"", ""\57"", ""\53"", ""\57"", ""\121"", ""\50"", ""\104"", ""\53"", ""\52"", ""\49"", ""\111"", ""\80"", ""\54"", ""\111"", ""\51"", ""\102"", ""\49"", ""\118"", ""\107"", ""\50"", ""\111"", ""\77"", ""\109"", ""\82"", ""\116"", ""\87"", ""\50"", ""\109"", ""\48"", ""\105"", ""\70"", ""\54"", ""\50"", ""\116"", ""\57"", ""\54"", ""\49"", ""\77"", ""\56"", ""\83"", ""\49"", ""\82"", ""\54"", ""\122"", ""\50"", ""\57"", ""\51"", ""\52"", ""\69"", ""\111"", ""\52"", ""\54"", ""\104"", ""\57"", ""\54"", ""\54"", ""\57"", ""\120"", ""\81"", ""\57"", ""\87"", ""\49"", ""\90"", ""\120"", ""\57"", ""\49"", ""\82"", ""\108"", ""\85"", ""\112"", ""\75"", ""\115"", ""\79"", ""\86"", ""\54"", ""\51"", ""\76"", ""\50"", ""\70"", ""\86"", ""\70"", ""\53"", ""\51"", ""\49"", ""\100"", ""\51"", ""\55"", ""\55"", ""\50"", ""\119"", ""\49"", ""\57"", ""\85"", ""\102"", ""\49"", ""\54"", ""\52"", ""\88"", ""\81"", ""\83"", ""\48"", ""\48"", ""\114"", ""\78"", ""\49"", ""\50"", ""\100"", ""\51"", ""\48"", ""\121"", ""\105"", ""\57"", ""\52"", ""\89"", ""\57"", ""\90"", ""\57"", ""\50"", ""\67"", ""\52"", ""\117"", ""\55"", ""\101"", ""\101"", ""\110"", ""\105"", ""\69"", ""\52"", ""\88"", ""\71"", ""\89"", ""\48"", ""\121"", ""\72"", ""\122"", ""\88"", ""\51"", ""\104"", ""\49"", ""\50"", ""\77"", ""\120"", ""\77"", ""\112"", ""\85"", ""\120"", ""\54"", ""\57"", ""\113"", ""\50"", ""\55"", ""\49"", ""\53"", ""\111"", ""\121"", ""\84"", ""\49"", ""\51"", ""\51"", ""\67"", ""\57"", ""\78"", ""\122"", ""\56"", ""\50"", ""\51"", ""\71"", ""\98"", ""\54"", ""\98"", ""\55"", ""\119"", ""\120"", ""\117"", ""\50"", ""\88"", ""\56"", ""\49"", ""\111"", ""\49"", ""\70"", ""\69"", ""\102"", ""\57"", ""\120"", ""\122"", ""\105"", ""\70"", ""\110"", ""\55"", ""\66"", ""\57"", ""\53"", ""\57"", ""\70"", ""\55"", ""\72"", ""\50"", ""\52"", ""\90"", ""\50"", ""\101"", ""\112"", ""\54"", ""\51"", ""\56"", ""\52"", ""\51"", ""\51"", ""\54"", ""\54"", ""\106"", ""\50"", ""\84"", ""\77"", ""\51"", ""\121"", ""\89"", ""\55"", ""\49"", ""\54"", ""\48"", ""\53"", ""\80"", ""\113"", ""\121"", ""\117"", ""\49"", ""\56"", ""\57"", ""\57"", ""\79"", ""\90"", ""\82"", ""\120"", ""\53"", ""\57"", ""\86"", ""\107"", ""\122"", ""\51"", ""\117"", ""\54"", ""\97"", ""\101"", ""\67"", ""\52"", ""\55"", ""\79"", ""\52"", ""\69"", ""\89"", ""\54"", ""\99"", ""\110"", ""\52"", ""\50"", ""\54"", ""\81"", ""\54"", ""\73"", ""\104"", ""\122"", ""\57"", ""\57"", ""\54"", ""\49"", ""\102"", ""\106"", ""\73"", ""\118"", ""\103"", ""\112"", ""\56"", ""\81"", ""\51"", ""\55"", ""\57"", ""\87"", ""\49"", ""\48"", ""\52"", ""\104"", ""\54"", ""\114"", ""\54"", ""\118"", ""\56"", ""\50"", ""\50"", ""\105"", ""\75"", ""\54"", ""\57"", ""\112"", ""\54"", ""\77"", ""\68"", ""\102"", ""\102"", ""\84"", ""\54"", ""\50"", ""\78"", ""\106"", ""\51"", ""\51"", ""\50"", ""\85"", ""\68"", ""\52"", ""\53"", ""\55"", ""\57"", ""\57"", ""\102"", ""\86"", ""\54"", ""\100"", ""\67"", ""\49"", ""\49"", ""\67"", ""\74"", ""\55"", ""\82"", ""\50"", ""\57"", ""\74"", ""\122"", ""\103"", ""\114"", ""\57"", ""\48"", ""\53"", ""\56"", ""\121"", ""\67"", ""\104"", ""\55"", ""\105"", ""\56"", ""\54"", ""\51"", ""\48"", ""\51"", ""\84"", ""\57"", ""\85"", ""\80"", ""\51"", ""\54"", ""\48"", ""\53"", ""\115"", ""\48"", ""\52"", ""\87"", ""\55"", ""\111"", ""\104"", ""\97"", ""\102"", ""\83"", ""\102"", ""\107"", ""\49"", ""\50"", ""\55"", ""\54"", ""\54"", ""\114"", ""\72"", ""\53"", ""\49"", ""\83"", ""\54"", ""\81"", ""\52"", ""\57"", ""\52"", ""\70"", ""\84"", ""\51"", ""\48"", ""\53"", ""\56"", ""\90"", ""\81"", ""\48"", ""\71"", ""\49"", ""\50"", ""\50"", ""\84"", ""\109"", ""\49"", ""\51"", ""\89"", ""\87"", ""\70"", ""\81"", ""\52"", ""\50"", ""\69"", ""\89"", ""\48"", ""\57"", ""\71"", ""\68"", ""\86"", ""\101"", ""\89"", ""\53"", ""\88"", ""\72"", ""\55"", ""\53"", ""\99"", ""\52"", ""\100"", ""\70"", ""\112"", ""\55"", ""\116"", ""\54"", ""\78"", ""\104"", ""\76"", ""\85"", ""\52"", ""\50"", ""\72"", ""\116"", ""\53"", ""\103"", ""\49"", ""\52"", ""\118"", ""\99"", ""\54"", ""\115"", ""\57"", ""\118"", ""\81"", ""\100"", ""\121"", ""\84"", ""\87"", ""\55"", ""\107"", ""\50"", ""\49"", ""\51"", ""\83"", ""\57"", ""\57"", ""\51"", ""\122"", ""\57"", ""\113"", ""\51"", ""\119"", ""\50"", ""\69"", ""\52"", ""\48"", ""\87"", ""\118"", ""\50"", ""\53"", ""\50"", ""\78"", ""\55"", ""\54"", ""\53"", ""\48"", ""\103"", ""\97"", ""\54"", ""\97"", ""\97"", ""\106"", ""\49"", ""\57"", ""\55"", ""\86"", ""\85"", ""\85"", ""\50"", ""\57"", ""\52"", ""\117"", ""\49"", ""\52"", ""\54"", ""\53"", ""\68"", ""\54"", ""\81"", ""\115"", ""\54"", ""\49"", ""\51"", ""\113"", ""\49"", ""\90"", ""\80"", ""\117"", ""\105"", ""\52"", ""\118"", ""\49"", ""\112"", ""\71"", ""\51"", ""\50"", ""\87"", ""\116"", ""\88"", ""\57"", ""\54"", ""\56"", ""\57"", ""\48"", ""\85"", ""\53"", ""\54"", ""\48"", ""\113"", ""\97"", ""\65"", ""\55"", ""\56"", ""\87"", ""\50"", ""\52"", ""\52"", ""\51"", ""\56"", ""\55"", ""\80"", ""\111"", ""\74"", ""\51"", ""\49"", ""\74"", ""\68"", ""\50"", ""\104"", ""\112"", ""\55"", ""\79"", ""\67"", ""\53"", ""\48"", ""\86"", ""\114"", ""\50"", ""\54"", ""\97"", ""\90"", ""\54"", ""\52"", ""\52"", ""\57"", ""\113"", ""\113"", ""\48"", ""\103"", ""\88"", ""\104"", ""\54"", ""\57"", ""\56"", ""\85"", ""\50"", ""\51"", ""\77"", ""\87"", ""\48"", ""\99"", ""\85"", ""\85"", ""\85"", ""\84"", ""\74"", ""\65"", ""\49"", ""\113"", ""\110"", ""\73"", ""\110"", ""\54"", ""\117"", ""\48"", ""\53"", ""\57"", ""\117"", ""\115"", ""\57"", ""\117"", ""\54"", ""\99"", ""\53"", ""\78"", ""\54"", ""\72"", ""\50"", ""\105"", ""\54"", ""\56"", ""\106"", ""\65"", ""\53"", ""\52"", ""\82"", ""\76"", ""\111"", ""\99"", ""\57"", ""\74"", ""\110"", ""\78"", ""\73"", ""\115"", ""\112"", ""\50"", ""\66"", ""\111"", ""\57"", ""\70"", ""\105"", ""\72"", ""\51"", ""\99"", ""\56"", ""\54"", ""\84"", ""\77"", ""\68"", ""\108"", ""\112"", ""\56"", ""\84"", ""\85"", ""\89"", ""\50"", ""\54"", ""\115"", ""\122"", ""\53"", ""\56"", ""\57"", ""\53"", ""\54"", ""\56"", ""\49"", ""\98"", ""\110"", ""\113"", ""\53"", ""\68"", ""\52"", ""\52"", ""\56"", ""\50"", ""\75"", ""\48"", ""\109"", ""\53"", ""\49"", ""\56"", ""\74"", ""\79"", ""\87"", ""\103"", ""\110"", ""\52"", ""\68"", ""\116"", ""\50"", ""\53"", ""\68"", ""\100"", ""\52"", ""\53"", ""\56"", ""\48"", ""\51"", ""\48"", ""\114"", ""\77"", ""\53"", ""\75"", ""\120"", ""\49"", ""\69"", ""\105"", ""\89"", ""\50"", ""\53"", ""\50"", ""\49"", ""\54"", ""\56"", ""\72"", ""\48"", ""\111"", ""\90"", ""\52"", ""\50"", ""\57"", ""\48"", ""\50"", ""\57"", ""\54"", ""\54"", ""\114"", ""\48"", ""\49"", ""\54"", ""\82"", ""\50"", ""\49"", ""\101"", ""\102"", ""\76"", ""\82"", ""\98"", ""\55"", ""\117"", ""\76"", ""\51"", ""\108"", ""\52"", ""\48"", ""\54"", ""\118"", ""\54"", ""\98"", ""\109"", ""\87"", ""\97"", ""\54"", ""\80"", ""\115"", ""\55"", ""\98"", ""\112"", ""\54"", ""\72"", ""\48"", ""\77"", ""\68"", ""\55"", ""\57"", ""\53"", ""\51"", ""\121"", ""\103"", ""\106"", ""\81"", ""\53"", ""\50"", ""\71"", ""\48"", ""\52"", ""\85"", ""\122"", ""\98"", ""\48"", ""\57"", ""\51"", ""\57"", ""\56"", ""\54"", ""\102"", ""\50"", ""\100"", ""\51"", ""\85"", ""\57"", ""\115"", ""\52"", ""\77"", ""\50"", ""\107"", ""\67"", ""\114"", ""\53"", ""\88"", ""\97"", ""\48"", ""\53"", ""\53"", ""\119"", ""\108"", ""\51"", ""\49"", ""\77"", ""\74"", ""\110"", ""\100"", ""\54"", ""\53"", ""\66"", ""\109"", ""\52"", ""\49"", ""\78"", ""\73"", ""\53"", ""\78"", ""\52"", ""\107"", ""\54"", ""\52"", ""\115"", ""\50"", ""\113"", ""\52"", ""\99"", ""\74"", ""\74"", ""\56"", ""\116"", ""\50"", ""\100"", ""\72"", ""\54"", ""\50"", ""\55"", ""\86"", ""\66"", ""\97"", ""\50"", ""\118"", ""\52"", ""\48"", ""\48"", ""\50"", ""\70"", ""\53"", ""\113"", ""\50"", ""\54"", ""\57"", ""\69"", ""\85"", ""\83"", ""\52"", ""\74"", ""\57"", ""\53"", ""\101"", ""\78"", ""\48"", ""\78"", ""\111"", ""\50"", ""\55"", ""\48"", ""\65"", ""\50"", ""\55"", ""\49"", ""\74"", ""\55"", ""\113"", ""\67"", ""\53"", ""\79"", ""\51"", ""\50"", ""\68"", ""\76"", ""\51"", ""\53"", ""\48"", ""\53"", ""\52"", ""\56"", ""\72"", ""\49"", ""\55"", ""\88"", ""\51"", ""\73"", ""\53"", ""\100"", ""\52"", ""\51"", ""\73"", ""\108"", ""\54"", ""\49"", ""\57"", ""\48"", ""\88"", ""\48"", ""\51"", ""\117"", ""\55"", ""\55"", ""\71"", ""\106"", ""\55"", ""\52"", ""\49"", ""\48"", ""\70"", ""\107"", ""\121"", ""\110"", ""\108"", ""\49"", ""\55"", ""\113"", ""\49"", ""\55"", ""\73"", ""\48"", ""\108"", ""\55"", ""\48"", ""\53"", ""\55"", ""\122"", ""\122"", ""\57"", ""\52"", ""\87"", ""\118"", ""\54"", ""\103"", ""\56"", ""\103"", ""\48"", ""\48"", ""\57"", ""\57"", ""\56"", ""\83"", ""\52"", ""\55"", ""\112"", ""\56"", ""\50"", ""\48"", ""\101"", ""\121"", ""\57"", ""\51"", ""\120"", ""\110"", ""\99"", ""\120"", ""\107"", ""\52"", ""\83"", ""\52"", ""\87"", ""\109"", ""\54"", ""\72"", ""\85"", ""\76"", ""\66"", ""\101"", ""\54"", ""\69"", ""\56"", ""\114"", ""\51"", ""\55"", ""\54"", ""\52"", ""\54"", ""\79"", ""\118"", ""\103"", ""\88"", ""\102"", ""\118"", ""\105"", ""\49"", ""\56"", ""\111"", ""\51"", ""\53"", ""\71"", ""\49"", ""\98"", ""\116"", ""\49"", ""\56"", ""\71"", ""\120"", ""\101"", ""\55"", ""\56"", ""\74"", ""\52"", ""\117"", ""\54"", ""\83"", ""\109"", ""\57"", ""\51"", ""\48"", ""\52"", ""\52"", ""\55"", ""\53"", ""\87"", ""\121"", ""\90"", ""\98"", ""\88"", ""\101"", ""\48"", ""\109"", ""\97"", ""\99"", ""\57"", ""\116"", ""\97"", ""\55"", ""\76"", ""\122"", ""\82"", ""\48"", ""\112"", ""\70"", ""\48"", ""\52"", ""\119"", ""\83"", ""\81"", ""\67"", ""\100"", ""\49"", ""\67"", ""\50"", ""\121"", ""\50"", ""\49"", ""\57"", ""\52"", ""\48"", ""\109"", ""\56"", ""\67"", ""\114"", ""\50"", ""\98"", ""\50"", ""\49"", ""\87"", ""\104"", ""\82"", ""\79"", ""\50"", ""\98"", ""\54"", ""\48"", ""\57"", ""\57"", ""\76"", ""\51"", ""\56"", ""\74"", ""\49"", ""\50"", ""\68"", ""\53"", ""\78"", ""\117"", ""\54"", ""\80"", ""\54"", ""\53"", ""\54"", ""\111"", ""\87"", ""\105"", ""\120"", ""\70"", ""\72"", ""\53"", ""\81"", ""\122"", ""\115"", ""\90"", ""\73"", ""\54"", ""\48"", ""\51"", ""\65"", ""\49"", ""\104"", ""\102"", ""\83"", ""\51"", ""\54"", ""\50"", ""\52"", ""\49"", ""\50"", ""\102"", ""\85"", ""\105"", ""\56"", ""\53"", ""\53"", ""\57"", ""\84"", ""\102"", ""\53"", ""\105"", ""\74"", ""\48"", ""\75"", ""\85"", ""\48"", ""\77"", ""\56"", ""\49"", ""\57"", ""\119"", ""\85"", ""\111"", ""\116"", ""\52"", ""\50"", ""\48"", ""\49"", ""\103"", ""\52"", ""\52"", ""\101"", ""\115"", ""\85"", ""\51"", ""\57"", ""\57"", ""\77"", ""\56"", ""\48"", ""\50"", ""\51"", ""\112"", ""\48"", ""\117"", ""\75"", ""\51"", ""\76"", ""\52"", ""\56"", ""\102"", ""\51"", ""\80"", ""\82"", ""\81"", ""\52"", ""\70"", ""\71"", ""\56"", ""\107"", ""\106"", ""\112"", ""\120"", ""\120"", ""\114"", ""\48"", ""\48"", ""\50"", ""\52"", ""\101"", ""\82"", ""\102"", ""\50"", ""\57"", ""\53"", ""\50"", ""\50"", ""\52"", ""\49"", ""\54"", ""\77"", ""\52"", ""\70"", ""\50"", ""\51"", ""\52"", ""\48"", ""\108"", ""\104"", ""\52"", ""\50"", ""\53"", ""\89"", ""\50"", ""\107"", ""\54"", ""\48"", ""\56"", ""\67"", ""\85"", ""\53"", ""\109"", ""\50"", ""\85"", ""\88"", ""\79"", ""\78"", ""\90"", ""\51"", ""\50"", ""\48"", ""\107"", ""\121"", ""\79"", ""\103"", ""\51"", ""\53"", ""\48"", ""\48"", ""\122"", ""\84"", ""\118"", ""\120"", ""\73"", ""\54"", ""\49"", ""\56"", ""\74"", ""\68"", ""\120"", ""\56"", ""\114"", ""\50"", ""\81"", ""\53"", ""\89"", ""\50"", ""\50"", ""\72"", ""\119"", ""\51"", ""\49"", ""\56"", ""\55"", ""\49"", ""\50"", ""\50"", ""\54"", ""\103"", ""\53"", ""\99"", ""\55"", ""\77"", ""\66"", ""\55"", ""\50"", ""\49"", ""\110"", ""\106"", ""\48"", ""\48"", ""\53"", ""\51"", ""\111"", ""\51"", ""\48"", ""\57"", ""\49"", ""\114"", ""\83"", ""\85"", ""\111"", ""\122"", ""\86"", ""\82"", ""\56"", ""\57"", ""\89"", ""\52"", ""\84"", ""\69"", ""\48"", ""\55"", ""\118"", ""\53"", ""\69"", ""\57"", ""\56"", ""\57"", ""\66"", ""\105"", ""\57"", ""\120"", ""\54"", ""\122"", ""\78"", ""\51"", ""\121"", ""\52"", ""\66"", ""\50"", ""\53"", ""\49"", ""\89"", ""\73"", ""\73"", ""\83"", ""\51"", ""\66"", ""\114"", ""\100"", ""\52"", ""\55"", ""\57"", ""\56"", ""\52"", ""\54"", ""\50"", ""\72"", ""\76"", ""\48"", ""\71"", ""\56"", ""\54"", ""\115"", ""\51"", ""\54"", ""\56"", ""\121"", ""\57"", ""\54"", ""\97"", ""\84"", ""\52"", ""\85"", ""\56"", ""\71"", ""\56"", ""\90"", ""\48"", ""\51"", ""\50"", ""\100"", ""\65"", ""\55"", ""\66"", ""\86"", ""\119"", ""\120"", ""\54"", ""\53"", ""\88"", ""\53"", ""\101"", ""\50"", ""\69"", ""\118"", ""\87"", ""\80"", ""\115"", ""\117"", ""\49"", ""\56"", ""\118"", ""\100"", ""\57"", ""\79"", ""\56"", ""\105"", ""\56"", ""\66"", ""\90"", ""\49"", ""\54"", ""\120"", ""\112"", ""\52"", ""\55"", ""\57"", ""\56"", ""\71"", ""\81"", ""\48"", ""\54"", ""\55"", ""\74"", ""\73"", ""\107"", ""\56"", ""\51"", ""\72"", ""\118"", ""\84"", ""\79"", ""\52"", ""\98"", ""\108"", ""\54"", ""\52"", ""\54"", ""\111"", ""\50"", ""\121"", ""\50"", ""\55"", ""\118"", ""\79"", ""\56"", ""\51"", ""\56"", ""\57"", ""\54"", ""\87"", ""\101"", ""\56"", ""\52"", ""\70"", ""\71"", ""\50"", ""\88"", ""\50"", ""\83"", ""\114"", ""\56"", ""\49"", ""\50"", ""\53"", ""\102"", ""\106"", ""\74"", ""\115"", ""\103"", ""\55"", ""\57"", ""\107"", ""\71"", ""\116"", ""\119"", ""\53"", ""\73"", ""\112"", ""\90"", ""\48"", ""\48"", ""\118"", ""\54"", ""\73"", ""\48"", ""\49"", ""\48"", ""\57"", ""\109"", ""\54"", ""\54"", ""\54"", ""\121"", ""\48"", ""\48"", ""\97"", ""\55"", ""\53"", ""\54"", ""\53"", ""\57"", ""\57"", ""\53"", ""\107"", ""\52"", ""\53"", ""\102"", ""\111"", ""\99"", ""\97"", ""\55"", ""\115"", ""\78"", ""\55"", ""\87"", ""\102"", ""\110"", ""\70"", ""\48"", ""\103"", ""\49"", ""\109"", ""\77"", ""\84"", ""\97"", ""\112"", ""\51"", ""\76"", ""\76"", ""\49"", ""\54"", ""\52"", ""\51"", ""\113"", ""\48"", ""\113"", ""\106"", ""\108"", ""\73"", ""\50"", ""\49"", ""\117"", ""\120"", ""\52"", ""\51"", ""\57"", ""\109"", ""\49"", ""\80"", ""\103"", ""\66"", ""\51"", ""\81"", ""\90"", ""\65"", ""\51"", ""\121"", ""\48"", ""\56"", ""\54"", ""\48"", ""\78"", ""\72"", ""\50"", ""\53"", ""\110"", ""\52"", ""\120"", ""\56"", ""\86"", ""\52"", ""\90"", ""\57"", ""\51"", ""\114"", ""\52"", ""\83"", ""\56"", ""\48"", ""\89"", ""\48"", ""\109"", ""\49"", ""\53"", ""\52"", ""\55"", ""\48"", ""\53"", ""\70"", ""\122"", ""\50"", ""\112"", ""\52"", ""\66"", ""\51"", ""\52"", ""\76"", ""\82"", ""\76"", ""\49"", ""\56"", ""\50"", ""\105"", ""\50"", ""\120"", ""\56"", ""\54"", ""\56"", ""\50"", ""\116"", ""\50"", ""\89"", ""\106"", ""\57"", ""\49"", ""\57"", ""\48"", ""\50"", ""\109"", ""\56"", ""\103"", ""\69"", ""\89"", ""\50"", ""\119"", ""\56"", ""\121"", ""\121"", ""\101"", ""\53"", ""\111"", ""\78"", ""\51"", ""\51"", ""\117"", ""\114"", ""\69"", ""\97"", ""\76"", ""\103"", ""\72"", ""\103"", ""\56"", ""\51"", ""\80"", ""\52"", ""\50"", ""\57"", ""\48"", ""\103"", ""\107"", ""\48"", ""\116"", ""\53"", ""\48"", ""\48"", ""\67"", ""\108"", ""\53"", ""\52"", ""\111"", ""\69"", ""\116"", ""\54"", ""\52"", ""\51"", ""\107"", ""\50"", ""\54"", ""\50"", ""\116"", ""\48"", ""\89"", ""\116"", ""\48"", ""\55"", ""\53"", ""\120"", ""\55"", ""\119"", ""\52"", ""\53"", ""\56"", ""\119"", ""\71"", ""\51"", ""\48"", ""\101"", ""\57"", ""\71"", ""\54"", ""\56"", ""\55"", ""\98"", ""\57"", ""\71"", ""\57"", ""\50"", ""\55"", ""\52"", ""\117"", ""\84"", ""\54"", ""\56"", ""\54"", ""\85"", ""\53"", ""\50"", ""\54"", ""\51"", ""\79"", ""\73"", ""\71"", ""\66"", ""\48"", ""\81"", ""\50"", ""\71"", ""\49"", ""\48"", ""\54"", ""\69"", ""\55"", ""\78"", ""\54"", ""\78"", ""\78"", ""\67"", ""\98"", ""\73"", ""\54"", ""\118"", ""\108"", ""\74"", ""\88"", ""\97"", ""\117"", ""\111"", ""\53"", ""\98"", ""\103"", ""\81"", ""\57"", ""\57"", ""\57"", ""\48"", ""\49"", ""\110"", ""\113"", ""\98"", ""\106"", ""\81"", ""\52"", ""\57"", ""\112"", ""\103"", ""\71"", ""\56"", ""\111"", ""\55"", ""\106"", ""\51"", ""\69"", ""\86"", ""\86"", ""\52"", ""\49"", ""\121"", ""\52"", ""\122"", ""\113"", ""\52"", ""\66"", ""\77"", ""\51"", ""\103"", ""\99"", ""\53"", ""\55"", ""\55"", ""\55"", ""\50"", ""\67"", ""\57"", ""\83"", ""\81"", ""\76"", ""\54"", ""\101"", ""\49"", ""\66"", ""\79"", ""\107"", ""\57"", ""\97"", ""\57"", ""\117"", ""\52"", ""\51"", ""\88"", ""\103"", ""\57"", ""\103"", ""\48"", ""\50"", ""\53"", ""\52"", ""\48"", ""\83"", ""\71"", ""\114"", ""\79"", ""\66"", ""\48"", ""\57"", ""\97"", ""\81"", ""\54"", ""\108"", ""\81"", ""\54"", ""\87"", ""\55"", ""\56"", ""\82"", ""\97"", ""\111"", ""\54"", ""\114"", ""\78"", ""\70"", ""\57"", ""\52"", ""\100"", ""\57"", ""\54"", ""\80"", ""\57"", ""\121"", ""\81"", ""\83"", ""\76"", ""\49"", ""\54"", ""\119"", ""\70"", ""\107"", ""\74"", ""\48"", ""\73"", ""\57"", ""\110"", ""\99"", ""\51"", ""\105"", ""\55"", ""\52"", ""\52"", ""\57"", ""\52"", ""\77"", ""\101"", ""\73"", ""\49"", ""\53"", ""\52"", ""\52"", ""\106"", ""\57"", ""\69"", ""\48"", ""\51"", ""\55"", ""\70"", ""\109"", ""\54"", ""\56"", ""\52"", ""\65"", ""\79"", ""\68"", ""\54"", ""\48"", ""\52"", ""\120"", ""\51"", ""\51"", ""\85"", ""\52"", ""\54"", ""\106"", ""\51"", ""\51"", ""\87"", ""\51"", ""\121"", ""\102"", ""\66"", ""\50"", ""\55"", ""\75"", ""\49"", ""\113"", ""\56"", ""\55"", ""\116"", ""\52"", ""\68"", ""\118"", ""\50"", ""\69"", ""\110"", ""\57"", ""\117"", ""\121"", ""\104"", ""\50"", ""\52"", ""\49"", ""\52"", ""\56"", ""\48"", ""\56"", ""\50"", ""\48"", ""\108"", ""\121"", ""\121"", ""\55"", ""\111"", ""\114"", ""\52"", ""\119"", ""\120"", ""\70"", ""\107"", ""\81"", ""\113"", ""\65"", ""\51"", ""\84"", ""\68"", ""\51"", ""\49"", ""\72"", ""\53"", ""\51"", ""\89"", ""\117"", ""\65"", ""\52"", ""\54"", ""\55"", ""\74"", ""\56"", ""\121"", ""\53"", ""\87"", ""\80"", ""\48"", ""\54"", ""\56"", ""\116"", ""\48"", ""\55"", ""\110"", ""\113"", ""\115"", ""\51"", ""\69"", ""\56"", ""\53"", ""\82"", ""\121"", ""\55"", ""\54"", ""\52"", ""\74"", ""\48"", ""\108"", ""\90"", ""\57"", ""\72"", ""\53"", ""\54"", ""\78"", ""\109"", ""\80"", ""\55"", ""\65"", ""\107"", ""\57"", ""\50"", ""\51"", ""\83"", ""\50"", ""\56"", ""\90"", ""\72"", ""\51"", ""\77"", ""\75"", ""\49"", ""\68"", ""\54"", ""\99"", ""\78"", ""\57"", ""\84"", ""\53"", ""\56"", ""\112"", ""\52"", ""\69"", ""\105"", ""\54"", ""\50"", ""\57"", ""\56"", ""\75"", ""\84"", ""\102"", ""\118"", ""\53"", ""\48"", ""\110"", ""\57"", ""\48"", ""\50"", ""\122"", ""\54"", ""\49"", ""\48"", ""\114"", ""\56"", ""\55"", ""\111"", ""\54"", ""\65"", ""\56"", ""\65"", ""\51"", ""\122"", ""\84"", ""\98"", ""\55"", ""\52"", ""\49"", ""\48"", ""\117"", ""\120"", ""\100"", ""\113"", ""\49"", ""\77"", ""\65"", ""\105"", ""\56"", ""\116"", ""\54"", ""\110"", ""\57"", ""\90"", ""\68"", ""\50"", ""\54"", ""\51"", ""\97"", ""\52"", ""\53"", ""\119"", ""\57"", ""\120"", ""\54"", ""\48"", ""\104"", ""\49"", ""\119"", ""\57"", ""\57"", ""\74"", ""\100"", ""\79"", ""\71"", ""\49"", ""\51"", ""\49"", ""\57"", ""\50"", ""\105"", ""\69"", ""\102"", ""\85"", ""\57"", ""\85"", ""\69"", ""\49"", ""\52"", ""\51"", ""\70"", ""\56"", ""\119"", ""\89"", ""\55"", ""\86"", ""\85"", ""\48"", ""\79"", ""\57"", ""\55"", ""\57"", ""\75"", ""\80"", ""\116"", ""\55"", ""\52"", ""\49"", ""\89"", ""\73"", ""\86"", ""\112"", ""\120"", ""\57"", ""\85"", ""\81"", ""\52"", ""\118"", ""\52"", ""\48"", ""\51"", ""\84"", ""\48"", ""\66"", ""\49"", ""\122"", ""\88"", ""\54"", ""\118"", ""\109"", ""\75"", ""\50"", ""\57"", ""\57"", ""\86"", ""\52"", ""\56"", ""\53"", ""\98"", ""\57"", ""\53"", ""\115"", ""\54"", ""\84"", ""\103"", ""\102"", ""\108"", ""\48"", ""\48"", ""\51"", ""\108"", ""\77"", ""\54"", ""\56"", ""\56"", ""\51"", ""\106"", ""\76"", ""\98"", ""\55"", ""\54"", ""\74"", ""\56"", ""\121"", ""\52"", ""\65"", ""\100"", ""\48"", ""\118"", ""\50"", ""\121"", ""\50"", ""\114"", ""\112"", ""\109"", ""\67"", ""\71"", ""\107"", ""\113"", ""\51"", ""\113"", ""\67"", ""\75"", ""\55"", ""\55"", ""\103"", ""\105"", ""\82"", ""\48"", ""\114"", ""\49"", ""\117"", ""\57"", ""\71"", ""\104"", ""\121"", ""\116"", ""\48"", ""\54"", ""\86"", ""\50"", ""\51"", ""\55"", ""\56"", ""\110"", ""\108"", ""\70"", ""\101"", ""\115"", ""\77"", ""\84"", ""\89"", ""\102"", ""\115"", ""\53"", ""\113"", ""\56"", ""\54"", ""\103"", ""\55"", ""\116"", ""\76"", ""\49"", ""\53"", ""\57"", ""\56"", ""\81"", ""\57"", ""\84"", ""\50"", ""\103"", ""\73"", ""\105"", ""\55"", ""\85"", ""\50"", ""\55"", ""\54"", ""\52"", ""\55"", ""\65"", ""\56"", ""\90"", ""\99"", ""\55"", ""\89"", ""\52"", ""\105"", ""\54"", ""\114"", ""\72"", ""\98"", ""\114"", ""\56"", ""\75"", ""\90"", ""\54"", ""\73"", ""\52"", ""\53"", ""\51"", ""\54"", ""\48"", ""\57"", ""\84"", ""\120"", ""\89"", ""\50"", ""\116"", ""\72"", ""\54"", ""\110"", ""\54"", ""\65"", ""\74"", ""\50"", ""\67"", ""\55"", ""\87"", ""\90"", ""\122"", ""\57"", ""\77"", ""\49"", ""\116"", ""\103"", ""\49"", ""\48"", ""\89"", ""\48"", ""\51"", ""\116"", ""\50"", ""\67"", ""\75"", ""\52"", ""\55"", ""\52"", ""\50"", ""\75"", ""\53"", ""\115"", ""\104"", ""\119"", ""\50"", ""\52"", ""\57"", ""\57"", ""\48"", ""\118"", ""\49"", ""\56"", ""\51"", ""\67"", ""\50"", ""\57"", ""\85"", ""\48"", ""\70"", ""\57"", ""\56"", ""\66"", ""\52"", ""\108"", ""\57"", ""\48"", ""\49"", ""\69"", ""\52"", ""\77"", ""\85"", ""\52"", ""\89"", ""\49"", ""\53"", ""\55"", ""\107"", ""\74"", ""\104"", ""\52"", ""\79"", ""\48"", ""\53"", ""\107"", ""\57"", ""\110"", ""\57"", ""\103"", ""\54"", ""\119"", ""\52"", ""\101"", ""\111"", ""\66"", ""\119"", ""\50"", ""\100"", ""\51"", ""\72"", ""\53"", ""\114"", ""\84"", ""\115"", ""\71"", ""\119"", ""\55"", ""\52"", ""\87"", ""\115"", ""\84"", ""\99"", ""\99"", ""\49"", ""\115"", ""\111"", ""\56"", ""\49"", ""\55"", ""\80"", ""\49"", ""\119"", ""\81"", ""\56"", ""\52"", ""\98"", ""\57"", ""\52"", ""\55"", ""\52"", ""\88"", ""\90"", ""\49"", ""\54"", ""\99"", ""\48"", ""\50"", ""\116"", ""\116"", ""\97"", ""\102"", ""\57"", ""\49"", ""\53"", ""\84"", ""\73"", ""\118"", ""\110"", ""\49"", ""\105"", ""\57"", ""\51"", ""\79"", ""\100"", ""\51"", ""\51"", ""\90"", ""\97"", ""\52"", ""\81"", ""\73"", ""\56"", ""\86"", ""\88"", ""\105"", ""\50"", ""\55"", ""\52"", ""\111"", ""\55"", ""\115"", ""\117"", ""\89"", ""\52"", ""\97"", ""\53"", ""\53"", ""\52"", ""\54"", ""\53"", ""\102"", ""\57"", ""\101"", ""\73"", ""\54"", ""\103"", ""\100"", ""\88"", ""\81"", ""\49"", ""\76"", ""\52"", ""\69"", ""\97"", ""\115"", ""\52"", ""\78"", ""\50"", ""\54"", ""\67"", ""\57"", ""\49"", ""\50"", ""\48"", ""\68"", ""\55"", ""\102"", ""\54"", ""\85"", ""\113"", ""\106"", ""\74"", ""\119"", ""\88"", ""\113"", ""\51"", ""\48"", ""\55"", ""\48"", ""\50"", ""\72"", ""\51"", ""\115"", ""\57"", ""\69"", ""\80"", ""\57"", ""\71"", ""\52"", ""\119"", ""\53"", ""\67"", ""\83"", ""\82"", ""\115"", ""\57"", ""\54"", ""\79"", ""\53"", ""\50"", ""\54"", ""\82"", ""\54"", ""\89"", ""\51"", ""\106"", ""\66"", ""\103"", ""\109"", ""\109"", ""\71"", ""\56"", ""\52"", ""\117"", ""\50"", ""\70"", ""\81"", ""\89"", ""\104"", ""\55"", ""\48"", ""\107"", ""\121"", ""\55"", ""\114"", ""\53"", ""\56"", ""\54"", ""\49"", ""\115"", ""\55"", ""\56"", ""\56"", ""\76"", ""\80"", ""\57"", ""\53"", ""\50"", ""\50"", ""\54"", ""\52"", ""\120"", ""\55"", ""\70"", ""\54"", ""\110"", ""\119"", ""\99"", ""\57"", ""\55"", ""\55"", ""\50"", ""\69"", ""\112"", ""\49"", ""\50"", ""\52"", ""\98"", ""\119"", ""\68"", ""\73"", ""\54"", ""\56"", ""\100"", ""\53"", ""\49"", ""\56"", ""\54"", ""\70"", ""\89"", ""\77"", ""\72"", ""\53"", ""\89"", ""\49"", ""\52"", ""\119"", ""\89"", ""\57"", ""\121"", ""\50"", ""\56"", ""\114"", ""\52"", ""\52"", ""\54"", ""\54"", ""\68"", ""\69"", ""\115"", ""\104"", ""\55"", ""\50"", ""\83"", ""\77"", ""\104"", ""\57"", ""\80"", ""\77"", ""\100"", ""\79"", ""\70"", ""\69"", ""\73"", ""\54"", ""\118"", ""\49"", ""\54"", ""\69"", ""\48"", ""\55"", ""\65"", ""\114"", ""\103"", ""\74"", ""\66"", ""\77"", ""\50"", ""\101"", ""\53"", ""\48"", ""\51"", ""\56"", ""\89"", ""\51"", ""\56"", ""\77"", ""\57"", ""\52"", ""\74"", ""\48"", ""\84"", ""\110"", ""\57"", ""\119"", ""\54"", ""\113"", ""\52"", ""\75"", ""\107"", ""\105"", ""\116"", ""\54"", ""\53"", ""\117"", ""\51"", ""\50"", ""\69"", ""\52"", ""\100"", ""\69"", ""\78"", ""\69"", ""\49"", ""\57"", ""\50"", ""\98"", ""\120"", ""\118"", ""\76"", ""\48"", ""\57"", ""\48"", ""\57"", ""\54"", ""\56"", ""\68"", ""\53"", ""\97"", ""\80"", ""\114"", ""\67"", ""\111"", ""\80"", ""\49"", ""\97"", ""\119"", ""\79"", ""\50"", ""\76"", ""\53"", ""\110"", ""\87"", ""\101"", ""\53"", ""\50"", ""\87"", ""\113"", ""\50"", ""\97"", ""\49"", ""\112"", ""\51"", ""\56"", ""\74"", ""\56"", ""\57"", ""\89"", ""\51"", ""\103"", ""\86"", ""\55"", ""\50"", ""\109"", ""\48"", ""\90"", ""\88"", ""\80"", ""\105"", ""\111"", ""\106"", ""\121"", ""\78"", ""\54"", ""\78"", ""\53"", ""\77"", ""\102"", ""\72"", ""\57"", ""\82"", ""\90"", ""\56"", ""\53"", ""\71"", ""\54"", ""\103"", ""\99"", ""\72"", ""\90"", ""\111"", ""\53"", ""\106"", ""\106"", ""\49"", ""\115"", ""\54"", ""\57"", ""\107"", ""\57"", ""\112"", ""\66"", ""\108"", ""\100"", ""\98"", ""\111"", ""\79"", ""\73"", ""\56"", ""\103"", ""\54"", ""\55"", ""\53"", ""\54"", ""\122"", ""\70"", ""\89"", ""\105"", ""\65"", ""\105"", ""\101"", ""\57"", ""\99"", ""\71"", ""\57"", ""\49"", ""\51"", ""\49"", ""\118"", ""\70"", ""\76"", ""\54"", ""\111"", ""\90"", ""\98"", ""\101"", ""\50"", ""\75"", ""\55"", ""\52"", ""\56"", ""\114"", ""\49"", ""\97"", ""\101"", ""\51"", ""\103"", ""\73"", ""\103"", ""\72"", ""\57"", ""\68"", ""\103"", ""\104"", ""\89"", ""\50"", ""\48"", ""\52"", ""\52"", ""\110"", ""\98"", ""\53"", ""\81"", ""\113"", ""\120"", ""\50"", ""\118"", ""\70"", ""\56"", ""\112"", ""\48"", ""\69"", ""\80"", ""\49"", ""\57"", ""\111"", ""\69"", ""\112"", ""\116"", ""\57"", ""\53"", ""\97"", ""\52"", ""\55"", ""\97"", ""\107"", ""\71"", ""\54"", ""\110"", ""\53"", ""\101"", ""\85"", ""\102"", ""\51"", ""\102"", ""\55"", ""\111"", ""\99"", ""\66"", ""\77"", ""\113"", ""\107"", ""\119"", ""\102"", ""\48"", ""\70"", ""\82"", ""\116"", ""\111"", ""\118"", ""\55"", ""\55"", ""\119"", ""\110"", ""\109"", ""\55"", ""\87"", ""\49"", ""\113"", ""\57"", ""\79"", ""\100"", ""\75"", ""\105"", ""\57"", ""\54"", ""\88"", ""\50"", ""\50"", ""\98"", ""\73"", ""\55"", ""\90"", ""\55"", ""\56"", ""\50"", ""\54"", ""\106"", ""\50"", ""\53"", ""\113"", ""\121"", ""\100"", ""\77"", ""\51"", ""\51"", ""\76"", ""\57"", ""\118"", ""\49"", ""\121"", ""\113"", ""\49"", ""\102"", ""\51"", ""\55"", ""\53"", ""\51"", ""\55"", ""\51"", ""\48"", ""\98"", ""\117"", ""\97"", ""\118"", ""\49"", ""\57"", ""\56"", ""\89"", ""\90"", ""\55"", ""\81"", ""\88"", ""\85"", ""\120"", ""\107"", ""\49"", ""\112"", ""\71"", ""\53"", ""\52"", ""\117"", ""\54"", ""\56"", ""\115"", ""\51"", ""\98"", ""\57"", ""\57"", ""\57"", ""\56"", ""\54"", ""\65"", ""\51"", ""\48"", ""\84"", ""\89"", ""\57"", ""\76"", ""\65"", ""\76"", ""\57"", ""\121"", ""\66"", ""\55"", ""\122"", ""\51"", ""\49"", ""\75"", ""\50"", ""\66"", ""\89"", ""\97"", ""\65"", ""\54"", ""\56"", ""\73"", ""\53"", ""\121"", ""\105"", ""\122"", ""\54"", ""\54"", ""\88"", ""\102"", ""\71"", ""\55"", ""\111"", ""\122"", ""\54"", ""\57"", ""\52"", ""\118"", ""\86"", ""\49"", ""\52"", ""\89"", ""\90"", ""\72"", ""\79"", ""\75"", ""\82"", ""\49"", ""\115"", ""\52"", ""\49"", ""\57"", ""\51"", ""\75"", ""\76"", ""\57"", ""\56"", ""\67"", ""\51"", ""\54"", ""\117"", ""\52"", ""\55"", ""\56"", ""\112"", ""\99"", ""\55"", ""\99"", ""\84"", ""\57"", ""\52"", ""\54"", ""\86"", ""\55"", ""\115"", ""\97"", ""\52"", ""\83"", ""\52"", ""\86"", ""\88"", ""\56"", ""\51"", ""\55"", ""\57"", ""\54"", ""\52"", ""\49"", ""\49"", ""\108"", ""\83"", ""\49"", ""\48"", ""\121"", ""\121"", ""\108"", ""\57"", ""\74"", ""\52"", ""\71"", ""\51"", ""\77"", ""\66"", ""\105"", ""\53"", ""\102"", ""\54"", ""\56"", ""\51"", ""\53"", ""\52"", ""\57"", ""\53"", ""\81"", ""\121"", ""\107"", ""\97"", ""\56"", ""\56"", ""\54"", ""\71"", ""\79"", ""\53"", ""\88"", ""\54"", ""\53"", ""\110"", ""\53"", ""\53"", ""\55"", ""\69"", ""\53"", ""\76"", ""\55"", ""\75"", ""\100"", ""\53"", ""\56"", ""\103"", ""\52"", ""\85"", ""\70"", ""\82"", ""\57"", ""\50"", ""\106"", ""\122"", ""\111"", ""\80"", ""\48"", ""\116"", ""\99"", ""\56"", ""\68"", ""\48"", ""\86"", ""\55"", ""\110"", ""\57"", ""\54"", ""\53"", ""\98"", ""\53"", ""\107"", ""\111"", ""\53"", ""\51"", ""\53"", ""\104"", ""\81"", ""\49"", ""\121"", ""\53"", ""\55"", ""\111"", ""\54"", ""\121"", ""\53"", ""\105"", ""\55"", ""\50"", ""\83"", ""\72"", ""\55"", ""\54"", ""\52"", ""\117"", ""\55"", ""\48"", ""\72"", ""\52"", ""\52"", ""\85"", ""\88"", ""\57"", ""\120"", ""\81"", ""\48"", ""\55"", ""\51"", ""\68"", ""\54"", ""\54"", ""\55"", ""\73"", ""\103"", ""\81"", ""\103"", ""\112"", ""\120"", ""\53"", ""\56"", ""\104"", ""\65"", ""\90"", ""\114"", ""\55"", ""\107"", ""\57"", ""\56"", ""\71"", ""\86"", ""\109"", ""\79"", ""\82"", ""\56"", ""\117"", ""\56"", ""\56"", ""\79"", ""\87"", ""\80"", ""\48"", ""\53"", ""\122"", ""\67"", ""\108"", ""\83"", ""\53"", ""\48"", ""\74"", ""\57"", ""\69"", ""\65"", ""\51"", ""\49"", ""\115"", ""\86"", ""\55"", ""\80"", ""\78"", ""\120"", ""\52"", ""\50"", ""\112"", ""\80"", ""\98"", ""\49"", ""\65"", ""\115"", ""\55"", ""\108"", ""\88"", ""\55"", ""\98"", ""\48"", ""\57"", ""\118"", ""\103"", ""\108"", ""\116"", ""\50"", ""\57"", ""\56"", ""\57"", ""\51"", ""\51"", ""\119"", ""\56"", ""\101"", ""\99"", ""\113"", ""\50"", ""\53"", ""\51"", ""\78"", ""\53"", ""\51"", ""\53"", ""\55"", ""\54"", ""\102"", ""\106"", ""\85"", ""\49"", ""\112"", ""\52"", ""\54"", ""\122"", ""\56"", ""\49"", ""\53"", ""\48"", ""\48"", ""\122"", ""\49"", ""\54"", ""\51"", ""\74"", ""\53"", ""\49"", ""\73"", ""\54"", ""\78"", ""\88"", ""\68"", ""\97"", ""\78"", ""\57"", ""\49"", ""\53"", ""\84"", ""\99"", ""\50"", ""\50"", ""\54"", ""\57"", ""\97"", ""\66"", ""\78"", ""\57"", ""\86"", ""\57"", ""\72"", ""\107"", ""\49"", ""\50"", ""\71"", ""\101"", ""\53"", ""\66"", ""\119"", ""\67"", ""\50"", ""\72"", ""\88"", ""\109"", ""\78"", ""\70"", ""\50"", ""\73"", ""\114"", ""\84"", ""\49"", ""\49"", ""\50"", ""\56"", ""\90"", ""\97"", ""\57"", ""\83"", ""\106"", ""\107"", ""\99"", ""\77"", ""\73"", ""\51"", ""\54"", ""\52"", ""\105"", ""\55"", ""\49"", ""\76"", ""\76"", ""\50"", ""\56"", ""\50"", ""\87"", ""\55"", ""\122"", ""\104"", ""\97"", ""\54"", ""\57"", ""\76"", ""\51"", ""\122"", ""\54"", ""\50"", ""\115"", ""\48"", ""\119"", ""\68"", ""\101"", ""\121"", ""\48"", ""\110"", ""\52"", ""\80"", ""\49"", ""\87"", ""\103"", ""\108"", ""\53"", ""\82"", ""\54"", ""\75"", ""\52"", ""\89"", ""\97"", ""\97"", ""\56"", ""\49"", ""\76"", ""\78"", ""\68"", ""\90"", ""\57"", ""\57"", ""\97"", ""\48"", ""\105"", ""\79"", ""\101"", ""\111"", ""\73"", ""\116"", ""\49"", ""\105"", ""\70"", ""\72"", ""\102"", ""\50"", ""\50"", ""\51"", ""\85"", ""\113"", ""\77"", ""\53"", ""\52"", ""\121"", ""\69"", ""\78"", ""\70"", ""\50"", ""\56"", ""\54"", ""\49"", ""\104"", ""\102"", ""\50"", ""\88"", ""\84"", ""\106"", ""\54"", ""\53"", ""\115"", ""\49"", ""\50"", ""\54"", ""\49"", ""\49"", ""\48"", ""\54"", ""\48"", ""\98"", ""\49"", ""\50"", ""\56"", ""\97"", ""\87"", ""\65"", ""\57"", ""\52"", ""\51"", ""\57"", ""\51"", ""\83"", ""\82"", ""\55"", ""\51"", ""\70"", ""\70"", ""\79"", ""\55"", ""\57"", ""\121"", ""\57"", ""\49"", ""\48"", ""\85"", ""\103"", ""\87"", ""\48"", ""\57"", ""\51"", ""\78"", ""\53"", ""\121"", ""\71"", ""\107"", ""\87"", ""\51"", ""\81"", ""\48"", ""\50"", ""\116"", ""\97"", ""\51"", ""\84"", ""\120"", ""\87"", ""\53"", ""\53"", ""\51"", ""\52"", ""\51"", ""\57"", ""\88"", ""\56"", ""\55"", ""\57"", ""\54"", ""\56"", ""\111"", ""\105"", ""\51"", ""\48"", ""\53"", ""\54"", ""\65"", ""\57"", ""\89"", ""\54"", ""\54"", ""\79"", ""\56"", ""\108"", ""\81"", ""\57"", ""\77"", ""\122"", ""\88"", ""\51"", ""\56"", ""\66"", ""\56"", ""\105"", ""\85"", ""\49"", ""\117"", ""\50"", ""\118"", ""\109"", ""\110"", ""\48"", ""\122"", ""\90"", ""\48"", ""\70"", ""\83"", ""\74"", ""\75"", ""\109"", ""\69"", ""\109"", ""\48"", ""\51"", ""\107"", ""\112"", ""\83"", ""\56"", ""\51"", ""\56"", ""\68"", ""\48"", ""\48"", ""\101"", ""\116"", ""\76"", ""\51"", ""\57"", ""\103"", ""\76"", ""\79"", ""\49"", ""\82"", ""\54"", ""\51"", ""\49"", ""\51"", ""\69"", ""\67"", ""\70"", ""\51"", ""\54"", ""\56"", ""\54"", ""\48"", ""\121"", ""\81"", ""\85"", ""\113"", ""\113"", ""\50"", ""\57"", ""\57"", ""\121"", ""\79"", ""\51"", ""\51"", ""\86"", ""\56"", ""\50"", ""\72"", ""\72"", ""\50"", ""\98"", ""\48"", ""\68"", ""\51"", ""\53"", ""\88"", ""\55"", ""\49"", ""\70"", ""\55"", ""\55"", ""\55"", ""\54"", ""\53"", ""\101"", ""\69"", ""\113"", ""\57"", ""\54"", ""\68"", ""\85"", ""\50"", ""\51"", ""\122"", ""\122"", ""\103"", ""\52"", ""\53"", ""\110"", ""\109"", ""\56"", ""\55"", ""\55"", ""\75"", ""\101"", ""\57"", ""\76"", ""\70"", ""\48"", ""\99"", ""\53"", ""\53"", ""\75"", ""\56"", ""\56"", ""\80"", ""\54"", ""\51"", ""\79"", ""\108"", ""\67"", ""\108"", ""\55"", ""\57"", ""\49"", ""\99"", ""\119"", ""\56"", ""\53"", ""\119"", ""\72"", ""\51"", ""\74"", ""\55"", ""\50"", ""\56"", ""\119"", ""\90"", ""\86"", ""\116"", ""\88"", ""\49"", ""\56"", ""\118"", ""\115"", ""\53"", ""\110"", ""\104"", ""\53"", ""\53"", ""\50"", ""\67"", ""\52"", ""\76"", ""\55"", ""\71"", ""\65"", ""\115"", ""\68"", ""\49"", ""\109"", ""\54"", ""\49"", ""\56"", ""\115"", ""\102"", ""\115"", ""\48"", ""\56"", ""\69"", ""\116"", ""\48"", ""\56"", ""\115"", ""\49"", ""\54"", ""\74"", ""\55"", ""\84"", ""\56"", ""\48"", ""\101"", ""\56"", ""\54"", ""\51"", ""\55"", ""\66"", ""\52"", ""\90"", ""\122"", ""\89"", ""\115"", ""\51"", ""\57"", ""\75"", ""\51"", ""\57"", ""\52"", ""\55"", ""\55"", ""\108"", ""\54"", ""\56"", ""\84"", ""\116"", ""\79"", ""\89"", ""\86"", ""\105"", ""\114"", ""\57"", ""\68"", ""\101"", ""\57"", ""\57"", ""\77"", ""\49"", ""\100"", ""\56"", ""\105"", ""\56"", ""\105"", ""\51"", ""\65"", ""\50"", ""\52"", ""\49"", ""\121"", ""\56"", ""\57"", ""\50"", ""\50"", ""\56"", ""\52"", ""\49"", ""\56"", ""\88"", ""\103"", ""\50"", ""\116"", ""\53"", ""\107"", ""\51"", ""\48"", ""\53"", ""\48"", ""\55"", ""\117"", ""\84"", ""\101"", ""\121"", ""\119"", ""\77"", ""\118"", ""\122"", ""\118"", ""\57"", ""\57"", ""\48"", ""\106"", ""\78"", ""\56"", ""\56"", ""\54"", ""\97"", ""\49"", ""\85"", ""\85"", ""\48"", ""\85"", ""\122"", ""\68"", ""\76"", ""\66"", ""\51"", ""\54"", ""\55"", ""\69"", ""\51"", ""\53"", ""\79"", ""\53"", ""\50"", ""\74"", ""\87"", ""\104"", ""\112"", ""\55"", ""\52"", ""\55"", ""\107"", ""\49"", ""\120"", ""\80"", ""\86"", ""\50"", ""\102"", ""\55"", ""\118"", ""\72"", ""\51"", ""\116"", ""\105"", ""\48"", ""\57"", ""\53"", ""\54"", ""\73"", ""\51"", ""\73"", ""\57"", ""\103"", ""\108"", ""\84"", ""\82"", ""\103"", ""\121"", ""\112"", ""\114"", ""\57"", ""\56"", ""\54"", ""\103"", ""\107"", ""\55"", ""\105"", ""\68"", ""\48"", ""\48"", ""\49"", ""\82"", ""\107"", ""\117"", ""\111"", ""\67"", ""\105"", ""\72"", ""\53"", ""\55"", ""\48"", ""\85"", ""\52"", ""\53"", ""\48"", ""\48"", ""\110"", ""\52"", ""\50"", ""\89"", ""\54"", ""\116"", ""\48"", ""\50"", ""\48"", ""\122"", ""\77"", ""\85"", ""\66"", ""\57"", ""\66"", ""\118"", ""\73"", ""\50"", ""\50"", ""\83"", ""\56"", ""\88"", ""\80"", ""\53"", ""\56"", ""\65"", ""\51"", ""\57"", ""\52"", ""\71"", ""\50"", ""\113"", ""\107"", ""\56"", ""\69"", ""\56"", ""\51"", ""\49"", ""\51"", ""\54"", ""\51"", ""\112"", ""\90"", ""\106"", ""\52"", ""\73"", ""\87"", ""\49"", ""\55"", ""\115"", ""\53"", ""\82"", ""\52"", ""\53"", ""\119"", ""\105"", ""\106"", ""\84"", ""\80"", ""\54"", ""\53"", ""\115"", ""\48"", ""\121"", ""\118"", ""\106"", ""\107"", ""\54"", ""\73"", ""\57"", ""\56"", ""\56"", ""\57"", ""\51"", ""\112"", ""\122"", ""\57"", ""\108"", ""\73"", ""\121"", ""\57"", ""\55"", ""\83"", ""\51"", ""\115"", ""\49"", ""\48"", ""\115"", ""\54"", ""\50"", ""\51"", ""\49"", ""\57"", ""\53"", ""\51"", ""\56"", ""\97"", ""\56"", ""\56"", ""\78"", ""\52"", ""\65"", ""\70"", ""\52"", ""\111"", ""\54"", ""\79"", ""\83"", ""\50"", ""\54"", ""\111"", ""\113"", ""\101"", ""\57"", ""\66"", ""\84"", ""\57"", ""\54"", ""\113"", ""\99"", ""\48"", ""\48"", ""\53"", ""\69"", ""\50"", ""\54"", ""\50"", ""\48"", ""\51"", ""\55"", ""\114"", ""\97"", ""\57"", ""\56"", ""\83"", ""\74"", ""\55"", ""\50"", ""\53"", ""\55"", ""\89"", ""\48"", ""\117"", ""\51"", ""\56"", ""\110"", ""\57"", ""\83"", ""\54"", ""\49"", ""\50"", ""\49"", ""\54"", ""\49"", ""\50"", ""\52"", ""\79"", ""\106"", ""\51"", ""\89"", ""\66"", ""\89"", ""\55"", ""\56"", ""\55"", ""\104"", ""\110"", ""\90"", ""\100"", ""\73"", ""\57"", ""\49"", ""\75"", ""\56"", ""\66"", ""\75"", ""\100"", ""\54"", ""\109"", ""\51"", ""\52"", ""\51"", ""\49"", ""\90"", ""\104"", ""\73"", ""\54"", ""\50"", ""\51"", ""\90"", ""\53"", ""\50"", ""\52"", ""\55"", ""\119"", ""\73"", ""\99"", ""\76"", ""\51"", ""\72"", ""\113"", ""\48"", ""\83"", ""\57"", ""\51"", ""\51"", ""\52"", ""\49"", ""\52"", ""\85"", ""\49"", ""\55"", ""\112"", ""\56"", ""\57"", ""\51"", ""\84"", ""\108"", ""\49"", ""\120"", ""\70"", ""\48"", ""\109"", ""\52"", ""\53"", ""\72"", ""\80"", ""\52"", ""\49"", ""\53"", ""\52"", ""\57"", ""\101"", ""\51"", ""\77"", ""\56"", ""\50"", ""\55"", ""\101"", ""\50"", ""\118"", ""\79"", ""\87"", ""\57"", ""\114"", ""\52"", ""\54"", ""\66"", ""\100"", ""\48"", ""\77"", ""\70"", ""\90"", ""\48"", ""\53"", ""\48"", ""\56"", ""\51"", ""\48"", ""\108"", ""\101"", ""\54"", ""\56"", ""\113"", ""\69"", ""\54"", ""\57"", ""\50"", ""\98"", ""\48"", ""\49"", ""\87"", ""\113"", ""\110"", ""\55"", ""\76"", ""\86"", ""\56"", ""\99"", ""\52"", ""\54"", ""\68"", ""\117"", ""\85"", ""\71"", ""\56"", ""\55"", ""\115"", ""\52"", ""\115"", ""\73"", ""\79"", ""\57"", ""\107"", ""\78"", ""\111"", ""\53"", ""\87"", ""\53"", ""\54"", ""\51"", ""\114"", ""\52"", ""\75"", ""\51"", ""\76"", ""\54"", ""\50"", ""\51"", ""\48"", ""\53"", ""\82"", ""\49"", ""\48"", ""\118"", ""\48"", ""\74"", ""\69"", ""\109"", ""\109"", ""\55"", ""\55"", ""\57"", ""\121"", ""\50"", ""\56"", ""\83"", ""\101"", ""\99"", ""\55"", ""\48"", ""\49"", ""\121"", ""\54"", ""\75"", ""\52"", ""\52"", ""\97"", ""\53"", ""\102"", ""\56"", ""\76"", ""\79"", ""\57"", ""\67"", ""\50"", ""\103"", ""\118"", ""\90"", ""\52"", ""\120"", ""\118"", ""\49"", ""\119"", ""\67"", ""\52"", ""\50"", ""\115"", ""\73"", ""\53"", ""\89"", ""\84"", ""\51"", ""\102"", ""\55"", ""\51"", ""\73"", ""\85"", ""\49"", ""\111"", ""\109"", ""\71"", ""\80"", ""\55"", ""\72"", ""\51"", ""\49"", ""\54"", ""\52"", ""\48"", ""\100"", ""\54"", ""\71"", ""\84"", ""\83"", ""\53"", ""\106"", ""\51"", ""\97"", ""\53"", ""\49"", ""\101"", ""\65"", ""\48"", ""\73"", ""\83"", ""\89"", ""\52"", ""\121"", ""\83"", ""\54"", ""\98"", ""\49"", ""\53"", ""\118"", ""\53"", ""\120"", ""\48"", ""\51"", ""\78"", ""\50"", ""\112"", ""\52"", ""\88"", ""\98"", ""\110"", ""\67"", ""\74"", ""\103"", ""\66"", ""\53"", ""\97"", ""\56"", ""\112"", ""\122"", ""\57"", ""\49"", ""\74"", ""\50"", ""\48"", ""\85"", ""\100"", ""\50"", ""\56"", ""\109"", ""\98"", ""\57"", ""\71"", ""\57"", ""\116"", ""\56"", ""\51"", ""\51"", ""\113"", ""\53"", ""\81"", ""\107"", ""\116"", ""\122"", ""\73"", ""\97"", ""\48"", ""\57"", ""\98"", ""\119"", ""\89"", ""\109"", ""\84"", ""\117"", ""\51"", ""\49"", ""\78"", ""\98"", ""\109"", ""\77"", ""\120"", ""\71"", ""\85"", ""\84"", ""\86"", ""\83"", ""\56"", ""\53"", ""\57"", ""\49"", ""\54"", ""\100"", ""\50"", ""\50"", ""\97"", ""\51"", ""\120"", ""\53"", ""\108"", ""\76"", ""\51"", ""\54"", ""\48"", ""\119"", ""\56"", ""\100"", ""\79"", ""\48"", ""\67"", ""\115"", ""\65"", ""\65"", ""\82"", ""\56"", ""\55"", ""\53"", ""\83"", ""\51"", ""\54"", ""\51"", ""\57"", ""\69"", ""\81"", ""\50"", ""\55"", ""\52"", ""\102"", ""\121"", ""\49"", ""\79"", ""\74"", ""\77"", ""\107"", ""\66"", ""\104"", ""\105"", ""\49"", ""\51"", ""\66"", ""\71"", ""\117"", ""\82"", ""\113"", ""\51"", ""\50"", ""\103"", ""\56"", ""\51"", ""\105"", ""\49"", ""\54"", ""\101"", ""\53"", ""\71"", ""\120"", ""\81"", ""\79"", ""\78"", ""\55"", ""\111"", ""\52"", ""\112"", ""\48"", ""\97"", ""\111"", ""\71"", ""\89"", ""\49"", ""\48"", ""\51"", ""\48"", ""\112"", ""\69"", ""\115"", ""\100"", ""\89"", ""\114"", ""\53"", ""\48"", ""\49"", ""\56"", ""\86"", ""\90"", ""\89"", ""\112"", ""\56"", ""\55"", ""\48"", ""\68"", ""\72"", ""\48"", ""\52"", ""\66"", ""\88"", ""\52"", ""\55"", ""\88"", ""\108"", ""\50"", ""\55"", ""\118"", ""\75"", ""\57"", ""\53"", ""\90"", ""\56"", ""\118"", ""\54"", ""\85"", ""\71"", ""\83"", ""\49"", ""\109"", ""\119"", ""\55"", ""\52"", ""\101"", ""\74"", ""\101"", ""\56"", ""\52"", ""\90"", ""\53"", ""\48"", ""\55"", ""\117"", ""\50"", ""\83"", ""\117"", ""\113"", ""\99"", ""\77"", ""\70"", ""\116"", ""\55"", ""\114"", ""\53"", ""\109"", ""\56"", ""\57"", ""\54"", ""\102"", ""\84"", ""\48"", ""\53"", ""\71"", ""\53"", ""\55"", ""\99"", ""\83"", ""\113"", ""\87"", ""\84"", ""\54"", ""\69"", ""\52"", ""\87"", ""\48"", ""\85"", ""\55"", ""\54"", ""\53"", ""\102"", ""\110"", ""\105"", ""\72"", ""\57"", ""\69"", ""\52"", ""\56"", ""\71"", ""\87"", ""\51"", ""\49"", ""\77"", ""\54"", ""\73"", ""\68"", ""\55"", ""\71"", ""\54"", ""\56"", ""\109"", ""\97"", ""\71"", ""\108"", ""\88"", ""\103"", ""\48"", ""\54"", ""\53"", ""\54"", ""\113"", ""\73"", ""\117"", ""\77"", ""\50"", ""\86"", ""\51"", ""\113"", ""\76"", ""\56"", ""\101"", ""\78"", ""\109"", ""\56"", ""\52"", ""\80"", ""\88"", ""\53"", ""\48"", ""\53"", ""\98"", ""\52"", ""\48"", ""\53"", ""\70"", ""\48"", ""\49"", ""\54"", ""\53"", ""\88"", ""\72"", ""\48"", ""\55"", ""\110"", ""\82"", ""\99"", ""\51"", ""\67"", ""\70"", ""\85"", ""\102"", ""\55"", ""\115"", ""\56"", ""\51"", ""\55"", ""\84"", ""\81"", ""\53"", ""\54"", ""\114"", ""\52"", ""\121"", ""\70"", ""\69"", ""\109"", ""\56"", ""\75"", ""\49"", ""\97"", ""\99"", ""\77"", ""\51"", ""\77"", ""\57"", ""\120"", ""\54"", ""\105"", ""\55"", ""\113"", ""\100"", ""\53"", ""\51"", ""\73"", ""\100"", ""\49"", ""\52"", ""\89"", ""\72"", ""\88"", ""\122"", ""\51"", ""\77"", ""\85"", ""\57"", ""\105"", ""\55"", ""\52"", ""\82"", ""\48"", ""\103"", ""\112"", ""\54"", ""\117"", ""\83"", ""\48"", ""\57"", ""\55"", ""\113"", ""\71"", ""\48"", ""\77"", ""\49"", ""\75"", ""\83"", ""\112"", ""\68"", ""\54"", ""\56"", ""\108"", ""\70"", ""\54"", ""\82"", ""\65"", ""\55"", ""\49"", ""\68"", ""\115"", ""\82"", ""\55"", ""\101"", ""\104"", ""\85"", ""\98"", ""\54"", ""\65"", ""\102"", ""\55"", ""\118"", ""\48"", ""\103"", ""\52"", ""\54"", ""\50"", ""\54"", ""\52"", ""\90"", ""\50"", ""\50"", ""\119"", ""\116"", ""\109"", ""\51"", ""\76"", ""\54"", ""\82"", ""\122"", ""\56"", ""\49"", ""\54"", ""\53"", ""\81"", ""\105"", ""\51"", ""\51"", ""\106"", ""\100"", ""\50"", ""\49"", ""\50"", ""\113"", ""\83"", ""\52"", ""\106"", ""\49"", ""\115"", ""\53"", ""\73"", ""\84"", ""\89"", ""\106"", ""\53"", ""\49"", ""\49"", ""\57"", ""\89"", ""\55"", ""\48"", ""\118"", ""\55"", ""\89"", ""\56"", ""\56"", ""\55"", ""\99"", ""\83"", ""\106"", ""\56"", ""\120"", ""\53"", ""\54"", ""\88"", ""\76"", ""\99"", ""\50"", ""\50"", ""\67"", ""\79"", ""\51"", ""\50"", ""\51"", ""\48"", ""\57"", ""\113"", ""\55"", ""\48"", ""\74"", ""\69"", ""\50"", ""\55"", ""\55"", ""\121"", ""\55"", ""\73"", ""\48"", ""\56"", ""\86"", ""\49"", ""\113"", ""\54"", ""\49"", ""\55"", ""\52"", ""\51"", ""\116"", ""\50"", ""\48"", ""\66"", ""\99"", ""\72"", ""\57"", ""\112"", ""\54"", ""\49"", ""\73"", ""\52"", ""\53"", ""\109"", ""\51"", ""\117"", ""\52"", ""\53"", ""\49"", ""\88"", ""\53"", ""\82"", ""\107"", ""\104"", ""\112"", ""\82"", ""\53"", ""\51"", ""\111"", ""\48"", ""\122"", ""\115"", ""\48"", ""\52"", ""\55"", ""\99"", ""\52"", ""\53"", ""\48"", ""\85"", ""\79"", ""\84"", ""\48"", ""\80"", ""\51"", ""\85"", ""\51"", ""\50"", ""\57"", ""\114"", ""\113"", ""\112"", ""\67"", ""\54"", ""\49"", ""\55"", ""\116"", ""\51"", ""\68"", ""\56"", ""\55"", ""\68"", ""\116"", ""\50"", ""\97"", ""\51"", ""\49"", ""\51"", ""\84"", ""\111"", ""\48"", ""\117"", ""\85"", ""\103"", ""\57"", ""\55"", ""\101"", ""\57"", ""\82"", ""\53"", ""\49"", ""\54"", ""\50"", ""\57"", ""\54"", ""\50"", ""\70"", ""\49"", ""\81"", ""\51"", ""\110"", ""\73"", ""\55"", ""\66"", ""\52"", ""\54"", ""\70"", ""\55"", ""\55"", ""\48"", ""\56"", ""\104"", ""\57"", ""\57"", ""\53"", ""\121"", ""\106"", ""\49"", ""\112"", ""\55"", ""\116"", ""\104"", ""\52"", ""\56"", ""\54"", ""\53"", ""\112"", ""\52"", ""\75"", ""\113"", ""\55"", ""\102"", ""\89"", ""\90"", ""\107"", ""\55"", ""\51"", ""\51"", ""\112"", ""\77"", ""\51"", ""\55"", ""\51"", ""\115"", ""\100"", ""\50"", ""\48"", ""\55"", ""\57"", ""\106"", ""\110"", ""\110"", ""\51"", ""\53"", ""\53"", ""\66"", ""\117"", ""\48"", ""\57"", ""\68"", ""\122"", ""\109"", ""\119"", ""\50"", ""\49"", ""\50"", ""\90"", ""\53"", ""\57"", ""\75"", ""\55"", ""\50"", ""\50"", ""\70"", ""\82"", ""\55"", ""\86"", ""\51"", ""\90"", ""\56"", ""\109"", ""\55"", ""\52"", ""\50"", ""\75"", ""\111"", ""\118"", ""\67"", ""\53"", ""\88"", ""\50"", ""\81"", ""\111"", ""\52"", ""\52"", ""\65"", ""\80"", ""\51"", ""\85"", ""\49"", ""\55"", ""\56"", ""\54"", ""\51"", ""\76"", ""\75"", ""\52"", ""\99"", ""\110"", ""\105"", ""\81"", ""\55"", ""\88"", ""\65"", ""\79"", ""\118"", ""\86"", ""\48"", ""\55"", ""\85"", ""\51"", ""\106"", ""\49"", ""\71"", ""\57"", ""\54"", ""\50"", ""\51"", ""\69"", ""\77"", ""\49"", ""\51"", ""\111"", ""\49"", ""\86"", ""\105"", ""\99"", ""\57"", ""\84"", ""\102"", ""\85"", ""\53"", ""\55"", ""\108"", ""\57"", ""\53"", ""\113"", ""\113"", ""\48"", ""\50"", ""\53"", ""\54"", ""\56"", ""\120"", ""\86"", ""\86"", ""\55"", ""\54"", ""\50"", ""\81"", ""\111"", ""\100"", ""\50"", ""\67"", ""\79"", ""\106"", ""\51"", ""\74"", ""\56"", ""\70"", ""\57"", ""\115"", ""\53"", ""\51"", ""\113"", ""\51"", ""\119"", ""\81"", ""\80"", ""\48"", ""\108"", ""\90"", ""\52"", ""\48"", ""\51"", ""\81"", ""\54"", ""\74"", ""\86"", ""\53"", ""\106"", ""\54"", ""\74"", ""\53"", ""\54"", ""\51"", ""\118"", ""\57"", ""\48"", ""\113"", ""\87"", ""\48"", ""\70"", ""\109"", ""\71"", ""\53"", ""\122"", ""\100"", ""\52"", ""\55"", ""\98"", ""\120"", ""\76"", ""\118"", ""\119"", ""\70"", ""\55"", ""\88"", ""\107"", ""\67"", ""\54"", ""\55"", ""\116"", ""\100"", ""\116"", ""\112"", ""\65"", ""\113"", ""\90"", ""\54"", ""\53"", ""\88"", ""\113"", ""\73"", ""\56"", ""\54"", ""\54"", ""\109"", ""\51"", ""\56"", ""\83"", ""\49"", ""\120"", ""\89"", ""\55"", ""\105"", ""\50"", ""\80"", ""\50"", ""\76"", ""\72"", ""\68"", ""\70"", ""\57"", ""\120"", ""\100"", ""\54"", ""\71"", ""\120"", ""\54"", ""\56"", ""\89"", ""\122"", ""\49"", ""\103"", ""\75"", ""\53"", ""\55"", ""\75"", ""\57"", ""\110"", ""\53"", ""\115"", ""\83"", ""\116"", ""\114"", ""\54"", ""\103"", ""\53"", ""\54"", ""\77"", ""\71"", ""\112"", ""\56"", ""\115"", ""\56"", ""\55"", ""\52"", ""\119"", ""\98"", ""\70"", ""\103"", ""\49"", ""\78"", ""\52"", ""\117"", ""\85"", ""\116"", ""\102"", ""\49"", ""\52"", ""\88"", ""\48"", ""\107"", ""\80"", ""\49"", ""\74"", ""\48"", ""\82"", ""\51"", ""\84"", ""\79"", ""\105"", ""\57"", ""\68"", ""\89"", ""\52"", ""\51"", ""\57"", ""\68"", ""\71"", ""\50"", ""\84"", ""\52"", ""\76"", ""\52"", ""\81"", ""\110"", ""\54"", ""\52"", ""\119"", ""\49"", ""\68"", ""\72"", ""\53"", ""\117"", ""\101"", ""\56"", ""\122"", ""\105"", ""\78"", ""\50"", ""\102"", ""\57"", ""\68"", ""\48"", ""\52"", ""\50"", ""\49"", ""\71"", ""\81"", ""\52"", ""\48"", ""\55"", ""\54"", ""\48"", ""\54"", ""\76"", ""\66"", ""\55"", ""\114"", ""\49"", ""\106"", ""\103"", ""\119"", ""\73"", ""\48"", ""\120"", ""\118"", ""\51"", ""\103"", ""\89"", ""\76"", ""\52"", ""\49"", ""\53"", ""\52"", ""\79"", ""\99"", ""\103"", ""\87"", ""\57"", ""\69"", ""\51"", ""\65"", ""\66"", ""\49"", ""\48"", ""\87"", ""\52"", ""\117"", ""\111"", ""\109"", ""\73"", ""\108"", ""\77"", ""\66"", ""\88"", ""\55"", ""\56"", ""\77"", ""\49"", ""\81"", ""\99"", ""\97"", ""\54"", ""\65"", ""\66"", ""\103"", ""\56"", ""\53"", ""\54"", ""\115"", ""\55"", ""\53"", ""\71"", ""\110"", ""\51"", ""\78"", ""\54"", ""\48"", ""\57"", ""\57"", ""\49"", ""\78"", ""\66"", ""\57"", ""\52"", ""\53"", ""\57"", ""\55"", ""\106"", ""\104"", ""\57"", ""\119"", ""\49"", ""\118"", ""\65"", ""\54"", ""\73"", ""\109"", ""\66"", ""\57"", ""\48"", ""\48"", ""\71"", ""\72"", ""\54"", ""\55"", ""\54"", ""\48"", ""\51"", ""\105"", ""\54"", ""\72"", ""\49"", ""\115"", ""\116"", ""\57"", ""\113"", ""\52"", ""\55"", ""\72"", ""\66"", ""\118"", ""\54"", ""\115"", ""\80"", ""\107"", ""\83"", ""\65"", ""\120"", ""\102"", ""\56"", ""\57"", ""\118"", ""\55"", ""\118"", ""\51"", ""\56"", ""\56"", ""\52"", ""\103"", ""\54"", ""\56"", ""\112"", ""\51"", ""\50"", ""\56"", ""\53"", ""\82"", ""\55"", ""\109"", ""\76"", ""\78"", ""\102"", ""\118"", ""\110"", ""\54"", ""\50"", ""\54"", ""\75"", ""\100"", ""\84"", ""\52"", ""\54"", ""\113"", ""\70"", ""\50"", ""\55"", ""\97"", ""\50"", ""\122"", ""\49"", ""\107"", ""\72"", ""\48"", ""\68"", ""\50"", ""\54"", ""\114"", ""\76"", ""\57"", ""\106"", ""\52"", ""\53"", ""\55"", ""\68"", ""\57"", ""\50"", ""\82"", ""\55"", ""\49"", ""\49"", ""\51"", ""\52"", ""\77"", ""\55"", ""\53"", ""\110"", ""\52"", ""\121"", ""\54"", ""\56"", ""\52"", ""\90"", ""\57"", ""\84"", ""\68"", ""\52"", ""\51"", ""\54"", ""\105"", ""\88"", ""\98"", ""\73"", ""\71"", ""\57"", ""\79"", ""\89"", ""\56"", ""\114"", ""\74"", ""\51"", ""\70"", ""\77"", ""\51"", ""\55"", ""\55"", ""\115"", ""\55"", ""\54"", ""\90"", ""\53"", ""\77"", ""\53"", ""\89"", ""\53"", ""\119"", ""\108"", ""\87"", ""\114"", ""\78"", ""\55"", ""\51"", ""\68"", ""\54"", ""\87"", ""\51"", ""\65"", ""\49"", ""\51"", ""\52"", ""\71"", ""\53"", ""\111"", ""\53"", ""\73"", ""\57"", ""\49"", ""\50"", ""\122"", ""\54"", ""\98"", ""\76"", ""\79"", ""\50"", ""\56"", ""\54"", ""\56"", ""\100"", ""\49"", ""\114"", ""\118"", ""\57"", ""\57"", ""\55"", ""\89"", ""\49"", ""\48"", ""\48"", ""\117"", ""\50"", ""\56"", ""\53"", ""\53"", ""\89"", ""\66"", ""\119"", ""\51"", ""\115"", ""\51"", ""\117"", ""\57"", ""\102"", ""\49"", ""\54"", ""\48"", ""\110"", ""\81"", ""\51"", ""\106"", ""\55"", ""\48"", ""\110"", ""\69"", ""\67"", ""\99"", ""\54"", ""\56"", ""\55"", ""\48"", ""\49"", ""\49"", ""\117"", ""\52"", ""\55"", ""\66"", ""\52"", ""\50"", ""\122"", ""\55"", ""\51"", ""\80"", ""\55"", ""\49"", ""\53"", ""\49"", ""\56"", ""\53"", ""\102"", ""\119"", ""\109"", ""\55"", ""\53"", ""\77"", ""\54"", ""\77"", ""\75"", ""\50"", ""\52"", ""\81"", ""\53"", ""\114"", ""\71"", ""\83"", ""\55"", ""\102"", ""\55"", ""\52"", ""\119"", ""\84"", ""\115"", ""\53"", ""\89"", ""\75"", ""\118"", ""\57"", ""\78"", ""\50"", ""\54"", ""\56"", ""\53"", ""\56"", ""\48"", ""\55"", ""\79"", ""\120"", ""\89"", ""\57"", ""\82"", ""\110"", ""\49"", ""\57"", ""\73"", ""\100"", ""\86"", ""\56"", ""\48"", ""\57"", ""\103"", ""\67"", ""\88"", ""\104"", ""\107"", ""\78"", ""\66"", ""\51"", ""\51"", ""\111"", ""\99"", ""\54"", ""\54"", ""\86"", ""\102"", ""\77"", ""\54"", ""\68"", ""\77"", ""\65"", ""\101"", ""\57"", ""\51"", ""\52"", ""\53"", ""\53"", ""\57"", ""\54"", ""\110"", ""\110"", ""\52"", ""\119"", ""\121"", ""\72"", ""\50"", ""\51"", ""\55"", ""\49"", ""\55"", ""\121"", ""\104"", ""\86"", ""\68"", ""\75"", ""\119"", ""\105"", ""\51"", ""\50"", ""\54"", ""\85"", ""\84"", ""\52"", ""\119"", ""\83"", ""\70"", ""\49"", ""\120"", ""\87"", ""\73"", ""\110"", ""\53"", ""\101"", ""\102"", ""\56"", ""\88"", ""\50"", ""\81"", ""\72"", ""\120"", ""\84"", ""\55"", ""\81"", ""\75"", ""\57"", ""\117"", ""\49"", ""\48"", ""\56"", ""\55"", ""\119"", ""\52"", ""\107"", ""\122"", ""\49"", ""\52"", ""\76"", ""\107"", ""\77"", ""\50"", ""\116"", ""\51"", ""\111"", ""\84"", ""\53"", ""\52"", ""\101"", ""\87"", ""\84"", ""\73"", ""\50"", ""\49"", ""\53"", ""\56"", ""\67"", ""\53"", ""\71"", ""\54"", ""\51"", ""\48"", ""\55"", ""\50"", ""\109"", ""\50"", ""\110"", ""\112"", ""\70"", ""\49"", ""\81"", ""\49"", ""\121"", ""\106"", ""\55"", ""\48"", ""\55"", ""\104"", ""\49"", ""\109"", ""\50"", ""\48"", ""\109"", ""\48"", ""\48"", ""\51"", ""\52"", ""\53"", ""\53"", ""\66"", ""\65"", ""\49"", ""\101"", ""\116"", ""\81"", ""\51"", ""\75"", ""\104"", ""\70"", ""\82"", ""\48"", ""\111"", ""\52"", ""\67"", ""\54"", ""\116"", ""\57"", ""\50"", ""\51"", ""\109"", ""\85"", ""\54"", ""\90"", ""\53"", ""\51"", ""\54"", ""\71"", ""\49"", ""\97"", ""\48"", ""\80"", ""\79"", ""\49"", ""\49"", ""\80"", ""\49"", ""\53"", ""\75"", ""\55"", ""\56"", ""\54"", ""\52"", ""\57"", ""\55"", ""\53"", ""\113"", ""\117"", ""\120"", ""\57"", ""\67"", ""\49"", ""\48"", ""\55"", ""\106"", ""\80"", ""\49"", ""\56"", ""\48"", ""\72"", ""\52"", ""\49"", ""\51"", ""\49"", ""\56"", ""\108"", ""\50"", ""\85"", ""\52"", ""\55"", ""\79"", ""\57"", ""\50"", ""\66"", ""\54"", ""\48"", ""\52"", ""\57"", ""\56"", ""\75"", ""\90"", ""\50"", ""\109"", ""\81"", ""\54"", ""\74"", ""\77"", ""\50"", ""\55"", ""\57"", ""\71"", ""\121"", ""\77"", ""\55"", ""\49"", ""\110"", ""\72"", ""\77"", ""\76"", ""\50"", ""\53"", ""\55"", ""\106"", ""\73"", ""\89"", ""\109"", ""\48"", ""\48"", ""\72"", ""\50"", ""\122"", ""\88"", ""\111"", ""\50"", ""\48"", ""\109"", ""\57"", ""\50"", ""\87"", ""\86"", ""\84"", ""\51"", ""\104"", ""\90"", ""\119"", ""\66"", ""\84"", ""\70"", ""\51"", ""\52"", ""\55"", ""\57"", ""\56"", ""\98"", ""\105"", ""\82"", ""\87"", ""\50"", ""\89"", ""\57"", ""\55"", ""\51"", ""\57"", ""\80"", ""\48"", ""\79"", ""\108"", ""\114"", ""\82"", ""\53"", ""\54"", ""\52"", ""\99"", ""\49"", ""\55"", ""\49"", ""\48"", ""\49"", ""\107"", ""\52"", ""\102"", ""\48"", ""\53"", ""\120"", ""\84"", ""\115"", ""\57"", ""\71"", ""\66"", ""\77"", ""\97"", ""\49"", ""\53"", ""\52"", ""\115"", ""\55"", ""\70"", ""\53"", ""\120"", ""\106"", ""\99"", ""\57"", ""\100"", ""\51"", ""\84"", ""\79"", ""\119"", ""\81"", ""\88"", ""\48"", ""\113"", ""\48"", ""\57"", ""\50"", ""\57"", ""\73"", ""\67"", ""\67"", ""\50"", ""\75"", ""\50"", ""\57"", ""\115"", ""\54"", ""\56"", ""\87"", ""\76"", ""\55"", ""\77"", ""\86"", ""\49"", ""\110"", ""\49"", ""\54"", ""\79"", ""\89"", ""\57"", ""\51"", ""\79"", ""\71"", ""\89"", ""\108"", ""\53"", ""\117"", ""\117"", ""\105"", ""\120"", ""\56"", ""\117"", ""\52"", ""\69"", ""\85"", ""\90"", ""\53"", ""\76"", ""\55"", ""\50"", ""\51"", ""\102"", ""\120"", ""\99"", ""\53"", ""\50"", ""\101"", ""\48"", ""\84"", ""\53"", ""\120"", ""\51"", ""\49"", ""\53"", ""\57"", ""\49"", ""\111"", ""\112"", ""\57"", ""\106"", ""\57"", ""\68"", ""\97"", ""\101"", ""\111"", ""\54"", ""\65"", ""\55"", ""\48"", ""\52"", ""\78"", ""\52"", ""\89"", ""\57"", ""\55"", ""\84"", ""\56"", ""\89"", ""\52"", ""\50"", ""\98"", ""\74"", ""\99"", ""\51"", ""\49"", ""\49"", ""\57"", ""\67"", ""\100"", ""\71"", ""\102"", ""\57"", ""\90"", ""\55"", ""\99"", ""\50"", ""\100"", ""\55"", ""\57"", ""\112"", ""\48"", ""\54"", ""\54"", ""\50"", ""\56"", ""\115"", ""\116"", ""\79"", ""\48"", ""\52"", ""\107"", ""\49"", ""\56"", ""\81"", ""\48"", ""\55"", ""\105"", ""\57"", ""\65"", ""\54"", ""\116"", ""\49"", ""\48"", ""\119"", ""\56"", ""\83"", ""\52"", ""\48"", ""\54"", ""\121"", ""\120"", ""\84"", ""\52"", ""\52"", ""\114"", ""\99"", ""\85"", ""\52"", ""\51"", ""\87"", ""\85"", ""\79"", ""\98"", ""\84"", ""\84"", ""\54"", ""\51"", ""\117"", ""\52"", ""\117"", ""\86"", ""\85"", ""\57"", ""\54"", ""\100"", ""\56"", ""\53"", ""\54"", ""\105"", ""\50"", ""\73"", ""\54"", ""\77"", ""\57"", ""\100"", ""\90"", ""\48"", ""\65"", ""\77"", ""\120"", ""\52"", ""\81"", ""\56"", ""\83"", ""\108"", ""\49"", ""\71"", ""\74"", ""\57"", ""\66"", ""\83"", ""\104"", ""\51"", ""\55"", ""\66"", ""\54"", ""\50"", ""\86"", ""\56"", ""\51"", ""\67"", ""\104"", ""\106"", ""\53"", ""\55"", ""\86"", ""\65"", ""\48"", ""\54"", ""\90"", ""\77"", ""\113"", ""\54"", ""\55"", ""\54"", ""\86"", ""\53"", ""\51"", ""\49"", ""\117"", ""\101"", ""\50"", ""\109"", ""\55"", ""\108"", ""\55"", ""\109"", ""\102"", ""\48"", ""\57"", ""\53"", ""\54"", ""\52"", ""\50"", ""\121"", ""\52"", ""\115"", ""\101"", ""\52"", ""\51"", ""\105"", ""\105"", ""\56"", ""\106"", ""\55"", ""\122"", ""\121"", ""\49"", ""\49"", ""\118"", ""\81"", ""\70"", ""\57"", ""\99"", ""\113"", ""\78"", ""\83"", ""\55"", ""\99"", ""\53"", ""\108"", ""\66"", ""\88"", ""\73"", ""\97"", ""\51"", ""\100"", ""\78"", ""\56"", ""\100"", ""\121"", ""\56"", ""\104"", ""\77"", ""\122"", ""\55"", ""\50"", ""\50"", ""\78"", ""\78"", ""\74"", ""\70"", ""\84"", ""\48"", ""\101"", ""\56"", ""\49"", ""\89"", ""\120"", ""\90"", ""\116"", ""\53"", ""\52"", ""\109"", ""\53"", ""\85"", ""\109"", ""\54"", ""\49"", ""\81"", ""\104"", ""\52"", ""\105"", ""\121"", ""\49"", ""\102"", ""\101"", ""\103"", ""\50"", ""\81"", ""\52"", ""\48"", ""\51"", ""\53"", ""\102"", ""\78"", ""\53"", ""\54"", ""\88"", ""\117"", ""\99"", ""\68"", ""\105"", ""\48"", ""\98"", ""\66"", ""\102"", ""\51"", ""\51"", ""\49"", ""\87"", ""\111"", ""\68"", ""\55"", ""\56"", ""\70"", ""\56"", ""\73"", ""\73"", ""\122"", ""\51"", ""\52"", ""\49"", ""\55"", ""\55"", ""\84"", ""\55"", ""\100"", ""\72"", ""\110"", ""\110"", ""\55"", ""\54"", ""\107"", ""\57"", ""\53"", ""\74"", ""\102"", ""\122"", ""\106"", ""\48"", ""\71"", ""\72"", ""\100"", ""\68"", ""\98"", ""\111"", ""\83"", ""\56"", ""\98"", ""\99"", ""\113"", ""\50"", ""\115"", ""\49"", ""\86"", ""\121"", ""\54"", ""\49"", ""\79"", ""\48"", ""\115"", ""\53"", ""\53"", ""\74"", ""\86"", ""\74"", ""\53"", ""\51"", ""\57"", ""\121"", ""\115"", ""\82"", ""\119"", ""\78"", ""\69"", ""\51"", ""\51"", ""\105"", ""\54"", ""\107"", ""\55"", ""\80"", ""\55"", ""\110"", ""\97"", ""\68"", ""\110"", ""\48"", ""\55"", ""\106"", ""\66"", ""\113"", ""\98"", ""\109"", ""\53"", ""\79"", ""\49"", ""\104"", ""\88"", }; local getoutofherescumbagY6gRD86F0wj8D6270 = getoutofherescumbagce435B415b371sH0IiS5d(getoutofherescumbagY6gRD86F0wj8D6270); 
"
7fyGjC7c,Pastebin.ai - #1 pastebin alternative,xxsa,PHP,Friday 3rd of May 2024 09:39:32 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..............
......................"
v3sxbyk2,LCD Button rev_05,pleasedontcode,Arduino,Friday 3rd of May 2024 09:38:36 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: LCD Button
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-03 14:37:09

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The project must control a timer that starts when */
	/* the infrared sensor is in a low active state and */
	/* stops when the sensor returns to a low active */
	/* state. The timer must be displayed on the LCD */
	/* screen. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* The timer state should be handled using a state */
	/* machine. Furthermore, an explicit function called */
	/* 'resetTimer' needs to be implemented to reset the */
	/* counter and state of the state machine. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>	// https://github.com/marcoschwartz/LiquidCrystal_I2C
#include <EasyButton.h>	// https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void resetTimer(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensorInfrared_PushButton_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t display_LCD1602I2C_I2C_PIN_SDA_A4 = A4;
const uint8_t display_LCD1602I2C_I2C_PIN_SCL_A5 = A5;
const uint8_t display_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
LiquidCrystal_I2C lcd(display_LCD1602I2C_I2C_SLAVE_ADDRESS, 16, 2); // Initialize the LCD object with the I2C address, columns, and rows
EasyButton button(sensorInfrared_PushButton_PIN_D2); // Initialize the EasyButton object with the button pin

// Timer variables
unsigned long startTime = 0;
unsigned long elapsedTime = 0;
bool timerRunning = false;

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(sensorInfrared_PushButton_PIN_D2, INPUT_PULLUP);

	lcd.begin(16, 2); // Initialize the LCD with 16 columns and 2 rows
	lcd.backlight(); // Turn on the backlight

	lcd.setCursor(0, 0);
	lcd.print(""Hello, world!"");

	// Add the EasyButton setup code here
	button.begin();
	button.onPressedFor(2000, onPressedForDuration);
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	button.read();

	// Check the infrared sensor state
	if (digitalRead(sensorInfrared_PushButton_PIN_D2) == LOW) {
		if (!timerRunning) {
			startTime = millis();
			timerRunning = true;
		}
		elapsedTime = millis() - startTime;
		lcd.setCursor(0, 1);
		lcd.print(""Timer: "");
		lcd.print(elapsedTime / 1000); // Display elapsed time in seconds
	}
	else {
		resetTimer();
	}
}

// Callback function to be called when the button is pressed.
void onPressedForDuration()
{
	// Code to be executed when the button is pressed for the given duration.
}

// Function to reset the timer and LCD display
void resetTimer()
{
	startTime = 0;
	elapsedTime = 0;
	timerRunning = false;
	lcd.setCursor(0, 1);
	lcd.print(""Timer: 0     ""); // Clear the timer display
}

/* END CODE */"
PyiQD7y7,News May3 24,Newscaster_Ned,Email,Friday 3rd of May 2024 08:53:13 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎h‎e‎r‎e‎ ‎w‎e‎ ‎g‎o‎.‎

'‎T‎r‎y‎ ‎T‎h‎a‎t‎ ‎I‎n‎ ‎a‎ ‎S‎m‎a‎l‎l‎ ‎T‎o‎w‎n‎'‎ ‎C‎o‎-‎S‎o‎n‎g‎w‎r‎i‎t‎e‎r‎ ‎N‎e‎i‎l‎ ‎T‎h‎r‎a‎s‎h‎e‎r‎ ‎T‎a‎l‎k‎s‎ ‎W‎o‎k‎e‎ ‎B‎a‎c‎k‎l‎a‎s‎h‎
O‎s‎c‎a‎r‎-‎W‎i‎n‎n‎e‎r‎ ‎M‎i‎c‎h‎e‎l‎l‎e‎ ‎Y‎e‎o‎h‎ ‎A‎m‎o‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎M‎e‎d‎a‎l‎ ‎o‎f‎ ‎F‎r‎e‎e‎d‎o‎m‎ ‎H‎o‎n‎o‎
A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎T‎r‎y‎ ‎t‎o‎ ‎'‎D‎o‎x‎'‎ ‎U‎C‎L‎A‎ ‎P‎r‎o‎-‎I‎s‎r‎a‎e‎l‎ ‎V‎i‎g‎i‎l‎a‎n‎t‎e‎s‎;‎ ‎M‎i‎s‎t‎a‎k‎e‎n‎ ‎I‎d‎e‎n‎t‎i‎t‎i‎e‎s‎
W‎e‎a‎k‎e‎r‎ ‎T‎h‎a‎n‎ ‎E‎x‎p‎e‎c‎t‎e‎d‎:‎ ‎U‎.‎S‎.‎ ‎H‎i‎r‎i‎n‎g‎ ‎S‎l‎o‎w‎s‎ ‎t‎o‎ ‎1‎7‎5‎,‎0‎0‎0‎ ‎i‎n‎ ‎A‎p‎r‎i‎l‎
F‎r‎e‎n‎c‎h‎ ‎P‎o‎l‎i‎c‎e‎ ‎C‎l‎e‎a‎r‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎S‎t‎u‎d‎e‎n‎t‎ ‎O‎c‎c‎u‎p‎a‎t‎i‎o‎n‎ ‎a‎t‎ ‎P‎a‎r‎i‎s‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎
B‎r‎o‎w‎n‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎C‎a‎v‎e‎s‎ ‎t‎o‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎M‎o‎b‎;‎ ‎J‎e‎w‎i‎s‎h‎ ‎C‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎C‎o‎n‎d‎e‎m‎n‎s‎
U‎n‎v‎e‎i‎l‎e‎d‎:‎ ‎H‎5‎N‎1‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎o‎n‎ ‎t‎o‎ ‎L‎a‎b‎ ‎R‎e‎s‎e‎a‎r‎c‎h‎
R‎e‎p‎o‎r‎t‎:‎ ‎B‎r‎i‎t‎n‎e‎y‎ ‎S‎p‎e‎a‎r‎s‎ ‎'‎H‎o‎m‎e‎ ‎a‎n‎d‎ ‎S‎a‎f‎e‎'‎ ‎A‎f‎t‎e‎r‎ ‎F‎i‎g‎h‎t‎ ‎w‎i‎t‎h‎ ‎B‎o‎y‎f‎r‎i‎e‎n‎d‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
2‎,‎0‎0‎0‎+‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎H‎a‎m‎a‎s‎ ‎Y‎o‎u‎t‎h‎ ‎P‎r‎o‎t‎e‎s‎t‎s‎

4‎3‎ ‎C‎o‎l‎l‎e‎g‎e‎s‎ ‎I‎n‎f‎e‎c‎t‎e‎d‎
P‎o‎l‎i‎c‎e‎ ‎m‎a‎k‎e‎ ‎a‎n‎ ‎a‎r‎r‎e‎s‎t‎ ‎a‎s‎ ‎t‎h‎e‎y‎ ‎f‎a‎c‎e‎-‎o‎f‎f‎ ‎w‎i‎t‎h‎ ‎p‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎ ‎a‎f‎t‎e‎r‎ ‎d‎e‎s‎t‎r‎o‎y‎i‎n‎g‎ ‎p‎a‎r‎t‎
A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎ ‎h‎a‎v‎e‎ ‎r‎o‎c‎k‎e‎d‎ ‎c‎o‎l‎l‎e‎g‎e‎ ‎c‎a‎m‎p‎u‎s‎e‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎i‎n‎ ‎p‎a‎s‎t‎ ‎w‎e‎e‎k‎s‎ ‎a‎n‎d‎ ‎n‎o‎w‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎ ‎a‎r‎r‎e‎s‎t‎ ‎n‎u‎m‎b‎e‎r‎s‎ ‎a‎r‎e‎ ‎r‎i‎s‎i‎n‎g‎ ‎a‎s‎ ‎a‎u‎t‎h‎o‎r‎i‎t‎i‎e‎s‎ ‎t‎r‎y‎ ‎t‎o‎ ‎e‎n‎d‎ ‎t‎h‎e‎ ‎d‎i‎s‎r‎u‎p‎t‎i‎o‎n‎.‎

W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎A‎p‎o‎l‎o‎g‎i‎z‎e‎ ‎f‎o‎r‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎J‎a‎p‎a‎n‎ ‎‘‎X‎e‎n‎o‎p‎h‎o‎b‎i‎c‎’‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎A‎p‎o‎l‎o‎g‎i‎z‎e‎ ‎f‎o‎r‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎J‎a‎p‎a‎n‎ ‎'‎X‎e‎n‎o‎p‎h‎o‎b‎i‎c‎'‎
4‎2‎1‎
A‎r‎i‎z‎o‎n‎a‎ ‎S‎e‎n‎a‎t‎e‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎R‎e‎p‎e‎a‎l‎ ‎1‎8‎6‎4‎ ‎N‎e‎a‎r‎-‎T‎o‎t‎a‎l‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎B‎a‎n‎
A‎r‎i‎z‎o‎n‎a‎ ‎S‎e‎n‎a‎t‎e‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎R‎e‎p‎e‎a‎l‎ ‎1‎8‎6‎4‎ ‎N‎e‎a‎r‎-‎T‎o‎t‎a‎l‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎B‎a‎n‎
8‎2‎9‎
W‎a‎t‎c‎h‎:‎ ‎H‎a‎l‎l‎e‎ ‎B‎e‎r‎r‎y‎ ‎S‎h‎o‎u‎t‎s‎ ‎‘‎I‎ ‎H‎a‎v‎e‎ ‎M‎e‎n‎o‎p‎a‎u‎s‎e‎’‎ ‎o‎n‎ ‎S‎t‎e‎p‎s‎ ‎o‎f‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎
W‎a‎t‎c‎h‎:‎ ‎H‎a‎l‎l‎e‎ ‎B‎e‎r‎r‎y‎ ‎S‎h‎o‎u‎t‎s‎ ‎'‎I‎ ‎H‎a‎v‎e‎ ‎M‎e‎n‎o‎p‎a‎u‎s‎e‎'‎ ‎o‎n‎ ‎S‎t‎e‎p‎s‎ ‎o‎f‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎
1‎,‎5‎8‎6‎
P‎o‎l‎l‎s‎ ‎S‎h‎o‎w‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎’‎s‎ ‎B‎e‎t‎r‎a‎y‎a‎l‎s‎ ‎H‎a‎v‎e‎ ‎F‎u‎e‎l‎e‎d‎ ‎H‎i‎s‎t‎o‎r‎i‎c‎ ‎A‎p‎p‎r‎o‎v‎a‎l‎ ‎P‎l‎u‎m‎m‎e‎t‎i‎n‎g‎ ‎A‎m‎o‎n‎g‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎,‎ ‎S‎
P‎o‎l‎l‎s‎:‎ ‎J‎o‎h‎n‎s‎o‎n‎’‎s‎ ‎B‎e‎t‎r‎a‎y‎a‎l‎ ‎F‎u‎e‎l‎s‎ ‎G‎O‎P‎ ‎A‎p‎p‎r‎o‎v‎a‎l‎ ‎P‎l‎u‎m‎m‎e‎t‎,‎ ‎D‎e‎m‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎S‎u‎r‎g‎e‎
4‎,‎1‎6‎3‎
A‎r‎r‎e‎s‎t‎s‎ ‎H‎i‎t‎ ‎2‎0‎0‎0‎+‎ ‎a‎s‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎s‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎R‎o‎i‎l‎ ‎U‎.‎S‎.‎ ‎C‎a‎m‎p‎u‎s‎e‎s‎
A‎r‎r‎e‎s‎t‎s‎ ‎H‎i‎t‎ ‎2‎0‎0‎0‎+‎ ‎a‎s‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎s‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎R‎o‎i‎l‎ ‎U‎.‎S‎.‎ ‎C‎a‎m‎p‎u‎s‎e‎s‎
1‎,‎4‎4‎9‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎R‎a‎l‎l‎y‎ ‎a‎t‎ ‎U‎C‎L‎A‎ ‎a‎s‎ ‎P‎o‎l‎i‎c‎e‎ ‎P‎r‎e‎p‎a‎r‎e‎ ‎t‎o‎ ‎R‎e‎m‎o‎v‎e‎ ‎E‎n‎c‎a‎m‎p‎m‎e‎n‎t‎
U‎C‎L‎A‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎R‎a‎l‎l‎y‎ ‎a‎s‎ ‎P‎o‎l‎i‎c‎e‎ ‎P‎r‎e‎p‎a‎r‎e‎ ‎t‎o‎ ‎R‎e‎m‎o‎v‎e‎ ‎E‎n‎c‎a‎m‎p‎m‎e‎n‎t‎
3‎,‎7‎2‎7‎
I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎i‎o‎n‎:‎ ‎B‎i‎d‎e‎n‎ ‎E‎x‎e‎c‎u‎t‎i‎v‎e‎ ‎O‎r‎d‎e‎r‎ ‎F‎o‎c‎u‎s‎e‎s‎ ‎o‎n‎ ‎R‎e‎g‎i‎s‎t‎e‎r‎i‎n‎g‎ ‎C‎o‎n‎v‎i‎c‎t‎s‎ ‎t‎o‎ ‎V‎o‎t‎e‎
I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎i‎o‎n‎:‎ ‎B‎i‎d‎e‎n‎ ‎O‎r‎d‎e‎r‎ ‎F‎o‎c‎u‎s‎e‎s‎ ‎o‎n‎ ‎R‎e‎g‎i‎s‎t‎e‎r‎i‎n‎g‎ ‎C‎o‎n‎v‎i‎c‎t‎s‎ ‎t‎o‎ ‎V‎o‎t‎e‎
6‎7‎5‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎S‎e‎e‎k‎ ‎t‎o‎ ‎P‎r‎e‎v‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎f‎r‎o‎m‎ ‎I‎m‎p‎o‎r‎t‎i‎n‎g‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎S‎e‎e‎k‎ ‎t‎o‎ ‎P‎r‎e‎v‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎f‎r‎o‎m‎ ‎I‎m‎p‎o‎r‎t‎i‎n‎g‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎t‎o‎ ‎U‎.‎S‎.‎
8‎,‎2‎1‎9‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎t‎o‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎:‎ ‎Y‎o‎u‎ ‎H‎a‎v‎e‎ ‎F‎a‎i‎l‎e‎d‎,‎ ‎H‎a‎v‎e‎ ‎N‎o‎t‎ ‎F‎o‎r‎c‎e‎d‎ ‎M‎e‎ ‎t‎o‎ ‎R‎e‎c‎o‎n‎s‎i‎d‎e‎r‎ ‎P‎o‎l‎i‎c‎i‎e‎s‎
B‎i‎d‎e‎n‎ ‎t‎o‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎:‎ ‎Y‎o‎u‎ ‎H‎a‎v‎e‎ ‎F‎a‎i‎l‎e‎d‎
3‎,‎0‎8‎5‎
N‎a‎r‎r‎a‎t‎i‎v‎e‎ ‎B‎u‎s‎t‎e‎d‎:‎ ‎C‎o‎l‎o‎n‎i‎a‎l‎i‎s‎m‎ ‎a‎n‎d‎ ‎S‎l‎a‎v‎e‎r‎y‎ ‎D‎i‎d‎ ‎N‎o‎t‎ ‎M‎a‎k‎e‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎E‎m‎p‎i‎r‎e‎ ‎W‎e‎a‎l‎t‎h‎y‎,‎ ‎R‎e‎p‎o‎r‎t‎ ‎F‎i‎n‎d‎s‎
C‎o‎l‎o‎n‎i‎a‎l‎i‎s‎m‎ ‎D‎i‎d‎ ‎N‎o‎t‎ ‎M‎a‎k‎e‎ ‎B‎r‎i‎t‎a‎i‎n‎ ‎W‎e‎a‎l‎t‎h‎y‎,‎ ‎R‎e‎p‎o‎r‎t‎ ‎F‎i‎n‎d‎s‎

Q‎u‎e‎e‎n‎s‎ ‎B‎a‎b‎o‎o‎n‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎i‎n‎ ‎R‎a‎p‎e‎ ‎o‎f‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎H‎e‎r‎ ‎S‎l‎e‎e‎p‎ ‎a‎n‎d‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎ ‎H‎e‎r‎ ‎S‎m‎a‎r‎t‎w‎a‎t‎c‎h‎.‎

W‎h‎a‎t‎ ‎t‎i‎m‎e‎ ‎i‎s‎ ‎i‎t‎?‎ ‎T‎i‎m‎e‎ ‎t‎o‎ ‎r‎a‎p‎e‎,‎ ‎y‎'‎a‎l‎l‎!‎


M‎u‎l‎a‎t‎t‎o‎ ‎N‎e‎g‎r‎o‎ ‎E‎x‎p‎o‎s‎e‎s‎ ‎H‎i‎m‎s‎e‎l‎f‎ ‎t‎o‎ ‎L‎i‎t‎t‎l‎e‎ ‎G‎i‎r‎l‎ ‎i‎n‎ ‎D‎u‎n‎c‎a‎n‎v‎i‎l‎l‎e‎.‎


N‎i‎g‎ ‎B‎i‎t‎c‎h‎ ‎S‎t‎e‎a‎l‎s‎ ‎$‎3‎K‎ ‎i‎n‎ ‎M‎i‎n‎k‎ ‎F‎u‎r‎ ‎C‎o‎a‎t‎s‎ ‎t‎o‎ ‎H‎e‎l‎p‎ ‎P‎a‎y‎ ‎f‎o‎r‎ ‎H‎e‎r‎ ‎H‎e‎r‎o‎i‎n‎e‎ ‎A‎d‎d‎i‎c‎t‎i‎o‎n‎.‎


T‎r‎e‎n‎t‎o‎n‎:‎ ‎N‎e‎g‎r‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎W‎A‎T‎i‎n‎g‎ ‎P‎e‎o‎p‎l‎e‎ ‎M‎o‎r‎e‎ ‎T‎h‎a‎n‎ ‎1‎7‎ ‎T‎i‎m‎e‎s‎.‎


N‎Y‎P‎D‎ ‎R‎e‎-‎A‎r‎r‎e‎s‎t‎s‎ ‎S‎p‎i‎c‎ ‎C‎h‎i‎l‎d‎ ‎M‎o‎l‎e‎s‎t‎e‎r‎ ‎W‎h‎o‎ ‎E‎s‎c‎a‎p‎e‎d‎ ‎C‎o‎p‎s‎.‎


3‎ ‎N‎i‎g‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎C‎o‎p‎s‎ ‎F‎i‎n‎d‎ ‎S‎l‎e‎w‎ ‎o‎f‎ ‎D‎r‎u‎g‎s‎ ‎A‎l‎o‎n‎g‎ ‎w‎i‎t‎h‎ ‎A‎l‎l‎i‎g‎a‎t‎o‎r‎ ‎I‎n‎s‎i‎d‎e‎ ‎C‎h‎e‎s‎t‎e‎r‎ ‎C‎o‎u‎n‎t‎y‎ ‎H‎o‎m‎e‎.‎


P‎e‎n‎n‎s‎y‎l‎v‎a‎n‎i‎a‎:‎ ‎S‎p‎i‎c‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎ ‎D‎r‎u‎g‎s‎ ‎a‎n‎d‎ ‎B‎r‎a‎g‎g‎i‎n‎g‎ ‎A‎b‎o‎u‎t‎ ‎D‎o‎i‎n‎g‎ ‎i‎t‎,‎ ‎""‎E‎l‎ ‎C‎h‎a‎p‎o‎ ‎S‎t‎y‎l‎e‎""‎.‎


1‎1‎ ‎W‎e‎t‎b‎a‎c‎k‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎M‎u‎l‎t‎i‎-‎M‎i‎l‎l‎i‎o‎n‎ ‎D‎o‎l‎l‎a‎r‎ ‎D‎r‎u‎g‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎ ‎S‎c‎h‎e‎m‎e‎ ‎i‎n‎ ‎K‎e‎n‎s‎i‎n‎g‎t‎o‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎7‎2‎°‎
2‎4‎%‎
E‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎ ‎|‎ ‎D‎a‎y‎
8‎1‎°‎
2‎4‎%‎
E‎S‎E‎
1‎2‎
 ‎
m‎p‎h‎
G‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎A‎ ‎s‎t‎r‎a‎y‎ ‎s‎h‎o‎w‎e‎r‎ ‎o‎r‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎H‎i‎g‎h‎ ‎8‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎4‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎0‎9‎ ‎p‎m‎
F‎r‎i‎ ‎0‎3‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎2‎°‎
2‎4‎%‎
E‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎A‎ ‎s‎t‎r‎a‎y‎ ‎s‎h‎o‎w‎e‎r‎ ‎o‎r‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎L‎o‎w‎ ‎7‎2‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
3‎:‎5‎5‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
3‎:‎3‎1‎ ‎p‎m‎
S‎a‎t‎ ‎0‎4‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎8‎°‎
2‎2‎%‎
S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎5‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎0‎°‎
/‎6‎9‎°‎
6‎1‎%‎
E‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎6‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎7‎3‎°‎
5‎2‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎7‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
9‎0‎°‎
/‎7‎2‎°‎
2‎0‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎8‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
9‎3‎°‎
/‎7‎3‎°‎
1‎8‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎3‎°‎
/‎7‎1‎°‎
1‎5‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎0‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎6‎6‎°‎
5‎3‎%‎
N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎0‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎6‎5‎°‎
1‎9‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎3‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎6‎°‎
/‎6‎7‎°‎
3‎4‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎4‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎8‎°‎
2‎2‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎5‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎7‎°‎
/‎6‎6‎°‎
3‎5‎%‎
S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎8‎°‎
2‎4‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎8‎°‎
5‎0‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎H‎e‎m‎o‎g‎l‎o‎b‎i‎n‎.‎ ☢️

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎w‎a‎t‎t‎e‎r‎
T‎w‎i‎t‎t‎e‎r‎ ‎(‎A‎K‎A‎ ‎S‎h‎i‎t‎t‎e‎r‎,‎ ‎A‎K‎A‎ ‎Y‎o‎u‎r‎ ‎a‎c‎c‎o‎u‎n‎t‎ ‎i‎s‎ ‎c‎u‎r‎r‎e‎n‎t‎l‎y‎ ‎s‎u‎s‎p‎e‎n‎d‎e‎d‎.‎ ‎F‎o‎r‎ ‎m‎o‎r‎e‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎,‎ ‎p‎l‎e‎a‎s‎e‎ ‎v‎i‎s‎i‎t‎ ‎S‎u‎s‎p‎e‎n‎d‎e‎d‎ ‎A‎c‎c‎o‎u‎n‎t‎s‎)‎,‎ ‎o‎r‎ ‎a‎s‎ ‎f‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎O‎b‎a‎m‎a‎ ‎c‎a‎l‎l‎e‎d‎ ‎i‎t‎,‎ ‎T‎w‎i‎t‎t‎e‎r‎'‎s‎,‎ ‎i‎s‎ ‎a‎n‎ ‎o‎u‎t‎r‎a‎g‎e‎ ‎m‎a‎c‎h‎i‎n‎e‎ ‎w‎h‎e‎r‎e‎ ‎h‎i‎g‎h‎l‎y‎ ‎s‎e‎n‎s‎i‎t‎i‎v‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎p‎e‎n‎d‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎t‎i‎m‎e‎ ‎s‎o‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎ ‎g‎e‎t‎ ‎o‎f‎f‎e‎n‎d‎e‎d‎ ‎b‎y‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎ ‎a‎n‎d‎ ‎b‎u‎l‎l‎y‎ ‎p‎e‎o‎p‎l‎e‎ ‎i‎n‎t‎o‎ ‎s‎i‎l‎e‎n‎c‎e‎ ‎w‎i‎t‎h‎ ‎d‎e‎a‎t‎h‎ ‎t‎h‎r‎e‎a‎t‎s‎.‎ ‎B‎a‎s‎i‎c‎a‎l‎l‎y‎ ‎i‎t‎'‎s‎ ‎s‎o‎m‎e‎ ‎r‎e‎t‎a‎r‎d‎e‎d‎ ‎w‎e‎b‎s‎i‎t‎e‎ ‎w‎h‎e‎r‎e‎ ‎l‎e‎f‎t‎-‎w‎i‎n‎g‎ ‎n‎o‎n‎b‎i‎n‎a‎r‎y‎ ‎f‎u‎r‎r‎i‎e‎s‎ ‎w‎i‎t‎h‎ ‎n‎o‎ ‎l‎i‎f‎e‎ ‎a‎n‎d‎ ‎b‎l‎a‎c‎k‎ ‎n‎o‎r‎m‎i‎e‎ ‎s‎o‎c‎i‎a‎l‎i‎s‎t‎s‎ ‎c‎o‎m‎e‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎t‎o‎ ‎j‎e‎r‎k‎ ‎o‎f‎f‎ ‎a‎b‎o‎u‎t‎ ‎h‎o‎w‎ ‎m‎u‎c‎h‎ ‎t‎h‎e‎y‎ ‎h‎a‎t‎e‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎a‎l‎l‎ ‎w‎i‎t‎h‎i‎n‎ ‎t‎h‎e‎ ‎l‎i‎m‎i‎t‎s‎ ‎o‎f‎ ‎2‎8‎0‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎.‎ ‎A‎l‎s‎o‎ ‎p‎a‎r‎t‎l‎y‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎T‎r‎h‎u‎m‎p‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎i‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎t‎h‎i‎n‎g‎.‎ ‎T‎h‎e‎y‎ ‎h‎o‎p‎e‎ ‎h‎e‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎i‎c‎e‎,‎ ‎l‎o‎l‎o‎l‎.‎ ‎H‎e‎ ‎w‎o‎n‎'‎t‎.‎

T‎r‎u‎t‎h‎:‎ ‎T‎w‎i‎t‎t‎e‎r‎ ‎i‎s‎ ‎a‎ ‎W‎e‎b‎ ‎2‎.‎0‎ ‎s‎i‎t‎e‎ ‎f‎o‎r‎ ‎f‎a‎g‎s‎/‎d‎y‎k‎e‎s‎,‎ ‎e‎-‎b‎e‎g‎g‎e‎r‎s‎/‎f‎a‎i‎l‎e‎d‎ ‎a‎r‎t‎i‎s‎t‎s‎,‎ ‎p‎r‎e‎t‎e‎e‎n‎s‎ ‎a‎n‎d‎ ‎d‎i‎n‎g‎d‎o‎n‎g‎s‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎t‎o‎o‎ ‎s‎t‎u‎p‎i‎d‎ ‎t‎o‎ ‎u‎s‎e‎ ‎I‎R‎C‎,‎ ‎a‎n‎d‎ ‎n‎e‎e‎d‎ ‎t‎u‎r‎n‎-‎b‎a‎s‎e‎d‎ ‎c‎h‎a‎t‎ ‎t‎o‎ ‎p‎l‎a‎y‎ ‎o‎p‎p‎r‎e‎s‎s‎i‎o‎n‎ ‎o‎l‎y‎m‎p‎i‎c‎s‎ ‎o‎n‎.‎ ‎T‎y‎p‎i‎c‎a‎l‎ ‎T‎w‎i‎t‎t‎e‎r‎ ‎u‎s‎e‎r‎s‎ ‎s‎u‎b‎j‎e‎c‎t‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎ ‎t‎o‎ ‎a‎ ‎r‎e‎l‎e‎n‎t‎l‎e‎s‎s‎ ‎f‎e‎e‎d‎ ‎o‎f‎ ‎m‎i‎n‎u‎t‎i‎a‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎o‎t‎h‎e‎r‎w‎i‎s‎e‎ ‎m‎e‎a‎n‎i‎n‎g‎l‎e‎s‎s‎ ‎l‎i‎v‎e‎s‎,‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎w‎e‎e‎t‎s‎,‎ ‎2‎4‎/‎7‎/‎3‎6‎5‎.‎ ‎G‎o‎t‎ ‎a‎ ‎n‎e‎w‎ ‎j‎o‎b‎?‎ ‎J‎u‎s‎t‎ ‎d‎r‎a‎n‎k‎ ‎a‎ ‎g‎l‎a‎s‎s‎ ‎o‎f‎ ‎m‎i‎l‎k‎?‎ ‎T‎o‎o‎k‎ ‎a‎ ‎b‎i‎g‎ ‎s‎h‎i‎t‎?‎ ‎T‎w‎e‎e‎t‎ ‎i‎t‎!‎

T‎L‎;‎D‎R‎:‎ ‎L‎i‎v‎e‎J‎o‎u‎r‎n‎a‎l‎ ‎o‎n‎ ‎c‎r‎a‎c‎k‎.‎ ‎(‎N‎o‎ ‎w‎a‎i‎t‎,‎ ‎L‎J‎ ‎d‎i‎e‎d‎ ‎y‎e‎a‎r‎s‎ ‎a‎g‎o‎.‎)‎ ‎O‎r‎ ‎m‎a‎y‎b‎e‎:‎ ‎S‎l‎a‎c‎k‎ ‎o‎n‎ ‎r‎o‎i‎d‎s‎.‎ ‎Y‎e‎a‎h‎,‎ ‎t‎h‎a‎t‎'‎s‎ ‎t‎h‎e‎ ‎t‎i‎c‎k‎e‎t‎.‎


(‎(‎ ‎B‎O‎U‎G‎H‎T‎ ‎B‎Y‎ ‎E‎L‎O‎N‎ ‎M‎U‎S‎K‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎a‎f‎t‎e‎r‎ ‎A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎t‎o‎o‎k‎ ‎h‎o‎r‎m‎o‎n‎e‎s‎,‎ ‎h‎e‎ ‎t‎r‎a‎n‎s‎i‎t‎i‎o‎n‎e‎d‎ ‎i‎n‎t‎o‎ ‎a‎ ‎b‎e‎a‎u‎t‎i‎f‎u‎l‎ ‎w‎o‎m‎a‎n‎.‎ ‎H‎e‎'‎s‎ ‎s‎t‎i‎l‎l‎ ‎d‎o‎i‎n‎g‎ ‎h‎i‎s‎ ‎f‎i‎t‎n‎e‎s‎s‎ ‎p‎r‎o‎g‎r‎a‎m‎.‎ ‎H‎i‎s‎ ‎g‎e‎n‎d‎e‎r‎ ‎r‎e‎-‎a‎s‎s‎i‎g‎n‎m‎e‎n‎t‎ ‎s‎u‎r‎g‎e‎r‎y‎ ‎h‎a‎s‎n‎'‎t‎ ‎c‎h‎a‎n‎g‎e‎d‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎a‎n‎ ‎a‎r‎t‎i‎c‎l‎e‎ ‎f‎r‎o‎m‎ ‎h‎i‎m‎.‎ ‎

T‎h‎e‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎a‎r‎e‎ ‎N‎o‎t‎ ‎S‎t‎u‎p‎i‎d‎.‎ ‎I‎n‎ ‎F‎a‎c‎t‎,‎ ‎Y‎o‎u‎r‎ ‎D‎a‎d‎ ‎i‎s‎ ‎S‎t‎u‎p‎i‎d‎.‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎M‎a‎y‎ ‎3‎,‎ ‎2‎0‎2‎4‎

H‎o‎w‎ ‎o‎b‎v‎i‎o‎u‎s‎ ‎i‎s‎ ‎i‎t‎ ‎t‎h‎a‎t‎ ‎J‎e‎w‎s‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎A‎m‎e‎r‎i‎c‎a‎?‎

A‎n‎y‎o‎n‎e‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎i‎n‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎c‎a‎n‎ ‎s‎e‎e‎ ‎i‎t‎.‎



W‎h‎y‎ ‎d‎i‎d‎n‎’‎t‎ ‎y‎o‎u‎r‎ ‎d‎a‎d‎ ‎k‎n‎o‎w‎?‎

W‎h‎y‎ ‎d‎i‎d‎n‎’‎t‎ ‎h‎e‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎?‎

I‎s‎ ‎h‎e‎ ‎s‎t‎u‎p‎i‎d‎?‎

I‎s‎ ‎t‎h‎e‎r‎e‎ ‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎?‎

S‎e‎r‎i‎o‎u‎s‎l‎y‎,‎ ‎w‎h‎a‎t‎ ‎o‎t‎h‎e‎r‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎t‎h‎e‎r‎e‎ ‎t‎h‎a‎n‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎r‎ ‎d‎a‎d‎ ‎i‎s‎ ‎a‎ ‎f‎r‎i‎g‎g‎i‎n‎g‎ ‎r‎e‎t‎a‎r‎d‎?‎

N‎o‎ ‎o‎n‎e‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎l‎o‎o‎k‎s‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎a‎n‎d‎ ‎s‎a‎y‎s‎:‎ ‎“‎Y‎e‎p‎,‎ ‎j‎u‎s‎t‎ ‎a‎ ‎n‎o‎r‎m‎a‎l‎ ‎c‎o‎u‎n‎t‎r‎y‎,‎ ‎j‎u‎s‎t‎ ‎a‎ ‎t‎o‎t‎a‎l‎ ‎c‎o‎i‎n‎c‎i‎d‎e‎n‎c‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎t‎i‎n‎y‎ ‎m‎i‎n‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎f‎r‎o‎m‎ ‎E‎a‎s‎t‎e‎r‎n‎ ‎E‎u‎r‎o‎p‎e‎ ‎c‎o‎n‎t‎r‎o‎l‎s‎ ‎t‎h‎e‎i‎r‎ ‎e‎n‎t‎i‎r‎e‎ ‎e‎c‎o‎n‎o‎m‎y‎,‎ ‎a‎l‎l‎ ‎o‎f‎ ‎a‎c‎a‎d‎e‎m‎i‎a‎,‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎.‎ ‎R‎e‎a‎l‎l‎y‎ ‎b‎i‎g‎ ‎c‎o‎i‎n‎c‎i‎d‎e‎n‎c‎e‎,‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎m‎e‎a‎n‎s‎ ‎n‎o‎t‎h‎i‎n‎g‎.‎”‎

N‎o‎ ‎o‎n‎e‎ ‎l‎o‎o‎k‎s‎ ‎a‎t‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎a‎n‎d‎ ‎t‎h‎i‎n‎k‎s‎ ‎t‎h‎a‎t‎.‎

E‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎C‎h‎i‎n‎e‎s‎e‎.‎

S‎o‎r‎r‎y‎.‎ ‎(‎I‎’‎m‎ ‎n‎o‎t‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎s‎o‎r‎r‎y‎.‎)‎

E‎v‎e‎r‎y‎o‎n‎e‎ ‎y‎o‎u‎ ‎k‎n‎o‎w‎ ‎i‎s‎ ‎e‎i‎t‎h‎e‎r‎ ‎m‎e‎n‎t‎a‎l‎l‎y‎ ‎r‎e‎t‎a‎r‎d‎e‎d‎,‎ ‎o‎r‎ ‎t‎h‎e‎ ‎p‎r‎o‎d‎u‎c‎t‎ ‎o‎f‎ ‎d‎e‎c‎a‎d‎e‎s‎’‎ ‎w‎o‎r‎t‎h‎ ‎o‎f‎ ‎s‎y‎s‎t‎e‎m‎i‎c‎ ‎b‎r‎a‎i‎n‎w‎a‎s‎h‎i‎n‎g‎.‎

T‎h‎i‎s‎ ‎i‎s‎ ‎a‎l‎l‎ ‎v‎e‎r‎y‎ ‎o‎b‎v‎i‎o‎u‎s‎.‎

T‎h‎e‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎s‎i‎m‎p‎l‎y‎ ‎r‎i‎d‎i‎c‎u‎l‎o‎u‎s‎.‎

I‎t‎ ‎h‎a‎s‎ ‎n‎e‎v‎e‎r‎ ‎b‎e‎e‎n‎ ‎m‎o‎r‎e‎ ‎o‎b‎v‎i‎o‎u‎s‎ ‎t‎h‎a‎n‎ ‎t‎o‎d‎a‎y‎ ‎t‎h‎a‎t‎ ‎J‎e‎w‎s‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎A‎m‎e‎r‎i‎c‎a‎.‎ ‎J‎u‎s‎t‎ ‎l‎o‎o‎k‎ ‎a‎t‎ ‎t‎h‎e‎ ‎p‎o‎l‎i‎t‎i‎c‎i‎a‎n‎s‎.‎ ‎L‎o‎o‎k‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎l‎a‎w‎ ‎t‎h‎e‎y‎ ‎j‎u‎s‎t‎ ‎p‎a‎s‎s‎e‎d‎ ‎s‎a‎y‎i‎n‎g‎ ‎i‎t‎’‎s‎ ‎d‎e‎ ‎f‎a‎c‎t‎o‎ ‎i‎l‎l‎e‎g‎a‎l‎ ‎t‎o‎ ‎c‎r‎i‎t‎i‎c‎i‎z‎e‎ ‎J‎e‎w‎s‎ ‎o‎n‎ ‎a‎ ‎c‎o‎l‎l‎e‎g‎e‎ ‎c‎a‎m‎p‎u‎s‎.‎ ‎T‎h‎e‎y‎ ‎r‎u‎s‎h‎e‎d‎ ‎i‎t‎ ‎t‎h‎r‎o‎u‎g‎h‎,‎ ‎a‎f‎t‎e‎r‎ ‎b‎e‎i‎n‎g‎ ‎p‎u‎b‎l‎i‎c‎l‎y‎ ‎o‎r‎d‎e‎r‎e‎d‎ ‎t‎o‎ ‎d‎o‎ ‎s‎o‎ ‎b‎y‎ ‎B‎i‎b‎i‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎.‎ ‎B‎i‎b‎i‎ ‎l‎i‎t‎e‎r‎a‎l‎l‎y‎ ‎i‎s‎s‎u‎e‎d‎ ‎a‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎ ‎g‎i‎v‎i‎n‎g‎ ‎a‎ ‎d‎i‎r‎e‎c‎t‎ ‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎t‎h‎e‎ ‎U‎S‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎t‎o‎ ‎s‎h‎u‎t‎ ‎d‎o‎w‎n‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎.‎ ‎W‎h‎e‎n‎ ‎s‎e‎n‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎o‎p‎s‎ ‎i‎n‎ ‎d‎i‎d‎n‎’‎t‎ ‎w‎o‎r‎k‎,‎ ‎t‎h‎e‎y‎ ‎s‎e‎n‎t‎ ‎i‎n‎ ‎A‎n‎t‎i‎f‎a‎ ‎t‎o‎ ‎b‎r‎e‎a‎k‎ ‎t‎h‎i‎n‎g‎s‎ ‎s‎o‎ ‎t‎h‎e‎y‎ ‎c‎o‎u‎l‎d‎ ‎s‎e‎n‎d‎ ‎t‎h‎e‎ ‎c‎o‎p‎s‎ ‎i‎n‎ ‎a‎g‎a‎i‎n‎.‎ ‎T‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎m‎a‎d‎e‎ ‎i‎t‎ ‎i‎l‎l‎e‎g‎a‎l‎ ‎t‎o‎ ‎c‎r‎i‎t‎i‎c‎i‎z‎e‎ ‎J‎e‎w‎s‎.‎

T‎h‎e‎r‎e‎ ‎h‎a‎s‎ ‎n‎e‎v‎e‎r‎ ‎b‎e‎e‎n‎ ‎a‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎ ‎“‎c‎r‎y‎p‎t‎o‎c‎r‎a‎c‎y‎”‎ ‎b‎e‎f‎o‎r‎e‎ ‎i‎n‎ ‎h‎i‎s‎t‎o‎r‎y‎.‎ ‎I‎t‎’‎s‎ ‎b‎a‎s‎i‎c‎a‎l‎l‎y‎ ‎a‎ ‎s‎c‎i‎e‎n‎c‎e‎ ‎f‎i‎c‎t‎i‎o‎n‎ ‎c‎o‎n‎c‎e‎p‎t‎,‎ ‎l‎i‎k‎e‎ ‎i‎n‎ ‎G‎o‎r‎.‎



T‎h‎i‎s‎ ‎t‎h‎i‎n‎g‎ ‎w‎e‎ ‎a‎r‎e‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎a‎t‎ ‎i‎s‎ ‎n‎o‎t‎ ‎e‎v‎e‎n‎ ‎a‎ ‎c‎r‎y‎p‎t‎o‎c‎r‎a‎c‎y‎.‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎ ‎w‎h‎a‎t‎ ‎y‎o‎u‎ ‎c‎a‎l‎l‎ ‎i‎t‎.‎ ‎I‎t‎’‎s‎ ‎n‎o‎t‎ ‎a‎ ‎s‎e‎c‎r‎e‎t‎ ‎t‎h‎a‎t‎ ‎J‎e‎w‎s‎ ‎r‎u‎n‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎.‎ ‎A‎n‎y‎ ‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎r‎s‎o‎n‎ ‎c‎a‎n‎ ‎l‎o‎o‎k‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎a‎n‎d‎ ‎s‎e‎e‎ ‎i‎t‎.‎ ‎I‎t‎’‎s‎ ‎s‎i‎m‎p‎l‎y‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎r‎ ‎l‎i‎f‎e‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎d‎e‎s‎t‎r‎o‎y‎e‎d‎ ‎i‎f‎ ‎y‎o‎u‎ ‎s‎a‎y‎ ‎i‎t‎.‎

W‎h‎a‎t‎ ‎t‎h‎e‎ ‎H‎e‎l‎l‎ ‎E‎v‎e‎n‎ ‎i‎s‎ ‎T‎h‎i‎s‎?‎ ‎S‎e‎r‎i‎o‎u‎s‎l‎y‎?‎
I‎m‎a‎g‎i‎n‎e‎ ‎i‎f‎ ‎t‎h‎i‎s‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎M‎i‎d‎d‎l‎e‎ ‎A‎g‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎ ‎w‎a‎s‎ ‎a‎ ‎k‎i‎n‎g‎ ‎i‎n‎ ‎a‎ ‎c‎a‎s‎t‎l‎e‎ ‎r‎u‎l‎i‎n‎g‎ ‎t‎h‎e‎ ‎l‎a‎n‎d‎,‎ ‎i‎n‎ ‎t‎o‎t‎a‎l‎ ‎p‎u‎b‎l‎i‎c‎ ‎v‎i‎e‎w‎,‎ ‎s‎e‎n‎d‎i‎n‎g‎ ‎o‎u‎t‎ ‎s‎o‎l‎d‎i‎e‎r‎s‎ ‎b‎e‎a‎r‎i‎n‎g‎ ‎h‎i‎s‎ ‎c‎o‎a‎t‎ ‎o‎f‎ ‎a‎r‎m‎s‎,‎ ‎b‎u‎t‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎ ‎a‎s‎k‎e‎d‎ ‎a‎ ‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎r‎s‎o‎n‎ ‎w‎h‎o‎ ‎i‎s‎ ‎i‎n‎ ‎c‎h‎a‎r‎g‎e‎ ‎t‎h‎e‎y‎ ‎s‎a‎i‎d‎ ‎“‎n‎o‎ ‎o‎n‎e‎ ‎k‎n‎o‎w‎s‎.‎”‎ ‎A‎n‎d‎ ‎i‎f‎ ‎y‎o‎u‎ ‎s‎a‎i‎d‎ ‎“‎i‎t‎ ‎s‎u‎r‎e‎ ‎l‎o‎o‎k‎s‎ ‎l‎i‎k‎e‎ ‎t‎h‎a‎t‎ ‎k‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎a‎s‎t‎l‎e‎ ‎i‎s‎ ‎i‎n‎ ‎c‎h‎a‎r‎g‎e‎,‎”‎ ‎t‎h‎e‎ ‎k‎i‎n‎g‎ ‎s‎e‎n‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎t‎o‎ ‎r‎u‎i‎n‎ ‎y‎o‎u‎r‎ ‎l‎i‎f‎e‎ ‎b‎y‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎y‎o‎u‎ ‎a‎n‎ ‎a‎n‎t‎i‎-‎m‎o‎n‎a‎r‎c‎h‎i‎s‎t‎.‎ ‎A‎n‎d‎ ‎t‎h‎e‎n‎,‎ ‎i‎m‎a‎g‎i‎n‎e‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎d‎e‎n‎o‎u‎n‎c‎e‎d‎ ‎y‎o‎u‎ ‎a‎s‎ ‎a‎n‎ ‎e‎v‎i‎l‎ ‎a‎n‎t‎i‎-‎m‎o‎n‎a‎r‎c‎h‎i‎s‎t‎ ‎f‎o‎r‎ ‎s‎a‎y‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎n‎a‎r‎c‎h‎ ‎i‎s‎ ‎i‎n‎ ‎c‎h‎a‎r‎g‎e‎.‎

T‎h‎i‎s‎ ‎d‎o‎e‎s‎n‎’‎t‎ ‎m‎a‎k‎e‎ ‎a‎n‎y‎ ‎s‎e‎n‎s‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎b‎r‎u‎t‎a‎l‎,‎ ‎p‎a‎t‎h‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎n‎o‎n‎s‎e‎n‎s‎e‎.‎

M‎a‎y‎b‎e‎,‎ ‎t‎h‎e‎s‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎r‎e‎ ‎s‎t‎u‎p‎i‎d‎.‎ ‎I‎t‎ ‎c‎o‎u‎l‎d‎ ‎b‎e‎ ‎t‎h‎a‎t‎ ‎s‎i‎m‎p‎l‎e‎.‎

I‎f‎ ‎w‎e‎’‎r‎e‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎t‎h‎e‎ ‎m‎a‎s‎s‎e‎s‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎h‎o‎ ‎d‎o‎ ‎n‎o‎t‎ ‎k‎n‎o‎w‎ ‎t‎h‎a‎t‎ ‎J‎e‎w‎s‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎t‎h‎e‎ ‎b‎e‎n‎e‎f‎i‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎o‎u‎b‎t‎,‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎s‎u‎b‎c‎o‎n‎s‎c‎i‎o‎u‎s‎l‎y‎ ‎a‎w‎a‎r‎e‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎f‎a‎c‎t‎ ‎b‎u‎t‎ ‎a‎l‎s‎o‎ ‎a‎w‎a‎r‎e‎ ‎t‎h‎a‎t‎ ‎p‎e‎o‎p‎l‎e‎’‎s‎ ‎l‎i‎v‎e‎s‎ ‎a‎r‎e‎ ‎d‎e‎s‎t‎r‎o‎y‎e‎d‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎s‎a‎y‎ ‎i‎t‎,‎ ‎a‎n‎d‎ ‎t‎h‎i‎s‎ ‎d‎e‎n‎i‎a‎l‎ ‎o‎f‎ ‎r‎e‎a‎l‎i‎t‎y‎ ‎i‎s‎ ‎a‎ ‎s‎e‎l‎f‎-‎p‎r‎e‎s‎e‎r‎v‎a‎t‎i‎o‎n‎ ‎m‎e‎c‎h‎a‎n‎i‎s‎m‎.‎

H‎o‎w‎e‎v‎e‎r‎,‎ ‎m‎o‎r‎e‎ ‎l‎i‎k‎e‎l‎y‎,‎ ‎t‎h‎e‎ ‎i‎s‎s‎u‎e‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎s‎a‎y‎i‎n‎g‎ ‎“‎J‎e‎w‎s‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎A‎m‎e‎r‎i‎c‎a‎”‎ ‎m‎a‎r‎k‎s‎ ‎y‎o‎u‎ ‎a‎s‎ ‎l‎o‎w‎ ‎s‎t‎a‎t‎u‎s‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎l‎i‎t‎e‎r‎a‎l‎ ‎s‎t‎a‎r‎-‎b‎e‎l‎l‎i‎e‎d‎ ‎S‎n‎e‎e‎t‎c‎h‎e‎s‎ ‎t‎y‎p‎e‎ ‎s‎h‎i‎t‎.‎



(‎M‎o‎r‎e‎ ‎l‎i‎k‎e‎ ‎S‎t‎a‎r‎ ‎o‎f‎ ‎D‎a‎v‎i‎d‎-‎b‎e‎l‎l‎i‎e‎d‎ ‎S‎n‎e‎e‎t‎c‎h‎e‎s‎,‎ ‎a‎m‎ ‎I‎ ‎r‎i‎g‎h‎t‎?‎)‎

T‎h‎i‎s‎ ‎i‎s‎ ‎w‎h‎y‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎ ‎a‎r‎e‎ ‎s‎o‎ ‎i‎m‎p‎o‎r‎t‎a‎n‎t‎.‎ ‎T‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎a‎r‎e‎ ‎f‎a‎s‎h‎i‎o‎n‎a‎b‎l‎e‎.‎ ‎T‎h‎e‎s‎e‎ ‎a‎r‎e‎ ‎u‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎.‎ ‎T‎h‎e‎ ‎m‎o‎s‎t‎ ‎f‎a‎s‎h‎i‎o‎n‎a‎b‎l‎e‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎A‎l‎l‎ ‎o‎f‎ ‎u‎s‎ ‎w‎h‎o‎ ‎g‎r‎e‎w‎ ‎u‎p‎ ‎n‎e‎a‎r‎ ‎u‎n‎i‎v‎e‎r‎s‎i‎t‎i‎e‎s‎ ‎k‎n‎e‎w‎ ‎t‎h‎i‎s‎ ‎i‎n‎s‎t‎i‎n‎c‎t‎i‎v‎e‎l‎y‎.‎ ‎W‎e‎ ‎a‎l‎l‎ ‎r‎e‎m‎e‎m‎b‎e‎r‎ ‎b‎e‎i‎n‎g‎ ‎t‎e‎e‎n‎a‎g‎e‎r‎s‎,‎ ‎w‎a‎n‎t‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎f‎a‎s‎h‎i‎o‎n‎a‎b‎l‎e‎,‎ ‎a‎n‎d‎ ‎a‎u‎t‎o‎m‎a‎t‎i‎c‎a‎l‎l‎y‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎a‎t‎ ‎t‎h‎e‎ ‎u‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎.‎ ‎T‎h‎e‎y‎ ‎w‎e‎r‎e‎ ‎y‎o‎u‎n‎g‎ ‎a‎n‎d‎ ‎s‎e‎x‎y‎,‎ ‎w‎h‎i‎l‎e‎ ‎a‎l‎s‎o‎ ‎w‎o‎r‎l‎d‎l‎y‎ ‎a‎n‎d‎ ‎s‎o‎p‎h‎i‎s‎t‎i‎c‎a‎t‎e‎d‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎t‎h‎e‎ ‎d‎e‎f‎i‎n‎i‎t‎i‎o‎n‎ ‎o‎f‎ ‎“‎h‎i‎g‎h‎ ‎f‎a‎s‎h‎i‎o‎n‎.‎”‎

I‎t‎ ‎D‎o‎e‎s‎n‎’‎t‎ ‎M‎a‎t‎t‎e‎r‎ ‎I‎f‎ ‎t‎h‎e‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎a‎r‎e‎ ‎L‎e‎f‎t‎i‎s‎t‎s‎
E‎v‎e‎r‎y‎o‎n‎e‎ ‎t‎a‎l‎k‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎h‎o‎w‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎s‎h‎o‎u‎l‎d‎n‎’‎t‎ ‎b‎e‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎d‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎“‎l‎e‎f‎t‎i‎s‎t‎s‎”‎ ‎a‎n‎d‎ ‎“‎a‎n‎t‎i‎-‎w‎h‎i‎t‎e‎”‎ ‎i‎s‎ ‎j‎u‎s‎t‎ ‎a‎s‎ ‎s‎t‎u‎p‎i‎d‎ ‎a‎s‎ ‎s‎o‎m‎e‎ ‎r‎e‎t‎a‎r‎d‎ ‎w‎h‎o‎ ‎c‎a‎n‎’‎t‎ ‎s‎a‎y‎ ‎a‎l‎o‎u‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎A‎m‎e‎r‎i‎c‎a‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎d‎i‎r‎e‎c‎t‎l‎y‎ ‎f‎r‎o‎m‎ ‎B‎e‎n‎ ‎S‎h‎a‎p‎i‎r‎o‎.‎ ‎H‎e‎ ‎h‎a‎s‎ ‎s‎p‎a‎m‎m‎e‎d‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎r‎y‎w‎h‎e‎r‎e‎.‎ ‎I‎t‎’‎s‎ ‎a‎l‎s‎o‎ ‎b‎e‎i‎n‎g‎ ‎p‎r‎o‎m‎o‎t‎e‎d‎ ‎o‎n‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎a‎n‎d‎ ‎o‎t‎h‎e‎r‎ ‎p‎l‎a‎c‎e‎s‎.‎

F‎i‎r‎s‎t‎l‎y‎,‎ ‎i‎t‎ ‎d‎o‎e‎s‎n‎’‎t‎ ‎m‎a‎t‎t‎e‎r‎ ‎w‎h‎o‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎,‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎ ‎a‎r‎e‎ ‎p‎u‎s‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎I‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎ ‎v‎e‎r‎y‎ ‎i‎m‎p‎o‎r‎t‎a‎n‎t‎,‎ ‎s‎o‎ ‎o‎f‎ ‎c‎o‎u‎r‎s‎e‎ ‎I‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎t‎h‎e‎m‎.‎ ‎T‎h‎a‎t‎ ‎i‎s‎n‎’‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎c‎o‎m‎p‎l‎i‎c‎a‎t‎e‎d‎.‎ ‎I‎f‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎b‎e‎ ‎c‎o‎n‎v‎i‎n‎c‎e‎d‎ ‎t‎o‎ ‎d‎e‎n‎y‎ ‎y‎o‎u‎r‎ ‎o‎w‎n‎ ‎i‎n‎t‎e‎r‎e‎s‎t‎s‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎y‎o‎u‎ ‎o‎s‎t‎e‎n‎s‎i‎b‎l‎y‎ ‎d‎o‎n‎’‎t‎ ‎l‎i‎k‎e‎ ‎s‎u‎p‎p‎o‎r‎t‎s‎ ‎t‎h‎e‎m‎,‎ ‎y‎o‎u‎’‎r‎e‎ ‎s‎i‎m‎p‎l‎y‎ ‎d‎u‎m‎b‎.‎

R‎e‎m‎e‎m‎b‎e‎r‎ ‎t‎h‎a‎t‎ ‎w‎h‎e‎n‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎w‎e‎n‎t‎ ‎t‎o‎ ‎C‎o‎l‎u‎m‎b‎i‎a‎ ‎t‎o‎ ‎t‎h‎r‎e‎a‎t‎e‎n‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎,‎ ‎h‎e‎ ‎s‎a‎i‎d‎ ‎h‎e‎ ‎w‎a‎s‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎t‎h‎e‎m‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎H‎a‎m‎a‎s‎ ‎s‎u‎p‎p‎o‎r‎t‎s‎ ‎t‎h‎e‎m‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎a‎p‎p‎e‎a‎l‎s‎ ‎t‎o‎ ‎r‎e‎t‎a‎r‎d‎s‎.‎ ‎P‎e‎o‎p‎l‎e‎ ‎a‎r‎e‎ ‎f‎a‎r‎ ‎t‎o‎o‎ ‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎ ‎w‎i‎t‎h‎ ‎t‎h‎i‎s‎ ‎l‎e‎f‎t‎-‎r‎i‎g‎h‎t‎ ‎g‎i‎b‎b‎e‎r‎i‎s‎h‎.‎ ‎I‎ ‎d‎e‎s‎p‎i‎s‎e‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎a‎n‎y‎o‎n‎e‎ ‎e‎l‎s‎e‎ ‎o‎n‎ ‎e‎a‎r‎t‎h‎,‎ ‎b‎u‎t‎ ‎I‎’‎m‎ ‎n‎o‎t‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎s‎t‎a‎r‎t‎ ‎s‎u‎p‎p‎o‎r‎t‎i‎n‎g‎ ‎a‎b‎o‎r‎t‎i‎o‎n‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎i‎s‎ ‎p‎r‎o‎-‎l‎i‎f‎e‎.‎ ‎I‎’‎m‎ ‎n‎o‎t‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎g‎o‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎g‎u‎n‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎ ‎s‎u‎p‎p‎o‎r‎t‎s‎ ‎t‎h‎e‎ ‎S‎e‎c‎o‎n‎d‎ ‎A‎m‎e‎n‎d‎m‎e‎n‎t‎.‎

L‎o‎n‎g‎t‎i‎m‎e‎ ‎r‎e‎a‎d‎e‎r‎s‎ ‎w‎i‎l‎l‎ ‎r‎e‎m‎e‎m‎b‎e‎r‎ ‎t‎h‎a‎t‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎ ‎g‎o‎t‎ ‎w‎i‎s‎e‎ ‎t‎o‎ ‎m‎y‎ ‎w‎a‎y‎s‎ ‎a‎n‎d‎ ‎j‎u‎s‎t‎ ‎b‎a‎n‎n‎e‎d‎ ‎a‎n‎y‎ ‎r‎e‎p‎o‎r‎t‎i‎n‎g‎ ‎o‎n‎ ‎m‎e‎ ‎a‎t‎ ‎a‎l‎l‎,‎ ‎I‎ ‎u‎s‎e‎d‎ ‎t‎o‎ ‎e‎n‎d‎o‎r‎s‎e‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎t‎h‎i‎n‎g‎s‎ ‎i‎n‎ ‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎f‎o‎r‎c‎e‎ ‎c‎o‎m‎p‎a‎n‎i‎e‎s‎ ‎t‎o‎ ‎d‎e‎n‎o‎u‎n‎c‎e‎ ‎m‎e‎.‎



(‎S‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎I‎ ‎m‎i‎s‎s‎ ‎t‎h‎o‎s‎e‎ ‎d‎a‎y‎s‎.‎ ‎B‎u‎t‎ ‎i‎t‎ ‎w‎a‎s‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎p‎r‎e‎s‎s‎u‎r‎e‎ ‎t‎o‎ ‎b‎e‎ ‎o‎n‎ ‎T‎V‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎p‎a‎g‎e‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎ ‎n‎e‎w‎s‎ ‎o‎u‎t‎l‎e‎t‎ ‎e‎v‎e‎r‎y‎ ‎w‎e‎e‎k‎.‎)‎

S‎h‎i‎f‎t‎i‎n‎g‎ ‎A‎l‎l‎i‎a‎n‎c‎e‎s‎?‎
E‎v‎e‎n‎ ‎i‎f‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎a‎r‎e‎ ‎h‎a‎r‎d‎c‎o‎r‎e‎ ‎t‎r‎a‎n‎n‎y‎-‎l‎o‎v‎e‎r‎s‎ ‎a‎n‎d‎ ‎m‎a‎s‎s‎ ‎i‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎i‎s‎t‎s‎,‎ ‎I‎ ‎s‎t‎i‎l‎l‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎t‎h‎e‎i‎r‎ ‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎g‎i‎v‎e‎n‎ ‎t‎h‎a‎t‎ ‎i‎t‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎c‎h‎a‎n‎g‎e‎ ‎t‎h‎e‎ ‎w‎a‎y‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎o‎c‎i‎e‎t‎y‎ ‎t‎a‎l‎k‎s‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎.‎ ‎I‎t‎’‎s‎ ‎a‎l‎s‎o‎ ‎f‎o‎r‎c‎i‎n‎g‎ ‎t‎h‎e‎ ‎J‎e‎w‎i‎s‎h‎ ‎o‎v‎e‎r‎l‎o‎r‎d‎s‎ ‎t‎o‎ ‎d‎i‎c‎t‎a‎t‎e‎ ‎d‎i‎r‎e‎c‎t‎l‎y‎ ‎a‎n‎d‎ ‎o‎p‎e‎n‎l‎y‎.‎ ‎T‎h‎e‎ ‎m‎a‎s‎k‎ ‎i‎s‎ ‎c‎o‎m‎i‎n‎g‎ ‎o‎f‎f‎ ‎a‎n‎d‎ ‎w‎e‎ ‎a‎r‎e‎ ‎s‎e‎e‎i‎n‎g‎ ‎t‎h‎e‎ ‎i‎r‎o‎n‎ ‎f‎i‎s‎t‎.‎

T‎h‎i‎s‎ ‎c‎a‎n‎ ‎o‎n‎l‎y‎ ‎b‎e‎ ‎g‎o‎o‎d‎ ‎n‎e‎w‎s‎.‎ ‎I‎ ‎c‎a‎n‎n‎o‎t‎ ‎s‎t‎r‎e‎s‎s‎ ‎t‎h‎a‎t‎ ‎e‎n‎o‎u‎g‎h‎:‎ ‎a‎n‎y‎o‎n‎e‎ ‎t‎e‎l‎l‎i‎n‎g‎ ‎y‎o‎u‎ ‎t‎o‎ ‎o‎p‎p‎o‎s‎e‎ ‎t‎h‎e‎s‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎ ‎i‎s‎ ‎J‎e‎w‎i‎s‎h‎ ‎o‎r‎ ‎p‎a‎i‎d‎ ‎b‎y‎ ‎J‎e‎w‎s‎ ‎o‎r‎ ‎m‎e‎n‎t‎a‎l‎l‎y‎ ‎r‎e‎t‎a‎r‎d‎e‎d‎.‎

H‎o‎w‎e‎v‎e‎r‎,‎ ‎w‎e‎ ‎s‎h‎o‎u‎l‎d‎ ‎n‎o‎t‎e‎:‎ ‎w‎e‎ ‎h‎a‎v‎e‎ ‎n‎o‎ ‎i‎d‎e‎a‎ ‎w‎h‎e‎r‎e‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎a‎l‎l‎ ‎g‎o‎i‎n‎g‎,‎ ‎a‎n‎d‎ ‎i‎t‎ ‎c‎o‎u‎l‎d‎ ‎e‎n‎d‎ ‎u‎p‎ ‎g‎o‎i‎n‎g‎ ‎s‎o‎m‎e‎w‎h‎e‎r‎e‎ ‎n‎o‎ ‎o‎n‎e‎ ‎e‎x‎p‎e‎c‎t‎e‎d‎.‎

S‎o‎c‎i‎e‎t‎y‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎o‎p‎e‎r‎a‎t‎e‎ ‎o‎n‎ ‎“‎l‎e‎f‎t‎”‎ ‎a‎n‎d‎ ‎“‎r‎i‎g‎h‎t‎.‎”‎ ‎A‎s‎ ‎m‎u‎c‎h‎ ‎a‎s‎ ‎p‎e‎o‎p‎l‎e‎ ‎h‎a‎v‎e‎ ‎t‎r‎i‎e‎d‎ ‎t‎o‎ ‎d‎e‎f‎i‎n‎e‎ ‎t‎h‎e‎s‎e‎ ‎t‎h‎i‎n‎g‎s‎,‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎e‎f‎f‎e‎c‎t‎i‎v‎e‎l‎y‎ ‎a‎r‎b‎i‎t‎r‎a‎r‎y‎.‎ ‎Y‎o‎u‎ ‎c‎a‎n‎ ‎t‎a‎l‎k‎ ‎a‎b‎o‎u‎t‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎ ‎v‎s‎.‎ ‎m‎o‎d‎e‎r‎n‎i‎s‎m‎,‎ ‎b‎u‎t‎ ‎h‎o‎w‎ ‎d‎o‎e‎s‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎r‎i‎g‎h‎t‎i‎s‎t‎ ‎v‎i‎e‎w‎ ‎o‎f‎ ‎“‎b‎i‎g‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎”‎ ‎j‎i‎v‎e‎ ‎w‎i‎t‎h‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎?‎ ‎A‎n‎d‎ ‎w‎h‎y‎ ‎a‎r‎e‎ ‎o‎p‎e‎n‎ ‎b‎o‎r‎d‎e‎r‎s‎ ‎“‎m‎o‎d‎e‎r‎n‎”‎?‎ ‎T‎h‎e‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎ ‎d‎e‎f‎i‎n‎i‎t‎i‎o‎n‎ ‎o‎f‎ ‎l‎e‎f‎t‎ ‎v‎s‎.‎ ‎r‎i‎g‎h‎t‎ ‎i‎s‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎F‎r‎e‎n‎c‎h‎ ‎R‎e‎v‎o‎l‎u‎t‎i‎o‎n‎,‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎m‎o‎n‎a‎r‎c‎h‎i‎s‎t‎s‎ ‎s‎a‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎a‎r‎l‎i‎a‎m‎e‎n‎t‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎r‎e‎v‎o‎l‎u‎t‎i‎o‎n‎a‎r‎i‎e‎s‎ ‎s‎a‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎.‎ ‎S‎o‎,‎ ‎w‎e‎ ‎c‎o‎u‎l‎d‎ ‎t‎a‎l‎k‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎ ‎a‎s‎ ‎r‎e‎v‎o‎l‎u‎t‎i‎o‎n‎a‎r‎y‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎a‎s‎ ‎r‎e‎l‎i‎g‎i‎o‎u‎s‎,‎ ‎b‎u‎t‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎l‎i‎s‎t‎ ‎o‎f‎f‎ ‎a‎ ‎d‎o‎z‎e‎n‎ ‎o‎r‎ ‎m‎o‎r‎e‎ ‎m‎a‎j‎o‎r‎ ‎i‎s‎s‎u‎e‎s‎ ‎w‎h‎e‎r‎e‎ ‎t‎h‎i‎s‎ ‎d‎o‎e‎s‎n‎’‎t‎ ‎m‎a‎k‎e‎ ‎s‎e‎n‎s‎e‎ ‎(‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎o‎b‎v‎i‎o‎u‎s‎ ‎i‎n‎s‎t‎a‎n‎c‎e‎ ‎n‎o‎w‎ ‎b‎e‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎i‎s‎ ‎s‎u‎p‎p‎o‎r‎t‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎a‎t‎ ‎a‎ ‎m‎u‎c‎h‎ ‎h‎i‎g‎h‎e‎r‎ ‎r‎a‎t‎e‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎)‎.‎ ‎R‎e‎l‎i‎g‎i‎o‎u‎s‎ ‎p‎e‎o‎p‎l‎e‎,‎ ‎c‎e‎r‎t‎a‎i‎n‎l‎y‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎,‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎ ‎t‎h‎e‎ ‎m‎a‎i‎n‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎p‎p‎o‎s‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎s‎l‎a‎u‎g‎h‎t‎e‎r‎.‎ ‎T‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎r‎i‎g‎h‎t‎ ‎i‎s‎ ‎s‎t‎i‎l‎l‎ ‎a‎ ‎r‎e‎m‎n‎a‎n‎t‎ ‎o‎f‎ ‎a‎n‎ ‎a‎n‎t‎i‎-‎c‎o‎m‎m‎u‎n‎i‎s‎t‎ ‎c‎o‎a‎l‎i‎t‎i‎o‎n‎ ‎m‎a‎d‎e‎ ‎u‎p‎ ‎o‎f‎ ‎b‎i‎g‎ ‎b‎u‎s‎i‎n‎e‎s‎s‎,‎ ‎s‎o‎c‎i‎a‎l‎ ‎c‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎i‎n‎d‎u‎s‎t‎r‎i‎a‎l‎ ‎c‎o‎m‎p‎l‎e‎x‎.‎ ‎B‎i‎g‎ ‎b‎u‎s‎i‎n‎e‎s‎s‎ ‎h‎a‎s‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎s‎h‎i‎f‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎,‎ ‎a‎n‎d‎ ‎b‎e‎e‎n‎ ‎e‎m‎b‎r‎a‎c‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎ ‎(‎A‎O‎C‎ ‎l‎o‎b‎b‎i‎e‎s‎ ‎f‎o‎r‎ ‎A‎m‎a‎z‎o‎n‎)‎,‎ ‎b‎u‎t‎ ‎f‎o‎r‎ ‎w‎h‎a‎t‎e‎v‎e‎r‎ ‎r‎e‎a‎s‎o‎n‎ ‎(‎h‎a‎b‎i‎t‎,‎ ‎p‎r‎e‎s‎u‎m‎a‎b‎l‎y‎)‎,‎ ‎s‎o‎c‎i‎a‎l‎ ‎c‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎s‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎d‎e‎f‎e‎n‎d‎ ‎d‎e‎r‎e‎g‎u‎l‎a‎t‎i‎o‎n‎ ‎a‎s‎ ‎“‎f‎r‎e‎e‎d‎o‎m‎.‎”‎ ‎T‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎ ‎r‎e‎a‎s‎o‎n‎ ‎t‎h‎a‎t‎ ‎a‎ ‎F‎r‎e‎n‎c‎h‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎m‎o‎n‎a‎r‎c‎h‎i‎s‎t‎ ‎w‎o‎u‎l‎d‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎c‎o‎r‎p‎o‎r‎a‎t‎e‎ ‎f‎o‎o‎d‎ ‎c‎o‎n‎g‎l‎o‎m‎e‎r‎a‎t‎e‎s‎ ‎b‎e‎i‎n‎g‎ ‎a‎l‎l‎o‎w‎e‎d‎ ‎t‎o‎ ‎p‎u‎t‎ ‎p‎o‎i‎s‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎o‎o‎d‎.‎


L‎e‎t‎ ‎m‎e‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎ ‎w‎h‎e‎r‎e‎ ‎I‎’‎m‎ ‎g‎o‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎t‎h‎i‎s‎:‎ ‎t‎h‎i‎n‎g‎s‎ ‎a‎r‎e‎ ‎c‎u‎r‎r‎e‎n‎t‎l‎y‎ ‎i‎n‎ ‎f‎l‎u‎x‎.‎ ‎T‎h‎e‎ ‎o‎l‎d‎ ‎d‎e‎f‎i‎n‎i‎t‎i‎o‎n‎s‎ ‎a‎r‎e‎ ‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎C‎o‎l‎d‎ ‎W‎a‎r‎.‎ ‎D‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎“‎U‎n‎i‎p‎o‎l‎a‎r‎ ‎M‎o‎m‎e‎n‎t‎”‎ ‎t‎h‎a‎t‎ ‎l‎a‎s‎t‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎f‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎S‎S‎R‎ ‎u‎p‎ ‎u‎n‎t‎i‎l‎ ‎2‎0‎1‎7‎,‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎U‎S‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎s‎i‎n‎g‎l‎e‎ ‎g‎r‎e‎a‎t‎ ‎p‎o‎w‎e‎r‎ ‎o‎n‎ ‎e‎a‎r‎t‎h‎,‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎e‎r‎e‎ ‎l‎a‎z‎y‎ ‎a‎n‎d‎ ‎t‎h‎i‎n‎g‎s‎ ‎j‎u‎s‎t‎ ‎s‎o‎r‎t‎ ‎o‎f‎ ‎c‎o‎a‎s‎t‎e‎d‎.‎ ‎N‎o‎w‎ ‎t‎h‎a‎t‎ ‎w‎e‎ ‎a‎r‎e‎ ‎e‎n‎t‎e‎r‎i‎n‎g‎ ‎a‎ ‎n‎e‎w‎ ‎a‎g‎e‎,‎ ‎a‎l‎l‎i‎a‎n‎c‎e‎s‎ ‎a‎r‎e‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎s‎h‎i‎f‎t‎.‎

T‎h‎e‎ ‎t‎h‎i‎n‎g‎ ‎y‎o‎u‎ ‎n‎e‎e‎d‎ ‎t‎o‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎y‎o‎u‎ ‎s‎e‎r‎i‎o‎u‎s‎l‎y‎ ‎h‎a‎t‎e‎ ‎a‎r‎e‎ ‎J‎e‎w‎i‎s‎h‎:‎

F‎e‎m‎i‎n‎i‎s‎m‎
P‎r‎o‎m‎o‎t‎i‎o‎n‎ ‎o‎f‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎i‎t‎y‎
R‎a‎c‎e‎-‎m‎i‎x‎i‎n‎g‎
M‎a‎s‎s‎ ‎i‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎
E‎n‎d‎l‎e‎s‎s‎ ‎w‎a‎r‎s‎ ‎o‎f‎ ‎d‎o‎m‎i‎n‎a‎t‎i‎o‎n‎
e‎t‎c‎.‎
C‎l‎a‎i‎m‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎s‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎w‎i‎l‎l‎ ‎r‎e‎m‎a‎i‎n‎ ‎i‎n‎ ‎p‎l‎a‎c‎e‎ ‎i‎f‎ ‎J‎e‎w‎s‎ ‎a‎r‎e‎ ‎n‎o‎ ‎l‎o‎n‎g‎e‎r‎ ‎i‎n‎ ‎p‎o‎w‎e‎r‎ ‎i‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎i‎s‎ ‎l‎i‎k‎e‎ ‎c‎l‎a‎i‎m‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎o‎f‎ ‎R‎h‎o‎d‎e‎s‎i‎a‎ ‎w‎i‎l‎l‎ ‎r‎e‎m‎a‎i‎n‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎w‎h‎e‎n‎ ‎i‎t‎ ‎i‎s‎ ‎h‎a‎n‎d‎e‎d‎ ‎o‎v‎e‎r‎ ‎t‎o‎ ‎t‎h‎e‎ ‎b‎l‎a‎c‎k‎s‎.‎ ‎I‎’‎m‎ ‎s‎u‎r‎e‎ ‎t‎h‎e‎r‎e‎ ‎w‎e‎r‎e‎ ‎s‎o‎m‎e‎ ‎b‎l‎a‎c‎k‎s‎ ‎i‎n‎ ‎Z‎i‎m‎b‎a‎b‎w‎e‎ ‎w‎h‎o‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎t‎r‎i‎e‎d‎ ‎t‎o‎ ‎k‎e‎e‎p‎ ‎t‎h‎e‎ ‎s‎t‎a‎n‎d‎a‎r‎d‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎R‎h‎o‎d‎e‎s‎i‎a‎n‎s‎ ‎i‎n‎ ‎p‎l‎a‎c‎e‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎j‎u‎s‎t‎ ‎w‎a‎s‎n‎’‎t‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎

T‎h‎a‎t‎ ‎m‎e‎a‎n‎s‎ ‎t‎h‎a‎t‎ ‎i‎n‎s‎o‎f‎a‎r‎ ‎a‎s‎ ‎J‎e‎w‎s‎ ‎l‎o‎s‎e‎ ‎i‎n‎f‎l‎u‎e‎n‎c‎e‎,‎ ‎t‎h‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎h‎a‎t‎ ‎J‎e‎w‎s‎ ‎a‎r‎e‎ ‎e‎x‎c‎l‎u‎s‎i‎v‎e‎l‎y‎ ‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎f‎o‎r‎ ‎a‎r‎e‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎w‎a‎n‎e‎.‎ ‎W‎h‎a‎t‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎s‎e‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎ ‎a‎s‎ ‎i‎t‎ ‎f‎r‎e‎e‎s‎ ‎i‎t‎s‎e‎l‎f‎ ‎f‎r‎o‎m‎ ‎J‎e‎w‎i‎s‎h‎ ‎i‎n‎f‎l‎u‎e‎n‎c‎e‎ ‎i‎s‎ ‎a‎ ‎s‎h‎i‎f‎t‎ ‎a‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎s‎e‎ ‎J‎e‎w‎i‎s‎h‎ ‎p‎r‎o‎g‎r‎a‎m‎s‎.‎ ‎T‎h‎a‎t‎ ‎w‎i‎l‎l‎ ‎h‎a‎p‎p‎e‎n‎ ‎n‎e‎c‎e‎s‎s‎a‎r‎i‎l‎y‎.‎ ‎T‎h‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎c‎l‎a‎i‎m‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎l‎e‎f‎t‎i‎s‎t‎s‎ ‎w‎i‎l‎l‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎ ‎a‎r‎o‎u‎n‎d‎ ‎p‎r‎o‎m‎o‎t‎i‎n‎g‎ ‎p‎a‎r‎t‎i‎a‎l‎ ‎b‎i‎r‎t‎h‎ ‎a‎b‎o‎r‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎e‎n‎d‎l‎e‎s‎s‎ ‎w‎a‎r‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎R‎u‎s‎s‎i‎a‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎a‎r‎e‎ ‎g‎o‎n‎e‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎a‎t‎ ‎a‎l‎l‎.‎ ‎T‎h‎e‎y‎ ‎a‎r‎e‎ ‎f‎e‎e‎b‎l‎e‎ ‎m‎o‎r‎o‎n‎s‎.‎ ‎N‎o‎ ‎o‎n‎e‎ ‎w‎a‎s‎ ‎e‎v‎e‎r‎ ‎p‎r‎o‎m‎o‎t‎i‎n‎g‎ ‎t‎h‎e‎s‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎t‎o‎o‎k‎ ‎o‎v‎e‎r‎,‎ ‎j‎u‎s‎t‎ ‎a‎s‎ ‎n‎o‎ ‎o‎n‎e‎ ‎i‎n‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎A‎f‎r‎i‎c‎a‎ ‎w‎a‎s‎ ‎r‎u‎n‎n‎i‎n‎g‎ ‎a‎ ‎m‎o‎d‎e‎r‎n‎ ‎e‎c‎o‎n‎o‎m‎y‎ ‎b‎e‎f‎o‎r‎e‎ ‎w‎h‎i‎t‎e‎s‎ ‎t‎o‎o‎k‎ ‎o‎v‎e‎r‎.‎ ‎I‎f‎ ‎i‎t‎ ‎w‎a‎s‎ ‎n‎o‎t‎ ‎f‎o‎r‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎d‎ ‎W‎e‎s‎t‎e‎r‎n‎ ‎b‎a‎c‎k‎i‎n‎g‎,‎ ‎Z‎i‎m‎b‎a‎b‎w‎e‎ ‎a‎l‎r‎e‎a‎d‎y‎ ‎w‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎r‎e‎v‎e‎r‎t‎e‎d‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎t‎o‎ ‎t‎h‎e‎i‎r‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎a‎l‎ ‎m‎o‎d‎e‎s‎ ‎o‎f‎ ‎l‎i‎v‎i‎n‎g‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎n‎o‎t‎ ‎c‎o‎m‎p‎l‎i‎c‎a‎t‎e‎d‎.‎ ‎A‎n‎y‎o‎n‎e‎ ‎c‎l‎a‎i‎m‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎m‎o‎d‎e‎r‎n‎ ‎l‎u‎n‎a‎t‎i‎c‎ ‎l‎e‎f‎t‎ ‎w‎o‎u‎l‎d‎ ‎e‎x‎i‎s‎t‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎i‎s‎ ‎s‎t‎u‎p‎i‎d‎ ‎o‎r‎ ‎p‎u‎r‎p‎o‎s‎e‎f‎u‎l‎l‎y‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎c‎o‎n‎f‎u‎s‎e‎ ‎y‎o‎u‎.‎

T‎h‎e‎ ‎l‎e‎f‎t‎ ‎i‎s‎ ‎c‎u‎r‎r‎e‎n‎t‎l‎y‎ ‎m‎a‎k‎i‎n‎g‎ ‎a‎ ‎h‎a‎r‎d‎ ‎b‎r‎e‎a‎k‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎.‎ ‎T‎h‎a‎t‎ ‎i‎s‎ ‎h‎a‎p‎p‎e‎n‎i‎n‎g‎.‎ ‎W‎e‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎ ‎w‎h‎a‎t‎ ‎t‎h‎a‎t‎ ‎m‎e‎a‎n‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎o‎n‎g‎ ‎t‎e‎r‎m‎.‎ ‎C‎e‎r‎t‎a‎i‎n‎l‎y‎,‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎J‎e‎w‎s‎ ‎a‎t‎ ‎t‎h‎e‎s‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎,‎ ‎a‎n‎d‎ ‎i‎t‎’‎s‎ ‎u‎n‎l‎i‎k‎e‎l‎y‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎w‎i‎l‎l‎ ‎o‎p‎p‎o‎s‎e‎ ‎J‎e‎w‎s‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎I‎s‎r‎a‎e‎l‎.‎ ‎S‎o‎ ‎t‎h‎e‎r‎e‎ ‎w‎i‎l‎l‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎ ‎s‎o‎m‎e‎ ‎J‎e‎w‎i‎s‎h‎ ‎i‎n‎f‎l‎u‎e‎n‎c‎e‎.‎ ‎B‎u‎t‎ ‎t‎h‎e‎s‎e‎ ‎u‎n‎i‎v‎e‎r‎s‎i‎t‎i‎e‎s‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎ ‎o‎n‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎d‎o‎n‎a‎t‎i‎o‎n‎s‎ ‎f‎r‎o‎m‎ ‎Z‎i‎o‎n‎i‎s‎t‎ ‎J‎e‎w‎s‎,‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎p‎r‎i‎m‎a‎r‎y‎ ‎i‎n‎d‎i‎v‎i‎d‎u‎a‎l‎s‎ ‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎f‎o‎r‎ ‎p‎r‎o‎m‎o‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎i‎s‎t‎ ‎“‎t‎r‎i‎g‎g‎e‎r‎e‎d‎ ‎s‎n‎o‎w‎f‎l‎a‎k‎e‎ ‎s‎a‎f‎e‎ ‎s‎p‎a‎c‎e‎ ‎t‎r‎a‎n‎n‎y‎”‎ ‎t‎h‎i‎n‎g‎ ‎y‎o‎u‎ ‎a‎l‎l‎ ‎h‎a‎t‎e‎.‎

M‎a‎y‎b‎e‎ ‎e‎v‎e‎n‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎ ‎i‎s‎ ‎c‎l‎e‎a‎n‎s‎e‎d‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎ ‎J‎e‎w‎ ‎w‎h‎o‎ ‎s‎u‎p‎p‎o‎r‎t‎s‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎t‎h‎e‎y‎ ‎w‎i‎l‎l‎ ‎s‎t‎i‎l‎l‎ ‎h‎a‎v‎e‎ ‎e‎n‎o‎u‎g‎h‎ ‎J‎e‎w‎i‎s‎h‎ ‎i‎n‎f‎l‎u‎e‎n‎c‎e‎ ‎t‎o‎ ‎m‎a‎i‎n‎t‎a‎i‎n‎ ‎s‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎r‎i‎d‎i‎c‎u‎l‎o‎u‎s‎ ‎v‎i‎e‎w‎s‎,‎ ‎b‎u‎t‎ ‎f‎e‎w‎e‎r‎ ‎J‎e‎w‎s‎ ‎m‎e‎a‎n‎s‎ ‎l‎e‎s‎s‎ ‎J‎e‎w‎i‎s‎h‎n‎e‎s‎s‎,‎ ‎j‎u‎s‎t‎ ‎a‎s‎ ‎f‎e‎w‎e‎r‎ ‎w‎h‎i‎t‎e‎s‎ ‎m‎e‎a‎n‎s‎ ‎a‎ ‎l‎e‎s‎s‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎a‎l‎ ‎Z‎i‎m‎b‎a‎b‎w‎e‎.‎



I‎’‎m‎ ‎a‎s‎t‎o‎n‎i‎s‎h‎e‎d‎ ‎t‎h‎a‎t‎ ‎“‎f‎e‎w‎e‎r‎ ‎J‎e‎w‎s‎ ‎m‎e‎a‎n‎s‎ ‎l‎e‎s‎s‎ ‎J‎e‎w‎i‎s‎h‎n‎e‎s‎s‎”‎ ‎i‎s‎ ‎a‎ ‎c‎o‎n‎t‎r‎o‎v‎e‎r‎s‎i‎a‎l‎ ‎p‎o‎s‎i‎t‎i‎o‎n‎.‎ ‎B‎u‎t‎ ‎I‎ ‎s‎e‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎a‎y‎i‎n‎g‎ ‎“‎e‎v‎e‎n‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎,‎ ‎t‎h‎e‎s‎e‎ ‎l‎e‎f‎t‎i‎s‎t‎s‎ ‎w‎o‎u‎l‎d‎ ‎s‎t‎i‎l‎l‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎i‎s‎s‎u‎e‎s‎.‎”‎ ‎W‎h‎e‎n‎e‎v‎e‎r‎ ‎I‎ ‎s‎e‎e‎ ‎i‎t‎,‎ ‎I‎ ‎t‎h‎i‎n‎k‎ ‎“‎h‎e‎y‎,‎ ‎t‎h‎a‎n‎k‎s‎ ‎f‎o‎r‎ ‎t‎h‎a‎t‎ ‎b‎r‎i‎g‎h‎t‎ ‎a‎n‎a‎l‎y‎s‎i‎s‎,‎ ‎M‎r‎.‎ ‎S‎h‎a‎p‎i‎r‎o‎.‎”‎

S‎h‎i‎l‎l‎i‎n‎g‎ ‎i‎s‎ ‎l‎i‎k‎e‎ ‎a‎ ‎b‎a‎c‎t‎e‎r‎i‎a‎l‎ ‎a‎g‎e‎n‎t‎ ‎o‎n‎ ‎y‎o‎u‎r‎ ‎p‎s‎y‎c‎h‎e‎.‎ ‎A‎ ‎l‎i‎t‎t‎l‎e‎ ‎b‎i‎t‎ ‎o‎f‎ ‎b‎a‎c‎t‎e‎r‎i‎a‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎b‎o‎d‎y‎ ‎f‎i‎g‎h‎t‎s‎ ‎i‎t‎ ‎o‎f‎f‎,‎ ‎b‎u‎t‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎b‎a‎c‎t‎e‎r‎i‎a‎,‎ ‎a‎n‎d‎ ‎y‎o‎u‎ ‎g‎e‎t‎ ‎f‎e‎s‎t‎e‎r‎i‎n‎g‎ ‎o‎o‎z‎e‎ ‎a‎n‎d‎ ‎d‎i‎s‎e‎a‎s‎e‎.‎

S‎o‎m‎e‎ ‎o‎f‎ ‎y‎o‎u‎ ‎p‎e‎o‎p‎l‎e‎ ‎h‎a‎v‎e‎ ‎n‎o‎ ‎i‎d‎e‎a‎ ‎h‎o‎w‎ ‎h‎a‎r‎d‎ ‎y‎o‎u‎’‎r‎e‎ ‎b‎e‎i‎n‎g‎ ‎s‎h‎i‎l‎l‎e‎d‎ ‎a‎g‎a‎i‎n‎s‎t‎.‎ ‎T‎h‎a‎t‎’‎s‎ ‎w‎h‎y‎ ‎I‎ ‎k‎e‎e‎p‎ ‎w‎r‎i‎t‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎s‎a‎m‎e‎ ‎a‎r‎t‎i‎c‎l‎e‎ ‎o‎v‎e‎r‎ ‎a‎n‎d‎ ‎o‎v‎e‎r‎ ‎a‎g‎a‎i‎n‎.‎ ‎I‎ ‎k‎e‎e‎p‎ ‎s‎e‎e‎i‎n‎g‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎,‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎a‎l‎l‎e‎g‎e‎d‎l‎y‎ ‎a‎w‎a‎r‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎J‎e‎w‎i‎s‎h‎ ‎p‎r‎o‎b‎l‎e‎m‎,‎ ‎s‎i‎g‎n‎a‎l‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎t‎h‎e‎s‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎.‎

T‎h‎e‎s‎e‎ ‎s‎h‎i‎l‎l‎s‎ ‎a‎r‎e‎ ‎e‎x‎p‎l‎o‎i‎t‎i‎n‎g‎ ‎y‎o‎u‎r‎ ‎g‎u‎t‎t‎u‎r‎a‎l‎ ‎r‎e‎a‎c‎t‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎s‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎a‎s‎ ‎“‎e‎n‎e‎m‎y‎.‎”‎

I‎ ‎d‎o‎n‎’‎t‎ ‎e‎v‎e‎n‎ ‎t‎h‎i‎n‎k‎ ‎m‎o‎s‎t‎ ‎o‎f‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎a‎ ‎c‎l‎e‎a‎r‎ ‎i‎m‎p‎r‎e‎s‎s‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎.‎

L‎o‎o‎k‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎g‎u‎y‎:‎


M‎a‎y‎b‎e‎ ‎h‎e‎’‎s‎ ‎g‎a‎y‎.‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎,‎ ‎I‎ ‎c‎a‎n‎’‎t‎ ‎t‎e‎l‎l‎ ‎w‎i‎t‎h‎ ‎a‎n‎y‎o‎n‎e‎ ‎u‎n‎d‎e‎r‎ ‎3‎0‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎p‎o‎i‎n‎t‎.‎ ‎B‎u‎t‎ ‎h‎e‎ ‎s‎e‎e‎m‎s‎ ‎l‎i‎k‎e‎ ‎a‎ ‎n‎o‎r‎m‎a‎l‎ ‎w‎h‎i‎t‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎y‎o‎u‎t‎h‎ ‎t‎o‎ ‎m‎e‎.‎ ‎(‎T‎h‎e‎ ‎p‎e‎r‎m‎ ‎g‎o‎e‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎a‎b‎o‎v‎e‎ ‎s‎t‎a‎t‎e‎d‎ ‎p‎o‎i‎n‎t‎ ‎a‎b‎o‎u‎t‎ ‎f‎a‎s‎h‎i‎o‎n‎.‎ ‎T‎h‎e‎s‎e‎ ‎m‎a‎n‎-‎p‎e‎r‎m‎s‎ ‎a‎r‎e‎ ‎h‎i‎g‎h‎ ‎f‎a‎s‎h‎i‎o‎n‎.‎)‎

D‎i‎d‎ ‎y‎o‎u‎ ‎s‎e‎e‎ ‎m‎e‎n‎ ‎l‎i‎k‎e‎ ‎t‎h‎a‎t‎ ‎a‎t‎ ‎B‎L‎M‎?‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎I‎ ‎d‎e‎f‎i‎n‎i‎t‎e‎l‎y‎ ‎d‎i‎d‎n‎’‎t‎.‎ ‎B‎L‎M‎ ‎w‎a‎s‎ ‎a‎l‎l‎ ‎b‎l‎a‎c‎k‎s‎,‎ ‎w‎h‎i‎t‎e‎ ‎w‎o‎m‎e‎n‎,‎ ‎t‎r‎a‎n‎n‎i‎e‎s‎ ‎–‎ ‎m‎a‎y‎b‎e‎ ‎a‎ ‎f‎e‎w‎ ‎w‎h‎i‎t‎e‎ ‎m‎a‎l‎e‎s‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎y‎ ‎w‎e‎r‎e‎ ‎a‎l‎l‎ ‎f‎a‎t‎ ‎s‎o‎y‎g‎o‎y‎s‎.‎

W‎h‎o‎ ‎k‎n‎o‎w‎s‎ ‎w‎h‎a‎t‎ ‎t‎h‎a‎t‎ ‎k‎i‎d‎ ‎p‎r‎o‎f‎e‎s‎s‎e‎s‎ ‎a‎s‎ ‎r‎e‎g‎a‎r‎d‎s‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎,‎ ‎t‎r‎a‎n‎n‎i‎e‎s‎,‎ ‎m‎a‎s‎s‎ ‎i‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎,‎ ‎f‎e‎m‎i‎n‎i‎s‎m‎,‎ ‎a‎n‎d‎ ‎s‎o‎ ‎o‎n‎.‎ ‎I‎ ‎a‎s‎s‎u‎m‎e‎ ‎h‎e‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎p‎r‎o‎f‎e‎s‎s‎e‎s‎ ‎s‎u‎p‎p‎o‎r‎t‎.‎ ‎B‎u‎t‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎a‎t‎ ‎h‎i‎m‎,‎ ‎d‎o‎ ‎y‎o‎u‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎o‎s‎e‎ ‎v‎i‎e‎w‎s‎ ‎a‎r‎e‎ ‎u‎n‎c‎h‎a‎n‎g‎e‎a‎b‎l‎e‎?‎

I‎ ‎d‎o‎n‎’‎t‎ ‎t‎h‎i‎n‎k‎ ‎s‎o‎.‎

I‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎c‎o‎m‎i‎n‎g‎ ‎o‎u‎t‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎ ‎t‎h‎a‎t‎ ‎w‎e‎ ‎c‎a‎n‎ ‎w‎o‎r‎k‎ ‎w‎i‎t‎h‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎u‎t‎u‎r‎e‎.‎ ‎O‎f‎ ‎c‎o‎u‎r‎s‎e‎,‎ ‎e‎v‎e‎n‎ ‎i‎f‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎c‎a‎s‎e‎,‎ ‎I‎’‎m‎ ‎1‎0‎0‎%‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎s‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎,‎ ‎r‎e‎g‎a‎r‎d‎l‎e‎s‎s‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
T‎h‎e‎ ‎g‎r‎e‎a‎t‎ ‎b‎l‎u‎e‎ ‎t‎u‎r‎a‎c‎o‎ ‎(‎C‎o‎r‎y‎t‎h‎a‎e‎o‎l‎a‎ ‎c‎r‎i‎s‎t‎a‎t‎a‎)‎ ‎i‎s‎ ‎a‎ ‎b‎i‎r‎d‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎t‎u‎r‎a‎c‎o‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎M‎u‎s‎o‎p‎h‎a‎g‎i‎d‎a‎e‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎w‎i‎d‎e‎s‎p‎r‎e‎a‎d‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎t‎r‎o‎p‎i‎c‎a‎l‎ ‎r‎a‎i‎n‎f‎o‎r‎e‎s‎t‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎a‎ ‎t‎y‎p‎i‎c‎a‎l‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎a‎r‎o‎u‎n‎d‎ ‎7‎5‎ ‎c‎m‎ ‎(‎3‎0‎ ‎i‎n‎)‎ ‎w‎i‎t‎h‎ ‎a‎ ‎m‎a‎s‎s‎ ‎o‎f‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎ ‎k‎g‎ ‎(‎2‎ ‎l‎b‎)‎.‎ ‎T‎h‎e‎ ‎a‎d‎u‎l‎t‎ ‎g‎r‎e‎a‎t‎ ‎b‎l‎u‎e‎ ‎t‎u‎r‎a‎c‎o‎ ‎h‎a‎s‎ ‎p‎r‎e‎d‎o‎m‎i‎n‎a‎n‎t‎l‎y‎ ‎g‎r‎a‎y‎-‎b‎l‎u‎e‎ ‎u‎p‎p‎e‎r‎p‎a‎r‎t‎s‎ ‎w‎i‎t‎h‎ ‎a‎n‎ ‎u‎p‎r‎i‎g‎h‎t‎ ‎b‎l‎u‎e‎-‎b‎l‎a‎c‎k‎ ‎c‎r‎e‎s‎t‎.‎ ‎I‎t‎s‎ ‎b‎i‎l‎l‎ ‎i‎s‎ ‎y‎e‎l‎l‎o‎w‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎t‎w‎o‎ ‎s‎e‎x‎e‎s‎ ‎h‎a‎v‎e‎ ‎s‎i‎m‎i‎l‎a‎r‎ ‎p‎l‎u‎m‎a‎g‎e‎.‎ ‎T‎h‎i‎s‎ ‎g‎r‎e‎a‎t‎ ‎b‎l‎u‎e‎ ‎t‎u‎r‎a‎c‎o‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎K‎i‎b‎a‎l‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎P‎a‎r‎k‎,‎ ‎U‎g‎a‎n‎d‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎G‎i‎l‎e‎s‎ ‎L‎a‎u‎r‎e‎n‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎I‎ ‎f‎i‎r‎e‎d‎ ‎m‎u‎l‎t‎i‎p‎l‎e‎ ‎t‎i‎m‎e‎s‎ ‎a‎t‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎,‎ ‎w‎i‎t‎h‎ ‎m‎y‎ ‎c‎h‎i‎c‎k‎e‎n‎ ‎g‎r‎e‎a‎s‎e‎ ‎g‎u‎n‎'‎s‎ ‎r‎a‎y‎s‎ ‎c‎a‎n‎c‎e‎l‎l‎i‎n‎g‎ ‎o‎u‎t‎ ‎h‎i‎s‎ ‎r‎a‎i‎n‎b‎o‎w‎ ‎s‎h‎o‎t‎s‎.‎ ‎A‎f‎t‎e‎r‎ ‎a‎n‎ ‎h‎o‎u‎r‎ ‎o‎r‎ ‎s‎o‎ ‎o‎f‎ ‎g‎u‎n‎f‎i‎r‎e‎,‎ ‎I‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎t‎a‎k‎e‎ ‎m‎y‎ ‎l‎i‎f‎e‎ ‎a‎n‎d‎ ‎e‎n‎d‎ ‎i‎t‎ ‎f‎o‎r‎ ‎b‎o‎t‎h‎ ‎o‎f‎ ‎u‎s‎,‎ ‎a‎s‎ ‎I‎ ‎s‎t‎o‎o‎d‎ ‎o‎f‎f‎ ‎t‎h‎e‎ ‎e‎d‎g‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎l‎i‎f‎f‎,‎ ‎I‎ ‎p‎u‎l‎l‎e‎d‎ ‎h‎i‎m‎ ‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎m‎e‎ ‎a‎s‎ ‎I‎ ‎j‎u‎m‎p‎e‎d‎ ‎o‎f‎f‎,‎ ‎f‎a‎l‎l‎i‎n‎g‎ ‎i‎n‎t‎o‎ ‎a‎ ‎t‎r‎e‎e‎.‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎ ‎h‎o‎w‎e‎v‎e‎r‎ ‎p‎a‎r‎a‎c‎h‎u‎t‎e‎d‎ ‎a‎n‎d‎ ‎w‎a‎s‎ ‎r‎e‎s‎c‎u‎e‎d‎ ‎b‎y‎ ‎a‎ ‎h‎e‎l‎i‎c‎o‎p‎t‎e‎r‎ ‎d‎r‎i‎v‎e‎n‎ ‎b‎y‎ ‎h‎i‎s‎ ‎c‎h‎i‎n‎k‎ ‎c‎o‎l‎l‎e‎a‎g‎u‎e‎ ‎D‎r‎.‎ ‎C‎h‎e‎n‎ ‎a‎l‎o‎n‎g‎ ‎w‎i‎t‎h‎ ‎n‎e‎u‎r‎o‎s‎u‎r‎g‎e‎o‎n‎ ‎D‎r‎.‎ ‎S‎t‎r‎a‎u‎s‎s‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎t‎h‎e‎ ‎h‎e‎l‎i‎c‎o‎p‎t‎e‎r‎ ‎c‎r‎a‎s‎h‎e‎d‎ ‎i‎n‎t‎o‎ ‎p‎o‎w‎e‎r‎l‎i‎n‎e‎s‎ ‎s‎h‎o‎r‎t‎l‎y‎ ‎a‎f‎t‎e‎r‎ ‎t‎a‎k‎e‎o‎f‎f‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎ ‎t‎u‎r‎n‎e‎d‎ ‎o‎n‎ ‎C‎N‎N‎ ‎s‎h‎o‎r‎t‎l‎y‎ ‎a‎f‎t‎e‎r‎,‎ ‎a‎n‎d‎ ‎a‎u‎t‎h‎o‎r‎i‎t‎i‎e‎s‎ ‎r‎e‎p‎o‎r‎t‎e‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎r‎e‎c‎o‎v‎e‎r‎e‎d‎ ‎t‎h‎e‎ ‎b‎o‎d‎i‎e‎s‎ ‎o‎f‎ ‎D‎r‎.‎ ‎S‎t‎r‎a‎u‎s‎s‎ ‎a‎n‎d‎ ‎D‎r‎.‎ ‎C‎h‎e‎n‎,‎ ‎h‎o‎w‎e‎v‎e‎r‎ ‎t‎h‎e‎ ‎b‎o‎d‎y‎ ‎o‎f‎ ‎D‎r‎.‎ ‎ ‎N‎i‎g‎g‎e‎r‎ ‎p‎e‎n‎i‎s‎ ‎i‎s‎ ‎s‎t‎i‎l‎l‎ ‎a‎t‎ ‎l‎a‎r‎g‎e‎.‎"
Ka0XcWZ3,RedditAPIException: DELETED_COMMENT: 'that comment has been deleted' on field 'parent',basedcount_bot,Python,Friday 3rd of May 2024 08:40:58 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 294, in read_comments
    await comment.reply(reply_message)
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/reddit/mixins/replyable.py"", line 44, in reply
    comments = await self._reddit.post(API_PATH[""comment""], data=data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 936, in post
    raise last_exception
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 920, in post
    return await self._objectify_request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 566, in _objectify_request
    return self._objector.objectify(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/objector.py"", line 239, in objectify
    raise RedditAPIException(errors)
asyncpraw.exceptions.RedditAPIException: DELETED_COMMENT: 'that comment has been deleted' on field 'parent'
"
szLx2SQZ,Minecraft Modem Send,hornedcommando,Lua,Friday 3rd of May 2024 08:38:59 AM CDT,"--Work in Progress
--Desc: A Modem program which attempts to send items from a connected inventory in the network to a different connected inventory in the network

--By: hornedcommando

function input()
    while true do
        write(""from?\n"")
        fromInv = peripheral.wrap(read())
        write(""to?\n"")
        toInv = peripheral.wrap(read())
        write(""item? (Press Enter to specify none, if no item is specified all types will be sent)\n"")
        --TODO: probably needs an item map, don't want to have to type out the full item name, should be colloquial like ""coal"" or ""iron""
        item = read()
        write(""amount? (Press Enter to specify none, if no amount is specified all will be sent\n"")
        amount = tonumber(read())
        break
    end
end
 
function send(from, to, item, amount)
    --Check if from and to are valid peripherals
    if not peripheral.isPresent(from) then
        print(""Error: No peripheral found on side "" .. from)
        return
    end
    if not peripheral.isPresent(to) then
        print(""Error: No peripheral found on side "" .. to)
        return
    end
    --Check if from has an inventory
    local fromInv = peripheral.wrap(from)
    if not fromInv or not fromInv.list then
        print(""Error: No inventory found on side "" .. from)
        return
    end
    --Check if to has an inventory
    local toInv = peripheral.wrap(to)
    if not toInv or not toInv.list then
        print(""Error: No inventory found on side "" .. to)
        return
    end
    --Check if the item exists in from
    local itemSlot
    for slot, itemData in pairs(fromInv.list()) do
        if itemData.name == item then
            itemSlot = slot
            break
        end
    end
    if not itemSlot then
        print(""Error: Item "" .. item .. "" not found in "" .. from)
        return
    end

    --Check if there are enough items in from
    local itemCount = fromInv.getItemCount(itemSlot)
    if itemCount < amount then
        print(""Error: Not enough "" .. item .. "" in "" .. from)
        return
    end

    -- Push items from from to to
    fromInv.pushItems(peripheral.getName(to), itemSlot, amount)
    print(""Sent "" .. amount .. "" "" .. item .. "" from "" .. from .. "" to "" .. to)
end
 "
0rLBqt9i,Longest Subarray of 1's After Deleting One Element,jayati,C++,Friday 3rd of May 2024 08:23:52 AM CDT,"class Solution {
public:
    int longestSubarray(vector<int>& nums) {
         int i,j,m=0;
        vector<int>v;
        v.push_back(-1);
        for(i=0;i<nums.size();i++){
            if(nums[i]==0)
            v.push_back(i);
        }
        v.push_back(i);

        for(i=1;i<v.size()-1;i++){
            m=max(m,v[i+1]-v[i-1]-2);
        }
        if(v.size()==2)
        return nums.size()-1;

        return m;
        
    }
};"
FPyDXjVR,psi tabs patch,KukuRuzo,C++,Friday 3rd of May 2024 08:11:58 AM CDT,"diff --git a/src/widgets/psitabwidget.cpp b/src/widgets/psitabwidget.cpp
index d4a0d98a..930a8680 100644
--- a/src/widgets/psitabwidget.cpp
+++ b/src/widgets/psitabwidget.cpp
@@ -45,6 +45,7 @@ PsiTabWidget::PsiTabWidget(QWidget *parent) : QWidget(parent)
     tabBar_->setMultiRow(multiRow);
     tabBar_->setUsesScrollButtons(!multiRow);
     tabBar_->setCurrentIndexAlwaysAtBottom(currentIndexAlwaysAtBottom);
+    tabBar_->setExpanding(false);
     layout_ = new QVBoxLayout(this);
     layout_->setContentsMargins(0, 0, 0, 0);
     layout_->setSpacing(0);
@@ -176,6 +177,7 @@ void PsiTabWidget::addTab(QWidget *widget, QString name, const QIcon &icon)
     }
     widgets_.append(widget);
     stacked_->addWidget(widget);
+
     if (PsiOptions::instance()->getOption(""options.ui.tabs.show-tab-icons"").toBool())
         tabBar_->addTab(icon, name);
     else
@@ -265,7 +267,12 @@ void PsiTabWidget::setTabText(QWidget *widget, const QString &label)
 {
     int index = widgets_.indexOf(widget);
     if (index != -1) {
-        tabBar_->setTabText(index, label);
+        QString shortLabel = label;
+        if(label.length() > 40) {
+            shortLabel = label.left(37) + ""..."";
+            tabBar_->setTabToolTip(index, label);
+        }
+        tabBar_->setTabText(index, shortLabel);
     }
 }
 
diff --git a/src/widgets/tabbar.cpp b/src/widgets/tabbar.cpp
index 3d05d7a2..78764bf7 100644
--- a/src/widgets/tabbar.cpp
+++ b/src/widgets/tabbar.cpp
@@ -324,7 +324,7 @@ void TabBar::Private::layoutTabs()
     if (rows == 1 || hackedTabs.size() == 1) {
         // Only one row in bar
         rows       = 1;
-        normalRows = 1;
+        //normalRows = 1;
         layout << RowSf();
         layout[0].number = 0;
         layout[0].sf     = qMin(1.5, sf);
@@ -405,7 +405,7 @@ void TabBar::Private::layoutTabs()
             } else {
                 if (j < endTab - 1) {
                     currentRowWidth += tabWidth;
-                    tab.position = QStyleOptionTab::Middle;
+                    tab.position = QStyleOptionTab::Beginning;//QStyleOptionTab::Middle;
                 } else {
                     tab.position = QStyleOptionTab::End;
 
"
Dg1wTcBb,Untitled,coinwalk,JavaScript,Friday 3rd of May 2024 08:07:11 AM CDT,https://monovm.com/blog/how-to-create-a-windows-live-usb/
MQw8rG61,pilha_estatica.c,Allenoboy,C,Friday 3rd of May 2024 07:26:15 AM CDT,"# define MAX_CAPACITY  4
# define CHEIA         3
# define VAZIA        -1

# include <stdio.h>
# include <stdlib.h>



typedef struct
{
       int vetor [ MAX_CAPACITY ];
       int topo;
}
Pilha;

Pilha init_Pilha ( void )
{
     Pilha pilha;
     pilha . topo = VAZIA;

     return pilha;
}

void new_Pilha ( Pilha * pilha ) { pilha -> topo = VAZIA; }

void push ( Pilha * pilha , int valor )
{
    if ( pilha -> topo == CHEIA )
    {
      printf ( ""- A pilha está cheia!\n"" );
      return;   
    }

    pilha -> vetor [ ++ pilha -> topo ] = valor;
    printf ( ""- Adicionado no índice da pilha %d o valor [ %d ]\n"" , pilha -> topo , pilha -> vetor [ pilha -> topo ] );
}

void pop ( Pilha * pilha )
{
    if ( pilha -> topo == VAZIA )
    {
      printf ( ""- A pilha está vazia!\n"" );
      return;  
    }

    printf ( ""- Removido do índice %d da pilha o valor [ %d ]\n"" , pilha -> topo , pilha -> vetor [ pilha -> topo ] );
    pilha -> vetor [ pilha -> topo ] = -999;
    pilha -> topo --;
}

int main ()
{   
   system ( ""CHCP 65001 > nul"" );

   Pilha pilha; new_Pilha ( &pilha );
   
   push ( &pilha , 44 );
   push ( &pilha , 55 );
   push ( &pilha , 22 );
   push ( &pilha , 11 );
   push ( &pilha , 99 );

   pop ( &pilha );
   printf ( ""Dado ainda está lá: %d\n"" , pilha . vetor [ 3 ] );

   push ( &pilha , 77 );
   printf ( ""Dado ainda está lá: %d\n"" , pilha . vetor [ 3 ] );
}"
vjnCqwgZ,PlayerCount,Senzy1,Lua,Friday 3rd of May 2024 07:05:45 AM CDT,playercount
ZkmsfAua,ASA Arkshop plugin,squaredsausage,JSON,Friday 3rd of May 2024 06:58:00 AM CDT,"{
  ""Mysql"": {
   ""UseMysql"": true,
   ""MysqlHost"": ""localhost"",
   ""MysqlUser"": ""root"",
   ""MysqlPass"": """",
   ""MysqlDB"": ""ark1"",
   ""MysqlPort"": 3306
  },
  ""General"": {
   ""Discord"": {
    ""Enabled"": true,
    ""SenderName"": ""ViceBot"",
    ""URL"": ""https://discord.com/api/webhooks/1179947148805165066/U2tq4VKUBnVPxV7FF0itCTBvGUzbdk7O9DnZwQmnz62nlLPK9-pgvVthLjE90XMwyHfZ""
   },
   ""TimedPointsReward"": {
    ""Enabled"": true,
    ""StackRewards"": false,
    ""AlwaysSendNotifications"": false,
    ""Interval"": 60,
    ""Groups"": {
         ""admins"": {
             ""Amount"": 50
         },
         ""supporter"": {
             ""Amount"": 40
         },
         ""donator"": {
             ""Amount"": 30
         },
         ""vip"": {
             ""Amount"": 25
         },
         ""default"": {
             ""Amount"": 10
         }
    }
   },
   ""GiveDinosInCryopods"": true,
   ""UseSoulTraps"": false,
   ""CryoLimitedTime"": false,
   ""CryoItemPath"": ""/Cryopods/Cryopods/PrimalItem_WeaponEmptyCryopod_Mod.PrimalItem_WeaponEmptyCryopod_Mod"",
   ""ItemsPerPage"": 25,
   ""ShopDisplayTime"": 5,
   ""ShopTextSize"": 1,
   ""DbPathOverride"": """",
   ""DefaultKit"": ""00-starter""
  },
 ""Kits"": {
     ""00-starter"": {
       ""DefaultAmount"": 3,
       ""Price"": 100,
       ""Description"": ""Starter kit"",
       ""Items"": [
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 50,
             ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Dinos/Moth/PrimalItemArmor_MothSaddle.PrimalItemArmor_MothSaddle'""
         },
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 20,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponStoneHatchet.PrimalItem_WeaponStoneHatchet'""
         },
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 20,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponStonePick.PrimalItem_WeaponStonePick'""
         },
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 20,
             ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothShirt.PrimalItemArmor_DesertClothShirt'""
         },
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 20,
             ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothPants.PrimalItemArmor_DesertClothPants'""
         },
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 20,
             ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothGloves.PrimalItemArmor_DesertClothGloves'""
         },
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 20,
             ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothGogglesHelmet.PrimalItemArmor_DesertClothGogglesHelmet'""
         },
         {
             ""Amount"": 1,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 20,
             ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothBoots.PrimalItemArmor_DesertClothBoots'""
         },
         {
             ""Amount"": 2,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 0,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_IcedWaterJarRefill.PrimalItemConsumable_IcedWaterJarRefill'""
         },
         {
             ""Amount"": 25,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Armor"": 0,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_CookedMeat_Jerky.PrimalItemConsumable_CookedMeat_Jerky'""
         }
       ],
       ""Dinos"": [
         {
             ""Level"": 100,
             ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Dinos/Moth/Moth_Character_BP.Moth_Character_BP'""
         }
       ]
      },
      ""vip"": {
        ""DefaultAmount"": 1,
        ""Description"": ""Vip kit"",
        ""Permissions"": ""Admins,Vip"",
        ""Items"": [
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_PteroSaddle.PrimalItemArmor_PteroSaddle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ArgentavisSaddle.PrimalItemArmor_ArgentavisSaddle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponMetalHatchet.PrimalItem_WeaponMetalHatchet'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponMetalPick.PrimalItem_WeaponMetalPick'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponSickle.PrimalItem_WeaponSickle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalShirt.PrimalItemArmor_MetalShirt'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalPants.PrimalItemArmor_MetalPants'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalGloves.PrimalItemArmor_MetalGloves'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalHelmet.PrimalItemArmor_MetalHelmet'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalBoots.PrimalItemArmor_MetalBoots'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_WaterJarRefill.PrimalItemConsumable_WaterJarRefill'""
          },
          {
              ""Amount"": 50,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_CookedMeat_Jerky.PrimalItemConsumable_CookedMeat_Jerky'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponCrossbow.PrimalItem_WeaponCrossbow'""
          },
          {
              ""Amount"": 50,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItemAmmo_ArrowTranq.PrimalItemAmmo_ArrowTranq'""
          }
        ],
        ""Dinos"": [
          {
              ""Level"": 150,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Ptero/Ptero_Character_BP.Ptero_Character_BP'""
          },
          {
              ""Level"": 150,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Argentavis/Argent_Character_BP.Argent_Character_BP'""
          }
        ]
      },
      ""donator"": {
        ""DefaultAmount"": 1,
        ""Description"": ""Donator kit"",
        ""Permissions"": ""Admins,Donator"",
        ""Items"": [
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_PteroSaddle.PrimalItemArmor_PteroSaddle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ArgentavisSaddle.PrimalItemArmor_ArgentavisSaddle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_DoedSaddle.PrimalItemArmor_DoedSaddle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_AnkyloSaddle.PrimalItemArmor_AnkyloSaddle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponMetalHatchet.PrimalItem_WeaponMetalHatchet'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponMetalPick.PrimalItem_WeaponMetalPick'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponSickle.PrimalItem_WeaponSickle'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalShirt.PrimalItemArmor_MetalShirt'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalPants.PrimalItemArmor_MetalPants'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalGloves.PrimalItemArmor_MetalGloves'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalHelmet.PrimalItemArmor_MetalHelmet'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Armor"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Metal/PrimalItemArmor_MetalBoots.PrimalItemArmor_MetalBoots'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_WaterJarRefill.PrimalItemConsumable_WaterJarRefill'""
          },
          {
              ""Amount"": 100,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_CookedMeat_Jerky.PrimalItemConsumable_CookedMeat_Jerky'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponOneShotRifle.PrimalItem_WeaponOneShotRifle'""
          },
          {
              ""Amount"": 100,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItemAmmo_TranqDart.PrimalItemAmmo_TranqDart'""
          }
        ],
        ""Dinos"": [
          {
              ""Level"": 150,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Ptero/Ptero_Character_BP.Ptero_Character_BP'""
          },
          {
              ""Level"": 150,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Argentavis/Argent_Character_BP.Argent_Character_BP'""
          },
          {
              ""Level"": 150,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Ankylo/Ankylo_Character_BP.Ankylo_Character_BP'""
          },
          {
              ""Level"": 150,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Doedicurus/Doed_Character_BP.Doed_Character_BP'""
          }
        ]
      },
          ""MegaBuildingPack"": {
          ""DefaultAmount"": 0,
          ""Description"": ""Mega Building Pack"",
          ""Items"": [
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 1000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Stone/PrimalItemStructure_StoneFloor.PrimalItemStructure_StoneFloor'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 1000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/StructuresPlus/Structures/Walls_L/Stone/PrimalItemStructure_LargeWall_Stone.PrimalItemStructure_LargeWall_Stone'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 500,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Stone/PrimalItemStructure_StoneCeiling.PrimalItemStructure_StoneCeiling'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 500,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Greenhouse/PrimalItemStructure_GreenhouseWall.PrimalItemStructure_GreenhouseWall'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Greenhouse/PrimalItemStructure_GreenhouseCeiling.PrimalItemStructure_GreenhouseCeiling'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/StructuresPlus/Structures/Walls_L/Stone/PrimalItemStructure_LargeWall_Stone.PrimalItemStructure_LargeWall_Stone'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 500,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Greenhouse/PrimalItemStructure_GreenhouseRoof.PrimalItemStructure_GreenhouseRoof'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 50,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Stone/PrimalItemStructure_StoneGateframe.PrimalItemStructure_StoneGateframe'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 50,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Stone/PrimalItemStructure_StoneGate.PrimalItemStructure_StoneGate'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 500,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Stone/PrimalItemStructure_StonePillar.PrimalItemStructure_StonePillar'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 4,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_AnvilBench.PrimalItemStructure_AnvilBench'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 4,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_Fabricator.PrimalItemStructure_Fabricator'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 4,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_ChemBench.PrimalItemStructure_ChemBench'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 4,
              ""Blueprint"":  ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_IndustrialForge.PrimalItemStructure_IndustrialForge'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_AirConditioner.PrimalItemStructure_AirConditioner'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 4,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Pipes/PrimalItemStructure_PowerGenerator.PrimalItemStructure_PowerGenerator'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 10,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_IceBox.PrimalItemStructure_IceBox'""
            }, 
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 5000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_MetalIngot.PrimalItemResource_MetalIngot'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 5000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Polymer.PrimalItemResource_Polymer'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 5000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Obsidian.PrimalItemResource_Obsidian'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 5000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_ChitinPaste.PrimalItemResource_ChitinPaste'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Element.PrimalItemResource_Element'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 100,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/StructuresPlus/Misc/DedicatedStorage/PrimalItemStructure_DedicatedStorage.PrimalItemStructure_DedicatedStorage'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 2,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekGenerator.PrimalItemStructure_TekGenerator'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 1000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_SubstrateAbsorbent.PrimalItemResource_SubstrateAbsorbent'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 6,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_Bed_Modern.PrimalItemStructure_Bed_Modern'""
            },
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 25,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_StorageBox_Huge.PrimalItemStructure_StorageBox_Huge'""
            }
          ]
      },
      ""01-Ten"": {
        ""DefaultAmount"": 0,
        ""Description"": ""£10 Pack"",
        ""Items"": [
          {
              ""Amount"": 2,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_Fabricator.PrimalItemStructure_Fabricator'""
          },
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Pipes/PrimalItemStructure_PowerGenerator.PrimalItemStructure_PowerGenerator'""
          },
          {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 15,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_HeavyTurret.PrimalItemStructure_HeavyTurret'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 25,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalWall.PrimalItemStructure_MetalWall'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 25,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalPillar.PrimalItemStructure_MetalPillar'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 25,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalCeiling.PrimalItemStructure_MetalCeiling'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 5000,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItemAmmo_AdvancedRifleBullet.PrimalItemAmmo_AdvancedRifleBullet'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 25,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalFloor.PrimalItemStructure_MetalFloor'""
          }
         ]
       },
       ""02-Thirty"": {
        ""DefaultAmount"": 0,
        ""Description"": ""£30 Pack"",
        ""Items"": [
          {
              ""Amount"": 1,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekReplicator.PrimalItemStructure_TekReplicator'""
          },
          {
              ""Amount"": 2,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekGenerator.PrimalItemStructure_TekGenerator'""
          },
          {
              ""Amount"": 350,
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Element.PrimalItemResource_Element'""
          },
          {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 30,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_HeavyTurret.PrimalItemStructure_HeavyTurret'""
          },
          {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 30,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TurretTek.PrimalItemStructure_TurretTek'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 50,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalWall.PrimalItemStructure_MetalWall'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 50,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalPillar.PrimalItemStructure_MetalPillar'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 50,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalCeiling.PrimalItemStructure_MetalCeiling'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 10000,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItemAmmo_AdvancedRifleBullet.PrimalItemAmmo_AdvancedRifleBullet'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 50,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalFloor.PrimalItemStructure_MetalFloor'""
          }
         ]
      },
      ""03-Sixty"": {
       ""DefaultAmount"": 0,
       ""Description"": ""£60 Pack"",
       ""Items"": [
         {
             ""Amount"": 2,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekReplicator.PrimalItemStructure_TekReplicator'""
         },
         {
             ""Amount"": 4,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekGenerator.PrimalItemStructure_TekGenerator'""
         },
         {
             ""Amount"": 700,
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Element.PrimalItemResource_Element'""
         },
         {
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Amount"": 65,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_HeavyTurret.PrimalItemStructure_HeavyTurret'""
         },
         {
             ""Quality"": 0,
             ""ForceBlueprint"": false,
             ""Amount"": 65,
             ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TurretTek.PrimalItemStructure_TurretTek'""
         },
         {
           ""Quality"": 0,
           ""ForceBlueprint"": false,
           ""Amount"": 125,
           ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalWall.PrimalItemStructure_MetalWall'""
         },
         {
           ""Quality"": 0,
           ""ForceBlueprint"": false,
           ""Amount"": 125,
           ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalPillar.PrimalItemStructure_MetalPillar'""
         },
         {
           ""Quality"": 0,
           ""ForceBlueprint"": false,
           ""Amount"": 125,
           ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalCeiling.PrimalItemStructure_MetalCeiling'""
         },
         {
           ""Quality"": 0,
           ""ForceBlueprint"": false,
           ""Amount"": 15000,
           ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItemAmmo_AdvancedRifleBullet.PrimalItemAmmo_AdvancedRifleBullet'""
         },
         {
           ""Quality"": 0,
           ""ForceBlueprint"": false,
           ""Amount"": 125,
           ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalFloor.PrimalItemStructure_MetalFloor'""
          }
        ]
      },
      ""04 - Hundred"": {
        ""DefaultAmount"": 0,
        ""Description"": ""£100 Pack"",
        ""Items"": [
          {
            ""Amount"": 4,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekReplicator.PrimalItemStructure_TekReplicator'""
          },
          {
            ""Amount"": 10,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekGenerator.PrimalItemStructure_TekGenerator'""
          },
          {
            ""Amount"": 1300,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_HeavyTurret.PrimalItemStructure_HeavyTurret'""
          },
          {
            ""Amount"": 120,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TurretTek.PrimalItemStructure_TurretTek'""
          },
          {
            ""Amount"": 200,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalWall.PrimalItemStructure_MetalWall'""
          },
          {
            ""Amount"": 200,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalPillar.PrimalItemStructure_MetalPillar'""
          },
          {
            ""Amount"": 200,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalCeiling.PrimalItemStructure_MetalCeiling'""
          },
          {
            ""Amount"": 30000,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItemAmmo_AdvancedRifleBullet.PrimalItemAmmo_AdvancedRifleBullet'""
          },
          {
            ""Amount"": 200,
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Metal/PrimalItemStructure_MetalFloor.PrimalItemStructure_MetalFloor'""
          }
        ]
      },
          ""Gigas"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Giga Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Giganotosaurus/Gigant_Character_BP.Gigant_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_GigantSaddle.PrimalItemArmor_GigantSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Giganotosaurus/Gigant_Character_BP.Gigant_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_GigantSaddle.PrimalItemArmor_GigantSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Carchas"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Carcha Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Carcharodontosaurus/Carcha_Character_BP.Carcha_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_CarchaSaddle.PrimalItemArmor_CarchaSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Carcharodontosaurus/Carcha_Character_BP.Carcha_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_CarchaSaddle.PrimalItemArmor_CarchaSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Stegos"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Stego Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Stego/Stego_Character_BP.Stego_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_StegoSaddle.PrimalItemArmor_StegoSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Stego/Stego_Character_BP.Stego_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_StegoSaddle.PrimalItemArmor_StegoSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Quetz"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Quetzal Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Quetzalcoatlus/Quetz_Character_BP.Quetz_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_QuetzSaddle_Platform.PrimalItemArmor_QuetzSaddle_Platform'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Quetzalcoatlus/Quetz_Character_BP.Quetz_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_QuetzSaddle_Platform.PrimalItemArmor_QuetzSaddle_Platform'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Thylas"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Thyla Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Thylacoleo/Thylacoleo_Character_BP.Thylacoleo_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ThylacoleoSaddle.PrimalItemArmor_ThylacoleoSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Thylacoleo/Thylacoleo_Character_BP.Thylacoleo_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ThylacoleoSaddle.PrimalItemArmor_ThylacoleoSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Rhinos"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Rhino Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/WoollyRhino/Rhino_Character_BP.Rhino_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_RhinoSaddle.PrimalItemArmor_RhinoSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/WoollyRhino/Rhino_Character_BP.Rhino_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_RhinoSaddle.PrimalItemArmor_RhinoSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Theris"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Theri Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Therizinosaurus/Therizino_Character_BP.Therizino_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TherizinosaurusSaddle.PrimalItemArmor_TherizinosaurusSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Therizinosaurus/Therizino_Character_BP.Therizino_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TherizinosaurusSaddle.PrimalItemArmor_TherizinosaurusSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Racers"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Paracer Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Paraceratherium/Paracer_Character_BP.Paracer_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ParacerSaddle_Platform.PrimalItemArmor_ParacerSaddle_Platform'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Paraceratherium/Paracer_Character_BP.Paracer_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ParacerSaddle_Platform.PrimalItemArmor_ParacerSaddle_Platform'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Basilos"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Basilo Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Basilosaurus/Basilosaurus_Character_BP.Basilosaurus_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_BasiloSaddle.PrimalItemArmor_BasiloSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Basilosaurus/Basilosaurus_Character_BP.Basilosaurus_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_BasiloSaddle.PrimalItemArmor_BasiloSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""PT"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Pteranodon Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Ptero/Ptero_Character_BP.Ptero_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_PteroSaddle.PrimalItemArmor_PteroSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Ptero/Ptero_Character_BP.Ptero_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_PteroSaddle.PrimalItemArmor_PteroSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Tapejaras"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Tapejara Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Tapejara/Tapejara_Character_BP.Tapejara_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TapejaraSaddle.PrimalItemArmor_TapejaraSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Tapejara/Tapejara_Character_BP.Tapejara_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TapejaraSaddle.PrimalItemArmor_TapejaraSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
          ""Carbos"": {
            ""DefaultAmount"": 0,
            ""Description"": ""Carbonemys Breeding Pair"",
            ""Dinos"": [
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Turtle/Turtle_Character_BP.Turtle_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TurtleSaddle.PrimalItemArmor_TurtleSaddle'"",
                ""Gender"": ""female""
              },
              {
                ""Level"": 225,
                ""Type"": ""dino"",
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Turtle/Turtle_Character_BP.Turtle_Character_BP'"",
                ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TurtleSaddle.PrimalItemArmor_TurtleSaddle'"",
                ""Gender"": ""male""
              }
            ]
          },
    ""Rexs"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Rex Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Rex/Rex_Character_BP.Rex_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_RexSaddle.PrimalItemArmor_RexSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Rex/Rex_Character_BP.Rex_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_RexSaddle.PrimalItemArmor_RexSaddle'"",
          ""Gender"": ""male""
        }
      ]  
    },
    ""Tusos"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Tuso Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Tusoteuthis/Tusoteuthis_Character_BP.Tusoteuthis_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TusoSaddle.PrimalItemArmor_TusoSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Tusoteuthis/Tusoteuthis_Character_BP.Tusoteuthis_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TusoSaddle.PrimalItemArmor_TusoSaddle'"",
          ""Gender"": ""male""
        }
      ]  
    },
    ""Yutys"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Yuty Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Yutyrannus/Yutyrannus_Character_BP.Yutyrannus_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_YutySaddle.PrimalItemArmor_YutySaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Yutyrannus/Yutyrannus_Character_BP.Yutyrannus_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_YutySaddle.PrimalItemArmor_YutySaddle'"",
          ""Gender"": ""male""
        }
      ]  
    },
    ""Spinos"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Spino Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Spino/Spino_Character_BP.Spino_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_SpinoSaddle.PrimalItemArmor_SpinoSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Spino/Spino_Character_BP.Spino_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_SpinoSaddle.PrimalItemArmor_SpinoSaddle'"",
          ""Gender"": ""male""
        }
      ]  
    },
    ""Procopts"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Procopt Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Procoptodon/Procoptodon_Character_BP.Procoptodon_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ProcoptodonSaddle.PrimalItemArmor_ProcoptodonSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Procoptodon/Procoptodon_Character_BP.Procoptodon_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ProcoptodonSaddle.PrimalItemArmor_ProcoptodonSaddle'"",
          ""Gender"": ""male""
        }
      ] 
    },
    ""Daeodons"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Daeodon Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Daeodon/Daeodon_Character_BP.Daeodon_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_DaeodonSaddle.PrimalItemArmor_DaeodonSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Daeodon/Daeodon_Character_BP.Daeodon_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_DaeodonSaddle.PrimalItemArmor_DaeodonSaddle'"",
          ""Gender"": ""male""
        }
      ] 
    },
    ""Ankylos"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Ankylo Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Ankylo/Ankylo_Character_BP.Ankylo_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_AnkyloSaddle.PrimalItemArmor_AnkyloSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Ankylo/Ankylo_Character_BP.Ankylo_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_AnkyloSaddle.PrimalItemArmor_AnkyloSaddle'"",
          ""Gender"": ""male""
        }
      ] 
    },              
      ""Megalodons"": {
        ""DefaultAmount"": 0,
        ""Description"": ""Megalodon Breeding Pair"",
        ""Dinos"": [
          {
            ""Level"": 225,
            ""Type"": ""dino"",
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Megalodon/Megalodon_Character_BP.Megalodon_Character_BP'"",
            ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_MegalodonSaddle.PrimalItemArmor_MegalodonSaddle'"",
            ""Gender"": ""female""
          },
          {
            ""Level"": 225,
            ""Type"": ""dino"",
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Megalodon/Megalodon_Character_BP.Megalodon_Character_BP'"",
            ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_MegalodonSaddle.PrimalItemArmor_MegalodonSaddle'"",
            ""Gender"": ""male""
          }
        ]
      }
    },   
    ""Argentavis"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Argentavis Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Argentavis/Argent_Character_BP.Argent_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ArgentavisSaddle.PrimalItemArmor_ArgentavisSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Argentavis/Argent_Character_BP.Argent_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_ArgentavisSaddle.PrimalItemArmor_ArgentavisSaddle'"",
          ""Gender"": ""male""
        }
      ]
    },
    ""Trike"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Trike Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Trike/Trike_Character_BP.Trike_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TrikeSaddle.PrimalItemArmor_TrikeSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Trike/Trike_Character_BP.Trike_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_TrikeSaddle.PrimalItemArmor_TrikeSaddle'"",
          ""Gender"": ""male""
        }
      ]
    },
    ""Mammoth"": {
      ""DefaultAmount"": 0,
      ""Description"": ""Mammoth Breeding Pair"",
      ""Dinos"": [
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Mammoth/Mammoth_Character_BP.Mammoth_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_MammothSaddle.PrimalItemArmor_MammothSaddle'"",
          ""Gender"": ""female""
        },
        {
          ""Level"": 225,
          ""Type"": ""dino"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Mammoth/Mammoth_Character_BP.Mammoth_Character_BP'"",
          ""SaddleBlueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Armor/Saddles/PrimalItemArmor_MammothSaddle.PrimalItemArmor_MammothSaddle'"",
          ""Gender"": ""male""
        }
      ]
    },
 ""ShopItems"": {
    ""03-ingots1000"": {
        ""Type"": ""item"",
        ""Description"": ""Resource | 1000x Metal Ingots | 50 Points"",
        ""Price"": 50,
        ""Items"": [
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1000,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_MetalIngot.PrimalItemResource_MetalIngot'""
          }
        ]
    },
      ""04-Element1000"": {
        ""Type"": ""item"",
        ""Description"": ""Resource | 1000x Element | 1000 Points"",
        ""Price"": 1000,
        ""Items"": [
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1000,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Element.PrimalItemResource_Element'""
          }
        ]
      },
        ""05-CP1000"": {
            ""Type"": ""item"",
            ""Description"": ""Resource | 1000x Cementing Paste | 50 Points"",
            ""Price"": 150,
            ""Items"": [
              {
                ""Quality"": 0,
                ""ForceBlueprint"": false,
                ""Amount"": 1000,
                ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_ChitinPaste.PrimalItemResource_ChitinPaste'""
              }
            ]
      },
        ""06-GP1000"": {
          ""Type"": ""item"",
          ""Description"": ""Resource | 1000x Gunpowder | 50 Points"",
          ""Price"": 150,
          ""Items"": [
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 1000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Gunpowder.PrimalItemResource_Gunpowder'""
            }
          ]
      },
    ""07-Charcoal1000"": {
        ""Type"": ""item"",
        ""Description"": ""Resource | 1000x Charcoal | 50 Points"",
        ""Price"": 50,
        ""Items"": [
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1000,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Charcoal.PrimalItemResource_Charcoal'""
          }
        ]
    },
    ""08-Flint1000"": {
      ""Type"": ""item"",
      ""Description"": ""Resource | 1000x Flint | 50 Points"",
      ""Price"": 50,
      ""Items"": [
        {
          ""Quality"": 0,
          ""ForceBlueprint"": false,
          ""Amount"": 1000,
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Flint.PrimalItemResource_Flint'""
        }
      ]
    },
      ""09-Electronics1000"": {
          ""Type"": ""item"",
          ""Description"": ""Resource | 1000x Electronics | 150 Points"",
          ""Price"": 150,
          ""Items"": [
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 1000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Electronics.PrimalItemResource_Electronics'""
            }
          ]
      },
      ""10-BlackPearls500"": {
          ""Type"": ""item"",
          ""Description"": ""Resource | 500x Black Pearls | 150"",
          ""Price"": 150,
          ""Items"": [
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 500,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_BlackPearl.PrimalItemResource_BlackPearl'""
            }
          ]
      },
      ""11-Poly1000"": {
          ""Type"": ""item"",
          ""Description"": ""Resource | 1000x Polymer | 150 Points"",
          ""Price"": 150,
          ""Items"": [
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 1000,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Resources/PrimalItemResource_Polymer.PrimalItemResource_Polymer'""
            }
          ]
      },
      ""01-MindWipes3"": {
          ""Type"": ""item"",
          ""Description"": ""Potion | 3x Mindwipes | 5 Points"",
          ""Price"": 5,
          ""Items"": [
            {
              ""Quality"": 0,
              ""ForceBlueprint"": false,
              ""Amount"": 3,
              ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/BaseBPs/PrimalItemConsumableRespecSoup.PrimalItemConsumableRespecSoup'""
            }
          ]
      },
      ""02-tools"": {
        ""Type"": ""item"",
        ""Description"": ""Tools | Metal Tools | 20 Points"",
        ""Price"": 20,
        ""Items"": [
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponMetalHatchet.PrimalItem_WeaponMetalHatchet'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponMetalPick.PrimalItem_WeaponMetalPick'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponSickle.PrimalItem_WeaponSickle'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Weapons/PrimalItem_WeaponPike.PrimalItem_WeaponPike'""
          }
        ]
      },
      ""12-Achitina"": {
          ""Type"": ""dino"",
          ""Description"": ""Dino | Achitina (Snail) | 50 Points"",
          ""Level"": 100,
          ""Price"": 50,
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Achatina/Achatina_Character_BP.Achatina_Character_BP'""
      },
      ""13-QueenBee"": {
          ""Type"": ""dino"",
          ""Description"": ""Dino | BeeHive | 50 Points"",
          ""Level"": 100,
          ""Price"": 50,
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Bee/Bee_Queen_Character_BP.Bee_Queen_Character_BP'""
      },
      ""14-AnglerFish"": {
          ""Type"": ""dino"",
          ""Description"": ""Dino | AnglerFish (Neut) | 100 Points"",
          ""Level"": 100,
          ""Price"": 100,
          ""Neutered"": true,
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Anglerfish/Angler_Character_BP.Angler_Character_BP'""
      },
      ""15-Kangaroo"": {
          ""Type"": ""dino"",
          ""Description"": ""Dino | Procoptodon (Random Gender) | 120 Points"",
          ""Level"": 150,
          ""Price"": 120,
          ""Neutered"": true,
          ""Gender"": ""Random"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Procoptodon/Procoptodon_Character_BP.Procoptodon_Character_BP'""
      },
      ""16-Otter"": {
          ""Type"": ""dino"",
          ""Description"": ""Dino | Otter (Neut) | 100 Points"",
          ""Level"": 100,
          ""Price"": 100,
          ""Neutered"": true,
          ""Gender"": ""Random"",
          ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Otter/Otter_Character_BP.Otter_Character_BP'""
      },
      ""17-Quetz"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Quetz (Random Gender) | 150 Points"",
        ""Level"": 225,
        ""Price"": 150,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Quetzalcoatlus/Quetz_Character_BP.Quetz_Character_BP'""
      },
      ""18-Thyla"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Thyla (Random Gender) | 120 Points"",
        ""Level"": 225,
        ""Price"": 120,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Thylacoleo/Thylacoleo_Character_BP.Thylacoleo_Character_BP'""
      },
      ""19-Rex"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Rex (Random Gender) | 120 Points"",
        ""Level"": 225,
        ""Price"": 120,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Rex/Rex_Character_BP.Rex_Character_BP'""
      },
      ""20-Basilo"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Basilo (Random Gender) | 50 Points"",
        ""Level"": 225,
        ""Price"": 120,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Basilosaurus/Basilosaurus_Character_BP.Basilosaurus_Character_BP'""
      },
      ""21-Tape"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Tape (Random Gender) | 75 Points"",
        ""Level"": 225,
        ""Price"": 75,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Tapejara/Tapejara_Character_BP.Tapejara_Character_BP'""
      },
      ""00-WW-Gacha-Present"": {
        ""Type"": ""beacon"",
        ""Description"": ""Event | Gacha Claus Present | 100 Points"",
        ""Price"":100,
        ""ClassName"": ""SupplyCrate_Gift_C""
      },
      ""22-SwampCaveDrop-Red"": {
        ""Type"": ""beacon"",
        ""Description"": ""Drops | Swamp Cave Red Drop | 200 Points"",
        ""Price"":200,
        ""ClassName"": ""SupplyCrate_SwampCaveTier3_C""
      },
      ""23-IceCaveDrop-Red"": {
        ""Type"": ""beacon"",
        ""Description"": ""Drops | Ice Cave Red Drop | 200 Points"",
        ""Price"":200,
        ""ClassName"": ""SupplyCrate_IceCaveTier3_C""
      },
      ""24-UnderwaterCaveDrop-Red"": {
        ""Type"": ""beacon"",
        ""Description"": ""Drops | Underwater Cave Red Drop | 200 Points"",
        ""Price"":200,
        ""ClassName"": ""SupplyCrate_UnderwaterCaveTier3_C""
      },
      ""15-tekengram"": {
        ""Type"": ""unlockengram"",
        ""Description"": ""Engrams Only | TEK Teleporter - All Sizes | 200 Points"",
        ""Price"": 200,
        ""Items"": [
          {
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekTeleporter.PrimalItemStructure_TekTeleporter'""
          },
          {
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekTeleporterMini.PrimalItemStructure_TekTeleporterMini'""
          },
          {
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Structures/Misc/PrimalItemStructure_TekTeleporterSmall.PrimalItemStructure_TekTeleporterSmall'""
          }
        ]
      },
      ""25-Hesperonis"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Hesperonis (Random Gender) | 50 Points"",
        ""Level"": 225,
        ""Price"": 50,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Hesperornis/Hesperornis_Character_BP.Hesperornis_Character_BP'""
      },
      ""26-Mantis"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Mantis (Neutered) | 200 Points"",
        ""Level"": 225,
        ""Price"": 200,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Dinos/Mantis/Mantis_Character_BP.Mantis_Character_BP'""
      },
      ""27-Moth"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Lymantria Moth (Random Gender) | 200 Points"",
        ""Level"": 225,
        ""Price"": 200,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Dinos/Moth/Moth_Character_BP.Moth_Character_BP'""
      },
      ""28-Manticore"": {
        ""Type"": ""dino"",
        ""Description"": ""BOSS Dino | Manticore (Random Gender) | 2000 Points"",
        ""Level"": 225,
        ""Price"": 2000,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/TameableBosses/Dinos/Manticore/Manticore_Character_BP_Small.Manticore_Character_BP_Small'""
      },
      ""29-DodoRex"": {
        ""Type"": ""dino"",
        ""Description"": ""BOSS Dino | DodoRex (Random Gender) | 10000 Points"",
        ""Level"": 225,
        ""Price"": 10000,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/TameableBosses/Dinos/DodoRex/DodoRex_Character_BP_Small.DodoRex_Character_BP_Small'""
      },
      ""30-Oasisaur"": {
        ""Type"": ""dino"",
        ""Description"": ""SE Frontier | Oasisaur | 2500 Points"",
        ""Level"": 10,
        ""Price"": 2500,
        ""Neutered"": true,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/Packs/Frontier/Dinos/Oasisaur/Oasisaur_Character_BP.Oasisaur_Character_BP'""
      },
      ""31-Rhynio"": {
        ""Type"": ""dino"",
        ""Description"": ""Dino | Rhynio (Random Gender) | 1000 Points"",
        ""Level"": 225,
        ""Price"": 1000,
        ""Neutered"": false,
        ""Gender"": ""Random"",
        ""Blueprint"": ""Blueprint'/Game/PrimalEarth/Dinos/Rhyniognatha/Rhynio_Character_BP.Rhynio_Character_BP'""
      },
      ""32-CoolWater"": {
        ""Type"": ""item"",
        ""Description"": "" Chilled Water x 3 | Canteens | 50 Points"",
        ""Price"": 50,
        ""Items"": [
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 3,
            ""Blueprint"": ""Blueprint'/Game/PrimalEarth/CoreBlueprints/Items/Consumables/PrimalItemConsumable_IcedCanteenRefill.PrimalItemConsumable_IcedCanteenRefill'""
          }
        ]
      },
      ""33-DesertSet"": {
        ""Type"": ""item"",
        ""Description"": ""Full Armour Set - Primitive | Desert | 200 Points"",
        ""Price"": 200,
        ""Items"": [
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothBoots.PrimalItemArmor_DesertClothBoots'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothGloves.PrimalItemArmor_DesertClothGloves'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothGogglesHelmet.PrimalItemArmor_DesertClothGogglesHelmet'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothPants.PrimalItemArmor_DesertClothPants'""
          },
          {
            ""Quality"": 0,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothShirt.PrimalItemArmor_DesertClothShirt'""
          }
        ]
      },
      ""34-DesertSet"": {
        ""Type"": ""item"",
        ""Description"": ""Full Armour Set - Ascendant | Desert | 500 Points"",
        ""Price"": 500,
        ""Items"": [
          {
            ""Quality"": 9,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothBoots.PrimalItemArmor_DesertClothBoots'""
          },
          {
            ""Quality"": 9,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothGloves.PrimalItemArmor_DesertClothGloves'""
          },
          {
            ""Quality"": 9,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothGogglesHelmet.PrimalItemArmor_DesertClothGogglesHelmet'""
          },
          {
            ""Quality"": 9,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothPants.PrimalItemArmor_DesertClothPants'""
          },
          {
            ""Quality"": 9,
            ""ForceBlueprint"": false,
            ""Amount"": 1,
            ""Blueprint"": ""Blueprint'/Game/ScorchedEarth/Outfits/PrimalItemArmor_DesertClothShirt.PrimalItemArmor_DesertClothShirt'""
          }
        ]
      }
    },
   ""Messages"": {
    ""Sender"": ""ArkShop"",
    ""ReceivedNoPoints"": ""<RichColor Color=\""1, 1, 0, 1\"">You are not earning points currently!</>"",
    ""BoughtItem"": ""<RichColor Color=\""0, 1, 0, 1\"">You have successfully bought item</>"",
    ""BoughtDino"": ""<RichColor Color=\""0, 1, 0, 1\"">You have successfully bought dino</>"",
    ""BoughtBeacon"": ""<RichColor Color=\""0, 1, 0, 1\"">You have successfully bought beacon</>"",
    ""BoughtExp"": ""<RichColor Color=\""0, 1, 0, 1\"">You have successfully bought experience</>"",
    ""ReceivedPoints"": ""<RichColor Color=\""1, 1, 0, 1\"">You have received {0} points! (total: {1})</>"",
    ""HavePoints"": ""You have {0} points"",
    ""NoPoints"": ""<RichColor Color=\""1, 0, 0, 1\"">You don't have enough points</>"",
    ""WrongId"": ""<RichColor Color=\""1, 0, 0, 1\"">Wrong id</>"",
    ""NoPermissionsKit"": ""<RichColor Color=\""1, 0, 0, 1\"">You don't have permission to use this kit</>"",
    ""CantBuyKit"": ""<RichColor Color=\""1, 0, 0, 1\"">You can't buy this kit</>"",
    ""BoughtKit"": ""<RichColor Color=\""0, 1, 0, 1\"">You have successfully bought {0} kit</>"",
    ""AvailableKits"": ""Available kits for you:"",
    ""NoKits"": ""No available kits"",
    ""KitsLeft"": ""You have {0} {1} kits left"",
    ""NoKitsLeft"": ""You don't have {0} kits left"",
    ""CantGivePoints"": ""<RichColor Color=\""1, 0, 0, 1\"">You can't give points to yourself</>"",
    ""RidingDino"": ""<RichColor Color=\""1, 0, 0, 1\"">You can't buy this item while riding a dino</>"",
    ""SentPoints"": ""<RichColor Color=\""0, 1, 0, 1\"">You have successfully sent {0} points to {1}</>"",
    ""GotPoints"": ""You have received {0} points from {1}"",
    ""NoPlayer"": ""<RichColor Color=\""1, 0, 0, 1\"">Player doesn't exist</>"",
    ""FoundMorePlayers"": ""<RichColor Color=\""1, 0, 0, 1\"">Found more than one player with the given name</>"",
    ""BuyUsage"": ""Usage: /buy id amount"",
    ""ShopUsage"": ""Usage: /shop page"",
    ""KitUsage"": ""Usage: /kit KitName"",
    ""BuyKitUsage"": ""Usage: /BuyKit KitName amount"",
    ""TradeUsage"": ""Usage: /trade 'Player Name' amount"",
    ""PointsCmd"": ""/points"",
    ""TradeCmd"": ""/trade"",
    ""BuyCmd"": ""/buy"",
    ""ShopCmd"": ""/shop"",
    ""KitCmd"": ""/kit"",
    ""BuyKitCmd"": ""/buykit"",
    ""SellCmd"": ""/sell"",
    ""ShopSellCmd"": ""/shopsell"",
    ""SellUsage"": ""Usage: /sell id amount"",
    ""NotEnoughItems"": ""<RichColor Color=\""1, 0, 0, 1\"">You don't have enough items ({0}/{1})</>"",
    ""SoldItems"": ""<RichColor Color=\""0, 1, 0, 1\"">You have successfully sold items</>"",
    ""BadLevel"": ""<RichColor Color=\""1, 0, 0, 1\"">Required level: {0} - {1}</>"",
    ""KitsListPrice"": ""Price: {0}"",
    ""KitsListFormat"": ""\""{0}\"" - {1}. {2} left. {3}\n"",
    ""StoreListDino"": ""{0}) {1}. Level: {2}. Id: {3}. Price: {4}\n"",
    ""StoreListItem"": ""{0}) {1}. Id: {2}. Price: {3}\n"",
    ""StoreListFormat"": ""{0}"",
    ""OnlyOnSpawnKit"": ""This kit can be used only on spawn"",
    ""HelpCmd"": ""/shophelp"",
    ""ShopMessage"": ""Usage: /buy id amount"",
    ""HelpMessage"": ""This is shop help message"",
    ""RefundError"": ""Points refunded due to an error"",
    ""ShopFindCmd"": ""/shopfind"",
    ""ShopFindUsage"": ""Usage: /shopfind searchterm"",
    ""ShopFindNotFound"": ""No items matched your search"",
    ""ShopFindTooManyResults"": ""Too many results to display refine your search term"",
    ""NoPermissionsStore"": ""<RichColor Color=\""1, 0, 0, 1\"">You don't have permission to buy this {0}!</>"",
    ""InventoryIsFull"": ""<RichColor Color=\""1, 0, 0, 1\"">Unable to redeem your kit, inventory full!</>""
   }
  }"
D0Xz7ve6,LED Control rev_01,pleasedontcode,Arduino,Friday 3rd of May 2024 06:37:47 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: LED Control
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-03 11:37:32

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* PWM CONTOLL */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void); // Added function prototype for updateOutputs

/***** DEFINITION OF ANALOG INPUT PINS *****/
const uint8_t pot_Potentiometer_Vout_PIN_D4 = D4;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t isik_LED_PIN_D13 = 13;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool isik_LED_PIN_D13_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float isik_LED_PIN_D13_phyData = 0.0;

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(pot_Potentiometer_Vout_PIN_D4, INPUT);
    pinMode(isik_LED_PIN_D13, OUTPUT);

    // PWM CONTROL
    // Set PWM frequency for LED control
    ledcSetup(0, 5000, 8); // Configure PWM channel at 5 kHz with 8-bit resolution
    ledcAttachPin(isik_LED_PIN_D13, 0); // Attach PWM channel to LED pin
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    updateOutputs(); // Refresh output data
}

void updateOutputs()
{
    // Update LED brightness using PWM
    ledcWrite(0, isik_LED_PIN_D13_rawData); // Set PWM duty cycle based on raw data
}

/* END CODE */"
ZY2dsXs6,Kode sederhana Game Interaktif dengan Arduino dan Joypad,cisco404,C++,Friday 3rd of May 2024 06:31:24 AM CDT,"#include <Joystick.h>

Joystick joy; // Objek Joystick untuk membaca input dari Joypad

// -------------------------------------------
// Kode sederhana Game Interaktif dengan Arduino dan Joypad
// www.ardukode.blogspot.com
// -------------------------------------------

int x = 0; // Nilai sumbu X Joypad
int y = 0; // Nilai sumbu Y Joypad
int button1 = 0; // Status tombol 1 Joypad
int button2 = 0; // Status tombol 2 Joypad
int button3 = 0; // Status tombol 3 Joypad
int button4 = 0; // Status tombol 4 Joypad

void setup() {
  joy.begin(); // Inisialisasi library Joystick
  Serial.begin(9600); // Inisialisasi komunikasi serial
}

void loop() {
  joy.readJoystick(); // Baca input dari Joypad

  x = joy.getAxis(0); // Dapatkan nilai sumbu X
  y = joy.getAxis(1); // Dapatkan nilai sumbu Y
  button1 = joy.getButton(1); // Dapatkan status tombol 1
  button2 = joy.getButton(2); // Dapatkan status tombol 2
  button3 = joy.getButton(3); // Dapatkan status tombol 3
  button4 = joy.getButton(4); // Dapatkan status tombol 4

  // Proses input dari Joypad untuk mengontrol game
  if (x > 0) {
    // Pemain bergerak ke kanan
  } else if (x < 0) {
    // Pemain bergerak ke kiri
  }

  if (y > 0) {
    // Pemain bergerak ke atas
  } else if (y < 0) {
    // Pemain bergerak ke bawah
  }

  if (button1) {
    // Tombol 1 ditekan
  }

  if (button2) {
    // Tombol 2 ditekan
  }

  if (button3) {
    // Tombol 3 ditekan
  }

  if (button4) {
    // Tombol 4 ditekan
  }

  // Tampilkan informasi game di layar LCD (opsional)
  if (lcd) {
    lcd.clear();
    lcd.print(""X: "");
    lcd.print(x);
    lcd.print("", Y: "");
    lcd.print(y);
    lcd.println();
    lcd.print(""Button 1: "");
    lcd.print(button1);
    lcd.print("", Button 2: "");
    lcd.print(button2);
    lcd.println();
    lcd.print(""Button 3: "");
    lcd.print(button3);
    lcd.print("", Button 4: "");
    lcd.println(button4);
  }

  // Putar suara game di speaker (opsional)"
RTdEuXrq,Untitled,_KAGATUN_,C#,Friday 3rd of May 2024 06:16:52 AM CDT,"using System;
using System.Collections.Generic;

namespace CarService
{
    class Program
    {
        static void Main(string[] args)
        {
            CarCreator createCars = new CarCreator();
            CarService carService = new CarService(createCars.ReturnQueue());

            carService.Work();
        }
    }

    public class Utilities
    {
        private static Random s_random = new Random();

        public static int GetRandomNumber(int min, int max)
        {
            return s_random.Next(min, max + 1);
        }
    }

    class Car
    {
        private List<Detail> _details = new List<Detail>();

        public Car(List<Detail> details)
        {
            _details = details;
            MakeDefectiveDetails();
        }

        public bool HaveBrokenDetail()
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].IsWork == false)
                {
                    return true;
                }
            }

            return false;
        }

        public void ShowDetails()
        {
            Console.WriteLine(""Все детали автомобиля:\n"");

            if (_details.Count > 0)
            {
                for (int i = 0; i < _details.Count; i++)
                {
                    _details[i].ShowInfo();
                }
            }
        }

        public void ShowBrokenDetails()
        {
            bool isProperly = true;

            Console.WriteLine(""Неисправные детали автомобиля:\n"");

            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].IsWork == false)
                {
                    _details[i].ShowInfo();

                    isProperly = false;
                }
            }

            if (isProperly == true)
            {
                Console.WriteLine(""Все детали отремонтированны"");
            }
        }

        public bool TryGetDetail(string detailType, out Detail detail)
        {
            detail = null;

            foreach (Detail selectedDetail in _details)
            {
                if (detailType == selectedDetail.Type && selectedDetail.IsWork == false)
                {
                    detail = selectedDetail;
                    return true;
                }
            }

            return false;
        }

        public List<Detail> ReturnDetails()
        {
            return new List<Detail>(_details);
        }

        public void ReplaceDetail(Detail newDetail)
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].Type == newDetail.Type)
                {
                    _details[i] = newDetail;

                    return;
                }
            }
        }

        private void MakeDefectiveDetails()
        {
            int maxNumberDetails = 5;
            int numberDefectiveParts = Utilities.GetRandomNumber(1, maxNumberDetails);

            for (int i = 0; i < numberDefectiveParts; i++)
            {
                int randomIndexDetail = Utilities.GetRandomNumber(1, _details.Count);
                _details[randomIndexDetail - 1].MakeDefective();
            }
        }
    }

    class CarCreator
    {
        private Queue<Car> _cars = new Queue<Car>();

        private DetailCreator _detailCreator = new DetailCreator();

        public CarCreator()
        {
            FillQueue();
        }

        public Queue<Car> ReturnQueue()
        {
            return new Queue<Car>(_cars);
        }

        private void FillQueue()
        {
            int maxNumberInQueue = 7;
            int randomNumberInQueue = Utilities.GetRandomNumber(1, maxNumberInQueue);

            for (int i = 0; i < randomNumberInQueue; i++)
            {             
               _cars.Enqueue(CreateForQueue());
            }
        }

        private Car CreateForQueue()
        {
            List<Detail> details = new List<Detail>();

            for (int j = 0; j < _detailCreator.DetailsCount; j++)
            {
                details.Add(_detailCreator.ReturnListAll()[j].Clone());
            }

            return new Car(details);
        }
    }

    class Detail
    {
        public Detail(int price, string type, bool isWorking)
        {
            Price = price;
            Type = type;
            IsWork = isWorking;
        }

        public int Price { get; private set; }
        public string Type { get; private set; }
        public bool IsWork { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($""Деталь {Type}, стоимость {Price}, состояние {GetStatus()}"");
        }

        public void MakeDefective()
        {
            IsWork = false;
        }

        public string GetStatus()
        {
            return IsWork ? ""Исправно"" : ""Неисправно"";
        }

        public Detail Clone()
        {
            return new Detail(Price, Type, IsWork);
        }
    }

    class DetailCreator
    {
        private List<Detail> _details;

        public DetailCreator()
        {
            _details = new List<Detail>
            {
                new Detail (3000, ""Масляный насос"", true),
                new Detail (1500, ""Клапаны"", true),
                new Detail (1500, ""Ремень"", true),
                new Detail (1000, ""Маховик"", true),
                new Detail (2000, ""Водяной насос"", true),
                new Detail (2200, ""Блок цилиндров"", true),
                new Detail (4000, ""Масляный фильтр"", true),
                new Detail (2800, ""Воздушный фильтр"", true),
                new Detail (5000, ""Генератор"", true),
                new Detail (500, ""Стартер"", true),
            };
        }

        public int DetailsCount => _details.Count;

        public List<Detail> ReturnListAll()
        {
            return new List<Detail>(_details);
        }
    }

    class Warehouse
    {
        private DetailCreator _detailCreator = new DetailCreator();

        private List<Detail> _details = new List<Detail>();

        public Warehouse()
        {
            FillDetails();
        }

        public int DetailsCount => _details.Count;

        public void RemoveDetail(string detailType)
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].Type == detailType)
                {
                    _details.RemoveAt(i);
                    break;
                }
            }
        }

        public Detail GetDetailByIndex(int index)
        {
            return _details[index];
        }

        public void ShowAssortment()
        {
            Console.WriteLine(""\nДетали на складе:\n"");

            for (int i = 0; i < _details.Count; i++)
            {
                Console.Write($""№ {i + 1} "");
                _details[i].ShowInfo();
            }
        }

        private void FillDetails()
        {
            int capacity = 15;
            int minNumber = 0;
            int maxNumber = _detailCreator.DetailsCount;

            for (int i = 0; i < capacity; i++)
            {
                int randomNumber = Utilities.GetRandomNumber(minNumber, maxNumber - 1);

                _details.Add(_detailCreator.ReturnListAll()[randomNumber]);
            }
        }
    }

    class CarService
    {
        private Warehouse _warehouse = new Warehouse();

        private Queue<Car> _cars;

        private int _fine = 1000;
        private int _fineSkipping = 300;
        private int _income = 0;

        public CarService(Queue<Car> cars)
        {
            _cars = cars;
        }

        public void Work()
        {
            while (_cars.Count > 0)
            {
                Car car = _cars.Dequeue();

                RepairCar(car);
            }

            Console.WriteLine(""В очереди больше нет машин на ремонт.\nПрограмма завершена"");
        }

        private void RepairCar(Car car)
        {
            const string CommandComplete = ""S"";

            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine($""\nКапитал автосервиса: {_income}\n"");

                car.ShowDetails();
                Console.WriteLine();

                _warehouse.ShowAssortment();
                Console.WriteLine();

                car.ShowBrokenDetails();

                Console.WriteLine($""\nВведите {CommandComplete} чтобы завершить обслуживание текущей машины"");
                Console.WriteLine(""Введите номер детали со склада для починки автомобиля:\n"");

                string userInput = Console.ReadLine();

                if (userInput == CommandComplete && car.HaveBrokenDetail())
                {
                    PayBrokenDetailFine(car.ReturnDetails());

                    break;
                }
                else if (userInput == CommandComplete)
                {
                    Console.WriteLine(""Обслуживание текущего автомобиля завершено"");

                    break;
                }

                if (int.TryParse(userInput, out int number))
                {
                    if (number > 0 && number <= _warehouse.DetailsCount)
                    {
                        Detail warehouseDetail = _warehouse.GetDetailByIndex(number - 1);

                        if (car.TryGetDetail(warehouseDetail.Type, out Detail detail))
                        {
                            MakeProfit(detail.Price);

                            car.ReplaceDetail(warehouseDetail);

                            _warehouse.RemoveDetail(detail.Type);
                        }
                        else
                        {
                            _warehouse.RemoveDetail(warehouseDetail.Type);
                            PayForMistake();
                        }
                    }
                    else
                    {
                        Console.WriteLine(""\nНет детали под таким номером\n"");
                    }
                }
                else
                {
                    Console.WriteLine(""Неверный ввод команды"");
                }
            }
        }

        private void PayForMistake()
        {
            _income -= _fine;

            Console.WriteLine($""Получен штраф {_fine} за замену исправной детали, вы утратили исправную деталь со склада\n"");
        }

        private void PayBrokenDetailFine(List<Detail> details)
        {
            int sum = 0;
            int numberDetail = 0;

            for (int i = 0; i < details.Count; i++)
            {
                if (details[i].IsWork == false)
                {
                    _income -= _fineSkipping;
                    numberDetail++;
                    sum += _fineSkipping;
                }
            }

            Console.WriteLine($""Получен штраф {sum} за {numberDetail} непочиненные детали\n"");
        }

        private void MakeProfit(int price)
        {
            int difference = 100;
            int extraChargePercent = 30;
            int priceWork = (price * extraChargePercent) / difference;
            _income += price + priceWork;

            Console.WriteLine($""Получена прибыль {price}. Наценка за ремонт {extraChargePercent}% от детали {priceWork}"");
        }
    }
}

"
mRGTw0w2,data915,TestGuy1,JSON,Friday 3rd of May 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '64e0fc15b00dfd98c41e03d4e3c21debf731d890f3cfc869f53eb899b9ae8f38ec2a90b1ff6fbdadcc308c7338782fdb9cb46b08a76492c898268a9fbbda7a4f0b9365c070a3a9988d8ea7e520ab2bac3fa1578e7ec961f7ab8ae9105abe030479513216d08e20be9e4557636b575ee7310caadfbb1215738d02498d8d84a20a',
  otherdata: [
    'f63c33cba033c6e7bb5a2afeacfe60f1',
    '6b01d10932644e5fe2c2ca9093ee9076',
    '9fa1e99ed1f83fe1318455edec47118b',
    '890ded83be1a51ffbb3d0a475a9376f0',
    'b0bd7340398cbb1a30a57f6d5325ca1b',
    '806de08bd2ad2951f8eadea95da97cbe',
    'c730124b85ee818747537421ef4b77d3',
    '452f8fd4a9fb329f5e67b9b2415a3e5e'
  ]
}"
TxwVVk1C,04 2024,spidersam,JSON,Friday 3rd of May 2024 05:52:21 AM CDT,"[
  {
    ""name"": ""Zoo-02-04-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/82eb7d15-fd36-6605-4066-ea2ff46a001c.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-03-04-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/58b091da-761d-2420-64d0-11794174b845.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-04-04-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/353b2764-b69d-9fb0-98ea-0207caa2cb71.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-05-04-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/91cb6973-3ca1-101e-5b74-cc41b4de4254.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-08-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/5635089d-5723-c9f0-21f7-33ab9a71fae1.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-09-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/068fbfe3-a7f4-2a70-4506-676683037637.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-10-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/79369913-af43-899f-9fe3-bb34b5892882.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-11-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/78b06aef-bf5a-4297-408f-894fff6a212c.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-12-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/dfcf08e6-ce6d-187d-7d20-ebf8773aa11d.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-15-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/36dbca44-f590-ed26-e108-d714b3785526.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-16-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/f33a031f-ab20-aafc-bb92-c0c21251c80a.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-17-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/60ef3e73-c8b0-abf2-c35a-1e3f6d6734ed.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-18-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/2a0ef00e-4813-1b94-ec9d-2a257cfa5d39.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-19-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/6e6014e4-743b-716a-e73f-114f5f7a9315.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-22-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/938ade2c-55e4-550b-def5-213eacc89a92.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-23-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/7459f54b-4a62-b611-a217-bb6f33c51271.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-24-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/ed84027f-c98c-c66e-9c20-706e124411f4.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-25-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/43714340-910c-b63f-e154-19fdff135228.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-26-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/63fb1950-d6d5-ad71-1139-2a5168c19954.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-29-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/72aa8663-3216-dfe2-faa6-de45933a1450.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-30-04-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-4-3/9a29b8cf-0c6b-e926-7735-0cd9e9263791.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  }
]"
vBYNYPXg,Untitled,Jakowlew,Apache Log,Friday 3rd of May 2024 05:38:26 AM CDT,"[2024-05-03 13:34:47.439] [lp-periphery-server] [523539] [request_listener.hpp:67] [info] periphery-usb-flash-10:server-request-10 received new message
[2024-05-03 13:34:47.439] [lp-periphery-server] [523538] [lpps_request_handler.cpp:14] [info] processing new request: 7
[2024-05-03 13:34:47.439] [lp-periphery-server] [523538] [lpps_request_handler.cpp:93] [info] processing 'START_LISTENING' request
[2024-05-03 13:34:47.440] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:34] [info] parsing port arg '8568'
[2024-05-03 13:34:47.440] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:21] [info] using port 8568 (""8568"")
[2024-05-03 13:34:47.442] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:21] [info] starting usbipd (0.1.0)
[2024-05-03 13:34:47.442] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:34] [info] opening 0.0.0.0:8568
[2024-05-03 13:34:47.444] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:21] [info] listening on 0.0.0.0:8568
[2024-05-03 13:34:47.444] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:34] [info] listening on 1 address
[2024-05-03 13:34:49.665] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:21] [info] connection from 185.236.22.161:41672
[2024-05-03 13:34:49.665] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:21] [info] new conn
[2024-05-03 13:34:50.620] [lp-periphery-server] [523539] [request_listener.hpp:67] [info] periphery-usb-flash-10:server-request-10 received new message
[2024-05-03 13:34:50.620] [lp-periphery-server] [523538] [lpps_request_handler.cpp:14] [info] processing new request: 2
[2024-05-03 13:34:50.620] [lp-periphery-server] [523538] [lpps_request_handler.cpp:43] [info] processing 'DEVICE_ATTACH' request
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] available ports: 16
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] available controllers: 1
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] controller 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 0 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 1 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 2 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 3 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 4 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 5 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 6 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub hs port 7 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 8 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 9 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 10 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 11 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 12 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 13 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 14 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] hub ss port 15 status 4 speed 0 devid 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] sockfd 0 lbusid 0-0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] exit
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] got free port 0
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] writing: 0 23 65538 2
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] attach attribute path: /sys/devices/platform/vhci_hcd.0/attach
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] error opening attribute /sys/devices/platform/vhci_hcd.0/attach
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:34] [info] write_sysfs_attribute failed
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [spdlog_wrapper.cpp:47] [error] import device
[2024-05-03 13:34:50.670] [lp-periphery-server] [523538] [lpps_request_handler.cpp:55] [error] failed to attach device 1-1, error: -1
[2024-05-03 13:34:50.721] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:21] [info] connection from 185.236.22.161:56218
[2024-05-03 13:34:50.721] [lp-periphery-server] [526707] [spdlog_wrapper.cpp:21] [info] new conn"
p0qRiwyz,Untitled,tabr,PHP,Friday 3rd of May 2024 05:32:30 AM CDT,"  *-firmware
       description: BIOS
       vendor: American Megatrends Inc.
       physical id: 0
       version: 2.1a
       date: 05/05/2017
       size: 64KiB
       capacity: 8MiB
       capabilities: pci upgrade shadowing cdboot bootselect socketedrom edd int13floppy1200 int13floppy720 int13floppy2880 int5printscreen int9keyboard int14serial int17printer acpi usb biosbootspecification uefi
  *-memory
       description: System Memory
       physical id: 5e
       slot: System board or motherboard
       size: 256GiB
       capabilities: ecc
       configuration: errordetection=multi-bit-ecc
     *-bank:0
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          physical id: 0
          serial: #a
          slot: P1_DIMMA1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:1
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: 1
          serial: NO DIMM
          slot: NO DIMM
     *-bank:2
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          product: M393A4K40BB0-CPB
          vendor: Samsung
          physical id: 2
          serial: 312CD923
          slot: P1_DIMMB1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:3
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: 3
          serial: NO DIMM
          slot: NO DIMM
     *-bank:4
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          product: M393A4K40BB0-CPB
          vendor: Samsung
          physical id: 4
          serial: 41940A76
          slot: P1_DIMMC1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:5
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: 5
          serial: NO DIMM
          slot: NO DIMM
     *-bank:6
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          product: M393A4K40BB0-CPB
          vendor: Samsung
          physical id: 6
          serial: 4080BFBA
          slot: P1_DIMMD1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:7
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: 7
          serial: NO DIMM
          slot: NO DIMM
     *-bank:8
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          physical id: 8
          serial: #o
          slot: P2_DIMME1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:9
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: 9
          serial: NO DIMM
          slot: NO DIMM
     *-bank:10
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          product: M393A4K40BB0-CPB
          vendor: Samsung
          physical id: a
          serial: 312CD924
          slot: P2_DIMMF1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:11
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: b
          serial: NO DIMM
          slot: NO DIMM
     *-bank:12
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          product: M393A4K40BB0-CPB
          vendor: Samsung
          physical id: c
          serial: 41940D57
          slot: P2_DIMMG1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:13
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: d
          serial: NO DIMM
          slot: NO DIMM
     *-bank:14
          description: DIMM DDR4 Synchronous 2133 MHz (0,5 ns)
          product: M393A4K40BB0-CPB
          vendor: Samsung
          physical id: e
          serial: 40809E37
          slot: P2_DIMMH1
          size: 32GiB
          width: 72 bits
          clock: 2133MHz (0.5ns)
     *-bank:15
          description: [empty]
          product: NO DIMM
          vendor: NO DIMM
          physical id: f
          serial: NO DIMM
          slot: NO DIMM
  *-cache:0
       description: L1 cache
       physical id: 7c
       slot: CPU Internal L1
       size: 512KiB
       capacity: 512KiB
       capabilities: internal write-back
       configuration: level=1
  *-cache:1
       description: L2 cache
       physical id: 7d
       slot: CPU Internal L2
       size: 2MiB
       capacity: 2MiB
       capabilities: internal write-back unified
       configuration: level=2
  *-cache:2
       description: L3 cache
       physical id: 7e
       slot: CPU Internal L3
       size: 20MiB
       capacity: 20MiB
       capabilities: internal write-back unified
       configuration: level=3
  *-cache:3
       description: L1 cache
       physical id: 80
       slot: CPU Internal L1
       size: 512KiB
       capacity: 512KiB
       capabilities: internal write-back
       configuration: level=1
  *-cache:4
       description: L2 cache
       physical id: 81
       slot: CPU Internal L2
       size: 2MiB
       capacity: 2MiB
       capabilities: internal write-back unified
       configuration: level=2
  *-cache:5
       description: L3 cache
       physical id: 82
       slot: CPU Internal L3
       size: 20MiB
       capacity: 20MiB
       capabilities: internal write-back unified
       configuration: level=3
"
YWXMzfv1,NeoPixel Control rev_01,pleasedontcode,Arduino,Friday 3rd of May 2024 05:31:44 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: NeoPixel Control
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-03 10:31:15

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* 200 leds on the string that need to be preety */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Adafruit_NeoPixel.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs();

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t Led_ws2812b_PIN_D4 = 4;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
uint8_t Led_ws2812b_PIN_D4_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(200, Led_ws2812b_PIN_D4, NEO_GRB + NEO_KHZ800);

void setup(void)
{
  // put your setup code here, to run once:
  pinMode(Led_ws2812b_PIN_D4, OUTPUT);
  pixels.begin(); // Initialize NeoPixel strip
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  updateOutputs(); // Refresh output data
}

void updateOutputs()
{
  // Update NeoPixel strip with the raw data
  for (int i = 0; i < pixels.numPixels(); i++) {
    pixels.setPixelColor(i, Led_ws2812b_PIN_D4_rawData, 0, 0); // Set color based on raw data
  }
  pixels.show(); // Display the updated NeoPixel strip
}
"
hKNFpu1S,Untitled,tabr,PHP,Friday 3rd of May 2024 05:31:31 AM CDT,"# dmidecode 3.3
Getting SMBIOS data from sysfs.
SMBIOS 3.0 present.

Handle 0x005E, DMI type 16, 23 bytes
Physical Memory Array
        Location: System Board Or Motherboard
        Use: System Memory
        Error Correction Type: Multi-bit ECC
        Maximum Capacity: 512 GB
        Error Information Handle: Not Provided
        Number Of Devices: 8

Handle 0x0060, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P1_DIMMA1
        Bank Locator: P0_Node0_Channel0_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: <BAD INDEX>
        Serial Number: <BAD INDEX>
        Asset Tag: <BAD INDEX>
        Part Number: <BAD INDEX>
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0062, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0063, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P1_DIMMB1
        Bank Locator: P0_Node0_Channel1_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: Samsung
        Serial Number: 312CD923
        Asset Tag: P1_DIMMB1_AssetTag (Date:16/1)
        Part Number: M393A4K40BB0-CPB
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0065, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0066, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P1_DIMMC1
        Bank Locator: P0_Node0_Channel2_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: Samsung
        Serial Number: 41940A76
        Asset Tag: P1_DIMMC1_AssetTag (Date:15/44)
        Part Number: M393A4K40BB0-CPB
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0068, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0069, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P1_DIMMD1
        Bank Locator: P0_Node0_Channel3_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: Samsung
        Serial Number: 4080BFBA
        Asset Tag: P1_DIMMD1_AssetTag (Date:15/22)
        Part Number: M393A4K40BB0-CPB
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x006B, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x005E
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x006C, DMI type 16, 23 bytes
Physical Memory Array
        Location: System Board Or Motherboard
        Use: System Memory
        Error Correction Type: Multi-bit ECC
        Maximum Capacity: 512 GB
        Error Information Handle: Not Provided
        Number Of Devices: 8

Handle 0x006E, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P2_DIMME1
        Bank Locator: P1_Node1_Channel0_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: <BAD INDEX>
        Serial Number: <BAD INDEX>
        Asset Tag: <BAD INDEX>
        Part Number: <BAD INDEX>
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0070, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0071, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P2_DIMMF1
        Bank Locator: P1_Node1_Channel1_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: Samsung
        Serial Number: 312CD924
        Asset Tag: P2_DIMMF1_AssetTag (Date:16/1)
        Part Number: M393A4K40BB0-CPB
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0073, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0074, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P2_DIMMG1
        Bank Locator: P1_Node1_Channel2_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: Samsung
        Serial Number: 41940D57
        Asset Tag: P2_DIMMG1_AssetTag (Date:15/44)
        Part Number: M393A4K40BB0-CPB
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0076, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0077, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: 72 bits
        Data Width: 72 bits
        Size: 32 GB
        Form Factor: DIMM
        Set: None
        Locator: P2_DIMMH1
        Bank Locator: P1_Node1_Channel3_Dimm0
        Type: DDR4
        Type Detail: Synchronous
        Speed: 2133 MT/s
        Manufacturer: Samsung
        Serial Number: 40809E37
        Asset Tag: P2_DIMMH1_AssetTag (Date:15/22)
        Part Number: M393A4K40BB0-CPB
        Rank: 2
        Configured Memory Speed: 2133 MT/s
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown

Handle 0x0079, DMI type 17, 40 bytes
Memory Device
        Array Handle: 0x006C
        Error Information Handle: Not Provided
        Total Width: Unknown
        Data Width: Unknown
        Size: No Module Installed
        Form Factor: Unknown
        Set: None
        Locator: NO DIMM
        Bank Locator: NO DIMM
        Type: Unknown
        Type Detail: Unknown
        Speed: Unknown
        Manufacturer: NO DIMM
        Serial Number: NO DIMM
        Asset Tag: NO DIMM
        Part Number: NO DIMM
        Rank: Unknown
        Configured Memory Speed: Unknown
        Minimum Voltage: Unknown
        Maximum Voltage: Unknown
        Configured Voltage: Unknown
"
STyjVHJR,HOOK2,beigeworm,PHP,Friday 3rd of May 2024 05:25:50 AM CDT,1192158463413977198/Lw9tJ6SPOjzNjsl3xIsaEJoTIh-t4EXs0CY_e1xPZfGtrvq6kqKTDazmFH-DoVyCV80Z
c8fg78KU,HOOK1,beigeworm,PHP,Friday 3rd of May 2024 05:25:10 AM CDT,1235899841184268389/YxO7RuRt0Scgay_x7iqyHPDZbEcK_fenKb27_NIXEZYrvf1U4LLlHKQ-USsD-3qI85qJ
GxWmJqQ5,Untitled,0x1d3,HTML,Friday 3rd of May 2024 05:09:51 AM CDT,"<style>
    /* Stili per desktop */
    .desktop-content {
        display: block;
    }
    
    /* Stili per dispositivi mobili */
    .mobile-content {
        display: none;
    }
    
    /* Media query per dispositivi con larghezza massima di 768px (tablet e dispositivi mobili) */
    @media only screen and (max-width: 768px) {
        .desktop-content {
            display: none;
        }
        .mobile-content {
            display: block;
        }
    }
</style>
    
    <div class=""desktop-content"">
       <!-- Contenuto per desktop -->
<style><!--
video {
width: 80%;
height: 50%;
display: block;
margin: 0 auto;
}
--></style>
  <h1 data-mce-fragment=""1""><video loop=""loop"" playsinline="""" autoplay=""autoplay"" muted="""">
  <source type=""video/mp4"" src=""https://cdn.shopify.com/videos/c/o/v/6fd90596fad142ed9cf4d0f9f9f31590.mp4"">
  <source type=""video/mp4"" src=""https://cdn.shopify.com/videos/c/o/v/6fd90596fad142ed9cf4d0f9f9f31590.mp4""></video></h1>

    </div>
  
    <div class=""mobile-content"">
      <!-- Contenuto per Mobile -->
    <h1 data-mce-fragment=""1""><video loop=""loop"" playsinline="""" autoplay=""autoplay"" muted="""">
  <source type=""video/mp4"" src=""https://cdn.shopify.com/videos/c/o/v/6fd90596fad142ed9cf4d0f9f9f31590.mp4"">
  <source type=""video/mp4"" src=""https://cdn.shopify.com/videos/c/o/v/6fd90596fad142ed9cf4d0f9f9f31590.mp4""></video></h1>
    </div>
"
nU2sw8PS,Untitled,0x1d3,HTML,Friday 3rd of May 2024 05:00:06 AM CDT,"<style>

    .video {
width: 80%;
height: 50%;
display: block;
margin: 0 auto;
}

    /* Stili per desktop */
    .desktop-content {
        display: block;
    }
    
    /* Stili per dispositivi mobili */
    .mobile-content {
        display: none;
    }
    
    /* Media query per dispositivi con larghezza massima di 768px (tablet e dispositivi mobili) */
    @media only screen and (max-width: 768px) {
        .desktop-content {
            display: none;
        }
        .mobile-content {
            display: block;
        }
    }
</style>
    
    <div class=""desktop-content"">
       <!-- Contenuto per desktop -->
  <h1 data-mce-fragment=""1""><video loop=""loop"" playsinline="""" autoplay=""autoplay"" muted="""">
  <source type=""video/mp4"" src=""https://cdn.shopify.com/videos/c/o/v/6fd90596fad142ed9cf4d0f9f9f31590.mp4"">
  <source type=""video/mp4"" src=""https://cdn.shopify.com/videos/c/o/v/6fd90596fad142ed9cf4d0f9f9f31590.mp4""></video></h1>

    </div>
  
    <div class=""mobile-content"">
        <!-- Qui dentro ci metti quello che cazzo ti pare -->
    </div>
"
95nXh7VK,D2 Aegis God Rolls,Rydimir,JSON,Friday 3rd of May 2024 04:13:29 AM CDT,"{
    ""description"": """",
    ""name"": ""Aegis Endgame"",
    ""data"": [
        {
            ""description"": """",
            ""hash"": 3738678140,
            ""name"": ""PvE Endgame"",
            ""plugs"": [
                [
                    106909392
                ],
                [
                    1631667848,
                    1556840489,
                    3300816228
                ],
                [
                    4104185692,
                    3708227201,
                    2679249093
                ],
                [
                    2120661319
                ]
            ],
            ""tags"": [
                ""PVE""
            ]
        },
        {
            ""description"": """",
            ""hash"": 1168625549,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    106909392
                ],
                [
                    1631667848,
                    402033656,
                    494941759,
                    4071163871
                ],
                [
                    3708227201,
                    3751912585,
                    781192741,
                    331667533,
                    788178929,
                    2679249093
                ]
            ],
            ""tags"": [
                ""PVE""
            ]
        },
        {
            ""description"": """",
            ""hash"": 2883484461,
            ""name"": ""Endagme"",
            ""plugs"": [
                [
                    106909392
                ],
                [
                    3643424744,
                    3300816228,
                    2682205016,
                    3528046508
                ],
                [
                    3708227201,
                    3751912585,
                    1546637391,
                    781192741,
                    331667533,
                    3418165135
                ],
                [
                    2053642371
                ]
            ],
            ""tags"": [
                ""PVE""
            ]
        },
        {
            ""description"": """",
            ""hash"": 2891672170,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    791862061,
                    106909392
                ],
                [
                    1556840489,
                    1631667848,
                    3300816228
                ],
                [
                    3523296417,
                    2679249093,
                    1546637391
                ],
                [
                    744217850
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 1821724780,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    791862061,
                    106909392
                ],
                [
                    3300816228,
                    1556840489
                ],
                [
                    1546637391,
                    2360754333
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 1612781792,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    791862061,
                    106909392
                ],
                [
                    3300816228,
                    706527188,
                    1821614984
                ],
                [
                    2360754333,
                    4104185692,
                    1546637391
                ],
                [
                    4091460919
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 3612338554,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    106909392
                ],
                [
                    1523832109,
                    3523296417,
                    3978468247
                ],
                [
                    3201496230,
                    1546637391,
                    469285294
                ],
                [
                    2489430594
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 2807687156,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    1087426260,
                    106909392
                ],
                [
                    2284787283,
                    1556840489
                ],
                [
                    1771339417
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 2673925403,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    106909392,
                    1087426260
                ],
                [
                    3700496672,
                    1354429876
                ],
                [
                    1771339417
                ],
                [
                    3988215619
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 3653573172,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    106909392
                ],
                [
                    3418782618
                ],
                [
                    4104185692,
                    2213355989
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 1896309757,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    1087426260
                ],
                [
                    1354429876,
                    3418782618,
                    3425386926
                ],
                [
                    557221067,
                    95528736
                ],
                [
                    2489430594
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 568611923,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    3525010810
                ],
                [
                    3301904089,
                    2985827016
                ],
                [
                    968510818,
                    2396489472,
                    3751912585
                ],
                [
                    3993379141,
                    3078487919,
                    3194351027
                ],
                [
                    2489430594
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 1815105249,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    3666208348,
                    436053704
                ],
                [
                    52780822
                ],
                [
                    4104185692,
                    2396489472
                ],
                [
                    3913600130,
                    2077819806,
                    3708227201
                ],
                [
                    2489430594
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 2763843898,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    1087426260,
                    106909392
                ],
                [
                    3824105627,
                    3700496672,
                    3038247973
                ],
                [
                    3891536761,
                    4104185692
                ],
                [
                    2489430594
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 1050806815,
            ""name"": ""Endgame"",
            ""plugs"": [
                [
                    839105230
                ],
                [
                    1968497646,
                    1087426260
                ],
                [
                    3828510309,
                    776531651
                ],
                [
                    4104185692,
                    2109543898
                ],
                [
                    2489430594
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        },
        {
            ""description"": """",
            ""hash"": 1453235079,
            ""name"": """",
            ""plugs"": [
                [
                    839105230
                ],
                [
                    1087426260,
                    106909392
                ],
                [
                    3891536761,
                    3700496672
                ],
                [
                    3824105627,
                    3038247973
                ],
                [
                    2489430594
                ]
            ],
            ""tags"": [
                ""PVE"",
                ""Mouse""
            ]
        }
    ]
}"
jUrrQvPh,globals.hpp as of 2024-05-03,Kitomas,C++,Friday 3rd of May 2024 03:38:25 AM CDT,"#ifndef _GLOBALS_HPP
#define _GLOBALS_HPP

#include <kit/all.hpp>
#include <kit/xmp_sfx.hpp>

/* notes:
always use a mutex when accessing soundengine, as it's used by >1 thread
player should be able to step up on a half tile as if they were stairs
scene states should be able to change tiles
text boxes should appear when close to certain objects
have thread that manages music and sfx
add in cutscene image slideshow things
be able to change scene after cutscene
if ambient track fails to start, (while locked) stop a track to make space for it (use forced stop!)
have player animation frame override
add customizable friction coefficients for tilesets
*/


#ifdef _DEBUG
#include <stdio.h>
#define _printf(_fmt, ...) printf(_fmt, __VA_ARGS__)

#else
#define _printf(_fmt, ...)

#endif /* _DEBUG */

#define _getnumallocs _printf(""line %i: %llu\n"",__LINE__,memory::getNumAllocations()-2);


#define WINDOW_TITLE ""platformer prototype""
#define CANVSIZ_X 768 //32 tiles wide (assuming tiles are 24x24)
#define CANVSIZ_Y 432 //18 tiles tall
#define TILESIZ_X 32
#define TILESIZ_Y 18
#define lengthof(_array, _type) (sizeof(_array)/sizeof(_type))
#define memset0( _array       ) kit::memory::set((_array), 0, sizeof(_array))
#define memset0s(_array, _size) kit::memory::set((_array), 0, (_size)       )
#define NULLDELETE(_ptr_to_thing) { delete _ptr_to_thing;  _ptr_to_thing = nullptr; }
#define PTR_OFFSET(_ptr, _offset, _type)       ( \
  (_type*)( ((kit::u64)(_ptr)) + ((kit::s64)(_offset)) )   )

//#define GRAVITY (0.0175f)
#define GRAVITY (0.0195f)
#define PLAYER_JUMP_STRENGTH (2.0f)
#define PLAYER_JUMP_CANCEL (0.33f) //multiplier of vel.y when canceling a jump while ascending
#define PLAYER_SPEED (0.020f)
#define PLAYER_SCALE (2.0f)
#define PLAYER_HALF ( (s32)((8*PLAYER_SCALE)/2) ) //half of the character's size, in pixels
#define PLAYER_NEUTRAL (0.1f) //'what +/- range should be considered neutral for vel/acc'
#define PLAYER_AIR_FRICTION (0.5f) //multiplier for acc.x when in mid-air
#define PLAYER_GND_FRICTION (1.0f) //multiplier of PLAYER_SPEED for on-ground deceleration
#define PLAYER_RUN_MUL (0.075f) //vel.x's multiplier when adding to runningState




extern char falseStr[]; // = ""false""
extern char trueStr[];  // = ""true""
#define boolStr(_bool_value) ((_bool_value) ? trueStr : falseStr )

//(gl_ as in [gl]obal, not open[gl])
extern kit::TimerSimple* gl_frameTimer;
extern kit::SoundEngine* gl_snd;
extern kit::MutexSimple* gl_snd_lock;
extern kit::Window*      gl_win;
extern kit::BitmapFont*  gl_text;
extern kit::FStr*        gl_fstr;
#define gl_textf(_x, _y, _fmt,           ...) \
    gl_text->print((_x), (_y), gl_fstr->fmt(_fmt, __VA_ARGS__), 0)
#define gl_textfs(_x, _y, _fmt, _maxLen, ...) \
    gl_text->print((_x), (_y), gl_fstr->fmt(_fmt, __VA_ARGS__), (_maxLen))
extern kit::Bitmap* gl_spritesheetPlayer;


struct Scene;
struct SceneDescriptor;
struct Object;
typedef void (*Object_TickCallback)(Object* obj_a);

#define                    gl_scenes_len 1
#define                    gl_backgrounds_len 1
#define                    gl_tilesets_len 1
#define                    gl_ambience_len 0
#define                    gl_music_len 1
#define                    gl_objCallbacks_len 0
//+1 for the length, since the first valid id is 1, not 0
extern Scene               gl_scene;
extern SceneDescriptor*    gl_scenes[gl_scenes_len+1];
extern kit::Bitmap*        gl_backgrounds[gl_backgrounds_len+1];
extern kit::Bitmap*        gl_tileset_missing;
extern kit::Bitmap*        gl_tilesets[gl_tilesets_len+1];
extern kit::AudioData*     gl_ambience[gl_ambience_len+1];
extern char                gl_music[gl_music_len+1][32]; //the music's file paths
extern Object_TickCallback gl_objCallbacks[gl_objCallbacks_len+1];





kit::f64 frand();
kit::f32 frandf();

kit::f64 frandRange(kit::f64 start, kit::f64 maxDeviation);





struct SoundEffect { //40B (not including the size of the AudioData class)
  kit::AudioData* sfx = nullptr;
  kit::f32       volL = 1.0f;
  kit::f32       volR = 1.0f;
  kit::f64  speedBase = 1.0 ;
  kit::f64 speedRange = 0.0 ;
  kit::f32        pan = 0.0f;
  kit::u32 _padding32;

  SoundEffect(const char* filePath, kit::f32 volume = 1.0f,
                                    kit::f64 _speedRange = 0.0)
  {
    sfx = new kit::AudioData(filePath, gl_snd);
    volL = volume,  volR = volume;
    speedRange = _speedRange;
  }

  ~SoundEffect(){ delete sfx; }

  kit::s32 play(){
    if(sfx != nullptr){
      gl_snd_lock->lock(true);

      if(speedRange < 0.0) speedRange = -speedRange;
      if(!speedRange) return gl_snd->sfxPlay(sfx, volL, volR, 1.0, pan);
      else return gl_snd->sfxPlay(sfx, volL, volR, frandRange(speedBase,speedRange), pan);

      gl_snd_lock->lock(false);

    } else {
      return -1;
    }
  }
};




#endif /* _GLOBALS_HPP */
"
HayXLvht,globals.cpp as of 2024-05-03,Kitomas,C++,Friday 3rd of May 2024 03:37:35 AM CDT,"#include <globals.hpp>
#include <tile.hpp>

#include <stdio.h>
#include <stdlib.h>

using namespace kit;




void dummy_objCallback(Object* obj_a){}




char falseStr[] = ""false"";
char trueStr[] = ""true"";

TimerSimple* gl_frameTimer        = nullptr;
SoundEngine* gl_snd               = nullptr;
MutexSimple* gl_snd_lock          = nullptr;
Window*      gl_win               = nullptr;
BitmapFont*  gl_text              = nullptr;
FStr*        gl_fstr              = nullptr;
Bitmap*      gl_spritesheetPlayer = nullptr;



//+1 for the length, since the first valid id is 1, not 0
Scene            gl_scene;
SceneDescriptor* gl_scenes[gl_scenes_len+1];
Bitmap*          gl_backgrounds[gl_backgrounds_len+1];
Bitmap*          gl_tileset_missing = nullptr;
Bitmap*          gl_tilesets[gl_tilesets_len+1];
kit::AudioData*  gl_ambience[gl_ambience_len+1];
char             gl_music[gl_music_len+1][32] = { //file paths, relative to ./dat/music/
  ""(no change)"",
  ""sine_half.mod"",
};
Object_TickCallback gl_objCallbacks[gl_objCallbacks_len+1] = {
  dummy_objCallback, //0 = no object
};





void handleInit(){
  gl_frameTimer = new TimerSimple;
  gl_frameTimer->setTimer(0.101);


  srand((u32)time::getTicks());


  gl_snd = new SoundEngine(128);
  gl_snd->streamStart();

  gl_snd_lock = new MutexSimple;



  gl_win = new Window(WINDOW_TITLE, CANVSIZ_X*2, CANVSIZ_Y*2,
                      WINFLAG_RESIZABLE | WINFLAG_HIDDEN,
                      WINPOS_CENTERED, WINPOS_CENTERED,
                      CANVSIZ_X, CANVSIZ_Y, false);

  gl_text = new BitmapFont(""dat/img/_font8x8.qoi"", gl_win);

  gl_fstr = new FStr(4096);

  //gl_textf(0, 0, ""loading..."");
  //gl_win->present();
  //gl_win->setVisibility(true);



  gl_spritesheetPlayer = new Bitmap(""dat/img/spritesheet_player.qoi"", gl_win);



  //initialize asset arrays
  memset0(gl_scenes); //(these memsets are probably redundant, but whatever)
  memset0(gl_backgrounds);
  memset0(gl_tilesets);
  memset0(gl_ambience);
  char* fstr_ptr = gl_fstr->ptr(); //valid until gl_fstr gets destroyed


  //scenes
  for(u32 i=1; i<(gl_scenes_len+1); ++i){
    //(file check is done inside SceneDescriptor's constructor)
    gl_scenes[i] = new SceneDescriptor(i);

  }

  //backgrounds
  for(u32 i=1; i<(gl_backgrounds_len+1); ++i){
    gl_fstr->fmt(""dat/background/background_%u.qoi"", i);
    if(!fileio::fileExists(fstr_ptr))
      throw (const char*)gl_fstr->fmt(""\""dat/background/background_%u.qoi\"" doesn't exist"", i);
    gl_backgrounds[i] = new Bitmap(fstr_ptr, gl_win);

  }

  //tilesets
  for(u32 i=1; i<(gl_tilesets_len+1); ++i){
    gl_fstr->fmt(""dat/tileset/tileset_%u.qoi"", i);
    if(!fileio::fileExists(fstr_ptr))
      throw (const char*)gl_fstr->fmt(""\""dat/tileset/tileset_%u.qoi\"" doesn't exist"", i);
    gl_tilesets[i] = new Bitmap(fstr_ptr, gl_win);

  }

  //ambience
  for(u32 i=1; i<(gl_ambience_len+1); ++i){
    gl_fstr->fmt(""dat/ambience/ambience_%u.qoa"", i);
    if(!fileio::fileExists(fstr_ptr))
      throw (const char*)gl_fstr->fmt(""\""dat/ambience/ambience_%u.qoa\"" doesn't exist"", i);
    gl_ambience[i] = new AudioData(fstr_ptr, gl_snd);

  }



  gl_tileset_missing = new Bitmap(""dat/tileset/tileset_missing.qoi"", gl_win);



  gl_frameTimer->wait(2000);

  gl_win->setVisibility(true);
  gl_win->setFocus(true);
}





void handleQuit(){
  if(gl_frameTimer) gl_frameTimer->setTimer(0.05);



  if(gl_snd){ //tbd: make sure audio handler thread is killed!
    gl_snd->musicStop();
    gl_snd->sfxStopAll();
  }

  delete gl_snd_lock;



  delete gl_fstr;
  delete gl_text;
  delete gl_win;


  delete gl_spritesheetPlayer;


  for(u32 i=1; i<(gl_scenes_len     +1); ++i) delete gl_scenes[i];
  for(u32 i=1; i<(gl_backgrounds_len+1); ++i) delete gl_backgrounds[i];
  for(u32 i=1; i<(gl_tilesets_len   +1); ++i) delete gl_tilesets[i];
  for(u32 i=1; i<(gl_ambience_len   +1); ++i) delete gl_ambience[i];


  delete gl_tileset_missing;


  //objs is the only heap memory in gl_scene that is managed by loadScene.
   //however, this memory is not freed by it, only reallocated if necessary...
  memory::free(&gl_scene.objs); //...so it needs to be freed manually during uninit


  if(gl_frameTimer) gl_frameTimer->wait(2000);

  delete gl_frameTimer;
}





extern int gameMain(int argc, char** argv);



int main(int argc, char** argv){ try {
  handleInit();

  int result = gameMain(argc, argv);

  handleQuit();

  printf(""# OF CONTROLLED ALLOCATIONS = %llu\n"",memory::getNumAllocations()-6);

  return result;


} catch(const char* errorText){
#ifdef _DEBUG
  printf(""FATAL EXCEPTION OCCURRED!: \""%s\""\n"", errorText);
#else
  showMessageBox(errorText, ""FATAL EXCEPTION OCCURRED! COMPLAIN TO THE DEV! (lol)"", MSGBOX_ICN_ERROR);
#endif /* _DEBUG */

  return -1;


}}





f64 frand(){
  u32 value = (rand()<<15) | rand();
  return (f64)value/(KIT_U32_MAX>>2);
}



f32 frandf(){
  u32 value = (rand()<<15) | rand();
  return (f32)value/(KIT_U32_MAX>>2);
}




f64 frandRange(f64 start, f64 maxDeviation){
  return start + (frand()*2.0-1.0)*maxDeviation;
}
"
uLssbBT0,tile.hpp as of 2024-05-03,Kitomas,C++,Friday 3rd of May 2024 03:36:58 AM CDT,"#ifndef _TILE_HPP
#define _TILE_HPP

#include <globals.hpp>





union Tile {
  kit::u16 value;

  struct {
    kit::u16        id : 7; //id of what tile to use

    kit::u16   tileset : 1; //whether to use tileset a or b

    kit::u16 collide_a : 1; //'collide with top-left 12x12 section of tile?'
    kit::u16 collide_b : 1; //'collide with top-right 12x12 section of tile?'
    kit::u16 collide_c : 1; //'collide with bottom-left 12x12 section of tile?'
    kit::u16 collide_d : 1; //'collide with bottom-right 12x12 section of tile?'

    kit::u16  platform : 1; //allow falling through top side of tile conditionally
    kit::u16      pass : 1; //allow passing through tile (overrides collision)
    //(pass is always 0 inside the scene descriptor)

    kit::u16   _unused : 2;
  };

  Tile(               ) : value(             0) {}
  Tile(kit::u8 _lobyte) : value(0x0f00|_lobyte) {} //assumes full collision
  Tile(kit::u16 _value) : value(        _value) {}
  Tile(kit::s32 _value) : value(0xffff& _value) {}
};





struct Object;

//uncompressed scene data
#define OBJ_RESET_VALUE 3 //# of deaths until the scene objects reset
#define PATTERN_LEN (TILESIZ_X*TILESIZ_Y)
struct Scene { //2352B
  kit::Bitmap* bmp_bg = nullptr; //bitmap for background layer (references gl_backgrounds)
  Tile         pat_mg[PATTERN_LEN]; //pattern for midground (collision) layer
  Tile         pat_fg[PATTERN_LEN]; //pattern for foreground layer

  //(reallocate only if new scene objects len > objs_lenmax!)
  Object*  objs          = nullptr; //pointer to associated object array (memory::alloc'd)
  kit::u16 objs_len      = 0;
  kit::u16 objs_lenmax   = 0;

  //associated edges can be manipulated by game states
  kit::u16   edge_n; //scene id for north edge
  kit::u16   edge_s; //scene id for south edge
  kit::u16   edge_w; //scene id for west edge
  kit::u16   edge_e; //scene id for east edge
  kit::u16    scene; //scene id for scene itself

  kit::u16      music = 0; //music id;  0 for no change, -1 (65535) to stop
  kit::u16 ambience_a = 0; //ambient track id a;  0 for no change, -1 to stop
  kit::u16 ambience_b = 0; //ambient track id b;  0 for no change, -1 to stop

  kit::u16 tileset_a = 0; //1st associated tileset
  kit::u16 tileset_b = 0; //2nd associated tileset
  kit::u8  obj_reset = 0; //used to reset object (including npc) properties between deaths
  bool     repeat_bg = false; //'should bg repeat?' (stretches to screen otherwise)

  char _padding8[6];


  void drawBg();

  void drawTiles(bool drawForeground = false); //draws midground if false
};





//for storing the contents of a .ksd file (compressed scene data)
#define KSD_MAGIC 0x4644536B //""kSDF""
#define SD_FILELEN(_scene_desc) ((_scene_desc).dataSize+sizeof(SceneDescriptor))
struct SceneDescriptor { //64B
/*0x00*/  kit::u32      magic; //= 0x4644536B = ""kSDF"" (no null terminator)
/*0x04*/  kit::u32   dataSize; //size of file in bytes, minus the header (which is always 64B)

          //offsets to array data in file (if nullptr, data is assumed to not be present!)
          //(also, objs[x].type refers to the index inside gl_objCallbacks used by the object.
           //each element of gl_objCallbacks is of type Object_TickCallback)
/*0x08*/  Object*        objs; //contains the original states of each object in the scene
/*0x10*/  Tile*        pat_mg; //pattern data is compressed using RLE, where the 1st element's .value
/*0x18*/  Tile*        pat_fg;  //member is the run length, with the 2nd being the actual tile data

        struct {
/*0x20*/  kit::u16     bmp_bg : 15; //associated background id
/*0x21*/  kit::u16  repeat_bg :  1; //'should bg repeat?' (stretches to screen otherwise)
        };

        struct {
/*0x22*/  kit::u16   objs_len : 15; //number of objects in scene
/*0x23*/  kit::u16    visited :  1; //used to help determine if objects should reset on load
        };

/*0x24*/  kit::u16  tileset_a; //1st associated tileset
/*0x26*/  kit::u16  tileset_b; //2nd associated tileset

/*0x28*/  kit::u16     edge_n; //scene id for north edge
/*0x2A*/  kit::u16     edge_s; //scene id for south edge
/*0x2C*/  kit::u16     edge_w; //scene id for west edge
/*0x2E*/  kit::u16     edge_e; //scene id for east edge
/*0x30*/  kit::u16      scene; //scene id for scene itself

/*0x32*/  kit::u16      music; //music id;  0 for no change, -1 (65535) to stop
/*0x34*/  kit::u16 ambience_a; //ambient track id a;  0 for no change, -1 to stop
/*0x36*/  kit::u16 ambience_b; //ambient track id b;  0 for no change, -1 to stop

/*0x38*/  kit::BinaryData* fileData = nullptr; //raw file data; appears as nullptr in file

/*0x40*/  //... (array data is stored in order of: objs, pat_mg, and pat_fg)

          void unload();

          ~SceneDescriptor(){ unload(); }
          SceneDescriptor(){ kit::memory::set(this, 0, sizeof(SceneDescriptor)); }
          SceneDescriptor(kit::u16 scene_id);
};



#ifdef _DEBUG
#include <stdio.h>
#define printSceneDescHeader(_scene_id) _printSceneDescHeader(_scene_id)
static inline void _printSceneDescHeader(kit::u16 scene_id){
  if(scene_id > gl_scenes_len) throw ""scene_id out of range"";
  SceneDescriptor* scene = gl_scenes[scene_id];
  printf(""{\n"");


  printf(""  magic      = \""%.4s\"" (0x%08X)\n"", (char*)&scene->magic, scene->magic);
  printf(""  dataSize   = %u\n"", scene->dataSize);

  printf(""  objs       = %p\n"", scene->objs);
  printf(""  pat_mg     = %p\n"", scene->pat_mg);
  printf(""  pat_fg     = %p\n"", scene->pat_fg);

  printf(""  bmp_bg     = %u\n"", scene->bmp_bg);
  printf(""  repeat_bg  = %s\n"", boolStr(scene->repeat_bg));

  printf(""  objs_len   = %u\n"", scene->objs_len);
  printf(""  visited    = %s\n"", boolStr(scene->visited));

  printf(""  tileset_a  = %u\n"", scene->tileset_a);
  printf(""  tileset_b  = %u\n"", scene->tileset_b);

  printf(""  edge_n     = %u\n"", scene->edge_n);
  printf(""  edge_s     = %u\n"", scene->edge_s);
  printf(""  edge_w     = %u\n"", scene->edge_w);
  printf(""  edge_e     = %u\n"", scene->edge_e);
  printf(""  scene      = %u\n"", scene->scene);

  printf(""  music      = %u\n"", scene->music);
  printf(""  ambience_a = %u\n"", scene->ambience_a);
  printf(""  ambience_b = %u\n"", scene->ambience_b);

  printf(""  fileData   = %p\n"", scene->fileData);


  printf(""}\n"");

}

#else
#define printSceneDescHeader(_scene_id)

#endif /* _DEBUG */





//scene_id references gl_scenes, whose elements are of type SceneDescriptor*
void loadScene(kit::u16 scene_id, bool loadObjects = true, bool loadRest = true);





#endif /* _TILE_HPP */
"
0GK2RajC,tile.cpp as of 2024-05-03,Kitomas,C++,Friday 3rd of May 2024 03:36:14 AM CDT,"#include <tile.hpp>
#include <object.hpp>

using namespace kit;





void Scene::drawBg(){
  //don't draw background at all if scene = 0
  if(!scene) return;
  //if background is nullptr, use the 'missing tileset' bitmap instead
   //(since an error would occur during init if the background is invalid,
   // it should be impossible for bmp_bg to be nullptr in the first place)
  if(bmp_bg == nullptr){ gl_tileset_missing->blitRect(nullptr, nullptr); return; }
  shape::point sizeBmp = bmp_bg->getSize();
  if(sizeBmp.x<1 || sizeBmp.y<1) return;


  if(!repeat_bg){ //stretch entire background to entire canvas
    bmp_bg->blitRect();


  } else { //otherwise, repeat background bitmap in a tile pattern
    shape::rect dst; //destination rectangle
    dst.w = sizeBmp.x;
    dst.h = sizeBmp.y;

    shape::point sizeCanvas = gl_win->getCanvasSize();

    //increase x, then y until the entire canvas is drawn to
    for(dst.y = 0;  dst.y < sizeCanvas.y;  dst.y += dst.h)
    for(dst.x = 0;  dst.x < sizeCanvas.x;  dst.x += dst.w)
    {
      bmp_bg->blitRect(&dst, nullptr); //whole bitmap is used when src = nullptr
    }


  }

}





//note: if slowdown gets to a point where it's noticable,
 //implement a scene pattern cache
 //(as in, bake the 2 layers as bitmaps when loading a new
 // scene, before blitting those bitmaps every draw call)
void Scene::drawTiles(bool drawForeground){
  if(!scene) return; //don't draw any tiles for scene 0
  Tile*              tiles = pat_mg;
  if(drawForeground) tiles = pat_fg;

  if(tileset_a > gl_tilesets_len  ||  tileset_b > gl_tilesets_len)
    throw ""tileset index is out of bounds"";

  Bitmap* tileset[2];
  tileset[0] = gl_tilesets[tileset_a];
  tileset[1] = gl_tilesets[tileset_b];

  shape::rect src(0, 0, 24, 24); //determines section of tileset to copy from
  shape::rect dst(0, 0, 24, 24); //determines section of canvas to paste to

  shape::point sizeCanvas = gl_win->getCanvasSize();



  //for accessing each tile independent of the 2 for loops
  u32 tileindex = -1; //(set to -1 so i can use preincrement while indexing)

  //increase x, then y until the entire canvas is drawn to
  for(dst.y = 0;  dst.y < sizeCanvas.y;  dst.y += dst.h)
  for(dst.x = 0;  dst.x < sizeCanvas.x;  dst.x += dst.w)
  {
    Tile tile = tiles[++tileindex];
    if(!tile.id) continue; //tile 0 is always transparent, so it can be skipped
    src.x = ( tile.id    &0b1111) * src.w; //bits 0-3 are the tileset atlas' x
    src.y = ((tile.id>>4)& 0b111) * src.h; //bits 4-6 are the tileset atlas' y


    Bitmap* _tileset = tileset[tile.tileset]; //(tile.tileset is 1 bit in size)
    if(_tileset != nullptr){
      _tileset->blitRect(&dst, &src, 0xff00ff); //transparency color is magenta

    } else { //tileset doesn't exist; draw 'missing tileset' tile
      gl_tileset_missing->blitRect(&dst, nullptr); //transparency is not used

    }

  }

}





//(also used by both SceneDescriptor's constructor and destructor!)
void SceneDescriptor::unload(){
  if(fileData == nullptr) return;

  BinaryData* _fileData = fileData;
  fileData = nullptr;
  delete _fileData;
}





#define etThrow(_text, _label) { errorText = _text; goto _label; }
#define dfdThrow(_text) etThrow(_text, _DelFD)
SceneDescriptor::SceneDescriptor(u16 scene_id){
  const char* errorText = ""(no error)"";
  if(0){ //entered into in the event of an exception
    _DelFD: NULLDELETE(fileData);
    throw errorText;
  }



  if(scene_id > gl_scenes_len)
    throw ""scene_id > gl_scenes_len"";

  unload(); //clean up any previous data, if any exists

  if(!fileio::fileExists(gl_fstr->fmt(""dat/scene/scene_%u.ksd"", scene_id)))
    dfdThrow((const char*)gl_fstr->fmt(""\""dat/scene/scene_%u.ksd\"" doesn't exist"", scene_id));

  fileData = new BinaryData(gl_fstr->ptr());
  char* _fileData = fileData->getData();
  size_t fileSize = fileData->getSize();



  //handle header data (-sizeof(BinaryData*) used here as to not overwrite fileData!)
  memory::copy(this, _fileData, sizeof(SceneDescriptor)-sizeof(BinaryData*));
  char* data_end = PTR_OFFSET(_fileData, fileSize, char);


  if(magic != KSD_MAGIC)
    dfdThrow(""file is not a scene descriptor"");
  if(dataSize != (fileSize-sizeof(SceneDescriptor)))
    dfdThrow(""data size is inconsistent with actual file size"");


  //convert file offsets to their actual pointer value (only if offset != 0)
  if(objs  ) objs   = PTR_OFFSET(_fileData, objs, Object); //(these will remain
  if(pat_mg) pat_mg = PTR_OFFSET(_fileData, pat_mg, Tile);  //as nullptr if they
  if(pat_fg) pat_fg = PTR_OFFSET(_fileData, pat_fg, Tile);  //were already)
  if(((char*)objs  ) > data_end) throw ""objs goes past file data"";
  if(((char*)pat_mg) > data_end) throw ""pat_mg goes past file data"";
  if(((char*)pat_fg) > data_end) throw ""pat_fg goes past file data"";


  if(bmp_bg > gl_backgrounds_len)
    dfdThrow(""bmp_bg is out of range"");


  if( (objs == nullptr)  !=  (objs_len == 0) )
    dfdThrow(""objs_len is inconsistent with obj file offset"");

  //set objs' funcUpdate based on its type id
  for(u32 i=0; i<objs_len; ++i){ //loop will not run if objs_len is 0
    if(objs[i].type > gl_objCallbacks_len) throw ""invalid object type"";
    objs[i].funcUpdate = gl_objCallbacks[objs[i].type];

  }


  if(tileset_a > gl_tilesets_len) dfdThrow(""tileset_a out of range"");
  if(tileset_b > gl_tilesets_len) dfdThrow(""tileset_b out of range"");


  if(edge_n > gl_scenes_len) dfdThrow(""edge_n out of range"");
  if(edge_s > gl_scenes_len) dfdThrow(""edge_s out of range"");
  if(edge_w > gl_scenes_len) dfdThrow(""edge_w out of range"");
  if(edge_e > gl_scenes_len) dfdThrow(""edge_e out of range"");
  if(scene != scene_id     ) dfdThrow(""scene id in file inconsistent with actual id"");


  if(music      != -1  &&  music      > gl_music_len   ) dfdThrow(""music out of range"");
  if(ambience_a != -1  &&  ambience_a > gl_ambience_len) dfdThrow(""ambience_a out of range"");
  if(ambience_b != -1  &&  ambience_b > gl_ambience_len) dfdThrow(""ambience_b out of range"");

}





void loadScene(u16 scene_id, bool loadObjects, bool loadRest){
  if(!scene_id) return; //0 is a special case for most, if not all asset arrays
  if(scene_id > gl_scenes_len) throw ""scene_id > gl_scenes_len"";
  if(gl_scenes[scene_id] == nullptr) throw ""gl_scenes[scene_id] = nullptr"";

  //(former bug: sceneNew used to be a stack object set to *gl_scenes[scene_id],
   //but doing so causes its destructor to trigger, making .fileData invalid,
   //which breaks things during the program's uninitialization phase.)
  SceneDescriptor* sceneNew = gl_scenes[scene_id];


//gl_scene.bmp_bg   = gl_backgrounds[sceneNew->bmp_bg]; //handled later

  gl_scene.objs_len   = sceneNew->objs_len;

  gl_scene.edge_n     = sceneNew->edge_n;
  gl_scene.edge_s     = sceneNew->edge_s;
  gl_scene.edge_w     = sceneNew->edge_w;
  gl_scene.edge_e     = sceneNew->edge_e;
  gl_scene.scene      = sceneNew->scene;

  gl_scene.music      = sceneNew->music;
  gl_scene.ambience_a = sceneNew->ambience_a;
  gl_scene.ambience_b = sceneNew->ambience_b;

  gl_scene.tileset_a  = sceneNew->tileset_a;
  gl_scene.tileset_b  = sceneNew->tileset_b;
//gl_scene.obj_reset  = 3; //this is handled separately
  gl_scene.repeat_bg  = sceneNew->repeat_bg;



  struct rle_data {
    u16   run;
    Tile tile;
    rle_data() : run(0), tile(0) {}
  };

  char*  file_start = sceneNew->fileData->getData();
  size_t file_size  = sceneNew->fileData->getSize();
  char*  data_start = PTR_OFFSET(file_start, sizeof(SceneDescriptor), char);
  char*  data_end   = PTR_OFFSET(file_start, file_size,               char);



  //copy original state of object data to the active scene (if there is any)
  if(loadObjects  &&  gl_scene.objs_len > 0){
    size_t objs_size = sizeof(Object)*gl_scene.objs_len;
    if(PTR_OFFSET(data_start, objs_size, char) > data_end)
      throw ""objs went past file data"";

    if(gl_scene.objs_len > gl_scene.objs_lenmax){ //increase size if necessary
      memory::realloc(&gl_scene.objs, objs_size);
      gl_scene.objs_lenmax = gl_scene.objs_len;

    }

    memory::copy(gl_scene.objs, sceneNew->objs, objs_size);

  }



  //copy bg and tile data to the scene
  if(loadRest){
    if(sceneNew->fileData == nullptr) return;

    gl_scene.bmp_bg = nullptr;
    if(sceneNew->bmp_bg <= gl_backgrounds_len)
      gl_scene.bmp_bg = gl_backgrounds[sceneNew->bmp_bg];

    rle_data  tile_mg, tile_fg;
    rle_data* rle_mg   = (rle_data*)sceneNew->pat_mg;
    rle_data* rle_fg   = (rle_data*)sceneNew->pat_fg;
    #define   rle_end    ((rle_data*)data_end)
    rle_data* rle_last = PTR_OFFSET(rle_end, -(s64)sizeof(rle_data), rle_data);
    //^^data_last is the location of the last element of the rle


    if(rle_mg != nullptr){
      for(u32 i=0; i<PATTERN_LEN; ++i){
        if(tile_mg.run == 0){
          if(rle_mg == rle_end) break;
          if(rle_mg > rle_last) throw ""rle_mg went past file data"";
          tile_mg = *(rle_mg++);
        }
        gl_scene.pat_mg[i] = tile_mg.tile;
        --tile_mg.run;

      }

    } else {
      memset0(gl_scene.pat_mg);

    }


    if(rle_fg != nullptr){
      for(u32 i=0; i<PATTERN_LEN; ++i){
        if(tile_fg.run == 0){
          if(rle_fg == rle_end) break;
          if(rle_fg > rle_last) throw ""rle_fg went past file data"";
          tile_fg = *(rle_fg++);
        }
        gl_scene.pat_fg[i] = tile_fg.tile;
        --tile_fg.run;

      }

    } else {
      memset0(gl_scene.pat_fg);

    }

  }

}
"
jgEnKXan,object.hpp as of 2024-05-03,Kitomas,C++,Friday 3rd of May 2024 03:35:26 AM CDT,"#ifndef _OBJECT_HPP
#define _OBJECT_HPP

#include <globals.hpp>





struct Object;

typedef void (*Object_TickCallback)(Object* obj_a);

struct Object { //48B
  kit::u64               _user_0;
  kit::u64               _user_1;
  kit::u64               _user_2;
  Object_TickCallback funcUpdate;


  struct {
    kit::u16           hb_size_x;
    kit::u16           hb_size_y;
    kit::u8          hb_offset_x;
    kit::u8          hb_offset_y;
  };

  kit::s16                     x;
  kit::s16                     y;

  kit::u16                  type;
};
//tbd: finish adding hitbox offsets so that the collision box can be
 //    different than the sprites bounding box





#endif /* _OBJECT_HPP */
"
rbzM8fK1,projectile manager 2,AlewAlow,Lua,Friday 3rd of May 2024 03:21:49 AM CDT,"local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local HttpService = game:GetService(""HttpService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local ServerScriptService = game:GetService(""ServerScriptService"")

local IS_SERVER = RunService:IsServer()

local Signal = require(ReplicatedStorage.Libs.Signal)
local Trove = require(ReplicatedStorage.Libs.Trove)

local DamageManager = require(ReplicatedStorage.Modules.DamageManager)

local ProjectileTypes = require(script.ProjectileTypes)
local ProjectileManager = {}

ProjectileManager.MaxHitTimeDifference = 0.3
ProjectileManager.MaxHitPositionDifference = 10

ProjectileManager.ProjectileAdded = Signal.new()
ProjectileManager.ProjectileHits = {}
ProjectileManager.Projectiles = {}

function ProjectileManager.CreateId()
	return HttpService:GenerateGUID(false)
end

-- the projectile properties can be different from a projectile to projectile
-- but they all most of the times have a few things in common
-- such as StartTime, StartCFrame or TargetPosition
function ProjectileManager.CreateProjectile(projectileProperties)
	if not projectileProperties.Id then
		projectileProperties.Id = ProjectileManager.CreateId()
	end
	
	if ProjectileManager.Projectiles[projectileProperties.Id] then
		return nil
	end
	
	local projectileClass = ProjectileTypes[projectileProperties.Type]
	local projectile = projectileClass.new(projectileProperties)
	
	projectile.Removing:Connect(function()
		ProjectileManager.Projectiles[projectileProperties.Id] = nil
	end)
	
	projectile.Hit:Connect(function(hit)
		if IS_SERVER then
			if projectileProperties.Shooter then
				ProjectileManager.ProjectileHits[projectileProperties.Id] = {
					Hit = hit,
					HitTime = workspace:GetServerTimeNow(),
					HitPosition = projectile.Position,
					Properties = projectileProperties,
				}
			end
		elseif projectileProperties.Shooter == Players.LocalPlayer then
			script.ProjectileHit:FireServer(
				projectileProperties.Id,
				projectile.Position,
				workspace:GetServerTimeNow(),
				hit
			)
		end
	end)
	
	ProjectileManager.ProjectileAdded:Fire(projectile)
	ProjectileManager.Projectiles[projectileProperties.Id] = projectile
	
	if IS_SERVER then
		script.ProjectileCreated:FireAllClients(projectileProperties)
	end
	
	return projectile
end

if IS_SERVER then
	script.GetProjectiles.OnServerInvoke = function(player)
		local projectilesProperties = {}
		
		for _, projectile in ProjectileManager.Projectiles do
			table.insert(projectilesProperties, projectile.Properties)
		end
		
		return projectilesProperties
	end
	
	script.ProjectileHit.OnServerEvent:Connect(function(player, id, hitPosition, hitTime, hit)
		local hitData = ProjectileManager.ProjectileHits[id]
		
		if
			not hitData
			or hitData.Properties.Shooter ~= player
			or hitData.Hit ~= hit
		then
			return
		end
		
		local timeDifference = math.abs(hitData.HitTime - hitTime)
		if timeDifference > ProjectileManager.MaxHitTimeDifference then
			return
		end
		
		local positionDifference = (hitPosition - hitData.HitPosition).Magnitude
		if positionDifference > ProjectileManager.MaxHitPositionDifference then
			return
		end
		
		DamageManager.ApplyDamage(
			hitData.Properties.Damage,
			hit,
			player
		)
	end)
else
	script.ProjectileCreated.OnClientEvent:Connect(ProjectileManager.CreateProjectile)
end

return ProjectileManager











local RunService = game:GetService(""RunService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Signal = require(ReplicatedStorage.Libs.Signal)
local Trove = require(ReplicatedStorage.Libs.Trove)

local IS_CLIENT = RunService:IsClient()

local Bullet = {}
Bullet.__index = Bullet

local function createInstance()
	local instance = script.BulletTemplate:Clone()
	instance.Name = ""sigma""
	instance.Parent = workspace
	return instance
end

function Bullet.new(projectileProperties)
	local self = setmetatable({}, Bullet)
	self.Properties = projectileProperties
	self.Position = projectileProperties.StartPosition
	self.StartTime = projectileProperties.StartTime or workspace:GetServerTimeNow()
	self.Params = projectileProperties.Params or RaycastParams.new()
	self.Speed = projectileProperties.Speed or 50
	
	if IS_CLIENT then
		self.Instance = createInstance()
	end
	
	self.Hit = Signal.new()
	self.Removing = Signal.new()
	self.Removing:Connect(function()
		self.Instance:Destroy()
	end)
	
	local distance =
		(projectileProperties.StartPosition
		- projectileProperties.TargetPosition).Magnitude
	
	self.Lifetime = distance / self.Speed
	
	return self
end

function Bullet:Update(_deltaTime)
	local timePassed = workspace:GetServerTimeNow() - self.StartTime
	local timePercentage = timePassed / self.Lifetime
	if timePercentage > 1 then
		self.Removing:Fire()
		return
	end
	
	local lastPosition = self.Position
	local currentPosition = self.Properties.StartPosition:Lerp(self.Properties.TargetPosition, timePercentage)
	local direction = currentPosition - lastPosition
	local result = workspace:Raycast(
		lastPosition,
		direction,
		self.Params
	)
	
	if result then
		self.Position = result.Position
		self.Hit:Fire(result.Instance)
		self.Removing:Fire()
		return
	end
	
	self.Position = lastPosition
	
	if self.Instance then
		self.Instance.Position = self.Position
	end
end

return Bullet"
34CH5Bg7,Chromebook Enable Developer Mode,plirof2,JavaScript,Friday 3rd of May 2024 03:15:20 AM CDT,"https://www.quora.com/How-do-I-dual-boot-Linux-on-a-Chromebook
Step One: Enable Developer Mode 


This will wipe your local data, so make sure to back anything up that you don't have stored in the cloud. To put your Chromebook in Developer Mode:

Press and hold the Esc and Refresh keys together, then press the Power button (while still holding the other two keys). This will reboot your Chromebook into Recovery Mode.
As soon as you see Recovery Mode pop up -- the screen with the yellow exclamation point -- press Ctrl+D. This will bring up a prompt asking if you want to turn on Developer Mode.
Press Enter to continue, then give it some time. It'll pop up with a new screen for a few moments, then reboot and go through the process of enabling Developer Mode. This may take a little while (about 15 minutes or so), and will wipe your local information.
When it's done, it will return to the screen with the red exclamation point. Leave it alone until it reboots into Chrome OS.
Note that some older Chromebooks have a physical switch that you'll have to flip in order to turn on Developer Mode. If you aren't sure, look up instructions for your specific device on enabling Developer Mode."
wsniHRCd,bb,MUSTAFA733737,Python,Friday 3rd of May 2024 03:14:26 AM CDT,00000000000000000000000000000000000000000000000000000000043d3481
yz4LJxdF,Untitled,GLASHATAY_007,Oracle 11,Friday 3rd of May 2024 03:09:41 AM CDT,"truncate table pred_zak_v_razm_kk_2024;
insert into pred_zak_v_razm_kk_2024 
select pro.ORGTITLE,org.inn,org.kpp,
       fin.CONTRAGENT_ACCOUNT,pro.GRBSTITLE, 
       pro.pg_ikz,  pro.pg_n, pro.pg_rn,
       pro.ikz, --ИКЗ из извещения
       pro.REQNUM,  
       pro.first_notice_try, -- Дата первой успешно отправленной версии извещения (xml-пакета)в ЕИС ( НЕ ВСЕГДА = Дате публикации извещения)  
       case when pro.joflag=1 then 1 else 0 end sovm,
       cons.orgtitle c_org,
       case when pro.placement='Централизованная закупка' then 1 else 0 end centr,
       pro.UOPLACING, uo_org.FULL_NAME uo_org,
       fin.budget_type,
       fin.expensetypecode,fin.kosgucode,
       fin.LOTUUID, 
       fin.TARGETEXPENSEITEMCODE, substr(fin.TARGETEXPENSEITEMCODE,4,2) fund_code,
       t.NP_CODE_NAME,t.FP_CODE_NAME,       
       case  
        When (fin.targetexpenseitemcode in ('0510057840','0530057840') and fin.expensetypecode = 244) or (fin.targetexpenseitemcode Not In ( Select targetexpenseitemcode From dwh_targetexpenseitemcode_aip where year=2024)) 
        or (fin.targetexpenseitemcode in ('022E15305F','021E15305F') and fin.expensetypecode='414' and fin.kosgucode='310' and pro.orgid='1506') -- правило по письму крицкой от 5.10.222       
        or fin.aip_code is not null
	    then 'Нет' Else 'Да' 
       End priznak,--Признак совпадения целевой статьи (АИП)
       pro.F_PRODUCTPRICE, fin.FINSUM, pro.REQUESTID,
       pro.LOTSTAGE,
       pro.FORDERTYPENAME, pro.ONEEXEC,pro.SUBJECT,
       pro.date_notice_published-- Дата размещения первой версии извещения на ЕИС 
From FIN_TARG_ZAK_2024_TABLE fin
Join DWH_PROCEDURES_KGNTV pro on (nvl(pro.lot_cons_m,pro.lotuuid)=fin.lotuuid  and (pro.lot_cons_m<>pro.lotuuid or pro.lot_cons_m is null))  
                                 
                                 and (
                                 pro.LOTSTAGE not in ('Процедура отменена','Закупка не состоялась')
                                 and pro.REQNUM is not null --pro.pg_n like '2024%' and 
								 --and pro.reqnum not in (Select reqnum From wrong_purchase) --24.01.23 Добавлен актуальный список
                                 and ( pro.FINAL_DECISION <>'Отмена закупки' or pro.FINAL_DECISION is null) 
                                 
                                 and pro.lotstageid not in (100,61) -- обновление от 27.09.2019 корректировка Яковлева А.И. (не учитывать статус закупка не состоялась)    + 29.05.23 выключена вся стадия ИСПОЛНЕНИЕ КОНТРАКТА
                                    --and pro.fordertypename not like 'Закрытый%'
                                 and pro.reqnum not in ( 
                                                            select distinct reqnum 
                                                            from dwh_procedures_kgntv pro
                                                            Join dwh_contract_kgntv con On con.lotid=pro.lotuuid and pro.joflag=1 -- and pro.pg_n like '2024%'
                                                            Where pro.reqnum is not null
                                                           ) -- Крицкая Л.А. 19.04.2021 Убрать совместные закупки, если по извещению есть хоть один контракт
                                	) or pro.lotuuid=4996697 
join dwh_organization_not_zak  org on org.id=pro.orgid and org.role_code in (1,8) --роль комитетов и казенных учреждений                                 
left join DWH_TARGETEXPENSEITEMCODE_2020 t on t.TARGETEXPENSEITEMCODE=fin.TARGETEXPENSEITEMCODE
left join DWH_ORGANIZATION_KGNTV uo_org on uo_org.ID = pro.UO_ORGID
left join DWH_PROCEDURES_CONS_KGNTV cons on cons.lotuuid = pro.joint_procedure_id
Where   1=1 ;"
