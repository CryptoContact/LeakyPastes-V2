id,title,username,language,date,content
s232nN1r,2023-11-20_stats.json,rdp_snitch,JSON,Monday 20th of November 2023 06:16:04 PM CDT,"{
  ""ip"": {
    ""50.118.145.49"": 4,
    ""194.165.17.21"": 48,
    ""20.127.65.148"": 4,
    ""172.233.198.57"": 16,
    ""58.218.204.183"": 6,
    ""45.227.254.54"": 4,
    ""185.195.59.224"": 2,
    ""106.116.169.71"": 4,
    ""49.157.46.212"": 2,
    ""142.93.234.101"": 2,
    ""205.210.31.175"": 6,
    ""167.248.133.35"": 2,
    ""45.227.254.26"": 4,
    ""180.93.172.226"": 2,
    ""212.70.149.146"": 2,
    ""36.91.222.100"": 6,
    ""202.165.85.100"": 4,
    ""198.235.24.50"": 6,
    ""185.220.103.12"": 2,
    ""45.227.254.49"": 4,
    ""165.154.182.154"": 2,
    ""146.70.126.175"": 2,
    ""103.178.59.224"": 16,
    ""192.46.227.151"": 4,
    ""138.199.34.136"": 4,
    ""205.210.31.110"": 6,
    ""173.230.152.219"": 8,
    ""163.228.231.145"": 2,
    ""45.227.254.55"": 4,
    ""142.4.218.114"": 2,
    ""213.32.39.47"": 2,
    ""149.28.70.189"": 2,
    ""162.243.174.58"": 2,
    ""51.75.160.42"": 4,
    ""205.210.31.25"": 6,
    ""106.246.227.18"": 4,
    ""118.32.156.55"": 4,
    ""103.20.191.77"": 6,
    ""141.98.11.169"": 2,
    ""45.77.252.32"": 28,
    ""45.77.32.122"": 22,
    ""207.148.65.47"": 48,
    ""149.28.141.233"": 16,
    ""139.180.157.164"": 34,
    ""149.28.153.131"": 10,
    ""45.76.157.103"": 10,
    ""45.76.187.31"": 44,
    ""45.76.179.129"": 24,
    ""149.28.154.181"": 32,
    ""66.42.63.228"": 32,
    ""45.77.47.166"": 48,
    ""45.77.168.153"": 42,
    ""149.28.139.58"": 38,
    ""45.32.107.0"": 26,
    ""45.77.174.169"": 28,
    ""207.148.77.173"": 30,
    ""139.180.157.3"": 18,
    ""149.28.131.228"": 22,
    ""139.180.153.225"": 28,
    ""45.77.174.85"": 34,
    ""45.77.169.252"": 48,
    ""45.77.171.162"": 30,
    ""149.28.146.83"": 16,
    ""139.180.136.174"": 22,
    ""149.28.148.186"": 40,
    ""45.76.145.95"": 20,
    ""139.180.218.216"": 28,
    ""207.148.117.212"": 34,
    ""207.148.69.159"": 36,
    ""45.76.184.249"": 16
  },
  ""asn"": {
    ""AS149440"": 4,
    ""AS48721"": 48,
    ""AS8075"": 4,
    ""AS63949"": 28,
    ""AS4134"": 10,
    ""AS267784"": 16,
    ""AS62240"": 2,
    ""AS9658"": 2,
    ""AS14061"": 4,
    ""AS396982"": 24,
    ""AS398324"": 2,
    ""AS135944"": 2,
    ""AS204428"": 2,
    ""AS7713"": 6,
    ""AS136255"": 4,
    ""AS4224"": 2,
    ""AS135377"": 2,
    ""AS9009"": 2,
    ""AS133676"": 16,
    ""AS212238"": 4,
    ""AS58593"": 2,
    ""AS16276"": 8,
    ""AS20473"": 906,
    ""AS3786"": 4,
    ""AS4766"": 4,
    ""AS55685"": 6,
    ""AS209605"": 2
  },
  ""isp"": {
    ""EGIHosting"": 4,
    ""Flyservers S.A."": 64,
    ""Microsoft Corporation"": 4,
    ""Akamai Technologies, Inc."": 28,
    ""Chinanet"": 10,
    ""New York Network"": 2,
    ""Eastern Telecommunications Philippines, Inc."": 2,
    ""DigitalOcean, LLC"": 4,
    ""Google LLC"": 24,
    ""Censys, Inc."": 2,
    ""SPT"": 2,
    ""SS-Net"": 2,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Telecom International Myanmar Company Limited"": 4,
    ""The Calyx Institute"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""M247 Europe Infra"": 2,
    ""Precious netcom pvt ltd"": 16,
    ""Datacamp Limited"": 4,
    ""Shanghai Blue Cloud Technology Co., Ltd"": 2,
    ""OVH SAS"": 8,
    ""The Constant Company"": 444,
    ""LG DACOM Corporation"": 4,
    ""Korea Telecom"": 4,
    ""PT. Jala Lintas Media"": 6,
    ""UAB Host Baltic"": 2,
    ""Choopa"": 462
  },
  ""org"": {
    ""Evoxt"": 4,
    ""Flyservers S.A"": 48,
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""Akamai Technologies, Inc."": 16,
    ""Chinanet JS"": 6,
    ""UAB Host Baltic"": 16,
    ""Packethub S.A"": 2,
    ""Chinanet HE"": 4,
    ""DSL Network"": 2,
    ""DigitalOcean, LLC"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Censys, Inc."": 2,
    ""Saigon Postel Corporation"": 2,
    ""4Media Ltd"": 2,
    ""Telekomunikasi Indonesia"": 6,
    ""Mytel"": 4,
    ""The Calyx Institute"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""M247 Ltd Zurich"": 2,
    ""A ONE Services"": 16,
    ""Linode, LLC"": 4,
    ""Cdnext BRA"": 4,
    ""Linode"": 8,
    ""Microsoft Azure Cloud (chinanorth3)"": 2,
    ""OVH Hosting, Inc."": 2,
    ""ONYPHE"": 2,
    ""Vultr Holdings, LLC"": 596,
    ""Digital Ocean"": 2,
    ""OVH Ltd"": 4,
    ""Boranet"": 4,
    ""Unknown"": 322
  },
  ""regionName"": {
    ""California"": 40,
    ""Kaunas"": 50,
    ""Virginia"": 20,
    ""Jiangsu"": 6,
    ""Vilnius"": 16,
    ""New York"": 4,
    ""Hebei"": 6,
    ""Metro Manila"": 2,
    ""North Holland"": 2,
    ""Michigan"": 2,
    ""Hanoi"": 2,
    ""Plovdiv"": 2,
    ""Jakarta"": 6,
    ""Yangon"": 4,
    ""Zurich"": 2,
    ""West Bengal"": 16,
    ""North West"": 4,
    ""Bratislava"": 4,
    ""Quebec"": 2,
    ""Hauts-de-France"": 2,
    ""New Jersey"": 2,
    ""England"": 4,
    ""Gyeonggi-do"": 4,
    ""Seoul"": 4,
    ""West Java"": 6,
    ""South West"": 852,
    ""Central Singapore"": 52
  },
  ""country"": {
    ""United States"": 68,
    ""Lithuania"": 66,
    ""China"": 12,
    ""Philippines"": 2,
    ""The Netherlands"": 2,
    ""Vietnam"": 2,
    ""Bulgaria"": 2,
    ""Indonesia"": 12,
    ""Myanmar"": 4,
    ""Switzerland"": 2,
    ""India"": 16,
    ""Singapore"": 908,
    ""Slovakia"": 4,
    ""Canada"": 2,
    ""France"": 2,
    ""United Kingdom"": 4,
    ""South Korea"": 8
  },
  ""account"": {
    ""hello"": 124,
    ""Test"": 38,
    ""(empty)"": 10,
    ""gPaoPxznF"": 2,
    ""xYiaeZ"": 2,
    ""KWlIOP"": 2,
    ""XksJZdFDR"": 2,
    ""boBvnD"": 2,
    ""gLpwNs"": 2,
    ""Administrator"": 6,
    ""OkXdutKZU"": 2,
    ""RzzBIf"": 2,
    ""aYlOsQ"": 2,
    ""b0zl37cv"": 8,
    ""beio"": 2,
    ""kAZogSYhe"": 2,
    ""HjyaWz"": 2,
    ""BzmbsY"": 2,
    ""142.93.8.59"": 904
  },
  ""keyboard"": {
    ""Unknown"": 1116
  },
  ""client_build"": {
    ""Unknown"": 1116
  },
  ""client_name"": {
    ""Unknown"": 1116
  },
  ""ip_type"": {
    ""Unknown"": 122,
    ""hosting"": 948,
    ""proxy"": 10,
    ""hosting & proxy"": 36
  }
}"
XrtUqR7N,2023-11-20_stats.json,rdp_snitch,JSON,Monday 20th of November 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""50.118.145.49"": 2,
    ""194.165.17.21"": 24,
    ""20.127.65.148"": 2,
    ""172.233.198.57"": 8,
    ""58.218.204.183"": 3,
    ""45.227.254.54"": 2,
    ""185.195.59.224"": 1,
    ""106.116.169.71"": 2,
    ""49.157.46.212"": 1,
    ""142.93.234.101"": 1,
    ""205.210.31.175"": 3,
    ""167.248.133.35"": 1,
    ""45.227.254.26"": 2,
    ""180.93.172.226"": 1,
    ""212.70.149.146"": 1,
    ""36.91.222.100"": 3,
    ""202.165.85.100"": 2,
    ""198.235.24.50"": 3,
    ""185.220.103.12"": 1,
    ""45.227.254.49"": 2,
    ""165.154.182.154"": 1,
    ""146.70.126.175"": 1,
    ""103.178.59.224"": 8,
    ""192.46.227.151"": 2,
    ""138.199.34.136"": 2,
    ""205.210.31.110"": 3,
    ""173.230.152.219"": 4,
    ""163.228.231.145"": 1,
    ""45.227.254.55"": 2,
    ""142.4.218.114"": 1,
    ""213.32.39.47"": 1,
    ""149.28.70.189"": 1,
    ""162.243.174.58"": 1,
    ""51.75.160.42"": 2,
    ""205.210.31.25"": 3,
    ""106.246.227.18"": 2,
    ""118.32.156.55"": 2,
    ""103.20.191.77"": 3,
    ""141.98.11.169"": 1,
    ""45.77.252.32"": 14,
    ""45.77.32.122"": 11,
    ""207.148.65.47"": 24,
    ""149.28.141.233"": 8,
    ""139.180.157.164"": 17,
    ""149.28.153.131"": 5,
    ""45.76.157.103"": 5,
    ""45.76.187.31"": 22,
    ""45.76.179.129"": 12,
    ""149.28.154.181"": 16,
    ""66.42.63.228"": 16,
    ""45.77.47.166"": 24,
    ""45.77.168.153"": 21,
    ""149.28.139.58"": 19,
    ""45.32.107.0"": 13,
    ""45.77.174.169"": 14,
    ""207.148.77.173"": 15,
    ""139.180.157.3"": 9,
    ""149.28.131.228"": 11,
    ""139.180.153.225"": 14,
    ""45.77.174.85"": 17,
    ""45.77.169.252"": 24,
    ""45.77.171.162"": 15,
    ""149.28.146.83"": 8,
    ""139.180.136.174"": 11,
    ""149.28.148.186"": 20,
    ""45.76.145.95"": 10,
    ""139.180.218.216"": 14,
    ""207.148.117.212"": 17,
    ""207.148.69.159"": 18,
    ""45.76.184.249"": 8
  },
  ""asn"": {
    ""AS149440"": 2,
    ""AS48721"": 24,
    ""AS8075"": 2,
    ""AS63949"": 14,
    ""AS4134"": 5,
    ""AS267784"": 8,
    ""AS62240"": 1,
    ""AS9658"": 1,
    ""AS14061"": 2,
    ""AS396982"": 12,
    ""AS398324"": 1,
    ""AS135944"": 1,
    ""AS204428"": 1,
    ""AS7713"": 3,
    ""AS136255"": 2,
    ""AS4224"": 1,
    ""AS135377"": 1,
    ""AS9009"": 1,
    ""AS133676"": 8,
    ""AS212238"": 2,
    ""AS58593"": 1,
    ""AS16276"": 4,
    ""AS20473"": 453,
    ""AS3786"": 2,
    ""AS4766"": 2,
    ""AS55685"": 3,
    ""AS209605"": 1
  },
  ""isp"": {
    ""EGIHosting"": 2,
    ""Flyservers S.A."": 32,
    ""Microsoft Corporation"": 2,
    ""Akamai Technologies, Inc."": 14,
    ""Chinanet"": 5,
    ""New York Network"": 1,
    ""Eastern Telecommunications Philippines, Inc."": 1,
    ""DigitalOcean, LLC"": 2,
    ""Google LLC"": 12,
    ""Censys, Inc."": 1,
    ""SPT"": 1,
    ""SS-Net"": 1,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Telecom International Myanmar Company Limited"": 2,
    ""The Calyx Institute"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""M247 Europe Infra"": 1,
    ""Precious netcom pvt ltd"": 8,
    ""Datacamp Limited"": 2,
    ""Shanghai Blue Cloud Technology Co., Ltd"": 1,
    ""OVH SAS"": 4,
    ""The Constant Company"": 222,
    ""LG DACOM Corporation"": 2,
    ""Korea Telecom"": 2,
    ""PT. Jala Lintas Media"": 3,
    ""UAB Host Baltic"": 1,
    ""Choopa"": 231
  },
  ""org"": {
    ""Evoxt"": 2,
    ""Flyservers S.A"": 24,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Akamai Technologies, Inc."": 8,
    ""Chinanet JS"": 3,
    ""UAB Host Baltic"": 8,
    ""Packethub S.A"": 1,
    ""Chinanet HE"": 2,
    ""DSL Network"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys, Inc."": 1,
    ""Saigon Postel Corporation"": 1,
    ""4Media Ltd"": 1,
    ""Telekomunikasi Indonesia"": 3,
    ""Mytel"": 2,
    ""The Calyx Institute"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""M247 Ltd Zurich"": 1,
    ""A ONE Services"": 8,
    ""Linode, LLC"": 2,
    ""Cdnext BRA"": 2,
    ""Linode"": 4,
    ""Microsoft Azure Cloud (chinanorth3)"": 1,
    ""OVH Hosting, Inc."": 1,
    ""ONYPHE"": 1,
    ""Vultr Holdings, LLC"": 298,
    ""Digital Ocean"": 1,
    ""OVH Ltd"": 2,
    ""Boranet"": 2,
    ""Unknown"": 161
  },
  ""regionName"": {
    ""California"": 20,
    ""Kaunas"": 25,
    ""Virginia"": 10,
    ""Jiangsu"": 3,
    ""Vilnius"": 8,
    ""New York"": 2,
    ""Hebei"": 3,
    ""Metro Manila"": 1,
    ""North Holland"": 1,
    ""Michigan"": 1,
    ""Hanoi"": 1,
    ""Plovdiv"": 1,
    ""Jakarta"": 3,
    ""Yangon"": 2,
    ""Zurich"": 1,
    ""West Bengal"": 8,
    ""North West"": 2,
    ""Bratislava"": 2,
    ""Quebec"": 1,
    ""Hauts-de-France"": 1,
    ""New Jersey"": 1,
    ""England"": 2,
    ""Gyeonggi-do"": 2,
    ""Seoul"": 2,
    ""West Java"": 3,
    ""South West"": 426,
    ""Central Singapore"": 26
  },
  ""country"": {
    ""United States"": 34,
    ""Lithuania"": 33,
    ""China"": 6,
    ""Philippines"": 1,
    ""The Netherlands"": 1,
    ""Vietnam"": 1,
    ""Bulgaria"": 1,
    ""Indonesia"": 6,
    ""Myanmar"": 2,
    ""Switzerland"": 1,
    ""India"": 8,
    ""Singapore"": 454,
    ""Slovakia"": 2,
    ""Canada"": 1,
    ""France"": 1,
    ""United Kingdom"": 2,
    ""South Korea"": 4
  },
  ""account"": {
    ""hello"": 62,
    ""Test"": 19,
    ""(empty)"": 5,
    ""gPaoPxznF"": 1,
    ""xYiaeZ"": 1,
    ""KWlIOP"": 1,
    ""XksJZdFDR"": 1,
    ""boBvnD"": 1,
    ""gLpwNs"": 1,
    ""Administrator"": 3,
    ""OkXdutKZU"": 1,
    ""RzzBIf"": 1,
    ""aYlOsQ"": 1,
    ""b0zl37cv"": 4,
    ""beio"": 1,
    ""kAZogSYhe"": 1,
    ""HjyaWz"": 1,
    ""BzmbsY"": 1,
    ""142.93.8.59"": 452
  },
  ""keyboard"": {
    ""Unknown"": 558
  },
  ""client_build"": {
    ""Unknown"": 558
  },
  ""client_name"": {
    ""Unknown"": 558
  },
  ""ip_type"": {
    ""Unknown"": 61,
    ""hosting"": 474,
    ""proxy"": 5,
    ""hosting & proxy"": 18
  }
}"
EyHnd0VF,Reference YAML for messaging architecture,thehunmonkgroup,YAML,Monday 20th of November 2023 06:09:39 PM CDT,"resources:
  - name: resource_a
    subscribes_to:
      - queue_1
    restricted_publish_exchanges: # Optional: Restricts publishing to these exchanges
      - exchange_1
      - exchange_2
      - exchange_3
    default_pathways: # Dict of pathway names to lists of exchanges
      pathway_a:
        - exchange_1
        - exchange_2
      pathway_b:
        - exchange_3

  - name: resource_b
    subscribes_to:
      - queue_2
    # No 'restricted_publish_exchanges' key means resource_b can publish to any exchange
    default_pathways: # Dict of pathway names to lists of exchanges
      pathway_c:
        - exchange_1

exchanges:
  - name: exchange_1
    type: direct
  - name: exchange_2
    type: topic
  - name: exchange_3
    type: fanout

queues:
  - name: queue_1
    exchange: exchange_1
    routing_key: key_1
    priority: 5
  - name: queue_2
    exchange: exchange_2
    routing_key: key_2
    priority: 10

bindings:
  - exchange: exchange_1
    queue: queue_1
    routing_key: key_1
  - exchange: exchange_2
    queue: queue_2
    routing_key: key_2"
RSbhez77,Untitled,Dorex,Linden Scripting,Monday 20th of November 2023 06:06:42 PM CDT,"string GetPSTDate()
{
    string DateToday = """";
    string DateUTC = llGetDate();
    if (llGetGMTclock() -  llGetWallclock() < 0) //if it's negative then the date has changed.
    {
        integer year = (integer)llGetSubString(DateUTC, 0, 3);
        integer month = (integer)llGetSubString(DateUTC, 5, 6);
        integer day = (integer)llGetSubString(DateUTC, 8, 9);
        
        if (day == 1) // if day is the 1st of a month, fix the date
        {
            if (month == 1) // if it is January
            {
                year = year - 1; // wind back the year
                month = 12; // set the month to December
                day = 31; // set to last day of December
            }
            else
            {
                month = month - 1; // wind back one month 
                if(month == 2)
                    day = 28 + !(year % 4) - !(year % 100) + !(year % 400);
                else
                    day = 31 - (month == 4 || month == 6 || month == 9 || month == 11);
            }
        }
        else
            day = day - 1;
        if(month < 10)
            DateToday = ""0"";
        DateToday+=(string)month + ""-"";
        if(day < 10)
            DateToday += ""0"";
        DateToday+=(string)day;
        return (string)year + ""-"" + DateToday;
    }
    return DateUTC;
}"
bFbWBWYG,BTC Wallet Credentials have been reset,castlclass_20,GetText,Monday 20th of November 2023 05:26:29 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
ikonopisqw:Ta8yQQ on 212.224.93.130
You can connect via SSH.
Regards"
UDncj1f9,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Monday 20th of November 2023 05:24:46 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT575413"
jE59aCsf,shaft,Robear9992,Lua,Monday 20th of November 2023 05:21:05 PM CDT,"--cc:Tweaked: Passage
--pastebin get jE59aCsf shaft.lua
--shaft

local nav =     require(""navigation"")
local inv =     require(""inventory"")
local timer =   require(""timer"")
local sides =   require(""sides"")

local COBBLE =      { name = ""minecraft:cobblestone"" }
local BEDROCK =     { name = ""minecraft:bedrock"" }

function place(item)
	if not turtle.items.select(item) then return false end
	if not turtle.detect() then turtle.place() end
	return true
end

local function atBedrock()
    local blocked, item = turtle.inspectDown()
    if not blocked then return false end
    return stacksEqual(item, BEDROCK)
end

---- Main Loop
timer.start()
local depth = 0

while not atBedrock() do
    nav.down()
    place(COBBLE)
    depth = depth + 1
end

turtle.turnLeft()
for n=1,depth do
    nav.up()
    place(COBBLE)
end

turtle.turnLeft()
for n=1,depth do
    nav.down()
    place(COBBLE)
end

turtle.turnLeft()
for n=1,depth do
    nav.up()
    place(COBBLE)
end

turtle.turnLeft()
nav.moveHome()  --API can be wonky sometimes and not move properly. Ensure we actually made it home.

print(""Completed in ""..timer.format())
"
6Nt3T8H9,Untitled,barabar4e,Python,Monday 20th of November 2023 04:40:24 PM CDT,"class Hotel(models.Model):
	name = models.CharField(
		max_length=100,
	)

	address = models.CharField(
		max_length=200,
	)


class Room(models.Model):
	hotel = models.ForeignKey(
		to=Hotel,
		on_delete=models.CASCADE,
	)

	number = models.CharField(
		max_length=100,
		unique=True,
	)

	capacity = models.PositiveIntegerField()

	total_guests = models.PositiveIntegerField()

	price_per_night = models.DecimalField(
		max_digits=10,
		decimal_places=2,
	)

	def clean(self):
		if self.total_guests > self.capacity:
			raise ValidationError(""Total guests are more than the capacity of the room"")

	def save(self, *args, **kwargs):
		self.clean()

		super().save(*args, **kwargs)

		return f""Room {self.number} created successfully""


class BaseReservation(models.Model):
	room = models.ForeignKey(
		to=Room,
		on_delete=models.CASCADE,
	)

	start_date = models.DateField()

	end_date = models.DateField()

	class Meta:
		abstract = True

	def reservation_period(self):
		return (self.end_date - self.start_date).days

	def calculate_total_cost(self):
		total_cost = self.reservation_period() * Room.price_per_night

		return f""{total_cost:.2f}""

	@property
	def is_available(self):
		reservations = self.__class__.objects.filter(
			room=self.room,
			end_date__gte=self.start_date,
			start_date__lte=self.end_date,
		)

		return not reservations.exists()

	def clean(self):
		if self.start_date >= self.end_date:
			raise ValidationError(""Start date cannot be after or in the same end date"")

		if not self.is_available:
			raise ValidationError(f""Room {self.room.number} cannot be reserved"")


class RegularReservation(BaseReservation):
	def save(self, *args, **kwargs):
		super().clean()

		super().save(*args, **kwargs)

		return f""Regular reservation for room {self.room.number}""


class SpecialReservation(BaseReservation):

	def save(self, *args, **kwargs):
		super().clean()

		super().save(*args, **kwargs)

		return f""Special reservation for room {self.room.number}""

	def extend_reservation(self, days: int):
		reservations = SpecialReservation.objects.filter(
			room=self.room,
			end_date__gte=self.start_date,
			start_date__lte=self.end_date + timedelta(days=days),
		)

		if reservations:
			raise ValidationError(""Error during extending reservation"")

		self.end_date += timedelta(days=days)

		self.save()

		return f""Extended reservation for room {self.room.number} with {days} days""
"
jbYJp55L,lab7_4,Filage,C++,Monday 20th of November 2023 04:26:57 PM CDT,"cout << ""Задание 4.6\n"";
        eps = 0.1;
        s = 0;
        n = 0;
        cout << ""Введите X1\n"";
        x1 = TakeNum(-10, 10);
        cout << ""Введите X2\n"";
        x2 = TakeNum(-10, 10);
        cout << ""Введите dx\n"";
        dx = TakeNum(1, 10);
 
        
        cout << (""   x    |    f(x)   |   count\n"");
        for (double i = x1; i <= x2; i += dx) {
            count = 0;
            temp = i;
            fac = 1;
            n = 0;
            s = 0;
            while (fabs(temp) > eps) {
                for (int j = 1; j < 2 * n; j++)
                    fac *= j;
                temp = (pow((-1), n) * (pow(i, 2 * n))) / fac;
                s += temp;
                n++;
                count++;
            }
            cout << fixed << setprecision(3) << i << ""   |   "" << fixed << setprecision(3) << s << ""   |     "" << count << endl;
        }
        cout << ""\n"";"
5g4fNg3B,/etc/config.scm configuration error while trying to add a susbtituter,ovargas,Scheme,Monday 20th of November 2023 04:25:43 PM CDT,";; This is an operating system configuration generated
;; by the graphical installer.
;;
;; Once installation is complete, you can learn and modify
;; this file to tweak the system configuration, and pass it
;; to the 'guix system reconfigure' command to effect your
;; changes.


;; Indicate which modules to import to access the variables
;; used in this configuration.
(use-modules (gnu) (guix)
  (nongnu packages linux)
  (nongnu system linux-initrd))

(use-service-modules cups desktop networking ssh xorg)

(operating-system
 
  (kernel linux)
  (initrd microcode-initrd)
  (firmware (list linux-firmware))

  (locale ""en_US.utf8"")
  (timezone ""America/Mexico_City"")
  (keyboard-layout (keyboard-layout ""us""))
  (host-name ""ovt"")

  ;; The list of user accounts ('root' is implicit).
  (users (cons* (user-account
                  (name ""oscarvarto"")
                  (comment ""Oscar Vargas Torres"")
                  (group ""users"")
                  (home-directory ""/home/oscarvarto"")
                  (supplementary-groups '(""wheel"" ""netdev"" ""audio"" ""video"")))
                %base-user-accounts))

  ;; Packages installed system-wide.  Users can also install packages
  ;; under their own account: use 'guix search KEYWORD' to search
  ;; for packages and 'guix install PACKAGE' to install a package.
  (packages (append (list (specification->package ""i3-wm"")
                          (specification->package ""i3status"")
                          (specification->package ""dmenu"")
                          (specification->package ""st"")
                          (specification->package ""nss-certs""))
                    %base-packages))

  ;; Below is the list of system services.  To search for available
  ;; services, run 'guix system search KEYWORD' in a terminal.

  (services (append (list (service gnome-desktop-service-type)
                 ;; To configure OpenSSH, pass an 'openssh-configuration'
                 ;; record as a second argument to 'service' below.
                 (service openssh-service-type)
                 (service cups-service-type)
                 (set-xorg-configuration
                  (xorg-configuration (keyboard-layout keyboard-layout))))
		    ;; This is the default list of services we
		    ;; are appending to.
		    %desktop-services)
;;          (modify-services %desktop-services
;;              (guix-service-type config =>
;; 				(guix-configuration
;; 				  (inherit config)
;; 				  (substitute-urls
;; 				    (append (list ""https://substitutes.nonguix.org"")
;; 					    %default-substitute-urls))
;; 				  (authorized-keys
;; 				    (append (list (local-file ""./signing-key.pub""))
;; 					    %default-authorized-guix-keys)))))
	 )
  (bootloader (bootloader-configuration
                (bootloader grub-efi-bootloader)
                (targets (list ""/boot/efi""))
                (keyboard-layout keyboard-layout)))
  (swap-devices (list (swap-space
                        (target (uuid
                                 ""4f6065a3-3344-4331-b862-4b470ff4a18f"")))))

  ;; The list of file systems that get ""mounted"".  The unique
  ;; file system identifiers there (""UUIDs"") can be obtained
  ;; by running 'blkid' in a terminal.
  (file-systems (cons* (file-system
                         (mount-point ""/"")
                         (device (uuid
                                  ""62fe7c3d-0253-4dc4-9194-fd8b89f6433e""
                                  'ext4))
                         (type ""ext4""))
                       (file-system
                         (mount-point ""/boot/efi"")
                         (device (uuid ""F3D8-5DB0""
                                       'fat32))
                         (type ""vfat"")) %base-file-systems)))

;;==========
;;Error after issuing
;;sudo guix system reconfigure /etc/config.scm --substitute-urls='https://ci.guix.gnu.org https://bordeaux.guix.gnu.org https://substitutes.nonguix.org

;; /etc/config.scm:51:2: error: (services (append (list (service gnome-desktop-service-type) (service openssh-service-type) (service cups-service-type) (set-xorg-configuration (xorg-configuration (keyboard-layout keyboard-layout)))) %desktop-services) (modify-services %desktop-services (guix-service-type config => (guix-configuration (inherit config) (substitute-urls (append (list ""https://substitutes.nonguix.org"") %default-substitute-urls)) (authorized-keys (append (list (local-file ""./signing-key.pub"")) %default-authorized-guix-keys)))))): invalid field specifier
"
3DzTQLGZ,Interval_map.cpp,HasanRasulov,C++,Monday 20th of November 2023 04:06:41 PM CDT,"#include <map>
#include<iostream>
#include <algorithm>
template<typename K, typename V>
class interval_map {
	friend void IntervalMapTest();
	V m_valBegin;
	std::map<K,V> m_map;
public:
	interval_map(V const& val)
	: m_valBegin(val)
	{}

void assign( K const& keyBegin, K const& keyEnd, V const& val ) {

    if(keyBegin > keyEnd) return;
    
    if(m_map.empty()&& val==m_valBegin) return;
    
    if(m_map.empty()){   
       m_map.insert(std::pair<K,V>{keyBegin,val});
       m_map.insert(std::pair<K,V>{keyEnd,m_valBegin});
       return;
    }
    
    auto it_beg = m_map.lower_bound(keyBegin),it_end = m_map.upper_bound(keyEnd);
    
    
    m_map.erase(it_beg,it_end);
    
    m_map.insert(std::pair<K,V>{keyBegin,val});
    m_map.insert(std::pair<K,V>{keyEnd,val});
    
    m_map.rbegin()->second = m_valBegin;
    //(-2,X)(0,X)(1,B)(3,C)(4,A)(6,Z)(10,A)(12,A)(14,A)(15,F)(20,A)
    
    for(auto it = m_map.begin();it!=std::prev(m_map.end());it++){
       
       if(it->second==std::next(it)->second){
       if(it->first>=std::next(it)->first)           
         m_map.erase(it);
       else m_map.erase(std::next(it));
       
         --it;
       }
        
    }
    
}

void print(){
  
  std::for_each(m_map.begin(),m_map.end(),[](const auto& p){ std::cout<< ""("" << p.first << "","" << p.second << "")""; });
  
  std::cout<<""\n"";
      
}

	V const& operator[]( K const& key ) const {
		auto it=m_map.upper_bound(key);
		if(it==m_map.begin()) {
			return m_valBegin;
		} else {
			return (--it)->second;
		}
	}
};

int main(){
    
    
    interval_map<int,char> map{'A'};
        
    map.assign(1,3,'B');
    map.print();
    
    map.assign(3,5,'C');
    map.print();
    
    map.assign(4,7,'A');
    map.print();    
    
    map.assign(6,10,'Z');
    map.print();    
    
    map.assign(-2,0,'X');
    map.print();
    
    map.assign(15,20,'F');
    map.print();
    
    map.assign(12,14,'A');
    map.print();
    
    
    
    return 0;}


"
phUgkpnf,teza9-sub3-3,madidino,C++,Monday 20th of November 2023 03:11:57 PM CDT,"#include <iostream>
#include <fstream>
using namespace std;
int v[10];
int main()
{
    int n;
    ifstream fin(""poli.txt"");
    fin>>n;
    fin.ignore();
    for(int i=1; i<=n; i++)
    {
        int x;
        fin>>x;
        v[x]++;
    }
    int nr=0;
    for(int i=0; i<=9; i++)
    {
        if(v[i]%2==1)
        {
            nr++;
        }
    }
    int k=8;
    if(nr>=2)
    {
        cout<<-1;
    }
    else
    {
        bool ok=true;
        while(ok && k)
        {
            if(v[k]>=2)
            {
                cout<<k;
                v[k]--;
                ok=false;
            }
            else
            {
                k=k-2;
            }
        }
        if(!k)
        {
            cout<<-1;
        }
        else
        {
            nr=-1;
            for(int i=9; i>=0; i--)
            {
                if(v[i]%2==1 && i!=k)
                {
                    for(int j=1; j<=v[i]/2; j++)
                    {
                        cout<<i;
                    }
                    nr=i;
                    v[i]=v[i]-(v[i]/2)-1;
                }
                else
                {
                    for(int j=1; j<=v[i]/2; j++)
                    {
                        cout<<i;
                    }
                    v[i]=v[i]-(v[i]/2);
                }
            }
            if(nr!=-1)
            {
                cout<<nr;
            }
            for(int i=0; i<=9; i++)
            {
                if(v[i]!=1 || i!=k)
                {
                    for(int j=1; j<=v[i]; j++)
                    {
                        cout<<i;
                    }
                }
            }
        }
    }
    cout<<k;
    fin.close();
    return 0;
}

"
UuZPF3bc,QV Sangria,geracino,PL/SQL,Monday 20th of November 2023 03:09:20 PM CDT," Select FIV_TSMOVIMENTOSANGRIA.NROPDV,
       FIV_TSMOVIMENTOSANGRIA.CODOPERADOR,
       FIV_TSMOVIMENTOSANGRIA.DESCOPERADOR,
       TO_CHAR(FIV_TSMOVIMENTOSANGRIA.DTAHORLANCTO,'DD/MM/YYYY') AS DATA, 
       TO_CHAR(FIV_TSMOVIMENTOSANGRIA.DTAHORLANCTO,'HH24:MM:SS') AS HORA, 
       FIV_TSMOVIMENTOSANGRIA.NROEMPRESA,
       FIV_TSMOVIMENTOSANGRIA.VLRSANGRIA,
       FIV_TSMOVIMENTOSANGRIA.TIPO_DESCRICAO   
             
  From FIV_TSMOVIMENTOSANGRIA
 Where FIV_TSMOVIMENTOSANGRIA.NROEMPRESA in (1)
   AND FIV_TSMOVIMENTOSANGRIA.DTAMOVIMENTO BETWEEN '01-nov-2023' AND '20-nov-2023'
   AND FIV_TSMOVIMENTOSANGRIA.TIPO_DESCRICAO = 'DINHEIRO'
 Order By FIV_TSMOVIMENTOSANGRIA.NROEMPRESA,FIV_TSMOVIMENTOSANGRIA.DTAHORLANCTO,
          FIV_TSMOVIMENTOSANGRIA.NROPDV;"
3eYk7jb1,view tesouraria,geracino,PL/SQL,Monday 20th of November 2023 03:03:09 PM CDT,"SELECT A.NROPDV,
       A.CODOPERADOR,
       O.NOME DESCOPERADOR,
       A.DTAMOVIMENTO,
       A.NROTURNO,
       A.NROEMPRESA,
       A.NROEMPRESAMAE,
       A.NROENVELOPE,
       ABS(A.VLRLANCTO) VLRSANGRIA,
       A.TIPO,
       F.FORMAPAGTOREDUZ TIPO_DESCRICAO,
       NVL(A.TIPOSANGRIA,'L') TIPOSANGRIA,
       'LOJA' TIPOSANGRIA_DESC,
       A.NROFORMAPAGTO,
       A.DTAHORLANCTO,
       A.TIPOEVENTO,
       NVL(A.SANGRIACANCELADA,'N') SANGRIACANCELADA,
       NULL GTV,
       MFL_FINANCEIRO.SEQSUPERVISOR,
       O.NOME AS SUPERVISOR
FROM   FI_TSNMOVIMENTODETALHADOIMP A,
       FIV_TSNOPERADORCAIXA O,
       MRL_FORMAPAGTO F,
       MFL_FINANCEIRO
WHERE  A.TIPOEVENTO = 'G'
AND    NVL(A.TIPOSANGRIA,'L') = 'L'
AND    A.NROEMPRESA = O.NROEMPRESA
AND    A.CODOPERADOR = O.CODOPERADOR
AND    A.NROFORMAPAGTO = F.NROFORMAPAGTO
AND    MFL_FINANCEIRO.SEQFINANCEIRO = A.SEQFINANCEIRO
AND    MFL_FINANCEIRO.SEQSUPERVISOR = O.CODOPERADOR
UNION ALL
SELECT B.NROPDV,
       B.CODOPERADOR,
       O.NOME,
       B.DTAMOVIMENTO,
       B.NROTURNO,
       B.NROEMPRESA,
       B.NROEMPRESAMAE,
       B.NROENVELOPE,
       B.VLRSANGRIA,
       B.TIPO,
       CASE B.TIPO
            WHEN 'CAN' THEN 'CANCELAMENTO'
            WHEN 'CHP' THEN 'CHEQUE A PRAZO'
            WHEN 'CHV' THEN 'CHEQUE À VISTA'
            WHEN 'CON' THEN 'CONVÊNIO'
            WHEN 'CRC' THEN 'CARTÃO DE CRÉDITO'
            WHEN 'CRD' THEN 'CARTÃO DE DÉBITO'
            WHEN 'TCK' THEN 'TICKET'
            WHEN 'DIN' THEN 'DINHEIRO'
            WHEN 'OUT' THEN 'OUTROS'
            WHEN 'QUE' THEN 'QUEBRA DE CAIXA'
            WHEN 'SOB' THEN 'SOBRA DE CAIXA'
       END TIPO_DESCRICAO,
       B.TIPOSANGRIA,
       CASE B.TIPOSANGRIA
            WHEN 'S' THEN 'SEGURADORA'
       ELSE 'TIPO DE SANGRIA INVÁLIDO' END,
       C.NROFORMAPAGTO,
       B.DTAHORLANCAMENTO,
       'G',
       NULL,
       B.GTV,
       NULL,
       NULL
FROM   FI_TSMOVTOSANGRIA B,
       FIV_TSNOPERADORCAIXA O,
       FI_TSCODMOVIMENTO C
WHERE  B.NROEMPRESA = O.NROEMPRESA
AND    B.CODOPERADOR = O.CODOPERADOR
AND    B.NROEMPRESAMAE = C.NROEMPRESAMAE
AND    B.TIPO = C.TIPO
AND    B.CODMOVIMENTO = C.CODMOVIMENTO;"
Sds7avc3,Display switcher for udev,boscard,Bash,Monday 20th of November 2023 02:59:17 PM CDT,"#!/bin/bash

# Desktop modes
declare -A attach
attach[5]='0x1b'
attach[8]='0x0f'

declare -A detach
detach[5]='0x0f'
detach[8]='0x11'

wait_time=1
wait_counter=10

case $ACTION in
        add)
                for key in $(echo ""${!attach[@]}"" | xargs -n1 | sort -g)
                do
                        counter=0
                        while [[ $counter -lt $wait_counter ]]
                        do
                                counter=$((counter+1))
                                if [[ -c ""/dev/i2c-${key}"" ]]
                                then
                                        ddcutil setvcp --bus $key 60 ${attach[$key]}
                                        break
                                fi
                                sleep $wait_time
                        done
                done
                ;;
        remove)
                for key in $(echo ""${!detach[@]}"" | xargs -n1 | sort -g -r)
                do
                        counter=0
                        while [[ $counter -lt $wait_counter ]]
                        do
                                counter=$((counter+1))
                                if [[ -c ""/dev/i2c-${key}"" ]]
                                then
                                        ddcutil setvcp --bus $key 60 ${detach[$key]}
                                        break
                                fi
                                sleep $wait_time
                        done
                done
                ;;
esac
"
y0TWjGea,unittest,kostyukevich,Python,Monday 20th of November 2023 01:57:55 PM CDT,"class TestEmployeeTasks(unittest.TestCase): # Класс для тестирования функций с использованием модуля unittest
    def setUp(self):   # Инициализация тестовых данных
        self.levels = ['junior', 'middle', 'senior']

        self.employees = [
            ('Иванов Иван Иванович', 'junior', ['html', 'java', 'тестирование']),
            ('Смирнов Алексей Александрович', 'senior', ['python', 'анализ данных', 'статистика']),
            ('Кац Александр', 'senior', ['тестирование'])
        ]

        self.tasks = [
            ('Протестировать фичу 4398', 'junior', ['тестирование'], 1),
            ('Протестировать фичу 4399', 'junior', ['тестирование'], 2),
            ('Спарсить сайт test.test по форме', 'middle', ['python', 'программирование'], 8),
            ('Написать план тестирования', 'senior', ['тестирование'], 7)
        ]

    def test_read_employees(self): # Тест функции чтения данных о сотрудниках

        employees = read_employees('employees_d.txt')
        self.assertEqual(employees, self.employees)

    def test_read_tasks(self): # Тест функции чтения данных о задачах
        tasks = read_tasks('my_tasks_d.txt')
        self.assertEqual(tasks, self.tasks)
    # Проверка, распределяет ли программа задачи правильным образом
    def test_distribute_tasks(self):
            employees = self.employees
            tasks = self.tasks
            result, unsolved_tasks = distribute_tasks(employees, tasks)
            # Проверяем, что все задачи были распределены
            self.assertEqual(len(unsolved_tasks), 1)
            # Проверяем, что суммарное время задач для каждого сотрудника считается правильно
            self.assertEqual(result['Иванов Иван Иванович']['total_time'], 3)
            self.assertEqual(result['Кац Александр']['total_time'], 7)"
ALFHtz8K,filebrowser,AleksiReede,Bash,Monday 20th of November 2023 01:57:00 PM CDT,"version: ""3""
services:
  filebrowser:
    image: hurlenko/filebrowser
    user: ""${UID}:${GID}""
    ports:
      - 8070:8080
    volumes:
      - /srv/:/data
      - /filebrowser:/config
    environment:
      - FB_BASEURL=/filebrowser
    restart: always
    logging:
        driver:
            local
        options:
            max-size: 10m"
9musK1d6,Nigerian scammers [20-11-2/2023],bombaires,AIMMS,Monday 20th of November 2023 01:56:25 PM CDT,"<a href=""mailto:publicdeptcommitteee2@outlook.com"">publicdeptcommitteee2@outlook.com</a>
<a href=""mailto:publicdeptcommitteee22@consultant.com"">publicdeptcommitteee22@consultant.com</a>
<a href=""mailto:keystoneb.jeffwilkinson@gmail.com"">keystoneb.jeffwilkinson@gmail.com</a>
<a href=""mailto:ke.yst.o.ne.b.jef.fwi.lk.in.son@gmail.com"">ke.yst.o.ne.b.jef.fwi.lk.in.son@gmail.com</a>
<a href=""mailto:k.ey.s.t.o.n.eb.j.e.f.fw.ilkin.so.n@gmail.com"">k.ey.s.t.o.n.eb.j.e.f.fw.ilkin.so.n@gmail.com</a>
<a href=""mailto:ke.y.ston.eb.jef.fwilkin.s.on@gmail.com"">ke.y.ston.eb.jef.fwilkin.s.on@gmail.com</a>
<a href=""mailto:ke.ysto.n.e.b.je.f.fw.i.lki.n.so.n@gmail.com"">ke.ysto.n.e.b.je.f.fw.i.lki.n.so.n@gmail.com</a>
<a href=""mailto:keys.ton.e.b.j.effw.i.l.k.i.nso.n@gmail.com"">keys.ton.e.b.j.effw.i.l.k.i.nso.n@gmail.com</a>
<a href=""mailto:keyst.o.neb.j.eff.wi.l.k.inso.n@gmail.com"">keyst.o.neb.j.eff.wi.l.k.inso.n@gmail.com</a>
<a href=""mailto:k.eyst.on.eb.jef.f.w.ilki.n.son@gmail.com"">k.eyst.on.eb.jef.f.w.ilki.n.son@gmail.com</a>
<a href=""mailto:key.st.o.ne.b.j.eff.w.i.l.ki.ns.o.n@gmail.com"">key.st.o.ne.b.j.eff.w.i.l.ki.ns.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.to.n.e.b.j.eff.w.i.lk.ins.o.n@gmail.com"">k.ey.s.to.n.e.b.j.eff.w.i.lk.ins.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.ton.e.b.je.f.fw.il.k.ins.on@gmail.com"">k.ey.s.ton.e.b.je.f.fw.il.k.ins.on@gmail.com</a>
<a href=""mailto:keys.to.n.eb.j.e.f.f.w.i.lkin.s.on@gmail.com"">keys.to.n.eb.j.e.f.f.w.i.lkin.s.on@gmail.com</a>
<a href=""mailto:k.eys.to.neb.j.ef.fw.il.k.inson@gmail.com"">k.eys.to.neb.j.ef.fw.il.k.inson@gmail.com</a>
<a href=""mailto:keysto.neb.j.ef.f.wilki.nson@gmail.com"">keysto.neb.j.ef.f.wilki.nson@gmail.com</a>
<a href=""mailto:k.e.y.s.ton.eb.jeff.w.i.l.kin.s.o.n@gmail.com"">k.e.y.s.ton.eb.jeff.w.i.l.kin.s.o.n@gmail.com</a>
<a href=""mailto:k.e.ys.tone.b.je.ffw.i.l.kinso.n@gmail.com"">k.e.ys.tone.b.je.ffw.i.l.kinso.n@gmail.com</a>
<a href=""mailto:key.st.on.eb.j.ef.fw.i.lk.i.nson@gmail.com"">key.st.on.eb.j.ef.fw.i.lk.i.nson@gmail.com</a>
<a href=""mailto:ke.yst.one.b.j.ef.fwi.lk.in.so.n@gmail.com"">ke.yst.one.b.j.ef.fwi.lk.in.so.n@gmail.com</a>
<a href=""mailto:k.e.ystoneb.je.ffw.i.l.k.i.n.s.on@gmail.com"">k.e.ystoneb.je.ffw.i.l.k.i.n.s.on@gmail.com</a>
<a href=""mailto:ke.ys.to.ne.b.j.e.ff.w.i.lkins.on@gmail.com"">ke.ys.to.ne.b.j.e.ff.w.i.lkins.on@gmail.com</a>
<a href=""mailto:key.s.t.o.neb.je.ffw.i.lk.ins.o.n@gmail.com"">key.s.t.o.neb.je.ffw.i.lk.ins.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.ton.e.b.je.ffw.il.k.i.nso.n@gmail.com"">k.ey.s.ton.e.b.je.ffw.il.k.i.nso.n@gmail.com</a>
<a href=""mailto:k.e.y.sto.neb.jef.f.w.ilk.inso.n@gmail.com"">k.e.y.sto.neb.jef.f.w.ilk.inso.n@gmail.com</a>
<a href=""mailto:keyst.oneb.jeff.w.ilk.ins.o.n@gmail.com"">keyst.oneb.jeff.w.ilk.ins.o.n@gmail.com</a>
<a href=""mailto:k.eys.toneb.jef.f.w.i.lki.n.so.n@gmail.com"">k.eys.toneb.jef.f.w.i.lki.n.so.n@gmail.com</a>
<a href=""mailto:ke.y.st.on.e.b.j.ef.f.wi.l.kinso.n@gmail.com"">ke.y.st.on.e.b.j.ef.f.wi.l.kinso.n@gmail.com</a>
<a href=""mailto:k.e.y.st.o.n.e.b.je.ff.w.ilkinson@gmail.com"">k.e.y.st.o.n.e.b.je.ff.w.ilkinson@gmail.com</a>
<a href=""mailto:ke.y.s.t.one.b.j.ef.fw.i.lk.i.n.so.n@gmail.com"">ke.y.s.t.one.b.j.ef.fw.i.lk.i.n.so.n@gmail.com</a>
<a href=""mailto:k.eysto.n.e.b.j.e.f.f.w.i.l.kin.s.on@gmail.com"">k.eysto.n.e.b.j.e.f.f.w.i.l.kin.s.on@gmail.com</a>
<a href=""mailto:key.ston.eb.j.eff.wi.lk.in.so.n@gmail.com"">key.ston.eb.j.eff.wi.lk.in.so.n@gmail.com</a>
<a href=""mailto:k.e.y.st.on.eb.j.ef.f.wil.k.ins.o.n@gmail.com"">k.e.y.st.on.eb.j.ef.f.wil.k.ins.o.n@gmail.com</a>
<a href=""mailto:ke.ysto.neb.jef.f.w.i.l.k.in.s.o.n@gmail.com"">ke.ysto.neb.jef.f.w.i.l.k.in.s.o.n@gmail.com</a>
<a href=""mailto:k.ey.st.o.ne.b.jef.fw.il.k.i.n.s.on@gmail.com"">k.ey.st.o.ne.b.jef.fw.il.k.i.n.s.on@gmail.com</a>
<a href=""mailto:keys.t.one.b.jef.fw.i.l.ki.nso.n@gmail.com"">keys.t.one.b.jef.fw.i.l.ki.nso.n@gmail.com</a>
<a href=""mailto:k.ey.sto.neb.je.ffw.i.l.kinso.n@gmail.com"">k.ey.sto.neb.je.ffw.i.l.kinso.n@gmail.com</a>
<a href=""mailto:ke.y.st.o.neb.jef.fwi.l.kins.on@gmail.com"">ke.y.st.o.neb.jef.fwi.l.kins.on@gmail.com</a>
<a href=""mailto:k.e.y.stone.b.j.e.ffw.il.k.i.ns.on@gmail.com"">k.e.y.stone.b.j.e.ffw.il.k.i.ns.on@gmail.com</a>
<a href=""mailto:k.e.ys.t.oneb.j.effwil.k.in.s.on@gmail.com"">k.e.ys.t.oneb.j.effwil.k.in.s.on@gmail.com</a>
<a href=""mailto:k.ey.s.t.one.b.je.f.f.w.il.kin.s.on@gmail.com"">k.ey.s.t.one.b.je.f.f.w.il.kin.s.on@gmail.com</a>
<a href=""mailto:ke.ys.t.o.ne.b.j.e.ffwil.ki.nso.n@gmail.com"">ke.ys.t.o.ne.b.j.e.ffwil.ki.nso.n@gmail.com</a>
<a href=""mailto:ke.y.st.o.n.eb.j.e.ffwil.kin.so.n@gmail.com"">ke.y.st.o.n.eb.j.e.ffwil.kin.so.n@gmail.com</a>
<a href=""mailto:keys.to.n.e.b.j.ef.f.wi.l.ki.ns.o.n@gmail.com"">keys.to.n.e.b.j.ef.f.wi.l.ki.ns.o.n@gmail.com</a>
<a href=""mailto:key.s.toneb.j.ef.fwi.lk.i.n.so.n@gmail.com"">key.s.toneb.j.ef.fwi.lk.i.n.so.n@gmail.com</a>
<a href=""mailto:k.e.ys.t.on.e.b.jeffwilk.in.s.o.n@gmail.com"">k.e.ys.t.on.e.b.jeffwilk.in.s.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.toneb.jef.fwi.l.kin.so.n@gmail.com"">k.e.y.s.toneb.jef.fwi.l.kin.so.n@gmail.com</a>
<a href=""mailto:keyst.o.ne.b.jeffwi.lki.nso.n@gmail.com"">keyst.o.ne.b.jeffwi.lki.nso.n@gmail.com</a>
<a href=""mailto:k.ey.s.tone.b.jef.f.wi.l.kin.s.o.n@gmail.com"">k.ey.s.tone.b.jef.f.wi.l.kin.s.o.n@gmail.com</a>
<a href=""mailto:keys.ton.e.b.je.f.f.wi.l.ki.nso.n@gmail.com"">keys.ton.e.b.je.f.f.wi.l.ki.nso.n@gmail.com</a>
<a href=""mailto:key.sto.neb.j.eff.wil.k.i.n.son@gmail.com"">key.sto.neb.j.eff.wil.k.i.n.son@gmail.com</a>
<a href=""mailto:k.e.ys.to.neb.je.ffwil.k.i.n.so.n@gmail.com"">k.e.ys.to.neb.je.ffwil.k.i.n.so.n@gmail.com</a>
<a href=""mailto:key.stone.b.jeff.wi.lk.i.ns.o.n@gmail.com"">key.stone.b.jeff.wi.lk.i.ns.o.n@gmail.com</a>
<a href=""mailto:key.s.t.on.eb.j.ef.f.wil.kinson@gmail.com"">key.s.t.on.eb.j.ef.f.wil.kinson@gmail.com</a>
<a href=""mailto:ke.ys.tone.b.j.ef.f.w.i.lkin.s.o.n@gmail.com"">ke.ys.tone.b.j.ef.f.w.i.lkin.s.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.o.n.eb.jeff.wilkins.o.n@gmail.com"">k.ey.s.t.o.n.eb.jeff.wilkins.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.to.n.eb.j.ef.f.wi.l.k.in.so.n@gmail.com"">ke.y.s.to.n.eb.j.ef.f.wi.l.k.in.so.n@gmail.com</a>
<a href=""mailto:keysto.neb.jeff.wil.kin.son@gmail.com"">keysto.neb.jeff.wil.kin.son@gmail.com</a>
<a href=""mailto:k.ey.s.to.n.eb.j.ef.f.w.il.k.i.ns.o.n@gmail.com"">k.ey.s.to.n.eb.j.ef.f.w.il.k.i.ns.o.n@gmail.com</a>
<a href=""mailto:keyston.e.b.je.ff.wi.lki.n.s.on@gmail.com"">keyston.e.b.je.ff.wi.lki.n.s.on@gmail.com</a>
<a href=""mailto:ke.ys.ton.e.b.j.e.f.f.wi.lk.ins.on@gmail.com"">ke.ys.ton.e.b.j.e.f.f.wi.lk.ins.on@gmail.com</a>
<a href=""mailto:ke.yst.on.e.b.je.ffw.i.l.k.in.s.o.n@gmail.com"">ke.yst.on.e.b.je.ffw.i.l.k.in.s.o.n@gmail.com</a>
<a href=""mailto:keys.t.o.n.e.b.j.e.f.fwilk.i.n.so.n@gmail.com"">keys.t.o.n.e.b.j.e.f.fwilk.i.n.so.n@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.neb.j.e.ff.w.il.k.i.n.so.n@gmail.com"">k.e.y.s.t.o.neb.j.e.ff.w.il.k.i.n.so.n@gmail.com</a>
<a href=""mailto:k.eys.t.o.neb.je.f.fwil.k.inson@gmail.com"">k.eys.t.o.neb.je.f.fwil.k.inson@gmail.com</a>
<a href=""mailto:keys.t.one.b.j.eff.wi.l.k.in.son@gmail.com"">keys.t.one.b.j.eff.wi.l.k.in.son@gmail.com</a>
<a href=""mailto:k.ey.st.o.n.e.b.jeffwi.lk.ins.on@gmail.com"">k.ey.st.o.n.e.b.jeffwi.lk.ins.on@gmail.com</a>
<a href=""mailto:keyston.eb.je.f.fw.il.k.inson@gmail.com"">keyston.eb.je.f.fw.il.k.inson@gmail.com</a>
<a href=""mailto:k.ey.s.t.o.n.eb.j.ef.fwil.k.inson@gmail.com"">k.ey.s.t.o.n.eb.j.ef.fwil.k.inson@gmail.com</a>
<a href=""mailto:k.ey.s.t.o.neb.j.e.ffw.i.l.k.i.nso.n@gmail.com"">k.ey.s.t.o.neb.j.e.ffw.i.l.k.i.nso.n@gmail.com</a>
<a href=""mailto:k.e.ysto.neb.j.effw.il.ki.ns.on@gmail.com"">k.e.ysto.neb.j.effw.il.ki.ns.on@gmail.com</a>
<a href=""mailto:k.e.ysto.neb.j.e.f.fwilk.inson@gmail.com"">k.e.ysto.neb.j.e.f.fwilk.inson@gmail.com</a>
<a href=""mailto:k.ey.sto.n.e.b.je.ff.w.i.l.ki.ns.o.n@gmail.com"">k.ey.sto.n.e.b.je.ff.w.i.l.ki.ns.o.n@gmail.com</a>
<a href=""mailto:k.e.y.st.one.b.j.e.f.f.wil.k.i.nson@gmail.com"">k.e.y.st.one.b.j.e.f.f.wil.k.i.nson@gmail.com</a>
<a href=""mailto:k.eys.ton.eb.j.e.ffw.i.lki.ns.o.n@gmail.com"">k.eys.ton.eb.j.e.ffw.i.lki.ns.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.to.n.e.b.je.f.f.w.i.l.kin.s.o.n@gmail.com"">k.ey.s.to.n.e.b.je.f.f.w.i.l.kin.s.o.n@gmail.com</a>
<a href=""mailto:k.e.ys.ton.e.b.jef.fw.i.l.k.ins.o.n@gmail.com"">k.e.ys.ton.e.b.jef.fw.i.l.k.ins.o.n@gmail.com</a>
<a href=""mailto:key.st.on.eb.j.e.ffwi.lki.n.s.on@gmail.com"">key.st.on.eb.j.e.ffwi.lki.n.s.on@gmail.com</a>
<a href=""mailto:key.s.t.one.b.j.e.ffwilkinson@gmail.com"">key.s.t.one.b.j.e.ffwilkinson@gmail.com</a>
<a href=""mailto:k.ey.st.o.ne.b.j.ef.fwi.lkins.o.n@gmail.com"">k.ey.st.o.ne.b.j.ef.fwi.lkins.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.o.neb.jeff.w.ilk.i.nson@gmail.com"">ke.y.s.t.o.neb.jeff.w.ilk.i.nson@gmail.com</a>
<a href=""mailto:ke.yst.on.eb.j.e.ffw.il.k.i.nson@gmail.com"">ke.yst.on.eb.j.e.ffw.il.k.i.nson@gmail.com</a>
<a href=""mailto:ke.y.st.on.eb.jef.f.wi.l.k.i.n.s.o.n@gmail.com"">ke.y.st.on.eb.jef.f.wi.l.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:ke.ysto.neb.jef.f.w.ilk.in.son@gmail.com"">ke.ysto.neb.jef.f.w.ilk.in.son@gmail.com</a>
<a href=""mailto:key.s.t.o.ne.b.j.ef.f.wi.l.kin.so.n@gmail.com"">key.s.t.o.ne.b.j.ef.f.wi.l.kin.so.n@gmail.com</a>
<a href=""mailto:k.e.y.stone.b.j.eff.w.il.k.i.n.son@gmail.com"">k.e.y.stone.b.j.eff.w.il.k.i.n.son@gmail.com</a>
<a href=""mailto:k.ey.st.o.n.e.b.j.e.f.fw.il.kin.son@gmail.com"">k.ey.st.o.n.e.b.j.e.f.fw.il.kin.son@gmail.com</a>
<a href=""mailto:ke.ys.t.on.eb.j.e.f.fwi.l.kins.o.n@gmail.com"">ke.ys.t.on.eb.j.e.f.fwi.l.kins.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.ton.e.b.j.ef.f.w.i.lki.n.son@gmail.com"">k.e.y.s.ton.e.b.j.ef.f.w.i.lki.n.son@gmail.com</a>
<a href=""mailto:keys.to.n.eb.jef.fwil.ki.nso.n@gmail.com"">keys.to.n.eb.jef.fwil.ki.nso.n@gmail.com</a>
<a href=""mailto:ke.ys.t.o.n.eb.j.ef.f.w.il.kin.so.n@gmail.com"">ke.ys.t.o.n.eb.j.ef.f.w.il.kin.so.n@gmail.com</a>
<a href=""mailto:k.e.ys.ton.eb.jef.f.w.il.ki.n.s.o.n@gmail.com"">k.e.ys.ton.eb.jef.f.w.il.ki.n.s.o.n@gmail.com</a>
<a href=""mailto:k.e.y.ston.eb.je.ffw.il.kinso.n@gmail.com"">k.e.y.ston.eb.je.ffw.il.kinso.n@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.b.j.e.ff.wi.lk.ins.on@gmail.com"">k.e.y.s.t.o.ne.b.j.e.ff.wi.lk.ins.on@gmail.com</a>
<a href=""mailto:ke.y.sto.neb.j.e.ff.wi.l.kins.on@gmail.com"">ke.y.sto.neb.j.e.ff.wi.l.kins.on@gmail.com</a>
<a href=""mailto:keys.t.oneb.j.effw.il.k.i.n.son@gmail.com"">keys.t.oneb.j.effw.il.k.i.n.son@gmail.com</a>
<a href=""mailto:keys.t.oneb.j.ef.fwil.kinso.n@gmail.com"">keys.t.oneb.j.ef.fwil.kinso.n@gmail.com</a>
<a href=""mailto:keys.t.on.eb.j.e.f.f.w.ilkin.s.on@gmail.com"">keys.t.on.eb.j.e.f.f.w.ilkin.s.on@gmail.com</a>
<a href=""mailto:ke.yst.o.neb.je.ffw.ilk.i.n.so.n@gmail.com"">ke.yst.o.neb.je.ffw.ilk.i.n.so.n@gmail.com</a>
<a href=""mailto:ke.ys.t.o.n.eb.j.eff.wi.l.kins.on@gmail.com"">ke.ys.t.o.n.eb.j.eff.wi.l.kins.on@gmail.com</a>
<a href=""mailto:ke.y.sto.neb.j.e.f.f.wi.l.k.in.s.o.n@gmail.com"">ke.y.sto.neb.j.e.f.f.wi.l.k.in.s.o.n@gmail.com</a>
<a href=""mailto:k.eysto.ne.b.j.e.ff.wi.l.ki.n.so.n@gmail.com"">k.eysto.ne.b.j.e.ff.wi.l.ki.n.so.n@gmail.com</a>
<a href=""mailto:k.e.y.s.to.n.eb.je.f.f.wi.l.kinso.n@gmail.com"">k.e.y.s.to.n.eb.je.f.f.wi.l.kinso.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.o.ne.b.je.f.fwil.k.in.s.o.n@gmail.com"">ke.y.s.t.o.ne.b.je.f.fwil.k.in.s.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.ton.e.b.j.e.f.f.wi.l.k.i.n.s.o.n@gmail.com"">k.e.y.s.ton.e.b.j.e.f.f.wi.l.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.neb.je.f.f.w.i.lk.inson@gmail.com"">k.e.y.s.t.o.neb.je.f.f.w.i.lk.inson@gmail.com</a>
<a href=""mailto:keysto.ne.b.jef.fwil.ki.ns.on@gmail.com"">keysto.ne.b.jef.fwil.ki.ns.on@gmail.com</a>
<a href=""mailto:k.ey.st.o.neb.j.e.f.fw.il.ki.ns.on@gmail.com"">k.ey.st.o.neb.j.e.f.fw.il.ki.ns.on@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.n.eb.j.e.ff.w.i.l.kin.son@gmail.com"">k.e.y.s.t.o.n.eb.j.e.ff.w.i.l.kin.son@gmail.com</a>
<a href=""mailto:ke.y.st.o.ne.b.je.f.f.w.ilkin.s.on@gmail.com"">ke.y.st.o.ne.b.je.f.f.w.ilkin.s.on@gmail.com</a>
<a href=""mailto:k.ey.sto.n.e.b.j.ef.fwil.k.i.n.son@gmail.com"">k.ey.sto.n.e.b.j.ef.fwil.k.i.n.son@gmail.com</a>
<a href=""mailto:keyst.on.e.b.j.effw.i.lkins.on@gmail.com"">keyst.on.e.b.j.effw.i.lkins.on@gmail.com</a>
<a href=""mailto:keyst.on.eb.je.ffwi.l.k.i.n.s.o.n@gmail.com"">keyst.on.eb.je.ffwi.l.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.to.ne.b.jef.f.wil.kins.on@gmail.com"">k.e.y.s.to.ne.b.jef.f.wil.kins.on@gmail.com</a>
<a href=""mailto:k.eys.t.o.ne.b.je.f.f.w.i.lk.i.n.so.n@gmail.com"">k.eys.t.o.ne.b.je.f.f.w.i.lk.i.n.so.n@gmail.com</a>
<a href=""mailto:keys.to.n.eb.j.effw.il.k.i.n.son@gmail.com"">keys.to.n.eb.j.effw.il.k.i.n.son@gmail.com</a>
<a href=""mailto:ke.ys.toneb.je.f.fwil.kin.s.o.n@gmail.com"">ke.ys.toneb.je.f.fwil.kin.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.o.ne.b.jef.f.wil.ki.nson@gmail.com"">ke.y.s.t.o.ne.b.jef.f.wil.ki.nson@gmail.com</a>
<a href=""mailto:k.e.ys.to.n.eb.j.ef.fwil.k.i.n.s.o.n@gmail.com"">k.e.ys.to.n.eb.j.ef.fwil.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.stoneb.je.ff.wil.ki.ns.o.n@gmail.com"">ke.y.stoneb.je.ff.wil.ki.ns.o.n@gmail.com</a>
<a href=""mailto:keyst.on.e.b.jeff.wilki.ns.o.n@gmail.com"">keyst.on.e.b.jeff.wilki.ns.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.ton.eb.jeffwi.lk.i.ns.o.n@gmail.com"">k.e.y.s.ton.eb.jeffwi.lk.i.ns.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.one.b.je.f.fw.i.lki.ns.on@gmail.com"">ke.y.s.t.one.b.je.f.fw.i.lki.ns.on@gmail.com</a>
<a href=""mailto:k.ey.sto.neb.j.ef.fwi.l.k.i.n.s.on@gmail.com"">k.ey.sto.neb.j.ef.fwi.l.k.i.n.s.on@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.b.je.f.f.w.ilk.in.s.o.n@gmail.com"">k.e.y.s.t.o.ne.b.je.f.f.w.ilk.in.s.o.n@gmail.com</a>
<a href=""mailto:k.e.yston.e.b.j.eff.wilki.n.s.on@gmail.com"">k.e.yston.e.b.j.eff.wilki.n.s.on@gmail.com</a>
<a href=""mailto:key.st.oneb.jeffw.i.l.ki.n.son@gmail.com"">key.st.oneb.jeffw.i.l.ki.n.son@gmail.com</a>
<a href=""mailto:key.stone.b.j.e.f.f.wi.lk.in.s.o.n@gmail.com"">key.stone.b.j.e.f.f.wi.lk.in.s.o.n@gmail.com</a>
<a href=""mailto:k.e.ysto.ne.b.j.e.f.fw.ilki.n.s.on@gmail.com"">k.e.ysto.ne.b.j.e.f.fw.ilki.n.s.on@gmail.com</a>
<a href=""mailto:ke.ys.to.n.eb.j.ef.fwilkin.s.on@gmail.com"">ke.ys.to.n.eb.j.ef.fwilkin.s.on@gmail.com</a>
<a href=""mailto:key.s.to.n.e.b.je.f.f.w.il.k.i.n.s.on@gmail.com"">key.s.to.n.e.b.je.f.f.w.il.k.i.n.s.on@gmail.com</a>
<a href=""mailto:key.stone.b.je.f.f.w.ilki.n.s.on@gmail.com"">key.stone.b.je.f.f.w.ilki.n.s.on@gmail.com</a>
<a href=""mailto:k.ey.ston.eb.j.e.ff.wil.k.in.s.on@gmail.com"">k.ey.ston.eb.j.e.ff.wil.k.in.s.on@gmail.com</a>
<a href=""mailto:k.e.y.stoneb.jeff.wil.k.i.n.s.o.n@gmail.com"">k.e.y.stoneb.jeff.wil.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.one.b.je.f.f.w.ilk.ins.o.n@gmail.com"">ke.y.s.t.one.b.je.f.f.w.ilk.ins.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.to.ne.b.j.e.f.fw.i.lk.ins.o.n@gmail.com"">k.e.y.s.to.ne.b.j.e.f.fw.i.lk.ins.o.n@gmail.com</a>
<a href=""mailto:keyst.oneb.j.e.ff.w.il.ki.ns.on@gmail.com"">keyst.oneb.j.e.ff.w.il.ki.ns.on@gmail.com</a>
<a href=""mailto:key.ston.eb.jeff.wi.lk.i.ns.o.n@gmail.com"">key.ston.eb.jeff.wi.lk.i.ns.o.n@gmail.com</a>
<a href=""mailto:k.e.yston.eb.j.e.f.fwi.l.kin.son@gmail.com"">k.e.yston.eb.j.e.f.fwi.l.kin.son@gmail.com</a>
<a href=""mailto:keyst.oneb.j.e.f.fw.ilk.i.n.son@gmail.com"">keyst.oneb.j.e.f.fw.ilk.i.n.son@gmail.com</a>
<a href=""mailto:k.e.y.stone.b.je.f.f.w.i.lki.nson@gmail.com"">k.e.y.stone.b.je.f.f.w.i.lki.nson@gmail.com</a>
<a href=""mailto:k.ey.st.o.ne.b.je.ffwil.ki.nson@gmail.com"">k.ey.st.o.ne.b.je.ffwil.ki.nson@gmail.com</a>
<a href=""mailto:key.s.t.o.ne.b.j.effwilk.i.n.son@gmail.com"">key.s.t.o.ne.b.j.effwilk.i.n.son@gmail.com</a>
<a href=""mailto:ke.y.st.o.ne.b.j.eff.w.ilk.ins.o.n@gmail.com"">ke.y.st.o.ne.b.j.eff.w.ilk.ins.o.n@gmail.com</a>
<a href=""mailto:k.e.yst.o.n.e.b.j.ef.fwil.k.i.ns.o.n@gmail.com"">k.e.yst.o.n.e.b.j.ef.fwil.k.i.ns.o.n@gmail.com</a>
<a href=""mailto:key.st.o.n.eb.j.ef.fwi.lk.i.n.son@gmail.com"">key.st.o.n.eb.j.ef.fwi.lk.i.n.son@gmail.com</a>
<a href=""mailto:k.e.y.ston.eb.j.ef.f.w.i.l.k.in.son@gmail.com"">k.e.y.ston.eb.j.ef.f.w.i.l.k.in.son@gmail.com</a>
<a href=""mailto:k.ey.s.toneb.j.eff.w.ilk.in.so.n@gmail.com"">k.ey.s.toneb.j.eff.w.ilk.in.so.n@gmail.com</a>
<a href=""mailto:k.e.ys.toneb.j.e.f.f.w.i.l.ki.n.s.on@gmail.com"">k.e.ys.toneb.j.e.f.f.w.i.l.ki.n.s.on@gmail.com</a>
<a href=""mailto:k.ey.s.t.on.eb.jeff.wil.k.inson@gmail.com"">k.ey.s.t.on.eb.jeff.wil.k.inson@gmail.com</a>
<a href=""mailto:ke.ys.t.o.n.eb.jef.f.w.il.k.in.so.n@gmail.com"">ke.ys.t.o.n.eb.jef.f.w.il.k.in.so.n@gmail.com</a>
<a href=""mailto:keyston.e.b.j.e.ff.w.il.kin.son@gmail.com"">keyston.e.b.j.e.ff.w.il.kin.son@gmail.com</a>
<a href=""mailto:keys.t.on.eb.je.f.f.wi.lkin.son@gmail.com"">keys.t.on.eb.je.f.f.wi.lkin.son@gmail.com</a>
<a href=""mailto:k.e.y.st.o.n.eb.je.f.fwi.lkinso.n@gmail.com"">k.e.y.st.o.n.eb.je.f.fwi.lkinso.n@gmail.com</a>
<a href=""mailto:k.eys.ton.e.b.j.ef.fwi.lki.ns.on@gmail.com"">k.eys.ton.e.b.j.ef.fwi.lki.ns.on@gmail.com</a>
<a href=""mailto:k.eyst.o.n.e.b.jef.f.wi.l.ki.n.so.n@gmail.com"">k.eyst.o.n.e.b.jef.f.wi.l.ki.n.so.n@gmail.com</a>
<a href=""mailto:ke.y.sto.n.e.b.je.f.fwilk.i.nso.n@gmail.com"">ke.y.sto.n.e.b.je.f.fwilk.i.nso.n@gmail.com</a>
<a href=""mailto:k.eyst.o.n.e.b.jef.fwi.lk.ins.o.n@gmail.com"">k.eyst.o.n.e.b.jef.fwi.lk.ins.o.n@gmail.com</a>
<a href=""mailto:k.eyst.on.e.b.j.effwilki.ns.o.n@gmail.com"">k.eyst.on.e.b.j.effwilki.ns.o.n@gmail.com</a>
<a href=""mailto:ke.y.st.o.n.e.b.j.e.f.f.wi.l.k.inson@gmail.com"">ke.y.st.o.n.e.b.j.e.f.f.wi.l.k.inson@gmail.com</a>
<a href=""mailto:k.e.y.st.one.b.jeffw.il.k.i.n.s.on@gmail.com"">k.e.y.st.one.b.jeffw.il.k.i.n.s.on@gmail.com</a>
<a href=""mailto:ke.ys.t.oneb.j.ef.fw.i.l.ki.n.son@gmail.com"">ke.ys.t.oneb.j.ef.fw.i.l.ki.n.son@gmail.com</a>
<a href=""mailto:key.s.t.o.n.e.b.jef.f.wi.l.kin.s.o.n@gmail.com"">key.s.t.o.n.e.b.jef.f.wi.l.kin.s.o.n@gmail.com</a>
<a href=""mailto:ke.yst.oneb.jeff.w.ilk.i.n.so.n@gmail.com"">ke.yst.oneb.jeff.w.ilk.i.n.so.n@gmail.com</a>
<a href=""mailto:k.eys.ton.e.b.jef.fwil.k.i.n.son@gmail.com"">k.eys.ton.e.b.jef.fwil.k.i.n.son@gmail.com</a>
<a href=""mailto:k.eys.tone.b.j.e.ffwi.l.k.in.s.o.n@gmail.com"">k.eys.tone.b.j.e.ffwi.l.k.in.s.o.n@gmail.com</a>
<a href=""mailto:k.e.ys.ton.e.b.j.e.f.f.wi.l.kin.so.n@gmail.com"">k.e.ys.ton.e.b.j.e.f.f.wi.l.kin.so.n@gmail.com</a>
<a href=""mailto:k.e.ys.to.neb.je.f.fwi.lk.i.ns.o.n@gmail.com"">k.e.ys.to.neb.je.f.fwi.lk.i.ns.o.n@gmail.com</a>
<a href=""mailto:k.ey.st.on.eb.jef.f.w.i.lk.inso.n@gmail.com"">k.ey.st.on.eb.jef.f.w.i.lk.inso.n@gmail.com</a>
<a href=""mailto:k.ey.s.to.n.e.b.je.f.f.w.ilk.i.nso.n@gmail.com"">k.ey.s.to.n.e.b.je.f.f.w.ilk.i.nso.n@gmail.com</a>
<a href=""mailto:k.eysto.n.e.b.j.eff.w.ilk.i.n.son@gmail.com"">k.eysto.n.e.b.j.eff.w.ilk.i.n.son@gmail.com</a>
<a href=""mailto:k.eys.t.o.ne.b.je.ff.w.i.l.k.i.nson@gmail.com"">k.eys.t.o.ne.b.je.ff.w.i.l.k.i.nson@gmail.com</a>
<a href=""mailto:keys.ton.eb.je.ffw.i.l.kin.s.on@gmail.com"">keys.ton.eb.je.ffw.i.l.kin.s.on@gmail.com</a>
<a href=""mailto:k.e.yston.eb.jef.fw.i.l.k.ins.on@gmail.com"">k.e.yston.eb.jef.fw.i.l.k.ins.on@gmail.com</a>
<a href=""mailto:k.ey.stone.b.j.e.f.f.w.il.k.ins.o.n@gmail.com"">k.ey.stone.b.j.e.f.f.w.il.k.ins.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.b.j.ef.fw.ilki.nson@gmail.com"">k.e.y.s.t.o.ne.b.j.ef.fw.ilki.nson@gmail.com</a>
<a href=""mailto:k.e.ysto.n.e.b.j.e.f.f.w.i.lk.inson@gmail.com"">k.e.ysto.n.e.b.j.e.f.f.w.i.lk.inson@gmail.com</a>
<a href=""mailto:k.eysto.ne.b.j.eff.wi.lk.ins.o.n@gmail.com"">k.eysto.ne.b.j.eff.wi.lk.ins.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.to.neb.j.eff.wilk.ins.o.n@gmail.com"">ke.y.s.to.neb.j.eff.wilk.ins.o.n@gmail.com</a>
<a href=""mailto:keys.t.oneb.jef.fwilki.ns.on@gmail.com"">keys.t.oneb.jef.fwilki.ns.on@gmail.com</a>
<a href=""mailto:keys.tone.b.jeffwilk.in.s.o.n@gmail.com"">keys.tone.b.jeffwilk.in.s.o.n@gmail.com</a>
<a href=""mailto:k.e.y.ston.e.b.j.e.ffwi.lk.inso.n@gmail.com"">k.e.y.ston.e.b.j.e.ffwi.lk.inso.n@gmail.com</a>
<a href=""mailto:key.s.tone.b.j.e.ff.wil.kinso.n@gmail.com"">key.s.tone.b.j.e.ff.wil.kinso.n@gmail.com</a>
<a href=""mailto:keystoneb.j.eff.wilkins.o.n@gmail.com"">keystoneb.j.eff.wilkins.o.n@gmail.com</a>
<a href=""mailto:ke.ys.t.oneb.je.f.fwilk.inso.n@gmail.com"">ke.ys.t.oneb.je.f.fwilk.inso.n@gmail.com</a>
<a href=""mailto:ke.yst.one.b.j.ef.f.wi.l.k.inso.n@gmail.com"">ke.yst.one.b.j.ef.f.wi.l.k.inso.n@gmail.com</a>
<a href=""mailto:k.ey.sto.ne.b.j.e.f.f.wil.k.i.n.son@gmail.com"">k.ey.sto.ne.b.j.e.f.f.wil.k.i.n.son@gmail.com</a>
<a href=""mailto:k.ey.st.oneb.j.e.ffwilk.in.s.on@gmail.com"">k.ey.st.oneb.j.e.ffwilk.in.s.on@gmail.com</a>
<a href=""mailto:key.s.to.n.e.b.jeffwi.lkinso.n@gmail.com"">key.s.to.n.e.b.jeffwi.lkinso.n@gmail.com</a>
<a href=""mailto:k.e.y.s.t.oneb.j.eff.wi.lk.in.son@gmail.com"">k.e.y.s.t.oneb.j.eff.wi.lk.in.son@gmail.com</a>
<a href=""mailto:k.ey.st.o.n.eb.j.e.ff.wilki.nso.n@gmail.com"">k.ey.st.o.n.eb.j.e.ff.wilki.nso.n@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.ne.b.jef.f.w.i.l.ki.ns.o.n@gmail.com"">k.e.y.s.t.o.ne.b.jef.f.w.i.l.ki.ns.o.n@gmail.com</a>
<a href=""mailto:ke.y.sto.ne.b.je.ffwi.l.k.i.nson@gmail.com"">ke.y.sto.ne.b.je.ffwi.l.k.i.nson@gmail.com</a>
<a href=""mailto:k.e.y.s.ton.eb.je.f.f.wi.lkin.s.on@gmail.com"">k.e.y.s.ton.eb.je.f.f.wi.lkin.s.on@gmail.com</a>
<a href=""mailto:ke.ys.to.neb.j.ef.fwil.k.in.s.o.n@gmail.com"">ke.ys.to.neb.j.ef.fwil.k.in.s.o.n@gmail.com</a>
<a href=""mailto:k.e.yston.e.b.je.ffw.ilkins.on@gmail.com"">k.e.yston.e.b.je.ffw.ilkins.on@gmail.com</a>
<a href=""mailto:keyst.o.n.eb.j.effw.il.ki.n.son@gmail.com"">keyst.o.n.eb.j.effw.il.ki.n.son@gmail.com</a>
<a href=""mailto:k.e.y.s.to.n.eb.j.eff.w.ilki.nson@gmail.com"">k.e.y.s.to.n.eb.j.eff.w.ilki.nson@gmail.com</a>
<a href=""mailto:keys.ton.e.b.j.ef.f.w.il.k.in.s.o.n@gmail.com"">keys.ton.e.b.j.ef.f.w.il.k.in.s.o.n@gmail.com</a>
<a href=""mailto:key.s.tone.b.j.e.f.f.w.i.lkins.on@gmail.com"">key.s.tone.b.j.e.f.f.w.i.lkins.on@gmail.com</a>
<a href=""mailto:keys.t.o.ne.b.je.f.f.w.ilk.i.n.so.n@gmail.com"">keys.t.o.ne.b.je.f.f.w.ilk.i.n.so.n@gmail.com</a>
<a href=""mailto:key.stone.b.jef.f.w.i.l.ki.nso.n@gmail.com"">key.stone.b.jef.f.w.i.l.ki.nso.n@gmail.com</a>
<a href=""mailto:ke.ysto.neb.jeff.w.i.l.k.inson@gmail.com"">ke.ysto.neb.jeff.w.i.l.k.inson@gmail.com</a>"
nKwrKQVN,Classe Biblioteca,hercioneto,Java,Monday 20th of November 2023 01:47:29 PM CDT,"import java.awt.FlowLayout;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Professor
 */
public class Biblioteca {
    private String tituloDoLivro;
    private String autor;
    private Date dataCompra;
    private Integer pagina;
    private Float valorCompra;
    private Integer categoria;
    private Float lucro;
    private Float valorVenda;
    private String oferta;

    public String getTituloDoLivro() {
        return tituloDoLivro;
    }

    public void setTituloDoLivro(String tituloDoLivro) {
        this.tituloDoLivro = tituloDoLivro;
    }

    public String getAutor() {
        return autor;
    }

    public void setAutor(String autor) {
        this.autor = autor;
    }

    public Date getDataCompra() {
        return dataCompra;
    }

    public void setDataCompra(Date dataCompra) {
        this.dataCompra = dataCompra;
    }

    public Integer getPagina() {
        return pagina;
    }

    public void setPagina(Integer pagina) {
        this.pagina = pagina;
    }

    public Float getValorCompra() {
        return valorCompra;
    }

    public void setValorCompra(Float valorCompra) {
        this.valorCompra = valorCompra;
    }

    public Integer getCategoria() {
        return categoria;
    }

    public void setCategoria(Integer categoria) {
        this.categoria = categoria;
    }

    public Float getLucro() {
        switch(this.getCategoria()) {
        case 1:
          lucro = 24.00f;
          break;
        case 2:
          lucro = 28.00f;
          break;
        case 3:
          lucro = 33.00f;
          break;
        case 4:
          lucro = 37.00f;
          break;
        default:
          lucro = 0f;
      }
        return lucro;
    }

    public void setLucro(Float lucro) {
        this.lucro = lucro;
    }

    public Float getValorVenda() {
        Float valorV = this.valorCompra+(this.valorCompra*(this.getLucro()/100));
                if (this.oferta==""SIM"") {
                    valorV = valorV-((10/100)*valorV);
                }
         valorVenda = valorV;
        return valorVenda;
    }

    public void setValorVenda(Float valorVenda) {
        this.valorVenda = valorVenda;
    }

    public String getOferta() {
        return oferta;
    }

    public void setOferta(String oferta) {
        this.oferta = oferta;
    }
    
    public Float getValorLucro() {
        return this.valorCompra*(this.lucro/100);
    }
    
    public void imprime (){
        System.out.println(""Título do livro: ""+ this.getTituloDoLivro());
        System.out.println(""Autor do livro: ""+ this.getAutor());
        System.out.println(""Data da compra: ""+ this.getDataCompra());
        System.out.println(""Páginas: ""+ this.getPagina());
        System.out.println(""Categoria: ""+ this.getCategoria());
        System.out.println(""Valor da compra: ""+ this.getValorCompra());
        System.out.println(""Lucro: ""+ this.getLucro());
        System.out.println(""Valor Lucro: ""+ this.getValorLucro());
        System.out.println(""Oferta: ""+ this.getOferta());
        System.out.println(""Valor de venda: ""+ this.getValorVenda());
        
        
        JFrame j = new JFrame(""Janela De Retorno de Dados"");
        j.setSize(200,300);
        j.setLocationRelativeTo(j);
        j.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        JPanel p = new JPanel();
        FlowLayout layout = new FlowLayout(FlowLayout.CENTER, 10, 10);
        p.setLayout(layout);
        
        JLabel jLb1 = new JLabel(""Digite o título do livro:"");
        JLabel jLb1R = new JLabel(this.getTituloDoLivro());
        
        
        JLabel jLb2 = new JLabel(""Digite o autor do livro:"");       
        JLabel jLb2R = new JLabel(this.getAutor());
        
        JLabel jLb3 = new JLabel(""Digite a data da compra:"");       
        String dataCompra = this.getDataCompra().toString();
        JLabel jLb3R = new JLabel(dataCompra);
        
        JLabel jLb4 = new JLabel(""Digite o número de páginas:"");       
        JLabel jLb4R = new JLabel(this.getPagina().toString());
        
        JLabel jLb5 = new JLabel(""Digite a categoria:"");       
        JLabel jLb5R = new JLabel(this.getCategoria().toString());
        
        JLabel jLb6 = new JLabel(""Digite valor de compra:"");       
        JLabel jLb6R = new JLabel(this.getValorCompra().toString());
        
        JLabel jLb7 = new JLabel(""Oferta? (SIM / NÃO)"");       
        JLabel jLb7R = new JLabel(this.getOferta());
        
        JLabel jLb8 = new JLabel(""Lucro"");       
        JLabel jLb8R = new JLabel(this.getLucro().toString());
        
        JLabel jLb9 = new JLabel(""Valor Lucro"");       
        JLabel jLb9R = new JLabel(this.getValorLucro().toString());
        
        JLabel jLb10 = new JLabel(""Valor Venda"");       
        JLabel jLb10R = new JLabel(this.getValorVenda().toString());
        
        JLabel jLbEspaco = new JLabel("" | "");       
        
        
        
        p.add(jLb1);
        p.add(jLb1R);
        
        

        p.add(jLb2);
        p.add(jLb2R);

        
        
        p.add(jLb3);
        p.add(jLb3R);

        
        
        p.add(jLb4);
        p.add(jLb4R);

        
        p.add(jLb5);
        p.add(jLb5R);
        
        
        p.add(jLb6);
        p.add(jLb6R);

        
        p.add(jLb7);
        p.add(jLb7R);
        
        
        p.add(jLb8);
        p.add(jLb8R);

        
        p.add(jLb9);
        p.add(jLb9R);
        
        
        p.add(jLb10);
        p.add(jLb10R);

        j.add(p); 
        j.setVisible(true);
        
    }
}"
TxtqsRpu,Exercicio 20-11-2023,hercioneto,Java,Monday 20th of November 2023 01:46:48 PM CDT,"import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Professor
 */
public class Exercicio20112023 {

    public static void main(String[] args) throws ParseException {
        /*
        Biblioteca b = new Biblioteca();
        Scanner l = new Scanner(System.in);
        System.out.println(""Digite o título do livro: "");
        b.setTituloDoLivro(l.nextLine());
        System.out.println(""Digite o autor do livro: "");
        b.setAutor(l.nextLine());
        System.out.println(""Digite a data da compra: "");
        DateFormat formatter = new SimpleDateFormat(""dd/MM/yyyy"");
        Date date = formatter.parse(l.nextLine());
        b.setDataCompra(date);
        System.out.println(""Digite o número de páginas: "");
        b.setPagina(l.nextInt());
        System.out.println(""Digite a categoria: "");
        b.setCategoria(l.nextInt());
        System.out.println(""Digite valor de compra: "");
        b.setValorCompra(l.nextFloat());
        System.out.println(""Oferta? (SIM / NÃO) "");
        b.setOferta(l.next());
        b.imprime();
        */
        JFrame j = new JFrame(""Janela De Entrada de Dados"");
        j.setSize(400,400);
        j.setLocationRelativeTo(j);
        j.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        JPanel p = new JPanel();
        FlowLayout layout = new FlowLayout();
        p.setLayout(layout);
        
        JLabel jLb1 = new JLabel(""Digite o título do livro:"");       
        JTextField jTx1 = new JTextField();
        jTx1.setPreferredSize(new Dimension( 200, 24 ));
        
        JLabel jLb2 = new JLabel(""Digite o autor do livro:"");       
        JTextField jTx2 = new JTextField();
        jTx2.setPreferredSize(new Dimension( 200, 24 ));
        
        JLabel jLb3 = new JLabel(""Digite a data da compra:"");       
        JTextField jTx3 = new JTextField();
        jTx3.setPreferredSize(new Dimension( 200, 24 ));
        
        JLabel jLb4 = new JLabel(""Digite o número de páginas:"");       
        JTextField jTx4 = new JTextField();
        jTx4.setPreferredSize(new Dimension( 200, 24 ));
        
        JLabel jLb5 = new JLabel(""Digite a categoria:"");       
        JTextField jTx5 = new JTextField();
        jTx5.setPreferredSize(new Dimension( 200, 24 ));
        
        JLabel jLb6 = new JLabel(""Digite valor de compra:"");       
        JTextField jTx6 = new JTextField();
        jTx6.setPreferredSize(new Dimension( 200, 24 ));
        
        JLabel jLb7 = new JLabel(""Oferta? (SIM / NÃO)"");       
        JTextField jTx7 = new JTextField();
        jTx7.setPreferredSize(new Dimension( 200, 24 ));
        
        JButton jBt1=new JButton(""Clique aqui"");  
        jBt1.setBounds(50,100,95,30);  
        jBt1.addActionListener(new ActionListener(){
        
        public void actionPerformed(ActionEvent ae)
          {
           
            try {
                Biblioteca b = new Biblioteca();
                
                b.setTituloDoLivro(jTx1.getText());
                
                b.setAutor(jTx2.getText());
                
                DateFormat formatter = new SimpleDateFormat(""dd/MM/yyyy"");
                var date = formatter.parse(jTx3.getText());
                b.setDataCompra(date);
                
                b.setPagina(Integer.parseInt(jTx4.getText()));
                
                b.setCategoria(Integer.parseInt(jTx5.getText()));
                
                b.setValorCompra(Float.parseFloat(jTx6.getText()));
                
                b.setOferta(jTx7.getText());
                b.imprime();
            } catch (ParseException ex) {
                Logger.getLogger(Exercicio20112023.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        });
        
        
        p.add(jLb1);
        p.add(jTx1);
        p.add(jLb2);
        p.add(jTx2);
        p.add(jLb3);
        p.add(jTx3);
        p.add(jLb4);
        p.add(jTx4);
        p.add(jLb5);
        p.add(jTx5);
        p.add(jLb6);
        p.add(jTx6);
        p.add(jLb7);
        p.add(jTx7);
        p.add(jBt1);
        j.add(p); 
        j.setVisible(true);

    }
}"
zenfM7wu,Comunicacion Serial,uzielmaker,C++,Monday 20th of November 2023 01:39:31 PM CDT,"#include <SoftwareSerial.h>

byte PinTx = 2;
byte PinRx = 3;

SoftwareSerial modulo(PinTx, PinRx);
void setup(){
  Serial.begin(115200);
  modulo.begin(115200);
  delay(1000);
  Serial.println(""Enviando primer comando AT"");  
  modulo.println(""AT"");
  updateSerial();
  }
void loop(){
  updateSerial();
}
void updateSerial(){

  delay(500);

  while (Serial.available()){
    modulo.write(Serial.read());
  }
  while (modulo.available()){
    Serial.write(modulo.read());
  }
}"
K91gDWnD,half working sprite 2plan (code6.s),glokyfull,Motorola 68000 HiSoft Dev,Monday 20th of November 2023 01:38:56 PM CDT,"subpixel equ 4
subpixel2 equ 8
nbbob	equ 80

start:

	clr.l -(sp)
	move.w #$20,-(sp)
	trap #1
	addq.l #6,sp

	lea spritedeca,a0
	move.w #16*2*16-1,d0
.toto	clr.w (a0)+
	dbf d0,.toto

   move.l $44e.w,d0   
   clr.w -(sp)
    move.l d0,-(sp)
    move.l d0,-(sp)
    move.w #5,-(sp)
    trap #14
    lea 12(sp),sp


	jsr extractsprite

    jsr prepare_segments

; creation convx et convy 
;	move.l #$8000,d0	;     offset,motif or
;	lea convx,a0
;.loopconvx
;	rept subpixel
;	  move.l d0,(a0)+
;	endr
;	lsr.w #1,d0
;	bne.s .loopconvx
;	add.l #$00088000,d0
;	cmp.l #$00a08000,d0
;	bne.s .loopconvx
;
;	move.w #0,d0
;	move.w #199,d1
;	lea convy,a0
;.loopconvy
;	rept subpixel
;	move.w d0,(a0)+
;	endr
;	add #160,d0
;	dbf d1,.loopconvy
;

	move.l ptrConvX,a0
	lea codegenliste,a1
	move.w #19,d0
	moveq #0,d2
.loop3
	lea codegenliste,a1
	lea codeeffliste,a3
	moveq #15,d3
.loop2
	move.l (a3),d5
	move.l (a1)+,d1
	rept subpixel2
	move.w d2,(a0)+		; offset
	move.l d5,(a0)+		; code effacement
	move.l d1,(a0)+		; code affichage

	endr

	dbf d3,.loop2
	addq.w #8,d2
	dbf d0,.loop3

	move.l ptrConvY,a0
	moveq #0,d2
	move.w #160,d1
	move.w #199,d0 		; pas de cliping pour l'instant
.loop4
	rept subpixel2
	move.w d2,(a0)+
	endr
	add d1,d2
	dbf d0,.loop4

	jsr convsinus
	jsr swap_screen
	
main

	jsr majAngle
	jsr calcAllPos


	move.w #$111,$ffff8240.w
	jsr waitvbl
	clr.w $ffff8240.w
	;jsr swap_screen
	move.l log,d0
	
	
	cmp.b #$b9,$fffffc02.w
	beq.s .fin
	jmp main
.fin

	bsr waitvbl
	move.l $44e.w,d0
	lsr.w #8,d0
	move.l d0,$ffff8200.w
	bsr waitvbl
    move.l $44e.w,d0   
;
    move.w #1,-(sp)
;
    move.l d0,-(sp)
;
    move.l d0,-(sp)
;
   move.w #5,-(sp)
;
    trap #14
;
    lea 12(sp),sp

	

	clr.w -(sp)
	trap #1

cptdeca	dc.w 0
angles	dc.w 128,128,50,70
ajoutangle	dc.w 21,3,512-2,1


majangle
	lea ajoutangle,a0
	lea angles,a1
	moveq #3,d7
.loop
	move.w (a0)+,d0
	move.w (a1),d1
	add d0,d1
	and.w #511,d1
	move.w d1,(a1)+
	dbf d7,.loop

	rts

convsinus
	move.l sinx1,a1
	move.l sinx2,a2
	lea sin512,a0
	move.w #511,d0
	move.w ptrconvX+2,d4
.loop
	moveq #0,d1
	move.w (a0)+,d1
	add.w #32767,d1

	move.l d1,d2
	mulu #(180-8)*subpixel2,d1
	mulu #(140-8)*subpixel2,d2   ; 8 subpixel
	;asl #1,d1
	;asl #1,d2
	swap d1
	swap d2
; *10 = *8+*2 = *2(*4+1)

	add d1,d1
	move.w d1,d3
    add.w d3,d3 *4
    add.w d3,d3
    add d3,d1	; d1 = d1 * 10
;	and.w #-4,d1

;	and.w #-4,d2

 	add d2,d2
 	move.w d2,d3
 	add d3,d3
 	add d3,d3
 	add d3,d2

 	add d4,d1				; premiere table de sinus, on ajoute l'offset de convX
	move.w d1,(a1)+
	move.w d2,(a2)+
	dbf d0,.loop
	

	move.w ptrConvY+2,d4
	move.l siny1,a1
	move.l siny2,a2
	lea sin512,a0
	move.w #511,d0
.loopy
	moveq #0,d1
	move.w (a0)+,d1
	add.w #32767,d1
	move.l d1,d2
	mulu #(40*2-8)*subpixel2*2,d1
	mulu #(60*2-8)*subpixel2*2,d2
;	asl #1,d1
;	asl #1,d2
	swap d1
	swap d2
	and.w #-2,d1
	and.w #-2,d2
	add d4,d1			; ajoute l'offset segment
	move.w d1,(a1)+
	move.w d2,(a2)+
	dbf d0,.loopy


; createContigustable
;
; a0 = ram
; d0 = nombre d'element de la table sinus
; d1 = pas interne
; d2 = nombre de copie de valeurs
; a3 = table de sinus d'amplitude final
;
; pendant le fonctionnement:
; constante  d3,d4,d5 = pas interne,*2,*4
;
;
;

; retour:
; a0 = ram
; a1 = adresse table de d0 adresses  reftable pris a partir de la ram
;  

	lea ram3,a0
	move.w #512,d0
	move.w #nbbob,d2 ; nombre de copie de valeur
	move.w #11,d1		; pas interne 5 /512
	move.l sinx1,a3
	jsr createContigustable
	move.l a1,ptrref1

	move.w #512,d0
	move.w #28,d1
	move.w #nbbob,d2
	move.l sinx2,a3
	jsr createContigustable
	move.l a1,ptrref2

	move.w #512,d0
	move.w #512-12,d1
	move.w #nbbob,d2
	move.l siny1,a3
	jsr createContigustable
	move.l a1,ptrref3

	move.w #512,d0
	move.w #512-24,d1
	move.w #nbbob,d2
	move.l siny2,a3
	jsr createContigustable
	move.l a1,ptrref4
	rts


ang1	dc.w 128
ang2	dc.w 128
ang3	dc.w 10
ang4	dc.w 0
ajoutang1	dc.w 4
ajoutang2 	dc.w 1
ajoutang3	dc.w 512-3
ajoutang4   dc.w 1
calcAllpos
	move.l ptrref1,a5
	move.l ptrref2,a1
	move.w ang1,d0
	add d0,d0
	add d0,d0
	add.w d0,a5
	move.w ang2,d0
	add d0,d0
	add.w d0,d0
	add.w d0,a1

	move.l ptrref3,a2
	move.l ptrref4,a3
	move.w ang3,d0
	add d0,d0
	add d0,d0
	add d0,a2
	move.w ang4,d0
	add d0,d0
	add d0,d0
	add d0,a3

	move.l (a5),a5
	move.l (a1),a1
	move.l (a2),a2
	move.l (a3),a3

	lea efface1lst,a4

	move.l ptrConvX,d0
	move.l ptrConvY,d1
	move.l ptrscr1,d3

	move.w #nbbob-1,d2
.loopcalcul

	move.w (a5)+,d0
	add.w (a1)+,d0
	move.w (a2)+,d1
	add.w (a3)+,d1

	move.l d1,a6
	move.w (a6),d3 			;  y*160

	move.l d0,a6
	add.w (a6)+,d3
	move.w d3,(a4)+			; effacement offset
	move.l (a6)+,(a4)+		; routine d'effacement

	move.l (a6),a6			; routine d'affichage
	move.l d3,a0

	jsr (a6)
	dbf d2,.loopcalcul

	lea ang1,a0
	lea 8(a0),a1
	movem.w (a1),d0-d3

	move.w (a0),d4
	add.w d0,d4
	move.w #511,d5
	and d5,d4
	move.w d4,(a0)+

	move.w (a0),d4
	add.w d1,d4
	and d5,d4
	move.w d4,(a0)+

	move.w (a0),d4
	add.w d2,d4
	and d5,d4
	move.w d4,(a0)+

	move.w (a0),d4
	add.w d3,d4
	and d5,d4
	move.w d4,(a0)+
; maj angle fait

	rts

prepare_segments
	
	move.l #screenbuf,d0
	moveq #4,d1
	swap d1
	jsr getMem1					; prepare 16 zone memoire allant de 32768 a 1 octet (puissance de 2)

	lea ptrMem,a0
	movem.l (a0)+,d0-d3			; 1 buffer de 32k un de 16k un de 8k un de 4k  pas aligné mais contigu au meme segment  

	move.l d3,sinX1			; sinx1 x2 y1 y2 devenu des pointeur sur
							; 512 word
	move.l #1024,d5
	add.l d5,d3
	move.l d3,sinX2
	add.l d5,d3
	move.l d3,sinY1
	add.l d5,d3
	move.l d3,sinY2					; place pour 4k = 4 table de 512 word


								; cad poid fort de l'adresse du buffer est toujours a la meme valeur 
	move.l d0,ptrConvY			; 32k alloué pour convy: 1856*2 en comptant cliping haut bas de 16 pixel de hauteur et 4 subpixel
	add.l #2*1856,d0
	; 30912 octet libre
	move.l d0,ptrConvX	; 12800 octet pour 320 pixel 4 subpixel 10 octet (adresseEFF,adresseAFF,offset)
	add.l #320*8*10,d0		; pile poil 4 subpixel  convy 232*8 subpixel*2 + 352*8 subpixel*10 octet
	moveq #0,d4 				; 31872 octet sur 32768
	move.w #1024,d4
	lea sinx1,a1
	move.l d0,(a1)+
	add.l d4,d0
	move.l d0,(a1)+
	add.l d4,d0
	move.l d0,(a1)+
	add.l d4,d0
	move.l d0,(a1)+
	
	move.l d1,ptr16k
	move.l d2,ptrFlag			; 8k max pour les flag, sinus dont le nombre d'element ne depasse pas 8192
	move.l d3,ptr4k

	move.l #screenbuf,d0
	moveq #1,d1
	swap d1
	add.l d1,d0
	clr.w d0
	move.l d0,log
	move.l d0,ptrscr1
	add.l d1,d0
	move.l d0,phys
	move.l d0,ptrscr2
	add.l d1,d0
	move.l d0,ptrscr3
	add.l d1,d0
	move.l d0,ptrscr4

;	add.l d1,d0
;	move.l d0,convX
;	add.l #320*subpixel*8,d0
;	add.l d1,d0
;	move.l d0,convY

	rts
waitvbl
	move.w $468.w,d0
.loop	cmp.w $468.w,d0
	beq.s .loop
	rts

swap_screen
	move.l log,d0
	move.l phys,d1
	move.l d0,phys
	move.l d1,log
	lsr.w #8,d0
	move.l d0,$ffff8200.w
	rts

extractsprite
	lea pi1+2,a0
	movem.w (a0),d0-d3
	movem.w d0-d3,$ffff8240.w
	lea pi1+34,a0
	
	lea spritedeca,a1
	moveq #0,d1
	moveq #15,d7
.loop0
	move.l (a0),d0
	lea 160(a0),a0
	move.l d0,(a1)+
	move.l d1,(a1)+
	dbf d7,.loop0

	moveq #14,d7
	lea spritedeca,a1
	move.l a1,a3
	lea 128(a1),a2
	move.l a2,a4
.copyandshift
	move.w #15,d6
.ligne
;	rept 2
;	move.w (a1)+,d0
;	move.w 2(a1),d1
;	move.w #0,ccr		; set x to 0
;	roxr #1,d0
;	roxr #1,d1
;	move.w d0,(a2)+
;	move.w d1,2(a2)
;	;lea 2(a1),a1
;	;lea 2(a2),a2
;	endr

	MOVE.L (A1)+,(A2)+
	MOVE.L (A1)+,(A2)+
	LEA -8(A2),A2
	MOVE.B #0,CCR
	ROXR (A2)
	ROXR 4(A2)
	MOVE.B #0,CCR
	ROXR 2(A2)
	ROXR 6(a2)

	lea 8(a2),a2
	dbf d6,.ligne
	lea 128(a3),a3
	lea 128(a4),a4
	move.l a3,a1
	move.l a4,a2

;	lea 4(a2),a2
;	lea 4(a1),a1
	dbf d7,.copyandshift
	
makecodegen
	lea spritedeca,a0
	lea ram,a1
	lea codegenliste,a2
	lea codeeffliste,a3
	lea ram2,a4
	moveq #15,d0
.loopSprite
	move.l a4,(a3)+
	move.l a1,(a2)+
	moveq #15,d1
	moveq #0,d6		; offset
.loopligne
	move.w (a0)+,d2
	move.w (a0)+,d3
	move.w (a0)+,d4
	move.w (a0)+,d5
	tst.w d2
	bne.s .1
	tst.w d3
	beq.s .nerienfaire
	; or.w #d3,offset+2(a0)
	move.w d3,d7
	addq #2,d6
	bsr orwd7d6_2
	subq #2,d6
	


	bra.s .suite
.1	; d2 contient kekchose
	tst.w d3
	beq.s .wordd2
	; or.l #d2d3,offset(a0)
	move.w d2,d7
	swap d7
	move.w d3,d7
	bsr orld7d6
	bra.s .suite
.wordd2
	; or.w #d2,offset(a0)
	move.w d2,d7
	bsr orwd7d6
	bra.s .suite
.nerienfaire
	nop
.suite
	tst.w d4
	bne.s .2
	tst.w d5
	beq.s .nerienfaire2
	; or.w #d5,offset+8+2(a0)
	move.w d5,d7
	add.w #10,d6
	bsr orwd7d6_2
	sub.w #10,d6


	bra.s .suite2	
.2	tst.w d5
	beq.s .wordd4
	; or.l #d4d5,offset+8(a0)
	move.w d4,d7
	swap d7
	move.w d5,d7
	addq.w #8,d6
	bsr orld7d6
	subq #8,d6

	bra.s .suite2
.wordd4
	; or.w #d4,offset+8(a0)
	move.w d4,d7
	addq #8,d6
	bsr orwd7d6
	subq #8,d6
	bra.s .suite2
.nerienfaire2
	nop
.suite2
	add #160,d6
	dbf d1,.loopligne
	move.w #$4e75,(a1)+
	move.w #$4e75,(a4)+
	dbf d0,.loopSprite
	rts
orwd7d6
;	move.l d2,-(sp)
	move.w d7,d2   ; plus besoin de d2
	swap d2
	move.w d7,d2
	not.l d2

	; and.l d2,d6(a0)   02a8

	move.w #$02a8,(a1)+		; + 8 octet au code genere
	move.l d2,(a1)+
	move.w d6,(a1)+


	move.w #$68,(a1)+
	move.w d7,(a1)+
	move.w d6,(a1)+

	move.w #$2140,(a4)+		; since it's masked on 2 plan, the clearing is long instead of word 

	move.w d6,(A4)+			; ($2140 instead of $3140) (move.l d0,d6(a0) instead of move.w d0,d6(a0))

;	move.l (sp)+,d2
	rts
orwd7d6_2					; cas ou orwd7d6 mais sur le deuxieme plan, l'effacement se fait naturellement sur le premier plan
;	move.l d2,-(sp)
	move.w d7,d2   ; plus besoin de d2
	swap d2
	move.w d7,d2
	not.l d2

	; and.l d2,d6(a0)   02a8

	move.w #$02a8,(a1)+		; + 8 octet au code genere
	move.l d2,(a1)+
	move.w d6,(a1)
	subq.w #2,(a1)+



	move.w #$68,(a1)+
	move.w d7,(a1)+
	move.w d6,(a1)+

	move.w #$2140,(a4)+		; since it's masked on 2 plan, the clearing is long instead of word 

	move.w d6,(A4)			; ($2140 instead of $3140) (move.l d0,d6(a0) instead of move.w d0,d6(a0))
	subq.w #2,(a4)+			; on and.l sur le plan 0 et 1 et pas 1 et 2
;	move.l (sp)+,d2
	rts
orld7d6
	; d7 = le data sur 2 plan
	;

;	move.l d2,-(sp)
;	move.l d3,-(sp)
	move.w d7,d2
	swap d7
	or.w d7,d2
	swap d7  	; remet d7 a la bonne valeur
	not.w d2
	move.w d2,d3
	swap d2
	move.w d3,d2
	; d2.l = masque a partir des 2 valeur poid fort poid faible de d7

	move.w #$02a8,(a1)+
	move.l d2,(a1)+
	move.w d6,(a1)+				; + 8 octets

	move.w #$A8,(a1)+
	move.l d7,(a1)+
	move.w d6,(a1)+

	move.w #$2140,(a4)+
	move.w d6,(a4)+

;	;move.l (sp)+,d3
;	move.l (sp)+,d2

	rts
	
	BSS
	ds.l 1
	ds.b 65536
screenbuf
	ds.w 65536
	ds.w 65536
log		ds.l 1
phys	ds.l 1
ptrscr1	ds.l 1
ptrscr2	ds.l 1
ptrscr3	ds.l 1
ptrscr4	ds.l 1


;convx	ds.l 320*subpixel
;convy	ds.w 200*subpixel

ptrconvX ds.l 1
ptrconvY ds.l 1

	BSS


efface1lst
		ds.l nbbob
		ds.l nbbob

efface2lst
		ds.l nbbob
		ds.l nbbob


sinx1	ds.l 1   *ds.w 512
sinx2	ds.l 1   *ds.w 512
siny1	ds.l 1   *ds.w 512
siny2	ds.l 1   *ds.w 512

ptrref1	ds.l 1
ptrref2	ds.l 1
ptrref3	ds.l 1
ptrref4	ds.l 1


codegenliste	ds.l 16
codeeffliste	ds.l 16
ram	ds.b ($b24dA-$b19f2)+2000
	ds.l 5000
ram2	ds.l 5000
	ds.l 5000
ram3	ds.l 32000
	
;convxSprite	ds.l 320*2*subpixel
	

sprite	ds.w 32

spritedeca
	ds.w 128*16


	DATA
sin512:			; sin 512 element amplitude 32766
	dc.w 0,402,804,1206,1607,2009,2410,2811
	dc.w 3211,3611,4010,4409,4807,5205,5601,5997
	dc.w 6392,6786,7179,7570,7961,8350,8739,9125
	dc.w 9511,9895,10278,10659,11038,11416,11792,12166
	dc.w 12539,12909,13278,13644,14009,14371,14731,15090
	dc.w 15445,15799,16150,16498,16845,17188,17529,17868
	dc.w 18203,18536,18866,19194,19518,19840,20158,20474
	dc.w 20786,21095,21401,21704,22004,22300,22593,22882
	dc.w 23169,23451,23730,24006,24278,24546,24810,25071
	dc.w 25328,25581,25830,26076,26317,26555,26788,27018
	dc.w 27243,27465,27682,27895,28104,28308,28509,28705
	dc.w 28897,29084,29267,29445,29620,29789,29954,30115
	dc.w 30271,30423,30570,30712,30850,30983,31112,31236
	dc.w 31355,31469,31579,31683,31784,31879,31969,32055
	dc.w 32136,32212,32283,32349,32411,32467,32519,32566
	dc.w 32608,32645,32677,32704,32726,32743,32756,32763
	dc.w 32766,32763,32756,32743,32726,32704,32677,32645
	dc.w 32608,32566,32519,32467,32411,32349,32283,32212
	dc.w 32136,32055,31969,31879,31784,31683,31579,31469
	dc.w 31355,31236,31112,30983,30850,30712,30570,30423
	dc.w 30271,30115,29954,29789,29620,29445,29267,29084
	dc.w 28897,28705,28509,28308,28104,27895,27682,27465
	dc.w 27243,27018,26788,26555,26317,26076,25830,25581
	dc.w 25328,25071,24810,24546,24278,24006,23730,23451
	dc.w 23169,22882,22593,22300,22004,21704,21401,21095
	dc.w 20786,20474,20158,19840,19518,19194,18866,18536
	dc.w 18203,17868,17529,17188,16845,16498,16150,15799
	dc.w 15445,15090,14731,14371,14009,13644,13278,12909
	dc.w 12539,12166,11792,11416,11038,10659,10278,9895
	dc.w 9511,9125,8739,8350,7961,7570,7179,6786
	dc.w 6392,5997,5601,5205,4807,4409,4010,3611
	dc.w 3211,2811,2410,2009,1607,1206,804,402
	dc.w 0,-402,-804,-1206,-1607,-2009,-2410,-2811
	dc.w -3211,-3611,-4010,-4409,-4807,-5205,-5601,-5997
	dc.w -6392,-6786,-7179,-7570,-7961,-8350,-8739,-9125
	dc.w -9511,-9895,-10278,-10659,-11038,-11416,-11792,-12166
	dc.w -12539,-12909,-13278,-13644,-14009,-14371,-14731,-15090
	dc.w -15445,-15799,-16150,-16498,-16845,-17188,-17529,-17868
	dc.w -18203,-18536,-18866,-19194,-19518,-19840,-20158,-20474
	dc.w -20786,-21095,-21401,-21704,-22004,-22300,-22593,-22882
	dc.w -23169,-23451,-23730,-24006,-24278,-24546,-24810,-25071
	dc.w -25328,-25581,-25830,-26076,-26317,-26555,-26788,-27018
	dc.w -27243,-27465,-27682,-27895,-28104,-28308,-28509,-28705
	dc.w -28897,-29084,-29267,-29445,-29620,-29789,-29954,-30115
	dc.w -30271,-30423,-30570,-30712,-30850,-30983,-31112,-31236
	dc.w -31355,-31469,-31579,-31683,-31784,-31879,-31969,-32055
	dc.w -32136,-32212,-32283,-32349,-32411,-32467,-32519,-32566
	dc.w -32608,-32645,-32677,-32704,-32726,-32743,-32756,-32763
	dc.w -32766,-32763,-32756,-32743,-32726,-32704,-32677,-32645
	dc.w -32608,-32566,-32519,-32467,-32411,-32349,-32283,-32212
	dc.w -32136,-32055,-31969,-31879,-31784,-31683,-31579,-31469
	dc.w -31355,-31236,-31112,-30983,-30850,-30712,-30570,-30423
	dc.w -30271,-30115,-29954,-29789,-29620,-29445,-29267,-29084
	dc.w -28897,-28705,-28509,-28308,-28104,-27895,-27682,-27465
	dc.w -27243,-27018,-26788,-26555,-26317,-26076,-25830,-25581
	dc.w -25328,-25071,-24810,-24546,-24278,-24006,-23730,-23451
	dc.w -23169,-22882,-22593,-22300,-22004,-21704,-21401,-21095
	dc.w -20786,-20474,-20158,-19840,-19518,-19194,-18866,-18536
	dc.w -18203,-17868,-17529,-17188,-16845,-16498,-16150,-15799
	dc.w -15445,-15090,-14731,-14371,-14009,-13644,-13278,-12909
	dc.w -12539,-12166,-11792,-11416,-11038,-10659,-10278,-9895
	dc.w -9511,-9125,-8739,-8350,-7961,-7570,-7179,-6786
	dc.w -6392,-5997,-5601,-5205,-4807,-4409,-4010,-3611
	dc.w -3211,-2811,-2410,-2009,-1607,-1206,-804,-402
sin896:		; sin 896 element amplitude 32766
	dc.w 0,229,459,689,918,1148,1378,1607
	dc.w 1837,2066,2295,2524,2753,2982,3211,3440
	dc.w 3668,3896,4124,4352,4580,4807,5034,5261
	dc.w 5488,5714,5941,6166,6392,6617,6842,7066
	dc.w 7291,7514,7738,7961,8184,8406,8628,8849
	dc.w 9070,9291,9511,9731,9950,10168,10387,10604
	dc.w 10821,11038,11254,11470,11685,11899,12113,12326
	dc.w 12539,12750,12962,13173,13383,13592,13801,14009
	dc.w 14216,14423,14629,14834,15038,15242,15445,15648
	dc.w 15849,16050,16250,16449,16647,16845,17041,17237
	dc.w 17432,17626,17819,18012,18203,18394,18584,18772
	dc.w 18960,19147,19333,19518,19702,19885,20067,20249
	dc.w 20429,20608,20786,20963,21139,21314,21488,21661
	dc.w 21833,22004,22174,22342,22510,22676,22841,23006
	dc.w 23169,23330,23491,23651,23809,23967,24123,24278
	dc.w 24431,24584,24735,24885,25034,25182,25328,25473
	dc.w 25617,25760,25901,26041,26180,26317,26454,26589
	dc.w 26722,26854,26985,27115,27243,27370,27496,27620
	dc.w 27743,27865,27985,28104,28221,28337,28452,28565
	dc.w 28677,28788,28897,29004,29110,29215,29318,29420
	dc.w 29521,29620,29717,29813,29908,30001,30093,30183
	dc.w 30271,30359,30444,30528,30611,30692,30772,30850
	dc.w 30927,31002,31076,31148,31218,31287,31355,31421
	dc.w 31485,31548,31609,31669,31727,31784,31839,31892
	dc.w 31944,31994,32043,32090,32136,32180,32222,32263
	dc.w 32303,32340,32376,32411,32444,32475,32505,32533
	dc.w 32559,32584,32608,32629,32650,32668,32685,32700
	dc.w 32714,32726,32737,32745,32753,32758,32762,32765
	dc.w 32766,32765,32762,32758,32753,32745,32737,32726
	dc.w 32714,32700,32685,32668,32650,32629,32608,32584
	dc.w 32559,32533,32505,32475,32444,32411,32376,32340
	dc.w 32303,32263,32222,32180,32136,32090,32043,31994
	dc.w 31944,31892,31839,31784,31727,31669,31609,31548
	dc.w 31485,31421,31355,31287,31218,31148,31076,31002
	dc.w 30927,30850,30772,30692,30611,30528,30444,30359
	dc.w 30271,30183,30093,30001,29908,29813,29717,29620
	dc.w 29521,29420,29318,29215,29110,29004,28897,28788
	dc.w 28677,28565,28452,28337,28221,28104,27985,27865
	dc.w 27743,27620,27496,27370,27243,27115,26985,26854
	dc.w 26722,26589,26454,26317,26180,26041,25901,25760
	dc.w 25617,25473,25328,25182,25034,24885,24735,24584
	dc.w 24431,24278,24123,23967,23809,23651,23491,23330
	dc.w 23169,23006,22841,22676,22510,22342,22174,22004
	dc.w 21833,21661,21488,21314,21139,20963,20786,20608
	dc.w 20429,20249,20067,19885,19702,19518,19333,19147
	dc.w 18960,18772,18584,18394,18203,18012,17819,17626
	dc.w 17432,17237,17041,16845,16647,16449,16250,16050
	dc.w 15849,15648,15445,15242,15038,14834,14629,14423
	dc.w 14216,14009,13801,13592,13383,13173,12962,12750
	dc.w 12539,12326,12113,11899,11685,11470,11254,11038
	dc.w 10821,10604,10387,10168,9950,9731,9511,9291
	dc.w 9070,8849,8628,8406,8184,7961,7738,7514
	dc.w 7291,7066,6842,6617,6392,6166,5941,5714
	dc.w 5488,5261,5034,4807,4580,4352,4124,3896
	dc.w 3668,3440,3211,2982,2753,2524,2295,2066
	dc.w 1837,1607,1378,1148,918,689,459,229
	dc.w 0,-229,-459,-689,-918,-1148,-1378,-1607
	dc.w -1837,-2066,-2295,-2524,-2753,-2982,-3211,-3440
	dc.w -3668,-3896,-4124,-4352,-4580,-4807,-5034,-5261
	dc.w -5488,-5714,-5941,-6166,-6392,-6617,-6842,-7066
	dc.w -7291,-7514,-7738,-7961,-8184,-8406,-8628,-8849
	dc.w -9070,-9291,-9511,-9731,-9950,-10168,-10387,-10604
	dc.w -10821,-11038,-11254,-11470,-11685,-11899,-12113,-12326
	dc.w -12539,-12750,-12962,-13173,-13383,-13592,-13801,-14009
	dc.w -14216,-14423,-14629,-14834,-15038,-15242,-15445,-15648
	dc.w -15849,-16050,-16250,-16449,-16647,-16845,-17041,-17237
	dc.w -17432,-17626,-17819,-18012,-18203,-18394,-18584,-18772
	dc.w -18960,-19147,-19333,-19518,-19702,-19885,-20067,-20249
	dc.w -20429,-20608,-20786,-20963,-21139,-21314,-21488,-21661
	dc.w -21833,-22004,-22174,-22342,-22510,-22676,-22841,-23006
	dc.w -23169,-23330,-23491,-23651,-23809,-23967,-24123,-24278
	dc.w -24431,-24584,-24735,-24885,-25034,-25182,-25328,-25473
	dc.w -25617,-25760,-25901,-26041,-26180,-26317,-26454,-26589
	dc.w -26722,-26854,-26985,-27115,-27243,-27370,-27496,-27620
	dc.w -27743,-27865,-27985,-28104,-28221,-28337,-28452,-28565
	dc.w -28677,-28788,-28897,-29004,-29110,-29215,-29318,-29420
	dc.w -29521,-29620,-29717,-29813,-29908,-30001,-30093,-30183
	dc.w -30271,-30359,-30444,-30528,-30611,-30692,-30772,-30850
	dc.w -30927,-31002,-31076,-31148,-31218,-31287,-31355,-31421
	dc.w -31485,-31548,-31609,-31669,-31727,-31784,-31839,-31892
	dc.w -31944,-31994,-32043,-32090,-32136,-32180,-32222,-32263
	dc.w -32303,-32340,-32376,-32411,-32444,-32475,-32505,-32533
	dc.w -32559,-32584,-32608,-32629,-32650,-32668,-32685,-32700
	dc.w -32714,-32726,-32737,-32745,-32753,-32758,-32762,-32765
	dc.w -32766,-32765,-32762,-32758,-32753,-32745,-32737,-32726
	dc.w -32714,-32700,-32685,-32668,-32650,-32629,-32608,-32584
	dc.w -32559,-32533,-32505,-32475,-32444,-32411,-32376,-32340
	dc.w -32303,-32263,-32222,-32180,-32136,-32090,-32043,-31994
	dc.w -31944,-31892,-31839,-31784,-31727,-31669,-31609,-31548
	dc.w -31485,-31421,-31355,-31287,-31218,-31148,-31076,-31002
	dc.w -30927,-30850,-30772,-30692,-30611,-30528,-30444,-30359
	dc.w -30271,-30183,-30093,-30001,-29908,-29813,-29717,-29620
	dc.w -29521,-29420,-29318,-29215,-29110,-29004,-28897,-28788
	dc.w -28677,-28565,-28452,-28337,-28221,-28104,-27985,-27865
	dc.w -27743,-27620,-27496,-27370,-27243,-27115,-26985,-26854
	dc.w -26722,-26589,-26454,-26317,-26180,-26041,-25901,-25760
	dc.w -25617,-25473,-25328,-25182,-25034,-24885,-24735,-24584
	dc.w -24431,-24278,-24123,-23967,-23809,-23651,-23491,-23330
	dc.w -23169,-23006,-22841,-22676,-22510,-22342,-22174,-22004
	dc.w -21833,-21661,-21488,-21314,-21139,-20963,-20786,-20608
	dc.w -20429,-20249,-20067,-19885,-19702,-19518,-19333,-19147
	dc.w -18960,-18772,-18584,-18394,-18203,-18012,-17819,-17626
	dc.w -17432,-17237,-17041,-16845,-16647,-16449,-16250,-16050
	dc.w -15849,-15648,-15445,-15242,-15038,-14834,-14629,-14423
	dc.w -14216,-14009,-13801,-13592,-13383,-13173,-12962,-12750
	dc.w -12539,-12326,-12113,-11899,-11685,-11470,-11254,-11038
	dc.w -10821,-10604,-10387,-10168,-9950,-9731,-9511,-9291
	dc.w -9070,-8849,-8628,-8406,-8184,-7961,-7738,-7514
	dc.w -7291,-7066,-6842,-6617,-6392,-6166,-5941,-5714
	dc.w -5488,-5261,-5034,-4807,-4580,-4352,-4124,-3896
	dc.w -3668,-3440,-3211,-2982,-2753,-2524,-2295,-2066
	dc.w -1837,-1607,-1378,-1148,-918,-689,-459,-229



pi1	incbin 'SPRITE4.PI1'

	TEXT
createContigustable
;
; a0 = ram
; d0 = nombre d'element de la table sinus
; d1 = pas interne
; d2 = nombre de copie de valeurs
; a3 = table de sinus d'amplitude final
;
; pendant le fonctionnement:
; constante  d3,d4,d5 = pas interne,*2,*4
;
;
;

; retour:
; a0 = ram
; a1 = adresse table de d0 adresses  reftable pris a partir de la ram
;  

	move.l a0,a1		; a1 = table refsin
	move.l a1,-(sp)
	move.w d0,d3
	add.w d3,d3		; *2
	move.l a3,a4
	add.w d3,a4
	add.w d3,d3		; *4
	add.w d3,a0			; a0 =ram



	lea tempbuffer,a2
	move.w d0,d4
	lsr #2,d4
	moveq #0,d3
.clearFlag
	move.l d3,(a2)+
	dbf d4,.clearFlag	; +- 4 octet

	lea tempbuffer,a2
	move.l a2,a5
	add.w d0,a5
	


	;moveq #0,d5			; angle
	
	move.w d1,d3		; pas interne<>0
	move.w d3,d4
	add d4,d4			; pas interne*2
	move.w d4,d5
	add.w d5,d5			; pas interne*4
	neg.w d0
	move.w d0,.auto1+2			; nombre d'elements
	move.w d0,.auto1b+2
	add.w d0,d0
	move.w d0,.auto2+2
	move.w d0,.auto2b+2
	move.w d0,.auto2c+2
	add.w d0,d0
	move.w d0,.auto3+2
	move.w d0,.auto3b+2
;----------------------------------------
	bra.s .loop
.loopaddq
	addq.w #2,a3
	addq.w #4,a1
	; ps le tst.b (a2) deux ligne plus loin est redondant quand on sort de la boucle dans le code flaga1
	move.w (a3),d7
	bra.s .11
.loop
	move.w (a3),d7
	tst.b (a2)
	bne.s .flaga1
.11	st.b (a2)
	move.l a0,(a1)		; on stoque l'adresse de la valeur dans table refsin
	move.w d7,(a0)+
	; on met a jour a3 avec le pas interne*2
	; on met a jour a2 avec le pas interne (flags)
	add.w d3,a2
	add.w d4,a3
	add.w d5,a1

	cmp.l a2,a5
	bgt.s .loop
.auto1
	lea 0(a2),a2
.auto2
	lea 0(a3),a3
.auto3
	lea 0(a1),a1
	bra.s .loop
.flaga1
	move.w d2,d6		; nombre de copie
	;subq.w #1,d6

	move.l a3,-(sp)
.cpy
	move.w d7,(a0)+
	add.w d4,a3
	cmp.l a3,a4
	bgt.s .1
.auto2b
	lea 0(a3),a3

.1
	move.w (a3),d7
	dbf d6,.cpy
	move.l (sp)+,a3

	addq.w #1,a2
	cmp.l a2,a5
	bgt.s .2
.auto1b
	lea 0(a2),a2
.auto2c
	lea 0(a3),a3
.auto3b
	lea 0(a1),a1
.2
	; s'assurer qu'on est pas en fin de tableau:
	;
	;

	tst.b (a2)
	beq.s .loopaddq
.fin
	move.l (sp)+,a1

	rts	
	
	BSS
segmentX	ds.w 1
segmentY	ds.w 1
tempbuffer
	ds.w 2048

	TEXT
;
;
;
; mem lib
;

;; exemple d'utilisation
;	move.l #buffer,d0
;	move.l #8*65536,d1 taille totale du buffer aligné sur 64k
;	jsr getmem1
;	lea -16*4(a0),a0
;	nop
;	nop
;	nop
;	nop
;	illegal
; format de memoire
;toto			; le label toto est la pour verifier l'algo
;	ds.b 65536	
;buffer	ds.l 65536*2    8*64k				; buffer sera aligné sur 64k donc un peu avant
;fin											; et apres un peu de memoire libre entre fin buffer et label fin

getmem1:

; d0 = adresse segment 64k non aligné
; d1 = nombre de segment a la suite*64k
; retour: a0 = liste d'adresse
; (a0)+ = 32k buffer
; (a0)+ = 16k buffer
; (a0)+ = 8k buffer
; (a0)+ = 4k buffer
; (a0)+ = 2k
; (a0)+ = 1k
; (a0)+ = 512
; (a0)+ = 256
; (a0)+ = 128
; (a0)+ = 64 octet
; 
; a0: 64 octet = 16 adresses

	; metre le buffer start dans d4

	moveq.w #1,d5
	swap d5
	move.l d0,d4
	sub.l d5,d4		; start memoire basse
	move.l d0,d3
	clr.w d3		;  debut multiple de 64k  fin memoire basse
	; d3 = start segment
	
	
	move.l d4,d7
	sub.l d3,d7		; d7 = taille en bas
				; d4 = start bas
	
	add.l d1,d3		; d3+ 4*64k = adresse start haut


	
	lea ptrMem,a0
	moveq #0,d6
	move.w #$8000,d6
	
.loop
	move.w d6,d1
	and.w d7,d1

	; bit 15 a 0 ? 
	tst.w d1
	bne.s .before			; was beq
	move.l d3,(a0)+
	add.l d6,d3
	
	bra.s .suite
.before
	move.l d4,(a0)+
	add.l d6,d4
.suite
	lsr #1,d5
	bne.s .loop			; ici ca s'arrete a un buffer de 1 octet il faudrai faire un meilleur test
	
	lea -64(a0),a0					; et s'arreter a un plus gros buffer 
	rts
	
;pgcd	; de d0 et d1
;; d0 le plus grand nombre
;	cmp.w d1,d0
;	blt.s .1
;	exg d0,d1
;.1
;	: d0 > d1
;    move.w d0,d2
;
;	sub d1,d0
;    cmp d1,d0
;    blt.s .1
;    



ptrMem		ds.l 16  		; dans ram apres l'appel de getmem1 adresses contenant les bloc memoire utilisable comme on veut

;;;    			; les label entour? de ;;; doivent etre dans l'ordre et contigu (ne pas deplacer l'un des label)
;ptrtabsin1	ds.l 1
;ptrtabsin2	ds.l 1
;ptrtabsin3	ds.l 1
;ptrtabsin4	ds.l 1
ptr16k	ds.l 1
ptr4k	ds.l 1
ptrflag	ds.l 1
;;;

"
PGabwcpS,Recursive dependencies of yt-dlp in MacPorts,andi,Bash,Monday 20th of November 2023 01:34:20 PM CDT,"On Mac OS 10.14.6:

$ yt-dlp --version
2023.03.04

$ sudo port echo rdepof:yt-dlp
aom
AtomicParsley
autoconf
automake
bash
bison
bison-runtime
boehmgc
brotli
bzip2
cairo
cargo
cctools
clang-11
clang-14
clang-16
clang_select
cmake
cmake-bootstrap
coreutils
curl
curl-ca-bundle
cython_select
dav1d
db48
dejagnu
docbook-xml
docbook-xml-4.1.2
docbook-xml-4.2
docbook-xml-4.3
docbook-xml-4.4
docbook-xml-4.5
docbook-xml-5.0
docbook-xsl-nons
docutils_select
expat
expect
ffmpeg
flex
fontconfig
fonttools_select
fop
freetype
fribidi
gawk
gdbm
gdk-pixbuf2
gettext
gettext-runtime
gettext-tools-libs
gi-docgen
git
glib2
gmake
gmp
gnutls
gobject-introspection
gperf
graphite2
grep
gsed
gtk-doc
harfbuzz
hatchling_select
help2man
icu
itstool
jbigkit
kerberos5
lame
lcms2
ld64
ld64-xcode
legacy-support
lerc
libarchive
libass
libatomic_ops
libb2
libbluray
libcomerr
libcxx
libdeflate
libedit
libelf
libffi
libgit2
libiconv
libidn
libidn2
libjpeg-turbo
libmodplug
libogg
libomp
libopus
libpaper
libpaper-utils
libpixman
libpng
libpsl
librsvg
libsdl2
libssh2
libtasn1
libtextstyle
libtheora
libtool
libunistring
libuv
libvidstab
libvorbis
libvpx
libxml2
libxslt
libyaml
llvm-11
llvm-14
llvm-16
llvm_select
lmdb
lz4
lzip
lzo2
m4
macports-libcxx
meson
nasm
ncurses
nettle
nghttp2
ninja
openjpeg
openssl
openssl3
ossp-uuid
p5.34-authen-sasl
p5.34-b-cow
p5.34-canary-stability
p5.34-capture-tiny
p5.34-cgi
p5.34-clone
p5.34-common-sense
p5.34-compress-raw-bzip2
p5.34-compress-raw-zlib
p5.34-config-autoconf
p5.34-cpan-meta
p5.34-cpan-meta-check
p5.34-cpan-meta-requirements
p5.34-cpan-meta-yaml
p5.34-data-optlist
p5.34-data-section
p5.34-devel-checkbin
p5.34-devel-symdump
p5.34-digest-hmac
p5.34-digest-sha1
p5.34-encode
p5.34-encode-locale
p5.34-error
p5.34-extutils-cbuilder
p5.34-extutils-makemaker
p5.34-extutils-manifest
p5.34-file-slurper
p5.34-getopt-long
p5.34-gssapi
p5.34-html-parser
p5.34-html-tagset
p5.34-http-date
p5.34-http-message
p5.34-inc-latest
p5.34-io-compress
p5.34-io-compress-brotli
p5.34-io-html
p5.34-io-socket-ip
p5.34-io-socket-ssl
p5.34-ipc-cmd
p5.34-json
p5.34-json-xs
p5.34-locale-gettext
p5.34-locale-maketext-simple
p5.34-lwp-mediatypes
p5.34-mixin-linewise
p5.34-module-build
p5.34-module-load
p5.34-module-load-conditional
p5.34-module-metadata
p5.34-mozilla-ca
p5.34-mro-compat
p5.34-net-libidn
p5.34-net-smtp-ssl
p5.34-net-ssleay
p5.34-params-check
p5.34-params-util
p5.34-perl-ostype
p5.34-perlio-utf8_strict
p5.34-pod-coverage
p5.34-pod-coverage-trustpod
p5.34-pod-escapes
p5.34-pod-eventual
p5.34-pod-parser
p5.34-pod-simple
p5.34-podlators
p5.34-regexp-ipv6
p5.34-scalar-list-utils
p5.34-socket
p5.34-software-license
p5.34-sub-exporter
p5.34-sub-install
p5.34-sub-name
p5.34-sub-uplevel
p5.34-term-readkey
p5.34-test-cpan-meta
p5.34-test-cpan-meta-json
p5.34-test-deep
p5.34-test-exception
p5.34-test-failwarnings
p5.34-test-fatal
p5.34-test-leaktrace
p5.34-test-more-utf8
p5.34-test-needs
p5.34-test-nowarnings
p5.34-test-pod
p5.34-test-pod-coverage
p5.34-test-simple
p5.34-test-warn
p5.34-test-warnings
p5.34-text-parsewords
p5.34-text-template
p5.34-time-hires
p5.34-time-local
p5.34-timedate
p5.34-try-tiny
p5.34-types-serialiser
p5.34-uri
p5.34-version
p5.34-xsloader
p11-kit
pango
pcre2
perl5
perl5.34
pkgconfig
popt
py-bootstrap-modules
py310-attrs
py310-build
py310-calver
py310-coverage
py310-cython
py310-editables
py310-exceptiongroup
py310-flit_core
py310-flit_scm
py310-hatch-fancy-pypi-readme
py310-hatch-vcs
py310-hatchling
py310-hypothesis
py310-iniconfig
py310-installer
py310-packaging
py310-pathspec
py310-pluggy
py310-pretend
py310-py
py310-pygments
py310-pyproject_hooks
py310-pytest
py310-setuptools
py310-setuptools_scm
py310-sortedcontainers
py310-testpath
py310-tomli
py310-trove-classifiers
py310-typing_extensions
py310-wheel
py310-yaml
py310-zope-event
py310-zopeinterface
py311-anytree
py311-attrs
py311-brotli
py311-build
py311-calver
py311-coverage
py311-cython
py311-docutils
py311-editables
py311-flit_core
py311-fonttools
py311-hatch-fancy-pypi-readme
py311-hatch-vcs
py311-hatchling
py311-hypothesis
py311-iniconfig
py311-installer
py311-jinja2
py311-libxml2
py311-lxml
py311-mako
py311-markdown
py311-markupsafe
py311-meson
py311-mock
py311-packaging
py311-pathspec
py311-pluggy
py311-poetry-core
py311-pretend
py311-py
py311-pycryptodome
py311-pygments
py311-pyproject_hooks
py311-pytest
py311-roman
py311-setuptools
py311-setuptools_scm
py311-six
py311-smartypants
py311-sortedcontainers
py311-testpath
py311-toml
py311-trove-classifiers
py311-typing_extensions
py311-typogrify
py311-unicodedata2
py311-wheel
py311-yaml
py311-zope-event
py311-zopeinterface
py311-zopfli
pygments_select
pytest_select
python3_select
python310
python311
python_select
re2c
readline
rsync
rust
shared-mime-info
soxr
speex
speexdsp
sqlite3
svt-av1
tcl
texinfo
tiff
unzip
util-linux
vala
w3m
x264
x265
xar
Xft2
xmlcatmgr
xmlto
xorg-libX11
xorg-libXau
xorg-libxcb
xorg-libXdmcp
xorg-libXext
xorg-util-macros
xorg-xcb-proto
xorg-xcb-util
xorg-xorgproto
xorg-xtrans
xrender
XviD
xxhashlib
xz
yasm
zimg
zlib
zstd
zvbi"
wqkwQG7K,ChestReaderTest,Ginga2221,Lua,Monday 20th of November 2023 01:24:56 PM CDT,"periphNames = peripheral.getNames()
periphs = {}
endChestName = ""ironchest:gold_chest_1""

for k,v in pairs(periphNames) do
	periphs[k] = peripheral.wrap(v)
end

endChest = peripheral.wrap(endChestName)

function frmMC(text)
	return ""minecraft:""..text
end

function unFrmMC(text)
	return string.gsub(text, ""minecraft:"", "" "")
end

function liste(periphs)
	for k=2,#(periphs) do
		if peripheral.getName(periphs[k]) ~= endChestName then
			for slot, item in pairs(periphs[k].list()) do
				print( unFrmMC(item.name), item.count)
			end
		end
	end
end

function recup(input, periphs)
	itemName, itemNbr = string.match(input, ""(%S+)%s+(%S+)"")
	itemNbr = tonumber(itemNbr)
	
	kIT = -1
	slotIT = -1
	
	q = math.floor(itemNbr/64)
	r = itemNbr%64
	
	rem = itemNbr
	
	while rem ~0 do
		for k=2,#(periphs) do
			if peripheral.getName(periphs[k]) ~= endChestName then
				for slot, item in pairs(periphs[k].list()) do
					if item.name == frmMC(itemName) then
						kIT = k
						slotIT = slot
					end
				end
			end
		end
	
	
	if kIT == -1 or slotIT == -1 then
		print(""item invalide ou absent"")
		break
	else
		nbItemTrans = endChest.pullItems(peripheral.getName(periphs[kIT]), slotIT, rem)
		rem = rem - nbItemTrans
	end
	 
	end
end
		




while true do
	print(""Choisisez un item ou écrivez liste"")
	print(""format : nomItem quantité"")
	local input = read()

	if input ==""liste"" then
		liste(periphs)
	else
		recup(input, periphs)
	end
	
end"
yhFdj5P0,MITRE_Landshaft.json,CTPAyC,JSON,Monday 20th of November 2023 01:08:22 PM CDT,"{
	""name"": ""layer"",
	""versions"": {
		""attack"": ""14"",
		""navigator"": ""4.9.1"",
		""layer"": ""4.5""
	},
	""domain"": ""enterprise-attack"",
	""description"": """",
	""filters"": {
		""platforms"": [
			""Linux"",
			""macOS"",
			""Windows"",
			""Network"",
			""PRE"",
			""Containers"",
			""Office 365"",
			""SaaS"",
			""Google Workspace"",
			""IaaS"",
			""Azure AD""
		]
	},
	""sorting"": 0,
	""layout"": {
		""layout"": ""side"",
		""aggregateFunction"": ""average"",
		""showID"": false,
		""showName"": true,
		""showAggregateScores"": false,
		""countUnscored"": false,
		""expandedSubtechniques"": ""none""
	},
	""hideDisabled"": false,
	""techniques"": [
		{
			""techniqueID"": ""T1047"",
			""tactic"": ""execution"",
			""score"": 75,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1113"",
			""tactic"": ""collection"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1033"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1592"",
			""tactic"": ""reconnaissance"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1003"",
			""tactic"": ""credential-access"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1133"",
			""tactic"": ""persistence"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1133"",
			""tactic"": ""initial-access"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1539"",
			""tactic"": ""credential-access"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1615"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1547"",
			""tactic"": ""persistence"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1547"",
			""tactic"": ""privilege-escalation"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1489"",
			""tactic"": ""impact"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1564"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1007"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1135"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1082"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1071"",
			""tactic"": ""command-and-control"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1053"",
			""tactic"": ""execution"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1053"",
			""tactic"": ""persistence"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1053"",
			""tactic"": ""privilege-escalation"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1005"",
			""tactic"": ""collection"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1140"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1562"",
			""tactic"": ""defense-evasion"",
			""score"": 75,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1190"",
			""tactic"": ""initial-access"",
			""score"": 1,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1558"",
			""tactic"": ""credential-access"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1567"",
			""tactic"": ""exfiltration"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1219"",
			""tactic"": ""command-and-control"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1552"",
			""tactic"": ""credential-access"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1055"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1055"",
			""tactic"": ""privilege-escalation"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1205"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1205"",
			""tactic"": ""persistence"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1205"",
			""tactic"": ""command-and-control"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1620"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1572"",
			""tactic"": ""command-and-control"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1560"",
			""tactic"": ""collection"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1021"",
			""tactic"": ""lateral-movement"",
			""score"": 50,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1595"",
			""tactic"": ""reconnaissance"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1016"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1087"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059"",
			""tactic"": ""execution"",
			""score"": 50,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.005"",
			""tactic"": ""execution"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.002"",
			""tactic"": ""execution"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.003"",
			""tactic"": ""execution"",
			""score"": 50,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.004"",
			""tactic"": ""execution"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.008"",
			""tactic"": ""execution"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.006"",
			""tactic"": ""execution"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.001"",
			""tactic"": ""execution"",
			""score"": 50,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.009"",
			""tactic"": ""execution"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1059.007"",
			""tactic"": ""execution"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1083"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1568"",
			""tactic"": ""command-and-control"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1049"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1586"",
			""tactic"": ""resource-development"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1497"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1497"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1204"",
			""tactic"": ""execution"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1057"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1041"",
			""tactic"": ""exfiltration"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1199"",
			""tactic"": ""initial-access"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1098"",
			""tactic"": ""persistence"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1098"",
			""tactic"": ""privilege-escalation"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1566"",
			""tactic"": ""initial-access"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1110"",
			""tactic"": ""credential-access"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1565"",
			""tactic"": ""impact"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1039"",
			""tactic"": ""collection"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1078"",
			""tactic"": ""defense-evasion"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1078"",
			""tactic"": ""persistence"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1078"",
			""tactic"": ""privilege-escalation"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1078"",
			""tactic"": ""initial-access"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1068"",
			""tactic"": ""privilege-escalation"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1027"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1486"",
			""tactic"": ""impact"",
			""score"": 1,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1056"",
			""tactic"": ""collection"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1056"",
			""tactic"": ""credential-access"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1570"",
			""tactic"": ""lateral-movement"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1095"",
			""tactic"": ""command-and-control"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1030"",
			""tactic"": ""exfiltration"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1598"",
			""tactic"": ""reconnaissance"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1569"",
			""tactic"": ""execution"",
			""score"": 75,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1505"",
			""tactic"": ""persistence"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1485"",
			""tactic"": ""impact"",
			""score"": 90,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1134"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1134"",
			""tactic"": ""privilege-escalation"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1136"",
			""tactic"": ""persistence"",
			""score"": 70,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1018"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1046"",
			""tactic"": ""discovery"",
			""score"": 50,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1622"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1622"",
			""tactic"": ""discovery"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1105"",
			""tactic"": ""command-and-control"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1211"",
			""tactic"": ""defense-evasion"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		},
		{
			""techniqueID"": ""T1529"",
			""tactic"": ""impact"",
			""score"": 100,
			""color"": """",
			""comment"": """",
			""enabled"": true,
			""metadata"": [],
			""links"": [],
			""showSubtechniques"": false
		}
	],
	""gradient"": {
		""colors"": [
			""#ff6666ff"",
			""#ffe766ff"",
			""#8ec843ff""
		],
		""minValue"": 0,
		""maxValue"": 100
	},
	""legendItems"": [],
	""metadata"": [],
	""links"": [],
	""showTacticRowBackground"": false,
	""tacticRowBackground"": ""#dddddd"",
	""selectTechniquesAcrossTactics"": true,
	""selectSubtechniquesWithParent"": false,
	""selectVisibleTechniques"": false
}"
QN9YCDyS,vimrc,t0iletcleaner,VIM,Monday 20th of November 2023 01:08:11 PM CDT,""" Disable compatibility with vi which can cause unexpected issues.
set nocompatible

"" Enable type file detection. Vim will be able to try to detect the type of file in use.
filetype on

"" Enable plugins and load plugin for the detected file type.
filetype plugin on

"" Load an indent file for the detected file type.
filetype indent on

syntax on

set relativenumber

set nu

set cursorline

set cursorcolumn

set nobackup

set nowritebackup

set history=50

set showcmd

set wildmenu

set cursorline

set showmatch

set incsearch

set hlsearch

set hls

set ic

set sm

set ai

set backspace=2

colorscheme habamax

""nnoremap <leader><space> :nohlsearch<CR>

filetype indent on

set omnifunc=htmlcomplete#CompleteTags

imap ( ()<left>
imap { {}<left>
imap [ []<left>
""imap < <><left>

set tabstop=4 ""Sets indent size of tabs""
set softtabstop=4 ""Soft tabs""
set expandtab ""Turns tabs into spaces""
set shiftwidth=4 ""Sets auto-indent size""
set autoindent ""Turns on auto-indenting""
set copyindent ""Copy the previous indentation on autoindenting""
set smartindent ""Remembers previous indent when creating new lines""

set guifont=Source_Code_Pro:h10:cDEFAULT
highlight Normal guifg=white guibg=#10000a

set statusline=
set laststatus=2
set statusline +=%1*[%{strlen(&fenc)?&fenc:&enc}]   	""encoding
set statusline +=%3*\ %n\ %*                        	""buffer number
set statusline +=%2*%{&ff}%*                       	 	""file format
set statusline +=%2*%y%*                            	""file type
set statusline +=%4*%<%F%*                        		""full path
set statusline +=%4*%m%*                            	""modified flag
set statusline +=%3*%=%5l%*                           	""current line +=%3*%=%5l%*
set statusline +=%3*/%L%*                           	""total lines
set statusline +=%2*%4v\ %*                         	""virtual column number
set statusline +=%1*0x%04B\ %*                      	""character under cursor

""lightest
hi User1 guifg=#200020 guibg=#d0d0d0

""red
hi User2 guifg=#cf0000 guibg=#222222    

""pink
hi User3 guifg=#ff66ff guibg=#222222

""lime
hi User4 guifg=#a0ee40 guibg=#222222

""also lime but not used by anything (?)
hi User5 guifg=#eeee40 guibg=#222222

set guioptions-=L
set guioptions-=T
"
jZXBtXpV,CC: Manual Moving,Community-guido,Lua,Monday 20th of November 2023 01:03:20 PM CDT,"--this Prgramm is written for an ComputerCraft Mining Turtle
--with it you can simple control/move your turtle
version = 'v2.0'

-- recomented to use advanced turtle for nice colorcodings
-- you get the colorcodes from here: https://computercraft.info/wiki/Colors_(API)

-- exit Program:
-- delete

-- Move:
-- w, a, s, d
-- 
-- Go Up, down:
-- space, shift
-- 
-- Break block in front, above, under
-- f, r, c
-- 
-- place block in front, under
-- g, v
-- 
-- refuel 
-- t
--
-- drop items:
-- q
--
-- suck up items:
-- e
--
-- select slot 1-9
-- 1-9 on keyboard
-- 
-- select slot 10-16 
-- 1-6 on numpad






color1 = colors.orange  -- Text Main
colr1p = ""1""            -- paint number of color
 
color2 = colors.blue    -- Text Inputs
colr2p = ""b""            -- paint number of color
 
color3 = colors.black   -- Background
colr3p = ""f""            -- paint number of color

color4 = colors.red     -- Text Title
colr4p = ""e""            -- paint number of color
 
 
status = {
	'                 ',
    'Walking forward: ',
    'Walking backward:',
    'Turning Right:   ',
    'Turning Left:    ',
	'Going Up:        ',
	'Going Down:      ',
	'Place Block:     ',
	'Break Block:     ',
	'Dropping Items:  ',
	'Retrieving Items:',
	'Refueling:       ',
}
 
function forward()
    while (turtle.forward() == false) do
        turtle.dig()
    end
end

function back()
    turtle.back()
end

function left()
    turtle.turnLeft()
end

function right()
	turtle.turnRight()
end

function up()
    while(turtle.detectUp())do
        turtle.digUp()
        sleep(0.4)
    end
    turtle.up()
end
 
function digUp()
    while(turtle.detectUp())do
        turtle.digUp()
        sleep(0.4)
    end
end

function down()
    while (turtle.down()==false)do
        turtle.digDown()
    end
end
 
function step()
    forward()
    digUp()
end

function select(valSlot)
	turtle.select(valSlot)
end

function getFuelString()
    lenFuel = string.len(turtle.getFuelLevel())
    tmp1 = ""%d/%s""
    return (string.format(tmp1, turtle.getFuelLevel(), turtle.getFuelLimit()))
end
 
function setscreen(stat)
    terminal('clr')
    empty = ""|                                     |""
    terminal('curs', 1, 1)
    term.blit(""/--Manual-Move"" .. string.rep(""-"", 24) .. ""\\"", string.rep(colr1p, 3) .. string.rep(colr4p, 11) .. string.rep(colr1p, 25), string.rep(colr3p, 39))
    terminal('curs', 1, 2)
    -- term.blit(""|  Manual-Move                        |"", string.rep(colr1p, 3) .. string.rep(colr4p, 11) .. string.rep(colr1p, 25), string.rep(colr3p, 39))
	term.blit(""|"" .. string.rep("" "", 37) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 3)
    term.blit(""|"" .. string.rep("" "", 37) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 4)
    term.blit(""|"" .. string.rep("" "", 37) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 5)
    term.blit(""|"" .. string.rep("" "", 37) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 6)
	term.blit(""|   "" .. stat .. ""                 |"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 7)
    term.blit(""|"" .. string.rep("" "", 37) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 8)
    term.blit(""|"" .. string.rep("" "", 37) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 9)
    term.blit(""|   Fuel Level: "" .. string.rep("" "", 22) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 10)
    term.blit(""|   "" .. getFuelString() .. string.rep("" "", 34-string.len(getFuelString())) .. ""|"", string.rep(colr1p, 4) .. string.rep(colr2p, lenFuel) .. string.rep(colr1p, 35-lenFuel), string.rep(colr3p, 39))
    terminal('curs', 1, 11)
    term.blit(""|"" .. string.rep("" "", 37) .. ""|"", string.rep(colr1p, 39), string.rep(colr3p, 39))
    terminal('curs', 1, 12)
    term.blit(""\\"" .. string.rep(""-"", 32) .. version .. ""-/"", string.rep(colr1p, 33) .. string.rep(colr4p, 4) .. string.rep(colr1p, 2), string.rep(colr3p, 39))
    term.blit(""\\"" .. string.rep(""-"", 37) .. ""/"", string.rep(colr1p, 39), string.rep(colr3p, 39))
end
 
function terminal(action, var1, var2, var3)
    if     action == ""bakgBlack"" then term.setBackgroundColor(color3)
    elseif action == ""TextOrang"" then term.setTextColor(color1)
    elseif action == ""TextBlue""  then term.setTextColor(color2)
    elseif action == ""clr""       then term.clear()
    elseif action == ""curs""      then term.setCursorPos(var1, var2)
    elseif action == ""blink""     then term.setCursorBlink(var1)
    elseif action == ""screen""    then setscreen(var1)
    else                              print('blah')
    end
 
end
 
--39*13
 
terminal('blink', false)
terminal('bakgBlack')
terminal('TextOrang')
terminal('clr')
terminal('curs', 1, 1)
 
 
 
terminal('screen', status[1])

while true do
	event, p1, isHeld = os.pullEvent(""key"")
	
	if not isHeld then
	-- print the number of pressed key
	--print(p1)
	--sleep(0.5)
	
		-- moving
		if     p1 == 87 then -- w
			terminal('screen', status[2])
		    forward()
		elseif p1 == 83 then -- s
			terminal('screen', status[3])
		    back()
		elseif p1 == 65 then -- a
			terminal('screen', status[5])
		    left()
		elseif p1 == 68 then -- d
			terminal('screen', status[4])
		    right()
		elseif p1 == 32 then -- space
		    terminal('screen', status[6])
			up()
		elseif p1 == 340 then -- left shift
			terminal('screen', status[7])
		    down()
		
		-- breaking
		elseif p1 == keys.f then -- f
			terminal('screen', status[9])
		    turtle.dig()
		elseif p1 == keys.r then -- r
			terminal('screen', status[9])
		    turtle.digUp()
			
		-- placing
		elseif p1 == keys.c then -- c
			terminal('screen', status[9])
		    turtle.digDown()
		elseif p1 == keys.g then -- g
		    terminal('screen',  status[8])
			turtle.place()
		elseif p1 == keys.v then -- v
		    terminal('screen',  status[8])
		    turtle.placeDown()
		
		-- drop/suck item
		elseif p1 == keys.q then -- q
		    terminal('screen',  status[10])
		    turtle.drop()
		elseif p1 == keys.e then -- e
		    terminal('screen',  status[11])
		    turtle.suck()
		
		-- refueling
		elseif p1 == keys.t then -- t
			terminal('screen', status[12])
		    turtle.refuel()
		
		-- slot selection
		elseif (p1 >= 49 and p1 <= 57) then -- 1 to 9 
		    select(p1-48)
		elseif (p1 >= 320 and p1 <= 326) then -- 1 to 6 numpad
		    select(p1-310)
			
		-- exit programm
		elseif p1 == 261 then -- delete
			print('Bye!')
			return
		end
		
	end
end"
SHXdzBEP,Untitled,pasholnahuy,C,Monday 20th of November 2023 12:47:55 PM CDT,"#include <assert.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

uint8_t hamming47(uint8_t four_bits) {
    return (__builtin_parity(four_bits & 0b1101) << 7) |
           (__builtin_parity(four_bits & 0b1011) << 6) |
           ((four_bits & 0b1000) << 1) |
           (__builtin_parity(four_bits & 0b0111) << 4) | ((four_bits & 0b0111) << 1);
}

void encode(void *data, void *encoded, size_t n) {
    for (size_t i = 0; i < n; ++i) {
        uint8_t byte = ((uint8_t *)data)[i];
        ((uint8_t *)encoded)[2 * i] = hamming47(byte & 0b1111);
        ((uint8_t *)encoded)[2 * i + 1] = hamming47(byte >> 4);
    }
}

uint8_t hamming_decode(uint8_t enc) {
    int err0 = __builtin_parity(enc & 0b10101010);
    int err1 = __builtin_parity(enc & 0b01100110);
    int err3 = __builtin_parity(enc & 0b00011110);
    if (!(err0 | err1 | err3)) {
        return ((enc & 0b00001110) >> 1) | ((enc & 0b00100000) >> 2);
    }

    int ind = err0 + (err1 << 1) + (err3 << 2) - 1;
    uint8_t fixed_enc = enc ^ (ind << 1);
    return ((fixed_enc & 0b00001110) >> 1) | ((fixed_enc & 0b00100000) >> 2);
}

void decode(void *encoded, void *data, size_t n) {
    for (size_t i = 0; i < n; ++i) {
        ((uint8_t *)data)[2 * i] =
            hamming_decode(((uint8_t *)encoded)[2 * i]) |
            (hamming_decode(((uint8_t *)encoded)[2 * i + 1]) << 4);
    }
}

void generate_random_data(void *buffer, size_t n) {
    for (size_t i = 0; i < n; ++i) {
        ((uint8_t *)buffer)[i] = rand();
    }
}

void bitflip(void *buffer, size_t n) {
    if (rand() % n) {
        ((uint8_t *)buffer)[rand() % n] ^= (1 << (rand() % 8));
    }
}

void test() {
    const size_t n = 1000;
    void *data = malloc(n);
    generate_random_data(data, n);

    void *encoded_buffer = malloc(2 * n);
    encode(data, encoded_buffer, n);
    bitflip(encoded_buffer, n);

    void *decoded_buffer = malloc(n);
    decode(encoded_buffer, decoded_buffer, n);
    assert(memcmp(data, decoded_buffer, n) == 0);
    free(encoded_buffer);
    free(data);
    free(decoded_buffer);
}

int main() {
    size_t counter = 0;
    for (int _ = 0; _ < 1000; ++_) {
        test();
        printf(""%zu tests passed...\n"", ++counter);
    }
}"
31YLMJgS,Untitled,uwuplayer,Python,Monday 20th of November 2023 12:27:55 PM CDT,"compras = {
    ""banana"": 1,
    ""naranja"": 3,
    ""pera"": 0,
    ""manzana"": 1
}

precios = {
    ""banana"": 12,
    ""manzana"": 8.5,
    ""naranja"": 6,
    ""pera"": 18
}

tot = {}
for prod, cantidad in compras.items():
    precio = precios[prod]
    total = cantidad * precio
    tot[prod] = total
print(tot)"
KezJKTLa,Untitled,uwuplayer,Python,Monday 20th of November 2023 12:26:01 PM CDT,"nuevodicc = dict((('Carlos', 10),('Manolo', 8),('Antonio', 4)))

print(nuevodicc)"
fLv1ZHLP,Untitled,uwuplayer,Python,Monday 20th of November 2023 12:01:01 PM CDT,"dicc = {""Alejandro"": 22, ""Maria"":28,""Juán"":26,""Luís"":23}

for i,j in dicc.items():
    print(f""Nombre: {i} edad: {j}"")"
VVmGAYEf,Untitled,vpeter,Bash,Monday 20th of November 2023 11:22:32 AM CDT,"Nov 20 17:21:04 CoreELEC systemd[1]: Starting remote-config.service...
Nov 20 17:21:04 CoreELEC remote-config[767]: using meson-remote, conf from /storage/.config
Nov 20 17:21:04 CoreELEC kernel: meson-ir ff808040.meson-remote: meson_ir_get_custom_tables:can't find match custom
Nov 20 17:21:04 CoreELEC kernel: ir_keypad as /devices/platform/ff808040.meson-remote/input/input4
Nov 20 17:21:04 CoreELEC remote-config[767]: configuring remote with /storage/.config/remote.conf
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:factory_code  7f800000
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:work_mode  00000000
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:repeat_enable  00000001
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:repeat_delay  00000078
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:repeat_peroid  00000021
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:release_delay  00000079
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:debug_enable  00000001
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:fn_key_scancode  00000052
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:left_key_scancode  00000025
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:right_key_scancode  00000027
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:up_key_scancode  00000026
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:down_key_scancode  00000028
Nov 20 17:21:04 CoreELEC remote-config[777]: curpara:ok_key_scancode  0000000d
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x51, keycode = 116
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x52, keycode = 90
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x53, keycode = 172
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x26, keycode = 103
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x25, keycode = 105
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0xd, keycode = 28
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x27, keycode = 106
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x28, keycode = 108
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x1b, keycode = 1
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x49, keycode = 46
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x41, keycode = 104
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x4e, keycode = 115
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x42, keycode = 109
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x56, keycode = 114
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x44, keycode = 14
Nov 20 17:21:04 CoreELEC remote-config[777]: KEYMAP_LEVEL: ircode = 0x4d, keycode = 113
Nov 20 17:21:04 CoreELEC kernel: meson-ir ff808040.meson-remote: add custom_code 0x00007F80 to ir map table
Nov 20 17:21:04 CoreELEC systemd[1]: remote-config.service: Deactivated successfully.
Nov 20 17:21:04 CoreELEC systemd[1]: Finished remote-config.service.
"
73FUZfWC,Untitled,Chudovische,JavaScript,Monday 20th of November 2023 11:19:28 AM CDT,"const {OpenAI} = require(""openai"");
const openai = new OpenAI({apiKey: OpenAiAPIKey});"
WE78QkSE,RLS Example,Larnu,T-SQL,Monday 20th of November 2023 11:15:35 AM CDT,"USE Sandbox;
Go
/* This Script assumes it is being run as a sysadmin, or at least a db_owner */

CREATE USER Jane WITHOUT LOGIN;
CREATE USER John WITHOUT LOGIN;
CREATE USER Sarah WITHOUT LOGIN;
GO

CREATE TABLE dbo.SomeTable (SomeID int IDENTITY(1,1),
                            SomeUser sysname NOT NULL,
                            SomeOtherUser sysname NULL,
                            SomeString varchar(3) NULL,
                            SomeDate date);
GO
GRANT SELECT ON dbo.SomeTable TO Jane;
GRANT SELECT ON dbo.SomeTable TO John;
GRANT SELECT ON dbo.SomeTable TO Sarah;
GO
CREATE FUNCTION dbo.tvf_SomeTable_SecPred (@SomeUser sysname, @SomeOtherUser sysname)
RETURNS TABLE
WITH SCHEMABINDING 
AS
    RETURN SELECT 1 AS SecPred
    WHERE USER_NAME() IN (@SomeUser,@SomeOtherUser)
       OR USER_NAME() = 'Jane'
       OR USER_NAME() = 'dbo';
GO

CREATE SECURITY POLICY SomeFilter
ADD FILTER PREDICATE dbo.tvf_SomeTable_SecPred(SomeUser,SomeOtherUser)
ON dbo.SomeTable
WITH (STATE = ON);
GO

INSERT INTO dbo.SomeTable (SomeUser,SomeOtherUser,SomeString,SomeDate)
VALUES('John','Sarah','abc',GETDATE()),
      ('Jim','Sarah','def',GETDATE()),
      ('Jane',NULL,'xyz',GETDATE()),
      ('Sarah','Jane',NULL,GETDATE());
GO

SELECT *
FROM dbo.SomeTable;
GO

CREATE PROC dbo.SomeProc @SomeUser sysname, @SomeOtherUser sysname = NULL AS
BEGIN
    SELECT SomeID,
           SomeUser,
           SomeOtherUser,
           SomeString,
           SomeDate
    FROM dbo.SomeTable
    WHERE SomeUser = @SomeUser
       OR SomeOtherUser = @SomeOtherUser;
END;
GO
GRANT EXECUTE ON dbo.SomeProc TO Jane;
GRANT EXECUTE ON dbo.SomeProc TO John;
GRANT EXECUTE ON dbo.SomeProc TO Sarah;
GO
SELECT * FROM dbo.SomeTable; --Returns all the rows, dbo is always allowed
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns a row, dbo is allowed
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 3 rows, dbo is allowed
GO

--Try as Jane;
EXECUTE AS USER = 'Jane';
GO
SELECT * FROM dbo.SomeTable; --Returns all the rows, Jane is always allowed
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns a row, Jane always allowed
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 3 rows, Jane always allowed
GO
REVERT;
GO
--Try as John
EXECUTE AS USER = 'John';
GO
SELECT * FROM dbo.SomeTable; --Returns only rows where John is SomeUser (1 row) (no rows where they are SomeOtherUser)
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns no rows, John isn't Jim or Sarah (values of columns on the row)
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 1 row, where John is SomeUser
GO
REVERT;
GO

--Try as Sarah
EXECUTE AS USER = 'Sarah';
GO
SELECT * FROM dbo.SomeTable; --Returns only rows where Sarah is SomeUser (1 row) or SomeOtherUser (2 rows)
EXEC dbo.SomeProc @SomeUser = 'Jim'; --Returns a row, Sarah is the OtherUser
EXEC dbo.SomeProc @SomeOtherUser = 'Sarah',@SomeUser = 'Jane'; --Returns 2 rows, Sarah is the User
GO
REVERT;


GO
DROP PROC dbo.SomeProc;
DROP SECURITY POLICY SomeFilter;
DROP TABLE dbo.SomeTable;
DROP FUNCTION dbo.tvf_SomeTable_SecPred;
DROP USER Jane;
DROP USER John;
DROP USER Sarah;"
2HF6s5Vy,SIM7600 GPS,uzielmaker,C++,Monday 20th of November 2023 11:08:20 AM CDT,"#include ""Waveshare_SIM7600.h""

// Pin definition
int POWERKEY = 2;

void setup() {
  Serial.begin(9600);
  sim7600.PowerOn(POWERKEY);
  // sim7600.GPSPositioning();
}

void loop() {
  sim7600.GPSPositioning();
  delay(10000);
}"
LKWV9Kes,Untitled,Tomcatchriss,Java,Monday 20th of November 2023 11:00:42 AM CDT,"<<<<<<<<1b3db31258e4be17575239c5ef0a3cd24623b50d<<<<
Mon, 20 Nov 2023 14:30:16 +0000
Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 2308376/134217728
======
Error Class: wcf\system\exception\ErrorException
Error Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
Error Code: 0
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/WCF.class.php (368)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""handleError"",""class"":""wcf\\system\\WCF"",""type"":""::"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""require"",""class"":"""",""type"":"""",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCFACP.class.php"",""line"":59,""function"":""runBootstrappers"",""class"":""wcf\\system\\WCF"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php"",""line"":23,""function"":""__construct"",""class"":""wcf\\system\\WCFACP"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":9,""args"":[""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php""],""function"":""require_once"",""class"":"""",""type"":""""}]
<<<<

<<<<<<<<dfc4b7b049067d9de3d5c631dfcbbd13116b5528<<<<
Mon, 20 Nov 2023 14:30:38 +0000
Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 2299912/134217728
======
Error Class: wcf\system\exception\ErrorException
Error Message: require(/var/www/vhosts/weltensiedler.de/httpdocs//lib/bootstrap.php): Failed to open stream: No such file or directory
Error Code: 0
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/WCF.class.php (368)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""handleError"",""class"":""wcf\\system\\WCF"",""type"":""::"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCF.class.php"",""line"":212,""function"":""require"",""class"":"""",""type"":"""",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/WCFACP.class.php"",""line"":59,""function"":""runBootstrappers"",""class"":""wcf\\system\\WCF"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php"",""line"":23,""function"":""__construct"",""class"":""wcf\\system\\WCFACP"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":9,""args"":[""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/global.php""],""function"":""require_once"",""class"":"""",""type"":""""}]
<<<<

<<<<<<<<c4c5089e2393d8e2149488f130736a213fa1738c<<<<
Mon, 20 Nov 2023 14:30:46 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3053240/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<36f4af77458f4acf85cbcbd6b4deafc07ee0b365<<<<
Mon, 20 Nov 2023 14:31:32 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3335488/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<f66c3cd38122fd1fce6aa2e16c3e6f9c02d6c4f1<<<<
Mon, 20 Nov 2023 14:39:53 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3338960/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<3a975e62be473f848335e5b869d92ed10c1eba18<<<<
Mon, 20 Nov 2023 16:19:18 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3445528/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

<<<<<<<<32c091d5bb9f8876988ffefbd1d0607c6a7ff7c5<<<<
Mon, 20 Nov 2023 16:51:23 +0000
Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
PHP version: 8.1.25
WoltLab Suite version: 6.0.2
Request URI: POST /acp/index.php?install-package/&t=ebe38fc27a0713a55b38f768d07d275030620ec0375c1877d1da1f317068f538-fl9/NfhLCY4bNDrRfklhCg==
Referrer: https://www.weltensiedler.de/acp/index.php?package-update/
User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
Peak Memory Usage: 3532536/134217728
======
Error Class: wcf\system\database\exception\DatabaseQueryExecutionException
Error Message: Could not execute statement 'ALTER TABLE `lexicon1_entry_synonym` DROP INDEX `a35cd5620823ba95ebf0c8d12ce5f425`'
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (143)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
======
Error Class: PDOException
Error Message: SQLSTATE[HY000]: General error: 1553 Cannot drop index 'a35cd5620823ba95ebf0c8d12ce5f425': needed in a foreign key constraint
Error Code: HY000
File: /var/www/vhosts/weltensiedler.de/httpdocs/lib/system/database/statement/PreparedStatement.class.php (125)
Extra Information: -
Stack Trace: [{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/statement\/PreparedStatement.class.php"",""line"":125,""function"":""execute"",""class"":""PDOStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/editor\/MySQLDatabaseEditor.class.php"",""line"":394,""function"":""execute"",""class"":""wcf\\system\\database\\statement\\PreparedStatement"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":859,""function"":""dropIndex"",""class"":""wcf\\system\\database\\editor\\MySQLDatabaseEditor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":311,""function"":""dropIndex"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/database\/table\/DatabaseTableChangeProcessor.class.php"",""line"":1095,""function"":""applyChanges"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":55,""function"":""process"",""class"":""wcf\\system\\database\\table\\DatabaseTableChangeProcessor"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/DatabasePackageInstallationPlugin.class.php"",""line"":38,""function"":""updateDatabase"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/plugin\/AbstractPackageInstallationPlugin.class.php"",""line"":75,""function"":""install"",""class"":""wcf\\system\\package\\plugin\\DatabasePackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":808,""function"":""update"",""class"":""wcf\\system\\package\\plugin\\AbstractPackageInstallationPlugin"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/package\/PackageInstallationDispatcher.class.php"",""line"":146,""function"":""executePIP"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":132,""function"":""install"",""class"":""wcf\\system\\package\\PackageInstallationDispatcher"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/acp\/action\/InstallPackageAction.class.php"",""line"":82,""function"":""stepInstall"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/action\/AbstractAction.class.php"",""line"":56,""function"":""execute"",""class"":""wcf\\acp\\action\\InstallPackageAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/Request.class.php"",""line"":57,""function"":""__run"",""class"":""wcf\\action\\AbstractAction"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/http\/middleware\/HandleValinorMappingErrors.class.php"",""line"":35,""function"":""handle"",""class"":""wcf\\system\\request\\Request"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/lib\/system\/request\/RequestHandler.class.php"",""line"":147,""function"":""process"",""class"":""wcf\\http\\Pipeline"",""type"":""->"",""args"":[]},{""file"":""\/var\/www\/vhosts\/weltensiedler.de\/httpdocs\/acp\/index.php"",""line"":10,""function"":""handle"",""class"":""wcf\\system\\request\\RequestHandler"",""type"":""->"",""args"":[]}]
<<<<

"
VrdrxF5s,ejercicio01,fgallego,C++,Monday 20th of November 2023 10:52:38 AM CDT,"#include <cstdint>
#include <utility>

// Tipo Matriz
   // Construir
   // Acceder a los elementos
struct Matrix{};

Matrix train(Matrix X, Matrix Y, std::size_t const maxiter) {
   // Vector w
   // Input = Matriz X (x1, x2... xN)
   // Output = Matriz Y (vector Y)

   // Repetir hasta maxiter iteraciones
      // Multiplicar (p.s.) todas las entradas por w (vector de pesos)
      // Comparar errores y contabilizarlos (h(X) == y)
         // Si 0 errores he terminado. Devuelvo w
         // Si hay errores, eliWo uno aleatorio y corrijo
            // w' <- w + yx
            // Si w' es mejor que wbest -> wbest = w'

   // Devolver wbest
}

std::pair<Matrix, Matrix> readFromCSV() {
   // Rellenar y devolver una matriz de prueba
}

int main() {
   auto [X, Y] = readFromCSV();
   // Entrenar
   // Mostrar el resultado

   return 0;
}"
UMT6S2Fw,acc char,StormDev2,C#,Monday 20th of November 2023 10:21:29 AM CDT,"void OnFirstLogin(Player* player)
    {
        if (player && !player->GetSession()->IsPremiumAccount())
        {
            bool hasCharacters = check_characters_count(player);

            if (!hasCharacters)
            {
                player->GetSession()->SetAccountPremium(1209600);
            }
        }
    }

    bool check_characters_count(Player* player)
    {
        QueryResult result = CharacterDatabase.PQuery(""SELECT COUNT(guid) FROM characters WHERE account = %u"", player->GetSession()->GetAccountId());

        if (result)
        {
            Field* fields = result->Fetch();
            uint32 characters_count = fields[0].GetUInt32();

            if (characters_count < 1)
                return true;
        }

        return false;
    }"
xy3ZZd4q,shazam_aiogram_bug,FanaticExplorer,Python,Monday 20th of November 2023 10:15:05 AM CDT,"(venv) PS D:\Python\SongRecognizeBot> pip install aiogram
Collecting aiogram
  Using cached aiogram-3.1.1-py3-none-any.whl.metadata (7.1 kB)
Collecting aiofiles~=23.1.0 (from aiogram)
  Using cached aiofiles-23.1.0-py3-none-any.whl (14 kB)
Collecting aiohttp~=3.8.5 (from aiogram)
  Using cached aiohttp-3.8.6-cp311-cp311-win_amd64.whl.metadata (7.9 kB)
Collecting certifi>=2023.7.22 (from aiogram)
  Using cached certifi-2023.11.17-py3-none-any.whl.metadata (2.2 kB)
Collecting magic-filter~=1.0.11 (from aiogram)
  Using cached magic_filter-1.0.12-py3-none-any.whl.metadata (1.5 kB)
Collecting pydantic<2.4,>=2.1.1 (from aiogram)
  Using cached pydantic-2.3.0-py3-none-any.whl.metadata (148 kB)
Collecting typing-extensions~=4.7.1 (from aiogram)
  Using cached typing_extensions-4.7.1-py3-none-any.whl.metadata (3.1 kB)
Collecting attrs>=17.3.0 (from aiohttp~=3.8.5->aiogram)
  Using cached attrs-23.1.0-py3-none-any.whl (61 kB)
Collecting charset-normalizer<4.0,>=2.0 (from aiohttp~=3.8.5->aiogram)
  Using cached charset_normalizer-3.3.2-cp311-cp311-win_amd64.whl.metadata (34 kB)
Collecting multidict<7.0,>=4.5 (from aiohttp~=3.8.5->aiogram)
  Using cached multidict-6.0.4-cp311-cp311-win_amd64.whl (28 kB)
Collecting async-timeout<5.0,>=4.0.0a3 (from aiohttp~=3.8.5->aiogram)
  Using cached async_timeout-4.0.3-py3-none-any.whl.metadata (4.2 kB)
Collecting yarl<2.0,>=1.0 (from aiohttp~=3.8.5->aiogram)
  Using cached yarl-1.9.2-cp311-cp311-win_amd64.whl (60 kB)
Collecting frozenlist>=1.1.1 (from aiohttp~=3.8.5->aiogram)
  Using cached frozenlist-1.4.0-cp311-cp311-win_amd64.whl.metadata (5.3 kB)
Collecting aiosignal>=1.1.2 (from aiohttp~=3.8.5->aiogram)
  Using cached aiosignal-1.3.1-py3-none-any.whl (7.6 kB)
Collecting annotated-types>=0.4.0 (from pydantic<2.4,>=2.1.1->aiogram)
  Using cached annotated_types-0.6.0-py3-none-any.whl.metadata (12 kB)
Collecting pydantic-core==2.6.3 (from pydantic<2.4,>=2.1.1->aiogram)
  Using cached pydantic_core-2.6.3-cp311-none-win_amd64.whl.metadata (6.6 kB)
Collecting idna>=2.0 (from yarl<2.0,>=1.0->aiohttp~=3.8.5->aiogram)
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Using cached aiogram-3.1.1-py3-none-any.whl (462 kB)
Using cached aiohttp-3.8.6-cp311-cp311-win_amd64.whl (322 kB)
Using cached certifi-2023.11.17-py3-none-any.whl (162 kB)
Using cached magic_filter-1.0.12-py3-none-any.whl (11 kB)
Using cached pydantic-2.3.0-py3-none-any.whl (374 kB)
Using cached pydantic_core-2.6.3-cp311-none-win_amd64.whl (1.7 MB)
Using cached annotated_types-0.6.0-py3-none-any.whl (12 kB)
Using cached async_timeout-4.0.3-py3-none-any.whl (5.7 kB)
Using cached charset_normalizer-3.3.2-cp311-cp311-win_amd64.whl (99 kB)
Using cached frozenlist-1.4.0-cp311-cp311-win_amd64.whl (44 kB)
Installing collected packages: typing-extensions, multidict, magic-filter, idna, frozenlist, charset-normalizer, certifi, attrs, async-timeout, annotated-types, 
aiofiles, yarl, pydantic-core, aiosignal, pydantic, aiohttp, aiogram
Successfully installed aiofiles-23.1.0 aiogram-3.1.1 aiohttp-3.8.6 aiosignal-1.3.1 annotated-types-0.6.0 async-timeout-4.0.3 attrs-23.1.0 certifi-2023.11.17 char
set-normalizer-3.3.2 frozenlist-1.4.0 idna-3.4 magic-filter-1.0.12 multidict-6.0.4 pydantic-2.3.0 pydantic-core-2.6.3 typing-extensions-4.7.1 yarl-1.9.2
(venv) PS D:\Python\SongRecognizeBot> pip install shazamio
Collecting shazamio
  Using cached shazamio-0.4.0.1-py3-none-any.whl (32 kB)
Collecting aiofiles<23.0.0,>=22.1.0 (from shazamio)
  Using cached aiofiles-22.1.0-py3-none-any.whl (14 kB)
Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in d:\python\songrecognizebot\venv\lib\site-packages (from shazamio) (3.8.6)
Collecting anyio<4.0.0,>=3.6.2 (from shazamio)
  Using cached anyio-3.7.1-py3-none-any.whl.metadata (4.7 kB)
Collecting dataclass-factory==2.16 (from shazamio)
  Using cached dataclass_factory-2.16-py3-none-any.whl (29 kB)
Collecting numpy<2.0.0,>=1.24.0 (from shazamio)
  Using cached numpy-1.26.2-cp311-cp311-win_amd64.whl.metadata (61 kB)
Collecting pydantic<2.0.0,>=1.10.2 (from shazamio)
  Using cached pydantic-1.10.13-cp311-cp311-win_amd64.whl.metadata (150 kB)
Collecting pydub<0.26.0,>=0.25.1 (from shazamio)
  Using cached pydub-0.25.1-py2.py3-none-any.whl (32 kB)
Collecting pytest<8.0.0,>=7.2.0 (from shazamio)
  Using cached pytest-7.4.3-py3-none-any.whl.metadata (7.9 kB)
Collecting pytest-asyncio<0.21.0,>=0.20.3 (from shazamio)
  Using cached pytest_asyncio-0.20.3-py3-none-any.whl (12 kB)
Requirement already satisfied: attrs>=17.3.0 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (23.1.0)
Requirement already satisfied: charset-normalizer<4.0,>=2.0 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (3.3.2)  
Requirement already satisfied: multidict<7.0,>=4.5 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (6.0.4)
Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (4.0.3)   
Requirement already satisfied: yarl<2.0,>=1.0 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (1.9.2)
Requirement already satisfied: frozenlist>=1.1.1 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (1.4.0)
Requirement already satisfied: aiosignal>=1.1.2 in d:\python\songrecognizebot\venv\lib\site-packages (from aiohttp<4.0.0,>=3.8.3->shazamio) (1.3.1)
Requirement already satisfied: idna>=2.8 in d:\python\songrecognizebot\venv\lib\site-packages (from anyio<4.0.0,>=3.6.2->shazamio) (3.4)
Collecting sniffio>=1.1 (from anyio<4.0.0,>=3.6.2->shazamio)
  Using cached sniffio-1.3.0-py3-none-any.whl (10 kB)
Requirement already satisfied: typing-extensions>=4.2.0 in d:\python\songrecognizebot\venv\lib\site-packages (from pydantic<2.0.0,>=1.10.2->shazamio) (4.7.1)
Collecting iniconfig (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
Collecting packaging (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached packaging-23.2-py3-none-any.whl.metadata (3.2 kB)
Collecting pluggy<2.0,>=0.12 (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached pluggy-1.3.0-py3-none-any.whl.metadata (4.3 kB)
Collecting colorama (from pytest<8.0.0,>=7.2.0->shazamio)
  Using cached colorama-0.4.6-py2.py3-none-any.whl (25 kB)
Using cached anyio-3.7.1-py3-none-any.whl (80 kB)
Using cached numpy-1.26.2-cp311-cp311-win_amd64.whl (15.8 MB)
Using cached pydantic-1.10.13-cp311-cp311-win_amd64.whl (2.1 MB)
Using cached pytest-7.4.3-py3-none-any.whl (325 kB)
Using cached pluggy-1.3.0-py3-none-any.whl (18 kB)
Using cached packaging-23.2-py3-none-any.whl (53 kB)
Installing collected packages: pydub, sniffio, pydantic, pluggy, packaging, numpy, iniconfig, dataclass-factory, colorama, aiofiles, pytest, anyio, pytest-asynci
o, shazamio
  Attempting uninstall: pydantic
    Found existing installation: pydantic 2.3.0
    Uninstalling pydantic-2.3.0:
      Successfully uninstalled pydantic-2.3.0
  Attempting uninstall: aiofiles
    Found existing installation: aiofiles 23.1.0
    Uninstalling aiofiles-23.1.0:
      Successfully uninstalled aiofiles-23.1.0
ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependen
cy conflicts.
aiogram 3.1.1 requires aiofiles~=23.1.0, but you have aiofiles 22.1.0 which is incompatible.
aiogram 3.1.1 requires pydantic<2.4,>=2.1.1, but you have pydantic 1.10.13 which is incompatible.
Successfully installed aiofiles-22.1.0 anyio-3.7.1 colorama-0.4.6 dataclass-factory-2.16 iniconfig-2.0.0 numpy-1.26.2 packaging-23.2 pluggy-1.3.0 pydantic-1.10.1
3 pydub-0.25.1 pytest-7.4.3 pytest-asyncio-0.20.3 shazamio-0.4.0.1 sniffio-1.3.0
"
Lw28a94P,Untitled,Alex-KS02,Java,Monday 20th of November 2023 10:12:06 AM CDT,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public class GoogleLoginExample {

    // Замените эти значения на свои данные
    private static final String CLIENT_ID = ""YOUR_CLIENT_ID"";
    private static final String CLIENT_SECRET = ""YOUR_CLIENT_SECRET"";
    private static final String REDIRECT_URI = ""YOUR_REDIRECT_URI"";
    private static final String AUTH_URL = ""https://accounts.google.com/o/oauth2/auth"";
    private static final String TOKEN_URL = ""https://accounts.google.com/o/oauth2/token"";

    public static void main(String[] args) throws IOException {
        // Шаг 1: Получение URL для аутентификации
        String authUrl = getAuthorizationUrl();
        System.out.println(""Пожалуйста, перейдите по следующей ссылке для входа:"");
        System.out.println(authUrl);

        // Шаг 2: Получение кода авторизации от пользователя
        System.out.print(""Введите код авторизации: "");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String authorizationCode = br.readLine().trim();

        // Шаг 3: Получение токена доступа
        String accessToken = getAccessToken(authorizationCode);
        System.out.println(""Токен доступа: "" + accessToken);
    }

    private static String getAuthorizationUrl() {
        Map<String, String> params = new HashMap<>();
        params.put(""response_type"", ""code"");
        params.put(""client_id"", CLIENT_ID);
        params.put(""redirect_uri"", REDIRECT_URI);
        params.put(""scope"", ""https://www.googleapis.com/auth/userinfo.profile"");

        StringBuilder urlBuilder = new StringBuilder(AUTH_URL);
        urlBuilder.append(""?"");
        for (Map.Entry<String, String> entry : params.entrySet()) {
            urlBuilder.append(entry.getKey()).append(""="").append(entry.getValue()).append(""&"");
        }
        return urlBuilder.toString();
    }

    private static String getAccessToken(String authorizationCode) throws IOException {
        Map<String, String> params = new HashMap<>();
        params.put(""code"", authorizationCode);
        params.put(""client_id"", CLIENT_ID);
        params.put(""client_secret"", CLIENT_SECRET);
        params.put(""redirect_uri"", REDIRECT_URI);
        params.put(""grant_type"", ""authorization_code"");

        StringBuilder postData = new StringBuilder();
        for (Map.Entry<String, String> param : params.entrySet()) {
            if (postData.length() != 0) postData.append('&');
            postData.append(param.getKey()).append('=').append(param.getValue());
        }

        URL tokenUrl = new URL(TOKEN_URL);
        String response = HttpUtils.post(tokenUrl, postData.toString());

        // Разбор ответа и извлечение токена доступа
        // Примечание: В реальном приложении необходимо использовать библиотеки для работы с JSON, например, Jackson или Gson.
        String accessToken = response.substring(response.indexOf(""\""access_token\"":\"""") + 15);
        accessToken = accessToken.substring(0, accessToken.indexOf(""\""""));

        return accessToken;
    }
}"
uqkyVXe2,Threaded Binary Tree(3 sem),anticlown,Java,Monday 20th of November 2023 10:01:57 AM CDT,"/*
                                            #########################################
                                            |       	Node class start		    |
                                            #########################################
*/
public class Node {
    int key;
    int height;
    Node left;
    Node right;
    boolean rightThread; // Ложь, если правый указатель указывает на преемника
                        // Истина, если правый указатель указывает на обычного потомка
    boolean isOutputed;

    @Override
    public String toString() {
        return """" + key;
    }
}
/*
                                            #########################################
                                            |       	Node class end			    |
                                            #########################################

                                            #########################################
                                            |       	Tree class start		    |
                                            #########################################
*/
class Tree {
    public Node rootNode;

    /*      balance methods start     */
    private static void updateHeight(final Node currentNode) {
        currentNode.height = 1 + Math.max(getHeight(currentNode.left), getHeight(currentNode.right));
    }

    private static int getHeight(final Node currentNode) {
        return currentNode == null ? -1 : currentNode.height;
    }

    private static int getBalance(final Node currentNode) {
        return (currentNode == null) ? 0 : getHeight(currentNode.right) - getHeight(currentNode.left);
    }

    public static Node rotateRight(final Node parentNode) {
        Node tempNode = parentNode.left;
        Node tempNodeRightChild = tempNode.right;
        tempNode.right = parentNode;
        parentNode.left = tempNodeRightChild;
        updateHeight(parentNode);
        updateHeight(tempNode);
        return tempNode;
    }

    public static Node rotateLeft(final Node parentNode) {
        Node tempNode = parentNode.right;
        Node tempNodeLeftChild = tempNode.left;
        tempNode.left = parentNode;
        parentNode.right = tempNodeLeftChild;
        updateHeight(parentNode);
        updateHeight(tempNode);
        return tempNode;
    }

    public Node balanceTree(Node root) {
        updateHeight(root);
        int balance = getBalance(root);
        if (balance > 1) {
            if (getHeight(root.right.right) <= getHeight(root.right.left)) {
                root.right = rotateRight(root.right);
            }
            root = rotateLeft(root);
        } else if (balance < -1) {
            if (!(getHeight(root.left.left) > getHeight(root.left.right))) {
                root.left = rotateLeft(root.left);
            }
            root = rotateRight(root);
        }
        return root;
    }
    /*      balance methods end     */

    /*      insert func start     */
    public Node insertNode(Node parentNode, final int key) {
        if (parentNode == null) {
            Node temp = new Node();
            temp.key = key;
            return temp;
        } else if (parentNode.key > key) {
            parentNode.left = insertNode(parentNode.left, key);
        } else if (parentNode.key < key) {
            parentNode.right = insertNode(parentNode.right, key);
        } else {
            System.err.println(""Некорректный ввод! Элемент с таким значением уже существует."");
        }
        return balanceTree(parentNode);
    }
    /*      insert func end     */

    /*      delete func start     */
    public static Node mostLeftChild(final Node parentNode) {
        Node temp = parentNode;
        while (temp.left != null)
            temp = temp.left;
        return temp;
    }

    public Node deleteNode(Node root, final int key) {
        if (root == null) {
            System.err.println(""Элемента с таким значением нет в дереве!"");
            return null;
        } else if (root.key > key) {
            root.left = deleteNode(root.left, key);
        } else if (root.key < key) {
            root.right = deleteNode(root.right, key);
        } else {
            if (root.left == null || root.right == null) {
                root = (root.left == null) ? root.right : root.left;
            } else {
                Node mostLeftChild = mostLeftChild(root.right);
                root.key = mostLeftChild.key;
                root.right = deleteNode(root.right, root.key);
            }
        }
        if (root != null) {
            root = balanceTree(root);
        }
        return root;
    }
    /*      delete func end     */

    /*      find func start     */
    public Node findNodeByValue(final int value) {
        Node currentNode = rootNode;
        while (currentNode.key != value) {
            if (value < currentNode.key) {
                currentNode = currentNode.left;
            } else {
                currentNode = currentNode.right;
            }
            if (currentNode == null) {
                System.out.println(""Элемента с таким значением нет в дереве."");
                return null;
            }
        }
        return currentNode;
    }
    /*      find func end     */

    /*      thread func start     */
    public static Node sewTree(Node root) {
        if (root == null) {
            return null;
        }

        if (root.right == null && root.left == null) { return root; }

        if (root.left != null) {
            Node left = sewTree(root.left);
            left.right = root;
            left.rightThread = true;
        }

        if(root.right == null) { return root; }

        return sewTree(root.right);
    }
    /*      thread func end     */

    /*      print methods start     */
    public static final String ANSI_RESET = ""\u001B[0m"";
    public static final String ANSI_BLUE = ""\u001B[34m"";
    public static final String ANSI_RED = ""\u001B[31m"";

    //print methods for default BST(can't work with already threaded tree)
    void printInorder(Node parentNode) {
        if (parentNode == null)
            return;

        printInorder(parentNode.left);
        String color = (parentNode.rightThread) ? ANSI_RED : ANSI_BLUE; //useless at the moment
        System.out.print(color + parentNode.key + "" "" + ANSI_RESET);
        printInorder(parentNode.right);
    }

    void printPreorder(Node parentNode) {
        if (parentNode == null)
            return;

        String color = (parentNode.rightThread) ? ANSI_RED : ANSI_BLUE; //useless at the moment
        System.out.print(color + parentNode.key + "" "" + ANSI_RESET);
        printPreorder(parentNode.left);
        printPreorder(parentNode.right);
    }

    void printPostorder(Node parentNode) {
        if (parentNode == null)
            return;

        printPostorder(parentNode.left);
        printPostorder(parentNode.right);
        String color = (parentNode.rightThread) ? ANSI_RED : ANSI_BLUE; //useless at the moment
        System.out.print(color + parentNode.key + "" "" + ANSI_RESET);
        }


    static public void printSewTree(Node currNode) {
        if (currNode != null) {
            String color = (currNode.right != null && currNode.right.isOutputed) ? ANSI_RED : ANSI_BLUE; //useless at the moment
            System.out.print(color + currNode.key + "" "" + ANSI_RESET);
            if (!currNode.isOutputed) {
                currNode.isOutputed = true;
                printSewTree(currNode.left);
                printSewTree(currNode.right);
            }
        }
    }

    public void printNode(final Node currentNode) {
        System.out.println(""Выбранный узел имеет значение: "" + currentNode.key);
        if (currentNode.left == null && currentNode.right == null)
            System.out.println(""У данного элемента нет потомков."");
        else {
            String ansRightChild = (currentNode.right != null) ? ""Значение правого потомка: "" + currentNode.right.key : ""У данного элемента нет правого потомка."";
            System.out.println(ansRightChild);
            String ansLeftChild = (currentNode.left != null) ? ""Значение левого потомка: "" + currentNode.left.key : ""У данного элемента нет левого потомка."";
            System.out.println(ansLeftChild);
        }
    }
    /*      print methods end     */
}
/*
                                            #########################################
                                            |       	Tree class end			    |
                                            #########################################

                                            #########################################
                                            |         TreePrinter class start		|
                                            #########################################
*/
import java.util.ArrayList;
import java.util.List;

public class TreePrinter
{
    public static void printTree(Node root)
    {
        List<List<String>> lines = new ArrayList<List<String>>();

        List<Node> level = new ArrayList<Node>();
        List<Node> next = new ArrayList<Node>();

        level.add(root);
        int newNode = 1;

        int widest = 0;

        while (newNode != 0) {
            List<String> line = new ArrayList<String>();

            newNode = 0;

            for (Node currNode : level) {
                if (currNode == null) {
                    line.add(null);

                    next.add(null);
                    next.add(null);
                } else {
                    String stringOfNode = currNode.toString();
                    line.add(stringOfNode);
                    if (stringOfNode.length() > widest) widest = stringOfNode.length();

                    next.add(currNode.left);
                    next.add(currNode.right);

                    if (currNode.left != null) newNode++;
                    if (currNode.right != null) newNode++;
                }
            }

            if (widest % 2 == 1) widest++;

            lines.add(line);

            List<Node> tmp = level;
            level = next;
            next = tmp;
            next.clear();
        }

        int perPiece = lines.get(lines.size() - 1).size() * (widest + 4);
        for (int i = 0; i < lines.size(); i++) {
            List<String> line = lines.get(i);
            int hpw = (int) Math.floor(perPiece / 2f) - 1;

            if (i > 0) {
                for (int j = 0; j < line.size(); j++) {

                    char tempChar = ' ';
                    if (j % 2 == 1) {
                        if (line.get(j - 1) != null) {
                            tempChar = (line.get(j) != null) ? '┴' : '┘';
                        } else {
                            if (line.get(j) != null) tempChar = '└';
                        }
                    }
                    System.out.print(tempChar);

                    if (line.get(j) == null) {
                        for (int k = 0; k < perPiece - 1; k++) {
                            System.out.print("" "");
                        }
                    } else {
                        for (int k = 0; k < hpw; k++) {
                            System.out.print(j % 2 == 0 ? "" "" : ""─"");
                        }
                        System.out.print(j % 2 == 0 ? ""┌"" : ""┐"");
                        for (int k = 0; k < hpw; k++) {
                            System.out.print(j % 2 == 0 ? ""─"" : "" "");
                        }
                    }
                }
                System.out.println();
            }

            for (String lineStr : line) {

                if (lineStr == null) lineStr = """";
                float tmp = perPiece / 2f - lineStr.length() / 2f;
                int gap1 = (int) Math.ceil(tmp);
                int gap2 = (int) Math.floor(tmp);

                for (int k = 0; k < gap1; k++) {
                    System.out.print("" "");
                }
                System.out.print(lineStr);
                for (int k = 0; k < gap2; k++) {
                    System.out.print("" "");
                }
            }
            System.out.println();

            perPiece /= 2;
        }
    }
}
/*
                                            #########################################
                                            |         TreePrinter class start		|
                                            #########################################

                                            #########################################
                                            |       	Main class start		    |
                                            #########################################
*/
import java.util.Scanner;

public class Main {

    public static void printTaskInfo() {
        System.out.println(""\tДанная программа позволяет сформировать, изменить, вывести и прошить бинарное дерево поиска."");
        System.out.println(""\t\tДля работы в программе используйте команды меню."");
    }

    public static void printMenuOptions() {
        System.out.println(""\t\t\t\t\t Меню"");
        System.out.println(""\t\t\t\t1.Добавить узел"");
        System.out.println(""\t\t\t\t2.Удалить узел"");
        System.out.println(""\t\t\t\t3.Поиск узла"");
        System.out.println(""\t\t\t\t4.Вывести дерево"");
        System.out.println(""\t\t\t\t5.Прошить дерево и вывести прошивку"");
        System.out.println(""\t\t\t\t6.Вывести обходы дерева всеми способами."");
        System.out.println(""\t\t\t\t7.Выйти из программы"");
    }

    public static void main(String[] args) {
        Tree tree = new Tree();
        Scanner scan = new Scanner(System.in);
        int choice = 0;

        printTaskInfo();
        printMenuOptions();

        do {
            System.out.print(""\n\nВведите команду для выполнения: "");
            try {
                choice = Integer.parseInt(scan.nextLine());
            } catch (Exception e) {
                choice = -1;
            }
            switch (choice) {
                case 1: {
                    System.out.println(""Вы выбрали: добавить узел"");
                    int elemToAdd;
                    System.out.print(""Введите значение элемента для добавления: "");
                    elemToAdd = Integer.parseInt(scan.nextLine());
                    tree.rootNode = tree.insertNode(tree.rootNode, elemToAdd);
                    break;
                }

                case 2: {
                    System.out.println(""Вы выбрали: удалить узел"");
                    int elemToDelete;
                    System.out.print(""Введите значение элемента для удаления: "");
                    elemToDelete = Integer.parseInt(scan.nextLine());
                    tree.rootNode = tree.deleteNode(tree.rootNode, elemToDelete); //? ""Элемент успешно удален!"" : ""Элемента с таким значением нет в дереве!"";
                    break;
                }
                case 3: {
                    System.out.println(""Вы выбрали: поиск узла"");
                    int elemToFind;
                    System.out.print(""Введите значение элемента для поиска: "");
                    elemToFind = Integer.parseInt(scan.nextLine());
                    Node foundNode = tree.findNodeByValue(elemToFind);
                    if (foundNode != null)
                        tree.printNode(foundNode);
                    break;
                }
                case 4: {
                    System.out.println(""Вы выбрали: вывести дерево"");
                    System.out.println(""Вывод дерева: "");
                    TreePrinter.printTree(tree.rootNode);
                    break;
                }
                case 5: {
                    System.out.println(""Вы выбрали: прошить дерево и вывести прошивку.\nКрасным цветом обозначены узлы, имеющие прошивку"");
                    Tree.sewTree(tree.rootNode);
                    Tree.printSewTree(tree.rootNode);
                    break;
                }
                case 6: {
                    System.out.println(""Вы выбрали: показать обход дерева всеми способами."");
                    System.out.println(""Прямой обход: "");
                    tree.printPreorder(tree.rootNode);
                    System.out.println();
                    System.out.println(""Симметричный обход: "");
                    tree.printInorder(tree.rootNode);
                    System.out.println();
                    System.out.println(""Обратный обход:"");
                    tree.printPostorder(tree.rootNode);
                    break;
                }
                case 7: {
                    System.out.println(""Вы выбрали: выйти из программы"");
                    break;
                }
                default:
                    System.err.println(""Некорректный ввод! Выберите один из пунктов меню!"");
                    break;
            }
        } while (choice != 5 && choice != 7);
    }
}
/*
                                            #########################################
                                            |       	Main class end		  		|
                                            #########################################
*/"
bedgE0Px,llama converter hack,tastypear,Python,Monday 20th of November 2023 09:34:42 AM CDT,"#!/usr/bin/env python3
from __future__ import annotations

import argparse
import concurrent.futures
import copy
import enum
import faulthandler
import functools
import io
import itertools
import json
import math
import mmap
import pickle
import re
import signal
import struct
import sys
import time
import zipfile
from abc import ABCMeta, abstractmethod
from concurrent.futures import ProcessPoolExecutor, ThreadPoolExecutor
from dataclasses import dataclass
from pathlib import Path
from typing import IO, TYPE_CHECKING, Any, Callable, Generator, Iterable, Literal, Sequence, TypeVar

import numpy as np
from sentencepiece import SentencePieceProcessor  # type: ignore[import]

import os
if 'NO_LOCAL_GGUF' not in os.environ:
    sys.path.insert(1, str(Path(__file__).parent / 'gguf-py' / 'gguf'))
import gguf

if TYPE_CHECKING:
    from typing import TypeAlias

if hasattr(faulthandler, 'register') and hasattr(signal, 'SIGUSR1'):
    faulthandler.register(signal.SIGUSR1)

NDArray: TypeAlias = 'np.ndarray[Any, Any]'

ARCH = gguf.MODEL_ARCH.LLAMA

DEFAULT_CONCURRENCY = 8
#
# data types
#

@dataclass(frozen=True)
class DataType:
    name: str
    dtype: np.dtype[Any]
    valid_conversions: list[str]

    def elements_to_bytes(self, n_elements: int) -> int:
        return n_elements * self.dtype.itemsize

@dataclass(frozen=True)
class UnquantizedDataType(DataType):
    pass

DT_F16  = UnquantizedDataType('F16', dtype = np.dtype(np.float16), valid_conversions = ['F32', 'Q8_0'])
DT_F32  = UnquantizedDataType('F32', dtype = np.dtype(np.float32), valid_conversions = ['F16', 'Q8_0'])
DT_I32  = UnquantizedDataType('I32', dtype = np.dtype(np.int16), valid_conversions = [])
DT_BF16 = UnquantizedDataType('BF16', dtype = np.dtype(np.uint16), valid_conversions = ['F32', 'F16', 'Q8_0'])

@dataclass(frozen=True)
class QuantizedDataType(DataType):
    block_size: int
    quantized_dtype: np.dtype[Any]
    ggml_type: gguf.GGMLQuantizationType

    def quantize(self, arr: NDArray) -> NDArray:
        raise NotImplementedError(f'Quantization for {self.name} not implemented')

    def elements_to_bytes(self, n_elements: int) -> int:
        assert n_elements % self.block_size == 0, f'Invalid number of elements {n_elements} for {self.name} with block size {self.block_size}'
        return self.quantized_dtype.itemsize * (n_elements // self.block_size)

@dataclass(frozen=True)
class Q8_0QuantizedDataType(QuantizedDataType):
    # Mini Q8_0 quantization in Python!
    def quantize(self, arr: NDArray) -> NDArray:
        assert arr.size % self.block_size == 0 and arr.size != 0, f'Bad array size {arr.size}'
        assert arr.dtype == np.float32, f'Bad array type {arr.dtype}'
        n_blocks = arr.size // self.block_size
        blocks = arr.reshape((n_blocks, self.block_size))
        # Much faster implementation of block quantization contributed by @Cebtenzzre
        def quantize_blocks_q8_0(blocks: NDArray) -> Iterable[tuple[Any, Any]]:
            d = abs(blocks).max(axis = 1) / np.float32(127)
            with np.errstate(divide = 'ignore'):
                qs = (blocks / d[:, None]).round()
            qs[d == 0] = 0
            yield from zip(d, qs)
        return np.fromiter(quantize_blocks_q8_0(blocks), count = n_blocks, dtype = self.quantized_dtype)

DT_Q8_0 = Q8_0QuantizedDataType('Q8_0',
    dtype = np.dtype(np.float32), valid_conversions = [],
    ggml_type = gguf.GGMLQuantizationType.Q8_0, block_size = 32,
    quantized_dtype = np.dtype([('d', '<f2'), ('qs', 'i1', (32,))]))

# Quantized types skipped here because they may also map to np.float32
NUMPY_TYPE_TO_DATA_TYPE: dict[np.dtype[Any], DataType] = {}
for dt in (DT_BF16, DT_F16, DT_F32, DT_I32):
    if dt.dtype in NUMPY_TYPE_TO_DATA_TYPE:
        raise ValueError(f'Invalid duplicate data type {dt}')
    NUMPY_TYPE_TO_DATA_TYPE[dt.dtype] = dt

SAFETENSORS_DATA_TYPES: dict[str, DataType] = {
    'BF16': DT_BF16,
    'F16': DT_F16,
    'F32': DT_F32,
    'I32': DT_I32,
}

# TODO: match this with `llama_ftype`
# TODO: rename to LLAMAFileType
# TODO: move to `gguf.py`
class GGMLFileType(enum.IntEnum):
    AllF32     = 0
    MostlyF16  = 1  # except 1d tensors
    MostlyQ8_0 = 7  # except 1d tensors

    def type_for_tensor(self, name: str, tensor: LazyTensor) -> DataType:
        dt = GGML_FILE_TYPE_TO_DATA_TYPE.get(self)
        if dt is None:
            raise ValueError(self)
        # 1D tensors are always F32.
        return dt if len(tensor.shape) > 1 else DT_F32

GGML_FILE_TYPE_TO_DATA_TYPE: dict[GGMLFileType, DataType] = {
    GGMLFileType.AllF32    : DT_F32,
    GGMLFileType.MostlyF16 : DT_F16,
    GGMLFileType.MostlyQ8_0: DT_Q8_0,
}

#
# hparams loading
#

@dataclass
class Params:
    n_vocab:    int
    n_embd:     int
    n_layer:    int
    n_ctx:      int
    n_ff:       int
    n_head:     int
    n_head_kv:  int
    f_norm_eps: float

    rope_scaling_type: gguf.RopeScalingType | None = None
    f_rope_freq_base: float | None = None
    f_rope_scale: float | None = None
    n_orig_ctx: int | None = None
    rope_finetuned: bool | None = None

    ftype: GGMLFileType | None = None

    # path to the directory containing the model files
    path_model: Path | None = None

    @staticmethod
    def guessed(model: LazyModel) -> Params:
        # try transformer naming first
        n_vocab, n_embd = model[""model.embed_tokens.weight""].shape if ""model.embed_tokens.weight"" in model else model[""tok_embeddings.weight""].shape

        # try transformer naming first
        if ""model.layers.0.self_attn.q_proj.weight"" in model:
            n_layer=next(i for i in itertools.count() if f""model.layers.{i}.self_attn.q_proj.weight"" not in model)
        elif ""model.layers.0.self_attn.W_pack.weight"" in model:   # next: try baichuan naming
            n_layer=next(i for i in itertools.count() if f""model.layers.{i}.self_attn.W_pack.weight"" not in model)
        else:
            n_layer=next(i for i in itertools.count() if f""layers.{i}.attention.wq.weight"" not in model)

        if n_layer < 1:
            raise Exception(""failed to guess 'n_layer'. This model is unknown or unsupported.\n""
                            ""Suggestion: provide 'config.json' of the model in the same directory containing model files."")

        n_head = n_embd // 128 # guessed
        n_mult = 256           # guessed

        # TODO: verify this
        n_ff = int(2 * (4 * n_embd) / 3)
        n_ff = n_mult * ((n_ff + n_mult - 1) // n_mult)

        return Params(
            n_vocab    = n_vocab,
            n_embd     = n_embd,
            n_layer    = n_layer,
            n_ctx      = -1,
            n_ff       = n_ff,
            n_head     = n_head,
            n_head_kv  = n_head,
            f_norm_eps = 1e-5,
        )

    @staticmethod
    def loadHFTransformerJson(model: LazyModel, config_path: Path) -> Params:
        config = json.load(open(config_path))

        rope_scaling_type = f_rope_scale = n_orig_ctx = rope_finetuned = None
        rope_scaling = config.get(""rope_scaling"")

        if rope_scaling is not None and (typ := rope_scaling.get(""type"")):
            rope_factor = rope_scaling.get(""factor"")
            f_rope_scale = rope_factor
            if typ == ""linear"":
                rope_scaling_type = gguf.RopeScalingType.LINEAR
            elif typ == ""yarn"":
                rope_scaling_type = gguf.RopeScalingType.YARN
                n_orig_ctx = rope_scaling['original_max_position_embeddings']
                rope_finetuned = rope_scaling['finetuned']
            else:
                raise NotImplementedError(f'Unknown rope scaling type: {typ}')

        if ""max_sequence_length"" in config:
            n_ctx = config[""max_sequence_length""]
        elif ""max_position_embeddings"" in config:
            n_ctx = config[""max_position_embeddings""]
        else:
            raise Exception(""failed to guess 'n_ctx'. This model is unknown or unsupported.\n""
                            ""Suggestion: provide 'config.json' of the model in the same directory containing model files."")

        return Params(
            n_vocab           = config[""vocab_size""],
            n_embd            = config[""hidden_size""],
            n_layer           = config[""num_hidden_layers""],
            n_ctx             = n_ctx,
            n_ff              = config[""intermediate_size""],
            n_head            = (n_head := config[""num_attention_heads""]),
            n_head_kv         = config.get(""num_key_value_heads"", n_head),
            f_norm_eps        = config[""rms_norm_eps""],
            f_rope_freq_base  = config.get(""rope_theta""),
            rope_scaling_type = rope_scaling_type,
            f_rope_scale      = f_rope_scale,
            n_orig_ctx        = n_orig_ctx,
            rope_finetuned    = rope_finetuned,
        )

    # LLaMA v2 70B params.json
    # {""dim"": 8192, ""multiple_of"": 4096, ""ffn_dim_multiplier"": 1.3, ""n_heads"": 64, ""n_kv_heads"": 8, ""n_layers"": 80, ""norm_eps"": 1e-05, ""vocab_size"": -1}
    @staticmethod
    def loadOriginalParamsJson(model: LazyModel, config_path: Path) -> Params:
        config = json.load(open(config_path))

        # hack to determine LLaMA v1 vs v2 vs CodeLlama
        if config.get(""rope_theta"") == 1000000:
            # CodeLlama
            n_ctx = 16384
        elif config[""norm_eps""] == 1e-05:
            # LLaMA v2
            n_ctx = 4096
        else:
            # LLaMA v1
            n_ctx = 2048

        return Params(
            n_vocab          = config.get(""vocab_size"", model[""tok_embeddings.weight""].shape[0]),
            n_embd           = config[""dim""],
            n_layer          = config[""n_layers""],
            n_ctx            = n_ctx,
            n_ff             = model[""layers.0.feed_forward.w1.weight""].shape[0],
            n_head           = (n_head := config[""n_heads""]),
            n_head_kv        = config.get(""n_kv_heads"", n_head),
            f_norm_eps       = config[""norm_eps""],
            f_rope_freq_base = config.get(""rope_theta""),
        )

    @staticmethod
    def load(model_plus: ModelPlus) -> Params:
        hf_config_path   = model_plus.paths[0].parent / ""config.json""
        orig_config_path = model_plus.paths[0].parent / ""params.json""

        if hf_config_path.exists():
            params = Params.loadHFTransformerJson(model_plus.model, hf_config_path)
        elif orig_config_path.exists():
            params = Params.loadOriginalParamsJson(model_plus.model, orig_config_path)
        elif model_plus.format != 'none':
            params = Params.guessed(model_plus.model)
        else:
            raise ValueError('Cannot guess params when model format is none')

        params.path_model = model_plus.paths[0].parent

        return params


#
# vocab
#

class BpeVocab:
    def __init__(self, fname_tokenizer: Path, fname_added_tokens: Path | None) -> None:
        self.bpe_tokenizer = json.loads(open(str(fname_tokenizer), encoding=""utf-8"").read())
        added_tokens: dict[str, int]
        if fname_added_tokens is not None:
            # FIXME: Verify that added tokens here _cannot_ overlap with the main vocab.
            added_tokens = json.load(open(fname_added_tokens, encoding=""utf-8""))
        else:
            # Fall back to trying to find the added tokens in tokenizer.json
            tokenizer_json_file = fname_tokenizer.parent / 'tokenizer.json'
            if not tokenizer_json_file.is_file():
                added_tokens = {}
            else:
                tokenizer_json = json.load(open(tokenizer_json_file, encoding=""utf-8""))
                added_tokens = dict(
                    (item['content'], item['id'])
                    for item in tokenizer_json.get('added_tokens', [])
                    # Added tokens here can be duplicates of the main vocabulary.
                    if item['content'] not in self.bpe_tokenizer )

        vocab_size: int = len(self.bpe_tokenizer)
        expected_ids    = list(range(vocab_size, vocab_size + len(added_tokens)))
        actual_ids      = sorted(added_tokens.values())
        if expected_ids != actual_ids:
            expected_end_id = vocab_size + len(actual_ids) - 1
            raise Exception(f""Expected the {len(actual_ids)} added token ID(s) to be sequential in the range {vocab_size} - {expected_end_id}; got {actual_ids}"")

        items = sorted(added_tokens.items(), key=lambda text_idx: text_idx[1])
        self.added_tokens_list    = [text for (text, idx) in items]
        self.vocab_size_base: int = vocab_size
        self.vocab_size: int      = self.vocab_size_base + len(self.added_tokens_list)
        self.fname_tokenizer      = fname_tokenizer
        self.fname_added_tokens   = fname_added_tokens

    def bpe_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        tokenizer = self.bpe_tokenizer
        from transformers.models.gpt2 import tokenization_gpt2  # type: ignore[import]
        reverse_vocab = {id: encoded_tok for encoded_tok, id in tokenizer.items()}

        for i, _ in enumerate(tokenizer):
            yield reverse_vocab[i], 0.0, gguf.TokenType.NORMAL

    def added_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        for text in self.added_tokens_list:
            score = -1000.0
            yield text.encode(""utf-8""), score, gguf.TokenType.CONTROL

    def all_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        yield from self.bpe_tokens()
        yield from self.added_tokens()

    def __repr__(self) -> str:
        return f""<BpeVocab with {self.vocab_size_base} base tokens and {len(self.added_tokens_list)} added tokens>""


class SentencePieceVocab:
    def __init__(self, fname_tokenizer: Path, fname_added_tokens: Path | None) -> None:
        self.sentencepiece_tokenizer = SentencePieceProcessor(str(fname_tokenizer))
        added_tokens: dict[str, int]
        if fname_added_tokens is not None:
            added_tokens = json.load(open(fname_added_tokens, encoding=""utf-8""))
        else:
            added_tokens = {}

        vocab_size: int = self.sentencepiece_tokenizer.vocab_size()

        new_tokens       = {id: piece for piece, id in added_tokens.items() if id >= vocab_size}
        expected_new_ids = list(range(vocab_size, vocab_size + len(new_tokens)))
        actual_new_ids   = sorted(new_tokens.keys())

        if expected_new_ids != actual_new_ids:
            raise ValueError(f""Expected new token IDs {expected_new_ids} to be sequential; got {actual_new_ids}"")

        # Token pieces that were added to the base vocabulary.
        self.added_tokens_list  = [new_tokens[id] for id in actual_new_ids]
        self.vocab_size_base    = vocab_size
        self.vocab_size         = self.vocab_size_base + len(self.added_tokens_list)
        self.fname_tokenizer    = fname_tokenizer
        self.fname_added_tokens = fname_added_tokens

    def sentencepiece_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        tokenizer = self.sentencepiece_tokenizer
        for i in range(tokenizer.vocab_size()):
            piece = tokenizer.id_to_piece(i)
            text: bytes = piece.encode(""utf-8"")
            score: float = tokenizer.get_score(i)

            toktype = gguf.TokenType.NORMAL
            if tokenizer.is_unknown(i):
                toktype = gguf.TokenType.UNKNOWN
            if tokenizer.is_control(i):
                toktype = gguf.TokenType.CONTROL

            # NOTE: I think added_tokens are user defined.
            # ref: https://github.com/google/sentencepiece/blob/master/src/sentencepiece_model.proto
            # if tokenizer.is_user_defined(i): toktype = gguf.TokenType.USER_DEFINED

            if tokenizer.is_unused(i):
                toktype = gguf.TokenType.UNUSED
            if tokenizer.is_byte(i):
                toktype = gguf.TokenType.BYTE

            yield text, score, toktype

    def added_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        for text in self.added_tokens_list:
            score = -1000.0
            yield text.encode(""utf-8""), score, gguf.TokenType.USER_DEFINED

    def all_tokens(self) -> Iterable[tuple[bytes, float, gguf.TokenType]]:
        yield from self.sentencepiece_tokens()
        yield from self.added_tokens()

    def __repr__(self) -> str:
        return f""<SentencePieceVocab with {self.vocab_size_base} base tokens and {len(self.added_tokens_list)} added tokens>""

Vocab: TypeAlias = 'BpeVocab | SentencePieceVocab'

#
# data loading
# TODO: reuse (probably move to gguf.py?)
#

def permute(weights: NDArray, n_head: int, n_head_kv: int) -> NDArray:
    #print( ""permute debug "" + str(weights.shape[0]) + "" x "" + str(weights.shape[1]) + "" nhead "" + str(n_head) + "" nheadkv "" + str(n_kv_head) )
    if n_head_kv is not None and n_head != n_head_kv:
        n_head = n_head_kv
    return (weights.reshape(n_head, 2, weights.shape[0] // n_head // 2, *weights.shape[1:])
                .swapaxes(1, 2)
                .reshape(weights.shape))


class Tensor(metaclass=ABCMeta):
    data_type: DataType

    @abstractmethod
    def astype(self, data_type: DataType) -> Tensor: ...
    @abstractmethod
    def permute(self, n_head: int, n_head_kv: int) -> Tensor: ...
    @abstractmethod
    def permute_part(self, n_part: int, n_head: int, n_head_kv: int) -> UnquantizedTensor: ...
    @abstractmethod
    def part(self, n_part: int) -> UnquantizedTensor: ...
    @abstractmethod
    def to_ggml(self) -> GGMLCompatibleTensor: ...


def bf16_to_fp32(bf16_arr: np.ndarray[Any, np.dtype[np.uint16]]) -> NDArray:
    assert bf16_arr.dtype == np.uint16, f""Input array should be of dtype uint16, but got {bf16_arr.dtype}""
    fp32_arr = bf16_arr.astype(np.uint32) << 16
    return fp32_arr.view(np.float32)


class UnquantizedTensor(Tensor):
    def __init__(self, ndarray: NDArray) -> None:
        assert isinstance(ndarray, np.ndarray)
        self.ndarray = ndarray
        self.data_type = NUMPY_TYPE_TO_DATA_TYPE[ndarray.dtype]

    def astype(self, data_type: DataType) -> Tensor:
        dtype = data_type.dtype
        if self.data_type == DT_BF16:
            self.ndarray = bf16_to_fp32(self.ndarray)
        return UnquantizedTensor(self.ndarray.astype(dtype))

    def to_ggml(self) -> UnquantizedTensor:
        return self

    def permute_part(self, n_part: int, n_head: int, n_head_kv: int) -> UnquantizedTensor:
        r = self.ndarray.shape[0] // 3
        return UnquantizedTensor(permute(self.ndarray[r * n_part : r * n_part + r, ...], n_head, n_head_kv))

    def part(self, n_part: int) -> UnquantizedTensor:
        r = self.ndarray.shape[0] // 3
        return UnquantizedTensor(self.ndarray[r * n_part : r * n_part + r, ...])

    def permute(self, n_head: int, n_head_kv: int) -> UnquantizedTensor:
        return UnquantizedTensor(permute(self.ndarray, n_head, n_head_kv))


def load_unquantized(lazy_tensor: LazyTensor, expected_dtype: Any = None, convert: bool = False) -> NDArray:
    tensor = lazy_tensor.load()
    assert isinstance(tensor, UnquantizedTensor)

    # double-check:
    actual_shape = list(tensor.ndarray.shape)
    assert actual_shape == lazy_tensor.shape, (actual_shape, lazy_tensor.shape)
    if expected_dtype is not None and expected_dtype != tensor.ndarray.dtype:
        if convert:
            tensor.ndarray = tensor.ndarray.astype(expected_dtype)
        else:
            raise ValueError(f'expected this tensor to have dtype {expected_dtype}, got {tensor.ndarray.dtype}')

    return tensor.ndarray


GGMLCompatibleTensor = UnquantizedTensor


@dataclass
class LazyTensor:
    _load: Callable[[], Tensor]
    shape: list[int]
    data_type: DataType
    description: str

    def load(self) -> Tensor:
        ret = self._load()
        # Should be okay if it maps to the same numpy type?
        assert ret.data_type == self.data_type or (self.data_type.dtype == ret.data_type.dtype), \
                (self.data_type, ret.data_type, self.description)
        return ret

    def astype(self, data_type: DataType) -> LazyTensor:
        self.validate_conversion_to(data_type)

        def load() -> Tensor:
            return self.load().astype(data_type)
        return LazyTensor(load, self.shape, data_type, f'convert({data_type}) {self.description}')

    def validate_conversion_to(self, data_type: DataType) -> None:
        if data_type != self.data_type and data_type.name not in self.data_type.valid_conversions:
            raise ValueError(f'Cannot validate conversion from {self.data_type} to {data_type}.')


LazyModel: TypeAlias = 'dict[str, LazyTensor]'


@dataclass
class ModelPlus:
    model: LazyModel
    paths: list[Path]  # Where this was read from.
    format: Literal['ggml', 'torch', 'safetensors', 'none']
    vocab: Vocab | None  # For GGML models (which have vocab built in), the vocab.


def merge_sharded(models: list[LazyModel]) -> LazyModel:
    # Original LLaMA models have each file contain one part of each tensor.
    # Use a dict instead of a set to preserve order.
    names = {name: None for model in models for name in model}

    def convert(name: str) -> LazyTensor:
        lazy_tensors: list[LazyTensor] = [model[name] for model in models]
        if len(lazy_tensors) == 1:
            # only one file; don't go through this procedure since there might
            # be quantized tensors
            return lazy_tensors[0]
        if len(lazy_tensors[0].shape) == 1:
            # the tensor is just duplicated in every file
            return lazy_tensors[0]
        if name.startswith('tok_embeddings.') or \
           name.endswith('.attention.wo.weight') or \
           name.endswith('.feed_forward.w2.weight'):
            # split by columns
            axis = 1
        else:
            # split by rows
            axis = 0
        concatenated_shape = list(lazy_tensors[0].shape)
        concatenated_shape[axis] = sum(tensor.shape[axis] for tensor in lazy_tensors)

        def load() -> UnquantizedTensor:
            ndarrays = [load_unquantized(tensor) for tensor in lazy_tensors]
            concatenated: NDArray = np.concatenate(ndarrays, axis=axis)
            return UnquantizedTensor(concatenated)
        description = 'concatenated[[' + '] | ['.join(lt.description for lt in lazy_tensors) + ']]'
        return LazyTensor(load, concatenated_shape, lazy_tensors[0].data_type, description)
    return {name: convert(name) for name in names}


def merge_multifile_models(models_plus: list[ModelPlus]) -> ModelPlus:
    formats = set(mp.format for mp in models_plus)
    assert len(formats) == 1, ""different formats?""
    format = formats.pop()
    paths = [path for mp in models_plus for path in mp.paths]
    # Use the first non-None vocab, if any.
    try:
        vocab = next(mp.vocab for mp in models_plus if mp.vocab is not None)
    except StopIteration:
        vocab = None

    if any(""model.embed_tokens.weight"" in mp.model for mp in models_plus):
        # Transformers models put different tensors in different files, but
        # don't split indivdual tensors between files.
        model: LazyModel = {}
        for mp in models_plus:
            model.update(mp.model)
    else:
        model = merge_sharded([mp.model for mp in models_plus])

    return ModelPlus(model, paths, format, vocab)


def permute_lazy(lazy_tensor: LazyTensor, n_head: int, n_head_kv: int) -> LazyTensor:
    def load() -> Tensor:
        return lazy_tensor.load().permute(n_head, n_head_kv)
    return LazyTensor(load, lazy_tensor.shape, lazy_tensor.data_type, f'permute({n_head}, {n_head_kv}) ' + lazy_tensor.description)

def permute_part_lazy(lazy_tensor: LazyTensor, n_part: int, n_head: int, n_head_kv: int) -> LazyTensor:
    def load() -> Tensor:
        return lazy_tensor.load().permute_part(n_part, n_head, n_head_kv)
    s = lazy_tensor.shape.copy()
    s[0] = s[0] // 3
    return LazyTensor(load, s, lazy_tensor.data_type, f'permute({n_head}, {n_head_kv}) ' + lazy_tensor.description)

def part_lazy(lazy_tensor: LazyTensor, n_part: int) -> LazyTensor:
    def load() -> Tensor:
        return lazy_tensor.load().part(n_part)
    s = lazy_tensor.shape.copy()
    s[0] = s[0] // 3
    return LazyTensor(load, s, lazy_tensor.data_type, 'part ' + lazy_tensor.description)


# Functionality that simulates `torch.load` but where individual tensors are
# only loaded into memory on demand, not all at once.
# PyTorch can't do this natively as of time of writing:
# - https://github.com/pytorch/pytorch/issues/64327
# This allows us to de-shard without multiplying RAM usage, and also
# conveniently drops the PyTorch dependency (though we still need numpy).


@dataclass
class LazyStorageKind:
    data_type: DataType


@dataclass
class LazyStorage:
    load: Callable[[int, int], NDArray]
    kind: LazyStorageKind
    description: str


class LazyUnpickler(pickle.Unpickler):
    def __init__(self, fp: IO[bytes], data_base_path: str, zip_file: zipfile.ZipFile):
        super().__init__(fp)
        self.data_base_path = data_base_path
        self.zip_file = zip_file

    def persistent_load(self, pid: Any) -> Any:
        assert pid[0] == 'storage'
        assert isinstance(pid[1], LazyStorageKind)
        data_type = pid[1].data_type
        filename_stem = pid[2]
        filename = f'{self.data_base_path}/{filename_stem}'
        info = self.zip_file.getinfo(filename)

        def load(offset: int, elm_count: int) -> NDArray:
            dtype = data_type.dtype
            fp = self.zip_file.open(info)
            fp.seek(offset * dtype.itemsize)
            size = elm_count * dtype.itemsize
            data = fp.read(size)
            assert len(data) == size
            return np.frombuffer(data, dtype)
        description = f'storage data_type={data_type} path-in-zip={filename} path={self.zip_file.filename}'
        return LazyStorage(load=load, kind=pid[1], description=description)

    @staticmethod
    def lazy_rebuild_tensor_v2(storage: Any, storage_offset: Any, size: Any, stride: Any,
                               requires_grad: Any, backward_hooks: Any, metadata: Any = None) -> LazyTensor:
        assert isinstance(storage, LazyStorage)

        def load() -> UnquantizedTensor:
            elm_count = stride[0] * size[0]
            return UnquantizedTensor(storage.load(storage_offset, elm_count).reshape(size))
        description = f'pickled storage_offset={storage_offset} in {storage.description}'
        return LazyTensor(load, list(size), storage.kind.data_type, description)

    @staticmethod
    def rebuild_from_type_v2(func, new_type, args, state):
        return func(*args)

    CLASSES: dict[tuple[str, str], Any] = {
        # getattr used here as a workaround for mypy not being smart enough to detrmine
        # the staticmethods have a __func__ attribute.
        ('torch._tensor', '_rebuild_from_type_v2'): getattr(rebuild_from_type_v2, '__func__'),
        ('torch._utils', '_rebuild_tensor_v2'): getattr(lazy_rebuild_tensor_v2, '__func__'),
        ('torch', 'BFloat16Storage'): LazyStorageKind(DT_BF16),
        ('torch', 'HalfStorage'): LazyStorageKind(DT_F16),
        ('torch', 'FloatStorage'): LazyStorageKind(DT_F32),
        ('torch', 'IntStorage'): LazyStorageKind(DT_I32),
        ('torch', 'Tensor'): LazyTensor,
    }

    def find_class(self, module: str, name: str) -> Any:
        if not module.startswith('torch'):
            return super().find_class(module, name)
        return self.CLASSES[(module, name)]


def lazy_load_torch_file(outer_fp: IO[bytes], path: Path) -> ModelPlus:
    zf = zipfile.ZipFile(outer_fp)
    pickle_paths = [name for name in zf.namelist() if name.endswith('.pkl')]
    assert len(pickle_paths) == 1, pickle_paths
    pickle_fp = zf.open(pickle_paths[0], 'r')
    unpickler = LazyUnpickler(pickle_fp,
                              data_base_path=pickle_paths[0][:-4],
                              zip_file=zf)
    model = unpickler.load()
    as_dict = dict(model.items())
    return ModelPlus(model=as_dict, paths=[path], format='torch', vocab=None)


def lazy_load_safetensors_file(fp: IO[bytes], path: Path) -> ModelPlus:
    header_size, = struct.unpack('<Q', fp.read(8))
    header: dict[str, dict[str, Any]] = json.loads(fp.read(header_size))
    # Use mmap for the actual data to avoid race conditions with the file offset.
    mapped = memoryview(mmap.mmap(fp.fileno(), 0, access=mmap.ACCESS_READ))
    byte_buf = mapped[8 + header_size:]

    def convert(info: dict[str, Any]) -> LazyTensor:
        data_type = SAFETENSORS_DATA_TYPES[info['dtype']]
        numpy_dtype = data_type.dtype
        shape: list[int] = info['shape']
        begin, end = info['data_offsets']
        assert 0 <= begin <= end <= len(byte_buf)
        assert end - begin == math.prod(shape) * numpy_dtype.itemsize
        buf = byte_buf[begin:end]

        def load() -> UnquantizedTensor:
            return UnquantizedTensor(np.frombuffer(buf, dtype=numpy_dtype).reshape(shape))
        description = f'safetensors begin={begin} end={end} type={data_type} path={path}'
        return LazyTensor(load, shape, data_type, description)
    model = {name: convert(info) for (name, info) in header.items() if name != '__metadata__'}
    return ModelPlus(model=model, paths=[path], format='safetensors', vocab=None)


def must_read(fp: IO[bytes], length: int) -> bytes:
    ret = fp.read(length)
    if len(ret) < length:
        raise Exception(""unexpectedly reached end of file"")
    return ret


@functools.lru_cache(maxsize=None)
def lazy_load_file(path: Path) -> ModelPlus:
    fp = open(path, 'rb')
    first8 = fp.read(8)
    fp.seek(0)
    if first8[:2] == b'PK':
        # A zip file, i.e. PyTorch format
        return lazy_load_torch_file(fp, path)
    elif struct.unpack('<Q', first8)[0] < 16 * 1024 * 1024:
        # Probably safetensors
        return lazy_load_safetensors_file(fp, path)
    else:
        raise ValueError(f""unknown format: {path}"")


In = TypeVar('In')
Out = TypeVar('Out')

def bounded_parallel_map(func: Callable[[In], Out], iterable: Iterable[In], concurrency: int, max_workers: int | None = None, use_processpool_executor: bool = False) -> Iterable[Out]:
    '''Parallel map, but with backpressure.  If the caller doesn't call `next`
    fast enough, this will stop calling `func` at some point rather than
    letting results pile up in memory.  Specifically, there is a max of one
    output value buffered per thread.'''
    if concurrency < 2:
        yield from map(func, iterable)
        # Not reached.
    iterable = iter(iterable)
    executor_class: type[ThreadPoolExecutor] | type[ProcessPoolExecutor]
    if use_processpool_executor:
        executor_class = ProcessPoolExecutor
    else:
        executor_class = ThreadPoolExecutor
    with executor_class(max_workers = max_workers) as executor:
        futures: list[concurrent.futures.Future[Out]] = []
        done = False
        for _ in range(concurrency):
            try:
                futures.append(executor.submit(func, next(iterable)))
            except StopIteration:
                done = True
                break

        while futures:
            result = futures.pop(0).result()
            while not done and len(futures) < concurrency:
                try:
                    futures.append(executor.submit(func, next(iterable)))
                except StopIteration:
                    done = True
                    break
            yield result

def check_vocab_size(params: Params, vocab: Vocab, pad_vocab: bool = False) -> None:
    if params.n_vocab != vocab.vocab_size:
        assert isinstance(vocab, BpeVocab) or isinstance(vocab, SentencePieceVocab)
        if params.n_vocab == vocab.vocab_size_base:
            print(""Ignoring added_tokens.json since model matches vocab size without it."")
            vocab.added_tokens_list = []
            vocab.vocab_size = vocab.vocab_size_base
            return
        if pad_vocab and params.n_vocab > vocab.vocab_size:
            pad_count = params.n_vocab - vocab.vocab_size
            print(f'Padding vocab with {pad_count} token(s) - <dummy00001> through <dummy{pad_count:05}>')
            for i in range(1, (params.n_vocab - vocab.vocab_size) + 1):
                vocab.added_tokens_list.append(f'<dummy{i:05}>')
            vocab.vocab_size = params.n_vocab
            return
        msg = f""Vocab size mismatch (model has {params.n_vocab}, but {vocab.fname_tokenizer}""
        if vocab.fname_added_tokens is not None:
            msg += f"" combined with {vocab.fname_added_tokens}""
        msg += f"" has {vocab.vocab_size}).""
        if vocab.vocab_size < params.n_vocab < vocab.vocab_size + 20 and vocab.fname_added_tokens is None:
            msg += f""  Most likely you are missing added_tokens.json (should be in {vocab.fname_tokenizer.parent}).""
        if vocab.vocab_size < params.n_vocab:
            msg += "" Possibly try using the --padvocab option.""
        raise Exception(msg)


class OutputFile:
    def __init__(self, fname_out: Path, endianess:gguf.GGUFEndian=gguf.GGUFEndian.LITTLE) -> None:
        self.gguf = gguf.GGUFWriter(fname_out, gguf.MODEL_ARCH_NAMES[ARCH], endianess=endianess)

    def add_meta_arch(self, params: Params) -> None:
        name = ""LLaMA""

        # TODO: better logic to determine model name
        if params.n_ctx == 4096:
            name = ""LLaMA v2""
        elif params.path_model is not None:
            name = str(params.path_model.parent).split('/')[-1]

        self.gguf.add_name                (name)
        self.gguf.add_context_length      (params.n_ctx)
        self.gguf.add_embedding_length    (params.n_embd)
        self.gguf.add_block_count         (params.n_layer)
        self.gguf.add_feed_forward_length (params.n_ff)
        self.gguf.add_rope_dimension_count(params.n_embd // params.n_head)
        self.gguf.add_head_count          (params.n_head)
        self.gguf.add_head_count_kv       (params.n_head_kv)
        self.gguf.add_layer_norm_rms_eps  (params.f_norm_eps)

        if params.f_rope_freq_base is not None:
            self.gguf.add_rope_freq_base(params.f_rope_freq_base)

        if params.rope_scaling_type:
            assert params.f_rope_scale is not None
            self.gguf.add_rope_scaling_type(params.rope_scaling_type)
            self.gguf.add_rope_scaling_factor(params.f_rope_scale)

        if params.n_orig_ctx is not None:
            self.gguf.add_rope_scaling_orig_ctx_len(params.n_orig_ctx)

        if params.rope_finetuned is not None:
            self.gguf.add_rope_scaling_finetuned(params.rope_finetuned)

        if params.ftype is not None:
            self.gguf.add_file_type(params.ftype)

    def add_meta_vocab(self, vocab: Vocab) -> None:
        tokens = []
        scores = []
        toktypes = []
        # NOTE: `all_tokens` returns the base vocabulary and added tokens
        for text, score, toktype in vocab.all_tokens():
            tokens.append(text)
            scores.append(score)
            toktypes.append(toktype)

        if isinstance(vocab, SentencePieceVocab):
            self.gguf.add_tokenizer_model(""llama"")
        elif isinstance(vocab, BpeVocab):
            self.gguf.add_tokenizer_model(""gpt2"")
        else:
            raise ValueError(f'Unknown vocab type: Not BpeVocab or SentencePieceVocab')
        self.gguf.add_token_list(tokens)
        self.gguf.add_token_scores(scores)
        self.gguf.add_token_types(toktypes)

    def add_meta_special_vocab(self, svocab: gguf.SpecialVocab) -> None:
        svocab.add_to_gguf(self.gguf)

    def add_tensor_info(self, name: str, tensor: LazyTensor) -> None:
        n_elements = int(np.prod(tensor.shape))
        raw_dtype = getattr(tensor.data_type, 'ggml_type', None)
        data_type = getattr(tensor.data_type, 'quantized_type', None) or tensor.data_type.dtype
        data_nbytes = tensor.data_type.elements_to_bytes(n_elements)
        self.gguf.add_tensor_info(name, tensor.shape, data_type, data_nbytes, raw_dtype = raw_dtype)

    def write_meta(self) -> None:
        self.gguf.write_header_to_file()
        self.gguf.write_kv_data_to_file()

    def write_tensor_info(self) -> None:
        self.gguf.write_ti_data_to_file()

    def close(self) -> None:
        self.gguf.close()

    @staticmethod
    def write_vocab_only(
        fname_out: Path, params: Params, vocab: Vocab, svocab: gguf.SpecialVocab,
        endianess: gguf.GGUFEndian = gguf.GGUFEndian.LITTLE,
        pad_vocab: bool            = False,
        ) -> None:
        check_vocab_size(params, vocab, pad_vocab = pad_vocab)

        of = OutputFile(fname_out, endianess=endianess)

        # meta data
        of.add_meta_arch(params)
        of.add_meta_vocab(vocab)
        of.add_meta_special_vocab(svocab)

        of.write_meta()

        of.close()

    @staticmethod
    def do_item(item: tuple[str, LazyTensor]) -> tuple[DataType, NDArray]:
        name, lazy_tensor = item
        tensor = lazy_tensor.load().to_ggml()
        return (lazy_tensor.data_type, tensor.ndarray)

    @staticmethod
    def maybe_do_quantize(item: tuple[DataType, NDArray]) -> NDArray:
        dt, arr = item
        if not isinstance(dt, QuantizedDataType):
            return arr
        return dt.quantize(arr)

    @staticmethod
    def write_all(
        fname_out  : Path, ftype: GGMLFileType, params: Params,
        model      : LazyModel, vocab: Vocab, svocab: gguf.SpecialVocab,
        concurrency: int             = DEFAULT_CONCURRENCY,
        endianess  : gguf.GGUFEndian = gguf.GGUFEndian.LITTLE,
        pad_vocab  : bool            = False,
        ) -> None:
        check_vocab_size(params, vocab, pad_vocab = pad_vocab)

        of = OutputFile(fname_out, endianess=endianess)

        # meta data
        of.add_meta_arch(params)
        of.add_meta_vocab(vocab)
        of.add_meta_special_vocab(svocab)

        # tensor info
        for name, lazy_tensor in model.items():
            of.add_tensor_info(name, lazy_tensor)

        of.write_meta()
        of.write_tensor_info()

        # tensor data
        ndarrays_inner = bounded_parallel_map(OutputFile.do_item, model.items(), concurrency = concurrency)
        if ftype == GGMLFileType.MostlyQ8_0:
            ndarrays = bounded_parallel_map(OutputFile.maybe_do_quantize, ndarrays_inner, concurrency = concurrency, max_workers = concurrency, use_processpool_executor = True)
        else:
            ndarrays = map(OutputFile.maybe_do_quantize, ndarrays_inner)

        start = time.time()
        for i, ((name, lazy_tensor), ndarray) in enumerate(zip(model.items(), ndarrays)):
            elapsed = time.time() - start
            size = ' x '.join(f""{dim:6d}"" for dim in lazy_tensor.shape)
            padi = len(str(len(model)))
            print(f""[{i+1:{padi}d}/{len(model)}] Writing tensor {name:38s} | size {size:16} | type {lazy_tensor.data_type.name:4} | T+{int(elapsed):4}"")
            of.gguf.write_tensor_data(ndarray)

        of.close()

def pick_output_type(model: LazyModel, output_type_str: str | None) -> GGMLFileType:
    wq_type = model[gguf.TENSOR_NAMES[gguf.MODEL_TENSOR.ATTN_Q].format(bid=0)+"".weight""].data_type

    if output_type_str == ""f32"" or (output_type_str is None and wq_type == DT_F32):
        return GGMLFileType.AllF32
    if output_type_str == ""f16"" or (output_type_str is None and wq_type in (DT_F16, DT_BF16)):
        return GGMLFileType.MostlyF16
    if output_type_str == ""q8_0"":
        return GGMLFileType.MostlyQ8_0

    name_to_type = {name: lazy_tensor.data_type for (name, lazy_tensor) in model.items()}

    raise Exception(f""Unexpected combination of types: {name_to_type}"")

def convert_to_output_type(model: LazyModel, output_type: GGMLFileType) -> LazyModel:
    return {name: tensor.astype(output_type.type_for_tensor(name, tensor))
            for (name, tensor) in model.items()}

global count_embed
count_embed = 0
def convert_model_names(model: LazyModel, params: Params) -> LazyModel:
    tmap = gguf.TensorNameMap(ARCH, params.n_layer)
    should_skip: set[gguf.MODEL_TENSOR] = set(gguf.MODEL_TENSOR_SKIP.get(ARCH, []))

    tmp = model

    # HF models permut or pack some of the tensors, so we need to undo that
    for i in itertools.count():
        if f""model.layers.{i}.self_attn.q_proj.weight"" in model:
            print(f""Permuting layer {i}"")
            tmp[f""model.layers.{i}.self_attn.q_proj.weight""] = permute_lazy(model[f""model.layers.{i}.self_attn.q_proj.weight""], params.n_head, params.n_head)
            tmp[f""model.layers.{i}.self_attn.k_proj.weight""] = permute_lazy(model[f""model.layers.{i}.self_attn.k_proj.weight""], params.n_head, params.n_head_kv)
           #tmp[f""model.layers.{i}.self_attn.v_proj.weight""] =              model[f""model.layers.{i}.self_attn.v_proj.weight""]
        elif f""model.layers.{i}.self_attn.W_pack.weight"" in model:
            print(f""Unpacking and permuting layer {i}"")
            tmp[f""model.layers.{i}.self_attn.q_proj.weight""] = permute_part_lazy(model[f""model.layers.{i}.self_attn.W_pack.weight""], 0, params.n_head, params.n_head)
            tmp[f""model.layers.{i}.self_attn.k_proj.weight""] = permute_part_lazy(model[f""model.layers.{i}.self_attn.W_pack.weight""], 1, params.n_head, params.n_head_kv)
            tmp[f""model.layers.{i}.self_attn.v_proj.weight""] = part_lazy        (model[f""model.layers.{i}.self_attn.W_pack.weight""], 2)
            del tmp[f""model.layers.{i}.self_attn.W_pack.weight""]
        else:
            break

    out: LazyModel = {}
    for name, lazy_tensor in model.items():
        tensor_type, name_new = tmap.get_type_and_name(name, try_suffixes = ("".weight"", "".bias"")) or (None, None)

        if name.startswith(""model.embed_layer_norm.""):
            # name_new = ""token_embd_norm."" + name.split('.')[-1]
            # name_new = ""token_embd."" + name.split('.')[-1]
            global count_embed
            if count_embed == 0:
                name_new = ""blk.32.attn_norm.weight""
                count_embed = 1
            elif count_embed == 1:
                name_new = ""blk.32.ffn_norm.weight""

        if name_new is None:
            raise Exception(f""Unexpected tensor name: {name}"")

        if tensor_type in should_skip:
            print(f""skipping tensor {name_new}"")
            continue

        try:
            print(f""{name:48s} -> {name_new:40s} | {lazy_tensor.data_type.name:6s} | {lazy_tensor.shape}"")
        except Exception as e:
            pass
        out[name_new] = lazy_tensor

    return out

def nth_multifile_path(path: Path, n: int) -> Path | None:
    '''Given any path belonging to a multi-file model (e.g. foo.bin.1), return
    the nth path in the model.
    '''
    # Support the following patterns:
    patterns: list[tuple[str, str]] = [
        # - x.00.pth, x.01.pth, etc.
        (r'\.[0-9]{2}\.pth$', f'.{n:02}.pth'),
        # - x-00001-of-00002.bin, x-00002-of-00002.bin, etc.
        (r'-[0-9]{5}-of-(.*)$', fr'-{n:05}-of-\1'),
        # x.bin, x.bin.1, etc.
        (r'(\.[0-9]+)?$', r'\1' if n == 0 else fr'\1.{n}')
    ]
    for regex, replacement in patterns:
        if re.search(regex, path.name):
            new_path = path.with_name(re.sub(regex, replacement, path.name))
            if new_path.exists():
                return new_path
    return None


def find_multifile_paths(path: Path) -> list[Path]:
    '''Given any path belonging to a multi-file model (e.g. foo.bin.1), return
    the whole list of paths in the model.
    '''
    ret: list[Path] = []
    for i in itertools.count():
        nth_path = nth_multifile_path(path, i)
        if nth_path is None:
            break
        ret.append(nth_path)
    if not ret:
        # No matches.  This should only happen if the file was named, e.g.,
        # foo.0, and there was no file named foo.  Oh well, try to process it
        # as a single file.
        return [path]
    return ret


def load_some_model(path: Path) -> ModelPlus:
    '''Load a model of any supported format.'''
    # Be extra-friendly and accept either a file or a directory:
    if path.is_dir():
        # Check if it's a set of safetensors files first
        files = list(path.glob(""model-00001-of-*.safetensors""))
        if not files:
            # Try the PyTorch patterns too, with lower priority
            globs = [""consolidated.00.pth"", ""pytorch_model-00001-of-*.bin"", ""*.pt"", ""pytorch_model.bin""]
            files = [file for glob in globs for file in path.glob(glob)]
        if not files:
            raise Exception(f""Can't find model in directory {path}"")
        if len(files) > 1:
            raise Exception(f""Found multiple models in {path}, not sure which to pick: {files}"")
        path = files[0]

    paths = find_multifile_paths(path)
    models_plus: list[ModelPlus] = []
    for path in paths:
        print(f""Loading model file {path}"")
        models_plus.append(lazy_load_file(path))

    model_plus = merge_multifile_models(models_plus)
    return model_plus


def load_vocab(path: Path, vocabtype: str | None) -> Vocab:
    # Be extra-friendly and accept either a file or a directory.  Also, if it's
    # a directory, it might be the model directory, and tokenizer.model might
    # be in the parent of that.
    if path.is_dir():
        vocab_file = ""tokenizer.model""
        if vocabtype == 'bpe':
            vocab_file = ""vocab.json""
        path2 = path / vocab_file
        # Use `.parent` instead of /.. to handle the symlink case better.
        path3 = path.parent / vocab_file
        if path2.exists():
            path = path2
        elif path3.exists():
            path = path3
        else:
            raise FileNotFoundError(
                f""Could not find {vocab_file} in {path} or its parent; ""
                ""if it's in another directory, pass the directory as --vocab-dir"")

    print(f""Loading vocab file '{path}', type '{vocabtype}'"")

    added_tokens_path = path.parent / ""added_tokens.json""
    if vocabtype == ""bpe"":
        return BpeVocab(path, added_tokens_path if added_tokens_path.exists() else None)
    elif vocabtype == ""spm"":
        return SentencePieceVocab(path, added_tokens_path if added_tokens_path.exists() else None)
    else:
        raise ValueError(f""Unsupported vocabulary type {vocabtype}"")


def default_outfile(model_paths: list[Path], file_type: GGMLFileType) -> Path:
    namestr = {
        GGMLFileType.AllF32:    ""f32"",
        GGMLFileType.MostlyF16: ""f16"",
        GGMLFileType.MostlyQ8_0:""q8_0"",
    }[file_type]
    ret = model_paths[0].parent / f""ggml-model-{namestr}.gguf""
    if ret in model_paths:
        sys.stderr.write(
            f""Error: Default output path ({ret}) would overwrite the input. ""
            ""Please explicitly specify a path using --outfile.\n"")
        sys.exit(1)
    return ret


def do_dump_model(model_plus: ModelPlus) -> None:
    print(f""model_plus.paths = {model_plus.paths!r}"")
    print(f""model_plus.format = {model_plus.format!r}"")
    print(f""model_plus.vocab = {model_plus.vocab!r}"")
    for name, lazy_tensor in model_plus.model.items():
        print(f""{name}: shape={lazy_tensor.shape} type={lazy_tensor.data_type}; {lazy_tensor.description}"")


def main(args_in: list[str] | None = None) -> None:
    parser = argparse.ArgumentParser(description=""Convert a LLaMa model to a GGML compatible file"")
    parser.add_argument(""--dump"",        action=""store_true"",    help=""don't convert, just show what's in the model"")
    parser.add_argument(""--dump-single"", action=""store_true"",    help=""don't convert, just show what's in a single model file"")
    parser.add_argument(""--vocab-only"",  action=""store_true"",    help=""extract only the vocab"")
    parser.add_argument(""--outtype"",     choices=[""f32"", ""f16"", ""q8_0""], help=""output format - note: q8_0 may be very slow (default: f16 or f32 based on input)"")
    parser.add_argument(""--vocab-dir"",   type=Path,              help=""directory containing tokenizer.model, if separate from model file"")
    parser.add_argument(""--outfile"",     type=Path,              help=""path to write to; default: based on input"")
    parser.add_argument(""model"",         type=Path,              help=""directory containing model file, or model file itself (*.pth, *.pt, *.bin)"")
    parser.add_argument(""--vocabtype"",   choices=[""spm"", ""bpe""], help=""vocab format (default: spm)"", default=""spm"")
    parser.add_argument(""--ctx"",         type=int,               help=""model training context (default: based on input)"")
    parser.add_argument(""--concurrency"", type=int,               help=f""concurrency used for conversion (default: {DEFAULT_CONCURRENCY})"", default = DEFAULT_CONCURRENCY)
    parser.add_argument(""--bigendian"",   action=""store_true"",    help=""model is executed on big endian machine"")
    parser.add_argument(""--padvocab"",    action=""store_true"",    help=""add pad tokens when model vocab expects more than tokenizer metadata provides"")

    args = parser.parse_args(args_in)
    if args.dump_single:
        model_plus = lazy_load_file(args.model)
        do_dump_model(model_plus)
        return

    if not args.vocab_only:
        model_plus = load_some_model(args.model)
    else:
        model_plus = ModelPlus(model = {}, paths = [args.model / 'dummy'], format = 'none', vocab = None)

    if args.dump:
        do_dump_model(model_plus)
        return
    endianess = gguf.GGUFEndian.LITTLE
    if args.bigendian:
        endianess = gguf.GGUFEndian.BIG

    params = Params.load(model_plus)
    if params.n_ctx == -1:
        if args.ctx is None:
            raise Exception(""The model doesn't have a context size, and you didn't specify one with --ctx\n""
                            ""Please specify one with --ctx:\n""
                            "" - LLaMA v1: --ctx 2048\n""
                            "" - LLaMA v2: --ctx 4096\n"")
        params.n_ctx = args.ctx

    if args.outtype:
        params.ftype = {
            ""f32"": GGMLFileType.AllF32,
            ""f16"": GGMLFileType.MostlyF16,
            ""q8_0"": GGMLFileType.MostlyQ8_0,
        }[args.outtype]

    print(f""params = {params}"")

    vocab: Vocab
    if args.vocab_only:
        if not args.outfile:
            raise ValueError(""need --outfile if using --vocab-only"")
        # FIXME: Try to respect vocab_dir somehow?
        vocab = load_vocab(args.vocab_dir or args.model, args.vocabtype)
        special_vocab = gguf.SpecialVocab(model_plus.paths[0].parent,
            load_merges = args.vocabtype == 'bpe',
            n_vocab = vocab.vocab_size)
        outfile = args.outfile
        OutputFile.write_vocab_only(outfile, params, vocab, special_vocab,
            endianess = endianess, pad_vocab = args.padvocab)
        print(f""Wrote {outfile}"")
        return

    if model_plus.vocab is not None and args.vocab_dir is None:
        vocab = model_plus.vocab
    else:
        vocab_dir = args.vocab_dir if args.vocab_dir else model_plus.paths[0].parent
        vocab = load_vocab(vocab_dir, args.vocabtype)
    # FIXME: Try to respect vocab_dir somehow?
    special_vocab = gguf.SpecialVocab(model_plus.paths[0].parent,
        load_merges = args.vocabtype == 'bpe',
        n_vocab = vocab.vocab_size)

    model   = model_plus.model
    model   = convert_model_names(model, params)
    ftype   = pick_output_type(model, args.outtype)
    model   = convert_to_output_type(model, ftype)
    outfile = args.outfile or default_outfile(model_plus.paths, ftype)

    params.ftype = ftype
    print(f""Writing {outfile}, format {ftype}"")

    OutputFile.write_all(outfile, ftype, params, model, vocab, special_vocab,
        concurrency = args.concurrency, endianess = endianess, pad_vocab = args.padvocab)
    print(f""Wrote {outfile}"")


if __name__ == '__main__':
    main()"
7g7qdumG,Untitled,grishindn,Java,Monday 20th of November 2023 09:21:21 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Circus {
    String showName;
    String city;
    String premiereDate;
    String period;
    double ticketPrice;
    String author;
    String genre;
    int numberOfActors;

    // Конструктор класса
    public Circus(String showName, String city, String premiereDate, String period,
                  double ticketPrice, String author, String genre, int numberOfActors) {
        this.showName = showName;
        this.city = city;
        this.premiereDate = premiereDate;
        this.period = period;
        this.ticketPrice = ticketPrice;
        this.author = author;
        this.genre = genre;
        this.numberOfActors = numberOfActors;
    }

    // Геттеры и сеттеры
}

class AcrobaticShow extends Circus {
    String acrobaticsType;
    int numberOfActors;
    String equipment;

    // Конструктор класса
    public AcrobaticShow(String showName, String city, String premiereDate, String period,
                         double ticketPrice, String author, String genre, int numberOfActors,
                         String acrobaticsType, int numberOfAcrobats, String equipment) {
        super(showName, city, premiereDate, period, ticketPrice, author, genre, numberOfAcrobats);
        this.acrobaticsType = acrobaticsType;
        this.numberOfActors = numberOfAcrobats;
        this.equipment = equipment;
    }

    // Геттеры и сеттеры
}

class AnimalTraining extends Circus {
    String trainingType;
    int numberOfAnimals;
    int numberOfActors;

    // Конструктор класса
    public AnimalTraining(String showName, String city, String premiereDate, String period,
                          double ticketPrice, String author, String genre, int numberOfActors,
                          String trainingType, int numberOfAnimals) {
        super(showName, city, premiereDate, period, ticketPrice, author, genre, numberOfActors);
        this.trainingType = trainingType;
        this.numberOfAnimals = numberOfAnimals;
    }

    // Геттеры и сеттеры
}

class MagicShow extends Circus {
    String magicType;
    int numberOfActors;
    String equipment;

    // Конструктор класса
    public MagicShow(String showName, String city, String premiereDate, String period,
                     double ticketPrice, String author, String genre, int numberOfActors,
                     String magicType, String equipment) {
        super(showName, city, premiereDate, period, ticketPrice, author, genre, numberOfActors);
        this.magicType = magicType;
        this.numberOfActors = numberOfActors;
        this.equipment = equipment;
    }

    // Геттеры и сеттеры
}

class ShowsList {
    List<Circus> showsList = new ArrayList<>();

    // Метод для добавления представления
    public void addShow(Circus show) {
        showsList.add(show);
    }

    // Метод для печати списка представлений
    public void printShowsList() {
        System.out.println(""Список представлений:"");
        for (Circus show : showsList) {
            System.out.println(""Название: "" + show.showName);
            System.out.println(""Город: "" + show.city);
            System.out.println(""Дата премьеры: "" + show.premiereDate);
            System.out.println(""Период проведения: "" + show.period);
            System.out.println(""Цена билета: "" + show.ticketPrice);
            System.out.println(""Автор: "" + show.author);
            System.out.println(""Жанр: "" + show.genre);
            System.out.println(""Количество актеров: "" + show.numberOfActors);

            if (show instanceof AcrobaticShow) {
                AcrobaticShow acrobaticShow = (AcrobaticShow) show;
                System.out.println(""Тип акробатики: "" + acrobaticShow.acrobaticsType);
                System.out.println(""Количество актеров (акробаты): "" + acrobaticShow.numberOfActors);
                System.out.println(""Инвентарь: "" + acrobaticShow.equipment);
            } else if (show instanceof AnimalTraining) {
                AnimalTraining animalTraining = (AnimalTraining) show;
                System.out.println(""Вид дрессировки: "" + animalTraining.trainingType);
                System.out.println(""Количество животных: "" + animalTraining.numberOfAnimals);
            } else if (show instanceof MagicShow) {
                MagicShow magicShow = (MagicShow) show;
                System.out.println(""Вид фокусов: "" + magicShow.magicType);
                System.out.println(""Количество актеров (фокусники): "" + magicShow.numberOfActors);
                System.out.println(""Инвентарь: "" + magicShow.equipment);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        AcrobaticShow acrobaticShow = new AcrobaticShow(""ЦиркУдивлений"", ""Город1"", ""01.01.2023"", ""Неделя"", 100.0, ""Иванов"", ""Акробатика"", 10, ""Парная силовая"", 5, ""Трапеция"");
        AnimalTraining animalTraining = new AnimalTraining(""ЦиркРадуга"", ""Город2"", ""05.02.2023"", ""Две недели"", 80.0, ""Петров"", ""Дрессировка"", 8, ""Мелкие животные"", 15);
        MagicShow magicShow = new MagicShow(""ЦиркМагии"", ""Город3"", ""10.03.2023"", ""Месяц"", 120.0, ""Сидоров"", ""Иллюзии"", 6, ""Иллюзия"", ""Шляпа, палочка"");

        // Создаем объект класса ShowsList
        ShowsList showsList = new ShowsList();

        // Добавляем представления в список
        showsList.addShow(acrobaticShow);
        showsList.addShow(animalTraining);
        showsList.addShow(magicShow);

        // Печатаем список представлений
        showsList.printShowsList();
    }
}
"
ft4aW0af,Untitled,grishindn,Java,Monday 20th of November 2023 09:18:47 AM CDT,"import java.util.ArrayList;
import java.util.List;

class OnlineStore {
    String storeName;
    String productName;
    String countryOfManufacture;
    String paymentMethod;
    double purchaseAmount;
    String saleDate;
    String buyerFullName;

    // Конструктор класса
    public OnlineStore(String storeName, String productName, String countryOfManufacture,
                       String paymentMethod, double purchaseAmount, String saleDate, String buyerFullName) {
        this.storeName = storeName;
        this.productName = productName;
        this.countryOfManufacture = countryOfManufacture;
        this.paymentMethod = paymentMethod;
        this.purchaseAmount = purchaseAmount;
        this.saleDate = saleDate;
        this.buyerFullName = buyerFullName;
    }

    // Геттеры и сеттеры
}

class LivingRoomFurniture extends OnlineStore {
    String furnitureType;
    String manufacturer;

    // Конструктор класса
    public LivingRoomFurniture(String storeName, String productName, String countryOfManufacture,
                               String paymentMethod, double purchaseAmount, String saleDate,
                               String buyerFullName, String furnitureType, String manufacturer) {
        super(storeName, productName, countryOfManufacture, paymentMethod, purchaseAmount, saleDate, buyerFullName);
        this.furnitureType = furnitureType;
        this.manufacturer = manufacturer;
    }

    // Геттеры и сеттеры
}

class KitchenFurniture extends OnlineStore {
    double length;
    double height;
    double width;
    String material;

    // Конструктор класса
    public KitchenFurniture(String storeName, String productName, String countryOfManufacture,
                            String paymentMethod, double purchaseAmount, String saleDate,
                            String buyerFullName, double length, double height, double width, String material) {
        super(storeName, productName, countryOfManufacture, paymentMethod, purchaseAmount, saleDate, buyerFullName);
        this.length = length;
        this.height = height;
        this.width = width;
        this.material = material;
    }

    // Геттеры и сеттеры
}

class BathroomFurniture extends OnlineStore {
    // Конструктор класса
    public BathroomFurniture(String storeName, String productName, String countryOfManufacture,
                             String paymentMethod, double purchaseAmount, String saleDate,
                             String buyerFullName) {
        super(storeName, productName, countryOfManufacture, paymentMethod, purchaseAmount, saleDate, buyerFullName);
    }

    // Геттеры и сеттеры
}

class ProductsList {
    List<OnlineStore> productsList = new ArrayList<>();

    // Метод для добавления товара
    public void addProduct(OnlineStore product) {
        productsList.add(product);
    }

    // Метод для печати списка товаров
    public void printProductsList() {
        System.out.println(""Список товаров:"");
        for (OnlineStore product : productsList) {
            System.out.println(""Название магазина: "" + product.storeName);
            System.out.println(""Название товара: "" + product.productName);
            System.out.println(""Страна производитель: "" + product.countryOfManufacture);
            System.out.println(""Вид оплаты: "" + product.paymentMethod);
            System.out.println(""Сумма покупки: "" + product.purchaseAmount);
            System.out.println(""Дата продажи: "" + product.saleDate);
            System.out.println(""ФИО покупателя: "" + product.buyerFullName);

            if (product instanceof LivingRoomFurniture) {
                LivingRoomFurniture livingRoomFurniture = (LivingRoomFurniture) product;
                System.out.println(""Тип мебели: "" + livingRoomFurniture.furnitureType);
                System.out.println(""Производитель: "" + livingRoomFurniture.manufacturer);
            } else if (product instanceof KitchenFurniture) {
                KitchenFurniture kitchenFurniture = (KitchenFurniture) product;
                System.out.println(""Длина: "" + kitchenFurniture.length);
                System.out.println(""Высота: "" + kitchenFurniture.height);
                System.out.println(""Ширина: "" + kitchenFurniture.width);
                System.out.println(""Материал: "" + kitchenFurniture.material);
            } else if (product instanceof BathroomFurniture) {
                // Дополнительных параметров для ванной мебели не добавлено, но можно добавить по аналогии
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        LivingRoomFurniture livingRoomFurniture = new LivingRoomFurniture(""МебельМаг"", ""Диван"", ""Страна1"", ""Карта"", 500.0, ""01.01.2023"", ""Иванов Иван Иванович"", ""Диван"", ""Производитель1"");
        KitchenFurniture kitchenFurniture = new KitchenFurniture(""МебельМаг"", ""Стол"", ""Страна2"", ""Наличные"", 300.0, ""05.02.2023"", ""Петров Петр Петрович"", 1.5, 0.8, 1.0, ""Дерево"");
        BathroomFurniture bathroomFurniture = new BathroomFurniture(""МебельМаг"", ""Шкаф"", ""Страна3"", ""Карта"", 200.0, ""10.03.2023"", ""Сидоров Сидор Сидорович"");

        // Создаем объект класса ProductsList
        ProductsList productsList = new ProductsList();

        // Добавляем товары в список
        productsList.addProduct(livingRoomFurniture);
        productsList.addProduct(kitchenFurniture);
        productsList.addProduct(bathroomFurniture);

        // Печатаем список товаров
        productsList.printProductsList();
    }
}
"
QxZGiQWS,JQuery - Get Json from URL,PuriDevelopers,jQuery,Monday 20th of November 2023 09:18:15 AM CDT,"$.getJSON(url, function(data) {
    console.log(data)
});"
QnWKB3fv,Untitled,wheresTheAnyKey,Bash,Monday 20th of November 2023 09:07:24 AM CDT,5107-4578-0576-9075 test
4dFzBe44,Untitled,grishindn,Java,Monday 20th of November 2023 09:06:20 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Student {
    int studentId;
    String lastName;
    String firstName;
    String group;
    String department;
    String subject;
    int grade;
    String teacherLastName;

    // Конструктор класса
    public Student(int studentId, String lastName, String firstName, String group, String department,
                   String subject, int grade, String teacherLastName) {
        this.studentId = studentId;
        this.lastName = lastName;
        this.firstName = firstName;
        this.group = group;
        this.department = department;
        this.subject = subject;
        this.grade = grade;
        this.teacherLastName = teacherLastName;
    }

    // Геттеры и сеттеры
}

class FullTimeStudent extends Student {
    double egeScore;
    double averageAttestationScore;

    // Конструктор класса
    public FullTimeStudent(int studentId, String lastName, String firstName, String group, String department,
                           String subject, int grade, String teacherLastName, double egeScore, double averageAttestationScore) {
        super(studentId, lastName, firstName, group, department, subject, grade, teacherLastName);
        this.egeScore = egeScore;
        this.averageAttestationScore = averageAttestationScore;
    }

    // Геттеры и сеттеры
}

class CorrespondenceStudent extends Student {
    String workplace;
    String position;
    double tuitionFee;

    // Конструктор класса
    public CorrespondenceStudent(int studentId, String lastName, String firstName, String group, String department,
                                 String subject, int grade, String teacherLastName, String workplace, String position, double tuitionFee) {
        super(studentId, lastName, firstName, group, department, subject, grade, teacherLastName);
        this.workplace = workplace;
        this.position = position;
        this.tuitionFee = tuitionFee;
    }

    // Геттеры и сеттеры
}

class TargetedTrainingStudent extends Student {
    String enterpriseName;
    double tuitionFee;

    // Конструктор класса
    public TargetedTrainingStudent(int studentId, String lastName, String firstName, String group, String department,
                                   String subject, int grade, String teacherLastName, String enterpriseName, double tuitionFee) {
        super(studentId, lastName, firstName, group, department, subject, grade, teacherLastName);
        this.enterpriseName = enterpriseName;
        this.tuitionFee = tuitionFee;
    }

    // Геттеры и сеттеры
}

class UniversityRecord {
    List<Student> studentsList = new ArrayList<>();

    // Метод для добавления нового студента
    public void addStudent(Student student) {
        studentsList.add(student);
    }

    // Метод для печати списка студентов
    public void printStudentsList() {
        System.out.println(""Список студентов:"");
        for (Student student : studentsList) {
            System.out.println(""Номер зачетной книжки: "" + student.studentId);
            System.out.println(""Фамилия: "" + student.lastName);
            System.out.println(""Имя: "" + student.firstName);
            System.out.println(""Группа: "" + student.group);
            System.out.println(""Кафедра: "" + student.department);
            System.out.println(""Дисциплина: "" + student.subject);
            System.out.println(""Оценка: "" + student.grade);
            System.out.println(""Фамилия преподавателя: "" + student.teacherLastName);

            if (student instanceof FullTimeStudent) {
                FullTimeStudent fullTimeStudent = (FullTimeStudent) student;
                System.out.println(""Баллы по ЕГЭ: "" + fullTimeStudent.egeScore);
                System.out.println(""Средний балл аттестата: "" + fullTimeStudent.averageAttestationScore);
            } else if (student instanceof CorrespondenceStudent) {
                CorrespondenceStudent correspondenceStudent = (CorrespondenceStudent) student;
                System.out.println(""Место работы: "" + correspondenceStudent.workplace);
                System.out.println(""Должность: "" + correspondenceStudent.position);
                System.out.println(""Сумма обучения: "" + correspondenceStudent.tuitionFee);
            } else if (student instanceof TargetedTrainingStudent) {
                TargetedTrainingStudent targetedTrainingStudent = (TargetedTrainingStudent) student;
                System.out.println(""Название целевого предприятия: "" + targetedTrainingStudent.enterpriseName);
                System.out.println(""Сумма обучения: "" + targetedTrainingStudent.tuitionFee);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        FullTimeStudent fullTimeStudent = new FullTimeStudent(1, ""Иванов"", ""Иван"", ""Группа-1"", ""Кафедра-1"", ""Математика"", 4, ""Преподаватель-1"", 90.5, 85.0);
        CorrespondenceStudent correspondenceStudent = new CorrespondenceStudent(2, ""Петров"", ""Петр"", ""Группа-2"", ""Кафедра-2"", ""Физика"", 5, ""Преподаватель-2"", ""Компания-1"", ""Инженер"", 1500.0);
        TargetedTrainingStudent targetedTrainingStudent = new TargetedTrainingStudent(3, ""Сидоров"", ""Сидор"", ""Группа-3"", ""Кафедра-3"", ""Химия"", 4, ""Преподаватель-3"", ""Предприятие-2"", 1200.0);

        // Создаем объект класса UniversityRecord
        UniversityRecord universityRecord = new UniversityRecord();

        // Добавляем студентов в список
        universityRecord.addStudent(fullTimeStudent);
        universityRecord.addStudent(correspondenceStudent);
        universityRecord.addStudent(targetedTrainingStudent);

        // Печатаем список студентов
        universityRecord.printStudentsList();
    }
}
"
DBvfNGuj,Untitled,grishindn,Java,Monday 20th of November 2023 08:59:32 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Event {
    String date;
    String time;

    // Конструктор класса
    public Event(String date, String time) {
        this.date = date;
        this.time = time;
    }

    // Геттеры и сеттеры
}

class Birthday extends Event {
    String celebrant;
    String celebrationPlace;
    int age;

    // Конструктор класса
    public Birthday(String date, String time, String celebrant, String celebrationPlace, int age) {
        super(date, time);
        this.celebrant = celebrant;
        this.celebrationPlace = celebrationPlace;
        this.age = age;
    }

    // Геттеры и сеттеры
}

class Meeting extends Event {
    String person;
    String meetingPlace;

    // Конструктор класса
    public Meeting(String date, String time, String person, String meetingPlace) {
        super(date, time);
        this.person = person;
        this.meetingPlace = meetingPlace;
    }

    // Геттеры и сеттеры
}

class OtherEvent extends Event {
    String description;

    // Конструктор класса
    public OtherEvent(String date, String time, String description) {
        super(date, time);
        this.description = description;
    }

    // Геттеры и сеттеры
}

class Notebook {
    List<Event> eventsList = new ArrayList<>();

    // Метод для добавления события
    public void addEvent(Event event) {
        eventsList.add(event);
    }

    // Метод для печати списка событий
    public void printEventsList() {
        System.out.println(""Список событий:"");
        for (Event event : eventsList) {
            System.out.println(""Дата: "" + event.date);
            System.out.println(""Время: "" + event.time);

            if (event instanceof Birthday) {
                Birthday birthday = (Birthday) event;
                System.out.println(""Именинник: "" + birthday.celebrant);
                System.out.println(""Место проведения праздника: "" + birthday.celebrationPlace);
                System.out.println(""Возраст: "" + birthday.age);
            } else if (event instanceof Meeting) {
                Meeting meeting = (Meeting) event;
                System.out.println(""Человек с которым назначена встреча: "" + meeting.person);
                System.out.println(""Место встречи: "" + meeting.meetingPlace);
            } else if (event instanceof OtherEvent) {
                OtherEvent otherEvent = (OtherEvent) event;
                System.out.println(""Описание: "" + otherEvent.description);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        Birthday birthdayEvent = new Birthday(""01.01.2000"", ""12:00"", ""Иван"", ""Дом"", 30);
        Meeting meetingEvent = new Meeting(""02.01.2000"", ""15:00"", ""Петр"", ""Кафе"");
        OtherEvent otherEvent = new OtherEvent(""03.01.2000"", ""18:00"", ""Описание важного события"");

        // Создаем объект класса Notebook
        Notebook notebook = new Notebook();

        // Добавляем события в список
        notebook.addEvent(birthdayEvent);
        notebook.addEvent(meetingEvent);
        notebook.addEvent(otherEvent);

        // Печатаем список событий
        notebook.printEventsList();
    }
}
"
vHriGGXm,Untitled,grishindn,Java,Monday 20th of November 2023 08:56:01 AM CDT,"import java.util.ArrayList;
import java.util.List;

class MilitaryPersonnel {
    String lastName;
    String platoon;
    String rank;
    String birthDate;
    String enlistmentDate;
    String unit;

    // Конструктор класса
    public MilitaryPersonnel(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit) {
        this.lastName = lastName;
        this.platoon = platoon;
        this.rank = rank;
        this.birthDate = birthDate;
        this.enlistmentDate = enlistmentDate;
        this.unit = unit;
    }

    // Геттеры и сеттеры
}

class MilitaryManagement extends MilitaryPersonnel {
    String districtName;
    String position;
    int yearsOfService;
    double bonusAmount;

    // Конструктор класса
    public MilitaryManagement(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit,
                              String districtName, String position, int yearsOfService, double bonusAmount) {
        super(lastName, platoon, rank, birthDate, enlistmentDate, unit);
        this.districtName = districtName;
        this.position = position;
        this.yearsOfService = yearsOfService;
        this.bonusAmount = bonusAmount;
    }

    // Геттеры и сеттеры
}

class MilitaryContractService extends MilitaryPersonnel {
    String contractPeriod;
    String contractDate;
    String protocolNumber;
    double salaryAmount;

    // Конструктор класса
    public MilitaryContractService(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit,
                                   String contractPeriod, String contractDate, String protocolNumber, double salaryAmount) {
        super(lastName, platoon, rank, birthDate, enlistmentDate, unit);
        this.contractPeriod = contractPeriod;
        this.contractDate = contractDate;
        this.protocolNumber = protocolNumber;
        this.salaryAmount = salaryAmount;
    }

    // Геттеры и сеттеры
}

class DecoratedMilitary extends MilitaryPersonnel {
    String awardName;
    double bonus;
    double bonusAmount;

    // Конструктор класса
    public DecoratedMilitary(String lastName, String platoon, String rank, String birthDate, String enlistmentDate, String unit,
                             String awardName, double bonus, double bonusAmount) {
        super(lastName, platoon, rank, birthDate, enlistmentDate, unit);
        this.awardName = awardName;
        this.bonus = bonus;
        this.bonusAmount = bonusAmount;
    }

    // Геттеры и сеттеры
}

class MilitaryRegistry {
    List<MilitaryPersonnel> personnelList = new ArrayList<>();

    // Метод для добавления нового военного
    public void addPersonnel(MilitaryPersonnel personnel) {
        personnelList.add(personnel);
    }

    // Метод для печати списка военных
    public void printPersonnelList() {
        System.out.println(""Военный состав:"");
        for (MilitaryPersonnel personnel : personnelList) {
            System.out.println(""Фамилия: "" + personnel.lastName);
            System.out.println(""Рота: "" + personnel.platoon);
            System.out.println(""Звание: "" + personnel.rank);
            System.out.println(""Дата рождения: "" + personnel.birthDate);
            System.out.println(""Дата поступления на службу: "" + personnel.enlistmentDate);
            System.out.println(""Часть: "" + personnel.unit);

            if (personnel instanceof MilitaryManagement) {
                MilitaryManagement management = (MilitaryManagement) personnel;
                System.out.println(""Название округа: "" + management.districtName);
                System.out.println(""Должность: "" + management.position);
                System.out.println(""Выслуга лет: "" + management.yearsOfService);
                System.out.println(""Сумма надбавки: "" + management.bonusAmount);
            } else if (personnel instanceof MilitaryContractService) {
                MilitaryContractService contractService = (MilitaryContractService) personnel;
                System.out.println(""Период договора: "" + contractService.contractPeriod);
                System.out.println(""Дата договора: "" + contractService.contractDate);
                System.out.println(""Номер протокола: "" + contractService.protocolNumber);
                System.out.println(""Сумма зарплаты: "" + contractService.salaryAmount);
            } else if (personnel instanceof DecoratedMilitary) {
                DecoratedMilitary decoratedMilitary = (DecoratedMilitary) personnel;
                System.out.println(""Название награды: "" + decoratedMilitary.awardName);
                System.out.println(""Премия: "" + decoratedMilitary.bonus);
                System.out.println(""Сумма надбавки: "" + decoratedMilitary.bonusAmount);
            }

            System.out.println(""---------------------------"");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Создаем объекты классов
        MilitaryManagement militaryManagement = new MilitaryManagement(""Иванов"", ""1-я"", ""Капитан"", ""01.01.1980"", ""01.01.2000"", ""101-я"",
                ""Западный"", ""Командир"", 20, 500.0);

        MilitaryContractService contractService = new MilitaryContractService(""Петров"", ""2-я"", ""Майор"", ""01.02.1985"", ""01.01.2010"", ""202-я"",
                ""5 лет"", ""01.01.2010"", ""12345"", 700.0);

        DecoratedMilitary decoratedMilitary = new DecoratedMilitary(""Сидоров"", ""3-я"", ""Прапорщик"", ""15.03.1990"", ""01.02.2015"", ""303-я"",
                ""Медаль за отвагу"", 100.0, 200.0);

        // Создаем объект класса MilitaryRegistry
        MilitaryRegistry militaryRegistry = new MilitaryRegistry();

        // Добавляем военных в список
        militaryRegistry.addPersonnel(militaryManagement);
        militaryRegistry.addPersonnel(contractService);
        militaryRegistry.addPersonnel(decoratedMilitary);

        // Печатаем список военных
        militaryRegistry.printPersonnelList();
    }
}
"
8NWGSCbN,sched with coroutines and timezone aware datetime,DeaD_EyE,Python,Monday 20th of November 2023 08:48:40 AM CDT,"import time
import asyncio

from datetime import datetime as DateTime
from datetime import timedelta as TimeDelta
from datetime import timezone as TimeZone
from zoneinfo import ZoneInfo
from sched import scheduler

UTC = TimeZone.utc


def timefunc():
    return DateTime.now(ZoneInfo(""Europe/Berlin""))


def delayfunc(delay):
    if isinstance(delay, TimeDelta):
        delay = delay.total_seconds()
    time.sleep(delay)


def wrap_sync(func, *args1, **kwargs):
    async def run(*args, **kwargs):
        return func(*args, **kwargs)

    def wrapped(*args2):
        asyncio.create_task(run(*args1, *args2, **kwargs))

    return wrapped


async def main():
    task_runner = scheduler(timefunc, delayfunc)
    for delay in range(5, 31, 5):
        abs_time = DateTime.now(ZoneInfo(""Europe/Berlin"")) + TimeDelta(seconds=delay)
        task_runner.enterabs(abs_time, 0, wrap_sync(print, delay, abs_time))

    while task_runner.queue:
        task_runner.run(False)
        await asyncio.sleep(0)


if __name__ == ""__main__"":
    asyncio.run(main())
"
