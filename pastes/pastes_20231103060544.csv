id,title,username,language,date,content
YXHKHKLu,Reusable ant table component,tamkin,JavaScript,Friday 3rd of November 2023 01:02:52 AM CDT,"import { Table } from ""antd"";
import _ from ""lodash"";
import React, { useState } from ""react"";
import { useEffect } from ""react"";
import { antFilterData } from ""../utility/AntFIlterData"";
import { dateFormatter } from ""../utility/dateFormatter"";

export const AntPageSize = 100;
const AntTable = ({
  data,
  columnsData,
  setColumnsData,
  removePagination = false,
  onRowClick,
  rowClassName,
  rowKey,
  setPage,
  setPaginationSize,
  handleTableChange,
  pages,
  pagination,
  extraPageSizeOptions,
  showSizeChanger,
  tableContainerClass,
}) => {
  const [filteredInfo, setFilteredInfo] = useState({});
  const [filterList, setFIlterList] = useState([]);

  useEffect(() => {
    const filterList = Array.isArray(data) ? [...data] : [];
    setFIlterList(filterList);
  }, [data]);
  let columns = columnsData.map((item) => {
    return {
      ...item,
      sorter: item?.sorter
        ? item?.isNumber
          ? (a, b) => a?.[item?.dataIndex] - b?.[item?.dataIndex]
          : item?.isDate
          ? (a, b) => {
              return (
                new Date(dateFormatter(a?.[item?.dataIndex])) -
                new Date(dateFormatter(b?.[item?.dataIndex]))
              );
            }
          : (a, b) =>
              a?.[item?.dataIndex]?.length - b?.[item?.dataIndex]?.length
        : """",
      filters: item?.filter
        ? item?.isDate
          ? _.uniqWith(
              antFilterData(filterList)((i) =>
                dateFormatter(i?.[item?.dataIndex])
              ),
              _.isEqual
            )
          : _.uniqWith(
              antFilterData(filterList)((i) => i?.[item?.dataIndex]),
              _.isEqual
            )
        : """",
      filteredValue: filteredInfo?.[item?.dataIndex] || null,
      onFilter: (value, record) =>
        item?.isDate
          ? dateFormatter(record?.[item?.dataIndex])?.startsWith(value)
          : record?.[item?.dataIndex]?.startsWith(value),
      filterSearch: true,
    };
  });

  const handleChange = (pagination, filters, sorter, newRowDto) => {
    setFilteredInfo(filters);
    setColumnsData?.(newRowDto?.currentDataSource);
    setFIlterList?.(newRowDto?.currentDataSource);
    handleTableChange?.({ pagination, filters, sorter, newRowDto });
  };
  return (
    <div className={tableContainerClass || """"}>
      <Table
        size=""small""
        columns={columns}
        dataSource={data}
        onChange={handleChange}
        pagination={
          !removePagination
            ? {
                ...(pagination
                  ? {
                      ...pagination,
                      showSizeChanger: showSizeChanger || true,
                      totalBoundaryShowSizeChanger: 25,
                    }
                  : {
                      onChange(current, pageSize) {
                        setPage?.(current);
                        setPaginationSize?.(pageSize);
                      },
                      defaultPageSize: pages ? pages : AntPageSize,
                      showSizeChanger: showSizeChanger || true,
                    }),
                pageSizeOptions: [
                  ""5"",
                  ""10"",
                  ""15"",
                  ""25"",
                  ""100"",
                  ...(extraPageSizeOptions?.length > 0
                    ? extraPageSizeOptions
                    : []),
                ],
              }
            : false
        }
        onRow={(dataRow, index) => {
          return {
            onClick: (e) => {
              e.stopPropagation();
              onRowClick?.(dataRow, index);
            },
          };
        }}
        rowKey={rowKey}
        rowClassName={rowClassName || """"}
      />
    </div>
  );
};

export default AntTable;
"
akrZcFbV,BTC Wallet Credentials have been reset,castlclass_20,GetText,Friday 3rd of November 2023 01:01:51 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
ektodermasv:w45N4k on 212.224.93.130
You can connect via SSH .
Regards"
uPZdqRpY,kit_sdl2_kmixerAsync.c as of 2023-11-02,Kitomas,C,Friday 3rd of November 2023 12:58:23 AM CDT,"#include ""../include/kit_sdl2/kit_kmixer.h""
#include ""../_private/include/_kit_privmacro.h""
#include ""../_private/include/_kit_kmixerAllPrivate.h""




void _kit_kmixerAsyncRemoveCallback(void* _userdata){
  if(_userdata != NULL){
    _kit_kmixerAsyncUserdata* userdata = _userdata;

    //destroy all of the track mutexes
    _kit_kmixerAsyncTrack* tracks = userdata->tracks;
    Uint32              numTracks = userdata->numTracks;
    for(Uint32 i=0; i<numTracks; ++i){
      if(tracks[i].lock != NULL){
        SDL_DestroyMutex(tracks[i].lock);
        tracks[i].lock = NULL;
      }
    }

    //destroy main userdata mutex
    if(userdata->lock != NULL){
      SDL_DestroyMutex(userdata->lock);
      userdata->lock = NULL;
    }

    SDL_free(userdata);
  }
}



void _kit_kmixerAsyncTrackCallback(void* userdata, void* _stream, int size, SDL_bool hasInput){
  _kit_kmixerAsyncTrack* track = userdata;
  kit_acodecPCM*           pcm = track->pcm;

  SDL_LockMutex(track->lock);

  kit_coreMemset(_stream,0,size);
  //if pcm is NULL, the clip has finished playing, and will be deactivated by the main voice
  if(pcm == NULL) goto _exit_early;
  kit_kmixerVoiceSpec* vspec = track->vspec;

  //lower volume to 0 within 10ms if speed reaches 0
  #define speed0DeltaVolMS 10.0f
  const float speed0DeltaVol = -( (1000.0f/speed0DeltaVolMS) / vspec->freq);


  if(track->timeStamp){
    //loops will count down to 0, whereupon the clip will finish (-1 for endless loop)
    track->loops = pcm->loopCount;

    //calculate position based on difference between device and clip timestamps
    Uint64  trackTimeStamp = track->timeStamp;
    Uint64 deviceTimeStamp = track->device->_timeStampEnd;

    //device->_timeStampEnd is used instead of Start, so the clip's time stamp
     //can be compared to the last time the device callback exited
    double difference = (double)(trackTimeStamp-deviceTimeStamp)/1000;
    difference *= vspec->freq; //convert seconds to samples
    track->position = -(difference*track->speed); //starts playing when position reaches 0

    track->timeStamp = 0; //to ensure that this only occurs once per clip queued
  }


  float        pan = track->pan;
  double  position = track->position;
  float      speed = track->speed;
  Uint16     loops = track->loops;
  Uint16  stopping = track->stopping;
  Uint64 loopStart = pcm->loopStart;
  Uint64   loopEnd = pcm->loopEnd-1;
  //Uint64 src_len = pcm->numSamples; (unnecessary, as loopEnd is used instead)
  Uint16   dst_len = size / (sizeof(float)<<vspec->stereo);

  //make sure volume is clamped before applying it to the first sample,
   //since volume is only clamped after deltaVol is applied otherwise
  track->volume.l = CLAMP(track->volume.l, 0.0f,1.0f);
  track->volume.r = CLAMP(track->volume.r, 0.0f,1.0f);


  if(vspec->stereo){
    kit_acodecPCM_F32S* dst = _stream,  *src = pcm->f32s;

    if(track->linear){ //linear resampling
      for(Uint32 i=0; i<dst_len; ++i) _stereo_iteration(_stereo_linear)
    } else { //nearest-neighbor resampling
      for(Uint32 i=0; i<dst_len; ++i) _stereo_iteration(_stereo_nearest)
    }

  } else { //mono
    float* dst = _stream,  *src = pcm->f32;

    if(track->linear){ //linear resampling
      for(Uint32 i=0; i<dst_len; ++i) _mono_iteration(_mono_linear)
    } else { //nearest-neighbor resampling
      for(Uint32 i=0; i<dst_len; ++i) _mono_iteration(_mono_nearest)
    }

  }


  //update some values
  //track->pcm      = pcm; (unnecessary)
  track->position = position;
  track->speed    = speed;
  track->loops    = loops;
  track->stopping = stopping;

  //if the track's stopOnMute condition is met, mark track as finished,
   //so it'll be deactivated until a new clip is queued
  if(!vspec->stereo) track->volume.r = track->volume.l;
  if(track->volume.l<=0 && track->volume.r<=0  && track->stopOnMute)
    track->stopping = SDL_TRUE;

  _exit_early:
  SDL_UnlockMutex(track->lock);
}



void _kit_kmixerAsyncVoiceCallback(void* _userdata, void* _stream, int size, SDL_bool hasInput){
  _kit_kmixerAsyncUserdata* userdata = _userdata;

  SDL_LockMutex(userdata->lock);
  if(!kit_kmixerAsyncGetActiveTracks(userdata->device, userdata->rawIndex)){
    kit_coreMemset(_stream,0,size);
    goto _exit_early;
  }

  float                  pan = userdata->pan;
  kit_kmixerVoiceSpec* vspec = &userdata->vspec;
  Uint16             dst_len = size / (sizeof(float)<<vspec->stereo);

  userdata->volume.l = CLAMP(userdata->volume.l, 0.0f,1.0f);
  userdata->volume.r = CLAMP(userdata->volume.r, 0.0f,1.0f);


  if(vspec->stereo){
    kit_acodecPCM_F32S* dst = _stream;
    for(Uint32 i=0; i<dst_len; ++i){
      kit_acodecPCM_F32S sample = _stereo_volume(dst[i], (void*)userdata);
      dst[i] = _apply_pan(_stereo_clamp(sample), pan);
      _stereo_deltaVol((void*)userdata);
    }

  } else { //mono
    float* dst = _stream;
    for(Uint32 i=0; i<dst_len; ++i){
      dst[i] = _mono_clamp(_mono_volume(dst[i], (void*)userdata));
      _mono_deltaVol((void*)userdata);
    }

  }


  SDL_bool* main_active_p = kit_kmixerVoiceGetActiveRef(userdata->device, userdata->rawIndex);
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  Uint32              numTracks = userdata->numTracks;

  //force all tracks to deactivate if main voice's stopOnMute condition is met
  if(!vspec->stereo) userdata->volume.r = userdata->volume.l;
  if(userdata->volume.l<=0 && userdata->volume.r<=0  &&  userdata->stopOnMute){
    for(Uint32 ti=0; ti<numTracks; ++ti){
      _kit_kmixerAsyncTrack* track = &tracks[ti];
      _deactivate_track_if(track->pcm!=NULL, track);
    }
    //setting active to false here directly should be safe,
     //since voices are always locked during their callback
    //*main_active_p = SDL_FALSE;

  //otherwise, just deactivate the tracks that have finished playing its queued clip
  } else {
    //Uint32 inactiveTracks = 0;
    for(Uint32 ti=0; ti<numTracks; ++ti){
      _kit_kmixerAsyncTrack* track = &tracks[ti];

      if(kit_kmixerVoiceExists(track->device, track->rawIndex)<1) continue;
      SDL_bool track_active = kit_kmixerVoiceGetActive(track->device, track->rawIndex);

      _deactivate_track_if(track->stopping, track);
      //if(!track_active) ++inactiveTracks;

    }

    //deactivate main voice if all of its tracks are inactive
    //if(inactiveTracks == numTracks) *main_active_p = SDL_FALSE;
  }

  _exit_early:
  SDL_UnlockMutex(userdata->lock);
}




Uint32 kit_kmixerAsyncAdd(kit_kmixerDevice* device,
                          SDL_bool linearInterpolation, SDL_bool stereo,
                          Uint32 outputVoiceID, Uint32 numTracks)
{
  Uint32 mainVoiceID = 0; //0 for error by default
  _DEVICE_VALIDITY_CHECK(0)
  _IF_SDLERR(numTracks==0,;,""!numTracks"")
  int outputExists = kit_kmixerVoiceExists(device, outputVoiceID);
  _IF_SDLERR(outputExists<0,;,""outputVoiceID out of bounds"")
  _IF_SDLERR(!outputExists,;,""output voice doesn't exist"")

  //create main voice
   //(userdata is contiguous with the track data)
  size_t userdataSize = sizeof(_kit_kmixerAsyncUserdata);
  userdataSize += sizeof(_kit_kmixerAsyncTrack)*numTracks;

  kit_kmixerVoiceSpec vspec = kit_kmixerVoiceGetSpec(device,0);
  _IF_GOTO_ERROR(vspec.format==0,;)

  vspec.remove   = _kit_kmixerAsyncRemoveCallback;
  vspec.callback = _kit_kmixerAsyncVoiceCallback;
  _IF_GOTO_ERROR(kit_coreRealloc(&vspec.userdata,0,userdataSize),;)
  vspec.stereo   = stereo&1; //stereo is the only non-pointer member that's different

  mainVoiceID = kit_kmixerVoiceAdd(device,&vspec,outputVoiceID);
  _IF_GOTO_ERROR(!mainVoiceID, SDL_free(vspec.userdata) )
  kit_kmixerVoiceSetActive(device, mainVoiceID, SDL_TRUE);


  //fill in userdata
  _kit_kmixerAsyncUserdata* userdata = vspec.userdata;
  userdata->type       = type_UDAT; //U[SER]DAT[A]
  userdata->volume.l   = 1.0f;
  userdata->volume.r   = 1.0f;
  userdata->stopOnMute = SDL_FALSE; //unlike track, main's stopOnMute is false by default
  userdata->rawIndex   = mainVoiceID;
  userdata->device     = device;
  userdata->vspec      = vspec;
  userdata->tracks     = (void*)userdata+sizeof(_kit_kmixerAsyncUserdata);
  userdata->numTracks  = numTracks;
  userdata->lock       = SDL_CreateMutex();
  _IF_GOTO_ERROR(userdata->lock==NULL, kit_kmixerVoiceRemove(device, mainVoiceID) )


  //create tracks
  vspec.remove   = NULL; //only the main voice should be doing the free()'ing
  vspec.callback = _kit_kmixerAsyncTrackCallback;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  for(Uint32 ti=0; ti<numTracks; ++ti){
    _kit_kmixerAsyncTrack* track = vspec.userdata = &tracks[ti];
    track->type       = type_TRCK; //TR[A]CK
    track->volume.l   = 1.0f;
    track->volume.r   = 1.0f;
    track->stopOnMute = SDL_TRUE;
    track->rawIndex   = kit_kmixerVoiceAdd(device,&vspec,mainVoiceID);
    track->device     = device;
    track->lock       = SDL_CreateMutex();
    track->vspec      = &userdata->vspec;
    track->linear     = linearInterpolation&1;
    if(!track->rawIndex || track->lock==NULL){
      kit_kmixerVoiceRemove(device, mainVoiceID); return 0;
    }
    kit_kmixerVoiceSetActive(device, track->rawIndex, SDL_TRUE);
  }


  _noerr_:
  _error_:
  return mainVoiceID;
}



Uint32 kit_kmixerAsyncPlayPVS(kit_kmixerDevice* device, Uint32 voiceID, kit_acodecPCM* pcm,
                              float pan, float volumeL, float volumeR, double speedMultiplier)
{
  Uint64 trackTimeStamp = SDL_GetTicks64();
  Uint32 trackNum = -1; //set to -1 for error by default
  SDL_bool udat_lock = SDL_FALSE,  trck_lock = SDL_FALSE;
  _kit_kmixerAsyncUserdata* userdata = NULL;
  _kit_kmixerAsyncTrack* track = NULL;

  _IF_SDLERR(pcm==NULL,;,""!pcm"")
  _IF_SDLERR(!NORMALIZED(pan),;,""pan must be -1.0f -> 1.0f"")
  _IF_SDLERR(volumeL<0,;,""volumeL < 0"")
  _IF_SDLERR(volumeR<0,;,""volumeR < 0"")
  _IF_SDLERR(speedMultiplier<=0,;,""speedMultiplier <= 0"")

  kit_kmixerVoiceSpec vspec = kit_kmixerVoiceGetSpec(device, voiceID);
  _IF_GOTO_ERROR(!vspec.format,;)
  userdata = vspec.userdata;
  _IF_SDLERR(userdata==NULL,;,""invalid async voice"")
  _IF_SDLERR(userdata->type!=type_UDAT,;,""invalid async voice"")

  _IF_SDLERR(pcm->magic!=KPCM_MAGIC,;,""invalid pcm struct"")
  _IF_SDLERR(pcm->format!=AUDIO_F32,;,""pcm->format != AUDIO_F32"")
  _IF_SDLERR(pcm->loopStart>=pcm->loopEnd,;,""pcm->loopStart >= pcm->loopEnd"")
  _IF_SDLERR(pcm->loopEnd>pcm->numSamples,;,""pcm->loopEnd > pcm->numSamples"")
  _IF_SDLERR(pcm->numSamples<2,;,""pcm->numSamples < 2"")
  _IF_SDLERR(pcm->sampleRate!=vspec.freq,;,""pcm->sampleRate != device freq"")
  _IF_SDLERR((pcm->channels-1)!=vspec.stereo,;,""pcm->channels is invalid"")


  //look for empty track to queue pcm clip with
kit_kmixerDeviceLock(device, SDL_TRUE);
  SDL_LockMutex(userdata->lock);  udat_lock = SDL_TRUE;
  Uint32              numTracks = userdata->numTracks;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;

  for(Uint32 i=0; i<numTracks; ++i){
    track = &tracks[i];
    SDL_LockMutex(track->lock);  trck_lock = SDL_TRUE;
    while(device->_timeStampStart > device->_timeStampEnd) SDL_Delay(1);
    if(!track->stopping && track->pcm==NULL){
      int exists = kit_kmixerVoiceExists(device, track->rawIndex);
      _IF_SDLERR(!exists,;,""track %u's voice doesn't exist"",i)
      trackNum = i; break;
    }

    SDL_UnlockMutex(track->lock);  trck_lock = SDL_FALSE;

  }
kit_kmixerDeviceLock(device, SDL_FALSE);
  SDL_UnlockMutex(userdata->lock);  udat_lock = SDL_FALSE;
  _IF_GOTO(trackNum==-1,_noerr_,;) //exit early if no free track was found


  //track = &tracks[trackNum]; (track was already set inside the loop)
  track->pan        = pan;
  track->volume.l   = volumeL;
  track->volume.r   = volumeR;
  track->delta.l    = 0.0f;
  track->delta.r    = 0.0f;
  track->stopOnMute = SDL_TRUE;

  track->pcm        = pcm;
  track->timeStamp  = trackTimeStamp;
  track->speed      = speedMultiplier;
  track->deltaS     = 0.0;


  //kit_kmixerVoiceSetActive(device, track->rawIndex, SDL_TRUE);
  //if(!kit_kmixerVoiceGetActive(device, voiceID)) kit_kmixerVoiceSetActive(device, voiceID, SDL_TRUE);
  _noerr_: if(trackNum == -1) trackNum = -2; //-2 for 'no available track found; no error'
  _error_:
  if(udat_lock) SDL_UnlockMutex(userdata->lock);
  if(trck_lock) SDL_UnlockMutex(track->lock);
  return trackNum;
}




//returns -1 (U64_MAX) pointer on error
#define UDAT_ERROR ((void*)U64_MAX) //(also used for GetTrack's error)
_kit_kmixerAsyncUserdata* _kit_kmixerAsyncGetUserdata(kit_kmixerDevice* device, Uint32 voiceID){
  kit_kmixerVoiceSpec vspec = kit_kmixerVoiceGetSpec(device, voiceID);
  _IF_GOTO_ERROR(!vspec.format,;)

  _kit_kmixerAsyncUserdata* userdata = vspec.userdata;
  _IF_SDLERR(userdata==NULL,;,""invalid async voice"")
  _IF_SDLERR(userdata->type!=type_UDAT,;,""invalid async voice"")

  /*!err*/ return userdata;
  _error_: return UDAT_ERROR; // = (void*)0xffffffffffffffff
}



_kit_kmixerAsyncTrack* _kit_kmixerAsyncGetTrack(kit_kmixerDevice* device,
                                                _kit_kmixerAsyncUserdata* userdata, Uint32 trackNum)
{
  _IF_SDLERR(trackNum>=userdata->numTracks,;,""trackNum out of bounds"")
  _kit_kmixerAsyncTrack* track = &userdata->tracks[trackNum];

  int exists = kit_kmixerVoiceExists(device, track->rawIndex);
  _IF_SDLERR(!exists,;,""track %u's voice nonexistent"",trackNum)

  /*!err*/ return track; //will not error even if no clip is queued (track->pcm = NULL)
  _error_: return UDAT_ERROR; // = (void*)0xffffffffffffffff
}




int kit_kmixerAsyncStopTrack(kit_kmixerDevice* device, Uint32 voiceID,
                             Uint32 trackNum)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)


  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  if(track->pcm == NULL) return 1; //already stopped; return a 1
  else track->pcm = NULL;


  int exists = kit_kmixerVoiceExists(device, track->rawIndex);
  _IF_SDLERR(!exists,;,""track %u's voice nonexistent"",trackNum)

  //_IF_GOTO_ERROR(kit_kmixerVoiceSetActive(device, track->rawIndex, SDL_FALSE),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerAsyncStopAllTracks(kit_kmixerDevice* device, Uint32 voiceID){
  int returnStatus = -1;
  SDL_bool locked = SDL_FALSE;
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)
  _IF_GOTO_ERROR(kit_kmixerVoiceLock(device, voiceID)<0,;)
  locked = SDL_TRUE;


  Uint32              numTracks = userdata->numTracks;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  SDL_bool tracksAlreadyStopped = SDL_TRUE; //set to false if any track was halted
  for(Uint32 i=0; i<numTracks; ++i){
    if(tracks[i].pcm != NULL) tracksAlreadyStopped = SDL_FALSE;
    tracks[i].pcm = NULL;

    Uint32 rawIndex = tracks[i].rawIndex;

    int exists = kit_kmixerVoiceExists(device, rawIndex);
    _IF_SDLERR(!exists,;,""track %u's voice nonexistent"",rawIndex)

    //_IF_GOTO_ERROR(kit_kmixerVoiceSetActive(device, rawIndex, SDL_FALSE),;)
  }


  returnStatus = tracksAlreadyStopped;

  _error_:
  if(locked && kit_kmixerVoiceUnlock(device, voiceID)<0) returnStatus = -1;
  return returnStatus;
}




Uint32 kit_kmixerAsyncGetActiveTracks(kit_kmixerDevice* device, Uint32 voiceID){
  Uint32 activeTracks = -1; //-1 for error by default
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)


  activeTracks = 0; //there are no errors past this, so setting to 0 is safe here
  Uint32              numTracks = userdata->numTracks;
  _kit_kmixerAsyncTrack* tracks = userdata->tracks;
  for(Uint32 i=0; i<numTracks; ++i){
    if(tracks[i].pcm != NULL) ++activeTracks;
  }


  _error_: return activeTracks;
}



Uint32 kit_kmixerAsyncGetNumTracks(kit_kmixerDevice* device, Uint32 voiceID){
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  if(userdata==UDAT_ERROR) return -1;
  else return userdata->numTracks;
}



int kit_kmixerAsyncGetTrackPlayState(kit_kmixerDevice* device, Uint32 voiceID,
                                     Uint32 trackNum)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  /*!err*/ return track->pcm != NULL;
  _error_: return -1;
}



double kit_kmixerAsyncGetTrackPosition(kit_kmixerDevice* device, Uint32 voiceID,
                                       Uint32 trackNum)
{
  double position = NAN; //NaN for error by default
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)


  Sint32 freq = userdata->vspec.freq; //sample rate
  position = track->position*freq; //position, in seconds


  _error_:
  return position;
}



int kit_kmixerAsyncSetTrackStopOnMute(kit_kmixerDevice* device, Uint32 voiceID,
                                      Uint32 trackNum, SDL_bool stopOnMute)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  track->stopOnMute = stopOnMute; //changing stopOnMute doesn't require a lock

  /*!err*/ return  0;
  _error_: return -1;
}




int kit_kmixerAsyncSetTrackDeltaS(kit_kmixerDevice* device, Uint32 voiceID,
                                  Uint32 trackNum, double deltaS)
{
  _kit_kmixerAsyncUserdata* userdata = _kit_kmixerAsyncGetUserdata(device,voiceID);
  _IF_GOTO_ERROR(userdata==UDAT_ERROR,;)

  _kit_kmixerAsyncTrack* track = _kit_kmixerAsyncGetTrack(device, userdata, trackNum);
  _IF_GOTO_ERROR(track==UDAT_ERROR,;)
  track->deltaS = deltaS; //changing deltaS doesn't require a lock

  /*!err*/ return  0;
  _error_: return -1;
}

"
jTQfEjXp,kit_sdl2_kmixerVoice as of 2023-11-02,Kitomas,C,Friday 3rd of November 2023 12:56:58 AM CDT,"#include ""../include/kit_sdl2/kit_kmixer.h""
#include ""../_private/include/_kit_privmacro.h""
#include ""../_private/include/_kit_kmixerAllPrivate.h""

/* example of simd stereo to mono without sse3's hadd
static inline void _sse1_s_to_m(float* dst, __m128 vector){
  __m128 shuffled = _mm_shuffle_ps(vector,vector, _MM_SHUFFLE(2,3,0,1));
  __m128 sum = _mm_add_ps(vector,shuffled);
  __m128 result = _mm_shuffle_ps(sum,sum, _MM_SHUFFLE(3,1,2,0));
  _mm_storel_pi((__m64*)dst,result);
}
*/


//for visual clarity during ProcChannels
 //(this could also just be an enum probably, but w/e)
#define _M_to_M (0) //  mono->mono
#define _M_to_S (1) //  mono->stereo
#define _S_to_M (2) //stereo->mono
#define _S_to_S (3) //stereo->stereo
/* i think i need to fix this
#define _MM256_SHUFFLE(c7,c6,c5,c4,c3,c2,c1,c0) \
  ((_MM_SHUFFLE(c7,c6,c5,c4)<<8)|_MM_SHUFFLE(c3,c2,c1,c0)) */



//converts u8, i16, and i32 samples to f32 samples
 //(will basically just copy input to output if input is also f32)
static inline void _kit_kmixerVoiceProcFromTypeFallback(void* _dataIn, float* dataOut,
                                                        Uint32 numSamples, SDL_AudioFormat typeIn)
{ //if nothing else works
  kit_acodecPCMSamples dataIn = { .data = _dataIn };
  float rawSample; //used for max(original_sample,-1) basically
  switch(typeIn){
  case AUDIO_U8 : for(Uint32 i=0; i<numSamples; ++i){ rawSample = (float)(dataIn.u_8[i]-0x80)*inv_i_8;
                                                      dataOut[i] = (rawSample>=-1.0f)?rawSample:-1.0f; } break;
  case AUDIO_S16: for(Uint32 i=0; i<numSamples; ++i){ rawSample = (float) dataIn.i16[i]      *inv_i16;
                                                      dataOut[i] = (rawSample>=-1.0f)?rawSample:-1.0f; } break;
  case AUDIO_S32: for(Uint32 i=0; i<numSamples; ++i){ rawSample = (float) dataIn.i32[i]      *inv_i32;
                                                      dataOut[i] = (rawSample>=-1.0f)?rawSample:-1.0f; } break;
  case AUDIO_F32: for(Uint32 i=0; i<numSamples; ++i){ dataOut[i] =        dataIn.f32[i];               } }
}
void _kit_kmixerVoiceProcFromType(void* dataIn, void* dataOut,
                                  Uint32 sampleFrames, SDL_AudioFormat typeIn, SDL_bool isStereo)
{
  Uint32 numSamples = sampleFrames<<isStereo;
  _kit_kmixerVoiceProcFromTypeFallback(dataIn,dataOut,numSamples,typeIn);
}




//converts f32 samples to u8, i16, and i32 samples
static inline void _kit_kmixerVoiceProcToTypeFallback(float* dataIn, void* _dataOut,
                                                      Uint32 numSamples, SDL_AudioFormat typeOut)
{ //if nothing else works
  kit_acodecPCMSamples dataOut = { .data = _dataOut };
  float rawSample, rawSampleB;
  switch(typeOut){
  case AUDIO_U8 : for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.u_8[i] = (rawSampleB<=1.0f)?rawSampleB*I_8_MAX+0x80:I_8_MAX; } break;
  case AUDIO_S16: for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.i16[i] = (rawSampleB<=1.0f)?rawSampleB*I16_MAX:I16_MAX; } break;
  case AUDIO_S32: for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.i32[i] = (rawSampleB<=1.0f)?rawSampleB*I32_MAX:I32_MAX; } break;
  case AUDIO_F32: for(Uint32 i=0; i<numSamples; ++i){ rawSample      = dataIn[i];
                                                      rawSampleB     = (rawSample>=-1.0f)?rawSample:-1.0f;
                                                      dataOut.f32[i] = (rawSampleB<=1.0f)?rawSampleB:1.0f; } }
}
void _kit_kmixerVoiceProcToType(void* dataIn, void* dataOut,
                                Uint32 sampleFrames, SDL_AudioFormat typeOut, SDL_bool isStereo)
{
  Uint32 numSamples = sampleFrames<<isStereo;
  _kit_kmixerVoiceProcToTypeFallback(dataIn,dataOut,numSamples,typeOut);
}




//assumes samples are f32
static inline void _kit_kmixerVoiceProcChannelsFallback(float* dataInM, float* dataOutM,
                                                        Uint32 sampleFrames, int channelInfo)
{ //if nothing else works
  kit_acodecPCM_F32S* dataInS  = (void*)dataInM;
  kit_acodecPCM_F32S* dataOutS = (void*)dataOutM;
  switch(channelInfo){
  case _M_to_S: for(Uint32 i=0; i<sampleFrames; ++i){ dataOutS[i].l=dataOutS[i].r = dataInM[i]; } break;
  case _S_to_M: for(Uint32 i=0; i<sampleFrames; ++i){ dataOutM[i] = (dataInS[i].l+dataInS[i].r)*0.5f; } break;
  case _S_to_S: sampleFrames<<=1; SDL_FALLTHROUGH; //multiply mono by 2 to make length of stereo
  case _M_to_M: for(Uint32 i=0; i<sampleFrames; ++i){ dataOutM[i] = dataInM[i]; }
  }
}
void _kit_kmixerVoiceProcChannels(void* dataIn, void* dataOut, Uint32 sampleFrames, int channelInfo){
  _kit_kmixerVoiceProcChannelsFallback(dataIn,dataOut, sampleFrames,channelInfo);
}




#define _CH_INFO(a,b) (((a)<<1)|(b))
//assumes input AND output samples are f32 (intermediate type is determined by the given voice)
int _kit_kmixerVoiceProc(void* data){ //(this is an SDL_ThreadFunction)
  _kit_kmixerVoice* voice = data;
  if(voice == NULL) return 1; //skip if voice is NULL
  if(voice->lock == NULL) return 2; //skip if voice was removed
  if(voice->output == U32_MAX) return 3; //skip if voice is voice 0
  SDL_LockMutex(voice->lock);


  void *ibuffer  = voice->bufferInput.data,  *obuffer = voice->bufferOutput.data;
  void *ubuffer  = voice->bufferUser.data,   *cbuffer = voice->bufferConvert.data;
  void *userdata = voice->spec.userdata,  *_stream = ubuffer;
   ///
  SDL_bool hasInput = voice->inputs!=NULL;
  SDL_bool ustereo  = voice->spec.stereo;
  SDL_bool ostereo  = voice->stereoOutput;
   ///
  SDL_AudioFormat uformat = voice->spec.format;
  Uint32           frames = voice->spec.samples;
  Uint32     ubuffer_size = voice->spec._size;


  //convert (if necessary) input type (format) from f32
  int userTypeIsF32 = uformat==AUDIO_F32;
  if(userTypeIsF32) _stream = ibuffer; //input and user are identical; just reroute
  else _kit_kmixerVoiceProcToType(ibuffer, ubuffer, frames,uformat,ustereo);


  //the actual user callback
  voice->spec.callback(userdata, _stream, ubuffer_size, hasInput);


  //convert (if necessary) to f32 and channels, sending result to output
  int sameChannels = ustereo==ostereo;
  if(sameChannels){ //convert type (or just copy contents if _stream is f32)
    _kit_kmixerVoiceProcFromType(_stream,obuffer, frames,uformat,ustereo);

  } else if(userTypeIsF32){ //convert channels
    _kit_kmixerVoiceProcChannels(_stream,obuffer, frames,_CH_INFO(ustereo,ostereo));

  } else { //convert type and channels
    _kit_kmixerVoiceProcFromType(_stream,cbuffer, frames,uformat,ustereo);
    _kit_kmixerVoiceProcChannels(cbuffer,obuffer, frames,_CH_INFO(ustereo,ostereo));

  }


  SDL_UnlockMutex(voice->lock);
  return 0;
}




//assumes all samples are f32
//if nothing else works
static inline void _kit_kmixerVoiceMixFallback(_kit_kmixerVoice* voiceO){
  kit_coreVector**  raw_p = &voiceO->device->_raw;
  _kit_kmixerVoice* raw   = (*raw_p)->data;

  Uint32*              inputs      = voiceO->inputs->data;
  Uint32               inputs_len  = voiceO->inputs->x;
  kit_acodecPCM_F32S*  samplesO    = voiceO->bufferInput.f32s;
  Uint32               samples_len = voiceO->spec.samples;

  size_t bufferSize = (samples_len*sizeof(float))<<voiceO->spec.stereo;
  kit_coreMemset(voiceO->bufferInput.data, 0, bufferSize);
  //so stereo volume can apply even to a mono stream
   //(assuming volR is set to volL)
  samples_len >>= !voiceO->spec.stereo;


  for(Uint32 v=0; v<inputs_len; ++v){
    _kit_kmixerVoice* voiceI = &raw[ inputs[v] ];
    if(voiceI->lock == NULL){ inputs[v] = 0; continue; }
    if(!voiceI->active) continue; //also skip if voice is inactive
    SDL_LockMutex(voiceI->lock);
    kit_acodecPCM_F32S* samplesI = voiceI->bufferOutput.f32s;

    float volL = CLAMP(voiceI->volL, 0.0f,1.0f);
    float volR = MIN(voiceI->volR, 1.0f);
    if(!voiceI->stereoOutput || volR<0) volR = volL;

    if(     volL==0.0f && volR==0.0f) continue; //volume is muted; skip
    else if(volL==1.0f && volR==1.0f) goto _normal_volume; //because sample*1=sample
    else if(volL>=0.0f){
      for(Uint32 i=0; i<samples_len; ++i){
        samplesO[i].l += samplesI[i].l*volL;
        samplesO[i].r += samplesI[i].r*volR;
      }

    } else { _normal_volume:
      for(Uint32 i=0; i<samples_len; ++i){
        samplesO[i].l += samplesI[i].l;
        samplesO[i].r += samplesI[i].r;
      }

    }

    SDL_UnlockMutex(voiceI->lock);
  }


  //hard clip output samples to between -1.0f and 1.0f
  for(Uint32 i=0; i<samples_len; ++i){
    float sampleL = samplesO[i].l;
    float sampleR = samplesO[i].r;
    samplesO[i].l = CLAMP(sampleL, -1.0f,1.0f);
    samplesO[i].r = CLAMP(sampleR, -1.0f,1.0f);
  }
}
//(this should only be called if the voice has inputs)
int _kit_kmixerVoiceMix(void* data){ //(this is an SDL_ThreadFunction)
  _kit_kmixerVoice* voiceO = data;
  if(voiceO == NULL) return 1; //skip if the voice is NULL
  if(voiceO->lock == NULL) return 2; //skip in case voice was removed

  SDL_LockMutex(voiceO->lock);
  //don't mix if voice has no inputs...
  if(voiceO->inputs == NULL){
    size_t bufferSize = (voiceO->spec.samples*sizeof(float)) << voiceO->spec.stereo;
    //...but still make sure the input buffer is zeroed out
    kit_coreMemset(voiceO->bufferInput.data, 0, bufferSize);
    SDL_UnlockMutex(voiceO->lock);
    return 3;
  }

  _kit_kmixerVoiceMixFallback(voiceO);

  SDL_UnlockMutex(voiceO->lock);
  return 0;
}




//used to check whether an element in the raw voice list is valid or not
SDL_bool _kit_kmixerVoiceRawUnitCallback(void* unit, Uint32 size){
  _kit_kmixerVoice* voice = unit;
  return voice->lock == NULL;
}



//same thing, but with an element in ord instead of raw
SDL_bool _kit_kmixerVoiceOrdUnitCallback(void* unit, Uint32 size){
  _kit_kmixerVoice** voice_p = unit;
  if(*voice_p == NULL) return SDL_TRUE;
  return (*voice_p)->lock == NULL;
}




//(assumes device is locked)
//should be called when voices are created, destroyed, or raw is altered in general
int _kit_kmixerVoiceRebuildOrd(kit_kmixerDevice* device){
  kit_coreVector* ord_new = NULL;
  kit_coreVector**  ord_p = &device->_ord;
  kit_coreVector**  raw_p = &device->_raw;

  _kit_kmixerVoice* raw = (*raw_p)->data;
  Uint32      numVoices = (*raw_p)->x;

  Uint32  hiStageLen =    0; //ord->x
  Uint32  hiStage    =    0; //ord->y
  Uint32* stageLens  = NULL; //temporary space for stage lengths


  //find highest chain stage (for ord's y axis)
  for(Uint32 v=0; v<numVoices; ++v){
    if(raw[v].lock == NULL) continue; //skip any removed voice
    if(hiStage < raw[v].chainStage) hiStage = raw[v].chainStage;
  }
  ++hiStage; //should now equal ord->y


  //find highest index of a chain stage (for ord's x axis)
  _IF_SDLERR(kit_coreRealloc(&stageLens,0,hiStage*sizeof(Uint32)),;,""!stageLens"")
  for(Uint32 v=0; v<numVoices; ++v){
    if(raw[v].lock == NULL) continue; //skip any removed voice
    Uint32 stageLen = ++stageLens[raw[v].chainStage];
    if(hiStageLen < stageLen) hiStageLen = stageLen;
  }
  SAFE_FREE(stageLens);
  if(!hiStageLen) hiStageLen = 1; //vectors can't have sizes of 0


  //create new ord vector with new dimensions
  ord_new = kit_coreVectorCreate(hiStageLen,hiStage,1, sizeof(_kit_kmixerVoice*),0);
  _IF_SDLERR(ord_new==NULL,;,""!ord_new"")
  kit_coreVectorDestroy(ord_p); //doink the old one
  *ord_p = ord_new;


  //fill ord with new references from raw
  for(Uint32 v=0; v<numVoices; ++v){
    if(raw[v].lock == NULL) continue; //skip any removed voice
    _kit_kmixerVoice* voiceRef = &raw[v];
    Uint32 chainStage = voiceRef->chainStage;
    _IF_GOTO_ERROR(kit_coreVectorInsert(ord_p, &voiceRef, chainStage,0,
                                        _kit_kmixerVoiceOrdUnitCallback)==U32_MAX,;)
  }


  /*!err*/ return  0;
  _error_: return -1;
}




//(assumes device is already locked)
//output voice is locked here
int _kit_kmixerVoiceRemoveInput(kit_kmixerDevice* device,
                                Uint32 outputID, Uint32 inputID)
{
  _kit_kmixerVoice* voiceO = &_VOICE_QUERY(outputID);
  Uint32* inputs     = voiceO->inputs->data;
  Uint32  inputs_len = voiceO->inputs->x;

  _IF_GOTO_ERROR(SDL_LockMutex(voiceO->lock),;)


  //remove input voice from output voice's input list
  for(Uint32 v=0; v<inputs_len; ++v){
    if(inputs[v] == inputID){
      inputs[v] = 0; break;
    }
  }


  //trim input list to make sure only active inputs are included
  _IF_GOTO_ERROR(kit_coreVectorTrim(&voiceO->inputs,'x',NULL),;)
  //destroy input list if all inputs have been removed
  if(!voiceO->inputs->lens[0]) kit_coreVectorDestroy(&voiceO->inputs);


  _IF_GOTO_ERROR(SDL_UnlockMutex(voiceO->lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



//(assumes device is already locked)
//input and output voices are locked here
 //(also, input voice's lock should be created BEFORE calling this)
int _kit_kmixerVoiceAddInput(kit_kmixerDevice* device,
                             Uint32 inputID, Uint32 outputID)
{
  //since everything relevant is locked currently, i can assign pointers
   //without the risk of the data moving somewhere else by a kit_coreVectorSet or something
  _kit_kmixerVoice* voiceI = &_VOICE_QUERY(inputID);
  _kit_kmixerVoice* voiceO = &_VOICE_QUERY(outputID);


  //set input voice accordingly
  _IF_GOTO_ERROR(SDL_LockMutex(voiceI->lock),;)

  voiceI->output       = voiceO->index; // = outputID basically
  voiceI->stereoOutput = voiceO->spec.stereo;
  //set chain processing stage one higher,
   //to ensure this voice is processed before the output
  voiceI->chainStage   = voiceO->chainStage+1;

  _IF_GOTO_ERROR(SDL_UnlockMutex(voiceI->lock),;)


  //create input list in output voice if it's NULL
  if(voiceO->inputs == NULL){
    voiceO->inputs = kit_coreVectorCreate(1,1,1, sizeof(Uint32),0);
    _IF_GOTO_ERROR(voiceO->inputs==NULL,;)
  }


  //add input to the output voice's input list
  _IF_GOTO_ERROR(SDL_LockMutex(voiceO->lock),;)

   //first, check to see if input is already in the list...
  Uint32* inputs     = voiceO->inputs->data;
  Uint32  inputs_len = voiceO->inputs->x;
  SDL_bool found = SDL_FALSE;
  for(Uint32 i=0; i<inputs_len; ++i){
    if(inputs[i] == inputID){
      found = SDL_TRUE; break;
    }
  }

   //...inserting only if the input was not found in the list
  if(!found) _IF_GOTO_ERROR(kit_coreVectorInsert(&voiceO->inputs, &inputID, 0,0, NULL)==U32_MAX,;)

  _IF_GOTO_ERROR(SDL_UnlockMutex(voiceO->lock),;)


  /*!err*/ return  0;
  _error_: return -1;
}




int kit_kmixerVoiceRemove(kit_kmixerDevice* device, Uint32 voiceID){
  _DEVICE_VALIDITY_CHECK(0)
  //only allow voice 0 to be removed when device->_closing is set
  _IF_SDLERR(!voiceID && !device->_closing,;,""cannot remove voice 0"")

  //if bit 31 is set, call is assumed to be the result of recursion
  SDL_bool rootCall = (!(voiceID&U32_MSb)) ? SDL_TRUE : SDL_FALSE;
  voiceID &= I32_MAX; //unset bit 31 now that rootCall is set


  kit_coreVector**   raw_p = &device->_raw;
  _IF_SDLERR(voiceID>=(*raw_p)->x,;,""voiceID out of bounds"")
  _IF_GOTO(_VOICE_QUERY(voiceID).lock==NULL,_noerr_,;) //return normally if voice already removed
  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)


  //loop through and remove any inputs the voice might have (recursive)
  if(_VOICE_QUERY(voiceID).inputs != NULL){
    //the voice's inputs vector shouldn't change, since the voice is locked,
     //so it should be safe to do pointer assignment here
    kit_coreVector* inputs = _VOICE_QUERY(voiceID).inputs;

    for(Uint32 i=0; i<inputs->x; ++i){
      Uint32 index = VECTOR_INDEX_C(Uint32, inputs, i);
      if(!index) continue; //an index of 0 indicates a voice that was already removed
      if(_VOICE_QUERY(index).lock != NULL) //(bit 31 is set to indicate recursion)
        _IF_GOTO_ERROR(kit_kmixerVoiceRemove(device,U32_MSb|index),;)
    }

    //(kit_coreVectorDestroy automatically sets pointer to NULL)
    _IF_GOTO_ERROR(kit_coreVectorDestroy(&_VOICE_QUERY(voiceID).inputs),;)
  }


  //free buffers
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferInput.data);
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferUser.data);
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferConvert.data);
  SAFE_FREE(_VOICE_QUERY(voiceID).bufferOutput.data);


  //call the user's 'userdata removal' callback
  if(_VOICE_QUERY(voiceID).spec.remove != NULL)
    _VOICE_QUERY(voiceID).spec.remove(_VOICE_QUERY(voiceID).spec.userdata);


  //destroy lock
  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)
  SDL_DestroyMutex(_VOICE_QUERY(voiceID).lock);
  _VOICE_QUERY(voiceID).lock       = NULL; //a mutex of NULL indicates a removed voice
  _VOICE_QUERY(voiceID).chainStage =    0; //(as to not confuse VoiceRebuildOrd)


  if(rootCall){ //if this call is not the result of recursion
    if(!device->_closing) kit_kmixerDeviceLock(device, SDL_TRUE);

    //trim raw and rebuild ord
    _IF_GOTO_ERROR(kit_coreVectorTrim(raw_p,'x',_kit_kmixerVoiceRawUnitCallback),;)
    _IF_GOTO_ERROR(_kit_kmixerVoiceRebuildOrd(device),;)

    //remove input from output's input list
    Uint32 outputID = VECTOR_INDEX_C(_kit_kmixerVoice, *raw_p, voiceID).output;

    if(outputID != U32_MAX){ //(only if output != -1, which should only be possible for voice 0)
      _IF_GOTO_ERROR(_kit_kmixerVoiceRemoveInput(device, outputID,voiceID),
                     kit_kmixerDeviceLock(device, SDL_FALSE))
    }

    if(!device->_closing) kit_kmixerDeviceLock(device, SDL_FALSE);
  }


  _noerr_: return  0;
  _error_: return -1;
}



Uint32 kit_kmixerVoiceAdd(kit_kmixerDevice* device, kit_kmixerVoiceSpec* vspec,
                          Uint32 outputVoiceID)
{
  Uint32 newIndex = 0; //0 for error by default
  _kit_kmixerVoice  voice  = { .lock = NULL }; //voice struct to be copied to raw
  _kit_kmixerVoice* voiceI = NULL; //reference to voice inside raw

  SDL_bool inRaw   = SDL_FALSE; //set to true if successfully inserted into raw
  SDL_bool success = SDL_FALSE;
  SDL_bool locked  = SDL_FALSE;
  _DEVICE_VALIDITY_CHECK(0)
  _IF_SDLERR(vspec==NULL,;,""!vspec"")

  _IF_SDLERR(vspec->callback==NULL,;,""!vspec->callback"")
  _IF_GOTO_ERROR(kit_kmixerDeviceLock(device, SDL_TRUE)<0,;)
  locked = SDL_TRUE;

  //get reference to output voice
  int exists = kit_kmixerVoiceExists(device, outputVoiceID);
  _IF_SDLERR(exists<0,;,""outputVoiceID out of bounds"")
  _IF_SDLERR(!exists,;,""output voice doesn't exist"")


  //fill in info for voice spec and the voice struct itself
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddFillSpec(device, vspec),;)
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddFillVoice(device, vspec, &voice, outputVoiceID),;)
  voice.device = device; //the only thing not filled in by FillVoice


  //add voice to raw
  newIndex = kit_coreVectorInsert(&device->_raw, &voice, 0,0, _kit_kmixerVoiceRawUnitCallback);
  _IF_GOTO_ERROR(newIndex==U32_MAX,;)
  voiceI = &_VOICE_QUERY(newIndex);
  voiceI->index = newIndex;
  inRaw = SDL_TRUE;


  //add voice to output's input list
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddInput(device, newIndex, outputVoiceID),;)


  //finally, rebuild ord to reflect new state of raw
  _IF_GOTO_ERROR(_kit_kmixerVoiceRebuildOrd(device),;)

  _noerr_:
  success = SDL_TRUE;
  _error_:
  if(!success){
    //the buffer pointers will be the same between voice and *voiceI,
     //and they must be freed either way if this function aborts
    if(!inRaw) voiceI = &voice;

    if(voiceI->lock != NULL) SDL_DestroyMutex(voiceI->lock);
    kit_coreVectorDestroy(&voiceI->inputs);
    SAFE_FREE(voiceI->bufferInput.data);
    SAFE_FREE(voiceI->bufferUser.data);
    SAFE_FREE(voiceI->bufferConvert.data);
    SAFE_FREE(voiceI->bufferOutput.data);
    voiceI->lock = NULL;

    //(make newIndex indicate an error again, regardless of its prev. value)
    newIndex = 0;
  }
  if(locked) kit_kmixerDeviceLock(device, SDL_FALSE);
  return newIndex;
}




//updates a voice's chain stage after redirecting
void _kit_kmixerVoiceCascadeChainStage(kit_kmixerDevice* device, Uint32 voiceID){
  Uint32 outputID = _VOICE_QUERY(voiceID).output;

  //set input voice's chain stage to one higher than the output
  _VOICE_QUERY(voiceID).chainStage = _VOICE_QUERY(outputID).chainStage+1;

  //if input voice itself has inputs, call VoiceCascade on all of them
   //(this should be recursive)
  if(_VOICE_QUERY(voiceID).inputs != NULL){
    kit_coreVector* inputs = _VOICE_QUERY(voiceID).inputs;
    for(Uint32 i=0; i<inputs->x; ++i){
      Uint32 input = VECTOR_INDEX_C(Uint32, inputs, i);
      if(!input) continue; //skip any invalid or removed voices
      _kit_kmixerVoiceCascadeChainStage(device,input);
    }
  }
}



int kit_kmixerVoiceRedirect(kit_kmixerDevice* device,
                            Uint32 inputVoiceID, Uint32 outputVoiceID)
{
  int returnStatus = 0;
  SDL_bool locked = SDL_FALSE;
  _DEVICE_VALIDITY_CHECK(0)
  _IF_GOTO_ERROR(kit_kmixerDeviceLock(device, SDL_TRUE)<0,;)
  locked = SDL_TRUE;

  _IF_SDLERR(!inputVoiceID,;,""cannot redirect voice 0"")

  int exists = kit_kmixerVoiceExists(device, inputVoiceID);
  _IF_SDLERR(exists<0,;,""inputVoiceID out of bounds"")
  _IF_SDLERR(!exists,;,""input voice doesn't exist"")

  exists = kit_kmixerVoiceExists(device, outputVoiceID);
  _IF_SDLERR(exists<0,;,""outputVoiceID out of bounds"")
  _IF_SDLERR(!exists,;,""output voice doesn't exist"")

  _IF_SDLERR(_VOICE_QUERY(outputVoiceID).output==inputVoiceID,;,""output can't be circular"")


  //disconnect from the old output, before connecting to the new output
  Uint32 outputVoiceID_old = _VOICE_QUERY(inputVoiceID).output;
  _IF_GOTO_ERROR(_kit_kmixerVoiceRemoveInput(device, outputVoiceID_old, inputVoiceID),;)
  _IF_GOTO_ERROR(_kit_kmixerVoiceAddInput(device, inputVoiceID, outputVoiceID),;)


  //update every chainStage value up the voice chain,
   //to accomodate the stage of the new output
  _kit_kmixerVoiceCascadeChainStage(device,inputVoiceID);


  //update ord to reflect changes
  _IF_GOTO_ERROR(_kit_kmixerVoiceRebuildOrd(device),;)


  _noerr_: ++returnStatus;
  _error_: --returnStatus;
  if(locked && kit_kmixerDeviceLock(device, SDL_FALSE)<0) returnStatus = -1;
  return returnStatus;
}



int kit_kmixerVoiceExists(kit_kmixerDevice* device, Uint32 voiceID){
  _DEVICE_VALIDITY_CHECK(0)
  _IF_SDLERR(voiceID>=device->_raw->x,;,""voiceID out of bounds"")
  _noerr_: return _VOICE_QUERY(voiceID).lock != NULL;
  _error_: return -1;
}




Uint32 kit_kmixerVoiceGetNumInputs(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  if(_VOICE_QUERY(voiceID).inputs == NULL) return 0;
  /*!err*/ return _VOICE_QUERY(voiceID).inputs->x;
  _error_: return U32_MAX;
}



kit_coreVector* kit_kmixerVoiceGetInputs(kit_kmixerDevice* device, Uint32 voiceID){
  kit_coreVector* inputs = NULL;
  _VOICE_CHECK(voiceID)

  _IF_SDLERR(_VOICE_QUERY(voiceID).inputs==NULL,;,""no inputs found"")
  inputs = kit_coreVectorCopy(_VOICE_QUERY(voiceID).inputs);

  _error_:
  return inputs;
}



Uint32 kit_kmixerVoiceGetOutput(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)

  _IF_SDLERR(_VOICE_QUERY(voiceID).output==U32_MAX,;,""voice 0 has no output!"")

  /*!err*/ return _VOICE_QUERY(voiceID).output;
  _error_: return U32_MAX;
}



SDL_bool* kit_kmixerVoiceGetActiveRef(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return &_VOICE_QUERY(voiceID).active;
  _error_: return NULL;
}



int kit_kmixerVoiceGetActive(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).active;
  _error_: return -1;
}



int kit_kmixerVoiceSetActive(kit_kmixerDevice* device, Uint32 voiceID, SDL_bool isActive){
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).active = isActive;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



void _kit_kmixerVoiceCascadeActive(kit_kmixerDevice* device, Uint32 voiceID, SDL_bool isActive){
  _VOICE_QUERY(voiceID).active = isActive;

  //recursively set the active state on all input voices (if there are any)
  if(_VOICE_QUERY(voiceID).inputs != NULL){
    //it should be safe to dereference inputs here, since the whole device
     //should be locked at this point
    Uint32* inputs     = _VOICE_QUERY(voiceID).inputs->data;
    Uint32  inputs_len = _VOICE_QUERY(voiceID).inputs->x;
    for(Uint32 i=0; i<inputs_len; ++i){
      if(!inputs[i]) continue; //skip any invalid or removed voices
      _kit_kmixerVoiceCascadeActive(device,inputs[i], isActive);
    }
  }
}



int kit_kmixerVoiceSetActiveChain(kit_kmixerDevice* device, Uint32 voiceID, SDL_bool isActive){
  int returnStatus = 0;
  SDL_bool locked = SDL_FALSE;
  _DEVICE_VALIDITY_CHECK(0)
  _IF_GOTO_ERROR(kit_kmixerDeviceLock(device, SDL_TRUE)<0,;)
  locked = SDL_TRUE;

  //now that the device is locked, CascadeActive can safely be called,
   //(much like CascadeChainStage)
  _kit_kmixerVoiceCascadeActive(device, voiceID, isActive);

  _noerr_: ++returnStatus;
  _error_: --returnStatus;
  if(locked && kit_kmixerDeviceLock(device, SDL_FALSE)<0) returnStatus = -1;
  return returnStatus;
}




Uint32 kit_kmixerVoiceGetChainStage(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).chainStage;
  _error_: return U32_MAX;
}




kit_kmixerVoiceSpec kit_kmixerVoiceGetSpec(kit_kmixerDevice* device, Uint32 voiceID){
  kit_kmixerVoiceSpec vspec = {0};
  _VOICE_CHECK(voiceID)

  vspec = _VOICE_QUERY(voiceID).spec;

  _error_:
  return vspec;
}



kit_kmixerVoiceSpec* kit_kmixerVoiceGetSpecRef(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return &_VOICE_QUERY(voiceID).spec;
  _error_: return NULL;
}



void* kit_kmixerVoiceGetSpecUserdata(kit_kmixerDevice* device, Uint32 voiceID){
  _IF_SDLERR(!voiceID,;,""voice 0 has no userdata"")
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).spec.userdata;
  _error_: return NULL;
}



int kit_kmixerVoiceSetSpecRemove(kit_kmixerDevice* device, Uint32 voiceID,
                                 kit_kmixerVoiceRemoveCallback remove)
{
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).spec.remove = remove;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetSpecCallback(kit_kmixerDevice* device, Uint32 voiceID,
                                   kit_kmixerVoiceCallback callback)
{
  //(remove and userdata can be NULL, but the voice callback itself cannot)
  _IF_SDLERR(callback==NULL,;,""!callback"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).spec.callback = callback;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetSpecUserdata(kit_kmixerDevice* device, Uint32 voiceID, void* userdata){
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).spec.userdata = userdata;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}




float kit_kmixerVoiceGetVolL(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).volL;
  _error_: return NAN;
}



float kit_kmixerVoiceGetVolR(kit_kmixerDevice* device, Uint32 voiceID){
  _VOICE_CHECK(voiceID)
  /*!err*/ return _VOICE_QUERY(voiceID).volR;
  _error_: return NAN;
}



int kit_kmixerVoiceSetVolL(kit_kmixerDevice* device, Uint32 voiceID, float volL){
  _IF_SDLERR(volL<0,;,""volL must be >=0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).volL = volL;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetVolR(kit_kmixerDevice* device, Uint32 voiceID, float volR){
  _IF_SDLERR(volR<0,;,""volR must be >=0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).volR = volR;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetVolume(kit_kmixerDevice* device, Uint32 voiceID, float volL, float volR){
  _IF_SDLERR(volL<0,;,""volL must be >=0"")
  _IF_SDLERR(volR<0,;,""volR must be >=0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  _VOICE_QUERY(voiceID).volL = volL;
  _VOICE_QUERY(voiceID).volR = volR;

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceSetPan(kit_kmixerDevice* device, Uint32 voiceID, float pan){
  _IF_SDLERR(!NORMALIZED(pan),;,""pan must be -1.0f -> 1.0f"")
  _VOICE_CHECK(voiceID)
  _IF_SDLERR(_VOICE_QUERY(voiceID).spec.stereo,;,""voice cannot be mono"")

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  //for example, if pan = -0.6f, volL and volR would be 1.0f and 0.4f respectively
  _VOICE_QUERY(voiceID).volL = MIN(1.0f+pan, 1.0f);
  _VOICE_QUERY(voiceID).volR = MIN(1.0f-pan, 1.0f);

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}




int kit_kmixerVoiceUnlock(kit_kmixerDevice* device, Uint32 voiceID){
  _IF_SDLERR(!voiceID,;,""cannot unlock voice 0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_UnlockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}



int kit_kmixerVoiceLock(kit_kmixerDevice* device, Uint32 voiceID){
  _IF_SDLERR(!voiceID,;,""cannot lock voice 0"")
  _VOICE_CHECK(voiceID)

  _IF_GOTO_ERROR(SDL_LockMutex(_VOICE_QUERY(voiceID).lock),;)

  /*!err*/ return  0;
  _error_: return -1;
}




#if defined(_KIT_KMIXER_DEBUG) || defined(_KIT_ALL_DEBUG)
void _kit_kmixerVoice_TestCallback(void* userdata, void* _stream, int size, SDL_bool hasInput){
}
/*
because kmixer compiles with -O3, i get this error if i attempt to compile the test:
""warning:  may be used uninitialized in this function [-Wmaybe-uninitialized]|""
i have very little doubt that this is a bug, so i can't do much about it other than
turn down optimization for this specific function
*/
//(for some reason, it started working again after i added some seemingly
 //unrelated stuff, so i'll comment this out for now)
//__attribute__((optimize(""-O0"")))
int kit_kmixerVoice_Test(){
  float bufferInputA[16], bufferUserA[16], bufferConvertA[16], bufferOutputA[16];
  float bufferInputB[16], bufferUserB[16], bufferConvertB[16], bufferOutputB[16];
  float bufferInputC[16], bufferUserC[16], bufferConvertC[16], bufferOutputC[16];


  _kit_kmixerVoice voiceA={
    .spec={
      .callback = _kit_kmixerVoice_TestCallback,
      .userdata = NULL,
      .freq     = 44100,
      ._size    = 16*sizeof(float),
      .stereo   = SDL_FALSE,
      .samples  = 16,
      .format   = AUDIO_F32
    },

    .bufferInput   = { .data=bufferInputA   },
    .bufferUser    = { .data=bufferUserA    },
    .bufferConvert = { .data=bufferConvertA },
    .bufferOutput  = { .data=bufferOutputA  },

    .inputs = NULL,
    .lock   = NULL,

    .chainStage = 2,
    .index      = 3,

    .volL = 1.0f,
    .volR = 1.0f,

    .stereoOutput = SDL_FALSE,
  };

  _kit_kmixerVoice voiceB={
    .spec={
      .callback = _kit_kmixerVoice_TestCallback,
      .userdata = NULL,
      .freq     = 44100,
      ._size    = 16*sizeof(float),
      .stereo   = SDL_FALSE,
      .samples  = 16,
      .format   = AUDIO_F32
    },

    .bufferInput   = { .data=bufferInputB   },
    .bufferUser    = { .data=bufferUserB    },
    .bufferConvert = { .data=bufferConvertB },
    .bufferOutput  = { .data=bufferOutputB  },

    .inputs = NULL,
    .lock   = NULL,

    .chainStage = 2,
    .index      = 2,

    .volL = 1.0f,
    .volR = 1.0f,

    .stereoOutput = SDL_FALSE,
  };

  _kit_kmixerVoice voiceC={
    .spec={
      .callback = _kit_kmixerVoice_TestCallback,
      .userdata = NULL,
      .freq     = 44100,
      ._size    = 16*sizeof(float),
      .stereo   = SDL_FALSE,
      .samples  = 16,
      .format   = AUDIO_F32
    },

    .bufferInput   = { .data=bufferInputC   },
    .bufferUser    = { .data=bufferUserC    },
    .bufferConvert = { .data=bufferConvertC },
    .bufferOutput  = { .data=bufferOutputC  },

    .inputs = NULL,
    .lock   = NULL,

    .chainStage = 1,
    .index      = 1,

    .volL = 1.0f,
    .volR = 1.0f,

    .stereoOutput = SDL_FALSE,
  };


  //example streams
  Uint8  u_8_A[16]={0x00,0x3F,0x10,0x80,0xFF,0x4E,0x24,0x6D,0x21,0xFE,0xED,0x86,0x3A,0xAB,0xDA,0x4C};
  Sint16 i16_A[16]={-32768,13106,-16384,6553,32767,2553,-26214,25937,22337,-13102,9553,-32467,-9830,0,-19661,-22938};
  Sint32 i32_A[16]={-2147483648,2147483647,2,547760950,-978102134,-1901782676,973752665,-2054956051,-1793070550,2100284199,1386177656,-70287364,-799099289,-594127329,1025429360,-570645197};
  float  f32_A[16]={ 0.8,-0.2, 0.0,-0.6,-0.6, 0.4, 1.0, 2.0, 0.6, 0.9, 0.8, 0.3, 0.6,-1.4,-0.1, 0.1};
  float  f32_B[16]={-0.1,-0.4, 0.1, 0.3,-0.6, 0.6, 0.6,-0.6,-0.1, 0.2,-0.2, 0.8, 0.4, 0.8, 0.4, 0.7};


  //test to and from type conversion
   //u_8
  SDL_memcpy(voiceA.bufferUser.u_8, u_8_A, 16*sizeof(Uint8));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.u_8,voiceA.bufferConvert.f32, 16,AUDIO_U8,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.u_8, 16,AUDIO_U8,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if(voiceA.bufferUser.u_8[i] != MAX(u_8_A[i],1)){
      SDL_SetError(""u_8 type conv. (%u:%X!=%X)"",
        i, voiceA.bufferUser.u_8[i], MAX(u_8_A[i],1) ); return -999;
    }
  }
   //i16
  SDL_memcpy(voiceA.bufferUser.i16, i16_A, 16*sizeof(Sint16));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.i16,voiceA.bufferConvert.f32, 16,AUDIO_S16,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.i16, 16,AUDIO_S16,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if(voiceA.bufferUser.i16[i] != MAX(i16_A[i],-32767)){
      SDL_SetError(""i16 type conv. (%u:%i!=%i)"",
        i, voiceA.bufferUser.i16[i], MAX(i16_A[i],-32767) ); return -999;
    }
  }
   //i32 (products of conversion are actually approximations with a max error of 64)
  SDL_memcpy(voiceA.bufferUser.i32, i32_A, 16*sizeof(Sint32));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.i32,voiceA.bufferConvert.f32, 16,AUDIO_S32,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.i32, 16,AUDIO_S32,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if((voiceA.bufferUser.i32[i] < (MAX(i32_A[i],-2147483647)-64)) &&
       (voiceA.bufferUser.i32[i] > (MAX(i32_A[i],-2147483647)+64)))
    {
      SDL_SetError(""i32 type conv. (%u:%i!=%i)"",
        i, voiceA.bufferUser.i32[i], MAX(i32_A[i],-2147483647) ); return -999;
    }
  }
   //f32
  SDL_memcpy(voiceA.bufferUser.f32, f32_A, 16*sizeof(float));
  _kit_kmixerVoiceProcFromType(voiceA.bufferUser.f32,voiceA.bufferConvert.f32, 16,AUDIO_F32,SDL_FALSE);
  _kit_kmixerVoiceProcToType(voiceA.bufferConvert.f32,voiceA.bufferUser.f32, 16,AUDIO_F32,SDL_FALSE);
  for(Uint32 i=0; i<16; ++i){
    if(voiceA.bufferUser.f32[i] != CLAMP(f32_A[i], -1.0f,1.0f)){
      SDL_SetError(""f32 type conv. (%u:%.1f!=%.1f)"",
        i, voiceA.bufferUser.f32[i], CLAMP(f32_A[i], -1.0f,1.0f) ); return -999;
    }
  }


  //test channel conversion
   //  mono-stereo
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32s, 8,_M_to_S);
  for(Uint32 i=0; i<16; i+=2){
    //kit_coreLog(""%2u: %9f, %9f"",i, voiceA.bufferConvert.m[i], voiceA.bufferConvert.m[i+1]);
    if(voiceA.bufferConvert.f32[i] != voiceA.bufferConvert.f32[i+1]){
      SDL_SetError(""mn.->st. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i], voiceA.bufferConvert.f32[i+1] ); return -999;
    }
  }
   //stereo-mono
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32,  8,_S_to_M);
  for(Uint32 i=0; i<16; i+=2){
    //kit_coreLog(""%2u: %9f,%9f -> %9f"",i, f32_A[i],f32_A[i+1], voiceA.bufferConvert.m[i>>1]);
    if(voiceA.bufferConvert.f32[i>>1] != (f32_A[i]+f32_A[i+1])*.5f){
      SDL_SetError(""st.->mn. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i>>1], (f32_A[i]+f32_A[i+1])*.5f ); return -999;
    }
  }
   //stereo-stereo
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32s,  8,_S_to_S);
  for(Uint32 i=0; i<16; ++i){
    //kit_coreLog(""%2u: %9f"",i, voiceA.bufferConvert.m[i]);
    if(voiceA.bufferConvert.f32[i] != f32_A[i]){
      SDL_SetError(""st.->st. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i], f32_A[i] ); return -999;
    }
  }
   //  mono-mono
  _kit_kmixerVoiceProcChannels(f32_A, voiceA.bufferConvert.f32, 16,_M_to_M);
  for(Uint32 i=0; i<16; ++i){
    //kit_coreLog(""%2u: %9f"",i, voiceA.bufferConvert.m[i]);
    if(voiceA.bufferConvert.f32[i] != f32_A[i]){
      SDL_SetError(""mn.->mn. convert (%u:%.1f!=%.1f)"",
        i, voiceA.bufferConvert.f32[i], f32_A[i] ); return -999;
    }
  }


  //test VoiceProc itself here


  //test mixing (might want to add in other volume settings at some point)
  voiceA.lock=SDL_CreateMutex();
  voiceB.lock=SDL_CreateMutex();
  voiceC.lock=SDL_CreateMutex();
  kit_coreVector* ivoices=kit_coreVectorCreate(2,0,0, sizeof(_kit_kmixerVoice),0);
  if(voiceA.lock==NULL || voiceB.lock==NULL || voiceC.lock==NULL || ivoices==NULL){
    if(voiceA.lock != NULL) SDL_DestroyMutex(voiceA.lock);
    if(voiceB.lock != NULL) SDL_DestroyMutex(voiceB.lock);
    if(voiceC.lock != NULL) SDL_DestroyMutex(voiceC.lock);
    if(ivoices != NULL) kit_coreVectorDestroy(&ivoices);
  }

  SDL_memcpy(voiceA.bufferOutput.f32, f32_A, 16*sizeof(float));
  SDL_memcpy(voiceB.bufferOutput.f32, f32_B, 16*sizeof(float));
  _kit_kmixerVoice _ivoices[2]={voiceA,voiceB};
  memcpy(ivoices->data, _ivoices, sizeof(_kit_kmixerVoice)*2);
   //mono, 1.0,1.0
  //_kit_kmixerVoiceMix(&voiceC);
  for(Uint32 i=0; i<16; ++i){
    float mixed=voiceC.bufferInput.f32[i];
    float real=CLAMP(voiceA.bufferOutput.f32[i]+voiceB.bufferOutput.f32[i], -1.0f,1.0f);
    if(mixed != real){ SDL_SetError(""mn. mixing (%u:%.1f!=%.1f)"",
                         i, mixed, real ); return -999;
    }
  }
   //stereo, 1.0,1.0
  voiceA.stereoOutput=SDL_TRUE;
  voiceB.stereoOutput=SDL_TRUE;
  voiceA.spec.samples=8;
  voiceB.spec.samples=8;
  voiceC.spec.samples=8;
  //_kit_kmixerVoiceMix(&voiceC);
  for(Uint32 i=0; i<16; ++i){
    float mixed=voiceC.bufferInput.f32[i];
    float real=CLAMP(voiceA.bufferOutput.f32[i]+voiceB.bufferOutput.f32[i], -1.0f,1.0f);
    if(mixed != real){ SDL_SetError(""st. mixing (%u:%.1f!=%.1f)"",
                         i, mixed, real ); return -999;
    }
  }

  if(voiceA.lock != NULL) SDL_DestroyMutex(voiceA.lock);
  if(voiceB.lock != NULL) SDL_DestroyMutex(voiceB.lock);
  if(voiceC.lock != NULL) SDL_DestroyMutex(voiceC.lock);
  if(ivoices != NULL) kit_coreVectorDestroy(&ivoices);


  //test adding and removing possibly


  //kit_coreLog(""sizeof(_kit_kmixerVoice)=%u"",(unsigned int)sizeof(_kit_kmixerVoice));


  return 0;
}
void kit_kmixerVoicePrintRawOrd(kit_kmixerDevice* device){
  kit_coreVector** raw_p = &device->_raw;
  kit_coreVector** ord_p = &device->_ord;
  Uint32 rawLen = (*raw_p)->x;
  Uint32 ordLen = (*ord_p)->x;
  Uint32 maxStage = (*ord_p)->y-1;
  _kit_kmixerVoice* raw = (*raw_p)->data;
  _kit_kmixerVoice** ord = (*ord_p)->data;


  printf(""\n~~~ RAW ~~~\n"");
  for(Uint32 v=0; v<rawLen; ++v){
    _kit_kmixerVoice* voice = &raw[v];
    printf(""--- %02u/%02u (%p) ---\n"", v, rawLen-1, voice);
    if(voice->lock == NULL){ printf(""  (REMOVED)\n""); continue; }
    Uint32 numInputs = 0,  *inputs = NULL;
    if(voice->inputs != NULL){
      numInputs = voice->inputs->x;
         inputs = voice->inputs->data;
    }

    printf(""  voice%u->inputs     = %p: "",v, voice->inputs);
    if(inputs != NULL){
      printf(""{\n    "");
      for(Uint32 i=0; i<numInputs; ++i){
        if(inputs[i]!=0) printf(""%02u, "",inputs[i]);
        else printf(""RM, ""); //removed voice
        if((i+1)==numInputs) printf(""\n"");
        else if((i%5)==4) printf(""\n    "");
      }
      printf(""  }\n"");
    } else printf(""(NULL)\n"");

    printf(""  voice%u->output     = %2i\n"",v, voice->output);
    printf(""  voice%u->chainStage = %2u\n"",v, voice->chainStage);
    printf(""  voice%u->active     = %s\n"", v, boolstr[voice->active]);
    printf(""  voice%u->spec       = {\n"",  v);
    printf(""    .remove   = %p\n"",voice->spec.remove);
    printf(""    .callback = %p\n"",voice->spec.callback);
    printf(""    .userdata = %p\n"",voice->spec.userdata);
    printf(""    .freq     = %i\n"",voice->spec.freq);
    printf(""    ._size    = %u\n"",voice->spec._size);
    printf(""    .stereo   = %s\n"",boolstr[voice->spec.stereo]);
    printf(""    .samples  = %u\n"",voice->spec.samples);
    printf(""    .format   = %X\n"",voice->spec.format);
    printf(""  }\n"");

    printf(""\n"");
  }


  printf(""\n~~~ ORD ~~~\n"");
  for(Uint32 yi=maxStage; yi!=U32_MAX; --yi){
    printf(""stage %02u:  "", yi);
    for(Uint32 xi=0; xi<ordLen; ++xi){
      _kit_kmixerVoice* voice = ord[xi + yi*ordLen];

      if(voice == NULL) printf(""NL, "");
      else if(voice->lock == NULL) printf(""RM, "");
      else printf(""%02u, "",voice->index);
    }
    printf(""\n"");
  }
  printf(""\n"");

}
#else
int kit_kmixerVoice_Test(){
  SDL_SetError(""!defined(_KIT_KMIXER_DEBUG)"");
  return 999;
}
void kit_kmixerVoicePrintRawOrd(kit_kmixerDevice* device){}
#endif
"
NHehYhb6,Nigerian scammers [3-11-1/2023],bombaires,AIMMS,Friday 3rd of November 2023 12:46:55 AM CDT,"<a href=""mailto:of9824714@gmail.com"">of9824714@gmail.com</a>
<a href=""mailto:of.98247.1.4@gmail.com"">of.98247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.824.71.4@gmail.com"">o.f.9.824.71.4@gmail.com</a>
<a href=""mailto:o.f.9.82.4.7.1.4@gmail.com"">o.f.9.82.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f98247.1.4@gmail.com"">o.f98247.1.4@gmail.com</a>
<a href=""mailto:of.982.4.714@gmail.com"">of.982.4.714@gmail.com</a>
<a href=""mailto:of9.8.2.4.714@gmail.com"">of9.8.2.4.714@gmail.com</a>
<a href=""mailto:of982471.4@gmail.com"">of982471.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4714@gmail.com"">o.f.9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f.9824714@gmail.com"">o.f.9824714@gmail.com</a>
<a href=""mailto:o.f.98.2.47.1.4@gmail.com"">o.f.98.2.47.1.4@gmail.com</a>
<a href=""mailto:o.f9.824714@gmail.com"">o.f9.824714@gmail.com</a>
<a href=""mailto:o.f98.2.4.714@gmail.com"">o.f98.2.4.714@gmail.com</a>
<a href=""mailto:o.f98.2.4.7.1.4@gmail.com"">o.f98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.98.2.4714@gmail.com"">o.f.98.2.4714@gmail.com</a>
<a href=""mailto:o.f.98.2.4.7.1.4@gmail.com"">o.f.98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.7.1.4@gmail.com"">o.f.9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of9824.7.1.4@gmail.com"">of9824.7.1.4@gmail.com</a>
<a href=""mailto:of9.82.4.71.4@gmail.com"">of9.82.4.71.4@gmail.com</a>
<a href=""mailto:o.f98.2.47.14@gmail.com"">o.f98.2.47.14@gmail.com</a>
<a href=""mailto:o.f9.8.2.47.14@gmail.com"">o.f9.8.2.47.14@gmail.com</a>
<a href=""mailto:of9.82.471.4@gmail.com"">of9.82.471.4@gmail.com</a>
<a href=""mailto:o.f.9.8.24.7.1.4@gmail.com"">o.f.9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4.7.1.4@gmail.com"">of.9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of9.82.4.714@gmail.com"">of9.82.4.714@gmail.com</a>
<a href=""mailto:o.f9824.7.14@gmail.com"">o.f9824.7.14@gmail.com</a>
<a href=""mailto:o.f.9.8.2.471.4@gmail.com"">o.f.9.8.2.471.4@gmail.com</a>
<a href=""mailto:of.98.2.47.1.4@gmail.com"">of.98.2.47.1.4@gmail.com</a>
<a href=""mailto:of9.8.2.4.7.1.4@gmail.com"">of9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of9824.7.14@gmail.com"">of9824.7.14@gmail.com</a>
<a href=""mailto:o.f.98247.1.4@gmail.com"">o.f.98247.1.4@gmail.com</a>
<a href=""mailto:of.9824.714@gmail.com"">of.9824.714@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.7.14@gmail.com"">o.f.9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:of.98.2471.4@gmail.com"">of.98.2471.4@gmail.com</a>
<a href=""mailto:of9.824.7.14@gmail.com"">of9.824.7.14@gmail.com</a>
<a href=""mailto:of.98.24.7.14@gmail.com"">of.98.24.7.14@gmail.com</a>
<a href=""mailto:o.f982.471.4@gmail.com"">o.f982.471.4@gmail.com</a>
<a href=""mailto:o.f.9.82471.4@gmail.com"">o.f.9.82471.4@gmail.com</a>
<a href=""mailto:o.f.982471.4@gmail.com"">o.f.982471.4@gmail.com</a>
<a href=""mailto:of.982.471.4@gmail.com"">of.982.471.4@gmail.com</a>
<a href=""mailto:o.f9.82.4.71.4@gmail.com"">o.f9.82.4.71.4@gmail.com</a>
<a href=""mailto:of98.247.1.4@gmail.com"">of98.247.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.47.1.4@gmail.com"">of.9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.47.14@gmail.com"">o.f.9.8.2.47.14@gmail.com</a>
<a href=""mailto:of.98.24.7.1.4@gmail.com"">of.98.24.7.1.4@gmail.com</a>
<a href=""mailto:of.98.247.1.4@gmail.com"">of.98.247.1.4@gmail.com</a>
<a href=""mailto:of9.8247.1.4@gmail.com"">of9.8247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82.47.1.4@gmail.com"">o.f.9.82.47.1.4@gmail.com</a>
<a href=""mailto:of9.8.2.47.14@gmail.com"">of9.8.2.47.14@gmail.com</a>
<a href=""mailto:o.f.98.2.471.4@gmail.com"">o.f.98.2.471.4@gmail.com</a>
<a href=""mailto:of9824714@gmail.com"">of9824714@gmail.com</a>
<a href=""mailto:o.f98247.14@gmail.com"">o.f98247.14@gmail.com</a>
<a href=""mailto:of.9.824.7.1.4@gmail.com"">of.9.824.7.1.4@gmail.com</a>
<a href=""mailto:of982.4.7.14@gmail.com"">of982.4.7.14@gmail.com</a>
<a href=""mailto:o.f.98.2.47.14@gmail.com"">o.f.98.2.47.14@gmail.com</a>
<a href=""mailto:of9.8.24.7.1.4@gmail.com"">of9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f.98.24714@gmail.com"">o.f.98.24714@gmail.com</a>
<a href=""mailto:o.f.982.47.1.4@gmail.com"">o.f.982.47.1.4@gmail.com</a>
<a href=""mailto:of982.47.14@gmail.com"">of982.47.14@gmail.com</a>
<a href=""mailto:o.f.98.247.1.4@gmail.com"">o.f.98.247.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.47.1.4@gmail.com"">o.f.9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:of98.2.4714@gmail.com"">of98.2.4714@gmail.com</a>
<a href=""mailto:of98.24714@gmail.com"">of98.24714@gmail.com</a>
<a href=""mailto:o.f982.47.14@gmail.com"">o.f982.47.14@gmail.com</a>
<a href=""mailto:of.98.247.14@gmail.com"">of.98.247.14@gmail.com</a>
<a href=""mailto:of9.82.4714@gmail.com"">of9.82.4714@gmail.com</a>
<a href=""mailto:o.f9.8.2.4714@gmail.com"">o.f9.8.2.4714@gmail.com</a>
<a href=""mailto:of.982.4714@gmail.com"">of.982.4714@gmail.com</a>
<a href=""mailto:of.9.8.24.7.14@gmail.com"">of.9.8.24.7.14@gmail.com</a>
<a href=""mailto:of982.4.714@gmail.com"">of982.4.714@gmail.com</a>
<a href=""mailto:o.f982471.4@gmail.com"">o.f982471.4@gmail.com</a>
<a href=""mailto:of.982471.4@gmail.com"">of.982471.4@gmail.com</a>
<a href=""mailto:of.9.82.471.4@gmail.com"">of.9.82.471.4@gmail.com</a>
<a href=""mailto:o.f9.82.47.1.4@gmail.com"">o.f9.82.47.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4714@gmail.com"">of.9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f9.824.7.14@gmail.com"">o.f9.824.7.14@gmail.com</a>
<a href=""mailto:of9824.71.4@gmail.com"">of9824.71.4@gmail.com</a>
<a href=""mailto:o.f.9824.7.14@gmail.com"">o.f.9824.7.14@gmail.com</a>
<a href=""mailto:o.f9.82.4.714@gmail.com"">o.f9.82.4.714@gmail.com</a>
<a href=""mailto:o.f98.24.7.1.4@gmail.com"">o.f98.24.7.1.4@gmail.com</a>
<a href=""mailto:of.9.82.47.1.4@gmail.com"">of.9.82.47.1.4@gmail.com</a>
<a href=""mailto:o.f9.8247.1.4@gmail.com"">o.f9.8247.1.4@gmail.com</a>
<a href=""mailto:of98.24.71.4@gmail.com"">of98.24.71.4@gmail.com</a>
<a href=""mailto:of98.2.471.4@gmail.com"">of98.2.471.4@gmail.com</a>
<a href=""mailto:o.f.98.24.7.14@gmail.com"">o.f.98.24.7.14@gmail.com</a>
<a href=""mailto:of982.4.7.1.4@gmail.com"">of982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f9824714@gmail.com"">o.f9824714@gmail.com</a>
<a href=""mailto:of.9.8.247.14@gmail.com"">of.9.8.247.14@gmail.com</a>
<a href=""mailto:of982.4714@gmail.com"">of982.4714@gmail.com</a>
<a href=""mailto:of.9.824.71.4@gmail.com"">of.9.824.71.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.7.1.4@gmail.com"">o.f9.8.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.2.4.714@gmail.com"">o.f.9.8.2.4.714@gmail.com</a>
<a href=""mailto:of.9.824714@gmail.com"">of.9.824714@gmail.com</a>
<a href=""mailto:o.f9.8.24.7.14@gmail.com"">o.f9.8.24.7.14@gmail.com</a>
<a href=""mailto:of98.2.47.14@gmail.com"">of98.2.47.14@gmail.com</a>
<a href=""mailto:of9.8.2.4.71.4@gmail.com"">of9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f982.47.1.4@gmail.com"">o.f982.47.1.4@gmail.com</a>
<a href=""mailto:of982.47.1.4@gmail.com"">of982.47.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82.4714@gmail.com"">o.f.9.82.4714@gmail.com</a>
<a href=""mailto:of9.8.24.71.4@gmail.com"">of9.8.24.71.4@gmail.com</a>
<a href=""mailto:of9.8.2.4.7.14@gmail.com"">of9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:of9.8.247.1.4@gmail.com"">of9.8.247.1.4@gmail.com</a>
<a href=""mailto:of9.82471.4@gmail.com"">of9.82471.4@gmail.com</a>
<a href=""mailto:of.98.2.4714@gmail.com"">of.98.2.4714@gmail.com</a>
<a href=""mailto:o.f9.8.24.714@gmail.com"">o.f9.8.24.714@gmail.com</a>
<a href=""mailto:of.9824714@gmail.com"">of.9824714@gmail.com</a>
<a href=""mailto:o.f.9.8.24.71.4@gmail.com"">o.f.9.8.24.71.4@gmail.com</a>
<a href=""mailto:o.f.9824.71.4@gmail.com"">o.f.9824.71.4@gmail.com</a>
<a href=""mailto:of.9.8247.1.4@gmail.com"">of.9.8247.1.4@gmail.com</a>
<a href=""mailto:o.f98.2.4714@gmail.com"">o.f98.2.4714@gmail.com</a>
<a href=""mailto:o.f9.82471.4@gmail.com"">o.f9.82471.4@gmail.com</a>
<a href=""mailto:o.f.9.8247.14@gmail.com"">o.f.9.8247.14@gmail.com</a>
<a href=""mailto:of.9.82.4.714@gmail.com"">of.9.82.4.714@gmail.com</a>
<a href=""mailto:o.f9.82.471.4@gmail.com"">o.f9.82.471.4@gmail.com</a>
<a href=""mailto:of98.2.4.7.14@gmail.com"">of98.2.4.7.14@gmail.com</a>
<a href=""mailto:of98.24.7.14@gmail.com"">of98.24.7.14@gmail.com</a>
<a href=""mailto:of9.8.24.714@gmail.com"">of9.8.24.714@gmail.com</a>
<a href=""mailto:o.f.9.8.247.14@gmail.com"">o.f.9.8.247.14@gmail.com</a>
<a href=""mailto:of.982.4.7.14@gmail.com"">of.982.4.7.14@gmail.com</a>
<a href=""mailto:o.f.9.824.7.14@gmail.com"">o.f.9.824.7.14@gmail.com</a>
<a href=""mailto:of.98.2.4.7.1.4@gmail.com"">of.98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:of98247.1.4@gmail.com"">of98247.1.4@gmail.com</a>
<a href=""mailto:of.98.2.471.4@gmail.com"">of.98.2.471.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.471.4@gmail.com"">o.f9.8.2.471.4@gmail.com</a>
<a href=""mailto:of.9.8.24714@gmail.com"">of.9.8.24714@gmail.com</a>
<a href=""mailto:o.f.9.8.24714@gmail.com"">o.f.9.8.24714@gmail.com</a>
<a href=""mailto:o.f9.8.2.47.1.4@gmail.com"">o.f9.8.2.47.1.4@gmail.com</a>
<a href=""mailto:of.9.8.2.4.71.4@gmail.com"">of.9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:of.9.824.714@gmail.com"">of.9.824.714@gmail.com</a>
<a href=""mailto:o.f.982.471.4@gmail.com"">o.f.982.471.4@gmail.com</a>
<a href=""mailto:of.9824.7.1.4@gmail.com"">of.9824.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.8.247.1.4@gmail.com"">o.f.9.8.247.1.4@gmail.com</a>
<a href=""mailto:o.f982.4.7.1.4@gmail.com"">o.f982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.2.47.1.4@gmail.com"">o.f98.2.47.1.4@gmail.com</a>
<a href=""mailto:of982.471.4@gmail.com"">of982.471.4@gmail.com</a>
<a href=""mailto:o.f982.4.7.14@gmail.com"">o.f982.4.7.14@gmail.com</a>
<a href=""mailto:of9.824.714@gmail.com"">of9.824.714@gmail.com</a>
<a href=""mailto:o.f.9.824714@gmail.com"">o.f.9.824714@gmail.com</a>
<a href=""mailto:o.f.98.247.14@gmail.com"">o.f.98.247.14@gmail.com</a>
<a href=""mailto:of9.8.2.4714@gmail.com"">of9.8.2.4714@gmail.com</a>
<a href=""mailto:o.f.9.824.7.1.4@gmail.com"">o.f.9.824.7.1.4@gmail.com</a>
<a href=""mailto:of98.2.4.71.4@gmail.com"">of98.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f.982.47.14@gmail.com"">o.f.982.47.14@gmail.com</a>
<a href=""mailto:of.98.24714@gmail.com"">of.98.24714@gmail.com</a>
<a href=""mailto:of98.2.47.1.4@gmail.com"">of98.2.47.1.4@gmail.com</a>
<a href=""mailto:of.9.8247.14@gmail.com"">of.9.8247.14@gmail.com</a>
<a href=""mailto:o.f.98.2.4.71.4@gmail.com"">o.f.98.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f9.824.7.1.4@gmail.com"">o.f9.824.7.1.4@gmail.com</a>
<a href=""mailto:of.982.47.1.4@gmail.com"">of.982.47.1.4@gmail.com</a>
<a href=""mailto:o.f982.4.71.4@gmail.com"">o.f982.4.71.4@gmail.com</a>
<a href=""mailto:o.f.9.8.24.7.14@gmail.com"">o.f.9.8.24.7.14@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.714@gmail.com"">o.f9.8.2.4.714@gmail.com</a>
<a href=""mailto:of.982.4.71.4@gmail.com"">of.982.4.71.4@gmail.com</a>
<a href=""mailto:o.f98.247.14@gmail.com"">o.f98.247.14@gmail.com</a>
<a href=""mailto:o.f9.8247.14@gmail.com"">o.f9.8247.14@gmail.com</a>
<a href=""mailto:o.f.982.4.71.4@gmail.com"">o.f.982.4.71.4@gmail.com</a>
<a href=""mailto:of.98.24.71.4@gmail.com"">of.98.24.71.4@gmail.com</a>
<a href=""mailto:of.982.47.14@gmail.com"">of.982.47.14@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.71.4@gmail.com"">o.f9.8.2.4.71.4@gmail.com</a>
<a href=""mailto:o.f9824.7.1.4@gmail.com"">o.f9824.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.2471.4@gmail.com"">o.f98.2471.4@gmail.com</a>
<a href=""mailto:o.f982.4714@gmail.com"">o.f982.4714@gmail.com</a>
<a href=""mailto:o.f9.82.4714@gmail.com"">o.f9.82.4714@gmail.com</a>
<a href=""mailto:of9.824.71.4@gmail.com"">of9.824.71.4@gmail.com</a>
<a href=""mailto:o.f98.2.4.7.14@gmail.com"">o.f98.2.4.7.14@gmail.com</a>
<a href=""mailto:o.f.9.8.24.714@gmail.com"">o.f.9.8.24.714@gmail.com</a>
<a href=""mailto:of.9.82.47.14@gmail.com"">of.9.82.47.14@gmail.com</a>
<a href=""mailto:of.98.2.4.71.4@gmail.com"">of.98.2.4.71.4@gmail.com</a>
<a href=""mailto:of.9.8.24.7.1.4@gmail.com"">of.9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:of9.82.47.1.4@gmail.com"">of9.82.47.1.4@gmail.com</a>
<a href=""mailto:o.f9824.714@gmail.com"">o.f9824.714@gmail.com</a>
<a href=""mailto:of9.824.7.1.4@gmail.com"">of9.824.7.1.4@gmail.com</a>
<a href=""mailto:of.9.82.4.7.1.4@gmail.com"">of.9.82.4.7.1.4@gmail.com</a>
<a href=""mailto:of.98.2.4.714@gmail.com"">of.98.2.4.714@gmail.com</a>
<a href=""mailto:o.f98.2.471.4@gmail.com"">o.f98.2.471.4@gmail.com</a>
<a href=""mailto:o.f.9824.7.1.4@gmail.com"">o.f.9824.7.1.4@gmail.com</a>
<a href=""mailto:of.98.2.47.14@gmail.com"">of.98.2.47.14@gmail.com</a>
<a href=""mailto:o.f9.8.24.7.1.4@gmail.com"">o.f9.8.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.247.1.4@gmail.com"">o.f9.8.247.1.4@gmail.com</a>
<a href=""mailto:of9.8.24714@gmail.com"">of9.8.24714@gmail.com</a>
<a href=""mailto:o.f.9.82.47.14@gmail.com"">o.f.9.82.47.14@gmail.com</a>
<a href=""mailto:o.f.98.24.714@gmail.com"">o.f.98.24.714@gmail.com</a>
<a href=""mailto:o.f.98.2471.4@gmail.com"">o.f.98.2471.4@gmail.com</a>
<a href=""mailto:of.9.8.2.471.4@gmail.com"">of.9.8.2.471.4@gmail.com</a>
<a href=""mailto:of.9.8.247.1.4@gmail.com"">of.9.8.247.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2.4.7.14@gmail.com"">o.f9.8.2.4.7.14@gmail.com</a>
<a href=""mailto:o.f9.82.4.7.14@gmail.com"">o.f9.82.4.7.14@gmail.com</a>
<a href=""mailto:of.98.2.4.7.14@gmail.com"">of.98.2.4.7.14@gmail.com</a>
<a href=""mailto:of98.24.7.1.4@gmail.com"">of98.24.7.1.4@gmail.com</a>
<a href=""mailto:o.f.9.82.4.71.4@gmail.com"">o.f.9.82.4.71.4@gmail.com</a>
<a href=""mailto:o.f.98.24.71.4@gmail.com"">o.f.98.24.71.4@gmail.com</a>
<a href=""mailto:o.f982.4.714@gmail.com"">o.f982.4.714@gmail.com</a>
<a href=""mailto:o.f.9.82.4.7.14@gmail.com"">o.f.9.82.4.7.14@gmail.com</a>
<a href=""mailto:o.f.982.4.7.1.4@gmail.com"">o.f.982.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f.982.4.7.14@gmail.com"">o.f.982.4.7.14@gmail.com</a>
<a href=""mailto:of.9824.71.4@gmail.com"">of.9824.71.4@gmail.com</a>
<a href=""mailto:o.f98.247.1.4@gmail.com"">o.f98.247.1.4@gmail.com</a>
<a href=""mailto:o.f9.8.2471.4@gmail.com"">o.f9.8.2471.4@gmail.com</a>
<a href=""mailto:of98.2.4.7.1.4@gmail.com"">of98.2.4.7.1.4@gmail.com</a>
<a href=""mailto:o.f98.24.71.4@gmail.com"">o.f98.24.71.4@gmail.com</a>
<a href=""mailto:of.982.4.7.1.4@gmail.com"">of.982.4.7.1.4@gmail.com</a>
<a href=""mailto:guterres1@msn.com"">guterres1@msn.com</a>
<a href=""mailto:officenkem43@gmail.com"">officenkem43@gmail.com</a>
<a href=""mailto:off.i.ce.nk.em4.3@gmail.com"">off.i.ce.nk.em4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.enk.e.m4.3@gmail.com"">o.ff.i.c.enk.e.m4.3@gmail.com</a>
<a href=""mailto:off.icen.ke.m4.3@gmail.com"">off.icen.ke.m4.3@gmail.com</a>
<a href=""mailto:o.f.fi.c.en.k.em43@gmail.com"">o.f.fi.c.en.k.em43@gmail.com</a>
<a href=""mailto:o.f.fic.e.n.ke.m43@gmail.com"">o.f.fic.e.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ic.e.n.kem.4.3@gmail.com"">o.ff.ic.e.n.kem.4.3@gmail.com</a>
<a href=""mailto:of.fic.en.k.em.43@gmail.com"">of.fic.en.k.em.43@gmail.com</a>
<a href=""mailto:of.f.ic.e.n.kem.43@gmail.com"">of.f.ic.e.n.kem.43@gmail.com</a>
<a href=""mailto:of.f.ice.nke.m.4.3@gmail.com"">of.f.ice.nke.m.4.3@gmail.com</a>
<a href=""mailto:officen.ke.m43@gmail.com"">officen.ke.m43@gmail.com</a>
<a href=""mailto:of.f.ic.en.ke.m43@gmail.com"">of.f.ic.en.ke.m43@gmail.com</a>
<a href=""mailto:of.f.ic.en.k.em4.3@gmail.com"">of.f.ic.en.k.em4.3@gmail.com</a>
<a href=""mailto:of.f.ic.e.n.k.em.4.3@gmail.com"">of.f.ic.e.n.k.em.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.enkem4.3@gmail.com"">o.ff.i.c.enkem4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.enk.em.43@gmail.com"">o.ff.i.c.enk.em.43@gmail.com</a>
<a href=""mailto:off.ic.e.nk.e.m.43@gmail.com"">off.ic.e.nk.e.m.43@gmail.com</a>
<a href=""mailto:off.ic.enke.m4.3@gmail.com"">off.ic.enke.m4.3@gmail.com</a>
<a href=""mailto:o.ffi.ce.n.k.em.43@gmail.com"">o.ffi.ce.n.k.em.43@gmail.com</a>
<a href=""mailto:o.f.fi.c.enk.e.m.4.3@gmail.com"">o.f.fi.c.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:offi.ce.n.ke.m43@gmail.com"">offi.ce.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ice.n.kem4.3@gmail.com"">o.ff.ice.n.kem4.3@gmail.com</a>
<a href=""mailto:o.ff.icenke.m4.3@gmail.com"">o.ff.icenke.m4.3@gmail.com</a>
<a href=""mailto:office.n.k.e.m.4.3@gmail.com"">office.n.k.e.m.4.3@gmail.com</a>
<a href=""mailto:of.fi.ce.nk.e.m.4.3@gmail.com"">of.fi.ce.nk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ff.icen.k.e.m.43@gmail.com"">o.ff.icen.k.e.m.43@gmail.com</a>
<a href=""mailto:of.fi.c.e.nkem4.3@gmail.com"">of.fi.c.e.nkem4.3@gmail.com</a>
<a href=""mailto:o.f.fic.en.k.em.4.3@gmail.com"">o.f.fic.en.k.em.4.3@gmail.com</a>
<a href=""mailto:offic.e.n.kem4.3@gmail.com"">offic.e.n.kem4.3@gmail.com</a>
<a href=""mailto:office.nkem43@gmail.com"">office.nkem43@gmail.com</a>
<a href=""mailto:offi.c.enk.e.m4.3@gmail.com"">offi.c.enk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.en.kem.43@gmail.com"">o.ff.i.c.en.kem.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.enke.m43@gmail.com"">o.ff.i.c.enke.m43@gmail.com</a>
<a href=""mailto:o.ffi.c.en.ke.m4.3@gmail.com"">o.ffi.c.en.ke.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.ce.nke.m4.3@gmail.com"">o.ff.i.ce.nke.m4.3@gmail.com</a>
<a href=""mailto:o.f.fi.cen.ke.m43@gmail.com"">o.f.fi.cen.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ic.e.nk.em.43@gmail.com"">o.ff.ic.e.nk.em.43@gmail.com</a>
<a href=""mailto:o.ffi.ce.nke.m.43@gmail.com"">o.ffi.ce.nke.m.43@gmail.com</a>
<a href=""mailto:o.ff.ic.en.k.e.m43@gmail.com"">o.ff.ic.en.k.e.m43@gmail.com</a>
<a href=""mailto:o.ff.i.cenke.m.43@gmail.com"">o.ff.i.cenke.m.43@gmail.com</a>
<a href=""mailto:offic.e.n.kem.4.3@gmail.com"">offic.e.n.kem.4.3@gmail.com</a>
<a href=""mailto:of.f.i.cenkem43@gmail.com"">of.f.i.cenkem43@gmail.com</a>
<a href=""mailto:o.ffi.c.e.n.k.e.m4.3@gmail.com"">o.ffi.c.e.n.k.e.m4.3@gmail.com</a>
<a href=""mailto:of.fi.c.en.kem.4.3@gmail.com"">of.fi.c.en.kem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.cenk.e.m.43@gmail.com"">o.f.f.i.cenk.e.m.43@gmail.com</a>
<a href=""mailto:of.fice.n.ke.m43@gmail.com"">of.fice.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ffi.ce.n.k.e.m.4.3@gmail.com"">o.ffi.ce.n.k.e.m.4.3@gmail.com</a>
<a href=""mailto:off.icenkem.4.3@gmail.com"">off.icenkem.4.3@gmail.com</a>
<a href=""mailto:offi.cen.k.em4.3@gmail.com"">offi.cen.k.em4.3@gmail.com</a>
<a href=""mailto:o.ff.icen.kem.43@gmail.com"">o.ff.icen.kem.43@gmail.com</a>
<a href=""mailto:offi.cen.k.em.43@gmail.com"">offi.cen.k.em.43@gmail.com</a>
<a href=""mailto:o.f.fi.cenkem.4.3@gmail.com"">o.f.fi.cenkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.icenk.e.m.43@gmail.com"">o.f.f.icenk.e.m.43@gmail.com</a>
<a href=""mailto:offic.enk.e.m.4.3@gmail.com"">offic.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.fic.e.n.k.e.m.43@gmail.com"">o.f.fic.e.n.k.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.icen.k.em.43@gmail.com"">o.ff.icen.k.em.43@gmail.com</a>
<a href=""mailto:o.f.f.i.c.en.k.e.m.43@gmail.com"">o.f.f.i.c.en.k.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.n.kem43@gmail.com"">o.ff.i.c.e.n.kem43@gmail.com</a>
<a href=""mailto:off.ic.e.nkem.4.3@gmail.com"">off.ic.e.nkem.4.3@gmail.com</a>
<a href=""mailto:o.f.fi.cenke.m.43@gmail.com"">o.f.fi.cenke.m.43@gmail.com</a>
<a href=""mailto:o.f.fi.c.enke.m4.3@gmail.com"">o.f.fi.c.enke.m4.3@gmail.com</a>
<a href=""mailto:officenk.em.43@gmail.com"">officenk.em.43@gmail.com</a>
<a href=""mailto:of.fic.e.n.kem43@gmail.com"">of.fic.e.n.kem43@gmail.com</a>
<a href=""mailto:of.f.ic.enk.e.m.4.3@gmail.com"">of.f.ic.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ffi.cen.k.e.m43@gmail.com"">o.ffi.cen.k.e.m43@gmail.com</a>
<a href=""mailto:of.fi.ce.nkem.4.3@gmail.com"">of.fi.ce.nkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.en.ke.m4.3@gmail.com"">o.f.f.ic.en.ke.m4.3@gmail.com</a>
<a href=""mailto:o.fficenk.e.m4.3@gmail.com"">o.fficenk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ffic.e.n.k.e.m.43@gmail.com"">o.ffic.e.n.k.e.m.43@gmail.com</a>
<a href=""mailto:of.fic.enke.m.4.3@gmail.com"">of.fic.enke.m.4.3@gmail.com</a>
<a href=""mailto:o.ff.ice.n.k.em43@gmail.com"">o.ff.ice.n.k.em43@gmail.com</a>
<a href=""mailto:o.f.fic.e.nk.e.m43@gmail.com"">o.f.fic.e.nk.e.m43@gmail.com</a>
<a href=""mailto:offi.c.en.kem4.3@gmail.com"">offi.c.en.kem4.3@gmail.com</a>
<a href=""mailto:o.ff.ic.enke.m4.3@gmail.com"">o.ff.ic.enke.m4.3@gmail.com</a>
<a href=""mailto:offi.c.en.kem.43@gmail.com"">offi.c.en.kem.43@gmail.com</a>
<a href=""mailto:of.fi.ce.n.ke.m.43@gmail.com"">of.fi.ce.n.ke.m.43@gmail.com</a>
<a href=""mailto:officen.k.em.43@gmail.com"">officen.k.em.43@gmail.com</a>
<a href=""mailto:o.ffic.e.nkem.4.3@gmail.com"">o.ffic.e.nkem.4.3@gmail.com</a>
<a href=""mailto:offi.c.e.nk.em.4.3@gmail.com"">offi.c.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.nkem.4.3@gmail.com"">o.f.f.i.ce.nkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.ice.n.kem.43@gmail.com"">o.f.f.ice.n.kem.43@gmail.com</a>
<a href=""mailto:o.f.fi.cenk.em.43@gmail.com"">o.f.fi.cenk.em.43@gmail.com</a>
<a href=""mailto:o.ffi.ce.n.kem4.3@gmail.com"">o.ffi.ce.n.kem4.3@gmail.com</a>
<a href=""mailto:of.f.icen.kem.43@gmail.com"">of.f.icen.kem.43@gmail.com</a>
<a href=""mailto:o.ffic.e.nkem4.3@gmail.com"">o.ffic.e.nkem4.3@gmail.com</a>
<a href=""mailto:office.nkem4.3@gmail.com"">office.nkem4.3@gmail.com</a>
<a href=""mailto:of.fic.e.nk.e.m4.3@gmail.com"">of.fic.e.nk.e.m4.3@gmail.com</a>
<a href=""mailto:offi.cenke.m.43@gmail.com"">offi.cenke.m.43@gmail.com</a>
<a href=""mailto:o.f.fic.e.nk.em.43@gmail.com"">o.f.fic.e.nk.em.43@gmail.com</a>
<a href=""mailto:of.f.i.cen.kem.43@gmail.com"">of.f.i.cen.kem.43@gmail.com</a>
<a href=""mailto:office.nke.m43@gmail.com"">office.nke.m43@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.n.ke.m.4.3@gmail.com"">o.f.f.ic.e.n.ke.m.4.3@gmail.com</a>
<a href=""mailto:off.i.cenk.em.43@gmail.com"">off.i.cenk.em.43@gmail.com</a>
<a href=""mailto:off.ic.e.nk.em.4.3@gmail.com"">off.ic.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.n.ke.m43@gmail.com"">o.f.f.i.ce.n.ke.m43@gmail.com</a>
<a href=""mailto:o.ff.ice.nkem.43@gmail.com"">o.ff.ice.nkem.43@gmail.com</a>
<a href=""mailto:o.ffice.n.kem4.3@gmail.com"">o.ffice.n.kem4.3@gmail.com</a>
<a href=""mailto:o.ff.i.ce.nkem.4.3@gmail.com"">o.ff.i.ce.nkem.4.3@gmail.com</a>
<a href=""mailto:o.ff.ic.en.kem4.3@gmail.com"">o.ff.ic.en.kem4.3@gmail.com</a>
<a href=""mailto:offi.c.en.ke.m.4.3@gmail.com"">offi.c.en.ke.m.4.3@gmail.com</a>
<a href=""mailto:o.fficenkem.43@gmail.com"">o.fficenkem.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.enk.e.m.43@gmail.com"">o.ff.i.c.enk.e.m.43@gmail.com</a>
<a href=""mailto:o.ffi.cenkem43@gmail.com"">o.ffi.cenkem43@gmail.com</a>
<a href=""mailto:of.fi.cen.k.em.4.3@gmail.com"">of.fi.cen.k.em.4.3@gmail.com</a>
<a href=""mailto:o.ffice.nke.m.43@gmail.com"">o.ffice.nke.m.43@gmail.com</a>
<a href=""mailto:o.ff.ic.en.k.em4.3@gmail.com"">o.ff.ic.en.k.em4.3@gmail.com</a>
<a href=""mailto:off.ic.e.n.ke.m4.3@gmail.com"">off.ic.e.n.ke.m4.3@gmail.com</a>
<a href=""mailto:o.ffi.c.enke.m.43@gmail.com"">o.ffi.c.enke.m.43@gmail.com</a>
<a href=""mailto:o.f.fic.enk.e.m.43@gmail.com"">o.f.fic.enk.e.m.43@gmail.com</a>
<a href=""mailto:offi.cenkem.43@gmail.com"">offi.cenkem.43@gmail.com</a>
<a href=""mailto:o.ff.i.ce.nk.e.m4.3@gmail.com"">o.ff.i.ce.nk.e.m4.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.enkem.43@gmail.com"">o.f.f.ic.enkem.43@gmail.com</a>
<a href=""mailto:o.ffi.c.en.k.e.m4.3@gmail.com"">o.ffi.c.en.k.e.m4.3@gmail.com</a>
<a href=""mailto:o.ff.ice.n.k.em.43@gmail.com"">o.ff.ice.n.k.em.43@gmail.com</a>
<a href=""mailto:off.ice.nk.e.m43@gmail.com"">off.ice.nk.e.m43@gmail.com</a>
<a href=""mailto:o.fficen.k.e.m43@gmail.com"">o.fficen.k.e.m43@gmail.com</a>
<a href=""mailto:offic.enkem.4.3@gmail.com"">offic.enkem.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e.nke.m43@gmail.com"">o.f.f.i.c.e.nke.m43@gmail.com</a>
<a href=""mailto:of.ficenkem4.3@gmail.com"">of.ficenkem4.3@gmail.com</a>
<a href=""mailto:o.ffic.e.nke.m4.3@gmail.com"">o.ffic.e.nke.m4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enk.em4.3@gmail.com"">o.f.f.i.c.enk.em4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enke.m.43@gmail.com"">o.f.f.i.c.enke.m.43@gmail.com</a>
<a href=""mailto:office.nk.em.43@gmail.com"">office.nk.em.43@gmail.com</a>
<a href=""mailto:offic.e.nk.em.4.3@gmail.com"">offic.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:of.f.i.cenke.m43@gmail.com"">of.f.i.cenke.m43@gmail.com</a>
<a href=""mailto:offic.enkem4.3@gmail.com"">offic.enkem4.3@gmail.com</a>
<a href=""mailto:o.ffice.n.k.em43@gmail.com"">o.ffice.n.k.em43@gmail.com</a>
<a href=""mailto:of.fi.cen.kem.43@gmail.com"">of.fi.cen.kem.43@gmail.com</a>
<a href=""mailto:of.fi.c.e.n.ke.m4.3@gmail.com"">of.fi.c.e.n.ke.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.cen.k.em43@gmail.com"">o.ff.i.cen.k.em43@gmail.com</a>
<a href=""mailto:offic.en.k.em.4.3@gmail.com"">offic.en.k.em.4.3@gmail.com</a>
<a href=""mailto:of.f.ice.nk.e.m.4.3@gmail.com"">of.f.ice.nk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ffic.en.k.e.m43@gmail.com"">o.ffic.en.k.e.m43@gmail.com</a>
<a href=""mailto:o.f.f.ice.nk.em4.3@gmail.com"">o.f.f.ice.nk.em4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.cenke.m43@gmail.com"">o.f.f.i.cenke.m43@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.nkem.4.3@gmail.com"">o.ff.i.c.e.nkem.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.cenk.e.m.43@gmail.com"">o.ff.i.cenk.e.m.43@gmail.com</a>
<a href=""mailto:of.fic.enke.m43@gmail.com"">of.fic.enke.m43@gmail.com</a>
<a href=""mailto:o.ffi.ce.nk.e.m43@gmail.com"">o.ffi.ce.nk.e.m43@gmail.com</a>
<a href=""mailto:o.ff.i.c.enkem43@gmail.com"">o.ff.i.c.enkem43@gmail.com</a>
<a href=""mailto:of.f.ice.n.ke.m.4.3@gmail.com"">of.f.ice.n.ke.m.4.3@gmail.com</a>
<a href=""mailto:of.fi.c.e.nk.em.43@gmail.com"">of.fi.c.e.nk.em.43@gmail.com</a>
<a href=""mailto:offic.e.n.ke.m43@gmail.com"">offic.e.n.ke.m43@gmail.com</a>
<a href=""mailto:of.fi.ce.n.k.e.m.43@gmail.com"">of.fi.ce.n.k.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.ice.nk.e.m.43@gmail.com"">o.ff.ice.nk.e.m.43@gmail.com</a>
<a href=""mailto:off.icen.k.em43@gmail.com"">off.icen.k.em43@gmail.com</a>
<a href=""mailto:off.i.c.e.nk.em.43@gmail.com"">off.i.c.e.nk.em.43@gmail.com</a>
<a href=""mailto:of.ficen.k.em43@gmail.com"">of.ficen.k.em43@gmail.com</a>
<a href=""mailto:offi.c.en.k.e.m43@gmail.com"">offi.c.en.k.e.m43@gmail.com</a>
<a href=""mailto:of.fic.e.n.k.e.m.43@gmail.com"">of.fic.e.n.k.e.m.43@gmail.com</a>
<a href=""mailto:o.f.f.icenk.em.4.3@gmail.com"">o.f.f.icenk.em.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.en.k.e.m4.3@gmail.com"">o.ff.i.c.en.k.e.m4.3@gmail.com</a>
<a href=""mailto:off.i.c.e.n.ke.m43@gmail.com"">off.i.c.e.n.ke.m43@gmail.com</a>
<a href=""mailto:o.fficenkem4.3@gmail.com"">o.fficenkem4.3@gmail.com</a>
<a href=""mailto:o.ffic.e.nk.e.m4.3@gmail.com"">o.ffic.e.nk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ff.i.cen.kem43@gmail.com"">o.ff.i.cen.kem43@gmail.com</a>
<a href=""mailto:off.i.c.e.n.kem43@gmail.com"">off.i.c.e.n.kem43@gmail.com</a>
<a href=""mailto:offi.cen.kem43@gmail.com"">offi.cen.kem43@gmail.com</a>
<a href=""mailto:o.ffice.nk.e.m.43@gmail.com"">o.ffice.nk.e.m.43@gmail.com</a>
<a href=""mailto:o.f.f.icen.k.em4.3@gmail.com"">o.f.f.icen.k.em4.3@gmail.com</a>
<a href=""mailto:o.ffi.cen.k.e.m.4.3@gmail.com"">o.ffi.cen.k.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.n.k.em43@gmail.com"">o.f.f.i.ce.n.k.em43@gmail.com</a>
<a href=""mailto:of.fic.e.nke.m.43@gmail.com"">of.fic.e.nke.m.43@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.n.k.em4.3@gmail.com"">o.ff.i.c.e.n.k.em4.3@gmail.com</a>
<a href=""mailto:of.fi.ce.nk.e.m.43@gmail.com"">of.fi.ce.nk.e.m.43@gmail.com</a>
<a href=""mailto:o.ff.ice.n.k.e.m4.3@gmail.com"">o.ff.ice.n.k.e.m4.3@gmail.com</a>
<a href=""mailto:o.f.fic.enk.em43@gmail.com"">o.f.fic.enk.em43@gmail.com</a>
<a href=""mailto:of.f.i.cen.k.em4.3@gmail.com"">of.f.i.cen.k.em4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.en.kem4.3@gmail.com"">o.f.f.i.c.en.kem4.3@gmail.com</a>
<a href=""mailto:o.fficen.ke.m.4.3@gmail.com"">o.fficen.ke.m.4.3@gmail.com</a>
<a href=""mailto:of.fi.c.en.ke.m.43@gmail.com"">of.fi.c.en.ke.m.43@gmail.com</a>
<a href=""mailto:offi.cenk.e.m.4.3@gmail.com"">offi.cenk.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.fice.nkem4.3@gmail.com"">o.f.fice.nkem4.3@gmail.com</a>
<a href=""mailto:of.fice.n.kem.43@gmail.com"">of.fice.n.kem.43@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enk.em.43@gmail.com"">o.f.f.i.c.enk.em.43@gmail.com</a>
<a href=""mailto:o.f.fice.n.k.em.4.3@gmail.com"">o.f.fice.n.k.em.4.3@gmail.com</a>
<a href=""mailto:o.ffic.enk.e.m.4.3@gmail.com"">o.ffic.enk.e.m.4.3@gmail.com</a>
<a href=""mailto:of.fice.nk.em.4.3@gmail.com"">of.fice.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.n.ke.m.43@gmail.com"">o.f.fi.c.e.n.ke.m.43@gmail.com</a>
<a href=""mailto:off.i.c.enke.m4.3@gmail.com"">off.i.c.enke.m4.3@gmail.com</a>
<a href=""mailto:of.fi.c.enk.e.m4.3@gmail.com"">of.fi.c.enk.e.m4.3@gmail.com</a>
<a href=""mailto:o.ffice.nkem43@gmail.com"">o.ffice.nkem43@gmail.com</a>
<a href=""mailto:of.ficen.k.e.m.4.3@gmail.com"">of.ficen.k.e.m.4.3@gmail.com</a>
<a href=""mailto:o.ffic.enk.em.4.3@gmail.com"">o.ffic.enk.em.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.cenk.em43@gmail.com"">o.f.f.i.cenk.em43@gmail.com</a>
<a href=""mailto:of.f.i.c.e.nk.em.4.3@gmail.com"">of.f.i.c.e.nk.em.4.3@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.nk.em.43@gmail.com"">o.ff.i.c.e.nk.em.43@gmail.com</a>
<a href=""mailto:o.f.fic.e.n.kem43@gmail.com"">o.f.fic.e.n.kem43@gmail.com</a>
<a href=""mailto:o.ffi.c.en.ke.m.4.3@gmail.com"">o.ffi.c.en.ke.m.4.3@gmail.com</a>
<a href=""mailto:o.f.f.ic.enk.e.m.43@gmail.com"">o.f.f.ic.enk.e.m.43@gmail.com</a>
<a href=""mailto:of.f.ice.nk.e.m43@gmail.com"">of.f.ice.nk.e.m43@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.n.k.e.m.4.3@gmail.com"">o.f.fi.c.e.n.k.e.m.4.3@gmail.com</a>
<a href=""mailto:o.f.f.i.c.enke.m43@gmail.com"">o.f.f.i.c.enke.m43@gmail.com</a>
<a href=""mailto:offi.cenke.m43@gmail.com"">offi.cenke.m43@gmail.com</a>
<a href=""mailto:o.f.f.i.cen.k.e.m.43@gmail.com"">o.f.f.i.cen.k.e.m.43@gmail.com</a>
<a href=""mailto:o.f.f.ice.n.k.e.m4.3@gmail.com"">o.f.f.ice.n.k.e.m4.3@gmail.com</a>
<a href=""mailto:o.f.fi.ce.n.ke.m4.3@gmail.com"">o.f.fi.ce.n.ke.m4.3@gmail.com</a>
<a href=""mailto:offic.en.kem43@gmail.com"">offic.en.kem43@gmail.com</a>
<a href=""mailto:o.f.fice.nk.em.43@gmail.com"">o.f.fice.nk.em.43@gmail.com</a>
<a href=""mailto:o.f.fice.nke.m4.3@gmail.com"">o.f.fice.nke.m4.3@gmail.com</a>
<a href=""mailto:of.fi.cenk.em.43@gmail.com"">of.fi.cenk.em.43@gmail.com</a>
<a href=""mailto:info@email-mkts.fi"">info@email-mkts.fi</a>
<a href=""mailto:qbank3677@gmail.com"">qbank3677@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.677@gmail.com"">q.b.a.nk.3.677@gmail.com</a>
<a href=""mailto:qba.n.k.36.7.7@gmail.com"">qba.n.k.36.7.7@gmail.com</a>
<a href=""mailto:qbank.3677@gmail.com"">qbank.3677@gmail.com</a>
<a href=""mailto:q.ban.k.3.67.7@gmail.com"">q.ban.k.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k367.7@gmail.com"">qb.a.n.k367.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k3.67.7@gmail.com"">q.b.a.n.k3.67.7@gmail.com</a>
<a href=""mailto:qbank3677@gmail.com"">qbank3677@gmail.com</a>
<a href=""mailto:qban.k36.77@gmail.com"">qban.k36.77@gmail.com</a>
<a href=""mailto:q.b.an.k.367.7@gmail.com"">q.b.an.k.367.7@gmail.com</a>
<a href=""mailto:q.ba.nk3.67.7@gmail.com"">q.ba.nk3.67.7@gmail.com</a>
<a href=""mailto:q.ba.nk.36.77@gmail.com"">q.ba.nk.36.77@gmail.com</a>
<a href=""mailto:qb.a.n.k.367.7@gmail.com"">qb.a.n.k.367.7@gmail.com</a>
<a href=""mailto:qba.n.k.3.67.7@gmail.com"">qba.n.k.3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k36.7.7@gmail.com"">q.b.a.n.k36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.36.77@gmail.com"">q.b.an.k.36.77@gmail.com</a>
<a href=""mailto:qbank.3.67.7@gmail.com"">qbank.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k3.677@gmail.com"">qb.a.n.k3.677@gmail.com</a>
<a href=""mailto:q.b.an.k.3.67.7@gmail.com"">q.b.an.k.3.67.7@gmail.com</a>
<a href=""mailto:qb.ank367.7@gmail.com"">qb.ank367.7@gmail.com</a>
<a href=""mailto:qba.nk.36.7.7@gmail.com"">qba.nk.36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.36.7.7@gmail.com"">q.b.an.k.36.7.7@gmail.com</a>
<a href=""mailto:q.b.ank36.77@gmail.com"">q.b.ank36.77@gmail.com</a>
<a href=""mailto:q.ban.k.367.7@gmail.com"">q.ban.k.367.7@gmail.com</a>
<a href=""mailto:q.b.a.nk367.7@gmail.com"">q.b.a.nk367.7@gmail.com</a>
<a href=""mailto:q.b.an.k3.6.77@gmail.com"">q.b.an.k3.6.77@gmail.com</a>
<a href=""mailto:qb.a.n.k3677@gmail.com"">qb.a.n.k3677@gmail.com</a>
<a href=""mailto:q.b.a.nk.367.7@gmail.com"">q.b.a.nk.367.7@gmail.com</a>
<a href=""mailto:q.ban.k36.77@gmail.com"">q.ban.k36.77@gmail.com</a>
<a href=""mailto:q.b.ank.3.67.7@gmail.com"">q.b.ank.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k.3.6.7.7@gmail.com"">qb.a.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qb.ank.3.677@gmail.com"">qb.ank.3.677@gmail.com</a>
<a href=""mailto:qbank3.6.77@gmail.com"">qbank3.6.77@gmail.com</a>
<a href=""mailto:qb.a.nk367.7@gmail.com"">qb.a.nk367.7@gmail.com</a>
<a href=""mailto:qba.nk3.67.7@gmail.com"">qba.nk3.67.7@gmail.com</a>
<a href=""mailto:q.bank3.6.77@gmail.com"">q.bank3.6.77@gmail.com</a>
<a href=""mailto:qba.n.k36.7.7@gmail.com"">qba.n.k36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.3.677@gmail.com"">q.b.an.k.3.677@gmail.com</a>
<a href=""mailto:qb.an.k3.6.7.7@gmail.com"">qb.an.k3.6.7.7@gmail.com</a>
<a href=""mailto:qban.k3677@gmail.com"">qban.k3677@gmail.com</a>
<a href=""mailto:q.b.ank.3.677@gmail.com"">q.b.ank.3.677@gmail.com</a>
<a href=""mailto:q.b.a.n.k.367.7@gmail.com"">q.b.a.n.k.367.7@gmail.com</a>
<a href=""mailto:qbank.3.6.77@gmail.com"">qbank.3.6.77@gmail.com</a>
<a href=""mailto:qb.ank.36.7.7@gmail.com"">qb.ank.36.7.7@gmail.com</a>
<a href=""mailto:qban.k3.6.7.7@gmail.com"">qban.k3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.6.7.7@gmail.com"">q.b.a.nk.3.6.7.7@gmail.com</a>
<a href=""mailto:qba.n.k367.7@gmail.com"">qba.n.k367.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.677@gmail.com"">qb.a.nk.3.677@gmail.com</a>
<a href=""mailto:qb.a.n.k36.7.7@gmail.com"">qb.a.n.k36.7.7@gmail.com</a>
<a href=""mailto:q.bank.367.7@gmail.com"">q.bank.367.7@gmail.com</a>
<a href=""mailto:q.ban.k.36.77@gmail.com"">q.ban.k.36.77@gmail.com</a>
<a href=""mailto:q.b.ank.367.7@gmail.com"">q.b.ank.367.7@gmail.com</a>
<a href=""mailto:q.ba.n.k.36.7.7@gmail.com"">q.ba.n.k.36.7.7@gmail.com</a>
<a href=""mailto:qb.a.n.k.3.67.7@gmail.com"">qb.a.n.k.3.67.7@gmail.com</a>
<a href=""mailto:qban.k.3.6.7.7@gmail.com"">qban.k.3.6.7.7@gmail.com</a>
<a href=""mailto:q.bank.3.67.7@gmail.com"">q.bank.3.67.7@gmail.com</a>
<a href=""mailto:q.bank3.67.7@gmail.com"">q.bank3.67.7@gmail.com</a>
<a href=""mailto:qb.an.k.3677@gmail.com"">qb.an.k.3677@gmail.com</a>
<a href=""mailto:q.ba.nk3.6.77@gmail.com"">q.ba.nk3.6.77@gmail.com</a>
<a href=""mailto:q.b.an.k3.677@gmail.com"">q.b.an.k3.677@gmail.com</a>
<a href=""mailto:q.bank.36.77@gmail.com"">q.bank.36.77@gmail.com</a>
<a href=""mailto:q.bank3677@gmail.com"">q.bank3677@gmail.com</a>
<a href=""mailto:q.ba.n.k3.6.77@gmail.com"">q.ba.n.k3.6.77@gmail.com</a>
<a href=""mailto:qb.an.k36.77@gmail.com"">qb.an.k36.77@gmail.com</a>
<a href=""mailto:q.ban.k367.7@gmail.com"">q.ban.k367.7@gmail.com</a>
<a href=""mailto:qba.n.k.3677@gmail.com"">qba.n.k.3677@gmail.com</a>
<a href=""mailto:q.ba.nk.3.677@gmail.com"">q.ba.nk.3.677@gmail.com</a>
<a href=""mailto:qba.n.k.3.6.7.7@gmail.com"">qba.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qbank36.7.7@gmail.com"">qbank36.7.7@gmail.com</a>
<a href=""mailto:qba.nk.367.7@gmail.com"">qba.nk.367.7@gmail.com</a>
<a href=""mailto:qb.a.n.k.3.677@gmail.com"">qb.a.n.k.3.677@gmail.com</a>
<a href=""mailto:qb.ank3.6.7.7@gmail.com"">qb.ank3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.ank3.677@gmail.com"">q.b.ank3.677@gmail.com</a>
<a href=""mailto:qban.k3.677@gmail.com"">qban.k3.677@gmail.com</a>
<a href=""mailto:qban.k367.7@gmail.com"">qban.k367.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.6.77@gmail.com"">qb.a.nk.3.6.77@gmail.com</a>
<a href=""mailto:q.b.a.nk3.677@gmail.com"">q.b.a.nk3.677@gmail.com</a>
<a href=""mailto:qbank3.67.7@gmail.com"">qbank3.67.7@gmail.com</a>
<a href=""mailto:qb.ank.36.77@gmail.com"">qb.ank.36.77@gmail.com</a>
<a href=""mailto:qba.n.k.3.6.77@gmail.com"">qba.n.k.3.6.77@gmail.com</a>
<a href=""mailto:q.ban.k.3.677@gmail.com"">q.ban.k.3.677@gmail.com</a>
<a href=""mailto:qb.a.nk.36.7.7@gmail.com"">qb.a.nk.36.7.7@gmail.com</a>
<a href=""mailto:qb.ank3.67.7@gmail.com"">qb.ank3.67.7@gmail.com</a>
<a href=""mailto:qb.an.k.367.7@gmail.com"">qb.an.k.367.7@gmail.com</a>
<a href=""mailto:q.ban.k.36.7.7@gmail.com"">q.ban.k.36.7.7@gmail.com</a>
<a href=""mailto:qb.an.k.3.6.7.7@gmail.com"">qb.an.k.3.6.7.7@gmail.com</a>
<a href=""mailto:q.bank.3.6.77@gmail.com"">q.bank.3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.3677@gmail.com"">q.ba.n.k.3677@gmail.com</a>
<a href=""mailto:q.b.ank367.7@gmail.com"">q.b.ank367.7@gmail.com</a>
<a href=""mailto:q.ban.k36.7.7@gmail.com"">q.ban.k36.7.7@gmail.com</a>
<a href=""mailto:q.bank3.677@gmail.com"">q.bank3.677@gmail.com</a>
<a href=""mailto:q.ban.k3.677@gmail.com"">q.ban.k3.677@gmail.com</a>
<a href=""mailto:q.b.ank3.6.77@gmail.com"">q.b.ank3.6.77@gmail.com</a>
<a href=""mailto:qbank36.77@gmail.com"">qbank36.77@gmail.com</a>
<a href=""mailto:qb.a.nk3.6.77@gmail.com"">qb.a.nk3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.3.677@gmail.com"">q.ba.n.k.3.677@gmail.com</a>
<a href=""mailto:q.ban.k.3677@gmail.com"">q.ban.k.3677@gmail.com</a>
<a href=""mailto:qba.n.k36.77@gmail.com"">qba.n.k36.77@gmail.com</a>
<a href=""mailto:qba.nk3.6.77@gmail.com"">qba.nk3.6.77@gmail.com</a>
<a href=""mailto:qb.a.n.k3.67.7@gmail.com"">qb.a.n.k3.67.7@gmail.com</a>
<a href=""mailto:qb.an.k3.67.7@gmail.com"">qb.an.k3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.nk36.7.7@gmail.com"">q.b.a.nk36.7.7@gmail.com</a>
<a href=""mailto:qbank.36.7.7@gmail.com"">qbank.36.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk.36.77@gmail.com"">qb.a.nk.36.77@gmail.com</a>
<a href=""mailto:qbank.36.77@gmail.com"">qbank.36.77@gmail.com</a>
<a href=""mailto:qb.ank.3.6.7.7@gmail.com"">qb.ank.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.ank.36.7.7@gmail.com"">q.b.ank.36.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.6.7.7@gmail.com"">qb.a.nk.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k3677@gmail.com"">q.b.a.n.k3677@gmail.com</a>
<a href=""mailto:qb.a.n.k36.77@gmail.com"">qb.a.n.k36.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.367.7@gmail.com"">q.ba.n.k.367.7@gmail.com</a>
<a href=""mailto:q.b.an.k3677@gmail.com"">q.b.an.k3677@gmail.com</a>
<a href=""mailto:q.b.a.n.k.36.7.7@gmail.com"">q.b.a.n.k.36.7.7@gmail.com</a>
<a href=""mailto:q.bank36.77@gmail.com"">q.bank36.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k36.77@gmail.com"">q.b.a.n.k36.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k.3.6.77@gmail.com"">q.b.a.n.k.3.6.77@gmail.com</a>
<a href=""mailto:qba.n.k.367.7@gmail.com"">qba.n.k.367.7@gmail.com</a>
<a href=""mailto:qban.k.36.77@gmail.com"">qban.k.36.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k3.677@gmail.com"">q.b.a.n.k3.677@gmail.com</a>
<a href=""mailto:qb.a.nk3.6.7.7@gmail.com"">qb.a.nk3.6.7.7@gmail.com</a>
<a href=""mailto:qb.an.k3.6.77@gmail.com"">qb.an.k3.6.77@gmail.com</a>
<a href=""mailto:qb.an.k.36.7.7@gmail.com"">qb.an.k.36.7.7@gmail.com</a>
<a href=""mailto:qbank3.6.7.7@gmail.com"">qbank3.6.7.7@gmail.com</a>
<a href=""mailto:q.ba.nk.3.6.77@gmail.com"">q.ba.nk.3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k3.67.7@gmail.com"">q.ba.n.k3.67.7@gmail.com</a>
<a href=""mailto:q.ba.nk.367.7@gmail.com"">q.ba.nk.367.7@gmail.com</a>
<a href=""mailto:q.ba.n.k3677@gmail.com"">q.ba.n.k3677@gmail.com</a>
<a href=""mailto:q.b.ank3.6.7.7@gmail.com"">q.b.ank3.6.7.7@gmail.com</a>
<a href=""mailto:qban.k.3.677@gmail.com"">qban.k.3.677@gmail.com</a>
<a href=""mailto:q.ba.nk.3.67.7@gmail.com"">q.ba.nk.3.67.7@gmail.com</a>
<a href=""mailto:qbank367.7@gmail.com"">qbank367.7@gmail.com</a>
<a href=""mailto:q.ba.nk.3677@gmail.com"">q.ba.nk.3677@gmail.com</a>
<a href=""mailto:q.ba.n.k367.7@gmail.com"">q.ba.n.k367.7@gmail.com</a>
<a href=""mailto:q.bank3.6.7.7@gmail.com"">q.bank3.6.7.7@gmail.com</a>
<a href=""mailto:qba.nk.3.6.77@gmail.com"">qba.nk.3.6.77@gmail.com</a>
<a href=""mailto:qb.ank3677@gmail.com"">qb.ank3677@gmail.com</a>
<a href=""mailto:q.ba.nk3.677@gmail.com"">q.ba.nk3.677@gmail.com</a>
<a href=""mailto:qb.a.nk3677@gmail.com"">qb.a.nk3677@gmail.com</a>
<a href=""mailto:qb.ank3.6.77@gmail.com"">qb.ank3.6.77@gmail.com</a>
<a href=""mailto:qb.an.k367.7@gmail.com"">qb.an.k367.7@gmail.com</a>
<a href=""mailto:qb.ank.3677@gmail.com"">qb.ank.3677@gmail.com</a>
<a href=""mailto:q.bank.3677@gmail.com"">q.bank.3677@gmail.com</a>
<a href=""mailto:q.b.an.k.3677@gmail.com"">q.b.an.k.3677@gmail.com</a>
<a href=""mailto:q.ba.n.k.36.77@gmail.com"">q.ba.n.k.36.77@gmail.com</a>
<a href=""mailto:qb.an.k.3.6.77@gmail.com"">qb.an.k.3.6.77@gmail.com</a>
<a href=""mailto:q.b.ank36.7.7@gmail.com"">q.b.ank36.7.7@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.6.77@gmail.com"">q.b.a.nk.3.6.77@gmail.com</a>
<a href=""mailto:q.b.an.k3.6.7.7@gmail.com"">q.b.an.k3.6.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk3.67.7@gmail.com"">qb.a.nk3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.nk3677@gmail.com"">q.b.a.nk3677@gmail.com</a>
<a href=""mailto:q.b.a.nk.3.67.7@gmail.com"">q.b.a.nk.3.67.7@gmail.com</a>
<a href=""mailto:qb.ank.3.6.77@gmail.com"">qb.ank.3.6.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k3.6.77@gmail.com"">q.b.a.n.k3.6.77@gmail.com</a>
<a href=""mailto:q.bank.3.6.7.7@gmail.com"">q.bank.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.nk.36.77@gmail.com"">q.b.a.nk.36.77@gmail.com</a>
<a href=""mailto:q.ba.nk36.7.7@gmail.com"">q.ba.nk36.7.7@gmail.com</a>
<a href=""mailto:q.ban.k.3.6.7.7@gmail.com"">q.ban.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qba.nk3677@gmail.com"">qba.nk3677@gmail.com</a>
<a href=""mailto:qb.ank36.77@gmail.com"">qb.ank36.77@gmail.com</a>
<a href=""mailto:qb.ank36.7.7@gmail.com"">qb.ank36.7.7@gmail.com</a>
<a href=""mailto:q.b.ank3677@gmail.com"">q.b.ank3677@gmail.com</a>
<a href=""mailto:q.b.ank.3.6.7.7@gmail.com"">q.b.ank.3.6.7.7@gmail.com</a>
<a href=""mailto:q.bank367.7@gmail.com"">q.bank367.7@gmail.com</a>
<a href=""mailto:q.ba.n.k36.77@gmail.com"">q.ba.n.k36.77@gmail.com</a>
<a href=""mailto:q.ban.k3.67.7@gmail.com"">q.ban.k3.67.7@gmail.com</a>
<a href=""mailto:qban.k.3.67.7@gmail.com"">qban.k.3.67.7@gmail.com</a>
<a href=""mailto:qbank3.677@gmail.com"">qbank3.677@gmail.com</a>
<a href=""mailto:qb.a.nk.3677@gmail.com"">qb.a.nk.3677@gmail.com</a>
<a href=""mailto:q.ba.n.k.3.6.7.7@gmail.com"">q.ba.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k.36.77@gmail.com"">q.b.a.n.k.36.77@gmail.com</a>
<a href=""mailto:q.b.ank.3677@gmail.com"">q.b.ank.3677@gmail.com</a>
<a href=""mailto:q.b.ank.36.77@gmail.com"">q.b.ank.36.77@gmail.com</a>
<a href=""mailto:qb.a.nk36.7.7@gmail.com"">qb.a.nk36.7.7@gmail.com</a>
<a href=""mailto:q.b.an.k.3.6.77@gmail.com"">q.b.an.k.3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k3.677@gmail.com"">q.ba.n.k3.677@gmail.com</a>
<a href=""mailto:qb.a.nk3.677@gmail.com"">qb.a.nk3.677@gmail.com</a>
<a href=""mailto:qbank.3.677@gmail.com"">qbank.3.677@gmail.com</a>
<a href=""mailto:qb.a.n.k.36.77@gmail.com"">qb.a.n.k.36.77@gmail.com</a>
<a href=""mailto:qb.an.k.36.77@gmail.com"">qb.an.k.36.77@gmail.com</a>
<a href=""mailto:q.ba.nk.3.6.7.7@gmail.com"">q.ba.nk.3.6.7.7@gmail.com</a>
<a href=""mailto:q.b.ank3.67.7@gmail.com"">q.b.ank3.67.7@gmail.com</a>
<a href=""mailto:qban.k3.6.77@gmail.com"">qban.k3.6.77@gmail.com</a>
<a href=""mailto:q.ba.n.k.3.67.7@gmail.com"">q.ba.n.k.3.67.7@gmail.com</a>
<a href=""mailto:qb.a.n.k3.6.77@gmail.com"">qb.a.n.k3.6.77@gmail.com</a>
<a href=""mailto:qba.nk.3677@gmail.com"">qba.nk.3677@gmail.com</a>
<a href=""mailto:qb.an.k36.7.7@gmail.com"">qb.an.k36.7.7@gmail.com</a>
<a href=""mailto:q.ban.k.3.6.77@gmail.com"">q.ban.k.3.6.77@gmail.com</a>
<a href=""mailto:qba.n.k3677@gmail.com"">qba.n.k3677@gmail.com</a>
<a href=""mailto:q.b.an.k36.7.7@gmail.com"">q.b.an.k36.7.7@gmail.com</a>
<a href=""mailto:q.ba.nk367.7@gmail.com"">q.ba.nk367.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k.3.6.7.7@gmail.com"">q.b.a.n.k.3.6.7.7@gmail.com</a>
<a href=""mailto:qb.a.nk.3.67.7@gmail.com"">qb.a.nk.3.67.7@gmail.com</a>
<a href=""mailto:q.b.a.nk3.6.7.7@gmail.com"">q.b.a.nk3.6.7.7@gmail.com</a>
<a href=""mailto:q.ban.k3677@gmail.com"">q.ban.k3677@gmail.com</a>
<a href=""mailto:qb.ank.3.67.7@gmail.com"">qb.ank.3.67.7@gmail.com</a>
<a href=""mailto:qba.n.k3.6.77@gmail.com"">qba.n.k3.6.77@gmail.com</a>
<a href=""mailto:q.b.a.n.k.3677@gmail.com"">q.b.a.n.k.3677@gmail.com</a>
<a href=""mailto:qba.nk3.6.7.7@gmail.com"">qba.nk3.6.7.7@gmail.com</a>
<a href=""mailto:qba.nk367.7@gmail.com"">qba.nk367.7@gmail.com</a>
<a href=""mailto:q.b.a.n.k367.7@gmail.com"">q.b.a.n.k367.7@gmail.com</a>
<a href=""mailto:q.b.a.nk3.67.7@gmail.com"">q.b.a.nk3.67.7@gmail.com</a>
<a href=""mailto:fidelity.info.plc@gmail.com"">fidelity.info.plc@gmail.com</a>
<a href=""mailto:fide.li.ty...in.fo...p.l.c@gmail.com"">fide.li.ty...in.fo...p.l.c@gmail.com</a>
<a href=""mailto:fi.de.l.it.y..i.nfo...p.lc@gmail.com"">fi.de.l.it.y..i.nfo...p.lc@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y...i.n.fo...plc@gmail.com"">fid.e.l.i.t.y...i.n.fo...plc@gmail.com</a>
<a href=""mailto:f.id.elit.y..info..p.lc@gmail.com"">f.id.elit.y..info..p.lc@gmail.com</a>
<a href=""mailto:f.ide.l.ity..i.n.fo...p.lc@gmail.com"">f.ide.l.ity..i.n.fo...p.lc@gmail.com</a>
<a href=""mailto:fid.e.lit.y..i.n.fo..p.lc@gmail.com"">fid.e.lit.y..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:f.i.de.l.i.t.y.in.f.o..plc@gmail.com"">f.i.de.l.i.t.y.in.f.o..plc@gmail.com</a>
<a href=""mailto:fid.el.i.t.y...i.nfo..p.lc@gmail.com"">fid.el.i.t.y...i.nfo..p.lc@gmail.com</a>
<a href=""mailto:f.ide.li.t.y..info.p.lc@gmail.com"">f.ide.li.t.y..info.p.lc@gmail.com</a>
<a href=""mailto:f.idel.i.t.y...info...plc@gmail.com"">f.idel.i.t.y...info...plc@gmail.com</a>
<a href=""mailto:f.id.eli.ty..in.f.o..p.lc@gmail.com"">f.id.eli.ty..in.f.o..p.lc@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y...inf.o...p.l.c@gmail.com"">f.ide.l.i.t.y...inf.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.it.y.inf.o..plc@gmail.com"">fid.e.l.it.y.inf.o..plc@gmail.com</a>
<a href=""mailto:f.i.de.lity..in.f.o..p.lc@gmail.com"">f.i.de.lity..in.f.o..p.lc@gmail.com</a>
<a href=""mailto:fi.d.elit.y..in.f.o.plc@gmail.com"">fi.d.elit.y..in.f.o.plc@gmail.com</a>
<a href=""mailto:fidelit.y..info...p.l.c@gmail.com"">fidelit.y..info...p.l.c@gmail.com</a>
<a href=""mailto:fi.de.li.ty.i.nfo..pl.c@gmail.com"">fi.de.li.ty.i.nfo..pl.c@gmail.com</a>
<a href=""mailto:f.id.e.li.ty.in.f.o...p.l.c@gmail.com"">f.id.e.li.ty.in.f.o...p.l.c@gmail.com</a>
<a href=""mailto:f.i.d.el.it.y..i.n.f.o..p.lc@gmail.com"">f.i.d.el.it.y..i.n.f.o..p.lc@gmail.com</a>
<a href=""mailto:fid.el.i.ty...i.nfo.plc@gmail.com"">fid.el.i.ty...i.nfo.plc@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y...inf.o..pl.c@gmail.com"">fid.e.l.i.t.y...inf.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.e.li.t.y.i.nf.o..plc@gmail.com"">f.i.d.e.li.t.y.i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.id.elit.y..i.n.f.o..p.lc@gmail.com"">f.id.elit.y..i.n.f.o..p.lc@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..i.nfo..pl.c@gmail.com"">f.ide.l.i.ty..i.nfo..pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.t.y...inf.o..p.l.c@gmail.com"">fid.e.li.t.y...inf.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.de.lity..i.n.f.o..p.l.c@gmail.com"">fi.de.lity..i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.l.it.y..in.f.o.pl.c@gmail.com"">f.i.de.l.it.y..in.f.o.pl.c@gmail.com</a>
<a href=""mailto:fi.d.elity..inf.o...plc@gmail.com"">fi.d.elity..inf.o...plc@gmail.com</a>
<a href=""mailto:f.i.d.el.i.t.y..i.n.fo.p.lc@gmail.com"">f.i.d.el.i.t.y..i.n.fo.p.lc@gmail.com</a>
<a href=""mailto:fi.de.l.it.y..in.fo..plc@gmail.com"">fi.de.l.it.y..in.fo..plc@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y..inf.o..p.l.c@gmail.com"">f.i.de.li.t.y..inf.o..p.l.c@gmail.com</a>
<a href=""mailto:fid.el.i.t.y.in.f.o...plc@gmail.com"">fid.el.i.t.y.in.f.o...plc@gmail.com</a>
<a href=""mailto:fi.d.e.l.i.ty..i.nf.o..plc@gmail.com"">fi.d.e.l.i.ty..i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.id.e.lity...in.f.o..plc@gmail.com"">f.id.e.lity...in.f.o..plc@gmail.com</a>
<a href=""mailto:f.i.d.elit.y...i.n.fo..p.l.c@gmail.com"">f.i.d.elit.y...i.n.fo..p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.ty...i.n.fo..pl.c@gmail.com"">f.id.eli.ty...i.n.fo..pl.c@gmail.com</a>
<a href=""mailto:fid.eli.t.y..in.f.o...p.l.c@gmail.com"">fid.eli.t.y..in.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fideli.ty..inf.o..p.lc@gmail.com"">fideli.ty..inf.o..p.lc@gmail.com</a>
<a href=""mailto:f.i.deli.ty..in.f.o..pl.c@gmail.com"">f.i.deli.ty..in.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.eli.t.y..inf.o...pl.c@gmail.com"">f.i.d.eli.t.y..inf.o...pl.c@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y...inf.o...plc@gmail.com"">fid.e.l.i.t.y...inf.o...plc@gmail.com</a>
<a href=""mailto:fi.delity..in.f.o..pl.c@gmail.com"">fi.delity..in.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.id.el.i.t.y...i.n.f.o..p.lc@gmail.com"">f.id.el.i.t.y...i.n.f.o..p.lc@gmail.com</a>
<a href=""mailto:fid.e.lity...i.n.fo..plc@gmail.com"">fid.e.lity...i.n.fo..plc@gmail.com</a>
<a href=""mailto:f.ide.l.ity...i.nf.o.p.l.c@gmail.com"">f.ide.l.ity...i.nf.o.p.l.c@gmail.com</a>
<a href=""mailto:f.id.elity..info...p.lc@gmail.com"">f.id.elity..info...p.lc@gmail.com</a>
<a href=""mailto:fi.deli.ty.i.n.fo...plc@gmail.com"">fi.deli.ty.i.n.fo...plc@gmail.com</a>
<a href=""mailto:f.i.deli.t.y..i.n.f.o.p.l.c@gmail.com"">f.i.deli.t.y..i.n.f.o.p.l.c@gmail.com</a>
<a href=""mailto:fi.d.el.ity..i.nf.o..p.l.c@gmail.com"">fi.d.el.ity..i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:f.id.e.l.i.t.y..i.nf.o..plc@gmail.com"">f.id.e.l.i.t.y..i.nf.o..plc@gmail.com</a>
<a href=""mailto:fid.e.l.it.y...i.n.fo.pl.c@gmail.com"">fid.e.l.it.y...i.n.fo.pl.c@gmail.com</a>
<a href=""mailto:fi.d.eli.ty.i.n.fo..plc@gmail.com"">fi.d.eli.ty.i.n.fo..plc@gmail.com</a>
<a href=""mailto:fi.del.i.t.y..in.f.o..p.lc@gmail.com"">fi.del.i.t.y..in.f.o..p.lc@gmail.com</a>
<a href=""mailto:f.ideli.t.y..in.fo.p.lc@gmail.com"">f.ideli.t.y..in.fo.p.lc@gmail.com</a>
<a href=""mailto:fi.delity..in.fo..p.lc@gmail.com"">fi.delity..in.fo..p.lc@gmail.com</a>
<a href=""mailto:fide.l.ity..in.fo.p.l.c@gmail.com"">fide.l.ity..in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y..i.n.fo.p.l.c@gmail.com"">f.i.de.li.t.y..i.n.fo.p.l.c@gmail.com</a>
<a href=""mailto:fi.del.i.t.y...in.f.o..plc@gmail.com"">fi.del.i.t.y...in.f.o..plc@gmail.com</a>
<a href=""mailto:f.ide.lity...i.nf.o.pl.c@gmail.com"">f.ide.lity...i.nf.o.pl.c@gmail.com</a>
<a href=""mailto:fi.d.e.l.ity..i.n.f.o...pl.c@gmail.com"">fi.d.e.l.ity..i.n.f.o...pl.c@gmail.com</a>
<a href=""mailto:f.idelity...info.p.lc@gmail.com"">f.idelity...info.p.lc@gmail.com</a>
<a href=""mailto:fideli.ty..inf.o..plc@gmail.com"">fideli.ty..inf.o..plc@gmail.com</a>
<a href=""mailto:f.i.de.l.i.ty..i.nf.o...p.l.c@gmail.com"">f.i.de.l.i.ty..i.nf.o...p.l.c@gmail.com</a>
<a href=""mailto:fidel.ity.in.fo..plc@gmail.com"">fidel.ity.in.fo..plc@gmail.com</a>
<a href=""mailto:fid.e.lity.info..p.l.c@gmail.com"">fid.e.lity.info..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.l.i.t.y..in.f.o...plc@gmail.com"">fi.d.e.l.i.t.y..in.f.o...plc@gmail.com</a>
<a href=""mailto:f.i.d.el.ity..info...p.l.c@gmail.com"">f.i.d.el.ity..info...p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.t.y..i.n.f.o.plc@gmail.com"">f.id.eli.t.y..i.n.f.o.plc@gmail.com</a>
<a href=""mailto:f.ide.l.ity.info.p.l.c@gmail.com"">f.ide.l.ity.info.p.l.c@gmail.com</a>
<a href=""mailto:f.i.del.i.ty...info..pl.c@gmail.com"">f.i.del.i.ty...info..pl.c@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y.info..plc@gmail.com"">f.ide.l.i.t.y.info..plc@gmail.com</a>
<a href=""mailto:fid.eli.ty..i.nfo..p.l.c@gmail.com"">fid.eli.ty..i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.elit.y..i.nf.o...p.lc@gmail.com"">fi.d.elit.y..i.nf.o...p.lc@gmail.com</a>
<a href=""mailto:fi.del.it.y...in.f.o.pl.c@gmail.com"">fi.del.it.y...in.f.o.pl.c@gmail.com</a>
<a href=""mailto:fi.d.elity..info...p.lc@gmail.com"">fi.d.elity..info...p.lc@gmail.com</a>
<a href=""mailto:fide.lit.y.inf.o..plc@gmail.com"">fide.lit.y.inf.o..plc@gmail.com</a>
<a href=""mailto:f.id.eli.t.y..i.n.f.o...p.l.c@gmail.com"">f.id.eli.t.y..i.n.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fi.del.i.ty.in.fo..p.l.c@gmail.com"">fi.del.i.ty.in.fo..p.l.c@gmail.com</a>
<a href=""mailto:fi.de.l.i.ty..i.nf.o...p.l.c@gmail.com"">fi.de.l.i.ty..i.nf.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y..i.n.f.o..p.l.c@gmail.com"">fid.e.l.i.t.y..i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.delity..i.n.fo..p.lc@gmail.com"">fi.delity..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:fid.elity..in.fo.p.l.c@gmail.com"">fid.elity..in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.lit.y.info.p.lc@gmail.com"">f.i.de.lit.y.info.p.lc@gmail.com</a>
<a href=""mailto:f.id.el.ity..in.f.o..plc@gmail.com"">f.id.el.ity..in.f.o..plc@gmail.com</a>
<a href=""mailto:f.i.d.el.i.t.y..info.plc@gmail.com"">f.i.d.el.i.t.y..info.plc@gmail.com</a>
<a href=""mailto:f.i.de.l.ity..i.nf.o...p.lc@gmail.com"">f.i.de.l.ity..i.nf.o...p.lc@gmail.com</a>
<a href=""mailto:f.i.del.ity..i.nfo..plc@gmail.com"">f.i.del.ity..i.nfo..plc@gmail.com</a>
<a href=""mailto:fi.d.e.l.it.y..inf.o..plc@gmail.com"">fi.d.e.l.it.y..inf.o..plc@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y..info..p.l.c@gmail.com"">f.ide.l.i.t.y..info..p.l.c@gmail.com</a>
<a href=""mailto:f.id.e.l.i.t.y..in.fo..p.l.c@gmail.com"">f.id.e.l.i.t.y..in.fo..p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.ity..in.f.o...p.lc@gmail.com"">fid.e.l.ity..in.f.o...p.lc@gmail.com</a>
<a href=""mailto:fi.del.i.t.y..i.nfo..p.l.c@gmail.com"">fi.del.i.t.y..i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:fide.l.it.y..i.nfo...pl.c@gmail.com"">fide.l.it.y..i.nfo...pl.c@gmail.com</a>
<a href=""mailto:fideli.ty..i.nfo..p.l.c@gmail.com"">fideli.ty..i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:fide.lity..in.fo...p.lc@gmail.com"">fide.lity..in.fo...p.lc@gmail.com</a>
<a href=""mailto:f.id.el.i.t.y..i.n.f.o..pl.c@gmail.com"">f.id.el.i.t.y..i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:fid.elity..inf.o...pl.c@gmail.com"">fid.elity..inf.o...pl.c@gmail.com</a>
<a href=""mailto:f.i.d.e.l.i.ty..in.fo.pl.c@gmail.com"">f.i.d.e.l.i.ty..in.fo.pl.c@gmail.com</a>
<a href=""mailto:fid.eli.t.y.i.nf.o..p.l.c@gmail.com"">fid.eli.t.y.i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fid.el.ity..i.nf.o...plc@gmail.com"">fid.el.ity..i.nf.o...plc@gmail.com</a>
<a href=""mailto:fide.li.t.y..info..p.lc@gmail.com"">fide.li.t.y..info..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.eli.ty..inf.o..plc@gmail.com"">f.i.d.eli.ty..inf.o..plc@gmail.com</a>
<a href=""mailto:f.i.del.it.y..info.p.lc@gmail.com"">f.i.del.it.y..info.p.lc@gmail.com</a>
<a href=""mailto:fideli.ty...in.f.o.pl.c@gmail.com"">fideli.ty...in.f.o.pl.c@gmail.com</a>
<a href=""mailto:f.i.del.it.y...i.nf.o...pl.c@gmail.com"">f.i.del.it.y...i.nf.o...pl.c@gmail.com</a>
<a href=""mailto:fi.d.el.ity...info..pl.c@gmail.com"">fi.d.el.ity...info..pl.c@gmail.com</a>
<a href=""mailto:f.id.elit.y..in.f.o...p.l.c@gmail.com"">f.id.elit.y..in.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.el.i.t.y..i.nf.o.plc@gmail.com"">fid.el.i.t.y..i.nf.o.plc@gmail.com</a>
<a href=""mailto:fi.de.li.t.y..i.nf.o...pl.c@gmail.com"">fi.de.li.t.y..i.nf.o...pl.c@gmail.com</a>
<a href=""mailto:f.ide.li.t.y..i.n.f.o.p.l.c@gmail.com"">f.ide.li.t.y..i.n.f.o.p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.lity...in.f.o.p.l.c@gmail.com"">fi.d.e.lity...in.f.o.p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.l.it.y..i.nfo.p.lc@gmail.com"">fi.d.e.l.it.y..i.nfo.p.lc@gmail.com</a>
<a href=""mailto:f.id.elit.y..i.nfo.pl.c@gmail.com"">f.id.elit.y..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..in.f.o...p.lc@gmail.com"">f.ide.l.i.ty..in.f.o...p.lc@gmail.com</a>
<a href=""mailto:f.id.el.ity..i.n.f.o...pl.c@gmail.com"">f.id.el.ity..i.n.f.o...pl.c@gmail.com</a>
<a href=""mailto:f.i.d.e.lity.i.n.f.o.pl.c@gmail.com"">f.i.d.e.lity.i.n.f.o.pl.c@gmail.com</a>
<a href=""mailto:fidel.i.t.y.info...p.lc@gmail.com"">fidel.i.t.y.info...p.lc@gmail.com</a>
<a href=""mailto:f.idel.i.ty..i.nf.o..p.l.c@gmail.com"">f.idel.i.ty..i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fidel.i.t.y.i.nf.o..p.lc@gmail.com"">fidel.i.t.y.i.nf.o..p.lc@gmail.com</a>
<a href=""mailto:f.id.e.l.it.y.info.p.l.c@gmail.com"">f.id.e.l.it.y.info.p.l.c@gmail.com</a>
<a href=""mailto:fid.eli.ty..i.nfo.pl.c@gmail.com"">fid.eli.ty..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:f.i.d.el.ity.in.fo..p.lc@gmail.com"">f.i.d.el.ity.in.fo..p.lc@gmail.com</a>
<a href=""mailto:fid.el.i.ty..inf.o.p.l.c@gmail.com"">fid.el.i.ty..inf.o.p.l.c@gmail.com</a>
<a href=""mailto:f.idel.i.t.y...i.nf.o..p.l.c@gmail.com"">f.idel.i.t.y...i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.deli.ty..inf.o..p.lc@gmail.com"">fi.deli.ty..inf.o..p.lc@gmail.com</a>
<a href=""mailto:f.idelity.in.f.o..p.lc@gmail.com"">f.idelity.in.f.o..p.lc@gmail.com</a>
<a href=""mailto:fidel.i.ty...i.n.fo..p.lc@gmail.com"">fidel.i.ty...i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:fidelity..i.nfo.pl.c@gmail.com"">fidelity..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:fi.d.el.ity..i.n.f.o..p.l.c@gmail.com"">fi.d.el.ity..i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.ty..inf.o..pl.c@gmail.com"">f.id.eli.ty..inf.o..pl.c@gmail.com</a>
<a href=""mailto:fide.l.i.ty...info..pl.c@gmail.com"">fide.l.i.ty...info..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.el.ity..i.nfo..p.lc@gmail.com"">f.i.d.el.ity..i.nfo..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.e.li.t.y..in.fo..p.l.c@gmail.com"">f.i.d.e.li.t.y..in.fo..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.elity.inf.o.pl.c@gmail.com"">fi.d.elity.inf.o.pl.c@gmail.com</a>
<a href=""mailto:fide.li.ty.i.nf.o.p.lc@gmail.com"">fide.li.ty.i.nf.o.p.lc@gmail.com</a>
<a href=""mailto:fid.el.ity..i.n.f.o.p.lc@gmail.com"">fid.el.ity..i.n.f.o.p.lc@gmail.com</a>
<a href=""mailto:f.id.eli.t.y..i.n.fo..plc@gmail.com"">f.id.eli.t.y..i.n.fo..plc@gmail.com</a>
<a href=""mailto:fi.d.el.it.y..info.pl.c@gmail.com"">fi.d.el.it.y..info.pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.ty.inf.o.pl.c@gmail.com"">fid.e.li.ty.inf.o.pl.c@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y..i.n.fo..p.lc@gmail.com"">f.i.de.li.t.y..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:f.idel.ity..in.fo...plc@gmail.com"">f.idel.ity..in.fo...plc@gmail.com</a>
<a href=""mailto:fi.del.it.y.in.fo.p.lc@gmail.com"">fi.del.it.y.in.fo.p.lc@gmail.com</a>
<a href=""mailto:f.ideli.ty..i.n.fo..p.lc@gmail.com"">f.ideli.ty..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:fide.l.i.ty..i.n.f.o.pl.c@gmail.com"">fide.l.i.ty..i.n.f.o.pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.t.y...i.n.fo.p.lc@gmail.com"">fid.e.li.t.y...i.n.fo.p.lc@gmail.com</a>
<a href=""mailto:fid.elit.y.i.n.fo..plc@gmail.com"">fid.elit.y.i.n.fo..plc@gmail.com</a>
<a href=""mailto:fide.l.ity...i.nfo...p.l.c@gmail.com"">fide.l.ity...i.nfo...p.l.c@gmail.com</a>
<a href=""mailto:f.i.de.l.ity..i.nf.o..p.l.c@gmail.com"">f.i.de.l.ity..i.nf.o..p.l.c@gmail.com</a>
<a href=""mailto:fid.e.l.i.ty..info...pl.c@gmail.com"">fid.e.l.i.ty..info...pl.c@gmail.com</a>
<a href=""mailto:f.ideli.t.y..i.n.fo..plc@gmail.com"">f.ideli.t.y..i.n.fo..plc@gmail.com</a>
<a href=""mailto:f.ide.l.i.t.y.i.n.fo..pl.c@gmail.com"">f.ide.l.i.t.y.i.n.fo..pl.c@gmail.com</a>
<a href=""mailto:fi.de.l.i.ty..i.nfo.p.lc@gmail.com"">fi.de.l.i.ty..i.nfo.p.lc@gmail.com</a>
<a href=""mailto:f.id.el.i.ty.i.n.f.o..pl.c@gmail.com"">f.id.el.i.ty.i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y...in.f.o..p.lc@gmail.com"">f.i.de.li.t.y...in.f.o..p.lc@gmail.com</a>
<a href=""mailto:fide.li.ty..i.n.fo...plc@gmail.com"">fide.li.ty..i.n.fo...plc@gmail.com</a>
<a href=""mailto:fi.de.lity..i.nf.o...p.lc@gmail.com"">fi.de.lity..i.nf.o...p.lc@gmail.com</a>
<a href=""mailto:f.i.d.eli.t.y..i.n.fo..p.l.c@gmail.com"">f.i.d.eli.t.y..i.n.fo..p.l.c@gmail.com</a>
<a href=""mailto:fide.lity...i.n.f.o..p.l.c@gmail.com"">fide.lity...i.n.f.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.d.e.li.ty.i.nfo...p.l.c@gmail.com"">fi.d.e.li.ty.i.nfo...p.l.c@gmail.com</a>
<a href=""mailto:f.ideli.t.y.info..p.lc@gmail.com"">f.ideli.t.y.info..p.lc@gmail.com</a>
<a href=""mailto:f.i.de.li.t.y...i.nfo...plc@gmail.com"">f.i.de.li.t.y...i.nfo...plc@gmail.com</a>
<a href=""mailto:fide.li.ty..i.nfo.pl.c@gmail.com"">fide.li.ty..i.nfo.pl.c@gmail.com</a>
<a href=""mailto:f.i.del.i.ty.info...p.lc@gmail.com"">f.i.del.i.ty.info...p.lc@gmail.com</a>
<a href=""mailto:fidel.i.ty.i.n.fo.p.l.c@gmail.com"">fidel.i.ty.i.n.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.ide.li.ty..info...plc@gmail.com"">f.ide.li.ty..info...plc@gmail.com</a>
<a href=""mailto:fid.elity..info.plc@gmail.com"">fid.elity..info.plc@gmail.com</a>
<a href=""mailto:fi.de.lit.y..in.fo..p.lc@gmail.com"">fi.de.lit.y..in.fo..p.lc@gmail.com</a>
<a href=""mailto:fidelit.y..info..pl.c@gmail.com"">fidelit.y..info..pl.c@gmail.com</a>
<a href=""mailto:fid.e.li.ty.in.fo.pl.c@gmail.com"">fid.e.li.ty.in.fo.pl.c@gmail.com</a>
<a href=""mailto:f.id.e.l.i.ty..inf.o..pl.c@gmail.com"">f.id.e.l.i.ty..inf.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.d.elity..i.nfo...pl.c@gmail.com"">f.i.d.elity..i.nfo...pl.c@gmail.com</a>
<a href=""mailto:fi.delit.y...i.nfo...pl.c@gmail.com"">fi.delit.y...i.nfo...pl.c@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..i.n.f.o...pl.c@gmail.com"">f.ide.l.i.ty..i.n.f.o...pl.c@gmail.com</a>
<a href=""mailto:f.i.delity.i.nfo...plc@gmail.com"">f.i.delity.i.nfo...plc@gmail.com</a>
<a href=""mailto:fid.e.l.i.t.y..i.n.fo..p.lc@gmail.com"">fid.e.l.i.t.y..i.n.fo..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.elit.y..i.nf.o..plc@gmail.com"">f.i.d.elit.y..i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.id.e.l.i.ty..in.f.o..plc@gmail.com"">f.id.e.l.i.ty..in.f.o..plc@gmail.com</a>
<a href=""mailto:f.id.elity..in.fo...p.lc@gmail.com"">f.id.elity..in.fo...p.lc@gmail.com</a>
<a href=""mailto:f.id.el.it.y..i.n.f.o..plc@gmail.com"">f.id.el.it.y..i.n.f.o..plc@gmail.com</a>
<a href=""mailto:f.i.de.lity..i.n.f.o...p.l.c@gmail.com"">f.i.de.lity..i.n.f.o...p.l.c@gmail.com</a>
<a href=""mailto:fid.e.lity..info...plc@gmail.com"">fid.e.lity..info...plc@gmail.com</a>
<a href=""mailto:f.ide.lit.y.in.fo.p.l.c@gmail.com"">f.ide.lit.y.in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.i.d.el.it.y..i.n.f.o..pl.c@gmail.com"">f.i.d.el.it.y..i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.id.el.it.y...inf.o..p.l.c@gmail.com"">f.id.el.it.y...inf.o..p.l.c@gmail.com</a>
<a href=""mailto:fi.de.li.ty...i.nfo..p.l.c@gmail.com"">fi.de.li.ty...i.nfo..p.l.c@gmail.com</a>
<a href=""mailto:f.id.eli.ty..info..plc@gmail.com"">f.id.eli.ty..info..plc@gmail.com</a>
<a href=""mailto:fi.d.el.it.y.i.n.f.o.plc@gmail.com"">fi.d.el.it.y.i.n.f.o.plc@gmail.com</a>
<a href=""mailto:fidelit.y.in.f.o...plc@gmail.com"">fidelit.y.in.f.o...plc@gmail.com</a>
<a href=""mailto:f.ide.lit.y..in.fo.p.l.c@gmail.com"">f.ide.lit.y..in.fo.p.l.c@gmail.com</a>
<a href=""mailto:f.ideli.t.y...i.nf.o..plc@gmail.com"">f.ideli.t.y...i.nf.o..plc@gmail.com</a>
<a href=""mailto:fi.d.eli.ty.i.n.f.o..pl.c@gmail.com"">fi.d.eli.ty.i.n.f.o..pl.c@gmail.com</a>
<a href=""mailto:f.i.de.l.i.t.y..i.nf.o..p.lc@gmail.com"">f.i.de.l.i.t.y..i.nf.o..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.el.i.t.y..inf.o.p.lc@gmail.com"">f.i.d.el.i.t.y..inf.o.p.lc@gmail.com</a>
<a href=""mailto:fi.d.elit.y.i.nfo.p.lc@gmail.com"">fi.d.elit.y.i.nfo.p.lc@gmail.com</a>
<a href=""mailto:fideli.ty..in.fo.plc@gmail.com"">fideli.ty..in.fo.plc@gmail.com</a>
<a href=""mailto:f.ide.l.i.ty..i.nf.o..plc@gmail.com"">f.ide.l.i.ty..i.nf.o..plc@gmail.com</a>
<a href=""mailto:f.i.d.e.li.t.y.i.nf.o..p.lc@gmail.com"">f.i.d.e.li.t.y.i.nf.o..p.lc@gmail.com</a>
<a href=""mailto:f.i.d.e.lit.y..info..p.lc@gmail.com"">f.i.d.e.lit.y..info..p.lc@gmail.com</a>
<a href=""mailto:fi.delity..i.n.f.o...p.lc@gmail.com"">fi.delity..i.n.f.o...p.lc@gmail.com</a>
<a href=""mailto:fide.l.it.y..in.fo...p.lc@gmail.com"">fide.l.it.y..in.fo...p.lc@gmail.com</a>"
HN8FBiBn,input for Doc,rvdraws,JSON,Friday 3rd of November 2023 12:30:08 AM CDT,"{
   [
        {
            ""memberUuid"": ""23145256346"",
            ""description"": ""some data"",
            ""documentType"": ""PAN""
         
        },
        {
           ""memberUuid"": ""12343235"",
            ""description"": ""abcdef"",
            ""documentType"": ""VOTER_ID""
        }
    ]
}"
sV8aXhH3,secret snowy business updated,coinwalk,JavaScript,Friday 3rd of November 2023 12:02:21 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/80).toFixed(8));
var burp = nudie;
var taget = (smiley*20000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var bilance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux); 
var stuffed = (bolance-smiley);
var manboobs = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)) {
    burp = burp*2
    sexual = parseFloat(bolance);
}else if (burp>=(smiley/17)){
    burp = nudie;
    sexual = 0;
}else if (burp>=(bolance/17)){
    burp = nudie;
    sexual = 0;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
YJXKPs4v,secret snowy business updated,coinwalk,JavaScript,Thursday 2nd of November 2023 11:45:44 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/80).toFixed(8));
var burp = nudie;
var taget = (smiley*20000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var bilance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux); 
var stuffed = (bolance-smiley);
var manboobs = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+mole))&&(bolance!=sexual)) {
    burp = burp*2
    sexual = parseFloat(bolance);
}else if (burp>=(smiley/24)){
    burp = nudie;
    sexual = 0;
}else if (burp>=(bolance/24)){
    burp = nudie;
    sexual = 0;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
reuWfsEB,result,INVINCIBLE202,C,Thursday 2nd of November 2023 10:32:20 PM CDT,"#include <stdio.h>

int main() {
    int marks[5];
    float percentage;
    int last_2_digitID;
    printf(""Enter marks for five subjects:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""Subject %d: "", i + 1);
        scanf(""%d"", &marks[i]);
    }
    printf(""Enter the last 2 digits of your ID: "");
    scanf(""%d"", &last_2_digitID);
    int total_marks = 0;
    for (int i = 0; i < 5; i++) {
        total_marks += marks[i];
    }
    percentage = (float)total_marks / 5;
    char grade;
    if (percentage >= 90 * (last_2_digitID / 100)) {
        grade = 'A';
    } else if (percentage >= 80 * (last_2_digitID / 100)) {
        grade = 'B';
    } else if (percentage >= 70 * (last_2_digitID / 100)) {
        grade = 'C';
    } else if (percentage >= 60 * (last_2_digitID / 100)) {
        grade = 'D';
    } else if (percentage >= 40 * (last_2_digitID / 100)) {
        grade = 'E';
    } else {
        grade = 'F';
    }
    printf(""Percentage: %.2f%%\n"", percentage);
    printf(""Grade: %c\n"", grade);

    return 0;
}
"
bDxvUfkD,Change the WP Page Template to Elementor Canvas with Post ID.,fauzanjeg,PHP,Thursday 2nd of November 2023 10:09:52 PM CDT,"/**
 * Change the WP Page Template to Elementor Canvas with Post ID.
 */
function jkit_change_post_template() {
	/**
	 * Please enter the Post ID you want to change its Page Template to Elementor Canvas.
	 */
	$post_template_id = array( 11, 26 ); /** The Example is 11 and 26 */

	foreach ( $post_template_id as $id ) {
		$page_template = get_post_meta( $id, '_wp_page_template', true );
		$search_key    = 'elementor_';

		if ( strpos( $page_template, $search_key ) === false ) {
			update_post_meta( $id, '_wp_page_template', 'elementor_canvas' );
		}
	}
}
add_action( 'init', 'jkit_change_post_template' );"
R59ADhG9,functions.lua,Ni_Jay_Ni,Lua,Thursday 2nd of November 2023 09:33:59 PM CDT,"-- works like PHP's print_r(), returning the output instead of printing it to STDOUT
-- daniel speakmedia com
--[[ jaywha: added _G for easy Global access in ComputerCraft
-- also removed leading Lua addresses like ""table:4a89a0"" to make it more JSON-esque --]]

function dumpvar(data)
    -- cache of tables already printed, to avoid infinite recursive loops
    local tablecache = {}
    local buffer = """"
    local padder = ""    ""

    local function _dumpvar(d, depth)
        local t = type(d)
        local str = tostring(d)
        if (t == ""table"") then
            if (tablecache[str]) then
                -- table already dumped before, so we dont
                -- dump it again, just mention it
                buffer = buffer..""\n""
            else
                tablecache[str] = (tablecache[str] or 0) + 1
                buffer = buffer..""{\n""
                for k, v in pairs(d) do
                    buffer = buffer..string.rep(padder, depth+1)..""\""""..k..""\"" => ""
                    _dumpvar(v, depth+1)
                end
                buffer = buffer..string.rep(padder, depth)..""}\n""
            end
        elseif (t == ""number"") then
            buffer = buffer..str..""\n""
        else
            buffer = buffer..""\""""..str..""\""\n""
        end
    end
    _dumpvar(data, 0)
    return buffer
end

_G.dumpvar = dumpvar"
8uNKdadu,Time thingy,Royalzombie222,Lua,Thursday 2nd of November 2023 09:20:21 PM CDT,"local peripheral = peripheral.wrap(""top"")

peripheral.write(textutils.formatTime(os.time()).."" ""..os.day(""ingame"").."" Days"")
while true do
    os.sleep(1)
    peripheral.clear()
    peripheral.setCursorPos(1,1)
    peripheral.write(textutils.formatTime(os.time()).."" ""..os.day(""ingame"").."" Days"")
    peripheral.setCursorPos(1,2)
    if os.time() >= 6 and os.time() <18 then
        peripheral.write(""Day"")
    elseif os.time() >= 18 then
        peripheral.write(""Night"")
    elseif os.time() <6 then
        peripheral.write(""Night"")
    end
end"
9dqGNhny,2023-11-02_stats.json,rdp_snitch,JSON,Thursday 2nd of November 2023 07:18:29 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""62.204.41.146"": 18,
    ""111.61.253.55"": 6,
    ""167.94.138.33"": 3,
    ""87.251.75.145"": 9,
    ""198.235.24.81"": 9,
    ""5.181.80.139"": 3,
    ""5.181.80.119"": 18,
    ""66.175.209.48"": 24,
    ""52.39.43.153"": 12,
    ""135.125.247.178"": 6,
    ""13.233.85.4"": 33,
    ""35.77.91.5"": 15,
    ""97.107.140.137"": 18,
    ""187.18.100.143"": 3,
    ""172.233.73.85"": 12,
    ""20.231.76.245"": 117,
    ""212.70.149.146"": 15,
    ""185.170.144.3"": 6,
    ""88.99.235.217"": 6,
    ""87.251.75.120"": 3,
    ""54.68.37.201"": 6,
    ""205.210.31.205"": 9,
    ""203.124.37.152"": 3,
    ""52.13.124.170"": 6,
    ""149.28.87.113"": 3,
    ""152.89.198.133"": 12,
    ""62.122.184.165"": 12,
    ""51.75.160.42"": 18,
    ""83.97.73.77"": 9,
    ""185.36.81.28"": 3,
    ""81.19.135.47"": 9,
    ""152.32.206.247"": 3,
    ""198.235.24.122"": 9,
    ""87.251.75.64"": 3,
    ""43.154.91.97"": 27,
    ""176.113.115.58"": 3,
    ""45.227.254.55"": 6,
    ""172.188.48.214"": 3,
    ""106.116.169.71"": 3,
    ""42.112.31.53"": 3,
    ""45.129.14.208"": 9,
    ""198.235.24.106"": 9,
    ""103.232.53.123"": 12
  },
  ""asn"": {
    ""AS57523"": 48,
    ""AS59425"": 18,
    ""AS24547"": 6,
    ""AS398324"": 3,
    ""AS208091"": 15,
    ""AS396982"": 36,
    ""AS50360"": 21,
    ""AS63949"": 54,
    ""AS16509"": 72,
    ""AS16276"": 24,
    ""AS22689"": 3,
    ""AS8075"": 120,
    ""AS204428"": 15,
    ""AS197414"": 6,
    ""AS24940"": 6,
    ""AS7590"": 3,
    ""AS20473"": 3,
    ""AS208312"": 9,
    ""AS209605"": 3,
    ""AS209588"": 9,
    ""AS135377"": 3,
    ""AS132203"": 27,
    ""AS57678"": 3,
    ""AS267784"": 6,
    ""AS4134"": 3,
    ""AS18403"": 3,
    ""AS198465"": 9,
    ""AS63737"": 12
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 48,
    ""Horizon LLC"": 18,
    ""China Mobile communications corporation"": 6,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions LP"": 21,
    ""Google LLC"": 36,
    ""Tamatiya EOOD"": 21,
    ""Akamai Technologies, Inc."": 54,
    ""Amazon.com, Inc."": 39,
    ""OVH SAS"": 24,
    ""Amazon Technologies Inc."": 33,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 3,
    ""Microsoft Corporation"": 117,
    ""SS-Net"": 15,
    ""Hetzner Online GmbH"": 6,
    ""COMSATS"": 3,
    ""The Constant Company"": 3,
    ""Red Byte LLC"": 9,
    ""SERVEROFFER LT"": 3,
    ""Flyservers S.A."": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 27,
    ""Cat Technologies Co. Limited"": 3,
    ""Microsoft"": 3,
    ""Chinanet"": 3,
    ""Vietnam Internet Network Information Center"": 3,
    ""BtHoster LTD"": 9,
    ""VIETSERVER"": 12
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 36,
    ""Horizon LLC"": 18,
    ""China Mobile"": 6,
    ""Censys, Inc"": 3,
    ""Xhost Internet Solutions"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Tamatiya EOOD"": 21,
    ""Linode"": 42,
    ""AWS EC2 (us-west-2)"": 24,
    ""OVH GmbH"": 6,
    ""AWS EC2 (ap-south-1)"": 33,
    ""AWS EC2 (ap-northeast-1)"": 15,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 3,
    ""Akamai Technologies, Inc."": 12,
    ""Microsoft Azure Cloud (eastus)"": 117,
    ""4Media Ltd"": 15,
    ""Xhostis"": 6,
    ""Hetzner Online GmbH"": 6,
    ""CIS HQ"": 3,
    ""Vultr Holdings, LLC"": 3,
    ""Starcrecium Limited"": 12,
    ""OVH Ltd"": 18,
    ""Red Byte LLC"": 9,
    ""Unknown"": 6,
    ""Alviva Holding Limited"": 9,
    ""Ucloud Information Technology"": 3,
    ""Tencent Cloud Computing"": 27,
    ""Cat Technologies Co. Limited"": 3,
    ""UAB Host Baltic"": 6,
    ""Microsoft Azure Cloud (southeastasia)"": 3,
    ""Chinanet HE"": 3,
    ""BtHoster LTD"": 9,
    ""VietServer Services technology company limited"": 12
  },
  ""regionName"": {
    ""Moscow"": 78,
    ""Hebei"": 9,
    ""Michigan"": 3,
    ""North Holland"": 21,
    ""California"": 39,
    ""Plovdiv"": 36,
    ""New Jersey"": 42,
    ""Oregon"": 24,
    ""Hesse"": 6,
    ""Maharashtra"": 33,
    ""Tokyo"": 15,
    ""Parana"": 3,
    ""\u014csaka"": 12,
    ""Virginia"": 120,
    ""Saxony"": 6,
    ""Punjab"": 3,
    ""England"": 27,
    ""Kaunas"": 3,
    ""Sverdlovsk Oblast"": 9,
    ""Central and Western District"": 27,
    ""Vilnius"": 6,
    ""Central Singapore"": 3,
    ""Hanoi"": 15
  },
  ""country"": {
    ""Russia"": 87,
    ""China"": 9,
    ""United States"": 228,
    ""Netherlands"": 21,
    ""Bulgaria"": 36,
    ""Germany"": 12,
    ""India"": 33,
    ""Japan"": 27,
    ""Brazil"": 3,
    ""Pakistan"": 3,
    ""United Kingdom"": 27,
    ""Lithuania"": 9,
    ""Hong Kong"": 27,
    ""Singapore"": 3,
    ""Vietnam"": 15
  },
  ""account"": {
    ""Domain"": 78,
    ""Test"": 30,
    ""(empty)"": 12,
    ""Administr"": 48,
    ""xeurlzXkH"": 3,
    ""RlJhwP"": 3,
    ""tAxtXP"": 3,
    ""hello"": 183,
    ""142.93.8.59"": 150,
    ""YgKMwUvzA"": 3,
    ""mqWbdP"": 3,
    ""WXrrwK"": 3,
    ""Administrator"": 3,
    ""codSKEseN"": 3,
    ""MBqCpV"": 3,
    ""WDZxTd"": 3,
    ""njwzNGRaw"": 3,
    ""JxObrq"": 3,
    ""scRhnd"": 3
  },
  ""keyboard"": {
    ""Unknown"": 540
  },
  ""client_build"": {
    ""Unknown"": 540
  },
  ""client_name"": {
    ""Unknown"": 540
  },
  ""ip_type"": {
    ""Unknown"": 156,
    ""mobile"": 6,
    ""hosting"": 366,
    ""proxy"": 12
  }
}"
AfSS8nAF,2023-11-02_stats.json,rdp_snitch,JSON,Thursday 2nd of November 2023 07:16:15 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""62.204.41.146"": 12,
    ""111.61.253.55"": 4,
    ""167.94.138.33"": 2,
    ""87.251.75.145"": 6,
    ""198.235.24.81"": 6,
    ""5.181.80.139"": 2,
    ""5.181.80.119"": 12,
    ""66.175.209.48"": 16,
    ""52.39.43.153"": 8,
    ""135.125.247.178"": 4,
    ""13.233.85.4"": 22,
    ""35.77.91.5"": 10,
    ""97.107.140.137"": 12,
    ""187.18.100.143"": 2,
    ""172.233.73.85"": 8,
    ""20.231.76.245"": 78,
    ""212.70.149.146"": 10,
    ""185.170.144.3"": 4,
    ""88.99.235.217"": 4,
    ""87.251.75.120"": 2,
    ""54.68.37.201"": 4,
    ""205.210.31.205"": 6,
    ""203.124.37.152"": 2,
    ""52.13.124.170"": 4,
    ""149.28.87.113"": 2,
    ""152.89.198.133"": 8,
    ""62.122.184.165"": 8,
    ""51.75.160.42"": 12,
    ""83.97.73.77"": 6,
    ""185.36.81.28"": 2,
    ""81.19.135.47"": 6,
    ""152.32.206.247"": 2,
    ""198.235.24.122"": 6,
    ""87.251.75.64"": 2,
    ""43.154.91.97"": 18,
    ""176.113.115.58"": 2,
    ""45.227.254.55"": 4,
    ""172.188.48.214"": 2,
    ""106.116.169.71"": 2,
    ""42.112.31.53"": 2,
    ""45.129.14.208"": 6,
    ""198.235.24.106"": 6,
    ""103.232.53.123"": 8
  },
  ""asn"": {
    ""AS57523"": 32,
    ""AS59425"": 12,
    ""AS24547"": 4,
    ""AS398324"": 2,
    ""AS208091"": 10,
    ""AS396982"": 24,
    ""AS50360"": 14,
    ""AS63949"": 36,
    ""AS16509"": 48,
    ""AS16276"": 16,
    ""AS22689"": 2,
    ""AS8075"": 80,
    ""AS204428"": 10,
    ""AS197414"": 4,
    ""AS24940"": 4,
    ""AS7590"": 2,
    ""AS20473"": 2,
    ""AS208312"": 6,
    ""AS209605"": 2,
    ""AS209588"": 6,
    ""AS135377"": 2,
    ""AS132203"": 18,
    ""AS57678"": 2,
    ""AS267784"": 4,
    ""AS4134"": 2,
    ""AS18403"": 2,
    ""AS198465"": 6,
    ""AS63737"": 8
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 32,
    ""Horizon LLC"": 12,
    ""China Mobile communications corporation"": 4,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions LP"": 14,
    ""Google LLC"": 24,
    ""Tamatiya EOOD"": 14,
    ""Akamai Technologies, Inc."": 36,
    ""Amazon.com, Inc."": 26,
    ""OVH SAS"": 16,
    ""Amazon Technologies Inc."": 22,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 2,
    ""Microsoft Corporation"": 78,
    ""SS-Net"": 10,
    ""Hetzner Online GmbH"": 4,
    ""COMSATS"": 2,
    ""The Constant Company"": 2,
    ""Red Byte LLC"": 6,
    ""SERVEROFFER LT"": 2,
    ""Flyservers S.A."": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 18,
    ""Cat Technologies Co. Limited"": 2,
    ""Microsoft"": 2,
    ""Chinanet"": 2,
    ""Vietnam Internet Network Information Center"": 2,
    ""BtHoster LTD"": 6,
    ""VIETSERVER"": 8
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 24,
    ""Horizon LLC"": 12,
    ""China Mobile"": 4,
    ""Censys, Inc"": 2,
    ""Xhost Internet Solutions"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Tamatiya EOOD"": 14,
    ""Linode"": 28,
    ""AWS EC2 (us-west-2)"": 16,
    ""OVH GmbH"": 4,
    ""AWS EC2 (ap-south-1)"": 22,
    ""AWS EC2 (ap-northeast-1)"": 10,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 2,
    ""Akamai Technologies, Inc."": 8,
    ""Microsoft Azure Cloud (eastus)"": 78,
    ""4Media Ltd"": 10,
    ""Xhostis"": 4,
    ""Hetzner Online GmbH"": 4,
    ""CIS HQ"": 2,
    ""Vultr Holdings, LLC"": 2,
    ""Starcrecium Limited"": 8,
    ""OVH Ltd"": 12,
    ""Red Byte LLC"": 6,
    ""Unknown"": 4,
    ""Alviva Holding Limited"": 6,
    ""Ucloud Information Technology"": 2,
    ""Tencent Cloud Computing"": 18,
    ""Cat Technologies Co. Limited"": 2,
    ""UAB Host Baltic"": 4,
    ""Microsoft Azure Cloud (southeastasia)"": 2,
    ""Chinanet HE"": 2,
    ""BtHoster LTD"": 6,
    ""VietServer Services technology company limited"": 8
  },
  ""regionName"": {
    ""Moscow"": 52,
    ""Hebei"": 6,
    ""Michigan"": 2,
    ""North Holland"": 14,
    ""California"": 26,
    ""Plovdiv"": 24,
    ""New Jersey"": 28,
    ""Oregon"": 16,
    ""Hesse"": 4,
    ""Maharashtra"": 22,
    ""Tokyo"": 10,
    ""Parana"": 2,
    ""\u014csaka"": 8,
    ""Virginia"": 80,
    ""Saxony"": 4,
    ""Punjab"": 2,
    ""England"": 18,
    ""Kaunas"": 2,
    ""Sverdlovsk Oblast"": 6,
    ""Central and Western District"": 18,
    ""Vilnius"": 4,
    ""Central Singapore"": 2,
    ""Hanoi"": 10
  },
  ""country"": {
    ""Russia"": 58,
    ""China"": 6,
    ""United States"": 152,
    ""Netherlands"": 14,
    ""Bulgaria"": 24,
    ""Germany"": 8,
    ""India"": 22,
    ""Japan"": 18,
    ""Brazil"": 2,
    ""Pakistan"": 2,
    ""United Kingdom"": 18,
    ""Lithuania"": 6,
    ""Hong Kong"": 18,
    ""Singapore"": 2,
    ""Vietnam"": 10
  },
  ""account"": {
    ""Domain"": 52,
    ""Test"": 20,
    ""(empty)"": 8,
    ""Administr"": 32,
    ""xeurlzXkH"": 2,
    ""RlJhwP"": 2,
    ""tAxtXP"": 2,
    ""hello"": 122,
    ""142.93.8.59"": 100,
    ""YgKMwUvzA"": 2,
    ""mqWbdP"": 2,
    ""WXrrwK"": 2,
    ""Administrator"": 2,
    ""codSKEseN"": 2,
    ""MBqCpV"": 2,
    ""WDZxTd"": 2,
    ""njwzNGRaw"": 2,
    ""JxObrq"": 2,
    ""scRhnd"": 2
  },
  ""keyboard"": {
    ""Unknown"": 360
  },
  ""client_build"": {
    ""Unknown"": 360
  },
  ""client_name"": {
    ""Unknown"": 360
  },
  ""ip_type"": {
    ""Unknown"": 104,
    ""mobile"": 4,
    ""hosting"": 244,
    ""proxy"": 8
  }
}"
1PJjkxbL,2023-11-02_stats.json,rdp_snitch,JSON,Thursday 2nd of November 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""62.204.41.146"": 6,
    ""111.61.253.55"": 2,
    ""167.94.138.33"": 1,
    ""87.251.75.145"": 3,
    ""198.235.24.81"": 3,
    ""5.181.80.139"": 1,
    ""5.181.80.119"": 6,
    ""66.175.209.48"": 8,
    ""52.39.43.153"": 4,
    ""135.125.247.178"": 2,
    ""13.233.85.4"": 11,
    ""35.77.91.5"": 5,
    ""97.107.140.137"": 6,
    ""187.18.100.143"": 1,
    ""172.233.73.85"": 4,
    ""20.231.76.245"": 39,
    ""212.70.149.146"": 5,
    ""185.170.144.3"": 2,
    ""88.99.235.217"": 2,
    ""87.251.75.120"": 1,
    ""54.68.37.201"": 2,
    ""205.210.31.205"": 3,
    ""203.124.37.152"": 1,
    ""52.13.124.170"": 2,
    ""149.28.87.113"": 1,
    ""152.89.198.133"": 4,
    ""62.122.184.165"": 4,
    ""51.75.160.42"": 6,
    ""83.97.73.77"": 3,
    ""185.36.81.28"": 1,
    ""81.19.135.47"": 3,
    ""152.32.206.247"": 1,
    ""198.235.24.122"": 3,
    ""87.251.75.64"": 1,
    ""43.154.91.97"": 9,
    ""176.113.115.58"": 1,
    ""45.227.254.55"": 2,
    ""172.188.48.214"": 1,
    ""106.116.169.71"": 1,
    ""42.112.31.53"": 1,
    ""45.129.14.208"": 3,
    ""198.235.24.106"": 3,
    ""103.232.53.123"": 4
  },
  ""asn"": {
    ""AS57523"": 16,
    ""AS59425"": 6,
    ""AS24547"": 2,
    ""AS398324"": 1,
    ""AS208091"": 5,
    ""AS396982"": 12,
    ""AS50360"": 7,
    ""AS63949"": 18,
    ""AS16509"": 24,
    ""AS16276"": 8,
    ""AS22689"": 1,
    ""AS8075"": 40,
    ""AS204428"": 5,
    ""AS197414"": 2,
    ""AS24940"": 2,
    ""AS7590"": 1,
    ""AS20473"": 1,
    ""AS208312"": 3,
    ""AS209605"": 1,
    ""AS209588"": 3,
    ""AS135377"": 1,
    ""AS132203"": 9,
    ""AS57678"": 1,
    ""AS267784"": 2,
    ""AS4134"": 1,
    ""AS18403"": 1,
    ""AS198465"": 3,
    ""AS63737"": 4
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 16,
    ""Horizon LLC"": 6,
    ""China Mobile communications corporation"": 2,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions LP"": 7,
    ""Google LLC"": 12,
    ""Tamatiya EOOD"": 7,
    ""Akamai Technologies, Inc."": 18,
    ""Amazon.com, Inc."": 13,
    ""OVH SAS"": 8,
    ""Amazon Technologies Inc."": 11,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 1,
    ""Microsoft Corporation"": 39,
    ""SS-Net"": 5,
    ""Hetzner Online GmbH"": 2,
    ""COMSATS"": 1,
    ""The Constant Company"": 1,
    ""Red Byte LLC"": 3,
    ""SERVEROFFER LT"": 1,
    ""Flyservers S.A."": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 9,
    ""Cat Technologies Co. Limited"": 1,
    ""Microsoft"": 1,
    ""Chinanet"": 1,
    ""Vietnam Internet Network Information Center"": 1,
    ""BtHoster LTD"": 3,
    ""VIETSERVER"": 4
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 12,
    ""Horizon LLC"": 6,
    ""China Mobile"": 2,
    ""Censys, Inc"": 1,
    ""Xhost Internet Solutions"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Tamatiya EOOD"": 7,
    ""Linode"": 14,
    ""AWS EC2 (us-west-2)"": 8,
    ""OVH GmbH"": 2,
    ""AWS EC2 (ap-south-1)"": 11,
    ""AWS EC2 (ap-northeast-1)"": 5,
    ""SERCOMTEL S/A TELECOMUNICACOES"": 1,
    ""Akamai Technologies, Inc."": 4,
    ""Microsoft Azure Cloud (eastus)"": 39,
    ""4Media Ltd"": 5,
    ""Xhostis"": 2,
    ""Hetzner Online GmbH"": 2,
    ""CIS HQ"": 1,
    ""Vultr Holdings, LLC"": 1,
    ""Starcrecium Limited"": 4,
    ""OVH Ltd"": 6,
    ""Red Byte LLC"": 3,
    ""Unknown"": 2,
    ""Alviva Holding Limited"": 3,
    ""Ucloud Information Technology"": 1,
    ""Tencent Cloud Computing"": 9,
    ""Cat Technologies Co. Limited"": 1,
    ""UAB Host Baltic"": 2,
    ""Microsoft Azure Cloud (southeastasia)"": 1,
    ""Chinanet HE"": 1,
    ""BtHoster LTD"": 3,
    ""VietServer Services technology company limited"": 4
  },
  ""regionName"": {
    ""Moscow"": 26,
    ""Hebei"": 3,
    ""Michigan"": 1,
    ""North Holland"": 7,
    ""California"": 13,
    ""Plovdiv"": 12,
    ""New Jersey"": 14,
    ""Oregon"": 8,
    ""Hesse"": 2,
    ""Maharashtra"": 11,
    ""Tokyo"": 5,
    ""Parana"": 1,
    ""\u014csaka"": 4,
    ""Virginia"": 40,
    ""Saxony"": 2,
    ""Punjab"": 1,
    ""England"": 9,
    ""Kaunas"": 1,
    ""Sverdlovsk Oblast"": 3,
    ""Central and Western District"": 9,
    ""Vilnius"": 2,
    ""Central Singapore"": 1,
    ""Hanoi"": 5
  },
  ""country"": {
    ""Russia"": 29,
    ""China"": 3,
    ""United States"": 76,
    ""Netherlands"": 7,
    ""Bulgaria"": 12,
    ""Germany"": 4,
    ""India"": 11,
    ""Japan"": 9,
    ""Brazil"": 1,
    ""Pakistan"": 1,
    ""United Kingdom"": 9,
    ""Lithuania"": 3,
    ""Hong Kong"": 9,
    ""Singapore"": 1,
    ""Vietnam"": 5
  },
  ""account"": {
    ""Domain"": 26,
    ""Test"": 10,
    ""(empty)"": 4,
    ""Administr"": 16,
    ""xeurlzXkH"": 1,
    ""RlJhwP"": 1,
    ""tAxtXP"": 1,
    ""hello"": 61,
    ""142.93.8.59"": 50,
    ""YgKMwUvzA"": 1,
    ""mqWbdP"": 1,
    ""WXrrwK"": 1,
    ""Administrator"": 1,
    ""codSKEseN"": 1,
    ""MBqCpV"": 1,
    ""WDZxTd"": 1,
    ""njwzNGRaw"": 1,
    ""JxObrq"": 1,
    ""scRhnd"": 1
  },
  ""keyboard"": {
    ""Unknown"": 180
  },
  ""client_build"": {
    ""Unknown"": 180
  },
  ""client_name"": {
    ""Unknown"": 180
  },
  ""ip_type"": {
    ""Unknown"": 52,
    ""mobile"": 2,
    ""hosting"": 122,
    ""proxy"": 4
  }
}"
mdZp1331,Find Missing And Repeating,jayati,C++,Thursday 2nd of November 2023 06:56:06 PM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

// } Driver Code Ends
class Solution{
public:
    vector<int> findTwoElement(vector<int> arr, int n) {
        // code here
        int ans=-1,ans1=-1;
       
        
        int a[n+1]={0};
        for(int i=0;i<arr.size();i++)
        {
            a[arr[i]]+=1;
        }
        for(int i=1;i<=n;i++)
        {
            if(a[i]==0)
            {
                if(ans!=-1)
                {
                    continue;
                }
                ans=i;
            }
            if(a[i]==2)
            {
                if(ans1!=-1)
                {
                    continue;
                }
                ans1=i;
            }
            if(ans!=-1 && ans1!=-1)
            {
                break;
            }
        }
        return {ans1,ans};
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }
        Solution ob;
        auto ans = ob.findTwoElement(a, n);
        cout << ans[0] << "" "" << ans[1] << ""\n"";
    }
    return 0;
}
// } Driver Code Ends"
cJi8vtxK,Untitled,35657,C++,Thursday 2nd of November 2023 06:49:10 PM CDT,"
//Лилия а зачем здесь названия комнат???
//Это математическая задачка, здесь нужны только параметы комнат, а также размеры и цена обоев.




#include <iostream>
#include <iomanip>
#include <conio.h>

using namespace std;


class Room {
public:

    Room() : room_length_(0), room_width_(0), room_height_(0), ceiling_(0) {};


    void SetRoom(double lenght, double width, double height, bool ceiling) {
        room_length_ = lenght;
        room_width_ = width;
        room_height_ = height;
        ceiling_ = ceiling;
    }

    double room_length_; //длинна
    double room_width_; // ширина
    double room_height_; // высота
    bool ceiling_; // здесь подойдет bool (0 - не оклеивать, 1 - оклеивать)
};


class Wallpaper {
public:
    Wallpaper() : wallpaper_name_(""""), wallpaper_length_(0), wallpaper_width_(0), price_roll_(0) {};
    Wallpaper(const char* name, const double wallpaper_length, const double wallpaper_width, double price_roll) : wallpaper_name_(name), wallpaper_length_(wallpaper_length), wallpaper_width_(wallpaper_width), price_roll_(price_roll) {};

    const char* wallpaper_name_; // название обоев
    double wallpaper_length_; //длинна обоев в рулоне
    double wallpaper_width_; //ширина обоев в рулоне
    double price_roll_; // стоимость рулона обоев



};

class Flat {
public:

    Flat(const int new_rooms_count) : rooms_count_(new_rooms_count), rooms_(new Room[new_rooms_count]) {}; // параметризованный конструктор, параметр - количество комнат в квартире


    int rooms_count_;// количество комнат в квартире
    Room* rooms_; // массив комнат (массив комнат а не названий комнат!!!)
    



    ~Flat() {
        delete[]  rooms_;
    }

};




int main() {
    setlocale(LC_ALL, ""Russian"");

    // здесь запрашиваем количество комнат, создаем Flat под заданное количество комнат, потом циклом запрашиваем параметры комнат и записываем эти параметры в каждую комнату с помощью SetRoom

    // потом запрашиваем параметры обоев (можно сделать только с одним видом обоев, рассчитать все под него)

    // ну и можно например посчитать площадь всех стен в комнатах квартиры, площадь одного рулона обоев, и исходя из этого количество обоев и их общую стоимость (необходимые для расчета методы можете добавить сами



}"
YKURP8Pu,Untitled,bombaires,AIMMS,Thursday 2nd of November 2023 06:44:56 PM CDT,"<a href=""mailto:visionthomasmark@skiff.com"">visionthomasmark@skiff.com</a>
<a href=""mailto:infofed178@gmail.com"">infofed178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d1.7.8@gmail.com"">i.nf.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:infofe.d17.8@gmail.com"">infofe.d17.8@gmail.com</a>
<a href=""mailto:i.nf.ofe.d178@gmail.com"">i.nf.ofe.d178@gmail.com</a>
<a href=""mailto:inf.of.e.d1.7.8@gmail.com"">inf.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:in.fof.ed17.8@gmail.com"">in.fof.ed17.8@gmail.com</a>
<a href=""mailto:i.n.fofe.d17.8@gmail.com"">i.n.fofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d178@gmail.com"">i.n.fo.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d.1.78@gmail.com"">i.nf.o.fe.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fofed.1.7.8@gmail.com"">i.n.fofed.1.7.8@gmail.com</a>
<a href=""mailto:in.fof.e.d17.8@gmail.com"">in.fof.e.d17.8@gmail.com</a>
<a href=""mailto:in.f.o.fed17.8@gmail.com"">in.f.o.fed17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d17.8@gmail.com"">i.nf.of.e.d17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.1.78@gmail.com"">i.nf.of.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nf.of.e.d178@gmail.com"">i.nf.of.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed178@gmail.com"">i.n.f.o.f.ed178@gmail.com</a>
<a href=""mailto:in.fofed178@gmail.com"">in.fofed178@gmail.com</a>
<a href=""mailto:i.n.f.o.fe.d.17.8@gmail.com"">i.n.f.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed.1.78@gmail.com"">i.n.fof.ed.1.78@gmail.com</a>
<a href=""mailto:infof.ed.178@gmail.com"">infof.ed.178@gmail.com</a>
<a href=""mailto:in.f.o.f.e.d.17.8@gmail.com"">in.f.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:in.f.of.ed.178@gmail.com"">in.f.of.ed.178@gmail.com</a>
<a href=""mailto:in.fofe.d178@gmail.com"">in.fofe.d178@gmail.com</a>
<a href=""mailto:infofed1.7.8@gmail.com"">infofed1.7.8@gmail.com</a>
<a href=""mailto:infof.e.d.1.7.8@gmail.com"">infof.e.d.1.7.8@gmail.com</a>
<a href=""mailto:in.fo.f.e.d.1.78@gmail.com"">in.fo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d.1.7.8@gmail.com"">i.n.fo.fe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fed.1.7.8@gmail.com"">i.n.f.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:in.f.of.e.d178@gmail.com"">in.f.of.e.d178@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d1.78@gmail.com"">i.nfo.f.e.d1.78@gmail.com</a>
<a href=""mailto:in.f.ofe.d.1.78@gmail.com"">in.f.ofe.d.1.78@gmail.com</a>
<a href=""mailto:in.f.o.fe.d178@gmail.com"">in.f.o.fe.d178@gmail.com</a>
<a href=""mailto:info.fe.d.178@gmail.com"">info.fe.d.178@gmail.com</a>
<a href=""mailto:info.f.e.d.178@gmail.com"">info.f.e.d.178@gmail.com</a>
<a href=""mailto:infof.e.d.17.8@gmail.com"">infof.e.d.17.8@gmail.com</a>
<a href=""mailto:in.fof.e.d178@gmail.com"">in.fof.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed.17.8@gmail.com"">i.n.f.o.f.ed.17.8@gmail.com</a>
<a href=""mailto:in.f.o.fed.1.78@gmail.com"">in.f.o.fed.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d.178@gmail.com"">i.nf.o.fe.d.178@gmail.com</a>
<a href=""mailto:in.f.o.f.ed.1.78@gmail.com"">in.f.o.f.ed.1.78@gmail.com</a>
<a href=""mailto:inf.o.f.e.d1.7.8@gmail.com"">inf.o.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.178@gmail.com"">i.nfo.f.e.d.178@gmail.com</a>
<a href=""mailto:i.n.f.of.ed.1.78@gmail.com"">i.n.f.of.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.fof.ed1.78@gmail.com"">i.n.fof.ed1.78@gmail.com</a>
<a href=""mailto:in.fo.fe.d.17.8@gmail.com"">in.fo.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.f.o.fe.d.17.8@gmail.com"">in.f.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:info.fe.d.17.8@gmail.com"">info.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.fof.e.d.1.7.8@gmail.com"">in.fof.e.d.1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.1.78@gmail.com"">i.nfo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:in.f.ofed.1.7.8@gmail.com"">in.f.ofed.1.7.8@gmail.com</a>
<a href=""mailto:inf.ofe.d17.8@gmail.com"">inf.ofe.d17.8@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.17.8@gmail.com"">i.nf.of.e.d.17.8@gmail.com</a>
<a href=""mailto:in.fofe.d.1.7.8@gmail.com"">in.fofe.d.1.7.8@gmail.com</a>
<a href=""mailto:in.fo.fed.17.8@gmail.com"">in.fo.fed.17.8@gmail.com</a>
<a href=""mailto:inf.ofe.d1.78@gmail.com"">inf.ofe.d1.78@gmail.com</a>
<a href=""mailto:in.f.o.fe.d.178@gmail.com"">in.f.o.fe.d.178@gmail.com</a>
<a href=""mailto:infof.ed.17.8@gmail.com"">infof.ed.17.8@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d.17.8@gmail.com"">i.n.f.of.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed.178@gmail.com"">i.n.fof.ed.178@gmail.com</a>
<a href=""mailto:infof.e.d178@gmail.com"">infof.e.d178@gmail.com</a>
<a href=""mailto:inf.ofed.178@gmail.com"">inf.ofed.178@gmail.com</a>
<a href=""mailto:inf.ofed.1.7.8@gmail.com"">inf.ofed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed.178@gmail.com"">i.n.fo.f.ed.178@gmail.com</a>
<a href=""mailto:inf.o.fe.d.17.8@gmail.com"">inf.o.fe.d.17.8@gmail.com</a>
<a href=""mailto:in.f.o.f.e.d.178@gmail.com"">in.f.o.f.e.d.178@gmail.com</a>
<a href=""mailto:inf.o.f.e.d.1.7.8@gmail.com"">inf.o.f.e.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d17.8@gmail.com"">i.n.f.of.e.d17.8@gmail.com</a>
<a href=""mailto:infofe.d.1.78@gmail.com"">infofe.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fofe.d1.7.8@gmail.com"">i.n.fofe.d1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofed178@gmail.com"">in.f.ofed178@gmail.com</a>
<a href=""mailto:i.nfofed1.78@gmail.com"">i.nfofed1.78@gmail.com</a>
<a href=""mailto:in.fo.fed1.7.8@gmail.com"">in.fo.fed1.7.8@gmail.com</a>
<a href=""mailto:in.fof.e.d.1.78@gmail.com"">in.fof.e.d.1.78@gmail.com</a>
<a href=""mailto:in.f.of.ed17.8@gmail.com"">in.f.of.ed17.8@gmail.com</a>
<a href=""mailto:i.nfof.e.d1.7.8@gmail.com"">i.nfof.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d17.8@gmail.com"">i.nf.o.fe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fofe.d.1.7.8@gmail.com"">i.n.fofe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fed1.78@gmail.com"">i.n.f.o.fed1.78@gmail.com</a>
<a href=""mailto:in.fo.f.ed.17.8@gmail.com"">in.fo.f.ed.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed1.78@gmail.com"">i.n.fo.f.ed1.78@gmail.com</a>
<a href=""mailto:i.nfof.e.d.17.8@gmail.com"">i.nfof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.f.ofe.d1.7.8@gmail.com"">i.n.f.ofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.ofed1.7.8@gmail.com"">i.nf.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofe.d.17.8@gmail.com"">in.f.ofe.d.17.8@gmail.com</a>
<a href=""mailto:i.nfo.fed178@gmail.com"">i.nfo.fed178@gmail.com</a>
<a href=""mailto:i.n.fo.fe.d1.7.8@gmail.com"">i.n.fo.fe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.1.78@gmail.com"">i.nf.o.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d.1.78@gmail.com"">i.n.fo.f.e.d.1.78@gmail.com</a>
<a href=""mailto:inf.of.e.d178@gmail.com"">inf.of.e.d178@gmail.com</a>
<a href=""mailto:infofed178@gmail.com"">infofed178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d.1.78@gmail.com"">i.n.f.o.f.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.ed178@gmail.com"">i.nf.o.f.ed178@gmail.com</a>
<a href=""mailto:i.n.fofed178@gmail.com"">i.n.fofed178@gmail.com</a>
<a href=""mailto:i.n.fof.e.d.17.8@gmail.com"">i.n.fof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d1.78@gmail.com"">i.nfofe.d1.78@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed.17.8@gmail.com"">i.n.fo.f.ed.17.8@gmail.com</a>
<a href=""mailto:in.fofe.d.17.8@gmail.com"">in.fofe.d.17.8@gmail.com</a>
<a href=""mailto:i.nfo.fed.1.7.8@gmail.com"">i.nfo.fed.1.7.8@gmail.com</a>
<a href=""mailto:i.nf.ofe.d17.8@gmail.com"">i.nf.ofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.fof.ed1.7.8@gmail.com"">i.n.fof.ed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.fe.d.17.8@gmail.com"">i.nfo.fe.d.17.8@gmail.com</a>
<a href=""mailto:info.f.ed17.8@gmail.com"">info.f.ed17.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d.17.8@gmail.com"">i.nfo.f.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d1.7.8@gmail.com"">i.n.fo.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofed1.7.8@gmail.com"">i.nfofed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d1.7.8@gmail.com"">i.nfo.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fofed.1.78@gmail.com"">i.n.fofed.1.78@gmail.com</a>
<a href=""mailto:info.fed1.7.8@gmail.com"">info.fed1.7.8@gmail.com</a>
<a href=""mailto:i.nfof.ed.178@gmail.com"">i.nfof.ed.178@gmail.com</a>
<a href=""mailto:in.fof.e.d.17.8@gmail.com"">in.fof.e.d.17.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d178@gmail.com"">i.n.fof.e.d178@gmail.com</a>
<a href=""mailto:inf.of.ed17.8@gmail.com"">inf.of.ed17.8@gmail.com</a>
<a href=""mailto:inf.ofed178@gmail.com"">inf.ofed178@gmail.com</a>
<a href=""mailto:i.nf.ofe.d1.7.8@gmail.com"">i.nf.ofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofe.d178@gmail.com"">i.nfofe.d178@gmail.com</a>
<a href=""mailto:i.n.f.ofe.d1.78@gmail.com"">i.n.f.ofe.d1.78@gmail.com</a>
<a href=""mailto:inf.o.fe.d178@gmail.com"">inf.o.fe.d178@gmail.com</a>
<a href=""mailto:i.n.fofed.178@gmail.com"">i.n.fofed.178@gmail.com</a>
<a href=""mailto:info.f.e.d1.7.8@gmail.com"">info.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nfofe.d.1.7.8@gmail.com"">i.nfofe.d.1.7.8@gmail.com</a>
<a href=""mailto:in.f.o.fed.178@gmail.com"">in.f.o.fed.178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d1.78@gmail.com"">i.nf.of.e.d1.78@gmail.com</a>
<a href=""mailto:inf.of.ed1.78@gmail.com"">inf.of.ed1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fed.1.7.8@gmail.com"">i.nf.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.ofed17.8@gmail.com"">i.n.f.ofed17.8@gmail.com</a>
<a href=""mailto:inf.of.e.d17.8@gmail.com"">inf.of.e.d17.8@gmail.com</a>
<a href=""mailto:i.nfofed.178@gmail.com"">i.nfofed.178@gmail.com</a>
<a href=""mailto:inf.of.e.d1.78@gmail.com"">inf.of.e.d1.78@gmail.com</a>
<a href=""mailto:info.fe.d1.7.8@gmail.com"">info.fe.d1.7.8@gmail.com</a>
<a href=""mailto:in.f.of.e.d1.7.8@gmail.com"">in.f.of.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.of.ed.17.8@gmail.com"">i.n.f.of.ed.17.8@gmail.com</a>
<a href=""mailto:in.fo.f.ed1.78@gmail.com"">in.fo.f.ed1.78@gmail.com</a>
<a href=""mailto:inf.o.fe.d1.78@gmail.com"">inf.o.fe.d1.78@gmail.com</a>
<a href=""mailto:infofe.d1.7.8@gmail.com"">infofe.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d1.7.8@gmail.com"">i.n.fof.e.d1.7.8@gmail.com</a>
<a href=""mailto:in.fof.ed.1.78@gmail.com"">in.fof.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.f.ofed.17.8@gmail.com"">i.n.f.ofed.17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d.17.8@gmail.com"">i.nfofe.d.17.8@gmail.com</a>
<a href=""mailto:infofe.d178@gmail.com"">infofe.d178@gmail.com</a>
<a href=""mailto:infof.ed.1.78@gmail.com"">infof.ed.1.78@gmail.com</a>
<a href=""mailto:inf.ofed1.78@gmail.com"">inf.ofed1.78@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed17.8@gmail.com"">i.n.f.o.f.ed17.8@gmail.com</a>
<a href=""mailto:i.nfo.fe.d.1.78@gmail.com"">i.nfo.fe.d.1.78@gmail.com</a>
<a href=""mailto:i.nfo.fed.1.78@gmail.com"">i.nfo.fed.1.78@gmail.com</a>
<a href=""mailto:i.nfof.ed.1.78@gmail.com"">i.nfof.ed.1.78@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d178@gmail.com"">i.n.f.o.f.e.d178@gmail.com</a>
<a href=""mailto:in.fof.ed.178@gmail.com"">in.fof.ed.178@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d1.7.8@gmail.com"">i.n.f.o.f.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.n.fof.e.d.1.78@gmail.com"">i.n.fof.e.d.1.78@gmail.com</a>
<a href=""mailto:i.nfo.f.ed.178@gmail.com"">i.nfo.f.ed.178@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed1.7.8@gmail.com"">i.n.fo.f.ed1.7.8@gmail.com</a>
<a href=""mailto:i.nfo.f.ed.1.7.8@gmail.com"">i.nfo.f.ed.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.e.d17.8@gmail.com"">i.n.fo.f.e.d17.8@gmail.com</a>
<a href=""mailto:info.f.ed178@gmail.com"">info.f.ed178@gmail.com</a>
<a href=""mailto:in.fofe.d17.8@gmail.com"">in.fofe.d17.8@gmail.com</a>
<a href=""mailto:i.n.f.ofed1.78@gmail.com"">i.n.f.ofed1.78@gmail.com</a>
<a href=""mailto:i.n.fof.ed.17.8@gmail.com"">i.n.fof.ed.17.8@gmail.com</a>
<a href=""mailto:i.nfo.f.e.d178@gmail.com"">i.nfo.f.e.d178@gmail.com</a>
<a href=""mailto:i.nfof.ed17.8@gmail.com"">i.nfof.ed17.8@gmail.com</a>
<a href=""mailto:i.n.f.o.f.ed1.78@gmail.com"">i.n.f.o.f.ed1.78@gmail.com</a>
<a href=""mailto:i.n.f.of.e.d178@gmail.com"">i.n.f.of.e.d178@gmail.com</a>
<a href=""mailto:i.n.f.o.fed.17.8@gmail.com"">i.n.f.o.fed.17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fed.1.7.8@gmail.com"">i.n.fo.fed.1.7.8@gmail.com</a>
<a href=""mailto:info.fed.178@gmail.com"">info.fed.178@gmail.com</a>
<a href=""mailto:i.nf.ofed.1.7.8@gmail.com"">i.nf.ofed.1.7.8@gmail.com</a>
<a href=""mailto:i.nfof.ed.1.7.8@gmail.com"">i.nfof.ed.1.7.8@gmail.com</a>
<a href=""mailto:infof.ed1.7.8@gmail.com"">infof.ed1.7.8@gmail.com</a>
<a href=""mailto:info.f.ed.1.78@gmail.com"">info.f.ed.1.78@gmail.com</a>
<a href=""mailto:i.nf.o.fe.d178@gmail.com"">i.nf.o.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.of.e.d.178@gmail.com"">i.nf.of.e.d.178@gmail.com</a>
<a href=""mailto:i.nf.ofed17.8@gmail.com"">i.nf.ofed17.8@gmail.com</a>
<a href=""mailto:inf.o.fed.1.7.8@gmail.com"">inf.o.fed.1.7.8@gmail.com</a>
<a href=""mailto:info.fe.d17.8@gmail.com"">info.fe.d17.8@gmail.com</a>
<a href=""mailto:in.fo.fe.d178@gmail.com"">in.fo.fe.d178@gmail.com</a>
<a href=""mailto:i.nf.ofe.d.178@gmail.com"">i.nf.ofe.d.178@gmail.com</a>
<a href=""mailto:in.f.of.ed.17.8@gmail.com"">in.f.of.ed.17.8@gmail.com</a>
<a href=""mailto:info.f.ed1.78@gmail.com"">info.f.ed1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.17.8@gmail.com"">i.nf.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:i.nf.o.f.ed1.78@gmail.com"">i.nf.o.f.ed1.78@gmail.com</a>
<a href=""mailto:in.f.ofe.d1.78@gmail.com"">in.f.ofe.d1.78@gmail.com</a>
<a href=""mailto:info.fed178@gmail.com"">info.fed178@gmail.com</a>
<a href=""mailto:inf.o.fed1.7.8@gmail.com"">inf.o.fed1.7.8@gmail.com</a>
<a href=""mailto:i.n.f.o.f.e.d.17.8@gmail.com"">i.n.f.o.f.e.d.17.8@gmail.com</a>
<a href=""mailto:inf.ofed1.7.8@gmail.com"">inf.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.ofe.d17.8@gmail.com"">in.f.ofe.d17.8@gmail.com</a>
<a href=""mailto:info.fed.17.8@gmail.com"">info.fed.17.8@gmail.com</a>
<a href=""mailto:i.n.f.o.fe.d17.8@gmail.com"">i.n.f.o.fe.d17.8@gmail.com</a>
<a href=""mailto:inf.ofe.d.1.7.8@gmail.com"">inf.ofe.d.1.7.8@gmail.com</a>
<a href=""mailto:i.n.fo.f.ed17.8@gmail.com"">i.n.fo.f.ed17.8@gmail.com</a>
<a href=""mailto:i.n.fo.fed.17.8@gmail.com"">i.n.fo.fed.17.8@gmail.com</a>
<a href=""mailto:in.fofed17.8@gmail.com"">in.fofed17.8@gmail.com</a>
<a href=""mailto:i.nfofe.d1.7.8@gmail.com"">i.nfofe.d1.7.8@gmail.com</a>
<a href=""mailto:in.fo.f.e.d17.8@gmail.com"">in.fo.f.e.d17.8@gmail.com</a>
<a href=""mailto:in.fofe.d1.78@gmail.com"">in.fofe.d1.78@gmail.com</a>
<a href=""mailto:i.nf.o.f.e.d.178@gmail.com"">i.nf.o.f.e.d.178@gmail.com</a>
<a href=""mailto:in.fof.e.d1.7.8@gmail.com"">in.fof.e.d1.7.8@gmail.com</a>
<a href=""mailto:i.nf.o.fed178@gmail.com"">i.nf.o.fed178@gmail.com</a>
<a href=""mailto:i.n.f.ofed1.7.8@gmail.com"">i.n.f.ofed1.7.8@gmail.com</a>
<a href=""mailto:in.f.o.f.ed1.78@gmail.com"">in.f.o.f.ed1.78@gmail.com</a>
<a href=""mailto:infofe.d1.78@gmail.com"">infofe.d1.78@gmail.com</a>
<a href=""mailto:inf.ofe.d.17.8@gmail.com"">inf.ofe.d.17.8@gmail.com</a>
<a href=""mailto:vinhoxie@gmail.com"">vinhoxie@gmail.com</a>
<a href=""mailto:v.i.n.ho.x.i.e@gmail.com"">v.i.n.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.h.oxi.e@gmail.com"">vi.n.h.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nhox.ie@gmail.com"">v.i.nhox.ie@gmail.com</a>
<a href=""mailto:v.i.n.hox.i.e@gmail.com"">v.i.n.hox.i.e@gmail.com</a>
<a href=""mailto:vin.h.oxi.e@gmail.com"">vin.h.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nho.xi.e@gmail.com"">v.i.nho.xi.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.x.ie@gmail.com"">v.i.n.h.o.x.ie@gmail.com</a>
<a href=""mailto:vin.hox.ie@gmail.com"">vin.hox.ie@gmail.com</a>
<a href=""mailto:vi.nho.x.ie@gmail.com"">vi.nho.x.ie@gmail.com</a>
<a href=""mailto:v.i.nho.x.ie@gmail.com"">v.i.nho.x.ie@gmail.com</a>
<a href=""mailto:vin.ho.x.i.e@gmail.com"">vin.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.nh.o.xi.e@gmail.com"">vi.nh.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.h.oxie@gmail.com"">v.in.h.oxie@gmail.com</a>
<a href=""mailto:v.in.ho.x.i.e@gmail.com"">v.in.ho.x.i.e@gmail.com</a>
<a href=""mailto:vi.nhox.ie@gmail.com"">vi.nhox.ie@gmail.com</a>
<a href=""mailto:vinhox.ie@gmail.com"">vinhox.ie@gmail.com</a>
<a href=""mailto:v.in.h.o.x.i.e@gmail.com"">v.in.h.o.x.i.e@gmail.com</a>
<a href=""mailto:vin.h.ox.i.e@gmail.com"">vin.h.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.h.oxie@gmail.com"">vi.n.h.oxie@gmail.com</a>
<a href=""mailto:v.i.nho.x.i.e@gmail.com"">v.i.nho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.ho.x.ie@gmail.com"">v.i.n.ho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.hox.i.e@gmail.com"">vi.n.hox.i.e@gmail.com</a>
<a href=""mailto:v.i.nh.o.x.i.e@gmail.com"">v.i.nh.o.x.i.e@gmail.com</a>
<a href=""mailto:vin.h.o.xie@gmail.com"">vin.h.o.xie@gmail.com</a>
<a href=""mailto:v.inh.ox.i.e@gmail.com"">v.inh.ox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.x.i.e@gmail.com"">v.i.n.h.o.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.o.xie@gmail.com"">v.i.n.h.o.xie@gmail.com</a>
<a href=""mailto:v.inhox.i.e@gmail.com"">v.inhox.i.e@gmail.com</a>
<a href=""mailto:vinho.x.ie@gmail.com"">vinho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.h.o.xi.e@gmail.com"">vi.n.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.inho.x.i.e@gmail.com"">v.inho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.ox.ie@gmail.com"">v.i.n.h.ox.ie@gmail.com</a>
<a href=""mailto:v.inho.xie@gmail.com"">v.inho.xie@gmail.com</a>
<a href=""mailto:vinh.oxi.e@gmail.com"">vinh.oxi.e@gmail.com</a>
<a href=""mailto:vi.n.h.ox.i.e@gmail.com"">vi.n.h.ox.i.e@gmail.com</a>
<a href=""mailto:v.in.hoxi.e@gmail.com"">v.in.hoxi.e@gmail.com</a>
<a href=""mailto:vi.n.h.o.x.ie@gmail.com"">vi.n.h.o.x.ie@gmail.com</a>
<a href=""mailto:vi.nh.ox.ie@gmail.com"">vi.nh.ox.ie@gmail.com</a>
<a href=""mailto:v.in.hoxie@gmail.com"">v.in.hoxie@gmail.com</a>
<a href=""mailto:v.i.nh.o.xie@gmail.com"">v.i.nh.o.xie@gmail.com</a>
<a href=""mailto:vi.nh.oxie@gmail.com"">vi.nh.oxie@gmail.com</a>
<a href=""mailto:v.i.n.h.oxie@gmail.com"">v.i.n.h.oxie@gmail.com</a>
<a href=""mailto:vi.n.h.o.x.i.e@gmail.com"">vi.n.h.o.x.i.e@gmail.com</a>
<a href=""mailto:vinhoxie@gmail.com"">vinhoxie@gmail.com</a>
<a href=""mailto:v.inhoxi.e@gmail.com"">v.inhoxi.e@gmail.com</a>
<a href=""mailto:vi.nh.o.xie@gmail.com"">vi.nh.o.xie@gmail.com</a>
<a href=""mailto:vi.nh.ox.i.e@gmail.com"">vi.nh.ox.i.e@gmail.com</a>
<a href=""mailto:vi.nh.oxi.e@gmail.com"">vi.nh.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nhox.i.e@gmail.com"">v.i.nhox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.hox.ie@gmail.com"">v.i.n.hox.ie@gmail.com</a>
<a href=""mailto:vinhoxi.e@gmail.com"">vinhoxi.e@gmail.com</a>
<a href=""mailto:vi.nhox.i.e@gmail.com"">vi.nhox.i.e@gmail.com</a>
<a href=""mailto:vinho.x.i.e@gmail.com"">vinho.x.i.e@gmail.com</a>
<a href=""mailto:v.i.nhoxie@gmail.com"">v.i.nhoxie@gmail.com</a>
<a href=""mailto:v.inhoxie@gmail.com"">v.inhoxie@gmail.com</a>
<a href=""mailto:v.in.h.ox.ie@gmail.com"">v.in.h.ox.ie@gmail.com</a>
<a href=""mailto:vi.nh.o.x.i.e@gmail.com"">vi.nh.o.x.i.e@gmail.com</a>
<a href=""mailto:v.i.n.ho.xie@gmail.com"">v.i.n.ho.xie@gmail.com</a>
<a href=""mailto:vin.hox.i.e@gmail.com"">vin.hox.i.e@gmail.com</a>
<a href=""mailto:vinh.o.xie@gmail.com"">vinh.o.xie@gmail.com</a>
<a href=""mailto:vin.h.oxie@gmail.com"">vin.h.oxie@gmail.com</a>
<a href=""mailto:v.i.nh.o.x.ie@gmail.com"">v.i.nh.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.h.ox.i.e@gmail.com"">v.i.n.h.ox.i.e@gmail.com</a>
<a href=""mailto:v.i.nh.ox.i.e@gmail.com"">v.i.nh.ox.i.e@gmail.com</a>
<a href=""mailto:vin.ho.x.ie@gmail.com"">vin.ho.x.ie@gmail.com</a>
<a href=""mailto:vi.n.ho.xi.e@gmail.com"">vi.n.ho.xi.e@gmail.com</a>
<a href=""mailto:v.in.hox.i.e@gmail.com"">v.in.hox.i.e@gmail.com</a>
<a href=""mailto:vi.nhoxi.e@gmail.com"">vi.nhoxi.e@gmail.com</a>
<a href=""mailto:v.inh.o.x.i.e@gmail.com"">v.inh.o.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.ho.x.ie@gmail.com"">vi.n.ho.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.h.o.xi.e@gmail.com"">v.i.n.h.o.xi.e@gmail.com</a>
<a href=""mailto:vin.hoxie@gmail.com"">vin.hoxie@gmail.com</a>
<a href=""mailto:v.inh.o.xie@gmail.com"">v.inh.o.xie@gmail.com</a>
<a href=""mailto:v.in.h.oxi.e@gmail.com"">v.in.h.oxi.e@gmail.com</a>
<a href=""mailto:vinh.o.x.i.e@gmail.com"">vinh.o.x.i.e@gmail.com</a>
<a href=""mailto:v.inh.o.xi.e@gmail.com"">v.inh.o.xi.e@gmail.com</a>
<a href=""mailto:vi.nhoxie@gmail.com"">vi.nhoxie@gmail.com</a>
<a href=""mailto:v.in.h.o.xi.e@gmail.com"">v.in.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.ho.xie@gmail.com"">v.in.ho.xie@gmail.com</a>
<a href=""mailto:v.inh.oxie@gmail.com"">v.inh.oxie@gmail.com</a>
<a href=""mailto:v.in.h.o.x.ie@gmail.com"">v.in.h.o.x.ie@gmail.com</a>
<a href=""mailto:v.in.h.ox.i.e@gmail.com"">v.in.h.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.hoxi.e@gmail.com"">vi.n.hoxi.e@gmail.com</a>
<a href=""mailto:v.in.ho.xi.e@gmail.com"">v.in.ho.xi.e@gmail.com</a>
<a href=""mailto:vinh.oxie@gmail.com"">vinh.oxie@gmail.com</a>
<a href=""mailto:vin.h.ox.ie@gmail.com"">vin.h.ox.ie@gmail.com</a>
<a href=""mailto:v.i.nhoxi.e@gmail.com"">v.i.nhoxi.e@gmail.com</a>
<a href=""mailto:vin.h.o.x.ie@gmail.com"">vin.h.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.nh.oxie@gmail.com"">v.i.nh.oxie@gmail.com</a>
<a href=""mailto:vinho.xie@gmail.com"">vinho.xie@gmail.com</a>
<a href=""mailto:v.in.ho.x.ie@gmail.com"">v.in.ho.x.ie@gmail.com</a>
<a href=""mailto:vinh.ox.ie@gmail.com"">vinh.ox.ie@gmail.com</a>
<a href=""mailto:v.inhox.ie@gmail.com"">v.inhox.ie@gmail.com</a>
<a href=""mailto:vin.hoxi.e@gmail.com"">vin.hoxi.e@gmail.com</a>
<a href=""mailto:v.i.nho.xie@gmail.com"">v.i.nho.xie@gmail.com</a>
<a href=""mailto:v.i.n.hoxi.e@gmail.com"">v.i.n.hoxi.e@gmail.com</a>
<a href=""mailto:vinhox.i.e@gmail.com"">vinhox.i.e@gmail.com</a>
<a href=""mailto:v.i.n.h.oxi.e@gmail.com"">v.i.n.h.oxi.e@gmail.com</a>
<a href=""mailto:vinho.xi.e@gmail.com"">vinho.xi.e@gmail.com</a>
<a href=""mailto:vi.n.ho.xie@gmail.com"">vi.n.ho.xie@gmail.com</a>
<a href=""mailto:vi.nho.x.i.e@gmail.com"">vi.nho.x.i.e@gmail.com</a>
<a href=""mailto:vi.n.hoxie@gmail.com"">vi.n.hoxie@gmail.com</a>
<a href=""mailto:v.inh.ox.ie@gmail.com"">v.inh.ox.ie@gmail.com</a>
<a href=""mailto:vi.nh.o.x.ie@gmail.com"">vi.nh.o.x.ie@gmail.com</a>
<a href=""mailto:vi.nho.xie@gmail.com"">vi.nho.xie@gmail.com</a>
<a href=""mailto:vi.n.hox.ie@gmail.com"">vi.n.hox.ie@gmail.com</a>
<a href=""mailto:vinh.o.xi.e@gmail.com"">vinh.o.xi.e@gmail.com</a>
<a href=""mailto:v.in.hox.ie@gmail.com"">v.in.hox.ie@gmail.com</a>
<a href=""mailto:v.inho.xi.e@gmail.com"">v.inho.xi.e@gmail.com</a>
<a href=""mailto:vi.n.h.ox.ie@gmail.com"">vi.n.h.ox.ie@gmail.com</a>
<a href=""mailto:vin.h.o.xi.e@gmail.com"">vin.h.o.xi.e@gmail.com</a>
<a href=""mailto:v.i.nh.o.xi.e@gmail.com"">v.i.nh.o.xi.e@gmail.com</a>
<a href=""mailto:v.i.nh.ox.ie@gmail.com"">v.i.nh.ox.ie@gmail.com</a>
<a href=""mailto:vin.ho.xie@gmail.com"">vin.ho.xie@gmail.com</a>
<a href=""mailto:vi.n.h.o.xie@gmail.com"">vi.n.h.o.xie@gmail.com</a>
<a href=""mailto:v.inho.x.ie@gmail.com"">v.inho.x.ie@gmail.com</a>
<a href=""mailto:vi.nho.xi.e@gmail.com"">vi.nho.xi.e@gmail.com</a>
<a href=""mailto:v.inh.oxi.e@gmail.com"">v.inh.oxi.e@gmail.com</a>
<a href=""mailto:v.i.nh.oxi.e@gmail.com"">v.i.nh.oxi.e@gmail.com</a>
<a href=""mailto:vinh.o.x.ie@gmail.com"">vinh.o.x.ie@gmail.com</a>
<a href=""mailto:v.inh.o.x.ie@gmail.com"">v.inh.o.x.ie@gmail.com</a>
<a href=""mailto:v.i.n.ho.xi.e@gmail.com"">v.i.n.ho.xi.e@gmail.com</a>
<a href=""mailto:vinh.ox.i.e@gmail.com"">vinh.ox.i.e@gmail.com</a>
<a href=""mailto:vi.n.ho.x.i.e@gmail.com"">vi.n.ho.x.i.e@gmail.com</a>
<a href=""mailto:v.in.h.o.xie@gmail.com"">v.in.h.o.xie@gmail.com</a>
<a href=""mailto:vin.ho.xi.e@gmail.com"">vin.ho.xi.e@gmail.com</a>
<a href=""mailto:v.i.n.hoxie@gmail.com"">v.i.n.hoxie@gmail.com</a>
<a href=""mailto:vin.h.o.x.i.e@gmail.com"">vin.h.o.x.i.e@gmail.com</a>"
qNEx2jLH,Zombie Waves (NOT FINISHED),memenorio,Python,Thursday 2nd of November 2023 06:42:54 PM CDT,"import pygame
from pygame.locals import *
from os.path import join
import random as r
import math

pygame.init()

# Variabili costanti
WIDTH = 1200
HEIGHT = 900
PLAYER_WIDTH = 40
PLAYER_HEIGHT = 80
TILE_WIDTH = 70
COIN_WIDTH = 20
GUN_WIDTH = 30
SHOOT_WIDTH = 10
SHOOT_SPEED = 25
ZOMBIE_SPEED = 3
PLAYER_SPEED = 5
MINIMUM_DISTANCE = 300

# Setup
screen = pygame.display.set_mode((WIDTH, HEIGHT))
screen_rect = screen.get_rect()
pygame.display.set_caption(""Zombie Waves"")

bgcolor = (0, 0, 0)
screen.fill(bgcolor)

tile = pygame.image.load(join(""Assets"", ""tile.png"")).convert()
tile = pygame.transform.scale(tile, (TILE_WIDTH, TILE_WIDTH))

bg = screen.copy()

# Creazione sfondo
for i in range(0, WIDTH, TILE_WIDTH):
        for j in range(0, HEIGHT, TILE_WIDTH):
            bg.blit(tile, (i, j))

# Creazione giocatore, pistola e moneta
player_image = pygame.image.load(join(""Assets"", ""player.png"")).convert()
player_image = pygame.transform.scale(player_image, (PLAYER_WIDTH, PLAYER_HEIGHT))
player = player_image.copy()

gun_image = pygame.image.load(join(""Assets"", ""gun.png"")).convert_alpha()
gun_image = pygame.transform.scale(gun_image, (GUN_WIDTH, GUN_WIDTH))
gun = gun_image.copy()
gun_rect = gun.get_rect()
looks_right = True

player_rect = player.get_rect()
player_rect.center = screen_rect.center

xspeed = 0
yspeed = 0

coin = pygame.Surface((COIN_WIDTH, COIN_WIDTH))
coin.fill(""yellow"")
pygame.draw.line(coin, ""orange"", (COIN_WIDTH/2, COIN_WIDTH/4), (COIN_WIDTH/2, COIN_WIDTH*(3/4)), 9)

# Controllo che la moneta non si generi a contatto col giocatore
while True:
    if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
        coin_rect = coin.get_rect()
        coin_rect.topleft = coordinates
        break
    
shoots = []
zombies = []

clock = pygame.time.Clock()
run = True

milliseconds = 2000
pygame.time.set_timer(USEREVENT, milliseconds)

while run:
    # Movimento del giocatore, che viene impedito se va contro il bordo
    player_rect.topleft = (player_rect.topleft[0] + (
        xspeed if screen_rect.left < player_rect.left < player_rect.right < screen_rect.right else (
            1 if screen_rect.left >= player_rect.left else -1)), player_rect.topleft[1] + (
        yspeed if screen_rect.top < player_rect.top < player_rect.bottom < screen_rect.bottom else (
            1 if screen_rect.top >= player_rect.top else -1)))

    # Rotazione della pistola per seguire il cursore
    pos = pygame.mouse.get_pos()
    delta_x = gun_rect.center[0] - pos[0]
    delta_y = gun_rect.center[1] - pos[1]
    angle = ((math.degrees(math.atan2(delta_y, delta_x)) + 180)*-1)
    gun = pygame.transform.rotate(gun_image, angle) 
    gun_rect.midleft = player_rect.midright

    # Aggiornamento posizione
    screen.blit(bg, (0, 0))
    screen.blit(player, player_rect)
    screen.blit(gun, gun_rect)
    screen.blit(coin, coin_rect)

    # Controllo collisione con la moneta. In caso positivo, cambia la posizione della moneta
    if player_rect.colliderect(coin_rect):
        while True:
            if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
                coin_rect = coin.get_rect()
                coin_rect.topleft = coordinates
                break
            
    for event in pygame.event.get():
        if event.type == QUIT: # Esce dal gioco
            run = False
        elif event.type == KEYDOWN or event.type == KEYUP: # Tasti per il movimento
            if event.key == K_w:
                yspeed -= (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_s:
                yspeed += (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_a:
                if looks_right:
                    player = pygame.transform.flip(player, True, False)
                    looks_right = False
                xspeed -= (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
            elif event.key == K_d:
                if not looks_right:
                    player = pygame.transform.flip(player, True, False)
                    looks_right = True               
                xspeed += (PLAYER_SPEED if event.type == KEYDOWN else -PLAYER_SPEED)
        elif event.type == MOUSEBUTTONDOWN:
            if event.button == BUTTON_LEFT: # Creazione del proiettile
                shoot = pygame.Surface((SHOOT_WIDTH, SHOOT_WIDTH))
                shoot.fill(""red"")
                shoot_rect = shoot.get_rect()
                shoot_rect.center = gun_rect.center
                shoots.append((shoot, shoot_rect, angle))
        elif event.type == USEREVENT: # Creazione dello zombie ogni breve arco di tempo
            pygame.time.set_timer(USEREVENT, 0)
            if milliseconds >= 520:
                milliseconds -= 20
            pygame.time.set_timer(USEREVENT, milliseconds)
            zombie = pygame.Surface((PLAYER_WIDTH, PLAYER_WIDTH))
            zombie.fill(""green"")
            zombie_rect = zombie.get_rect()
            # Controllo che lo zombie non si generi troppo vicino al giocatore
            while pygame.math.Vector2(player_rect.center[0], player_rect.center[1]).distance_to((coordinates := (r.randint(0, WIDTH - PLAYER_WIDTH), r.randint(0, HEIGHT - PLAYER_HEIGHT)))) < MINIMUM_DISTANCE:
                coordinates = r.randint(0, WIDTH - PLAYER_WIDTH), r.randint(0, HEIGHT - PLAYER_HEIGHT)
            zombie_rect.center = coordinates
            zombies.append((zombie, zombie_rect))

    # Tutti i controlli sui proiettili: collisioni, movimento
    if len(shoots) > 0:
        for shoot, shoot_rect, angle in shoots:
            angle_radians = math.radians(angle)
            direction = pygame.Vector2(math.cos(angle_radians), math.sin(angle_radians))
            direction.normalize_ip()

            shoot_rect.topleft = (shoot_rect.topleft[0] + direction.x * SHOOT_SPEED, shoot_rect.topleft[1] + (direction.y*-1) * SHOOT_SPEED)

            screen.blit(shoot, shoot_rect)

            if not screen.get_rect().colliderect(shoot_rect):
                shoots.remove((shoot, shoot_rect, angle))

    # Tutti i controlli sulli zombie: Aggiornamento direzione e movimento, collisione col giocatore, collisione col proiettile
    if len(zombies) > 0:
        for zombie, zombie_rect in zombies:
            pos = player_rect.center
            delta_x = zombie_rect.center[0] - pos[0]
            delta_y = zombie_rect.center[1] - pos[1]
            angle = ((math.degrees(math.atan2(delta_y, delta_x)) + 180)*-1)
            angle_radians = math.radians(angle)
            direction = pygame.Vector2(math.cos(angle_radians), math.sin(angle_radians))
            direction.normalize_ip()

            zombie_rect.topleft = (zombie_rect.topleft[0] + direction.x * ZOMBIE_SPEED, zombie_rect.topleft[1] + (direction.y*-1) * ZOMBIE_SPEED)

            screen.blit(zombie, zombie_rect)

            # Collisione col proiettile
            for shoot, shoot_rect, angle in shoots:
                if shoot_rect.colliderect(zombie_rect):
                    zombies.remove((zombie, zombie_rect))
                    shoots.remove((shoot, shoot_rect, angle))

            # Collisione col giocatore, reset di tutto
            if zombie_rect.colliderect(player_rect):
                pygame.time.set_timer(USEREVENT, 0)
                pygame.time.wait(2000)
                milliseconds = 2000
                pygame.time.set_timer(USEREVENT, milliseconds)
                zombies.clear()
                shoots.clear()
                player_rect.center = screen_rect.center
                while True:
                    if not player_rect.collidepoint((coordinates := (r.randint(0, WIDTH - COIN_WIDTH), r.randint(0, HEIGHT - COIN_WIDTH)))):
                        coin_rect = coin.get_rect()
                        coin_rect.topleft = coordinates
                        break

    

    pygame.display.flip()
    clock.tick(60)
    
pygame.quit()
"
ZFnTw4Bb,Koikatsu List Scraper V1.21,Skelun,JavaScript,Thursday 2nd of November 2023 06:39:53 PM CDT,"/* --------------------------------------------------------------------
-- Transforms embedded links into actual Hyperlinks
----------------------------------------------------------------------- */

function createHyperlink() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

  // Get the selected range
  var range = sheet.getActiveRange();
  var richTextValues = range.getRichTextValues();

  for (var i = 0; i < richTextValues.length; i++) {
    for (var j = 0; j < richTextValues[0].length; j++) {
      var textValue = richTextValues[i][j].getText();
      var link = richTextValues[i][j].getLinkUrl();

      if (link) {
        // Creates a hyperlink formula
        var formula = '=HYPERLINK(""' + link + '"", ""Here"")';

        // Set the formula in the cell
        sheet.getRange(range.getRow() + i, range.getColumn() + j).setFormula(formula);
      }
    }
  }
}

/* --------------------------------------------------------------------
-- MOON RATING
-----------------------------------------------------------------------
-- I'm using this because it was the easier way
-- to simulate rating stars.
----------------------------------------------------------------------- */

function moonRating(number) {
  // Is it a number?
  if (!isNaN(number)) {
    var votes;

    // Is it an interger?
    if (number % 1 === 0) {
      votes=""🌕"".repeat(number);
      votes+=""🌑"".repeat(5-number);
    
    // Or is it a float?
    } else {
      let n = Math.floor(number);
      votes=""🌕"".repeat(n);
      votes+=""🌗"";
      votes+=""🌑"".repeat(4-n);
    }
    return votes;
  } else {
    // If no votes
    return ""------""
  }
}
  
/* --------------------------------------------------------------------
-- Scraping data using Cheerio library
-- (https://github.com/tani/cheeriogs)
-- Script ID: 1ReeQ6WO8kKNxoaA_O0XEQ589cIrRvEBA9qcWpNqdOP17i47u6N9M5Xh0
----------------------------------------------------------------------- */

// Cheerio method to scrape
function getContent(url) {
    return UrlFetchApp.fetch(url).getContentText()
}
  
/* --------------------------------------------------------------------
-- Actual scrape function
----------------------------------------------------------------------- */

function scrapeData(force) {

  // Selects the active sheet
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

  // Get selected cells
  var selectedRange = sheet.getActiveRange();

  // Get the values from the selected cells
  var selectedValues = selectedRange.getRichTextValues(); 

  // Iterate through cells
  for (var i = 0; i < selectedValues.length; i++) {

    // It assumes the URLs are in the first column of the selected column
    var urlFromLink = selectedValues[i][0].getLinkUrl();
    var urlFromCellValue = selectedValues[i][0].getText(); // Get text value from the cell

    // Check if there is a link URL, and use it if available; otherwise, use the URL from the cell value
    var url = urlFromLink ? urlFromLink : urlFromCellValue;

    // If the value is not empty...
    if (url && isValidURL(url)) {

      // Grabs the HTML data
      var content = getContent(url);
      
      // Parses the HTML data
      var $ = Cheerio.load(content);

      /* --------------------------------------------------------------------
      -- [TITLE]
      -------------------------------------------------------------------- */
      var threadTitle = $('h1.p-title-value');

      var rawTitle = threadTitle.contents().filter(function() {
        return this.type === 'text';
      }).text();

      var titleREGEX = /(.+?)\s*\[(.+?)\](?:\s*\[(.+?)\])?/.exec(rawTitle);

      // We should check if titleREGEX is not null before accessing its indices
      if (titleREGEX) {
        var title = titleREGEX[1];
        var version = titleREGEX[2];
      } else {
        var title = ""Title Problem ⚠️"";
        var version = ""Version Problem ⚠️"";        
      }

      var devBackup = titleREGEX[3] ? titleREGEX[3] + "" ❓"" : ""Not found ⚠️"";

      /* --------------------------------------------------------------------
      -- [STATUS] (ACTIVE - ABANDONED - ONHOLD)
      -------------------------------------------------------------------- */
      // Default status
      var status = 'Active';

      // Search for ""Abandoned"" or ""Onhold""
      threadTitle.find('span').each(function() {
        var spanText = $(this).text();
        if (['Completed','Abandoned','Onhold'].includes(spanText)) {
          status = spanText;
          return false;
        }
      });

      /* --------------------------------------------------------------------
      -- [ENGINE]
      ----------------------------------------------------------------------- */
      // If there's no engine info, it returns ""unknown""
      var engine = '⚠️ Unknown';

      // Checks if there's one of these strings
      threadTitle.find('span').each(function() {
        var spanText = $(this).text();
        if (['ADRIFT','Flash','Java','Others','QSP','RAGS','RPGM',""Ren'Py"",'Tads','Unity','Unreal Engine','WebGL','Wolf RPG','HTML'].includes(spanText)) {
          engine = spanText;
          return false; // Stop searching once a match is found
        }
      });

      /* --------------------------------------------------------------------
      -- [TAGS]
      ----------------------------------------------------------------------- */
      // Selects the element containing the tags
      var tagList = $('span.js-tagList');

      // Grabs the tags and separate them by comma
      var tags = tagList.find('a.tagItem').map(function() {
        return $(this).text();
      }).get().join(', ');

      /* --------------------------------------------------------------------
      -- GAMEPLAY
      ----------------------------------------------------------------------- */
      var gameplay;

      // Assumes the [Gameplay] type by using the tags
      switch (true) {
        case tags.includes('sandbox'):
          gameplay = 'Sandbox';
          break;
        case tags.includes('turn based combat'):
          gameplay = 'TBC';
          break;
        case tags.includes('management'):
          gameplay = 'Management';
          break;
        case tags.includes('simulator'):
          gameplay = 'Simulator';
          break;
        case tags.includes('rpg'):
          gameplay = 'RPG';
          break;
        default:
          gameplay = 'Visual Novel';
      }
      
      /* --------------------------------------------------------------------
      -- - Thread [Start] Date
      ----------------------------------------------------------------------- */

      // Selects the first 'article' element
      var firstArticle = $('article').first();

      // Find the 'header.message-attribution' element
      var messageAttributionHeader = firstArticle.find('header.message-attribution');

      // Find the 'time' element with class 'u-dt'
      var timeElement = messageAttributionHeader.find('time.u-dt');

      // Check if the time element exists
      if (timeElement.length > 0) {
          // Extract the 'datetime' attribute
          var start = timeElement.attr('datetime');
          start = start.split('T')[0]; // Get the date part only

      } else {
          Logger.log(""<time> element not found."");
      }

      /* --------------------------------------------------------------------
      -- EXTRA INFORMATION
      -----------------------------------------------------------------------
      -- - Thread [Updated] Date
      -- - [Release] Date
      -- - [Dev] name
      -- - [Censored]
      ----------------------------------------------------------------------- */
      // Selects the first message body (which is the one containing the game info)
      var articleText = $('article.message-body').first().text();

      // Uses regular expressions to match and capture the information
      // When it was updated
      var updatedREGEX = /Thread Updated: ([^\s]+)/.exec(articleText);
      // When it was released
      var releaseREGEX = /Release Date: ([^\s]+)/.exec(articleText);
      // Who is the dev
      var devREGEX = /Developer: ([^\s]+)/.exec(articleText);
      // It is censored?
      var censoredREGEX = /Censored: (.+?)(?=\n|\r|\r\n)/.exec(articleText);

      // Extract the captured values or provide default values if not found
      var updated = updatedREGEX ? updatedREGEX[1] : ""Not found ⚠️"";
      var release = releaseREGEX ? releaseREGEX[1] : ""Not found ⚠️"";
      
      //Converts to string due to Google Sheets altering the type
      updated = updated.toString()
      release = release.toString()

      var dev = devREGEX ? devREGEX[1] : devBackup;
      var censored = censoredREGEX ? censoredREGEX[1] : ""Not found ⚠️"";

      /* --------------------------------------------------------------------
      -- [RATING] & [VOTES]
      ----------------------------------------------------------------------- */
      // Grabs the JSON generated by F95 forum
      var jsonInfo = $('script[type=""application/ld+json""]').last();
      
      // Uses regular expression to match and caputre the information
      var ratingREGEX = /""ratingValue"": ""(\d+(?:\.\d+)?)""/.exec(jsonInfo);
      var votesREGEX = /""ratingCount"": ""(\d+)""/.exec(jsonInfo);

      // Extract the captured values or provide default values if not found
      var rating = ratingREGEX ? ratingREGEX[1] : ""No rating yet"";
      var votes = votesREGEX ? votesREGEX[1] : ""0"";

      /* --------------------------------------------------------------------
      -- LAST UPDATE CHECK
      -- --------------------------------------------------------------------
      -- It will ignore the game if it was updated less than 30 days ago
      ----------------------------------------------------------------------- */

      // Gets today's date
      var today = new Date();

      // Parses the update & release info
      var updatedDate = new Date(updated);
      var releaseDate = new Date(release);
      
      // Subtracts both dates to get days gap
      var daysSinceLastUpdate = Math.floor((today - updatedDate) / (1000 * 60 * 60 * 24));
      var daysSinceRelease = Math.floor((today - releaseDate) / (1000 * 60 * 60 * 24));

      if (force === true || daysSinceRelease < 30 || daysSinceLastUpdate > 30) {

          /* --------------------------------------------------------------------
          -- OUTPUTS THE VALUE INTO DIFFERENT CELLS
          ----------------------------------------------------------------------- */

          // Write the scraped data to the same row
          var outputRow = selectedRange.getRow() + i;

          // Write the scraped data to adjacent columns
          var outputColumn = selectedRange.getColumn() + 1;

          // All values that will be written
          var newValues = [
              rawTitle,
              title,
              version,
              status,
              engine,
              gameplay,
              tags,
              moonRating(rating),
              votes,
              updated,
              release,
              start,
              dev,
              censored
          ];

          // Read existing values in the row
          var rangeToWrite = sheet.getRange(outputRow, outputColumn, 1, newValues.length);
          var existingValues = rangeToWrite.getValues()[0];

          // Compare existing values with new values
          for (var j = 0; j < existingValues.length; j++) {

            // If the new value is empty, keep the existing value
            if (newValues[j] === """" || newValues[j] == null) {
              newValues[j] = existingValues[j];
            }
          }

          // Set only the new non-empty values
          rangeToWrite.setValues([newValues]);
      }

    }

  }

}

/* --------------------------------------------------------------------
-- IGNORE DATE RESTRICTION
----------------------------------------------------------------------- */

function forceScrapeData() {
  scrapeData(true);
}

/* --------------------------------------------------------------------
-- CHECK IF THE STRING IS A VALID URL
----------------------------------------------------------------------- */
function isValidURL(str) {
  var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
  '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
  '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR an IP Address
  '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
  '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
  '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
  return pattern.test(str);
}

/* --------------------------------------------------------------------
-- CREATES AN EXTRA MENU OPTION
----------------------------------------------------------------------- */
  
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('Extra Functions')
      .addItem('Scrape Data', 'scrapeData')
      .addItem('Force Scrape', 'forceScrapeData')
      .addItem('Create Hyperlink','createHyperlink')
      .addToUi();
}"
4JC9mkaU,Untitled,Rofyda_Elghadban1,C++,Thursday 2nd of November 2023 06:39:52 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 //#define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  int n,counter=0;
  cin>>n;
  vector<int>aa,bb,a1,b1;
  while(n--){
    int a,b;
    cin>>a>>b;
    aa.push_back(a);
    bb.push_back(b);
  }
  map<int,int>mpa,mpb;
  for(int i=0;i<aa.size();i++){
    mpa[aa[i]]=i;
    mpb[bb[i]]=i;
  }
  for(auto i:mpa){
    a1.push_back(i.first);
  }
  for(auto i:mpb){
    b1.push_back(i.first);
  }
  if(mpa[a1[aa.size()-1]]!=mpb[b1[bb.size()-1]]||mpa[a1[0]]!=mpb[b1[0]]){
    cout<<""Happy Alex""<<""\n"";
  }else{
    cout<<""Poor Alex""<<""\n"";
  }
 }

 int main(){
  Rofyda_Elghadban();
  // int t;
  // cin>>t;
  // while(t--){
  //   solve();
  // }
  solve();
  return 0;
 }

"
zrFPBrnd,styles.css,Mangus875,CSS,Thursday 2nd of November 2023 05:24:41 PM CDT,"body {
	/*
	display: flex;
	align-items: center;
	align-content: flex-start;
	flex-wrap: wrap;
	*/
	overflow: hidden;
}

/*
div.metronome {
	transition: 0.5;
}
*/

div.metronome[met-display=bounce] {
	background-color: #e00000;
	
	position: absolute;
	transform: rotate(50deg) translate(0%, -50%);
	left: 50%;
	top: 70%;
	height: 40%;
	width: 2vw;
	
	border-radius: 100% 100% 0vw 0vw;
}"
geCsDjEF,index.html,Mangus875,HTML,Thursday 2nd of November 2023 05:24:03 PM CDT,"<!DOCTYPE html>

<html>
	<head>
		<title>Metronome</title>
		<link rel=""icon"" href=""icon.bmp"">
		
		<link rel=""stylesheet"" href=""styles.css""/>
		<script src='script.js'></script>
	</head>
	
	<body>
		<div
			class='metronome'
			id='met1'
			
			
			met-display =				'bounce'
			met-program =				'{}'
			
			met-bpm =						'168'
			met-meter =					'4'
			met-subcounts =			'1'
			
			met-accent =				'true'
			met-playsound =			'false'
			met-sound1 =				'sounds/snap.wav'
			met-sound2 =				'sounds/clap.wav'
			met-sound3 =				'sounds/tick.wav'
			met-sound-preset =	'0'
		><audio
			preload='auto'
			src='sounds/click.wav'
		></audio></div>
	</body>
</html>

<!--
	Default			Attribute					Description

	'bounce'		met-display				specifies how to display the metronome (bounce/blink/swing/none)
	'{}'				met-program				JSON program of instructions for meter, tempo, subdivision, etc. changes
	'100'				met-bpm						metronome bpm (number)
	'4'					et-meter					time signature (how many counts before an accented note is played)
	'1'					met-subcounts			beat subdivision (how many clicks per beat)
	'true'			met-accent				play accented not at beginning of measure (boolean)
	'true'			met-playsound			play metronome sound (boolean)
	''					met-sound1				normal click sound
	''					met-sound2				accented click sound
	''					met-sound3				subdivision click sound
	'Doctor'		met-preset				preset sounds for met-sound1-3 (overridden by met-sound1-3)
-->"
YLJ93Vy0,JSON for ai,amitdutta121,JSON,Thursday 2nd of November 2023 05:05:40 PM CDT,"{
	
	""back"":[
		{
			""productDescription"":""Adult Haloween"",
			""mainProductDisclaimer"":"""",
			""subProductDisclaimer"":"""",
			""logoType"":""FSC/PEFC"",
			""dateOfPrint"":""sdlfjnsdljkfhbsdjkhfb"",
			""internalJobNumber"":""kdsjnfjhabsdfjkhbdf"" // optional
		}
	]
}




{
	""front"":[
			{
				""productBenifit"":""dsaklfjhbasdjkhfbasdhjkfb"",
				""sellingPrice"":{
					""cz"":""xxxx"",
					""sk"":""xxx"",
					""hu"":""xxxx""
				},
				
			}
	],
	""back"":[
		{
			""sizeRangeType"":""ZEROTOFOUR/fOURPLUS/NEWBORN"",
			""sizeLowerRange"":13,
			""sizeUpperRange"":12,
			""productDescriptions"":[
				""en"":""sdkjfsd"",
				""cz"":""kdsjbnfkjsdbf"",
				""sk"":""klsdjnfkljsdnf"",
				""hu"":""sdkjfnsdjknf""
			],
			""logoType"":""FSC/PEFC"",
			""barcodeNumber"":""278635126783512"",
			""madeInText"":""Made in bangadesh/ Slovak translation/ Hu transaltion"",
			""dateOfPrint"":""kdsfjbngjksdfhbghjksdfbg"",
			""eqosNUmber"":""xxxxxxxx"",
			""longDescription"":""sdkjhfbjksdhbfbsdf"",
			""sellingPrice"":{
					""cz"":""xxxx"",
					""sk"":""xxx"",
					""hu"":""xxxx""
				},
		}
	]
}"
RnuXmHc5,Zad1 Kursova Rabota,borko_panterata,C++,Thursday 2nd of November 2023 04:53:28 PM CDT,"#include <iostream>

int sumaOtr(int array[])
{
    int suma = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] < 0) suma += array[i];
    } 
    return suma;
}

double avgPolChisla(int min, int max, int array[])
{
    double sumaPol = 0;
    double polChislaCounter = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] >= min && array[i] <= max)
        {
            sumaPol += array[i];
            polChislaCounter++;
        }
    }
    return sumaPol / polChislaCounter;
}

int nullCount(int array[])
{
    int brojNuli = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] == 0) brojNuli++;
    }
    return brojNuli;
}

int maxPolChislo(int array[])
{
    int maxNum = 0;
    for (int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
    {
        if (array[i] > maxNum)
        {
            maxNum = array[i];
        }
    }
    return maxNum;
}
/*
int arrayCut(int array[], int cutIndex)
{
    int array2[cutIndex];
    for(int i = int i = 0; i < (sizeof(array) / sizeof(array[*array])); i++)
}
*/

int main()
{
    int arraySize;
    int masiv[25];
    int min;
    int max;
    char functionChoice;
    while (true)
    {
        std::cout << ""Enter size of the array: "";
        std::cin >> arraySize;
        if (arraySize > 25 || arraySize <= 0) std::cout << ""The count of the array elements must be within the range [1-25]!!"";
        else break;
    }

    for (int i = 0; i < 25; i++)
    {
        if (i < arraySize) std::cin >> masiv[i];
        else masiv[i] = 0;
    }

    while (true) 
    {
        std::cout << ""Please enter one of the selcted options:"" << std::endl;
        std::cout << ""Enter '1' for getting the sum of the negative numbers."" << std::endl;
        std::cout << ""Enter '2' for getting the average of the array elements within [min - max]."" << std::endl;
        std::cout << ""Enter '3' for getting the count of the array elements equal to null."" << std::endl;
        std::cout << ""Enter '4' for getting the highest positive number and it's place in the array."" << std::endl;
        std::cout << ""Enter 'x' for exiting the program."" << std:: endl;
        std::cin >> functionChoice;

        switch (functionChoice)
        {
            case '1':
                sumaOtr(masiv);
                break;
            case '2':
                std::cout << ""Please enter min value: "";
                std::cin >> min; // PROVERI VALIDNOST POLOJITELNO!!!
                std::cout << ""Please enter max value: "";
                std::cin >> max; // PROVERI VALIDNOST POLOJITELNO!!!
                avgPolChisla(min, max, masiv);
                break;
            case '3':
                std:: cout << ""The count of the elements equal to 0 is: "" << nullCount(masiv);
                break;
            case '4':
                std::cout << ""The highest positive number is: "" << maxPolChislo(masiv); //MQSTO V MASIVA
                break;
            case 'x':
                std::cout << ""Slynchev i usmihnat den uvajaemi gospodine/uvajaema gospojo :)"";
                return 0;
            default: 
                std::cout << ""Please enter a valid symbol to access one of the listed options!"";
                break;
        }
    }
    
    return 0;
}"
tuZVe3df,Untitled,borko_panterata,C++,Thursday 2nd of November 2023 04:52:53 PM CDT,"#include <iostream>


int main()
{
    while(true)
    {
        int x;
        int sumaOtr = 0;
        int min = 1;
        int max = 6;
        int sumaInterval = 0;
        int counterInterval = 0;
        double avgInterval = 0;
        int nuliCounter = 0;
        int maxNumber;
        int maxNumberPosition = 1;
        std:: cout << ""Please enter number count:"";
        std:: cin >> x;
        if(x > 25) std:: cout << ""Please ENTER LESS THAN 25 NUMBERS"";
        else
        {
            int masiv[x];
            for(int i = 0; i < x; i++)
            {
                std:: cin >> masiv[i];
                if(i == 0) maxNumber = masiv[i];
                else if(masiv[i] > maxNumber){
                    maxNumber = masiv[i];
                    maxNumberPosition = i + 1;
                }
                if(masiv[i] < 0) sumaOtr += masiv[i];
                else if(masiv[i] == 0) nuliCounter++;
                else if(masiv[i] >= min && masiv[i] <= max){
                    sumaInterval += masiv[i];
                    counterInterval++;
                }
            } 
            avgInterval = (double)sumaInterval / counterInterval;
            std:: cout << ""Suma ot otricatelni chisla: "" << sumaOtr << ""\n"";
            std:: cout << ""Sredno aritmetichno ot polojitelni chisla v interval ["" << min << "" "" << max << ""]: "" << avgInterval  << ""\n"";
            std:: cout << ""Broj nuli v masiva: "" << nuliCounter << ""\n"";
            std:: cout << ""Naj-golqmo chislo v masiva i negoviq nomer: "" << maxNumber << "", "" << maxNumberPosition << "" mqsto"" << ""\n"";
            std:: cout << ""Vyvedeni chisla v masiva: "";
            for(int i = 0; i < x; i++) std:: cout << masiv[i] << "" "";
            break;
            int n;
        }
        
    }

    return 0;
}"
H9nQxv3t,Untitled,cyberjab,C++,Thursday 2nd of November 2023 04:38:35 PM CDT,"Старт программы
--------------------------------------------------------------------------------------------------
//#pragma GCC optimize(""03"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")
#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

using namespace std;
using ll = long long;
using db = double;
using ldb = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vint = vector<int>;
using vll = vector<ll>;
#define all(x) x.begin(), x.end()
#define size(x) int(x.size())
#define rep(x) for(int rep_i = 0; rep_i < x; ++rep_i)
#define forp(s, i, f) for(int i = s; i < f; ++i)
#define form(s, i, f) for(int i = s; i > f; --i)

const int MOD = 1e9 + 7;
const int MOD2 = 998244353;
const int INF = 2e9 + 7;
const ll LINF = 1e18 + 7;
const double EPS = 1e-9;
const long double PI = acosl(-1.0);

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
}
---------------------------------------------------------------------------------------------------
sqrt
---------------------------------------------------------------------------------------------------
#include <math.h>

double sqrt(double x) {
    if (x <= 0)
        return 0;       // if negative number throw an exception?
    int exp = 0;
    x = frexp(x, &exp); // extract binary exponent from x
    if (exp & 1) {      // we want exponent to be even
        exp--;
        x *= 2;
    }
    double y = (1+x)/2; // first approximation
    double z = 0;
    while (y != z) {    // yes, we CAN compare doubles here!
        z = y;
        y = (y + x/y) / 2;
    }
    return ldexp(y, exp/2); // multiply answer by 2^(exp/2)
}
--------------------------------------------------------------------------------------------------
Быстрое возведение в степень по модулю
--------------------------------------------------------------------------------------------------
#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

unsigned powmod(unsigned base, unsigned exp, unsigned modulo)
{
    unsigned res = 1;

    while (exp != 0)
    {
        if ((exp & 1) != 0)
        {
            res = (1ll * res * base) % modulo;
        }

        base = (1ll * base * base) % modulo;
        exp >>= 1;
    }

    return res;
}
----------------------------------------------------------------------------------------------------
НОК и НОД
----------------------------------------------------------------------------------------------------
#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

int gcd1(int a, int b) {
    if (b == 0)
        return a;
    return gcd1(b, a % b);
}

int gcd2(int a, int b) {
    while (b > 0) {
        a %= b;
        swap(a, b);
    }
    return a;
}

int lcm(int a, int b) {
    return a * b / gcd1(a, b);
}

int main() {
    long a, b;
    cin >> a >> b;
    cout << lcm(a, b);
    return 0;
}
--------------------------------------------------------------------------------------------------
Расширенный алгоритм Эвклида
--------------------------------------------------------------------------------------------------
#include <iostream>
#include <cmath>

using namespace std;

int gcd_ext(int a, int b, int& x, int& y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = gcd_ext(b, a % b, x, y);
    x -= (a / b) * y;
    swap(x, y);
    return d;
}

int main() {
    return 0;
}
---------------------------------------------------------------------------------------------------
Решето Эратосфена
---------------------------------------------------------------------------------------------------
#include <iostream>
#include<cmath>
#include <vector>

using namespace std;

int main() {
    long n = 15485864;
    vector <int> prime(n + 1, 1);
    prime[0] = prime[1] = 0;
    long k = 0;
    long stop;
    cin >> stop;
    long ans;
    for (int i = 2; i <= n; ++i) {
        if (!prime[i] || i * 1ll * i > n) {
            continue;
        }
        for (int j = i * i; j <= n; j += i)
            prime[j] = 0;
    }
    for (long i = 1; i < n; i++) {
        if (prime[i] == 1) {
            k++;
        }
        if (k == stop) {
            ans = i;
            break;
        }
    }
    cout << ans;
    return 0;
}
------------------------------------------------------------------------------------------------------
Задача с бором
------------------------------------------------------------------------------------------------------
//#pragma GCC optimize(""03"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")
#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

#define forp(i, s, f) for(int i = s; i < f; i++)

using namespace std;
using ll = long long;

ll cnt = 0;

int dfs(vector<vector<int>> &bor, int row, int k, int ans) {
    k++;
    int a = 0;
    forp(i, 0, 27) {
        if (bor[row][i] != 0) {
            a = dfs(bor, bor[row][i], k, 0);
            bor[row][27] -= a;
            bor[row][28] -= a;
            ans += a;
        }
    }
    int c = 0;
    if (bor[row][27] >= bor[row][28]) {
        c = bor[row][28];
        cnt += k * c;
        ans += c;
        bor[row][27] -= c;
        bor[row][28] = 0;
    }
    else {
        c = bor[row][27];
        cnt += k * c;
        ans += c;
        bor[row][28] -= c;
        bor[row][27] = 0;
    }
    return ans;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
    int t;
    long long ans;
    cin >> t;
    string s;
    vector <int> p(29, 0);
    vector<vector<int>> bor;
    bor.push_back(p);
    bor[0][27] = t;
    bor[0][28] = t;
    int last_row = 1;
    forp(i, 0, t) {
        cin >> s;
        s += ""$"";
        int row = 0;
        reverse(s.begin(), s.end());
        /*cout << s << endl;*/
        for (auto now : s) {
            int x = (int)now - 96;
            if (x > 0 and bor[row][x] == 0) {
                bor.push_back(p);
                bor[row][x] = last_row;
                bor[last_row][27]++;
                row = last_row;
                last_row++;
            }
            else if (x > 0 and bor[row][x] != 0) {
                bor[bor[row][x]][27]++;
                row = bor[row][x];
            }
        }
    }
    forp(i, 0, t) {
        cin >> s;
        s += ""$"";
        int row = 0;
        reverse(s.begin(), s.end());
        /*cout << s << endl;*/
        for (auto now : s) {
            int x = (int)now - 96;
            if (x > 0 and bor[row][x] == 0) {
                bor.push_back(p);
                bor[row][x] = last_row;
                bor[last_row][28]++;
                row = last_row;
                last_row++;
            }
            else if (x > 0 and bor[row][x] != 0) {
                bor[bor[row][x]][28]++;
                row = bor[row][x];
            }
        }
    }
    /*for (auto now : bor) {
        for (auto n : now) {
            cout << setw(3);
            cout << n << "" "";
        }
        cout << endl;
    }*/
    dfs(bor, 0, -1, 0);
    cout << cnt;
}
----------------------------------------------------------------------------------------------------
Задача на алгоритм Флойда
----------------------------------------------------------------------------------------------------
//#pragma GCC optimize(""03"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")
#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

using namespace std;

const int N = 107;
int graf[N][N];
int cnt = 0;
set <pair<int, int>> st;

bool floyd(int n) {
    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (k != i and k != j) {
                    if (graf[i][j] == graf[i][k] + graf[k][j]) {
                        st.insert(make_pair(i, j));
                        st.insert(make_pair(j, i));
                    }
                    else if (graf[i][j] > graf[i][k] + graf[k][j]) {
                        //graf[i][j] = graf[i][k] + graf[k][j];
                        return false;
                    }
                }
            }
        }
    }
    return true;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
    int n, x;
    cin >> n;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> x;
            graf[i][j] = x;
        }
    }
    if (floyd(n)) {
        cout << st.size() / 2;
    }
    else {
        cout << -1;
    }
}
--------------------------------------------------------------------------------------------------
"
Uh42cV7i,Пособие/«Центр Дерева»,Bobert0032,C++,Thursday 2nd of November 2023 04:25:42 PM CDT,"#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

vector<vector<int>> G; // G - список смежности
vector<int> d; // d[i] = x, это означает, что кратчайшее расстояние от начальной вершины до i-ой равняется x
               // d[i] = -1, означает, что мы ещё не посетили i-ую вершину
vector<int> p; // p[i] = x, означает, что последнее ребро на кратчайшем пути от начальной вершины до i-ой - это x->i

void dfs(int v) { // dfs(v) обходит все непосещённые вершины, достижимые из v. Этот dfs также вычисляет кратчайшее расстояние до этих вершин и последнее ребро на этих путях
    for (int nxt : G[v]) { // Обходим вершины, смежные с v-ой
        if (d[nxt] == -1) {  // Если nxt-ая вершины ещё не посещена, то нужно её рассмотреть
            d[nxt] = d[v] + 1; // Кратчайшее расстояние до nxt-ой вершины - это кратчайшее расстояние до v + 1 (1 - это длина ребра v->nxt)
            p[nxt] = v; // Кратчаший путь в nxt заканчивается ребром v->nxt
            dfs(nxt); // Запускаем dfs из nxt-ой вершины
        }
    }
}

void solve() {
    int n;
    cin >> n; // считываем кол-во вершин в графе
    G.resize(n);
    d.resize(n, -1); // Изначально заполняем массив расстояний -1, d[v] = -1 будет означать, что вершина ещё не посещена
    p.resize(n);
    for (int i = 1; i < n; ++i) { // Итерируемся по рёбрам графа
        int x;
        cin >> x; // Считываем предка i-ой вершины
        x--; // Уменьшаем x на 1, так как в задаче нумерация идёт с 1, а нам было бы проще, если бы она шла с 0
        // Так как граф неориентированный, то нужно добавить как ребро i->x, так и ребро x->i
        G[i].push_back(x);
        G[x].push_back(i);
    }
    // Сначала нужно найти диаметр дерева, а именно его начало и конец
    d[0] = 0; // Расстояние до 0-ой вершины от самой себя равно 0
    dfs(0); // Запускаем dfs из 0-ой вершины
    int start_d = 0; // start_d - это один из концов диаметра.
                     // Эта вершина характерна тем, что расстояние от 0-ой вершины до неё максимально среди всех вершин.
                     // Изначально мы присваем хоть какое-то значение start_d, допустим - это 0
    for (int i = 0; i < n; ++i) { // Перебираем вершину
        if (d[i] > d[start_d]) { // Если расстояние от 0-ой вершины i-ой больше, чем до start_d-ой, то нужно обновить значение start_d
            start_d = i;
        }
    }
    // Сбрасываем значение массива кратчайших расстояний
    for (int i = 0; i < n; ++i) {
        d[i] = -1;
    }
    d[start_d] = 0; // Расстояние от start_d-ой вершины до самой себя равняется 0
    dfs(start_d); // Запускаем dfs из start_d-ой вершины
    int end_d = 0; // end_d - второй конец диаметра.
                   // Эта вершина характерна тем, что расстояние от start_d-ой вершины до неё максимально среди всех вершин.
                   // Изначально мы присваем хоть какое-то значение end_d, допустим - это 0
    for (int i = 0; i < n; ++i) { // Перебираем вершину
        if (d[i] > d[end_d]) { // Если расстояние от start_d-ой вершины до i-ой больше, чем до end_d, то нужно обновить значение end_d
            end_d = i;
        }
    }
    vector<int> path; // path - это вершины, принадлежащие одному диаметру. Эти вершины записаны в path так, чтобы между соседними имелось ребро, и path[0] и path.back() - это концы диаметра
    int at = end_d; // at - это текущая вершина пути. Начинаем обходить с end_d
    while (at != start_d) { // Пока мы не пришли в start_d продолжаем цикл
        path.push_back(at); // Добавляем в путь текущую вершину
        at = p[at]; // Переходим к следующей вершине на пути
    }
    path.push_back(at); // В конце концов, добавляем в путь start_d (at == start_d)
    vector<int> ans; // ans - это искомые центральные вершины
    if (path.size() % 2 == 0) { // Если на диаметре лежит чётное кол-во вершин, то центрами буду 2 вершину, находящиеся посередине этого пути
        ans.push_back(path[path.size() / 2 - 1]);
        ans.push_back(path[path.size() / 2]);
    } else { // Если на диаметре лежит нечётное кол-во вершин, то центром будет вершина, лежащая посередине этого пути
        ans.push_back(path[path.size() / 2]);
    }
    sort(ans.begin(), ans.end()); // По условию задачи, в ответе нужно вывести вершины в порядке возрастания
    for (auto el : ans) {
        cout << el + 1 << ' '; // Так как в коде используется нумерация с 0, а в задаче с 1, то нужно ко всем вершинам в ответе прибавить 1
    }
}

int main() {
    solve();
    return 0;
}"
cByjdNKA,Chat_W3.html,Thunder-Menu,HTML,Thursday 2nd of November 2023 03:50:48 PM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Emoji Chat</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }

        #chat-box {
            width: 70%;
            max-height: 400px;
            border: 1px solid #ccc;
            overflow-y: scroll;
            padding: 10px;
            float: left;
            clear: both;
        }

        #controls {
            width: 30%;
            padding: 10px;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        #message-controls {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        #emoji-list {
            display: none;
            flex-wrap: wrap;
            gap: 5px;
            padding-top: 10px;
            border-top: 1px solid #ccc;
            position: absolute;
            background-color: white;
            z-index: 1;
        }

        .emoji {
            cursor: pointer;
            width: 20px;
            height: 20px;
        }

        .chat-message {
            margin-bottom: 5px;
        }

        .username-label {
            cursor: pointer;
            text-decoration: underline;
        }

        .user-options {
            display: none;
            flex-direction: column;
            gap: 10px;
            position: absolute;
            background-color: white;
            z-index: 1;
            padding: 10px;
        }
    </style>
</head>

<body>
    <h1>Emoji Chat</h1>
    <div id=""chat-box""></div>
    <div id=""controls"">
        <div id=""message-controls"">
            <textarea id=""message-input"" rows=""5"" cols=""40"" placeholder=""Message""></textarea>
            <button id=""emoji-button"">Emojis</button>
            <button onclick=""sendMessage()"">Envoyer</button>
            <textarea id=""username"" placeholder=""Nom d'utilisateur""></textarea>
            <select id=""user-list"" size=""5""></select>
            <button id=""delete-button"" onclick=""deleteConfig()"">Supprimer la configuration</button>
        </div>

    <div id=""emoji-list""></div>
    <div id=""admin-controls"" style=""display: none;"">
        <h2>Exclure un Utilisateur</h2>
        <label for=""usernameExclude"">Nom d'utilisateur à exclure :</label>
        <input type=""text"" id=""usernameExclude"">
        <button id=""exclude-button"">Exclure</button>

        <h2>Vérifier et Supprimer les Exclusions</h2>
        <label for=""usernameCheck"">Nom d'utilisateur :</label>
        <input type=""text"" id=""usernameCheck"">
        <button id=""check-button"">Vérifier</button>
        <div id=""result""></div>
        <label for=""excludedUsers"">Utilisateurs exclus :</label>
        <select id=""excludedUsers""></select>
        <button id=""remove-button"">Supprimer l'exclusion</button>
    </div>
</div>

    <script>
        const chatBox = document.getElementById(""chat-box"");
        const userList = document.getElementById(""user-list"");
        const usernameInput = document.getElementById(""username"");
        const messageInput = document.getElementById(""message-input"");
        const emojiButton = document.getElementById(""emoji-button"");
        const emojiList = document.getElementById(""emoji-list"");
        const deleteButton = document.getElementById(""delete-button"");

        const userLabel = document.createElement(""label"");
        userLabel.className = ""username-label"";
        const savedUsername = localStorage.getItem(""chatUsername"");
        userLabel.textContent = savedUsername || ""Changer le nom d'utilisateur"";
        userLabel.addEventListener(""click"", openUserOptions);
        document.body.insertBefore(userLabel, document.getElementById(""chat-box""));

        const userOptionsContainer = document.createElement(""div"");
        userOptionsContainer.className = ""user-options"";
        userOptionsContainer.style.left = userLabel.offsetLeft + ""px"";
        userOptionsContainer.style.top = userLabel.offsetTop + userLabel.offsetHeight + ""px"";
        document.body.appendChild(userOptionsContainer);

        const emojis = [""😀"", ""😄"", ""😁"", ""😆"", ""😅"", ""🤣"", ""😂"", ""🙂"", ""🙃"", ""😉""];
        emojis.forEach(emoji => {
            const emojiElement = document.createElement(""span"");
            emojiElement.className = ""emoji"";
            emojiElement.textContent = emoji;
            emojiElement.addEventListener(""click"", () => insertEmoji(emoji));
            emojiList.appendChild(emojiElement);
        });

        emojiButton.addEventListener(""click"", toggleEmojiList);

        function toggleEmojiList() {
            emojiList.style.display = emojiList.style.display === ""block"" ? ""none"" : ""block"";
        }

function sendMessage() {
    const message = messageInput.value;

    if (message === ""!More"") {
        document.getElementById(""admin-controls"").style.display = ""block"";
        return;
    }
    if (currentUser && message) {
        const newMessage = document.createElement(""div"");
        newMessage.className = ""chat-message"";
        newMessage.innerHTML = `<strong>${currentUser}:</strong> ${message}`;
        chatBox.appendChild(newMessage);
        saveMessage(currentUser, message);
        messageInput.value = """";
  updateUserLastActive(currentUser);
    }
}




        function insertEmoji(emoji) {
            messageInput.focus();
            const startPosition = messageInput.selectionStart;
            const endPosition = messageInput.selectionEnd;
            const textBefore = messageInput.value.substring(0, startPosition);
            const textAfter = messageInput.value.substring(endPosition);
            messageInput.value = `${textBefore}${emoji}${textAfter}`;
            messageInput.setSelectionRange(startPosition + emoji.length, startPosition + emoji.length);
            emojiList.style.display = ""none"";
        }

        function deleteConfig() {
            localStorage.removeItem(""chatUsers"");
            localStorage.removeItem(""chatUsername"");
            localStorage.removeItem(""chatMessages"");
            userList.innerHTML = """";
            deleteButton.style.display = ""none"";
            usernameInput.style.display = ""block"";
            loadUserList();
        }

        function loadUserList() {
            userList.innerHTML = """";
    const onlineUsers = getOnlineUsers();
    onlineUsers.forEach(user => {
        addUserToComboBox(user);
    });
            const savedUsers = JSON.parse(localStorage.getItem(""chatUsers"")) || [];
            savedUsers.forEach(user => {
                addUserToComboBox(user);
            });

            if (savedUsers.length > 0) {
                deleteButton.style.display = ""block"";
            }
if (savedUsername) {
    userList.value = savedUsername;
}

}
let currentUser = """";

function addUserToComboBox(username) {
    const optionExists = [...userList.options].some(option => option.value === username);
    if (!optionExists) {
        const newUserOption = new Option(username, username);
        userList.appendChild(newUserOption);
    }
    currentUser = username;
}



        function saveUser(user) {
            const savedUsers = JSON.parse(localStorage.getItem(""chatUsers"")) || [];
            if (!savedUsers.includes(user)) {
                savedUsers.push(user);
                localStorage.setItem(""chatUsers"", JSON.stringify(savedUsers));
                loadUserList();
            }
        }

        if (savedUsername) {
            usernameInput.style.display = ""none"";
            saveUser(savedUsername);
        }

        usernameInput.addEventListener(""blur"", () => {
            const newUsername = usernameInput.value.trim();
            if (newUsername) {
                usernameInput.style.display = ""none"";
                saveUser(newUsername);
                localStorage.setItem(""chatUsername"", newUsername);
                userLabel.textContent = newUsername;
            }
        });

        loadMessages();

function loadMessages() {
    chatBox.innerHTML = ''; // Vider la boîte de chat
    const savedMessages = JSON.parse(localStorage.getItem(""chatMessages"")) || {};
    Object.keys(savedMessages).forEach(user => {
        savedMessages[user].forEach(message => {
            const newMessage = document.createElement(""div"");
            newMessage.className = ""chat-message"";
            newMessage.innerHTML = `<strong>${user}:</strong> ${message}`;
            chatBox.appendChild(newMessage);
        });
    });
}


        function saveMessage(user, message) {
            const savedMessages = JSON.parse(localStorage.getItem(""chatMessages"")) || {};
            if (!savedMessages[user]) {
                savedMessages[user] = [];
            }
            savedMessages[user].push(message);
            localStorage.setItem(""chatMessages"", JSON.stringify(savedMessages));
        }

        loadUserList();

        function openUserOptions() {
            userOptionsContainer.style.display = ""block"";
            const setUsernameOption = document.createElement(""button"");
            setUsernameOption.textContent = ""Changer le nom d'utilisateur"";
            setUsernameOption.addEventListener(""click"", changeUsername);
            userOptionsContainer.appendChild(setUsernameOption);

            const deleteUserOption = document.createElement(""button"");
            deleteUserOption.textContent = ""Supprimer la configuration"";
            deleteUserOption.addEventListener(""click"", deleteConfig);
            userOptionsContainer.appendChild(deleteUserOption);

            document.addEventListener(""click"", (e) => {
                if (!userOptionsContainer.contains(e.target) && e.target !== userLabel) {
                    userOptionsContainer.style.display = ""none"";
                    setUsernameOption.remove();
                    deleteUserOption.remove();
                }
            });
        }

        function changeUsername() {
            usernameInput.style.display = ""block"";
            usernameInput.value = savedUsername;
            userOptionsContainer.style.display = ""none"";
        }

    let excludedUsers = JSON.parse(localStorage.getItem(""excludedUsers"")) || [];
    const excludedUsersSelect = document.getElementById(""excludedUsers"");
    const resultDiv = document.getElementById(""result"");
    const excludeButton = document.getElementById(""exclude-button"");
    const checkButton = document.getElementById(""check-button"");

    if (excludedUsers.includes(localStorage.getItem(""chatUsername""))) {
            document.body.innerHTML = '<a href=""about:blank"">Vous avez été exclu</a>';
            throw new Error(""L'utilisateur est exclu""); // Arrêter l'exécution du script
    }

        function refreshExcludedUsersOptions() {
            excludedUsersSelect.innerHTML = """";
            excludedUsers.forEach(username => {
                const option = document.createElement(""option"");
                option.text = username;
                excludedUsersSelect.add(option);
            });
        }

        excludeButton.addEventListener(""click"", excludeUser);

        function excludeUser() {
            const usernameInput = document.getElementById(""usernameExclude"");
            const username = usernameInput.value.trim();
            if (username) {
                excludedUsers.push(username);
                localStorage.setItem(""excludedUsers"", JSON.stringify(excludedUsers));
                usernameInput.value = """";
                refreshExcludedUsersOptions();
                resultDiv.innerHTML = ""<h2>Utilisateur exclu avec succès !</h2>"";
            }
        }

        checkButton.addEventListener(""click"", () => {
            const username = document.getElementById(""usernameCheck"").value.trim();
            if (excludedUsers.includes(username)) {
                resultDiv.innerHTML = ""<h2>Utilisateur exclu</h2>"";
            } else {
                resultDiv.innerHTML = ""<h2>Utilisateur non exclu</h2>"";
            }
        });

        refreshExcludedUsersOptions();

        const removeButton = document.getElementById(""remove-button"");

        removeButton.addEventListener(""click"", () => {
            const selectedUsername = excludedUsersSelect.value;
            if (selectedUsername) {
                const index = excludedUsers.indexOf(selectedUsername);
                if (index !== -1) {
                    excludedUsers.splice(index, 1);
                    localStorage.setItem(""excludedUsers"", JSON.stringify(excludedUsers));
                    refreshExcludedUsersOptions();
                    resultDiv.innerHTML = ""<h2>Exclusion supprimée avec succès !</h2>"";
                }
            }
        });


let lastMessageCount = 0; // Variable pour stocker le nombre de messages la dernière fois qu'ils ont été chargés
const refreshInterval = setInterval(refreshChat, 5000); // 5000ms équivaut à 5 secondes

function refreshChat() {
    // Vérifier si un nouvel utilisateur a été banni
    if (excludedUsers.includes(localStorage.getItem(""chatUsername""))) {
        document.body.innerHTML = '<a href=""about:blank"">Vous avez été exclu</a>';
        clearInterval(refreshInterval); // Arrêtez le rafraîchissement si l'utilisateur est exclu.
        return;
    }

    loadMessages(); // Charger de nouveaux messages
}
function updateUserLastActive(username) {
    const userLastActive = JSON.parse(localStorage.getItem(""userLastActive"")) || {};
    userLastActive[username] = Date.now(); // L'heure actuelle en millisecondes
    localStorage.setItem(""userLastActive"", JSON.stringify(userLastActive));
}
function getOnlineUsers() {
    const userLastActive = JSON.parse(localStorage.getItem(""userLastActive"")) || {};
    const onlineUsers = [];
    const FIVE_MINUTES = 5 * 1000; // 5 minutes en millisecondes

    for (const user in userLastActive) {
        if (Date.now() - userLastActive[user] < FIVE_MINUTES) {
            onlineUsers.push(user);
        }
    }

    return onlineUsers;
}


setInterval(refreshChat, 5000); // Rafraîchir le chat toutes les 5 secondes

    </script>

</body>

</html>
"
jwSGpqbf,countdown.py,ssoni,Python,Thursday 2nd of November 2023 03:41:33 PM CDT,"import time

x=int(input('Start at what number? '))
while x>=1:
    print(x)
    x=x-1
    time.sleep(1)
print ('blast off!')
"
26Xd6VeR,secret snowy business updated,coinwalk,JavaScript,Thursday 2nd of November 2023 03:30:53 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/100).toFixed(8));
var burp = nudie;
var taget = (smiley*2);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp*2)>=(smiley/5)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
if ((burp*2)>=(bolance/5)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
pLSEdUX0,9.2.15,myloyo,C#,Thursday 2nd of November 2023 03:20:45 PM CDT,"using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Globalization;

namespace myloyorrr
{
    class Program
    {
        static void Main()
        {
            using (StreamReader sr = new StreamReader(""C:/Настя/in.txt""))
            {
                using (StreamWriter sw = new StreamWriter(""C:/Настя/out.txt""))
                {
                    int x, y;
                    string s;
                    while ((s = sr.ReadLine()) != null)
                    {
                        string[] a = s.Split(' ');
                        x = Convert.ToInt32(a[0]);
                        y = Convert.ToInt32(a[1]);
                        sw.WriteLine(Math.Max(x, y));
                    }
                    
                }
            }
        }
    }
}
"
Qfa1fq0J,Codice per Simone Alan,homezappa,C++,Thursday 2nd of November 2023 03:18:53 PM CDT,"#include <Adafruit_NeoPixel.h>

Adafruit_NeoPixel strip = Adafruit_NeoPixel(16, 15, NEO_GRB + NEO_KHZ800); //15 LEDS, 

/* Questa funzione accende in sequenza i led dal numero 0 al numero massimo (definito sopra: 16)
 * nel colore indicato, aspettando il tempo wait fra l'accensione dei led 
 * */
void  accensione_sequenziale(uint32_t c, uint16_t wait)
{
  for(uint16_t i=0; i<strip.numPixels(); i++) {
    strip.setPixelColor(i, c);
    strip.show();
    delay(wait);
  }
  //spegni tutti i leds
  strip.clear();
  strip.show();
  delay(wait);
}

/* Questa funzione accende in sequenza i led dal numero 0 al numero metà del massimo 
 * nel colore1 indicato, aspettando il tempo wait fra l'accensione dei led 
 * poi accende in sequenza il resto (dalla metà in poi) fino alla fine, nel colore 2
 * */
void  accensione_sequenziale_due_colori(uint32_t c1, uint32_t c2, uint16_t wait)
{
  /* accendo la metà dei led nel colore 1 */
  for(uint16_t i=0; i<strip.numPixels()/2; i++) {
    strip.setPixelColor(i, c1);
    strip.show();
    delay(wait);
  }
  /* accendo l'altra metà dei led nel colore 2 */
  for(uint16_t i=strip.numPixels()/2; i<strip.numPixels(); i++) {
    strip.setPixelColor(i, c2);
    strip.show();
    delay(wait);
  }
  //spegni tutti i leds
  strip.clear();
  strip.show();
  delay(wait);
}

void setup() {
  //SETUP LEDS NEOPIXELS
  strip.begin();
  strip.setBrightness(80); //[0-255]
  strip.clear(); // metti ad off tutti i leds
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {  //ACCENSIONE SEQUENZIALE CON COLORE FISSO
  /* creo i due colori */
  uint32_t colorRed = strip.Color(255,0,0); //RED-GREEN-BLUE
  uint32_t colorBlue = strip.Color(0,0,255); //Spero che sia così, il blu!!!
  /* chiamo le funzioni: prima tutti rossi, poi tutti blu, poi metà rossi e metà blu */
  accensione_sequenziale(colorRed, 60);
  delay(60);
  accensione_sequenziale(colorBlue, 60);
  delay(60);
  accensione_sequenziale_due_colori(colorRed,colorBlue,60);
  delay(60);
}
"
iXWrz8TT,WTF,IvanNenov,JavaScript,Thursday 2nd of November 2023 03:05:53 PM CDT,"function suplicesforSchool(input) {

    let pens = Number(input[0]);
    let markets = Number(input[1]);
    let preparation = Number(input[2]);
    let percent = Number(input[3]);

    let pensPrice = pens * 5.80;
    let marketsPrice = markets * 7.20;
    let preparationPrice = preparation * 1.20;
    let totalPercent = percent / 100;
    
    let totalMaterialPrice = pensPrice + marketsPrice + preparationPrice;
    let totalprice = totalMaterialPrice - (totalMaterialPrice / totalPercent);
}
suplicesforSchool([""2 "",""3 "",""4 "",""25 ""]);"
mz97CsGw,secret snowy business,coinwalk,JavaScript,Thursday 2nd of November 2023 02:53:42 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/80).toFixed(8));
var burp = nudie;
var taget = (smiley*2);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp*5.01)>=smiley){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
if ((burp*5.01)>=bolance){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
4umWfXYY,secret snowy business,coinwalk,JavaScript,Thursday 2nd of November 2023 02:40:21 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/800).toFixed(8));
var burp = nudie;
var taget = (smiley*2);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(smiley/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp*50.01)>=smiley){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
if ((burp*50.01)>=bolance){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
fUiJtsgv,turtleStorage,Josqus,Lua,Thursday 2nd of November 2023 02:15:57 PM CDT,"currentX = 0
currentY = 0

function moveToCoordinates(targetX, targetY)
    --local currentX, currentY = getPosition() -- You'll need to implement this function
    local safeY = 3 -- Choose a safe height that is above all chests

    -- Move up to a safe height first
	if currentX ~= 0 then
		turtle.back()
	end
    while currentY < safeY do
        turtle.up()
        currentY = currentY + 1
    end

    -- Move to the correct X coordinate
    while currentX < targetX do
        turtle.forward()
        currentX = currentX + 1
    end
    while currentX > targetX do
        turtle.back()
        currentX = currentX - 1
    end

    -- Move down to the target Y coordinate
    while currentY > targetY do
        turtle.down()
        currentY = currentY - 1
    end
	while currentY < targetY do
        turtle.down()
        currentY = currentY + 1
    end
end

--moveToCoordinates(2, , targetZ)"
rWaiU6Zz,zad2,AntonioWF,Java,Thursday 2nd of November 2023 02:15:02 PM CDT,"import java.util.Scanner;

class SLLNode<E> {
    protected E element;
    protected SLLNode<E> succ;

    public SLLNode(E elem, SLLNode<E> succ) {
        this.element = elem;
        this.succ = succ;
    }

    @Override
    public String toString() {
        return element.toString();
    }
}

class SLL<E> {
    private SLLNode<E> first;

    public SLL() {
        // Construct an empty SLL
        this.first = null;
    }

    public void deleteList() {
        first = null;
    }

    public int size() {
        int listSize = 0;
        SLLNode<E> tmp = first;
        while(tmp != null) {
            listSize++;
            tmp = tmp.succ;
        }
        return listSize;
    }

    @Override
    public String toString() {
        String ret = new String();
        if (first != null) {
            SLLNode<E> tmp = first;
            ret += tmp;
            while (tmp.succ != null) {
                tmp = tmp.succ;
                ret += "" "" + tmp;
            }
        } else
            ret = ""Prazna lista!!!"";
        return ret;
    }

    public void insertFirst(E o) {
        SLLNode<E> ins = new SLLNode<E>(o, null);
        ins.succ = first;
        //SLLNode<E> ins = new SLLNode<E>(o, first);
        first = ins;
    }

    public void insertAfter(E o, SLLNode<E> node) {
        if (node != null) {
            SLLNode<E> ins = new SLLNode<E>(o, node.succ);
            node.succ = ins;
        } else {
            System.out.println(""Dadenot jazol e null"");
        }
    }
    public void insertBefore(E o, SLLNode<E> before) {

        if (first != null) {
            SLLNode<E> tmp = first;
            if(first==before){
                this.insertFirst(o);
                return;
            }
            //ako first!=before
            while (tmp.succ != before && tmp.succ!=null)
                tmp = tmp.succ;
            if (tmp.succ == before) {
                tmp.succ = new SLLNode<E>(o, before);;
            } else {
                System.out.println(""Elementot ne postoi vo listata"");
            }
        } else {
            System.out.println(""Listata e prazna"");
        }
    }

    public void insertLast(E o) {
        if (first != null) {
            SLLNode<E> tmp = first;
            while (tmp.succ != null)
                tmp = tmp.succ;
            tmp.succ = new SLLNode<E>(o, null);
        } else {
            insertFirst(o);
        }
    }

    public E deleteFirst() {
        if (first != null) {
            SLLNode<E> tmp = first;
            first = first.succ;
            return tmp.element;
        } else {
            System.out.println(""Listata e prazna"");
            return null;
        }
    }

    public E delete(SLLNode<E> node) {
        if (first != null) {
            SLLNode<E> tmp = first;
            if(first == node) {
                return this.deleteFirst();
            }
            while (tmp.succ != node && tmp.succ.succ != null)
                tmp = tmp.succ;
            if (tmp.succ == node) {
                tmp.succ = tmp.succ.succ;
                return node.element;
            } else {
                System.out.println(""Elementot ne postoi vo listata"");
                return null;
            }
        } else {
            System.out.println(""Listata e prazna"");
            return null;
        }

    }

    public SLLNode<E> getFirst() {
        return first;
    }

    public SLLNode<E> find(E o) {
        if (first != null) {
            SLLNode<E> tmp = first;
            while (!tmp.element.equals(o) && tmp.succ != null)
                tmp = tmp.succ;
            if (tmp.element.equals(o)) {
                return tmp;
            } else {
                System.out.println(""Elementot ne postoi vo listata"");
            }
        } else {
            System.out.println(""Listata e prazna"");
        }
        return null;
    }

    public void merge (SLL<E> in){
        if (first != null) {
            SLLNode<E> tmp = first;
            while(tmp.succ != null)
                tmp = tmp.succ;
            tmp.succ = in.getFirst();
        }
        else{
            first = in.getFirst();
        }
    }

    public void mirror() {
        if (first != null) {
            //m=nextsucc, p=tmp,q=next
            SLLNode<E> tmp = first;
            SLLNode<E> newsucc = null;
            SLLNode<E> next;

            while(tmp != null){
                next = tmp.succ;
                tmp.succ = newsucc;
                newsucc = tmp;
                tmp = next;
            }
            first = newsucc;
        }
    }
}

public class SpecialSLLDelete<E> {

    //TODO: implement method
    public void specialDelete(SLL<E> list, int m) {
    if (list.size() <= 1 || m <= 1) {
        // Nothing to delete or invalid value of m
        return;
    }

    SLLNode<E> current = list.getFirst();
    SLLNode<E> previous = null;
    int count = 0;

    while (current != null) {
        count++;
        if (count % m == 0) {
            // Delete the current node
            SLLNode<E> next = current.succ;
            list.delete(current);
            current = next;
        } else {
            // Move to the next node
            previous = current;
            current = current.succ;
        }
    }
}


    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int n = input.nextInt();

        SLL<Integer> list = new SLL<>();
        for(int i=0;i<n;i++) {
            list.insertLast(input.nextInt());
        }

        int m = input.nextInt();

        SpecialSLLDelete<Integer> tmp = new SpecialSLLDelete<>();

        tmp.specialDelete(list, m);
        
        System.out.println(list);
    }

}"
QeLRYjYJ,riddles,Okami,JSON,Thursday 2nd of November 2023 02:10:29 PM CDT,"[
	{
		""Prompt"": ""What is the price of your sanity, And the smell of rotting flesh and bones?"",
		""Answers"": [
			""Death"",
			""A madhouse"",
			""Patient"",
			""Doctor"",
			""Ghost""
		]
	}
]"
JkbUWmNY,"Grammatik aktiv A1-B1, 2. aktualisierte Ausgabe",bpmircea,BrainFuck,Thursday 2nd of November 2023 02:08:14 PM CDT,"Grammatik aktiv A1-B1

Übungsgrammatik
2. aktualisierte Ausgabe
Verstehen ✓
Üben ✓
Sprechen ✓
Autor/-in: Jin, Friederike; Voß, Ute
Verlag: Cornelsen
Fach: Deutsch als Fremdsprache
Format: .pdf, .mp3, .mp4
Seitenzahl: 260

✔ Grammatik lernen leicht gemacht:
 Die Übungsgrammatik ist ideal für alle, die die deutsche Grammatik von Niveau A1 bis B1 üben und wiederholen möchten. Sie eignet sich sowohl zum Selbstlernen als auch für den Einsatz im Unterricht.
 Die 2. aktualisierte Ausgabe bietet unterhaltsame Grammatik-Videos zur Erklärung grammatikalischer Phänomene.

✔ Mit dem Doppelseiten-Prinzip zum Erfolg:
 Die 85 Kapitel sind übersichtlich aufgebaut: Auf der linken Seite finden Sie die einfachen, visuell gestützten Erklärungen, auf der rechten Seite die abwechslungsreichen Übungen mit niveaugerechtem Wortschatz.
 
 Die Vorteile auf einen Blick:
• Vollständige Grundstufengrammatik A1–B1
• Einfache und anschauliche Erklärungen
• Abwechslungsreiche Übungen mit Kennzeichnung der Niveaustufe
• Niveaugerechter Wortschatz aus vielen thematischen Bereichen
• Hilfreiche Merksätze zu vielen Regeln
• 11 Partnerseiten mit kooperativen Sprechübungen
• 88 Sprechübungen
• 26 motivierende Grammatik-Videos zur Erklärung der Grammatik

Uploading...


https://i.imgur.com/5PdjtU2.png"
cDd5RY2P,active,VssA,C#,Thursday 2nd of November 2023 01:58:41 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
 
namespace Reflection.Randomness
{
    public class Generator<T> where T : new()
    {
        private Dictionary<PropertyInfo, IContinousDistribution> properties;
        private string temporaryPropertyName;
 
        public Generator()
        {
            properties = typeof(T)
                .GetProperties()
                .Where(x => x.GetCustomAttributes(typeof(FromDistribution), false).Length != 0)
                .ToDictionary(x => x,
                              x => ((FromDistribution)x
                                  .GetCustomAttribute(typeof(FromDistribution), false))
                                  .Distribution);
        }
 
        public T Generate(Random rnd)
        {
            var bindings = properties
                .Select(property => Expression.Bind(property.Key,
                                                    Expression.Constant(property.Value.Generate(rnd))))
                .Cast<MemberBinding>()
                .ToList();
 
            var body = Expression.MemberInit(
                Expression.New(typeof(T).GetConstructor(new Type[0])),
                bindings
                );
            return Expression.Lambda<Func<T>>(body).Compile()();
        }
 
        public Generator<T> For(Expression<Func<T, double>> func)
        {
            var temporaryProperty = func.Body as MemberExpression;
            temporaryPropertyName = temporaryProperty.Member.Name;
 
            return this;
        }
 
        public Generator<T> Set(IContinousDistribution distr)
        {
            var property = typeof(T)
                .GetProperties()
                .First(x => x.Name == temporaryPropertyName);
            properties[property] = distr;
 
            return this;
        }
    }
 
    public class FromDistribution:Attribute
    {
        public IContinousDistribution Distribution { get; set; }
 
        public FromDistribution(Type type, params object[] parameters)
        {
            Distribution = (IContinousDistribution) Activator.CreateInstance(type, parameters);
        }
 
    }
}
"
34Vc2BQr,factorize + eratho_sieve,vojta249,Python,Thursday 2nd of November 2023 01:44:40 PM CDT,"def factorize(num):
    n = num
    upper = num
    primes = eratho(upper)
    result = []
    while num > 1:
        for i in range(len(primes)):
            if num % primes[i] == 0:
                result.append(primes[i])
                num = num // primes[i]
    result.sort()
    print(n, ""="", end="" "")
    for i in range(len(result)):
        if i<len(result)-1:
            print(result[i], ""* "", end="""")
        else:
            print(result[i])


def eratho(n):
    result = []
    printer = []
    for i in range(n+1):
        result.append(True)
    for j in range(n+1):
        if j <= 1:
            result[j] = False
        else:
            for i in range(2, n+1):
                if j % i == 0 and j != i:
                    result[j] = False
    for i in range(len(result)):
        if result[i]:
            printer.append(i)
    return(printer)"
WRxTJNB6,zad1,AntonioWF,Java,Thursday 2nd of November 2023 01:44:35 PM CDT,"import java.util.Scanner;


@SuppressWarnings(""unchecked"")
class Array<E> {
    private E data[]; // declared to be an Object since it would be too
    // complicated with generics
    private int size;

    public Array(int capacity) {
        this.data = (E[]) new Object[capacity];
        this.size = 0;
    }

    public void insertLast(E o) {
        //check if there is enough capacity, and if not - resize
        if(size + 1 > data.length)
            this.resize();
        data[size++] = o;
    }

    public void insert(int position, E o) {
        // before all we check if position is within range
        if (position >= 0 && position <= size) {
            //check if there is enough capacity, and if not - resize
            if(size + 1 > data.length)
                this.resize();
            //copy the data, before doing the insertion
            for(int i=size;i>position;i--) {
                data[i] = data[i-1];
            }
            data[position] = o;
            size++;
        } else {
            System.out.println(""Ne mozhe da se vmetne element na taa pozicija"");
        }
    }

    public void set(int position, E o) {
        if (position >= 0 && position < size)
            data[position] = o;
        else
            System.out.println(""Ne moze da se vmetne element na dadenata pozicija"");
    }

    public E get(int position) {
        if (position >= 0 && position < size)
            return data[position];
        else
            System.out.println(""Ne e validna dadenata pozicija"");
        return null;
    }

    public int find(E o) {
        for (int i = 0; i < size; i++) {
            if(o.equals(data[i]))
                return i;
        }
        return -1;
    }

    public int getSize() {
        return size;
    }

    public void delete(int position) {
        // before all we check if position is within range
        if (position >= 0 && position < size) {
            // first resize the storage array
            E[] newData = (E[]) new Object[size - 1];
            // copy the data prior to the delition
            for (int i = 0; i < position; i++)
                newData[i] = data[i];
            // move the data after the deletion
            for (int i = position + 1; i < size; i++)
                newData[i - 1] = data[i];
            // replace the storage with the new array
            data = newData;
            size--;
        }
    }

    public void resize() {
        // first resize the storage array
        E[] newData = (E[]) new Object[size*2];
        // copy the data
        for (int i = 0; i < size; i++)
            newData[i] = data[i];
        // replace the storage with the new array
        this.data = newData;
    }

    @Override
    public String toString() {
        String ret = new String();
        if(size>0) {
            ret = ""{"";
            ret += data[0];
            for(int i=1;i<size;i++) {
                ret += "","" + data[i];
            }
            ret+=""}"";
            return ret;
        }
        else {
            ret = ""Prazna niza!"";
        }
        return ret;
    }

}

public class ArrayMeanWordLength {

    //TODO: implement function
        public static String wordClosestToAverageLength(Array<String> arr) {
    int sumOfLengths = 0;
    for (int i = 0; i < arr.getSize(); i++) {
        sumOfLengths += arr.get(i).length();
    }

    double averageLength = (double) sumOfLengths / arr.getSize();

    String closestWord = """";
    double closestLengthDifference = Integer.MAX_VALUE;

    for (int i = 0; i < arr.getSize(); i++) {
        String word = arr.get(i);
        double lengthDifference = Math.abs(word.length() - averageLength);
        double currentWordLength = closestWord.length();

        if (lengthDifference < closestLengthDifference || (lengthDifference == closestLengthDifference && word.length() > currentWordLength)) {
            closestWord = word;
            closestLengthDifference = lengthDifference;
        }
    }

    return closestWord;
}

    

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int N = input.nextInt();
        Array<String> arr = new Array<>(N);
        input.nextLine();

        for(int i=0;i<N;i++) {
            arr.insertLast(input.nextLine());
        }

        System.out.println(wordClosestToAverageLength(arr));
    }
}"
y1H2QHW7,eratho_sieve,vojta249,Python,Thursday 2nd of November 2023 01:44:04 PM CDT,"def eratho(n):
    result = []
    printer = []
    for i in range(n+1):
        result.append(True)
    for j in range(n+1):
        if j <= 1:
            result[j] = False
        else:
            for i in range(2, n+1):
                if j % i == 0 and j != i:
                    result[j] = False
    for i in range(len(result)):
        if result[i]:
            printer.append(i)
    return(printer)"
DeFwnPXX,letter_pi_ascii,vojta249,Python,Thursday 2nd of November 2023 01:42:01 PM CDT,"def letter_pi(size):
    for row in range(1, size+1):
        for collumn in range(1, size+1):
            if collumn == 2 or collumn == size-1:
                print(""#"", end = """")
            elif row == 1 and collumn != size:
                print(""#"",end = """")
            elif row == size and collumn == size:
                print(""#"", end="""")
            else:
                print(""."", end="""")
        print()"
H2RYub29,Türklingel,breti76,YAML,Thursday 2nd of November 2023 01:09:44 PM CDT,"alias: Wf Türklingel Tablet Eingang
description: """"
trigger:
  - platform: device
    domain: homematicip_local
    device_id: 9fc4324d7ed1fe8798932729536b7135
    event_type: homematic.keypress
    interface_id: ccu-BidCos-RF
    address: GEQ0015408
    type: press_short
    subtype: 4
  - platform: device
    domain: homematicip_local
    device_id: 9fc4324d7ed1fe8798932729536b7135
    event_type: homematic.keypress
    interface_id: ccu-BidCos-RF
    address: GEQ0015408
    type: press_long
    subtype: 4
condition: []
action:
  - service: media_player.volume_set
    data:
      volume_level: 0.9
    target:
      device_id: 12a8f5bc5fe031bf86f6d07eefe321e2
  - data:
      media_content_id: media-source://media_source/local/Vibraphone 6027_80_3_preview.mp3
      media_content_type: music
    service: media_player.play_media
    target:
      device_id: 12a8f5bc5fe031bf86f6d07eefe321e2
mode: single
"
s71x9Y1Q,Untitled,Josif_tepe,C++,Thursday 2nd of November 2023 01:04:12 PM CDT,"#include <iostream>
#include <queue>
#include <vector>
#include <fstream>
#include <cstring>
using namespace std;
const int maxn = 3e5 + 10;
const int logn = 24;
int n;
int id_node[maxn];
int parent[maxn];
int depth[maxn];
int up_node[maxn][logn];
int LCA(int A, int B) {
    if(depth[A] < depth[B]) {
        swap(A, B);
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(depth[A] - (1 << i) >= depth[B]) {
            A = up_node[A][i];
        }
    }
    if(A == B) {
        return A;
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(up_node[A][i] != -1 and up_node[A][i] != up_node[B][i]) {
            A = up_node[A][i];
            B = up_node[B][i];
        }
    }
    return up_node[A][0];
                   
}
int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    depth[0] = 0;
    parent[0] = 0;
    vector<int> queries(n + 1, -1);
    vector<pair<int, pair<int, int> > > find_LCA;
    for(int i = 1; i <= n; i++) {
        char c;
        cin >> c;
        if(c == 'a') {
            int x;
            cin >> x;
            x = id_node[x];
            id_node[i] = i;
            parent[i] = x;
            depth[i] = depth[parent[i]] + 1;
        }
        else if(c == 'b') {
            int x;
            cin >> x;
            x = id_node[x];
            id_node[i] = parent[x];
            queries[i] = x;
        }
        else if(c == 'c') {
            int x, y;
            cin >> x >> y;
            x = id_node[x];
            y = id_node[y];
            id_node[i] = x;
            find_LCA.push_back(make_pair(i, make_pair(x, y)));
            
        }
    }
    for(int i = 0; i <= n; i++) {
        up_node[i][0] = parent[i];
        for(int j = 1; j < logn; j++) {
            up_node[i][j] = up_node[up_node[i][j - 1]][j - 1];
        }
    }
    for(int i = 0; i < find_LCA.size(); i++) {
        int a = find_LCA[i].second.first;
        int b = find_LCA[i].second.second;
        queries[find_LCA[i].first] = depth[LCA(a, b)];
    }
    for(int i = 1; i <= n; i++) {
        if(queries[i] != -1) {
            cout << queries[i] << endl;
        }
    }
    return 0;
}

/*
 12
 1 2
 2 4
 2 5
 4 7
 5 8
 1 3
 3 6
 6 9
 6 10
 6 11
 11 12
 
 **/
"
v0vsPuqg,Untitled,arvind_iyer_2001,Latex,Thursday 2nd of November 2023 01:00:04 PM CDT,"\documentclass[a4paper,10pt]{article}
\usepackage{url}
\usepackage{parskip} 	
\usepackage{tabularx}
\usepackage[usenames,dvipsnames]{xcolor}
\usepackage[scale=0.9]{geometry}
\usepackage{enumitem}
\usepackage{titlesec}
\usepackage{multirow}
\usepackage[style=authoryear,sorting=ynt,maxbibnames=2]{biblatex}
\usepackage[unicode, draft=false]{hyperref}
\usepackage{fontawesome5}

\definecolor{linkcolour}{rgb}{0,0.2,0.6}
\hypersetup{colorlinks,breaklinks,urlcolor=linkcolour,linkcolor=linkcolour}
\addbibresource{citations.bib}
\setlength\bibitemsep{1em}

\newcolumntype{C}{>{\centering\arraybackslash}X} 
\newlength{\fullcollw}
\setlength{\fullcollw}{0.4\textwidth}

\titleformat{\section}{\Large\scshape\raggedright}{}{0em}{}[\titlerule]
\titlespacing{\section}{0pt}{10pt}{10pt}

\pagestyle{empty} 

\begin{document}

%----------------------------------------------------------------------------------------
%	TITLE
%----------------------------------------------------------------------------------------

\begin{tabularx}{\linewidth}{@{} C @{}}
\Huge{Arvind Iyer} \\[9pt]

\href{https://www.linkedin.com/in/arvindiyer2001}{\raisebox{-0.05\height}\faLinkedin\ arvindiyer2001} \ $|$ \href{mailto:arvind.iyer.2001@gmail.com}{\raisebox{-0.05\height}\faEnvelope \ arvind.iyer.2001@gmail.com} \ $|$ 
\ 
\href{tel:+91-9108279418}{\raisebox{-0.05\height}\faMobile \ +91-9108279418} 
$|$ \ 
\href{https://github.com/arvind-iyer-2001}{\raisebox{-0.05\height}\faGithub\ arvind-iyer-2001}
\\
\end{tabularx}

%----------------------------------------------------------------------------------------
% EXPERIENCE SECTIONS
%----------------------------------------------------------------------------------------

\section{Education}
\begin{tabularx}{\linewidth}{@{}l X@{}}	
2019 - 2023 
& Bachelors of Engineering - \textbf{Birla Institute of Technology and Science, Pilani}
\hfill (GPA: 6.78) 
\\ 

2017 - 2019 
& Class 12th CBSE - National Public School, Koromangala, Bengaluru
\hfill  (92\%) 
\\

2017 
& Class 10th ICSE - Bethany High School, Koromangala, Bengaluru
\hfill  (90\%) 
\\
\end{tabularx}



\section{Work Experience}
\begin{tabularx}{\linewidth}{ @{}l r@{} }
\textbf{Software Developer Intern - {TheONCompany, New York (Remote)}} & \hfill {May 2023 - Aug 2023} \\
\multicolumn{2}{@{}X@{}}{- TheONCompany is an American Music Ed-Tech start up, which is building brands such as \textbf{CarnaticON} and Artificial Intelligence powered products with patented technologies to democratize online music education at scale.} \\
\multicolumn{2}{@{}X@{}}{- Developed the web technologies for the prototype of a meetings application, capable of grading music in an online music class using Twilio Video SDK, Web Audio APIs and libraries such as Essentia.js to perform music processing.} \\
\multicolumn{2}{@{}X@{}}{- Developed a website for CarnaticON to increase SEO and discoverability of instructors and courses on the internet.}\\
% Learning Management System(LMS) to aid instructors to generate content and learning materials, manage students and schedule classes. Learning materials are interactive and help students learn music.
\\
\textbf{Hardware Engineering Intern - {Samsung Semiconductor India Research (SSIR)}} & \hfill {July 2022 - December 2022} \\
\multicolumn{2}{@{}X@{}}{- Worked in the Foundry Hardware Design Team to perform low power management, implementation and validation using Unified Power Format(UPF)(IEEE Standard 1801).}\\
\multicolumn{2}{@{}X@{}}{- Performed automation of UPF Generation and CI/CD Operations using Perl Scripting, Perforce and XLS sheets reducing development and testing time from a few weeks to 2 hours.}\\
\multicolumn{2}{@{}X@{}}{- Tools and Softwares - \textit{UPF, Verilog, Cadence and Synopsys Tools, TCL, Perl Language, Libreoffice, Linux Shell, Perforce.}}\\
\end{tabularx}
%Projects
\section{Development Projects}
\begin{tabularx}{\linewidth}{ @{}l @{}X }
\textbf{\underline{DevOverflow, a Stack Overflow clone} - \href{https://github.com/arvind-iyer-2001/devoverflow}{GitHub Repo}}\\
\multicolumn{2}{@{}X@{}}{- A developer forum with built-in GPT answer generation for instant code solutions, smart recommendation system and optimized data fetching for high-speed page loading, enhancing developer experience and knowledge acquisition.}\\ 
\multicolumn{2}{@{}X@{}}{- Tech Stack - \textit{Next 13(Full Stack Framework), React.js, Shadcn-ui, Clerk, MongoDB, Prism.js, OpenAI GPT APIs}}\\ 
\\
\textbf{\underline{e-Commerce Demo - Admin Dashboard \& Store Application} - \href{https://github.com/arvind-iyer-2001/ecommerce-demo-monorepo}{GitHub Repo}}\\

\multicolumn{2}{@{}X@{}}{- Designed an admin dashboard for multi-store e-commerce management, enabling user profile setup, store creation, and sales analytics; also developed a customer-facing store app for easy purchasing.}\\ 
\multicolumn{2}{@{}X@{}}{- Tech Stack - \textit{Next 13(Full Stack Framework), React.js, Shadcn-ui, Clerk, MySQL2, Cloudinary(CDN), Stripe API}.}\\  
\\
\textbf{\underline{Urjaa Mobile Application} - \href{https://github.com/arvind-iyer-2001/urjaa}{GitHub Repo}}\\
\multicolumn{2}{@{}X@{}}{- Designed Urjaa Mobile App for connecting dietitians and patients, streamlining appointment scheduling, diet plan access, document management and PayTM payments.}\\ 
% Urjaa is a service that helps dieticians connect and manage their patients with a mobile application created for patients to upload and view appointments, diet plans, and documents, and for dieticians to upload diet plans, notes, and access appointments and patient data.
\multicolumn{2}{@{}X@{}}{- Tech Stack - \textit{Flutter, Firebase (Firestore, Auth, Storage, Cloud Messaging, Cloud Functions), Hive, Google Calendar APIs.}}\\ 

\end{tabularx}

\section{Positions of Responsibility}
\begin{tabularx}{\linewidth}{ @{}l r@{} }
{\textbf {Department of Backstage:} \emph{Chief Technical Coordinator and Research Head}} & \hfill {May 2021- April 2022}\\
\multicolumn{2}{@{}X@{}}{- Led a team of over 50 Students to provide Backstage, Infrastructure and Production Support for all student events and fests of BITS Pilani Goa like Waves, Spree, Quark etc.}\\
\multicolumn{2}{@{}X@{}}{- Provided consultation on upgrades to the audio-visual requirements of the college campus and auditorium of BITS Goa.}\\
\\
\textbf{Flutter Development for Beginners and Amateurs:} \emph{Course Instructor and Mentor}&\hfill {June 2021 - August 2021}\\
\multicolumn{2}{@{}X@{}}{- Mentored over 100 beginners through a well-structured course on Flutter Development using local and cloud databases, through assignments and one-to-one assistance to develop a personal profile website and blog.}\\
\end{tabularx}

\section{Technical Proficiency}
\begin{tabularx}{\linewidth}{@{}l X@{}}
Programming Languages &  \normalsize{JavaScript, TypeScript, Dart, Java, Python, Perl, C, SQL.}\\
Development Tools \& SDKs & \normalsize{ Next.js, React.js, Redux, Express.js, Node.js, Shadcn-ui, Flutter, HTML, CSS, DrizzleORM. }\\  
APIs and Services &  \normalsize{ MongoDB, Clerk, Mux, Cloudinary, Stripe, PlanetScale(MySQL), Web Audio, WebRTC. }\\

Softwares and Tools & \normalsize{Android Studio, XCode, VS Code,  Docker. } \\
Operating System &  \normalsize{Windows, macOS, Linux (Ubuntu, Kali). }\\
\end{tabularx}

\end{document}
"
KLtYxwXb,DKL,abhyash,Java,Thursday 2nd of November 2023 12:56:54 PM CDT,"class Solution {
    public int minAddToMakeValid(String s) {
        Stack<Character>stack = new Stack<>();

        for(char c : s.toCharArray()){
            if(c=='('){
                stack.push(c);
            }else if(c == ')' && !stack.isEmpty() && stack.peek()=='('){
                stack.pop();
            }else{
                stack.push(c);
            }
        }
        return stack.size();
        
    }
}"
9jrMpTFM,Grafana Apache Echarts - Change line style,Superstar,JavaScript,Thursday 2nd of November 2023 12:55:27 PM CDT,"function transformData(data, types) {
  const processedColors = {};

  data.forEach((item, index) => {
      // Extracts color property from the item
      const { color } = item;
      
      if (processedColors[color]) {
          const previousTypeIndex = types.indexOf(processedColors[color]);

          let nextItemIndex = previousTypeIndex + 1;
          if (types.length > nextItemIndex) {
            item.lineStyle = types[nextItemIndex] || '';
          } else {
            item.lineStyle = '';
          }
          processedColors[color] = item.lineStyle;
      } else {
          item.lineStyle = types[0];
          processedColors[color] = types[0];
      }
  });
  
  return data;
}

let data = [
  {
    color: 'green'
  },
  {
    color: 'green'
  },
  {
    color: 'green'
  },
  {
    color: 'green'
  }
];

let types = ['solid', 'dashed', 'dotted'];

data = transformData(data, types);

console.log(data);
"
