id,title,username,language,date,content
Qm776hhc,No Intro,Fudgewaffle,Lua,Sunday 25th of February 2024 11:56:30 AM CDT,"NMS_MOD_DEFINITION_CONTAINER =
{
[""MOD_FILENAME""] = ""No Intro.pak"",
[""MOD_AUTHOR""] = ""Flugelwulff"",
[""LUA_AUTHOR""] = ""Babscoole"",
[""NMS_VERSION""] = ""4.51"",
[""MODIFICATIONS""] =
    {
        {
            [""MBIN_CHANGE_TABLE""] =
            {
                {
                    [""MBIN_FILE_SOURCE""] = ""METADATA\UI\BOOTLOGOPC.MBIN"",
                    [""EXML_CHANGE_TABLE""] =
                    {
                        {
                            [""PRECEDING_KEY_WORDS""] = {""DisplayTime""},
                            [""LINE_OFFSET""] = ""+1"",
                            [""VALUE_CHANGE_TABLE""] =
                            {
                                {""IGNORE"", ""0""}, -- Original ""3""
                                {""IGNORE"", ""0""}, -- Original ""2""
                                {""IGNORE"", ""0""}, -- Original ""1""
                                {""IGNORE"", ""0""}  -- Original ""1""
                            }
                        },
                    }
                },
            }
        }
    }
}"
t1npqthn,More Materials - Substances,Fudgewaffle,Lua,Sunday 25th of February 2024 11:53:36 AM CDT,"NMS_MOD_DEFINITION_CONTAINER = 
{
[""MOD_FILENAME""] = ""MoreSubstances.pak"",
[""MOD_AUTHOR""]	= ""Flugelwulff"",
[""LUA_AUTHOR""]	= ""Babscoole/Flugelwulff"",
[""NMS_VERSION""]	= ""4.51"",
[""MODIFICATIONS""] =
	{
		{
			[""MBIN_CHANGE_TABLE""] 	= 
			{ 
				{
					[""MBIN_FILE_SOURCE""] 	= ""METADATA\REALITY\DEFAULTREALITY.MBIN"",
					[""EXML_CHANGE_TABLE""] 	= 
					{
						{
							[""PRECEDING_KEY_WORDS""] = ""MinAmountOfSubstanceAvailable"",
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""1500"" },
								{ ""Average"", ""3500"" },
								{ ""Wealthy"", ""6000"" },
								{ ""Pirate"",  ""2500"" },
							}
						},
						{
							[""PRECEDING_KEY_WORDS""] = ""MaxAmountOfSubstanceAvailable"",
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""3000"" },
								{ ""Average"", ""7500"" },
								{ ""Wealthy"", ""9000"" },
								{ ""Pirate"",  ""5000"" },
							}
						},
						{
							[""PRECEDING_KEY_WORDS""] = {""MinAmountOfSubstanceAvailable"", ""MinAmountOfSubstanceAvailable""},
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""1500"" },
								{ ""Average"", ""3500"" },
								{ ""Wealthy"", ""6000"" },
								{ ""Pirate"",  ""2500"" },
							}
						},
						{
							[""PRECEDING_KEY_WORDS""] = {""MaxAmountOfSubstanceAvailable"", ""MaxAmountOfSubstanceAvailable""},
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""3000"" },
								{ ""Average"", ""7500"" },
								{ ""Wealthy"", ""9000"" },
								{ ""Pirate"",  ""5000"" },
							}
						},
					} 
				}
			}
		}
	}	
}"
ZinmT11G,More Materials - Products,Fudgewaffle,Lua,Sunday 25th of February 2024 11:53:01 AM CDT,"NMS_MOD_DEFINITION_CONTAINER = 
{
[""MOD_FILENAME""] = ""MoreProducts.pak"",
[""MOD_AUTHOR""]	= ""Flugelwulff"",
[""LUA_AUTHOR""]	= ""Babscoole/Flugelwulff"",
[""NMS_VERSION""]	= ""4.51"",
[""MODIFICATIONS""] = 
	{
		{
			[""MBIN_CHANGE_TABLE""] 	= 
			{ 
				{
					[""MBIN_FILE_SOURCE""] 	= ""METADATA\REALITY\DEFAULTREALITY.MBIN"",
					[""EXML_CHANGE_TABLE""] 	= 
					{
						{
							[""PRECEDING_KEY_WORDS""] = ""MinAmountOfProductAvailable"",
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""100"" },
								{ ""Average"", ""400"" },
								{ ""Wealthy"", ""800"" },
								{ ""Pirate"",  ""400"" },
							}
						},
						{
							[""PRECEDING_KEY_WORDS""] = ""MaxAmountOfProductAvailable"",
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""400"" },
								{ ""Average"", ""800"" },
								{ ""Wealthy"", ""1800"" },
								{ ""Pirate"",  ""800"" },
							}
						},	
						{
							[""PRECEDING_KEY_WORDS""] = {""MinAmountOfProductAvailable"", ""MinAmountOfProductAvailable""},
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""100"" },
								{ ""Average"", ""400"" },
								{ ""Wealthy"", ""800"" },
								{ ""Pirate"",  ""400"" },
							}
						},
						{
							[""PRECEDING_KEY_WORDS""] = {""MaxAmountOfProductAvailable"", ""MaxAmountOfProductAvailable""},
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{ ""Poor"", 	 ""400"" },
								{ ""Average"", ""800"" },
								{ ""Wealthy"", ""1800"" },
								{ ""Pirate"",  ""800"" },
							}
						},					
					} 
				}
			}
		}
	}	
}"
sLjWCc1h,Faster Scanning - Custom,Fudgewaffle,Lua,Sunday 25th of February 2024 11:52:14 AM CDT,"NMS_MOD_DEFINITION_CONTAINER = 
{
[""MOD_FILENAME""] = ""FasterScanning.pak"",
[""MOD_AUTHOR""] = ""Flugelwulff"",
[""LUA_AUTHOR""] = ""Flugelwulff"",
[""NMS_VERSION""] = ""4.51"",
[""MODIFICATIONS""] =
	{
		{
			[""MBIN_CHANGE_TABLE""] 	= 
			{ 
				{
					[""MBIN_FILE_SOURCE""] 	= ""GCGAMEPLAYGLOBALS.GLOBAL.MBIN"",
					[""EXML_CHANGE_TABLE""] 	= 
					{
						{
							[""PRECEDING_KEY_WORDS""] = """",
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{""BinocTimeBeforeScan"",					""0""},	-- Original ""0.5""
								{""BinocMinScanTime"",					""0""},	-- Original ""3.9""
								{""BinocScanTime"",						""0""}, 	-- Original ""3.9""
								{""BinocCreatureScanTime"",				""0""},	-- Original ""3.2""
							}
						},
						{
							[""PRECEDING_KEY_WORDS""] = ""ToolScan"",
							[""VALUE_CHANGE_TABLE""] 	= 
							{
								{""PulseRange"",					""400""},	-- Original ""200""			
								{""ChargeTime"",					""2""} 	-- Original ""30""		
							}
						},
					}
				}
			}
		}
	}	
}"
VhLykY8L,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Sunday 25th of February 2024 11:42:52 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_693013.pdf

Working as of:
25 February 2024"
N1L1VFq3,Untitled,Josif_tepe,C++,Sunday 25th of February 2024 11:41:26 AM CDT,"#include <iostream>
#include <bits/stdc++.h>
#include <fstream>
#include <string>
#include <set>
#include <vector>
#define MOD 1000000007
#define ll long long
using namespace std;

string add(string a, string b) {
    if(a.size() < b.size()) {
        swap(a, b);
    }
    int i = (int) a.size() - 1, j = (int) b.size() - 1;
    string res = """";
    int carry = 0;
    while(j >= 0) {
        int sum = (a[i] - '0') + (b[j] - '0') + carry;
        if(sum > 9) {
            sum -= 10;
            carry = 1;
        }
        else {
            carry = 0;
        }
        res += (sum + '0');
        i--;
        j--;
    }
    while(i >= 0) {
        int sum = (a[i] - '0') + carry;
        if(sum > 9) {
            sum -= 10;
            carry = 1;
        }
        else {
            carry = 0;
        }
        res += (sum + '0');
        i--;
    }
    if(carry == 1) {
        res += ""1"";
    }
    reverse(res.begin(), res.end());
    return res;
}
string multiply(string a, string b) {
    int sz_a = (int) a.size();
    int sz_b = (int) b.size();
    vector<int> v(sz_a + sz_b, 0);
    
    for(int i = sz_a - 1; i >= 0; i--){
        for(int j = sz_b - 1; j >= 0; j--) {
            v[i + j + 1] += (a[i] - '0') * (b[j] - '0');
        }
    }
    for(int i = sz_a + sz_b - 1; i >= 0; i--) {
        if(v[i] > 9) {
            v[i - 1] += v[i] / 10;
            v[i] %= 10;
        }
    }
    int i = 0;
    while(v[i] == 0) {
        i++;
    }
    string res = """";
    while(i < sz_a + sz_b) {
        res += (v[i] + '0');
        i++;
    }
    if(res == """") {
        res = ""0"";
    }
    return res;
}
int main() {
    int n;
    cin >> n;
    
    string sum = ""0"";
    string power_of_two = ""1"";
    
    for(int i = 0; i < n; i++) {
        power_of_two = multiply(power_of_two, ""2"");
        sum = add(sum, power_of_two);
    }
    cout << sum << endl;
    return 0;
}
"
Zh2qWqnp,SDFVSEBTESTN,gadungw71,PHP,Sunday 25th of February 2024 11:33:57 AM CDT,"https://www.taskade.com/p/full-hd-xem-phim-mai-2024-vietsub-mien-phimmoi-full-4-k-1080-01HQFP7QM2SS292M3VQ160TZXA
https://www.taskade.com/p/mai-full-hd-4-k-vietsub-xem-phim-moi-online-01HQFPEHWYHCWC3Q9CDKGP8PM0
https://www.taskade.com/p/ultra-hd-xem-lang-man-mai-2024-phim-full-hd-4-k-viet-nam-01HQFPYVP91VZAMHS97DYD1MW8
https://atovng5692.expandcart.com/index.php?route=product/product&product_id=373
https://m.facebook.com/media/set/?set=a.726962592914522
https://m.facebook.com/media/set/?set=a.122106829478219036
https://forum.webnovel.com/d/166710-full-hd-xem-phim-mai-2024-phimmoi-vietsub-thuyet-minh
https://forum.webnovel.com/d/166711-phim-mai-2024-1080-xem-full-vietsub
https://open.firstory.me/story/clt1q328z0jks01zf1x2d5fss
https://gamma.app/public/Untitled-gagloafkza3ncqm
https://wandering.flarum.cloud/d/45241-xem-mai-phim-fullhd-vietsub
https://demo.hedgedoc.org/s/uWzQbph3G
https://paiza.io/projects/Y52GXUMXLJt005OCmoumvQ
https://pastelink.net/zhh0vk7g
https://hackmd.io/@rerewilli6/ry5mKlKna
https://snippet.host/eidteu
https://rentry.co/dh6gwucp
https://glot.io/snippets/gtqxpu3f2j
https://paste.ec/paste/bc1O5+tq#nB1QyaXEhRNHYeREdldsFWyX1tTcy5-L4RFjkhYdLjb
https://tempaste.com/JUkgANpsz36"
dC3rE6m7,padding bits,RicardasSim,C,Sunday 25th of February 2024 11:16:31 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

typedef struct {
    bool b1:1;
    bool b2:1;
    unsigned char ch;
    bool b3:1;
    bool b4:1;
} st1;

typedef struct {
    bool b1;
    bool b2;
    unsigned char c;
    bool b3;
    bool b4;
} st2;


void PrintBinary(unsigned char n )
{
    for ( int i = 7; i >= 0; --i )
    {
        printf(""%d"", ( n >> i ) & 1);
    }
}

void PrintBool(bool v)
{
    printf( ""%s "", v ? ""true"" : ""false"" );
}

int main()
{

    st1 s1 = {0};
    st2 s2 = {0};
    unsigned char *p;

    printf( ""sizeof s1: %zu\n"", sizeof s1 );

    p = (unsigned char *)&s1;

    printf(""(A 1): "");

    for ( unsigned int i = 0; i < sizeof s1; ++i )
    {
        PrintBinary( *(p + i) );
        printf("" "");
    }

    printf(""\n"");

    PrintBool( s1.b1 );
    PrintBool( s1.b2 );
    PrintBool( s1.b3 );
    PrintBool( s1.b4 );
    printf(""\n"");

    s1.b2 = true;

    printf(""(A 2): "");

    for ( unsigned int i = 0; i < sizeof s1; ++i )
    {
        PrintBinary( *(p + i) );
        printf("" "");
    }

    printf(""\n"");

    PrintBool( s1.b1 );
    PrintBool( s1.b2 );
    PrintBool( s1.b3 );
    PrintBool( s1.b4 );
    printf(""\n"");

    s1.b3 = true;

    printf(""(A 3): "");

    for ( unsigned int i = 0; i < sizeof s1; ++i )
    {
        PrintBinary( *(p + i) );
        printf("" "");
    }

    printf(""\n"");

    PrintBool( s1.b1 );
    PrintBool( s1.b2 );
    PrintBool( s1.b3 );
    PrintBool( s1.b4 );
    printf(""\n"");

    printf( ""sizeof s2: %zu\n"", sizeof s2 );

    p = (unsigned char *)&s2;

    printf(""(B 1): "");

    for ( unsigned int i = 0; i < sizeof s2; ++i )
    {
        PrintBinary( *(p + i) );
        printf("" "");
    }

    printf(""\n"");

    PrintBool( s2.b1 );
    PrintBool( s2.b2 );
    PrintBool( s2.b3 );
    PrintBool( s2.b4 );
    printf(""\n"");

    s2.b2 = true;

    printf(""(B 2): "");

    for ( unsigned int i = 0; i < sizeof s2; ++i )
    {
        PrintBinary( *(p + i) );
        printf("" "");
    }

    printf(""\n"");

    PrintBool( s2.b1 );
    PrintBool( s2.b2 );
    PrintBool( s2.b3 );
    PrintBool( s2.b4 );
    printf(""\n"");

    s2.b3 = true;

    printf(""(B 3): "");

    for ( unsigned int i = 0; i < sizeof s2; ++i )
    {
        PrintBinary( *(p + i) );
        printf("" "");
    }

    printf(""\n"");

    PrintBool( s2.b1 );
    PrintBool( s2.b2 );
    PrintBool( s2.b3 );
    PrintBool( s2.b4 );
    printf(""\n"");

}

/*

output:

sizeof s1: 3
(A 1): 00000000 00000000 00000000
false false false false
(A 2): 00000010 00000000 00000000
false true false false
(A 3): 00000010 00000000 00000001
false true true false
sizeof s2: 5
(B 1): 00000000 00000000 00000000 00000000 00000000
false false false false
(B 2): 00000000 00000001 00000000 00000000 00000000
false true false false
(B 3): 00000000 00000001 00000000 00000001 00000000
false true true false

*/
"
D46w3vcp,stamp_catalog,Nenogzar,Python,Sunday 25th of February 2024 11:16:22 AM CDT,"class Stamps:
    all_stamps = []

    def __init__(self, validation_date: str, BG, MI, SC, Ivert, SG):
        self.stamp_id = None
        self.validation_date = validation_date
        self.validation_year = None
        self.BG = BG
        self.MI = MI
        self.SC = SC
        self.Ivert = Ivert
        self.SG = SG
        self.Period = None
        self.period_id = None


        self.year_id()

        self.period_info()

        self.ID_generator()

        Stamps.all_stamps.append(self)

    def year_id(self):
        day, month, year = map(str, self.validation_date.split('.'))
        self.validation_year = year

    def period_info(self):
        self.period_id = """"
        if int(self.validation_year) <= 1908:
            self.Period = ""Principality of Bulgaria""
            self.period_id = 1
        elif int(self.validation_year) <= 1946:
            self.Period = ""Kingdom of Bulgaria""
            self.period_id = 2
        elif int(self.validation_year) <= 1999:
            self.Period = ""People's Republic of Bulgaria""
            self.period_id = 3
        else:
            self.Period = ""Republic of Bulgaria""
            self.period_id = 4

    def ID_generator(self):
        self.stamp_id = f""{self.period_id}_{self.validation_year}_{self.BG}""

# tests
stamp1 = Stamps(""01.05.1879"", 1, 1, 1, 1, 1)
stamp2 = Stamps(""01.05.1879"", 2, 2, 2, 2, 2)
stamp348 = Stamps(""25.02.1938"", 348, 338, 324, 348, 326)
stamp878 = Stamps(""11.11.1952"", 878, 836, 779, 836, 856)

for stamp in Stamps.all_stamps:
    print(
        f""Postmark number according to BG catalog {stamp.BG} is an edition in {stamp.validation_year} and gets an ID: {stamp.stamp_id}. \n""
        f""It was issued during the period of {stamp.Period}\n""
        f""__________"")"
WJQfEW2K,Untitled,Josif_tepe,C++,Sunday 25th of February 2024 11:15:56 AM CDT,"#include <iostream>
#include <cstring>
using namespace std;
int main()
{
 
    int n,prostor,k,tmp;
    bool izgradeni[10001];
    int novi=0;
    cin>>n>>prostor>>k;
    // ???? ????????? ?? ??????? ?? ????? ???????? False
    for(int i=1;i<=n;i++)
    {
 
        izgradeni[i]=false;
    }
    // ???? ????????? ?? ????????? ?? ??? ??? ????????? ?????? ?? ????? ?? True
    for(int i=1;i<=k;i++)
    {
         cin>>tmp;
        izgradeni[tmp]=true;
    }
    int parni_pred=0,neparni_pred=0;
    int parni_posle=0,neparni_posle=0;
     for(int i=1;i<=n;i++)
     {
         //?? ?????
         if(i%2==0)
         {
            if(izgradeni[i]==false)
            {
                parni_pred++;
 
            }
 
            else
            {
                parni_pred=0;
                // ??????? ???? ?????? ????????? ??????, ?? ?????? ?????? ???????? ?? ???? ????????? ?? ?????? ??????????
                // if(izgradeni[2]==false)
                izgradeni[2]=true;
 
 
            }
            if(parni_pred==prostor+1)
            {
 
 
                 //?????? ????? ???? ?? ????? ?? ?????? ??. 2
                if(izgradeni[2]==false)
                {
 
 
                    novi++;
                    izgradeni[2]=true;
 
                    parni_pred=prostor;
                }
 
                else
                {
 
 
                for(int j=i+2;j<=n;j+=2)
                {
                    //???? ???? ????? ?? ???? ??? ?? ?? ?????? prostor = 0;
                     if(parni_posle==prostor)
                    {
                        novi++;
 
                        parni_posle=0;
                        break;
                    }
 
                    if(izgradeni[j]==false)
                    {
                        parni_posle++;
                    }
                    else
                    {   // ?? ?????? ??????????
                        parni_posle=0;
                        break;
                    }
 
                }
                //??? ????? ???? ?? ? ??????? ????????? ??????, ? ??? ???????? ?? ?????? ?? ??????,
                //??? ????? ???? ?????? ?? ????????? ???? ???? ??????
                if(parni_posle!=0)
                {
 
                    novi++;
 
                }
                else if (parni_posle==0 && i+2>n)
                {
 
                    novi++;
                }
                parni_posle=0;
                parni_pred=0;
                }
 
            }
 
         }
         //?? ???????
         else
         {
              if(izgradeni[i]==false)
            {
                neparni_pred++;
 
            }
 
            else
            {
                neparni_pred=0;
                // ??????? ???? ?????? ????????? ??????, ?? ?????? ?????? ???????? ?? ???? ????????? ?? ?????? ??????????
                // if(izgradeni[1]==false)
                izgradeni[1]=true;
            }
            if(neparni_pred==prostor+1)
            {
 
                //?????? ??????? ???? ?? ????? ?? ?????? ??. 1
                if(izgradeni[1]==false)
                {
                    novi++;
                    izgradeni[1]=true;
                    neparni_pred=prostor;
 
                }
                else
                {
 
 
                for(int j=i+2;j<=n;j+=2)
                {
                    //???? ???? ????? ?? ???? ??? ?? ?? ?????? prostor = 0;
                    if(neparni_posle==prostor)
                    {
                        novi++;
                        neparni_posle=0;
                        break;
                    }
 
                    if(izgradeni[j]==false)
                    {
 
 
                        neparni_posle++;
 
                    }
                    else
                    {   // ?? ?????? ??????????
                        neparni_posle=0;
                        break;
                    }
 
                }
                //??? ????? ???? ?? ? ??????? ????????? ??????, ? ??? ???????? ?? ?????? ?? ??????,
                //??? ????? ???? ?????? ?? ????????? ???? ???? ??????
                if(neparni_posle!=0)
                {
                    novi++;
 
                }
                else if (neparni_posle==0 && i+2>n)
                {
                    novi++;
 
                }
                neparni_posle=0;
                neparni_pred=0;
                }
 
            }
 
 
         }
     }
     // ?? ??? ?? ??????????? ???????? ???? ???? ??????? ?? ??????, ? ????????? >= ???????? ???? ???????
     // ?????? ?? ???????? ?????? ????? ??????? ???? ?? ???? == ?? ?????? ?? ?????? ????? ?????? (???? ?? ?? ??????)
     // ?? parni_pred > 0 ??????????? ???? ??????? ????? ????? ??????
    if(prostor>=n/2 && parni_pred==n/2 && parni_pred>0)
    {
        novi++;
    }
    //??? ? ??????? ?????? ?? ???????, ????? ????????? ?????? ?? (n/2)+1
    // ?????? ?? 5 (5/2)+1 = 3 ??????? ?????
     int n1;
     if(n%2==1)
        n1=(n/2)+1;
     else n1=n/2;
    //?????? ?? ???????
    if(prostor>=n1 && neparni_pred==n1 && neparni_pred>0)
    {
        novi++;
    }
 
    cout<<novi;
 
     return 0;
 
}"
e71NREBh,Untitled,Josif_tepe,C++,Sunday 25th of February 2024 11:09:13 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <fstream>
#include <string>
#include <set>

#define MOD 1000000007
#define ll long long
using namespace std;

int main() {
    int t;
    cin >>t;
    while(t--){
        int n,m;
        cin >> n;
        set<double> ms1;
        set<double> ms2;
        multiset<double> tempms1;
        multiset<double> tempms2;
        double avrg1, avrg2;
        int res = 0;
        double sum1 = 0,sum2 = 0;
        for(int i =0;i<n;i++){
            double a;
            cin >> a;
            sum1+=a;
            ms1.insert(a);
            tempms1.insert(a);
        }
        cin  >> m;
        for(int  i =0;i<m;i++){
            double a;
            cin >> a;
            ms2.insert(a);
            sum2+=a;
            tempms2.insert(a);
        }
        avrg1 = sum1 / n;
        avrg2 = sum2 / m;
        for(auto x : ms1){
            double tempavrg1, tempavrg2;
            tempavrg1 = (sum1-x)/(n-1);
            tempavrg2 = (sum2+x)/(m+1);
    
            if(tempavrg1>avrg1 and tempavrg2>avrg2){
                res+= tempms1.count(x);
            }
        }
        for(auto x:ms2){
            double tempavrg1, tempavrg2;
            tempavrg1 = (sum1+x)/(n+1);
            tempavrg2 = (sum2-x)/(m-1);
            if(tempavrg1>avrg1 and tempavrg2>avrg2){
                res+= tempms2.count(x);
            }
        }
    cout << res<<endl;
        
    }
    
}
"
KybUjNgG,Retorna string para inteiros em bases de 2 a 36,jacknpoe,C++,Sunday 25th of February 2024 11:00:20 AM CDT,"#include<iostream>
#include<cstring>

char tam_base_2_a_36( unsigned long valor, int base){
	char temp = 0;

	while( valor > 0){
		temp++;
		valor /= base;
	}

	return temp;
}

void int_base_2_a_36( unsigned long valor, int base, char* buffer){
	char temp, tam;

	if( base < 2){
		strcpy( buffer, (char*) ""a base nao pode ser menor que 2"");
		return;
	}
	
	if( base > 36){
		strcpy( buffer, (char*) ""a base nao pode ser maior que 36"");
		return;
	}

	tam = tam_base_2_a_36( valor, base);

	if( tam == 0) {
		buffer[0] = '0'; buffer[1] = 0;
		return;
	}

	buffer[ tam] = 0;

	while( valor > 0){ 
		temp = valor % base;
		valor /= base;
		tam -= 1;
		if(temp < 10) {
			buffer[tam] = temp + '0';
		} else {
			buffer[tam] = temp + 'A' - 10;
		}
	}

	return;
}

int main( void){
	char resultado[50];
	unsigned int valor = 0;
	int base = 2;

	std::cout << ""Entre com o valor: "";
	std::cin >> valor;

	std::cout << ""Entre com a base: "";
	std::cin >> base;

	int_base_2_a_36( valor, base, resultado);

	std::cout << ""\nResultado: "" << resultado << ""\n"";
}"
jT8ne8jj,Untitled,sissou123,JavaScript,Sunday 25th of February 2024 10:53:55 AM CDT,"JavaScript Web Projects: 20 Projects to Build Your Portfolio
Modern HTML5, CSS3, and JavaScript to build Responsive and Mobile Friendly projects for your dream portfolio and resume! 
What you'll learn
20 projects with pure JavaScript, HTML5, CSS3 with all code provided
Go from a total beginner to a confident JavaScript developer 
for more:https://cuty.io/gE5DerZH
"
DaWr3h1X,IP validation REGEX,Vladmin-node,Python,Sunday 25th of February 2024 10:51:41 AM CDT," regex = ""([0-1]?([0-9]?){2}|2[0-4]?[0-9]?|25[0-5]?)""
    match = re.search(r""^"" + regex + ""\."" + regex + ""\."" + regex + ""\."" + regex + ""$"", ip)"
4WnqHpDi,snowybot gogogo,coinwalk,JavaScript,Sunday 25th of February 2024 10:49:47 AM CDT,"var stuuti = parseFloat(document.getElementById('pct_balance').value);
var vignant = 0.0001;
var tens = (vignant*10);
var sevens = (vignant*6.9);
var eights = (vignant*7.9);
var whatever = parseFloat(stuuti);
var plane = parseFloat(6.9);
var submarine = parseFloat(2.9);
var faurky = parseFloat(vignant);
var gregie = parseFloat((Math.floor(stuuti/tens))*tens);
var james = parseFloat((Math.floor(stuuti/tens))*tens);
var jim = parseFloat((Math.floor(stuuti/tens))*tens);
var dregs = parseFloat(stuuti);
var fart = 4;
var whatever = parseFloat(stuuti);



function soiled(){
whatever = document.getElementById('pct_balance').value;
if (whatever>(gregie+(faurky*plane))){
    faurky = faurky*2;
    plane = parseFloat(4.9);
    submarine = parseFloat(4.9);
    gregie = parseFloat(whatever);
}
if (whatever<(gregie-(faurky*submarine))){
    faurky = faurky*2;
    plane = parseFloat(4.9);
    submarine = parseFloat(4.9);
    gregie = parseFloat(whatever);
}  
if ((whatever>=(james+(tens*fart)))&&(whatever<(((Math.floor(whatever/tens))*tens)+sevens))){
    faurky = parseFloat(vignant);
    plane = parseFloat(6.9);
    submarine = parseFloat(2.9);
    fart = 4;
    gregie = parseFloat((Math.floor(whatever/tens))*tens);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
    james = parseFloat((Math.floor(whatever/tens))*tens);
}
if ((whatever>=(jim+(tens*2)))&&(whatever<james)&&(whatever<(((Math.floor(whatever/tens))*tens)+sevens))){
    faurky = parseFloat(vignant);
    plane = parseFloat(6.9);
    submarine = parseFloat(2.9);
    fart = 0;
    gregie = parseFloat((Math.floor(whatever/tens))*tens);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
}
if (((whatever-faurky)<=(jim-(tens*4)))&&(whatever<(((Math.floor(whatever/tens))*tens)+sevens))){
    faurky = parseFloat(vignant);
    plane = parseFloat(6.9);
    submarine = parseFloat(2.9);
    fart = 0;
    gregie = parseFloat((Math.floor(whatever/tens))*tens);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
}
if ((whatever>=(james+(tens*fart)))&&(whatever>(((Math.floor(whatever/tens))*tens)+eights))){
    faurky = parseFloat(vignant);
    plane = parseFloat(6.9);
    submarine = parseFloat(2.9);
    fart = 4;
    gregie = parseFloat((Math.floor(whatever/tens))*tens);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
    james = parseFloat((Math.floor(whatever/tens))*tens);
}
if ((whatever>=(jim+(tens*2)))&&(whatever<james)&&(whatever>(((Math.floor(whatever/tens))*tens)+eights))){
    faurky = parseFloat(vignant);
    plane = parseFloat(6.9);
    submarine = parseFloat(2.9);
    fart = 0;
    gregie = parseFloat((Math.floor(whatever/tens))*tens);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
}
if (((whatever-faurky)<=(jim-(tens*4)))&&(whatever>(((Math.floor(whatever/tens))*tens)+eights))){
    faurky = parseFloat(vignant);
    plane = parseFloat(6.9);
    submarine = parseFloat(2.9);
    fart = 0;
    gregie = parseFloat((Math.floor(whatever/tens))*tens);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
}
if ((whatever>=(james+(tens*fart)))&&(whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))){
    faurky = parseFloat(vignant*2);
    plane = parseFloat(4.9);
    submarine = parseFloat(4.9);
    fart = 4;
    gregie = parseFloat(whatever);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
    james = parseFloat((Math.floor(whatever/tens))*tens);
}
if ((whatever>=(jim+(tens*2)))&&(whatever<james)&&(whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))){
    faurky = parseFloat(vignant*2);
    plane = parseFloat(4.9);
    submarine = parseFloat(4.9);
    fart = 0;
    gregie = parseFloat(whatever);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
}
if (((whatever-faurky)<=(jim-(tens*4)))&&(whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))){
    faurky = parseFloat(vignant*2);
    plane = parseFloat(4.9);
    submarine = parseFloat(4.9);
    fart = 0;
    gregie = parseFloat(whatever);
    jim = parseFloat((Math.floor(whatever/tens))*tens);
}
if (whatever>=(stuuti*7)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(faurky);
$('#a_lo').click();
setTimeout(() =>soiled(), 1000);
}
soiled();
"
MAqnJeJ6,Hiddify Warp,rezadfx,JSON,Sunday 25th of February 2024 10:49:11 AM CDT,"{
  ""outbounds"": [
    {
      ""type"": ""selector"",
      ""tag"": ""select"",
      ""outbounds"": [
        ""auto"",
        ""IP > Your IP (e.g Iran IP)"",
        ""IP > Main Server IP""
      ],
      ""default"": ""auto""
    },
    {
      ""type"": ""urltest"",
      ""tag"": ""auto"",
      ""outbounds"": [""IP > Your IP (e.g Iran IP)"", ""IP > Main Server IP""],
      ""url"": ""http://cp.cloudflare.com/"",
      ""interval"": ""10m0s""
    },
    {
      ""type"": ""wireguard"",
      ""tag"": ""IP > Your IP (e.g Iran IP)"",
      ""local_address"": [
        ""172.16.0.2/32"",
        ""2606:4700:110:8c91:4063:21d0:7dd5:f218/128""
      ],
      ""private_key"": ""CBVIIWvXdLr4PbSrnm11ZJJ300IiPudRD4R62/IxV1g="",
      ""server"": ""162.159.195.93"",
      ""server_port"": 2506,
      ""peer_public_key"": ""bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo="",
      ""reserved"": ""AAAA"",
      ""mtu"": 1280,
      ""fake_packets"": ""5-10""
    },
    {
      ""type"": ""wireguard"",
      ""tag"": ""IP > Main Server IP"",
      ""detour"": ""IP > Your IP (e.g Iran IP)"",
      ""local_address"": [
        ""172.16.0.2/32"",
        ""2606:4700:110:8c15:3f90:ad2d:8810:77f3/128""
      ],
      ""private_key"": ""CCC/TQTc82ub9i8f37Rpix2v425Sv/mxTzvE/iKRMkw="",
      ""server"": ""162.159.195.93"",
      ""server_port"": 2506,
      ""peer_public_key"": ""bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo="",
      ""reserved"": ""AAAA"",
      ""mtu"": 1280,
      ""fake_packets"": ""5-10""
    },
    {
      ""type"": ""dns"",
      ""tag"": ""dns-out""
    },
    {
      ""type"": ""direct"",
      ""tag"": ""direct""
    },
    {
      ""type"": ""direct"",
      ""tag"": ""bypass""
    },
    {
      ""type"": ""block"",
      ""tag"": ""block""
    }
  ],
  ""inbounds"": [
    {
      ""type"": ""mixed"",
      ""tag"": ""mixed-in"",
      ""listen"": ""127.0.0.1"",
      ""listen_port"": 2334,
      ""sniff"": true,
      ""sniff_override_destination"": true,
      ""set_system_proxy"": true
    },
    {
      ""type"": ""direct"",
      ""tag"": ""dns-in"",
      ""listen"": ""127.0.0.1"",
      ""listen_port"": 6450,
      ""override_address"": ""1.1.1.1"",
      ""override_port"": 53
    }
  ],
  ""route"": {
    ""geoip"": {
      ""path"": ""geo-assets\\sagernet-sing-geoip-geoip.db""
    },
    ""geosite"": {
      ""path"": ""geo-assets\\sagernet-sing-geosite-geosite.db""
    },
    ""rules"": [
      {
        ""inbound"": ""dns-in"",
        ""outbound"": ""dns-out""
      },
      {
        ""port"": 53,
        ""outbound"": ""dns-out""
      },
      {
        ""clash_mode"": ""Direct"",
        ""outbound"": ""direct""
      },
      {
        ""clash_mode"": ""Global"",
        ""outbound"": ""select""
      }
    ],
    ""auto_detect_interface"": true,
    ""override_android_vpn"": true
  }
}
"
46Uc5FmQ,Untitled,Vladmin-node,Python,Sunday 25th of February 2024 10:43:32 AM CDT,"import re
def main():
    print(parse(input(""HTML: "")))

def parse(s):
    pattern = (r""(http|https):\/\/([\w_-]+(?:(?:\.""
               r""[\w_-]+)+))([\w.,@?^=%&:\/~+#-]*[\w@?^=%&\/~+#-])"")
    if s.startswith('<iframe'):
        pass
    else:
        return None
    output = re.findall(pattern, s)
    parsed = []
    for x in output[0]:
        parsed.append(x)

    if 'youtube' not in parsed[1]:
        return None
    else:
        pass
        formatted = parsed[2]
        pattern2 = r'^/\/.embed/\/'

        last_result = formatted.lstrip('/embed/')

        return f""https://youtu.be/{last_result}""


if __name__ == ""__main__"":
    main()"
J6cnur9N,Output field only if it is not emtpy,arsh999cg,PHP,Sunday 25th of February 2024 10:31:52 AM CDT,"<?php
if( $location ): ?>
    <?php echo !empty($location['street_name']) ? esc_attr($location['street_name']) : ''; ?> &nbsp;
    <?php echo !empty($location['street_number']) ? esc_attr($location['street_number']) : ''; ?> <br />
	<?php echo !empty($location['post_code']) ? esc_attr($location['post_code']) : ''; ?> &nbsp;
	<?php echo !empty($location['city']) ? esc_attr($location['city']) : ''; ?><br />
<?php endif; ?>"
HwqEtCBS,BungeeTabListPlus with Luckperms prefix,FlexKleks,YAML,Sunday 25th of February 2024 09:57:44 AM CDT,"showTo: all
priority: 1

showHeaderFooter: true
header:
  - ""&8• &6&lPrivates &e&lNetzwerk &8•""
headerAnimationUpdateInterval: 0.2
footer: |-
  &7Zum Forum &8» &b....
  &7TeamSpeak &8» &a....

type: DYNAMIC_SIZE

customPlaceholders:
  other_server_prefix: # makes players on other servers gray
    !conditional
    condition: ${player server}
    true: ""&f""
    false: ""&7""

# Hidden players show up on the tab list, avoids glitches
hiddenPlayers: VISIBLE_TO_ADMINS

playerSets:
  same_server: ${player server} == ${viewer server}

playerSet: same_server

playerOrder: ""luckpermsbungee_primary_group_weight desc, name asc""

playerComponent: ""${player luckpermsbungee_prefix}${player name}"""
cpDH38JA,mine1,vyacheslavmikh,Lua,Sunday 25th of February 2024 09:42:22 AM CDT,"refuel()
digOnce()

function digOnce()
  turtle.dig()
  turtle.forward()
  turtle.digUp()
  turtle.up()
  turtle.digUp()
  turtle.up()

  turtle.turnLeft()
  turtle.dig()
  turtle.forward()
  turtle.digDown()
  turtle.down()
  turtle.digDown()
  turtle.down()

  turtle.dig()
  turtle.forward()
  turtle.digUp()
  turtle.up()
  turtle.digUp()
  turtle.up()

  turtle.turnRight()

  turtle.dig()
  turtle.forward()
  turtle.digDown()
  turtle.down()
  turtle.digDown()
  turtle.down()

  turtle.turnRight()
  turtle.dig()
  turtle.forward()
  turtle.digUp()
  turtle.up()
  turtle.digUp()
  turtle.up()

  turtle.dig()
  turtle.forward()
  turtle.digDown()
  turtle.down()
  turtle.digDown()
  turtle.down()

  turtle.turnLeft()
end

function refuel()
  if turtle.getFuelLevel() < 6 then
    for i = 1,16 do
      if turtle.getItemCount(i) > 0 then 
        turtle.select(i)
        if turtle.refuel(1) then 
          break
        end
      end
    end
  end
  turtle.select(1)
end"
vpdRFyWS,Starlight,psychoticodes,HTML,Sunday 25th of February 2024 09:40:59 AM CDT,"<link href=""https://dl.dropboxusercontent.com/scl/fi/j4iragf9m52l3vzlaxfzd/starlight.css?rlkey=lhmb7oz59ff4f2ixypaa0iv23&dl=0"" rel=""stylesheet""><center><div id=""stligh"" style=""--c1:#ffffff; --c2:#000000;""><table><td><a href=""https://is.gd/gasper""><div class=""star"">starlight</div></a></td><td><div class=""light"" style=""background-image:url('https://via.placeholder.com/100x100');""></div></td></table></div></center>"
LfbQ3VUa,Nigerian scammers [25-2-2/2024],bombaires,AIMMS,Sunday 25th of February 2024 09:28:39 AM CDT,"<a href=""mailto:mgram230@gmail.com"">mgram230@gmail.com</a>
<a href=""mailto:mg.r.a.m.230@gmail.com"">mg.r.a.m.230@gmail.com</a>
<a href=""mailto:m.gra.m.23.0@gmail.com"">m.gra.m.23.0@gmail.com</a>
<a href=""mailto:m.gr.a.m2.30@gmail.com"">m.gr.a.m2.30@gmail.com</a>
<a href=""mailto:m.gr.am.230@gmail.com"">m.gr.am.230@gmail.com</a>
<a href=""mailto:m.g.ra.m.2.3.0@gmail.com"">m.g.ra.m.2.3.0@gmail.com</a>
<a href=""mailto:mg.r.am.23.0@gmail.com"">mg.r.am.23.0@gmail.com</a>
<a href=""mailto:m.g.r.a.m.230@gmail.com"">m.g.r.a.m.230@gmail.com</a>
<a href=""mailto:m.g.ram2.30@gmail.com"">m.g.ram2.30@gmail.com</a>
<a href=""mailto:mgr.a.m.23.0@gmail.com"">mgr.a.m.23.0@gmail.com</a>
<a href=""mailto:m.gr.a.m23.0@gmail.com"">m.gr.a.m23.0@gmail.com</a>
<a href=""mailto:m.g.r.a.m.2.3.0@gmail.com"">m.g.r.a.m.2.3.0@gmail.com</a>
<a href=""mailto:mgram.2.30@gmail.com"">mgram.2.30@gmail.com</a>
<a href=""mailto:m.g.r.a.m.2.30@gmail.com"">m.g.r.a.m.2.30@gmail.com</a>
<a href=""mailto:m.gra.m.2.30@gmail.com"">m.gra.m.2.30@gmail.com</a>
<a href=""mailto:mg.r.a.m.2.30@gmail.com"">mg.r.a.m.2.30@gmail.com</a>
<a href=""mailto:mgr.a.m.230@gmail.com"">mgr.a.m.230@gmail.com</a>
<a href=""mailto:m.gra.m.230@gmail.com"">m.gra.m.230@gmail.com</a>
<a href=""mailto:mgr.am2.30@gmail.com"">mgr.am2.30@gmail.com</a>
<a href=""mailto:m.g.ra.m23.0@gmail.com"">m.g.ra.m23.0@gmail.com</a>
<a href=""mailto:m.g.ra.m.23.0@gmail.com"">m.g.ra.m.23.0@gmail.com</a>
<a href=""mailto:m.g.ram.230@gmail.com"">m.g.ram.230@gmail.com</a>
<a href=""mailto:m.gr.am230@gmail.com"">m.gr.am230@gmail.com</a>
<a href=""mailto:m.gr.a.m.2.30@gmail.com"">m.gr.a.m.2.30@gmail.com</a>
<a href=""mailto:m.g.r.am2.30@gmail.com"">m.g.r.am2.30@gmail.com</a>
<a href=""mailto:mg.r.am2.30@gmail.com"">mg.r.am2.30@gmail.com</a>
<a href=""mailto:m.g.r.a.m230@gmail.com"">m.g.r.a.m230@gmail.com</a>
<a href=""mailto:m.g.r.am.23.0@gmail.com"">m.g.r.am.23.0@gmail.com</a>
<a href=""mailto:mg.ra.m230@gmail.com"">mg.ra.m230@gmail.com</a>
<a href=""mailto:mgram.23.0@gmail.com"">mgram.23.0@gmail.com</a>
<a href=""mailto:mgram23.0@gmail.com"">mgram23.0@gmail.com</a>
<a href=""mailto:m.gr.a.m.2.3.0@gmail.com"">m.gr.a.m.2.3.0@gmail.com</a>
<a href=""mailto:m.gra.m23.0@gmail.com"">m.gra.m23.0@gmail.com</a>
<a href=""mailto:m.g.ram23.0@gmail.com"">m.g.ram23.0@gmail.com</a>
<a href=""mailto:m.gram2.30@gmail.com"">m.gram2.30@gmail.com</a>
<a href=""mailto:m.g.ram.2.3.0@gmail.com"">m.g.ram.2.3.0@gmail.com</a>
<a href=""mailto:mgra.m2.30@gmail.com"">mgra.m2.30@gmail.com</a>
<a href=""mailto:m.gr.am.23.0@gmail.com"">m.gr.am.23.0@gmail.com</a>
<a href=""mailto:m.g.r.am230@gmail.com"">m.g.r.am230@gmail.com</a>
<a href=""mailto:mg.ra.m.23.0@gmail.com"">mg.ra.m.23.0@gmail.com</a>
<a href=""mailto:m.g.r.am.2.30@gmail.com"">m.g.r.am.2.30@gmail.com</a>
<a href=""mailto:mg.r.am.2.3.0@gmail.com"">mg.r.am.2.3.0@gmail.com</a>
<a href=""mailto:mg.r.am230@gmail.com"">mg.r.am230@gmail.com</a>
<a href=""mailto:m.gr.am.2.3.0@gmail.com"">m.gr.am.2.3.0@gmail.com</a>
<a href=""mailto:m.g.ram230@gmail.com"">m.g.ram230@gmail.com</a>
<a href=""mailto:m.g.ra.m230@gmail.com"">m.g.ra.m230@gmail.com</a>
<a href=""mailto:mgram230@gmail.com"">mgram230@gmail.com</a>
<a href=""mailto:mg.ra.m23.0@gmail.com"">mg.ra.m23.0@gmail.com</a>
<a href=""mailto:mg.ra.m2.3.0@gmail.com"">mg.ra.m2.3.0@gmail.com</a>
<a href=""mailto:m.g.r.a.m23.0@gmail.com"">m.g.r.a.m23.0@gmail.com</a>
<a href=""mailto:m.gra.m.2.3.0@gmail.com"">m.gra.m.2.3.0@gmail.com</a>
<a href=""mailto:mgra.m2.3.0@gmail.com"">mgra.m2.3.0@gmail.com</a>
<a href=""mailto:mg.r.a.m.2.3.0@gmail.com"">mg.r.a.m.2.3.0@gmail.com</a>
<a href=""mailto:mg.ram2.30@gmail.com"">mg.ram2.30@gmail.com</a>
<a href=""mailto:mg.r.a.m23.0@gmail.com"">mg.r.a.m23.0@gmail.com</a>
<a href=""mailto:m.gram.2.30@gmail.com"">m.gram.2.30@gmail.com</a>
<a href=""mailto:mgr.a.m2.3.0@gmail.com"">mgr.a.m2.3.0@gmail.com</a>
<a href=""mailto:m.gr.am2.3.0@gmail.com"">m.gr.am2.3.0@gmail.com</a>
<a href=""mailto:m.gr.a.m.23.0@gmail.com"">m.gr.a.m.23.0@gmail.com</a>
<a href=""mailto:mg.r.am23.0@gmail.com"">mg.r.am23.0@gmail.com</a>
<a href=""mailto:mgra.m.23.0@gmail.com"">mgra.m.23.0@gmail.com</a>
<a href=""mailto:mgra.m.230@gmail.com"">mgra.m.230@gmail.com</a>
<a href=""mailto:mg.r.am.2.30@gmail.com"">mg.r.am.2.30@gmail.com</a>
<a href=""mailto:m.g.r.a.m2.3.0@gmail.com"">m.g.r.a.m2.3.0@gmail.com</a>
<a href=""mailto:m.g.r.a.m2.30@gmail.com"">m.g.r.a.m2.30@gmail.com</a>
<a href=""mailto:mgr.a.m.2.3.0@gmail.com"">mgr.a.m.2.3.0@gmail.com</a>
<a href=""mailto:m.g.ram.23.0@gmail.com"">m.g.ram.23.0@gmail.com</a>
<a href=""mailto:mgram.2.3.0@gmail.com"">mgram.2.3.0@gmail.com</a>
<a href=""mailto:mgr.am.23.0@gmail.com"">mgr.am.23.0@gmail.com</a>
<a href=""mailto:m.gram2.3.0@gmail.com"">m.gram2.3.0@gmail.com</a>
<a href=""mailto:mg.ra.m.230@gmail.com"">mg.ra.m.230@gmail.com</a>
<a href=""mailto:mg.r.am2.3.0@gmail.com"">mg.r.am2.3.0@gmail.com</a>
<a href=""mailto:mg.r.a.m.23.0@gmail.com"">mg.r.a.m.23.0@gmail.com</a>
<a href=""mailto:mgr.am2.3.0@gmail.com"">mgr.am2.3.0@gmail.com</a>
<a href=""mailto:m.g.ram.2.30@gmail.com"">m.g.ram.2.30@gmail.com</a>
<a href=""mailto:mgr.am.2.3.0@gmail.com"">mgr.am.2.3.0@gmail.com</a>
<a href=""mailto:mgr.am23.0@gmail.com"">mgr.am23.0@gmail.com</a>
<a href=""mailto:m.gra.m2.3.0@gmail.com"">m.gra.m2.3.0@gmail.com</a>
<a href=""mailto:m.gra.m2.30@gmail.com"">m.gra.m2.30@gmail.com</a>
<a href=""mailto:m.gr.am23.0@gmail.com"">m.gr.am23.0@gmail.com</a>
<a href=""mailto:m.gr.am2.30@gmail.com"">m.gr.am2.30@gmail.com</a>
<a href=""mailto:mg.r.a.m2.3.0@gmail.com"">mg.r.a.m2.3.0@gmail.com</a>
<a href=""mailto:mg.r.a.m2.30@gmail.com"">mg.r.a.m2.30@gmail.com</a>
<a href=""mailto:m.g.r.am23.0@gmail.com"">m.g.r.am23.0@gmail.com</a>
<a href=""mailto:m.g.ram2.3.0@gmail.com"">m.g.ram2.3.0@gmail.com</a>
<a href=""mailto:mg.ram230@gmail.com"">mg.ram230@gmail.com</a>
<a href=""mailto:m.gram230@gmail.com"">m.gram230@gmail.com</a>
<a href=""mailto:mg.ram23.0@gmail.com"">mg.ram23.0@gmail.com</a>
<a href=""mailto:m.gram.230@gmail.com"">m.gram.230@gmail.com</a>
<a href=""mailto:mgr.a.m2.30@gmail.com"">mgr.a.m2.30@gmail.com</a>
<a href=""mailto:mg.r.am.230@gmail.com"">mg.r.am.230@gmail.com</a>
<a href=""mailto:mgra.m.2.30@gmail.com"">mgra.m.2.30@gmail.com</a>
<a href=""mailto:m.g.r.a.m.23.0@gmail.com"">m.g.r.a.m.23.0@gmail.com</a>
<a href=""mailto:mgram.230@gmail.com"">mgram.230@gmail.com</a>
<a href=""mailto:mgra.m.2.3.0@gmail.com"">mgra.m.2.3.0@gmail.com</a>
<a href=""mailto:mg.ram.230@gmail.com"">mg.ram.230@gmail.com</a>
<a href=""mailto:mg.ra.m.2.30@gmail.com"">mg.ra.m.2.30@gmail.com</a>
<a href=""mailto:m.g.r.am.2.3.0@gmail.com"">m.g.r.am.2.3.0@gmail.com</a>
<a href=""mailto:m.g.ra.m.2.30@gmail.com"">m.g.ra.m.2.30@gmail.com</a>
<a href=""mailto:m.gram.2.3.0@gmail.com"">m.gram.2.3.0@gmail.com</a>
<a href=""mailto:m.gram.23.0@gmail.com"">m.gram.23.0@gmail.com</a>
<a href=""mailto:mgram2.3.0@gmail.com"">mgram2.3.0@gmail.com</a>
<a href=""mailto:mgr.am.230@gmail.com"">mgr.am.230@gmail.com</a>
<a href=""mailto:m.gr.a.m.230@gmail.com"">m.gr.a.m.230@gmail.com</a>
<a href=""mailto:mg.ra.m.2.3.0@gmail.com"">mg.ra.m.2.3.0@gmail.com</a>
<a href=""mailto:mg.ram.2.3.0@gmail.com"">mg.ram.2.3.0@gmail.com</a>
<a href=""mailto:m.gr.a.m2.3.0@gmail.com"">m.gr.a.m2.3.0@gmail.com</a>
<a href=""mailto:mg.ram2.3.0@gmail.com"">mg.ram2.3.0@gmail.com</a>
<a href=""mailto:m.gra.m230@gmail.com"">m.gra.m230@gmail.com</a>
<a href=""mailto:mgr.a.m.2.30@gmail.com"">mgr.a.m.2.30@gmail.com</a>
<a href=""mailto:m.gr.am.2.30@gmail.com"">m.gr.am.2.30@gmail.com</a>
<a href=""mailto:m.gram23.0@gmail.com"">m.gram23.0@gmail.com</a>
<a href=""mailto:m.g.ra.m.230@gmail.com"">m.g.ra.m.230@gmail.com</a>
<a href=""mailto:mgr.a.m23.0@gmail.com"">mgr.a.m23.0@gmail.com</a>
<a href=""mailto:mgra.m230@gmail.com"">mgra.m230@gmail.com</a>
<a href=""mailto:m.g.ra.m2.3.0@gmail.com"">m.g.ra.m2.3.0@gmail.com</a>
<a href=""mailto:m.g.ra.m2.30@gmail.com"">m.g.ra.m2.30@gmail.com</a>
<a href=""mailto:mgr.am230@gmail.com"">mgr.am230@gmail.com</a>
<a href=""mailto:mg.r.a.m230@gmail.com"">mg.r.a.m230@gmail.com</a>
<a href=""mailto:mg.ra.m2.30@gmail.com"">mg.ra.m2.30@gmail.com</a>
<a href=""mailto:mgra.m23.0@gmail.com"">mgra.m23.0@gmail.com</a>
<a href=""mailto:mgr.am.2.30@gmail.com"">mgr.am.2.30@gmail.com</a>
<a href=""mailto:mg.ram.23.0@gmail.com"">mg.ram.23.0@gmail.com</a>
<a href=""mailto:mgr.a.m230@gmail.com"">mgr.a.m230@gmail.com</a>
<a href=""mailto:m.g.r.am.230@gmail.com"">m.g.r.am.230@gmail.com</a>
<a href=""mailto:m.g.r.am2.3.0@gmail.com"">m.g.r.am2.3.0@gmail.com</a>
<a href=""mailto:mgram2.30@gmail.com"">mgram2.30@gmail.com</a>
<a href=""mailto:mg.ram.2.30@gmail.com"">mg.ram.2.30@gmail.com</a>
<a href=""mailto:m.gr.a.m230@gmail.com"">m.gr.a.m230@gmail.com</a>
<a href=""mailto:superenalloto@gmx.de"">superenalloto@gmx.de</a>
<a href=""mailto:mrphilip2021a@gmail.com"">mrphilip2021a@gmail.com</a>
<a href=""mailto:m.r.ph.il.i.p2.021a@gmail.com"">m.r.ph.il.i.p2.021a@gmail.com</a>
<a href=""mailto:mrp.h.ili.p.2021a@gmail.com"">mrp.h.ili.p.2021a@gmail.com</a>
<a href=""mailto:m.rp.hil.i.p20.2.1a@gmail.com"">m.rp.hil.i.p20.2.1a@gmail.com</a>
<a href=""mailto:mrph.ili.p2021a@gmail.com"">mrph.ili.p2021a@gmail.com</a>
<a href=""mailto:mr.phili.p.2.0.21.a@gmail.com"">mr.phili.p.2.0.21.a@gmail.com</a>
<a href=""mailto:m.r.philip202.1a@gmail.com"">m.r.philip202.1a@gmail.com</a>
<a href=""mailto:m.rphi.li.p.20.2.1.a@gmail.com"">m.rphi.li.p.20.2.1.a@gmail.com</a>
<a href=""mailto:m.r.ph.i.lip.20.21.a@gmail.com"">m.r.ph.i.lip.20.21.a@gmail.com</a>
<a href=""mailto:mrp.h.il.i.p202.1a@gmail.com"">mrp.h.il.i.p202.1a@gmail.com</a>
<a href=""mailto:mrp.hi.li.p.2.0.21.a@gmail.com"">mrp.hi.li.p.2.0.21.a@gmail.com</a>
<a href=""mailto:mrp.hi.l.ip202.1a@gmail.com"">mrp.hi.l.ip202.1a@gmail.com</a>
<a href=""mailto:m.rph.i.l.i.p.2021a@gmail.com"">m.rph.i.l.i.p.2021a@gmail.com</a>
<a href=""mailto:mr.ph.ilip.20.2.1a@gmail.com"">mr.ph.ilip.20.2.1a@gmail.com</a>
<a href=""mailto:mr.ph.il.ip2.021a@gmail.com"">mr.ph.il.ip2.021a@gmail.com</a>
<a href=""mailto:m.rphili.p20.2.1.a@gmail.com"">m.rphili.p20.2.1.a@gmail.com</a>
<a href=""mailto:mr.p.h.i.l.ip.20.2.1.a@gmail.com"">mr.p.h.i.l.ip.20.2.1.a@gmail.com</a>
<a href=""mailto:mr.p.h.i.l.ip20.2.1.a@gmail.com"">mr.p.h.i.l.ip20.2.1.a@gmail.com</a>
<a href=""mailto:m.rp.hi.li.p20.2.1a@gmail.com"">m.rp.hi.li.p20.2.1a@gmail.com</a>
<a href=""mailto:mr.p.h.il.i.p.2.0.2.1.a@gmail.com"">mr.p.h.il.i.p.2.0.2.1.a@gmail.com</a>
<a href=""mailto:m.r.p.h.il.ip202.1.a@gmail.com"">m.r.p.h.il.ip202.1.a@gmail.com</a>
<a href=""mailto:mr.p.h.ili.p2.021a@gmail.com"">mr.p.h.ili.p2.021a@gmail.com</a>
<a href=""mailto:mrphi.l.i.p2.0.21a@gmail.com"">mrphi.l.i.p2.0.21a@gmail.com</a>
<a href=""mailto:mr.p.h.i.lip2.021a@gmail.com"">mr.p.h.i.lip2.021a@gmail.com</a>
<a href=""mailto:mrph.ilip2.0.21a@gmail.com"">mrph.ilip2.0.21a@gmail.com</a>
<a href=""mailto:mrphil.ip20.21.a@gmail.com"">mrphil.ip20.21.a@gmail.com</a>
<a href=""mailto:mrp.h.il.ip2021.a@gmail.com"">mrp.h.il.ip2021.a@gmail.com</a>
<a href=""mailto:mrphil.i.p.2021.a@gmail.com"">mrphil.i.p.2021.a@gmail.com</a>
<a href=""mailto:m.rp.hi.l.ip2.02.1a@gmail.com"">m.rp.hi.l.ip2.02.1a@gmail.com</a>
<a href=""mailto:mrph.i.lip2021a@gmail.com"">mrph.i.lip2021a@gmail.com</a>
<a href=""mailto:m.rphi.li.p20.21.a@gmail.com"">m.rphi.li.p20.21.a@gmail.com</a>
<a href=""mailto:mr.p.hil.ip.2.02.1a@gmail.com"">mr.p.hil.ip.2.02.1a@gmail.com</a>
<a href=""mailto:m.r.ph.i.li.p202.1.a@gmail.com"">m.r.ph.i.li.p202.1.a@gmail.com</a>
<a href=""mailto:m.rp.hili.p2021.a@gmail.com"">m.rp.hili.p2021.a@gmail.com</a>
<a href=""mailto:m.rp.h.i.lip20.2.1.a@gmail.com"">m.rp.h.i.lip20.2.1.a@gmail.com</a>
<a href=""mailto:mr.philip.2.02.1a@gmail.com"">mr.philip.2.02.1a@gmail.com</a>
<a href=""mailto:mr.ph.i.l.ip.202.1.a@gmail.com"">mr.ph.i.l.ip.202.1.a@gmail.com</a>
<a href=""mailto:m.r.p.hi.l.i.p.2021a@gmail.com"">m.r.p.hi.l.i.p.2021a@gmail.com</a>
<a href=""mailto:m.rphi.lip2.0.21a@gmail.com"">m.rphi.lip2.0.21a@gmail.com</a>
<a href=""mailto:m.r.phili.p202.1.a@gmail.com"">m.r.phili.p202.1.a@gmail.com</a>
<a href=""mailto:mrph.i.lip.2.0.2.1a@gmail.com"">mrph.i.lip.2.0.2.1a@gmail.com</a>
<a href=""mailto:mr.p.h.il.ip2.0.2.1.a@gmail.com"">mr.p.h.il.ip2.0.2.1.a@gmail.com</a>
<a href=""mailto:m.rphi.l.i.p.20.21a@gmail.com"">m.rphi.l.i.p.20.21a@gmail.com</a>
<a href=""mailto:m.r.p.h.i.lip20.2.1.a@gmail.com"">m.r.p.h.i.lip20.2.1.a@gmail.com</a>
<a href=""mailto:mr.p.hi.lip202.1.a@gmail.com"">mr.p.hi.lip202.1.a@gmail.com</a>
<a href=""mailto:mr.p.hil.ip.2.0.21.a@gmail.com"">mr.p.hil.ip.2.0.21.a@gmail.com</a>
<a href=""mailto:m.r.p.h.i.l.i.p20.2.1a@gmail.com"">m.r.p.h.i.l.i.p20.2.1a@gmail.com</a>
<a href=""mailto:m.r.ph.i.l.i.p20.21.a@gmail.com"">m.r.ph.i.l.i.p20.21.a@gmail.com</a>
<a href=""mailto:m.r.p.hil.i.p2.021a@gmail.com"">m.r.p.hil.i.p2.021a@gmail.com</a>
<a href=""mailto:mr.p.h.il.ip.202.1.a@gmail.com"">mr.p.h.il.ip.202.1.a@gmail.com</a>
<a href=""mailto:mr.p.hi.l.i.p.202.1a@gmail.com"">mr.p.hi.l.i.p.202.1a@gmail.com</a>
<a href=""mailto:mrp.hi.li.p20.2.1.a@gmail.com"">mrp.hi.li.p20.2.1.a@gmail.com</a>
<a href=""mailto:mr.p.hi.lip2021.a@gmail.com"">mr.p.hi.lip2021.a@gmail.com</a>
<a href=""mailto:mrp.h.ili.p.20.2.1.a@gmail.com"">mrp.h.ili.p.20.2.1.a@gmail.com</a>
<a href=""mailto:mr.p.hil.ip20.21a@gmail.com"">mr.p.hil.ip20.21a@gmail.com</a>
<a href=""mailto:m.rph.i.l.i.p.2.02.1a@gmail.com"">m.rph.i.l.i.p.2.02.1a@gmail.com</a>
<a href=""mailto:mr.phil.i.p202.1a@gmail.com"">mr.phil.i.p202.1a@gmail.com</a>
<a href=""mailto:mrp.h.il.ip.2.021a@gmail.com"">mrp.h.il.ip.2.021a@gmail.com</a>
<a href=""mailto:mr.p.h.il.ip2.0.21a@gmail.com"">mr.p.h.il.ip2.0.21a@gmail.com</a>
<a href=""mailto:mr.p.h.i.li.p202.1.a@gmail.com"">mr.p.h.i.li.p202.1.a@gmail.com</a>
<a href=""mailto:mr.p.hilip202.1.a@gmail.com"">mr.p.hilip202.1.a@gmail.com</a>
<a href=""mailto:mr.p.h.i.l.ip202.1.a@gmail.com"">mr.p.h.i.l.ip202.1.a@gmail.com</a>
<a href=""mailto:mr.ph.i.lip2021.a@gmail.com"">mr.ph.i.lip2021.a@gmail.com</a>
<a href=""mailto:mr.p.hi.l.ip2.0.2.1a@gmail.com"">mr.p.hi.l.ip2.0.2.1a@gmail.com</a>
<a href=""mailto:mrp.hi.li.p.20.21a@gmail.com"">mrp.hi.li.p.20.21a@gmail.com</a>
<a href=""mailto:mr.p.h.il.i.p2.0.21.a@gmail.com"">mr.p.h.il.i.p2.0.21.a@gmail.com</a>
<a href=""mailto:m.rphi.l.ip2.0.2.1.a@gmail.com"">m.rphi.l.ip2.0.2.1.a@gmail.com</a>
<a href=""mailto:m.r.p.hi.l.i.p202.1a@gmail.com"">m.r.p.hi.l.i.p202.1a@gmail.com</a>
<a href=""mailto:m.r.p.hi.l.ip2.0.2.1.a@gmail.com"">m.r.p.hi.l.ip2.0.2.1.a@gmail.com</a>
<a href=""mailto:m.rp.h.il.i.p20.2.1a@gmail.com"">m.rp.h.il.i.p20.2.1a@gmail.com</a>
<a href=""mailto:m.rphi.lip.20.2.1a@gmail.com"">m.rphi.lip.20.2.1a@gmail.com</a>
<a href=""mailto:mrp.hi.li.p.2.0.21a@gmail.com"">mrp.hi.li.p.2.0.21a@gmail.com</a>
<a href=""mailto:m.r.p.h.ili.p.20.21a@gmail.com"">m.r.p.h.ili.p.20.21a@gmail.com</a>
<a href=""mailto:m.r.p.h.i.li.p2.02.1a@gmail.com"">m.r.p.h.i.li.p2.02.1a@gmail.com</a>
<a href=""mailto:m.rp.h.i.l.ip2.0.2.1a@gmail.com"">m.rp.h.i.l.ip2.0.2.1a@gmail.com</a>
<a href=""mailto:mrp.h.i.lip2.021.a@gmail.com"">mrp.h.i.lip2.021.a@gmail.com</a>
<a href=""mailto:m.r.p.hil.i.p.20.2.1.a@gmail.com"">m.r.p.hil.i.p.20.2.1.a@gmail.com</a>
<a href=""mailto:mr.philip2.021.a@gmail.com"">mr.philip2.021.a@gmail.com</a>
<a href=""mailto:m.rph.ili.p20.21.a@gmail.com"">m.rph.ili.p20.21.a@gmail.com</a>
<a href=""mailto:m.r.ph.ilip2.021.a@gmail.com"">m.r.ph.ilip2.021.a@gmail.com</a>
<a href=""mailto:m.r.p.h.i.li.p.2.02.1.a@gmail.com"">m.r.p.h.i.li.p.2.02.1.a@gmail.com</a>
<a href=""mailto:m.rp.h.il.i.p2.021.a@gmail.com"">m.rp.h.il.i.p2.021.a@gmail.com</a>
<a href=""mailto:m.rph.il.ip.202.1.a@gmail.com"">m.rph.il.ip.202.1.a@gmail.com</a>
<a href=""mailto:mrp.hil.ip.2.021a@gmail.com"">mrp.hil.ip.2.021a@gmail.com</a>
<a href=""mailto:mrph.i.l.i.p20.2.1a@gmail.com"">mrph.i.l.i.p20.2.1a@gmail.com</a>
<a href=""mailto:mrp.h.i.l.i.p.202.1a@gmail.com"">mrp.h.i.l.i.p.202.1a@gmail.com</a>
<a href=""mailto:m.r.p.hil.ip.2021.a@gmail.com"">m.r.p.hil.ip.2021.a@gmail.com</a>
<a href=""mailto:mr.p.h.il.ip2021.a@gmail.com"">mr.p.h.il.ip2021.a@gmail.com</a>
<a href=""mailto:mr.p.hili.p2.021a@gmail.com"">mr.p.hili.p2.021a@gmail.com</a>
<a href=""mailto:mrp.h.il.ip.2.0.21a@gmail.com"">mrp.h.il.ip.2.0.21a@gmail.com</a>
<a href=""mailto:mrp.hilip.2.02.1a@gmail.com"">mrp.hilip.2.02.1a@gmail.com</a>
<a href=""mailto:mrp.h.il.i.p.2.0.21a@gmail.com"">mrp.h.il.i.p.2.0.21a@gmail.com</a>
<a href=""mailto:mrp.hilip.2021a@gmail.com"">mrp.hilip.2021a@gmail.com</a>
<a href=""mailto:mrphil.i.p2.0.21.a@gmail.com"">mrphil.i.p2.0.21.a@gmail.com</a>
<a href=""mailto:mrp.h.ilip202.1.a@gmail.com"">mrp.h.ilip202.1.a@gmail.com</a>
<a href=""mailto:m.r.phili.p2.021a@gmail.com"">m.r.phili.p2.021a@gmail.com</a>
<a href=""mailto:mrp.hil.ip.2.0.21a@gmail.com"">mrp.hil.ip.2.0.21a@gmail.com</a>
<a href=""mailto:m.rp.hi.li.p2.02.1.a@gmail.com"">m.rp.hi.li.p2.02.1.a@gmail.com</a>
<a href=""mailto:mrphi.l.ip2.02.1a@gmail.com"">mrphi.l.ip2.02.1a@gmail.com</a>
<a href=""mailto:m.r.phil.ip2021a@gmail.com"">m.r.phil.ip2021a@gmail.com</a>
<a href=""mailto:mrph.i.l.i.p.2.02.1.a@gmail.com"">mrph.i.l.i.p.2.02.1.a@gmail.com</a>
<a href=""mailto:mrp.h.i.li.p.2.0.2.1a@gmail.com"">mrp.h.i.li.p.2.0.2.1a@gmail.com</a>
<a href=""mailto:mrphilip2.0.21.a@gmail.com"">mrphilip2.0.21.a@gmail.com</a>
<a href=""mailto:m.rphilip.202.1a@gmail.com"">m.rphilip.202.1a@gmail.com</a>
<a href=""mailto:mr.ph.ili.p.2021a@gmail.com"">mr.ph.ili.p.2021a@gmail.com</a>
<a href=""mailto:mr.ph.il.ip2.021.a@gmail.com"">mr.ph.il.ip2.021.a@gmail.com</a>
<a href=""mailto:m.r.p.hi.l.i.p202.1.a@gmail.com"">m.r.p.hi.l.i.p202.1.a@gmail.com</a>
<a href=""mailto:m.rp.h.ilip20.2.1a@gmail.com"">m.rp.h.ilip20.2.1a@gmail.com</a>
<a href=""mailto:m.r.ph.il.i.p2.0.21.a@gmail.com"">m.r.ph.il.i.p2.0.21.a@gmail.com</a>
<a href=""mailto:mrph.il.i.p2.0.21a@gmail.com"">mrph.il.i.p2.0.21a@gmail.com</a>
<a href=""mailto:mrphi.l.ip.20.2.1a@gmail.com"">mrphi.l.ip.20.2.1a@gmail.com</a>
<a href=""mailto:mrp.hi.li.p.2.021a@gmail.com"">mrp.hi.li.p.2.021a@gmail.com</a>
<a href=""mailto:m.rp.h.i.l.i.p.2.0.2.1.a@gmail.com"">m.rp.h.i.l.i.p.2.0.2.1.a@gmail.com</a>
<a href=""mailto:m.rphil.ip20.2.1.a@gmail.com"">m.rphil.ip20.2.1.a@gmail.com</a>
<a href=""mailto:m.rphi.l.i.p2021a@gmail.com"">m.rphi.l.i.p2021a@gmail.com</a>
<a href=""mailto:mrp.h.i.l.ip2.02.1a@gmail.com"">mrp.h.i.l.ip2.02.1a@gmail.com</a>
<a href=""mailto:mrphi.lip.2.0.2.1a@gmail.com"">mrphi.lip.2.0.2.1a@gmail.com</a>
<a href=""mailto:mr.phi.l.ip.202.1.a@gmail.com"">mr.phi.l.ip.202.1.a@gmail.com</a>
<a href=""mailto:m.rphili.p2.02.1a@gmail.com"">m.rphili.p2.02.1a@gmail.com</a>
<a href=""mailto:m.rphi.l.ip20.21a@gmail.com"">m.rphi.l.ip20.21a@gmail.com</a>
<a href=""mailto:m.rphil.i.p20.21a@gmail.com"">m.rphil.i.p20.21a@gmail.com</a>
<a href=""mailto:mrphilip2021a@gmail.com"">mrphilip2021a@gmail.com</a>
<a href=""mailto:m.rp.hi.l.ip.2.0.2.1.a@gmail.com"">m.rp.hi.l.ip.2.0.2.1.a@gmail.com</a>
<a href=""mailto:mr.ph.ilip.2021.a@gmail.com"">mr.ph.ilip.2021.a@gmail.com</a>
<a href=""mailto:m.r.ph.i.li.p.2.021.a@gmail.com"">m.r.ph.i.li.p.2.021.a@gmail.com</a>
<a href=""mailto:mr.p.hilip.20.2.1.a@gmail.com"">mr.p.hilip.20.2.1.a@gmail.com</a>
<a href=""mailto:mrp.h.ilip2.0.21.a@gmail.com"">mrp.h.ilip2.0.21.a@gmail.com</a>
<a href=""mailto:m.r.p.hili.p2021.a@gmail.com"">m.r.p.hili.p2021.a@gmail.com</a>
<a href=""mailto:mrph.i.lip.2.0.2.1.a@gmail.com"">mrph.i.lip.2.0.2.1.a@gmail.com</a>
<a href=""mailto:m.r.phi.l.ip2.0.21a@gmail.com"">m.r.phi.l.ip2.0.21a@gmail.com</a>
<a href=""mailto:mr.p.hi.l.ip.2.02.1.a@gmail.com"">mr.p.hi.l.ip.2.02.1.a@gmail.com</a>
<a href=""mailto:m.rphi.li.p2.02.1.a@gmail.com"">m.rphi.li.p2.02.1.a@gmail.com</a>
<a href=""mailto:m.r.ph.i.lip2.021a@gmail.com"">m.r.ph.i.lip2.021a@gmail.com</a>
<a href=""mailto:mrphi.l.ip.2.0.2.1a@gmail.com"">mrphi.l.ip.2.0.2.1a@gmail.com</a>
<a href=""mailto:m.rp.h.i.li.p.2.02.1a@gmail.com"">m.rp.h.i.li.p.2.02.1a@gmail.com</a>
<a href=""mailto:mr.ph.il.ip202.1.a@gmail.com"">mr.ph.il.ip202.1.a@gmail.com</a>
<a href=""mailto:mrp.hi.l.i.p2021.a@gmail.com"">mrp.hi.l.i.p2021.a@gmail.com</a>
<a href=""mailto:m.rp.h.i.li.p20.2.1.a@gmail.com"">m.rp.h.i.li.p20.2.1.a@gmail.com</a>
<a href=""mailto:m.r.p.h.ili.p.20.2.1a@gmail.com"">m.r.p.h.ili.p.20.2.1a@gmail.com</a>
<a href=""mailto:mrp.h.ili.p.2.021a@gmail.com"">mrp.h.ili.p.2.021a@gmail.com</a>
<a href=""mailto:mr.phi.l.ip.2.0.2.1a@gmail.com"">mr.phi.l.ip.2.0.2.1a@gmail.com</a>
<a href=""mailto:mrp.h.ilip.2.0.2.1.a@gmail.com"">mrp.h.ilip.2.0.2.1.a@gmail.com</a>
<a href=""mailto:mr.phi.li.p20.21a@gmail.com"">mr.phi.li.p20.21a@gmail.com</a>
<a href=""mailto:mr.p.hi.lip2.021a@gmail.com"">mr.p.hi.lip2.021a@gmail.com</a>
<a href=""mailto:mr.p.h.i.l.i.p.20.2.1.a@gmail.com"">mr.p.h.i.l.i.p.20.2.1.a@gmail.com</a>
<a href=""mailto:mr.ph.i.l.i.p.2021.a@gmail.com"">mr.ph.i.l.i.p.2021.a@gmail.com</a>
<a href=""mailto:mrphi.l.i.p.20.21a@gmail.com"">mrphi.l.i.p.20.21a@gmail.com</a>
<a href=""mailto:mrph.ilip2.021.a@gmail.com"">mrph.ilip2.021.a@gmail.com</a>
<a href=""mailto:m.r.p.h.i.lip2.021.a@gmail.com"">m.r.p.h.i.lip2.021.a@gmail.com</a>
<a href=""mailto:m.r.ph.ilip.2.021.a@gmail.com"">m.r.ph.ilip.2.021.a@gmail.com</a>
<a href=""mailto:m.rp.hil.ip2.0.2.1.a@gmail.com"">m.rp.hil.ip2.0.2.1.a@gmail.com</a>
<a href=""mailto:mr.phil.i.p.20.2.1.a@gmail.com"">mr.phil.i.p.20.2.1.a@gmail.com</a>
<a href=""mailto:mrphi.l.ip20.2.1a@gmail.com"">mrphi.l.ip20.2.1a@gmail.com</a>
<a href=""mailto:m.r.phili.p2.02.1a@gmail.com"">m.r.phili.p2.02.1a@gmail.com</a>
<a href=""mailto:m.rph.i.li.p2.02.1a@gmail.com"">m.rph.i.li.p2.02.1a@gmail.com</a>
<a href=""mailto:m.r.p.h.il.i.p20.2.1.a@gmail.com"">m.r.p.h.il.i.p20.2.1.a@gmail.com</a>
<a href=""mailto:m.rphi.lip2.021a@gmail.com"">m.rphi.lip2.021a@gmail.com</a>
<a href=""mailto:mr.p.h.i.l.i.p.2.021a@gmail.com"">mr.p.h.i.l.i.p.2.021a@gmail.com</a>
<a href=""mailto:m.r.p.h.i.lip.2.021a@gmail.com"">m.r.p.h.i.lip.2.021a@gmail.com</a>
<a href=""mailto:m.r.phil.ip.202.1.a@gmail.com"">m.r.phil.ip.202.1.a@gmail.com</a>
<a href=""mailto:mrp.hi.lip.20.2.1a@gmail.com"">mrp.hi.lip.20.2.1a@gmail.com</a>
<a href=""mailto:m.r.p.hil.i.p2.0.2.1a@gmail.com"">m.r.p.hil.i.p2.0.2.1a@gmail.com</a>
<a href=""mailto:m.r.ph.i.li.p.20.2.1.a@gmail.com"">m.r.ph.i.li.p.20.2.1.a@gmail.com</a>
<a href=""mailto:m.rphi.l.ip2021.a@gmail.com"">m.rphi.l.ip2021.a@gmail.com</a>
<a href=""mailto:mrph.i.l.i.p2.0.2.1.a@gmail.com"">mrph.i.l.i.p2.0.2.1.a@gmail.com</a>
<a href=""mailto:mrp.hi.li.p.2.021.a@gmail.com"">mrp.hi.li.p.2.021.a@gmail.com</a>
<a href=""mailto:mrphil.ip.202.1.a@gmail.com"">mrphil.ip.202.1.a@gmail.com</a>
<a href=""mailto:mr.p.h.i.l.i.p2.02.1a@gmail.com"">mr.p.h.i.l.i.p2.02.1a@gmail.com</a>
<a href=""mailto:mrphil.i.p.20.21.a@gmail.com"">mrphil.i.p.20.21.a@gmail.com</a>
<a href=""mailto:mrp.hi.l.i.p2.0.21a@gmail.com"">mrp.hi.l.i.p2.0.21a@gmail.com</a>
<a href=""mailto:mr.p.h.i.lip20.2.1a@gmail.com"">mr.p.h.i.lip20.2.1a@gmail.com</a>
<a href=""mailto:mrphi.l.ip.2.0.21a@gmail.com"">mrphi.l.ip.2.0.21a@gmail.com</a>
<a href=""mailto:m.r.p.hi.li.p.2.0.21.a@gmail.com"">m.r.p.hi.li.p.2.0.21.a@gmail.com</a>
<a href=""mailto:mr.p.hi.li.p.20.2.1a@gmail.com"">mr.p.hi.li.p.20.2.1a@gmail.com</a>
<a href=""mailto:m.r.phil.i.p2.0.2.1.a@gmail.com"">m.r.phil.i.p2.0.2.1.a@gmail.com</a>
<a href=""mailto:mr.p.h.i.l.ip.2.0.21.a@gmail.com"">mr.p.h.i.l.ip.2.0.21.a@gmail.com</a>
<a href=""mailto:mr.p.hi.li.p2.0.2.1.a@gmail.com"">mr.p.hi.li.p2.0.2.1.a@gmail.com</a>
<a href=""mailto:mrphi.l.i.p.2.021.a@gmail.com"">mrphi.l.i.p.2.021.a@gmail.com</a>
<a href=""mailto:mr.p.hi.l.i.p.2021.a@gmail.com"">mr.p.hi.l.i.p.2021.a@gmail.com</a>
<a href=""mailto:m.rp.h.il.i.p.2.0.21a@gmail.com"">m.rp.h.il.i.p.2.0.21a@gmail.com</a>
<a href=""mailto:m.r.ph.il.ip.2.02.1a@gmail.com"">m.r.ph.il.ip.2.02.1a@gmail.com</a>
<a href=""mailto:m.rphil.i.p.2.0.2.1.a@gmail.com"">m.rphil.i.p.2.0.2.1.a@gmail.com</a>
<a href=""mailto:mrph.ili.p202.1a@gmail.com"">mrph.ili.p202.1a@gmail.com</a>
<a href=""mailto:mr.p.h.i.lip.2.021a@gmail.com"">mr.p.h.i.lip.2.021a@gmail.com</a>
<a href=""mailto:mrphi.lip2.0.2.1a@gmail.com"">mrphi.lip2.0.2.1a@gmail.com</a>
<a href=""mailto:m.rp.h.il.i.p202.1.a@gmail.com"">m.rp.h.il.i.p202.1.a@gmail.com</a>
<a href=""mailto:mrp.hi.lip2.021a@gmail.com"">mrp.hi.lip2.021a@gmail.com</a>
<a href=""mailto:mr.p.hi.l.ip.2.0.21a@gmail.com"">mr.p.hi.l.ip.2.0.21a@gmail.com</a>
<a href=""mailto:mrp.hil.ip.2.0.2.1a@gmail.com"">mrp.hil.ip.2.0.2.1a@gmail.com</a>
<a href=""mailto:mrph.i.li.p.2.0.21.a@gmail.com"">mrph.i.li.p.2.0.21.a@gmail.com</a>
<a href=""mailto:m.r.ph.i.l.i.p.2.021a@gmail.com"">m.r.ph.i.l.i.p.2.021a@gmail.com</a>
<a href=""mailto:m.rp.h.ili.p2.02.1.a@gmail.com"">m.rp.h.ili.p2.02.1.a@gmail.com</a>
<a href=""mailto:mrp.hil.i.p2021a@gmail.com"">mrp.hil.i.p2021a@gmail.com</a>
<a href=""mailto:m.rphi.l.i.p.2.02.1.a@gmail.com"">m.rphi.l.i.p.2.02.1.a@gmail.com</a>
<a href=""mailto:m.rph.i.l.i.p202.1.a@gmail.com"">m.rph.i.l.i.p202.1.a@gmail.com</a>
<a href=""mailto:m.rp.h.ili.p20.2.1.a@gmail.com"">m.rp.h.ili.p20.2.1.a@gmail.com</a>
<a href=""mailto:m.rp.hil.ip20.2.1a@gmail.com"">m.rp.hil.ip20.2.1a@gmail.com</a>
<a href=""mailto:mrph.il.i.p2.021a@gmail.com"">mrph.il.i.p2.021a@gmail.com</a>
<a href=""mailto:m.rphi.l.i.p.202.1a@gmail.com"">m.rphi.l.i.p.202.1a@gmail.com</a>
<a href=""mailto:mrphi.l.i.p2.02.1.a@gmail.com"">mrphi.l.i.p2.02.1.a@gmail.com</a>
<a href=""mailto:m.rp.h.i.lip2.0.21.a@gmail.com"">m.rp.h.i.lip2.0.21.a@gmail.com</a>
<a href=""mailto:77777@gmail.com"">77777@gmail.com</a>
<a href=""mailto:7.7.77.7@gmail.com"">7.7.77.7@gmail.com</a>
<a href=""mailto:7777.7@gmail.com"">7777.7@gmail.com</a>
<a href=""mailto:77.7.7.7@gmail.com"">77.7.7.7@gmail.com</a>
<a href=""mailto:777.77@gmail.com"">777.77@gmail.com</a>
<a href=""mailto:7.7.7.77@gmail.com"">7.7.7.77@gmail.com</a>
<a href=""mailto:77.777@gmail.com"">77.777@gmail.com</a>
<a href=""mailto:7.777.7@gmail.com"">7.777.7@gmail.com</a>
<a href=""mailto:7.7.777@gmail.com"">7.7.777@gmail.com</a>
<a href=""mailto:7.77.77@gmail.com"">7.77.77@gmail.com</a>
<a href=""mailto:7.7.7.7.7@gmail.com"">7.7.7.7.7@gmail.com</a>
<a href=""mailto:7.7777@gmail.com"">7.7777@gmail.com</a>
<a href=""mailto:77.77.7@gmail.com"">77.77.7@gmail.com</a>
<a href=""mailto:77.7.77@gmail.com"">77.7.77@gmail.com</a>
<a href=""mailto:7.77.7.7@gmail.com"">7.77.7.7@gmail.com</a>
<a href=""mailto:77777@gmail.com"">77777@gmail.com</a>
<a href=""mailto:777.7.7@gmail.com"">777.7.7@gmail.com</a>"
rLeaSqWS,Untitled,Mysoft,ASM (NASM),Sunday 25th of February 2024 09:06:54 AM CDT,"type SmallStruct
  A as byte
  B as byte
  C as byte
  D as byte
end type

type BigStruct
  A as long
  B as long
end type
  
function AddSmall naked ( byval tParms as SmallStruct ) as byte
  asm
    mov al,[esp+4]
    add al,[esp+5]
    add al,[esp+6]
    add al,[esp+7]
    ret 4
  end asm
end function

function AddBig naked ( tParms as BigStruct ) as long
  asm
    mov edx, [esp+4]    
    mov eax,[edx]
    add eax,[edx+4]    
    ret 4
  end asm
end function

print AddSmall( type(100,20,5,-1) )
print AddBig( type(5000,200) )
sleep"
0Wm6BaN8,News Feb25 24,Newscaster_Ned,Email,Sunday 25th of February 2024 08:41:00 AM CDT,".‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎1‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎2‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎3‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎ ‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎c‎‎‎o‎‎‎m‎‎‎p‎‎‎l‎‎‎e‎‎‎t‎‎‎e‎‎‎.‎‎‎

D‎o‎n‎'‎t‎ ‎w‎o‎r‎r‎y‎.‎ ‎I‎'‎m‎ ‎s‎e‎n‎d‎i‎n‎g‎ ‎t‎h‎o‎s‎e‎ ‎Y‎o‎u‎t‎u‎b‎e‎ ‎e‎m‎p‎l‎o‎y‎e‎e‎s‎ ‎t‎o‎ ‎c‎o‎n‎v‎e‎r‎s‎i‎o‎n‎ ‎t‎h‎e‎r‎a‎p‎y‎.‎.‎.‎ ‎I‎n‎ ‎t‎h‎e‎ ‎m‎e‎a‎n‎t‎i‎m‎e‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎J‎u‎d‎g‎e‎ ‎U‎p‎h‎o‎l‎d‎s‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎N‎o‎t‎i‎f‎i‎c‎a‎t‎i‎o‎n‎,‎ ‎B‎a‎n‎ ‎o‎n‎ ‎C‎r‎i‎t‎i‎c‎a‎l‎ ‎R‎a‎c‎e‎ ‎T‎h‎e‎o‎r‎y‎ ‎i‎n‎ ‎L‎o‎c‎a‎l‎ ‎S‎c‎h‎o‎o‎l‎ ‎D‎i‎s‎t‎r‎i‎c‎t‎
N‎o‎l‎t‎e‎:‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎T‎e‎r‎r‎i‎b‎l‎e‎ ‎B‎o‎x‎ ‎O‎f‎f‎i‎c‎e‎ ‎W‎e‎e‎k‎e‎n‎d‎ ‎f‎o‎r‎ ‎W‎o‎k‎e‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎
S‎C‎ ‎G‎o‎v‎.‎ ‎H‎e‎n‎r‎y‎ ‎M‎c‎M‎a‎s‎t‎e‎r‎ ‎C‎a‎l‎l‎s‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎V‎i‎c‎t‎o‎r‎y‎ ‎a‎ ‎'‎R‎o‎c‎k‎e‎t‎ ‎L‎a‎u‎n‎c‎h‎'‎
B‎e‎l‎a‎r‎u‎s‎ ‎O‎p‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎B‎o‎y‎c‎o‎t‎t‎ ‎o‎f‎ ‎'‎F‎a‎r‎c‎e‎'‎ ‎P‎a‎r‎l‎i‎a‎m‎e‎n‎t‎a‎r‎y‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎s‎
U‎k‎r‎a‎i‎n‎e‎ ‎D‎e‎f‎e‎n‎c‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎D‎e‎s‎p‎a‎i‎r‎s‎ ‎o‎v‎e‎r‎ ‎'‎L‎a‎t‎e‎'‎ ‎W‎e‎s‎t‎e‎r‎n‎ ‎A‎i‎d‎
W‎A‎T‎C‎H‎:‎ ‎P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎S‎h‎u‎t‎ ‎D‎o‎w‎n‎ ‎L‎o‎n‎d‎o‎n‎'‎s‎ ‎T‎o‎w‎e‎r‎ ‎B‎r‎i‎d‎g‎e‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
*‎*‎*‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎*‎*‎*‎

T‎r‎u‎m‎p‎ ‎W‎i‎n‎s‎ ‎i‎n‎ ‎S‎C‎ ‎B‎l‎o‎w‎o‎u‎t‎

H‎a‎l‎e‎y‎ ‎H‎u‎m‎i‎l‎i‎a‎t‎e‎d‎ ‎i‎n‎ ‎H‎o‎m‎e‎ ‎S‎t‎a‎t‎e‎

D‎o‎n‎a‎l‎d‎ ‎T‎a‎k‎e‎s‎ ‎S‎t‎a‎g‎e‎:‎ ‎’‎B‎i‎g‎g‎e‎r‎ ‎W‎i‎n‎ ‎t‎h‎a‎n‎ ‎E‎v‎e‎r‎ ‎E‎x‎p‎e‎c‎t‎e‎d‎’‎

S‎C‎ ‎G‎o‎v‎:‎ ‎’‎W‎e‎ ‎J‎u‎s‎t‎ ‎r‎e‎a‎c‎h‎e‎d‎ ‎M‎a‎x‎i‎m‎u‎m‎ ‎V‎e‎l‎o‎c‎i‎t‎y‎’‎

D‎e‎s‎p‎i‎t‎e‎ ‎N‎o‎ ‎P‎a‎t‎h‎ ‎F‎o‎r‎w‎a‎r‎d‎,‎ ‎N‎i‎k‎k‎i‎ ‎S‎a‎y‎s‎ ‎O‎n‎w‎a‎r‎d‎ ‎t‎o‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎,‎ ‎S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎
F‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎t‎h‎e‎ ‎l‎e‎a‎d‎i‎n‎g‎ ‎G‎O‎P‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎f‎o‎r‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎a‎n‎d‎ ‎l‎i‎k‎e‎l‎y‎ ‎G‎O‎P‎ ‎n‎o‎m‎i‎n‎e‎e‎,‎ ‎l‎o‎o‎k‎s‎ ‎t‎o‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎h‎i‎s‎ ‎p‎e‎r‎f‎e‎c‎t‎ ‎s‎t‎r‎e‎a‎k‎ ‎o‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎n‎i‎g‎h‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎P‎a‎l‎m‎e‎t‎t‎o‎ ‎S‎t‎a‎t‎e‎ ‎w‎i‎t‎h‎ ‎a‎ ‎b‎l‎o‎w‎o‎u‎t‎ ‎v‎i‎c‎t‎o‎r‎y‎ ‎o‎v‎e‎r‎ ‎f‎o‎r‎m‎e‎r‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎ ‎G‎o‎v‎.‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎i‎n‎ ‎h‎e‎r‎ ‎h‎o‎m‎e‎ ‎s‎t‎a‎t‎e‎.‎

C‎o‎m‎m‎e‎r‎c‎e‎ ‎S‎e‎c‎’‎y‎:‎ ‎‘‎I‎ ‎H‎a‎v‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎o‎n‎c‎e‎r‎n‎s‎’‎ ‎A‎b‎o‎u‎t‎ ‎E‎V‎s‎ ‎—‎ ‎‘‎P‎r‎o‎b‎
C‎o‎m‎m‎e‎r‎c‎e‎ ‎S‎e‎c‎'‎y‎:‎ ‎'‎I‎ ‎H‎a‎v‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎o‎n‎c‎e‎r‎n‎s‎'‎ ‎A‎b‎o‎u‎t‎ ‎E‎V‎s‎
1‎,‎8‎4‎1‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎l‎l‎s‎ ‎o‎n‎ ‎A‎l‎a‎b‎a‎m‎a‎ ‎L‎e‎g‎i‎s‎l‎a‎t‎u‎r‎e‎ ‎t‎o‎ ‎F‎i‎n‎d‎ ‎W‎a‎y‎ ‎t‎o‎ ‎P‎r‎e‎s‎e‎r‎v‎e‎ ‎I‎V‎F‎:‎ ‎G‎O‎P‎ ‎S‎i‎d‎e‎s‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎‘‎M‎i‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎l‎l‎s‎ ‎o‎n‎ ‎A‎l‎a‎b‎a‎m‎a‎ ‎L‎e‎g‎i‎s‎l‎a‎t‎u‎r‎e‎ ‎t‎o‎ ‎F‎i‎n‎d‎ ‎W‎a‎y‎ ‎t‎o‎ ‎P‎r‎e‎s‎e‎r‎v‎e‎ ‎I‎V‎F‎
6‎,‎7‎3‎0‎
R‎e‎p‎o‎r‎t‎:‎ ‎H‎a‎r‎v‎a‎r‎d‎ ‎D‎i‎d‎ ‎N‎o‎t‎ ‎R‎e‎v‎i‎e‎w‎ ‎C‎l‎a‎u‎d‎i‎n‎e‎ ‎G‎a‎y‎’‎s‎ ‎S‎c‎h‎o‎l‎a‎r‎s‎h‎i‎p‎,‎ ‎O‎v‎e‎r‎l‎o‎o‎k‎e‎d‎ ‎O‎t‎h‎e‎r‎ ‎N‎o‎m‎i‎n‎e‎e‎s‎ ‎i‎n‎ ‎P‎r‎e‎s‎i‎
R‎e‎p‎o‎r‎t‎:‎ ‎H‎a‎r‎v‎a‎r‎d‎ ‎D‎i‎d‎ ‎N‎o‎t‎ ‎R‎e‎v‎i‎e‎w‎ ‎C‎l‎a‎u‎d‎i‎n‎e‎ ‎G‎a‎y‎'‎s‎ ‎S‎c‎h‎o‎l‎a‎r‎s‎h‎i‎p‎
7‎6‎0‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎D‎o‎m‎i‎n‎a‎n‎t‎:‎ ‎D‎e‎c‎l‎a‎r‎e‎d‎ ‎W‎i‎n‎n‎e‎r‎ ‎o‎f‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎ ‎P‎r‎i‎m‎a‎r‎y‎ ‎R‎a‎c‎e‎ ‎W‎i‎t‎h‎i‎n‎ ‎M‎i‎n‎u‎t‎e‎s‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎D‎o‎m‎i‎n‎a‎n‎t‎:‎ ‎D‎e‎c‎l‎a‎r‎e‎d‎ ‎W‎i‎n‎n‎e‎r‎ ‎o‎f‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎ ‎P‎r‎i‎m‎a‎r‎y‎ ‎R‎a‎c‎e‎
3‎2‎8‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎F‎o‎r‎m‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎A‎i‎d‎e‎ ‎S‎a‎m‎ ‎N‎u‎n‎b‎e‎r‎g‎:‎ ‎T‎r‎u‎m‎p‎ ‎M‎u‎s‎t‎ ‎C‎h‎o‎o‎s‎e‎ ‎R‎u‎n‎n‎i‎n‎g‎ ‎M‎a‎t‎e‎ ‎W‎h‎o‎ ‎W‎i‎l‎l‎ ‎T‎a‎c‎k‎l‎e‎ ‎I‎m‎m‎
S‎a‎m‎ ‎N‎u‎n‎b‎e‎r‎g‎:‎ ‎T‎r‎u‎m‎p‎ ‎M‎u‎s‎t‎ ‎C‎h‎o‎o‎s‎e‎ ‎V‎P‎ ‎W‎h‎o‎ ‎W‎i‎l‎l‎ ‎T‎a‎c‎k‎l‎e‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎
2‎,‎4‎8‎2‎
C‎l‎y‎b‎u‎r‎n‎:‎ ‎‘‎A‎ ‎L‎o‎t‎’‎ ‎o‎f‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎G‎a‎f‎f‎e‎s‎ ‎A‎r‎e‎ ‎H‎i‎s‎ ‎S‎t‎u‎t‎t‎e‎r‎,‎ ‎F‎D‎R‎ ‎W‎a‎s‎ ‎i‎n‎ ‎a‎ ‎W‎h‎e‎e‎l‎c‎h‎a‎i‎r‎
C‎l‎y‎b‎u‎r‎n‎:‎ ‎'‎A‎ ‎L‎o‎t‎'‎ ‎o‎f‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎G‎a‎f‎f‎e‎s‎ ‎A‎r‎e‎ ‎H‎i‎s‎ ‎S‎t‎u‎t‎t‎e‎r‎,‎ ‎F‎D‎R‎ ‎W‎a‎s‎ ‎i‎n‎ ‎a‎ ‎W‎h‎e‎e‎l‎c‎h‎a‎i‎r‎
4‎3‎6‎
O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎:‎ ‎G‎O‎P‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎C‎o‎n‎t‎r‎o‎l‎ ‎‘‎R‎e‎c‎r‎e‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎e‎x‎’‎ ‎T‎h‎e‎y‎ ‎W‎a‎n‎t‎ ‎P‎a‎t‎r‎i‎a‎r‎c‎h‎a‎l‎ ‎T‎h‎e‎o‎c‎r‎a‎c‎y‎
O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎:‎ ‎G‎O‎P‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎C‎o‎n‎t‎r‎o‎l‎ ‎'‎R‎e‎c‎r‎e‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎e‎x‎'‎ ‎T‎h‎e‎y‎ ‎W‎a‎n‎t‎ ‎T‎h‎e‎o‎c‎r‎a‎c‎y‎
5‎,‎2‎6‎0‎
T‎r‎u‎m‎p‎ ‎L‎a‎w‎y‎e‎r‎s‎:‎ ‎N‎a‎t‎h‎a‎n‎ ‎W‎a‎d‎e‎’‎s‎ ‎C‎e‎l‎l‎ ‎P‎h‎o‎n‎e‎ ‎D‎a‎t‎a‎ ‎C‎o‎n‎t‎r‎a‎d‎i‎c‎t‎s‎ ‎T‎e‎s‎t‎i‎m‎o‎n‎y‎ ‎—‎ ‎‘‎C‎o‎u‎l‎d‎ ‎C‎o‎n‎s‎t‎
T‎r‎u‎m‎p‎ ‎L‎a‎w‎y‎e‎r‎s‎:‎ ‎N‎a‎t‎h‎a‎n‎ ‎W‎a‎d‎e‎'‎s‎ ‎C‎e‎l‎l‎ ‎P‎h‎o‎n‎e‎ ‎D‎a‎t‎a‎ ‎C‎o‎n‎t‎r‎a‎d‎i‎c‎t‎s‎ ‎T‎e‎s‎t‎i‎m‎o‎n‎y‎
6‎,‎8‎9‎5‎
C‎a‎t‎h‎e‎r‎i‎n‎e‎ ‎H‎e‎r‎r‎i‎d‎g‎e‎ ‎S‎h‎a‎r‎e‎s‎ ‎U‎n‎i‎o‎n‎ ‎S‎t‎a‎t‎e‎m‎e‎n‎t‎ ‎C‎o‎n‎d‎e‎m‎n‎i‎n‎g‎ ‎C‎B‎S‎ ‎N‎e‎w‎s‎’‎ ‎S‎e‎i‎z‎u‎r‎e‎ ‎o‎f‎ ‎H‎e‎r‎ ‎N‎o‎t‎e‎s‎
C‎a‎t‎h‎e‎r‎i‎n‎e‎ ‎H‎e‎r‎r‎i‎d‎g‎e‎ ‎S‎h‎a‎r‎e‎s‎ ‎S‎t‎a‎t‎e‎m‎e‎n‎t‎ ‎C‎o‎n‎d‎e‎m‎n‎i‎n‎g‎ ‎C‎B‎S‎ ‎N‎e‎w‎s‎ ‎S‎e‎i‎z‎i‎n‎g‎ ‎H‎e‎r‎ ‎N‎o‎t‎e‎s‎
5‎,‎4‎5‎4‎
P‎a‎r‎a‎m‎o‎u‎n‎t‎’‎s‎ ‎F‎u‎t‎u‎r‎e‎ ‎L‎o‎o‎k‎s‎ ‎G‎r‎i‎m‎ ‎A‎m‎i‎d‎ ‎P‎e‎r‎f‎e‎c‎t‎ ‎S‎t‎o‎r‎m‎ ‎o‎f‎ ‎D‎e‎c‎l‎i‎n‎i‎n‎g‎ ‎C‎a‎b‎l‎e‎ ‎T‎V‎,‎ ‎S‎t‎r‎e‎a‎m‎i‎n‎g‎ ‎W‎o‎e‎s‎
P‎a‎r‎a‎m‎o‎u‎n‎t‎ ‎F‎a‎c‎e‎s‎ ‎P‎e‎r‎f‎e‎c‎t‎ ‎S‎t‎o‎r‎m‎ ‎o‎f‎ ‎D‎e‎c‎l‎i‎n‎i‎n‎g‎ ‎C‎a‎b‎l‎e‎ ‎T‎V‎,‎ ‎S‎t‎r‎e‎a‎m‎i‎n‎g‎ ‎W‎o‎e‎s‎

S‎p‎i‎c‎ ‎G‎e‎t‎s‎ ‎i‎n‎t‎o‎ ‎S‎h‎o‎o‎t‎o‎u‎t‎ ‎w‎i‎t‎h‎ ‎E‎l‎ ‎P‎a‎s‎o‎ ‎C‎o‎u‎n‎t‎y‎ ‎C‎o‎p‎s‎;‎ ‎4‎ ‎I‎n‎j‎u‎r‎e‎d‎,‎ ‎1‎ ‎O‎f‎f‎i‎c‎e‎r‎ ‎D‎i‎e‎s‎.‎

J‎u‎s‎t‎ ‎f‎l‎y‎ ‎o‎n‎ ‎h‎i‎s‎ ‎m‎a‎g‎i‎c‎a‎l‎ ‎s‎o‎m‎b‎r‎e‎r‎o‎ ‎o‎u‎t‎ ‎o‎f‎ ‎g‎r‎i‎n‎g‎o‎l‎a‎n‎d‎!‎ ‎


M‎o‎n‎k‎e‎y‎ ‎D‎u‎d‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎F‎o‎r‎t‎ ‎S‎m‎i‎t‎h‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎'‎s‎ ‎T‎o‎d‎d‎l‎e‎r‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎


M‎i‎l‎w‎a‎u‎k‎e‎e‎:‎ ‎1‎8‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎D‎i‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎C‎o‎o‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎H‎i‎m‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎D‎u‎r‎i‎n‎g‎ ‎D‎r‎u‎g‎ ‎D‎e‎a‎l‎.‎


T‎o‎r‎o‎n‎t‎o‎:‎ ‎O‎f‎f‎i‎c‎e‎r‎ ‎R‎e‎p‎o‎r‎t‎s‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎H‎e‎r‎.‎


B‎a‎b‎o‎o‎n‎ ‎(‎F‎a‎g‎)‎ ‎W‎o‎o‎d‎l‎a‎n‎d‎ ‎H‎i‎g‎h‎ ‎S‎c‎h‎o‎o‎l‎ ‎T‎e‎a‎c‎h‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎Y‎o‎u‎n‎g‎ ‎B‎o‎y‎.‎


G‎a‎u‎t‎i‎e‎r‎ ‎O‎r‎c‎ ‎G‎e‎t‎s‎ ‎6‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎a‎g‎e‎ ‎G‎i‎r‎l‎.‎


E‎d‎g‎e‎c‎o‎m‎b‎e‎ ‎C‎o‎u‎n‎t‎y‎ ‎N‎i‎g‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎1‎6‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
8‎3‎°‎
/‎5‎9‎°‎
2‎%‎
S‎S‎W‎ ‎1‎7‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎5‎ ‎|‎ ‎D‎a‎y‎
8‎3‎°‎
2‎%‎
S‎S‎W‎
1‎7‎
 ‎
m‎p‎h‎
S‎u‎n‎n‎y‎.‎ ‎H‎i‎g‎h‎ ‎8‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎0‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎2‎6‎ ‎p‎m‎
S‎u‎n‎ ‎2‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎9‎°‎
1‎2‎%‎
S‎S‎W‎
1‎3‎
 ‎
m‎p‎h‎
M‎a‎i‎n‎l‎y‎ ‎c‎l‎e‎a‎r‎.‎ ‎L‎o‎w‎ ‎5‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎3‎9‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎4‎5‎ ‎a‎m‎
M‎o‎n‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎3‎°‎
1‎1‎%‎
S‎S‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎6‎°‎
9‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎8‎
C‎l‎o‎u‎d‎y‎/‎W‎i‎n‎d‎
6‎8‎°‎
/‎4‎3‎°‎
4‎%‎
N‎ ‎2‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎9‎°‎
/‎4‎3‎°‎
2‎4‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎5‎0‎°‎
1‎4‎%‎
E‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎8‎°‎
/‎5‎8‎°‎
1‎3‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎0‎°‎
/‎6‎2‎°‎
3‎2‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎5‎7‎°‎
4‎2‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎4‎9‎°‎
2‎4‎%‎
N‎N‎W‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎5‎0‎°‎
3‎6‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎1‎°‎
2‎4‎%‎
S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎8‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎1‎°‎
2‎0‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎9‎
S‎h‎o‎w‎e‎r‎s‎
7‎0‎°‎
/‎5‎0‎°‎
3‎7‎%‎
W‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎4‎9‎°‎
1‎9‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎C‎h‎i‎n‎k‎s‎.‎ ‎😑

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎i‎l‎l‎ ‎C‎o‎s‎b‎y‎
W‎i‎l‎l‎i‎a‎m‎ ‎H‎e‎n‎r‎y‎ ‎C‎o‎s‎b‎y‎,‎ ‎J‎r‎.‎ ‎(‎a‎.‎k‎.‎a‎.‎ ‎B‎i‎l‎l‎ ‎C‎o‎s‎b‎y‎ ‎a‎n‎d‎ ‎T‎h‎e‎ ‎C‎o‎z‎)‎ ‎i‎s‎ ‎a‎n‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎t‎e‎l‎e‎v‎i‎s‎i‎o‎n‎ ‎a‎c‎t‎o‎r‎,‎ ‎s‎w‎e‎a‎t‎e‎r‎-‎a‎f‎i‎c‎i‎o‎n‎a‎d‎o‎,‎ ‎c‎o‎m‎e‎d‎i‎a‎n‎ ‎a‎n‎d‎ ‎p‎r‎o‎f‎e‎s‎s‎i‎o‎n‎a‎l‎ ‎o‎l‎d‎ ‎p‎e‎r‎s‎o‎n‎ ‎w‎h‎o‎ ‎w‎a‎s‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎f‎o‎r‎ ‎a‎b‎o‎u‎t‎ ‎a‎ ‎w‎e‎e‎k‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎1‎9‎8‎0‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎e‎n‎t‎i‎r‎e‎l‎y‎ ‎f‎o‎r‎g‎o‎t‎ ‎a‎b‎o‎u‎t‎ ‎h‎i‎s‎ ‎e‎x‎i‎s‎t‎e‎n‎c‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎n‎e‎x‎t‎ ‎t‎h‎r‎e‎e‎ ‎d‎e‎c‎a‎d‎e‎s‎.‎ ‎U‎n‎f‎o‎r‎t‎u‎n‎a‎t‎e‎l‎y‎,‎ ‎t‎h‎i‎s‎ ‎e‎r‎a‎ ‎o‎f‎ ‎p‎e‎a‎c‎e‎ ‎w‎a‎s‎ ‎s‎h‎a‎t‎t‎e‎r‎e‎d‎ ‎i‎n‎ ‎2‎0‎1‎4‎ ‎w‎h‎e‎n‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎d‎r‎i‎e‎d‎-‎u‎p‎ ‎f‎a‎s‎h‎i‎o‎n‎ ‎m‎o‎d‎e‎l‎s‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎1‎9‎0‎0‎s‎ ‎b‎e‎g‎a‎n‎ ‎m‎o‎u‎n‎t‎i‎n‎g‎ ‎a‎ ‎p‎u‎b‎l‎i‎c‎ ‎s‎m‎e‎a‎r‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎B‎i‎l‎l‎ ‎C‎o‎s‎b‎y‎ ‎a‎n‎d‎ ‎a‎l‎l‎e‎g‎e‎d‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎h‎a‎d‎ ‎b‎e‎e‎n‎ ‎d‎r‎u‎g‎g‎i‎n‎g‎ ‎a‎n‎d‎ ‎s‎t‎i‎c‎k‎i‎n‎g‎ ‎h‎i‎s‎ ‎p‎u‎d‎d‎i‎n‎'‎ ‎p‎o‎p‎ ‎i‎n‎s‎i‎d‎e‎ ‎w‎o‎m‎e‎n‎ ‎a‎n‎d‎ ‎1‎6‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎g‎i‎r‎l‎s‎ ‎s‎i‎n‎c‎e‎ ‎t‎h‎e‎ ‎1‎9‎6‎0‎s‎ ‎a‎n‎d‎ ‎h‎a‎d‎ ‎s‎o‎m‎e‎h‎o‎w‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎g‎e‎t‎ ‎a‎w‎a‎y‎ ‎w‎i‎t‎h‎ ‎i‎t‎ ‎f‎o‎r‎ ‎5‎0‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎y‎e‎a‎r‎s‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎n‎e‎g‎r‎o‎ ‎i‎n‎ ‎t‎h‎e‎ ‎1‎9‎6‎0‎s‎.‎

(‎(‎ ‎Z‎I‎P‎ ‎Z‎O‎P‎ ‎Z‎O‎O‎B‎I‎T‎Y‎ ‎B‎O‎P‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎n‎a‎x‎ ‎e‎p‎h‎i‎p‎p‎i‎g‎e‎r‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎v‎a‎g‎r‎a‎n‎t‎ ‎e‎m‎p‎e‎r‎o‎r‎,‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎d‎r‎a‎g‎o‎n‎f‎l‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎A‎e‎s‎h‎n‎i‎d‎a‎e‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎J‎o‎a‎q‎u‎i‎m‎ ‎A‎l‎v‎e‎s‎ ‎G‎a‎s‎p‎a‎r‎

.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎t‎h‎r‎e‎e‎s‎o‎m‎e‎ ‎w‎i‎t‎h‎ ‎a‎n‎ ‎o‎t‎t‎e‎r‎ ‎a‎n‎d‎ ‎a‎ ‎p‎e‎l‎i‎c‎a‎n‎.‎ ‎I‎ ‎l‎o‎v‎e‎ ‎t‎h‎e‎ ‎b‎e‎a‎c‎h‎.‎"
ge8HwBgq,12. Улучшаем собственный вектор,prizrak567890,C++,Sunday 25th of February 2024 08:30:16 AM CDT,"//main.cpp -----------------------------------------------------------------
#include <cassert>
#include <iostream>
#include ""simple_vector.h""

using namespace std;

void TestReserveConstructor() {
    cout << ""TestReserveConstructor""s << endl;
    SimpleVector<int> v(Reserve(5));
    assert(v.GetCapacity() == 5);
    assert(v.IsEmpty());
    cout << ""Done!""s << endl;
}

void TestReserveMethod() {
    cout << ""TestReserveMethod""s << endl;
    SimpleVector<int> v;
    // зарезервируем 5 мест в векторе
    v.Reserve(5);
    assert(v.GetCapacity() == 5);
    assert(v.IsEmpty());

    // попытаемся уменьшить capacity до 1
    v.Reserve(1);
    // capacity должно остаться прежним
    assert(v.GetCapacity() == 5);
    // поместим 10 элементов в вектор
    for (int i = 0; i < 10; ++i) {
        v.PushBack(i);
    }
    assert(v.GetSize() == 10);
    // увеличим capacity до 100
    v.Reserve(100);
    // проверим, что размер не поменялся
    assert(v.GetSize() == 10);
    assert(v.GetCapacity() == 100);
    // проверим, что элементы на месте
    for (int i = 0; i < 10; ++i) {
        assert(v[i] == i);
    }
    cout << ""Done!""s << endl;
}

int main() {
    TestReserveConstructor();
    TestReserveMethod();
}
//array.h --------------------------------------------------------
#pragma once
#include <algorithm>
#include <cassert>
#include <cstdlib>

template <typename Type>
class ArrPtr {
public:

	ArrPtr() = default;

	explicit ArrPtr(size_t size) {
		if (size == 0) {
			raw_ptr_ = nullptr;
		}
		else {
			raw_ptr_ = new Type[size];
		}
	}
	explicit ArrPtr(Type* raw_ptr) noexcept : raw_ptr_(raw_ptr) {}

	~ArrPtr() {
		delete[] raw_ptr_;
	}

	Type& operator[](size_t index) noexcept {

		return raw_ptr_[index];
	}
	const Type& operator[](size_t index) const noexcept {
		return raw_ptr_[index];
	}

	explicit operator bool() noexcept {
		if (raw_ptr_ != nullptr) {
			return true;
		}
		else {
			return false;
		}
	}

	//Type* Get_begin() noexcept {
	//	return &raw_ptr_[0];
	//}

	Type* Get_begin() const noexcept {
		return &raw_ptr_[0];
	}

	void swap(ArrPtr& other) noexcept {
		std::swap(other.raw_ptr_, raw_ptr_);
	}

private:
	Type* raw_ptr_ = nullptr;
};

//simplevector.h -------------------------------------------------------------
#pragma once
#include ""array_ptr.h""
#include <initializer_list>
#include <cassert>
#include <stdexcept>
#include <algorithm>



//Не забудьте обновить указатель на начало вектора и текущую ёмкость.Для 
//реализации конструктора с резервированием вам понадобится 
//дополнительный класс - обёртка, чтобы компилятор мог разобраться и вызвать 
//правильный конструктор.Этот конструктор должен принимать по значению
//объект этого класса - обёртки.Тогда функция(не метод!) будет иметь следующую сигнатуру :
class ReserveProxyObj {
public:
    explicit ReserveProxyObj(size_t capacity_to_reserve)
        : capacity_(capacity_to_reserve)
    {
    }

    size_t ReserveCapacity() {
        return capacity_;
    }

private:
    size_t capacity_;
};

ReserveProxyObj Reserve(size_t capacity_to_reserve) {
    return ReserveProxyObj(capacity_to_reserve);
};



template <typename Type>
class SimpleVector {
public:
    using Iterator = Type*;
    using ConstIterator = const Type*;

    SimpleVector() noexcept = default;

    // Создаёт вектор из size элементов, инициализированных значением по умолчанию
    explicit SimpleVector(size_t size) : SimpleVector(size, Type()) {
    }

    // Создаёт вектор из size элементов, инициализированных значением value
    SimpleVector(size_t size, const Type& value) : value_(size), size_(size), capacite_(size) {
        std::fill(value_.Get_begin(), value_.Get_begin() + size, value);
    }

    // Создаёт вектор из std::initializer_list
    SimpleVector(std::initializer_list<Type> init) : value_(init.size()), size_(init.size()), capacite_(init.size()) {
        std::copy(init.begin(), init.end(), value_.Get_begin());
    }

    explicit SimpleVector(ReserveProxyObj obj)
    {
        Reserve(obj.ReserveCapacity());
    }

    // Возвращает количество элементов в массиве
    size_t GetSize() const noexcept {
        return size_;
    }

    // Возвращает вместимость массива
    size_t GetCapacity() const noexcept {
        return capacite_;
    }

    // Сообщает, пустой ли массив
    bool IsEmpty() const noexcept {
        return size_ == 0;
    }

    // Возвращает ссылку на элемент с индексом index
    Type& operator[](size_t index) noexcept {
        return value_[index];
    }

    // Возвращает константную ссылку на элемент с индексом index
    const Type& operator[](size_t index) const noexcept {
        return value_[index];
    }

    // Возвращает константную ссылку на элемент с индексом index
    // Выбрасывает исключение std::out_of_range, если index >= size
    Type& At(size_t index) {
        if (index >= size_) {
            throw std::out_of_range(""out_of_range"");
        }
        else {
            return value_[index];
        }
    }

    // Возвращает константную ссылку на элемент с индексом index
    // Выбрасывает исключение std::out_of_range, если index >= size
    const Type& At(size_t index) const {
        if (index >= size_) {
            throw std::out_of_range(""out_of_range"");
        }
        else {
            return value_[index];
        }
    }

    // Обнуляет размер массива, не изменяя его вместимость
    void Clear() noexcept {
        size_ = 0;
    }

    // Изменяет размер массива.
    // При увеличении размера новые элементы получают значение по умолчанию для типа Type
    void Resize(size_t new_size) {
        if (new_size <= capacite_) {
            if (new_size < size_) {
                size_ = new_size; // Уменьшаем размер, если new_size меньше текущего размера
            }
            else {
                std::fill(value_.Get_begin() + size_, value_.Get_begin() + new_size, Type()); // Заполняем новые элементы значением по умолчанию
                size_ = new_size; // Обновляем размер
            }
        }
        else {
            size_t new_capacity = std::max(new_size, capacite_ * 2); // Вычисляем новую вместимость
            ArrPtr<Type> new_array(new_capacity); // Создаем новый массив с увеличенной вместимостью
            std::copy(value_.Get_begin(), value_.Get_begin() + size_, new_array.Get_begin()); // Копируем существующие элементы
            std::fill(new_array.Get_begin() + size_, new_array.Get_begin() + new_size, Type()); // Заполняем новые элементы значением по умолчанию
            value_.swap(new_array); // Заменяем старый массив на новый
            size_ = new_size; // Обновляем размер
            capacite_ = new_capacity; // Обновляем вместимость
        }
    }

    // Возвращает итератор на начало массива
    // Для пустого массива может быть равен (или не равен) nullptr
    Iterator begin() noexcept {
        return value_.Get_begin();
    }

    // Возвращает итератор на элемент, следующий за последним
    // Для пустого массива может быть равен (или не равен) nullptr
    Iterator end() noexcept {
        return value_.Get_begin() + size_;
    }

    // Возвращает константный итератор на начало массива
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator begin() const noexcept {
        return value_.Get_begin();
    }

    // Возвращает итератор на элемент, следующий за последним
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator end() const noexcept {
        return value_.Get_begin() + size_;
    }

    // Возвращает константный итератор на начало массива
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator cbegin() const noexcept {
        return value_.Get_begin();
    }

    // Возвращает итератор на элемент, следующий за последним
    // Для пустого массива может быть равен (или не равен) nullptr
    ConstIterator cend() const noexcept {
        return value_.Get_begin() + size_;
    }

    SimpleVector(const SimpleVector& other) : value_(other.capacite_),size_(other.size_) {
        
        std::copy(other.begin(), other.end(), value_.Get_begin());

    }

    SimpleVector& operator=(const SimpleVector& rhs) {

        if (&value_ != &rhs.value_) {

            ArrPtr<Type> tmp (rhs.GetCapacity());
            std::copy(rhs.begin(), rhs.end(), tmp.Get_begin());
            value_.swap(tmp);
            size_ = rhs.size_;
            capacite_ = rhs.capacite_;
        }
        return *this;
    }

    // Добавляет элемент в конец вектора
    // При нехватке места увеличивает вдвое вместимость вектора
    void PushBack(const Type& item) {
        if (size_ + 1 > capacite_) {
            size_t tmp_c = std::max(size_ + 1, capacite_ * 2);
            ArrPtr<Type> tmp(tmp_c);
            std::fill(tmp.Get_begin(), tmp.Get_begin() + tmp_c, Type());
            std::copy(value_.Get_begin(), value_.Get_begin() + size_, tmp.Get_begin());
            value_.swap(tmp);
            capacite_ = tmp_c;
        }
        value_[size_] = item;
        ++size_;
        
    }

    // Вставляет значение value в позицию pos.
    // Возвращает итератор на вставленное значение
    // Если перед вставкой значения вектор был заполнен полностью,
    // вместимость вектора должна увеличиться вдвое, а для вектора вместимостью 0 стать равной 1
    Iterator Insert(ConstIterator pos, const Type& value) {
        size_t quantity = pos - value_.Get_begin();
        if (capacite_ == 0) {
            ArrPtr<Type>tmp(1);
            tmp[quantity] = value;
            value_.swap(tmp);
            ++capacite_;
            ++size_;
        }
        else if (size_ < capacite_) {
            std::copy_backward(value_.Get_begin() + quantity, value_.Get_begin() + size_, value_.Get_begin() + size_ + 1);
            value_[quantity] = value;
            ++size_;
        }
        else {
            size_t tmp_c = std::max(size_ + 1, capacite_ * 2);
            ArrPtr<Type> tmp(tmp_c);
            std::copy(value_.Get_begin(), value_.Get_begin() + size_, tmp.Get_begin());
            std::copy_backward(value_.Get_begin() + quantity, value_.Get_begin() + size_, tmp.Get_begin() + size_ + 1);
            tmp[quantity] = value;
            value_.swap(tmp);
            capacite_ = tmp_c;
            ++size_;
        }
        return &value_[quantity];
    }

    // ""Удаляет"" последний элемент вектора. Вектор не должен быть пустым
    void PopBack() noexcept {
        if (value_) {
            --size_;
        }
    }

    // Удаляет элемент вектора в указанной позиции
    Iterator Erase(ConstIterator pos) {
        size_t quantity = pos - value_.Get_begin();
        ArrPtr<Type> tmp(capacite_);
        std::copy(value_.Get_begin(), value_.Get_begin() + quantity,tmp.Get_begin());
        std::copy(value_.Get_begin() + quantity + 1, value_.Get_begin() + size_, tmp.Get_begin() + quantity);
        --size_;
        return &value_[quantity];

    }

    // Обменивает значение с другим вектором
    void swap(SimpleVector& other) noexcept {
        std::swap(other.size_, size_);
        std::swap(other.capacite_, capacite_);
        value_.swap(other.value_);

    }

    void Reserve(size_t new_capacity) {
        capacite_ = new_capacity;
    }

    
private:
    ArrPtr<Type> value_;
    size_t size_ = 0;
    size_t capacite_ = 0;
};

template <typename Type>
inline bool operator==(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    // Заглушка. Напишите тело самостоятельно
    return std::equal(lhs.begin(), lhs.end(), rhs.begin());
}

template <typename Type>
inline bool operator!=(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    // Заглушка. Напишите тело самостоятельно
    return !std::equal(lhs.begin(), lhs.end(), rhs.begin());
}

template <typename Type>
inline bool operator<(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return std::lexicographical_compare(lhs.begin(), lhs.end(), rhs.begin(), rhs.end());
}

template <typename Type>
inline bool operator<=(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return lhs < rhs || lhs == rhs;
}

template <typename Type>
inline bool operator>(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return rhs < lhs;
}

template <typename Type>
inline bool operator>=(const SimpleVector<Type>& lhs, const SimpleVector<Type>& rhs) {
    return lhs > rhs || lhs == rhs;
}"
zAD2LJj4,Untitled,MisterQuirk,Python,Sunday 25th of February 2024 08:00:03 AM CDT,"#Task 1

# print([x**2 for x in range(1, 101)])

#Task 2

# print([i*2 for i in range(0, 20, 2)][::2])
#[0, 8, 16, 24, 32]

#Task 3

# print(len([i for i in range(1, 21) if i % 2 == 0]))

#Task 4

# print(len([int(i) for i in input().split()[::2] if int(i) % 2 == 0]))

#Task 5

# print(len([i for i in range (1, 1001) if i % 7 == 0 or i % 11 == 0]))"
MDtFkS8B,edit.php,tanmyid,PHP,Sunday 25th of February 2024 07:51:06 AM CDT,"<div class=""row"">
  <div class=""col-12 grid-margin"">
    <div class=""card"">
      <div class=""card-body"">
        <div class=""row mb-3"">
          <div class=""col"">
            <h4 class=""card-title"">Edit Data Lapor</h4>
          </div>
          <div class=""col text-right"">
            <a href=""<?= base_url('pelelang/lapor/index') ?>"" class=""btn btn-primary"">Kembali</a>
          </div>
        </div>
        <div class=""row"">
          <div class=""col-md-12"">
            <form action=""<?= base_url('pelelang/lapor/edit/' . $data->id_lapor) ?>"" method=""POST"" enctype=""multipart/form-data"">
              <div class=""form-group"">
                <!-- Menambahkan input hidden untuk menyimpan id lapor -->
                <input type=""hidden"" class=""form-control"" name=""id_lapor"" value=""<?= $data->id_lapor ?>"">
              </div>
              <div class=""form-group"">
                <label for=""tgl_lpr"">Tanggal Lapor</label>
                <!-- Mengubah nama atribut input menjadi ""tgl_lpr"" sesuai dengan controller -->
                <input type=""date"" class=""form-control"" name=""tgl_lpr"" id=""tgl_lpr"" value=""<?= $data->tgl_lpr ?>"" required>
              </div>
              <div class=""form-group"">
                <label for=""lelang_id"">ID Lelang</label>
                <!-- Menggunakan foreach untuk menghasilkan dropdown -->
                <select class=""form-control"" name=""lelang_id"" id=""lelang_id"" required>
                  <option value="""">Pilih ID Lelang</option> <!-- Opsi default -->
                  <?php foreach ($lelang_options as $option) { ?>
                    <option value=""<?= $option['lelang_id']; ?>"" <?php if ($option['lelang_id'] == $data->lelang_id) echo 'selected'; ?>>
                      <?= $option['lelang_info']; ?>
                    </option>
                  <?php } ?>
                </select>
              </div>
              <div class=""form-group"">
                <label for=""deskripsi"">Deskripsi</label>
                <!-- Mengubah nama atribut textarea menjadi ""deskripsi_lapor"" sesuai dengan controller -->
                <textarea name=""deskripsi"" class=""form-control"" id=""deskripsi"" placeholder=""Deskripsi"" required><?= $data->deskripsi ?></textarea>
              </div>
              <div class=""form-group"">
                <label for=""nama_pelapor"">Nama Pelapor</label>
                <input type=""text"" class=""form-control"" name=""nama_pelapor"" id=""nama_pelapor"" placeholder=""Nama Pelapor"" value=""<?= $data->nama_pelapor ?>"" required>
              </div>
              <div class=""form-group"">
                <label for=""no_hp"">No HP</label>
                <input type=""tel"" class=""form-control"" name=""no_hp"" id=""no_hp"" placeholder=""Nomor HP"" value=""<?= $data->no_hp ?>"" required>
              </div>
              <div class=""form-group"">
                <label for=""nama"">Nama Pelanggar</label>
                <select class=""form-control"" name=""nama_pelanggar"" id=""nama_pelanggar"" required>
                  <?php foreach ($peserta_options as $option) { ?>
                    <option value=""<?php echo $option['nama']; ?>""><?php echo $option['nama']; ?></option>
                  <?php } ?>
                </select>
              </div>

              <div class=""text-right"">
                <button type=""submit"" class=""btn btn-success"" name=""submitData"">Simpan</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>"
vKcrQaAP,vehicles.hpp,Jerry442,C,Sunday 25th of February 2024 07:50:31 AM CDT,"class AFV_Wheeled_01_base_F;
class B_AFV_Wheeled_01_cannon_F: AFV_Wheeled_01_base_F
{
    class AnimationSources;
};

class v105_URFW_Rooikat_120_base: B_AFV_Wheeled_01_cannon_F
{
    scope = 0
    scopeCurator = 0
    class AnimationSources: AnimationSources
    {
       class muzzle_hide_cannon;
       class muzzle_rot_cannon;
       class muzzle_rot_HMG;
       class cannon_120mm_revolving;
       class HitEngine_src;
       class HitFuel_src;
       class HitHull_src;
       class HitMainGun_src;
       class HitTurret_src;
       class HitComTurret_src;
       class HitSLAT_Left_1_src;
       class HitSLAT_Left_2_src;
       class HitSLAT_Left_3_src;
       class HitSLAT_Right_1_src;
       class HitSLAT_Right_2_src;
       class HitSLAT_Right_3_src;
       class HitSLAT_back_src;
       class HitSLAT_front_src;
       class showCamonetHull;
       class showCamonetCannon;
       class showCamonetTurret;
       class showSLATHull;
    };
};

class v105_URFW_Rooikat_120: v105_URFW_Rooikat_120_base
{
    author = ""ENS P. Luke"";
    scope = 2;
    scopeCurator = 2;
    displayName = ""Rooikat 121"";
    side = 0;
    faction = ""v105_URFW"";
    crew = ""B_soldier_AAR_F"";
    
    editorCategory = ""v105_URFW_EdCat"";
    editorSubcategory = ""v105_URFW_Tanks_EdSubCat"";
    
	/*
    hiddenSelectionsTextures[] =
    {
        ""a3\armor_f_tank\afv_wheeled_01\data\afv_wheeled_01_ext1_green_co.paa"",
        ""a3\armor_f_tank\afv_wheeled_01\data\afv_wheeled_01_ext2_green_co.paa"",
        ""a3\armor_f_tank\afv_wheeled_01\data\afv_wheeled_01_wheel_green_co.paa"",
        ""a3\armor_f\data\camonet_nato_green_co.paa"",
        ""a3\armor_f_tank\afv_wheeled_01\data\afv_wheeled_01_ext3_co.paa""
    };
	*/
    
    class AnimationSources: AnimationSources
    {
        class showCamonetHull: showCamonetHull
        {
            initPhase = 1;
        };
        class showSLATHull: showSLATHull
        {
            initPhase = 1;
        };
    };
};

class Heli_Transport_01_base_F;
class B_Heli_Transport_01_F: Heli_Transport_01_base_F
{
    class Turrets;
    class AnimationSources;
};

class v105_URFW_UH_88_Crow_base: B_Heli_Transport_01_F
{
    scope = 0
    scopeCurator = 0
    class AnimationSources: AnimationSources
    {
       class Door_L;
       class Door_R;
       class Holder;
       class Gun_HRot;
       class Gun_VRot;
       class Minigun;
       class Muzzle_flash;
       class Minigun2;
       class Muzzle_flash2;
    };
    class Turrets: Turrets
    {
       class CopilotTurret;
       class MainTurret;
       class RightDoorGun;
    };
};

class v105_URFW_UH_88_Crow: v105_URFW_UH_88_Crow_base
{
    author = ""ENS P. Luke"";
    scope = 2;
    scopeCurator = 2;
    displayName = ""UH-88 Crow"";
    side = 0;
    faction = ""v105_URFW"";
    crew = ""B_soldier_AAR_F"";
    
    editorCategory = ""v105_URFW_EdCat"";
    editorSubcategory = ""v105_URFW_Helicopters_EdSubCat"";
    
    hiddenSelectionsTextures[] =
    {
        ""a3\air_f_exp\heli_transport_01\data\heli_transport_01_ext01_tropic_co.paa"",
        ""a3\air_f_exp\heli_transport_01\data\heli_transport_01_ext02_tropic_co.paa""
    };
    
    class AnimationSources: AnimationSources
    {
        class Door_L: Door_L
        {
            initPhase = 0;
        };
        class Door_R: Door_R
        {
            initPhase = 0;
        };
        class Holder: Holder
        {
            initPhase = 1;
        };
        class Gun_HRot: Gun_HRot
        {
            initPhase = 0;
        };
        class Gun_VRot: Gun_VRot
        {
            initPhase = 0;
        };
    };
    
    class Turrets: Turrets
    {
        class CopilotTurret: CopilotTurret
        {
            gunnerType = ""B_soldier_AAR_F"";
        };
        class MainTurret: MainTurret
        {
            gunnerType = ""B_soldier_AAR_F"";
        };
        class RightDoorGun: RightDoorGun
        {
            gunnerType = ""B_soldier_AAR_F"";
        };
    };
};

class B_APC_Wheeled_01_base_F;
class B_APC_Wheeled_01_cannon_F: B_APC_Wheeled_01_base_F
{
    class AnimationSources;
};

class v105_URFW_Honeybadger_base: B_APC_Wheeled_01_cannon_F
{
    scope = 0;
    scopeCurator = 0;
    class AnimationSources: AnimationSources
    {
       class muzzle_rot;
       class muzzle_hide;
       class revolving_cannon;
       class HideTurret;
       class HitEngine_src;
       class HitFuel_src;
       class HitHull_src;
       class HitMainGun_src;
       class HitTurret_src;
       class HitComTurret_src;
       class HitSLAT_Left_1_src;
       class HitSLAT_Left_2_src;
       class HitSLAT_Left_3_src;
       class HitSLAT_Right_1_src;
       class HitSLAT_Right_2_src;
       class HitSLAT_Right_3_src;
       class HitSLAT_back_src;
       class HitSLAT_front_src;
       class HitSLAT_top_back_src;
       class HitSLAT_top_right_src;
       class HitSLAT_top_left_src;
       class showBags;
       class showCamonetHull;
       class showCamonetCannon;
       class showCamonetTurret;
       class showSLATHull;
       class showSLATTurret;
    };
};

class v105_URFW_Honeybadger: v105_URFW_Honeybadger_base
{
    author = ""ENS P. Luke"";
    scope = 2;
    scopeCurator = 2;
    displayName = ""Honeybadger"";
    side = 0;
    faction = ""v105_URFW"";
    crew = ""B_soldier_AAR_F"";
    
    editorCategory = ""v105_URFW_EdCat"";
    editorSubcategory = ""v105_URFW_APCs_EdSubCat"";
	
    class AnimationSources: AnimationSources
    {
        class HideTurret: HideTurret
        {
            initPhase = 0;
        };
        class showBags: showBags
        {
            initPhase = 1;
        };
        class showCamonetHull: showCamonetHull
        {
            initPhase = 0;
        };
        class showCamonetCannon: showCamonetCannon
        {
            initPhase = 1;
        };
        class showCamonetTurret: showCamonetTurret
        {
            initPhase = 0;
        };
        class showSLATHull: showSLATHull
        {
            initPhase = 1;
        };
        class showSLATTurret: showSLATTurret
        {
            initPhase = 1;
        };
    };
};"
2e2nf9Fs,Lapor.php,tanmyid,PHP,Sunday 25th of February 2024 07:50:19 AM CDT,"<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Lapor extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('pelelang/Lapor_model'); // Perbaikan: menggunakan Lapor_model
        $this->load->library('form_validation');
        $this->load->helper(array('url', 'form'));
    }

    // Menampilkan data lapor
    public function index()
    {
        $data['title']  = 'Data Lapor Lelang';
        // Contoh: Menyediakan lelang_id tertentu, misalnya '1'
        $lelang_id = '1';
        $data['queryLapor'] = $this->Lapor_model->getDataLapor(); // Perbaikan: menggunakan Lapor_model
        $data['user']   = $this->db->query('select * from pelelang where nama = ""' . $_SESSION['nama'] . '""')->row();

        $this->load->view('theme_pelelang/header', $data);
        $this->load->view('pelelang/lapor/index', $data);
        $this->load->view('theme_pelelang/footer', $data);
    }

    // Menampilkan halaman tambah data lapor
    public function tambah()
    {
        $this->form_validation->set_rules('tgl_lpr', 'Tanggal Lapor', 'required');
        $this->form_validation->set_rules('lelang_id', 'ID Lelang', 'required');
        $this->form_validation->set_rules('deskripsi', 'Deskripsi', 'required');
        $this->form_validation->set_rules('nama_pelapor', 'Nama Pelapor', 'required');
        $this->form_validation->set_rules('no_hp', 'Nomor HP', 'required');
        $this->form_validation->set_rules('nama', 'Nama Pelanggar', 'required');

        if ($this->form_validation->run() == FALSE) {
            $data['title'] = 'Tambah Data Lapor';
            $data['lelang_options'] = $this->Lapor_model->getLelangOptions(); // Perbaikan: menggunakan Lapor_model
            $data['user'] = $this->db->query('select * from pelelang where nama = ""' . $_SESSION['nama'] . '""')->row();
            $data['peserta_options'] = $this->Lapor_model->getPesertaNames(); // Perbaikan: menggunakan Lapor_model
            $this->load->view('theme_pelelang/header', $data);
            $this->load->view('pelelang/lapor/tambah', $data);
            $this->load->view('theme_pelelang/footer', $data);
        } else {
            $data = array(
                'tgl_lpr' => $this->input->post('tgl_lpr'),
                'lelang_id' => $this->input->post('lelang_id'),
                'deskripsi' => $this->input->post(""deskripsi""),
                'nama_pelapor' => $this->input->post(""nama_pelapor""),
                'no_hp' => $this->input->post('no_hp'),
                'nama' => $this->input->post('nama'),
                'status' => 0
            );

            $this->Lapor_model->tambah($data); // Perbaikan: menggunakan Lapor_model
            redirect('pelelang/lapor/index');
        }
    }
    // Menampilkan halaman edit
    // Menampilkan halaman edit
    public function edit($id)
    {
        // Pastikan $id diteruskan sebagai argumen ke metode edit

        $this->form_validation->set_rules('tgl_lpr', 'Tanggal Lapor', 'required');
        $this->form_validation->set_rules('lelang_id', 'ID Lelang', 'required');
        $this->form_validation->set_rules('deskripsi', 'Deskripsi', 'required');
        $this->form_validation->set_rules('nama_pelapor', 'Nama Pelapor', 'required');
        $this->form_validation->set_rules('no_hp', 'Nomor HP', 'required');
        $this->form_validation->set_rules('nama_pelanggar', 'Nama Pelanggar', 'required');

        if ($this->form_validation->run() == FALSE) {
            $data['title']  = 'Edit Data Lapor';
            $data['data']   = $this->Lapor_model->getDataDetail($id); // Perbaikan: menggunakan Lapor_model
            $data['user']   = $this->db->query('select * from pelelang where nama = ""' . $_SESSION['nama'] . '""')->row();
            $data['lelang_options'] = $this->Lapor_model->getLelangOptions(); // Perbaikan: menggunakan Lapor_model
            $data['peserta_options'] = $this->Lapor_model->getPesertaNames(); // Perbaikan: menggunakan Lapor_model

            $this->load->view('theme_pelelang/header', $data);
            $this->load->view('pelelang/lapor/edit', $data);
            $this->load->view('theme_pelelang/footer', $data);
        } else {
            $data = array(
                'tgl_lpr' => $this->input->post('tgl_lpr'),
                'lelang_id' => $this->input->post('lelang_id'),
                'deskripsi' => $this->input->post('deskripsi'),
                'nama_pelapor' => $this->input->post('nama_pelapor'),
                'no_hp' => $this->input->post('no_hp'),
                'nama_pelanggar' => $this->input->post('nama_pelanggar'),
                'status' => 0
            );

            $this->Lapor_model->updateDataLapor($id, $data); // Perbaikan: menggunakan Lapor_model
            redirect('pelelang/lapor/index');
        }
    }

    // Mengonfirmasi status lapor
    public function konfirmasiSudahVerifikasi($id_lapor, $pesan)
    {
        $this->Lapor_model->konfirmasiLapor($id_lapor, $pesan); // Perbaikan: menggunakan Lapor_model
        if ($pesan == 1) {
            redirect('pelelang/lapor/index');
        } else {
            redirect('pelelang/dashboard');
        }
    }

    // Menghapus data lapor
    public function deleteLapor($id)
    {
        $this->Lapor_model->deleteDataLapor($id); // Perbaikan: menggunakan Lapor_model
        redirect(base_url('pelelang/lapor/index'));
    }
}
"
yhthkF8N,ClaudiusOne,claudiusmarius,C++,Sunday 25th of February 2024 07:14:40 AM CDT,"#include <DFRobot_DF1201S.h>
#include <SoftwareSerial.h>
SoftwareSerial DF1201SSerial(2, 3);  //RX  TX
DFRobot_DF1201S DF1201S;

void setup(void){
    Serial.begin(115200);
  DF1201SSerial.begin(115200);
  while(!DF1201S.begin(DF1201SSerial)){
    Serial.println(""Init failed, please check the wire connection!"");
  delay(1000);
  }
  DF1201S.setVol(5);                         // Range 0 - 30
    //Serial.print(""VOL:"");
    //Serial.println(DF1201S.getVol());
  
  DF1201S.switchFunction(DF1201S.MUSIC);
  delay(2000);
 
  DF1201S.setPlayMode(DF1201S.SINGLE);         // Sets PlayMode
    Serial.print(""PlayMode:"");
    Serial.println(DF1201S.getPlayMode());
  DF1201S.setPrompt(false);                    // Silences Voice Prompt At Startup
  
  
  
}

void loop()
{
  
  DF1201S.playSpecFile(""/tow/for.mp3"");                  //Contines 
  delay(2000);
  DF1201S.playSpecFile(""/one/dos.mp3"");                   // Chants d'oiseaux      
  delay(5000);

 
}
  "
DdgZFrjq,Untitled,claudiusmarius,C++,Sunday 25th of February 2024 07:10:54 AM CDT,"#include <DFRobot_DF1201S.h>
#include <SoftwareSerial.h>
SoftwareSerial DF1201SSerial(2, 3);  //RX  TX
DFRobot_DF1201S DF1201S;

void setup(void){
    Serial.begin(115200);
  DF1201SSerial.begin(115200);
  while(!DF1201S.begin(DF1201SSerial)){
    Serial.println(""Init failed, please check the wire connection!"");
  delay(1000);
  }
  DF1201S.setVol(5);                         // Range 0 - 30
    //Serial.print(""VOL:"");
    //Serial.println(DF1201S.getVol());
  
  DF1201S.switchFunction(DF1201S.MUSIC);
  delay(2000);
 
  DF1201S.setPlayMode(DF1201S.SINGLE);         // Sets PlayMode
    Serial.print(""PlayMode:"");
    Serial.println(DF1201S.getPlayMode());
  DF1201S.setPrompt(false);                    // Silences Voice Prompt At Startup
  
  
  
}

void loop()
{
  
  DF1201S.playSpecFile(""/tow/for.mp3"");                  //Contines 
  delay(2000);
  DF1201S.playSpecFile(""/one/dos.mp3"");                   // Chants d'oiseaux      
  delay(5000);

 
}"
JtPT55s5,DFPlayerPROTestDFT01,claudiusmarius,C++,Sunday 25th of February 2024 06:57:05 AM CDT,"#include <DFRobot_DF1201S.h>
#include <SoftwareSerial.h>
SoftwareSerial DF1201SSerial(2, 3);  //RX  TX
DFRobot_DF1201S DF1201S;

void setup(void){
    Serial.begin(115200);
  DF1201SSerial.begin(115200);
  while(!DF1201S.begin(DF1201SSerial)){
    Serial.println(""Init failed, please check the wire connection!"");
  delay(1000);
  }
  DF1201S.setVol(5);                         // Range 0 - 30
    //Serial.print(""VOL:"");
    //Serial.println(DF1201S.getVol());
  
  DF1201S.switchFunction(DF1201S.MUSIC);
  delay(2000);
 
  DF1201S.setPlayMode(DF1201S.SINGLE);         // Sets PlayMode
    Serial.print(""PlayMode:"");
    Serial.println(DF1201S.getPlayMode());
  DF1201S.setPrompt(false);                    // Silences Voice Prompt At Startup
  
  
  
}

void loop()
{
  
  DF1201S.playSpecFile(""/tow/for.mp3"");                  //Contines 
  delay(2000);
  DF1201S.playSpecFile(""F/one/dos.mp3"");                   // Chants d'oiseaux      
  delay(5000);

 
}
  "
gu6wynad,Untitled,sissou123,Python,Sunday 25th of February 2024 06:31:20 AM CDT,"Python 3: Fundamentals
Learn Python the right way! 
What you'll learn
Learn Python fundamentals
Basic to advanced data types
Functional and Object Oriented programming
Closures and decorators
Datetime and timezone handling 
for more:https://cuty.io/A862s8aI0p4
"
YTkee22p,api logging,chemelli74,Python,Sunday 25th of February 2024 06:30:17 AM CDT,"""""""Support for Comelit SimpleHome.""""""

import asyncio
import functools
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP_BETWEEN_BRIDGE_CALLS,
    SLEEP_BETWEEN_VEDO_CALLS,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
            ""Connection"": ""keep-alive"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during GET"") from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""GET response status {response.status}"")

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status, {}

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during POST"") from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""POST response status {response.status}"")

        return response.cookies

    async def _is_session_active(self) -> bool:
        """"""Check if aiohttp session is still active.""""""
        if not hasattr(self, ""_session"") or self._session.closed:
            return False

        return True

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    async def _sleep_between_call(self, seconds: float) -> None:
        """"""Sleep between one call and the next one.""""""
        _LOGGER.debug(""Sleeping for %s seconds before next call"", seconds)
        await asyncio.sleep(seconds)

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not await self._is_session_active():
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        return await self._check_logged_in(host_type)

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        if await self._is_session_active():
            payload = {""logout"": 1}
            await self._post_page_result(""/login.cgi"", payload)
            self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if await self._is_session_active():
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}
        self._last_clima_command: datetime | None = None
        self._semaphore = asyncio.Semaphore()

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def _set_thermo_humi_status(
        self, index: int, mode: str, action: str, value: float = 0
    ) -> bool:
        """"""Set clima or humidity status.
        action:
            auto, man, on, off, set

        """"""
        await self._semaphore.acquire()
        if self._last_clima_command:
            delta_seconds = SLEEP_BETWEEN_BRIDGE_CALLS - round(
                (datetime.now() - self._last_clima_command).total_seconds(), 2
            )
            if delta_seconds > 0:
                _LOGGER.debug(
                    ""Climate calls needs to be queued (%ss) for proper execution"",
                    delta_seconds,
                )
                await self._sleep_between_call(delta_seconds)

        url = f""/user/action.cgi?clima={index}&{mode}={action}&val={int(value*10)}""
        _LOGGER.debug(""Clima status URL call: %s"", url)
        reply_status = await self._get_page_result(url, False)
        self._last_clima_command = datetime.now()
        self._semaphore.release()
        return reply_status == 200

    async def set_clima_status(self, index: int, action: str, temp: float = 0) -> bool:
        """"""Set clima status.""""""
        return await self._set_thermo_humi_status(index, ""thermo"", action, temp)

    async def set_humidity_status(
        self, index: int, action: str, humidity: float = 0
    ) -> bool:
        """"""Set humidity status.""""""
        return await self._set_thermo_humi_status(index, ""humi"", action, humidity)

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=(
                        reply_json[""env_desc""][reply_json[""env""][i]]
                        if not dev_type == SCENARIO
                        else """"
                    ),
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    _json_data: list[dict[Any, Any]] = [{}, {}, {}, {}, {}]

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def _async_get_page_data(
        self, desc: str, page: str, present_check: str | int | None = None
    ) -> tuple[bool, dict[str, Any]]:
        """"""Return status and data from a specific GET query.""""""
        reply_status, reply_json = await self._get_page_result(page)
        _LOGGER.debug(""Alarm %s: %s"", desc, reply_json)
        present = present_check in reply_json[""present""] if ""_desc"" in page else True
        return (reply_json[""logged""] and present), reply_json

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""

        reply_status, reply_json_area_stat = await self._async_get_page_data(
            ""AREA statistics"", ""/user/area_stat.json""
        )
        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries: dict[int, dict[str, Any]] = {
            1: {
                ""desc"": ""AREA description"",
                ""page"": ""/user/area_desc.json"",
                ""present"": 1,
            },
            2: {
                ""desc"": ""ZONE description"",
                ""page"": ""/user/zone_desc.json"",
                ""present"": ""1"",
            },
            3: {
                ""desc"": ""AREA statistics"",
                ""page"": ""/user/area_stat.json"",
                ""present"": None,
            },
            4: {
                ""desc"": ""ZONE statistics"",
                ""page"": ""/user/zone_stat.json"",
                ""present"": None,
            },
        }

        for index, info in queries.items():
            desc = info[""desc""]
            page = info[""page""]
            present = info[""present""]
            if ""_desc"" in page and self._json_data[index]:
                _LOGGER.debug(""Data for %s already retrieved, skipping"", desc)
                continue
            await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
            reply_status, reply_json = await self._async_get_page_data(
                desc, page, present
            )
            if not reply_status:
                _LOGGER.info(""Login expired accessing %s, re-login attempt"", desc)
                await self.login()
                await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
                reply_status, reply_json = await self._async_get_page_data(
                    desc, page, present
                )
                if not reply_status:
                    raise CannotRetrieveData(
                        ""Login expired and not working after a retry""
                    )
                _LOGGER.info(""Re-login successful"")
            self._json_data.insert(index, reply_json)

        list_areas: list[int] = self._json_data[1][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                self._json_data[1], self._json_data[3], i
            )
            areas.update({i: area})

        list_zones: list[int] = self._json_data[2][""present""]
        zones = {}
        for i in range(len(list_zones)):
            if not int(list_zones[i]):
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                self._json_data[2], self._json_data[4], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
d4bfJ7rM,fix comelit on,chemelli74,Python,Sunday 25th of February 2024 06:22:14 AM CDT,"""""""Support for humidifiers.""""""
from __future__ import annotations

from enum import StrEnum
from typing import Any

from aiocomelit import ComelitSerialBridgeObject
from aiocomelit.const import CLIMATE

from homeassistant.components.humidifier import (
    MODE_AUTO,
    MODE_NORMAL,
    HumidifierAction,
    HumidifierDeviceClass,
    HumidifierEntity,
    HumidifierEntityFeature,
)
from homeassistant.config_entries import ConfigEntry
from homeassistant.core import HomeAssistant
from homeassistant.helpers.entity_platform import AddEntitiesCallback
from homeassistant.helpers.update_coordinator import CoordinatorEntity

from .const import DOMAIN
from .coordinator import ComelitSerialBridge


class HumidifierComelitMode(StrEnum):
    """"""Serial Bridge humidifier modes.""""""

    AUTO = ""A""
    OFF = ""O""
    LOWER = ""L""
    UPPER = ""U""


class HumidifierComelitAction(StrEnum):
    """"""Serial Bridge humidifier actions.""""""

    OFF = ""off""
    ON = ""on""
    MANUAL = ""man""
    SET = ""set""
    AUTO = ""auto""
    LOWER = ""lower""
    UPPER = ""upper""


MODE_TO_ACTION: dict[str, HumidifierComelitAction] = {
    MODE_AUTO: HumidifierComelitAction.AUTO,
    MODE_NORMAL: HumidifierComelitAction.MANUAL,
}


async def async_setup_entry(
    hass: HomeAssistant,
    config_entry: ConfigEntry,
    async_add_entities: AddEntitiesCallback,
) -> None:
    """"""Set up Comelit humidifiers.""""""

    coordinator: ComelitSerialBridge = hass.data[DOMAIN][config_entry.entry_id]

    entities: list[ComelitHumidifierEntity] = []
    for device_class in (
        HumidifierDeviceClass.HUMIDIFIER,
        HumidifierDeviceClass.DEHUMIDIFIER,
    ):
        entities.extend(
            ComelitHumidifierEntity(
                coordinator, device, config_entry.entry_id, device_class.value
            )
            for device in coordinator.data[CLIMATE].values()
        )

    async_add_entities(entities)


class ComelitHumidifierEntity(CoordinatorEntity[ComelitSerialBridge], HumidifierEntity):
    """"""Humidifier device.""""""

    _attr_supported_features = HumidifierEntityFeature.MODES
    _attr_available_modes = [MODE_NORMAL, MODE_AUTO]
    _attr_min_humidity = 10
    _attr_max_humidity = 90
    _attr_has_entity_name = True

    def __init__(
        self,
        coordinator: ComelitSerialBridge,
        device: ComelitSerialBridgeObject,
        config_entry_entry_id: str,
        device_class: str,
    ) -> None:
        """"""Init light entity.""""""
        self._api = coordinator.api
        self._device = device
        super().__init__(coordinator)
        # Use config_entry.entry_id as base for unique_id
        # because no serial number or mac is available
        self._attr_unique_id = f""{config_entry_entry_id}-{device.index}-{device_class}""
        self._attr_name = f""{device_class.capitalize()}""
        self._attr_device_info = coordinator.platform_device_info(device, device_class)
        self._attr_device_class = (
            HumidifierDeviceClass.DEHUMIDIFIER
            if device_class == HumidifierDeviceClass.DEHUMIDIFIER.value
            else HumidifierDeviceClass.HUMIDIFIER
        )

    @property
    def _humidifier(self) -> list[Any]:
        """"""Return humidifier device data.""""""
        # CLIMATE has a 2 item tuple:
        # - first  for Clima
        # - second for Humidifier
        return self.coordinator.data[CLIMATE][self._device.index].val[1]

    @property
    def _api_mode(self) -> str:
        """"""Return device mode.""""""
        # Values from API: ""O"", ""L"", ""U""
        return self._humidifier[2]

    @property
    def _api_active(self) -> bool:
        ""Return device active/idle.""
        return self._humidifier[1]

    @property
    def _api_automatic(self) -> bool:
        """"""Return device in automatic/manual mode.""""""
        return self._humidifier[3] == HumidifierComelitMode.AUTO

    @property
    def _is_dehumidifier(self) -> bool:
        """"""Return true if device is set as dehumidifier.""""""
        return (
            self._api_mode == HumidifierComelitMode.LOWER
            and self._attr_device_class == HumidifierDeviceClass.DEHUMIDIFIER
        )

    @property
    def _is_humidifier(self) -> bool:
        """"""Return true if device is set as humidifier.""""""
        return (
            self._api_mode == HumidifierComelitMode.UPPER
            and self._attr_device_class == HumidifierDeviceClass.HUMIDIFIER
        )

    @property
    def target_humidity(self) -> int:
        """"""Set target humidity.""""""
        return self._humidifier[4] / 10

    @property
    def current_humidity(self) -> int:
        """"""Return current humidity.""""""
        return self._humidifier[0] / 10

    @property
    def is_on(self) -> bool | None:
        """"""Return true is humidifier is on.""""""
        return self._is_dehumidifier or self._is_humidifier

    @property
    def mode(self) -> str | None:
        """"""Return current mode.""""""
        return MODE_AUTO if self._api_automatic else MODE_NORMAL

    @property
    def action(self) -> HumidifierAction | None:
        """"""Return current action.""""""

        if self._api_mode == HumidifierComelitMode.OFF:
            return HumidifierAction.OFF

        if self._api_active and self._is_dehumidifier:
            return HumidifierAction.DRYING

        if self._api_active and self._is_humidifier:
            return HumidifierAction.HUMIDIFYING

        return HumidifierAction.IDLE

    async def async_set_humidity(self, humidity: int) -> None:
        """"""Set new target humidity.""""""
        if self.mode == HumidifierComelitMode.OFF:
            return

        await self.coordinator.api.set_humidity_status(
            self._device.index, HumidifierComelitAction.MANUAL
        )
        await self.coordinator.api.set_humidity_status(
            self._device.index, HumidifierComelitAction.SET, humidity
        )

    async def async_set_mode(self, mode: str) -> None:
        """"""Set humidifier mode.""""""
        await self.coordinator.api.set_humidity_status(
            self._device.index, MODE_TO_ACTION[mode]
        )

    async def async_turn_on(self, **kwargs: Any) -> None:
        """"""Turn on.""""""
        await self.coordinator.api.set_humidity_status(
            self._device.index, HumidifierComelitAction.ON
        )
        mode = (
            HumidifierComelitAction.LOWER
            if self._is_dehumidifier
            else HumidifierComelitAction.UPPER
        )
        await self.coordinator.api.set_humidity_status(self._device.index, mode)

    async def async_turn_off(self, **kwargs: Any) -> None:
        """"""Turn off.""""""
        await self.coordinator.api.set_humidity_status(
            self._device.index, HumidifierComelitAction.OFF
        )
"
paMfnHb6,Euro Truck Simulator 2 music info display,yclee126,Python,Sunday 25th of February 2024 06:12:03 AM CDT,"# ETS2 music player info display program
# Requires psutil and music-tag external library
# Tested on Windows 11 x64, Python 3.9.9, psutil==5.9.8, music-tag==0.4.3

# Code by yclee126


import psutil
import os
import time
import music_tag
from pathlib import Path


# symlink reader
# https://github.com/python/cpython/blob/master/Tools/scripts/lll.py
def lll(dirname, sym_dirs):
    for name in os.listdir(dirname):
        if name not in (os.curdir, os.pardir):
            full = os.path.join(dirname, name)
            if os.path.isdir(full) and not os.path.islink(full):
                lll(full, sym_dirs)
            elif os.path.islink(full):
                symlink_dest = os.readlink(full)
                # remove \\?\ prefix in Windows
                if symlink_dest[:4] == '\\\\?\\':
                    symlink_dest = symlink_dest[4:]
                sym_dirs.append(symlink_dest)

def get_pid_by_name(process_name):
    for process in psutil.process_iter(['pid', 'name']):
        if process.info['name'] == process_name:
            return process.info['pid']
    return None

if __name__ == '__main__':
    # get all music directories including shallow symlinks
    music_path = os.path.expanduser('~/Documents/Euro Truck Simulator 2/music')
    music_path = os.path.normpath(music_path) # normalize between / or \
    
    music_paths = [music_path]
    lll(music_path, music_paths)

    print('Music dirs:', music_paths)

    # get eurotruck process
    process_name = ""eurotrucks2.exe""
    pid = get_pid_by_name(process_name)
    if pid is None:
        print('Process not found')
        exit()

    # monitor eurotruck process
    try:
        process = psutil.Process(pid)
        print(f""The PID of the process '{process_name}' is: {pid}"")

        prev_file_path = None
        while True:
            new_file_path = None

            # monitor opened files
            files = process.open_files()
            for file in files:
                for music_path in music_paths:
                    if music_path in file.path:
                        if file.path != prev_file_path:
                            new_file_path = file.path
                            prev_file_path = file.path
                        break
            
            # print music info
            if new_file_path is not None:
                tag = music_tag.load_file(new_file_path)
                length = int(tag['#length'])
                minutes = int(length / 60)
                seconds = int(length % 60)
                
                print((f""\n\n\n\n\n\n""
                       f""Title : {tag['title']}\n""
                       f""Artist: {tag['artist']}\n""
                       f""Album : {tag['album']}\n""
                       f""Length: {minutes:02d}:{seconds:02d}\n""
                       f""------:\n""
                       f""File  : {Path(new_file_path).name}\n""))
            
            time.sleep(1)

    except psutil.NoSuchProcess:
        print('Process terminated')
        exit()

    except:
        raise"
crychSdq,my script,Raad2002,PowerShell,Sunday 25th of February 2024 06:11:34 AM CDT,"# $ErrorActionPreference = 'SilentlyContinue'
# $wshell = New-Object -ComObject Wscript.Shell
# $Button = [System.Windows.MessageBoxButton]::YesNoCancel
# $ErrorIco = [System.Windows.MessageBoxImage]::Error
# If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator')) {
# 	Start-Process powershell.exe ""-NoProfile -ExecutionPolicy Bypass -File `""$PSCommandPath`"""" -Verb RunAs
# 	Exit
# }



If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator')) {
    $Prompt = [System.Windows.MessageBox]::Show($Ask, ""Run as an Administrator or not?"", $Button, $ErrorIco) 
    Switch ($Prompt) {
        #This will debloat Windows 10
        Yes {
            Write-Host ""You didn't run this script as an Administrator. This script will self elevate to run as an Administrator and continue.""
            Start-Process PowerShell.exe -ArgumentList (""-NoProfile -ExecutionPolicy Bypass -File `""{0}`"""" -f $PSCommandPath) -Verb RunAs
            Exit
        }
        No {
            Break
        }
    }
}

Write-Host ""Checking Chocolatey...""


# Check if winget is installed
if (Test-Path C:\ProgramData\chocolatey\choco.exe){
    'Chocolatey Already Installed'
}  
else{
    # Installing winget from the Microsoft Store
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
}

[void][System.Reflection.Assembly]::LoadWithPartialName('presentationframework')

# Place xaml code from visual studio in here string (in the blank line between @ symbols)
$input = @’
<Window x:Name=""my_app"" x:Class=""WpfApp1.MainWindow""
        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""
        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""
        xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""
        xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""
        xmlns:local=""clr-namespace:WpfApp1""
        mc:Ignorable=""d""
        Title=""My App and windows optimiser"" Height=""650"" Width=""560"" WindowStartupLocation=""CenterScreen"" ResizeMode=""NoResize"">
    <TabControl Background=""#FF2B00FF"">
        <TabItem Header=""App instaler"">
            <Grid Background=""#FF252525"">
                <Grid.RowDefinitions>
                    <RowDefinition Height=""160*""/>
                    <RowDefinition Height=""127*""/>
                </Grid.RowDefinitions>
                <Label Content=""Mead by raad"" HorizontalAlignment=""Center"" Margin=""0,10,0,0"" VerticalAlignment=""Top"" Background=""Transparent"" FontFamily=""Bahnschrift Condensed"" FontSize=""18"" Foreground=""Red"" Height=""32"" Width=""90""/>
                <Label Content=""Chose app when you need to Install/Unistall"" HorizontalAlignment=""Left"" Margin=""75,26,0,0"" VerticalAlignment=""Top"" FontSize=""16"" FontFamily=""Segoe Print"" Background=""Transparent"" Foreground=""#FFE8D977"" Height=""38"" Width=""368""/>
                <CheckBox x:Name=""Chrome_CheckBox"" Content=""Chrome"" HorizontalAlignment=""Left"" Margin=""25,78,0,0"" VerticalAlignment=""Top"" Foreground=""White"" IsChecked=""False"" FontSize=""14"" RenderTransformOrigin=""1.041,0.566"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""Fierfox_CheckBox"" Content=""Fierfox"" HorizontalAlignment=""Left"" Margin=""25,101,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""Breave_CheckBox"" Content=""Breave"" HorizontalAlignment=""Left"" Margin=""25,124,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""Discord_CheckBox"" Content=""Discord"" HorizontalAlignment=""Left"" Margin=""25,147,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""ONLYOFFICE_CheckBox"" Content=""ONLYOFFICE"" HorizontalAlignment=""Left"" Margin=""25,170,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" RenderTransformOrigin=""0.757,0.431"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""Everything_CheckBox"" Content=""Everything"" HorizontalAlignment=""Left"" Margin=""25,193,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""powershell_CheckBox"" Content=""Powershell"" HorizontalAlignment=""Left"" Margin=""25,216,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""Visual_Studio_Community22_CheckBox"" Content=""Visual Studio Com22"" HorizontalAlignment=""Left"" Margin=""25,262,0,0"" VerticalAlignment=""Top"" Foreground=""White"" Height=""18"" Width=""132"" RenderTransformOrigin=""0.573,0.978""/>
                <CheckBox x:Name=""Visual_Studio_Code_CheckBox"" Content=""Visual Studio Code"" HorizontalAlignment=""Left"" Margin=""25,239,0,0"" VerticalAlignment=""Top"" Foreground=""White"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""Steam_CheckBox"" Content=""Steam"" HorizontalAlignment=""Left"" Margin=""25,285,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""132""/>
                <CheckBox x:Name=""DS4Windows_CheckBox"" Content=""DS4Windows"" HorizontalAlignment=""Left"" Margin=""162,80,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""NET_4_8_CheckBox"" Content="".NET 4.8"" HorizontalAlignment=""Left"" Margin=""295,80,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""libreoffice_CheckBox"" Content=""libreoffice"" HorizontalAlignment=""Left"" Margin=""407,80,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" RenderTransformOrigin=""1.171,-0.547"" Height=""18"" Width=""127""/>
                <CheckBox x:Name=""NanaZip_CheckBox"" Content=""NanaZip"" HorizontalAlignment=""Left"" Margin=""162,103,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""WinRAR_CheckBox"" Content=""WinRAR"" HorizontalAlignment=""Left"" Margin=""162,126,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""NET_5_0_CheckBox"" Content="".NET 5.0"" HorizontalAlignment=""Left"" Margin=""295,103,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""Revo_Uninstaller_CheckBox"" Content=""Revo Uninstaller"" HorizontalAlignment=""Left"" Margin=""407,103,0,0"" VerticalAlignment=""Top"" Foreground=""White"" Height=""18"" Width=""127""/>
                <CheckBox x:Name=""NET_6_0_CheckBox"" Content="".NET 6.0"" HorizontalAlignment=""Left"" Margin=""295,126,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""Geek_Uninstaller_CheckBox"" Content=""Geek Uninstaller"" HorizontalAlignment=""Left"" Margin=""407,126,0,0"" VerticalAlignment=""Top"" Foreground=""White"" RenderTransformOrigin=""1.395,1.672"" Height=""18"" Width=""127""/>
                <CheckBox x:Name=""Epic_Games_Launcher_CheckBox"" Content=""Epic Games "" HorizontalAlignment=""Left"" Margin=""162,149,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""PDF_XChange_Viewer_CheckBox"" Content=""PDFXChange Viewer"" HorizontalAlignment=""Left"" Margin=""162,172,0,0"" VerticalAlignment=""Top"" Foreground=""White"" Height=""18"" Width=""130""/>
                <CheckBox x:Name=""PDF24_CreatorCheckBox"" Content=""PDF24 Creator"" HorizontalAlignment=""Left"" Margin=""162,195,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""PDF_XChange_Editor_CheckBox"" Content=""PDF-XChange Editor"" HorizontalAlignment=""Left"" Margin=""162,218,0,0"" VerticalAlignment=""Top"" Foreground=""White"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""VLC_media_player_CheckBox"" Content=""VLC media player"" HorizontalAlignment=""Left"" Margin=""162,241,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""Sublime_Text_2_CheckBox"" Content=""Sublime Text 2"" HorizontalAlignment=""Left"" Margin=""162,287,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" RenderTransformOrigin=""0.158,1.726"" Height=""18"" Width=""128""/>
                <CheckBox x:Name=""NET_7_0_CheckBox"" Content="".NET 7.0"" HorizontalAlignment=""Left"" Margin=""295,149,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""NET_8_0_CheckBox"" Content="".NET 8.0"" HorizontalAlignment=""Left"" Margin=""295,172,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""VisualC22_CheckBox"" Content=""Visual C++22"" HorizontalAlignment=""Left"" Margin=""295,195,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""Visual_C_15_CheckBox"" Content=""Visual C++15"" HorizontalAlignment=""Left"" Margin=""295,218,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""Python_3_6_CheckBox"" Content=""Python 3.6"" HorizontalAlignment=""Left"" Margin=""295,241,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""FileZilla_CheckBox"" Content=""FileZilla"" HorizontalAlignment=""Left"" Margin=""295,264,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""Google_Drive_CheckBox"" Content=""Google Drive"" HorizontalAlignment=""Left"" Margin=""295,287,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""107""/>
                <CheckBox x:Name=""Adobe_Acrobat_Reader_CheckBox"" Content=""Adobe Reader"" HorizontalAlignment=""Left"" Margin=""407,149,0,0"" VerticalAlignment=""Top"" Foreground=""White"" Height=""18"" Width=""127""/>
                <CheckBox x:Name=""rockstar_CheckBox"" Content=""rockstar luncher"" HorizontalAlignment=""Left"" Margin=""407,172,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""127""/>
                <CheckBox x:Name=""AutoHotkey_CheckBox"" Content=""AutoHotkey"" HorizontalAlignment=""Left"" Margin=""407,195,0,0"" VerticalAlignment=""Top"" Foreground=""White"" Height=""18"" Width=""137"" FontSize=""14""/>
                <CheckBox x:Name=""AnyDesk_CheckBox"" Content=""AnyDesk"" HorizontalAlignment=""Left"" Margin=""407,218,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""127"" RenderTransformOrigin=""0.504,1.044""/>
                <CheckBox x:Name=""OBS_Studio_CheckBox"" Content=""OBS Studio"" Margin=""407,241,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18""/>
                <CheckBox x:Name=""VirtualBox_CheckBox"" Content=""VirtualBox"" HorizontalAlignment=""Left"" Margin=""407,264,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""12"" Height=""18"" Width=""137""/>
                <CheckBox x:Name=""Rufus_CheckBox"" Content=""Rufus"" HorizontalAlignment=""Left"" Margin=""407,287,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""127""/>
                <CheckBox x:Name=""Paint_NET_CheckBox"" Content=""Paint.NET"" HorizontalAlignment=""Left"" Margin=""162,264,0,0"" VerticalAlignment=""Top"" Foreground=""White"" FontSize=""14"" Height=""18"" Width=""128""/>
                <TextBox x:Name=""TextBox1"" HorizontalAlignment=""Center"" Height=""121"" Margin=""0,45,0,0"" TextWrapping=""Wrap"" VerticalAlignment=""Top"" Width=""370"" Grid.Row=""1""/>
                <Button x:Name=""Uninstall_Btn"" Content=""Uninstall"" HorizontalAlignment=""Left"" Margin=""260,186,0,0"" VerticalAlignment=""Top"" Height=""40"" Width=""172"" Foreground=""White"" Background=""#FFEA3E3E"" FontFamily=""Segoe UI Black"" FontSize=""20"" FontWeight=""Bold"" Grid.Row=""1""/>
                <Button x:Name=""Install_Btn"" Content=""Install"" HorizontalAlignment=""Left"" Margin=""62,186,0,0"" VerticalAlignment=""Top"" Height=""40"" Width=""172""  FontSize=""22"" FontFamily=""Segoe UI Black"" Background=""#FF3B2BFF"" Foreground=""#FFFFEA00"" Grid.Row=""1""/>
            </Grid>
        </TabItem>
        <TabItem Header=""window optimisation"">
            <TabItem.Background>
                <LinearGradientBrush EndPoint=""0,1"">
                    <GradientStop Color=""#FFF0F0F0""/>
                    <GradientStop Color=""White"" Offset=""1""/>
                </LinearGradientBrush>
            </TabItem.Background>
            <Grid Background=""#FF252525"">
                <Label Content=""Mead by raad"" HorizontalAlignment=""Center"" Margin=""0,10,0,0"" VerticalAlignment=""Top"" Background=""Transparent"" FontFamily=""Bahnschrift Condensed"" FontSize=""18"" Foreground=""Red"" Height=""32"" Width=""90""/>
                <Label Content=""Chose service when you need to Stop or Unistall"" HorizontalAlignment=""Left"" Margin=""75,26,0,0"" VerticalAlignment=""Top"" FontSize=""16"" FontFamily=""Segoe Print"" Background=""Transparent"" Foreground=""#FFE8D977"" Height=""38"" Width=""368""/>
                <Label Content=""Dark Theme"" HorizontalAlignment=""Left"" Margin=""208,346,0,0"" VerticalAlignment=""Top"" FontSize=""16"" FontFamily=""Segoe Print"" Background=""Transparent"" Foreground=""#FFE8D977"" Height=""38"" Width=""114"" RenderTransformOrigin=""0.868,0.528""/>
                <Button x:Name=""remouveblot"" Content=""Remove all bloatware"" HorizontalAlignment=""Left"" Margin=""20,102,0,0"" VerticalAlignment=""Top"" Height=""32"" Width=""230"" FontSize=""14"" FontFamily=""Arial Black"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <Button x:Name=""blot_reg_key"" Content=""Remorve bloatware regkey"" HorizontalAlignment=""Left"" Height=""32"" Margin=""272,102,0,0"" VerticalAlignment=""Top"" Width=""230"" FontFamily=""Arial Black"" FontSize=""14"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <Button x:Name=""revert_reg_chang"" Content=""Revert registry changes"" HorizontalAlignment=""Left"" Margin=""20,174,0,0"" VerticalAlignment=""Top"" Height=""32"" Width=""230"" FontSize=""14"" FontFamily=""Arial Black"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <Button x:Name=""telemetry"" Content=""Disable Telemetry / Tasks"" HorizontalAlignment=""Left"" Height=""32"" Margin=""272,174,0,0"" VerticalAlignment=""Top"" Width=""230"" FontFamily=""Arial Black"" FontSize=""14"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <Button x:Name=""dark_enable"" Content=""Enable"" HorizontalAlignment=""Left"" Margin=""20,389,0,0"" VerticalAlignment=""Top"" Height=""32"" Width=""230"" FontSize=""14"" FontFamily=""Arial Black"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <Button x:Name=""dark_disable"" Content=""Disable"" HorizontalAlignment=""Left"" Height=""32"" Margin=""272,389,0,0"" VerticalAlignment=""Top"" Width=""230"" FontFamily=""Arial Black"" FontSize=""14"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <Button x:Name=""onedreive"" Content=""Remorve One Drive"" HorizontalAlignment=""Left"" Height=""32"" Margin=""272,243,0,0"" VerticalAlignment=""Top"" Width=""230"" FontFamily=""Arial Black"" FontSize=""14"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <Button x:Name=""disable_services"" Content=""Disable services"" HorizontalAlignment=""Left"" Margin=""20,243,0,0"" VerticalAlignment=""Top"" Height=""32"" Width=""230"" FontSize=""14"" FontFamily=""Arial Black"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
                <TextBox x:Name=""TextBox2"" HorizontalAlignment=""Center"" Height=""113"" Margin=""0,436,0,0"" TextWrapping=""Wrap""  VerticalAlignment=""Top"" Width=""358"" Background=""#FFB7B7B7""/>
                <Button x:Name=""spotify_Install"" Content=""Install Spotify"" HorizontalAlignment=""Left"" Height=""32"" Margin=""144,309,0,0"" VerticalAlignment=""Top"" Width=""230"" FontFamily=""Arial Black"" FontSize=""14"" Background=""{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"" BorderBrush=""White"" BorderThickness=""3,3,3,3"" Foreground=""#FFE0D23E""/>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
'@

$input = $input -replace '^<Window.*', '<Window' -replace 'mc:Ignorable=""d""','' -replace ""x:N"",'N' 
[xml]$xaml = $input
$xmlreader=(New-Object System.Xml.XmlNodeReader $xaml)
$xamlForm=[Windows.Markup.XamlReader]::Load( $xmlreader )

$TextBox = $xamlForm.FindName(""TextBox1"")
$TextBox2 = $xamlForm.FindName(""TextBox2"")

$xaml.SelectNodes(""//*[@Name]"") | ForEach-Object -Process {
    Set-Variable -Name ($_.Name) -Value $xamlForm.FindName($_.Name)
    }

# code to run before button click event
#-----------------------------------
$Install_Btn.Add_Click({

    if ($Chrome_CheckBox.IsChecked) {
        $command = ""choco install googlechrome --version 122.0.6261.39 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Chrome terminee."" + ""`r`n""
    }
    if ($Fierfox_CheckBox.IsChecked) {
        $command = ""choco install firefox --version 122.0.1 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Firefox terminee."" + ""`r`n""
    }
    if ($Breave_CheckBox.IsChecked) {
        $command = ""choco install brave --version 1.62.165 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Brave terminee."" + ""`r`n""
    }
    if ($Discord_CheckBox.IsChecked) {
        $command = ""choco install discord --version 1.0.9005 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Discord terminee."" + ""`r`n""
    }
    if ($ONLYOFFICE_CheckBox.IsChecked) {
        $command = ""choco install onlyoffice --version 8.0.0 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de ONLYOFFICE terminee."" + ""`r`n""
    }
    if ($Everything_CheckBox.IsChecked) {
        $command = ""choco install everything --version 1.4.11024 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Everything terminee."" + ""`r`n""
    }
    if ($powershell_CheckBox.IsChecked) {
        $command = ""choco install powershell.portable --version 7.1.3 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de PowerShell terminee."" + ""`r`n""
    }
    if ($Visual_Studio_Code_CheckBox.IsChecked) {
        $command = ""choco install vscode -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Vscode terminee."" + ""`r`n""
    }
        if ($Visual_Studio_Community22_CheckBox.IsChecked) {
        $command = ""choco install visualstudio2022community --version 117.9.0.0 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Visual Studio 2022 Community terminee."" + ""`r`n""
    }
    if ($Steam_CheckBox.IsChecked) {
        $command = ""choco install steam --version 2.10.91.91221129 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Steam terminee."" + ""`r`n""
    }
    if ($DS4Windows_CheckBox.IsChecked) {
        $command = ""choco install ds4windows --version 3.3.3 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de DS4Windows terminee."" + ""`r`n""
    }
    if ($NanaZip_CheckBox.IsChecked) {
        $command = ""choco install nanazip --version 2.0.450.0 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de NanaZip terminee."" + ""`r`n""
    }
    if ($WinRAR_CheckBox.IsChecked) {
        $command = ""choco install winrar --version 6.24 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de WinRAR terminee."" + ""`r`n""
    }
    if ($Epic_Games_Launcher_CheckBox.IsChecked) {
        $command = ""choco install epicgameslauncher --version 1.3.93 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Epic Games Launcher terminee."" + ""`r`n""
    }
    if ($PDF_XChange_Viewer_CheckBox.IsChecked) {
        $command = ""choco install pdfxchangeviewer --version 2.5.317.20161116 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de PDF-XChange Viewer terminee."" + ""`r`n""
    }
    if ($PDF24_CreatorCheckBox.IsChecked) {
        $command = ""choco install pdf24 --version 11.15.2 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de PDF24 Creator terminee."" + ""`r`n""
    }
    if ($PDF_XChange_Editor_CheckBox.IsChecked) {
        $command = ""choco install pdfxchangeeditor --version 10.2.1.385 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de PDF-XChange Editor terminee."" + ""`r`n""
    }
    if ($VLC_media_player_CheckBox.IsChecked) {
        $command = ""choco install vlc --version 3.0.20 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de VLC Media Player terminee."" + ""`r`n""
    }
   if ($Paint_NET_CheckBox.IsChecked) {
        $command = ""choco install paint.net -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de paint.net terminee."" + ""`r`n""
    }
    if ($Sublime_Text_2_CheckBox.IsChecked) {
        $command = ""choco install sublimetext2 --version 2.0.2.2224 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Sublime Text 2 terminee."" + ""`r`n""
    }
    if ($NET_4_8_CheckBox.IsChecked) {
        $command = ""choco install netfx-4.8-devpack --version 4.8.0.20190930 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de .NET Framework 4.8 Developer Pack terminee."" + ""`r`n""
    }
    if ($NET_5_0_CheckBox.IsChecked) {
        $command = ""choco install dotnet-5.0-desktopruntime --version 5.0.17 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de .NET 5.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($NET_6_0_CheckBox.IsChecked) {
        $command = ""choco install dotnet-6.0-desktopruntime --version 6.0.27 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de .NET 6.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($NET_7_0_CheckBox.IsChecked) {
        $command = ""choco install dotnet-7.0-desktopruntime --version 7.0.16 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de .NET 7.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($NET_8_0_CheckBox.IsChecked) {
        $command = ""choco install dotnet-8.0-desktopruntime --version 8.0.2 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de .NET 8.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($VisualC22_CheckBox.IsChecked) {
        $command = ""choco install vcredist140 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de C++ Redistributable 2022 terminee."" + ""`r`n""
    }
    if ($Visual_C_15_CheckBox.IsChecked) {
        $command = ""choco install vcredist2015 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de C++ Redistributable  2015 terminee."" + ""`r`n""
    }
    if ($Python_3_6_CheckBox.IsChecked) {
        $command = ""choco install python36 --version 3.6.8 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Python 3.6 terminee."" + ""`r`n""
    }
    if ($FileZilla_CheckBox.IsChecked) {
        $command = ""choco install filezilla --version 3.66.5 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de FileZilla terminee."" + ""`r`n""
    }
    if ($Google_Drive_CheckBox.IsChecked) {
        $command = ""choco install google-drive-file-stream --version 56.0.11.2022 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Google Drive File Stream terminee."" + ""`r`n""
    }
    if ($libreoffice_CheckBox.IsChecked) {
        $command = ""choco install libreoffice-sdk --version 7.5.2 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de LibreOffice SDK terminee."" + ""`r`n""
    }
    if ($Revo_Uninstaller_CheckBox.IsChecked) {
        $command = ""choco install revo-uninstaller --version 2.4.5 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Revo Uninstaller terminee."" + ""`r`n""
    }
    if ($Geek_Uninstaller_CheckBox.IsChecked) {
        $command = ""choco install geekuninstaller --version 1.5.2.165 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Geek Uninstaller terminee."" + ""`r`n""
    }
    if ($Adobe_Acrobat_Reader_CheckBox.IsChecked) {
        $command = ""choco install adobereader --version 2023.8.20533 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Adobe Reader terminee."" + ""`r`n""
    }
    if ($rockstar_CheckBox.IsChecked) {
         $command = ""choco install rockstar-launcher -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de rockstar luncher terminee."" + ""`r`n""
    }
        if ($AutoHotkey_CheckBox.IsChecked) {
        $command = ""choco install autohotkey --version 1.1.37.1 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de AutoHotkey terminee."" + ""`r`n""
    }
    if ($AnyDesk_CheckBox.IsChecked) {
        $command = ""choco install anydesk.install --version 8.0.8 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de AnyDesk terminee."" + ""`r`n""
    }
    if ($OBS_Studio_CheckBox.IsChecked) {
        $command = ""choco install obs-studio --version 30.0.2 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de OBS Studio terminee."" + ""`r`n""
    }
    if ($VirtualBox_CheckBox.IsChecked) {
        $command = ""choco install virtualbox --version 7.0.14 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de VirtualBox terminee."" + ""`r`n""
    }
    if ($Rufus_CheckBox.IsChecked) {
        $command = ""choco install rufus.portable --version 4.4.0 -y --force --ignore-checksums""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Installation de Rufus terminee."" + ""`r`n""
    }
})

# code to run when button is clicked
#-----------------------------------
$Uninstall_Btn.Add_Click({
    if ($Chrome_CheckBox.IsChecked) {
        $command = ""choco uninstall googlechrome -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Chrome terminee."" + ""`r`n""
    }
    if ($Fierfox_CheckBox.IsChecked) {
        $command = ""choco uninstall firefox -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Firefox terminee."" + ""`r`n""
    }
    if ($Breave_CheckBox.IsChecked) {
        $command = ""choco uninstall brave -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Brave terminee."" + ""`r`n""
    }
    if ($Discord_CheckBox.IsChecked) {
        $command = ""choco uninstall discord -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Discord terminee."" + ""`r`n""
    }
    if ($ONLYOFFICE_CheckBox.IsChecked) {
        $command = ""choco uninstall onlyoffice -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de ONLYOFFICE terminee."" + ""`r`n""
    }
    if ($Everything_CheckBox.IsChecked) {
        $command = ""choco uninstall everything -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Everything terminee."" + ""`r`n""
    }
    if ($powershell_CheckBox.IsChecked) {
        $command = ""choco uninstall powershell.portable -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de PowerShell terminee."" + ""`r`n""
    }
    if ($Visual_Studio_Code_CheckBox.IsChecked) {
        $command = ""choco uninstall vscode -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Visual Studio Code terminee."" + ""`r`n""
    }
    if ($Visual_Studio_Community22_CheckBox.IsChecked) {
        $command = ""choco uninstall visualstudio2022community -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Visual Studio 2022 Community terminee."" + ""`r`n""
    }
    if ($Steam_CheckBox.IsChecked) {
        $command = ""choco uninstall steam -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Steam terminee."" + ""`r`n""
    }
    if ($DS4Windows_CheckBox.IsChecked) {
        $command = ""choco uninstall ds4windows -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de DS4Windows terminee."" + ""`r`n""
    }
    if ($NanaZip_CheckBox.IsChecked) {
        $command = ""choco uninstall nanazip -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de NanaZip terminee."" + ""`r`n""
    }
    if ($WinRAR_CheckBox.IsChecked) {
        $command = ""choco uninstall winrar -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de WinRAR terminee."" + ""`r`n""
    }
    if ($Epic_Games_Launcher_CheckBox.IsChecked) {
        $command = ""choco uninstall epicgameslauncher -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Epic Games Launcher terminee."" + ""`r`n""
    }
    if ($PDF_XChange_Viewer_CheckBox.IsChecked) {
        $command = ""choco uninstall pdfxchangeviewer -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de PDF-XChange Viewer terminee."" + ""`r`n""
    }
    if ($PDF24_CreatorCheckBox.IsChecked) {
        $command = ""choco uninstall pdf24 -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de PDF24 Creator terminee."" + ""`r`n""
    }
    if ($PDF_XChange_Editor_CheckBox.IsChecked) {
        $command = ""choco uninstall pdfxchangeeditor -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de PDF-XChange Editor terminee."" + ""`r`n""
    }
    if ($VLC_media_player_CheckBox.IsChecked) {
        $command = ""choco uninstall vlc -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de VLC Media Player terminee."" + ""`r`n""
    }
    if ($Sublime_Text_2_CheckBox.IsChecked) {
        $command = ""choco uninstall sublimetext2 -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Sublime Text 2 terminee."" + ""`r`n""
    }
    if ($NET_4_8_CheckBox.IsChecked) {
        $command = ""choco uninstall netfx-4.8-devpack -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de .NET Framework 4.8 Developer Pack terminee."" + ""`r`n""
    }
    if ($NET_5_0_CheckBox.IsChecked) {
        $command = ""choco uninstall dotnet-5.0-desktopruntime -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de .NET 5.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($NET_6_0_CheckBox.IsChecked) {
        $command = ""choco uninstall dotnet-6.0-desktopruntime -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de .NET 6.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($NET_7_0_CheckBox.IsChecked) {
        $command = ""choco uninstall dotnet-7.0-desktopruntime -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de .NET 7.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($NET_8_0_CheckBox.IsChecked) {
        $command = ""choco uninstall dotnet-8.0-desktopruntime -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de .NET 8.0 Desktop Runtime terminee."" + ""`r`n""
    }
    if ($VisualC22_CheckBox.IsChecked) {
        $command = ""choco uninstall vcredist140 -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de C++ Redistributable 2022 terminee."" + ""`r`n""
    }
    if ($Visual_C_15_CheckBox.IsChecked) {
        $command = ""choco uninstall vcredist2015 -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de C++ Redistributable  2015 terminee."" + ""`r`n""
    }
    if ($Python_3_6_CheckBox.IsChecked) {
        $command = ""choco uninstall python36 -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Python 3.6 terminee."" + ""`r`n""
    }
       if ($FileZilla_CheckBox.IsChecked) {
        $command = ""choco uninstall filezilla -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de FileZilla terminee."" + ""`r`n""
    }
    if ($Google_Drive_CheckBox.IsChecked) {
        $command = ""choco uninstall google-drive-file-stream -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Google Drive File Stream terminee."" + ""`r`n""
    }
    if ($libreoffice_CheckBox.IsChecked) {
        $command = ""choco uninstall libreoffice-sdk -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de LibreOffice SDK terminee."" + ""`r`n""
    }
    if ($Revo_Uninstaller_CheckBox.IsChecked) {
        $command = ""choco uninstall revo-uninstaller -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Revo Uninstaller terminee."" + ""`r`n""
    }
    if ($Geek_Uninstaller_CheckBox.IsChecked) {
        $command = ""choco uninstall geekuninstaller -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Geek Uninstaller terminee."" + ""`r`n""
    }
    if ($Adobe_Acrobat_Reader_CheckBox.IsChecked) {
        $command = ""choco uninstall adobereader -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Adobe Reader terminee."" + ""`r`n""
    }
    if ($rockstar_CheckBox.IsChecked) {
         $command = ""choco uninstall rockstar-launcher -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de rockstar luncher terminee."" + ""`r`n""
    }
    if ($AutoHotkey_CheckBox.IsChecked) {
        $command = ""choco uninstall autohotkey -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de AutoHotkey terminee."" + ""`r`n""
    }
    if ($AnyDesk_CheckBox.IsChecked) {
        $command = ""choco uninstall anydesk.install -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de AnyDesk terminee."" + ""`r`n""
    }
    if ($OBS_Studio_CheckBox.IsChecked) {
        $command = ""choco uninstall obs-studio -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de OBS Studio terminee."" + ""`r`n""
    }
    if ($VirtualBox_CheckBox.IsChecked) {
        $command = ""choco uninstall virtualbox -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de VirtualBox terminee."" + ""`r`n""
    }
    if ($Rufus_CheckBox.IsChecked) {
        $command = ""choco uninstall rufus.portable -y ""
        Start-Process -Wait -NoNewWindow -FilePath ""powershell"" -ArgumentList $command
        $TextBox.Text += ""Desinstallation de Rufus terminee."" + ""`r`n""
    }
   
})


# -------------------------------------Tab 2----------------------------------------

$Bloatware = @(
    #Unnecessary Windows 10 AppX Apps
    ""Microsoft.3DBuilder""
    ""Microsoft.Microsoft3DViewer""
    ""Microsoft.AppConnector""
    ""Microsoft.BingFinance""
    ""Microsoft.BingNews""
    ""Microsoft.BingSports""
    ""Microsoft.BingTranslator""
    ""Microsoft.BingWeather""
    ""Microsoft.BingFoodAndDrink""
    ""Microsoft.BingHealthAndFitness""
    ""Microsoft.BingTravel""
    ""Microsoft.MinecraftUWP""
    ""Microsoft.GamingServices""
    # ""Microsoft.WindowsReadingList""
    ""Microsoft.GetHelp""
    ""Microsoft.Getstarted""
    ""Microsoft.Messaging""
    ""Microsoft.Microsoft3DViewer""
    ""Microsoft.MicrosoftSolitaireCollection""
    ""Microsoft.NetworkSpeedTest""
    ""Microsoft.News""
    ""Microsoft.Office.Lens""
    ""Microsoft.Office.Sway""
    ""Microsoft.Office.OneNote""
    ""Microsoft.OneConnect""
    ""Microsoft.People""
    ""Microsoft.Print3D""
    ""Microsoft.SkypeApp""
    ""Microsoft.Wallet""
    ""Microsoft.Whiteboard""
    ""Microsoft.WindowsAlarms""
    ""microsoft.windowscommunicationsapps""
    ""Microsoft.WindowsFeedbackHub""
    ""Microsoft.WindowsMaps""
    ""Microsoft.WindowsPhone""
    ""Microsoft.WindowsSoundRecorder""
    ""Microsoft.XboxApp""
    ""Microsoft.ConnectivityStore""
    ""Microsoft.CommsPhone""
    ""Microsoft.ScreenSketch""
    ""Microsoft.Xbox.TCUI""
    #""Microsoft.XboxGameOverlay""
    #""Microsoft.XboxGameCallableUI""
    ""Microsoft.XboxSpeechToTextOverlay""
    ""Microsoft.MixedReality.Portal""
    ""Microsoft.XboxIdentityProvider""
    ""Microsoft.ZuneMusic""
    ""Microsoft.ZuneVideo""
    ""Microsoft.YourPhone""
    ""Microsoft.Getstarted""
    ""Microsoft.MicrosoftOfficeHub""

    #Sponsored Windows 10 AppX Apps
    #Add sponsored/featured apps to remove in the ""*AppName*"" format
    ""*EclipseManager*""
    ""*ActiproSoftwareLLC*""
    ""*AdobeSystemsIncorporated.AdobePhotoshopExpress*""
    ""*Duolingo-LearnLanguagesforFree*""
    ""*PandoraMediaInc*""
    ""*CandyCrush*""
    ""*BubbleWitch3Saga*""
    ""*Wunderlist*""
    ""*Flipboard*""
    ""*Twitter*""
    ""*Facebook*""
    ""*Royal Revolt*""
    ""*Sway*""
    ""*Speed Test*""
    ""*Dolby*""
    ""*Viber*""
    ""*ACGMediaPlayer*""
    ""*Netflix*""
    ""*OneCalendar*""
    ""*LinkedInforWindows*""
    ""*HiddenCityMysteryofShadows*""
    ""*Hulu*""
    ""*HiddenCity*""
    ""*AdobePhotoshopExpress*""
    ""*HotspotShieldFreeVPN*""

    #Optional: Typically not removed but you can if you need to for some reason
    ""*Microsoft.Advertising.Xaml*""
    ""*Microsoft.MSPaint*""
    ""*Microsoft.MicrosoftStickyNotes*""
    #""*Microsoft.Windows.Photos*""
    #""*Microsoft.WindowsCalculator*""
    #""*Microsoft.WindowsStore*""
)


$remouveblot.Add_Click({
     Write-Host ""Removing Bloatware""

    foreach ($Bloat in $Bloatware) {
        Get-AppxPackage -Name $Bloat| Remove-AppxPackage
        Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like $Bloat | Remove-AppxProvisionedPackage -Online
        Write-Host ""Trying to remove $Bloat.""
    }

    Write-Host ""Finished Removing Bloatware Apps""
    $TextBox2.Text += ""Finished Removing Bloatware Apps"" + ""`r`n""

    })

$blot_reg_key.Add_Click({
        # $ErrorActionPreference = 'SilentlyContinue'
        $Keys = @(
            
            New-PSDrive  HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
            #Remove Background Tasks
            ""HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y""
            ""HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0""
            ""HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe""
            ""HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy""
            ""HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy""
            ""HKCR:\Extensions\ContractId\Windows.BackgroundTasks\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy""
            
            #Windows File
            ""HKCR:\Extensions\ContractId\Windows.File\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0""
            
            #Registry keys to delete if they aren't uninstalled by RemoveAppXPackage/RemoveAppXProvisionedPackage
            ""HKCR:\Extensions\ContractId\Windows.Launch\PackageId\46928bounde.EclipseManager_2.2.4.51_neutral__a5h4egax66k6y""
            ""HKCR:\Extensions\ContractId\Windows.Launch\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0""
            ""HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy""
            ""HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy""
            ""HKCR:\Extensions\ContractId\Windows.Launch\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy""
            
            #Scheduled Tasks to delete
            ""HKCR:\Extensions\ContractId\Windows.PreInstalledConfigTask\PackageId\Microsoft.MicrosoftOfficeHub_17.7909.7600.0_x64__8wekyb3d8bbwe""
            
            #Windows Protocol Keys
            ""HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0""
            ""HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.PPIProjection_10.0.15063.0_neutral_neutral_cw5n1h2txyewy""
            ""HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.15063.0.0_neutral_neutral_cw5n1h2txyewy""
            ""HKCR:\Extensions\ContractId\Windows.Protocol\PackageId\Microsoft.XboxGameCallableUI_1000.16299.15.0_neutral_neutral_cw5n1h2txyewy""
               
            #Windows Share Target
            ""HKCR:\Extensions\ContractId\Windows.ShareTarget\PackageId\ActiproSoftwareLLC.562882FEEB491_2.6.18.18_neutral__24pqs290vpjk0""
        )
        
        #This writes the output of each key it is removing and also removes the keys listed above.
        ForEach ($Key in $Keys) {
            Write-Host ""Removing $Key from registry""
            Remove-Item $Key -Recurse
        }
        Write-Host ""Additional bloatware keys have been removed!""
        $TextBox2.Text += ""Additional bloatware keys have been removed!"" + ""`r`n""
    
    })


$revert_reg_chang.Add_Click({
        # $ErrorActionPreference = 'SilentlyContinue'
        #This function will revert the changes you made when running the Start-Debloat function.
        
        #This line reinstalls all of the bloatware that was removed
        Get-AppxPackage -AllUsers | ForEach { Add-AppxPackage -Verbose -DisableDevelopmentMode -Register ""$($_.InstallLocation)\AppXManifest.xml"" } 
    
        #Tells Windows to enable your advertising information.    
        Write-Host ""Re-enabling key to show advertisement information""
        $Advertising = ""HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo""
        If (Test-Path $Advertising) {
            Set-ItemProperty $Advertising  Enabled -Value 1
        }
            
        #Enables Cortana to be used as part of your Windows Search Function
        Write-Host ""Re-enabling Cortana to be used in your Windows Search""
        $Search = ""HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search""
        If (Test-Path $Search) {
            Set-ItemProperty $Search  AllowCortana -Value 1 
        }
            
        #Re-enables the Windows Feedback Experience for sending anonymous data
        Write-Host ""Re-enabling Windows Feedback Experience""
        $Period = ""HKCU:\Software\Microsoft\Siuf\Rules""
        If (!(Test-Path $Period)) { 
            New-Item $Period
        }
        Set-ItemProperty $Period PeriodInNanoSeconds -Value 1 
    
        #Enables bloatware applications               
        Write-Host ""Adding Registry key to allow bloatware apps to return""
        $registryPath = ""HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent""
        If (!(Test-Path $registryPath)) {
            New-Item $registryPath 
        }
        Set-ItemProperty $registryPath  DisableWindowsConsumerFeatures -Value 0 
        
        #Changes Mixed Reality Portal Key 'FirstRunSucceeded' to 1
        Write-Host ""Setting Mixed Reality Portal value to 1""
        $Holo = ""HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic""
        If (Test-Path $Holo) {
            Set-ItemProperty $Holo  FirstRunSucceeded -Value 1 
        }
        
        #Re-enables live tiles
        Write-Host ""Enabling live tiles""
        $Live = ""HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications""
        If (!(Test-Path $Live)) {
            New-Item $Live 
        }
        Set-ItemProperty $Live  NoTileApplicationNotification -Value 0 
       
        #Re-enables data collection
        Write-Host ""Re-enabling data collection""
        $DataCollection = ""HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection""
        If (!(Test-Path $DataCollection)) {
            New-Item $DataCollection
        }
        Set-ItemProperty $DataCollection  AllowTelemetry -Value 1
        
        #Re-enables People Icon on Taskbar
        Write-Host ""Enabling People Icon on Taskbar""
        $People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
        If (Test-Path $People) {
            Set-ItemProperty $People -Name PeopleBand -Value 1 -Verbose
        }
    
        #Re-enables suggestions on start menu
        Write-Host ""Enabling suggestions on the Start Menu""
        $Suggestions = ""HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager""
        If (!(Test-Path $Suggestions)) {
            New-Item $Suggestions
        }
        Set-ItemProperty $Suggestions  SystemPaneSuggestionsEnabled -Value 1 
        
        #Re-enables scheduled tasks that were disabled when running the Debloat switch
        Write-Host ""Enabling scheduled tasks that were disabled""
        Get-ScheduledTask XblGameSaveTaskLogon | Enable-ScheduledTask 
        Get-ScheduledTask  XblGameSaveTask | Enable-ScheduledTask 
        Get-ScheduledTask  Consolidator | Enable-ScheduledTask 
        Get-ScheduledTask  UsbCeip | Enable-ScheduledTask 
        Get-ScheduledTask  DmClient | Enable-ScheduledTask 
        Get-ScheduledTask  DmClientOnScenarioDownload | Enable-ScheduledTask 

        Write-Host ""Re-enabling and starting WAP Push Service""
        #Enable and start WAP Push Service
        Set-Service ""dmwappushservice"" -StartupType Automatic
        Start-Service ""dmwappushservice""
    
        Write-Host ""Re-enabling and starting the Diagnostics Tracking Service""
        #Enabling the Diagnostics Tracking Service
        Set-Service ""DiagTrack"" -StartupType Automatic
        Start-Service ""DiagTrack""
        Write-Host ""Done reverting changes!""

        #
        Write-Output ""Restoring 3D Objects from Explorer 'My Computer' submenu""
        $Objects32 = ""HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}""
        $Objects64 = ""HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}""
        If (!(Test-Path $Objects32)) {
            New-Item $Objects32
        }
        If (!(Test-Path $Objects64)) {
            New-Item $Objects64
        }
        $TextBox2.Text += ""Done reverting changes!"" + ""`r`n""
    
    })

 $telemetry.Add_Click({
        # $ErrorActionPreference = 'SilentlyContinue'
        #Disables Windows Feedback Experience
        Write-Host ""Disabling Windows Feedback Experience program""
        $Advertising = ""HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo""
        If (Test-Path $Advertising) {
            Set-ItemProperty $Advertising Enabled -Value 0 
        }
            
        #Stops Cortana from being used as part of your Windows Search Function
        Write-Host ""Stopping Cortana from being used as part of your Windows Search Function""
        $Search = ""HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search""
        If (Test-Path $Search) {
            Set-ItemProperty $Search AllowCortana -Value 0 
        }

        #Disables Web Search in Start Menu
        Write-Host ""Disabling Bing Search in Start Menu""
        $WebSearch = ""HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search""
        Set-ItemProperty ""HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search"" BingSearchEnabled -Value 0 
        If (!(Test-Path $WebSearch)) {
            New-Item $WebSearch
        }
        Set-ItemProperty $WebSearch DisableWebSearch -Value 1 
            
        #Stops the Windows Feedback Experience from sending anonymous data
        Write-Host ""Stopping the Windows Feedback Experience program""
        $Period = ""HKCU:\Software\Microsoft\Siuf\Rules""
        If (!(Test-Path $Period)) { 
            New-Item $Period
        }
        Set-ItemProperty $Period PeriodInNanoSeconds -Value 0 

        #Prevents bloatware applications from returning and removes Start Menu suggestions               
        Write-Host ""Adding Registry key to prevent bloatware apps from returning""
        $registryPath = ""HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent""
        $registryOEM = ""HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager""
        If (!(Test-Path $registryPath)) { 
            New-Item $registryPath
        }
        Set-ItemProperty $registryPath DisableWindowsConsumerFeatures -Value 1 

        If (!(Test-Path $registryOEM)) {
            New-Item $registryOEM
        }
        Set-ItemProperty $registryOEM ContentDeliveryAllowed -Value 0 
        Set-ItemProperty $registryOEM OemPreInstalledAppsEnabled -Value 0 
        Set-ItemProperty $registryOEM PreInstalledAppsEnabled -Value 0 
        Set-ItemProperty $registryOEM PreInstalledAppsEverEnabled -Value 0 
        Set-ItemProperty $registryOEM SilentInstalledAppsEnabled -Value 0 
        Set-ItemProperty $registryOEM SystemPaneSuggestionsEnabled -Value 0          
    
        #Preping mixed Reality Portal for removal    
        Write-Host ""Setting Mixed Reality Portal value to 0 so that you can uninstall it in Settings""
        $Holo = ""HKCU:\Software\Microsoft\Windows\CurrentVersion\Holographic""    
        If (Test-Path $Holo) {
            Set-ItemProperty $Holo  FirstRunSucceeded -Value 0 
        }

        #Disables Wi-fi Sense
        Write-Host ""Disabling Wi-Fi Sense""
        $WifiSense1 = ""HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting""
        $WifiSense2 = ""HKLM:\SOFTWARE\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots""
        $WifiSense3 = ""HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config""
        If (!(Test-Path $WifiSense1)) {
            New-Item $WifiSense1
        }
        Set-ItemProperty $WifiSense1  Value -Value 0 
        If (!(Test-Path $WifiSense2)) {
            New-Item $WifiSense2
        }
        Set-ItemProperty $WifiSense2  Value -Value 0 
        Set-ItemProperty $WifiSense3  AutoConnectAllowedOEM -Value 0 
        
        #Disables live tiles
        Write-Host ""Disabling live tiles""
        $Live = ""HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications""    
        If (!(Test-Path $Live)) {      
            New-Item $Live
        }
        Set-ItemProperty $Live  NoTileApplicationNotification -Value 1 
        
        #Turns off Data Collection via the AllowTelemtry key by changing it to 0
        Write-Host ""Turning off Data Collection""
        $DataCollection1 = ""HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection""
        $DataCollection2 = ""HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection""
        $DataCollection3 = ""HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection""    
        If (Test-Path $DataCollection1) {
            Set-ItemProperty $DataCollection1  AllowTelemetry -Value 0 
        }
        If (Test-Path $DataCollection2) {
            Set-ItemProperty $DataCollection2  AllowTelemetry -Value 0 
        }
        If (Test-Path $DataCollection3) {
            Set-ItemProperty $DataCollection3  AllowTelemetry -Value 0 
        }
    
        #Disabling Location Tracking
        Write-Host ""Disabling Location Tracking""
        $SensorState = ""HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}""
        $LocationConfig = ""HKLM:\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration""
        If (!(Test-Path $SensorState)) {
            New-Item $SensorState
        }
        Set-ItemProperty $SensorState SensorPermissionState -Value 0 
        If (!(Test-Path $LocationConfig)) {
            New-Item $LocationConfig
        }
        Set-ItemProperty $LocationConfig Status -Value 0 
        
        #Disables People icon on Taskbar
        Write-Host ""Disabling People icon on Taskbar""
        $People = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People'
        If (Test-Path $People) {
            Set-ItemProperty $People -Name PeopleBand -Value 0
        } 
        
        #Disables scheduled tasks that are considered unnecessary 
        Write-Host ""Disabling scheduled tasks""
        #Get-ScheduledTask XblGameSaveTaskLogon | Disable-ScheduledTask
        Get-ScheduledTask XblGameSaveTask | Disable-ScheduledTask
        Get-ScheduledTask Consolidator | Disable-ScheduledTask
        Get-ScheduledTask UsbCeip | Disable-ScheduledTask
        Get-ScheduledTask DmClient | Disable-ScheduledTask
        Get-ScheduledTask DmClientOnScenarioDownload | Disable-ScheduledTask

        #Write-Host ""Uninstalling Telemetry Windows Updates""
        #Uninstalls Some Windows Updates considered to be Telemetry. !WIP!
        #Wusa /Uninstall /KB:3022345 /norestart /quiet
        #Wusa /Uninstall /KB:3068708 /norestart /quiet
        #Wusa /Uninstall /KB:3075249 /norestart /quiet
        #Wusa /Uninstall /KB:3080149 /norestart /quiet        

        Write-Host ""Stopping and disabling WAP Push Service""
        #Stop and disable WAP Push Service
        Stop-Service ""dmwappushservice""
        Set-Service ""dmwappushservice"" -StartupType Disabled

        Write-Host ""Stopping and disabling Diagnostics Tracking Service""
        #Disabling the Diagnostics Tracking Service
        Stop-Service ""DiagTrack""
        Set-Service ""DiagTrack"" -StartupType Disabled
        Write-Host ""Telemetry has been disabled!""
        $TextBox2.Text += ""Telemetry has been disabled!"" + ""`r`n""
    
    })


$dark_enable.Add_Click({
        Write-Host ""Enabling Dark Mode""
        $Theme = ""HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize""
        Set-ItemProperty $Theme AppsUseLightTheme -Value 0
        Start-Sleep 1
        Write-Host ""Dark Mode Enabled""
        $TextBox2.Text += ""Dark Mode Enabled"" + ""`r`n""

    
    })


$dark_disable.Add_Click({
        Write-Host ""Disabling Dark Mode""
        $Theme = ""HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize""
        Set-ItemProperty $Theme AppsUseLightTheme -Value 1
        Start-Sleep 1
        Write-Host ""Dark Mode Disabled""
        $TextBox2.Text += ""Dark Mode Disabled"" + ""`r`n""
    
    })






    $services = @(
    ""diagnosticshub.standardcollector.service""     # Microsoft (R) Diagnostics Hub Standard Collector Service
    ""DiagTrack""                                    # Diagnostics Tracking Service
    ""DPS""
    ""dmwappushservice""                             # WAP Push Message Routing Service (see known issues)
    ""lfsvc""                                        # Geolocation Service
    ""MapsBroker""                                   # Downloaded Maps Manager
    ""NetTcpPortSharing""                            # Net.Tcp Port Sharing Service
    ""RemoteAccess""                                 # Routing and Remote Access
    ""RemoteRegistry""                               # Remote Registry
    ""SharedAccess""                                 # Internet Connection Sharing (ICS)
    ""TrkWks""                                       # Distributed Link Tracking Client
    #""WbioSrvc""                                     # Windows Biometric Service (required for Fingerprint reader / facial detection)
    #""WlanSvc""                                      # WLAN AutoConfig
    ""WMPNetworkSvc""                                # Windows Media Player Network Sharing Service
    #""wscsvc""                                       # Windows Security Center Service
    ""WSearch""                                      # Windows Search
    ""XblAuthManager""                               # Xbox Live Auth Manager
    ""XblGameSave""                                  # Xbox Live Game Save Service
    ""XboxNetApiSvc""                                # Xbox Live Networking Service
    ""XboxGipSvc""                                   #Disables Xbox Accessory Management Service
    ""ndu""                                          # Windows Network Data Usage Monitor
    ""WerSvc""                                       #disables windows error reporting
    #""Spooler""                                      #Disables your printer
    ""Fax""                                          #Disables fax
    ""fhsvc""                                        #Disables fax histroy
    ""gupdate""                                      #Disables google update
    ""gupdatem""                                     #Disable another google update
    ""stisvc""                                       #Disables Windows Image Acquisition (WIA)
    ""AJRouter""                                     #Disables (needed for AllJoyn Router Service)
    ""MSDTC""                                        # Disables Distributed Transaction Coordinator
    ""WpcMonSvc""                                    #Disables Parental Controls
    ""PhoneSvc""                                     #Disables Phone Service(Manages the telephony state on the device)
    ""PrintNotify""                                  #Disables Windows printer notifications and extentions
    ""PcaSvc""                                       #Disables Program Compatibility Assistant Service
    ""WPDBusEnum""                                   #Disables Portable Device Enumerator Service
    #""LicenseManager""                               #Disable LicenseManager(Windows store may not work properly)
    ""seclogon""                                     #Disables  Secondary Logon(disables other credentials only password will work)
    ""SysMain""                                      #Disables sysmain
    ""lmhosts""                                      #Disables TCP/IP NetBIOS Helper
    ""wisvc""                                        #Disables Windows Insider program(Windows Insider will not work)
    ""FontCache""                                    #Disables Windows font cache
    ""RetailDemo""                                   #Disables RetailDemo whic is often used when showing your device
    ""ALG""                                          # Disables Application Layer Gateway Service(Provides support for 3rd party protocol plug-ins for Internet Connection Sharing)
    #""BFE""                                         #Disables Base Filtering Engine (BFE) (is a service that manages firewall and Internet Protocol security)
    #""BrokerInfrastructure""                         #Disables Windows infrastructure service that controls which background tasks can run on the system.
    ""SCardSvr""                                      #Disables Windows smart card
    ""EntAppSvc""                                     #Disables enterprise application management.
    ""BthAvctpSvc""                                   #Disables AVCTP service (if you use  Bluetooth Audio Device or Wireless Headphones. then don't disable this)
    #""FrameServer""                                   #Disables Windows Camera Frame Server(this allows multiple clients to access video frames from camera devices.)
    ""Browser""                                       #Disables computer browser
    ""BthAvctpSvc""                                   #AVCTP service (This is Audio Video Control Transport Protocol service.)
    #""BDESVC""                                        #Disables bitlocker
    ""iphlpsvc""                                      #Disables ipv6 but most websites don't use ipv6 they use ipv4     
    ""edgeupdate""                                    # Disables one of edge update service  
    ""MicrosoftEdgeElevationService""                 # Disables one of edge  service 
    ""edgeupdatem""                                   # disbales another one of update service (disables edgeupdatem)                          
    ""SEMgrSvc""                                      #Disables Payments and NFC/SE Manager (Manages payments and Near Field Communication (NFC) based secure elements)
    #""PNRPsvc""                                      # Disables peer Name Resolution Protocol ( some peer-to-peer and collaborative applications, such as Remote Assistance, may not function, Discord will still work)
    #""p2psvc""                                       # Disbales Peer Name Resolution Protocol(nables multi-party communication using Peer-to-Peer Grouping.  If disabled, some applications, such as HomeGroup, may not function. Discord will still work)
    #""p2pimsvc""                                     # Disables Peer Networking Identity Manager (Peer-to-Peer Grouping services may not function, and some applications, such as HomeGroup and Remote Assistance, may not function correctly.Discord will still work)
    ""PerfHost""                                      #Disables  remote users and 64-bit processes to query performance .
    ""BcastDVRUserService_48486de""                   #Disables GameDVR and Broadcast   is used for Game Recordings and Live Broadcasts
    ""CaptureService_48486de""                        #Disables ptional screen capture functionality for applications that call the Windows.Graphics.Capture API.  
    ""cbdhsvc_48486de""                               #Disables   cbdhsvc_48486de (clipboard service it disables)
    #""BluetoothUserService_48486de""                  #disbales BluetoothUserService_48486de (The Bluetooth user service supports proper functionality of Bluetooth features relevant to each user session.)
    ""WpnService""                                    #Disables WpnService (Push Notifications may not work )
    #""StorSvc""                                       #Disables StorSvc (usb external hard drive will not be reconised by windows)
    ""RtkBtManServ""                                  #Disables Realtek Bluetooth Device Manager Service
    ""QWAVE""                                         #Disables Quality Windows Audio Video Experience (audio and video might sound worse)
     #Hp services
    ""HPAppHelperCap""
    ""HPDiagsCap""
    ""HPNetworkCap""
    ""HPSysInfoCap""
    ""HpTouchpointAnalyticsService""
    #hyper-v services
     ""HvHost""                          
    ""vmickvpexchange""
    ""vmicguestinterface""
    ""vmicshutdown""
    ""vmicheartbeat""
    ""vmicvmsession""
    ""vmicrdv""
    ""vmictimesync"" 
    # Services which cannot be disabled
    #""WdNisSvc""
)




$disable_services.Add_Click({

    foreach ($service in $services) {
    Write-Host ""Setting $service StartupType to Manual""
    Get-Service -Name $service -ErrorAction SilentlyContinue | Set-Service -StartupType Manual
}

    Write-Host ""Essential Tweaks Completed - Please Reboot""
    $TextBox2.Text += ""Disebling services Completed - Please Reboot"" + ""`r`n""

    
    })




$onedreive.Add_Click({

If (Test-Path ""$env:USERPROFILE\OneDrive\*"") {
            Write-Host ""Files found within the OneDrive folder! Checking to see if a folder named OneDriveBackupFiles exists.""
            Start-Sleep 1
              
            If (Test-Path ""$env:USERPROFILE\Desktop\OneDriveBackupFiles"") {
                Write-Host ""A folder named OneDriveBackupFiles already exists on your desktop. All files from your OneDrive location will be moved to that folder."" 
            }
            else {
                If (!(Test-Path ""$env:USERPROFILE\Desktop\OneDriveBackupFiles"")) {
                    Write-Host ""A folder named OneDriveBackupFiles will be created and will be located on your desktop. All files from your OneDrive location will be located in that folder.""
                    New-item -Path ""$env:USERPROFILE\Desktop"" -Name ""OneDriveBackupFiles""-ItemType Directory -Force
                    Write-Host ""Successfully created the folder 'OneDriveBackupFiles' on your desktop.""
                }
            }
            Start-Sleep 1
            Move-Item -Path ""$env:USERPROFILE\OneDrive\*"" -Destination ""$env:USERPROFILE\Desktop\OneDriveBackupFiles"" -Force
            Write-Host ""Successfully moved all files/folders from your OneDrive folder to the folder 'OneDriveBackupFiles' on your desktop.""
            Start-Sleep 1
            Write-Host ""Proceeding with the removal of OneDrive.""
            Start-Sleep 1
        }
        Else {
            Write-Host ""Either the OneDrive folder does not exist or there are no files to be found in the folder. Proceeding with removal of OneDrive.""
            Start-Sleep 1
            Write-Host ""Enabling the Group Policy 'Prevent the usage of OneDrive for File Storage'.""
            $OneDriveKey = 'HKLM:Software\Policies\Microsoft\Windows\OneDrive'
            If (!(Test-Path $OneDriveKey)) {
                Mkdir $OneDriveKey
                Set-ItemProperty $OneDriveKey -Name OneDrive -Value DisableFileSyncNGSC
            }
            Set-ItemProperty $OneDriveKey -Name OneDrive -Value DisableFileSyncNGSC
        }

        Write-Host ""Uninstalling OneDrive. Please wait...""
    
        New-PSDrive  HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT
        $onedrive = ""$env:SYSTEMROOT\SysWOW64\OneDriveSetup.exe""
        $ExplorerReg1 = ""HKCR:\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}""
        $ExplorerReg2 = ""HKCR:\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}""
        Stop-Process -Name ""OneDrive*""
        Start-Sleep 2
        If (!(Test-Path $onedrive)) {
            $onedrive = ""$env:SYSTEMROOT\System32\OneDriveSetup.exe""
        }
        Start-Process $onedrive ""/uninstall"" -NoNewWindow -Wait
        Start-Sleep 2
        Write-Host ""Stopping explorer""
        Start-Sleep 1
        taskkill.exe /F /IM explorer.exe
        Start-Sleep 3
        Write-Host ""Removing leftover files""
        If (Test-Path ""$env:USERPROFILE\OneDrive"") {
            Remove-Item ""$env:USERPROFILE\OneDrive"" -Force -Recurse
        }
        If (Test-Path ""$env:LOCALAPPDATA\Microsoft\OneDrive"") {
            Remove-Item ""$env:LOCALAPPDATA\Microsoft\OneDrive"" -Force -Recurse
        }
        If (Test-Path ""$env:PROGRAMDATA\Microsoft OneDrive"") {
            Remove-Item ""$env:PROGRAMDATA\Microsoft OneDrive"" -Force -Recurse
        }
        If (Test-Path ""$env:SYSTEMDRIVE\OneDriveTemp"") {
            Remove-Item ""$env:SYSTEMDRIVE\OneDriveTemp"" -Force -Recurse
        }
        Write-Host ""Removing OneDrive from windows explorer""
        If (!(Test-Path $ExplorerReg1)) {
            New-Item $ExplorerReg1
        }
        Set-ItemProperty $ExplorerReg1 System.IsPinnedToNameSpaceTree -Value 0 
        If (!(Test-Path $ExplorerReg2)) {
            New-Item $ExplorerReg2
        }
        Set-ItemProperty $ExplorerReg2 System.IsPinnedToNameSpaceTree -Value 0
        Write-Host ""Restarting Explorer that was shut down before.""
        Start-Process explorer.exe -NoNewWindow
        Write-Host ""OneDrive has been successfully uninstalled!""
        $TextBox2.Text += ""OneDrive has been successfully uninstalled!"" + ""`r`n""
        
        Remove-item env:OneDrive
    
    })




 $spotify_Install.Add_Click({

        iex ""& { $(iwr -useb 'https://raw.githubusercontent.com/SpotX-Official/spotx-official.github.io/main/run.ps1') } -confirm_uninstall_ms_spoti -confirm_spoti_recomended_over -podcasts_off -block_update_on  -new_theme -adsections_off -lyrics_stat spotify""
    
    })


$xamlForm.ShowDialog() | out-null
"
ngYbP5Hj,data851,TestGuy1,JSON,Sunday 25th of February 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '1aa810fe74a481ff6d319ebf1d5296e244bc18b1ec7b4e518286f7deb398b935194b5a01e81085348e54e88118b4bd8dad52f008a22f606ee064bb3ea3c400e2cafe79e0ea6cce54579931d00e67e1d77f9d27deca5c819b69ed357ac517ecff762cdb6d2c5e4b85e6434aa48f66f58f69bcb829028c20d9b37cb002493e6cb1',
  otherdata: [
    '7eede8815f26e39637efc6d72f42aa65',
    '0c7ea24b98cf34e6c9fedf3e0fbdbb5b',
    '73055a6a613ed96f18e87240181a59b5',
    'a6df9357c5abddd963e30653fc75a5c9',
    '2376b02288e1de2932df49d3c1b79025',
    'b8d5d1ac8586884d2e931fd8b8d9108a',
    '3d36b373f3c5f4ac8d7946236f1b2940',
    '28ee9cd48b1ee067b8c1eb271a9b87f3'
  ]
}"
nt96atcU,RBZ dungeons and default rep not working,Sygon,Lua,Sunday 25th of February 2024 05:33:52 AM CDT,"-- Grab local references to global variables. We are trading RAM to decrease CPU usage and hopefully increase FPS
local ALLIANCE = ALLIANCE
local C_Covenants = C_Covenants
local C_GossipInfo = C_GossipInfo
local C_Map = C_Map
local C_QuestLog = C_QuestLog
local C_Reputation = C_Reputation
local C_Timer = C_Timer
local CollapseFactionHeader = CollapseFactionHeader
local Enum = Enum
local ExpandFactionHeader = ExpandFactionHeader
local FACTION_INACTIVE = FACTION_INACTIVE
local GetFactionInfo = GetFactionInfo
local GetFactionInfoByID = GetFactionInfoByID
local GetInstanceInfo = GetInstanceInfo
local GetInventoryItemID = GetInventoryItemID
local GetMinimapZoneText = GetMinimapZoneText
local GetNumFactions = GetNumFactions
local HORDE = HORDE
local INVSLOT_TABARD = INVSLOT_TABARD
local IsInInstance = IsInInstance
local LibStub = LibStub
local NONE = NONE
local pairs = pairs
local select = select
local tonumber = tonumber
local type = type
local UnitAffectingCombat = UnitAffectingCombat
local UnitFactionGroup = UnitFactionGroup
local UnitOnTaxi = UnitOnTaxi
local UnitRace = UnitRace
local wipe = wipe

------------------- Create the addon --------------------
local RepByZone = LibStub(""AceAddon-3.0""):NewAddon(""RepByZone"", ""AceEvent-3.0"", ""LibAboutPanel-2.0"", ""AceConsole-3.0"")
local L = LibStub(""AceLocale-3.0""):GetLocale(""RepByZone"")
local Dialog = LibStub(""AceConfigDialog-3.0"")

-- Local variables
local db, isOnTaxi, instancesAndFactions, zonesAndFactions, subZonesAndFactions
local A = UnitFactionGroup(""player"") == ""Alliance"" and ALLIANCE
local H = UnitFactionGroup(""player"") == ""Horde"" and HORDE
local _, playerRace = UnitRace(""player"")

-- Table to localize subzones that Blizzard does not provide areaIDs
local citySubZonesAndFactions = {
	-- [L[""Subzone""]]               = factionID, subzone names are localized so we can compare to the localized minimap text from Blizzard
    [L[""A Hero's Welcome""]]         = A and 1094 or H and 1124, -- The Silver Covenant or The Sunreavers
    [L[""Shrine of Unending Light""]] = 932,      -- The Aldor
    [L[""The Beer Garden""]]          = A and 1094 or H and 1124, -- The Silver Covenant or The Sunreavers
    [L[""The Crimson Dawn""]]         = 1124,     -- The Sunreavers
    [L[""The Filthy Animal""]]        = A and 1094 or H and 1124, -- The Silver Covenant or The Sunreavers
    [L[""The Roasted Ram""]]          = 2510,     -- Valdrakken Accord
    [L[""The Seer's Library""]]       = 934,      -- The Scryers
    [L[""The Silver Blade""]]         = 1094,     -- The Silver Covenant
	[L[""Tinker Town""]]              = 54,       -- Gnomeregan
}

-- Faction tabard code
local tabardID
local tabard_itemIDs_to_factionIDs = {
    -- [itemID] = factionID
    -- Alliance
    [45574]     = 72,       -- Stormwind City
    [45577]     = 47,       -- Ironforge
    [45578]     = 54,       -- Gnomeregan
    [45579]     = 69,       -- Darnassus
    [45580]     = 930,      -- Exodar
    [83079]     = 1353,     -- Tushui Pandaren

    -- Horde
    [45581]     = 76,       -- Orgrimmar
    [45582]     = 530,      -- Darkspear Trolls
    [45583]     = 68,       -- Undercity
    [45584]     = 81,       -- Thunder Bluff
    [45585]     = 911,      -- Silvermoon City
    [83080]     = 1352,     -- Huojin Pandaren
}

-- WoD garrison bodyguard code
local bodyguardRepID

RepByZone.WoDFollowerZones = {
    [525]       = true,     -- Frostfire Ridge
    [534]       = true,     -- Tanaan Jungle
    [535]       = true,     -- Talador
    [539]       = true,     -- Shadowmoon Valley
    [542]       = true,     -- Spires of Arak
    [543]       = true,     -- Gorgrond
    [550]       = true,     -- Nagrand
    [582]       = true,     -- Lunarfall
    [590]       = true,     -- Frostwall
}

local bodyguard_quests = {
    -- [questID] = factionID
    [36877]     = 1736,     -- Tormmok
    [36898]     = 1733,     -- Delvar Ironfist
    [36899]     = 1738,     -- Defender Illona
    [36900]     = 1737,     -- Talonpriest Ishaal
    [36901]     = 1739,     -- Vivianne
    [36902]     = 1740,     -- Aeda Brightdawn
    [36936]     = 1741,     -- Leorajh
}

-- Covenant code
local covenantReps = {
    [Enum.CovenantType.Kyrian]      = 2407,     -- The Ascended
    [Enum.CovenantType.Venthyr]     = 2413,     -- Court of Harvesters
    [Enum.CovenantType.NightFae]    = 2422,     -- Night Fae
    [Enum.CovenantType.Necrolord]   = 2410,     -- The Undying Army
}

-- Blizzard adds new player races, assign factionIDs on the ""basic"" factions that are available for new characters
local player_races_to_factionIDs = {
    --[""playerRaceFile""]    = factionID
    [""Dwarf""]               = 47,       -- Ironforge
    [""Gnome""]               = 54,       -- Gnomeregan
    [""Human""]               = 72,       -- Stormwind
    [""NightElf""]            = 69,       -- Darnassus
    [""Orc""]                 = 76,       -- Orgrimmar
    [""Scourge""]             = 68,       -- Undercity
    [""Tauren""]              = 81,       -- Thunder Bluff
    [""Troll""]               = 530,      -- Darkspear Trolls
    [""BloodElf""]            = 911,      -- Silvermoon City
    [""Draenei""]             = 930,      -- Exodar
    [""Goblin""]              = 1133,     -- Bilgewater Cartel
    [""Worgen""]              = 1134,     -- Gilneas
    [""Pandaren""]            = A and 1353 or H and 1352 or 1216, -- Tushui Pandaren or Huojin Pandaren or Shang Xi's Academy
    [""HighmountainTauren""]  = 81,       -- Thunder Bluff
    [""LightforgedDraenei""]  = 930,      -- Exodar
    [""Nightborne""]          = 911,      -- Silvermoon City
    [""VoidElf""]             = 69,       -- Darnassus
    [""DarkIronDwarf""]       = 47,       -- Ironforge
    [""KulTiran""]            = 72,       -- Stormwind
    [""MagharOrc""]           = 76,       -- Orgrimmar
    [""Mechagnome""]          = 54,       -- Gnomeregan
    [""Vulpera""]             = 76,       -- Orgrimmar
    [""ZandalariTroll""]      = 530,      -- Darkspear Trolls
    [""Dracthyr""]            = 524 or 2523,  -- Obsidian Warders or Dark Talons
}

-- Return a table of defaul SV values
local defaults = {
    profile = {
        delayGetFactionInfoByID = 0.25,
        enabled                 = true,
        useFactionTabards       = true,
        verbose                 = true,
        watchOnTaxi             = true,
        watchSubZones           = true,
        watchWoDBodyGuards      = {
            [""**""] = true
        }
    }
}

-- Ace3 code
function RepByZone:OnInitialize()
    self.db = LibStub(""AceDB-3.0""):New(""RepByZoneDB"", defaults)
    self.db.RegisterCallback(self, ""OnProfileChanged"", ""RefreshConfig"")
    self.db.RegisterCallback(self, ""OnProfileCopied"", ""RefreshConfig"")
    self.db.RegisterCallback(self, ""OnProfileReset"", ""RefreshConfig"")
    db = self.db.profile

    self:SetEnabledState(db.enabled)

    local options = self:GetOptions() -- Options.lua
    options.args.profiles = LibStub(""AceDBOptions-3.0""):GetOptionsTable(self.db)

    -- Support for LibAboutPanel-2.0
    options.args.aboutTab = self:AboutOptionsTable(""RepByZone"")
    options.args.aboutTab.order = -1 -- -1 means ""put it last""

    -- Register your options with AceConfigRegistry
    LibStub(""AceConfig-3.0""):RegisterOptionsTable(""RepByZone"", options)

    -- Add options to Interface/AddOns
    self.optionsFrame = Dialog:AddToBlizOptions(""RepByZone"", ""RepByZone"")

    -- Create slash commands
    self:RegisterChatCommand(""repbyzone"", ""SlashHandler"")
    self:RegisterChatCommand(""rbz"", ""SlashHandler"")

    -- These events never get unregistered
    self:RegisterEvent(""PLAYER_REGEN_DISABLED"", ""InCombat"")
end

function RepByZone:OnEnable()
    -- All events that deal with entering a new zone or subzone are handled with the same function
    self:RegisterEvent(""ZONE_CHANGED_NEW_AREA"", ""SwitchedZones"")
    if db.watchSubZones then
        self:RegisterEvent(""ZONE_CHANGED"", ""SwitchedZones"")
        self:RegisterEvent(""ZONE_CHANGED_INDOORS"", ""SwitchedZones"")
    end

    -- If the player loses or gains control of the character, it is one of the signs of taxi use
    self:RegisterEvent(""PLAYER_CONTROL_LOST"", ""CheckTaxi"")
    self:RegisterEvent(""PLAYER_CONTROL_GAINED"", ""CheckTaxi"")

    -- Pandaren do not start Alliance or Horde
    if UnitFactionGroup(""player"") == nil then
        self:RegisterEvent(""NEUTRAL_FACTION_SELECT_RESULT"", ""GetPandarenRep"")
    end

    -- See if the player belongs to a Covenant, picks one, or changes Covenants
    self:RegisterEvent(""COVENANT_CHOSEN"", ""GetCovenantRep"")

    -- Check if a WoD garrison bodyguard is assigned
    self:RegisterEvent(""CHAT_MSG_MONSTER_SAY"", ""UpdateActiveBodyguardRepID"")
    self:RegisterEvent(""GOSSIP_CLOSED"", ""UpdateActiveBodyguardRepID"")

    -- Check Sholazar Basin and Wrathion/Sabellian factions
    self:RegisterEvent(""UPDATE_FACTION"", ""GetMultiRepIDsForZones"")

    -- Check if a faction tabard is equipped or changed
    self:RegisterEvent(""UNIT_INVENTORY_CHANGED"", ""GetEquippedTabard"")

    -- We are zoning into an instance
    self:RegisterEvent(""PLAYER_ENTERING_WORLD"", ""EnteringInstance"")

    -- Set up variables
    self:SetUpVariables(false) -- false == this is not a new or reset profile
end

function RepByZone:OnDisable()
    -- Stop watching most events if RBZ is disabled
    self:UnregisterEvent(""ZONE_CHANGED_NEW_AREA"")
    self:UnregisterEvent(""ZONE_CHANGED"")
    self:UnregisterEvent(""ZONE_CHANGED_INDOORS"")
    self:UnregisterEvent(""PLAYER_CONTROL_LOST"")
    self:UnregisterEvent(""PLAYER_CONTROL_GAINED"")
    self:UnregisterEvent(""NEUTRAL_FACTION_SELECT_RESULT"")
    self:UnregisterEvent(""COVENANT_CHOSEN"")
    self:UnregisterEvent(""CHAT_MSG_MONSTER_SAY"")
    self:UnregisterEvent(""GOSSIP_CLOSED"")
    self:UnregisterEvent(""UPDATE_FACTION"")
    self:UnregisterEvent(""UNIT_INVENTORY_CHANGED"")
    self:UnregisterEvent(""PLAYER_ENTERING_WORLD"")
end

function RepByZone:SlashHandler()
    -- Check if player is in combat, exit out and close options panels if that's the case
    local isInCombat = self:InCombat()
    if isInCombat then return end

    -- Close option panel if opened, otherwise open option panel
    if Dialog.OpenFrames[""RepByZone""] then
        Dialog:Close(""RepByZone"")
    else
        Dialog:Open(""RepByZone"")
    end
end

-- The user has reset the DB or created a new profile
function RepByZone:RefreshConfig()
    db = self.db.profile
    self:SetUpVariables(true) -- true == new or reset profile
end

-- Initialize tables and variables, or reset them if the user resets the profile
function RepByZone:SetUpVariables(newOrResetProfile)
    local defaultRepID, defaultRepName

    -- Initialize or verify part of the profile database
    defaultRepID, defaultRepName = self:GetRacialRep()
    db.watchedRepID = db.watchedRepID or defaultRepID
    db.watchedRepName = db.watchedRepName or defaultRepName

    -- Populate variables, some of which update the faction lists and call RepByZone:SwitchedZones()
    isOnTaxi = UnitOnTaxi(""player"")
    bodyguardRepID = self:GetActiveBodyguardRepID()
    self:GetCovenantRep()
    self:GetMultiRepIDsForZones()
    if db.useFactionTabards then
        self:GetEquippedTabard()
    end

    -- Populate tables
    if newOrResetProfile then
        -- The profile was reset by the user, refresh db.watchedRepID and db.watchedRepName
        db.watchedRepID, db.watchedRepName = defaultRepID, defaultRepName
    else
        -- This is the first run of the session, or the addon was enabled/re-enabled
        -- Obsolete and removed
        db.useClassRep = nil
        -- We missed Pandaren players joining either the Alliance or Horde, update
        if A or H and playerRace == ""Pandaren"" then
            if db.defaultRepID == 1216 then
                self:GetPandarenRep(""NEUTRAL_FACTION_SELECT_RESULT"", true)
            end
        end
    end
end

------------------- Event handlers starts here --------------------
function RepByZone:InCombat()
    if UnitAffectingCombat(""player"") then
        if Dialog.OpenFrames[""RepByZone""] then
            Dialog:Close(""RepByZone"")
        end
        return true
    end
    return false
end

-- Is the player on a taxi
function RepByZone:CheckTaxi()
    isOnTaxi = UnitOnTaxi(""player"")
end

-- What Covenant does the player belong to, if any
function RepByZone:CovenantToFactionID()
    local id = C_Covenants.GetActiveCovenantID()
    return covenantReps[id]
end

function RepByZone:GetCovenantRep()
    local newCovenantRepID = self:CovenantToFactionID()
    if newCovenantRepID ~= self.covenantRepID then
        self.covenantRepID = newCovenantRepID

        -- update both zones and subzones
        instancesAndFactions = self:InstancesAndFactionList()
        zonesAndFactions = self:ZoneAndFactionList()
        subZonesAndFactions = self:SubZonesAndFactionsList()
        self:SwitchedZones()
    end
end

-- Pandaren code
function RepByZone:GetPandarenRep(event, success)
    if success then
        A = UnitFactionGroup(""player"") == ""Alliance"" and ALLIANCE
        H = UnitFactionGroup(""player"") == ""Horde"" and HORDE
        if A or H then
            -- Update data
            self:UnregisterEvent(event)
            db.watchedRepID, db.watchedRepName = self:GetRacialRep()
            zonesAndFactions = self:ZoneAndFactionList()
            self:Print(L[""You have joined the %s, switching watched saved variable to %s.""]:format(A or H, db.watchedRepName))
            self:SwitchedZones()
        end
    end
end

-- WoD bodyguard code
function RepByZone:GetActiveBodyguardRepID()
    local newBodyguardRepID
    for questID in pairs(bodyguard_quests) do
        if C_QuestLog.IsQuestFlaggedCompleted(questID) then
            newBodyguardRepID = bodyguard_quests[questID]
            break
        end
    end
    return newBodyguardRepID
end

function RepByZone:UpdateActiveBodyguardRepID()
    -- Send a custom event to the handler
    self:SwitchedZones(""BODYGUARD_UPDATED"")
end

-- Sholazar Basin has three possible zone factions; some DF subzones have two; retun factionID based on player's quest progress
function RepByZone:GetMultiRepIDsForZones()
    local watchedFactionID = tonumber(db.defaultRepID) or 0
    -- Possible zoning issues, set the watched factionID to the default and exit
    local uiMapID = C_Map.GetBestMapForUnit(""player"")
    if not uiMapID then
        self:SetTheWatchedFactionID(watchedFactionID)
        return
    end
    local parentMapID = C_Map.GetMapInfo(uiMapID).parentMapID

    -- If the player is not in Sholazar Basin or Waking Shore then exit out
    if (uiMapID ~= 119 or parentMapID ~= 119) or (uiMapID ~= 2022 or parentMapID ~= 2022) then return end

    -- Sholazar Basin
    if uiMapID == 119 or parentMapID == 119 then
        local newSholazarRepID
        local frenzyHeartStanding = select(3, GetFactionInfoByID(1104))
        local oraclesStanding = select(3, GetFactionInfoByID(1105))

        if frenzyHeartStanding <= 3 then
            newSholazarRepID = 1105 -- Frenzyheart hated, return Oracles
        elseif oraclesStanding <= 3 then
            newSholazarRepID = 1104 -- Oracles hated, return Frenzyheart
        elseif (frenzyHeartStanding == 0) or (oraclesStanding == 0) then
            newSholazarRepID = db.watchedRepID
        end

        if newSholazarRepID ~= self.sholazarRepID then
            self.sholazarRepID = newSholazarRepID

            -- update both zones and subzones
            zonesAndFactions = self:ZoneAndFactionList()
            subZonesAndFactions = self:SubZonesAndFactionsList()
            self:SwitchedZones()
        end
    end

    -- Wrathion or Sabellian in Dragonflight
    if uiMapID == 2022 or parentMapID == 2022 then
        local newDragonFlightRepID = 2510 -- start with Valdrakken Accord
        self.dragonflightRepID = 2510 -- start with Valdrakken Accord
        local wrathionFriendshipInfo = C_GossipInfo.GetFriendshipReputation(2517)
        local sabellionFriendshipInfo = C_GossipInfo.GetFriendshipReputation(2518)

        local wrathionRankInfo = C_GossipInfo.GetFriendshipReputationRanks(2517)
        local sabellionRankInfo = C_GossipInfo.GetFriendshipReputationRanks(2518)

        local wrathionMaxRep = wrathionFriendshipInfo and wrathionFriendshipInfo.maxRep or 0 -- use 0 instead of possible nil
        local sabellionMaxRep = sabellionFriendshipInfo and sabellionFriendshipInfo.maxRep or 0 -- use 0 instead of possible nil

        local wrathionNextThreshold = wrathionFriendshipInfo and wrathionFriendshipInfo.nextThreshold or 0 -- use 0 instead of possible nil
        local sabellionNextThreshold = sabellionFriendshipInfo and sabellionFriendshipInfo.nextThreshold or 0 -- use 0 instead of possible nil

        local wrathionCurrentRepAmount = wrathionMaxRep % wrathionNextThreshold
        local sabellionCurrentRepAmount = sabellionMaxRep % sabellionNextThreshold

        if (wrathionRankInfo and wrathionRankInfo.currentLevel) > (sabellionRankInfo and sabellionRankInfo.currentLevel) then
            newDragonFlightRepID = 2517 -- Wrathion is higher
        elseif (sabellionRankInfo and sabellionRankInfo.currentLevel) > (wrathionRankInfo and wrathionRankInfo.currentLevel) then
            newDragonFlightRepID = 2518 -- Sabellian is higher
        elseif (wrathionRankInfo and wrathionRankInfo.currentLevel) == (sabellionRankInfo and sabellionRankInfo.currentLevel) then
            -- they are the same rank or the factions are unknown, verify
            if wrathionCurrentRepAmount > sabellionCurrentRepAmount then
                newDragonFlightRepID = 2517 -- Wrathion is higher
            elseif sabellionCurrentRepAmount > wrathionCurrentRepAmount then
                newDragonFlightRepID = 2518 -- Sabellian is higher
            end
        end

        if newDragonFlightRepID ~= self.dragonflightRepID then
            self.dragonflightRepID = newDragonFlightRepID

            -- update both zones and subzones
            instancesAndFactions = self:InstancesAndFactionList()
            zonesAndFactions = self:ZoneAndFactionList()
            subZonesAndFactions = self:SubZonesAndFactionsList()
            self:SwitchedZones()
        end
    end
end

-- Tabard code
function RepByZone:GetEquippedTabard(_, unit)
    if unit ~= ""player"" then return end
    local newTabardID, newTabardRep
    newTabardID = GetInventoryItemID(unit, INVSLOT_TABARD)

    if newTabardID then
        newTabardRep = tabard_itemIDs_to_factionIDs[newTabardID]
    end

    if newTabardRep ~= tabardID then
        tabardID = newTabardRep
        self:SwitchedZones()
    end
end

-------------------- Reputation code starts here --------------------
-- Function to set the watched factionID
function RepByZone:SetTheWatchedFactionID(factionID)
    -- WoW has a delay whenever the player changes instance/zone/subzone/tabard; factionName and isWatched aren't available immediately, so delay the lookup, then set the watched faction on the bar
    C_Timer.After(db.delayGetFactionInfoByID, function()
        if type(factionID) == ""number"" and factionID > 0 then
            -- We have a factionID for the instance/zone/subzone/tabard or we don't have a factionID and db.defaultRepID is a number
            local factionName, _, _, _, _, _, _, _, _, _, _, isWatched = GetFactionInfoByID(factionID)
            if factionName and not isWatched then
                C_Reputation.SetWatchedFaction(factionID)
                if db.verbose then
                    self:Print(L[""Now watching %s""]:format(factionName))
                end
            end
        else
            -- There is nothing in the database and db.defaultRepID == ""0-none""; blank the bar
            C_Reputation.SetWatchedFaction(0)
        end
    end)
end

local repsCollapsed = {} -- Obey user's settings about headers opened or closed
-- Open all faction headers
function RepByZone:OpenAllFactionHeaders()
    local numFactions = GetNumFactions()
    local factionIndex = 1

	while factionIndex <= numFactions do
		local name, _, _, _, _, _, _, _, isHeader, isCollapsed = GetFactionInfo(factionIndex)
		if isHeader and isCollapsed then
            repsCollapsed[name] = repsCollapsed[name] or isCollapsed
            ExpandFactionHeader(factionIndex)
            numFactions = GetNumFactions()
        end
        factionIndex = factionIndex + 1
	end
end

-- Close all faction headers
function RepByZone:CloseAllFactionHeaders()
    local numFactions = GetNumFactions()
    local factionIndex = 1

	while factionIndex <= numFactions do
		local name, _, _, _, _, _, _, _, isHeader, isCollapsed = GetFactionInfo(factionIndex)
		if isHeader then
			if isCollapsed and not repsCollapsed[name] then
				ExpandFactionHeader(factionIndex)
                numFactions = GetNumFactions()
			elseif repsCollapsed[name] and not isCollapsed then
				CollapseFactionHeader(factionIndex)
                numFactions = GetNumFactions()
			end
		end
        factionIndex = factionIndex + 1
	end
	wipe(repsCollapsed)
end

function RepByZone:GetAllFactions()
    -- Will not return factions the user has marked as inactive
    self:OpenAllFactionHeaders()
    local factionList = {}

    for factionIndex = 1, GetNumFactions() do
        local name, _, _, _, _, _, _, _, isHeader, _, _, _, _, factionID = GetFactionInfo(factionIndex)
        if name then
            if not isHeader and name ~= FACTION_INACTIVE then
                factionList[factionID] = name
            end
        end
    end
    factionList[""0-none""] = NONE

    self:CloseAllFactionHeaders()
    return factionList
end

-------------------- Watched faction code starts here --------------------
-- Get the character's racial factionID and factionName
function RepByZone:GetRacialRep()
    local racialRepID, racialRepName
    racialRepID = player_races_to_factionIDs[playerRace]
    if not racialRepID then
        racialRepID = A and 72 or H and 76 -- Known factionIDs in case Blizzard adds new races and the addon hasn't been updated
    end
    racialRepName = GetFactionInfoByID(racialRepID)
    return racialRepID, racialRepName
end

-- Entering an instance
function RepByZone:EnteringInstance()
    self:SwitchedZones()
end

-- Player switched zones, subzones, or instances, set watched faction
function RepByZone:SwitchedZones(event)
    if not db.enabled then return end -- Exit if the addon is disabled

    local watchedFactionID = tonumber(db.defaultRepID) or 0
    -- Possible zoning issues, set the watched factionID to the default and exit
    local uiMapID = C_Map.GetBestMapForUnit(""player"")
    if not uiMapID then
        self:SetTheWatchedFactionID(watchedFactionID)
        return
    end

    if isOnTaxi then
        if not db.watchOnTaxi then
            -- On taxi but don't switch
            return
        end
    end

    -- Some data may not be available because of the specialty zone functions, get something until a full data update refreshes things
    instancesAndFactions = instancesAndFactions or self:InstancesAndFactionList()
    zonesAndFactions = zonesAndFactions or self:ZoneAndFactionList()
    subZonesAndFactions = subZonesAndFactions or self:SubZonesAndFactionsList()

    -- This is a custom event
    if event == ""BODYGUARD_UPDATED"" then
        bodyguardRepID = self:GetActiveBodyguardRepID()
    end

    -- Set up variables
    local inInstance, instanceType = IsInInstance()
    local whichInstanceID = inInstance and select(8, GetInstanceInfo())
    local parentMapID = C_Map.GetMapInfo(uiMapID).parentMapID
    local subZone = GetMinimapZoneText()
    local isWoDZone = self.WoDFollowerZones[uiMapID] or (self.WoDFollowerZones[uiMapID] == nil and self.WoDFollowerZones[parentMapID])

    -- Check instance
    if inInstance then
        if instanceType == ""party"" then
            -- Certain dungeons do not benefit from tabards
            if self.tabardExemptDungeons[whichInstanceID] then
                return
            end
            if db.useFactionTabards then
                watchedFactionID = tabardID
            else
                watchedFactionID = instancesAndFactions[whichInstanceID]
            end
        end
        -- Warfront: The Battle for Stromgarde
        if whichInstanceID == 1804 then
            watchedFactionID = db.watchSubZones and subZonesAndFactions[subZone] or instancesAndFactions[1804]
        else
            -- All other instances
            watchedFactionID = instancesAndFactions[whichInstanceID]
        end
    end

    -- We are not in an instance
    if not inInstance then
        watchedFactionID = db.watchSubZones and subZonesAndFactions[subZone] or zonesAndFactions[uiMapID]
        if isWoDZone then
            if bodyguardRepID then
                watchedFactionID = bodyguardRepID
            end
        end
    end

    -- Verify the watched factionID
    if watchedFactionID == 0 or type(watchedFactionID) ~= ""number"" then
        watchedFactionID = tonumber(db.defaultRepID) or 0
    end

    -- Call the local function
    self:SetTheWatchedFactionID(watchedFactionID)
end"
LjQk3NDc,Untitled,Cuarry123,Lua,Sunday 25th of February 2024 04:56:31 AM CDT,"if _G.Seraphy_Version == 092 then
	local function ry(so)
		game:GetService(""VirtualInputManager""):SendMouseButtonEvent(so.AbsolutePosition.X+so.AbsoluteSize.X/2,so.AbsolutePosition.Y+50,0,true,so,1);
		game:GetService(""VirtualInputManager""):SendMouseButtonEvent(so.AbsolutePosition.X+so.AbsoluteSize.X/2,so.AbsolutePosition.Y+50,0,false,so,1);
	end;
	repeat wait()
		if game.Players.LocalPlayer.Team == nil and game:GetService(""Players"")[""LocalPlayer""].PlayerGui.Main.ChooseTeam.Visible == true then
			if _G.Teams == ""Pirates"" then
				ry(game:GetService(""Players"").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton)
			elseif _G.Teams == ""Marine"" then
				ry(game:GetService(""Players"").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.TextButton)
			else
				ry(game:GetService(""Players"").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton)
			end
		end
	until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
	wait(1)
	local UserInputService = game:GetService(""UserInputService"")
	local TweenService = game:GetService(""TweenService"")
	local RunService = game:GetService(""RunService"")
	local LocalPlayer = game:GetService(""Players"").LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local HttpService = game:GetService(""HttpService"")
	
	local OrionLib = {
		Elements = {},
		ThemeObjects = {},
		Connections = {},
		Flags = {},
		Themes = {
			Default = {
				Main = Color3.fromRGB(25, 25, 25),
				Second = Color3.fromRGB(32, 32, 32),
				Stroke = Color3.fromRGB(60, 60, 60),
				Divider = Color3.fromRGB(60, 60, 60),
				Text = Color3.fromRGB(240, 240, 240),
				TextDark = Color3.fromRGB(150, 150, 150)
			}
		},
		SelectedTheme = ""Default"",
		Folder = nil,
		SaveCfg = false
	}
	
	--Feather Icons https://github.com/evoincorp/lucideblox/tree/master/src/modules/util - Created by 7kayoh
	local Icons = {}
	
	local Success, Response = pcall(function()
		Icons = HttpService:JSONDecode(game:HttpGetAsync(""https://raw.githubusercontent.com/evoincorp/lucideblox/master/src/modules/util/icons.json"")).icons
	end)
	
	if not Success then
		warn(""\nOrion Library - Failed to load Feather Icons. Error code: "" .. Response .. ""\n"")
	end	
	
	local function GetIcon(IconName)
		if Icons[IconName] ~= nil then
			return Icons[IconName]
		else
			return nil
		end
	end   
	
	local Orion = Instance.new(""ScreenGui"")
	Orion.Name = ""Orion""
	if syn then
		syn.protect_gui(Orion)
		Orion.Parent = game.CoreGui
	else
		Orion.Parent = gethui() or game.CoreGui
	end
	
	if gethui then
		for _, Interface in ipairs(gethui():GetChildren()) do
			if Interface.Name == Orion.Name and Interface ~= Orion then
				Interface:Destroy()
			end
		end
	else
		for _, Interface in ipairs(game.CoreGui:GetChildren()) do
			if Interface.Name == Orion.Name and Interface ~= Orion then
				Interface:Destroy()
			end
		end
	end
	
	function OrionLib:IsRunning()
		if gethui then
			return Orion.Parent == gethui()
		else
			return Orion.Parent == game:GetService(""CoreGui"")
		end
	
	end
	
	local function AddConnection(Signal, Function)
		if (not OrionLib:IsRunning()) then
			return
		end
		local SignalConnect = Signal:Connect(Function)
		table.insert(OrionLib.Connections, SignalConnect)
		return SignalConnect
	end
	
	task.spawn(function()
		while (OrionLib:IsRunning()) do
			wait()
		end
	
		for _, Connection in next, OrionLib.Connections do
			Connection:Disconnect()
		end
	end)
	
	local function MakeDraggable(DragPoint, Main)
		pcall(function()
			local Dragging, DragInput, MousePos, FramePos = false
			AddConnection(DragPoint.InputBegan, function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Dragging = true
					MousePos = Input.Position
					FramePos = Main.Position
	
					Input.Changed:Connect(function()
						if Input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end)
				end
			end)
			AddConnection(DragPoint.InputChanged, function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseMovement then
					DragInput = Input
				end
			end)
			AddConnection(UserInputService.InputChanged, function(Input)
				if Input == DragInput and Dragging then
					local Delta = Input.Position - MousePos
					--TweenService:Create(Main, TweenInfo.new(0.05, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)}):Play()
					Main.Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
				end
			end)
		end)
	end    
	
	local function Create(Name, Properties, Children)
		local Object = Instance.new(Name)
		for i, v in next, Properties or {} do
			Object[i] = v
		end
		for i, v in next, Children or {} do
			v.Parent = Object
		end
		return Object
	end
	
	local function CreateElement(ElementName, ElementFunction)
		OrionLib.Elements[ElementName] = function(...)
			return ElementFunction(...)
		end
	end
	
	local function MakeElement(ElementName, ...)
		local NewElement = OrionLib.Elements[ElementName](...)
		return NewElement
	end
	
	local function SetProps(Element, Props)
		table.foreach(Props, function(Property, Value)
			Element[Property] = Value
		end)
		return Element
	end
	
	local function SetChildren(Element, Children)
		table.foreach(Children, function(_, Child)
			Child.Parent = Element
		end)
		return Element
	end
	
	local function Round(Number, Factor)
		local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
		if Result < 0 then Result = Result + Factor end
		return Result
	end
	
	local function ReturnProperty(Object)
		if Object:IsA(""Frame"") or Object:IsA(""TextButton"") then
			return ""BackgroundColor3""
		end 
		if Object:IsA(""ScrollingFrame"") then
			return ""ScrollBarImageColor3""
		end 
		if Object:IsA(""UIStroke"") then
			return ""Color""
		end 
		if Object:IsA(""TextLabel"") or Object:IsA(""TextBox"") then
			return ""TextColor3""
		end   
		if Object:IsA(""ImageLabel"") or Object:IsA(""ImageButton"") then
			return ""ImageColor3""
		end   
	end
	
	local function AddThemeObject(Object, Type)
		if not OrionLib.ThemeObjects[Type] then
			OrionLib.ThemeObjects[Type] = {}
		end    
		table.insert(OrionLib.ThemeObjects[Type], Object)
		Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Type]
		return Object
	end    
	
	local function SetTheme()
		for Name, Type in pairs(OrionLib.ThemeObjects) do
			for _, Object in pairs(Type) do
				Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Name]
			end    
		end    
	end
	
	local function PackColor(Color)
		return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
	end    
	
	local function UnpackColor(Color)
		return Color3.fromRGB(Color.R, Color.G, Color.B)
	end
	
	local function LoadCfg(Config)
		local Data = HttpService:JSONDecode(Config)
		table.foreach(Data, function(a,b)
			if OrionLib.Flags[a] then
				spawn(function() 
					if OrionLib.Flags[a].Type == ""Colorpicker"" then
						OrionLib.Flags[a]:Set(UnpackColor(b))
					else
						OrionLib.Flags[a]:Set(b)
					end    
				end)
			else
				warn(""Orion Library Config Loader - Could not find "", a ,b)
			end
		end)
	end
	
	local function SaveCfg(Name)
		local Data = {}
		for i,v in pairs(OrionLib.Flags) do
			if v.Save then
				if v.Type == ""Colorpicker"" then
					Data[i] = PackColor(v.Value)
				else
					Data[i] = v.Value
				end
			end	
		end
		writefile(OrionLib.Folder .. ""/"" .. Name .. "".txt"", tostring(HttpService:JSONEncode(Data)))
	end
	
	local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3}
	local BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}
	
	local function CheckKey(Table, Key)
		for _, v in next, Table do
			if v == Key then
				return true
			end
		end
	end
	
	CreateElement(""Corner"", function(Scale, Offset)
		local Corner = Create(""UICorner"", {
			CornerRadius = UDim.new(Scale or 0, Offset or 10)
		})
		return Corner
	end)
	
	CreateElement(""Stroke"", function(Color, Thickness)
		local Stroke = Create(""UIStroke"", {
			Color = Color or Color3.fromRGB(255, 255, 255),
			Thickness = Thickness or 1
		})
		return Stroke
	end)
	
	CreateElement(""List"", function(Scale, Offset)
		local List = Create(""UIListLayout"", {
			SortOrder = Enum.SortOrder.LayoutOrder,
			Padding = UDim.new(Scale or 0, Offset or 0)
		})
		return List
	end)
	
	CreateElement(""Padding"", function(Bottom, Left, Right, Top)
		local Padding = Create(""UIPadding"", {
			PaddingBottom = UDim.new(0, Bottom or 4),
			PaddingLeft = UDim.new(0, Left or 4),
			PaddingRight = UDim.new(0, Right or 4),
			PaddingTop = UDim.new(0, Top or 4)
		})
		return Padding
	end)
	
	CreateElement(""TFrame"", function()
		local TFrame = Create(""Frame"", {
			BackgroundTransparency = 1
		})
		return TFrame
	end)
	
	CreateElement(""Frame"", function(Color)
		local Frame = Create(""Frame"", {
			BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
			BorderSizePixel = 0
		})
		return Frame
	end)
	
	CreateElement(""RoundFrame"", function(Color, Scale, Offset)
		local Frame = Create(""Frame"", {
			BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
			BorderSizePixel = 0
		}, {
			Create(""UICorner"", {
				CornerRadius = UDim.new(Scale, Offset)
			})
		})
		return Frame
	end)
	
	CreateElement(""Button"", function()
		local Button = Create(""TextButton"", {
			Text = """",
			AutoButtonColor = false,
			BackgroundTransparency = 1,
			BorderSizePixel = 0
		})
		return Button
	end)
	
	CreateElement(""ScrollFrame"", function(Color, Width)
		local ScrollFrame = Create(""ScrollingFrame"", {
			BackgroundTransparency = 1,
			MidImage = ""rbxassetid://7445543667"",
			BottomImage = ""rbxassetid://7445543667"",
			TopImage = ""rbxassetid://7445543667"",
			ScrollBarImageColor3 = Color,
			BorderSizePixel = 0,
			ScrollBarThickness = Width,
			CanvasSize = UDim2.new(0, 0, 0, 0)
		})
		return ScrollFrame
	end)
	
	CreateElement(""Image"", function(ImageID)
		local ImageNew = Create(""ImageLabel"", {
			Image = ImageID,
			BackgroundTransparency = 1
		})
	
		if GetIcon(ImageID) ~= nil then
			ImageNew.Image = GetIcon(ImageID)
		end	
	
		return ImageNew
	end)
	
	CreateElement(""ImageButton"", function(ImageID)
		local Image = Create(""ImageButton"", {
			Image = ImageID,
			BackgroundTransparency = 1
		})
		return Image
	end)
	
	CreateElement(""Label"", function(Text, TextSize, Transparency)
		local Label = Create(""TextLabel"", {
			Text = Text or """",
			TextColor3 = Color3.fromRGB(240, 240, 240),
			TextTransparency = Transparency or 0,
			TextSize = TextSize or 15,
			Font = Enum.Font.Gotham,
			RichText = true,
			BackgroundTransparency = 1,
			TextXAlignment = Enum.TextXAlignment.Left
		})
		return Label
	end)
	
	local NotificationHolder = SetProps(SetChildren(MakeElement(""TFrame""), {
		SetProps(MakeElement(""List""), {
			HorizontalAlignment = Enum.HorizontalAlignment.Center,
			SortOrder = Enum.SortOrder.LayoutOrder,
			VerticalAlignment = Enum.VerticalAlignment.Bottom,
			Padding = UDim.new(0, 5)
		})
	}), {
		Position = UDim2.new(1, -25, 1, -25),
		Size = UDim2.new(0, 300, 1, -25),
		AnchorPoint = Vector2.new(1, 1),
		Parent = Orion
	})
	
	function OrionLib:MakeNotification(NotificationConfig)
		spawn(function()
			NotificationConfig.Name = NotificationConfig.Name or ""Notification""
			NotificationConfig.Content = NotificationConfig.Content or ""Test""
			NotificationConfig.Image = NotificationConfig.Image or ""rbxassetid://4384403532""
			NotificationConfig.Time = NotificationConfig.Time or 15
	
			local NotificationParent = SetProps(MakeElement(""TFrame""), {
				Size = UDim2.new(1, 0, 0, 0),
				AutomaticSize = Enum.AutomaticSize.Y,
				Parent = NotificationHolder
			})
	
			local NotificationFrame = SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(25, 25, 25), 0, 10), {
				Parent = NotificationParent, 
				Size = UDim2.new(1, 0, 0, 0),
				Position = UDim2.new(1, -55, 0, 0),
				BackgroundTransparency = 0,
				AutomaticSize = Enum.AutomaticSize.Y
			}), {
				MakeElement(""Stroke"", Color3.fromRGB(93, 93, 93), 1.2),
				MakeElement(""Padding"", 12, 12, 12, 12),
				SetProps(MakeElement(""Image"", NotificationConfig.Image), {
					Size = UDim2.new(0, 20, 0, 20),
					ImageColor3 = Color3.fromRGB(240, 240, 240),
					Name = ""Icon""
				}),
				SetProps(MakeElement(""Label"", NotificationConfig.Name, 15), {
					Size = UDim2.new(1, -30, 0, 20),
					Position = UDim2.new(0, 30, 0, 0),
					Font = Enum.Font.GothamBold,
					Name = ""Title""
				}),
				SetProps(MakeElement(""Label"", NotificationConfig.Content, 14), {
					Size = UDim2.new(1, 0, 0, 0),
					Position = UDim2.new(0, 0, 0, 25),
					Font = Enum.Font.GothamSemibold,
					Name = ""Content"",
					AutomaticSize = Enum.AutomaticSize.Y,
					TextColor3 = Color3.fromRGB(200, 200, 200),
					TextWrapped = true
				})
			})
	
			TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 0, 0, 0)}):Play()
	
			wait(NotificationConfig.Time - 0.88)
			TweenService:Create(NotificationFrame.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
			wait(0.3)
			TweenService:Create(NotificationFrame.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0.9}):Play()
			TweenService:Create(NotificationFrame.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
			TweenService:Create(NotificationFrame.Content, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
			wait(0.05)
	
			NotificationFrame:TweenPosition(UDim2.new(1, 20, 0, 0),'In','Quint',0.8,true)
			wait(1.35)
			NotificationFrame:Destroy()
		end)
	end    
	
	function OrionLib:Init()
		if OrionLib.SaveCfg then	
			pcall(function()
				if isfile(OrionLib.Folder .. ""/"" .. game.GameId .. "".txt"") then
					LoadCfg(readfile(OrionLib.Folder .. ""/"" .. game.GameId .. "".txt""))
					OrionLib:MakeNotification({
						Name = ""Configuration"",
						Content = ""Auto-loaded configuration for the game "" .. game.GameId .. ""."",
						Time = 5
					})
				end
			end)		
		end	
	end	
	
	function OrionLib:MakeWindow(WindowConfig)
		local FirstTab = true
		local Minimized = false
		local Loaded = false
		local UIHidden = false
	
		WindowConfig = WindowConfig or {}
		WindowConfig.Name = WindowConfig.Name or ""Seraphy Premium""
		WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
		WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
		WindowConfig.HidePremium = WindowConfig.HidePremium or false
		if WindowConfig.IntroEnabled == nil then
			WindowConfig.IntroEnabled = true
		end
		WindowConfig.IntroText = WindowConfig.IntroText or ""Seraphy Premium""
		WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
		WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
		WindowConfig.Icon = WindowConfig.Icon or ""rbxassetid://8834748103""
		WindowConfig.IntroIcon = WindowConfig.IntroIcon or ""rbxassetid://8834748103""
		OrionLib.Folder = WindowConfig.ConfigFolder
		OrionLib.SaveCfg = WindowConfig.SaveConfig
	
		if WindowConfig.SaveConfig then
			if not isfolder(WindowConfig.ConfigFolder) then
				makefolder(WindowConfig.ConfigFolder)
			end	
		end
	
		local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement(""ScrollFrame"", Color3.fromRGB(255, 255, 255), 4), {
			Size = UDim2.new(1, 0, 1, -50)
		}), {
			MakeElement(""List""),
			MakeElement(""Padding"", 8, 0, 0, 8)
		}), ""Divider"")
	
		AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
			TabHolder.CanvasSize = UDim2.new(0, 0, 0, TabHolder.UIListLayout.AbsoluteContentSize.Y + 16)
		end)
	
		local CloseBtn = SetChildren(SetProps(MakeElement(""Button""), {
			Size = UDim2.new(0.5, 0, 1, 0),
			Position = UDim2.new(0.5, 0, 0, 0),
			BackgroundTransparency = 1
		}), {
			AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://7072725342""), {
				Position = UDim2.new(0, 9, 0, 6),
				Size = UDim2.new(0, 18, 0, 18)
			}), ""Text"")
		})
	
		local MinimizeBtn = SetChildren(SetProps(MakeElement(""Button""), {
			Size = UDim2.new(0.5, 0, 1, 0),
			BackgroundTransparency = 1
		}), {
			AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://7072719338""), {
				Position = UDim2.new(0, 9, 0, 6),
				Size = UDim2.new(0, 18, 0, 18),
				Name = ""Ico""
			}), ""Text"")
		})
	
		local DragPoint = SetProps(MakeElement(""TFrame""), {
			Size = UDim2.new(1, 0, 0, 50)
		})
	
		local WindowStuff = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 10), {
			Size = UDim2.new(0, 150, 1, -50),
			Position = UDim2.new(0, 0, 0, 50)
		}), {
			AddThemeObject(SetProps(MakeElement(""Frame""), {
				Size = UDim2.new(1, 0, 0, 10),
				Position = UDim2.new(0, 0, 0, 0)
			}), ""Second""), 
			AddThemeObject(SetProps(MakeElement(""Frame""), {
				Size = UDim2.new(0, 10, 1, 0),
				Position = UDim2.new(1, -10, 0, 0)
			}), ""Second""), 
			AddThemeObject(SetProps(MakeElement(""Frame""), {
				Size = UDim2.new(0, 1, 1, 0),
				Position = UDim2.new(1, -1, 0, 0)
			}), ""Stroke""), 
			TabHolder,
			SetChildren(SetProps(MakeElement(""TFrame""), {
				Size = UDim2.new(1, 0, 0, 50),
				Position = UDim2.new(0, 0, 1, -50)
			}), {
				AddThemeObject(SetProps(MakeElement(""Frame""), {
					Size = UDim2.new(1, 0, 0, 1)
				}), ""Stroke""), 
				AddThemeObject(SetChildren(SetProps(MakeElement(""Frame""), {
					AnchorPoint = Vector2.new(0, 0.5),
					Size = UDim2.new(0, 32, 0, 32),
					Position = UDim2.new(0, 10, 0.5, 0)
				}), {
					SetProps(MakeElement(""Image"", ""https://www.roblox.com/headshot-thumbnail/image?userId="".. LocalPlayer.UserId ..""&width=420&height=420&format=png""), {
						Size = UDim2.new(1, 0, 1, 0)
					}),
					AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://4031889928""), {
						Size = UDim2.new(1, 0, 1, 0),
					}), ""Second""),
					MakeElement(""Corner"", 1)
				}), ""Divider""),
				SetChildren(SetProps(MakeElement(""TFrame""), {
					AnchorPoint = Vector2.new(0, 0.5),
					Size = UDim2.new(0, 32, 0, 32),
					Position = UDim2.new(0, 10, 0.5, 0)
				}), {
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					MakeElement(""Corner"", 1)
				}),
				AddThemeObject(SetProps(MakeElement(""Label"", LocalPlayer.DisplayName, WindowConfig.HidePremium and 14 or 13), {
					Size = UDim2.new(1, -60, 0, 13),
					Position = WindowConfig.HidePremium and UDim2.new(0, 50, 0, 19) or UDim2.new(0, 50, 0, 12),
					Font = Enum.Font.GothamBold,
					ClipsDescendants = true
				}), ""Text""),
				AddThemeObject(SetProps(MakeElement(""Label"", """", 12), {
					Size = UDim2.new(1, -60, 0, 12),
					Position = UDim2.new(0, 50, 1, -25),
					Visible = not WindowConfig.HidePremium
				}), ""TextDark"")
			}),
		}), ""Second"")
	
		local WindowName = AddThemeObject(SetProps(MakeElement(""Label"", WindowConfig.Name, 14), {
			Size = UDim2.new(1, -30, 2, 0),
			Position = UDim2.new(0, 25, 0, -24),
			Font = Enum.Font.GothamBlack,
			TextSize = 20
		}), ""Text"")
	
		local WindowTopBarLine = AddThemeObject(SetProps(MakeElement(""Frame""), {
			Size = UDim2.new(1, 0, 0, 1),
			Position = UDim2.new(0, 0, 1, -1)
		}), ""Stroke"")
	
		local MainWindow = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 10), {
			Parent = Orion,
			Position = UDim2.new(0.5, -307, 0.5, -172),
			Size = UDim2.new(0, 615, 0, 344),
			ClipsDescendants = true
		}), {
			--SetProps(MakeElement(""Image"", ""rbxassetid://3523728077""), {
			--	AnchorPoint = Vector2.new(0.5, 0.5),
			--	Position = UDim2.new(0.5, 0, 0.5, 0),
			--	Size = UDim2.new(1, 80, 1, 320),
			--	ImageColor3 = Color3.fromRGB(33, 33, 33),
			--	ImageTransparency = 0.7
			--}),
			SetChildren(SetProps(MakeElement(""TFrame""), {
				Size = UDim2.new(1, 0, 0, 50),
				Name = ""TopBar""
			}), {
				WindowName,
				WindowTopBarLine,
				AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 7), {
					Size = UDim2.new(0, 70, 0, 30),
					Position = UDim2.new(1, -90, 0, 10)
				}), {
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					AddThemeObject(SetProps(MakeElement(""Frame""), {
						Size = UDim2.new(0, 1, 1, 0),
						Position = UDim2.new(0.5, 0, 0, 0)
					}), ""Stroke""), 
					CloseBtn,
					MinimizeBtn
				}), ""Second""), 
			}),
			DragPoint,
			WindowStuff
		}), ""Main"")
	
		if WindowConfig.ShowIcon then
			WindowName.Position = UDim2.new(0, 50, 0, -24)
			local WindowIcon = SetProps(MakeElement(""Image"", WindowConfig.Icon), {
				Size = UDim2.new(0, 20, 0, 20),
				Position = UDim2.new(0, 25, 0, 15)
			})
			WindowIcon.Parent = MainWindow.TopBar
		end	
	
		MakeDraggable(DragPoint, MainWindow)
	
		AddConnection(CloseBtn.MouseButton1Up, function()
			MainWindow.Visible = false
			UIHidden = true
			OrionLib:MakeNotification({
				Name = ""Interface Hidden"",
				Content = ""Tap RightShift to reopen the interface"",
				Time = 5
			})
			WindowConfig.CloseCallback()
		end)
	
		AddConnection(UserInputService.InputBegan, function(Input)
			if Input.KeyCode == Enum.KeyCode.RightShift and UIHidden then
				MainWindow.Visible = true
			end
		end)
	
		AddConnection(MinimizeBtn.MouseButton1Up, function()
			if Minimized then
				TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 615, 0, 344)}):Play()
				MinimizeBtn.Ico.Image = ""rbxassetid://7072719338""
				wait(.02)
				MainWindow.ClipsDescendants = false
				WindowStuff.Visible = true
				WindowTopBarLine.Visible = true
			else
				MainWindow.ClipsDescendants = true
				WindowTopBarLine.Visible = false
				MinimizeBtn.Ico.Image = ""rbxassetid://7072720870""
	
				TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, WindowName.TextBounds.X + 140, 0, 50)}):Play()
				wait(0.1)
				WindowStuff.Visible = false	
			end
			Minimized = not Minimized    
		end)
	
		local function LoadSequence()
			MainWindow.Visible = false
			local LoadSequenceLogo = SetProps(MakeElement(""Image"", WindowConfig.IntroIcon), {
				Parent = Orion,
				AnchorPoint = Vector2.new(0.5, 0.5),
				Position = UDim2.new(0.5, 0, 0.4, 0),
				Size = UDim2.new(0, 28, 0, 28),
				ImageColor3 = Color3.fromRGB(255, 255, 255),
				ImageTransparency = 1
			})
	
			local LoadSequenceText = SetProps(MakeElement(""Label"", WindowConfig.IntroText, 14), {
				Parent = Orion,
				Size = UDim2.new(1, 0, 1, 0),
				AnchorPoint = Vector2.new(0.5, 0.5),
				Position = UDim2.new(0.5, 19, 0.5, 0),
				TextXAlignment = Enum.TextXAlignment.Center,
				Font = Enum.Font.GothamBold,
				TextTransparency = 1
			})
	
			TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency = 0, Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
			wait(0.8)
			TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -(LoadSequenceText.TextBounds.X/2), 0.5, 0)}):Play()
			wait(0.3)
			TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
			wait(2)
			TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
			MainWindow.Visible = true
			LoadSequenceLogo:Destroy()
			LoadSequenceText:Destroy()
		end 
	
		if WindowConfig.IntroEnabled then
			LoadSequence()
		end	
	
		local TabFunction = {}
		function TabFunction:MakeTab(TabConfig)
			TabConfig = TabConfig or {}
			TabConfig.Name = TabConfig.Name or ""Tab""
			TabConfig.Icon = TabConfig.Icon or """"
			TabConfig.PremiumOnly = TabConfig.PremiumOnly or false
	
			local TabFrame = SetChildren(SetProps(MakeElement(""Button""), {
				Size = UDim2.new(1, 0, 0, 30),
				Parent = TabHolder
			}), {
				AddThemeObject(SetProps(MakeElement(""Image"", TabConfig.Icon), {
					AnchorPoint = Vector2.new(0, 0.5),
					Size = UDim2.new(0, 18, 0, 18),
					Position = UDim2.new(0, 10, 0.5, 0),
					ImageTransparency = 0.4,
					Name = ""Ico""
				}), ""Text""),
				AddThemeObject(SetProps(MakeElement(""Label"", TabConfig.Name, 14), {
					Size = UDim2.new(1, -35, 1, 0),
					Position = UDim2.new(0, 35, 0, 0),
					Font = Enum.Font.GothamSemibold,
					TextTransparency = 0.4,
					Name = ""Title""
				}), ""Text"")
			})
	
			if GetIcon(TabConfig.Icon) ~= nil then
				TabFrame.Ico.Image = GetIcon(TabConfig.Icon)
			end	
	
			local Container = AddThemeObject(SetChildren(SetProps(MakeElement(""ScrollFrame"", Color3.fromRGB(255, 255, 255), 5), {
				Size = UDim2.new(1, -150, 1, -50),
				Position = UDim2.new(0, 150, 0, 50),
				Parent = MainWindow,
				Visible = false,
				Name = ""ItemContainer""
			}), {
				MakeElement(""List"", 0, 6),
				MakeElement(""Padding"", 15, 10, 10, 15)
			}), ""Divider"")
	
			AddConnection(Container.UIListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
				Container.CanvasSize = UDim2.new(0, 0, 0, Container.UIListLayout.AbsoluteContentSize.Y + 30)
			end)
	
			if FirstTab then
				FirstTab = false
				TabFrame.Ico.ImageTransparency = 0
				TabFrame.Title.TextTransparency = 0
				TabFrame.Title.Font = Enum.Font.GothamBlack
				Container.Visible = true
			end    
	
			AddConnection(TabFrame.MouseButton1Click, function()
				for _, Tab in next, TabHolder:GetChildren() do
					if Tab:IsA(""TextButton"") then
						Tab.Title.Font = Enum.Font.GothamSemibold
						TweenService:Create(Tab.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0.4}):Play()
						TweenService:Create(Tab.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
					end    
				end
				for _, ItemContainer in next, MainWindow:GetChildren() do
					if ItemContainer.Name == ""ItemContainer"" then
						ItemContainer.Visible = false
					end    
				end  
				TweenService:Create(TabFrame.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
				TweenService:Create(TabFrame.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
				TabFrame.Title.Font = Enum.Font.GothamBlack
				Container.Visible = true   
			end)
	
			local function GetElements(ItemParent)
				local ElementFunction = {}
				function ElementFunction:AddLabel(Text)
					local LabelFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 30),
						BackgroundTransparency = 0.7,
						Parent = ItemParent
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", Text, 15), {
							Size = UDim2.new(1, -12, 1, 0),
							Position = UDim2.new(0, 12, 0, 0),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke"")
					}), ""Second"")
	
					local LabelFunction = {}
					function LabelFunction:Set(ToChange)
						LabelFrame.Content.Text = ToChange
					end
					return LabelFunction
				end
				function ElementFunction:AddParagraph(Text, Content)
					Text = Text or ""Text""
					Content = Content or ""Content""
	
					local ParagraphFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 30),
						BackgroundTransparency = 0.7,
						Parent = ItemParent
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", Text, 15), {
							Size = UDim2.new(1, -12, 0, 14),
							Position = UDim2.new(0, 12, 0, 10),
							Font = Enum.Font.GothamBold,
							Name = ""Title""
						}), ""Text""),
						AddThemeObject(SetProps(MakeElement(""Label"", """", 13), {
							Size = UDim2.new(1, -24, 0, 0),
							Position = UDim2.new(0, 12, 0, 26),
							Font = Enum.Font.GothamSemibold,
							Name = ""Content"",
							TextWrapped = true
						}), ""TextDark""),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke"")
					}), ""Second"")
	
					AddConnection(ParagraphFrame.Content:GetPropertyChangedSignal(""Text""), function()
						ParagraphFrame.Content.Size = UDim2.new(1, -24, 0, ParagraphFrame.Content.TextBounds.Y)
						ParagraphFrame.Size = UDim2.new(1, 0, 0, ParagraphFrame.Content.TextBounds.Y + 35)
					end)
	
					ParagraphFrame.Content.Text = Content
	
					local ParagraphFunction = {}
					function ParagraphFunction:Set(ToChange)
						ParagraphFrame.Content.Text = ToChange
					end
					return ParagraphFunction
				end    
				function ElementFunction:AddButton(ButtonConfig)
					ButtonConfig = ButtonConfig or {}
					ButtonConfig.Name = ButtonConfig.Name or ""Button""
					ButtonConfig.Callback = ButtonConfig.Callback or function() end
					ButtonConfig.Icon = ButtonConfig.Icon or ""rbxassetid://3944703587""
	
					local Button = {}
	
					local Click = SetProps(MakeElement(""Button""), {
						Size = UDim2.new(1, 0, 1, 0)
					})
	
					local ButtonFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 33),
						Parent = ItemParent
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", ButtonConfig.Name, 15), {
							Size = UDim2.new(1, -12, 1, 0),
							Position = UDim2.new(0, 12, 0, 0),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						AddThemeObject(SetProps(MakeElement(""Image"", ButtonConfig.Icon), {
							Size = UDim2.new(0, 20, 0, 20),
							Position = UDim2.new(1, -30, 0, 7),
						}), ""TextDark""),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						Click
					}), ""Second"")
	
					AddConnection(Click.MouseEnter, function()
						TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					end)
	
					AddConnection(Click.MouseLeave, function()
						TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
					end)
	
					AddConnection(Click.MouseButton1Up, function()
						TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
						spawn(function()
							ButtonConfig.Callback()
						end)
					end)
	
					AddConnection(Click.MouseButton1Down, function()
						TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
					end)
	
					function Button:Set(ButtonText)
						ButtonFrame.Content.Text = ButtonText
					end	
	
					return Button
				end    
				function ElementFunction:AddToggle(ToggleConfig)
					ToggleConfig = ToggleConfig or {}
					ToggleConfig.Name = ToggleConfig.Name or ""Toggle""
					ToggleConfig.Default = ToggleConfig.Default or false
					ToggleConfig.Callback = ToggleConfig.Callback or function() end
					ToggleConfig.Color = ToggleConfig.Color or Color3.fromRGB(9, 99, 195)
					ToggleConfig.Flag = ToggleConfig.Flag or nil
					ToggleConfig.Save = ToggleConfig.Save or false
	
					local Toggle = {Value = ToggleConfig.Default, Save = ToggleConfig.Save}
	
					local Click = SetProps(MakeElement(""Button""), {
						Size = UDim2.new(1, 0, 1, 0)
					})
	
					local ToggleBox = SetChildren(SetProps(MakeElement(""RoundFrame"", ToggleConfig.Color, 0, 4), {
						Size = UDim2.new(0, 24, 0, 24),
						Position = UDim2.new(1, -24, 0.5, 0),
						AnchorPoint = Vector2.new(0.5, 0.5)
					}), {
						SetProps(MakeElement(""Stroke""), {
							Color = ToggleConfig.Color,
							Name = ""Stroke"",
							Transparency = 0.5
						}),
						SetProps(MakeElement(""Image"", ""rbxassetid://3944680095""), {
							Size = UDim2.new(0, 20, 0, 20),
							AnchorPoint = Vector2.new(0.5, 0.5),
							Position = UDim2.new(0.5, 0, 0.5, 0),
							ImageColor3 = Color3.fromRGB(255, 255, 255),
							Name = ""Ico""
						}),
					})
	
					local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 38),
						Parent = ItemParent
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", ToggleConfig.Name, 15), {
							Size = UDim2.new(1, -12, 1, 0),
							Position = UDim2.new(0, 12, 0, 0),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						ToggleBox,
						Click
					}), ""Second"")
	
					function Toggle:Set(Value)
						Toggle.Value = Value
						TweenService:Create(ToggleBox, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Divider}):Play()
						TweenService:Create(ToggleBox.Stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Stroke}):Play()
						TweenService:Create(ToggleBox.Ico, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = Toggle.Value and 0 or 1, Size = Toggle.Value and UDim2.new(0, 20, 0, 20) or UDim2.new(0, 8, 0, 8)}):Play()
						ToggleConfig.Callback(Toggle.Value)
					end    
	
					Toggle:Set(Toggle.Value)
	
					AddConnection(Click.MouseEnter, function()
						TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					end)
	
					AddConnection(Click.MouseLeave, function()
						TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
					end)
	
					AddConnection(Click.MouseButton1Up, function()
						TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
						SaveCfg(game.GameId)
						Toggle:Set(not Toggle.Value)
					end)
	
					AddConnection(Click.MouseButton1Down, function()
						TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
					end)
	
					if ToggleConfig.Flag then
						OrionLib.Flags[ToggleConfig.Flag] = Toggle
					end	
					return Toggle
				end  
				function ElementFunction:AddSlider(SliderConfig)
					SliderConfig = SliderConfig or {}
					SliderConfig.Name = SliderConfig.Name or ""Slider""
					SliderConfig.Min = SliderConfig.Min or 0
					SliderConfig.Max = SliderConfig.Max or 100
					SliderConfig.Increment = SliderConfig.Increment or 1
					SliderConfig.Default = SliderConfig.Default or 50
					SliderConfig.Callback = SliderConfig.Callback or function() end
					SliderConfig.ValueName = SliderConfig.ValueName or """"
					SliderConfig.Color = SliderConfig.Color or Color3.fromRGB(9, 149, 98)
					SliderConfig.Flag = SliderConfig.Flag or nil
					SliderConfig.Save = SliderConfig.Save or false
	
					local Slider = {Value = SliderConfig.Default, Save = SliderConfig.Save}
					local Dragging = false
	
					local SliderDrag = SetChildren(SetProps(MakeElement(""RoundFrame"", SliderConfig.Color, 0, 5), {
						Size = UDim2.new(0, 0, 1, 0),
						BackgroundTransparency = 0.3,
						ClipsDescendants = true
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", ""value"", 13), {
							Size = UDim2.new(1, -12, 0, 14),
							Position = UDim2.new(0, 12, 0, 6),
							Font = Enum.Font.GothamBold,
							Name = ""Value"",
							TextTransparency = 0
						}), ""Text"")
					})
	
					local SliderBar = SetChildren(SetProps(MakeElement(""RoundFrame"", SliderConfig.Color, 0, 5), {
						Size = UDim2.new(1, -24, 0, 26),
						Position = UDim2.new(0, 12, 0, 30),
						BackgroundTransparency = 0.9
					}), {
						SetProps(MakeElement(""Stroke""), {
							Color = SliderConfig.Color
						}),
						AddThemeObject(SetProps(MakeElement(""Label"", ""value"", 13), {
							Size = UDim2.new(1, -12, 0, 14),
							Position = UDim2.new(0, 12, 0, 6),
							Font = Enum.Font.GothamBold,
							Name = ""Value"",
							TextTransparency = 0.8
						}), ""Text""),
						SliderDrag
					})
	
					local SliderFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
						Size = UDim2.new(1, 0, 0, 65),
						Parent = ItemParent
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", SliderConfig.Name, 15), {
							Size = UDim2.new(1, -12, 0, 14),
							Position = UDim2.new(0, 12, 0, 10),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						SliderBar
					}), ""Second"")
	
					SliderBar.InputBegan:Connect(function(Input)
						if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
							Dragging = true 
						end 
					end)
					SliderBar.InputEnded:Connect(function(Input) 
						if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
							Dragging = false 
						end 
					end)
	
					UserInputService.InputChanged:Connect(function(Input)
						if Dragging and Input.UserInputType == Enum.UserInputType.MouseMovement then 
							local SizeScale = math.clamp((Input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
							Slider:Set(SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * SizeScale)) 
							SaveCfg(game.GameId)
						end
					end)
	
					function Slider:Set(Value)
						self.Value = math.clamp(Round(Value, SliderConfig.Increment), SliderConfig.Min, SliderConfig.Max)
						TweenService:Create(SliderDrag,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = UDim2.fromScale((self.Value - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min), 1)}):Play()
						SliderBar.Value.Text = tostring(self.Value) .. "" "" .. SliderConfig.ValueName
						SliderDrag.Value.Text = tostring(self.Value) .. "" "" .. SliderConfig.ValueName
						SliderConfig.Callback(self.Value)
					end      
	
					Slider:Set(Slider.Value)
					if SliderConfig.Flag then				
						OrionLib.Flags[SliderConfig.Flag] = Slider
					end
					return Slider
				end  
				function ElementFunction:AddDropdown(DropdownConfig)
					DropdownConfig = DropdownConfig or {}
					DropdownConfig.Name = DropdownConfig.Name or ""Dropdown""
					DropdownConfig.Options = DropdownConfig.Options or {}
					DropdownConfig.Default = DropdownConfig.Default or """"
					DropdownConfig.Callback = DropdownConfig.Callback or function() end
					DropdownConfig.Flag = DropdownConfig.Flag or nil
					DropdownConfig.Save = DropdownConfig.Save or false
	
					local Dropdown = {Value = DropdownConfig.Default, Options = DropdownConfig.Options, Buttons = {}, Toggled = false, Type = ""Dropdown"", Save = DropdownConfig.Save}
					local MaxElements = 5
	
					if not table.find(Dropdown.Options, Dropdown.Value) then
						Dropdown.Value = ""...""
					end
	
					local DropdownList = MakeElement(""List"")
	
					local DropdownContainer = AddThemeObject(SetProps(SetChildren(MakeElement(""ScrollFrame"", Color3.fromRGB(40, 40, 40), 4), {
						DropdownList
					}), {
						Parent = ItemParent,
						Position = UDim2.new(0, 0, 0, 38),
						Size = UDim2.new(1, 0, 1, -38),
						ClipsDescendants = true
					}), ""Divider"")
	
					local Click = SetProps(MakeElement(""Button""), {
						Size = UDim2.new(1, 0, 1, 0)
					})
	
					local DropdownFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 38),
						Parent = ItemParent,
						ClipsDescendants = true
					}), {
						DropdownContainer,
						SetProps(SetChildren(MakeElement(""TFrame""), {
							AddThemeObject(SetProps(MakeElement(""Label"", DropdownConfig.Name, 15), {
								Size = UDim2.new(1, -12, 1, 0),
								Position = UDim2.new(0, 12, 0, 0),
								Font = Enum.Font.GothamBold,
								Name = ""Content""
							}), ""Text""),
							AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://7072706796""), {
								Size = UDim2.new(0, 20, 0, 20),
								AnchorPoint = Vector2.new(0, 0.5),
								Position = UDim2.new(1, -30, 0.5, 0),
								ImageColor3 = Color3.fromRGB(240, 240, 240),
								Name = ""Ico""
							}), ""TextDark""),
							AddThemeObject(SetProps(MakeElement(""Label"", ""Selected"", 13), {
								Size = UDim2.new(1, -40, 1, 0),
								Font = Enum.Font.Gotham,
								Name = ""Selected"",
								TextXAlignment = Enum.TextXAlignment.Right
							}), ""TextDark""),
							AddThemeObject(SetProps(MakeElement(""Frame""), {
								Size = UDim2.new(1, 0, 0, 1),
								Position = UDim2.new(0, 0, 1, -1),
								Name = ""Line"",
								Visible = false
							}), ""Stroke""), 
							Click
						}), {
							Size = UDim2.new(1, 0, 0, 38),
							ClipsDescendants = true,
							Name = ""F""
						}),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						MakeElement(""Corner"")
					}), ""Second"")
	
					AddConnection(DropdownList:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
						DropdownContainer.CanvasSize = UDim2.new(0, 0, 0, DropdownList.AbsoluteContentSize.Y)
					end)  
	
					local function AddOptions(Options)
						for _, Option in pairs(Options) do
							local OptionBtn = AddThemeObject(SetProps(SetChildren(MakeElement(""Button"", Color3.fromRGB(40, 40, 40)), {
								MakeElement(""Corner"", 0, 6),
								AddThemeObject(SetProps(MakeElement(""Label"", Option, 13, 0.4), {
									Position = UDim2.new(0, 8, 0, 0),
									Size = UDim2.new(1, -8, 1, 0),
									Name = ""Title""
								}), ""Text"")
							}), {
								Parent = DropdownContainer,
								Size = UDim2.new(1, 0, 0, 28),
								BackgroundTransparency = 1,
								ClipsDescendants = true
							}), ""Divider"")
	
							AddConnection(OptionBtn.MouseButton1Click, function()
								Dropdown:Set(Option)
								SaveCfg(game.GameId)
							end)
	
							Dropdown.Buttons[Option] = OptionBtn
						end
					end	
	
					function Dropdown:Refresh(Options, Delete)
						if Delete then
							for _,v in pairs(Dropdown.Buttons) do
								v:Destroy()
							end    
							table.clear(Dropdown.Options)
							table.clear(Dropdown.Buttons)
						end
						Dropdown.Options = Options
						AddOptions(Dropdown.Options)
					end  
	
					function Dropdown:Set(Value)
						if not table.find(Dropdown.Options, Value) then
							Dropdown.Value = ""...""
							DropdownFrame.F.Selected.Text = Dropdown.Value
							for _, v in pairs(Dropdown.Buttons) do
								TweenService:Create(v,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 1}):Play()
								TweenService:Create(v.Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play()
							end	
							return
						end
	
						Dropdown.Value = Value
						DropdownFrame.F.Selected.Text = Dropdown.Value
	
						for _, v in pairs(Dropdown.Buttons) do
							TweenService:Create(v,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 1}):Play()
							TweenService:Create(v.Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play()
						end	
						TweenService:Create(Dropdown.Buttons[Value],TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 0}):Play()
						TweenService:Create(Dropdown.Buttons[Value].Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0}):Play()
						return DropdownConfig.Callback(Dropdown.Value)
					end
	
					AddConnection(Click.MouseButton1Click, function()
						Dropdown.Toggled = not Dropdown.Toggled
						DropdownFrame.F.Line.Visible = Dropdown.Toggled
						TweenService:Create(DropdownFrame.F.Ico,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Rotation = Dropdown.Toggled and 180 or 0}):Play()
						if #Dropdown.Options > MaxElements then
							TweenService:Create(DropdownFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1, 0, 0, 38 + (MaxElements * 28)) or UDim2.new(1, 0, 0, 38)}):Play()
						else
							TweenService:Create(DropdownFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1, 0, 0, DropdownList.AbsoluteContentSize.Y + 38) or UDim2.new(1, 0, 0, 38)}):Play()
						end
					end)
	
					Dropdown:Refresh(Dropdown.Options, false)
					Dropdown:Set(Dropdown.Value)
					if DropdownConfig.Flag then				
						OrionLib.Flags[DropdownConfig.Flag] = Dropdown
					end
					return Dropdown
				end
				function ElementFunction:AddBind(BindConfig)
					BindConfig.Name = BindConfig.Name or ""Bind""
					BindConfig.Default = BindConfig.Default or Enum.KeyCode.Unknown
					BindConfig.Hold = BindConfig.Hold or false
					BindConfig.Callback = BindConfig.Callback or function() end
					BindConfig.Flag = BindConfig.Flag or nil
					BindConfig.Save = BindConfig.Save or false
	
					local Bind = {Value, Binding = false, Type = ""Bind"", Save = BindConfig.Save}
					local Holding = false
	
					local Click = SetProps(MakeElement(""Button""), {
						Size = UDim2.new(1, 0, 1, 0)
					})
	
					local BindBox = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
						Size = UDim2.new(0, 24, 0, 24),
						Position = UDim2.new(1, -12, 0.5, 0),
						AnchorPoint = Vector2.new(1, 0.5)
					}), {
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						AddThemeObject(SetProps(MakeElement(""Label"", BindConfig.Name, 14), {
							Size = UDim2.new(1, 0, 1, 0),
							Font = Enum.Font.GothamBold,
							TextXAlignment = Enum.TextXAlignment.Center,
							Name = ""Value""
						}), ""Text"")
					}), ""Main"")
	
					local BindFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 38),
						Parent = ItemParent
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", BindConfig.Name, 15), {
							Size = UDim2.new(1, -12, 1, 0),
							Position = UDim2.new(0, 12, 0, 0),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						BindBox,
						Click
					}), ""Second"")
	
					AddConnection(BindBox.Value:GetPropertyChangedSignal(""Text""), function()
						--BindBox.Size = UDim2.new(0, BindBox.Value.TextBounds.X + 16, 0, 24)
						TweenService:Create(BindBox, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, BindBox.Value.TextBounds.X + 16, 0, 24)}):Play()
					end)
	
					AddConnection(Click.InputEnded, function(Input)
						if Input.UserInputType == Enum.UserInputType.MouseButton1 then
							if Bind.Binding then return end
							Bind.Binding = true
							BindBox.Value.Text = """"
						end
					end)
	
					AddConnection(UserInputService.InputBegan, function(Input)
						if UserInputService:GetFocusedTextBox() then return end
						if (Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value) and not Bind.Binding then
							if BindConfig.Hold then
								Holding = true
								BindConfig.Callback(Holding)
							else
								BindConfig.Callback()
							end
						elseif Bind.Binding then
							local Key
							pcall(function()
								if not CheckKey(BlacklistedKeys, Input.KeyCode) then
									Key = Input.KeyCode
								end
							end)
							pcall(function()
								if CheckKey(WhitelistedMouse, Input.UserInputType) and not Key then
									Key = Input.UserInputType
								end
							end)
							Key = Key or Bind.Value
							Bind:Set(Key)
							SaveCfg(game.GameId)
						end
					end)
	
					AddConnection(UserInputService.InputEnded, function(Input)
						if Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value then
							if BindConfig.Hold and Holding then
								Holding = false
								BindConfig.Callback(Holding)
							end
						end
					end)
	
					AddConnection(Click.MouseEnter, function()
						TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					end)
	
					AddConnection(Click.MouseLeave, function()
						TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
					end)
	
					AddConnection(Click.MouseButton1Up, function()
						TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					end)
	
					AddConnection(Click.MouseButton1Down, function()
						TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
					end)
	
					function Bind:Set(Key)
						Bind.Binding = false
						Bind.Value = Key or Bind.Value
						Bind.Value = Bind.Value.Name or Bind.Value
						BindBox.Value.Text = Bind.Value
					end
	
					Bind:Set(BindConfig.Default)
					if BindConfig.Flag then				
						OrionLib.Flags[BindConfig.Flag] = Bind
					end
					return Bind
				end  
				function ElementFunction:AddTextbox(TextboxConfig)
					TextboxConfig = TextboxConfig or {}
					TextboxConfig.Name = TextboxConfig.Name or ""Textbox""
					TextboxConfig.Default = TextboxConfig.Default or """"
					TextboxConfig.TextDisappear = TextboxConfig.TextDisappear or false
					TextboxConfig.Callback = TextboxConfig.Callback or function() end
	
					local Click = SetProps(MakeElement(""Button""), {
						Size = UDim2.new(1, 0, 1, 0)
					})
	
					local TextboxActual = AddThemeObject(Create(""TextBox"", {
						Size = UDim2.new(1, 0, 1, 0),
						BackgroundTransparency = 1,
						TextColor3 = Color3.fromRGB(255, 255, 255),
						PlaceholderColor3 = Color3.fromRGB(210,210,210),
						PlaceholderText = ""Input"",
						Font = Enum.Font.GothamSemibold,
						TextXAlignment = Enum.TextXAlignment.Center,
						TextSize = 14,
						ClearTextOnFocus = false
					}), ""Text"")
	
					local TextContainer = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
						Size = UDim2.new(0, 24, 0, 24),
						Position = UDim2.new(1, -12, 0.5, 0),
						AnchorPoint = Vector2.new(1, 0.5)
					}), {
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						TextboxActual
					}), ""Main"")
	
	
					local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 38),
						Parent = ItemParent
					}), {
						AddThemeObject(SetProps(MakeElement(""Label"", TextboxConfig.Name, 15), {
							Size = UDim2.new(1, -12, 1, 0),
							Position = UDim2.new(0, 12, 0, 0),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
						TextContainer,
						Click
					}), ""Second"")
	
					AddConnection(TextboxActual:GetPropertyChangedSignal(""Text""), function()
						--TextContainer.Size = UDim2.new(0, TextboxActual.TextBounds.X + 16, 0, 24)
						TweenService:Create(TextContainer, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, TextboxActual.TextBounds.X + 16, 0, 24)}):Play()
					end)
	
					AddConnection(TextboxActual.FocusLost, function()
						TextboxConfig.Callback(TextboxActual.Text)
						if TextboxConfig.TextDisappear then
							TextboxActual.Text = """"
						end	
					end)
	
					TextboxActual.Text = TextboxConfig.Default
	
					AddConnection(Click.MouseEnter, function()
						TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					end)
	
					AddConnection(Click.MouseLeave, function()
						TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
					end)
	
					AddConnection(Click.MouseButton1Up, function()
						TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
						TextboxActual:CaptureFocus()
					end)
	
					AddConnection(Click.MouseButton1Down, function()
						TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
					end)
				end 
				function ElementFunction:AddColorpicker(ColorpickerConfig)
					ColorpickerConfig = ColorpickerConfig or {}
					ColorpickerConfig.Name = ColorpickerConfig.Name or ""Colorpicker""
					ColorpickerConfig.Default = ColorpickerConfig.Default or Color3.fromRGB(255,255,255)
					ColorpickerConfig.Callback = ColorpickerConfig.Callback or function() end
					ColorpickerConfig.Flag = ColorpickerConfig.Flag or nil
					ColorpickerConfig.Save = ColorpickerConfig.Save or false
	
					local ColorH, ColorS, ColorV = 1, 1, 1
					local Colorpicker = {Value = ColorpickerConfig.Default, Toggled = false, Type = ""Colorpicker"", Save = ColorpickerConfig.Save}
	
					local ColorSelection = Create(""ImageLabel"", {
						Size = UDim2.new(0, 18, 0, 18),
						Position = UDim2.new(select(3, Color3.toHSV(Colorpicker.Value))),
						ScaleType = Enum.ScaleType.Fit,
						AnchorPoint = Vector2.new(0.5, 0.5),
						BackgroundTransparency = 1,
						Image = ""http://www.roblox.com/asset/?id=4805639000""
					})
	
					local HueSelection = Create(""ImageLabel"", {
						Size = UDim2.new(0, 18, 0, 18),
						Position = UDim2.new(0.5, 0, 1 - select(1, Color3.toHSV(Colorpicker.Value))),
						ScaleType = Enum.ScaleType.Fit,
						AnchorPoint = Vector2.new(0.5, 0.5),
						BackgroundTransparency = 1,
						Image = ""http://www.roblox.com/asset/?id=4805639000""
					})
	
					local Color = Create(""ImageLabel"", {
						Size = UDim2.new(1, -25, 1, 0),
						Visible = false,
						Image = ""rbxassetid://4155801252""
					}, {
						Create(""UICorner"", {CornerRadius = UDim.new(0, 5)}),
						ColorSelection
					})
	
					local Hue = Create(""Frame"", {
						Size = UDim2.new(0, 20, 1, 0),
						Position = UDim2.new(1, -20, 0, 0),
						Visible = false
					}, {
						Create(""UIGradient"", {Rotation = 270, Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)), ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))},}),
						Create(""UICorner"", {CornerRadius = UDim.new(0, 5)}),
						HueSelection
					})
	
					local ColorpickerContainer = Create(""Frame"", {
						Position = UDim2.new(0, 0, 0, 32),
						Size = UDim2.new(1, 0, 1, -32),
						BackgroundTransparency = 1,
						ClipsDescendants = true
					}, {
						Hue,
						Color,
						Create(""UIPadding"", {
							PaddingLeft = UDim.new(0, 35),
							PaddingRight = UDim.new(0, 35),
							PaddingBottom = UDim.new(0, 10),
							PaddingTop = UDim.new(0, 17)
						})
					})
	
					local Click = SetProps(MakeElement(""Button""), {
						Size = UDim2.new(1, 0, 1, 0)
					})
	
					local ColorpickerBox = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
						Size = UDim2.new(0, 24, 0, 24),
						Position = UDim2.new(1, -12, 0.5, 0),
						AnchorPoint = Vector2.new(1, 0.5)
					}), {
						AddThemeObject(MakeElement(""Stroke""), ""Stroke"")
					}), ""Main"")
	
					local ColorpickerFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, 0, 0, 38),
						Parent = ItemParent
					}), {
						SetProps(SetChildren(MakeElement(""TFrame""), {
							AddThemeObject(SetProps(MakeElement(""Label"", ColorpickerConfig.Name, 15), {
								Size = UDim2.new(1, -12, 1, 0),
								Position = UDim2.new(0, 12, 0, 0),
								Font = Enum.Font.GothamBold,
								Name = ""Content""
							}), ""Text""),
							ColorpickerBox,
							Click,
							AddThemeObject(SetProps(MakeElement(""Frame""), {
								Size = UDim2.new(1, 0, 0, 1),
								Position = UDim2.new(0, 0, 1, -1),
								Name = ""Line"",
								Visible = false
							}), ""Stroke""), 
						}), {
							Size = UDim2.new(1, 0, 0, 38),
							ClipsDescendants = true,
							Name = ""F""
						}),
						ColorpickerContainer,
						AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					}), ""Second"")
	
					AddConnection(Click.MouseButton1Click, function()
						Colorpicker.Toggled = not Colorpicker.Toggled
						TweenService:Create(ColorpickerFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Colorpicker.Toggled and UDim2.new(1, 0, 0, 148) or UDim2.new(1, 0, 0, 38)}):Play()
						Color.Visible = Colorpicker.Toggled
						Hue.Visible = Colorpicker.Toggled
						ColorpickerFrame.F.Line.Visible = Colorpicker.Toggled
					end)
	
					local function UpdateColorPicker()
						ColorpickerBox.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
						Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
						Colorpicker:Set(ColorpickerBox.BackgroundColor3)
						ColorpickerConfig.Callback(ColorpickerBox.BackgroundColor3)
						SaveCfg(game.GameId)
					end
	
					ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
					ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
					ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)
	
					AddConnection(Color.InputBegan, function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if ColorInput then
								ColorInput:Disconnect()
							end
							ColorInput = AddConnection(RunService.RenderStepped, function()
								local ColorX = (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
								local ColorY = (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)
								ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
								ColorS = ColorX
								ColorV = 1 - ColorY
								UpdateColorPicker()
							end)
						end
					end)
	
					AddConnection(Color.InputEnded, function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if ColorInput then
								ColorInput:Disconnect()
							end
						end
					end)
	
					AddConnection(Hue.InputBegan, function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if HueInput then
								HueInput:Disconnect()
							end;
	
							HueInput = AddConnection(RunService.RenderStepped, function()
								local HueY = (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
	
								HueSelection.Position = UDim2.new(0.5, 0, HueY, 0)
								ColorH = 1 - HueY
	
								UpdateColorPicker()
							end)
						end
					end)
	
					AddConnection(Hue.InputEnded, function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if HueInput then
								HueInput:Disconnect()
							end
						end
					end)
	
					function Colorpicker:Set(Value)
						Colorpicker.Value = Value
						ColorpickerBox.BackgroundColor3 = Colorpicker.Value
						ColorpickerConfig.Callback(Colorpicker.Value)
					end
	
					Colorpicker:Set(Colorpicker.Value)
					if ColorpickerConfig.Flag then				
						OrionLib.Flags[ColorpickerConfig.Flag] = Colorpicker
					end
					return Colorpicker
				end  
				return ElementFunction   
			end	
	
			local ElementFunction = {}
	
			function ElementFunction:AddSection(SectionConfig)
				SectionConfig.Name = SectionConfig.Name or ""Section""
	
				local SectionFrame = SetChildren(SetProps(MakeElement(""TFrame""), {
					Size = UDim2.new(1, 0, 0, 26),
					Parent = Container
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", SectionConfig.Name, 14), {
						Size = UDim2.new(1, -12, 0, 16),
						Position = UDim2.new(0, 0, 0, 3),
						Font = Enum.Font.GothamSemibold
					}), ""TextDark""),
					SetChildren(SetProps(MakeElement(""TFrame""), {
						AnchorPoint = Vector2.new(0, 0),
						Size = UDim2.new(1, 0, 1, -24),
						Position = UDim2.new(0, 0, 0, 23),
						Name = ""Holder""
					}), {
						MakeElement(""List"", 0, 6)
					}),
				})
	
				AddConnection(SectionFrame.Holder.UIListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
					SectionFrame.Size = UDim2.new(1, 0, 0, SectionFrame.Holder.UIListLayout.AbsoluteContentSize.Y + 31)
					SectionFrame.Holder.Size = UDim2.new(1, 0, 0, SectionFrame.Holder.UIListLayout.AbsoluteContentSize.Y)
				end)
	
				local SectionFunction = {}
				for i, v in next, GetElements(SectionFrame.Holder) do
					SectionFunction[i] = v 
				end
				return SectionFunction
			end	
	
			for i, v in next, GetElements(Container) do
				ElementFunction[i] = v 
			end
	
			if TabConfig.PremiumOnly then
				for i, v in next, ElementFunction do
					ElementFunction[i] = function() end
				end    
				Container:FindFirstChild(""UIListLayout""):Destroy()
				Container:FindFirstChild(""UIPadding""):Destroy()
				SetChildren(SetProps(MakeElement(""TFrame""), {
					Size = UDim2.new(1, 0, 1, 0),
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://3610239960""), {
						Size = UDim2.new(0, 18, 0, 18),
						Position = UDim2.new(0, 15, 0, 15),
						ImageTransparency = 0.4
					}), ""Text""),
					AddThemeObject(SetProps(MakeElement(""Label"", ""Unauthorised Access"", 14), {
						Size = UDim2.new(1, -38, 0, 14),
						Position = UDim2.new(0, 38, 0, 18),
						TextTransparency = 0.4
					}), ""Text""),
					AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://4483345875""), {
						Size = UDim2.new(0, 56, 0, 56),
						Position = UDim2.new(0, 84, 0, 110),
					}), ""Text""),
					AddThemeObject(SetProps(MakeElement(""Label"", ""Premium Features"", 14), {
						Size = UDim2.new(1, -150, 0, 14),
						Position = UDim2.new(0, 150, 0, 112),
						Font = Enum.Font.GothamBold
					}), ""Text""),
					AddThemeObject(SetProps(MakeElement(""Label"", ""This part of the script is locked to Sirius Premium users. Purchase Premium in the Discord server (discord.gg/sirius)"", 12), {
						Size = UDim2.new(1, -200, 0, 14),
						Position = UDim2.new(0, 150, 0, 138),
						TextWrapped = true,
						TextTransparency = 0.4
					}), ""Text"")
				})
			end
			return ElementFunction   
		end  
		
		--if writefile and isfile then
		--	if not isfile(""NewLibraryNotification1.txt"") then
		--		local http_req = (syn and syn.request) or (http and http.request) or http_request
		--		if http_req then
		--			http_req({
		--				Url = 'http://127.0.0.1:6463/rpc?v=1',
		--				Method = 'POST',
		--				Headers = {
		--					['Content-Type'] = 'application/json',
		--					Origin = 'https://discord.com'
		--				},
		--				Body = HttpService:JSONEncode({
		--					cmd = 'INVITE_BROWSER',
		--					nonce = HttpService:GenerateGUID(false),
		--					args = {code = 'sirius'}
		--				})
		--			})
		--		end
		--		OrionLib:MakeNotification({
		--			Name = ""UI Library Available"",
		--			Content = ""New UI Library Available - Joining Discord (#announcements)"",
		--			Time = 8
		--		})
		--		spawn(function()
		--			local UI = game:GetObjects(""rbxassetid://11403719739"")[1]
	
		--			if gethui then
		--				UI.Parent = gethui()
		--			elseif syn.protect_gui then
		--				syn.protect_gui(UI)
		--				UI.Parent = game.CoreGui
		--			else
		--				UI.Parent = game.CoreGui
		--			end
	
		--			wait(11)
	
		--			UI:Destroy()
		--		end)
		--		writefile(""NewLibraryNotification1.txt"",""The value for the notification having been sent to you."")
		--	end
		--end
		
	
		
		return TabFunction
	end   
	
	function OrionLib:Destroy()
		Orion:Destroy()
	end
	
	if game.PlaceId == 2753915549 then
		World1 = true
	elseif game.PlaceId == 4442272183 then
		World2 = true
	elseif game.PlaceId == 7449423635 then
		World3 = true
	end
	local part = Instance.new(""Part"");
	local lighting = game:GetService(""Lighting"");
	local camera = game.Workspace.CurrentCamera
	local Players = game:GetService(""Players"")
	local player = Players.LocalPlayer
	
	local Window = OrionLib:MakeWindow({Name = ""Seraphy Premium"", HidePremium = false, SaveConfig = true, ConfigFolder = ""SeraphyTest""})
	
	
	local Auto_Farm = Window:MakeTab({
		Name = ""General"",
		Icon = ""rbxassetid://4483345998"",
		PremiumOnly = false
	})
	local RACE = Window:MakeTab({
		Name = ""Race V4"",
		Icon = ""rbxassetid://4483345998"",
		PremiumOnly = false
	})
	local Main = Window:MakeTab({
		Name = ""Sea Events"",
		Icon = ""rbxassetid://4483345998"",
		PremiumOnly = false
	})
	local Main2 = Window:MakeTab({
		Name = ""Settings"",
		Icon = ""rbxassetid://4483345998"",
		PremiumOnly = false
	})
	local Main3 = Window:MakeTab({
		Name = ""Items"",
		Icon = ""rbxassetid://4483345998"",
		PremiumOnly = false
	})
	local Section = Main:AddSection({
		Name = ""Section""
	})
	
	Auto_Farm:AddToggle({
		Name = ""Start Sanguine Art"",
		Default = _G.START,
		Callback = function(Value)
			_G.START = Value
		end    
	})
	_G.START2 = true
	Auto_Farm:AddToggle({
		Name = ""Start Farm Mastery Sanguine Art"",
		Default = _G.START2,
		Callback = function(Value)
			_G.START2 = Value
		end    
	})
	_G.Rejoin = true
	_G.Selected_Weapon = ""Melee""
	task.spawn(function()
		while wait() do
			pcall(function()
				if _G.Selected_Weapon == ""Melee"" then
					for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
						if v.ToolTip == ""Melee"" then
							if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
								_G.Selected_Weapon = v.Name
							end
						end
					end
				end
			end)
		end
	end)
	
	Cake = Auto_Farm:AddLabel(""N/A"")
	
	spawn(function()
		while wait() do
			pcall(function()
				if string.len(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner"")) == 88 then
					Cake:Set(""Killed : ""..string.sub(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner""),39,41))
				elseif string.len(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner"")) == 87 then
					Cake:Set(""Killed : ""..string.sub(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner""),39,40))
				elseif string.len(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner"")) == 86 then
					Cake:Set(""Killed : ""..string.sub(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner""),39,39))
				else
					Cake:Set(""Boss Is Spawning"")
				end
			end)
		end
	end)
	task.spawn(function()
		while wait() do
			pcall(function()
				if string.len(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner"")) == 88 then
					KillMob = (tonumber(string.sub(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner""),39,41)) - 500)
				elseif string.len(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner"")) == 87 then
					KillMob = (tonumber(string.sub(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner""),40,41)) - 500)
				elseif string.len(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner"")) == 86 then
					KillMob = (tonumber(string.sub(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner""),41,41)) - 500)
				end
			end)
		end
	end)
	
	Auto_Farm:AddToggle({
		Name = ""Auto Cake Prince"",
		Default = _G.Auto_Cake_Prince,
		Callback = function(Value)
			_G.Auto_Cake_Prince = Value
		end    
	})
	Auto_Farm:AddToggle({
		Name = ""Enable Quest"",
		Default = _G.Enable_Quest,
		Callback = function(Value)
			_G.Enable_Quest = Value
		end    
	})
	Auto_Farm:AddToggle({
		Name = ""Enable Spawn Cake"",
		Default = _G.Enable_Spawn_Cake,
		Callback = function(Value)
			_G.Enable_Spawn_Cake = Value
		end    
	})
	
	Mirage = Auto_Farm:AddLabel(""N/A"")
	FM = Auto_Farm:AddLabel(""N/A"")
	task.spawn(function()
		while task.wait() do
			pcall(function()
				if game:GetService(""Lighting"").Sky.MoonTextureId==""http://www.roblox.com/asset/?id=9709149431"" then
					FM:Set(""🌑 : Full Moon 100%"")
				elseif game:GetService(""Lighting"").Sky.MoonTextureId==""http://www.roblox.com/asset/?id=9709149052"" then
					FM:Set(""🌒 : Full Moon 75%"")
				elseif game:GetService(""Lighting"").Sky.MoonTextureId==""http://www.roblox.com/asset/?id=9709143733"" then
					FM:Set(""🌓 : Full Moon 50%"")
				elseif game:GetService(""Lighting"").Sky.MoonTextureId==""http://www.roblox.com/asset/?id=9709150401"" then
					FM:Set(""🌗 : Full Moon 25%"")
				elseif game:GetService(""Lighting"").Sky.MoonTextureId==""http://www.roblox.com/asset/?id=9709149680"" then
					FM:Set(""🌖 : Full Moon 15%"")
				else
					FM:Set(""🌚 : Full Moon 0%"")
				end
			end)
		end
	end)
	spawn(function()
		while wait() do
			pcall(function()
				for i,v in pairs(game:GetService(""Workspace"")[""_WorldOrigin""].Locations:GetChildren()) do
					if v.Name == ""Mirage Island"" then
						Mirage:Set(""Mirage Island: 🟢"")
					else
						Mirage:Set(""Mirage Island: 🔴"")
					end
				end
			end)
		end
	end)
	Auto_Farm:AddToggle({
		Name = ""Auto Find Mirage Island"",
		Default = _G.Enable_Find_Mirage,
		Callback = function(Value)
			_G.Enable_Find_Mirage = Value
		end    
	})
	Auto_Farm:AddToggle({
		Name = ""Auto Find Gear"",
		Default = _G.Enable_Find_Gear,
		Callback = function(Value)
			_G.Enable_Find_Gear = Value
		end    
	})
	Auto_Farm:AddToggle({
		Name = ""Auto Pull Lever"",
		Default = _G.Enable_Pull_Lever,
		Callback = function(Value)
			_G.Enable_Pull_Lever = Value
		end    
	})
	RACE:AddToggle({
		Name = ""Auto Complete Trial"",
		Default = _G.Enable_Complete_Trial,
		Callback = function(Value)
			_G.Enable_Complete_Trial = Value
		end    
	})
	RACE:AddToggle({
		Name = ""Teleport To Race Doors"",
		Default = _G.Enable_Teleport_Race_Doors,
		Callback = function(Value)
			_G.Enable_Teleport_Race_Doors = Value
		end    
	})
	RACE:AddToggle({
		Name = ""Auto Quest Acient One"",
		Default = _G.Enable_Auto_Acient_Quest,
		Callback = function(Value)
			_G.Enable_Auto_Acient_Quest = Value
		end    
	})
	RACE:AddButton({
		Name = ""Temple Of Time"",
		Callback = function()
			game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
		end    
	})
	RACE:AddButton({
		Name = ""Acient One"",
		Callback = function()
			repeat wait()
				_G.Noclip = true
				if (CFrame.new(28981.552734375, 14888.4267578125, -120.245849609375).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 1500 then
					game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
				else
					toTargetP(CFrame.new(28981.552734375, 14888.4267578125, -120.245849609375))
				end
			until (CFrame.new(28981.552734375, 14888.4267578125, -120.245849609375).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5
			_G.Noclip = false
		end
	})
	
	
	spawn(function()
		while wait() do
			pcall(function()
				if _G.Enable_Auto_Acient_Quest then
					heuantedcalstle = CFrame.new(-9520.55957, 271.553131, 6305.31055, 0.999997973, -7.37041717e-07, 0.0020507169, 7.32235378e-07, 1, 2.34449726e-06, -0.0020507169, -2.34299068e-06, 0.999997973)
					if game:GetService(""Players"").LocalPlayer.PlayerGui.TransformationHUD.ImageLabel.Visible == true then
						game:GetService(""VirtualInputManager""):SendKeyEvent(true,""Y"",false,game)
						game:GetService(""VirtualInputManager""):SendKeyEvent(false,""Y"",false,game)
						wait(1)
						toTargetP(CFrame.new(-9525.791015625, 676.1983032226562, 6559.06298828125))
						wait(1)
						game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer('UpgradeRace', 'Buy')
					else
						if game:GetService(""Workspace"").Enemies:FindFirstChild(""Reborn Skeleton"") or  game:GetService(""Workspace"").Enemies:FindFirstChild(""Living Zombie"") or  game:GetService(""Workspace"").Enemies:FindFirstChild(""Demonic Soul"") or  game:GetService(""Workspace"").Enemies:FindFirstChild(""Posessed Mummy"") then
							for i,v in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
								if v.Name == ""Reborn Skeleton"" or v.Name == ""Living Zombie"" or v.Name == ""Demonic Soul"" or v.Name == ""Posessed Mummy"" then
									if v.Humanoid.Health > 0 then
										repeat wait()
											if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
												local args = {
													[1] = ""Buso""
												}
												game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
											end
											EquipWeapon(_G.SelectToolWeapon)
											StartMagnet = true
											PosMon = v.HumanoidRootPart.CFrame
											FastAttackSpeed = true
											toTargetP(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))--CFrame.new(7 , 30 , 20))
											v.Humanoid.JumpPower = 0
											v.Humanoid.WalkSpeed = 0
											v.HumanoidRootPart.CanCollide = false
											v.Humanoid:ChangeState(14)
											sethiddenproperty(game.Players.LocalPlayer, ""SimulationRadius"",  math.huge)
										until not v.Parent or v.Humanoid.Health <= 0 or not _G.Enable_Auto_Acient_Quest or not game:GetService(""Workspace"").Enemies:FindFirstChild(v.Name)
										FastAttackSpeed = false
										StartMagnet=false
									end
								end
							end
						else
							StartMagnet=false
							FastAttackSpeed=false
							if (heuantedcalstle.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude >= 500 then
								toTargetP(heuantedcalstle)
							end
						end
					end
				end
			end)
		end
	end)
	
	
	local posX = 0
	local posY = 30
	local posZ = 0
	spawn(function()
		pcall(function()
			while task.wait() do
				if _G.Enable_Complete_Trial then
					if game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Human"" then
						for i, v in pairs(game.Workspace.Enemies:GetDescendants()) do
							if v.Name == ""Darkness Master"" and v:FindFirstChild(""Humanoid"") and v:FindFirstChild(""HumanoidRootPart"") and v.Humanoid.Health > 0 then
								pcall(function()
									repeat
										wait(.1)
										v.Humanoid.Health = 0
										v.HumanoidRootPart.CanCollide = false
										EquipWeapon(_G.SelectToolWeapon)
										toTargetP(v.HumanoidRootPart.CFrame * CFrame(0,30,0))
										FastAttackSpeed = true
										sethiddenproperty(game.Players.LocalPlayer, ""SimulationRadius"", math.huge)
									until not _G.Enable_Complete_Trial or not v.Parent or v.Humanoid.Health <= 0
									FastAttackSpeed = false
								end)
							end
						end
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Skypiea"" then
						for i, v in pairs(game:GetService(""Workspace"").Map.SkyTrial.Model:GetDescendants()) do
							toTargetP(game.Workspace.Map.SkyTrial.Model.FinishPart.CFrame)
						end
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Fishman"" then
						for i, v in pairs(game:GetService(""Workspace"").SeaBeasts.SeaBeast1:GetDescendants()) do
							if v.Name == ""HumanoidRootPart"" then
								toTargetP(v.CFrame * CFrame.new(PosX, PosY, PosZ))
								for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
									if v:IsA(""Tool"") then
										if v.ToolTip == ""Melee"" then -- ""Blox Fruit"" , ""Sword"" , ""Wear"" , ""Agility""
											game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
										end
									end
								end
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
									if v:IsA(""Tool"") then
										if v.ToolTip == ""Blox Fruit"" then -- ""Blox Fruit"" , ""Sword"" , ""Wear"" , ""Agility""
											game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
										end
									end
								end
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(0.5)
								for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
									if v:IsA(""Tool"") then
										if v.ToolTip == ""Sword"" then -- ""Blox Fruit"" , ""Sword"" , ""Wear"" , ""Agility""
											game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
										end
									end
								end
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(0.5)
								for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
									if v:IsA(""Tool"") then
										if v.ToolTip == ""Gun"" then -- ""Blox Fruit"" , ""Sword"" , ""Wear"" , ""Agility""
											game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
										end
									end
								end
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 122, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 120, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								wait(.2)
								game:GetService(""VirtualInputManager""):SendKeyEvent(true, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
								game:GetService(""VirtualInputManager""):SendKeyEvent(false, 99, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							end
						end
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Cyborg"" then
						toTargetP(CFrame.new(28654, 14898.7832, -30, 1, 0, 0, 0, 1, 0, 0, 0, 1))
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Ghoul"" then
						for i, v in pairs(game.Workspace.Enemies:GetDescendants()) do
							if v.Name == ""Ancient Zombie"" or v.Name == ""Ancient Vamipire"" and v:FindFirstChild(""Humanoid"") and v:FindFirstChild(""HumanoidRootPart"") and v.Humanoid.Health > 0 then
								pcall(function()
									repeat
										wait(.1)
										v.Humanoid.Health = 0
										v.HumanoidRootPart.CanCollide = false
										FastAttackSpeed = true
										EquipWeapon(_G.SelectToolWeapon)
										toTargetP(v.HumanoidRootPart.CFrame * CFrame(0,30,0))
										sethiddenproperty(game.Players.LocalPlayer, ""SimulationRadius"", math.huge)
									until not _G.Enable_Complete_Trial or not v.Parent or v.Humanoid.Health <= 0
									FastAttackSpeed = false
								end)
							end
						end
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Mink"" then
						for i, v in pairs(game:GetService(""Workspace""):GetDescendants()) do
							if v.Name == ""StartPoint"" then
								toTargetP(v.CFrame * CFrame.new(0, 9, 0))
							end
						end
					end
				end
			end
		end)
	end)
	spawn(function()
		while true do task.wait()
			if _G.Enable_Teleport_Race_Doors then
				pcall(function()
					if game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Fishman"" then
						repeat wait()
							_G.Noclip = true
							if (CFrame.new(28224.056640625, 14889.4267578125, -210.5872039794922).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 1500 then
								game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
							else
								toTargetP(CFrame.new(28224.056640625, 14889.4267578125, -210.5872039794922))
							end
						until (CFrame.new(28224.056640625, 14889.4267578125, -210.5872039794922).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5 or not _G.Enable_Teleport_Race_Doors
						_G.Noclip = false
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Human"" then
						repeat wait()
							_G.Noclip = true
							if (CFrame.new(29237.294921875, 14889.4267578125, -206.94955444335938).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 1500 then
								game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
							else
								toTargetP(CFrame.new(29237.294921875, 14889.4267578125, -206.94955444335938))
							end
						until (CFrame.new(29237.294921875, 14889.4267578125, -206.94955444335938).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5 or not _G.Enable_Teleport_Race_Doors
						_G.Noclip = false
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Skypiea"" then
						repeat wait()
							_G.Noclip = true
							if (CFrame.new(28967.408203125, 14918.0751953125, 234.31198120117188).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 1500 then
								game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
							else
								toTargetP(CFrame.new(28967.408203125, 14918.0751953125, 234.31198120117188))
							end
						until (CFrame.new(28967.408203125, 14918.0751953125, 234.31198120117188).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5 or not _G.Enable_Teleport_Race_Doors
						_G.Noclip = false
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Cyborg"" then
						repeat wait()
							_G.Noclip = true
							if (CFrame.new(28492.4140625, 14894.4267578125, -422.1100158691406).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 1500 then
								game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
							else
								toTargetP(CFrame.new(28492.4140625, 14894.4267578125, -422.1100158691406))
							end
						until (CFrame.new(28492.4140625, 14894.4267578125, -422.1100158691406).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5 or not _G.Enable_Teleport_Race_Doors
						_G.Noclip = false
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Ghoul"" then
						repeat wait()
							_G.Noclip = true
							if (CFrame.new(28672.720703125, 14889.1279296875, 454.5961608886719).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 1500 then
								game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
							else
								toTargetP(CFrame.new(28672.720703125, 14889.1279296875, 454.5961608886719))
							end
						until (CFrame.new(28672.720703125, 14889.1279296875, 454.5961608886719).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5 or not _G.Enable_Teleport_Race_Doors
						_G.Noclip = false
					elseif game:GetService(""Players"").LocalPlayer.Data.Race.Value == ""Mink"" then
						repeat wait()
							_G.Noclip = true
							if (CFrame.new(29020.66015625, 14889.4267578125, -379.2682800292969).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 1500 then
								game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875,14895.3017578125, 102.62469482421875)
							else
								toTargetP(CFrame.new(29020.66015625, 14889.4267578125, -379.2682800292969))
							end
						until (CFrame.new(29020.66015625, 14889.4267578125, -379.2682800292969).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 5 or not _G.Enable_Teleport_Race_Doors
						_G.Noclip = false
					end
				end)
			end
		end
	end)
	
	local distFromCam = 16;
	part.Name = ""dsada""
	part.Anchored = true;
	part.Size = Vector3.new(1,1,1);
	part.Parent = workspace;
	part.CanCollide = false;
	spawn(function()
		pcall(function()
			if _G.Enable_Pull_ever then
				game:GetService(""RunService"").RenderStepped:Connect(function()
					part.Position = workspace.CurrentCamera.CFrame.Position + lighting:GetMoonDirection() * distFromCam;
				end);
			end
		end)
	end)
	
	spawn(function()
		while true do wait()
			if _G.Enable_Find_Mirage then
				pcall(function()
					if not game:GetService(""Workspace"").Map:FindFirstChild(""MysticIsland"") then
						if not workspace.Boats:FindFirstChild(""PirateBrigade"") then
							BuyBoat = toTargetP(CFrame.new(-6042.7802734375, 16.420740127563477, -2038.7415771484375))
							if (CFrame.new(-6042.7802734375, 16.420740127563477, -2038.7415771484375).Position-game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 10 then
								if BuyBoat then BuyBoat:Stop() end
								local args = {
									[1] = ""BuyBoat"",
									[2] = ""PirateBrigade""
								}
								game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
							end
						elseif workspace.Boats:FindFirstChild(""PirateBrigade"") then
							if (workspace.Boats:FindFirstChild(""PirateBrigade"").VehicleSeat.CFrame.Position - CFrame.new(-11581.4482421875, 2.994250774383545, 1252.9136962890625).Position).magnitude >= 10 then
								workspace.Boats.PirateBrigade.VehicleSeat.CFrame = CFrame.new(-11581.4482421875, 2.994250774383545, 1252.9136962890625)
								wait(1)
							elseif (workspace.Boats.PirateBrigade.VehicleSeat.Position - CFrame.new(-11581.4482421875, 2.994250774383545, 1252.9136962890625).Position).magnitude <= 10 then
								if (CFrame.new(-11581.4482421875, 2.994250774383545, 1252.9136962890625).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position).magnitude <= 5 then
									toTargetP(workspace.Boats.PirateBrigade.VehicleSeat.CFrame)
								else
									toTargetP(CFrame.new(-11581.4482421875, 2.994250774383545, 1252.9136962890625))
								end
							elseif game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit == true then
								game:service('VirtualInputManager'):SendKeyEvent(true, ""W"", false, game)
								wait(2)
								game:service('VirtualInputManager'):SendKeyEvent(false, ""W"", false, game)
								wait(0.5)
								game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
							elseif game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit == false then
								toTargetP(workspace.Boats:FindFirstChild(""PirateBrigade"").VehicleSeat.CFrame)
							end
						end
					else
						if game:GetService(""Workspace"").Map:FindFirstChild(""MysticIsland"") then
							if _G.Enable_Pull_ever then
								local args = {
									[1] = ""RaceV4Progress"",
									[2] = ""Check""
								}
								Progress_Check = game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
								if tonumber(Progress_Check) == 1 then
									local args = {
										[1] = ""RaceV4Progress"",
										[2] = ""Begin""
									}
								
									game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
								elseif tonumber(Progress_Check) == 2 then
									if (game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position - CFrame.new(2952.8408203125, 2281.97900390625, -7216.93701171875).Position).magnitude <= 10 then
										local args = {
											[1] = ""RaceV4Progress"",
											[2] = ""Teleport""
										}
								
										game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
										wait(1)
										game.Players.LocalPlayer.Character.Humanoid.Health = 0
									else
										toTargetP(CFrame.new(2952.8408203125, 2281.97900390625, -7216.93701171875))
									end 
								else
									if (game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position - game:GetService(""Workspace"").Map:FindFirstChild(""MysticIsland"").HumanoidRootPart.CFrame.Position).magnitude <= 500 then
										if workspace:FindFirstChild(""dsada"") then
											player.CameraMaxZoomDistance = 0
											player.CameraMinZoomDistance = 0
											wait(1)
											local camera = game.Workspace.CurrentCamera
											camera.CFrame = CFrame.new(camera.CFrame.Position,workspace.dsada.Position) -- locks into the HEAD
											wait(1)
											game:GetService(""VirtualInputManager""):SendKeyEvent(true,""T"",true,game)
											wait(0.5)
											game:GetService(""VirtualInputManager""):SendKeyEvent(true,""T"",false,game)
										end
									else
										toTargetP(game:GetService(""Workspace"").Map:FindFirstChild(""MysticIsland"").HumanoidRootPart.CFrame * CFrame.new(0, 500, -100))	
									end
								end
							elseif _G.Enable_Find_Gear then
								for i, v in pairs(game:GetService(""Workspace"").Map.MysticIsland:GetChildren()) do
									if v:IsA(""MeshPart"") then
										if v.Material == Enum.Material.Neon then
											toTargetP(v.CFrame)
										end
									end
								end
							end
						end
					end
				end)
			end
		end
	end)
	
	function Check_Weapon(Name_Weapon)
		local ReturnText = """"
		for i,v in pairs(game:GetService(""ReplicatedStorage"").Remotes[""CommF_""]:InvokeServer(""getInventoryWeapons"")) do
			if type(v) == ""table"" then
				if v.Name == Name_Weapon then
					ReturnText = ReturnText .. v.Name .. "" ""
				end
			end
		end
		if game.Players.LocalPlayer.Backpack:FindFirstChild(Name_Weapon) or game.Players.LocalPlayer.Character:FindFirstChild(Name_Weapon) or ReturnText ~= """" then
			return ""Have""
		else
			return ""Not Have""
		end
		return ""else""
	end
	function Check_Number(matname)
		for i,v in pairs(game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""getInventory"")) do
			if type(v) == ""table"" then
				if v.Type == ""Material"" then
					if v.Name == matname then
						return v.Count
					end
				end
			end
		end
		return 0
	end
	Anchor=Main:AddLabel(""⚓ Shark Anchor: 🔴"")
	Main:AddToggle({
		Name = ""Auto Shark Anchor"",
		Default = _G.AUTO_SAHRK_ANCHOR,
		Callback = function(Value)
			_G.AUTO_SAHRK_ANCHOR = Value
		end    
	})
	Main:AddToggle({
		Name = ""Auto Terror Jaw"",
		Default = _G.AUTO_TRROR_JAW,
		Callback = function(Value)
			_G.AUTO_TRROR_JAW = Value
		end    
	})
	Main:AddToggle({
		Name = ""Auto Tooth Necklace"",
		Default = _G.AUTO_TOOTH_NECKLACE,
		Callback = function(Value)
			_G.AUTO_TOOTH_NECKLACE = Value
		end    
	})
	local E=function(U)
		return game:GetService(U);
	end;
	local c=E(""ReplicatedStorage"");
	warn(c);
	local w=workspace:WaitForChild(""Enemies"");
	warn(w);
	function toTargetP(CFgo)
		if game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Health <= 0 or not game:GetService(""Players"").LocalPlayer.Character:WaitForChild(""Humanoid"") then tween:Cancel() repeat wait() until game:GetService(""Players"").LocalPlayer.Character:WaitForChild(""Humanoid"") and game:GetService(""Players"").LocalPlayer.Character:WaitForChild(""Humanoid"").Health > 0 wait(7) return end
		if (game:GetService(""Players"")[""LocalPlayer""].Character.HumanoidRootPart.Position - CFgo.Position).Magnitude <= 150 then
			pcall(function()
				tween:Cancel()
	
				game:GetService(""Players"")[""LocalPlayer""].Character.HumanoidRootPart.CFrame = CFgo
	
				return
			end)
		end
		local tween_s = game:service""TweenService""
		local info = TweenInfo.new((game:GetService(""Players"")[""LocalPlayer""].Character.HumanoidRootPart.Position - CFgo.Position).Magnitude/325, Enum.EasingStyle.Linear)
		tween = tween_s:Create(game.Players.LocalPlayer.Character[""HumanoidRootPart""], info, {CFrame = CFgo})
		tween:Play()
	
		local tweenfunc = {}
	
		function tweenfunc:Stop()
			tween:Cancel()
		end
	
		return tweenfunc
	end
	task.spawn(function()
		game:GetService(""RunService"").Heartbeat:Connect(function()
			pcall(function()
				if StartMagnet then
					for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
						if not string.find(v.Humanoid.DisplayName, ""Boss"") and  (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 350 then
							if InMyNetWork(v.HumanoidRootPart) then
								v.HumanoidRootPart.CFrame = PosMon
								v.Humanoid.JumpPower = 0
								v.Humanoid.WalkSpeed = 0
								v.HumanoidRootPart.Size = Vector3.new(60,60,60)
								v.HumanoidRootPart.Transparency = 1
								v.HumanoidRootPart.CanCollide = false
								v.Head.CanCollide = false
								if v.Humanoid:FindFirstChild(""Animator"") then
									v.Humanoid.Animator:Destroy()
								end
								v.Humanoid:ChangeState(11)
								v.Humanoid:ChangeState(14)
								if setscriptable then
									setscriptable(game.Players.LocalPlayer, ""SimulationRadius"", true)
								end
								if sethiddenproperty then
									sethiddenproperty(game.Players.LocalPlayer, ""SimulationRadius"", math.huge)
								end
							end
						end
					end
				end
			end)
		end)
	end)
	function InMyNetWork(object)
		if isnetworkowner then
			return isnetworkowner(object)
		else
			if (object.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 200 then 
				return true
			end
			return false
		end
	end
	function EquipWeapon(ToolSe)
		spawn(function()
			if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) or game.Players.LocalPlayer.Character:FindFirstChild(ToolSe) then
				local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
				wait(.1)
				game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
			end
		end)
	end
	function EquipAllWeapon()
		pcall(function()
			for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
				if v:IsA('Tool') and not (v.Name == ""Summon Sea Beast"" or v.Name == ""Water Body"" or v.Name == ""Awakening"") then
					local ToolHumanoid = game.Players.LocalPlayer.Backpack:FindFirstChild(v.Name) 
					game.Players.LocalPlayer.Character.Humanoid:EquipTool(ToolHumanoid) 
					wait(1)
				end
			end
		end)
	end
	spawn(function()
		local gg = getrawmetatable(game)
		local old = gg.__namecall
		setreadonly(gg,false)
		gg.__namecall = newcclosure(function(...)
			local method = getnamecallmethod()
			local args = {...}
			if tostring(method) == ""FireServer"" then
				if tostring(args[1]) == ""RemoteEvent"" then
					if tostring(args[2]) ~= ""true"" and tostring(args[2]) ~= ""false"" then
						if UseSkillMasteryDevilFruit and _G.AUTO_SAHRK_ANCHOR then
							if type(args[2]) == ""vector"" then 
								args[2] = PositionSkillMasteryDevilFruit
							else
								args[2] = CFrame.new(PositionSkillMasteryDevilFruit)
							end
							return old(unpack(args))
						end
					end
				end
			end
			return old(...)
		end)
	end)
	local gg = getrawmetatable(game)
	local old = gg.__namecall
	setreadonly(gg,false)
	gg.__namecall = newcclosure(function(...)
		local method = getnamecallmethod()
		local args = {...}
		if tostring(method) == ""FireServer"" then
			if tostring(args[1]) == ""RemoteEvent"" then
				if tostring(args[2]) ~= ""true"" and tostring(args[2]) ~= ""false"" then
					if Skillaimbot then
						args[2] = AimBotSkillPosition
						return old(unpack(args))
					end
				end
			end
		end
		return old(...)
	end)
	local TICK = tick()
	local Count = 0
	spawn(function()
		while wait() do
			if  _G.AUTO_SAHRK_ANCHOR  then
				pcall(function()
					if not game:GetService(""Workspace"").Enemies:FindFirstChild(""Terrorshark"") then
						if not game:GetService(""Workspace"").Enemies:FindFirstChild(""Shark"") then
							if not game:GetService(""Workspace"").Enemies:FindFirstChild(""Piranha"") then
								if not game:GetService(""Workspace"").Enemies:FindFirstChild(""Fish Crew Member"") then
									if not game:GetService(""Workspace"").Enemies:FindFirstChild(""FishBoat"") then
										if not game:GetService(""Workspace"").Enemies:FindFirstChild(""FishBoat"") then
											if not game:GetService(""Workspace"").Boats:FindFirstChild(""Guardian"") then
												if Count then Count = 0 end
												BuyB = toTargetP(CFrame.new(-16917.17578125, 9.06057357788086, 510.3914794921875))
												if Count <= 5 and (CFrame.new(-16917.17578125, 9.06057357788086, 510.3914794921875).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 10 then
													if BuyB then BuyB:Stop() end
													local args = {
														[1] = ""BuyBoat"",
														[2] = ""Guardian""
													}
													game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
													Count += 10
												end
											elseif Count < 2 and tostring(game:GetService(""Workspace"").Boats.Guardian.Owner.Value) ~= tostring(game.Players.LocalPlayer.Name) then
												if (CFrame.new(-16917.17578125, 9.06057357788086, 510.3914794921875).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 10 then
													repeat wait()
														local args = {
															[1] = ""BuyBoat"",
															[2] = ""Guardian""
														}
														game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
														Count += 20
													until Count >= 10 or _G.AUTO_SAHRK_ANCHOR == false
												else
													toTargetP(CFrame.new(-16917.17578125, 9.06057357788086, 510.3914794921875))
												end
											elseif game:GetService(""Workspace"").Boats:FindFirstChild(""Guardian"") then
												if (game:GetService(""Workspace"").Boats.Guardian.VehicleSeat.CFrame.Position - CFrame.new(-41228.96484375, 20.907041549682617, 8984.2861328125).Position).magnitude >= 10 then
													game:GetService(""Workspace"").Boats.Guardian.VehicleSeat.CFrame = CFrame.new(-41228.96484375, 20.907041549682617, 8984.2861328125)
												elseif game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit == false then
													if (game:GetService(""Workspace"").Boats.Guardian.VehicleSeat.CFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position).magnitude <= 5 then
														toTargetP(game:GetService(""Workspace"").Boats.Guardian.VehicleSeat.CFrame * CFrame.new(0,1,0))
													else
														toTargetP(CFrame.new(-41228.96484375, 20.907041549682617, 8984.2861328125))
													end
												end
											elseif game:GetService(""Workspace"").Boats.Guardian.VehicleSeat.CFrame ~= CFrame.new(-41228.96484375, 20.907041549682617, 8984.2861328125) then
												Count = 0
											end
										else
											if game:GetService(""Workspace"").Enemies:FindFirstChild(""FishBoat"") then
												for iu,vbss in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
													if vbss.Name == ""FishBoat"" then
														--if vbss:FindFirstChild(""Humanoid"") and vbss.Humanoid.Value > 0 then
															repeat task.wait()
																game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
																if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
																	game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""Buso"")
																end
																toTargetP(vbss.VehicleSeat.CFrame * CFrame.new(0,30,0))
																AutoSkill = true
																Skillaimbot = true
																PositionSkillMasteryDevilFruit = vbss.VehicleSeat
																AimBotSkillPosition = vbss.VehicleSeat.CFrame
																UseSkillMasteryDevilFruit = true
																EquipAllWeapon()
															until not  _G.AUTO_SAHRK_ANCHOR or not vbss.Parent or vbss.Humanoid.Value <= 0 or not game:GetService(""Workspace"").Enemies:FindFirstChild(""FishBoat"")
															AutoSkill = false
															Skillaimbot = false
														--end
													end
												end
											end
										end
									else
										-- PirateBrigade
										if game:GetService(""Workspace"").Enemies:FindFirstChild(""PirateBrigade"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""PirateGrandBrigade"") then
											for iu,vbssb in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
												if vbssb.Name == ""PirateGrandBrigade"" or vbssb.Name == ""PirateBrigade"" then
													--if vbssb:FindFirstChild(""Humanoid"") and vbssb.Humanoid.Value > 0 then
														repeat task.wait()
															game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
															if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
																game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""Buso"")
															end
															EquipAllWeapon()
															toTargetP(vbssb.VehicleSeat.CFrame * CFrame.new(0,30,0))
															AutoSkill = true
															Skillaimbot = true
															PositionSkillMasteryDevilFruit = vbssb.VehicleSeat.CFrame
															AimBotSkillPosition = vbssb.VehicleSeat.CFrame
															UseSkillMasteryDevilFruit = true
														until not  _G.AUTO_SAHRK_ANCHOR or not vbssb.Parent or vbssb.Humanoid.Value <= 0 or not game:GetService(""Workspace"").Enemies:FindFirstChild(""PirateGrandBrigade"") or not game:GetService(""Workspace"").Enemies:FindFirstChild(""PirateBrigade"")
														AutoSkill = false
														Skillaimbot = false
													--end
												end
											end
										end
									end
								else
									if game:GetService(""Workspace"").Enemies:FindFirstChild(""Fish Crew Member"") then
										for i,v in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
											if v.Name == ""Fish Crew Member"" then
												if v:FindFirstChild(""Humanoid"") and v:FindFirstChild(""HumanoidRootPart"") and v.Humanoid.Health > 0 then
													repeat task.wait()
														game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
														if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
															game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""Buso"")
														end
														EquipWeapon(_G.SelectToolWeapon)
														FastAttackSpeed = true
														v.HumanoidRootPart.Size = Vector3.new(60,60,60)
														v.Humanoid.JumpPower = 0
														v.Humanoid.WalkSpeed = 0
														v.HumanoidRootPart.CanCollide = false
														toTargetP(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
													until not  _G.AUTO_SAHRK_ANCHOR or not v.Parent or v.Humanoid.Health <= 0 or not game:GetService(""Workspace"").Enemies:FindFirstChild(""Terrorshark"")
												end
											end
										end
									else
										repeat wait()
											toTargetP(game:GetService(""ReplicatedStorage""):FindFirstChild(""Fish Crew Member"").HumanoidRootPart.CFrame * CFrame.new(0,35,0))
										until not _G.AUTO_SAHRK_ANCHOR or game:GetService(""Workspace"").Enemies:FindFirstChild(""Fish Crew Member"")
									end
								end
							else
								if game:GetService(""Workspace"").Enemies:FindFirstChild(""Piranha"") then
									for is,vs in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
										if vs.Name == ""Piranha"" then
											if vs:FindFirstChild(""Humanoid"") and vs:FindFirstChild(""HumanoidRootPart"") and vs.Humanoid.Health > 0 then
												repeat task.wait()
													game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
													if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
														game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""Buso"")
													end
													EquipWeapon(_G.SelectToolWeapon)
													FastAttackSpeed = true
													vs.HumanoidRootPart.Size = Vector3.new(60,60,60)
													vs.Humanoid.JumpPower = 0
													vs.Humanoid.WalkSpeed = 0
													vs.HumanoidRootPart.CanCollide = false
													toTargetP(vs.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
												until not  _G.AUTO_SAHRK_ANCHOR or not vs.Parent or vs.Humanoid.Health <= 0 or not game:GetService(""Workspace"").Enemies:FindFirstChild(""Piranha"")
											end
										end
									end
								else
									repeat wait()
										toTargetP(game:GetService(""ReplicatedStorage""):FindFirstChild(""Piranha"").HumanoidRootPart.CFrame * CFrame.new(0,35,0))
									until not _G.AUTO_SAHRK_ANCHOR or game:GetService(""Workspace"").Enemies:FindFirstChild(""Piranha"")
								end
							end
						else
							if game:GetService(""Workspace"").Enemies:FindFirstChild(""Shark"") then
								for iss,vss in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
									if vss.Name == ""Shark"" then
										if vss:FindFirstChild(""Humanoid"") and vss:FindFirstChild(""HumanoidRootPart"") and vss.Humanoid.Health > 0 then
											repeat task.wait()
												game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
												if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
													game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""Buso"")
												end
												EquipWeapon(_G.SelectToolWeapon)
												FastAttackSpeed = true
												toTargetP(vss.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
											until not  _G.AUTO_SAHRK_ANCHOR or not vss.Parent or vss.Humanoid.Health <= 0 or not game:GetService(""Workspace"").Enemies:FindFirstChild(""Shark"")
										end
									end
								end
							else
								repeat wait()
									toTargetP(game:GetService(""ReplicatedStorage""):FindFirstChild(""Shark"").HumanoidRootPart.CFrame * CFrame.new(0,35,0))
								until not _G.AUTO_SAHRK_ANCHOR or game:GetService(""Workspace"").Enemies:FindFirstChild(""Shark"")
							end
						end
					else
						if game:GetService(""Workspace"").Enemies:FindFirstChild(""Terrorshark"") then
							for iss,vss in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
								if vss.Name == ""Terrorshark"" then
									if vss:FindFirstChild(""Humanoid"") and vss:FindFirstChild(""HumanoidRootPart"") and vss.Humanoid.Health > 0 then
										MaxHealth = game.Players.LocalPlayer.Character.Humanoid.MaxHealth * 30/100
										repeat task.wait()
											game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
											if game.Players.LocalPlayer.Character.Humanoid.Health <= MaxHealth then
												repeat wait()
													toTargetP(vss.HumanoidRootPart.CFrame * CFrame.new(0,300,0))
												until game.Players.LocalPlayer.Character.Humanoid.Health == game.Players.LocalPlayer.Character.Humanoid.MaxHealth or _G.AUTO_SAHRK_ANCHOR
											else
												if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
													game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""Buso"")
												end
												EquipWeapon(_G.SelectToolWeapon)
												FastAttackSpeed = true
												toTargetP(vss.HumanoidRootPart.CFrame * CFrame.new(0,40,0))
											end
										until not  _G.AUTO_SAHRK_ANCHOR or not vss.Parent or vss.Humanoid.Health <= 0 or not game:GetService(""Workspace"").Enemies:FindFirstChild(""Shark"")
									end
								end
							end
						else
							repeat wait()
								toTargetP(game:GetService(""ReplicatedStorage""):FindFirstChild(""Terrorshark"").HumanoidRootPart.CFrame * CFrame.new(0,35,0))
							until not _G.AUTO_SAHRK_ANCHOR or game:GetService(""Workspace"").Enemies:FindFirstChild(""Terrorshark"")
						end
					end
				end)
			end
		end
	end)
	
	task.spawn(function()
		game:GetService(""RunService"").Stepped:Connect(function()
			pcall(function()
				--[World 1]
				if _G.AUTO_SAHRK_ANCHOR or _G.Auto_Cake_Prince or _G.Enable_Pull_ever or _G.Enable_Find_Mirage or _G.Enable_Find_Gear or _G.Noclip or _G.Enable_Auto_Acient_Quest or _G.START then
					if syn then
						setfflag(""HumanoidParallelRemoveNoPhysics"", ""False"")
						setfflag(""HumanoidParallelRemoveNoPhysicsNoSimulate2"", ""False"")
						game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
						if game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit == true then
							game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
						end
					else
						if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
							if not game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart:FindFirstChild(""BodyVelocity1"") then
								if game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit == true then
									game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Sit = false
								end
								local BodyVelocity = Instance.new(""BodyVelocity"")
								BodyVelocity.Name = ""BodyVelocity1""
								BodyVelocity.Parent =  game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart
								BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
								BodyVelocity.Velocity = Vector3.new(0, 0, 0)
							end
						end
						for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
							if v:IsA(""BasePart"") then
								v.CanCollide = false    
							end
						end
					end
				else
					if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(""BodyVelocity1"") then
						game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(""BodyVelocity1""):Destroy();
					end
				end
			end)
		end)
	end)
	
	spawn(function()
		while wait(5) do
			--pcall(function()
				if _G.AUTO_TRROR_JAW then
					pcall(function()
						local args = {
							[1] = ""CraftItem"",
							[2] = ""Craft"",
							[3] = ""TerrorJaw""
						}
						
						JAW = game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
					end)
					if tostring(JAW) == 2 then
						break
					end
				end
				if _G.AUTO_TOOTH_NECKLACE then
					pcall(function()
						local args = {
							[1] = ""CraftItem"",
							[2] = ""Craft"",
							[3] = ""ToothNecklace""
						}
						
						NECKLACE = game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
					end)
					if tostring(NECKLACE) == 2 then
						break
					end
				end
				if _G.AUTO_SAHRK_ANCHOR then
					pcall(function()
						local args = {
							[1] = ""CraftItem"",
							[2] = ""Craft"",
							[3] = ""SharkAnchor""
						}
						
						SharkAnchor = game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
					end)
					if tostring(SharkAnchor) == 2 then
						break
					end
				end
			--end)
		end
	end)
	
	Main:AddLabel("""")
	Magnet=Main:AddLabel("""")
	Terror=Main:AddLabel("""")
	Wings=Main:AddLabel("""")
	Golds=Main:AddLabel("""")
	Tooth=Main:AddLabel("""")
	Main:AddLabel("""")
	Jaw=Main:AddLabel("""")
	Terror2=Main:AddLabel("""")
	Mutant=Main:AddLabel("""")
	Golds2=Main:AddLabel("""")
	Tooth2=Main:AddLabel("""")
	Main:AddLabel("""")
	Necklace=Main:AddLabel("""")
	Mutant2=Main:AddLabel("""")
	Tooth3=Main:AddLabel("""")
	
	spawn(function()
		pcall(function()
			while true do wait()
				if _G.AUTO_SAHRK_ANCHOR then
					if Check_Weapon(""Shark Anchor"") == ""Have"" then
						Anchor:Set(""⚓ Shark Anchor: 🟢"")
					else
						Anchor:Set(""⚓ Shark Anchor: 🔴"")
					end
					if Check_Weapon(""Terror Jaw"") == ""Have"" then
						Jaw:Set(""🦈 Terror Jaw: 🟢"")
					else
						Jaw:Set(""🦈 Terror Jaw: 🔴"")
					end
					if Check_Weapon(""Shark Tooth Necklace"") == ""Have"" then
						Necklace:Set(""📿 Shark Tooth Necklace: 🟢"")
					else
						Necklace:Set(""📿 Shark Tooth Necklace: 🔴"")
					end
					if Check_Number(""Monster Magnet"") >= 1 then
						Magnet:Set(""🧭 Monster Magnet: 🟢"")
					else
						Magnet:Set(""🧭 Monster Magnet: 🔴"")
					end
					if Check_Number(""Terror Eyes"") >= 2 then
						Terror:Set(""🟢 Terror Eyes:"".. Check_Number(""Terror Eyes"") ..""/2"")
					else
						Terror:Set(""🔴 Terror Eyes: "".. Check_Number(""Terror Eyes"") ..""/2"")
					end
					if Check_Number(""Electric Wing"") >= 8 then
						Wings:Set(""🟢 Electric Wings:"".. Check_Number(""Electric Wing"") ..""/8"")
					else
						Wings:Set(""🔴 Electric Wings: "".. Check_Number(""Electric Wing"") ..""/8"")
					end
					if Check_Number(""Fool's Gold"") >= 20 then
						Golds:Set(""🟢 Fool's Golds:"".. Check_Number(""Fool's Gold"") ..""/20"")
					else
						Golds:Set(""🔴 Fool's Golds: "".. Check_Number(""Fool's Gold"") ..""/20"")
					end
					if Check_Number(""Shark Tooth"") >= 10 then
						Tooth:Set(""🟢 Shark Tooth:"".. Check_Number(""Shark Tooth"") ..""/10"")
					else
						Tooth:Set(""🔴 Shark Tooth: "".. Check_Number(""Shark Tooth"") ..""/10"")
					end
					if Check_Number(""Terror Eyes"") >= 1 then
						Terror2:Set(""🟢 Terror Eyes:"".. Check_Number(""Terror Eyes"") ..""/1"")
					else
						Terror2:Set(""🔴 Terror Eyes: "".. Check_Number(""Terror Eyes"") ..""/1"")
					end
					if Check_Number(""Mutant Tooth"") >= 2 then
						Mutant:Set(""🟢 Mutant Tooth:"".. Check_Number(""Mutant Tooth"") ..""/2"")
					else
						Mutant:Set(""🔴 Mutant Tooth: "".. Check_Number(""Mutant Tooth"") ..""/2"")
					end
					if Check_Number(""Fool's Gold"") >= 10 then
						Golds2:Set(""🟢 Fool's Golds:"".. Check_Number(""Fool's Gold"") ..""/10"")
					else
						Golds2:Set(""🔴 Fool's Golds: "".. Check_Number(""Fool's Gold"") ..""/10"")
					end
					if Check_Number(""Shark Tooth"") >= 5 then
						Tooth2:Set(""🟢 Shark Tooth:"".. Check_Number(""Shark Tooth"") ..""/5"")
					else
						Tooth2:Set(""🔴 Shark Tooth: "".. Check_Number(""Shark Tooth"") ..""/5"")
					end
					if Check_Number(""Shark Tooth"") >= 5 then
						Tooth3:Set(""🟢 Shark Tooth:"".. Check_Number(""Shark Tooth"") ..""/5"")
					else
						Tooth3:Set(""🔴 Shark Tooth: "".. Check_Number(""Shark Tooth"") ..""/5"")
					end
					if Check_Number(""Mutant Tooth"") >= 1 then
						Mutant2:Set(""🟢 Mutant Tooth:"".. Check_Number(""Mutant Tooth"") ..""/1"")
					else
						Mutant2:Set(""🔴 Mutant Tooth: "".. Check_Number(""Mutant Tooth"") ..""/1"")
					end
				else
					Jaw:Set("""")
					Magnet:Set("""")
					Terror:Set("""")
					Wings:Set("""")
					Golds:Set("""")
					Tooth:Set("""")
					Terror2:Set("""")
					Mutant:Set("""")
					Golds2:Set("""")
					Tooth2:Set("""")
					Tooth3:Set("""")
					Necklace:Set("""")
					Mutant2:Set("""")
				end
			end
		end)
	end)
	
	WeaponList = {}
				
	for i,v in pairs(game:GetService(""Players"").LocalPlayer.Backpack:GetChildren()) do  
		if v:IsA(""Tool"") then
			table.insert(WeaponList ,v.Name)
		end
	end
	
	for i,v in pairs(game:GetService(""Players"").LocalPlayer.Character:GetChildren()) do  
		if v:IsA(""Tool"") then
			table.insert(WeaponList ,v.Name)
		end
	end
	Main2:AddDropdown({
		Name = ""Selected Weapon / Combat"",
		Default = ""1"",
		Options = WeaponList,
		Callback = function(Value)
			_G.SelectToolWeapon = Value
		end    
	})
	_G.FAST_ATTACK = true;
	Main2:AddToggle({
		Name = ""Fast Attack"",
		Default = _G.FAST_ATTACK,
		Callback = function(Value)
			_G.FAST_ATTACK = Value
		end    
	})
	_G.Skillz = true
	_G.Skillx = true
	_G.Skillc = true
	_G.Skillv = true
	Main2:AddToggle({
		Name = ""Skill Z"",
		Default = _G.Skillz,
		Callback = function(Value)
			_G.Skillz = Value
		end    
	})
	Main2:AddToggle({
		Name = ""Skill X"",
		Default = _G.Skillx,
		Callback = function(Value)
			_G.Skillx = Value
		end    
	})
	Main2:AddToggle({
		Name = ""Skill C"",
		Default = _G.Skillc,
		Callback = function(Value)
			_G.Skillc = Value
		end    
	})
	Main2:AddToggle({
		Name = ""Skill V"",
		Default = _G.Skillv,
		Callback = function(Value)
			_G.Skillv = Value
		end    
	})
	function CheckMasteryWeapon(NameWe,MasNum)
		if game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe) then
			if tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
				return ""true DownTo""
			elseif tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
				return ""true UpTo""
			end
		end
		if game.Players.LocalPlayer.Character:FindFirstChild(NameWe) then
			if tonumber(game.Players.LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
				return ""true DownTo""
			elseif tonumber(game.Players.LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
				return ""true UpTo""
			end
		end
		return ""else""
	end
	
	
	
	task.spawn(function()
		pcall(function()
			while task.wait(1) do
				if _G.START then
					game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""BuySanguineArt"")
				end		
			end
		end)
	end)
	
	spawn(function()
		pcall(function()
			while true do wait()
				if _G.START then
					if Check_Number(""Dark Fragment"") >= 2 then
						if Check_Number(""Leviathan Heart"") >= 1 then
							if Check_Number(""Demonic Wisp"") >= 20 then
								if Check_Number(""Vampire Fang"") >= 20 then
									game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""BuySanguineArt"")
								elseif Check_Number(""Vampire Fang"") < 20 then
									if World2 then
										if game.Workspace.Enemies:FindFirstChild(""Vampire"") then
											for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
												if v:FindFirstChild(""Humanoid"") and v.Name == ""Vampire"" then
													repeat wait()
														if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
															local args = {
																[1] = ""Buso""
															}
															game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
														end
														EquipWeapon(_G.Selected_Weapon)
														FastAttackSpeed = true
														StartMagnet = true
														PosMon = v.HumanoidRootPart.CFrame
														v.Humanoid.JumpPower = 0
														v.Humanoid.WalkSpeed = 0
														v.HumanoidRootPart.CanCollide = false
														toTargetP(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
													until not _G.START or not v.Parent or v.Humanoid.Health <= 0
												end
											end
										else
											toTargetP(CFrame.new(-6033,7, -1317))
										end
									else
										game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""TravelDressrosa"")
									end
								end 
							elseif Check_Number(""Demonic Wisp"") < 20 then
								if World3 then
									if game.Workspace.Enemies:FindFirstChild(""Demonic Soul"") then
										for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
											if v:FindFirstChild(""Humanoid"") and v.Name == ""Demonic Soul"" then
												repeat wait()
													if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
														local args = {
															[1] = ""Buso""
														}
														game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
													end
													EquipWeapon(_G.Selected_Weapon)
													FastAttackSpeed = true
													StartMagnet = true
													PosMon = v.HumanoidRootPart.CFrame
													v.Humanoid.JumpPower = 0
													v.Humanoid.WalkSpeed = 0
													v.HumanoidRootPart.CanCollide = false
													toTargetP(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
												until not _G.START or not v.Parent or v.Humanoid.Health <= 0
											end
										end
									else
										toTargetP(CFrame.new(-9507,172,6158))
									end
								else
									game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""TravelZou"")
								end
							end
						end
					end
				 end
				if _G.START2 and game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""BuySanguineArt"", true) == 1 then
					if (game.Players.LocalPlayer.Backpack:FindFirstChild(""Sanguine Art"") or game.Players.LocalPlayer.Character:FindFirstChild(""Sanguine Art"")) then
						if World3 then
							if game:GetService(""Workspace"").Enemies:FindFirstChild(""Reborn Skeleton"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""Living Zombie"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""Demonic Soul"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""Posessed Mummy"") then
								for i,v in pairs(game:GetService(""Workspace"").Enemies:GetChildren()) do
									if v.Name == ""Reborn Skeleton"" or v.Name == ""Living Zombie"" or v.Name == ""Demonic Soul"" or v.Name == ""Posessed Mummy"" then
										if v:FindFirstChild(""Humanoid"") and v:FindFirstChild(""HumanoidRootPart"") and v.Humanoid.Health > 0 then
											repeat wait()
												FastAttackSpeed = true
												StartMagnet = true
												if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
													game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""Buso"")
												end
												EquipWeapon(_G.Selected_Weapon)
												PosMon = v.HumanoidRootPart.CFrame
												v.HumanoidRootPart.Size = Vector3.new(60,60,60)
												v.Humanoid.JumpPower = 0
												v.Humanoid.WalkSpeed = 0
												v.HumanoidRootPart.CanCollide = false
												v.Humanoid:ChangeState(11)
												toTargetP(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
											until not _G.START or v.Humanoid.Health <= 0 or not v.Parent or v.Humanoid.Health <= 0
											StartMagnet = false
											FastAttack = false
										end
									end
								end
							else
								toTargetP(CFrame.new(-9504.8564453125, 172.14292907714844, 6057.259765625))
							end
						else
							game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""TravelZou"")
						end
					else
						game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""BuySanguineArt"")
					end
				end
			end
		end)
	end)
	spawn(function()
		while wait() do
			if _G.Auto_Cake_Prince then
				pcall(function()
					if _G.Enable_Spawn_Cake then
						if KillMob == 0 then
							game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(""CakePrinceSpawner"",true)
						end
					end
					if game.ReplicatedStorage:FindFirstChild(""Cake Prince"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""Cake Prince"") then
						if game:GetService(""Workspace"").Enemies:FindFirstChild(""Cake Prince"") then
							for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
								if _G.Auto_Cake_Prince and v.Name == ""Cake Prince"" and v:FindFirstChild(""HumanoidRootPart"") and v:FindFirstChild(""Humanoid"") and v.Humanoid.Health > 0 then
									repeat wait()
										if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
											local args = {
												[1] = ""Buso""
											}
											game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
										end
										EquipWeapon(_G.SelectToolWeapon)
										FastAttackSpeed = true
										v.Humanoid.JumpPower = 0
										v.Humanoid.WalkSpeed = 0
										v.HumanoidRootPart.CanCollide = false
										toTargetP(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
									until not _G.Auto_Cake_Prince or not v.Parent or v.Humanoid.Health <= 0
									FastAttackSpeed = false
									StartMagnet =false
								end
							end
						else
							if game:GetService(""Workspace"").Map.CakeLoaf.BigMirror.Other.Transparency == 0 and (CFrame.new(-1990.672607421875, 4532.99951171875, -14973.6748046875).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 2000 then
								FastAttackSpeed = false
								Questtween = toTargetP(CFrame.new(-2151.82153, 149.315704, -12404.9053))
								if (CFrame.new(-2151.82153, 149.315704, -12404.9053).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 300 then
									if Questtween then Questtween:Stop() end
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2151.82153, 149.315704, -12404.9053)
									wait(.1)
								end
							end 
						end
					else
						if game:GetService(""Workspace"").Enemies:FindFirstChild(""Cookie Crafter"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""Cake Guard"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""Baking Staff"") or game:GetService(""Workspace"").Enemies:FindFirstChild(""Head Baker"") then
							for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
								if (v.Name == ""Cookie Crafter"" or v.Name == ""Cake Guard"" or v.Name == ""Baking Staff"" or v.Name == ""Head Baker"") and v:FindFirstChild(""HumanoidRootPart"") and v:FindFirstChild(""Humanoid"") and v.Humanoid.Health > 0 then
									repeat wait()
										if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude > 300 then
											Farmtween = toTargetP(v.HumanoidRootPart.CFrame)
										elseif (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 300 then
											if Farmtween then
												Farmtween:Stop()
											end
											if not game.Players.LocalPlayer.Character:FindFirstChild(""HasBuso"") then
												local args = {
													[1] = ""Buso""
												}
												game:GetService(""ReplicatedStorage"").Remotes.CommF_:InvokeServer(unpack(args))
											end
											EquipWeapon(_G.SelectToolWeapon)
											FastAttackSpeed = true
											StartMagnet = true
											PosMon = v.HumanoidRootPart.CFrame
											v.Humanoid.JumpPower = 0
											v.Humanoid.WalkSpeed = 0
											v.HumanoidRootPart.CanCollide = false
											toTargetP(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
										end
									until not _G.Auto_Cake_Prince or not v.Parent or v.Humanoid.Health <= 0
									StartMagnet = false
									FastAttackSpeed = false
								end
							end
						else
							Questtween = toTargetP(CFrame.new(-2077, 252, -12373))
							if (CFrame.new(-2077, 252, -12373).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 200 then
								if Questtween then Questtween:Stop() end
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2077, 252, -12373)
							end
						end
					end
				end)
			end
		end
	end)
	task.spawn(function()
		while wait() do
			for i,v in pairs(game:GetService(""Workspace"")[""_WorldOrigin""]:GetChildren()) do
				pcall(function()
					if v.Name == (""CurvedRing"") or v.Name == (""SlashHit"") or v.Name == (""SwordSlash"") or v.Name == (""SlashTail"") or v.Name == (""Sounds"") then
						v:Destroy()
					end
				end)
			end
		end
	end)
	local CombatFramework = require(game:GetService(""Players"").LocalPlayer.PlayerScripts:WaitForChild(""CombatFramework""))
	local CombatFrameworkR = getupvalues(CombatFramework)[2]
	local RigController = require(game:GetService(""Players"")[""LocalPlayer""].PlayerScripts.CombatFramework.RigController)
	local RigControllerR = getupvalues(RigController)[2]
	local realbhit = require(game.ReplicatedStorage.CombatFramework.RigLib)
	local cooldownfastattack = tick()
	function CurrentWeapon()
		local ac = CombatFrameworkR.activeController
		local ret = ac.blades[1]
		if not ret then return game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Name end
		pcall(function()
			while ret.Parent~=game.Players.LocalPlayer.Character do ret=ret.Parent end
		end)
		if not ret then return game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Name end
		return ret
	end
	function getAllBladeHits(Sizes)
		local Hits = {}
		local Client = game.Players.LocalPlayer
		local Enemies = game:GetService(""Workspace"").Enemies:GetChildren()
		for i=1,#Enemies do local v = Enemies[i]
			local Human = v:FindFirstChildOfClass(""Humanoid"")
			if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
				table.insert(Hits,Human.RootPart)
			end
		end
		return Hits
	end
	function AttackFunction()
		local ac = CombatFrameworkR.activeController
		if ac and ac.equipped then
			for indexincrement = 1, 1 do
				local bladehit = getAllBladeHits(60)
				if #bladehit > 0 then
					local AcAttack8 = debug.getupvalue(ac.attack, 5)
					local AcAttack9 = debug.getupvalue(ac.attack, 6)
					local AcAttack7 = debug.getupvalue(ac.attack, 4)
					local AcAttack10 = debug.getupvalue(ac.attack, 7)
					local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
					local NumberAc13 = AcAttack7 * 798405
					(function()
						NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
						AcAttack8 = math.floor(NumberAc12 / AcAttack9)
						AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
					end)()
					AcAttack10 = AcAttack10 + 1
					debug.setupvalue(ac.attack, 5, AcAttack8)
					debug.setupvalue(ac.attack, 6, AcAttack9)
					debug.setupvalue(ac.attack, 4, AcAttack7)
					debug.setupvalue(ac.attack, 7, AcAttack10)
					for k, v in pairs(ac.animator.anims.basic) do
						v:Play(0.01,0.01,0.01)
					end   
								  
					if game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"") and ac.blades and ac.blades[1] then 
						game:GetService(""ReplicatedStorage"").RigControllerEvent:FireServer(""weaponChange"",tostring(CurrentWeapon()))
						game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
						game:GetService(""ReplicatedStorage"").RigControllerEvent:FireServer(""hit"", bladehit, 2, """") 
					end
				end
			end
		end
	end
	local x = game.Players.LocalPlayer
	local c = game:GetService(""ReplicatedStorage"")
	local Q = require(x.PlayerScripts.CombatFramework);
	local Y = getupvalues(Q)[2];
	local C = require(game.ReplicatedStorage.Util.CameraShaker):Stop();
	if game:GetService(""ReplicatedStorage"").Util.Sound:FindFirstChild(""Storage"") then
		game:GetService(""ReplicatedStorage"").Util.Sound:FindFirstChild(""Storage""):Remove()
	end
	function Maxincrement()
		local H = #Y.activeController.anims.basic;
		return H;
	end;
	coroutine.wrap(function()
		task.spawn(function()
			xpcall(function()
				local ac = CombatFrameworkR.activeController
				ac:attack()
			end, function(x)
				print(""[ERROR] Fast Attack: ""..x)
			end)
		end)
	end)()
	coroutine.wrap(function()
		while task.wait() do
			local ac = CombatFrameworkR.activeController
			if ac and ac.equipped then
				if FastAttackSpeed and _G.FAST_ATTACK then
					AttackFunction()
					if tick() - cooldownfastattack > .3 then 
						wait(0.1) 
						cooldownfastattack = tick()
					end
				elseif FastAttackSpeed and _G.FAST_ATTACK == false then
					if ac.hitboxMagnitude ~= 55 then
						ac.hitboxMagnitude = 55
					end
					ac:attack()
				end
			end
		end
	end)()
	getgenv().NoDieEffect = true 
	if getgenv().NoDieEffect then
		if game:GetService(""ReplicatedStorage"").Effect.Container:FindFirstChild(""Death"") then
			game:GetService(""ReplicatedStorage"").Effect.Container.Death:Destroy()
		end
		if game:GetService(""ReplicatedStorage"").Effect.Container:FindFirstChild(""Respawn"") then
			game:GetService(""ReplicatedStorage"").Effect.Container.Respawn:Destroy()
		end
	end
	-- [Anti AFK]
	
	game:GetService(""Players"").LocalPlayer.Idled:connect(function()
		game:GetService(""VirtualUser""):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait(1)
		game:GetService(""VirtualUser""):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)
	spawn(function()
		while true do wait()
			getgenv().rejoin = game:GetService(""CoreGui"").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(Kick)
				if not _G.TP_Ser and _G.Rejoin then
					if Kick.Name == 'ErrorPrompt' and Kick:FindFirstChild('MessageArea') and Kick.MessageArea:FindFirstChild(""ErrorFrame"") then
						game:GetService(""TeleportService""):Teleport(game.PlaceId)
						wait(50)
					end
				end
			end)
		end
	end)
	print(""Rejoin Load"")
	return OrionLib
	else
		game.Players.LocalPlayer:Kick(""You Playing in Old Version Please Contact Andmin"")
	end"
R0EjHAEk,Untitled,Will_Robinson,Autohotkey,Sunday 25th of February 2024 04:38:46 AM CDT,"#Requires AutoHotkey 2.0+
#SingleInstance Force
SetKeyDelay(,25)

*~::KeyLoop(1)

KeyLoop(Option?){
  Static Toggle:=0
  Static KeyArr:=[]
  If IsSet(Option)
    Toggle:=!Toggle
  If Toggle{
    Loop Random(1,10){
      If !KeyArr.Length
        Loop Parse ""abcdefghijklmnopqrstuvwxyz0123456789""
          KeyArr.Push(A_LoopField)
      SendEvent(""{Blind}{"" KeyArr.RemoveAt(Random(1,KeyArr.Length)) ""}"")
    }
    SetTimer(%A_ThisFunc%,""-"" Random(500,2000))
  }
}"
jNx9xfDd,Untitled,sucksuck,Lua,Sunday 25th of February 2024 04:33:36 AM CDT,"--- Tables, Functions & Variables ---
Brew = {
    [""Services""] = {
        [""Players""] = game:GetService(""Players""),
        [""SoundService""] = game:GetService(""SoundService""),
        [""ReplicatedStorage""] = game:GetService(""ReplicatedStorage""),
        [""HttpService""] = game:GetService(""HttpService""),
        [""UserInputService""] = game:GetService(""UserInputService""),
        ['MarketplaceService'] = game:GetService(""MarketplaceService"")
    },

    [""Reach""] = {
        [""Enabled""] = false,
        [""Magnitude""] = Vector3.new(1, 0.8, 4),
        [""Method""] = ""Spoof"",
        [""SelectionBox""] = false,
        [""SelectionBoxMethod""] = ""Box"",
        [""SelectionBoxColor""] = Color3.fromRGB(0, 0, 0)
    },

    [""Character""] = {
        [""cWalkspeed""] = 16,
        [""cJumppower""] = 50,
        [""Spin""] = false
    },

    [""Features""] = {
        [""StaffDetection""] = true,
        [""Autoclick""] = false
    },

    [""Libraries""] = {
        [""Notifications""] = loadstring(game:HttpGet(""https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua""))()
    }
}

Player = Brew.Services.Players.LocalPlayer

function Brew:WaitForChildOfClass(parents, className, timeout)
    local startTime = tick()
    timeout = timeout or 9e9
    while tick() - startTime < timeout do
        for _, parent in pairs(parents) do
            for _, child in pairs(parent:GetChildren()) do
                if child:IsA(className) then
                    return child
                end
            end
        end
        wait(0.01)
    end
    return nil
end

function Brew:Spoof(Instance, Property, Value)
    local b
    b = hookmetamethod(game, ""__index"", function(A, B)
        if not checkcaller() then
            if A == Instance then
                local filter = string.gsub(tostring(B), ""\0"", """")
                if filter == Property then
                    return Value
                end
            end
        end
        return b(A, B)
    end)
end

function Brew:disableConnection(Connection)
    for i, v in pairs(getconnections(Connection)) do
        v:Disable()
    end
end

function Brew:Async(func)
    task.spawn(function()
        func()
    end)
end

function Brew:Notify(title, description, duration)
    duration = duration or 3
    Brew.Libraries.Notifications.Notify({Title=title, Description=description, Duration=tonumber(duration)})
end

function Brew:DetermineOS()
    if Brew.Services[""UserInputService""].TouchEnabled and not Brew.Services[""UserInputService""].KeyboardEnabled and not Brew.Services[""UserInputService""].MouseEnabled then
        return ""Mobile""
    elseif not Brew.Services[""UserInputService""].TouchEnabled and Brew.Services[""UserInputService""].KeyboardEnabled and Brew.Services[""UserInputService""].MouseEnabled then
        return ""PC""
    end
end

function Brew:getSword()
    return Brew:WaitForChildOfClass({Player.Character, Player.Backpack}, ""Tool"")
end

function Brew:getHitbox()
    for i, v in pairs(Brew:getSword():GetDescendants()) do
        if v:FindFirstChildOfClass(""TouchTransmitter"") then
            v.Massless = true
            return v
        end
    end
end

function Brew.Reach:undoReach()
    Brew.Reach.Enabled = false
    Brew:getSword()
    Brew:disableConnection(Brew:getHitbox():GetPropertyChangedSignal(""Size""))
    Brew:Spoof(Brew:getHitbox(), ""Size"", Vector3.new(1, 0.8, 4))
    Brew:getHitbox().Size = Vector3.new(1, 0.8, 4)
end

function Brew.Reach:undoVisual()
    Brew.Reach.SelectionBox = false
    if Brew:getHitbox():FindFirstChildOfClass(""SelectionBox"") then
        Brew:getHitbox():FindFirstChildOfClass(""SelectionBox""):Destroy()
    end
end

function Brew.Reach:doReach()
    if Brew.Reach.Method == ""Spoof"" then
        Brew.Reach.Enabled = true
        Brew:getSword()
        Brew:disableConnection(Brew:getHitbox():GetPropertyChangedSignal(""Size""))
        Brew:Spoof(Brew:getHitbox(), ""Size"", Vector3.new(1, 0.8, 4))
        Brew:getHitbox().Size = Brew.Reach.Magnitude

        while Brew.Reach.Enabled and Brew.Reach.Method == ""Spoof"" do
            Brew:getHitbox().Size = Brew.Reach.Magnitude
            Brew:Async(function()
                for i, v in pairs(Brew.Services.Players:GetChildren()) do
                    local Character = v.Character
                    if Character.HumanoidRootPart and Character.Name ~= Player.Name then
                        if (Character.HumanoidRootPart.Position - Brew:getHitbox().Position).Magnitude <= Brew.Reach.Magnitude.X then
                            Brew:Async(function()
                                for index, limb in pairs(Character:GetChildren()) do
                                    if limb:IsA(""BasePart"") then
                                        Brew:Async(function()
                                            for x = 0, 15 do
                                                firetouchinterest(limb, Brew:getHitbox(), 0)
                                                wait()
                                                firetouchinterest(limb, Brew:getHitbox(), 1)
                                            end
                                        end)
                                    end
                                end
                            end)
                        end
                    end
                end
            end)
            wait()
        end
    else
        Brew:Notify(""Brew"", ""That method is not supported yet."", 3)
    end
end

function Brew.Reach:doVisual()
    Brew.Reach.SelectionBox = true
    if Brew.Reach.SelectionBoxMethod == ""Box"" then
        local Box = Instance.new(""SelectionBox"", Brew:getHitbox())
        Box.Adornee = Brew:getHitbox()
        Box.LineThickness = 0.01
        Box.Color3 = Brew.Reach.SelectionBoxColor
        Brew:Async(function()
            Box.Color3 = Brew.Reach.SelectionBoxColor
        end)
    else
        Brew:Notify(""Brew"", ""Not supported."", 3)
    end
end

function Brew.Character:doSpin()
    Brew.Character.Spin = true
    if not Player.Character:WaitForChild(""HumanoidRootPart""):FindFirstChildOfClass(""BodyAngularVelocity"") then
        local Velocity = Instance.new(""BodyAngularVelocity"", Player.Character:WaitForChild(""HumanoidRootPart""))
        Velocity.AngularVelocity = Vector3.new(0, 15, 0)
        Velocity.MaxTorque = Vector3.new(0, 9e9, 0)
        Velocity.P = 1250
    end
end

function Brew.Character.undoSpin()
    Brew.Character.Spin = false
    if Player.Character:WaitForChild(""HumanoidRootPart""):FindFirstChildOfClass(""BodyAngularVelocity"") then
        Player.Character:WaitForChild(""HumanoidRootPart""):FindFirstChildOfClass(""BodyAngularVelocity""):Destroy()
    end
end

--- Fix Settings ---
Player.Character.Humanoid.Died:Connect(function()
    if DamageAmplify then
        DamageAmplify:Disconnect()
    end
end)

Player.CharacterAdded:Connect(function()
    Brew:getSword()
    wait(.25)
    Brew:getHitbox().Massless = true
    Brew:Async(function()
        if Brew.Reach.Enabled then
            Brew.Reach:doReach()
        end
    end)
    Brew:Async(function()
        if Brew.Reach.SelectionBox then
            Brew.Reach:doVisual()
        end
    end)
    Brew:Async(function()
        if Brew.Character.Spin then
            Brew.Character:doSpin()
        end
    end)
    Brew:Async(function()
        Brew:Spoof(Player.Character.Humanoid, ""WalkSpeed"", 16)
        Player.Character:WaitForChild(""Humanoid"").WalkSpeed = Brew.Character.cWalkspeed
    end)
end)

local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/Rain-Design/Libraries/main/Shaman/Library.lua'))()
    local Flags = Library.Flags
    local Window = Library:Window({
        Text = ""Brew | v3.04""
    })

    local ModTab = Window:Tab({
        Text = ""Mods""
    })
    local CharacterTab = Window:Tab({
        Text = ""Character""
    })
    local AdvancedTab = Window:Tab({
        Text = ""Advanced""
    })
    local ReachSection = ModTab:Section({
        Text = ""Reach""
    })
    local VisualSection = ModTab:Section({
        Text = ""Visuals""
    })
    local CharacterSection = CharacterTab:Section({
        Text = ""Character""
    })
    local AdvancedSection = AdvancedTab:Section({
        Text = ""Advanced""
    })

    ReachToggle = ReachSection:Toggle({
        Text = ""Enabled"",
        Tooltip = ""Whether reach is enabled or not."",
        Callback = function(v)
            if v == true or v == ""true"" then
                Brew:Async(function()
                    Brew.Reach:doReach()
                end)
                Brew:Notify('Brew', ""Reach Enabled"")
            else
                Brew.Reach:undoReach()
                Brew:Notify('Brew', ""Reach Disabled"")
            end
        end
    })

    ReachMethodDropdown = ReachSection:Dropdown({
        Text = ""Dropdown"",
        List = {""Spoof"", ""Root""},
        Flag = ""Choosen"",
        Tooltip = ""What type of reach method you use."",
        Callback = function(v)
            Brew.Reach.Method = v
            Brew:Notify(""Brew"", ""Set method to ""..v, 2)
        end
    })

    ReachSection:Slider({
        Text = ""Reach Magnitude"",
        Default = 8,
        Minimum = 0,
        Maximum = 25,
        Flag = ""SliderFlag"",
        Tooltip = ""Legit: 6-8, Blatant: 25"",
        Callback = function(v)
            Brew.Reach.Magnitude = Vector3.new(tonumber(v), tonumber(v), tonumber(v))
        end
    })

    VisualSection:Toggle({
        Text = ""Enabled"",
        Tooltip = ""Whether visuals is enabled or not."",
        Callback = function(v)
            if v == true or v == ""true"" then
                Brew:Async(function()
                    Brew.Reach:doVisual()
                end)
                Brew:Notify('Brew', ""Visual Enabled"")
            else
                Brew.Reach:undoVisual()
                Brew:Notify('Brew', ""Visual Disabled"")
            end
        end
    })

    VisualSection:Dropdown({
        Text = ""Dropdown"",
        List = {""Box"", ""Sphere""},
        Flag = ""Choosen"",
        Tooltip = ""What type of shape you use."",
        Callback = function(v)
            Brew.Reach.Method = v
            Brew:Notify(""Brew"", ""Set shape to ""..v, 2)
        end
    })

    CharacterSection:Toggle({
        Text = ""Spin"",
        Tooltip = ""Whether spin is enabled or not."",
        Callback = function(v)
            if v == true or v == ""true"" then
                Brew.Character.doSpin()
                Brew:Notify('Brew', ""Spin Enabled"")
            else
                Brew.Character.undoSpin()
                Brew:Notify('Brew', ""Spin Disabled"")
            end
        end
    })

    CharacterSection:Slider({
        Text = ""Speed"",
        Default = 16,
        Minimum = 16,
        Maximum = 23,
        Flag = ""SliderFlag"",
        Tooltip = ""Edit your walkspeed."",
        Callback = function(v)
            Brew:Spoof(Player.Character.Humanoid, ""WalkSpeed"", 16)
            Brew.Character.cWalkspeed = tonumber(v)
            Player.Character.Humanoid.WalkSpeed = tonumber(v)
        end
    })

    AdvancedSection:Toggle({
        Text = ""Autoclick"",
        Tooltip = ""Automatically activates your sword."",
        Callback = function(v)
            if v == true or v == ""true"" then
                Brew.Features.Autoclick = true
                Brew:Notify('Brew', ""Autoclick Enabled"")
                while Brew.Features.Autoclick and Brew:getSword().Parent == Player.Character do
                    if Player.Character:FindFirstChild(Brew:getSword().Name) then
                        Brew:getSword():Activate()
                    end
                    wait()
                end
            else
                Brew.Features.Autoclick = false
                Brew:Notify('Brew', ""Autoclick Disabled"")
            end
        end
    })

--- Prevent Anticheat(s) ---
Brew:disableConnection(game:GetService(""ScriptContext"").Error)

if not identifyexecutor() == ""Fluxus"" then
    Brew:Notify(""Brew"", ""You are using an un-supported executor.\nUse Fluxus.""..identifyexecutor(), 3)
end

Brew:Notify(""Brew"", '['..Brew:DetermineOS()..'] Brew has loaded.', 3)
"
rXPnMb8Y,map,Nike622000,Lua,Sunday 25th of February 2024 03:53:51 AM CDT,"frameTime = .1

directions = {'right', 'down', 'left', 'up'}

pmSpawnPos = {x = 13, y = 12}
g1SpawnPos = {x = 12, y = 10}
g2SpawnPos = {x = 13, y = 10}
g3SpawnPos = {x = 14, y = 10}
g4SpawnPos = {x = 15, y = 10}
entities = {{name = 'pacman', col = colors.yellow}}

tiles = {{name = 'air', col = colors.black},
		 {name = 'wall', col = colors.blue},
		 {name = 'gate', col = colors.purple}}

map = {{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2},
{2,1,2,2,2,1,2,2,2,2,2,1,2,2,1,2,2,2,2,2,1,2,2,2,1,2},
{2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2},
{2,1,2,2,2,1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,2,2,1,2},
{2,1,1,1,1,1,2,1,1,1,1,1,2,2,1,1,1,1,1,2,1,1,1,1,1,2},
{2,2,2,2,2,1,2,2,2,2,2,1,2,2,1,2,2,2,2,2,1,2,2,2,2,2},
{2,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,2},
{2,2,2,2,2,1,2,1,2,2,2,2,3,3,2,2,2,2,1,2,1,2,2,2,2,2},
{2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2},
{2,2,2,2,2,1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,2,2,2,2},
{2,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,2},
{2,2,2,2,2,1,2,2,2,2,2,1,2,2,1,2,2,2,2,2,1,2,2,2,2,2},
{2,1,1,1,1,1,2,1,1,1,1,1,2,2,1,1,1,1,1,2,1,1,1,1,1,2},
{2,1,2,2,2,1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,2,2,1,2},
{2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2},
{2,1,2,2,2,1,2,2,2,2,2,1,2,2,1,2,2,2,2,2,1,2,2,2,1,2},
{2,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2}}
"
azHam3qg,Exam,BbJLeB,JSON,Sunday 25th of February 2024 03:16:29 AM CDT,"using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using GardenConsoleAPI.Business;
using GardenConsoleAPI.Business.Contracts;
using GardenConsoleAPI.DataAccess;
using GardenConsoleAPI.Data.Models;

namespace GardenConsoleAPI.IntegrationTests.NUnit
{
    public class IntegrationTests
    {
        private TestPlantsDbContext dbContext;
        private IPlantsManager plantsManager;

        [SetUp]
        public void SetUp()
        {
            this.dbContext = new TestPlantsDbContext();
            this.plantsManager = new PlantsManager(new PlantsRepository(this.dbContext));
        }

        [TearDown]
        public void TearDown()
        {
            this.dbContext.Database.EnsureDeleted();
            this.dbContext.Dispose();
        }

        [Test]
        public async Task AddPlantAsync_ShouldAddNewPlant()
        {
            // Arrange
            var plant = new Plant
            {
                CatalogNumber = ""001"",
                Name = ""Rose"",
                Type = ""Flower"",
                FoodType = ""Nectar""
            };

            // Act
            await this.plantsManager.AddPlantAsync(plant);

            // Assert
            var retrievedPlant = await this.plantsManager.GetSpecificAsync(""001"");
            Assert.IsNotNull(retrievedPlant);
            Assert.AreEqual(""Rose"", retrievedPlant.Name);
        }

        [Test]
        public async Task AddPlantAsync_TryToAddPlantWithInvalidCredentials_ShouldThrowException()
        {
            // Arrange
            var invalidPlant = new Plant(); // Not providing required properties

            // Act & Assert
            Assert.ThrowsAsync<Exception>(async () => await this.plantsManager.AddPlantAsync(invalidPlant));
        }

        [Test]
        public async Task DeletePlantAsync_WithValidCatalogNumber_ShouldRemovePlantFromDb()
        {
            // Arrange
            var plant = new Plant
            {
                CatalogNumber = ""001"",
                Name = ""Rose"",
                Type = ""Flower"",
                FoodType = ""Nectar""
            };
            await this.plantsManager.AddPlantAsync(plant);

            // Act
            await this.plantsManager.DeletePlantAsync(""001"");

            // Assert
            Assert.ThrowsAsync<KeyNotFoundException>(async () => await this.plantsManager.GetSpecificAsync(""001""));
        }

        [Test]
        public async Task DeletePlantAsync_TryToDeleteWithNullOrWhiteSpaceCatalogNumber_ShouldThrowException()
        {
            // Arrange & Act & Assert
            Assert.ThrowsAsync<ArgumentNullException>(async () => await this.plantsManager.DeletePlantAsync(null));
            Assert.ThrowsAsync<ArgumentNullException>(async () => await this.plantsManager.DeletePlantAsync(""""));
            Assert.ThrowsAsync<ArgumentNullException>(async () => await this.plantsManager.DeletePlantAsync("" ""));
        }

        [Test]
        public async Task GetAllAsync_WhenPlantsExist_ShouldReturnAllPlants()
        {
            // Arrange
            var plant1 = new Plant { CatalogNumber = ""001"", Name = ""Rose"", Type = ""Flower"", FoodType = ""Nectar"" };
            var plant2 = new Plant { CatalogNumber = ""002"", Name = ""Carrot"", Type = ""Vegetable"", FoodType = ""Roots"" };
            await this.plantsManager.AddPlantAsync(plant1);
            await this.plantsManager.AddPlantAsync(plant2);

            // Act
            var plants = await this.plantsManager.GetAllAsync();

            // Assert
            Assert.IsNotNull(plants);
            Assert.AreEqual(2, plants.Count());
            Assert.IsTrue(plants.Any(p => p.CatalogNumber == ""001""));
            Assert.IsTrue(plants.Any(p => p.CatalogNumber == ""002""));
        }

        [Test]
        public async Task GetAllAsync_WhenNoPlantsExist_ShouldThrowKeyNotFoundException()
        {
            // Arrange & Act & Assert
            Assert.ThrowsAsync<KeyNotFoundException>(async () => await this.plantsManager.GetAllAsync());
        }

        [Test]
        public async Task SearchByFoodTypeAsync_WithExistingFoodType_ShouldReturnMatchingPlants()
        {
            // Arrange
            var plant1 = new Plant { CatalogNumber = ""001"", Name = ""Rose"", Type = ""Flower"", FoodType = ""Nectar"" };
            var plant2 = new Plant { CatalogNumber = ""002"", Name = ""Carrot"", Type = ""Vegetable"", FoodType = ""Roots"" };
            await this.plantsManager.AddPlantAsync(plant1);
            await this.plantsManager.AddPlantAsync(plant2);

            // Act
            var plants = await this.plantsManager.SearchByFoodTypeAsync(""Roots"");

            // Assert
            Assert.IsNotNull(plants);
            Assert.AreEqual(1, plants.Count());
            Assert.AreEqual(""Carrot"", plants.First().Name);
        }

        [Test]
        public async Task SearchByFoodTypeAsync_WithNonExistingFoodType_ShouldThrowKeyNotFoundException()
        {
            // Arrange & Act & Assert
            Assert.ThrowsAsync<KeyNotFoundException>(async () => await this.plantsManager.SearchByFoodTypeAsync(""Seeds""));
        }

        [Test]
        public async Task GetSpecificAsync_WithValidCatalogNumber_ShouldReturnPlant()
        {
            // Arrange
            var plant = new Plant { CatalogNumber = ""001"", Name = ""Rose"", Type = ""Flower"", FoodType = ""Nectar"" };
            await this.plantsManager.AddPlantAsync(plant);

            // Act
            var retrievedPlant = await this.plantsManager.GetSpecificAsync(""001"");

            // Assert
            Assert.IsNotNull(retrievedPlant);
            Assert.AreEqual(""Rose"", retrievedPlant.Name);
        }

        [Test]
        public async Task GetSpecificAsync_WithInvalidCatalogNumber_ShouldThrowKeyNotFoundException()
        {
            // Arrange & Act & Assert
            Assert.ThrowsAsync<KeyNotFoundException>(async () => await this.plantsManager.GetSpecificAsync(""999""));
        }

        [Test]
        public async Task UpdateAsync_WithValidPlant_ShouldUpdatePlant()
        {
            // Arrange
            var plant = new Plant { CatalogNumber = ""001"", Name = ""Rose"", Type = ""Flower"", FoodType = ""Nectar"" };
            await this.plantsManager.AddPlantAsync(plant);

            // Act
            plant.Name = ""Lily"";
            await this.plantsManager.UpdateAsync(plant);

            // Assert
            var retrievedPlant = await this.plantsManager.GetSpecificAsync(""001"");
            Assert.IsNotNull(retrievedPlant);
            Assert.AreEqual(""Lily"", retrievedPlant.Name);
        }

        [Test]
        public async Task UpdateAsync_WithInvalidPlant_ShouldThrowValidationException()
        {
            // Arrange
            var invalidPlant = new Plant(); // Not providing required properties

            // Act & Assert
            Assert.ThrowsAsync<Exception>(async () => await this.plantsManager.UpdateAsync(invalidPlant));
        }
    }
}
"
498F17VB,Soccer Prediction Betting Tips 25022024,livebetpro,PHP,Sunday 25th of February 2024 02:57:12 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-25022024/
XhGXNme1,循环串,deezykiki,C,Sunday 25th of February 2024 02:55:32 AM CDT,"/*已知一个长度为n的字符串，判断它是否是由某个子串循环拼接而成的。
若不是，则最少要修改几个字符才能使这个字符串变成由某个子串循环拼接而成的
*/
#include<stdio.h>
#include<string.h>

int change(char* s,int len,int m)//若子串长度为m，求最少修改次数
{
	int sum = 0;//修改次数
	for(int i = 0;i < m;i++)//遍历子串
	{
		int hash[26] = {0};
		for(int t = i;t < len;t = t+m)//遍历子串某个字母相对应的其他字母
		{
			int num = s[t]-'a';//num代替某个字母
			hash[num]++;//hash对应的字母计数加一
		}
		int max=0;//求hash最大值
		for(int i = 0;i < 26;i++)
		{
			if(hash[i] > max) max = hash[i];
		}
		int ct = len/m-max;//求i对应更改次数
		sum = sum+ct;//将每个i的更改次数累计
	}
	return sum;
}

bool is_repeated_string(char* s,int n) {
    
    // 枚举拼接字符串的长度m，从1到n的一半
    for (int m = 1; m <= n / 2; m++) 
	{
        if (n % m == 0) // 判断字符串长度n是否能被拼接字符串长度m整除
		{  
            bool is_repeated = true;  // 假设字符串是由某些字符串重复拼接而成的
            // 遍历字符串，检查每个字符是否符合重复拼接的规律
            for (int i = m; i < n; i++) {
                if (s[i] != s[i % m]) { 
                    // 如果有字符不符合规律，则字符串不是重复拼接而成的
                    is_repeated = false;
                    break;
                }
            }
            if (is_repeated) {  // 如果所有字符都符合规律，则字符串是重复拼接而成的
                return true;
            }
        }
    }
}

int main()
{
	char s[600];
	while(~scanf(""%s"",&s))
	{
		int n = strlen(s);
		//判断
		if(is_repeated_string(s,n)) printf(""yes\n"");
		else //若不是，则遍历可能的m，求最少改变次数
		{
			int min,flag = 1;
			for (int m = 1; m <= n / 2; m++) 
			{
        		if (n % m == 0)
				{
					int now = change(s,n,m);
					if(flag)//将第一个值置为最小值
					{
						flag = 0;
						min = now;
					}
					else if(now < min) min = now;
				 } 
        	}
        	printf(""No,at least %d"",min);
		}
	}
}"
fG3Bh64X,solab4pb1,STANAANDREY,C,Sunday 25th of February 2024 02:54:49 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <ctype.h>
#include <sys/stat.h>
#include <string.h>

int getFD(const char *const fname, int flags, int perm) {
  int fd = open(fname, flags, perm);
  if (fd < 0) {
    perror("""");
    exit(1);
  }
  return fd;
}

void closeFD(int fd) {
  if (close(fd) < 0) {
    perror("""");
    exit(1);
  }
}

int main(int argc, char *argv[]) {

  if (argc != 4) {
    fprintf(stderr, ""Wrong usage!\n"");
    exit(1);
  }

  int fd1 = getFD(argv[1], O_RDONLY, 0);

  int lower = 0, upper = 0, digits = 0, cnt = 0;
  char ch;
  while (read(fd1, &ch, 1)) {
    if (islower(ch)) {
      lower++;
    }
    if (isupper(ch)) {
      upper++;
    }
    if (isdigit(ch)) {
      digits++;
    }
    if (ch == argv[3][0]) {
      cnt++;
    }
  }

  int dim;
  struct stat buff;
  fstat(fd1, &buff);
  dim = buff.st_size;

  int fd2 = getFD(argv[2], O_RDWR | O_CREAT, S_IWUSR | S_IRUSR);
  
  char s[30];
  sprintf(s, ""nr lower: %d\n"", lower);
  write(fd2, s, strlen(s));
  sprintf(s, ""nr upper: %d\n"", upper);
  write(fd2, s, strlen(s));
  sprintf(s, ""nr digits: %d\n"", digits);
  write(fd2, s, strlen(s));
  sprintf(s, ""nr %c: %d\n"", argv[3][0], cnt);
  write(fd2, s, strlen(s));
  sprintf(s, ""size: %d\n"", dim);
  write(fd2, s, strlen(s));
  
  closeFD(fd1);
  closeFD(fd2);
  return 0;
}
"
Hy4RUVx0,Lite3DP_Customized_00,masaakiNakamura,Arduino,Sunday 25th of February 2024 02:44:59 AM CDT,"/*

  Lite3DP S1 v1.0 - Crowd Supply campaign

  https://github.com/Lite3DP/Lite3DP-S1

  MIT License
 
  Please visit www.lite3dp.com for more information, documentation and software.

  email: lite3dp@lite3dp.com

*/

/*
  Customized
  1) Menu screen is rotated 180 deg.
  2) UV-LED is turned on while setup.
/*
 
***SELECT TO UPLOAD***

BOARD: Arduino Pro or Pro Mini

PROCESSOR: ATmega328P (5V, 16 MHz)

*/


/*
 
  Libraries used:

  SdFat: https://github.com/greiman/SdFat, MIT license

  Adafruit_GFX_AS and Adafruit_ILI9341_AS: https://github.com/Bodmer/TFT_ILI9341 (newest version)

  Original Adafruit library: https://github.com/adafruit/Adafruit_ILI9341

*/


/*

  This is a simple program so that anyone can make changes, upgrades and customizations.

  It is basically structured around a system of numbered ""screens"" for menu navigation.
  Depending on the screen, the buttons will have different functions. 

  The main functions are ""print"" and ""calibrate"".

  The possibility of customizing the motor, the final height and the threaded rod is contemplated (""For customization"" section).

  In the configuration section you can change some values such as the lift distance and the number of initial layers.

*/
////////////////////////////////////////////////////////////

// ***** FOR CUSTOMIZATION ****

// If you want to change the length of the linear guide, the threaded rod, the motor or the microsteps
// change them here and the rest of the variables will be updated.


#define Lguide 100               //Total length of linear guide (Default value : 100 mm)

#define pitch 2                  //Pitch of movement screw thread (Default value : 2 mm)

#define stepsMotorPerRev 120     //Motor steps per revolution, including gear reduction (Default value : 288 steps/rev)

#define microsteps 16             //Driver microsteps (Default value 32)


////////////////////////////////////////////////////////////

// **** CONFIGURATION PARAMETERS ****


#define hUp 3                   // Lift distance in mm (Default value: 3 mm)

#define hUpInitial 5            // Inital layers lift distance in mm (Default value: 5 mm)

#define FirstLayers 5           //Number of initial layers (Default value: 5 initial layers)

int expotime = 15;              //Starting exposure time in seconds

int iexpotime = 45;             //Starting initial exposure time in seconds

#define HighSpeed 80          //Delay in microseconds of the stepper motor pulses; higher speed at lower value (Default = 80 microseconds) 

#define LowSpeed 160           //Delay in microseconds of the stepper motor pulses; higher speed at lower value (Default = 160 microseconds)

#define updowntime 6.7          //Printing downtime in seconds. Experimental value used to calculate print times. Counted from turning off the UV light on one layer and turning on the UV light on the next one. 
                                //It must be modified if any of the configuration parameters are changed (speeds, number of initial layers, lift distance).


////////////////////////////////////////////////////////////

// Pin definition

#define PinDir 15
#define PinStep 14
#define PinEn 10

#define sclk 13
#define miso 12
#define mosi 11
#define cs   4
#define dc   3
#define rst  2

#define _sdcs 5

#define BtnUp 9

#define BtnDown 6
#define BtnOK 7
#define BtnCancel 8

#define PinEndStop 17

#define LightPin 16


///////////////////////////////////////////////

// ****LIBRARIES****

#include <Adafruit_GFX_AS.h>
#include <Adafruit_ILI9341_AS.h>
#include <SPI.h>
#include <EEPROM.h>

#include <SdFat.h>
SdFat SD;

Adafruit_ILI9341_AS tft = Adafruit_ILI9341_AS(cs, dc, rst);
#define BU_BMP 1 // Temporarily flip the TFT coords for standard Bottom-Up bit maps
#define TD_BMP 0 // Draw inverted Top-Down bitmaps in standard coord frame


///////////////////////////////////////////////

// ****GLOBAL VARIABLES****

// **Screen number**

byte screen = 1;


//**Button status**

bool edoBtnUP = HIGH;
bool edoBtnDOWN = HIGH;
bool edoBtnOK = HIGH;
bool edoBtnCANCEL = HIGH;


//**Button delay**

#define delaybutton 90


// **EndStop Lecture**

bool LectEndStop;


// **Layer Height**

float hLayer = 0.050;
int hLayerx1000 = hLayer * 1000;


// **Ascendant movement Height (mm)**

int maxheight = Lguide - 30;          //(30 mm lost due to carriage and platform)


// **Print descendant movement**

float hDown = hUp - hLayer;

float hDownInitial = hUpInitial - hLayer;

// **Steps per mm**

int StepsPerMm = stepsMotorPerRev * microsteps / pitch;


// **Calibration aditional steps**

#define maxAddDesc 3     // Additional maximum descent (Default = 3 mm)

int maxAddSteps = maxAddDesc * StepsPerMm / 80;  //Division by 80 is due to memory EEPROM; then it is multiplied again.

int stepsadditional = 0;

int stepsadditionalx80;


// **For the correct name of file**

String DirAndFile;

String FileName;

char *result = malloc(5);

int number;


//**For the layers counter**

int LayersCounter = 0;

int Layers;

String dirfoldersel;


// **For the folder´s name**

File root;

char foldersel[13];

int counter = 1;


///////////////////////////////////////////////



void setup(void) {


  pinMode (BtnUp, INPUT_PULLUP);
  pinMode (BtnDown, INPUT_PULLUP);
  pinMode (BtnCancel, INPUT_PULLUP);
  pinMode (BtnOK, INPUT_PULLUP);

  pinMode (PinDir, OUTPUT);
  pinMode (PinStep, OUTPUT);
  pinMode (PinEn, OUTPUT);

  pinMode (LightPin, OUTPUT);

  pinMode (PinEndStop, INPUT);


  digitalWrite (LightPin, LOW);
  digitalWrite (PinEn, HIGH);

  tft.init();

  screenlite3dp();  //Opening screen

  screen1();   //First menu screen

}


////////////////////////////////////////////////////

void loop() {

  edoBtnUP = digitalRead (BtnUp);
  edoBtnDOWN = digitalRead (BtnDown);
  edoBtnOK = digitalRead (BtnOK);
  edoBtnCANCEL = digitalRead (BtnCancel);

  if (edoBtnUP == LOW) {

    switch (screen) {

      case 1:
        movasc(0.05, HighSpeed);    //Allows the possibility of raising the platform
        break;

      case 11:
        folderUp(root);
        delaybtn();
        break;

      case 12:
        switch (hLayerx1000) {
          case 50:
            hLayer = 0.1;
            hLayerx1000 = hLayer * 1000;
            drawVariableFloat(161, 115, hLayer);
            adjuststeps();
            break;
        }
        delaybtn();
        break;


      case 13:
        if (expotime >= 0 && screen == 13) {
          expotime++;
          tft.fillRect(122, 112, 76, 36, ILI9341_BLACK);
          tft.setTextColor(ILI9341_WHITE);
          drawVariableInt(161, 115, expotime);
        }
        iexpotime = 3 * expotime;   // initial approximation
        delaybtn();
        break;

      case 14:
        if (iexpotime >= 0 && screen == 14) {
          iexpotime++;
          tft.fillRect(122, 112, 76, 36, ILI9341_BLACK);
          tft.setTextColor(ILI9341_WHITE);
          drawVariableInt(161, 115, iexpotime);
        }
        delaybtn();
        break;


      case 21:                                   //screen 21 is when the platform is down during calibration
        if (stepsadditional > 0) {
          stepsadditional--;
          digitalWrite(PinDir, HIGH);
          digitalWrite (PinEn, LOW);
          for (int z = 0; z < 80; z++) {
            edoBtnCANCEL = digitalRead (BtnCancel);
            digitalWrite(PinStep, HIGH);
            digitalWrite(PinStep, LOW);
            delayMicroseconds(LowSpeed);
          }
          digitalWrite (PinEn, HIGH);
        }
        break;

    }

  }

  if (edoBtnDOWN == LOW) {

    switch (screen) {

      case 1:
        break;

      case 11:
        folderDown(root);
        delaybtn();
        break;

      case 12:
        switch (hLayerx1000) {
          case 100:
            hLayer = 0.05;
            hLayerx1000 = hLayer * 1000;
            drawVariableFloat(161, 115, hLayer);
            adjuststeps();
            break;
        }
        delaybtn();
        break;

      case 13:
        if (expotime > 0 && screen == 13) {
          expotime--;
          tft.fillRect(122, 112, 76, 36, ILI9341_BLACK);
          tft.setTextColor(ILI9341_WHITE);
          drawVariableInt(161, 115, expotime);
        }
        iexpotime = 3 * expotime;   // initial approximation
        delaybtn();
        break;

      case 14:
        if (iexpotime > 0 && screen == 14) {
          iexpotime--;
          tft.fillRect(122, 112, 76, 36, ILI9341_BLACK);
          tft.setTextColor(ILI9341_WHITE);
          drawVariableInt(161, 115, iexpotime);
        }
        delaybtn();
        break;

      case 21:                                   //screen 21 is when the platform is down during calibration
        if (stepsadditional <= maxAddSteps) {
          stepsadditional++;
          digitalWrite(PinDir, LOW);
          digitalWrite (PinEn, LOW);
          for (int z = 0; z < 80; z++) {
            edoBtnCANCEL = digitalRead (BtnCancel);
            digitalWrite(PinStep, HIGH);
            digitalWrite(PinStep, LOW);
            delayMicroseconds(LowSpeed);
          }
          digitalWrite (PinEn, HIGH);
        }
        break;

    }

  }


  if (edoBtnOK == LOW) {
  
    switch (screen) {

      case 1:
        blackscreen();
        calibrate();
        screen = 21;
        break;

      case 11:
        contarlayers();
        if (LayersCounter > maxheight * 20 + 3) {
          cleanscreen();
          tft.drawCentreString(""HEIGHT EXCEEDED"", 160, 115, 2);
          delay(1200);
          screen = 11;
          screen11();
        }

        else {
          screen = 12;
          screen12();
        }
        break;

      case 12:
        screen = 13;
        screen13();
        break;

      case 13:
        screen = 14;
        screen14();
        break;

      case 14:
        screen = 15;
        screen15();
        break;

      case 15:
        switch (hLayerx1000) {

          case 50:
            Layers = LayersCounter;
            break;

          case 100:
            Layers = LayersCounter / 2;

            int resto = Layers * 2;
            resto = LayersCounter - resto;

            if (resto > 0) {
              Layers++;
            }

            break;
        }

        screen = 16;
        screen16();
        break;

      case 16:
        blackscreen();
        print();
        break;

      case 21:
        EEPROM.write (11, stepsadditional);
        movasc(50, HighSpeed);                    // 50 mm lift to make room for reading the display and tray entry.
        if (!SD.begin(_sdcs, SPI_FULL_SPEED)) {
          digitalWrite (LightPin, LOW);
          cleanscreen();
          tft.drawCentreString(""Please"", 160, 65, 2);
          tft.drawCentreString(""insert SD card"", 160, 100, 2);
          screen = 22;
        }
        else {
          digitalWrite (LightPin, LOW);
          root = SD.open(""/"");
          screen11();
          screen = 11;
        }
        break;

      case 22:
        if (!SD.begin(_sdcs, SPI_FULL_SPEED)) {
          digitalWrite (LightPin, LOW);
          cleanscreen();
          tft.drawCentreString(""Please"", 160, 65, 2);
          tft.drawCentreString(""insert SD card"", 160, 100, 2);
          screen = 22;
        }
        else {
          digitalWrite (LightPin, LOW);
          root = SD.open(""/"");
          screen11();
          screen = 11;
        }
        break;


    }

    delaybtn();

  }

  if (edoBtnCANCEL == LOW) {


    if (screen < 17 && screen > 11 ) {
      screen = 11;
      screen11();
    }

    else {
      screen = 1;
      screen1();
    }
    delaybtn();
  }


}

////////////////////////////////////////////////////////////


//***** MAIN FUNCTIONS *****

// PRINT FUNCTION

void print() {

  number = 1;
  buildfolder();
  calibrate();

  // Printing the first layers (with initial exposure time)

  for (int l = 0; l < FirstLayers; l++) {

    printname();
    digitalWrite (LightPin, HIGH);
    delayprint1();              
    delayprint1();
    delayprint1();
    delayprint1();
    digitalWrite (LightPin, LOW);
    blackscreen();
    pause();                         //allows to enter the pause function by holding down the ESC button
    movasc(hUpInitial, LowSpeed);
    delay(200);
    movdesc(hDownInitial, LowSpeed);

  }

  // Printing the rest

  for (int l = 0; l < Layers - FirstLayers; l++) {

    printname();
    digitalWrite (LightPin, HIGH);
    delayprint2();
    delayprint2();
    delayprint2();
    delayprint2();
    digitalWrite (LightPin, LOW);
    blackscreen();
    pause();                         //allows to enter the pause function by holding down the ESC button
    movasc(hUp, LowSpeed);
    delay(200);
    movdesc(hDown, LowSpeed);

  }

  screen = 17;
  screen17();

}

///////////////////////

// CALIBRATION FUNCTION

void calibrate() {

  LectEndStop = digitalRead(PinEndStop);

  if (LectEndStop != HIGH) {

    desctoendstop();

    delay(600);
    stepsadditional = EEPROM.read(11);
    stepsadditionalx80 = stepsadditional * 80;

    digitalWrite (PinEn, LOW);
    digitalWrite(PinDir, LOW);

    for (int z = 0; z < stepsadditionalx80; z++) {
      edoBtnCANCEL = digitalRead (BtnCancel);
      digitalWrite(PinStep, HIGH);
      digitalWrite(PinStep, LOW);
      delayMicroseconds(LowSpeed);
      if (edoBtnCANCEL == LOW) {
        break;
      }
    }

    digitalWrite (PinEn, HIGH);
  }
}

/////////////////////////////////////////////////////////////

// CALIBRATION AND PRINT SUPPORT FUNCTIONS

void folderDown(File dir) {
  counter++;
  for (int i = 0; i < counter; i++) {
    while (true) {
      File entry =  dir.openNextFile();
      if (! entry) {
        break;
      }
      if (entry.isDirectory()) {
        entry.getName(foldersel, 13);
        break;
      }
      entry.close();
    }
  }
  tft.fillRect(78, 130, 164, 36, ILI9341_BLACK);
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(foldersel, 161, 134, 2);
  delay(200);

}

void folderUp(File dir) {
  if (counter > 2) {
    counter --;
    for (int i = 0; i < counter; i++) {
      while (true) {
        File entry =  dir.openNextFile();
        if (! entry) {
          break;
        }
        if (entry.isDirectory()) {
          entry.getName(foldersel, 13);
          break;
        }
        entry.close();
      }
    }
    tft.fillRect(78, 130, 164, 36, ILI9341_BLACK);
    tft.setTextColor(ILI9341_WHITE);
    tft.drawCentreString(foldersel, 161, 134, 2);
    delay(200);
  }

}


void movasc (float Mm, int delaysteps) {

  long int stepsmotor = StepsPerMm * Mm;

  digitalWrite (PinEn, LOW);
  digitalWrite(PinDir, HIGH);

  for (long int x = 0; x < stepsmotor; x++) {
    edoBtnCANCEL = digitalRead (BtnCancel);
    digitalWrite(PinStep, HIGH);
    digitalWrite(PinStep, LOW);
    delayMicroseconds(delaysteps);
  }

  digitalWrite (PinEn, HIGH);
}


void movdesc (float Mm, int delaysteps) {

  long int stepsmotor = StepsPerMm * Mm;

  digitalWrite (PinEn, LOW);
  digitalWrite(PinDir, LOW);

  for (long int x = 0; x < stepsmotor; x++) {
    edoBtnCANCEL = digitalRead (BtnCancel);
    digitalWrite(PinStep, HIGH);
    digitalWrite(PinStep, LOW);
    delayMicroseconds(delaysteps);
  }
  digitalWrite (PinEn, HIGH);
}


void buildfolder() {

  DirAndFile = """";
  String folderselString = String(foldersel);
  String barra = ""/"";
  DirAndFile += barra;
  DirAndFile += folderselString;
  DirAndFile += barra;
  FileName = DirAndFile;

}

void contarlayers() {

  LayersCounter = 0;
  dirfoldersel = """";
  String folderselString2 = String(foldersel);
  number = 1;
  dirfoldersel += ""/"";
  dirfoldersel += folderselString2;
  dirfoldersel += ""/"";
  char dirfolderselChar[20];
  dirfoldersel.toCharArray(dirfolderselChar, 20);
  File dircarp = SD.open(dirfolderselChar);
  while (true) {
    File entry =  dircarp.openNextFile();
    if (! entry) {
      break;
    }
    if (entry.isDirectory()) {
    } else {
      LayersCounter ++;
    }
    entry.close();
  }
}


void delayprint1() {
  delay (iexpotime * 250);
}


void delayprint2() {
  delay (expotime * 250);
}


void printname() {
  FileName += number;
  FileName += "".bmp"";
  char NameChar[20];
  FileName.toCharArray(NameChar, 20);
  tft.setRotation(1);
  drawBMP(NameChar, 0, 0, BU_BMP);
  switch (hLayerx1000) {
    case 50:
      number ++;
      break;

    case 100:
      number = number + 2;
      break;
  }
  FileName = DirAndFile;
}


void pause() {

  edoBtnOK = digitalRead (BtnOK);
  edoBtnCANCEL = digitalRead (BtnCancel);

  if (edoBtnCANCEL == LOW) {

    float heightActual = number * 0.05;
    float heightAdd = maxheight - heightActual;
    movasc(heightAdd, HighSpeed);
    while (digitalRead (BtnOK) != LOW) {
    }
    movdesc(heightAdd, HighSpeed);
    delaybtn();

  }

}



void desctoendstop() {

  digitalWrite (PinEn, LOW);
  digitalWrite(PinDir, LOW);
  LectEndStop = digitalRead(PinEndStop);

  while (LectEndStop != HIGH) {
    LectEndStop = digitalRead(PinEndStop);
    edoBtnCANCEL = digitalRead (BtnCancel);
    digitalWrite(PinStep, HIGH);
    digitalWrite(PinStep, LOW);
    delayMicroseconds(HighSpeed);
  }
  delay(300);
}


void delaybtn() {
  delay(delaybutton);
}


void adjuststeps() {

  hDown = hUp - hLayer;
  hDownInitial = hUpInitial - hLayer;

}


////////////////////////////////////////////////////////////

// SCREENS


void screenlite3dp() {

  tft.setRotation(1);
  tft.setTextSize(2);
  blackscreen();
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(""Lite3DP"", 160, 100, 2);
  tft.fillTriangle(123, 104, 134, 104, 129, 114, ILI9341_BLUE);
  delay(2500);
  digitalWrite (LightPin, HIGH);
}

void screen1() {

  tft.setRotation(1);
  cleanscreen();
  bannerpreparation();
  tft.drawCentreString(""Prepare!"", 160, 120, 2);
  digitalWrite (LightPin, HIGH);
}


void screen11() {

  bannerprint();
  cleanscreen();
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(""SELECT FILE"", 160, 65, 2);
  tft.drawCentreString(foldersel, 161, 134, 2);
  tft.drawRect(75, 123, 170, 50, ILI9341_WHITE);
  arrows();

}


void screen12() {

  cleanscreen();
  tft.setTextColor(ILI9341_WHITE, ILI9341_BLACK);
  tft.drawCentreString(""LAYER HEIGHT"", 160, 60, 2);
  drawVariableFloat(161, 115, hLayer);
  tft.drawCentreString(""mm"", 161, 160, 2);
  rectscreen();
  arrows();

}


void screen13() {

  cleanscreen();
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(""EXPOSURE TIME"", 160, 60, 2);
  drawVariableInt(161, 115, expotime);
  tft.drawCentreString(""sec"", 161, 160, 2);
  rectscreen();
  arrows();

}


void screen14() {

  cleanscreen();
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(""INITIAL EXPOSURE"", 160, 60, 2);
  drawVariableInt(161, 115, iexpotime);
  tft.drawCentreString(""sec"", 161, 160, 2);
  rectscreen();
  arrows();
}


void screen15() {

  cleanscreen();
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(""CONFIRMATION"", 160, 55, 2);

  tft.drawString(""FOLDER:"", 20, 100, 2);
  tft.drawString(foldersel, 220, 100, 2);

  tft.drawString(""LAYER H.:"", 20, 130, 2);
  drawVariableFloat(250, 130, hLayer);

  tft.drawString(""EXP. TIME:"", 20, 160, 2);
  drawVariableInt2(220, 160, expotime);

  tft.drawString(""INITIAL EXP.:"", 20, 190, 2);
  drawVariableInt2(220, 190, iexpotime);

}


void screen16() {

  long int timelayersinitial = FirstLayers * iexpotime;
  long int quantitylayersresto = Layers - FirstLayers;
  long int timerestodelayers = quantitylayersresto * expotime;
  long int timesubebajatot = Layers * updowntime;
  long int timetotalseg = timesubebajatot + timelayersinitial + timerestodelayers;
  long int timetotalmin = timetotalseg / 60;
  int timetotalhours = timetotalmin / 60;
  int restominutes = timetotalmin - timetotalhours * 60;

  tft.setRotation(1);
  blackscreen();
  tft.setTextColor(ILI9341_WHITE);
  bannerprint();

  tft.drawCentreString(""DETAILS"", 160, 55, 2);

  tft.drawString(""TOTAL LAYERS:"", 14, 100, 2);
  drawVariableInt2(226, 100, Layers);

  tft.drawString(""DURATION:"", 14, 135, 2);
  drawVariableInt(175, 135, timetotalhours);
  tft.drawString(""h"", 195, 135, 2);
  
  drawVariableInt(248, 135, restominutes);
  tft.drawString(""min"", 272, 135, 2);
  

  tft.drawCentreString(""Insert tray and start!"", 160, 190, 2);

}


void screen17() {

  tft.setRotation(1);
  blackscreen();

  int heightup = Layers * hLayer;
  int heightremain = maxheight - heightup;

  movasc(heightremain, HighSpeed);

  while (digitalRead (BtnCancel) != LOW) {  //This is for led 13 to blink
    blackscreen();
    delay(100);
  }

}

////////////////////////////////////////////////////////////

// SCREEN SUPPORT FUNCTIONS


void drawVariableInt(int xPos, int yPos, int vartodraw) {
  
String vartodrawString = String(vartodraw);
char vartodrawChar[7];
vartodrawString.toCharArray(vartodrawChar, 7);
tft.drawCentreString(vartodrawChar, xPos, yPos, 2);

}

void drawVariableInt2(int xPos, int yPos, int vartodraw) {
  
String vartodrawString = String(vartodraw);
char vartodrawChar[7];
vartodrawString.toCharArray(vartodrawChar, 7);
tft.drawString(vartodrawChar, xPos, yPos, 2);

}

void drawVariableFloat(int xPos, int yPos, float vartodraw) {
  
String vartodrawString = String(vartodraw);
char vartodrawChar[7];
vartodrawString.toCharArray(vartodrawChar, 7);
tft.drawCentreString(vartodrawChar, xPos, yPos, 2);

}




void arrows() {

  tft.fillTriangle(260, 135, 280, 135, 270, 120, ILI9341_WHITE );  //up arrow
  tft.fillTriangle(260, 165, 280, 165, 270, 180, ILI9341_WHITE );  //down arrow
}


void rectscreen() {

  tft.drawRect(120, 110, 80, 40, ILI9341_WHITE);
}


void blackscreen() {

  digitalWrite (LightPin, LOW);
  tft.fillScreen(ILI9341_BLACK);
}


void cleanscreen() {
  tft.fillRect(0, 40, 320, 200, ILI9341_BLACK);
}



void rectblue () {

  tft.fillRect(0, 0, 320, 40, ILI9341_BLUE);
}



void bannerprint() {

  rectblue();
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(""PRINT"", 160, 6, 2);
  digitalWrite (LightPin, HIGH);
}


void bannerpreparation() {

  rectblue ();
  tft.setTextColor(ILI9341_WHITE);
  tft.drawCentreString(""Lite3DP.com"", 160, 6, 2);
}

/***************************************************************************************
** Function name:           drawBMP
** Descriptions:            draw a BMP format bitmap to the screen
***************************************************************************************/

// This function opens a Windows Bitmap (BMP) file and
// displays it at the given coordinates.  It's sped up
// by reading many pixels worth of data at a time
// (rather than pixel by pixel).  Increasing the buffer
// size makes loading a little faster but the law of
// rapidly diminishing speed improvements applies.
// Suggest 8 minimum and 85 maximum (3 x this value is
// stored in a byte = 255/3 max!)
// A value of 8 is only ~20% slower than 24 or 48!
// Note that 5 x this value of RAM bytes will be needed
// Increasing beyond 48 gives little benefit.
// Use integral division of TFT (or typical often used image)
// width for slightly better speed to avoid short buffer purging

#define BUFF_SIZE 80

void drawBMP(char *filename, int x, int y, boolean flip) {
  if ((x >= tft.width()) || (y >= tft.height())) return;
  File     bmpFile;
  int16_t  bmpWidth, bmpHeight;   // Image W+H in pixels
  //uint8_t  bmpDepth;            // Bit depth (must be 24) but we dont use this
  uint32_t bmpImageoffset;        // Start address of image data in file
  uint32_t rowSize;               // Not always = bmpWidth; may have padding
  uint8_t  sdbuffer[3 * BUFF_SIZE];    // SD read pixel buffer (8 bits each R+G+B per pixel)
  uint16_t tftbuffer[BUFF_SIZE];       // TFT pixel out buffer (16-bit per pixel)
  uint8_t  sd_ptr = sizeof(sdbuffer); // sdbuffer pointer (so BUFF_SIZE must be less than 86)
  boolean  goodBmp = false;            // Flag set to true on valid header parse
  int16_t  w, h, row, col;             // to store width, height, row and column
  //uint8_t  r, g, b;   // brg encoding line concatenated for speed so not used
  uint8_t rotation;     // to restore rotation
  uint8_t  tft_ptr = 0;  // buffer pointer

  // Check file exists and open it
  if ((bmpFile = SD.open(filename)) == NULL) {
    //  Serial.println(F(""File not found"")); // Can comment out if not needed
    return;
  }


  // Parse BMP header to get the information we need
  if (read16(bmpFile) == 0x4D42) { // BMP file start signature check
    read32(bmpFile);       // Dummy read to throw away and move on
    read32(bmpFile);       // Read & ignore creator bytes
    bmpImageoffset = read32(bmpFile); // Start of image data
    read32(bmpFile);       // Dummy read to throw away and move on
    bmpWidth  = read32(bmpFile);  // Image width
    bmpHeight = read32(bmpFile);  // Image height

    //if (read16(bmpFile) == 1) { // Number of image planes -- must be '1'
    // Only proceed if we pass a bitmap file check
    if ((read16(bmpFile) == 1) && (read16(bmpFile) == 24) && (read32(bmpFile) == 0)) { // Must be depth 24 and 0 (uncompressed format)
      //goodBmp = true; // Supported BMP format -- proceed!
      // BMP rows are padded (if needed) to 4-byte boundary
      rowSize = (bmpWidth * 3 + 3) & ~3;
      // Crop area to be loaded
      w = bmpWidth;
      h = bmpHeight;

      // We might need to alter rotation to avoid tedious pointer manipulation
      // Save the current value so we can restore it later
      rotation = tft.getRotation();
      // Use TFT SGRAM coord rotation if flip is set for 25% faster rendering
      if (flip) tft.setRotation((rotation + (flip << 2)) % 8); // Value 0-3 mapped to 4-7

      // We might need to flip and calculate new y plot coordinate
      // relative to top left corner as well...
      switch (rotation) {
        case 0:
          if (flip) y = tft.height() - y - h; break;
        case 1:
          y = tft.height() - y - h; break;
          break;
        case 2:
          if (flip) y = tft.height() - y - h; break;
          break;
        case 3:
          y = tft.height() - y - h; break;
          break;
      }

      // Set TFT address window to image bounds
      // Currently, image will not draw or will be corrputed if it does not fit
      // TODO -> efficient clipping, I don't need it to be idiot proof ;-)
      tft.setAddrWindow(x, y, x + w - 1, y + h - 1);

      // Finally we are ready to send rows of pixels, writing like this avoids slow 32 bit multiply
      for (uint32_t pos = bmpImageoffset; pos < bmpImageoffset + h * rowSize ; pos += rowSize) {
        // Seek if we need to on boundaries and arrange to dump buffer and start again
        if (bmpFile.position() != pos) {
          bmpFile.seek(pos);
          sd_ptr = sizeof(sdbuffer);
        }

        // Fill the pixel buffer and plot
        for (col = 0; col < w; col++) { // For each column...
          // Time to read more pixel data?
          if (sd_ptr >= sizeof(sdbuffer)) {
            // Push tft buffer to the display
            if (tft_ptr) {
              // Here we are sending a uint16_t array to the function
              tft.pushColors(tftbuffer, tft_ptr);
              tft_ptr = 0; // tft_ptr and sd_ptr are not always in sync...
            }
            // Finally reading bytes from SD Card
            bmpFile.read(sdbuffer, sizeof(sdbuffer));
            sd_ptr = 0; // Set buffer index to start
          }
          // Convert pixel from BMP 8+8+8 format to TFT compatible 16 bit word
          // Blue 5 bits, green 6 bits and red 5 bits (16 bits total)
          // Is is a long line but it is faster than calling a library fn for this
          tftbuffer[tft_ptr++] = (sdbuffer[sd_ptr++] >> 3) | ((sdbuffer[sd_ptr++] & 0xFC) << 3) | ((sdbuffer[sd_ptr++] & 0xF8) << 8);
        } // Next row
      }   // All rows done

      // Write any partially full buffer to TFT
      if (tft_ptr) tft.pushColors(tftbuffer, tft_ptr);
    } // End of bitmap access
  }   // End of bitmap file check
  //}     // We can close the file now

  bmpFile.close();
  //if(!goodBmp) Serial.println(F(""BMP format not recognized.""));
  tft.setRotation(rotation); // Put back original rotation
}

/***************************************************************************************
** Function name:           Support functions for drawBMP()
** Descriptions:            Read 16- and 32-bit types from the SD card file
***************************************************************************************/

// BMP data is stored little-endian, Arduino is little-endian too.
// May need to reverse subscript order if porting elsewhere.

uint16_t read16(File & f) {
  uint16_t result;
  ((uint8_t *)&result)[0] = f.read(); // LSB
  ((uint8_t *)&result)[1] = f.read(); // MSB
  return result;
}

uint32_t read32(File & f) {
  uint32_t result;
  ((uint8_t *)&result)[0] = f.read(); // LSB
  ((uint8_t *)&result)[1] = f.read();
  ((uint8_t *)&result)[2] = f.read();
  ((uint8_t *)&result)[3] = f.read(); // MSB
  return result;
}
"
8mm7Eetr,Untitled,Matqux,C,Sunday 25th of February 2024 02:42:46 AM CDT,"/***************************** Include Files *********************************/
#include ""xaxidma.h""
#include ""xparameters.h""
#include ""xdebug.h""
#include ""sleep.h""

#if defined(XPAR_UARTNS550_0_BASEADDR)
#include ""xuartns550_l.h""       /* to use uartns550 */
#endif

/******************** Constant Definitions **********************************/

/*
 * Device hardware build related constants.
 */

#define DMA_DEV_ID		XPAR_AXIDMA_0_DEVICE_ID

#ifdef XPAR_AXI_7SDDR_0_S_AXI_BASEADDR
#define DDR_BASE_ADDR		XPAR_AXI_7SDDR_0_S_AXI_BASEADDR
#elif defined (XPAR_MIG7SERIES_0_BASEADDR)
#define DDR_BASE_ADDR	XPAR_MIG7SERIES_0_BASEADDR
#elif defined (XPAR_MIG_0_C0_DDR4_MEMORY_MAP_BASEADDR)
#define DDR_BASE_ADDR	XPAR_MIG_0_C0_DDR4_MEMORY_MAP_BASEADDR
#elif defined (XPAR_PSU_DDR_0_S_AXI_BASEADDR)
#define DDR_BASE_ADDR	XPAR_PSU_DDR_0_S_AXI_BASEADDR
#endif

#ifndef DDR_BASE_ADDR
#warning CHECK FOR THE VALID DDR ADDRESS IN XPARAMETERS.H, \
		 DEFAULT SET TO 0x01000000
#define MEM_BASE_ADDR		0x01000000
#else
#define MEM_BASE_ADDR		(DDR_BASE_ADDR + 0x1000000)
#endif

#define TX_BUFFER_BASE		(MEM_BASE_ADDR + 0x00100000)
#define RX_BUFFER_BASE		(MEM_BASE_ADDR + 0x00300000)
#define RX_BUFFER_HIGH		(MEM_BASE_ADDR + 0x004FFFFF)

#define MAX_PKT_LEN		1024

#define TEST_START_VALUE	0xC

#define NUMBER_OF_TRANSFERS	1
#define POLL_TIMEOUT_COUNTER    1000000U

/**************************** Type Definitions *******************************/


/***************** Macros (Inline Functions) Definitions *********************/


/************************** Function Prototypes ******************************/

#if (!defined(DEBUG))
extern void xil_printf(const char *format, ...);
#endif

int XAxiDma_SimplePollExample(u16 DeviceId);
static int CheckData(void);

/************************** Variable Definitions *****************************/
/*
 * Device instance definitions
 */
XAxiDma AxiDma;


/*****************************************************************************/
/**
* The entry point for this example. It invokes the example function,
* and reports the execution status.
*
* @param	None.
*
* @return
*		- XST_SUCCESS if example finishes successfully
*		- XST_FAILURE if example fails.
*
* @note		None.
*
******************************************************************************/
int main()
{
	int Status;

	xil_printf(""\r\n--- Entering main() --- \r\n"");

	/* Run the poll example for simple transfer */
	Status = XAxiDma_SimplePollExample(DMA_DEV_ID);

	if (Status != XST_SUCCESS) {
		xil_printf(""XAxiDma_SimplePoll Example Failed\r\n"");
		return XST_FAILURE;
	}

	xil_printf(""Successfully ran XAxiDma_SimplePoll Example\r\n"");

	xil_printf(""--- Exiting main() --- \r\n"");

	return XST_SUCCESS;

}

#if defined(XPAR_UARTNS550_0_BASEADDR)
/*****************************************************************************/
/*
*
* Uart16550 setup routine, need to set baudrate to 9600, and data bits to 8
*
* @param	None.
*
* @return	None
*
* @note		None.
*
******************************************************************************/
static void Uart550_Setup(void)
{

	/* Set the baudrate to be predictable
	 */
	XUartNs550_SetBaud(XPAR_UARTNS550_0_BASEADDR,
			XPAR_XUARTNS550_CLOCK_HZ, 9600);

	XUartNs550_SetLineControlReg(XPAR_UARTNS550_0_BASEADDR,
			XUN_LCR_8_DATA_BITS);

}
#endif

/*****************************************************************************/
/**
* The example to do the simple transfer through polling. The constant
* NUMBER_OF_TRANSFERS defines how many times a simple transfer is repeated.
*
* @param	DeviceId is the Device Id of the XAxiDma instance
*
* @return
*		- XST_SUCCESS if example finishes successfully
*		- XST_FAILURE if error occurs
*
* @note		None
*
*
******************************************************************************/
int XAxiDma_SimplePollExample(u16 DeviceId)
{
	XAxiDma_Config *CfgPtr;
	int Status;
	int Tries = NUMBER_OF_TRANSFERS;
	int Index;
	u8 *TxBufferPtr;
	u8 *RxBufferPtr;
	u8 Value;
	int TimeOut = POLL_TIMEOUT_COUNTER;

	TxBufferPtr = (u8 *)TX_BUFFER_BASE ;
	RxBufferPtr = (u8 *)RX_BUFFER_BASE;

	/* Initialize the XAxiDma device.
	 */
	CfgPtr = XAxiDma_LookupConfig(DeviceId);
	if (!CfgPtr) {
		xil_printf(""No config found for %d\r\n"", DeviceId);
		return XST_FAILURE;
	}

	Status = XAxiDma_CfgInitialize(&AxiDma, CfgPtr);
	if (Status != XST_SUCCESS) {
		xil_printf(""Initialization failed %d\r\n"", Status);
		return XST_FAILURE;
	}

	if(XAxiDma_HasSg(&AxiDma)){
		xil_printf(""Device configured as SG mode \r\n"");
		return XST_FAILURE;
	}

	/* Disable interrupts, we use polling mode
	 */
	XAxiDma_IntrDisable(&AxiDma, XAXIDMA_IRQ_ALL_MASK,
						XAXIDMA_DEVICE_TO_DMA);
	XAxiDma_IntrDisable(&AxiDma, XAXIDMA_IRQ_ALL_MASK,
						XAXIDMA_DMA_TO_DEVICE);

	Value = TEST_START_VALUE;

	for(Index = 0; Index < MAX_PKT_LEN; Index ++) {
			TxBufferPtr[Index] = Value;

			Value = (Value + 1) & 0xFF;
	}
	/* Flush the buffers before the DMA transfer, in case the Data Cache
	 * is enabled
	 */
	Xil_DCacheFlushRange((UINTPTR)TxBufferPtr, MAX_PKT_LEN);
	Xil_DCacheFlushRange((UINTPTR)RxBufferPtr, MAX_PKT_LEN);

	for(Index = 0; Index < Tries; Index ++) {


		Status = XAxiDma_SimpleTransfer(&AxiDma,(UINTPTR) RxBufferPtr,
					MAX_PKT_LEN, XAXIDMA_DEVICE_TO_DMA);

		if (Status != XST_SUCCESS) {
			return XST_FAILURE;
		}

		Status = XAxiDma_SimpleTransfer(&AxiDma,(UINTPTR) TxBufferPtr,
					MAX_PKT_LEN, XAXIDMA_DMA_TO_DEVICE);

		if (Status != XST_SUCCESS) {
			return XST_FAILURE;
		}

		/*Wait till tranfer is done or 1usec * 10^6 iterations of timeout occurs*/
		while (TimeOut) {
			if (!(XAxiDma_Busy(&AxiDma,XAXIDMA_DEVICE_TO_DMA)) &&
			!(XAxiDma_Busy(&AxiDma,XAXIDMA_DMA_TO_DEVICE)))
				break;
			TimeOut--;
			//usleep(1U);
		}

		//Status = CheckData();
		//if (Status != XST_SUCCESS) {
			//return XST_FAILURE;
		//}

	}

	/* Test finishes successfully
	 */
	return XST_SUCCESS;
}



/*****************************************************************************/
/*
*
* This function checks data buffer after the DMA transfer is finished.
*
* @param	None
*
* @return
*		- XST_SUCCESS if validation is successful.
*		- XST_FAILURE otherwise.
*
* @note		None.
*
******************************************************************************/
static int CheckData(void)
{
	u8 *RxPacket;
	int Index = 0;
	u8 Value;

	RxPacket = (u8 *) RX_BUFFER_BASE;
	Value = TEST_START_VALUE;

	/* Invalidate the DestBuffer before receiving the data, in case the
	 * Data Cache is enabled
	 */
	Xil_DCacheInvalidateRange((UINTPTR)RxPacket, MAX_PKT_LEN);

	for(Index = 0; Index < MAX_PKT_LEN; Index++) {
		if (RxPacket[Index] != Value) {
			xil_printf(""Data error %d: %x/%x\r\n"",
			Index, (unsigned int)RxPacket[Index],
				(unsigned int)Value);

			return XST_FAILURE;
		}
		Value = (Value + 1) & 0xFF;
	}

	return XST_SUCCESS;
}"
eC4bzS73,c_cpp_properties,sriyanto,JSON,Sunday 25th of February 2024 02:15:26 AM CDT,"{
    ""configurations"": [
        {
            ""name"": ""Win32"",
            ""includePath"": [
                ""${workspaceFolder}/**""
            ],
            ""defines"": [
                ""_DEBUG"",
                ""UNICODE"",
                ""_UNICODE""
            ],
            ""compilerPath"": ""C:\\MinGW\\bin\\gcc.exe"",
            ""cStandard"": ""c17"",
            ""cppStandard"": ""gnu++17"",
            ""intelliSenseMode"": ""windows-gcc-x64""
        }
    ],
    ""version"": 4
}"
